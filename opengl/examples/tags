!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	shared/math3d.cpp	119;"	d	file:
A	shared/math3d.cpp	91;"	d	file:
A33	shared/math3d.cpp	124;"	d	file:
A33	shared/math3d.cpp	151;"	d	file:
ALL_FLAGS	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h	/^const int ALL_FLAGS		= TILED_FLAG;$/;"	m	namespace:Imf
ALL_FLAGS	shared/openexr-mac/include/OpenEXR/ImfVersion.h	/^const int ALL_FLAGS		= TILED_FLAG;$/;"	m	namespace:Imf
APIENTRY	include/GL/gl.h	111;"	d
APIENTRY	include/GL/glext.h	44;"	d
APIENTRY	include/GL/glxext.h	39;"	d
APIENTRY	shared/GLee.h	70;"	d
APIENTRY	shared/wglext.h	43;"	d
APIENTRYP	include/GL/gl.h	116;"	d
APIENTRYP	include/GL/glext.h	47;"	d
APIENTRYP	include/GL/glxext.h	42;"	d
APIENTRYP	shared/GLee.h	74;"	d
APIENTRYP	shared/wglext.h	46;"	d
APPEND_EXC	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexMacros.h	91;"	d
APPEND_EXC	shared/openexr-mac/include/OpenEXR/IexMacros.h	91;"	d
ASSERT	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexMacros.h	139;"	d
ASSERT	shared/openexr-mac/include/OpenEXR/IexMacros.h	139;"	d
AddTriangle	shared/TriangleMesh.cpp	/^void CTriangleMesh::AddTriangle(M3DVector3f verts[3], M3DVector3f vNorms[3], M3DVector2f vTexCoords[3])$/;"	f	class:CTriangleMesh
AddTriangle	shared/VBOMesh.cpp	/^void CVBOMesh::AddTriangle(M3DVector3f verts[3], M3DVector3f vNorms[3], M3DVector2f vTexCoords[3])$/;"	f	class:CVBOMesh
ApplyActorTransform	shared/glFrame.h	/^        void ApplyActorTransform(bool bRotationOnly = false)$/;"	f	class:GLFrame
ApplyCameraTransform	shared/glFrame.h	/^        inline void ApplyCameraTransform(bool bRotOnly = false)    $/;"	f	class:GLFrame
Array	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^     Array ()				{_data = 0;}$/;"	f	class:Imf::Array
Array	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^     Array (long size)			{_data = new T[size];}$/;"	f	class:Imf::Array
Array	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^class Array$/;"	c	namespace:Imf
Array	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^     Array ()				{_data = 0;}$/;"	f	class:Imf::Array
Array	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^     Array (long size)			{_data = new T[size];}$/;"	f	class:Imf::Array
Array	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^class Array$/;"	c	namespace:Imf
Array2D	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^Array2D<T>::Array2D ():$/;"	f	class:Imf::Array2D
Array2D	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^Array2D<T>::Array2D (long sizeX, long sizeY):$/;"	f	class:Imf::Array2D
Array2D	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^class Array2D$/;"	c	namespace:Imf
Array2D	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^Array2D<T>::Array2D ():$/;"	f	class:Imf::Array2D
Array2D	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^Array2D<T>::Array2D (long sizeX, long sizeY):$/;"	f	class:Imf::Array2D
Array2D	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^class Array2D$/;"	c	namespace:Imf
Atom.cpp	chapt04/Atom/Atom.cpp	1;"	F
Attribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^class Attribute$/;"	c	namespace:Imf
Attribute	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^class Attribute$/;"	c	namespace:Imf
AttributeMap	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^    typedef std::map <Name, Attribute *> AttributeMap;$/;"	t	class:Imf::Header
AttributeMap	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^    typedef std::map <Name, Attribute *> AttributeMap;$/;"	t	class:Imf::Header
Axis	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^    enum Axis { X = 0, Y = 1, Z = 2 };$/;"	g	class:Imath::Euler
Axis	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^    enum Axis { X = 0, Y = 1, Z = 2 };$/;"	g	class:Imath::Euler
B	shared/math3d.cpp	120;"	d	file:
B	shared/math3d.cpp	92;"	d	file:
B33	shared/math3d.cpp	125;"	d	file:
B33	shared/math3d.cpp	152;"	d	file:
BaseExc	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexBaseExc.h	/^class BaseExc: public std::string, public std::exception$/;"	c	namespace:Iex
BaseExc	shared/openexr-mac/include/OpenEXR/IexBaseExc.h	/^class BaseExc: public std::string, public std::exception$/;"	c	namespace:Iex
BaseType	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^    typedef T		BaseType;$/;"	t	class:Imath::Color4
BaseType	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^    typedef T		BaseType;$/;"	t	class:Imath::Shear6
BaseType	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    typedef T		BaseType;$/;"	t	class:Imath::Vec2
BaseType	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    typedef T		BaseType;$/;"	t	class:Imath::Vec3
BaseType	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^    typedef T		BaseType;$/;"	t	class:Imath::Color4
BaseType	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^    typedef T		BaseType;$/;"	t	class:Imath::Shear6
BaseType	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    typedef T		BaseType;$/;"	t	class:Imath::Vec2
BaseType	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    typedef T		BaseType;$/;"	t	class:Imath::Vec3
BeginMesh	shared/TriangleMesh.cpp	/^void CTriangleMesh::BeginMesh(GLuint nMaxVerts)$/;"	f	class:CTriangleMesh
BeginMesh	shared/VBOMesh.cpp	/^void CVBOMesh::BeginMesh(GLuint nMaxVerts)$/;"	f	class:CVBOMesh
Box	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^class Box$/;"	c	namespace:Imath
Box	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^inline Box<T>::Box()$/;"	f	class:Imath::Box
Box	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^inline Box<T>::Box(const T& minV, const T& maxV)$/;"	f	class:Imath::Box
Box	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^inline Box<T>::Box(const T& point)$/;"	f	class:Imath::Box
Box	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^class Box$/;"	c	namespace:Imath
Box	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^inline Box<T>::Box()$/;"	f	class:Imath::Box
Box	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^inline Box<T>::Box(const T& minV, const T& maxV)$/;"	f	class:Imath::Box
Box	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^inline Box<T>::Box(const T& point)$/;"	f	class:Imath::Box
Box2d	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^typedef Box <V2d> Box2d;$/;"	t	namespace:Imath
Box2d	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^typedef Box <V2d> Box2d;$/;"	t	namespace:Imath
Box2f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^typedef Box <V2f> Box2f;$/;"	t	namespace:Imath
Box2f	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^typedef Box <V2f> Box2f;$/;"	t	namespace:Imath
Box2fAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfBoxAttribute.h	/^typedef TypedAttribute<Imath::Box2f> Box2fAttribute;$/;"	t	namespace:Imf
Box2fAttribute	shared/openexr-mac/include/OpenEXR/ImfBoxAttribute.h	/^typedef TypedAttribute<Imath::Box2f> Box2fAttribute;$/;"	t	namespace:Imf
Box2i	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^typedef Box <V2i> Box2i;$/;"	t	namespace:Imath
Box2i	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^typedef Box <V2i> Box2i;$/;"	t	namespace:Imath
Box2iAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfBoxAttribute.h	/^typedef TypedAttribute<Imath::Box2i> Box2iAttribute;$/;"	t	namespace:Imf
Box2iAttribute	shared/openexr-mac/include/OpenEXR/ImfBoxAttribute.h	/^typedef TypedAttribute<Imath::Box2i> Box2iAttribute;$/;"	t	namespace:Imf
Box2s	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^typedef Box <V2s> Box2s;$/;"	t	namespace:Imath
Box2s	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^typedef Box <V2s> Box2s;$/;"	t	namespace:Imath
Box3d	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^typedef Box <V3d> Box3d;$/;"	t	namespace:Imath
Box3d	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^typedef Box <V3d> Box3d;$/;"	t	namespace:Imath
Box3f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^typedef Box <V3f> Box3f;$/;"	t	namespace:Imath
Box3f	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^typedef Box <V3f> Box3f;$/;"	t	namespace:Imath
Box3i	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^typedef Box <V3i> Box3i;$/;"	t	namespace:Imath
Box3i	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^typedef Box <V3i> Box3i;$/;"	t	namespace:Imath
Box3s	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^typedef Box <V3s> Box3s;$/;"	t	namespace:Imath
Box3s	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^typedef Box <V3s> Box3s;$/;"	t	namespace:Imath
C3c	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^typedef Color3<unsigned char>	C3c;$/;"	t	namespace:Imath
C3c	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^typedef Color3<unsigned char>	C3c;$/;"	t	namespace:Imath
C3f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^typedef Color3<float>		C3f;$/;"	t	namespace:Imath
C3f	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^typedef Color3<float>		C3f;$/;"	t	namespace:Imath
C3h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^typedef Color3<half>		C3h;$/;"	t	namespace:Imath
C3h	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^typedef Color3<half>		C3h;$/;"	t	namespace:Imath
C4c	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^typedef Color4<unsigned char>	C4c;$/;"	t	namespace:Imath
C4c	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^typedef Color4<unsigned char>	C4c;$/;"	t	namespace:Imath
C4f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^typedef Color4<float>		C4f;$/;"	t	namespace:Imath
C4f	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^typedef Color4<float>		C4f;$/;"	t	namespace:Imath
C4h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^typedef Color4<half>		C4h;$/;"	t	namespace:Imath
C4h	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^typedef Color4<half>		C4h;$/;"	t	namespace:Imath
CStopWatch	shared/stopwatch.h	/^		CStopWatch(void)	\/\/ Constructor$/;"	f	class:CStopWatch
CStopWatch	shared/stopwatch.h	/^class CStopWatch$/;"	c
CTriangleMesh	shared/TriangleMesh.cpp	/^CTriangleMesh::CTriangleMesh(void)$/;"	f	class:CTriangleMesh
CTriangleMesh	shared/TriangleMesh.h	/^class CTriangleMesh$/;"	c
CUBEFACE_NEG_X	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h	/^    CUBEFACE_NEG_X,	\/\/ -X face$/;"	e	enum:Imf::CubeMapFace
CUBEFACE_NEG_X	shared/openexr-mac/include/OpenEXR/ImfEnvmap.h	/^    CUBEFACE_NEG_X,	\/\/ -X face$/;"	e	enum:Imf::CubeMapFace
CUBEFACE_NEG_Y	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h	/^    CUBEFACE_NEG_Y,	\/\/ -Y face$/;"	e	enum:Imf::CubeMapFace
CUBEFACE_NEG_Y	shared/openexr-mac/include/OpenEXR/ImfEnvmap.h	/^    CUBEFACE_NEG_Y,	\/\/ -Y face$/;"	e	enum:Imf::CubeMapFace
CUBEFACE_NEG_Z	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h	/^    CUBEFACE_NEG_Z,	\/\/ -Z face$/;"	e	enum:Imf::CubeMapFace
CUBEFACE_NEG_Z	shared/openexr-mac/include/OpenEXR/ImfEnvmap.h	/^    CUBEFACE_NEG_Z,	\/\/ -Z face$/;"	e	enum:Imf::CubeMapFace
CUBEFACE_POS_X	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h	/^    CUBEFACE_POS_X,	\/\/ +X face$/;"	e	enum:Imf::CubeMapFace
CUBEFACE_POS_X	shared/openexr-mac/include/OpenEXR/ImfEnvmap.h	/^    CUBEFACE_POS_X,	\/\/ +X face$/;"	e	enum:Imf::CubeMapFace
CUBEFACE_POS_Y	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h	/^    CUBEFACE_POS_Y,	\/\/ +Y face$/;"	e	enum:Imf::CubeMapFace
CUBEFACE_POS_Y	shared/openexr-mac/include/OpenEXR/ImfEnvmap.h	/^    CUBEFACE_POS_Y,	\/\/ +Y face$/;"	e	enum:Imf::CubeMapFace
CUBEFACE_POS_Z	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h	/^    CUBEFACE_POS_Z,	\/\/ +Z face$/;"	e	enum:Imf::CubeMapFace
CUBEFACE_POS_Z	shared/openexr-mac/include/OpenEXR/ImfEnvmap.h	/^    CUBEFACE_POS_Z,	\/\/ +Z face$/;"	e	enum:Imf::CubeMapFace
CVBOMesh	shared/VBOMesh.cpp	/^CVBOMesh::CVBOMesh(void)$/;"	f	class:CVBOMesh
CVBOMesh	shared/VBOMesh.h	/^class CVBOMesh$/;"	c
CallBack	shared/gltools.h	/^typedef GLvoid (*CallBack)(...);            \/\/ Visual C++ style$/;"	t
CallBack	shared/gltools.h	/^typedef GLvoid (_stdcall *CallBack)();      \/\/ XCode (GNU) style$/;"	t
ChangeSize	c3.drawLine/drawLines.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	c3.drawObject/drawObject.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	c3.drawPoints/drawPoints.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	c3.drawPolygonBitmap/draw.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	c3.drawStart/draw.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	c3.drawTriangles/triangles.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	c3.scissor/draw.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	c3.template/draw.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	c4.translate/draw.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt02/bounce/bounce.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt02/glrect/glrect.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt03/lines/lines.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt03/linesw/linesw.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt03/lstipple/lstipple.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt03/lstrips/lstrips.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt03/points/points.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt03/pointsz/pointsz.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt03/pstipple/pstipple.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt03/scissor/scissor.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt03/single/single.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt03/star/star.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt03/stencil/stencil.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt03/triangle/triangle.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt04/Atom/Atom.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt04/Atom2/atom2.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt04/Ortho/ortho.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt04/Perspect/perspect.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt04/Solar/solar.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt04/SphereWorld/sphereworld.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt04/Transform/transform.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	chapt04/Transformgl/transformgl.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	helloGL/helloGL.cpp	/^void ChangeSize(int w, int h)$/;"	f
ChangeSize	template.dir/drawPoints.cpp	/^void ChangeSize(int w, int h)$/;"	f
Channel	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^struct Channel$/;"	s	namespace:Imf
Channel	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^struct Channel$/;"	s	namespace:Imf
ChannelList	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^class ChannelList$/;"	c	namespace:Imf
ChannelList	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^class ChannelList$/;"	c	namespace:Imf
ChannelListAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelListAttribute.h	/^typedef TypedAttribute<ChannelList> ChannelListAttribute;$/;"	t	namespace:Imf
ChannelListAttribute	shared/openexr-mac/include/OpenEXR/ImfChannelListAttribute.h	/^typedef TypedAttribute<ChannelList> ChannelListAttribute;$/;"	t	namespace:Imf
ChannelMap	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^    typedef std::map <Name, Channel> ChannelMap;$/;"	t	class:Imf::ChannelList
ChannelMap	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^    typedef std::map <Name, Channel> ChannelMap;$/;"	t	class:Imf::ChannelList
CharPtrIO	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIO.h	/^struct CharPtrIO$/;"	s	namespace:Imf
CharPtrIO	shared/openexr-mac/include/OpenEXR/ImfIO.h	/^struct CharPtrIO$/;"	s	namespace:Imf
Chromaticities	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChromaticities.h	/^struct Chromaticities$/;"	s	namespace:Imf
Chromaticities	shared/openexr-mac/include/OpenEXR/ImfChromaticities.h	/^struct Chromaticities$/;"	s	namespace:Imf
ChromaticitiesAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChromaticitiesAttribute.h	/^typedef TypedAttribute<Chromaticities> ChromaticitiesAttribute;$/;"	t	namespace:Imf
ChromaticitiesAttribute	shared/openexr-mac/include/OpenEXR/ImfChromaticitiesAttribute.h	/^typedef TypedAttribute<Chromaticities> ChromaticitiesAttribute;$/;"	t	namespace:Imf
Color3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::Color3 (): Vec3 <T> ()$/;"	f	class:Imath::Color3
Color3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::Color3 (T a): Vec3 <T> (a)$/;"	f	class:Imath::Color3
Color3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::Color3 (T a, T b, T c): Vec3 <T> (a, b, c)$/;"	f	class:Imath::Color3
Color3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::Color3 (const Color3 &c): Vec3 <T> (c)$/;"	f	class:Imath::Color3
Color3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::Color3 (const Vec3<S> &v): Vec3 <T> (v)$/;"	f	class:Imath::Color3
Color3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^class Color3: public Vec3 <T>$/;"	c	namespace:Imath
Color3	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::Color3 (): Vec3 <T> ()$/;"	f	class:Imath::Color3
Color3	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::Color3 (T a): Vec3 <T> (a)$/;"	f	class:Imath::Color3
Color3	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::Color3 (T a, T b, T c): Vec3 <T> (a, b, c)$/;"	f	class:Imath::Color3
Color3	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::Color3 (const Color3 &c): Vec3 <T> (c)$/;"	f	class:Imath::Color3
Color3	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::Color3 (const Vec3<S> &v): Vec3 <T> (v)$/;"	f	class:Imath::Color3
Color3	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^class Color3: public Vec3 <T>$/;"	c	namespace:Imath
Color3c	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^typedef Color3<unsigned char>	Color3c;$/;"	t	namespace:Imath
Color3c	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^typedef Color3<unsigned char>	Color3c;$/;"	t	namespace:Imath
Color3f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^typedef Color3<float>		Color3f;$/;"	t	namespace:Imath
Color3f	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^typedef Color3<float>		Color3f;$/;"	t	namespace:Imath
Color3h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^typedef Color3<half>		Color3h;$/;"	t	namespace:Imath
Color3h	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^typedef Color3<half>		Color3h;$/;"	t	namespace:Imath
Color4	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::Color4 ()$/;"	f	class:Imath::Color4
Color4	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::Color4 (T x)$/;"	f	class:Imath::Color4
Color4	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::Color4 (T x, T y, T z, T w)$/;"	f	class:Imath::Color4
Color4	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::Color4 (const Color4 &v)$/;"	f	class:Imath::Color4
Color4	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::Color4 (const Color4<S> &v)$/;"	f	class:Imath::Color4
Color4	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^template <class T> class Color4$/;"	c	namespace:Imath
Color4	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::Color4 ()$/;"	f	class:Imath::Color4
Color4	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::Color4 (T x)$/;"	f	class:Imath::Color4
Color4	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::Color4 (T x, T y, T z, T w)$/;"	f	class:Imath::Color4
Color4	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::Color4 (const Color4 &v)$/;"	f	class:Imath::Color4
Color4	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::Color4 (const Color4<S> &v)$/;"	f	class:Imath::Color4
Color4	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^template <class T> class Color4$/;"	c	namespace:Imath
Color4c	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^typedef Color4<unsigned char>	Color4c;$/;"	t	namespace:Imath
Color4c	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^typedef Color4<unsigned char>	Color4c;$/;"	t	namespace:Imath
Color4f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^typedef Color4<float>		Color4f;$/;"	t	namespace:Imath
Color4f	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^typedef Color4<float>		Color4f;$/;"	t	namespace:Imath
Color4h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^typedef Color4<half>		Color4h;$/;"	t	namespace:Imath
Color4h	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^typedef Color4<half>		Color4h;$/;"	t	namespace:Imath
Compression	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompression.h	/^enum Compression$/;"	g	namespace:Imf
Compression	shared/openexr-mac/include/OpenEXR/ImfCompression.h	/^enum Compression$/;"	g	namespace:Imf
CompressionAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompressionAttribute.h	/^typedef TypedAttribute<Compression> CompressionAttribute;$/;"	t	namespace:Imf
CompressionAttribute	shared/openexr-mac/include/OpenEXR/ImfCompressionAttribute.h	/^typedef TypedAttribute<Compression> CompressionAttribute;$/;"	t	namespace:Imf
ConstIterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^ChannelList::ConstIterator::ConstIterator (): _i()$/;"	f	class:Imf::ChannelList::ConstIterator
ConstIterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^ChannelList::ConstIterator::ConstIterator (const ChannelList::Iterator &other):$/;"	f	class:Imf::ChannelList::ConstIterator
ConstIterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^ChannelList::ConstIterator::ConstIterator$/;"	f	class:Imf::ChannelList::ConstIterator
ConstIterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^class ChannelList::ConstIterator$/;"	c	class:Imf::ChannelList
ConstIterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::ConstIterator::ConstIterator (): _i()$/;"	f	class:Imf::FrameBuffer::ConstIterator
ConstIterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::ConstIterator::ConstIterator (const FrameBuffer::Iterator &other):$/;"	f	class:Imf::FrameBuffer::ConstIterator
ConstIterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::ConstIterator::ConstIterator$/;"	f	class:Imf::FrameBuffer::ConstIterator
ConstIterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^class FrameBuffer::ConstIterator$/;"	c	class:Imf::FrameBuffer
ConstIterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::ConstIterator::ConstIterator (): _i()$/;"	f	class:Imf::Header::ConstIterator
ConstIterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::ConstIterator::ConstIterator (const Header::Iterator &other):$/;"	f	class:Imf::Header::ConstIterator
ConstIterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::ConstIterator::ConstIterator$/;"	f	class:Imf::Header::ConstIterator
ConstIterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^class Header::ConstIterator$/;"	c	class:Imf::Header
ConstIterator	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^ChannelList::ConstIterator::ConstIterator (): _i()$/;"	f	class:Imf::ChannelList::ConstIterator
ConstIterator	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^ChannelList::ConstIterator::ConstIterator (const ChannelList::Iterator &other):$/;"	f	class:Imf::ChannelList::ConstIterator
ConstIterator	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^ChannelList::ConstIterator::ConstIterator$/;"	f	class:Imf::ChannelList::ConstIterator
ConstIterator	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^class ChannelList::ConstIterator$/;"	c	class:Imf::ChannelList
ConstIterator	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::ConstIterator::ConstIterator (): _i()$/;"	f	class:Imf::FrameBuffer::ConstIterator
ConstIterator	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::ConstIterator::ConstIterator (const FrameBuffer::Iterator &other):$/;"	f	class:Imf::FrameBuffer::ConstIterator
ConstIterator	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::ConstIterator::ConstIterator$/;"	f	class:Imf::FrameBuffer::ConstIterator
ConstIterator	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^class FrameBuffer::ConstIterator$/;"	c	class:Imf::FrameBuffer
ConstIterator	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::ConstIterator::ConstIterator (): _i()$/;"	f	class:Imf::Header::ConstIterator
ConstIterator	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::ConstIterator::ConstIterator (const Header::Iterator &other):$/;"	f	class:Imf::Header::ConstIterator
ConstIterator	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::ConstIterator::ConstIterator$/;"	f	class:Imf::Header::ConstIterator
ConstIterator	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^class Header::ConstIterator$/;"	c	class:Imf::Header
CubeMap	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h	/^namespace CubeMap$/;"	n	namespace:Imf
CubeMap	shared/openexr-mac/include/OpenEXR/ImfEnvmap.h	/^namespace CubeMap$/;"	n	namespace:Imf
CubeMapFace	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h	/^enum CubeMapFace$/;"	g	namespace:Imf
CubeMapFace	shared/openexr-mac/include/OpenEXR/ImfEnvmap.h	/^enum CubeMapFace$/;"	g	namespace:Imf
DECREASING_Y	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLineOrder.h	/^    DECREASING_Y = 1,	\/\/ first scan line has highest y coordinate$/;"	e	enum:Imf::LineOrder
DECREASING_Y	shared/openexr-mac/include/OpenEXR/ImfLineOrder.h	/^    DECREASING_Y = 1,	\/\/ first scan line has highest y coordinate$/;"	e	enum:Imf::LineOrder
DEFINE_EXC	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexBaseExc.h	128;"	d
DEFINE_EXC	shared/openexr-mac/include/OpenEXR/IexBaseExc.h	128;"	d
DRI_INTERFACE_H	include/GL/internal/dri_interface.h	41;"	d
Default	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	Default	= XYZ$/;"	e	enum:Imath::Euler::Order
Default	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	Default	= XYZ$/;"	e	enum:Imath::Euler::Order
DepthToZ	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^long Frustum<T>::DepthToZ(T depth,long zmin,long zmax) const$/;"	f	class:Imath::Frustum
DepthToZ	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^long Frustum<T>::DepthToZ(T depth,long zmin,long zmax) const$/;"	f	class:Imath::Frustum
DoubleAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfDoubleAttribute.h	/^typedef TypedAttribute<double> DoubleAttribute;$/;"	t	namespace:Imf
DoubleAttribute	shared/openexr-mac/include/OpenEXR/ImfDoubleAttribute.h	/^typedef TypedAttribute<double> DoubleAttribute;$/;"	t	namespace:Imf
Draw	shared/TriangleMesh.h	/^        void Draw(void) {$/;"	f	class:CTriangleMesh
Draw	shared/VBOMesh.cpp	/^void CVBOMesh::Draw(void) {$/;"	f	class:CVBOMesh
DrawGround	chapt04/SphereWorld/sphereworld.cpp	/^void DrawGround(void)$/;"	f
DrawTorus	chapt04/Transform/transform.cpp	/^void DrawTorus(M3DMatrix44f mTransform)$/;"	f
ENVMAP_CUBE	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h	/^    ENVMAP_CUBE = 1,		\/\/ Cube map$/;"	e	enum:Imf::Envmap
ENVMAP_CUBE	shared/openexr-mac/include/OpenEXR/ImfEnvmap.h	/^    ENVMAP_CUBE = 1,		\/\/ Cube map$/;"	e	enum:Imf::Envmap
ENVMAP_LATLONG	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h	/^    ENVMAP_LATLONG = 0,		\/\/ Latitude-longitude environment map$/;"	e	enum:Imf::Envmap
ENVMAP_LATLONG	shared/openexr-mac/include/OpenEXR/ImfEnvmap.h	/^    ENVMAP_LATLONG = 0,		\/\/ Latitude-longitude environment map$/;"	e	enum:Imf::Envmap
ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB	shared/GLee.h	9555;"	d
ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB	shared/wglext.h	128;"	d
ERROR_INVALID_PIXEL_TYPE_ARB	shared/GLee.h	9554;"	d
ERROR_INVALID_PIXEL_TYPE_ARB	shared/wglext.h	127;"	d
ERROR_INVALID_PIXEL_TYPE_EXT	shared/GLee.h	9660;"	d
ERROR_INVALID_PIXEL_TYPE_EXT	shared/wglext.h	179;"	d
EXR_VERSION	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h	/^const int EXR_VERSION		= 2;$/;"	m	namespace:Imf
EXR_VERSION	shared/openexr-mac/include/OpenEXR/ImfVersion.h	/^const int EXR_VERSION		= 2;$/;"	m	namespace:Imf
EXTERN_TEMPLATE	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	414;"	d
EXTERN_TEMPLATE	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	414;"	d
EndMesh	shared/TriangleMesh.cpp	/^void CTriangleMesh::EndMesh(void)$/;"	f	class:CTriangleMesh
EndMesh	shared/VBOMesh.cpp	/^void CVBOMesh::EndMesh(void)$/;"	f	class:CVBOMesh
Envmap	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h	/^enum Envmap$/;"	g	namespace:Imf
Envmap	shared/openexr-mac/include/OpenEXR/ImfEnvmap.h	/^enum Envmap$/;"	g	namespace:Imf
EnvmapAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmapAttribute.h	/^typedef TypedAttribute<Envmap> EnvmapAttribute;$/;"	t	namespace:Imf
EnvmapAttribute	shared/openexr-mac/include/OpenEXR/ImfEnvmapAttribute.h	/^typedef TypedAttribute<Envmap> EnvmapAttribute;$/;"	t	namespace:Imf
Euler	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^Euler<T>::Euler() :$/;"	f	class:Imath::Euler
Euler	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^Euler<T>::Euler(typename Euler<T>::Order p) :$/;"	f	class:Imath::Euler
Euler	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^class Euler : public Vec3<T>$/;"	c	namespace:Imath
Euler	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^inline Euler<T>::Euler( T xi, T yi, T zi, $/;"	f	class:Imath::Euler
Euler	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^inline Euler<T>::Euler( const Matrix33<T> &M, typename Euler::Order p )$/;"	f	class:Imath::Euler
Euler	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^inline Euler<T>::Euler( const Matrix44<T> &M, typename Euler::Order p )$/;"	f	class:Imath::Euler
Euler	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^inline Euler<T>::Euler( const Vec3<T> &v, $/;"	f	class:Imath::Euler
Euler	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^inline Euler<T>::Euler(const Euler<T> &euler)$/;"	f	class:Imath::Euler
Euler	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^inline Euler<T>::Euler(const Euler<T> &euler,Order p)$/;"	f	class:Imath::Euler
Euler	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^Euler<T>::Euler() :$/;"	f	class:Imath::Euler
Euler	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^Euler<T>::Euler(typename Euler<T>::Order p) :$/;"	f	class:Imath::Euler
Euler	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^class Euler : public Vec3<T>$/;"	c	namespace:Imath
Euler	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^inline Euler<T>::Euler( T xi, T yi, T zi, $/;"	f	class:Imath::Euler
Euler	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^inline Euler<T>::Euler( const Matrix33<T> &M, typename Euler::Order p )$/;"	f	class:Imath::Euler
Euler	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^inline Euler<T>::Euler( const Matrix44<T> &M, typename Euler::Order p )$/;"	f	class:Imath::Euler
Euler	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^inline Euler<T>::Euler( const Vec3<T> &v, $/;"	f	class:Imath::Euler
Euler	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^inline Euler<T>::Euler(const Euler<T> &euler)$/;"	f	class:Imath::Euler
Euler	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^inline Euler<T>::Euler(const Euler<T> &euler,Order p)$/;"	f	class:Imath::Euler
Eulerd	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^typedef Euler<double>	Eulerd;$/;"	t	namespace:Imath
Eulerd	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^typedef Euler<double>	Eulerd;$/;"	t	namespace:Imath
Eulerf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^typedef Euler<float>	Eulerf;$/;"	t	namespace:Imath
Eulerf	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^typedef Euler<float>	Eulerf;$/;"	t	namespace:Imath
ExtensionList	shared/GLee.c	/^}ExtensionList;$/;"	t	typeref:struct:__anon8	file:
FALSE	chapt03/star/star.cpp	23;"	d	file:
FGAPI	include/GL/freeglut_std.h	104;"	d
FGAPI	include/GL/freeglut_std.h	66;"	d
FGAPI	include/GL/freeglut_std.h	79;"	d
FGAPI	include/GL/freeglut_std.h	81;"	d
FGAPI	shared/freeglut_std.h	102;"	d
FGAPI	shared/freeglut_std.h	64;"	d
FGAPI	shared/freeglut_std.h	77;"	d
FGAPI	shared/freeglut_std.h	79;"	d
FGAPIENTRY	include/GL/freeglut_std.h	105;"	d
FGAPIENTRY	include/GL/freeglut_std.h	67;"	d
FGAPIENTRY	include/GL/freeglut_std.h	77;"	d
FGAPIENTRY	shared/freeglut_std.h	103;"	d
FGAPIENTRY	shared/freeglut_std.h	65;"	d
FGAPIENTRY	shared/freeglut_std.h	75;"	d
FGUNUSED	include/GL/freeglut_std.h	606;"	d
FGUNUSED	include/GL/freeglut_std.h	608;"	d
FILM24_PACKING	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCode.h	/^	FILM24_PACKING		\/\/ packing for 24-frame film$/;"	e	enum:Imf::TimeCode::Packing
FILM24_PACKING	shared/openexr-mac/include/OpenEXR/ImfTimeCode.h	/^	FILM24_PACKING		\/\/ packing for 24-frame film$/;"	e	enum:Imf::TimeCode::Packing
FLOAT	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPixelType.h	/^    FLOAT = 2,		\/\/ float (32 bit floating point)$/;"	e	enum:Imf::PixelType
FLOAT	shared/openexr-mac/include/OpenEXR/ImfPixelType.h	/^    FLOAT = 2,		\/\/ float (32 bit floating point)$/;"	e	enum:Imf::PixelType
FREEGLUT	include/GL/freeglut_std.h	112;"	d
FREEGLUT	shared/freeglut_std.h	110;"	d
FREEGLUT_LIB_PRAGMAS	include/GL/freeglut_std.h	51;"	d
FREEGLUT_LIB_PRAGMAS	include/GL/freeglut_std.h	53;"	d
FREEGLUT_LIB_PRAGMAS	shared/freeglut_std.h	51;"	d
FREEGLUT_LIB_PRAGMAS	shared/freeglut_std.h	53;"	d
FREEGLUT_STATIC	shared/gltools.h	13;"	d
FREEGLUT_VERSION_2_0	include/GL/freeglut_std.h	114;"	d
FREEGLUT_VERSION_2_0	shared/freeglut_std.h	112;"	d
FloatAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFloatAttribute.h	/^typedef TypedAttribute<float> FloatAttribute;$/;"	t	namespace:Imf
FloatAttribute	shared/openexr-mac/include/OpenEXR/ImfFloatAttribute.h	/^typedef TypedAttribute<float> FloatAttribute;$/;"	t	namespace:Imf
FrameBuffer	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^class FrameBuffer$/;"	c	namespace:Imf
FrameBuffer	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^class FrameBuffer$/;"	c	namespace:Imf
Frustum	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^class Frustum$/;"	c	namespace:Imath
Frustum	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^inline Frustum<T>::Frustum()$/;"	f	class:Imath::Frustum
Frustum	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^inline Frustum<T>::Frustum(T n, T f, T l, T r, T t, T b, bool o)$/;"	f	class:Imath::Frustum
Frustum	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^inline Frustum<T>::Frustum(T near, T far, T fovx, T fovy, T aspect)$/;"	f	class:Imath::Frustum
Frustum	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^inline Frustum<T>::Frustum(const Frustum &f)$/;"	f	class:Imath::Frustum
Frustum	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^class Frustum$/;"	c	namespace:Imath
Frustum	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^inline Frustum<T>::Frustum()$/;"	f	class:Imath::Frustum
Frustum	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^inline Frustum<T>::Frustum(T n, T f, T l, T r, T t, T b, bool o)$/;"	f	class:Imath::Frustum
Frustum	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^inline Frustum<T>::Frustum(T near, T far, T fovx, T fovy, T aspect)$/;"	f	class:Imath::Frustum
Frustum	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^inline Frustum<T>::Frustum(const Frustum &f)$/;"	f	class:Imath::Frustum
Frustumd	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^typedef Frustum<double> Frustumd;$/;"	t	namespace:Imath
Frustumd	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^typedef Frustum<double> Frustumd;$/;"	t	namespace:Imath
Frustumf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^typedef Frustum<float>	Frustumf;$/;"	t	namespace:Imath
Frustumf	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^typedef Frustum<float>	Frustumf;$/;"	t	namespace:Imath
GLAPI	include/GL/gl.h	103;"	d
GLAPI	include/GL/gl.h	56;"	d
GLAPI	include/GL/gl.h	58;"	d
GLAPI	include/GL/gl.h	60;"	d
GLAPI	include/GL/gl.h	68;"	d
GLAPI	include/GL/gl.h	71;"	d
GLAPI	include/GL/glext.h	50;"	d
GLAPI	include/GL/glu.h	53;"	d
GLAPI	include/GL/glu.h	54;"	d
GLAPI	include/GL/glu.h	57;"	d
GLAPI	include/GL/glu.h	58;"	d
GLAPI	include/GL/glu.h	61;"	d
GLAPI	include/GL/glxext.h	45;"	d
GLAPI	shared/wglext.h	49;"	d
GLAPIENTRY	include/GL/gl.h	107;"	d
GLAPIENTRY	include/GL/gl.h	63;"	d
GLAPIENTRY	include/GL/gl.h	65;"	d
GLAPIENTRY	include/GL/gl.h	69;"	d
GLAPIENTRY	include/GL/gl.h	72;"	d
GLAPIENTRY	include/GL/glu.h	42;"	d
GLAPIENTRY	include/GL/glu.h	44;"	d
GLAPIENTRYP	include/GL/gl.h	120;"	d
GLAPIENTRYP	include/GL/glu.h	49;"	d
GLBegin	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^    GLBegin (GLenum mode)		{ glBegin (mode); }$/;"	f	class:Imath::GLBegin
GLBegin	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^class GLBegin {$/;"	c	namespace:Imath
GLBegin	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^    GLBegin (GLenum mode)		{ glBegin (mode); }$/;"	f	class:Imath::GLBegin
GLBegin	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^class GLBegin {$/;"	c	namespace:Imath
GLEE_3DFX_multisample	shared/GLee.h	571;"	d
GLEE_3DFX_tbuffer	shared/GLee.h	572;"	d
GLEE_3DFX_texture_compression_FXT1	shared/GLee.h	570;"	d
GLEE_APPLE_client_storage	shared/GLee.h	616;"	d
GLEE_APPLE_element_array	shared/GLee.h	617;"	d
GLEE_APPLE_fence	shared/GLee.h	618;"	d
GLEE_APPLE_specular_vector	shared/GLee.h	534;"	d
GLEE_APPLE_transform_hint	shared/GLee.h	535;"	d
GLEE_APPLE_vertex_array_object	shared/GLee.h	619;"	d
GLEE_APPLE_vertex_array_range	shared/GLee.h	620;"	d
GLEE_APPLE_ycbcr_422	shared/GLee.h	621;"	d
GLEE_ARB_color_buffer_float	shared/GLee.h	430;"	d
GLEE_ARB_depth_texture	shared/GLee.h	413;"	d
GLEE_ARB_draw_buffers	shared/GLee.h	428;"	d
GLEE_ARB_fragment_program	shared/GLee.h	418;"	d
GLEE_ARB_fragment_program_shadow	shared/GLee.h	427;"	d
GLEE_ARB_fragment_shader	shared/GLee.h	423;"	d
GLEE_ARB_half_float_pixel	shared/GLee.h	431;"	d
GLEE_ARB_imaging	shared/GLee.h	393;"	d
GLEE_ARB_matrix_palette	shared/GLee.h	408;"	d
GLEE_ARB_multisample	shared/GLee.h	401;"	d
GLEE_ARB_multitexture	shared/GLee.h	399;"	d
GLEE_ARB_occlusion_query	shared/GLee.h	420;"	d
GLEE_ARB_pixel_buffer_object	shared/GLee.h	433;"	d
GLEE_ARB_point_parameters	shared/GLee.h	406;"	d
GLEE_ARB_point_sprite	shared/GLee.h	426;"	d
GLEE_ARB_shader_objects	shared/GLee.h	421;"	d
GLEE_ARB_shading_language_100	shared/GLee.h	424;"	d
GLEE_ARB_shadow	shared/GLee.h	414;"	d
GLEE_ARB_shadow_ambient	shared/GLee.h	415;"	d
GLEE_ARB_texture_border_clamp	shared/GLee.h	405;"	d
GLEE_ARB_texture_compression	shared/GLee.h	404;"	d
GLEE_ARB_texture_cube_map	shared/GLee.h	403;"	d
GLEE_ARB_texture_env_add	shared/GLee.h	402;"	d
GLEE_ARB_texture_env_combine	shared/GLee.h	409;"	d
GLEE_ARB_texture_env_crossbar	shared/GLee.h	410;"	d
GLEE_ARB_texture_env_dot3	shared/GLee.h	411;"	d
GLEE_ARB_texture_float	shared/GLee.h	432;"	d
GLEE_ARB_texture_mirrored_repeat	shared/GLee.h	412;"	d
GLEE_ARB_texture_non_power_of_two	shared/GLee.h	425;"	d
GLEE_ARB_texture_rectangle	shared/GLee.h	429;"	d
GLEE_ARB_transpose_matrix	shared/GLee.h	400;"	d
GLEE_ARB_vertex_blend	shared/GLee.h	407;"	d
GLEE_ARB_vertex_buffer_object	shared/GLee.h	419;"	d
GLEE_ARB_vertex_program	shared/GLee.h	417;"	d
GLEE_ARB_vertex_shader	shared/GLee.h	422;"	d
GLEE_ARB_window_pos	shared/GLee.h	416;"	d
GLEE_ATI_draw_buffers	shared/GLee.h	623;"	d
GLEE_ATI_element_array	shared/GLee.h	604;"	d
GLEE_ATI_envmap_bumpmap	shared/GLee.h	598;"	d
GLEE_ATI_fragment_shader	shared/GLee.h	599;"	d
GLEE_ATI_map_object_buffer	shared/GLee.h	634;"	d
GLEE_ATI_pixel_format_float	shared/GLee.h	624;"	d
GLEE_ATI_pn_triangles	shared/GLee.h	600;"	d
GLEE_ATI_separate_stencil	shared/GLee.h	635;"	d
GLEE_ATI_text_fragment_shader	shared/GLee.h	615;"	d
GLEE_ATI_texture_env_combine3	shared/GLee.h	625;"	d
GLEE_ATI_texture_float	shared/GLee.h	626;"	d
GLEE_ATI_texture_mirror_once	shared/GLee.h	580;"	d
GLEE_ATI_vertex_array_object	shared/GLee.h	601;"	d
GLEE_ATI_vertex_attrib_array_object	shared/GLee.h	636;"	d
GLEE_ATI_vertex_streams	shared/GLee.h	603;"	d
GLEE_EXTERN	shared/GLee.h	77;"	d
GLEE_EXT_422_pixels	shared/GLee.h	545;"	d
GLEE_EXT_Cg_shader	shared/GLee.h	650;"	d
GLEE_EXT_abgr	shared/GLee.h	434;"	d
GLEE_EXT_bgra	shared/GLee.h	516;"	d
GLEE_EXT_bindable_uniform	shared/GLee.h	655;"	d
GLEE_EXT_blend_color	shared/GLee.h	435;"	d
GLEE_EXT_blend_equation_separate	shared/GLee.h	640;"	d
GLEE_EXT_blend_func_separate	shared/GLee.h	541;"	d
GLEE_EXT_blend_logic_op	shared/GLee.h	467;"	d
GLEE_EXT_blend_minmax	shared/GLee.h	465;"	d
GLEE_EXT_blend_subtract	shared/GLee.h	466;"	d
GLEE_EXT_clip_volume_hint	shared/GLee.h	494;"	d
GLEE_EXT_cmyka	shared/GLee.h	450;"	d
GLEE_EXT_color_matrix	shared/GLee.h	670;"	d
GLEE_EXT_color_subtable	shared/GLee.h	490;"	d
GLEE_EXT_compiled_vertex_array	shared/GLee.h	504;"	d
GLEE_EXT_convolution	shared/GLee.h	443;"	d
GLEE_EXT_coordinate_frame	shared/GLee.h	532;"	d
GLEE_EXT_copy_texture	shared/GLee.h	441;"	d
GLEE_EXT_cull_vertex	shared/GLee.h	505;"	d
GLEE_EXT_depth_bounds_test	shared/GLee.h	638;"	d
GLEE_EXT_draw_buffers2	shared/GLee.h	675;"	d
GLEE_EXT_draw_instanced	shared/GLee.h	677;"	d
GLEE_EXT_draw_range_elements	shared/GLee.h	510;"	d
GLEE_EXT_fog_coord	shared/GLee.h	530;"	d
GLEE_EXT_fragment_lighting	shared/GLee.h	678;"	d
GLEE_EXT_framebuffer_blit	shared/GLee.h	668;"	d
GLEE_EXT_framebuffer_multisample	shared/GLee.h	667;"	d
GLEE_EXT_framebuffer_object	shared/GLee.h	648;"	d
GLEE_EXT_framebuffer_sRGB	shared/GLee.h	656;"	d
GLEE_EXT_geometry_shader4	shared/GLee.h	654;"	d
GLEE_EXT_gpu_shader4	shared/GLee.h	653;"	d
GLEE_EXT_histogram	shared/GLee.h	442;"	d
GLEE_EXT_index_array_formats	shared/GLee.h	503;"	d
GLEE_EXT_index_func	shared/GLee.h	502;"	d
GLEE_EXT_index_material	shared/GLee.h	501;"	d
GLEE_EXT_index_texture	shared/GLee.h	500;"	d
GLEE_EXT_light_texture	shared/GLee.h	513;"	d
GLEE_EXT_misc_attribute	shared/GLee.h	459;"	d
GLEE_EXT_multi_draw_arrays	shared/GLee.h	529;"	d
GLEE_EXT_multisample	shared/GLee.h	573;"	d
GLEE_EXT_packed_depth_stencil	shared/GLee.h	679;"	d
GLEE_EXT_packed_float	shared/GLee.h	658;"	d
GLEE_EXT_packed_pixels	shared/GLee.h	454;"	d
GLEE_EXT_paletted_texture	shared/GLee.h	493;"	d
GLEE_EXT_pixel_buffer_object	shared/GLee.h	643;"	d
GLEE_EXT_pixel_transform	shared/GLee.h	523;"	d
GLEE_EXT_pixel_transform_color_table	shared/GLee.h	524;"	d
GLEE_EXT_point_parameters	shared/GLee.h	473;"	d
GLEE_EXT_polygon_offset	shared/GLee.h	436;"	d
GLEE_EXT_rescale_normal	shared/GLee.h	457;"	d
GLEE_EXT_scene_marker	shared/GLee.h	680;"	d
GLEE_EXT_secondary_color	shared/GLee.h	527;"	d
GLEE_EXT_separate_specular_color	shared/GLee.h	526;"	d
GLEE_EXT_shadow_funcs	shared/GLee.h	613;"	d
GLEE_EXT_shared_texture_palette	shared/GLee.h	525;"	d
GLEE_EXT_stencil_clear_tag	shared/GLee.h	681;"	d
GLEE_EXT_stencil_two_side	shared/GLee.h	614;"	d
GLEE_EXT_stencil_wrap	shared/GLee.h	544;"	d
GLEE_EXT_subtexture	shared/GLee.h	440;"	d
GLEE_EXT_texture	shared/GLee.h	437;"	d
GLEE_EXT_texture3D	shared/GLee.h	438;"	d
GLEE_EXT_texture_array	shared/GLee.h	659;"	d
GLEE_EXT_texture_buffer_object	shared/GLee.h	652;"	d
GLEE_EXT_texture_compression_dxt1	shared/GLee.h	682;"	d
GLEE_EXT_texture_compression_latc	shared/GLee.h	662;"	d
GLEE_EXT_texture_compression_rgtc	shared/GLee.h	669;"	d
GLEE_EXT_texture_compression_s3tc	shared/GLee.h	562;"	d
GLEE_EXT_texture_cube_map	shared/GLee.h	547;"	d
GLEE_EXT_texture_env	shared/GLee.h	683;"	d
GLEE_EXT_texture_env_add	shared/GLee.h	549;"	d
GLEE_EXT_texture_env_combine	shared/GLee.h	533;"	d
GLEE_EXT_texture_env_dot3	shared/GLee.h	579;"	d
GLEE_EXT_texture_filter_anisotropic	shared/GLee.h	551;"	d
GLEE_EXT_texture_integer	shared/GLee.h	660;"	d
GLEE_EXT_texture_lod_bias	shared/GLee.h	550;"	d
GLEE_EXT_texture_mirror_clamp	shared/GLee.h	639;"	d
GLEE_EXT_texture_object	shared/GLee.h	451;"	d
GLEE_EXT_texture_perturb_normal	shared/GLee.h	528;"	d
GLEE_EXT_texture_sRGB	shared/GLee.h	684;"	d
GLEE_EXT_texture_shared_exponent	shared/GLee.h	657;"	d
GLEE_EXT_timer_query	shared/GLee.h	651;"	d
GLEE_EXT_vertex_array	shared/GLee.h	458;"	d
GLEE_EXT_vertex_shader	shared/GLee.h	602;"	d
GLEE_EXT_vertex_weighting	shared/GLee.h	552;"	d
GLEE_FfdMaskSGIX	shared/GLee.h	479;"	d
GLEE_GLX_3DFX_multisample	shared/GLee.h	10156;"	d
GLEE_GLX_ARB_fbconfig_float	shared/GLee.h	10139;"	d
GLEE_GLX_ARB_multisample	shared/GLee.h	10138;"	d
GLEE_GLX_EXT_import_context	shared/GLee.h	10146;"	d
GLEE_GLX_EXT_scene_marker	shared/GLee.h	10167;"	d
GLEE_GLX_EXT_visual_info	shared/GLee.h	10141;"	d
GLEE_GLX_EXT_visual_rating	shared/GLee.h	10145;"	d
GLEE_GLX_MESA_agp_offset	shared/GLee.h	10166;"	d
GLEE_GLX_MESA_copy_sub_buffer	shared/GLee.h	10157;"	d
GLEE_GLX_MESA_pixmap_colormap	shared/GLee.h	10158;"	d
GLEE_GLX_MESA_release_buffers	shared/GLee.h	10159;"	d
GLEE_GLX_MESA_set_3dfx_mode	shared/GLee.h	10160;"	d
GLEE_GLX_NV_float_buffer	shared/GLee.h	10164;"	d
GLEE_GLX_OML_swap_method	shared/GLee.h	10162;"	d
GLEE_GLX_OML_sync_control	shared/GLee.h	10163;"	d
GLEE_GLX_SGIS_blended_overlay	shared/GLee.h	10153;"	d
GLEE_GLX_SGIS_multisample	shared/GLee.h	10140;"	d
GLEE_GLX_SGIS_shared_multisample	shared/GLee.h	10154;"	d
GLEE_GLX_SGIX_fbconfig	shared/GLee.h	10147;"	d
GLEE_GLX_SGIX_hyperpipe	shared/GLee.h	10165;"	d
GLEE_GLX_SGIX_pbuffer	shared/GLee.h	10148;"	d
GLEE_GLX_SGIX_swap_barrier	shared/GLee.h	10152;"	d
GLEE_GLX_SGIX_swap_group	shared/GLee.h	10151;"	d
GLEE_GLX_SGIX_video_resize	shared/GLee.h	10150;"	d
GLEE_GLX_SGIX_visual_select_group	shared/GLee.h	10161;"	d
GLEE_GLX_SGI_cushion	shared/GLee.h	10149;"	d
GLEE_GLX_SGI_make_current_read	shared/GLee.h	10144;"	d
GLEE_GLX_SGI_swap_control	shared/GLee.h	10142;"	d
GLEE_GLX_SGI_video_sync	shared/GLee.h	10143;"	d
GLEE_GLX_SUN_get_transparent_index	shared/GLee.h	10155;"	d
GLEE_GLX_VERSION_1_3	shared/GLee.h	10136;"	d
GLEE_GLX_VERSION_1_4	shared/GLee.h	10137;"	d
GLEE_GREMEDY_string_marker	shared/GLee.h	649;"	d
GLEE_HP_convolution_border_modes	shared/GLee.h	487;"	d
GLEE_HP_image_transform	shared/GLee.h	486;"	d
GLEE_HP_occlusion_test	shared/GLee.h	522;"	d
GLEE_HP_texture_lighting	shared/GLee.h	509;"	d
GLEE_IBM_cull_vertex	shared/GLee.h	563;"	d
GLEE_IBM_multimode_draw_arrays	shared/GLee.h	564;"	d
GLEE_IBM_rasterpos_clip	shared/GLee.h	508;"	d
GLEE_IBM_static_data	shared/GLee.h	685;"	d
GLEE_IBM_texture_mirrored_repeat	shared/GLee.h	582;"	d
GLEE_IBM_vertex_array_lists	shared/GLee.h	565;"	d
GLEE_INGR_blend_func_separate	shared/GLee.h	672;"	d
GLEE_INGR_color_clamp	shared/GLee.h	542;"	d
GLEE_INGR_interlace_read	shared/GLee.h	543;"	d
GLEE_INGR_palette_buffer	shared/GLee.h	488;"	d
GLEE_INTEL_parallel_arrays	shared/GLee.h	521;"	d
GLEE_INTEL_texture_scissor	shared/GLee.h	520;"	d
GLEE_LINK_COMPLETE	shared/GLee.h	85;"	d
GLEE_LINK_FAIL	shared/GLee.h	83;"	d
GLEE_LINK_FUNCTION	shared/GLee.c	/^typedef GLuint(*GLEE_LINK_FUNCTION)(void);$/;"	t	file:
GLEE_LINK_PARTIAL	shared/GLee.h	84;"	d
GLEE_MESAX_texture_stack	shared/GLee.h	686;"	d
GLEE_MESA_pack_invert	shared/GLee.h	641;"	d
GLEE_MESA_resize_buffers	shared/GLee.h	560;"	d
GLEE_MESA_window_pos	shared/GLee.h	561;"	d
GLEE_MESA_ycbcr_texture	shared/GLee.h	642;"	d
GLEE_NV_blend_square	shared/GLee.h	558;"	d
GLEE_NV_copy_depth_to_color	shared/GLee.h	597;"	d
GLEE_NV_depth_buffer_float	shared/GLee.h	661;"	d
GLEE_NV_depth_clamp	shared/GLee.h	608;"	d
GLEE_NV_evaluators	shared/GLee.h	583;"	d
GLEE_NV_fence	shared/GLee.h	581;"	d
GLEE_NV_float_buffer	shared/GLee.h	627;"	d
GLEE_NV_fog_distance	shared/GLee.h	556;"	d
GLEE_NV_fragment_program	shared/GLee.h	628;"	d
GLEE_NV_fragment_program2	shared/GLee.h	645;"	d
GLEE_NV_fragment_program_option	shared/GLee.h	644;"	d
GLEE_NV_framebuffer_multisample_coverage	shared/GLee.h	666;"	d
GLEE_NV_geometry_program4	shared/GLee.h	664;"	d
GLEE_NV_gpu_program4	shared/GLee.h	665;"	d
GLEE_NV_half_float	shared/GLee.h	629;"	d
GLEE_NV_light_max_exponent	shared/GLee.h	553;"	d
GLEE_NV_multisample_filter_hint	shared/GLee.h	607;"	d
GLEE_NV_occlusion_query	shared/GLee.h	609;"	d
GLEE_NV_packed_depth_stencil	shared/GLee.h	584;"	d
GLEE_NV_parameter_buffer_object	shared/GLee.h	676;"	d
GLEE_NV_pixel_data_range	shared/GLee.h	630;"	d
GLEE_NV_point_sprite	shared/GLee.h	610;"	d
GLEE_NV_primitive_restart	shared/GLee.h	631;"	d
GLEE_NV_register_combiners	shared/GLee.h	555;"	d
GLEE_NV_register_combiners2	shared/GLee.h	585;"	d
GLEE_NV_texgen_emboss	shared/GLee.h	557;"	d
GLEE_NV_texgen_reflection	shared/GLee.h	546;"	d
GLEE_NV_texture_compression_vtc	shared/GLee.h	586;"	d
GLEE_NV_texture_env_combine4	shared/GLee.h	559;"	d
GLEE_NV_texture_expand_normal	shared/GLee.h	632;"	d
GLEE_NV_texture_rectangle	shared/GLee.h	587;"	d
GLEE_NV_texture_shader	shared/GLee.h	588;"	d
GLEE_NV_texture_shader2	shared/GLee.h	589;"	d
GLEE_NV_texture_shader3	shared/GLee.h	611;"	d
GLEE_NV_transform_feedback	shared/GLee.h	663;"	d
GLEE_NV_vertex_array_range	shared/GLee.h	554;"	d
GLEE_NV_vertex_array_range2	shared/GLee.h	590;"	d
GLEE_NV_vertex_program	shared/GLee.h	591;"	d
GLEE_NV_vertex_program1_1	shared/GLee.h	612;"	d
GLEE_NV_vertex_program2	shared/GLee.h	633;"	d
GLEE_NV_vertex_program2_option	shared/GLee.h	646;"	d
GLEE_NV_vertex_program3	shared/GLee.h	647;"	d
GLEE_OES_byte_coordinates	shared/GLee.h	687;"	d
GLEE_OES_compressed_paletted_texture	shared/GLee.h	688;"	d
GLEE_OES_read_format	shared/GLee.h	637;"	d
GLEE_OES_single_precision	shared/GLee.h	689;"	d
GLEE_OML_interlace	shared/GLee.h	594;"	d
GLEE_OML_resample	shared/GLee.h	596;"	d
GLEE_OML_subsample	shared/GLee.h	595;"	d
GLEE_PGI_misc_hints	shared/GLee.h	492;"	d
GLEE_PGI_vertex_hints	shared/GLee.h	491;"	d
GLEE_REND_screen_coordinates	shared/GLee.h	531;"	d
GLEE_S3_s3tc	shared/GLee.h	622;"	d
GLEE_SGIS_detail_texture	shared/GLee.h	452;"	d
GLEE_SGIS_fog_function	shared/GLee.h	484;"	d
GLEE_SGIS_generate_mipmap	shared/GLee.h	460;"	d
GLEE_SGIS_multisample	shared/GLee.h	456;"	d
GLEE_SGIS_pixel_texture	shared/GLee.h	446;"	d
GLEE_SGIS_point_line_texgen	shared/GLee.h	577;"	d
GLEE_SGIS_point_parameters	shared/GLee.h	474;"	d
GLEE_SGIS_sharpen_texture	shared/GLee.h	453;"	d
GLEE_SGIS_texture4D	shared/GLee.h	448;"	d
GLEE_SGIS_texture_border_clamp	shared/GLee.h	464;"	d
GLEE_SGIS_texture_color_mask	shared/GLee.h	578;"	d
GLEE_SGIS_texture_edge_clamp	shared/GLee.h	463;"	d
GLEE_SGIS_texture_filter4	shared/GLee.h	439;"	d
GLEE_SGIS_texture_lod	shared/GLee.h	455;"	d
GLEE_SGIS_texture_select	shared/GLee.h	470;"	d
GLEE_SGIX_async	shared/GLee.h	517;"	d
GLEE_SGIX_async_histogram	shared/GLee.h	519;"	d
GLEE_SGIX_async_pixel	shared/GLee.h	518;"	d
GLEE_SGIX_blend_alpha_minmax	shared/GLee.h	514;"	d
GLEE_SGIX_calligraphic_fragment	shared/GLee.h	497;"	d
GLEE_SGIX_clipmap	shared/GLee.h	461;"	d
GLEE_SGIX_convolution_accuracy	shared/GLee.h	575;"	d
GLEE_SGIX_depth_pass_instrument	shared/GLee.h	673;"	d
GLEE_SGIX_depth_texture	shared/GLee.h	483;"	d
GLEE_SGIX_flush_raster	shared/GLee.h	482;"	d
GLEE_SGIX_fog_offset	shared/GLee.h	485;"	d
GLEE_SGIX_fog_scale	shared/GLee.h	536;"	d
GLEE_SGIX_fragment_lighting	shared/GLee.h	507;"	d
GLEE_SGIX_framezoom	shared/GLee.h	477;"	d
GLEE_SGIX_igloo_interface	shared/GLee.h	674;"	d
GLEE_SGIX_impact_pixel_texture	shared/GLee.h	515;"	d
GLEE_SGIX_instruments	shared/GLee.h	475;"	d
GLEE_SGIX_interlace	shared/GLee.h	468;"	d
GLEE_SGIX_ir_instrument1	shared/GLee.h	496;"	d
GLEE_SGIX_list_priority	shared/GLee.h	495;"	d
GLEE_SGIX_pixel_texture	shared/GLee.h	447;"	d
GLEE_SGIX_pixel_texture_bits	shared/GLee.h	690;"	d
GLEE_SGIX_pixel_tiles	shared/GLee.h	469;"	d
GLEE_SGIX_polynomial_ffd	shared/GLee.h	480;"	d
GLEE_SGIX_reference_plane	shared/GLee.h	481;"	d
GLEE_SGIX_resample	shared/GLee.h	576;"	d
GLEE_SGIX_scalebias_hint	shared/GLee.h	593;"	d
GLEE_SGIX_shadow	shared/GLee.h	462;"	d
GLEE_SGIX_shadow_ambient	shared/GLee.h	499;"	d
GLEE_SGIX_sprite	shared/GLee.h	471;"	d
GLEE_SGIX_subsample	shared/GLee.h	566;"	d
GLEE_SGIX_tag_sample_buffer	shared/GLee.h	478;"	d
GLEE_SGIX_texture_add_env	shared/GLee.h	489;"	d
GLEE_SGIX_texture_coordinate_clamp	shared/GLee.h	592;"	d
GLEE_SGIX_texture_lod_bias	shared/GLee.h	498;"	d
GLEE_SGIX_texture_multi_buffer	shared/GLee.h	472;"	d
GLEE_SGIX_texture_range	shared/GLee.h	691;"	d
GLEE_SGIX_texture_scale_bias	shared/GLee.h	476;"	d
GLEE_SGIX_texture_select	shared/GLee.h	671;"	d
GLEE_SGIX_vertex_preclip	shared/GLee.h	574;"	d
GLEE_SGIX_ycrcb	shared/GLee.h	506;"	d
GLEE_SGIX_ycrcb_subsample	shared/GLee.h	567;"	d
GLEE_SGIX_ycrcba	shared/GLee.h	568;"	d
GLEE_SGI_color_matrix	shared/GLee.h	444;"	d
GLEE_SGI_color_table	shared/GLee.h	445;"	d
GLEE_SGI_depth_pass_instrument	shared/GLee.h	569;"	d
GLEE_SGI_texture_color_table	shared/GLee.h	449;"	d
GLEE_SUNX_constant_data	shared/GLee.h	537;"	d
GLEE_SUN_convolution_border_modes	shared/GLee.h	548;"	d
GLEE_SUN_global_alpha	shared/GLee.h	538;"	d
GLEE_SUN_mesh_array	shared/GLee.h	605;"	d
GLEE_SUN_slice_accum	shared/GLee.h	606;"	d
GLEE_SUN_triangle_list	shared/GLee.h	539;"	d
GLEE_SUN_vertex	shared/GLee.h	540;"	d
GLEE_VERSION_1_2	shared/GLee.h	392;"	d
GLEE_VERSION_1_3	shared/GLee.h	394;"	d
GLEE_VERSION_1_4	shared/GLee.h	395;"	d
GLEE_VERSION_1_5	shared/GLee.h	396;"	d
GLEE_VERSION_2_0	shared/GLee.h	397;"	d
GLEE_VERSION_2_1	shared/GLee.h	398;"	d
GLEE_WGL_3DFX_multisample	shared/GLee.h	9418;"	d
GLEE_WGL_3DL_stereo_control	shared/GLee.h	9435;"	d
GLEE_WGL_ARB_buffer_region	shared/GLee.h	9406;"	d
GLEE_WGL_ARB_extensions_string	shared/GLee.h	9408;"	d
GLEE_WGL_ARB_make_current_read	shared/GLee.h	9410;"	d
GLEE_WGL_ARB_multisample	shared/GLee.h	9407;"	d
GLEE_WGL_ARB_pbuffer	shared/GLee.h	9411;"	d
GLEE_WGL_ARB_pixel_format	shared/GLee.h	9409;"	d
GLEE_WGL_ARB_pixel_format_float	shared/GLee.h	9413;"	d
GLEE_WGL_ARB_render_texture	shared/GLee.h	9412;"	d
GLEE_WGL_ATI_pixel_format_float	shared/GLee.h	9427;"	d
GLEE_WGL_EXT_depth_float	shared/GLee.h	9417;"	d
GLEE_WGL_EXT_display_color_table	shared/GLee.h	9429;"	d
GLEE_WGL_EXT_extensions_string	shared/GLee.h	9430;"	d
GLEE_WGL_EXT_make_current_read	shared/GLee.h	9414;"	d
GLEE_WGL_EXT_multisample	shared/GLee.h	9419;"	d
GLEE_WGL_EXT_pbuffer	shared/GLee.h	9416;"	d
GLEE_WGL_EXT_pixel_format	shared/GLee.h	9415;"	d
GLEE_WGL_EXT_swap_control	shared/GLee.h	9431;"	d
GLEE_WGL_I3D_digital_video_control	shared/GLee.h	9420;"	d
GLEE_WGL_I3D_gamma	shared/GLee.h	9421;"	d
GLEE_WGL_I3D_genlock	shared/GLee.h	9422;"	d
GLEE_WGL_I3D_image_buffer	shared/GLee.h	9423;"	d
GLEE_WGL_I3D_swap_frame_lock	shared/GLee.h	9424;"	d
GLEE_WGL_I3D_swap_frame_usage	shared/GLee.h	9434;"	d
GLEE_WGL_NV_float_buffer	shared/GLee.h	9428;"	d
GLEE_WGL_NV_render_depth_texture	shared/GLee.h	9425;"	d
GLEE_WGL_NV_render_texture_rectangle	shared/GLee.h	9426;"	d
GLEE_WGL_NV_vertex_array_range	shared/GLee.h	9432;"	d
GLEE_WGL_OML_sync_control	shared/GLee.h	9433;"	d
GLEE_WIN_phong_shading	shared/GLee.h	511;"	d
GLEE_WIN_specular_fog	shared/GLee.h	512;"	d
GLEXT_64_TYPES_DEFINED	include/GL/glext.h	4434;"	d
GLEXT_64_TYPES_DEFINED	include/GL/glxext.h	442;"	d
GLFrame	shared/glFrame.h	/^		GLFrame(void) {$/;"	f	class:GLFrame
GLFrame	shared/glFrame.h	/^class GLFrame$/;"	c
GLFrustum	shared/glfrustum.h	/^        GLFrustum(float fFov, float fAspect, float fNear, float fFar)$/;"	f	class:GLFrustum
GLFrustum	shared/glfrustum.h	/^        GLFrustum(void)       \/\/ Set some Reasonable Defaults$/;"	f	class:GLFrustum
GLFrustum	shared/glfrustum.h	/^class GLFrustum$/;"	c
GLPushAttrib	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^    GLPushAttrib (GLbitfield mask)	{ glPushAttrib (mask); }$/;"	f	class:Imath::GLPushAttrib
GLPushAttrib	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^class GLPushAttrib {$/;"	c	namespace:Imath
GLPushAttrib	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^    GLPushAttrib (GLbitfield mask)	{ glPushAttrib (mask); }$/;"	f	class:Imath::GLPushAttrib
GLPushAttrib	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^class GLPushAttrib {$/;"	c	namespace:Imath
GLPushMatrix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^    GLPushMatrix ()			{ glPushMatrix(); }$/;"	f	class:Imath::GLPushMatrix
GLPushMatrix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^class GLPushMatrix {$/;"	c	namespace:Imath
GLPushMatrix	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^    GLPushMatrix ()			{ glPushMatrix(); }$/;"	f	class:Imath::GLPushMatrix
GLPushMatrix	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^class GLPushMatrix {$/;"	c	namespace:Imath
GLUT_ACCUM	include/GL/freeglut_std.h	167;"	d
GLUT_ACCUM	shared/freeglut_std.h	165;"	d
GLUT_ACTION_CONTINUE_EXECUTION	include/GL/freeglut_ext.h	47;"	d
GLUT_ACTION_CONTINUE_EXECUTION	shared/freeglut_ext.h	40;"	d
GLUT_ACTION_EXIT	include/GL/freeglut_ext.h	45;"	d
GLUT_ACTION_EXIT	shared/freeglut_ext.h	38;"	d
GLUT_ACTION_GLUTMAINLOOP_RETURNS	include/GL/freeglut_ext.h	46;"	d
GLUT_ACTION_GLUTMAINLOOP_RETURNS	shared/freeglut_ext.h	39;"	d
GLUT_ACTION_ON_WINDOW_CLOSE	include/GL/freeglut_ext.h	68;"	d
GLUT_ACTION_ON_WINDOW_CLOSE	shared/freeglut_ext.h	61;"	d
GLUT_ACTIVE_ALT	include/GL/freeglut_std.h	327;"	d
GLUT_ACTIVE_ALT	shared/freeglut_std.h	325;"	d
GLUT_ACTIVE_CTRL	include/GL/freeglut_std.h	326;"	d
GLUT_ACTIVE_CTRL	shared/freeglut_std.h	324;"	d
GLUT_ACTIVE_SHIFT	include/GL/freeglut_std.h	325;"	d
GLUT_ACTIVE_SHIFT	shared/freeglut_std.h	323;"	d
GLUT_ALLOW_DIRECT_CONTEXT	include/GL/freeglut_ext.h	59;"	d
GLUT_ALLOW_DIRECT_CONTEXT	shared/freeglut_ext.h	52;"	d
GLUT_ALPHA	include/GL/freeglut_std.h	168;"	d
GLUT_ALPHA	shared/freeglut_std.h	166;"	d
GLUT_API_VERSION	include/GL/freeglut_std.h	113;"	d
GLUT_API_VERSION	shared/freeglut_std.h	111;"	d
GLUT_AUX	include/GL/freeglut_ext.h	85;"	d
GLUT_AUX1	include/GL/freeglut_ext.h	87;"	d
GLUT_AUX1	shared/freeglut_ext.h	76;"	d
GLUT_AUX2	include/GL/freeglut_ext.h	88;"	d
GLUT_AUX2	shared/freeglut_ext.h	77;"	d
GLUT_AUX3	include/GL/freeglut_ext.h	89;"	d
GLUT_AUX3	shared/freeglut_ext.h	78;"	d
GLUT_AUX4	include/GL/freeglut_ext.h	90;"	d
GLUT_AUX4	shared/freeglut_ext.h	79;"	d
GLUT_BITMAP_8_BY_13	include/GL/freeglut_std.h	196;"	d
GLUT_BITMAP_8_BY_13	include/GL/freeglut_std.h	222;"	d
GLUT_BITMAP_8_BY_13	shared/freeglut_std.h	194;"	d
GLUT_BITMAP_8_BY_13	shared/freeglut_std.h	220;"	d
GLUT_BITMAP_9_BY_15	include/GL/freeglut_std.h	195;"	d
GLUT_BITMAP_9_BY_15	include/GL/freeglut_std.h	221;"	d
GLUT_BITMAP_9_BY_15	shared/freeglut_std.h	193;"	d
GLUT_BITMAP_9_BY_15	shared/freeglut_std.h	219;"	d
GLUT_BITMAP_HELVETICA_10	include/GL/freeglut_std.h	199;"	d
GLUT_BITMAP_HELVETICA_10	include/GL/freeglut_std.h	225;"	d
GLUT_BITMAP_HELVETICA_10	shared/freeglut_std.h	197;"	d
GLUT_BITMAP_HELVETICA_10	shared/freeglut_std.h	223;"	d
GLUT_BITMAP_HELVETICA_12	include/GL/freeglut_std.h	200;"	d
GLUT_BITMAP_HELVETICA_12	include/GL/freeglut_std.h	226;"	d
GLUT_BITMAP_HELVETICA_12	shared/freeglut_std.h	198;"	d
GLUT_BITMAP_HELVETICA_12	shared/freeglut_std.h	224;"	d
GLUT_BITMAP_HELVETICA_18	include/GL/freeglut_std.h	201;"	d
GLUT_BITMAP_HELVETICA_18	include/GL/freeglut_std.h	227;"	d
GLUT_BITMAP_HELVETICA_18	shared/freeglut_std.h	199;"	d
GLUT_BITMAP_HELVETICA_18	shared/freeglut_std.h	225;"	d
GLUT_BITMAP_TIMES_ROMAN_10	include/GL/freeglut_std.h	197;"	d
GLUT_BITMAP_TIMES_ROMAN_10	include/GL/freeglut_std.h	223;"	d
GLUT_BITMAP_TIMES_ROMAN_10	shared/freeglut_std.h	195;"	d
GLUT_BITMAP_TIMES_ROMAN_10	shared/freeglut_std.h	221;"	d
GLUT_BITMAP_TIMES_ROMAN_24	include/GL/freeglut_std.h	198;"	d
GLUT_BITMAP_TIMES_ROMAN_24	include/GL/freeglut_std.h	224;"	d
GLUT_BITMAP_TIMES_ROMAN_24	shared/freeglut_std.h	196;"	d
GLUT_BITMAP_TIMES_ROMAN_24	shared/freeglut_std.h	222;"	d
GLUT_BLUE	include/GL/freeglut_std.h	361;"	d
GLUT_BLUE	shared/freeglut_std.h	359;"	d
GLUT_BORDERLESS	include/GL/freeglut_ext.h	203;"	d
GLUT_CAPTIONLESS	include/GL/freeglut_ext.h	202;"	d
GLUT_COMPATIBILITY_PROFILE	include/GL/freeglut_ext.h	111;"	d
GLUT_CORE_PROFILE	include/GL/freeglut_ext.h	110;"	d
GLUT_CREATE_NEW_CONTEXT	include/GL/freeglut_ext.h	52;"	d
GLUT_CREATE_NEW_CONTEXT	shared/freeglut_ext.h	45;"	d
GLUT_CURSOR_BOTTOM_LEFT_CORNER	include/GL/freeglut_std.h	351;"	d
GLUT_CURSOR_BOTTOM_LEFT_CORNER	shared/freeglut_std.h	349;"	d
GLUT_CURSOR_BOTTOM_RIGHT_CORNER	include/GL/freeglut_std.h	350;"	d
GLUT_CURSOR_BOTTOM_RIGHT_CORNER	shared/freeglut_std.h	348;"	d
GLUT_CURSOR_BOTTOM_SIDE	include/GL/freeglut_std.h	345;"	d
GLUT_CURSOR_BOTTOM_SIDE	shared/freeglut_std.h	343;"	d
GLUT_CURSOR_CROSSHAIR	include/GL/freeglut_std.h	341;"	d
GLUT_CURSOR_CROSSHAIR	shared/freeglut_std.h	339;"	d
GLUT_CURSOR_CYCLE	include/GL/freeglut_std.h	337;"	d
GLUT_CURSOR_CYCLE	shared/freeglut_std.h	335;"	d
GLUT_CURSOR_DESTROY	include/GL/freeglut_std.h	335;"	d
GLUT_CURSOR_DESTROY	shared/freeglut_std.h	333;"	d
GLUT_CURSOR_FULL_CROSSHAIR	include/GL/freeglut_std.h	354;"	d
GLUT_CURSOR_FULL_CROSSHAIR	shared/freeglut_std.h	352;"	d
GLUT_CURSOR_HELP	include/GL/freeglut_std.h	336;"	d
GLUT_CURSOR_HELP	shared/freeglut_std.h	334;"	d
GLUT_CURSOR_INFO	include/GL/freeglut_std.h	334;"	d
GLUT_CURSOR_INFO	shared/freeglut_std.h	332;"	d
GLUT_CURSOR_INHERIT	include/GL/freeglut_std.h	352;"	d
GLUT_CURSOR_INHERIT	shared/freeglut_std.h	350;"	d
GLUT_CURSOR_LEFT_ARROW	include/GL/freeglut_std.h	333;"	d
GLUT_CURSOR_LEFT_ARROW	shared/freeglut_std.h	331;"	d
GLUT_CURSOR_LEFT_RIGHT	include/GL/freeglut_std.h	343;"	d
GLUT_CURSOR_LEFT_RIGHT	shared/freeglut_std.h	341;"	d
GLUT_CURSOR_LEFT_SIDE	include/GL/freeglut_std.h	346;"	d
GLUT_CURSOR_LEFT_SIDE	shared/freeglut_std.h	344;"	d
GLUT_CURSOR_NONE	include/GL/freeglut_std.h	353;"	d
GLUT_CURSOR_NONE	shared/freeglut_std.h	351;"	d
GLUT_CURSOR_RIGHT_ARROW	include/GL/freeglut_std.h	332;"	d
GLUT_CURSOR_RIGHT_ARROW	shared/freeglut_std.h	330;"	d
GLUT_CURSOR_RIGHT_SIDE	include/GL/freeglut_std.h	347;"	d
GLUT_CURSOR_RIGHT_SIDE	shared/freeglut_std.h	345;"	d
GLUT_CURSOR_SPRAY	include/GL/freeglut_std.h	338;"	d
GLUT_CURSOR_SPRAY	shared/freeglut_std.h	336;"	d
GLUT_CURSOR_TEXT	include/GL/freeglut_std.h	340;"	d
GLUT_CURSOR_TEXT	shared/freeglut_std.h	338;"	d
GLUT_CURSOR_TOP_LEFT_CORNER	include/GL/freeglut_std.h	348;"	d
GLUT_CURSOR_TOP_LEFT_CORNER	shared/freeglut_std.h	346;"	d
GLUT_CURSOR_TOP_RIGHT_CORNER	include/GL/freeglut_std.h	349;"	d
GLUT_CURSOR_TOP_RIGHT_CORNER	shared/freeglut_std.h	347;"	d
GLUT_CURSOR_TOP_SIDE	include/GL/freeglut_std.h	344;"	d
GLUT_CURSOR_TOP_SIDE	shared/freeglut_std.h	342;"	d
GLUT_CURSOR_UP_DOWN	include/GL/freeglut_std.h	342;"	d
GLUT_CURSOR_UP_DOWN	shared/freeglut_std.h	340;"	d
GLUT_CURSOR_WAIT	include/GL/freeglut_std.h	339;"	d
GLUT_CURSOR_WAIT	shared/freeglut_std.h	337;"	d
GLUT_DEBUG	include/GL/freeglut_ext.h	103;"	d
GLUT_DEPTH	include/GL/freeglut_std.h	169;"	d
GLUT_DEPTH	shared/freeglut_std.h	167;"	d
GLUT_DEVICE_IGNORE_KEY_REPEAT	include/GL/freeglut_std.h	284;"	d
GLUT_DEVICE_IGNORE_KEY_REPEAT	shared/freeglut_std.h	282;"	d
GLUT_DEVICE_KEY_REPEAT	include/GL/freeglut_std.h	285;"	d
GLUT_DEVICE_KEY_REPEAT	shared/freeglut_std.h	283;"	d
GLUT_DIRECT_RENDERING	include/GL/freeglut_ext.h	76;"	d
GLUT_DIRECT_RENDERING	shared/freeglut_ext.h	69;"	d
GLUT_DISPLAY_MODE_POSSIBLE	include/GL/freeglut_std.h	262;"	d
GLUT_DISPLAY_MODE_POSSIBLE	shared/freeglut_std.h	260;"	d
GLUT_DOUBLE	include/GL/freeglut_std.h	166;"	d
GLUT_DOUBLE	shared/freeglut_std.h	164;"	d
GLUT_DOWN	include/GL/freeglut_std.h	154;"	d
GLUT_DOWN	shared/freeglut_std.h	152;"	d
GLUT_ELAPSED_TIME	include/GL/freeglut_std.h	268;"	d
GLUT_ELAPSED_TIME	shared/freeglut_std.h	266;"	d
GLUT_ENTERED	include/GL/freeglut_std.h	157;"	d
GLUT_ENTERED	shared/freeglut_std.h	155;"	d
GLUT_FORCE_DIRECT_CONTEXT	include/GL/freeglut_ext.h	61;"	d
GLUT_FORCE_DIRECT_CONTEXT	shared/freeglut_ext.h	54;"	d
GLUT_FORCE_INDIRECT_CONTEXT	include/GL/freeglut_ext.h	58;"	d
GLUT_FORCE_INDIRECT_CONTEXT	shared/freeglut_ext.h	51;"	d
GLUT_FORWARD_COMPATIBLE	include/GL/freeglut_ext.h	104;"	d
GLUT_FULLY_COVERED	include/GL/freeglut_std.h	185;"	d
GLUT_FULLY_COVERED	shared/freeglut_std.h	183;"	d
GLUT_FULLY_RETAINED	include/GL/freeglut_std.h	183;"	d
GLUT_FULLY_RETAINED	shared/freeglut_std.h	181;"	d
GLUT_FULL_SCREEN	include/GL/freeglut_ext.h	78;"	d
GLUT_GAME_MODE_ACTIVE	include/GL/freeglut_std.h	378;"	d
GLUT_GAME_MODE_ACTIVE	shared/freeglut_std.h	376;"	d
GLUT_GAME_MODE_DISPLAY_CHANGED	include/GL/freeglut_std.h	384;"	d
GLUT_GAME_MODE_DISPLAY_CHANGED	shared/freeglut_std.h	382;"	d
GLUT_GAME_MODE_HEIGHT	include/GL/freeglut_std.h	381;"	d
GLUT_GAME_MODE_HEIGHT	shared/freeglut_std.h	379;"	d
GLUT_GAME_MODE_PIXEL_DEPTH	include/GL/freeglut_std.h	382;"	d
GLUT_GAME_MODE_PIXEL_DEPTH	shared/freeglut_std.h	380;"	d
GLUT_GAME_MODE_POSSIBLE	include/GL/freeglut_std.h	379;"	d
GLUT_GAME_MODE_POSSIBLE	shared/freeglut_std.h	377;"	d
GLUT_GAME_MODE_REFRESH_RATE	include/GL/freeglut_std.h	383;"	d
GLUT_GAME_MODE_REFRESH_RATE	shared/freeglut_std.h	381;"	d
GLUT_GAME_MODE_WIDTH	include/GL/freeglut_std.h	380;"	d
GLUT_GAME_MODE_WIDTH	shared/freeglut_std.h	378;"	d
GLUT_GREEN	include/GL/freeglut_std.h	360;"	d
GLUT_GREEN	shared/freeglut_std.h	358;"	d
GLUT_HAS_DIAL_AND_BUTTON_BOX	include/GL/freeglut_std.h	277;"	d
GLUT_HAS_DIAL_AND_BUTTON_BOX	shared/freeglut_std.h	275;"	d
GLUT_HAS_JOYSTICK	include/GL/freeglut_std.h	286;"	d
GLUT_HAS_JOYSTICK	shared/freeglut_std.h	284;"	d
GLUT_HAS_KEYBOARD	include/GL/freeglut_std.h	274;"	d
GLUT_HAS_KEYBOARD	shared/freeglut_std.h	272;"	d
GLUT_HAS_MOUSE	include/GL/freeglut_std.h	275;"	d
GLUT_HAS_MOUSE	shared/freeglut_std.h	273;"	d
GLUT_HAS_OVERLAY	include/GL/freeglut_std.h	297;"	d
GLUT_HAS_OVERLAY	shared/freeglut_std.h	295;"	d
GLUT_HAS_SPACEBALL	include/GL/freeglut_std.h	276;"	d
GLUT_HAS_SPACEBALL	shared/freeglut_std.h	274;"	d
GLUT_HAS_TABLET	include/GL/freeglut_std.h	278;"	d
GLUT_HAS_TABLET	shared/freeglut_std.h	276;"	d
GLUT_HIDDEN	include/GL/freeglut_std.h	182;"	d
GLUT_HIDDEN	shared/freeglut_std.h	180;"	d
GLUT_INDEX	include/GL/freeglut_std.h	164;"	d
GLUT_INDEX	shared/freeglut_std.h	162;"	d
GLUT_INIT_DISPLAY_MODE	include/GL/freeglut_std.h	267;"	d
GLUT_INIT_DISPLAY_MODE	shared/freeglut_std.h	265;"	d
GLUT_INIT_FLAGS	include/GL/freeglut_ext.h	97;"	d
GLUT_INIT_MAJOR_VERSION	include/GL/freeglut_ext.h	95;"	d
GLUT_INIT_MINOR_VERSION	include/GL/freeglut_ext.h	96;"	d
GLUT_INIT_PROFILE	include/GL/freeglut_ext.h	98;"	d
GLUT_INIT_STATE	include/GL/freeglut_ext.h	66;"	d
GLUT_INIT_STATE	shared/freeglut_ext.h	59;"	d
GLUT_INIT_WINDOW_HEIGHT	include/GL/freeglut_std.h	266;"	d
GLUT_INIT_WINDOW_HEIGHT	shared/freeglut_std.h	264;"	d
GLUT_INIT_WINDOW_WIDTH	include/GL/freeglut_std.h	265;"	d
GLUT_INIT_WINDOW_WIDTH	shared/freeglut_std.h	263;"	d
GLUT_INIT_WINDOW_X	include/GL/freeglut_std.h	263;"	d
GLUT_INIT_WINDOW_X	shared/freeglut_std.h	261;"	d
GLUT_INIT_WINDOW_Y	include/GL/freeglut_std.h	264;"	d
GLUT_INIT_WINDOW_Y	shared/freeglut_std.h	262;"	d
GLUT_JOYSTICK_AXES	include/GL/freeglut_std.h	289;"	d
GLUT_JOYSTICK_AXES	shared/freeglut_std.h	287;"	d
GLUT_JOYSTICK_BUTTONS	include/GL/freeglut_std.h	288;"	d
GLUT_JOYSTICK_BUTTONS	shared/freeglut_std.h	286;"	d
GLUT_JOYSTICK_BUTTON_A	include/GL/freeglut_std.h	370;"	d
GLUT_JOYSTICK_BUTTON_A	shared/freeglut_std.h	368;"	d
GLUT_JOYSTICK_BUTTON_B	include/GL/freeglut_std.h	371;"	d
GLUT_JOYSTICK_BUTTON_B	shared/freeglut_std.h	369;"	d
GLUT_JOYSTICK_BUTTON_C	include/GL/freeglut_std.h	372;"	d
GLUT_JOYSTICK_BUTTON_C	shared/freeglut_std.h	370;"	d
GLUT_JOYSTICK_BUTTON_D	include/GL/freeglut_std.h	373;"	d
GLUT_JOYSTICK_BUTTON_D	shared/freeglut_std.h	371;"	d
GLUT_JOYSTICK_POLL_RATE	include/GL/freeglut_std.h	290;"	d
GLUT_JOYSTICK_POLL_RATE	shared/freeglut_std.h	288;"	d
GLUT_KEY_BEGIN	include/GL/freeglut_ext.h	39;"	d
GLUT_KEY_DELETE	include/GL/freeglut_ext.h	40;"	d
GLUT_KEY_DOWN	include/GL/freeglut_std.h	141;"	d
GLUT_KEY_DOWN	shared/freeglut_std.h	139;"	d
GLUT_KEY_END	include/GL/freeglut_std.h	145;"	d
GLUT_KEY_END	shared/freeglut_std.h	143;"	d
GLUT_KEY_F1	include/GL/freeglut_std.h	126;"	d
GLUT_KEY_F1	shared/freeglut_std.h	124;"	d
GLUT_KEY_F10	include/GL/freeglut_std.h	135;"	d
GLUT_KEY_F10	shared/freeglut_std.h	133;"	d
GLUT_KEY_F11	include/GL/freeglut_std.h	136;"	d
GLUT_KEY_F11	shared/freeglut_std.h	134;"	d
GLUT_KEY_F12	include/GL/freeglut_std.h	137;"	d
GLUT_KEY_F12	shared/freeglut_std.h	135;"	d
GLUT_KEY_F2	include/GL/freeglut_std.h	127;"	d
GLUT_KEY_F2	shared/freeglut_std.h	125;"	d
GLUT_KEY_F3	include/GL/freeglut_std.h	128;"	d
GLUT_KEY_F3	shared/freeglut_std.h	126;"	d
GLUT_KEY_F4	include/GL/freeglut_std.h	129;"	d
GLUT_KEY_F4	shared/freeglut_std.h	127;"	d
GLUT_KEY_F5	include/GL/freeglut_std.h	130;"	d
GLUT_KEY_F5	shared/freeglut_std.h	128;"	d
GLUT_KEY_F6	include/GL/freeglut_std.h	131;"	d
GLUT_KEY_F6	shared/freeglut_std.h	129;"	d
GLUT_KEY_F7	include/GL/freeglut_std.h	132;"	d
GLUT_KEY_F7	shared/freeglut_std.h	130;"	d
GLUT_KEY_F8	include/GL/freeglut_std.h	133;"	d
GLUT_KEY_F8	shared/freeglut_std.h	131;"	d
GLUT_KEY_F9	include/GL/freeglut_std.h	134;"	d
GLUT_KEY_F9	shared/freeglut_std.h	132;"	d
GLUT_KEY_HOME	include/GL/freeglut_std.h	144;"	d
GLUT_KEY_HOME	shared/freeglut_std.h	142;"	d
GLUT_KEY_INSERT	include/GL/freeglut_std.h	146;"	d
GLUT_KEY_INSERT	shared/freeglut_std.h	144;"	d
GLUT_KEY_LEFT	include/GL/freeglut_std.h	138;"	d
GLUT_KEY_LEFT	shared/freeglut_std.h	136;"	d
GLUT_KEY_NUM_LOCK	include/GL/freeglut_ext.h	38;"	d
GLUT_KEY_PAGE_DOWN	include/GL/freeglut_std.h	143;"	d
GLUT_KEY_PAGE_DOWN	shared/freeglut_std.h	141;"	d
GLUT_KEY_PAGE_UP	include/GL/freeglut_std.h	142;"	d
GLUT_KEY_PAGE_UP	shared/freeglut_std.h	140;"	d
GLUT_KEY_REPEAT_DEFAULT	include/GL/freeglut_std.h	368;"	d
GLUT_KEY_REPEAT_DEFAULT	shared/freeglut_std.h	366;"	d
GLUT_KEY_REPEAT_OFF	include/GL/freeglut_std.h	366;"	d
GLUT_KEY_REPEAT_OFF	shared/freeglut_std.h	364;"	d
GLUT_KEY_REPEAT_ON	include/GL/freeglut_std.h	367;"	d
GLUT_KEY_REPEAT_ON	shared/freeglut_std.h	365;"	d
GLUT_KEY_RIGHT	include/GL/freeglut_std.h	140;"	d
GLUT_KEY_RIGHT	shared/freeglut_std.h	138;"	d
GLUT_KEY_UP	include/GL/freeglut_std.h	139;"	d
GLUT_KEY_UP	shared/freeglut_std.h	137;"	d
GLUT_LAYER_IN_USE	include/GL/freeglut_std.h	296;"	d
GLUT_LAYER_IN_USE	shared/freeglut_std.h	294;"	d
GLUT_LEFT	include/GL/freeglut_std.h	156;"	d
GLUT_LEFT	shared/freeglut_std.h	154;"	d
GLUT_LEFT_BUTTON	include/GL/freeglut_std.h	151;"	d
GLUT_LEFT_BUTTON	shared/freeglut_std.h	149;"	d
GLUT_LUMINANCE	include/GL/freeglut_std.h	173;"	d
GLUT_LUMINANCE	shared/freeglut_std.h	171;"	d
GLUT_MENU_IN_USE	include/GL/freeglut_std.h	179;"	d
GLUT_MENU_IN_USE	shared/freeglut_std.h	177;"	d
GLUT_MENU_NOT_IN_USE	include/GL/freeglut_std.h	178;"	d
GLUT_MENU_NOT_IN_USE	shared/freeglut_std.h	176;"	d
GLUT_MENU_NUM_ITEMS	include/GL/freeglut_std.h	261;"	d
GLUT_MENU_NUM_ITEMS	shared/freeglut_std.h	259;"	d
GLUT_MIDDLE_BUTTON	include/GL/freeglut_std.h	152;"	d
GLUT_MIDDLE_BUTTON	shared/freeglut_std.h	150;"	d
GLUT_MULTISAMPLE	include/GL/freeglut_std.h	171;"	d
GLUT_MULTISAMPLE	shared/freeglut_std.h	169;"	d
GLUT_NORMAL	include/GL/freeglut_std.h	319;"	d
GLUT_NORMAL	shared/freeglut_std.h	317;"	d
GLUT_NORMAL_DAMAGED	include/GL/freeglut_std.h	299;"	d
GLUT_NORMAL_DAMAGED	shared/freeglut_std.h	297;"	d
GLUT_NOT_VISIBLE	include/GL/freeglut_std.h	180;"	d
GLUT_NOT_VISIBLE	shared/freeglut_std.h	178;"	d
GLUT_NUM_BUTTON_BOX_BUTTONS	include/GL/freeglut_std.h	281;"	d
GLUT_NUM_BUTTON_BOX_BUTTONS	shared/freeglut_std.h	279;"	d
GLUT_NUM_DIALS	include/GL/freeglut_std.h	282;"	d
GLUT_NUM_DIALS	shared/freeglut_std.h	280;"	d
GLUT_NUM_MOUSE_BUTTONS	include/GL/freeglut_std.h	279;"	d
GLUT_NUM_MOUSE_BUTTONS	shared/freeglut_std.h	277;"	d
GLUT_NUM_SPACEBALL_BUTTONS	include/GL/freeglut_std.h	280;"	d
GLUT_NUM_SPACEBALL_BUTTONS	shared/freeglut_std.h	278;"	d
GLUT_NUM_TABLET_BUTTONS	include/GL/freeglut_std.h	283;"	d
GLUT_NUM_TABLET_BUTTONS	shared/freeglut_std.h	281;"	d
GLUT_OVERLAY	include/GL/freeglut_std.h	320;"	d
GLUT_OVERLAY	shared/freeglut_std.h	318;"	d
GLUT_OVERLAY_DAMAGED	include/GL/freeglut_std.h	300;"	d
GLUT_OVERLAY_DAMAGED	shared/freeglut_std.h	298;"	d
GLUT_OVERLAY_POSSIBLE	include/GL/freeglut_std.h	295;"	d
GLUT_OVERLAY_POSSIBLE	shared/freeglut_std.h	293;"	d
GLUT_OWNS_JOYSTICK	include/GL/freeglut_std.h	287;"	d
GLUT_OWNS_JOYSTICK	shared/freeglut_std.h	285;"	d
GLUT_PARTIALLY_RETAINED	include/GL/freeglut_std.h	184;"	d
GLUT_PARTIALLY_RETAINED	shared/freeglut_std.h	182;"	d
GLUT_RED	include/GL/freeglut_std.h	359;"	d
GLUT_RED	shared/freeglut_std.h	357;"	d
GLUT_RENDERING_CONTEXT	include/GL/freeglut_ext.h	75;"	d
GLUT_RENDERING_CONTEXT	shared/freeglut_ext.h	68;"	d
GLUT_RGB	include/GL/freeglut_std.h	162;"	d
GLUT_RGB	shared/freeglut_std.h	160;"	d
GLUT_RGBA	include/GL/freeglut_std.h	163;"	d
GLUT_RGBA	shared/freeglut_std.h	161;"	d
GLUT_RIGHT_BUTTON	include/GL/freeglut_std.h	153;"	d
GLUT_RIGHT_BUTTON	shared/freeglut_std.h	151;"	d
GLUT_SCREEN_HEIGHT	include/GL/freeglut_std.h	258;"	d
GLUT_SCREEN_HEIGHT	shared/freeglut_std.h	256;"	d
GLUT_SCREEN_HEIGHT_MM	include/GL/freeglut_std.h	260;"	d
GLUT_SCREEN_HEIGHT_MM	shared/freeglut_std.h	258;"	d
GLUT_SCREEN_WIDTH	include/GL/freeglut_std.h	257;"	d
GLUT_SCREEN_WIDTH	shared/freeglut_std.h	255;"	d
GLUT_SCREEN_WIDTH_MM	include/GL/freeglut_std.h	259;"	d
GLUT_SCREEN_WIDTH_MM	shared/freeglut_std.h	257;"	d
GLUT_SINGLE	include/GL/freeglut_std.h	165;"	d
GLUT_SINGLE	shared/freeglut_std.h	163;"	d
GLUT_SRGB	include/GL/freeglut_ext.h	204;"	d
GLUT_STENCIL	include/GL/freeglut_std.h	170;"	d
GLUT_STENCIL	shared/freeglut_std.h	168;"	d
GLUT_STEREO	include/GL/freeglut_std.h	172;"	d
GLUT_STEREO	shared/freeglut_std.h	170;"	d
GLUT_STROKE_MONO_ROMAN	include/GL/freeglut_std.h	194;"	d
GLUT_STROKE_MONO_ROMAN	include/GL/freeglut_std.h	220;"	d
GLUT_STROKE_MONO_ROMAN	shared/freeglut_std.h	192;"	d
GLUT_STROKE_MONO_ROMAN	shared/freeglut_std.h	218;"	d
GLUT_STROKE_ROMAN	include/GL/freeglut_std.h	193;"	d
GLUT_STROKE_ROMAN	include/GL/freeglut_std.h	219;"	d
GLUT_STROKE_ROMAN	shared/freeglut_std.h	191;"	d
GLUT_STROKE_ROMAN	shared/freeglut_std.h	217;"	d
GLUT_TRANSPARENT_INDEX	include/GL/freeglut_std.h	298;"	d
GLUT_TRANSPARENT_INDEX	shared/freeglut_std.h	296;"	d
GLUT_TRY_DIRECT_CONTEXT	include/GL/freeglut_ext.h	60;"	d
GLUT_TRY_DIRECT_CONTEXT	shared/freeglut_ext.h	53;"	d
GLUT_UP	include/GL/freeglut_std.h	155;"	d
GLUT_UP	shared/freeglut_std.h	153;"	d
GLUT_USE_CURRENT_CONTEXT	include/GL/freeglut_ext.h	53;"	d
GLUT_USE_CURRENT_CONTEXT	shared/freeglut_ext.h	46;"	d
GLUT_VERSION	include/GL/freeglut_ext.h	73;"	d
GLUT_VERSION	shared/freeglut_ext.h	66;"	d
GLUT_VIDEO_RESIZE_HEIGHT	include/GL/freeglut_std.h	314;"	d
GLUT_VIDEO_RESIZE_HEIGHT	shared/freeglut_std.h	312;"	d
GLUT_VIDEO_RESIZE_HEIGHT_DELTA	include/GL/freeglut_std.h	310;"	d
GLUT_VIDEO_RESIZE_HEIGHT_DELTA	shared/freeglut_std.h	308;"	d
GLUT_VIDEO_RESIZE_IN_USE	include/GL/freeglut_std.h	306;"	d
GLUT_VIDEO_RESIZE_IN_USE	shared/freeglut_std.h	304;"	d
GLUT_VIDEO_RESIZE_POSSIBLE	include/GL/freeglut_std.h	305;"	d
GLUT_VIDEO_RESIZE_POSSIBLE	shared/freeglut_std.h	303;"	d
GLUT_VIDEO_RESIZE_WIDTH	include/GL/freeglut_std.h	313;"	d
GLUT_VIDEO_RESIZE_WIDTH	shared/freeglut_std.h	311;"	d
GLUT_VIDEO_RESIZE_WIDTH_DELTA	include/GL/freeglut_std.h	309;"	d
GLUT_VIDEO_RESIZE_WIDTH_DELTA	shared/freeglut_std.h	307;"	d
GLUT_VIDEO_RESIZE_X	include/GL/freeglut_std.h	311;"	d
GLUT_VIDEO_RESIZE_X	shared/freeglut_std.h	309;"	d
GLUT_VIDEO_RESIZE_X_DELTA	include/GL/freeglut_std.h	307;"	d
GLUT_VIDEO_RESIZE_X_DELTA	shared/freeglut_std.h	305;"	d
GLUT_VIDEO_RESIZE_Y	include/GL/freeglut_std.h	312;"	d
GLUT_VIDEO_RESIZE_Y	shared/freeglut_std.h	310;"	d
GLUT_VIDEO_RESIZE_Y_DELTA	include/GL/freeglut_std.h	308;"	d
GLUT_VIDEO_RESIZE_Y_DELTA	shared/freeglut_std.h	306;"	d
GLUT_VISIBLE	include/GL/freeglut_std.h	181;"	d
GLUT_VISIBLE	shared/freeglut_std.h	179;"	d
GLUT_WINDOW_ACCUM_ALPHA_SIZE	include/GL/freeglut_std.h	247;"	d
GLUT_WINDOW_ACCUM_ALPHA_SIZE	shared/freeglut_std.h	245;"	d
GLUT_WINDOW_ACCUM_BLUE_SIZE	include/GL/freeglut_std.h	246;"	d
GLUT_WINDOW_ACCUM_BLUE_SIZE	shared/freeglut_std.h	244;"	d
GLUT_WINDOW_ACCUM_GREEN_SIZE	include/GL/freeglut_std.h	245;"	d
GLUT_WINDOW_ACCUM_GREEN_SIZE	shared/freeglut_std.h	243;"	d
GLUT_WINDOW_ACCUM_RED_SIZE	include/GL/freeglut_std.h	244;"	d
GLUT_WINDOW_ACCUM_RED_SIZE	shared/freeglut_std.h	242;"	d
GLUT_WINDOW_ALPHA_SIZE	include/GL/freeglut_std.h	243;"	d
GLUT_WINDOW_ALPHA_SIZE	shared/freeglut_std.h	241;"	d
GLUT_WINDOW_BLUE_SIZE	include/GL/freeglut_std.h	242;"	d
GLUT_WINDOW_BLUE_SIZE	shared/freeglut_std.h	240;"	d
GLUT_WINDOW_BORDER_WIDTH	include/GL/freeglut_ext.h	70;"	d
GLUT_WINDOW_BORDER_WIDTH	shared/freeglut_ext.h	63;"	d
GLUT_WINDOW_BUFFER_SIZE	include/GL/freeglut_std.h	237;"	d
GLUT_WINDOW_BUFFER_SIZE	shared/freeglut_std.h	235;"	d
GLUT_WINDOW_COLORMAP_SIZE	include/GL/freeglut_std.h	252;"	d
GLUT_WINDOW_COLORMAP_SIZE	shared/freeglut_std.h	250;"	d
GLUT_WINDOW_CURSOR	include/GL/freeglut_std.h	255;"	d
GLUT_WINDOW_CURSOR	shared/freeglut_std.h	253;"	d
GLUT_WINDOW_DEPTH_SIZE	include/GL/freeglut_std.h	239;"	d
GLUT_WINDOW_DEPTH_SIZE	shared/freeglut_std.h	237;"	d
GLUT_WINDOW_DOUBLEBUFFER	include/GL/freeglut_std.h	248;"	d
GLUT_WINDOW_DOUBLEBUFFER	shared/freeglut_std.h	246;"	d
GLUT_WINDOW_FORMAT_ID	include/GL/freeglut_std.h	269;"	d
GLUT_WINDOW_FORMAT_ID	shared/freeglut_std.h	267;"	d
GLUT_WINDOW_GREEN_SIZE	include/GL/freeglut_std.h	241;"	d
GLUT_WINDOW_GREEN_SIZE	shared/freeglut_std.h	239;"	d
GLUT_WINDOW_HEADER_HEIGHT	include/GL/freeglut_ext.h	71;"	d
GLUT_WINDOW_HEADER_HEIGHT	shared/freeglut_ext.h	64;"	d
GLUT_WINDOW_HEIGHT	include/GL/freeglut_std.h	236;"	d
GLUT_WINDOW_HEIGHT	shared/freeglut_std.h	234;"	d
GLUT_WINDOW_NUM_CHILDREN	include/GL/freeglut_std.h	251;"	d
GLUT_WINDOW_NUM_CHILDREN	shared/freeglut_std.h	249;"	d
GLUT_WINDOW_NUM_SAMPLES	include/GL/freeglut_std.h	253;"	d
GLUT_WINDOW_NUM_SAMPLES	shared/freeglut_std.h	251;"	d
GLUT_WINDOW_PARENT	include/GL/freeglut_std.h	250;"	d
GLUT_WINDOW_PARENT	shared/freeglut_std.h	248;"	d
GLUT_WINDOW_RED_SIZE	include/GL/freeglut_std.h	240;"	d
GLUT_WINDOW_RED_SIZE	shared/freeglut_std.h	238;"	d
GLUT_WINDOW_RGBA	include/GL/freeglut_std.h	249;"	d
GLUT_WINDOW_RGBA	shared/freeglut_std.h	247;"	d
GLUT_WINDOW_STENCIL_SIZE	include/GL/freeglut_std.h	238;"	d
GLUT_WINDOW_STENCIL_SIZE	shared/freeglut_std.h	236;"	d
GLUT_WINDOW_STEREO	include/GL/freeglut_std.h	254;"	d
GLUT_WINDOW_STEREO	shared/freeglut_std.h	252;"	d
GLUT_WINDOW_WIDTH	include/GL/freeglut_std.h	235;"	d
GLUT_WINDOW_WIDTH	shared/freeglut_std.h	233;"	d
GLUT_WINDOW_X	include/GL/freeglut_std.h	233;"	d
GLUT_WINDOW_X	shared/freeglut_std.h	231;"	d
GLUT_WINDOW_Y	include/GL/freeglut_std.h	234;"	d
GLUT_WINDOW_Y	shared/freeglut_std.h	232;"	d
GLUT_XLIB_IMPLEMENTATION	include/GL/freeglut_std.h	115;"	d
GLUT_XLIB_IMPLEMENTATION	shared/freeglut_std.h	113;"	d
GLUTproc	include/GL/freeglut_ext.h	/^typedef void (*GLUTproc)();$/;"	t
GLUTproc	shared/freeglut_ext.h	/^typedef void (*GLUTproc)();$/;"	t
GLU_AUTO_LOAD_MATRIX	include/GL/glu.h	167;"	d
GLU_BEGIN	include/GL/glu.h	215;"	d
GLU_CCW	include/GL/glu.h	233;"	d
GLU_CULLING	include/GL/glu.h	168;"	d
GLU_CW	include/GL/glu.h	232;"	d
GLU_DISPLAY_MODE	include/GL/glu.h	170;"	d
GLU_DOMAIN_DISTANCE	include/GL/glu.h	189;"	d
GLU_EDGE_FLAG	include/GL/glu.h	222;"	d
GLU_END	include/GL/glu.h	219;"	d
GLU_ERROR	include/GL/glu.h	101;"	d
GLU_EXTENSIONS	include/GL/glu.h	85;"	d
GLU_EXTERIOR	include/GL/glu.h	235;"	d
GLU_EXT_nurbs_tessellator	include/GL/glu.h	72;"	d
GLU_EXT_object_space_tess	include/GL/glu.h	71;"	d
GLU_FALSE	include/GL/glu.h	75;"	d
GLU_FILL	include/GL/glu.h	198;"	d
GLU_FLAT	include/GL/glu.h	206;"	d
GLU_INCOMPATIBLE_GL_VERSION	include/GL/glu.h	91;"	d
GLU_INSIDE	include/GL/glu.h	211;"	d
GLU_INTERIOR	include/GL/glu.h	234;"	d
GLU_INVALID_ENUM	include/GL/glu.h	88;"	d
GLU_INVALID_OPERATION	include/GL/glu.h	92;"	d
GLU_INVALID_VALUE	include/GL/glu.h	89;"	d
GLU_LINE	include/GL/glu.h	197;"	d
GLU_MANGLE_H	include/GL/glu_mangle.h	23;"	d
GLU_MAP1_TRIM_2	include/GL/glu.h	192;"	d
GLU_MAP1_TRIM_3	include/GL/glu.h	193;"	d
GLU_NONE	include/GL/glu.h	207;"	d
GLU_NURBS_BEGIN	include/GL/glu.h	102;"	d
GLU_NURBS_BEGIN_DATA	include/GL/glu.h	114;"	d
GLU_NURBS_BEGIN_DATA_EXT	include/GL/glu.h	115;"	d
GLU_NURBS_BEGIN_EXT	include/GL/glu.h	103;"	d
GLU_NURBS_COLOR	include/GL/glu.h	108;"	d
GLU_NURBS_COLOR_DATA	include/GL/glu.h	120;"	d
GLU_NURBS_COLOR_DATA_EXT	include/GL/glu.h	121;"	d
GLU_NURBS_COLOR_EXT	include/GL/glu.h	109;"	d
GLU_NURBS_END	include/GL/glu.h	112;"	d
GLU_NURBS_END_DATA	include/GL/glu.h	124;"	d
GLU_NURBS_END_DATA_EXT	include/GL/glu.h	125;"	d
GLU_NURBS_END_EXT	include/GL/glu.h	113;"	d
GLU_NURBS_ERROR	include/GL/glu.h	100;"	d
GLU_NURBS_ERROR1	include/GL/glu.h	128;"	d
GLU_NURBS_ERROR10	include/GL/glu.h	137;"	d
GLU_NURBS_ERROR11	include/GL/glu.h	138;"	d
GLU_NURBS_ERROR12	include/GL/glu.h	139;"	d
GLU_NURBS_ERROR13	include/GL/glu.h	140;"	d
GLU_NURBS_ERROR14	include/GL/glu.h	141;"	d
GLU_NURBS_ERROR15	include/GL/glu.h	142;"	d
GLU_NURBS_ERROR16	include/GL/glu.h	143;"	d
GLU_NURBS_ERROR17	include/GL/glu.h	144;"	d
GLU_NURBS_ERROR18	include/GL/glu.h	145;"	d
GLU_NURBS_ERROR19	include/GL/glu.h	146;"	d
GLU_NURBS_ERROR2	include/GL/glu.h	129;"	d
GLU_NURBS_ERROR20	include/GL/glu.h	147;"	d
GLU_NURBS_ERROR21	include/GL/glu.h	148;"	d
GLU_NURBS_ERROR22	include/GL/glu.h	149;"	d
GLU_NURBS_ERROR23	include/GL/glu.h	150;"	d
GLU_NURBS_ERROR24	include/GL/glu.h	151;"	d
GLU_NURBS_ERROR25	include/GL/glu.h	152;"	d
GLU_NURBS_ERROR26	include/GL/glu.h	153;"	d
GLU_NURBS_ERROR27	include/GL/glu.h	154;"	d
GLU_NURBS_ERROR28	include/GL/glu.h	155;"	d
GLU_NURBS_ERROR29	include/GL/glu.h	156;"	d
GLU_NURBS_ERROR3	include/GL/glu.h	130;"	d
GLU_NURBS_ERROR30	include/GL/glu.h	157;"	d
GLU_NURBS_ERROR31	include/GL/glu.h	158;"	d
GLU_NURBS_ERROR32	include/GL/glu.h	159;"	d
GLU_NURBS_ERROR33	include/GL/glu.h	160;"	d
GLU_NURBS_ERROR34	include/GL/glu.h	161;"	d
GLU_NURBS_ERROR35	include/GL/glu.h	162;"	d
GLU_NURBS_ERROR36	include/GL/glu.h	163;"	d
GLU_NURBS_ERROR37	include/GL/glu.h	164;"	d
GLU_NURBS_ERROR4	include/GL/glu.h	131;"	d
GLU_NURBS_ERROR5	include/GL/glu.h	132;"	d
GLU_NURBS_ERROR6	include/GL/glu.h	133;"	d
GLU_NURBS_ERROR7	include/GL/glu.h	134;"	d
GLU_NURBS_ERROR8	include/GL/glu.h	135;"	d
GLU_NURBS_ERROR9	include/GL/glu.h	136;"	d
GLU_NURBS_MODE	include/GL/glu.h	175;"	d
GLU_NURBS_MODE_EXT	include/GL/glu.h	176;"	d
GLU_NURBS_NORMAL	include/GL/glu.h	106;"	d
GLU_NURBS_NORMAL_DATA	include/GL/glu.h	118;"	d
GLU_NURBS_NORMAL_DATA_EXT	include/GL/glu.h	119;"	d
GLU_NURBS_NORMAL_EXT	include/GL/glu.h	107;"	d
GLU_NURBS_RENDERER	include/GL/glu.h	179;"	d
GLU_NURBS_RENDERER_EXT	include/GL/glu.h	180;"	d
GLU_NURBS_TESSELLATOR	include/GL/glu.h	177;"	d
GLU_NURBS_TESSELLATOR_EXT	include/GL/glu.h	178;"	d
GLU_NURBS_TEXTURE_COORD	include/GL/glu.h	110;"	d
GLU_NURBS_TEXTURE_COORD_DATA	include/GL/glu.h	122;"	d
GLU_NURBS_TEX_COORD_DATA_EXT	include/GL/glu.h	123;"	d
GLU_NURBS_TEX_COORD_EXT	include/GL/glu.h	111;"	d
GLU_NURBS_VERTEX	include/GL/glu.h	104;"	d
GLU_NURBS_VERTEX_DATA	include/GL/glu.h	116;"	d
GLU_NURBS_VERTEX_DATA_EXT	include/GL/glu.h	117;"	d
GLU_NURBS_VERTEX_EXT	include/GL/glu.h	105;"	d
GLU_OBJECT_PARAMETRIC_ERROR	include/GL/glu.h	183;"	d
GLU_OBJECT_PARAMETRIC_ERROR_EXT	include/GL/glu.h	184;"	d
GLU_OBJECT_PATH_LENGTH	include/GL/glu.h	185;"	d
GLU_OBJECT_PATH_LENGTH_EXT	include/GL/glu.h	186;"	d
GLU_OUTLINE_PATCH	include/GL/glu.h	97;"	d
GLU_OUTLINE_POLYGON	include/GL/glu.h	96;"	d
GLU_OUTSIDE	include/GL/glu.h	210;"	d
GLU_OUT_OF_MEMORY	include/GL/glu.h	90;"	d
GLU_PARAMETRIC_ERROR	include/GL/glu.h	188;"	d
GLU_PARAMETRIC_TOLERANCE	include/GL/glu.h	171;"	d
GLU_PATH_LENGTH	include/GL/glu.h	187;"	d
GLU_POINT	include/GL/glu.h	196;"	d
GLU_SAMPLING_METHOD	include/GL/glu.h	172;"	d
GLU_SAMPLING_TOLERANCE	include/GL/glu.h	169;"	d
GLU_SILHOUETTE	include/GL/glu.h	199;"	d
GLU_SMOOTH	include/GL/glu.h	205;"	d
GLU_TESS_BEGIN	include/GL/glu.h	214;"	d
GLU_TESS_BEGIN_DATA	include/GL/glu.h	224;"	d
GLU_TESS_BOUNDARY_ONLY	include/GL/glu.h	240;"	d
GLU_TESS_COMBINE	include/GL/glu.h	223;"	d
GLU_TESS_COMBINE_DATA	include/GL/glu.h	229;"	d
GLU_TESS_COORD_TOO_LARGE	include/GL/glu.h	256;"	d
GLU_TESS_EDGE_FLAG	include/GL/glu.h	221;"	d
GLU_TESS_EDGE_FLAG_DATA	include/GL/glu.h	228;"	d
GLU_TESS_END	include/GL/glu.h	218;"	d
GLU_TESS_END_DATA	include/GL/glu.h	226;"	d
GLU_TESS_ERROR	include/GL/glu.h	220;"	d
GLU_TESS_ERROR1	include/GL/glu.h	244;"	d
GLU_TESS_ERROR2	include/GL/glu.h	245;"	d
GLU_TESS_ERROR3	include/GL/glu.h	246;"	d
GLU_TESS_ERROR4	include/GL/glu.h	247;"	d
GLU_TESS_ERROR5	include/GL/glu.h	248;"	d
GLU_TESS_ERROR6	include/GL/glu.h	249;"	d
GLU_TESS_ERROR7	include/GL/glu.h	250;"	d
GLU_TESS_ERROR8	include/GL/glu.h	251;"	d
GLU_TESS_ERROR_DATA	include/GL/glu.h	227;"	d
GLU_TESS_MAX_COORD	include/GL/glu.h	284;"	d
GLU_TESS_MISSING_BEGIN_CONTOUR	include/GL/glu.h	253;"	d
GLU_TESS_MISSING_BEGIN_POLYGON	include/GL/glu.h	252;"	d
GLU_TESS_MISSING_END_CONTOUR	include/GL/glu.h	255;"	d
GLU_TESS_MISSING_END_POLYGON	include/GL/glu.h	254;"	d
GLU_TESS_NEED_COMBINE_CALLBACK	include/GL/glu.h	257;"	d
GLU_TESS_TOLERANCE	include/GL/glu.h	241;"	d
GLU_TESS_VERTEX	include/GL/glu.h	216;"	d
GLU_TESS_VERTEX_DATA	include/GL/glu.h	225;"	d
GLU_TESS_WINDING_ABS_GEQ_TWO	include/GL/glu.h	264;"	d
GLU_TESS_WINDING_NEGATIVE	include/GL/glu.h	263;"	d
GLU_TESS_WINDING_NONZERO	include/GL/glu.h	261;"	d
GLU_TESS_WINDING_ODD	include/GL/glu.h	260;"	d
GLU_TESS_WINDING_POSITIVE	include/GL/glu.h	262;"	d
GLU_TESS_WINDING_RULE	include/GL/glu.h	239;"	d
GLU_TRUE	include/GL/glu.h	76;"	d
GLU_UNKNOWN	include/GL/glu.h	236;"	d
GLU_U_STEP	include/GL/glu.h	173;"	d
GLU_VERSION	include/GL/glu.h	84;"	d
GLU_VERSION_1_1	include/GL/glu.h	79;"	d
GLU_VERSION_1_2	include/GL/glu.h	80;"	d
GLU_VERSION_1_3	include/GL/glu.h	81;"	d
GLU_VERTEX	include/GL/glu.h	217;"	d
GLU_V_STEP	include/GL/glu.h	174;"	d
GLUnurbs	include/GL/glu.h	/^typedef struct GLUnurbs GLUnurbs;$/;"	t	typeref:struct:GLUnurbs
GLUnurbsObj	include/GL/glu.h	/^typedef GLUnurbs GLUnurbsObj;$/;"	t
GLUquadric	include/GL/glu.h	/^typedef struct GLUquadric GLUquadric;$/;"	t	typeref:struct:GLUquadric
GLUquadricObj	include/GL/glu.h	/^typedef GLUquadric GLUquadricObj;$/;"	t
GLUtesselator	include/GL/glu.h	/^typedef struct GLUtesselator GLUtesselator;$/;"	t	typeref:struct:GLUtesselator
GLUtesselatorObj	include/GL/glu.h	/^typedef GLUtesselator GLUtesselatorObj;$/;"	t
GLUtriangulatorObj	include/GL/glu.h	/^typedef GLUtesselator GLUtriangulatorObj;$/;"	t
GLXBufferClobberEventSGIX	include/GL/glxext.h	/^} GLXBufferClobberEventSGIX;$/;"	t	typeref:struct:__anon2
GLXBufferClobberEventSGIX	shared/GLee.h	/^	} GLXBufferClobberEventSGIX;$/;"	t	typeref:struct:__anon11
GLXContext	include/GL/glx.h	/^typedef struct __GLXcontextRec *GLXContext;$/;"	t	typeref:struct:__GLXcontextRec
GLXContextID	include/GL/glx.h	/^typedef XID GLXContextID;$/;"	t
GLXDrawable	include/GL/glx.h	/^typedef XID GLXDrawable;$/;"	t
GLXEvent	include/GL/glx.h	/^} GLXEvent;$/;"	t	typeref:union:__GLXEvent
GLXFBConfig	include/GL/glx.h	/^typedef struct __GLXFBConfigRec *GLXFBConfig;$/;"	t	typeref:struct:__GLXFBConfigRec
GLXFBConfigID	include/GL/glx.h	/^typedef XID GLXFBConfigID;$/;"	t
GLXFBConfigIDSGIX	include/GL/glxext.h	/^typedef XID GLXFBConfigIDSGIX;$/;"	t
GLXFBConfigIDSGIX	shared/GLee.h	/^	typedef XID GLXFBConfigIDSGIX;$/;"	t
GLXFBConfigSGIX	include/GL/glxext.h	/^typedef struct __GLXFBConfigRec *GLXFBConfigSGIX;$/;"	t	typeref:struct:__GLXFBConfigRec
GLXFBConfigSGIX	shared/GLee.h	/^	typedef struct __GLXFBConfigRec *GLXFBConfigSGIX;$/;"	t	typeref:struct:__GLXFBConfigRec
GLXHyperpipeConfigSGIX	include/GL/glxext.h	/^} GLXHyperpipeConfigSGIX;$/;"	t	typeref:struct:__anon4
GLXHyperpipeConfigSGIX	shared/GLee.h	/^		} GLXHyperpipeConfigSGIX;$/;"	t	typeref:struct:__anon13
GLXHyperpipeNetworkSGIX	include/GL/glxext.h	/^} GLXHyperpipeNetworkSGIX;$/;"	t	typeref:struct:__anon3
GLXHyperpipeNetworkSGIX	shared/GLee.h	/^		} GLXHyperpipeNetworkSGIX;$/;"	t	typeref:struct:__anon12
GLXPbuffer	include/GL/glx.h	/^typedef XID GLXPbuffer;$/;"	t
GLXPbufferClobberEvent	include/GL/glx.h	/^} GLXPbufferClobberEvent;$/;"	t	typeref:struct:__anon1
GLXPbufferSGIX	include/GL/glxext.h	/^typedef XID GLXPbufferSGIX;$/;"	t
GLXPbufferSGIX	shared/GLee.h	/^	typedef XID GLXPbufferSGIX;$/;"	t
GLXPipeRect	include/GL/glxext.h	/^} GLXPipeRect;$/;"	t	typeref:struct:__anon5
GLXPipeRect	shared/GLee.h	/^		} GLXPipeRect;$/;"	t	typeref:struct:__anon14
GLXPipeRectLimits	include/GL/glxext.h	/^} GLXPipeRectLimits;$/;"	t	typeref:struct:__anon6
GLXPipeRectLimits	shared/GLee.h	/^		} GLXPipeRectLimits;$/;"	t	typeref:struct:__anon15
GLXPixmap	include/GL/glx.h	/^typedef XID GLXPixmap;$/;"	t
GLXVideoCaptureDeviceNV	include/GL/glxext.h	/^typedef XID GLXVideoCaptureDeviceNV;$/;"	t
GLXVideoDeviceNV	include/GL/glxext.h	/^typedef unsigned int GLXVideoDeviceNV;$/;"	t
GLXVideoSourceSGIX	include/GL/glxext.h	/^typedef XID GLXVideoSourceSGIX;$/;"	t
GLXWindow	include/GL/glx.h	/^typedef XID GLXWindow;$/;"	t
GLX_3DFX_FULLSCREEN_MODE_MESA	include/GL/glxext.h	283;"	d
GLX_3DFX_FULLSCREEN_MODE_MESA	shared/GLee.h	10655;"	d
GLX_3DFX_WINDOW_MODE_MESA	include/GL/glxext.h	282;"	d
GLX_3DFX_WINDOW_MODE_MESA	shared/GLee.h	10654;"	d
GLX_3DFX_multisample	shared/GLee.h	10608;"	d
GLX_ACCUM_ALPHA_SIZE	include/GL/glx.h	86;"	d
GLX_ACCUM_BLUE_SIZE	include/GL/glx.h	85;"	d
GLX_ACCUM_BUFFER_BIT	include/GL/glx.h	131;"	d
GLX_ACCUM_BUFFER_BIT	include/GL/glxext.h	69;"	d
GLX_ACCUM_BUFFER_BIT	shared/GLee.h	10188;"	d
GLX_ACCUM_BUFFER_BIT_SGIX	include/GL/glxext.h	219;"	d
GLX_ACCUM_BUFFER_BIT_SGIX	shared/GLee.h	10481;"	d
GLX_ACCUM_GREEN_SIZE	include/GL/glx.h	84;"	d
GLX_ACCUM_RED_SIZE	include/GL/glx.h	83;"	d
GLX_ALPHA_SIZE	include/GL/glx.h	80;"	d
GLX_ARB_create_context	include/GL/glxext.h	544;"	d
GLX_ARB_create_context_profile	include/GL/glxext.h	552;"	d
GLX_ARB_fbconfig_float	include/GL/glxext.h	540;"	d
GLX_ARB_fbconfig_float	shared/GLee.h	10313;"	d
GLX_ARB_get_proc_address	include/GL/glx.h	318;"	d
GLX_ARB_get_proc_address	include/GL/glxext.h	528;"	d
GLX_ARB_get_proc_address	shared/GLee.h	753;"	d
GLX_ARB_multisample	include/GL/glxext.h	536;"	d
GLX_ARB_multisample	shared/GLee.h	10303;"	d
GLX_ARB_render_texture	include/GL/glx.h	381;"	d
GLX_AUX0_EXT	include/GL/glx.h	473;"	d
GLX_AUX0_EXT	include/GL/glxext.h	353;"	d
GLX_AUX1_EXT	include/GL/glx.h	474;"	d
GLX_AUX1_EXT	include/GL/glxext.h	354;"	d
GLX_AUX2_EXT	include/GL/glx.h	475;"	d
GLX_AUX2_EXT	include/GL/glxext.h	355;"	d
GLX_AUX3_EXT	include/GL/glx.h	476;"	d
GLX_AUX3_EXT	include/GL/glxext.h	356;"	d
GLX_AUX4_EXT	include/GL/glx.h	477;"	d
GLX_AUX4_EXT	include/GL/glxext.h	357;"	d
GLX_AUX5_EXT	include/GL/glx.h	478;"	d
GLX_AUX5_EXT	include/GL/glxext.h	358;"	d
GLX_AUX6_EXT	include/GL/glx.h	479;"	d
GLX_AUX6_EXT	include/GL/glxext.h	359;"	d
GLX_AUX7_EXT	include/GL/glx.h	480;"	d
GLX_AUX7_EXT	include/GL/glxext.h	360;"	d
GLX_AUX8_EXT	include/GL/glx.h	481;"	d
GLX_AUX8_EXT	include/GL/glxext.h	361;"	d
GLX_AUX9_EXT	include/GL/glx.h	482;"	d
GLX_AUX9_EXT	include/GL/glxext.h	362;"	d
GLX_AUX_BUFFERS	include/GL/glx.h	76;"	d
GLX_AUX_BUFFERS_BIT	include/GL/glx.h	124;"	d
GLX_AUX_BUFFERS_BIT	include/GL/glxext.h	66;"	d
GLX_AUX_BUFFERS_BIT	shared/GLee.h	10185;"	d
GLX_AUX_BUFFERS_BIT_SGIX	include/GL/glxext.h	216;"	d
GLX_AUX_BUFFERS_BIT_SGIX	shared/GLee.h	10478;"	d
GLX_BACK_EXT	include/GL/glx.h	472;"	d
GLX_BACK_EXT	include/GL/glxext.h	352;"	d
GLX_BACK_LEFT_BUFFER_BIT	include/GL/glx.h	127;"	d
GLX_BACK_LEFT_BUFFER_BIT	include/GL/glxext.h	64;"	d
GLX_BACK_LEFT_BUFFER_BIT	shared/GLee.h	10183;"	d
GLX_BACK_LEFT_BUFFER_BIT_SGIX	include/GL/glxext.h	214;"	d
GLX_BACK_LEFT_BUFFER_BIT_SGIX	shared/GLee.h	10476;"	d
GLX_BACK_LEFT_EXT	include/GL/glx.h	469;"	d
GLX_BACK_LEFT_EXT	include/GL/glxext.h	349;"	d
GLX_BACK_RIGHT_BUFFER_BIT	include/GL/glx.h	128;"	d
GLX_BACK_RIGHT_BUFFER_BIT	include/GL/glxext.h	65;"	d
GLX_BACK_RIGHT_BUFFER_BIT	shared/GLee.h	10184;"	d
GLX_BACK_RIGHT_BUFFER_BIT_SGIX	include/GL/glxext.h	215;"	d
GLX_BACK_RIGHT_BUFFER_BIT_SGIX	shared/GLee.h	10477;"	d
GLX_BACK_RIGHT_EXT	include/GL/glx.h	470;"	d
GLX_BACK_RIGHT_EXT	include/GL/glxext.h	350;"	d
GLX_BAD_ATTRIBUTE	include/GL/glx.h	93;"	d
GLX_BAD_CONTEXT	include/GL/glx.h	96;"	d
GLX_BAD_ENUM	include/GL/glx.h	98;"	d
GLX_BAD_HYPERPIPE_CONFIG_SGIX	include/GL/glxext.h	306;"	d
GLX_BAD_HYPERPIPE_CONFIG_SGIX	shared/GLee.h	10721;"	d
GLX_BAD_HYPERPIPE_SGIX	include/GL/glxext.h	307;"	d
GLX_BAD_HYPERPIPE_SGIX	shared/GLee.h	10722;"	d
GLX_BAD_SCREEN	include/GL/glx.h	92;"	d
GLX_BAD_VALUE	include/GL/glx.h	97;"	d
GLX_BAD_VISUAL	include/GL/glx.h	95;"	d
GLX_BIND_TO_MIPMAP_TEXTURE_EXT	include/GL/glx.h	447;"	d
GLX_BIND_TO_MIPMAP_TEXTURE_EXT	include/GL/glxext.h	335;"	d
GLX_BIND_TO_TEXTURE_RGBA_EXT	include/GL/glx.h	446;"	d
GLX_BIND_TO_TEXTURE_RGBA_EXT	include/GL/glxext.h	334;"	d
GLX_BIND_TO_TEXTURE_RGB_EXT	include/GL/glx.h	445;"	d
GLX_BIND_TO_TEXTURE_RGB_EXT	include/GL/glxext.h	333;"	d
GLX_BIND_TO_TEXTURE_TARGETS_EXT	include/GL/glx.h	448;"	d
GLX_BIND_TO_TEXTURE_TARGETS_EXT	include/GL/glxext.h	336;"	d
GLX_BLENDED_RGBA_SGIS	include/GL/glxext.h	256;"	d
GLX_BLENDED_RGBA_SGIS	shared/GLee.h	10581;"	d
GLX_BLUE_SIZE	include/GL/glx.h	79;"	d
GLX_BUFFER_CLOBBER_MASK_SGIX	include/GL/glxext.h	211;"	d
GLX_BUFFER_CLOBBER_MASK_SGIX	shared/GLee.h	10473;"	d
GLX_BUFFER_SIZE	include/GL/glx.h	71;"	d
GLX_COLOR_INDEX_BIT	include/GL/glx.h	166;"	d
GLX_COLOR_INDEX_BIT	include/GL/glxext.h	60;"	d
GLX_COLOR_INDEX_BIT	shared/GLee.h	10179;"	d
GLX_COLOR_INDEX_BIT_SGIX	include/GL/glxext.h	199;"	d
GLX_COLOR_INDEX_BIT_SGIX	shared/GLee.h	10439;"	d
GLX_COLOR_INDEX_TYPE	include/GL/glx.h	150;"	d
GLX_COLOR_INDEX_TYPE	include/GL/glxext.h	97;"	d
GLX_COLOR_INDEX_TYPE	shared/GLee.h	10216;"	d
GLX_COLOR_INDEX_TYPE_SGIX	include/GL/glxext.h	205;"	d
GLX_COLOR_INDEX_TYPE_SGIX	shared/GLee.h	10445;"	d
GLX_CONFIG_CAVEAT	include/GL/glx.h	112;"	d
GLX_CONFIG_CAVEAT	include/GL/glxext.h	70;"	d
GLX_CONFIG_CAVEAT	shared/GLee.h	10189;"	d
GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB	include/GL/glxext.h	142;"	d
GLX_CONTEXT_CORE_PROFILE_BIT_ARB	include/GL/glxext.h	141;"	d
GLX_CONTEXT_DEBUG_BIT_ARB	include/GL/glxext.h	133;"	d
GLX_CONTEXT_FLAGS_ARB	include/GL/glxext.h	137;"	d
GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	include/GL/glxext.h	134;"	d
GLX_CONTEXT_MAJOR_VERSION_ARB	include/GL/glxext.h	135;"	d
GLX_CONTEXT_MINOR_VERSION_ARB	include/GL/glxext.h	136;"	d
GLX_CONTEXT_PROFILE_MASK_ARB	include/GL/glxext.h	143;"	d
GLX_DAMAGED	include/GL/glx.h	159;"	d
GLX_DAMAGED	include/GL/glxext.h	106;"	d
GLX_DAMAGED	shared/GLee.h	10225;"	d
GLX_DAMAGED_SGIX	include/GL/glxext.h	231;"	d
GLX_DAMAGED_SGIX	shared/GLee.h	10493;"	d
GLX_DEPTH_BUFFER_BIT	include/GL/glx.h	129;"	d
GLX_DEPTH_BUFFER_BIT	include/GL/glxext.h	67;"	d
GLX_DEPTH_BUFFER_BIT	shared/GLee.h	10186;"	d
GLX_DEPTH_BUFFER_BIT_SGIX	include/GL/glxext.h	217;"	d
GLX_DEPTH_BUFFER_BIT_SGIX	shared/GLee.h	10479;"	d
GLX_DEPTH_SIZE	include/GL/glx.h	81;"	d
GLX_DEVICE_ID_NV	include/GL/glxext.h	386;"	d
GLX_DIGITAL_MEDIA_PBUFFER_SGIX	include/GL/glxext.h	246;"	d
GLX_DIRECT_COLOR	include/GL/glx.h	135;"	d
GLX_DIRECT_COLOR	include/GL/glxext.h	82;"	d
GLX_DIRECT_COLOR	shared/GLee.h	10201;"	d
GLX_DIRECT_COLOR_EXT	include/GL/glxext.h	161;"	d
GLX_DIRECT_COLOR_EXT	shared/GLee.h	10345;"	d
GLX_DONT_CARE	include/GL/glx.h	113;"	d
GLX_DONT_CARE	include/GL/glxext.h	78;"	d
GLX_DONT_CARE	shared/GLee.h	10197;"	d
GLX_DOUBLEBUFFER	include/GL/glx.h	74;"	d
GLX_DRAWABLE_TYPE	include/GL/glx.h	145;"	d
GLX_DRAWABLE_TYPE	include/GL/glxext.h	92;"	d
GLX_DRAWABLE_TYPE	shared/GLee.h	10211;"	d
GLX_DRAWABLE_TYPE_SGIX	include/GL/glxext.h	200;"	d
GLX_DRAWABLE_TYPE_SGIX	shared/GLee.h	10440;"	d
GLX_EVENT_MASK	include/GL/glx.h	158;"	d
GLX_EVENT_MASK	include/GL/glxext.h	105;"	d
GLX_EVENT_MASK	shared/GLee.h	10224;"	d
GLX_EVENT_MASK_SGIX	include/GL/glxext.h	230;"	d
GLX_EVENT_MASK_SGIX	shared/GLee.h	10492;"	d
GLX_EXTENSIONS	include/GL/glx.h	106;"	d
GLX_EXTENSION_NAME	include/GL/glx.h	63;"	d
GLX_EXT_fbconfig_packed_float	include/GL/glxext.h	833;"	d
GLX_EXT_framebuffer_sRGB	include/GL/glxext.h	837;"	d
GLX_EXT_import_context	include/GL/glxext.h	608;"	d
GLX_EXT_import_context	shared/GLee.h	10407;"	d
GLX_EXT_scene_marker	shared/GLee.h	10770;"	d
GLX_EXT_swap_control	include/GL/glxext.h	913;"	d
GLX_EXT_texture_from_pixmap	include/GL/glx.h	443;"	d
GLX_EXT_texture_from_pixmap	include/GL/glxext.h	841;"	d
GLX_EXT_visual_info	include/GL/glxext.h	560;"	d
GLX_EXT_visual_info	shared/GLee.h	10333;"	d
GLX_EXT_visual_rating	include/GL/glxext.h	604;"	d
GLX_EXT_visual_rating	shared/GLee.h	10396;"	d
GLX_FBCONFIG_ID	include/GL/glx.h	148;"	d
GLX_FBCONFIG_ID	include/GL/glxext.h	95;"	d
GLX_FBCONFIG_ID	shared/GLee.h	10214;"	d
GLX_FBCONFIG_ID_SGIX	include/GL/glxext.h	203;"	d
GLX_FBCONFIG_ID_SGIX	shared/GLee.h	10443;"	d
GLX_FLOAT_COMPONENTS_NV	include/GL/glx.h	396;"	d
GLX_FLOAT_COMPONENTS_NV	include/GL/glxext.h	301;"	d
GLX_FLOAT_COMPONENTS_NV	shared/GLee.h	10711;"	d
GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT	include/GL/glxext.h	326;"	d
GLX_FRONT_EXT	include/GL/glx.h	471;"	d
GLX_FRONT_EXT	include/GL/glxext.h	351;"	d
GLX_FRONT_LEFT_BUFFER_BIT	include/GL/glx.h	125;"	d
GLX_FRONT_LEFT_BUFFER_BIT	include/GL/glxext.h	62;"	d
GLX_FRONT_LEFT_BUFFER_BIT	shared/GLee.h	10181;"	d
GLX_FRONT_LEFT_BUFFER_BIT_SGIX	include/GL/glxext.h	212;"	d
GLX_FRONT_LEFT_BUFFER_BIT_SGIX	shared/GLee.h	10474;"	d
GLX_FRONT_LEFT_EXT	include/GL/glx.h	467;"	d
GLX_FRONT_LEFT_EXT	include/GL/glxext.h	347;"	d
GLX_FRONT_RIGHT_BUFFER_BIT	include/GL/glx.h	126;"	d
GLX_FRONT_RIGHT_BUFFER_BIT	include/GL/glxext.h	63;"	d
GLX_FRONT_RIGHT_BUFFER_BIT	shared/GLee.h	10182;"	d
GLX_FRONT_RIGHT_BUFFER_BIT_SGIX	include/GL/glxext.h	213;"	d
GLX_FRONT_RIGHT_BUFFER_BIT_SGIX	shared/GLee.h	10475;"	d
GLX_FRONT_RIGHT_EXT	include/GL/glx.h	468;"	d
GLX_FRONT_RIGHT_EXT	include/GL/glxext.h	348;"	d
GLX_GLXEXT_PROTOTYPES	shared/GLee.h	64;"	d
GLX_GLXEXT_VERSION	include/GL/glxext.h	53;"	d
GLX_GRAY_SCALE	include/GL/glx.h	138;"	d
GLX_GRAY_SCALE	include/GL/glxext.h	85;"	d
GLX_GRAY_SCALE	shared/GLee.h	10204;"	d
GLX_GRAY_SCALE_EXT	include/GL/glxext.h	164;"	d
GLX_GRAY_SCALE_EXT	shared/GLee.h	10348;"	d
GLX_GREEN_SIZE	include/GL/glx.h	78;"	d
GLX_H	include/GL/glx.h	27;"	d
GLX_HEIGHT	include/GL/glx.h	157;"	d
GLX_HEIGHT	include/GL/glxext.h	104;"	d
GLX_HEIGHT	shared/GLee.h	10223;"	d
GLX_HEIGHT_SGIX	include/GL/glxext.h	229;"	d
GLX_HEIGHT_SGIX	shared/GLee.h	10491;"	d
GLX_HYPERPIPE_DISPLAY_PIPE_SGIX	include/GL/glxext.h	308;"	d
GLX_HYPERPIPE_DISPLAY_PIPE_SGIX	shared/GLee.h	10723;"	d
GLX_HYPERPIPE_ID_SGIX	include/GL/glxext.h	314;"	d
GLX_HYPERPIPE_ID_SGIX	shared/GLee.h	10729;"	d
GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX	include/GL/glxext.h	305;"	d
GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX	shared/GLee.h	10720;"	d
GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX	include/GL/glxext.h	313;"	d
GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX	shared/GLee.h	10728;"	d
GLX_HYPERPIPE_RENDER_PIPE_SGIX	include/GL/glxext.h	309;"	d
GLX_HYPERPIPE_RENDER_PIPE_SGIX	shared/GLee.h	10724;"	d
GLX_HYPERPIPE_STEREO_SGIX	include/GL/glxext.h	312;"	d
GLX_HYPERPIPE_STEREO_SGIX	shared/GLee.h	10727;"	d
GLX_LARGEST_PBUFFER	include/GL/glx.h	155;"	d
GLX_LARGEST_PBUFFER	include/GL/glxext.h	102;"	d
GLX_LARGEST_PBUFFER	shared/GLee.h	10221;"	d
GLX_LARGEST_PBUFFER_SGIX	include/GL/glxext.h	227;"	d
GLX_LARGEST_PBUFFER_SGIX	shared/GLee.h	10489;"	d
GLX_LEVEL	include/GL/glx.h	72;"	d
GLX_MANGLE_H	include/GL/glx_mangle.h	27;"	d
GLX_MAX_PBUFFER_HEIGHT	include/GL/glx.h	152;"	d
GLX_MAX_PBUFFER_HEIGHT	include/GL/glxext.h	99;"	d
GLX_MAX_PBUFFER_HEIGHT	shared/GLee.h	10218;"	d
GLX_MAX_PBUFFER_HEIGHT_SGIX	include/GL/glxext.h	222;"	d
GLX_MAX_PBUFFER_HEIGHT_SGIX	shared/GLee.h	10484;"	d
GLX_MAX_PBUFFER_PIXELS	include/GL/glx.h	153;"	d
GLX_MAX_PBUFFER_PIXELS	include/GL/glxext.h	100;"	d
GLX_MAX_PBUFFER_PIXELS	shared/GLee.h	10219;"	d
GLX_MAX_PBUFFER_PIXELS_SGIX	include/GL/glxext.h	223;"	d
GLX_MAX_PBUFFER_PIXELS_SGIX	shared/GLee.h	10485;"	d
GLX_MAX_PBUFFER_WIDTH	include/GL/glx.h	151;"	d
GLX_MAX_PBUFFER_WIDTH	include/GL/glxext.h	98;"	d
GLX_MAX_PBUFFER_WIDTH	shared/GLee.h	10217;"	d
GLX_MAX_PBUFFER_WIDTH_SGIX	include/GL/glxext.h	221;"	d
GLX_MAX_PBUFFER_WIDTH_SGIX	shared/GLee.h	10483;"	d
GLX_MAX_SWAP_INTERVAL_EXT	include/GL/glxext.h	393;"	d
GLX_MESA_agp_offset	include/GL/glxext.h	825;"	d
GLX_MESA_agp_offset	shared/GLee.h	10759;"	d
GLX_MESA_allocate_memory	include/GL/glx.h	364;"	d
GLX_MESA_copy_sub_buffer	include/GL/glxext.h	718;"	d
GLX_MESA_copy_sub_buffer	shared/GLee.h	10618;"	d
GLX_MESA_pixmap_colormap	include/GL/glxext.h	726;"	d
GLX_MESA_pixmap_colormap	shared/GLee.h	10629;"	d
GLX_MESA_release_buffers	include/GL/glxext.h	734;"	d
GLX_MESA_release_buffers	shared/GLee.h	10640;"	d
GLX_MESA_set_3dfx_mode	include/GL/glxext.h	742;"	d
GLX_MESA_set_3dfx_mode	shared/GLee.h	10651;"	d
GLX_MESA_swap_control	include/GL/glx.h	426;"	d
GLX_MESA_swap_frame_usage	include/GL/glx.h	406;"	d
GLX_MIPMAP_TEXTURE_EXT	include/GL/glx.h	453;"	d
GLX_MIPMAP_TEXTURE_EXT	include/GL/glxext.h	340;"	d
GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS	include/GL/glxext.h	261;"	d
GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS	shared/GLee.h	10591;"	d
GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS	include/GL/glxext.h	260;"	d
GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS	shared/GLee.h	10590;"	d
GLX_NONE	include/GL/glx.h	132;"	d
GLX_NONE	include/GL/glxext.h	79;"	d
GLX_NONE	shared/GLee.h	10198;"	d
GLX_NONE_EXT	include/GL/glxext.h	159;"	d
GLX_NONE_EXT	shared/GLee.h	10343;"	d
GLX_NON_CONFORMANT_CONFIG	include/GL/glx.h	144;"	d
GLX_NON_CONFORMANT_CONFIG	include/GL/glxext.h	91;"	d
GLX_NON_CONFORMANT_CONFIG	shared/GLee.h	10210;"	d
GLX_NON_CONFORMANT_VISUAL_EXT	include/GL/glxext.h	185;"	d
GLX_NON_CONFORMANT_VISUAL_EXT	shared/GLee.h	10401;"	d
GLX_NO_EXTENSION	include/GL/glx.h	94;"	d
GLX_NUM_VIDEO_CAPTURE_SLOTS_NV	include/GL/glxext.h	388;"	d
GLX_NUM_VIDEO_SLOTS_NV	include/GL/glxext.h	366;"	d
GLX_NV_copy_image	include/GL/glxext.h	921;"	d
GLX_NV_float_buffer	include/GL/glx.h	394;"	d
GLX_NV_float_buffer	include/GL/glxext.h	774;"	d
GLX_NV_float_buffer	shared/GLee.h	10708;"	d
GLX_NV_present_video	include/GL/glxext.h	851;"	d
GLX_NV_swap_group	include/GL/glxext.h	879;"	d
GLX_NV_vertex_array_range	include/GL/glx.h	350;"	d
GLX_NV_video_capture	include/GL/glxext.h	897;"	d
GLX_NV_video_output	include/GL/glxext.h	861;"	d
GLX_OML_swap_method	include/GL/glxext.h	754;"	d
GLX_OML_swap_method	shared/GLee.h	10673;"	d
GLX_OML_sync_control	include/GL/glxext.h	758;"	d
GLX_OML_sync_control	shared/GLee.h	10685;"	d
GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX	include/GL/glxext.h	225;"	d
GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX	shared/GLee.h	10487;"	d
GLX_OPTIMAL_PBUFFER_WIDTH_SGIX	include/GL/glxext.h	224;"	d
GLX_OPTIMAL_PBUFFER_WIDTH_SGIX	shared/GLee.h	10486;"	d
GLX_PBUFFER	include/GL/glx.h	162;"	d
GLX_PBUFFER	include/GL/glxext.h	109;"	d
GLX_PBUFFER	shared/GLee.h	10228;"	d
GLX_PBUFFER_BIT	include/GL/glx.h	123;"	d
GLX_PBUFFER_BIT	include/GL/glxext.h	58;"	d
GLX_PBUFFER_BIT	shared/GLee.h	10177;"	d
GLX_PBUFFER_BIT_SGIX	include/GL/glxext.h	210;"	d
GLX_PBUFFER_BIT_SGIX	shared/GLee.h	10472;"	d
GLX_PBUFFER_CLOBBER_MASK	include/GL/glx.h	167;"	d
GLX_PBUFFER_CLOBBER_MASK	include/GL/glxext.h	61;"	d
GLX_PBUFFER_CLOBBER_MASK	shared/GLee.h	10180;"	d
GLX_PBUFFER_HEIGHT	include/GL/glx.h	163;"	d
GLX_PBUFFER_HEIGHT	include/GL/glxext.h	110;"	d
GLX_PBUFFER_HEIGHT	shared/GLee.h	10229;"	d
GLX_PBUFFER_SGIX	include/GL/glxext.h	234;"	d
GLX_PBUFFER_SGIX	shared/GLee.h	10496;"	d
GLX_PBUFFER_WIDTH	include/GL/glx.h	164;"	d
GLX_PBUFFER_WIDTH	include/GL/glxext.h	111;"	d
GLX_PBUFFER_WIDTH	shared/GLee.h	10230;"	d
GLX_PIPE_RECT_LIMITS_SGIX	include/GL/glxext.h	311;"	d
GLX_PIPE_RECT_LIMITS_SGIX	shared/GLee.h	10726;"	d
GLX_PIPE_RECT_SGIX	include/GL/glxext.h	310;"	d
GLX_PIPE_RECT_SGIX	shared/GLee.h	10725;"	d
GLX_PIXMAP_BIT	include/GL/glx.h	122;"	d
GLX_PIXMAP_BIT	include/GL/glxext.h	57;"	d
GLX_PIXMAP_BIT	shared/GLee.h	10176;"	d
GLX_PIXMAP_BIT_SGIX	include/GL/glxext.h	197;"	d
GLX_PIXMAP_BIT_SGIX	shared/GLee.h	10437;"	d
GLX_PRESERVED_CONTENTS	include/GL/glx.h	154;"	d
GLX_PRESERVED_CONTENTS	include/GL/glxext.h	101;"	d
GLX_PRESERVED_CONTENTS	shared/GLee.h	10220;"	d
GLX_PRESERVED_CONTENTS_SGIX	include/GL/glxext.h	226;"	d
GLX_PRESERVED_CONTENTS_SGIX	shared/GLee.h	10488;"	d
GLX_PSEUDO_COLOR	include/GL/glx.h	136;"	d
GLX_PSEUDO_COLOR	include/GL/glxext.h	83;"	d
GLX_PSEUDO_COLOR	shared/GLee.h	10202;"	d
GLX_PSEUDO_COLOR_EXT	include/GL/glxext.h	162;"	d
GLX_PSEUDO_COLOR_EXT	shared/GLee.h	10346;"	d
GLX_RED_SIZE	include/GL/glx.h	77;"	d
GLX_RENDER_TYPE	include/GL/glx.h	146;"	d
GLX_RENDER_TYPE	include/GL/glxext.h	93;"	d
GLX_RENDER_TYPE	shared/GLee.h	10212;"	d
GLX_RENDER_TYPE_SGIX	include/GL/glxext.h	201;"	d
GLX_RENDER_TYPE_SGIX	shared/GLee.h	10441;"	d
GLX_RGBA	include/GL/glx.h	73;"	d
GLX_RGBA_BIT	include/GL/glx.h	165;"	d
GLX_RGBA_BIT	include/GL/glxext.h	59;"	d
GLX_RGBA_BIT	shared/GLee.h	10178;"	d
GLX_RGBA_BIT_SGIX	include/GL/glxext.h	198;"	d
GLX_RGBA_BIT_SGIX	shared/GLee.h	10438;"	d
GLX_RGBA_FLOAT_BIT_ARB	include/GL/glxext.h	129;"	d
GLX_RGBA_FLOAT_BIT_ARB	shared/GLee.h	10317;"	d
GLX_RGBA_FLOAT_TYPE_ARB	include/GL/glxext.h	128;"	d
GLX_RGBA_FLOAT_TYPE_ARB	shared/GLee.h	10316;"	d
GLX_RGBA_TYPE	include/GL/glx.h	149;"	d
GLX_RGBA_TYPE	include/GL/glxext.h	96;"	d
GLX_RGBA_TYPE	shared/GLee.h	10215;"	d
GLX_RGBA_TYPE_SGIX	include/GL/glxext.h	204;"	d
GLX_RGBA_TYPE_SGIX	shared/GLee.h	10444;"	d
GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT	include/GL/glxext.h	322;"	d
GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT	include/GL/glxext.h	321;"	d
GLX_SAMPLES	include/GL/glx.h	174;"	d
GLX_SAMPLES	include/GL/glxext.h	116;"	d
GLX_SAMPLES	shared/GLee.h	10294;"	d
GLX_SAMPLES_3DFX	include/GL/glxext.h	269;"	d
GLX_SAMPLES_3DFX	shared/GLee.h	10612;"	d
GLX_SAMPLES_ARB	include/GL/glxext.h	124;"	d
GLX_SAMPLES_ARB	shared/GLee.h	10307;"	d
GLX_SAMPLES_SGIS	include/GL/glxext.h	148;"	d
GLX_SAMPLES_SGIS	shared/GLee.h	10327;"	d
GLX_SAMPLE_BUFFERS	include/GL/glx.h	173;"	d
GLX_SAMPLE_BUFFERS	include/GL/glxext.h	115;"	d
GLX_SAMPLE_BUFFERS	shared/GLee.h	10293;"	d
GLX_SAMPLE_BUFFERS_3DFX	include/GL/glxext.h	268;"	d
GLX_SAMPLE_BUFFERS_3DFX	shared/GLee.h	10611;"	d
GLX_SAMPLE_BUFFERS_ARB	include/GL/glxext.h	123;"	d
GLX_SAMPLE_BUFFERS_ARB	shared/GLee.h	10306;"	d
GLX_SAMPLE_BUFFERS_BIT_SGIX	include/GL/glxext.h	220;"	d
GLX_SAMPLE_BUFFERS_BIT_SGIX	shared/GLee.h	10482;"	d
GLX_SAMPLE_BUFFERS_SGIS	include/GL/glxext.h	147;"	d
GLX_SAMPLE_BUFFERS_SGIS	shared/GLee.h	10326;"	d
GLX_SAVED	include/GL/glx.h	160;"	d
GLX_SAVED	include/GL/glxext.h	107;"	d
GLX_SAVED	shared/GLee.h	10226;"	d
GLX_SAVED_SGIX	include/GL/glxext.h	232;"	d
GLX_SAVED_SGIX	shared/GLee.h	10494;"	d
GLX_SCREEN	include/GL/glx.h	143;"	d
GLX_SCREEN	include/GL/glxext.h	90;"	d
GLX_SCREEN	shared/GLee.h	10209;"	d
GLX_SCREEN_EXT	include/GL/glxext.h	192;"	d
GLX_SCREEN_EXT	shared/GLee.h	10412;"	d
GLX_SGIS_blended_overlay	shared/GLee.h	10578;"	d
GLX_SGIS_multisample	include/GL/glxext.h	556;"	d
GLX_SGIS_multisample	shared/GLee.h	10323;"	d
GLX_SGIS_shared_multisample	shared/GLee.h	10587;"	d
GLX_SGIX_dmbuffer	include/GL/glxext.h	682;"	d
GLX_SGIX_fbconfig	include/GL/glxext.h	624;"	d
GLX_SGIX_fbconfig	shared/GLee.h	10433;"	d
GLX_SGIX_hyperpipe	include/GL/glxext.h	778;"	d
GLX_SGIX_hyperpipe	shared/GLee.h	10717;"	d
GLX_SGIX_pbuffer	include/GL/glxext.h	642;"	d
GLX_SGIX_pbuffer	shared/GLee.h	10469;"	d
GLX_SGIX_swap_barrier	include/GL/glxext.h	700;"	d
GLX_SGIX_swap_barrier	shared/GLee.h	10564;"	d
GLX_SGIX_swap_group	include/GL/glxext.h	692;"	d
GLX_SGIX_swap_group	shared/GLee.h	10553;"	d
GLX_SGIX_video_resize	include/GL/glxext.h	666;"	d
GLX_SGIX_video_resize	shared/GLee.h	10528;"	d
GLX_SGIX_video_source	include/GL/glxext.h	592;"	d
GLX_SGIX_visual_select_group	include/GL/glxext.h	750;"	d
GLX_SGIX_visual_select_group	shared/GLee.h	10664;"	d
GLX_SGI_cushion	include/GL/glxext.h	658;"	d
GLX_SGI_cushion	shared/GLee.h	10517;"	d
GLX_SGI_make_current_read	include/GL/glxext.h	582;"	d
GLX_SGI_make_current_read	shared/GLee.h	10382;"	d
GLX_SGI_swap_control	include/GL/glxext.h	564;"	d
GLX_SGI_swap_control	shared/GLee.h	10357;"	d
GLX_SGI_video_sync	include/GL/glxext.h	572;"	d
GLX_SGI_video_sync	shared/GLee.h	10368;"	d
GLX_SHARE_CONTEXT_EXT	include/GL/glxext.h	190;"	d
GLX_SHARE_CONTEXT_EXT	shared/GLee.h	10410;"	d
GLX_SLOW_CONFIG	include/GL/glx.h	133;"	d
GLX_SLOW_CONFIG	include/GL/glxext.h	80;"	d
GLX_SLOW_CONFIG	shared/GLee.h	10199;"	d
GLX_SLOW_VISUAL_EXT	include/GL/glxext.h	184;"	d
GLX_SLOW_VISUAL_EXT	shared/GLee.h	10400;"	d
GLX_STATIC_COLOR	include/GL/glx.h	137;"	d
GLX_STATIC_COLOR	include/GL/glxext.h	84;"	d
GLX_STATIC_COLOR	shared/GLee.h	10203;"	d
GLX_STATIC_COLOR_EXT	include/GL/glxext.h	163;"	d
GLX_STATIC_COLOR_EXT	shared/GLee.h	10347;"	d
GLX_STATIC_GRAY	include/GL/glx.h	139;"	d
GLX_STATIC_GRAY	include/GL/glxext.h	86;"	d
GLX_STATIC_GRAY	shared/GLee.h	10205;"	d
GLX_STATIC_GRAY_EXT	include/GL/glxext.h	165;"	d
GLX_STATIC_GRAY_EXT	shared/GLee.h	10349;"	d
GLX_STENCIL_BUFFER_BIT	include/GL/glx.h	130;"	d
GLX_STENCIL_BUFFER_BIT	include/GL/glxext.h	68;"	d
GLX_STENCIL_BUFFER_BIT	shared/GLee.h	10187;"	d
GLX_STENCIL_BUFFER_BIT_SGIX	include/GL/glxext.h	218;"	d
GLX_STENCIL_BUFFER_BIT_SGIX	shared/GLee.h	10480;"	d
GLX_STENCIL_SIZE	include/GL/glx.h	82;"	d
GLX_STEREO	include/GL/glx.h	75;"	d
GLX_SUN_get_transparent_index	include/GL/glxext.h	710;"	d
GLX_SUN_get_transparent_index	shared/GLee.h	10597;"	d
GLX_SWAP_COPY_OML	include/GL/glxext.h	293;"	d
GLX_SWAP_COPY_OML	shared/GLee.h	10678;"	d
GLX_SWAP_EXCHANGE_OML	include/GL/glxext.h	292;"	d
GLX_SWAP_EXCHANGE_OML	shared/GLee.h	10677;"	d
GLX_SWAP_INTERVAL_EXT	include/GL/glxext.h	392;"	d
GLX_SWAP_METHOD_OML	include/GL/glxext.h	291;"	d
GLX_SWAP_METHOD_OML	shared/GLee.h	10676;"	d
GLX_SWAP_UNDEFINED_OML	include/GL/glxext.h	294;"	d
GLX_SWAP_UNDEFINED_OML	shared/GLee.h	10679;"	d
GLX_SYNC_FRAME_SGIX	include/GL/glxext.h	241;"	d
GLX_SYNC_FRAME_SGIX	shared/GLee.h	10531;"	d
GLX_SYNC_SWAP_SGIX	include/GL/glxext.h	242;"	d
GLX_SYNC_SWAP_SGIX	shared/GLee.h	10532;"	d
GLX_TEXTURE_1D_BIT_EXT	include/GL/glx.h	459;"	d
GLX_TEXTURE_1D_BIT_EXT	include/GL/glxext.h	330;"	d
GLX_TEXTURE_1D_EXT	include/GL/glx.h	463;"	d
GLX_TEXTURE_1D_EXT	include/GL/glxext.h	344;"	d
GLX_TEXTURE_2D_BIT_EXT	include/GL/glx.h	460;"	d
GLX_TEXTURE_2D_BIT_EXT	include/GL/glxext.h	331;"	d
GLX_TEXTURE_2D_EXT	include/GL/glx.h	464;"	d
GLX_TEXTURE_2D_EXT	include/GL/glxext.h	345;"	d
GLX_TEXTURE_FORMAT_EXT	include/GL/glx.h	451;"	d
GLX_TEXTURE_FORMAT_EXT	include/GL/glxext.h	338;"	d
GLX_TEXTURE_FORMAT_NONE_EXT	include/GL/glx.h	455;"	d
GLX_TEXTURE_FORMAT_NONE_EXT	include/GL/glxext.h	341;"	d
GLX_TEXTURE_FORMAT_RGBA_EXT	include/GL/glx.h	457;"	d
GLX_TEXTURE_FORMAT_RGBA_EXT	include/GL/glxext.h	343;"	d
GLX_TEXTURE_FORMAT_RGB_EXT	include/GL/glx.h	456;"	d
GLX_TEXTURE_FORMAT_RGB_EXT	include/GL/glxext.h	342;"	d
GLX_TEXTURE_RECTANGLE_BIT_EXT	include/GL/glx.h	461;"	d
GLX_TEXTURE_RECTANGLE_BIT_EXT	include/GL/glxext.h	332;"	d
GLX_TEXTURE_RECTANGLE_EXT	include/GL/glx.h	465;"	d
GLX_TEXTURE_RECTANGLE_EXT	include/GL/glxext.h	346;"	d
GLX_TEXTURE_TARGET_EXT	include/GL/glx.h	452;"	d
GLX_TEXTURE_TARGET_EXT	include/GL/glxext.h	339;"	d
GLX_TRANSPARENT_ALPHA_VALUE	include/GL/glx.h	120;"	d
GLX_TRANSPARENT_ALPHA_VALUE	include/GL/glxext.h	77;"	d
GLX_TRANSPARENT_ALPHA_VALUE	shared/GLee.h	10196;"	d
GLX_TRANSPARENT_ALPHA_VALUE_EXT	include/GL/glxext.h	158;"	d
GLX_TRANSPARENT_ALPHA_VALUE_EXT	shared/GLee.h	10342;"	d
GLX_TRANSPARENT_BLUE_VALUE	include/GL/glx.h	119;"	d
GLX_TRANSPARENT_BLUE_VALUE	include/GL/glxext.h	76;"	d
GLX_TRANSPARENT_BLUE_VALUE	shared/GLee.h	10195;"	d
GLX_TRANSPARENT_BLUE_VALUE_EXT	include/GL/glxext.h	157;"	d
GLX_TRANSPARENT_BLUE_VALUE_EXT	shared/GLee.h	10341;"	d
GLX_TRANSPARENT_GREEN_VALUE	include/GL/glx.h	118;"	d
GLX_TRANSPARENT_GREEN_VALUE	include/GL/glxext.h	75;"	d
GLX_TRANSPARENT_GREEN_VALUE	shared/GLee.h	10194;"	d
GLX_TRANSPARENT_GREEN_VALUE_EXT	include/GL/glxext.h	156;"	d
GLX_TRANSPARENT_GREEN_VALUE_EXT	shared/GLee.h	10340;"	d
GLX_TRANSPARENT_INDEX	include/GL/glx.h	141;"	d
GLX_TRANSPARENT_INDEX	include/GL/glxext.h	88;"	d
GLX_TRANSPARENT_INDEX	shared/GLee.h	10207;"	d
GLX_TRANSPARENT_INDEX_EXT	include/GL/glxext.h	167;"	d
GLX_TRANSPARENT_INDEX_EXT	shared/GLee.h	10351;"	d
GLX_TRANSPARENT_INDEX_VALUE	include/GL/glx.h	116;"	d
GLX_TRANSPARENT_INDEX_VALUE	include/GL/glxext.h	73;"	d
GLX_TRANSPARENT_INDEX_VALUE	shared/GLee.h	10192;"	d
GLX_TRANSPARENT_INDEX_VALUE_EXT	include/GL/glxext.h	154;"	d
GLX_TRANSPARENT_INDEX_VALUE_EXT	shared/GLee.h	10338;"	d
GLX_TRANSPARENT_RED_VALUE	include/GL/glx.h	117;"	d
GLX_TRANSPARENT_RED_VALUE	include/GL/glxext.h	74;"	d
GLX_TRANSPARENT_RED_VALUE	shared/GLee.h	10193;"	d
GLX_TRANSPARENT_RED_VALUE_EXT	include/GL/glxext.h	155;"	d
GLX_TRANSPARENT_RED_VALUE_EXT	shared/GLee.h	10339;"	d
GLX_TRANSPARENT_RGB	include/GL/glx.h	140;"	d
GLX_TRANSPARENT_RGB	include/GL/glxext.h	87;"	d
GLX_TRANSPARENT_RGB	shared/GLee.h	10206;"	d
GLX_TRANSPARENT_RGB_EXT	include/GL/glxext.h	166;"	d
GLX_TRANSPARENT_RGB_EXT	shared/GLee.h	10350;"	d
GLX_TRANSPARENT_TYPE	include/GL/glx.h	115;"	d
GLX_TRANSPARENT_TYPE	include/GL/glxext.h	72;"	d
GLX_TRANSPARENT_TYPE	shared/GLee.h	10191;"	d
GLX_TRANSPARENT_TYPE_EXT	include/GL/glxext.h	153;"	d
GLX_TRANSPARENT_TYPE_EXT	shared/GLee.h	10337;"	d
GLX_TRUE_COLOR	include/GL/glx.h	134;"	d
GLX_TRUE_COLOR	include/GL/glxext.h	81;"	d
GLX_TRUE_COLOR	shared/GLee.h	10200;"	d
GLX_TRUE_COLOR_EXT	include/GL/glxext.h	160;"	d
GLX_TRUE_COLOR_EXT	shared/GLee.h	10344;"	d
GLX_UNIQUE_ID_NV	include/GL/glxext.h	387;"	d
GLX_USE_GL	include/GL/glx.h	70;"	d
GLX_VENDOR	include/GL/glx.h	104;"	d
GLX_VERSION	include/GL/glx.h	105;"	d
GLX_VERSION_1_1	include/GL/glx.h	58;"	d
GLX_VERSION_1_2	include/GL/glx.h	59;"	d
GLX_VERSION_1_3	include/GL/glx.h	60;"	d
GLX_VERSION_1_3	include/GL/glxext.h	478;"	d
GLX_VERSION_1_3	shared/GLee.h	10172;"	d
GLX_VERSION_1_4	include/GL/glx.h	61;"	d
GLX_VERSION_1_4	include/GL/glxext.h	520;"	d
GLX_VERSION_1_4	shared/GLee.h	10290;"	d
GLX_VIDEO_OUT_ALPHA_NV	include/GL/glxext.h	371;"	d
GLX_VIDEO_OUT_COLOR_AND_ALPHA_NV	include/GL/glxext.h	373;"	d
GLX_VIDEO_OUT_COLOR_AND_DEPTH_NV	include/GL/glxext.h	374;"	d
GLX_VIDEO_OUT_COLOR_NV	include/GL/glxext.h	370;"	d
GLX_VIDEO_OUT_DEPTH_NV	include/GL/glxext.h	372;"	d
GLX_VIDEO_OUT_FIELD_1_NV	include/GL/glxext.h	376;"	d
GLX_VIDEO_OUT_FIELD_2_NV	include/GL/glxext.h	377;"	d
GLX_VIDEO_OUT_FRAME_NV	include/GL/glxext.h	375;"	d
GLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV	include/GL/glxext.h	378;"	d
GLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV	include/GL/glxext.h	379;"	d
GLX_VISUAL_CAVEAT_EXT	include/GL/glxext.h	183;"	d
GLX_VISUAL_CAVEAT_EXT	shared/GLee.h	10399;"	d
GLX_VISUAL_ID	include/GL/glx.h	142;"	d
GLX_VISUAL_ID	include/GL/glxext.h	89;"	d
GLX_VISUAL_ID	shared/GLee.h	10208;"	d
GLX_VISUAL_ID_EXT	include/GL/glxext.h	191;"	d
GLX_VISUAL_ID_EXT	shared/GLee.h	10411;"	d
GLX_VISUAL_SELECT_GROUP_SGIX	include/GL/glxext.h	287;"	d
GLX_VISUAL_SELECT_GROUP_SGIX	shared/GLee.h	10667;"	d
GLX_WIDTH	include/GL/glx.h	156;"	d
GLX_WIDTH	include/GL/glxext.h	103;"	d
GLX_WIDTH	shared/GLee.h	10222;"	d
GLX_WIDTH_SGIX	include/GL/glxext.h	228;"	d
GLX_WIDTH_SGIX	shared/GLee.h	10490;"	d
GLX_WINDOW	include/GL/glx.h	161;"	d
GLX_WINDOW	include/GL/glxext.h	108;"	d
GLX_WINDOW	shared/GLee.h	10227;"	d
GLX_WINDOW_BIT	include/GL/glx.h	121;"	d
GLX_WINDOW_BIT	include/GL/glxext.h	56;"	d
GLX_WINDOW_BIT	shared/GLee.h	10175;"	d
GLX_WINDOW_BIT_SGIX	include/GL/glxext.h	196;"	d
GLX_WINDOW_BIT_SGIX	shared/GLee.h	10436;"	d
GLX_WINDOW_SGIX	include/GL/glxext.h	233;"	d
GLX_WINDOW_SGIX	shared/GLee.h	10495;"	d
GLX_X_RENDERABLE	include/GL/glx.h	147;"	d
GLX_X_RENDERABLE	include/GL/glxext.h	94;"	d
GLX_X_RENDERABLE	shared/GLee.h	10213;"	d
GLX_X_RENDERABLE_SGIX	include/GL/glxext.h	202;"	d
GLX_X_RENDERABLE_SGIX	shared/GLee.h	10442;"	d
GLX_X_VISUAL_TYPE	include/GL/glx.h	114;"	d
GLX_X_VISUAL_TYPE	include/GL/glxext.h	71;"	d
GLX_X_VISUAL_TYPE	shared/GLee.h	10190;"	d
GLX_X_VISUAL_TYPE_EXT	include/GL/glxext.h	152;"	d
GLX_X_VISUAL_TYPE_EXT	shared/GLee.h	10336;"	d
GLX_Y_INVERTED_EXT	include/GL/glx.h	449;"	d
GLX_Y_INVERTED_EXT	include/GL/glxext.h	337;"	d
GL_1PASS_EXT	include/GL/glext.h	2871;"	d
GL_1PASS_EXT	shared/GLee.h	6115;"	d
GL_1PASS_SGIS	include/GL/glext.h	1953;"	d
GL_1PASS_SGIS	shared/GLee.h	3854;"	d
GL_2D	include/GL/gl.h	395;"	d
GL_2PASS_0_EXT	include/GL/glext.h	2872;"	d
GL_2PASS_0_EXT	shared/GLee.h	6116;"	d
GL_2PASS_0_SGIS	include/GL/glext.h	1954;"	d
GL_2PASS_0_SGIS	shared/GLee.h	3855;"	d
GL_2PASS_1_EXT	include/GL/glext.h	2873;"	d
GL_2PASS_1_EXT	shared/GLee.h	6117;"	d
GL_2PASS_1_SGIS	include/GL/glext.h	1955;"	d
GL_2PASS_1_SGIS	shared/GLee.h	3856;"	d
GL_2X_BIT_ATI	include/GL/glext.h	3294;"	d
GL_2X_BIT_ATI	shared/GLee.h	6935;"	d
GL_2_BYTES	include/GL/gl.h	187;"	d
GL_3D	include/GL/gl.h	396;"	d
GL_3DFX_multisample	include/GL/glext.h	7329;"	d
GL_3DFX_multisample	shared/GLee.h	6085;"	d
GL_3DFX_tbuffer	include/GL/glext.h	7333;"	d
GL_3DFX_tbuffer	shared/GLee.h	6097;"	d
GL_3DFX_texture_compression_FXT1	include/GL/glext.h	7325;"	d
GL_3DFX_texture_compression_FXT1	shared/GLee.h	6075;"	d
GL_3D_COLOR	include/GL/gl.h	397;"	d
GL_3D_COLOR_TEXTURE	include/GL/gl.h	398;"	d
GL_3_BYTES	include/GL/gl.h	188;"	d
GL_422_AVERAGE_EXT	include/GL/glext.h	2636;"	d
GL_422_AVERAGE_EXT	shared/GLee.h	5584;"	d
GL_422_EXT	include/GL/glext.h	2634;"	d
GL_422_EXT	shared/GLee.h	5582;"	d
GL_422_REV_AVERAGE_EXT	include/GL/glext.h	2637;"	d
GL_422_REV_AVERAGE_EXT	shared/GLee.h	5585;"	d
GL_422_REV_EXT	include/GL/glext.h	2635;"	d
GL_422_REV_EXT	shared/GLee.h	5583;"	d
GL_4D_COLOR_TEXTURE	include/GL/gl.h	399;"	d
GL_4PASS_0_EXT	include/GL/glext.h	2874;"	d
GL_4PASS_0_EXT	shared/GLee.h	6118;"	d
GL_4PASS_0_SGIS	include/GL/glext.h	1956;"	d
GL_4PASS_0_SGIS	shared/GLee.h	3857;"	d
GL_4PASS_1_EXT	include/GL/glext.h	2875;"	d
GL_4PASS_1_EXT	shared/GLee.h	6119;"	d
GL_4PASS_1_SGIS	include/GL/glext.h	1957;"	d
GL_4PASS_1_SGIS	shared/GLee.h	3858;"	d
GL_4PASS_2_EXT	include/GL/glext.h	2876;"	d
GL_4PASS_2_EXT	shared/GLee.h	6120;"	d
GL_4PASS_2_SGIS	include/GL/glext.h	1958;"	d
GL_4PASS_2_SGIS	shared/GLee.h	3859;"	d
GL_4PASS_3_EXT	include/GL/glext.h	2877;"	d
GL_4PASS_3_EXT	shared/GLee.h	6121;"	d
GL_4PASS_3_SGIS	include/GL/glext.h	1959;"	d
GL_4PASS_3_SGIS	shared/GLee.h	3860;"	d
GL_4X_BIT_ATI	include/GL/glext.h	3295;"	d
GL_4X_BIT_ATI	shared/GLee.h	6936;"	d
GL_4_BYTES	include/GL/gl.h	189;"	d
GL_8X_BIT_ATI	include/GL/glext.h	3296;"	d
GL_8X_BIT_ATI	shared/GLee.h	6937;"	d
GL_ABGR_EXT	include/GL/glext.h	1711;"	d
GL_ABGR_EXT	shared/GLee.h	3316;"	d
GL_ACCUM	include/GL/gl.h	362;"	d
GL_ACCUM_ALPHA_BITS	include/GL/gl.h	360;"	d
GL_ACCUM_BLUE_BITS	include/GL/gl.h	359;"	d
GL_ACCUM_BUFFER_BIT	include/GL/gl.h	714;"	d
GL_ACCUM_CLEAR_VALUE	include/GL/gl.h	361;"	d
GL_ACCUM_GREEN_BITS	include/GL/gl.h	358;"	d
GL_ACCUM_RED_BITS	include/GL/gl.h	357;"	d
GL_ACTIVE_ATTRIBUTES	include/GL/glext.h	456;"	d
GL_ACTIVE_ATTRIBUTES	shared/GLee.h	1687;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	include/GL/glext.h	457;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	shared/GLee.h	1688;"	d
GL_ACTIVE_PROGRAM_EXT	include/GL/glext.h	4356;"	d
GL_ACTIVE_STENCIL_FACE_EXT	include/GL/glext.h	3519;"	d
GL_ACTIVE_STENCIL_FACE_EXT	shared/GLee.h	7619;"	d
GL_ACTIVE_TEXTURE	include/GL/gl.h	1785;"	d
GL_ACTIVE_TEXTURE	include/GL/glext.h	216;"	d
GL_ACTIVE_TEXTURE	shared/GLee.h	1107;"	d
GL_ACTIVE_TEXTURE_ARB	include/GL/gl.h	2001;"	d
GL_ACTIVE_TEXTURE_ARB	include/GL/glext.h	923;"	d
GL_ACTIVE_TEXTURE_ARB	shared/GLee.h	2066;"	d
GL_ACTIVE_UNIFORMS	include/GL/glext.h	453;"	d
GL_ACTIVE_UNIFORMS	shared/GLee.h	1684;"	d
GL_ACTIVE_UNIFORM_BLOCKS	include/GL/glext.h	1584;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	include/GL/glext.h	1583;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	include/GL/glext.h	454;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	shared/GLee.h	1685;"	d
GL_ACTIVE_VARYINGS_NV	include/GL/glext.h	4039;"	d
GL_ACTIVE_VARYINGS_NV	shared/GLee.h	8792;"	d
GL_ACTIVE_VARYING_MAX_LENGTH_NV	include/GL/glext.h	4040;"	d
GL_ACTIVE_VARYING_MAX_LENGTH_NV	shared/GLee.h	8793;"	d
GL_ACTIVE_VERTEX_UNITS_ARB	include/GL/glext.h	992;"	d
GL_ACTIVE_VERTEX_UNITS_ARB	shared/GLee.h	2319;"	d
GL_ADD	include/GL/gl.h	363;"	d
GL_ADD_ATI	include/GL/glext.h	3266;"	d
GL_ADD_ATI	shared/GLee.h	6907;"	d
GL_ADD_SIGNED	include/GL/gl.h	1845;"	d
GL_ADD_SIGNED	include/GL/glext.h	275;"	d
GL_ADD_SIGNED	shared/GLee.h	1163;"	d
GL_ADD_SIGNED_ARB	include/GL/glext.h	1065;"	d
GL_ADD_SIGNED_ARB	shared/GLee.h	2447;"	d
GL_ADD_SIGNED_EXT	include/GL/glext.h	2541;"	d
GL_ADD_SIGNED_EXT	shared/GLee.h	5258;"	d
GL_ALIASED_LINE_WIDTH_RANGE	include/GL/gl.h	1513;"	d
GL_ALIASED_LINE_WIDTH_RANGE	include/GL/glext.h	91;"	d
GL_ALIASED_LINE_WIDTH_RANGE	shared/GLee.h	869;"	d
GL_ALIASED_POINT_SIZE_RANGE	include/GL/gl.h	1512;"	d
GL_ALIASED_POINT_SIZE_RANGE	include/GL/glext.h	99;"	d
GL_ALIASED_POINT_SIZE_RANGE	shared/GLee.h	868;"	d
GL_ALLOW_DRAW_FRG_HINT_PGI	include/GL/glext.h	2256;"	d
GL_ALLOW_DRAW_FRG_HINT_PGI	shared/GLee.h	4469;"	d
GL_ALLOW_DRAW_MEM_HINT_PGI	include/GL/glext.h	2257;"	d
GL_ALLOW_DRAW_MEM_HINT_PGI	shared/GLee.h	4470;"	d
GL_ALLOW_DRAW_OBJ_HINT_PGI	include/GL/glext.h	2254;"	d
GL_ALLOW_DRAW_OBJ_HINT_PGI	shared/GLee.h	4467;"	d
GL_ALLOW_DRAW_WIN_HINT_PGI	include/GL/glext.h	2255;"	d
GL_ALLOW_DRAW_WIN_HINT_PGI	shared/GLee.h	4468;"	d
GL_ALL_ATTRIB_BITS	include/GL/gl.h	725;"	d
GL_ALL_CLIENT_ATTRIB_BITS	include/GL/gl.h	771;"	d
GL_ALL_COMPLETED_NV	include/GL/glext.h	2929;"	d
GL_ALL_COMPLETED_NV	shared/GLee.h	6222;"	d
GL_ALL_STATIC_DATA_IBM	shared/GLee.h	9252;"	d
GL_ALPHA	include/GL/gl.h	486;"	d
GL_ALPHA12	include/GL/gl.h	738;"	d
GL_ALPHA12_EXT	include/GL/glext.h	1731;"	d
GL_ALPHA12_EXT	shared/GLee.h	3357;"	d
GL_ALPHA16	include/GL/gl.h	739;"	d
GL_ALPHA16F_ARB	include/GL/glext.h	1372;"	d
GL_ALPHA16F_ARB	shared/GLee.h	3292;"	d
GL_ALPHA16I_EXT	include/GL/glext.h	4092;"	d
GL_ALPHA16I_EXT	shared/GLee.h	8702;"	d
GL_ALPHA16UI_EXT	include/GL/glext.h	4074;"	d
GL_ALPHA16UI_EXT	shared/GLee.h	8684;"	d
GL_ALPHA16_EXT	include/GL/glext.h	1732;"	d
GL_ALPHA16_EXT	shared/GLee.h	3358;"	d
GL_ALPHA16_EXTENDED_RANGE_SGIX	shared/GLee.h	9357;"	d
GL_ALPHA16_SIGNED_SGIX	shared/GLee.h	9345;"	d
GL_ALPHA16_SNORM	include/GL/glext.h	4235;"	d
GL_ALPHA32F_ARB	include/GL/glext.h	1366;"	d
GL_ALPHA32F_ARB	shared/GLee.h	3286;"	d
GL_ALPHA32I_EXT	include/GL/glext.h	4086;"	d
GL_ALPHA32I_EXT	shared/GLee.h	8696;"	d
GL_ALPHA32UI_EXT	include/GL/glext.h	4068;"	d
GL_ALPHA32UI_EXT	shared/GLee.h	8678;"	d
GL_ALPHA4	include/GL/gl.h	736;"	d
GL_ALPHA4_EXT	include/GL/glext.h	1729;"	d
GL_ALPHA4_EXT	shared/GLee.h	3355;"	d
GL_ALPHA8	include/GL/gl.h	737;"	d
GL_ALPHA8I_EXT	include/GL/glext.h	4098;"	d
GL_ALPHA8I_EXT	shared/GLee.h	8708;"	d
GL_ALPHA8UI_EXT	include/GL/glext.h	4080;"	d
GL_ALPHA8UI_EXT	shared/GLee.h	8690;"	d
GL_ALPHA8_EXT	include/GL/glext.h	1730;"	d
GL_ALPHA8_EXT	shared/GLee.h	3356;"	d
GL_ALPHA8_SNORM	include/GL/glext.h	4231;"	d
GL_ALPHA_BIAS	include/GL/gl.h	606;"	d
GL_ALPHA_BITS	include/GL/gl.h	489;"	d
GL_ALPHA_BLEND_EQUATION_ATI	include/GL/gl.h	2188;"	d
GL_ALPHA_EXTENDED_RANGE_SGIX	shared/GLee.h	9351;"	d
GL_ALPHA_FLOAT16_APPLE	include/GL/glext.h	4276;"	d
GL_ALPHA_FLOAT16_ATI	include/GL/glext.h	3607;"	d
GL_ALPHA_FLOAT16_ATI	shared/GLee.h	7833;"	d
GL_ALPHA_FLOAT32_APPLE	include/GL/glext.h	4270;"	d
GL_ALPHA_FLOAT32_ATI	include/GL/glext.h	3601;"	d
GL_ALPHA_FLOAT32_ATI	shared/GLee.h	7827;"	d
GL_ALPHA_INTEGER	include/GL/glext.h	737;"	d
GL_ALPHA_INTEGER_EXT	include/GL/glext.h	4105;"	d
GL_ALPHA_INTEGER_EXT	shared/GLee.h	8715;"	d
GL_ALPHA_MAX_CLAMP_INGR	include/GL/glext.h	2621;"	d
GL_ALPHA_MAX_CLAMP_INGR	shared/GLee.h	5554;"	d
GL_ALPHA_MAX_SGIX	include/GL/glext.h	2408;"	d
GL_ALPHA_MAX_SGIX	shared/GLee.h	4847;"	d
GL_ALPHA_MIN_CLAMP_INGR	include/GL/glext.h	2617;"	d
GL_ALPHA_MIN_CLAMP_INGR	shared/GLee.h	5550;"	d
GL_ALPHA_MIN_SGIX	include/GL/glext.h	2407;"	d
GL_ALPHA_MIN_SGIX	shared/GLee.h	4846;"	d
GL_ALPHA_SCALE	include/GL/gl.h	605;"	d
GL_ALPHA_SIGNED_SGIX	shared/GLee.h	9339;"	d
GL_ALPHA_SNORM	include/GL/glext.h	4227;"	d
GL_ALPHA_TEST	include/GL/gl.h	369;"	d
GL_ALPHA_TEST_FUNC	include/GL/gl.h	371;"	d
GL_ALPHA_TEST_REF	include/GL/gl.h	370;"	d
GL_ALREADY_SIGNALED	include/GL/glext.h	1647;"	d
GL_ALWAYS	include/GL/gl.h	303;"	d
GL_ALWAYS_FAST_HINT_PGI	include/GL/glext.h	2252;"	d
GL_ALWAYS_FAST_HINT_PGI	shared/GLee.h	4465;"	d
GL_ALWAYS_SOFT_HINT_PGI	include/GL/glext.h	2253;"	d
GL_ALWAYS_SOFT_HINT_PGI	shared/GLee.h	4466;"	d
GL_AMBIENT	include/GL/gl.h	327;"	d
GL_AMBIENT_AND_DIFFUSE	include/GL/gl.h	334;"	d
GL_AMD_draw_buffers_blend	include/GL/glext.h	9263;"	d
GL_AMD_performance_monitor	include/GL/glext.h	9209;"	d
GL_AMD_texture_texture4	include/GL/glext.h	9237;"	d
GL_AMD_vertex_shader_tesselator	include/GL/glext.h	9241;"	d
GL_AND	include/GL/gl.h	439;"	d
GL_AND_INVERTED	include/GL/gl.h	446;"	d
GL_AND_REVERSE	include/GL/gl.h	445;"	d
GL_APPLE_aux_depth_stencil	include/GL/glext.h	9311;"	d
GL_APPLE_client_storage	include/GL/glext.h	7987;"	d
GL_APPLE_client_storage	shared/GLee.h	7637;"	d
GL_APPLE_element_array	include/GL/glext.h	7991;"	d
GL_APPLE_element_array	shared/GLee.h	7646;"	d
GL_APPLE_fence	include/GL/glext.h	8007;"	d
GL_APPLE_fence	shared/GLee.h	7672;"	d
GL_APPLE_float_pixels	include/GL/glext.h	9287;"	d
GL_APPLE_flush_buffer_range	include/GL/glext.h	8423;"	d
GL_APPLE_object_purgeable	include/GL/glext.h	9315;"	d
GL_APPLE_rgb_422	include/GL/glext.h	9331;"	d
GL_APPLE_row_bytes	include/GL/glext.h	9327;"	d
GL_APPLE_specular_vector	include/GL/glext.h	6937;"	d
GL_APPLE_specular_vector	shared/GLee.h	5280;"	d
GL_APPLE_texture_range	include/GL/glext.h	9277;"	d
GL_APPLE_transform_hint	include/GL/glext.h	6941;"	d
GL_APPLE_transform_hint	shared/GLee.h	5289;"	d
GL_APPLE_vertex_array_object	include/GL/glext.h	8029;"	d
GL_APPLE_vertex_array_object	shared/GLee.h	7706;"	d
GL_APPLE_vertex_array_range	include/GL/glext.h	8043;"	d
GL_APPLE_vertex_array_range	shared/GLee.h	7727;"	d
GL_APPLE_vertex_program_evaluators	include/GL/glext.h	9291;"	d
GL_APPLE_ycbcr_422	include/GL/glext.h	8055;"	d
GL_APPLE_ycbcr_422	shared/GLee.h	7750;"	d
GL_ARB_color_buffer_float	include/GL/glext.h	5753;"	d
GL_ARB_color_buffer_float	shared/GLee.h	3248;"	d
GL_ARB_compatibility	include/GL/glext.h	5923;"	d
GL_ARB_copy_buffer	include/GL/glext.h	5927;"	d
GL_ARB_depth_buffer_float	include/GL/glext.h	5773;"	d
GL_ARB_depth_clamp	include/GL/glext.h	5939;"	d
GL_ARB_depth_texture	include/GL/glext.h	5390;"	d
GL_ARB_depth_texture	shared/GLee.h	2485;"	d
GL_ARB_draw_buffers	include/GL/glext.h	5741;"	d
GL_ARB_draw_buffers	shared/GLee.h	3208;"	d
GL_ARB_draw_buffers_blend	include/GL/glext.h	6011;"	d
GL_ARB_draw_elements_base_vertex	include/GL/glext.h	5943;"	d
GL_ARB_draw_instanced	include/GL/glext.h	5777;"	d
GL_ARB_fragment_coord_conventions	include/GL/glext.h	5957;"	d
GL_ARB_fragment_program	include/GL/glext.h	5570;"	d
GL_ARB_fragment_program	shared/GLee.h	2847;"	d
GL_ARB_fragment_program_shadow	include/GL/glext.h	5737;"	d
GL_ARB_fragment_program_shadow	shared/GLee.h	3200;"	d
GL_ARB_fragment_shader	include/GL/glext.h	5721;"	d
GL_ARB_fragment_shader	shared/GLee.h	3162;"	d
GL_ARB_framebuffer_object	include/GL/glext.h	5787;"	d
GL_ARB_framebuffer_sRGB	include/GL/glext.h	5833;"	d
GL_ARB_geometry_shader4	include/GL/glext.h	5837;"	d
GL_ARB_half_float_pixel	include/GL/glext.h	5761;"	d
GL_ARB_half_float_pixel	shared/GLee.h	3264;"	d
GL_ARB_half_float_vertex	include/GL/glext.h	5851;"	d
GL_ARB_imaging	include/GL/gl.h	147;"	d
GL_ARB_imaging	shared/GLee.h	989;"	d
GL_ARB_instanced_arrays	include/GL/glext.h	5855;"	d
GL_ARB_map_buffer_range	include/GL/glext.h	5863;"	d
GL_ARB_matrix_palette	include/GL/glext.h	5358;"	d
GL_ARB_matrix_palette	shared/GLee.h	2395;"	d
GL_ARB_multisample	include/GL/glext.h	5282;"	d
GL_ARB_multisample	shared/GLee.h	2200;"	d
GL_ARB_multitexture	include/GL/gl.h	1967;"	d
GL_ARB_multitexture	include/GL/glext.h	5194;"	d
GL_ARB_multitexture	shared/GLee.h	2031;"	d
GL_ARB_occlusion_query	include/GL/glext.h	5603;"	d
GL_ARB_occlusion_query	shared/GLee.h	2942;"	d
GL_ARB_pixel_buffer_object	include/GL/glext.h	5769;"	d
GL_ARB_pixel_buffer_object	shared/GLee.h	3301;"	d
GL_ARB_point_parameters	include/GL/glext.h	5322;"	d
GL_ARB_point_parameters	shared/GLee.h	2297;"	d
GL_ARB_point_sprite	include/GL/glext.h	5733;"	d
GL_ARB_point_sprite	shared/GLee.h	3190;"	d
GL_ARB_provoking_vertex	include/GL/glext.h	5961;"	d
GL_ARB_sample_shading	include/GL/glext.h	6025;"	d
GL_ARB_seamless_cube_map	include/GL/glext.h	5969;"	d
GL_ARB_shader_objects	include/GL/glext.h	5625;"	d
GL_ARB_shader_objects	shared/GLee.h	2979;"	d
GL_ARB_shader_texture_lod	include/GL/glext.h	5935;"	d
GL_ARB_shading_language_100	include/GL/glext.h	5725;"	d
GL_ARB_shading_language_100	shared/GLee.h	3173;"	d
GL_ARB_shadow	include/GL/glext.h	5394;"	d
GL_ARB_shadow	shared/GLee.h	2498;"	d
GL_ARB_shadow_ambient	include/GL/glext.h	5398;"	d
GL_ARB_shadow_ambient	shared/GLee.h	2509;"	d
GL_ARB_sync	include/GL/glext.h	5973;"	d
GL_ARB_texture_border_clamp	include/GL/glext.h	5318;"	d
GL_ARB_texture_border_clamp	shared/GLee.h	2288;"	d
GL_ARB_texture_buffer_object	include/GL/glext.h	5873;"	d
GL_ARB_texture_compression	include/GL/glext.h	5298;"	d
GL_ARB_texture_compression	shared/GLee.h	2248;"	d
GL_ARB_texture_compression_rgtc	include/GL/glext.h	5881;"	d
GL_ARB_texture_cube_map	include/GL/glext.h	5294;"	d
GL_ARB_texture_cube_map	shared/GLee.h	2228;"	d
GL_ARB_texture_cube_map_array	include/GL/glext.h	6033;"	d
GL_ARB_texture_env_add	include/GL/glext.h	5290;"	d
GL_ARB_texture_env_add	shared/GLee.h	2220;"	d
GL_ARB_texture_env_combine	include/GL/glext.h	5374;"	d
GL_ARB_texture_env_combine	shared/GLee.h	2428;"	d
GL_ARB_texture_env_crossbar	include/GL/glext.h	5378;"	d
GL_ARB_texture_env_crossbar	shared/GLee.h	2458;"	d
GL_ARB_texture_env_dot3	include/GL/glext.h	5382;"	d
GL_ARB_texture_env_dot3	shared/GLee.h	2466;"	d
GL_ARB_texture_float	include/GL/glext.h	5765;"	d
GL_ARB_texture_float	shared/GLee.h	3273;"	d
GL_ARB_texture_gather	include/GL/glext.h	6037;"	d
GL_ARB_texture_mirrored_repeat	include/GL/glext.h	5386;"	d
GL_ARB_texture_mirrored_repeat	shared/GLee.h	2476;"	d
GL_ARB_texture_multisample	include/GL/glext.h	5993;"	d
GL_ARB_texture_non_power_of_two	include/GL/glext.h	5729;"	d
GL_ARB_texture_non_power_of_two	shared/GLee.h	3182;"	d
GL_ARB_texture_query_lod	include/GL/glext.h	6041;"	d
GL_ARB_texture_rectangle	include/GL/glext.h	5749;"	d
GL_ARB_texture_rectangle	shared/GLee.h	3236;"	d
GL_ARB_texture_rg	include/GL/glext.h	5885;"	d
GL_ARB_transpose_matrix	include/GL/glext.h	5268;"	d
GL_ARB_transpose_matrix	shared/GLee.h	2176;"	d
GL_ARB_uniform_buffer_object	include/GL/glext.h	5903;"	d
GL_ARB_vertex_array_bgra	include/GL/glext.h	6007;"	d
GL_ARB_vertex_array_object	include/GL/glext.h	5889;"	d
GL_ARB_vertex_blend	include/GL/glext.h	5332;"	d
GL_ARB_vertex_blend	shared/GLee.h	2315;"	d
GL_ARB_vertex_buffer_object	include/GL/glext.h	5575;"	d
GL_ARB_vertex_buffer_object	shared/GLee.h	2870;"	d
GL_ARB_vertex_program	include/GL/glext.h	5440;"	d
GL_ARB_vertex_program	shared/GLee.h	2574;"	d
GL_ARB_vertex_shader	include/GL/glext.h	5709;"	d
GL_ARB_vertex_shader	shared/GLee.h	3138;"	d
GL_ARB_window_pos	include/GL/glext.h	5402;"	d
GL_ARB_window_pos	shared/GLee.h	2518;"	d
GL_ARRAY_BUFFER	include/GL/glext.h	337;"	d
GL_ARRAY_BUFFER	shared/GLee.h	1505;"	d
GL_ARRAY_BUFFER_ARB	include/GL/glext.h	1209;"	d
GL_ARRAY_BUFFER_ARB	shared/GLee.h	2875;"	d
GL_ARRAY_BUFFER_BINDING	include/GL/glext.h	339;"	d
GL_ARRAY_BUFFER_BINDING	shared/GLee.h	1507;"	d
GL_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	1211;"	d
GL_ARRAY_BUFFER_BINDING_ARB	shared/GLee.h	2877;"	d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	include/GL/glext.h	2332;"	d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	shared/GLee.h	4644;"	d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	include/GL/glext.h	2331;"	d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	shared/GLee.h	4643;"	d
GL_ARRAY_OBJECT_BUFFER_ATI	include/GL/glext.h	3325;"	d
GL_ARRAY_OBJECT_BUFFER_ATI	shared/GLee.h	7024;"	d
GL_ARRAY_OBJECT_OFFSET_ATI	include/GL/glext.h	3326;"	d
GL_ARRAY_OBJECT_OFFSET_ATI	shared/GLee.h	7025;"	d
GL_ASYNC_DRAW_PIXELS_SGIX	include/GL/glext.h	2432;"	d
GL_ASYNC_DRAW_PIXELS_SGIX	shared/GLee.h	4909;"	d
GL_ASYNC_HISTOGRAM_SGIX	include/GL/glext.h	2440;"	d
GL_ASYNC_HISTOGRAM_SGIX	shared/GLee.h	4922;"	d
GL_ASYNC_MARKER_SGIX	include/GL/glext.h	2427;"	d
GL_ASYNC_MARKER_SGIX	shared/GLee.h	4881;"	d
GL_ASYNC_READ_PIXELS_SGIX	include/GL/glext.h	2433;"	d
GL_ASYNC_READ_PIXELS_SGIX	shared/GLee.h	4910;"	d
GL_ASYNC_TEX_IMAGE_SGIX	include/GL/glext.h	2431;"	d
GL_ASYNC_TEX_IMAGE_SGIX	shared/GLee.h	4908;"	d
GL_ATI_blend_equation_separate	include/GL/gl.h	2186;"	d
GL_ATI_draw_buffers	include/GL/glext.h	8063;"	d
GL_ATI_draw_buffers	shared/GLee.h	7773;"	d
GL_ATI_element_array	include/GL/glext.h	7901;"	d
GL_ATI_element_array	shared/GLee.h	7464;"	d
GL_ATI_envmap_bumpmap	include/GL/glext.h	7627;"	d
GL_ATI_envmap_bumpmap	shared/GLee.h	6810;"	d
GL_ATI_fragment_shader	include/GL/glext.h	7641;"	d
GL_ATI_fragment_shader	shared/GLee.h	6838;"	d
GL_ATI_map_object_buffer	include/GL/glext.h	8235;"	d
GL_ATI_map_object_buffer	shared/GLee.h	8097;"	d
GL_ATI_meminfo	include/GL/glext.h	9205;"	d
GL_ATI_pixel_format_float	include/GL/glext.h	8071;"	d
GL_ATI_pixel_format_float	shared/GLee.h	7801;"	d
GL_ATI_pn_triangles	include/GL/glext.h	7675;"	d
GL_ATI_pn_triangles	shared/GLee.h	6992;"	d
GL_ATI_separate_stencil	include/GL/glext.h	8245;"	d
GL_ATI_separate_stencil	shared/GLee.h	8111;"	d
GL_ATI_text_fragment_shader	include/GL/glext.h	7983;"	d
GL_ATI_text_fragment_shader	shared/GLee.h	7628;"	d
GL_ATI_texture_env_combine3	include/GL/glext.h	8078;"	d
GL_ATI_texture_env_combine3	shared/GLee.h	7811;"	d
GL_ATI_texture_float	include/GL/glext.h	8082;"	d
GL_ATI_texture_float	shared/GLee.h	7822;"	d
GL_ATI_texture_mirror_once	include/GL/glext.h	7387;"	d
GL_ATI_texture_mirror_once	shared/GLee.h	6209;"	d
GL_ATI_vertex_array_object	include/GL/glext.h	7685;"	d
GL_ATI_vertex_array_object	shared/GLee.h	7015;"	d
GL_ATI_vertex_attrib_array_object	include/GL/glext.h	8255;"	d
GL_ATI_vertex_attrib_array_object	shared/GLee.h	8129;"	d
GL_ATI_vertex_streams	include/GL/glext.h	7805;"	d
GL_ATI_vertex_streams	shared/GLee.h	7311;"	d
GL_ATTACHED_SHADERS	include/GL/glext.h	452;"	d
GL_ATTACHED_SHADERS	shared/GLee.h	1683;"	d
GL_ATTENUATION_EXT	include/GL/glext.h	2397;"	d
GL_ATTENUATION_EXT	shared/GLee.h	4823;"	d
GL_ATTRIB_ARRAY_POINTER_NV	include/GL/glext.h	3097;"	d
GL_ATTRIB_ARRAY_POINTER_NV	shared/GLee.h	6494;"	d
GL_ATTRIB_ARRAY_SIZE_NV	include/GL/glext.h	3071;"	d
GL_ATTRIB_ARRAY_SIZE_NV	shared/GLee.h	6468;"	d
GL_ATTRIB_ARRAY_STRIDE_NV	include/GL/glext.h	3072;"	d
GL_ATTRIB_ARRAY_STRIDE_NV	shared/GLee.h	6469;"	d
GL_ATTRIB_ARRAY_TYPE_NV	include/GL/glext.h	3073;"	d
GL_ATTRIB_ARRAY_TYPE_NV	shared/GLee.h	6470;"	d
GL_ATTRIB_STACK_DEPTH	include/GL/gl.h	524;"	d
GL_AUTO_NORMAL	include/GL/gl.h	553;"	d
GL_AUX0	include/GL/gl.h	478;"	d
GL_AUX1	include/GL/gl.h	479;"	d
GL_AUX2	include/GL/gl.h	480;"	d
GL_AUX3	include/GL/gl.h	481;"	d
GL_AUX_BUFFERS	include/GL/gl.h	495;"	d
GL_AUX_DEPTH_STENCIL_APPLE	include/GL/glext.h	4297;"	d
GL_AVERAGE_EXT	include/GL/glext.h	2466;"	d
GL_AVERAGE_EXT	shared/GLee.h	4980;"	d
GL_AVERAGE_HP	include/GL/glext.h	2197;"	d
GL_AVERAGE_HP	shared/GLee.h	4356;"	d
GL_BACK	include/GL/gl.h	274;"	d
GL_BACK_LEFT	include/GL/gl.h	476;"	d
GL_BACK_NORMALS_HINT_PGI	include/GL/glext.h	2265;"	d
GL_BACK_NORMALS_HINT_PGI	shared/GLee.h	4478;"	d
GL_BACK_PRIMARY_COLOR_NV	include/GL/glext.h	4029;"	d
GL_BACK_PRIMARY_COLOR_NV	shared/GLee.h	8782;"	d
GL_BACK_RIGHT	include/GL/gl.h	477;"	d
GL_BACK_SECONDARY_COLOR_NV	include/GL/glext.h	4030;"	d
GL_BACK_SECONDARY_COLOR_NV	shared/GLee.h	8783;"	d
GL_BGR	include/GL/gl.h	1487;"	d
GL_BGR	include/GL/glext.h	78;"	d
GL_BGR	shared/GLee.h	852;"	d
GL_BGRA	include/GL/gl.h	1488;"	d
GL_BGRA	include/GL/glext.h	79;"	d
GL_BGRA	shared/GLee.h	853;"	d
GL_BGRA_EXT	include/GL/glext.h	2423;"	d
GL_BGRA_EXT	shared/GLee.h	4872;"	d
GL_BGRA_INTEGER	include/GL/glext.h	580;"	d
GL_BGRA_INTEGER_EXT	include/GL/glext.h	4109;"	d
GL_BGRA_INTEGER_EXT	shared/GLee.h	8719;"	d
GL_BGR_EXT	include/GL/glext.h	2422;"	d
GL_BGR_EXT	shared/GLee.h	4871;"	d
GL_BGR_INTEGER	include/GL/glext.h	579;"	d
GL_BGR_INTEGER_EXT	include/GL/glext.h	4108;"	d
GL_BGR_INTEGER_EXT	shared/GLee.h	8718;"	d
GL_BIAS_BIT_ATI	include/GL/glext.h	3303;"	d
GL_BIAS_BIT_ATI	shared/GLee.h	6944;"	d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	include/GL/glext.h	2736;"	d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	shared/GLee.h	5749;"	d
GL_BINORMAL_ARRAY_EXT	include/GL/glext.h	2521;"	d
GL_BINORMAL_ARRAY_EXT	shared/GLee.h	5167;"	d
GL_BINORMAL_ARRAY_POINTER_EXT	include/GL/glext.h	2529;"	d
GL_BINORMAL_ARRAY_POINTER_EXT	shared/GLee.h	5175;"	d
GL_BINORMAL_ARRAY_STRIDE_EXT	include/GL/glext.h	2527;"	d
GL_BINORMAL_ARRAY_STRIDE_EXT	shared/GLee.h	5173;"	d
GL_BINORMAL_ARRAY_TYPE_EXT	include/GL/glext.h	2526;"	d
GL_BINORMAL_ARRAY_TYPE_EXT	shared/GLee.h	5172;"	d
GL_BITMAP	include/GL/gl.h	500;"	d
GL_BITMAP_TOKEN	include/GL/gl.h	404;"	d
GL_BLEND	include/GL/gl.h	374;"	d
GL_BLEND_COLOR	include/GL/gl.h	1632;"	d
GL_BLEND_COLOR	include/GL/glext.h	107;"	d
GL_BLEND_COLOR	shared/GLee.h	996;"	d
GL_BLEND_COLOR_EXT	include/GL/glext.h	1719;"	d
GL_BLEND_COLOR_EXT	shared/GLee.h	3329;"	d
GL_BLEND_DST	include/GL/gl.h	376;"	d
GL_BLEND_DST_ALPHA	include/GL/glext.h	288;"	d
GL_BLEND_DST_ALPHA	shared/GLee.h	1319;"	d
GL_BLEND_DST_ALPHA_EXT	include/GL/glext.h	2609;"	d
GL_BLEND_DST_ALPHA_EXT	shared/GLee.h	5534;"	d
GL_BLEND_DST_RGB	include/GL/glext.h	286;"	d
GL_BLEND_DST_RGB	shared/GLee.h	1317;"	d
GL_BLEND_DST_RGB_EXT	include/GL/glext.h	2607;"	d
GL_BLEND_DST_RGB_EXT	shared/GLee.h	5532;"	d
GL_BLEND_EQUATION	include/GL/gl.h	1626;"	d
GL_BLEND_EQUATION	include/GL/glext.h	111;"	d
GL_BLEND_EQUATION	shared/GLee.h	1000;"	d
GL_BLEND_EQUATION_ALPHA	include/GL/glext.h	416;"	d
GL_BLEND_EQUATION_ALPHA	shared/GLee.h	1644;"	d
GL_BLEND_EQUATION_ALPHA_EXT	include/GL/glext.h	3696;"	d
GL_BLEND_EQUATION_ALPHA_EXT	shared/GLee.h	8184;"	d
GL_BLEND_EQUATION_EXT	include/GL/glext.h	2048;"	d
GL_BLEND_EQUATION_EXT	shared/GLee.h	4027;"	d
GL_BLEND_EQUATION_RGB	include/GL/glext.h	387;"	d
GL_BLEND_EQUATION_RGB	shared/GLee.h	1614;"	d
GL_BLEND_EQUATION_RGB_EXT	include/GL/glext.h	3695;"	d
GL_BLEND_EQUATION_RGB_EXT	shared/GLee.h	8183;"	d
GL_BLEND_SRC	include/GL/gl.h	375;"	d
GL_BLEND_SRC_ALPHA	include/GL/glext.h	289;"	d
GL_BLEND_SRC_ALPHA	shared/GLee.h	1320;"	d
GL_BLEND_SRC_ALPHA_EXT	include/GL/glext.h	2610;"	d
GL_BLEND_SRC_ALPHA_EXT	shared/GLee.h	5535;"	d
GL_BLEND_SRC_RGB	include/GL/glext.h	287;"	d
GL_BLEND_SRC_RGB	shared/GLee.h	1318;"	d
GL_BLEND_SRC_RGB_EXT	include/GL/glext.h	2608;"	d
GL_BLEND_SRC_RGB_EXT	shared/GLee.h	5533;"	d
GL_BLUE	include/GL/gl.h	485;"	d
GL_BLUE_BIAS	include/GL/gl.h	604;"	d
GL_BLUE_BITS	include/GL/gl.h	492;"	d
GL_BLUE_BIT_ATI	include/GL/glext.h	3293;"	d
GL_BLUE_BIT_ATI	shared/GLee.h	6934;"	d
GL_BLUE_INTEGER	include/GL/glext.h	576;"	d
GL_BLUE_INTEGER_EXT	include/GL/glext.h	4104;"	d
GL_BLUE_INTEGER_EXT	shared/GLee.h	8714;"	d
GL_BLUE_MAX_CLAMP_INGR	include/GL/glext.h	2620;"	d
GL_BLUE_MAX_CLAMP_INGR	shared/GLee.h	5553;"	d
GL_BLUE_MIN_CLAMP_INGR	include/GL/glext.h	2616;"	d
GL_BLUE_MIN_CLAMP_INGR	shared/GLee.h	5549;"	d
GL_BLUE_SCALE	include/GL/gl.h	603;"	d
GL_BOOL	include/GL/glext.h	434;"	d
GL_BOOL	shared/GLee.h	1665;"	d
GL_BOOL_ARB	include/GL/glext.h	1259;"	d
GL_BOOL_ARB	shared/GLee.h	2992;"	d
GL_BOOL_VEC2	include/GL/glext.h	435;"	d
GL_BOOL_VEC2	shared/GLee.h	1666;"	d
GL_BOOL_VEC2_ARB	include/GL/glext.h	1260;"	d
GL_BOOL_VEC2_ARB	shared/GLee.h	2993;"	d
GL_BOOL_VEC3	include/GL/glext.h	436;"	d
GL_BOOL_VEC3	shared/GLee.h	1667;"	d
GL_BOOL_VEC3_ARB	include/GL/glext.h	1261;"	d
GL_BOOL_VEC3_ARB	shared/GLee.h	2994;"	d
GL_BOOL_VEC4	include/GL/glext.h	437;"	d
GL_BOOL_VEC4	shared/GLee.h	1668;"	d
GL_BOOL_VEC4_ARB	include/GL/glext.h	1262;"	d
GL_BOOL_VEC4_ARB	shared/GLee.h	2995;"	d
GL_BUFFER_ACCESS	include/GL/glext.h	345;"	d
GL_BUFFER_ACCESS	shared/GLee.h	1522;"	d
GL_BUFFER_ACCESS_ARB	include/GL/glext.h	1226;"	d
GL_BUFFER_ACCESS_ARB	shared/GLee.h	2892;"	d
GL_BUFFER_ACCESS_FLAGS	include/GL/glext.h	605;"	d
GL_BUFFER_FLUSHING_UNMAP_APPLE	include/GL/glext.h	3855;"	d
GL_BUFFER_GPU_ADDRESS_NV	include/GL/glext.h	4363;"	d
GL_BUFFER_MAPPED	include/GL/glext.h	346;"	d
GL_BUFFER_MAPPED	shared/GLee.h	1523;"	d
GL_BUFFER_MAPPED_ARB	include/GL/glext.h	1227;"	d
GL_BUFFER_MAPPED_ARB	shared/GLee.h	2893;"	d
GL_BUFFER_MAP_LENGTH	include/GL/glext.h	606;"	d
GL_BUFFER_MAP_OFFSET	include/GL/glext.h	607;"	d
GL_BUFFER_MAP_POINTER	include/GL/glext.h	347;"	d
GL_BUFFER_MAP_POINTER	shared/GLee.h	1524;"	d
GL_BUFFER_MAP_POINTER_ARB	include/GL/glext.h	1228;"	d
GL_BUFFER_MAP_POINTER_ARB	shared/GLee.h	2894;"	d
GL_BUFFER_OBJECT_APPLE	include/GL/glext.h	4301;"	d
GL_BUFFER_SERIALIZED_MODIFY_APPLE	include/GL/glext.h	3854;"	d
GL_BUFFER_SIZE	include/GL/glext.h	331;"	d
GL_BUFFER_SIZE	shared/GLee.h	1499;"	d
GL_BUFFER_SIZE_ARB	include/GL/glext.h	1207;"	d
GL_BUFFER_SIZE_ARB	shared/GLee.h	2873;"	d
GL_BUFFER_USAGE	include/GL/glext.h	332;"	d
GL_BUFFER_USAGE	shared/GLee.h	1500;"	d
GL_BUFFER_USAGE_ARB	include/GL/glext.h	1208;"	d
GL_BUFFER_USAGE_ARB	shared/GLee.h	2874;"	d
GL_BUMP_ENVMAP_ATI	include/GL/glext.h	3195;"	d
GL_BUMP_ENVMAP_ATI	shared/GLee.h	6819;"	d
GL_BUMP_NUM_TEX_UNITS_ATI	include/GL/glext.h	3191;"	d
GL_BUMP_NUM_TEX_UNITS_ATI	shared/GLee.h	6815;"	d
GL_BUMP_ROT_MATRIX_ATI	include/GL/glext.h	3189;"	d
GL_BUMP_ROT_MATRIX_ATI	shared/GLee.h	6813;"	d
GL_BUMP_ROT_MATRIX_SIZE_ATI	include/GL/glext.h	3190;"	d
GL_BUMP_ROT_MATRIX_SIZE_ATI	shared/GLee.h	6814;"	d
GL_BUMP_TARGET_ATI	include/GL/glext.h	3196;"	d
GL_BUMP_TARGET_ATI	shared/GLee.h	6820;"	d
GL_BUMP_TEX_UNITS_ATI	include/GL/glext.h	3192;"	d
GL_BUMP_TEX_UNITS_ATI	shared/GLee.h	6816;"	d
GL_BYTE	include/GL/gl.h	180;"	d
GL_BYTE	shared/GLee.h	9276;"	d
GL_C3F_V3F	include/GL/gl.h	235;"	d
GL_C4F_N3F_V3F	include/GL/gl.h	237;"	d
GL_C4UB_V2F	include/GL/gl.h	233;"	d
GL_C4UB_V3F	include/GL/gl.h	234;"	d
GL_CALLIGRAPHIC_FRAGMENT_SGIX	include/GL/glext.h	2291;"	d
GL_CALLIGRAPHIC_FRAGMENT_SGIX	shared/GLee.h	4562;"	d
GL_CCW	include/GL/gl.h	272;"	d
GL_CG_FRAGMENT_SHADER_EXT	shared/GLee.h	8389;"	d
GL_CG_VERTEX_SHADER_EXT	shared/GLee.h	8388;"	d
GL_CLAMP	include/GL/gl.h	681;"	d
GL_CLAMP_FRAGMENT_COLOR	include/GL/glext.h	736;"	d
GL_CLAMP_FRAGMENT_COLOR_ARB	include/GL/glext.h	1346;"	d
GL_CLAMP_FRAGMENT_COLOR_ARB	shared/GLee.h	3253;"	d
GL_CLAMP_READ_COLOR	include/GL/glext.h	533;"	d
GL_CLAMP_READ_COLOR_ARB	include/GL/glext.h	1347;"	d
GL_CLAMP_READ_COLOR_ARB	shared/GLee.h	3254;"	d
GL_CLAMP_TO_BORDER	include/GL/gl.h	1855;"	d
GL_CLAMP_TO_BORDER	include/GL/glext.h	242;"	d
GL_CLAMP_TO_BORDER	shared/GLee.h	1146;"	d
GL_CLAMP_TO_BORDER_ARB	include/GL/glext.h	980;"	d
GL_CLAMP_TO_BORDER_ARB	shared/GLee.h	2291;"	d
GL_CLAMP_TO_BORDER_SGIS	include/GL/glext.h	2041;"	d
GL_CLAMP_TO_BORDER_SGIS	shared/GLee.h	4015;"	d
GL_CLAMP_TO_EDGE	include/GL/gl.h	1484;"	d
GL_CLAMP_TO_EDGE	include/GL/glext.h	82;"	d
GL_CLAMP_TO_EDGE	shared/GLee.h	856;"	d
GL_CLAMP_TO_EDGE_SGIS	include/GL/glext.h	2037;"	d
GL_CLAMP_TO_EDGE_SGIS	shared/GLee.h	4006;"	d
GL_CLAMP_VERTEX_COLOR	include/GL/glext.h	735;"	d
GL_CLAMP_VERTEX_COLOR_ARB	include/GL/glext.h	1345;"	d
GL_CLAMP_VERTEX_COLOR_ARB	shared/GLee.h	3252;"	d
GL_CLEAR	include/GL/gl.h	433;"	d
GL_CLIENT_ACTIVE_TEXTURE	include/GL/gl.h	1786;"	d
GL_CLIENT_ACTIVE_TEXTURE	include/GL/glext.h	246;"	d
GL_CLIENT_ACTIVE_TEXTURE	shared/GLee.h	1108;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	include/GL/gl.h	2002;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	include/GL/glext.h	924;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	shared/GLee.h	2067;"	d
GL_CLIENT_ALL_ATTRIB_BITS	include/GL/gl.h	772;"	d
GL_CLIENT_ATTRIB_STACK_DEPTH	include/GL/gl.h	525;"	d
GL_CLIENT_PIXEL_STORE_BIT	include/GL/gl.h	769;"	d
GL_CLIENT_VERTEX_ARRAY_BIT	include/GL/gl.h	770;"	d
GL_CLIP_DISTANCE0	include/GL/glext.h	507;"	d
GL_CLIP_DISTANCE1	include/GL/glext.h	508;"	d
GL_CLIP_DISTANCE2	include/GL/glext.h	509;"	d
GL_CLIP_DISTANCE3	include/GL/glext.h	510;"	d
GL_CLIP_DISTANCE4	include/GL/glext.h	511;"	d
GL_CLIP_DISTANCE5	include/GL/glext.h	512;"	d
GL_CLIP_DISTANCE6	include/GL/glext.h	513;"	d
GL_CLIP_DISTANCE7	include/GL/glext.h	514;"	d
GL_CLIP_DISTANCE_NV	include/GL/glext.h	4032;"	d
GL_CLIP_DISTANCE_NV	shared/GLee.h	8785;"	d
GL_CLIP_FAR_HINT_PGI	include/GL/glext.h	2263;"	d
GL_CLIP_FAR_HINT_PGI	shared/GLee.h	4476;"	d
GL_CLIP_NEAR_HINT_PGI	include/GL/glext.h	2262;"	d
GL_CLIP_NEAR_HINT_PGI	shared/GLee.h	4475;"	d
GL_CLIP_PLANE0	include/GL/gl.h	349;"	d
GL_CLIP_PLANE1	include/GL/gl.h	350;"	d
GL_CLIP_PLANE2	include/GL/gl.h	351;"	d
GL_CLIP_PLANE3	include/GL/gl.h	352;"	d
GL_CLIP_PLANE4	include/GL/gl.h	353;"	d
GL_CLIP_PLANE5	include/GL/gl.h	354;"	d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	include/GL/glext.h	2279;"	d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	shared/GLee.h	4517;"	d
GL_CMYKA_EXT	include/GL/glext.h	1902;"	d
GL_CMYKA_EXT	shared/GLee.h	3743;"	d
GL_CMYK_EXT	include/GL/glext.h	1901;"	d
GL_CMYK_EXT	shared/GLee.h	3742;"	d
GL_CND0_ATI	include/GL/glext.h	3274;"	d
GL_CND0_ATI	shared/GLee.h	6915;"	d
GL_CND_ATI	include/GL/glext.h	3273;"	d
GL_CND_ATI	shared/GLee.h	6914;"	d
GL_COEFF	include/GL/gl.h	576;"	d
GL_COLOR	include/GL/gl.h	501;"	d
GL_COLOR3_BIT_PGI	include/GL/glext.h	2225;"	d
GL_COLOR3_BIT_PGI	shared/GLee.h	4433;"	d
GL_COLOR4_BIT_PGI	include/GL/glext.h	2226;"	d
GL_COLOR4_BIT_PGI	shared/GLee.h	4434;"	d
GL_COLOR_ALPHA_PAIRING_ATI	include/GL/glext.h	3284;"	d
GL_COLOR_ALPHA_PAIRING_ATI	shared/GLee.h	6925;"	d
GL_COLOR_ARRAY	include/GL/gl.h	207;"	d
GL_COLOR_ARRAY_ADDRESS_NV	include/GL/glext.h	4374;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	include/GL/glext.h	363;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	shared/GLee.h	1511;"	d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	1215;"	d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	shared/GLee.h	2881;"	d
GL_COLOR_ARRAY_COUNT_EXT	include/GL/glext.h	1988;"	d
GL_COLOR_ARRAY_COUNT_EXT	shared/GLee.h	3905;"	d
GL_COLOR_ARRAY_EXT	include/GL/glext.h	1974;"	d
GL_COLOR_ARRAY_EXT	shared/GLee.h	3891;"	d
GL_COLOR_ARRAY_LENGTH_NV	include/GL/glext.h	4384;"	d
GL_COLOR_ARRAY_LIST_IBM	include/GL/glext.h	2813;"	d
GL_COLOR_ARRAY_LIST_IBM	shared/GLee.h	5990;"	d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	include/GL/glext.h	2821;"	d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	shared/GLee.h	5998;"	d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	include/GL/glext.h	2451;"	d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	shared/GLee.h	4943;"	d
GL_COLOR_ARRAY_POINTER	include/GL/gl.h	227;"	d
GL_COLOR_ARRAY_POINTER_EXT	include/GL/glext.h	2000;"	d
GL_COLOR_ARRAY_POINTER_EXT	shared/GLee.h	3917;"	d
GL_COLOR_ARRAY_SIZE	include/GL/gl.h	216;"	d
GL_COLOR_ARRAY_SIZE_EXT	include/GL/glext.h	1985;"	d
GL_COLOR_ARRAY_SIZE_EXT	shared/GLee.h	3902;"	d
GL_COLOR_ARRAY_STRIDE	include/GL/gl.h	218;"	d
GL_COLOR_ARRAY_STRIDE_EXT	include/GL/glext.h	1987;"	d
GL_COLOR_ARRAY_STRIDE_EXT	shared/GLee.h	3904;"	d
GL_COLOR_ARRAY_TYPE	include/GL/gl.h	217;"	d
GL_COLOR_ARRAY_TYPE_EXT	include/GL/glext.h	1986;"	d
GL_COLOR_ARRAY_TYPE_EXT	shared/GLee.h	3903;"	d
GL_COLOR_ATTACHMENT0	include/GL/glext.h	1437;"	d
GL_COLOR_ATTACHMENT0_EXT	include/GL/glext.h	3755;"	d
GL_COLOR_ATTACHMENT0_EXT	shared/GLee.h	8284;"	d
GL_COLOR_ATTACHMENT1	include/GL/glext.h	1438;"	d
GL_COLOR_ATTACHMENT10	include/GL/glext.h	1447;"	d
GL_COLOR_ATTACHMENT10_EXT	include/GL/glext.h	3765;"	d
GL_COLOR_ATTACHMENT10_EXT	shared/GLee.h	8294;"	d
GL_COLOR_ATTACHMENT11	include/GL/glext.h	1448;"	d
GL_COLOR_ATTACHMENT11_EXT	include/GL/glext.h	3766;"	d
GL_COLOR_ATTACHMENT11_EXT	shared/GLee.h	8295;"	d
GL_COLOR_ATTACHMENT12	include/GL/glext.h	1449;"	d
GL_COLOR_ATTACHMENT12_EXT	include/GL/glext.h	3767;"	d
GL_COLOR_ATTACHMENT12_EXT	shared/GLee.h	8296;"	d
GL_COLOR_ATTACHMENT13	include/GL/glext.h	1450;"	d
GL_COLOR_ATTACHMENT13_EXT	include/GL/glext.h	3768;"	d
GL_COLOR_ATTACHMENT13_EXT	shared/GLee.h	8297;"	d
GL_COLOR_ATTACHMENT14	include/GL/glext.h	1451;"	d
GL_COLOR_ATTACHMENT14_EXT	include/GL/glext.h	3769;"	d
GL_COLOR_ATTACHMENT14_EXT	shared/GLee.h	8298;"	d
GL_COLOR_ATTACHMENT15	include/GL/glext.h	1452;"	d
GL_COLOR_ATTACHMENT15_EXT	include/GL/glext.h	3770;"	d
GL_COLOR_ATTACHMENT15_EXT	shared/GLee.h	8299;"	d
GL_COLOR_ATTACHMENT1_EXT	include/GL/glext.h	3756;"	d
GL_COLOR_ATTACHMENT1_EXT	shared/GLee.h	8285;"	d
GL_COLOR_ATTACHMENT2	include/GL/glext.h	1439;"	d
GL_COLOR_ATTACHMENT2_EXT	include/GL/glext.h	3757;"	d
GL_COLOR_ATTACHMENT2_EXT	shared/GLee.h	8286;"	d
GL_COLOR_ATTACHMENT3	include/GL/glext.h	1440;"	d
GL_COLOR_ATTACHMENT3_EXT	include/GL/glext.h	3758;"	d
GL_COLOR_ATTACHMENT3_EXT	shared/GLee.h	8287;"	d
GL_COLOR_ATTACHMENT4	include/GL/glext.h	1441;"	d
GL_COLOR_ATTACHMENT4_EXT	include/GL/glext.h	3759;"	d
GL_COLOR_ATTACHMENT4_EXT	shared/GLee.h	8288;"	d
GL_COLOR_ATTACHMENT5	include/GL/glext.h	1442;"	d
GL_COLOR_ATTACHMENT5_EXT	include/GL/glext.h	3760;"	d
GL_COLOR_ATTACHMENT5_EXT	shared/GLee.h	8289;"	d
GL_COLOR_ATTACHMENT6	include/GL/glext.h	1443;"	d
GL_COLOR_ATTACHMENT6_EXT	include/GL/glext.h	3761;"	d
GL_COLOR_ATTACHMENT6_EXT	shared/GLee.h	8290;"	d
GL_COLOR_ATTACHMENT7	include/GL/glext.h	1444;"	d
GL_COLOR_ATTACHMENT7_EXT	include/GL/glext.h	3762;"	d
GL_COLOR_ATTACHMENT7_EXT	shared/GLee.h	8291;"	d
GL_COLOR_ATTACHMENT8	include/GL/glext.h	1445;"	d
GL_COLOR_ATTACHMENT8_EXT	include/GL/glext.h	3763;"	d
GL_COLOR_ATTACHMENT8_EXT	shared/GLee.h	8292;"	d
GL_COLOR_ATTACHMENT9	include/GL/glext.h	1446;"	d
GL_COLOR_ATTACHMENT9_EXT	include/GL/glext.h	3764;"	d
GL_COLOR_ATTACHMENT9_EXT	shared/GLee.h	8293;"	d
GL_COLOR_BUFFER_BIT	include/GL/gl.h	719;"	d
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI	include/GL/glext.h	3589;"	d
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI	shared/GLee.h	7805;"	d
GL_COLOR_CLEAR_VALUE	include/GL/gl.h	526;"	d
GL_COLOR_FLOAT_APPLE	include/GL/glext.h	4280;"	d
GL_COLOR_INDEX	include/GL/gl.h	482;"	d
GL_COLOR_INDEX12_EXT	include/GL/glext.h	2273;"	d
GL_COLOR_INDEX12_EXT	shared/GLee.h	4494;"	d
GL_COLOR_INDEX16_EXT	include/GL/glext.h	2274;"	d
GL_COLOR_INDEX16_EXT	shared/GLee.h	4495;"	d
GL_COLOR_INDEX1_EXT	include/GL/glext.h	2269;"	d
GL_COLOR_INDEX1_EXT	shared/GLee.h	4490;"	d
GL_COLOR_INDEX2_EXT	include/GL/glext.h	2270;"	d
GL_COLOR_INDEX2_EXT	shared/GLee.h	4491;"	d
GL_COLOR_INDEX4_EXT	include/GL/glext.h	2271;"	d
GL_COLOR_INDEX4_EXT	shared/GLee.h	4492;"	d
GL_COLOR_INDEX8_EXT	include/GL/glext.h	2272;"	d
GL_COLOR_INDEX8_EXT	shared/GLee.h	4493;"	d
GL_COLOR_INDEXES	include/GL/gl.h	335;"	d
GL_COLOR_LOGIC_OP	include/GL/gl.h	431;"	d
GL_COLOR_MATERIAL	include/GL/gl.h	343;"	d
GL_COLOR_MATERIAL_FACE	include/GL/gl.h	344;"	d
GL_COLOR_MATERIAL_PARAMETER	include/GL/gl.h	345;"	d
GL_COLOR_MATRIX	include/GL/gl.h	1601;"	d
GL_COLOR_MATRIX	include/GL/glext.h	151;"	d
GL_COLOR_MATRIX	shared/GLee.h	1037;"	d
GL_COLOR_MATRIX_SGI	include/GL/glext.h	1838;"	d
GL_COLOR_MATRIX_SGI	shared/GLee.h	3601;"	d
GL_COLOR_MATRIX_STACK_DEPTH	include/GL/gl.h	1602;"	d
GL_COLOR_MATRIX_STACK_DEPTH	include/GL/glext.h	152;"	d
GL_COLOR_MATRIX_STACK_DEPTH	shared/GLee.h	1038;"	d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	include/GL/glext.h	1839;"	d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	shared/GLee.h	3602;"	d
GL_COLOR_SUM	include/GL/glext.h	318;"	d
GL_COLOR_SUM	shared/GLee.h	1339;"	d
GL_COLOR_SUM_ARB	include/GL/glext.h	1107;"	d
GL_COLOR_SUM_ARB	shared/GLee.h	2577;"	d
GL_COLOR_SUM_CLAMP_NV	include/GL/glext.h	2750;"	d
GL_COLOR_SUM_CLAMP_NV	shared/GLee.h	5763;"	d
GL_COLOR_SUM_EXT	include/GL/glext.h	2486;"	d
GL_COLOR_SUM_EXT	shared/GLee.h	5032;"	d
GL_COLOR_TABLE	include/GL/gl.h	1562;"	d
GL_COLOR_TABLE	include/GL/glext.h	162;"	d
GL_COLOR_TABLE	shared/GLee.h	1048;"	d
GL_COLOR_TABLE_ALPHA_SIZE	include/GL/gl.h	1575;"	d
GL_COLOR_TABLE_ALPHA_SIZE	include/GL/glext.h	175;"	d
GL_COLOR_TABLE_ALPHA_SIZE	shared/GLee.h	1061;"	d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	include/GL/glext.h	1865;"	d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	shared/GLee.h	3633;"	d
GL_COLOR_TABLE_BIAS	include/GL/gl.h	1569;"	d
GL_COLOR_TABLE_BIAS	include/GL/glext.h	169;"	d
GL_COLOR_TABLE_BIAS	shared/GLee.h	1055;"	d
GL_COLOR_TABLE_BIAS_SGI	include/GL/glext.h	1859;"	d
GL_COLOR_TABLE_BIAS_SGI	shared/GLee.h	3627;"	d
GL_COLOR_TABLE_BLUE_SIZE	include/GL/gl.h	1574;"	d
GL_COLOR_TABLE_BLUE_SIZE	include/GL/glext.h	174;"	d
GL_COLOR_TABLE_BLUE_SIZE	shared/GLee.h	1060;"	d
GL_COLOR_TABLE_BLUE_SIZE_SGI	include/GL/glext.h	1864;"	d
GL_COLOR_TABLE_BLUE_SIZE_SGI	shared/GLee.h	3632;"	d
GL_COLOR_TABLE_FORMAT	include/GL/gl.h	1570;"	d
GL_COLOR_TABLE_FORMAT	include/GL/glext.h	170;"	d
GL_COLOR_TABLE_FORMAT	shared/GLee.h	1056;"	d
GL_COLOR_TABLE_FORMAT_SGI	include/GL/glext.h	1860;"	d
GL_COLOR_TABLE_FORMAT_SGI	shared/GLee.h	3628;"	d
GL_COLOR_TABLE_GREEN_SIZE	include/GL/gl.h	1573;"	d
GL_COLOR_TABLE_GREEN_SIZE	include/GL/glext.h	173;"	d
GL_COLOR_TABLE_GREEN_SIZE	shared/GLee.h	1059;"	d
GL_COLOR_TABLE_GREEN_SIZE_SGI	include/GL/glext.h	1863;"	d
GL_COLOR_TABLE_GREEN_SIZE_SGI	shared/GLee.h	3631;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	include/GL/gl.h	1577;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	include/GL/glext.h	177;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	shared/GLee.h	1063;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	include/GL/glext.h	1867;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	shared/GLee.h	3635;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	include/GL/gl.h	1576;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	include/GL/glext.h	176;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	shared/GLee.h	1062;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	include/GL/glext.h	1866;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	shared/GLee.h	3634;"	d
GL_COLOR_TABLE_RED_SIZE	include/GL/gl.h	1572;"	d
GL_COLOR_TABLE_RED_SIZE	include/GL/glext.h	172;"	d
GL_COLOR_TABLE_RED_SIZE	shared/GLee.h	1058;"	d
GL_COLOR_TABLE_RED_SIZE_SGI	include/GL/glext.h	1862;"	d
GL_COLOR_TABLE_RED_SIZE_SGI	shared/GLee.h	3630;"	d
GL_COLOR_TABLE_SCALE	include/GL/gl.h	1568;"	d
GL_COLOR_TABLE_SCALE	include/GL/glext.h	168;"	d
GL_COLOR_TABLE_SCALE	shared/GLee.h	1054;"	d
GL_COLOR_TABLE_SCALE_SGI	include/GL/glext.h	1858;"	d
GL_COLOR_TABLE_SCALE_SGI	shared/GLee.h	3626;"	d
GL_COLOR_TABLE_SGI	include/GL/glext.h	1852;"	d
GL_COLOR_TABLE_SGI	shared/GLee.h	3620;"	d
GL_COLOR_TABLE_WIDTH	include/GL/gl.h	1571;"	d
GL_COLOR_TABLE_WIDTH	include/GL/glext.h	171;"	d
GL_COLOR_TABLE_WIDTH	shared/GLee.h	1057;"	d
GL_COLOR_TABLE_WIDTH_SGI	include/GL/glext.h	1861;"	d
GL_COLOR_TABLE_WIDTH_SGI	shared/GLee.h	3629;"	d
GL_COLOR_WRITEMASK	include/GL/gl.h	527;"	d
GL_COMBINE	include/GL/gl.h	1829;"	d
GL_COMBINE	include/GL/glext.h	259;"	d
GL_COMBINE	shared/GLee.h	1147;"	d
GL_COMBINE4_NV	include/GL/glext.h	2783;"	d
GL_COMBINE4_NV	shared/GLee.h	5849;"	d
GL_COMBINER0_NV	include/GL/glext.h	2751;"	d
GL_COMBINER0_NV	shared/GLee.h	5764;"	d
GL_COMBINER1_NV	include/GL/glext.h	2752;"	d
GL_COMBINER1_NV	shared/GLee.h	5765;"	d
GL_COMBINER2_NV	include/GL/glext.h	2753;"	d
GL_COMBINER2_NV	shared/GLee.h	5766;"	d
GL_COMBINER3_NV	include/GL/glext.h	2754;"	d
GL_COMBINER3_NV	shared/GLee.h	5767;"	d
GL_COMBINER4_NV	include/GL/glext.h	2755;"	d
GL_COMBINER4_NV	shared/GLee.h	5768;"	d
GL_COMBINER5_NV	include/GL/glext.h	2756;"	d
GL_COMBINER5_NV	shared/GLee.h	5769;"	d
GL_COMBINER6_NV	include/GL/glext.h	2757;"	d
GL_COMBINER6_NV	shared/GLee.h	5770;"	d
GL_COMBINER7_NV	include/GL/glext.h	2758;"	d
GL_COMBINER7_NV	shared/GLee.h	5771;"	d
GL_COMBINER_AB_DOT_PRODUCT_NV	include/GL/glext.h	2740;"	d
GL_COMBINER_AB_DOT_PRODUCT_NV	shared/GLee.h	5753;"	d
GL_COMBINER_AB_OUTPUT_NV	include/GL/glext.h	2745;"	d
GL_COMBINER_AB_OUTPUT_NV	shared/GLee.h	5758;"	d
GL_COMBINER_BIAS_NV	include/GL/glext.h	2744;"	d
GL_COMBINER_BIAS_NV	shared/GLee.h	5757;"	d
GL_COMBINER_CD_DOT_PRODUCT_NV	include/GL/glext.h	2741;"	d
GL_COMBINER_CD_DOT_PRODUCT_NV	shared/GLee.h	5754;"	d
GL_COMBINER_CD_OUTPUT_NV	include/GL/glext.h	2746;"	d
GL_COMBINER_CD_OUTPUT_NV	shared/GLee.h	5759;"	d
GL_COMBINER_COMPONENT_USAGE_NV	include/GL/glext.h	2739;"	d
GL_COMBINER_COMPONENT_USAGE_NV	shared/GLee.h	5752;"	d
GL_COMBINER_INPUT_NV	include/GL/glext.h	2737;"	d
GL_COMBINER_INPUT_NV	shared/GLee.h	5750;"	d
GL_COMBINER_MAPPING_NV	include/GL/glext.h	2738;"	d
GL_COMBINER_MAPPING_NV	shared/GLee.h	5751;"	d
GL_COMBINER_MUX_SUM_NV	include/GL/glext.h	2742;"	d
GL_COMBINER_MUX_SUM_NV	shared/GLee.h	5755;"	d
GL_COMBINER_SCALE_NV	include/GL/glext.h	2743;"	d
GL_COMBINER_SCALE_NV	shared/GLee.h	5756;"	d
GL_COMBINER_SUM_OUTPUT_NV	include/GL/glext.h	2747;"	d
GL_COMBINER_SUM_OUTPUT_NV	shared/GLee.h	5760;"	d
GL_COMBINE_ALPHA	include/GL/gl.h	1831;"	d
GL_COMBINE_ALPHA	include/GL/glext.h	261;"	d
GL_COMBINE_ALPHA	shared/GLee.h	1149;"	d
GL_COMBINE_ALPHA_ARB	include/GL/glext.h	1051;"	d
GL_COMBINE_ALPHA_ARB	shared/GLee.h	2433;"	d
GL_COMBINE_ALPHA_EXT	include/GL/glext.h	2539;"	d
GL_COMBINE_ALPHA_EXT	shared/GLee.h	5256;"	d
GL_COMBINE_ARB	include/GL/glext.h	1049;"	d
GL_COMBINE_ARB	shared/GLee.h	2431;"	d
GL_COMBINE_EXT	include/GL/glext.h	2537;"	d
GL_COMBINE_EXT	shared/GLee.h	5254;"	d
GL_COMBINE_RGB	include/GL/gl.h	1830;"	d
GL_COMBINE_RGB	include/GL/glext.h	260;"	d
GL_COMBINE_RGB	shared/GLee.h	1148;"	d
GL_COMBINE_RGB_ARB	include/GL/glext.h	1050;"	d
GL_COMBINE_RGB_ARB	shared/GLee.h	2432;"	d
GL_COMBINE_RGB_EXT	include/GL/glext.h	2538;"	d
GL_COMBINE_RGB_EXT	shared/GLee.h	5255;"	d
GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT	include/GL/glext.h	3960;"	d
GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT	shared/GLee.h	8667;"	d
GL_COMPARE_REF_TO_TEXTURE	include/GL/glext.h	506;"	d
GL_COMPARE_R_TO_TEXTURE	include/GL/glext.h	327;"	d
GL_COMPARE_R_TO_TEXTURE	shared/GLee.h	1355;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	include/GL/glext.h	1096;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	shared/GLee.h	2503;"	d
GL_COMPILE	include/GL/gl.h	289;"	d
GL_COMPILE_AND_EXECUTE	include/GL/gl.h	290;"	d
GL_COMPILE_STATUS	include/GL/glext.h	448;"	d
GL_COMPILE_STATUS	shared/GLee.h	1679;"	d
GL_COMPRESSED_ALPHA	include/GL/gl.h	1802;"	d
GL_COMPRESSED_ALPHA	include/GL/glext.h	255;"	d
GL_COMPRESSED_ALPHA	shared/GLee.h	1135;"	d
GL_COMPRESSED_ALPHA_ARB	include/GL/glext.h	966;"	d
GL_COMPRESSED_ALPHA_ARB	shared/GLee.h	2251;"	d
GL_COMPRESSED_INTENSITY	include/GL/gl.h	1805;"	d
GL_COMPRESSED_INTENSITY	include/GL/glext.h	258;"	d
GL_COMPRESSED_INTENSITY	shared/GLee.h	1138;"	d
GL_COMPRESSED_INTENSITY_ARB	include/GL/glext.h	969;"	d
GL_COMPRESSED_INTENSITY_ARB	shared/GLee.h	2254;"	d
GL_COMPRESSED_LUMINANCE	include/GL/gl.h	1803;"	d
GL_COMPRESSED_LUMINANCE	include/GL/glext.h	256;"	d
GL_COMPRESSED_LUMINANCE	shared/GLee.h	1136;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	include/GL/gl.h	1804;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	include/GL/glext.h	257;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	shared/GLee.h	1137;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	include/GL/glext.h	968;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	shared/GLee.h	2253;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT	include/GL/glext.h	3975;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT	shared/GLee.h	8772;"	d
GL_COMPRESSED_LUMINANCE_ARB	include/GL/glext.h	967;"	d
GL_COMPRESSED_LUMINANCE_ARB	shared/GLee.h	2252;"	d
GL_COMPRESSED_LUMINANCE_LATC1_EXT	include/GL/glext.h	3973;"	d
GL_COMPRESSED_LUMINANCE_LATC1_EXT	shared/GLee.h	8770;"	d
GL_COMPRESSED_RED	include/GL/glext.h	522;"	d
GL_COMPRESSED_RED_GREEN_RGTC2_EXT	include/GL/glext.h	3982;"	d
GL_COMPRESSED_RED_GREEN_RGTC2_EXT	shared/GLee.h	8974;"	d
GL_COMPRESSED_RED_RGTC1	include/GL/glext.h	1533;"	d
GL_COMPRESSED_RED_RGTC1_EXT	include/GL/glext.h	3980;"	d
GL_COMPRESSED_RED_RGTC1_EXT	shared/GLee.h	8972;"	d
GL_COMPRESSED_RG	include/GL/glext.h	523;"	d
GL_COMPRESSED_RGB	include/GL/gl.h	1806;"	d
GL_COMPRESSED_RGB	include/GL/glext.h	235;"	d
GL_COMPRESSED_RGB	shared/GLee.h	1139;"	d
GL_COMPRESSED_RGBA	include/GL/gl.h	1807;"	d
GL_COMPRESSED_RGBA	include/GL/glext.h	236;"	d
GL_COMPRESSED_RGBA	shared/GLee.h	1140;"	d
GL_COMPRESSED_RGBA_ARB	include/GL/glext.h	971;"	d
GL_COMPRESSED_RGBA_ARB	shared/GLee.h	2256;"	d
GL_COMPRESSED_RGBA_FXT1_3DFX	include/GL/glext.h	2853;"	d
GL_COMPRESSED_RGBA_FXT1_3DFX	shared/GLee.h	6079;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	include/GL/glext.h	2798;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	shared/GLee.h	5954;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	shared/GLee.h	9200;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	include/GL/glext.h	2799;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	shared/GLee.h	5955;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	include/GL/glext.h	2800;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	shared/GLee.h	5956;"	d
GL_COMPRESSED_RGB_ARB	include/GL/glext.h	970;"	d
GL_COMPRESSED_RGB_ARB	shared/GLee.h	2255;"	d
GL_COMPRESSED_RGB_FXT1_3DFX	include/GL/glext.h	2852;"	d
GL_COMPRESSED_RGB_FXT1_3DFX	shared/GLee.h	6078;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	include/GL/glext.h	2797;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	shared/GLee.h	5953;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	shared/GLee.h	9199;"	d
GL_COMPRESSED_RG_RGTC2	include/GL/glext.h	1535;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT	include/GL/glext.h	3976;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT	shared/GLee.h	8773;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT	include/GL/glext.h	3974;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT	shared/GLee.h	8771;"	d
GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT	include/GL/glext.h	3983;"	d
GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT	shared/GLee.h	8975;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	include/GL/glext.h	1534;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1_EXT	include/GL/glext.h	3981;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1_EXT	shared/GLee.h	8973;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	include/GL/glext.h	1536;"	d
GL_COMPRESSED_SLUMINANCE	include/GL/glext.h	501;"	d
GL_COMPRESSED_SLUMINANCE	shared/GLee.h	1999;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA	include/GL/glext.h	502;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA	shared/GLee.h	2000;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT	include/GL/glext.h	3817;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT	shared/GLee.h	9239;"	d
GL_COMPRESSED_SLUMINANCE_EXT	include/GL/glext.h	3816;"	d
GL_COMPRESSED_SLUMINANCE_EXT	shared/GLee.h	9238;"	d
GL_COMPRESSED_SRGB	include/GL/glext.h	491;"	d
GL_COMPRESSED_SRGB	shared/GLee.h	1997;"	d
GL_COMPRESSED_SRGB_ALPHA	include/GL/glext.h	492;"	d
GL_COMPRESSED_SRGB_ALPHA	shared/GLee.h	1998;"	d
GL_COMPRESSED_SRGB_ALPHA_EXT	include/GL/glext.h	3815;"	d
GL_COMPRESSED_SRGB_ALPHA_EXT	shared/GLee.h	9237;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT	include/GL/glext.h	3819;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT	shared/GLee.h	9241;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT	include/GL/glext.h	3820;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT	shared/GLee.h	9242;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT	include/GL/glext.h	3821;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT	shared/GLee.h	9243;"	d
GL_COMPRESSED_SRGB_EXT	include/GL/glext.h	3814;"	d
GL_COMPRESSED_SRGB_EXT	shared/GLee.h	9236;"	d
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT	include/GL/glext.h	3818;"	d
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT	shared/GLee.h	9240;"	d
GL_COMPRESSED_TEXTURE_FORMATS	include/GL/gl.h	1812;"	d
GL_COMPRESSED_TEXTURE_FORMATS	include/GL/glext.h	241;"	d
GL_COMPRESSED_TEXTURE_FORMATS	shared/GLee.h	1145;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	include/GL/glext.h	976;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	shared/GLee.h	2261;"	d
GL_COMP_BIT_ATI	include/GL/glext.h	3301;"	d
GL_COMP_BIT_ATI	shared/GLee.h	6942;"	d
GL_CONDITION_SATISFIED	include/GL/glext.h	1649;"	d
GL_CONSERVE_MEMORY_HINT_PGI	include/GL/glext.h	2247;"	d
GL_CONSERVE_MEMORY_HINT_PGI	shared/GLee.h	4460;"	d
GL_CONSTANT	include/GL/gl.h	1848;"	d
GL_CONSTANT	include/GL/glext.h	278;"	d
GL_CONSTANT	shared/GLee.h	1166;"	d
GL_CONSTANT_ALPHA	include/GL/gl.h	1560;"	d
GL_CONSTANT_ALPHA	include/GL/glext.h	105;"	d
GL_CONSTANT_ALPHA	shared/GLee.h	994;"	d
GL_CONSTANT_ALPHA_EXT	include/GL/glext.h	1717;"	d
GL_CONSTANT_ALPHA_EXT	shared/GLee.h	3327;"	d
GL_CONSTANT_ARB	include/GL/glext.h	1068;"	d
GL_CONSTANT_ARB	shared/GLee.h	2450;"	d
GL_CONSTANT_ATTENUATION	include/GL/gl.h	324;"	d
GL_CONSTANT_BORDER	include/GL/gl.h	1598;"	d
GL_CONSTANT_BORDER	include/GL/glext.h	178;"	d
GL_CONSTANT_BORDER	shared/GLee.h	1064;"	d
GL_CONSTANT_BORDER_HP	include/GL/glext.h	2205;"	d
GL_CONSTANT_BORDER_HP	shared/GLee.h	4387;"	d
GL_CONSTANT_COLOR	include/GL/gl.h	1558;"	d
GL_CONSTANT_COLOR	include/GL/glext.h	103;"	d
GL_CONSTANT_COLOR	shared/GLee.h	992;"	d
GL_CONSTANT_COLOR0_NV	include/GL/glext.h	2716;"	d
GL_CONSTANT_COLOR0_NV	shared/GLee.h	5729;"	d
GL_CONSTANT_COLOR1_NV	include/GL/glext.h	2717;"	d
GL_CONSTANT_COLOR1_NV	shared/GLee.h	5730;"	d
GL_CONSTANT_COLOR_EXT	include/GL/glext.h	1715;"	d
GL_CONSTANT_COLOR_EXT	shared/GLee.h	3325;"	d
GL_CONSTANT_EXT	include/GL/glext.h	2543;"	d
GL_CONSTANT_EXT	shared/GLee.h	5260;"	d
GL_CONST_EYE_NV	include/GL/glext.h	3003;"	d
GL_CONST_EYE_NV	shared/GLee.h	6385;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	include/GL/glext.h	814;"	d
GL_CONTEXT_CORE_PROFILE_BIT	include/GL/glext.h	813;"	d
GL_CONTEXT_FLAGS	include/GL/glext.h	519;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	include/GL/glext.h	524;"	d
GL_CONTEXT_PROFILE_MASK	include/GL/glext.h	834;"	d
GL_CONTINUOUS_AMD	include/GL/glext.h	4216;"	d
GL_CONVOLUTION_1D	include/GL/gl.h	1578;"	d
GL_CONVOLUTION_1D	include/GL/glext.h	117;"	d
GL_CONVOLUTION_1D	shared/GLee.h	1003;"	d
GL_CONVOLUTION_1D_EXT	include/GL/glext.h	1815;"	d
GL_CONVOLUTION_1D_EXT	shared/GLee.h	3534;"	d
GL_CONVOLUTION_2D	include/GL/gl.h	1579;"	d
GL_CONVOLUTION_2D	include/GL/glext.h	118;"	d
GL_CONVOLUTION_2D	shared/GLee.h	1004;"	d
GL_CONVOLUTION_2D_EXT	include/GL/glext.h	1816;"	d
GL_CONVOLUTION_2D_EXT	shared/GLee.h	3535;"	d
GL_CONVOLUTION_BORDER_COLOR	include/GL/gl.h	1600;"	d
GL_CONVOLUTION_BORDER_COLOR	include/GL/glext.h	180;"	d
GL_CONVOLUTION_BORDER_COLOR	shared/GLee.h	1066;"	d
GL_CONVOLUTION_BORDER_COLOR_HP	include/GL/glext.h	2207;"	d
GL_CONVOLUTION_BORDER_COLOR_HP	shared/GLee.h	4389;"	d
GL_CONVOLUTION_BORDER_MODE	include/GL/gl.h	1581;"	d
GL_CONVOLUTION_BORDER_MODE	include/GL/glext.h	120;"	d
GL_CONVOLUTION_BORDER_MODE	shared/GLee.h	1006;"	d
GL_CONVOLUTION_BORDER_MODE_EXT	include/GL/glext.h	1818;"	d
GL_CONVOLUTION_BORDER_MODE_EXT	shared/GLee.h	3537;"	d
GL_CONVOLUTION_FILTER_BIAS	include/GL/gl.h	1583;"	d
GL_CONVOLUTION_FILTER_BIAS	include/GL/glext.h	122;"	d
GL_CONVOLUTION_FILTER_BIAS	shared/GLee.h	1008;"	d
GL_CONVOLUTION_FILTER_BIAS_EXT	include/GL/glext.h	1820;"	d
GL_CONVOLUTION_FILTER_BIAS_EXT	shared/GLee.h	3539;"	d
GL_CONVOLUTION_FILTER_SCALE	include/GL/gl.h	1582;"	d
GL_CONVOLUTION_FILTER_SCALE	include/GL/glext.h	121;"	d
GL_CONVOLUTION_FILTER_SCALE	shared/GLee.h	1007;"	d
GL_CONVOLUTION_FILTER_SCALE_EXT	include/GL/glext.h	1819;"	d
GL_CONVOLUTION_FILTER_SCALE_EXT	shared/GLee.h	3538;"	d
GL_CONVOLUTION_FORMAT	include/GL/gl.h	1585;"	d
GL_CONVOLUTION_FORMAT	include/GL/glext.h	124;"	d
GL_CONVOLUTION_FORMAT	shared/GLee.h	1010;"	d
GL_CONVOLUTION_FORMAT_EXT	include/GL/glext.h	1822;"	d
GL_CONVOLUTION_FORMAT_EXT	shared/GLee.h	3541;"	d
GL_CONVOLUTION_HEIGHT	include/GL/gl.h	1587;"	d
GL_CONVOLUTION_HEIGHT	include/GL/glext.h	126;"	d
GL_CONVOLUTION_HEIGHT	shared/GLee.h	1012;"	d
GL_CONVOLUTION_HEIGHT_EXT	include/GL/glext.h	1824;"	d
GL_CONVOLUTION_HEIGHT_EXT	shared/GLee.h	3543;"	d
GL_CONVOLUTION_HINT_SGIX	include/GL/glext.h	2892;"	d
GL_CONVOLUTION_HINT_SGIX	shared/GLee.h	6152;"	d
GL_CONVOLUTION_WIDTH	include/GL/gl.h	1586;"	d
GL_CONVOLUTION_WIDTH	include/GL/glext.h	125;"	d
GL_CONVOLUTION_WIDTH	shared/GLee.h	1011;"	d
GL_CONVOLUTION_WIDTH_EXT	include/GL/glext.h	1823;"	d
GL_CONVOLUTION_WIDTH_EXT	shared/GLee.h	3542;"	d
GL_CON_0_ATI	include/GL/glext.h	3233;"	d
GL_CON_0_ATI	shared/GLee.h	6874;"	d
GL_CON_10_ATI	include/GL/glext.h	3243;"	d
GL_CON_10_ATI	shared/GLee.h	6884;"	d
GL_CON_11_ATI	include/GL/glext.h	3244;"	d
GL_CON_11_ATI	shared/GLee.h	6885;"	d
GL_CON_12_ATI	include/GL/glext.h	3245;"	d
GL_CON_12_ATI	shared/GLee.h	6886;"	d
GL_CON_13_ATI	include/GL/glext.h	3246;"	d
GL_CON_13_ATI	shared/GLee.h	6887;"	d
GL_CON_14_ATI	include/GL/glext.h	3247;"	d
GL_CON_14_ATI	shared/GLee.h	6888;"	d
GL_CON_15_ATI	include/GL/glext.h	3248;"	d
GL_CON_15_ATI	shared/GLee.h	6889;"	d
GL_CON_16_ATI	include/GL/glext.h	3249;"	d
GL_CON_16_ATI	shared/GLee.h	6890;"	d
GL_CON_17_ATI	include/GL/glext.h	3250;"	d
GL_CON_17_ATI	shared/GLee.h	6891;"	d
GL_CON_18_ATI	include/GL/glext.h	3251;"	d
GL_CON_18_ATI	shared/GLee.h	6892;"	d
GL_CON_19_ATI	include/GL/glext.h	3252;"	d
GL_CON_19_ATI	shared/GLee.h	6893;"	d
GL_CON_1_ATI	include/GL/glext.h	3234;"	d
GL_CON_1_ATI	shared/GLee.h	6875;"	d
GL_CON_20_ATI	include/GL/glext.h	3253;"	d
GL_CON_20_ATI	shared/GLee.h	6894;"	d
GL_CON_21_ATI	include/GL/glext.h	3254;"	d
GL_CON_21_ATI	shared/GLee.h	6895;"	d
GL_CON_22_ATI	include/GL/glext.h	3255;"	d
GL_CON_22_ATI	shared/GLee.h	6896;"	d
GL_CON_23_ATI	include/GL/glext.h	3256;"	d
GL_CON_23_ATI	shared/GLee.h	6897;"	d
GL_CON_24_ATI	include/GL/glext.h	3257;"	d
GL_CON_24_ATI	shared/GLee.h	6898;"	d
GL_CON_25_ATI	include/GL/glext.h	3258;"	d
GL_CON_25_ATI	shared/GLee.h	6899;"	d
GL_CON_26_ATI	include/GL/glext.h	3259;"	d
GL_CON_26_ATI	shared/GLee.h	6900;"	d
GL_CON_27_ATI	include/GL/glext.h	3260;"	d
GL_CON_27_ATI	shared/GLee.h	6901;"	d
GL_CON_28_ATI	include/GL/glext.h	3261;"	d
GL_CON_28_ATI	shared/GLee.h	6902;"	d
GL_CON_29_ATI	include/GL/glext.h	3262;"	d
GL_CON_29_ATI	shared/GLee.h	6903;"	d
GL_CON_2_ATI	include/GL/glext.h	3235;"	d
GL_CON_2_ATI	shared/GLee.h	6876;"	d
GL_CON_30_ATI	include/GL/glext.h	3263;"	d
GL_CON_30_ATI	shared/GLee.h	6904;"	d
GL_CON_31_ATI	include/GL/glext.h	3264;"	d
GL_CON_31_ATI	shared/GLee.h	6905;"	d
GL_CON_3_ATI	include/GL/glext.h	3236;"	d
GL_CON_3_ATI	shared/GLee.h	6877;"	d
GL_CON_4_ATI	include/GL/glext.h	3237;"	d
GL_CON_4_ATI	shared/GLee.h	6878;"	d
GL_CON_5_ATI	include/GL/glext.h	3238;"	d
GL_CON_5_ATI	shared/GLee.h	6879;"	d
GL_CON_6_ATI	include/GL/glext.h	3239;"	d
GL_CON_6_ATI	shared/GLee.h	6880;"	d
GL_CON_7_ATI	include/GL/glext.h	3240;"	d
GL_CON_7_ATI	shared/GLee.h	6881;"	d
GL_CON_8_ATI	include/GL/glext.h	3241;"	d
GL_CON_8_ATI	shared/GLee.h	6882;"	d
GL_CON_9_ATI	include/GL/glext.h	3242;"	d
GL_CON_9_ATI	shared/GLee.h	6883;"	d
GL_COORD_REPLACE	include/GL/glext.h	472;"	d
GL_COORD_REPLACE	shared/GLee.h	1646;"	d
GL_COORD_REPLACE_ARB	include/GL/glext.h	1310;"	d
GL_COORD_REPLACE_ARB	shared/GLee.h	3194;"	d
GL_COORD_REPLACE_NV	include/GL/glext.h	3487;"	d
GL_COORD_REPLACE_NV	shared/GLee.h	7561;"	d
GL_COPY	include/GL/gl.h	435;"	d
GL_COPY_INVERTED	include/GL/gl.h	436;"	d
GL_COPY_PIXEL_TOKEN	include/GL/gl.h	406;"	d
GL_COPY_READ_BUFFER	include/GL/glext.h	1609;"	d
GL_COPY_WRITE_BUFFER	include/GL/glext.h	1610;"	d
GL_COUNTER_RANGE_AMD	include/GL/glext.h	4198;"	d
GL_COUNTER_TYPE_AMD	include/GL/glext.h	4197;"	d
GL_CUBIC_EXT	include/GL/glext.h	2465;"	d
GL_CUBIC_EXT	shared/GLee.h	4979;"	d
GL_CUBIC_HP	include/GL/glext.h	2196;"	d
GL_CUBIC_HP	shared/GLee.h	4355;"	d
GL_CULL_FACE	include/GL/gl.h	279;"	d
GL_CULL_FACE_MODE	include/GL/gl.h	280;"	d
GL_CULL_FRAGMENT_NV	include/GL/glext.h	3005;"	d
GL_CULL_FRAGMENT_NV	shared/GLee.h	6387;"	d
GL_CULL_MODES_NV	include/GL/glext.h	2995;"	d
GL_CULL_MODES_NV	shared/GLee.h	6377;"	d
GL_CULL_VERTEX_EXT	include/GL/glext.h	2336;"	d
GL_CULL_VERTEX_EXT	shared/GLee.h	4659;"	d
GL_CULL_VERTEX_EYE_POSITION_EXT	include/GL/glext.h	2337;"	d
GL_CULL_VERTEX_EYE_POSITION_EXT	shared/GLee.h	4660;"	d
GL_CULL_VERTEX_IBM	include/GL/glext.h	2804;"	d
GL_CULL_VERTEX_IBM	shared/GLee.h	5965;"	d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	include/GL/glext.h	2338;"	d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	shared/GLee.h	4661;"	d
GL_CURRENT_ATTRIB_NV	include/GL/glext.h	3074;"	d
GL_CURRENT_ATTRIB_NV	shared/GLee.h	6471;"	d
GL_CURRENT_BINORMAL_EXT	include/GL/glext.h	2523;"	d
GL_CURRENT_BINORMAL_EXT	shared/GLee.h	5169;"	d
GL_CURRENT_BIT	include/GL/gl.h	705;"	d
GL_CURRENT_COLOR	include/GL/gl.h	529;"	d
GL_CURRENT_FOG_COORD	include/GL/glext.h	372;"	d
GL_CURRENT_FOG_COORD	shared/GLee.h	1537;"	d
GL_CURRENT_FOG_COORDINATE	include/GL/glext.h	313;"	d
GL_CURRENT_FOG_COORDINATE	shared/GLee.h	1334;"	d
GL_CURRENT_FOG_COORDINATE_EXT	include/GL/glext.h	2507;"	d
GL_CURRENT_FOG_COORDINATE_EXT	shared/GLee.h	5128;"	d
GL_CURRENT_INDEX	include/GL/gl.h	528;"	d
GL_CURRENT_MATRIX_ARB	include/GL/glext.h	1119;"	d
GL_CURRENT_MATRIX_ARB	shared/GLee.h	2589;"	d
GL_CURRENT_MATRIX_INDEX_ARB	include/GL/glext.h	1041;"	d
GL_CURRENT_MATRIX_INDEX_ARB	shared/GLee.h	2403;"	d
GL_CURRENT_MATRIX_NV	include/GL/glext.h	3093;"	d
GL_CURRENT_MATRIX_NV	shared/GLee.h	6490;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	include/GL/glext.h	1118;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	shared/GLee.h	2588;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	include/GL/glext.h	3092;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	shared/GLee.h	6489;"	d
GL_CURRENT_NORMAL	include/GL/gl.h	530;"	d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	include/GL/glext.h	3480;"	d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	shared/GLee.h	7528;"	d
GL_CURRENT_PALETTE_MATRIX_ARB	include/GL/glext.h	1039;"	d
GL_CURRENT_PALETTE_MATRIX_ARB	shared/GLee.h	2401;"	d
GL_CURRENT_PROGRAM	include/GL/glext.h	460;"	d
GL_CURRENT_PROGRAM	shared/GLee.h	1691;"	d
GL_CURRENT_QUERY	include/GL/glext.h	334;"	d
GL_CURRENT_QUERY	shared/GLee.h	1502;"	d
GL_CURRENT_QUERY_ARB	include/GL/glext.h	1242;"	d
GL_CURRENT_QUERY_ARB	shared/GLee.h	2946;"	d
GL_CURRENT_RASTER_COLOR	include/GL/gl.h	531;"	d
GL_CURRENT_RASTER_DISTANCE	include/GL/gl.h	532;"	d
GL_CURRENT_RASTER_INDEX	include/GL/gl.h	533;"	d
GL_CURRENT_RASTER_NORMAL_EXT	shared/GLee.h	9093;"	d
GL_CURRENT_RASTER_NORMAL_SGIX	include/GL/glext.h	2353;"	d
GL_CURRENT_RASTER_NORMAL_SGIX	shared/GLee.h	4692;"	d
GL_CURRENT_RASTER_POSITION	include/GL/gl.h	534;"	d
GL_CURRENT_RASTER_POSITION_VALID	include/GL/gl.h	536;"	d
GL_CURRENT_RASTER_SECONDARY_COLOR	include/GL/glext.h	496;"	d
GL_CURRENT_RASTER_SECONDARY_COLOR	shared/GLee.h	2007;"	d
GL_CURRENT_RASTER_TEXTURE_COORDS	include/GL/gl.h	535;"	d
GL_CURRENT_SECONDARY_COLOR	include/GL/glext.h	319;"	d
GL_CURRENT_SECONDARY_COLOR	shared/GLee.h	1340;"	d
GL_CURRENT_SECONDARY_COLOR_EXT	include/GL/glext.h	2487;"	d
GL_CURRENT_SECONDARY_COLOR_EXT	shared/GLee.h	5033;"	d
GL_CURRENT_TANGENT_EXT	include/GL/glext.h	2522;"	d
GL_CURRENT_TANGENT_EXT	shared/GLee.h	5168;"	d
GL_CURRENT_TEXTURE_COORDS	include/GL/gl.h	537;"	d
GL_CURRENT_TIME_NV	include/GL/glext.h	4128;"	d
GL_CURRENT_VERTEX_ATTRIB	include/GL/glext.h	392;"	d
GL_CURRENT_VERTEX_ATTRIB	shared/GLee.h	1619;"	d
GL_CURRENT_VERTEX_ATTRIB_ARB	include/GL/glext.h	1113;"	d
GL_CURRENT_VERTEX_ATTRIB_ARB	shared/GLee.h	2583;"	d
GL_CURRENT_VERTEX_EXT	include/GL/glext.h	3428;"	d
GL_CURRENT_VERTEX_EXT	shared/GLee.h	7168;"	d
GL_CURRENT_VERTEX_WEIGHT_EXT	include/GL/glext.h	2686;"	d
GL_CURRENT_VERTEX_WEIGHT_EXT	shared/GLee.h	5669;"	d
GL_CURRENT_WEIGHT_ARB	include/GL/glext.h	995;"	d
GL_CURRENT_WEIGHT_ARB	shared/GLee.h	2322;"	d
GL_CW	include/GL/gl.h	271;"	d
GL_DEBUG_ASSERT_MESA	include/GL/gl.h	2102;"	d
GL_DEBUG_OBJECT_MESA	include/GL/gl.h	2100;"	d
GL_DEBUG_PRINT_MESA	include/GL/gl.h	2101;"	d
GL_DECAL	include/GL/gl.h	677;"	d
GL_DECR	include/GL/gl.h	465;"	d
GL_DECR_WRAP	include/GL/glext.h	298;"	d
GL_DECR_WRAP	shared/GLee.h	1350;"	d
GL_DECR_WRAP_EXT	include/GL/glext.h	2630;"	d
GL_DECR_WRAP_EXT	shared/GLee.h	5573;"	d
GL_DEFORMATIONS_MASK_SGIX	include/GL/glext.h	2156;"	d
GL_DEFORMATIONS_MASK_SGIX	shared/GLee.h	4261;"	d
GL_DELETE_STATUS	include/GL/glext.h	447;"	d
GL_DELETE_STATUS	shared/GLee.h	1678;"	d
GL_DEPENDENT_AR_TEXTURE_2D_NV	include/GL/glext.h	3007;"	d
GL_DEPENDENT_AR_TEXTURE_2D_NV	shared/GLee.h	6389;"	d
GL_DEPENDENT_GB_TEXTURE_2D_NV	include/GL/glext.h	3008;"	d
GL_DEPENDENT_GB_TEXTURE_2D_NV	shared/GLee.h	6390;"	d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	include/GL/glext.h	3500;"	d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	shared/GLee.h	7585;"	d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	include/GL/glext.h	3501;"	d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	shared/GLee.h	7586;"	d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	include/GL/glext.h	3502;"	d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	shared/GLee.h	7587;"	d
GL_DEPTH	include/GL/gl.h	502;"	d
GL_DEPTH24_STENCIL8	include/GL/glext.h	1410;"	d
GL_DEPTH24_STENCIL8_EXT	include/GL/glext.h	3796;"	d
GL_DEPTH24_STENCIL8_EXT	shared/GLee.h	9165;"	d
GL_DEPTH32F_STENCIL8	include/GL/glext.h	1387;"	d
GL_DEPTH32F_STENCIL8_NV	include/GL/glext.h	3994;"	d
GL_DEPTH32F_STENCIL8_NV	shared/GLee.h	8750;"	d
GL_DEPTH_ATTACHMENT	include/GL/glext.h	1453;"	d
GL_DEPTH_ATTACHMENT_EXT	include/GL/glext.h	3771;"	d
GL_DEPTH_ATTACHMENT_EXT	shared/GLee.h	8300;"	d
GL_DEPTH_BIAS	include/GL/gl.h	608;"	d
GL_DEPTH_BITS	include/GL/gl.h	305;"	d
GL_DEPTH_BOUNDS_EXT	include/GL/glext.h	3685;"	d
GL_DEPTH_BOUNDS_EXT	shared/GLee.h	8160;"	d
GL_DEPTH_BOUNDS_TEST_EXT	include/GL/glext.h	3684;"	d
GL_DEPTH_BOUNDS_TEST_EXT	shared/GLee.h	8159;"	d
GL_DEPTH_BUFFER	include/GL/glext.h	520;"	d
GL_DEPTH_BUFFER_BIT	include/GL/gl.h	713;"	d
GL_DEPTH_BUFFER_FLOAT_MODE_NV	include/GL/glext.h	3996;"	d
GL_DEPTH_BUFFER_FLOAT_MODE_NV	shared/GLee.h	8752;"	d
GL_DEPTH_CLAMP	include/GL/glext.h	1617;"	d
GL_DEPTH_CLAMP_NV	include/GL/glext.h	3475;"	d
GL_DEPTH_CLAMP_NV	shared/GLee.h	7518;"	d
GL_DEPTH_CLEAR_VALUE	include/GL/gl.h	306;"	d
GL_DEPTH_COMPONENT	include/GL/gl.h	310;"	d
GL_DEPTH_COMPONENT16	include/GL/glext.h	291;"	d
GL_DEPTH_COMPONENT16	shared/GLee.h	1327;"	d
GL_DEPTH_COMPONENT16_ARB	include/GL/glext.h	1086;"	d
GL_DEPTH_COMPONENT16_ARB	shared/GLee.h	2488;"	d
GL_DEPTH_COMPONENT16_SGIX	include/GL/glext.h	2169;"	d
GL_DEPTH_COMPONENT16_SGIX	shared/GLee.h	4307;"	d
GL_DEPTH_COMPONENT24	include/GL/glext.h	292;"	d
GL_DEPTH_COMPONENT24	shared/GLee.h	1328;"	d
GL_DEPTH_COMPONENT24_ARB	include/GL/glext.h	1087;"	d
GL_DEPTH_COMPONENT24_ARB	shared/GLee.h	2489;"	d
GL_DEPTH_COMPONENT24_SGIX	include/GL/glext.h	2170;"	d
GL_DEPTH_COMPONENT24_SGIX	shared/GLee.h	4308;"	d
GL_DEPTH_COMPONENT32	include/GL/glext.h	293;"	d
GL_DEPTH_COMPONENT32	shared/GLee.h	1329;"	d
GL_DEPTH_COMPONENT32F	include/GL/glext.h	1386;"	d
GL_DEPTH_COMPONENT32F_NV	include/GL/glext.h	3993;"	d
GL_DEPTH_COMPONENT32F_NV	shared/GLee.h	8749;"	d
GL_DEPTH_COMPONENT32_ARB	include/GL/glext.h	1088;"	d
GL_DEPTH_COMPONENT32_ARB	shared/GLee.h	2490;"	d
GL_DEPTH_COMPONENT32_SGIX	include/GL/glext.h	2171;"	d
GL_DEPTH_COMPONENT32_SGIX	shared/GLee.h	4309;"	d
GL_DEPTH_FUNC	include/GL/gl.h	307;"	d
GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX	include/GL/glext.h	2847;"	d
GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX	shared/GLee.h	6068;"	d
GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX	include/GL/glext.h	2848;"	d
GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX	shared/GLee.h	6069;"	d
GL_DEPTH_PASS_INSTRUMENT_SGIX	include/GL/glext.h	2846;"	d
GL_DEPTH_PASS_INSTRUMENT_SGIX	shared/GLee.h	6067;"	d
GL_DEPTH_RANGE	include/GL/gl.h	308;"	d
GL_DEPTH_SCALE	include/GL/gl.h	607;"	d
GL_DEPTH_STENCIL	include/GL/glext.h	1408;"	d
GL_DEPTH_STENCIL_ATTACHMENT	include/GL/glext.h	1406;"	d
GL_DEPTH_STENCIL_EXT	include/GL/glext.h	3794;"	d
GL_DEPTH_STENCIL_EXT	shared/GLee.h	9163;"	d
GL_DEPTH_STENCIL_MESA	include/GL/gl.h	2122;"	d
GL_DEPTH_STENCIL_NV	include/GL/glext.h	2966;"	d
GL_DEPTH_STENCIL_NV	shared/GLee.h	6322;"	d
GL_DEPTH_STENCIL_TO_BGRA_NV	include/GL/glext.h	3185;"	d
GL_DEPTH_STENCIL_TO_BGRA_NV	shared/GLee.h	6804;"	d
GL_DEPTH_STENCIL_TO_RGBA_NV	include/GL/glext.h	3184;"	d
GL_DEPTH_STENCIL_TO_RGBA_NV	shared/GLee.h	6803;"	d
GL_DEPTH_TEST	include/GL/gl.h	304;"	d
GL_DEPTH_TEXTURE_MODE	include/GL/glext.h	326;"	d
GL_DEPTH_TEXTURE_MODE	shared/GLee.h	1352;"	d
GL_DEPTH_TEXTURE_MODE_ARB	include/GL/glext.h	1090;"	d
GL_DEPTH_TEXTURE_MODE_ARB	shared/GLee.h	2492;"	d
GL_DEPTH_WRITEMASK	include/GL/gl.h	309;"	d
GL_DETAIL_TEXTURE_2D_BINDING_SGIS	include/GL/glext.h	1917;"	d
GL_DETAIL_TEXTURE_2D_BINDING_SGIS	shared/GLee.h	3786;"	d
GL_DETAIL_TEXTURE_2D_SGIS	include/GL/glext.h	1916;"	d
GL_DETAIL_TEXTURE_2D_SGIS	shared/GLee.h	3785;"	d
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS	include/GL/glext.h	1923;"	d
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS	shared/GLee.h	3792;"	d
GL_DETAIL_TEXTURE_LEVEL_SGIS	include/GL/glext.h	1921;"	d
GL_DETAIL_TEXTURE_LEVEL_SGIS	shared/GLee.h	3790;"	d
GL_DETAIL_TEXTURE_MODE_SGIS	include/GL/glext.h	1922;"	d
GL_DETAIL_TEXTURE_MODE_SGIS	shared/GLee.h	3791;"	d
GL_DIFFUSE	include/GL/gl.h	328;"	d
GL_DISCARD_ATI	include/GL/glext.h	3322;"	d
GL_DISCARD_ATI	shared/GLee.h	7021;"	d
GL_DISCARD_NV	include/GL/glext.h	2722;"	d
GL_DISCARD_NV	shared/GLee.h	5735;"	d
GL_DISCRETE_AMD	include/GL/glext.h	4215;"	d
GL_DISTANCE_ATTENUATION_EXT	include/GL/glext.h	2117;"	d
GL_DISTANCE_ATTENUATION_EXT	shared/GLee.h	4151;"	d
GL_DISTANCE_ATTENUATION_SGIS	include/GL/glext.h	2124;"	d
GL_DISTANCE_ATTENUATION_SGIS	shared/GLee.h	4169;"	d
GL_DITHER	include/GL/gl.h	504;"	d
GL_DOMAIN	include/GL/gl.h	578;"	d
GL_DONT_CARE	include/GL/gl.h	586;"	d
GL_DOT2_ADD_ATI	include/GL/glext.h	3275;"	d
GL_DOT2_ADD_ATI	shared/GLee.h	6916;"	d
GL_DOT3_ATI	include/GL/glext.h	3269;"	d
GL_DOT3_ATI	shared/GLee.h	6910;"	d
GL_DOT3_RGB	include/GL/gl.h	1852;"	d
GL_DOT3_RGB	include/GL/glext.h	281;"	d
GL_DOT3_RGB	shared/GLee.h	1169;"	d
GL_DOT3_RGBA	include/GL/gl.h	1853;"	d
GL_DOT3_RGBA	include/GL/glext.h	282;"	d
GL_DOT3_RGBA	shared/GLee.h	1170;"	d
GL_DOT3_RGBA_ARB	include/GL/glext.h	1078;"	d
GL_DOT3_RGBA_ARB	shared/GLee.h	2470;"	d
GL_DOT3_RGBA_EXT	include/GL/glext.h	2920;"	d
GL_DOT3_RGBA_EXT	shared/GLee.h	6203;"	d
GL_DOT3_RGB_ARB	include/GL/glext.h	1077;"	d
GL_DOT3_RGB_ARB	shared/GLee.h	2469;"	d
GL_DOT3_RGB_EXT	include/GL/glext.h	2919;"	d
GL_DOT3_RGB_EXT	shared/GLee.h	6202;"	d
GL_DOT4_ATI	include/GL/glext.h	3270;"	d
GL_DOT4_ATI	shared/GLee.h	6911;"	d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	include/GL/glext.h	3505;"	d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	shared/GLee.h	7590;"	d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	include/GL/glext.h	3015;"	d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	shared/GLee.h	6397;"	d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	include/GL/glext.h	3010;"	d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	shared/GLee.h	6392;"	d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	include/GL/glext.h	3013;"	d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	shared/GLee.h	6395;"	d
GL_DOT_PRODUCT_NV	include/GL/glext.h	3009;"	d
GL_DOT_PRODUCT_NV	shared/GLee.h	6391;"	d
GL_DOT_PRODUCT_PASS_THROUGH_NV	include/GL/glext.h	3503;"	d
GL_DOT_PRODUCT_PASS_THROUGH_NV	shared/GLee.h	7588;"	d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	include/GL/glext.h	3014;"	d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	shared/GLee.h	6396;"	d
GL_DOT_PRODUCT_TEXTURE_1D_NV	include/GL/glext.h	3504;"	d
GL_DOT_PRODUCT_TEXTURE_1D_NV	shared/GLee.h	7589;"	d
GL_DOT_PRODUCT_TEXTURE_2D_NV	include/GL/glext.h	3011;"	d
GL_DOT_PRODUCT_TEXTURE_2D_NV	shared/GLee.h	6393;"	d
GL_DOT_PRODUCT_TEXTURE_3D_NV	include/GL/glext.h	3061;"	d
GL_DOT_PRODUCT_TEXTURE_3D_NV	shared/GLee.h	6448;"	d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	include/GL/glext.h	3012;"	d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	shared/GLee.h	6394;"	d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	include/GL/glext.h	2987;"	d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	shared/GLee.h	6369;"	d
GL_DOUBLE	include/GL/gl.h	190;"	d
GL_DOUBLEBUFFER	include/GL/gl.h	498;"	d
GL_DRAW_BUFFER	include/GL/gl.h	497;"	d
GL_DRAW_BUFFER0	include/GL/glext.h	400;"	d
GL_DRAW_BUFFER0	shared/GLee.h	1628;"	d
GL_DRAW_BUFFER0_ARB	include/GL/glext.h	1318;"	d
GL_DRAW_BUFFER0_ARB	shared/GLee.h	3212;"	d
GL_DRAW_BUFFER0_ATI	include/GL/glext.h	3569;"	d
GL_DRAW_BUFFER0_ATI	shared/GLee.h	7777;"	d
GL_DRAW_BUFFER1	include/GL/glext.h	401;"	d
GL_DRAW_BUFFER1	shared/GLee.h	1629;"	d
GL_DRAW_BUFFER10	include/GL/glext.h	410;"	d
GL_DRAW_BUFFER10	shared/GLee.h	1638;"	d
GL_DRAW_BUFFER10_ARB	include/GL/glext.h	1328;"	d
GL_DRAW_BUFFER10_ARB	shared/GLee.h	3222;"	d
GL_DRAW_BUFFER10_ATI	include/GL/glext.h	3579;"	d
GL_DRAW_BUFFER10_ATI	shared/GLee.h	7787;"	d
GL_DRAW_BUFFER11	include/GL/glext.h	411;"	d
GL_DRAW_BUFFER11	shared/GLee.h	1639;"	d
GL_DRAW_BUFFER11_ARB	include/GL/glext.h	1329;"	d
GL_DRAW_BUFFER11_ARB	shared/GLee.h	3223;"	d
GL_DRAW_BUFFER11_ATI	include/GL/glext.h	3580;"	d
GL_DRAW_BUFFER11_ATI	shared/GLee.h	7788;"	d
GL_DRAW_BUFFER12	include/GL/glext.h	412;"	d
GL_DRAW_BUFFER12	shared/GLee.h	1640;"	d
GL_DRAW_BUFFER12_ARB	include/GL/glext.h	1330;"	d
GL_DRAW_BUFFER12_ARB	shared/GLee.h	3224;"	d
GL_DRAW_BUFFER12_ATI	include/GL/glext.h	3581;"	d
GL_DRAW_BUFFER12_ATI	shared/GLee.h	7789;"	d
GL_DRAW_BUFFER13	include/GL/glext.h	413;"	d
GL_DRAW_BUFFER13	shared/GLee.h	1641;"	d
GL_DRAW_BUFFER13_ARB	include/GL/glext.h	1331;"	d
GL_DRAW_BUFFER13_ARB	shared/GLee.h	3225;"	d
GL_DRAW_BUFFER13_ATI	include/GL/glext.h	3582;"	d
GL_DRAW_BUFFER13_ATI	shared/GLee.h	7790;"	d
GL_DRAW_BUFFER14	include/GL/glext.h	414;"	d
GL_DRAW_BUFFER14	shared/GLee.h	1642;"	d
GL_DRAW_BUFFER14_ARB	include/GL/glext.h	1332;"	d
GL_DRAW_BUFFER14_ARB	shared/GLee.h	3226;"	d
GL_DRAW_BUFFER14_ATI	include/GL/glext.h	3583;"	d
GL_DRAW_BUFFER14_ATI	shared/GLee.h	7791;"	d
GL_DRAW_BUFFER15	include/GL/glext.h	415;"	d
GL_DRAW_BUFFER15	shared/GLee.h	1643;"	d
GL_DRAW_BUFFER15_ARB	include/GL/glext.h	1333;"	d
GL_DRAW_BUFFER15_ARB	shared/GLee.h	3227;"	d
GL_DRAW_BUFFER15_ATI	include/GL/glext.h	3584;"	d
GL_DRAW_BUFFER15_ATI	shared/GLee.h	7792;"	d
GL_DRAW_BUFFER1_ARB	include/GL/glext.h	1319;"	d
GL_DRAW_BUFFER1_ARB	shared/GLee.h	3213;"	d
GL_DRAW_BUFFER1_ATI	include/GL/glext.h	3570;"	d
GL_DRAW_BUFFER1_ATI	shared/GLee.h	7778;"	d
GL_DRAW_BUFFER2	include/GL/glext.h	402;"	d
GL_DRAW_BUFFER2	shared/GLee.h	1630;"	d
GL_DRAW_BUFFER2_ARB	include/GL/glext.h	1320;"	d
GL_DRAW_BUFFER2_ARB	shared/GLee.h	3214;"	d
GL_DRAW_BUFFER2_ATI	include/GL/glext.h	3571;"	d
GL_DRAW_BUFFER2_ATI	shared/GLee.h	7779;"	d
GL_DRAW_BUFFER3	include/GL/glext.h	403;"	d
GL_DRAW_BUFFER3	shared/GLee.h	1631;"	d
GL_DRAW_BUFFER3_ARB	include/GL/glext.h	1321;"	d
GL_DRAW_BUFFER3_ARB	shared/GLee.h	3215;"	d
GL_DRAW_BUFFER3_ATI	include/GL/glext.h	3572;"	d
GL_DRAW_BUFFER3_ATI	shared/GLee.h	7780;"	d
GL_DRAW_BUFFER4	include/GL/glext.h	404;"	d
GL_DRAW_BUFFER4	shared/GLee.h	1632;"	d
GL_DRAW_BUFFER4_ARB	include/GL/glext.h	1322;"	d
GL_DRAW_BUFFER4_ARB	shared/GLee.h	3216;"	d
GL_DRAW_BUFFER4_ATI	include/GL/glext.h	3573;"	d
GL_DRAW_BUFFER4_ATI	shared/GLee.h	7781;"	d
GL_DRAW_BUFFER5	include/GL/glext.h	405;"	d
GL_DRAW_BUFFER5	shared/GLee.h	1633;"	d
GL_DRAW_BUFFER5_ARB	include/GL/glext.h	1323;"	d
GL_DRAW_BUFFER5_ARB	shared/GLee.h	3217;"	d
GL_DRAW_BUFFER5_ATI	include/GL/glext.h	3574;"	d
GL_DRAW_BUFFER5_ATI	shared/GLee.h	7782;"	d
GL_DRAW_BUFFER6	include/GL/glext.h	406;"	d
GL_DRAW_BUFFER6	shared/GLee.h	1634;"	d
GL_DRAW_BUFFER6_ARB	include/GL/glext.h	1324;"	d
GL_DRAW_BUFFER6_ARB	shared/GLee.h	3218;"	d
GL_DRAW_BUFFER6_ATI	include/GL/glext.h	3575;"	d
GL_DRAW_BUFFER6_ATI	shared/GLee.h	7783;"	d
GL_DRAW_BUFFER7	include/GL/glext.h	407;"	d
GL_DRAW_BUFFER7	shared/GLee.h	1635;"	d
GL_DRAW_BUFFER7_ARB	include/GL/glext.h	1325;"	d
GL_DRAW_BUFFER7_ARB	shared/GLee.h	3219;"	d
GL_DRAW_BUFFER7_ATI	include/GL/glext.h	3576;"	d
GL_DRAW_BUFFER7_ATI	shared/GLee.h	7784;"	d
GL_DRAW_BUFFER8	include/GL/glext.h	408;"	d
GL_DRAW_BUFFER8	shared/GLee.h	1636;"	d
GL_DRAW_BUFFER8_ARB	include/GL/glext.h	1326;"	d
GL_DRAW_BUFFER8_ARB	shared/GLee.h	3220;"	d
GL_DRAW_BUFFER8_ATI	include/GL/glext.h	3577;"	d
GL_DRAW_BUFFER8_ATI	shared/GLee.h	7785;"	d
GL_DRAW_BUFFER9	include/GL/glext.h	409;"	d
GL_DRAW_BUFFER9	shared/GLee.h	1637;"	d
GL_DRAW_BUFFER9_ARB	include/GL/glext.h	1327;"	d
GL_DRAW_BUFFER9_ARB	shared/GLee.h	3221;"	d
GL_DRAW_BUFFER9_ATI	include/GL/glext.h	3578;"	d
GL_DRAW_BUFFER9_ATI	shared/GLee.h	7786;"	d
GL_DRAW_FRAMEBUFFER	include/GL/glext.h	1422;"	d
GL_DRAW_FRAMEBUFFER_BINDING	include/GL/glext.h	1419;"	d
GL_DRAW_FRAMEBUFFER_BINDING_EXT	include/GL/glext.h	3827;"	d
GL_DRAW_FRAMEBUFFER_BINDING_EXT	shared/GLee.h	8959;"	d
GL_DRAW_FRAMEBUFFER_EXT	include/GL/glext.h	3826;"	d
GL_DRAW_FRAMEBUFFER_EXT	shared/GLee.h	8958;"	d
GL_DRAW_PIXELS_APPLE	include/GL/glext.h	3537;"	d
GL_DRAW_PIXELS_APPLE	shared/GLee.h	7675;"	d
GL_DRAW_PIXEL_TOKEN	include/GL/gl.h	405;"	d
GL_DSDT8_MAG8_INTENSITY8_NV	include/GL/glext.h	3037;"	d
GL_DSDT8_MAG8_INTENSITY8_NV	shared/GLee.h	6419;"	d
GL_DSDT8_MAG8_NV	include/GL/glext.h	3036;"	d
GL_DSDT8_MAG8_NV	shared/GLee.h	6418;"	d
GL_DSDT8_NV	include/GL/glext.h	3035;"	d
GL_DSDT8_NV	shared/GLee.h	6417;"	d
GL_DSDT_MAG_INTENSITY_NV	include/GL/glext.h	2991;"	d
GL_DSDT_MAG_INTENSITY_NV	shared/GLee.h	6373;"	d
GL_DSDT_MAG_NV	include/GL/glext.h	3018;"	d
GL_DSDT_MAG_NV	shared/GLee.h	6400;"	d
GL_DSDT_MAG_VIB_NV	include/GL/glext.h	3019;"	d
GL_DSDT_MAG_VIB_NV	shared/GLee.h	6401;"	d
GL_DSDT_NV	include/GL/glext.h	3017;"	d
GL_DSDT_NV	shared/GLee.h	6399;"	d
GL_DST_ALPHA	include/GL/gl.h	383;"	d
GL_DST_COLOR	include/GL/gl.h	385;"	d
GL_DS_BIAS_NV	include/GL/glext.h	3048;"	d
GL_DS_BIAS_NV	shared/GLee.h	6430;"	d
GL_DS_SCALE_NV	include/GL/glext.h	3042;"	d
GL_DS_SCALE_NV	shared/GLee.h	6424;"	d
GL_DT_BIAS_NV	include/GL/glext.h	3049;"	d
GL_DT_BIAS_NV	shared/GLee.h	6431;"	d
GL_DT_SCALE_NV	include/GL/glext.h	3043;"	d
GL_DT_SCALE_NV	shared/GLee.h	6425;"	d
GL_DU8DV8_ATI	include/GL/glext.h	3194;"	d
GL_DU8DV8_ATI	shared/GLee.h	6818;"	d
GL_DUAL_ALPHA12_SGIS	include/GL/glext.h	2077;"	d
GL_DUAL_ALPHA12_SGIS	shared/GLee.h	4084;"	d
GL_DUAL_ALPHA16_SGIS	include/GL/glext.h	2078;"	d
GL_DUAL_ALPHA16_SGIS	shared/GLee.h	4085;"	d
GL_DUAL_ALPHA4_SGIS	include/GL/glext.h	2075;"	d
GL_DUAL_ALPHA4_SGIS	shared/GLee.h	4082;"	d
GL_DUAL_ALPHA8_SGIS	include/GL/glext.h	2076;"	d
GL_DUAL_ALPHA8_SGIS	shared/GLee.h	4083;"	d
GL_DUAL_INTENSITY12_SGIS	include/GL/glext.h	2085;"	d
GL_DUAL_INTENSITY12_SGIS	shared/GLee.h	4092;"	d
GL_DUAL_INTENSITY16_SGIS	include/GL/glext.h	2086;"	d
GL_DUAL_INTENSITY16_SGIS	shared/GLee.h	4093;"	d
GL_DUAL_INTENSITY4_SGIS	include/GL/glext.h	2083;"	d
GL_DUAL_INTENSITY4_SGIS	shared/GLee.h	4090;"	d
GL_DUAL_INTENSITY8_SGIS	include/GL/glext.h	2084;"	d
GL_DUAL_INTENSITY8_SGIS	shared/GLee.h	4091;"	d
GL_DUAL_LUMINANCE12_SGIS	include/GL/glext.h	2081;"	d
GL_DUAL_LUMINANCE12_SGIS	shared/GLee.h	4088;"	d
GL_DUAL_LUMINANCE16_SGIS	include/GL/glext.h	2082;"	d
GL_DUAL_LUMINANCE16_SGIS	shared/GLee.h	4089;"	d
GL_DUAL_LUMINANCE4_SGIS	include/GL/glext.h	2079;"	d
GL_DUAL_LUMINANCE4_SGIS	shared/GLee.h	4086;"	d
GL_DUAL_LUMINANCE8_SGIS	include/GL/glext.h	2080;"	d
GL_DUAL_LUMINANCE8_SGIS	shared/GLee.h	4087;"	d
GL_DUAL_LUMINANCE_ALPHA4_SGIS	include/GL/glext.h	2087;"	d
GL_DUAL_LUMINANCE_ALPHA4_SGIS	shared/GLee.h	4094;"	d
GL_DUAL_LUMINANCE_ALPHA8_SGIS	include/GL/glext.h	2088;"	d
GL_DUAL_LUMINANCE_ALPHA8_SGIS	shared/GLee.h	4095;"	d
GL_DUAL_TEXTURE_SELECT_SGIS	include/GL/glext.h	2095;"	d
GL_DUAL_TEXTURE_SELECT_SGIS	shared/GLee.h	4102;"	d
GL_DUDV_ATI	include/GL/glext.h	3193;"	d
GL_DUDV_ATI	shared/GLee.h	6817;"	d
GL_DYNAMIC_ATI	include/GL/glext.h	3320;"	d
GL_DYNAMIC_ATI	shared/GLee.h	7019;"	d
GL_DYNAMIC_COPY	include/GL/glext.h	356;"	d
GL_DYNAMIC_COPY	shared/GLee.h	1533;"	d
GL_DYNAMIC_COPY_ARB	include/GL/glext.h	1237;"	d
GL_DYNAMIC_COPY_ARB	shared/GLee.h	2903;"	d
GL_DYNAMIC_DRAW	include/GL/glext.h	354;"	d
GL_DYNAMIC_DRAW	shared/GLee.h	1531;"	d
GL_DYNAMIC_DRAW_ARB	include/GL/glext.h	1235;"	d
GL_DYNAMIC_DRAW_ARB	shared/GLee.h	2901;"	d
GL_DYNAMIC_READ	include/GL/glext.h	355;"	d
GL_DYNAMIC_READ	shared/GLee.h	1532;"	d
GL_DYNAMIC_READ_ARB	include/GL/glext.h	1236;"	d
GL_DYNAMIC_READ_ARB	shared/GLee.h	2902;"	d
GL_EDGEFLAG_BIT_PGI	include/GL/glext.h	2227;"	d
GL_EDGEFLAG_BIT_PGI	shared/GLee.h	4435;"	d
GL_EDGE_FLAG	include/GL/gl.h	278;"	d
GL_EDGE_FLAG_ARRAY	include/GL/gl.h	210;"	d
GL_EDGE_FLAG_ARRAY_ADDRESS_NV	include/GL/glext.h	4377;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	include/GL/glext.h	366;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	shared/GLee.h	1514;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	1218;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	shared/GLee.h	2884;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	include/GL/glext.h	1997;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	shared/GLee.h	3914;"	d
GL_EDGE_FLAG_ARRAY_EXT	include/GL/glext.h	1977;"	d
GL_EDGE_FLAG_ARRAY_EXT	shared/GLee.h	3894;"	d
GL_EDGE_FLAG_ARRAY_LENGTH_NV	include/GL/glext.h	4387;"	d
GL_EDGE_FLAG_ARRAY_LIST_IBM	include/GL/glext.h	2816;"	d
GL_EDGE_FLAG_ARRAY_LIST_IBM	shared/GLee.h	5993;"	d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	include/GL/glext.h	2824;"	d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	shared/GLee.h	6001;"	d
GL_EDGE_FLAG_ARRAY_POINTER	include/GL/gl.h	230;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	include/GL/glext.h	2003;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	shared/GLee.h	3920;"	d
GL_EDGE_FLAG_ARRAY_STRIDE	include/GL/gl.h	224;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	include/GL/glext.h	1996;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	shared/GLee.h	3913;"	d
GL_EIGHTH_BIT_ATI	include/GL/glext.h	3299;"	d
GL_EIGHTH_BIT_ATI	shared/GLee.h	6940;"	d
GL_ELEMENT_ARRAY_ADDRESS_NV	include/GL/glext.h	4380;"	d
GL_ELEMENT_ARRAY_APPLE	include/GL/glext.h	3531;"	d
GL_ELEMENT_ARRAY_APPLE	shared/GLee.h	7649;"	d
GL_ELEMENT_ARRAY_ATI	include/GL/glext.h	3456;"	d
GL_ELEMENT_ARRAY_ATI	shared/GLee.h	7467;"	d
GL_ELEMENT_ARRAY_BUFFER	include/GL/glext.h	338;"	d
GL_ELEMENT_ARRAY_BUFFER	shared/GLee.h	1506;"	d
GL_ELEMENT_ARRAY_BUFFER_ARB	include/GL/glext.h	1210;"	d
GL_ELEMENT_ARRAY_BUFFER_ARB	shared/GLee.h	2876;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	include/GL/glext.h	340;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	shared/GLee.h	1508;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	1212;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	shared/GLee.h	2878;"	d
GL_ELEMENT_ARRAY_LENGTH_NV	include/GL/glext.h	4390;"	d
GL_ELEMENT_ARRAY_POINTER_APPLE	include/GL/glext.h	3533;"	d
GL_ELEMENT_ARRAY_POINTER_APPLE	shared/GLee.h	7651;"	d
GL_ELEMENT_ARRAY_POINTER_ATI	include/GL/glext.h	3458;"	d
GL_ELEMENT_ARRAY_POINTER_ATI	shared/GLee.h	7469;"	d
GL_ELEMENT_ARRAY_TYPE_APPLE	include/GL/glext.h	3532;"	d
GL_ELEMENT_ARRAY_TYPE_APPLE	shared/GLee.h	7650;"	d
GL_ELEMENT_ARRAY_TYPE_ATI	include/GL/glext.h	3457;"	d
GL_ELEMENT_ARRAY_TYPE_ATI	shared/GLee.h	7468;"	d
GL_ELEMENT_ARRAY_UNIFIED_NV	include/GL/glext.h	4370;"	d
GL_EMBOSS_CONSTANT_NV	include/GL/glext.h	2775;"	d
GL_EMBOSS_CONSTANT_NV	shared/GLee.h	5831;"	d
GL_EMBOSS_LIGHT_NV	include/GL/glext.h	2774;"	d
GL_EMBOSS_LIGHT_NV	shared/GLee.h	5830;"	d
GL_EMBOSS_MAP_NV	include/GL/glext.h	2776;"	d
GL_EMBOSS_MAP_NV	shared/GLee.h	5832;"	d
GL_EMISSION	include/GL/gl.h	331;"	d
GL_ENABLE_BIT	include/GL/gl.h	718;"	d
GL_ENV_ADD_EXT	shared/GLee.h	9214;"	d
GL_ENV_BLEND_EXT	shared/GLee.h	9217;"	d
GL_ENV_COPY_EXT	shared/GLee.h	9211;"	d
GL_ENV_MODULATE_EXT	shared/GLee.h	9213;"	d
GL_ENV_REPLACE_EXT	shared/GLee.h	9212;"	d
GL_ENV_REVERSE_BLEND_EXT	shared/GLee.h	9218;"	d
GL_ENV_REVERSE_SUBTRACT_EXT	shared/GLee.h	9216;"	d
GL_ENV_SUBTRACT_EXT	shared/GLee.h	9215;"	d
GL_EQUAL	include/GL/gl.h	298;"	d
GL_EQUIV	include/GL/gl.h	444;"	d
GL_EVAL_2D_NV	include/GL/glext.h	2939;"	d
GL_EVAL_2D_NV	shared/GLee.h	6263;"	d
GL_EVAL_BIT	include/GL/gl.h	721;"	d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	include/GL/glext.h	2944;"	d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	shared/GLee.h	6268;"	d
GL_EVAL_TRIANGULAR_2D_NV	include/GL/glext.h	2940;"	d
GL_EVAL_TRIANGULAR_2D_NV	shared/GLee.h	6264;"	d
GL_EVAL_VERTEX_ATTRIB0_NV	include/GL/glext.h	2945;"	d
GL_EVAL_VERTEX_ATTRIB0_NV	shared/GLee.h	6269;"	d
GL_EVAL_VERTEX_ATTRIB10_NV	include/GL/glext.h	2955;"	d
GL_EVAL_VERTEX_ATTRIB10_NV	shared/GLee.h	6279;"	d
GL_EVAL_VERTEX_ATTRIB11_NV	include/GL/glext.h	2956;"	d
GL_EVAL_VERTEX_ATTRIB11_NV	shared/GLee.h	6280;"	d
GL_EVAL_VERTEX_ATTRIB12_NV	include/GL/glext.h	2957;"	d
GL_EVAL_VERTEX_ATTRIB12_NV	shared/GLee.h	6281;"	d
GL_EVAL_VERTEX_ATTRIB13_NV	include/GL/glext.h	2958;"	d
GL_EVAL_VERTEX_ATTRIB13_NV	shared/GLee.h	6282;"	d
GL_EVAL_VERTEX_ATTRIB14_NV	include/GL/glext.h	2959;"	d
GL_EVAL_VERTEX_ATTRIB14_NV	shared/GLee.h	6283;"	d
GL_EVAL_VERTEX_ATTRIB15_NV	include/GL/glext.h	2960;"	d
GL_EVAL_VERTEX_ATTRIB15_NV	shared/GLee.h	6284;"	d
GL_EVAL_VERTEX_ATTRIB1_NV	include/GL/glext.h	2946;"	d
GL_EVAL_VERTEX_ATTRIB1_NV	shared/GLee.h	6270;"	d
GL_EVAL_VERTEX_ATTRIB2_NV	include/GL/glext.h	2947;"	d
GL_EVAL_VERTEX_ATTRIB2_NV	shared/GLee.h	6271;"	d
GL_EVAL_VERTEX_ATTRIB3_NV	include/GL/glext.h	2948;"	d
GL_EVAL_VERTEX_ATTRIB3_NV	shared/GLee.h	6272;"	d
GL_EVAL_VERTEX_ATTRIB4_NV	include/GL/glext.h	2949;"	d
GL_EVAL_VERTEX_ATTRIB4_NV	shared/GLee.h	6273;"	d
GL_EVAL_VERTEX_ATTRIB5_NV	include/GL/glext.h	2950;"	d
GL_EVAL_VERTEX_ATTRIB5_NV	shared/GLee.h	6274;"	d
GL_EVAL_VERTEX_ATTRIB6_NV	include/GL/glext.h	2951;"	d
GL_EVAL_VERTEX_ATTRIB6_NV	shared/GLee.h	6275;"	d
GL_EVAL_VERTEX_ATTRIB7_NV	include/GL/glext.h	2952;"	d
GL_EVAL_VERTEX_ATTRIB7_NV	shared/GLee.h	6276;"	d
GL_EVAL_VERTEX_ATTRIB8_NV	include/GL/glext.h	2953;"	d
GL_EVAL_VERTEX_ATTRIB8_NV	shared/GLee.h	6277;"	d
GL_EVAL_VERTEX_ATTRIB9_NV	include/GL/glext.h	2954;"	d
GL_EVAL_VERTEX_ATTRIB9_NV	shared/GLee.h	6278;"	d
GL_EXP	include/GL/gl.h	425;"	d
GL_EXP2	include/GL/gl.h	426;"	d
GL_EXPAND_NEGATE_NV	include/GL/glext.h	2728;"	d
GL_EXPAND_NEGATE_NV	shared/GLee.h	5741;"	d
GL_EXPAND_NORMAL_NV	include/GL/glext.h	2727;"	d
GL_EXPAND_NORMAL_NV	shared/GLee.h	5740;"	d
GL_EXTENSIONS	include/GL/gl.h	693;"	d
GL_EXT_422_pixels	include/GL/glext.h	7113;"	d
GL_EXT_422_pixels	shared/GLee.h	5579;"	d
GL_EXT_Cg_shader	shared/GLee.h	8385;"	d
GL_EXT_abgr	include/GL/glext.h	6045;"	d
GL_EXT_abgr	shared/GLee.h	3313;"	d
GL_EXT_bgra	include/GL/glext.h	6731;"	d
GL_EXT_bgra	shared/GLee.h	4868;"	d
GL_EXT_bindable_uniform	include/GL/glext.h	8701;"	d
GL_EXT_bindable_uniform	shared/GLee.h	8602;"	d
GL_EXT_blend_color	include/GL/glext.h	6049;"	d
GL_EXT_blend_color	shared/GLee.h	3322;"	d
GL_EXT_blend_equation_separate	include/GL/glext.h	8283;"	d
GL_EXT_blend_equation_separate	shared/GLee.h	8180;"	d
GL_EXT_blend_func_separate	include/GL/glext.h	7085;"	d
GL_EXT_blend_func_separate	shared/GLee.h	5529;"	d
GL_EXT_blend_logic_op	include/GL/glext.h	6361;"	d
GL_EXT_blend_logic_op	shared/GLee.h	4046;"	d
GL_EXT_blend_minmax	include/GL/glext.h	6349;"	d
GL_EXT_blend_minmax	shared/GLee.h	4021;"	d
GL_EXT_blend_subtract	include/GL/glext.h	6357;"	d
GL_EXT_blend_subtract	shared/GLee.h	4036;"	d
GL_EXT_clip_volume_hint	include/GL/glext.h	6563;"	d
GL_EXT_clip_volume_hint	shared/GLee.h	4514;"	d
GL_EXT_cmyka	include/GL/glext.h	6237;"	d
GL_EXT_cmyka	shared/GLee.h	3739;"	d
GL_EXT_color_matrix	shared/GLee.h	8981;"	d
GL_EXT_color_subtable	include/GL/glext.h	6527;"	d
GL_EXT_color_subtable	shared/GLee.h	4412;"	d
GL_EXT_compiled_vertex_array	include/GL/glext.h	6625;"	d
GL_EXT_compiled_vertex_array	shared/GLee.h	4640;"	d
GL_EXT_convolution	include/GL/glext.h	6141;"	d
GL_EXT_convolution	shared/GLee.h	3531;"	d
GL_EXT_coordinate_frame	include/GL/glext.h	6883;"	d
GL_EXT_coordinate_frame	shared/GLee.h	5163;"	d
GL_EXT_copy_texture	include/GL/glext.h	6099;"	d
GL_EXT_copy_texture	shared/GLee.h	3456;"	d
GL_EXT_cull_vertex	include/GL/glext.h	6635;"	d
GL_EXT_cull_vertex	shared/GLee.h	4656;"	d
GL_EXT_depth_bounds_test	include/GL/glext.h	8271;"	d
GL_EXT_depth_bounds_test	shared/GLee.h	8156;"	d
GL_EXT_direct_state_access	include/GL/glext.h	8787;"	d
GL_EXT_draw_buffers2	include/GL/glext.h	8655;"	d
GL_EXT_draw_buffers2	shared/GLee.h	9027;"	d
GL_EXT_draw_instanced	include/GL/glext.h	8573;"	d
GL_EXT_draw_instanced	shared/GLee.h	9070;"	d
GL_EXT_draw_range_elements	include/GL/glext.h	6699;"	d
GL_EXT_draw_range_elements	shared/GLee.h	4785;"	d
GL_EXT_fog_coord	include/GL/glext.h	6863;"	d
GL_EXT_fog_coord	shared/GLee.h	5122;"	d
GL_EXT_fragment_lighting	shared/GLee.h	9084;"	d
GL_EXT_framebuffer_blit	include/GL/glext.h	8383;"	d
GL_EXT_framebuffer_blit	shared/GLee.h	8954;"	d
GL_EXT_framebuffer_multisample	include/GL/glext.h	8391;"	d
GL_EXT_framebuffer_multisample	shared/GLee.h	8940;"	d
GL_EXT_framebuffer_object	include/GL/glext.h	8319;"	d
GL_EXT_framebuffer_object	shared/GLee.h	8262;"	d
GL_EXT_framebuffer_sRGB	include/GL/glext.h	8635;"	d
GL_EXT_framebuffer_sRGB	shared/GLee.h	8625;"	d
GL_EXT_geometry_shader4	include/GL/glext.h	8485;"	d
GL_EXT_geometry_shader4	shared/GLee.h	8562;"	d
GL_EXT_gpu_program_parameters	include/GL/glext.h	8413;"	d
GL_EXT_gpu_shader4	include/GL/glext.h	8545;"	d
GL_EXT_gpu_shader4	shared/GLee.h	8426;"	d
GL_EXT_histogram	include/GL/glext.h	6115;"	d
GL_EXT_histogram	shared/GLee.h	3479;"	d
GL_EXT_index_array_formats	include/GL/glext.h	6621;"	d
GL_EXT_index_array_formats	shared/GLee.h	4624;"	d
GL_EXT_index_func	include/GL/glext.h	6613;"	d
GL_EXT_index_func	shared/GLee.h	4610;"	d
GL_EXT_index_material	include/GL/glext.h	6605;"	d
GL_EXT_index_material	shared/GLee.h	4596;"	d
GL_EXT_index_texture	include/GL/glext.h	6601;"	d
GL_EXT_index_texture	shared/GLee.h	4588;"	d
GL_EXT_light_texture	include/GL/glext.h	6715;"	d
GL_EXT_light_texture	shared/GLee.h	4817;"	d
GL_EXT_misc_attribute	include/GL/glext.h	6325;"	d
GL_EXT_misc_attribute	shared/GLee.h	3953;"	d
GL_EXT_multi_draw_arrays	include/GL/glext.h	6853;"	d
GL_EXT_multi_draw_arrays	shared/GLee.h	5108;"	d
GL_EXT_multisample	include/GL/glext.h	7341;"	d
GL_EXT_multisample	shared/GLee.h	6108;"	d
GL_EXT_packed_depth_stencil	include/GL/glext.h	8367;"	d
GL_EXT_packed_depth_stencil	shared/GLee.h	9160;"	d
GL_EXT_packed_float	include/GL/glext.h	8583;"	d
GL_EXT_packed_float	shared/GLee.h	8646;"	d
GL_EXT_packed_pixels	include/GL/glext.h	6279;"	d
GL_EXT_packed_pixels	shared/GLee.h	3822;"	d
GL_EXT_paletted_texture	include/GL/glext.h	6549;"	d
GL_EXT_paletted_texture	shared/GLee.h	4487;"	d
GL_EXT_pixel_buffer_object	include/GL/glext.h	8299;"	d
GL_EXT_pixel_buffer_object	shared/GLee.h	8213;"	d
GL_EXT_pixel_transform	include/GL/glext.h	6779;"	d
GL_EXT_pixel_transform	shared/GLee.h	4972;"	d
GL_EXT_pixel_transform_color_table	include/GL/glext.h	6793;"	d
GL_EXT_pixel_transform_color_table	shared/GLee.h	5001;"	d
GL_EXT_point_parameters	include/GL/glext.h	6395;"	d
GL_EXT_point_parameters	shared/GLee.h	4145;"	d
GL_EXT_polygon_offset	include/GL/glext.h	6057;"	d
GL_EXT_polygon_offset	shared/GLee.h	3338;"	d
GL_EXT_provoking_vertex	include/GL/glext.h	9251;"	d
GL_EXT_rescale_normal	include/GL/glext.h	6297;"	d
GL_EXT_rescale_normal	shared/GLee.h	3877;"	d
GL_EXT_scene_marker	shared/GLee.h	9172;"	d
GL_EXT_secondary_color	include/GL/glext.h	6805;"	d
GL_EXT_secondary_color	shared/GLee.h	5029;"	d
GL_EXT_separate_shader_objects	include/GL/glext.h	9373;"	d
GL_EXT_separate_specular_color	include/GL/glext.h	6801;"	d
GL_EXT_separate_specular_color	shared/GLee.h	5018;"	d
GL_EXT_shadow_funcs	include/GL/glext.h	7971;"	d
GL_EXT_shadow_funcs	shared/GLee.h	7607;"	d
GL_EXT_shared_texture_palette	include/GL/glext.h	6797;"	d
GL_EXT_shared_texture_palette	shared/GLee.h	5009;"	d
GL_EXT_stencil_clear_tag	include/GL/glext.h	8371;"	d
GL_EXT_stencil_clear_tag	shared/GLee.h	9186;"	d
GL_EXT_stencil_two_side	include/GL/glext.h	7975;"	d
GL_EXT_stencil_two_side	shared/GLee.h	7615;"	d
GL_EXT_stencil_wrap	include/GL/glext.h	7109;"	d
GL_EXT_stencil_wrap	shared/GLee.h	5569;"	d
GL_EXT_subtexture	include/GL/glext.h	6089;"	d
GL_EXT_subtexture	shared/GLee.h	3442;"	d
GL_EXT_texture	include/GL/glext.h	6065;"	d
GL_EXT_texture	shared/GLee.h	3352;"	d
GL_EXT_texture3D	include/GL/glext.h	6069;"	d
GL_EXT_texture3D	shared/GLee.h	3403;"	d
GL_EXT_texture_array	include/GL/glext.h	8587;"	d
GL_EXT_texture_array	shared/GLee.h	8657;"	d
GL_EXT_texture_buffer_object	include/GL/glext.h	8591;"	d
GL_EXT_texture_buffer_object	shared/GLee.h	8410;"	d
GL_EXT_texture_compression_dxt1	shared/GLee.h	9196;"	d
GL_EXT_texture_compression_latc	include/GL/glext.h	8599;"	d
GL_EXT_texture_compression_latc	shared/GLee.h	8767;"	d
GL_EXT_texture_compression_rgtc	include/GL/glext.h	8603;"	d
GL_EXT_texture_compression_rgtc	shared/GLee.h	8969;"	d
GL_EXT_texture_compression_s3tc	shared/GLee.h	5950;"	d
GL_EXT_texture_cube_map	shared/GLee.h	5601;"	d
GL_EXT_texture_env	shared/GLee.h	9206;"	d
GL_EXT_texture_env_add	include/GL/glext.h	7125;"	d
GL_EXT_texture_env_add	shared/GLee.h	5630;"	d
GL_EXT_texture_env_combine	include/GL/glext.h	6933;"	d
GL_EXT_texture_env_combine	shared/GLee.h	5251;"	d
GL_EXT_texture_env_dot3	include/GL/glext.h	7383;"	d
GL_EXT_texture_env_dot3	shared/GLee.h	6199;"	d
GL_EXT_texture_filter_anisotropic	include/GL/glext.h	7133;"	d
GL_EXT_texture_filter_anisotropic	shared/GLee.h	5649;"	d
GL_EXT_texture_integer	include/GL/glext.h	8713;"	d
GL_EXT_texture_integer	shared/GLee.h	8673;"	d
GL_EXT_texture_lod_bias	include/GL/glext.h	7129;"	d
GL_EXT_texture_lod_bias	shared/GLee.h	5638;"	d
GL_EXT_texture_mirror_clamp	include/GL/glext.h	8279;"	d
GL_EXT_texture_mirror_clamp	shared/GLee.h	8169;"	d
GL_EXT_texture_object	include/GL/glext.h	6241;"	d
GL_EXT_texture_object	shared/GLee.h	3751;"	d
GL_EXT_texture_perturb_normal	include/GL/glext.h	6845;"	d
GL_EXT_texture_perturb_normal	shared/GLee.h	5095;"	d
GL_EXT_texture_sRGB	include/GL/glext.h	8379;"	d
GL_EXT_texture_sRGB	shared/GLee.h	9225;"	d
GL_EXT_texture_shared_exponent	include/GL/glext.h	8607;"	d
GL_EXT_texture_shared_exponent	shared/GLee.h	8635;"	d
GL_EXT_texture_snorm	include/GL/glext.h	9259;"	d
GL_EXT_texture_swizzle	include/GL/glext.h	9169;"	d
GL_EXT_timer_query	include/GL/glext.h	8403;"	d
GL_EXT_timer_query	shared/GLee.h	8395;"	d
GL_EXT_transform_feedback	include/GL/glext.h	8767;"	d
GL_EXT_vertex_array	include/GL/glext.h	6301;"	d
GL_EXT_vertex_array	shared/GLee.h	3886;"	d
GL_EXT_vertex_array_bgra	include/GL/glext.h	9165;"	d
GL_EXT_vertex_shader	include/GL/glext.h	7715;"	d
GL_EXT_vertex_shader	shared/GLee.h	7067;"	d
GL_EXT_vertex_weighting	include/GL/glext.h	7137;"	d
GL_EXT_vertex_weighting	shared/GLee.h	5659;"	d
GL_EYE_DISTANCE_TO_LINE_SGIS	include/GL/glext.h	2906;"	d
GL_EYE_DISTANCE_TO_LINE_SGIS	shared/GLee.h	6176;"	d
GL_EYE_DISTANCE_TO_POINT_SGIS	include/GL/glext.h	2904;"	d
GL_EYE_DISTANCE_TO_POINT_SGIS	shared/GLee.h	6174;"	d
GL_EYE_LINEAR	include/GL/gl.h	674;"	d
GL_EYE_LINE_SGIS	include/GL/glext.h	2910;"	d
GL_EYE_LINE_SGIS	shared/GLee.h	6180;"	d
GL_EYE_PLANE	include/GL/gl.h	675;"	d
GL_EYE_PLANE_ABSOLUTE_NV	include/GL/glext.h	2769;"	d
GL_EYE_PLANE_ABSOLUTE_NV	shared/GLee.h	5821;"	d
GL_EYE_POINT_SGIS	include/GL/glext.h	2908;"	d
GL_EYE_POINT_SGIS	shared/GLee.h	6178;"	d
GL_EYE_RADIAL_NV	include/GL/glext.h	2768;"	d
GL_EYE_RADIAL_NV	shared/GLee.h	5820;"	d
GL_E_TIMES_F_NV	include/GL/glext.h	2723;"	d
GL_E_TIMES_F_NV	shared/GLee.h	5736;"	d
GL_FAILURE_NV	include/GL/glext.h	4337;"	d
GL_FALSE	include/GL/gl.h	176;"	d
GL_FASTEST	include/GL/gl.h	587;"	d
GL_FEEDBACK	include/GL/gl.h	390;"	d
GL_FEEDBACK_BUFFER_POINTER	include/GL/gl.h	408;"	d
GL_FEEDBACK_BUFFER_SIZE	include/GL/gl.h	409;"	d
GL_FEEDBACK_BUFFER_TYPE	include/GL/gl.h	410;"	d
GL_FENCE_APPLE	include/GL/glext.h	3538;"	d
GL_FENCE_APPLE	shared/GLee.h	7676;"	d
GL_FENCE_CONDITION_NV	include/GL/glext.h	2931;"	d
GL_FENCE_CONDITION_NV	shared/GLee.h	6224;"	d
GL_FENCE_STATUS_NV	include/GL/glext.h	2930;"	d
GL_FENCE_STATUS_NV	shared/GLee.h	6223;"	d
GL_FIELDS_NV	include/GL/glext.h	4127;"	d
GL_FIELD_LOWER_NV	include/GL/glext.h	4324;"	d
GL_FIELD_UPPER_NV	include/GL/glext.h	4323;"	d
GL_FILL	include/GL/gl.h	270;"	d
GL_FILTER4_SGIS	include/GL/glext.h	1787;"	d
GL_FILTER4_SGIS	shared/GLee.h	3429;"	d
GL_FIRST_VERTEX_CONVENTION	include/GL/glext.h	1628;"	d
GL_FIRST_VERTEX_CONVENTION_EXT	include/GL/glext.h	4221;"	d
GL_FIXED_ONLY	include/GL/glext.h	534;"	d
GL_FIXED_ONLY_ARB	include/GL/glext.h	1348;"	d
GL_FIXED_ONLY_ARB	shared/GLee.h	3255;"	d
GL_FLAT	include/GL/gl.h	341;"	d
GL_FLOAT	include/GL/gl.h	186;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	include/GL/glext.h	1388;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV	include/GL/glext.h	3995;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV	shared/GLee.h	8751;"	d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	include/GL/glext.h	3627;"	d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	shared/GLee.h	7858;"	d
GL_FLOAT_MAT2	include/GL/glext.h	438;"	d
GL_FLOAT_MAT2	shared/GLee.h	1669;"	d
GL_FLOAT_MAT2_ARB	include/GL/glext.h	1263;"	d
GL_FLOAT_MAT2_ARB	shared/GLee.h	2996;"	d
GL_FLOAT_MAT2x3	include/GL/glext.h	481;"	d
GL_FLOAT_MAT2x3	shared/GLee.h	2001;"	d
GL_FLOAT_MAT2x4	include/GL/glext.h	482;"	d
GL_FLOAT_MAT2x4	shared/GLee.h	2002;"	d
GL_FLOAT_MAT3	include/GL/glext.h	439;"	d
GL_FLOAT_MAT3	shared/GLee.h	1670;"	d
GL_FLOAT_MAT3_ARB	include/GL/glext.h	1264;"	d
GL_FLOAT_MAT3_ARB	shared/GLee.h	2997;"	d
GL_FLOAT_MAT3x2	include/GL/glext.h	483;"	d
GL_FLOAT_MAT3x2	shared/GLee.h	2003;"	d
GL_FLOAT_MAT3x4	include/GL/glext.h	484;"	d
GL_FLOAT_MAT3x4	shared/GLee.h	2004;"	d
GL_FLOAT_MAT4	include/GL/glext.h	440;"	d
GL_FLOAT_MAT4	shared/GLee.h	1671;"	d
GL_FLOAT_MAT4_ARB	include/GL/glext.h	1265;"	d
GL_FLOAT_MAT4_ARB	shared/GLee.h	2998;"	d
GL_FLOAT_MAT4x2	include/GL/glext.h	485;"	d
GL_FLOAT_MAT4x2	shared/GLee.h	2005;"	d
GL_FLOAT_MAT4x3	include/GL/glext.h	486;"	d
GL_FLOAT_MAT4x3	shared/GLee.h	2006;"	d
GL_FLOAT_MAX	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^const float GL_FLOAT_MAX = 1.8e+19; \/\/ sqrt (FLT_MAX)$/;"	m	namespace:__anon9
GL_FLOAT_MAX	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^const float GL_FLOAT_MAX = 1.8e+19; \/\/ sqrt (FLT_MAX)$/;"	m	namespace:__anon7
GL_FLOAT_R16_NV	include/GL/glext.h	3618;"	d
GL_FLOAT_R16_NV	shared/GLee.h	7849;"	d
GL_FLOAT_R32_NV	include/GL/glext.h	3619;"	d
GL_FLOAT_R32_NV	shared/GLee.h	7850;"	d
GL_FLOAT_RG16_NV	include/GL/glext.h	3620;"	d
GL_FLOAT_RG16_NV	shared/GLee.h	7851;"	d
GL_FLOAT_RG32_NV	include/GL/glext.h	3621;"	d
GL_FLOAT_RG32_NV	shared/GLee.h	7852;"	d
GL_FLOAT_RGB16_NV	include/GL/glext.h	3622;"	d
GL_FLOAT_RGB16_NV	shared/GLee.h	7853;"	d
GL_FLOAT_RGB32_NV	include/GL/glext.h	3623;"	d
GL_FLOAT_RGB32_NV	shared/GLee.h	7854;"	d
GL_FLOAT_RGBA16_NV	include/GL/glext.h	3624;"	d
GL_FLOAT_RGBA16_NV	shared/GLee.h	7855;"	d
GL_FLOAT_RGBA32_NV	include/GL/glext.h	3625;"	d
GL_FLOAT_RGBA32_NV	shared/GLee.h	7856;"	d
GL_FLOAT_RGBA_MODE_NV	include/GL/glext.h	3628;"	d
GL_FLOAT_RGBA_MODE_NV	shared/GLee.h	7859;"	d
GL_FLOAT_RGBA_NV	include/GL/glext.h	3617;"	d
GL_FLOAT_RGBA_NV	shared/GLee.h	7848;"	d
GL_FLOAT_RGB_NV	include/GL/glext.h	3616;"	d
GL_FLOAT_RGB_NV	shared/GLee.h	7847;"	d
GL_FLOAT_RG_NV	include/GL/glext.h	3615;"	d
GL_FLOAT_RG_NV	shared/GLee.h	7846;"	d
GL_FLOAT_R_NV	include/GL/glext.h	3614;"	d
GL_FLOAT_R_NV	shared/GLee.h	7845;"	d
GL_FLOAT_VEC2	include/GL/glext.h	428;"	d
GL_FLOAT_VEC2	shared/GLee.h	1659;"	d
GL_FLOAT_VEC2_ARB	include/GL/glext.h	1253;"	d
GL_FLOAT_VEC2_ARB	shared/GLee.h	2986;"	d
GL_FLOAT_VEC3	include/GL/glext.h	429;"	d
GL_FLOAT_VEC3	shared/GLee.h	1660;"	d
GL_FLOAT_VEC3_ARB	include/GL/glext.h	1254;"	d
GL_FLOAT_VEC3_ARB	shared/GLee.h	2987;"	d
GL_FLOAT_VEC4	include/GL/glext.h	430;"	d
GL_FLOAT_VEC4	shared/GLee.h	1661;"	d
GL_FLOAT_VEC4_ARB	include/GL/glext.h	1255;"	d
GL_FLOAT_VEC4_ARB	shared/GLee.h	2988;"	d
GL_FOG	include/GL/gl.h	417;"	d
GL_FOG_BIT	include/GL/gl.h	712;"	d
GL_FOG_COLOR	include/GL/gl.h	420;"	d
GL_FOG_COORD	include/GL/glext.h	371;"	d
GL_FOG_COORD	shared/GLee.h	1536;"	d
GL_FOG_COORDINATE	include/GL/glext.h	311;"	d
GL_FOG_COORDINATE	shared/GLee.h	1332;"	d
GL_FOG_COORDINATE_ARRAY	include/GL/glext.h	317;"	d
GL_FOG_COORDINATE_ARRAY	shared/GLee.h	1338;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	include/GL/glext.h	368;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	shared/GLee.h	1516;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	1220;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	shared/GLee.h	2886;"	d
GL_FOG_COORDINATE_ARRAY_EXT	include/GL/glext.h	2511;"	d
GL_FOG_COORDINATE_ARRAY_EXT	shared/GLee.h	5132;"	d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	include/GL/glext.h	2817;"	d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	shared/GLee.h	5994;"	d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	include/GL/glext.h	2825;"	d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	shared/GLee.h	6002;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	include/GL/glext.h	316;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	shared/GLee.h	1337;"	d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	include/GL/glext.h	2510;"	d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	shared/GLee.h	5131;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	include/GL/glext.h	315;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	shared/GLee.h	1336;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	include/GL/glext.h	2509;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	shared/GLee.h	5130;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	include/GL/glext.h	314;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	shared/GLee.h	1335;"	d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	include/GL/glext.h	2508;"	d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	shared/GLee.h	5129;"	d
GL_FOG_COORDINATE_EXT	include/GL/glext.h	2505;"	d
GL_FOG_COORDINATE_EXT	shared/GLee.h	5126;"	d
GL_FOG_COORDINATE_SOURCE	include/GL/glext.h	310;"	d
GL_FOG_COORDINATE_SOURCE	shared/GLee.h	1331;"	d
GL_FOG_COORDINATE_SOURCE_EXT	include/GL/glext.h	2504;"	d
GL_FOG_COORDINATE_SOURCE_EXT	shared/GLee.h	5125;"	d
GL_FOG_COORD_ARRAY	include/GL/glext.h	376;"	d
GL_FOG_COORD_ARRAY	shared/GLee.h	1541;"	d
GL_FOG_COORD_ARRAY_ADDRESS_NV	include/GL/glext.h	4379;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	include/GL/glext.h	377;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	shared/GLee.h	1542;"	d
GL_FOG_COORD_ARRAY_LENGTH_NV	include/GL/glext.h	4389;"	d
GL_FOG_COORD_ARRAY_POINTER	include/GL/glext.h	375;"	d
GL_FOG_COORD_ARRAY_POINTER	shared/GLee.h	1540;"	d
GL_FOG_COORD_ARRAY_STRIDE	include/GL/glext.h	374;"	d
GL_FOG_COORD_ARRAY_STRIDE	shared/GLee.h	1539;"	d
GL_FOG_COORD_ARRAY_TYPE	include/GL/glext.h	373;"	d
GL_FOG_COORD_ARRAY_TYPE	shared/GLee.h	1538;"	d
GL_FOG_COORD_SRC	include/GL/glext.h	370;"	d
GL_FOG_COORD_SRC	shared/GLee.h	1535;"	d
GL_FOG_DENSITY	include/GL/gl.h	419;"	d
GL_FOG_DISTANCE_MODE_NV	include/GL/glext.h	2767;"	d
GL_FOG_DISTANCE_MODE_NV	shared/GLee.h	5819;"	d
GL_FOG_END	include/GL/gl.h	423;"	d
GL_FOG_FUNC_POINTS_SGIS	include/GL/glext.h	2176;"	d
GL_FOG_FUNC_POINTS_SGIS	shared/GLee.h	4319;"	d
GL_FOG_FUNC_SGIS	include/GL/glext.h	2175;"	d
GL_FOG_FUNC_SGIS	shared/GLee.h	4318;"	d
GL_FOG_HINT	include/GL/gl.h	585;"	d
GL_FOG_INDEX	include/GL/gl.h	421;"	d
GL_FOG_MODE	include/GL/gl.h	418;"	d
GL_FOG_OFFSET_SGIX	include/GL/glext.h	2181;"	d
GL_FOG_OFFSET_SGIX	shared/GLee.h	4335;"	d
GL_FOG_OFFSET_VALUE_SGIX	include/GL/glext.h	2182;"	d
GL_FOG_OFFSET_VALUE_SGIX	shared/GLee.h	4336;"	d
GL_FOG_SCALE_SGIX	include/GL/glext.h	2569;"	d
GL_FOG_SCALE_SGIX	shared/GLee.h	5301;"	d
GL_FOG_SCALE_VALUE_SGIX	include/GL/glext.h	2570;"	d
GL_FOG_SCALE_VALUE_SGIX	shared/GLee.h	5302;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	include/GL/glext.h	2390;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	shared/GLee.h	4811;"	d
GL_FOG_START	include/GL/gl.h	422;"	d
GL_FORCE_BLUE_TO_ONE_NV	include/GL/glext.h	3508;"	d
GL_FORCE_BLUE_TO_ONE_NV	shared/GLee.h	7593;"	d
GL_FORMAT_SUBSAMPLE_244_244_OML	include/GL/glext.h	3171;"	d
GL_FORMAT_SUBSAMPLE_244_244_OML	shared/GLee.h	6780;"	d
GL_FORMAT_SUBSAMPLE_24_24_OML	include/GL/glext.h	3170;"	d
GL_FORMAT_SUBSAMPLE_24_24_OML	shared/GLee.h	6779;"	d
GL_FRAGMENT_COLOR_EXT	include/GL/glext.h	2396;"	d
GL_FRAGMENT_COLOR_EXT	shared/GLee.h	4822;"	d
GL_FRAGMENT_COLOR_MATERIAL_EXT	shared/GLee.h	9088;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_EXT	shared/GLee.h	9089;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX	include/GL/glext.h	2349;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX	shared/GLee.h	4688;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_EXT	shared/GLee.h	9090;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX	include/GL/glext.h	2350;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX	shared/GLee.h	4689;"	d
GL_FRAGMENT_COLOR_MATERIAL_SGIX	include/GL/glext.h	2348;"	d
GL_FRAGMENT_COLOR_MATERIAL_SGIX	shared/GLee.h	4687;"	d
GL_FRAGMENT_DEPTH	include/GL/glext.h	312;"	d
GL_FRAGMENT_DEPTH	shared/GLee.h	1333;"	d
GL_FRAGMENT_DEPTH_EXT	include/GL/glext.h	2506;"	d
GL_FRAGMENT_DEPTH_EXT	shared/GLee.h	5127;"	d
GL_FRAGMENT_LIGHT0_EXT	shared/GLee.h	9099;"	d
GL_FRAGMENT_LIGHT0_SGIX	include/GL/glext.h	2359;"	d
GL_FRAGMENT_LIGHT0_SGIX	shared/GLee.h	4698;"	d
GL_FRAGMENT_LIGHT1_SGIX	include/GL/glext.h	2360;"	d
GL_FRAGMENT_LIGHT1_SGIX	shared/GLee.h	4699;"	d
GL_FRAGMENT_LIGHT2_SGIX	include/GL/glext.h	2361;"	d
GL_FRAGMENT_LIGHT2_SGIX	shared/GLee.h	4700;"	d
GL_FRAGMENT_LIGHT3_SGIX	include/GL/glext.h	2362;"	d
GL_FRAGMENT_LIGHT3_SGIX	shared/GLee.h	4701;"	d
GL_FRAGMENT_LIGHT4_SGIX	include/GL/glext.h	2363;"	d
GL_FRAGMENT_LIGHT4_SGIX	shared/GLee.h	4702;"	d
GL_FRAGMENT_LIGHT5_SGIX	include/GL/glext.h	2364;"	d
GL_FRAGMENT_LIGHT5_SGIX	shared/GLee.h	4703;"	d
GL_FRAGMENT_LIGHT6_SGIX	include/GL/glext.h	2365;"	d
GL_FRAGMENT_LIGHT6_SGIX	shared/GLee.h	4704;"	d
GL_FRAGMENT_LIGHT7_EXT	shared/GLee.h	9100;"	d
GL_FRAGMENT_LIGHT7_SGIX	include/GL/glext.h	2366;"	d
GL_FRAGMENT_LIGHT7_SGIX	shared/GLee.h	4705;"	d
GL_FRAGMENT_LIGHTING_EXT	shared/GLee.h	9087;"	d
GL_FRAGMENT_LIGHTING_SGIX	include/GL/glext.h	2347;"	d
GL_FRAGMENT_LIGHTING_SGIX	shared/GLee.h	4686;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_EXT	shared/GLee.h	9097;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX	include/GL/glext.h	2357;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX	shared/GLee.h	4696;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_EXT	shared/GLee.h	9095;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX	include/GL/glext.h	2355;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX	shared/GLee.h	4694;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_EXT	shared/GLee.h	9098;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX	include/GL/glext.h	2358;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX	shared/GLee.h	4697;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_EXT	shared/GLee.h	9096;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX	include/GL/glext.h	2356;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX	shared/GLee.h	4695;"	d
GL_FRAGMENT_MATERIAL_EXT	include/GL/glext.h	2394;"	d
GL_FRAGMENT_MATERIAL_EXT	shared/GLee.h	4820;"	d
GL_FRAGMENT_NORMAL_EXT	include/GL/glext.h	2395;"	d
GL_FRAGMENT_NORMAL_EXT	shared/GLee.h	4821;"	d
GL_FRAGMENT_PROGRAM_ARB	include/GL/glext.h	1189;"	d
GL_FRAGMENT_PROGRAM_ARB	shared/GLee.h	2850;"	d
GL_FRAGMENT_PROGRAM_BINDING_NV	include/GL/glext.h	3636;"	d
GL_FRAGMENT_PROGRAM_BINDING_NV	shared/GLee.h	7872;"	d
GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA	include/GL/gl.h	2137;"	d
GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA	include/GL/gl.h	2136;"	d
GL_FRAGMENT_PROGRAM_CALLBACK_MESA	include/GL/gl.h	2135;"	d
GL_FRAGMENT_PROGRAM_NV	include/GL/glext.h	3633;"	d
GL_FRAGMENT_PROGRAM_NV	shared/GLee.h	7869;"	d
GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV	include/GL/glext.h	4022;"	d
GL_FRAGMENT_PROGRAM_POSITION_MESA	include/GL/gl.h	2134;"	d
GL_FRAGMENT_SHADER	include/GL/glext.h	420;"	d
GL_FRAGMENT_SHADER	shared/GLee.h	1651;"	d
GL_FRAGMENT_SHADER_ARB	include/GL/glext.h	1296;"	d
GL_FRAGMENT_SHADER_ARB	shared/GLee.h	3165;"	d
GL_FRAGMENT_SHADER_ATI	include/GL/glext.h	3200;"	d
GL_FRAGMENT_SHADER_ATI	shared/GLee.h	6841;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	include/GL/glext.h	458;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	shared/GLee.h	1689;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB	include/GL/glext.h	1298;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB	shared/GLee.h	3167;"	d
GL_FRAMEBUFFER	include/GL/glext.h	1455;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	include/GL/glext.h	1401;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	include/GL/glext.h	1400;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	include/GL/glext.h	1396;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	include/GL/glext.h	1397;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	include/GL/glext.h	1402;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	include/GL/glext.h	1399;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	include/GL/glext.h	821;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB	include/GL/glext.h	1491;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT	include/GL/glext.h	3881;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT	shared/GLee.h	8580;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	include/GL/glext.h	1426;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	include/GL/glext.h	3742;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	shared/GLee.h	8270;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	include/GL/glext.h	1425;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	include/GL/glext.h	3741;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	shared/GLee.h	8269;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	include/GL/glext.h	1398;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	include/GL/glext.h	1403;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	include/GL/glext.h	3745;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	shared/GLee.h	8273;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	include/GL/glext.h	1428;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	include/GL/glext.h	3744;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	shared/GLee.h	8272;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	include/GL/glext.h	1429;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT	include/GL/gl.h	2179;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT	include/GL/glext.h	3884;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT	shared/GLee.h	8583;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	include/GL/glext.h	1427;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	include/GL/glext.h	3743;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	shared/GLee.h	8271;"	d
GL_FRAMEBUFFER_BINDING	include/GL/glext.h	1418;"	d
GL_FRAMEBUFFER_BINDING_EXT	include/GL/glext.h	3739;"	d
GL_FRAMEBUFFER_BINDING_EXT	shared/GLee.h	8267;"	d
GL_FRAMEBUFFER_COMPLETE	include/GL/glext.h	1430;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	include/GL/glext.h	3746;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	shared/GLee.h	8274;"	d
GL_FRAMEBUFFER_DEFAULT	include/GL/glext.h	1404;"	d
GL_FRAMEBUFFER_EXT	include/GL/glext.h	3773;"	d
GL_FRAMEBUFFER_EXT	shared/GLee.h	8302;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	include/GL/glext.h	1431;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	include/GL/glext.h	3747;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	shared/GLee.h	8275;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	include/GL/glext.h	3749;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	shared/GLee.h	8278;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	include/GL/glext.h	1433;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	include/GL/glext.h	3751;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	shared/GLee.h	8280;"	d
GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT_EXT	shared/GLee.h	8277;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	include/GL/glext.h	3750;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	shared/GLee.h	8279;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB	include/GL/glext.h	1493;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT	include/GL/glext.h	3883;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT	shared/GLee.h	8582;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	include/GL/glext.h	822;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB	include/GL/glext.h	1492;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT	include/GL/glext.h	3882;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT	shared/GLee.h	8581;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	include/GL/glext.h	1432;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	include/GL/glext.h	3748;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	shared/GLee.h	8276;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	include/GL/glext.h	1470;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	include/GL/glext.h	3833;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	shared/GLee.h	8943;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	include/GL/glext.h	1434;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	include/GL/glext.h	3752;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	shared/GLee.h	8281;"	d
GL_FRAMEBUFFER_SRGB	include/GL/glext.h	1481;"	d
GL_FRAMEBUFFER_SRGB_CAPABLE_EXT	include/GL/glext.h	4011;"	d
GL_FRAMEBUFFER_SRGB_CAPABLE_EXT	shared/GLee.h	8629;"	d
GL_FRAMEBUFFER_SRGB_EXT	include/GL/glext.h	4010;"	d
GL_FRAMEBUFFER_SRGB_EXT	shared/GLee.h	8628;"	d
GL_FRAMEBUFFER_UNDEFINED	include/GL/glext.h	1405;"	d
GL_FRAMEBUFFER_UNSUPPORTED	include/GL/glext.h	1435;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	include/GL/glext.h	3753;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	shared/GLee.h	8282;"	d
GL_FRAMEZOOM_FACTOR_SGIX	include/GL/glext.h	2141;"	d
GL_FRAMEZOOM_FACTOR_SGIX	shared/GLee.h	4225;"	d
GL_FRAMEZOOM_SGIX	include/GL/glext.h	2140;"	d
GL_FRAMEZOOM_SGIX	shared/GLee.h	4224;"	d
GL_FRAME_NV	include/GL/glext.h	4126;"	d
GL_FRONT	include/GL/gl.h	273;"	d
GL_FRONT_AND_BACK	include/GL/gl.h	339;"	d
GL_FRONT_FACE	include/GL/gl.h	281;"	d
GL_FRONT_LEFT	include/GL/gl.h	474;"	d
GL_FRONT_RIGHT	include/GL/gl.h	475;"	d
GL_FULL_RANGE_EXT	include/GL/glext.h	3427;"	d
GL_FULL_RANGE_EXT	shared/GLee.h	7167;"	d
GL_FULL_STIPPLE_HINT_PGI	include/GL/glext.h	2261;"	d
GL_FULL_STIPPLE_HINT_PGI	shared/GLee.h	4474;"	d
GL_FUNC_ADD	include/GL/gl.h	1629;"	d
GL_FUNC_ADD	include/GL/glext.h	108;"	d
GL_FUNC_ADD	shared/GLee.h	997;"	d
GL_FUNC_ADD_EXT	include/GL/glext.h	2045;"	d
GL_FUNC_ADD_EXT	shared/GLee.h	4024;"	d
GL_FUNC_REVERSE_SUBTRACT	include/GL/gl.h	1631;"	d
GL_FUNC_REVERSE_SUBTRACT	include/GL/glext.h	113;"	d
GL_FUNC_REVERSE_SUBTRACT	shared/GLee.h	1002;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	include/GL/glext.h	2053;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	shared/GLee.h	4040;"	d
GL_FUNC_SUBTRACT	include/GL/gl.h	1630;"	d
GL_FUNC_SUBTRACT	include/GL/glext.h	112;"	d
GL_FUNC_SUBTRACT	shared/GLee.h	1001;"	d
GL_FUNC_SUBTRACT_EXT	include/GL/glext.h	2052;"	d
GL_FUNC_SUBTRACT_EXT	shared/GLee.h	4039;"	d
GL_FfdMaskSGIX	shared/GLee.h	4246;"	d
GL_GENERATE_MIPMAP	include/GL/glext.h	308;"	d
GL_GENERATE_MIPMAP	shared/GLee.h	1325;"	d
GL_GENERATE_MIPMAP_HINT	include/GL/glext.h	309;"	d
GL_GENERATE_MIPMAP_HINT	shared/GLee.h	1326;"	d
GL_GENERATE_MIPMAP_HINT_SGIS	include/GL/glext.h	2011;"	d
GL_GENERATE_MIPMAP_HINT_SGIS	shared/GLee.h	3965;"	d
GL_GENERATE_MIPMAP_SGIS	include/GL/glext.h	2010;"	d
GL_GENERATE_MIPMAP_SGIS	shared/GLee.h	3964;"	d
GL_GENERIC_ATTRIB_NV	include/GL/glext.h	4035;"	d
GL_GENERIC_ATTRIB_NV	shared/GLee.h	8788;"	d
GL_GEOMETRY_DEFORMATION_BIT_SGIX	include/GL/glext.h	2150;"	d
GL_GEOMETRY_DEFORMATION_BIT_SGIX	shared/GLee.h	4250;"	d
GL_GEOMETRY_DEFORMATION_SGIX	include/GL/glext.h	2154;"	d
GL_GEOMETRY_DEFORMATION_SGIX	shared/GLee.h	4259;"	d
GL_GEOMETRY_INPUT_TYPE	include/GL/glext.h	825;"	d
GL_GEOMETRY_INPUT_TYPE_ARB	include/GL/glext.h	1496;"	d
GL_GEOMETRY_INPUT_TYPE_EXT	include/GL/glext.h	3878;"	d
GL_GEOMETRY_INPUT_TYPE_EXT	shared/GLee.h	8573;"	d
GL_GEOMETRY_OUTPUT_TYPE	include/GL/glext.h	826;"	d
GL_GEOMETRY_OUTPUT_TYPE_ARB	include/GL/glext.h	1497;"	d
GL_GEOMETRY_OUTPUT_TYPE_EXT	include/GL/glext.h	3879;"	d
GL_GEOMETRY_OUTPUT_TYPE_EXT	shared/GLee.h	8574;"	d
GL_GEOMETRY_PROGRAM_NV	include/GL/glext.h	3874;"	d
GL_GEOMETRY_PROGRAM_NV	shared/GLee.h	8848;"	d
GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV	include/GL/glext.h	4021;"	d
GL_GEOMETRY_SHADER	include/GL/glext.h	823;"	d
GL_GEOMETRY_SHADER_ARB	include/GL/glext.h	1494;"	d
GL_GEOMETRY_SHADER_EXT	include/GL/glext.h	3889;"	d
GL_GEOMETRY_SHADER_EXT	shared/GLee.h	8565;"	d
GL_GEOMETRY_VERTICES_OUT	include/GL/glext.h	824;"	d
GL_GEOMETRY_VERTICES_OUT_ARB	include/GL/glext.h	1495;"	d
GL_GEOMETRY_VERTICES_OUT_EXT	include/GL/glext.h	3877;"	d
GL_GEOMETRY_VERTICES_OUT_EXT	shared/GLee.h	8572;"	d
GL_GEQUAL	include/GL/gl.h	302;"	d
GL_GLEXT_VERSION	include/GL/glext.h	34;"	d
GL_GLOBAL_ALPHA_FACTOR_SUN	include/GL/glext.h	2580;"	d
GL_GLOBAL_ALPHA_FACTOR_SUN	shared/GLee.h	5325;"	d
GL_GLOBAL_ALPHA_SUN	include/GL/glext.h	2579;"	d
GL_GLOBAL_ALPHA_SUN	shared/GLee.h	5324;"	d
GL_GPU_ADDRESS_NV	include/GL/glext.h	4364;"	d
GL_GREATER	include/GL/gl.h	300;"	d
GL_GREEN	include/GL/gl.h	484;"	d
GL_GREEN_BIAS	include/GL/gl.h	602;"	d
GL_GREEN_BITS	include/GL/gl.h	491;"	d
GL_GREEN_BIT_ATI	include/GL/glext.h	3292;"	d
GL_GREEN_BIT_ATI	shared/GLee.h	6933;"	d
GL_GREEN_INTEGER	include/GL/glext.h	575;"	d
GL_GREEN_INTEGER_EXT	include/GL/glext.h	4103;"	d
GL_GREEN_INTEGER_EXT	shared/GLee.h	8713;"	d
GL_GREEN_MAX_CLAMP_INGR	include/GL/glext.h	2619;"	d
GL_GREEN_MAX_CLAMP_INGR	shared/GLee.h	5552;"	d
GL_GREEN_MIN_CLAMP_INGR	include/GL/glext.h	2615;"	d
GL_GREEN_MIN_CLAMP_INGR	shared/GLee.h	5548;"	d
GL_GREEN_SCALE	include/GL/gl.h	601;"	d
GL_GREMEDY_frame_terminator	include/GL/glext.h	8731;"	d
GL_GREMEDY_string_marker	include/GL/glext.h	8359;"	d
GL_GREMEDY_string_marker	shared/GLee.h	8374;"	d
GL_HALF_APPLE	include/GL/glext.h	4267;"	d
GL_HALF_BIAS_NEGATE_NV	include/GL/glext.h	2730;"	d
GL_HALF_BIAS_NEGATE_NV	shared/GLee.h	5743;"	d
GL_HALF_BIAS_NORMAL_NV	include/GL/glext.h	2729;"	d
GL_HALF_BIAS_NORMAL_NV	shared/GLee.h	5742;"	d
GL_HALF_BIT_ATI	include/GL/glext.h	3297;"	d
GL_HALF_BIT_ATI	shared/GLee.h	6938;"	d
GL_HALF_FLOAT	include/GL/glext.h	1508;"	d
GL_HALF_FLOAT_ARB	include/GL/glext.h	1352;"	d
GL_HALF_FLOAT_ARB	shared/GLee.h	3267;"	d
GL_HALF_FLOAT_NV	include/GL/glext.h	3641;"	d
GL_HALF_FLOAT_NV	shared/GLee.h	7900;"	d
GL_HILO16_NV	include/GL/glext.h	3020;"	d
GL_HILO16_NV	shared/GLee.h	6402;"	d
GL_HILO8_NV	include/GL/glext.h	3506;"	d
GL_HILO8_NV	shared/GLee.h	7591;"	d
GL_HILO_NV	include/GL/glext.h	3016;"	d
GL_HILO_NV	shared/GLee.h	6398;"	d
GL_HINT_BIT	include/GL/gl.h	720;"	d
GL_HISTOGRAM	include/GL/gl.h	1612;"	d
GL_HISTOGRAM	include/GL/glext.h	137;"	d
GL_HISTOGRAM	shared/GLee.h	1023;"	d
GL_HISTOGRAM_ALPHA_SIZE	include/GL/gl.h	1619;"	d
GL_HISTOGRAM_ALPHA_SIZE	include/GL/glext.h	144;"	d
GL_HISTOGRAM_ALPHA_SIZE	shared/GLee.h	1030;"	d
GL_HISTOGRAM_ALPHA_SIZE_EXT	include/GL/glext.h	1805;"	d
GL_HISTOGRAM_ALPHA_SIZE_EXT	shared/GLee.h	3489;"	d
GL_HISTOGRAM_BLUE_SIZE	include/GL/gl.h	1618;"	d
GL_HISTOGRAM_BLUE_SIZE	include/GL/glext.h	143;"	d
GL_HISTOGRAM_BLUE_SIZE	shared/GLee.h	1029;"	d
GL_HISTOGRAM_BLUE_SIZE_EXT	include/GL/glext.h	1804;"	d
GL_HISTOGRAM_BLUE_SIZE_EXT	shared/GLee.h	3488;"	d
GL_HISTOGRAM_EXT	include/GL/glext.h	1798;"	d
GL_HISTOGRAM_EXT	shared/GLee.h	3482;"	d
GL_HISTOGRAM_FORMAT	include/GL/gl.h	1615;"	d
GL_HISTOGRAM_FORMAT	include/GL/glext.h	140;"	d
GL_HISTOGRAM_FORMAT	shared/GLee.h	1026;"	d
GL_HISTOGRAM_FORMAT_EXT	include/GL/glext.h	1801;"	d
GL_HISTOGRAM_FORMAT_EXT	shared/GLee.h	3485;"	d
GL_HISTOGRAM_GREEN_SIZE	include/GL/gl.h	1617;"	d
GL_HISTOGRAM_GREEN_SIZE	include/GL/glext.h	142;"	d
GL_HISTOGRAM_GREEN_SIZE	shared/GLee.h	1028;"	d
GL_HISTOGRAM_GREEN_SIZE_EXT	include/GL/glext.h	1803;"	d
GL_HISTOGRAM_GREEN_SIZE_EXT	shared/GLee.h	3487;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	include/GL/gl.h	1620;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	include/GL/glext.h	145;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	shared/GLee.h	1031;"	d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	include/GL/glext.h	1806;"	d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	shared/GLee.h	3490;"	d
GL_HISTOGRAM_RED_SIZE	include/GL/gl.h	1616;"	d
GL_HISTOGRAM_RED_SIZE	include/GL/glext.h	141;"	d
GL_HISTOGRAM_RED_SIZE	shared/GLee.h	1027;"	d
GL_HISTOGRAM_RED_SIZE_EXT	include/GL/glext.h	1802;"	d
GL_HISTOGRAM_RED_SIZE_EXT	shared/GLee.h	3486;"	d
GL_HISTOGRAM_SINK	include/GL/gl.h	1621;"	d
GL_HISTOGRAM_SINK	include/GL/glext.h	146;"	d
GL_HISTOGRAM_SINK	shared/GLee.h	1032;"	d
GL_HISTOGRAM_SINK_EXT	include/GL/glext.h	1807;"	d
GL_HISTOGRAM_SINK_EXT	shared/GLee.h	3491;"	d
GL_HISTOGRAM_WIDTH	include/GL/gl.h	1614;"	d
GL_HISTOGRAM_WIDTH	include/GL/glext.h	139;"	d
GL_HISTOGRAM_WIDTH	shared/GLee.h	1025;"	d
GL_HISTOGRAM_WIDTH_EXT	include/GL/glext.h	1800;"	d
GL_HISTOGRAM_WIDTH_EXT	shared/GLee.h	3484;"	d
GL_HI_BIAS_NV	include/GL/glext.h	3046;"	d
GL_HI_BIAS_NV	shared/GLee.h	6428;"	d
GL_HI_SCALE_NV	include/GL/glext.h	3040;"	d
GL_HI_SCALE_NV	shared/GLee.h	6422;"	d
GL_HP_convolution_border_modes	include/GL/glext.h	6519;"	d
GL_HP_convolution_border_modes	shared/GLee.h	4383;"	d
GL_HP_image_transform	include/GL/glext.h	6501;"	d
GL_HP_image_transform	shared/GLee.h	4342;"	d
GL_HP_occlusion_test	include/GL/glext.h	6775;"	d
GL_HP_occlusion_test	shared/GLee.h	4962;"	d
GL_HP_texture_lighting	include/GL/glext.h	6695;"	d
GL_HP_texture_lighting	shared/GLee.h	4774;"	d
GL_IBM_cull_vertex	include/GL/glext.h	7273;"	d
GL_IBM_cull_vertex	shared/GLee.h	5962;"	d
GL_IBM_multimode_draw_arrays	include/GL/glext.h	7277;"	d
GL_IBM_multimode_draw_arrays	shared/GLee.h	5971;"	d
GL_IBM_rasterpos_clip	include/GL/glext.h	6691;"	d
GL_IBM_rasterpos_clip	shared/GLee.h	4765;"	d
GL_IBM_static_data	shared/GLee.h	9249;"	d
GL_IBM_texture_mirrored_repeat	shared/GLee.h	6251;"	d
GL_IBM_vertex_array_lists	include/GL/glext.h	7287;"	d
GL_IBM_vertex_array_lists	shared/GLee.h	5985;"	d
GL_IDENTITY_NV	include/GL/glext.h	3078;"	d
GL_IDENTITY_NV	shared/GLee.h	6475;"	d
GL_IGNORE_BORDER_HP	include/GL/glext.h	2204;"	d
GL_IGNORE_BORDER_HP	shared/GLee.h	4386;"	d
GL_IMAGE_CUBIC_WEIGHT_HP	include/GL/glext.h	2195;"	d
GL_IMAGE_CUBIC_WEIGHT_HP	shared/GLee.h	4354;"	d
GL_IMAGE_MAG_FILTER_HP	include/GL/glext.h	2193;"	d
GL_IMAGE_MAG_FILTER_HP	shared/GLee.h	4352;"	d
GL_IMAGE_MIN_FILTER_HP	include/GL/glext.h	2194;"	d
GL_IMAGE_MIN_FILTER_HP	shared/GLee.h	4353;"	d
GL_IMAGE_ROTATE_ANGLE_HP	include/GL/glext.h	2190;"	d
GL_IMAGE_ROTATE_ANGLE_HP	shared/GLee.h	4349;"	d
GL_IMAGE_ROTATE_ORIGIN_X_HP	include/GL/glext.h	2191;"	d
GL_IMAGE_ROTATE_ORIGIN_X_HP	shared/GLee.h	4350;"	d
GL_IMAGE_ROTATE_ORIGIN_Y_HP	include/GL/glext.h	2192;"	d
GL_IMAGE_ROTATE_ORIGIN_Y_HP	shared/GLee.h	4351;"	d
GL_IMAGE_SCALE_X_HP	include/GL/glext.h	2186;"	d
GL_IMAGE_SCALE_X_HP	shared/GLee.h	4345;"	d
GL_IMAGE_SCALE_Y_HP	include/GL/glext.h	2187;"	d
GL_IMAGE_SCALE_Y_HP	shared/GLee.h	4346;"	d
GL_IMAGE_TRANSFORM_2D_HP	include/GL/glext.h	2198;"	d
GL_IMAGE_TRANSFORM_2D_HP	shared/GLee.h	4357;"	d
GL_IMAGE_TRANSLATE_X_HP	include/GL/glext.h	2188;"	d
GL_IMAGE_TRANSLATE_X_HP	shared/GLee.h	4347;"	d
GL_IMAGE_TRANSLATE_Y_HP	include/GL/glext.h	2189;"	d
GL_IMAGE_TRANSLATE_Y_HP	shared/GLee.h	4348;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	include/GL/glext.h	3680;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	shared/GLee.h	8150;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	include/GL/glext.h	3679;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	shared/GLee.h	8149;"	d
GL_INCR	include/GL/gl.h	464;"	d
GL_INCR_WRAP	include/GL/glext.h	297;"	d
GL_INCR_WRAP	shared/GLee.h	1349;"	d
GL_INCR_WRAP_EXT	include/GL/glext.h	2629;"	d
GL_INCR_WRAP_EXT	shared/GLee.h	5572;"	d
GL_INDEX	include/GL/glext.h	1475;"	d
GL_INDEX_ARRAY	include/GL/gl.h	208;"	d
GL_INDEX_ARRAY_ADDRESS_NV	include/GL/glext.h	4375;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	include/GL/glext.h	364;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	shared/GLee.h	1512;"	d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	1216;"	d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	shared/GLee.h	2882;"	d
GL_INDEX_ARRAY_COUNT_EXT	include/GL/glext.h	1991;"	d
GL_INDEX_ARRAY_COUNT_EXT	shared/GLee.h	3908;"	d
GL_INDEX_ARRAY_EXT	include/GL/glext.h	1975;"	d
GL_INDEX_ARRAY_EXT	shared/GLee.h	3892;"	d
GL_INDEX_ARRAY_LENGTH_NV	include/GL/glext.h	4385;"	d
GL_INDEX_ARRAY_LIST_IBM	include/GL/glext.h	2814;"	d
GL_INDEX_ARRAY_LIST_IBM	shared/GLee.h	5991;"	d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	include/GL/glext.h	2822;"	d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	shared/GLee.h	5999;"	d
GL_INDEX_ARRAY_POINTER	include/GL/gl.h	228;"	d
GL_INDEX_ARRAY_POINTER_EXT	include/GL/glext.h	2001;"	d
GL_INDEX_ARRAY_POINTER_EXT	shared/GLee.h	3918;"	d
GL_INDEX_ARRAY_STRIDE	include/GL/gl.h	220;"	d
GL_INDEX_ARRAY_STRIDE_EXT	include/GL/glext.h	1990;"	d
GL_INDEX_ARRAY_STRIDE_EXT	shared/GLee.h	3907;"	d
GL_INDEX_ARRAY_TYPE	include/GL/gl.h	219;"	d
GL_INDEX_ARRAY_TYPE_EXT	include/GL/glext.h	1989;"	d
GL_INDEX_ARRAY_TYPE_EXT	shared/GLee.h	3906;"	d
GL_INDEX_BITS	include/GL/gl.h	493;"	d
GL_INDEX_BIT_PGI	include/GL/glext.h	2228;"	d
GL_INDEX_BIT_PGI	shared/GLee.h	4436;"	d
GL_INDEX_CLEAR_VALUE	include/GL/gl.h	538;"	d
GL_INDEX_LOGIC_OP	include/GL/gl.h	430;"	d
GL_INDEX_MATERIAL_EXT	include/GL/glext.h	2308;"	d
GL_INDEX_MATERIAL_EXT	shared/GLee.h	4599;"	d
GL_INDEX_MATERIAL_FACE_EXT	include/GL/glext.h	2310;"	d
GL_INDEX_MATERIAL_FACE_EXT	shared/GLee.h	4601;"	d
GL_INDEX_MATERIAL_PARAMETER_EXT	include/GL/glext.h	2309;"	d
GL_INDEX_MATERIAL_PARAMETER_EXT	shared/GLee.h	4600;"	d
GL_INDEX_MODE	include/GL/gl.h	539;"	d
GL_INDEX_OFFSET	include/GL/gl.h	598;"	d
GL_INDEX_SHIFT	include/GL/gl.h	597;"	d
GL_INDEX_TEST_EXT	include/GL/glext.h	2314;"	d
GL_INDEX_TEST_EXT	shared/GLee.h	4613;"	d
GL_INDEX_TEST_FUNC_EXT	include/GL/glext.h	2315;"	d
GL_INDEX_TEST_FUNC_EXT	shared/GLee.h	4614;"	d
GL_INDEX_TEST_REF_EXT	include/GL/glext.h	2316;"	d
GL_INDEX_TEST_REF_EXT	shared/GLee.h	4615;"	d
GL_INDEX_WRITEMASK	include/GL/gl.h	540;"	d
GL_INFO_LOG_LENGTH	include/GL/glext.h	451;"	d
GL_INFO_LOG_LENGTH	shared/GLee.h	1682;"	d
GL_INGR_blend_func_separate	include/GL/glext.h	7093;"	d
GL_INGR_blend_func_separate	shared/GLee.h	8997;"	d
GL_INGR_color_clamp	include/GL/glext.h	7101;"	d
GL_INGR_color_clamp	shared/GLee.h	5544;"	d
GL_INGR_interlace_read	include/GL/glext.h	7105;"	d
GL_INGR_interlace_read	shared/GLee.h	5560;"	d
GL_INGR_palette_buffer	shared/GLee.h	4395;"	d
GL_INSTRUMENT_BUFFER_POINTER_SGIX	include/GL/glext.h	2128;"	d
GL_INSTRUMENT_BUFFER_POINTER_SGIX	shared/GLee.h	4184;"	d
GL_INSTRUMENT_MEASUREMENTS_SGIX	include/GL/glext.h	2129;"	d
GL_INSTRUMENT_MEASUREMENTS_SGIX	shared/GLee.h	4185;"	d
GL_INT	include/GL/gl.h	184;"	d
GL_INTEL_parallel_arrays	include/GL/glext.h	6761;"	d
GL_INTEL_parallel_arrays	shared/GLee.h	4937;"	d
GL_INTEL_texture_scissor	shared/GLee.h	4929;"	d
GL_INTENSITY	include/GL/gl.h	750;"	d
GL_INTENSITY12	include/GL/gl.h	753;"	d
GL_INTENSITY12_EXT	include/GL/glext.h	1746;"	d
GL_INTENSITY12_EXT	shared/GLee.h	3372;"	d
GL_INTENSITY16	include/GL/gl.h	754;"	d
GL_INTENSITY16F_ARB	include/GL/glext.h	1373;"	d
GL_INTENSITY16F_ARB	shared/GLee.h	3293;"	d
GL_INTENSITY16I_EXT	include/GL/glext.h	4093;"	d
GL_INTENSITY16I_EXT	shared/GLee.h	8703;"	d
GL_INTENSITY16UI_EXT	include/GL/glext.h	4075;"	d
GL_INTENSITY16UI_EXT	shared/GLee.h	8685;"	d
GL_INTENSITY16_EXT	include/GL/glext.h	1747;"	d
GL_INTENSITY16_EXT	shared/GLee.h	3373;"	d
GL_INTENSITY16_EXTENDED_RANGE_SGIX	shared/GLee.h	9359;"	d
GL_INTENSITY16_SIGNED_SGIX	shared/GLee.h	9347;"	d
GL_INTENSITY16_SNORM	include/GL/glext.h	4238;"	d
GL_INTENSITY32F_ARB	include/GL/glext.h	1367;"	d
GL_INTENSITY32F_ARB	shared/GLee.h	3287;"	d
GL_INTENSITY32I_EXT	include/GL/glext.h	4087;"	d
GL_INTENSITY32I_EXT	shared/GLee.h	8697;"	d
GL_INTENSITY32UI_EXT	include/GL/glext.h	4069;"	d
GL_INTENSITY32UI_EXT	shared/GLee.h	8679;"	d
GL_INTENSITY4	include/GL/gl.h	751;"	d
GL_INTENSITY4_EXT	include/GL/glext.h	1744;"	d
GL_INTENSITY4_EXT	shared/GLee.h	3370;"	d
GL_INTENSITY8	include/GL/gl.h	752;"	d
GL_INTENSITY8I_EXT	include/GL/glext.h	4099;"	d
GL_INTENSITY8I_EXT	shared/GLee.h	8709;"	d
GL_INTENSITY8UI_EXT	include/GL/glext.h	4081;"	d
GL_INTENSITY8UI_EXT	shared/GLee.h	8691;"	d
GL_INTENSITY8_EXT	include/GL/glext.h	1745;"	d
GL_INTENSITY8_EXT	shared/GLee.h	3371;"	d
GL_INTENSITY8_SNORM	include/GL/glext.h	4234;"	d
GL_INTENSITY_EXT	include/GL/glext.h	1743;"	d
GL_INTENSITY_EXT	shared/GLee.h	3369;"	d
GL_INTENSITY_EXTENDED_RANGE_SGIX	shared/GLee.h	9353;"	d
GL_INTENSITY_FLOAT16_APPLE	include/GL/glext.h	4277;"	d
GL_INTENSITY_FLOAT16_ATI	include/GL/glext.h	3608;"	d
GL_INTENSITY_FLOAT16_ATI	shared/GLee.h	7834;"	d
GL_INTENSITY_FLOAT32_APPLE	include/GL/glext.h	4271;"	d
GL_INTENSITY_FLOAT32_ATI	include/GL/glext.h	3602;"	d
GL_INTENSITY_FLOAT32_ATI	shared/GLee.h	7828;"	d
GL_INTENSITY_SIGNED_SGIX	shared/GLee.h	9341;"	d
GL_INTENSITY_SNORM	include/GL/glext.h	4230;"	d
GL_INTERLACE_OML	include/GL/glext.h	3165;"	d
GL_INTERLACE_OML	shared/GLee.h	6769;"	d
GL_INTERLACE_READ_INGR	include/GL/glext.h	2625;"	d
GL_INTERLACE_READ_INGR	shared/GLee.h	5563;"	d
GL_INTERLACE_READ_OML	include/GL/glext.h	3166;"	d
GL_INTERLACE_READ_OML	shared/GLee.h	6770;"	d
GL_INTERLACE_SGIX	include/GL/glext.h	2060;"	d
GL_INTERLACE_SGIX	shared/GLee.h	4057;"	d
GL_INTERLEAVED_ATTRIBS	include/GL/glext.h	558;"	d
GL_INTERLEAVED_ATTRIBS_EXT	include/GL/glext.h	4139;"	d
GL_INTERLEAVED_ATTRIBS_NV	include/GL/glext.h	4050;"	d
GL_INTERLEAVED_ATTRIBS_NV	shared/GLee.h	8803;"	d
GL_INTERPOLATE	include/GL/gl.h	1846;"	d
GL_INTERPOLATE	include/GL/glext.h	276;"	d
GL_INTERPOLATE	shared/GLee.h	1164;"	d
GL_INTERPOLATE_ARB	include/GL/glext.h	1066;"	d
GL_INTERPOLATE_ARB	shared/GLee.h	2448;"	d
GL_INTERPOLATE_EXT	include/GL/glext.h	2542;"	d
GL_INTERPOLATE_EXT	shared/GLee.h	5259;"	d
GL_INT_SAMPLER_1D	include/GL/glext.h	589;"	d
GL_INT_SAMPLER_1D_ARRAY	include/GL/glext.h	593;"	d
GL_INT_SAMPLER_1D_ARRAY_EXT	include/GL/glext.h	3930;"	d
GL_INT_SAMPLER_1D_ARRAY_EXT	shared/GLee.h	8443;"	d
GL_INT_SAMPLER_1D_EXT	include/GL/glext.h	3925;"	d
GL_INT_SAMPLER_1D_EXT	shared/GLee.h	8438;"	d
GL_INT_SAMPLER_2D	include/GL/glext.h	590;"	d
GL_INT_SAMPLER_2D_ARRAY	include/GL/glext.h	594;"	d
GL_INT_SAMPLER_2D_ARRAY_EXT	include/GL/glext.h	3931;"	d
GL_INT_SAMPLER_2D_ARRAY_EXT	shared/GLee.h	8444;"	d
GL_INT_SAMPLER_2D_EXT	include/GL/glext.h	3926;"	d
GL_INT_SAMPLER_2D_EXT	shared/GLee.h	8439;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	include/GL/glext.h	1669;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	include/GL/glext.h	1672;"	d
GL_INT_SAMPLER_2D_RECT	include/GL/glext.h	747;"	d
GL_INT_SAMPLER_2D_RECT_EXT	include/GL/glext.h	3929;"	d
GL_INT_SAMPLER_2D_RECT_EXT	shared/GLee.h	8442;"	d
GL_INT_SAMPLER_3D	include/GL/glext.h	591;"	d
GL_INT_SAMPLER_3D_EXT	include/GL/glext.h	3927;"	d
GL_INT_SAMPLER_3D_EXT	shared/GLee.h	8440;"	d
GL_INT_SAMPLER_BUFFER	include/GL/glext.h	748;"	d
GL_INT_SAMPLER_BUFFER_AMD	include/GL/glext.h	4211;"	d
GL_INT_SAMPLER_BUFFER_EXT	include/GL/glext.h	3932;"	d
GL_INT_SAMPLER_BUFFER_EXT	shared/GLee.h	8445;"	d
GL_INT_SAMPLER_CUBE	include/GL/glext.h	592;"	d
GL_INT_SAMPLER_CUBE_EXT	include/GL/glext.h	3928;"	d
GL_INT_SAMPLER_CUBE_EXT	shared/GLee.h	8441;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	include/GL/glext.h	1697;"	d
GL_INT_SAMPLER_RENDERBUFFER_NV	include/GL/glext.h	4178;"	d
GL_INT_VEC2	include/GL/glext.h	431;"	d
GL_INT_VEC2	shared/GLee.h	1662;"	d
GL_INT_VEC2_ARB	include/GL/glext.h	1256;"	d
GL_INT_VEC2_ARB	shared/GLee.h	2989;"	d
GL_INT_VEC3	include/GL/glext.h	432;"	d
GL_INT_VEC3	shared/GLee.h	1663;"	d
GL_INT_VEC3_ARB	include/GL/glext.h	1257;"	d
GL_INT_VEC3_ARB	shared/GLee.h	2990;"	d
GL_INT_VEC4	include/GL/glext.h	433;"	d
GL_INT_VEC4	shared/GLee.h	1664;"	d
GL_INT_VEC4_ARB	include/GL/glext.h	1258;"	d
GL_INT_VEC4_ARB	shared/GLee.h	2991;"	d
GL_INVALID_ENUM	include/GL/gl.h	697;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	include/GL/glext.h	1395;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	include/GL/glext.h	3737;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	shared/GLee.h	8265;"	d
GL_INVALID_INDEX	include/GL/glext.h	1601;"	d
GL_INVALID_OPERATION	include/GL/gl.h	699;"	d
GL_INVALID_VALUE	include/GL/gl.h	698;"	d
GL_INVARIANT_DATATYPE_EXT	include/GL/glext.h	3437;"	d
GL_INVARIANT_DATATYPE_EXT	shared/GLee.h	7177;"	d
GL_INVARIANT_EXT	include/GL/glext.h	3396;"	d
GL_INVARIANT_EXT	shared/GLee.h	7136;"	d
GL_INVARIANT_VALUE_EXT	include/GL/glext.h	3436;"	d
GL_INVARIANT_VALUE_EXT	shared/GLee.h	7176;"	d
GL_INVERSE_NV	include/GL/glext.h	3079;"	d
GL_INVERSE_NV	shared/GLee.h	6476;"	d
GL_INVERSE_TRANSPOSE_NV	include/GL/glext.h	3081;"	d
GL_INVERSE_TRANSPOSE_NV	shared/GLee.h	6478;"	d
GL_INVERT	include/GL/gl.h	438;"	d
GL_INVERTED_SCREEN_W_REND	include/GL/glext.h	2516;"	d
GL_INVERTED_SCREEN_W_REND	shared/GLee.h	5157;"	d
GL_IR_INSTRUMENT1_SGIX	include/GL/glext.h	2287;"	d
GL_IR_INSTRUMENT1_SGIX	shared/GLee.h	4553;"	d
GL_IUI_N3F_V2F_EXT	include/GL/glext.h	2322;"	d
GL_IUI_N3F_V2F_EXT	shared/GLee.h	4629;"	d
GL_IUI_N3F_V3F_EXT	include/GL/glext.h	2323;"	d
GL_IUI_N3F_V3F_EXT	shared/GLee.h	4630;"	d
GL_IUI_V2F_EXT	include/GL/glext.h	2320;"	d
GL_IUI_V2F_EXT	shared/GLee.h	4627;"	d
GL_IUI_V3F_EXT	include/GL/glext.h	2321;"	d
GL_IUI_V3F_EXT	shared/GLee.h	4628;"	d
GL_KEEP	include/GL/gl.h	462;"	d
GL_LAST_VERTEX_CONVENTION	include/GL/glext.h	1629;"	d
GL_LAST_VERTEX_CONVENTION_EXT	include/GL/glext.h	4222;"	d
GL_LAST_VIDEO_CAPTURE_STATUS_NV	include/GL/glext.h	4328;"	d
GL_LEFT	include/GL/gl.h	469;"	d
GL_LEQUAL	include/GL/gl.h	299;"	d
GL_LERP_ATI	include/GL/glext.h	3272;"	d
GL_LERP_ATI	shared/GLee.h	6913;"	d
GL_LESS	include/GL/gl.h	297;"	d
GL_LIGHT0	include/GL/gl.h	314;"	d
GL_LIGHT1	include/GL/gl.h	315;"	d
GL_LIGHT2	include/GL/gl.h	316;"	d
GL_LIGHT3	include/GL/gl.h	317;"	d
GL_LIGHT4	include/GL/gl.h	318;"	d
GL_LIGHT5	include/GL/gl.h	319;"	d
GL_LIGHT6	include/GL/gl.h	320;"	d
GL_LIGHT7	include/GL/gl.h	321;"	d
GL_LIGHTING	include/GL/gl.h	313;"	d
GL_LIGHTING_BIT	include/GL/gl.h	711;"	d
GL_LIGHT_ENV_MODE_EXT	shared/GLee.h	9094;"	d
GL_LIGHT_ENV_MODE_SGIX	include/GL/glext.h	2354;"	d
GL_LIGHT_ENV_MODE_SGIX	shared/GLee.h	4693;"	d
GL_LIGHT_MODEL_AMBIENT	include/GL/gl.h	338;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	include/GL/gl.h	1501;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	include/GL/glext.h	96;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	shared/GLee.h	861;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	include/GL/glext.h	2480;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	shared/GLee.h	5021;"	d
GL_LIGHT_MODEL_LOCAL_VIEWER	include/GL/gl.h	337;"	d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	include/GL/glext.h	2561;"	d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	shared/GLee.h	5283;"	d
GL_LIGHT_MODEL_TWO_SIDE	include/GL/gl.h	336;"	d
GL_LINE	include/GL/gl.h	269;"	d
GL_LINEAR	include/GL/gl.h	424;"	d
GL_LINEAR_ATTENUATION	include/GL/gl.h	325;"	d
GL_LINEAR_CLIPMAP_LINEAR_SGIX	include/GL/glext.h	2015;"	d
GL_LINEAR_CLIPMAP_LINEAR_SGIX	shared/GLee.h	3974;"	d
GL_LINEAR_CLIPMAP_NEAREST_SGIX	include/GL/glext.h	2026;"	d
GL_LINEAR_CLIPMAP_NEAREST_SGIX	shared/GLee.h	3985;"	d
GL_LINEAR_DETAIL_ALPHA_SGIS	include/GL/glext.h	1919;"	d
GL_LINEAR_DETAIL_ALPHA_SGIS	shared/GLee.h	3788;"	d
GL_LINEAR_DETAIL_COLOR_SGIS	include/GL/glext.h	1920;"	d
GL_LINEAR_DETAIL_COLOR_SGIS	shared/GLee.h	3789;"	d
GL_LINEAR_DETAIL_SGIS	include/GL/glext.h	1918;"	d
GL_LINEAR_DETAIL_SGIS	shared/GLee.h	3787;"	d
GL_LINEAR_MIPMAP_LINEAR	include/GL/gl.h	671;"	d
GL_LINEAR_MIPMAP_NEAREST	include/GL/gl.h	670;"	d
GL_LINEAR_SHARPEN_ALPHA_SGIS	include/GL/glext.h	1928;"	d
GL_LINEAR_SHARPEN_ALPHA_SGIS	shared/GLee.h	3808;"	d
GL_LINEAR_SHARPEN_COLOR_SGIS	include/GL/glext.h	1929;"	d
GL_LINEAR_SHARPEN_COLOR_SGIS	shared/GLee.h	3809;"	d
GL_LINEAR_SHARPEN_SGIS	include/GL/glext.h	1927;"	d
GL_LINEAR_SHARPEN_SGIS	shared/GLee.h	3807;"	d
GL_LINES	include/GL/gl.h	194;"	d
GL_LINES_ADJACENCY	include/GL/glext.h	815;"	d
GL_LINES_ADJACENCY_ARB	include/GL/glext.h	1485;"	d
GL_LINES_ADJACENCY_EXT	include/GL/glext.h	3870;"	d
GL_LINES_ADJACENCY_EXT	shared/GLee.h	8576;"	d
GL_LINE_BIT	include/GL/gl.h	707;"	d
GL_LINE_LOOP	include/GL/gl.h	195;"	d
GL_LINE_RESET_TOKEN	include/GL/gl.h	402;"	d
GL_LINE_SMOOTH	include/GL/gl.h	259;"	d
GL_LINE_SMOOTH_HINT	include/GL/gl.h	583;"	d
GL_LINE_STIPPLE	include/GL/gl.h	260;"	d
GL_LINE_STIPPLE_PATTERN	include/GL/gl.h	261;"	d
GL_LINE_STIPPLE_REPEAT	include/GL/gl.h	262;"	d
GL_LINE_STRIP	include/GL/gl.h	196;"	d
GL_LINE_STRIP_ADJACENCY	include/GL/glext.h	816;"	d
GL_LINE_STRIP_ADJACENCY_ARB	include/GL/glext.h	1486;"	d
GL_LINE_STRIP_ADJACENCY_EXT	include/GL/glext.h	3871;"	d
GL_LINE_STRIP_ADJACENCY_EXT	shared/GLee.h	8577;"	d
GL_LINE_TOKEN	include/GL/gl.h	401;"	d
GL_LINE_WIDTH	include/GL/gl.h	263;"	d
GL_LINE_WIDTH_GRANULARITY	include/GL/gl.h	264;"	d
GL_LINE_WIDTH_RANGE	include/GL/gl.h	265;"	d
GL_LINK_STATUS	include/GL/glext.h	449;"	d
GL_LINK_STATUS	shared/GLee.h	1680;"	d
GL_LIST_BASE	include/GL/gl.h	291;"	d
GL_LIST_BIT	include/GL/gl.h	722;"	d
GL_LIST_INDEX	include/GL/gl.h	292;"	d
GL_LIST_MODE	include/GL/gl.h	293;"	d
GL_LIST_PRIORITY_SGIX	include/GL/glext.h	2283;"	d
GL_LIST_PRIORITY_SGIX	shared/GLee.h	4526;"	d
GL_LOAD	include/GL/gl.h	364;"	d
GL_LOCAL_CONSTANT_DATATYPE_EXT	include/GL/glext.h	3439;"	d
GL_LOCAL_CONSTANT_DATATYPE_EXT	shared/GLee.h	7179;"	d
GL_LOCAL_CONSTANT_EXT	include/GL/glext.h	3397;"	d
GL_LOCAL_CONSTANT_EXT	shared/GLee.h	7137;"	d
GL_LOCAL_CONSTANT_VALUE_EXT	include/GL/glext.h	3438;"	d
GL_LOCAL_CONSTANT_VALUE_EXT	shared/GLee.h	7178;"	d
GL_LOCAL_EXT	include/GL/glext.h	3398;"	d
GL_LOCAL_EXT	shared/GLee.h	7138;"	d
GL_LOGIC_OP	include/GL/gl.h	429;"	d
GL_LOGIC_OP_MODE	include/GL/gl.h	432;"	d
GL_LOWER_LEFT	include/GL/glext.h	462;"	d
GL_LOWER_LEFT	shared/GLee.h	1693;"	d
GL_LO_BIAS_NV	include/GL/glext.h	3047;"	d
GL_LO_BIAS_NV	shared/GLee.h	6429;"	d
GL_LO_SCALE_NV	include/GL/glext.h	3041;"	d
GL_LO_SCALE_NV	shared/GLee.h	6423;"	d
GL_LUMINANCE	include/GL/gl.h	487;"	d
GL_LUMINANCE12	include/GL/gl.h	742;"	d
GL_LUMINANCE12_ALPHA12	include/GL/gl.h	748;"	d
GL_LUMINANCE12_ALPHA12_EXT	include/GL/glext.h	1741;"	d
GL_LUMINANCE12_ALPHA12_EXT	shared/GLee.h	3367;"	d
GL_LUMINANCE12_ALPHA4	include/GL/gl.h	747;"	d
GL_LUMINANCE12_ALPHA4_EXT	include/GL/glext.h	1740;"	d
GL_LUMINANCE12_ALPHA4_EXT	shared/GLee.h	3366;"	d
GL_LUMINANCE12_EXT	include/GL/glext.h	1735;"	d
GL_LUMINANCE12_EXT	shared/GLee.h	3361;"	d
GL_LUMINANCE16	include/GL/gl.h	743;"	d
GL_LUMINANCE16F_ARB	include/GL/glext.h	1374;"	d
GL_LUMINANCE16F_ARB	shared/GLee.h	3294;"	d
GL_LUMINANCE16I_EXT	include/GL/glext.h	4094;"	d
GL_LUMINANCE16I_EXT	shared/GLee.h	8704;"	d
GL_LUMINANCE16UI_EXT	include/GL/glext.h	4076;"	d
GL_LUMINANCE16UI_EXT	shared/GLee.h	8686;"	d
GL_LUMINANCE16_ALPHA16	include/GL/gl.h	749;"	d
GL_LUMINANCE16_ALPHA16_EXT	include/GL/glext.h	1742;"	d
GL_LUMINANCE16_ALPHA16_EXT	shared/GLee.h	3368;"	d
GL_LUMINANCE16_ALPHA16_EXTENDED_RANGE_SGIX	shared/GLee.h	9360;"	d
GL_LUMINANCE16_ALPHA16_SIGNED_SGIX	shared/GLee.h	9348;"	d
GL_LUMINANCE16_ALPHA16_SNORM	include/GL/glext.h	4237;"	d
GL_LUMINANCE16_EXT	include/GL/glext.h	1736;"	d
GL_LUMINANCE16_EXT	shared/GLee.h	3362;"	d
GL_LUMINANCE16_EXTENDED_RANGE_SGIX	shared/GLee.h	9358;"	d
GL_LUMINANCE16_SIGNED_SGIX	shared/GLee.h	9346;"	d
GL_LUMINANCE16_SNORM	include/GL/glext.h	4236;"	d
GL_LUMINANCE32F_ARB	include/GL/glext.h	1368;"	d
GL_LUMINANCE32F_ARB	shared/GLee.h	3288;"	d
GL_LUMINANCE32I_EXT	include/GL/glext.h	4088;"	d
GL_LUMINANCE32I_EXT	shared/GLee.h	8698;"	d
GL_LUMINANCE32UI_EXT	include/GL/glext.h	4070;"	d
GL_LUMINANCE32UI_EXT	shared/GLee.h	8680;"	d
GL_LUMINANCE4	include/GL/gl.h	740;"	d
GL_LUMINANCE4_ALPHA4	include/GL/gl.h	744;"	d
GL_LUMINANCE4_ALPHA4_EXT	include/GL/glext.h	1737;"	d
GL_LUMINANCE4_ALPHA4_EXT	shared/GLee.h	3363;"	d
GL_LUMINANCE4_EXT	include/GL/glext.h	1733;"	d
GL_LUMINANCE4_EXT	shared/GLee.h	3359;"	d
GL_LUMINANCE6_ALPHA2	include/GL/gl.h	745;"	d
GL_LUMINANCE6_ALPHA2_EXT	include/GL/glext.h	1738;"	d
GL_LUMINANCE6_ALPHA2_EXT	shared/GLee.h	3364;"	d
GL_LUMINANCE8	include/GL/gl.h	741;"	d
GL_LUMINANCE8I_EXT	include/GL/glext.h	4100;"	d
GL_LUMINANCE8I_EXT	shared/GLee.h	8710;"	d
GL_LUMINANCE8UI_EXT	include/GL/glext.h	4082;"	d
GL_LUMINANCE8UI_EXT	shared/GLee.h	8692;"	d
GL_LUMINANCE8_ALPHA8	include/GL/gl.h	746;"	d
GL_LUMINANCE8_ALPHA8_EXT	include/GL/glext.h	1739;"	d
GL_LUMINANCE8_ALPHA8_EXT	shared/GLee.h	3365;"	d
GL_LUMINANCE8_ALPHA8_SNORM	include/GL/glext.h	4233;"	d
GL_LUMINANCE8_EXT	include/GL/glext.h	1734;"	d
GL_LUMINANCE8_EXT	shared/GLee.h	3360;"	d
GL_LUMINANCE8_SNORM	include/GL/glext.h	4232;"	d
GL_LUMINANCE_ALPHA	include/GL/gl.h	488;"	d
GL_LUMINANCE_ALPHA16F_ARB	include/GL/glext.h	1375;"	d
GL_LUMINANCE_ALPHA16F_ARB	shared/GLee.h	3295;"	d
GL_LUMINANCE_ALPHA16I_EXT	include/GL/glext.h	4095;"	d
GL_LUMINANCE_ALPHA16I_EXT	shared/GLee.h	8705;"	d
GL_LUMINANCE_ALPHA16UI_EXT	include/GL/glext.h	4077;"	d
GL_LUMINANCE_ALPHA16UI_EXT	shared/GLee.h	8687;"	d
GL_LUMINANCE_ALPHA32F_ARB	include/GL/glext.h	1369;"	d
GL_LUMINANCE_ALPHA32F_ARB	shared/GLee.h	3289;"	d
GL_LUMINANCE_ALPHA32I_EXT	include/GL/glext.h	4089;"	d
GL_LUMINANCE_ALPHA32I_EXT	shared/GLee.h	8699;"	d
GL_LUMINANCE_ALPHA32UI_EXT	include/GL/glext.h	4071;"	d
GL_LUMINANCE_ALPHA32UI_EXT	shared/GLee.h	8681;"	d
GL_LUMINANCE_ALPHA8I_EXT	include/GL/glext.h	4101;"	d
GL_LUMINANCE_ALPHA8I_EXT	shared/GLee.h	8711;"	d
GL_LUMINANCE_ALPHA8UI_EXT	include/GL/glext.h	4083;"	d
GL_LUMINANCE_ALPHA8UI_EXT	shared/GLee.h	8693;"	d
GL_LUMINANCE_ALPHA_EXTENDED_RANGE_SGIX	shared/GLee.h	9354;"	d
GL_LUMINANCE_ALPHA_FLOAT16_APPLE	include/GL/glext.h	4279;"	d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	include/GL/glext.h	3610;"	d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	shared/GLee.h	7836;"	d
GL_LUMINANCE_ALPHA_FLOAT32_APPLE	include/GL/glext.h	4273;"	d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	include/GL/glext.h	3604;"	d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	shared/GLee.h	7830;"	d
GL_LUMINANCE_ALPHA_INTEGER_EXT	include/GL/glext.h	4111;"	d
GL_LUMINANCE_ALPHA_INTEGER_EXT	shared/GLee.h	8721;"	d
GL_LUMINANCE_ALPHA_SIGNED_SGIX	shared/GLee.h	9342;"	d
GL_LUMINANCE_ALPHA_SNORM	include/GL/glext.h	4229;"	d
GL_LUMINANCE_EXTENDED_RANGE_SGIX	shared/GLee.h	9352;"	d
GL_LUMINANCE_FLOAT16_APPLE	include/GL/glext.h	4278;"	d
GL_LUMINANCE_FLOAT16_ATI	include/GL/glext.h	3609;"	d
GL_LUMINANCE_FLOAT16_ATI	shared/GLee.h	7835;"	d
GL_LUMINANCE_FLOAT32_APPLE	include/GL/glext.h	4272;"	d
GL_LUMINANCE_FLOAT32_ATI	include/GL/glext.h	3603;"	d
GL_LUMINANCE_FLOAT32_ATI	shared/GLee.h	7829;"	d
GL_LUMINANCE_INTEGER_EXT	include/GL/glext.h	4110;"	d
GL_LUMINANCE_INTEGER_EXT	shared/GLee.h	8720;"	d
GL_LUMINANCE_SIGNED_SGIX	shared/GLee.h	9340;"	d
GL_LUMINANCE_SNORM	include/GL/glext.h	4228;"	d
GL_MAD_ATI	include/GL/glext.h	3271;"	d
GL_MAD_ATI	shared/GLee.h	6912;"	d
GL_MAGNITUDE_BIAS_NV	include/GL/glext.h	3050;"	d
GL_MAGNITUDE_BIAS_NV	shared/GLee.h	6432;"	d
GL_MAGNITUDE_SCALE_NV	include/GL/glext.h	3044;"	d
GL_MAGNITUDE_SCALE_NV	shared/GLee.h	6426;"	d
GL_MAJOR_VERSION	include/GL/glext.h	516;"	d
GL_MANGLE_H	include/GL/gl_mangle.h	24;"	d
GL_MAP1_BINORMAL_EXT	include/GL/glext.h	2532;"	d
GL_MAP1_BINORMAL_EXT	shared/GLee.h	5178;"	d
GL_MAP1_COLOR_4	include/GL/gl.h	554;"	d
GL_MAP1_GRID_DOMAIN	include/GL/gl.h	572;"	d
GL_MAP1_GRID_SEGMENTS	include/GL/gl.h	573;"	d
GL_MAP1_INDEX	include/GL/gl.h	555;"	d
GL_MAP1_NORMAL	include/GL/gl.h	556;"	d
GL_MAP1_TANGENT_EXT	include/GL/glext.h	2530;"	d
GL_MAP1_TANGENT_EXT	shared/GLee.h	5176;"	d
GL_MAP1_TEXTURE_COORD_1	include/GL/gl.h	557;"	d
GL_MAP1_TEXTURE_COORD_2	include/GL/gl.h	558;"	d
GL_MAP1_TEXTURE_COORD_3	include/GL/gl.h	559;"	d
GL_MAP1_TEXTURE_COORD_4	include/GL/gl.h	560;"	d
GL_MAP1_VERTEX_3	include/GL/gl.h	561;"	d
GL_MAP1_VERTEX_4	include/GL/gl.h	562;"	d
GL_MAP1_VERTEX_ATTRIB0_4_NV	include/GL/glext.h	3120;"	d
GL_MAP1_VERTEX_ATTRIB0_4_NV	shared/GLee.h	6517;"	d
GL_MAP1_VERTEX_ATTRIB10_4_NV	include/GL/glext.h	3130;"	d
GL_MAP1_VERTEX_ATTRIB10_4_NV	shared/GLee.h	6527;"	d
GL_MAP1_VERTEX_ATTRIB11_4_NV	include/GL/glext.h	3131;"	d
GL_MAP1_VERTEX_ATTRIB11_4_NV	shared/GLee.h	6528;"	d
GL_MAP1_VERTEX_ATTRIB12_4_NV	include/GL/glext.h	3132;"	d
GL_MAP1_VERTEX_ATTRIB12_4_NV	shared/GLee.h	6529;"	d
GL_MAP1_VERTEX_ATTRIB13_4_NV	include/GL/glext.h	3133;"	d
GL_MAP1_VERTEX_ATTRIB13_4_NV	shared/GLee.h	6530;"	d
GL_MAP1_VERTEX_ATTRIB14_4_NV	include/GL/glext.h	3134;"	d
GL_MAP1_VERTEX_ATTRIB14_4_NV	shared/GLee.h	6531;"	d
GL_MAP1_VERTEX_ATTRIB15_4_NV	include/GL/glext.h	3135;"	d
GL_MAP1_VERTEX_ATTRIB15_4_NV	shared/GLee.h	6532;"	d
GL_MAP1_VERTEX_ATTRIB1_4_NV	include/GL/glext.h	3121;"	d
GL_MAP1_VERTEX_ATTRIB1_4_NV	shared/GLee.h	6518;"	d
GL_MAP1_VERTEX_ATTRIB2_4_NV	include/GL/glext.h	3122;"	d
GL_MAP1_VERTEX_ATTRIB2_4_NV	shared/GLee.h	6519;"	d
GL_MAP1_VERTEX_ATTRIB3_4_NV	include/GL/glext.h	3123;"	d
GL_MAP1_VERTEX_ATTRIB3_4_NV	shared/GLee.h	6520;"	d
GL_MAP1_VERTEX_ATTRIB4_4_NV	include/GL/glext.h	3124;"	d
GL_MAP1_VERTEX_ATTRIB4_4_NV	shared/GLee.h	6521;"	d
GL_MAP1_VERTEX_ATTRIB5_4_NV	include/GL/glext.h	3125;"	d
GL_MAP1_VERTEX_ATTRIB5_4_NV	shared/GLee.h	6522;"	d
GL_MAP1_VERTEX_ATTRIB6_4_NV	include/GL/glext.h	3126;"	d
GL_MAP1_VERTEX_ATTRIB6_4_NV	shared/GLee.h	6523;"	d
GL_MAP1_VERTEX_ATTRIB7_4_NV	include/GL/glext.h	3127;"	d
GL_MAP1_VERTEX_ATTRIB7_4_NV	shared/GLee.h	6524;"	d
GL_MAP1_VERTEX_ATTRIB8_4_NV	include/GL/glext.h	3128;"	d
GL_MAP1_VERTEX_ATTRIB8_4_NV	shared/GLee.h	6525;"	d
GL_MAP1_VERTEX_ATTRIB9_4_NV	include/GL/glext.h	3129;"	d
GL_MAP1_VERTEX_ATTRIB9_4_NV	shared/GLee.h	6526;"	d
GL_MAP2_BINORMAL_EXT	include/GL/glext.h	2533;"	d
GL_MAP2_BINORMAL_EXT	shared/GLee.h	5179;"	d
GL_MAP2_COLOR_4	include/GL/gl.h	563;"	d
GL_MAP2_GRID_DOMAIN	include/GL/gl.h	574;"	d
GL_MAP2_GRID_SEGMENTS	include/GL/gl.h	575;"	d
GL_MAP2_INDEX	include/GL/gl.h	564;"	d
GL_MAP2_NORMAL	include/GL/gl.h	565;"	d
GL_MAP2_TANGENT_EXT	include/GL/glext.h	2531;"	d
GL_MAP2_TANGENT_EXT	shared/GLee.h	5177;"	d
GL_MAP2_TEXTURE_COORD_1	include/GL/gl.h	566;"	d
GL_MAP2_TEXTURE_COORD_2	include/GL/gl.h	567;"	d
GL_MAP2_TEXTURE_COORD_3	include/GL/gl.h	568;"	d
GL_MAP2_TEXTURE_COORD_4	include/GL/gl.h	569;"	d
GL_MAP2_VERTEX_3	include/GL/gl.h	570;"	d
GL_MAP2_VERTEX_4	include/GL/gl.h	571;"	d
GL_MAP2_VERTEX_ATTRIB0_4_NV	include/GL/glext.h	3136;"	d
GL_MAP2_VERTEX_ATTRIB0_4_NV	shared/GLee.h	6533;"	d
GL_MAP2_VERTEX_ATTRIB10_4_NV	include/GL/glext.h	3146;"	d
GL_MAP2_VERTEX_ATTRIB10_4_NV	shared/GLee.h	6543;"	d
GL_MAP2_VERTEX_ATTRIB11_4_NV	include/GL/glext.h	3147;"	d
GL_MAP2_VERTEX_ATTRIB11_4_NV	shared/GLee.h	6544;"	d
GL_MAP2_VERTEX_ATTRIB12_4_NV	include/GL/glext.h	3148;"	d
GL_MAP2_VERTEX_ATTRIB12_4_NV	shared/GLee.h	6545;"	d
GL_MAP2_VERTEX_ATTRIB13_4_NV	include/GL/glext.h	3149;"	d
GL_MAP2_VERTEX_ATTRIB13_4_NV	shared/GLee.h	6546;"	d
GL_MAP2_VERTEX_ATTRIB14_4_NV	include/GL/glext.h	3150;"	d
GL_MAP2_VERTEX_ATTRIB14_4_NV	shared/GLee.h	6547;"	d
GL_MAP2_VERTEX_ATTRIB15_4_NV	include/GL/glext.h	3151;"	d
GL_MAP2_VERTEX_ATTRIB15_4_NV	shared/GLee.h	6548;"	d
GL_MAP2_VERTEX_ATTRIB1_4_NV	include/GL/glext.h	3137;"	d
GL_MAP2_VERTEX_ATTRIB1_4_NV	shared/GLee.h	6534;"	d
GL_MAP2_VERTEX_ATTRIB2_4_NV	include/GL/glext.h	3138;"	d
GL_MAP2_VERTEX_ATTRIB2_4_NV	shared/GLee.h	6535;"	d
GL_MAP2_VERTEX_ATTRIB3_4_NV	include/GL/glext.h	3139;"	d
GL_MAP2_VERTEX_ATTRIB3_4_NV	shared/GLee.h	6536;"	d
GL_MAP2_VERTEX_ATTRIB4_4_NV	include/GL/glext.h	3140;"	d
GL_MAP2_VERTEX_ATTRIB4_4_NV	shared/GLee.h	6537;"	d
GL_MAP2_VERTEX_ATTRIB5_4_NV	include/GL/glext.h	3141;"	d
GL_MAP2_VERTEX_ATTRIB5_4_NV	shared/GLee.h	6538;"	d
GL_MAP2_VERTEX_ATTRIB6_4_NV	include/GL/glext.h	3142;"	d
GL_MAP2_VERTEX_ATTRIB6_4_NV	shared/GLee.h	6539;"	d
GL_MAP2_VERTEX_ATTRIB7_4_NV	include/GL/glext.h	3143;"	d
GL_MAP2_VERTEX_ATTRIB7_4_NV	shared/GLee.h	6540;"	d
GL_MAP2_VERTEX_ATTRIB8_4_NV	include/GL/glext.h	3144;"	d
GL_MAP2_VERTEX_ATTRIB8_4_NV	shared/GLee.h	6541;"	d
GL_MAP2_VERTEX_ATTRIB9_4_NV	include/GL/glext.h	3145;"	d
GL_MAP2_VERTEX_ATTRIB9_4_NV	shared/GLee.h	6542;"	d
GL_MAP_ATTRIB_U_ORDER_NV	include/GL/glext.h	2942;"	d
GL_MAP_ATTRIB_U_ORDER_NV	shared/GLee.h	6266;"	d
GL_MAP_ATTRIB_V_ORDER_NV	include/GL/glext.h	2943;"	d
GL_MAP_ATTRIB_V_ORDER_NV	shared/GLee.h	6267;"	d
GL_MAP_COLOR	include/GL/gl.h	595;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	include/GL/glext.h	1520;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	include/GL/glext.h	1519;"	d
GL_MAP_INVALIDATE_RANGE_BIT	include/GL/glext.h	1518;"	d
GL_MAP_READ_BIT	include/GL/glext.h	1516;"	d
GL_MAP_STENCIL	include/GL/gl.h	596;"	d
GL_MAP_TESSELLATION_NV	include/GL/glext.h	2941;"	d
GL_MAP_TESSELLATION_NV	shared/GLee.h	6265;"	d
GL_MAP_UNSYNCHRONIZED_BIT	include/GL/glext.h	1521;"	d
GL_MAP_WRITE_BIT	include/GL/glext.h	1517;"	d
GL_MATERIAL_SIDE_HINT_PGI	include/GL/glext.h	2223;"	d
GL_MATERIAL_SIDE_HINT_PGI	shared/GLee.h	4431;"	d
GL_MATRIX0_ARB	include/GL/glext.h	1154;"	d
GL_MATRIX0_ARB	shared/GLee.h	2624;"	d
GL_MATRIX0_NV	include/GL/glext.h	3084;"	d
GL_MATRIX0_NV	shared/GLee.h	6481;"	d
GL_MATRIX10_ARB	include/GL/glext.h	1164;"	d
GL_MATRIX10_ARB	shared/GLee.h	2634;"	d
GL_MATRIX11_ARB	include/GL/glext.h	1165;"	d
GL_MATRIX11_ARB	shared/GLee.h	2635;"	d
GL_MATRIX12_ARB	include/GL/glext.h	1166;"	d
GL_MATRIX12_ARB	shared/GLee.h	2636;"	d
GL_MATRIX13_ARB	include/GL/glext.h	1167;"	d
GL_MATRIX13_ARB	shared/GLee.h	2637;"	d
GL_MATRIX14_ARB	include/GL/glext.h	1168;"	d
GL_MATRIX14_ARB	shared/GLee.h	2638;"	d
GL_MATRIX15_ARB	include/GL/glext.h	1169;"	d
GL_MATRIX15_ARB	shared/GLee.h	2639;"	d
GL_MATRIX16_ARB	include/GL/glext.h	1170;"	d
GL_MATRIX16_ARB	shared/GLee.h	2640;"	d
GL_MATRIX17_ARB	include/GL/glext.h	1171;"	d
GL_MATRIX17_ARB	shared/GLee.h	2641;"	d
GL_MATRIX18_ARB	include/GL/glext.h	1172;"	d
GL_MATRIX18_ARB	shared/GLee.h	2642;"	d
GL_MATRIX19_ARB	include/GL/glext.h	1173;"	d
GL_MATRIX19_ARB	shared/GLee.h	2643;"	d
GL_MATRIX1_ARB	include/GL/glext.h	1155;"	d
GL_MATRIX1_ARB	shared/GLee.h	2625;"	d
GL_MATRIX1_NV	include/GL/glext.h	3085;"	d
GL_MATRIX1_NV	shared/GLee.h	6482;"	d
GL_MATRIX20_ARB	include/GL/glext.h	1174;"	d
GL_MATRIX20_ARB	shared/GLee.h	2644;"	d
GL_MATRIX21_ARB	include/GL/glext.h	1175;"	d
GL_MATRIX21_ARB	shared/GLee.h	2645;"	d
GL_MATRIX22_ARB	include/GL/glext.h	1176;"	d
GL_MATRIX22_ARB	shared/GLee.h	2646;"	d
GL_MATRIX23_ARB	include/GL/glext.h	1177;"	d
GL_MATRIX23_ARB	shared/GLee.h	2647;"	d
GL_MATRIX24_ARB	include/GL/glext.h	1178;"	d
GL_MATRIX24_ARB	shared/GLee.h	2648;"	d
GL_MATRIX25_ARB	include/GL/glext.h	1179;"	d
GL_MATRIX25_ARB	shared/GLee.h	2649;"	d
GL_MATRIX26_ARB	include/GL/glext.h	1180;"	d
GL_MATRIX26_ARB	shared/GLee.h	2650;"	d
GL_MATRIX27_ARB	include/GL/glext.h	1181;"	d
GL_MATRIX27_ARB	shared/GLee.h	2651;"	d
GL_MATRIX28_ARB	include/GL/glext.h	1182;"	d
GL_MATRIX28_ARB	shared/GLee.h	2652;"	d
GL_MATRIX29_ARB	include/GL/glext.h	1183;"	d
GL_MATRIX29_ARB	shared/GLee.h	2653;"	d
GL_MATRIX2_ARB	include/GL/glext.h	1156;"	d
GL_MATRIX2_ARB	shared/GLee.h	2626;"	d
GL_MATRIX2_NV	include/GL/glext.h	3086;"	d
GL_MATRIX2_NV	shared/GLee.h	6483;"	d
GL_MATRIX30_ARB	include/GL/glext.h	1184;"	d
GL_MATRIX30_ARB	shared/GLee.h	2654;"	d
GL_MATRIX31_ARB	include/GL/glext.h	1185;"	d
GL_MATRIX31_ARB	shared/GLee.h	2655;"	d
GL_MATRIX3_ARB	include/GL/glext.h	1157;"	d
GL_MATRIX3_ARB	shared/GLee.h	2627;"	d
GL_MATRIX3_NV	include/GL/glext.h	3087;"	d
GL_MATRIX3_NV	shared/GLee.h	6484;"	d
GL_MATRIX4_ARB	include/GL/glext.h	1158;"	d
GL_MATRIX4_ARB	shared/GLee.h	2628;"	d
GL_MATRIX4_NV	include/GL/glext.h	3088;"	d
GL_MATRIX4_NV	shared/GLee.h	6485;"	d
GL_MATRIX5_ARB	include/GL/glext.h	1159;"	d
GL_MATRIX5_ARB	shared/GLee.h	2629;"	d
GL_MATRIX5_NV	include/GL/glext.h	3089;"	d
GL_MATRIX5_NV	shared/GLee.h	6486;"	d
GL_MATRIX6_ARB	include/GL/glext.h	1160;"	d
GL_MATRIX6_ARB	shared/GLee.h	2630;"	d
GL_MATRIX6_NV	include/GL/glext.h	3090;"	d
GL_MATRIX6_NV	shared/GLee.h	6487;"	d
GL_MATRIX7_ARB	include/GL/glext.h	1161;"	d
GL_MATRIX7_ARB	shared/GLee.h	2631;"	d
GL_MATRIX7_NV	include/GL/glext.h	3091;"	d
GL_MATRIX7_NV	shared/GLee.h	6488;"	d
GL_MATRIX8_ARB	include/GL/glext.h	1162;"	d
GL_MATRIX8_ARB	shared/GLee.h	2632;"	d
GL_MATRIX9_ARB	include/GL/glext.h	1163;"	d
GL_MATRIX9_ARB	shared/GLee.h	2633;"	d
GL_MATRIX_EXT	include/GL/glext.h	3394;"	d
GL_MATRIX_EXT	shared/GLee.h	7134;"	d
GL_MATRIX_INDEX_ARRAY_ARB	include/GL/glext.h	1040;"	d
GL_MATRIX_INDEX_ARRAY_ARB	shared/GLee.h	2402;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	include/GL/glext.h	1045;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	shared/GLee.h	2407;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	include/GL/glext.h	1042;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	shared/GLee.h	2404;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	include/GL/glext.h	1044;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	shared/GLee.h	2406;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	include/GL/glext.h	1043;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	shared/GLee.h	2405;"	d
GL_MATRIX_MODE	include/GL/gl.h	247;"	d
GL_MATRIX_PALETTE_ARB	include/GL/glext.h	1036;"	d
GL_MATRIX_PALETTE_ARB	shared/GLee.h	2398;"	d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	include/GL/glext.h	2230;"	d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	shared/GLee.h	4438;"	d
GL_MAT_AMBIENT_BIT_PGI	include/GL/glext.h	2229;"	d
GL_MAT_AMBIENT_BIT_PGI	shared/GLee.h	4437;"	d
GL_MAT_COLOR_INDEXES_BIT_PGI	include/GL/glext.h	2233;"	d
GL_MAT_COLOR_INDEXES_BIT_PGI	shared/GLee.h	4441;"	d
GL_MAT_DIFFUSE_BIT_PGI	include/GL/glext.h	2231;"	d
GL_MAT_DIFFUSE_BIT_PGI	shared/GLee.h	4439;"	d
GL_MAT_EMISSION_BIT_PGI	include/GL/glext.h	2232;"	d
GL_MAT_EMISSION_BIT_PGI	shared/GLee.h	4440;"	d
GL_MAT_SHININESS_BIT_PGI	include/GL/glext.h	2234;"	d
GL_MAT_SHININESS_BIT_PGI	shared/GLee.h	4442;"	d
GL_MAT_SPECULAR_BIT_PGI	include/GL/glext.h	2235;"	d
GL_MAT_SPECULAR_BIT_PGI	shared/GLee.h	4443;"	d
GL_MAX	include/GL/gl.h	1628;"	d
GL_MAX	include/GL/glext.h	110;"	d
GL_MAX	shared/GLee.h	999;"	d
GL_MAX_3D_TEXTURE_SIZE	include/GL/gl.h	1522;"	d
GL_MAX_3D_TEXTURE_SIZE	include/GL/glext.h	70;"	d
GL_MAX_3D_TEXTURE_SIZE	shared/GLee.h	844;"	d
GL_MAX_3D_TEXTURE_SIZE_EXT	include/GL/glext.h	1783;"	d
GL_MAX_3D_TEXTURE_SIZE_EXT	shared/GLee.h	3414;"	d
GL_MAX_4D_TEXTURE_SIZE_SGIS	include/GL/glext.h	1891;"	d
GL_MAX_4D_TEXTURE_SIZE_SGIS	shared/GLee.h	3716;"	d
GL_MAX_ACTIVE_LIGHTS_EXT	shared/GLee.h	9092;"	d
GL_MAX_ACTIVE_LIGHTS_SGIX	include/GL/glext.h	2352;"	d
GL_MAX_ACTIVE_LIGHTS_SGIX	shared/GLee.h	4691;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	include/GL/glext.h	530;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS_EXT	include/GL/gl.h	2178;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS_EXT	include/GL/glext.h	3959;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS_EXT	shared/GLee.h	8666;"	d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	include/GL/glext.h	2435;"	d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	shared/GLee.h	4912;"	d
GL_MAX_ASYNC_HISTOGRAM_SGIX	include/GL/glext.h	2441;"	d
GL_MAX_ASYNC_HISTOGRAM_SGIX	shared/GLee.h	4923;"	d
GL_MAX_ASYNC_READ_PIXELS_SGIX	include/GL/glext.h	2436;"	d
GL_MAX_ASYNC_READ_PIXELS_SGIX	shared/GLee.h	4913;"	d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	include/GL/glext.h	2434;"	d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	shared/GLee.h	4911;"	d
GL_MAX_ATTRIB_STACK_DEPTH	include/GL/gl.h	515;"	d
GL_MAX_BINDABLE_UNIFORM_SIZE_EXT	include/GL/glext.h	4060;"	d
GL_MAX_BINDABLE_UNIFORM_SIZE_EXT	shared/GLee.h	8608;"	d
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH	include/GL/gl.h	521;"	d
GL_MAX_CLIPMAP_DEPTH_SGIX	include/GL/glext.h	2022;"	d
GL_MAX_CLIPMAP_DEPTH_SGIX	shared/GLee.h	3981;"	d
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX	include/GL/glext.h	2023;"	d
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX	shared/GLee.h	3982;"	d
GL_MAX_CLIP_DISTANCES	include/GL/glext.h	515;"	d
GL_MAX_CLIP_PLANES	include/GL/gl.h	512;"	d
GL_MAX_COLOR_ATTACHMENTS	include/GL/glext.h	1436;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	include/GL/glext.h	3754;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	shared/GLee.h	8283;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	include/GL/gl.h	1603;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	include/GL/glext.h	153;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	shared/GLee.h	1039;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	include/GL/glext.h	1840;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	shared/GLee.h	3603;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	include/GL/glext.h	1674;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	include/GL/glext.h	1581;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	include/GL/glext.h	1580;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	include/GL/glext.h	426;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	shared/GLee.h	1657;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	include/GL/glext.h	1290;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	shared/GLee.h	3145;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	include/GL/glext.h	1576;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	include/GL/glext.h	1579;"	d
GL_MAX_CONVOLUTION_HEIGHT	include/GL/gl.h	1589;"	d
GL_MAX_CONVOLUTION_HEIGHT	include/GL/glext.h	128;"	d
GL_MAX_CONVOLUTION_HEIGHT	shared/GLee.h	1014;"	d
GL_MAX_CONVOLUTION_HEIGHT_EXT	include/GL/glext.h	1826;"	d
GL_MAX_CONVOLUTION_HEIGHT_EXT	shared/GLee.h	3545;"	d
GL_MAX_CONVOLUTION_WIDTH	include/GL/gl.h	1588;"	d
GL_MAX_CONVOLUTION_WIDTH	include/GL/glext.h	127;"	d
GL_MAX_CONVOLUTION_WIDTH	shared/GLee.h	1013;"	d
GL_MAX_CONVOLUTION_WIDTH_EXT	include/GL/glext.h	1825;"	d
GL_MAX_CONVOLUTION_WIDTH_EXT	shared/GLee.h	3544;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	include/GL/gl.h	1800;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	include/GL/glext.h	234;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	shared/GLee.h	1134;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	include/GL/glext.h	962;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	shared/GLee.h	2242;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	include/GL/glext.h	2657;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	shared/GLee.h	5615;"	d
GL_MAX_DEFORMATION_ORDER_SGIX	include/GL/glext.h	2157;"	d
GL_MAX_DEFORMATION_ORDER_SGIX	shared/GLee.h	4262;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	include/GL/glext.h	1675;"	d
GL_MAX_DRAW_BUFFERS	include/GL/glext.h	399;"	d
GL_MAX_DRAW_BUFFERS	shared/GLee.h	1627;"	d
GL_MAX_DRAW_BUFFERS_ARB	include/GL/glext.h	1317;"	d
GL_MAX_DRAW_BUFFERS_ARB	shared/GLee.h	3211;"	d
GL_MAX_DRAW_BUFFERS_ATI	include/GL/glext.h	3568;"	d
GL_MAX_DRAW_BUFFERS_ATI	shared/GLee.h	7776;"	d
GL_MAX_ELEMENTS_INDICES	include/GL/gl.h	1486;"	d
GL_MAX_ELEMENTS_INDICES	include/GL/glext.h	81;"	d
GL_MAX_ELEMENTS_INDICES	shared/GLee.h	855;"	d
GL_MAX_ELEMENTS_INDICES_EXT	include/GL/glext.h	2381;"	d
GL_MAX_ELEMENTS_INDICES_EXT	shared/GLee.h	4789;"	d
GL_MAX_ELEMENTS_VERTICES	include/GL/gl.h	1485;"	d
GL_MAX_ELEMENTS_VERTICES	include/GL/glext.h	80;"	d
GL_MAX_ELEMENTS_VERTICES	shared/GLee.h	854;"	d
GL_MAX_ELEMENTS_VERTICES_EXT	include/GL/glext.h	2380;"	d
GL_MAX_ELEMENTS_VERTICES_EXT	shared/GLee.h	4788;"	d
GL_MAX_EVAL_ORDER	include/GL/gl.h	510;"	d
GL_MAX_EXT	include/GL/glext.h	2047;"	d
GL_MAX_EXT	shared/GLee.h	4026;"	d
GL_MAX_FOG_FUNC_POINTS_SGIS	include/GL/glext.h	2177;"	d
GL_MAX_FOG_FUNC_POINTS_SGIS	shared/GLee.h	4320;"	d
GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT	include/GL/glext.h	4058;"	d
GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT	shared/GLee.h	8606;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	include/GL/glext.h	833;"	d
GL_MAX_FRAGMENT_LIGHTS_EXT	shared/GLee.h	9091;"	d
GL_MAX_FRAGMENT_LIGHTS_SGIX	include/GL/glext.h	2351;"	d
GL_MAX_FRAGMENT_LIGHTS_SGIX	shared/GLee.h	4690;"	d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	include/GL/glext.h	3632;"	d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	shared/GLee.h	7868;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	include/GL/glext.h	1575;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	include/GL/glext.h	422;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	shared/GLee.h	1653;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	include/GL/glext.h	1297;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	shared/GLee.h	3166;"	d
GL_MAX_FRAMEZOOM_FACTOR_SGIX	include/GL/glext.h	2142;"	d
GL_MAX_FRAMEZOOM_FACTOR_SGIX	shared/GLee.h	4226;"	d
GL_MAX_GENERAL_COMBINERS_NV	include/GL/glext.h	2748;"	d
GL_MAX_GENERAL_COMBINERS_NV	shared/GLee.h	5761;"	d
GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT	include/GL/glext.h	4059;"	d
GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT	shared/GLee.h	8607;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	include/GL/glext.h	831;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	include/GL/glext.h	832;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	include/GL/glext.h	828;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB	include/GL/glext.h	1501;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT	include/GL/glext.h	3898;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT	shared/GLee.h	8570;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	include/GL/glext.h	820;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB	include/GL/glext.h	1490;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT	include/GL/glext.h	3880;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT	shared/GLee.h	8575;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	include/GL/glext.h	829;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB	include/GL/glext.h	1502;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT	include/GL/glext.h	3899;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT	shared/GLee.h	8571;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	include/GL/glext.h	1574;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	include/GL/glext.h	827;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB	include/GL/glext.h	1500;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT	include/GL/glext.h	3897;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT	shared/GLee.h	8569;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB	include/GL/glext.h	1498;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT	include/GL/glext.h	3894;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT	shared/GLee.h	8566;"	d
GL_MAX_INTEGER_SAMPLES	include/GL/glext.h	1676;"	d
GL_MAX_INTENSITY_SGIS	shared/GLee.h	9364;"	d
GL_MAX_LIGHTS	include/GL/gl.h	511;"	d
GL_MAX_LIST_NESTING	include/GL/gl.h	509;"	d
GL_MAX_LUMINANCE_SGIS	shared/GLee.h	9362;"	d
GL_MAX_MAP_TESSELLATION_NV	include/GL/glext.h	2961;"	d
GL_MAX_MAP_TESSELLATION_NV	shared/GLee.h	6285;"	d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	include/GL/glext.h	1037;"	d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	shared/GLee.h	2399;"	d
GL_MAX_MODELVIEW_STACK_DEPTH	include/GL/gl.h	516;"	d
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV	include/GL/glext.h	4005;"	d
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV	shared/GLee.h	8930;"	d
GL_MAX_NAME_STACK_DEPTH	include/GL/gl.h	517;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	include/GL/glext.h	3404;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	shared/GLee.h	7144;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	include/GL/glext.h	3407;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	shared/GLee.h	7147;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	include/GL/glext.h	3408;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	shared/GLee.h	7148;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	include/GL/glext.h	3406;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	shared/GLee.h	7146;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	include/GL/glext.h	3405;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	shared/GLee.h	7145;"	d
GL_MAX_PALETTE_MATRICES_ARB	include/GL/glext.h	1038;"	d
GL_MAX_PALETTE_MATRICES_ARB	shared/GLee.h	2400;"	d
GL_MAX_PIXEL_MAP_TABLE	include/GL/gl.h	514;"	d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	include/GL/glext.h	2468;"	d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	shared/GLee.h	4982;"	d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	include/GL/glext.h	3308;"	d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	shared/GLee.h	6996;"	d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	include/GL/glext.h	1147;"	d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	shared/GLee.h	2617;"	d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	include/GL/glext.h	1196;"	d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	shared/GLee.h	2857;"	d
GL_MAX_PROGRAM_ATTRIBS_ARB	include/GL/glext.h	1143;"	d
GL_MAX_PROGRAM_ATTRIBS_ARB	shared/GLee.h	2613;"	d
GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV	include/GL/glext.h	3863;"	d
GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV	shared/GLee.h	8866;"	d
GL_MAX_PROGRAM_CALL_DEPTH_NV	include/GL/glext.h	3721;"	d
GL_MAX_PROGRAM_CALL_DEPTH_NV	shared/GLee.h	8237;"	d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	include/GL/glext.h	1151;"	d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	shared/GLee.h	2621;"	d
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV	include/GL/glext.h	3720;"	d
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV	shared/GLee.h	8236;"	d
GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV	include/GL/glext.h	3865;"	d
GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV	shared/GLee.h	8868;"	d
GL_MAX_PROGRAM_GENERIC_RESULTS_NV	include/GL/glext.h	3866;"	d
GL_MAX_PROGRAM_GENERIC_RESULTS_NV	shared/GLee.h	8869;"	d
GL_MAX_PROGRAM_IF_DEPTH_NV	include/GL/glext.h	3722;"	d
GL_MAX_PROGRAM_IF_DEPTH_NV	shared/GLee.h	8238;"	d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	include/GL/glext.h	1131;"	d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	shared/GLee.h	2601;"	d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	include/GL/glext.h	1150;"	d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	shared/GLee.h	2620;"	d
GL_MAX_PROGRAM_LOOP_COUNT_NV	include/GL/glext.h	3724;"	d
GL_MAX_PROGRAM_LOOP_COUNT_NV	shared/GLee.h	8240;"	d
GL_MAX_PROGRAM_LOOP_DEPTH_NV	include/GL/glext.h	3723;"	d
GL_MAX_PROGRAM_LOOP_DEPTH_NV	shared/GLee.h	8239;"	d
GL_MAX_PROGRAM_MATRICES_ARB	include/GL/glext.h	1117;"	d
GL_MAX_PROGRAM_MATRICES_ARB	shared/GLee.h	2587;"	d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	include/GL/glext.h	1116;"	d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	shared/GLee.h	2586;"	d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	include/GL/glext.h	1149;"	d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	shared/GLee.h	2619;"	d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	include/GL/glext.h	1199;"	d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	shared/GLee.h	2860;"	d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	include/GL/glext.h	1145;"	d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	shared/GLee.h	2615;"	d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	include/GL/glext.h	1133;"	d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	shared/GLee.h	2603;"	d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	include/GL/glext.h	1141;"	d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	shared/GLee.h	2611;"	d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	include/GL/glext.h	1137;"	d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	shared/GLee.h	2607;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	include/GL/glext.h	1201;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	shared/GLee.h	2862;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	include/GL/glext.h	1200;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	shared/GLee.h	2861;"	d
GL_MAX_PROGRAM_OUTPUT_VERTICES_NV	include/GL/glext.h	3875;"	d
GL_MAX_PROGRAM_OUTPUT_VERTICES_NV	shared/GLee.h	8849;"	d
GL_MAX_PROGRAM_PARAMETERS_ARB	include/GL/glext.h	1139;"	d
GL_MAX_PROGRAM_PARAMETERS_ARB	shared/GLee.h	2609;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV	include/GL/glext.h	4018;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV	include/GL/glext.h	4019;"	d
GL_MAX_PROGRAM_RESULT_COMPONENTS_NV	include/GL/glext.h	3864;"	d
GL_MAX_PROGRAM_RESULT_COMPONENTS_NV	shared/GLee.h	8867;"	d
GL_MAX_PROGRAM_TEMPORARIES_ARB	include/GL/glext.h	1135;"	d
GL_MAX_PROGRAM_TEMPORARIES_ARB	shared/GLee.h	2605;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	include/GL/glext.h	532;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET_NV	include/GL/glext.h	3860;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET_NV	shared/GLee.h	8863;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS	include/GL/glext.h	1704;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	include/GL/glext.h	1703;"	d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	include/GL/glext.h	1198;"	d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	shared/GLee.h	2859;"	d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	include/GL/glext.h	1197;"	d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	shared/GLee.h	2858;"	d
GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV	include/GL/glext.h	3876;"	d
GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV	shared/GLee.h	8850;"	d
GL_MAX_PROJECTION_STACK_DEPTH	include/GL/gl.h	518;"	d
GL_MAX_RATIONAL_EVAL_ORDER_NV	include/GL/glext.h	2962;"	d
GL_MAX_RATIONAL_EVAL_ORDER_NV	shared/GLee.h	6286;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	include/GL/glext.h	759;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	include/GL/glext.h	1340;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	shared/GLee.h	3242;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	include/GL/glext.h	2981;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	shared/GLee.h	6358;"	d
GL_MAX_RENDERBUFFER_COLOR_SAMPLES_NV	shared/GLee.h	8929;"	d
GL_MAX_RENDERBUFFER_COVERAGE_SAMPLES_NV	shared/GLee.h	8928;"	d
GL_MAX_RENDERBUFFER_SIZE	include/GL/glext.h	1407;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	include/GL/glext.h	3738;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	shared/GLee.h	8266;"	d
GL_MAX_SAMPLES	include/GL/glext.h	1471;"	d
GL_MAX_SAMPLES_EXT	include/GL/glext.h	3834;"	d
GL_MAX_SAMPLES_EXT	shared/GLee.h	8944;"	d
GL_MAX_SAMPLE_MASK_WORDS	include/GL/glext.h	1659;"	d
GL_MAX_SAMPLE_MASK_WORDS_NV	include/GL/glext.h	4180;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	include/GL/glext.h	1638;"	d
GL_MAX_SHADER_BUFFER_ADDRESS_NV	include/GL/glext.h	4365;"	d
GL_MAX_SHININESS_NV	include/GL/glext.h	2695;"	d
GL_MAX_SHININESS_NV	shared/GLee.h	5692;"	d
GL_MAX_SPOT_EXPONENT_NV	include/GL/glext.h	2696;"	d
GL_MAX_SPOT_EXPONENT_NV	shared/GLee.h	5693;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	include/GL/glext.h	752;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_ARB	include/GL/glext.h	1526;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_EXT	include/GL/glext.h	3966;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_EXT	shared/GLee.h	8414;"	d
GL_MAX_TEXTURE_COORDS	include/GL/glext.h	473;"	d
GL_MAX_TEXTURE_COORDS	shared/GLee.h	1649;"	d
GL_MAX_TEXTURE_COORDS_ARB	include/GL/glext.h	1202;"	d
GL_MAX_TEXTURE_COORDS_ARB	shared/GLee.h	2863;"	d
GL_MAX_TEXTURE_COORDS_NV	include/GL/glext.h	3634;"	d
GL_MAX_TEXTURE_COORDS_NV	shared/GLee.h	7870;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	include/GL/glext.h	419;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	shared/GLee.h	1650;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	include/GL/glext.h	1203;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	shared/GLee.h	2864;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	include/GL/glext.h	3635;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	shared/GLee.h	7871;"	d
GL_MAX_TEXTURE_LOD_BIAS	include/GL/glext.h	295;"	d
GL_MAX_TEXTURE_LOD_BIAS	shared/GLee.h	1346;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	include/GL/glext.h	2668;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	shared/GLee.h	5641;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	include/GL/glext.h	2675;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	shared/GLee.h	5653;"	d
GL_MAX_TEXTURE_SIZE	include/GL/gl.h	513;"	d
GL_MAX_TEXTURE_STACK_DEPTH	include/GL/gl.h	519;"	d
GL_MAX_TEXTURE_UNITS	include/GL/gl.h	1787;"	d
GL_MAX_TEXTURE_UNITS	include/GL/glext.h	247;"	d
GL_MAX_TEXTURE_UNITS	shared/GLee.h	1109;"	d
GL_MAX_TEXTURE_UNITS_ARB	include/GL/gl.h	2003;"	d
GL_MAX_TEXTURE_UNITS_ARB	include/GL/glext.h	925;"	d
GL_MAX_TEXTURE_UNITS_ARB	shared/GLee.h	2068;"	d
GL_MAX_TRACK_MATRICES_NV	include/GL/glext.h	3083;"	d
GL_MAX_TRACK_MATRICES_NV	shared/GLee.h	6480;"	d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	include/GL/glext.h	3082;"	d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	shared/GLee.h	6479;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_ATTRIBS_NV	include/GL/glext.h	4048;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_ATTRIBS_NV	shared/GLee.h	8801;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	include/GL/glext.h	556;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT	include/GL/glext.h	4144;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	include/GL/glext.h	557;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT	include/GL/glext.h	4145;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV	include/GL/glext.h	4049;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV	shared/GLee.h	8802;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	include/GL/glext.h	549;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT	include/GL/glext.h	4146;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV	include/GL/glext.h	4038;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV	shared/GLee.h	8791;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	include/GL/glext.h	1578;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	include/GL/glext.h	1577;"	d
GL_MAX_VARYING_COMPONENTS	include/GL/glext.h	535;"	d
GL_MAX_VARYING_COMPONENTS_EXT	include/GL/glext.h	3896;"	d
GL_MAX_VARYING_COMPONENTS_EXT	shared/GLee.h	8568;"	d
GL_MAX_VARYING_FLOATS	include/GL/glext.h	424;"	d
GL_MAX_VARYING_FLOATS	shared/GLee.h	1655;"	d
GL_MAX_VARYING_FLOATS_ARB	include/GL/glext.h	1288;"	d
GL_MAX_VARYING_FLOATS_ARB	shared/GLee.h	3143;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	include/GL/glext.h	2703;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	shared/GLee.h	5705;"	d
GL_MAX_VERTEX_ATTRIBS	include/GL/glext.h	417;"	d
GL_MAX_VERTEX_ATTRIBS	shared/GLee.h	1647;"	d
GL_MAX_VERTEX_ATTRIBS_ARB	include/GL/glext.h	1125;"	d
GL_MAX_VERTEX_ATTRIBS_ARB	shared/GLee.h	2595;"	d
GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT	include/GL/glext.h	4057;"	d
GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT	shared/GLee.h	8605;"	d
GL_MAX_VERTEX_HINT_PGI	include/GL/glext.h	2224;"	d
GL_MAX_VERTEX_HINT_PGI	shared/GLee.h	4432;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	include/GL/glext.h	830;"	d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	include/GL/glext.h	3399;"	d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	shared/GLee.h	7139;"	d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	include/GL/glext.h	3401;"	d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	shared/GLee.h	7141;"	d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	include/GL/glext.h	3403;"	d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	shared/GLee.h	7143;"	d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	include/GL/glext.h	3402;"	d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	shared/GLee.h	7142;"	d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	include/GL/glext.h	3400;"	d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	shared/GLee.h	7140;"	d
GL_MAX_VERTEX_STREAMS_ATI	include/GL/glext.h	3443;"	d
GL_MAX_VERTEX_STREAMS_ATI	shared/GLee.h	7314;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	include/GL/glext.h	425;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	shared/GLee.h	1656;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	include/GL/glext.h	1289;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	shared/GLee.h	3144;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	include/GL/glext.h	1573;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	include/GL/glext.h	423;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	shared/GLee.h	1654;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	include/GL/glext.h	1287;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	shared/GLee.h	3142;"	d
GL_MAX_VERTEX_UNITS_ARB	include/GL/glext.h	991;"	d
GL_MAX_VERTEX_UNITS_ARB	shared/GLee.h	2318;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB	include/GL/glext.h	1499;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_EXT	include/GL/glext.h	3895;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_EXT	shared/GLee.h	8567;"	d
GL_MAX_VIEWPORT_DIMS	include/GL/gl.h	520;"	d
GL_MESAX_texture_stack	include/GL/glext.h	8399;"	d
GL_MESAX_texture_stack	shared/GLee.h	9259;"	d
GL_MESA_pack_invert	include/GL/glext.h	8291;"	d
GL_MESA_pack_invert	shared/GLee.h	8193;"	d
GL_MESA_packed_depth_stencil	include/GL/gl.h	2120;"	d
GL_MESA_program_debug	include/GL/gl.h	2132;"	d
GL_MESA_resize_buffers	include/GL/glext.h	7211;"	d
GL_MESA_resize_buffers	shared/GLee.h	5859;"	d
GL_MESA_shader_debug	include/GL/gl.h	2098;"	d
GL_MESA_texture_array	include/GL/gl.h	2153;"	d
GL_MESA_window_pos	include/GL/glext.h	7219;"	d
GL_MESA_window_pos	shared/GLee.h	5870;"	d
GL_MESA_ycbcr_texture	include/GL/glext.h	8295;"	d
GL_MESA_ycbcr_texture	shared/GLee.h	8202;"	d
GL_MIN	include/GL/gl.h	1627;"	d
GL_MIN	include/GL/glext.h	109;"	d
GL_MIN	shared/GLee.h	998;"	d
GL_MINMAX	include/GL/gl.h	1622;"	d
GL_MINMAX	include/GL/glext.h	147;"	d
GL_MINMAX	shared/GLee.h	1033;"	d
GL_MINMAX_EXT	include/GL/glext.h	1808;"	d
GL_MINMAX_EXT	shared/GLee.h	3492;"	d
GL_MINMAX_FORMAT	include/GL/gl.h	1623;"	d
GL_MINMAX_FORMAT	include/GL/glext.h	148;"	d
GL_MINMAX_FORMAT	shared/GLee.h	1034;"	d
GL_MINMAX_FORMAT_EXT	include/GL/glext.h	1809;"	d
GL_MINMAX_FORMAT_EXT	shared/GLee.h	3493;"	d
GL_MINMAX_SINK	include/GL/gl.h	1624;"	d
GL_MINMAX_SINK	include/GL/glext.h	149;"	d
GL_MINMAX_SINK	shared/GLee.h	1035;"	d
GL_MINMAX_SINK_EXT	include/GL/glext.h	1810;"	d
GL_MINMAX_SINK_EXT	shared/GLee.h	3494;"	d
GL_MINOR_VERSION	include/GL/glext.h	517;"	d
GL_MIN_EXT	include/GL/glext.h	2046;"	d
GL_MIN_EXT	shared/GLee.h	4025;"	d
GL_MIN_INTENSITY_SGIS	shared/GLee.h	9363;"	d
GL_MIN_LUMINANCE_SGIS	shared/GLee.h	9361;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	include/GL/glext.h	531;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET_NV	include/GL/glext.h	3859;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET_NV	shared/GLee.h	8862;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	include/GL/glext.h	1702;"	d
GL_MIN_SAMPLE_SHADING_VALUE	include/GL/glext.h	1688;"	d
GL_MIRRORED_REPEAT	include/GL/glext.h	294;"	d
GL_MIRRORED_REPEAT	shared/GLee.h	1330;"	d
GL_MIRRORED_REPEAT_ARB	include/GL/glext.h	1082;"	d
GL_MIRRORED_REPEAT_ARB	shared/GLee.h	2479;"	d
GL_MIRRORED_REPEAT_IBM	include/GL/glext.h	2935;"	d
GL_MIRRORED_REPEAT_IBM	shared/GLee.h	6254;"	d
GL_MIRROR_CLAMP_ATI	include/GL/glext.h	2924;"	d
GL_MIRROR_CLAMP_ATI	shared/GLee.h	6212;"	d
GL_MIRROR_CLAMP_EXT	include/GL/glext.h	3689;"	d
GL_MIRROR_CLAMP_EXT	shared/GLee.h	8172;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	include/GL/glext.h	3691;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	shared/GLee.h	8174;"	d
GL_MIRROR_CLAMP_TO_EDGE_ATI	include/GL/glext.h	2925;"	d
GL_MIRROR_CLAMP_TO_EDGE_ATI	shared/GLee.h	6213;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	include/GL/glext.h	3690;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	shared/GLee.h	8173;"	d
GL_MODELVIEW	include/GL/gl.h	248;"	d
GL_MODELVIEW0_ARB	include/GL/glext.h	1001;"	d
GL_MODELVIEW0_ARB	shared/GLee.h	2328;"	d
GL_MODELVIEW0_EXT	include/GL/glext.h	2684;"	d
GL_MODELVIEW0_EXT	shared/GLee.h	5667;"	d
GL_MODELVIEW0_MATRIX_EXT	include/GL/glext.h	2681;"	d
GL_MODELVIEW0_MATRIX_EXT	shared/GLee.h	5664;"	d
GL_MODELVIEW0_STACK_DEPTH_EXT	include/GL/glext.h	2679;"	d
GL_MODELVIEW0_STACK_DEPTH_EXT	shared/GLee.h	5662;"	d
GL_MODELVIEW10_ARB	include/GL/glext.h	1011;"	d
GL_MODELVIEW10_ARB	shared/GLee.h	2338;"	d
GL_MODELVIEW11_ARB	include/GL/glext.h	1012;"	d
GL_MODELVIEW11_ARB	shared/GLee.h	2339;"	d
GL_MODELVIEW12_ARB	include/GL/glext.h	1013;"	d
GL_MODELVIEW12_ARB	shared/GLee.h	2340;"	d
GL_MODELVIEW13_ARB	include/GL/glext.h	1014;"	d
GL_MODELVIEW13_ARB	shared/GLee.h	2341;"	d
GL_MODELVIEW14_ARB	include/GL/glext.h	1015;"	d
GL_MODELVIEW14_ARB	shared/GLee.h	2342;"	d
GL_MODELVIEW15_ARB	include/GL/glext.h	1016;"	d
GL_MODELVIEW15_ARB	shared/GLee.h	2343;"	d
GL_MODELVIEW16_ARB	include/GL/glext.h	1017;"	d
GL_MODELVIEW16_ARB	shared/GLee.h	2344;"	d
GL_MODELVIEW17_ARB	include/GL/glext.h	1018;"	d
GL_MODELVIEW17_ARB	shared/GLee.h	2345;"	d
GL_MODELVIEW18_ARB	include/GL/glext.h	1019;"	d
GL_MODELVIEW18_ARB	shared/GLee.h	2346;"	d
GL_MODELVIEW19_ARB	include/GL/glext.h	1020;"	d
GL_MODELVIEW19_ARB	shared/GLee.h	2347;"	d
GL_MODELVIEW1_ARB	include/GL/glext.h	1002;"	d
GL_MODELVIEW1_ARB	shared/GLee.h	2329;"	d
GL_MODELVIEW1_EXT	include/GL/glext.h	2685;"	d
GL_MODELVIEW1_EXT	shared/GLee.h	5668;"	d
GL_MODELVIEW1_MATRIX_EXT	include/GL/glext.h	2682;"	d
GL_MODELVIEW1_MATRIX_EXT	shared/GLee.h	5665;"	d
GL_MODELVIEW1_STACK_DEPTH_EXT	include/GL/glext.h	2680;"	d
GL_MODELVIEW1_STACK_DEPTH_EXT	shared/GLee.h	5663;"	d
GL_MODELVIEW20_ARB	include/GL/glext.h	1021;"	d
GL_MODELVIEW20_ARB	shared/GLee.h	2348;"	d
GL_MODELVIEW21_ARB	include/GL/glext.h	1022;"	d
GL_MODELVIEW21_ARB	shared/GLee.h	2349;"	d
GL_MODELVIEW22_ARB	include/GL/glext.h	1023;"	d
GL_MODELVIEW22_ARB	shared/GLee.h	2350;"	d
GL_MODELVIEW23_ARB	include/GL/glext.h	1024;"	d
GL_MODELVIEW23_ARB	shared/GLee.h	2351;"	d
GL_MODELVIEW24_ARB	include/GL/glext.h	1025;"	d
GL_MODELVIEW24_ARB	shared/GLee.h	2352;"	d
GL_MODELVIEW25_ARB	include/GL/glext.h	1026;"	d
GL_MODELVIEW25_ARB	shared/GLee.h	2353;"	d
GL_MODELVIEW26_ARB	include/GL/glext.h	1027;"	d
GL_MODELVIEW26_ARB	shared/GLee.h	2354;"	d
GL_MODELVIEW27_ARB	include/GL/glext.h	1028;"	d
GL_MODELVIEW27_ARB	shared/GLee.h	2355;"	d
GL_MODELVIEW28_ARB	include/GL/glext.h	1029;"	d
GL_MODELVIEW28_ARB	shared/GLee.h	2356;"	d
GL_MODELVIEW29_ARB	include/GL/glext.h	1030;"	d
GL_MODELVIEW29_ARB	shared/GLee.h	2357;"	d
GL_MODELVIEW2_ARB	include/GL/glext.h	1003;"	d
GL_MODELVIEW2_ARB	shared/GLee.h	2330;"	d
GL_MODELVIEW30_ARB	include/GL/glext.h	1031;"	d
GL_MODELVIEW30_ARB	shared/GLee.h	2358;"	d
GL_MODELVIEW31_ARB	include/GL/glext.h	1032;"	d
GL_MODELVIEW31_ARB	shared/GLee.h	2359;"	d
GL_MODELVIEW3_ARB	include/GL/glext.h	1004;"	d
GL_MODELVIEW3_ARB	shared/GLee.h	2331;"	d
GL_MODELVIEW4_ARB	include/GL/glext.h	1005;"	d
GL_MODELVIEW4_ARB	shared/GLee.h	2332;"	d
GL_MODELVIEW5_ARB	include/GL/glext.h	1006;"	d
GL_MODELVIEW5_ARB	shared/GLee.h	2333;"	d
GL_MODELVIEW6_ARB	include/GL/glext.h	1007;"	d
GL_MODELVIEW6_ARB	shared/GLee.h	2334;"	d
GL_MODELVIEW7_ARB	include/GL/glext.h	1008;"	d
GL_MODELVIEW7_ARB	shared/GLee.h	2335;"	d
GL_MODELVIEW8_ARB	include/GL/glext.h	1009;"	d
GL_MODELVIEW8_ARB	shared/GLee.h	2336;"	d
GL_MODELVIEW9_ARB	include/GL/glext.h	1010;"	d
GL_MODELVIEW9_ARB	shared/GLee.h	2337;"	d
GL_MODELVIEW_MATRIX	include/GL/gl.h	541;"	d
GL_MODELVIEW_PROJECTION_NV	include/GL/glext.h	3077;"	d
GL_MODELVIEW_PROJECTION_NV	shared/GLee.h	6474;"	d
GL_MODELVIEW_STACK_DEPTH	include/GL/gl.h	542;"	d
GL_MODULATE	include/GL/gl.h	678;"	d
GL_MODULATE_ADD_ATI	include/GL/glext.h	3593;"	d
GL_MODULATE_ADD_ATI	shared/GLee.h	7814;"	d
GL_MODULATE_SIGNED_ADD_ATI	include/GL/glext.h	3594;"	d
GL_MODULATE_SIGNED_ADD_ATI	shared/GLee.h	7815;"	d
GL_MODULATE_SUBTRACT_ATI	include/GL/glext.h	3595;"	d
GL_MODULATE_SUBTRACT_ATI	shared/GLee.h	7816;"	d
GL_MOV_ATI	include/GL/glext.h	3265;"	d
GL_MOV_ATI	shared/GLee.h	6906;"	d
GL_MULT	include/GL/gl.h	365;"	d
GL_MULTISAMPLE	include/GL/gl.h	1814;"	d
GL_MULTISAMPLE	include/GL/glext.h	217;"	d
GL_MULTISAMPLE	shared/GLee.h	1114;"	d
GL_MULTISAMPLE_3DFX	include/GL/glext.h	2857;"	d
GL_MULTISAMPLE_3DFX	shared/GLee.h	6088;"	d
GL_MULTISAMPLE_ARB	include/GL/glext.h	936;"	d
GL_MULTISAMPLE_ARB	shared/GLee.h	2203;"	d
GL_MULTISAMPLE_BIT	include/GL/gl.h	1822;"	d
GL_MULTISAMPLE_BIT	include/GL/glext.h	252;"	d
GL_MULTISAMPLE_BIT	shared/GLee.h	1122;"	d
GL_MULTISAMPLE_BIT_3DFX	include/GL/glext.h	2860;"	d
GL_MULTISAMPLE_BIT_3DFX	shared/GLee.h	6091;"	d
GL_MULTISAMPLE_BIT_ARB	include/GL/glext.h	944;"	d
GL_MULTISAMPLE_BIT_ARB	shared/GLee.h	2211;"	d
GL_MULTISAMPLE_BIT_EXT	include/GL/glext.h	2883;"	d
GL_MULTISAMPLE_BIT_EXT	shared/GLee.h	6127;"	d
GL_MULTISAMPLE_COVERAGE_MODES_NV	include/GL/glext.h	4006;"	d
GL_MULTISAMPLE_COVERAGE_MODES_NV	shared/GLee.h	8931;"	d
GL_MULTISAMPLE_EXT	include/GL/glext.h	2867;"	d
GL_MULTISAMPLE_EXT	shared/GLee.h	6111;"	d
GL_MULTISAMPLE_FILTER_HINT_NV	include/GL/glext.h	3471;"	d
GL_MULTISAMPLE_FILTER_HINT_NV	shared/GLee.h	7509;"	d
GL_MULTISAMPLE_SGIS	include/GL/glext.h	1949;"	d
GL_MULTISAMPLE_SGIS	shared/GLee.h	3850;"	d
GL_MUL_ATI	include/GL/glext.h	3267;"	d
GL_MUL_ATI	shared/GLee.h	6908;"	d
GL_MVP_MATRIX_EXT	include/GL/glext.h	3429;"	d
GL_MVP_MATRIX_EXT	shared/GLee.h	7169;"	d
GL_N3F_V3F	include/GL/gl.h	236;"	d
GL_NAME_STACK_DEPTH	include/GL/gl.h	543;"	d
GL_NAND	include/GL/gl.h	440;"	d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	include/GL/glext.h	2250;"	d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	shared/GLee.h	4463;"	d
GL_NATIVE_GRAPHICS_END_HINT_PGI	include/GL/glext.h	2251;"	d
GL_NATIVE_GRAPHICS_END_HINT_PGI	shared/GLee.h	4464;"	d
GL_NATIVE_GRAPHICS_HANDLE_PGI	include/GL/glext.h	2249;"	d
GL_NATIVE_GRAPHICS_HANDLE_PGI	shared/GLee.h	4462;"	d
GL_NEAREST	include/GL/gl.h	679;"	d
GL_NEAREST_CLIPMAP_LINEAR_SGIX	include/GL/glext.h	2025;"	d
GL_NEAREST_CLIPMAP_LINEAR_SGIX	shared/GLee.h	3984;"	d
GL_NEAREST_CLIPMAP_NEAREST_SGIX	include/GL/glext.h	2024;"	d
GL_NEAREST_CLIPMAP_NEAREST_SGIX	shared/GLee.h	3983;"	d
GL_NEAREST_MIPMAP_LINEAR	include/GL/gl.h	669;"	d
GL_NEAREST_MIPMAP_NEAREST	include/GL/gl.h	668;"	d
GL_NEGATE_BIT_ATI	include/GL/glext.h	3302;"	d
GL_NEGATE_BIT_ATI	shared/GLee.h	6943;"	d
GL_NEGATIVE_ONE_EXT	include/GL/glext.h	3425;"	d
GL_NEGATIVE_ONE_EXT	shared/GLee.h	7165;"	d
GL_NEGATIVE_W_EXT	include/GL/glext.h	3422;"	d
GL_NEGATIVE_W_EXT	shared/GLee.h	7162;"	d
GL_NEGATIVE_X_EXT	include/GL/glext.h	3419;"	d
GL_NEGATIVE_X_EXT	shared/GLee.h	7159;"	d
GL_NEGATIVE_Y_EXT	include/GL/glext.h	3420;"	d
GL_NEGATIVE_Y_EXT	shared/GLee.h	7160;"	d
GL_NEGATIVE_Z_EXT	include/GL/glext.h	3421;"	d
GL_NEGATIVE_Z_EXT	shared/GLee.h	7161;"	d
GL_NEVER	include/GL/gl.h	296;"	d
GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV	include/GL/glext.h	4326;"	d
GL_NICEST	include/GL/gl.h	588;"	d
GL_NONE	include/GL/gl.h	468;"	d
GL_NOOP	include/GL/gl.h	437;"	d
GL_NOR	include/GL/gl.h	442;"	d
GL_NORMALIZE	include/GL/gl.h	346;"	d
GL_NORMALIZED_RANGE_EXT	include/GL/glext.h	3426;"	d
GL_NORMALIZED_RANGE_EXT	shared/GLee.h	7166;"	d
GL_NORMAL_ARRAY	include/GL/gl.h	206;"	d
GL_NORMAL_ARRAY_ADDRESS_NV	include/GL/glext.h	4373;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	include/GL/glext.h	362;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	shared/GLee.h	1510;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	1214;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	shared/GLee.h	2880;"	d
GL_NORMAL_ARRAY_COUNT_EXT	include/GL/glext.h	1984;"	d
GL_NORMAL_ARRAY_COUNT_EXT	shared/GLee.h	3901;"	d
GL_NORMAL_ARRAY_EXT	include/GL/glext.h	1973;"	d
GL_NORMAL_ARRAY_EXT	shared/GLee.h	3890;"	d
GL_NORMAL_ARRAY_LENGTH_NV	include/GL/glext.h	4383;"	d
GL_NORMAL_ARRAY_LIST_IBM	include/GL/glext.h	2812;"	d
GL_NORMAL_ARRAY_LIST_IBM	shared/GLee.h	5989;"	d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	include/GL/glext.h	2820;"	d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	shared/GLee.h	5997;"	d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	include/GL/glext.h	2450;"	d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	shared/GLee.h	4942;"	d
GL_NORMAL_ARRAY_POINTER	include/GL/gl.h	226;"	d
GL_NORMAL_ARRAY_POINTER_EXT	include/GL/glext.h	1999;"	d
GL_NORMAL_ARRAY_POINTER_EXT	shared/GLee.h	3916;"	d
GL_NORMAL_ARRAY_STRIDE	include/GL/gl.h	215;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	include/GL/glext.h	1983;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	shared/GLee.h	3900;"	d
GL_NORMAL_ARRAY_TYPE	include/GL/gl.h	214;"	d
GL_NORMAL_ARRAY_TYPE_EXT	include/GL/glext.h	1982;"	d
GL_NORMAL_ARRAY_TYPE_EXT	shared/GLee.h	3899;"	d
GL_NORMAL_BIT_PGI	include/GL/glext.h	2236;"	d
GL_NORMAL_BIT_PGI	shared/GLee.h	4444;"	d
GL_NORMAL_MAP	include/GL/gl.h	1789;"	d
GL_NORMAL_MAP	include/GL/glext.h	253;"	d
GL_NORMAL_MAP	shared/GLee.h	1123;"	d
GL_NORMAL_MAP_ARB	include/GL/glext.h	951;"	d
GL_NORMAL_MAP_ARB	shared/GLee.h	2231;"	d
GL_NORMAL_MAP_EXT	include/GL/glext.h	2646;"	d
GL_NORMAL_MAP_EXT	shared/GLee.h	5604;"	d
GL_NORMAL_MAP_NV	include/GL/glext.h	2641;"	d
GL_NORMAL_MAP_NV	shared/GLee.h	5594;"	d
GL_NOTEQUAL	include/GL/gl.h	301;"	d
GL_NO_ERROR	include/GL/gl.h	696;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	include/GL/gl.h	1811;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	include/GL/glext.h	240;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	shared/GLee.h	1144;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	include/GL/glext.h	975;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	shared/GLee.h	2260;"	d
GL_NUM_EXTENSIONS	include/GL/glext.h	518;"	d
GL_NUM_FILL_STREAMS_NV	include/GL/glext.h	4129;"	d
GL_NUM_FRAGMENT_CONSTANTS_ATI	include/GL/glext.h	3278;"	d
GL_NUM_FRAGMENT_CONSTANTS_ATI	shared/GLee.h	6919;"	d
GL_NUM_FRAGMENT_REGISTERS_ATI	include/GL/glext.h	3277;"	d
GL_NUM_FRAGMENT_REGISTERS_ATI	shared/GLee.h	6918;"	d
GL_NUM_GENERAL_COMBINERS_NV	include/GL/glext.h	2749;"	d
GL_NUM_GENERAL_COMBINERS_NV	shared/GLee.h	5762;"	d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	include/GL/glext.h	3282;"	d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	shared/GLee.h	6923;"	d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	include/GL/glext.h	3280;"	d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	shared/GLee.h	6921;"	d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	include/GL/glext.h	3281;"	d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	shared/GLee.h	6922;"	d
GL_NUM_LOOPBACK_COMPONENTS_ATI	include/GL/glext.h	3283;"	d
GL_NUM_LOOPBACK_COMPONENTS_ATI	shared/GLee.h	6924;"	d
GL_NUM_PASSES_ATI	include/GL/glext.h	3279;"	d
GL_NUM_PASSES_ATI	shared/GLee.h	6920;"	d
GL_NUM_VIDEO_CAPTURE_STREAMS_NV	include/GL/glext.h	4325;"	d
GL_NV_blend_square	include/GL/glext.h	7203;"	d
GL_NV_blend_square	shared/GLee.h	5838;"	d
GL_NV_conditional_render	include/GL/glext.h	8739;"	d
GL_NV_copy_depth_to_color	include/GL/glext.h	7623;"	d
GL_NV_copy_depth_to_color	shared/GLee.h	6800;"	d
GL_NV_copy_image	include/GL/glext.h	9365;"	d
GL_NV_depth_buffer_float	include/GL/glext.h	8611;"	d
GL_NV_depth_buffer_float	shared/GLee.h	8746;"	d
GL_NV_depth_clamp	include/GL/glext.h	7929;"	d
GL_NV_depth_clamp	shared/GLee.h	7515;"	d
GL_NV_evaluators	include/GL/glext.h	7411;"	d
GL_NV_evaluators	shared/GLee.h	6260;"	d
GL_NV_explicit_multisample	include/GL/glext.h	9173;"	d
GL_NV_fence	include/GL/glext.h	7391;"	d
GL_NV_fence	shared/GLee.h	6219;"	d
GL_NV_float_buffer	include/GL/glext.h	8086;"	d
GL_NV_float_buffer	shared/GLee.h	7842;"	d
GL_NV_fog_distance	include/GL/glext.h	7195;"	d
GL_NV_fog_distance	shared/GLee.h	5816;"	d
GL_NV_fragment_program	include/GL/glext.h	8090;"	d
GL_NV_fragment_program	shared/GLee.h	7865;"	d
GL_NV_fragment_program2	include/GL/glext.h	8307;"	d
GL_NV_fragment_program2	shared/GLee.h	8233;"	d
GL_NV_fragment_program4	include/GL/glext.h	8623;"	d
GL_NV_fragment_program_option	include/GL/glext.h	8303;"	d
GL_NV_fragment_program_option	shared/GLee.h	8225;"	d
GL_NV_framebuffer_multisample_coverage	include/GL/glext.h	8627;"	d
GL_NV_framebuffer_multisample_coverage	shared/GLee.h	8923;"	d
GL_NV_geometry_program4	include/GL/glext.h	8471;"	d
GL_NV_geometry_program4	shared/GLee.h	8845;"	d
GL_NV_geometry_shader4	include/GL/glext.h	8639;"	d
GL_NV_gpu_program4	include/GL/glext.h	8433;"	d
GL_NV_gpu_program4	shared/GLee.h	8859;"	d
GL_NV_half_float	include/GL/glext.h	8109;"	d
GL_NV_half_float	shared/GLee.h	7897;"	d
GL_NV_light_max_exponent	include/GL/glext.h	7149;"	d
GL_NV_light_max_exponent	shared/GLee.h	5689;"	d
GL_NV_multisample_filter_hint	include/GL/glext.h	7925;"	d
GL_NV_multisample_filter_hint	shared/GLee.h	7506;"	d
GL_NV_occlusion_query	include/GL/glext.h	7933;"	d
GL_NV_occlusion_query	shared/GLee.h	7524;"	d
GL_NV_packed_depth_stencil	include/GL/glext.h	7435;"	d
GL_NV_packed_depth_stencil	shared/GLee.h	6319;"	d
GL_NV_parameter_buffer_object	include/GL/glext.h	8643;"	d
GL_NV_parameter_buffer_object	shared/GLee.h	9053;"	d
GL_NV_parameter_buffer_object2	include/GL/glext.h	9385;"	d
GL_NV_pixel_data_range	include/GL/glext.h	8207;"	d
GL_NV_pixel_data_range	shared/GLee.h	8044;"	d
GL_NV_point_sprite	include/GL/glext.h	7953;"	d
GL_NV_point_sprite	shared/GLee.h	7557;"	d
GL_NV_present_video	include/GL/glext.h	8749;"	d
GL_NV_primitive_restart	include/GL/glext.h	8217;"	d
GL_NV_primitive_restart	shared/GLee.h	8064;"	d
GL_NV_register_combiners	include/GL/glext.h	7163;"	d
GL_NV_register_combiners	shared/GLee.h	5718;"	d
GL_NV_register_combiners2	include/GL/glext.h	7439;"	d
GL_NV_register_combiners2	shared/GLee.h	6329;"	d
GL_NV_shader_buffer_load	include/GL/glext.h	9389;"	d
GL_NV_texgen_emboss	include/GL/glext.h	7199;"	d
GL_NV_texgen_emboss	shared/GLee.h	5827;"	d
GL_NV_texgen_reflection	include/GL/glext.h	7117;"	d
GL_NV_texgen_reflection	shared/GLee.h	5591;"	d
GL_NV_texture_barrier	include/GL/glext.h	9453;"	d
GL_NV_texture_compression_vtc	include/GL/glext.h	7449;"	d
GL_NV_texture_compression_vtc	shared/GLee.h	6344;"	d
GL_NV_texture_env_combine4	include/GL/glext.h	7207;"	d
GL_NV_texture_env_combine4	shared/GLee.h	5846;"	d
GL_NV_texture_expand_normal	include/GL/glext.h	8227;"	d
GL_NV_texture_expand_normal	shared/GLee.h	8080;"	d
GL_NV_texture_rectangle	include/GL/glext.h	7453;"	d
GL_NV_texture_rectangle	shared/GLee.h	6352;"	d
GL_NV_texture_shader	include/GL/glext.h	7457;"	d
GL_NV_texture_shader	shared/GLee.h	6364;"	d
GL_NV_texture_shader2	include/GL/glext.h	7461;"	d
GL_NV_texture_shader2	shared/GLee.h	6445;"	d
GL_NV_texture_shader3	include/GL/glext.h	7963;"	d
GL_NV_texture_shader3	shared/GLee.h	7574;"	d
GL_NV_transform_feedback	include/GL/glext.h	8673;"	d
GL_NV_transform_feedback	shared/GLee.h	8779;"	d
GL_NV_transform_feedback2	include/GL/glext.h	9185;"	d
GL_NV_vertex_array_range	include/GL/glext.h	7153;"	d
GL_NV_vertex_array_range	shared/GLee.h	5699;"	d
GL_NV_vertex_array_range2	include/GL/glext.h	7465;"	d
GL_NV_vertex_array_range2	shared/GLee.h	6454;"	d
GL_NV_vertex_buffer_unified_memory	include/GL/glext.h	9423;"	d
GL_NV_vertex_program	include/GL/glext.h	7469;"	d
GL_NV_vertex_program	shared/GLee.h	6463;"	d
GL_NV_vertex_program1_1	include/GL/glext.h	7967;"	d
GL_NV_vertex_program1_1	shared/GLee.h	7599;"	d
GL_NV_vertex_program2	include/GL/glext.h	8231;"	d
GL_NV_vertex_program2	shared/GLee.h	8089;"	d
GL_NV_vertex_program2_option	include/GL/glext.h	8311;"	d
GL_NV_vertex_program2_option	shared/GLee.h	8246;"	d
GL_NV_vertex_program3	include/GL/glext.h	8315;"	d
GL_NV_vertex_program3	shared/GLee.h	8254;"	d
GL_NV_vertex_program4	include/GL/glext.h	8493;"	d
GL_NV_video_capture	include/GL/glext.h	9335;"	d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	include/GL/glext.h	1291;"	d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	shared/GLee.h	3146;"	d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	include/GL/glext.h	1292;"	d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	shared/GLee.h	3147;"	d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	include/GL/glext.h	1280;"	d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	shared/GLee.h	3013;"	d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	include/GL/glext.h	1281;"	d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	shared/GLee.h	3014;"	d
GL_OBJECT_ATTACHED_OBJECTS_ARB	include/GL/glext.h	1279;"	d
GL_OBJECT_ATTACHED_OBJECTS_ARB	shared/GLee.h	3012;"	d
GL_OBJECT_BUFFER_SIZE_ATI	include/GL/glext.h	3323;"	d
GL_OBJECT_BUFFER_SIZE_ATI	shared/GLee.h	7022;"	d
GL_OBJECT_BUFFER_USAGE_ATI	include/GL/glext.h	3324;"	d
GL_OBJECT_BUFFER_USAGE_ATI	shared/GLee.h	7023;"	d
GL_OBJECT_COMPILE_STATUS_ARB	include/GL/glext.h	1275;"	d
GL_OBJECT_COMPILE_STATUS_ARB	shared/GLee.h	3008;"	d
GL_OBJECT_DELETE_STATUS_ARB	include/GL/glext.h	1274;"	d
GL_OBJECT_DELETE_STATUS_ARB	shared/GLee.h	3007;"	d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	include/GL/glext.h	2907;"	d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	shared/GLee.h	6177;"	d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	include/GL/glext.h	2905;"	d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	shared/GLee.h	6175;"	d
GL_OBJECT_INFO_LOG_LENGTH_ARB	include/GL/glext.h	1278;"	d
GL_OBJECT_INFO_LOG_LENGTH_ARB	shared/GLee.h	3011;"	d
GL_OBJECT_LINEAR	include/GL/gl.h	672;"	d
GL_OBJECT_LINE_SGIS	include/GL/glext.h	2911;"	d
GL_OBJECT_LINE_SGIS	shared/GLee.h	6181;"	d
GL_OBJECT_LINK_STATUS_ARB	include/GL/glext.h	1276;"	d
GL_OBJECT_LINK_STATUS_ARB	shared/GLee.h	3009;"	d
GL_OBJECT_PLANE	include/GL/gl.h	673;"	d
GL_OBJECT_POINT_SGIS	include/GL/glext.h	2909;"	d
GL_OBJECT_POINT_SGIS	shared/GLee.h	6179;"	d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	include/GL/glext.h	1282;"	d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	shared/GLee.h	3015;"	d
GL_OBJECT_SUBTYPE_ARB	include/GL/glext.h	1252;"	d
GL_OBJECT_SUBTYPE_ARB	shared/GLee.h	2985;"	d
GL_OBJECT_TYPE	include/GL/glext.h	1639;"	d
GL_OBJECT_TYPE_ARB	include/GL/glext.h	1251;"	d
GL_OBJECT_TYPE_ARB	shared/GLee.h	2984;"	d
GL_OBJECT_VALIDATE_STATUS_ARB	include/GL/glext.h	1277;"	d
GL_OBJECT_VALIDATE_STATUS_ARB	shared/GLee.h	3010;"	d
GL_OCCLUSION_TEST_HP	include/GL/glext.h	2456;"	d
GL_OCCLUSION_TEST_HP	shared/GLee.h	4965;"	d
GL_OCCLUSION_TEST_RESULT_HP	include/GL/glext.h	2457;"	d
GL_OCCLUSION_TEST_RESULT_HP	shared/GLee.h	4966;"	d
GL_OES_byte_coordinates	shared/GLee.h	9273;"	d
GL_OES_compressed_paletted_texture	shared/GLee.h	9282;"	d
GL_OES_read_format	include/GL/glext.h	8267;"	d
GL_OES_read_format	shared/GLee.h	8146;"	d
GL_OES_single_precision	shared/GLee.h	9300;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	include/GL/glext.h	3498;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	shared/GLee.h	7583;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	include/GL/glext.h	3499;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	shared/GLee.h	7584;"	d
GL_OFFSET_HILO_TEXTURE_2D_NV	include/GL/glext.h	3496;"	d
GL_OFFSET_HILO_TEXTURE_2D_NV	shared/GLee.h	7581;"	d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	include/GL/glext.h	3497;"	d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	shared/GLee.h	7582;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	include/GL/glext.h	3492;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	shared/GLee.h	7577;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	include/GL/glext.h	3493;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	shared/GLee.h	7578;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	include/GL/glext.h	3494;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	shared/GLee.h	7579;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	include/GL/glext.h	3495;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	shared/GLee.h	7580;"	d
GL_OFFSET_TEXTURE_2D_BIAS_NV	include/GL/glext.h	3001;"	d
GL_OFFSET_TEXTURE_2D_BIAS_NV	shared/GLee.h	6383;"	d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	include/GL/glext.h	2999;"	d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	shared/GLee.h	6381;"	d
GL_OFFSET_TEXTURE_2D_NV	include/GL/glext.h	3006;"	d
GL_OFFSET_TEXTURE_2D_NV	shared/GLee.h	6388;"	d
GL_OFFSET_TEXTURE_2D_SCALE_NV	include/GL/glext.h	3000;"	d
GL_OFFSET_TEXTURE_2D_SCALE_NV	shared/GLee.h	6382;"	d
GL_OFFSET_TEXTURE_BIAS_NV	include/GL/glext.h	2998;"	d
GL_OFFSET_TEXTURE_BIAS_NV	shared/GLee.h	6380;"	d
GL_OFFSET_TEXTURE_MATRIX_NV	include/GL/glext.h	2996;"	d
GL_OFFSET_TEXTURE_MATRIX_NV	shared/GLee.h	6378;"	d
GL_OFFSET_TEXTURE_RECTANGLE_NV	include/GL/glext.h	2985;"	d
GL_OFFSET_TEXTURE_RECTANGLE_NV	shared/GLee.h	6367;"	d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	include/GL/glext.h	2986;"	d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	shared/GLee.h	6368;"	d
GL_OFFSET_TEXTURE_SCALE_NV	include/GL/glext.h	2997;"	d
GL_OFFSET_TEXTURE_SCALE_NV	shared/GLee.h	6379;"	d
GL_OML_interlace	include/GL/glext.h	7611;"	d
GL_OML_interlace	shared/GLee.h	6766;"	d
GL_OML_resample	include/GL/glext.h	7619;"	d
GL_OML_resample	shared/GLee.h	6786;"	d
GL_OML_subsample	include/GL/glext.h	7615;"	d
GL_OML_subsample	shared/GLee.h	6776;"	d
GL_ONE	include/GL/gl.h	378;"	d
GL_ONE_EXT	include/GL/glext.h	3424;"	d
GL_ONE_EXT	shared/GLee.h	7164;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	include/GL/gl.h	1561;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	include/GL/glext.h	106;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	shared/GLee.h	995;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	include/GL/glext.h	1718;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	shared/GLee.h	3328;"	d
GL_ONE_MINUS_CONSTANT_COLOR	include/GL/gl.h	1559;"	d
GL_ONE_MINUS_CONSTANT_COLOR	include/GL/glext.h	104;"	d
GL_ONE_MINUS_CONSTANT_COLOR	shared/GLee.h	993;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	include/GL/glext.h	1716;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	shared/GLee.h	3326;"	d
GL_ONE_MINUS_DST_ALPHA	include/GL/gl.h	384;"	d
GL_ONE_MINUS_DST_COLOR	include/GL/gl.h	386;"	d
GL_ONE_MINUS_SRC_ALPHA	include/GL/gl.h	382;"	d
GL_ONE_MINUS_SRC_COLOR	include/GL/gl.h	380;"	d
GL_OPERAND0_ALPHA	include/GL/gl.h	1841;"	d
GL_OPERAND0_ALPHA	include/GL/glext.h	271;"	d
GL_OPERAND0_ALPHA	shared/GLee.h	1159;"	d
GL_OPERAND0_ALPHA_ARB	include/GL/glext.h	1061;"	d
GL_OPERAND0_ALPHA_ARB	shared/GLee.h	2443;"	d
GL_OPERAND0_ALPHA_EXT	include/GL/glext.h	2555;"	d
GL_OPERAND0_ALPHA_EXT	shared/GLee.h	5272;"	d
GL_OPERAND0_RGB	include/GL/gl.h	1838;"	d
GL_OPERAND0_RGB	include/GL/glext.h	268;"	d
GL_OPERAND0_RGB	shared/GLee.h	1156;"	d
GL_OPERAND0_RGB_ARB	include/GL/glext.h	1058;"	d
GL_OPERAND0_RGB_ARB	shared/GLee.h	2440;"	d
GL_OPERAND0_RGB_EXT	include/GL/glext.h	2552;"	d
GL_OPERAND0_RGB_EXT	shared/GLee.h	5269;"	d
GL_OPERAND1_ALPHA	include/GL/gl.h	1842;"	d
GL_OPERAND1_ALPHA	include/GL/glext.h	272;"	d
GL_OPERAND1_ALPHA	shared/GLee.h	1160;"	d
GL_OPERAND1_ALPHA_ARB	include/GL/glext.h	1062;"	d
GL_OPERAND1_ALPHA_ARB	shared/GLee.h	2444;"	d
GL_OPERAND1_ALPHA_EXT	include/GL/glext.h	2556;"	d
GL_OPERAND1_ALPHA_EXT	shared/GLee.h	5273;"	d
GL_OPERAND1_RGB	include/GL/gl.h	1839;"	d
GL_OPERAND1_RGB	include/GL/glext.h	269;"	d
GL_OPERAND1_RGB	shared/GLee.h	1157;"	d
GL_OPERAND1_RGB_ARB	include/GL/glext.h	1059;"	d
GL_OPERAND1_RGB_ARB	shared/GLee.h	2441;"	d
GL_OPERAND1_RGB_EXT	include/GL/glext.h	2553;"	d
GL_OPERAND1_RGB_EXT	shared/GLee.h	5270;"	d
GL_OPERAND2_ALPHA	include/GL/gl.h	1843;"	d
GL_OPERAND2_ALPHA	include/GL/glext.h	273;"	d
GL_OPERAND2_ALPHA	shared/GLee.h	1161;"	d
GL_OPERAND2_ALPHA_ARB	include/GL/glext.h	1063;"	d
GL_OPERAND2_ALPHA_ARB	shared/GLee.h	2445;"	d
GL_OPERAND2_ALPHA_EXT	include/GL/glext.h	2557;"	d
GL_OPERAND2_ALPHA_EXT	shared/GLee.h	5274;"	d
GL_OPERAND2_RGB	include/GL/gl.h	1840;"	d
GL_OPERAND2_RGB	include/GL/glext.h	270;"	d
GL_OPERAND2_RGB	shared/GLee.h	1158;"	d
GL_OPERAND2_RGB_ARB	include/GL/glext.h	1060;"	d
GL_OPERAND2_RGB_ARB	shared/GLee.h	2442;"	d
GL_OPERAND2_RGB_EXT	include/GL/glext.h	2554;"	d
GL_OPERAND2_RGB_EXT	shared/GLee.h	5271;"	d
GL_OPERAND3_ALPHA_NV	include/GL/glext.h	2787;"	d
GL_OPERAND3_ALPHA_NV	shared/GLee.h	5853;"	d
GL_OPERAND3_RGB_NV	include/GL/glext.h	2786;"	d
GL_OPERAND3_RGB_NV	shared/GLee.h	5852;"	d
GL_OP_ADD_EXT	include/GL/glext.h	3337;"	d
GL_OP_ADD_EXT	shared/GLee.h	7077;"	d
GL_OP_CLAMP_EXT	include/GL/glext.h	3344;"	d
GL_OP_CLAMP_EXT	shared/GLee.h	7084;"	d
GL_OP_CROSS_PRODUCT_EXT	include/GL/glext.h	3353;"	d
GL_OP_CROSS_PRODUCT_EXT	shared/GLee.h	7093;"	d
GL_OP_DOT3_EXT	include/GL/glext.h	3334;"	d
GL_OP_DOT3_EXT	shared/GLee.h	7074;"	d
GL_OP_DOT4_EXT	include/GL/glext.h	3335;"	d
GL_OP_DOT4_EXT	shared/GLee.h	7075;"	d
GL_OP_EXP_BASE_2_EXT	include/GL/glext.h	3347;"	d
GL_OP_EXP_BASE_2_EXT	shared/GLee.h	7087;"	d
GL_OP_FLOOR_EXT	include/GL/glext.h	3345;"	d
GL_OP_FLOOR_EXT	shared/GLee.h	7085;"	d
GL_OP_FRAC_EXT	include/GL/glext.h	3339;"	d
GL_OP_FRAC_EXT	shared/GLee.h	7079;"	d
GL_OP_INDEX_EXT	include/GL/glext.h	3332;"	d
GL_OP_INDEX_EXT	shared/GLee.h	7072;"	d
GL_OP_LOG_BASE_2_EXT	include/GL/glext.h	3348;"	d
GL_OP_LOG_BASE_2_EXT	shared/GLee.h	7088;"	d
GL_OP_MADD_EXT	include/GL/glext.h	3338;"	d
GL_OP_MADD_EXT	shared/GLee.h	7078;"	d
GL_OP_MAX_EXT	include/GL/glext.h	3340;"	d
GL_OP_MAX_EXT	shared/GLee.h	7080;"	d
GL_OP_MIN_EXT	include/GL/glext.h	3341;"	d
GL_OP_MIN_EXT	shared/GLee.h	7081;"	d
GL_OP_MOV_EXT	include/GL/glext.h	3355;"	d
GL_OP_MOV_EXT	shared/GLee.h	7095;"	d
GL_OP_MULTIPLY_MATRIX_EXT	include/GL/glext.h	3354;"	d
GL_OP_MULTIPLY_MATRIX_EXT	shared/GLee.h	7094;"	d
GL_OP_MUL_EXT	include/GL/glext.h	3336;"	d
GL_OP_MUL_EXT	shared/GLee.h	7076;"	d
GL_OP_NEGATE_EXT	include/GL/glext.h	3333;"	d
GL_OP_NEGATE_EXT	shared/GLee.h	7073;"	d
GL_OP_POWER_EXT	include/GL/glext.h	3349;"	d
GL_OP_POWER_EXT	shared/GLee.h	7089;"	d
GL_OP_RECIP_EXT	include/GL/glext.h	3350;"	d
GL_OP_RECIP_EXT	shared/GLee.h	7090;"	d
GL_OP_RECIP_SQRT_EXT	include/GL/glext.h	3351;"	d
GL_OP_RECIP_SQRT_EXT	shared/GLee.h	7091;"	d
GL_OP_ROUND_EXT	include/GL/glext.h	3346;"	d
GL_OP_ROUND_EXT	shared/GLee.h	7086;"	d
GL_OP_SET_GE_EXT	include/GL/glext.h	3342;"	d
GL_OP_SET_GE_EXT	shared/GLee.h	7082;"	d
GL_OP_SET_LT_EXT	include/GL/glext.h	3343;"	d
GL_OP_SET_LT_EXT	shared/GLee.h	7083;"	d
GL_OP_SUB_EXT	include/GL/glext.h	3352;"	d
GL_OP_SUB_EXT	shared/GLee.h	7092;"	d
GL_OR	include/GL/gl.h	441;"	d
GL_ORDER	include/GL/gl.h	577;"	d
GL_OR_INVERTED	include/GL/gl.h	448;"	d
GL_OR_REVERSE	include/GL/gl.h	447;"	d
GL_OUTPUT_COLOR0_EXT	include/GL/glext.h	3357;"	d
GL_OUTPUT_COLOR0_EXT	shared/GLee.h	7097;"	d
GL_OUTPUT_COLOR1_EXT	include/GL/glext.h	3358;"	d
GL_OUTPUT_COLOR1_EXT	shared/GLee.h	7098;"	d
GL_OUTPUT_FOG_EXT	include/GL/glext.h	3391;"	d
GL_OUTPUT_FOG_EXT	shared/GLee.h	7131;"	d
GL_OUTPUT_TEXTURE_COORD0_EXT	include/GL/glext.h	3359;"	d
GL_OUTPUT_TEXTURE_COORD0_EXT	shared/GLee.h	7099;"	d
GL_OUTPUT_TEXTURE_COORD10_EXT	include/GL/glext.h	3369;"	d
GL_OUTPUT_TEXTURE_COORD10_EXT	shared/GLee.h	7109;"	d
GL_OUTPUT_TEXTURE_COORD11_EXT	include/GL/glext.h	3370;"	d
GL_OUTPUT_TEXTURE_COORD11_EXT	shared/GLee.h	7110;"	d
GL_OUTPUT_TEXTURE_COORD12_EXT	include/GL/glext.h	3371;"	d
GL_OUTPUT_TEXTURE_COORD12_EXT	shared/GLee.h	7111;"	d
GL_OUTPUT_TEXTURE_COORD13_EXT	include/GL/glext.h	3372;"	d
GL_OUTPUT_TEXTURE_COORD13_EXT	shared/GLee.h	7112;"	d
GL_OUTPUT_TEXTURE_COORD14_EXT	include/GL/glext.h	3373;"	d
GL_OUTPUT_TEXTURE_COORD14_EXT	shared/GLee.h	7113;"	d
GL_OUTPUT_TEXTURE_COORD15_EXT	include/GL/glext.h	3374;"	d
GL_OUTPUT_TEXTURE_COORD15_EXT	shared/GLee.h	7114;"	d
GL_OUTPUT_TEXTURE_COORD16_EXT	include/GL/glext.h	3375;"	d
GL_OUTPUT_TEXTURE_COORD16_EXT	shared/GLee.h	7115;"	d
GL_OUTPUT_TEXTURE_COORD17_EXT	include/GL/glext.h	3376;"	d
GL_OUTPUT_TEXTURE_COORD17_EXT	shared/GLee.h	7116;"	d
GL_OUTPUT_TEXTURE_COORD18_EXT	include/GL/glext.h	3377;"	d
GL_OUTPUT_TEXTURE_COORD18_EXT	shared/GLee.h	7117;"	d
GL_OUTPUT_TEXTURE_COORD19_EXT	include/GL/glext.h	3378;"	d
GL_OUTPUT_TEXTURE_COORD19_EXT	shared/GLee.h	7118;"	d
GL_OUTPUT_TEXTURE_COORD1_EXT	include/GL/glext.h	3360;"	d
GL_OUTPUT_TEXTURE_COORD1_EXT	shared/GLee.h	7100;"	d
GL_OUTPUT_TEXTURE_COORD20_EXT	include/GL/glext.h	3379;"	d
GL_OUTPUT_TEXTURE_COORD20_EXT	shared/GLee.h	7119;"	d
GL_OUTPUT_TEXTURE_COORD21_EXT	include/GL/glext.h	3380;"	d
GL_OUTPUT_TEXTURE_COORD21_EXT	shared/GLee.h	7120;"	d
GL_OUTPUT_TEXTURE_COORD22_EXT	include/GL/glext.h	3381;"	d
GL_OUTPUT_TEXTURE_COORD22_EXT	shared/GLee.h	7121;"	d
GL_OUTPUT_TEXTURE_COORD23_EXT	include/GL/glext.h	3382;"	d
GL_OUTPUT_TEXTURE_COORD23_EXT	shared/GLee.h	7122;"	d
GL_OUTPUT_TEXTURE_COORD24_EXT	include/GL/glext.h	3383;"	d
GL_OUTPUT_TEXTURE_COORD24_EXT	shared/GLee.h	7123;"	d
GL_OUTPUT_TEXTURE_COORD25_EXT	include/GL/glext.h	3384;"	d
GL_OUTPUT_TEXTURE_COORD25_EXT	shared/GLee.h	7124;"	d
GL_OUTPUT_TEXTURE_COORD26_EXT	include/GL/glext.h	3385;"	d
GL_OUTPUT_TEXTURE_COORD26_EXT	shared/GLee.h	7125;"	d
GL_OUTPUT_TEXTURE_COORD27_EXT	include/GL/glext.h	3386;"	d
GL_OUTPUT_TEXTURE_COORD27_EXT	shared/GLee.h	7126;"	d
GL_OUTPUT_TEXTURE_COORD28_EXT	include/GL/glext.h	3387;"	d
GL_OUTPUT_TEXTURE_COORD28_EXT	shared/GLee.h	7127;"	d
GL_OUTPUT_TEXTURE_COORD29_EXT	include/GL/glext.h	3388;"	d
GL_OUTPUT_TEXTURE_COORD29_EXT	shared/GLee.h	7128;"	d
GL_OUTPUT_TEXTURE_COORD2_EXT	include/GL/glext.h	3361;"	d
GL_OUTPUT_TEXTURE_COORD2_EXT	shared/GLee.h	7101;"	d
GL_OUTPUT_TEXTURE_COORD30_EXT	include/GL/glext.h	3389;"	d
GL_OUTPUT_TEXTURE_COORD30_EXT	shared/GLee.h	7129;"	d
GL_OUTPUT_TEXTURE_COORD31_EXT	include/GL/glext.h	3390;"	d
GL_OUTPUT_TEXTURE_COORD31_EXT	shared/GLee.h	7130;"	d
GL_OUTPUT_TEXTURE_COORD3_EXT	include/GL/glext.h	3362;"	d
GL_OUTPUT_TEXTURE_COORD3_EXT	shared/GLee.h	7102;"	d
GL_OUTPUT_TEXTURE_COORD4_EXT	include/GL/glext.h	3363;"	d
GL_OUTPUT_TEXTURE_COORD4_EXT	shared/GLee.h	7103;"	d
GL_OUTPUT_TEXTURE_COORD5_EXT	include/GL/glext.h	3364;"	d
GL_OUTPUT_TEXTURE_COORD5_EXT	shared/GLee.h	7104;"	d
GL_OUTPUT_TEXTURE_COORD6_EXT	include/GL/glext.h	3365;"	d
GL_OUTPUT_TEXTURE_COORD6_EXT	shared/GLee.h	7105;"	d
GL_OUTPUT_TEXTURE_COORD7_EXT	include/GL/glext.h	3366;"	d
GL_OUTPUT_TEXTURE_COORD7_EXT	shared/GLee.h	7106;"	d
GL_OUTPUT_TEXTURE_COORD8_EXT	include/GL/glext.h	3367;"	d
GL_OUTPUT_TEXTURE_COORD8_EXT	shared/GLee.h	7107;"	d
GL_OUTPUT_TEXTURE_COORD9_EXT	include/GL/glext.h	3368;"	d
GL_OUTPUT_TEXTURE_COORD9_EXT	shared/GLee.h	7108;"	d
GL_OUTPUT_VERTEX_EXT	include/GL/glext.h	3356;"	d
GL_OUTPUT_VERTEX_EXT	shared/GLee.h	7096;"	d
GL_OUT_OF_MEMORY	include/GL/gl.h	702;"	d
GL_PACK_ALIGNMENT	include/GL/gl.h	629;"	d
GL_PACK_CMYK_HINT_EXT	include/GL/glext.h	1903;"	d
GL_PACK_CMYK_HINT_EXT	shared/GLee.h	3744;"	d
GL_PACK_IMAGE_DEPTH_SGIS	include/GL/glext.h	1884;"	d
GL_PACK_IMAGE_DEPTH_SGIS	shared/GLee.h	3709;"	d
GL_PACK_IMAGE_HEIGHT	include/GL/gl.h	1515;"	d
GL_PACK_IMAGE_HEIGHT	include/GL/glext.h	63;"	d
GL_PACK_IMAGE_HEIGHT	shared/GLee.h	837;"	d
GL_PACK_IMAGE_HEIGHT_EXT	include/GL/glext.h	1776;"	d
GL_PACK_IMAGE_HEIGHT_EXT	shared/GLee.h	3407;"	d
GL_PACK_INVERT_MESA	include/GL/glext.h	3700;"	d
GL_PACK_INVERT_MESA	shared/GLee.h	8196;"	d
GL_PACK_LSB_FIRST	include/GL/gl.h	630;"	d
GL_PACK_RESAMPLE_OML	include/GL/glext.h	3175;"	d
GL_PACK_RESAMPLE_OML	shared/GLee.h	6789;"	d
GL_PACK_RESAMPLE_SGIX	include/GL/glext.h	2896;"	d
GL_PACK_RESAMPLE_SGIX	shared/GLee.h	6161;"	d
GL_PACK_ROW_BYTES_APPLE	include/GL/glext.h	4310;"	d
GL_PACK_ROW_LENGTH	include/GL/gl.h	631;"	d
GL_PACK_SKIP_IMAGES	include/GL/gl.h	1514;"	d
GL_PACK_SKIP_IMAGES	include/GL/glext.h	62;"	d
GL_PACK_SKIP_IMAGES	shared/GLee.h	836;"	d
GL_PACK_SKIP_IMAGES_EXT	include/GL/glext.h	1775;"	d
GL_PACK_SKIP_IMAGES_EXT	shared/GLee.h	3406;"	d
GL_PACK_SKIP_PIXELS	include/GL/gl.h	632;"	d
GL_PACK_SKIP_ROWS	include/GL/gl.h	633;"	d
GL_PACK_SKIP_VOLUMES_SGIS	include/GL/glext.h	1883;"	d
GL_PACK_SKIP_VOLUMES_SGIS	shared/GLee.h	3708;"	d
GL_PACK_SUBSAMPLE_RATE_SGIX	include/GL/glext.h	2830;"	d
GL_PACK_SUBSAMPLE_RATE_SGIX	shared/GLee.h	6036;"	d
GL_PACK_SWAP_BYTES	include/GL/gl.h	634;"	d
GL_PALETTE4_R5_G6_B5_OES	shared/GLee.h	9287;"	d
GL_PALETTE4_RGB5_A1_OES	shared/GLee.h	9289;"	d
GL_PALETTE4_RGB8_OES	shared/GLee.h	9285;"	d
GL_PALETTE4_RGBA4_OES	shared/GLee.h	9288;"	d
GL_PALETTE4_RGBA8_OES	shared/GLee.h	9286;"	d
GL_PALETTE8_R5_G6_B5_OES	shared/GLee.h	9292;"	d
GL_PALETTE8_RGB5_A1_OES	shared/GLee.h	9294;"	d
GL_PALETTE8_RGB8_OES	shared/GLee.h	9290;"	d
GL_PALETTE8_RGBA4_OES	shared/GLee.h	9293;"	d
GL_PALETTE8_RGBA8_OES	shared/GLee.h	9291;"	d
GL_PARALLEL_ARRAYS_INTEL	include/GL/glext.h	2448;"	d
GL_PARALLEL_ARRAYS_INTEL	shared/GLee.h	4940;"	d
GL_PARTIAL_SUCCESS_NV	include/GL/glext.h	4335;"	d
GL_PASS_THROUGH_NV	include/GL/glext.h	3004;"	d
GL_PASS_THROUGH_NV	shared/GLee.h	6386;"	d
GL_PASS_THROUGH_TOKEN	include/GL/gl.h	407;"	d
GL_PERCENTAGE_AMD	include/GL/glext.h	4200;"	d
GL_PERFMON_RESULT_AMD	include/GL/glext.h	4203;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	include/GL/glext.h	4201;"	d
GL_PERFMON_RESULT_SIZE_AMD	include/GL/glext.h	4202;"	d
GL_PERSPECTIVE_CORRECTION_HINT	include/GL/gl.h	581;"	d
GL_PERTURB_EXT	include/GL/glext.h	2496;"	d
GL_PERTURB_EXT	shared/GLee.h	5098;"	d
GL_PER_STAGE_CONSTANTS_NV	include/GL/glext.h	2971;"	d
GL_PER_STAGE_CONSTANTS_NV	shared/GLee.h	6332;"	d
GL_PGI_misc_hints	include/GL/glext.h	6541;"	d
GL_PGI_misc_hints	shared/GLee.h	4456;"	d
GL_PGI_vertex_hints	include/GL/glext.h	6537;"	d
GL_PGI_vertex_hints	shared/GLee.h	4426;"	d
GL_PHONG_HINT_WIN	include/GL/glext.h	2386;"	d
GL_PHONG_HINT_WIN	shared/GLee.h	4802;"	d
GL_PHONG_WIN	include/GL/glext.h	2385;"	d
GL_PHONG_WIN	shared/GLee.h	4801;"	d
GL_PI	c3.drawLine/drawLines.cpp	/^static const float GL_PI = 3.1415f;$/;"	v	file:
GL_PI	c3.drawObject/drawObject.cpp	14;"	d	file:
GL_PI	c3.drawPoints/drawPoints.cpp	/^static const float GL_PI = 3.1415f;$/;"	v	file:
GL_PI	c3.drawPolygonBitmap/draw.cpp	14;"	d	file:
GL_PI	c3.drawStart/draw.cpp	14;"	d	file:
GL_PI	c3.drawTriangles/triangles.cpp	/^static const float GL_PI = 3.1415f;$/;"	v	file:
GL_PI	c4.translate/draw.cpp	14;"	d	file:
GL_PI	chapt03/lines/lines.cpp	11;"	d	file:
GL_PI	chapt03/linesw/linesw.cpp	11;"	d	file:
GL_PI	chapt03/lstipple/lstipple.cpp	11;"	d	file:
GL_PI	chapt03/lstrips/lstrips.cpp	11;"	d	file:
GL_PI	chapt03/points/points.cpp	11;"	d	file:
GL_PI	chapt03/pointsz/pointsz.cpp	11;"	d	file:
GL_PI	chapt03/pstipple/pstipple.cpp	10;"	d	file:
GL_PI	chapt03/star/star.cpp	11;"	d	file:
GL_PI	chapt03/triangle/triangle.cpp	10;"	d	file:
GL_PI	template.dir/drawPoints.cpp	/^static const float GL_PI = 3.1415f;$/;"	v	file:
GL_PIXEL_COUNTER_BITS_NV	include/GL/glext.h	3479;"	d
GL_PIXEL_COUNTER_BITS_NV	shared/GLee.h	7527;"	d
GL_PIXEL_COUNT_AVAILABLE_NV	include/GL/glext.h	3482;"	d
GL_PIXEL_COUNT_AVAILABLE_NV	shared/GLee.h	7530;"	d
GL_PIXEL_COUNT_NV	include/GL/glext.h	3481;"	d
GL_PIXEL_COUNT_NV	shared/GLee.h	7529;"	d
GL_PIXEL_CUBIC_WEIGHT_EXT	include/GL/glext.h	2464;"	d
GL_PIXEL_CUBIC_WEIGHT_EXT	shared/GLee.h	4978;"	d
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS	include/GL/glext.h	1873;"	d
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS	shared/GLee.h	3667;"	d
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS	include/GL/glext.h	1872;"	d
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS	shared/GLee.h	3666;"	d
GL_PIXEL_GROUP_COLOR_SGIS	include/GL/glext.h	1874;"	d
GL_PIXEL_GROUP_COLOR_SGIS	shared/GLee.h	3668;"	d
GL_PIXEL_MAG_FILTER_EXT	include/GL/glext.h	2462;"	d
GL_PIXEL_MAG_FILTER_EXT	shared/GLee.h	4976;"	d
GL_PIXEL_MAP_A_TO_A	include/GL/gl.h	628;"	d
GL_PIXEL_MAP_A_TO_A_SIZE	include/GL/gl.h	618;"	d
GL_PIXEL_MAP_B_TO_B	include/GL/gl.h	627;"	d
GL_PIXEL_MAP_B_TO_B_SIZE	include/GL/gl.h	617;"	d
GL_PIXEL_MAP_G_TO_G	include/GL/gl.h	626;"	d
GL_PIXEL_MAP_G_TO_G_SIZE	include/GL/gl.h	616;"	d
GL_PIXEL_MAP_I_TO_A	include/GL/gl.h	624;"	d
GL_PIXEL_MAP_I_TO_A_SIZE	include/GL/gl.h	614;"	d
GL_PIXEL_MAP_I_TO_B	include/GL/gl.h	623;"	d
GL_PIXEL_MAP_I_TO_B_SIZE	include/GL/gl.h	613;"	d
GL_PIXEL_MAP_I_TO_G	include/GL/gl.h	622;"	d
GL_PIXEL_MAP_I_TO_G_SIZE	include/GL/gl.h	612;"	d
GL_PIXEL_MAP_I_TO_I	include/GL/gl.h	620;"	d
GL_PIXEL_MAP_I_TO_I_SIZE	include/GL/gl.h	610;"	d
GL_PIXEL_MAP_I_TO_R	include/GL/gl.h	621;"	d
GL_PIXEL_MAP_I_TO_R_SIZE	include/GL/gl.h	611;"	d
GL_PIXEL_MAP_R_TO_R	include/GL/gl.h	625;"	d
GL_PIXEL_MAP_R_TO_R_SIZE	include/GL/gl.h	615;"	d
GL_PIXEL_MAP_S_TO_S	include/GL/gl.h	619;"	d
GL_PIXEL_MAP_S_TO_S_SIZE	include/GL/gl.h	609;"	d
GL_PIXEL_MIN_FILTER_EXT	include/GL/glext.h	2463;"	d
GL_PIXEL_MIN_FILTER_EXT	shared/GLee.h	4977;"	d
GL_PIXEL_MODE_BIT	include/GL/gl.h	710;"	d
GL_PIXEL_PACK_BUFFER	include/GL/glext.h	477;"	d
GL_PIXEL_PACK_BUFFER	shared/GLee.h	1985;"	d
GL_PIXEL_PACK_BUFFER_ARB	include/GL/glext.h	1379;"	d
GL_PIXEL_PACK_BUFFER_ARB	shared/GLee.h	3304;"	d
GL_PIXEL_PACK_BUFFER_BINDING	include/GL/glext.h	479;"	d
GL_PIXEL_PACK_BUFFER_BINDING	shared/GLee.h	1987;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	include/GL/glext.h	1381;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	shared/GLee.h	3306;"	d
GL_PIXEL_PACK_BUFFER_BINDING_EXT	include/GL/glext.h	3712;"	d
GL_PIXEL_PACK_BUFFER_BINDING_EXT	shared/GLee.h	8218;"	d
GL_PIXEL_PACK_BUFFER_EXT	include/GL/glext.h	3710;"	d
GL_PIXEL_PACK_BUFFER_EXT	shared/GLee.h	8216;"	d
GL_PIXEL_SUBSAMPLE_2424_SGIX	include/GL/glext.h	2833;"	d
GL_PIXEL_SUBSAMPLE_2424_SGIX	shared/GLee.h	6039;"	d
GL_PIXEL_SUBSAMPLE_4242_SGIX	include/GL/glext.h	2834;"	d
GL_PIXEL_SUBSAMPLE_4242_SGIX	shared/GLee.h	6040;"	d
GL_PIXEL_SUBSAMPLE_4444_SGIX	include/GL/glext.h	2832;"	d
GL_PIXEL_SUBSAMPLE_4444_SGIX	shared/GLee.h	6038;"	d
GL_PIXEL_TEXTURE_SGIS	include/GL/glext.h	1871;"	d
GL_PIXEL_TEXTURE_SGIS	shared/GLee.h	3665;"	d
GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX	include/GL/glext.h	2417;"	d
GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX	shared/GLee.h	4861;"	d
GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX	include/GL/glext.h	2418;"	d
GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX	shared/GLee.h	4862;"	d
GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX	include/GL/glext.h	2416;"	d
GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX	shared/GLee.h	4860;"	d
GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX	include/GL/glext.h	2415;"	d
GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX	shared/GLee.h	4859;"	d
GL_PIXEL_TEX_GEN_MODE_SGIX	include/GL/glext.h	1879;"	d
GL_PIXEL_TEX_GEN_MODE_SGIX	shared/GLee.h	3696;"	d
GL_PIXEL_TEX_GEN_Q_CEILING_SGIX	include/GL/glext.h	2412;"	d
GL_PIXEL_TEX_GEN_Q_CEILING_SGIX	shared/GLee.h	4856;"	d
GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX	include/GL/glext.h	2414;"	d
GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX	shared/GLee.h	4858;"	d
GL_PIXEL_TEX_GEN_Q_ROUND_SGIX	include/GL/glext.h	2413;"	d
GL_PIXEL_TEX_GEN_Q_ROUND_SGIX	shared/GLee.h	4857;"	d
GL_PIXEL_TEX_GEN_SGIX	include/GL/glext.h	1878;"	d
GL_PIXEL_TEX_GEN_SGIX	shared/GLee.h	3695;"	d
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX	include/GL/glext.h	2064;"	d
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX	shared/GLee.h	4066;"	d
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX	include/GL/glext.h	2065;"	d
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX	shared/GLee.h	4067;"	d
GL_PIXEL_TILE_CACHE_SIZE_SGIX	include/GL/glext.h	2071;"	d
GL_PIXEL_TILE_CACHE_SIZE_SGIX	shared/GLee.h	4073;"	d
GL_PIXEL_TILE_GRID_DEPTH_SGIX	include/GL/glext.h	2070;"	d
GL_PIXEL_TILE_GRID_DEPTH_SGIX	shared/GLee.h	4072;"	d
GL_PIXEL_TILE_GRID_HEIGHT_SGIX	include/GL/glext.h	2069;"	d
GL_PIXEL_TILE_GRID_HEIGHT_SGIX	shared/GLee.h	4071;"	d
GL_PIXEL_TILE_GRID_WIDTH_SGIX	include/GL/glext.h	2068;"	d
GL_PIXEL_TILE_GRID_WIDTH_SGIX	shared/GLee.h	4070;"	d
GL_PIXEL_TILE_HEIGHT_SGIX	include/GL/glext.h	2067;"	d
GL_PIXEL_TILE_HEIGHT_SGIX	shared/GLee.h	4069;"	d
GL_PIXEL_TILE_WIDTH_SGIX	include/GL/glext.h	2066;"	d
GL_PIXEL_TILE_WIDTH_SGIX	shared/GLee.h	4068;"	d
GL_PIXEL_TRANSFORM_2D_EXT	include/GL/glext.h	2461;"	d
GL_PIXEL_TRANSFORM_2D_EXT	shared/GLee.h	4975;"	d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	include/GL/glext.h	2469;"	d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	shared/GLee.h	4983;"	d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	include/GL/glext.h	2467;"	d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	shared/GLee.h	4981;"	d
GL_PIXEL_UNPACK_BUFFER	include/GL/glext.h	478;"	d
GL_PIXEL_UNPACK_BUFFER	shared/GLee.h	1986;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	include/GL/glext.h	1380;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	shared/GLee.h	3305;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	include/GL/glext.h	480;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	shared/GLee.h	1988;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	include/GL/glext.h	1382;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	shared/GLee.h	3307;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT	include/GL/glext.h	3713;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT	shared/GLee.h	8219;"	d
GL_PIXEL_UNPACK_BUFFER_EXT	include/GL/glext.h	3711;"	d
GL_PIXEL_UNPACK_BUFFER_EXT	shared/GLee.h	8217;"	d
GL_PN_TRIANGLES_ATI	include/GL/glext.h	3307;"	d
GL_PN_TRIANGLES_ATI	shared/GLee.h	6995;"	d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	include/GL/glext.h	3310;"	d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	shared/GLee.h	6998;"	d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	include/GL/glext.h	3314;"	d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	shared/GLee.h	7002;"	d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	include/GL/glext.h	3315;"	d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	shared/GLee.h	7003;"	d
GL_PN_TRIANGLES_POINT_MODE_ATI	include/GL/glext.h	3309;"	d
GL_PN_TRIANGLES_POINT_MODE_ATI	shared/GLee.h	6997;"	d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	include/GL/glext.h	3313;"	d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	shared/GLee.h	7001;"	d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	include/GL/glext.h	3312;"	d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	shared/GLee.h	7000;"	d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	include/GL/glext.h	3311;"	d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	shared/GLee.h	6999;"	d
GL_POINT	include/GL/gl.h	268;"	d
GL_POINTS	include/GL/gl.h	193;"	d
GL_POINT_BIT	include/GL/gl.h	706;"	d
GL_POINT_DISTANCE_ATTENUATION	include/GL/glext.h	307;"	d
GL_POINT_DISTANCE_ATTENUATION	shared/GLee.h	1324;"	d
GL_POINT_DISTANCE_ATTENUATION_ARB	include/GL/glext.h	987;"	d
GL_POINT_DISTANCE_ATTENUATION_ARB	shared/GLee.h	2303;"	d
GL_POINT_FADE_THRESHOLD_SIZE	include/GL/glext.h	290;"	d
GL_POINT_FADE_THRESHOLD_SIZE	shared/GLee.h	1323;"	d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	include/GL/glext.h	986;"	d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	shared/GLee.h	2302;"	d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	include/GL/glext.h	2116;"	d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	shared/GLee.h	4150;"	d
GL_POINT_FADE_THRESHOLD_SIZE_SGIS	include/GL/glext.h	2123;"	d
GL_POINT_FADE_THRESHOLD_SIZE_SGIS	shared/GLee.h	4168;"	d
GL_POINT_SIZE	include/GL/gl.h	254;"	d
GL_POINT_SIZE_GRANULARITY	include/GL/gl.h	255;"	d
GL_POINT_SIZE_MAX	include/GL/glext.h	306;"	d
GL_POINT_SIZE_MAX	shared/GLee.h	1322;"	d
GL_POINT_SIZE_MAX_ARB	include/GL/glext.h	985;"	d
GL_POINT_SIZE_MAX_ARB	shared/GLee.h	2301;"	d
GL_POINT_SIZE_MAX_EXT	include/GL/glext.h	2115;"	d
GL_POINT_SIZE_MAX_EXT	shared/GLee.h	4149;"	d
GL_POINT_SIZE_MAX_SGIS	include/GL/glext.h	2122;"	d
GL_POINT_SIZE_MAX_SGIS	shared/GLee.h	4167;"	d
GL_POINT_SIZE_MIN	include/GL/glext.h	305;"	d
GL_POINT_SIZE_MIN	shared/GLee.h	1321;"	d
GL_POINT_SIZE_MIN_ARB	include/GL/glext.h	984;"	d
GL_POINT_SIZE_MIN_ARB	shared/GLee.h	2300;"	d
GL_POINT_SIZE_MIN_EXT	include/GL/glext.h	2114;"	d
GL_POINT_SIZE_MIN_EXT	shared/GLee.h	4148;"	d
GL_POINT_SIZE_MIN_SGIS	include/GL/glext.h	2121;"	d
GL_POINT_SIZE_MIN_SGIS	shared/GLee.h	4166;"	d
GL_POINT_SIZE_RANGE	include/GL/gl.h	256;"	d
GL_POINT_SMOOTH	include/GL/gl.h	253;"	d
GL_POINT_SMOOTH_HINT	include/GL/gl.h	582;"	d
GL_POINT_SPRITE	include/GL/glext.h	471;"	d
GL_POINT_SPRITE	shared/GLee.h	1645;"	d
GL_POINT_SPRITE_ARB	include/GL/glext.h	1309;"	d
GL_POINT_SPRITE_ARB	shared/GLee.h	3193;"	d
GL_POINT_SPRITE_COORD_ORIGIN	include/GL/glext.h	461;"	d
GL_POINT_SPRITE_COORD_ORIGIN	shared/GLee.h	1692;"	d
GL_POINT_SPRITE_NV	include/GL/glext.h	3486;"	d
GL_POINT_SPRITE_NV	shared/GLee.h	7560;"	d
GL_POINT_SPRITE_R_MODE_NV	include/GL/glext.h	3488;"	d
GL_POINT_SPRITE_R_MODE_NV	shared/GLee.h	7562;"	d
GL_POINT_TOKEN	include/GL/gl.h	400;"	d
GL_POLYGON	include/GL/gl.h	202;"	d
GL_POLYGON_BIT	include/GL/gl.h	708;"	d
GL_POLYGON_MODE	include/GL/gl.h	275;"	d
GL_POLYGON_OFFSET_BIAS_EXT	include/GL/glext.h	1725;"	d
GL_POLYGON_OFFSET_BIAS_EXT	shared/GLee.h	3343;"	d
GL_POLYGON_OFFSET_EXT	include/GL/glext.h	1723;"	d
GL_POLYGON_OFFSET_EXT	shared/GLee.h	3341;"	d
GL_POLYGON_OFFSET_FACTOR	include/GL/gl.h	282;"	d
GL_POLYGON_OFFSET_FACTOR_EXT	include/GL/glext.h	1724;"	d
GL_POLYGON_OFFSET_FACTOR_EXT	shared/GLee.h	3342;"	d
GL_POLYGON_OFFSET_FILL	include/GL/gl.h	286;"	d
GL_POLYGON_OFFSET_LINE	include/GL/gl.h	285;"	d
GL_POLYGON_OFFSET_POINT	include/GL/gl.h	284;"	d
GL_POLYGON_OFFSET_UNITS	include/GL/gl.h	283;"	d
GL_POLYGON_SMOOTH	include/GL/gl.h	276;"	d
GL_POLYGON_SMOOTH_HINT	include/GL/gl.h	584;"	d
GL_POLYGON_STIPPLE	include/GL/gl.h	277;"	d
GL_POLYGON_STIPPLE_BIT	include/GL/gl.h	709;"	d
GL_POLYGON_TOKEN	include/GL/gl.h	403;"	d
GL_POSITION	include/GL/gl.h	332;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	include/GL/gl.h	1611;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	include/GL/glext.h	161;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	shared/GLee.h	1047;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	include/GL/glext.h	1848;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	shared/GLee.h	3611;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	include/GL/gl.h	1607;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	include/GL/glext.h	157;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	shared/GLee.h	1043;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	include/GL/glext.h	1844;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	shared/GLee.h	3607;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	include/GL/gl.h	1610;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	include/GL/glext.h	160;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	shared/GLee.h	1046;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	include/GL/glext.h	1847;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	shared/GLee.h	3610;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	include/GL/gl.h	1606;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	include/GL/glext.h	156;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	shared/GLee.h	1042;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	include/GL/glext.h	1843;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	shared/GLee.h	3606;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	include/GL/gl.h	1564;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	include/GL/glext.h	164;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	shared/GLee.h	1050;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	include/GL/glext.h	1854;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	shared/GLee.h	3622;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	include/GL/gl.h	1609;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	include/GL/glext.h	159;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	shared/GLee.h	1045;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	include/GL/glext.h	1846;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	shared/GLee.h	3609;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	include/GL/gl.h	1605;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	include/GL/glext.h	155;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	shared/GLee.h	1041;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	include/GL/glext.h	1842;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	shared/GLee.h	3605;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	include/GL/gl.h	1608;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	include/GL/glext.h	158;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	shared/GLee.h	1044;"	d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	include/GL/glext.h	1845;"	d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	shared/GLee.h	3608;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	include/GL/gl.h	1604;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	include/GL/glext.h	154;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	shared/GLee.h	1040;"	d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	include/GL/glext.h	1841;"	d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	shared/GLee.h	3604;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	include/GL/gl.h	1597;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	include/GL/glext.h	136;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	shared/GLee.h	1022;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	include/GL/glext.h	1834;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	shared/GLee.h	3553;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	include/GL/gl.h	1593;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	include/GL/glext.h	132;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	shared/GLee.h	1018;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	include/GL/glext.h	1830;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	shared/GLee.h	3549;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	include/GL/gl.h	1596;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	include/GL/glext.h	135;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	shared/GLee.h	1021;"	d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	include/GL/glext.h	1833;"	d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	shared/GLee.h	3552;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	include/GL/gl.h	1592;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	include/GL/glext.h	131;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	shared/GLee.h	1017;"	d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	include/GL/glext.h	1829;"	d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	shared/GLee.h	3548;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	include/GL/gl.h	1563;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	include/GL/glext.h	163;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	shared/GLee.h	1049;"	d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	include/GL/glext.h	1853;"	d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	shared/GLee.h	3621;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	include/GL/gl.h	1595;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	include/GL/glext.h	134;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	shared/GLee.h	1020;"	d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	include/GL/glext.h	1832;"	d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	shared/GLee.h	3551;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	include/GL/gl.h	1591;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	include/GL/glext.h	130;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	shared/GLee.h	1016;"	d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	include/GL/glext.h	1828;"	d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	shared/GLee.h	3547;"	d
GL_POST_CONVOLUTION_RED_BIAS	include/GL/gl.h	1594;"	d
GL_POST_CONVOLUTION_RED_BIAS	include/GL/glext.h	133;"	d
GL_POST_CONVOLUTION_RED_BIAS	shared/GLee.h	1019;"	d
GL_POST_CONVOLUTION_RED_BIAS_EXT	include/GL/glext.h	1831;"	d
GL_POST_CONVOLUTION_RED_BIAS_EXT	shared/GLee.h	3550;"	d
GL_POST_CONVOLUTION_RED_SCALE	include/GL/gl.h	1590;"	d
GL_POST_CONVOLUTION_RED_SCALE	include/GL/glext.h	129;"	d
GL_POST_CONVOLUTION_RED_SCALE	shared/GLee.h	1015;"	d
GL_POST_CONVOLUTION_RED_SCALE_EXT	include/GL/glext.h	1827;"	d
GL_POST_CONVOLUTION_RED_SCALE_EXT	shared/GLee.h	3546;"	d
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	include/GL/glext.h	2199;"	d
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	shared/GLee.h	4358;"	d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	include/GL/glext.h	2135;"	d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	shared/GLee.h	4214;"	d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	include/GL/glext.h	2133;"	d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	shared/GLee.h	4212;"	d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	include/GL/glext.h	2136;"	d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	shared/GLee.h	4215;"	d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	include/GL/glext.h	2134;"	d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	shared/GLee.h	4213;"	d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	include/GL/glext.h	2246;"	d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	shared/GLee.h	4459;"	d
GL_PRESENT_DURATION_NV	include/GL/glext.h	4131;"	d
GL_PRESENT_TIME_NV	include/GL/glext.h	4130;"	d
GL_PRESERVE_ATI	include/GL/glext.h	3321;"	d
GL_PRESERVE_ATI	shared/GLee.h	7020;"	d
GL_PREVIOUS	include/GL/gl.h	1850;"	d
GL_PREVIOUS	include/GL/glext.h	280;"	d
GL_PREVIOUS	shared/GLee.h	1168;"	d
GL_PREVIOUS_ARB	include/GL/glext.h	1070;"	d
GL_PREVIOUS_ARB	shared/GLee.h	2452;"	d
GL_PREVIOUS_EXT	include/GL/glext.h	2545;"	d
GL_PREVIOUS_EXT	shared/GLee.h	5262;"	d
GL_PREVIOUS_TEXTURE_INPUT_NV	include/GL/glext.h	3002;"	d
GL_PREVIOUS_TEXTURE_INPUT_NV	shared/GLee.h	6384;"	d
GL_PRIMARY_COLOR	include/GL/gl.h	1849;"	d
GL_PRIMARY_COLOR	include/GL/glext.h	279;"	d
GL_PRIMARY_COLOR	shared/GLee.h	1167;"	d
GL_PRIMARY_COLOR_ARB	include/GL/glext.h	1069;"	d
GL_PRIMARY_COLOR_ARB	shared/GLee.h	2451;"	d
GL_PRIMARY_COLOR_EXT	include/GL/glext.h	2544;"	d
GL_PRIMARY_COLOR_EXT	shared/GLee.h	5261;"	d
GL_PRIMARY_COLOR_NV	include/GL/glext.h	2718;"	d
GL_PRIMARY_COLOR_NV	shared/GLee.h	5731;"	d
GL_PRIMITIVES_GENERATED	include/GL/glext.h	553;"	d
GL_PRIMITIVES_GENERATED_EXT	include/GL/glext.h	4141;"	d
GL_PRIMITIVES_GENERATED_NV	include/GL/glext.h	4045;"	d
GL_PRIMITIVES_GENERATED_NV	shared/GLee.h	8798;"	d
GL_PRIMITIVE_ID_NV	include/GL/glext.h	4034;"	d
GL_PRIMITIVE_ID_NV	shared/GLee.h	8787;"	d
GL_PRIMITIVE_RESTART	include/GL/glext.h	773;"	d
GL_PRIMITIVE_RESTART_INDEX	include/GL/glext.h	774;"	d
GL_PRIMITIVE_RESTART_INDEX_NV	include/GL/glext.h	3655;"	d
GL_PRIMITIVE_RESTART_INDEX_NV	shared/GLee.h	8068;"	d
GL_PRIMITIVE_RESTART_NV	include/GL/glext.h	3654;"	d
GL_PRIMITIVE_RESTART_NV	shared/GLee.h	8067;"	d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	include/GL/glext.h	1146;"	d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	shared/GLee.h	2616;"	d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	include/GL/glext.h	1190;"	d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	shared/GLee.h	2851;"	d
GL_PROGRAM_ATTRIBS_ARB	include/GL/glext.h	1142;"	d
GL_PROGRAM_ATTRIBS_ARB	shared/GLee.h	2612;"	d
GL_PROGRAM_ATTRIB_COMPONENTS_NV	include/GL/glext.h	3861;"	d
GL_PROGRAM_ATTRIB_COMPONENTS_NV	shared/GLee.h	8864;"	d
GL_PROGRAM_BINDING_ARB	include/GL/glext.h	1124;"	d
GL_PROGRAM_BINDING_ARB	shared/GLee.h	2594;"	d
GL_PROGRAM_ERROR_POSITION_ARB	include/GL/glext.h	1123;"	d
GL_PROGRAM_ERROR_POSITION_ARB	shared/GLee.h	2593;"	d
GL_PROGRAM_ERROR_POSITION_NV	include/GL/glext.h	3103;"	d
GL_PROGRAM_ERROR_POSITION_NV	shared/GLee.h	6500;"	d
GL_PROGRAM_ERROR_STRING_ARB	include/GL/glext.h	1127;"	d
GL_PROGRAM_ERROR_STRING_ARB	shared/GLee.h	2597;"	d
GL_PROGRAM_ERROR_STRING_NV	include/GL/glext.h	3637;"	d
GL_PROGRAM_ERROR_STRING_NV	shared/GLee.h	7873;"	d
GL_PROGRAM_FORMAT_ARB	include/GL/glext.h	1129;"	d
GL_PROGRAM_FORMAT_ARB	shared/GLee.h	2599;"	d
GL_PROGRAM_FORMAT_ASCII_ARB	include/GL/glext.h	1128;"	d
GL_PROGRAM_FORMAT_ASCII_ARB	shared/GLee.h	2598;"	d
GL_PROGRAM_INSTRUCTIONS_ARB	include/GL/glext.h	1130;"	d
GL_PROGRAM_INSTRUCTIONS_ARB	shared/GLee.h	2600;"	d
GL_PROGRAM_LENGTH_ARB	include/GL/glext.h	1114;"	d
GL_PROGRAM_LENGTH_ARB	shared/GLee.h	2584;"	d
GL_PROGRAM_LENGTH_NV	include/GL/glext.h	3075;"	d
GL_PROGRAM_LENGTH_NV	shared/GLee.h	6472;"	d
GL_PROGRAM_MATRIX_EXT	include/GL/glext.h	4153;"	d
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT	include/GL/glext.h	4155;"	d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	include/GL/glext.h	1148;"	d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	shared/GLee.h	2618;"	d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	include/GL/glext.h	1193;"	d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	shared/GLee.h	2854;"	d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	include/GL/glext.h	1144;"	d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	shared/GLee.h	2614;"	d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	include/GL/glext.h	1132;"	d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	shared/GLee.h	2602;"	d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	include/GL/glext.h	1140;"	d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	shared/GLee.h	2610;"	d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	include/GL/glext.h	1136;"	d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	shared/GLee.h	2606;"	d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	include/GL/glext.h	1195;"	d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	shared/GLee.h	2856;"	d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	include/GL/glext.h	1194;"	d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	shared/GLee.h	2855;"	d
GL_PROGRAM_OBJECT_ARB	include/GL/glext.h	1249;"	d
GL_PROGRAM_OBJECT_ARB	shared/GLee.h	2982;"	d
GL_PROGRAM_PARAMETERS_ARB	include/GL/glext.h	1138;"	d
GL_PROGRAM_PARAMETERS_ARB	shared/GLee.h	2608;"	d
GL_PROGRAM_PARAMETER_NV	include/GL/glext.h	3096;"	d
GL_PROGRAM_PARAMETER_NV	shared/GLee.h	6493;"	d
GL_PROGRAM_POINT_SIZE	include/GL/glext.h	819;"	d
GL_PROGRAM_POINT_SIZE_ARB	include/GL/glext.h	1489;"	d
GL_PROGRAM_POINT_SIZE_EXT	include/GL/glext.h	3885;"	d
GL_PROGRAM_POINT_SIZE_EXT	shared/GLee.h	8584;"	d
GL_PROGRAM_RESIDENT_NV	include/GL/glext.h	3099;"	d
GL_PROGRAM_RESIDENT_NV	shared/GLee.h	6496;"	d
GL_PROGRAM_RESULT_COMPONENTS_NV	include/GL/glext.h	3862;"	d
GL_PROGRAM_RESULT_COMPONENTS_NV	shared/GLee.h	8865;"	d
GL_PROGRAM_STRING_ARB	include/GL/glext.h	1115;"	d
GL_PROGRAM_STRING_ARB	shared/GLee.h	2585;"	d
GL_PROGRAM_STRING_NV	include/GL/glext.h	3076;"	d
GL_PROGRAM_STRING_NV	shared/GLee.h	6473;"	d
GL_PROGRAM_TARGET_NV	include/GL/glext.h	3098;"	d
GL_PROGRAM_TARGET_NV	shared/GLee.h	6495;"	d
GL_PROGRAM_TEMPORARIES_ARB	include/GL/glext.h	1134;"	d
GL_PROGRAM_TEMPORARIES_ARB	shared/GLee.h	2604;"	d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	include/GL/glext.h	1192;"	d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	shared/GLee.h	2853;"	d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	include/GL/glext.h	1191;"	d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	shared/GLee.h	2852;"	d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	include/GL/glext.h	1152;"	d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	shared/GLee.h	2622;"	d
GL_PROJECTION	include/GL/gl.h	249;"	d
GL_PROJECTION_MATRIX	include/GL/gl.h	544;"	d
GL_PROJECTION_STACK_DEPTH	include/GL/gl.h	545;"	d
GL_PROVOKING_VERTEX	include/GL/glext.h	1630;"	d
GL_PROVOKING_VERTEX_EXT	include/GL/glext.h	4223;"	d
GL_PROXY_COLOR_TABLE	include/GL/gl.h	1565;"	d
GL_PROXY_COLOR_TABLE	include/GL/glext.h	165;"	d
GL_PROXY_COLOR_TABLE	shared/GLee.h	1051;"	d
GL_PROXY_COLOR_TABLE_SGI	include/GL/glext.h	1855;"	d
GL_PROXY_COLOR_TABLE_SGI	shared/GLee.h	3623;"	d
GL_PROXY_HISTOGRAM	include/GL/gl.h	1613;"	d
GL_PROXY_HISTOGRAM	include/GL/glext.h	138;"	d
GL_PROXY_HISTOGRAM	shared/GLee.h	1024;"	d
GL_PROXY_HISTOGRAM_EXT	include/GL/glext.h	1799;"	d
GL_PROXY_HISTOGRAM_EXT	shared/GLee.h	3483;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	include/GL/gl.h	1567;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	include/GL/glext.h	167;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	shared/GLee.h	1053;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	include/GL/glext.h	1857;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	shared/GLee.h	3625;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	include/GL/gl.h	1566;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	include/GL/glext.h	166;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	shared/GLee.h	1052;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	include/GL/glext.h	1856;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	shared/GLee.h	3624;"	d
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	include/GL/glext.h	2200;"	d
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	shared/GLee.h	4359;"	d
GL_PROXY_TEXTURE_1D	include/GL/gl.h	729;"	d
GL_PROXY_TEXTURE_1D_ARRAY	include/GL/glext.h	537;"	d
GL_PROXY_TEXTURE_1D_ARRAY_EXT	include/GL/gl.h	2173;"	d
GL_PROXY_TEXTURE_1D_ARRAY_EXT	include/GL/glext.h	3954;"	d
GL_PROXY_TEXTURE_1D_ARRAY_EXT	shared/GLee.h	8661;"	d
GL_PROXY_TEXTURE_1D_EXT	include/GL/glext.h	1769;"	d
GL_PROXY_TEXTURE_1D_EXT	shared/GLee.h	3395;"	d
GL_PROXY_TEXTURE_1D_STACK_MESAX	include/GL/glext.h	3840;"	d
GL_PROXY_TEXTURE_1D_STACK_MESAX	shared/GLee.h	9264;"	d
GL_PROXY_TEXTURE_2D	include/GL/gl.h	730;"	d
GL_PROXY_TEXTURE_2D_ARRAY	include/GL/glext.h	539;"	d
GL_PROXY_TEXTURE_2D_ARRAY_EXT	include/GL/gl.h	2175;"	d
GL_PROXY_TEXTURE_2D_ARRAY_EXT	include/GL/glext.h	3956;"	d
GL_PROXY_TEXTURE_2D_ARRAY_EXT	shared/GLee.h	8663;"	d
GL_PROXY_TEXTURE_2D_EXT	include/GL/glext.h	1770;"	d
GL_PROXY_TEXTURE_2D_EXT	shared/GLee.h	3396;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	include/GL/glext.h	1661;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	include/GL/glext.h	1663;"	d
GL_PROXY_TEXTURE_2D_STACK_MESAX	include/GL/glext.h	3841;"	d
GL_PROXY_TEXTURE_2D_STACK_MESAX	shared/GLee.h	9265;"	d
GL_PROXY_TEXTURE_3D	include/GL/gl.h	1519;"	d
GL_PROXY_TEXTURE_3D	include/GL/glext.h	67;"	d
GL_PROXY_TEXTURE_3D	shared/GLee.h	841;"	d
GL_PROXY_TEXTURE_3D_EXT	include/GL/glext.h	1780;"	d
GL_PROXY_TEXTURE_3D_EXT	shared/GLee.h	3411;"	d
GL_PROXY_TEXTURE_4D_SGIS	include/GL/glext.h	1888;"	d
GL_PROXY_TEXTURE_4D_SGIS	shared/GLee.h	3713;"	d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	include/GL/glext.h	1897;"	d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	shared/GLee.h	3733;"	d
GL_PROXY_TEXTURE_CUBE_MAP	include/GL/gl.h	1799;"	d
GL_PROXY_TEXTURE_CUBE_MAP	include/GL/glext.h	233;"	d
GL_PROXY_TEXTURE_CUBE_MAP	shared/GLee.h	1133;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	include/GL/glext.h	961;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	shared/GLee.h	2241;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	include/GL/glext.h	1694;"	d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	include/GL/glext.h	2656;"	d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	shared/GLee.h	5614;"	d
GL_PROXY_TEXTURE_RECTANGLE	include/GL/glext.h	758;"	d
GL_PROXY_TEXTURE_RECTANGLE_ARB	include/GL/glext.h	1339;"	d
GL_PROXY_TEXTURE_RECTANGLE_ARB	shared/GLee.h	3241;"	d
GL_PROXY_TEXTURE_RECTANGLE_NV	include/GL/glext.h	2980;"	d
GL_PROXY_TEXTURE_RECTANGLE_NV	shared/GLee.h	6357;"	d
GL_PURGEABLE_APPLE	include/GL/glext.h	4306;"	d
GL_Q	include/GL/gl.h	685;"	d
GL_QUADRATIC_ATTENUATION	include/GL/gl.h	326;"	d
GL_QUADS	include/GL/gl.h	200;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	include/GL/glext.h	1627;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT	include/GL/glext.h	4220;"	d
GL_QUAD_ALPHA4_SGIS	include/GL/glext.h	2089;"	d
GL_QUAD_ALPHA4_SGIS	shared/GLee.h	4096;"	d
GL_QUAD_ALPHA8_SGIS	include/GL/glext.h	2090;"	d
GL_QUAD_ALPHA8_SGIS	shared/GLee.h	4097;"	d
GL_QUAD_INTENSITY4_SGIS	include/GL/glext.h	2093;"	d
GL_QUAD_INTENSITY4_SGIS	shared/GLee.h	4100;"	d
GL_QUAD_INTENSITY8_SGIS	include/GL/glext.h	2094;"	d
GL_QUAD_INTENSITY8_SGIS	shared/GLee.h	4101;"	d
GL_QUAD_LUMINANCE4_SGIS	include/GL/glext.h	2091;"	d
GL_QUAD_LUMINANCE4_SGIS	shared/GLee.h	4098;"	d
GL_QUAD_LUMINANCE8_SGIS	include/GL/glext.h	2092;"	d
GL_QUAD_LUMINANCE8_SGIS	shared/GLee.h	4099;"	d
GL_QUAD_MESH_SUN	include/GL/glext.h	3462;"	d
GL_QUAD_MESH_SUN	shared/GLee.h	7487;"	d
GL_QUAD_STRIP	include/GL/gl.h	201;"	d
GL_QUAD_TEXTURE_SELECT_SGIS	include/GL/glext.h	2096;"	d
GL_QUAD_TEXTURE_SELECT_SGIS	shared/GLee.h	4103;"	d
GL_QUARTER_BIT_ATI	include/GL/glext.h	3298;"	d
GL_QUARTER_BIT_ATI	shared/GLee.h	6939;"	d
GL_QUERY_BY_REGION_NO_WAIT	include/GL/glext.h	604;"	d
GL_QUERY_BY_REGION_NO_WAIT_NV	include/GL/glext.h	4122;"	d
GL_QUERY_BY_REGION_WAIT	include/GL/glext.h	603;"	d
GL_QUERY_BY_REGION_WAIT_NV	include/GL/glext.h	4121;"	d
GL_QUERY_COUNTER_BITS	include/GL/glext.h	333;"	d
GL_QUERY_COUNTER_BITS	shared/GLee.h	1501;"	d
GL_QUERY_COUNTER_BITS_ARB	include/GL/glext.h	1241;"	d
GL_QUERY_COUNTER_BITS_ARB	shared/GLee.h	2945;"	d
GL_QUERY_NO_WAIT	include/GL/glext.h	602;"	d
GL_QUERY_NO_WAIT_NV	include/GL/glext.h	4120;"	d
GL_QUERY_RESULT	include/GL/glext.h	335;"	d
GL_QUERY_RESULT	shared/GLee.h	1503;"	d
GL_QUERY_RESULT_ARB	include/GL/glext.h	1243;"	d
GL_QUERY_RESULT_ARB	shared/GLee.h	2947;"	d
GL_QUERY_RESULT_AVAILABLE	include/GL/glext.h	336;"	d
GL_QUERY_RESULT_AVAILABLE	shared/GLee.h	1504;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	include/GL/glext.h	1244;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	shared/GLee.h	2948;"	d
GL_QUERY_WAIT	include/GL/glext.h	601;"	d
GL_QUERY_WAIT_NV	include/GL/glext.h	4119;"	d
GL_R	include/GL/gl.h	684;"	d
GL_R11F_G11F_B10F	include/GL/glext.h	542;"	d
GL_R11F_G11F_B10F_EXT	include/GL/glext.h	3947;"	d
GL_R11F_G11F_B10F_EXT	shared/GLee.h	8649;"	d
GL_R16	include/GL/glext.h	1543;"	d
GL_R16F	include/GL/glext.h	1546;"	d
GL_R16I	include/GL/glext.h	1552;"	d
GL_R16UI	include/GL/glext.h	1553;"	d
GL_R16_SNORM	include/GL/glext.h	768;"	d
GL_R1UI_C3F_V3F_SUN	include/GL/glext.h	2595;"	d
GL_R1UI_C3F_V3F_SUN	shared/GLee.h	5369;"	d
GL_R1UI_C4F_N3F_V3F_SUN	include/GL/glext.h	2597;"	d
GL_R1UI_C4F_N3F_V3F_SUN	shared/GLee.h	5371;"	d
GL_R1UI_C4UB_V3F_SUN	include/GL/glext.h	2594;"	d
GL_R1UI_C4UB_V3F_SUN	shared/GLee.h	5368;"	d
GL_R1UI_N3F_V3F_SUN	include/GL/glext.h	2596;"	d
GL_R1UI_N3F_V3F_SUN	shared/GLee.h	5370;"	d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	include/GL/glext.h	2600;"	d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	shared/GLee.h	5374;"	d
GL_R1UI_T2F_N3F_V3F_SUN	include/GL/glext.h	2599;"	d
GL_R1UI_T2F_N3F_V3F_SUN	shared/GLee.h	5373;"	d
GL_R1UI_T2F_V3F_SUN	include/GL/glext.h	2598;"	d
GL_R1UI_T2F_V3F_SUN	shared/GLee.h	5372;"	d
GL_R1UI_V3F_SUN	include/GL/glext.h	2593;"	d
GL_R1UI_V3F_SUN	shared/GLee.h	5367;"	d
GL_R32F	include/GL/glext.h	1547;"	d
GL_R32I	include/GL/glext.h	1554;"	d
GL_R32UI	include/GL/glext.h	1555;"	d
GL_R3_G3_B2	include/GL/gl.h	755;"	d
GL_R8	include/GL/glext.h	1542;"	d
GL_R8I	include/GL/glext.h	1550;"	d
GL_R8UI	include/GL/glext.h	1551;"	d
GL_R8_SNORM	include/GL/glext.h	764;"	d
GL_RASTERIZER_DISCARD	include/GL/glext.h	555;"	d
GL_RASTERIZER_DISCARD_EXT	include/GL/glext.h	4143;"	d
GL_RASTERIZER_DISCARD_NV	include/GL/glext.h	4047;"	d
GL_RASTERIZER_DISCARD_NV	shared/GLee.h	8800;"	d
GL_RASTER_POSITION_UNCLIPPED_IBM	include/GL/glext.h	2370;"	d
GL_RASTER_POSITION_UNCLIPPED_IBM	shared/GLee.h	4768;"	d
GL_READ_BUFFER	include/GL/gl.h	496;"	d
GL_READ_FRAMEBUFFER	include/GL/glext.h	1421;"	d
GL_READ_FRAMEBUFFER_BINDING	include/GL/glext.h	1423;"	d
GL_READ_FRAMEBUFFER_BINDING_EXT	include/GL/glext.h	3828;"	d
GL_READ_FRAMEBUFFER_BINDING_EXT	shared/GLee.h	8960;"	d
GL_READ_FRAMEBUFFER_EXT	include/GL/glext.h	3825;"	d
GL_READ_FRAMEBUFFER_EXT	shared/GLee.h	8957;"	d
GL_READ_ONLY	include/GL/glext.h	342;"	d
GL_READ_ONLY	shared/GLee.h	1519;"	d
GL_READ_ONLY_ARB	include/GL/glext.h	1223;"	d
GL_READ_ONLY_ARB	shared/GLee.h	2889;"	d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	include/GL/glext.h	3648;"	d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	shared/GLee.h	8050;"	d
GL_READ_PIXEL_DATA_RANGE_NV	include/GL/glext.h	3646;"	d
GL_READ_PIXEL_DATA_RANGE_NV	shared/GLee.h	8048;"	d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	include/GL/glext.h	3650;"	d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	shared/GLee.h	8052;"	d
GL_READ_WRITE	include/GL/glext.h	344;"	d
GL_READ_WRITE	shared/GLee.h	1521;"	d
GL_READ_WRITE_ARB	include/GL/glext.h	1225;"	d
GL_READ_WRITE_ARB	shared/GLee.h	2891;"	d
GL_RECLAIM_MEMORY_HINT_PGI	include/GL/glext.h	2248;"	d
GL_RECLAIM_MEMORY_HINT_PGI	shared/GLee.h	4461;"	d
GL_RED	include/GL/gl.h	483;"	d
GL_REDUCE	include/GL/gl.h	1584;"	d
GL_REDUCE	include/GL/glext.h	123;"	d
GL_REDUCE	shared/GLee.h	1009;"	d
GL_REDUCE_EXT	include/GL/glext.h	1821;"	d
GL_REDUCE_EXT	shared/GLee.h	3540;"	d
GL_RED_BIAS	include/GL/gl.h	600;"	d
GL_RED_BITS	include/GL/gl.h	490;"	d
GL_RED_BIT_ATI	include/GL/glext.h	3291;"	d
GL_RED_BIT_ATI	shared/GLee.h	6932;"	d
GL_RED_INTEGER	include/GL/glext.h	574;"	d
GL_RED_INTEGER_EXT	include/GL/glext.h	4102;"	d
GL_RED_INTEGER_EXT	shared/GLee.h	8712;"	d
GL_RED_MAX_CLAMP_INGR	include/GL/glext.h	2618;"	d
GL_RED_MAX_CLAMP_INGR	shared/GLee.h	5551;"	d
GL_RED_MIN_CLAMP_INGR	include/GL/glext.h	2614;"	d
GL_RED_MIN_CLAMP_INGR	shared/GLee.h	5547;"	d
GL_RED_SCALE	include/GL/gl.h	599;"	d
GL_RED_SNORM	include/GL/glext.h	760;"	d
GL_REFERENCE_PLANE_EQUATION_SGIX	include/GL/glext.h	2162;"	d
GL_REFERENCE_PLANE_EQUATION_SGIX	shared/GLee.h	4284;"	d
GL_REFERENCE_PLANE_SGIX	include/GL/glext.h	2161;"	d
GL_REFERENCE_PLANE_SGIX	shared/GLee.h	4283;"	d
GL_REFLECTION_MAP	include/GL/gl.h	1790;"	d
GL_REFLECTION_MAP	include/GL/glext.h	254;"	d
GL_REFLECTION_MAP	shared/GLee.h	1124;"	d
GL_REFLECTION_MAP_ARB	include/GL/glext.h	952;"	d
GL_REFLECTION_MAP_ARB	shared/GLee.h	2232;"	d
GL_REFLECTION_MAP_EXT	include/GL/glext.h	2647;"	d
GL_REFLECTION_MAP_EXT	shared/GLee.h	5605;"	d
GL_REFLECTION_MAP_NV	include/GL/glext.h	2642;"	d
GL_REFLECTION_MAP_NV	shared/GLee.h	5595;"	d
GL_REGISTER_COMBINERS_NV	include/GL/glext.h	2708;"	d
GL_REGISTER_COMBINERS_NV	shared/GLee.h	5721;"	d
GL_REG_0_ATI	include/GL/glext.h	3201;"	d
GL_REG_0_ATI	shared/GLee.h	6842;"	d
GL_REG_10_ATI	include/GL/glext.h	3211;"	d
GL_REG_10_ATI	shared/GLee.h	6852;"	d
GL_REG_11_ATI	include/GL/glext.h	3212;"	d
GL_REG_11_ATI	shared/GLee.h	6853;"	d
GL_REG_12_ATI	include/GL/glext.h	3213;"	d
GL_REG_12_ATI	shared/GLee.h	6854;"	d
GL_REG_13_ATI	include/GL/glext.h	3214;"	d
GL_REG_13_ATI	shared/GLee.h	6855;"	d
GL_REG_14_ATI	include/GL/glext.h	3215;"	d
GL_REG_14_ATI	shared/GLee.h	6856;"	d
GL_REG_15_ATI	include/GL/glext.h	3216;"	d
GL_REG_15_ATI	shared/GLee.h	6857;"	d
GL_REG_16_ATI	include/GL/glext.h	3217;"	d
GL_REG_16_ATI	shared/GLee.h	6858;"	d
GL_REG_17_ATI	include/GL/glext.h	3218;"	d
GL_REG_17_ATI	shared/GLee.h	6859;"	d
GL_REG_18_ATI	include/GL/glext.h	3219;"	d
GL_REG_18_ATI	shared/GLee.h	6860;"	d
GL_REG_19_ATI	include/GL/glext.h	3220;"	d
GL_REG_19_ATI	shared/GLee.h	6861;"	d
GL_REG_1_ATI	include/GL/glext.h	3202;"	d
GL_REG_1_ATI	shared/GLee.h	6843;"	d
GL_REG_20_ATI	include/GL/glext.h	3221;"	d
GL_REG_20_ATI	shared/GLee.h	6862;"	d
GL_REG_21_ATI	include/GL/glext.h	3222;"	d
GL_REG_21_ATI	shared/GLee.h	6863;"	d
GL_REG_22_ATI	include/GL/glext.h	3223;"	d
GL_REG_22_ATI	shared/GLee.h	6864;"	d
GL_REG_23_ATI	include/GL/glext.h	3224;"	d
GL_REG_23_ATI	shared/GLee.h	6865;"	d
GL_REG_24_ATI	include/GL/glext.h	3225;"	d
GL_REG_24_ATI	shared/GLee.h	6866;"	d
GL_REG_25_ATI	include/GL/glext.h	3226;"	d
GL_REG_25_ATI	shared/GLee.h	6867;"	d
GL_REG_26_ATI	include/GL/glext.h	3227;"	d
GL_REG_26_ATI	shared/GLee.h	6868;"	d
GL_REG_27_ATI	include/GL/glext.h	3228;"	d
GL_REG_27_ATI	shared/GLee.h	6869;"	d
GL_REG_28_ATI	include/GL/glext.h	3229;"	d
GL_REG_28_ATI	shared/GLee.h	6870;"	d
GL_REG_29_ATI	include/GL/glext.h	3230;"	d
GL_REG_29_ATI	shared/GLee.h	6871;"	d
GL_REG_2_ATI	include/GL/glext.h	3203;"	d
GL_REG_2_ATI	shared/GLee.h	6844;"	d
GL_REG_30_ATI	include/GL/glext.h	3231;"	d
GL_REG_30_ATI	shared/GLee.h	6872;"	d
GL_REG_31_ATI	include/GL/glext.h	3232;"	d
GL_REG_31_ATI	shared/GLee.h	6873;"	d
GL_REG_3_ATI	include/GL/glext.h	3204;"	d
GL_REG_3_ATI	shared/GLee.h	6845;"	d
GL_REG_4_ATI	include/GL/glext.h	3205;"	d
GL_REG_4_ATI	shared/GLee.h	6846;"	d
GL_REG_5_ATI	include/GL/glext.h	3206;"	d
GL_REG_5_ATI	shared/GLee.h	6847;"	d
GL_REG_6_ATI	include/GL/glext.h	3207;"	d
GL_REG_6_ATI	shared/GLee.h	6848;"	d
GL_REG_7_ATI	include/GL/glext.h	3208;"	d
GL_REG_7_ATI	shared/GLee.h	6849;"	d
GL_REG_8_ATI	include/GL/glext.h	3209;"	d
GL_REG_8_ATI	shared/GLee.h	6850;"	d
GL_REG_9_ATI	include/GL/glext.h	3210;"	d
GL_REG_9_ATI	shared/GLee.h	6851;"	d
GL_RELEASED_APPLE	include/GL/glext.h	4302;"	d
GL_RENDER	include/GL/gl.h	391;"	d
GL_RENDERBUFFER	include/GL/glext.h	1456;"	d
GL_RENDERBUFFER_ALPHA_SIZE	include/GL/glext.h	1467;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	include/GL/glext.h	3785;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	shared/GLee.h	8315;"	d
GL_RENDERBUFFER_BINDING	include/GL/glext.h	1420;"	d
GL_RENDERBUFFER_BINDING_EXT	include/GL/glext.h	3740;"	d
GL_RENDERBUFFER_BINDING_EXT	shared/GLee.h	8268;"	d
GL_RENDERBUFFER_BLUE_SIZE	include/GL/glext.h	1466;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	include/GL/glext.h	3784;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	shared/GLee.h	8314;"	d
GL_RENDERBUFFER_COLOR_SAMPLES_NV	include/GL/glext.h	4004;"	d
GL_RENDERBUFFER_COLOR_SAMPLES_NV	shared/GLee.h	8927;"	d
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV	include/GL/glext.h	4003;"	d
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV	shared/GLee.h	8926;"	d
GL_RENDERBUFFER_DEPTH_SIZE	include/GL/glext.h	1468;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	include/GL/glext.h	3786;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	shared/GLee.h	8316;"	d
GL_RENDERBUFFER_EXT	include/GL/glext.h	3774;"	d
GL_RENDERBUFFER_EXT	shared/GLee.h	8303;"	d
GL_RENDERBUFFER_FREE_MEMORY_ATI	include/GL/glext.h	4193;"	d
GL_RENDERBUFFER_GREEN_SIZE	include/GL/glext.h	1465;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	include/GL/glext.h	3783;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	shared/GLee.h	8313;"	d
GL_RENDERBUFFER_HEIGHT	include/GL/glext.h	1458;"	d
GL_RENDERBUFFER_HEIGHT_EXT	include/GL/glext.h	3776;"	d
GL_RENDERBUFFER_HEIGHT_EXT	shared/GLee.h	8305;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	include/GL/glext.h	1459;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	include/GL/glext.h	3777;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	shared/GLee.h	8306;"	d
GL_RENDERBUFFER_RED_SIZE	include/GL/glext.h	1464;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	include/GL/glext.h	3782;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	shared/GLee.h	8312;"	d
GL_RENDERBUFFER_SAMPLES	include/GL/glext.h	1424;"	d
GL_RENDERBUFFER_SAMPLES_EXT	include/GL/glext.h	3832;"	d
GL_RENDERBUFFER_SAMPLES_EXT	shared/GLee.h	8945;"	d
GL_RENDERBUFFER_STENCIL_SIZE	include/GL/glext.h	1469;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	include/GL/glext.h	3787;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	shared/GLee.h	8317;"	d
GL_RENDERBUFFER_WIDTH	include/GL/glext.h	1457;"	d
GL_RENDERBUFFER_WIDTH_EXT	include/GL/glext.h	3775;"	d
GL_RENDERBUFFER_WIDTH_EXT	shared/GLee.h	8304;"	d
GL_RENDERER	include/GL/gl.h	691;"	d
GL_RENDER_MODE	include/GL/gl.h	546;"	d
GL_REND_screen_coordinates	include/GL/glext.h	6879;"	d
GL_REND_screen_coordinates	shared/GLee.h	5153;"	d
GL_REPEAT	include/GL/gl.h	680;"	d
GL_REPLACE	include/GL/gl.h	463;"	d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	include/GL/glext.h	2592;"	d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	shared/GLee.h	5366;"	d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	include/GL/glext.h	2591;"	d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	shared/GLee.h	5365;"	d
GL_REPLACEMENT_CODE_ARRAY_SUN	include/GL/glext.h	2589;"	d
GL_REPLACEMENT_CODE_ARRAY_SUN	shared/GLee.h	5363;"	d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	include/GL/glext.h	2590;"	d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	shared/GLee.h	5364;"	d
GL_REPLACEMENT_CODE_SUN	include/GL/glext.h	2588;"	d
GL_REPLACEMENT_CODE_SUN	shared/GLee.h	5362;"	d
GL_REPLACE_EXT	include/GL/glext.h	1768;"	d
GL_REPLACE_EXT	shared/GLee.h	3394;"	d
GL_REPLACE_MIDDLE_SUN	include/GL/glext.h	2585;"	d
GL_REPLACE_MIDDLE_SUN	shared/GLee.h	5359;"	d
GL_REPLACE_OLDEST_SUN	include/GL/glext.h	2586;"	d
GL_REPLACE_OLDEST_SUN	shared/GLee.h	5360;"	d
GL_REPLICATE_BORDER	include/GL/gl.h	1599;"	d
GL_REPLICATE_BORDER	include/GL/glext.h	179;"	d
GL_REPLICATE_BORDER	shared/GLee.h	1065;"	d
GL_REPLICATE_BORDER_HP	include/GL/glext.h	2206;"	d
GL_REPLICATE_BORDER_HP	shared/GLee.h	4388;"	d
GL_RESAMPLE_AVERAGE_OML	include/GL/glext.h	3179;"	d
GL_RESAMPLE_AVERAGE_OML	shared/GLee.h	6793;"	d
GL_RESAMPLE_DECIMATE_OML	include/GL/glext.h	3180;"	d
GL_RESAMPLE_DECIMATE_OML	shared/GLee.h	6794;"	d
GL_RESAMPLE_DECIMATE_SGIX	include/GL/glext.h	2900;"	d
GL_RESAMPLE_DECIMATE_SGIX	shared/GLee.h	6165;"	d
GL_RESAMPLE_REPLICATE_OML	include/GL/glext.h	3177;"	d
GL_RESAMPLE_REPLICATE_OML	shared/GLee.h	6791;"	d
GL_RESAMPLE_REPLICATE_SGIX	include/GL/glext.h	2898;"	d
GL_RESAMPLE_REPLICATE_SGIX	shared/GLee.h	6163;"	d
GL_RESAMPLE_ZERO_FILL_OML	include/GL/glext.h	3178;"	d
GL_RESAMPLE_ZERO_FILL_OML	shared/GLee.h	6792;"	d
GL_RESAMPLE_ZERO_FILL_SGIX	include/GL/glext.h	2899;"	d
GL_RESAMPLE_ZERO_FILL_SGIX	shared/GLee.h	6164;"	d
GL_RESCALE_NORMAL	include/GL/gl.h	1483;"	d
GL_RESCALE_NORMAL	include/GL/glext.h	95;"	d
GL_RESCALE_NORMAL	shared/GLee.h	834;"	d
GL_RESCALE_NORMAL_EXT	include/GL/glext.h	1968;"	d
GL_RESCALE_NORMAL_EXT	shared/GLee.h	3880;"	d
GL_RESTART_SUN	include/GL/glext.h	2584;"	d
GL_RESTART_SUN	shared/GLee.h	5358;"	d
GL_RETAINED_APPLE	include/GL/glext.h	4304;"	d
GL_RETURN	include/GL/gl.h	366;"	d
GL_RG	include/GL/glext.h	1540;"	d
GL_RG16	include/GL/glext.h	1545;"	d
GL_RG16F	include/GL/glext.h	1548;"	d
GL_RG16I	include/GL/glext.h	1558;"	d
GL_RG16UI	include/GL/glext.h	1559;"	d
GL_RG16_SNORM	include/GL/glext.h	769;"	d
GL_RG32F	include/GL/glext.h	1549;"	d
GL_RG32I	include/GL/glext.h	1560;"	d
GL_RG32UI	include/GL/glext.h	1561;"	d
GL_RG8	include/GL/glext.h	1544;"	d
GL_RG8I	include/GL/glext.h	1556;"	d
GL_RG8UI	include/GL/glext.h	1557;"	d
GL_RG8_SNORM	include/GL/glext.h	765;"	d
GL_RGB	include/GL/gl.h	505;"	d
GL_RGB10	include/GL/gl.h	759;"	d
GL_RGB10_A2	include/GL/gl.h	766;"	d
GL_RGB10_A2_EXT	include/GL/glext.h	1759;"	d
GL_RGB10_A2_EXT	shared/GLee.h	3385;"	d
GL_RGB10_EXT	include/GL/glext.h	1752;"	d
GL_RGB10_EXT	shared/GLee.h	3378;"	d
GL_RGB12	include/GL/gl.h	760;"	d
GL_RGB12_EXT	include/GL/glext.h	1753;"	d
GL_RGB12_EXT	shared/GLee.h	3379;"	d
GL_RGB16	include/GL/gl.h	761;"	d
GL_RGB16F	include/GL/glext.h	528;"	d
GL_RGB16F_ARB	include/GL/glext.h	1371;"	d
GL_RGB16F_ARB	shared/GLee.h	3291;"	d
GL_RGB16I	include/GL/glext.h	571;"	d
GL_RGB16I_EXT	include/GL/glext.h	4091;"	d
GL_RGB16I_EXT	shared/GLee.h	8701;"	d
GL_RGB16UI	include/GL/glext.h	565;"	d
GL_RGB16UI_EXT	include/GL/glext.h	4073;"	d
GL_RGB16UI_EXT	shared/GLee.h	8683;"	d
GL_RGB16_EXT	include/GL/glext.h	1754;"	d
GL_RGB16_EXT	shared/GLee.h	3380;"	d
GL_RGB16_EXTENDED_RANGE_SGIX	shared/GLee.h	9355;"	d
GL_RGB16_SIGNED_SGIX	shared/GLee.h	9343;"	d
GL_RGB16_SNORM	include/GL/glext.h	770;"	d
GL_RGB2_EXT	include/GL/glext.h	1748;"	d
GL_RGB2_EXT	shared/GLee.h	3374;"	d
GL_RGB32F	include/GL/glext.h	526;"	d
GL_RGB32F_ARB	include/GL/glext.h	1365;"	d
GL_RGB32F_ARB	shared/GLee.h	3285;"	d
GL_RGB32I	include/GL/glext.h	569;"	d
GL_RGB32I_EXT	include/GL/glext.h	4085;"	d
GL_RGB32I_EXT	shared/GLee.h	8695;"	d
GL_RGB32UI	include/GL/glext.h	563;"	d
GL_RGB32UI_EXT	include/GL/glext.h	4067;"	d
GL_RGB32UI_EXT	shared/GLee.h	8677;"	d
GL_RGB4	include/GL/gl.h	756;"	d
GL_RGB4_EXT	include/GL/glext.h	1749;"	d
GL_RGB4_EXT	shared/GLee.h	3375;"	d
GL_RGB4_S3TC	include/GL/glext.h	3562;"	d
GL_RGB4_S3TC	shared/GLee.h	7765;"	d
GL_RGB5	include/GL/gl.h	757;"	d
GL_RGB5_A1	include/GL/gl.h	764;"	d
GL_RGB5_A1_EXT	include/GL/glext.h	1757;"	d
GL_RGB5_A1_EXT	shared/GLee.h	3383;"	d
GL_RGB5_EXT	include/GL/glext.h	1750;"	d
GL_RGB5_EXT	shared/GLee.h	3376;"	d
GL_RGB8	include/GL/gl.h	758;"	d
GL_RGB8I	include/GL/glext.h	573;"	d
GL_RGB8I_EXT	include/GL/glext.h	4097;"	d
GL_RGB8I_EXT	shared/GLee.h	8707;"	d
GL_RGB8UI	include/GL/glext.h	567;"	d
GL_RGB8UI_EXT	include/GL/glext.h	4079;"	d
GL_RGB8UI_EXT	shared/GLee.h	8689;"	d
GL_RGB8_EXT	include/GL/glext.h	1751;"	d
GL_RGB8_EXT	shared/GLee.h	3377;"	d
GL_RGB8_SNORM	include/GL/glext.h	766;"	d
GL_RGB9_E5	include/GL/glext.h	544;"	d
GL_RGB9_E5_EXT	include/GL/glext.h	3987;"	d
GL_RGB9_E5_EXT	shared/GLee.h	8638;"	d
GL_RGBA	include/GL/gl.h	506;"	d
GL_RGBA12	include/GL/gl.h	767;"	d
GL_RGBA12_EXT	include/GL/glext.h	1760;"	d
GL_RGBA12_EXT	shared/GLee.h	3386;"	d
GL_RGBA16	include/GL/gl.h	768;"	d
GL_RGBA16F	include/GL/glext.h	527;"	d
GL_RGBA16F_ARB	include/GL/glext.h	1370;"	d
GL_RGBA16F_ARB	shared/GLee.h	3290;"	d
GL_RGBA16I	include/GL/glext.h	570;"	d
GL_RGBA16I_EXT	include/GL/glext.h	4090;"	d
GL_RGBA16I_EXT	shared/GLee.h	8700;"	d
GL_RGBA16UI	include/GL/glext.h	564;"	d
GL_RGBA16UI_EXT	include/GL/glext.h	4072;"	d
GL_RGBA16UI_EXT	shared/GLee.h	8682;"	d
GL_RGBA16_EXT	include/GL/glext.h	1761;"	d
GL_RGBA16_EXT	shared/GLee.h	3387;"	d
GL_RGBA16_EXTENDED_RANGE_SGIX	shared/GLee.h	9356;"	d
GL_RGBA16_SIGNED_SGIX	shared/GLee.h	9344;"	d
GL_RGBA16_SNORM	include/GL/glext.h	771;"	d
GL_RGBA2	include/GL/gl.h	762;"	d
GL_RGBA2_EXT	include/GL/glext.h	1755;"	d
GL_RGBA2_EXT	shared/GLee.h	3381;"	d
GL_RGBA32F	include/GL/glext.h	525;"	d
GL_RGBA32F_ARB	include/GL/glext.h	1364;"	d
GL_RGBA32F_ARB	shared/GLee.h	3284;"	d
GL_RGBA32I	include/GL/glext.h	568;"	d
GL_RGBA32I_EXT	include/GL/glext.h	4084;"	d
GL_RGBA32I_EXT	shared/GLee.h	8694;"	d
GL_RGBA32UI	include/GL/glext.h	562;"	d
GL_RGBA32UI_EXT	include/GL/glext.h	4066;"	d
GL_RGBA32UI_EXT	shared/GLee.h	8676;"	d
GL_RGBA4	include/GL/gl.h	763;"	d
GL_RGBA4_EXT	include/GL/glext.h	1756;"	d
GL_RGBA4_EXT	shared/GLee.h	3382;"	d
GL_RGBA4_S3TC	include/GL/glext.h	3564;"	d
GL_RGBA4_S3TC	shared/GLee.h	7767;"	d
GL_RGBA8	include/GL/gl.h	765;"	d
GL_RGBA8I	include/GL/glext.h	572;"	d
GL_RGBA8I_EXT	include/GL/glext.h	4096;"	d
GL_RGBA8I_EXT	shared/GLee.h	8706;"	d
GL_RGBA8UI	include/GL/glext.h	566;"	d
GL_RGBA8UI_EXT	include/GL/glext.h	4078;"	d
GL_RGBA8UI_EXT	shared/GLee.h	8688;"	d
GL_RGBA8_EXT	include/GL/glext.h	1758;"	d
GL_RGBA8_EXT	shared/GLee.h	3384;"	d
GL_RGBA8_SNORM	include/GL/glext.h	767;"	d
GL_RGBA_EXTENDED_RANGE_SGIX	shared/GLee.h	9350;"	d
GL_RGBA_FLOAT16_APPLE	include/GL/glext.h	4274;"	d
GL_RGBA_FLOAT16_ATI	include/GL/glext.h	3605;"	d
GL_RGBA_FLOAT16_ATI	shared/GLee.h	7831;"	d
GL_RGBA_FLOAT32_APPLE	include/GL/glext.h	4268;"	d
GL_RGBA_FLOAT32_ATI	include/GL/glext.h	3599;"	d
GL_RGBA_FLOAT32_ATI	shared/GLee.h	7825;"	d
GL_RGBA_FLOAT_MODE_ARB	include/GL/glext.h	1344;"	d
GL_RGBA_FLOAT_MODE_ARB	shared/GLee.h	3251;"	d
GL_RGBA_INTEGER	include/GL/glext.h	578;"	d
GL_RGBA_INTEGER_EXT	include/GL/glext.h	4107;"	d
GL_RGBA_INTEGER_EXT	shared/GLee.h	8717;"	d
GL_RGBA_INTEGER_MODE_EXT	include/GL/glext.h	4112;"	d
GL_RGBA_INTEGER_MODE_EXT	shared/GLee.h	8722;"	d
GL_RGBA_MODE	include/GL/gl.h	547;"	d
GL_RGBA_S3TC	include/GL/glext.h	3563;"	d
GL_RGBA_S3TC	shared/GLee.h	7766;"	d
GL_RGBA_SIGNED_COMPONENTS_EXT	include/GL/glext.h	3949;"	d
GL_RGBA_SIGNED_COMPONENTS_EXT	shared/GLee.h	8651;"	d
GL_RGBA_SIGNED_SGIX	shared/GLee.h	9338;"	d
GL_RGBA_SNORM	include/GL/glext.h	763;"	d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	include/GL/glext.h	2988;"	d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	shared/GLee.h	6370;"	d
GL_RGB_422_APPLE	include/GL/glext.h	4315;"	d
GL_RGB_EXTENDED_RANGE_SGIX	shared/GLee.h	9349;"	d
GL_RGB_FLOAT16_APPLE	include/GL/glext.h	4275;"	d
GL_RGB_FLOAT16_ATI	include/GL/glext.h	3606;"	d
GL_RGB_FLOAT16_ATI	shared/GLee.h	7832;"	d
GL_RGB_FLOAT32_APPLE	include/GL/glext.h	4269;"	d
GL_RGB_FLOAT32_ATI	include/GL/glext.h	3600;"	d
GL_RGB_FLOAT32_ATI	shared/GLee.h	7826;"	d
GL_RGB_INTEGER	include/GL/glext.h	577;"	d
GL_RGB_INTEGER_EXT	include/GL/glext.h	4106;"	d
GL_RGB_INTEGER_EXT	shared/GLee.h	8716;"	d
GL_RGB_S3TC	include/GL/glext.h	3561;"	d
GL_RGB_S3TC	shared/GLee.h	7764;"	d
GL_RGB_SCALE	include/GL/gl.h	1844;"	d
GL_RGB_SCALE	include/GL/glext.h	274;"	d
GL_RGB_SCALE	shared/GLee.h	1162;"	d
GL_RGB_SCALE_ARB	include/GL/glext.h	1064;"	d
GL_RGB_SCALE_ARB	shared/GLee.h	2446;"	d
GL_RGB_SCALE_EXT	include/GL/glext.h	2540;"	d
GL_RGB_SCALE_EXT	shared/GLee.h	5257;"	d
GL_RGB_SIGNED_SGIX	shared/GLee.h	9337;"	d
GL_RGB_SNORM	include/GL/glext.h	762;"	d
GL_RG_INTEGER	include/GL/glext.h	1541;"	d
GL_RG_SNORM	include/GL/glext.h	761;"	d
GL_RIGHT	include/GL/gl.h	470;"	d
GL_S	include/GL/gl.h	682;"	d
GL_S3_s3tc	include/GL/glext.h	8059;"	d
GL_S3_s3tc	shared/GLee.h	7761;"	d
GL_SAMPLER_1D	include/GL/glext.h	441;"	d
GL_SAMPLER_1D	shared/GLee.h	1672;"	d
GL_SAMPLER_1D_ARB	include/GL/glext.h	1266;"	d
GL_SAMPLER_1D_ARB	shared/GLee.h	2999;"	d
GL_SAMPLER_1D_ARRAY	include/GL/glext.h	581;"	d
GL_SAMPLER_1D_ARRAY_EXT	include/GL/glext.h	3916;"	d
GL_SAMPLER_1D_ARRAY_EXT	shared/GLee.h	8429;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	include/GL/glext.h	583;"	d
GL_SAMPLER_1D_ARRAY_SHADOW_EXT	include/GL/glext.h	3919;"	d
GL_SAMPLER_1D_ARRAY_SHADOW_EXT	shared/GLee.h	8432;"	d
GL_SAMPLER_1D_SHADOW	include/GL/glext.h	445;"	d
GL_SAMPLER_1D_SHADOW	shared/GLee.h	1676;"	d
GL_SAMPLER_1D_SHADOW_ARB	include/GL/glext.h	1270;"	d
GL_SAMPLER_1D_SHADOW_ARB	shared/GLee.h	3003;"	d
GL_SAMPLER_2D	include/GL/glext.h	442;"	d
GL_SAMPLER_2D	shared/GLee.h	1673;"	d
GL_SAMPLER_2D_ARB	include/GL/glext.h	1267;"	d
GL_SAMPLER_2D_ARB	shared/GLee.h	3000;"	d
GL_SAMPLER_2D_ARRAY	include/GL/glext.h	582;"	d
GL_SAMPLER_2D_ARRAY_EXT	include/GL/glext.h	3917;"	d
GL_SAMPLER_2D_ARRAY_EXT	shared/GLee.h	8430;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	include/GL/glext.h	584;"	d
GL_SAMPLER_2D_ARRAY_SHADOW_EXT	include/GL/glext.h	3920;"	d
GL_SAMPLER_2D_ARRAY_SHADOW_EXT	shared/GLee.h	8433;"	d
GL_SAMPLER_2D_MULTISAMPLE	include/GL/glext.h	1668;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	include/GL/glext.h	1671;"	d
GL_SAMPLER_2D_RECT	include/GL/glext.h	744;"	d
GL_SAMPLER_2D_RECT_ARB	include/GL/glext.h	1272;"	d
GL_SAMPLER_2D_RECT_ARB	shared/GLee.h	3005;"	d
GL_SAMPLER_2D_RECT_SHADOW	include/GL/glext.h	745;"	d
GL_SAMPLER_2D_RECT_SHADOW_ARB	include/GL/glext.h	1273;"	d
GL_SAMPLER_2D_RECT_SHADOW_ARB	shared/GLee.h	3006;"	d
GL_SAMPLER_2D_SHADOW	include/GL/glext.h	446;"	d
GL_SAMPLER_2D_SHADOW	shared/GLee.h	1677;"	d
GL_SAMPLER_2D_SHADOW_ARB	include/GL/glext.h	1271;"	d
GL_SAMPLER_2D_SHADOW_ARB	shared/GLee.h	3004;"	d
GL_SAMPLER_3D	include/GL/glext.h	443;"	d
GL_SAMPLER_3D	shared/GLee.h	1674;"	d
GL_SAMPLER_3D_ARB	include/GL/glext.h	1268;"	d
GL_SAMPLER_3D_ARB	shared/GLee.h	3001;"	d
GL_SAMPLER_BUFFER	include/GL/glext.h	746;"	d
GL_SAMPLER_BUFFER_AMD	include/GL/glext.h	4210;"	d
GL_SAMPLER_BUFFER_EXT	include/GL/glext.h	3918;"	d
GL_SAMPLER_BUFFER_EXT	shared/GLee.h	8431;"	d
GL_SAMPLER_CUBE	include/GL/glext.h	444;"	d
GL_SAMPLER_CUBE	shared/GLee.h	1675;"	d
GL_SAMPLER_CUBE_ARB	include/GL/glext.h	1269;"	d
GL_SAMPLER_CUBE_ARB	shared/GLee.h	3002;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	include/GL/glext.h	1695;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	include/GL/glext.h	1696;"	d
GL_SAMPLER_CUBE_SHADOW	include/GL/glext.h	585;"	d
GL_SAMPLER_CUBE_SHADOW_EXT	include/GL/glext.h	3921;"	d
GL_SAMPLER_CUBE_SHADOW_EXT	shared/GLee.h	8434;"	d
GL_SAMPLER_RENDERBUFFER_NV	include/GL/glext.h	4177;"	d
GL_SAMPLES	include/GL/gl.h	1819;"	d
GL_SAMPLES	include/GL/glext.h	222;"	d
GL_SAMPLES	shared/GLee.h	1119;"	d
GL_SAMPLES_3DFX	include/GL/glext.h	2859;"	d
GL_SAMPLES_3DFX	shared/GLee.h	6090;"	d
GL_SAMPLES_ARB	include/GL/glext.h	941;"	d
GL_SAMPLES_ARB	shared/GLee.h	2208;"	d
GL_SAMPLES_EXT	include/GL/glext.h	2879;"	d
GL_SAMPLES_EXT	shared/GLee.h	6123;"	d
GL_SAMPLES_PASSED	include/GL/glext.h	357;"	d
GL_SAMPLES_PASSED	shared/GLee.h	1534;"	d
GL_SAMPLES_PASSED_ARB	include/GL/glext.h	1245;"	d
GL_SAMPLES_PASSED_ARB	shared/GLee.h	2949;"	d
GL_SAMPLES_SGIS	include/GL/glext.h	1961;"	d
GL_SAMPLES_SGIS	shared/GLee.h	3862;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	include/GL/gl.h	1815;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	include/GL/glext.h	218;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	shared/GLee.h	1115;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	include/GL/glext.h	937;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	shared/GLee.h	2204;"	d
GL_SAMPLE_ALPHA_TO_MASK_EXT	include/GL/glext.h	2868;"	d
GL_SAMPLE_ALPHA_TO_MASK_EXT	shared/GLee.h	6112;"	d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	include/GL/glext.h	1950;"	d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	shared/GLee.h	3851;"	d
GL_SAMPLE_ALPHA_TO_ONE	include/GL/gl.h	1816;"	d
GL_SAMPLE_ALPHA_TO_ONE	include/GL/glext.h	219;"	d
GL_SAMPLE_ALPHA_TO_ONE	shared/GLee.h	1116;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	include/GL/glext.h	938;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	shared/GLee.h	2205;"	d
GL_SAMPLE_ALPHA_TO_ONE_EXT	include/GL/glext.h	2869;"	d
GL_SAMPLE_ALPHA_TO_ONE_EXT	shared/GLee.h	6113;"	d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	include/GL/glext.h	1951;"	d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	shared/GLee.h	3852;"	d
GL_SAMPLE_BUFFERS	include/GL/gl.h	1818;"	d
GL_SAMPLE_BUFFERS	include/GL/glext.h	221;"	d
GL_SAMPLE_BUFFERS	shared/GLee.h	1118;"	d
GL_SAMPLE_BUFFERS_3DFX	include/GL/glext.h	2858;"	d
GL_SAMPLE_BUFFERS_3DFX	shared/GLee.h	6089;"	d
GL_SAMPLE_BUFFERS_ARB	include/GL/glext.h	940;"	d
GL_SAMPLE_BUFFERS_ARB	shared/GLee.h	2207;"	d
GL_SAMPLE_BUFFERS_EXT	include/GL/glext.h	2878;"	d
GL_SAMPLE_BUFFERS_EXT	shared/GLee.h	6122;"	d
GL_SAMPLE_BUFFERS_SGIS	include/GL/glext.h	1960;"	d
GL_SAMPLE_BUFFERS_SGIS	shared/GLee.h	3861;"	d
GL_SAMPLE_COVERAGE	include/GL/gl.h	1817;"	d
GL_SAMPLE_COVERAGE	include/GL/glext.h	220;"	d
GL_SAMPLE_COVERAGE	shared/GLee.h	1117;"	d
GL_SAMPLE_COVERAGE_ARB	include/GL/glext.h	939;"	d
GL_SAMPLE_COVERAGE_ARB	shared/GLee.h	2206;"	d
GL_SAMPLE_COVERAGE_INVERT	include/GL/gl.h	1821;"	d
GL_SAMPLE_COVERAGE_INVERT	include/GL/glext.h	224;"	d
GL_SAMPLE_COVERAGE_INVERT	shared/GLee.h	1121;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	include/GL/glext.h	943;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	shared/GLee.h	2210;"	d
GL_SAMPLE_COVERAGE_VALUE	include/GL/gl.h	1820;"	d
GL_SAMPLE_COVERAGE_VALUE	include/GL/glext.h	223;"	d
GL_SAMPLE_COVERAGE_VALUE	shared/GLee.h	1120;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	include/GL/glext.h	942;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	shared/GLee.h	2209;"	d
GL_SAMPLE_MASK	include/GL/glext.h	1657;"	d
GL_SAMPLE_MASK_EXT	include/GL/glext.h	2870;"	d
GL_SAMPLE_MASK_EXT	shared/GLee.h	6114;"	d
GL_SAMPLE_MASK_INVERT_EXT	include/GL/glext.h	2881;"	d
GL_SAMPLE_MASK_INVERT_EXT	shared/GLee.h	6125;"	d
GL_SAMPLE_MASK_INVERT_SGIS	include/GL/glext.h	1963;"	d
GL_SAMPLE_MASK_INVERT_SGIS	shared/GLee.h	3864;"	d
GL_SAMPLE_MASK_NV	include/GL/glext.h	4172;"	d
GL_SAMPLE_MASK_SGIS	include/GL/glext.h	1952;"	d
GL_SAMPLE_MASK_SGIS	shared/GLee.h	3853;"	d
GL_SAMPLE_MASK_VALUE	include/GL/glext.h	1658;"	d
GL_SAMPLE_MASK_VALUE_EXT	include/GL/glext.h	2880;"	d
GL_SAMPLE_MASK_VALUE_EXT	shared/GLee.h	6124;"	d
GL_SAMPLE_MASK_VALUE_NV	include/GL/glext.h	4173;"	d
GL_SAMPLE_MASK_VALUE_SGIS	include/GL/glext.h	1962;"	d
GL_SAMPLE_MASK_VALUE_SGIS	shared/GLee.h	3863;"	d
GL_SAMPLE_PATTERN_EXT	include/GL/glext.h	2882;"	d
GL_SAMPLE_PATTERN_EXT	shared/GLee.h	6126;"	d
GL_SAMPLE_PATTERN_SGIS	include/GL/glext.h	1964;"	d
GL_SAMPLE_PATTERN_SGIS	shared/GLee.h	3865;"	d
GL_SAMPLE_POSITION	include/GL/glext.h	1656;"	d
GL_SAMPLE_POSITION_NV	include/GL/glext.h	4171;"	d
GL_SAMPLE_SHADING	include/GL/glext.h	1687;"	d
GL_SATURATE_BIT_ATI	include/GL/glext.h	3300;"	d
GL_SATURATE_BIT_ATI	shared/GLee.h	6941;"	d
GL_SCALAR_EXT	include/GL/glext.h	3392;"	d
GL_SCALAR_EXT	shared/GLee.h	7132;"	d
GL_SCALEBIAS_HINT_SGIX	include/GL/glext.h	3161;"	d
GL_SCALEBIAS_HINT_SGIX	shared/GLee.h	6760;"	d
GL_SCALE_BY_FOUR_NV	include/GL/glext.h	2734;"	d
GL_SCALE_BY_FOUR_NV	shared/GLee.h	5747;"	d
GL_SCALE_BY_ONE_HALF_NV	include/GL/glext.h	2735;"	d
GL_SCALE_BY_ONE_HALF_NV	shared/GLee.h	5748;"	d
GL_SCALE_BY_TWO_NV	include/GL/glext.h	2733;"	d
GL_SCALE_BY_TWO_NV	shared/GLee.h	5746;"	d
GL_SCISSOR_BIT	include/GL/gl.h	724;"	d
GL_SCISSOR_BOX	include/GL/gl.h	591;"	d
GL_SCISSOR_TEST	include/GL/gl.h	592;"	d
GL_SCREEN_COORDINATES_REND	include/GL/glext.h	2515;"	d
GL_SCREEN_COORDINATES_REND	shared/GLee.h	5156;"	d
GL_SECONDARY_COLOR_ARRAY	include/GL/glext.h	324;"	d
GL_SECONDARY_COLOR_ARRAY	shared/GLee.h	1345;"	d
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV	include/GL/glext.h	4378;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	include/GL/glext.h	367;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	shared/GLee.h	1515;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	1219;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	shared/GLee.h	2885;"	d
GL_SECONDARY_COLOR_ARRAY_EXT	include/GL/glext.h	2492;"	d
GL_SECONDARY_COLOR_ARRAY_EXT	shared/GLee.h	5038;"	d
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV	include/GL/glext.h	4388;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	include/GL/glext.h	2818;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	shared/GLee.h	5995;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	include/GL/glext.h	2826;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	shared/GLee.h	6003;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	include/GL/glext.h	323;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	shared/GLee.h	1344;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	include/GL/glext.h	2491;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	shared/GLee.h	5037;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	include/GL/glext.h	320;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	shared/GLee.h	1341;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	include/GL/glext.h	2488;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	shared/GLee.h	5034;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	include/GL/glext.h	322;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	shared/GLee.h	1343;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	include/GL/glext.h	2490;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	shared/GLee.h	5036;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	include/GL/glext.h	321;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	shared/GLee.h	1342;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	include/GL/glext.h	2489;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	shared/GLee.h	5035;"	d
GL_SECONDARY_COLOR_NV	include/GL/glext.h	2719;"	d
GL_SECONDARY_COLOR_NV	shared/GLee.h	5732;"	d
GL_SECONDARY_INTERPOLATOR_ATI	include/GL/glext.h	3276;"	d
GL_SECONDARY_INTERPOLATOR_ATI	shared/GLee.h	6917;"	d
GL_SELECT	include/GL/gl.h	392;"	d
GL_SELECTION_BUFFER_POINTER	include/GL/gl.h	413;"	d
GL_SELECTION_BUFFER_SIZE	include/GL/gl.h	414;"	d
GL_SEPARABLE_2D	include/GL/gl.h	1580;"	d
GL_SEPARABLE_2D	include/GL/glext.h	119;"	d
GL_SEPARABLE_2D	shared/GLee.h	1005;"	d
GL_SEPARABLE_2D_EXT	include/GL/glext.h	1817;"	d
GL_SEPARABLE_2D_EXT	shared/GLee.h	3536;"	d
GL_SEPARATE_ATTRIBS	include/GL/glext.h	559;"	d
GL_SEPARATE_ATTRIBS_EXT	include/GL/glext.h	4140;"	d
GL_SEPARATE_ATTRIBS_NV	include/GL/glext.h	4051;"	d
GL_SEPARATE_ATTRIBS_NV	shared/GLee.h	8804;"	d
GL_SEPARATE_SPECULAR_COLOR	include/GL/gl.h	1503;"	d
GL_SEPARATE_SPECULAR_COLOR	include/GL/glext.h	98;"	d
GL_SEPARATE_SPECULAR_COLOR	shared/GLee.h	863;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	include/GL/glext.h	2482;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	shared/GLee.h	5023;"	d
GL_SET	include/GL/gl.h	434;"	d
GL_SGIS_detail_texture	include/GL/glext.h	6259;"	d
GL_SGIS_detail_texture	shared/GLee.h	3782;"	d
GL_SGIS_fog_function	include/GL/glext.h	6487;"	d
GL_SGIS_fog_function	shared/GLee.h	4315;"	d
GL_SGIS_generate_mipmap	include/GL/glext.h	6329;"	d
GL_SGIS_generate_mipmap	shared/GLee.h	3961;"	d
GL_SGIS_multisample	include/GL/glext.h	6287;"	d
GL_SGIS_multisample	shared/GLee.h	3847;"	d
GL_SGIS_pixel_texture	include/GL/glext.h	6205;"	d
GL_SGIS_pixel_texture	shared/GLee.h	3662;"	d
GL_SGIS_point_line_texgen	include/GL/glext.h	7363;"	d
GL_SGIS_point_line_texgen	shared/GLee.h	6171;"	d
GL_SGIS_point_parameters	include/GL/glext.h	6405;"	d
GL_SGIS_point_parameters	shared/GLee.h	4163;"	d
GL_SGIS_sharpen_texture	include/GL/glext.h	6269;"	d
GL_SGIS_sharpen_texture	shared/GLee.h	3804;"	d
GL_SGIS_texture4D	include/GL/glext.h	6223;"	d
GL_SGIS_texture4D	shared/GLee.h	3705;"	d
GL_SGIS_texture_border_clamp	include/GL/glext.h	6345;"	d
GL_SGIS_texture_border_clamp	shared/GLee.h	4012;"	d
GL_SGIS_texture_color_mask	include/GL/glext.h	7367;"	d
GL_SGIS_texture_color_mask	shared/GLee.h	6187;"	d
GL_SGIS_texture_edge_clamp	include/GL/glext.h	6341;"	d
GL_SGIS_texture_edge_clamp	shared/GLee.h	4003;"	d
GL_SGIS_texture_filter4	include/GL/glext.h	6079;"	d
GL_SGIS_texture_filter4	shared/GLee.h	3426;"	d
GL_SGIS_texture_lod	include/GL/glext.h	6283;"	d
GL_SGIS_texture_lod	shared/GLee.h	3835;"	d
GL_SGIS_texture_select	shared/GLee.h	4079;"	d
GL_SGIX_async	include/GL/glext.h	6735;"	d
GL_SGIX_async	shared/GLee.h	4878;"	d
GL_SGIX_async_histogram	include/GL/glext.h	6757;"	d
GL_SGIX_async_histogram	shared/GLee.h	4919;"	d
GL_SGIX_async_pixel	include/GL/glext.h	6753;"	d
GL_SGIX_async_pixel	shared/GLee.h	4905;"	d
GL_SGIX_blend_alpha_minmax	include/GL/glext.h	6727;"	d
GL_SGIX_blend_alpha_minmax	shared/GLee.h	4843;"	d
GL_SGIX_calligraphic_fragment	include/GL/glext.h	6589;"	d
GL_SGIX_calligraphic_fragment	shared/GLee.h	4559;"	d
GL_SGIX_clipmap	include/GL/glext.h	6333;"	d
GL_SGIX_clipmap	shared/GLee.h	3971;"	d
GL_SGIX_convolution_accuracy	include/GL/glext.h	7355;"	d
GL_SGIX_convolution_accuracy	shared/GLee.h	6149;"	d
GL_SGIX_depth_pass_instrument	include/GL/glext.h	7321;"	d
GL_SGIX_depth_pass_instrument	shared/GLee.h	9008;"	d
GL_SGIX_depth_texture	include/GL/glext.h	6483;"	d
GL_SGIX_depth_texture	shared/GLee.h	4304;"	d
GL_SGIX_flush_raster	include/GL/glext.h	6475;"	d
GL_SGIX_flush_raster	shared/GLee.h	4293;"	d
GL_SGIX_fog_offset	include/GL/glext.h	6497;"	d
GL_SGIX_fog_offset	shared/GLee.h	4332;"	d
GL_SGIX_fog_scale	include/GL/glext.h	6945;"	d
GL_SGIX_fog_scale	shared/GLee.h	5298;"	d
GL_SGIX_fragment_lighting	include/GL/glext.h	6649;"	d
GL_SGIX_fragment_lighting	shared/GLee.h	4683;"	d
GL_SGIX_framezoom	include/GL/glext.h	6437;"	d
GL_SGIX_framezoom	shared/GLee.h	4221;"	d
GL_SGIX_igloo_interface	include/GL/glext.h	7375;"	d
GL_SGIX_igloo_interface	shared/GLee.h	9016;"	d
GL_SGIX_impact_pixel_texture	shared/GLee.h	4853;"	d
GL_SGIX_instruments	include/GL/glext.h	6415;"	d
GL_SGIX_instruments	shared/GLee.h	4181;"	d
GL_SGIX_interlace	include/GL/glext.h	6365;"	d
GL_SGIX_interlace	shared/GLee.h	4054;"	d
GL_SGIX_ir_instrument1	include/GL/glext.h	6585;"	d
GL_SGIX_ir_instrument1	shared/GLee.h	4550;"	d
GL_SGIX_list_priority	include/GL/glext.h	6567;"	d
GL_SGIX_list_priority	shared/GLee.h	4523;"	d
GL_SGIX_pixel_texture	include/GL/glext.h	6197;"	d
GL_SGIX_pixel_texture	shared/GLee.h	3692;"	d
GL_SGIX_pixel_texture_bits	shared/GLee.h	9326;"	d
GL_SGIX_pixel_tiles	include/GL/glext.h	6369;"	d
GL_SGIX_pixel_tiles	shared/GLee.h	4063;"	d
GL_SGIX_polynomial_ffd	include/GL/glext.h	6453;"	d
GL_SGIX_polynomial_ffd	shared/GLee.h	4256;"	d
GL_SGIX_reference_plane	include/GL/glext.h	6467;"	d
GL_SGIX_reference_plane	shared/GLee.h	4280;"	d
GL_SGIX_resample	include/GL/glext.h	7359;"	d
GL_SGIX_resample	shared/GLee.h	6158;"	d
GL_SGIX_scalebias_hint	include/GL/glext.h	7607;"	d
GL_SGIX_scalebias_hint	shared/GLee.h	6757;"	d
GL_SGIX_shadow	include/GL/glext.h	6337;"	d
GL_SGIX_shadow	shared/GLee.h	3991;"	d
GL_SGIX_shadow_ambient	include/GL/glext.h	6597;"	d
GL_SGIX_shadow_ambient	shared/GLee.h	4579;"	d
GL_SGIX_sprite	include/GL/glext.h	6377;"	d
GL_SGIX_sprite	shared/GLee.h	4109;"	d
GL_SGIX_subsample	include/GL/glext.h	7309;"	d
GL_SGIX_subsample	shared/GLee.h	6033;"	d
GL_SGIX_tag_sample_buffer	include/GL/glext.h	6445;"	d
GL_SGIX_tag_sample_buffer	shared/GLee.h	4235;"	d
GL_SGIX_texture_add_env	include/GL/glext.h	6523;"	d
GL_SGIX_texture_add_env	shared/GLee.h	4403;"	d
GL_SGIX_texture_coordinate_clamp	include/GL/glext.h	7603;"	d
GL_SGIX_texture_coordinate_clamp	shared/GLee.h	6746;"	d
GL_SGIX_texture_lod_bias	include/GL/glext.h	6593;"	d
GL_SGIX_texture_lod_bias	shared/GLee.h	4568;"	d
GL_SGIX_texture_multi_buffer	include/GL/glext.h	6391;"	d
GL_SGIX_texture_multi_buffer	shared/GLee.h	4136;"	d
GL_SGIX_texture_range	shared/GLee.h	9334;"	d
GL_SGIX_texture_scale_bias	include/GL/glext.h	6433;"	d
GL_SGIX_texture_scale_bias	shared/GLee.h	4209;"	d
GL_SGIX_texture_select	include/GL/glext.h	6373;"	d
GL_SGIX_texture_select	shared/GLee.h	8989;"	d
GL_SGIX_vertex_preclip	include/GL/glext.h	7351;"	d
GL_SGIX_vertex_preclip	shared/GLee.h	6139;"	d
GL_SGIX_ycrcb	include/GL/glext.h	6645;"	d
GL_SGIX_ycrcb	shared/GLee.h	4673;"	d
GL_SGIX_ycrcb_subsample	include/GL/glext.h	7317;"	d
GL_SGIX_ycrcb_subsample	shared/GLee.h	6046;"	d
GL_SGIX_ycrcba	include/GL/glext.h	7313;"	d
GL_SGIX_ycrcba	shared/GLee.h	6054;"	d
GL_SGI_color_matrix	include/GL/glext.h	6173;"	d
GL_SGI_color_matrix	shared/GLee.h	3598;"	d
GL_SGI_color_table	include/GL/glext.h	6177;"	d
GL_SGI_color_table	shared/GLee.h	3617;"	d
GL_SGI_depth_pass_instrument	shared/GLee.h	6064;"	d
GL_SGI_texture_color_table	include/GL/glext.h	6233;"	d
GL_SGI_texture_color_table	shared/GLee.h	3729;"	d
GL_SHADER_CONSISTENT_NV	include/GL/glext.h	2992;"	d
GL_SHADER_CONSISTENT_NV	shared/GLee.h	6374;"	d
GL_SHADER_OBJECT_ARB	include/GL/glext.h	1250;"	d
GL_SHADER_OBJECT_ARB	shared/GLee.h	2983;"	d
GL_SHADER_OPERATION_NV	include/GL/glext.h	2994;"	d
GL_SHADER_OPERATION_NV	shared/GLee.h	6376;"	d
GL_SHADER_SOURCE_LENGTH	include/GL/glext.h	455;"	d
GL_SHADER_SOURCE_LENGTH	shared/GLee.h	1686;"	d
GL_SHADER_TYPE	include/GL/glext.h	427;"	d
GL_SHADER_TYPE	shared/GLee.h	1658;"	d
GL_SHADE_MODEL	include/GL/gl.h	340;"	d
GL_SHADING_LANGUAGE_VERSION	include/GL/glext.h	459;"	d
GL_SHADING_LANGUAGE_VERSION	shared/GLee.h	1690;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	include/GL/glext.h	1302;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	shared/GLee.h	3176;"	d
GL_SHADOW_AMBIENT_SGIX	include/GL/glext.h	2301;"	d
GL_SHADOW_AMBIENT_SGIX	shared/GLee.h	4582;"	d
GL_SHADOW_ATTENUATION_EXT	include/GL/glext.h	2398;"	d
GL_SHADOW_ATTENUATION_EXT	shared/GLee.h	4824;"	d
GL_SHARED_TEXTURE_PALETTE_EXT	include/GL/glext.h	2476;"	d
GL_SHARED_TEXTURE_PALETTE_EXT	shared/GLee.h	5012;"	d
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS	include/GL/glext.h	1930;"	d
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS	shared/GLee.h	3810;"	d
GL_SHININESS	include/GL/gl.h	330;"	d
GL_SHORT	include/GL/gl.h	182;"	d
GL_SIGNALED	include/GL/glext.h	1646;"	d
GL_SIGNED_ALPHA8_NV	include/GL/glext.h	3032;"	d
GL_SIGNED_ALPHA8_NV	shared/GLee.h	6414;"	d
GL_SIGNED_ALPHA_NV	include/GL/glext.h	3031;"	d
GL_SIGNED_ALPHA_NV	shared/GLee.h	6413;"	d
GL_SIGNED_HILO16_NV	include/GL/glext.h	3022;"	d
GL_SIGNED_HILO16_NV	shared/GLee.h	6404;"	d
GL_SIGNED_HILO8_NV	include/GL/glext.h	3507;"	d
GL_SIGNED_HILO8_NV	shared/GLee.h	7592;"	d
GL_SIGNED_HILO_NV	include/GL/glext.h	3021;"	d
GL_SIGNED_HILO_NV	shared/GLee.h	6403;"	d
GL_SIGNED_IDENTITY_NV	include/GL/glext.h	2731;"	d
GL_SIGNED_IDENTITY_NV	shared/GLee.h	5744;"	d
GL_SIGNED_INTENSITY8_NV	include/GL/glext.h	3034;"	d
GL_SIGNED_INTENSITY8_NV	shared/GLee.h	6416;"	d
GL_SIGNED_INTENSITY_NV	include/GL/glext.h	3033;"	d
GL_SIGNED_INTENSITY_NV	shared/GLee.h	6415;"	d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	include/GL/glext.h	3030;"	d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	shared/GLee.h	6412;"	d
GL_SIGNED_LUMINANCE8_NV	include/GL/glext.h	3028;"	d
GL_SIGNED_LUMINANCE8_NV	shared/GLee.h	6410;"	d
GL_SIGNED_LUMINANCE_ALPHA_NV	include/GL/glext.h	3029;"	d
GL_SIGNED_LUMINANCE_ALPHA_NV	shared/GLee.h	6411;"	d
GL_SIGNED_LUMINANCE_NV	include/GL/glext.h	3027;"	d
GL_SIGNED_LUMINANCE_NV	shared/GLee.h	6409;"	d
GL_SIGNED_NEGATE_NV	include/GL/glext.h	2732;"	d
GL_SIGNED_NEGATE_NV	shared/GLee.h	5745;"	d
GL_SIGNED_NORMALIZED	include/GL/glext.h	772;"	d
GL_SIGNED_RGB8_NV	include/GL/glext.h	3026;"	d
GL_SIGNED_RGB8_NV	shared/GLee.h	6408;"	d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	include/GL/glext.h	3039;"	d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	shared/GLee.h	6421;"	d
GL_SIGNED_RGBA8_NV	include/GL/glext.h	3024;"	d
GL_SIGNED_RGBA8_NV	shared/GLee.h	6406;"	d
GL_SIGNED_RGBA_NV	include/GL/glext.h	3023;"	d
GL_SIGNED_RGBA_NV	shared/GLee.h	6405;"	d
GL_SIGNED_RGB_NV	include/GL/glext.h	3025;"	d
GL_SIGNED_RGB_NV	shared/GLee.h	6407;"	d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	include/GL/glext.h	3038;"	d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	shared/GLee.h	6420;"	d
GL_SINGLE_COLOR	include/GL/gl.h	1502;"	d
GL_SINGLE_COLOR	include/GL/glext.h	97;"	d
GL_SINGLE_COLOR	shared/GLee.h	862;"	d
GL_SINGLE_COLOR_EXT	include/GL/glext.h	2481;"	d
GL_SINGLE_COLOR_EXT	shared/GLee.h	5022;"	d
GL_SLICE_ACCUM_SUN	include/GL/glext.h	3467;"	d
GL_SLICE_ACCUM_SUN	shared/GLee.h	7500;"	d
GL_SLUMINANCE	include/GL/glext.h	499;"	d
GL_SLUMINANCE	shared/GLee.h	1995;"	d
GL_SLUMINANCE8	include/GL/glext.h	500;"	d
GL_SLUMINANCE8	shared/GLee.h	1996;"	d
GL_SLUMINANCE8_ALPHA8	include/GL/glext.h	498;"	d
GL_SLUMINANCE8_ALPHA8	shared/GLee.h	1994;"	d
GL_SLUMINANCE8_ALPHA8_EXT	include/GL/glext.h	3811;"	d
GL_SLUMINANCE8_ALPHA8_EXT	shared/GLee.h	9233;"	d
GL_SLUMINANCE8_EXT	include/GL/glext.h	3813;"	d
GL_SLUMINANCE8_EXT	shared/GLee.h	9235;"	d
GL_SLUMINANCE_ALPHA	include/GL/glext.h	497;"	d
GL_SLUMINANCE_ALPHA	shared/GLee.h	1993;"	d
GL_SLUMINANCE_ALPHA_EXT	include/GL/glext.h	3810;"	d
GL_SLUMINANCE_ALPHA_EXT	shared/GLee.h	9232;"	d
GL_SLUMINANCE_EXT	include/GL/glext.h	3812;"	d
GL_SLUMINANCE_EXT	shared/GLee.h	9234;"	d
GL_SMOOTH	include/GL/gl.h	342;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	include/GL/gl.h	1511;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	include/GL/glext.h	90;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	shared/GLee.h	867;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	include/GL/gl.h	1510;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	include/GL/glext.h	89;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	shared/GLee.h	866;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	include/GL/gl.h	1509;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	include/GL/glext.h	88;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	shared/GLee.h	865;"	d
GL_SMOOTH_POINT_SIZE_RANGE	include/GL/gl.h	1508;"	d
GL_SMOOTH_POINT_SIZE_RANGE	include/GL/glext.h	87;"	d
GL_SMOOTH_POINT_SIZE_RANGE	shared/GLee.h	864;"	d
GL_SOURCE0_ALPHA	include/GL/gl.h	1835;"	d
GL_SOURCE0_ALPHA	include/GL/glext.h	265;"	d
GL_SOURCE0_ALPHA	shared/GLee.h	1153;"	d
GL_SOURCE0_ALPHA_ARB	include/GL/glext.h	1055;"	d
GL_SOURCE0_ALPHA_ARB	shared/GLee.h	2437;"	d
GL_SOURCE0_ALPHA_EXT	include/GL/glext.h	2549;"	d
GL_SOURCE0_ALPHA_EXT	shared/GLee.h	5266;"	d
GL_SOURCE0_RGB	include/GL/gl.h	1832;"	d
GL_SOURCE0_RGB	include/GL/glext.h	262;"	d
GL_SOURCE0_RGB	shared/GLee.h	1150;"	d
GL_SOURCE0_RGB_ARB	include/GL/glext.h	1052;"	d
GL_SOURCE0_RGB_ARB	shared/GLee.h	2434;"	d
GL_SOURCE0_RGB_EXT	include/GL/glext.h	2546;"	d
GL_SOURCE0_RGB_EXT	shared/GLee.h	5263;"	d
GL_SOURCE1_ALPHA	include/GL/gl.h	1836;"	d
GL_SOURCE1_ALPHA	include/GL/glext.h	266;"	d
GL_SOURCE1_ALPHA	shared/GLee.h	1154;"	d
GL_SOURCE1_ALPHA_ARB	include/GL/glext.h	1056;"	d
GL_SOURCE1_ALPHA_ARB	shared/GLee.h	2438;"	d
GL_SOURCE1_ALPHA_EXT	include/GL/glext.h	2550;"	d
GL_SOURCE1_ALPHA_EXT	shared/GLee.h	5267;"	d
GL_SOURCE1_RGB	include/GL/gl.h	1833;"	d
GL_SOURCE1_RGB	include/GL/glext.h	263;"	d
GL_SOURCE1_RGB	shared/GLee.h	1151;"	d
GL_SOURCE1_RGB_ARB	include/GL/glext.h	1053;"	d
GL_SOURCE1_RGB_ARB	shared/GLee.h	2435;"	d
GL_SOURCE1_RGB_EXT	include/GL/glext.h	2547;"	d
GL_SOURCE1_RGB_EXT	shared/GLee.h	5264;"	d
GL_SOURCE2_ALPHA	include/GL/gl.h	1837;"	d
GL_SOURCE2_ALPHA	include/GL/glext.h	267;"	d
GL_SOURCE2_ALPHA	shared/GLee.h	1155;"	d
GL_SOURCE2_ALPHA_ARB	include/GL/glext.h	1057;"	d
GL_SOURCE2_ALPHA_ARB	shared/GLee.h	2439;"	d
GL_SOURCE2_ALPHA_EXT	include/GL/glext.h	2551;"	d
GL_SOURCE2_ALPHA_EXT	shared/GLee.h	5268;"	d
GL_SOURCE2_RGB	include/GL/gl.h	1834;"	d
GL_SOURCE2_RGB	include/GL/glext.h	264;"	d
GL_SOURCE2_RGB	shared/GLee.h	1152;"	d
GL_SOURCE2_RGB_ARB	include/GL/glext.h	1054;"	d
GL_SOURCE2_RGB_ARB	shared/GLee.h	2436;"	d
GL_SOURCE2_RGB_EXT	include/GL/glext.h	2548;"	d
GL_SOURCE2_RGB_EXT	shared/GLee.h	5265;"	d
GL_SOURCE3_ALPHA_NV	include/GL/glext.h	2785;"	d
GL_SOURCE3_ALPHA_NV	shared/GLee.h	5851;"	d
GL_SOURCE3_RGB_NV	include/GL/glext.h	2784;"	d
GL_SOURCE3_RGB_NV	shared/GLee.h	5850;"	d
GL_SPARE0_NV	include/GL/glext.h	2720;"	d
GL_SPARE0_NV	shared/GLee.h	5733;"	d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	include/GL/glext.h	2724;"	d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	shared/GLee.h	5737;"	d
GL_SPARE1_NV	include/GL/glext.h	2721;"	d
GL_SPARE1_NV	shared/GLee.h	5734;"	d
GL_SPECULAR	include/GL/gl.h	329;"	d
GL_SPHERE_MAP	include/GL/gl.h	676;"	d
GL_SPOT_CUTOFF	include/GL/gl.h	323;"	d
GL_SPOT_DIRECTION	include/GL/gl.h	333;"	d
GL_SPOT_EXPONENT	include/GL/gl.h	322;"	d
GL_SPRITE_AXIAL_SGIX	include/GL/glext.h	2104;"	d
GL_SPRITE_AXIAL_SGIX	shared/GLee.h	4116;"	d
GL_SPRITE_AXIS_SGIX	include/GL/glext.h	2102;"	d
GL_SPRITE_AXIS_SGIX	shared/GLee.h	4114;"	d
GL_SPRITE_EYE_ALIGNED_SGIX	include/GL/glext.h	2106;"	d
GL_SPRITE_EYE_ALIGNED_SGIX	shared/GLee.h	4118;"	d
GL_SPRITE_MODE_SGIX	include/GL/glext.h	2101;"	d
GL_SPRITE_MODE_SGIX	shared/GLee.h	4113;"	d
GL_SPRITE_OBJECT_ALIGNED_SGIX	include/GL/glext.h	2105;"	d
GL_SPRITE_OBJECT_ALIGNED_SGIX	shared/GLee.h	4117;"	d
GL_SPRITE_SGIX	include/GL/glext.h	2100;"	d
GL_SPRITE_SGIX	shared/GLee.h	4112;"	d
GL_SPRITE_TRANSLATION_SGIX	include/GL/glext.h	2103;"	d
GL_SPRITE_TRANSLATION_SGIX	shared/GLee.h	4115;"	d
GL_SRC0_ALPHA	include/GL/glext.h	381;"	d
GL_SRC0_ALPHA	shared/GLee.h	1546;"	d
GL_SRC0_RGB	include/GL/glext.h	378;"	d
GL_SRC0_RGB	shared/GLee.h	1543;"	d
GL_SRC1_ALPHA	include/GL/glext.h	382;"	d
GL_SRC1_ALPHA	shared/GLee.h	1547;"	d
GL_SRC1_RGB	include/GL/glext.h	379;"	d
GL_SRC1_RGB	shared/GLee.h	1544;"	d
GL_SRC2_ALPHA	include/GL/glext.h	383;"	d
GL_SRC2_ALPHA	shared/GLee.h	1548;"	d
GL_SRC2_RGB	include/GL/glext.h	380;"	d
GL_SRC2_RGB	shared/GLee.h	1545;"	d
GL_SRC_ALPHA	include/GL/gl.h	381;"	d
GL_SRC_ALPHA_SATURATE	include/GL/gl.h	387;"	d
GL_SRC_COLOR	include/GL/gl.h	379;"	d
GL_SRGB	include/GL/glext.h	487;"	d
GL_SRGB	shared/GLee.h	1989;"	d
GL_SRGB8	include/GL/glext.h	488;"	d
GL_SRGB8	shared/GLee.h	1990;"	d
GL_SRGB8_ALPHA8	include/GL/glext.h	490;"	d
GL_SRGB8_ALPHA8	shared/GLee.h	1992;"	d
GL_SRGB8_ALPHA8_EXT	include/GL/glext.h	3809;"	d
GL_SRGB8_ALPHA8_EXT	shared/GLee.h	9231;"	d
GL_SRGB8_EXT	include/GL/glext.h	3807;"	d
GL_SRGB8_EXT	shared/GLee.h	9229;"	d
GL_SRGB_ALPHA	include/GL/glext.h	489;"	d
GL_SRGB_ALPHA	shared/GLee.h	1991;"	d
GL_SRGB_ALPHA_EXT	include/GL/glext.h	3808;"	d
GL_SRGB_ALPHA_EXT	shared/GLee.h	9230;"	d
GL_SRGB_EXT	include/GL/glext.h	3806;"	d
GL_SRGB_EXT	shared/GLee.h	9228;"	d
GL_STACK_OVERFLOW	include/GL/gl.h	700;"	d
GL_STACK_UNDERFLOW	include/GL/gl.h	701;"	d
GL_STATIC_ATI	include/GL/glext.h	3319;"	d
GL_STATIC_ATI	shared/GLee.h	7018;"	d
GL_STATIC_COPY	include/GL/glext.h	353;"	d
GL_STATIC_COPY	shared/GLee.h	1530;"	d
GL_STATIC_COPY_ARB	include/GL/glext.h	1234;"	d
GL_STATIC_COPY_ARB	shared/GLee.h	2900;"	d
GL_STATIC_DRAW	include/GL/glext.h	351;"	d
GL_STATIC_DRAW	shared/GLee.h	1528;"	d
GL_STATIC_DRAW_ARB	include/GL/glext.h	1232;"	d
GL_STATIC_DRAW_ARB	shared/GLee.h	2898;"	d
GL_STATIC_READ	include/GL/glext.h	352;"	d
GL_STATIC_READ	shared/GLee.h	1529;"	d
GL_STATIC_READ_ARB	include/GL/glext.h	1233;"	d
GL_STATIC_READ_ARB	shared/GLee.h	2899;"	d
GL_STATIC_VERTEX_ARRAY_IBM	shared/GLee.h	9253;"	d
GL_STENCIL	include/GL/gl.h	503;"	d
GL_STENCIL_ATTACHMENT	include/GL/glext.h	1454;"	d
GL_STENCIL_ATTACHMENT_EXT	include/GL/glext.h	3772;"	d
GL_STENCIL_ATTACHMENT_EXT	shared/GLee.h	8301;"	d
GL_STENCIL_BACK_FAIL	include/GL/glext.h	396;"	d
GL_STENCIL_BACK_FAIL	shared/GLee.h	1624;"	d
GL_STENCIL_BACK_FAIL_ATI	include/GL/glext.h	3670;"	d
GL_STENCIL_BACK_FAIL_ATI	shared/GLee.h	8115;"	d
GL_STENCIL_BACK_FUNC	include/GL/glext.h	395;"	d
GL_STENCIL_BACK_FUNC	shared/GLee.h	1623;"	d
GL_STENCIL_BACK_FUNC_ATI	include/GL/glext.h	3669;"	d
GL_STENCIL_BACK_FUNC_ATI	shared/GLee.h	8114;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	include/GL/glext.h	397;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	shared/GLee.h	1625;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	include/GL/glext.h	3671;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	shared/GLee.h	8116;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	include/GL/glext.h	398;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	shared/GLee.h	1626;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	include/GL/glext.h	3672;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	shared/GLee.h	8117;"	d
GL_STENCIL_BACK_REF	include/GL/glext.h	464;"	d
GL_STENCIL_BACK_REF	shared/GLee.h	1695;"	d
GL_STENCIL_BACK_VALUE_MASK	include/GL/glext.h	465;"	d
GL_STENCIL_BACK_VALUE_MASK	shared/GLee.h	1696;"	d
GL_STENCIL_BACK_WRITEMASK	include/GL/glext.h	466;"	d
GL_STENCIL_BACK_WRITEMASK	shared/GLee.h	1697;"	d
GL_STENCIL_BITS	include/GL/gl.h	451;"	d
GL_STENCIL_BUFFER	include/GL/glext.h	521;"	d
GL_STENCIL_BUFFER_BIT	include/GL/gl.h	715;"	d
GL_STENCIL_CLEAR_TAG_VALUE_EXT	include/GL/glext.h	3802;"	d
GL_STENCIL_CLEAR_TAG_VALUE_EXT	shared/GLee.h	9190;"	d
GL_STENCIL_CLEAR_VALUE	include/GL/gl.h	453;"	d
GL_STENCIL_FAIL	include/GL/gl.h	456;"	d
GL_STENCIL_FUNC	include/GL/gl.h	454;"	d
GL_STENCIL_INDEX	include/GL/gl.h	461;"	d
GL_STENCIL_INDEX1	include/GL/glext.h	1460;"	d
GL_STENCIL_INDEX16	include/GL/glext.h	1463;"	d
GL_STENCIL_INDEX16_EXT	include/GL/glext.h	3781;"	d
GL_STENCIL_INDEX16_EXT	shared/GLee.h	8311;"	d
GL_STENCIL_INDEX1_EXT	include/GL/glext.h	3778;"	d
GL_STENCIL_INDEX1_EXT	shared/GLee.h	8308;"	d
GL_STENCIL_INDEX4	include/GL/glext.h	1461;"	d
GL_STENCIL_INDEX4_EXT	include/GL/glext.h	3779;"	d
GL_STENCIL_INDEX4_EXT	shared/GLee.h	8309;"	d
GL_STENCIL_INDEX8	include/GL/glext.h	1462;"	d
GL_STENCIL_INDEX8_EXT	include/GL/glext.h	3780;"	d
GL_STENCIL_INDEX8_EXT	shared/GLee.h	8310;"	d
GL_STENCIL_INDEX_EXT	shared/GLee.h	8307;"	d
GL_STENCIL_PASS_DEPTH_FAIL	include/GL/gl.h	457;"	d
GL_STENCIL_PASS_DEPTH_PASS	include/GL/gl.h	458;"	d
GL_STENCIL_REF	include/GL/gl.h	459;"	d
GL_STENCIL_TAG_BITS_EXT	include/GL/glext.h	3801;"	d
GL_STENCIL_TAG_BITS_EXT	shared/GLee.h	9189;"	d
GL_STENCIL_TEST	include/GL/gl.h	452;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	include/GL/glext.h	3518;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	shared/GLee.h	7618;"	d
GL_STENCIL_VALUE_MASK	include/GL/gl.h	455;"	d
GL_STENCIL_WRITEMASK	include/GL/gl.h	460;"	d
GL_STEREO	include/GL/gl.h	499;"	d
GL_STORAGE_CACHED_APPLE	include/GL/glext.h	3550;"	d
GL_STORAGE_CACHED_APPLE	shared/GLee.h	7734;"	d
GL_STORAGE_PRIVATE_APPLE	include/GL/glext.h	4261;"	d
GL_STORAGE_SHARED_APPLE	include/GL/glext.h	3551;"	d
GL_STORAGE_SHARED_APPLE	shared/GLee.h	7735;"	d
GL_STREAM_COPY	include/GL/glext.h	350;"	d
GL_STREAM_COPY	shared/GLee.h	1527;"	d
GL_STREAM_COPY_ARB	include/GL/glext.h	1231;"	d
GL_STREAM_COPY_ARB	shared/GLee.h	2897;"	d
GL_STREAM_DRAW	include/GL/glext.h	348;"	d
GL_STREAM_DRAW	shared/GLee.h	1525;"	d
GL_STREAM_DRAW_ARB	include/GL/glext.h	1229;"	d
GL_STREAM_DRAW_ARB	shared/GLee.h	2895;"	d
GL_STREAM_READ	include/GL/glext.h	349;"	d
GL_STREAM_READ	shared/GLee.h	1526;"	d
GL_STREAM_READ_ARB	include/GL/glext.h	1230;"	d
GL_STREAM_READ_ARB	shared/GLee.h	2896;"	d
GL_STRICT_DEPTHFUNC_HINT_PGI	include/GL/glext.h	2258;"	d
GL_STRICT_DEPTHFUNC_HINT_PGI	shared/GLee.h	4471;"	d
GL_STRICT_LIGHTING_HINT_PGI	include/GL/glext.h	2259;"	d
GL_STRICT_LIGHTING_HINT_PGI	shared/GLee.h	4472;"	d
GL_STRICT_SCISSOR_HINT_PGI	include/GL/glext.h	2260;"	d
GL_STRICT_SCISSOR_HINT_PGI	shared/GLee.h	4473;"	d
GL_SUBPIXEL_BITS	include/GL/gl.h	494;"	d
GL_SUBTRACT	include/GL/gl.h	1847;"	d
GL_SUBTRACT	include/GL/glext.h	277;"	d
GL_SUBTRACT	shared/GLee.h	1165;"	d
GL_SUBTRACT_ARB	include/GL/glext.h	1067;"	d
GL_SUBTRACT_ARB	shared/GLee.h	2449;"	d
GL_SUB_ATI	include/GL/glext.h	3268;"	d
GL_SUB_ATI	shared/GLee.h	6909;"	d
GL_SUCCESS_NV	include/GL/glext.h	4336;"	d
GL_SUNX_constant_data	include/GL/glext.h	6949;"	d
GL_SUNX_constant_data	shared/GLee.h	5308;"	d
GL_SUN_convolution_border_modes	include/GL/glext.h	7121;"	d
GL_SUN_convolution_border_modes	shared/GLee.h	5621;"	d
GL_SUN_global_alpha	include/GL/glext.h	6957;"	d
GL_SUN_global_alpha	shared/GLee.h	5321;"	d
GL_SUN_mesh_array	include/GL/glext.h	7913;"	d
GL_SUN_mesh_array	shared/GLee.h	7484;"	d
GL_SUN_slice_accum	include/GL/glext.h	7921;"	d
GL_SUN_slice_accum	shared/GLee.h	7497;"	d
GL_SUN_triangle_list	include/GL/glext.h	6979;"	d
GL_SUN_triangle_list	shared/GLee.h	5355;"	d
GL_SUN_vertex	include/GL/glext.h	6999;"	d
GL_SUN_vertex	shared/GLee.h	5401;"	d
GL_SWIZZLE_STQ_ATI	include/GL/glext.h	3286;"	d
GL_SWIZZLE_STQ_ATI	shared/GLee.h	6927;"	d
GL_SWIZZLE_STQ_DQ_ATI	include/GL/glext.h	3288;"	d
GL_SWIZZLE_STQ_DQ_ATI	shared/GLee.h	6929;"	d
GL_SWIZZLE_STRQ_ATI	include/GL/glext.h	3289;"	d
GL_SWIZZLE_STRQ_ATI	shared/GLee.h	6930;"	d
GL_SWIZZLE_STRQ_DQ_ATI	include/GL/glext.h	3290;"	d
GL_SWIZZLE_STRQ_DQ_ATI	shared/GLee.h	6931;"	d
GL_SWIZZLE_STR_ATI	include/GL/glext.h	3285;"	d
GL_SWIZZLE_STR_ATI	shared/GLee.h	6926;"	d
GL_SWIZZLE_STR_DR_ATI	include/GL/glext.h	3287;"	d
GL_SWIZZLE_STR_DR_ATI	shared/GLee.h	6928;"	d
GL_SYNC_CONDITION	include/GL/glext.h	1640;"	d
GL_SYNC_FENCE	include/GL/glext.h	1643;"	d
GL_SYNC_FLAGS	include/GL/glext.h	1642;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	include/GL/glext.h	1651;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	include/GL/glext.h	1644;"	d
GL_SYNC_STATUS	include/GL/glext.h	1641;"	d
GL_T	include/GL/gl.h	683;"	d
GL_T2F_C3F_V3F	include/GL/gl.h	241;"	d
GL_T2F_C4F_N3F_V3F	include/GL/gl.h	243;"	d
GL_T2F_C4UB_V3F	include/GL/gl.h	240;"	d
GL_T2F_IUI_N3F_V2F_EXT	include/GL/glext.h	2326;"	d
GL_T2F_IUI_N3F_V2F_EXT	shared/GLee.h	4633;"	d
GL_T2F_IUI_N3F_V3F_EXT	include/GL/glext.h	2327;"	d
GL_T2F_IUI_N3F_V3F_EXT	shared/GLee.h	4634;"	d
GL_T2F_IUI_V2F_EXT	include/GL/glext.h	2324;"	d
GL_T2F_IUI_V2F_EXT	shared/GLee.h	4631;"	d
GL_T2F_IUI_V3F_EXT	include/GL/glext.h	2325;"	d
GL_T2F_IUI_V3F_EXT	shared/GLee.h	4632;"	d
GL_T2F_N3F_V3F	include/GL/gl.h	242;"	d
GL_T2F_V3F	include/GL/gl.h	238;"	d
GL_T4F_C4F_N3F_V4F	include/GL/gl.h	244;"	d
GL_T4F_V4F	include/GL/gl.h	239;"	d
GL_TABLE_TOO_LARGE	include/GL/gl.h	1625;"	d
GL_TABLE_TOO_LARGE	include/GL/glext.h	150;"	d
GL_TABLE_TOO_LARGE	shared/GLee.h	1036;"	d
GL_TABLE_TOO_LARGE_EXT	include/GL/glext.h	1811;"	d
GL_TABLE_TOO_LARGE_EXT	shared/GLee.h	3495;"	d
GL_TANGENT_ARRAY_EXT	include/GL/glext.h	2520;"	d
GL_TANGENT_ARRAY_EXT	shared/GLee.h	5166;"	d
GL_TANGENT_ARRAY_POINTER_EXT	include/GL/glext.h	2528;"	d
GL_TANGENT_ARRAY_POINTER_EXT	shared/GLee.h	5174;"	d
GL_TANGENT_ARRAY_STRIDE_EXT	include/GL/glext.h	2525;"	d
GL_TANGENT_ARRAY_STRIDE_EXT	shared/GLee.h	5171;"	d
GL_TANGENT_ARRAY_TYPE_EXT	include/GL/glext.h	2524;"	d
GL_TANGENT_ARRAY_TYPE_EXT	shared/GLee.h	5170;"	d
GL_TESSELLATION_FACTOR_AMD	include/GL/glext.h	4214;"	d
GL_TESSELLATION_MODE_AMD	include/GL/glext.h	4213;"	d
GL_TEXCOORD1_BIT_PGI	include/GL/glext.h	2237;"	d
GL_TEXCOORD1_BIT_PGI	shared/GLee.h	4445;"	d
GL_TEXCOORD2_BIT_PGI	include/GL/glext.h	2238;"	d
GL_TEXCOORD2_BIT_PGI	shared/GLee.h	4446;"	d
GL_TEXCOORD3_BIT_PGI	include/GL/glext.h	2239;"	d
GL_TEXCOORD3_BIT_PGI	shared/GLee.h	4447;"	d
GL_TEXCOORD4_BIT_PGI	include/GL/glext.h	2240;"	d
GL_TEXCOORD4_BIT_PGI	shared/GLee.h	4448;"	d
GL_TEXTURE	include/GL/gl.h	250;"	d
GL_TEXTURE0	include/GL/gl.h	1753;"	d
GL_TEXTURE0	include/GL/glext.h	184;"	d
GL_TEXTURE0	shared/GLee.h	1075;"	d
GL_TEXTURE0_ARB	include/GL/gl.h	1969;"	d
GL_TEXTURE0_ARB	include/GL/glext.h	891;"	d
GL_TEXTURE0_ARB	shared/GLee.h	2034;"	d
GL_TEXTURE1	include/GL/gl.h	1754;"	d
GL_TEXTURE1	include/GL/glext.h	185;"	d
GL_TEXTURE1	shared/GLee.h	1076;"	d
GL_TEXTURE10	include/GL/gl.h	1763;"	d
GL_TEXTURE10	include/GL/glext.h	194;"	d
GL_TEXTURE10	shared/GLee.h	1085;"	d
GL_TEXTURE10_ARB	include/GL/gl.h	1979;"	d
GL_TEXTURE10_ARB	include/GL/glext.h	901;"	d
GL_TEXTURE10_ARB	shared/GLee.h	2044;"	d
GL_TEXTURE11	include/GL/gl.h	1764;"	d
GL_TEXTURE11	include/GL/glext.h	195;"	d
GL_TEXTURE11	shared/GLee.h	1086;"	d
GL_TEXTURE11_ARB	include/GL/gl.h	1980;"	d
GL_TEXTURE11_ARB	include/GL/glext.h	902;"	d
GL_TEXTURE11_ARB	shared/GLee.h	2045;"	d
GL_TEXTURE12	include/GL/gl.h	1765;"	d
GL_TEXTURE12	include/GL/glext.h	196;"	d
GL_TEXTURE12	shared/GLee.h	1087;"	d
GL_TEXTURE12_ARB	include/GL/gl.h	1981;"	d
GL_TEXTURE12_ARB	include/GL/glext.h	903;"	d
GL_TEXTURE12_ARB	shared/GLee.h	2046;"	d
GL_TEXTURE13	include/GL/gl.h	1766;"	d
GL_TEXTURE13	include/GL/glext.h	197;"	d
GL_TEXTURE13	shared/GLee.h	1088;"	d
GL_TEXTURE13_ARB	include/GL/gl.h	1982;"	d
GL_TEXTURE13_ARB	include/GL/glext.h	904;"	d
GL_TEXTURE13_ARB	shared/GLee.h	2047;"	d
GL_TEXTURE14	include/GL/gl.h	1767;"	d
GL_TEXTURE14	include/GL/glext.h	198;"	d
GL_TEXTURE14	shared/GLee.h	1089;"	d
GL_TEXTURE14_ARB	include/GL/gl.h	1983;"	d
GL_TEXTURE14_ARB	include/GL/glext.h	905;"	d
GL_TEXTURE14_ARB	shared/GLee.h	2048;"	d
GL_TEXTURE15	include/GL/gl.h	1768;"	d
GL_TEXTURE15	include/GL/glext.h	199;"	d
GL_TEXTURE15	shared/GLee.h	1090;"	d
GL_TEXTURE15_ARB	include/GL/gl.h	1984;"	d
GL_TEXTURE15_ARB	include/GL/glext.h	906;"	d
GL_TEXTURE15_ARB	shared/GLee.h	2049;"	d
GL_TEXTURE16	include/GL/gl.h	1769;"	d
GL_TEXTURE16	include/GL/glext.h	200;"	d
GL_TEXTURE16	shared/GLee.h	1091;"	d
GL_TEXTURE16_ARB	include/GL/gl.h	1985;"	d
GL_TEXTURE16_ARB	include/GL/glext.h	907;"	d
GL_TEXTURE16_ARB	shared/GLee.h	2050;"	d
GL_TEXTURE17	include/GL/gl.h	1770;"	d
GL_TEXTURE17	include/GL/glext.h	201;"	d
GL_TEXTURE17	shared/GLee.h	1092;"	d
GL_TEXTURE17_ARB	include/GL/gl.h	1986;"	d
GL_TEXTURE17_ARB	include/GL/glext.h	908;"	d
GL_TEXTURE17_ARB	shared/GLee.h	2051;"	d
GL_TEXTURE18	include/GL/gl.h	1771;"	d
GL_TEXTURE18	include/GL/glext.h	202;"	d
GL_TEXTURE18	shared/GLee.h	1093;"	d
GL_TEXTURE18_ARB	include/GL/gl.h	1987;"	d
GL_TEXTURE18_ARB	include/GL/glext.h	909;"	d
GL_TEXTURE18_ARB	shared/GLee.h	2052;"	d
GL_TEXTURE19	include/GL/gl.h	1772;"	d
GL_TEXTURE19	include/GL/glext.h	203;"	d
GL_TEXTURE19	shared/GLee.h	1094;"	d
GL_TEXTURE19_ARB	include/GL/gl.h	1988;"	d
GL_TEXTURE19_ARB	include/GL/glext.h	910;"	d
GL_TEXTURE19_ARB	shared/GLee.h	2053;"	d
GL_TEXTURE1_ARB	include/GL/gl.h	1970;"	d
GL_TEXTURE1_ARB	include/GL/glext.h	892;"	d
GL_TEXTURE1_ARB	shared/GLee.h	2035;"	d
GL_TEXTURE2	include/GL/gl.h	1755;"	d
GL_TEXTURE2	include/GL/glext.h	186;"	d
GL_TEXTURE2	shared/GLee.h	1077;"	d
GL_TEXTURE20	include/GL/gl.h	1773;"	d
GL_TEXTURE20	include/GL/glext.h	204;"	d
GL_TEXTURE20	shared/GLee.h	1095;"	d
GL_TEXTURE20_ARB	include/GL/gl.h	1989;"	d
GL_TEXTURE20_ARB	include/GL/glext.h	911;"	d
GL_TEXTURE20_ARB	shared/GLee.h	2054;"	d
GL_TEXTURE21	include/GL/gl.h	1774;"	d
GL_TEXTURE21	include/GL/glext.h	205;"	d
GL_TEXTURE21	shared/GLee.h	1096;"	d
GL_TEXTURE21_ARB	include/GL/gl.h	1990;"	d
GL_TEXTURE21_ARB	include/GL/glext.h	912;"	d
GL_TEXTURE21_ARB	shared/GLee.h	2055;"	d
GL_TEXTURE22	include/GL/gl.h	1775;"	d
GL_TEXTURE22	include/GL/glext.h	206;"	d
GL_TEXTURE22	shared/GLee.h	1097;"	d
GL_TEXTURE22_ARB	include/GL/gl.h	1991;"	d
GL_TEXTURE22_ARB	include/GL/glext.h	913;"	d
GL_TEXTURE22_ARB	shared/GLee.h	2056;"	d
GL_TEXTURE23	include/GL/gl.h	1776;"	d
GL_TEXTURE23	include/GL/glext.h	207;"	d
GL_TEXTURE23	shared/GLee.h	1098;"	d
GL_TEXTURE23_ARB	include/GL/gl.h	1992;"	d
GL_TEXTURE23_ARB	include/GL/glext.h	914;"	d
GL_TEXTURE23_ARB	shared/GLee.h	2057;"	d
GL_TEXTURE24	include/GL/gl.h	1777;"	d
GL_TEXTURE24	include/GL/glext.h	208;"	d
GL_TEXTURE24	shared/GLee.h	1099;"	d
GL_TEXTURE24_ARB	include/GL/gl.h	1993;"	d
GL_TEXTURE24_ARB	include/GL/glext.h	915;"	d
GL_TEXTURE24_ARB	shared/GLee.h	2058;"	d
GL_TEXTURE25	include/GL/gl.h	1778;"	d
GL_TEXTURE25	include/GL/glext.h	209;"	d
GL_TEXTURE25	shared/GLee.h	1100;"	d
GL_TEXTURE25_ARB	include/GL/gl.h	1994;"	d
GL_TEXTURE25_ARB	include/GL/glext.h	916;"	d
GL_TEXTURE25_ARB	shared/GLee.h	2059;"	d
GL_TEXTURE26	include/GL/gl.h	1779;"	d
GL_TEXTURE26	include/GL/glext.h	210;"	d
GL_TEXTURE26	shared/GLee.h	1101;"	d
GL_TEXTURE26_ARB	include/GL/gl.h	1995;"	d
GL_TEXTURE26_ARB	include/GL/glext.h	917;"	d
GL_TEXTURE26_ARB	shared/GLee.h	2060;"	d
GL_TEXTURE27	include/GL/gl.h	1780;"	d
GL_TEXTURE27	include/GL/glext.h	211;"	d
GL_TEXTURE27	shared/GLee.h	1102;"	d
GL_TEXTURE27_ARB	include/GL/gl.h	1996;"	d
GL_TEXTURE27_ARB	include/GL/glext.h	918;"	d
GL_TEXTURE27_ARB	shared/GLee.h	2061;"	d
GL_TEXTURE28	include/GL/gl.h	1781;"	d
GL_TEXTURE28	include/GL/glext.h	212;"	d
GL_TEXTURE28	shared/GLee.h	1103;"	d
GL_TEXTURE28_ARB	include/GL/gl.h	1997;"	d
GL_TEXTURE28_ARB	include/GL/glext.h	919;"	d
GL_TEXTURE28_ARB	shared/GLee.h	2062;"	d
GL_TEXTURE29	include/GL/gl.h	1782;"	d
GL_TEXTURE29	include/GL/glext.h	213;"	d
GL_TEXTURE29	shared/GLee.h	1104;"	d
GL_TEXTURE29_ARB	include/GL/gl.h	1998;"	d
GL_TEXTURE29_ARB	include/GL/glext.h	920;"	d
GL_TEXTURE29_ARB	shared/GLee.h	2063;"	d
GL_TEXTURE2_ARB	include/GL/gl.h	1971;"	d
GL_TEXTURE2_ARB	include/GL/glext.h	893;"	d
GL_TEXTURE2_ARB	shared/GLee.h	2036;"	d
GL_TEXTURE3	include/GL/gl.h	1756;"	d
GL_TEXTURE3	include/GL/glext.h	187;"	d
GL_TEXTURE3	shared/GLee.h	1078;"	d
GL_TEXTURE30	include/GL/gl.h	1783;"	d
GL_TEXTURE30	include/GL/glext.h	214;"	d
GL_TEXTURE30	shared/GLee.h	1105;"	d
GL_TEXTURE30_ARB	include/GL/gl.h	1999;"	d
GL_TEXTURE30_ARB	include/GL/glext.h	921;"	d
GL_TEXTURE30_ARB	shared/GLee.h	2064;"	d
GL_TEXTURE31	include/GL/gl.h	1784;"	d
GL_TEXTURE31	include/GL/glext.h	215;"	d
GL_TEXTURE31	shared/GLee.h	1106;"	d
GL_TEXTURE31_ARB	include/GL/gl.h	2000;"	d
GL_TEXTURE31_ARB	include/GL/glext.h	922;"	d
GL_TEXTURE31_ARB	shared/GLee.h	2065;"	d
GL_TEXTURE3_ARB	include/GL/gl.h	1972;"	d
GL_TEXTURE3_ARB	include/GL/glext.h	894;"	d
GL_TEXTURE3_ARB	shared/GLee.h	2037;"	d
GL_TEXTURE4	include/GL/gl.h	1757;"	d
GL_TEXTURE4	include/GL/glext.h	188;"	d
GL_TEXTURE4	shared/GLee.h	1079;"	d
GL_TEXTURE4_ARB	include/GL/gl.h	1973;"	d
GL_TEXTURE4_ARB	include/GL/glext.h	895;"	d
GL_TEXTURE4_ARB	shared/GLee.h	2038;"	d
GL_TEXTURE5	include/GL/gl.h	1758;"	d
GL_TEXTURE5	include/GL/glext.h	189;"	d
GL_TEXTURE5	shared/GLee.h	1080;"	d
GL_TEXTURE5_ARB	include/GL/gl.h	1974;"	d
GL_TEXTURE5_ARB	include/GL/glext.h	896;"	d
GL_TEXTURE5_ARB	shared/GLee.h	2039;"	d
GL_TEXTURE6	include/GL/gl.h	1759;"	d
GL_TEXTURE6	include/GL/glext.h	190;"	d
GL_TEXTURE6	shared/GLee.h	1081;"	d
GL_TEXTURE6_ARB	include/GL/gl.h	1975;"	d
GL_TEXTURE6_ARB	include/GL/glext.h	897;"	d
GL_TEXTURE6_ARB	shared/GLee.h	2040;"	d
GL_TEXTURE7	include/GL/gl.h	1760;"	d
GL_TEXTURE7	include/GL/glext.h	191;"	d
GL_TEXTURE7	shared/GLee.h	1082;"	d
GL_TEXTURE7_ARB	include/GL/gl.h	1976;"	d
GL_TEXTURE7_ARB	include/GL/glext.h	898;"	d
GL_TEXTURE7_ARB	shared/GLee.h	2041;"	d
GL_TEXTURE8	include/GL/gl.h	1761;"	d
GL_TEXTURE8	include/GL/glext.h	192;"	d
GL_TEXTURE8	shared/GLee.h	1083;"	d
GL_TEXTURE8_ARB	include/GL/gl.h	1977;"	d
GL_TEXTURE8_ARB	include/GL/glext.h	899;"	d
GL_TEXTURE8_ARB	shared/GLee.h	2042;"	d
GL_TEXTURE9	include/GL/gl.h	1762;"	d
GL_TEXTURE9	include/GL/glext.h	193;"	d
GL_TEXTURE9	shared/GLee.h	1084;"	d
GL_TEXTURE9_ARB	include/GL/gl.h	1978;"	d
GL_TEXTURE9_ARB	include/GL/glext.h	900;"	d
GL_TEXTURE9_ARB	shared/GLee.h	2043;"	d
GL_TEXTURE_1D	include/GL/gl.h	647;"	d
GL_TEXTURE_1D_ARRAY	include/GL/glext.h	536;"	d
GL_TEXTURE_1D_ARRAY_EXT	include/GL/gl.h	2172;"	d
GL_TEXTURE_1D_ARRAY_EXT	include/GL/glext.h	3953;"	d
GL_TEXTURE_1D_ARRAY_EXT	shared/GLee.h	8660;"	d
GL_TEXTURE_1D_BINDING_EXT	include/GL/glext.h	1910;"	d
GL_TEXTURE_1D_BINDING_EXT	shared/GLee.h	3756;"	d
GL_TEXTURE_1D_STACK_BINDING_MESAX	include/GL/glext.h	3842;"	d
GL_TEXTURE_1D_STACK_BINDING_MESAX	shared/GLee.h	9266;"	d
GL_TEXTURE_1D_STACK_MESAX	include/GL/glext.h	3838;"	d
GL_TEXTURE_1D_STACK_MESAX	shared/GLee.h	9262;"	d
GL_TEXTURE_2D	include/GL/gl.h	648;"	d
GL_TEXTURE_2D_ARRAY	include/GL/glext.h	538;"	d
GL_TEXTURE_2D_ARRAY_EXT	include/GL/gl.h	2174;"	d
GL_TEXTURE_2D_ARRAY_EXT	include/GL/glext.h	3955;"	d
GL_TEXTURE_2D_ARRAY_EXT	shared/GLee.h	8662;"	d
GL_TEXTURE_2D_BINDING_EXT	include/GL/glext.h	1911;"	d
GL_TEXTURE_2D_BINDING_EXT	shared/GLee.h	3757;"	d
GL_TEXTURE_2D_MULTISAMPLE	include/GL/glext.h	1660;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	include/GL/glext.h	1662;"	d
GL_TEXTURE_2D_STACK_BINDING_MESAX	include/GL/glext.h	3843;"	d
GL_TEXTURE_2D_STACK_BINDING_MESAX	shared/GLee.h	9267;"	d
GL_TEXTURE_2D_STACK_MESAX	include/GL/glext.h	3839;"	d
GL_TEXTURE_2D_STACK_MESAX	shared/GLee.h	9263;"	d
GL_TEXTURE_3D	include/GL/gl.h	1518;"	d
GL_TEXTURE_3D	include/GL/glext.h	66;"	d
GL_TEXTURE_3D	shared/GLee.h	840;"	d
GL_TEXTURE_3D_BINDING_EXT	include/GL/glext.h	1912;"	d
GL_TEXTURE_3D_BINDING_EXT	shared/GLee.h	3758;"	d
GL_TEXTURE_3D_EXT	include/GL/glext.h	1779;"	d
GL_TEXTURE_3D_EXT	shared/GLee.h	3410;"	d
GL_TEXTURE_4DSIZE_SGIS	include/GL/glext.h	1889;"	d
GL_TEXTURE_4DSIZE_SGIS	shared/GLee.h	3714;"	d
GL_TEXTURE_4D_BINDING_SGIS	include/GL/glext.h	1892;"	d
GL_TEXTURE_4D_BINDING_SGIS	shared/GLee.h	3717;"	d
GL_TEXTURE_4D_SGIS	include/GL/glext.h	1887;"	d
GL_TEXTURE_4D_SGIS	shared/GLee.h	3712;"	d
GL_TEXTURE_ALPHA_SIZE	include/GL/gl.h	665;"	d
GL_TEXTURE_ALPHA_SIZE_EXT	include/GL/glext.h	1765;"	d
GL_TEXTURE_ALPHA_SIZE_EXT	shared/GLee.h	3391;"	d
GL_TEXTURE_ALPHA_TYPE	include/GL/glext.h	1415;"	d
GL_TEXTURE_ALPHA_TYPE_ARB	include/GL/glext.h	1359;"	d
GL_TEXTURE_ALPHA_TYPE_ARB	shared/GLee.h	3279;"	d
GL_TEXTURE_APPLICATION_MODE_EXT	include/GL/glext.h	2399;"	d
GL_TEXTURE_APPLICATION_MODE_EXT	shared/GLee.h	4825;"	d
GL_TEXTURE_BASE_LEVEL	include/GL/gl.h	1506;"	d
GL_TEXTURE_BASE_LEVEL	include/GL/glext.h	85;"	d
GL_TEXTURE_BASE_LEVEL	shared/GLee.h	859;"	d
GL_TEXTURE_BASE_LEVEL_SGIS	include/GL/glext.h	1944;"	d
GL_TEXTURE_BASE_LEVEL_SGIS	shared/GLee.h	3840;"	d
GL_TEXTURE_BINDING_1D	include/GL/gl.h	733;"	d
GL_TEXTURE_BINDING_1D_ARRAY	include/GL/glext.h	540;"	d
GL_TEXTURE_BINDING_1D_ARRAY_EXT	include/GL/gl.h	2176;"	d
GL_TEXTURE_BINDING_1D_ARRAY_EXT	include/GL/glext.h	3957;"	d
GL_TEXTURE_BINDING_1D_ARRAY_EXT	shared/GLee.h	8664;"	d
GL_TEXTURE_BINDING_2D	include/GL/gl.h	734;"	d
GL_TEXTURE_BINDING_2D_ARRAY	include/GL/glext.h	541;"	d
GL_TEXTURE_BINDING_2D_ARRAY_EXT	include/GL/gl.h	2177;"	d
GL_TEXTURE_BINDING_2D_ARRAY_EXT	include/GL/glext.h	3958;"	d
GL_TEXTURE_BINDING_2D_ARRAY_EXT	shared/GLee.h	8665;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	include/GL/glext.h	1664;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	include/GL/glext.h	1665;"	d
GL_TEXTURE_BINDING_3D	include/GL/gl.h	1523;"	d
GL_TEXTURE_BINDING_3D	include/GL/glext.h	61;"	d
GL_TEXTURE_BINDING_3D	shared/GLee.h	835;"	d
GL_TEXTURE_BINDING_BUFFER	include/GL/glext.h	753;"	d
GL_TEXTURE_BINDING_BUFFER_ARB	include/GL/glext.h	1527;"	d
GL_TEXTURE_BINDING_BUFFER_EXT	include/GL/glext.h	3967;"	d
GL_TEXTURE_BINDING_BUFFER_EXT	shared/GLee.h	8415;"	d
GL_TEXTURE_BINDING_CUBE_MAP	include/GL/gl.h	1792;"	d
GL_TEXTURE_BINDING_CUBE_MAP	include/GL/glext.h	226;"	d
GL_TEXTURE_BINDING_CUBE_MAP	shared/GLee.h	1126;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	include/GL/glext.h	954;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	shared/GLee.h	2234;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	include/GL/glext.h	1693;"	d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	include/GL/glext.h	2649;"	d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	shared/GLee.h	5607;"	d
GL_TEXTURE_BINDING_RECTANGLE	include/GL/glext.h	757;"	d
GL_TEXTURE_BINDING_RECTANGLE_ARB	include/GL/glext.h	1338;"	d
GL_TEXTURE_BINDING_RECTANGLE_ARB	shared/GLee.h	3240;"	d
GL_TEXTURE_BINDING_RECTANGLE_NV	include/GL/glext.h	2979;"	d
GL_TEXTURE_BINDING_RECTANGLE_NV	shared/GLee.h	6356;"	d
GL_TEXTURE_BINDING_RENDERBUFFER_NV	include/GL/glext.h	4174;"	d
GL_TEXTURE_BIT	include/GL/gl.h	723;"	d
GL_TEXTURE_BLUE_SIZE	include/GL/gl.h	664;"	d
GL_TEXTURE_BLUE_SIZE_EXT	include/GL/glext.h	1764;"	d
GL_TEXTURE_BLUE_SIZE_EXT	shared/GLee.h	3390;"	d
GL_TEXTURE_BLUE_TYPE	include/GL/glext.h	1414;"	d
GL_TEXTURE_BLUE_TYPE_ARB	include/GL/glext.h	1358;"	d
GL_TEXTURE_BLUE_TYPE_ARB	shared/GLee.h	3278;"	d
GL_TEXTURE_BORDER	include/GL/gl.h	660;"	d
GL_TEXTURE_BORDER_COLOR	include/GL/gl.h	657;"	d
GL_TEXTURE_BORDER_VALUES_NV	include/GL/glext.h	3052;"	d
GL_TEXTURE_BORDER_VALUES_NV	shared/GLee.h	6434;"	d
GL_TEXTURE_BUFFER	include/GL/glext.h	751;"	d
GL_TEXTURE_BUFFER_ARB	include/GL/glext.h	1525;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	include/GL/glext.h	754;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB	include/GL/glext.h	1528;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT	include/GL/glext.h	3968;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT	shared/GLee.h	8416;"	d
GL_TEXTURE_BUFFER_EXT	include/GL/glext.h	3965;"	d
GL_TEXTURE_BUFFER_EXT	shared/GLee.h	8413;"	d
GL_TEXTURE_BUFFER_FORMAT	include/GL/glext.h	755;"	d
GL_TEXTURE_BUFFER_FORMAT_ARB	include/GL/glext.h	1529;"	d
GL_TEXTURE_BUFFER_FORMAT_EXT	include/GL/glext.h	3969;"	d
GL_TEXTURE_BUFFER_FORMAT_EXT	shared/GLee.h	8417;"	d
GL_TEXTURE_CLIPMAP_CENTER_SGIX	include/GL/glext.h	2016;"	d
GL_TEXTURE_CLIPMAP_CENTER_SGIX	shared/GLee.h	3975;"	d
GL_TEXTURE_CLIPMAP_DEPTH_SGIX	include/GL/glext.h	2021;"	d
GL_TEXTURE_CLIPMAP_DEPTH_SGIX	shared/GLee.h	3980;"	d
GL_TEXTURE_CLIPMAP_FRAME_SGIX	include/GL/glext.h	2017;"	d
GL_TEXTURE_CLIPMAP_FRAME_SGIX	shared/GLee.h	3976;"	d
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX	include/GL/glext.h	2020;"	d
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX	shared/GLee.h	3979;"	d
GL_TEXTURE_CLIPMAP_OFFSET_SGIX	include/GL/glext.h	2018;"	d
GL_TEXTURE_CLIPMAP_OFFSET_SGIX	shared/GLee.h	3977;"	d
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX	include/GL/glext.h	2019;"	d
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX	shared/GLee.h	3978;"	d
GL_TEXTURE_COLOR_TABLE_SGI	include/GL/glext.h	1896;"	d
GL_TEXTURE_COLOR_TABLE_SGI	shared/GLee.h	3732;"	d
GL_TEXTURE_COLOR_WRITEMASK_SGIS	include/GL/glext.h	2915;"	d
GL_TEXTURE_COLOR_WRITEMASK_SGIS	shared/GLee.h	6190;"	d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	include/GL/glext.h	1100;"	d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	shared/GLee.h	2512;"	d
GL_TEXTURE_COMPARE_FUNC	include/GL/glext.h	301;"	d
GL_TEXTURE_COMPARE_FUNC	shared/GLee.h	1354;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	include/GL/glext.h	1095;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	shared/GLee.h	2502;"	d
GL_TEXTURE_COMPARE_MODE	include/GL/glext.h	300;"	d
GL_TEXTURE_COMPARE_MODE	shared/GLee.h	1353;"	d
GL_TEXTURE_COMPARE_MODE_ARB	include/GL/glext.h	1094;"	d
GL_TEXTURE_COMPARE_MODE_ARB	shared/GLee.h	2501;"	d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	include/GL/glext.h	2031;"	d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	shared/GLee.h	3995;"	d
GL_TEXTURE_COMPARE_SGIX	include/GL/glext.h	2030;"	d
GL_TEXTURE_COMPARE_SGIX	shared/GLee.h	3994;"	d
GL_TEXTURE_COMPONENTS	include/GL/gl.h	661;"	d
GL_TEXTURE_COMPRESSED	include/GL/gl.h	1810;"	d
GL_TEXTURE_COMPRESSED	include/GL/glext.h	239;"	d
GL_TEXTURE_COMPRESSED	shared/GLee.h	1143;"	d
GL_TEXTURE_COMPRESSED_ARB	include/GL/glext.h	974;"	d
GL_TEXTURE_COMPRESSED_ARB	shared/GLee.h	2259;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	include/GL/gl.h	1809;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	include/GL/glext.h	238;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	shared/GLee.h	1142;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	include/GL/glext.h	973;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	shared/GLee.h	2258;"	d
GL_TEXTURE_COMPRESSION_HINT	include/GL/gl.h	1808;"	d
GL_TEXTURE_COMPRESSION_HINT	include/GL/glext.h	237;"	d
GL_TEXTURE_COMPRESSION_HINT	shared/GLee.h	1141;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	include/GL/glext.h	972;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	shared/GLee.h	2257;"	d
GL_TEXTURE_CONSTANT_DATA_SUNX	include/GL/glext.h	2575;"	d
GL_TEXTURE_CONSTANT_DATA_SUNX	shared/GLee.h	5312;"	d
GL_TEXTURE_COORD_ARRAY	include/GL/gl.h	209;"	d
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV	include/GL/glext.h	4376;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	include/GL/glext.h	365;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	shared/GLee.h	1513;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	1217;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	shared/GLee.h	2883;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	include/GL/glext.h	1995;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	shared/GLee.h	3912;"	d
GL_TEXTURE_COORD_ARRAY_EXT	include/GL/glext.h	1976;"	d
GL_TEXTURE_COORD_ARRAY_EXT	shared/GLee.h	3893;"	d
GL_TEXTURE_COORD_ARRAY_LENGTH_NV	include/GL/glext.h	4386;"	d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	include/GL/glext.h	2815;"	d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	shared/GLee.h	5992;"	d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	include/GL/glext.h	2823;"	d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	shared/GLee.h	6000;"	d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	include/GL/glext.h	2452;"	d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	shared/GLee.h	4944;"	d
GL_TEXTURE_COORD_ARRAY_POINTER	include/GL/gl.h	229;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	include/GL/glext.h	2002;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	shared/GLee.h	3919;"	d
GL_TEXTURE_COORD_ARRAY_SIZE	include/GL/gl.h	221;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	include/GL/glext.h	1992;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	shared/GLee.h	3909;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE	include/GL/gl.h	223;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	include/GL/glext.h	1994;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	shared/GLee.h	3911;"	d
GL_TEXTURE_COORD_ARRAY_TYPE	include/GL/gl.h	222;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	include/GL/glext.h	1993;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	shared/GLee.h	3910;"	d
GL_TEXTURE_COORD_NV	include/GL/glext.h	4031;"	d
GL_TEXTURE_COORD_NV	shared/GLee.h	8784;"	d
GL_TEXTURE_CUBE_MAP	include/GL/gl.h	1791;"	d
GL_TEXTURE_CUBE_MAP	include/GL/glext.h	225;"	d
GL_TEXTURE_CUBE_MAP	shared/GLee.h	1125;"	d
GL_TEXTURE_CUBE_MAP_ARB	include/GL/glext.h	953;"	d
GL_TEXTURE_CUBE_MAP_ARB	shared/GLee.h	2233;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	include/GL/glext.h	1692;"	d
GL_TEXTURE_CUBE_MAP_EXT	include/GL/glext.h	2648;"	d
GL_TEXTURE_CUBE_MAP_EXT	shared/GLee.h	5606;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	include/GL/gl.h	1794;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	include/GL/glext.h	228;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	shared/GLee.h	1128;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	include/GL/glext.h	956;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	shared/GLee.h	2236;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	include/GL/glext.h	2651;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	shared/GLee.h	5609;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	include/GL/gl.h	1796;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	include/GL/glext.h	230;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	shared/GLee.h	1130;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	include/GL/glext.h	958;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	shared/GLee.h	2238;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	include/GL/glext.h	2653;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	shared/GLee.h	5611;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	include/GL/gl.h	1798;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	include/GL/glext.h	232;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	shared/GLee.h	1132;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	include/GL/glext.h	960;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	shared/GLee.h	2240;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	include/GL/glext.h	2655;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	shared/GLee.h	5613;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	include/GL/gl.h	1793;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	include/GL/glext.h	227;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	shared/GLee.h	1127;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	include/GL/glext.h	955;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	shared/GLee.h	2235;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	include/GL/glext.h	2650;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	shared/GLee.h	5608;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	include/GL/gl.h	1795;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	include/GL/glext.h	229;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	shared/GLee.h	1129;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	include/GL/glext.h	957;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	shared/GLee.h	2237;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	include/GL/glext.h	2652;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	shared/GLee.h	5610;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	include/GL/gl.h	1797;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	include/GL/glext.h	231;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	shared/GLee.h	1131;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	include/GL/glext.h	959;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	shared/GLee.h	2239;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	include/GL/glext.h	2654;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	shared/GLee.h	5612;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	include/GL/glext.h	1634;"	d
GL_TEXTURE_DEFORMATION_BIT_SGIX	include/GL/glext.h	2149;"	d
GL_TEXTURE_DEFORMATION_BIT_SGIX	shared/GLee.h	4249;"	d
GL_TEXTURE_DEFORMATION_SGIX	include/GL/glext.h	2155;"	d
GL_TEXTURE_DEFORMATION_SGIX	shared/GLee.h	4260;"	d
GL_TEXTURE_DEPTH	include/GL/gl.h	1520;"	d
GL_TEXTURE_DEPTH	include/GL/glext.h	68;"	d
GL_TEXTURE_DEPTH	shared/GLee.h	842;"	d
GL_TEXTURE_DEPTH_EXT	include/GL/glext.h	1781;"	d
GL_TEXTURE_DEPTH_EXT	shared/GLee.h	3412;"	d
GL_TEXTURE_DEPTH_SIZE	include/GL/glext.h	299;"	d
GL_TEXTURE_DEPTH_SIZE	shared/GLee.h	1351;"	d
GL_TEXTURE_DEPTH_SIZE_ARB	include/GL/glext.h	1089;"	d
GL_TEXTURE_DEPTH_SIZE_ARB	shared/GLee.h	2491;"	d
GL_TEXTURE_DEPTH_TYPE	include/GL/glext.h	1416;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	include/GL/glext.h	1362;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	shared/GLee.h	3282;"	d
GL_TEXTURE_DS_SIZE_NV	include/GL/glext.h	3055;"	d
GL_TEXTURE_DS_SIZE_NV	shared/GLee.h	6437;"	d
GL_TEXTURE_DT_SIZE_NV	include/GL/glext.h	3056;"	d
GL_TEXTURE_DT_SIZE_NV	shared/GLee.h	6438;"	d
GL_TEXTURE_ENV	include/GL/gl.h	645;"	d
GL_TEXTURE_ENV0_EXT	shared/GLee.h	9209;"	d
GL_TEXTURE_ENV_BIAS_SGIX	include/GL/glext.h	2214;"	d
GL_TEXTURE_ENV_BIAS_SGIX	shared/GLee.h	4406;"	d
GL_TEXTURE_ENV_COLOR	include/GL/gl.h	653;"	d
GL_TEXTURE_ENV_MODE	include/GL/gl.h	646;"	d
GL_TEXTURE_ENV_MODE_ALPHA_EXT	shared/GLee.h	9210;"	d
GL_TEXTURE_ENV_SHIFT_EXT	shared/GLee.h	9219;"	d
GL_TEXTURE_FILTER4_SIZE_SGIS	include/GL/glext.h	1788;"	d
GL_TEXTURE_FILTER4_SIZE_SGIS	shared/GLee.h	3430;"	d
GL_TEXTURE_FILTER_CONTROL	include/GL/glext.h	325;"	d
GL_TEXTURE_FILTER_CONTROL	shared/GLee.h	1347;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	include/GL/glext.h	2669;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	shared/GLee.h	5642;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	include/GL/glext.h	1667;"	d
GL_TEXTURE_FLOAT_COMPONENTS_NV	include/GL/glext.h	3626;"	d
GL_TEXTURE_FLOAT_COMPONENTS_NV	shared/GLee.h	7857;"	d
GL_TEXTURE_FREE_MEMORY_ATI	include/GL/glext.h	4192;"	d
GL_TEXTURE_GEN_MODE	include/GL/gl.h	656;"	d
GL_TEXTURE_GEN_Q	include/GL/gl.h	687;"	d
GL_TEXTURE_GEN_R	include/GL/gl.h	686;"	d
GL_TEXTURE_GEN_S	include/GL/gl.h	654;"	d
GL_TEXTURE_GEN_T	include/GL/gl.h	655;"	d
GL_TEXTURE_GEQUAL_R_SGIX	include/GL/glext.h	2033;"	d
GL_TEXTURE_GEQUAL_R_SGIX	shared/GLee.h	3997;"	d
GL_TEXTURE_GREEN_SIZE	include/GL/gl.h	663;"	d
GL_TEXTURE_GREEN_SIZE_EXT	include/GL/glext.h	1763;"	d
GL_TEXTURE_GREEN_SIZE_EXT	shared/GLee.h	3389;"	d
GL_TEXTURE_GREEN_TYPE	include/GL/glext.h	1413;"	d
GL_TEXTURE_GREEN_TYPE_ARB	include/GL/glext.h	1357;"	d
GL_TEXTURE_GREEN_TYPE_ARB	shared/GLee.h	3277;"	d
GL_TEXTURE_HEIGHT	include/GL/gl.h	659;"	d
GL_TEXTURE_HI_SIZE_NV	include/GL/glext.h	3053;"	d
GL_TEXTURE_HI_SIZE_NV	shared/GLee.h	6435;"	d
GL_TEXTURE_INDEX_SIZE_EXT	include/GL/glext.h	2275;"	d
GL_TEXTURE_INDEX_SIZE_EXT	shared/GLee.h	4496;"	d
GL_TEXTURE_INTENSITY_SIZE	include/GL/gl.h	667;"	d
GL_TEXTURE_INTENSITY_SIZE_EXT	include/GL/glext.h	1767;"	d
GL_TEXTURE_INTENSITY_SIZE_EXT	shared/GLee.h	3393;"	d
GL_TEXTURE_INTENSITY_TYPE	include/GL/glext.h	1477;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	include/GL/glext.h	1361;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	shared/GLee.h	3281;"	d
GL_TEXTURE_INTERNAL_FORMAT	include/GL/gl.h	735;"	d
GL_TEXTURE_LEQUAL_R_SGIX	include/GL/glext.h	2032;"	d
GL_TEXTURE_LEQUAL_R_SGIX	shared/GLee.h	3996;"	d
GL_TEXTURE_LIGHTING_MODE_HP	include/GL/glext.h	2374;"	d
GL_TEXTURE_LIGHTING_MODE_HP	shared/GLee.h	4777;"	d
GL_TEXTURE_LIGHT_EXT	include/GL/glext.h	2400;"	d
GL_TEXTURE_LIGHT_EXT	shared/GLee.h	4826;"	d
GL_TEXTURE_LOD_BIAS	include/GL/glext.h	296;"	d
GL_TEXTURE_LOD_BIAS	shared/GLee.h	1348;"	d
GL_TEXTURE_LOD_BIAS_EXT	include/GL/glext.h	2670;"	d
GL_TEXTURE_LOD_BIAS_EXT	shared/GLee.h	5643;"	d
GL_TEXTURE_LOD_BIAS_R_SGIX	include/GL/glext.h	2297;"	d
GL_TEXTURE_LOD_BIAS_R_SGIX	shared/GLee.h	4573;"	d
GL_TEXTURE_LOD_BIAS_S_SGIX	include/GL/glext.h	2295;"	d
GL_TEXTURE_LOD_BIAS_S_SGIX	shared/GLee.h	4571;"	d
GL_TEXTURE_LOD_BIAS_T_SGIX	include/GL/glext.h	2296;"	d
GL_TEXTURE_LOD_BIAS_T_SGIX	shared/GLee.h	4572;"	d
GL_TEXTURE_LO_SIZE_NV	include/GL/glext.h	3054;"	d
GL_TEXTURE_LO_SIZE_NV	shared/GLee.h	6436;"	d
GL_TEXTURE_LUMINANCE_SIZE	include/GL/gl.h	666;"	d
GL_TEXTURE_LUMINANCE_SIZE_EXT	include/GL/glext.h	1766;"	d
GL_TEXTURE_LUMINANCE_SIZE_EXT	shared/GLee.h	3392;"	d
GL_TEXTURE_LUMINANCE_TYPE	include/GL/glext.h	1476;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	include/GL/glext.h	1360;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	shared/GLee.h	3280;"	d
GL_TEXTURE_MAG_FILTER	include/GL/gl.h	651;"	d
GL_TEXTURE_MAG_SIZE_NV	include/GL/glext.h	3057;"	d
GL_TEXTURE_MAG_SIZE_NV	shared/GLee.h	6439;"	d
GL_TEXTURE_MATERIAL_FACE_EXT	include/GL/glext.h	2401;"	d
GL_TEXTURE_MATERIAL_FACE_EXT	shared/GLee.h	4827;"	d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	include/GL/glext.h	2402;"	d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	shared/GLee.h	4828;"	d
GL_TEXTURE_MATRIX	include/GL/gl.h	548;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	include/GL/glext.h	2674;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	shared/GLee.h	5652;"	d
GL_TEXTURE_MAX_CLAMP_R_SGIX	include/GL/glext.h	3157;"	d
GL_TEXTURE_MAX_CLAMP_R_SGIX	shared/GLee.h	6751;"	d
GL_TEXTURE_MAX_CLAMP_S_SGIX	include/GL/glext.h	3155;"	d
GL_TEXTURE_MAX_CLAMP_S_SGIX	shared/GLee.h	6749;"	d
GL_TEXTURE_MAX_CLAMP_T_SGIX	include/GL/glext.h	3156;"	d
GL_TEXTURE_MAX_CLAMP_T_SGIX	shared/GLee.h	6750;"	d
GL_TEXTURE_MAX_LEVEL	include/GL/gl.h	1507;"	d
GL_TEXTURE_MAX_LEVEL	include/GL/glext.h	86;"	d
GL_TEXTURE_MAX_LEVEL	shared/GLee.h	860;"	d
GL_TEXTURE_MAX_LEVEL_SGIS	include/GL/glext.h	1945;"	d
GL_TEXTURE_MAX_LEVEL_SGIS	shared/GLee.h	3841;"	d
GL_TEXTURE_MAX_LOD	include/GL/gl.h	1505;"	d
GL_TEXTURE_MAX_LOD	include/GL/glext.h	84;"	d
GL_TEXTURE_MAX_LOD	shared/GLee.h	858;"	d
GL_TEXTURE_MAX_LOD_SGIS	include/GL/glext.h	1943;"	d
GL_TEXTURE_MAX_LOD_SGIS	shared/GLee.h	3839;"	d
GL_TEXTURE_MIN_FILTER	include/GL/gl.h	652;"	d
GL_TEXTURE_MIN_LOD	include/GL/gl.h	1504;"	d
GL_TEXTURE_MIN_LOD	include/GL/glext.h	83;"	d
GL_TEXTURE_MIN_LOD	shared/GLee.h	857;"	d
GL_TEXTURE_MIN_LOD_SGIS	include/GL/glext.h	1942;"	d
GL_TEXTURE_MIN_LOD_SGIS	shared/GLee.h	3838;"	d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	include/GL/glext.h	2110;"	d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	shared/GLee.h	4139;"	d
GL_TEXTURE_NORMAL_EXT	include/GL/glext.h	2497;"	d
GL_TEXTURE_NORMAL_EXT	shared/GLee.h	5099;"	d
GL_TEXTURE_POST_SPECULAR_HP	include/GL/glext.h	2375;"	d
GL_TEXTURE_POST_SPECULAR_HP	shared/GLee.h	4778;"	d
GL_TEXTURE_PRE_SPECULAR_HP	include/GL/glext.h	2376;"	d
GL_TEXTURE_PRE_SPECULAR_HP	shared/GLee.h	4779;"	d
GL_TEXTURE_PRIORITY	include/GL/gl.h	731;"	d
GL_TEXTURE_PRIORITY_EXT	include/GL/glext.h	1908;"	d
GL_TEXTURE_PRIORITY_EXT	shared/GLee.h	3754;"	d
GL_TEXTURE_RANGE_LENGTH_APPLE	include/GL/glext.h	4258;"	d
GL_TEXTURE_RANGE_POINTER_APPLE	include/GL/glext.h	4259;"	d
GL_TEXTURE_RECTANGLE	include/GL/glext.h	756;"	d
GL_TEXTURE_RECTANGLE_ARB	include/GL/glext.h	1337;"	d
GL_TEXTURE_RECTANGLE_ARB	shared/GLee.h	3239;"	d
GL_TEXTURE_RECTANGLE_NV	include/GL/glext.h	2978;"	d
GL_TEXTURE_RECTANGLE_NV	shared/GLee.h	6355;"	d
GL_TEXTURE_RED_SIZE	include/GL/gl.h	662;"	d
GL_TEXTURE_RED_SIZE_EXT	include/GL/glext.h	1762;"	d
GL_TEXTURE_RED_SIZE_EXT	shared/GLee.h	3388;"	d
GL_TEXTURE_RED_TYPE	include/GL/glext.h	1412;"	d
GL_TEXTURE_RED_TYPE_ARB	include/GL/glext.h	1356;"	d
GL_TEXTURE_RED_TYPE_ARB	shared/GLee.h	3276;"	d
GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV	include/GL/glext.h	4175;"	d
GL_TEXTURE_RENDERBUFFER_NV	include/GL/glext.h	4176;"	d
GL_TEXTURE_RESIDENT	include/GL/gl.h	732;"	d
GL_TEXTURE_RESIDENT_EXT	include/GL/glext.h	1909;"	d
GL_TEXTURE_RESIDENT_EXT	shared/GLee.h	3755;"	d
GL_TEXTURE_SAMPLES	include/GL/glext.h	1666;"	d
GL_TEXTURE_SHADER_NV	include/GL/glext.h	2993;"	d
GL_TEXTURE_SHADER_NV	shared/GLee.h	6375;"	d
GL_TEXTURE_SHARED_SIZE	include/GL/glext.h	546;"	d
GL_TEXTURE_SHARED_SIZE_EXT	include/GL/glext.h	3989;"	d
GL_TEXTURE_SHARED_SIZE_EXT	shared/GLee.h	8640;"	d
GL_TEXTURE_STACK_DEPTH	include/GL/gl.h	549;"	d
GL_TEXTURE_STENCIL_SIZE	include/GL/glext.h	1411;"	d
GL_TEXTURE_STENCIL_SIZE_EXT	include/GL/glext.h	3797;"	d
GL_TEXTURE_STENCIL_SIZE_EXT	shared/GLee.h	9166;"	d
GL_TEXTURE_STORAGE_HINT_APPLE	include/GL/glext.h	4260;"	d
GL_TEXTURE_SWIZZLE_A_EXT	include/GL/glext.h	4166;"	d
GL_TEXTURE_SWIZZLE_B_EXT	include/GL/glext.h	4165;"	d
GL_TEXTURE_SWIZZLE_G_EXT	include/GL/glext.h	4164;"	d
GL_TEXTURE_SWIZZLE_RGBA_EXT	include/GL/glext.h	4167;"	d
GL_TEXTURE_SWIZZLE_R_EXT	include/GL/glext.h	4163;"	d
GL_TEXTURE_TOO_LARGE_EXT	include/GL/glext.h	1771;"	d
GL_TEXTURE_TOO_LARGE_EXT	shared/GLee.h	3397;"	d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	include/GL/glext.h	3659;"	d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	shared/GLee.h	8083;"	d
GL_TEXTURE_WIDTH	include/GL/gl.h	658;"	d
GL_TEXTURE_WRAP_Q_SGIS	include/GL/glext.h	1890;"	d
GL_TEXTURE_WRAP_Q_SGIS	shared/GLee.h	3715;"	d
GL_TEXTURE_WRAP_R	include/GL/gl.h	1521;"	d
GL_TEXTURE_WRAP_R	include/GL/glext.h	69;"	d
GL_TEXTURE_WRAP_R	shared/GLee.h	843;"	d
GL_TEXTURE_WRAP_R_EXT	include/GL/glext.h	1782;"	d
GL_TEXTURE_WRAP_R_EXT	shared/GLee.h	3413;"	d
GL_TEXTURE_WRAP_S	include/GL/gl.h	649;"	d
GL_TEXTURE_WRAP_T	include/GL/gl.h	650;"	d
GL_TEXT_FRAGMENT_SHADER_ATI	include/GL/glext.h	3523;"	d
GL_TEXT_FRAGMENT_SHADER_ATI	shared/GLee.h	7631;"	d
GL_TIMEOUT_EXPIRED	include/GL/glext.h	1648;"	d
GL_TIMEOUT_IGNORED	include/GL/glext.h	1652;"	d
GL_TIME_ELAPSED_EXT	include/GL/glext.h	3847;"	d
GL_TIME_ELAPSED_EXT	shared/GLee.h	8398;"	d
GL_TRACK_MATRIX_NV	include/GL/glext.h	3100;"	d
GL_TRACK_MATRIX_NV	shared/GLee.h	6497;"	d
GL_TRACK_MATRIX_TRANSFORM_NV	include/GL/glext.h	3101;"	d
GL_TRACK_MATRIX_TRANSFORM_NV	shared/GLee.h	6498;"	d
GL_TRANSFORM_BIT	include/GL/gl.h	717;"	d
GL_TRANSFORM_FEEDBACK_ATTRIBS_NV	include/GL/glext.h	4036;"	d
GL_TRANSFORM_FEEDBACK_ATTRIBS_NV	shared/GLee.h	8789;"	d
GL_TRANSFORM_FEEDBACK_BINDING_NV	include/GL/glext.h	4187;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	include/GL/glext.h	560;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV	include/GL/glext.h	4186;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	include/GL/glext.h	561;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT	include/GL/glext.h	4138;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV	include/GL/glext.h	4053;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV	shared/GLee.h	8806;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_EXT	include/GL/glext.h	4135;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	include/GL/glext.h	548;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT	include/GL/glext.h	4148;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV	include/GL/glext.h	4037;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV	shared/GLee.h	8790;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_NV	include/GL/glext.h	4052;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_NV	shared/GLee.h	8805;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV	include/GL/glext.h	4185;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	include/GL/glext.h	552;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT	include/GL/glext.h	4137;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV	include/GL/glext.h	4043;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV	shared/GLee.h	8796;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	include/GL/glext.h	551;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT	include/GL/glext.h	4136;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_NV	include/GL/glext.h	4042;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_NV	shared/GLee.h	8795;"	d
GL_TRANSFORM_FEEDBACK_NV	include/GL/glext.h	4184;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	include/GL/glext.h	554;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT	include/GL/glext.h	4142;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV	include/GL/glext.h	4046;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV	shared/GLee.h	8799;"	d
GL_TRANSFORM_FEEDBACK_RECORD_NV	include/GL/glext.h	4044;"	d
GL_TRANSFORM_FEEDBACK_RECORD_NV	shared/GLee.h	8797;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	include/GL/glext.h	550;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_EXT	include/GL/glext.h	4147;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_NV	include/GL/glext.h	4041;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_NV	shared/GLee.h	8794;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	include/GL/glext.h	547;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT	include/GL/glext.h	4149;"	d
GL_TRANSFORM_HINT_APPLE	include/GL/glext.h	2565;"	d
GL_TRANSFORM_HINT_APPLE	shared/GLee.h	5292;"	d
GL_TRANSPOSE_COLOR_MATRIX	include/GL/gl.h	1827;"	d
GL_TRANSPOSE_COLOR_MATRIX	include/GL/glext.h	251;"	d
GL_TRANSPOSE_COLOR_MATRIX	shared/GLee.h	1113;"	d
GL_TRANSPOSE_COLOR_MATRIX_ARB	include/GL/glext.h	932;"	d
GL_TRANSPOSE_COLOR_MATRIX_ARB	shared/GLee.h	2182;"	d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	include/GL/glext.h	1153;"	d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	shared/GLee.h	2623;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	include/GL/gl.h	1824;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	include/GL/glext.h	248;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	shared/GLee.h	1110;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	include/GL/glext.h	929;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	shared/GLee.h	2179;"	d
GL_TRANSPOSE_NV	include/GL/glext.h	3080;"	d
GL_TRANSPOSE_NV	shared/GLee.h	6477;"	d
GL_TRANSPOSE_PROGRAM_MATRIX_EXT	include/GL/glext.h	4154;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	include/GL/gl.h	1825;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	include/GL/glext.h	249;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	shared/GLee.h	1111;"	d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	include/GL/glext.h	930;"	d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	shared/GLee.h	2180;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	include/GL/gl.h	1826;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	include/GL/glext.h	250;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	shared/GLee.h	1112;"	d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	include/GL/glext.h	931;"	d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	shared/GLee.h	2181;"	d
GL_TRIANGLES	include/GL/gl.h	197;"	d
GL_TRIANGLES_ADJACENCY	include/GL/glext.h	817;"	d
GL_TRIANGLES_ADJACENCY_ARB	include/GL/glext.h	1487;"	d
GL_TRIANGLES_ADJACENCY_EXT	include/GL/glext.h	3872;"	d
GL_TRIANGLES_ADJACENCY_EXT	shared/GLee.h	8578;"	d
GL_TRIANGLE_FAN	include/GL/gl.h	199;"	d
GL_TRIANGLE_LIST_SUN	include/GL/glext.h	2587;"	d
GL_TRIANGLE_LIST_SUN	shared/GLee.h	5361;"	d
GL_TRIANGLE_MESH_SUN	include/GL/glext.h	3463;"	d
GL_TRIANGLE_MESH_SUN	shared/GLee.h	7488;"	d
GL_TRIANGLE_STRIP	include/GL/gl.h	198;"	d
GL_TRIANGLE_STRIP_ADJACENCY	include/GL/glext.h	818;"	d
GL_TRIANGLE_STRIP_ADJACENCY_ARB	include/GL/glext.h	1488;"	d
GL_TRIANGLE_STRIP_ADJACENCY_EXT	include/GL/glext.h	3873;"	d
GL_TRIANGLE_STRIP_ADJACENCY_EXT	shared/GLee.h	8579;"	d
GL_TRUE	include/GL/gl.h	177;"	d
GL_TYPE_RGBA_FLOAT_ATI	include/GL/glext.h	3588;"	d
GL_TYPE_RGBA_FLOAT_ATI	shared/GLee.h	7804;"	d
GL_UNDEFINED_APPLE	include/GL/glext.h	4305;"	d
GL_UNIFORM_ARRAY_STRIDE	include/GL/glext.h	1590;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	include/GL/glext.h	1596;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	include/GL/glext.h	1597;"	d
GL_UNIFORM_BLOCK_BINDING	include/GL/glext.h	1593;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	include/GL/glext.h	1594;"	d
GL_UNIFORM_BLOCK_INDEX	include/GL/glext.h	1588;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	include/GL/glext.h	1595;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	include/GL/glext.h	1600;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	include/GL/glext.h	1599;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	include/GL/glext.h	1598;"	d
GL_UNIFORM_BUFFER	include/GL/glext.h	1569;"	d
GL_UNIFORM_BUFFER_BINDING	include/GL/glext.h	1570;"	d
GL_UNIFORM_BUFFER_BINDING_EXT	include/GL/glext.h	4062;"	d
GL_UNIFORM_BUFFER_BINDING_EXT	shared/GLee.h	8610;"	d
GL_UNIFORM_BUFFER_EXT	include/GL/glext.h	4061;"	d
GL_UNIFORM_BUFFER_EXT	shared/GLee.h	8609;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	include/GL/glext.h	1582;"	d
GL_UNIFORM_BUFFER_SIZE	include/GL/glext.h	1572;"	d
GL_UNIFORM_BUFFER_START	include/GL/glext.h	1571;"	d
GL_UNIFORM_IS_ROW_MAJOR	include/GL/glext.h	1592;"	d
GL_UNIFORM_MATRIX_STRIDE	include/GL/glext.h	1591;"	d
GL_UNIFORM_NAME_LENGTH	include/GL/glext.h	1587;"	d
GL_UNIFORM_OFFSET	include/GL/glext.h	1589;"	d
GL_UNIFORM_SIZE	include/GL/glext.h	1586;"	d
GL_UNIFORM_TYPE	include/GL/glext.h	1585;"	d
GL_UNPACK_ALIGNMENT	include/GL/gl.h	635;"	d
GL_UNPACK_CLIENT_STORAGE_APPLE	include/GL/glext.h	3527;"	d
GL_UNPACK_CLIENT_STORAGE_APPLE	shared/GLee.h	7640;"	d
GL_UNPACK_CMYK_HINT_EXT	include/GL/glext.h	1904;"	d
GL_UNPACK_CMYK_HINT_EXT	shared/GLee.h	3745;"	d
GL_UNPACK_CONSTANT_DATA_SUNX	include/GL/glext.h	2574;"	d
GL_UNPACK_CONSTANT_DATA_SUNX	shared/GLee.h	5311;"	d
GL_UNPACK_IMAGE_DEPTH_SGIS	include/GL/glext.h	1886;"	d
GL_UNPACK_IMAGE_DEPTH_SGIS	shared/GLee.h	3711;"	d
GL_UNPACK_IMAGE_HEIGHT	include/GL/gl.h	1517;"	d
GL_UNPACK_IMAGE_HEIGHT	include/GL/glext.h	65;"	d
GL_UNPACK_IMAGE_HEIGHT	shared/GLee.h	839;"	d
GL_UNPACK_IMAGE_HEIGHT_EXT	include/GL/glext.h	1778;"	d
GL_UNPACK_IMAGE_HEIGHT_EXT	shared/GLee.h	3409;"	d
GL_UNPACK_LSB_FIRST	include/GL/gl.h	636;"	d
GL_UNPACK_RESAMPLE_OML	include/GL/glext.h	3176;"	d
GL_UNPACK_RESAMPLE_OML	shared/GLee.h	6790;"	d
GL_UNPACK_RESAMPLE_SGIX	include/GL/glext.h	2897;"	d
GL_UNPACK_RESAMPLE_SGIX	shared/GLee.h	6162;"	d
GL_UNPACK_ROW_BYTES_APPLE	include/GL/glext.h	4311;"	d
GL_UNPACK_ROW_LENGTH	include/GL/gl.h	637;"	d
GL_UNPACK_SKIP_IMAGES	include/GL/gl.h	1516;"	d
GL_UNPACK_SKIP_IMAGES	include/GL/glext.h	64;"	d
GL_UNPACK_SKIP_IMAGES	shared/GLee.h	838;"	d
GL_UNPACK_SKIP_IMAGES_EXT	include/GL/glext.h	1777;"	d
GL_UNPACK_SKIP_IMAGES_EXT	shared/GLee.h	3408;"	d
GL_UNPACK_SKIP_PIXELS	include/GL/gl.h	638;"	d
GL_UNPACK_SKIP_ROWS	include/GL/gl.h	639;"	d
GL_UNPACK_SKIP_VOLUMES_SGIS	include/GL/glext.h	1885;"	d
GL_UNPACK_SKIP_VOLUMES_SGIS	shared/GLee.h	3710;"	d
GL_UNPACK_SUBSAMPLE_RATE_SGIX	include/GL/glext.h	2831;"	d
GL_UNPACK_SUBSAMPLE_RATE_SGIX	shared/GLee.h	6037;"	d
GL_UNPACK_SWAP_BYTES	include/GL/gl.h	640;"	d
GL_UNSIGNALED	include/GL/glext.h	1645;"	d
GL_UNSIGNED_BYTE	include/GL/gl.h	181;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	include/GL/gl.h	1490;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	include/GL/glext.h	71;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	shared/GLee.h	845;"	d
GL_UNSIGNED_BYTE_3_3_2	include/GL/gl.h	1489;"	d
GL_UNSIGNED_BYTE_3_3_2	include/GL/glext.h	56;"	d
GL_UNSIGNED_BYTE_3_3_2	shared/GLee.h	829;"	d
GL_UNSIGNED_BYTE_3_3_2_EXT	include/GL/glext.h	1934;"	d
GL_UNSIGNED_BYTE_3_3_2_EXT	shared/GLee.h	3825;"	d
GL_UNSIGNED_IDENTITY_NV	include/GL/glext.h	2725;"	d
GL_UNSIGNED_IDENTITY_NV	shared/GLee.h	5738;"	d
GL_UNSIGNED_INT	include/GL/gl.h	185;"	d
GL_UNSIGNED_INT64_AMD	include/GL/glext.h	4199;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	include/GL/glext.h	543;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV_EXT	include/GL/glext.h	3948;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV_EXT	shared/GLee.h	8650;"	d
GL_UNSIGNED_INT_10_10_10_2	include/GL/gl.h	1499;"	d
GL_UNSIGNED_INT_10_10_10_2	include/GL/glext.h	60;"	d
GL_UNSIGNED_INT_10_10_10_2	shared/GLee.h	833;"	d
GL_UNSIGNED_INT_10_10_10_2_EXT	include/GL/glext.h	1938;"	d
GL_UNSIGNED_INT_10_10_10_2_EXT	shared/GLee.h	3829;"	d
GL_UNSIGNED_INT_24_8	include/GL/glext.h	1409;"	d
GL_UNSIGNED_INT_24_8_EXT	include/GL/glext.h	3795;"	d
GL_UNSIGNED_INT_24_8_EXT	shared/GLee.h	9164;"	d
GL_UNSIGNED_INT_24_8_MESA	include/GL/gl.h	2123;"	d
GL_UNSIGNED_INT_24_8_NV	include/GL/glext.h	2967;"	d
GL_UNSIGNED_INT_24_8_NV	shared/GLee.h	6323;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	include/GL/gl.h	1500;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	include/GL/glext.h	77;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	shared/GLee.h	851;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	include/GL/glext.h	545;"	d
GL_UNSIGNED_INT_5_9_9_9_REV_EXT	include/GL/glext.h	3988;"	d
GL_UNSIGNED_INT_5_9_9_9_REV_EXT	shared/GLee.h	8639;"	d
GL_UNSIGNED_INT_8_24_REV_MESA	include/GL/gl.h	2124;"	d
GL_UNSIGNED_INT_8_8_8_8	include/GL/gl.h	1497;"	d
GL_UNSIGNED_INT_8_8_8_8	include/GL/glext.h	59;"	d
GL_UNSIGNED_INT_8_8_8_8	shared/GLee.h	832;"	d
GL_UNSIGNED_INT_8_8_8_8_EXT	include/GL/glext.h	1937;"	d
GL_UNSIGNED_INT_8_8_8_8_EXT	shared/GLee.h	3828;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	include/GL/gl.h	1498;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	include/GL/glext.h	76;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	shared/GLee.h	850;"	d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	include/GL/glext.h	2990;"	d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	shared/GLee.h	6372;"	d
GL_UNSIGNED_INT_S8_S8_8_8_NV	include/GL/glext.h	2989;"	d
GL_UNSIGNED_INT_S8_S8_8_8_NV	shared/GLee.h	6371;"	d
GL_UNSIGNED_INT_SAMPLER_1D	include/GL/glext.h	595;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	include/GL/glext.h	599;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT	include/GL/glext.h	3938;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT	shared/GLee.h	8451;"	d
GL_UNSIGNED_INT_SAMPLER_1D_EXT	include/GL/glext.h	3933;"	d
GL_UNSIGNED_INT_SAMPLER_1D_EXT	shared/GLee.h	8446;"	d
GL_UNSIGNED_INT_SAMPLER_2D	include/GL/glext.h	596;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	include/GL/glext.h	600;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT	include/GL/glext.h	3939;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT	shared/GLee.h	8452;"	d
GL_UNSIGNED_INT_SAMPLER_2D_EXT	include/GL/glext.h	3934;"	d
GL_UNSIGNED_INT_SAMPLER_2D_EXT	shared/GLee.h	8447;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	include/GL/glext.h	1670;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	include/GL/glext.h	1673;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	include/GL/glext.h	749;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT	include/GL/glext.h	3937;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT	shared/GLee.h	8450;"	d
GL_UNSIGNED_INT_SAMPLER_3D	include/GL/glext.h	597;"	d
GL_UNSIGNED_INT_SAMPLER_3D_EXT	include/GL/glext.h	3935;"	d
GL_UNSIGNED_INT_SAMPLER_3D_EXT	shared/GLee.h	8448;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	include/GL/glext.h	750;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD	include/GL/glext.h	4212;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT	include/GL/glext.h	3940;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT	shared/GLee.h	8453;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	include/GL/glext.h	598;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_EXT	include/GL/glext.h	3936;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_EXT	shared/GLee.h	8449;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	include/GL/glext.h	1698;"	d
GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV	include/GL/glext.h	4179;"	d
GL_UNSIGNED_INT_VEC2	include/GL/glext.h	586;"	d
GL_UNSIGNED_INT_VEC2_EXT	include/GL/glext.h	3922;"	d
GL_UNSIGNED_INT_VEC2_EXT	shared/GLee.h	8435;"	d
GL_UNSIGNED_INT_VEC3	include/GL/glext.h	587;"	d
GL_UNSIGNED_INT_VEC3_EXT	include/GL/glext.h	3923;"	d
GL_UNSIGNED_INT_VEC3_EXT	shared/GLee.h	8436;"	d
GL_UNSIGNED_INT_VEC4	include/GL/glext.h	588;"	d
GL_UNSIGNED_INT_VEC4_EXT	include/GL/glext.h	3924;"	d
GL_UNSIGNED_INT_VEC4_EXT	shared/GLee.h	8437;"	d
GL_UNSIGNED_INVERT_NV	include/GL/glext.h	2726;"	d
GL_UNSIGNED_INVERT_NV	shared/GLee.h	5739;"	d
GL_UNSIGNED_NORMALIZED	include/GL/glext.h	1417;"	d
GL_UNSIGNED_NORMALIZED_ARB	include/GL/glext.h	1363;"	d
GL_UNSIGNED_NORMALIZED_ARB	shared/GLee.h	3283;"	d
GL_UNSIGNED_SHORT	include/GL/gl.h	183;"	d
GL_UNSIGNED_SHORT_15_1_MESA	include/GL/gl.h	2125;"	d
GL_UNSIGNED_SHORT_1_15_REV_MESA	include/GL/gl.h	2126;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	include/GL/gl.h	1496;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	include/GL/glext.h	75;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	shared/GLee.h	849;"	d
GL_UNSIGNED_SHORT_4_4_4_4	include/GL/gl.h	1493;"	d
GL_UNSIGNED_SHORT_4_4_4_4	include/GL/glext.h	57;"	d
GL_UNSIGNED_SHORT_4_4_4_4	shared/GLee.h	830;"	d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	include/GL/glext.h	1935;"	d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	shared/GLee.h	3826;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	include/GL/gl.h	1494;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	include/GL/glext.h	74;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	shared/GLee.h	848;"	d
GL_UNSIGNED_SHORT_5_5_5_1	include/GL/gl.h	1495;"	d
GL_UNSIGNED_SHORT_5_5_5_1	include/GL/glext.h	58;"	d
GL_UNSIGNED_SHORT_5_5_5_1	shared/GLee.h	831;"	d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	include/GL/glext.h	1936;"	d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	shared/GLee.h	3827;"	d
GL_UNSIGNED_SHORT_5_6_5	include/GL/gl.h	1491;"	d
GL_UNSIGNED_SHORT_5_6_5	include/GL/glext.h	72;"	d
GL_UNSIGNED_SHORT_5_6_5	shared/GLee.h	846;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	include/GL/gl.h	1492;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	include/GL/glext.h	73;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	shared/GLee.h	847;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	include/GL/glext.h	3556;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	shared/GLee.h	7754;"	d
GL_UNSIGNED_SHORT_8_8_MESA	include/GL/glext.h	3704;"	d
GL_UNSIGNED_SHORT_8_8_MESA	shared/GLee.h	8205;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	include/GL/glext.h	3557;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	shared/GLee.h	7755;"	d
GL_UNSIGNED_SHORT_8_8_REV_MESA	include/GL/glext.h	3705;"	d
GL_UNSIGNED_SHORT_8_8_REV_MESA	shared/GLee.h	8206;"	d
GL_UPPER_LEFT	include/GL/glext.h	463;"	d
GL_UPPER_LEFT	shared/GLee.h	1694;"	d
GL_V2F	include/GL/gl.h	231;"	d
GL_V3F	include/GL/gl.h	232;"	d
GL_VALIDATE_STATUS	include/GL/glext.h	450;"	d
GL_VALIDATE_STATUS	shared/GLee.h	1681;"	d
GL_VARIABLE_A_NV	include/GL/glext.h	2709;"	d
GL_VARIABLE_A_NV	shared/GLee.h	5722;"	d
GL_VARIABLE_B_NV	include/GL/glext.h	2710;"	d
GL_VARIABLE_B_NV	shared/GLee.h	5723;"	d
GL_VARIABLE_C_NV	include/GL/glext.h	2711;"	d
GL_VARIABLE_C_NV	shared/GLee.h	5724;"	d
GL_VARIABLE_D_NV	include/GL/glext.h	2712;"	d
GL_VARIABLE_D_NV	shared/GLee.h	5725;"	d
GL_VARIABLE_E_NV	include/GL/glext.h	2713;"	d
GL_VARIABLE_E_NV	shared/GLee.h	5726;"	d
GL_VARIABLE_F_NV	include/GL/glext.h	2714;"	d
GL_VARIABLE_F_NV	shared/GLee.h	5727;"	d
GL_VARIABLE_G_NV	include/GL/glext.h	2715;"	d
GL_VARIABLE_G_NV	shared/GLee.h	5728;"	d
GL_VARIANT_ARRAY_EXT	include/GL/glext.h	3434;"	d
GL_VARIANT_ARRAY_EXT	shared/GLee.h	7174;"	d
GL_VARIANT_ARRAY_POINTER_EXT	include/GL/glext.h	3435;"	d
GL_VARIANT_ARRAY_POINTER_EXT	shared/GLee.h	7175;"	d
GL_VARIANT_ARRAY_STRIDE_EXT	include/GL/glext.h	3432;"	d
GL_VARIANT_ARRAY_STRIDE_EXT	shared/GLee.h	7172;"	d
GL_VARIANT_ARRAY_TYPE_EXT	include/GL/glext.h	3433;"	d
GL_VARIANT_ARRAY_TYPE_EXT	shared/GLee.h	7173;"	d
GL_VARIANT_DATATYPE_EXT	include/GL/glext.h	3431;"	d
GL_VARIANT_DATATYPE_EXT	shared/GLee.h	7171;"	d
GL_VARIANT_EXT	include/GL/glext.h	3395;"	d
GL_VARIANT_EXT	shared/GLee.h	7135;"	d
GL_VARIANT_VALUE_EXT	include/GL/glext.h	3430;"	d
GL_VARIANT_VALUE_EXT	shared/GLee.h	7170;"	d
GL_VBO_FREE_MEMORY_ATI	include/GL/glext.h	4191;"	d
GL_VECTOR_EXT	include/GL/glext.h	3393;"	d
GL_VECTOR_EXT	shared/GLee.h	7133;"	d
GL_VENDOR	include/GL/gl.h	690;"	d
GL_VERSION	include/GL/gl.h	692;"	d
GL_VERSION_1_1	include/GL/gl.h	144;"	d
GL_VERSION_1_2	include/GL/gl.h	145;"	d
GL_VERSION_1_2	include/GL/glext.h	4482;"	d
GL_VERSION_1_2	shared/GLee.h	826;"	d
GL_VERSION_1_2_DEPRECATED	include/GL/glext.h	4500;"	d
GL_VERSION_1_3	include/GL/gl.h	146;"	d
GL_VERSION_1_3	include/GL/glext.h	4570;"	d
GL_VERSION_1_3	shared/GLee.h	1072;"	d
GL_VERSION_1_3_DEPRECATED	include/GL/glext.h	4594;"	d
GL_VERSION_1_4	include/GL/glext.h	4674;"	d
GL_VERSION_1_4	shared/GLee.h	1314;"	d
GL_VERSION_1_4_DEPRECATED	include/GL/glext.h	4694;"	d
GL_VERSION_1_5	include/GL/glext.h	4776;"	d
GL_VERSION_1_5	shared/GLee.h	1496;"	d
GL_VERSION_2_0	include/GL/glext.h	4820;"	d
GL_VERSION_2_0	shared/GLee.h	1611;"	d
GL_VERSION_2_1	include/GL/glext.h	5012;"	d
GL_VERSION_2_1	shared/GLee.h	1982;"	d
GL_VERSION_3_0	include/GL/glext.h	5030;"	d
GL_VERSION_3_1	include/GL/glext.h	5156;"	d
GL_VERSION_3_2	include/GL/glext.h	5173;"	d
GL_VERTEX23_BIT_PGI	include/GL/glext.h	2241;"	d
GL_VERTEX23_BIT_PGI	shared/GLee.h	4449;"	d
GL_VERTEX4_BIT_PGI	include/GL/glext.h	2242;"	d
GL_VERTEX4_BIT_PGI	shared/GLee.h	4450;"	d
GL_VERTEX_ARRAY	include/GL/gl.h	205;"	d
GL_VERTEX_ARRAY_ADDRESS_NV	include/GL/glext.h	4372;"	d
GL_VERTEX_ARRAY_BINDING	include/GL/glext.h	1565;"	d
GL_VERTEX_ARRAY_BINDING_APPLE	include/GL/glext.h	3542;"	d
GL_VERTEX_ARRAY_BINDING_APPLE	shared/GLee.h	7709;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	include/GL/glext.h	361;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	shared/GLee.h	1509;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	1213;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	shared/GLee.h	2879;"	d
GL_VERTEX_ARRAY_COUNT_EXT	include/GL/glext.h	1981;"	d
GL_VERTEX_ARRAY_COUNT_EXT	shared/GLee.h	3898;"	d
GL_VERTEX_ARRAY_EXT	include/GL/glext.h	1972;"	d
GL_VERTEX_ARRAY_EXT	shared/GLee.h	3889;"	d
GL_VERTEX_ARRAY_LENGTH_NV	include/GL/glext.h	4382;"	d
GL_VERTEX_ARRAY_LIST_IBM	include/GL/glext.h	2811;"	d
GL_VERTEX_ARRAY_LIST_IBM	shared/GLee.h	5988;"	d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	include/GL/glext.h	2819;"	d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	shared/GLee.h	5996;"	d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	include/GL/glext.h	2449;"	d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	shared/GLee.h	4941;"	d
GL_VERTEX_ARRAY_POINTER	include/GL/gl.h	225;"	d
GL_VERTEX_ARRAY_POINTER_EXT	include/GL/glext.h	1998;"	d
GL_VERTEX_ARRAY_POINTER_EXT	shared/GLee.h	3915;"	d
GL_VERTEX_ARRAY_RANGE_APPLE	include/GL/glext.h	3546;"	d
GL_VERTEX_ARRAY_RANGE_APPLE	shared/GLee.h	7730;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	include/GL/glext.h	3547;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	shared/GLee.h	7731;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	include/GL/glext.h	2701;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	shared/GLee.h	5703;"	d
GL_VERTEX_ARRAY_RANGE_NV	include/GL/glext.h	2700;"	d
GL_VERTEX_ARRAY_RANGE_NV	shared/GLee.h	5702;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	include/GL/glext.h	3549;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	shared/GLee.h	7733;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	include/GL/glext.h	2704;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	shared/GLee.h	5706;"	d
GL_VERTEX_ARRAY_RANGE_VALID_NV	include/GL/glext.h	2702;"	d
GL_VERTEX_ARRAY_RANGE_VALID_NV	shared/GLee.h	5704;"	d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	include/GL/glext.h	3065;"	d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	shared/GLee.h	6457;"	d
GL_VERTEX_ARRAY_SIZE	include/GL/gl.h	211;"	d
GL_VERTEX_ARRAY_SIZE_EXT	include/GL/glext.h	1978;"	d
GL_VERTEX_ARRAY_SIZE_EXT	shared/GLee.h	3895;"	d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	include/GL/glext.h	3548;"	d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	shared/GLee.h	7732;"	d
GL_VERTEX_ARRAY_STRIDE	include/GL/gl.h	213;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	include/GL/glext.h	1980;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	shared/GLee.h	3897;"	d
GL_VERTEX_ARRAY_TYPE	include/GL/gl.h	212;"	d
GL_VERTEX_ARRAY_TYPE_EXT	include/GL/glext.h	1979;"	d
GL_VERTEX_ARRAY_TYPE_EXT	shared/GLee.h	3896;"	d
GL_VERTEX_ATTRIB_ARRAY0_NV	include/GL/glext.h	3104;"	d
GL_VERTEX_ATTRIB_ARRAY0_NV	shared/GLee.h	6501;"	d
GL_VERTEX_ATTRIB_ARRAY10_NV	include/GL/glext.h	3114;"	d
GL_VERTEX_ATTRIB_ARRAY10_NV	shared/GLee.h	6511;"	d
GL_VERTEX_ATTRIB_ARRAY11_NV	include/GL/glext.h	3115;"	d
GL_VERTEX_ATTRIB_ARRAY11_NV	shared/GLee.h	6512;"	d
GL_VERTEX_ATTRIB_ARRAY12_NV	include/GL/glext.h	3116;"	d
GL_VERTEX_ATTRIB_ARRAY12_NV	shared/GLee.h	6513;"	d
GL_VERTEX_ATTRIB_ARRAY13_NV	include/GL/glext.h	3117;"	d
GL_VERTEX_ATTRIB_ARRAY13_NV	shared/GLee.h	6514;"	d
GL_VERTEX_ATTRIB_ARRAY14_NV	include/GL/glext.h	3118;"	d
GL_VERTEX_ATTRIB_ARRAY14_NV	shared/GLee.h	6515;"	d
GL_VERTEX_ATTRIB_ARRAY15_NV	include/GL/glext.h	3119;"	d
GL_VERTEX_ATTRIB_ARRAY15_NV	shared/GLee.h	6516;"	d
GL_VERTEX_ATTRIB_ARRAY1_NV	include/GL/glext.h	3105;"	d
GL_VERTEX_ATTRIB_ARRAY1_NV	shared/GLee.h	6502;"	d
GL_VERTEX_ATTRIB_ARRAY2_NV	include/GL/glext.h	3106;"	d
GL_VERTEX_ATTRIB_ARRAY2_NV	shared/GLee.h	6503;"	d
GL_VERTEX_ATTRIB_ARRAY3_NV	include/GL/glext.h	3107;"	d
GL_VERTEX_ATTRIB_ARRAY3_NV	shared/GLee.h	6504;"	d
GL_VERTEX_ATTRIB_ARRAY4_NV	include/GL/glext.h	3108;"	d
GL_VERTEX_ATTRIB_ARRAY4_NV	shared/GLee.h	6505;"	d
GL_VERTEX_ATTRIB_ARRAY5_NV	include/GL/glext.h	3109;"	d
GL_VERTEX_ATTRIB_ARRAY5_NV	shared/GLee.h	6506;"	d
GL_VERTEX_ATTRIB_ARRAY6_NV	include/GL/glext.h	3110;"	d
GL_VERTEX_ATTRIB_ARRAY6_NV	shared/GLee.h	6507;"	d
GL_VERTEX_ATTRIB_ARRAY7_NV	include/GL/glext.h	3111;"	d
GL_VERTEX_ATTRIB_ARRAY7_NV	shared/GLee.h	6508;"	d
GL_VERTEX_ATTRIB_ARRAY8_NV	include/GL/glext.h	3112;"	d
GL_VERTEX_ATTRIB_ARRAY8_NV	shared/GLee.h	6509;"	d
GL_VERTEX_ATTRIB_ARRAY9_NV	include/GL/glext.h	3113;"	d
GL_VERTEX_ATTRIB_ARRAY9_NV	shared/GLee.h	6510;"	d
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV	include/GL/glext.h	4371;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	include/GL/glext.h	341;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	shared/GLee.h	1518;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	1222;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	shared/GLee.h	2888;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB	include/GL/glext.h	1512;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	include/GL/glext.h	388;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	shared/GLee.h	1615;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	include/GL/glext.h	1109;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	shared/GLee.h	2579;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	include/GL/glext.h	529;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT	shared/GLee.h	8454;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV	include/GL/glext.h	3912;"	d
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV	include/GL/glext.h	4381;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	include/GL/glext.h	418;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	shared/GLee.h	1648;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	include/GL/glext.h	1126;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	shared/GLee.h	2596;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	include/GL/glext.h	394;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	shared/GLee.h	1622;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	include/GL/glext.h	1122;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	shared/GLee.h	2592;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	include/GL/glext.h	389;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	shared/GLee.h	1616;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	include/GL/glext.h	1110;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	shared/GLee.h	2580;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	include/GL/glext.h	390;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	shared/GLee.h	1617;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	include/GL/glext.h	1111;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	shared/GLee.h	2581;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	include/GL/glext.h	391;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	shared/GLee.h	1618;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	include/GL/glext.h	1112;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	shared/GLee.h	2582;"	d
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV	include/GL/glext.h	4369;"	d
GL_VERTEX_ATTRIB_MAP1_APPLE	include/GL/glext.h	4284;"	d
GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE	include/GL/glext.h	4287;"	d
GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE	include/GL/glext.h	4289;"	d
GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE	include/GL/glext.h	4288;"	d
GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE	include/GL/glext.h	4286;"	d
GL_VERTEX_ATTRIB_MAP2_APPLE	include/GL/glext.h	4285;"	d
GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE	include/GL/glext.h	4291;"	d
GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE	include/GL/glext.h	4293;"	d
GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE	include/GL/glext.h	4292;"	d
GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE	include/GL/glext.h	4290;"	d
GL_VERTEX_BLEND_ARB	include/GL/glext.h	994;"	d
GL_VERTEX_BLEND_ARB	shared/GLee.h	2321;"	d
GL_VERTEX_CONSISTENT_HINT_PGI	include/GL/glext.h	2222;"	d
GL_VERTEX_CONSISTENT_HINT_PGI	shared/GLee.h	4430;"	d
GL_VERTEX_DATA_HINT_PGI	include/GL/glext.h	2221;"	d
GL_VERTEX_DATA_HINT_PGI	shared/GLee.h	4429;"	d
GL_VERTEX_ID_NV	include/GL/glext.h	4033;"	d
GL_VERTEX_ID_NV	shared/GLee.h	8786;"	d
GL_VERTEX_PRECLIP_HINT_SGIX	include/GL/glext.h	2888;"	d
GL_VERTEX_PRECLIP_HINT_SGIX	shared/GLee.h	6143;"	d
GL_VERTEX_PRECLIP_SGIX	include/GL/glext.h	2887;"	d
GL_VERTEX_PRECLIP_SGIX	shared/GLee.h	6142;"	d
GL_VERTEX_PROGRAM_ARB	include/GL/glext.h	1108;"	d
GL_VERTEX_PROGRAM_ARB	shared/GLee.h	2578;"	d
GL_VERTEX_PROGRAM_BINDING_NV	include/GL/glext.h	3102;"	d
GL_VERTEX_PROGRAM_BINDING_NV	shared/GLee.h	6499;"	d
GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA	include/GL/gl.h	2141;"	d
GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA	include/GL/gl.h	2140;"	d
GL_VERTEX_PROGRAM_CALLBACK_MESA	include/GL/gl.h	2139;"	d
GL_VERTEX_PROGRAM_NV	include/GL/glext.h	3069;"	d
GL_VERTEX_PROGRAM_NV	shared/GLee.h	6466;"	d
GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV	include/GL/glext.h	4020;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	include/GL/glext.h	393;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	shared/GLee.h	1620;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	include/GL/glext.h	1120;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	shared/GLee.h	2590;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	include/GL/glext.h	3094;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	shared/GLee.h	6491;"	d
GL_VERTEX_PROGRAM_POSITION_MESA	include/GL/gl.h	2138;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	include/GL/glext.h	470;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	shared/GLee.h	1621;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	include/GL/glext.h	1121;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	shared/GLee.h	2591;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	include/GL/glext.h	3095;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	shared/GLee.h	6492;"	d
GL_VERTEX_SHADER	include/GL/glext.h	421;"	d
GL_VERTEX_SHADER	shared/GLee.h	1652;"	d
GL_VERTEX_SHADER_ARB	include/GL/glext.h	1286;"	d
GL_VERTEX_SHADER_ARB	shared/GLee.h	3141;"	d
GL_VERTEX_SHADER_BINDING_EXT	include/GL/glext.h	3331;"	d
GL_VERTEX_SHADER_BINDING_EXT	shared/GLee.h	7071;"	d
GL_VERTEX_SHADER_EXT	include/GL/glext.h	3330;"	d
GL_VERTEX_SHADER_EXT	shared/GLee.h	7070;"	d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	include/GL/glext.h	3409;"	d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	shared/GLee.h	7149;"	d
GL_VERTEX_SHADER_INVARIANTS_EXT	include/GL/glext.h	3411;"	d
GL_VERTEX_SHADER_INVARIANTS_EXT	shared/GLee.h	7151;"	d
GL_VERTEX_SHADER_LOCALS_EXT	include/GL/glext.h	3413;"	d
GL_VERTEX_SHADER_LOCALS_EXT	shared/GLee.h	7153;"	d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	include/GL/glext.h	3412;"	d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	shared/GLee.h	7152;"	d
GL_VERTEX_SHADER_OPTIMIZED_EXT	include/GL/glext.h	3414;"	d
GL_VERTEX_SHADER_OPTIMIZED_EXT	shared/GLee.h	7154;"	d
GL_VERTEX_SHADER_VARIANTS_EXT	include/GL/glext.h	3410;"	d
GL_VERTEX_SHADER_VARIANTS_EXT	shared/GLee.h	7150;"	d
GL_VERTEX_SOURCE_ATI	include/GL/glext.h	3452;"	d
GL_VERTEX_SOURCE_ATI	shared/GLee.h	7323;"	d
GL_VERTEX_STATE_PROGRAM_NV	include/GL/glext.h	3070;"	d
GL_VERTEX_STATE_PROGRAM_NV	shared/GLee.h	6467;"	d
GL_VERTEX_STREAM0_ATI	include/GL/glext.h	3444;"	d
GL_VERTEX_STREAM0_ATI	shared/GLee.h	7315;"	d
GL_VERTEX_STREAM1_ATI	include/GL/glext.h	3445;"	d
GL_VERTEX_STREAM1_ATI	shared/GLee.h	7316;"	d
GL_VERTEX_STREAM2_ATI	include/GL/glext.h	3446;"	d
GL_VERTEX_STREAM2_ATI	shared/GLee.h	7317;"	d
GL_VERTEX_STREAM3_ATI	include/GL/glext.h	3447;"	d
GL_VERTEX_STREAM3_ATI	shared/GLee.h	7318;"	d
GL_VERTEX_STREAM4_ATI	include/GL/glext.h	3448;"	d
GL_VERTEX_STREAM4_ATI	shared/GLee.h	7319;"	d
GL_VERTEX_STREAM5_ATI	include/GL/glext.h	3449;"	d
GL_VERTEX_STREAM5_ATI	shared/GLee.h	7320;"	d
GL_VERTEX_STREAM6_ATI	include/GL/glext.h	3450;"	d
GL_VERTEX_STREAM6_ATI	shared/GLee.h	7321;"	d
GL_VERTEX_STREAM7_ATI	include/GL/glext.h	3451;"	d
GL_VERTEX_STREAM7_ATI	shared/GLee.h	7322;"	d
GL_VERTEX_WEIGHTING_EXT	include/GL/glext.h	2683;"	d
GL_VERTEX_WEIGHTING_EXT	shared/GLee.h	5666;"	d
GL_VERTEX_WEIGHT_ARRAY_EXT	include/GL/glext.h	2687;"	d
GL_VERTEX_WEIGHT_ARRAY_EXT	shared/GLee.h	5670;"	d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	include/GL/glext.h	2691;"	d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	shared/GLee.h	5674;"	d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	include/GL/glext.h	2688;"	d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	shared/GLee.h	5671;"	d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	include/GL/glext.h	2690;"	d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	shared/GLee.h	5673;"	d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	include/GL/glext.h	2689;"	d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	shared/GLee.h	5672;"	d
GL_VIBRANCE_BIAS_NV	include/GL/glext.h	3051;"	d
GL_VIBRANCE_BIAS_NV	shared/GLee.h	6433;"	d
GL_VIBRANCE_SCALE_NV	include/GL/glext.h	3045;"	d
GL_VIBRANCE_SCALE_NV	shared/GLee.h	6427;"	d
GL_VIDEO_BUFFER_BINDING_NV	include/GL/glext.h	4322;"	d
GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV	include/GL/glext.h	4334;"	d
GL_VIDEO_BUFFER_NV	include/GL/glext.h	4321;"	d
GL_VIDEO_BUFFER_PITCH_NV	include/GL/glext.h	4329;"	d
GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV	include/GL/glext.h	4348;"	d
GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV	include/GL/glext.h	4347;"	d
GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV	include/GL/glext.h	4346;"	d
GL_VIDEO_CAPTURE_FRAME_WIDTH_NV	include/GL/glext.h	4345;"	d
GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV	include/GL/glext.h	4349;"	d
GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV	include/GL/glext.h	4327;"	d
GL_VIDEO_COLOR_CONVERSION_MATRIX_NV	include/GL/glext.h	4330;"	d
GL_VIDEO_COLOR_CONVERSION_MAX_NV	include/GL/glext.h	4331;"	d
GL_VIDEO_COLOR_CONVERSION_MIN_NV	include/GL/glext.h	4332;"	d
GL_VIDEO_COLOR_CONVERSION_OFFSET_NV	include/GL/glext.h	4333;"	d
GL_VIEWPORT	include/GL/gl.h	550;"	d
GL_VIEWPORT_BIT	include/GL/gl.h	716;"	d
GL_VOLATILE_APPLE	include/GL/glext.h	4303;"	d
GL_WAIT_FAILED	include/GL/glext.h	1650;"	d
GL_WEIGHT_ARRAY_ARB	include/GL/glext.h	1000;"	d
GL_WEIGHT_ARRAY_ARB	shared/GLee.h	2327;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	include/GL/glext.h	369;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	shared/GLee.h	1517;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	1221;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	shared/GLee.h	2887;"	d
GL_WEIGHT_ARRAY_POINTER_ARB	include/GL/glext.h	999;"	d
GL_WEIGHT_ARRAY_POINTER_ARB	shared/GLee.h	2326;"	d
GL_WEIGHT_ARRAY_SIZE_ARB	include/GL/glext.h	998;"	d
GL_WEIGHT_ARRAY_SIZE_ARB	shared/GLee.h	2325;"	d
GL_WEIGHT_ARRAY_STRIDE_ARB	include/GL/glext.h	997;"	d
GL_WEIGHT_ARRAY_STRIDE_ARB	shared/GLee.h	2324;"	d
GL_WEIGHT_ARRAY_TYPE_ARB	include/GL/glext.h	996;"	d
GL_WEIGHT_ARRAY_TYPE_ARB	shared/GLee.h	2323;"	d
GL_WEIGHT_SUM_UNITY_ARB	include/GL/glext.h	993;"	d
GL_WEIGHT_SUM_UNITY_ARB	shared/GLee.h	2320;"	d
GL_WIDE_LINE_HINT_PGI	include/GL/glext.h	2264;"	d
GL_WIDE_LINE_HINT_PGI	shared/GLee.h	4477;"	d
GL_WIN_phong_shading	include/GL/glext.h	6707;"	d
GL_WIN_phong_shading	shared/GLee.h	4798;"	d
GL_WIN_specular_fog	include/GL/glext.h	6711;"	d
GL_WIN_specular_fog	shared/GLee.h	4808;"	d
GL_WRAP_BORDER_SUN	include/GL/glext.h	2661;"	d
GL_WRAP_BORDER_SUN	shared/GLee.h	5624;"	d
GL_WRITE_ONLY	include/GL/glext.h	343;"	d
GL_WRITE_ONLY	shared/GLee.h	1520;"	d
GL_WRITE_ONLY_ARB	include/GL/glext.h	1224;"	d
GL_WRITE_ONLY_ARB	shared/GLee.h	2890;"	d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	include/GL/glext.h	3647;"	d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	shared/GLee.h	8049;"	d
GL_WRITE_PIXEL_DATA_RANGE_NV	include/GL/glext.h	3645;"	d
GL_WRITE_PIXEL_DATA_RANGE_NV	shared/GLee.h	8047;"	d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	include/GL/glext.h	3649;"	d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	shared/GLee.h	8051;"	d
GL_W_EXT	include/GL/glext.h	3418;"	d
GL_W_EXT	shared/GLee.h	7158;"	d
GL_XOR	include/GL/gl.h	443;"	d
GL_X_EXT	include/GL/glext.h	3415;"	d
GL_X_EXT	shared/GLee.h	7155;"	d
GL_YCBAYCR8A_4224_NV	include/GL/glext.h	4339;"	d
GL_YCBCR_422_APPLE	include/GL/glext.h	3555;"	d
GL_YCBCR_422_APPLE	shared/GLee.h	7753;"	d
GL_YCBCR_MESA	include/GL/glext.h	3706;"	d
GL_YCBCR_MESA	shared/GLee.h	8207;"	d
GL_YCBYCR8_422_NV	include/GL/glext.h	4338;"	d
GL_YCRCBA_SGIX	include/GL/glext.h	2842;"	d
GL_YCRCBA_SGIX	shared/GLee.h	6058;"	d
GL_YCRCB_422_SGIX	include/GL/glext.h	2342;"	d
GL_YCRCB_422_SGIX	shared/GLee.h	4676;"	d
GL_YCRCB_444_SGIX	include/GL/glext.h	2343;"	d
GL_YCRCB_444_SGIX	shared/GLee.h	4677;"	d
GL_YCRCB_SGIX	include/GL/glext.h	2841;"	d
GL_YCRCB_SGIX	shared/GLee.h	6057;"	d
GL_Y_EXT	include/GL/glext.h	3416;"	d
GL_Y_EXT	shared/GLee.h	7156;"	d
GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV	include/GL/glext.h	4343;"	d
GL_Z4Y12Z4CB12Z4CR12_444_NV	include/GL/glext.h	4344;"	d
GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV	include/GL/glext.h	4342;"	d
GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV	include/GL/glext.h	4341;"	d
GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV	include/GL/glext.h	4340;"	d
GL_ZERO	include/GL/gl.h	377;"	d
GL_ZERO_EXT	include/GL/glext.h	3423;"	d
GL_ZERO_EXT	shared/GLee.h	7163;"	d
GL_ZOOM_X	include/GL/gl.h	641;"	d
GL_ZOOM_Y	include/GL/gl.h	642;"	d
GL_Z_EXT	include/GL/glext.h	3417;"	d
GL_Z_EXT	shared/GLee.h	7157;"	d
GLbitfield	include/GL/gl.h	/^typedef unsigned int	GLbitfield;$/;"	t
GLboolean	include/GL/gl.h	/^typedef unsigned char	GLboolean;$/;"	t
GLbyte	include/GL/gl.h	/^typedef signed char	GLbyte;		\/* 1-byte signed *\/$/;"	t
GLchar	include/GL/glext.h	/^typedef char GLchar;$/;"	t
GLchar	shared/GLee.h	/^	typedef char GLchar; $/;"	t
GLcharARB	include/GL/glext.h	/^typedef char GLcharARB;$/;"	t
GLcharARB	shared/GLee.h	/^	typedef char GLcharARB;$/;"	t
GLclampd	include/GL/gl.h	/^typedef double		GLclampd;	\/* double precision float in [0,1] *\/$/;"	t
GLclampf	include/GL/gl.h	/^typedef float		GLclampf;	\/* single precision float in [0,1] *\/$/;"	t
GLdouble	include/GL/gl.h	/^typedef double		GLdouble;	\/* double precision float *\/$/;"	t
GLee.c	shared/GLee.c	1;"	F
GLee.h	shared/GLee.h	1;"	F
GLeeEnabled	shared/GLee.c	/^GLEE_EXTERN GLboolean GLeeEnabled(GLboolean * extensionQueryingVariable)$/;"	f
GLeeErrorString	shared/GLee.c	/^char GLeeErrorString[256]="";$/;"	v
GLeeForceLink	shared/GLee.c	/^GLEE_EXTERN GLint GLeeForceLink(const char * extensionName)$/;"	f
GLeeGetErrorString	shared/GLee.c	/^GLEE_EXTERN const char * GLeeGetErrorString()$/;"	f
GLeeGetExtStrGL	shared/GLee.c	/^GLEE_EXTERN const char * GLeeGetExtStrGL()$/;"	f
GLeeGetExtStrGLX	shared/GLee.c	/^GLEE_EXTERN const char * GLeeGetExtStrGLX()	$/;"	f
GLeeGetExtStrWGL	shared/GLee.c	/^GLEE_EXTERN const char * GLeeGetExtStrWGL()$/;"	f
GLeeInit	shared/GLee.c	/^GLEE_EXTERN GLboolean GLeeInit()$/;"	f
GLenum	include/GL/gl.h	/^typedef unsigned int	GLenum;$/;"	t
GLfloat	include/GL/gl.h	/^typedef float		GLfloat;	\/* single precision float *\/$/;"	t
GLhalfARB	include/GL/glext.h	/^typedef unsigned short GLhalfARB;$/;"	t
GLhalfNV	include/GL/glext.h	/^typedef unsigned short GLhalfNV;$/;"	t
GLhalfNV	shared/GLee.h	/^	typedef unsigned short GLhalfNV;$/;"	t
GLhandleARB	include/GL/glext.h	/^typedef unsigned int GLhandleARB;$/;"	t
GLhandleARB	shared/GLee.h	/^	typedef int GLhandleARB;$/;"	t
GLint	include/GL/gl.h	/^typedef int		GLint;		\/* 4-byte signed *\/$/;"	t
GLint64	include/GL/glext.h	/^typedef int64_t GLint64;$/;"	t
GLint64EXT	include/GL/glext.h	/^typedef int64_t GLint64EXT;$/;"	t
GLint64EXT	shared/GLee.h	/^	typedef signed long long GLint64EXT;$/;"	t
GLintptr	include/GL/glext.h	/^typedef ptrdiff_t GLintptr;$/;"	t
GLintptr	shared/GLee.h	/^	typedef ptrdiff_t GLintptr;$/;"	t
GLintptrARB	include/GL/glext.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t
GLintptrARB	shared/GLee.h	/^	typedef ptrdiff_t GLintptrARB;$/;"	t
GLprogramcallbackMESA	include/GL/gl.h	/^typedef void (*GLprogramcallbackMESA)(GLenum target, GLvoid *data);$/;"	t
GLshort	include/GL/gl.h	/^typedef short		GLshort;	\/* 2-byte signed *\/$/;"	t
GLsizei	include/GL/gl.h	/^typedef int		GLsizei;	\/* 4-byte signed *\/$/;"	t
GLsizeiptr	include/GL/glext.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t
GLsizeiptr	shared/GLee.h	/^	typedef ptrdiff_t GLsizeiptr;$/;"	t
GLsizeiptrARB	include/GL/glext.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t
GLsizeiptrARB	shared/GLee.h	/^	typedef ptrdiff_t GLsizeiptrARB;$/;"	t
GLsync	include/GL/glext.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync
GLubyte	include/GL/gl.h	/^typedef unsigned char	GLubyte;	\/* 1-byte unsigned *\/$/;"	t
GLuint	include/GL/gl.h	/^typedef unsigned int	GLuint;		\/* 4-byte unsigned *\/$/;"	t
GLuint64	include/GL/glext.h	/^typedef uint64_t GLuint64;$/;"	t
GLuint64EXT	include/GL/glext.h	/^typedef uint64_t GLuint64EXT;$/;"	t
GLuint64EXT	shared/GLee.h	/^	typedef unsigned long long GLuint64EXT;$/;"	t
GLushort	include/GL/gl.h	/^typedef unsigned short	GLushort;	\/* 2-byte unsigned *\/$/;"	t
GLvoid	include/GL/gl.h	/^typedef void		GLvoid;$/;"	t
GetCameraOrientation	shared/glFrame.h	/^        inline void GetCameraOrientation(M3DMatrix44f m)$/;"	f	class:GLFrame
GetElapsedSeconds	shared/stopwatch.h	/^		float GetElapsedSeconds(void)$/;"	f	class:CStopWatch
GetForwardVector	shared/glFrame.h	/^        inline void GetForwardVector(M3DVector3f vVector) { m3dCopyVector3(vVector, vForward); }$/;"	f	class:GLFrame
GetIndexCount	shared/TriangleMesh.h	/^        inline GLuint GetIndexCount(void) { return nNumIndexes; }$/;"	f	class:CTriangleMesh
GetIndexCount	shared/VBOMesh.h	/^        inline GLuint GetIndexCount(void) { return nNumIndexes; }$/;"	f	class:CVBOMesh
GetMatrix	shared/glFrame.h	/^		void GetMatrix(M3DMatrix44f	matrix, bool bRotationOnly = false)$/;"	f	class:GLFrame
GetOrigin	shared/glFrame.h	/^		inline void GetOrigin(M3DVector3f vPoint) {$/;"	f	class:GLFrame
GetOriginX	shared/glFrame.h	/^		inline float GetOriginX(void) { return vOrigin[0]; }$/;"	f	class:GLFrame
GetOriginY	shared/glFrame.h	/^		inline float GetOriginY(void) { return vOrigin[1]; } $/;"	f	class:GLFrame
GetOriginZ	shared/glFrame.h	/^		inline float GetOriginZ(void) { return vOrigin[2]; }$/;"	f	class:GLFrame
GetUpVector	shared/glFrame.h	/^        inline void GetUpVector(M3DVector3f vVector) { m3dCopyVector3(vVector, vUp); }$/;"	f	class:GLFrame
GetVertexCount	shared/TriangleMesh.h	/^        inline GLuint GetVertexCount(void) { return nNumVerts; }$/;"	f	class:CTriangleMesh
GetVertexCount	shared/VBOMesh.h	/^        inline GLuint GetVertexCount(void) { return nNumVerts; }$/;"	f	class:CVBOMesh
GetXAxis	shared/glFrame.h	/^		inline void GetXAxis(M3DVector3f vVector) { m3dCrossProduct(vVector, vUp, vForward); }$/;"	f	class:GLFrame
GetYAxis	shared/glFrame.h	/^		inline void GetYAxis(M3DVector3f vVector) { GetUpVector(vVector); }$/;"	f	class:GLFrame
GetZAxis	shared/glFrame.h	/^		inline void GetZAxis(M3DVector3f vVector) { GetForwardVector(vVector); }$/;"	f	class:GLFrame
HALF	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPixelType.h	/^    HALF  = 1,		\/\/ half (16 bit floating point)$/;"	e	enum:Imf::PixelType
HALF	shared/openexr-mac/include/OpenEXR/ImfPixelType.h	/^    HALF  = 1,		\/\/ half (16 bit floating point)$/;"	e	enum:Imf::PixelType
HALF_DIG	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	294;"	d
HALF_DIG	shared/openexr-mac/include/OpenEXR/half.h	294;"	d
HALF_EPSILON	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	276;"	d
HALF_EPSILON	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	286;"	d
HALF_EPSILON	shared/openexr-mac/include/OpenEXR/half.h	276;"	d
HALF_EPSILON	shared/openexr-mac/include/OpenEXR/half.h	286;"	d
HALF_EXPORT_CONST	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	773;"	d
HALF_EXPORT_CONST	shared/openexr-mac/include/OpenEXR/half.h	773;"	d
HALF_MANT_DIG	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	291;"	d
HALF_MANT_DIG	shared/openexr-mac/include/OpenEXR/half.h	291;"	d
HALF_MAX	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	274;"	d
HALF_MAX	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	284;"	d
HALF_MAX	shared/openexr-mac/include/OpenEXR/half.h	274;"	d
HALF_MAX	shared/openexr-mac/include/OpenEXR/half.h	284;"	d
HALF_MAX_10_EXP	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	313;"	d
HALF_MAX_10_EXP	shared/openexr-mac/include/OpenEXR/half.h	313;"	d
HALF_MAX_EXP	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	304;"	d
HALF_MAX_EXP	shared/openexr-mac/include/OpenEXR/half.h	304;"	d
HALF_MIN	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	270;"	d
HALF_MIN	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	280;"	d
HALF_MIN	shared/openexr-mac/include/OpenEXR/half.h	270;"	d
HALF_MIN	shared/openexr-mac/include/OpenEXR/half.h	280;"	d
HALF_MIN_10_EXP	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	309;"	d
HALF_MIN_10_EXP	shared/openexr-mac/include/OpenEXR/half.h	309;"	d
HALF_MIN_EXP	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	299;"	d
HALF_MIN_EXP	shared/openexr-mac/include/OpenEXR/half.h	299;"	d
HALF_NRM_MIN	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	272;"	d
HALF_NRM_MIN	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	282;"	d
HALF_NRM_MIN	shared/openexr-mac/include/OpenEXR/half.h	272;"	d
HALF_NRM_MIN	shared/openexr-mac/include/OpenEXR/half.h	282;"	d
HALF_RADIX	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	297;"	d
HALF_RADIX	shared/openexr-mac/include/OpenEXR/half.h	297;"	d
HAVE_COMPLETE_IOMANIP	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/OpenEXRConfig.h	43;"	d
HAVE_COMPLETE_IOMANIP	shared/openexr-mac/include/OpenEXR/OpenEXRConfig.h	47;"	d
HAVE_DARWIN	shared/openexr-mac/include/OpenEXR/OpenEXRConfig.h	22;"	d
HAVE_PTHREAD	shared/openexr-mac/include/OpenEXR/OpenEXRConfig.h	7;"	d
HPBUFFERARB	shared/GLee.h	/^	DECLARE_HANDLE(HPBUFFERARB);$/;"	v
HPBUFFERARB	shared/wglext.h	/^DECLARE_HANDLE(HPBUFFERARB);$/;"	v
HPBUFFEREXT	shared/GLee.h	/^	DECLARE_HANDLE(HPBUFFEREXT);$/;"	v
HPBUFFEREXT	shared/wglext.h	/^DECLARE_HANDLE(HPBUFFEREXT);$/;"	v
HalfLut	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLut.h	/^HalfLut::HalfLut (Function f):$/;"	f	class:Imf::HalfLut
HalfLut	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLut.h	/^class HalfLut$/;"	c	namespace:Imf
HalfLut	shared/openexr-mac/include/OpenEXR/ImfLut.h	/^HalfLut::HalfLut (Function f):$/;"	f	class:Imf::HalfLut
HalfLut	shared/openexr-mac/include/OpenEXR/ImfLut.h	/^class HalfLut$/;"	c	namespace:Imf
Header	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^class Header$/;"	c	namespace:Imf
Header	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^class Header$/;"	c	namespace:Imf
IJKLayout	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^    enum InputLayout { XYZLayout, IJKLayout };$/;"	e	enum:Imath::Euler::InputLayout
IJKLayout	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^    enum InputLayout { XYZLayout, IJKLayout };$/;"	e	enum:Imath::Euler::InputLayout
IMATH_EXPORT_CONST	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	61;"	d
IMATH_EXPORT_CONST	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	63;"	d
IMATH_EXPORT_CONST	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	66;"	d
IMATH_EXPORT_CONST	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	61;"	d
IMATH_EXPORT_CONST	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	63;"	d
IMATH_EXPORT_CONST	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	66;"	d
IMF_DECREASING_Y	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	95;"	d
IMF_DECREASING_Y	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	95;"	d
IMF_EXPIMP_TEMPLATE	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	405;"	d
IMF_EXPIMP_TEMPLATE	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	405;"	d
IMF_INCREASING_Y	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	94;"	d
IMF_INCREASING_Y	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	94;"	d
IMF_MAGIC	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	82;"	d
IMF_MAGIC	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	82;"	d
IMF_MIPMAP_LEVELS	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	133;"	d
IMF_MIPMAP_LEVELS	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	133;"	d
IMF_NO_COMPRESSION	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	103;"	d
IMF_NO_COMPRESSION	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	103;"	d
IMF_ONE_LEVEL	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	132;"	d
IMF_ONE_LEVEL	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	132;"	d
IMF_PIZ_COMPRESSION	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	107;"	d
IMF_PIZ_COMPRESSION	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	107;"	d
IMF_PXR24_COMPRESSION	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	108;"	d
IMF_PXR24_COMPRESSION	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	108;"	d
IMF_RAMDOM_Y	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	96;"	d
IMF_RAMDOM_Y	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	96;"	d
IMF_RIPMAP_LEVELS	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	134;"	d
IMF_RIPMAP_LEVELS	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	134;"	d
IMF_RLE_COMPRESSION	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	104;"	d
IMF_RLE_COMPRESSION	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	104;"	d
IMF_ROUND_DOWN	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	141;"	d
IMF_ROUND_DOWN	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	141;"	d
IMF_ROUND_UP	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	142;"	d
IMF_ROUND_UP	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	142;"	d
IMF_STD_ATTRIBUTE_DEF	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStandardAttributes.h	66;"	d
IMF_STD_ATTRIBUTE_DEF	shared/openexr-mac/include/OpenEXR/ImfStandardAttributes.h	66;"	d
IMF_VERSION_NUMBER	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	88;"	d
IMF_VERSION_NUMBER	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	88;"	d
IMF_WRITE_A	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	118;"	d
IMF_WRITE_A	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	118;"	d
IMF_WRITE_B	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	117;"	d
IMF_WRITE_B	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	117;"	d
IMF_WRITE_C	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	120;"	d
IMF_WRITE_C	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	120;"	d
IMF_WRITE_G	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	116;"	d
IMF_WRITE_G	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	116;"	d
IMF_WRITE_R	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	115;"	d
IMF_WRITE_R	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	115;"	d
IMF_WRITE_RGB	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	121;"	d
IMF_WRITE_RGB	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	121;"	d
IMF_WRITE_RGBA	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	122;"	d
IMF_WRITE_RGBA	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	122;"	d
IMF_WRITE_Y	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	119;"	d
IMF_WRITE_Y	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	119;"	d
IMF_WRITE_YA	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	124;"	d
IMF_WRITE_YA	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	124;"	d
IMF_WRITE_YC	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	123;"	d
IMF_WRITE_YC	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	123;"	d
IMF_WRITE_YCA	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	125;"	d
IMF_WRITE_YCA	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	125;"	d
IMF_ZIPS_COMPRESSION	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	105;"	d
IMF_ZIPS_COMPRESSION	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	105;"	d
IMF_ZIP_COMPRESSION	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	106;"	d
IMF_ZIP_COMPRESSION	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	106;"	d
INCLUDED_HALF_LIMITS_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	42;"	d
INCLUDED_HALF_LIMITS_H	shared/openexr-mac/include/OpenEXR/halfLimits.h	42;"	d
INCLUDED_IEXBASEEXC_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexBaseExc.h	38;"	d
INCLUDED_IEXBASEEXC_H	shared/openexr-mac/include/OpenEXR/IexBaseExc.h	38;"	d
INCLUDED_IEXERRNOEXC_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexErrnoExc.h	38;"	d
INCLUDED_IEXERRNOEXC_H	shared/openexr-mac/include/OpenEXR/IexErrnoExc.h	38;"	d
INCLUDED_IEXMACROS_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexMacros.h	38;"	d
INCLUDED_IEXMACROS_H	shared/openexr-mac/include/OpenEXR/IexMacros.h	38;"	d
INCLUDED_IEXMATHEXC_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexMathExc.h	38;"	d
INCLUDED_IEXMATHEXC_H	shared/openexr-mac/include/OpenEXR/IexMathExc.h	38;"	d
INCLUDED_IEXTHROWERRNOEXC_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexThrowErrnoExc.h	38;"	d
INCLUDED_IEXTHROWERRNOEXC_H	shared/openexr-mac/include/OpenEXR/IexThrowErrnoExc.h	38;"	d
INCLUDED_IEX_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/Iex.h	38;"	d
INCLUDED_IEX_H	shared/openexr-mac/include/OpenEXR/Iex.h	38;"	d
INCLUDED_ILM_THREAD_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThread.h	36;"	d
INCLUDED_ILM_THREAD_H	shared/openexr-mac/include/OpenEXR/IlmThread.h	36;"	d
INCLUDED_ILM_THREAD_MUTEX_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h	36;"	d
INCLUDED_ILM_THREAD_MUTEX_H	shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h	36;"	d
INCLUDED_ILM_THREAD_POOL_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadPool.h	36;"	d
INCLUDED_ILM_THREAD_POOL_H	shared/openexr-mac/include/OpenEXR/IlmThreadPool.h	36;"	d
INCLUDED_ILM_THREAD_SEMAPHORE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadSemaphore.h	36;"	d
INCLUDED_ILM_THREAD_SEMAPHORE_H	shared/openexr-mac/include/OpenEXR/IlmThreadSemaphore.h	36;"	d
INCLUDED_IMATHBOXALGO_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBoxAlgo.h	38;"	d
INCLUDED_IMATHBOXALGO_H	shared/openexr-mac/include/OpenEXR/ImathBoxAlgo.h	38;"	d
INCLUDED_IMATHBOX_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	37;"	d
INCLUDED_IMATHBOX_H	shared/openexr-mac/include/OpenEXR/ImathBox.h	37;"	d
INCLUDED_IMATHCOLORALGO_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColorAlgo.h	38;"	d
INCLUDED_IMATHCOLORALGO_H	shared/openexr-mac/include/OpenEXR/ImathColorAlgo.h	38;"	d
INCLUDED_IMATHCOLOR_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	38;"	d
INCLUDED_IMATHCOLOR_H	shared/openexr-mac/include/OpenEXR/ImathColor.h	38;"	d
INCLUDED_IMATHEULER_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	38;"	d
INCLUDED_IMATHEULER_H	shared/openexr-mac/include/OpenEXR/ImathEuler.h	38;"	d
INCLUDED_IMATHEXC_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathExc.h	38;"	d
INCLUDED_IMATHEXC_H	shared/openexr-mac/include/OpenEXR/ImathExc.h	38;"	d
INCLUDED_IMATHFRAME_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrame.h	38;"	d
INCLUDED_IMATHFRAME_H	shared/openexr-mac/include/OpenEXR/ImathFrame.h	38;"	d
INCLUDED_IMATHFRUSTUM_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	38;"	d
INCLUDED_IMATHFRUSTUM_H	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	38;"	d
INCLUDED_IMATHFUN_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	38;"	d
INCLUDED_IMATHFUN_H	shared/openexr-mac/include/OpenEXR/ImathFun.h	38;"	d
INCLUDED_IMATHGLU_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGLU.h	38;"	d
INCLUDED_IMATHGLU_H	shared/openexr-mac/include/OpenEXR/ImathGLU.h	38;"	d
INCLUDED_IMATHGL_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	37;"	d
INCLUDED_IMATHGL_H	shared/openexr-mac/include/OpenEXR/ImathGL.h	37;"	d
INCLUDED_IMATHHALFLIMITS_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathHalfLimits.h	38;"	d
INCLUDED_IMATHHALFLIMITS_H	shared/openexr-mac/include/OpenEXR/ImathHalfLimits.h	38;"	d
INCLUDED_IMATHINTERVAL_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	38;"	d
INCLUDED_IMATHINTERVAL_H	shared/openexr-mac/include/OpenEXR/ImathInterval.h	38;"	d
INCLUDED_IMATHLIMITS_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	38;"	d
INCLUDED_IMATHLIMITS_H	shared/openexr-mac/include/OpenEXR/ImathLimits.h	38;"	d
INCLUDED_IMATHLINEALGO_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLineAlgo.h	38;"	d
INCLUDED_IMATHLINEALGO_H	shared/openexr-mac/include/OpenEXR/ImathLineAlgo.h	38;"	d
INCLUDED_IMATHLINE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	38;"	d
INCLUDED_IMATHLINE_H	shared/openexr-mac/include/OpenEXR/ImathLine.h	38;"	d
INCLUDED_IMATHMATH_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	38;"	d
INCLUDED_IMATHMATH_H	shared/openexr-mac/include/OpenEXR/ImathMath.h	38;"	d
INCLUDED_IMATHMATRIXALGO_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	37;"	d
INCLUDED_IMATHMATRIXALGO_H	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	37;"	d
INCLUDED_IMATHMATRIX_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	38;"	d
INCLUDED_IMATHMATRIX_H	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	38;"	d
INCLUDED_IMATHPLANE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	38;"	d
INCLUDED_IMATHPLANE_H	shared/openexr-mac/include/OpenEXR/ImathPlane.h	38;"	d
INCLUDED_IMATHPLATFORM_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlatform.h	38;"	d
INCLUDED_IMATHPLATFORM_H	shared/openexr-mac/include/OpenEXR/ImathPlatform.h	38;"	d
INCLUDED_IMATHQUAT_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	38;"	d
INCLUDED_IMATHQUAT_H	shared/openexr-mac/include/OpenEXR/ImathQuat.h	38;"	d
INCLUDED_IMATHRANDOM_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	37;"	d
INCLUDED_IMATHRANDOM_H	shared/openexr-mac/include/OpenEXR/ImathRandom.h	37;"	d
INCLUDED_IMATHROOTS_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRoots.h	38;"	d
INCLUDED_IMATHROOTS_H	shared/openexr-mac/include/OpenEXR/ImathRoots.h	38;"	d
INCLUDED_IMATHSHEAR_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	38;"	d
INCLUDED_IMATHSHEAR_H	shared/openexr-mac/include/OpenEXR/ImathShear.h	38;"	d
INCLUDED_IMATHSPHERE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathSphere.h	38;"	d
INCLUDED_IMATHSPHERE_H	shared/openexr-mac/include/OpenEXR/ImathSphere.h	38;"	d
INCLUDED_IMATHVECALGO_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVecAlgo.h	38;"	d
INCLUDED_IMATHVECALGO_H	shared/openexr-mac/include/OpenEXR/ImathVecAlgo.h	38;"	d
INCLUDED_IMATHVEC_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	38;"	d
INCLUDED_IMATHVEC_H	shared/openexr-mac/include/OpenEXR/ImathVec.h	38;"	d
INCLUDED_IMF_ARRAY_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	38;"	d
INCLUDED_IMF_ARRAY_H	shared/openexr-mac/include/OpenEXR/ImfArray.h	38;"	d
INCLUDED_IMF_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	38;"	d
INCLUDED_IMF_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	38;"	d
INCLUDED_IMF_BOX_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfBoxAttribute.h	38;"	d
INCLUDED_IMF_BOX_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfBoxAttribute.h	38;"	d
INCLUDED_IMF_CHANNEL_LIST_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelListAttribute.h	38;"	d
INCLUDED_IMF_CHANNEL_LIST_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfChannelListAttribute.h	38;"	d
INCLUDED_IMF_CHANNEL_LIST_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	38;"	d
INCLUDED_IMF_CHANNEL_LIST_H	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	38;"	d
INCLUDED_IMF_CHROMATICITIES_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChromaticitiesAttribute.h	37;"	d
INCLUDED_IMF_CHROMATICITIES_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfChromaticitiesAttribute.h	37;"	d
INCLUDED_IMF_CHROMATICITIES_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChromaticities.h	37;"	d
INCLUDED_IMF_CHROMATICITIES_H	shared/openexr-mac/include/OpenEXR/ImfChromaticities.h	37;"	d
INCLUDED_IMF_COMPRESSION_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompressionAttribute.h	38;"	d
INCLUDED_IMF_COMPRESSION_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfCompressionAttribute.h	38;"	d
INCLUDED_IMF_COMPRESSION_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompression.h	38;"	d
INCLUDED_IMF_COMPRESSION_H	shared/openexr-mac/include/OpenEXR/ImfCompression.h	38;"	d
INCLUDED_IMF_CONVERT_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfConvert.h	37;"	d
INCLUDED_IMF_CONVERT_H	shared/openexr-mac/include/OpenEXR/ImfConvert.h	37;"	d
INCLUDED_IMF_C_RGBA_FILE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	36;"	d
INCLUDED_IMF_C_RGBA_FILE_H	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	36;"	d
INCLUDED_IMF_DOUBLE_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfDoubleAttribute.h	38;"	d
INCLUDED_IMF_DOUBLE_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfDoubleAttribute.h	38;"	d
INCLUDED_IMF_ENVMAP_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmapAttribute.h	36;"	d
INCLUDED_IMF_ENVMAP_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfEnvmapAttribute.h	36;"	d
INCLUDED_IMF_ENVMAP_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h	37;"	d
INCLUDED_IMF_ENVMAP_H	shared/openexr-mac/include/OpenEXR/ImfEnvmap.h	37;"	d
INCLUDED_IMF_FLOAT_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFloatAttribute.h	38;"	d
INCLUDED_IMF_FLOAT_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfFloatAttribute.h	38;"	d
INCLUDED_IMF_FRAME_BUFFER_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	38;"	d
INCLUDED_IMF_FRAME_BUFFER_H	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	38;"	d
INCLUDED_IMF_HEADER_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	38;"	d
INCLUDED_IMF_HEADER_H	shared/openexr-mac/include/OpenEXR/ImfHeader.h	38;"	d
INCLUDED_IMF_HUF_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHuf.h	38;"	d
INCLUDED_IMF_HUF_H	shared/openexr-mac/include/OpenEXR/ImfHuf.h	38;"	d
INCLUDED_IMF_INPUT_FILE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfInputFile.h	37;"	d
INCLUDED_IMF_INPUT_FILE_H	shared/openexr-mac/include/OpenEXR/ImfInputFile.h	37;"	d
INCLUDED_IMF_INT64_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfInt64.h	37;"	d
INCLUDED_IMF_INT64_H	shared/openexr-mac/include/OpenEXR/ImfInt64.h	37;"	d
INCLUDED_IMF_INT_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIntAttribute.h	38;"	d
INCLUDED_IMF_INT_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfIntAttribute.h	38;"	d
INCLUDED_IMF_IO_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIO.h	37;"	d
INCLUDED_IMF_IO_H	shared/openexr-mac/include/OpenEXR/ImfIO.h	37;"	d
INCLUDED_IMF_KEY_CODE_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCodeAttribute.h	37;"	d
INCLUDED_IMF_KEY_CODE_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfKeyCodeAttribute.h	37;"	d
INCLUDED_IMF_KEY_CODE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCode.h	37;"	d
INCLUDED_IMF_KEY_CODE_H	shared/openexr-mac/include/OpenEXR/ImfKeyCode.h	37;"	d
INCLUDED_IMF_LINE_ORDER_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLineOrderAttribute.h	38;"	d
INCLUDED_IMF_LINE_ORDER_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfLineOrderAttribute.h	38;"	d
INCLUDED_IMF_LINE_ORDER_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLineOrder.h	38;"	d
INCLUDED_IMF_LINE_ORDER_H	shared/openexr-mac/include/OpenEXR/ImfLineOrder.h	38;"	d
INCLUDED_IMF_LUT_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLut.h	38;"	d
INCLUDED_IMF_LUT_H	shared/openexr-mac/include/OpenEXR/ImfLut.h	38;"	d
INCLUDED_IMF_MATRIX_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfMatrixAttribute.h	38;"	d
INCLUDED_IMF_MATRIX_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfMatrixAttribute.h	38;"	d
INCLUDED_IMF_NAME_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h	38;"	d
INCLUDED_IMF_NAME_H	shared/openexr-mac/include/OpenEXR/ImfName.h	38;"	d
INCLUDED_IMF_OPAQUE_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfOpaqueAttribute.h	38;"	d
INCLUDED_IMF_OPAQUE_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfOpaqueAttribute.h	38;"	d
INCLUDED_IMF_OUTPUT_FILE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfOutputFile.h	38;"	d
INCLUDED_IMF_OUTPUT_FILE_H	shared/openexr-mac/include/OpenEXR/ImfOutputFile.h	38;"	d
INCLUDED_IMF_PIXEL_TYPE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPixelType.h	38;"	d
INCLUDED_IMF_PIXEL_TYPE_H	shared/openexr-mac/include/OpenEXR/ImfPixelType.h	38;"	d
INCLUDED_IMF_PREVIEW_IMAGE_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImageAttribute.h	37;"	d
INCLUDED_IMF_PREVIEW_IMAGE_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfPreviewImageAttribute.h	37;"	d
INCLUDED_IMF_PREVIEW_IMAGE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	37;"	d
INCLUDED_IMF_PREVIEW_IMAGE_H	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	37;"	d
INCLUDED_IMF_RGBA_FILE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaFile.h	38;"	d
INCLUDED_IMF_RGBA_FILE_H	shared/openexr-mac/include/OpenEXR/ImfRgbaFile.h	38;"	d
INCLUDED_IMF_RGBA_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	37;"	d
INCLUDED_IMF_RGBA_H	shared/openexr-mac/include/OpenEXR/ImfRgba.h	37;"	d
INCLUDED_IMF_RGBA_YCA_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaYca.h	2;"	d
INCLUDED_IMF_RGBA_YCA_H	shared/openexr-mac/include/OpenEXR/ImfRgbaYca.h	2;"	d
INCLUDED_IMF_STANDARD_ATTRIBUTES_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStandardAttributes.h	37;"	d
INCLUDED_IMF_STANDARD_ATTRIBUTES_H	shared/openexr-mac/include/OpenEXR/ImfStandardAttributes.h	37;"	d
INCLUDED_IMF_STD_IO_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStdIO.h	37;"	d
INCLUDED_IMF_STRING_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStringAttribute.h	38;"	d
INCLUDED_IMF_STRING_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfStringAttribute.h	38;"	d
INCLUDED_IMF_TEST_FILE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTestFile.h	37;"	d
INCLUDED_IMF_TEST_FILE_H	shared/openexr-mac/include/OpenEXR/ImfTestFile.h	37;"	d
INCLUDED_IMF_THREADING_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfThreading.h	36;"	d
INCLUDED_IMF_THREADING_H	shared/openexr-mac/include/OpenEXR/ImfThreading.h	36;"	d
INCLUDED_IMF_TILED_INPUT_FILE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledInputFile.h	37;"	d
INCLUDED_IMF_TILED_INPUT_FILE_H	shared/openexr-mac/include/OpenEXR/ImfTiledInputFile.h	37;"	d
INCLUDED_IMF_TILED_OUTPUT_FILE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledOutputFile.h	37;"	d
INCLUDED_IMF_TILED_OUTPUT_FILE_H	shared/openexr-mac/include/OpenEXR/ImfTiledOutputFile.h	37;"	d
INCLUDED_IMF_TILED_RGBA_FILE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledRgbaFile.h	37;"	d
INCLUDED_IMF_TILED_RGBA_FILE_H	shared/openexr-mac/include/OpenEXR/ImfTiledRgbaFile.h	37;"	d
INCLUDED_IMF_TILE_DESCRIPTION_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescriptionAttribute.h	37;"	d
INCLUDED_IMF_TILE_DESCRIPTION_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfTileDescriptionAttribute.h	37;"	d
INCLUDED_IMF_TILE_DESCRIPTION_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	37;"	d
INCLUDED_IMF_TILE_DESCRIPTION_H	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	37;"	d
INCLUDED_IMF_TIME_CODE_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCodeAttribute.h	37;"	d
INCLUDED_IMF_TIME_CODE_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfTimeCodeAttribute.h	37;"	d
INCLUDED_IMF_TIME_CODE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCode.h	37;"	d
INCLUDED_IMF_TIME_CODE_H	shared/openexr-mac/include/OpenEXR/ImfTimeCode.h	37;"	d
INCLUDED_IMF_VEC_ATTRIBUTE_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVecAttribute.h	38;"	d
INCLUDED_IMF_VEC_ATTRIBUTE_H	shared/openexr-mac/include/OpenEXR/ImfVecAttribute.h	38;"	d
INCLUDED_IMF_VERSION_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h	37;"	d
INCLUDED_IMF_VERSION_H	shared/openexr-mac/include/OpenEXR/ImfVersion.h	37;"	d
INCLUDED_IMF_WAV_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfWav.h	38;"	d
INCLUDED_IMF_WAV_H	shared/openexr-mac/include/OpenEXR/ImfWav.h	38;"	d
INCLUDED_IMF_XDR_H	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	37;"	d
INCLUDED_IMF_XDR_H	shared/openexr-mac/include/OpenEXR/ImfXdr.h	37;"	d
INCREASING_Y	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLineOrder.h	/^    INCREASING_Y = 0,	\/\/ first scan line has lowest y coordinate$/;"	e	enum:Imf::LineOrder
INCREASING_Y	shared/openexr-mac/include/OpenEXR/ImfLineOrder.h	/^    INCREASING_Y = 0,	\/\/ first scan line has lowest y coordinate$/;"	e	enum:Imf::LineOrder
INDEX_DATA	shared/VBOMesh.h	29;"	d
IStream	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIO.h	/^class IStream$/;"	c	namespace:Imf
IStream	shared/openexr-mac/include/OpenEXR/ImfIO.h	/^class IStream$/;"	c	namespace:Imf
Iex	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexBaseExc.h	/^namespace Iex {$/;"	n
Iex	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexErrnoExc.h	/^namespace Iex {$/;"	n
Iex	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexMathExc.h	/^namespace Iex {$/;"	n
Iex	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexThrowErrnoExc.h	/^namespace Iex {$/;"	n
Iex	shared/openexr-mac/include/OpenEXR/IexBaseExc.h	/^namespace Iex {$/;"	n
Iex	shared/openexr-mac/include/OpenEXR/IexErrnoExc.h	/^namespace Iex {$/;"	n
Iex	shared/openexr-mac/include/OpenEXR/IexMathExc.h	/^namespace Iex {$/;"	n
Iex	shared/openexr-mac/include/OpenEXR/IexThrowErrnoExc.h	/^namespace Iex {$/;"	n
Iex.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/Iex.h	1;"	F
Iex.h	shared/openexr-mac/include/OpenEXR/Iex.h	1;"	F
IexBaseExc.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexBaseExc.h	1;"	F
IexBaseExc.h	shared/openexr-mac/include/OpenEXR/IexBaseExc.h	1;"	F
IexErrnoExc.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexErrnoExc.h	1;"	F
IexErrnoExc.h	shared/openexr-mac/include/OpenEXR/IexErrnoExc.h	1;"	F
IexMacros.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexMacros.h	1;"	F
IexMacros.h	shared/openexr-mac/include/OpenEXR/IexMacros.h	1;"	F
IexMathExc.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexMathExc.h	1;"	F
IexMathExc.h	shared/openexr-mac/include/OpenEXR/IexMathExc.h	1;"	F
IexThrowErrnoExc.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexThrowErrnoExc.h	1;"	F
IexThrowErrnoExc.h	shared/openexr-mac/include/OpenEXR/IexThrowErrnoExc.h	1;"	F
IlmThread	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThread.h	/^namespace IlmThread {$/;"	n
IlmThread	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h	/^namespace IlmThread {$/;"	n
IlmThread	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadPool.h	/^namespace IlmThread {$/;"	n
IlmThread	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadSemaphore.h	/^namespace IlmThread {$/;"	n
IlmThread	shared/openexr-mac/include/OpenEXR/IlmThread.h	/^namespace IlmThread {$/;"	n
IlmThread	shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h	/^namespace IlmThread {$/;"	n
IlmThread	shared/openexr-mac/include/OpenEXR/IlmThreadPool.h	/^namespace IlmThread {$/;"	n
IlmThread	shared/openexr-mac/include/OpenEXR/IlmThreadSemaphore.h	/^namespace IlmThread {$/;"	n
IlmThread.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThread.h	1;"	F
IlmThread.h	shared/openexr-mac/include/OpenEXR/IlmThread.h	1;"	F
IlmThreadMutex.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h	1;"	F
IlmThreadMutex.h	shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h	1;"	F
IlmThreadPool.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadPool.h	1;"	F
IlmThreadPool.h	shared/openexr-mac/include/OpenEXR/IlmThreadPool.h	1;"	F
IlmThreadSemaphore.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadSemaphore.h	1;"	F
IlmThreadSemaphore.h	shared/openexr-mac/include/OpenEXR/IlmThreadSemaphore.h	1;"	F
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBoxAlgo.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColorAlgo.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathExc.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrame.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathHalfLimits.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLineAlgo.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRoots.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathSphere.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVecAlgo.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathBoxAlgo.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathColorAlgo.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathExc.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathFrame.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathHalfLimits.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathLine.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathLineAlgo.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathRoots.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathSphere.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^namespace Imath {$/;"	n
Imath	shared/openexr-mac/include/OpenEXR/ImathVecAlgo.h	/^namespace Imath {$/;"	n
ImathBox.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	1;"	F
ImathBox.h	shared/openexr-mac/include/OpenEXR/ImathBox.h	1;"	F
ImathBoxAlgo.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBoxAlgo.h	1;"	F
ImathBoxAlgo.h	shared/openexr-mac/include/OpenEXR/ImathBoxAlgo.h	1;"	F
ImathColor.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	1;"	F
ImathColor.h	shared/openexr-mac/include/OpenEXR/ImathColor.h	1;"	F
ImathColorAlgo.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColorAlgo.h	1;"	F
ImathColorAlgo.h	shared/openexr-mac/include/OpenEXR/ImathColorAlgo.h	1;"	F
ImathEuler.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	1;"	F
ImathEuler.h	shared/openexr-mac/include/OpenEXR/ImathEuler.h	1;"	F
ImathExc.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathExc.h	1;"	F
ImathExc.h	shared/openexr-mac/include/OpenEXR/ImathExc.h	1;"	F
ImathFrame.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrame.h	1;"	F
ImathFrame.h	shared/openexr-mac/include/OpenEXR/ImathFrame.h	1;"	F
ImathFrustum.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	1;"	F
ImathFrustum.h	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	1;"	F
ImathFun.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	1;"	F
ImathFun.h	shared/openexr-mac/include/OpenEXR/ImathFun.h	1;"	F
ImathGL.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	1;"	F
ImathGL.h	shared/openexr-mac/include/OpenEXR/ImathGL.h	1;"	F
ImathGLU.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGLU.h	1;"	F
ImathGLU.h	shared/openexr-mac/include/OpenEXR/ImathGLU.h	1;"	F
ImathHalfLimits.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathHalfLimits.h	1;"	F
ImathHalfLimits.h	shared/openexr-mac/include/OpenEXR/ImathHalfLimits.h	1;"	F
ImathInterval.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	1;"	F
ImathInterval.h	shared/openexr-mac/include/OpenEXR/ImathInterval.h	1;"	F
ImathLimits.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	1;"	F
ImathLimits.h	shared/openexr-mac/include/OpenEXR/ImathLimits.h	1;"	F
ImathLine.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	1;"	F
ImathLine.h	shared/openexr-mac/include/OpenEXR/ImathLine.h	1;"	F
ImathLineAlgo.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLineAlgo.h	1;"	F
ImathLineAlgo.h	shared/openexr-mac/include/OpenEXR/ImathLineAlgo.h	1;"	F
ImathMath.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	1;"	F
ImathMath.h	shared/openexr-mac/include/OpenEXR/ImathMath.h	1;"	F
ImathMatrix.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	1;"	F
ImathMatrix.h	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	1;"	F
ImathMatrixAlgo.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	1;"	F
ImathMatrixAlgo.h	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	1;"	F
ImathPlane.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	1;"	F
ImathPlane.h	shared/openexr-mac/include/OpenEXR/ImathPlane.h	1;"	F
ImathPlatform.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlatform.h	1;"	F
ImathPlatform.h	shared/openexr-mac/include/OpenEXR/ImathPlatform.h	1;"	F
ImathQuat.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	1;"	F
ImathQuat.h	shared/openexr-mac/include/OpenEXR/ImathQuat.h	1;"	F
ImathRandom.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	1;"	F
ImathRandom.h	shared/openexr-mac/include/OpenEXR/ImathRandom.h	1;"	F
ImathRoots.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRoots.h	1;"	F
ImathRoots.h	shared/openexr-mac/include/OpenEXR/ImathRoots.h	1;"	F
ImathShear.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	1;"	F
ImathShear.h	shared/openexr-mac/include/OpenEXR/ImathShear.h	1;"	F
ImathSphere.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathSphere.h	1;"	F
ImathSphere.h	shared/openexr-mac/include/OpenEXR/ImathSphere.h	1;"	F
ImathVec.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	1;"	F
ImathVec.h	shared/openexr-mac/include/OpenEXR/ImathVec.h	1;"	F
ImathVecAlgo.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVecAlgo.h	1;"	F
ImathVecAlgo.h	shared/openexr-mac/include/OpenEXR/ImathVecAlgo.h	1;"	F
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfBoxAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelListAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChromaticities.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChromaticitiesAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompression.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompressionAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfConvert.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfDoubleAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmapAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFloatAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHuf.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIO.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfInputFile.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfInt64.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIntAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCode.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCodeAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLineOrder.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLineOrderAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLut.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfMatrixAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfOpaqueAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfOutputFile.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPixelType.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImageAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaFile.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaYca.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStandardAttributes.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStdIO.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStringAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTestFile.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfThreading.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescriptionAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledInputFile.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledOutputFile.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledRgbaFile.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCode.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCodeAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVecAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfWav.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfBoxAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfChannelListAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfChromaticities.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfChromaticitiesAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfCompression.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfCompressionAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfConvert.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfDoubleAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfEnvmap.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfEnvmapAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfFloatAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfHuf.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfIO.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfInputFile.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfInt64.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfIntAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfKeyCode.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfKeyCodeAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfLineOrder.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfLineOrderAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfLut.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfMatrixAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfName.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfOpaqueAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfOutputFile.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfPixelType.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfPreviewImageAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfRgbaFile.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfRgbaYca.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfStandardAttributes.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfStringAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfTestFile.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfThreading.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfTileDescriptionAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfTiledInputFile.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfTiledOutputFile.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfTiledRgbaFile.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfTimeCode.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfTimeCodeAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfVecAttribute.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfVersion.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfWav.h	/^namespace Imf {$/;"	n
Imf	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^namespace Imf {$/;"	n
ImfArray.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	1;"	F
ImfArray.h	shared/openexr-mac/include/OpenEXR/ImfArray.h	1;"	F
ImfAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	1;"	F
ImfAttribute.h	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	1;"	F
ImfBoxAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfBoxAttribute.h	1;"	F
ImfBoxAttribute.h	shared/openexr-mac/include/OpenEXR/ImfBoxAttribute.h	1;"	F
ImfCRgbaFile.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	1;"	F
ImfCRgbaFile.h	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	1;"	F
ImfChannelList.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	1;"	F
ImfChannelList.h	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	1;"	F
ImfChannelListAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelListAttribute.h	1;"	F
ImfChannelListAttribute.h	shared/openexr-mac/include/OpenEXR/ImfChannelListAttribute.h	1;"	F
ImfChromaticities.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChromaticities.h	1;"	F
ImfChromaticities.h	shared/openexr-mac/include/OpenEXR/ImfChromaticities.h	1;"	F
ImfChromaticitiesAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChromaticitiesAttribute.h	1;"	F
ImfChromaticitiesAttribute.h	shared/openexr-mac/include/OpenEXR/ImfChromaticitiesAttribute.h	1;"	F
ImfCompression.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompression.h	1;"	F
ImfCompression.h	shared/openexr-mac/include/OpenEXR/ImfCompression.h	1;"	F
ImfCompressionAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompressionAttribute.h	1;"	F
ImfCompressionAttribute.h	shared/openexr-mac/include/OpenEXR/ImfCompressionAttribute.h	1;"	F
ImfConvert.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfConvert.h	1;"	F
ImfConvert.h	shared/openexr-mac/include/OpenEXR/ImfConvert.h	1;"	F
ImfDoubleAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfDoubleAttribute.h	1;"	F
ImfDoubleAttribute.h	shared/openexr-mac/include/OpenEXR/ImfDoubleAttribute.h	1;"	F
ImfEnvmap.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h	1;"	F
ImfEnvmap.h	shared/openexr-mac/include/OpenEXR/ImfEnvmap.h	1;"	F
ImfEnvmapAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmapAttribute.h	1;"	F
ImfEnvmapAttribute.h	shared/openexr-mac/include/OpenEXR/ImfEnvmapAttribute.h	1;"	F
ImfFloatAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFloatAttribute.h	1;"	F
ImfFloatAttribute.h	shared/openexr-mac/include/OpenEXR/ImfFloatAttribute.h	1;"	F
ImfFrameBuffer.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	1;"	F
ImfFrameBuffer.h	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	1;"	F
ImfHalf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	/^typedef unsigned short ImfHalf;$/;"	t
ImfHalf	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	/^typedef unsigned short ImfHalf;$/;"	t
ImfHeader	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	/^typedef struct ImfHeader ImfHeader;$/;"	t	typeref:struct:ImfHeader
ImfHeader	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	/^typedef struct ImfHeader ImfHeader;$/;"	t	typeref:struct:ImfHeader
ImfHeader.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	1;"	F
ImfHeader.h	shared/openexr-mac/include/OpenEXR/ImfHeader.h	1;"	F
ImfHuf.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHuf.h	1;"	F
ImfHuf.h	shared/openexr-mac/include/OpenEXR/ImfHuf.h	1;"	F
ImfIO.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIO.h	1;"	F
ImfIO.h	shared/openexr-mac/include/OpenEXR/ImfIO.h	1;"	F
ImfInputFile	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	/^typedef struct ImfInputFile ImfInputFile;$/;"	t	typeref:struct:ImfInputFile
ImfInputFile	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	/^typedef struct ImfInputFile ImfInputFile;$/;"	t	typeref:struct:ImfInputFile
ImfInputFile.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfInputFile.h	1;"	F
ImfInputFile.h	shared/openexr-mac/include/OpenEXR/ImfInputFile.h	1;"	F
ImfInt64.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfInt64.h	1;"	F
ImfInt64.h	shared/openexr-mac/include/OpenEXR/ImfInt64.h	1;"	F
ImfIntAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIntAttribute.h	1;"	F
ImfIntAttribute.h	shared/openexr-mac/include/OpenEXR/ImfIntAttribute.h	1;"	F
ImfKeyCode.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCode.h	1;"	F
ImfKeyCode.h	shared/openexr-mac/include/OpenEXR/ImfKeyCode.h	1;"	F
ImfKeyCodeAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCodeAttribute.h	1;"	F
ImfKeyCodeAttribute.h	shared/openexr-mac/include/OpenEXR/ImfKeyCodeAttribute.h	1;"	F
ImfLineOrder.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLineOrder.h	1;"	F
ImfLineOrder.h	shared/openexr-mac/include/OpenEXR/ImfLineOrder.h	1;"	F
ImfLineOrderAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLineOrderAttribute.h	1;"	F
ImfLineOrderAttribute.h	shared/openexr-mac/include/OpenEXR/ImfLineOrderAttribute.h	1;"	F
ImfLut	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	/^typedef struct ImfLut ImfLut;$/;"	t	typeref:struct:ImfLut
ImfLut	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	/^typedef struct ImfLut ImfLut;$/;"	t	typeref:struct:ImfLut
ImfLut.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLut.h	1;"	F
ImfLut.h	shared/openexr-mac/include/OpenEXR/ImfLut.h	1;"	F
ImfMatrixAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfMatrixAttribute.h	1;"	F
ImfMatrixAttribute.h	shared/openexr-mac/include/OpenEXR/ImfMatrixAttribute.h	1;"	F
ImfName.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h	1;"	F
ImfName.h	shared/openexr-mac/include/OpenEXR/ImfName.h	1;"	F
ImfOpaqueAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfOpaqueAttribute.h	1;"	F
ImfOpaqueAttribute.h	shared/openexr-mac/include/OpenEXR/ImfOpaqueAttribute.h	1;"	F
ImfOutputFile	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	/^typedef struct ImfOutputFile ImfOutputFile;$/;"	t	typeref:struct:ImfOutputFile
ImfOutputFile	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	/^typedef struct ImfOutputFile ImfOutputFile;$/;"	t	typeref:struct:ImfOutputFile
ImfOutputFile.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfOutputFile.h	1;"	F
ImfOutputFile.h	shared/openexr-mac/include/OpenEXR/ImfOutputFile.h	1;"	F
ImfPixelType.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPixelType.h	1;"	F
ImfPixelType.h	shared/openexr-mac/include/OpenEXR/ImfPixelType.h	1;"	F
ImfPreviewImage.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	1;"	F
ImfPreviewImage.h	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	1;"	F
ImfPreviewImageAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImageAttribute.h	1;"	F
ImfPreviewImageAttribute.h	shared/openexr-mac/include/OpenEXR/ImfPreviewImageAttribute.h	1;"	F
ImfRgba	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	/^struct ImfRgba$/;"	s
ImfRgba	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	/^typedef struct ImfRgba ImfRgba;$/;"	t	typeref:struct:ImfRgba
ImfRgba	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	/^struct ImfRgba$/;"	s
ImfRgba	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	/^typedef struct ImfRgba ImfRgba;$/;"	t	typeref:struct:ImfRgba
ImfRgba.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	1;"	F
ImfRgba.h	shared/openexr-mac/include/OpenEXR/ImfRgba.h	1;"	F
ImfRgbaFile.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaFile.h	1;"	F
ImfRgbaFile.h	shared/openexr-mac/include/OpenEXR/ImfRgbaFile.h	1;"	F
ImfRgbaYca.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaYca.h	1;"	F
ImfRgbaYca.h	shared/openexr-mac/include/OpenEXR/ImfRgbaYca.h	1;"	F
ImfStandardAttributes.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStandardAttributes.h	1;"	F
ImfStandardAttributes.h	shared/openexr-mac/include/OpenEXR/ImfStandardAttributes.h	1;"	F
ImfStdIO.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStdIO.h	1;"	F
ImfStringAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStringAttribute.h	1;"	F
ImfStringAttribute.h	shared/openexr-mac/include/OpenEXR/ImfStringAttribute.h	1;"	F
ImfTestFile.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTestFile.h	1;"	F
ImfTestFile.h	shared/openexr-mac/include/OpenEXR/ImfTestFile.h	1;"	F
ImfThreading.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfThreading.h	1;"	F
ImfThreading.h	shared/openexr-mac/include/OpenEXR/ImfThreading.h	1;"	F
ImfTileDescription.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	1;"	F
ImfTileDescription.h	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	1;"	F
ImfTileDescriptionAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescriptionAttribute.h	1;"	F
ImfTileDescriptionAttribute.h	shared/openexr-mac/include/OpenEXR/ImfTileDescriptionAttribute.h	1;"	F
ImfTiledInputFile	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	/^typedef struct ImfTiledInputFile ImfTiledInputFile;$/;"	t	typeref:struct:ImfTiledInputFile
ImfTiledInputFile	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	/^typedef struct ImfTiledInputFile ImfTiledInputFile;$/;"	t	typeref:struct:ImfTiledInputFile
ImfTiledInputFile.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledInputFile.h	1;"	F
ImfTiledInputFile.h	shared/openexr-mac/include/OpenEXR/ImfTiledInputFile.h	1;"	F
ImfTiledOutputFile	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	/^typedef struct ImfTiledOutputFile ImfTiledOutputFile;$/;"	t	typeref:struct:ImfTiledOutputFile
ImfTiledOutputFile	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	/^typedef struct ImfTiledOutputFile ImfTiledOutputFile;$/;"	t	typeref:struct:ImfTiledOutputFile
ImfTiledOutputFile.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledOutputFile.h	1;"	F
ImfTiledOutputFile.h	shared/openexr-mac/include/OpenEXR/ImfTiledOutputFile.h	1;"	F
ImfTiledRgbaFile.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledRgbaFile.h	1;"	F
ImfTiledRgbaFile.h	shared/openexr-mac/include/OpenEXR/ImfTiledRgbaFile.h	1;"	F
ImfTimeCode.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCode.h	1;"	F
ImfTimeCode.h	shared/openexr-mac/include/OpenEXR/ImfTimeCode.h	1;"	F
ImfTimeCodeAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCodeAttribute.h	1;"	F
ImfTimeCodeAttribute.h	shared/openexr-mac/include/OpenEXR/ImfTimeCodeAttribute.h	1;"	F
ImfVecAttribute.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVecAttribute.h	1;"	F
ImfVecAttribute.h	shared/openexr-mac/include/OpenEXR/ImfVecAttribute.h	1;"	F
ImfVersion.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h	1;"	F
ImfVersion.h	shared/openexr-mac/include/OpenEXR/ImfVersion.h	1;"	F
ImfWav.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfWav.h	1;"	F
ImfWav.h	shared/openexr-mac/include/OpenEXR/ImfWav.h	1;"	F
ImfXdr.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	1;"	F
ImfXdr.h	shared/openexr-mac/include/OpenEXR/ImfXdr.h	1;"	F
InputFile	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfInputFile.h	/^class InputFile$/;"	c	namespace:Imf
InputFile	shared/openexr-mac/include/OpenEXR/ImfInputFile.h	/^class InputFile$/;"	c	namespace:Imf
InputLayout	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^    enum InputLayout { XYZLayout, IJKLayout };$/;"	g	class:Imath::Euler
InputLayout	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^    enum InputLayout { XYZLayout, IJKLayout };$/;"	g	class:Imath::Euler
Int64	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfInt64.h	/^    typedef unsigned __int64 Int64;$/;"	t	namespace:Imf
Int64	shared/openexr-mac/include/OpenEXR/ImfInt64.h	/^    typedef unsigned __int64 Int64;$/;"	t	namespace:Imf
IntAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIntAttribute.h	/^typedef TypedAttribute<int> IntAttribute;$/;"	t	namespace:Imf
IntAttribute	shared/openexr-mac/include/OpenEXR/ImfIntAttribute.h	/^typedef TypedAttribute<int> IntAttribute;$/;"	t	namespace:Imf
Interval	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^class Interval$/;"	c	namespace:Imath
Interval	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^inline Interval<T>::Interval()$/;"	f	class:Imath::Interval
Interval	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^inline Interval<T>::Interval(const T& minV, const T& maxV)$/;"	f	class:Imath::Interval
Interval	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^inline Interval<T>::Interval(const T& point)$/;"	f	class:Imath::Interval
Interval	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^class Interval$/;"	c	namespace:Imath
Interval	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^inline Interval<T>::Interval()$/;"	f	class:Imath::Interval
Interval	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^inline Interval<T>::Interval(const T& minV, const T& maxV)$/;"	f	class:Imath::Interval
Interval	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^inline Interval<T>::Interval(const T& point)$/;"	f	class:Imath::Interval
Intervald	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^typedef Interval <double> Intervald;$/;"	t	namespace:Imath
Intervald	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^typedef Interval <double> Intervald;$/;"	t	namespace:Imath
Intervalf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^typedef Interval <float>  Intervalf;$/;"	t	namespace:Imath
Intervalf	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^typedef Interval <float>  Intervalf;$/;"	t	namespace:Imath
Intervali	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^typedef Interval <int>    Intervali;$/;"	t	namespace:Imath
Intervali	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^typedef Interval <int>    Intervali;$/;"	t	namespace:Imath
Intervals	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^typedef Interval <short>  Intervals;$/;"	t	namespace:Imath
Intervals	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^typedef Interval <short>  Intervals;$/;"	t	namespace:Imath
Iterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^ChannelList::Iterator::Iterator (): _i()$/;"	f	class:Imf::ChannelList::Iterator
Iterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^ChannelList::Iterator::Iterator (const ChannelList::ChannelMap::iterator &i):$/;"	f	class:Imf::ChannelList::Iterator
Iterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^class ChannelList::Iterator$/;"	c	class:Imf::ChannelList
Iterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::Iterator::Iterator (): _i()$/;"	f	class:Imf::FrameBuffer::Iterator
Iterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::Iterator::Iterator (const FrameBuffer::SliceMap::iterator &i):$/;"	f	class:Imf::FrameBuffer::Iterator
Iterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^class FrameBuffer::Iterator$/;"	c	class:Imf::FrameBuffer
Iterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::Iterator::Iterator (): _i()$/;"	f	class:Imf::Header::Iterator
Iterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::Iterator::Iterator (const Header::AttributeMap::iterator &i): _i (i)$/;"	f	class:Imf::Header::Iterator
Iterator	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^class Header::Iterator$/;"	c	class:Imf::Header
Iterator	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^ChannelList::Iterator::Iterator (): _i()$/;"	f	class:Imf::ChannelList::Iterator
Iterator	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^ChannelList::Iterator::Iterator (const ChannelList::ChannelMap::iterator &i):$/;"	f	class:Imf::ChannelList::Iterator
Iterator	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^class ChannelList::Iterator$/;"	c	class:Imf::ChannelList
Iterator	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::Iterator::Iterator (): _i()$/;"	f	class:Imf::FrameBuffer::Iterator
Iterator	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::Iterator::Iterator (const FrameBuffer::SliceMap::iterator &i):$/;"	f	class:Imf::FrameBuffer::Iterator
Iterator	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^class FrameBuffer::Iterator$/;"	c	class:Imf::FrameBuffer
Iterator	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::Iterator::Iterator (): _i()$/;"	f	class:Imf::Header::Iterator
Iterator	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::Iterator::Iterator (const Header::AttributeMap::iterator &i): _i (i)$/;"	f	class:Imf::Header::Iterator
Iterator	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^class Header::Iterator$/;"	c	class:Imf::Header
KeyCode	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCode.h	/^class KeyCode$/;"	c	namespace:Imf
KeyCode	shared/openexr-mac/include/OpenEXR/ImfKeyCode.h	/^class KeyCode$/;"	c	namespace:Imf
KeyCodeAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCodeAttribute.h	/^typedef TypedAttribute<KeyCode> KeyCodeAttribute;$/;"	t	namespace:Imf
KeyCodeAttribute	shared/openexr-mac/include/OpenEXR/ImfKeyCodeAttribute.h	/^typedef TypedAttribute<KeyCode> KeyCodeAttribute;$/;"	t	namespace:Imf
LITTLE_ENDIAN_DWORD	shared/gltools.h	/^inline void LITTLE_ENDIAN_DWORD(void *pWord)$/;"	f
LITTLE_ENDIAN_DWORD	shared/gltools.h	111;"	d
LITTLE_ENDIAN_WORD	shared/gltools.h	/^inline void LITTLE_ENDIAN_WORD(void *pWord)$/;"	f
LITTLE_ENDIAN_WORD	shared/gltools.h	110;"	d
LatLongMap	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h	/^namespace LatLongMap$/;"	n	namespace:Imf
LatLongMap	shared/openexr-mac/include/OpenEXR/ImfEnvmap.h	/^namespace LatLongMap$/;"	n	namespace:Imf
Legal	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	Legal	=   XYZ | XZY | YZX | YXZ | ZXY | ZYX |$/;"	e	enum:Imath::Euler::Order
Legal	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	Legal	=   XYZ | XZY | YZX | YXZ | ZXY | ZYX |$/;"	e	enum:Imath::Euler::Order
LevelMode	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^enum LevelMode$/;"	g	namespace:Imf
LevelMode	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^enum LevelMode$/;"	g	namespace:Imf
LevelRoundingMode	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^enum LevelRoundingMode$/;"	g	namespace:Imf
LevelRoundingMode	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^enum LevelRoundingMode$/;"	g	namespace:Imf
Line3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	/^    Line3() {}$/;"	f	class:Imath::Line3
Line3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	/^class Line3$/;"	c	namespace:Imath
Line3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	/^inline Line3<T>::Line3(const Vec3<T> &p0, const Vec3<T> &p1)$/;"	f	class:Imath::Line3
Line3	shared/openexr-mac/include/OpenEXR/ImathLine.h	/^    Line3() {}$/;"	f	class:Imath::Line3
Line3	shared/openexr-mac/include/OpenEXR/ImathLine.h	/^class Line3$/;"	c	namespace:Imath
Line3	shared/openexr-mac/include/OpenEXR/ImathLine.h	/^inline Line3<T>::Line3(const Vec3<T> &p0, const Vec3<T> &p1)$/;"	f	class:Imath::Line3
Line3d	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	/^typedef Line3<double> Line3d;$/;"	t	namespace:Imath
Line3d	shared/openexr-mac/include/OpenEXR/ImathLine.h	/^typedef Line3<double> Line3d;$/;"	t	namespace:Imath
Line3f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	/^typedef Line3<float> Line3f;$/;"	t	namespace:Imath
Line3f	shared/openexr-mac/include/OpenEXR/ImathLine.h	/^typedef Line3<float> Line3f;$/;"	t	namespace:Imath
LineOrder	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLineOrder.h	/^enum LineOrder$/;"	g	namespace:Imf
LineOrder	shared/openexr-mac/include/OpenEXR/ImfLineOrder.h	/^enum LineOrder$/;"	g	namespace:Imf
LineOrderAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLineOrderAttribute.h	/^typedef TypedAttribute<LineOrder> LineOrderAttribute;$/;"	t	namespace:Imf
LineOrderAttribute	shared/openexr-mac/include/OpenEXR/ImfLineOrderAttribute.h	/^typedef TypedAttribute<LineOrder> LineOrderAttribute;$/;"	t	namespace:Imf
LocalToWorld	shared/glFrame.h	/^        void LocalToWorld(const M3DVector3f vLocal, M3DVector3f vWorld)$/;"	f	class:GLFrame
Lock	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h	/^    Lock (const Mutex& m, bool autoLock = true):$/;"	f	class:IlmThread::Lock
Lock	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h	/^class Lock$/;"	c	namespace:IlmThread
Lock	shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h	/^    Lock (const Mutex& m, bool autoLock = true):$/;"	f	class:IlmThread::Lock
Lock	shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h	/^class Lock$/;"	c	namespace:IlmThread
M	shared/glFrame.h	170;"	d
M	shared/glFrame.h	187;"	d
M	shared/math3d.cpp	232;"	d	file:
M	shared/math3d.cpp	265;"	d	file:
M	shared/math3d.cpp	293;"	d	file:
M	shared/math3d.cpp	318;"	d	file:
M	shared/math3d.cpp	345;"	d	file:
M	shared/math3d.cpp	378;"	d	file:
M33	shared/math3d.cpp	155;"	d	file:
M33	shared/math3d.cpp	207;"	d	file:
M33d	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^typedef Matrix33 <double> M33d;$/;"	t	namespace:Imath
M33d	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^typedef Matrix33 <double> M33d;$/;"	t	namespace:Imath
M33f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^typedef Matrix33 <float>  M33f;$/;"	t	namespace:Imath
M33f	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^typedef Matrix33 <float>  M33f;$/;"	t	namespace:Imath
M33fAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfMatrixAttribute.h	/^typedef TypedAttribute<Imath::M33f> M33fAttribute;$/;"	t	namespace:Imf
M33fAttribute	shared/openexr-mac/include/OpenEXR/ImfMatrixAttribute.h	/^typedef TypedAttribute<Imath::M33f> M33fAttribute;$/;"	t	namespace:Imf
M3DMatrix33d	shared/math3d.h	/^typedef double M3DMatrix33d[9];		\/\/ A 3 x 3 matrix, column major (doubles) - OpenGL Style$/;"	t
M3DMatrix33f	shared/math3d.h	/^typedef float M3DMatrix33f[9];		\/\/ A 3 x 3 matrix, column major (floats) - OpenGL Style$/;"	t
M3DMatrix44d	shared/math3d.h	/^typedef double M3DMatrix44d[16];	\/\/ A 4 x 4 matrix, column major (doubles) - OpenGL style$/;"	t
M3DMatrix44f	shared/math3d.h	/^typedef float M3DMatrix44f[16];		\/\/ A 4 X 4 matrix, column major (floats) - OpenGL style$/;"	t
M3DVector2d	shared/math3d.h	/^typedef double M3DVector2d[2];		\/\/ 2D representations sometimes... (x,y) order$/;"	t
M3DVector2f	shared/math3d.h	/^typedef float M3DVector2f[2];		\/\/ 3D points = 3D Vectors, but we need a $/;"	t
M3DVector3d	shared/math3d.h	/^typedef double	M3DVector3d[3];		\/\/ Vector of three doubles (x, y, z)$/;"	t
M3DVector3f	shared/math3d.h	/^typedef float	M3DVector3f[3];		\/\/ Vector of three floats (x, y, z)$/;"	t
M3DVector4d	shared/math3d.h	/^typedef double M3DVector4d[4];		\/\/ Yes, occasionaly$/;"	t
M3DVector4f	shared/math3d.h	/^typedef float M3DVector4f[4];		\/\/ Lesser used... Do we really need these?$/;"	t
M3D_2PI	shared/math3d.h	51;"	d
M3D_INV_PI_DIV_180	shared/math3d.h	53;"	d
M3D_PI	shared/math3d.h	50;"	d
M3D_PI_DIV_180	shared/math3d.h	52;"	d
M44d	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^typedef Matrix44 <double> M44d;$/;"	t	namespace:Imath
M44d	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^typedef Matrix44 <double> M44d;$/;"	t	namespace:Imath
M44f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^typedef Matrix44 <float>  M44f;$/;"	t	namespace:Imath
M44f	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^typedef Matrix44 <float>  M44f;$/;"	t	namespace:Imath
M44fAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfMatrixAttribute.h	/^typedef TypedAttribute<Imath::M44f> M44fAttribute;$/;"	t	namespace:Imf
M44fAttribute	shared/openexr-mac/include/OpenEXR/ImfMatrixAttribute.h	/^typedef TypedAttribute<Imath::M44f> M44fAttribute;$/;"	t	namespace:Imf
MAGIC	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h	/^const int MAGIC = 20000630;$/;"	m	namespace:Imf
MAGIC	shared/openexr-mac/include/OpenEXR/ImfVersion.h	/^const int MAGIC = 20000630;$/;"	m	namespace:Imf
MANGLE	include/GL/gl_mangle.h	27;"	d
MAT	shared/math3d.cpp	390;"	d	file:
MAT	shared/math3d.cpp	499;"	d	file:
MAT	shared/math3d.cpp	508;"	d	file:
MAT	shared/math3d.cpp	617;"	d	file:
MAX_LENGTH	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h	/^    static const int	MAX_LENGTH = SIZE - 1;$/;"	m	class:Imf::Name
MAX_LENGTH	shared/openexr-mac/include/OpenEXR/ImfName.h	/^    static const int	MAX_LENGTH = SIZE - 1;$/;"	m	class:Imf::Name
MAX_SHADER_LENGTH	shared/gltools.h	66;"	d
MIPMAP_LEVELS	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^    MIPMAP_LEVELS = 1,$/;"	e	enum:Imf::LevelMode
MIPMAP_LEVELS	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^    MIPMAP_LEVELS = 1,$/;"	e	enum:Imf::LevelMode
MODE_LINE	chapt03/star/star.cpp	19;"	d	file:
MODE_POINT	chapt03/star/star.cpp	20;"	d	file:
MODE_SOLID	chapt03/star/star.cpp	18;"	d	file:
M_PI	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlatform.h	53;"	d
M_PI	shared/openexr-mac/include/OpenEXR/ImathPlatform.h	53;"	d
Makefile	Makefile	1;"	F
Makefile	c3.drawLine/Makefile	1;"	F
Makefile	c3.drawObject/Makefile	1;"	F
Makefile	c3.drawPoints/Makefile	1;"	F
Makefile	c3.drawPolygonBitmap/Makefile	1;"	F
Makefile	c3.drawStart/Makefile	1;"	F
Makefile	c3.drawTriangles/Makefile	1;"	F
Makefile	c3.scissor/Makefile	1;"	F
Makefile	c3.template/Makefile	1;"	F
Makefile	c4.translate/Makefile	1;"	F
Makefile	chapt02/bounce/Makefile	1;"	F
Makefile	chapt02/glrect/Makefile	1;"	F
Makefile	chapt03/lines/Makefile	1;"	F
Makefile	chapt03/lstipple/Makefile	1;"	F
Makefile	chapt03/lstrips/Makefile	1;"	F
Makefile	chapt03/points/Makefile	1;"	F
Makefile	chapt03/pointsz/Makefile	1;"	F
Makefile	chapt03/pstipple/Makefile	1;"	F
Makefile	chapt03/scissor/Makefile	1;"	F
Makefile	chapt03/single/Makefile	1;"	F
Makefile	chapt03/star/Makefile	1;"	F
Makefile	chapt03/stencil/Makefile	1;"	F
Makefile	chapt03/triangle/Makefile	1;"	F
Makefile	chapt04/Atom/Makefile	1;"	F
Makefile	chapt04/Atom2/Makefile	1;"	F
Makefile	chapt04/Ortho/Makefile	1;"	F
Makefile	chapt04/Perspect/Makefile	1;"	F
Makefile	chapt04/Solar/Makefile	1;"	F
Makefile	chapt04/SphereWorld/Makefile	1;"	F
Makefile	chapt04/Transform/Makefile	1;"	F
Makefile	chapt04/Transformgl/Makefile	1;"	F
Makefile	helloGL/Makefile	1;"	F
Makefile	template.dir/Makefile	1;"	F
Math	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^struct Math$/;"	s	namespace:Imath
Math	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^struct Math<float>$/;"	s	namespace:Imath
Math	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^struct Math$/;"	s	namespace:Imath
Math	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^struct Math<float>$/;"	s	namespace:Imath
Matrix33	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::Matrix33 ()$/;"	f	class:Imath::Matrix33
Matrix33	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::Matrix33 (T a)$/;"	f	class:Imath::Matrix33
Matrix33	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::Matrix33 (T a, T b, T c, T d, T e, T f, T g, T h, T i)$/;"	f	class:Imath::Matrix33
Matrix33	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::Matrix33 (const Matrix33 &v)$/;"	f	class:Imath::Matrix33
Matrix33	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::Matrix33 (const T a[3][3]) $/;"	f	class:Imath::Matrix33
Matrix33	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^template <class T> class Matrix33$/;"	c	namespace:Imath
Matrix33	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::Matrix33 ()$/;"	f	class:Imath::Matrix33
Matrix33	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::Matrix33 (T a)$/;"	f	class:Imath::Matrix33
Matrix33	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::Matrix33 (T a, T b, T c, T d, T e, T f, T g, T h, T i)$/;"	f	class:Imath::Matrix33
Matrix33	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::Matrix33 (const Matrix33 &v)$/;"	f	class:Imath::Matrix33
Matrix33	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::Matrix33 (const T a[3][3]) $/;"	f	class:Imath::Matrix33
Matrix33	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^template <class T> class Matrix33$/;"	c	namespace:Imath
Matrix44	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::Matrix44 ()$/;"	f	class:Imath::Matrix44
Matrix44	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::Matrix44 (Matrix33<T> r, Vec3<T> t)$/;"	f	class:Imath::Matrix44
Matrix44	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::Matrix44 (T a)$/;"	f	class:Imath::Matrix44
Matrix44	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::Matrix44 (T a, T b, T c, T d, T e, T f, T g, T h,$/;"	f	class:Imath::Matrix44
Matrix44	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::Matrix44 (const Matrix44 &v)$/;"	f	class:Imath::Matrix44
Matrix44	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::Matrix44 (const T a[4][4]) $/;"	f	class:Imath::Matrix44
Matrix44	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^template <class T> class Matrix44$/;"	c	namespace:Imath
Matrix44	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::Matrix44 ()$/;"	f	class:Imath::Matrix44
Matrix44	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::Matrix44 (Matrix33<T> r, Vec3<T> t)$/;"	f	class:Imath::Matrix44
Matrix44	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::Matrix44 (T a)$/;"	f	class:Imath::Matrix44
Matrix44	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::Matrix44 (T a, T b, T c, T d, T e, T f, T g, T h,$/;"	f	class:Imath::Matrix44
Matrix44	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::Matrix44 (const Matrix44 &v)$/;"	f	class:Imath::Matrix44
Matrix44	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::Matrix44 (const T a[4][4]) $/;"	f	class:Imath::Matrix44
Matrix44	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^template <class T> class Matrix44$/;"	c	namespace:Imath
Max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	Max	= 0x2111,$/;"	e	enum:Imath::Euler::Order
Max	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	Max	= 0x2111,$/;"	e	enum:Imath::Euler::Order
Min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	Min	= 0x0000,$/;"	e	enum:Imath::Euler::Order
Min	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	Min	= 0x0000,$/;"	e	enum:Imath::Euler::Order
MoveForward	shared/glFrame.h	/^		inline void MoveForward(float fDelta)$/;"	f	class:GLFrame
MoveRight	shared/glFrame.h	/^		inline void MoveRight(float fDelta)$/;"	f	class:GLFrame
MoveUp	shared/glFrame.h	/^		inline void MoveUp(float fDelta)$/;"	f	class:GLFrame
Mutex	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h	/^class Mutex$/;"	c	namespace:IlmThread
Mutex	shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h	/^class Mutex$/;"	c	namespace:IlmThread
N	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaYca.h	/^static const int N = 27;$/;"	m	namespace:Imf::RgbaYca
N	shared/openexr-mac/include/OpenEXR/ImfRgbaYca.h	/^static const int N = 27;$/;"	m	namespace:Imf::RgbaYca
N2	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaYca.h	/^static const int N2 = N \/ 2;$/;"	m	namespace:Imf::RgbaYca
N2	shared/openexr-mac/include/OpenEXR/ImfRgbaYca.h	/^static const int N2 = N \/ 2;$/;"	m	namespace:Imf::RgbaYca
NOMINMAX	include/GL/freeglut_std.h	60;"	d
NOMINMAX	shared/freeglut_std.h	58;"	d
NOMINMAX	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThread.h	97;"	d
NOMINMAX	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThread.h	99;"	d
NOMINMAX	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h	73;"	d
NOMINMAX	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h	75;"	d
NOMINMAX	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadSemaphore.h	49;"	d
NOMINMAX	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadSemaphore.h	51;"	d
NOMINMAX	shared/openexr-mac/include/OpenEXR/IlmThread.h	97;"	d
NOMINMAX	shared/openexr-mac/include/OpenEXR/IlmThread.h	99;"	d
NOMINMAX	shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h	73;"	d
NOMINMAX	shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h	75;"	d
NOMINMAX	shared/openexr-mac/include/OpenEXR/IlmThreadSemaphore.h	49;"	d
NOMINMAX	shared/openexr-mac/include/OpenEXR/IlmThreadSemaphore.h	51;"	d
NORMAL_DATA	shared/VBOMesh.h	27;"	d
NO_COMPRESSION	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompression.h	/^    NO_COMPRESSION  = 0,	\/\/ no compression$/;"	e	enum:Imf::Compression
NO_COMPRESSION	shared/openexr-mac/include/OpenEXR/ImfCompression.h	/^    NO_COMPRESSION  = 0,	\/\/ no compression$/;"	e	enum:Imf::Compression
NUM_COMPRESSION_METHODS	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompression.h	/^    NUM_COMPRESSION_METHODS	\/\/ number of different compression methods$/;"	e	enum:Imf::Compression
NUM_COMPRESSION_METHODS	shared/openexr-mac/include/OpenEXR/ImfCompression.h	/^    NUM_COMPRESSION_METHODS	\/\/ number of different compression methods$/;"	e	enum:Imf::Compression
NUM_ENVMAPTYPES	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h	/^    NUM_ENVMAPTYPES		\/\/ Number of different environment map types$/;"	e	enum:Imf::Envmap
NUM_ENVMAPTYPES	shared/openexr-mac/include/OpenEXR/ImfEnvmap.h	/^    NUM_ENVMAPTYPES		\/\/ Number of different environment map types$/;"	e	enum:Imf::Envmap
NUM_LEVELMODES	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^    NUM_LEVELMODES	\/\/ number of different level modes$/;"	e	enum:Imf::LevelMode
NUM_LEVELMODES	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^    NUM_LEVELMODES	\/\/ number of different level modes$/;"	e	enum:Imf::LevelMode
NUM_LINEORDERS	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLineOrder.h	/^    NUM_LINEORDERS	\/\/ number of different line orders$/;"	e	enum:Imf::LineOrder
NUM_LINEORDERS	shared/openexr-mac/include/OpenEXR/ImfLineOrder.h	/^    NUM_LINEORDERS	\/\/ number of different line orders$/;"	e	enum:Imf::LineOrder
NUM_PIXELTYPES	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPixelType.h	/^    NUM_PIXELTYPES	\/\/ number of different pixel types$/;"	e	enum:Imf::PixelType
NUM_PIXELTYPES	shared/openexr-mac/include/OpenEXR/ImfPixelType.h	/^    NUM_PIXELTYPES	\/\/ number of different pixel types$/;"	e	enum:Imf::PixelType
NUM_ROUNDINGMODES	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^    NUM_ROUNDINGMODES	\/\/ number of different rounding modes$/;"	e	enum:Imf::LevelRoundingMode
NUM_ROUNDINGMODES	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^    NUM_ROUNDINGMODES	\/\/ number of different rounding modes$/;"	e	enum:Imf::LevelRoundingMode
NUM_SPHERES	chapt04/SphereWorld/sphereworld.cpp	12;"	d	file:
Name	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h	/^Name::Name ()$/;"	f	class:Imf::Name
Name	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h	/^Name::Name (const char text[])$/;"	f	class:Imf::Name
Name	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h	/^class Name$/;"	c	namespace:Imf
Name	shared/openexr-mac/include/OpenEXR/ImfName.h	/^Name::Name ()$/;"	f	class:Imf::Name
Name	shared/openexr-mac/include/OpenEXR/ImfName.h	/^Name::Name (const char text[])$/;"	f	class:Imf::Name
Name	shared/openexr-mac/include/OpenEXR/ImfName.h	/^class Name$/;"	c	namespace:Imf
Normalize	shared/glFrame.h	/^		void Normalize(void)$/;"	f	class:GLFrame
ONE_LEVEL	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^    ONE_LEVEL = 0,$/;"	e	enum:Imf::LevelMode
ONE_LEVEL	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^    ONE_LEVEL = 0,$/;"	e	enum:Imf::LevelMode
OPENSTEP	include/GL/gl.h	47;"	d
OStream	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIO.h	/^class OStream$/;"	c	namespace:Imf
OStream	shared/openexr-mac/include/OpenEXR/ImfIO.h	/^class OStream$/;"	c	namespace:Imf
OpaqueAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfOpaqueAttribute.h	/^class OpaqueAttribute: public Attribute$/;"	c	namespace:Imf
OpaqueAttribute	shared/openexr-mac/include/OpenEXR/ImfOpaqueAttribute.h	/^class OpaqueAttribute: public Attribute$/;"	c	namespace:Imf
OpenEXRConfig.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/OpenEXRConfig.h	1;"	F
OpenEXRConfig.h	shared/openexr-mac/include/OpenEXR/OpenEXRConfig.h	1;"	F
Order	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^    enum Order$/;"	g	class:Imath::Euler
Order	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^    enum Order$/;"	g	class:Imath::Euler
OutputFile	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfOutputFile.h	/^class OutputFile$/;"	c	namespace:Imf
OutputFile	shared/openexr-mac/include/OpenEXR/ImfOutputFile.h	/^class OutputFile$/;"	c	namespace:Imf
P	shared/math3d.cpp	121;"	d	file:
P	shared/math3d.cpp	93;"	d	file:
P33	shared/math3d.cpp	126;"	d	file:
P33	shared/math3d.cpp	153;"	d	file:
PFNGLACTIVEPROGRAMEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);$/;"	t
PFNGLACTIVESTENCILFACEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	t
PFNGLACTIVESTENCILFACEEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	t
PFNGLACTIVETEXTUREARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLACTIVETEXTUREARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLACTIVETEXTUREARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLACTIVETEXTUREPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLACTIVETEXTUREPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLACTIVETEXTUREPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLACTIVEVARYINGNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLACTIVEVARYINGNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar * name);$/;"	t
PFNGLALPHAFRAGMENTOP1ATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLALPHAFRAGMENTOP1ATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLALPHAFRAGMENTOP2ATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLALPHAFRAGMENTOP2ATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLALPHAFRAGMENTOP3ATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLALPHAFRAGMENTOP3ATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLAPPLYTEXTUREEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	t
PFNGLAPPLYTEXTUREEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	t
PFNGLAREPROGRAMSRESIDENTNVPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs, GLboolean *residences);$/;"	t
PFNGLAREPROGRAMSRESIDENTNVPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint * programs, GLboolean * residences);$/;"	t
PFNGLARETEXTURESRESIDENTEXTPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures, GLboolean *residences);$/;"	t
PFNGLARETEXTURESRESIDENTEXTPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint * textures, GLboolean * residences);$/;"	t
PFNGLARRAYELEMENTEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t
PFNGLARRAYELEMENTEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t
PFNGLARRAYOBJECTATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLARRAYOBJECTATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLASYNCMARKERSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLASYNCMARKERSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLATTACHOBJECTARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);$/;"	t
PFNGLATTACHOBJECTARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);$/;"	t
PFNGLATTACHSHADERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLATTACHSHADERPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLBEGINCONDITIONALRENDERNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);$/;"	t
PFNGLBEGINCONDITIONALRENDERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t
PFNGLBEGINFRAGMENTSHADERATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);$/;"	t
PFNGLBEGINFRAGMENTSHADERATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) ();$/;"	t
PFNGLBEGINOCCLUSIONQUERYNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLBEGINOCCLUSIONQUERYNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLBEGINPERFMONITORAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLBEGINQUERYARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINQUERYARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINQUERYPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINQUERYPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINSCENEEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLBEGINSCENEEXTPROC) ();$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t
PFNGLBEGINVERTEXSHADEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);$/;"	t
PFNGLBEGINVERTEXSHADEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) ();$/;"	t
PFNGLBEGINVIDEOCAPTURENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t
PFNGLBINDATTRIBLOCATIONARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, const GLcharARB *name);$/;"	t
PFNGLBINDATTRIBLOCATIONARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, const GLcharARB * name);$/;"	t
PFNGLBINDATTRIBLOCATIONPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDATTRIBLOCATIONPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar * name);$/;"	t
PFNGLBINDBUFFERARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERBASEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFERBASENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFERBASENVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFERBASEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFEROFFSETEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);$/;"	t
PFNGLBINDBUFFEROFFSETNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);$/;"	t
PFNGLBINDBUFFEROFFSETNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);$/;"	t
PFNGLBINDBUFFERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERRANGEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDBUFFERRANGENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDBUFFERRANGENVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDBUFFERRANGEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDFRAGDATALOCATIONEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const GLchar *name);$/;"	t
PFNGLBINDFRAGDATALOCATIONEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const GLchar * name);$/;"	t
PFNGLBINDFRAGDATALOCATIONPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchar *name);$/;"	t
PFNGLBINDFRAGMENTSHADERATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLBINDFRAGMENTSHADERATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLBINDFRAMEBUFFEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDFRAMEBUFFEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDFRAMEBUFFERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDLIGHTPARAMETEREXTPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	t
PFNGLBINDLIGHTPARAMETEREXTPROC	shared/GLee.h	/^typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	t
PFNGLBINDMATERIALPARAMETEREXTPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	t
PFNGLBINDMATERIALPARAMETEREXTPROC	shared/GLee.h	/^typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	t
PFNGLBINDMULTITEXTUREEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint texture);$/;"	t
PFNGLBINDPARAMETEREXTPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	t
PFNGLBINDPARAMETEREXTPROC	shared/GLee.h	/^typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	t
PFNGLBINDPROGRAMARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t
PFNGLBINDPROGRAMARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t
PFNGLBINDPROGRAMNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDPROGRAMNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDRENDERBUFFEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDRENDERBUFFEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDRENDERBUFFERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDTEXGENPARAMETEREXTPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);$/;"	t
PFNGLBINDTEXGENPARAMETEREXTPROC	shared/GLee.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);$/;"	t
PFNGLBINDTEXTUREEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	t
PFNGLBINDTEXTUREEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	t
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	t
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	shared/GLee.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	t
PFNGLBINDTRANSFORMFEEDBACKNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDVERTEXARRAYAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXARRAYAPPLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXARRAYPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXSHADEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLBINDVERTEXSHADEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);$/;"	t
PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);$/;"	t
PFNGLBINORMAL3BEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);$/;"	t
PFNGLBINORMAL3BEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);$/;"	t
PFNGLBINORMAL3BVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLBINORMAL3BVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte * v);$/;"	t
PFNGLBINORMAL3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);$/;"	t
PFNGLBINORMAL3DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);$/;"	t
PFNGLBINORMAL3DVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLBINORMAL3DVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble * v);$/;"	t
PFNGLBINORMAL3FEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);$/;"	t
PFNGLBINORMAL3FEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);$/;"	t
PFNGLBINORMAL3FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLBINORMAL3FVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat * v);$/;"	t
PFNGLBINORMAL3IEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);$/;"	t
PFNGLBINORMAL3IEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);$/;"	t
PFNGLBINORMAL3IVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLBINORMAL3IVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint * v);$/;"	t
PFNGLBINORMAL3SEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);$/;"	t
PFNGLBINORMAL3SEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);$/;"	t
PFNGLBINORMAL3SVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLBINORMAL3SVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort * v);$/;"	t
PFNGLBINORMALPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLBINORMALPOINTEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid * pointer);$/;"	t
PFNGLBLENDCOLOREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	t
PFNGLBLENDCOLOREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	t
PFNGLBLENDCOLORPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	t
PFNGLBLENDCOLORPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	t
PFNGLBLENDCOLORPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	t
PFNGLBLENDEQUATIONEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONINDEXEDAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONSEPARATEATIPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEATIPROC) (GLenum modeRGB, GLenum modeA);$/;"	t
PFNGLBLENDEQUATIONSEPARATEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDFUNCINDEXEDAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCSEPARATEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEINGRPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEINGRPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLITFRAMEBUFFEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBLITFRAMEBUFFEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBLITFRAMEBUFFERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBUFFERADDRESSRANGENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);$/;"	t
PFNGLBUFFERDATAARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLBUFFERDATAARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const GLvoid * data, GLenum usage);$/;"	t
PFNGLBUFFERDATAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLBUFFERDATAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid * data, GLenum usage);$/;"	t
PFNGLBUFFERPARAMETERIAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLBUFFERSUBDATAARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);$/;"	t
PFNGLBUFFERSUBDATAARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid * data);$/;"	t
PFNGLBUFFERSUBDATAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	t
PFNGLBUFFERSUBDATAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid * data);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	include/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	shared/GLee.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSPROC	include/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC	include/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum target);$/;"	t
PFNGLCLAMPCOLORARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLAMPCOLORARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLAMPCOLORPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLEARBUFFERFIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	t
PFNGLCLEARBUFFERFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	t
PFNGLCLEARBUFFERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	t
PFNGLCLEARBUFFERUIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	t
PFNGLCLEARCOLORIIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);$/;"	t
PFNGLCLEARCOLORIIEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);$/;"	t
PFNGLCLEARCOLORIUIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);$/;"	t
PFNGLCLEARCOLORIUIEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);$/;"	t
PFNGLCLEARDEPTHDNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);$/;"	t
PFNGLCLEARDEPTHDNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);$/;"	t
PFNGLCLEARDEPTHFOESPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLCLEARDEPTHFOESPROC) (GLclampd depth);$/;"	t
PFNGLCLIENTACTIVETEXTUREARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVETEXTUREARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVETEXTUREARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVETEXTUREPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVETEXTUREPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	t
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	t
PFNGLCLIENTATTRIBDEFAULTEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t
PFNGLCLIENTWAITSYNCPROC	include/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLCLIPPLANEFOESPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLCLIPPLANEFOESPROC) (GLenum plane, const GLfloat* equation);$/;"	t
PFNGLCOLOR3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR3FVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLCOLOR3FVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat * c, const GLfloat * v);$/;"	t
PFNGLCOLOR3HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLCOLOR3HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLCOLOR3HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLCOLOR3HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV * v);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat * c, const GLfloat * n, const GLfloat * v);$/;"	t
PFNGLCOLOR4HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);$/;"	t
PFNGLCOLOR4HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);$/;"	t
PFNGLCOLOR4HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLCOLOR4HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV * v);$/;"	t
PFNGLCOLOR4UBVERTEX2FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);$/;"	t
PFNGLCOLOR4UBVERTEX2FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);$/;"	t
PFNGLCOLOR4UBVERTEX2FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLCOLOR4UBVERTEX2FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte * c, const GLfloat * v);$/;"	t
PFNGLCOLOR4UBVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4UBVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4UBVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLCOLOR4UBVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte * c, const GLfloat * v);$/;"	t
PFNGLCOLORFORMATNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLCOLORFRAGMENTOP1ATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLCOLORFRAGMENTOP1ATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLCOLORFRAGMENTOP2ATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLCOLORFRAGMENTOP2ATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLCOLORFRAGMENTOP3ATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLCOLORFRAGMENTOP3ATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLCOLORMASKINDEXEDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
PFNGLCOLORMASKINDEXEDEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
PFNGLCOLORMASKIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
PFNGLCOLORPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLCOLORPOINTEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer);$/;"	t
PFNGLCOLORPOINTERLISTIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLCOLORPOINTERLISTIBMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* * pointer, GLint ptrstride);$/;"	t
PFNGLCOLORPOINTERVINTELPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLCOLORPOINTERVINTELPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* * pointer);$/;"	t
PFNGLCOLORSUBTABLEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	t
PFNGLCOLORSUBTABLEEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid * data);$/;"	t
PFNGLCOLORSUBTABLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	t
PFNGLCOLORSUBTABLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid * data);$/;"	t
PFNGLCOLORTABLEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOLORTABLEEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid * table);$/;"	t
PFNGLCOLORTABLEPARAMETERFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERFVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat * params);$/;"	t
PFNGLCOLORTABLEPARAMETERFVSGIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERFVSGIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const GLfloat * params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint * params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVSGIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVSGIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const GLint * params);$/;"	t
PFNGLCOLORTABLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOLORTABLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * table);$/;"	t
PFNGLCOLORTABLESGIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOLORTABLESGIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * table);$/;"	t
PFNGLCOMBINERINPUTNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLCOMBINERINPUTNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLCOMBINEROUTPUTNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);$/;"	t
PFNGLCOMBINEROUTPUTNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);$/;"	t
PFNGLCOMBINERPARAMETERFNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLCOMBINERPARAMETERFNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLCOMBINERPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOMBINERPARAMETERFVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat * params);$/;"	t
PFNGLCOMBINERPARAMETERINVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLCOMBINERPARAMETERINVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLCOMBINERPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLCOMBINERPARAMETERIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint * params);$/;"	t
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const GLfloat * params);$/;"	t
PFNGLCOMPILESHADERARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t
PFNGLCOMPILESHADERARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t
PFNGLCOMPILESHADERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t
PFNGLCOMPILESHADERPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid * data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid * data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid * data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid * data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid * data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid * data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid * data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid * data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid * data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid * data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid * data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid * data);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCONVOLUTIONFILTER1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER1DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * image);$/;"	t
PFNGLCONVOLUTIONFILTER1DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER1DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * image);$/;"	t
PFNGLCONVOLUTIONFILTER2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * image);$/;"	t
PFNGLCONVOLUTIONFILTER2DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * image);$/;"	t
PFNGLCONVOLUTIONPARAMETERFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat * params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat * params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint * params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint * params);$/;"	t
PFNGLCOPYBUFFERSUBDATAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLCOPYCOLORSUBTABLEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORSUBTABLEEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORSUBTABLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORSUBTABLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLESGIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLESGIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYIMAGESUBDATANVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATANVPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLCOPYMULTITEXIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYMULTITEXIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE1DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE2DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTUREIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXTUREIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCREATEPROGRAMOBJECTARBPROC	include/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	t
PFNGLCREATEPROGRAMOBJECTARBPROC	shared/GLee.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) ();$/;"	t
PFNGLCREATEPROGRAMPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t
PFNGLCREATEPROGRAMPROC	shared/GLee.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) ();$/;"	t
PFNGLCREATESHADEROBJECTARBPROC	include/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t
PFNGLCREATESHADEROBJECTARBPROC	shared/GLee.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t
PFNGLCREATESHADERPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t
PFNGLCREATESHADERPROC	shared/GLee.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t
PFNGLCREATESHADERPROGRAMEXTPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);$/;"	t
PFNGLCULLPARAMETERDVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);$/;"	t
PFNGLCULLPARAMETERDVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble * params);$/;"	t
PFNGLCULLPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLCULLPARAMETERFVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat * params);$/;"	t
PFNGLCURRENTPALETTEMATRIXARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t
PFNGLCURRENTPALETTEMATRIXARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t
PFNGLDEFORMATIONMAP3DSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);$/;"	t
PFNGLDEFORMATIONMAP3DSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble * points);$/;"	t
PFNGLDEFORMATIONMAP3FSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);$/;"	t
PFNGLDEFORMATIONMAP3FSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat * points);$/;"	t
PFNGLDEFORMSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLDEFORMSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLDELETEASYNCMARKERSSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	t
PFNGLDELETEASYNCMARKERSSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	t
PFNGLDELETEBUFFERSARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEBUFFERSARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint * buffers);$/;"	t
PFNGLDELETEBUFFERSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEBUFFERSPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint * buffers);$/;"	t
PFNGLDELETEFENCESAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFENCESAPPLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint * fences);$/;"	t
PFNGLDELETEFENCESNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFENCESNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint * fences);$/;"	t
PFNGLDELETEFRAGMENTSHADERATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLDELETEFRAGMENTSHADERATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLDELETEFRAMEBUFFERSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETEFRAMEBUFFERSEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint * framebuffers);$/;"	t
PFNGLDELETEFRAMEBUFFERSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETEOBJECTARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t
PFNGLDELETEOBJECTARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t
PFNGLDELETEOCCLUSIONQUERIESNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEOCCLUSIONQUERIESNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint * ids);$/;"	t
PFNGLDELETEPERFMONITORSAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLDELETEPROGRAMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLDELETEPROGRAMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLDELETEPROGRAMSARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLDELETEPROGRAMSARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint * programs);$/;"	t
PFNGLDELETEPROGRAMSNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLDELETEPROGRAMSNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint * programs);$/;"	t
PFNGLDELETEQUERIESARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEQUERIESARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint * ids);$/;"	t
PFNGLDELETEQUERIESPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEQUERIESPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint * ids);$/;"	t
PFNGLDELETERENDERBUFFERSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETERENDERBUFFERSEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint * renderbuffers);$/;"	t
PFNGLDELETERENDERBUFFERSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETESHADERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t
PFNGLDELETESHADERPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t
PFNGLDELETESYNCPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t
PFNGLDELETETEXTURESEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);$/;"	t
PFNGLDELETETEXTURESEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint * textures);$/;"	t
PFNGLDELETETRANSFORMFEEDBACKSNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEVERTEXARRAYSAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDELETEVERTEXARRAYSAPPLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint * arrays);$/;"	t
PFNGLDELETEVERTEXARRAYSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDELETEVERTEXSHADEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLDELETEVERTEXSHADEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLDEPTHBOUNDSDNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);$/;"	t
PFNGLDEPTHBOUNDSDNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);$/;"	t
PFNGLDEPTHBOUNDSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	t
PFNGLDEPTHBOUNDSEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	t
PFNGLDEPTHRANGEDNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLDEPTHRANGEDNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLDEPTHRANGEFOESPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLDEPTHRANGEFOESPROC) (GLclampf n, GLclampf f);$/;"	t
PFNGLDETACHOBJECTARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	t
PFNGLDETACHOBJECTARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	t
PFNGLDETACHSHADERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLDETACHSHADERPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLDETAILTEXFUNCSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);$/;"	t
PFNGLDETAILTEXFUNCSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat * points);$/;"	t
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLDISABLEINDEXEDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEINDEXEDEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLDISABLEVERTEXATTRIBAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLDRAWARRAYSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWARRAYSEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWARRAYSINSTANCEDARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWBUFFERSARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum * bufs);$/;"	t
PFNGLDRAWBUFFERSATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum * bufs);$/;"	t
PFNGLDRAWBUFFERSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum * bufs);$/;"	t
PFNGLDRAWELEMENTARRAYAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWELEMENTARRAYAPPLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWELEMENTARRAYATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	t
PFNGLDRAWELEMENTARRAYATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	t
PFNGLDRAWELEMENTSBASEVERTEXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid * indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);$/;"	t
PFNGLDRAWMESHARRAYSSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GLsizei width);$/;"	t
PFNGLDRAWMESHARRAYSSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GLsizei width);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);$/;"	t
PFNGLDRAWRANGEELEMENTSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLDRAWRANGEELEMENTSEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid * indices);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid * indices);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);$/;"	t
PFNGLEDGEFLAGFORMATNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);$/;"	t
PFNGLEDGEFLAGPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);$/;"	t
PFNGLEDGEFLAGPOINTEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean * pointer);$/;"	t
PFNGLEDGEFLAGPOINTERLISTIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);$/;"	t
PFNGLEDGEFLAGPOINTERLISTIBMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* * pointer, GLint ptrstride);$/;"	t
PFNGLELEMENTPOINTERAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);$/;"	t
PFNGLELEMENTPOINTERAPPLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid * pointer);$/;"	t
PFNGLELEMENTPOINTERATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const GLvoid *pointer);$/;"	t
PFNGLELEMENTPOINTERATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const GLvoid * pointer);$/;"	t
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLENABLEINDEXEDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEINDEXEDEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLENABLEVERTEXATTRIBAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLENDCONDITIONALRENDERNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);$/;"	t
PFNGLENDCONDITIONALRENDERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t
PFNGLENDFRAGMENTSHADERATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);$/;"	t
PFNGLENDFRAGMENTSHADERATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) ();$/;"	t
PFNGLENDOCCLUSIONQUERYNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);$/;"	t
PFNGLENDOCCLUSIONQUERYNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) ();$/;"	t
PFNGLENDPERFMONITORAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLENDQUERYARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);$/;"	t
PFNGLENDQUERYARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);$/;"	t
PFNGLENDQUERYPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t
PFNGLENDQUERYPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t
PFNGLENDSCENEEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLENDSCENEEXTPROC) ();$/;"	t
PFNGLENDTRANSFORMFEEDBACKEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKEXTPROC) (void);$/;"	t
PFNGLENDTRANSFORMFEEDBACKNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKNVPROC) (void);$/;"	t
PFNGLENDTRANSFORMFEEDBACKNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKNVPROC) ();$/;"	t
PFNGLENDTRANSFORMFEEDBACKPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLENDVERTEXSHADEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);$/;"	t
PFNGLENDVERTEXSHADEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) ();$/;"	t
PFNGLENDVIDEOCAPTURENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t
PFNGLEVALMAPSNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	t
PFNGLEVALMAPSNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	t
PFNGLEXECUTEPROGRAMNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *params);$/;"	t
PFNGLEXECUTEPROGRAMNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat * params);$/;"	t
PFNGLEXTRACTCOMPONENTEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLEXTRACTCOMPONENTEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLFENCESYNCPROC	include/GL/glext.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t
PFNGLFINALCOMBINERINPUTNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLFINALCOMBINERINPUTNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLFINISHASYNCSGIXPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);$/;"	t
PFNGLFINISHASYNCSGIXPROC	shared/GLee.h	/^typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint * markerp);$/;"	t
PFNGLFINISHFENCEAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLFINISHFENCEAPPLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLFINISHFENCENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t
PFNGLFINISHFENCENVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t
PFNGLFINISHOBJECTAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	t
PFNGLFINISHOBJECTAPPLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	t
PFNGLFINISHTEXTURESUNXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);$/;"	t
PFNGLFINISHTEXTURESUNXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) ();$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum target, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHPIXELDATARANGENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	t
PFNGLFLUSHPIXELDATARANGENVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	t
PFNGLFLUSHRASTERSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);$/;"	t
PFNGLFLUSHRASTERSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) ();$/;"	t
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid * pointer);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGENVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) ();$/;"	t
PFNGLFOGCOORDDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);$/;"	t
PFNGLFOGCOORDDVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble * coord);$/;"	t
PFNGLFOGCOORDDVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	t
PFNGLFOGCOORDDVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble * coord);$/;"	t
PFNGLFOGCOORDFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFORMATNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLFOGCOORDFPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);$/;"	t
PFNGLFOGCOORDFVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat * coord);$/;"	t
PFNGLFOGCOORDFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	t
PFNGLFOGCOORDFVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat * coord);$/;"	t
PFNGLFOGCOORDHNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);$/;"	t
PFNGLFOGCOORDHNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);$/;"	t
PFNGLFOGCOORDHVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);$/;"	t
PFNGLFOGCOORDHVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV * fog);$/;"	t
PFNGLFOGCOORDPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLFOGCOORDPOINTEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid * pointer);$/;"	t
PFNGLFOGCOORDPOINTERLISTIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLFOGCOORDPOINTERLISTIBMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* * pointer, GLint ptrstride);$/;"	t
PFNGLFOGCOORDPOINTERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLFOGCOORDPOINTERPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid * pointer);$/;"	t
PFNGLFOGFUNCSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);$/;"	t
PFNGLFOGFUNCSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat * points);$/;"	t
PFNGLFRAGMENTCOLORMATERIALEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLFRAGMENTCOLORMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLFRAGMENTLIGHTFEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLFRAGMENTLIGHTFEXTPROC) (GLenum light, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTFSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTFSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTFVEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLFRAGMENTLIGHTFVEXTPROC) (GLenum light, GLenum pname, GLfloat * params);$/;"	t
PFNGLFRAGMENTLIGHTFVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTLIGHTFVSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat * params);$/;"	t
PFNGLFRAGMENTLIGHTIEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLFRAGMENTLIGHTIEXTPROC) (GLenum light, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTISGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTISGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTIVEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLFRAGMENTLIGHTIVEXTPROC) (GLenum light, GLenum pname, GLint * params);$/;"	t
PFNGLFRAGMENTLIGHTIVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTLIGHTIVSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint * params);$/;"	t
PFNGLFRAGMENTLIGHTMODELFEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLFRAGMENTLIGHTMODELFEXTPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTMODELFVEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVEXTPROC) (GLenum pname, GLfloat * params);$/;"	t
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat * params);$/;"	t
PFNGLFRAGMENTLIGHTMODELIEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLFRAGMENTLIGHTMODELIEXTPROC) (GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTMODELISGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTMODELISGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTMODELIVEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVEXTPROC) (GLenum pname, GLint * params);$/;"	t
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint * params);$/;"	t
PFNGLFRAGMENTMATERIALFEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLFRAGMENTMATERIALFEXTPROC) (GLenum face, GLenum pname, const GLfloat param);$/;"	t
PFNGLFRAGMENTMATERIALFSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTMATERIALFSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTMATERIALFVEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLFRAGMENTMATERIALFVEXTPROC) (GLenum face, GLenum pname, const GLfloat * params);$/;"	t
PFNGLFRAGMENTMATERIALFVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTMATERIALFVSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat * params);$/;"	t
PFNGLFRAGMENTMATERIALIEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLFRAGMENTMATERIALIEXTPROC) (GLenum face, GLenum pname, const GLint param);$/;"	t
PFNGLFRAGMENTMATERIALISGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTMATERIALISGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTMATERIALIVEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLFRAGMENTMATERIALIVEXTPROC) (GLenum face, GLenum pname, const GLint * params);$/;"	t
PFNGLFRAGMENTMATERIALIVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTMATERIALIVSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint * params);$/;"	t
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	t
PFNGLFRAMEBUFFERREADBUFFEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTUREARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTUREEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTUREEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLFRAMEBUFFERTEXTUREFACEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTUREPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMETERMINATORGREMEDYPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMETERMINATORGREMEDYPROC) (void);$/;"	t
PFNGLFRAMEZOOMSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	t
PFNGLFRAMEZOOMSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	t
PFNGLFREEOBJECTBUFFERATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLFREEOBJECTBUFFERATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLFRUSTUMFOESPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLFRUSTUMFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);$/;"	t
PFNGLGENASYNCMARKERSSGIXPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	t
PFNGLGENASYNCMARKERSSGIXPROC	shared/GLee.h	/^typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	t
PFNGLGENBUFFERSARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENBUFFERSARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint * buffers);$/;"	t
PFNGLGENBUFFERSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENBUFFERSPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint * buffers);$/;"	t
PFNGLGENERATEMIPMAPEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);$/;"	t
PFNGLGENERATEMIPMAPEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);$/;"	t
PFNGLGENERATEMIPMAPPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t
PFNGLGENERATEMULTITEXMIPMAPEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);$/;"	t
PFNGLGENERATETEXTUREMIPMAPEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);$/;"	t
PFNGLGENFENCESAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFENCESAPPLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint * fences);$/;"	t
PFNGLGENFENCESNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFENCESNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint * fences);$/;"	t
PFNGLGENFRAGMENTSHADERSATIPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	t
PFNGLGENFRAGMENTSHADERSATIPROC	shared/GLee.h	/^typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	t
PFNGLGENFRAMEBUFFERSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENFRAMEBUFFERSEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint * framebuffers);$/;"	t
PFNGLGENFRAMEBUFFERSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENOCCLUSIONQUERIESNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENOCCLUSIONQUERIESNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint * ids);$/;"	t
PFNGLGENPERFMONITORSAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLGENPROGRAMSARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);$/;"	t
PFNGLGENPROGRAMSARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint * programs);$/;"	t
PFNGLGENPROGRAMSNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);$/;"	t
PFNGLGENPROGRAMSNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint * programs);$/;"	t
PFNGLGENQUERIESARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENQUERIESARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint * ids);$/;"	t
PFNGLGENQUERIESPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENQUERIESPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint * ids);$/;"	t
PFNGLGENRENDERBUFFERSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENRENDERBUFFERSEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint * renderbuffers);$/;"	t
PFNGLGENRENDERBUFFERSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENSYMBOLSEXTPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);$/;"	t
PFNGLGENSYMBOLSEXTPROC	shared/GLee.h	/^typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);$/;"	t
PFNGLGENTEXTURESEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);$/;"	t
PFNGLGENTEXTURESEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint * textures);$/;"	t
PFNGLGENTRANSFORMFEEDBACKSNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENVERTEXARRAYSAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLGENVERTEXARRAYSAPPLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint * arrays);$/;"	t
PFNGLGENVERTEXARRAYSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLGENVERTEXSHADERSEXTPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	t
PFNGLGENVERTEXSHADERSEXTPROC	shared/GLee.h	/^typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	t
PFNGLGETACTIVEATTRIBARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
PFNGLGETACTIVEATTRIBARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);$/;"	t
PFNGLGETACTIVEATTRIBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEATTRIBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);$/;"	t
PFNGLGETACTIVEUNIFORMARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
PFNGLGETACTIVEUNIFORMARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);$/;"	t
PFNGLGETACTIVEUNIFORMNAMEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);$/;"	t
PFNGLGETACTIVEUNIFORMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);$/;"	t
PFNGLGETACTIVEUNIFORMSIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEVARYINGNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEVARYINGNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);$/;"	t
PFNGLGETARRAYOBJECTFVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETARRAYOBJECTFVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETARRAYOBJECTIVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);$/;"	t
PFNGLGETARRAYOBJECTIVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint * params);$/;"	t
PFNGLGETATTACHEDOBJECTSARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);$/;"	t
PFNGLGETATTACHEDOBJECTSARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCount, GLsizei * count, GLhandleARB * obj);$/;"	t
PFNGLGETATTACHEDSHADERSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);$/;"	t
PFNGLGETATTACHEDSHADERSPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei * count, GLuint * obj);$/;"	t
PFNGLGETATTRIBLOCATIONARBPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
PFNGLGETATTRIBLOCATIONARBPROC	shared/GLee.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB * name);$/;"	t
PFNGLGETATTRIBLOCATIONPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETATTRIBLOCATIONPROC	shared/GLee.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar * name);$/;"	t
PFNGLGETBOOLEANINDEXEDVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBOOLEANINDEXEDVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean * data);$/;"	t
PFNGLGETBOOLEANI_VPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBUFFERPARAMETERI64VPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETBUFFERPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETBUFFERPARAMETERUI64VNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETBUFFERPOINTERVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETBUFFERPOINTERVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, GLvoid* * params);$/;"	t
PFNGLGETBUFFERPOINTERVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETBUFFERPOINTERVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* * params);$/;"	t
PFNGLGETBUFFERSUBDATAARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);$/;"	t
PFNGLGETBUFFERSUBDATAARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid * data);$/;"	t
PFNGLGETBUFFERSUBDATAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	t
PFNGLGETBUFFERSUBDATAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid * data);$/;"	t
PFNGLGETCLIPPLANEFOESPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLGETCLIPPLANEFOESPROC) (GLenum plane, GLfloat* equation);$/;"	t
PFNGLGETCOLORTABLEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *data);$/;"	t
PFNGLGETCOLORTABLEEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid * data);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETCOLORTABLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	t
PFNGLGETCOLORTABLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid * table);$/;"	t
PFNGLGETCOLORTABLESGIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	t
PFNGLGETCOLORTABLESGIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, GLvoid * table);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint * params);$/;"	t
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint lod, GLvoid *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid * img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid * img);$/;"	t
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint lod, GLvoid *img);$/;"	t
PFNGLGETCONVOLUTIONFILTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	t
PFNGLGETCONVOLUTIONFILTEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid * image);$/;"	t
PFNGLGETCONVOLUTIONFILTERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	t
PFNGLGETCONVOLUTIONFILTERPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid * image);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETDETAILTEXFUNCSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t
PFNGLGETDETAILTEXFUNCSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat * points);$/;"	t
PFNGLGETDOUBLEINDEXEDVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t
PFNGLGETFENCEIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t
PFNGLGETFENCEIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint * params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint *params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint * params);$/;"	t
PFNGLGETFLOATINDEXEDVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t
PFNGLGETFOGFUNCSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);$/;"	t
PFNGLGETFOGFUNCSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat * points);$/;"	t
PFNGLGETFRAGDATALOCATIONEXTPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGDATALOCATIONEXTPROC	shared/GLee.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar * name);$/;"	t
PFNGLGETFRAGDATALOCATIONPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGMENTLIGHTFVEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLGETFRAGMENTLIGHTFVEXTPROC) (GLenum light, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETFRAGMENTLIGHTIVEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLGETFRAGMENTLIGHTIVEXTPROC) (GLenum light, GLenum pname, GLint * params);$/;"	t
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint * params);$/;"	t
PFNGLGETFRAGMENTMATERIALFVEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLGETFRAGMENTMATERIALFVEXTPROC) (GLenum face, GLenum pname, const GLfloat * params);$/;"	t
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETFRAGMENTMATERIALIVEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLGETFRAGMENTMATERIALIVEXTPROC) (GLenum face, GLenum pname, const GLint * params);$/;"	t
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint * params);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint * params);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETHANDLEARBPROC	include/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	t
PFNGLGETHANDLEARBPROC	shared/GLee.h	/^typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	t
PFNGLGETHISTOGRAMEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETHISTOGRAMEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETHISTOGRAMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETHISTOGRAMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETINFOLOGARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);$/;"	t
PFNGLGETINFOLOGARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog);$/;"	t
PFNGLGETINSTRUMENTSSGIXPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);$/;"	t
PFNGLGETINSTRUMENTSSGIXPROC	shared/GLee.h	/^typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) ();$/;"	t
PFNGLGETINTEGER64I_VPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t
PFNGLGETINTEGER64VPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *params);$/;"	t
PFNGLGETINTEGERINDEXEDVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERINDEXEDVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint * data);$/;"	t
PFNGLGETINTEGERI_VPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERUI64I_VNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);$/;"	t
PFNGLGETINTEGERUI64VNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);$/;"	t
PFNGLGETINVARIANTBOOLEANVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETINVARIANTBOOLEANVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean * data);$/;"	t
PFNGLGETINVARIANTFLOATVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETINVARIANTFLOATVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat * data);$/;"	t
PFNGLGETINVARIANTINTEGERVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETINVARIANTINTEGERVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint * data);$/;"	t
PFNGLGETLISTPARAMETERFVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETLISTPARAMETERFVSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETLISTPARAMETERIVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *params);$/;"	t
PFNGLGETLISTPARAMETERIVSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint * params);$/;"	t
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean * data);$/;"	t
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat * data);$/;"	t
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint * data);$/;"	t
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint * params);$/;"	t
PFNGLGETMAPCONTROLPOINTSNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points);$/;"	t
PFNGLGETMAPCONTROLPOINTSNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid * points);$/;"	t
PFNGLGETMAPPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMAPPARAMETERFVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETMAPPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMAPPARAMETERIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETMINMAXEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETMINMAXEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values);$/;"	t
PFNGLGETMINMAXPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERFVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETMINMAXPARAMETERFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERFVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETMINMAXPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETMINMAXPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETMINMAXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETMINMAXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values);$/;"	t
PFNGLGETMULTISAMPLEFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVNVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t
PFNGLGETMULTISAMPLEFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t
PFNGLGETMULTITEXENVFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXENVIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXGENDVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETMULTITEXGENFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXGENIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXIMAGEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);$/;"	t
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint *params);$/;"	t
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum pname, GLvoid *string);$/;"	t
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTBUFFERFVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETOBJECTBUFFERFVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETOBJECTBUFFERIVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTBUFFERIVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint * params);$/;"	t
PFNGLGETOBJECTPARAMETERFVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETOBJECTPARAMETERFVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETOBJECTPARAMETERIVAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum objectType, GLuint name, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTPARAMETERIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTPARAMETERIVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint * params);$/;"	t
PFNGLGETOCCLUSIONQUERYIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETOCCLUSIONQUERYIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint * params);$/;"	t
PFNGLGETOCCLUSIONQUERYUIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETOCCLUSIONQUERYUIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint * params);$/;"	t
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);$/;"	t
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, void *data);$/;"	t
PFNGLGETPERFMONITORCOUNTERSAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);$/;"	t
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);$/;"	t
PFNGLGETPERFMONITORGROUPSAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);$/;"	t
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat * params);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint * params);$/;"	t
PFNGLGETPOINTERINDEXEDVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLvoid* *data);$/;"	t
PFNGLGETPOINTERVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETPOINTERVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, GLvoid* * params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble * params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat * params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERIIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERIIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint * params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint * params);$/;"	t
PFNGLGETPROGRAMINFOLOGPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMINFOLOGPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);$/;"	t
PFNGLGETPROGRAMIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETPROGRAMIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint * params);$/;"	t
PFNGLGETPROGRAMIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint * params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble * params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat * params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint * params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint * params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GLubyte * name, GLdouble * params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GLubyte * name, GLfloat * params);$/;"	t
PFNGLGETPROGRAMPARAMETERDVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETPROGRAMPARAMETERDVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble * params);$/;"	t
PFNGLGETPROGRAMPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPROGRAMPARAMETERFVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETPROGRAMSTRINGARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, GLvoid *string);$/;"	t
PFNGLGETPROGRAMSTRINGARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, GLvoid * string);$/;"	t
PFNGLGETPROGRAMSTRINGNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program);$/;"	t
PFNGLGETPROGRAMSTRINGNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte * program);$/;"	t
PFNGLGETQUERYIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETQUERYIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETQUERYOBJECTI64VEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64EXT *params);$/;"	t
PFNGLGETQUERYOBJECTI64VEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64EXT * params);$/;"	t
PFNGLGETQUERYOBJECTIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTIVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint * params);$/;"	t
PFNGLGETQUERYOBJECTIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint * params);$/;"	t
PFNGLGETQUERYOBJECTUI64VEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETQUERYOBJECTUI64VEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64EXT * params);$/;"	t
PFNGLGETQUERYOBJECTUIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETQUERYOBJECTUIVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint * params);$/;"	t
PFNGLGETQUERYOBJECTUIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETQUERYOBJECTUIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint * params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETSEPARABLEFILTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETSEPARABLEFILTEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid * row, GLvoid * column, GLvoid * span);$/;"	t
PFNGLGETSEPARABLEFILTERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETSEPARABLEFILTERPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid * row, GLvoid * column, GLvoid * span);$/;"	t
PFNGLGETSHADERINFOLOGPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETSHADERINFOLOGPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);$/;"	t
PFNGLGETSHADERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint * params);$/;"	t
PFNGLGETSHADERSOURCEARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);$/;"	t
PFNGLGETSHADERSOURCEARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source);$/;"	t
PFNGLGETSHADERSOURCEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	t
PFNGLGETSHADERSOURCEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);$/;"	t
PFNGLGETSHARPENTEXFUNCSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t
PFNGLGETSHARPENTEXFUNCSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat * points);$/;"	t
PFNGLGETSTRINGIPROC	include/GL/glext.h	/^typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t
PFNGLGETSYNCIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	t
PFNGLGETTEXBUMPPARAMETERFVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t
PFNGLGETTEXBUMPPARAMETERFVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat * param);$/;"	t
PFNGLGETTEXBUMPPARAMETERIVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t
PFNGLGETTEXBUMPPARAMETERIVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint * param);$/;"	t
PFNGLGETTEXFILTERFUNCSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *weights);$/;"	t
PFNGLGETTEXFILTERFUNCSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat * weights);$/;"	t
PFNGLGETTEXPARAMETERIIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint * params);$/;"	t
PFNGLGETTEXPARAMETERIIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIUIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXPARAMETERIUIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint * params);$/;"	t
PFNGLGETTEXPARAMETERIUIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETTEXTUREIMAGEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTRACKMATRIXIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint *params);$/;"	t
PFNGLGETTRACKMATRIXIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint * params);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint * location);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETUNIFORMBLOCKINDEXPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBlockName);$/;"	t
PFNGLGETUNIFORMBUFFERSIZEEXTPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);$/;"	t
PFNGLGETUNIFORMBUFFERSIZEEXTPROC	shared/GLee.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);$/;"	t
PFNGLGETUNIFORMFVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMFVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLfloat * params);$/;"	t
PFNGLGETUNIFORMFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMFVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat * params);$/;"	t
PFNGLGETUNIFORMINDICESPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar* *uniformNames, GLuint *uniformIndices);$/;"	t
PFNGLGETUNIFORMIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMIVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint * params);$/;"	t
PFNGLGETUNIFORMIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint * params);$/;"	t
PFNGLGETUNIFORMLOCATIONARBPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
PFNGLGETUNIFORMLOCATIONARBPROC	shared/GLee.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB * name);$/;"	t
PFNGLGETUNIFORMLOCATIONPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETUNIFORMLOCATIONPROC	shared/GLee.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar * name);$/;"	t
PFNGLGETUNIFORMOFFSETEXTPROC	include/GL/glext.h	/^typedef GLintptr (APIENTRYP PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);$/;"	t
PFNGLGETUNIFORMOFFSETEXTPROC	shared/GLee.h	/^typedef GLintptr (APIENTRYP PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);$/;"	t
PFNGLGETUNIFORMUI64VNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);$/;"	t
PFNGLGETUNIFORMUIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *params);$/;"	t
PFNGLGETUNIFORMUIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint * params);$/;"	t
PFNGLGETUNIFORMUIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params);$/;"	t
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint * params);$/;"	t
PFNGLGETVARIANTBOOLEANVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETVARIANTBOOLEANVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean * data);$/;"	t
PFNGLGETVARIANTFLOATVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETVARIANTFLOATVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat * data);$/;"	t
PFNGLGETVARIANTINTEGERVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETVARIANTINTEGERVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint * data);$/;"	t
PFNGLGETVARIANTPOINTERVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, GLvoid* *data);$/;"	t
PFNGLGETVARIANTPOINTERVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, GLvoid* * data);$/;"	t
PFNGLGETVARYINGLOCATIONNVPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETVARYINGLOCATIONNVPROC	shared/GLee.h	/^typedef GLint (APIENTRYP PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar * name);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, GLint * params);$/;"	t
PFNGLGETVERTEXATTRIBDVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble * params);$/;"	t
PFNGLGETVERTEXATTRIBDVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble * params);$/;"	t
PFNGLGETVERTEXATTRIBDVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble * params);$/;"	t
PFNGLGETVERTEXATTRIBFVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETVERTEXATTRIBFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETVERTEXATTRIBFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat * params);$/;"	t
PFNGLGETVERTEXATTRIBIIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint * params);$/;"	t
PFNGLGETVERTEXATTRIBIIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIUIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint *params);$/;"	t
PFNGLGETVERTEXATTRIBIUIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint * params);$/;"	t
PFNGLGETVERTEXATTRIBIUIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint * params);$/;"	t
PFNGLGETVERTEXATTRIBIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint * params);$/;"	t
PFNGLGETVERTEXATTRIBIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint * params);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, GLvoid* * pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, GLvoid* * pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* * pointer);$/;"	t
PFNGLGETVIDEOCAPTUREIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint video_capture_slot, GLenum pname, GLint *params);$/;"	t
PFNGLGETVIDEOCAPTURESTREAMDVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVIDEOCAPTURESTREAMFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVIDEOCAPTURESTREAMIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);$/;"	t
PFNGLGETVIDEOI64VNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOI64VNVPROC) (GLuint video_slot, GLenum pname, GLint64EXT *params);$/;"	t
PFNGLGETVIDEOIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOIVNVPROC) (GLuint video_slot, GLenum pname, GLint *params);$/;"	t
PFNGLGETVIDEOUI64VNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETVIDEOUIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint *params);$/;"	t
PFNGLGLOBALALPHAFACTORBSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORBSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORDSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	t
PFNGLGLOBALALPHAFACTORDSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	t
PFNGLGLOBALALPHAFACTORFSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	t
PFNGLGLOBALALPHAFACTORFSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	t
PFNGLGLOBALALPHAFACTORISUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	t
PFNGLGLOBALALPHAFACTORISUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	t
PFNGLGLOBALALPHAFACTORSSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	t
PFNGLGLOBALALPHAFACTORSSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	t
PFNGLGLOBALALPHAFACTORUBSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORUBSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORUISUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	t
PFNGLGLOBALALPHAFACTORUISUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	t
PFNGLGLOBALALPHAFACTORUSSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	t
PFNGLGLOBALALPHAFACTORUSSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	t
PFNGLHINTPGIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);$/;"	t
PFNGLHINTPGIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);$/;"	t
PFNGLHISTOGRAMEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLHISTOGRAMEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLHISTOGRAMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLHISTOGRAMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLIGLOOINTERFACESGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const GLvoid *params);$/;"	t
PFNGLIGLOOINTERFACESGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const GLvoid * params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat * params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint * params);$/;"	t
PFNGLINDEXFORMATNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLINDEXFUNCEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);$/;"	t
PFNGLINDEXFUNCEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);$/;"	t
PFNGLINDEXMATERIALEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLINDEXMATERIALEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLINDEXPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLINDEXPOINTEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer);$/;"	t
PFNGLINDEXPOINTERLISTIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLINDEXPOINTERLISTIBMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* * pointer, GLint ptrstride);$/;"	t
PFNGLINSERTCOMPONENTEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLINSERTCOMPONENTEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLINSTRUMENTSBUFFERSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);$/;"	t
PFNGLINSTRUMENTSBUFFERSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint * buffer);$/;"	t
PFNGLISASYNCMARKERSGIXPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLISASYNCMARKERSGIXPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLISBUFFERARBPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERARBPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERRESIDENTNVPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);$/;"	t
PFNGLISENABLEDINDEXEDEXTPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISENABLEDINDEXEDEXTPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISENABLEDIPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISFENCEAPPLEPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLISFENCEAPPLEPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLISFENCENVPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t
PFNGLISFENCENVPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t
PFNGLISFRAMEBUFFEREXTPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);$/;"	t
PFNGLISFRAMEBUFFEREXTPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);$/;"	t
PFNGLISFRAMEBUFFERPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t
PFNGLISNAMEDBUFFERRESIDENTNVPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);$/;"	t
PFNGLISOBJECTBUFFERATIPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLISOBJECTBUFFERATIPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLISOCCLUSIONQUERYNVPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLISOCCLUSIONQUERYNVPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLISPROGRAMARBPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	t
PFNGLISPROGRAMARBPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	t
PFNGLISPROGRAMNVPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	t
PFNGLISPROGRAMNVPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	t
PFNGLISPROGRAMPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t
PFNGLISPROGRAMPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t
PFNGLISQUERYARBPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);$/;"	t
PFNGLISQUERYARBPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);$/;"	t
PFNGLISQUERYPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t
PFNGLISQUERYPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t
PFNGLISRENDERBUFFEREXTPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);$/;"	t
PFNGLISRENDERBUFFEREXTPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);$/;"	t
PFNGLISRENDERBUFFERPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t
PFNGLISSHADERPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t
PFNGLISSHADERPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t
PFNGLISSYNCPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t
PFNGLISTEXTUREEXTPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	t
PFNGLISTEXTUREEXTPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	t
PFNGLISTRANSFORMFEEDBACKNVPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint id);$/;"	t
PFNGLISVARIANTENABLEDEXTPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	t
PFNGLISVARIANTENABLEDEXTPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	t
PFNGLISVERTEXARRAYAPPLEPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLISVERTEXARRAYAPPLEPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLISVERTEXARRAYPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLISVERTEXATTRIBENABLEDAPPLEPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint index, GLenum pname);$/;"	t
PFNGLLIGHTENVIEXTPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLLIGHTENVIEXTPROC) (GLenum pname, GLint param);$/;"	t
PFNGLLIGHTENVISGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLLIGHTENVISGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLLINKPROGRAMARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLLINKPROGRAMARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLLINKPROGRAMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t
PFNGLLINKPROGRAMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t
PFNGLLISTPARAMETERFSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);$/;"	t
PFNGLLISTPARAMETERFSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);$/;"	t
PFNGLLISTPARAMETERFVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat *params);$/;"	t
PFNGLLISTPARAMETERFVSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat * params);$/;"	t
PFNGLLISTPARAMETERISGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);$/;"	t
PFNGLLISTPARAMETERISGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);$/;"	t
PFNGLLISTPARAMETERIVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *params);$/;"	t
PFNGLLISTPARAMETERIVSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint * params);$/;"	t
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLLOADPROGRAMNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GLubyte *program);$/;"	t
PFNGLLOADPROGRAMNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GLubyte * program);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble * m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble * m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat * m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat * m);$/;"	t
PFNGLLOCKARRAYSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	t
PFNGLLOCKARRAYSEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	t
PFNGLMAKEBUFFERNONRESIDENTNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);$/;"	t
PFNGLMAKEBUFFERRESIDENTNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERARBPROC	include/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERARBPROC	shared/GLee.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERPROC	include/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERPROC	shared/GLee.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERRANGEPROC	include/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPCONTROLPOINTSNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points);$/;"	t
PFNGLMAPCONTROLPOINTSNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid * points);$/;"	t
PFNGLMAPNAMEDBUFFEREXTPROC	include/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAPOBJECTBUFFERATIPROC	include/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLMAPOBJECTBUFFERATIPROC	shared/GLee.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLMAPPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMAPPARAMETERFVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat * params);$/;"	t
PFNGLMAPPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMAPPARAMETERIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint * params);$/;"	t
PFNGLMAPVERTEXATTRIB1DAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);$/;"	t
PFNGLMAPVERTEXATTRIB1FAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);$/;"	t
PFNGLMAPVERTEXATTRIB2DAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);$/;"	t
PFNGLMAPVERTEXATTRIB2FAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);$/;"	t
PFNGLMATRIXFRUSTUMEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLMATRIXINDEXPOINTERARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLMATRIXINDEXPOINTERARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);$/;"	t
PFNGLMATRIXINDEXUBVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);$/;"	t
PFNGLMATRIXINDEXUBVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte * indices);$/;"	t
PFNGLMATRIXINDEXUIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);$/;"	t
PFNGLMATRIXINDEXUIVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint * indices);$/;"	t
PFNGLMATRIXINDEXUSVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);$/;"	t
PFNGLMATRIXINDEXUSVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort * indices);$/;"	t
PFNGLMATRIXLOADDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXLOADFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOADIDENTITYEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXLOADTRANSPOSEDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXLOADTRANSPOSEFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXMULTFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSEDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSEFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXORTHOEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLMATRIXPOPEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXPUSHEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXROTATEDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXROTATEFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMATRIXSCALEDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXSCALEFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMATRIXTRANSLATEDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXTRANSLATEFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMINMAXEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMINMAXEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMINMAXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMINMAXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMINSAMPLESHADINGPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLclampf value);$/;"	t
PFNGLMULTIDRAWARRAYSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWARRAYSEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, GLint * first, GLsizei * count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWARRAYSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWARRAYSPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, GLint * first, GLsizei * count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount, const GLint *basevertex);$/;"	t
PFNGLMULTIDRAWELEMENTSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei * count, GLenum type, const GLvoid* * indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei * count, GLenum type, const GLvoid* * indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint * first, const GLsizei * count, GLsizei primcount);$/;"	t
PFNGLMULTIMODEDRAWARRAYSIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTIMODEDRAWARRAYSIBMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum * mode, const GLint * first, const GLsizei * count, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum * mode, const GLsizei * count, GLenum type, const GLvoid* const * indices, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTITEXBUFFEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLMULTITEXCOORD1DARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DVARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1DVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble * v);$/;"	t
PFNGLMULTITEXCOORD1DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1DVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble * v);$/;"	t
PFNGLMULTITEXCOORD1FARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FVARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat * v);$/;"	t
PFNGLMULTITEXCOORD1FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat * v);$/;"	t
PFNGLMULTITEXCOORD1HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);$/;"	t
PFNGLMULTITEXCOORD1HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);$/;"	t
PFNGLMULTITEXCOORD1HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD1HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV * v);$/;"	t
PFNGLMULTITEXCOORD1IARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IVARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1IVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint * v);$/;"	t
PFNGLMULTITEXCOORD1IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1IVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint * v);$/;"	t
PFNGLMULTITEXCOORD1SARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SVARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD1SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD1SVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort * v);$/;"	t
PFNGLMULTITEXCOORD1SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD1SVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort * v);$/;"	t
PFNGLMULTITEXCOORD2DARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DVARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2DVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble * v);$/;"	t
PFNGLMULTITEXCOORD2DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2DVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble * v);$/;"	t
PFNGLMULTITEXCOORD2FARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FVARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat * v);$/;"	t
PFNGLMULTITEXCOORD2FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat * v);$/;"	t
PFNGLMULTITEXCOORD2HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLMULTITEXCOORD2HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLMULTITEXCOORD2HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD2HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV * v);$/;"	t
PFNGLMULTITEXCOORD2IARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IVARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2IVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint * v);$/;"	t
PFNGLMULTITEXCOORD2IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2IVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint * v);$/;"	t
PFNGLMULTITEXCOORD2SARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SVARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2SVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort * v);$/;"	t
PFNGLMULTITEXCOORD2SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2SVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort * v);$/;"	t
PFNGLMULTITEXCOORD3DARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DVARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3DVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble * v);$/;"	t
PFNGLMULTITEXCOORD3DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3DVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble * v);$/;"	t
PFNGLMULTITEXCOORD3FARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FVARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat * v);$/;"	t
PFNGLMULTITEXCOORD3FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat * v);$/;"	t
PFNGLMULTITEXCOORD3HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLMULTITEXCOORD3HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLMULTITEXCOORD3HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD3HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV * v);$/;"	t
PFNGLMULTITEXCOORD3IARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IVARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3IVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint * v);$/;"	t
PFNGLMULTITEXCOORD3IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3IVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint * v);$/;"	t
PFNGLMULTITEXCOORD3SARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SVARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3SVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort * v);$/;"	t
PFNGLMULTITEXCOORD3SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3SVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort * v);$/;"	t
PFNGLMULTITEXCOORD4DARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DVARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4DVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble * v);$/;"	t
PFNGLMULTITEXCOORD4DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4DVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble * v);$/;"	t
PFNGLMULTITEXCOORD4FARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FVARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat * v);$/;"	t
PFNGLMULTITEXCOORD4FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat * v);$/;"	t
PFNGLMULTITEXCOORD4HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLMULTITEXCOORD4HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLMULTITEXCOORD4HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD4HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV * v);$/;"	t
PFNGLMULTITEXCOORD4IARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IVARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4IVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint * v);$/;"	t
PFNGLMULTITEXCOORD4IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4IVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint * v);$/;"	t
PFNGLMULTITEXCOORD4SARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SVARBPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4SVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort * v);$/;"	t
PFNGLMULTITEXCOORD4SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4SVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort * v);$/;"	t
PFNGLMULTITEXCOORDPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLMULTITEXENVFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXENVFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXENVIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXENVIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXGENDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);$/;"	t
PFNGLMULTITEXGENDVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);$/;"	t
PFNGLMULTITEXGENFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXGENFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXGENIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXGENIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTITEXIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTITEXIMAGE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTITEXPARAMETERFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXPARAMETERIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXPARAMETERIIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXPARAMETERIUIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLMULTITEXPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXRENDERBUFFEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint renderbuffer);$/;"	t
PFNGLMULTITEXSUBIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTITEXSUBIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTITEXSUBIMAGE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble * m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble * m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat * m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat * m);$/;"	t
PFNGLNAMEDBUFFERDATAEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLNAMEDBUFFERSUBDATAEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	t
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLNAMEDMAKEBUFFERNONRESIDENTNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDMAKEBUFFERNONRESIDENTNVPROC) (GLuint buffer);$/;"	t
PFNGLNAMEDMAKEBUFFERRESIDENTNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDMAKEBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLuint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLNAMEDPROGRAMSTRINGEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum format, GLsizei len, const GLvoid *string);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNEWOBJECTBUFFERATIPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);$/;"	t
PFNGLNEWOBJECTBUFFERATIPROC	shared/GLee.h	/^typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid * pointer, GLenum usage);$/;"	t
PFNGLNORMAL3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLNORMAL3FVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLNORMAL3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLNORMAL3FVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat * n, const GLfloat * v);$/;"	t
PFNGLNORMAL3HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	t
PFNGLNORMAL3HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	t
PFNGLNORMAL3HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLNORMAL3HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV * v);$/;"	t
PFNGLNORMALFORMATNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLNORMALPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLNORMALPOINTEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer);$/;"	t
PFNGLNORMALPOINTERLISTIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLNORMALPOINTERLISTIBMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* * pointer, GLint ptrstride);$/;"	t
PFNGLNORMALPOINTERVINTELPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLNORMALPOINTERVINTELPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const GLvoid* * pointer);$/;"	t
PFNGLNORMALSTREAM3BATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);$/;"	t
PFNGLNORMALSTREAM3BATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);$/;"	t
PFNGLNORMALSTREAM3BVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);$/;"	t
PFNGLNORMALSTREAM3BVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte * coords);$/;"	t
PFNGLNORMALSTREAM3DATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);$/;"	t
PFNGLNORMALSTREAM3DATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);$/;"	t
PFNGLNORMALSTREAM3DVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLNORMALSTREAM3DVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble * coords);$/;"	t
PFNGLNORMALSTREAM3FATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);$/;"	t
PFNGLNORMALSTREAM3FATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);$/;"	t
PFNGLNORMALSTREAM3FVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLNORMALSTREAM3FVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat * coords);$/;"	t
PFNGLNORMALSTREAM3IATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz);$/;"	t
PFNGLNORMALSTREAM3IATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz);$/;"	t
PFNGLNORMALSTREAM3IVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLNORMALSTREAM3IVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint * coords);$/;"	t
PFNGLNORMALSTREAM3SATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);$/;"	t
PFNGLNORMALSTREAM3SATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);$/;"	t
PFNGLNORMALSTREAM3SVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLNORMALSTREAM3SVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort * coords);$/;"	t
PFNGLOBJECTPURGEABLEAPPLEPROC	include/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);$/;"	t
PFNGLOBJECTUNPURGEABLEAPPLEPROC	include/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);$/;"	t
PFNGLORTHOFOESPROC	shared/GLee.h	/^typedef GLvoid (APIENTRYP PFNGLORTHOFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);$/;"	t
PFNGLPASSTEXCOORDATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	t
PFNGLPASSTEXCOORDATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	t
PFNGLPAUSETRANSFORMFEEDBACKNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKNVPROC) (void);$/;"	t
PFNGLPIXELDATARANGENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, GLvoid *pointer);$/;"	t
PFNGLPIXELDATARANGENVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, GLvoid * pointer);$/;"	t
PFNGLPIXELTEXGENPARAMETERFSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTEXGENPARAMETERFSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTEXGENPARAMETERFVSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPIXELTEXGENPARAMETERFVSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat * params);$/;"	t
PFNGLPIXELTEXGENPARAMETERISGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPIXELTEXGENPARAMETERISGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPIXELTEXGENPARAMETERIVSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPIXELTEXGENPARAMETERIVSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint * params);$/;"	t
PFNGLPIXELTEXGENSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	t
PFNGLPIXELTEXGENSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat * params);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint * params);$/;"	t
PFNGLPNTRIANGLESFATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPNTRIANGLESFATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPNTRIANGLESIATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPNTRIANGLESIATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERFARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat * params);$/;"	t
PFNGLPOINTPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat * params);$/;"	t
PFNGLPOINTPARAMETERFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat * params);$/;"	t
PFNGLPOINTPARAMETERFVSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat * params);$/;"	t
PFNGLPOINTPARAMETERINVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERINVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOINTPARAMETERIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint * params);$/;"	t
PFNGLPOINTPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOINTPARAMETERIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint * params);$/;"	t
PFNGLPOLLASYNCSGIXPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);$/;"	t
PFNGLPOLLASYNCSGIXPROC	shared/GLee.h	/^typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint * markerp);$/;"	t
PFNGLPOLLINSTRUMENTSSGIXPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);$/;"	t
PFNGLPOLLINSTRUMENTSSGIXPROC	shared/GLee.h	/^typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint * marker_p);$/;"	t
PFNGLPOLYGONOFFSETEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	t
PFNGLPOLYGONOFFSETEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	t
PFNGLPRESENTFRAMEDUALFILLNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);$/;"	t
PFNGLPRESENTFRAMEKEYEDNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);$/;"	t
PFNGLPRIMITIVERESTARTINDEXNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	t
PFNGLPRIMITIVERESTARTINDEXNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	t
PFNGLPRIMITIVERESTARTINDEXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t
PFNGLPRIMITIVERESTARTNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);$/;"	t
PFNGLPRIMITIVERESTARTNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) ();$/;"	t
PFNGLPRIORITIZETEXTURESEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, const GLclampf *priorities);$/;"	t
PFNGLPRIORITIZETEXTURESEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint * textures, const GLclampf * priorities);$/;"	t
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat * params);$/;"	t
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint * params);$/;"	t
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint * params);$/;"	t
PFNGLPROGRAMENVPARAMETER4DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMENVPARAMETER4DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMENVPARAMETER4DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLPROGRAMENVPARAMETER4DVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble * params);$/;"	t
PFNGLPROGRAMENVPARAMETER4FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMENVPARAMETER4FARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMENVPARAMETER4FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLPROGRAMENVPARAMETER4FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat * params);$/;"	t
PFNGLPROGRAMENVPARAMETERI4INVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLPROGRAMENVPARAMETERI4INVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLPROGRAMENVPARAMETERI4IVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);$/;"	t
PFNGLPROGRAMENVPARAMETERI4IVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint * params);$/;"	t
PFNGLPROGRAMENVPARAMETERI4UINVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLPROGRAMENVPARAMETERI4UINVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);$/;"	t
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint * params);$/;"	t
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint * params);$/;"	t
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint * params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble * params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat * params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4INVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4INVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint * params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint * params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint * params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint * params);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v);$/;"	t
PFNGLPROGRAMPARAMETER4DNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMPARAMETER4DNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMPARAMETER4DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdouble *v);$/;"	t
PFNGLPROGRAMPARAMETER4DVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdouble * v);$/;"	t
PFNGLPROGRAMPARAMETER4FNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMPARAMETER4FNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMPARAMETER4FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfloat *v);$/;"	t
PFNGLPROGRAMPARAMETER4FVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfloat * v);$/;"	t
PFNGLPROGRAMPARAMETERIARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERIEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERS4DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLuint count, const GLdouble *v);$/;"	t
PFNGLPROGRAMPARAMETERS4DVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLuint count, const GLdouble * v);$/;"	t
PFNGLPROGRAMPARAMETERS4FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLuint count, const GLfloat *v);$/;"	t
PFNGLPROGRAMPARAMETERS4FVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLuint count, const GLfloat * v);$/;"	t
PFNGLPROGRAMSTRINGARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const GLvoid *string);$/;"	t
PFNGLPROGRAMSTRINGARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const GLvoid * string);$/;"	t
PFNGLPROGRAMUNIFORM1FEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
PFNGLPROGRAMUNIFORM1FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1IEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0);$/;"	t
PFNGLPROGRAMUNIFORM1IVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1UIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
PFNGLPROGRAMUNIFORM1UIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM2FEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLPROGRAMUNIFORM2FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2IEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
PFNGLPROGRAMUNIFORM2IVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2UIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLPROGRAMUNIFORM2UIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM3FEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLPROGRAMUNIFORM3FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3IEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLPROGRAMUNIFORM3IVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3UIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLPROGRAMUNIFORM3UIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM4FEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLPROGRAMUNIFORM4FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4IEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLPROGRAMUNIFORM4IVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4UIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLPROGRAMUNIFORM4UIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMUI64NVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);$/;"	t
PFNGLPROGRAMUNIFORMUI64VNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMVERTEXLIMITNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);$/;"	t
PFNGLPROGRAMVERTEXLIMITNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);$/;"	t
PFNGLPROVOKINGVERTEXEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXEXTPROC) (GLenum mode);$/;"	t
PFNGLPROVOKINGVERTEXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t
PFNGLREADINSTRUMENTSSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLREADINSTRUMENTSSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLREFERENCEPLANESGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);$/;"	t
PFNGLREFERENCEPLANESGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble * equation);$/;"	t
PFNGLRENDERBUFFERSTORAGEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLREPLACEMENTCODEPOINTERSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const GLvoid* *pointer);$/;"	t
PFNGLREPLACEMENTCODEPOINTERSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const GLvoid* * pointer);$/;"	t
PFNGLREPLACEMENTCODEUBSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	t
PFNGLREPLACEMENTCODEUBSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	t
PFNGLREPLACEMENTCODEUBVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);$/;"	t
PFNGLREPLACEMENTCODEUBVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte * code);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint * rc, const GLfloat * c, const GLfloat * v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint * rc, const GLfloat * c, const GLfloat * n, const GLfloat * v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint * rc, const GLubyte * c, const GLfloat * v);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint * rc, const GLfloat * n, const GLfloat * v);$/;"	t
PFNGLREPLACEMENTCODEUISUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	t
PFNGLREPLACEMENTCODEUISUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint * rc, const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint * rc, const GLfloat * tc, const GLfloat * n, const GLfloat * v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint * rc, const GLfloat * tc, const GLfloat * v);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint * rc, const GLfloat * v);$/;"	t
PFNGLREPLACEMENTCODEUIVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);$/;"	t
PFNGLREPLACEMENTCODEUIVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint * code);$/;"	t
PFNGLREPLACEMENTCODEUSSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	t
PFNGLREPLACEMENTCODEUSSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	t
PFNGLREPLACEMENTCODEUSVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);$/;"	t
PFNGLREPLACEMENTCODEUSVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort * code);$/;"	t
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint * programs);$/;"	t
PFNGLRESETHISTOGRAMEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	t
PFNGLRESETHISTOGRAMEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	t
PFNGLRESETHISTOGRAMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t
PFNGLRESETHISTOGRAMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t
PFNGLRESIZEBUFFERSMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);$/;"	t
PFNGLRESIZEBUFFERSMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) ();$/;"	t
PFNGLRESUMETRANSFORMFEEDBACKNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKNVPROC) (void);$/;"	t
PFNGLSAMPLECOVERAGEARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLECOVERAGEARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLECOVERAGEPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLECOVERAGEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLECOVERAGEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEMAPATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	t
PFNGLSAMPLEMAPATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	t
PFNGLSAMPLEMASKEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEMASKEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEMASKINDEXEDNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint index, GLbitfield mask);$/;"	t
PFNGLSAMPLEMASKIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint index, GLbitfield mask);$/;"	t
PFNGLSAMPLEMASKSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEMASKSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEPATTERNEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	t
PFNGLSAMPLEPATTERNEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	t
PFNGLSAMPLEPATTERNSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	t
PFNGLSAMPLEPATTERNSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	t
PFNGLSECONDARYCOLOR3BEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3BVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte * v);$/;"	t
PFNGLSECONDARYCOLOR3BVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3BVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte * v);$/;"	t
PFNGLSECONDARYCOLOR3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3DVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble * v);$/;"	t
PFNGLSECONDARYCOLOR3DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3DVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble * v);$/;"	t
PFNGLSECONDARYCOLOR3FEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3FVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat * v);$/;"	t
PFNGLSECONDARYCOLOR3FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat * v);$/;"	t
PFNGLSECONDARYCOLOR3HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLSECONDARYCOLOR3HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLSECONDARYCOLOR3HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLSECONDARYCOLOR3HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV * v);$/;"	t
PFNGLSECONDARYCOLOR3IEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3IVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint * v);$/;"	t
PFNGLSECONDARYCOLOR3IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3IVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint * v);$/;"	t
PFNGLSECONDARYCOLOR3SEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3SVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort * v);$/;"	t
PFNGLSECONDARYCOLOR3SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3SVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort * v);$/;"	t
PFNGLSECONDARYCOLOR3UBEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UBVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte * v);$/;"	t
PFNGLSECONDARYCOLOR3UBVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UBVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte * v);$/;"	t
PFNGLSECONDARYCOLOR3UIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3UIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint * v);$/;"	t
PFNGLSECONDARYCOLOR3UIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3UIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint * v);$/;"	t
PFNGLSECONDARYCOLOR3USEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);$/;"	t
PFNGLSECONDARYCOLOR3USVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort * v);$/;"	t
PFNGLSECONDARYCOLOR3USVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	t
PFNGLSECONDARYCOLOR3USVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort * v);$/;"	t
PFNGLSECONDARYCOLORFORMATNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLSECONDARYCOLORPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLSECONDARYCOLORPOINTEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);$/;"	t
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* * pointer, GLint ptrstride);$/;"	t
PFNGLSECONDARYCOLORPOINTERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLSECONDARYCOLORPOINTERPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);$/;"	t
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);$/;"	t
PFNGLSEPARABLEFILTER2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	t
PFNGLSEPARABLEFILTER2DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * row, const GLvoid * column);$/;"	t
PFNGLSEPARABLEFILTER2DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	t
PFNGLSEPARABLEFILTER2DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * row, const GLvoid * column);$/;"	t
PFNGLSETFENCEAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLSETFENCEAPPLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLSETFENCENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t
PFNGLSETFENCENVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value);$/;"	t
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat * value);$/;"	t
PFNGLSETINVARIANTEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);$/;"	t
PFNGLSETINVARIANTEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const GLvoid * addr);$/;"	t
PFNGLSETLOCALCONSTANTEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);$/;"	t
PFNGLSETLOCALCONSTANTEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const GLvoid * addr);$/;"	t
PFNGLSHADEROP1EXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	t
PFNGLSHADEROP1EXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	t
PFNGLSHADEROP2EXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);$/;"	t
PFNGLSHADEROP2EXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);$/;"	t
PFNGLSHADEROP3EXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);$/;"	t
PFNGLSHADEROP3EXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);$/;"	t
PFNGLSHADERSOURCEARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const GLcharARB* *string, const GLint *length);$/;"	t
PFNGLSHADERSOURCEARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const GLcharARB* * string, const GLint * length);$/;"	t
PFNGLSHADERSOURCEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* *string, const GLint *length);$/;"	t
PFNGLSHADERSOURCEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* * string, const GLint * length);$/;"	t
PFNGLSHARPENTEXFUNCSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);$/;"	t
PFNGLSHARPENTEXFUNCSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat * points);$/;"	t
PFNGLSPRITEPARAMETERFSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLSPRITEPARAMETERFSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLSPRITEPARAMETERFVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLSPRITEPARAMETERFVSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat * params);$/;"	t
PFNGLSPRITEPARAMETERISGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLSPRITEPARAMETERISGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLSPRITEPARAMETERIVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLSPRITEPARAMETERIVSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint * params);$/;"	t
PFNGLSTARTINSTRUMENTSSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);$/;"	t
PFNGLSTARTINSTRUMENTSSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) ();$/;"	t
PFNGLSTENCILCLEARTAGEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILCLEARTAGEXTPROC) (GLsizei stencilTagBits, GLuint stencilClearTag);$/;"	t
PFNGLSTENCILFUNCSEPARATEATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILMASKSEPARATEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t
PFNGLSTENCILMASKSEPARATEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t
PFNGLSTENCILOPSEPARATEATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTENCILOPSEPARATEATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTENCILOPSEPARATEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTENCILOPSEPARATEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTOPINSTRUMENTSSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLSTOPINSTRUMENTSSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLSTRINGMARKERGREMEDYPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const GLvoid *string);$/;"	t
PFNGLSTRINGMARKERGREMEDYPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const GLvoid * string);$/;"	t
PFNGLSWIZZLEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFNGLSWIZZLEEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFNGLTAGSAMPLEBUFFERSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);$/;"	t
PFNGLTAGSAMPLEBUFFERSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) ();$/;"	t
PFNGLTANGENT3BEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	t
PFNGLTANGENT3BEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	t
PFNGLTANGENT3BVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLTANGENT3BVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte * v);$/;"	t
PFNGLTANGENT3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	t
PFNGLTANGENT3DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	t
PFNGLTANGENT3DVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLTANGENT3DVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble * v);$/;"	t
PFNGLTANGENT3FEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	t
PFNGLTANGENT3FEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	t
PFNGLTANGENT3FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLTANGENT3FVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat * v);$/;"	t
PFNGLTANGENT3IEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);$/;"	t
PFNGLTANGENT3IEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);$/;"	t
PFNGLTANGENT3IVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLTANGENT3IVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint * v);$/;"	t
PFNGLTANGENT3SEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);$/;"	t
PFNGLTANGENT3SEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);$/;"	t
PFNGLTANGENT3SVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLTANGENT3SVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort * v);$/;"	t
PFNGLTANGENTPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLTANGENTPOINTEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid * pointer);$/;"	t
PFNGLTBUFFERMASK3DFXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	t
PFNGLTBUFFERMASK3DFXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	t
PFNGLTESSELLATIONFACTORAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONFACTORAMDPROC) (GLfloat factor);$/;"	t
PFNGLTESSELLATIONMODEAMDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);$/;"	t
PFNGLTESTFENCEAPPLEPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLTESTFENCEAPPLEPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLTESTFENCENVPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t
PFNGLTESTFENCENVPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t
PFNGLTESTOBJECTAPPLEPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	t
PFNGLTESTOBJECTAPPLEPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	t
PFNGLTEXBUFFERARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUMPPARAMETERFVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);$/;"	t
PFNGLTEXBUMPPARAMETERFVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat * param);$/;"	t
PFNGLTEXBUMPPARAMETERIVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);$/;"	t
PFNGLTEXBUMPPARAMETERIVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint * param);$/;"	t
PFNGLTEXCOORD1HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);$/;"	t
PFNGLTEXCOORD1HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);$/;"	t
PFNGLTEXCOORD1HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD1HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV * v);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat * tc, const GLfloat * c, const GLfloat * v);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat * tc, const GLubyte * c, const GLfloat * v);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat * tc, const GLfloat * n, const GLfloat * v);$/;"	t
PFNGLTEXCOORD2FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FVERTEX3FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat * tc, const GLfloat * v);$/;"	t
PFNGLTEXCOORD2HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLTEXCOORD2HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLTEXCOORD2HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD2HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV * v);$/;"	t
PFNGLTEXCOORD3HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLTEXCOORD3HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLTEXCOORD3HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD3HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV * v);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);$/;"	t
PFNGLTEXCOORD4FVERTEX4FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FVERTEX4FSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat * tc, const GLfloat * v);$/;"	t
PFNGLTEXCOORD4HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLTEXCOORD4HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLTEXCOORD4HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD4HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV * v);$/;"	t
PFNGLTEXCOORDFORMATNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLTEXCOORDPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLTEXCOORDPOINTEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer);$/;"	t
PFNGLTEXCOORDPOINTERLISTIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLTEXCOORDPOINTERLISTIBMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* * pointer, GLint ptrstride);$/;"	t
PFNGLTEXCOORDPOINTERVINTELPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLTEXCOORDPOINTERVINTELPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* * pointer);$/;"	t
PFNGLTEXFILTERFUNCSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);$/;"	t
PFNGLTEXFILTERFUNCSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, const GLfloat * weights);$/;"	t
PFNGLTEXIMAGE2DMULTISAMPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE3DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels);$/;"	t
PFNGLTEXIMAGE3DMULTISAMPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE3DPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE3DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels);$/;"	t
PFNGLTEXIMAGE4DSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE4DSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid * pixels);$/;"	t
PFNGLTEXPARAMETERIIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint * params);$/;"	t
PFNGLTEXPARAMETERIIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIUIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXPARAMETERIUIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint * params);$/;"	t
PFNGLTEXPARAMETERIUIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXRENDERBUFFERNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXRENDERBUFFERNVPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLTEXSUBIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE1DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid * pixels);$/;"	t
PFNGLTEXSUBIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE2DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels);$/;"	t
PFNGLTEXSUBIMAGE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid * pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	include/GL/gl.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid * pixels);$/;"	t
PFNGLTEXSUBIMAGE4DSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE4DSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid * pixels);$/;"	t
PFNGLTEXTUREBARRIERNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);$/;"	t
PFNGLTEXTUREBUFFEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXTURECOLORMASKSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	t
PFNGLTEXTURECOLORMASKSGISPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	t
PFNGLTEXTUREIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTUREIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTUREIMAGE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTURELIGHTEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	t
PFNGLTEXTURELIGHTEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	t
PFNGLTEXTUREMATERIALEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLTEXTUREMATERIALEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLTEXTURENORMALEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	t
PFNGLTEXTURENORMALEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	t
PFNGLTEXTUREPARAMETERFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXTUREPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXTUREPARAMETERIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLTEXTUREPARAMETERIIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTUREPARAMETERIUIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXTUREPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTURERANGEAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURERANGEAPPLEPROC) (GLenum target, GLsizei length, const GLvoid *pointer);$/;"	t
PFNGLTEXTURERENDERBUFFEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint renderbuffer);$/;"	t
PFNGLTEXTURESUBIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTRACKMATRIXNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);$/;"	t
PFNGLTRACKMATRIXNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);$/;"	t
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint * attribs, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count, const GLchar* *varyings, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLchar* *varyings, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint * locations, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, const GLchar* *varyings, GLenum bufferMode);$/;"	t
PFNGLUNIFORM1FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat * value);$/;"	t
PFNGLUNIFORM1FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat * value);$/;"	t
PFNGLUNIFORM1IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1IVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint * value);$/;"	t
PFNGLUNIFORM1IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1IVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint * value);$/;"	t
PFNGLUNIFORM1UIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);$/;"	t
PFNGLUNIFORM1UIEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);$/;"	t
PFNGLUNIFORM1UIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t
PFNGLUNIFORM1UIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM1UIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint * value);$/;"	t
PFNGLUNIFORM1UIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM2FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat * value);$/;"	t
PFNGLUNIFORM2FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat * value);$/;"	t
PFNGLUNIFORM2IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2IVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint * value);$/;"	t
PFNGLUNIFORM2IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2IVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint * value);$/;"	t
PFNGLUNIFORM2UIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLUNIFORM2UIEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLUNIFORM2UIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLUNIFORM2UIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM2UIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint * value);$/;"	t
PFNGLUNIFORM2UIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM3FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat * value);$/;"	t
PFNGLUNIFORM3FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat * value);$/;"	t
PFNGLUNIFORM3IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3IVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint * value);$/;"	t
PFNGLUNIFORM3IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3IVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint * value);$/;"	t
PFNGLUNIFORM3UIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLUNIFORM3UIEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLUNIFORM3UIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLUNIFORM3UIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM3UIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint * value);$/;"	t
PFNGLUNIFORM3UIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM4FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat * value);$/;"	t
PFNGLUNIFORM4FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat * value);$/;"	t
PFNGLUNIFORM4IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4IVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint * value);$/;"	t
PFNGLUNIFORM4IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4IVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint * value);$/;"	t
PFNGLUNIFORM4UIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLUNIFORM4UIEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLUNIFORM4UIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLUNIFORM4UIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM4UIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint * value);$/;"	t
PFNGLUNIFORM4UIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORMBLOCKBINDINGPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);$/;"	t
PFNGLUNIFORMBUFFEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);$/;"	t
PFNGLUNIFORMBUFFEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);$/;"	t
PFNGLUNIFORMMATRIX2FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);$/;"	t
PFNGLUNIFORMMATRIX2FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);$/;"	t
PFNGLUNIFORMMATRIX2X3FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X3FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);$/;"	t
PFNGLUNIFORMMATRIX2X4FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X4FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);$/;"	t
PFNGLUNIFORMMATRIX3FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);$/;"	t
PFNGLUNIFORMMATRIX3FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);$/;"	t
PFNGLUNIFORMMATRIX3X2FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X2FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);$/;"	t
PFNGLUNIFORMMATRIX3X4FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X4FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);$/;"	t
PFNGLUNIFORMMATRIX4FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);$/;"	t
PFNGLUNIFORMMATRIX4FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);$/;"	t
PFNGLUNIFORMMATRIX4X2FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X2FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);$/;"	t
PFNGLUNIFORMMATRIX4X3FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X3FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);$/;"	t
PFNGLUNIFORMUI64NVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);$/;"	t
PFNGLUNIFORMUI64VNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNLOCKARRAYSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);$/;"	t
PFNGLUNLOCKARRAYSEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) ();$/;"	t
PFNGLUNMAPBUFFERARBPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t
PFNGLUNMAPBUFFERARBPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t
PFNGLUNMAPBUFFERPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t
PFNGLUNMAPBUFFERPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t
PFNGLUNMAPNAMEDBUFFEREXTPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);$/;"	t
PFNGLUNMAPOBJECTBUFFERATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLUNMAPOBJECTBUFFERATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLUPDATEOBJECTBUFFERATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);$/;"	t
PFNGLUPDATEOBJECTBUFFERATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid * pointer, GLenum preserve);$/;"	t
PFNGLUSEPROGRAMOBJECTARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLUSEPROGRAMOBJECTARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLUSEPROGRAMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLUSEPROGRAMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLUSESHADERPROGRAMEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);$/;"	t
PFNGLVALIDATEPROGRAMARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLVALIDATEPROGRAMARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLVALIDATEPROGRAMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLVALIDATEPROGRAMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLVARIANTARRAYOBJECTATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVARIANTARRAYOBJECTATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVARIANTBVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);$/;"	t
PFNGLVARIANTBVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte * addr);$/;"	t
PFNGLVARIANTDVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);$/;"	t
PFNGLVARIANTDVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble * addr);$/;"	t
PFNGLVARIANTFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);$/;"	t
PFNGLVARIANTFVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat * addr);$/;"	t
PFNGLVARIANTIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);$/;"	t
PFNGLVARIANTIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint * addr);$/;"	t
PFNGLVARIANTPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, const GLvoid *addr);$/;"	t
PFNGLVARIANTPOINTEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, const GLvoid * addr);$/;"	t
PFNGLVARIANTSVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);$/;"	t
PFNGLVARIANTSVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort * addr);$/;"	t
PFNGLVARIANTUBVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);$/;"	t
PFNGLVARIANTUBVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte * addr);$/;"	t
PFNGLVARIANTUIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);$/;"	t
PFNGLVARIANTUIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint * addr);$/;"	t
PFNGLVARIANTUSVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);$/;"	t
PFNGLVARIANTUSVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort * addr);$/;"	t
PFNGLVERTEX2HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEX2HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEX2HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX2HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV * v);$/;"	t
PFNGLVERTEX3HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEX3HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEX3HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX3HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV * v);$/;"	t
PFNGLVERTEX4HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEX4HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEX4HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX4HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV * v);$/;"	t
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXARRAYRANGEAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);$/;"	t
PFNGLVERTEXARRAYRANGEAPPLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid * pointer);$/;"	t
PFNGLVERTEXARRAYRANGENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const GLvoid *pointer);$/;"	t
PFNGLVERTEXARRAYRANGENVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const GLvoid * pointer);$/;"	t
PFNGLVERTEXATTRIB1DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble * v);$/;"	t
PFNGLVERTEXATTRIB1DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble * v);$/;"	t
PFNGLVERTEXATTRIB1DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble * v);$/;"	t
PFNGLVERTEXATTRIB1FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat * v);$/;"	t
PFNGLVERTEXATTRIB1FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat * v);$/;"	t
PFNGLVERTEXATTRIB1FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat * v);$/;"	t
PFNGLVERTEXATTRIB1HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);$/;"	t
PFNGLVERTEXATTRIB1HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);$/;"	t
PFNGLVERTEXATTRIB1HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB1HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV * v);$/;"	t
PFNGLVERTEXATTRIB1SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIB1SVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIB1SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIB2DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble * v);$/;"	t
PFNGLVERTEXATTRIB2DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble * v);$/;"	t
PFNGLVERTEXATTRIB2DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble * v);$/;"	t
PFNGLVERTEXATTRIB2FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat * v);$/;"	t
PFNGLVERTEXATTRIB2FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat * v);$/;"	t
PFNGLVERTEXATTRIB2FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat * v);$/;"	t
PFNGLVERTEXATTRIB2HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEXATTRIB2HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEXATTRIB2HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB2HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV * v);$/;"	t
PFNGLVERTEXATTRIB2SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIB2SVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIB2SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIB3DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble * v);$/;"	t
PFNGLVERTEXATTRIB3DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble * v);$/;"	t
PFNGLVERTEXATTRIB3DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble * v);$/;"	t
PFNGLVERTEXATTRIB3FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat * v);$/;"	t
PFNGLVERTEXATTRIB3FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat * v);$/;"	t
PFNGLVERTEXATTRIB3FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat * v);$/;"	t
PFNGLVERTEXATTRIB3HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEXATTRIB3HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEXATTRIB3HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB3HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV * v);$/;"	t
PFNGLVERTEXATTRIB3SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIB3SVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIB3SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIB4BVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4BVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte * v);$/;"	t
PFNGLVERTEXATTRIB4BVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4BVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte * v);$/;"	t
PFNGLVERTEXATTRIB4DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble * v);$/;"	t
PFNGLVERTEXATTRIB4DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble * v);$/;"	t
PFNGLVERTEXATTRIB4DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble * v);$/;"	t
PFNGLVERTEXATTRIB4FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat * v);$/;"	t
PFNGLVERTEXATTRIB4FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat * v);$/;"	t
PFNGLVERTEXATTRIB4FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat * v);$/;"	t
PFNGLVERTEXATTRIB4HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEXATTRIB4HNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEXATTRIB4HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB4HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV * v);$/;"	t
PFNGLVERTEXATTRIB4IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4IVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint * v);$/;"	t
PFNGLVERTEXATTRIB4IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4IVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint * v);$/;"	t
PFNGLVERTEXATTRIB4NBVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NBVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte * v);$/;"	t
PFNGLVERTEXATTRIB4NBVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NBVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte * v);$/;"	t
PFNGLVERTEXATTRIB4NIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NIVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint * v);$/;"	t
PFNGLVERTEXATTRIB4NIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint * v);$/;"	t
PFNGLVERTEXATTRIB4NSVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NSVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIB4NSVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NSVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIB4NUBARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUBVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte * v);$/;"	t
PFNGLVERTEXATTRIB4NUBVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUBVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte * v);$/;"	t
PFNGLVERTEXATTRIB4NUIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint * v);$/;"	t
PFNGLVERTEXATTRIB4NUIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint * v);$/;"	t
PFNGLVERTEXATTRIB4NUSVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort * v);$/;"	t
PFNGLVERTEXATTRIB4NUSVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort * v);$/;"	t
PFNGLVERTEXATTRIB4SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIB4SVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIB4SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIB4UBNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4UBNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4UBVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte * v);$/;"	t
PFNGLVERTEXATTRIB4UBVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte * v);$/;"	t
PFNGLVERTEXATTRIB4UBVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte * v);$/;"	t
PFNGLVERTEXATTRIB4UIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4UIVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint * v);$/;"	t
PFNGLVERTEXATTRIB4UIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4UIVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint * v);$/;"	t
PFNGLVERTEXATTRIB4USVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4USVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort * v);$/;"	t
PFNGLVERTEXATTRIB4USVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4USVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort * v);$/;"	t
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVERTEXATTRIBDIVISORARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBFORMATNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBI1IEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);$/;"	t
PFNGLVERTEXATTRIBI1IEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);$/;"	t
PFNGLVERTEXATTRIBI1IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t
PFNGLVERTEXATTRIBI1IVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI1IVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint * v);$/;"	t
PFNGLVERTEXATTRIBI1IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI1UIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);$/;"	t
PFNGLVERTEXATTRIBI1UIEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);$/;"	t
PFNGLVERTEXATTRIBI1UIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t
PFNGLVERTEXATTRIBI1UIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI1UIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint * v);$/;"	t
PFNGLVERTEXATTRIBI1UIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI2IEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);$/;"	t
PFNGLVERTEXATTRIBI2IEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);$/;"	t
PFNGLVERTEXATTRIBI2IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t
PFNGLVERTEXATTRIBI2IVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI2IVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint * v);$/;"	t
PFNGLVERTEXATTRIBI2IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI2UIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);$/;"	t
PFNGLVERTEXATTRIBI2UIEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);$/;"	t
PFNGLVERTEXATTRIBI2UIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t
PFNGLVERTEXATTRIBI2UIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI2UIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint * v);$/;"	t
PFNGLVERTEXATTRIBI2UIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI3IEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXATTRIBI3IEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXATTRIBI3IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXATTRIBI3IVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI3IVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint * v);$/;"	t
PFNGLVERTEXATTRIBI3IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI3UIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t
PFNGLVERTEXATTRIBI3UIEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t
PFNGLVERTEXATTRIBI3UIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t
PFNGLVERTEXATTRIBI3UIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI3UIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint * v);$/;"	t
PFNGLVERTEXATTRIBI3UIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4BVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIBI4BVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte * v);$/;"	t
PFNGLVERTEXATTRIBI4BVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIBI4IEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXATTRIBI4IEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXATTRIBI4IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXATTRIBI4IVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI4IVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint * v);$/;"	t
PFNGLVERTEXATTRIBI4IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI4SVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBI4SVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIBI4SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBI4UBVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIBI4UBVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte * v);$/;"	t
PFNGLVERTEXATTRIBI4UBVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIBI4UIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLVERTEXATTRIBI4UIEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLVERTEXATTRIBI4UIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLVERTEXATTRIBI4UIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4UIVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint * v);$/;"	t
PFNGLVERTEXATTRIBI4UIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4USVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBI4USVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort * v);$/;"	t
PFNGLVERTEXATTRIBI4USVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBIFORMATNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBIPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBIPOINTEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);$/;"	t
PFNGLVERTEXATTRIBIPOINTERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid * pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid * pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid * pointer);$/;"	t
PFNGLVERTEXATTRIBS1DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS1DVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdouble * v);$/;"	t
PFNGLVERTEXATTRIBS1FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS1FVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat * v);$/;"	t
PFNGLVERTEXATTRIBS1HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS1HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV * v);$/;"	t
PFNGLVERTEXATTRIBS1SVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS1SVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIBS2DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS2DVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdouble * v);$/;"	t
PFNGLVERTEXATTRIBS2FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS2FVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat * v);$/;"	t
PFNGLVERTEXATTRIBS2HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS2HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV * v);$/;"	t
PFNGLVERTEXATTRIBS2SVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS2SVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIBS3DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS3DVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdouble * v);$/;"	t
PFNGLVERTEXATTRIBS3FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS3FVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat * v);$/;"	t
PFNGLVERTEXATTRIBS3HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS3HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV * v);$/;"	t
PFNGLVERTEXATTRIBS3SVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS3SVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIBS4DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS4DVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdouble * v);$/;"	t
PFNGLVERTEXATTRIBS4FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS4FVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat * v);$/;"	t
PFNGLVERTEXATTRIBS4HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS4HVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV * v);$/;"	t
PFNGLVERTEXATTRIBS4SVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS4SVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort * v);$/;"	t
PFNGLVERTEXATTRIBS4UBVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIBS4UBVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyte * v);$/;"	t
PFNGLVERTEXBLENDARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	t
PFNGLVERTEXBLENDARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	t
PFNGLVERTEXBLENDENVFATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLVERTEXBLENDENVFATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLVERTEXBLENDENVIATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXBLENDENVIATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXFORMATNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLVERTEXPOINTEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer);$/;"	t
PFNGLVERTEXPOINTERLISTIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLVERTEXPOINTERLISTIBMPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* * pointer, GLint ptrstride);$/;"	t
PFNGLVERTEXPOINTERVINTELPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLVERTEXPOINTERVINTELPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* * pointer);$/;"	t
PFNGLVERTEXSTREAM1DATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	t
PFNGLVERTEXSTREAM1DATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	t
PFNGLVERTEXSTREAM1DVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM1DVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble * coords);$/;"	t
PFNGLVERTEXSTREAM1FATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	t
PFNGLVERTEXSTREAM1FATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	t
PFNGLVERTEXSTREAM1FVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM1FVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat * coords);$/;"	t
PFNGLVERTEXSTREAM1IATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	t
PFNGLVERTEXSTREAM1IATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	t
PFNGLVERTEXSTREAM1IVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM1IVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint * coords);$/;"	t
PFNGLVERTEXSTREAM1SATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	t
PFNGLVERTEXSTREAM1SATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	t
PFNGLVERTEXSTREAM1SVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM1SVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort * coords);$/;"	t
PFNGLVERTEXSTREAM2DATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXSTREAM2DATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXSTREAM2DVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM2DVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble * coords);$/;"	t
PFNGLVERTEXSTREAM2FATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXSTREAM2FATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXSTREAM2FVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM2FVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat * coords);$/;"	t
PFNGLVERTEXSTREAM2IATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	t
PFNGLVERTEXSTREAM2IATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	t
PFNGLVERTEXSTREAM2IVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM2IVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint * coords);$/;"	t
PFNGLVERTEXSTREAM2SATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXSTREAM2SATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXSTREAM2SVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM2SVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort * coords);$/;"	t
PFNGLVERTEXSTREAM3DATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXSTREAM3DATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXSTREAM3DVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM3DVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble * coords);$/;"	t
PFNGLVERTEXSTREAM3FATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXSTREAM3FATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXSTREAM3FVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM3FVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat * coords);$/;"	t
PFNGLVERTEXSTREAM3IATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXSTREAM3IATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXSTREAM3IVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM3IVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint * coords);$/;"	t
PFNGLVERTEXSTREAM3SATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXSTREAM3SATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXSTREAM3SVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM3SVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort * coords);$/;"	t
PFNGLVERTEXSTREAM4DATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXSTREAM4DATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXSTREAM4DVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM4DVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble * coords);$/;"	t
PFNGLVERTEXSTREAM4FATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXSTREAM4FATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXSTREAM4FVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM4FVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat * coords);$/;"	t
PFNGLVERTEXSTREAM4IATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXSTREAM4IATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXSTREAM4IVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM4IVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint * coords);$/;"	t
PFNGLVERTEXSTREAM4SATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXSTREAM4SATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXSTREAM4SVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM4SVATIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort * coords);$/;"	t
PFNGLVERTEXWEIGHTFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	t
PFNGLVERTEXWEIGHTFEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	t
PFNGLVERTEXWEIGHTFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);$/;"	t
PFNGLVERTEXWEIGHTFVEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat * weight);$/;"	t
PFNGLVERTEXWEIGHTHNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);$/;"	t
PFNGLVERTEXWEIGHTHNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);$/;"	t
PFNGLVERTEXWEIGHTHVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);$/;"	t
PFNGLVERTEXWEIGHTHVNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV * weight);$/;"	t
PFNGLVERTEXWEIGHTPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLsizei size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXWEIGHTPOINTEREXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLsizei size, GLenum type, GLsizei stride, const GLvoid * pointer);$/;"	t
PFNGLVIDEOCAPTURENVPROC	include/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLVIDEOCAPTURENVPROC) (GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);$/;"	t
PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);$/;"	t
PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);$/;"	t
PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);$/;"	t
PFNGLWAITSYNCPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLWEIGHTBVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);$/;"	t
PFNGLWEIGHTBVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte * weights);$/;"	t
PFNGLWEIGHTDVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);$/;"	t
PFNGLWEIGHTDVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble * weights);$/;"	t
PFNGLWEIGHTFVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);$/;"	t
PFNGLWEIGHTFVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat * weights);$/;"	t
PFNGLWEIGHTIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);$/;"	t
PFNGLWEIGHTIVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint * weights);$/;"	t
PFNGLWEIGHTPOINTERARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLWEIGHTPOINTERARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);$/;"	t
PFNGLWEIGHTSVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);$/;"	t
PFNGLWEIGHTSVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort * weights);$/;"	t
PFNGLWEIGHTUBVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);$/;"	t
PFNGLWEIGHTUBVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte * weights);$/;"	t
PFNGLWEIGHTUIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);$/;"	t
PFNGLWEIGHTUIVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint * weights);$/;"	t
PFNGLWEIGHTUSVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);$/;"	t
PFNGLWEIGHTUSVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort * weights);$/;"	t
PFNGLWINDOWPOS2DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble * v);$/;"	t
PFNGLWINDOWPOS2DVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble * v);$/;"	t
PFNGLWINDOWPOS2DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble * v);$/;"	t
PFNGLWINDOWPOS2FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat * v);$/;"	t
PFNGLWINDOWPOS2FVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat * v);$/;"	t
PFNGLWINDOWPOS2FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat * v);$/;"	t
PFNGLWINDOWPOS2IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint * v);$/;"	t
PFNGLWINDOWPOS2IVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint * v);$/;"	t
PFNGLWINDOWPOS2IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint * v);$/;"	t
PFNGLWINDOWPOS2SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort * v);$/;"	t
PFNGLWINDOWPOS2SVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort * v);$/;"	t
PFNGLWINDOWPOS2SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort * v);$/;"	t
PFNGLWINDOWPOS3DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble * v);$/;"	t
PFNGLWINDOWPOS3DVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble * v);$/;"	t
PFNGLWINDOWPOS3DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble * v);$/;"	t
PFNGLWINDOWPOS3FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat * v);$/;"	t
PFNGLWINDOWPOS3FVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat * v);$/;"	t
PFNGLWINDOWPOS3FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat * v);$/;"	t
PFNGLWINDOWPOS3IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint * v);$/;"	t
PFNGLWINDOWPOS3IVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint * v);$/;"	t
PFNGLWINDOWPOS3IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint * v);$/;"	t
PFNGLWINDOWPOS3SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVARBPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort * v);$/;"	t
PFNGLWINDOWPOS3SVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort * v);$/;"	t
PFNGLWINDOWPOS3SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort * v);$/;"	t
PFNGLWINDOWPOS4DMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLWINDOWPOS4DMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLWINDOWPOS4DVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS4DVMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble * v);$/;"	t
PFNGLWINDOWPOS4FMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLWINDOWPOS4FMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLWINDOWPOS4FVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS4FVMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat * v);$/;"	t
PFNGLWINDOWPOS4IMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLWINDOWPOS4IMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLWINDOWPOS4IVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS4IVMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint * v);$/;"	t
PFNGLWINDOWPOS4SMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLWINDOWPOS4SMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLWINDOWPOS4SVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS4SVMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort * v);$/;"	t
PFNGLWRITEMASKEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFNGLWRITEMASKEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFNGLXALLOCATEMEMORYMESAPROC	include/GL/glx.h	/^typedef void * ( * PFNGLXALLOCATEMEMORYMESAPROC) (Display *dpy, int scrn, size_t size, float readfreq, float writefreq, float priority);$/;"	t
PFNGLXALLOCATEMEMORYNVPROC	include/GL/glx.h	/^typedef void * ( * PFNGLXALLOCATEMEMORYNVPROC) (GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);$/;"	t
PFNGLXASSOCIATEDMPBUFFERSGIXPROC	include/GL/glxext.h	/^typedef Bool ( * PFNGLXASSOCIATEDMPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuffer, DMparams *params, DMbuffer dmbuffer);$/;"	t
PFNGLXBEGINFRAMETRACKINGMESAPROC	include/GL/glx.h	/^typedef int (*PFNGLXBEGINFRAMETRACKINGMESAPROC)(Display *dpy, GLXDrawable drawable);$/;"	t
PFNGLXBINDCHANNELTOWINDOWSGIXPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXBINDCHANNELTOWINDOWSGIXPROC) (Display *display, int screen, int channel, Window window);$/;"	t
PFNGLXBINDCHANNELTOWINDOWSGIXPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXBINDCHANNELTOWINDOWSGIXPROC) (Display * display, int screen, int channel, Window window);$/;"	t
PFNGLXBINDHYPERPIPESGIXPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXBINDHYPERPIPESGIXPROC) (Display *dpy, int hpId);$/;"	t
PFNGLXBINDHYPERPIPESGIXPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXBINDHYPERPIPESGIXPROC) (Display * dpy, int hpId);$/;"	t
PFNGLXBINDSWAPBARRIERNVPROC	include/GL/glxext.h	/^typedef Bool ( * PFNGLXBINDSWAPBARRIERNVPROC) (Display *dpy, GLuint group, GLuint barrier);$/;"	t
PFNGLXBINDSWAPBARRIERSGIXPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXBINDSWAPBARRIERSGIXPROC) (Display *dpy, GLXDrawable drawable, int barrier);$/;"	t
PFNGLXBINDSWAPBARRIERSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLXBINDSWAPBARRIERSGIXPROC) (Display * dpy, GLXDrawable drawable, int barrier);$/;"	t
PFNGLXBINDTEXIMAGEEXTPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);$/;"	t
PFNGLXBINDVIDEOCAPTUREDEVICENVPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXBINDVIDEOCAPTUREDEVICENVPROC) (Display *dpy, unsigned int video_capture_slot, GLXVideoCaptureDeviceNV device);$/;"	t
PFNGLXBINDVIDEODEVICENVPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXBINDVIDEODEVICENVPROC) (Display *dpy, unsigned int video_slot, unsigned int video_device, const int *attrib_list);$/;"	t
PFNGLXBINDVIDEOIMAGENVPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXBINDVIDEOIMAGENVPROC) (Display *dpy, GLXVideoDeviceNV VideoDevice, GLXPbuffer pbuf, int iVideoBuffer);$/;"	t
PFNGLXCHANNELRECTSGIXPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXCHANNELRECTSGIXPROC) (Display *display, int screen, int channel, int x, int y, int w, int h);$/;"	t
PFNGLXCHANNELRECTSGIXPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXCHANNELRECTSGIXPROC) (Display * display, int screen, int channel, int x, int y, int w, int h);$/;"	t
PFNGLXCHANNELRECTSYNCSGIXPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXCHANNELRECTSYNCSGIXPROC) (Display *display, int screen, int channel, GLenum synctype);$/;"	t
PFNGLXCHANNELRECTSYNCSGIXPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXCHANNELRECTSYNCSGIXPROC) (Display * display, int screen, int channel, GLenum synctype);$/;"	t
PFNGLXCHOOSEFBCONFIGPROC	include/GL/glx.h	/^typedef GLXFBConfig * (* PFNGLXCHOOSEFBCONFIGPROC) (Display *dpy, int screen, const int *attrib_list, int *nelements);$/;"	t
PFNGLXCHOOSEFBCONFIGPROC	include/GL/glxext.h	/^typedef GLXFBConfig * ( * PFNGLXCHOOSEFBCONFIGPROC) (Display *dpy, int screen, const int *attrib_list, int *nelements);$/;"	t
PFNGLXCHOOSEFBCONFIGPROC	shared/GLee.h	/^typedef GLXFBConfig * (APIENTRYP PFNGLXCHOOSEFBCONFIGPROC) (Display * dpy, int screen, const int * attrib_list, int * nelements);$/;"	t
PFNGLXCHOOSEFBCONFIGSGIXPROC	include/GL/glxext.h	/^typedef GLXFBConfigSGIX * ( * PFNGLXCHOOSEFBCONFIGSGIXPROC) (Display *dpy, int screen, int *attrib_list, int *nelements);$/;"	t
PFNGLXCHOOSEFBCONFIGSGIXPROC	shared/GLee.h	/^typedef GLXFBConfigSGIX * (APIENTRYP PFNGLXCHOOSEFBCONFIGSGIXPROC) (Display * dpy, int screen, int * attrib_list, int * nelements);$/;"	t
PFNGLXCOPYIMAGESUBDATANVPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXCOPYIMAGESUBDATANVPROC) (Display *dpy, GLXContext srcCtx, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLXContext dstCtx, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLXCOPYSUBBUFFERMESAPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXCOPYSUBBUFFERMESAPROC) (Display *dpy, GLXDrawable drawable, int x, int y, int width, int height);$/;"	t
PFNGLXCOPYSUBBUFFERMESAPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLXCOPYSUBBUFFERMESAPROC) (Display * dpy, GLXDrawable drawable, int x, int y, int width, int height);$/;"	t
PFNGLXCREATECONTEXTATTRIBSARBPROC	include/GL/glxext.h	/^typedef GLXContext ( * PFNGLXCREATECONTEXTATTRIBSARBPROC) (Display *dpy, GLXFBConfig config, GLXContext share_context, Bool direct, const int *attrib_list);$/;"	t
PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC	include/GL/glxext.h	/^typedef GLXContext ( * PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, int render_type, GLXContext share_list, Bool direct);$/;"	t
PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC	shared/GLee.h	/^typedef GLXContext (APIENTRYP PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC) (Display * dpy, GLXFBConfigSGIX config, int render_type, GLXContext share_list, Bool direct);$/;"	t
PFNGLXCREATEGLXPBUFFERSGIXPROC	include/GL/glxext.h	/^typedef GLXPbufferSGIX ( * PFNGLXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);$/;"	t
PFNGLXCREATEGLXPBUFFERSGIXPROC	shared/GLee.h	/^typedef GLXPbufferSGIX (APIENTRYP PFNGLXCREATEGLXPBUFFERSGIXPROC) (Display * dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int * attrib_list);$/;"	t
PFNGLXCREATEGLXPIXMAPMESAPROC	include/GL/glxext.h	/^typedef GLXPixmap ( * PFNGLXCREATEGLXPIXMAPMESAPROC) (Display *dpy, XVisualInfo *visual, Pixmap pixmap, Colormap cmap);$/;"	t
PFNGLXCREATEGLXPIXMAPMESAPROC	shared/GLee.h	/^typedef GLXPixmap (APIENTRYP PFNGLXCREATEGLXPIXMAPMESAPROC) (Display * dpy, XVisualInfo * visual, Pixmap pixmap, Colormap cmap);$/;"	t
PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC	include/GL/glxext.h	/^typedef GLXPixmap ( * PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, Pixmap pixmap);$/;"	t
PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC	shared/GLee.h	/^typedef GLXPixmap (APIENTRYP PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC) (Display * dpy, GLXFBConfigSGIX config, Pixmap pixmap);$/;"	t
PFNGLXCREATEGLXVIDEOSOURCESGIXPROC	include/GL/glxext.h	/^typedef GLXVideoSourceSGIX ( * PFNGLXCREATEGLXVIDEOSOURCESGIXPROC) (Display *display, int screen, VLServer server, VLPath path, int nodeClass, VLNode drainNode);$/;"	t
PFNGLXCREATENEWCONTEXTPROC	include/GL/glx.h	/^typedef GLXContext (* PFNGLXCREATENEWCONTEXTPROC) (Display *dpy, GLXFBConfig config, int render_type, GLXContext share_list, Bool direct);$/;"	t
PFNGLXCREATENEWCONTEXTPROC	include/GL/glxext.h	/^typedef GLXContext ( * PFNGLXCREATENEWCONTEXTPROC) (Display *dpy, GLXFBConfig config, int render_type, GLXContext share_list, Bool direct);$/;"	t
PFNGLXCREATENEWCONTEXTPROC	shared/GLee.h	/^typedef GLXContext (APIENTRYP PFNGLXCREATENEWCONTEXTPROC) (Display * dpy, GLXFBConfig config, int render_type, GLXContext share_list, Bool direct);$/;"	t
PFNGLXCREATEPBUFFERPROC	include/GL/glx.h	/^typedef GLXPbuffer (* PFNGLXCREATEPBUFFERPROC) (Display *dpy, GLXFBConfig config, const int *attrib_list);$/;"	t
PFNGLXCREATEPBUFFERPROC	include/GL/glxext.h	/^typedef GLXPbuffer ( * PFNGLXCREATEPBUFFERPROC) (Display *dpy, GLXFBConfig config, const int *attrib_list);$/;"	t
PFNGLXCREATEPBUFFERPROC	shared/GLee.h	/^typedef GLXPbuffer (APIENTRYP PFNGLXCREATEPBUFFERPROC) (Display * dpy, GLXFBConfig config, const int * attrib_list);$/;"	t
PFNGLXCREATEPIXMAPPROC	include/GL/glx.h	/^typedef GLXPixmap (* PFNGLXCREATEPIXMAPPROC) (Display *dpy, GLXFBConfig config, Pixmap pixmap, const int *attrib_list);$/;"	t
PFNGLXCREATEPIXMAPPROC	include/GL/glxext.h	/^typedef GLXPixmap ( * PFNGLXCREATEPIXMAPPROC) (Display *dpy, GLXFBConfig config, Pixmap pixmap, const int *attrib_list);$/;"	t
PFNGLXCREATEPIXMAPPROC	shared/GLee.h	/^typedef GLXPixmap (APIENTRYP PFNGLXCREATEPIXMAPPROC) (Display * dpy, GLXFBConfig config, Pixmap pixmap, const int * attrib_list);$/;"	t
PFNGLXCREATEWINDOWPROC	include/GL/glx.h	/^typedef GLXWindow (* PFNGLXCREATEWINDOWPROC) (Display *dpy, GLXFBConfig config, Window win, const int *attrib_list);$/;"	t
PFNGLXCREATEWINDOWPROC	include/GL/glxext.h	/^typedef GLXWindow ( * PFNGLXCREATEWINDOWPROC) (Display *dpy, GLXFBConfig config, Window win, const int *attrib_list);$/;"	t
PFNGLXCREATEWINDOWPROC	shared/GLee.h	/^typedef GLXWindow (APIENTRYP PFNGLXCREATEWINDOWPROC) (Display * dpy, GLXFBConfig config, Window win, const int * attrib_list);$/;"	t
PFNGLXCUSHIONSGIPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXCUSHIONSGIPROC) (Display *dpy, Window window, float cushion);$/;"	t
PFNGLXCUSHIONSGIPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLXCUSHIONSGIPROC) (Display * dpy, Window window, float cushion);$/;"	t
PFNGLXDESTROYGLXPBUFFERSGIXPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);$/;"	t
PFNGLXDESTROYGLXPBUFFERSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLXDESTROYGLXPBUFFERSGIXPROC) (Display * dpy, GLXPbufferSGIX pbuf);$/;"	t
PFNGLXDESTROYGLXVIDEOSOURCESGIXPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXDESTROYGLXVIDEOSOURCESGIXPROC) (Display *dpy, GLXVideoSourceSGIX glxvideosource);$/;"	t
PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC) (Display *dpy, int hpId);$/;"	t
PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC) (Display * dpy, int hpId);$/;"	t
PFNGLXDESTROYPBUFFERPROC	include/GL/glx.h	/^typedef void (* PFNGLXDESTROYPBUFFERPROC) (Display *dpy, GLXPbuffer pbuf);$/;"	t
PFNGLXDESTROYPBUFFERPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXDESTROYPBUFFERPROC) (Display *dpy, GLXPbuffer pbuf);$/;"	t
PFNGLXDESTROYPBUFFERPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLXDESTROYPBUFFERPROC) (Display * dpy, GLXPbuffer pbuf);$/;"	t
PFNGLXDESTROYPIXMAPPROC	include/GL/glx.h	/^typedef void (* PFNGLXDESTROYPIXMAPPROC) (Display *dpy, GLXPixmap pixmap);$/;"	t
PFNGLXDESTROYPIXMAPPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXDESTROYPIXMAPPROC) (Display *dpy, GLXPixmap pixmap);$/;"	t
PFNGLXDESTROYPIXMAPPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLXDESTROYPIXMAPPROC) (Display * dpy, GLXPixmap pixmap);$/;"	t
PFNGLXDESTROYWINDOWPROC	include/GL/glx.h	/^typedef void (* PFNGLXDESTROYWINDOWPROC) (Display *dpy, GLXWindow win);$/;"	t
PFNGLXDESTROYWINDOWPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXDESTROYWINDOWPROC) (Display *dpy, GLXWindow win);$/;"	t
PFNGLXDESTROYWINDOWPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLXDESTROYWINDOWPROC) (Display * dpy, GLXWindow win);$/;"	t
PFNGLXENDFRAMETRACKINGMESAPROC	include/GL/glx.h	/^typedef int (*PFNGLXENDFRAMETRACKINGMESAPROC)(Display *dpy, GLXDrawable drawable);$/;"	t
PFNGLXENUMERATEVIDEOCAPTUREDEVICESNVPROC	include/GL/glxext.h	/^typedef GLXVideoCaptureDeviceNV * ( * PFNGLXENUMERATEVIDEOCAPTUREDEVICESNVPROC) (Display *dpy, int screen, int *nelements);$/;"	t
PFNGLXENUMERATEVIDEODEVICESNVPROC	include/GL/glxext.h	/^typedef unsigned int * ( * PFNGLXENUMERATEVIDEODEVICESNVPROC) (Display *dpy, int screen, int *nelements);$/;"	t
PFNGLXFREECONTEXTEXTPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXFREECONTEXTEXTPROC) (Display *dpy, GLXContext context);$/;"	t
PFNGLXFREECONTEXTEXTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLXFREECONTEXTEXTPROC) (Display * dpy, GLXContext context);$/;"	t
PFNGLXFREEMEMORYMESAPROC	include/GL/glx.h	/^typedef void ( * PFNGLXFREEMEMORYMESAPROC) (Display *dpy, int scrn, void *pointer);$/;"	t
PFNGLXFREEMEMORYNVPROC	include/GL/glx.h	/^typedef void ( * PFNGLXFREEMEMORYNVPROC) (GLvoid *pointer);$/;"	t
PFNGLXGETAGPOFFSETMESAPROC	include/GL/glxext.h	/^typedef unsigned int ( * PFNGLXGETAGPOFFSETMESAPROC) (const void *pointer);$/;"	t
PFNGLXGETAGPOFFSETMESAPROC	shared/GLee.h	/^typedef unsigned int (APIENTRYP PFNGLXGETAGPOFFSETMESAPROC) (const void * pointer);$/;"	t
PFNGLXGETCONTEXTIDEXTPROC	include/GL/glxext.h	/^typedef GLXContextID ( * PFNGLXGETCONTEXTIDEXTPROC) (const GLXContext context);$/;"	t
PFNGLXGETCONTEXTIDEXTPROC	shared/GLee.h	/^typedef GLXContextID (APIENTRYP PFNGLXGETCONTEXTIDEXTPROC) (const GLXContext context);$/;"	t
PFNGLXGETCURRENTDISPLAYEXTPROC	include/GL/glxext.h	/^typedef Display * ( * PFNGLXGETCURRENTDISPLAYEXTPROC) (void);$/;"	t
PFNGLXGETCURRENTDISPLAYEXTPROC	shared/GLee.h	/^typedef Display * (APIENTRYP PFNGLXGETCURRENTDISPLAYEXTPROC) ();$/;"	t
PFNGLXGETCURRENTDISPLAYPROC	include/GL/glx.h	/^typedef Display * (* PFNGLXGETCURRENTDISPLAYPROC) (void);$/;"	t
PFNGLXGETCURRENTDISPLAYPROC	include/GL/glxext.h	/^typedef Display * ( * PFNGLXGETCURRENTDISPLAYPROC) (void);$/;"	t
PFNGLXGETCURRENTDISPLAYPROC	shared/GLee.h	/^typedef Display * (APIENTRYP PFNGLXGETCURRENTDISPLAYPROC) ();$/;"	t
PFNGLXGETCURRENTREADDRAWABLEPROC	include/GL/glx.h	/^typedef GLXDrawable (* PFNGLXGETCURRENTREADDRAWABLEPROC) (void);$/;"	t
PFNGLXGETCURRENTREADDRAWABLEPROC	include/GL/glxext.h	/^typedef GLXDrawable ( * PFNGLXGETCURRENTREADDRAWABLEPROC) (void);$/;"	t
PFNGLXGETCURRENTREADDRAWABLEPROC	shared/GLee.h	/^typedef GLXDrawable (APIENTRYP PFNGLXGETCURRENTREADDRAWABLEPROC) ();$/;"	t
PFNGLXGETCURRENTREADDRAWABLESGIPROC	include/GL/glxext.h	/^typedef GLXDrawable ( * PFNGLXGETCURRENTREADDRAWABLESGIPROC) (void);$/;"	t
PFNGLXGETCURRENTREADDRAWABLESGIPROC	shared/GLee.h	/^typedef GLXDrawable (APIENTRYP PFNGLXGETCURRENTREADDRAWABLESGIPROC) ();$/;"	t
PFNGLXGETFBCONFIGATTRIBPROC	include/GL/glx.h	/^typedef int (* PFNGLXGETFBCONFIGATTRIBPROC) (Display *dpy, GLXFBConfig config, int attribute, int *value);$/;"	t
PFNGLXGETFBCONFIGATTRIBPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXGETFBCONFIGATTRIBPROC) (Display *dpy, GLXFBConfig config, int attribute, int *value);$/;"	t
PFNGLXGETFBCONFIGATTRIBPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXGETFBCONFIGATTRIBPROC) (Display * dpy, GLXFBConfig config, int attribute, int * value);$/;"	t
PFNGLXGETFBCONFIGATTRIBSGIXPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXGETFBCONFIGATTRIBSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, int attribute, int *value);$/;"	t
PFNGLXGETFBCONFIGATTRIBSGIXPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXGETFBCONFIGATTRIBSGIXPROC) (Display * dpy, GLXFBConfigSGIX config, int attribute, int * value);$/;"	t
PFNGLXGETFBCONFIGFROMVISUALSGIXPROC	include/GL/glxext.h	/^typedef GLXFBConfigSGIX ( * PFNGLXGETFBCONFIGFROMVISUALSGIXPROC) (Display *dpy, XVisualInfo *vis);$/;"	t
PFNGLXGETFBCONFIGFROMVISUALSGIXPROC	shared/GLee.h	/^typedef GLXFBConfigSGIX (APIENTRYP PFNGLXGETFBCONFIGFROMVISUALSGIXPROC) (Display * dpy, XVisualInfo * vis);$/;"	t
PFNGLXGETFBCONFIGSPROC	include/GL/glx.h	/^typedef GLXFBConfig * (* PFNGLXGETFBCONFIGSPROC) (Display *dpy, int screen, int *nelements);$/;"	t
PFNGLXGETFBCONFIGSPROC	include/GL/glxext.h	/^typedef GLXFBConfig * ( * PFNGLXGETFBCONFIGSPROC) (Display *dpy, int screen, int *nelements);$/;"	t
PFNGLXGETFBCONFIGSPROC	shared/GLee.h	/^typedef GLXFBConfig * (APIENTRYP PFNGLXGETFBCONFIGSPROC) (Display * dpy, int screen, int * nelements);$/;"	t
PFNGLXGETFRAMEUSAGEMESAPROC	include/GL/glx.h	/^typedef int (*PFNGLXGETFRAMEUSAGEMESAPROC) (Display *dpy, GLXDrawable drawable, float *usage);$/;"	t
PFNGLXGETMEMORYOFFSETMESAPROC	include/GL/glx.h	/^typedef GLuint (* PFNGLXGETMEMORYOFFSETMESAPROC) (Display *dpy, int scrn, const void *pointer);$/;"	t
PFNGLXGETMSCRATEOMLPROC	include/GL/glxext.h	/^typedef Bool ( * PFNGLXGETMSCRATEOMLPROC) (Display *dpy, GLXDrawable drawable, int32_t *numerator, int32_t *denominator);$/;"	t
PFNGLXGETMSCRATEOMLPROC	shared/GLee.h	/^typedef Bool (APIENTRYP PFNGLXGETMSCRATEOMLPROC) (Display * dpy, GLXDrawable drawable, int32_t * numerator, int32_t * denominator);$/;"	t
PFNGLXGETPROCADDRESSARBPROC	include/GL/glxext.h	/^typedef __GLXextFuncPtr ( * PFNGLXGETPROCADDRESSARBPROC) (const GLubyte *procName);$/;"	t
PFNGLXGETPROCADDRESSARBPROC	shared/GLee.h	/^	typedef __GLXextFuncPtr ( * PFNGLXGETPROCADDRESSARBPROC) (const GLubyte *procName);$/;"	t
PFNGLXGETPROCADDRESSPROC	include/GL/glx.h	/^typedef __GLXextFuncPtr (* PFNGLXGETPROCADDRESSPROC) (const GLubyte *procName);$/;"	t
PFNGLXGETPROCADDRESSPROC	include/GL/glxext.h	/^typedef __GLXextFuncPtr ( * PFNGLXGETPROCADDRESSPROC) (const GLubyte *procName);$/;"	t
PFNGLXGETPROCADDRESSPROC	shared/GLee.h	/^typedef __GLXextFuncPtr (APIENTRYP PFNGLXGETPROCADDRESSPROC) (const GLubyte * procName);$/;"	t
PFNGLXGETSELECTEDEVENTPROC	include/GL/glx.h	/^typedef void (* PFNGLXGETSELECTEDEVENTPROC) (Display *dpy, GLXDrawable draw, unsigned long *event_mask);$/;"	t
PFNGLXGETSELECTEDEVENTPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXGETSELECTEDEVENTPROC) (Display *dpy, GLXDrawable draw, unsigned long *event_mask);$/;"	t
PFNGLXGETSELECTEDEVENTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLXGETSELECTEDEVENTPROC) (Display * dpy, GLXDrawable draw, unsigned long * event_mask);$/;"	t
PFNGLXGETSELECTEDEVENTSGIXPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);$/;"	t
PFNGLXGETSELECTEDEVENTSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLXGETSELECTEDEVENTSGIXPROC) (Display * dpy, GLXDrawable drawable, unsigned long * mask);$/;"	t
PFNGLXGETSWAPINTERVALMESAPROC	include/GL/glx.h	/^typedef int (*PFNGLXGETSWAPINTERVALMESAPROC)(void);$/;"	t
PFNGLXGETSYNCVALUESOMLPROC	include/GL/glxext.h	/^typedef Bool ( * PFNGLXGETSYNCVALUESOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t *ust, int64_t *msc, int64_t *sbc);$/;"	t
PFNGLXGETSYNCVALUESOMLPROC	shared/GLee.h	/^typedef Bool (APIENTRYP PFNGLXGETSYNCVALUESOMLPROC) (Display * dpy, GLXDrawable drawable, int64_t * ust, int64_t * msc, int64_t * sbc);$/;"	t
PFNGLXGETTRANSPARENTINDEXSUNPROC	include/GL/glxext.h	/^typedef Status ( * PFNGLXGETTRANSPARENTINDEXSUNPROC) (Display *dpy, Window overlay, Window underlay, long *pTransparentIndex);$/;"	t
PFNGLXGETTRANSPARENTINDEXSUNPROC	shared/GLee.h	/^typedef Status (APIENTRYP PFNGLXGETTRANSPARENTINDEXSUNPROC) (Display * dpy, Window overlay, Window underlay, long * pTransparentIndex);$/;"	t
PFNGLXGETVIDEODEVICENVPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXGETVIDEODEVICENVPROC) (Display *dpy, int screen, int numVideoDevices, GLXVideoDeviceNV *pVideoDevice);$/;"	t
PFNGLXGETVIDEOINFONVPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXGETVIDEOINFONVPROC) (Display *dpy, int screen, GLXVideoDeviceNV VideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo);$/;"	t
PFNGLXGETVIDEOSYNCSGIPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXGETVIDEOSYNCSGIPROC) (unsigned int *count);$/;"	t
PFNGLXGETVIDEOSYNCSGIPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXGETVIDEOSYNCSGIPROC) (unsigned int * count);$/;"	t
PFNGLXGETVISUALFROMFBCONFIGPROC	include/GL/glx.h	/^typedef XVisualInfo * (* PFNGLXGETVISUALFROMFBCONFIGPROC) (Display *dpy, GLXFBConfig config);$/;"	t
PFNGLXGETVISUALFROMFBCONFIGPROC	include/GL/glxext.h	/^typedef XVisualInfo * ( * PFNGLXGETVISUALFROMFBCONFIGPROC) (Display *dpy, GLXFBConfig config);$/;"	t
PFNGLXGETVISUALFROMFBCONFIGPROC	shared/GLee.h	/^typedef XVisualInfo * (APIENTRYP PFNGLXGETVISUALFROMFBCONFIGPROC) (Display * dpy, GLXFBConfig config);$/;"	t
PFNGLXGETVISUALFROMFBCONFIGSGIXPROC	include/GL/glxext.h	/^typedef XVisualInfo * ( * PFNGLXGETVISUALFROMFBCONFIGSGIXPROC) (Display *dpy, GLXFBConfigSGIX config);$/;"	t
PFNGLXGETVISUALFROMFBCONFIGSGIXPROC	shared/GLee.h	/^typedef XVisualInfo * (APIENTRYP PFNGLXGETVISUALFROMFBCONFIGSGIXPROC) (Display * dpy, GLXFBConfigSGIX config);$/;"	t
PFNGLXHYPERPIPEATTRIBSGIXPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXHYPERPIPEATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, int size, void *attribList);$/;"	t
PFNGLXHYPERPIPEATTRIBSGIXPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXHYPERPIPEATTRIBSGIXPROC) (Display * dpy, int timeSlice, int attrib, int size, void * attribList);$/;"	t
PFNGLXHYPERPIPECONFIGSGIXPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXHYPERPIPECONFIGSGIXPROC) (Display *dpy, int networkId, int npipes, GLXHyperpipeConfigSGIX *cfg, int *hpId);$/;"	t
PFNGLXHYPERPIPECONFIGSGIXPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXHYPERPIPECONFIGSGIXPROC) (Display * dpy, int networkId, int npipes, GLXHyperpipeConfigSGIX * cfg, int * hpId);$/;"	t
PFNGLXIMPORTCONTEXTEXTPROC	include/GL/glxext.h	/^typedef GLXContext ( * PFNGLXIMPORTCONTEXTEXTPROC) (Display *dpy, GLXContextID contextID);$/;"	t
PFNGLXIMPORTCONTEXTEXTPROC	shared/GLee.h	/^typedef GLXContext (APIENTRYP PFNGLXIMPORTCONTEXTEXTPROC) (Display * dpy, GLXContextID contextID);$/;"	t
PFNGLXJOINSWAPGROUPNVPROC	include/GL/glxext.h	/^typedef Bool ( * PFNGLXJOINSWAPGROUPNVPROC) (Display *dpy, GLXDrawable drawable, GLuint group);$/;"	t
PFNGLXJOINSWAPGROUPSGIXPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXJOINSWAPGROUPSGIXPROC) (Display *dpy, GLXDrawable drawable, GLXDrawable member);$/;"	t
PFNGLXJOINSWAPGROUPSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLXJOINSWAPGROUPSGIXPROC) (Display * dpy, GLXDrawable drawable, GLXDrawable member);$/;"	t
PFNGLXLOCKVIDEOCAPTUREDEVICENVPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXLOCKVIDEOCAPTUREDEVICENVPROC) (Display *dpy, GLXVideoCaptureDeviceNV device);$/;"	t
PFNGLXMAKECONTEXTCURRENTPROC	include/GL/glx.h	/^typedef Bool (* PFNGLXMAKECONTEXTCURRENTPROC) (Display *dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx);$/;"	t
PFNGLXMAKECONTEXTCURRENTPROC	include/GL/glxext.h	/^typedef Bool ( * PFNGLXMAKECONTEXTCURRENTPROC) (Display *dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx);$/;"	t
PFNGLXMAKECONTEXTCURRENTPROC	shared/GLee.h	/^typedef Bool (APIENTRYP PFNGLXMAKECONTEXTCURRENTPROC) (Display * dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx);$/;"	t
PFNGLXMAKECURRENTREADSGIPROC	include/GL/glxext.h	/^typedef Bool ( * PFNGLXMAKECURRENTREADSGIPROC) (Display *dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx);$/;"	t
PFNGLXMAKECURRENTREADSGIPROC	shared/GLee.h	/^typedef Bool (APIENTRYP PFNGLXMAKECURRENTREADSGIPROC) (Display * dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx);$/;"	t
PFNGLXQUERYCHANNELDELTASSGIXPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXQUERYCHANNELDELTASSGIXPROC) (Display *display, int screen, int channel, int *x, int *y, int *w, int *h);$/;"	t
PFNGLXQUERYCHANNELDELTASSGIXPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXQUERYCHANNELDELTASSGIXPROC) (Display * display, int screen, int channel, int * x, int * y, int * w, int * h);$/;"	t
PFNGLXQUERYCHANNELRECTSGIXPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXQUERYCHANNELRECTSGIXPROC) (Display *display, int screen, int channel, int *dx, int *dy, int *dw, int *dh);$/;"	t
PFNGLXQUERYCHANNELRECTSGIXPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXQUERYCHANNELRECTSGIXPROC) (Display * display, int screen, int channel, int * dx, int * dy, int * dw, int * dh);$/;"	t
PFNGLXQUERYCONTEXTINFOEXTPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXQUERYCONTEXTINFOEXTPROC) (Display *dpy, GLXContext context, int attribute, int *value);$/;"	t
PFNGLXQUERYCONTEXTINFOEXTPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXQUERYCONTEXTINFOEXTPROC) (Display * dpy, GLXContext context, int attribute, int * value);$/;"	t
PFNGLXQUERYCONTEXTPROC	include/GL/glx.h	/^typedef int (* PFNGLXQUERYCONTEXTPROC) (Display *dpy, GLXContext ctx, int attribute, int *value);$/;"	t
PFNGLXQUERYCONTEXTPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXQUERYCONTEXTPROC) (Display *dpy, GLXContext ctx, int attribute, int *value);$/;"	t
PFNGLXQUERYCONTEXTPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXQUERYCONTEXTPROC) (Display * dpy, GLXContext ctx, int attribute, int * value);$/;"	t
PFNGLXQUERYDRAWABLEPROC	include/GL/glx.h	/^typedef void (* PFNGLXQUERYDRAWABLEPROC) (Display *dpy, GLXDrawable draw, int attribute, unsigned int *value);$/;"	t
PFNGLXQUERYDRAWABLEPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXQUERYDRAWABLEPROC) (Display *dpy, GLXDrawable draw, int attribute, unsigned int *value);$/;"	t
PFNGLXQUERYDRAWABLEPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLXQUERYDRAWABLEPROC) (Display * dpy, GLXDrawable draw, int attribute, unsigned int * value);$/;"	t
PFNGLXQUERYFRAMECOUNTNVPROC	include/GL/glxext.h	/^typedef Bool ( * PFNGLXQUERYFRAMECOUNTNVPROC) (Display *dpy, int screen, GLuint *count);$/;"	t
PFNGLXQUERYFRAMETRACKINGMESAPROC	include/GL/glx.h	/^typedef int (*PFNGLXQUERYFRAMETRACKINGMESAPROC)(Display *dpy, GLXDrawable drawable, int64_t *swapCount, int64_t *missedFrames, float *lastMissedUsage);$/;"	t
PFNGLXQUERYGLXPBUFFERSGIXPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);$/;"	t
PFNGLXQUERYGLXPBUFFERSGIXPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXQUERYGLXPBUFFERSGIXPROC) (Display * dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int * value);$/;"	t
PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, int size, void *returnAttribList);$/;"	t
PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC) (Display * dpy, int timeSlice, int attrib, int size, void * returnAttribList);$/;"	t
PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, int size, void *attribList, void *returnAttribList);$/;"	t
PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC) (Display * dpy, int timeSlice, int attrib, int size, void * attribList, void * returnAttribList);$/;"	t
PFNGLXQUERYHYPERPIPECONFIGSGIXPROC	include/GL/glxext.h	/^typedef GLXHyperpipeConfigSGIX * ( * PFNGLXQUERYHYPERPIPECONFIGSGIXPROC) (Display *dpy, int hpId, int *npipes);$/;"	t
PFNGLXQUERYHYPERPIPECONFIGSGIXPROC	shared/GLee.h	/^typedef GLXHyperpipeConfigSGIX * (APIENTRYP PFNGLXQUERYHYPERPIPECONFIGSGIXPROC) (Display * dpy, int hpId, int * npipes);$/;"	t
PFNGLXQUERYHYPERPIPENETWORKSGIXPROC	include/GL/glxext.h	/^typedef GLXHyperpipeNetworkSGIX * ( * PFNGLXQUERYHYPERPIPENETWORKSGIXPROC) (Display *dpy, int *npipes);$/;"	t
PFNGLXQUERYHYPERPIPENETWORKSGIXPROC	shared/GLee.h	/^typedef GLXHyperpipeNetworkSGIX * (APIENTRYP PFNGLXQUERYHYPERPIPENETWORKSGIXPROC) (Display * dpy, int * npipes);$/;"	t
PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC	include/GL/glxext.h	/^typedef Bool ( * PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC) (Display *dpy, int screen, int *max);$/;"	t
PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC	shared/GLee.h	/^typedef Bool (APIENTRYP PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC) (Display * dpy, int screen, int * max);$/;"	t
PFNGLXQUERYMAXSWAPGROUPSNVPROC	include/GL/glxext.h	/^typedef Bool ( * PFNGLXQUERYMAXSWAPGROUPSNVPROC) (Display *dpy, int screen, GLuint *maxGroups, GLuint *maxBarriers);$/;"	t
PFNGLXQUERYSWAPGROUPNVPROC	include/GL/glxext.h	/^typedef Bool ( * PFNGLXQUERYSWAPGROUPNVPROC) (Display *dpy, GLXDrawable drawable, GLuint *group, GLuint *barrier);$/;"	t
PFNGLXQUERYVIDEOCAPTUREDEVICENVPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXQUERYVIDEOCAPTUREDEVICENVPROC) (Display *dpy, GLXVideoCaptureDeviceNV device, int attribute, int *value);$/;"	t
PFNGLXRELEASEBUFFERSMESAPROC	include/GL/glxext.h	/^typedef Bool ( * PFNGLXRELEASEBUFFERSMESAPROC) (Display *dpy, GLXDrawable drawable);$/;"	t
PFNGLXRELEASEBUFFERSMESAPROC	shared/GLee.h	/^typedef Bool (APIENTRYP PFNGLXRELEASEBUFFERSMESAPROC) (Display * dpy, GLXDrawable drawable);$/;"	t
PFNGLXRELEASETEXIMAGEEXTPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer);$/;"	t
PFNGLXRELEASEVIDEOCAPTUREDEVICENVPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXRELEASEVIDEOCAPTUREDEVICENVPROC) (Display *dpy, GLXVideoCaptureDeviceNV device);$/;"	t
PFNGLXRELEASEVIDEODEVICENVPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXRELEASEVIDEODEVICENVPROC) (Display *dpy, int screen, GLXVideoDeviceNV VideoDevice);$/;"	t
PFNGLXRELEASEVIDEOIMAGENVPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXRELEASEVIDEOIMAGENVPROC) (Display *dpy, GLXPbuffer pbuf);$/;"	t
PFNGLXRESETFRAMECOUNTNVPROC	include/GL/glxext.h	/^typedef Bool ( * PFNGLXRESETFRAMECOUNTNVPROC) (Display *dpy, int screen);$/;"	t
PFNGLXSELECTEVENTPROC	include/GL/glx.h	/^typedef void (* PFNGLXSELECTEVENTPROC) (Display *dpy, GLXDrawable draw, unsigned long event_mask);$/;"	t
PFNGLXSELECTEVENTPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXSELECTEVENTPROC) (Display *dpy, GLXDrawable draw, unsigned long event_mask);$/;"	t
PFNGLXSELECTEVENTPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLXSELECTEVENTPROC) (Display * dpy, GLXDrawable draw, unsigned long event_mask);$/;"	t
PFNGLXSELECTEVENTSGIXPROC	include/GL/glxext.h	/^typedef void ( * PFNGLXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);$/;"	t
PFNGLXSELECTEVENTSGIXPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNGLXSELECTEVENTSGIXPROC) (Display * dpy, GLXDrawable drawable, unsigned long mask);$/;"	t
PFNGLXSENDPBUFFERTOVIDEONVPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXSENDPBUFFERTOVIDEONVPROC) (Display *dpy, GLXPbuffer pbuf, int iBufferType, unsigned long *pulCounterPbuffer, GLboolean bBlock);$/;"	t
PFNGLXSET3DFXMODEMESAPROC	include/GL/glxext.h	/^typedef Bool ( * PFNGLXSET3DFXMODEMESAPROC) (int mode);$/;"	t
PFNGLXSET3DFXMODEMESAPROC	shared/GLee.h	/^typedef Bool (APIENTRYP PFNGLXSET3DFXMODEMESAPROC) (int mode);$/;"	t
PFNGLXSWAPBUFFERSMSCOMLPROC	include/GL/glxext.h	/^typedef int64_t ( * PFNGLXSWAPBUFFERSMSCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder);$/;"	t
PFNGLXSWAPBUFFERSMSCOMLPROC	shared/GLee.h	/^typedef int64_t (APIENTRYP PFNGLXSWAPBUFFERSMSCOMLPROC) (Display * dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder);$/;"	t
PFNGLXSWAPINTERVALEXTPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXSWAPINTERVALEXTPROC) (Display *dpy, GLXDrawable drawable, int interval);$/;"	t
PFNGLXSWAPINTERVALMESAPROC	include/GL/glx.h	/^typedef int (*PFNGLXSWAPINTERVALMESAPROC)(unsigned int interval);$/;"	t
PFNGLXSWAPINTERVALSGIPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXSWAPINTERVALSGIPROC) (int interval);$/;"	t
PFNGLXSWAPINTERVALSGIPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXSWAPINTERVALSGIPROC) (int interval);$/;"	t
PFNGLXWAITFORMSCOMLPROC	include/GL/glxext.h	/^typedef Bool ( * PFNGLXWAITFORMSCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder, int64_t *ust, int64_t *msc, int64_t *sbc);$/;"	t
PFNGLXWAITFORMSCOMLPROC	shared/GLee.h	/^typedef Bool (APIENTRYP PFNGLXWAITFORMSCOMLPROC) (Display * dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder, int64_t * ust, int64_t * msc, int64_t * sbc);$/;"	t
PFNGLXWAITFORSBCOMLPROC	include/GL/glxext.h	/^typedef Bool ( * PFNGLXWAITFORSBCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_sbc, int64_t *ust, int64_t *msc, int64_t *sbc);$/;"	t
PFNGLXWAITFORSBCOMLPROC	shared/GLee.h	/^typedef Bool (APIENTRYP PFNGLXWAITFORSBCOMLPROC) (Display * dpy, GLXDrawable drawable, int64_t target_sbc, int64_t * ust, int64_t * msc, int64_t * sbc);$/;"	t
PFNGLXWAITVIDEOSYNCSGIPROC	include/GL/glxext.h	/^typedef int ( * PFNGLXWAITVIDEOSYNCSGIPROC) (int divisor, int remainder, unsigned int *count);$/;"	t
PFNGLXWAITVIDEOSYNCSGIPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNGLXWAITVIDEOSYNCSGIPROC) (int divisor, int remainder, unsigned int * count);$/;"	t
PFNWGLALLOCATEMEMORYNVPROC	shared/GLee.h	/^typedef void* (APIENTRYP PFNWGLALLOCATEMEMORYNVPROC) (GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);$/;"	t
PFNWGLALLOCATEMEMORYNVPROC	shared/wglext.h	/^typedef void* (WINAPI * PFNWGLALLOCATEMEMORYNVPROC) (GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);$/;"	t
PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE * pEvent, const LPVOID * pAddress, const DWORD * pSize, UINT count);$/;"	t
PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);$/;"	t
PFNWGLBEGINFRAMETRACKINGI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLBEGINFRAMETRACKINGI3DPROC) ();$/;"	t
PFNWGLBEGINFRAMETRACKINGI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLBEGINFRAMETRACKINGI3DPROC) (void);$/;"	t
PFNWGLBINDDISPLAYCOLORTABLEEXTPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNWGLBINDDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLBINDDISPLAYCOLORTABLEEXTPROC	shared/wglext.h	/^typedef GLboolean (WINAPI * PFNWGLBINDDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLBINDTEXIMAGEARBPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t
PFNWGLBINDTEXIMAGEARBPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t
PFNWGLCHOOSEPIXELFORMATARBPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLCHOOSEPIXELFORMATARBPROC) (HDC hdc, const int * piAttribIList, const FLOAT * pfAttribFList, UINT nMaxFormats, int * piFormats, UINT * nNumFormats);$/;"	t
PFNWGLCHOOSEPIXELFORMATARBPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATARBPROC) (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	t
PFNWGLCHOOSEPIXELFORMATEXTPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLCHOOSEPIXELFORMATEXTPROC) (HDC hdc, const int * piAttribIList, const FLOAT * pfAttribFList, UINT nMaxFormats, int * piFormats, UINT * nNumFormats);$/;"	t
PFNWGLCHOOSEPIXELFORMATEXTPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATEXTPROC) (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	t
PFNWGLCREATEBUFFERREGIONARBPROC	shared/GLee.h	/^typedef HANDLE (APIENTRYP PFNWGLCREATEBUFFERREGIONARBPROC) (HDC hDC, int iLayerPlane, UINT uType);$/;"	t
PFNWGLCREATEBUFFERREGIONARBPROC	shared/wglext.h	/^typedef HANDLE (WINAPI * PFNWGLCREATEBUFFERREGIONARBPROC) (HDC hDC, int iLayerPlane, UINT uType);$/;"	t
PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC	shared/wglext.h	/^typedef GLboolean (WINAPI * PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLCREATEIMAGEBUFFERI3DPROC	shared/GLee.h	/^typedef LPVOID (APIENTRYP PFNWGLCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);$/;"	t
PFNWGLCREATEIMAGEBUFFERI3DPROC	shared/wglext.h	/^typedef LPVOID (WINAPI * PFNWGLCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);$/;"	t
PFNWGLCREATEPBUFFERARBPROC	shared/GLee.h	/^typedef HPBUFFERARB (APIENTRYP PFNWGLCREATEPBUFFERARBPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int * piAttribList);$/;"	t
PFNWGLCREATEPBUFFERARBPROC	shared/wglext.h	/^typedef HPBUFFERARB (WINAPI * PFNWGLCREATEPBUFFERARBPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	t
PFNWGLCREATEPBUFFEREXTPROC	shared/GLee.h	/^typedef HPBUFFEREXT (APIENTRYP PFNWGLCREATEPBUFFEREXTPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int * piAttribList);$/;"	t
PFNWGLCREATEPBUFFEREXTPROC	shared/wglext.h	/^typedef HPBUFFEREXT (WINAPI * PFNWGLCREATEPBUFFEREXTPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	t
PFNWGLDELETEBUFFERREGIONARBPROC	shared/GLee.h	/^typedef VOID (APIENTRYP PFNWGLDELETEBUFFERREGIONARBPROC) (HANDLE hRegion);$/;"	t
PFNWGLDELETEBUFFERREGIONARBPROC	shared/wglext.h	/^typedef VOID (WINAPI * PFNWGLDELETEBUFFERREGIONARBPROC) (HANDLE hRegion);$/;"	t
PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC	shared/GLee.h	/^typedef VOID (APIENTRYP PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC	shared/wglext.h	/^typedef VOID (WINAPI * PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLDESTROYIMAGEBUFFERI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);$/;"	t
PFNWGLDESTROYIMAGEBUFFERI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);$/;"	t
PFNWGLDESTROYPBUFFERARBPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLDESTROYPBUFFERARBPROC) (HPBUFFERARB hPbuffer);$/;"	t
PFNWGLDESTROYPBUFFERARBPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFERARBPROC) (HPBUFFERARB hPbuffer);$/;"	t
PFNWGLDESTROYPBUFFEREXTPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLDESTROYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t
PFNWGLDESTROYPBUFFEREXTPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t
PFNWGLDISABLEFRAMELOCKI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLDISABLEFRAMELOCKI3DPROC) ();$/;"	t
PFNWGLDISABLEFRAMELOCKI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDISABLEFRAMELOCKI3DPROC) (void);$/;"	t
PFNWGLDISABLEGENLOCKI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLDISABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t
PFNWGLDISABLEGENLOCKI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDISABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t
PFNWGLENABLEFRAMELOCKI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLENABLEFRAMELOCKI3DPROC) ();$/;"	t
PFNWGLENABLEFRAMELOCKI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENABLEFRAMELOCKI3DPROC) (void);$/;"	t
PFNWGLENABLEGENLOCKI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLENABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t
PFNWGLENABLEGENLOCKI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t
PFNWGLENDFRAMETRACKINGI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLENDFRAMETRACKINGI3DPROC) ();$/;"	t
PFNWGLENDFRAMETRACKINGI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENDFRAMETRACKINGI3DPROC) (void);$/;"	t
PFNWGLFREEMEMORYNVPROC	shared/GLee.h	/^typedef void (APIENTRYP PFNWGLFREEMEMORYNVPROC) (void * pointer);$/;"	t
PFNWGLFREEMEMORYNVPROC	shared/wglext.h	/^typedef void (WINAPI * PFNWGLFREEMEMORYNVPROC) (void *pointer);$/;"	t
PFNWGLGENLOCKSAMPLERATEI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT uRate);$/;"	t
PFNWGLGENLOCKSAMPLERATEI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT uRate);$/;"	t
PFNWGLGENLOCKSOURCEDELAYI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT uDelay);$/;"	t
PFNWGLGENLOCKSOURCEDELAYI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT uDelay);$/;"	t
PFNWGLGENLOCKSOURCEEDGEI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT uEdge);$/;"	t
PFNWGLGENLOCKSOURCEEDGEI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT uEdge);$/;"	t
PFNWGLGENLOCKSOURCEI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGENLOCKSOURCEI3DPROC) (HDC hDC, UINT uSource);$/;"	t
PFNWGLGENLOCKSOURCEI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEI3DPROC) (HDC hDC, UINT uSource);$/;"	t
PFNWGLGETCURRENTREADDCARBPROC	shared/GLee.h	/^typedef HDC (APIENTRYP PFNWGLGETCURRENTREADDCARBPROC) ();$/;"	t
PFNWGLGETCURRENTREADDCARBPROC	shared/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCARBPROC) (void);$/;"	t
PFNWGLGETCURRENTREADDCEXTPROC	shared/GLee.h	/^typedef HDC (APIENTRYP PFNWGLGETCURRENTREADDCEXTPROC) ();$/;"	t
PFNWGLGETCURRENTREADDCEXTPROC	shared/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCEXTPROC) (void);$/;"	t
PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int * piValue);$/;"	t
PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piValue);$/;"	t
PFNWGLGETEXTENSIONSSTRINGARBPROC	shared/GLee.h	/^typedef const char * (APIENTRYP PFNWGLGETEXTENSIONSSTRINGARBPROC) (HDC hdc);$/;"	t
PFNWGLGETEXTENSIONSSTRINGARBPROC	shared/wglext.h	/^typedef const char * (WINAPI * PFNWGLGETEXTENSIONSSTRINGARBPROC) (HDC hdc);$/;"	t
PFNWGLGETEXTENSIONSSTRINGEXTPROC	shared/GLee.h	/^typedef const char * (APIENTRYP PFNWGLGETEXTENSIONSSTRINGEXTPROC) ();$/;"	t
PFNWGLGETEXTENSIONSSTRINGEXTPROC	shared/wglext.h	/^typedef const char * (WINAPI * PFNWGLGETEXTENSIONSSTRINGEXTPROC) (void);$/;"	t
PFNWGLGETFRAMEUSAGEI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGETFRAMEUSAGEI3DPROC) (float * pUsage);$/;"	t
PFNWGLGETFRAMEUSAGEI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETFRAMEUSAGEI3DPROC) (float *pUsage);$/;"	t
PFNWGLGETGAMMATABLEI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, USHORT * puRed, USHORT * puGreen, USHORT * puBlue);$/;"	t
PFNWGLGETGAMMATABLEI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue);$/;"	t
PFNWGLGETGAMMATABLEPARAMETERSI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int * piValue);$/;"	t
PFNWGLGETGAMMATABLEPARAMETERSI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piValue);$/;"	t
PFNWGLGETGENLOCKSAMPLERATEI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGETGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT * uRate);$/;"	t
PFNWGLGETGENLOCKSAMPLERATEI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT *uRate);$/;"	t
PFNWGLGETGENLOCKSOURCEDELAYI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGETGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT * uDelay);$/;"	t
PFNWGLGETGENLOCKSOURCEDELAYI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT *uDelay);$/;"	t
PFNWGLGETGENLOCKSOURCEEDGEI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGETGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT * uEdge);$/;"	t
PFNWGLGETGENLOCKSOURCEEDGEI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT *uEdge);$/;"	t
PFNWGLGETGENLOCKSOURCEI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGETGENLOCKSOURCEI3DPROC) (HDC hDC, UINT * uSource);$/;"	t
PFNWGLGETGENLOCKSOURCEI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEI3DPROC) (HDC hDC, UINT *uSource);$/;"	t
PFNWGLGETMSCRATEOMLPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGETMSCRATEOMLPROC) (HDC hdc, INT32 * numerator, INT32 * denominator);$/;"	t
PFNWGLGETMSCRATEOMLPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETMSCRATEOMLPROC) (HDC hdc, INT32 *numerator, INT32 *denominator);$/;"	t
PFNWGLGETPBUFFERDCARBPROC	shared/GLee.h	/^typedef HDC (APIENTRYP PFNWGLGETPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer);$/;"	t
PFNWGLGETPBUFFERDCARBPROC	shared/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer);$/;"	t
PFNWGLGETPBUFFERDCEXTPROC	shared/GLee.h	/^typedef HDC (APIENTRYP PFNWGLGETPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t
PFNWGLGETPBUFFERDCEXTPROC	shared/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t
PFNWGLGETPIXELFORMATATTRIBFVARBPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGETPIXELFORMATATTRIBFVARBPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int * piAttributes, FLOAT * pfValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBFVARBPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVARBPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBFVEXTPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGETPIXELFORMATATTRIBFVEXTPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int * piAttributes, FLOAT * pfValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBFVEXTPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVEXTPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBIVARBPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGETPIXELFORMATATTRIBIVARBPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int * piAttributes, int * piValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBIVARBPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVARBPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBIVEXTPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGETPIXELFORMATATTRIBIVEXTPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int * piAttributes, int * piValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBIVEXTPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVEXTPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues);$/;"	t
PFNWGLGETSWAPINTERVALEXTPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNWGLGETSWAPINTERVALEXTPROC) ();$/;"	t
PFNWGLGETSWAPINTERVALEXTPROC	shared/wglext.h	/^typedef int (WINAPI * PFNWGLGETSWAPINTERVALEXTPROC) (void);$/;"	t
PFNWGLGETSYNCVALUESOMLPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLGETSYNCVALUESOMLPROC) (HDC hdc, INT64 * ust, INT64 * msc, INT64 * sbc);$/;"	t
PFNWGLGETSYNCVALUESOMLPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETSYNCVALUESOMLPROC) (HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PFNWGLISENABLEDFRAMELOCKI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLISENABLEDFRAMELOCKI3DPROC) (BOOL * pFlag);$/;"	t
PFNWGLISENABLEDFRAMELOCKI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLISENABLEDFRAMELOCKI3DPROC) (BOOL *pFlag);$/;"	t
PFNWGLISENABLEDGENLOCKI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLISENABLEDGENLOCKI3DPROC) (HDC hDC, BOOL * pFlag);$/;"	t
PFNWGLISENABLEDGENLOCKI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLISENABLEDGENLOCKI3DPROC) (HDC hDC, BOOL *pFlag);$/;"	t
PFNWGLLOADDISPLAYCOLORTABLEEXTPROC	shared/GLee.h	/^typedef GLboolean (APIENTRYP PFNWGLLOADDISPLAYCOLORTABLEEXTPROC) (const GLushort * table, GLuint length);$/;"	t
PFNWGLLOADDISPLAYCOLORTABLEEXTPROC	shared/wglext.h	/^typedef GLboolean (WINAPI * PFNWGLLOADDISPLAYCOLORTABLEEXTPROC) (const GLushort *table, GLuint length);$/;"	t
PFNWGLMAKECONTEXTCURRENTARBPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLMAKECONTEXTCURRENTARBPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t
PFNWGLMAKECONTEXTCURRENTARBPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTARBPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t
PFNWGLMAKECONTEXTCURRENTEXTPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLMAKECONTEXTCURRENTEXTPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t
PFNWGLMAKECONTEXTCURRENTEXTPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTEXTPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t
PFNWGLQUERYFRAMELOCKMASTERI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLQUERYFRAMELOCKMASTERI3DPROC) (BOOL * pFlag);$/;"	t
PFNWGLQUERYFRAMELOCKMASTERI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMELOCKMASTERI3DPROC) (BOOL *pFlag);$/;"	t
PFNWGLQUERYFRAMETRACKINGI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLQUERYFRAMETRACKINGI3DPROC) (DWORD * pFrameCount, DWORD * pMissedFrames, float * pLastMissedUsage);$/;"	t
PFNWGLQUERYFRAMETRACKINGI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMETRACKINGI3DPROC) (DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage);$/;"	t
PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC) (HDC hDC, UINT * uMaxLineDelay, UINT * uMaxPixelDelay);$/;"	t
PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC) (HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay);$/;"	t
PFNWGLQUERYPBUFFERARBPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLQUERYPBUFFERARBPROC) (HPBUFFERARB hPbuffer, int iAttribute, int * piValue);$/;"	t
PFNWGLQUERYPBUFFERARBPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYPBUFFERARBPROC) (HPBUFFERARB hPbuffer, int iAttribute, int *piValue);$/;"	t
PFNWGLQUERYPBUFFEREXTPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLQUERYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer, int iAttribute, int * piValue);$/;"	t
PFNWGLQUERYPBUFFEREXTPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);$/;"	t
PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID * pAddress, UINT count);$/;"	t
PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);$/;"	t
PFNWGLRELEASEPBUFFERDCARBPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNWGLRELEASEPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer, HDC hDC);$/;"	t
PFNWGLRELEASEPBUFFERDCARBPROC	shared/wglext.h	/^typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer, HDC hDC);$/;"	t
PFNWGLRELEASEPBUFFERDCEXTPROC	shared/GLee.h	/^typedef int (APIENTRYP PFNWGLRELEASEPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer, HDC hDC);$/;"	t
PFNWGLRELEASEPBUFFERDCEXTPROC	shared/wglext.h	/^typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer, HDC hDC);$/;"	t
PFNWGLRELEASETEXIMAGEARBPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t
PFNWGLRELEASETEXIMAGEARBPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t
PFNWGLRESTOREBUFFERREGIONARBPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLRESTOREBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);$/;"	t
PFNWGLRESTOREBUFFERREGIONARBPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRESTOREBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);$/;"	t
PFNWGLSAVEBUFFERREGIONARBPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLSAVEBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, int height);$/;"	t
PFNWGLSAVEBUFFERREGIONARBPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSAVEBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, int height);$/;"	t
PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int * piValue);$/;"	t
PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int *piValue);$/;"	t
PFNWGLSETGAMMATABLEI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLSETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, const USHORT * puRed, const USHORT * puGreen, const USHORT * puBlue);$/;"	t
PFNWGLSETGAMMATABLEI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue);$/;"	t
PFNWGLSETGAMMATABLEPARAMETERSI3DPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLSETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int * piValue);$/;"	t
PFNWGLSETGAMMATABLEPARAMETERSI3DPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int *piValue);$/;"	t
PFNWGLSETPBUFFERATTRIBARBPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int * piAttribList);$/;"	t
PFNWGLSETPBUFFERATTRIBARBPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);$/;"	t
PFNWGLSETSTEREOEMITTERSTATE3DLPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLSETSTEREOEMITTERSTATE3DLPROC) (HDC hDC, UINT uState);$/;"	t
PFNWGLSWAPBUFFERSMSCOMLPROC	shared/GLee.h	/^typedef INT64 (APIENTRYP PFNWGLSWAPBUFFERSMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	t
PFNWGLSWAPBUFFERSMSCOMLPROC	shared/wglext.h	/^typedef INT64 (WINAPI * PFNWGLSWAPBUFFERSMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	t
PFNWGLSWAPINTERVALEXTPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLSWAPINTERVALEXTPROC) (int interval);$/;"	t
PFNWGLSWAPINTERVALEXTPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSWAPINTERVALEXTPROC) (int interval);$/;"	t
PFNWGLSWAPLAYERBUFFERSMSCOMLPROC	shared/GLee.h	/^typedef INT64 (APIENTRYP PFNWGLSWAPLAYERBUFFERSMSCOMLPROC) (HDC hdc, int fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	t
PFNWGLSWAPLAYERBUFFERSMSCOMLPROC	shared/wglext.h	/^typedef INT64 (WINAPI * PFNWGLSWAPLAYERBUFFERSMSCOMLPROC) (HDC hdc, int fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	t
PFNWGLWAITFORMSCOMLPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLWAITFORMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 * ust, INT64 * msc, INT64 * sbc);$/;"	t
PFNWGLWAITFORMSCOMLPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLWAITFORMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PFNWGLWAITFORSBCOMLPROC	shared/GLee.h	/^typedef BOOL (APIENTRYP PFNWGLWAITFORSBCOMLPROC) (HDC hdc, INT64 target_sbc, INT64 * ust, INT64 * msc, INT64 * sbc);$/;"	t
PFNWGLWAITFORSBCOMLPROC	shared/wglext.h	/^typedef BOOL (WINAPI * PFNWGLWAITFORSBCOMLPROC) (HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PIZ_COMPRESSION	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompression.h	/^    PIZ_COMPRESSION = 4,	\/\/ piz-based wavelet compression$/;"	e	enum:Imf::Compression
PIZ_COMPRESSION	shared/openexr-mac/include/OpenEXR/ImfCompression.h	/^    PIZ_COMPRESSION = 4,	\/\/ piz-based wavelet compression$/;"	e	enum:Imf::Compression
PRAGMA_EXPORT_SUPPORTED	include/GL/gl.h	76;"	d
PXR24_COMPRESSION	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompression.h	/^    PXR24_COMPRESSION = 5,	\/\/ lossy 24-bit float compression$/;"	e	enum:Imf::Compression
PXR24_COMPRESSION	shared/openexr-mac/include/OpenEXR/ImfCompression.h	/^    PXR24_COMPRESSION = 5,	\/\/ lossy 24-bit float compression$/;"	e	enum:Imf::Compression
PackedColor	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^typedef unsigned int		PackedColor;$/;"	t	namespace:Imath
PackedColor	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^typedef unsigned int		PackedColor;$/;"	t	namespace:Imath
Packing	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCode.h	/^    enum Packing$/;"	g	class:Imf::TimeCode
Packing	shared/openexr-mac/include/OpenEXR/ImfTimeCode.h	/^    enum Packing$/;"	g	class:Imf::TimeCode
PixelType	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPixelType.h	/^enum PixelType$/;"	g	namespace:Imf
PixelType	shared/openexr-mac/include/OpenEXR/ImfPixelType.h	/^enum PixelType$/;"	g	namespace:Imf
Plane3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^    Plane3() {}$/;"	f	class:Imath::Plane3
Plane3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^class Plane3$/;"	c	namespace:Imath
Plane3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^inline Plane3<T>::Plane3(const Vec3<T> &n, T d)$/;"	f	class:Imath::Plane3
Plane3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^inline Plane3<T>::Plane3(const Vec3<T> &p, const Vec3<T> &n)$/;"	f	class:Imath::Plane3
Plane3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^inline Plane3<T>::Plane3(const Vec3<T> &p0,$/;"	f	class:Imath::Plane3
Plane3	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^    Plane3() {}$/;"	f	class:Imath::Plane3
Plane3	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^class Plane3$/;"	c	namespace:Imath
Plane3	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^inline Plane3<T>::Plane3(const Vec3<T> &n, T d)$/;"	f	class:Imath::Plane3
Plane3	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^inline Plane3<T>::Plane3(const Vec3<T> &p, const Vec3<T> &n)$/;"	f	class:Imath::Plane3
Plane3	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^inline Plane3<T>::Plane3(const Vec3<T> &p0,$/;"	f	class:Imath::Plane3
Plane3d	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^typedef Plane3<double> Plane3d;$/;"	t	namespace:Imath
Plane3d	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^typedef Plane3<double> Plane3d;$/;"	t	namespace:Imath
Plane3f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^typedef Plane3<float> Plane3f;$/;"	t	namespace:Imath
Plane3f	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^typedef Plane3<float> Plane3f;$/;"	t	namespace:Imath
PreviewImage	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^class PreviewImage$/;"	c	namespace:Imf
PreviewImage	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^class PreviewImage$/;"	c	namespace:Imf
PreviewImageAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImageAttribute.h	/^typedef TypedAttribute<PreviewImage> PreviewImageAttribute;$/;"	t	namespace:Imf
PreviewImageAttribute	shared/openexr-mac/include/OpenEXR/ImfPreviewImageAttribute.h	/^typedef TypedAttribute<PreviewImage> PreviewImageAttribute;$/;"	t	namespace:Imf
PreviewRgba	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^    PreviewRgba (unsigned char r = 0,$/;"	f	struct:Imf::PreviewRgba
PreviewRgba	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^struct PreviewRgba$/;"	s	namespace:Imf
PreviewRgba	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^    PreviewRgba (unsigned char r = 0,$/;"	f	struct:Imf::PreviewRgba
PreviewRgba	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^struct PreviewRgba$/;"	s	namespace:Imf
ProcessMenu	chapt03/star/star.cpp	/^void ProcessMenu(int value)$/;"	f
ProcessMenu	chapt03/triangle/triangle.cpp	/^void ProcessMenu(int value)$/;"	f
Quat	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^    Quat( T s, T i, T j, T k )	    : r(s), v(i,j,k) {}$/;"	f	class:Imath::Quat
Quat	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^    Quat( T s, Vec3<T> d ) 	    : r(s), v(d) {}$/;"	f	class:Imath::Quat
Quat	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^    Quat( const Quat<S>& q)	    : r(q.r), v(q.v) {}$/;"	f	class:Imath::Quat
Quat	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^    Quat()			    : r(1), v(0,0,0) {}$/;"	f	class:Imath::Quat
Quat	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^class Quat$/;"	c	namespace:Imath
Quat	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^    Quat( T s, T i, T j, T k )	    : r(s), v(i,j,k) {}$/;"	f	class:Imath::Quat
Quat	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^    Quat( T s, Vec3<T> d ) 	    : r(s), v(d) {}$/;"	f	class:Imath::Quat
Quat	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^    Quat( const Quat<S>& q)	    : r(q.r), v(q.v) {}$/;"	f	class:Imath::Quat
Quat	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^    Quat()			    : r(1), v(0,0,0) {}$/;"	f	class:Imath::Quat
Quat	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^class Quat$/;"	c	namespace:Imath
Quatd	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^typedef Quat<double>	Quatd;$/;"	t	namespace:Imath
Quatd	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^typedef Quat<double>	Quatd;$/;"	t	namespace:Imath
Quatf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^typedef Quat<float>	Quatf;$/;"	t	namespace:Imath
Quatf	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^typedef Quat<float>	Quatf;$/;"	t	namespace:Imath
RANDOM_Y	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLineOrder.h	/^    RANDOM_Y = 2,       \/\/ only for tiled files; tiles are written$/;"	e	enum:Imf::LineOrder
RANDOM_Y	shared/openexr-mac/include/OpenEXR/ImfLineOrder.h	/^    RANDOM_Y = 2,       \/\/ only for tiled files; tiles are written$/;"	e	enum:Imf::LineOrder
REPLACE_EXC	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexMacros.h	100;"	d
REPLACE_EXC	shared/openexr-mac/include/OpenEXR/IexMacros.h	100;"	d
RIPMAP_LEVELS	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^    RIPMAP_LEVELS = 2,$/;"	e	enum:Imf::LevelMode
RIPMAP_LEVELS	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^    RIPMAP_LEVELS = 2,$/;"	e	enum:Imf::LevelMode
RLE_COMPRESSION	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompression.h	/^    RLE_COMPRESSION = 1,	\/\/ run length encoding$/;"	e	enum:Imf::Compression
RLE_COMPRESSION	shared/openexr-mac/include/OpenEXR/ImfCompression.h	/^    RLE_COMPRESSION = 1,	\/\/ run length encoding$/;"	e	enum:Imf::Compression
ROUND_DOWN	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^    ROUND_DOWN = 0,$/;"	e	enum:Imf::LevelRoundingMode
ROUND_DOWN	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^    ROUND_DOWN = 0,$/;"	e	enum:Imf::LevelRoundingMode
ROUND_UP	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^    ROUND_UP = 1,$/;"	e	enum:Imf::LevelRoundingMode
ROUND_UP	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^    ROUND_UP = 1,$/;"	e	enum:Imf::LevelRoundingMode
Rand32	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^Rand32::Rand32 (unsigned long int seed)$/;"	f	class:Imath::Rand32
Rand32	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^class Rand32$/;"	c	namespace:Imath
Rand32	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^Rand32::Rand32 (unsigned long int seed)$/;"	f	class:Imath::Rand32
Rand32	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^class Rand32$/;"	c	namespace:Imath
Rand48	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^Rand48::Rand48 (unsigned long int seed)$/;"	f	class:Imath::Rand48
Rand48	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^class Rand48$/;"	c	namespace:Imath
Rand48	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^Rand48::Rand48 (unsigned long int seed)$/;"	f	class:Imath::Rand48
Rand48	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^class Rand48$/;"	c	namespace:Imath
RenderScene	c3.drawLine/drawLines.cpp	/^void RenderScene(void)$/;"	f
RenderScene	c3.drawObject/drawObject.cpp	/^void RenderScene(void)$/;"	f
RenderScene	c3.drawPoints/drawPoints.cpp	/^void RenderScene(void)$/;"	f
RenderScene	c3.drawPolygonBitmap/draw.cpp	/^void RenderScene(void)$/;"	f
RenderScene	c3.drawStart/draw.cpp	/^void RenderScene(void)$/;"	f
RenderScene	c3.drawTriangles/triangles.cpp	/^void RenderScene(void)$/;"	f
RenderScene	c3.scissor/draw.cpp	/^void RenderScene(void)$/;"	f
RenderScene	c3.template/draw.cpp	/^void RenderScene(void)$/;"	f
RenderScene	c4.translate/draw.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt02/bounce/bounce.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt02/glrect/glrect.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt02/simple/simple.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt03/lines/lines.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt03/linesw/linesw.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt03/lstipple/lstipple.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt03/lstrips/lstrips.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt03/points/points.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt03/pointsz/pointsz.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt03/pstipple/pstipple.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt03/scissor/scissor.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt03/single/single.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt03/star/star.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt03/stencil/stencil.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt03/triangle/triangle.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt04/Atom/Atom.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt04/Atom2/atom2.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt04/Ortho/ortho.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt04/Perspect/perspect.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt04/Solar/solar.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt04/SphereWorld/sphereworld.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt04/Transform/transform.cpp	/^void RenderScene(void)$/;"	f
RenderScene	chapt04/Transformgl/transformgl.cpp	/^void RenderScene(void)$/;"	f
RenderScene	helloGL/helloGL.cpp	/^void RenderScene(void)$/;"	f
RenderScene	template.dir/drawPoints.cpp	/^void RenderScene(void)$/;"	f
Reset	shared/stopwatch.h	/^		inline void Reset(void) $/;"	f	class:CStopWatch
Rgba	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    Rgba () {}$/;"	f	struct:Imf::Rgba
Rgba	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    Rgba (half r, half g, half b, half a = 1.f): r (r), g (g), b (b), a (a) {}$/;"	f	struct:Imf::Rgba
Rgba	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^struct Rgba$/;"	s	namespace:Imf
Rgba	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    Rgba () {}$/;"	f	struct:Imf::Rgba
Rgba	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    Rgba (half r, half g, half b, half a = 1.f): r (r), g (g), b (b), a (a) {}$/;"	f	struct:Imf::Rgba
Rgba	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^struct Rgba$/;"	s	namespace:Imf
RgbaChannels	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^enum RgbaChannels$/;"	g	namespace:Imf
RgbaChannels	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^enum RgbaChannels$/;"	g	namespace:Imf
RgbaInputFile	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaFile.h	/^class RgbaInputFile$/;"	c	namespace:Imf
RgbaInputFile	shared/openexr-mac/include/OpenEXR/ImfRgbaFile.h	/^class RgbaInputFile$/;"	c	namespace:Imf
RgbaLut	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLut.h	/^RgbaLut::RgbaLut (Function f, RgbaChannels chn):$/;"	f	class:Imf::RgbaLut
RgbaLut	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLut.h	/^class RgbaLut$/;"	c	namespace:Imf
RgbaLut	shared/openexr-mac/include/OpenEXR/ImfLut.h	/^RgbaLut::RgbaLut (Function f, RgbaChannels chn):$/;"	f	class:Imf::RgbaLut
RgbaLut	shared/openexr-mac/include/OpenEXR/ImfLut.h	/^class RgbaLut$/;"	c	namespace:Imf
RgbaOutputFile	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaFile.h	/^class RgbaOutputFile$/;"	c	namespace:Imf
RgbaOutputFile	shared/openexr-mac/include/OpenEXR/ImfRgbaFile.h	/^class RgbaOutputFile$/;"	c	namespace:Imf
RgbaYca	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaYca.h	/^namespace RgbaYca {$/;"	n	namespace:Imf
RgbaYca	shared/openexr-mac/include/OpenEXR/ImfRgbaYca.h	/^namespace RgbaYca {$/;"	n	namespace:Imf
RotateLocal	shared/glFrame.h	/^        void RotateLocal(float fAngle, float x, float y, float z) $/;"	f	class:GLFrame
RotateLocalX	shared/glFrame.h	/^        void RotateLocalX(float fAngle)$/;"	f	class:GLFrame
RotateLocalY	shared/glFrame.h	/^        void RotateLocalY(float fAngle)$/;"	f	class:GLFrame
RotateLocalZ	shared/glFrame.h	/^        void RotateLocalZ(float fAngle)$/;"	f	class:GLFrame
RotateVector	shared/glFrame.h	/^        void RotateVector(M3DVector3f vVectorSrc, M3DVector3f vVectorDst)$/;"	f	class:GLFrame
RotateWorld	shared/glFrame.h	/^		void RotateWorld(float fAngle, float x, float y, float z)$/;"	f	class:GLFrame
SIZE	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h	/^    static const int	SIZE = 32;$/;"	m	class:Imf::Name
SIZE	shared/openexr-mac/include/OpenEXR/ImfName.h	/^    static const int	SIZE = 32;$/;"	m	class:Imf::Name
STOPWATCH_HEADER	shared/stopwatch.h	11;"	d
SWAP_ROWS	shared/math3d.cpp	389;"	d	file:
SWAP_ROWS	shared/math3d.cpp	500;"	d	file:
SWAP_ROWS	shared/math3d.cpp	507;"	d	file:
SWAP_ROWS	shared/math3d.cpp	618;"	d	file:
Scale	shared/TriangleMesh.h	/^        void Scale(GLfloat fScaleValue) {$/;"	f	class:CTriangleMesh
Scale	shared/VBOMesh.cpp	/^void CVBOMesh::Scale(GLfloat fScaleValue) $/;"	f	class:CVBOMesh
Semaphore	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadSemaphore.h	/^class Semaphore$/;"	c	namespace:IlmThread
Semaphore	shared/openexr-mac/include/OpenEXR/IlmThreadSemaphore.h	/^class Semaphore$/;"	c	namespace:IlmThread
Set	shared/glfrustum.h	/^        void Set(float fFov, float fAspect, float fNear, float fFar)$/;"	f	class:GLFrustum
SetForwardVector	shared/glFrame.h	/^        inline void SetForwardVector(const M3DVector3f vDirection) {$/;"	f	class:GLFrame
SetForwardVector	shared/glFrame.h	/^        inline void SetForwardVector(float x, float y, float z)$/;"	f	class:GLFrame
SetOrigin	shared/glFrame.h	/^        inline void SetOrigin(const M3DVector3f vPoint) {$/;"	f	class:GLFrame
SetOrigin	shared/glFrame.h	/^        inline void SetOrigin(float x, float y, float z) { $/;"	f	class:GLFrame
SetUpVector	shared/glFrame.h	/^        inline void SetUpVector(const M3DVector3f vDirection) {$/;"	f	class:GLFrame
SetUpVector	shared/glFrame.h	/^        inline void SetUpVector(float x, float y, float z)$/;"	f	class:GLFrame
SetupRC	c3.drawLine/drawLines.cpp	/^void SetupRC(void)$/;"	f
SetupRC	c3.drawObject/drawObject.cpp	/^void SetupRC(void)$/;"	f
SetupRC	c3.drawPoints/drawPoints.cpp	/^void SetupRC(void)$/;"	f
SetupRC	c3.drawPolygonBitmap/draw.cpp	/^void SetupRC(void)$/;"	f
SetupRC	c3.drawStart/draw.cpp	/^void SetupRC(void)$/;"	f
SetupRC	c3.drawTriangles/triangles.cpp	/^void SetupRC(void)$/;"	f
SetupRC	c4.translate/draw.cpp	/^void SetupRC(void)$/;"	f
SetupRC	chapt02/bounce/bounce.cpp	/^void SetupRC(void)$/;"	f
SetupRC	chapt02/glrect/glrect.cpp	/^void SetupRC(void)$/;"	f
SetupRC	chapt02/simple/simple.cpp	/^void SetupRC(void)$/;"	f
SetupRC	chapt03/lines/lines.cpp	/^void SetupRC()$/;"	f
SetupRC	chapt03/linesw/linesw.cpp	/^void SetupRC()$/;"	f
SetupRC	chapt03/lstipple/lstipple.cpp	/^void SetupRC()$/;"	f
SetupRC	chapt03/lstrips/lstrips.cpp	/^void SetupRC()$/;"	f
SetupRC	chapt03/points/points.cpp	/^void SetupRC()$/;"	f
SetupRC	chapt03/pointsz/pointsz.cpp	/^void SetupRC()$/;"	f
SetupRC	chapt03/pstipple/pstipple.cpp	/^void SetupRC()$/;"	f
SetupRC	chapt03/star/star.cpp	/^void SetupRC()$/;"	f
SetupRC	chapt03/triangle/triangle.cpp	/^void SetupRC()$/;"	f
SetupRC	chapt04/Atom/Atom.cpp	/^void SetupRC()$/;"	f
SetupRC	chapt04/Atom2/atom2.cpp	/^void SetupRC()$/;"	f
SetupRC	chapt04/Ortho/ortho.cpp	/^void SetupRC()$/;"	f
SetupRC	chapt04/Perspect/perspect.cpp	/^void SetupRC()$/;"	f
SetupRC	chapt04/Solar/solar.cpp	/^void SetupRC()$/;"	f
SetupRC	chapt04/SphereWorld/sphereworld.cpp	/^void SetupRC()$/;"	f
SetupRC	chapt04/Transform/transform.cpp	/^void SetupRC()$/;"	f
SetupRC	chapt04/Transformgl/transformgl.cpp	/^void SetupRC()$/;"	f
SetupRC	helloGL/helloGL.cpp	/^void SetupRC(void)$/;"	f
SetupRC	template.dir/drawPoints.cpp	/^void SetupRC(void)$/;"	f
Shear3d	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^typedef Vec3   <double> Shear3d;$/;"	t	namespace:Imath
Shear3d	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^typedef Vec3   <double> Shear3d;$/;"	t	namespace:Imath
Shear3f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^typedef Vec3   <float>  Shear3f;$/;"	t	namespace:Imath
Shear3f	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^typedef Vec3   <float>  Shear3f;$/;"	t	namespace:Imath
Shear6	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::Shear6 ()$/;"	f	class:Imath::Shear6
Shear6	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::Shear6 (T XY, T XZ, T YZ)$/;"	f	class:Imath::Shear6
Shear6	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::Shear6 (T XY, T XZ, T YZ, T YX, T ZX, T ZY)$/;"	f	class:Imath::Shear6
Shear6	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::Shear6 (const Shear6 &h)$/;"	f	class:Imath::Shear6
Shear6	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::Shear6 (const Shear6<S> &h)$/;"	f	class:Imath::Shear6
Shear6	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::Shear6 (const Vec3<S> &v)$/;"	f	class:Imath::Shear6
Shear6	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::Shear6 (const Vec3<T> &v)$/;"	f	class:Imath::Shear6
Shear6	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^template <class T> class Shear6$/;"	c	namespace:Imath
Shear6	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::Shear6 ()$/;"	f	class:Imath::Shear6
Shear6	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::Shear6 (T XY, T XZ, T YZ)$/;"	f	class:Imath::Shear6
Shear6	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::Shear6 (T XY, T XZ, T YZ, T YX, T ZX, T ZY)$/;"	f	class:Imath::Shear6
Shear6	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::Shear6 (const Shear6 &h)$/;"	f	class:Imath::Shear6
Shear6	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::Shear6 (const Shear6<S> &h)$/;"	f	class:Imath::Shear6
Shear6	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::Shear6 (const Vec3<S> &v)$/;"	f	class:Imath::Shear6
Shear6	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::Shear6 (const Vec3<T> &v)$/;"	f	class:Imath::Shear6
Shear6	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^template <class T> class Shear6$/;"	c	namespace:Imath
Shear6d	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^typedef Shear6 <double> Shear6d;$/;"	t	namespace:Imath
Shear6d	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^typedef Shear6 <double> Shear6d;$/;"	t	namespace:Imath
Shear6f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^typedef Shear6 <float>  Shear6f;$/;"	t	namespace:Imath
Shear6f	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^typedef Shear6 <float>  Shear6f;$/;"	t	namespace:Imath
Sleep	shared/gltools.h	34;"	d
Slice	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^struct Slice$/;"	s	namespace:Imf
Slice	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^struct Slice$/;"	s	namespace:Imf
SliceMap	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^    typedef std::map <Name, Slice> SliceMap;$/;"	t	class:Imf::FrameBuffer
SliceMap	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^    typedef std::map <Name, Slice> SliceMap;$/;"	t	class:Imf::FrameBuffer
SpecialKeys	c3.drawLine/drawLines.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	c3.drawObject/drawObject.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	c3.drawPoints/drawPoints.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	c3.drawPolygonBitmap/draw.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	c3.drawStart/draw.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	c3.drawTriangles/triangles.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	c3.scissor/draw.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	c3.template/draw.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	c4.translate/draw.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	chapt03/lines/lines.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	chapt03/linesw/linesw.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	chapt03/lstipple/lstipple.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	chapt03/lstrips/lstrips.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	chapt03/points/points.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	chapt03/pointsz/pointsz.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	chapt03/pstipple/pstipple.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	chapt03/scissor/scissor.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	chapt03/single/single.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	chapt03/star/star.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	chapt03/triangle/triangle.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	chapt04/Atom/Atom.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	chapt04/Atom2/atom2.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	chapt04/Ortho/ortho.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	chapt04/Perspect/perspect.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	chapt04/SphereWorld/sphereworld.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
SpecialKeys	template.dir/drawPoints.cpp	/^void SpecialKeys(int key, int x, int y)$/;"	f
Sphere3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathSphere.h	/^    Sphere3() : center(0,0,0), radius(0) {}$/;"	f	class:Imath::Sphere3
Sphere3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathSphere.h	/^    Sphere3(const Vec3<T> &c, T r) : center(c), radius(r) {}$/;"	f	class:Imath::Sphere3
Sphere3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathSphere.h	/^class Sphere3$/;"	c	namespace:Imath
Sphere3	shared/openexr-mac/include/OpenEXR/ImathSphere.h	/^    Sphere3() : center(0,0,0), radius(0) {}$/;"	f	class:Imath::Sphere3
Sphere3	shared/openexr-mac/include/OpenEXR/ImathSphere.h	/^    Sphere3(const Vec3<T> &c, T r) : center(c), radius(r) {}$/;"	f	class:Imath::Sphere3
Sphere3	shared/openexr-mac/include/OpenEXR/ImathSphere.h	/^class Sphere3$/;"	c	namespace:Imath
Sphere3d	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathSphere.h	/^typedef Sphere3<double> Sphere3d;$/;"	t	namespace:Imath
Sphere3d	shared/openexr-mac/include/OpenEXR/ImathSphere.h	/^typedef Sphere3<double> Sphere3d;$/;"	t	namespace:Imath
Sphere3f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathSphere.h	/^typedef Sphere3<float> Sphere3f;$/;"	t	namespace:Imath
Sphere3f	shared/openexr-mac/include/OpenEXR/ImathSphere.h	/^typedef Sphere3<float> Sphere3f;$/;"	t	namespace:Imath
StackTracer	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexBaseExc.h	/^typedef std::string (* StackTracer) ();$/;"	t	class:Iex::std
StackTracer	shared/openexr-mac/include/OpenEXR/IexBaseExc.h	/^typedef std::string (* StackTracer) ();$/;"	t	class:Iex::std
StdIFStream	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStdIO.h	/^class StdIFStream: public IStream$/;"	c	namespace:Imf
StdOFStream	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStdIO.h	/^class StdOFStream: public OStream$/;"	c	namespace:Imf
StdOSStream	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStdIO.h	/^class StdOSStream: public OStream$/;"	c	namespace:Imf
StreamIO	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIO.h	/^struct StreamIO$/;"	s	namespace:Imf
StreamIO	shared/openexr-mac/include/OpenEXR/ImfIO.h	/^struct StreamIO$/;"	s	namespace:Imf
StringAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStringAttribute.h	/^typedef TypedAttribute<std::string> StringAttribute;$/;"	t	namespace:Imf
StringAttribute	shared/openexr-mac/include/OpenEXR/ImfStringAttribute.h	/^typedef TypedAttribute<std::string> StringAttribute;$/;"	t	namespace:Imf
TEXTURE_DATA	shared/VBOMesh.h	28;"	d
TGAHEADER	shared/gltools.cpp	/^} TGAHEADER;$/;"	t	typeref:struct:__anon10	file:
THROW	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexMacros.h	58;"	d
THROW	shared/openexr-mac/include/OpenEXR/IexMacros.h	58;"	d
THROW_ERRNO	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexMacros.h	120;"	d
THROW_ERRNO	shared/openexr-mac/include/OpenEXR/IexMacros.h	120;"	d
TILED_FLAG	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h	/^const int TILED_FLAG		= 0x00000200;$/;"	m	namespace:Imf
TILED_FLAG	shared/openexr-mac/include/OpenEXR/ImfVersion.h	/^const int TILED_FLAG		= 0x00000200;$/;"	m	namespace:Imf
TRANSPOSE44	shared/math3d.h	515;"	d
TRUE	chapt03/star/star.cpp	22;"	d	file:
TV50_PACKING	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCode.h	/^	TV50_PACKING,		\/\/ packing for 50-field television$/;"	e	enum:Imf::TimeCode::Packing
TV50_PACKING	shared/openexr-mac/include/OpenEXR/ImfTimeCode.h	/^	TV50_PACKING,		\/\/ packing for 50-field television$/;"	e	enum:Imf::TimeCode::Packing
TV60_PACKING	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCode.h	/^	TV60_PACKING,		\/\/ packing for 60-field television$/;"	e	enum:Imf::TimeCode::Packing
TV60_PACKING	shared/openexr-mac/include/OpenEXR/ImfTimeCode.h	/^	TV60_PACKING,		\/\/ packing for 60-field television$/;"	e	enum:Imf::TimeCode::Packing
Task	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadPool.h	/^class Task$/;"	c	namespace:IlmThread
Task	shared/openexr-mac/include/OpenEXR/IlmThreadPool.h	/^class Task$/;"	c	namespace:IlmThread
TaskGroup	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadPool.h	/^class TaskGroup$/;"	c	namespace:IlmThread
TaskGroup	shared/openexr-mac/include/OpenEXR/IlmThreadPool.h	/^class TaskGroup$/;"	c	namespace:IlmThread
TestSphere	shared/glfrustum.h	/^        bool TestSphere(M3DVector3f vPoint, float fRadius)$/;"	f	class:GLFrustum
TestSphere	shared/glfrustum.h	/^        bool TestSphere(float x, float y, float z, float fRadius)$/;"	f	class:GLFrustum
Thread	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThread.h	/^class Thread$/;"	c	namespace:IlmThread
Thread	shared/openexr-mac/include/OpenEXR/IlmThread.h	/^class Thread$/;"	c	namespace:IlmThread
ThreadPool	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadPool.h	/^class ThreadPool  $/;"	c	namespace:IlmThread
ThreadPool	shared/openexr-mac/include/OpenEXR/IlmThreadPool.h	/^class ThreadPool  $/;"	c	namespace:IlmThread
TileDescription	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^    TileDescription (unsigned int xs = 32,$/;"	f	class:Imf::TileDescription
TileDescription	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^class TileDescription$/;"	c	namespace:Imf
TileDescription	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^    TileDescription (unsigned int xs = 32,$/;"	f	class:Imf::TileDescription
TileDescription	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^class TileDescription$/;"	c	namespace:Imf
TileDescriptionAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescriptionAttribute.h	/^typedef TypedAttribute<TileDescription> TileDescriptionAttribute;$/;"	t	namespace:Imf
TileDescriptionAttribute	shared/openexr-mac/include/OpenEXR/ImfTileDescriptionAttribute.h	/^typedef TypedAttribute<TileDescription> TileDescriptionAttribute;$/;"	t	namespace:Imf
TiledInputFile	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledInputFile.h	/^class TiledInputFile$/;"	c	namespace:Imf
TiledInputFile	shared/openexr-mac/include/OpenEXR/ImfTiledInputFile.h	/^class TiledInputFile$/;"	c	namespace:Imf
TiledOutputFile	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledOutputFile.h	/^class TiledOutputFile$/;"	c	namespace:Imf
TiledOutputFile	shared/openexr-mac/include/OpenEXR/ImfTiledOutputFile.h	/^class TiledOutputFile$/;"	c	namespace:Imf
TiledRgbaInputFile	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledRgbaFile.h	/^class TiledRgbaInputFile$/;"	c	namespace:Imf
TiledRgbaInputFile	shared/openexr-mac/include/OpenEXR/ImfTiledRgbaFile.h	/^class TiledRgbaInputFile$/;"	c	namespace:Imf
TiledRgbaOutputFile	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledRgbaFile.h	/^class TiledRgbaOutputFile$/;"	c	namespace:Imf
TiledRgbaOutputFile	shared/openexr-mac/include/OpenEXR/ImfTiledRgbaFile.h	/^class TiledRgbaOutputFile$/;"	c	namespace:Imf
TimeCode	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCode.h	/^class TimeCode$/;"	c	namespace:Imf
TimeCode	shared/openexr-mac/include/OpenEXR/ImfTimeCode.h	/^class TimeCode$/;"	c	namespace:Imf
TimeCodeAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCodeAttribute.h	/^typedef TypedAttribute<TimeCode> TimeCodeAttribute;$/;"	t	namespace:Imf
TimeCodeAttribute	shared/openexr-mac/include/OpenEXR/ImfTimeCodeAttribute.h	/^typedef TypedAttribute<TimeCode> TimeCodeAttribute;$/;"	t	namespace:Imf
Timer	chapt03/single/single.cpp	/^void Timer(int value)$/;"	f
TimerFunc	chapt04/Atom/Atom.cpp	/^void TimerFunc(int value)$/;"	f
TimerFunc	chapt04/Atom2/atom2.cpp	/^void TimerFunc(int value)$/;"	f
TimerFunc	chapt04/Solar/solar.cpp	/^void TimerFunc(int value)$/;"	f
TimerFunction	chapt02/bounce/bounce.cpp	/^void TimerFunction(int value)$/;"	f
TimerFunction	chapt03/stencil/stencil.cpp	/^void TimerFunction(int value)$/;"	f
TimerFunction	chapt04/SphereWorld/sphereworld.cpp	/^void TimerFunction(int value)$/;"	f
TimerFunction	chapt04/Transform/transform.cpp	/^void TimerFunction(int value)$/;"	f
TimerFunction	chapt04/Transformgl/transformgl.cpp	/^void TimerFunction(int value)$/;"	f
Transform	shared/glfrustum.h	/^        void Transform(GLFrame& Camera)$/;"	f	class:GLFrustum
TransformPoint	shared/glFrame.h	/^        void TransformPoint(M3DVector3f vPointSrc, M3DVector3f vPointDst)$/;"	f	class:GLFrame
TranslateLocal	shared/glFrame.h	/^        inline void TranslateLocal(float x, float y, float z)$/;"	f	class:GLFrame
TranslateWorld	shared/glFrame.h	/^        inline void TranslateWorld(float x, float y, float z)$/;"	f	class:GLFrame
TriangleMesh.cpp	shared/TriangleMesh.cpp	1;"	F
TriangleMesh.h	shared/TriangleMesh.h	1;"	F
TypedAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^    IMF_EXPIMP_TEMPLATE template class Imf::TypedAttribute<double>;$/;"	m	class:Imf	typeref:class:Imf::
TypedAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^    IMF_EXPIMP_TEMPLATE template class Imf::TypedAttribute<float>;$/;"	m	class:Imf	typeref:class:Imf::Imf
TypedAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::TypedAttribute (): _value (T())$/;"	f	class:Imf::TypedAttribute
TypedAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::TypedAttribute (const T &value): _value (value)$/;"	f	class:Imf::TypedAttribute
TypedAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::TypedAttribute (const TypedAttribute<T> &other):$/;"	f	class:Imf::TypedAttribute
TypedAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^class TypedAttribute: public Attribute$/;"	c	namespace:Imf
TypedAttribute	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^    IMF_EXPIMP_TEMPLATE template class Imf::TypedAttribute<double>;$/;"	m	class:Imf	typeref:class:Imf::
TypedAttribute	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^    IMF_EXPIMP_TEMPLATE template class Imf::TypedAttribute<float>;$/;"	m	class:Imf	typeref:class:Imf::Imf
TypedAttribute	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::TypedAttribute (): _value (T())$/;"	f	class:Imf::TypedAttribute
TypedAttribute	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::TypedAttribute (const T &value): _value (value)$/;"	f	class:Imf::TypedAttribute
TypedAttribute	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::TypedAttribute (const TypedAttribute<T> &other):$/;"	f	class:Imf::TypedAttribute
TypedAttribute	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^class TypedAttribute: public Attribute$/;"	c	namespace:Imf
UINT	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPixelType.h	/^    UINT  = 0,		\/\/ unsigned int (32 bit)$/;"	e	enum:Imf::PixelType
UINT	shared/openexr-mac/include/OpenEXR/ImfPixelType.h	/^    UINT  = 0,		\/\/ unsigned int (32 bit)$/;"	e	enum:Imf::PixelType
V2d	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^typedef Vec2 <double> V2d;$/;"	t	namespace:Imath
V2d	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^typedef Vec2 <double> V2d;$/;"	t	namespace:Imath
V2f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^typedef Vec2 <float>  V2f;$/;"	t	namespace:Imath
V2f	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^typedef Vec2 <float>  V2f;$/;"	t	namespace:Imath
V2fAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVecAttribute.h	/^typedef TypedAttribute<Imath::V2f> V2fAttribute;$/;"	t	namespace:Imf
V2fAttribute	shared/openexr-mac/include/OpenEXR/ImfVecAttribute.h	/^typedef TypedAttribute<Imath::V2f> V2fAttribute;$/;"	t	namespace:Imf
V2i	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^typedef Vec2 <int>    V2i;$/;"	t	namespace:Imath
V2i	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^typedef Vec2 <int>    V2i;$/;"	t	namespace:Imath
V2iAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVecAttribute.h	/^typedef TypedAttribute<Imath::V2i> V2iAttribute;$/;"	t	namespace:Imf
V2iAttribute	shared/openexr-mac/include/OpenEXR/ImfVecAttribute.h	/^typedef TypedAttribute<Imath::V2i> V2iAttribute;$/;"	t	namespace:Imf
V2s	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^typedef Vec2 <short>  V2s;$/;"	t	namespace:Imath
V2s	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^typedef Vec2 <short>  V2s;$/;"	t	namespace:Imath
V3d	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^typedef Vec3 <double> V3d;$/;"	t	namespace:Imath
V3d	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^typedef Vec3 <double> V3d;$/;"	t	namespace:Imath
V3f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^typedef Vec3 <float>  V3f;$/;"	t	namespace:Imath
V3f	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^typedef Vec3 <float>  V3f;$/;"	t	namespace:Imath
V3fAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVecAttribute.h	/^typedef TypedAttribute<Imath::V3f> V3fAttribute;$/;"	t	namespace:Imf
V3fAttribute	shared/openexr-mac/include/OpenEXR/ImfVecAttribute.h	/^typedef TypedAttribute<Imath::V3f> V3fAttribute;$/;"	t	namespace:Imf
V3i	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^typedef Vec3 <int>    V3i;$/;"	t	namespace:Imath
V3i	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^typedef Vec3 <int>    V3i;$/;"	t	namespace:Imath
V3iAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVecAttribute.h	/^typedef TypedAttribute<Imath::V3i> V3iAttribute;$/;"	t	namespace:Imf
V3iAttribute	shared/openexr-mac/include/OpenEXR/ImfVecAttribute.h	/^typedef TypedAttribute<Imath::V3i> V3iAttribute;$/;"	t	namespace:Imf
V3s	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^typedef Vec3 <short>  V3s;$/;"	t	namespace:Imath
V3s	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^typedef Vec3 <short>  V3s;$/;"	t	namespace:Imath
VBOMesh.cpp	shared/VBOMesh.cpp	1;"	F
VBOMesh.h	shared/VBOMesh.h	1;"	F
VERSION_FLAGS_FIELD	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h	/^const int VERSION_FLAGS_FIELD	= 0xffffff00;$/;"	m	namespace:Imf
VERSION_FLAGS_FIELD	shared/openexr-mac/include/OpenEXR/ImfVersion.h	/^const int VERSION_FLAGS_FIELD	= 0xffffff00;$/;"	m	namespace:Imf
VERSION_NUMBER_FIELD	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h	/^const int VERSION_NUMBER_FIELD	= 0x000000ff;$/;"	m	namespace:Imf
VERSION_NUMBER_FIELD	shared/openexr-mac/include/OpenEXR/ImfVersion.h	/^const int VERSION_NUMBER_FIELD	= 0x000000ff;$/;"	m	namespace:Imf
VERTEX_DATA	shared/VBOMesh.h	26;"	d
Vec2	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::Vec2 ()$/;"	f	class:Imath::Vec2
Vec2	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::Vec2 (T a)$/;"	f	class:Imath::Vec2
Vec2	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::Vec2 (T a, T b)$/;"	f	class:Imath::Vec2
Vec2	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::Vec2 (const Vec2 &v)$/;"	f	class:Imath::Vec2
Vec2	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::Vec2 (const Vec2<S> &v)$/;"	f	class:Imath::Vec2
Vec2	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^template <class T> class Vec2$/;"	c	namespace:Imath
Vec2	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::Vec2 ()$/;"	f	class:Imath::Vec2
Vec2	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::Vec2 (T a)$/;"	f	class:Imath::Vec2
Vec2	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::Vec2 (T a, T b)$/;"	f	class:Imath::Vec2
Vec2	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::Vec2 (const Vec2 &v)$/;"	f	class:Imath::Vec2
Vec2	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::Vec2 (const Vec2<S> &v)$/;"	f	class:Imath::Vec2
Vec2	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^template <class T> class Vec2$/;"	c	namespace:Imath
Vec3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::Vec3 ()$/;"	f	class:Imath::Vec3
Vec3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::Vec3 (T a)$/;"	f	class:Imath::Vec3
Vec3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::Vec3 (T a, T b, T c)$/;"	f	class:Imath::Vec3
Vec3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::Vec3 (const Vec3 &v)$/;"	f	class:Imath::Vec3
Vec3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::Vec3 (const Vec3<S> &v)$/;"	f	class:Imath::Vec3
Vec3	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^template <class T> class Vec3$/;"	c	namespace:Imath
Vec3	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::Vec3 ()$/;"	f	class:Imath::Vec3
Vec3	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::Vec3 (T a)$/;"	f	class:Imath::Vec3
Vec3	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::Vec3 (T a, T b, T c)$/;"	f	class:Imath::Vec3
Vec3	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::Vec3 (const Vec3 &v)$/;"	f	class:Imath::Vec3
Vec3	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::Vec3 (const Vec3<S> &v)$/;"	f	class:Imath::Vec3
Vec3	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^template <class T> class Vec3$/;"	c	namespace:Imath
WGL_3DFX_multisample	shared/GLee.h	9775;"	d
WGL_3DFX_multisample	shared/wglext.h	485;"	d
WGL_3DL_stereo_control	shared/GLee.h	10085;"	d
WGL_ACCELERATION_ARB	shared/GLee.h	9491;"	d
WGL_ACCELERATION_ARB	shared/wglext.h	78;"	d
WGL_ACCELERATION_EXT	shared/GLee.h	9678;"	d
WGL_ACCELERATION_EXT	shared/wglext.h	186;"	d
WGL_ACCUM_ALPHA_BITS_ARB	shared/GLee.h	9525;"	d
WGL_ACCUM_ALPHA_BITS_ARB	shared/wglext.h	112;"	d
WGL_ACCUM_ALPHA_BITS_EXT	shared/GLee.h	9708;"	d
WGL_ACCUM_ALPHA_BITS_EXT	shared/wglext.h	216;"	d
WGL_ACCUM_BITS_ARB	shared/GLee.h	9521;"	d
WGL_ACCUM_BITS_ARB	shared/wglext.h	108;"	d
WGL_ACCUM_BITS_EXT	shared/GLee.h	9704;"	d
WGL_ACCUM_BITS_EXT	shared/wglext.h	212;"	d
WGL_ACCUM_BLUE_BITS_ARB	shared/GLee.h	9524;"	d
WGL_ACCUM_BLUE_BITS_ARB	shared/wglext.h	111;"	d
WGL_ACCUM_BLUE_BITS_EXT	shared/GLee.h	9707;"	d
WGL_ACCUM_BLUE_BITS_EXT	shared/wglext.h	215;"	d
WGL_ACCUM_GREEN_BITS_ARB	shared/GLee.h	9523;"	d
WGL_ACCUM_GREEN_BITS_ARB	shared/wglext.h	110;"	d
WGL_ACCUM_GREEN_BITS_EXT	shared/GLee.h	9706;"	d
WGL_ACCUM_GREEN_BITS_EXT	shared/wglext.h	214;"	d
WGL_ACCUM_RED_BITS_ARB	shared/GLee.h	9522;"	d
WGL_ACCUM_RED_BITS_ARB	shared/wglext.h	109;"	d
WGL_ACCUM_RED_BITS_EXT	shared/GLee.h	9705;"	d
WGL_ACCUM_RED_BITS_EXT	shared/wglext.h	213;"	d
WGL_ALPHA_BITS_ARB	shared/GLee.h	9519;"	d
WGL_ALPHA_BITS_ARB	shared/wglext.h	106;"	d
WGL_ALPHA_BITS_EXT	shared/GLee.h	9702;"	d
WGL_ALPHA_BITS_EXT	shared/wglext.h	210;"	d
WGL_ALPHA_SHIFT_ARB	shared/GLee.h	9520;"	d
WGL_ALPHA_SHIFT_ARB	shared/wglext.h	107;"	d
WGL_ALPHA_SHIFT_EXT	shared/GLee.h	9703;"	d
WGL_ALPHA_SHIFT_EXT	shared/wglext.h	211;"	d
WGL_ARB_buffer_region	shared/GLee.h	9440;"	d
WGL_ARB_buffer_region	shared/wglext.h	325;"	d
WGL_ARB_extensions_string	shared/GLee.h	9474;"	d
WGL_ARB_extensions_string	shared/wglext.h	343;"	d
WGL_ARB_make_current_read	shared/GLee.h	9551;"	d
WGL_ARB_make_current_read	shared/wglext.h	363;"	d
WGL_ARB_multisample	shared/GLee.h	9464;"	d
WGL_ARB_multisample	shared/wglext.h	339;"	d
WGL_ARB_pbuffer	shared/GLee.h	9567;"	d
WGL_ARB_pbuffer	shared/wglext.h	373;"	d
WGL_ARB_pixel_format	shared/GLee.h	9485;"	d
WGL_ARB_pixel_format	shared/wglext.h	351;"	d
WGL_ARB_pixel_format_float	shared/GLee.h	9648;"	d
WGL_ARB_render_texture	shared/GLee.h	9598;"	d
WGL_ARB_render_texture	shared/wglext.h	389;"	d
WGL_ATI_pixel_format_float	shared/GLee.h	9954;"	d
WGL_AUX0_ARB	shared/GLee.h	9624;"	d
WGL_AUX0_ARB	shared/wglext.h	166;"	d
WGL_AUX1_ARB	shared/GLee.h	9625;"	d
WGL_AUX1_ARB	shared/wglext.h	167;"	d
WGL_AUX2_ARB	shared/GLee.h	9626;"	d
WGL_AUX2_ARB	shared/wglext.h	168;"	d
WGL_AUX3_ARB	shared/GLee.h	9627;"	d
WGL_AUX3_ARB	shared/wglext.h	169;"	d
WGL_AUX4_ARB	shared/GLee.h	9628;"	d
WGL_AUX4_ARB	shared/wglext.h	170;"	d
WGL_AUX5_ARB	shared/GLee.h	9629;"	d
WGL_AUX5_ARB	shared/wglext.h	171;"	d
WGL_AUX6_ARB	shared/GLee.h	9630;"	d
WGL_AUX6_ARB	shared/wglext.h	172;"	d
WGL_AUX7_ARB	shared/GLee.h	9631;"	d
WGL_AUX7_ARB	shared/wglext.h	173;"	d
WGL_AUX8_ARB	shared/GLee.h	9632;"	d
WGL_AUX8_ARB	shared/wglext.h	174;"	d
WGL_AUX9_ARB	shared/GLee.h	9633;"	d
WGL_AUX9_ARB	shared/wglext.h	175;"	d
WGL_AUX_BUFFERS_ARB	shared/GLee.h	9528;"	d
WGL_AUX_BUFFERS_ARB	shared/wglext.h	115;"	d
WGL_AUX_BUFFERS_EXT	shared/GLee.h	9711;"	d
WGL_AUX_BUFFERS_EXT	shared/wglext.h	219;"	d
WGL_BACK_COLOR_BUFFER_BIT_ARB	shared/GLee.h	9444;"	d
WGL_BACK_COLOR_BUFFER_BIT_ARB	shared/wglext.h	61;"	d
WGL_BACK_LEFT_ARB	shared/GLee.h	9622;"	d
WGL_BACK_LEFT_ARB	shared/wglext.h	164;"	d
WGL_BACK_RIGHT_ARB	shared/GLee.h	9623;"	d
WGL_BACK_RIGHT_ARB	shared/wglext.h	165;"	d
WGL_BIND_TO_TEXTURE_DEPTH_NV	shared/GLee.h	9933;"	d
WGL_BIND_TO_TEXTURE_DEPTH_NV	shared/wglext.h	289;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV	shared/GLee.h	9934;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV	shared/wglext.h	290;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV	shared/GLee.h	9970;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV	shared/wglext.h	307;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV	shared/GLee.h	9969;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV	shared/wglext.h	306;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV	shared/GLee.h	9968;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV	shared/wglext.h	305;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV	shared/GLee.h	9967;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV	shared/wglext.h	304;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV	shared/GLee.h	9947;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV	shared/wglext.h	298;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV	shared/GLee.h	9946;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV	shared/wglext.h	297;"	d
WGL_BIND_TO_TEXTURE_RGBA_ARB	shared/GLee.h	9602;"	d
WGL_BIND_TO_TEXTURE_RGBA_ARB	shared/wglext.h	144;"	d
WGL_BIND_TO_TEXTURE_RGB_ARB	shared/GLee.h	9601;"	d
WGL_BIND_TO_TEXTURE_RGB_ARB	shared/wglext.h	143;"	d
WGL_BLUE_BITS_ARB	shared/GLee.h	9517;"	d
WGL_BLUE_BITS_ARB	shared/wglext.h	104;"	d
WGL_BLUE_BITS_EXT	shared/GLee.h	9700;"	d
WGL_BLUE_BITS_EXT	shared/wglext.h	208;"	d
WGL_BLUE_SHIFT_ARB	shared/GLee.h	9518;"	d
WGL_BLUE_SHIFT_ARB	shared/wglext.h	105;"	d
WGL_BLUE_SHIFT_EXT	shared/GLee.h	9701;"	d
WGL_BLUE_SHIFT_EXT	shared/wglext.h	209;"	d
WGL_COLOR_BITS_ARB	shared/GLee.h	9512;"	d
WGL_COLOR_BITS_ARB	shared/wglext.h	99;"	d
WGL_COLOR_BITS_EXT	shared/GLee.h	9695;"	d
WGL_COLOR_BITS_EXT	shared/wglext.h	203;"	d
WGL_CUBE_MAP_FACE_ARB	shared/GLee.h	9613;"	d
WGL_CUBE_MAP_FACE_ARB	shared/wglext.h	155;"	d
WGL_DEPTH_BITS_ARB	shared/GLee.h	9526;"	d
WGL_DEPTH_BITS_ARB	shared/wglext.h	113;"	d
WGL_DEPTH_BITS_EXT	shared/GLee.h	9709;"	d
WGL_DEPTH_BITS_EXT	shared/wglext.h	217;"	d
WGL_DEPTH_BUFFER_BIT_ARB	shared/GLee.h	9445;"	d
WGL_DEPTH_BUFFER_BIT_ARB	shared/wglext.h	62;"	d
WGL_DEPTH_COMPONENT_NV	shared/GLee.h	9937;"	d
WGL_DEPTH_COMPONENT_NV	shared/wglext.h	293;"	d
WGL_DEPTH_FLOAT_EXT	shared/GLee.h	9769;"	d
WGL_DEPTH_FLOAT_EXT	shared/wglext.h	243;"	d
WGL_DEPTH_TEXTURE_FORMAT_NV	shared/GLee.h	9935;"	d
WGL_DEPTH_TEXTURE_FORMAT_NV	shared/wglext.h	291;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D	shared/GLee.h	9798;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D	shared/wglext.h	257;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D	shared/GLee.h	9799;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D	shared/wglext.h	258;"	d
WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D	shared/GLee.h	9800;"	d
WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D	shared/wglext.h	259;"	d
WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D	shared/GLee.h	9801;"	d
WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D	shared/wglext.h	260;"	d
WGL_DOUBLE_BUFFER_ARB	shared/GLee.h	9509;"	d
WGL_DOUBLE_BUFFER_ARB	shared/wglext.h	96;"	d
WGL_DOUBLE_BUFFER_EXT	shared/GLee.h	9692;"	d
WGL_DOUBLE_BUFFER_EXT	shared/wglext.h	200;"	d
WGL_DRAW_TO_BITMAP_ARB	shared/GLee.h	9490;"	d
WGL_DRAW_TO_BITMAP_ARB	shared/wglext.h	77;"	d
WGL_DRAW_TO_BITMAP_EXT	shared/GLee.h	9677;"	d
WGL_DRAW_TO_BITMAP_EXT	shared/wglext.h	185;"	d
WGL_DRAW_TO_PBUFFER_ARB	shared/GLee.h	9570;"	d
WGL_DRAW_TO_PBUFFER_ARB	shared/wglext.h	132;"	d
WGL_DRAW_TO_PBUFFER_EXT	shared/GLee.h	9737;"	d
WGL_DRAW_TO_PBUFFER_EXT	shared/wglext.h	231;"	d
WGL_DRAW_TO_WINDOW_ARB	shared/GLee.h	9489;"	d
WGL_DRAW_TO_WINDOW_ARB	shared/wglext.h	76;"	d
WGL_DRAW_TO_WINDOW_EXT	shared/GLee.h	9676;"	d
WGL_DRAW_TO_WINDOW_EXT	shared/wglext.h	184;"	d
WGL_EXT_depth_float	shared/GLee.h	9766;"	d
WGL_EXT_depth_float	shared/wglext.h	471;"	d
WGL_EXT_display_color_table	shared/GLee.h	9980;"	d
WGL_EXT_display_color_table	shared/wglext.h	401;"	d
WGL_EXT_extensions_string	shared/GLee.h	10000;"	d
WGL_EXT_extensions_string	shared/wglext.h	415;"	d
WGL_EXT_make_current_read	shared/GLee.h	9657;"	d
WGL_EXT_make_current_read	shared/wglext.h	423;"	d
WGL_EXT_multisample	shared/GLee.h	9785;"	d
WGL_EXT_multisample	shared/wglext.h	489;"	d
WGL_EXT_pbuffer	shared/GLee.h	9734;"	d
WGL_EXT_pbuffer	shared/wglext.h	433;"	d
WGL_EXT_pixel_format	shared/GLee.h	9672;"	d
WGL_EXT_pixel_format	shared/wglext.h	449;"	d
WGL_EXT_swap_control	shared/GLee.h	10011;"	d
WGL_EXT_swap_control	shared/wglext.h	461;"	d
WGL_FLOAT_COMPONENTS_NV	shared/GLee.h	9966;"	d
WGL_FLOAT_COMPONENTS_NV	shared/wglext.h	303;"	d
WGL_FRONT_COLOR_BUFFER_BIT_ARB	shared/GLee.h	9443;"	d
WGL_FRONT_COLOR_BUFFER_BIT_ARB	shared/wglext.h	60;"	d
WGL_FRONT_LEFT_ARB	shared/GLee.h	9620;"	d
WGL_FRONT_LEFT_ARB	shared/wglext.h	162;"	d
WGL_FRONT_RIGHT_ARB	shared/GLee.h	9621;"	d
WGL_FRONT_RIGHT_ARB	shared/wglext.h	163;"	d
WGL_FULL_ACCELERATION_ARB	shared/GLee.h	9531;"	d
WGL_FULL_ACCELERATION_ARB	shared/wglext.h	118;"	d
WGL_FULL_ACCELERATION_EXT	shared/GLee.h	9714;"	d
WGL_FULL_ACCELERATION_EXT	shared/wglext.h	222;"	d
WGL_GAMMA_EXCLUDE_DESKTOP_I3D	shared/GLee.h	9817;"	d
WGL_GAMMA_EXCLUDE_DESKTOP_I3D	shared/wglext.h	265;"	d
WGL_GAMMA_TABLE_SIZE_I3D	shared/GLee.h	9816;"	d
WGL_GAMMA_TABLE_SIZE_I3D	shared/wglext.h	264;"	d
WGL_GENERIC_ACCELERATION_ARB	shared/GLee.h	9530;"	d
WGL_GENERIC_ACCELERATION_ARB	shared/wglext.h	117;"	d
WGL_GENERIC_ACCELERATION_EXT	shared/GLee.h	9713;"	d
WGL_GENERIC_ACCELERATION_EXT	shared/wglext.h	221;"	d
WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D	shared/GLee.h	9843;"	d
WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D	shared/wglext.h	274;"	d
WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D	shared/GLee.h	9842;"	d
WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D	shared/wglext.h	273;"	d
WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D	shared/GLee.h	9846;"	d
WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D	shared/wglext.h	277;"	d
WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D	shared/GLee.h	9844;"	d
WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D	shared/wglext.h	275;"	d
WGL_GENLOCK_SOURCE_EDGE_RISING_I3D	shared/GLee.h	9845;"	d
WGL_GENLOCK_SOURCE_EDGE_RISING_I3D	shared/wglext.h	276;"	d
WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D	shared/GLee.h	9840;"	d
WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D	shared/wglext.h	271;"	d
WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D	shared/GLee.h	9839;"	d
WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D	shared/wglext.h	270;"	d
WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D	shared/GLee.h	9841;"	d
WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D	shared/wglext.h	272;"	d
WGL_GENLOCK_SOURCE_MULTIVIEW_I3D	shared/GLee.h	9838;"	d
WGL_GENLOCK_SOURCE_MULTIVIEW_I3D	shared/wglext.h	269;"	d
WGL_GREEN_BITS_ARB	shared/GLee.h	9515;"	d
WGL_GREEN_BITS_ARB	shared/wglext.h	102;"	d
WGL_GREEN_BITS_EXT	shared/GLee.h	9698;"	d
WGL_GREEN_BITS_EXT	shared/wglext.h	206;"	d
WGL_GREEN_SHIFT_ARB	shared/GLee.h	9516;"	d
WGL_GREEN_SHIFT_ARB	shared/wglext.h	103;"	d
WGL_GREEN_SHIFT_EXT	shared/GLee.h	9699;"	d
WGL_GREEN_SHIFT_EXT	shared/wglext.h	207;"	d
WGL_I3D_digital_video_control	shared/GLee.h	9795;"	d
WGL_I3D_digital_video_control	shared/wglext.h	511;"	d
WGL_I3D_gamma	shared/GLee.h	9813;"	d
WGL_I3D_gamma	shared/wglext.h	521;"	d
WGL_I3D_genlock	shared/GLee.h	9835;"	d
WGL_I3D_genlock	shared/wglext.h	535;"	d
WGL_I3D_image_buffer	shared/GLee.h	9888;"	d
WGL_I3D_image_buffer	shared/wglext.h	565;"	d
WGL_I3D_swap_frame_lock	shared/GLee.h	9910;"	d
WGL_I3D_swap_frame_lock	shared/wglext.h	579;"	d
WGL_I3D_swap_frame_usage	shared/GLee.h	10065;"	d
WGL_I3D_swap_frame_usage	shared/wglext.h	593;"	d
WGL_IMAGE_BUFFER_LOCK_I3D	shared/GLee.h	9892;"	d
WGL_IMAGE_BUFFER_LOCK_I3D	shared/wglext.h	282;"	d
WGL_IMAGE_BUFFER_MIN_ACCESS_I3D	shared/GLee.h	9891;"	d
WGL_IMAGE_BUFFER_MIN_ACCESS_I3D	shared/wglext.h	281;"	d
WGL_MAX_PBUFFER_HEIGHT_ARB	shared/GLee.h	9573;"	d
WGL_MAX_PBUFFER_HEIGHT_ARB	shared/wglext.h	135;"	d
WGL_MAX_PBUFFER_HEIGHT_EXT	shared/GLee.h	9740;"	d
WGL_MAX_PBUFFER_HEIGHT_EXT	shared/wglext.h	234;"	d
WGL_MAX_PBUFFER_PIXELS_ARB	shared/GLee.h	9571;"	d
WGL_MAX_PBUFFER_PIXELS_ARB	shared/wglext.h	133;"	d
WGL_MAX_PBUFFER_PIXELS_EXT	shared/GLee.h	9738;"	d
WGL_MAX_PBUFFER_PIXELS_EXT	shared/wglext.h	232;"	d
WGL_MAX_PBUFFER_WIDTH_ARB	shared/GLee.h	9572;"	d
WGL_MAX_PBUFFER_WIDTH_ARB	shared/wglext.h	134;"	d
WGL_MAX_PBUFFER_WIDTH_EXT	shared/GLee.h	9739;"	d
WGL_MAX_PBUFFER_WIDTH_EXT	shared/wglext.h	233;"	d
WGL_MIPMAP_LEVEL_ARB	shared/GLee.h	9612;"	d
WGL_MIPMAP_LEVEL_ARB	shared/wglext.h	154;"	d
WGL_MIPMAP_TEXTURE_ARB	shared/GLee.h	9605;"	d
WGL_MIPMAP_TEXTURE_ARB	shared/wglext.h	147;"	d
WGL_NEED_PALETTE_ARB	shared/GLee.h	9492;"	d
WGL_NEED_PALETTE_ARB	shared/wglext.h	79;"	d
WGL_NEED_PALETTE_EXT	shared/GLee.h	9679;"	d
WGL_NEED_PALETTE_EXT	shared/wglext.h	187;"	d
WGL_NEED_SYSTEM_PALETTE_ARB	shared/GLee.h	9493;"	d
WGL_NEED_SYSTEM_PALETTE_ARB	shared/wglext.h	80;"	d
WGL_NEED_SYSTEM_PALETTE_EXT	shared/GLee.h	9680;"	d
WGL_NEED_SYSTEM_PALETTE_EXT	shared/wglext.h	188;"	d
WGL_NO_ACCELERATION_ARB	shared/GLee.h	9529;"	d
WGL_NO_ACCELERATION_ARB	shared/wglext.h	116;"	d
WGL_NO_ACCELERATION_EXT	shared/GLee.h	9712;"	d
WGL_NO_ACCELERATION_EXT	shared/wglext.h	220;"	d
WGL_NO_TEXTURE_ARB	shared/GLee.h	9608;"	d
WGL_NO_TEXTURE_ARB	shared/wglext.h	150;"	d
WGL_NUMBER_OVERLAYS_ARB	shared/GLee.h	9496;"	d
WGL_NUMBER_OVERLAYS_ARB	shared/wglext.h	83;"	d
WGL_NUMBER_OVERLAYS_EXT	shared/GLee.h	9683;"	d
WGL_NUMBER_OVERLAYS_EXT	shared/wglext.h	191;"	d
WGL_NUMBER_PIXEL_FORMATS_ARB	shared/GLee.h	9488;"	d
WGL_NUMBER_PIXEL_FORMATS_ARB	shared/wglext.h	75;"	d
WGL_NUMBER_PIXEL_FORMATS_EXT	shared/GLee.h	9675;"	d
WGL_NUMBER_PIXEL_FORMATS_EXT	shared/wglext.h	183;"	d
WGL_NUMBER_UNDERLAYS_ARB	shared/GLee.h	9497;"	d
WGL_NUMBER_UNDERLAYS_ARB	shared/wglext.h	84;"	d
WGL_NUMBER_UNDERLAYS_EXT	shared/GLee.h	9684;"	d
WGL_NUMBER_UNDERLAYS_EXT	shared/wglext.h	192;"	d
WGL_NV_float_buffer	shared/GLee.h	9963;"	d
WGL_NV_render_depth_texture	shared/GLee.h	9930;"	d
WGL_NV_render_texture_rectangle	shared/GLee.h	9943;"	d
WGL_NV_vertex_array_range	shared/GLee.h	10025;"	d
WGL_NV_vertex_array_range	shared/wglext.h	475;"	d
WGL_OML_sync_control	shared/GLee.h	10039;"	d
WGL_OML_sync_control	shared/wglext.h	493;"	d
WGL_OPTIMAL_PBUFFER_HEIGHT_EXT	shared/GLee.h	9742;"	d
WGL_OPTIMAL_PBUFFER_HEIGHT_EXT	shared/wglext.h	236;"	d
WGL_OPTIMAL_PBUFFER_WIDTH_EXT	shared/GLee.h	9741;"	d
WGL_OPTIMAL_PBUFFER_WIDTH_EXT	shared/wglext.h	235;"	d
WGL_PBUFFER_HEIGHT_ARB	shared/GLee.h	9576;"	d
WGL_PBUFFER_HEIGHT_ARB	shared/wglext.h	138;"	d
WGL_PBUFFER_HEIGHT_EXT	shared/GLee.h	9745;"	d
WGL_PBUFFER_HEIGHT_EXT	shared/wglext.h	239;"	d
WGL_PBUFFER_LARGEST_ARB	shared/GLee.h	9574;"	d
WGL_PBUFFER_LARGEST_ARB	shared/wglext.h	136;"	d
WGL_PBUFFER_LARGEST_EXT	shared/GLee.h	9743;"	d
WGL_PBUFFER_LARGEST_EXT	shared/wglext.h	237;"	d
WGL_PBUFFER_LOST_ARB	shared/GLee.h	9577;"	d
WGL_PBUFFER_LOST_ARB	shared/wglext.h	139;"	d
WGL_PBUFFER_WIDTH_ARB	shared/GLee.h	9575;"	d
WGL_PBUFFER_WIDTH_ARB	shared/wglext.h	137;"	d
WGL_PBUFFER_WIDTH_EXT	shared/GLee.h	9744;"	d
WGL_PBUFFER_WIDTH_EXT	shared/wglext.h	238;"	d
WGL_PIXEL_TYPE_ARB	shared/GLee.h	9511;"	d
WGL_PIXEL_TYPE_ARB	shared/wglext.h	98;"	d
WGL_PIXEL_TYPE_EXT	shared/GLee.h	9694;"	d
WGL_PIXEL_TYPE_EXT	shared/wglext.h	202;"	d
WGL_RED_BITS_ARB	shared/GLee.h	9513;"	d
WGL_RED_BITS_ARB	shared/wglext.h	100;"	d
WGL_RED_BITS_EXT	shared/GLee.h	9696;"	d
WGL_RED_BITS_EXT	shared/wglext.h	204;"	d
WGL_RED_SHIFT_ARB	shared/GLee.h	9514;"	d
WGL_RED_SHIFT_ARB	shared/wglext.h	101;"	d
WGL_RED_SHIFT_EXT	shared/GLee.h	9697;"	d
WGL_RED_SHIFT_EXT	shared/wglext.h	205;"	d
WGL_SAMPLES_3DFX	shared/GLee.h	9779;"	d
WGL_SAMPLES_3DFX	shared/wglext.h	248;"	d
WGL_SAMPLES_ARB	shared/GLee.h	9468;"	d
WGL_SAMPLES_ARB	shared/wglext.h	68;"	d
WGL_SAMPLES_EXT	shared/GLee.h	9789;"	d
WGL_SAMPLES_EXT	shared/wglext.h	253;"	d
WGL_SAMPLE_BUFFERS_3DFX	shared/GLee.h	9778;"	d
WGL_SAMPLE_BUFFERS_3DFX	shared/wglext.h	247;"	d
WGL_SAMPLE_BUFFERS_ARB	shared/GLee.h	9467;"	d
WGL_SAMPLE_BUFFERS_ARB	shared/wglext.h	67;"	d
WGL_SAMPLE_BUFFERS_EXT	shared/GLee.h	9788;"	d
WGL_SAMPLE_BUFFERS_EXT	shared/wglext.h	252;"	d
WGL_SHARE_ACCUM_ARB	shared/GLee.h	9506;"	d
WGL_SHARE_ACCUM_ARB	shared/wglext.h	93;"	d
WGL_SHARE_ACCUM_EXT	shared/GLee.h	9689;"	d
WGL_SHARE_ACCUM_EXT	shared/wglext.h	197;"	d
WGL_SHARE_DEPTH_ARB	shared/GLee.h	9504;"	d
WGL_SHARE_DEPTH_ARB	shared/wglext.h	91;"	d
WGL_SHARE_DEPTH_EXT	shared/GLee.h	9687;"	d
WGL_SHARE_DEPTH_EXT	shared/wglext.h	195;"	d
WGL_SHARE_STENCIL_ARB	shared/GLee.h	9505;"	d
WGL_SHARE_STENCIL_ARB	shared/wglext.h	92;"	d
WGL_SHARE_STENCIL_EXT	shared/GLee.h	9688;"	d
WGL_SHARE_STENCIL_EXT	shared/wglext.h	196;"	d
WGL_STENCIL_BITS_ARB	shared/GLee.h	9527;"	d
WGL_STENCIL_BITS_ARB	shared/wglext.h	114;"	d
WGL_STENCIL_BITS_EXT	shared/GLee.h	9710;"	d
WGL_STENCIL_BITS_EXT	shared/wglext.h	218;"	d
WGL_STENCIL_BUFFER_BIT_ARB	shared/GLee.h	9446;"	d
WGL_STENCIL_BUFFER_BIT_ARB	shared/wglext.h	63;"	d
WGL_STEREO_ARB	shared/GLee.h	9510;"	d
WGL_STEREO_ARB	shared/wglext.h	97;"	d
WGL_STEREO_EMITTER_DISABLE_3DL	shared/GLee.h	10089;"	d
WGL_STEREO_EMITTER_ENABLE_3DL	shared/GLee.h	10088;"	d
WGL_STEREO_EXT	shared/GLee.h	9693;"	d
WGL_STEREO_EXT	shared/wglext.h	201;"	d
WGL_STEREO_POLARITY_INVERT_3DL	shared/GLee.h	10091;"	d
WGL_STEREO_POLARITY_NORMAL_3DL	shared/GLee.h	10090;"	d
WGL_SUPPORT_GDI_ARB	shared/GLee.h	9507;"	d
WGL_SUPPORT_GDI_ARB	shared/wglext.h	94;"	d
WGL_SUPPORT_GDI_EXT	shared/GLee.h	9690;"	d
WGL_SUPPORT_GDI_EXT	shared/wglext.h	198;"	d
WGL_SUPPORT_OPENGL_ARB	shared/GLee.h	9508;"	d
WGL_SUPPORT_OPENGL_ARB	shared/wglext.h	95;"	d
WGL_SUPPORT_OPENGL_EXT	shared/GLee.h	9691;"	d
WGL_SUPPORT_OPENGL_EXT	shared/wglext.h	199;"	d
WGL_SWAP_COPY_ARB	shared/GLee.h	9533;"	d
WGL_SWAP_COPY_ARB	shared/wglext.h	120;"	d
WGL_SWAP_COPY_EXT	shared/GLee.h	9716;"	d
WGL_SWAP_COPY_EXT	shared/wglext.h	224;"	d
WGL_SWAP_EXCHANGE_ARB	shared/GLee.h	9532;"	d
WGL_SWAP_EXCHANGE_ARB	shared/wglext.h	119;"	d
WGL_SWAP_EXCHANGE_EXT	shared/GLee.h	9715;"	d
WGL_SWAP_EXCHANGE_EXT	shared/wglext.h	223;"	d
WGL_SWAP_LAYER_BUFFERS_ARB	shared/GLee.h	9494;"	d
WGL_SWAP_LAYER_BUFFERS_ARB	shared/wglext.h	81;"	d
WGL_SWAP_LAYER_BUFFERS_EXT	shared/GLee.h	9681;"	d
WGL_SWAP_LAYER_BUFFERS_EXT	shared/wglext.h	189;"	d
WGL_SWAP_METHOD_ARB	shared/GLee.h	9495;"	d
WGL_SWAP_METHOD_ARB	shared/wglext.h	82;"	d
WGL_SWAP_METHOD_EXT	shared/GLee.h	9682;"	d
WGL_SWAP_METHOD_EXT	shared/wglext.h	190;"	d
WGL_SWAP_UNDEFINED_ARB	shared/GLee.h	9534;"	d
WGL_SWAP_UNDEFINED_ARB	shared/wglext.h	121;"	d
WGL_SWAP_UNDEFINED_EXT	shared/GLee.h	9717;"	d
WGL_SWAP_UNDEFINED_EXT	shared/wglext.h	225;"	d
WGL_TEXTURE_1D_ARB	shared/GLee.h	9610;"	d
WGL_TEXTURE_1D_ARB	shared/wglext.h	152;"	d
WGL_TEXTURE_2D_ARB	shared/GLee.h	9611;"	d
WGL_TEXTURE_2D_ARB	shared/wglext.h	153;"	d
WGL_TEXTURE_CUBE_MAP_ARB	shared/GLee.h	9609;"	d
WGL_TEXTURE_CUBE_MAP_ARB	shared/wglext.h	151;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	shared/GLee.h	9615;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	shared/wglext.h	157;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	shared/GLee.h	9617;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	shared/wglext.h	159;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	shared/GLee.h	9619;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	shared/wglext.h	161;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	shared/GLee.h	9614;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	shared/wglext.h	156;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	shared/GLee.h	9616;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	shared/wglext.h	158;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	shared/GLee.h	9618;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	shared/wglext.h	160;"	d
WGL_TEXTURE_DEPTH_COMPONENT_NV	shared/GLee.h	9936;"	d
WGL_TEXTURE_DEPTH_COMPONENT_NV	shared/wglext.h	292;"	d
WGL_TEXTURE_FLOAT_RGBA_NV	shared/GLee.h	9974;"	d
WGL_TEXTURE_FLOAT_RGBA_NV	shared/wglext.h	311;"	d
WGL_TEXTURE_FLOAT_RGB_NV	shared/GLee.h	9973;"	d
WGL_TEXTURE_FLOAT_RGB_NV	shared/wglext.h	310;"	d
WGL_TEXTURE_FLOAT_RG_NV	shared/GLee.h	9972;"	d
WGL_TEXTURE_FLOAT_RG_NV	shared/wglext.h	309;"	d
WGL_TEXTURE_FLOAT_R_NV	shared/GLee.h	9971;"	d
WGL_TEXTURE_FLOAT_R_NV	shared/wglext.h	308;"	d
WGL_TEXTURE_FORMAT_ARB	shared/GLee.h	9603;"	d
WGL_TEXTURE_FORMAT_ARB	shared/wglext.h	145;"	d
WGL_TEXTURE_RECTANGLE_NV	shared/GLee.h	9948;"	d
WGL_TEXTURE_RECTANGLE_NV	shared/wglext.h	299;"	d
WGL_TEXTURE_RGBA_ARB	shared/GLee.h	9607;"	d
WGL_TEXTURE_RGBA_ARB	shared/wglext.h	149;"	d
WGL_TEXTURE_RGB_ARB	shared/GLee.h	9606;"	d
WGL_TEXTURE_RGB_ARB	shared/wglext.h	148;"	d
WGL_TEXTURE_TARGET_ARB	shared/GLee.h	9604;"	d
WGL_TEXTURE_TARGET_ARB	shared/wglext.h	146;"	d
WGL_TRANSPARENT_ALPHA_VALUE_ARB	shared/GLee.h	9502;"	d
WGL_TRANSPARENT_ALPHA_VALUE_ARB	shared/wglext.h	89;"	d
WGL_TRANSPARENT_ARB	shared/GLee.h	9498;"	d
WGL_TRANSPARENT_ARB	shared/wglext.h	85;"	d
WGL_TRANSPARENT_BLUE_VALUE_ARB	shared/GLee.h	9501;"	d
WGL_TRANSPARENT_BLUE_VALUE_ARB	shared/wglext.h	88;"	d
WGL_TRANSPARENT_EXT	shared/GLee.h	9685;"	d
WGL_TRANSPARENT_EXT	shared/wglext.h	193;"	d
WGL_TRANSPARENT_GREEN_VALUE_ARB	shared/GLee.h	9500;"	d
WGL_TRANSPARENT_GREEN_VALUE_ARB	shared/wglext.h	87;"	d
WGL_TRANSPARENT_INDEX_VALUE_ARB	shared/GLee.h	9503;"	d
WGL_TRANSPARENT_INDEX_VALUE_ARB	shared/wglext.h	90;"	d
WGL_TRANSPARENT_RED_VALUE_ARB	shared/GLee.h	9499;"	d
WGL_TRANSPARENT_RED_VALUE_ARB	shared/wglext.h	86;"	d
WGL_TRANSPARENT_VALUE_EXT	shared/GLee.h	9686;"	d
WGL_TRANSPARENT_VALUE_EXT	shared/wglext.h	194;"	d
WGL_TYPE_COLORINDEX_ARB	shared/GLee.h	9536;"	d
WGL_TYPE_COLORINDEX_ARB	shared/wglext.h	123;"	d
WGL_TYPE_COLORINDEX_EXT	shared/GLee.h	9719;"	d
WGL_TYPE_COLORINDEX_EXT	shared/wglext.h	227;"	d
WGL_TYPE_RGBA_ARB	shared/GLee.h	9535;"	d
WGL_TYPE_RGBA_ARB	shared/wglext.h	122;"	d
WGL_TYPE_RGBA_EXT	shared/GLee.h	9718;"	d
WGL_TYPE_RGBA_EXT	shared/wglext.h	226;"	d
WGL_TYPE_RGBA_FLOAT_ARB	shared/GLee.h	9651;"	d
WGL_TYPE_RGBA_FLOAT_ATI	shared/GLee.h	9957;"	d
WGL_WGLEXT_VERSION	shared/wglext.h	57;"	d
WIN32_LEAN_AND_MEAN	include/GL/freeglut_std.h	58;"	d
WIN32_LEAN_AND_MEAN	include/GL/gl.h	88;"	d
WIN32_LEAN_AND_MEAN	include/GL/glext.h	39;"	d
WIN32_LEAN_AND_MEAN	include/GL/glxext.h	34;"	d
WIN32_LEAN_AND_MEAN	shared/GLee.h	56;"	d
WIN32_LEAN_AND_MEAN	shared/freeglut_std.h	57;"	d
WIN32_LEAN_AND_MEAN	shared/wglext.h	38;"	d
WRITE_A	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    WRITE_A	= 0x08,		\/\/ Alpha$/;"	e	enum:Imf::RgbaChannels
WRITE_A	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    WRITE_A	= 0x08,		\/\/ Alpha$/;"	e	enum:Imf::RgbaChannels
WRITE_B	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    WRITE_B	= 0x04,		\/\/ Blue$/;"	e	enum:Imf::RgbaChannels
WRITE_B	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    WRITE_B	= 0x04,		\/\/ Blue$/;"	e	enum:Imf::RgbaChannels
WRITE_C	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    WRITE_C	= 0x20,		\/\/ Chroma (two subsampled channels, RY and BY,$/;"	e	enum:Imf::RgbaChannels
WRITE_C	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    WRITE_C	= 0x20,		\/\/ Chroma (two subsampled channels, RY and BY,$/;"	e	enum:Imf::RgbaChannels
WRITE_G	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    WRITE_G	= 0x02,		\/\/ Green$/;"	e	enum:Imf::RgbaChannels
WRITE_G	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    WRITE_G	= 0x02,		\/\/ Green$/;"	e	enum:Imf::RgbaChannels
WRITE_R	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    WRITE_R	= 0x01,		\/\/ Red$/;"	e	enum:Imf::RgbaChannels
WRITE_R	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    WRITE_R	= 0x01,		\/\/ Red$/;"	e	enum:Imf::RgbaChannels
WRITE_RGB	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    WRITE_RGB	= 0x07,		\/\/ Red, green, blue$/;"	e	enum:Imf::RgbaChannels
WRITE_RGB	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    WRITE_RGB	= 0x07,		\/\/ Red, green, blue$/;"	e	enum:Imf::RgbaChannels
WRITE_RGBA	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    WRITE_RGBA	= 0x0f,		\/\/ Red, green, blue, alpha$/;"	e	enum:Imf::RgbaChannels
WRITE_RGBA	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    WRITE_RGBA	= 0x0f,		\/\/ Red, green, blue, alpha$/;"	e	enum:Imf::RgbaChannels
WRITE_Y	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    WRITE_Y	= 0x10,		\/\/ Luminance, for black-and-white images,$/;"	e	enum:Imf::RgbaChannels
WRITE_Y	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    WRITE_Y	= 0x10,		\/\/ Luminance, for black-and-white images,$/;"	e	enum:Imf::RgbaChannels
WRITE_YA	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    WRITE_YA	= 0x18,		\/\/ Luminance, alpha$/;"	e	enum:Imf::RgbaChannels
WRITE_YA	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    WRITE_YA	= 0x18,		\/\/ Luminance, alpha$/;"	e	enum:Imf::RgbaChannels
WRITE_YC	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    WRITE_YC	= 0x30,		\/\/ Luminance, chroma$/;"	e	enum:Imf::RgbaChannels
WRITE_YC	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    WRITE_YC	= 0x30,		\/\/ Luminance, chroma$/;"	e	enum:Imf::RgbaChannels
WRITE_YCA	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    WRITE_YCA	= 0x38		\/\/ Luminance, chroma, alpha$/;"	e	enum:Imf::RgbaChannels
WRITE_YCA	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    WRITE_YCA	= 0x38		\/\/ Luminance, chroma, alpha$/;"	e	enum:Imf::RgbaChannels
WorldToLocal	shared/glFrame.h	/^        void WorldToLocal(const M3DVector3f vWorld, M3DVector3f vLocal)$/;"	f	class:GLFrame
X	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^    enum Axis { X = 0, Y = 1, Z = 2 };$/;"	e	enum:Imath::Euler::Axis
X	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^    enum Axis { X = 0, Y = 1, Z = 2 };$/;"	e	enum:Imath::Euler::Axis
XOrigin	include/GL/glxext.h	/^    int XOrigin, YOrigin, maxHeight, maxWidth;$/;"	m	struct:__anon6
XOrigin	shared/GLee.h	/^			int XOrigin; $/;"	m	struct:__anon15
XYX	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	XYX	= 0x0111,$/;"	e	enum:Imath::Euler::Order
XYX	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	XYX	= 0x0111,$/;"	e	enum:Imath::Euler::Order
XYXr	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	XYXr	= 0x2010,$/;"	e	enum:Imath::Euler::Order
XYXr	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	XYXr	= 0x2010,$/;"	e	enum:Imath::Euler::Order
XYZ	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	XYZ	= 0x0101,	\/\/ "usual" orderings$/;"	e	enum:Imath::Euler::Order
XYZ	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	XYZ	= 0x0101,	\/\/ "usual" orderings$/;"	e	enum:Imath::Euler::Order
XYZLayout	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^    enum InputLayout { XYZLayout, IJKLayout };$/;"	e	enum:Imath::Euler::InputLayout
XYZLayout	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^    enum InputLayout { XYZLayout, IJKLayout };$/;"	e	enum:Imath::Euler::InputLayout
XYZr	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	XYZr	= 0x2000,	\/\/ relative orderings -- not common$/;"	e	enum:Imath::Euler::Order
XYZr	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	XYZr	= 0x2000,	\/\/ relative orderings -- not common$/;"	e	enum:Imath::Euler::Order
XZX	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	XZX	= 0x0011,	\/\/ first axis repeated$/;"	e	enum:Imath::Euler::Order
XZX	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	XZX	= 0x0011,	\/\/ first axis repeated$/;"	e	enum:Imath::Euler::Order
XZXr	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	XZXr	= 0x2110,	\/\/ relative first axis repeated $/;"	e	enum:Imath::Euler::Order
XZXr	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	XZXr	= 0x2110,	\/\/ relative first axis repeated $/;"	e	enum:Imath::Euler::Order
XZY	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	XZY	= 0x0001,$/;"	e	enum:Imath::Euler::Order
XZY	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	XZY	= 0x0001,$/;"	e	enum:Imath::Euler::Order
XZYr	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	XZYr	= 0x2100,$/;"	e	enum:Imath::Euler::Order
XZYr	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	XZYr	= 0x2100,$/;"	e	enum:Imath::Euler::Order
Xdr	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^namespace Xdr {$/;"	n	namespace:Imf
Xdr	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^namespace Xdr {$/;"	n	namespace:Imf
Y	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^    enum Axis { X = 0, Y = 1, Z = 2 };$/;"	e	enum:Imath::Euler::Axis
Y	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^    enum Axis { X = 0, Y = 1, Z = 2 };$/;"	e	enum:Imath::Euler::Axis
YOrigin	include/GL/glxext.h	/^    int XOrigin, YOrigin, maxHeight, maxWidth;$/;"	m	struct:__anon6
YOrigin	shared/GLee.h	/^			int YOrigin;$/;"	m	struct:__anon15
YXY	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	YXY	= 0x1011,$/;"	e	enum:Imath::Euler::Order
YXY	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	YXY	= 0x1011,$/;"	e	enum:Imath::Euler::Order
YXYr	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	YXYr	= 0x1110,$/;"	e	enum:Imath::Euler::Order
YXYr	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	YXYr	= 0x1110,$/;"	e	enum:Imath::Euler::Order
YXZ	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	YXZ	= 0x1001,$/;"	e	enum:Imath::Euler::Order
YXZ	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	YXZ	= 0x1001,$/;"	e	enum:Imath::Euler::Order
YXZr	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	YXZr	= 0x1100,$/;"	e	enum:Imath::Euler::Order
YXZr	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	YXZr	= 0x1100,$/;"	e	enum:Imath::Euler::Order
YZX	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	YZX	= 0x1101,$/;"	e	enum:Imath::Euler::Order
YZX	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	YZX	= 0x1101,$/;"	e	enum:Imath::Euler::Order
YZXr	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	YZXr	= 0x1000,$/;"	e	enum:Imath::Euler::Order
YZXr	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	YZXr	= 0x1000,$/;"	e	enum:Imath::Euler::Order
YZY	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	YZY	= 0x1111,$/;"	e	enum:Imath::Euler::Order
YZY	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	YZY	= 0x1111,$/;"	e	enum:Imath::Euler::Order
YZYr	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	YZYr	= 0x1010,$/;"	e	enum:Imath::Euler::Order
YZYr	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	YZYr	= 0x1010,$/;"	e	enum:Imath::Euler::Order
Z	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^    enum Axis { X = 0, Y = 1, Z = 2 };$/;"	e	enum:Imath::Euler::Axis
Z	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^    enum Axis { X = 0, Y = 1, Z = 2 };$/;"	e	enum:Imath::Euler::Axis
ZIPS_COMPRESSION	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompression.h	/^    ZIPS_COMPRESSION = 2,	\/\/ zlib compression, one scan line at a time$/;"	e	enum:Imf::Compression
ZIPS_COMPRESSION	shared/openexr-mac/include/OpenEXR/ImfCompression.h	/^    ZIPS_COMPRESSION = 2,	\/\/ zlib compression, one scan line at a time$/;"	e	enum:Imf::Compression
ZIP_COMPRESSION	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompression.h	/^    ZIP_COMPRESSION = 3,	\/\/ zlib compression, in blocks of 16 scan lines$/;"	e	enum:Imf::Compression
ZIP_COMPRESSION	shared/openexr-mac/include/OpenEXR/ImfCompression.h	/^    ZIP_COMPRESSION = 3,	\/\/ zlib compression, in blocks of 16 scan lines$/;"	e	enum:Imf::Compression
ZToDepth	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^T Frustum<T>::ZToDepth(long zval,long zmin,long zmax) const$/;"	f	class:Imath::Frustum
ZToDepth	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^T Frustum<T>::ZToDepth(long zval,long zmin,long zmax) const$/;"	f	class:Imath::Frustum
ZXY	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	ZXY	= 0x2101,$/;"	e	enum:Imath::Euler::Order
ZXY	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	ZXY	= 0x2101,$/;"	e	enum:Imath::Euler::Order
ZXYr	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	ZXYr	= 0x0000,$/;"	e	enum:Imath::Euler::Order
ZXYr	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	ZXYr	= 0x0000,$/;"	e	enum:Imath::Euler::Order
ZXZ	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	ZXZ	= 0x2111,$/;"	e	enum:Imath::Euler::Order
ZXZ	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	ZXZ	= 0x2111,$/;"	e	enum:Imath::Euler::Order
ZXZr	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	ZXZr	= 0x0010,$/;"	e	enum:Imath::Euler::Order
ZXZr	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	ZXZr	= 0x0010,$/;"	e	enum:Imath::Euler::Order
ZYX	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	ZYX	= 0x2001,$/;"	e	enum:Imath::Euler::Order
ZYX	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	ZYX	= 0x2001,$/;"	e	enum:Imath::Euler::Order
ZYXr	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	ZYXr	= 0x0100,$/;"	e	enum:Imath::Euler::Order
ZYXr	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	ZYXr	= 0x0100,$/;"	e	enum:Imath::Euler::Order
ZYZ	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	ZYZ	= 0x2011,$/;"	e	enum:Imath::Euler::Order
ZYZ	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	ZYZ	= 0x2011,$/;"	e	enum:Imath::Euler::Order
ZYZr	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^	ZYZr	= 0x0110,$/;"	e	enum:Imath::Euler::Order
ZYZr	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^	ZYZr	= 0x0110,$/;"	e	enum:Imath::Euler::Order
_GLEE_3DFX_multisample	shared/GLee.c	/^GLboolean _GLEE_3DFX_multisample = GL_FALSE;$/;"	v
_GLEE_3DFX_multisample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_3DFX_multisample;$/;"	v
_GLEE_3DFX_tbuffer	shared/GLee.c	/^GLboolean _GLEE_3DFX_tbuffer = GL_FALSE;$/;"	v
_GLEE_3DFX_tbuffer	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_3DFX_tbuffer;$/;"	v
_GLEE_3DFX_texture_compression_FXT1	shared/GLee.c	/^GLboolean _GLEE_3DFX_texture_compression_FXT1 = GL_FALSE;$/;"	v
_GLEE_3DFX_texture_compression_FXT1	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_3DFX_texture_compression_FXT1;$/;"	v
_GLEE_APPLE_client_storage	shared/GLee.c	/^GLboolean _GLEE_APPLE_client_storage = GL_FALSE;$/;"	v
_GLEE_APPLE_client_storage	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_APPLE_client_storage;$/;"	v
_GLEE_APPLE_element_array	shared/GLee.c	/^GLboolean _GLEE_APPLE_element_array = GL_FALSE;$/;"	v
_GLEE_APPLE_element_array	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_APPLE_element_array;$/;"	v
_GLEE_APPLE_fence	shared/GLee.c	/^GLboolean _GLEE_APPLE_fence = GL_FALSE;$/;"	v
_GLEE_APPLE_fence	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_APPLE_fence;$/;"	v
_GLEE_APPLE_specular_vector	shared/GLee.c	/^GLboolean _GLEE_APPLE_specular_vector = GL_FALSE;$/;"	v
_GLEE_APPLE_specular_vector	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_APPLE_specular_vector;$/;"	v
_GLEE_APPLE_transform_hint	shared/GLee.c	/^GLboolean _GLEE_APPLE_transform_hint = GL_FALSE;$/;"	v
_GLEE_APPLE_transform_hint	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_APPLE_transform_hint;$/;"	v
_GLEE_APPLE_vertex_array_object	shared/GLee.c	/^GLboolean _GLEE_APPLE_vertex_array_object = GL_FALSE;$/;"	v
_GLEE_APPLE_vertex_array_object	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_APPLE_vertex_array_object;$/;"	v
_GLEE_APPLE_vertex_array_range	shared/GLee.c	/^GLboolean _GLEE_APPLE_vertex_array_range = GL_FALSE;$/;"	v
_GLEE_APPLE_vertex_array_range	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_APPLE_vertex_array_range;$/;"	v
_GLEE_APPLE_ycbcr_422	shared/GLee.c	/^GLboolean _GLEE_APPLE_ycbcr_422 = GL_FALSE;$/;"	v
_GLEE_APPLE_ycbcr_422	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_APPLE_ycbcr_422;$/;"	v
_GLEE_ARB_color_buffer_float	shared/GLee.c	/^GLboolean _GLEE_ARB_color_buffer_float = GL_FALSE;$/;"	v
_GLEE_ARB_color_buffer_float	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_color_buffer_float;$/;"	v
_GLEE_ARB_depth_texture	shared/GLee.c	/^GLboolean _GLEE_ARB_depth_texture = GL_FALSE;$/;"	v
_GLEE_ARB_depth_texture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_depth_texture;$/;"	v
_GLEE_ARB_draw_buffers	shared/GLee.c	/^GLboolean _GLEE_ARB_draw_buffers = GL_FALSE;$/;"	v
_GLEE_ARB_draw_buffers	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_draw_buffers;$/;"	v
_GLEE_ARB_fragment_program	shared/GLee.c	/^GLboolean _GLEE_ARB_fragment_program = GL_FALSE;$/;"	v
_GLEE_ARB_fragment_program	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_fragment_program;$/;"	v
_GLEE_ARB_fragment_program_shadow	shared/GLee.c	/^GLboolean _GLEE_ARB_fragment_program_shadow = GL_FALSE;$/;"	v
_GLEE_ARB_fragment_program_shadow	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_fragment_program_shadow;$/;"	v
_GLEE_ARB_fragment_shader	shared/GLee.c	/^GLboolean _GLEE_ARB_fragment_shader = GL_FALSE;$/;"	v
_GLEE_ARB_fragment_shader	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_fragment_shader;$/;"	v
_GLEE_ARB_half_float_pixel	shared/GLee.c	/^GLboolean _GLEE_ARB_half_float_pixel = GL_FALSE;$/;"	v
_GLEE_ARB_half_float_pixel	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_half_float_pixel;$/;"	v
_GLEE_ARB_imaging	shared/GLee.c	/^GLboolean _GLEE_ARB_imaging = GL_FALSE;$/;"	v
_GLEE_ARB_imaging	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_imaging;$/;"	v
_GLEE_ARB_matrix_palette	shared/GLee.c	/^GLboolean _GLEE_ARB_matrix_palette = GL_FALSE;$/;"	v
_GLEE_ARB_matrix_palette	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_matrix_palette;$/;"	v
_GLEE_ARB_multisample	shared/GLee.c	/^GLboolean _GLEE_ARB_multisample = GL_FALSE;$/;"	v
_GLEE_ARB_multisample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_multisample;$/;"	v
_GLEE_ARB_multitexture	shared/GLee.c	/^GLboolean _GLEE_ARB_multitexture = GL_FALSE;$/;"	v
_GLEE_ARB_multitexture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_multitexture;$/;"	v
_GLEE_ARB_occlusion_query	shared/GLee.c	/^GLboolean _GLEE_ARB_occlusion_query = GL_FALSE;$/;"	v
_GLEE_ARB_occlusion_query	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_occlusion_query;$/;"	v
_GLEE_ARB_pixel_buffer_object	shared/GLee.c	/^GLboolean _GLEE_ARB_pixel_buffer_object = GL_FALSE;$/;"	v
_GLEE_ARB_pixel_buffer_object	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_pixel_buffer_object;$/;"	v
_GLEE_ARB_point_parameters	shared/GLee.c	/^GLboolean _GLEE_ARB_point_parameters = GL_FALSE;$/;"	v
_GLEE_ARB_point_parameters	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_point_parameters;$/;"	v
_GLEE_ARB_point_sprite	shared/GLee.c	/^GLboolean _GLEE_ARB_point_sprite = GL_FALSE;$/;"	v
_GLEE_ARB_point_sprite	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_point_sprite;$/;"	v
_GLEE_ARB_shader_objects	shared/GLee.c	/^GLboolean _GLEE_ARB_shader_objects = GL_FALSE;$/;"	v
_GLEE_ARB_shader_objects	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_shader_objects;$/;"	v
_GLEE_ARB_shading_language_100	shared/GLee.c	/^GLboolean _GLEE_ARB_shading_language_100 = GL_FALSE;$/;"	v
_GLEE_ARB_shading_language_100	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_shading_language_100;$/;"	v
_GLEE_ARB_shadow	shared/GLee.c	/^GLboolean _GLEE_ARB_shadow = GL_FALSE;$/;"	v
_GLEE_ARB_shadow	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_shadow;$/;"	v
_GLEE_ARB_shadow_ambient	shared/GLee.c	/^GLboolean _GLEE_ARB_shadow_ambient = GL_FALSE;$/;"	v
_GLEE_ARB_shadow_ambient	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_shadow_ambient;$/;"	v
_GLEE_ARB_texture_border_clamp	shared/GLee.c	/^GLboolean _GLEE_ARB_texture_border_clamp = GL_FALSE;$/;"	v
_GLEE_ARB_texture_border_clamp	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_texture_border_clamp;$/;"	v
_GLEE_ARB_texture_compression	shared/GLee.c	/^GLboolean _GLEE_ARB_texture_compression = GL_FALSE;$/;"	v
_GLEE_ARB_texture_compression	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_texture_compression;$/;"	v
_GLEE_ARB_texture_cube_map	shared/GLee.c	/^GLboolean _GLEE_ARB_texture_cube_map = GL_FALSE;$/;"	v
_GLEE_ARB_texture_cube_map	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_texture_cube_map;$/;"	v
_GLEE_ARB_texture_env_add	shared/GLee.c	/^GLboolean _GLEE_ARB_texture_env_add = GL_FALSE;$/;"	v
_GLEE_ARB_texture_env_add	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_texture_env_add;$/;"	v
_GLEE_ARB_texture_env_combine	shared/GLee.c	/^GLboolean _GLEE_ARB_texture_env_combine = GL_FALSE;$/;"	v
_GLEE_ARB_texture_env_combine	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_texture_env_combine;$/;"	v
_GLEE_ARB_texture_env_crossbar	shared/GLee.c	/^GLboolean _GLEE_ARB_texture_env_crossbar = GL_FALSE;$/;"	v
_GLEE_ARB_texture_env_crossbar	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_texture_env_crossbar;$/;"	v
_GLEE_ARB_texture_env_dot3	shared/GLee.c	/^GLboolean _GLEE_ARB_texture_env_dot3 = GL_FALSE;$/;"	v
_GLEE_ARB_texture_env_dot3	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_texture_env_dot3;$/;"	v
_GLEE_ARB_texture_float	shared/GLee.c	/^GLboolean _GLEE_ARB_texture_float = GL_FALSE;$/;"	v
_GLEE_ARB_texture_float	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_texture_float;$/;"	v
_GLEE_ARB_texture_mirrored_repeat	shared/GLee.c	/^GLboolean _GLEE_ARB_texture_mirrored_repeat = GL_FALSE;$/;"	v
_GLEE_ARB_texture_mirrored_repeat	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_texture_mirrored_repeat;$/;"	v
_GLEE_ARB_texture_non_power_of_two	shared/GLee.c	/^GLboolean _GLEE_ARB_texture_non_power_of_two = GL_FALSE;$/;"	v
_GLEE_ARB_texture_non_power_of_two	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_texture_non_power_of_two;$/;"	v
_GLEE_ARB_texture_rectangle	shared/GLee.c	/^GLboolean _GLEE_ARB_texture_rectangle = GL_FALSE;$/;"	v
_GLEE_ARB_texture_rectangle	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_texture_rectangle;$/;"	v
_GLEE_ARB_transpose_matrix	shared/GLee.c	/^GLboolean _GLEE_ARB_transpose_matrix = GL_FALSE;$/;"	v
_GLEE_ARB_transpose_matrix	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_transpose_matrix;$/;"	v
_GLEE_ARB_vertex_blend	shared/GLee.c	/^GLboolean _GLEE_ARB_vertex_blend = GL_FALSE;$/;"	v
_GLEE_ARB_vertex_blend	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_vertex_blend;$/;"	v
_GLEE_ARB_vertex_buffer_object	shared/GLee.c	/^GLboolean _GLEE_ARB_vertex_buffer_object = GL_FALSE;$/;"	v
_GLEE_ARB_vertex_buffer_object	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_vertex_buffer_object;$/;"	v
_GLEE_ARB_vertex_program	shared/GLee.c	/^GLboolean _GLEE_ARB_vertex_program = GL_FALSE;$/;"	v
_GLEE_ARB_vertex_program	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_vertex_program;$/;"	v
_GLEE_ARB_vertex_shader	shared/GLee.c	/^GLboolean _GLEE_ARB_vertex_shader = GL_FALSE;$/;"	v
_GLEE_ARB_vertex_shader	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_vertex_shader;$/;"	v
_GLEE_ARB_window_pos	shared/GLee.c	/^GLboolean _GLEE_ARB_window_pos = GL_FALSE;$/;"	v
_GLEE_ARB_window_pos	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ARB_window_pos;$/;"	v
_GLEE_ATI_draw_buffers	shared/GLee.c	/^GLboolean _GLEE_ATI_draw_buffers = GL_FALSE;$/;"	v
_GLEE_ATI_draw_buffers	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ATI_draw_buffers;$/;"	v
_GLEE_ATI_element_array	shared/GLee.c	/^GLboolean _GLEE_ATI_element_array = GL_FALSE;$/;"	v
_GLEE_ATI_element_array	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ATI_element_array;$/;"	v
_GLEE_ATI_envmap_bumpmap	shared/GLee.c	/^GLboolean _GLEE_ATI_envmap_bumpmap = GL_FALSE;$/;"	v
_GLEE_ATI_envmap_bumpmap	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ATI_envmap_bumpmap;$/;"	v
_GLEE_ATI_fragment_shader	shared/GLee.c	/^GLboolean _GLEE_ATI_fragment_shader = GL_FALSE;$/;"	v
_GLEE_ATI_fragment_shader	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ATI_fragment_shader;$/;"	v
_GLEE_ATI_map_object_buffer	shared/GLee.c	/^GLboolean _GLEE_ATI_map_object_buffer = GL_FALSE;$/;"	v
_GLEE_ATI_map_object_buffer	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ATI_map_object_buffer;$/;"	v
_GLEE_ATI_pixel_format_float	shared/GLee.c	/^GLboolean _GLEE_ATI_pixel_format_float = GL_FALSE;$/;"	v
_GLEE_ATI_pixel_format_float	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ATI_pixel_format_float;$/;"	v
_GLEE_ATI_pn_triangles	shared/GLee.c	/^GLboolean _GLEE_ATI_pn_triangles = GL_FALSE;$/;"	v
_GLEE_ATI_pn_triangles	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ATI_pn_triangles;$/;"	v
_GLEE_ATI_separate_stencil	shared/GLee.c	/^GLboolean _GLEE_ATI_separate_stencil = GL_FALSE;$/;"	v
_GLEE_ATI_separate_stencil	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ATI_separate_stencil;$/;"	v
_GLEE_ATI_text_fragment_shader	shared/GLee.c	/^GLboolean _GLEE_ATI_text_fragment_shader = GL_FALSE;$/;"	v
_GLEE_ATI_text_fragment_shader	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ATI_text_fragment_shader;$/;"	v
_GLEE_ATI_texture_env_combine3	shared/GLee.c	/^GLboolean _GLEE_ATI_texture_env_combine3 = GL_FALSE;$/;"	v
_GLEE_ATI_texture_env_combine3	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ATI_texture_env_combine3;$/;"	v
_GLEE_ATI_texture_float	shared/GLee.c	/^GLboolean _GLEE_ATI_texture_float = GL_FALSE;$/;"	v
_GLEE_ATI_texture_float	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ATI_texture_float;$/;"	v
_GLEE_ATI_texture_mirror_once	shared/GLee.c	/^GLboolean _GLEE_ATI_texture_mirror_once = GL_FALSE;$/;"	v
_GLEE_ATI_texture_mirror_once	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ATI_texture_mirror_once;$/;"	v
_GLEE_ATI_vertex_array_object	shared/GLee.c	/^GLboolean _GLEE_ATI_vertex_array_object = GL_FALSE;$/;"	v
_GLEE_ATI_vertex_array_object	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ATI_vertex_array_object;$/;"	v
_GLEE_ATI_vertex_attrib_array_object	shared/GLee.c	/^GLboolean _GLEE_ATI_vertex_attrib_array_object = GL_FALSE;$/;"	v
_GLEE_ATI_vertex_attrib_array_object	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ATI_vertex_attrib_array_object;$/;"	v
_GLEE_ATI_vertex_streams	shared/GLee.c	/^GLboolean _GLEE_ATI_vertex_streams = GL_FALSE;$/;"	v
_GLEE_ATI_vertex_streams	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_ATI_vertex_streams;$/;"	v
_GLEE_EXT_422_pixels	shared/GLee.c	/^GLboolean _GLEE_EXT_422_pixels = GL_FALSE;$/;"	v
_GLEE_EXT_422_pixels	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_422_pixels;$/;"	v
_GLEE_EXT_Cg_shader	shared/GLee.c	/^GLboolean _GLEE_EXT_Cg_shader = GL_FALSE;$/;"	v
_GLEE_EXT_Cg_shader	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_Cg_shader;$/;"	v
_GLEE_EXT_abgr	shared/GLee.c	/^GLboolean _GLEE_EXT_abgr = GL_FALSE;$/;"	v
_GLEE_EXT_abgr	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_abgr;$/;"	v
_GLEE_EXT_bgra	shared/GLee.c	/^GLboolean _GLEE_EXT_bgra = GL_FALSE;$/;"	v
_GLEE_EXT_bgra	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_bgra;$/;"	v
_GLEE_EXT_bindable_uniform	shared/GLee.c	/^GLboolean _GLEE_EXT_bindable_uniform = GL_FALSE;$/;"	v
_GLEE_EXT_bindable_uniform	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_bindable_uniform;$/;"	v
_GLEE_EXT_blend_color	shared/GLee.c	/^GLboolean _GLEE_EXT_blend_color = GL_FALSE;$/;"	v
_GLEE_EXT_blend_color	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_blend_color;$/;"	v
_GLEE_EXT_blend_equation_separate	shared/GLee.c	/^GLboolean _GLEE_EXT_blend_equation_separate = GL_FALSE;$/;"	v
_GLEE_EXT_blend_equation_separate	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_blend_equation_separate;$/;"	v
_GLEE_EXT_blend_func_separate	shared/GLee.c	/^GLboolean _GLEE_EXT_blend_func_separate = GL_FALSE;$/;"	v
_GLEE_EXT_blend_func_separate	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_blend_func_separate;$/;"	v
_GLEE_EXT_blend_logic_op	shared/GLee.c	/^GLboolean _GLEE_EXT_blend_logic_op = GL_FALSE;$/;"	v
_GLEE_EXT_blend_logic_op	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_blend_logic_op;$/;"	v
_GLEE_EXT_blend_minmax	shared/GLee.c	/^GLboolean _GLEE_EXT_blend_minmax = GL_FALSE;$/;"	v
_GLEE_EXT_blend_minmax	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_blend_minmax;$/;"	v
_GLEE_EXT_blend_subtract	shared/GLee.c	/^GLboolean _GLEE_EXT_blend_subtract = GL_FALSE;$/;"	v
_GLEE_EXT_blend_subtract	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_blend_subtract;$/;"	v
_GLEE_EXT_clip_volume_hint	shared/GLee.c	/^GLboolean _GLEE_EXT_clip_volume_hint = GL_FALSE;$/;"	v
_GLEE_EXT_clip_volume_hint	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_clip_volume_hint;$/;"	v
_GLEE_EXT_cmyka	shared/GLee.c	/^GLboolean _GLEE_EXT_cmyka = GL_FALSE;$/;"	v
_GLEE_EXT_cmyka	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_cmyka;$/;"	v
_GLEE_EXT_color_matrix	shared/GLee.c	/^GLboolean _GLEE_EXT_color_matrix = GL_FALSE;$/;"	v
_GLEE_EXT_color_matrix	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_color_matrix;$/;"	v
_GLEE_EXT_color_subtable	shared/GLee.c	/^GLboolean _GLEE_EXT_color_subtable = GL_FALSE;$/;"	v
_GLEE_EXT_color_subtable	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_color_subtable;$/;"	v
_GLEE_EXT_compiled_vertex_array	shared/GLee.c	/^GLboolean _GLEE_EXT_compiled_vertex_array = GL_FALSE;$/;"	v
_GLEE_EXT_compiled_vertex_array	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_compiled_vertex_array;$/;"	v
_GLEE_EXT_convolution	shared/GLee.c	/^GLboolean _GLEE_EXT_convolution = GL_FALSE;$/;"	v
_GLEE_EXT_convolution	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_convolution;$/;"	v
_GLEE_EXT_coordinate_frame	shared/GLee.c	/^GLboolean _GLEE_EXT_coordinate_frame = GL_FALSE;$/;"	v
_GLEE_EXT_coordinate_frame	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_coordinate_frame;$/;"	v
_GLEE_EXT_copy_texture	shared/GLee.c	/^GLboolean _GLEE_EXT_copy_texture = GL_FALSE;$/;"	v
_GLEE_EXT_copy_texture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_copy_texture;$/;"	v
_GLEE_EXT_cull_vertex	shared/GLee.c	/^GLboolean _GLEE_EXT_cull_vertex = GL_FALSE;$/;"	v
_GLEE_EXT_cull_vertex	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_cull_vertex;$/;"	v
_GLEE_EXT_depth_bounds_test	shared/GLee.c	/^GLboolean _GLEE_EXT_depth_bounds_test = GL_FALSE;$/;"	v
_GLEE_EXT_depth_bounds_test	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_depth_bounds_test;$/;"	v
_GLEE_EXT_draw_buffers2	shared/GLee.c	/^GLboolean _GLEE_EXT_draw_buffers2 = GL_FALSE;$/;"	v
_GLEE_EXT_draw_buffers2	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_draw_buffers2;$/;"	v
_GLEE_EXT_draw_instanced	shared/GLee.c	/^GLboolean _GLEE_EXT_draw_instanced = GL_FALSE;$/;"	v
_GLEE_EXT_draw_instanced	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_draw_instanced;$/;"	v
_GLEE_EXT_draw_range_elements	shared/GLee.c	/^GLboolean _GLEE_EXT_draw_range_elements = GL_FALSE;$/;"	v
_GLEE_EXT_draw_range_elements	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_draw_range_elements;$/;"	v
_GLEE_EXT_fog_coord	shared/GLee.c	/^GLboolean _GLEE_EXT_fog_coord = GL_FALSE;$/;"	v
_GLEE_EXT_fog_coord	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_fog_coord;$/;"	v
_GLEE_EXT_fragment_lighting	shared/GLee.c	/^GLboolean _GLEE_EXT_fragment_lighting = GL_FALSE;$/;"	v
_GLEE_EXT_fragment_lighting	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_fragment_lighting;$/;"	v
_GLEE_EXT_framebuffer_blit	shared/GLee.c	/^GLboolean _GLEE_EXT_framebuffer_blit = GL_FALSE;$/;"	v
_GLEE_EXT_framebuffer_blit	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_framebuffer_blit;$/;"	v
_GLEE_EXT_framebuffer_multisample	shared/GLee.c	/^GLboolean _GLEE_EXT_framebuffer_multisample = GL_FALSE;$/;"	v
_GLEE_EXT_framebuffer_multisample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_framebuffer_multisample;$/;"	v
_GLEE_EXT_framebuffer_object	shared/GLee.c	/^GLboolean _GLEE_EXT_framebuffer_object = GL_FALSE;$/;"	v
_GLEE_EXT_framebuffer_object	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_framebuffer_object;$/;"	v
_GLEE_EXT_framebuffer_sRGB	shared/GLee.c	/^GLboolean _GLEE_EXT_framebuffer_sRGB = GL_FALSE;$/;"	v
_GLEE_EXT_framebuffer_sRGB	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_framebuffer_sRGB;$/;"	v
_GLEE_EXT_geometry_shader4	shared/GLee.c	/^GLboolean _GLEE_EXT_geometry_shader4 = GL_FALSE;$/;"	v
_GLEE_EXT_geometry_shader4	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_geometry_shader4;$/;"	v
_GLEE_EXT_gpu_shader4	shared/GLee.c	/^GLboolean _GLEE_EXT_gpu_shader4 = GL_FALSE;$/;"	v
_GLEE_EXT_gpu_shader4	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_gpu_shader4;$/;"	v
_GLEE_EXT_histogram	shared/GLee.c	/^GLboolean _GLEE_EXT_histogram = GL_FALSE;$/;"	v
_GLEE_EXT_histogram	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_histogram;$/;"	v
_GLEE_EXT_index_array_formats	shared/GLee.c	/^GLboolean _GLEE_EXT_index_array_formats = GL_FALSE;$/;"	v
_GLEE_EXT_index_array_formats	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_index_array_formats;$/;"	v
_GLEE_EXT_index_func	shared/GLee.c	/^GLboolean _GLEE_EXT_index_func = GL_FALSE;$/;"	v
_GLEE_EXT_index_func	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_index_func;$/;"	v
_GLEE_EXT_index_material	shared/GLee.c	/^GLboolean _GLEE_EXT_index_material = GL_FALSE;$/;"	v
_GLEE_EXT_index_material	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_index_material;$/;"	v
_GLEE_EXT_index_texture	shared/GLee.c	/^GLboolean _GLEE_EXT_index_texture = GL_FALSE;$/;"	v
_GLEE_EXT_index_texture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_index_texture;$/;"	v
_GLEE_EXT_light_texture	shared/GLee.c	/^GLboolean _GLEE_EXT_light_texture = GL_FALSE;$/;"	v
_GLEE_EXT_light_texture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_light_texture;$/;"	v
_GLEE_EXT_misc_attribute	shared/GLee.c	/^GLboolean _GLEE_EXT_misc_attribute = GL_FALSE;$/;"	v
_GLEE_EXT_misc_attribute	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_misc_attribute;$/;"	v
_GLEE_EXT_multi_draw_arrays	shared/GLee.c	/^GLboolean _GLEE_EXT_multi_draw_arrays = GL_FALSE;$/;"	v
_GLEE_EXT_multi_draw_arrays	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_multi_draw_arrays;$/;"	v
_GLEE_EXT_multisample	shared/GLee.c	/^GLboolean _GLEE_EXT_multisample = GL_FALSE;$/;"	v
_GLEE_EXT_multisample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_multisample;$/;"	v
_GLEE_EXT_packed_depth_stencil	shared/GLee.c	/^GLboolean _GLEE_EXT_packed_depth_stencil = GL_FALSE;$/;"	v
_GLEE_EXT_packed_depth_stencil	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_packed_depth_stencil;$/;"	v
_GLEE_EXT_packed_float	shared/GLee.c	/^GLboolean _GLEE_EXT_packed_float = GL_FALSE;$/;"	v
_GLEE_EXT_packed_float	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_packed_float;$/;"	v
_GLEE_EXT_packed_pixels	shared/GLee.c	/^GLboolean _GLEE_EXT_packed_pixels = GL_FALSE;$/;"	v
_GLEE_EXT_packed_pixels	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_packed_pixels;$/;"	v
_GLEE_EXT_paletted_texture	shared/GLee.c	/^GLboolean _GLEE_EXT_paletted_texture = GL_FALSE;$/;"	v
_GLEE_EXT_paletted_texture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_paletted_texture;$/;"	v
_GLEE_EXT_pixel_buffer_object	shared/GLee.c	/^GLboolean _GLEE_EXT_pixel_buffer_object = GL_FALSE;$/;"	v
_GLEE_EXT_pixel_buffer_object	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_pixel_buffer_object;$/;"	v
_GLEE_EXT_pixel_transform	shared/GLee.c	/^GLboolean _GLEE_EXT_pixel_transform = GL_FALSE;$/;"	v
_GLEE_EXT_pixel_transform	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_pixel_transform;$/;"	v
_GLEE_EXT_pixel_transform_color_table	shared/GLee.c	/^GLboolean _GLEE_EXT_pixel_transform_color_table = GL_FALSE;$/;"	v
_GLEE_EXT_pixel_transform_color_table	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_pixel_transform_color_table;$/;"	v
_GLEE_EXT_point_parameters	shared/GLee.c	/^GLboolean _GLEE_EXT_point_parameters = GL_FALSE;$/;"	v
_GLEE_EXT_point_parameters	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_point_parameters;$/;"	v
_GLEE_EXT_polygon_offset	shared/GLee.c	/^GLboolean _GLEE_EXT_polygon_offset = GL_FALSE;$/;"	v
_GLEE_EXT_polygon_offset	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_polygon_offset;$/;"	v
_GLEE_EXT_rescale_normal	shared/GLee.c	/^GLboolean _GLEE_EXT_rescale_normal = GL_FALSE;$/;"	v
_GLEE_EXT_rescale_normal	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_rescale_normal;$/;"	v
_GLEE_EXT_scene_marker	shared/GLee.c	/^GLboolean _GLEE_EXT_scene_marker = GL_FALSE;$/;"	v
_GLEE_EXT_scene_marker	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_scene_marker;$/;"	v
_GLEE_EXT_secondary_color	shared/GLee.c	/^GLboolean _GLEE_EXT_secondary_color = GL_FALSE;$/;"	v
_GLEE_EXT_secondary_color	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_secondary_color;$/;"	v
_GLEE_EXT_separate_specular_color	shared/GLee.c	/^GLboolean _GLEE_EXT_separate_specular_color = GL_FALSE;$/;"	v
_GLEE_EXT_separate_specular_color	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_separate_specular_color;$/;"	v
_GLEE_EXT_shadow_funcs	shared/GLee.c	/^GLboolean _GLEE_EXT_shadow_funcs = GL_FALSE;$/;"	v
_GLEE_EXT_shadow_funcs	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_shadow_funcs;$/;"	v
_GLEE_EXT_shared_texture_palette	shared/GLee.c	/^GLboolean _GLEE_EXT_shared_texture_palette = GL_FALSE;$/;"	v
_GLEE_EXT_shared_texture_palette	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_shared_texture_palette;$/;"	v
_GLEE_EXT_stencil_clear_tag	shared/GLee.c	/^GLboolean _GLEE_EXT_stencil_clear_tag = GL_FALSE;$/;"	v
_GLEE_EXT_stencil_clear_tag	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_stencil_clear_tag;$/;"	v
_GLEE_EXT_stencil_two_side	shared/GLee.c	/^GLboolean _GLEE_EXT_stencil_two_side = GL_FALSE;$/;"	v
_GLEE_EXT_stencil_two_side	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_stencil_two_side;$/;"	v
_GLEE_EXT_stencil_wrap	shared/GLee.c	/^GLboolean _GLEE_EXT_stencil_wrap = GL_FALSE;$/;"	v
_GLEE_EXT_stencil_wrap	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_stencil_wrap;$/;"	v
_GLEE_EXT_subtexture	shared/GLee.c	/^GLboolean _GLEE_EXT_subtexture = GL_FALSE;$/;"	v
_GLEE_EXT_subtexture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_subtexture;$/;"	v
_GLEE_EXT_texture	shared/GLee.c	/^GLboolean _GLEE_EXT_texture = GL_FALSE;$/;"	v
_GLEE_EXT_texture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture;$/;"	v
_GLEE_EXT_texture3D	shared/GLee.c	/^GLboolean _GLEE_EXT_texture3D = GL_FALSE;$/;"	v
_GLEE_EXT_texture3D	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture3D;$/;"	v
_GLEE_EXT_texture_array	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_array = GL_FALSE;$/;"	v
_GLEE_EXT_texture_array	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_array;$/;"	v
_GLEE_EXT_texture_buffer_object	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_buffer_object = GL_FALSE;$/;"	v
_GLEE_EXT_texture_buffer_object	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_buffer_object;$/;"	v
_GLEE_EXT_texture_compression_dxt1	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_compression_dxt1 = GL_FALSE;$/;"	v
_GLEE_EXT_texture_compression_dxt1	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_compression_dxt1;$/;"	v
_GLEE_EXT_texture_compression_latc	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_compression_latc = GL_FALSE;$/;"	v
_GLEE_EXT_texture_compression_latc	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_compression_latc;$/;"	v
_GLEE_EXT_texture_compression_rgtc	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_compression_rgtc = GL_FALSE;$/;"	v
_GLEE_EXT_texture_compression_rgtc	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_compression_rgtc;$/;"	v
_GLEE_EXT_texture_compression_s3tc	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_compression_s3tc = GL_FALSE;$/;"	v
_GLEE_EXT_texture_compression_s3tc	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_compression_s3tc;$/;"	v
_GLEE_EXT_texture_cube_map	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_cube_map = GL_FALSE;$/;"	v
_GLEE_EXT_texture_cube_map	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_cube_map;$/;"	v
_GLEE_EXT_texture_env	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_env = GL_FALSE;$/;"	v
_GLEE_EXT_texture_env	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_env;$/;"	v
_GLEE_EXT_texture_env_add	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_env_add = GL_FALSE;$/;"	v
_GLEE_EXT_texture_env_add	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_env_add;$/;"	v
_GLEE_EXT_texture_env_combine	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_env_combine = GL_FALSE;$/;"	v
_GLEE_EXT_texture_env_combine	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_env_combine;$/;"	v
_GLEE_EXT_texture_env_dot3	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_env_dot3 = GL_FALSE;$/;"	v
_GLEE_EXT_texture_env_dot3	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_env_dot3;$/;"	v
_GLEE_EXT_texture_filter_anisotropic	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_filter_anisotropic = GL_FALSE;$/;"	v
_GLEE_EXT_texture_filter_anisotropic	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_filter_anisotropic;$/;"	v
_GLEE_EXT_texture_integer	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_integer = GL_FALSE;$/;"	v
_GLEE_EXT_texture_integer	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_integer;$/;"	v
_GLEE_EXT_texture_lod_bias	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_lod_bias = GL_FALSE;$/;"	v
_GLEE_EXT_texture_lod_bias	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_lod_bias;$/;"	v
_GLEE_EXT_texture_mirror_clamp	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_mirror_clamp = GL_FALSE;$/;"	v
_GLEE_EXT_texture_mirror_clamp	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_mirror_clamp;$/;"	v
_GLEE_EXT_texture_object	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_object = GL_FALSE;$/;"	v
_GLEE_EXT_texture_object	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_object;$/;"	v
_GLEE_EXT_texture_perturb_normal	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_perturb_normal = GL_FALSE;$/;"	v
_GLEE_EXT_texture_perturb_normal	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_perturb_normal;$/;"	v
_GLEE_EXT_texture_sRGB	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_sRGB = GL_FALSE;$/;"	v
_GLEE_EXT_texture_sRGB	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_sRGB;$/;"	v
_GLEE_EXT_texture_shared_exponent	shared/GLee.c	/^GLboolean _GLEE_EXT_texture_shared_exponent = GL_FALSE;$/;"	v
_GLEE_EXT_texture_shared_exponent	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_texture_shared_exponent;$/;"	v
_GLEE_EXT_timer_query	shared/GLee.c	/^GLboolean _GLEE_EXT_timer_query = GL_FALSE;$/;"	v
_GLEE_EXT_timer_query	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_timer_query;$/;"	v
_GLEE_EXT_vertex_array	shared/GLee.c	/^GLboolean _GLEE_EXT_vertex_array = GL_FALSE;$/;"	v
_GLEE_EXT_vertex_array	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_vertex_array;$/;"	v
_GLEE_EXT_vertex_shader	shared/GLee.c	/^GLboolean _GLEE_EXT_vertex_shader = GL_FALSE;$/;"	v
_GLEE_EXT_vertex_shader	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_vertex_shader;$/;"	v
_GLEE_EXT_vertex_weighting	shared/GLee.c	/^GLboolean _GLEE_EXT_vertex_weighting = GL_FALSE;$/;"	v
_GLEE_EXT_vertex_weighting	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_EXT_vertex_weighting;$/;"	v
_GLEE_FfdMaskSGIX	shared/GLee.c	/^GLboolean _GLEE_FfdMaskSGIX = GL_FALSE;$/;"	v
_GLEE_FfdMaskSGIX	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_FfdMaskSGIX;$/;"	v
_GLEE_GLX_3DFX_multisample	shared/GLee.c	/^GLboolean _GLEE_GLX_3DFX_multisample = GL_FALSE;$/;"	v
_GLEE_GLX_3DFX_multisample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_3DFX_multisample;$/;"	v
_GLEE_GLX_ARB_fbconfig_float	shared/GLee.c	/^GLboolean _GLEE_GLX_ARB_fbconfig_float = GL_FALSE;$/;"	v
_GLEE_GLX_ARB_fbconfig_float	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_ARB_fbconfig_float;$/;"	v
_GLEE_GLX_ARB_multisample	shared/GLee.c	/^GLboolean _GLEE_GLX_ARB_multisample = GL_FALSE;$/;"	v
_GLEE_GLX_ARB_multisample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_ARB_multisample;$/;"	v
_GLEE_GLX_EXT_import_context	shared/GLee.c	/^GLboolean _GLEE_GLX_EXT_import_context = GL_FALSE;$/;"	v
_GLEE_GLX_EXT_import_context	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_EXT_import_context;$/;"	v
_GLEE_GLX_EXT_scene_marker	shared/GLee.c	/^GLboolean _GLEE_GLX_EXT_scene_marker = GL_FALSE;$/;"	v
_GLEE_GLX_EXT_scene_marker	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_EXT_scene_marker;$/;"	v
_GLEE_GLX_EXT_visual_info	shared/GLee.c	/^GLboolean _GLEE_GLX_EXT_visual_info = GL_FALSE;$/;"	v
_GLEE_GLX_EXT_visual_info	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_EXT_visual_info;$/;"	v
_GLEE_GLX_EXT_visual_rating	shared/GLee.c	/^GLboolean _GLEE_GLX_EXT_visual_rating = GL_FALSE;$/;"	v
_GLEE_GLX_EXT_visual_rating	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_EXT_visual_rating;$/;"	v
_GLEE_GLX_MESA_agp_offset	shared/GLee.c	/^GLboolean _GLEE_GLX_MESA_agp_offset = GL_FALSE;$/;"	v
_GLEE_GLX_MESA_agp_offset	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_MESA_agp_offset;$/;"	v
_GLEE_GLX_MESA_copy_sub_buffer	shared/GLee.c	/^GLboolean _GLEE_GLX_MESA_copy_sub_buffer = GL_FALSE;$/;"	v
_GLEE_GLX_MESA_copy_sub_buffer	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_MESA_copy_sub_buffer;$/;"	v
_GLEE_GLX_MESA_pixmap_colormap	shared/GLee.c	/^GLboolean _GLEE_GLX_MESA_pixmap_colormap = GL_FALSE;$/;"	v
_GLEE_GLX_MESA_pixmap_colormap	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_MESA_pixmap_colormap;$/;"	v
_GLEE_GLX_MESA_release_buffers	shared/GLee.c	/^GLboolean _GLEE_GLX_MESA_release_buffers = GL_FALSE;$/;"	v
_GLEE_GLX_MESA_release_buffers	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_MESA_release_buffers;$/;"	v
_GLEE_GLX_MESA_set_3dfx_mode	shared/GLee.c	/^GLboolean _GLEE_GLX_MESA_set_3dfx_mode = GL_FALSE;$/;"	v
_GLEE_GLX_MESA_set_3dfx_mode	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_MESA_set_3dfx_mode;$/;"	v
_GLEE_GLX_NV_float_buffer	shared/GLee.c	/^GLboolean _GLEE_GLX_NV_float_buffer = GL_FALSE;$/;"	v
_GLEE_GLX_NV_float_buffer	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_NV_float_buffer;$/;"	v
_GLEE_GLX_OML_swap_method	shared/GLee.c	/^GLboolean _GLEE_GLX_OML_swap_method = GL_FALSE;$/;"	v
_GLEE_GLX_OML_swap_method	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_OML_swap_method;$/;"	v
_GLEE_GLX_OML_sync_control	shared/GLee.c	/^GLboolean _GLEE_GLX_OML_sync_control = GL_FALSE;$/;"	v
_GLEE_GLX_OML_sync_control	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_OML_sync_control;$/;"	v
_GLEE_GLX_SGIS_blended_overlay	shared/GLee.c	/^GLboolean _GLEE_GLX_SGIS_blended_overlay = GL_FALSE;$/;"	v
_GLEE_GLX_SGIS_blended_overlay	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_SGIS_blended_overlay;$/;"	v
_GLEE_GLX_SGIS_multisample	shared/GLee.c	/^GLboolean _GLEE_GLX_SGIS_multisample = GL_FALSE;$/;"	v
_GLEE_GLX_SGIS_multisample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_SGIS_multisample;$/;"	v
_GLEE_GLX_SGIS_shared_multisample	shared/GLee.c	/^GLboolean _GLEE_GLX_SGIS_shared_multisample = GL_FALSE;$/;"	v
_GLEE_GLX_SGIS_shared_multisample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_SGIS_shared_multisample;$/;"	v
_GLEE_GLX_SGIX_fbconfig	shared/GLee.c	/^GLboolean _GLEE_GLX_SGIX_fbconfig = GL_FALSE;$/;"	v
_GLEE_GLX_SGIX_fbconfig	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_SGIX_fbconfig;$/;"	v
_GLEE_GLX_SGIX_hyperpipe	shared/GLee.c	/^GLboolean _GLEE_GLX_SGIX_hyperpipe = GL_FALSE;$/;"	v
_GLEE_GLX_SGIX_hyperpipe	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_SGIX_hyperpipe;$/;"	v
_GLEE_GLX_SGIX_pbuffer	shared/GLee.c	/^GLboolean _GLEE_GLX_SGIX_pbuffer = GL_FALSE;$/;"	v
_GLEE_GLX_SGIX_pbuffer	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_SGIX_pbuffer;$/;"	v
_GLEE_GLX_SGIX_swap_barrier	shared/GLee.c	/^GLboolean _GLEE_GLX_SGIX_swap_barrier = GL_FALSE;$/;"	v
_GLEE_GLX_SGIX_swap_barrier	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_SGIX_swap_barrier;$/;"	v
_GLEE_GLX_SGIX_swap_group	shared/GLee.c	/^GLboolean _GLEE_GLX_SGIX_swap_group = GL_FALSE;$/;"	v
_GLEE_GLX_SGIX_swap_group	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_SGIX_swap_group;$/;"	v
_GLEE_GLX_SGIX_video_resize	shared/GLee.c	/^GLboolean _GLEE_GLX_SGIX_video_resize = GL_FALSE;$/;"	v
_GLEE_GLX_SGIX_video_resize	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_SGIX_video_resize;$/;"	v
_GLEE_GLX_SGIX_visual_select_group	shared/GLee.c	/^GLboolean _GLEE_GLX_SGIX_visual_select_group = GL_FALSE;$/;"	v
_GLEE_GLX_SGIX_visual_select_group	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_SGIX_visual_select_group;$/;"	v
_GLEE_GLX_SGI_cushion	shared/GLee.c	/^GLboolean _GLEE_GLX_SGI_cushion = GL_FALSE;$/;"	v
_GLEE_GLX_SGI_cushion	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_SGI_cushion;$/;"	v
_GLEE_GLX_SGI_make_current_read	shared/GLee.c	/^GLboolean _GLEE_GLX_SGI_make_current_read = GL_FALSE;$/;"	v
_GLEE_GLX_SGI_make_current_read	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_SGI_make_current_read;$/;"	v
_GLEE_GLX_SGI_swap_control	shared/GLee.c	/^GLboolean _GLEE_GLX_SGI_swap_control = GL_FALSE;$/;"	v
_GLEE_GLX_SGI_swap_control	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_SGI_swap_control;$/;"	v
_GLEE_GLX_SGI_video_sync	shared/GLee.c	/^GLboolean _GLEE_GLX_SGI_video_sync = GL_FALSE;$/;"	v
_GLEE_GLX_SGI_video_sync	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_SGI_video_sync;$/;"	v
_GLEE_GLX_SUN_get_transparent_index	shared/GLee.c	/^GLboolean _GLEE_GLX_SUN_get_transparent_index = GL_FALSE;$/;"	v
_GLEE_GLX_SUN_get_transparent_index	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_SUN_get_transparent_index;$/;"	v
_GLEE_GLX_VERSION_1_3	shared/GLee.c	/^GLboolean _GLEE_GLX_VERSION_1_3 = GL_FALSE;$/;"	v
_GLEE_GLX_VERSION_1_3	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_VERSION_1_3;$/;"	v
_GLEE_GLX_VERSION_1_4	shared/GLee.c	/^GLboolean _GLEE_GLX_VERSION_1_4 = GL_FALSE;$/;"	v
_GLEE_GLX_VERSION_1_4	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GLX_VERSION_1_4;$/;"	v
_GLEE_GREMEDY_string_marker	shared/GLee.c	/^GLboolean _GLEE_GREMEDY_string_marker = GL_FALSE;$/;"	v
_GLEE_GREMEDY_string_marker	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_GREMEDY_string_marker;$/;"	v
_GLEE_HP_convolution_border_modes	shared/GLee.c	/^GLboolean _GLEE_HP_convolution_border_modes = GL_FALSE;$/;"	v
_GLEE_HP_convolution_border_modes	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_HP_convolution_border_modes;$/;"	v
_GLEE_HP_image_transform	shared/GLee.c	/^GLboolean _GLEE_HP_image_transform = GL_FALSE;$/;"	v
_GLEE_HP_image_transform	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_HP_image_transform;$/;"	v
_GLEE_HP_occlusion_test	shared/GLee.c	/^GLboolean _GLEE_HP_occlusion_test = GL_FALSE;$/;"	v
_GLEE_HP_occlusion_test	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_HP_occlusion_test;$/;"	v
_GLEE_HP_texture_lighting	shared/GLee.c	/^GLboolean _GLEE_HP_texture_lighting = GL_FALSE;$/;"	v
_GLEE_HP_texture_lighting	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_HP_texture_lighting;$/;"	v
_GLEE_IBM_cull_vertex	shared/GLee.c	/^GLboolean _GLEE_IBM_cull_vertex = GL_FALSE;$/;"	v
_GLEE_IBM_cull_vertex	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_IBM_cull_vertex;$/;"	v
_GLEE_IBM_multimode_draw_arrays	shared/GLee.c	/^GLboolean _GLEE_IBM_multimode_draw_arrays = GL_FALSE;$/;"	v
_GLEE_IBM_multimode_draw_arrays	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_IBM_multimode_draw_arrays;$/;"	v
_GLEE_IBM_rasterpos_clip	shared/GLee.c	/^GLboolean _GLEE_IBM_rasterpos_clip = GL_FALSE;$/;"	v
_GLEE_IBM_rasterpos_clip	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_IBM_rasterpos_clip;$/;"	v
_GLEE_IBM_static_data	shared/GLee.c	/^GLboolean _GLEE_IBM_static_data = GL_FALSE;$/;"	v
_GLEE_IBM_static_data	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_IBM_static_data;$/;"	v
_GLEE_IBM_texture_mirrored_repeat	shared/GLee.c	/^GLboolean _GLEE_IBM_texture_mirrored_repeat = GL_FALSE;$/;"	v
_GLEE_IBM_texture_mirrored_repeat	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_IBM_texture_mirrored_repeat;$/;"	v
_GLEE_IBM_vertex_array_lists	shared/GLee.c	/^GLboolean _GLEE_IBM_vertex_array_lists = GL_FALSE;$/;"	v
_GLEE_IBM_vertex_array_lists	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_IBM_vertex_array_lists;$/;"	v
_GLEE_INGR_blend_func_separate	shared/GLee.c	/^GLboolean _GLEE_INGR_blend_func_separate = GL_FALSE;$/;"	v
_GLEE_INGR_blend_func_separate	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_INGR_blend_func_separate;$/;"	v
_GLEE_INGR_color_clamp	shared/GLee.c	/^GLboolean _GLEE_INGR_color_clamp = GL_FALSE;$/;"	v
_GLEE_INGR_color_clamp	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_INGR_color_clamp;$/;"	v
_GLEE_INGR_interlace_read	shared/GLee.c	/^GLboolean _GLEE_INGR_interlace_read = GL_FALSE;$/;"	v
_GLEE_INGR_interlace_read	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_INGR_interlace_read;$/;"	v
_GLEE_INGR_palette_buffer	shared/GLee.c	/^GLboolean _GLEE_INGR_palette_buffer = GL_FALSE;$/;"	v
_GLEE_INGR_palette_buffer	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_INGR_palette_buffer;$/;"	v
_GLEE_INTEL_parallel_arrays	shared/GLee.c	/^GLboolean _GLEE_INTEL_parallel_arrays = GL_FALSE;$/;"	v
_GLEE_INTEL_parallel_arrays	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_INTEL_parallel_arrays;$/;"	v
_GLEE_INTEL_texture_scissor	shared/GLee.c	/^GLboolean _GLEE_INTEL_texture_scissor = GL_FALSE;$/;"	v
_GLEE_INTEL_texture_scissor	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_INTEL_texture_scissor;$/;"	v
_GLEE_MESAX_texture_stack	shared/GLee.c	/^GLboolean _GLEE_MESAX_texture_stack = GL_FALSE;$/;"	v
_GLEE_MESAX_texture_stack	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_MESAX_texture_stack;$/;"	v
_GLEE_MESA_pack_invert	shared/GLee.c	/^GLboolean _GLEE_MESA_pack_invert = GL_FALSE;$/;"	v
_GLEE_MESA_pack_invert	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_MESA_pack_invert;$/;"	v
_GLEE_MESA_resize_buffers	shared/GLee.c	/^GLboolean _GLEE_MESA_resize_buffers = GL_FALSE;$/;"	v
_GLEE_MESA_resize_buffers	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_MESA_resize_buffers;$/;"	v
_GLEE_MESA_window_pos	shared/GLee.c	/^GLboolean _GLEE_MESA_window_pos = GL_FALSE;$/;"	v
_GLEE_MESA_window_pos	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_MESA_window_pos;$/;"	v
_GLEE_MESA_ycbcr_texture	shared/GLee.c	/^GLboolean _GLEE_MESA_ycbcr_texture = GL_FALSE;$/;"	v
_GLEE_MESA_ycbcr_texture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_MESA_ycbcr_texture;$/;"	v
_GLEE_NV_blend_square	shared/GLee.c	/^GLboolean _GLEE_NV_blend_square = GL_FALSE;$/;"	v
_GLEE_NV_blend_square	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_blend_square;$/;"	v
_GLEE_NV_copy_depth_to_color	shared/GLee.c	/^GLboolean _GLEE_NV_copy_depth_to_color = GL_FALSE;$/;"	v
_GLEE_NV_copy_depth_to_color	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_copy_depth_to_color;$/;"	v
_GLEE_NV_depth_buffer_float	shared/GLee.c	/^GLboolean _GLEE_NV_depth_buffer_float = GL_FALSE;$/;"	v
_GLEE_NV_depth_buffer_float	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_depth_buffer_float;$/;"	v
_GLEE_NV_depth_clamp	shared/GLee.c	/^GLboolean _GLEE_NV_depth_clamp = GL_FALSE;$/;"	v
_GLEE_NV_depth_clamp	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_depth_clamp;$/;"	v
_GLEE_NV_evaluators	shared/GLee.c	/^GLboolean _GLEE_NV_evaluators = GL_FALSE;$/;"	v
_GLEE_NV_evaluators	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_evaluators;$/;"	v
_GLEE_NV_fence	shared/GLee.c	/^GLboolean _GLEE_NV_fence = GL_FALSE;$/;"	v
_GLEE_NV_fence	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_fence;$/;"	v
_GLEE_NV_float_buffer	shared/GLee.c	/^GLboolean _GLEE_NV_float_buffer = GL_FALSE;$/;"	v
_GLEE_NV_float_buffer	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_float_buffer;$/;"	v
_GLEE_NV_fog_distance	shared/GLee.c	/^GLboolean _GLEE_NV_fog_distance = GL_FALSE;$/;"	v
_GLEE_NV_fog_distance	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_fog_distance;$/;"	v
_GLEE_NV_fragment_program	shared/GLee.c	/^GLboolean _GLEE_NV_fragment_program = GL_FALSE;$/;"	v
_GLEE_NV_fragment_program	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_fragment_program;$/;"	v
_GLEE_NV_fragment_program2	shared/GLee.c	/^GLboolean _GLEE_NV_fragment_program2 = GL_FALSE;$/;"	v
_GLEE_NV_fragment_program2	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_fragment_program2;$/;"	v
_GLEE_NV_fragment_program_option	shared/GLee.c	/^GLboolean _GLEE_NV_fragment_program_option = GL_FALSE;$/;"	v
_GLEE_NV_fragment_program_option	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_fragment_program_option;$/;"	v
_GLEE_NV_framebuffer_multisample_coverage	shared/GLee.c	/^GLboolean _GLEE_NV_framebuffer_multisample_coverage = GL_FALSE;$/;"	v
_GLEE_NV_framebuffer_multisample_coverage	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_framebuffer_multisample_coverage;$/;"	v
_GLEE_NV_geometry_program4	shared/GLee.c	/^GLboolean _GLEE_NV_geometry_program4 = GL_FALSE;$/;"	v
_GLEE_NV_geometry_program4	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_geometry_program4;$/;"	v
_GLEE_NV_gpu_program4	shared/GLee.c	/^GLboolean _GLEE_NV_gpu_program4 = GL_FALSE;$/;"	v
_GLEE_NV_gpu_program4	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_gpu_program4;$/;"	v
_GLEE_NV_half_float	shared/GLee.c	/^GLboolean _GLEE_NV_half_float = GL_FALSE;$/;"	v
_GLEE_NV_half_float	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_half_float;$/;"	v
_GLEE_NV_light_max_exponent	shared/GLee.c	/^GLboolean _GLEE_NV_light_max_exponent = GL_FALSE;$/;"	v
_GLEE_NV_light_max_exponent	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_light_max_exponent;$/;"	v
_GLEE_NV_multisample_filter_hint	shared/GLee.c	/^GLboolean _GLEE_NV_multisample_filter_hint = GL_FALSE;$/;"	v
_GLEE_NV_multisample_filter_hint	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_multisample_filter_hint;$/;"	v
_GLEE_NV_occlusion_query	shared/GLee.c	/^GLboolean _GLEE_NV_occlusion_query = GL_FALSE;$/;"	v
_GLEE_NV_occlusion_query	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_occlusion_query;$/;"	v
_GLEE_NV_packed_depth_stencil	shared/GLee.c	/^GLboolean _GLEE_NV_packed_depth_stencil = GL_FALSE;$/;"	v
_GLEE_NV_packed_depth_stencil	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_packed_depth_stencil;$/;"	v
_GLEE_NV_parameter_buffer_object	shared/GLee.c	/^GLboolean _GLEE_NV_parameter_buffer_object = GL_FALSE;$/;"	v
_GLEE_NV_parameter_buffer_object	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_parameter_buffer_object;$/;"	v
_GLEE_NV_pixel_data_range	shared/GLee.c	/^GLboolean _GLEE_NV_pixel_data_range = GL_FALSE;$/;"	v
_GLEE_NV_pixel_data_range	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_pixel_data_range;$/;"	v
_GLEE_NV_point_sprite	shared/GLee.c	/^GLboolean _GLEE_NV_point_sprite = GL_FALSE;$/;"	v
_GLEE_NV_point_sprite	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_point_sprite;$/;"	v
_GLEE_NV_primitive_restart	shared/GLee.c	/^GLboolean _GLEE_NV_primitive_restart = GL_FALSE;$/;"	v
_GLEE_NV_primitive_restart	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_primitive_restart;$/;"	v
_GLEE_NV_register_combiners	shared/GLee.c	/^GLboolean _GLEE_NV_register_combiners = GL_FALSE;$/;"	v
_GLEE_NV_register_combiners	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_register_combiners;$/;"	v
_GLEE_NV_register_combiners2	shared/GLee.c	/^GLboolean _GLEE_NV_register_combiners2 = GL_FALSE;$/;"	v
_GLEE_NV_register_combiners2	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_register_combiners2;$/;"	v
_GLEE_NV_texgen_emboss	shared/GLee.c	/^GLboolean _GLEE_NV_texgen_emboss = GL_FALSE;$/;"	v
_GLEE_NV_texgen_emboss	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_texgen_emboss;$/;"	v
_GLEE_NV_texgen_reflection	shared/GLee.c	/^GLboolean _GLEE_NV_texgen_reflection = GL_FALSE;$/;"	v
_GLEE_NV_texgen_reflection	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_texgen_reflection;$/;"	v
_GLEE_NV_texture_compression_vtc	shared/GLee.c	/^GLboolean _GLEE_NV_texture_compression_vtc = GL_FALSE;$/;"	v
_GLEE_NV_texture_compression_vtc	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_texture_compression_vtc;$/;"	v
_GLEE_NV_texture_env_combine4	shared/GLee.c	/^GLboolean _GLEE_NV_texture_env_combine4 = GL_FALSE;$/;"	v
_GLEE_NV_texture_env_combine4	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_texture_env_combine4;$/;"	v
_GLEE_NV_texture_expand_normal	shared/GLee.c	/^GLboolean _GLEE_NV_texture_expand_normal = GL_FALSE;$/;"	v
_GLEE_NV_texture_expand_normal	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_texture_expand_normal;$/;"	v
_GLEE_NV_texture_rectangle	shared/GLee.c	/^GLboolean _GLEE_NV_texture_rectangle = GL_FALSE;$/;"	v
_GLEE_NV_texture_rectangle	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_texture_rectangle;$/;"	v
_GLEE_NV_texture_shader	shared/GLee.c	/^GLboolean _GLEE_NV_texture_shader = GL_FALSE;$/;"	v
_GLEE_NV_texture_shader	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_texture_shader;$/;"	v
_GLEE_NV_texture_shader2	shared/GLee.c	/^GLboolean _GLEE_NV_texture_shader2 = GL_FALSE;$/;"	v
_GLEE_NV_texture_shader2	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_texture_shader2;$/;"	v
_GLEE_NV_texture_shader3	shared/GLee.c	/^GLboolean _GLEE_NV_texture_shader3 = GL_FALSE;$/;"	v
_GLEE_NV_texture_shader3	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_texture_shader3;$/;"	v
_GLEE_NV_transform_feedback	shared/GLee.c	/^GLboolean _GLEE_NV_transform_feedback = GL_FALSE;$/;"	v
_GLEE_NV_transform_feedback	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_transform_feedback;$/;"	v
_GLEE_NV_vertex_array_range	shared/GLee.c	/^GLboolean _GLEE_NV_vertex_array_range = GL_FALSE;$/;"	v
_GLEE_NV_vertex_array_range	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_vertex_array_range;$/;"	v
_GLEE_NV_vertex_array_range2	shared/GLee.c	/^GLboolean _GLEE_NV_vertex_array_range2 = GL_FALSE;$/;"	v
_GLEE_NV_vertex_array_range2	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_vertex_array_range2;$/;"	v
_GLEE_NV_vertex_program	shared/GLee.c	/^GLboolean _GLEE_NV_vertex_program = GL_FALSE;$/;"	v
_GLEE_NV_vertex_program	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_vertex_program;$/;"	v
_GLEE_NV_vertex_program1_1	shared/GLee.c	/^GLboolean _GLEE_NV_vertex_program1_1 = GL_FALSE;$/;"	v
_GLEE_NV_vertex_program1_1	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_vertex_program1_1;$/;"	v
_GLEE_NV_vertex_program2	shared/GLee.c	/^GLboolean _GLEE_NV_vertex_program2 = GL_FALSE;$/;"	v
_GLEE_NV_vertex_program2	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_vertex_program2;$/;"	v
_GLEE_NV_vertex_program2_option	shared/GLee.c	/^GLboolean _GLEE_NV_vertex_program2_option = GL_FALSE;$/;"	v
_GLEE_NV_vertex_program2_option	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_vertex_program2_option;$/;"	v
_GLEE_NV_vertex_program3	shared/GLee.c	/^GLboolean _GLEE_NV_vertex_program3 = GL_FALSE;$/;"	v
_GLEE_NV_vertex_program3	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_NV_vertex_program3;$/;"	v
_GLEE_OES_byte_coordinates	shared/GLee.c	/^GLboolean _GLEE_OES_byte_coordinates = GL_FALSE;$/;"	v
_GLEE_OES_byte_coordinates	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_OES_byte_coordinates;$/;"	v
_GLEE_OES_compressed_paletted_texture	shared/GLee.c	/^GLboolean _GLEE_OES_compressed_paletted_texture = GL_FALSE;$/;"	v
_GLEE_OES_compressed_paletted_texture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_OES_compressed_paletted_texture;$/;"	v
_GLEE_OES_read_format	shared/GLee.c	/^GLboolean _GLEE_OES_read_format = GL_FALSE;$/;"	v
_GLEE_OES_read_format	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_OES_read_format;$/;"	v
_GLEE_OES_single_precision	shared/GLee.c	/^GLboolean _GLEE_OES_single_precision = GL_FALSE;$/;"	v
_GLEE_OES_single_precision	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_OES_single_precision;$/;"	v
_GLEE_OML_interlace	shared/GLee.c	/^GLboolean _GLEE_OML_interlace = GL_FALSE;$/;"	v
_GLEE_OML_interlace	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_OML_interlace;$/;"	v
_GLEE_OML_resample	shared/GLee.c	/^GLboolean _GLEE_OML_resample = GL_FALSE;$/;"	v
_GLEE_OML_resample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_OML_resample;$/;"	v
_GLEE_OML_subsample	shared/GLee.c	/^GLboolean _GLEE_OML_subsample = GL_FALSE;$/;"	v
_GLEE_OML_subsample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_OML_subsample;$/;"	v
_GLEE_PGI_misc_hints	shared/GLee.c	/^GLboolean _GLEE_PGI_misc_hints = GL_FALSE;$/;"	v
_GLEE_PGI_misc_hints	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_PGI_misc_hints;$/;"	v
_GLEE_PGI_vertex_hints	shared/GLee.c	/^GLboolean _GLEE_PGI_vertex_hints = GL_FALSE;$/;"	v
_GLEE_PGI_vertex_hints	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_PGI_vertex_hints;$/;"	v
_GLEE_REND_screen_coordinates	shared/GLee.c	/^GLboolean _GLEE_REND_screen_coordinates = GL_FALSE;$/;"	v
_GLEE_REND_screen_coordinates	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_REND_screen_coordinates;$/;"	v
_GLEE_S3_s3tc	shared/GLee.c	/^GLboolean _GLEE_S3_s3tc = GL_FALSE;$/;"	v
_GLEE_S3_s3tc	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_S3_s3tc;$/;"	v
_GLEE_SGIS_detail_texture	shared/GLee.c	/^GLboolean _GLEE_SGIS_detail_texture = GL_FALSE;$/;"	v
_GLEE_SGIS_detail_texture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIS_detail_texture;$/;"	v
_GLEE_SGIS_fog_function	shared/GLee.c	/^GLboolean _GLEE_SGIS_fog_function = GL_FALSE;$/;"	v
_GLEE_SGIS_fog_function	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIS_fog_function;$/;"	v
_GLEE_SGIS_generate_mipmap	shared/GLee.c	/^GLboolean _GLEE_SGIS_generate_mipmap = GL_FALSE;$/;"	v
_GLEE_SGIS_generate_mipmap	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIS_generate_mipmap;$/;"	v
_GLEE_SGIS_multisample	shared/GLee.c	/^GLboolean _GLEE_SGIS_multisample = GL_FALSE;$/;"	v
_GLEE_SGIS_multisample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIS_multisample;$/;"	v
_GLEE_SGIS_pixel_texture	shared/GLee.c	/^GLboolean _GLEE_SGIS_pixel_texture = GL_FALSE;$/;"	v
_GLEE_SGIS_pixel_texture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIS_pixel_texture;$/;"	v
_GLEE_SGIS_point_line_texgen	shared/GLee.c	/^GLboolean _GLEE_SGIS_point_line_texgen = GL_FALSE;$/;"	v
_GLEE_SGIS_point_line_texgen	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIS_point_line_texgen;$/;"	v
_GLEE_SGIS_point_parameters	shared/GLee.c	/^GLboolean _GLEE_SGIS_point_parameters = GL_FALSE;$/;"	v
_GLEE_SGIS_point_parameters	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIS_point_parameters;$/;"	v
_GLEE_SGIS_sharpen_texture	shared/GLee.c	/^GLboolean _GLEE_SGIS_sharpen_texture = GL_FALSE;$/;"	v
_GLEE_SGIS_sharpen_texture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIS_sharpen_texture;$/;"	v
_GLEE_SGIS_texture4D	shared/GLee.c	/^GLboolean _GLEE_SGIS_texture4D = GL_FALSE;$/;"	v
_GLEE_SGIS_texture4D	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIS_texture4D;$/;"	v
_GLEE_SGIS_texture_border_clamp	shared/GLee.c	/^GLboolean _GLEE_SGIS_texture_border_clamp = GL_FALSE;$/;"	v
_GLEE_SGIS_texture_border_clamp	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIS_texture_border_clamp;$/;"	v
_GLEE_SGIS_texture_color_mask	shared/GLee.c	/^GLboolean _GLEE_SGIS_texture_color_mask = GL_FALSE;$/;"	v
_GLEE_SGIS_texture_color_mask	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIS_texture_color_mask;$/;"	v
_GLEE_SGIS_texture_edge_clamp	shared/GLee.c	/^GLboolean _GLEE_SGIS_texture_edge_clamp = GL_FALSE;$/;"	v
_GLEE_SGIS_texture_edge_clamp	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIS_texture_edge_clamp;$/;"	v
_GLEE_SGIS_texture_filter4	shared/GLee.c	/^GLboolean _GLEE_SGIS_texture_filter4 = GL_FALSE;$/;"	v
_GLEE_SGIS_texture_filter4	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIS_texture_filter4;$/;"	v
_GLEE_SGIS_texture_lod	shared/GLee.c	/^GLboolean _GLEE_SGIS_texture_lod = GL_FALSE;$/;"	v
_GLEE_SGIS_texture_lod	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIS_texture_lod;$/;"	v
_GLEE_SGIS_texture_select	shared/GLee.c	/^GLboolean _GLEE_SGIS_texture_select = GL_FALSE;$/;"	v
_GLEE_SGIS_texture_select	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIS_texture_select;$/;"	v
_GLEE_SGIX_async	shared/GLee.c	/^GLboolean _GLEE_SGIX_async = GL_FALSE;$/;"	v
_GLEE_SGIX_async	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_async;$/;"	v
_GLEE_SGIX_async_histogram	shared/GLee.c	/^GLboolean _GLEE_SGIX_async_histogram = GL_FALSE;$/;"	v
_GLEE_SGIX_async_histogram	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_async_histogram;$/;"	v
_GLEE_SGIX_async_pixel	shared/GLee.c	/^GLboolean _GLEE_SGIX_async_pixel = GL_FALSE;$/;"	v
_GLEE_SGIX_async_pixel	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_async_pixel;$/;"	v
_GLEE_SGIX_blend_alpha_minmax	shared/GLee.c	/^GLboolean _GLEE_SGIX_blend_alpha_minmax = GL_FALSE;$/;"	v
_GLEE_SGIX_blend_alpha_minmax	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_blend_alpha_minmax;$/;"	v
_GLEE_SGIX_calligraphic_fragment	shared/GLee.c	/^GLboolean _GLEE_SGIX_calligraphic_fragment = GL_FALSE;$/;"	v
_GLEE_SGIX_calligraphic_fragment	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_calligraphic_fragment;$/;"	v
_GLEE_SGIX_clipmap	shared/GLee.c	/^GLboolean _GLEE_SGIX_clipmap = GL_FALSE;$/;"	v
_GLEE_SGIX_clipmap	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_clipmap;$/;"	v
_GLEE_SGIX_convolution_accuracy	shared/GLee.c	/^GLboolean _GLEE_SGIX_convolution_accuracy = GL_FALSE;$/;"	v
_GLEE_SGIX_convolution_accuracy	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_convolution_accuracy;$/;"	v
_GLEE_SGIX_depth_pass_instrument	shared/GLee.c	/^GLboolean _GLEE_SGIX_depth_pass_instrument = GL_FALSE;$/;"	v
_GLEE_SGIX_depth_pass_instrument	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_depth_pass_instrument;$/;"	v
_GLEE_SGIX_depth_texture	shared/GLee.c	/^GLboolean _GLEE_SGIX_depth_texture = GL_FALSE;$/;"	v
_GLEE_SGIX_depth_texture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_depth_texture;$/;"	v
_GLEE_SGIX_flush_raster	shared/GLee.c	/^GLboolean _GLEE_SGIX_flush_raster = GL_FALSE;$/;"	v
_GLEE_SGIX_flush_raster	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_flush_raster;$/;"	v
_GLEE_SGIX_fog_offset	shared/GLee.c	/^GLboolean _GLEE_SGIX_fog_offset = GL_FALSE;$/;"	v
_GLEE_SGIX_fog_offset	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_fog_offset;$/;"	v
_GLEE_SGIX_fog_scale	shared/GLee.c	/^GLboolean _GLEE_SGIX_fog_scale = GL_FALSE;$/;"	v
_GLEE_SGIX_fog_scale	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_fog_scale;$/;"	v
_GLEE_SGIX_fragment_lighting	shared/GLee.c	/^GLboolean _GLEE_SGIX_fragment_lighting = GL_FALSE;$/;"	v
_GLEE_SGIX_fragment_lighting	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_fragment_lighting;$/;"	v
_GLEE_SGIX_framezoom	shared/GLee.c	/^GLboolean _GLEE_SGIX_framezoom = GL_FALSE;$/;"	v
_GLEE_SGIX_framezoom	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_framezoom;$/;"	v
_GLEE_SGIX_igloo_interface	shared/GLee.c	/^GLboolean _GLEE_SGIX_igloo_interface = GL_FALSE;$/;"	v
_GLEE_SGIX_igloo_interface	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_igloo_interface;$/;"	v
_GLEE_SGIX_impact_pixel_texture	shared/GLee.c	/^GLboolean _GLEE_SGIX_impact_pixel_texture = GL_FALSE;$/;"	v
_GLEE_SGIX_impact_pixel_texture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_impact_pixel_texture;$/;"	v
_GLEE_SGIX_instruments	shared/GLee.c	/^GLboolean _GLEE_SGIX_instruments = GL_FALSE;$/;"	v
_GLEE_SGIX_instruments	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_instruments;$/;"	v
_GLEE_SGIX_interlace	shared/GLee.c	/^GLboolean _GLEE_SGIX_interlace = GL_FALSE;$/;"	v
_GLEE_SGIX_interlace	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_interlace;$/;"	v
_GLEE_SGIX_ir_instrument1	shared/GLee.c	/^GLboolean _GLEE_SGIX_ir_instrument1 = GL_FALSE;$/;"	v
_GLEE_SGIX_ir_instrument1	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_ir_instrument1;$/;"	v
_GLEE_SGIX_list_priority	shared/GLee.c	/^GLboolean _GLEE_SGIX_list_priority = GL_FALSE;$/;"	v
_GLEE_SGIX_list_priority	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_list_priority;$/;"	v
_GLEE_SGIX_pixel_texture	shared/GLee.c	/^GLboolean _GLEE_SGIX_pixel_texture = GL_FALSE;$/;"	v
_GLEE_SGIX_pixel_texture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_pixel_texture;$/;"	v
_GLEE_SGIX_pixel_texture_bits	shared/GLee.c	/^GLboolean _GLEE_SGIX_pixel_texture_bits = GL_FALSE;$/;"	v
_GLEE_SGIX_pixel_texture_bits	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_pixel_texture_bits;$/;"	v
_GLEE_SGIX_pixel_tiles	shared/GLee.c	/^GLboolean _GLEE_SGIX_pixel_tiles = GL_FALSE;$/;"	v
_GLEE_SGIX_pixel_tiles	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_pixel_tiles;$/;"	v
_GLEE_SGIX_polynomial_ffd	shared/GLee.c	/^GLboolean _GLEE_SGIX_polynomial_ffd = GL_FALSE;$/;"	v
_GLEE_SGIX_polynomial_ffd	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_polynomial_ffd;$/;"	v
_GLEE_SGIX_reference_plane	shared/GLee.c	/^GLboolean _GLEE_SGIX_reference_plane = GL_FALSE;$/;"	v
_GLEE_SGIX_reference_plane	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_reference_plane;$/;"	v
_GLEE_SGIX_resample	shared/GLee.c	/^GLboolean _GLEE_SGIX_resample = GL_FALSE;$/;"	v
_GLEE_SGIX_resample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_resample;$/;"	v
_GLEE_SGIX_scalebias_hint	shared/GLee.c	/^GLboolean _GLEE_SGIX_scalebias_hint = GL_FALSE;$/;"	v
_GLEE_SGIX_scalebias_hint	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_scalebias_hint;$/;"	v
_GLEE_SGIX_shadow	shared/GLee.c	/^GLboolean _GLEE_SGIX_shadow = GL_FALSE;$/;"	v
_GLEE_SGIX_shadow	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_shadow;$/;"	v
_GLEE_SGIX_shadow_ambient	shared/GLee.c	/^GLboolean _GLEE_SGIX_shadow_ambient = GL_FALSE;$/;"	v
_GLEE_SGIX_shadow_ambient	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_shadow_ambient;$/;"	v
_GLEE_SGIX_sprite	shared/GLee.c	/^GLboolean _GLEE_SGIX_sprite = GL_FALSE;$/;"	v
_GLEE_SGIX_sprite	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_sprite;$/;"	v
_GLEE_SGIX_subsample	shared/GLee.c	/^GLboolean _GLEE_SGIX_subsample = GL_FALSE;$/;"	v
_GLEE_SGIX_subsample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_subsample;$/;"	v
_GLEE_SGIX_tag_sample_buffer	shared/GLee.c	/^GLboolean _GLEE_SGIX_tag_sample_buffer = GL_FALSE;$/;"	v
_GLEE_SGIX_tag_sample_buffer	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_tag_sample_buffer;$/;"	v
_GLEE_SGIX_texture_add_env	shared/GLee.c	/^GLboolean _GLEE_SGIX_texture_add_env = GL_FALSE;$/;"	v
_GLEE_SGIX_texture_add_env	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_texture_add_env;$/;"	v
_GLEE_SGIX_texture_coordinate_clamp	shared/GLee.c	/^GLboolean _GLEE_SGIX_texture_coordinate_clamp = GL_FALSE;$/;"	v
_GLEE_SGIX_texture_coordinate_clamp	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_texture_coordinate_clamp;$/;"	v
_GLEE_SGIX_texture_lod_bias	shared/GLee.c	/^GLboolean _GLEE_SGIX_texture_lod_bias = GL_FALSE;$/;"	v
_GLEE_SGIX_texture_lod_bias	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_texture_lod_bias;$/;"	v
_GLEE_SGIX_texture_multi_buffer	shared/GLee.c	/^GLboolean _GLEE_SGIX_texture_multi_buffer = GL_FALSE;$/;"	v
_GLEE_SGIX_texture_multi_buffer	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_texture_multi_buffer;$/;"	v
_GLEE_SGIX_texture_range	shared/GLee.c	/^GLboolean _GLEE_SGIX_texture_range = GL_FALSE;$/;"	v
_GLEE_SGIX_texture_range	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_texture_range;$/;"	v
_GLEE_SGIX_texture_scale_bias	shared/GLee.c	/^GLboolean _GLEE_SGIX_texture_scale_bias = GL_FALSE;$/;"	v
_GLEE_SGIX_texture_scale_bias	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_texture_scale_bias;$/;"	v
_GLEE_SGIX_texture_select	shared/GLee.c	/^GLboolean _GLEE_SGIX_texture_select = GL_FALSE;$/;"	v
_GLEE_SGIX_texture_select	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_texture_select;$/;"	v
_GLEE_SGIX_vertex_preclip	shared/GLee.c	/^GLboolean _GLEE_SGIX_vertex_preclip = GL_FALSE;$/;"	v
_GLEE_SGIX_vertex_preclip	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_vertex_preclip;$/;"	v
_GLEE_SGIX_ycrcb	shared/GLee.c	/^GLboolean _GLEE_SGIX_ycrcb = GL_FALSE;$/;"	v
_GLEE_SGIX_ycrcb	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_ycrcb;$/;"	v
_GLEE_SGIX_ycrcb_subsample	shared/GLee.c	/^GLboolean _GLEE_SGIX_ycrcb_subsample = GL_FALSE;$/;"	v
_GLEE_SGIX_ycrcb_subsample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_ycrcb_subsample;$/;"	v
_GLEE_SGIX_ycrcba	shared/GLee.c	/^GLboolean _GLEE_SGIX_ycrcba = GL_FALSE;$/;"	v
_GLEE_SGIX_ycrcba	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGIX_ycrcba;$/;"	v
_GLEE_SGI_color_matrix	shared/GLee.c	/^GLboolean _GLEE_SGI_color_matrix = GL_FALSE;$/;"	v
_GLEE_SGI_color_matrix	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGI_color_matrix;$/;"	v
_GLEE_SGI_color_table	shared/GLee.c	/^GLboolean _GLEE_SGI_color_table = GL_FALSE;$/;"	v
_GLEE_SGI_color_table	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGI_color_table;$/;"	v
_GLEE_SGI_depth_pass_instrument	shared/GLee.c	/^GLboolean _GLEE_SGI_depth_pass_instrument = GL_FALSE;$/;"	v
_GLEE_SGI_depth_pass_instrument	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGI_depth_pass_instrument;$/;"	v
_GLEE_SGI_texture_color_table	shared/GLee.c	/^GLboolean _GLEE_SGI_texture_color_table = GL_FALSE;$/;"	v
_GLEE_SGI_texture_color_table	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SGI_texture_color_table;$/;"	v
_GLEE_SUNX_constant_data	shared/GLee.c	/^GLboolean _GLEE_SUNX_constant_data = GL_FALSE;$/;"	v
_GLEE_SUNX_constant_data	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SUNX_constant_data;$/;"	v
_GLEE_SUN_convolution_border_modes	shared/GLee.c	/^GLboolean _GLEE_SUN_convolution_border_modes = GL_FALSE;$/;"	v
_GLEE_SUN_convolution_border_modes	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SUN_convolution_border_modes;$/;"	v
_GLEE_SUN_global_alpha	shared/GLee.c	/^GLboolean _GLEE_SUN_global_alpha = GL_FALSE;$/;"	v
_GLEE_SUN_global_alpha	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SUN_global_alpha;$/;"	v
_GLEE_SUN_mesh_array	shared/GLee.c	/^GLboolean _GLEE_SUN_mesh_array = GL_FALSE;$/;"	v
_GLEE_SUN_mesh_array	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SUN_mesh_array;$/;"	v
_GLEE_SUN_slice_accum	shared/GLee.c	/^GLboolean _GLEE_SUN_slice_accum = GL_FALSE;$/;"	v
_GLEE_SUN_slice_accum	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SUN_slice_accum;$/;"	v
_GLEE_SUN_triangle_list	shared/GLee.c	/^GLboolean _GLEE_SUN_triangle_list = GL_FALSE;$/;"	v
_GLEE_SUN_triangle_list	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SUN_triangle_list;$/;"	v
_GLEE_SUN_vertex	shared/GLee.c	/^GLboolean _GLEE_SUN_vertex = GL_FALSE;$/;"	v
_GLEE_SUN_vertex	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_SUN_vertex;$/;"	v
_GLEE_VERSION_1_2	shared/GLee.c	/^GLboolean _GLEE_VERSION_1_2 = GL_FALSE;$/;"	v
_GLEE_VERSION_1_2	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_VERSION_1_2;$/;"	v
_GLEE_VERSION_1_3	shared/GLee.c	/^GLboolean _GLEE_VERSION_1_3 = GL_FALSE;$/;"	v
_GLEE_VERSION_1_3	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_VERSION_1_3;$/;"	v
_GLEE_VERSION_1_4	shared/GLee.c	/^GLboolean _GLEE_VERSION_1_4 = GL_FALSE;$/;"	v
_GLEE_VERSION_1_4	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_VERSION_1_4;$/;"	v
_GLEE_VERSION_1_5	shared/GLee.c	/^GLboolean _GLEE_VERSION_1_5 = GL_FALSE;$/;"	v
_GLEE_VERSION_1_5	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_VERSION_1_5;$/;"	v
_GLEE_VERSION_2_0	shared/GLee.c	/^GLboolean _GLEE_VERSION_2_0 = GL_FALSE;$/;"	v
_GLEE_VERSION_2_0	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_VERSION_2_0;$/;"	v
_GLEE_VERSION_2_1	shared/GLee.c	/^GLboolean _GLEE_VERSION_2_1 = GL_FALSE;$/;"	v
_GLEE_VERSION_2_1	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_VERSION_2_1;$/;"	v
_GLEE_WGL_3DFX_multisample	shared/GLee.c	/^GLboolean _GLEE_WGL_3DFX_multisample = GL_FALSE;$/;"	v
_GLEE_WGL_3DFX_multisample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_3DFX_multisample;$/;"	v
_GLEE_WGL_3DL_stereo_control	shared/GLee.c	/^GLboolean _GLEE_WGL_3DL_stereo_control = GL_FALSE;$/;"	v
_GLEE_WGL_3DL_stereo_control	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_3DL_stereo_control;$/;"	v
_GLEE_WGL_ARB_buffer_region	shared/GLee.c	/^GLboolean _GLEE_WGL_ARB_buffer_region = GL_FALSE;$/;"	v
_GLEE_WGL_ARB_buffer_region	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_ARB_buffer_region;$/;"	v
_GLEE_WGL_ARB_extensions_string	shared/GLee.c	/^GLboolean _GLEE_WGL_ARB_extensions_string = GL_FALSE;$/;"	v
_GLEE_WGL_ARB_extensions_string	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_ARB_extensions_string;$/;"	v
_GLEE_WGL_ARB_make_current_read	shared/GLee.c	/^GLboolean _GLEE_WGL_ARB_make_current_read = GL_FALSE;$/;"	v
_GLEE_WGL_ARB_make_current_read	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_ARB_make_current_read;$/;"	v
_GLEE_WGL_ARB_multisample	shared/GLee.c	/^GLboolean _GLEE_WGL_ARB_multisample = GL_FALSE;$/;"	v
_GLEE_WGL_ARB_multisample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_ARB_multisample;$/;"	v
_GLEE_WGL_ARB_pbuffer	shared/GLee.c	/^GLboolean _GLEE_WGL_ARB_pbuffer = GL_FALSE;$/;"	v
_GLEE_WGL_ARB_pbuffer	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_ARB_pbuffer;$/;"	v
_GLEE_WGL_ARB_pixel_format	shared/GLee.c	/^GLboolean _GLEE_WGL_ARB_pixel_format = GL_FALSE;$/;"	v
_GLEE_WGL_ARB_pixel_format	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_ARB_pixel_format;$/;"	v
_GLEE_WGL_ARB_pixel_format_float	shared/GLee.c	/^GLboolean _GLEE_WGL_ARB_pixel_format_float = GL_FALSE;$/;"	v
_GLEE_WGL_ARB_pixel_format_float	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_ARB_pixel_format_float;$/;"	v
_GLEE_WGL_ARB_render_texture	shared/GLee.c	/^GLboolean _GLEE_WGL_ARB_render_texture = GL_FALSE;$/;"	v
_GLEE_WGL_ARB_render_texture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_ARB_render_texture;$/;"	v
_GLEE_WGL_ATI_pixel_format_float	shared/GLee.c	/^GLboolean _GLEE_WGL_ATI_pixel_format_float = GL_FALSE;$/;"	v
_GLEE_WGL_ATI_pixel_format_float	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_ATI_pixel_format_float;$/;"	v
_GLEE_WGL_EXT_depth_float	shared/GLee.c	/^GLboolean _GLEE_WGL_EXT_depth_float = GL_FALSE;$/;"	v
_GLEE_WGL_EXT_depth_float	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_EXT_depth_float;$/;"	v
_GLEE_WGL_EXT_display_color_table	shared/GLee.c	/^GLboolean _GLEE_WGL_EXT_display_color_table = GL_FALSE;$/;"	v
_GLEE_WGL_EXT_display_color_table	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_EXT_display_color_table;$/;"	v
_GLEE_WGL_EXT_extensions_string	shared/GLee.c	/^GLboolean _GLEE_WGL_EXT_extensions_string = GL_FALSE;$/;"	v
_GLEE_WGL_EXT_extensions_string	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_EXT_extensions_string;$/;"	v
_GLEE_WGL_EXT_make_current_read	shared/GLee.c	/^GLboolean _GLEE_WGL_EXT_make_current_read = GL_FALSE;$/;"	v
_GLEE_WGL_EXT_make_current_read	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_EXT_make_current_read;$/;"	v
_GLEE_WGL_EXT_multisample	shared/GLee.c	/^GLboolean _GLEE_WGL_EXT_multisample = GL_FALSE;$/;"	v
_GLEE_WGL_EXT_multisample	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_EXT_multisample;$/;"	v
_GLEE_WGL_EXT_pbuffer	shared/GLee.c	/^GLboolean _GLEE_WGL_EXT_pbuffer = GL_FALSE;$/;"	v
_GLEE_WGL_EXT_pbuffer	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_EXT_pbuffer;$/;"	v
_GLEE_WGL_EXT_pixel_format	shared/GLee.c	/^GLboolean _GLEE_WGL_EXT_pixel_format = GL_FALSE;$/;"	v
_GLEE_WGL_EXT_pixel_format	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_EXT_pixel_format;$/;"	v
_GLEE_WGL_EXT_swap_control	shared/GLee.c	/^GLboolean _GLEE_WGL_EXT_swap_control = GL_FALSE;$/;"	v
_GLEE_WGL_EXT_swap_control	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_EXT_swap_control;$/;"	v
_GLEE_WGL_I3D_digital_video_control	shared/GLee.c	/^GLboolean _GLEE_WGL_I3D_digital_video_control = GL_FALSE;$/;"	v
_GLEE_WGL_I3D_digital_video_control	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_I3D_digital_video_control;$/;"	v
_GLEE_WGL_I3D_gamma	shared/GLee.c	/^GLboolean _GLEE_WGL_I3D_gamma = GL_FALSE;$/;"	v
_GLEE_WGL_I3D_gamma	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_I3D_gamma;$/;"	v
_GLEE_WGL_I3D_genlock	shared/GLee.c	/^GLboolean _GLEE_WGL_I3D_genlock = GL_FALSE;$/;"	v
_GLEE_WGL_I3D_genlock	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_I3D_genlock;$/;"	v
_GLEE_WGL_I3D_image_buffer	shared/GLee.c	/^GLboolean _GLEE_WGL_I3D_image_buffer = GL_FALSE;$/;"	v
_GLEE_WGL_I3D_image_buffer	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_I3D_image_buffer;$/;"	v
_GLEE_WGL_I3D_swap_frame_lock	shared/GLee.c	/^GLboolean _GLEE_WGL_I3D_swap_frame_lock = GL_FALSE;$/;"	v
_GLEE_WGL_I3D_swap_frame_lock	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_I3D_swap_frame_lock;$/;"	v
_GLEE_WGL_I3D_swap_frame_usage	shared/GLee.c	/^GLboolean _GLEE_WGL_I3D_swap_frame_usage = GL_FALSE;$/;"	v
_GLEE_WGL_I3D_swap_frame_usage	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_I3D_swap_frame_usage;$/;"	v
_GLEE_WGL_NV_float_buffer	shared/GLee.c	/^GLboolean _GLEE_WGL_NV_float_buffer = GL_FALSE;$/;"	v
_GLEE_WGL_NV_float_buffer	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_NV_float_buffer;$/;"	v
_GLEE_WGL_NV_render_depth_texture	shared/GLee.c	/^GLboolean _GLEE_WGL_NV_render_depth_texture = GL_FALSE;$/;"	v
_GLEE_WGL_NV_render_depth_texture	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_NV_render_depth_texture;$/;"	v
_GLEE_WGL_NV_render_texture_rectangle	shared/GLee.c	/^GLboolean _GLEE_WGL_NV_render_texture_rectangle = GL_FALSE;$/;"	v
_GLEE_WGL_NV_render_texture_rectangle	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_NV_render_texture_rectangle;$/;"	v
_GLEE_WGL_NV_vertex_array_range	shared/GLee.c	/^GLboolean _GLEE_WGL_NV_vertex_array_range = GL_FALSE;$/;"	v
_GLEE_WGL_NV_vertex_array_range	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_NV_vertex_array_range;$/;"	v
_GLEE_WGL_OML_sync_control	shared/GLee.c	/^GLboolean _GLEE_WGL_OML_sync_control = GL_FALSE;$/;"	v
_GLEE_WGL_OML_sync_control	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WGL_OML_sync_control;$/;"	v
_GLEE_WIN_phong_shading	shared/GLee.c	/^GLboolean _GLEE_WIN_phong_shading = GL_FALSE;$/;"	v
_GLEE_WIN_phong_shading	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WIN_phong_shading;$/;"	v
_GLEE_WIN_specular_fog	shared/GLee.c	/^GLboolean _GLEE_WIN_specular_fog = GL_FALSE;$/;"	v
_GLEE_WIN_specular_fog	shared/GLee.h	/^GLEE_EXTERN GLboolean _GLEE_WIN_specular_fog;$/;"	v
_GLUfuncptr	include/GL/glu.h	/^typedef void (GLAPIENTRYP _GLUfuncptr)();$/;"	t
_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX	shared/GLee.h	782;"	d
_HALF_FUNCTION_H_	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfFunction.h	84;"	d
_HALF_FUNCTION_H_	shared/openexr-mac/include/OpenEXR/halfFunction.h	84;"	d
_HALF_H_	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	86;"	d
_HALF_H_	shared/openexr-mac/include/OpenEXR/half.h	86;"	d
_Lazy_glActiveStencilFaceEXT	shared/GLee.c	/^void __stdcall _Lazy_glActiveStencilFaceEXT(GLenum face)                                  {if (GLeeInit()) glActiveStencilFaceEXT(face);}$/;"	f
_Lazy_glActiveTexture	shared/GLee.c	/^void __stdcall _Lazy_glActiveTexture(GLenum texture)                                      {if (GLeeInit()) glActiveTexture(texture);}$/;"	f
_Lazy_glActiveTextureARB	shared/GLee.c	/^void __stdcall _Lazy_glActiveTextureARB(GLenum texture)                                   {if (GLeeInit()) glActiveTextureARB(texture);}$/;"	f
_Lazy_glActiveVaryingNV	shared/GLee.c	/^void __stdcall _Lazy_glActiveVaryingNV(GLuint program, const GLchar * name)               {if (GLeeInit()) glActiveVaryingNV(program, name);}$/;"	f
_Lazy_glAlphaFragmentOp1ATI	shared/GLee.c	/^void __stdcall _Lazy_glAlphaFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod)  {if (GLeeInit()) glAlphaFragmentOp1ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod);}$/;"	f
_Lazy_glAlphaFragmentOp2ATI	shared/GLee.c	/^void __stdcall _Lazy_glAlphaFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod)  {if (GLeeInit()) glAlphaFragmentOp2ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod);}$/;"	f
_Lazy_glAlphaFragmentOp3ATI	shared/GLee.c	/^void __stdcall _Lazy_glAlphaFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod)  {if (GLeeInit()) glAlphaFragmentOp3ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod);}$/;"	f
_Lazy_glApplyTextureEXT	shared/GLee.c	/^void __stdcall _Lazy_glApplyTextureEXT(GLenum mode)                                       {if (GLeeInit()) glApplyTextureEXT(mode);}$/;"	f
_Lazy_glAreProgramsResidentNV	shared/GLee.c	/^GLboolean __stdcall _Lazy_glAreProgramsResidentNV(GLsizei n, const GLuint * programs, GLboolean * residences)  {if (GLeeInit()) return glAreProgramsResidentNV(n, programs, residences); return (GLboolean)0;}$/;"	f
_Lazy_glAreTexturesResidentEXT	shared/GLee.c	/^GLboolean __stdcall _Lazy_glAreTexturesResidentEXT(GLsizei n, const GLuint * textures, GLboolean * residences)  {if (GLeeInit()) return glAreTexturesResidentEXT(n, textures, residences); return (GLboolean)0;}$/;"	f
_Lazy_glArrayElementEXT	shared/GLee.c	/^void __stdcall _Lazy_glArrayElementEXT(GLint i)                                           {if (GLeeInit()) glArrayElementEXT(i);}$/;"	f
_Lazy_glArrayObjectATI	shared/GLee.c	/^void __stdcall _Lazy_glArrayObjectATI(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset)  {if (GLeeInit()) glArrayObjectATI(array, size, type, stride, buffer, offset);}$/;"	f
_Lazy_glAsyncMarkerSGIX	shared/GLee.c	/^void __stdcall _Lazy_glAsyncMarkerSGIX(GLuint marker)                                     {if (GLeeInit()) glAsyncMarkerSGIX(marker);}$/;"	f
_Lazy_glAttachObjectARB	shared/GLee.c	/^void __stdcall _Lazy_glAttachObjectARB(GLhandleARB containerObj, GLhandleARB obj)         {if (GLeeInit()) glAttachObjectARB(containerObj, obj);}$/;"	f
_Lazy_glAttachShader	shared/GLee.c	/^void __stdcall _Lazy_glAttachShader(GLuint program, GLuint shader)                        {if (GLeeInit()) glAttachShader(program, shader);}$/;"	f
_Lazy_glBeginFragmentShaderATI	shared/GLee.c	/^void __stdcall _Lazy_glBeginFragmentShaderATI(void)                                       {if (GLeeInit()) glBeginFragmentShaderATI();}$/;"	f
_Lazy_glBeginOcclusionQueryNV	shared/GLee.c	/^void __stdcall _Lazy_glBeginOcclusionQueryNV(GLuint id)                                   {if (GLeeInit()) glBeginOcclusionQueryNV(id);}$/;"	f
_Lazy_glBeginQuery	shared/GLee.c	/^void __stdcall _Lazy_glBeginQuery(GLenum target, GLuint id)                               {if (GLeeInit()) glBeginQuery(target, id);}$/;"	f
_Lazy_glBeginQueryARB	shared/GLee.c	/^void __stdcall _Lazy_glBeginQueryARB(GLenum target, GLuint id)                            {if (GLeeInit()) glBeginQueryARB(target, id);}$/;"	f
_Lazy_glBeginSceneEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glBeginSceneEXT(void)                                              {if (GLeeInit()) glBeginSceneEXT();}$/;"	f
_Lazy_glBeginTransformFeedbackNV	shared/GLee.c	/^void __stdcall _Lazy_glBeginTransformFeedbackNV(GLenum primitiveMode)                     {if (GLeeInit()) glBeginTransformFeedbackNV(primitiveMode);}$/;"	f
_Lazy_glBeginVertexShaderEXT	shared/GLee.c	/^void __stdcall _Lazy_glBeginVertexShaderEXT(void)                                         {if (GLeeInit()) glBeginVertexShaderEXT();}$/;"	f
_Lazy_glBindAttribLocation	shared/GLee.c	/^void __stdcall _Lazy_glBindAttribLocation(GLuint program, GLuint index, const GLchar * name)  {if (GLeeInit()) glBindAttribLocation(program, index, name);}$/;"	f
_Lazy_glBindAttribLocationARB	shared/GLee.c	/^void __stdcall _Lazy_glBindAttribLocationARB(GLhandleARB programObj, GLuint index, const GLcharARB * name)  {if (GLeeInit()) glBindAttribLocationARB(programObj, index, name);}$/;"	f
_Lazy_glBindBuffer	shared/GLee.c	/^void __stdcall _Lazy_glBindBuffer(GLenum target, GLuint buffer)                           {if (GLeeInit()) glBindBuffer(target, buffer);}$/;"	f
_Lazy_glBindBufferARB	shared/GLee.c	/^void __stdcall _Lazy_glBindBufferARB(GLenum target, GLuint buffer)                        {if (GLeeInit()) glBindBufferARB(target, buffer);}$/;"	f
_Lazy_glBindBufferBaseNV	shared/GLee.c	/^void __stdcall _Lazy_glBindBufferBaseNV(GLenum target, GLuint index, GLuint buffer)       {if (GLeeInit()) glBindBufferBaseNV(target, index, buffer);}$/;"	f
_Lazy_glBindBufferOffsetNV	shared/GLee.c	/^void __stdcall _Lazy_glBindBufferOffsetNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset)  {if (GLeeInit()) glBindBufferOffsetNV(target, index, buffer, offset);}$/;"	f
_Lazy_glBindBufferRangeNV	shared/GLee.c	/^void __stdcall _Lazy_glBindBufferRangeNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)  {if (GLeeInit()) glBindBufferRangeNV(target, index, buffer, offset, size);}$/;"	f
_Lazy_glBindFragDataLocationEXT	shared/GLee.c	/^void __stdcall _Lazy_glBindFragDataLocationEXT(GLuint program, GLuint color, const GLchar * name)  {if (GLeeInit()) glBindFragDataLocationEXT(program, color, name);}$/;"	f
_Lazy_glBindFragmentShaderATI	shared/GLee.c	/^void __stdcall _Lazy_glBindFragmentShaderATI(GLuint id)                                   {if (GLeeInit()) glBindFragmentShaderATI(id);}$/;"	f
_Lazy_glBindFramebufferEXT	shared/GLee.c	/^void __stdcall _Lazy_glBindFramebufferEXT(GLenum target, GLuint framebuffer)              {if (GLeeInit()) glBindFramebufferEXT(target, framebuffer);}$/;"	f
_Lazy_glBindLightParameterEXT	shared/GLee.c	/^GLuint __stdcall _Lazy_glBindLightParameterEXT(GLenum light, GLenum value)                {if (GLeeInit()) return glBindLightParameterEXT(light, value); return (GLuint)0;}$/;"	f
_Lazy_glBindMaterialParameterEXT	shared/GLee.c	/^GLuint __stdcall _Lazy_glBindMaterialParameterEXT(GLenum face, GLenum value)              {if (GLeeInit()) return glBindMaterialParameterEXT(face, value); return (GLuint)0;}$/;"	f
_Lazy_glBindParameterEXT	shared/GLee.c	/^GLuint __stdcall _Lazy_glBindParameterEXT(GLenum value)                                   {if (GLeeInit()) return glBindParameterEXT(value); return (GLuint)0;}$/;"	f
_Lazy_glBindProgramARB	shared/GLee.c	/^void __stdcall _Lazy_glBindProgramARB(GLenum target, GLuint program)                      {if (GLeeInit()) glBindProgramARB(target, program);}$/;"	f
_Lazy_glBindProgramNV	shared/GLee.c	/^void __stdcall _Lazy_glBindProgramNV(GLenum target, GLuint id)                            {if (GLeeInit()) glBindProgramNV(target, id);}$/;"	f
_Lazy_glBindRenderbufferEXT	shared/GLee.c	/^void __stdcall _Lazy_glBindRenderbufferEXT(GLenum target, GLuint renderbuffer)            {if (GLeeInit()) glBindRenderbufferEXT(target, renderbuffer);}$/;"	f
_Lazy_glBindTexGenParameterEXT	shared/GLee.c	/^GLuint __stdcall _Lazy_glBindTexGenParameterEXT(GLenum unit, GLenum coord, GLenum value)  {if (GLeeInit()) return glBindTexGenParameterEXT(unit, coord, value); return (GLuint)0;}$/;"	f
_Lazy_glBindTextureEXT	shared/GLee.c	/^void __stdcall _Lazy_glBindTextureEXT(GLenum target, GLuint texture)                      {if (GLeeInit()) glBindTextureEXT(target, texture);}$/;"	f
_Lazy_glBindTextureUnitParameterEXT	shared/GLee.c	/^GLuint __stdcall _Lazy_glBindTextureUnitParameterEXT(GLenum unit, GLenum value)           {if (GLeeInit()) return glBindTextureUnitParameterEXT(unit, value); return (GLuint)0;}$/;"	f
_Lazy_glBindVertexArrayAPPLE	shared/GLee.c	/^void __stdcall _Lazy_glBindVertexArrayAPPLE(GLuint array)                                 {if (GLeeInit()) glBindVertexArrayAPPLE(array);}$/;"	f
_Lazy_glBindVertexShaderEXT	shared/GLee.c	/^void __stdcall _Lazy_glBindVertexShaderEXT(GLuint id)                                     {if (GLeeInit()) glBindVertexShaderEXT(id);}$/;"	f
_Lazy_glBinormal3bEXT	shared/GLee.c	/^void __stdcall _Lazy_glBinormal3bEXT(GLbyte bx, GLbyte by, GLbyte bz)                     {if (GLeeInit()) glBinormal3bEXT(bx, by, bz);}$/;"	f
_Lazy_glBinormal3bvEXT	shared/GLee.c	/^void __stdcall _Lazy_glBinormal3bvEXT(const GLbyte * v)                                   {if (GLeeInit()) glBinormal3bvEXT(v);}$/;"	f
_Lazy_glBinormal3dEXT	shared/GLee.c	/^void __stdcall _Lazy_glBinormal3dEXT(GLdouble bx, GLdouble by, GLdouble bz)               {if (GLeeInit()) glBinormal3dEXT(bx, by, bz);}$/;"	f
_Lazy_glBinormal3dvEXT	shared/GLee.c	/^void __stdcall _Lazy_glBinormal3dvEXT(const GLdouble * v)                                 {if (GLeeInit()) glBinormal3dvEXT(v);}$/;"	f
_Lazy_glBinormal3fEXT	shared/GLee.c	/^void __stdcall _Lazy_glBinormal3fEXT(GLfloat bx, GLfloat by, GLfloat bz)                  {if (GLeeInit()) glBinormal3fEXT(bx, by, bz);}$/;"	f
_Lazy_glBinormal3fvEXT	shared/GLee.c	/^void __stdcall _Lazy_glBinormal3fvEXT(const GLfloat * v)                                  {if (GLeeInit()) glBinormal3fvEXT(v);}$/;"	f
_Lazy_glBinormal3iEXT	shared/GLee.c	/^void __stdcall _Lazy_glBinormal3iEXT(GLint bx, GLint by, GLint bz)                        {if (GLeeInit()) glBinormal3iEXT(bx, by, bz);}$/;"	f
_Lazy_glBinormal3ivEXT	shared/GLee.c	/^void __stdcall _Lazy_glBinormal3ivEXT(const GLint * v)                                    {if (GLeeInit()) glBinormal3ivEXT(v);}$/;"	f
_Lazy_glBinormal3sEXT	shared/GLee.c	/^void __stdcall _Lazy_glBinormal3sEXT(GLshort bx, GLshort by, GLshort bz)                  {if (GLeeInit()) glBinormal3sEXT(bx, by, bz);}$/;"	f
_Lazy_glBinormal3svEXT	shared/GLee.c	/^void __stdcall _Lazy_glBinormal3svEXT(const GLshort * v)                                  {if (GLeeInit()) glBinormal3svEXT(v);}$/;"	f
_Lazy_glBinormalPointerEXT	shared/GLee.c	/^void __stdcall _Lazy_glBinormalPointerEXT(GLenum type, GLsizei stride, const GLvoid * pointer)  {if (GLeeInit()) glBinormalPointerEXT(type, stride, pointer);}$/;"	f
_Lazy_glBlendColor	shared/GLee.c	/^void __stdcall _Lazy_glBlendColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)  {if (GLeeInit()) glBlendColor(red, green, blue, alpha);}$/;"	f
_Lazy_glBlendColorEXT	shared/GLee.c	/^void __stdcall _Lazy_glBlendColorEXT(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)  {if (GLeeInit()) glBlendColorEXT(red, green, blue, alpha);}$/;"	f
_Lazy_glBlendEquation	shared/GLee.c	/^void __stdcall _Lazy_glBlendEquation(GLenum mode)                                         {if (GLeeInit()) glBlendEquation(mode);}$/;"	f
_Lazy_glBlendEquationEXT	shared/GLee.c	/^void __stdcall _Lazy_glBlendEquationEXT(GLenum mode)                                      {if (GLeeInit()) glBlendEquationEXT(mode);}$/;"	f
_Lazy_glBlendEquationSeparate	shared/GLee.c	/^void __stdcall _Lazy_glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha)            {if (GLeeInit()) glBlendEquationSeparate(modeRGB, modeAlpha);}$/;"	f
_Lazy_glBlendEquationSeparateEXT	shared/GLee.c	/^void __stdcall _Lazy_glBlendEquationSeparateEXT(GLenum modeRGB, GLenum modeAlpha)         {if (GLeeInit()) glBlendEquationSeparateEXT(modeRGB, modeAlpha);}$/;"	f
_Lazy_glBlendFuncSeparate	shared/GLee.c	/^void __stdcall _Lazy_glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)  {if (GLeeInit()) glBlendFuncSeparate(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha);}$/;"	f
_Lazy_glBlendFuncSeparateEXT	shared/GLee.c	/^void __stdcall _Lazy_glBlendFuncSeparateEXT(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)  {if (GLeeInit()) glBlendFuncSeparateEXT(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha);}$/;"	f
_Lazy_glBlendFuncSeparateINGR	shared/GLee.c	/^void __stdcall _Lazy_glBlendFuncSeparateINGR(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)  {if (GLeeInit()) glBlendFuncSeparateINGR(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha);}$/;"	f
_Lazy_glBlitFramebufferEXT	shared/GLee.c	/^void __stdcall _Lazy_glBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)  {if (GLeeInit()) glBlitFramebufferEXT(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);}$/;"	f
_Lazy_glBufferData	shared/GLee.c	/^void __stdcall _Lazy_glBufferData(GLenum target, GLsizeiptr size, const GLvoid * data, GLenum usage)  {if (GLeeInit()) glBufferData(target, size, data, usage);}$/;"	f
_Lazy_glBufferDataARB	shared/GLee.c	/^void __stdcall _Lazy_glBufferDataARB(GLenum target, GLsizeiptrARB size, const GLvoid * data, GLenum usage)  {if (GLeeInit()) glBufferDataARB(target, size, data, usage);}$/;"	f
_Lazy_glBufferSubData	shared/GLee.c	/^void __stdcall _Lazy_glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid * data)  {if (GLeeInit()) glBufferSubData(target, offset, size, data);}$/;"	f
_Lazy_glBufferSubDataARB	shared/GLee.c	/^void __stdcall _Lazy_glBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid * data)  {if (GLeeInit()) glBufferSubDataARB(target, offset, size, data);}$/;"	f
_Lazy_glCheckFramebufferStatusEXT	shared/GLee.c	/^GLenum __stdcall _Lazy_glCheckFramebufferStatusEXT(GLenum target)                         {if (GLeeInit()) return glCheckFramebufferStatusEXT(target); return (GLenum)0;}$/;"	f
_Lazy_glClampColorARB	shared/GLee.c	/^void __stdcall _Lazy_glClampColorARB(GLenum target, GLenum clamp)                         {if (GLeeInit()) glClampColorARB(target, clamp);}$/;"	f
_Lazy_glClearColorIiEXT	shared/GLee.c	/^void __stdcall _Lazy_glClearColorIiEXT(GLint red, GLint green, GLint blue, GLint alpha)   {if (GLeeInit()) glClearColorIiEXT(red, green, blue, alpha);}$/;"	f
_Lazy_glClearColorIuiEXT	shared/GLee.c	/^void __stdcall _Lazy_glClearColorIuiEXT(GLuint red, GLuint green, GLuint blue, GLuint alpha)  {if (GLeeInit()) glClearColorIuiEXT(red, green, blue, alpha);}$/;"	f
_Lazy_glClearDepthdNV	shared/GLee.c	/^void __stdcall _Lazy_glClearDepthdNV(GLdouble depth)                                      {if (GLeeInit()) glClearDepthdNV(depth);}$/;"	f
_Lazy_glClearDepthfOES	shared/GLee.c	/^GLvoid __stdcall _Lazy_glClearDepthfOES(GLclampd depth)                                   {if (GLeeInit()) glClearDepthfOES(depth);}$/;"	f
_Lazy_glClientActiveTexture	shared/GLee.c	/^void __stdcall _Lazy_glClientActiveTexture(GLenum texture)                                {if (GLeeInit()) glClientActiveTexture(texture);}$/;"	f
_Lazy_glClientActiveTextureARB	shared/GLee.c	/^void __stdcall _Lazy_glClientActiveTextureARB(GLenum texture)                             {if (GLeeInit()) glClientActiveTextureARB(texture);}$/;"	f
_Lazy_glClientActiveVertexStreamATI	shared/GLee.c	/^void __stdcall _Lazy_glClientActiveVertexStreamATI(GLenum stream)                         {if (GLeeInit()) glClientActiveVertexStreamATI(stream);}$/;"	f
_Lazy_glClipPlanefOES	shared/GLee.c	/^GLvoid __stdcall _Lazy_glClipPlanefOES(GLenum plane, const GLfloat* equation)             {if (GLeeInit()) glClipPlanefOES(plane, equation);}$/;"	f
_Lazy_glColor3fVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glColor3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glColor3fVertex3fSUN(r, g, b, x, y, z);}$/;"	f
_Lazy_glColor3fVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glColor3fVertex3fvSUN(const GLfloat * c, const GLfloat * v)          {if (GLeeInit()) glColor3fVertex3fvSUN(c, v);}$/;"	f
_Lazy_glColor3hNV	shared/GLee.c	/^void __stdcall _Lazy_glColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue)             {if (GLeeInit()) glColor3hNV(red, green, blue);}$/;"	f
_Lazy_glColor3hvNV	shared/GLee.c	/^void __stdcall _Lazy_glColor3hvNV(const GLhalfNV * v)                                     {if (GLeeInit()) glColor3hvNV(v);}$/;"	f
_Lazy_glColor4fNormal3fVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glColor4fNormal3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glColor4fNormal3fVertex3fSUN(r, g, b, a, nx, ny, nz, x, y, z);}$/;"	f
_Lazy_glColor4fNormal3fVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glColor4fNormal3fVertex3fvSUN(const GLfloat * c, const GLfloat * n, const GLfloat * v)  {if (GLeeInit()) glColor4fNormal3fVertex3fvSUN(c, n, v);}$/;"	f
_Lazy_glColor4hNV	shared/GLee.c	/^void __stdcall _Lazy_glColor4hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha)  {if (GLeeInit()) glColor4hNV(red, green, blue, alpha);}$/;"	f
_Lazy_glColor4hvNV	shared/GLee.c	/^void __stdcall _Lazy_glColor4hvNV(const GLhalfNV * v)                                     {if (GLeeInit()) glColor4hvNV(v);}$/;"	f
_Lazy_glColor4ubVertex2fSUN	shared/GLee.c	/^void __stdcall _Lazy_glColor4ubVertex2fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y)  {if (GLeeInit()) glColor4ubVertex2fSUN(r, g, b, a, x, y);}$/;"	f
_Lazy_glColor4ubVertex2fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glColor4ubVertex2fvSUN(const GLubyte * c, const GLfloat * v)         {if (GLeeInit()) glColor4ubVertex2fvSUN(c, v);}$/;"	f
_Lazy_glColor4ubVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glColor4ubVertex3fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glColor4ubVertex3fSUN(r, g, b, a, x, y, z);}$/;"	f
_Lazy_glColor4ubVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glColor4ubVertex3fvSUN(const GLubyte * c, const GLfloat * v)         {if (GLeeInit()) glColor4ubVertex3fvSUN(c, v);}$/;"	f
_Lazy_glColorFragmentOp1ATI	shared/GLee.c	/^void __stdcall _Lazy_glColorFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod)  {if (GLeeInit()) glColorFragmentOp1ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod);}$/;"	f
_Lazy_glColorFragmentOp2ATI	shared/GLee.c	/^void __stdcall _Lazy_glColorFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod)  {if (GLeeInit()) glColorFragmentOp2ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod);}$/;"	f
_Lazy_glColorFragmentOp3ATI	shared/GLee.c	/^void __stdcall _Lazy_glColorFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod)  {if (GLeeInit()) glColorFragmentOp3ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod);}$/;"	f
_Lazy_glColorMaskIndexedEXT	shared/GLee.c	/^void __stdcall _Lazy_glColorMaskIndexedEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)  {if (GLeeInit()) glColorMaskIndexedEXT(index, r, g, b, a);}$/;"	f
_Lazy_glColorPointerEXT	shared/GLee.c	/^void __stdcall _Lazy_glColorPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer)  {if (GLeeInit()) glColorPointerEXT(size, type, stride, count, pointer);}$/;"	f
_Lazy_glColorPointerListIBM	shared/GLee.c	/^void __stdcall _Lazy_glColorPointerListIBM(GLint size, GLenum type, GLint stride, const GLvoid* * pointer, GLint ptrstride)  {if (GLeeInit()) glColorPointerListIBM(size, type, stride, pointer, ptrstride);}$/;"	f
_Lazy_glColorPointervINTEL	shared/GLee.c	/^void __stdcall _Lazy_glColorPointervINTEL(GLint size, GLenum type, const GLvoid* * pointer)  {if (GLeeInit()) glColorPointervINTEL(size, type, pointer);}$/;"	f
_Lazy_glColorSubTable	shared/GLee.c	/^void __stdcall _Lazy_glColorSubTable(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid * data)  {if (GLeeInit()) glColorSubTable(target, start, count, format, type, data);}$/;"	f
_Lazy_glColorSubTableEXT	shared/GLee.c	/^void __stdcall _Lazy_glColorSubTableEXT(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid * data)  {if (GLeeInit()) glColorSubTableEXT(target, start, count, format, type, data);}$/;"	f
_Lazy_glColorTable	shared/GLee.c	/^void __stdcall _Lazy_glColorTable(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * table)  {if (GLeeInit()) glColorTable(target, internalformat, width, format, type, table);}$/;"	f
_Lazy_glColorTableEXT	shared/GLee.c	/^void __stdcall _Lazy_glColorTableEXT(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid * table)  {if (GLeeInit()) glColorTableEXT(target, internalFormat, width, format, type, table);}$/;"	f
_Lazy_glColorTableParameterfv	shared/GLee.c	/^void __stdcall _Lazy_glColorTableParameterfv(GLenum target, GLenum pname, const GLfloat * params)  {if (GLeeInit()) glColorTableParameterfv(target, pname, params);}$/;"	f
_Lazy_glColorTableParameterfvSGI	shared/GLee.c	/^void __stdcall _Lazy_glColorTableParameterfvSGI(GLenum target, GLenum pname, const GLfloat * params)  {if (GLeeInit()) glColorTableParameterfvSGI(target, pname, params);}$/;"	f
_Lazy_glColorTableParameteriv	shared/GLee.c	/^void __stdcall _Lazy_glColorTableParameteriv(GLenum target, GLenum pname, const GLint * params)  {if (GLeeInit()) glColorTableParameteriv(target, pname, params);}$/;"	f
_Lazy_glColorTableParameterivSGI	shared/GLee.c	/^void __stdcall _Lazy_glColorTableParameterivSGI(GLenum target, GLenum pname, const GLint * params)  {if (GLeeInit()) glColorTableParameterivSGI(target, pname, params);}$/;"	f
_Lazy_glColorTableSGI	shared/GLee.c	/^void __stdcall _Lazy_glColorTableSGI(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * table)  {if (GLeeInit()) glColorTableSGI(target, internalformat, width, format, type, table);}$/;"	f
_Lazy_glCombinerInputNV	shared/GLee.c	/^void __stdcall _Lazy_glCombinerInputNV(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage)  {if (GLeeInit()) glCombinerInputNV(stage, portion, variable, input, mapping, componentUsage);}$/;"	f
_Lazy_glCombinerOutputNV	shared/GLee.c	/^void __stdcall _Lazy_glCombinerOutputNV(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum)  {if (GLeeInit()) glCombinerOutputNV(stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum);}$/;"	f
_Lazy_glCombinerParameterfNV	shared/GLee.c	/^void __stdcall _Lazy_glCombinerParameterfNV(GLenum pname, GLfloat param)                  {if (GLeeInit()) glCombinerParameterfNV(pname, param);}$/;"	f
_Lazy_glCombinerParameterfvNV	shared/GLee.c	/^void __stdcall _Lazy_glCombinerParameterfvNV(GLenum pname, const GLfloat * params)        {if (GLeeInit()) glCombinerParameterfvNV(pname, params);}$/;"	f
_Lazy_glCombinerParameteriNV	shared/GLee.c	/^void __stdcall _Lazy_glCombinerParameteriNV(GLenum pname, GLint param)                    {if (GLeeInit()) glCombinerParameteriNV(pname, param);}$/;"	f
_Lazy_glCombinerParameterivNV	shared/GLee.c	/^void __stdcall _Lazy_glCombinerParameterivNV(GLenum pname, const GLint * params)          {if (GLeeInit()) glCombinerParameterivNV(pname, params);}$/;"	f
_Lazy_glCombinerStageParameterfvNV	shared/GLee.c	/^void __stdcall _Lazy_glCombinerStageParameterfvNV(GLenum stage, GLenum pname, const GLfloat * params)  {if (GLeeInit()) glCombinerStageParameterfvNV(stage, pname, params);}$/;"	f
_Lazy_glCompileShader	shared/GLee.c	/^void __stdcall _Lazy_glCompileShader(GLuint shader)                                       {if (GLeeInit()) glCompileShader(shader);}$/;"	f
_Lazy_glCompileShaderARB	shared/GLee.c	/^void __stdcall _Lazy_glCompileShaderARB(GLhandleARB shaderObj)                            {if (GLeeInit()) glCompileShaderARB(shaderObj);}$/;"	f
_Lazy_glCompressedTexImage1D	shared/GLee.c	/^void __stdcall _Lazy_glCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid * data)  {if (GLeeInit()) glCompressedTexImage1D(target, level, internalformat, width, border, imageSize, data);}$/;"	f
_Lazy_glCompressedTexImage1DARB	shared/GLee.c	/^void __stdcall _Lazy_glCompressedTexImage1DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid * data)  {if (GLeeInit()) glCompressedTexImage1DARB(target, level, internalformat, width, border, imageSize, data);}$/;"	f
_Lazy_glCompressedTexImage2D	shared/GLee.c	/^void __stdcall _Lazy_glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid * data)  {if (GLeeInit()) glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data);}$/;"	f
_Lazy_glCompressedTexImage2DARB	shared/GLee.c	/^void __stdcall _Lazy_glCompressedTexImage2DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid * data)  {if (GLeeInit()) glCompressedTexImage2DARB(target, level, internalformat, width, height, border, imageSize, data);}$/;"	f
_Lazy_glCompressedTexImage3D	shared/GLee.c	/^void __stdcall _Lazy_glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid * data)  {if (GLeeInit()) glCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data);}$/;"	f
_Lazy_glCompressedTexImage3DARB	shared/GLee.c	/^void __stdcall _Lazy_glCompressedTexImage3DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid * data)  {if (GLeeInit()) glCompressedTexImage3DARB(target, level, internalformat, width, height, depth, border, imageSize, data);}$/;"	f
_Lazy_glCompressedTexSubImage1D	shared/GLee.c	/^void __stdcall _Lazy_glCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid * data)  {if (GLeeInit()) glCompressedTexSubImage1D(target, level, xoffset, width, format, imageSize, data);}$/;"	f
_Lazy_glCompressedTexSubImage1DARB	shared/GLee.c	/^void __stdcall _Lazy_glCompressedTexSubImage1DARB(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid * data)  {if (GLeeInit()) glCompressedTexSubImage1DARB(target, level, xoffset, width, format, imageSize, data);}$/;"	f
_Lazy_glCompressedTexSubImage2D	shared/GLee.c	/^void __stdcall _Lazy_glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid * data)  {if (GLeeInit()) glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);}$/;"	f
_Lazy_glCompressedTexSubImage2DARB	shared/GLee.c	/^void __stdcall _Lazy_glCompressedTexSubImage2DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid * data)  {if (GLeeInit()) glCompressedTexSubImage2DARB(target, level, xoffset, yoffset, width, height, format, imageSize, data);}$/;"	f
_Lazy_glCompressedTexSubImage3D	shared/GLee.c	/^void __stdcall _Lazy_glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid * data)  {if (GLeeInit()) glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);}$/;"	f
_Lazy_glCompressedTexSubImage3DARB	shared/GLee.c	/^void __stdcall _Lazy_glCompressedTexSubImage3DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid * data)  {if (GLeeInit()) glCompressedTexSubImage3DARB(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);}$/;"	f
_Lazy_glConvolutionFilter1D	shared/GLee.c	/^void __stdcall _Lazy_glConvolutionFilter1D(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * image)  {if (GLeeInit()) glConvolutionFilter1D(target, internalformat, width, format, type, image);}$/;"	f
_Lazy_glConvolutionFilter1DEXT	shared/GLee.c	/^void __stdcall _Lazy_glConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid * image)  {if (GLeeInit()) glConvolutionFilter1DEXT(target, internalformat, width, format, type, image);}$/;"	f
_Lazy_glConvolutionFilter2D	shared/GLee.c	/^void __stdcall _Lazy_glConvolutionFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * image)  {if (GLeeInit()) glConvolutionFilter2D(target, internalformat, width, height, format, type, image);}$/;"	f
_Lazy_glConvolutionFilter2DEXT	shared/GLee.c	/^void __stdcall _Lazy_glConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * image)  {if (GLeeInit()) glConvolutionFilter2DEXT(target, internalformat, width, height, format, type, image);}$/;"	f
_Lazy_glConvolutionParameterf	shared/GLee.c	/^void __stdcall _Lazy_glConvolutionParameterf(GLenum target, GLenum pname, GLfloat params)  {if (GLeeInit()) glConvolutionParameterf(target, pname, params);}$/;"	f
_Lazy_glConvolutionParameterfEXT	shared/GLee.c	/^void __stdcall _Lazy_glConvolutionParameterfEXT(GLenum target, GLenum pname, GLfloat params)  {if (GLeeInit()) glConvolutionParameterfEXT(target, pname, params);}$/;"	f
_Lazy_glConvolutionParameterfv	shared/GLee.c	/^void __stdcall _Lazy_glConvolutionParameterfv(GLenum target, GLenum pname, const GLfloat * params)  {if (GLeeInit()) glConvolutionParameterfv(target, pname, params);}$/;"	f
_Lazy_glConvolutionParameterfvEXT	shared/GLee.c	/^void __stdcall _Lazy_glConvolutionParameterfvEXT(GLenum target, GLenum pname, const GLfloat * params)  {if (GLeeInit()) glConvolutionParameterfvEXT(target, pname, params);}$/;"	f
_Lazy_glConvolutionParameteri	shared/GLee.c	/^void __stdcall _Lazy_glConvolutionParameteri(GLenum target, GLenum pname, GLint params)   {if (GLeeInit()) glConvolutionParameteri(target, pname, params);}$/;"	f
_Lazy_glConvolutionParameteriEXT	shared/GLee.c	/^void __stdcall _Lazy_glConvolutionParameteriEXT(GLenum target, GLenum pname, GLint params)  {if (GLeeInit()) glConvolutionParameteriEXT(target, pname, params);}$/;"	f
_Lazy_glConvolutionParameteriv	shared/GLee.c	/^void __stdcall _Lazy_glConvolutionParameteriv(GLenum target, GLenum pname, const GLint * params)  {if (GLeeInit()) glConvolutionParameteriv(target, pname, params);}$/;"	f
_Lazy_glConvolutionParameterivEXT	shared/GLee.c	/^void __stdcall _Lazy_glConvolutionParameterivEXT(GLenum target, GLenum pname, const GLint * params)  {if (GLeeInit()) glConvolutionParameterivEXT(target, pname, params);}$/;"	f
_Lazy_glCopyColorSubTable	shared/GLee.c	/^void __stdcall _Lazy_glCopyColorSubTable(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)  {if (GLeeInit()) glCopyColorSubTable(target, start, x, y, width);}$/;"	f
_Lazy_glCopyColorSubTableEXT	shared/GLee.c	/^void __stdcall _Lazy_glCopyColorSubTableEXT(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)  {if (GLeeInit()) glCopyColorSubTableEXT(target, start, x, y, width);}$/;"	f
_Lazy_glCopyColorTable	shared/GLee.c	/^void __stdcall _Lazy_glCopyColorTable(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)  {if (GLeeInit()) glCopyColorTable(target, internalformat, x, y, width);}$/;"	f
_Lazy_glCopyColorTableSGI	shared/GLee.c	/^void __stdcall _Lazy_glCopyColorTableSGI(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)  {if (GLeeInit()) glCopyColorTableSGI(target, internalformat, x, y, width);}$/;"	f
_Lazy_glCopyConvolutionFilter1D	shared/GLee.c	/^void __stdcall _Lazy_glCopyConvolutionFilter1D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)  {if (GLeeInit()) glCopyConvolutionFilter1D(target, internalformat, x, y, width);}$/;"	f
_Lazy_glCopyConvolutionFilter1DEXT	shared/GLee.c	/^void __stdcall _Lazy_glCopyConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)  {if (GLeeInit()) glCopyConvolutionFilter1DEXT(target, internalformat, x, y, width);}$/;"	f
_Lazy_glCopyConvolutionFilter2D	shared/GLee.c	/^void __stdcall _Lazy_glCopyConvolutionFilter2D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height)  {if (GLeeInit()) glCopyConvolutionFilter2D(target, internalformat, x, y, width, height);}$/;"	f
_Lazy_glCopyConvolutionFilter2DEXT	shared/GLee.c	/^void __stdcall _Lazy_glCopyConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height)  {if (GLeeInit()) glCopyConvolutionFilter2DEXT(target, internalformat, x, y, width, height);}$/;"	f
_Lazy_glCopyTexImage1DEXT	shared/GLee.c	/^void __stdcall _Lazy_glCopyTexImage1DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)  {if (GLeeInit()) glCopyTexImage1DEXT(target, level, internalformat, x, y, width, border);}$/;"	f
_Lazy_glCopyTexImage2DEXT	shared/GLee.c	/^void __stdcall _Lazy_glCopyTexImage2DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)  {if (GLeeInit()) glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);}$/;"	f
_Lazy_glCopyTexSubImage1DEXT	shared/GLee.c	/^void __stdcall _Lazy_glCopyTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)  {if (GLeeInit()) glCopyTexSubImage1DEXT(target, level, xoffset, x, y, width);}$/;"	f
_Lazy_glCopyTexSubImage2DEXT	shared/GLee.c	/^void __stdcall _Lazy_glCopyTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)  {if (GLeeInit()) glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);}$/;"	f
_Lazy_glCopyTexSubImage3D	shared/GLee.c	/^void __stdcall _Lazy_glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)  {if (GLeeInit()) glCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height);}$/;"	f
_Lazy_glCopyTexSubImage3DEXT	shared/GLee.c	/^void __stdcall _Lazy_glCopyTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)  {if (GLeeInit()) glCopyTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, x, y, width, height);}$/;"	f
_Lazy_glCreateProgram	shared/GLee.c	/^GLuint __stdcall _Lazy_glCreateProgram(void)                                              {if (GLeeInit()) return glCreateProgram(); return (GLuint)0;}$/;"	f
_Lazy_glCreateProgramObjectARB	shared/GLee.c	/^GLhandleARB __stdcall _Lazy_glCreateProgramObjectARB(void)                                {if (GLeeInit()) return glCreateProgramObjectARB(); return (GLhandleARB)0;}$/;"	f
_Lazy_glCreateShader	shared/GLee.c	/^GLuint __stdcall _Lazy_glCreateShader(GLenum type)                                        {if (GLeeInit()) return glCreateShader(type); return (GLuint)0;}$/;"	f
_Lazy_glCreateShaderObjectARB	shared/GLee.c	/^GLhandleARB __stdcall _Lazy_glCreateShaderObjectARB(GLenum shaderType)                    {if (GLeeInit()) return glCreateShaderObjectARB(shaderType); return (GLhandleARB)0;}$/;"	f
_Lazy_glCullParameterdvEXT	shared/GLee.c	/^void __stdcall _Lazy_glCullParameterdvEXT(GLenum pname, GLdouble * params)                {if (GLeeInit()) glCullParameterdvEXT(pname, params);}$/;"	f
_Lazy_glCullParameterfvEXT	shared/GLee.c	/^void __stdcall _Lazy_glCullParameterfvEXT(GLenum pname, GLfloat * params)                 {if (GLeeInit()) glCullParameterfvEXT(pname, params);}$/;"	f
_Lazy_glCurrentPaletteMatrixARB	shared/GLee.c	/^void __stdcall _Lazy_glCurrentPaletteMatrixARB(GLint index)                               {if (GLeeInit()) glCurrentPaletteMatrixARB(index);}$/;"	f
_Lazy_glDeformSGIX	shared/GLee.c	/^void __stdcall _Lazy_glDeformSGIX(GLbitfield mask)                                        {if (GLeeInit()) glDeformSGIX(mask);}$/;"	f
_Lazy_glDeformationMap3dSGIX	shared/GLee.c	/^void __stdcall _Lazy_glDeformationMap3dSGIX(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble * points)  {if (GLeeInit()) glDeformationMap3dSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points);}$/;"	f
_Lazy_glDeformationMap3fSGIX	shared/GLee.c	/^void __stdcall _Lazy_glDeformationMap3fSGIX(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat * points)  {if (GLeeInit()) glDeformationMap3fSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points);}$/;"	f
_Lazy_glDeleteAsyncMarkersSGIX	shared/GLee.c	/^void __stdcall _Lazy_glDeleteAsyncMarkersSGIX(GLuint marker, GLsizei range)               {if (GLeeInit()) glDeleteAsyncMarkersSGIX(marker, range);}$/;"	f
_Lazy_glDeleteBuffers	shared/GLee.c	/^void __stdcall _Lazy_glDeleteBuffers(GLsizei n, const GLuint * buffers)                   {if (GLeeInit()) glDeleteBuffers(n, buffers);}$/;"	f
_Lazy_glDeleteBuffersARB	shared/GLee.c	/^void __stdcall _Lazy_glDeleteBuffersARB(GLsizei n, const GLuint * buffers)                {if (GLeeInit()) glDeleteBuffersARB(n, buffers);}$/;"	f
_Lazy_glDeleteFencesAPPLE	shared/GLee.c	/^void __stdcall _Lazy_glDeleteFencesAPPLE(GLsizei n, const GLuint * fences)                {if (GLeeInit()) glDeleteFencesAPPLE(n, fences);}$/;"	f
_Lazy_glDeleteFencesNV	shared/GLee.c	/^void __stdcall _Lazy_glDeleteFencesNV(GLsizei n, const GLuint * fences)                   {if (GLeeInit()) glDeleteFencesNV(n, fences);}$/;"	f
_Lazy_glDeleteFragmentShaderATI	shared/GLee.c	/^void __stdcall _Lazy_glDeleteFragmentShaderATI(GLuint id)                                 {if (GLeeInit()) glDeleteFragmentShaderATI(id);}$/;"	f
_Lazy_glDeleteFramebuffersEXT	shared/GLee.c	/^void __stdcall _Lazy_glDeleteFramebuffersEXT(GLsizei n, const GLuint * framebuffers)      {if (GLeeInit()) glDeleteFramebuffersEXT(n, framebuffers);}$/;"	f
_Lazy_glDeleteObjectARB	shared/GLee.c	/^void __stdcall _Lazy_glDeleteObjectARB(GLhandleARB obj)                                   {if (GLeeInit()) glDeleteObjectARB(obj);}$/;"	f
_Lazy_glDeleteOcclusionQueriesNV	shared/GLee.c	/^void __stdcall _Lazy_glDeleteOcclusionQueriesNV(GLsizei n, const GLuint * ids)            {if (GLeeInit()) glDeleteOcclusionQueriesNV(n, ids);}$/;"	f
_Lazy_glDeleteProgram	shared/GLee.c	/^void __stdcall _Lazy_glDeleteProgram(GLuint program)                                      {if (GLeeInit()) glDeleteProgram(program);}$/;"	f
_Lazy_glDeleteProgramsARB	shared/GLee.c	/^void __stdcall _Lazy_glDeleteProgramsARB(GLsizei n, const GLuint * programs)              {if (GLeeInit()) glDeleteProgramsARB(n, programs);}$/;"	f
_Lazy_glDeleteProgramsNV	shared/GLee.c	/^void __stdcall _Lazy_glDeleteProgramsNV(GLsizei n, const GLuint * programs)               {if (GLeeInit()) glDeleteProgramsNV(n, programs);}$/;"	f
_Lazy_glDeleteQueries	shared/GLee.c	/^void __stdcall _Lazy_glDeleteQueries(GLsizei n, const GLuint * ids)                       {if (GLeeInit()) glDeleteQueries(n, ids);}$/;"	f
_Lazy_glDeleteQueriesARB	shared/GLee.c	/^void __stdcall _Lazy_glDeleteQueriesARB(GLsizei n, const GLuint * ids)                    {if (GLeeInit()) glDeleteQueriesARB(n, ids);}$/;"	f
_Lazy_glDeleteRenderbuffersEXT	shared/GLee.c	/^void __stdcall _Lazy_glDeleteRenderbuffersEXT(GLsizei n, const GLuint * renderbuffers)    {if (GLeeInit()) glDeleteRenderbuffersEXT(n, renderbuffers);}$/;"	f
_Lazy_glDeleteShader	shared/GLee.c	/^void __stdcall _Lazy_glDeleteShader(GLuint shader)                                        {if (GLeeInit()) glDeleteShader(shader);}$/;"	f
_Lazy_glDeleteTexturesEXT	shared/GLee.c	/^void __stdcall _Lazy_glDeleteTexturesEXT(GLsizei n, const GLuint * textures)              {if (GLeeInit()) glDeleteTexturesEXT(n, textures);}$/;"	f
_Lazy_glDeleteVertexArraysAPPLE	shared/GLee.c	/^void __stdcall _Lazy_glDeleteVertexArraysAPPLE(GLsizei n, const GLuint * arrays)          {if (GLeeInit()) glDeleteVertexArraysAPPLE(n, arrays);}$/;"	f
_Lazy_glDeleteVertexShaderEXT	shared/GLee.c	/^void __stdcall _Lazy_glDeleteVertexShaderEXT(GLuint id)                                   {if (GLeeInit()) glDeleteVertexShaderEXT(id);}$/;"	f
_Lazy_glDepthBoundsEXT	shared/GLee.c	/^void __stdcall _Lazy_glDepthBoundsEXT(GLclampd zmin, GLclampd zmax)                       {if (GLeeInit()) glDepthBoundsEXT(zmin, zmax);}$/;"	f
_Lazy_glDepthBoundsdNV	shared/GLee.c	/^void __stdcall _Lazy_glDepthBoundsdNV(GLdouble zmin, GLdouble zmax)                       {if (GLeeInit()) glDepthBoundsdNV(zmin, zmax);}$/;"	f
_Lazy_glDepthRangedNV	shared/GLee.c	/^void __stdcall _Lazy_glDepthRangedNV(GLdouble zNear, GLdouble zFar)                       {if (GLeeInit()) glDepthRangedNV(zNear, zFar);}$/;"	f
_Lazy_glDepthRangefOES	shared/GLee.c	/^GLvoid __stdcall _Lazy_glDepthRangefOES(GLclampf n, GLclampf f)                           {if (GLeeInit()) glDepthRangefOES(n, f);}$/;"	f
_Lazy_glDetachObjectARB	shared/GLee.c	/^void __stdcall _Lazy_glDetachObjectARB(GLhandleARB containerObj, GLhandleARB attachedObj)  {if (GLeeInit()) glDetachObjectARB(containerObj, attachedObj);}$/;"	f
_Lazy_glDetachShader	shared/GLee.c	/^void __stdcall _Lazy_glDetachShader(GLuint program, GLuint shader)                        {if (GLeeInit()) glDetachShader(program, shader);}$/;"	f
_Lazy_glDetailTexFuncSGIS	shared/GLee.c	/^void __stdcall _Lazy_glDetailTexFuncSGIS(GLenum target, GLsizei n, const GLfloat * points)  {if (GLeeInit()) glDetailTexFuncSGIS(target, n, points);}$/;"	f
_Lazy_glDisableIndexedEXT	shared/GLee.c	/^void __stdcall _Lazy_glDisableIndexedEXT(GLenum target, GLuint index)                     {if (GLeeInit()) glDisableIndexedEXT(target, index);}$/;"	f
_Lazy_glDisableVariantClientStateEXT	shared/GLee.c	/^void __stdcall _Lazy_glDisableVariantClientStateEXT(GLuint id)                            {if (GLeeInit()) glDisableVariantClientStateEXT(id);}$/;"	f
_Lazy_glDisableVertexAttribArray	shared/GLee.c	/^void __stdcall _Lazy_glDisableVertexAttribArray(GLuint index)                             {if (GLeeInit()) glDisableVertexAttribArray(index);}$/;"	f
_Lazy_glDisableVertexAttribArrayARB	shared/GLee.c	/^void __stdcall _Lazy_glDisableVertexAttribArrayARB(GLuint index)                          {if (GLeeInit()) glDisableVertexAttribArrayARB(index);}$/;"	f
_Lazy_glDrawArraysEXT	shared/GLee.c	/^void __stdcall _Lazy_glDrawArraysEXT(GLenum mode, GLint first, GLsizei count)             {if (GLeeInit()) glDrawArraysEXT(mode, first, count);}$/;"	f
_Lazy_glDrawArraysInstancedEXT	shared/GLee.c	/^void __stdcall _Lazy_glDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount)  {if (GLeeInit()) glDrawArraysInstancedEXT(mode, start, count, primcount);}$/;"	f
_Lazy_glDrawBuffers	shared/GLee.c	/^void __stdcall _Lazy_glDrawBuffers(GLsizei n, const GLenum * bufs)                        {if (GLeeInit()) glDrawBuffers(n, bufs);}$/;"	f
_Lazy_glDrawBuffersARB	shared/GLee.c	/^void __stdcall _Lazy_glDrawBuffersARB(GLsizei n, const GLenum * bufs)                     {if (GLeeInit()) glDrawBuffersARB(n, bufs);}$/;"	f
_Lazy_glDrawBuffersATI	shared/GLee.c	/^void __stdcall _Lazy_glDrawBuffersATI(GLsizei n, const GLenum * bufs)                     {if (GLeeInit()) glDrawBuffersATI(n, bufs);}$/;"	f
_Lazy_glDrawElementArrayAPPLE	shared/GLee.c	/^void __stdcall _Lazy_glDrawElementArrayAPPLE(GLenum mode, GLint first, GLsizei count)     {if (GLeeInit()) glDrawElementArrayAPPLE(mode, first, count);}$/;"	f
_Lazy_glDrawElementArrayATI	shared/GLee.c	/^void __stdcall _Lazy_glDrawElementArrayATI(GLenum mode, GLsizei count)                    {if (GLeeInit()) glDrawElementArrayATI(mode, count);}$/;"	f
_Lazy_glDrawElementsInstancedEXT	shared/GLee.c	/^void __stdcall _Lazy_glDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const GLvoid * indices, GLsizei primcount)  {if (GLeeInit()) glDrawElementsInstancedEXT(mode, count, type, indices, primcount);}$/;"	f
_Lazy_glDrawMeshArraysSUN	shared/GLee.c	/^void __stdcall _Lazy_glDrawMeshArraysSUN(GLenum mode, GLint first, GLsizei count, GLsizei width)  {if (GLeeInit()) glDrawMeshArraysSUN(mode, first, count, width);}$/;"	f
_Lazy_glDrawRangeElementArrayAPPLE	shared/GLee.c	/^void __stdcall _Lazy_glDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count)  {if (GLeeInit()) glDrawRangeElementArrayAPPLE(mode, start, end, first, count);}$/;"	f
_Lazy_glDrawRangeElementArrayATI	shared/GLee.c	/^void __stdcall _Lazy_glDrawRangeElementArrayATI(GLenum mode, GLuint start, GLuint end, GLsizei count)  {if (GLeeInit()) glDrawRangeElementArrayATI(mode, start, end, count);}$/;"	f
_Lazy_glDrawRangeElements	shared/GLee.c	/^void __stdcall _Lazy_glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid * indices)  {if (GLeeInit()) glDrawRangeElements(mode, start, end, count, type, indices);}$/;"	f
_Lazy_glDrawRangeElementsEXT	shared/GLee.c	/^void __stdcall _Lazy_glDrawRangeElementsEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid * indices)  {if (GLeeInit()) glDrawRangeElementsEXT(mode, start, end, count, type, indices);}$/;"	f
_Lazy_glEdgeFlagPointerEXT	shared/GLee.c	/^void __stdcall _Lazy_glEdgeFlagPointerEXT(GLsizei stride, GLsizei count, const GLboolean * pointer)  {if (GLeeInit()) glEdgeFlagPointerEXT(stride, count, pointer);}$/;"	f
_Lazy_glEdgeFlagPointerListIBM	shared/GLee.c	/^void __stdcall _Lazy_glEdgeFlagPointerListIBM(GLint stride, const GLboolean* * pointer, GLint ptrstride)  {if (GLeeInit()) glEdgeFlagPointerListIBM(stride, pointer, ptrstride);}$/;"	f
_Lazy_glElementPointerAPPLE	shared/GLee.c	/^void __stdcall _Lazy_glElementPointerAPPLE(GLenum type, const GLvoid * pointer)           {if (GLeeInit()) glElementPointerAPPLE(type, pointer);}$/;"	f
_Lazy_glElementPointerATI	shared/GLee.c	/^void __stdcall _Lazy_glElementPointerATI(GLenum type, const GLvoid * pointer)             {if (GLeeInit()) glElementPointerATI(type, pointer);}$/;"	f
_Lazy_glEnableIndexedEXT	shared/GLee.c	/^void __stdcall _Lazy_glEnableIndexedEXT(GLenum target, GLuint index)                      {if (GLeeInit()) glEnableIndexedEXT(target, index);}$/;"	f
_Lazy_glEnableVariantClientStateEXT	shared/GLee.c	/^void __stdcall _Lazy_glEnableVariantClientStateEXT(GLuint id)                             {if (GLeeInit()) glEnableVariantClientStateEXT(id);}$/;"	f
_Lazy_glEnableVertexAttribArray	shared/GLee.c	/^void __stdcall _Lazy_glEnableVertexAttribArray(GLuint index)                              {if (GLeeInit()) glEnableVertexAttribArray(index);}$/;"	f
_Lazy_glEnableVertexAttribArrayARB	shared/GLee.c	/^void __stdcall _Lazy_glEnableVertexAttribArrayARB(GLuint index)                           {if (GLeeInit()) glEnableVertexAttribArrayARB(index);}$/;"	f
_Lazy_glEndFragmentShaderATI	shared/GLee.c	/^void __stdcall _Lazy_glEndFragmentShaderATI(void)                                         {if (GLeeInit()) glEndFragmentShaderATI();}$/;"	f
_Lazy_glEndOcclusionQueryNV	shared/GLee.c	/^void __stdcall _Lazy_glEndOcclusionQueryNV(void)                                          {if (GLeeInit()) glEndOcclusionQueryNV();}$/;"	f
_Lazy_glEndQuery	shared/GLee.c	/^void __stdcall _Lazy_glEndQuery(GLenum target)                                            {if (GLeeInit()) glEndQuery(target);}$/;"	f
_Lazy_glEndQueryARB	shared/GLee.c	/^void __stdcall _Lazy_glEndQueryARB(GLenum target)                                         {if (GLeeInit()) glEndQueryARB(target);}$/;"	f
_Lazy_glEndSceneEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glEndSceneEXT(void)                                                {if (GLeeInit()) glEndSceneEXT();}$/;"	f
_Lazy_glEndTransformFeedbackNV	shared/GLee.c	/^void __stdcall _Lazy_glEndTransformFeedbackNV(void)                                       {if (GLeeInit()) glEndTransformFeedbackNV();}$/;"	f
_Lazy_glEndVertexShaderEXT	shared/GLee.c	/^void __stdcall _Lazy_glEndVertexShaderEXT(void)                                           {if (GLeeInit()) glEndVertexShaderEXT();}$/;"	f
_Lazy_glEvalMapsNV	shared/GLee.c	/^void __stdcall _Lazy_glEvalMapsNV(GLenum target, GLenum mode)                             {if (GLeeInit()) glEvalMapsNV(target, mode);}$/;"	f
_Lazy_glExecuteProgramNV	shared/GLee.c	/^void __stdcall _Lazy_glExecuteProgramNV(GLenum target, GLuint id, const GLfloat * params)  {if (GLeeInit()) glExecuteProgramNV(target, id, params);}$/;"	f
_Lazy_glExtractComponentEXT	shared/GLee.c	/^void __stdcall _Lazy_glExtractComponentEXT(GLuint res, GLuint src, GLuint num)            {if (GLeeInit()) glExtractComponentEXT(res, src, num);}$/;"	f
_Lazy_glFinalCombinerInputNV	shared/GLee.c	/^void __stdcall _Lazy_glFinalCombinerInputNV(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage)  {if (GLeeInit()) glFinalCombinerInputNV(variable, input, mapping, componentUsage);}$/;"	f
_Lazy_glFinishAsyncSGIX	shared/GLee.c	/^GLint __stdcall _Lazy_glFinishAsyncSGIX(GLuint * markerp)                                 {if (GLeeInit()) return glFinishAsyncSGIX(markerp); return (GLint)0;}$/;"	f
_Lazy_glFinishFenceAPPLE	shared/GLee.c	/^void __stdcall _Lazy_glFinishFenceAPPLE(GLuint fence)                                     {if (GLeeInit()) glFinishFenceAPPLE(fence);}$/;"	f
_Lazy_glFinishFenceNV	shared/GLee.c	/^void __stdcall _Lazy_glFinishFenceNV(GLuint fence)                                        {if (GLeeInit()) glFinishFenceNV(fence);}$/;"	f
_Lazy_glFinishObjectAPPLE	shared/GLee.c	/^void __stdcall _Lazy_glFinishObjectAPPLE(GLenum object, GLint name)                       {if (GLeeInit()) glFinishObjectAPPLE(object, name);}$/;"	f
_Lazy_glFinishTextureSUNX	shared/GLee.c	/^void __stdcall _Lazy_glFinishTextureSUNX(void)                                            {if (GLeeInit()) glFinishTextureSUNX();}$/;"	f
_Lazy_glFlushPixelDataRangeNV	shared/GLee.c	/^void __stdcall _Lazy_glFlushPixelDataRangeNV(GLenum target)                               {if (GLeeInit()) glFlushPixelDataRangeNV(target);}$/;"	f
_Lazy_glFlushRasterSGIX	shared/GLee.c	/^void __stdcall _Lazy_glFlushRasterSGIX(void)                                              {if (GLeeInit()) glFlushRasterSGIX();}$/;"	f
_Lazy_glFlushVertexArrayRangeAPPLE	shared/GLee.c	/^void __stdcall _Lazy_glFlushVertexArrayRangeAPPLE(GLsizei length, GLvoid * pointer)       {if (GLeeInit()) glFlushVertexArrayRangeAPPLE(length, pointer);}$/;"	f
_Lazy_glFlushVertexArrayRangeNV	shared/GLee.c	/^void __stdcall _Lazy_glFlushVertexArrayRangeNV(void)                                      {if (GLeeInit()) glFlushVertexArrayRangeNV();}$/;"	f
_Lazy_glFogCoordPointer	shared/GLee.c	/^void __stdcall _Lazy_glFogCoordPointer(GLenum type, GLsizei stride, const GLvoid * pointer)  {if (GLeeInit()) glFogCoordPointer(type, stride, pointer);}$/;"	f
_Lazy_glFogCoordPointerEXT	shared/GLee.c	/^void __stdcall _Lazy_glFogCoordPointerEXT(GLenum type, GLsizei stride, const GLvoid * pointer)  {if (GLeeInit()) glFogCoordPointerEXT(type, stride, pointer);}$/;"	f
_Lazy_glFogCoordPointerListIBM	shared/GLee.c	/^void __stdcall _Lazy_glFogCoordPointerListIBM(GLenum type, GLint stride, const GLvoid* * pointer, GLint ptrstride)  {if (GLeeInit()) glFogCoordPointerListIBM(type, stride, pointer, ptrstride);}$/;"	f
_Lazy_glFogCoordd	shared/GLee.c	/^void __stdcall _Lazy_glFogCoordd(GLdouble coord)                                          {if (GLeeInit()) glFogCoordd(coord);}$/;"	f
_Lazy_glFogCoorddEXT	shared/GLee.c	/^void __stdcall _Lazy_glFogCoorddEXT(GLdouble coord)                                       {if (GLeeInit()) glFogCoorddEXT(coord);}$/;"	f
_Lazy_glFogCoorddv	shared/GLee.c	/^void __stdcall _Lazy_glFogCoorddv(const GLdouble * coord)                                 {if (GLeeInit()) glFogCoorddv(coord);}$/;"	f
_Lazy_glFogCoorddvEXT	shared/GLee.c	/^void __stdcall _Lazy_glFogCoorddvEXT(const GLdouble * coord)                              {if (GLeeInit()) glFogCoorddvEXT(coord);}$/;"	f
_Lazy_glFogCoordf	shared/GLee.c	/^void __stdcall _Lazy_glFogCoordf(GLfloat coord)                                           {if (GLeeInit()) glFogCoordf(coord);}$/;"	f
_Lazy_glFogCoordfEXT	shared/GLee.c	/^void __stdcall _Lazy_glFogCoordfEXT(GLfloat coord)                                        {if (GLeeInit()) glFogCoordfEXT(coord);}$/;"	f
_Lazy_glFogCoordfv	shared/GLee.c	/^void __stdcall _Lazy_glFogCoordfv(const GLfloat * coord)                                  {if (GLeeInit()) glFogCoordfv(coord);}$/;"	f
_Lazy_glFogCoordfvEXT	shared/GLee.c	/^void __stdcall _Lazy_glFogCoordfvEXT(const GLfloat * coord)                               {if (GLeeInit()) glFogCoordfvEXT(coord);}$/;"	f
_Lazy_glFogCoordhNV	shared/GLee.c	/^void __stdcall _Lazy_glFogCoordhNV(GLhalfNV fog)                                          {if (GLeeInit()) glFogCoordhNV(fog);}$/;"	f
_Lazy_glFogCoordhvNV	shared/GLee.c	/^void __stdcall _Lazy_glFogCoordhvNV(const GLhalfNV * fog)                                 {if (GLeeInit()) glFogCoordhvNV(fog);}$/;"	f
_Lazy_glFogFuncSGIS	shared/GLee.c	/^void __stdcall _Lazy_glFogFuncSGIS(GLsizei n, const GLfloat * points)                     {if (GLeeInit()) glFogFuncSGIS(n, points);}$/;"	f
_Lazy_glFragmentColorMaterialEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glFragmentColorMaterialEXT(GLenum face, GLenum mode)               {if (GLeeInit()) glFragmentColorMaterialEXT(face, mode);}$/;"	f
_Lazy_glFragmentColorMaterialSGIX	shared/GLee.c	/^void __stdcall _Lazy_glFragmentColorMaterialSGIX(GLenum face, GLenum mode)                {if (GLeeInit()) glFragmentColorMaterialSGIX(face, mode);}$/;"	f
_Lazy_glFragmentLightModelfEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glFragmentLightModelfEXT(GLenum pname, GLfloat param)              {if (GLeeInit()) glFragmentLightModelfEXT(pname, param);}$/;"	f
_Lazy_glFragmentLightModelfSGIX	shared/GLee.c	/^void __stdcall _Lazy_glFragmentLightModelfSGIX(GLenum pname, GLfloat param)               {if (GLeeInit()) glFragmentLightModelfSGIX(pname, param);}$/;"	f
_Lazy_glFragmentLightModelfvEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glFragmentLightModelfvEXT(GLenum pname, GLfloat * params)          {if (GLeeInit()) glFragmentLightModelfvEXT(pname, params);}$/;"	f
_Lazy_glFragmentLightModelfvSGIX	shared/GLee.c	/^void __stdcall _Lazy_glFragmentLightModelfvSGIX(GLenum pname, const GLfloat * params)     {if (GLeeInit()) glFragmentLightModelfvSGIX(pname, params);}$/;"	f
_Lazy_glFragmentLightModeliEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glFragmentLightModeliEXT(GLenum pname, GLint param)                {if (GLeeInit()) glFragmentLightModeliEXT(pname, param);}$/;"	f
_Lazy_glFragmentLightModeliSGIX	shared/GLee.c	/^void __stdcall _Lazy_glFragmentLightModeliSGIX(GLenum pname, GLint param)                 {if (GLeeInit()) glFragmentLightModeliSGIX(pname, param);}$/;"	f
_Lazy_glFragmentLightModelivEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glFragmentLightModelivEXT(GLenum pname, GLint * params)            {if (GLeeInit()) glFragmentLightModelivEXT(pname, params);}$/;"	f
_Lazy_glFragmentLightModelivSGIX	shared/GLee.c	/^void __stdcall _Lazy_glFragmentLightModelivSGIX(GLenum pname, const GLint * params)       {if (GLeeInit()) glFragmentLightModelivSGIX(pname, params);}$/;"	f
_Lazy_glFragmentLightfEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glFragmentLightfEXT(GLenum light, GLenum pname, GLfloat param)     {if (GLeeInit()) glFragmentLightfEXT(light, pname, param);}$/;"	f
_Lazy_glFragmentLightfSGIX	shared/GLee.c	/^void __stdcall _Lazy_glFragmentLightfSGIX(GLenum light, GLenum pname, GLfloat param)      {if (GLeeInit()) glFragmentLightfSGIX(light, pname, param);}$/;"	f
_Lazy_glFragmentLightfvEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glFragmentLightfvEXT(GLenum light, GLenum pname, GLfloat * params)  {if (GLeeInit()) glFragmentLightfvEXT(light, pname, params);}$/;"	f
_Lazy_glFragmentLightfvSGIX	shared/GLee.c	/^void __stdcall _Lazy_glFragmentLightfvSGIX(GLenum light, GLenum pname, const GLfloat * params)  {if (GLeeInit()) glFragmentLightfvSGIX(light, pname, params);}$/;"	f
_Lazy_glFragmentLightiEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glFragmentLightiEXT(GLenum light, GLenum pname, GLint param)       {if (GLeeInit()) glFragmentLightiEXT(light, pname, param);}$/;"	f
_Lazy_glFragmentLightiSGIX	shared/GLee.c	/^void __stdcall _Lazy_glFragmentLightiSGIX(GLenum light, GLenum pname, GLint param)        {if (GLeeInit()) glFragmentLightiSGIX(light, pname, param);}$/;"	f
_Lazy_glFragmentLightivEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glFragmentLightivEXT(GLenum light, GLenum pname, GLint * params)   {if (GLeeInit()) glFragmentLightivEXT(light, pname, params);}$/;"	f
_Lazy_glFragmentLightivSGIX	shared/GLee.c	/^void __stdcall _Lazy_glFragmentLightivSGIX(GLenum light, GLenum pname, const GLint * params)  {if (GLeeInit()) glFragmentLightivSGIX(light, pname, params);}$/;"	f
_Lazy_glFragmentMaterialfEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glFragmentMaterialfEXT(GLenum face, GLenum pname, const GLfloat param)  {if (GLeeInit()) glFragmentMaterialfEXT(face, pname, param);}$/;"	f
_Lazy_glFragmentMaterialfSGIX	shared/GLee.c	/^void __stdcall _Lazy_glFragmentMaterialfSGIX(GLenum face, GLenum pname, GLfloat param)    {if (GLeeInit()) glFragmentMaterialfSGIX(face, pname, param);}$/;"	f
_Lazy_glFragmentMaterialfvEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glFragmentMaterialfvEXT(GLenum face, GLenum pname, const GLfloat * params)  {if (GLeeInit()) glFragmentMaterialfvEXT(face, pname, params);}$/;"	f
_Lazy_glFragmentMaterialfvSGIX	shared/GLee.c	/^void __stdcall _Lazy_glFragmentMaterialfvSGIX(GLenum face, GLenum pname, const GLfloat * params)  {if (GLeeInit()) glFragmentMaterialfvSGIX(face, pname, params);}$/;"	f
_Lazy_glFragmentMaterialiEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glFragmentMaterialiEXT(GLenum face, GLenum pname, const GLint param)  {if (GLeeInit()) glFragmentMaterialiEXT(face, pname, param);}$/;"	f
_Lazy_glFragmentMaterialiSGIX	shared/GLee.c	/^void __stdcall _Lazy_glFragmentMaterialiSGIX(GLenum face, GLenum pname, GLint param)      {if (GLeeInit()) glFragmentMaterialiSGIX(face, pname, param);}$/;"	f
_Lazy_glFragmentMaterialivEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glFragmentMaterialivEXT(GLenum face, GLenum pname, const GLint * params)  {if (GLeeInit()) glFragmentMaterialivEXT(face, pname, params);}$/;"	f
_Lazy_glFragmentMaterialivSGIX	shared/GLee.c	/^void __stdcall _Lazy_glFragmentMaterialivSGIX(GLenum face, GLenum pname, const GLint * params)  {if (GLeeInit()) glFragmentMaterialivSGIX(face, pname, params);}$/;"	f
_Lazy_glFrameZoomSGIX	shared/GLee.c	/^void __stdcall _Lazy_glFrameZoomSGIX(GLint factor)                                        {if (GLeeInit()) glFrameZoomSGIX(factor);}$/;"	f
_Lazy_glFramebufferRenderbufferEXT	shared/GLee.c	/^void __stdcall _Lazy_glFramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)  {if (GLeeInit()) glFramebufferRenderbufferEXT(target, attachment, renderbuffertarget, renderbuffer);}$/;"	f
_Lazy_glFramebufferTexture1DEXT	shared/GLee.c	/^void __stdcall _Lazy_glFramebufferTexture1DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)  {if (GLeeInit()) glFramebufferTexture1DEXT(target, attachment, textarget, texture, level);}$/;"	f
_Lazy_glFramebufferTexture2DEXT	shared/GLee.c	/^void __stdcall _Lazy_glFramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)  {if (GLeeInit()) glFramebufferTexture2DEXT(target, attachment, textarget, texture, level);}$/;"	f
_Lazy_glFramebufferTexture3DEXT	shared/GLee.c	/^void __stdcall _Lazy_glFramebufferTexture3DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)  {if (GLeeInit()) glFramebufferTexture3DEXT(target, attachment, textarget, texture, level, zoffset);}$/;"	f
_Lazy_glFramebufferTextureEXT	shared/GLee.c	/^void __stdcall _Lazy_glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level)  {if (GLeeInit()) glFramebufferTextureEXT(target, attachment, texture, level);}$/;"	f
_Lazy_glFramebufferTextureFaceEXT	shared/GLee.c	/^void __stdcall _Lazy_glFramebufferTextureFaceEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face)  {if (GLeeInit()) glFramebufferTextureFaceEXT(target, attachment, texture, level, face);}$/;"	f
_Lazy_glFramebufferTextureLayerEXT	shared/GLee.c	/^void __stdcall _Lazy_glFramebufferTextureLayerEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)  {if (GLeeInit()) glFramebufferTextureLayerEXT(target, attachment, texture, level, layer);}$/;"	f
_Lazy_glFreeObjectBufferATI	shared/GLee.c	/^void __stdcall _Lazy_glFreeObjectBufferATI(GLuint buffer)                                 {if (GLeeInit()) glFreeObjectBufferATI(buffer);}$/;"	f
_Lazy_glFrustumfOES	shared/GLee.c	/^GLvoid __stdcall _Lazy_glFrustumfOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f)  {if (GLeeInit()) glFrustumfOES(l, r, b, t, n, f);}$/;"	f
_Lazy_glGenAsyncMarkersSGIX	shared/GLee.c	/^GLuint __stdcall _Lazy_glGenAsyncMarkersSGIX(GLsizei range)                               {if (GLeeInit()) return glGenAsyncMarkersSGIX(range); return (GLuint)0;}$/;"	f
_Lazy_glGenBuffers	shared/GLee.c	/^void __stdcall _Lazy_glGenBuffers(GLsizei n, GLuint * buffers)                            {if (GLeeInit()) glGenBuffers(n, buffers);}$/;"	f
_Lazy_glGenBuffersARB	shared/GLee.c	/^void __stdcall _Lazy_glGenBuffersARB(GLsizei n, GLuint * buffers)                         {if (GLeeInit()) glGenBuffersARB(n, buffers);}$/;"	f
_Lazy_glGenFencesAPPLE	shared/GLee.c	/^void __stdcall _Lazy_glGenFencesAPPLE(GLsizei n, GLuint * fences)                         {if (GLeeInit()) glGenFencesAPPLE(n, fences);}$/;"	f
_Lazy_glGenFencesNV	shared/GLee.c	/^void __stdcall _Lazy_glGenFencesNV(GLsizei n, GLuint * fences)                            {if (GLeeInit()) glGenFencesNV(n, fences);}$/;"	f
_Lazy_glGenFragmentShadersATI	shared/GLee.c	/^GLuint __stdcall _Lazy_glGenFragmentShadersATI(GLuint range)                              {if (GLeeInit()) return glGenFragmentShadersATI(range); return (GLuint)0;}$/;"	f
_Lazy_glGenFramebuffersEXT	shared/GLee.c	/^void __stdcall _Lazy_glGenFramebuffersEXT(GLsizei n, GLuint * framebuffers)               {if (GLeeInit()) glGenFramebuffersEXT(n, framebuffers);}$/;"	f
_Lazy_glGenOcclusionQueriesNV	shared/GLee.c	/^void __stdcall _Lazy_glGenOcclusionQueriesNV(GLsizei n, GLuint * ids)                     {if (GLeeInit()) glGenOcclusionQueriesNV(n, ids);}$/;"	f
_Lazy_glGenProgramsARB	shared/GLee.c	/^void __stdcall _Lazy_glGenProgramsARB(GLsizei n, GLuint * programs)                       {if (GLeeInit()) glGenProgramsARB(n, programs);}$/;"	f
_Lazy_glGenProgramsNV	shared/GLee.c	/^void __stdcall _Lazy_glGenProgramsNV(GLsizei n, GLuint * programs)                        {if (GLeeInit()) glGenProgramsNV(n, programs);}$/;"	f
_Lazy_glGenQueries	shared/GLee.c	/^void __stdcall _Lazy_glGenQueries(GLsizei n, GLuint * ids)                                {if (GLeeInit()) glGenQueries(n, ids);}$/;"	f
_Lazy_glGenQueriesARB	shared/GLee.c	/^void __stdcall _Lazy_glGenQueriesARB(GLsizei n, GLuint * ids)                             {if (GLeeInit()) glGenQueriesARB(n, ids);}$/;"	f
_Lazy_glGenRenderbuffersEXT	shared/GLee.c	/^void __stdcall _Lazy_glGenRenderbuffersEXT(GLsizei n, GLuint * renderbuffers)             {if (GLeeInit()) glGenRenderbuffersEXT(n, renderbuffers);}$/;"	f
_Lazy_glGenSymbolsEXT	shared/GLee.c	/^GLuint __stdcall _Lazy_glGenSymbolsEXT(GLenum datatype, GLenum storagetype, GLenum range, GLuint components)  {if (GLeeInit()) return glGenSymbolsEXT(datatype, storagetype, range, components); return (GLuint)0;}$/;"	f
_Lazy_glGenTexturesEXT	shared/GLee.c	/^void __stdcall _Lazy_glGenTexturesEXT(GLsizei n, GLuint * textures)                       {if (GLeeInit()) glGenTexturesEXT(n, textures);}$/;"	f
_Lazy_glGenVertexArraysAPPLE	shared/GLee.c	/^void __stdcall _Lazy_glGenVertexArraysAPPLE(GLsizei n, const GLuint * arrays)             {if (GLeeInit()) glGenVertexArraysAPPLE(n, arrays);}$/;"	f
_Lazy_glGenVertexShadersEXT	shared/GLee.c	/^GLuint __stdcall _Lazy_glGenVertexShadersEXT(GLuint range)                                {if (GLeeInit()) return glGenVertexShadersEXT(range); return (GLuint)0;}$/;"	f
_Lazy_glGenerateMipmapEXT	shared/GLee.c	/^void __stdcall _Lazy_glGenerateMipmapEXT(GLenum target)                                   {if (GLeeInit()) glGenerateMipmapEXT(target);}$/;"	f
_Lazy_glGetActiveAttrib	shared/GLee.c	/^void __stdcall _Lazy_glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name)  {if (GLeeInit()) glGetActiveAttrib(program, index, bufSize, length, size, type, name);}$/;"	f
_Lazy_glGetActiveAttribARB	shared/GLee.c	/^void __stdcall _Lazy_glGetActiveAttribARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name)  {if (GLeeInit()) glGetActiveAttribARB(programObj, index, maxLength, length, size, type, name);}$/;"	f
_Lazy_glGetActiveUniform	shared/GLee.c	/^void __stdcall _Lazy_glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name)  {if (GLeeInit()) glGetActiveUniform(program, index, bufSize, length, size, type, name);}$/;"	f
_Lazy_glGetActiveUniformARB	shared/GLee.c	/^void __stdcall _Lazy_glGetActiveUniformARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name)  {if (GLeeInit()) glGetActiveUniformARB(programObj, index, maxLength, length, size, type, name);}$/;"	f
_Lazy_glGetActiveVaryingNV	shared/GLee.c	/^void __stdcall _Lazy_glGetActiveVaryingNV(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name)  {if (GLeeInit()) glGetActiveVaryingNV(program, index, bufSize, length, size, type, name);}$/;"	f
_Lazy_glGetArrayObjectfvATI	shared/GLee.c	/^void __stdcall _Lazy_glGetArrayObjectfvATI(GLenum array, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetArrayObjectfvATI(array, pname, params);}$/;"	f
_Lazy_glGetArrayObjectivATI	shared/GLee.c	/^void __stdcall _Lazy_glGetArrayObjectivATI(GLenum array, GLenum pname, GLint * params)    {if (GLeeInit()) glGetArrayObjectivATI(array, pname, params);}$/;"	f
_Lazy_glGetAttachedObjectsARB	shared/GLee.c	/^void __stdcall _Lazy_glGetAttachedObjectsARB(GLhandleARB containerObj, GLsizei maxCount, GLsizei * count, GLhandleARB * obj)  {if (GLeeInit()) glGetAttachedObjectsARB(containerObj, maxCount, count, obj);}$/;"	f
_Lazy_glGetAttachedShaders	shared/GLee.c	/^void __stdcall _Lazy_glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * obj)  {if (GLeeInit()) glGetAttachedShaders(program, maxCount, count, obj);}$/;"	f
_Lazy_glGetAttribLocation	shared/GLee.c	/^GLint __stdcall _Lazy_glGetAttribLocation(GLuint program, const GLchar * name)            {if (GLeeInit()) return glGetAttribLocation(program, name); return (GLint)0;}$/;"	f
_Lazy_glGetAttribLocationARB	shared/GLee.c	/^GLint __stdcall _Lazy_glGetAttribLocationARB(GLhandleARB programObj, const GLcharARB * name)  {if (GLeeInit()) return glGetAttribLocationARB(programObj, name); return (GLint)0;}$/;"	f
_Lazy_glGetBooleanIndexedvEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetBooleanIndexedvEXT(GLenum target, GLuint index, GLboolean * data)  {if (GLeeInit()) glGetBooleanIndexedvEXT(target, index, data);}$/;"	f
_Lazy_glGetBufferParameteriv	shared/GLee.c	/^void __stdcall _Lazy_glGetBufferParameteriv(GLenum target, GLenum pname, GLint * params)  {if (GLeeInit()) glGetBufferParameteriv(target, pname, params);}$/;"	f
_Lazy_glGetBufferParameterivARB	shared/GLee.c	/^void __stdcall _Lazy_glGetBufferParameterivARB(GLenum target, GLenum pname, GLint * params)  {if (GLeeInit()) glGetBufferParameterivARB(target, pname, params);}$/;"	f
_Lazy_glGetBufferPointerv	shared/GLee.c	/^void __stdcall _Lazy_glGetBufferPointerv(GLenum target, GLenum pname, GLvoid* * params)   {if (GLeeInit()) glGetBufferPointerv(target, pname, params);}$/;"	f
_Lazy_glGetBufferPointervARB	shared/GLee.c	/^void __stdcall _Lazy_glGetBufferPointervARB(GLenum target, GLenum pname, GLvoid* * params)  {if (GLeeInit()) glGetBufferPointervARB(target, pname, params);}$/;"	f
_Lazy_glGetBufferSubData	shared/GLee.c	/^void __stdcall _Lazy_glGetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid * data)  {if (GLeeInit()) glGetBufferSubData(target, offset, size, data);}$/;"	f
_Lazy_glGetBufferSubDataARB	shared/GLee.c	/^void __stdcall _Lazy_glGetBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid * data)  {if (GLeeInit()) glGetBufferSubDataARB(target, offset, size, data);}$/;"	f
_Lazy_glGetClipPlanefOES	shared/GLee.c	/^GLvoid __stdcall _Lazy_glGetClipPlanefOES(GLenum plane, GLfloat* equation)                {if (GLeeInit()) glGetClipPlanefOES(plane, equation);}$/;"	f
_Lazy_glGetColorTable	shared/GLee.c	/^void __stdcall _Lazy_glGetColorTable(GLenum target, GLenum format, GLenum type, GLvoid * table)  {if (GLeeInit()) glGetColorTable(target, format, type, table);}$/;"	f
_Lazy_glGetColorTableEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetColorTableEXT(GLenum target, GLenum format, GLenum type, GLvoid * data)  {if (GLeeInit()) glGetColorTableEXT(target, format, type, data);}$/;"	f
_Lazy_glGetColorTableParameterfv	shared/GLee.c	/^void __stdcall _Lazy_glGetColorTableParameterfv(GLenum target, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetColorTableParameterfv(target, pname, params);}$/;"	f
_Lazy_glGetColorTableParameterfvEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetColorTableParameterfvEXT(GLenum target, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetColorTableParameterfvEXT(target, pname, params);}$/;"	f
_Lazy_glGetColorTableParameterfvSGI	shared/GLee.c	/^void __stdcall _Lazy_glGetColorTableParameterfvSGI(GLenum target, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetColorTableParameterfvSGI(target, pname, params);}$/;"	f
_Lazy_glGetColorTableParameteriv	shared/GLee.c	/^void __stdcall _Lazy_glGetColorTableParameteriv(GLenum target, GLenum pname, GLint * params)  {if (GLeeInit()) glGetColorTableParameteriv(target, pname, params);}$/;"	f
_Lazy_glGetColorTableParameterivEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetColorTableParameterivEXT(GLenum target, GLenum pname, GLint * params)  {if (GLeeInit()) glGetColorTableParameterivEXT(target, pname, params);}$/;"	f
_Lazy_glGetColorTableParameterivSGI	shared/GLee.c	/^void __stdcall _Lazy_glGetColorTableParameterivSGI(GLenum target, GLenum pname, GLint * params)  {if (GLeeInit()) glGetColorTableParameterivSGI(target, pname, params);}$/;"	f
_Lazy_glGetColorTableSGI	shared/GLee.c	/^void __stdcall _Lazy_glGetColorTableSGI(GLenum target, GLenum format, GLenum type, GLvoid * table)  {if (GLeeInit()) glGetColorTableSGI(target, format, type, table);}$/;"	f
_Lazy_glGetCombinerInputParameterfvNV	shared/GLee.c	/^void __stdcall _Lazy_glGetCombinerInputParameterfvNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetCombinerInputParameterfvNV(stage, portion, variable, pname, params);}$/;"	f
_Lazy_glGetCombinerInputParameterivNV	shared/GLee.c	/^void __stdcall _Lazy_glGetCombinerInputParameterivNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params)  {if (GLeeInit()) glGetCombinerInputParameterivNV(stage, portion, variable, pname, params);}$/;"	f
_Lazy_glGetCombinerOutputParameterfvNV	shared/GLee.c	/^void __stdcall _Lazy_glGetCombinerOutputParameterfvNV(GLenum stage, GLenum portion, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetCombinerOutputParameterfvNV(stage, portion, pname, params);}$/;"	f
_Lazy_glGetCombinerOutputParameterivNV	shared/GLee.c	/^void __stdcall _Lazy_glGetCombinerOutputParameterivNV(GLenum stage, GLenum portion, GLenum pname, GLint * params)  {if (GLeeInit()) glGetCombinerOutputParameterivNV(stage, portion, pname, params);}$/;"	f
_Lazy_glGetCombinerStageParameterfvNV	shared/GLee.c	/^void __stdcall _Lazy_glGetCombinerStageParameterfvNV(GLenum stage, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetCombinerStageParameterfvNV(stage, pname, params);}$/;"	f
_Lazy_glGetCompressedTexImage	shared/GLee.c	/^void __stdcall _Lazy_glGetCompressedTexImage(GLenum target, GLint level, GLvoid * img)    {if (GLeeInit()) glGetCompressedTexImage(target, level, img);}$/;"	f
_Lazy_glGetCompressedTexImageARB	shared/GLee.c	/^void __stdcall _Lazy_glGetCompressedTexImageARB(GLenum target, GLint level, GLvoid * img)  {if (GLeeInit()) glGetCompressedTexImageARB(target, level, img);}$/;"	f
_Lazy_glGetConvolutionFilter	shared/GLee.c	/^void __stdcall _Lazy_glGetConvolutionFilter(GLenum target, GLenum format, GLenum type, GLvoid * image)  {if (GLeeInit()) glGetConvolutionFilter(target, format, type, image);}$/;"	f
_Lazy_glGetConvolutionFilterEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetConvolutionFilterEXT(GLenum target, GLenum format, GLenum type, GLvoid * image)  {if (GLeeInit()) glGetConvolutionFilterEXT(target, format, type, image);}$/;"	f
_Lazy_glGetConvolutionParameterfv	shared/GLee.c	/^void __stdcall _Lazy_glGetConvolutionParameterfv(GLenum target, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetConvolutionParameterfv(target, pname, params);}$/;"	f
_Lazy_glGetConvolutionParameterfvEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetConvolutionParameterfvEXT(GLenum target, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetConvolutionParameterfvEXT(target, pname, params);}$/;"	f
_Lazy_glGetConvolutionParameteriv	shared/GLee.c	/^void __stdcall _Lazy_glGetConvolutionParameteriv(GLenum target, GLenum pname, GLint * params)  {if (GLeeInit()) glGetConvolutionParameteriv(target, pname, params);}$/;"	f
_Lazy_glGetConvolutionParameterivEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetConvolutionParameterivEXT(GLenum target, GLenum pname, GLint * params)  {if (GLeeInit()) glGetConvolutionParameterivEXT(target, pname, params);}$/;"	f
_Lazy_glGetDetailTexFuncSGIS	shared/GLee.c	/^void __stdcall _Lazy_glGetDetailTexFuncSGIS(GLenum target, GLfloat * points)              {if (GLeeInit()) glGetDetailTexFuncSGIS(target, points);}$/;"	f
_Lazy_glGetFenceivNV	shared/GLee.c	/^void __stdcall _Lazy_glGetFenceivNV(GLuint fence, GLenum pname, GLint * params)           {if (GLeeInit()) glGetFenceivNV(fence, pname, params);}$/;"	f
_Lazy_glGetFinalCombinerInputParameterfvNV	shared/GLee.c	/^void __stdcall _Lazy_glGetFinalCombinerInputParameterfvNV(GLenum variable, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetFinalCombinerInputParameterfvNV(variable, pname, params);}$/;"	f
_Lazy_glGetFinalCombinerInputParameterivNV	shared/GLee.c	/^void __stdcall _Lazy_glGetFinalCombinerInputParameterivNV(GLenum variable, GLenum pname, GLint * params)  {if (GLeeInit()) glGetFinalCombinerInputParameterivNV(variable, pname, params);}$/;"	f
_Lazy_glGetFogFuncSGIS	shared/GLee.c	/^void __stdcall _Lazy_glGetFogFuncSGIS(GLfloat * points)                                   {if (GLeeInit()) glGetFogFuncSGIS(points);}$/;"	f
_Lazy_glGetFragDataLocationEXT	shared/GLee.c	/^GLint __stdcall _Lazy_glGetFragDataLocationEXT(GLuint program, const GLchar * name)       {if (GLeeInit()) return glGetFragDataLocationEXT(program, name); return (GLint)0;}$/;"	f
_Lazy_glGetFragmentLightfvEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glGetFragmentLightfvEXT(GLenum light, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetFragmentLightfvEXT(light, pname, params);}$/;"	f
_Lazy_glGetFragmentLightfvSGIX	shared/GLee.c	/^void __stdcall _Lazy_glGetFragmentLightfvSGIX(GLenum light, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetFragmentLightfvSGIX(light, pname, params);}$/;"	f
_Lazy_glGetFragmentLightivEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glGetFragmentLightivEXT(GLenum light, GLenum pname, GLint * params)  {if (GLeeInit()) glGetFragmentLightivEXT(light, pname, params);}$/;"	f
_Lazy_glGetFragmentLightivSGIX	shared/GLee.c	/^void __stdcall _Lazy_glGetFragmentLightivSGIX(GLenum light, GLenum pname, GLint * params)  {if (GLeeInit()) glGetFragmentLightivSGIX(light, pname, params);}$/;"	f
_Lazy_glGetFragmentMaterialfvEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glGetFragmentMaterialfvEXT(GLenum face, GLenum pname, const GLfloat * params)  {if (GLeeInit()) glGetFragmentMaterialfvEXT(face, pname, params);}$/;"	f
_Lazy_glGetFragmentMaterialfvSGIX	shared/GLee.c	/^void __stdcall _Lazy_glGetFragmentMaterialfvSGIX(GLenum face, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetFragmentMaterialfvSGIX(face, pname, params);}$/;"	f
_Lazy_glGetFragmentMaterialivEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glGetFragmentMaterialivEXT(GLenum face, GLenum pname, const GLint * params)  {if (GLeeInit()) glGetFragmentMaterialivEXT(face, pname, params);}$/;"	f
_Lazy_glGetFragmentMaterialivSGIX	shared/GLee.c	/^void __stdcall _Lazy_glGetFragmentMaterialivSGIX(GLenum face, GLenum pname, GLint * params)  {if (GLeeInit()) glGetFragmentMaterialivSGIX(face, pname, params);}$/;"	f
_Lazy_glGetFramebufferAttachmentParameterivEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment, GLenum pname, GLint * params)  {if (GLeeInit()) glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);}$/;"	f
_Lazy_glGetHandleARB	shared/GLee.c	/^GLhandleARB __stdcall _Lazy_glGetHandleARB(GLenum pname)                                  {if (GLeeInit()) return glGetHandleARB(pname); return (GLhandleARB)0;}$/;"	f
_Lazy_glGetHistogram	shared/GLee.c	/^void __stdcall _Lazy_glGetHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values)  {if (GLeeInit()) glGetHistogram(target, reset, format, type, values);}$/;"	f
_Lazy_glGetHistogramEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetHistogramEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values)  {if (GLeeInit()) glGetHistogramEXT(target, reset, format, type, values);}$/;"	f
_Lazy_glGetHistogramParameterfv	shared/GLee.c	/^void __stdcall _Lazy_glGetHistogramParameterfv(GLenum target, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetHistogramParameterfv(target, pname, params);}$/;"	f
_Lazy_glGetHistogramParameterfvEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetHistogramParameterfvEXT(GLenum target, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetHistogramParameterfvEXT(target, pname, params);}$/;"	f
_Lazy_glGetHistogramParameteriv	shared/GLee.c	/^void __stdcall _Lazy_glGetHistogramParameteriv(GLenum target, GLenum pname, GLint * params)  {if (GLeeInit()) glGetHistogramParameteriv(target, pname, params);}$/;"	f
_Lazy_glGetHistogramParameterivEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetHistogramParameterivEXT(GLenum target, GLenum pname, GLint * params)  {if (GLeeInit()) glGetHistogramParameterivEXT(target, pname, params);}$/;"	f
_Lazy_glGetImageTransformParameterfvHP	shared/GLee.c	/^void __stdcall _Lazy_glGetImageTransformParameterfvHP(GLenum target, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetImageTransformParameterfvHP(target, pname, params);}$/;"	f
_Lazy_glGetImageTransformParameterivHP	shared/GLee.c	/^void __stdcall _Lazy_glGetImageTransformParameterivHP(GLenum target, GLenum pname, GLint * params)  {if (GLeeInit()) glGetImageTransformParameterivHP(target, pname, params);}$/;"	f
_Lazy_glGetInfoLogARB	shared/GLee.c	/^void __stdcall _Lazy_glGetInfoLogARB(GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog)  {if (GLeeInit()) glGetInfoLogARB(obj, maxLength, length, infoLog);}$/;"	f
_Lazy_glGetInstrumentsSGIX	shared/GLee.c	/^GLint __stdcall _Lazy_glGetInstrumentsSGIX(void)                                          {if (GLeeInit()) return glGetInstrumentsSGIX(); return (GLint)0;}$/;"	f
_Lazy_glGetIntegerIndexedvEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetIntegerIndexedvEXT(GLenum target, GLuint index, GLint * data)   {if (GLeeInit()) glGetIntegerIndexedvEXT(target, index, data);}$/;"	f
_Lazy_glGetInvariantBooleanvEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetInvariantBooleanvEXT(GLuint id, GLenum value, GLboolean * data)  {if (GLeeInit()) glGetInvariantBooleanvEXT(id, value, data);}$/;"	f
_Lazy_glGetInvariantFloatvEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetInvariantFloatvEXT(GLuint id, GLenum value, GLfloat * data)     {if (GLeeInit()) glGetInvariantFloatvEXT(id, value, data);}$/;"	f
_Lazy_glGetInvariantIntegervEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetInvariantIntegervEXT(GLuint id, GLenum value, GLint * data)     {if (GLeeInit()) glGetInvariantIntegervEXT(id, value, data);}$/;"	f
_Lazy_glGetListParameterfvSGIX	shared/GLee.c	/^void __stdcall _Lazy_glGetListParameterfvSGIX(GLuint list, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetListParameterfvSGIX(list, pname, params);}$/;"	f
_Lazy_glGetListParameterivSGIX	shared/GLee.c	/^void __stdcall _Lazy_glGetListParameterivSGIX(GLuint list, GLenum pname, GLint * params)  {if (GLeeInit()) glGetListParameterivSGIX(list, pname, params);}$/;"	f
_Lazy_glGetLocalConstantBooleanvEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetLocalConstantBooleanvEXT(GLuint id, GLenum value, GLboolean * data)  {if (GLeeInit()) glGetLocalConstantBooleanvEXT(id, value, data);}$/;"	f
_Lazy_glGetLocalConstantFloatvEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetLocalConstantFloatvEXT(GLuint id, GLenum value, GLfloat * data)  {if (GLeeInit()) glGetLocalConstantFloatvEXT(id, value, data);}$/;"	f
_Lazy_glGetLocalConstantIntegervEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetLocalConstantIntegervEXT(GLuint id, GLenum value, GLint * data)  {if (GLeeInit()) glGetLocalConstantIntegervEXT(id, value, data);}$/;"	f
_Lazy_glGetMapAttribParameterfvNV	shared/GLee.c	/^void __stdcall _Lazy_glGetMapAttribParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetMapAttribParameterfvNV(target, index, pname, params);}$/;"	f
_Lazy_glGetMapAttribParameterivNV	shared/GLee.c	/^void __stdcall _Lazy_glGetMapAttribParameterivNV(GLenum target, GLuint index, GLenum pname, GLint * params)  {if (GLeeInit()) glGetMapAttribParameterivNV(target, index, pname, params);}$/;"	f
_Lazy_glGetMapControlPointsNV	shared/GLee.c	/^void __stdcall _Lazy_glGetMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid * points)  {if (GLeeInit()) glGetMapControlPointsNV(target, index, type, ustride, vstride, packed, points);}$/;"	f
_Lazy_glGetMapParameterfvNV	shared/GLee.c	/^void __stdcall _Lazy_glGetMapParameterfvNV(GLenum target, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetMapParameterfvNV(target, pname, params);}$/;"	f
_Lazy_glGetMapParameterivNV	shared/GLee.c	/^void __stdcall _Lazy_glGetMapParameterivNV(GLenum target, GLenum pname, GLint * params)   {if (GLeeInit()) glGetMapParameterivNV(target, pname, params);}$/;"	f
_Lazy_glGetMinmax	shared/GLee.c	/^void __stdcall _Lazy_glGetMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values)  {if (GLeeInit()) glGetMinmax(target, reset, format, type, values);}$/;"	f
_Lazy_glGetMinmaxEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetMinmaxEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values)  {if (GLeeInit()) glGetMinmaxEXT(target, reset, format, type, values);}$/;"	f
_Lazy_glGetMinmaxParameterfv	shared/GLee.c	/^void __stdcall _Lazy_glGetMinmaxParameterfv(GLenum target, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetMinmaxParameterfv(target, pname, params);}$/;"	f
_Lazy_glGetMinmaxParameterfvEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetMinmaxParameterfvEXT(GLenum target, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetMinmaxParameterfvEXT(target, pname, params);}$/;"	f
_Lazy_glGetMinmaxParameteriv	shared/GLee.c	/^void __stdcall _Lazy_glGetMinmaxParameteriv(GLenum target, GLenum pname, GLint * params)  {if (GLeeInit()) glGetMinmaxParameteriv(target, pname, params);}$/;"	f
_Lazy_glGetMinmaxParameterivEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetMinmaxParameterivEXT(GLenum target, GLenum pname, GLint * params)  {if (GLeeInit()) glGetMinmaxParameterivEXT(target, pname, params);}$/;"	f
_Lazy_glGetObjectBufferfvATI	shared/GLee.c	/^void __stdcall _Lazy_glGetObjectBufferfvATI(GLuint buffer, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetObjectBufferfvATI(buffer, pname, params);}$/;"	f
_Lazy_glGetObjectBufferivATI	shared/GLee.c	/^void __stdcall _Lazy_glGetObjectBufferivATI(GLuint buffer, GLenum pname, GLint * params)  {if (GLeeInit()) glGetObjectBufferivATI(buffer, pname, params);}$/;"	f
_Lazy_glGetObjectParameterfvARB	shared/GLee.c	/^void __stdcall _Lazy_glGetObjectParameterfvARB(GLhandleARB obj, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetObjectParameterfvARB(obj, pname, params);}$/;"	f
_Lazy_glGetObjectParameterivARB	shared/GLee.c	/^void __stdcall _Lazy_glGetObjectParameterivARB(GLhandleARB obj, GLenum pname, GLint * params)  {if (GLeeInit()) glGetObjectParameterivARB(obj, pname, params);}$/;"	f
_Lazy_glGetOcclusionQueryivNV	shared/GLee.c	/^void __stdcall _Lazy_glGetOcclusionQueryivNV(GLuint id, GLenum pname, GLint * params)     {if (GLeeInit()) glGetOcclusionQueryivNV(id, pname, params);}$/;"	f
_Lazy_glGetOcclusionQueryuivNV	shared/GLee.c	/^void __stdcall _Lazy_glGetOcclusionQueryuivNV(GLuint id, GLenum pname, GLuint * params)   {if (GLeeInit()) glGetOcclusionQueryuivNV(id, pname, params);}$/;"	f
_Lazy_glGetPixelTexGenParameterfvSGIS	shared/GLee.c	/^void __stdcall _Lazy_glGetPixelTexGenParameterfvSGIS(GLenum pname, GLfloat * params)      {if (GLeeInit()) glGetPixelTexGenParameterfvSGIS(pname, params);}$/;"	f
_Lazy_glGetPixelTexGenParameterivSGIS	shared/GLee.c	/^void __stdcall _Lazy_glGetPixelTexGenParameterivSGIS(GLenum pname, GLint * params)        {if (GLeeInit()) glGetPixelTexGenParameterivSGIS(pname, params);}$/;"	f
_Lazy_glGetPointervEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetPointervEXT(GLenum pname, GLvoid* * params)                     {if (GLeeInit()) glGetPointervEXT(pname, params);}$/;"	f
_Lazy_glGetProgramEnvParameterIivNV	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramEnvParameterIivNV(GLenum target, GLuint index, GLint * params)  {if (GLeeInit()) glGetProgramEnvParameterIivNV(target, index, params);}$/;"	f
_Lazy_glGetProgramEnvParameterIuivNV	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramEnvParameterIuivNV(GLenum target, GLuint index, GLuint * params)  {if (GLeeInit()) glGetProgramEnvParameterIuivNV(target, index, params);}$/;"	f
_Lazy_glGetProgramEnvParameterdvARB	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramEnvParameterdvARB(GLenum target, GLuint index, GLdouble * params)  {if (GLeeInit()) glGetProgramEnvParameterdvARB(target, index, params);}$/;"	f
_Lazy_glGetProgramEnvParameterfvARB	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramEnvParameterfvARB(GLenum target, GLuint index, GLfloat * params)  {if (GLeeInit()) glGetProgramEnvParameterfvARB(target, index, params);}$/;"	f
_Lazy_glGetProgramInfoLog	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog)  {if (GLeeInit()) glGetProgramInfoLog(program, bufSize, length, infoLog);}$/;"	f
_Lazy_glGetProgramLocalParameterIivNV	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramLocalParameterIivNV(GLenum target, GLuint index, GLint * params)  {if (GLeeInit()) glGetProgramLocalParameterIivNV(target, index, params);}$/;"	f
_Lazy_glGetProgramLocalParameterIuivNV	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramLocalParameterIuivNV(GLenum target, GLuint index, GLuint * params)  {if (GLeeInit()) glGetProgramLocalParameterIuivNV(target, index, params);}$/;"	f
_Lazy_glGetProgramLocalParameterdvARB	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramLocalParameterdvARB(GLenum target, GLuint index, GLdouble * params)  {if (GLeeInit()) glGetProgramLocalParameterdvARB(target, index, params);}$/;"	f
_Lazy_glGetProgramLocalParameterfvARB	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramLocalParameterfvARB(GLenum target, GLuint index, GLfloat * params)  {if (GLeeInit()) glGetProgramLocalParameterfvARB(target, index, params);}$/;"	f
_Lazy_glGetProgramNamedParameterdvNV	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramNamedParameterdvNV(GLuint id, GLsizei len, const GLubyte * name, GLdouble * params)  {if (GLeeInit()) glGetProgramNamedParameterdvNV(id, len, name, params);}$/;"	f
_Lazy_glGetProgramNamedParameterfvNV	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramNamedParameterfvNV(GLuint id, GLsizei len, const GLubyte * name, GLfloat * params)  {if (GLeeInit()) glGetProgramNamedParameterfvNV(id, len, name, params);}$/;"	f
_Lazy_glGetProgramParameterdvNV	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramParameterdvNV(GLenum target, GLuint index, GLenum pname, GLdouble * params)  {if (GLeeInit()) glGetProgramParameterdvNV(target, index, pname, params);}$/;"	f
_Lazy_glGetProgramParameterfvNV	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetProgramParameterfvNV(target, index, pname, params);}$/;"	f
_Lazy_glGetProgramStringARB	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramStringARB(GLenum target, GLenum pname, GLvoid * string)  {if (GLeeInit()) glGetProgramStringARB(target, pname, string);}$/;"	f
_Lazy_glGetProgramStringNV	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramStringNV(GLuint id, GLenum pname, GLubyte * program)     {if (GLeeInit()) glGetProgramStringNV(id, pname, program);}$/;"	f
_Lazy_glGetProgramiv	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramiv(GLuint program, GLenum pname, GLint * params)         {if (GLeeInit()) glGetProgramiv(program, pname, params);}$/;"	f
_Lazy_glGetProgramivARB	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramivARB(GLenum target, GLenum pname, GLint * params)       {if (GLeeInit()) glGetProgramivARB(target, pname, params);}$/;"	f
_Lazy_glGetProgramivNV	shared/GLee.c	/^void __stdcall _Lazy_glGetProgramivNV(GLuint id, GLenum pname, GLint * params)            {if (GLeeInit()) glGetProgramivNV(id, pname, params);}$/;"	f
_Lazy_glGetQueryObjecti64vEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64EXT * params)  {if (GLeeInit()) glGetQueryObjecti64vEXT(id, pname, params);}$/;"	f
_Lazy_glGetQueryObjectiv	shared/GLee.c	/^void __stdcall _Lazy_glGetQueryObjectiv(GLuint id, GLenum pname, GLint * params)          {if (GLeeInit()) glGetQueryObjectiv(id, pname, params);}$/;"	f
_Lazy_glGetQueryObjectivARB	shared/GLee.c	/^void __stdcall _Lazy_glGetQueryObjectivARB(GLuint id, GLenum pname, GLint * params)       {if (GLeeInit()) glGetQueryObjectivARB(id, pname, params);}$/;"	f
_Lazy_glGetQueryObjectui64vEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64EXT * params)  {if (GLeeInit()) glGetQueryObjectui64vEXT(id, pname, params);}$/;"	f
_Lazy_glGetQueryObjectuiv	shared/GLee.c	/^void __stdcall _Lazy_glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint * params)        {if (GLeeInit()) glGetQueryObjectuiv(id, pname, params);}$/;"	f
_Lazy_glGetQueryObjectuivARB	shared/GLee.c	/^void __stdcall _Lazy_glGetQueryObjectuivARB(GLuint id, GLenum pname, GLuint * params)     {if (GLeeInit()) glGetQueryObjectuivARB(id, pname, params);}$/;"	f
_Lazy_glGetQueryiv	shared/GLee.c	/^void __stdcall _Lazy_glGetQueryiv(GLenum target, GLenum pname, GLint * params)            {if (GLeeInit()) glGetQueryiv(target, pname, params);}$/;"	f
_Lazy_glGetQueryivARB	shared/GLee.c	/^void __stdcall _Lazy_glGetQueryivARB(GLenum target, GLenum pname, GLint * params)         {if (GLeeInit()) glGetQueryivARB(target, pname, params);}$/;"	f
_Lazy_glGetRenderbufferParameterivEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetRenderbufferParameterivEXT(GLenum target, GLenum pname, GLint * params)  {if (GLeeInit()) glGetRenderbufferParameterivEXT(target, pname, params);}$/;"	f
_Lazy_glGetSeparableFilter	shared/GLee.c	/^void __stdcall _Lazy_glGetSeparableFilter(GLenum target, GLenum format, GLenum type, GLvoid * row, GLvoid * column, GLvoid * span)  {if (GLeeInit()) glGetSeparableFilter(target, format, type, row, column, span);}$/;"	f
_Lazy_glGetSeparableFilterEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetSeparableFilterEXT(GLenum target, GLenum format, GLenum type, GLvoid * row, GLvoid * column, GLvoid * span)  {if (GLeeInit()) glGetSeparableFilterEXT(target, format, type, row, column, span);}$/;"	f
_Lazy_glGetShaderInfoLog	shared/GLee.c	/^void __stdcall _Lazy_glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog)  {if (GLeeInit()) glGetShaderInfoLog(shader, bufSize, length, infoLog);}$/;"	f
_Lazy_glGetShaderSource	shared/GLee.c	/^void __stdcall _Lazy_glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source)  {if (GLeeInit()) glGetShaderSource(shader, bufSize, length, source);}$/;"	f
_Lazy_glGetShaderSourceARB	shared/GLee.c	/^void __stdcall _Lazy_glGetShaderSourceARB(GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source)  {if (GLeeInit()) glGetShaderSourceARB(obj, maxLength, length, source);}$/;"	f
_Lazy_glGetShaderiv	shared/GLee.c	/^void __stdcall _Lazy_glGetShaderiv(GLuint shader, GLenum pname, GLint * params)           {if (GLeeInit()) glGetShaderiv(shader, pname, params);}$/;"	f
_Lazy_glGetSharpenTexFuncSGIS	shared/GLee.c	/^void __stdcall _Lazy_glGetSharpenTexFuncSGIS(GLenum target, GLfloat * points)             {if (GLeeInit()) glGetSharpenTexFuncSGIS(target, points);}$/;"	f
_Lazy_glGetTexBumpParameterfvATI	shared/GLee.c	/^void __stdcall _Lazy_glGetTexBumpParameterfvATI(GLenum pname, GLfloat * param)            {if (GLeeInit()) glGetTexBumpParameterfvATI(pname, param);}$/;"	f
_Lazy_glGetTexBumpParameterivATI	shared/GLee.c	/^void __stdcall _Lazy_glGetTexBumpParameterivATI(GLenum pname, GLint * param)              {if (GLeeInit()) glGetTexBumpParameterivATI(pname, param);}$/;"	f
_Lazy_glGetTexFilterFuncSGIS	shared/GLee.c	/^void __stdcall _Lazy_glGetTexFilterFuncSGIS(GLenum target, GLenum filter, GLfloat * weights)  {if (GLeeInit()) glGetTexFilterFuncSGIS(target, filter, weights);}$/;"	f
_Lazy_glGetTexParameterIivEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetTexParameterIivEXT(GLenum target, GLenum pname, GLint * params)  {if (GLeeInit()) glGetTexParameterIivEXT(target, pname, params);}$/;"	f
_Lazy_glGetTexParameterIuivEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint * params)  {if (GLeeInit()) glGetTexParameterIuivEXT(target, pname, params);}$/;"	f
_Lazy_glGetTrackMatrixivNV	shared/GLee.c	/^void __stdcall _Lazy_glGetTrackMatrixivNV(GLenum target, GLuint address, GLenum pname, GLint * params)  {if (GLeeInit()) glGetTrackMatrixivNV(target, address, pname, params);}$/;"	f
_Lazy_glGetTransformFeedbackVaryingNV	shared/GLee.c	/^void __stdcall _Lazy_glGetTransformFeedbackVaryingNV(GLuint program, GLuint index, GLint * location)  {if (GLeeInit()) glGetTransformFeedbackVaryingNV(program, index, location);}$/;"	f
_Lazy_glGetUniformBufferSizeEXT	shared/GLee.c	/^GLint __stdcall _Lazy_glGetUniformBufferSizeEXT(GLuint program, GLint location)           {if (GLeeInit()) return glGetUniformBufferSizeEXT(program, location); return (GLint)0;}$/;"	f
_Lazy_glGetUniformLocation	shared/GLee.c	/^GLint __stdcall _Lazy_glGetUniformLocation(GLuint program, const GLchar * name)           {if (GLeeInit()) return glGetUniformLocation(program, name); return (GLint)0;}$/;"	f
_Lazy_glGetUniformLocationARB	shared/GLee.c	/^GLint __stdcall _Lazy_glGetUniformLocationARB(GLhandleARB programObj, const GLcharARB * name)  {if (GLeeInit()) return glGetUniformLocationARB(programObj, name); return (GLint)0;}$/;"	f
_Lazy_glGetUniformOffsetEXT	shared/GLee.c	/^GLintptr __stdcall _Lazy_glGetUniformOffsetEXT(GLuint program, GLint location)            {if (GLeeInit()) return glGetUniformOffsetEXT(program, location); return (GLintptr)0;}$/;"	f
_Lazy_glGetUniformfv	shared/GLee.c	/^void __stdcall _Lazy_glGetUniformfv(GLuint program, GLint location, GLfloat * params)     {if (GLeeInit()) glGetUniformfv(program, location, params);}$/;"	f
_Lazy_glGetUniformfvARB	shared/GLee.c	/^void __stdcall _Lazy_glGetUniformfvARB(GLhandleARB programObj, GLint location, GLfloat * params)  {if (GLeeInit()) glGetUniformfvARB(programObj, location, params);}$/;"	f
_Lazy_glGetUniformiv	shared/GLee.c	/^void __stdcall _Lazy_glGetUniformiv(GLuint program, GLint location, GLint * params)       {if (GLeeInit()) glGetUniformiv(program, location, params);}$/;"	f
_Lazy_glGetUniformivARB	shared/GLee.c	/^void __stdcall _Lazy_glGetUniformivARB(GLhandleARB programObj, GLint location, GLint * params)  {if (GLeeInit()) glGetUniformivARB(programObj, location, params);}$/;"	f
_Lazy_glGetUniformuivEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetUniformuivEXT(GLuint program, GLint location, GLuint * params)  {if (GLeeInit()) glGetUniformuivEXT(program, location, params);}$/;"	f
_Lazy_glGetVariantArrayObjectfvATI	shared/GLee.c	/^void __stdcall _Lazy_glGetVariantArrayObjectfvATI(GLuint id, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetVariantArrayObjectfvATI(id, pname, params);}$/;"	f
_Lazy_glGetVariantArrayObjectivATI	shared/GLee.c	/^void __stdcall _Lazy_glGetVariantArrayObjectivATI(GLuint id, GLenum pname, GLint * params)  {if (GLeeInit()) glGetVariantArrayObjectivATI(id, pname, params);}$/;"	f
_Lazy_glGetVariantBooleanvEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetVariantBooleanvEXT(GLuint id, GLenum value, GLboolean * data)   {if (GLeeInit()) glGetVariantBooleanvEXT(id, value, data);}$/;"	f
_Lazy_glGetVariantFloatvEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetVariantFloatvEXT(GLuint id, GLenum value, GLfloat * data)       {if (GLeeInit()) glGetVariantFloatvEXT(id, value, data);}$/;"	f
_Lazy_glGetVariantIntegervEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetVariantIntegervEXT(GLuint id, GLenum value, GLint * data)       {if (GLeeInit()) glGetVariantIntegervEXT(id, value, data);}$/;"	f
_Lazy_glGetVariantPointervEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetVariantPointervEXT(GLuint id, GLenum value, GLvoid* * data)     {if (GLeeInit()) glGetVariantPointervEXT(id, value, data);}$/;"	f
_Lazy_glGetVaryingLocationNV	shared/GLee.c	/^GLint __stdcall _Lazy_glGetVaryingLocationNV(GLuint program, const GLchar * name)         {if (GLeeInit()) return glGetVaryingLocationNV(program, name); return (GLint)0;}$/;"	f
_Lazy_glGetVertexAttribArrayObjectfvATI	shared/GLee.c	/^void __stdcall _Lazy_glGetVertexAttribArrayObjectfvATI(GLuint index, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetVertexAttribArrayObjectfvATI(index, pname, params);}$/;"	f
_Lazy_glGetVertexAttribArrayObjectivATI	shared/GLee.c	/^void __stdcall _Lazy_glGetVertexAttribArrayObjectivATI(GLuint index, GLenum pname, GLint * params)  {if (GLeeInit()) glGetVertexAttribArrayObjectivATI(index, pname, params);}$/;"	f
_Lazy_glGetVertexAttribIivEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetVertexAttribIivEXT(GLuint index, GLenum pname, GLint * params)  {if (GLeeInit()) glGetVertexAttribIivEXT(index, pname, params);}$/;"	f
_Lazy_glGetVertexAttribIuivEXT	shared/GLee.c	/^void __stdcall _Lazy_glGetVertexAttribIuivEXT(GLuint index, GLenum pname, GLuint * params)  {if (GLeeInit()) glGetVertexAttribIuivEXT(index, pname, params);}$/;"	f
_Lazy_glGetVertexAttribPointerv	shared/GLee.c	/^void __stdcall _Lazy_glGetVertexAttribPointerv(GLuint index, GLenum pname, GLvoid* * pointer)  {if (GLeeInit()) glGetVertexAttribPointerv(index, pname, pointer);}$/;"	f
_Lazy_glGetVertexAttribPointervARB	shared/GLee.c	/^void __stdcall _Lazy_glGetVertexAttribPointervARB(GLuint index, GLenum pname, GLvoid* * pointer)  {if (GLeeInit()) glGetVertexAttribPointervARB(index, pname, pointer);}$/;"	f
_Lazy_glGetVertexAttribPointervNV	shared/GLee.c	/^void __stdcall _Lazy_glGetVertexAttribPointervNV(GLuint index, GLenum pname, GLvoid* * pointer)  {if (GLeeInit()) glGetVertexAttribPointervNV(index, pname, pointer);}$/;"	f
_Lazy_glGetVertexAttribdv	shared/GLee.c	/^void __stdcall _Lazy_glGetVertexAttribdv(GLuint index, GLenum pname, GLdouble * params)   {if (GLeeInit()) glGetVertexAttribdv(index, pname, params);}$/;"	f
_Lazy_glGetVertexAttribdvARB	shared/GLee.c	/^void __stdcall _Lazy_glGetVertexAttribdvARB(GLuint index, GLenum pname, GLdouble * params)  {if (GLeeInit()) glGetVertexAttribdvARB(index, pname, params);}$/;"	f
_Lazy_glGetVertexAttribdvNV	shared/GLee.c	/^void __stdcall _Lazy_glGetVertexAttribdvNV(GLuint index, GLenum pname, GLdouble * params)  {if (GLeeInit()) glGetVertexAttribdvNV(index, pname, params);}$/;"	f
_Lazy_glGetVertexAttribfv	shared/GLee.c	/^void __stdcall _Lazy_glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat * params)    {if (GLeeInit()) glGetVertexAttribfv(index, pname, params);}$/;"	f
_Lazy_glGetVertexAttribfvARB	shared/GLee.c	/^void __stdcall _Lazy_glGetVertexAttribfvARB(GLuint index, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetVertexAttribfvARB(index, pname, params);}$/;"	f
_Lazy_glGetVertexAttribfvNV	shared/GLee.c	/^void __stdcall _Lazy_glGetVertexAttribfvNV(GLuint index, GLenum pname, GLfloat * params)  {if (GLeeInit()) glGetVertexAttribfvNV(index, pname, params);}$/;"	f
_Lazy_glGetVertexAttribiv	shared/GLee.c	/^void __stdcall _Lazy_glGetVertexAttribiv(GLuint index, GLenum pname, GLint * params)      {if (GLeeInit()) glGetVertexAttribiv(index, pname, params);}$/;"	f
_Lazy_glGetVertexAttribivARB	shared/GLee.c	/^void __stdcall _Lazy_glGetVertexAttribivARB(GLuint index, GLenum pname, GLint * params)   {if (GLeeInit()) glGetVertexAttribivARB(index, pname, params);}$/;"	f
_Lazy_glGetVertexAttribivNV	shared/GLee.c	/^void __stdcall _Lazy_glGetVertexAttribivNV(GLuint index, GLenum pname, GLint * params)    {if (GLeeInit()) glGetVertexAttribivNV(index, pname, params);}$/;"	f
_Lazy_glGlobalAlphaFactorbSUN	shared/GLee.c	/^void __stdcall _Lazy_glGlobalAlphaFactorbSUN(GLbyte factor)                               {if (GLeeInit()) glGlobalAlphaFactorbSUN(factor);}$/;"	f
_Lazy_glGlobalAlphaFactordSUN	shared/GLee.c	/^void __stdcall _Lazy_glGlobalAlphaFactordSUN(GLdouble factor)                             {if (GLeeInit()) glGlobalAlphaFactordSUN(factor);}$/;"	f
_Lazy_glGlobalAlphaFactorfSUN	shared/GLee.c	/^void __stdcall _Lazy_glGlobalAlphaFactorfSUN(GLfloat factor)                              {if (GLeeInit()) glGlobalAlphaFactorfSUN(factor);}$/;"	f
_Lazy_glGlobalAlphaFactoriSUN	shared/GLee.c	/^void __stdcall _Lazy_glGlobalAlphaFactoriSUN(GLint factor)                                {if (GLeeInit()) glGlobalAlphaFactoriSUN(factor);}$/;"	f
_Lazy_glGlobalAlphaFactorsSUN	shared/GLee.c	/^void __stdcall _Lazy_glGlobalAlphaFactorsSUN(GLshort factor)                              {if (GLeeInit()) glGlobalAlphaFactorsSUN(factor);}$/;"	f
_Lazy_glGlobalAlphaFactorubSUN	shared/GLee.c	/^void __stdcall _Lazy_glGlobalAlphaFactorubSUN(GLubyte factor)                             {if (GLeeInit()) glGlobalAlphaFactorubSUN(factor);}$/;"	f
_Lazy_glGlobalAlphaFactoruiSUN	shared/GLee.c	/^void __stdcall _Lazy_glGlobalAlphaFactoruiSUN(GLuint factor)                              {if (GLeeInit()) glGlobalAlphaFactoruiSUN(factor);}$/;"	f
_Lazy_glGlobalAlphaFactorusSUN	shared/GLee.c	/^void __stdcall _Lazy_glGlobalAlphaFactorusSUN(GLushort factor)                            {if (GLeeInit()) glGlobalAlphaFactorusSUN(factor);}$/;"	f
_Lazy_glHintPGI	shared/GLee.c	/^void __stdcall _Lazy_glHintPGI(GLenum target, GLint mode)                                 {if (GLeeInit()) glHintPGI(target, mode);}$/;"	f
_Lazy_glHistogram	shared/GLee.c	/^void __stdcall _Lazy_glHistogram(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)  {if (GLeeInit()) glHistogram(target, width, internalformat, sink);}$/;"	f
_Lazy_glHistogramEXT	shared/GLee.c	/^void __stdcall _Lazy_glHistogramEXT(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)  {if (GLeeInit()) glHistogramEXT(target, width, internalformat, sink);}$/;"	f
_Lazy_glIglooInterfaceSGIX	shared/GLee.c	/^void __stdcall _Lazy_glIglooInterfaceSGIX(GLenum pname, const GLvoid * params)            {if (GLeeInit()) glIglooInterfaceSGIX(pname, params);}$/;"	f
_Lazy_glImageTransformParameterfHP	shared/GLee.c	/^void __stdcall _Lazy_glImageTransformParameterfHP(GLenum target, GLenum pname, GLfloat param)  {if (GLeeInit()) glImageTransformParameterfHP(target, pname, param);}$/;"	f
_Lazy_glImageTransformParameterfvHP	shared/GLee.c	/^void __stdcall _Lazy_glImageTransformParameterfvHP(GLenum target, GLenum pname, const GLfloat * params)  {if (GLeeInit()) glImageTransformParameterfvHP(target, pname, params);}$/;"	f
_Lazy_glImageTransformParameteriHP	shared/GLee.c	/^void __stdcall _Lazy_glImageTransformParameteriHP(GLenum target, GLenum pname, GLint param)  {if (GLeeInit()) glImageTransformParameteriHP(target, pname, param);}$/;"	f
_Lazy_glImageTransformParameterivHP	shared/GLee.c	/^void __stdcall _Lazy_glImageTransformParameterivHP(GLenum target, GLenum pname, const GLint * params)  {if (GLeeInit()) glImageTransformParameterivHP(target, pname, params);}$/;"	f
_Lazy_glIndexFuncEXT	shared/GLee.c	/^void __stdcall _Lazy_glIndexFuncEXT(GLenum func, GLclampf ref)                            {if (GLeeInit()) glIndexFuncEXT(func, ref);}$/;"	f
_Lazy_glIndexMaterialEXT	shared/GLee.c	/^void __stdcall _Lazy_glIndexMaterialEXT(GLenum face, GLenum mode)                         {if (GLeeInit()) glIndexMaterialEXT(face, mode);}$/;"	f
_Lazy_glIndexPointerEXT	shared/GLee.c	/^void __stdcall _Lazy_glIndexPointerEXT(GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer)  {if (GLeeInit()) glIndexPointerEXT(type, stride, count, pointer);}$/;"	f
_Lazy_glIndexPointerListIBM	shared/GLee.c	/^void __stdcall _Lazy_glIndexPointerListIBM(GLenum type, GLint stride, const GLvoid* * pointer, GLint ptrstride)  {if (GLeeInit()) glIndexPointerListIBM(type, stride, pointer, ptrstride);}$/;"	f
_Lazy_glInsertComponentEXT	shared/GLee.c	/^void __stdcall _Lazy_glInsertComponentEXT(GLuint res, GLuint src, GLuint num)             {if (GLeeInit()) glInsertComponentEXT(res, src, num);}$/;"	f
_Lazy_glInstrumentsBufferSGIX	shared/GLee.c	/^void __stdcall _Lazy_glInstrumentsBufferSGIX(GLsizei size, GLint * buffer)                {if (GLeeInit()) glInstrumentsBufferSGIX(size, buffer);}$/;"	f
_Lazy_glIsAsyncMarkerSGIX	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsAsyncMarkerSGIX(GLuint marker)                              {if (GLeeInit()) return glIsAsyncMarkerSGIX(marker); return (GLboolean)0;}$/;"	f
_Lazy_glIsBuffer	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsBuffer(GLuint buffer)                                       {if (GLeeInit()) return glIsBuffer(buffer); return (GLboolean)0;}$/;"	f
_Lazy_glIsBufferARB	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsBufferARB(GLuint buffer)                                    {if (GLeeInit()) return glIsBufferARB(buffer); return (GLboolean)0;}$/;"	f
_Lazy_glIsEnabledIndexedEXT	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsEnabledIndexedEXT(GLenum target, GLuint index)              {if (GLeeInit()) return glIsEnabledIndexedEXT(target, index); return (GLboolean)0;}$/;"	f
_Lazy_glIsFenceAPPLE	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsFenceAPPLE(GLuint fence)                                    {if (GLeeInit()) return glIsFenceAPPLE(fence); return (GLboolean)0;}$/;"	f
_Lazy_glIsFenceNV	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsFenceNV(GLuint fence)                                       {if (GLeeInit()) return glIsFenceNV(fence); return (GLboolean)0;}$/;"	f
_Lazy_glIsFramebufferEXT	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsFramebufferEXT(GLuint framebuffer)                          {if (GLeeInit()) return glIsFramebufferEXT(framebuffer); return (GLboolean)0;}$/;"	f
_Lazy_glIsObjectBufferATI	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsObjectBufferATI(GLuint buffer)                              {if (GLeeInit()) return glIsObjectBufferATI(buffer); return (GLboolean)0;}$/;"	f
_Lazy_glIsOcclusionQueryNV	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsOcclusionQueryNV(GLuint id)                                 {if (GLeeInit()) return glIsOcclusionQueryNV(id); return (GLboolean)0;}$/;"	f
_Lazy_glIsProgram	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsProgram(GLuint program)                                     {if (GLeeInit()) return glIsProgram(program); return (GLboolean)0;}$/;"	f
_Lazy_glIsProgramARB	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsProgramARB(GLuint program)                                  {if (GLeeInit()) return glIsProgramARB(program); return (GLboolean)0;}$/;"	f
_Lazy_glIsProgramNV	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsProgramNV(GLuint id)                                        {if (GLeeInit()) return glIsProgramNV(id); return (GLboolean)0;}$/;"	f
_Lazy_glIsQuery	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsQuery(GLuint id)                                            {if (GLeeInit()) return glIsQuery(id); return (GLboolean)0;}$/;"	f
_Lazy_glIsQueryARB	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsQueryARB(GLuint id)                                         {if (GLeeInit()) return glIsQueryARB(id); return (GLboolean)0;}$/;"	f
_Lazy_glIsRenderbufferEXT	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsRenderbufferEXT(GLuint renderbuffer)                        {if (GLeeInit()) return glIsRenderbufferEXT(renderbuffer); return (GLboolean)0;}$/;"	f
_Lazy_glIsShader	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsShader(GLuint shader)                                       {if (GLeeInit()) return glIsShader(shader); return (GLboolean)0;}$/;"	f
_Lazy_glIsTextureEXT	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsTextureEXT(GLuint texture)                                  {if (GLeeInit()) return glIsTextureEXT(texture); return (GLboolean)0;}$/;"	f
_Lazy_glIsVariantEnabledEXT	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsVariantEnabledEXT(GLuint id, GLenum cap)                    {if (GLeeInit()) return glIsVariantEnabledEXT(id, cap); return (GLboolean)0;}$/;"	f
_Lazy_glIsVertexArrayAPPLE	shared/GLee.c	/^GLboolean __stdcall _Lazy_glIsVertexArrayAPPLE(GLuint array)                              {if (GLeeInit()) return glIsVertexArrayAPPLE(array); return (GLboolean)0;}$/;"	f
_Lazy_glLightEnviEXT	shared/GLee.c	/^GLvoid __stdcall _Lazy_glLightEnviEXT(GLenum pname, GLint param)                          {if (GLeeInit()) glLightEnviEXT(pname, param);}$/;"	f
_Lazy_glLightEnviSGIX	shared/GLee.c	/^void __stdcall _Lazy_glLightEnviSGIX(GLenum pname, GLint param)                           {if (GLeeInit()) glLightEnviSGIX(pname, param);}$/;"	f
_Lazy_glLinkProgram	shared/GLee.c	/^void __stdcall _Lazy_glLinkProgram(GLuint program)                                        {if (GLeeInit()) glLinkProgram(program);}$/;"	f
_Lazy_glLinkProgramARB	shared/GLee.c	/^void __stdcall _Lazy_glLinkProgramARB(GLhandleARB programObj)                             {if (GLeeInit()) glLinkProgramARB(programObj);}$/;"	f
_Lazy_glListParameterfSGIX	shared/GLee.c	/^void __stdcall _Lazy_glListParameterfSGIX(GLuint list, GLenum pname, GLfloat param)       {if (GLeeInit()) glListParameterfSGIX(list, pname, param);}$/;"	f
_Lazy_glListParameterfvSGIX	shared/GLee.c	/^void __stdcall _Lazy_glListParameterfvSGIX(GLuint list, GLenum pname, const GLfloat * params)  {if (GLeeInit()) glListParameterfvSGIX(list, pname, params);}$/;"	f
_Lazy_glListParameteriSGIX	shared/GLee.c	/^void __stdcall _Lazy_glListParameteriSGIX(GLuint list, GLenum pname, GLint param)         {if (GLeeInit()) glListParameteriSGIX(list, pname, param);}$/;"	f
_Lazy_glListParameterivSGIX	shared/GLee.c	/^void __stdcall _Lazy_glListParameterivSGIX(GLuint list, GLenum pname, const GLint * params)  {if (GLeeInit()) glListParameterivSGIX(list, pname, params);}$/;"	f
_Lazy_glLoadIdentityDeformationMapSGIX	shared/GLee.c	/^void __stdcall _Lazy_glLoadIdentityDeformationMapSGIX(GLbitfield mask)                    {if (GLeeInit()) glLoadIdentityDeformationMapSGIX(mask);}$/;"	f
_Lazy_glLoadProgramNV	shared/GLee.c	/^void __stdcall _Lazy_glLoadProgramNV(GLenum target, GLuint id, GLsizei len, const GLubyte * program)  {if (GLeeInit()) glLoadProgramNV(target, id, len, program);}$/;"	f
_Lazy_glLoadTransposeMatrixd	shared/GLee.c	/^void __stdcall _Lazy_glLoadTransposeMatrixd(const GLdouble * m)                           {if (GLeeInit()) glLoadTransposeMatrixd(m);}$/;"	f
_Lazy_glLoadTransposeMatrixdARB	shared/GLee.c	/^void __stdcall _Lazy_glLoadTransposeMatrixdARB(const GLdouble * m)                        {if (GLeeInit()) glLoadTransposeMatrixdARB(m);}$/;"	f
_Lazy_glLoadTransposeMatrixf	shared/GLee.c	/^void __stdcall _Lazy_glLoadTransposeMatrixf(const GLfloat * m)                            {if (GLeeInit()) glLoadTransposeMatrixf(m);}$/;"	f
_Lazy_glLoadTransposeMatrixfARB	shared/GLee.c	/^void __stdcall _Lazy_glLoadTransposeMatrixfARB(const GLfloat * m)                         {if (GLeeInit()) glLoadTransposeMatrixfARB(m);}$/;"	f
_Lazy_glLockArraysEXT	shared/GLee.c	/^void __stdcall _Lazy_glLockArraysEXT(GLint first, GLsizei count)                          {if (GLeeInit()) glLockArraysEXT(first, count);}$/;"	f
_Lazy_glMapBuffer	shared/GLee.c	/^GLvoid* __stdcall _Lazy_glMapBuffer(GLenum target, GLenum access)                         {if (GLeeInit()) return glMapBuffer(target, access); return (GLvoid*)0;}$/;"	f
_Lazy_glMapBufferARB	shared/GLee.c	/^GLvoid* __stdcall _Lazy_glMapBufferARB(GLenum target, GLenum access)                      {if (GLeeInit()) return glMapBufferARB(target, access); return (GLvoid*)0;}$/;"	f
_Lazy_glMapControlPointsNV	shared/GLee.c	/^void __stdcall _Lazy_glMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid * points)  {if (GLeeInit()) glMapControlPointsNV(target, index, type, ustride, vstride, uorder, vorder, packed, points);}$/;"	f
_Lazy_glMapObjectBufferATI	shared/GLee.c	/^GLvoid* __stdcall _Lazy_glMapObjectBufferATI(GLuint buffer)                               {if (GLeeInit()) return glMapObjectBufferATI(buffer); return (GLvoid*)0;}$/;"	f
_Lazy_glMapParameterfvNV	shared/GLee.c	/^void __stdcall _Lazy_glMapParameterfvNV(GLenum target, GLenum pname, const GLfloat * params)  {if (GLeeInit()) glMapParameterfvNV(target, pname, params);}$/;"	f
_Lazy_glMapParameterivNV	shared/GLee.c	/^void __stdcall _Lazy_glMapParameterivNV(GLenum target, GLenum pname, const GLint * params)  {if (GLeeInit()) glMapParameterivNV(target, pname, params);}$/;"	f
_Lazy_glMatrixIndexPointerARB	shared/GLee.c	/^void __stdcall _Lazy_glMatrixIndexPointerARB(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer)  {if (GLeeInit()) glMatrixIndexPointerARB(size, type, stride, pointer);}$/;"	f
_Lazy_glMatrixIndexubvARB	shared/GLee.c	/^void __stdcall _Lazy_glMatrixIndexubvARB(GLint size, const GLubyte * indices)             {if (GLeeInit()) glMatrixIndexubvARB(size, indices);}$/;"	f
_Lazy_glMatrixIndexuivARB	shared/GLee.c	/^void __stdcall _Lazy_glMatrixIndexuivARB(GLint size, const GLuint * indices)              {if (GLeeInit()) glMatrixIndexuivARB(size, indices);}$/;"	f
_Lazy_glMatrixIndexusvARB	shared/GLee.c	/^void __stdcall _Lazy_glMatrixIndexusvARB(GLint size, const GLushort * indices)            {if (GLeeInit()) glMatrixIndexusvARB(size, indices);}$/;"	f
_Lazy_glMinmax	shared/GLee.c	/^void __stdcall _Lazy_glMinmax(GLenum target, GLenum internalformat, GLboolean sink)       {if (GLeeInit()) glMinmax(target, internalformat, sink);}$/;"	f
_Lazy_glMinmaxEXT	shared/GLee.c	/^void __stdcall _Lazy_glMinmaxEXT(GLenum target, GLenum internalformat, GLboolean sink)    {if (GLeeInit()) glMinmaxEXT(target, internalformat, sink);}$/;"	f
_Lazy_glMultTransposeMatrixd	shared/GLee.c	/^void __stdcall _Lazy_glMultTransposeMatrixd(const GLdouble * m)                           {if (GLeeInit()) glMultTransposeMatrixd(m);}$/;"	f
_Lazy_glMultTransposeMatrixdARB	shared/GLee.c	/^void __stdcall _Lazy_glMultTransposeMatrixdARB(const GLdouble * m)                        {if (GLeeInit()) glMultTransposeMatrixdARB(m);}$/;"	f
_Lazy_glMultTransposeMatrixf	shared/GLee.c	/^void __stdcall _Lazy_glMultTransposeMatrixf(const GLfloat * m)                            {if (GLeeInit()) glMultTransposeMatrixf(m);}$/;"	f
_Lazy_glMultTransposeMatrixfARB	shared/GLee.c	/^void __stdcall _Lazy_glMultTransposeMatrixfARB(const GLfloat * m)                         {if (GLeeInit()) glMultTransposeMatrixfARB(m);}$/;"	f
_Lazy_glMultiDrawArrays	shared/GLee.c	/^void __stdcall _Lazy_glMultiDrawArrays(GLenum mode, GLint * first, GLsizei * count, GLsizei primcount)  {if (GLeeInit()) glMultiDrawArrays(mode, first, count, primcount);}$/;"	f
_Lazy_glMultiDrawArraysEXT	shared/GLee.c	/^void __stdcall _Lazy_glMultiDrawArraysEXT(GLenum mode, GLint * first, GLsizei * count, GLsizei primcount)  {if (GLeeInit()) glMultiDrawArraysEXT(mode, first, count, primcount);}$/;"	f
_Lazy_glMultiDrawElementArrayAPPLE	shared/GLee.c	/^void __stdcall _Lazy_glMultiDrawElementArrayAPPLE(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount)  {if (GLeeInit()) glMultiDrawElementArrayAPPLE(mode, first, count, primcount);}$/;"	f
_Lazy_glMultiDrawElements	shared/GLee.c	/^void __stdcall _Lazy_glMultiDrawElements(GLenum mode, const GLsizei * count, GLenum type, const GLvoid* * indices, GLsizei primcount)  {if (GLeeInit()) glMultiDrawElements(mode, count, type, indices, primcount);}$/;"	f
_Lazy_glMultiDrawElementsEXT	shared/GLee.c	/^void __stdcall _Lazy_glMultiDrawElementsEXT(GLenum mode, const GLsizei * count, GLenum type, const GLvoid* * indices, GLsizei primcount)  {if (GLeeInit()) glMultiDrawElementsEXT(mode, count, type, indices, primcount);}$/;"	f
_Lazy_glMultiDrawRangeElementArrayAPPLE	shared/GLee.c	/^void __stdcall _Lazy_glMultiDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, const GLint * first, const GLsizei * count, GLsizei primcount)  {if (GLeeInit()) glMultiDrawRangeElementArrayAPPLE(mode, start, end, first, count, primcount);}$/;"	f
_Lazy_glMultiModeDrawArraysIBM	shared/GLee.c	/^void __stdcall _Lazy_glMultiModeDrawArraysIBM(const GLenum * mode, const GLint * first, const GLsizei * count, GLsizei primcount, GLint modestride)  {if (GLeeInit()) glMultiModeDrawArraysIBM(mode, first, count, primcount, modestride);}$/;"	f
_Lazy_glMultiModeDrawElementsIBM	shared/GLee.c	/^void __stdcall _Lazy_glMultiModeDrawElementsIBM(const GLenum * mode, const GLsizei * count, GLenum type, const GLvoid* const * indices, GLsizei primcount, GLint modestride)  {if (GLeeInit()) glMultiModeDrawElementsIBM(mode, count, type, indices, primcount, modestride);}$/;"	f
_Lazy_glMultiTexCoord1d	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1d(GLenum target, GLdouble s)                         {if (GLeeInit()) glMultiTexCoord1d(target, s);}$/;"	f
_Lazy_glMultiTexCoord1dARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1dARB(GLenum target, GLdouble s)                      {if (GLeeInit()) glMultiTexCoord1dARB(target, s);}$/;"	f
_Lazy_glMultiTexCoord1dv	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1dv(GLenum target, const GLdouble * v)                {if (GLeeInit()) glMultiTexCoord1dv(target, v);}$/;"	f
_Lazy_glMultiTexCoord1dvARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1dvARB(GLenum target, const GLdouble * v)             {if (GLeeInit()) glMultiTexCoord1dvARB(target, v);}$/;"	f
_Lazy_glMultiTexCoord1f	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1f(GLenum target, GLfloat s)                          {if (GLeeInit()) glMultiTexCoord1f(target, s);}$/;"	f
_Lazy_glMultiTexCoord1fARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1fARB(GLenum target, GLfloat s)                       {if (GLeeInit()) glMultiTexCoord1fARB(target, s);}$/;"	f
_Lazy_glMultiTexCoord1fv	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1fv(GLenum target, const GLfloat * v)                 {if (GLeeInit()) glMultiTexCoord1fv(target, v);}$/;"	f
_Lazy_glMultiTexCoord1fvARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1fvARB(GLenum target, const GLfloat * v)              {if (GLeeInit()) glMultiTexCoord1fvARB(target, v);}$/;"	f
_Lazy_glMultiTexCoord1hNV	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1hNV(GLenum target, GLhalfNV s)                       {if (GLeeInit()) glMultiTexCoord1hNV(target, s);}$/;"	f
_Lazy_glMultiTexCoord1hvNV	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1hvNV(GLenum target, const GLhalfNV * v)              {if (GLeeInit()) glMultiTexCoord1hvNV(target, v);}$/;"	f
_Lazy_glMultiTexCoord1i	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1i(GLenum target, GLint s)                            {if (GLeeInit()) glMultiTexCoord1i(target, s);}$/;"	f
_Lazy_glMultiTexCoord1iARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1iARB(GLenum target, GLint s)                         {if (GLeeInit()) glMultiTexCoord1iARB(target, s);}$/;"	f
_Lazy_glMultiTexCoord1iv	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1iv(GLenum target, const GLint * v)                   {if (GLeeInit()) glMultiTexCoord1iv(target, v);}$/;"	f
_Lazy_glMultiTexCoord1ivARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1ivARB(GLenum target, const GLint * v)                {if (GLeeInit()) glMultiTexCoord1ivARB(target, v);}$/;"	f
_Lazy_glMultiTexCoord1s	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1s(GLenum target, GLshort s)                          {if (GLeeInit()) glMultiTexCoord1s(target, s);}$/;"	f
_Lazy_glMultiTexCoord1sARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1sARB(GLenum target, GLshort s)                       {if (GLeeInit()) glMultiTexCoord1sARB(target, s);}$/;"	f
_Lazy_glMultiTexCoord1sv	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1sv(GLenum target, const GLshort * v)                 {if (GLeeInit()) glMultiTexCoord1sv(target, v);}$/;"	f
_Lazy_glMultiTexCoord1svARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord1svARB(GLenum target, const GLshort * v)              {if (GLeeInit()) glMultiTexCoord1svARB(target, v);}$/;"	f
_Lazy_glMultiTexCoord2d	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2d(GLenum target, GLdouble s, GLdouble t)             {if (GLeeInit()) glMultiTexCoord2d(target, s, t);}$/;"	f
_Lazy_glMultiTexCoord2dARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2dARB(GLenum target, GLdouble s, GLdouble t)          {if (GLeeInit()) glMultiTexCoord2dARB(target, s, t);}$/;"	f
_Lazy_glMultiTexCoord2dv	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2dv(GLenum target, const GLdouble * v)                {if (GLeeInit()) glMultiTexCoord2dv(target, v);}$/;"	f
_Lazy_glMultiTexCoord2dvARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2dvARB(GLenum target, const GLdouble * v)             {if (GLeeInit()) glMultiTexCoord2dvARB(target, v);}$/;"	f
_Lazy_glMultiTexCoord2f	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2f(GLenum target, GLfloat s, GLfloat t)               {if (GLeeInit()) glMultiTexCoord2f(target, s, t);}$/;"	f
_Lazy_glMultiTexCoord2fARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2fARB(GLenum target, GLfloat s, GLfloat t)            {if (GLeeInit()) glMultiTexCoord2fARB(target, s, t);}$/;"	f
_Lazy_glMultiTexCoord2fv	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2fv(GLenum target, const GLfloat * v)                 {if (GLeeInit()) glMultiTexCoord2fv(target, v);}$/;"	f
_Lazy_glMultiTexCoord2fvARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2fvARB(GLenum target, const GLfloat * v)              {if (GLeeInit()) glMultiTexCoord2fvARB(target, v);}$/;"	f
_Lazy_glMultiTexCoord2hNV	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2hNV(GLenum target, GLhalfNV s, GLhalfNV t)           {if (GLeeInit()) glMultiTexCoord2hNV(target, s, t);}$/;"	f
_Lazy_glMultiTexCoord2hvNV	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2hvNV(GLenum target, const GLhalfNV * v)              {if (GLeeInit()) glMultiTexCoord2hvNV(target, v);}$/;"	f
_Lazy_glMultiTexCoord2i	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2i(GLenum target, GLint s, GLint t)                   {if (GLeeInit()) glMultiTexCoord2i(target, s, t);}$/;"	f
_Lazy_glMultiTexCoord2iARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2iARB(GLenum target, GLint s, GLint t)                {if (GLeeInit()) glMultiTexCoord2iARB(target, s, t);}$/;"	f
_Lazy_glMultiTexCoord2iv	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2iv(GLenum target, const GLint * v)                   {if (GLeeInit()) glMultiTexCoord2iv(target, v);}$/;"	f
_Lazy_glMultiTexCoord2ivARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2ivARB(GLenum target, const GLint * v)                {if (GLeeInit()) glMultiTexCoord2ivARB(target, v);}$/;"	f
_Lazy_glMultiTexCoord2s	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2s(GLenum target, GLshort s, GLshort t)               {if (GLeeInit()) glMultiTexCoord2s(target, s, t);}$/;"	f
_Lazy_glMultiTexCoord2sARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2sARB(GLenum target, GLshort s, GLshort t)            {if (GLeeInit()) glMultiTexCoord2sARB(target, s, t);}$/;"	f
_Lazy_glMultiTexCoord2sv	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2sv(GLenum target, const GLshort * v)                 {if (GLeeInit()) glMultiTexCoord2sv(target, v);}$/;"	f
_Lazy_glMultiTexCoord2svARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord2svARB(GLenum target, const GLshort * v)              {if (GLeeInit()) glMultiTexCoord2svARB(target, v);}$/;"	f
_Lazy_glMultiTexCoord3d	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3d(GLenum target, GLdouble s, GLdouble t, GLdouble r)  {if (GLeeInit()) glMultiTexCoord3d(target, s, t, r);}$/;"	f
_Lazy_glMultiTexCoord3dARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r)  {if (GLeeInit()) glMultiTexCoord3dARB(target, s, t, r);}$/;"	f
_Lazy_glMultiTexCoord3dv	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3dv(GLenum target, const GLdouble * v)                {if (GLeeInit()) glMultiTexCoord3dv(target, v);}$/;"	f
_Lazy_glMultiTexCoord3dvARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3dvARB(GLenum target, const GLdouble * v)             {if (GLeeInit()) glMultiTexCoord3dvARB(target, v);}$/;"	f
_Lazy_glMultiTexCoord3f	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3f(GLenum target, GLfloat s, GLfloat t, GLfloat r)    {if (GLeeInit()) glMultiTexCoord3f(target, s, t, r);}$/;"	f
_Lazy_glMultiTexCoord3fARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r)  {if (GLeeInit()) glMultiTexCoord3fARB(target, s, t, r);}$/;"	f
_Lazy_glMultiTexCoord3fv	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3fv(GLenum target, const GLfloat * v)                 {if (GLeeInit()) glMultiTexCoord3fv(target, v);}$/;"	f
_Lazy_glMultiTexCoord3fvARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3fvARB(GLenum target, const GLfloat * v)              {if (GLeeInit()) glMultiTexCoord3fvARB(target, v);}$/;"	f
_Lazy_glMultiTexCoord3hNV	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r)  {if (GLeeInit()) glMultiTexCoord3hNV(target, s, t, r);}$/;"	f
_Lazy_glMultiTexCoord3hvNV	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3hvNV(GLenum target, const GLhalfNV * v)              {if (GLeeInit()) glMultiTexCoord3hvNV(target, v);}$/;"	f
_Lazy_glMultiTexCoord3i	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3i(GLenum target, GLint s, GLint t, GLint r)          {if (GLeeInit()) glMultiTexCoord3i(target, s, t, r);}$/;"	f
_Lazy_glMultiTexCoord3iARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3iARB(GLenum target, GLint s, GLint t, GLint r)       {if (GLeeInit()) glMultiTexCoord3iARB(target, s, t, r);}$/;"	f
_Lazy_glMultiTexCoord3iv	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3iv(GLenum target, const GLint * v)                   {if (GLeeInit()) glMultiTexCoord3iv(target, v);}$/;"	f
_Lazy_glMultiTexCoord3ivARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3ivARB(GLenum target, const GLint * v)                {if (GLeeInit()) glMultiTexCoord3ivARB(target, v);}$/;"	f
_Lazy_glMultiTexCoord3s	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3s(GLenum target, GLshort s, GLshort t, GLshort r)    {if (GLeeInit()) glMultiTexCoord3s(target, s, t, r);}$/;"	f
_Lazy_glMultiTexCoord3sARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3sARB(GLenum target, GLshort s, GLshort t, GLshort r)  {if (GLeeInit()) glMultiTexCoord3sARB(target, s, t, r);}$/;"	f
_Lazy_glMultiTexCoord3sv	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3sv(GLenum target, const GLshort * v)                 {if (GLeeInit()) glMultiTexCoord3sv(target, v);}$/;"	f
_Lazy_glMultiTexCoord3svARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord3svARB(GLenum target, const GLshort * v)              {if (GLeeInit()) glMultiTexCoord3svARB(target, v);}$/;"	f
_Lazy_glMultiTexCoord4d	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4d(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)  {if (GLeeInit()) glMultiTexCoord4d(target, s, t, r, q);}$/;"	f
_Lazy_glMultiTexCoord4dARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)  {if (GLeeInit()) glMultiTexCoord4dARB(target, s, t, r, q);}$/;"	f
_Lazy_glMultiTexCoord4dv	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4dv(GLenum target, const GLdouble * v)                {if (GLeeInit()) glMultiTexCoord4dv(target, v);}$/;"	f
_Lazy_glMultiTexCoord4dvARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4dvARB(GLenum target, const GLdouble * v)             {if (GLeeInit()) glMultiTexCoord4dvARB(target, v);}$/;"	f
_Lazy_glMultiTexCoord4f	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)  {if (GLeeInit()) glMultiTexCoord4f(target, s, t, r, q);}$/;"	f
_Lazy_glMultiTexCoord4fARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)  {if (GLeeInit()) glMultiTexCoord4fARB(target, s, t, r, q);}$/;"	f
_Lazy_glMultiTexCoord4fv	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4fv(GLenum target, const GLfloat * v)                 {if (GLeeInit()) glMultiTexCoord4fv(target, v);}$/;"	f
_Lazy_glMultiTexCoord4fvARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4fvARB(GLenum target, const GLfloat * v)              {if (GLeeInit()) glMultiTexCoord4fvARB(target, v);}$/;"	f
_Lazy_glMultiTexCoord4hNV	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q)  {if (GLeeInit()) glMultiTexCoord4hNV(target, s, t, r, q);}$/;"	f
_Lazy_glMultiTexCoord4hvNV	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4hvNV(GLenum target, const GLhalfNV * v)              {if (GLeeInit()) glMultiTexCoord4hvNV(target, v);}$/;"	f
_Lazy_glMultiTexCoord4i	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4i(GLenum target, GLint s, GLint t, GLint r, GLint q)  {if (GLeeInit()) glMultiTexCoord4i(target, s, t, r, q);}$/;"	f
_Lazy_glMultiTexCoord4iARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4iARB(GLenum target, GLint s, GLint t, GLint r, GLint q)  {if (GLeeInit()) glMultiTexCoord4iARB(target, s, t, r, q);}$/;"	f
_Lazy_glMultiTexCoord4iv	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4iv(GLenum target, const GLint * v)                   {if (GLeeInit()) glMultiTexCoord4iv(target, v);}$/;"	f
_Lazy_glMultiTexCoord4ivARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4ivARB(GLenum target, const GLint * v)                {if (GLeeInit()) glMultiTexCoord4ivARB(target, v);}$/;"	f
_Lazy_glMultiTexCoord4s	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4s(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)  {if (GLeeInit()) glMultiTexCoord4s(target, s, t, r, q);}$/;"	f
_Lazy_glMultiTexCoord4sARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4sARB(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)  {if (GLeeInit()) glMultiTexCoord4sARB(target, s, t, r, q);}$/;"	f
_Lazy_glMultiTexCoord4sv	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4sv(GLenum target, const GLshort * v)                 {if (GLeeInit()) glMultiTexCoord4sv(target, v);}$/;"	f
_Lazy_glMultiTexCoord4svARB	shared/GLee.c	/^void __stdcall _Lazy_glMultiTexCoord4svARB(GLenum target, const GLshort * v)              {if (GLeeInit()) glMultiTexCoord4svARB(target, v);}$/;"	f
_Lazy_glNewObjectBufferATI	shared/GLee.c	/^GLuint __stdcall _Lazy_glNewObjectBufferATI(GLsizei size, const GLvoid * pointer, GLenum usage)  {if (GLeeInit()) return glNewObjectBufferATI(size, pointer, usage); return (GLuint)0;}$/;"	f
_Lazy_glNormal3fVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glNormal3fVertex3fSUN(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glNormal3fVertex3fSUN(nx, ny, nz, x, y, z);}$/;"	f
_Lazy_glNormal3fVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glNormal3fVertex3fvSUN(const GLfloat * n, const GLfloat * v)         {if (GLeeInit()) glNormal3fVertex3fvSUN(n, v);}$/;"	f
_Lazy_glNormal3hNV	shared/GLee.c	/^void __stdcall _Lazy_glNormal3hNV(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz)                  {if (GLeeInit()) glNormal3hNV(nx, ny, nz);}$/;"	f
_Lazy_glNormal3hvNV	shared/GLee.c	/^void __stdcall _Lazy_glNormal3hvNV(const GLhalfNV * v)                                    {if (GLeeInit()) glNormal3hvNV(v);}$/;"	f
_Lazy_glNormalPointerEXT	shared/GLee.c	/^void __stdcall _Lazy_glNormalPointerEXT(GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer)  {if (GLeeInit()) glNormalPointerEXT(type, stride, count, pointer);}$/;"	f
_Lazy_glNormalPointerListIBM	shared/GLee.c	/^void __stdcall _Lazy_glNormalPointerListIBM(GLenum type, GLint stride, const GLvoid* * pointer, GLint ptrstride)  {if (GLeeInit()) glNormalPointerListIBM(type, stride, pointer, ptrstride);}$/;"	f
_Lazy_glNormalPointervINTEL	shared/GLee.c	/^void __stdcall _Lazy_glNormalPointervINTEL(GLenum type, const GLvoid* * pointer)          {if (GLeeInit()) glNormalPointervINTEL(type, pointer);}$/;"	f
_Lazy_glNormalStream3bATI	shared/GLee.c	/^void __stdcall _Lazy_glNormalStream3bATI(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz)  {if (GLeeInit()) glNormalStream3bATI(stream, nx, ny, nz);}$/;"	f
_Lazy_glNormalStream3bvATI	shared/GLee.c	/^void __stdcall _Lazy_glNormalStream3bvATI(GLenum stream, const GLbyte * coords)           {if (GLeeInit()) glNormalStream3bvATI(stream, coords);}$/;"	f
_Lazy_glNormalStream3dATI	shared/GLee.c	/^void __stdcall _Lazy_glNormalStream3dATI(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz)  {if (GLeeInit()) glNormalStream3dATI(stream, nx, ny, nz);}$/;"	f
_Lazy_glNormalStream3dvATI	shared/GLee.c	/^void __stdcall _Lazy_glNormalStream3dvATI(GLenum stream, const GLdouble * coords)         {if (GLeeInit()) glNormalStream3dvATI(stream, coords);}$/;"	f
_Lazy_glNormalStream3fATI	shared/GLee.c	/^void __stdcall _Lazy_glNormalStream3fATI(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz)  {if (GLeeInit()) glNormalStream3fATI(stream, nx, ny, nz);}$/;"	f
_Lazy_glNormalStream3fvATI	shared/GLee.c	/^void __stdcall _Lazy_glNormalStream3fvATI(GLenum stream, const GLfloat * coords)          {if (GLeeInit()) glNormalStream3fvATI(stream, coords);}$/;"	f
_Lazy_glNormalStream3iATI	shared/GLee.c	/^void __stdcall _Lazy_glNormalStream3iATI(GLenum stream, GLint nx, GLint ny, GLint nz)     {if (GLeeInit()) glNormalStream3iATI(stream, nx, ny, nz);}$/;"	f
_Lazy_glNormalStream3ivATI	shared/GLee.c	/^void __stdcall _Lazy_glNormalStream3ivATI(GLenum stream, const GLint * coords)            {if (GLeeInit()) glNormalStream3ivATI(stream, coords);}$/;"	f
_Lazy_glNormalStream3sATI	shared/GLee.c	/^void __stdcall _Lazy_glNormalStream3sATI(GLenum stream, GLshort nx, GLshort ny, GLshort nz)  {if (GLeeInit()) glNormalStream3sATI(stream, nx, ny, nz);}$/;"	f
_Lazy_glNormalStream3svATI	shared/GLee.c	/^void __stdcall _Lazy_glNormalStream3svATI(GLenum stream, const GLshort * coords)          {if (GLeeInit()) glNormalStream3svATI(stream, coords);}$/;"	f
_Lazy_glOrthofOES	shared/GLee.c	/^GLvoid __stdcall _Lazy_glOrthofOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f)  {if (GLeeInit()) glOrthofOES(l, r, b, t, n, f);}$/;"	f
_Lazy_glPNTrianglesfATI	shared/GLee.c	/^void __stdcall _Lazy_glPNTrianglesfATI(GLenum pname, GLfloat param)                       {if (GLeeInit()) glPNTrianglesfATI(pname, param);}$/;"	f
_Lazy_glPNTrianglesiATI	shared/GLee.c	/^void __stdcall _Lazy_glPNTrianglesiATI(GLenum pname, GLint param)                         {if (GLeeInit()) glPNTrianglesiATI(pname, param);}$/;"	f
_Lazy_glPassTexCoordATI	shared/GLee.c	/^void __stdcall _Lazy_glPassTexCoordATI(GLuint dst, GLuint coord, GLenum swizzle)          {if (GLeeInit()) glPassTexCoordATI(dst, coord, swizzle);}$/;"	f
_Lazy_glPixelDataRangeNV	shared/GLee.c	/^void __stdcall _Lazy_glPixelDataRangeNV(GLenum target, GLsizei length, GLvoid * pointer)  {if (GLeeInit()) glPixelDataRangeNV(target, length, pointer);}$/;"	f
_Lazy_glPixelTexGenParameterfSGIS	shared/GLee.c	/^void __stdcall _Lazy_glPixelTexGenParameterfSGIS(GLenum pname, GLfloat param)             {if (GLeeInit()) glPixelTexGenParameterfSGIS(pname, param);}$/;"	f
_Lazy_glPixelTexGenParameterfvSGIS	shared/GLee.c	/^void __stdcall _Lazy_glPixelTexGenParameterfvSGIS(GLenum pname, const GLfloat * params)   {if (GLeeInit()) glPixelTexGenParameterfvSGIS(pname, params);}$/;"	f
_Lazy_glPixelTexGenParameteriSGIS	shared/GLee.c	/^void __stdcall _Lazy_glPixelTexGenParameteriSGIS(GLenum pname, GLint param)               {if (GLeeInit()) glPixelTexGenParameteriSGIS(pname, param);}$/;"	f
_Lazy_glPixelTexGenParameterivSGIS	shared/GLee.c	/^void __stdcall _Lazy_glPixelTexGenParameterivSGIS(GLenum pname, const GLint * params)     {if (GLeeInit()) glPixelTexGenParameterivSGIS(pname, params);}$/;"	f
_Lazy_glPixelTexGenSGIX	shared/GLee.c	/^void __stdcall _Lazy_glPixelTexGenSGIX(GLenum mode)                                       {if (GLeeInit()) glPixelTexGenSGIX(mode);}$/;"	f
_Lazy_glPixelTransformParameterfEXT	shared/GLee.c	/^void __stdcall _Lazy_glPixelTransformParameterfEXT(GLenum target, GLenum pname, GLfloat param)  {if (GLeeInit()) glPixelTransformParameterfEXT(target, pname, param);}$/;"	f
_Lazy_glPixelTransformParameterfvEXT	shared/GLee.c	/^void __stdcall _Lazy_glPixelTransformParameterfvEXT(GLenum target, GLenum pname, const GLfloat * params)  {if (GLeeInit()) glPixelTransformParameterfvEXT(target, pname, params);}$/;"	f
_Lazy_glPixelTransformParameteriEXT	shared/GLee.c	/^void __stdcall _Lazy_glPixelTransformParameteriEXT(GLenum target, GLenum pname, GLint param)  {if (GLeeInit()) glPixelTransformParameteriEXT(target, pname, param);}$/;"	f
_Lazy_glPixelTransformParameterivEXT	shared/GLee.c	/^void __stdcall _Lazy_glPixelTransformParameterivEXT(GLenum target, GLenum pname, const GLint * params)  {if (GLeeInit()) glPixelTransformParameterivEXT(target, pname, params);}$/;"	f
_Lazy_glPointParameterf	shared/GLee.c	/^void __stdcall _Lazy_glPointParameterf(GLenum pname, GLfloat param)                       {if (GLeeInit()) glPointParameterf(pname, param);}$/;"	f
_Lazy_glPointParameterfARB	shared/GLee.c	/^void __stdcall _Lazy_glPointParameterfARB(GLenum pname, GLfloat param)                    {if (GLeeInit()) glPointParameterfARB(pname, param);}$/;"	f
_Lazy_glPointParameterfEXT	shared/GLee.c	/^void __stdcall _Lazy_glPointParameterfEXT(GLenum pname, GLfloat param)                    {if (GLeeInit()) glPointParameterfEXT(pname, param);}$/;"	f
_Lazy_glPointParameterfSGIS	shared/GLee.c	/^void __stdcall _Lazy_glPointParameterfSGIS(GLenum pname, GLfloat param)                   {if (GLeeInit()) glPointParameterfSGIS(pname, param);}$/;"	f
_Lazy_glPointParameterfv	shared/GLee.c	/^void __stdcall _Lazy_glPointParameterfv(GLenum pname, const GLfloat * params)             {if (GLeeInit()) glPointParameterfv(pname, params);}$/;"	f
_Lazy_glPointParameterfvARB	shared/GLee.c	/^void __stdcall _Lazy_glPointParameterfvARB(GLenum pname, const GLfloat * params)          {if (GLeeInit()) glPointParameterfvARB(pname, params);}$/;"	f
_Lazy_glPointParameterfvEXT	shared/GLee.c	/^void __stdcall _Lazy_glPointParameterfvEXT(GLenum pname, const GLfloat * params)          {if (GLeeInit()) glPointParameterfvEXT(pname, params);}$/;"	f
_Lazy_glPointParameterfvSGIS	shared/GLee.c	/^void __stdcall _Lazy_glPointParameterfvSGIS(GLenum pname, const GLfloat * params)         {if (GLeeInit()) glPointParameterfvSGIS(pname, params);}$/;"	f
_Lazy_glPointParameteri	shared/GLee.c	/^void __stdcall _Lazy_glPointParameteri(GLenum pname, GLint param)                         {if (GLeeInit()) glPointParameteri(pname, param);}$/;"	f
_Lazy_glPointParameteriNV	shared/GLee.c	/^void __stdcall _Lazy_glPointParameteriNV(GLenum pname, GLint param)                       {if (GLeeInit()) glPointParameteriNV(pname, param);}$/;"	f
_Lazy_glPointParameteriv	shared/GLee.c	/^void __stdcall _Lazy_glPointParameteriv(GLenum pname, const GLint * params)               {if (GLeeInit()) glPointParameteriv(pname, params);}$/;"	f
_Lazy_glPointParameterivNV	shared/GLee.c	/^void __stdcall _Lazy_glPointParameterivNV(GLenum pname, const GLint * params)             {if (GLeeInit()) glPointParameterivNV(pname, params);}$/;"	f
_Lazy_glPollAsyncSGIX	shared/GLee.c	/^GLint __stdcall _Lazy_glPollAsyncSGIX(GLuint * markerp)                                   {if (GLeeInit()) return glPollAsyncSGIX(markerp); return (GLint)0;}$/;"	f
_Lazy_glPollInstrumentsSGIX	shared/GLee.c	/^GLint __stdcall _Lazy_glPollInstrumentsSGIX(GLint * marker_p)                             {if (GLeeInit()) return glPollInstrumentsSGIX(marker_p); return (GLint)0;}$/;"	f
_Lazy_glPolygonOffsetEXT	shared/GLee.c	/^void __stdcall _Lazy_glPolygonOffsetEXT(GLfloat factor, GLfloat bias)                     {if (GLeeInit()) glPolygonOffsetEXT(factor, bias);}$/;"	f
_Lazy_glPrimitiveRestartIndexNV	shared/GLee.c	/^void __stdcall _Lazy_glPrimitiveRestartIndexNV(GLuint index)                              {if (GLeeInit()) glPrimitiveRestartIndexNV(index);}$/;"	f
_Lazy_glPrimitiveRestartNV	shared/GLee.c	/^void __stdcall _Lazy_glPrimitiveRestartNV(void)                                           {if (GLeeInit()) glPrimitiveRestartNV();}$/;"	f
_Lazy_glPrioritizeTexturesEXT	shared/GLee.c	/^void __stdcall _Lazy_glPrioritizeTexturesEXT(GLsizei n, const GLuint * textures, const GLclampf * priorities)  {if (GLeeInit()) glPrioritizeTexturesEXT(n, textures, priorities);}$/;"	f
_Lazy_glProgramBufferParametersIivNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramBufferParametersIivNV(GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint * params)  {if (GLeeInit()) glProgramBufferParametersIivNV(target, buffer, index, count, params);}$/;"	f
_Lazy_glProgramBufferParametersIuivNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramBufferParametersIuivNV(GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint * params)  {if (GLeeInit()) glProgramBufferParametersIuivNV(target, buffer, index, count, params);}$/;"	f
_Lazy_glProgramBufferParametersfvNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramBufferParametersfvNV(GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat * params)  {if (GLeeInit()) glProgramBufferParametersfvNV(target, buffer, index, count, params);}$/;"	f
_Lazy_glProgramEnvParameter4dARB	shared/GLee.c	/^void __stdcall _Lazy_glProgramEnvParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)  {if (GLeeInit()) glProgramEnvParameter4dARB(target, index, x, y, z, w);}$/;"	f
_Lazy_glProgramEnvParameter4dvARB	shared/GLee.c	/^void __stdcall _Lazy_glProgramEnvParameter4dvARB(GLenum target, GLuint index, const GLdouble * params)  {if (GLeeInit()) glProgramEnvParameter4dvARB(target, index, params);}$/;"	f
_Lazy_glProgramEnvParameter4fARB	shared/GLee.c	/^void __stdcall _Lazy_glProgramEnvParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)  {if (GLeeInit()) glProgramEnvParameter4fARB(target, index, x, y, z, w);}$/;"	f
_Lazy_glProgramEnvParameter4fvARB	shared/GLee.c	/^void __stdcall _Lazy_glProgramEnvParameter4fvARB(GLenum target, GLuint index, const GLfloat * params)  {if (GLeeInit()) glProgramEnvParameter4fvARB(target, index, params);}$/;"	f
_Lazy_glProgramEnvParameterI4iNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramEnvParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)  {if (GLeeInit()) glProgramEnvParameterI4iNV(target, index, x, y, z, w);}$/;"	f
_Lazy_glProgramEnvParameterI4ivNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramEnvParameterI4ivNV(GLenum target, GLuint index, const GLint * params)  {if (GLeeInit()) glProgramEnvParameterI4ivNV(target, index, params);}$/;"	f
_Lazy_glProgramEnvParameterI4uiNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramEnvParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)  {if (GLeeInit()) glProgramEnvParameterI4uiNV(target, index, x, y, z, w);}$/;"	f
_Lazy_glProgramEnvParameterI4uivNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramEnvParameterI4uivNV(GLenum target, GLuint index, const GLuint * params)  {if (GLeeInit()) glProgramEnvParameterI4uivNV(target, index, params);}$/;"	f
_Lazy_glProgramEnvParametersI4ivNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramEnvParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint * params)  {if (GLeeInit()) glProgramEnvParametersI4ivNV(target, index, count, params);}$/;"	f
_Lazy_glProgramEnvParametersI4uivNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramEnvParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint * params)  {if (GLeeInit()) glProgramEnvParametersI4uivNV(target, index, count, params);}$/;"	f
_Lazy_glProgramLocalParameter4dARB	shared/GLee.c	/^void __stdcall _Lazy_glProgramLocalParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)  {if (GLeeInit()) glProgramLocalParameter4dARB(target, index, x, y, z, w);}$/;"	f
_Lazy_glProgramLocalParameter4dvARB	shared/GLee.c	/^void __stdcall _Lazy_glProgramLocalParameter4dvARB(GLenum target, GLuint index, const GLdouble * params)  {if (GLeeInit()) glProgramLocalParameter4dvARB(target, index, params);}$/;"	f
_Lazy_glProgramLocalParameter4fARB	shared/GLee.c	/^void __stdcall _Lazy_glProgramLocalParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)  {if (GLeeInit()) glProgramLocalParameter4fARB(target, index, x, y, z, w);}$/;"	f
_Lazy_glProgramLocalParameter4fvARB	shared/GLee.c	/^void __stdcall _Lazy_glProgramLocalParameter4fvARB(GLenum target, GLuint index, const GLfloat * params)  {if (GLeeInit()) glProgramLocalParameter4fvARB(target, index, params);}$/;"	f
_Lazy_glProgramLocalParameterI4iNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramLocalParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)  {if (GLeeInit()) glProgramLocalParameterI4iNV(target, index, x, y, z, w);}$/;"	f
_Lazy_glProgramLocalParameterI4ivNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramLocalParameterI4ivNV(GLenum target, GLuint index, const GLint * params)  {if (GLeeInit()) glProgramLocalParameterI4ivNV(target, index, params);}$/;"	f
_Lazy_glProgramLocalParameterI4uiNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramLocalParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)  {if (GLeeInit()) glProgramLocalParameterI4uiNV(target, index, x, y, z, w);}$/;"	f
_Lazy_glProgramLocalParameterI4uivNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramLocalParameterI4uivNV(GLenum target, GLuint index, const GLuint * params)  {if (GLeeInit()) glProgramLocalParameterI4uivNV(target, index, params);}$/;"	f
_Lazy_glProgramLocalParametersI4ivNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramLocalParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint * params)  {if (GLeeInit()) glProgramLocalParametersI4ivNV(target, index, count, params);}$/;"	f
_Lazy_glProgramLocalParametersI4uivNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramLocalParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint * params)  {if (GLeeInit()) glProgramLocalParametersI4uivNV(target, index, count, params);}$/;"	f
_Lazy_glProgramNamedParameter4dNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramNamedParameter4dNV(GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w)  {if (GLeeInit()) glProgramNamedParameter4dNV(id, len, name, x, y, z, w);}$/;"	f
_Lazy_glProgramNamedParameter4dvNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramNamedParameter4dvNV(GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v)  {if (GLeeInit()) glProgramNamedParameter4dvNV(id, len, name, v);}$/;"	f
_Lazy_glProgramNamedParameter4fNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramNamedParameter4fNV(GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w)  {if (GLeeInit()) glProgramNamedParameter4fNV(id, len, name, x, y, z, w);}$/;"	f
_Lazy_glProgramNamedParameter4fvNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramNamedParameter4fvNV(GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v)  {if (GLeeInit()) glProgramNamedParameter4fvNV(id, len, name, v);}$/;"	f
_Lazy_glProgramParameter4dNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramParameter4dNV(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)  {if (GLeeInit()) glProgramParameter4dNV(target, index, x, y, z, w);}$/;"	f
_Lazy_glProgramParameter4dvNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramParameter4dvNV(GLenum target, GLuint index, const GLdouble * v)  {if (GLeeInit()) glProgramParameter4dvNV(target, index, v);}$/;"	f
_Lazy_glProgramParameter4fNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramParameter4fNV(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)  {if (GLeeInit()) glProgramParameter4fNV(target, index, x, y, z, w);}$/;"	f
_Lazy_glProgramParameter4fvNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramParameter4fvNV(GLenum target, GLuint index, const GLfloat * v)  {if (GLeeInit()) glProgramParameter4fvNV(target, index, v);}$/;"	f
_Lazy_glProgramParameteriEXT	shared/GLee.c	/^void __stdcall _Lazy_glProgramParameteriEXT(GLuint program, GLenum pname, GLint value)    {if (GLeeInit()) glProgramParameteriEXT(program, pname, value);}$/;"	f
_Lazy_glProgramParameters4dvNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramParameters4dvNV(GLenum target, GLuint index, GLuint count, const GLdouble * v)  {if (GLeeInit()) glProgramParameters4dvNV(target, index, count, v);}$/;"	f
_Lazy_glProgramParameters4fvNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramParameters4fvNV(GLenum target, GLuint index, GLuint count, const GLfloat * v)  {if (GLeeInit()) glProgramParameters4fvNV(target, index, count, v);}$/;"	f
_Lazy_glProgramStringARB	shared/GLee.c	/^void __stdcall _Lazy_glProgramStringARB(GLenum target, GLenum format, GLsizei len, const GLvoid * string)  {if (GLeeInit()) glProgramStringARB(target, format, len, string);}$/;"	f
_Lazy_glProgramVertexLimitNV	shared/GLee.c	/^void __stdcall _Lazy_glProgramVertexLimitNV(GLenum target, GLint limit)                   {if (GLeeInit()) glProgramVertexLimitNV(target, limit);}$/;"	f
_Lazy_glReadInstrumentsSGIX	shared/GLee.c	/^void __stdcall _Lazy_glReadInstrumentsSGIX(GLint marker)                                  {if (GLeeInit()) glReadInstrumentsSGIX(marker);}$/;"	f
_Lazy_glReferencePlaneSGIX	shared/GLee.c	/^void __stdcall _Lazy_glReferencePlaneSGIX(const GLdouble * equation)                      {if (GLeeInit()) glReferencePlaneSGIX(equation);}$/;"	f
_Lazy_glRenderbufferStorageEXT	shared/GLee.c	/^void __stdcall _Lazy_glRenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)  {if (GLeeInit()) glRenderbufferStorageEXT(target, internalformat, width, height);}$/;"	f
_Lazy_glRenderbufferStorageMultisampleCoverageNV	shared/GLee.c	/^void __stdcall _Lazy_glRenderbufferStorageMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height)  {if (GLeeInit()) glRenderbufferStorageMultisampleCoverageNV(target, coverageSamples, colorSamples, internalformat, width, height);}$/;"	f
_Lazy_glRenderbufferStorageMultisampleEXT	shared/GLee.c	/^void __stdcall _Lazy_glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)  {if (GLeeInit()) glRenderbufferStorageMultisampleEXT(target, samples, internalformat, width, height);}$/;"	f
_Lazy_glReplacementCodePointerSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodePointerSUN(GLenum type, GLsizei stride, const GLvoid* * pointer)  {if (GLeeInit()) glReplacementCodePointerSUN(type, stride, pointer);}$/;"	f
_Lazy_glReplacementCodeubSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeubSUN(GLubyte code)                                 {if (GLeeInit()) glReplacementCodeubSUN(code);}$/;"	f
_Lazy_glReplacementCodeubvSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeubvSUN(const GLubyte * code)                        {if (GLeeInit()) glReplacementCodeubvSUN(code);}$/;"	f
_Lazy_glReplacementCodeuiColor3fVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiColor3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glReplacementCodeuiColor3fVertex3fSUN(rc, r, g, b, x, y, z);}$/;"	f
_Lazy_glReplacementCodeuiColor3fVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiColor3fVertex3fvSUN(const GLuint * rc, const GLfloat * c, const GLfloat * v)  {if (GLeeInit()) glReplacementCodeuiColor3fVertex3fvSUN(rc, c, v);}$/;"	f
_Lazy_glReplacementCodeuiColor4fNormal3fVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glReplacementCodeuiColor4fNormal3fVertex3fSUN(rc, r, g, b, a, nx, ny, nz, x, y, z);}$/;"	f
_Lazy_glReplacementCodeuiColor4fNormal3fVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiColor4fNormal3fVertex3fvSUN(const GLuint * rc, const GLfloat * c, const GLfloat * n, const GLfloat * v)  {if (GLeeInit()) glReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc, c, n, v);}$/;"	f
_Lazy_glReplacementCodeuiColor4ubVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiColor4ubVertex3fSUN(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glReplacementCodeuiColor4ubVertex3fSUN(rc, r, g, b, a, x, y, z);}$/;"	f
_Lazy_glReplacementCodeuiColor4ubVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiColor4ubVertex3fvSUN(const GLuint * rc, const GLubyte * c, const GLfloat * v)  {if (GLeeInit()) glReplacementCodeuiColor4ubVertex3fvSUN(rc, c, v);}$/;"	f
_Lazy_glReplacementCodeuiNormal3fVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiNormal3fVertex3fSUN(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glReplacementCodeuiNormal3fVertex3fSUN(rc, nx, ny, nz, x, y, z);}$/;"	f
_Lazy_glReplacementCodeuiNormal3fVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiNormal3fVertex3fvSUN(const GLuint * rc, const GLfloat * n, const GLfloat * v)  {if (GLeeInit()) glReplacementCodeuiNormal3fVertex3fvSUN(rc, n, v);}$/;"	f
_Lazy_glReplacementCodeuiSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiSUN(GLuint code)                                  {if (GLeeInit()) glReplacementCodeuiSUN(code);}$/;"	f
_Lazy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(rc, s, t, r, g, b, a, nx, ny, nz, x, y, z);}$/;"	f
_Lazy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(const GLuint * rc, const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v)  {if (GLeeInit()) glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc, tc, c, n, v);}$/;"	f
_Lazy_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(rc, s, t, nx, ny, nz, x, y, z);}$/;"	f
_Lazy_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(const GLuint * rc, const GLfloat * tc, const GLfloat * n, const GLfloat * v)  {if (GLeeInit()) glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc, tc, n, v);}$/;"	f
_Lazy_glReplacementCodeuiTexCoord2fVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiTexCoord2fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glReplacementCodeuiTexCoord2fVertex3fSUN(rc, s, t, x, y, z);}$/;"	f
_Lazy_glReplacementCodeuiTexCoord2fVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiTexCoord2fVertex3fvSUN(const GLuint * rc, const GLfloat * tc, const GLfloat * v)  {if (GLeeInit()) glReplacementCodeuiTexCoord2fVertex3fvSUN(rc, tc, v);}$/;"	f
_Lazy_glReplacementCodeuiVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiVertex3fSUN(GLuint rc, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glReplacementCodeuiVertex3fSUN(rc, x, y, z);}$/;"	f
_Lazy_glReplacementCodeuiVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuiVertex3fvSUN(const GLuint * rc, const GLfloat * v)  {if (GLeeInit()) glReplacementCodeuiVertex3fvSUN(rc, v);}$/;"	f
_Lazy_glReplacementCodeuivSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeuivSUN(const GLuint * code)                         {if (GLeeInit()) glReplacementCodeuivSUN(code);}$/;"	f
_Lazy_glReplacementCodeusSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeusSUN(GLushort code)                                {if (GLeeInit()) glReplacementCodeusSUN(code);}$/;"	f
_Lazy_glReplacementCodeusvSUN	shared/GLee.c	/^void __stdcall _Lazy_glReplacementCodeusvSUN(const GLushort * code)                       {if (GLeeInit()) glReplacementCodeusvSUN(code);}$/;"	f
_Lazy_glRequestResidentProgramsNV	shared/GLee.c	/^void __stdcall _Lazy_glRequestResidentProgramsNV(GLsizei n, const GLuint * programs)      {if (GLeeInit()) glRequestResidentProgramsNV(n, programs);}$/;"	f
_Lazy_glResetHistogram	shared/GLee.c	/^void __stdcall _Lazy_glResetHistogram(GLenum target)                                      {if (GLeeInit()) glResetHistogram(target);}$/;"	f
_Lazy_glResetHistogramEXT	shared/GLee.c	/^void __stdcall _Lazy_glResetHistogramEXT(GLenum target)                                   {if (GLeeInit()) glResetHistogramEXT(target);}$/;"	f
_Lazy_glResetMinmax	shared/GLee.c	/^void __stdcall _Lazy_glResetMinmax(GLenum target)                                         {if (GLeeInit()) glResetMinmax(target);}$/;"	f
_Lazy_glResetMinmaxEXT	shared/GLee.c	/^void __stdcall _Lazy_glResetMinmaxEXT(GLenum target)                                      {if (GLeeInit()) glResetMinmaxEXT(target);}$/;"	f
_Lazy_glResizeBuffersMESA	shared/GLee.c	/^void __stdcall _Lazy_glResizeBuffersMESA(void)                                            {if (GLeeInit()) glResizeBuffersMESA();}$/;"	f
_Lazy_glSampleCoverage	shared/GLee.c	/^void __stdcall _Lazy_glSampleCoverage(GLclampf value, GLboolean invert)                   {if (GLeeInit()) glSampleCoverage(value, invert);}$/;"	f
_Lazy_glSampleCoverageARB	shared/GLee.c	/^void __stdcall _Lazy_glSampleCoverageARB(GLclampf value, GLboolean invert)                {if (GLeeInit()) glSampleCoverageARB(value, invert);}$/;"	f
_Lazy_glSampleMapATI	shared/GLee.c	/^void __stdcall _Lazy_glSampleMapATI(GLuint dst, GLuint interp, GLenum swizzle)            {if (GLeeInit()) glSampleMapATI(dst, interp, swizzle);}$/;"	f
_Lazy_glSampleMaskEXT	shared/GLee.c	/^void __stdcall _Lazy_glSampleMaskEXT(GLclampf value, GLboolean invert)                    {if (GLeeInit()) glSampleMaskEXT(value, invert);}$/;"	f
_Lazy_glSampleMaskSGIS	shared/GLee.c	/^void __stdcall _Lazy_glSampleMaskSGIS(GLclampf value, GLboolean invert)                   {if (GLeeInit()) glSampleMaskSGIS(value, invert);}$/;"	f
_Lazy_glSamplePatternEXT	shared/GLee.c	/^void __stdcall _Lazy_glSamplePatternEXT(GLenum pattern)                                   {if (GLeeInit()) glSamplePatternEXT(pattern);}$/;"	f
_Lazy_glSamplePatternSGIS	shared/GLee.c	/^void __stdcall _Lazy_glSamplePatternSGIS(GLenum pattern)                                  {if (GLeeInit()) glSamplePatternSGIS(pattern);}$/;"	f
_Lazy_glSecondaryColor3b	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3b(GLbyte red, GLbyte green, GLbyte blue)            {if (GLeeInit()) glSecondaryColor3b(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3bEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3bEXT(GLbyte red, GLbyte green, GLbyte blue)         {if (GLeeInit()) glSecondaryColor3bEXT(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3bv	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3bv(const GLbyte * v)                                {if (GLeeInit()) glSecondaryColor3bv(v);}$/;"	f
_Lazy_glSecondaryColor3bvEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3bvEXT(const GLbyte * v)                             {if (GLeeInit()) glSecondaryColor3bvEXT(v);}$/;"	f
_Lazy_glSecondaryColor3d	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3d(GLdouble red, GLdouble green, GLdouble blue)      {if (GLeeInit()) glSecondaryColor3d(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3dEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3dEXT(GLdouble red, GLdouble green, GLdouble blue)   {if (GLeeInit()) glSecondaryColor3dEXT(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3dv	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3dv(const GLdouble * v)                              {if (GLeeInit()) glSecondaryColor3dv(v);}$/;"	f
_Lazy_glSecondaryColor3dvEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3dvEXT(const GLdouble * v)                           {if (GLeeInit()) glSecondaryColor3dvEXT(v);}$/;"	f
_Lazy_glSecondaryColor3f	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3f(GLfloat red, GLfloat green, GLfloat blue)         {if (GLeeInit()) glSecondaryColor3f(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3fEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3fEXT(GLfloat red, GLfloat green, GLfloat blue)      {if (GLeeInit()) glSecondaryColor3fEXT(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3fv	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3fv(const GLfloat * v)                               {if (GLeeInit()) glSecondaryColor3fv(v);}$/;"	f
_Lazy_glSecondaryColor3fvEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3fvEXT(const GLfloat * v)                            {if (GLeeInit()) glSecondaryColor3fvEXT(v);}$/;"	f
_Lazy_glSecondaryColor3hNV	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue)    {if (GLeeInit()) glSecondaryColor3hNV(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3hvNV	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3hvNV(const GLhalfNV * v)                            {if (GLeeInit()) glSecondaryColor3hvNV(v);}$/;"	f
_Lazy_glSecondaryColor3i	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3i(GLint red, GLint green, GLint blue)               {if (GLeeInit()) glSecondaryColor3i(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3iEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3iEXT(GLint red, GLint green, GLint blue)            {if (GLeeInit()) glSecondaryColor3iEXT(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3iv	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3iv(const GLint * v)                                 {if (GLeeInit()) glSecondaryColor3iv(v);}$/;"	f
_Lazy_glSecondaryColor3ivEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3ivEXT(const GLint * v)                              {if (GLeeInit()) glSecondaryColor3ivEXT(v);}$/;"	f
_Lazy_glSecondaryColor3s	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3s(GLshort red, GLshort green, GLshort blue)         {if (GLeeInit()) glSecondaryColor3s(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3sEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3sEXT(GLshort red, GLshort green, GLshort blue)      {if (GLeeInit()) glSecondaryColor3sEXT(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3sv	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3sv(const GLshort * v)                               {if (GLeeInit()) glSecondaryColor3sv(v);}$/;"	f
_Lazy_glSecondaryColor3svEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3svEXT(const GLshort * v)                            {if (GLeeInit()) glSecondaryColor3svEXT(v);}$/;"	f
_Lazy_glSecondaryColor3ub	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3ub(GLubyte red, GLubyte green, GLubyte blue)        {if (GLeeInit()) glSecondaryColor3ub(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3ubEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3ubEXT(GLubyte red, GLubyte green, GLubyte blue)     {if (GLeeInit()) glSecondaryColor3ubEXT(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3ubv	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3ubv(const GLubyte * v)                              {if (GLeeInit()) glSecondaryColor3ubv(v);}$/;"	f
_Lazy_glSecondaryColor3ubvEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3ubvEXT(const GLubyte * v)                           {if (GLeeInit()) glSecondaryColor3ubvEXT(v);}$/;"	f
_Lazy_glSecondaryColor3ui	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3ui(GLuint red, GLuint green, GLuint blue)           {if (GLeeInit()) glSecondaryColor3ui(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3uiEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3uiEXT(GLuint red, GLuint green, GLuint blue)        {if (GLeeInit()) glSecondaryColor3uiEXT(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3uiv	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3uiv(const GLuint * v)                               {if (GLeeInit()) glSecondaryColor3uiv(v);}$/;"	f
_Lazy_glSecondaryColor3uivEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3uivEXT(const GLuint * v)                            {if (GLeeInit()) glSecondaryColor3uivEXT(v);}$/;"	f
_Lazy_glSecondaryColor3us	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3us(GLushort red, GLushort green, GLushort blue)     {if (GLeeInit()) glSecondaryColor3us(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3usEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3usEXT(GLushort red, GLushort green, GLushort blue)  {if (GLeeInit()) glSecondaryColor3usEXT(red, green, blue);}$/;"	f
_Lazy_glSecondaryColor3usv	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3usv(const GLushort * v)                             {if (GLeeInit()) glSecondaryColor3usv(v);}$/;"	f
_Lazy_glSecondaryColor3usvEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColor3usvEXT(const GLushort * v)                          {if (GLeeInit()) glSecondaryColor3usvEXT(v);}$/;"	f
_Lazy_glSecondaryColorPointer	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColorPointer(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer)  {if (GLeeInit()) glSecondaryColorPointer(size, type, stride, pointer);}$/;"	f
_Lazy_glSecondaryColorPointerEXT	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColorPointerEXT(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer)  {if (GLeeInit()) glSecondaryColorPointerEXT(size, type, stride, pointer);}$/;"	f
_Lazy_glSecondaryColorPointerListIBM	shared/GLee.c	/^void __stdcall _Lazy_glSecondaryColorPointerListIBM(GLint size, GLenum type, GLint stride, const GLvoid* * pointer, GLint ptrstride)  {if (GLeeInit()) glSecondaryColorPointerListIBM(size, type, stride, pointer, ptrstride);}$/;"	f
_Lazy_glSeparableFilter2D	shared/GLee.c	/^void __stdcall _Lazy_glSeparableFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * row, const GLvoid * column)  {if (GLeeInit()) glSeparableFilter2D(target, internalformat, width, height, format, type, row, column);}$/;"	f
_Lazy_glSeparableFilter2DEXT	shared/GLee.c	/^void __stdcall _Lazy_glSeparableFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * row, const GLvoid * column)  {if (GLeeInit()) glSeparableFilter2DEXT(target, internalformat, width, height, format, type, row, column);}$/;"	f
_Lazy_glSetFenceAPPLE	shared/GLee.c	/^void __stdcall _Lazy_glSetFenceAPPLE(GLuint fence)                                        {if (GLeeInit()) glSetFenceAPPLE(fence);}$/;"	f
_Lazy_glSetFenceNV	shared/GLee.c	/^void __stdcall _Lazy_glSetFenceNV(GLuint fence, GLenum condition)                         {if (GLeeInit()) glSetFenceNV(fence, condition);}$/;"	f
_Lazy_glSetFragmentShaderConstantATI	shared/GLee.c	/^void __stdcall _Lazy_glSetFragmentShaderConstantATI(GLuint dst, const GLfloat * value)    {if (GLeeInit()) glSetFragmentShaderConstantATI(dst, value);}$/;"	f
_Lazy_glSetInvariantEXT	shared/GLee.c	/^void __stdcall _Lazy_glSetInvariantEXT(GLuint id, GLenum type, const GLvoid * addr)       {if (GLeeInit()) glSetInvariantEXT(id, type, addr);}$/;"	f
_Lazy_glSetLocalConstantEXT	shared/GLee.c	/^void __stdcall _Lazy_glSetLocalConstantEXT(GLuint id, GLenum type, const GLvoid * addr)   {if (GLeeInit()) glSetLocalConstantEXT(id, type, addr);}$/;"	f
_Lazy_glShaderOp1EXT	shared/GLee.c	/^void __stdcall _Lazy_glShaderOp1EXT(GLenum op, GLuint res, GLuint arg1)                   {if (GLeeInit()) glShaderOp1EXT(op, res, arg1);}$/;"	f
_Lazy_glShaderOp2EXT	shared/GLee.c	/^void __stdcall _Lazy_glShaderOp2EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2)      {if (GLeeInit()) glShaderOp2EXT(op, res, arg1, arg2);}$/;"	f
_Lazy_glShaderOp3EXT	shared/GLee.c	/^void __stdcall _Lazy_glShaderOp3EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3)  {if (GLeeInit()) glShaderOp3EXT(op, res, arg1, arg2, arg3);}$/;"	f
_Lazy_glShaderSource	shared/GLee.c	/^void __stdcall _Lazy_glShaderSource(GLuint shader, GLsizei count, const GLchar* * string, const GLint * length)  {if (GLeeInit()) glShaderSource(shader, count, string, length);}$/;"	f
_Lazy_glShaderSourceARB	shared/GLee.c	/^void __stdcall _Lazy_glShaderSourceARB(GLhandleARB shaderObj, GLsizei count, const GLcharARB* * string, const GLint * length)  {if (GLeeInit()) glShaderSourceARB(shaderObj, count, string, length);}$/;"	f
_Lazy_glSharpenTexFuncSGIS	shared/GLee.c	/^void __stdcall _Lazy_glSharpenTexFuncSGIS(GLenum target, GLsizei n, const GLfloat * points)  {if (GLeeInit()) glSharpenTexFuncSGIS(target, n, points);}$/;"	f
_Lazy_glSpriteParameterfSGIX	shared/GLee.c	/^void __stdcall _Lazy_glSpriteParameterfSGIX(GLenum pname, GLfloat param)                  {if (GLeeInit()) glSpriteParameterfSGIX(pname, param);}$/;"	f
_Lazy_glSpriteParameterfvSGIX	shared/GLee.c	/^void __stdcall _Lazy_glSpriteParameterfvSGIX(GLenum pname, const GLfloat * params)        {if (GLeeInit()) glSpriteParameterfvSGIX(pname, params);}$/;"	f
_Lazy_glSpriteParameteriSGIX	shared/GLee.c	/^void __stdcall _Lazy_glSpriteParameteriSGIX(GLenum pname, GLint param)                    {if (GLeeInit()) glSpriteParameteriSGIX(pname, param);}$/;"	f
_Lazy_glSpriteParameterivSGIX	shared/GLee.c	/^void __stdcall _Lazy_glSpriteParameterivSGIX(GLenum pname, const GLint * params)          {if (GLeeInit()) glSpriteParameterivSGIX(pname, params);}$/;"	f
_Lazy_glStartInstrumentsSGIX	shared/GLee.c	/^void __stdcall _Lazy_glStartInstrumentsSGIX(void)                                         {if (GLeeInit()) glStartInstrumentsSGIX();}$/;"	f
_Lazy_glStencilFuncSeparate	shared/GLee.c	/^void __stdcall _Lazy_glStencilFuncSeparate(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask)  {if (GLeeInit()) glStencilFuncSeparate(frontfunc, backfunc, ref, mask);}$/;"	f
_Lazy_glStencilFuncSeparateATI	shared/GLee.c	/^void __stdcall _Lazy_glStencilFuncSeparateATI(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask)  {if (GLeeInit()) glStencilFuncSeparateATI(frontfunc, backfunc, ref, mask);}$/;"	f
_Lazy_glStencilMaskSeparate	shared/GLee.c	/^void __stdcall _Lazy_glStencilMaskSeparate(GLenum face, GLuint mask)                      {if (GLeeInit()) glStencilMaskSeparate(face, mask);}$/;"	f
_Lazy_glStencilOpSeparate	shared/GLee.c	/^void __stdcall _Lazy_glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)  {if (GLeeInit()) glStencilOpSeparate(face, sfail, dpfail, dppass);}$/;"	f
_Lazy_glStencilOpSeparateATI	shared/GLee.c	/^void __stdcall _Lazy_glStencilOpSeparateATI(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)  {if (GLeeInit()) glStencilOpSeparateATI(face, sfail, dpfail, dppass);}$/;"	f
_Lazy_glStopInstrumentsSGIX	shared/GLee.c	/^void __stdcall _Lazy_glStopInstrumentsSGIX(GLint marker)                                  {if (GLeeInit()) glStopInstrumentsSGIX(marker);}$/;"	f
_Lazy_glStringMarkerGREMEDY	shared/GLee.c	/^void __stdcall _Lazy_glStringMarkerGREMEDY(GLsizei len, const GLvoid * string)            {if (GLeeInit()) glStringMarkerGREMEDY(len, string);}$/;"	f
_Lazy_glSwizzleEXT	shared/GLee.c	/^void __stdcall _Lazy_glSwizzleEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW)  {if (GLeeInit()) glSwizzleEXT(res, in, outX, outY, outZ, outW);}$/;"	f
_Lazy_glTagSampleBufferSGIX	shared/GLee.c	/^void __stdcall _Lazy_glTagSampleBufferSGIX(void)                                          {if (GLeeInit()) glTagSampleBufferSGIX();}$/;"	f
_Lazy_glTangent3bEXT	shared/GLee.c	/^void __stdcall _Lazy_glTangent3bEXT(GLbyte tx, GLbyte ty, GLbyte tz)                      {if (GLeeInit()) glTangent3bEXT(tx, ty, tz);}$/;"	f
_Lazy_glTangent3bvEXT	shared/GLee.c	/^void __stdcall _Lazy_glTangent3bvEXT(const GLbyte * v)                                    {if (GLeeInit()) glTangent3bvEXT(v);}$/;"	f
_Lazy_glTangent3dEXT	shared/GLee.c	/^void __stdcall _Lazy_glTangent3dEXT(GLdouble tx, GLdouble ty, GLdouble tz)                {if (GLeeInit()) glTangent3dEXT(tx, ty, tz);}$/;"	f
_Lazy_glTangent3dvEXT	shared/GLee.c	/^void __stdcall _Lazy_glTangent3dvEXT(const GLdouble * v)                                  {if (GLeeInit()) glTangent3dvEXT(v);}$/;"	f
_Lazy_glTangent3fEXT	shared/GLee.c	/^void __stdcall _Lazy_glTangent3fEXT(GLfloat tx, GLfloat ty, GLfloat tz)                   {if (GLeeInit()) glTangent3fEXT(tx, ty, tz);}$/;"	f
_Lazy_glTangent3fvEXT	shared/GLee.c	/^void __stdcall _Lazy_glTangent3fvEXT(const GLfloat * v)                                   {if (GLeeInit()) glTangent3fvEXT(v);}$/;"	f
_Lazy_glTangent3iEXT	shared/GLee.c	/^void __stdcall _Lazy_glTangent3iEXT(GLint tx, GLint ty, GLint tz)                         {if (GLeeInit()) glTangent3iEXT(tx, ty, tz);}$/;"	f
_Lazy_glTangent3ivEXT	shared/GLee.c	/^void __stdcall _Lazy_glTangent3ivEXT(const GLint * v)                                     {if (GLeeInit()) glTangent3ivEXT(v);}$/;"	f
_Lazy_glTangent3sEXT	shared/GLee.c	/^void __stdcall _Lazy_glTangent3sEXT(GLshort tx, GLshort ty, GLshort tz)                   {if (GLeeInit()) glTangent3sEXT(tx, ty, tz);}$/;"	f
_Lazy_glTangent3svEXT	shared/GLee.c	/^void __stdcall _Lazy_glTangent3svEXT(const GLshort * v)                                   {if (GLeeInit()) glTangent3svEXT(v);}$/;"	f
_Lazy_glTangentPointerEXT	shared/GLee.c	/^void __stdcall _Lazy_glTangentPointerEXT(GLenum type, GLsizei stride, const GLvoid * pointer)  {if (GLeeInit()) glTangentPointerEXT(type, stride, pointer);}$/;"	f
_Lazy_glTbufferMask3DFX	shared/GLee.c	/^void __stdcall _Lazy_glTbufferMask3DFX(GLuint mask)                                       {if (GLeeInit()) glTbufferMask3DFX(mask);}$/;"	f
_Lazy_glTestFenceAPPLE	shared/GLee.c	/^GLboolean __stdcall _Lazy_glTestFenceAPPLE(GLuint fence)                                  {if (GLeeInit()) return glTestFenceAPPLE(fence); return (GLboolean)0;}$/;"	f
_Lazy_glTestFenceNV	shared/GLee.c	/^GLboolean __stdcall _Lazy_glTestFenceNV(GLuint fence)                                     {if (GLeeInit()) return glTestFenceNV(fence); return (GLboolean)0;}$/;"	f
_Lazy_glTestObjectAPPLE	shared/GLee.c	/^GLboolean __stdcall _Lazy_glTestObjectAPPLE(GLenum object, GLuint name)                   {if (GLeeInit()) return glTestObjectAPPLE(object, name); return (GLboolean)0;}$/;"	f
_Lazy_glTexBufferEXT	shared/GLee.c	/^void __stdcall _Lazy_glTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer)  {if (GLeeInit()) glTexBufferEXT(target, internalformat, buffer);}$/;"	f
_Lazy_glTexBumpParameterfvATI	shared/GLee.c	/^void __stdcall _Lazy_glTexBumpParameterfvATI(GLenum pname, const GLfloat * param)         {if (GLeeInit()) glTexBumpParameterfvATI(pname, param);}$/;"	f
_Lazy_glTexBumpParameterivATI	shared/GLee.c	/^void __stdcall _Lazy_glTexBumpParameterivATI(GLenum pname, const GLint * param)           {if (GLeeInit()) glTexBumpParameterivATI(pname, param);}$/;"	f
_Lazy_glTexCoord1hNV	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord1hNV(GLhalfNV s)                                           {if (GLeeInit()) glTexCoord1hNV(s);}$/;"	f
_Lazy_glTexCoord1hvNV	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord1hvNV(const GLhalfNV * v)                                  {if (GLeeInit()) glTexCoord1hvNV(v);}$/;"	f
_Lazy_glTexCoord2fColor3fVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord2fColor3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glTexCoord2fColor3fVertex3fSUN(s, t, r, g, b, x, y, z);}$/;"	f
_Lazy_glTexCoord2fColor3fVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord2fColor3fVertex3fvSUN(const GLfloat * tc, const GLfloat * c, const GLfloat * v)  {if (GLeeInit()) glTexCoord2fColor3fVertex3fvSUN(tc, c, v);}$/;"	f
_Lazy_glTexCoord2fColor4fNormal3fVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord2fColor4fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glTexCoord2fColor4fNormal3fVertex3fSUN(s, t, r, g, b, a, nx, ny, nz, x, y, z);}$/;"	f
_Lazy_glTexCoord2fColor4fNormal3fVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord2fColor4fNormal3fVertex3fvSUN(const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v)  {if (GLeeInit()) glTexCoord2fColor4fNormal3fVertex3fvSUN(tc, c, n, v);}$/;"	f
_Lazy_glTexCoord2fColor4ubVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord2fColor4ubVertex3fSUN(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glTexCoord2fColor4ubVertex3fSUN(s, t, r, g, b, a, x, y, z);}$/;"	f
_Lazy_glTexCoord2fColor4ubVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord2fColor4ubVertex3fvSUN(const GLfloat * tc, const GLubyte * c, const GLfloat * v)  {if (GLeeInit()) glTexCoord2fColor4ubVertex3fvSUN(tc, c, v);}$/;"	f
_Lazy_glTexCoord2fNormal3fVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord2fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glTexCoord2fNormal3fVertex3fSUN(s, t, nx, ny, nz, x, y, z);}$/;"	f
_Lazy_glTexCoord2fNormal3fVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord2fNormal3fVertex3fvSUN(const GLfloat * tc, const GLfloat * n, const GLfloat * v)  {if (GLeeInit()) glTexCoord2fNormal3fVertex3fvSUN(tc, n, v);}$/;"	f
_Lazy_glTexCoord2fVertex3fSUN	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord2fVertex3fSUN(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glTexCoord2fVertex3fSUN(s, t, x, y, z);}$/;"	f
_Lazy_glTexCoord2fVertex3fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord2fVertex3fvSUN(const GLfloat * tc, const GLfloat * v)      {if (GLeeInit()) glTexCoord2fVertex3fvSUN(tc, v);}$/;"	f
_Lazy_glTexCoord2hNV	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord2hNV(GLhalfNV s, GLhalfNV t)                               {if (GLeeInit()) glTexCoord2hNV(s, t);}$/;"	f
_Lazy_glTexCoord2hvNV	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord2hvNV(const GLhalfNV * v)                                  {if (GLeeInit()) glTexCoord2hvNV(v);}$/;"	f
_Lazy_glTexCoord3hNV	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord3hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r)                   {if (GLeeInit()) glTexCoord3hNV(s, t, r);}$/;"	f
_Lazy_glTexCoord3hvNV	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord3hvNV(const GLhalfNV * v)                                  {if (GLeeInit()) glTexCoord3hvNV(v);}$/;"	f
_Lazy_glTexCoord4fColor4fNormal3fVertex4fSUN	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord4fColor4fNormal3fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w)  {if (GLeeInit()) glTexCoord4fColor4fNormal3fVertex4fSUN(s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w);}$/;"	f
_Lazy_glTexCoord4fColor4fNormal3fVertex4fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord4fColor4fNormal3fVertex4fvSUN(const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v)  {if (GLeeInit()) glTexCoord4fColor4fNormal3fVertex4fvSUN(tc, c, n, v);}$/;"	f
_Lazy_glTexCoord4fVertex4fSUN	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord4fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w)  {if (GLeeInit()) glTexCoord4fVertex4fSUN(s, t, p, q, x, y, z, w);}$/;"	f
_Lazy_glTexCoord4fVertex4fvSUN	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord4fVertex4fvSUN(const GLfloat * tc, const GLfloat * v)      {if (GLeeInit()) glTexCoord4fVertex4fvSUN(tc, v);}$/;"	f
_Lazy_glTexCoord4hNV	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord4hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q)       {if (GLeeInit()) glTexCoord4hNV(s, t, r, q);}$/;"	f
_Lazy_glTexCoord4hvNV	shared/GLee.c	/^void __stdcall _Lazy_glTexCoord4hvNV(const GLhalfNV * v)                                  {if (GLeeInit()) glTexCoord4hvNV(v);}$/;"	f
_Lazy_glTexCoordPointerEXT	shared/GLee.c	/^void __stdcall _Lazy_glTexCoordPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer)  {if (GLeeInit()) glTexCoordPointerEXT(size, type, stride, count, pointer);}$/;"	f
_Lazy_glTexCoordPointerListIBM	shared/GLee.c	/^void __stdcall _Lazy_glTexCoordPointerListIBM(GLint size, GLenum type, GLint stride, const GLvoid* * pointer, GLint ptrstride)  {if (GLeeInit()) glTexCoordPointerListIBM(size, type, stride, pointer, ptrstride);}$/;"	f
_Lazy_glTexCoordPointervINTEL	shared/GLee.c	/^void __stdcall _Lazy_glTexCoordPointervINTEL(GLint size, GLenum type, const GLvoid* * pointer)  {if (GLeeInit()) glTexCoordPointervINTEL(size, type, pointer);}$/;"	f
_Lazy_glTexFilterFuncSGIS	shared/GLee.c	/^void __stdcall _Lazy_glTexFilterFuncSGIS(GLenum target, GLenum filter, GLsizei n, const GLfloat * weights)  {if (GLeeInit()) glTexFilterFuncSGIS(target, filter, n, weights);}$/;"	f
_Lazy_glTexImage3D	shared/GLee.c	/^void __stdcall _Lazy_glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels)  {if (GLeeInit()) glTexImage3D(target, level, internalformat, width, height, depth, border, format, type, pixels);}$/;"	f
_Lazy_glTexImage3DEXT	shared/GLee.c	/^void __stdcall _Lazy_glTexImage3DEXT(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid * pixels)  {if (GLeeInit()) glTexImage3DEXT(target, level, internalformat, width, height, depth, border, format, type, pixels);}$/;"	f
_Lazy_glTexImage4DSGIS	shared/GLee.c	/^void __stdcall _Lazy_glTexImage4DSGIS(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid * pixels)  {if (GLeeInit()) glTexImage4DSGIS(target, level, internalformat, width, height, depth, size4d, border, format, type, pixels);}$/;"	f
_Lazy_glTexParameterIivEXT	shared/GLee.c	/^void __stdcall _Lazy_glTexParameterIivEXT(GLenum target, GLenum pname, const GLint * params)  {if (GLeeInit()) glTexParameterIivEXT(target, pname, params);}$/;"	f
_Lazy_glTexParameterIuivEXT	shared/GLee.c	/^void __stdcall _Lazy_glTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint * params)  {if (GLeeInit()) glTexParameterIuivEXT(target, pname, params);}$/;"	f
_Lazy_glTexSubImage1DEXT	shared/GLee.c	/^void __stdcall _Lazy_glTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid * pixels)  {if (GLeeInit()) glTexSubImage1DEXT(target, level, xoffset, width, format, type, pixels);}$/;"	f
_Lazy_glTexSubImage2DEXT	shared/GLee.c	/^void __stdcall _Lazy_glTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid * pixels)  {if (GLeeInit()) glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels);}$/;"	f
_Lazy_glTexSubImage3D	shared/GLee.c	/^void __stdcall _Lazy_glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid * pixels)  {if (GLeeInit()) glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);}$/;"	f
_Lazy_glTexSubImage3DEXT	shared/GLee.c	/^void __stdcall _Lazy_glTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid * pixels)  {if (GLeeInit()) glTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);}$/;"	f
_Lazy_glTexSubImage4DSGIS	shared/GLee.c	/^void __stdcall _Lazy_glTexSubImage4DSGIS(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid * pixels)  {if (GLeeInit()) glTexSubImage4DSGIS(target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, type, pixels);}$/;"	f
_Lazy_glTextureColorMaskSGIS	shared/GLee.c	/^void __stdcall _Lazy_glTextureColorMaskSGIS(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)  {if (GLeeInit()) glTextureColorMaskSGIS(red, green, blue, alpha);}$/;"	f
_Lazy_glTextureLightEXT	shared/GLee.c	/^void __stdcall _Lazy_glTextureLightEXT(GLenum pname)                                      {if (GLeeInit()) glTextureLightEXT(pname);}$/;"	f
_Lazy_glTextureMaterialEXT	shared/GLee.c	/^void __stdcall _Lazy_glTextureMaterialEXT(GLenum face, GLenum mode)                       {if (GLeeInit()) glTextureMaterialEXT(face, mode);}$/;"	f
_Lazy_glTextureNormalEXT	shared/GLee.c	/^void __stdcall _Lazy_glTextureNormalEXT(GLenum mode)                                      {if (GLeeInit()) glTextureNormalEXT(mode);}$/;"	f
_Lazy_glTrackMatrixNV	shared/GLee.c	/^void __stdcall _Lazy_glTrackMatrixNV(GLenum target, GLuint address, GLenum matrix, GLenum transform)  {if (GLeeInit()) glTrackMatrixNV(target, address, matrix, transform);}$/;"	f
_Lazy_glTransformFeedbackAttribsNV	shared/GLee.c	/^void __stdcall _Lazy_glTransformFeedbackAttribsNV(GLuint count, const GLint * attribs, GLenum bufferMode)  {if (GLeeInit()) glTransformFeedbackAttribsNV(count, attribs, bufferMode);}$/;"	f
_Lazy_glTransformFeedbackVaryingsNV	shared/GLee.c	/^void __stdcall _Lazy_glTransformFeedbackVaryingsNV(GLuint program, GLsizei count, const GLint * locations, GLenum bufferMode)  {if (GLeeInit()) glTransformFeedbackVaryingsNV(program, count, locations, bufferMode);}$/;"	f
_Lazy_glUniform1f	shared/GLee.c	/^void __stdcall _Lazy_glUniform1f(GLint location, GLfloat v0)                              {if (GLeeInit()) glUniform1f(location, v0);}$/;"	f
_Lazy_glUniform1fARB	shared/GLee.c	/^void __stdcall _Lazy_glUniform1fARB(GLint location, GLfloat v0)                           {if (GLeeInit()) glUniform1fARB(location, v0);}$/;"	f
_Lazy_glUniform1fv	shared/GLee.c	/^void __stdcall _Lazy_glUniform1fv(GLint location, GLsizei count, const GLfloat * value)   {if (GLeeInit()) glUniform1fv(location, count, value);}$/;"	f
_Lazy_glUniform1fvARB	shared/GLee.c	/^void __stdcall _Lazy_glUniform1fvARB(GLint location, GLsizei count, const GLfloat * value)  {if (GLeeInit()) glUniform1fvARB(location, count, value);}$/;"	f
_Lazy_glUniform1i	shared/GLee.c	/^void __stdcall _Lazy_glUniform1i(GLint location, GLint v0)                                {if (GLeeInit()) glUniform1i(location, v0);}$/;"	f
_Lazy_glUniform1iARB	shared/GLee.c	/^void __stdcall _Lazy_glUniform1iARB(GLint location, GLint v0)                             {if (GLeeInit()) glUniform1iARB(location, v0);}$/;"	f
_Lazy_glUniform1iv	shared/GLee.c	/^void __stdcall _Lazy_glUniform1iv(GLint location, GLsizei count, const GLint * value)     {if (GLeeInit()) glUniform1iv(location, count, value);}$/;"	f
_Lazy_glUniform1ivARB	shared/GLee.c	/^void __stdcall _Lazy_glUniform1ivARB(GLint location, GLsizei count, const GLint * value)  {if (GLeeInit()) glUniform1ivARB(location, count, value);}$/;"	f
_Lazy_glUniform1uiEXT	shared/GLee.c	/^void __stdcall _Lazy_glUniform1uiEXT(GLint location, GLuint v0)                           {if (GLeeInit()) glUniform1uiEXT(location, v0);}$/;"	f
_Lazy_glUniform1uivEXT	shared/GLee.c	/^void __stdcall _Lazy_glUniform1uivEXT(GLint location, GLsizei count, const GLuint * value)  {if (GLeeInit()) glUniform1uivEXT(location, count, value);}$/;"	f
_Lazy_glUniform2f	shared/GLee.c	/^void __stdcall _Lazy_glUniform2f(GLint location, GLfloat v0, GLfloat v1)                  {if (GLeeInit()) glUniform2f(location, v0, v1);}$/;"	f
_Lazy_glUniform2fARB	shared/GLee.c	/^void __stdcall _Lazy_glUniform2fARB(GLint location, GLfloat v0, GLfloat v1)               {if (GLeeInit()) glUniform2fARB(location, v0, v1);}$/;"	f
_Lazy_glUniform2fv	shared/GLee.c	/^void __stdcall _Lazy_glUniform2fv(GLint location, GLsizei count, const GLfloat * value)   {if (GLeeInit()) glUniform2fv(location, count, value);}$/;"	f
_Lazy_glUniform2fvARB	shared/GLee.c	/^void __stdcall _Lazy_glUniform2fvARB(GLint location, GLsizei count, const GLfloat * value)  {if (GLeeInit()) glUniform2fvARB(location, count, value);}$/;"	f
_Lazy_glUniform2i	shared/GLee.c	/^void __stdcall _Lazy_glUniform2i(GLint location, GLint v0, GLint v1)                      {if (GLeeInit()) glUniform2i(location, v0, v1);}$/;"	f
_Lazy_glUniform2iARB	shared/GLee.c	/^void __stdcall _Lazy_glUniform2iARB(GLint location, GLint v0, GLint v1)                   {if (GLeeInit()) glUniform2iARB(location, v0, v1);}$/;"	f
_Lazy_glUniform2iv	shared/GLee.c	/^void __stdcall _Lazy_glUniform2iv(GLint location, GLsizei count, const GLint * value)     {if (GLeeInit()) glUniform2iv(location, count, value);}$/;"	f
_Lazy_glUniform2ivARB	shared/GLee.c	/^void __stdcall _Lazy_glUniform2ivARB(GLint location, GLsizei count, const GLint * value)  {if (GLeeInit()) glUniform2ivARB(location, count, value);}$/;"	f
_Lazy_glUniform2uiEXT	shared/GLee.c	/^void __stdcall _Lazy_glUniform2uiEXT(GLint location, GLuint v0, GLuint v1)                {if (GLeeInit()) glUniform2uiEXT(location, v0, v1);}$/;"	f
_Lazy_glUniform2uivEXT	shared/GLee.c	/^void __stdcall _Lazy_glUniform2uivEXT(GLint location, GLsizei count, const GLuint * value)  {if (GLeeInit()) glUniform2uivEXT(location, count, value);}$/;"	f
_Lazy_glUniform3f	shared/GLee.c	/^void __stdcall _Lazy_glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2)      {if (GLeeInit()) glUniform3f(location, v0, v1, v2);}$/;"	f
_Lazy_glUniform3fARB	shared/GLee.c	/^void __stdcall _Lazy_glUniform3fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2)   {if (GLeeInit()) glUniform3fARB(location, v0, v1, v2);}$/;"	f
_Lazy_glUniform3fv	shared/GLee.c	/^void __stdcall _Lazy_glUniform3fv(GLint location, GLsizei count, const GLfloat * value)   {if (GLeeInit()) glUniform3fv(location, count, value);}$/;"	f
_Lazy_glUniform3fvARB	shared/GLee.c	/^void __stdcall _Lazy_glUniform3fvARB(GLint location, GLsizei count, const GLfloat * value)  {if (GLeeInit()) glUniform3fvARB(location, count, value);}$/;"	f
_Lazy_glUniform3i	shared/GLee.c	/^void __stdcall _Lazy_glUniform3i(GLint location, GLint v0, GLint v1, GLint v2)            {if (GLeeInit()) glUniform3i(location, v0, v1, v2);}$/;"	f
_Lazy_glUniform3iARB	shared/GLee.c	/^void __stdcall _Lazy_glUniform3iARB(GLint location, GLint v0, GLint v1, GLint v2)         {if (GLeeInit()) glUniform3iARB(location, v0, v1, v2);}$/;"	f
_Lazy_glUniform3iv	shared/GLee.c	/^void __stdcall _Lazy_glUniform3iv(GLint location, GLsizei count, const GLint * value)     {if (GLeeInit()) glUniform3iv(location, count, value);}$/;"	f
_Lazy_glUniform3ivARB	shared/GLee.c	/^void __stdcall _Lazy_glUniform3ivARB(GLint location, GLsizei count, const GLint * value)  {if (GLeeInit()) glUniform3ivARB(location, count, value);}$/;"	f
_Lazy_glUniform3uiEXT	shared/GLee.c	/^void __stdcall _Lazy_glUniform3uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2)     {if (GLeeInit()) glUniform3uiEXT(location, v0, v1, v2);}$/;"	f
_Lazy_glUniform3uivEXT	shared/GLee.c	/^void __stdcall _Lazy_glUniform3uivEXT(GLint location, GLsizei count, const GLuint * value)  {if (GLeeInit()) glUniform3uivEXT(location, count, value);}$/;"	f
_Lazy_glUniform4f	shared/GLee.c	/^void __stdcall _Lazy_glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)  {if (GLeeInit()) glUniform4f(location, v0, v1, v2, v3);}$/;"	f
_Lazy_glUniform4fARB	shared/GLee.c	/^void __stdcall _Lazy_glUniform4fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)  {if (GLeeInit()) glUniform4fARB(location, v0, v1, v2, v3);}$/;"	f
_Lazy_glUniform4fv	shared/GLee.c	/^void __stdcall _Lazy_glUniform4fv(GLint location, GLsizei count, const GLfloat * value)   {if (GLeeInit()) glUniform4fv(location, count, value);}$/;"	f
_Lazy_glUniform4fvARB	shared/GLee.c	/^void __stdcall _Lazy_glUniform4fvARB(GLint location, GLsizei count, const GLfloat * value)  {if (GLeeInit()) glUniform4fvARB(location, count, value);}$/;"	f
_Lazy_glUniform4i	shared/GLee.c	/^void __stdcall _Lazy_glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3)  {if (GLeeInit()) glUniform4i(location, v0, v1, v2, v3);}$/;"	f
_Lazy_glUniform4iARB	shared/GLee.c	/^void __stdcall _Lazy_glUniform4iARB(GLint location, GLint v0, GLint v1, GLint v2, GLint v3)  {if (GLeeInit()) glUniform4iARB(location, v0, v1, v2, v3);}$/;"	f
_Lazy_glUniform4iv	shared/GLee.c	/^void __stdcall _Lazy_glUniform4iv(GLint location, GLsizei count, const GLint * value)     {if (GLeeInit()) glUniform4iv(location, count, value);}$/;"	f
_Lazy_glUniform4ivARB	shared/GLee.c	/^void __stdcall _Lazy_glUniform4ivARB(GLint location, GLsizei count, const GLint * value)  {if (GLeeInit()) glUniform4ivARB(location, count, value);}$/;"	f
_Lazy_glUniform4uiEXT	shared/GLee.c	/^void __stdcall _Lazy_glUniform4uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)  {if (GLeeInit()) glUniform4uiEXT(location, v0, v1, v2, v3);}$/;"	f
_Lazy_glUniform4uivEXT	shared/GLee.c	/^void __stdcall _Lazy_glUniform4uivEXT(GLint location, GLsizei count, const GLuint * value)  {if (GLeeInit()) glUniform4uivEXT(location, count, value);}$/;"	f
_Lazy_glUniformBufferEXT	shared/GLee.c	/^void __stdcall _Lazy_glUniformBufferEXT(GLuint program, GLint location, GLuint buffer)    {if (GLeeInit()) glUniformBufferEXT(program, location, buffer);}$/;"	f
_Lazy_glUniformMatrix2fv	shared/GLee.c	/^void __stdcall _Lazy_glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix2fv(location, count, transpose, value);}$/;"	f
_Lazy_glUniformMatrix2fvARB	shared/GLee.c	/^void __stdcall _Lazy_glUniformMatrix2fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix2fvARB(location, count, transpose, value);}$/;"	f
_Lazy_glUniformMatrix2x3fv	shared/GLee.c	/^void __stdcall _Lazy_glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix2x3fv(location, count, transpose, value);}$/;"	f
_Lazy_glUniformMatrix2x4fv	shared/GLee.c	/^void __stdcall _Lazy_glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix2x4fv(location, count, transpose, value);}$/;"	f
_Lazy_glUniformMatrix3fv	shared/GLee.c	/^void __stdcall _Lazy_glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix3fv(location, count, transpose, value);}$/;"	f
_Lazy_glUniformMatrix3fvARB	shared/GLee.c	/^void __stdcall _Lazy_glUniformMatrix3fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix3fvARB(location, count, transpose, value);}$/;"	f
_Lazy_glUniformMatrix3x2fv	shared/GLee.c	/^void __stdcall _Lazy_glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix3x2fv(location, count, transpose, value);}$/;"	f
_Lazy_glUniformMatrix3x4fv	shared/GLee.c	/^void __stdcall _Lazy_glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix3x4fv(location, count, transpose, value);}$/;"	f
_Lazy_glUniformMatrix4fv	shared/GLee.c	/^void __stdcall _Lazy_glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix4fv(location, count, transpose, value);}$/;"	f
_Lazy_glUniformMatrix4fvARB	shared/GLee.c	/^void __stdcall _Lazy_glUniformMatrix4fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix4fvARB(location, count, transpose, value);}$/;"	f
_Lazy_glUniformMatrix4x2fv	shared/GLee.c	/^void __stdcall _Lazy_glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix4x2fv(location, count, transpose, value);}$/;"	f
_Lazy_glUniformMatrix4x3fv	shared/GLee.c	/^void __stdcall _Lazy_glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value)  {if (GLeeInit()) glUniformMatrix4x3fv(location, count, transpose, value);}$/;"	f
_Lazy_glUnlockArraysEXT	shared/GLee.c	/^void __stdcall _Lazy_glUnlockArraysEXT(void)                                              {if (GLeeInit()) glUnlockArraysEXT();}$/;"	f
_Lazy_glUnmapBuffer	shared/GLee.c	/^GLboolean __stdcall _Lazy_glUnmapBuffer(GLenum target)                                    {if (GLeeInit()) return glUnmapBuffer(target); return (GLboolean)0;}$/;"	f
_Lazy_glUnmapBufferARB	shared/GLee.c	/^GLboolean __stdcall _Lazy_glUnmapBufferARB(GLenum target)                                 {if (GLeeInit()) return glUnmapBufferARB(target); return (GLboolean)0;}$/;"	f
_Lazy_glUnmapObjectBufferATI	shared/GLee.c	/^void __stdcall _Lazy_glUnmapObjectBufferATI(GLuint buffer)                                {if (GLeeInit()) glUnmapObjectBufferATI(buffer);}$/;"	f
_Lazy_glUpdateObjectBufferATI	shared/GLee.c	/^void __stdcall _Lazy_glUpdateObjectBufferATI(GLuint buffer, GLuint offset, GLsizei size, const GLvoid * pointer, GLenum preserve)  {if (GLeeInit()) glUpdateObjectBufferATI(buffer, offset, size, pointer, preserve);}$/;"	f
_Lazy_glUseProgram	shared/GLee.c	/^void __stdcall _Lazy_glUseProgram(GLuint program)                                         {if (GLeeInit()) glUseProgram(program);}$/;"	f
_Lazy_glUseProgramObjectARB	shared/GLee.c	/^void __stdcall _Lazy_glUseProgramObjectARB(GLhandleARB programObj)                        {if (GLeeInit()) glUseProgramObjectARB(programObj);}$/;"	f
_Lazy_glValidateProgram	shared/GLee.c	/^void __stdcall _Lazy_glValidateProgram(GLuint program)                                    {if (GLeeInit()) glValidateProgram(program);}$/;"	f
_Lazy_glValidateProgramARB	shared/GLee.c	/^void __stdcall _Lazy_glValidateProgramARB(GLhandleARB programObj)                         {if (GLeeInit()) glValidateProgramARB(programObj);}$/;"	f
_Lazy_glVariantArrayObjectATI	shared/GLee.c	/^void __stdcall _Lazy_glVariantArrayObjectATI(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset)  {if (GLeeInit()) glVariantArrayObjectATI(id, type, stride, buffer, offset);}$/;"	f
_Lazy_glVariantPointerEXT	shared/GLee.c	/^void __stdcall _Lazy_glVariantPointerEXT(GLuint id, GLenum type, GLuint stride, const GLvoid * addr)  {if (GLeeInit()) glVariantPointerEXT(id, type, stride, addr);}$/;"	f
_Lazy_glVariantbvEXT	shared/GLee.c	/^void __stdcall _Lazy_glVariantbvEXT(GLuint id, const GLbyte * addr)                       {if (GLeeInit()) glVariantbvEXT(id, addr);}$/;"	f
_Lazy_glVariantdvEXT	shared/GLee.c	/^void __stdcall _Lazy_glVariantdvEXT(GLuint id, const GLdouble * addr)                     {if (GLeeInit()) glVariantdvEXT(id, addr);}$/;"	f
_Lazy_glVariantfvEXT	shared/GLee.c	/^void __stdcall _Lazy_glVariantfvEXT(GLuint id, const GLfloat * addr)                      {if (GLeeInit()) glVariantfvEXT(id, addr);}$/;"	f
_Lazy_glVariantivEXT	shared/GLee.c	/^void __stdcall _Lazy_glVariantivEXT(GLuint id, const GLint * addr)                        {if (GLeeInit()) glVariantivEXT(id, addr);}$/;"	f
_Lazy_glVariantsvEXT	shared/GLee.c	/^void __stdcall _Lazy_glVariantsvEXT(GLuint id, const GLshort * addr)                      {if (GLeeInit()) glVariantsvEXT(id, addr);}$/;"	f
_Lazy_glVariantubvEXT	shared/GLee.c	/^void __stdcall _Lazy_glVariantubvEXT(GLuint id, const GLubyte * addr)                     {if (GLeeInit()) glVariantubvEXT(id, addr);}$/;"	f
_Lazy_glVariantuivEXT	shared/GLee.c	/^void __stdcall _Lazy_glVariantuivEXT(GLuint id, const GLuint * addr)                      {if (GLeeInit()) glVariantuivEXT(id, addr);}$/;"	f
_Lazy_glVariantusvEXT	shared/GLee.c	/^void __stdcall _Lazy_glVariantusvEXT(GLuint id, const GLushort * addr)                    {if (GLeeInit()) glVariantusvEXT(id, addr);}$/;"	f
_Lazy_glVertex2hNV	shared/GLee.c	/^void __stdcall _Lazy_glVertex2hNV(GLhalfNV x, GLhalfNV y)                                 {if (GLeeInit()) glVertex2hNV(x, y);}$/;"	f
_Lazy_glVertex2hvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertex2hvNV(const GLhalfNV * v)                                    {if (GLeeInit()) glVertex2hvNV(v);}$/;"	f
_Lazy_glVertex3hNV	shared/GLee.c	/^void __stdcall _Lazy_glVertex3hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z)                     {if (GLeeInit()) glVertex3hNV(x, y, z);}$/;"	f
_Lazy_glVertex3hvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertex3hvNV(const GLhalfNV * v)                                    {if (GLeeInit()) glVertex3hvNV(v);}$/;"	f
_Lazy_glVertex4hNV	shared/GLee.c	/^void __stdcall _Lazy_glVertex4hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w)         {if (GLeeInit()) glVertex4hNV(x, y, z, w);}$/;"	f
_Lazy_glVertex4hvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertex4hvNV(const GLhalfNV * v)                                    {if (GLeeInit()) glVertex4hvNV(v);}$/;"	f
_Lazy_glVertexArrayParameteriAPPLE	shared/GLee.c	/^void __stdcall _Lazy_glVertexArrayParameteriAPPLE(GLenum pname, GLint param)              {if (GLeeInit()) glVertexArrayParameteriAPPLE(pname, param);}$/;"	f
_Lazy_glVertexArrayRangeAPPLE	shared/GLee.c	/^void __stdcall _Lazy_glVertexArrayRangeAPPLE(GLsizei length, GLvoid * pointer)            {if (GLeeInit()) glVertexArrayRangeAPPLE(length, pointer);}$/;"	f
_Lazy_glVertexArrayRangeNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexArrayRangeNV(GLsizei length, const GLvoid * pointer)         {if (GLeeInit()) glVertexArrayRangeNV(length, pointer);}$/;"	f
_Lazy_glVertexAttrib1d	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1d(GLuint index, GLdouble x)                           {if (GLeeInit()) glVertexAttrib1d(index, x);}$/;"	f
_Lazy_glVertexAttrib1dARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1dARB(GLuint index, GLdouble x)                        {if (GLeeInit()) glVertexAttrib1dARB(index, x);}$/;"	f
_Lazy_glVertexAttrib1dNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1dNV(GLuint index, GLdouble x)                         {if (GLeeInit()) glVertexAttrib1dNV(index, x);}$/;"	f
_Lazy_glVertexAttrib1dv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1dv(GLuint index, const GLdouble * v)                  {if (GLeeInit()) glVertexAttrib1dv(index, v);}$/;"	f
_Lazy_glVertexAttrib1dvARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1dvARB(GLuint index, const GLdouble * v)               {if (GLeeInit()) glVertexAttrib1dvARB(index, v);}$/;"	f
_Lazy_glVertexAttrib1dvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1dvNV(GLuint index, const GLdouble * v)                {if (GLeeInit()) glVertexAttrib1dvNV(index, v);}$/;"	f
_Lazy_glVertexAttrib1f	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1f(GLuint index, GLfloat x)                            {if (GLeeInit()) glVertexAttrib1f(index, x);}$/;"	f
_Lazy_glVertexAttrib1fARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1fARB(GLuint index, GLfloat x)                         {if (GLeeInit()) glVertexAttrib1fARB(index, x);}$/;"	f
_Lazy_glVertexAttrib1fNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1fNV(GLuint index, GLfloat x)                          {if (GLeeInit()) glVertexAttrib1fNV(index, x);}$/;"	f
_Lazy_glVertexAttrib1fv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1fv(GLuint index, const GLfloat * v)                   {if (GLeeInit()) glVertexAttrib1fv(index, v);}$/;"	f
_Lazy_glVertexAttrib1fvARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1fvARB(GLuint index, const GLfloat * v)                {if (GLeeInit()) glVertexAttrib1fvARB(index, v);}$/;"	f
_Lazy_glVertexAttrib1fvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1fvNV(GLuint index, const GLfloat * v)                 {if (GLeeInit()) glVertexAttrib1fvNV(index, v);}$/;"	f
_Lazy_glVertexAttrib1hNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1hNV(GLuint index, GLhalfNV x)                         {if (GLeeInit()) glVertexAttrib1hNV(index, x);}$/;"	f
_Lazy_glVertexAttrib1hvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1hvNV(GLuint index, const GLhalfNV * v)                {if (GLeeInit()) glVertexAttrib1hvNV(index, v);}$/;"	f
_Lazy_glVertexAttrib1s	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1s(GLuint index, GLshort x)                            {if (GLeeInit()) glVertexAttrib1s(index, x);}$/;"	f
_Lazy_glVertexAttrib1sARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1sARB(GLuint index, GLshort x)                         {if (GLeeInit()) glVertexAttrib1sARB(index, x);}$/;"	f
_Lazy_glVertexAttrib1sNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1sNV(GLuint index, GLshort x)                          {if (GLeeInit()) glVertexAttrib1sNV(index, x);}$/;"	f
_Lazy_glVertexAttrib1sv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1sv(GLuint index, const GLshort * v)                   {if (GLeeInit()) glVertexAttrib1sv(index, v);}$/;"	f
_Lazy_glVertexAttrib1svARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1svARB(GLuint index, const GLshort * v)                {if (GLeeInit()) glVertexAttrib1svARB(index, v);}$/;"	f
_Lazy_glVertexAttrib1svNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib1svNV(GLuint index, const GLshort * v)                 {if (GLeeInit()) glVertexAttrib1svNV(index, v);}$/;"	f
_Lazy_glVertexAttrib2d	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2d(GLuint index, GLdouble x, GLdouble y)               {if (GLeeInit()) glVertexAttrib2d(index, x, y);}$/;"	f
_Lazy_glVertexAttrib2dARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2dARB(GLuint index, GLdouble x, GLdouble y)            {if (GLeeInit()) glVertexAttrib2dARB(index, x, y);}$/;"	f
_Lazy_glVertexAttrib2dNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2dNV(GLuint index, GLdouble x, GLdouble y)             {if (GLeeInit()) glVertexAttrib2dNV(index, x, y);}$/;"	f
_Lazy_glVertexAttrib2dv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2dv(GLuint index, const GLdouble * v)                  {if (GLeeInit()) glVertexAttrib2dv(index, v);}$/;"	f
_Lazy_glVertexAttrib2dvARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2dvARB(GLuint index, const GLdouble * v)               {if (GLeeInit()) glVertexAttrib2dvARB(index, v);}$/;"	f
_Lazy_glVertexAttrib2dvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2dvNV(GLuint index, const GLdouble * v)                {if (GLeeInit()) glVertexAttrib2dvNV(index, v);}$/;"	f
_Lazy_glVertexAttrib2f	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y)                 {if (GLeeInit()) glVertexAttrib2f(index, x, y);}$/;"	f
_Lazy_glVertexAttrib2fARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2fARB(GLuint index, GLfloat x, GLfloat y)              {if (GLeeInit()) glVertexAttrib2fARB(index, x, y);}$/;"	f
_Lazy_glVertexAttrib2fNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2fNV(GLuint index, GLfloat x, GLfloat y)               {if (GLeeInit()) glVertexAttrib2fNV(index, x, y);}$/;"	f
_Lazy_glVertexAttrib2fv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2fv(GLuint index, const GLfloat * v)                   {if (GLeeInit()) glVertexAttrib2fv(index, v);}$/;"	f
_Lazy_glVertexAttrib2fvARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2fvARB(GLuint index, const GLfloat * v)                {if (GLeeInit()) glVertexAttrib2fvARB(index, v);}$/;"	f
_Lazy_glVertexAttrib2fvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2fvNV(GLuint index, const GLfloat * v)                 {if (GLeeInit()) glVertexAttrib2fvNV(index, v);}$/;"	f
_Lazy_glVertexAttrib2hNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2hNV(GLuint index, GLhalfNV x, GLhalfNV y)             {if (GLeeInit()) glVertexAttrib2hNV(index, x, y);}$/;"	f
_Lazy_glVertexAttrib2hvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2hvNV(GLuint index, const GLhalfNV * v)                {if (GLeeInit()) glVertexAttrib2hvNV(index, v);}$/;"	f
_Lazy_glVertexAttrib2s	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2s(GLuint index, GLshort x, GLshort y)                 {if (GLeeInit()) glVertexAttrib2s(index, x, y);}$/;"	f
_Lazy_glVertexAttrib2sARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2sARB(GLuint index, GLshort x, GLshort y)              {if (GLeeInit()) glVertexAttrib2sARB(index, x, y);}$/;"	f
_Lazy_glVertexAttrib2sNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2sNV(GLuint index, GLshort x, GLshort y)               {if (GLeeInit()) glVertexAttrib2sNV(index, x, y);}$/;"	f
_Lazy_glVertexAttrib2sv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2sv(GLuint index, const GLshort * v)                   {if (GLeeInit()) glVertexAttrib2sv(index, v);}$/;"	f
_Lazy_glVertexAttrib2svARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2svARB(GLuint index, const GLshort * v)                {if (GLeeInit()) glVertexAttrib2svARB(index, v);}$/;"	f
_Lazy_glVertexAttrib2svNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib2svNV(GLuint index, const GLshort * v)                 {if (GLeeInit()) glVertexAttrib2svNV(index, v);}$/;"	f
_Lazy_glVertexAttrib3d	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z)   {if (GLeeInit()) glVertexAttrib3d(index, x, y, z);}$/;"	f
_Lazy_glVertexAttrib3dARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z)  {if (GLeeInit()) glVertexAttrib3dARB(index, x, y, z);}$/;"	f
_Lazy_glVertexAttrib3dNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z)  {if (GLeeInit()) glVertexAttrib3dNV(index, x, y, z);}$/;"	f
_Lazy_glVertexAttrib3dv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3dv(GLuint index, const GLdouble * v)                  {if (GLeeInit()) glVertexAttrib3dv(index, v);}$/;"	f
_Lazy_glVertexAttrib3dvARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3dvARB(GLuint index, const GLdouble * v)               {if (GLeeInit()) glVertexAttrib3dvARB(index, v);}$/;"	f
_Lazy_glVertexAttrib3dvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3dvNV(GLuint index, const GLdouble * v)                {if (GLeeInit()) glVertexAttrib3dvNV(index, v);}$/;"	f
_Lazy_glVertexAttrib3f	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z)      {if (GLeeInit()) glVertexAttrib3f(index, x, y, z);}$/;"	f
_Lazy_glVertexAttrib3fARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z)   {if (GLeeInit()) glVertexAttrib3fARB(index, x, y, z);}$/;"	f
_Lazy_glVertexAttrib3fNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z)    {if (GLeeInit()) glVertexAttrib3fNV(index, x, y, z);}$/;"	f
_Lazy_glVertexAttrib3fv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3fv(GLuint index, const GLfloat * v)                   {if (GLeeInit()) glVertexAttrib3fv(index, v);}$/;"	f
_Lazy_glVertexAttrib3fvARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3fvARB(GLuint index, const GLfloat * v)                {if (GLeeInit()) glVertexAttrib3fvARB(index, v);}$/;"	f
_Lazy_glVertexAttrib3fvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3fvNV(GLuint index, const GLfloat * v)                 {if (GLeeInit()) glVertexAttrib3fvNV(index, v);}$/;"	f
_Lazy_glVertexAttrib3hNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z)  {if (GLeeInit()) glVertexAttrib3hNV(index, x, y, z);}$/;"	f
_Lazy_glVertexAttrib3hvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3hvNV(GLuint index, const GLhalfNV * v)                {if (GLeeInit()) glVertexAttrib3hvNV(index, v);}$/;"	f
_Lazy_glVertexAttrib3s	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z)      {if (GLeeInit()) glVertexAttrib3s(index, x, y, z);}$/;"	f
_Lazy_glVertexAttrib3sARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3sARB(GLuint index, GLshort x, GLshort y, GLshort z)   {if (GLeeInit()) glVertexAttrib3sARB(index, x, y, z);}$/;"	f
_Lazy_glVertexAttrib3sNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3sNV(GLuint index, GLshort x, GLshort y, GLshort z)    {if (GLeeInit()) glVertexAttrib3sNV(index, x, y, z);}$/;"	f
_Lazy_glVertexAttrib3sv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3sv(GLuint index, const GLshort * v)                   {if (GLeeInit()) glVertexAttrib3sv(index, v);}$/;"	f
_Lazy_glVertexAttrib3svARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3svARB(GLuint index, const GLshort * v)                {if (GLeeInit()) glVertexAttrib3svARB(index, v);}$/;"	f
_Lazy_glVertexAttrib3svNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib3svNV(GLuint index, const GLshort * v)                 {if (GLeeInit()) glVertexAttrib3svNV(index, v);}$/;"	f
_Lazy_glVertexAttrib4Nbv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4Nbv(GLuint index, const GLbyte * v)                   {if (GLeeInit()) glVertexAttrib4Nbv(index, v);}$/;"	f
_Lazy_glVertexAttrib4NbvARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4NbvARB(GLuint index, const GLbyte * v)                {if (GLeeInit()) glVertexAttrib4NbvARB(index, v);}$/;"	f
_Lazy_glVertexAttrib4Niv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4Niv(GLuint index, const GLint * v)                    {if (GLeeInit()) glVertexAttrib4Niv(index, v);}$/;"	f
_Lazy_glVertexAttrib4NivARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4NivARB(GLuint index, const GLint * v)                 {if (GLeeInit()) glVertexAttrib4NivARB(index, v);}$/;"	f
_Lazy_glVertexAttrib4Nsv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4Nsv(GLuint index, const GLshort * v)                  {if (GLeeInit()) glVertexAttrib4Nsv(index, v);}$/;"	f
_Lazy_glVertexAttrib4NsvARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4NsvARB(GLuint index, const GLshort * v)               {if (GLeeInit()) glVertexAttrib4NsvARB(index, v);}$/;"	f
_Lazy_glVertexAttrib4Nub	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)  {if (GLeeInit()) glVertexAttrib4Nub(index, x, y, z, w);}$/;"	f
_Lazy_glVertexAttrib4NubARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4NubARB(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)  {if (GLeeInit()) glVertexAttrib4NubARB(index, x, y, z, w);}$/;"	f
_Lazy_glVertexAttrib4Nubv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4Nubv(GLuint index, const GLubyte * v)                 {if (GLeeInit()) glVertexAttrib4Nubv(index, v);}$/;"	f
_Lazy_glVertexAttrib4NubvARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4NubvARB(GLuint index, const GLubyte * v)              {if (GLeeInit()) glVertexAttrib4NubvARB(index, v);}$/;"	f
_Lazy_glVertexAttrib4Nuiv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4Nuiv(GLuint index, const GLuint * v)                  {if (GLeeInit()) glVertexAttrib4Nuiv(index, v);}$/;"	f
_Lazy_glVertexAttrib4NuivARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4NuivARB(GLuint index, const GLuint * v)               {if (GLeeInit()) glVertexAttrib4NuivARB(index, v);}$/;"	f
_Lazy_glVertexAttrib4Nusv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4Nusv(GLuint index, const GLushort * v)                {if (GLeeInit()) glVertexAttrib4Nusv(index, v);}$/;"	f
_Lazy_glVertexAttrib4NusvARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4NusvARB(GLuint index, const GLushort * v)             {if (GLeeInit()) glVertexAttrib4NusvARB(index, v);}$/;"	f
_Lazy_glVertexAttrib4bv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4bv(GLuint index, const GLbyte * v)                    {if (GLeeInit()) glVertexAttrib4bv(index, v);}$/;"	f
_Lazy_glVertexAttrib4bvARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4bvARB(GLuint index, const GLbyte * v)                 {if (GLeeInit()) glVertexAttrib4bvARB(index, v);}$/;"	f
_Lazy_glVertexAttrib4d	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)  {if (GLeeInit()) glVertexAttrib4d(index, x, y, z, w);}$/;"	f
_Lazy_glVertexAttrib4dARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)  {if (GLeeInit()) glVertexAttrib4dARB(index, x, y, z, w);}$/;"	f
_Lazy_glVertexAttrib4dNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)  {if (GLeeInit()) glVertexAttrib4dNV(index, x, y, z, w);}$/;"	f
_Lazy_glVertexAttrib4dv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4dv(GLuint index, const GLdouble * v)                  {if (GLeeInit()) glVertexAttrib4dv(index, v);}$/;"	f
_Lazy_glVertexAttrib4dvARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4dvARB(GLuint index, const GLdouble * v)               {if (GLeeInit()) glVertexAttrib4dvARB(index, v);}$/;"	f
_Lazy_glVertexAttrib4dvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4dvNV(GLuint index, const GLdouble * v)                {if (GLeeInit()) glVertexAttrib4dvNV(index, v);}$/;"	f
_Lazy_glVertexAttrib4f	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)  {if (GLeeInit()) glVertexAttrib4f(index, x, y, z, w);}$/;"	f
_Lazy_glVertexAttrib4fARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)  {if (GLeeInit()) glVertexAttrib4fARB(index, x, y, z, w);}$/;"	f
_Lazy_glVertexAttrib4fNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)  {if (GLeeInit()) glVertexAttrib4fNV(index, x, y, z, w);}$/;"	f
_Lazy_glVertexAttrib4fv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4fv(GLuint index, const GLfloat * v)                   {if (GLeeInit()) glVertexAttrib4fv(index, v);}$/;"	f
_Lazy_glVertexAttrib4fvARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4fvARB(GLuint index, const GLfloat * v)                {if (GLeeInit()) glVertexAttrib4fvARB(index, v);}$/;"	f
_Lazy_glVertexAttrib4fvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4fvNV(GLuint index, const GLfloat * v)                 {if (GLeeInit()) glVertexAttrib4fvNV(index, v);}$/;"	f
_Lazy_glVertexAttrib4hNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w)  {if (GLeeInit()) glVertexAttrib4hNV(index, x, y, z, w);}$/;"	f
_Lazy_glVertexAttrib4hvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4hvNV(GLuint index, const GLhalfNV * v)                {if (GLeeInit()) glVertexAttrib4hvNV(index, v);}$/;"	f
_Lazy_glVertexAttrib4iv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4iv(GLuint index, const GLint * v)                     {if (GLeeInit()) glVertexAttrib4iv(index, v);}$/;"	f
_Lazy_glVertexAttrib4ivARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4ivARB(GLuint index, const GLint * v)                  {if (GLeeInit()) glVertexAttrib4ivARB(index, v);}$/;"	f
_Lazy_glVertexAttrib4s	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)  {if (GLeeInit()) glVertexAttrib4s(index, x, y, z, w);}$/;"	f
_Lazy_glVertexAttrib4sARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4sARB(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)  {if (GLeeInit()) glVertexAttrib4sARB(index, x, y, z, w);}$/;"	f
_Lazy_glVertexAttrib4sNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4sNV(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)  {if (GLeeInit()) glVertexAttrib4sNV(index, x, y, z, w);}$/;"	f
_Lazy_glVertexAttrib4sv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4sv(GLuint index, const GLshort * v)                   {if (GLeeInit()) glVertexAttrib4sv(index, v);}$/;"	f
_Lazy_glVertexAttrib4svARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4svARB(GLuint index, const GLshort * v)                {if (GLeeInit()) glVertexAttrib4svARB(index, v);}$/;"	f
_Lazy_glVertexAttrib4svNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4svNV(GLuint index, const GLshort * v)                 {if (GLeeInit()) glVertexAttrib4svNV(index, v);}$/;"	f
_Lazy_glVertexAttrib4ubNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4ubNV(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)  {if (GLeeInit()) glVertexAttrib4ubNV(index, x, y, z, w);}$/;"	f
_Lazy_glVertexAttrib4ubv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4ubv(GLuint index, const GLubyte * v)                  {if (GLeeInit()) glVertexAttrib4ubv(index, v);}$/;"	f
_Lazy_glVertexAttrib4ubvARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4ubvARB(GLuint index, const GLubyte * v)               {if (GLeeInit()) glVertexAttrib4ubvARB(index, v);}$/;"	f
_Lazy_glVertexAttrib4ubvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4ubvNV(GLuint index, const GLubyte * v)                {if (GLeeInit()) glVertexAttrib4ubvNV(index, v);}$/;"	f
_Lazy_glVertexAttrib4uiv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4uiv(GLuint index, const GLuint * v)                   {if (GLeeInit()) glVertexAttrib4uiv(index, v);}$/;"	f
_Lazy_glVertexAttrib4uivARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4uivARB(GLuint index, const GLuint * v)                {if (GLeeInit()) glVertexAttrib4uivARB(index, v);}$/;"	f
_Lazy_glVertexAttrib4usv	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4usv(GLuint index, const GLushort * v)                 {if (GLeeInit()) glVertexAttrib4usv(index, v);}$/;"	f
_Lazy_glVertexAttrib4usvARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttrib4usvARB(GLuint index, const GLushort * v)              {if (GLeeInit()) glVertexAttrib4usvARB(index, v);}$/;"	f
_Lazy_glVertexAttribArrayObjectATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribArrayObjectATI(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset)  {if (GLeeInit()) glVertexAttribArrayObjectATI(index, size, type, normalized, stride, buffer, offset);}$/;"	f
_Lazy_glVertexAttribI1iEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI1iEXT(GLuint index, GLint x)                          {if (GLeeInit()) glVertexAttribI1iEXT(index, x);}$/;"	f
_Lazy_glVertexAttribI1ivEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI1ivEXT(GLuint index, const GLint * v)                 {if (GLeeInit()) glVertexAttribI1ivEXT(index, v);}$/;"	f
_Lazy_glVertexAttribI1uiEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI1uiEXT(GLuint index, GLuint x)                        {if (GLeeInit()) glVertexAttribI1uiEXT(index, x);}$/;"	f
_Lazy_glVertexAttribI1uivEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI1uivEXT(GLuint index, const GLuint * v)               {if (GLeeInit()) glVertexAttribI1uivEXT(index, v);}$/;"	f
_Lazy_glVertexAttribI2iEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI2iEXT(GLuint index, GLint x, GLint y)                 {if (GLeeInit()) glVertexAttribI2iEXT(index, x, y);}$/;"	f
_Lazy_glVertexAttribI2ivEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI2ivEXT(GLuint index, const GLint * v)                 {if (GLeeInit()) glVertexAttribI2ivEXT(index, v);}$/;"	f
_Lazy_glVertexAttribI2uiEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI2uiEXT(GLuint index, GLuint x, GLuint y)              {if (GLeeInit()) glVertexAttribI2uiEXT(index, x, y);}$/;"	f
_Lazy_glVertexAttribI2uivEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI2uivEXT(GLuint index, const GLuint * v)               {if (GLeeInit()) glVertexAttribI2uivEXT(index, v);}$/;"	f
_Lazy_glVertexAttribI3iEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI3iEXT(GLuint index, GLint x, GLint y, GLint z)        {if (GLeeInit()) glVertexAttribI3iEXT(index, x, y, z);}$/;"	f
_Lazy_glVertexAttribI3ivEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI3ivEXT(GLuint index, const GLint * v)                 {if (GLeeInit()) glVertexAttribI3ivEXT(index, v);}$/;"	f
_Lazy_glVertexAttribI3uiEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI3uiEXT(GLuint index, GLuint x, GLuint y, GLuint z)    {if (GLeeInit()) glVertexAttribI3uiEXT(index, x, y, z);}$/;"	f
_Lazy_glVertexAttribI3uivEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI3uivEXT(GLuint index, const GLuint * v)               {if (GLeeInit()) glVertexAttribI3uivEXT(index, v);}$/;"	f
_Lazy_glVertexAttribI4bvEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI4bvEXT(GLuint index, const GLbyte * v)                {if (GLeeInit()) glVertexAttribI4bvEXT(index, v);}$/;"	f
_Lazy_glVertexAttribI4iEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI4iEXT(GLuint index, GLint x, GLint y, GLint z, GLint w)  {if (GLeeInit()) glVertexAttribI4iEXT(index, x, y, z, w);}$/;"	f
_Lazy_glVertexAttribI4ivEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI4ivEXT(GLuint index, const GLint * v)                 {if (GLeeInit()) glVertexAttribI4ivEXT(index, v);}$/;"	f
_Lazy_glVertexAttribI4svEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI4svEXT(GLuint index, const GLshort * v)               {if (GLeeInit()) glVertexAttribI4svEXT(index, v);}$/;"	f
_Lazy_glVertexAttribI4ubvEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI4ubvEXT(GLuint index, const GLubyte * v)              {if (GLeeInit()) glVertexAttribI4ubvEXT(index, v);}$/;"	f
_Lazy_glVertexAttribI4uiEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI4uiEXT(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)  {if (GLeeInit()) glVertexAttribI4uiEXT(index, x, y, z, w);}$/;"	f
_Lazy_glVertexAttribI4uivEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI4uivEXT(GLuint index, const GLuint * v)               {if (GLeeInit()) glVertexAttribI4uivEXT(index, v);}$/;"	f
_Lazy_glVertexAttribI4usvEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribI4usvEXT(GLuint index, const GLushort * v)             {if (GLeeInit()) glVertexAttribI4usvEXT(index, v);}$/;"	f
_Lazy_glVertexAttribIPointerEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribIPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid * pointer)  {if (GLeeInit()) glVertexAttribIPointerEXT(index, size, type, stride, pointer);}$/;"	f
_Lazy_glVertexAttribPointer	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid * pointer)  {if (GLeeInit()) glVertexAttribPointer(index, size, type, normalized, stride, pointer);}$/;"	f
_Lazy_glVertexAttribPointerARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribPointerARB(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid * pointer)  {if (GLeeInit()) glVertexAttribPointerARB(index, size, type, normalized, stride, pointer);}$/;"	f
_Lazy_glVertexAttribPointerNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribPointerNV(GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid * pointer)  {if (GLeeInit()) glVertexAttribPointerNV(index, fsize, type, stride, pointer);}$/;"	f
_Lazy_glVertexAttribs1dvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs1dvNV(GLuint index, GLsizei count, const GLdouble * v)  {if (GLeeInit()) glVertexAttribs1dvNV(index, count, v);}$/;"	f
_Lazy_glVertexAttribs1fvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs1fvNV(GLuint index, GLsizei count, const GLfloat * v)  {if (GLeeInit()) glVertexAttribs1fvNV(index, count, v);}$/;"	f
_Lazy_glVertexAttribs1hvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs1hvNV(GLuint index, GLsizei n, const GLhalfNV * v)    {if (GLeeInit()) glVertexAttribs1hvNV(index, n, v);}$/;"	f
_Lazy_glVertexAttribs1svNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs1svNV(GLuint index, GLsizei count, const GLshort * v)  {if (GLeeInit()) glVertexAttribs1svNV(index, count, v);}$/;"	f
_Lazy_glVertexAttribs2dvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs2dvNV(GLuint index, GLsizei count, const GLdouble * v)  {if (GLeeInit()) glVertexAttribs2dvNV(index, count, v);}$/;"	f
_Lazy_glVertexAttribs2fvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs2fvNV(GLuint index, GLsizei count, const GLfloat * v)  {if (GLeeInit()) glVertexAttribs2fvNV(index, count, v);}$/;"	f
_Lazy_glVertexAttribs2hvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs2hvNV(GLuint index, GLsizei n, const GLhalfNV * v)    {if (GLeeInit()) glVertexAttribs2hvNV(index, n, v);}$/;"	f
_Lazy_glVertexAttribs2svNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs2svNV(GLuint index, GLsizei count, const GLshort * v)  {if (GLeeInit()) glVertexAttribs2svNV(index, count, v);}$/;"	f
_Lazy_glVertexAttribs3dvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs3dvNV(GLuint index, GLsizei count, const GLdouble * v)  {if (GLeeInit()) glVertexAttribs3dvNV(index, count, v);}$/;"	f
_Lazy_glVertexAttribs3fvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs3fvNV(GLuint index, GLsizei count, const GLfloat * v)  {if (GLeeInit()) glVertexAttribs3fvNV(index, count, v);}$/;"	f
_Lazy_glVertexAttribs3hvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs3hvNV(GLuint index, GLsizei n, const GLhalfNV * v)    {if (GLeeInit()) glVertexAttribs3hvNV(index, n, v);}$/;"	f
_Lazy_glVertexAttribs3svNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs3svNV(GLuint index, GLsizei count, const GLshort * v)  {if (GLeeInit()) glVertexAttribs3svNV(index, count, v);}$/;"	f
_Lazy_glVertexAttribs4dvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs4dvNV(GLuint index, GLsizei count, const GLdouble * v)  {if (GLeeInit()) glVertexAttribs4dvNV(index, count, v);}$/;"	f
_Lazy_glVertexAttribs4fvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs4fvNV(GLuint index, GLsizei count, const GLfloat * v)  {if (GLeeInit()) glVertexAttribs4fvNV(index, count, v);}$/;"	f
_Lazy_glVertexAttribs4hvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs4hvNV(GLuint index, GLsizei n, const GLhalfNV * v)    {if (GLeeInit()) glVertexAttribs4hvNV(index, n, v);}$/;"	f
_Lazy_glVertexAttribs4svNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs4svNV(GLuint index, GLsizei count, const GLshort * v)  {if (GLeeInit()) glVertexAttribs4svNV(index, count, v);}$/;"	f
_Lazy_glVertexAttribs4ubvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexAttribs4ubvNV(GLuint index, GLsizei count, const GLubyte * v)  {if (GLeeInit()) glVertexAttribs4ubvNV(index, count, v);}$/;"	f
_Lazy_glVertexBlendARB	shared/GLee.c	/^void __stdcall _Lazy_glVertexBlendARB(GLint count)                                        {if (GLeeInit()) glVertexBlendARB(count);}$/;"	f
_Lazy_glVertexBlendEnvfATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexBlendEnvfATI(GLenum pname, GLfloat param)                    {if (GLeeInit()) glVertexBlendEnvfATI(pname, param);}$/;"	f
_Lazy_glVertexBlendEnviATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexBlendEnviATI(GLenum pname, GLint param)                      {if (GLeeInit()) glVertexBlendEnviATI(pname, param);}$/;"	f
_Lazy_glVertexPointerEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid * pointer)  {if (GLeeInit()) glVertexPointerEXT(size, type, stride, count, pointer);}$/;"	f
_Lazy_glVertexPointerListIBM	shared/GLee.c	/^void __stdcall _Lazy_glVertexPointerListIBM(GLint size, GLenum type, GLint stride, const GLvoid* * pointer, GLint ptrstride)  {if (GLeeInit()) glVertexPointerListIBM(size, type, stride, pointer, ptrstride);}$/;"	f
_Lazy_glVertexPointervINTEL	shared/GLee.c	/^void __stdcall _Lazy_glVertexPointervINTEL(GLint size, GLenum type, const GLvoid* * pointer)  {if (GLeeInit()) glVertexPointervINTEL(size, type, pointer);}$/;"	f
_Lazy_glVertexStream1dATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream1dATI(GLenum stream, GLdouble x)                       {if (GLeeInit()) glVertexStream1dATI(stream, x);}$/;"	f
_Lazy_glVertexStream1dvATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream1dvATI(GLenum stream, const GLdouble * coords)         {if (GLeeInit()) glVertexStream1dvATI(stream, coords);}$/;"	f
_Lazy_glVertexStream1fATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream1fATI(GLenum stream, GLfloat x)                        {if (GLeeInit()) glVertexStream1fATI(stream, x);}$/;"	f
_Lazy_glVertexStream1fvATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream1fvATI(GLenum stream, const GLfloat * coords)          {if (GLeeInit()) glVertexStream1fvATI(stream, coords);}$/;"	f
_Lazy_glVertexStream1iATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream1iATI(GLenum stream, GLint x)                          {if (GLeeInit()) glVertexStream1iATI(stream, x);}$/;"	f
_Lazy_glVertexStream1ivATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream1ivATI(GLenum stream, const GLint * coords)            {if (GLeeInit()) glVertexStream1ivATI(stream, coords);}$/;"	f
_Lazy_glVertexStream1sATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream1sATI(GLenum stream, GLshort x)                        {if (GLeeInit()) glVertexStream1sATI(stream, x);}$/;"	f
_Lazy_glVertexStream1svATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream1svATI(GLenum stream, const GLshort * coords)          {if (GLeeInit()) glVertexStream1svATI(stream, coords);}$/;"	f
_Lazy_glVertexStream2dATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream2dATI(GLenum stream, GLdouble x, GLdouble y)           {if (GLeeInit()) glVertexStream2dATI(stream, x, y);}$/;"	f
_Lazy_glVertexStream2dvATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream2dvATI(GLenum stream, const GLdouble * coords)         {if (GLeeInit()) glVertexStream2dvATI(stream, coords);}$/;"	f
_Lazy_glVertexStream2fATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream2fATI(GLenum stream, GLfloat x, GLfloat y)             {if (GLeeInit()) glVertexStream2fATI(stream, x, y);}$/;"	f
_Lazy_glVertexStream2fvATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream2fvATI(GLenum stream, const GLfloat * coords)          {if (GLeeInit()) glVertexStream2fvATI(stream, coords);}$/;"	f
_Lazy_glVertexStream2iATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream2iATI(GLenum stream, GLint x, GLint y)                 {if (GLeeInit()) glVertexStream2iATI(stream, x, y);}$/;"	f
_Lazy_glVertexStream2ivATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream2ivATI(GLenum stream, const GLint * coords)            {if (GLeeInit()) glVertexStream2ivATI(stream, coords);}$/;"	f
_Lazy_glVertexStream2sATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream2sATI(GLenum stream, GLshort x, GLshort y)             {if (GLeeInit()) glVertexStream2sATI(stream, x, y);}$/;"	f
_Lazy_glVertexStream2svATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream2svATI(GLenum stream, const GLshort * coords)          {if (GLeeInit()) glVertexStream2svATI(stream, coords);}$/;"	f
_Lazy_glVertexStream3dATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream3dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z)  {if (GLeeInit()) glVertexStream3dATI(stream, x, y, z);}$/;"	f
_Lazy_glVertexStream3dvATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream3dvATI(GLenum stream, const GLdouble * coords)         {if (GLeeInit()) glVertexStream3dvATI(stream, coords);}$/;"	f
_Lazy_glVertexStream3fATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream3fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z)  {if (GLeeInit()) glVertexStream3fATI(stream, x, y, z);}$/;"	f
_Lazy_glVertexStream3fvATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream3fvATI(GLenum stream, const GLfloat * coords)          {if (GLeeInit()) glVertexStream3fvATI(stream, coords);}$/;"	f
_Lazy_glVertexStream3iATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream3iATI(GLenum stream, GLint x, GLint y, GLint z)        {if (GLeeInit()) glVertexStream3iATI(stream, x, y, z);}$/;"	f
_Lazy_glVertexStream3ivATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream3ivATI(GLenum stream, const GLint * coords)            {if (GLeeInit()) glVertexStream3ivATI(stream, coords);}$/;"	f
_Lazy_glVertexStream3sATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream3sATI(GLenum stream, GLshort x, GLshort y, GLshort z)  {if (GLeeInit()) glVertexStream3sATI(stream, x, y, z);}$/;"	f
_Lazy_glVertexStream3svATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream3svATI(GLenum stream, const GLshort * coords)          {if (GLeeInit()) glVertexStream3svATI(stream, coords);}$/;"	f
_Lazy_glVertexStream4dATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream4dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w)  {if (GLeeInit()) glVertexStream4dATI(stream, x, y, z, w);}$/;"	f
_Lazy_glVertexStream4dvATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream4dvATI(GLenum stream, const GLdouble * coords)         {if (GLeeInit()) glVertexStream4dvATI(stream, coords);}$/;"	f
_Lazy_glVertexStream4fATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream4fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w)  {if (GLeeInit()) glVertexStream4fATI(stream, x, y, z, w);}$/;"	f
_Lazy_glVertexStream4fvATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream4fvATI(GLenum stream, const GLfloat * coords)          {if (GLeeInit()) glVertexStream4fvATI(stream, coords);}$/;"	f
_Lazy_glVertexStream4iATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream4iATI(GLenum stream, GLint x, GLint y, GLint z, GLint w)  {if (GLeeInit()) glVertexStream4iATI(stream, x, y, z, w);}$/;"	f
_Lazy_glVertexStream4ivATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream4ivATI(GLenum stream, const GLint * coords)            {if (GLeeInit()) glVertexStream4ivATI(stream, coords);}$/;"	f
_Lazy_glVertexStream4sATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream4sATI(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w)  {if (GLeeInit()) glVertexStream4sATI(stream, x, y, z, w);}$/;"	f
_Lazy_glVertexStream4svATI	shared/GLee.c	/^void __stdcall _Lazy_glVertexStream4svATI(GLenum stream, const GLshort * coords)          {if (GLeeInit()) glVertexStream4svATI(stream, coords);}$/;"	f
_Lazy_glVertexWeightPointerEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexWeightPointerEXT(GLsizei size, GLenum type, GLsizei stride, const GLvoid * pointer)  {if (GLeeInit()) glVertexWeightPointerEXT(size, type, stride, pointer);}$/;"	f
_Lazy_glVertexWeightfEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexWeightfEXT(GLfloat weight)                                   {if (GLeeInit()) glVertexWeightfEXT(weight);}$/;"	f
_Lazy_glVertexWeightfvEXT	shared/GLee.c	/^void __stdcall _Lazy_glVertexWeightfvEXT(const GLfloat * weight)                          {if (GLeeInit()) glVertexWeightfvEXT(weight);}$/;"	f
_Lazy_glVertexWeighthNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexWeighthNV(GLhalfNV weight)                                   {if (GLeeInit()) glVertexWeighthNV(weight);}$/;"	f
_Lazy_glVertexWeighthvNV	shared/GLee.c	/^void __stdcall _Lazy_glVertexWeighthvNV(const GLhalfNV * weight)                          {if (GLeeInit()) glVertexWeighthvNV(weight);}$/;"	f
_Lazy_glWeightPointerARB	shared/GLee.c	/^void __stdcall _Lazy_glWeightPointerARB(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer)  {if (GLeeInit()) glWeightPointerARB(size, type, stride, pointer);}$/;"	f
_Lazy_glWeightbvARB	shared/GLee.c	/^void __stdcall _Lazy_glWeightbvARB(GLint size, const GLbyte * weights)                    {if (GLeeInit()) glWeightbvARB(size, weights);}$/;"	f
_Lazy_glWeightdvARB	shared/GLee.c	/^void __stdcall _Lazy_glWeightdvARB(GLint size, const GLdouble * weights)                  {if (GLeeInit()) glWeightdvARB(size, weights);}$/;"	f
_Lazy_glWeightfvARB	shared/GLee.c	/^void __stdcall _Lazy_glWeightfvARB(GLint size, const GLfloat * weights)                   {if (GLeeInit()) glWeightfvARB(size, weights);}$/;"	f
_Lazy_glWeightivARB	shared/GLee.c	/^void __stdcall _Lazy_glWeightivARB(GLint size, const GLint * weights)                     {if (GLeeInit()) glWeightivARB(size, weights);}$/;"	f
_Lazy_glWeightsvARB	shared/GLee.c	/^void __stdcall _Lazy_glWeightsvARB(GLint size, const GLshort * weights)                   {if (GLeeInit()) glWeightsvARB(size, weights);}$/;"	f
_Lazy_glWeightubvARB	shared/GLee.c	/^void __stdcall _Lazy_glWeightubvARB(GLint size, const GLubyte * weights)                  {if (GLeeInit()) glWeightubvARB(size, weights);}$/;"	f
_Lazy_glWeightuivARB	shared/GLee.c	/^void __stdcall _Lazy_glWeightuivARB(GLint size, const GLuint * weights)                   {if (GLeeInit()) glWeightuivARB(size, weights);}$/;"	f
_Lazy_glWeightusvARB	shared/GLee.c	/^void __stdcall _Lazy_glWeightusvARB(GLint size, const GLushort * weights)                 {if (GLeeInit()) glWeightusvARB(size, weights);}$/;"	f
_Lazy_glWindowPos2d	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2d(GLdouble x, GLdouble y)                                {if (GLeeInit()) glWindowPos2d(x, y);}$/;"	f
_Lazy_glWindowPos2dARB	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2dARB(GLdouble x, GLdouble y)                             {if (GLeeInit()) glWindowPos2dARB(x, y);}$/;"	f
_Lazy_glWindowPos2dMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2dMESA(GLdouble x, GLdouble y)                            {if (GLeeInit()) glWindowPos2dMESA(x, y);}$/;"	f
_Lazy_glWindowPos2dv	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2dv(const GLdouble * v)                                   {if (GLeeInit()) glWindowPos2dv(v);}$/;"	f
_Lazy_glWindowPos2dvARB	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2dvARB(const GLdouble * v)                                {if (GLeeInit()) glWindowPos2dvARB(v);}$/;"	f
_Lazy_glWindowPos2dvMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2dvMESA(const GLdouble * v)                               {if (GLeeInit()) glWindowPos2dvMESA(v);}$/;"	f
_Lazy_glWindowPos2f	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2f(GLfloat x, GLfloat y)                                  {if (GLeeInit()) glWindowPos2f(x, y);}$/;"	f
_Lazy_glWindowPos2fARB	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2fARB(GLfloat x, GLfloat y)                               {if (GLeeInit()) glWindowPos2fARB(x, y);}$/;"	f
_Lazy_glWindowPos2fMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2fMESA(GLfloat x, GLfloat y)                              {if (GLeeInit()) glWindowPos2fMESA(x, y);}$/;"	f
_Lazy_glWindowPos2fv	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2fv(const GLfloat * v)                                    {if (GLeeInit()) glWindowPos2fv(v);}$/;"	f
_Lazy_glWindowPos2fvARB	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2fvARB(const GLfloat * v)                                 {if (GLeeInit()) glWindowPos2fvARB(v);}$/;"	f
_Lazy_glWindowPos2fvMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2fvMESA(const GLfloat * v)                                {if (GLeeInit()) glWindowPos2fvMESA(v);}$/;"	f
_Lazy_glWindowPos2i	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2i(GLint x, GLint y)                                      {if (GLeeInit()) glWindowPos2i(x, y);}$/;"	f
_Lazy_glWindowPos2iARB	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2iARB(GLint x, GLint y)                                   {if (GLeeInit()) glWindowPos2iARB(x, y);}$/;"	f
_Lazy_glWindowPos2iMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2iMESA(GLint x, GLint y)                                  {if (GLeeInit()) glWindowPos2iMESA(x, y);}$/;"	f
_Lazy_glWindowPos2iv	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2iv(const GLint * v)                                      {if (GLeeInit()) glWindowPos2iv(v);}$/;"	f
_Lazy_glWindowPos2ivARB	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2ivARB(const GLint * v)                                   {if (GLeeInit()) glWindowPos2ivARB(v);}$/;"	f
_Lazy_glWindowPos2ivMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2ivMESA(const GLint * v)                                  {if (GLeeInit()) glWindowPos2ivMESA(v);}$/;"	f
_Lazy_glWindowPos2s	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2s(GLshort x, GLshort y)                                  {if (GLeeInit()) glWindowPos2s(x, y);}$/;"	f
_Lazy_glWindowPos2sARB	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2sARB(GLshort x, GLshort y)                               {if (GLeeInit()) glWindowPos2sARB(x, y);}$/;"	f
_Lazy_glWindowPos2sMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2sMESA(GLshort x, GLshort y)                              {if (GLeeInit()) glWindowPos2sMESA(x, y);}$/;"	f
_Lazy_glWindowPos2sv	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2sv(const GLshort * v)                                    {if (GLeeInit()) glWindowPos2sv(v);}$/;"	f
_Lazy_glWindowPos2svARB	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2svARB(const GLshort * v)                                 {if (GLeeInit()) glWindowPos2svARB(v);}$/;"	f
_Lazy_glWindowPos2svMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos2svMESA(const GLshort * v)                                {if (GLeeInit()) glWindowPos2svMESA(v);}$/;"	f
_Lazy_glWindowPos3d	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3d(GLdouble x, GLdouble y, GLdouble z)                    {if (GLeeInit()) glWindowPos3d(x, y, z);}$/;"	f
_Lazy_glWindowPos3dARB	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3dARB(GLdouble x, GLdouble y, GLdouble z)                 {if (GLeeInit()) glWindowPos3dARB(x, y, z);}$/;"	f
_Lazy_glWindowPos3dMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3dMESA(GLdouble x, GLdouble y, GLdouble z)                {if (GLeeInit()) glWindowPos3dMESA(x, y, z);}$/;"	f
_Lazy_glWindowPos3dv	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3dv(const GLdouble * v)                                   {if (GLeeInit()) glWindowPos3dv(v);}$/;"	f
_Lazy_glWindowPos3dvARB	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3dvARB(const GLdouble * v)                                {if (GLeeInit()) glWindowPos3dvARB(v);}$/;"	f
_Lazy_glWindowPos3dvMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3dvMESA(const GLdouble * v)                               {if (GLeeInit()) glWindowPos3dvMESA(v);}$/;"	f
_Lazy_glWindowPos3f	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3f(GLfloat x, GLfloat y, GLfloat z)                       {if (GLeeInit()) glWindowPos3f(x, y, z);}$/;"	f
_Lazy_glWindowPos3fARB	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3fARB(GLfloat x, GLfloat y, GLfloat z)                    {if (GLeeInit()) glWindowPos3fARB(x, y, z);}$/;"	f
_Lazy_glWindowPos3fMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3fMESA(GLfloat x, GLfloat y, GLfloat z)                   {if (GLeeInit()) glWindowPos3fMESA(x, y, z);}$/;"	f
_Lazy_glWindowPos3fv	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3fv(const GLfloat * v)                                    {if (GLeeInit()) glWindowPos3fv(v);}$/;"	f
_Lazy_glWindowPos3fvARB	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3fvARB(const GLfloat * v)                                 {if (GLeeInit()) glWindowPos3fvARB(v);}$/;"	f
_Lazy_glWindowPos3fvMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3fvMESA(const GLfloat * v)                                {if (GLeeInit()) glWindowPos3fvMESA(v);}$/;"	f
_Lazy_glWindowPos3i	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3i(GLint x, GLint y, GLint z)                             {if (GLeeInit()) glWindowPos3i(x, y, z);}$/;"	f
_Lazy_glWindowPos3iARB	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3iARB(GLint x, GLint y, GLint z)                          {if (GLeeInit()) glWindowPos3iARB(x, y, z);}$/;"	f
_Lazy_glWindowPos3iMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3iMESA(GLint x, GLint y, GLint z)                         {if (GLeeInit()) glWindowPos3iMESA(x, y, z);}$/;"	f
_Lazy_glWindowPos3iv	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3iv(const GLint * v)                                      {if (GLeeInit()) glWindowPos3iv(v);}$/;"	f
_Lazy_glWindowPos3ivARB	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3ivARB(const GLint * v)                                   {if (GLeeInit()) glWindowPos3ivARB(v);}$/;"	f
_Lazy_glWindowPos3ivMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3ivMESA(const GLint * v)                                  {if (GLeeInit()) glWindowPos3ivMESA(v);}$/;"	f
_Lazy_glWindowPos3s	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3s(GLshort x, GLshort y, GLshort z)                       {if (GLeeInit()) glWindowPos3s(x, y, z);}$/;"	f
_Lazy_glWindowPos3sARB	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3sARB(GLshort x, GLshort y, GLshort z)                    {if (GLeeInit()) glWindowPos3sARB(x, y, z);}$/;"	f
_Lazy_glWindowPos3sMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3sMESA(GLshort x, GLshort y, GLshort z)                   {if (GLeeInit()) glWindowPos3sMESA(x, y, z);}$/;"	f
_Lazy_glWindowPos3sv	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3sv(const GLshort * v)                                    {if (GLeeInit()) glWindowPos3sv(v);}$/;"	f
_Lazy_glWindowPos3svARB	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3svARB(const GLshort * v)                                 {if (GLeeInit()) glWindowPos3svARB(v);}$/;"	f
_Lazy_glWindowPos3svMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos3svMESA(const GLshort * v)                                {if (GLeeInit()) glWindowPos3svMESA(v);}$/;"	f
_Lazy_glWindowPos4dMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos4dMESA(GLdouble x, GLdouble y, GLdouble z, GLdouble w)    {if (GLeeInit()) glWindowPos4dMESA(x, y, z, w);}$/;"	f
_Lazy_glWindowPos4dvMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos4dvMESA(const GLdouble * v)                               {if (GLeeInit()) glWindowPos4dvMESA(v);}$/;"	f
_Lazy_glWindowPos4fMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos4fMESA(GLfloat x, GLfloat y, GLfloat z, GLfloat w)        {if (GLeeInit()) glWindowPos4fMESA(x, y, z, w);}$/;"	f
_Lazy_glWindowPos4fvMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos4fvMESA(const GLfloat * v)                                {if (GLeeInit()) glWindowPos4fvMESA(v);}$/;"	f
_Lazy_glWindowPos4iMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos4iMESA(GLint x, GLint y, GLint z, GLint w)                {if (GLeeInit()) glWindowPos4iMESA(x, y, z, w);}$/;"	f
_Lazy_glWindowPos4ivMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos4ivMESA(const GLint * v)                                  {if (GLeeInit()) glWindowPos4ivMESA(v);}$/;"	f
_Lazy_glWindowPos4sMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos4sMESA(GLshort x, GLshort y, GLshort z, GLshort w)        {if (GLeeInit()) glWindowPos4sMESA(x, y, z, w);}$/;"	f
_Lazy_glWindowPos4svMESA	shared/GLee.c	/^void __stdcall _Lazy_glWindowPos4svMESA(const GLshort * v)                                {if (GLeeInit()) glWindowPos4svMESA(v);}$/;"	f
_Lazy_glWriteMaskEXT	shared/GLee.c	/^void __stdcall _Lazy_glWriteMaskEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW)  {if (GLeeInit()) glWriteMaskEXT(res, in, outX, outY, outZ, outW);}$/;"	f
_Lazy_glXBindChannelToWindowSGIX	shared/GLee.c	/^int __stdcall _Lazy_glXBindChannelToWindowSGIX(Display * display, int screen, int channel, Window window)  {if (GLeeInit()) return glXBindChannelToWindowSGIX(display, screen, channel, window); return (int)0;}$/;"	f
_Lazy_glXBindHyperpipeSGIX	shared/GLee.c	/^int __stdcall _Lazy_glXBindHyperpipeSGIX(Display * dpy, int hpId)                         {if (GLeeInit()) return glXBindHyperpipeSGIX(dpy, hpId); return (int)0;}$/;"	f
_Lazy_glXBindSwapBarrierSGIX	shared/GLee.c	/^void __stdcall _Lazy_glXBindSwapBarrierSGIX(Display * dpy, GLXDrawable drawable, int barrier)  {if (GLeeInit()) glXBindSwapBarrierSGIX(dpy, drawable, barrier);}$/;"	f
_Lazy_glXChannelRectSGIX	shared/GLee.c	/^int __stdcall _Lazy_glXChannelRectSGIX(Display * display, int screen, int channel, int x, int y, int w, int h)  {if (GLeeInit()) return glXChannelRectSGIX(display, screen, channel, x, y, w, h); return (int)0;}$/;"	f
_Lazy_glXChannelRectSyncSGIX	shared/GLee.c	/^int __stdcall _Lazy_glXChannelRectSyncSGIX(Display * display, int screen, int channel, GLenum synctype)  {if (GLeeInit()) return glXChannelRectSyncSGIX(display, screen, channel, synctype); return (int)0;}$/;"	f
_Lazy_glXChooseFBConfig	shared/GLee.c	/^GLXFBConfig * __stdcall _Lazy_glXChooseFBConfig(Display * dpy, int screen, const int * attrib_list, int * nelements)  {if (GLeeInit()) return glXChooseFBConfig(dpy, screen, attrib_list, nelements); return (GLXFBConfig *)0;}$/;"	f
_Lazy_glXChooseFBConfigSGIX	shared/GLee.c	/^GLXFBConfigSGIX * __stdcall _Lazy_glXChooseFBConfigSGIX(Display * dpy, int screen, int * attrib_list, int * nelements)  {if (GLeeInit()) return glXChooseFBConfigSGIX(dpy, screen, attrib_list, nelements); return (GLXFBConfigSGIX *)0;}$/;"	f
_Lazy_glXCopySubBufferMESA	shared/GLee.c	/^void __stdcall _Lazy_glXCopySubBufferMESA(Display * dpy, GLXDrawable drawable, int x, int y, int width, int height)  {if (GLeeInit()) glXCopySubBufferMESA(dpy, drawable, x, y, width, height);}$/;"	f
_Lazy_glXCreateContextWithConfigSGIX	shared/GLee.c	/^GLXContext __stdcall _Lazy_glXCreateContextWithConfigSGIX(Display * dpy, GLXFBConfigSGIX config, int render_type, GLXContext share_list, Bool direct)  {if (GLeeInit()) return glXCreateContextWithConfigSGIX(dpy, config, render_type, share_list, direct); return (GLXContext)0;}$/;"	f
_Lazy_glXCreateGLXPbufferSGIX	shared/GLee.c	/^GLXPbufferSGIX __stdcall _Lazy_glXCreateGLXPbufferSGIX(Display * dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int * attrib_list)  {if (GLeeInit()) return glXCreateGLXPbufferSGIX(dpy, config, width, height, attrib_list); return (GLXPbufferSGIX)0;}$/;"	f
_Lazy_glXCreateGLXPixmapMESA	shared/GLee.c	/^GLXPixmap __stdcall _Lazy_glXCreateGLXPixmapMESA(Display * dpy, XVisualInfo * visual, Pixmap pixmap, Colormap cmap)  {if (GLeeInit()) return glXCreateGLXPixmapMESA(dpy, visual, pixmap, cmap); return (GLXPixmap)0;}$/;"	f
_Lazy_glXCreateGLXPixmapWithConfigSGIX	shared/GLee.c	/^GLXPixmap __stdcall _Lazy_glXCreateGLXPixmapWithConfigSGIX(Display * dpy, GLXFBConfigSGIX config, Pixmap pixmap)  {if (GLeeInit()) return glXCreateGLXPixmapWithConfigSGIX(dpy, config, pixmap); return (GLXPixmap)0;}$/;"	f
_Lazy_glXCreateNewContext	shared/GLee.c	/^GLXContext __stdcall _Lazy_glXCreateNewContext(Display * dpy, GLXFBConfig config, int render_type, GLXContext share_list, Bool direct)  {if (GLeeInit()) return glXCreateNewContext(dpy, config, render_type, share_list, direct); return (GLXContext)0;}$/;"	f
_Lazy_glXCreatePbuffer	shared/GLee.c	/^GLXPbuffer __stdcall _Lazy_glXCreatePbuffer(Display * dpy, GLXFBConfig config, const int * attrib_list)  {if (GLeeInit()) return glXCreatePbuffer(dpy, config, attrib_list); return (GLXPbuffer)0;}$/;"	f
_Lazy_glXCreatePixmap	shared/GLee.c	/^GLXPixmap __stdcall _Lazy_glXCreatePixmap(Display * dpy, GLXFBConfig config, Pixmap pixmap, const int * attrib_list)  {if (GLeeInit()) return glXCreatePixmap(dpy, config, pixmap, attrib_list); return (GLXPixmap)0;}$/;"	f
_Lazy_glXCreateWindow	shared/GLee.c	/^GLXWindow __stdcall _Lazy_glXCreateWindow(Display * dpy, GLXFBConfig config, Window win, const int * attrib_list)  {if (GLeeInit()) return glXCreateWindow(dpy, config, win, attrib_list); return (GLXWindow)0;}$/;"	f
_Lazy_glXCushionSGI	shared/GLee.c	/^void __stdcall _Lazy_glXCushionSGI(Display * dpy, Window window, float cushion)           {if (GLeeInit()) glXCushionSGI(dpy, window, cushion);}$/;"	f
_Lazy_glXDestroyGLXPbufferSGIX	shared/GLee.c	/^void __stdcall _Lazy_glXDestroyGLXPbufferSGIX(Display * dpy, GLXPbufferSGIX pbuf)         {if (GLeeInit()) glXDestroyGLXPbufferSGIX(dpy, pbuf);}$/;"	f
_Lazy_glXDestroyHyperpipeConfigSGIX	shared/GLee.c	/^int __stdcall _Lazy_glXDestroyHyperpipeConfigSGIX(Display * dpy, int hpId)                {if (GLeeInit()) return glXDestroyHyperpipeConfigSGIX(dpy, hpId); return (int)0;}$/;"	f
_Lazy_glXDestroyPbuffer	shared/GLee.c	/^void __stdcall _Lazy_glXDestroyPbuffer(Display * dpy, GLXPbuffer pbuf)                    {if (GLeeInit()) glXDestroyPbuffer(dpy, pbuf);}$/;"	f
_Lazy_glXDestroyPixmap	shared/GLee.c	/^void __stdcall _Lazy_glXDestroyPixmap(Display * dpy, GLXPixmap pixmap)                    {if (GLeeInit()) glXDestroyPixmap(dpy, pixmap);}$/;"	f
_Lazy_glXDestroyWindow	shared/GLee.c	/^void __stdcall _Lazy_glXDestroyWindow(Display * dpy, GLXWindow win)                       {if (GLeeInit()) glXDestroyWindow(dpy, win);}$/;"	f
_Lazy_glXFreeContextEXT	shared/GLee.c	/^void __stdcall _Lazy_glXFreeContextEXT(Display * dpy, GLXContext context)                 {if (GLeeInit()) glXFreeContextEXT(dpy, context);}$/;"	f
_Lazy_glXGetAGPOffsetMESA	shared/GLee.c	/^unsigned int __stdcall _Lazy_glXGetAGPOffsetMESA(const void * pointer)                    {if (GLeeInit()) return glXGetAGPOffsetMESA(pointer); return (unsigned int)0;}$/;"	f
_Lazy_glXGetContextIDEXT	shared/GLee.c	/^GLXContextID __stdcall _Lazy_glXGetContextIDEXT(const GLXContext context)                 {if (GLeeInit()) return glXGetContextIDEXT(context); return (GLXContextID)0;}$/;"	f
_Lazy_glXGetCurrentDisplay	shared/GLee.c	/^Display * __stdcall _Lazy_glXGetCurrentDisplay(void)                                      {if (GLeeInit()) return glXGetCurrentDisplay(); return (Display *)0;}$/;"	f
_Lazy_glXGetCurrentDisplayEXT	shared/GLee.c	/^Display * __stdcall _Lazy_glXGetCurrentDisplayEXT(void)                                   {if (GLeeInit()) return glXGetCurrentDisplayEXT(); return (Display *)0;}$/;"	f
_Lazy_glXGetCurrentReadDrawable	shared/GLee.c	/^GLXDrawable __stdcall _Lazy_glXGetCurrentReadDrawable(void)                               {if (GLeeInit()) return glXGetCurrentReadDrawable(); return (GLXDrawable)0;}$/;"	f
_Lazy_glXGetCurrentReadDrawableSGI	shared/GLee.c	/^GLXDrawable __stdcall _Lazy_glXGetCurrentReadDrawableSGI(void)                            {if (GLeeInit()) return glXGetCurrentReadDrawableSGI(); return (GLXDrawable)0;}$/;"	f
_Lazy_glXGetFBConfigAttrib	shared/GLee.c	/^int __stdcall _Lazy_glXGetFBConfigAttrib(Display * dpy, GLXFBConfig config, int attribute, int * value)  {if (GLeeInit()) return glXGetFBConfigAttrib(dpy, config, attribute, value); return (int)0;}$/;"	f
_Lazy_glXGetFBConfigAttribSGIX	shared/GLee.c	/^int __stdcall _Lazy_glXGetFBConfigAttribSGIX(Display * dpy, GLXFBConfigSGIX config, int attribute, int * value)  {if (GLeeInit()) return glXGetFBConfigAttribSGIX(dpy, config, attribute, value); return (int)0;}$/;"	f
_Lazy_glXGetFBConfigFromVisualSGIX	shared/GLee.c	/^GLXFBConfigSGIX __stdcall _Lazy_glXGetFBConfigFromVisualSGIX(Display * dpy, XVisualInfo * vis)  {if (GLeeInit()) return glXGetFBConfigFromVisualSGIX(dpy, vis); return (GLXFBConfigSGIX)0;}$/;"	f
_Lazy_glXGetFBConfigs	shared/GLee.c	/^GLXFBConfig * __stdcall _Lazy_glXGetFBConfigs(Display * dpy, int screen, int * nelements)  {if (GLeeInit()) return glXGetFBConfigs(dpy, screen, nelements); return (GLXFBConfig *)0;}$/;"	f
_Lazy_glXGetMscRateOML	shared/GLee.c	/^Bool __stdcall _Lazy_glXGetMscRateOML(Display * dpy, GLXDrawable drawable, int32_t * numerator, int32_t * denominator)  {if (GLeeInit()) return glXGetMscRateOML(dpy, drawable, numerator, denominator); return (Bool)0;}$/;"	f
_Lazy_glXGetProcAddress	shared/GLee.c	/^__GLXextFuncPtr __stdcall _Lazy_glXGetProcAddress(const GLubyte * procName)               {if (GLeeInit()) return glXGetProcAddress(procName); return (__GLXextFuncPtr)0;}$/;"	f
_Lazy_glXGetSelectedEvent	shared/GLee.c	/^void __stdcall _Lazy_glXGetSelectedEvent(Display * dpy, GLXDrawable draw, unsigned long * event_mask)  {if (GLeeInit()) glXGetSelectedEvent(dpy, draw, event_mask);}$/;"	f
_Lazy_glXGetSelectedEventSGIX	shared/GLee.c	/^void __stdcall _Lazy_glXGetSelectedEventSGIX(Display * dpy, GLXDrawable drawable, unsigned long * mask)  {if (GLeeInit()) glXGetSelectedEventSGIX(dpy, drawable, mask);}$/;"	f
_Lazy_glXGetSyncValuesOML	shared/GLee.c	/^Bool __stdcall _Lazy_glXGetSyncValuesOML(Display * dpy, GLXDrawable drawable, int64_t * ust, int64_t * msc, int64_t * sbc)  {if (GLeeInit()) return glXGetSyncValuesOML(dpy, drawable, ust, msc, sbc); return (Bool)0;}$/;"	f
_Lazy_glXGetTransparentIndexSUN	shared/GLee.c	/^Status __stdcall _Lazy_glXGetTransparentIndexSUN(Display * dpy, Window overlay, Window underlay, long * pTransparentIndex)  {if (GLeeInit()) return glXGetTransparentIndexSUN(dpy, overlay, underlay, pTransparentIndex); return (Status)0;}$/;"	f
_Lazy_glXGetVideoSyncSGI	shared/GLee.c	/^int __stdcall _Lazy_glXGetVideoSyncSGI(unsigned int * count)                              {if (GLeeInit()) return glXGetVideoSyncSGI(count); return (int)0;}$/;"	f
_Lazy_glXGetVisualFromFBConfig	shared/GLee.c	/^XVisualInfo * __stdcall _Lazy_glXGetVisualFromFBConfig(Display * dpy, GLXFBConfig config)  {if (GLeeInit()) return glXGetVisualFromFBConfig(dpy, config); return (XVisualInfo *)0;}$/;"	f
_Lazy_glXGetVisualFromFBConfigSGIX	shared/GLee.c	/^XVisualInfo * __stdcall _Lazy_glXGetVisualFromFBConfigSGIX(Display * dpy, GLXFBConfigSGIX config)  {if (GLeeInit()) return glXGetVisualFromFBConfigSGIX(dpy, config); return (XVisualInfo *)0;}$/;"	f
_Lazy_glXHyperpipeAttribSGIX	shared/GLee.c	/^int __stdcall _Lazy_glXHyperpipeAttribSGIX(Display * dpy, int timeSlice, int attrib, int size, void * attribList)  {if (GLeeInit()) return glXHyperpipeAttribSGIX(dpy, timeSlice, attrib, size, attribList); return (int)0;}$/;"	f
_Lazy_glXHyperpipeConfigSGIX	shared/GLee.c	/^int __stdcall _Lazy_glXHyperpipeConfigSGIX(Display * dpy, int networkId, int npipes, GLXHyperpipeConfigSGIX * cfg, int * hpId)  {if (GLeeInit()) return glXHyperpipeConfigSGIX(dpy, networkId, npipes, cfg, hpId); return (int)0;}$/;"	f
_Lazy_glXImportContextEXT	shared/GLee.c	/^GLXContext __stdcall _Lazy_glXImportContextEXT(Display * dpy, GLXContextID contextID)     {if (GLeeInit()) return glXImportContextEXT(dpy, contextID); return (GLXContext)0;}$/;"	f
_Lazy_glXJoinSwapGroupSGIX	shared/GLee.c	/^void __stdcall _Lazy_glXJoinSwapGroupSGIX(Display * dpy, GLXDrawable drawable, GLXDrawable member)  {if (GLeeInit()) glXJoinSwapGroupSGIX(dpy, drawable, member);}$/;"	f
_Lazy_glXMakeContextCurrent	shared/GLee.c	/^Bool __stdcall _Lazy_glXMakeContextCurrent(Display * dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx)  {if (GLeeInit()) return glXMakeContextCurrent(dpy, draw, read, ctx); return (Bool)0;}$/;"	f
_Lazy_glXMakeCurrentReadSGI	shared/GLee.c	/^Bool __stdcall _Lazy_glXMakeCurrentReadSGI(Display * dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx)  {if (GLeeInit()) return glXMakeCurrentReadSGI(dpy, draw, read, ctx); return (Bool)0;}$/;"	f
_Lazy_glXQueryChannelDeltasSGIX	shared/GLee.c	/^int __stdcall _Lazy_glXQueryChannelDeltasSGIX(Display * display, int screen, int channel, int * x, int * y, int * w, int * h)  {if (GLeeInit()) return glXQueryChannelDeltasSGIX(display, screen, channel, x, y, w, h); return (int)0;}$/;"	f
_Lazy_glXQueryChannelRectSGIX	shared/GLee.c	/^int __stdcall _Lazy_glXQueryChannelRectSGIX(Display * display, int screen, int channel, int * dx, int * dy, int * dw, int * dh)  {if (GLeeInit()) return glXQueryChannelRectSGIX(display, screen, channel, dx, dy, dw, dh); return (int)0;}$/;"	f
_Lazy_glXQueryContext	shared/GLee.c	/^int __stdcall _Lazy_glXQueryContext(Display * dpy, GLXContext ctx, int attribute, int * value)  {if (GLeeInit()) return glXQueryContext(dpy, ctx, attribute, value); return (int)0;}$/;"	f
_Lazy_glXQueryContextInfoEXT	shared/GLee.c	/^int __stdcall _Lazy_glXQueryContextInfoEXT(Display * dpy, GLXContext context, int attribute, int * value)  {if (GLeeInit()) return glXQueryContextInfoEXT(dpy, context, attribute, value); return (int)0;}$/;"	f
_Lazy_glXQueryDrawable	shared/GLee.c	/^void __stdcall _Lazy_glXQueryDrawable(Display * dpy, GLXDrawable draw, int attribute, unsigned int * value)  {if (GLeeInit()) glXQueryDrawable(dpy, draw, attribute, value);}$/;"	f
_Lazy_glXQueryGLXPbufferSGIX	shared/GLee.c	/^int __stdcall _Lazy_glXQueryGLXPbufferSGIX(Display * dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int * value)  {if (GLeeInit()) return glXQueryGLXPbufferSGIX(dpy, pbuf, attribute, value); return (int)0;}$/;"	f
_Lazy_glXQueryHyperpipeAttribSGIX	shared/GLee.c	/^int __stdcall _Lazy_glXQueryHyperpipeAttribSGIX(Display * dpy, int timeSlice, int attrib, int size, void * returnAttribList)  {if (GLeeInit()) return glXQueryHyperpipeAttribSGIX(dpy, timeSlice, attrib, size, returnAttribList); return (int)0;}$/;"	f
_Lazy_glXQueryHyperpipeBestAttribSGIX	shared/GLee.c	/^int __stdcall _Lazy_glXQueryHyperpipeBestAttribSGIX(Display * dpy, int timeSlice, int attrib, int size, void * attribList, void * returnAttribList)  {if (GLeeInit()) return glXQueryHyperpipeBestAttribSGIX(dpy, timeSlice, attrib, size, attribList, returnAttribList); return (int)0;}$/;"	f
_Lazy_glXQueryHyperpipeConfigSGIX	shared/GLee.c	/^GLXHyperpipeConfigSGIX * __stdcall _Lazy_glXQueryHyperpipeConfigSGIX(Display * dpy, int hpId, int * npipes)  {if (GLeeInit()) return glXQueryHyperpipeConfigSGIX(dpy, hpId, npipes); return (GLXHyperpipeConfigSGIX *)0;}$/;"	f
_Lazy_glXQueryHyperpipeNetworkSGIX	shared/GLee.c	/^GLXHyperpipeNetworkSGIX * __stdcall _Lazy_glXQueryHyperpipeNetworkSGIX(Display * dpy, int * npipes)  {if (GLeeInit()) return glXQueryHyperpipeNetworkSGIX(dpy, npipes); return (GLXHyperpipeNetworkSGIX *)0;}$/;"	f
_Lazy_glXQueryMaxSwapBarriersSGIX	shared/GLee.c	/^Bool __stdcall _Lazy_glXQueryMaxSwapBarriersSGIX(Display * dpy, int screen, int * max)    {if (GLeeInit()) return glXQueryMaxSwapBarriersSGIX(dpy, screen, max); return (Bool)0;}$/;"	f
_Lazy_glXReleaseBuffersMESA	shared/GLee.c	/^Bool __stdcall _Lazy_glXReleaseBuffersMESA(Display * dpy, GLXDrawable drawable)           {if (GLeeInit()) return glXReleaseBuffersMESA(dpy, drawable); return (Bool)0;}$/;"	f
_Lazy_glXSelectEvent	shared/GLee.c	/^void __stdcall _Lazy_glXSelectEvent(Display * dpy, GLXDrawable draw, unsigned long event_mask)  {if (GLeeInit()) glXSelectEvent(dpy, draw, event_mask);}$/;"	f
_Lazy_glXSelectEventSGIX	shared/GLee.c	/^void __stdcall _Lazy_glXSelectEventSGIX(Display * dpy, GLXDrawable drawable, unsigned long mask)  {if (GLeeInit()) glXSelectEventSGIX(dpy, drawable, mask);}$/;"	f
_Lazy_glXSet3DfxModeMESA	shared/GLee.c	/^Bool __stdcall _Lazy_glXSet3DfxModeMESA(int mode)                                         {if (GLeeInit()) return glXSet3DfxModeMESA(mode); return (Bool)0;}$/;"	f
_Lazy_glXSwapBuffersMscOML	shared/GLee.c	/^int64_t __stdcall _Lazy_glXSwapBuffersMscOML(Display * dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder)  {if (GLeeInit()) return glXSwapBuffersMscOML(dpy, drawable, target_msc, divisor, remainder); return (int64_t)0;}$/;"	f
_Lazy_glXSwapIntervalSGI	shared/GLee.c	/^int __stdcall _Lazy_glXSwapIntervalSGI(int interval)                                      {if (GLeeInit()) return glXSwapIntervalSGI(interval); return (int)0;}$/;"	f
_Lazy_glXWaitForMscOML	shared/GLee.c	/^Bool __stdcall _Lazy_glXWaitForMscOML(Display * dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder, int64_t * ust, int64_t * msc, int64_t * sbc)  {if (GLeeInit()) return glXWaitForMscOML(dpy, drawable, target_msc, divisor, remainder, ust, msc, sbc); return (Bool)0;}$/;"	f
_Lazy_glXWaitForSbcOML	shared/GLee.c	/^Bool __stdcall _Lazy_glXWaitForSbcOML(Display * dpy, GLXDrawable drawable, int64_t target_sbc, int64_t * ust, int64_t * msc, int64_t * sbc)  {if (GLeeInit()) return glXWaitForSbcOML(dpy, drawable, target_sbc, ust, msc, sbc); return (Bool)0;}$/;"	f
_Lazy_glXWaitVideoSyncSGI	shared/GLee.c	/^int __stdcall _Lazy_glXWaitVideoSyncSGI(int divisor, int remainder, unsigned int * count)  {if (GLeeInit()) return glXWaitVideoSyncSGI(divisor, remainder, count); return (int)0;}$/;"	f
_Lazy_wglAllocateMemoryNV	shared/GLee.c	/^void* __stdcall _Lazy_wglAllocateMemoryNV(GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority)  {if (GLeeInit()) return wglAllocateMemoryNV(size, readfreq, writefreq, priority); return (void*)0;}$/;"	f
_Lazy_wglAssociateImageBufferEventsI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglAssociateImageBufferEventsI3D(HDC hDC, const HANDLE * pEvent, const LPVOID * pAddress, const DWORD * pSize, UINT count)  {if (GLeeInit()) return wglAssociateImageBufferEventsI3D(hDC, pEvent, pAddress, pSize, count); return (BOOL)0;}$/;"	f
_Lazy_wglBeginFrameTrackingI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglBeginFrameTrackingI3D(void)                                       {if (GLeeInit()) return wglBeginFrameTrackingI3D(); return (BOOL)0;}$/;"	f
_Lazy_wglBindDisplayColorTableEXT	shared/GLee.c	/^GLboolean __stdcall _Lazy_wglBindDisplayColorTableEXT(GLushort id)                        {if (GLeeInit()) return wglBindDisplayColorTableEXT(id); return (GLboolean)0;}$/;"	f
_Lazy_wglBindTexImageARB	shared/GLee.c	/^BOOL __stdcall _Lazy_wglBindTexImageARB(HPBUFFERARB hPbuffer, int iBuffer)                {if (GLeeInit()) return wglBindTexImageARB(hPbuffer, iBuffer); return (BOOL)0;}$/;"	f
_Lazy_wglChoosePixelFormatARB	shared/GLee.c	/^BOOL __stdcall _Lazy_wglChoosePixelFormatARB(HDC hdc, const int * piAttribIList, const FLOAT * pfAttribFList, UINT nMaxFormats, int * piFormats, UINT * nNumFormats)  {if (GLeeInit()) return wglChoosePixelFormatARB(hdc, piAttribIList, pfAttribFList, nMaxFormats, piFormats, nNumFormats); return (BOOL)0;}$/;"	f
_Lazy_wglChoosePixelFormatEXT	shared/GLee.c	/^BOOL __stdcall _Lazy_wglChoosePixelFormatEXT(HDC hdc, const int * piAttribIList, const FLOAT * pfAttribFList, UINT nMaxFormats, int * piFormats, UINT * nNumFormats)  {if (GLeeInit()) return wglChoosePixelFormatEXT(hdc, piAttribIList, pfAttribFList, nMaxFormats, piFormats, nNumFormats); return (BOOL)0;}$/;"	f
_Lazy_wglCreateBufferRegionARB	shared/GLee.c	/^HANDLE __stdcall _Lazy_wglCreateBufferRegionARB(HDC hDC, int iLayerPlane, UINT uType)     {if (GLeeInit()) return wglCreateBufferRegionARB(hDC, iLayerPlane, uType); return (HANDLE)0;}$/;"	f
_Lazy_wglCreateDisplayColorTableEXT	shared/GLee.c	/^GLboolean __stdcall _Lazy_wglCreateDisplayColorTableEXT(GLushort id)                      {if (GLeeInit()) return wglCreateDisplayColorTableEXT(id); return (GLboolean)0;}$/;"	f
_Lazy_wglCreateImageBufferI3D	shared/GLee.c	/^LPVOID __stdcall _Lazy_wglCreateImageBufferI3D(HDC hDC, DWORD dwSize, UINT uFlags)        {if (GLeeInit()) return wglCreateImageBufferI3D(hDC, dwSize, uFlags); return (LPVOID)0;}$/;"	f
_Lazy_wglCreatePbufferARB	shared/GLee.c	/^HPBUFFERARB __stdcall _Lazy_wglCreatePbufferARB(HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int * piAttribList)  {if (GLeeInit()) return wglCreatePbufferARB(hDC, iPixelFormat, iWidth, iHeight, piAttribList); return (HPBUFFERARB)0;}$/;"	f
_Lazy_wglCreatePbufferEXT	shared/GLee.c	/^HPBUFFEREXT __stdcall _Lazy_wglCreatePbufferEXT(HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int * piAttribList)  {if (GLeeInit()) return wglCreatePbufferEXT(hDC, iPixelFormat, iWidth, iHeight, piAttribList); return (HPBUFFEREXT)0;}$/;"	f
_Lazy_wglDeleteBufferRegionARB	shared/GLee.c	/^VOID __stdcall _Lazy_wglDeleteBufferRegionARB(HANDLE hRegion)                             {if (GLeeInit()) wglDeleteBufferRegionARB(hRegion);}$/;"	f
_Lazy_wglDestroyDisplayColorTableEXT	shared/GLee.c	/^VOID __stdcall _Lazy_wglDestroyDisplayColorTableEXT(GLushort id)                          {if (GLeeInit()) wglDestroyDisplayColorTableEXT(id);}$/;"	f
_Lazy_wglDestroyImageBufferI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglDestroyImageBufferI3D(HDC hDC, LPVOID pAddress)                   {if (GLeeInit()) return wglDestroyImageBufferI3D(hDC, pAddress); return (BOOL)0;}$/;"	f
_Lazy_wglDestroyPbufferARB	shared/GLee.c	/^BOOL __stdcall _Lazy_wglDestroyPbufferARB(HPBUFFERARB hPbuffer)                           {if (GLeeInit()) return wglDestroyPbufferARB(hPbuffer); return (BOOL)0;}$/;"	f
_Lazy_wglDestroyPbufferEXT	shared/GLee.c	/^BOOL __stdcall _Lazy_wglDestroyPbufferEXT(HPBUFFEREXT hPbuffer)                           {if (GLeeInit()) return wglDestroyPbufferEXT(hPbuffer); return (BOOL)0;}$/;"	f
_Lazy_wglDisableFrameLockI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglDisableFrameLockI3D(void)                                         {if (GLeeInit()) return wglDisableFrameLockI3D(); return (BOOL)0;}$/;"	f
_Lazy_wglDisableGenlockI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglDisableGenlockI3D(HDC hDC)                                        {if (GLeeInit()) return wglDisableGenlockI3D(hDC); return (BOOL)0;}$/;"	f
_Lazy_wglEnableFrameLockI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglEnableFrameLockI3D(void)                                          {if (GLeeInit()) return wglEnableFrameLockI3D(); return (BOOL)0;}$/;"	f
_Lazy_wglEnableGenlockI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglEnableGenlockI3D(HDC hDC)                                         {if (GLeeInit()) return wglEnableGenlockI3D(hDC); return (BOOL)0;}$/;"	f
_Lazy_wglEndFrameTrackingI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglEndFrameTrackingI3D(void)                                         {if (GLeeInit()) return wglEndFrameTrackingI3D(); return (BOOL)0;}$/;"	f
_Lazy_wglFreeMemoryNV	shared/GLee.c	/^void __stdcall _Lazy_wglFreeMemoryNV(void * pointer)                                      {if (GLeeInit()) wglFreeMemoryNV(pointer);}$/;"	f
_Lazy_wglGenlockSampleRateI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGenlockSampleRateI3D(HDC hDC, UINT uRate)                         {if (GLeeInit()) return wglGenlockSampleRateI3D(hDC, uRate); return (BOOL)0;}$/;"	f
_Lazy_wglGenlockSourceDelayI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGenlockSourceDelayI3D(HDC hDC, UINT uDelay)                       {if (GLeeInit()) return wglGenlockSourceDelayI3D(hDC, uDelay); return (BOOL)0;}$/;"	f
_Lazy_wglGenlockSourceEdgeI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGenlockSourceEdgeI3D(HDC hDC, UINT uEdge)                         {if (GLeeInit()) return wglGenlockSourceEdgeI3D(hDC, uEdge); return (BOOL)0;}$/;"	f
_Lazy_wglGenlockSourceI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGenlockSourceI3D(HDC hDC, UINT uSource)                           {if (GLeeInit()) return wglGenlockSourceI3D(hDC, uSource); return (BOOL)0;}$/;"	f
_Lazy_wglGetCurrentReadDCARB	shared/GLee.c	/^HDC __stdcall _Lazy_wglGetCurrentReadDCARB(void)                                          {if (GLeeInit()) return wglGetCurrentReadDCARB(); return (HDC)0;}$/;"	f
_Lazy_wglGetCurrentReadDCEXT	shared/GLee.c	/^HDC __stdcall _Lazy_wglGetCurrentReadDCEXT(void)                                          {if (GLeeInit()) return wglGetCurrentReadDCEXT(); return (HDC)0;}$/;"	f
_Lazy_wglGetDigitalVideoParametersI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGetDigitalVideoParametersI3D(HDC hDC, int iAttribute, int * piValue)  {if (GLeeInit()) return wglGetDigitalVideoParametersI3D(hDC, iAttribute, piValue); return (BOOL)0;}$/;"	f
_Lazy_wglGetExtensionsStringARB	shared/GLee.c	/^const char * __stdcall _Lazy_wglGetExtensionsStringARB(HDC hdc)                           {if (GLeeInit()) return wglGetExtensionsStringARB(hdc); return (const char *)0;}$/;"	f
_Lazy_wglGetExtensionsStringEXT	shared/GLee.c	/^const char * __stdcall _Lazy_wglGetExtensionsStringEXT(void)                              {if (GLeeInit()) return wglGetExtensionsStringEXT(); return (const char *)0;}$/;"	f
_Lazy_wglGetFrameUsageI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGetFrameUsageI3D(float * pUsage)                                  {if (GLeeInit()) return wglGetFrameUsageI3D(pUsage); return (BOOL)0;}$/;"	f
_Lazy_wglGetGammaTableI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGetGammaTableI3D(HDC hDC, int iEntries, USHORT * puRed, USHORT * puGreen, USHORT * puBlue)  {if (GLeeInit()) return wglGetGammaTableI3D(hDC, iEntries, puRed, puGreen, puBlue); return (BOOL)0;}$/;"	f
_Lazy_wglGetGammaTableParametersI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGetGammaTableParametersI3D(HDC hDC, int iAttribute, int * piValue)  {if (GLeeInit()) return wglGetGammaTableParametersI3D(hDC, iAttribute, piValue); return (BOOL)0;}$/;"	f
_Lazy_wglGetGenlockSampleRateI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGetGenlockSampleRateI3D(HDC hDC, UINT * uRate)                    {if (GLeeInit()) return wglGetGenlockSampleRateI3D(hDC, uRate); return (BOOL)0;}$/;"	f
_Lazy_wglGetGenlockSourceDelayI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGetGenlockSourceDelayI3D(HDC hDC, UINT * uDelay)                  {if (GLeeInit()) return wglGetGenlockSourceDelayI3D(hDC, uDelay); return (BOOL)0;}$/;"	f
_Lazy_wglGetGenlockSourceEdgeI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGetGenlockSourceEdgeI3D(HDC hDC, UINT * uEdge)                    {if (GLeeInit()) return wglGetGenlockSourceEdgeI3D(hDC, uEdge); return (BOOL)0;}$/;"	f
_Lazy_wglGetGenlockSourceI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGetGenlockSourceI3D(HDC hDC, UINT * uSource)                      {if (GLeeInit()) return wglGetGenlockSourceI3D(hDC, uSource); return (BOOL)0;}$/;"	f
_Lazy_wglGetMscRateOML	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGetMscRateOML(HDC hdc, INT32 * numerator, INT32 * denominator)    {if (GLeeInit()) return wglGetMscRateOML(hdc, numerator, denominator); return (BOOL)0;}$/;"	f
_Lazy_wglGetPbufferDCARB	shared/GLee.c	/^HDC __stdcall _Lazy_wglGetPbufferDCARB(HPBUFFERARB hPbuffer)                              {if (GLeeInit()) return wglGetPbufferDCARB(hPbuffer); return (HDC)0;}$/;"	f
_Lazy_wglGetPbufferDCEXT	shared/GLee.c	/^HDC __stdcall _Lazy_wglGetPbufferDCEXT(HPBUFFEREXT hPbuffer)                              {if (GLeeInit()) return wglGetPbufferDCEXT(hPbuffer); return (HDC)0;}$/;"	f
_Lazy_wglGetPixelFormatAttribfvARB	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGetPixelFormatAttribfvARB(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int * piAttributes, FLOAT * pfValues)  {if (GLeeInit()) return wglGetPixelFormatAttribfvARB(hdc, iPixelFormat, iLayerPlane, nAttributes, piAttributes, pfValues); return (BOOL)0;}$/;"	f
_Lazy_wglGetPixelFormatAttribfvEXT	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGetPixelFormatAttribfvEXT(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int * piAttributes, FLOAT * pfValues)  {if (GLeeInit()) return wglGetPixelFormatAttribfvEXT(hdc, iPixelFormat, iLayerPlane, nAttributes, piAttributes, pfValues); return (BOOL)0;}$/;"	f
_Lazy_wglGetPixelFormatAttribivARB	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGetPixelFormatAttribivARB(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int * piAttributes, int * piValues)  {if (GLeeInit()) return wglGetPixelFormatAttribivARB(hdc, iPixelFormat, iLayerPlane, nAttributes, piAttributes, piValues); return (BOOL)0;}$/;"	f
_Lazy_wglGetPixelFormatAttribivEXT	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGetPixelFormatAttribivEXT(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int * piAttributes, int * piValues)  {if (GLeeInit()) return wglGetPixelFormatAttribivEXT(hdc, iPixelFormat, iLayerPlane, nAttributes, piAttributes, piValues); return (BOOL)0;}$/;"	f
_Lazy_wglGetSwapIntervalEXT	shared/GLee.c	/^int __stdcall _Lazy_wglGetSwapIntervalEXT(void)                                           {if (GLeeInit()) return wglGetSwapIntervalEXT(); return (int)0;}$/;"	f
_Lazy_wglGetSyncValuesOML	shared/GLee.c	/^BOOL __stdcall _Lazy_wglGetSyncValuesOML(HDC hdc, INT64 * ust, INT64 * msc, INT64 * sbc)  {if (GLeeInit()) return wglGetSyncValuesOML(hdc, ust, msc, sbc); return (BOOL)0;}$/;"	f
_Lazy_wglIsEnabledFrameLockI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglIsEnabledFrameLockI3D(BOOL * pFlag)                               {if (GLeeInit()) return wglIsEnabledFrameLockI3D(pFlag); return (BOOL)0;}$/;"	f
_Lazy_wglIsEnabledGenlockI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglIsEnabledGenlockI3D(HDC hDC, BOOL * pFlag)                        {if (GLeeInit()) return wglIsEnabledGenlockI3D(hDC, pFlag); return (BOOL)0;}$/;"	f
_Lazy_wglLoadDisplayColorTableEXT	shared/GLee.c	/^GLboolean __stdcall _Lazy_wglLoadDisplayColorTableEXT(const GLushort * table, GLuint length)  {if (GLeeInit()) return wglLoadDisplayColorTableEXT(table, length); return (GLboolean)0;}$/;"	f
_Lazy_wglMakeContextCurrentARB	shared/GLee.c	/^BOOL __stdcall _Lazy_wglMakeContextCurrentARB(HDC hDrawDC, HDC hReadDC, HGLRC hglrc)      {if (GLeeInit()) return wglMakeContextCurrentARB(hDrawDC, hReadDC, hglrc); return (BOOL)0;}$/;"	f
_Lazy_wglMakeContextCurrentEXT	shared/GLee.c	/^BOOL __stdcall _Lazy_wglMakeContextCurrentEXT(HDC hDrawDC, HDC hReadDC, HGLRC hglrc)      {if (GLeeInit()) return wglMakeContextCurrentEXT(hDrawDC, hReadDC, hglrc); return (BOOL)0;}$/;"	f
_Lazy_wglQueryFrameLockMasterI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglQueryFrameLockMasterI3D(BOOL * pFlag)                             {if (GLeeInit()) return wglQueryFrameLockMasterI3D(pFlag); return (BOOL)0;}$/;"	f
_Lazy_wglQueryFrameTrackingI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglQueryFrameTrackingI3D(DWORD * pFrameCount, DWORD * pMissedFrames, float * pLastMissedUsage)  {if (GLeeInit()) return wglQueryFrameTrackingI3D(pFrameCount, pMissedFrames, pLastMissedUsage); return (BOOL)0;}$/;"	f
_Lazy_wglQueryGenlockMaxSourceDelayI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglQueryGenlockMaxSourceDelayI3D(HDC hDC, UINT * uMaxLineDelay, UINT * uMaxPixelDelay)  {if (GLeeInit()) return wglQueryGenlockMaxSourceDelayI3D(hDC, uMaxLineDelay, uMaxPixelDelay); return (BOOL)0;}$/;"	f
_Lazy_wglQueryPbufferARB	shared/GLee.c	/^BOOL __stdcall _Lazy_wglQueryPbufferARB(HPBUFFERARB hPbuffer, int iAttribute, int * piValue)  {if (GLeeInit()) return wglQueryPbufferARB(hPbuffer, iAttribute, piValue); return (BOOL)0;}$/;"	f
_Lazy_wglQueryPbufferEXT	shared/GLee.c	/^BOOL __stdcall _Lazy_wglQueryPbufferEXT(HPBUFFEREXT hPbuffer, int iAttribute, int * piValue)  {if (GLeeInit()) return wglQueryPbufferEXT(hPbuffer, iAttribute, piValue); return (BOOL)0;}$/;"	f
_Lazy_wglReleaseImageBufferEventsI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglReleaseImageBufferEventsI3D(HDC hDC, const LPVOID * pAddress, UINT count)  {if (GLeeInit()) return wglReleaseImageBufferEventsI3D(hDC, pAddress, count); return (BOOL)0;}$/;"	f
_Lazy_wglReleasePbufferDCARB	shared/GLee.c	/^int __stdcall _Lazy_wglReleasePbufferDCARB(HPBUFFERARB hPbuffer, HDC hDC)                 {if (GLeeInit()) return wglReleasePbufferDCARB(hPbuffer, hDC); return (int)0;}$/;"	f
_Lazy_wglReleasePbufferDCEXT	shared/GLee.c	/^int __stdcall _Lazy_wglReleasePbufferDCEXT(HPBUFFEREXT hPbuffer, HDC hDC)                 {if (GLeeInit()) return wglReleasePbufferDCEXT(hPbuffer, hDC); return (int)0;}$/;"	f
_Lazy_wglReleaseTexImageARB	shared/GLee.c	/^BOOL __stdcall _Lazy_wglReleaseTexImageARB(HPBUFFERARB hPbuffer, int iBuffer)             {if (GLeeInit()) return wglReleaseTexImageARB(hPbuffer, iBuffer); return (BOOL)0;}$/;"	f
_Lazy_wglRestoreBufferRegionARB	shared/GLee.c	/^BOOL __stdcall _Lazy_wglRestoreBufferRegionARB(HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc)  {if (GLeeInit()) return wglRestoreBufferRegionARB(hRegion, x, y, width, height, xSrc, ySrc); return (BOOL)0;}$/;"	f
_Lazy_wglSaveBufferRegionARB	shared/GLee.c	/^BOOL __stdcall _Lazy_wglSaveBufferRegionARB(HANDLE hRegion, int x, int y, int width, int height)  {if (GLeeInit()) return wglSaveBufferRegionARB(hRegion, x, y, width, height); return (BOOL)0;}$/;"	f
_Lazy_wglSetDigitalVideoParametersI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglSetDigitalVideoParametersI3D(HDC hDC, int iAttribute, const int * piValue)  {if (GLeeInit()) return wglSetDigitalVideoParametersI3D(hDC, iAttribute, piValue); return (BOOL)0;}$/;"	f
_Lazy_wglSetGammaTableI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglSetGammaTableI3D(HDC hDC, int iEntries, const USHORT * puRed, const USHORT * puGreen, const USHORT * puBlue)  {if (GLeeInit()) return wglSetGammaTableI3D(hDC, iEntries, puRed, puGreen, puBlue); return (BOOL)0;}$/;"	f
_Lazy_wglSetGammaTableParametersI3D	shared/GLee.c	/^BOOL __stdcall _Lazy_wglSetGammaTableParametersI3D(HDC hDC, int iAttribute, const int * piValue)  {if (GLeeInit()) return wglSetGammaTableParametersI3D(hDC, iAttribute, piValue); return (BOOL)0;}$/;"	f
_Lazy_wglSetPbufferAttribARB	shared/GLee.c	/^BOOL __stdcall _Lazy_wglSetPbufferAttribARB(HPBUFFERARB hPbuffer, const int * piAttribList)  {if (GLeeInit()) return wglSetPbufferAttribARB(hPbuffer, piAttribList); return (BOOL)0;}$/;"	f
_Lazy_wglSetStereoEmitterState3DL	shared/GLee.c	/^BOOL __stdcall _Lazy_wglSetStereoEmitterState3DL(HDC hDC, UINT uState)                    {if (GLeeInit()) return wglSetStereoEmitterState3DL(hDC, uState); return (BOOL)0;}$/;"	f
_Lazy_wglSwapBuffersMscOML	shared/GLee.c	/^INT64 __stdcall _Lazy_wglSwapBuffersMscOML(HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder)  {if (GLeeInit()) return wglSwapBuffersMscOML(hdc, target_msc, divisor, remainder); return (INT64)0;}$/;"	f
_Lazy_wglSwapIntervalEXT	shared/GLee.c	/^BOOL __stdcall _Lazy_wglSwapIntervalEXT(int interval)                                     {if (GLeeInit()) return wglSwapIntervalEXT(interval); return (BOOL)0;}$/;"	f
_Lazy_wglSwapLayerBuffersMscOML	shared/GLee.c	/^INT64 __stdcall _Lazy_wglSwapLayerBuffersMscOML(HDC hdc, int fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder)  {if (GLeeInit()) return wglSwapLayerBuffersMscOML(hdc, fuPlanes, target_msc, divisor, remainder); return (INT64)0;}$/;"	f
_Lazy_wglWaitForMscOML	shared/GLee.c	/^BOOL __stdcall _Lazy_wglWaitForMscOML(HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 * ust, INT64 * msc, INT64 * sbc)  {if (GLeeInit()) return wglWaitForMscOML(hdc, target_msc, divisor, remainder, ust, msc, sbc); return (BOOL)0;}$/;"	f
_Lazy_wglWaitForSbcOML	shared/GLee.c	/^BOOL __stdcall _Lazy_wglWaitForSbcOML(HDC hdc, INT64 target_sbc, INT64 * ust, INT64 * msc, INT64 * sbc)  {if (GLeeInit()) return wglWaitForSbcOML(hdc, target_sbc, ust, msc, sbc); return (BOOL)0;}$/;"	f
_MATH3D_LIBRARY__	shared/math3d.h	7;"	d
_ORTHO_FRAME_	shared/glFrame.h	9;"	d
__DRI2_FLUSH	include/GL/internal/dri_interface.h	264;"	d
__DRI2_FLUSH_VERSION	include/GL/internal/dri_interface.h	265;"	d
__DRI2flushExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRI2flushExtensionRec	__DRI2flushExtension;$/;"	t	typeref:struct:__DRI2flushExtensionRec
__DRI2flushExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRI2flushExtensionRec {$/;"	s
__DRI_ALLOCATE	include/GL/internal/dri_interface.h	149;"	d
__DRI_ALLOCATE_VERSION	include/GL/internal/dri_interface.h	150;"	d
__DRI_ATTRIB_ACCUM_ALPHA_SIZE	include/GL/internal/dri_interface.h	434;"	d
__DRI_ATTRIB_ACCUM_BLUE_SIZE	include/GL/internal/dri_interface.h	433;"	d
__DRI_ATTRIB_ACCUM_GREEN_SIZE	include/GL/internal/dri_interface.h	432;"	d
__DRI_ATTRIB_ACCUM_RED_SIZE	include/GL/internal/dri_interface.h	431;"	d
__DRI_ATTRIB_ALPHA_MASK	include/GL/internal/dri_interface.h	453;"	d
__DRI_ATTRIB_ALPHA_MASK_SIZE	include/GL/internal/dri_interface.h	428;"	d
__DRI_ATTRIB_ALPHA_SIZE	include/GL/internal/dri_interface.h	427;"	d
__DRI_ATTRIB_AUX_BUFFERS	include/GL/internal/dri_interface.h	442;"	d
__DRI_ATTRIB_BIND_TO_MIPMAP_TEXTURE	include/GL/internal/dri_interface.h	465;"	d
__DRI_ATTRIB_BIND_TO_TEXTURE_RGB	include/GL/internal/dri_interface.h	463;"	d
__DRI_ATTRIB_BIND_TO_TEXTURE_RGBA	include/GL/internal/dri_interface.h	464;"	d
__DRI_ATTRIB_BIND_TO_TEXTURE_TARGETS	include/GL/internal/dri_interface.h	466;"	d
__DRI_ATTRIB_BLUE_MASK	include/GL/internal/dri_interface.h	452;"	d
__DRI_ATTRIB_BLUE_SIZE	include/GL/internal/dri_interface.h	425;"	d
__DRI_ATTRIB_BUFFER_SIZE	include/GL/internal/dri_interface.h	421;"	d
__DRI_ATTRIB_COLOR_INDEX_BIT	include/GL/internal/dri_interface.h	471;"	d
__DRI_ATTRIB_CONFIG_CAVEAT	include/GL/internal/dri_interface.h	438;"	d
__DRI_ATTRIB_CONFORMANT	include/GL/internal/dri_interface.h	439;"	d
__DRI_ATTRIB_DEPTH_SIZE	include/GL/internal/dri_interface.h	429;"	d
__DRI_ATTRIB_DOUBLE_BUFFER	include/GL/internal/dri_interface.h	440;"	d
__DRI_ATTRIB_FLOAT_MODE	include/GL/internal/dri_interface.h	449;"	d
__DRI_ATTRIB_GREEN_MASK	include/GL/internal/dri_interface.h	451;"	d
__DRI_ATTRIB_GREEN_SIZE	include/GL/internal/dri_interface.h	424;"	d
__DRI_ATTRIB_LEVEL	include/GL/internal/dri_interface.h	422;"	d
__DRI_ATTRIB_LUMINANCE_BIT	include/GL/internal/dri_interface.h	472;"	d
__DRI_ATTRIB_LUMINANCE_SIZE	include/GL/internal/dri_interface.h	426;"	d
__DRI_ATTRIB_MAX_PBUFFER_HEIGHT	include/GL/internal/dri_interface.h	455;"	d
__DRI_ATTRIB_MAX_PBUFFER_PIXELS	include/GL/internal/dri_interface.h	456;"	d
__DRI_ATTRIB_MAX_PBUFFER_WIDTH	include/GL/internal/dri_interface.h	454;"	d
__DRI_ATTRIB_MAX_SWAP_INTERVAL	include/GL/internal/dri_interface.h	461;"	d
__DRI_ATTRIB_MIN_SWAP_INTERVAL	include/GL/internal/dri_interface.h	462;"	d
__DRI_ATTRIB_NON_CONFORMANT_CONFIG	include/GL/internal/dri_interface.h	476;"	d
__DRI_ATTRIB_OPTIMAL_PBUFFER_HEIGHT	include/GL/internal/dri_interface.h	458;"	d
__DRI_ATTRIB_OPTIMAL_PBUFFER_WIDTH	include/GL/internal/dri_interface.h	457;"	d
__DRI_ATTRIB_RED_MASK	include/GL/internal/dri_interface.h	450;"	d
__DRI_ATTRIB_RED_SIZE	include/GL/internal/dri_interface.h	423;"	d
__DRI_ATTRIB_RENDER_TYPE	include/GL/internal/dri_interface.h	437;"	d
__DRI_ATTRIB_RGBA_BIT	include/GL/internal/dri_interface.h	470;"	d
__DRI_ATTRIB_SAMPLES	include/GL/internal/dri_interface.h	436;"	d
__DRI_ATTRIB_SAMPLE_BUFFERS	include/GL/internal/dri_interface.h	435;"	d
__DRI_ATTRIB_SLOW_BIT	include/GL/internal/dri_interface.h	475;"	d
__DRI_ATTRIB_STENCIL_SIZE	include/GL/internal/dri_interface.h	430;"	d
__DRI_ATTRIB_STEREO	include/GL/internal/dri_interface.h	441;"	d
__DRI_ATTRIB_SWAP_METHOD	include/GL/internal/dri_interface.h	460;"	d
__DRI_ATTRIB_TEXTURE_1D_BIT	include/GL/internal/dri_interface.h	483;"	d
__DRI_ATTRIB_TEXTURE_2D_BIT	include/GL/internal/dri_interface.h	484;"	d
__DRI_ATTRIB_TEXTURE_RECTANGLE_BIT	include/GL/internal/dri_interface.h	485;"	d
__DRI_ATTRIB_TRANSPARENT_ALPHA_VALUE	include/GL/internal/dri_interface.h	448;"	d
__DRI_ATTRIB_TRANSPARENT_BLUE_VALUE	include/GL/internal/dri_interface.h	447;"	d
__DRI_ATTRIB_TRANSPARENT_GREEN_VALUE	include/GL/internal/dri_interface.h	446;"	d
__DRI_ATTRIB_TRANSPARENT_INDEX	include/GL/internal/dri_interface.h	480;"	d
__DRI_ATTRIB_TRANSPARENT_INDEX_VALUE	include/GL/internal/dri_interface.h	444;"	d
__DRI_ATTRIB_TRANSPARENT_RED_VALUE	include/GL/internal/dri_interface.h	445;"	d
__DRI_ATTRIB_TRANSPARENT_RGB	include/GL/internal/dri_interface.h	479;"	d
__DRI_ATTRIB_TRANSPARENT_TYPE	include/GL/internal/dri_interface.h	443;"	d
__DRI_ATTRIB_VISUAL_SELECT_GROUP	include/GL/internal/dri_interface.h	459;"	d
__DRI_ATTRIB_YINVERTED	include/GL/internal/dri_interface.h	467;"	d
__DRI_BUFFER_ACCUM	include/GL/internal/dri_interface.h	649;"	d
__DRI_BUFFER_BACK_LEFT	include/GL/internal/dri_interface.h	644;"	d
__DRI_BUFFER_BACK_RIGHT	include/GL/internal/dri_interface.h	646;"	d
__DRI_BUFFER_DEPTH	include/GL/internal/dri_interface.h	647;"	d
__DRI_BUFFER_DEPTH_STENCIL	include/GL/internal/dri_interface.h	652;"	d
__DRI_BUFFER_FAKE_FRONT_LEFT	include/GL/internal/dri_interface.h	650;"	d
__DRI_BUFFER_FAKE_FRONT_RIGHT	include/GL/internal/dri_interface.h	651;"	d
__DRI_BUFFER_FRONT_LEFT	include/GL/internal/dri_interface.h	643;"	d
__DRI_BUFFER_FRONT_RIGHT	include/GL/internal/dri_interface.h	645;"	d
__DRI_BUFFER_STENCIL	include/GL/internal/dri_interface.h	648;"	d
__DRI_COPY_SUB_BUFFER	include/GL/internal/dri_interface.h	127;"	d
__DRI_COPY_SUB_BUFFER_VERSION	include/GL/internal/dri_interface.h	128;"	d
__DRI_CORE	include/GL/internal/dri_interface.h	490;"	d
__DRI_CORE_VERSION	include/GL/internal/dri_interface.h	491;"	d
__DRI_DAMAGE	include/GL/internal/dri_interface.h	346;"	d
__DRI_DAMAGE_VERSION	include/GL/internal/dri_interface.h	347;"	d
__DRI_DRI2	include/GL/internal/dri_interface.h	715;"	d
__DRI_DRI2_LOADER	include/GL/internal/dri_interface.h	662;"	d
__DRI_DRI2_LOADER_VERSION	include/GL/internal/dri_interface.h	663;"	d
__DRI_DRI2_VERSION	include/GL/internal/dri_interface.h	716;"	d
__DRI_DRIVER_EXTENSIONS	include/GL/internal/dri_interface.h	413;"	d
__DRI_FRAME_TRACKING	include/GL/internal/dri_interface.h	166;"	d
__DRI_FRAME_TRACKING_VERSION	include/GL/internal/dri_interface.h	167;"	d
__DRI_GET_DRAWABLE_INFO	include/GL/internal/dri_interface.h	300;"	d
__DRI_GET_DRAWABLE_INFO_VERSION	include/GL/internal/dri_interface.h	301;"	d
__DRI_LEGACY	include/GL/internal/dri_interface.h	589;"	d
__DRI_LEGACY_VERSION	include/GL/internal/dri_interface.h	590;"	d
__DRI_MEDIA_STREAM_COUNTER	include/GL/internal/dri_interface.h	192;"	d
__DRI_MEDIA_STREAM_COUNTER_VERSION	include/GL/internal/dri_interface.h	193;"	d
__DRI_READ_DRAWABLE	include/GL/internal/dri_interface.h	121;"	d
__DRI_READ_DRAWABLE_VERSION	include/GL/internal/dri_interface.h	122;"	d
__DRI_SWAP_CONTROL	include/GL/internal/dri_interface.h	138;"	d
__DRI_SWAP_CONTROL_VERSION	include/GL/internal/dri_interface.h	139;"	d
__DRI_SWRAST	include/GL/internal/dri_interface.h	624;"	d
__DRI_SWRAST_IMAGE_OP_CLEAR	include/GL/internal/dri_interface.h	374;"	d
__DRI_SWRAST_IMAGE_OP_DRAW	include/GL/internal/dri_interface.h	373;"	d
__DRI_SWRAST_IMAGE_OP_SWAP	include/GL/internal/dri_interface.h	375;"	d
__DRI_SWRAST_LOADER	include/GL/internal/dri_interface.h	380;"	d
__DRI_SWRAST_LOADER_VERSION	include/GL/internal/dri_interface.h	381;"	d
__DRI_SWRAST_VERSION	include/GL/internal/dri_interface.h	625;"	d
__DRI_SYSTEM_TIME	include/GL/internal/dri_interface.h	321;"	d
__DRI_SYSTEM_TIME_VERSION	include/GL/internal/dri_interface.h	322;"	d
__DRI_TEX_BUFFER	include/GL/internal/dri_interface.h	233;"	d
__DRI_TEX_BUFFER_VERSION	include/GL/internal/dri_interface.h	234;"	d
__DRI_TEX_OFFSET	include/GL/internal/dri_interface.h	216;"	d
__DRI_TEX_OFFSET_VERSION	include/GL/internal/dri_interface.h	217;"	d
__DRIallocateExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRIallocateExtensionRec	__DRIallocateExtension;$/;"	t	typeref:struct:__DRIallocateExtensionRec
__DRIallocateExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRIallocateExtensionRec {$/;"	s
__DRIbuffer	include/GL/internal/dri_interface.h	/^typedef struct __DRIbufferRec			__DRIbuffer;$/;"	t	typeref:struct:__DRIbufferRec
__DRIbufferRec	include/GL/internal/dri_interface.h	/^struct __DRIbufferRec {$/;"	s
__DRIconfig	include/GL/internal/dri_interface.h	/^typedef struct __DRIconfigRec		__DRIconfig;$/;"	t	typeref:struct:__DRIconfigRec
__DRIcontext	include/GL/internal/dri_interface.h	/^typedef struct __DRIcontextRec		__DRIcontext;$/;"	t	typeref:struct:__DRIcontextRec
__DRIcopySubBufferExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRIcopySubBufferExtensionRec	__DRIcopySubBufferExtension;$/;"	t	typeref:struct:__DRIcopySubBufferExtensionRec
__DRIcopySubBufferExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRIcopySubBufferExtensionRec {$/;"	s
__DRIcoreExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRIcoreExtensionRec		__DRIcoreExtension;$/;"	t	typeref:struct:__DRIcoreExtensionRec
__DRIcoreExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRIcoreExtensionRec {$/;"	s
__DRIdamageExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRIdamageExtensionRec __DRIdamageExtension;$/;"	t	typeref:struct:__DRIdamageExtensionRec
__DRIdamageExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRIdamageExtensionRec {$/;"	s
__DRIdisplay	include/GL/internal/dri_interface.h	/^typedef struct __DRIdisplayRec		__DRIdisplay;$/;"	t	typeref:struct:__DRIdisplayRec
__DRIdrawable	include/GL/internal/dri_interface.h	/^typedef struct __DRIdrawableRec		__DRIdrawable;$/;"	t	typeref:struct:__DRIdrawableRec
__DRIdri2Extension	include/GL/internal/dri_interface.h	/^typedef struct __DRIdri2ExtensionRec		__DRIdri2Extension;$/;"	t	typeref:struct:__DRIdri2ExtensionRec
__DRIdri2ExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRIdri2ExtensionRec {$/;"	s
__DRIdri2LoaderExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRIdri2LoaderExtensionRec	__DRIdri2LoaderExtension;$/;"	t	typeref:struct:__DRIdri2LoaderExtensionRec
__DRIdri2LoaderExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRIdri2LoaderExtensionRec {$/;"	s
__DRIextension	include/GL/internal/dri_interface.h	/^typedef struct __DRIextensionRec		__DRIextension;$/;"	t	typeref:struct:__DRIextensionRec
__DRIextensionRec	include/GL/internal/dri_interface.h	/^struct __DRIextensionRec {$/;"	s
__DRIframeTrackingExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRIframeTrackingExtensionRec	__DRIframeTrackingExtension;$/;"	t	typeref:struct:__DRIframeTrackingExtensionRec
__DRIframeTrackingExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRIframeTrackingExtensionRec {$/;"	s
__DRIframebuffer	include/GL/internal/dri_interface.h	/^typedef struct __DRIframebufferRec	__DRIframebuffer;$/;"	t	typeref:struct:__DRIframebufferRec
__DRIframebufferRec	include/GL/internal/dri_interface.h	/^struct __DRIframebufferRec {$/;"	s
__DRIgetDrawableInfoExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRIgetDrawableInfoExtensionRec __DRIgetDrawableInfoExtension;$/;"	t	typeref:struct:__DRIgetDrawableInfoExtensionRec
__DRIgetDrawableInfoExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRIgetDrawableInfoExtensionRec {$/;"	s
__DRIlegacyExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRIlegacyExtensionRec		__DRIlegacyExtension;$/;"	t	typeref:struct:__DRIlegacyExtensionRec
__DRIlegacyExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRIlegacyExtensionRec {$/;"	s
__DRIloaderExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRIloaderExtensionRec __DRIloaderExtension;$/;"	t	typeref:struct:__DRIloaderExtensionRec
__DRImediaStreamCounterExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRImediaStreamCounterExtensionRec	__DRImediaStreamCounterExtension;$/;"	t	typeref:struct:__DRImediaStreamCounterExtensionRec
__DRImediaStreamCounterExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRImediaStreamCounterExtensionRec {$/;"	s
__DRIscreen	include/GL/internal/dri_interface.h	/^typedef struct __DRIscreenRec		__DRIscreen;$/;"	t	typeref:struct:__DRIscreenRec
__DRIswapControlExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRIswapControlExtensionRec	__DRIswapControlExtension;$/;"	t	typeref:struct:__DRIswapControlExtensionRec
__DRIswapControlExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRIswapControlExtensionRec {$/;"	s
__DRIswrastExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRIswrastExtensionRec		__DRIswrastExtension;$/;"	t	typeref:struct:__DRIswrastExtensionRec
__DRIswrastExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRIswrastExtensionRec {$/;"	s
__DRIswrastLoaderExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRIswrastLoaderExtensionRec __DRIswrastLoaderExtension;$/;"	t	typeref:struct:__DRIswrastLoaderExtensionRec
__DRIswrastLoaderExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRIswrastLoaderExtensionRec {$/;"	s
__DRIsystemTimeExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRIsystemTimeExtensionRec __DRIsystemTimeExtension;$/;"	t	typeref:struct:__DRIsystemTimeExtensionRec
__DRIsystemTimeExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRIsystemTimeExtensionRec {$/;"	s
__DRItexBufferExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRItexBufferExtensionRec	__DRItexBufferExtension;$/;"	t	typeref:struct:__DRItexBufferExtensionRec
__DRItexBufferExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRItexBufferExtensionRec {$/;"	s
__DRItexOffsetExtension	include/GL/internal/dri_interface.h	/^typedef struct __DRItexOffsetExtensionRec	__DRItexOffsetExtension;$/;"	t	typeref:struct:__DRItexOffsetExtensionRec
__DRItexOffsetExtensionRec	include/GL/internal/dri_interface.h	/^struct __DRItexOffsetExtensionRec {$/;"	s
__DRIversion	include/GL/internal/dri_interface.h	/^typedef struct __DRIversionRec		__DRIversion;$/;"	t	typeref:struct:__DRIversionRec
__DRIversionRec	include/GL/internal/dri_interface.h	/^struct __DRIversionRec {$/;"	s
__FREEGLUT_EXT_H__	include/GL/freeglut_ext.h	2;"	d
__FREEGLUT_EXT_H__	shared/freeglut_ext.h	2;"	d
__FREEGLUT_H__	include/GL/freeglut.h	2;"	d
__FREEGLUT_H__	shared/freeglut.h	2;"	d
__FREEGLUT_STD_H__	include/GL/freeglut_std.h	2;"	d
__FREEGLUT_STD_H__	shared/freeglut_std.h	2;"	d
__GLEE_GLX_3DFX_multisample	shared/GLee.h	10609;"	d
__GLEE_GLX_ARB_fbconfig_float	shared/GLee.h	10314;"	d
__GLEE_GLX_ARB_multisample	shared/GLee.h	10304;"	d
__GLEE_GLX_EXT_import_context	shared/GLee.h	10408;"	d
__GLEE_GLX_EXT_scene_marker	shared/GLee.h	10771;"	d
__GLEE_GLX_EXT_visual_info	shared/GLee.h	10334;"	d
__GLEE_GLX_EXT_visual_rating	shared/GLee.h	10397;"	d
__GLEE_GLX_MESA_agp_offset	shared/GLee.h	10760;"	d
__GLEE_GLX_MESA_copy_sub_buffer	shared/GLee.h	10619;"	d
__GLEE_GLX_MESA_pixmap_colormap	shared/GLee.h	10630;"	d
__GLEE_GLX_MESA_release_buffers	shared/GLee.h	10641;"	d
__GLEE_GLX_MESA_set_3dfx_mode	shared/GLee.h	10652;"	d
__GLEE_GLX_NV_float_buffer	shared/GLee.h	10709;"	d
__GLEE_GLX_OML_swap_method	shared/GLee.h	10674;"	d
__GLEE_GLX_OML_sync_control	shared/GLee.h	10686;"	d
__GLEE_GLX_SGIS_blended_overlay	shared/GLee.h	10579;"	d
__GLEE_GLX_SGIS_multisample	shared/GLee.h	10324;"	d
__GLEE_GLX_SGIS_shared_multisample	shared/GLee.h	10588;"	d
__GLEE_GLX_SGIX_fbconfig	shared/GLee.h	10434;"	d
__GLEE_GLX_SGIX_hyperpipe	shared/GLee.h	10718;"	d
__GLEE_GLX_SGIX_pbuffer	shared/GLee.h	10470;"	d
__GLEE_GLX_SGIX_swap_barrier	shared/GLee.h	10565;"	d
__GLEE_GLX_SGIX_swap_group	shared/GLee.h	10554;"	d
__GLEE_GLX_SGIX_video_resize	shared/GLee.h	10529;"	d
__GLEE_GLX_SGIX_visual_select_group	shared/GLee.h	10665;"	d
__GLEE_GLX_SGI_cushion	shared/GLee.h	10518;"	d
__GLEE_GLX_SGI_make_current_read	shared/GLee.h	10383;"	d
__GLEE_GLX_SGI_swap_control	shared/GLee.h	10358;"	d
__GLEE_GLX_SGI_video_sync	shared/GLee.h	10369;"	d
__GLEE_GLX_SUN_get_transparent_index	shared/GLee.h	10598;"	d
__GLEE_GLX_VERSION_1_3	shared/GLee.h	10173;"	d
__GLEE_GLX_VERSION_1_4	shared/GLee.h	10291;"	d
__GLEE_GL_3DFX_multisample	shared/GLee.h	6086;"	d
__GLEE_GL_3DFX_tbuffer	shared/GLee.h	6098;"	d
__GLEE_GL_3DFX_texture_compression_FXT1	shared/GLee.h	6076;"	d
__GLEE_GL_APPLE_client_storage	shared/GLee.h	7638;"	d
__GLEE_GL_APPLE_element_array	shared/GLee.h	7647;"	d
__GLEE_GL_APPLE_fence	shared/GLee.h	7673;"	d
__GLEE_GL_APPLE_specular_vector	shared/GLee.h	5281;"	d
__GLEE_GL_APPLE_transform_hint	shared/GLee.h	5290;"	d
__GLEE_GL_APPLE_vertex_array_object	shared/GLee.h	7707;"	d
__GLEE_GL_APPLE_vertex_array_range	shared/GLee.h	7728;"	d
__GLEE_GL_APPLE_ycbcr_422	shared/GLee.h	7751;"	d
__GLEE_GL_ARB_color_buffer_float	shared/GLee.h	3249;"	d
__GLEE_GL_ARB_depth_texture	shared/GLee.h	2486;"	d
__GLEE_GL_ARB_draw_buffers	shared/GLee.h	3209;"	d
__GLEE_GL_ARB_fragment_program	shared/GLee.h	2848;"	d
__GLEE_GL_ARB_fragment_program_shadow	shared/GLee.h	3201;"	d
__GLEE_GL_ARB_fragment_shader	shared/GLee.h	3163;"	d
__GLEE_GL_ARB_half_float_pixel	shared/GLee.h	3265;"	d
__GLEE_GL_ARB_imaging	shared/GLee.h	990;"	d
__GLEE_GL_ARB_matrix_palette	shared/GLee.h	2396;"	d
__GLEE_GL_ARB_multisample	shared/GLee.h	2201;"	d
__GLEE_GL_ARB_multitexture	shared/GLee.h	2032;"	d
__GLEE_GL_ARB_occlusion_query	shared/GLee.h	2943;"	d
__GLEE_GL_ARB_pixel_buffer_object	shared/GLee.h	3302;"	d
__GLEE_GL_ARB_point_parameters	shared/GLee.h	2298;"	d
__GLEE_GL_ARB_point_sprite	shared/GLee.h	3191;"	d
__GLEE_GL_ARB_shader_objects	shared/GLee.h	2980;"	d
__GLEE_GL_ARB_shading_language_100	shared/GLee.h	3174;"	d
__GLEE_GL_ARB_shadow	shared/GLee.h	2499;"	d
__GLEE_GL_ARB_shadow_ambient	shared/GLee.h	2510;"	d
__GLEE_GL_ARB_texture_border_clamp	shared/GLee.h	2289;"	d
__GLEE_GL_ARB_texture_compression	shared/GLee.h	2249;"	d
__GLEE_GL_ARB_texture_cube_map	shared/GLee.h	2229;"	d
__GLEE_GL_ARB_texture_env_add	shared/GLee.h	2221;"	d
__GLEE_GL_ARB_texture_env_combine	shared/GLee.h	2429;"	d
__GLEE_GL_ARB_texture_env_crossbar	shared/GLee.h	2459;"	d
__GLEE_GL_ARB_texture_env_dot3	shared/GLee.h	2467;"	d
__GLEE_GL_ARB_texture_float	shared/GLee.h	3274;"	d
__GLEE_GL_ARB_texture_mirrored_repeat	shared/GLee.h	2477;"	d
__GLEE_GL_ARB_texture_non_power_of_two	shared/GLee.h	3183;"	d
__GLEE_GL_ARB_texture_rectangle	shared/GLee.h	3237;"	d
__GLEE_GL_ARB_transpose_matrix	shared/GLee.h	2177;"	d
__GLEE_GL_ARB_vertex_blend	shared/GLee.h	2316;"	d
__GLEE_GL_ARB_vertex_buffer_object	shared/GLee.h	2871;"	d
__GLEE_GL_ARB_vertex_program	shared/GLee.h	2575;"	d
__GLEE_GL_ARB_vertex_shader	shared/GLee.h	3139;"	d
__GLEE_GL_ARB_window_pos	shared/GLee.h	2519;"	d
__GLEE_GL_ATI_draw_buffers	shared/GLee.h	7774;"	d
__GLEE_GL_ATI_element_array	shared/GLee.h	7465;"	d
__GLEE_GL_ATI_envmap_bumpmap	shared/GLee.h	6811;"	d
__GLEE_GL_ATI_fragment_shader	shared/GLee.h	6839;"	d
__GLEE_GL_ATI_map_object_buffer	shared/GLee.h	8098;"	d
__GLEE_GL_ATI_pixel_format_float	shared/GLee.h	7802;"	d
__GLEE_GL_ATI_pn_triangles	shared/GLee.h	6993;"	d
__GLEE_GL_ATI_separate_stencil	shared/GLee.h	8112;"	d
__GLEE_GL_ATI_text_fragment_shader	shared/GLee.h	7629;"	d
__GLEE_GL_ATI_texture_env_combine3	shared/GLee.h	7812;"	d
__GLEE_GL_ATI_texture_float	shared/GLee.h	7823;"	d
__GLEE_GL_ATI_texture_mirror_once	shared/GLee.h	6210;"	d
__GLEE_GL_ATI_vertex_array_object	shared/GLee.h	7016;"	d
__GLEE_GL_ATI_vertex_attrib_array_object	shared/GLee.h	8130;"	d
__GLEE_GL_ATI_vertex_streams	shared/GLee.h	7312;"	d
__GLEE_GL_EXT_422_pixels	shared/GLee.h	5580;"	d
__GLEE_GL_EXT_Cg_shader	shared/GLee.h	8386;"	d
__GLEE_GL_EXT_abgr	shared/GLee.h	3314;"	d
__GLEE_GL_EXT_bgra	shared/GLee.h	4869;"	d
__GLEE_GL_EXT_bindable_uniform	shared/GLee.h	8603;"	d
__GLEE_GL_EXT_blend_color	shared/GLee.h	3323;"	d
__GLEE_GL_EXT_blend_equation_separate	shared/GLee.h	8181;"	d
__GLEE_GL_EXT_blend_func_separate	shared/GLee.h	5530;"	d
__GLEE_GL_EXT_blend_logic_op	shared/GLee.h	4047;"	d
__GLEE_GL_EXT_blend_minmax	shared/GLee.h	4022;"	d
__GLEE_GL_EXT_blend_subtract	shared/GLee.h	4037;"	d
__GLEE_GL_EXT_clip_volume_hint	shared/GLee.h	4515;"	d
__GLEE_GL_EXT_cmyka	shared/GLee.h	3740;"	d
__GLEE_GL_EXT_color_matrix	shared/GLee.h	8982;"	d
__GLEE_GL_EXT_color_subtable	shared/GLee.h	4413;"	d
__GLEE_GL_EXT_compiled_vertex_array	shared/GLee.h	4641;"	d
__GLEE_GL_EXT_convolution	shared/GLee.h	3532;"	d
__GLEE_GL_EXT_coordinate_frame	shared/GLee.h	5164;"	d
__GLEE_GL_EXT_copy_texture	shared/GLee.h	3457;"	d
__GLEE_GL_EXT_cull_vertex	shared/GLee.h	4657;"	d
__GLEE_GL_EXT_depth_bounds_test	shared/GLee.h	8157;"	d
__GLEE_GL_EXT_draw_buffers2	shared/GLee.h	9028;"	d
__GLEE_GL_EXT_draw_instanced	shared/GLee.h	9071;"	d
__GLEE_GL_EXT_draw_range_elements	shared/GLee.h	4786;"	d
__GLEE_GL_EXT_fog_coord	shared/GLee.h	5123;"	d
__GLEE_GL_EXT_fragment_lighting	shared/GLee.h	9085;"	d
__GLEE_GL_EXT_framebuffer_blit	shared/GLee.h	8955;"	d
__GLEE_GL_EXT_framebuffer_multisample	shared/GLee.h	8941;"	d
__GLEE_GL_EXT_framebuffer_object	shared/GLee.h	8263;"	d
__GLEE_GL_EXT_framebuffer_sRGB	shared/GLee.h	8626;"	d
__GLEE_GL_EXT_geometry_shader4	shared/GLee.h	8563;"	d
__GLEE_GL_EXT_gpu_shader4	shared/GLee.h	8427;"	d
__GLEE_GL_EXT_histogram	shared/GLee.h	3480;"	d
__GLEE_GL_EXT_index_array_formats	shared/GLee.h	4625;"	d
__GLEE_GL_EXT_index_func	shared/GLee.h	4611;"	d
__GLEE_GL_EXT_index_material	shared/GLee.h	4597;"	d
__GLEE_GL_EXT_index_texture	shared/GLee.h	4589;"	d
__GLEE_GL_EXT_light_texture	shared/GLee.h	4818;"	d
__GLEE_GL_EXT_misc_attribute	shared/GLee.h	3954;"	d
__GLEE_GL_EXT_multi_draw_arrays	shared/GLee.h	5109;"	d
__GLEE_GL_EXT_multisample	shared/GLee.h	6109;"	d
__GLEE_GL_EXT_packed_depth_stencil	shared/GLee.h	9161;"	d
__GLEE_GL_EXT_packed_float	shared/GLee.h	8647;"	d
__GLEE_GL_EXT_packed_pixels	shared/GLee.h	3823;"	d
__GLEE_GL_EXT_paletted_texture	shared/GLee.h	4488;"	d
__GLEE_GL_EXT_pixel_buffer_object	shared/GLee.h	8214;"	d
__GLEE_GL_EXT_pixel_transform	shared/GLee.h	4973;"	d
__GLEE_GL_EXT_pixel_transform_color_table	shared/GLee.h	5002;"	d
__GLEE_GL_EXT_point_parameters	shared/GLee.h	4146;"	d
__GLEE_GL_EXT_polygon_offset	shared/GLee.h	3339;"	d
__GLEE_GL_EXT_rescale_normal	shared/GLee.h	3878;"	d
__GLEE_GL_EXT_scene_marker	shared/GLee.h	9173;"	d
__GLEE_GL_EXT_secondary_color	shared/GLee.h	5030;"	d
__GLEE_GL_EXT_separate_specular_color	shared/GLee.h	5019;"	d
__GLEE_GL_EXT_shadow_funcs	shared/GLee.h	7608;"	d
__GLEE_GL_EXT_shared_texture_palette	shared/GLee.h	5010;"	d
__GLEE_GL_EXT_stencil_clear_tag	shared/GLee.h	9187;"	d
__GLEE_GL_EXT_stencil_two_side	shared/GLee.h	7616;"	d
__GLEE_GL_EXT_stencil_wrap	shared/GLee.h	5570;"	d
__GLEE_GL_EXT_subtexture	shared/GLee.h	3443;"	d
__GLEE_GL_EXT_texture	shared/GLee.h	3353;"	d
__GLEE_GL_EXT_texture3D	shared/GLee.h	3404;"	d
__GLEE_GL_EXT_texture_array	shared/GLee.h	8658;"	d
__GLEE_GL_EXT_texture_buffer_object	shared/GLee.h	8411;"	d
__GLEE_GL_EXT_texture_compression_dxt1	shared/GLee.h	9197;"	d
__GLEE_GL_EXT_texture_compression_latc	shared/GLee.h	8768;"	d
__GLEE_GL_EXT_texture_compression_rgtc	shared/GLee.h	8970;"	d
__GLEE_GL_EXT_texture_compression_s3tc	shared/GLee.h	5951;"	d
__GLEE_GL_EXT_texture_cube_map	shared/GLee.h	5602;"	d
__GLEE_GL_EXT_texture_env	shared/GLee.h	9207;"	d
__GLEE_GL_EXT_texture_env_add	shared/GLee.h	5631;"	d
__GLEE_GL_EXT_texture_env_combine	shared/GLee.h	5252;"	d
__GLEE_GL_EXT_texture_env_dot3	shared/GLee.h	6200;"	d
__GLEE_GL_EXT_texture_filter_anisotropic	shared/GLee.h	5650;"	d
__GLEE_GL_EXT_texture_integer	shared/GLee.h	8674;"	d
__GLEE_GL_EXT_texture_lod_bias	shared/GLee.h	5639;"	d
__GLEE_GL_EXT_texture_mirror_clamp	shared/GLee.h	8170;"	d
__GLEE_GL_EXT_texture_object	shared/GLee.h	3752;"	d
__GLEE_GL_EXT_texture_perturb_normal	shared/GLee.h	5096;"	d
__GLEE_GL_EXT_texture_sRGB	shared/GLee.h	9226;"	d
__GLEE_GL_EXT_texture_shared_exponent	shared/GLee.h	8636;"	d
__GLEE_GL_EXT_timer_query	shared/GLee.h	8396;"	d
__GLEE_GL_EXT_vertex_array	shared/GLee.h	3887;"	d
__GLEE_GL_EXT_vertex_shader	shared/GLee.h	7068;"	d
__GLEE_GL_EXT_vertex_weighting	shared/GLee.h	5660;"	d
__GLEE_GL_FfdMaskSGIX	shared/GLee.h	4247;"	d
__GLEE_GL_GREMEDY_string_marker	shared/GLee.h	8375;"	d
__GLEE_GL_HP_convolution_border_modes	shared/GLee.h	4384;"	d
__GLEE_GL_HP_image_transform	shared/GLee.h	4343;"	d
__GLEE_GL_HP_occlusion_test	shared/GLee.h	4963;"	d
__GLEE_GL_HP_texture_lighting	shared/GLee.h	4775;"	d
__GLEE_GL_IBM_cull_vertex	shared/GLee.h	5963;"	d
__GLEE_GL_IBM_multimode_draw_arrays	shared/GLee.h	5972;"	d
__GLEE_GL_IBM_rasterpos_clip	shared/GLee.h	4766;"	d
__GLEE_GL_IBM_static_data	shared/GLee.h	9250;"	d
__GLEE_GL_IBM_texture_mirrored_repeat	shared/GLee.h	6252;"	d
__GLEE_GL_IBM_vertex_array_lists	shared/GLee.h	5986;"	d
__GLEE_GL_INGR_blend_func_separate	shared/GLee.h	8998;"	d
__GLEE_GL_INGR_color_clamp	shared/GLee.h	5545;"	d
__GLEE_GL_INGR_interlace_read	shared/GLee.h	5561;"	d
__GLEE_GL_INGR_palette_buffer	shared/GLee.h	4396;"	d
__GLEE_GL_INTEL_parallel_arrays	shared/GLee.h	4938;"	d
__GLEE_GL_INTEL_texture_scissor	shared/GLee.h	4930;"	d
__GLEE_GL_MESAX_texture_stack	shared/GLee.h	9260;"	d
__GLEE_GL_MESA_pack_invert	shared/GLee.h	8194;"	d
__GLEE_GL_MESA_resize_buffers	shared/GLee.h	5860;"	d
__GLEE_GL_MESA_window_pos	shared/GLee.h	5871;"	d
__GLEE_GL_MESA_ycbcr_texture	shared/GLee.h	8203;"	d
__GLEE_GL_NV_blend_square	shared/GLee.h	5839;"	d
__GLEE_GL_NV_copy_depth_to_color	shared/GLee.h	6801;"	d
__GLEE_GL_NV_depth_buffer_float	shared/GLee.h	8747;"	d
__GLEE_GL_NV_depth_clamp	shared/GLee.h	7516;"	d
__GLEE_GL_NV_evaluators	shared/GLee.h	6261;"	d
__GLEE_GL_NV_fence	shared/GLee.h	6220;"	d
__GLEE_GL_NV_float_buffer	shared/GLee.h	7843;"	d
__GLEE_GL_NV_fog_distance	shared/GLee.h	5817;"	d
__GLEE_GL_NV_fragment_program	shared/GLee.h	7866;"	d
__GLEE_GL_NV_fragment_program2	shared/GLee.h	8234;"	d
__GLEE_GL_NV_fragment_program_option	shared/GLee.h	8226;"	d
__GLEE_GL_NV_framebuffer_multisample_coverage	shared/GLee.h	8924;"	d
__GLEE_GL_NV_geometry_program4	shared/GLee.h	8846;"	d
__GLEE_GL_NV_gpu_program4	shared/GLee.h	8860;"	d
__GLEE_GL_NV_half_float	shared/GLee.h	7898;"	d
__GLEE_GL_NV_light_max_exponent	shared/GLee.h	5690;"	d
__GLEE_GL_NV_multisample_filter_hint	shared/GLee.h	7507;"	d
__GLEE_GL_NV_occlusion_query	shared/GLee.h	7525;"	d
__GLEE_GL_NV_packed_depth_stencil	shared/GLee.h	6320;"	d
__GLEE_GL_NV_parameter_buffer_object	shared/GLee.h	9054;"	d
__GLEE_GL_NV_pixel_data_range	shared/GLee.h	8045;"	d
__GLEE_GL_NV_point_sprite	shared/GLee.h	7558;"	d
__GLEE_GL_NV_primitive_restart	shared/GLee.h	8065;"	d
__GLEE_GL_NV_register_combiners	shared/GLee.h	5719;"	d
__GLEE_GL_NV_register_combiners2	shared/GLee.h	6330;"	d
__GLEE_GL_NV_texgen_emboss	shared/GLee.h	5828;"	d
__GLEE_GL_NV_texgen_reflection	shared/GLee.h	5592;"	d
__GLEE_GL_NV_texture_compression_vtc	shared/GLee.h	6345;"	d
__GLEE_GL_NV_texture_env_combine4	shared/GLee.h	5847;"	d
__GLEE_GL_NV_texture_expand_normal	shared/GLee.h	8081;"	d
__GLEE_GL_NV_texture_rectangle	shared/GLee.h	6353;"	d
__GLEE_GL_NV_texture_shader	shared/GLee.h	6365;"	d
__GLEE_GL_NV_texture_shader2	shared/GLee.h	6446;"	d
__GLEE_GL_NV_texture_shader3	shared/GLee.h	7575;"	d
__GLEE_GL_NV_transform_feedback	shared/GLee.h	8780;"	d
__GLEE_GL_NV_vertex_array_range	shared/GLee.h	5700;"	d
__GLEE_GL_NV_vertex_array_range2	shared/GLee.h	6455;"	d
__GLEE_GL_NV_vertex_program	shared/GLee.h	6464;"	d
__GLEE_GL_NV_vertex_program1_1	shared/GLee.h	7600;"	d
__GLEE_GL_NV_vertex_program2	shared/GLee.h	8090;"	d
__GLEE_GL_NV_vertex_program2_option	shared/GLee.h	8247;"	d
__GLEE_GL_NV_vertex_program3	shared/GLee.h	8255;"	d
__GLEE_GL_OES_byte_coordinates	shared/GLee.h	9274;"	d
__GLEE_GL_OES_compressed_paletted_texture	shared/GLee.h	9283;"	d
__GLEE_GL_OES_read_format	shared/GLee.h	8147;"	d
__GLEE_GL_OES_single_precision	shared/GLee.h	9301;"	d
__GLEE_GL_OML_interlace	shared/GLee.h	6767;"	d
__GLEE_GL_OML_resample	shared/GLee.h	6787;"	d
__GLEE_GL_OML_subsample	shared/GLee.h	6777;"	d
__GLEE_GL_PGI_misc_hints	shared/GLee.h	4457;"	d
__GLEE_GL_PGI_vertex_hints	shared/GLee.h	4427;"	d
__GLEE_GL_REND_screen_coordinates	shared/GLee.h	5154;"	d
__GLEE_GL_S3_s3tc	shared/GLee.h	7762;"	d
__GLEE_GL_SGIS_detail_texture	shared/GLee.h	3783;"	d
__GLEE_GL_SGIS_fog_function	shared/GLee.h	4316;"	d
__GLEE_GL_SGIS_generate_mipmap	shared/GLee.h	3962;"	d
__GLEE_GL_SGIS_multisample	shared/GLee.h	3848;"	d
__GLEE_GL_SGIS_pixel_texture	shared/GLee.h	3663;"	d
__GLEE_GL_SGIS_point_line_texgen	shared/GLee.h	6172;"	d
__GLEE_GL_SGIS_point_parameters	shared/GLee.h	4164;"	d
__GLEE_GL_SGIS_sharpen_texture	shared/GLee.h	3805;"	d
__GLEE_GL_SGIS_texture4D	shared/GLee.h	3706;"	d
__GLEE_GL_SGIS_texture_border_clamp	shared/GLee.h	4013;"	d
__GLEE_GL_SGIS_texture_color_mask	shared/GLee.h	6188;"	d
__GLEE_GL_SGIS_texture_edge_clamp	shared/GLee.h	4004;"	d
__GLEE_GL_SGIS_texture_filter4	shared/GLee.h	3427;"	d
__GLEE_GL_SGIS_texture_lod	shared/GLee.h	3836;"	d
__GLEE_GL_SGIS_texture_select	shared/GLee.h	4080;"	d
__GLEE_GL_SGIX_async	shared/GLee.h	4879;"	d
__GLEE_GL_SGIX_async_histogram	shared/GLee.h	4920;"	d
__GLEE_GL_SGIX_async_pixel	shared/GLee.h	4906;"	d
__GLEE_GL_SGIX_blend_alpha_minmax	shared/GLee.h	4844;"	d
__GLEE_GL_SGIX_calligraphic_fragment	shared/GLee.h	4560;"	d
__GLEE_GL_SGIX_clipmap	shared/GLee.h	3972;"	d
__GLEE_GL_SGIX_convolution_accuracy	shared/GLee.h	6150;"	d
__GLEE_GL_SGIX_depth_pass_instrument	shared/GLee.h	9009;"	d
__GLEE_GL_SGIX_depth_texture	shared/GLee.h	4305;"	d
__GLEE_GL_SGIX_flush_raster	shared/GLee.h	4294;"	d
__GLEE_GL_SGIX_fog_offset	shared/GLee.h	4333;"	d
__GLEE_GL_SGIX_fog_scale	shared/GLee.h	5299;"	d
__GLEE_GL_SGIX_fragment_lighting	shared/GLee.h	4684;"	d
__GLEE_GL_SGIX_framezoom	shared/GLee.h	4222;"	d
__GLEE_GL_SGIX_igloo_interface	shared/GLee.h	9017;"	d
__GLEE_GL_SGIX_impact_pixel_texture	shared/GLee.h	4854;"	d
__GLEE_GL_SGIX_instruments	shared/GLee.h	4182;"	d
__GLEE_GL_SGIX_interlace	shared/GLee.h	4055;"	d
__GLEE_GL_SGIX_ir_instrument1	shared/GLee.h	4551;"	d
__GLEE_GL_SGIX_list_priority	shared/GLee.h	4524;"	d
__GLEE_GL_SGIX_pixel_texture	shared/GLee.h	3693;"	d
__GLEE_GL_SGIX_pixel_texture_bits	shared/GLee.h	9327;"	d
__GLEE_GL_SGIX_pixel_tiles	shared/GLee.h	4064;"	d
__GLEE_GL_SGIX_polynomial_ffd	shared/GLee.h	4257;"	d
__GLEE_GL_SGIX_reference_plane	shared/GLee.h	4281;"	d
__GLEE_GL_SGIX_resample	shared/GLee.h	6159;"	d
__GLEE_GL_SGIX_scalebias_hint	shared/GLee.h	6758;"	d
__GLEE_GL_SGIX_shadow	shared/GLee.h	3992;"	d
__GLEE_GL_SGIX_shadow_ambient	shared/GLee.h	4580;"	d
__GLEE_GL_SGIX_sprite	shared/GLee.h	4110;"	d
__GLEE_GL_SGIX_subsample	shared/GLee.h	6034;"	d
__GLEE_GL_SGIX_tag_sample_buffer	shared/GLee.h	4236;"	d
__GLEE_GL_SGIX_texture_add_env	shared/GLee.h	4404;"	d
__GLEE_GL_SGIX_texture_coordinate_clamp	shared/GLee.h	6747;"	d
__GLEE_GL_SGIX_texture_lod_bias	shared/GLee.h	4569;"	d
__GLEE_GL_SGIX_texture_multi_buffer	shared/GLee.h	4137;"	d
__GLEE_GL_SGIX_texture_range	shared/GLee.h	9335;"	d
__GLEE_GL_SGIX_texture_scale_bias	shared/GLee.h	4210;"	d
__GLEE_GL_SGIX_texture_select	shared/GLee.h	8990;"	d
__GLEE_GL_SGIX_vertex_preclip	shared/GLee.h	6140;"	d
__GLEE_GL_SGIX_ycrcb	shared/GLee.h	4674;"	d
__GLEE_GL_SGIX_ycrcb_subsample	shared/GLee.h	6047;"	d
__GLEE_GL_SGIX_ycrcba	shared/GLee.h	6055;"	d
__GLEE_GL_SGI_color_matrix	shared/GLee.h	3599;"	d
__GLEE_GL_SGI_color_table	shared/GLee.h	3618;"	d
__GLEE_GL_SGI_depth_pass_instrument	shared/GLee.h	6065;"	d
__GLEE_GL_SGI_texture_color_table	shared/GLee.h	3730;"	d
__GLEE_GL_SUNX_constant_data	shared/GLee.h	5309;"	d
__GLEE_GL_SUN_convolution_border_modes	shared/GLee.h	5622;"	d
__GLEE_GL_SUN_global_alpha	shared/GLee.h	5322;"	d
__GLEE_GL_SUN_mesh_array	shared/GLee.h	7485;"	d
__GLEE_GL_SUN_slice_accum	shared/GLee.h	7498;"	d
__GLEE_GL_SUN_triangle_list	shared/GLee.h	5356;"	d
__GLEE_GL_SUN_vertex	shared/GLee.h	5402;"	d
__GLEE_GL_VERSION_1_2	shared/GLee.h	827;"	d
__GLEE_GL_VERSION_1_3	shared/GLee.h	1073;"	d
__GLEE_GL_VERSION_1_4	shared/GLee.h	1315;"	d
__GLEE_GL_VERSION_1_5	shared/GLee.h	1497;"	d
__GLEE_GL_VERSION_2_0	shared/GLee.h	1612;"	d
__GLEE_GL_VERSION_2_1	shared/GLee.h	1983;"	d
__GLEE_GL_WIN_phong_shading	shared/GLee.h	4799;"	d
__GLEE_GL_WIN_specular_fog	shared/GLee.h	4809;"	d
__GLEE_WGL_3DFX_multisample	shared/GLee.h	9776;"	d
__GLEE_WGL_3DL_stereo_control	shared/GLee.h	10086;"	d
__GLEE_WGL_ARB_buffer_region	shared/GLee.h	9441;"	d
__GLEE_WGL_ARB_extensions_string	shared/GLee.h	9475;"	d
__GLEE_WGL_ARB_make_current_read	shared/GLee.h	9552;"	d
__GLEE_WGL_ARB_multisample	shared/GLee.h	9465;"	d
__GLEE_WGL_ARB_pbuffer	shared/GLee.h	9568;"	d
__GLEE_WGL_ARB_pixel_format	shared/GLee.h	9486;"	d
__GLEE_WGL_ARB_pixel_format_float	shared/GLee.h	9649;"	d
__GLEE_WGL_ARB_render_texture	shared/GLee.h	9599;"	d
__GLEE_WGL_ATI_pixel_format_float	shared/GLee.h	9955;"	d
__GLEE_WGL_EXT_depth_float	shared/GLee.h	9767;"	d
__GLEE_WGL_EXT_display_color_table	shared/GLee.h	9981;"	d
__GLEE_WGL_EXT_extensions_string	shared/GLee.h	10001;"	d
__GLEE_WGL_EXT_make_current_read	shared/GLee.h	9658;"	d
__GLEE_WGL_EXT_multisample	shared/GLee.h	9786;"	d
__GLEE_WGL_EXT_pbuffer	shared/GLee.h	9735;"	d
__GLEE_WGL_EXT_pixel_format	shared/GLee.h	9673;"	d
__GLEE_WGL_EXT_swap_control	shared/GLee.h	10012;"	d
__GLEE_WGL_I3D_digital_video_control	shared/GLee.h	9796;"	d
__GLEE_WGL_I3D_gamma	shared/GLee.h	9814;"	d
__GLEE_WGL_I3D_genlock	shared/GLee.h	9836;"	d
__GLEE_WGL_I3D_image_buffer	shared/GLee.h	9889;"	d
__GLEE_WGL_I3D_swap_frame_lock	shared/GLee.h	9911;"	d
__GLEE_WGL_I3D_swap_frame_usage	shared/GLee.h	10066;"	d
__GLEE_WGL_NV_float_buffer	shared/GLee.h	9964;"	d
__GLEE_WGL_NV_render_depth_texture	shared/GLee.h	9931;"	d
__GLEE_WGL_NV_render_texture_rectangle	shared/GLee.h	9944;"	d
__GLEE_WGL_NV_vertex_array_range	shared/GLee.h	10026;"	d
__GLEE_WGL_OML_sync_control	shared/GLee.h	10040;"	d
__GLTOOLS__LIBRARY	shared/gltools.h	11;"	d
__GLUT_H__	include/GL/glut.h	2;"	d
__GLUT_H__	shared/glut.h	2;"	d
__GLXEvent	include/GL/glx.h	/^typedef union __GLXEvent {$/;"	u
__GLXextFuncPtr	include/GL/glx.h	/^typedef void (*__GLXextFuncPtr)(void);$/;"	t
__GLXextFuncPtr	include/GL/glxext.h	/^typedef void (*__GLXextFuncPtr)(void);$/;"	t
__GLXextFuncPtr	shared/GLee.h	/^	typedef void (*__GLXextFuncPtr)(void);$/;"	t
__GL_FRAME_CLASS	shared/glfrustum.h	10;"	d
__GLeeCheckExtension	shared/GLee.c	/^GLboolean __GLeeCheckExtension(const char * name, ExtensionList *extensionNames)$/;"	f
__GLeeExtList_add	shared/GLee.c	/^void __GLeeExtList_add(ExtensionList *extList, const char * extName)$/;"	f
__GLeeExtList_clean	shared/GLee.c	/^void __GLeeExtList_clean(ExtensionList *extList)$/;"	f
__GLeeExtList_init	shared/GLee.c	/^void __GLeeExtList_init(ExtensionList *extList)$/;"	f
__GLeeGLExtensionNames	shared/GLee.c	/^char __GLeeGLExtensionNames[300][39]={$/;"	v
__GLeeGLLoadFunction	shared/GLee.c	/^GLEE_LINK_FUNCTION __GLeeGLLoadFunction[300];$/;"	v
__GLeeGLNumExtensions	shared/GLee.c	/^int __GLeeGLNumExtensions=300;$/;"	v
__GLeeGLXExtensionNames	shared/GLee.c	/^char __GLeeGLXExtensionNames[32][30]={$/;"	v
__GLeeGLXLoadFunction	shared/GLee.c	/^GLEE_LINK_FUNCTION __GLeeGLXLoadFunction[32];$/;"	v
__GLeeGLXNumExtensions	shared/GLee.c	/^int __GLeeGLXNumExtensions=32;$/;"	v
__GLeeGetExtStrPlat	shared/GLee.c	/^const char *__GLeeGetExtStrPlat()$/;"	f
__GLeeGetExtensionNumber	shared/GLee.c	/^GLEE_EXTERN GLint __GLeeGetExtensionNumber(const char *extensionName, int type)$/;"	f
__GLeeGetExtensions	shared/GLee.c	/^GLboolean __GLeeGetExtensions(ExtensionList* extList)$/;"	f
__GLeeGetProcAddress	shared/GLee.c	/^void * __GLeeGetProcAddress(const char *extname)$/;"	f
__GLeeGetVersionNumber	shared/GLee.c	/^int __GLeeGetVersionNumber(char *versionStr)$/;"	f
__GLeeInited	shared/GLee.c	/^GLboolean __GLeeInited=GL_FALSE;$/;"	v
__GLeeInitedLoadFunctions	shared/GLee.c	/^GLboolean __GLeeInitedLoadFunctions=GL_FALSE;$/;"	v
__GLeeLink_GLX_3DFX_multisample	shared/GLee.c	/^GLuint __GLeeLink_GLX_3DFX_multisample(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GLX_ARB_fbconfig_float	shared/GLee.c	/^GLuint __GLeeLink_GLX_ARB_fbconfig_float(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GLX_ARB_multisample	shared/GLee.c	/^GLuint __GLeeLink_GLX_ARB_multisample(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GLX_EXT_import_context	shared/GLee.c	/^GLuint __GLeeLink_GLX_EXT_import_context(void)$/;"	f
__GLeeLink_GLX_EXT_scene_marker	shared/GLee.c	/^GLuint __GLeeLink_GLX_EXT_scene_marker(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GLX_EXT_visual_info	shared/GLee.c	/^GLuint __GLeeLink_GLX_EXT_visual_info(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GLX_EXT_visual_rating	shared/GLee.c	/^GLuint __GLeeLink_GLX_EXT_visual_rating(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GLX_MESA_agp_offset	shared/GLee.c	/^GLuint __GLeeLink_GLX_MESA_agp_offset(void)$/;"	f
__GLeeLink_GLX_MESA_copy_sub_buffer	shared/GLee.c	/^GLuint __GLeeLink_GLX_MESA_copy_sub_buffer(void)$/;"	f
__GLeeLink_GLX_MESA_pixmap_colormap	shared/GLee.c	/^GLuint __GLeeLink_GLX_MESA_pixmap_colormap(void)$/;"	f
__GLeeLink_GLX_MESA_release_buffers	shared/GLee.c	/^GLuint __GLeeLink_GLX_MESA_release_buffers(void)$/;"	f
__GLeeLink_GLX_MESA_set_3dfx_mode	shared/GLee.c	/^GLuint __GLeeLink_GLX_MESA_set_3dfx_mode(void)$/;"	f
__GLeeLink_GLX_NV_float_buffer	shared/GLee.c	/^GLuint __GLeeLink_GLX_NV_float_buffer(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GLX_OML_swap_method	shared/GLee.c	/^GLuint __GLeeLink_GLX_OML_swap_method(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GLX_OML_sync_control	shared/GLee.c	/^GLuint __GLeeLink_GLX_OML_sync_control(void)$/;"	f
__GLeeLink_GLX_SGIS_blended_overlay	shared/GLee.c	/^GLuint __GLeeLink_GLX_SGIS_blended_overlay(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GLX_SGIS_multisample	shared/GLee.c	/^GLuint __GLeeLink_GLX_SGIS_multisample(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GLX_SGIS_shared_multisample	shared/GLee.c	/^GLuint __GLeeLink_GLX_SGIS_shared_multisample(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GLX_SGIX_fbconfig	shared/GLee.c	/^GLuint __GLeeLink_GLX_SGIX_fbconfig(void)$/;"	f
__GLeeLink_GLX_SGIX_hyperpipe	shared/GLee.c	/^GLuint __GLeeLink_GLX_SGIX_hyperpipe(void)$/;"	f
__GLeeLink_GLX_SGIX_pbuffer	shared/GLee.c	/^GLuint __GLeeLink_GLX_SGIX_pbuffer(void)$/;"	f
__GLeeLink_GLX_SGIX_swap_barrier	shared/GLee.c	/^GLuint __GLeeLink_GLX_SGIX_swap_barrier(void)$/;"	f
__GLeeLink_GLX_SGIX_swap_group	shared/GLee.c	/^GLuint __GLeeLink_GLX_SGIX_swap_group(void)$/;"	f
__GLeeLink_GLX_SGIX_video_resize	shared/GLee.c	/^GLuint __GLeeLink_GLX_SGIX_video_resize(void)$/;"	f
__GLeeLink_GLX_SGIX_visual_select_group	shared/GLee.c	/^GLuint __GLeeLink_GLX_SGIX_visual_select_group(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GLX_SGI_cushion	shared/GLee.c	/^GLuint __GLeeLink_GLX_SGI_cushion(void)$/;"	f
__GLeeLink_GLX_SGI_make_current_read	shared/GLee.c	/^GLuint __GLeeLink_GLX_SGI_make_current_read(void)$/;"	f
__GLeeLink_GLX_SGI_swap_control	shared/GLee.c	/^GLuint __GLeeLink_GLX_SGI_swap_control(void)$/;"	f
__GLeeLink_GLX_SGI_video_sync	shared/GLee.c	/^GLuint __GLeeLink_GLX_SGI_video_sync(void)$/;"	f
__GLeeLink_GLX_SUN_get_transparent_index	shared/GLee.c	/^GLuint __GLeeLink_GLX_SUN_get_transparent_index(void)$/;"	f
__GLeeLink_GLX_VERSION_1_3	shared/GLee.c	/^GLuint __GLeeLink_GLX_VERSION_1_3(void)$/;"	f
__GLeeLink_GLX_VERSION_1_4	shared/GLee.c	/^GLuint __GLeeLink_GLX_VERSION_1_4(void)$/;"	f
__GLeeLink_GL_3DFX_multisample	shared/GLee.c	/^GLuint __GLeeLink_GL_3DFX_multisample(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_3DFX_tbuffer	shared/GLee.c	/^GLuint __GLeeLink_GL_3DFX_tbuffer(void)$/;"	f
__GLeeLink_GL_3DFX_texture_compression_FXT1	shared/GLee.c	/^GLuint __GLeeLink_GL_3DFX_texture_compression_FXT1(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_APPLE_client_storage	shared/GLee.c	/^GLuint __GLeeLink_GL_APPLE_client_storage(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_APPLE_element_array	shared/GLee.c	/^GLuint __GLeeLink_GL_APPLE_element_array(void)$/;"	f
__GLeeLink_GL_APPLE_fence	shared/GLee.c	/^GLuint __GLeeLink_GL_APPLE_fence(void)$/;"	f
__GLeeLink_GL_APPLE_specular_vector	shared/GLee.c	/^GLuint __GLeeLink_GL_APPLE_specular_vector(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_APPLE_transform_hint	shared/GLee.c	/^GLuint __GLeeLink_GL_APPLE_transform_hint(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_APPLE_vertex_array_object	shared/GLee.c	/^GLuint __GLeeLink_GL_APPLE_vertex_array_object(void)$/;"	f
__GLeeLink_GL_APPLE_vertex_array_range	shared/GLee.c	/^GLuint __GLeeLink_GL_APPLE_vertex_array_range(void)$/;"	f
__GLeeLink_GL_APPLE_ycbcr_422	shared/GLee.c	/^GLuint __GLeeLink_GL_APPLE_ycbcr_422(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_color_buffer_float	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_color_buffer_float(void)$/;"	f
__GLeeLink_GL_ARB_depth_texture	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_depth_texture(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_draw_buffers	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_draw_buffers(void)$/;"	f
__GLeeLink_GL_ARB_fragment_program	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_fragment_program(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_fragment_program_shadow	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_fragment_program_shadow(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_fragment_shader	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_fragment_shader(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_half_float_pixel	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_half_float_pixel(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_imaging	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_imaging(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_matrix_palette	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_matrix_palette(void)$/;"	f
__GLeeLink_GL_ARB_multisample	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_multisample(void)$/;"	f
__GLeeLink_GL_ARB_multitexture	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_multitexture(void)$/;"	f
__GLeeLink_GL_ARB_occlusion_query	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_occlusion_query(void)$/;"	f
__GLeeLink_GL_ARB_pixel_buffer_object	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_pixel_buffer_object(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_point_parameters	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_point_parameters(void)$/;"	f
__GLeeLink_GL_ARB_point_sprite	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_point_sprite(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_shader_objects	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_shader_objects(void)$/;"	f
__GLeeLink_GL_ARB_shading_language_100	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_shading_language_100(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_shadow	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_shadow(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_shadow_ambient	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_shadow_ambient(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_texture_border_clamp	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_texture_border_clamp(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_texture_compression	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_texture_compression(void)$/;"	f
__GLeeLink_GL_ARB_texture_cube_map	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_texture_cube_map(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_texture_env_add	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_texture_env_add(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_texture_env_combine	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_texture_env_combine(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_texture_env_crossbar	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_texture_env_crossbar(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_texture_env_dot3	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_texture_env_dot3(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_texture_float	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_texture_float(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_texture_mirrored_repeat	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_texture_mirrored_repeat(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_texture_non_power_of_two	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_texture_non_power_of_two(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_texture_rectangle	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_texture_rectangle(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ARB_transpose_matrix	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_transpose_matrix(void)$/;"	f
__GLeeLink_GL_ARB_vertex_blend	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_vertex_blend(void)$/;"	f
__GLeeLink_GL_ARB_vertex_buffer_object	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_vertex_buffer_object(void)$/;"	f
__GLeeLink_GL_ARB_vertex_program	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_vertex_program(void)$/;"	f
__GLeeLink_GL_ARB_vertex_shader	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_vertex_shader(void)$/;"	f
__GLeeLink_GL_ARB_window_pos	shared/GLee.c	/^GLuint __GLeeLink_GL_ARB_window_pos(void)$/;"	f
__GLeeLink_GL_ATI_draw_buffers	shared/GLee.c	/^GLuint __GLeeLink_GL_ATI_draw_buffers(void)$/;"	f
__GLeeLink_GL_ATI_element_array	shared/GLee.c	/^GLuint __GLeeLink_GL_ATI_element_array(void)$/;"	f
__GLeeLink_GL_ATI_envmap_bumpmap	shared/GLee.c	/^GLuint __GLeeLink_GL_ATI_envmap_bumpmap(void)$/;"	f
__GLeeLink_GL_ATI_fragment_shader	shared/GLee.c	/^GLuint __GLeeLink_GL_ATI_fragment_shader(void)$/;"	f
__GLeeLink_GL_ATI_map_object_buffer	shared/GLee.c	/^GLuint __GLeeLink_GL_ATI_map_object_buffer(void)$/;"	f
__GLeeLink_GL_ATI_pixel_format_float	shared/GLee.c	/^GLuint __GLeeLink_GL_ATI_pixel_format_float(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ATI_pn_triangles	shared/GLee.c	/^GLuint __GLeeLink_GL_ATI_pn_triangles(void)$/;"	f
__GLeeLink_GL_ATI_separate_stencil	shared/GLee.c	/^GLuint __GLeeLink_GL_ATI_separate_stencil(void)$/;"	f
__GLeeLink_GL_ATI_text_fragment_shader	shared/GLee.c	/^GLuint __GLeeLink_GL_ATI_text_fragment_shader(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ATI_texture_env_combine3	shared/GLee.c	/^GLuint __GLeeLink_GL_ATI_texture_env_combine3(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ATI_texture_float	shared/GLee.c	/^GLuint __GLeeLink_GL_ATI_texture_float(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ATI_texture_mirror_once	shared/GLee.c	/^GLuint __GLeeLink_GL_ATI_texture_mirror_once(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_ATI_vertex_array_object	shared/GLee.c	/^GLuint __GLeeLink_GL_ATI_vertex_array_object(void)$/;"	f
__GLeeLink_GL_ATI_vertex_attrib_array_object	shared/GLee.c	/^GLuint __GLeeLink_GL_ATI_vertex_attrib_array_object(void)$/;"	f
__GLeeLink_GL_ATI_vertex_streams	shared/GLee.c	/^GLuint __GLeeLink_GL_ATI_vertex_streams(void)$/;"	f
__GLeeLink_GL_EXT_422_pixels	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_422_pixels(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_Cg_shader	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_Cg_shader(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_abgr	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_abgr(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_bgra	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_bgra(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_bindable_uniform	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_bindable_uniform(void)$/;"	f
__GLeeLink_GL_EXT_blend_color	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_blend_color(void)$/;"	f
__GLeeLink_GL_EXT_blend_equation_separate	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_blend_equation_separate(void)$/;"	f
__GLeeLink_GL_EXT_blend_func_separate	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_blend_func_separate(void)$/;"	f
__GLeeLink_GL_EXT_blend_logic_op	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_blend_logic_op(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_blend_minmax	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_blend_minmax(void)$/;"	f
__GLeeLink_GL_EXT_blend_subtract	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_blend_subtract(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_clip_volume_hint	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_clip_volume_hint(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_cmyka	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_cmyka(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_color_matrix	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_color_matrix(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_color_subtable	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_color_subtable(void)$/;"	f
__GLeeLink_GL_EXT_compiled_vertex_array	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_compiled_vertex_array(void)$/;"	f
__GLeeLink_GL_EXT_convolution	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_convolution(void)$/;"	f
__GLeeLink_GL_EXT_coordinate_frame	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_coordinate_frame(void)$/;"	f
__GLeeLink_GL_EXT_copy_texture	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_copy_texture(void)$/;"	f
__GLeeLink_GL_EXT_cull_vertex	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_cull_vertex(void)$/;"	f
__GLeeLink_GL_EXT_depth_bounds_test	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_depth_bounds_test(void)$/;"	f
__GLeeLink_GL_EXT_draw_buffers2	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_draw_buffers2(void)$/;"	f
__GLeeLink_GL_EXT_draw_instanced	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_draw_instanced(void)$/;"	f
__GLeeLink_GL_EXT_draw_range_elements	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_draw_range_elements(void)$/;"	f
__GLeeLink_GL_EXT_fog_coord	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_fog_coord(void)$/;"	f
__GLeeLink_GL_EXT_fragment_lighting	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_fragment_lighting(void)$/;"	f
__GLeeLink_GL_EXT_framebuffer_blit	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_framebuffer_blit(void)$/;"	f
__GLeeLink_GL_EXT_framebuffer_multisample	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_framebuffer_multisample(void)$/;"	f
__GLeeLink_GL_EXT_framebuffer_object	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_framebuffer_object(void)$/;"	f
__GLeeLink_GL_EXT_framebuffer_sRGB	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_framebuffer_sRGB(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_geometry_shader4	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_geometry_shader4(void)$/;"	f
__GLeeLink_GL_EXT_gpu_shader4	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_gpu_shader4(void)$/;"	f
__GLeeLink_GL_EXT_histogram	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_histogram(void)$/;"	f
__GLeeLink_GL_EXT_index_array_formats	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_index_array_formats(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_index_func	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_index_func(void)$/;"	f
__GLeeLink_GL_EXT_index_material	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_index_material(void)$/;"	f
__GLeeLink_GL_EXT_index_texture	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_index_texture(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_light_texture	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_light_texture(void)$/;"	f
__GLeeLink_GL_EXT_misc_attribute	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_misc_attribute(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_multi_draw_arrays	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_multi_draw_arrays(void)$/;"	f
__GLeeLink_GL_EXT_multisample	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_multisample(void)$/;"	f
__GLeeLink_GL_EXT_packed_depth_stencil	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_packed_depth_stencil(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_packed_float	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_packed_float(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_packed_pixels	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_packed_pixels(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_paletted_texture	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_paletted_texture(void)$/;"	f
__GLeeLink_GL_EXT_pixel_buffer_object	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_pixel_buffer_object(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_pixel_transform	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_pixel_transform(void)$/;"	f
__GLeeLink_GL_EXT_pixel_transform_color_table	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_pixel_transform_color_table(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_point_parameters	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_point_parameters(void)$/;"	f
__GLeeLink_GL_EXT_polygon_offset	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_polygon_offset(void)$/;"	f
__GLeeLink_GL_EXT_rescale_normal	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_rescale_normal(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_scene_marker	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_scene_marker(void)$/;"	f
__GLeeLink_GL_EXT_secondary_color	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_secondary_color(void)$/;"	f
__GLeeLink_GL_EXT_separate_specular_color	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_separate_specular_color(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_shadow_funcs	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_shadow_funcs(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_shared_texture_palette	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_shared_texture_palette(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_stencil_clear_tag	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_stencil_clear_tag(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_stencil_two_side	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_stencil_two_side(void)$/;"	f
__GLeeLink_GL_EXT_stencil_wrap	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_stencil_wrap(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_subtexture	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_subtexture(void)$/;"	f
__GLeeLink_GL_EXT_texture	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_texture3D	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture3D(void)$/;"	f
__GLeeLink_GL_EXT_texture_array	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_array(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_texture_buffer_object	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_buffer_object(void)$/;"	f
__GLeeLink_GL_EXT_texture_compression_dxt1	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_compression_dxt1(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_texture_compression_latc	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_compression_latc(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_texture_compression_rgtc	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_compression_rgtc(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_texture_compression_s3tc	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_compression_s3tc(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_texture_cube_map	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_cube_map(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_texture_env	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_env(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_texture_env_add	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_env_add(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_texture_env_combine	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_env_combine(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_texture_env_dot3	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_env_dot3(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_texture_filter_anisotropic	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_filter_anisotropic(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_texture_integer	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_integer(void)$/;"	f
__GLeeLink_GL_EXT_texture_lod_bias	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_lod_bias(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_texture_mirror_clamp	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_mirror_clamp(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_texture_object	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_object(void)$/;"	f
__GLeeLink_GL_EXT_texture_perturb_normal	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_perturb_normal(void)$/;"	f
__GLeeLink_GL_EXT_texture_sRGB	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_sRGB(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_texture_shared_exponent	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_texture_shared_exponent(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_EXT_timer_query	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_timer_query(void)$/;"	f
__GLeeLink_GL_EXT_vertex_array	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_vertex_array(void)$/;"	f
__GLeeLink_GL_EXT_vertex_shader	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_vertex_shader(void)$/;"	f
__GLeeLink_GL_EXT_vertex_weighting	shared/GLee.c	/^GLuint __GLeeLink_GL_EXT_vertex_weighting(void)$/;"	f
__GLeeLink_GL_FfdMaskSGIX	shared/GLee.c	/^GLuint __GLeeLink_GL_FfdMaskSGIX(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_GREMEDY_string_marker	shared/GLee.c	/^GLuint __GLeeLink_GL_GREMEDY_string_marker(void)$/;"	f
__GLeeLink_GL_HP_convolution_border_modes	shared/GLee.c	/^GLuint __GLeeLink_GL_HP_convolution_border_modes(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_HP_image_transform	shared/GLee.c	/^GLuint __GLeeLink_GL_HP_image_transform(void)$/;"	f
__GLeeLink_GL_HP_occlusion_test	shared/GLee.c	/^GLuint __GLeeLink_GL_HP_occlusion_test(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_HP_texture_lighting	shared/GLee.c	/^GLuint __GLeeLink_GL_HP_texture_lighting(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_IBM_cull_vertex	shared/GLee.c	/^GLuint __GLeeLink_GL_IBM_cull_vertex(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_IBM_multimode_draw_arrays	shared/GLee.c	/^GLuint __GLeeLink_GL_IBM_multimode_draw_arrays(void)$/;"	f
__GLeeLink_GL_IBM_rasterpos_clip	shared/GLee.c	/^GLuint __GLeeLink_GL_IBM_rasterpos_clip(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_IBM_static_data	shared/GLee.c	/^GLuint __GLeeLink_GL_IBM_static_data(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_IBM_texture_mirrored_repeat	shared/GLee.c	/^GLuint __GLeeLink_GL_IBM_texture_mirrored_repeat(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_IBM_vertex_array_lists	shared/GLee.c	/^GLuint __GLeeLink_GL_IBM_vertex_array_lists(void)$/;"	f
__GLeeLink_GL_INGR_blend_func_separate	shared/GLee.c	/^GLuint __GLeeLink_GL_INGR_blend_func_separate(void)$/;"	f
__GLeeLink_GL_INGR_color_clamp	shared/GLee.c	/^GLuint __GLeeLink_GL_INGR_color_clamp(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_INGR_interlace_read	shared/GLee.c	/^GLuint __GLeeLink_GL_INGR_interlace_read(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_INGR_palette_buffer	shared/GLee.c	/^GLuint __GLeeLink_GL_INGR_palette_buffer(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_INTEL_parallel_arrays	shared/GLee.c	/^GLuint __GLeeLink_GL_INTEL_parallel_arrays(void)$/;"	f
__GLeeLink_GL_INTEL_texture_scissor	shared/GLee.c	/^GLuint __GLeeLink_GL_INTEL_texture_scissor(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_MESAX_texture_stack	shared/GLee.c	/^GLuint __GLeeLink_GL_MESAX_texture_stack(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_MESA_pack_invert	shared/GLee.c	/^GLuint __GLeeLink_GL_MESA_pack_invert(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_MESA_resize_buffers	shared/GLee.c	/^GLuint __GLeeLink_GL_MESA_resize_buffers(void)$/;"	f
__GLeeLink_GL_MESA_window_pos	shared/GLee.c	/^GLuint __GLeeLink_GL_MESA_window_pos(void)$/;"	f
__GLeeLink_GL_MESA_ycbcr_texture	shared/GLee.c	/^GLuint __GLeeLink_GL_MESA_ycbcr_texture(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_blend_square	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_blend_square(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_copy_depth_to_color	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_copy_depth_to_color(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_depth_buffer_float	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_depth_buffer_float(void)$/;"	f
__GLeeLink_GL_NV_depth_clamp	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_depth_clamp(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_evaluators	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_evaluators(void)$/;"	f
__GLeeLink_GL_NV_fence	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_fence(void)$/;"	f
__GLeeLink_GL_NV_float_buffer	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_float_buffer(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_fog_distance	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_fog_distance(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_fragment_program	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_fragment_program(void)$/;"	f
__GLeeLink_GL_NV_fragment_program2	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_fragment_program2(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_fragment_program_option	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_fragment_program_option(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_framebuffer_multisample_coverage	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_framebuffer_multisample_coverage(void)$/;"	f
__GLeeLink_GL_NV_geometry_program4	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_geometry_program4(void)$/;"	f
__GLeeLink_GL_NV_gpu_program4	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_gpu_program4(void)$/;"	f
__GLeeLink_GL_NV_half_float	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_half_float(void)$/;"	f
__GLeeLink_GL_NV_light_max_exponent	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_light_max_exponent(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_multisample_filter_hint	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_multisample_filter_hint(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_occlusion_query	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_occlusion_query(void)$/;"	f
__GLeeLink_GL_NV_packed_depth_stencil	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_packed_depth_stencil(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_parameter_buffer_object	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_parameter_buffer_object(void)$/;"	f
__GLeeLink_GL_NV_pixel_data_range	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_pixel_data_range(void)$/;"	f
__GLeeLink_GL_NV_point_sprite	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_point_sprite(void)$/;"	f
__GLeeLink_GL_NV_primitive_restart	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_primitive_restart(void)$/;"	f
__GLeeLink_GL_NV_register_combiners	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_register_combiners(void)$/;"	f
__GLeeLink_GL_NV_register_combiners2	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_register_combiners2(void)$/;"	f
__GLeeLink_GL_NV_texgen_emboss	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_texgen_emboss(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_texgen_reflection	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_texgen_reflection(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_texture_compression_vtc	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_texture_compression_vtc(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_texture_env_combine4	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_texture_env_combine4(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_texture_expand_normal	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_texture_expand_normal(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_texture_rectangle	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_texture_rectangle(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_texture_shader	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_texture_shader(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_texture_shader2	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_texture_shader2(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_texture_shader3	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_texture_shader3(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_transform_feedback	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_transform_feedback(void)$/;"	f
__GLeeLink_GL_NV_vertex_array_range	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_vertex_array_range(void)$/;"	f
__GLeeLink_GL_NV_vertex_array_range2	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_vertex_array_range2(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_vertex_program	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_vertex_program(void)$/;"	f
__GLeeLink_GL_NV_vertex_program1_1	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_vertex_program1_1(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_vertex_program2	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_vertex_program2(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_vertex_program2_option	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_vertex_program2_option(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_NV_vertex_program3	shared/GLee.c	/^GLuint __GLeeLink_GL_NV_vertex_program3(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_OES_byte_coordinates	shared/GLee.c	/^GLuint __GLeeLink_GL_OES_byte_coordinates(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_OES_compressed_paletted_texture	shared/GLee.c	/^GLuint __GLeeLink_GL_OES_compressed_paletted_texture(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_OES_read_format	shared/GLee.c	/^GLuint __GLeeLink_GL_OES_read_format(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_OES_single_precision	shared/GLee.c	/^GLuint __GLeeLink_GL_OES_single_precision(void)$/;"	f
__GLeeLink_GL_OML_interlace	shared/GLee.c	/^GLuint __GLeeLink_GL_OML_interlace(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_OML_resample	shared/GLee.c	/^GLuint __GLeeLink_GL_OML_resample(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_OML_subsample	shared/GLee.c	/^GLuint __GLeeLink_GL_OML_subsample(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_PGI_misc_hints	shared/GLee.c	/^GLuint __GLeeLink_GL_PGI_misc_hints(void)$/;"	f
__GLeeLink_GL_PGI_vertex_hints	shared/GLee.c	/^GLuint __GLeeLink_GL_PGI_vertex_hints(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_REND_screen_coordinates	shared/GLee.c	/^GLuint __GLeeLink_GL_REND_screen_coordinates(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_S3_s3tc	shared/GLee.c	/^GLuint __GLeeLink_GL_S3_s3tc(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIS_detail_texture	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIS_detail_texture(void)$/;"	f
__GLeeLink_GL_SGIS_fog_function	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIS_fog_function(void)$/;"	f
__GLeeLink_GL_SGIS_generate_mipmap	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIS_generate_mipmap(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIS_multisample	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIS_multisample(void)$/;"	f
__GLeeLink_GL_SGIS_pixel_texture	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIS_pixel_texture(void)$/;"	f
__GLeeLink_GL_SGIS_point_line_texgen	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIS_point_line_texgen(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIS_point_parameters	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIS_point_parameters(void)$/;"	f
__GLeeLink_GL_SGIS_sharpen_texture	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIS_sharpen_texture(void)$/;"	f
__GLeeLink_GL_SGIS_texture4D	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIS_texture4D(void)$/;"	f
__GLeeLink_GL_SGIS_texture_border_clamp	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIS_texture_border_clamp(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIS_texture_color_mask	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIS_texture_color_mask(void)$/;"	f
__GLeeLink_GL_SGIS_texture_edge_clamp	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIS_texture_edge_clamp(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIS_texture_filter4	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIS_texture_filter4(void)$/;"	f
__GLeeLink_GL_SGIS_texture_lod	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIS_texture_lod(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIS_texture_select	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIS_texture_select(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_async	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_async(void)$/;"	f
__GLeeLink_GL_SGIX_async_histogram	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_async_histogram(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_async_pixel	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_async_pixel(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_blend_alpha_minmax	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_blend_alpha_minmax(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_calligraphic_fragment	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_calligraphic_fragment(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_clipmap	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_clipmap(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_convolution_accuracy	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_convolution_accuracy(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_depth_pass_instrument	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_depth_pass_instrument(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_depth_texture	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_depth_texture(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_flush_raster	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_flush_raster(void)$/;"	f
__GLeeLink_GL_SGIX_fog_offset	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_fog_offset(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_fog_scale	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_fog_scale(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_fragment_lighting	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_fragment_lighting(void)$/;"	f
__GLeeLink_GL_SGIX_framezoom	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_framezoom(void)$/;"	f
__GLeeLink_GL_SGIX_igloo_interface	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_igloo_interface(void)$/;"	f
__GLeeLink_GL_SGIX_impact_pixel_texture	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_impact_pixel_texture(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_instruments	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_instruments(void)$/;"	f
__GLeeLink_GL_SGIX_interlace	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_interlace(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_ir_instrument1	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_ir_instrument1(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_list_priority	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_list_priority(void)$/;"	f
__GLeeLink_GL_SGIX_pixel_texture	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_pixel_texture(void)$/;"	f
__GLeeLink_GL_SGIX_pixel_texture_bits	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_pixel_texture_bits(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_pixel_tiles	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_pixel_tiles(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_polynomial_ffd	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_polynomial_ffd(void)$/;"	f
__GLeeLink_GL_SGIX_reference_plane	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_reference_plane(void)$/;"	f
__GLeeLink_GL_SGIX_resample	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_resample(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_scalebias_hint	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_scalebias_hint(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_shadow	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_shadow(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_shadow_ambient	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_shadow_ambient(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_sprite	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_sprite(void)$/;"	f
__GLeeLink_GL_SGIX_subsample	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_subsample(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_tag_sample_buffer	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_tag_sample_buffer(void)$/;"	f
__GLeeLink_GL_SGIX_texture_add_env	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_texture_add_env(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_texture_coordinate_clamp	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_texture_coordinate_clamp(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_texture_lod_bias	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_texture_lod_bias(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_texture_multi_buffer	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_texture_multi_buffer(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_texture_range	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_texture_range(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_texture_scale_bias	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_texture_scale_bias(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_texture_select	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_texture_select(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_vertex_preclip	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_vertex_preclip(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_ycrcb	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_ycrcb(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_ycrcb_subsample	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_ycrcb_subsample(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGIX_ycrcba	shared/GLee.c	/^GLuint __GLeeLink_GL_SGIX_ycrcba(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGI_color_matrix	shared/GLee.c	/^GLuint __GLeeLink_GL_SGI_color_matrix(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGI_color_table	shared/GLee.c	/^GLuint __GLeeLink_GL_SGI_color_table(void)$/;"	f
__GLeeLink_GL_SGI_depth_pass_instrument	shared/GLee.c	/^GLuint __GLeeLink_GL_SGI_depth_pass_instrument(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SGI_texture_color_table	shared/GLee.c	/^GLuint __GLeeLink_GL_SGI_texture_color_table(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SUNX_constant_data	shared/GLee.c	/^GLuint __GLeeLink_GL_SUNX_constant_data(void)$/;"	f
__GLeeLink_GL_SUN_convolution_border_modes	shared/GLee.c	/^GLuint __GLeeLink_GL_SUN_convolution_border_modes(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SUN_global_alpha	shared/GLee.c	/^GLuint __GLeeLink_GL_SUN_global_alpha(void)$/;"	f
__GLeeLink_GL_SUN_mesh_array	shared/GLee.c	/^GLuint __GLeeLink_GL_SUN_mesh_array(void)$/;"	f
__GLeeLink_GL_SUN_slice_accum	shared/GLee.c	/^GLuint __GLeeLink_GL_SUN_slice_accum(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_SUN_triangle_list	shared/GLee.c	/^GLuint __GLeeLink_GL_SUN_triangle_list(void)$/;"	f
__GLeeLink_GL_SUN_vertex	shared/GLee.c	/^GLuint __GLeeLink_GL_SUN_vertex(void)$/;"	f
__GLeeLink_GL_VERSION_1_2	shared/GLee.c	/^GLuint __GLeeLink_GL_VERSION_1_2(void)$/;"	f
__GLeeLink_GL_VERSION_1_3	shared/GLee.c	/^GLuint __GLeeLink_GL_VERSION_1_3(void)$/;"	f
__GLeeLink_GL_VERSION_1_4	shared/GLee.c	/^GLuint __GLeeLink_GL_VERSION_1_4(void)$/;"	f
__GLeeLink_GL_VERSION_1_5	shared/GLee.c	/^GLuint __GLeeLink_GL_VERSION_1_5(void)$/;"	f
__GLeeLink_GL_VERSION_2_0	shared/GLee.c	/^GLuint __GLeeLink_GL_VERSION_2_0(void)$/;"	f
__GLeeLink_GL_VERSION_2_1	shared/GLee.c	/^GLuint __GLeeLink_GL_VERSION_2_1(void)$/;"	f
__GLeeLink_GL_WIN_phong_shading	shared/GLee.c	/^GLuint __GLeeLink_GL_WIN_phong_shading(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_GL_WIN_specular_fog	shared/GLee.c	/^GLuint __GLeeLink_GL_WIN_specular_fog(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_WGL_3DFX_multisample	shared/GLee.c	/^GLuint __GLeeLink_WGL_3DFX_multisample(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_WGL_3DL_stereo_control	shared/GLee.c	/^GLuint __GLeeLink_WGL_3DL_stereo_control(void)$/;"	f
__GLeeLink_WGL_ARB_buffer_region	shared/GLee.c	/^GLuint __GLeeLink_WGL_ARB_buffer_region(void)$/;"	f
__GLeeLink_WGL_ARB_extensions_string	shared/GLee.c	/^GLuint __GLeeLink_WGL_ARB_extensions_string(void)$/;"	f
__GLeeLink_WGL_ARB_make_current_read	shared/GLee.c	/^GLuint __GLeeLink_WGL_ARB_make_current_read(void)$/;"	f
__GLeeLink_WGL_ARB_multisample	shared/GLee.c	/^GLuint __GLeeLink_WGL_ARB_multisample(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_WGL_ARB_pbuffer	shared/GLee.c	/^GLuint __GLeeLink_WGL_ARB_pbuffer(void)$/;"	f
__GLeeLink_WGL_ARB_pixel_format	shared/GLee.c	/^GLuint __GLeeLink_WGL_ARB_pixel_format(void)$/;"	f
__GLeeLink_WGL_ARB_pixel_format_float	shared/GLee.c	/^GLuint __GLeeLink_WGL_ARB_pixel_format_float(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_WGL_ARB_render_texture	shared/GLee.c	/^GLuint __GLeeLink_WGL_ARB_render_texture(void)$/;"	f
__GLeeLink_WGL_ATI_pixel_format_float	shared/GLee.c	/^GLuint __GLeeLink_WGL_ATI_pixel_format_float(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_WGL_EXT_depth_float	shared/GLee.c	/^GLuint __GLeeLink_WGL_EXT_depth_float(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_WGL_EXT_display_color_table	shared/GLee.c	/^GLuint __GLeeLink_WGL_EXT_display_color_table(void)$/;"	f
__GLeeLink_WGL_EXT_extensions_string	shared/GLee.c	/^GLuint __GLeeLink_WGL_EXT_extensions_string(void)$/;"	f
__GLeeLink_WGL_EXT_make_current_read	shared/GLee.c	/^GLuint __GLeeLink_WGL_EXT_make_current_read(void)$/;"	f
__GLeeLink_WGL_EXT_multisample	shared/GLee.c	/^GLuint __GLeeLink_WGL_EXT_multisample(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_WGL_EXT_pbuffer	shared/GLee.c	/^GLuint __GLeeLink_WGL_EXT_pbuffer(void)$/;"	f
__GLeeLink_WGL_EXT_pixel_format	shared/GLee.c	/^GLuint __GLeeLink_WGL_EXT_pixel_format(void)$/;"	f
__GLeeLink_WGL_EXT_swap_control	shared/GLee.c	/^GLuint __GLeeLink_WGL_EXT_swap_control(void)$/;"	f
__GLeeLink_WGL_I3D_digital_video_control	shared/GLee.c	/^GLuint __GLeeLink_WGL_I3D_digital_video_control(void)$/;"	f
__GLeeLink_WGL_I3D_gamma	shared/GLee.c	/^GLuint __GLeeLink_WGL_I3D_gamma(void)$/;"	f
__GLeeLink_WGL_I3D_genlock	shared/GLee.c	/^GLuint __GLeeLink_WGL_I3D_genlock(void)$/;"	f
__GLeeLink_WGL_I3D_image_buffer	shared/GLee.c	/^GLuint __GLeeLink_WGL_I3D_image_buffer(void)$/;"	f
__GLeeLink_WGL_I3D_swap_frame_lock	shared/GLee.c	/^GLuint __GLeeLink_WGL_I3D_swap_frame_lock(void)$/;"	f
__GLeeLink_WGL_I3D_swap_frame_usage	shared/GLee.c	/^GLuint __GLeeLink_WGL_I3D_swap_frame_usage(void)$/;"	f
__GLeeLink_WGL_NV_float_buffer	shared/GLee.c	/^GLuint __GLeeLink_WGL_NV_float_buffer(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_WGL_NV_render_depth_texture	shared/GLee.c	/^GLuint __GLeeLink_WGL_NV_render_depth_texture(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_WGL_NV_render_texture_rectangle	shared/GLee.c	/^GLuint __GLeeLink_WGL_NV_render_texture_rectangle(void) {return GLEE_LINK_COMPLETE;}$/;"	f
__GLeeLink_WGL_NV_vertex_array_range	shared/GLee.c	/^GLuint __GLeeLink_WGL_NV_vertex_array_range(void)$/;"	f
__GLeeLink_WGL_OML_sync_control	shared/GLee.c	/^GLuint __GLeeLink_WGL_OML_sync_control(void)$/;"	f
__GLeeWGLExtensionNames	shared/GLee.c	/^char __GLeeWGLExtensionNames[30][32]={$/;"	v
__GLeeWGLLoadFunction	shared/GLee.c	/^GLEE_LINK_FUNCTION __GLeeWGLLoadFunction[30];$/;"	v
__GLeeWGLNumExtensions	shared/GLee.c	/^int __GLeeWGLNumExtensions=30;$/;"	v
__GLeeWriteError	shared/GLee.c	/^void __GLeeWriteError(const char * errorStr)$/;"	f
__WIN32__	include/GL/gl.h	51;"	d
__gl_h_	include/GL/gl.h	28;"	d
__glee_h_	shared/GLee.h	37;"	d
__glext_h_	include/GL/glext.h	2;"	d
__glext_h_	shared/GLee.h	62;"	d
__glu_h__	include/GL/glu.h	32;"	d
__glxext_h_	include/GL/glxext.h	2;"	d
__glxext_h_	shared/GLee.h	63;"	d
__stdcall	shared/GLee.c	54;"	d	file:
__wglext_h_	shared/wglext.h	2;"	d
_bottom	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^    T			_bottom;$/;"	m	class:Imath::Frustum
_bottom	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^    T			_bottom;$/;"	m	class:Imath::Frustum
_chn	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLut.h	/^    RgbaChannels	_chn;$/;"	m	class:Imf::RgbaLut
_chn	shared/openexr-mac/include/OpenEXR/ImfLut.h	/^    RgbaChannels	_chn;$/;"	m	class:Imf::RgbaLut
_count	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCode.h	/^    int		_count;$/;"	m	class:Imf::KeyCode
_count	shared/openexr-mac/include/OpenEXR/ImfKeyCode.h	/^    int		_count;$/;"	m	class:Imf::KeyCode
_data	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadPool.h	/^    Data *		_data;$/;"	m	class:IlmThread::ThreadPool
_data	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadPool.h	/^    Data* const		_data;$/;"	m	class:IlmThread::TaskGroup
_data	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^    T *		_data;$/;"	m	class:Imf::Array2D
_data	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^    T * _data;$/;"	m	class:Imf::Array
_data	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfInputFile.h	/^    Data *		_data;$/;"	m	class:Imf::InputFile
_data	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfOpaqueAttribute.h	/^    Array<char>			_data;$/;"	m	class:Imf::OpaqueAttribute
_data	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfOutputFile.h	/^    Data *		_data;$/;"	m	class:Imf::OutputFile
_data	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledInputFile.h	/^    Data *		_data;$/;"	m	class:Imf::TiledInputFile
_data	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledOutputFile.h	/^    Data *		_data;$/;"	m	class:Imf::TiledOutputFile
_data	shared/openexr-mac/include/OpenEXR/IlmThreadPool.h	/^    Data *		_data;$/;"	m	class:IlmThread::ThreadPool
_data	shared/openexr-mac/include/OpenEXR/IlmThreadPool.h	/^    Data* const		_data;$/;"	m	class:IlmThread::TaskGroup
_data	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^    T *		_data;$/;"	m	class:Imf::Array2D
_data	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^    T * _data;$/;"	m	class:Imf::Array
_data	shared/openexr-mac/include/OpenEXR/ImfInputFile.h	/^    Data *		_data;$/;"	m	class:Imf::InputFile
_data	shared/openexr-mac/include/OpenEXR/ImfOpaqueAttribute.h	/^    Array<char>			_data;$/;"	m	class:Imf::OpaqueAttribute
_data	shared/openexr-mac/include/OpenEXR/ImfOutputFile.h	/^    Data *		_data;$/;"	m	class:Imf::OutputFile
_data	shared/openexr-mac/include/OpenEXR/ImfTiledInputFile.h	/^    Data *		_data;$/;"	m	class:Imf::TiledInputFile
_data	shared/openexr-mac/include/OpenEXR/ImfTiledOutputFile.h	/^    Data *		_data;$/;"	m	class:Imf::TiledOutputFile
_dataSize	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfOpaqueAttribute.h	/^    long			_dataSize;$/;"	m	class:Imf::OpaqueAttribute
_dataSize	shared/openexr-mac/include/OpenEXR/ImfOpaqueAttribute.h	/^    long			_dataSize;$/;"	m	class:Imf::OpaqueAttribute
_deleteStream	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStdIO.h	/^    bool		_deleteStream;$/;"	m	class:Imf::StdIFStream
_deleteStream	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStdIO.h	/^    bool		_deleteStream;$/;"	m	class:Imf::StdOFStream
_eLut	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^        extern __declspec(dllexport) unsigned short	_eLut[1 << 9];$/;"	v
_eLut	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^        extern __declspec(dllimport) unsigned short	_eLut[1 << 9];$/;"	v
_eLut	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^    static const unsigned short _eLut[1 << 9];$/;"	m	class:half
_eLut	shared/openexr-mac/include/OpenEXR/half.h	/^        extern __declspec(dllexport) unsigned short	_eLut[1 << 9];$/;"	v
_eLut	shared/openexr-mac/include/OpenEXR/half.h	/^        extern __declspec(dllimport) unsigned short	_eLut[1 << 9];$/;"	v
_eLut	shared/openexr-mac/include/OpenEXR/half.h	/^    static const unsigned short _eLut[1 << 9];$/;"	m	class:half
_far	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^    T			_far;$/;"	m	class:Imath::Frustum
_far	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^    T			_far;$/;"	m	class:Imath::Frustum
_fileName	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIO.h	/^    std::string		_fileName;$/;"	m	class:Imf::IStream
_fileName	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIO.h	/^    std::string		_fileName;$/;"	m	class:Imf::OStream
_fileName	shared/openexr-mac/include/OpenEXR/ImfIO.h	/^    std::string		_fileName;$/;"	m	class:Imf::IStream
_fileName	shared/openexr-mac/include/OpenEXR/ImfIO.h	/^    std::string		_fileName;$/;"	m	class:Imf::OStream
_filmMfcCode	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCode.h	/^    int		_filmMfcCode;$/;"	m	class:Imf::KeyCode
_filmMfcCode	shared/openexr-mac/include/OpenEXR/ImfKeyCode.h	/^    int		_filmMfcCode;$/;"	m	class:Imf::KeyCode
_filmType	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCode.h	/^    int		_filmType;$/;"	m	class:Imf::KeyCode
_filmType	shared/openexr-mac/include/OpenEXR/ImfKeyCode.h	/^    int		_filmType;$/;"	m	class:Imf::KeyCode
_fromYa	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledRgbaFile.h	/^    FromYa *		_fromYa;$/;"	m	class:Imf::TiledRgbaInputFile
_fromYa	shared/openexr-mac/include/OpenEXR/ImfTiledRgbaFile.h	/^    FromYa *		_fromYa;$/;"	m	class:Imf::TiledRgbaInputFile
_fromYca	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaFile.h	/^    FromYca *			_fromYca;$/;"	m	class:Imf::RgbaInputFile
_fromYca	shared/openexr-mac/include/OpenEXR/ImfRgbaFile.h	/^    FromYca *			_fromYca;$/;"	m	class:Imf::RgbaInputFile
_group	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadPool.h	/^    TaskGroup *		_group;$/;"	m	class:IlmThread::Task
_group	shared/openexr-mac/include/OpenEXR/IlmThreadPool.h	/^    TaskGroup *		_group;$/;"	m	class:IlmThread::Task
_h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^    unsigned short	_h;$/;"	m	class:half
_h	shared/openexr-mac/include/OpenEXR/half.h	/^    unsigned short	_h;$/;"	m	class:half
_height	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^    unsigned int	_height;$/;"	m	class:Imf::PreviewImage
_height	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^    unsigned int	_height;$/;"	m	class:Imf::PreviewImage
_i	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^    ChannelList::ChannelMap::const_iterator _i;$/;"	m	class:Imf::ChannelList::ConstIterator
_i	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^    ChannelList::ChannelMap::iterator _i;$/;"	m	class:Imf::ChannelList::Iterator
_i	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^    FrameBuffer::SliceMap::const_iterator _i;$/;"	m	class:Imf::FrameBuffer::ConstIterator
_i	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^    FrameBuffer::SliceMap::iterator _i;$/;"	m	class:Imf::FrameBuffer::Iterator
_i	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^    Header::AttributeMap::const_iterator _i;$/;"	m	class:Imf::Header::ConstIterator
_i	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^    Header::AttributeMap::iterator _i;$/;"	m	class:Imf::Header::Iterator
_i	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^    ChannelList::ChannelMap::const_iterator _i;$/;"	m	class:Imf::ChannelList::ConstIterator
_i	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^    ChannelList::ChannelMap::iterator _i;$/;"	m	class:Imf::ChannelList::Iterator
_i	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^    FrameBuffer::SliceMap::const_iterator _i;$/;"	m	class:Imf::FrameBuffer::ConstIterator
_i	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^    FrameBuffer::SliceMap::iterator _i;$/;"	m	class:Imf::FrameBuffer::Iterator
_i	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^    Header::AttributeMap::const_iterator _i;$/;"	m	class:Imf::Header::ConstIterator
_i	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^    Header::AttributeMap::iterator _i;$/;"	m	class:Imf::Header::Iterator
_initialAxis	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^    Axis		_initialAxis	 ;	\/\/ First axis of rotation$/;"	m	class:Imath::Euler
_initialAxis	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^    Axis		_initialAxis	 ;	\/\/ First axis of rotation$/;"	m	class:Imath::Euler
_inputFile	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaFile.h	/^    InputFile *			_inputFile;$/;"	m	class:Imf::RgbaInputFile
_inputFile	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledRgbaFile.h	/^    TiledInputFile *	_inputFile;$/;"	m	class:Imf::TiledRgbaInputFile
_inputFile	shared/openexr-mac/include/OpenEXR/ImfRgbaFile.h	/^    InputFile *			_inputFile;$/;"	m	class:Imf::RgbaInputFile
_inputFile	shared/openexr-mac/include/OpenEXR/ImfTiledRgbaFile.h	/^    TiledInputFile *	_inputFile;$/;"	m	class:Imf::TiledRgbaInputFile
_is	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStdIO.h	/^    std::ifstream *	_is;$/;"	m	class:Imf::StdIFStream
_left	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^    T			_left;$/;"	m	class:Imath::Frustum
_left	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^    T			_left;$/;"	m	class:Imath::Frustum
_locked	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h	/^    bool		_locked;$/;"	m	class:IlmThread::Lock
_locked	shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h	/^    bool		_locked;$/;"	m	class:IlmThread::Lock
_lut	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLut.h	/^    halfFunction <half>	_lut;$/;"	m	class:Imf::HalfLut
_lut	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLut.h	/^    halfFunction <half>	_lut;$/;"	m	class:Imf::RgbaLut
_lut	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfFunction.h	/^    T		_lut[1 << 16];$/;"	m	class:halfFunction
_lut	shared/openexr-mac/include/OpenEXR/ImfLut.h	/^    halfFunction <half>	_lut;$/;"	m	class:Imf::HalfLut
_lut	shared/openexr-mac/include/OpenEXR/ImfLut.h	/^    halfFunction <half>	_lut;$/;"	m	class:Imf::RgbaLut
_lut	shared/openexr-mac/include/OpenEXR/halfFunction.h	/^    T		_lut[1 << 16];$/;"	m	class:halfFunction
_map	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^    ChannelMap			_map;$/;"	m	class:Imf::ChannelList
_map	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^    SliceMap			_map;$/;"	m	class:Imf::FrameBuffer
_map	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^    AttributeMap		_map;$/;"	m	class:Imf::Header
_map	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^    ChannelMap			_map;$/;"	m	class:Imf::ChannelList
_map	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^    SliceMap			_map;$/;"	m	class:Imf::FrameBuffer
_map	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^    AttributeMap		_map;$/;"	m	class:Imf::Header
_mutex	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h	/^	mutable CRITICAL_SECTION _mutex;$/;"	m	class:IlmThread::Mutex
_mutex	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h	/^	mutable pthread_mutex_t _mutex;$/;"	m	class:IlmThread::Mutex
_mutex	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h	/^    const Mutex &	_mutex;$/;"	m	class:IlmThread::Lock
_mutex	shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h	/^	mutable CRITICAL_SECTION _mutex;$/;"	m	class:IlmThread::Mutex
_mutex	shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h	/^	mutable pthread_mutex_t _mutex;$/;"	m	class:IlmThread::Mutex
_mutex	shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h	/^    const Mutex &	_mutex;$/;"	m	class:IlmThread::Lock
_near	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^    T			_near;$/;"	m	class:Imath::Frustum
_near	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^    T			_near;$/;"	m	class:Imath::Frustum
_orthographic	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^    bool		_orthographic;$/;"	m	class:Imath::Frustum
_orthographic	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^    bool		_orthographic;$/;"	m	class:Imath::Frustum
_os	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStdIO.h	/^    std::ofstream *	_os;$/;"	m	class:Imf::StdOFStream
_os	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStdIO.h	/^    std::ostringstream 	_os;$/;"	m	class:Imf::StdOSStream
_outputFile	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaFile.h	/^    OutputFile *		_outputFile;$/;"	m	class:Imf::RgbaOutputFile
_outputFile	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledRgbaFile.h	/^    TiledOutputFile *            _outputFile;$/;"	m	class:Imf::TiledRgbaOutputFile
_outputFile	shared/openexr-mac/include/OpenEXR/ImfRgbaFile.h	/^    OutputFile *		_outputFile;$/;"	m	class:Imf::RgbaOutputFile
_outputFile	shared/openexr-mac/include/OpenEXR/ImfTiledRgbaFile.h	/^    TiledOutputFile *            _outputFile;$/;"	m	class:Imf::TiledRgbaOutputFile
_perfOffset	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCode.h	/^    int		_perfOffset;$/;"	m	class:Imf::KeyCode
_perfOffset	shared/openexr-mac/include/OpenEXR/ImfKeyCode.h	/^    int		_perfOffset;$/;"	m	class:Imf::KeyCode
_perfsPerCount	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCode.h	/^    int		_perfsPerCount;$/;"	m	class:Imf::KeyCode
_perfsPerCount	shared/openexr-mac/include/OpenEXR/ImfKeyCode.h	/^    int		_perfsPerCount;$/;"	m	class:Imf::KeyCode
_perfsPerFrame	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCode.h	/^    int		_perfsPerFrame;$/;"	m	class:Imf::KeyCode
_perfsPerFrame	shared/openexr-mac/include/OpenEXR/ImfKeyCode.h	/^    int		_perfsPerFrame;$/;"	m	class:Imf::KeyCode
_pixels	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^    PreviewRgba *	_pixels;$/;"	m	class:Imf::PreviewImage
_pixels	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^    PreviewRgba *	_pixels;$/;"	m	class:Imf::PreviewImage
_prefix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCode.h	/^    int		_prefix;$/;"	m	class:Imf::KeyCode
_prefix	shared/openexr-mac/include/OpenEXR/ImfKeyCode.h	/^    int		_prefix;$/;"	m	class:Imf::KeyCode
_right	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^    T			_right;$/;"	m	class:Imath::Frustum
_right	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^    T			_right;$/;"	m	class:Imath::Frustum
_semaphore	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadSemaphore.h	/^	mutable HANDLE _semaphore;$/;"	m	class:IlmThread::Semaphore
_semaphore	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadSemaphore.h	/^	mutable sem_t _semaphore;$/;"	m	class:IlmThread::Semaphore
_semaphore	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadSemaphore.h	/^	mutable sema_t _semaphore;$/;"	m	class:IlmThread::Semaphore
_semaphore	shared/openexr-mac/include/OpenEXR/IlmThreadSemaphore.h	/^	mutable HANDLE _semaphore;$/;"	m	class:IlmThread::Semaphore
_semaphore	shared/openexr-mac/include/OpenEXR/IlmThreadSemaphore.h	/^	mutable sem_t _semaphore;$/;"	m	class:IlmThread::Semaphore
_semaphore	shared/openexr-mac/include/OpenEXR/IlmThreadSemaphore.h	/^	mutable sema_t _semaphore;$/;"	m	class:IlmThread::Semaphore
_sizeY	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^    long	_sizeY;$/;"	m	class:Imf::Array2D
_sizeY	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^    long	_sizeY;$/;"	m	class:Imf::Array2D
_stackTrace	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexBaseExc.h	/^    std::string		_stackTrace;$/;"	m	class:Iex::BaseExc
_stackTrace	shared/openexr-mac/include/OpenEXR/IexBaseExc.h	/^    std::string		_stackTrace;$/;"	m	class:Iex::BaseExc
_state	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^    unsigned long int	_state;$/;"	m	class:Imath::Rand32
_state	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^    unsigned short int	_state[3];$/;"	m	class:Imath::Rand48
_state	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^    unsigned long int	_state;$/;"	m	class:Imath::Rand32
_state	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^    unsigned short int	_state[3];$/;"	m	class:Imath::Rand48
_text	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h	/^    char		_text[SIZE];$/;"	m	class:Imf::Name
_text	shared/openexr-mac/include/OpenEXR/ImfName.h	/^    char		_text[SIZE];$/;"	m	class:Imf::Name
_thread	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThread.h	/^	HANDLE _thread;$/;"	m	class:IlmThread::Thread
_thread	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThread.h	/^	pthread_t _thread;$/;"	m	class:IlmThread::Thread
_thread	shared/openexr-mac/include/OpenEXR/IlmThread.h	/^	HANDLE _thread;$/;"	m	class:IlmThread::Thread
_thread	shared/openexr-mac/include/OpenEXR/IlmThread.h	/^	pthread_t _thread;$/;"	m	class:IlmThread::Thread
_time	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCode.h	/^    unsigned int	_time;$/;"	m	class:Imf::TimeCode
_time	shared/openexr-mac/include/OpenEXR/ImfTimeCode.h	/^    unsigned int	_time;$/;"	m	class:Imf::TimeCode
_toFloat	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^        extern __declspec(dllexport) half::uif		_toFloat[1 << 16];$/;"	v
_toFloat	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^        extern __declspec(dllimport) half::uif		_toFloat[1 << 16];$/;"	v
_toFloat	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^    static const uif	        _toFloat[1 << 16];$/;"	m	class:half
_toFloat	shared/openexr-mac/include/OpenEXR/half.h	/^        extern __declspec(dllexport) half::uif		_toFloat[1 << 16];$/;"	v
_toFloat	shared/openexr-mac/include/OpenEXR/half.h	/^        extern __declspec(dllimport) half::uif		_toFloat[1 << 16];$/;"	v
_toFloat	shared/openexr-mac/include/OpenEXR/half.h	/^    static const uif	        _toFloat[1 << 16];$/;"	m	class:half
_toYa	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledRgbaFile.h	/^    ToYa *			_toYa;$/;"	m	class:Imf::TiledRgbaOutputFile
_toYa	shared/openexr-mac/include/OpenEXR/ImfTiledRgbaFile.h	/^    ToYa *			_toYa;$/;"	m	class:Imf::TiledRgbaOutputFile
_toYca	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaFile.h	/^    ToYca *			_toYca;$/;"	m	class:Imf::RgbaOutputFile
_toYca	shared/openexr-mac/include/OpenEXR/ImfRgbaFile.h	/^    ToYca *			_toYca;$/;"	m	class:Imf::RgbaOutputFile
_top	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^    T			_top;$/;"	m	class:Imath::Frustum
_top	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^    T			_top;$/;"	m	class:Imath::Frustum
_typeName	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfOpaqueAttribute.h	/^    Array<char>			_typeName;$/;"	m	class:Imf::OpaqueAttribute
_typeName	shared/openexr-mac/include/OpenEXR/ImfOpaqueAttribute.h	/^    Array<char>			_typeName;$/;"	m	class:Imf::OpaqueAttribute
_user	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCode.h	/^    unsigned int	_user;$/;"	m	class:Imf::TimeCode
_user	shared/openexr-mac/include/OpenEXR/ImfTimeCode.h	/^    unsigned int	_user;$/;"	m	class:Imf::TimeCode
_value	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^    T					_value;$/;"	m	class:Imf::TypedAttribute
_value	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^    T					_value;$/;"	m	class:Imf::TypedAttribute
_width	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^    unsigned int	_width;$/;"	m	class:Imf::PreviewImage
_width	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^    unsigned int	_width;$/;"	m	class:Imf::PreviewImage
a	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^    T			r, g, b, a;$/;"	m	class:Imath::Color4
a	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	/^    ImfHalf	a;$/;"	m	struct:ImfRgba
a	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^    unsigned char	a;	\/\/ The pixel's alpha; 0 == transparent,$/;"	m	struct:Imf::PreviewRgba
a	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    half	a;$/;"	m	struct:Imf::Rgba
a	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^    T			r, g, b, a;$/;"	m	class:Imath::Color4
a	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	/^    ImfHalf	a;$/;"	m	struct:ImfRgba
a	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^    unsigned char	a;	\/\/ The pixel's alpha; 0 == transparent,$/;"	m	struct:Imf::PreviewRgba
a	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    half	a;$/;"	m	struct:Imf::Rgba
abs	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^abs (T a)$/;"	f	namespace:Imath
abs	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^abs (T a)$/;"	f	namespace:Imath
acos	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	acos  (T x)		{return ::acos (double(x));}	$/;"	f	struct:Imath::Math
acos	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	acos  (float x)			{return ::acosf (x);}	$/;"	f	struct:Imath::Math
acos	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	acos  (T x)		{return ::acos (double(x));}	$/;"	f	struct:Imath::Math
acos	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	acos  (float x)			{return ::acosf (x);}	$/;"	f	struct:Imath::Math
acquire	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h	/^    void acquire ()$/;"	f	class:IlmThread::Lock
acquire	shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h	/^    void acquire ()$/;"	f	class:IlmThread::Lock
affineTransform	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBoxAlgo.h	/^affineTransform(const Box< Vec3<T> > &bbox, const Matrix44<T> &M)$/;"	f	namespace:Imath
affineTransform	shared/openexr-mac/include/OpenEXR/ImathBoxAlgo.h	/^affineTransform(const Box< Vec3<T> > &bbox, const Matrix44<T> &M)$/;"	f	namespace:Imath
alignZAxisWithTargetDir	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^alignZAxisWithTargetDir (Vec3<T> targetDir, Vec3<T> upDir)$/;"	f	namespace:Imath
alignZAxisWithTargetDir	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^alignZAxisWithTargetDir (Vec3<T> targetDir, Vec3<T> upDir)$/;"	f	namespace:Imath
allocateMemory	include/GL/internal/dri_interface.h	/^    void *(*allocateMemory)(__DRIscreen *screen, GLsizei size,$/;"	m	struct:__DRIallocateExtensionRec
angle	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline T Quat<T>::angle() const$/;"	f	class:Imath::Quat
angle	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline T Quat<T>::angle() const$/;"	f	class:Imath::Quat
angleMapping	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^ Euler<T>::angleMapping(int &i, int &j, int &k) const$/;"	f	class:Imath::Euler
angleMapping	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^ Euler<T>::angleMapping(int &i, int &j, int &k) const$/;"	f	class:Imath::Euler
angleMod	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^Euler<T>::angleMod (T angle)$/;"	f	class:Imath::Euler
angleMod	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^Euler<T>::angleMod (T angle)$/;"	f	class:Imath::Euler
angleOrder	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^ Euler<T>::angleOrder(int &i, int &j, int &k) const$/;"	f	class:Imath::Euler
angleOrder	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^ Euler<T>::angleOrder(int &i, int &j, int &k) const$/;"	f	class:Imath::Euler
append	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexBaseExc.h	/^BaseExc::append (const char *s)$/;"	f	class:Iex::BaseExc
append	shared/openexr-mac/include/OpenEXR/IexBaseExc.h	/^BaseExc::append (const char *s)$/;"	f	class:Iex::BaseExc
asin	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	asin  (T x)		{return ::asin (double(x));}$/;"	f	struct:Imath::Math
asin	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	asin  (float x)			{return ::asinf (x);}$/;"	f	struct:Imath::Math
asin	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	asin  (T x)		{return ::asin (double(x));}$/;"	f	struct:Imath::Math
asin	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	asin  (float x)			{return ::asinf (x);}$/;"	f	struct:Imath::Math
aspect	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^T Frustum<T>::aspect() const$/;"	f	class:Imath::Frustum
aspect	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^T Frustum<T>::aspect() const$/;"	f	class:Imath::Frustum
assign	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexBaseExc.h	/^BaseExc::assign (const char *s)$/;"	f	class:Iex::BaseExc
assign	shared/openexr-mac/include/OpenEXR/IexBaseExc.h	/^BaseExc::assign (const char *s)$/;"	f	class:Iex::BaseExc
atan	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	atan  (T x)		{return ::atan (double(x));}$/;"	f	struct:Imath::Math
atan	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	atan  (float x)			{return ::atanf (x);}$/;"	f	struct:Imath::Math
atan	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	atan  (T x)		{return ::atan (double(x));}$/;"	f	struct:Imath::Math
atan	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	atan  (float x)			{return ::atanf (x);}$/;"	f	struct:Imath::Math
atan2	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	atan2 (T x, T y)	{return ::atan2 (double(x), double(y));}$/;"	f	struct:Imath::Math
atan2	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	atan2 (float x, float y)	{return ::atan2f (x, y);}$/;"	f	struct:Imath::Math
atan2	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	atan2 (T x, T y)	{return ::atan2 (double(x), double(y));}$/;"	f	struct:Imath::Math
atan2	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	atan2 (float x, float y)	{return ::atan2f (x, y);}$/;"	f	struct:Imath::Math
atom2.cpp	chapt04/Atom2/atom2.cpp	1;"	F
attachment	include/GL/internal/dri_interface.h	/^    unsigned int attachment;$/;"	m	struct:__DRIbufferRec
attribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::ConstIterator::attribute () const$/;"	f	class:Imf::Header::ConstIterator
attribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::Iterator::attribute () const$/;"	f	class:Imf::Header::Iterator
attribute	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::ConstIterator::attribute () const$/;"	f	class:Imf::Header::ConstIterator
attribute	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::Iterator::attribute () const$/;"	f	class:Imf::Header::Iterator
aux_buffer	include/GL/glx.h	/^    unsigned int aux_buffer;	\/* which aux buffer was affected *\/$/;"	m	struct:__anon1
axis	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Vec3<T> Quat<T>::axis() const$/;"	f	class:Imath::Quat
axis	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Vec3<T> Quat<T>::axis() const$/;"	f	class:Imath::Quat
b	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^    T			r, g, b, a;$/;"	m	class:Imath::Color4
b	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	/^    ImfHalf	b;$/;"	m	struct:ImfRgba
b	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^    unsigned char	b;	\/\/ proportional to pow (x\/255, 2.2),$/;"	m	struct:Imf::PreviewRgba
b	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    half	b;$/;"	m	struct:Imf::Rgba
b	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^    T			r, g, b, a;$/;"	m	class:Imath::Color4
b	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	/^    ImfHalf	b;$/;"	m	struct:ImfRgba
b	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^    unsigned char	b;	\/\/ proportional to pow (x\/255, 2.2),$/;"	m	struct:Imf::PreviewRgba
b	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    half	b;$/;"	m	struct:Imf::Rgba
bEdgeFlag	chapt03/star/star.cpp	/^GLboolean bEdgeFlag = TRUE;$/;"	v
bLoadShaderFile	shared/gltools.cpp	/^bool bLoadShaderFile(const char *szFile, GLhandleARB shader)$/;"	f
badFloat	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^badFloat (float f)$/;"	f	namespace:__anon9
badFloat	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^badFloat (float f)$/;"	f	namespace:__anon7
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRI2flushExtensionRec
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRIallocateExtensionRec
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRIcopySubBufferExtensionRec
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRIcoreExtensionRec
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRIdamageExtensionRec
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRIdri2ExtensionRec
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRIdri2LoaderExtensionRec
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRIframeTrackingExtensionRec
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRIgetDrawableInfoExtensionRec
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRIlegacyExtensionRec
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRImediaStreamCounterExtensionRec
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRIswapControlExtensionRec
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRIswrastExtensionRec
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRIswrastLoaderExtensionRec
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRIsystemTimeExtensionRec
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRItexBufferExtensionRec
base	include/GL/internal/dri_interface.h	/^    __DRIextension base;$/;"	m	struct:__DRItexOffsetExtensionRec
base	include/GL/internal/dri_interface.h	/^    unsigned char *base;    \/**< Framebuffer base address in the CPU's$/;"	m	struct:__DRIframebufferRec
base	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^    char *		base;$/;"	m	struct:Imf::Slice
base	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^    char *		base;$/;"	m	struct:Imf::Slice
baseTypeEpsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^    static T		baseTypeEpsilon()	{return limits<T>::epsilon();}$/;"	f	class:Imath::Color4
baseTypeEpsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^    static T		baseTypeEpsilon()	{return limits<T>::epsilon();}$/;"	f	class:Imath::Matrix33
baseTypeEpsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^    static T		baseTypeEpsilon()	{return limits<T>::epsilon();}$/;"	f	class:Imath::Matrix44
baseTypeEpsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^    static T		baseTypeEpsilon()	{return limits<T>::epsilon();}$/;"	f	class:Imath::Shear6
baseTypeEpsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    static T		baseTypeEpsilon()	{return limits<T>::epsilon();}$/;"	f	class:Imath::Vec2
baseTypeEpsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    static T		baseTypeEpsilon()	{return limits<T>::epsilon();}$/;"	f	class:Imath::Vec3
baseTypeEpsilon	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^    static T		baseTypeEpsilon()	{return limits<T>::epsilon();}$/;"	f	class:Imath::Color4
baseTypeEpsilon	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^    static T		baseTypeEpsilon()	{return limits<T>::epsilon();}$/;"	f	class:Imath::Matrix33
baseTypeEpsilon	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^    static T		baseTypeEpsilon()	{return limits<T>::epsilon();}$/;"	f	class:Imath::Matrix44
baseTypeEpsilon	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^    static T		baseTypeEpsilon()	{return limits<T>::epsilon();}$/;"	f	class:Imath::Shear6
baseTypeEpsilon	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    static T		baseTypeEpsilon()	{return limits<T>::epsilon();}$/;"	f	class:Imath::Vec2
baseTypeEpsilon	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    static T		baseTypeEpsilon()	{return limits<T>::epsilon();}$/;"	f	class:Imath::Vec3
baseTypeMax	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^    static T		baseTypeMax()		{return limits<T>::max();}$/;"	f	class:Imath::Color4
baseTypeMax	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^    static T		baseTypeMax()		{return limits<T>::max();}$/;"	f	class:Imath::Matrix33
baseTypeMax	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^    static T		baseTypeMax()		{return limits<T>::max();}$/;"	f	class:Imath::Matrix44
baseTypeMax	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^    static T		baseTypeMax()		{return limits<T>::max();}$/;"	f	class:Imath::Shear6
baseTypeMax	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    static T		baseTypeMax()		{return limits<T>::max();}$/;"	f	class:Imath::Vec2
baseTypeMax	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    static T		baseTypeMax()		{return limits<T>::max();}$/;"	f	class:Imath::Vec3
baseTypeMax	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^    static T		baseTypeMax()		{return limits<T>::max();}$/;"	f	class:Imath::Color4
baseTypeMax	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^    static T		baseTypeMax()		{return limits<T>::max();}$/;"	f	class:Imath::Matrix33
baseTypeMax	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^    static T		baseTypeMax()		{return limits<T>::max();}$/;"	f	class:Imath::Matrix44
baseTypeMax	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^    static T		baseTypeMax()		{return limits<T>::max();}$/;"	f	class:Imath::Shear6
baseTypeMax	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    static T		baseTypeMax()		{return limits<T>::max();}$/;"	f	class:Imath::Vec2
baseTypeMax	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    static T		baseTypeMax()		{return limits<T>::max();}$/;"	f	class:Imath::Vec3
baseTypeMin	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^    static T		baseTypeMin()		{return limits<T>::min();}$/;"	f	class:Imath::Color4
baseTypeMin	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^    static T		baseTypeMin()		{return limits<T>::min();}$/;"	f	class:Imath::Matrix33
baseTypeMin	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^    static T		baseTypeMin()		{return limits<T>::min();}$/;"	f	class:Imath::Matrix44
baseTypeMin	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^    static T		baseTypeMin()		{return limits<T>::min();}$/;"	f	class:Imath::Shear6
baseTypeMin	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    static T		baseTypeMin()		{return limits<T>::min();}$/;"	f	class:Imath::Vec2
baseTypeMin	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    static T		baseTypeMin()		{return limits<T>::min();}$/;"	f	class:Imath::Vec3
baseTypeMin	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^    static T		baseTypeMin()		{return limits<T>::min();}$/;"	f	class:Imath::Color4
baseTypeMin	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^    static T		baseTypeMin()		{return limits<T>::min();}$/;"	f	class:Imath::Matrix33
baseTypeMin	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^    static T		baseTypeMin()		{return limits<T>::min();}$/;"	f	class:Imath::Matrix44
baseTypeMin	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^    static T		baseTypeMin()		{return limits<T>::min();}$/;"	f	class:Imath::Shear6
baseTypeMin	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    static T		baseTypeMin()		{return limits<T>::min();}$/;"	f	class:Imath::Vec2
baseTypeMin	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    static T		baseTypeMin()		{return limits<T>::min();}$/;"	f	class:Imath::Vec3
baseTypeSmallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^    static T		baseTypeSmallest()	{return limits<T>::smallest();}$/;"	f	class:Imath::Color4
baseTypeSmallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^    static T		baseTypeSmallest()	{return limits<T>::smallest();}$/;"	f	class:Imath::Matrix33
baseTypeSmallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^    static T		baseTypeSmallest()	{return limits<T>::smallest();}$/;"	f	class:Imath::Matrix44
baseTypeSmallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^    static T		baseTypeSmallest()	{return limits<T>::smallest();}$/;"	f	class:Imath::Shear6
baseTypeSmallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    static T		baseTypeSmallest()	{return limits<T>::smallest();}$/;"	f	class:Imath::Vec2
baseTypeSmallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    static T		baseTypeSmallest()	{return limits<T>::smallest();}$/;"	f	class:Imath::Vec3
baseTypeSmallest	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^    static T		baseTypeSmallest()	{return limits<T>::smallest();}$/;"	f	class:Imath::Color4
baseTypeSmallest	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^    static T		baseTypeSmallest()	{return limits<T>::smallest();}$/;"	f	class:Imath::Matrix33
baseTypeSmallest	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^    static T		baseTypeSmallest()	{return limits<T>::smallest();}$/;"	f	class:Imath::Matrix44
baseTypeSmallest	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^    static T		baseTypeSmallest()	{return limits<T>::smallest();}$/;"	f	class:Imath::Shear6
baseTypeSmallest	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    static T		baseTypeSmallest()	{return limits<T>::smallest();}$/;"	f	class:Imath::Vec2
baseTypeSmallest	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    static T		baseTypeSmallest()	{return limits<T>::smallest();}$/;"	f	class:Imath::Vec3
bindContext	include/GL/internal/dri_interface.h	/^    int (*bindContext)(__DRIcontext *ctx,$/;"	m	struct:__DRIcoreExtensionRec
bits	shared/gltools.cpp	/^    GLbyte	bits;                   \/\/ bits per pixel (8 16, 24, 32)$/;"	m	struct:__anon10	file:
bits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::bits () const$/;"	f	class:half
bits	shared/openexr-mac/include/OpenEXR/half.h	/^half::bits () const$/;"	f	class:half
blue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChromaticities.h	/^    Imath::V2f	blue;$/;"	m	struct:Imf::Chromaticities
blue	shared/openexr-mac/include/OpenEXR/ImfChromaticities.h	/^    Imath::V2f	blue;$/;"	m	struct:Imf::Chromaticities
bottom	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^    T			bottom() const		{ return _bottom;	}$/;"	f	class:Imath::Frustum
bottom	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^    T			bottom() const		{ return _bottom;	}$/;"	f	class:Imath::Frustum
bottomPlane	shared/glfrustum.h	/^        M3DVector4f topPlane, bottomPlane;$/;"	m	class:GLFrustum
bounce.cpp	chapt02/bounce/bounce.cpp	1;"	F
bufferObjects	shared/VBOMesh.h	/^        GLuint bufferObjects[4];$/;"	m	class:CVBOMesh
buffer_mask	include/GL/glx.h	/^    unsigned int buffer_mask;	\/* mask indicating which buffers are affected *\/$/;"	m	struct:__anon1
cast	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::cast (Attribute &attribute)$/;"	f	class:Imf::TypedAttribute
cast	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::cast (Attribute *attribute)$/;"	f	class:Imf::TypedAttribute
cast	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::cast (const Attribute &attribute)$/;"	f	class:Imf::TypedAttribute
cast	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::cast (const Attribute *attribute)$/;"	f	class:Imf::TypedAttribute
cast	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::cast (Attribute &attribute)$/;"	f	class:Imf::TypedAttribute
cast	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::cast (Attribute *attribute)$/;"	f	class:Imf::TypedAttribute
cast	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::cast (const Attribute &attribute)$/;"	f	class:Imf::TypedAttribute
cast	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::cast (const Attribute *attribute)$/;"	f	class:Imf::TypedAttribute
ceil	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^ceil (T x)$/;"	f	namespace:Imath
ceil	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	ceil  (T x)		{return ::ceil (double(x));}$/;"	f	struct:Imath::Math
ceil	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	ceil  (float x)			{return ::ceilf (x);}$/;"	f	struct:Imath::Math
ceil	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^ceil (T x)$/;"	f	namespace:Imath
ceil	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	ceil  (T x)		{return ::ceil (double(x));}$/;"	f	struct:Imath::Math
ceil	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	ceil  (float x)			{return ::ceilf (x);}$/;"	f	struct:Imath::Math
center	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^inline T Box<T>::center() const $/;"	f	class:Imath::Box
center	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^Interval<T>::center() const $/;"	f	class:Imath::Interval
center	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathSphere.h	/^    Vec3<T>	center;$/;"	m	class:Imath::Sphere3
center	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^inline T Box<T>::center() const $/;"	f	class:Imath::Box
center	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^Interval<T>::center() const $/;"	f	class:Imath::Interval
center	shared/openexr-mac/include/OpenEXR/ImathSphere.h	/^    Vec3<T>	center;$/;"	m	class:Imath::Sphere3
channel	include/GL/glxext.h	/^    int     channel;$/;"	m	struct:__anon4
channel	shared/GLee.h	/^			int channel;$/;"	m	struct:__anon13
channel	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^ChannelList::ConstIterator::channel () const$/;"	f	class:Imf::ChannelList::ConstIterator
channel	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^ChannelList::Iterator::channel () const$/;"	f	class:Imf::ChannelList::Iterator
channel	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^ChannelList::ConstIterator::channel () const$/;"	f	class:Imf::ChannelList::ConstIterator
channel	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^ChannelList::Iterator::channel () const$/;"	f	class:Imf::ChannelList::Iterator
checkForZeroScaleInRow	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^checkForZeroScaleInRow (const T& scl, $/;"	f	namespace:Imath
checkForZeroScaleInRow	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^checkForZeroScaleInRow (const T& scl, $/;"	f	namespace:Imath
circumscribe	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathSphere.h	/^void Sphere3<T>::circumscribe(const Box<Vec3<T> > &box)$/;"	f	class:Imath::Sphere3
circumscribe	shared/openexr-mac/include/OpenEXR/ImathSphere.h	/^void Sphere3<T>::circumscribe(const Box<Vec3<T> > &box)$/;"	f	class:Imath::Sphere3
clamp	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^clamp (T a, T l, T h)$/;"	f	namespace:Imath
clamp	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^clamp (T a, T l, T h)$/;"	f	namespace:Imath
clip	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBoxAlgo.h	/^inline T clip(const T& in, const Box<T>& box)$/;"	f	namespace:Imath
clip	shared/openexr-mac/include/OpenEXR/ImathBoxAlgo.h	/^inline T clip(const T& in, const Box<T>& box)$/;"	f	namespace:Imath
closestPointInBox	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBoxAlgo.h	/^closestPointInBox(const Vec3<T>& p, const Box< Vec3<T> >& box )$/;"	f	namespace:Imath
closestPointInBox	shared/openexr-mac/include/OpenEXR/ImathBoxAlgo.h	/^closestPointInBox(const Vec3<T>& p, const Box< Vec3<T> >& box )$/;"	f	namespace:Imath
closestPointOnBox	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBoxAlgo.h	/^Vec3<T> closestPointOnBox(const Vec3<T>& pt, const Box< Vec3<T> >& box )$/;"	f	namespace:Imath
closestPointOnBox	shared/openexr-mac/include/OpenEXR/ImathBoxAlgo.h	/^Vec3<T> closestPointOnBox(const Vec3<T>& pt, const Box< Vec3<T> >& box )$/;"	f	namespace:Imath
closestPointTo	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	/^Line3<T>::closestPointTo(const Line3<T>& line) const$/;"	f	class:Imath::Line3
closestPointTo	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	/^inline Vec3<T> Line3<T>::closestPointTo(const Vec3<T>& point) const$/;"	f	class:Imath::Line3
closestPointTo	shared/openexr-mac/include/OpenEXR/ImathLine.h	/^Line3<T>::closestPointTo(const Line3<T>& line) const$/;"	f	class:Imath::Line3
closestPointTo	shared/openexr-mac/include/OpenEXR/ImathLine.h	/^inline Vec3<T> Line3<T>::closestPointTo(const Vec3<T>& point) const$/;"	f	class:Imath::Line3
closestPoints	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLineAlgo.h	/^bool closestPoints(const Line3<T>& line1,$/;"	f	namespace:Imath
closestPoints	shared/openexr-mac/include/OpenEXR/ImathLineAlgo.h	/^bool closestPoints(const Line3<T>& line1,$/;"	f	namespace:Imath
closestVertex	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLineAlgo.h	/^closestVertex(const Vec3<T> &v0,$/;"	f	namespace:Imath
closestVertex	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVecAlgo.h	/^closestVertex(const Vec &v0,$/;"	f	namespace:Imath
closestVertex	shared/openexr-mac/include/OpenEXR/ImathLineAlgo.h	/^closestVertex(const Vec3<T> &v0,$/;"	f	namespace:Imath
closestVertex	shared/openexr-mac/include/OpenEXR/ImathVecAlgo.h	/^closestVertex(const Vec &v0,$/;"	f	namespace:Imath
cmp	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^cmp (T a, T b)$/;"	f	namespace:Imath
cmp	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^cmp (T a, T b)$/;"	f	namespace:Imath
cmpt	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^cmpt (T a, T b, T t)$/;"	f	namespace:Imath
cmpt	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^cmpt (T a, T b, T t)$/;"	f	namespace:Imath
colorMapBits	shared/gltools.cpp	/^    unsigned char 	colorMapBits;   \/\/ bits per palette entry$/;"	m	struct:__anon10	file:
colorMapLength	shared/gltools.cpp	/^    unsigned short	colorMapLength;         \/\/ Number of colors$/;"	m	struct:__anon10	file:
colorMapStart	shared/gltools.cpp	/^    unsigned short	colorMapStart;          \/\/ First colour map entry$/;"	m	struct:__anon10	file:
colorMapType	shared/gltools.cpp	/^    GLbyte	colorMapType;           \/\/ 0 = None, 1 = paletted$/;"	m	struct:__anon10	file:
copy	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::copy () const$/;"	f	class:Imf::TypedAttribute
copy	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::copy () const$/;"	f	class:Imf::TypedAttribute
copyContext	include/GL/internal/dri_interface.h	/^    int (*copyContext)(__DRIcontext *dest,$/;"	m	struct:__DRIcoreExtensionRec
copySubBuffer	include/GL/internal/dri_interface.h	/^    void (*copySubBuffer)(__DRIdrawable *drawable, int x, int y, int w, int h);$/;"	m	struct:__DRIcopySubBufferExtensionRec
copyValueFrom	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::copyValueFrom (const Attribute &other)$/;"	f	class:Imf::TypedAttribute
copyValueFrom	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::copyValueFrom (const Attribute &other)$/;"	f	class:Imf::TypedAttribute
cos	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	cos   (T x)		{return ::cos (double(x));}$/;"	f	struct:Imath::Math
cos	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	cos   (float x)			{return ::cosf (x);}$/;"	f	struct:Imath::Math
cos	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	cos   (T x)		{return ::cos (double(x));}$/;"	f	struct:Imath::Math
cos	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	cos   (float x)			{return ::cosf (x);}$/;"	f	struct:Imath::Math
cosh	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	cosh  (T x)		{return ::cosh (double(x));}$/;"	f	struct:Imath::Math
cosh	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	cosh  (float x)			{return ::coshf (x);}$/;"	f	struct:Imath::Math
cosh	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	cosh  (T x)		{return ::cosh (double(x));}$/;"	f	struct:Imath::Math
cosh	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	cosh  (float x)			{return ::coshf (x);}$/;"	f	struct:Imath::Math
count	include/GL/glx.h	/^    int count;			\/* if nonzero, at least this many more *\/$/;"	m	struct:__anon1
count	include/GL/glxext.h	/^    int count;		  \/* if nonzero, at least this many more *\/$/;"	m	struct:__anon2
count	shared/GLee.h	/^		int count;$/;"	m	struct:__anon11
count	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadSemaphore.h	/^	    unsigned int count;$/;"	m	struct:IlmThread::Semaphore::sema_t
count	shared/openexr-mac/include/OpenEXR/IlmThreadSemaphore.h	/^	    unsigned int count;$/;"	m	struct:IlmThread::Semaphore::sema_t
cpp	include/GL/internal/dri_interface.h	/^    unsigned int cpp;$/;"	m	struct:__DRIbufferRec
createNewContext	include/GL/internal/dri_interface.h	/^    __DRIcontext *(*createNewContext)(__DRIscreen *screen,$/;"	m	struct:__DRIcoreExtensionRec
createNewContext	include/GL/internal/dri_interface.h	/^    __DRIcontext *(*createNewContext)(__DRIscreen *screen,$/;"	m	struct:__DRIdri2ExtensionRec
createNewContext	include/GL/internal/dri_interface.h	/^    __DRIcontext *(*createNewContext)(__DRIscreen *screen,$/;"	m	struct:__DRIlegacyExtensionRec
createNewDrawable	include/GL/internal/dri_interface.h	/^    __DRIdrawable *(*createNewDrawable)(__DRIscreen *screen,$/;"	m	struct:__DRIcoreExtensionRec
createNewDrawable	include/GL/internal/dri_interface.h	/^    __DRIdrawable *(*createNewDrawable)(__DRIscreen *screen,$/;"	m	struct:__DRIdri2ExtensionRec
createNewDrawable	include/GL/internal/dri_interface.h	/^    __DRIdrawable *(*createNewDrawable)(__DRIscreen *screen,$/;"	m	struct:__DRIlegacyExtensionRec
createNewDrawable	include/GL/internal/dri_interface.h	/^    __DRIdrawable *(*createNewDrawable)(__DRIscreen *screen,$/;"	m	struct:__DRIswrastExtensionRec
createNewScreen	include/GL/internal/dri_interface.h	/^    __DRIscreen *(*createNewScreen)(int screen, int fd,$/;"	m	struct:__DRIcoreExtensionRec
createNewScreen	include/GL/internal/dri_interface.h	/^    __DRIscreen *(*createNewScreen)(int screen, int fd,$/;"	m	struct:__DRIdri2ExtensionRec
createNewScreen	include/GL/internal/dri_interface.h	/^    __DRIscreen *(*createNewScreen)(int screen,$/;"	m	struct:__DRIlegacyExtensionRec
createNewScreen	include/GL/internal/dri_interface.h	/^    __DRIscreen *(*createNewScreen)(int screen,$/;"	m	struct:__DRIswrastExtensionRec
cross	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::cross (const Vec2 &v) const$/;"	f	class:Imath::Vec2
cross	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::cross (const Vec3 &v) const$/;"	f	class:Imath::Vec3
cross	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::cross (const Vec2 &v) const$/;"	f	class:Imath::Vec2
cross	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::cross (const Vec3 &v) const$/;"	f	class:Imath::Vec3
denorm_min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static half denorm_min () throw () {return HALF_MIN;}$/;"	f	class:std::numeric_limits
denorm_min	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static half denorm_min () throw () {return HALF_MIN;}$/;"	f	class:std::numeric_limits
descriptor	shared/gltools.cpp	/^    GLbyte	descriptor;             \/\/ image descriptor$/;"	m	struct:__anon10	file:
destHeight	include/GL/glxext.h	/^    int destXOrigin, destYOrigin, destWidth, destHeight;$/;"	m	struct:__anon5
destHeight	shared/GLee.h	/^			int destHeight;$/;"	m	struct:__anon14
destWidth	include/GL/glxext.h	/^    int destXOrigin, destYOrigin, destWidth, destHeight;$/;"	m	struct:__anon5
destWidth	shared/GLee.h	/^			int destWidth;$/;"	m	struct:__anon14
destXOrigin	include/GL/glxext.h	/^    int destXOrigin, destYOrigin, destWidth, destHeight;$/;"	m	struct:__anon5
destXOrigin	shared/GLee.h	/^			int destXOrigin;$/;"	m	struct:__anon14
destYOrigin	include/GL/glxext.h	/^    int destXOrigin, destYOrigin, destWidth, destHeight;$/;"	m	struct:__anon5
destYOrigin	shared/GLee.h	/^			int destYOrigin;$/;"	m	struct:__anon14
destroyContext	include/GL/internal/dri_interface.h	/^    void (*destroyContext)(__DRIcontext *context);$/;"	m	struct:__DRIcoreExtensionRec
destroyDrawable	include/GL/internal/dri_interface.h	/^    void (*destroyDrawable)(__DRIdrawable *drawable);$/;"	m	struct:__DRIcoreExtensionRec
destroyScreen	include/GL/internal/dri_interface.h	/^    void (*destroyScreen)(__DRIscreen *screen);$/;"	m	struct:__DRIcoreExtensionRec
dev_priv	include/GL/internal/dri_interface.h	/^    void *dev_priv;         \/**< Pointer to the driver's dev-priv structure. *\/$/;"	m	struct:__DRIframebufferRec
dev_priv_size	include/GL/internal/dri_interface.h	/^    int dev_priv_size;      \/**< Size of the driver's dev-priv structure. *\/$/;"	m	struct:__DRIframebufferRec
digits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const int digits = HALF_MANT_DIG;$/;"	m	class:std::numeric_limits
digits	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const int digits = HALF_MANT_DIG;$/;"	m	class:std::numeric_limits
digits10	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const int digits10 = HALF_DIG;$/;"	m	class:std::numeric_limits
digits10	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const int digits10 = HALF_DIG;$/;"	m	class:std::numeric_limits
dimensions	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^    static unsigned int	dimensions() {return 4;}$/;"	f	class:Imath::Color4
dimensions	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^    static unsigned int	dimensions() {return 6;}$/;"	f	class:Imath::Shear6
dimensions	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    static unsigned int	dimensions() {return 2;}$/;"	f	class:Imath::Vec2
dimensions	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    static unsigned int	dimensions() {return 3;}$/;"	f	class:Imath::Vec3
dimensions	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^    static unsigned int	dimensions() {return 4;}$/;"	f	class:Imath::Color4
dimensions	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^    static unsigned int	dimensions() {return 6;}$/;"	f	class:Imath::Shear6
dimensions	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    static unsigned int	dimensions() {return 2;}$/;"	f	class:Imath::Vec2
dimensions	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    static unsigned int	dimensions() {return 3;}$/;"	f	class:Imath::Vec3
dir	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	/^    Vec3<T>			dir;$/;"	m	class:Imath::Line3
dir	shared/openexr-mac/include/OpenEXR/ImathLine.h	/^    Vec3<T>			dir;$/;"	m	class:Imath::Line3
display	include/GL/glx.h	/^    Display *display;		\/* display the event was read from *\/$/;"	m	struct:__anon1
display	include/GL/glxext.h	/^    Display *display;		  \/* display the event was read from *\/$/;"	m	struct:__anon2
display	shared/GLee.h	/^		Display *display;$/;"	m	struct:__anon11
distance	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^    T				distance;$/;"	m	class:Imath::Plane3
distance	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^    T				distance;$/;"	m	class:Imath::Plane3
distanceTo	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	/^inline T Line3<T>::distanceTo(const Line3<T>& line) const$/;"	f	class:Imath::Line3
distanceTo	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	/^inline T Line3<T>::distanceTo(const Vec3<T>& point) const$/;"	f	class:Imath::Line3
distanceTo	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^inline T Plane3<T>::distanceTo(const Vec3<T> &point) const$/;"	f	class:Imath::Plane3
distanceTo	shared/openexr-mac/include/OpenEXR/ImathLine.h	/^inline T Line3<T>::distanceTo(const Line3<T>& line) const$/;"	f	class:Imath::Line3
distanceTo	shared/openexr-mac/include/OpenEXR/ImathLine.h	/^inline T Line3<T>::distanceTo(const Vec3<T>& point) const$/;"	f	class:Imath::Line3
distanceTo	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^inline T Plane3<T>::distanceTo(const Vec3<T> &point) const$/;"	f	class:Imath::Plane3
divp	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^divp (int x, int y)$/;"	f	namespace:Imath
divp	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^divp (int x, int y)$/;"	f	namespace:Imath
divs	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^divs (int x, int y)$/;"	f	namespace:Imath
divs	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^divs (int x, int y)$/;"	f	namespace:Imath
dot	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::dot (const Vec2 &v) const$/;"	f	class:Imath::Vec2
dot	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::dot (const Vec3 &v) const$/;"	f	class:Imath::Vec3
dot	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::dot (const Vec2 &v) const$/;"	f	class:Imath::Vec2
dot	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::dot (const Vec3 &v) const$/;"	f	class:Imath::Vec3
draw.cpp	c3.drawPolygonBitmap/draw.cpp	1;"	F
draw.cpp	c3.drawStart/draw.cpp	1;"	F
draw.cpp	c3.scissor/draw.cpp	1;"	F
draw.cpp	c3.template/draw.cpp	1;"	F
draw.cpp	c4.translate/draw.cpp	1;"	F
drawLines.cpp	c3.drawLine/drawLines.cpp	1;"	F
drawObject.cpp	c3.drawObject/drawObject.cpp	1;"	F
drawPoints.cpp	c3.drawPoints/drawPoints.cpp	1;"	F
drawPoints.cpp	template.dir/drawPoints.cpp	1;"	F
drawSpheres	c4.translate/draw.cpp	/^void drawSpheres() {$/;"	f
drawTriangles	c4.translate/draw.cpp	/^void drawTriangles () {$/;"	f
draw_type	include/GL/glx.h	/^    int draw_type;		\/* GLX_WINDOW or GLX_PBUFFER *\/$/;"	m	struct:__anon1
draw_type	include/GL/glxext.h	/^    int draw_type;		  \/* GLX_WINDOW_SGIX or GLX_PBUFFER_SGIX *\/$/;"	m	struct:__anon2
draw_type	shared/GLee.h	/^		int draw_type;		  $/;"	m	struct:__anon11
drawable	include/GL/glx.h	/^    GLXDrawable drawable;	\/* XID of Drawable *\/$/;"	m	struct:__anon1
drawable	include/GL/glxext.h	/^    GLXDrawable drawable;	  \/* i.d. of Drawable *\/$/;"	m	struct:__anon2
drawable	shared/GLee.h	/^		GLXDrawable drawable;$/;"	m	struct:__anon11
dri_interface.h	include/GL/internal/dri_interface.h	1;"	F
drm_clip_rect_t	include/GL/internal/dri_interface.h	/^typedef struct drm_clip_rect drm_clip_rect_t;$/;"	t	typeref:struct:drm_clip_rect
drm_context_t	include/GL/internal/dri_interface.h	/^typedef unsigned int drm_context_t;$/;"	t
drm_drawable_t	include/GL/internal/dri_interface.h	/^typedef unsigned int drm_drawable_t;$/;"	t
epsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathHalfLimits.h	/^    static float		epsilon()	{return HALF_EPSILON;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static char			epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static double		epsilon()	{return DBL_EPSILON;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static float		epsilon()	{return FLT_EPSILON;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static int			epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static long			epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static long double		epsilon()	{return LDBL_EPSILON;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static short		epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static signed char		epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static unsigned char	epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static unsigned int		epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static unsigned long	epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static unsigned short	epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static half epsilon () throw () {return HALF_EPSILON;}$/;"	f	class:std::numeric_limits
epsilon	shared/openexr-mac/include/OpenEXR/ImathHalfLimits.h	/^    static float		epsilon()	{return HALF_EPSILON;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static char			epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static double		epsilon()	{return DBL_EPSILON;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static float		epsilon()	{return FLT_EPSILON;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static int			epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static long			epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static long double		epsilon()	{return LDBL_EPSILON;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static short		epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static signed char		epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static unsigned char	epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static unsigned int		epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static unsigned long	epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static unsigned short	epsilon()	{return 1;}$/;"	f	struct:Imath::limits
epsilon	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static half epsilon () throw () {return HALF_EPSILON;}$/;"	f	class:std::numeric_limits
equal	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^equal (T1 a, T2 b, T3 t)$/;"	f	namespace:Imath
equal	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^equal (T1 a, T2 b, T3 t)$/;"	f	namespace:Imath
equalWithAbsError	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^equalWithAbsError (T x1, T x2, T e)$/;"	f	namespace:Imath
equalWithAbsError	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::equalWithAbsError (const Matrix33<T> &m, T e) const$/;"	f	class:Imath::Matrix33
equalWithAbsError	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::equalWithAbsError (const Matrix44<T> &m, T e) const$/;"	f	class:Imath::Matrix44
equalWithAbsError	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::equalWithAbsError (const Shear6<T> &h, T e) const$/;"	f	class:Imath::Shear6
equalWithAbsError	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::equalWithAbsError (const Vec2<T> &v, T e) const$/;"	f	class:Imath::Vec2
equalWithAbsError	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::equalWithAbsError (const Vec3<T> &v, T e) const$/;"	f	class:Imath::Vec3
equalWithAbsError	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^equalWithAbsError (T x1, T x2, T e)$/;"	f	namespace:Imath
equalWithAbsError	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::equalWithAbsError (const Matrix33<T> &m, T e) const$/;"	f	class:Imath::Matrix33
equalWithAbsError	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::equalWithAbsError (const Matrix44<T> &m, T e) const$/;"	f	class:Imath::Matrix44
equalWithAbsError	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::equalWithAbsError (const Shear6<T> &h, T e) const$/;"	f	class:Imath::Shear6
equalWithAbsError	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::equalWithAbsError (const Vec2<T> &v, T e) const$/;"	f	class:Imath::Vec2
equalWithAbsError	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::equalWithAbsError (const Vec3<T> &v, T e) const$/;"	f	class:Imath::Vec3
equalWithRelError	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^equalWithRelError (T x1, T x2, T e)$/;"	f	namespace:Imath
equalWithRelError	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::equalWithRelError (const Matrix33<T> &m, T e) const$/;"	f	class:Imath::Matrix33
equalWithRelError	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::equalWithRelError (const Matrix44<T> &m, T e) const$/;"	f	class:Imath::Matrix44
equalWithRelError	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::equalWithRelError (const Shear6<T> &h, T e) const$/;"	f	class:Imath::Shear6
equalWithRelError	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::equalWithRelError (const Vec2<T> &v, T e) const$/;"	f	class:Imath::Vec2
equalWithRelError	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::equalWithRelError (const Vec3<T> &v, T e) const$/;"	f	class:Imath::Vec3
equalWithRelError	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^equalWithRelError (T x1, T x2, T e)$/;"	f	namespace:Imath
equalWithRelError	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::equalWithRelError (const Matrix33<T> &m, T e) const$/;"	f	class:Imath::Matrix33
equalWithRelError	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::equalWithRelError (const Matrix44<T> &m, T e) const$/;"	f	class:Imath::Matrix44
equalWithRelError	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::equalWithRelError (const Shear6<T> &h, T e) const$/;"	f	class:Imath::Shear6
equalWithRelError	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::equalWithRelError (const Vec2<T> &v, T e) const$/;"	f	class:Imath::Vec2
equalWithRelError	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::equalWithRelError (const Vec3<T> &v, T e) const$/;"	f	class:Imath::Vec3
event_type	include/GL/glx.h	/^    int event_type;		\/* GLX_DAMAGED or GLX_SAVED *\/$/;"	m	struct:__anon1
event_type	include/GL/glxext.h	/^    int event_type;		  \/* GLX_DAMAGED_SGIX or GLX_SAVED_SGIX *\/$/;"	m	struct:__anon2
event_type	shared/GLee.h	/^		int event_type;		  $/;"	m	struct:__anon11
exp	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	exp   (T x)		{return ::exp (double(x));}$/;"	f	struct:Imath::Math
exp	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	exp   (float x)			{return ::expf (x);}$/;"	f	struct:Imath::Math
exp	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Quat<T> Quat<T>::exp() const$/;"	f	class:Imath::Quat
exp	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	exp   (T x)		{return ::exp (double(x));}$/;"	f	struct:Imath::Math
exp	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	exp   (float x)			{return ::expf (x);}$/;"	f	struct:Imath::Math
exp	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Quat<T> Quat<T>::exp() const$/;"	f	class:Imath::Quat
extendBy	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^inline void Box<T>::extendBy(const Box<T>& box)$/;"	f	class:Imath::Box
extendBy	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^inline void Box<T>::extendBy(const T& point)$/;"	f	class:Imath::Box
extendBy	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^Interval<T>::extendBy(const Interval<T>& interval)$/;"	f	class:Imath::Interval
extendBy	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^Interval<T>::extendBy(const T& point)$/;"	f	class:Imath::Interval
extendBy	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^inline void Box<T>::extendBy(const Box<T>& box)$/;"	f	class:Imath::Box
extendBy	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^inline void Box<T>::extendBy(const T& point)$/;"	f	class:Imath::Box
extendBy	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^Interval<T>::extendBy(const Interval<T>& interval)$/;"	f	class:Imath::Interval
extendBy	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^Interval<T>::extendBy(const T& point)$/;"	f	class:Imath::Interval
extract	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^inline void Euler<T>::extract(const Quat<T> &q)$/;"	f	class:Imath::Euler
extract	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^void Euler<T>::extract(const Matrix33<T> &M)$/;"	f	class:Imath::Euler
extract	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^void Euler<T>::extract(const Matrix44<T> &M)$/;"	f	class:Imath::Euler
extract	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^inline void Euler<T>::extract(const Quat<T> &q)$/;"	f	class:Imath::Euler
extract	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^void Euler<T>::extract(const Matrix33<T> &M)$/;"	f	class:Imath::Euler
extract	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^void Euler<T>::extract(const Matrix44<T> &M)$/;"	f	class:Imath::Euler
extractAndRemoveScalingAndShear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^extractAndRemoveScalingAndShear (Matrix33<T> &mat, $/;"	f	namespace:Imath
extractAndRemoveScalingAndShear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^extractAndRemoveScalingAndShear (Matrix44<T> &mat, $/;"	f	namespace:Imath
extractAndRemoveScalingAndShear	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^extractAndRemoveScalingAndShear (Matrix33<T> &mat, $/;"	f	namespace:Imath
extractAndRemoveScalingAndShear	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^extractAndRemoveScalingAndShear (Matrix44<T> &mat, $/;"	f	namespace:Imath
extractEuler	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^extractEuler (const Matrix33<T> &mat, T &rot)$/;"	f	namespace:Imath
extractEuler	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^extractEuler (const Matrix33<T> &mat, T &rot)$/;"	f	namespace:Imath
extractEulerXYZ	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^extractEulerXYZ (const Matrix44<T> &mat, Vec3<T> &rot)$/;"	f	namespace:Imath
extractEulerXYZ	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^extractEulerXYZ (const Matrix44<T> &mat, Vec3<T> &rot)$/;"	f	namespace:Imath
extractEulerZYX	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^extractEulerZYX (const Matrix44<T> &mat, Vec3<T> &rot)$/;"	f	namespace:Imath
extractEulerZYX	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^extractEulerZYX (const Matrix44<T> &mat, Vec3<T> &rot)$/;"	f	namespace:Imath
extractQuat	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^extractQuat (const Matrix44<T> &mat)$/;"	f	namespace:Imath
extractQuat	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^extractQuat (const Matrix44<T> &mat)$/;"	f	namespace:Imath
extractSHRT	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^extractSHRT (const Matrix33<T> &mat,$/;"	f	namespace:Imath
extractSHRT	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^extractSHRT (const Matrix44<T> &mat,$/;"	f	namespace:Imath
extractSHRT	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^extractSHRT (const Matrix33<T> &mat,$/;"	f	namespace:Imath
extractSHRT	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^extractSHRT (const Matrix44<T> &mat,$/;"	f	namespace:Imath
extractScaling	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^extractScaling (const Matrix33<T> &mat, Vec2<T> &scl, bool exc)$/;"	f	namespace:Imath
extractScaling	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^extractScaling (const Matrix44<T> &mat, Vec3<T> &scl, bool exc)$/;"	f	namespace:Imath
extractScaling	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^extractScaling (const Matrix33<T> &mat, Vec2<T> &scl, bool exc)$/;"	f	namespace:Imath
extractScaling	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^extractScaling (const Matrix44<T> &mat, Vec3<T> &scl, bool exc)$/;"	f	namespace:Imath
extractScalingAndShear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^extractScalingAndShear (const Matrix33<T> &mat, Vec2<T> &scl, T &shr, bool exc)$/;"	f	namespace:Imath
extractScalingAndShear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^extractScalingAndShear (const Matrix44<T> &mat, $/;"	f	namespace:Imath
extractScalingAndShear	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^extractScalingAndShear (const Matrix33<T> &mat, Vec2<T> &scl, T &shr, bool exc)$/;"	f	namespace:Imath
extractScalingAndShear	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^extractScalingAndShear (const Matrix44<T> &mat, $/;"	f	namespace:Imath
f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^	float		f;$/;"	m	union:half::uif
f	shared/openexr-mac/include/OpenEXR/half.h	/^	float		f;$/;"	m	union:half::uif
fabs	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	fabs  (T x)		{return ::fabs (double(x));}$/;"	f	struct:Imath::Math
fabs	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	fabs  (float x)			{return ::fabsf (x);}$/;"	f	struct:Imath::Math
fabs	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	fabs  (T x)		{return ::fabs (double(x));}$/;"	f	struct:Imath::Math
fabs	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	fabs  (float x)			{return ::fabsf (x);}$/;"	f	struct:Imath::Math
far	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^    T			far() const		{ return _far;		}$/;"	f	class:Imath::Frustum
far	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	54;"	d
far	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^    T			far() const		{ return _far;		}$/;"	f	class:Imath::Frustum
far	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	54;"	d
farLL	shared/glfrustum.h	/^        M3DVector4f  farUL,  farLL,  farUR,  farLR;$/;"	m	class:GLFrustum
farLLT	shared/glfrustum.h	/^        M3DVector4f  farULT,  farLLT,  farURT,  farLRT;$/;"	m	class:GLFrustum
farLR	shared/glfrustum.h	/^        M3DVector4f  farUL,  farLL,  farUR,  farLR;$/;"	m	class:GLFrustum
farLRT	shared/glfrustum.h	/^        M3DVector4f  farULT,  farLLT,  farURT,  farLRT;$/;"	m	class:GLFrustum
farPlane	shared/glfrustum.h	/^        M3DVector4f nearPlane, farPlane, leftPlane, rightPlane;$/;"	m	class:GLFrustum
farUL	shared/glfrustum.h	/^        M3DVector4f  farUL,  farLL,  farUR,  farLR;$/;"	m	class:GLFrustum
farULT	shared/glfrustum.h	/^        M3DVector4f  farULT,  farLLT,  farURT,  farLRT;$/;"	m	class:GLFrustum
farUR	shared/glfrustum.h	/^        M3DVector4f  farUL,  farLL,  farUR,  farLR;$/;"	m	class:GLFrustum
farURT	shared/glfrustum.h	/^        M3DVector4f  farULT,  farLLT,  farURT,  farLRT;$/;"	m	class:GLFrustum
fillValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^    double		fillValue;$/;"	m	struct:Imf::Slice
fillValue	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^    double		fillValue;$/;"	m	struct:Imf::Slice
findEntryAndExitPoints	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBoxAlgo.h	/^bool findEntryAndExitPoints(const Line3<T>& line,$/;"	f	namespace:Imath
findEntryAndExitPoints	shared/openexr-mac/include/OpenEXR/ImathBoxAlgo.h	/^bool findEntryAndExitPoints(const Line3<T>& line,$/;"	f	namespace:Imath
findTypedAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::findTypedAttribute (const char name[]) const$/;"	f	class:Imf::Header
findTypedAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::findTypedAttribute (const char name[])$/;"	f	class:Imf::Header
findTypedAttribute	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::findTypedAttribute (const char name[]) const$/;"	f	class:Imf::Header
findTypedAttribute	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::findTypedAttribute (const char name[])$/;"	f	class:Imf::Header
finited	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^finited (double d)$/;"	f	namespace:Imath
finited	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^finited (double d)$/;"	f	namespace:Imath
finitef	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^finitef (float f)$/;"	f	namespace:Imath
finitef	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^finitef (float f)$/;"	f	namespace:Imath
fire	c3.drawPolygonBitmap/draw.cpp	/^GLubyte fire[128] = { 0x00, 0x00, 0x00, 0x00, $/;"	v
fire	chapt03/pstipple/pstipple.cpp	/^GLubyte fire[128] = { 0x00, 0x00, 0x00, 0x00, $/;"	v
firstFrame	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrame.h	/^template<class T> Matrix44<T> firstFrame$/;"	f	namespace:Imath
firstFrame	shared/openexr-mac/include/OpenEXR/ImathFrame.h	/^template<class T> Matrix44<T> firstFrame$/;"	f	namespace:Imath
flags	include/GL/internal/dri_interface.h	/^    unsigned int flags;$/;"	m	struct:__DRIbufferRec
floor	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^floor (T x)$/;"	f	namespace:Imath
floor	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	floor (T x)		{return ::floor (double(x));}$/;"	f	struct:Imath::Math
floor	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	floor (float x)			{return ::floorf (x);}$/;"	f	struct:Imath::Math
floor	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^floor (T x)$/;"	f	namespace:Imath
floor	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	floor (T x)		{return ::floor (double(x));}$/;"	f	struct:Imath::Math
floor	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	floor (float x)			{return ::floorf (x);}$/;"	f	struct:Imath::Math
flush	include/GL/internal/dri_interface.h	/^    void (*flush)(__DRIdrawable *drawable);$/;"	m	struct:__DRI2flushExtensionRec
flushFrontBuffer	include/GL/internal/dri_interface.h	/^    void (*flushFrontBuffer)(__DRIdrawable *driDrawable, void *loaderPrivate);$/;"	m	struct:__DRIdri2LoaderExtensionRec
fmod	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	fmod  (T x, T y)	{return ::fmod (double(x), double(y));}$/;"	f	struct:Imath::Math
fmod	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	fmod  (float x, float y)	{return ::fmodf (x, y);}$/;"	f	struct:Imath::Math
fmod	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	fmod  (T x, T y)	{return ::fmod (double(x), double(y));}$/;"	f	struct:Imath::Math
fmod	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	fmod  (float x, float y)	{return ::fmodf (x, y);}$/;"	f	struct:Imath::Math
fovx	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^T Frustum<T>::fovx() const$/;"	f	class:Imath::Frustum
fovx	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^T Frustum<T>::fovx() const$/;"	f	class:Imath::Frustum
fovy	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^T Frustum<T>::fovy() const$/;"	f	class:Imath::Frustum
fovy	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^T Frustum<T>::fovy() const$/;"	f	class:Imath::Frustum
frameCamera	chapt04/SphereWorld/sphereworld.cpp	/^GLFrame    frameCamera;$/;"	v
frameStatic	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^    bool		frameStatic() const { return _frameStatic; }$/;"	f	class:Imath::Euler
frameStatic	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^    bool		frameStatic() const { return _frameStatic; }$/;"	f	class:Imath::Euler
frameTracking	include/GL/internal/dri_interface.h	/^    int (*frameTracking)(__DRIdrawable *drawable, GLboolean enable);$/;"	m	struct:__DRIframeTrackingExtensionRec
freeMemory	include/GL/internal/dri_interface.h	/^    void (*freeMemory)(__DRIscreen *screen, GLvoid *pointer);$/;"	m	struct:__DRIallocateExtensionRec
freeglut.h	include/GL/freeglut.h	1;"	F
freeglut.h	shared/freeglut.h	1;"	F
freeglut_ext.h	include/GL/freeglut_ext.h	1;"	F
freeglut_ext.h	shared/freeglut_ext.h	1;"	F
freeglut_std.h	include/GL/freeglut_std.h	1;"	F
freeglut_std.h	shared/freeglut_std.h	1;"	F
g	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^    T			r, g, b, a;$/;"	m	class:Imath::Color4
g	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	/^    ImfHalf	g;$/;"	m	struct:ImfRgba
g	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^    unsigned char	g;	\/\/ the pixel's color; intensity is$/;"	m	struct:Imf::PreviewRgba
g	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    half	g;$/;"	m	struct:Imf::Rgba
g	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^    T			r, g, b, a;$/;"	m	class:Imath::Color4
g	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	/^    ImfHalf	g;$/;"	m	struct:ImfRgba
g	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^    unsigned char	g;	\/\/ the pixel's color; intensity is$/;"	m	struct:Imf::PreviewRgba
g	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    half	g;$/;"	m	struct:Imf::Rgba
gaussRand	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^gaussRand (Rand &rand)$/;"	f	namespace:Imath
gaussRand	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^gaussRand (Rand &rand)$/;"	f	namespace:Imath
gaussSphereRand	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^gaussSphereRand (Rand &rand)$/;"	f	namespace:Imath
gaussSphereRand	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^gaussSphereRand (Rand &rand)$/;"	f	namespace:Imath
getBuffers	include/GL/internal/dri_interface.h	/^    __DRIbuffer *(*getBuffers)(__DRIdrawable *driDrawable,$/;"	m	struct:__DRIdri2LoaderExtensionRec
getBuffersWithFormat	include/GL/internal/dri_interface.h	/^    __DRIbuffer *(*getBuffersWithFormat)(__DRIdrawable *driDrawable,$/;"	m	struct:__DRIdri2LoaderExtensionRec
getConfigAttrib	include/GL/internal/dri_interface.h	/^    int (*getConfigAttrib)(const __DRIconfig *config,$/;"	m	struct:__DRIcoreExtensionRec
getDrawableInfo	include/GL/internal/dri_interface.h	/^    GLboolean (* getDrawableInfo) ( __DRIdrawable *drawable,$/;"	m	struct:__DRIgetDrawableInfoExtensionRec
getDrawableInfo	include/GL/internal/dri_interface.h	/^    void (*getDrawableInfo)(__DRIdrawable *drawable,$/;"	m	struct:__DRIswrastLoaderExtensionRec
getDrawableMSC	include/GL/internal/dri_interface.h	/^    int (*getDrawableMSC)(__DRIscreen *screen, __DRIdrawable *drawable,$/;"	m	struct:__DRImediaStreamCounterExtensionRec
getExtensions	include/GL/internal/dri_interface.h	/^    const __DRIextension **(*getExtensions)(__DRIscreen *screen);$/;"	m	struct:__DRIcoreExtensionRec
getFlags	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h	/^inline int   getFlags (int version)	{return version & VERSION_FLAGS_FIELD;}$/;"	f	namespace:Imf
getFlags	shared/openexr-mac/include/OpenEXR/ImfVersion.h	/^inline int   getFlags (int version)	{return version & VERSION_FLAGS_FIELD;}$/;"	f	namespace:Imf
getImage	include/GL/internal/dri_interface.h	/^    void (*getImage)(__DRIdrawable *drawable,$/;"	m	struct:__DRIswrastLoaderExtensionRec
getMSCRate	include/GL/internal/dri_interface.h	/^    GLboolean (*getMSCRate)(__DRIdrawable *draw,$/;"	m	struct:__DRIsystemTimeExtensionRec
getSwapInterval	include/GL/internal/dri_interface.h	/^    unsigned int (*getSwapInterval)(__DRIdrawable *drawable);$/;"	m	struct:__DRIswapControlExtensionRec
getUST	include/GL/internal/dri_interface.h	/^    int (*getUST)(int64_t * ust);$/;"	m	struct:__DRIsystemTimeExtensionRec
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::getValue (Color4<S> &v) const$/;"	f	class:Imath::Color4
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::getValue (S &x, S &y, S &z, S &w) const$/;"	f	class:Imath::Color4
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::getValue() const$/;"	f	class:Imath::Color4
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::getValue()$/;"	f	class:Imath::Color4
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::getValue () const$/;"	f	class:Imath::Matrix33
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::getValue ()$/;"	f	class:Imath::Matrix33
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::getValue (Matrix33<S> &v) const$/;"	f	class:Imath::Matrix33
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::getValue () const$/;"	f	class:Imath::Matrix44
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::getValue ()$/;"	f	class:Imath::Matrix44
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::getValue (Matrix44<S> &v) const$/;"	f	class:Imath::Matrix44
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::getValue (S &XY, S &XZ, S &YZ, S &YX, S &ZX, S &ZY) const$/;"	f	class:Imath::Shear6
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::getValue (Shear6<S> &h) const$/;"	f	class:Imath::Shear6
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::getValue() const$/;"	f	class:Imath::Shear6
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::getValue()$/;"	f	class:Imath::Shear6
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::getValue (S &a, S &b) const$/;"	f	class:Imath::Vec2
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::getValue (Vec2<S> &v) const$/;"	f	class:Imath::Vec2
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::getValue() const$/;"	f	class:Imath::Vec2
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::getValue()$/;"	f	class:Imath::Vec2
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::getValue (S &a, S &b, S &c) const$/;"	f	class:Imath::Vec3
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::getValue (Vec3<S> &v) const$/;"	f	class:Imath::Vec3
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::getValue() const$/;"	f	class:Imath::Vec3
getValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::getValue()$/;"	f	class:Imath::Vec3
getValue	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::getValue (Color4<S> &v) const$/;"	f	class:Imath::Color4
getValue	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::getValue (S &x, S &y, S &z, S &w) const$/;"	f	class:Imath::Color4
getValue	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::getValue() const$/;"	f	class:Imath::Color4
getValue	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::getValue()$/;"	f	class:Imath::Color4
getValue	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::getValue () const$/;"	f	class:Imath::Matrix33
getValue	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::getValue ()$/;"	f	class:Imath::Matrix33
getValue	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::getValue (Matrix33<S> &v) const$/;"	f	class:Imath::Matrix33
getValue	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::getValue () const$/;"	f	class:Imath::Matrix44
getValue	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::getValue ()$/;"	f	class:Imath::Matrix44
getValue	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::getValue (Matrix44<S> &v) const$/;"	f	class:Imath::Matrix44
getValue	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::getValue (S &XY, S &XZ, S &YZ, S &YX, S &ZX, S &ZY) const$/;"	f	class:Imath::Shear6
getValue	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::getValue (Shear6<S> &h) const$/;"	f	class:Imath::Shear6
getValue	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::getValue() const$/;"	f	class:Imath::Shear6
getValue	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::getValue()$/;"	f	class:Imath::Shear6
getValue	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::getValue (S &a, S &b) const$/;"	f	class:Imath::Vec2
getValue	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::getValue (Vec2<S> &v) const$/;"	f	class:Imath::Vec2
getValue	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::getValue() const$/;"	f	class:Imath::Vec2
getValue	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::getValue()$/;"	f	class:Imath::Vec2
getValue	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::getValue (S &a, S &b, S &c) const$/;"	f	class:Imath::Vec3
getValue	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::getValue (Vec3<S> &v) const$/;"	f	class:Imath::Vec3
getValue	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::getValue() const$/;"	f	class:Imath::Vec3
getValue	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::getValue()$/;"	f	class:Imath::Vec3
getVersion	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h	/^inline int   getVersion (int version)	{return version & VERSION_NUMBER_FIELD;}$/;"	f	namespace:Imf
getVersion	shared/openexr-mac/include/OpenEXR/ImfVersion.h	/^inline int   getVersion (int version)	{return version & VERSION_NUMBER_FIELD;}$/;"	f	namespace:Imf
gjInverse	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::gjInverse (bool singExc) const throw (Iex::MathExc)$/;"	f	class:Imath::Matrix33
gjInverse	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::gjInverse (bool singExc) const throw (Iex::MathExc)$/;"	f	class:Imath::Matrix44
gjInverse	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::gjInverse (bool singExc) const throw (Iex::MathExc)$/;"	f	class:Imath::Matrix33
gjInverse	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::gjInverse (bool singExc) const throw (Iex::MathExc)$/;"	f	class:Imath::Matrix44
gjInvert	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::gjInvert (bool singExc) throw (Iex::MathExc)$/;"	f	class:Imath::Matrix33
gjInvert	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::gjInvert (bool singExc) throw (Iex::MathExc)$/;"	f	class:Imath::Matrix44
gjInvert	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::gjInvert (bool singExc) throw (Iex::MathExc)$/;"	f	class:Imath::Matrix33
gjInvert	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::gjInvert (bool singExc) throw (Iex::MathExc)$/;"	f	class:Imath::Matrix44
gl.h	include/GL/gl.h	1;"	F
glAccum	include/GL/gl_mangle.h	32;"	d
glActiveProgramEXT	include/GL/gl_mangle.h	33;"	d
glActiveStencilFaceEXT	include/GL/gl_mangle.h	34;"	d
glActiveStencilFaceEXT	shared/GLee.h	7622;"	d
glActiveTexture	include/GL/gl_mangle.h	36;"	d
glActiveTexture	shared/GLee.h	1263;"	d
glActiveTextureARB	include/GL/gl_mangle.h	35;"	d
glActiveTextureARB	shared/GLee.h	2137;"	d
glActiveVaryingNV	include/GL/gl_mangle.h	37;"	d
glActiveVaryingNV	shared/GLee.h	8836;"	d
glAlphaFragmentOp1ATI	include/GL/gl_mangle.h	38;"	d
glAlphaFragmentOp1ATI	shared/GLee.h	6983;"	d
glAlphaFragmentOp2ATI	include/GL/gl_mangle.h	39;"	d
glAlphaFragmentOp2ATI	shared/GLee.h	6984;"	d
glAlphaFragmentOp3ATI	include/GL/gl_mangle.h	40;"	d
glAlphaFragmentOp3ATI	shared/GLee.h	6985;"	d
glAlphaFunc	include/GL/gl_mangle.h	41;"	d
glApplyTextureEXT	include/GL/gl_mangle.h	42;"	d
glApplyTextureEXT	shared/GLee.h	4835;"	d
glAreProgramsResidentNV	include/GL/gl_mangle.h	43;"	d
glAreProgramsResidentNV	shared/GLee.h	6677;"	d
glAreTexturesResident	include/GL/gl_mangle.h	45;"	d
glAreTexturesResidentEXT	include/GL/gl_mangle.h	44;"	d
glAreTexturesResidentEXT	shared/GLee.h	3771;"	d
glArrayElement	include/GL/gl_mangle.h	47;"	d
glArrayElementEXT	include/GL/gl_mangle.h	46;"	d
glArrayElementEXT	shared/GLee.h	3939;"	d
glArrayObjectATI	include/GL/gl_mangle.h	48;"	d
glArrayObjectATI	shared/GLee.h	7056;"	d
glAsyncMarkerSGIX	include/GL/gl_mangle.h	49;"	d
glAsyncMarkerSGIX	shared/GLee.h	4894;"	d
glAttachObjectARB	include/GL/gl_mangle.h	50;"	d
glAttachObjectARB	shared/GLee.h	3101;"	d
glAttachShader	include/GL/gl_mangle.h	51;"	d
glAttachShader	shared/GLee.h	1889;"	d
glBegin	include/GL/gl_mangle.h	55;"	d
glBeginConditionalRender	include/GL/gl_mangle.h	52;"	d
glBeginConditionalRenderNV	include/GL/gl_mangle.h	53;"	d
glBeginFragmentShaderATI	include/GL/gl_mangle.h	54;"	d
glBeginFragmentShaderATI	shared/GLee.h	6976;"	d
glBeginOcclusionQueryNV	include/GL/gl_mangle.h	56;"	d
glBeginOcclusionQueryNV	shared/GLee.h	7548;"	d
glBeginPerfMonitorAMD	include/GL/gl_mangle.h	57;"	d
glBeginQuery	include/GL/gl_mangle.h	59;"	d
glBeginQuery	shared/GLee.h	1590;"	d
glBeginQueryARB	include/GL/gl_mangle.h	58;"	d
glBeginQueryARB	shared/GLee.h	2969;"	d
glBeginSceneEXT	shared/GLee.h	9179;"	d
glBeginTransformFeedback	include/GL/gl_mangle.h	61;"	d
glBeginTransformFeedbackEXT	include/GL/gl_mangle.h	60;"	d
glBeginTransformFeedbackNV	include/GL/gl_mangle.h	62;"	d
glBeginTransformFeedbackNV	shared/GLee.h	8829;"	d
glBeginVertexShaderEXT	include/GL/gl_mangle.h	63;"	d
glBeginVertexShaderEXT	shared/GLee.h	7264;"	d
glBeginVideoCaptureNV	include/GL/gl_mangle.h	64;"	d
glBindAttribLocation	include/GL/gl_mangle.h	66;"	d
glBindAttribLocation	shared/GLee.h	1890;"	d
glBindAttribLocationARB	include/GL/gl_mangle.h	65;"	d
glBindAttribLocationARB	shared/GLee.h	3154;"	d
glBindBuffer	include/GL/gl_mangle.h	71;"	d
glBindBuffer	shared/GLee.h	1595;"	d
glBindBufferARB	include/GL/gl_mangle.h	67;"	d
glBindBufferARB	shared/GLee.h	2926;"	d
glBindBufferBase	include/GL/gl_mangle.h	69;"	d
glBindBufferBaseEXT	include/GL/gl_mangle.h	68;"	d
glBindBufferBaseNV	include/GL/gl_mangle.h	70;"	d
glBindBufferBaseNV	shared/GLee.h	8834;"	d
glBindBufferOffsetEXT	include/GL/gl_mangle.h	72;"	d
glBindBufferOffsetNV	include/GL/gl_mangle.h	73;"	d
glBindBufferOffsetNV	shared/GLee.h	8833;"	d
glBindBufferRange	include/GL/gl_mangle.h	75;"	d
glBindBufferRangeEXT	include/GL/gl_mangle.h	74;"	d
glBindBufferRangeNV	include/GL/gl_mangle.h	76;"	d
glBindBufferRangeNV	shared/GLee.h	8832;"	d
glBindFragDataLocation	include/GL/gl_mangle.h	78;"	d
glBindFragDataLocationEXT	include/GL/gl_mangle.h	77;"	d
glBindFragDataLocationEXT	shared/GLee.h	8524;"	d
glBindFragmentShaderATI	include/GL/gl_mangle.h	79;"	d
glBindFragmentShaderATI	shared/GLee.h	6974;"	d
glBindFramebuffer	include/GL/gl_mangle.h	81;"	d
glBindFramebufferEXT	include/GL/gl_mangle.h	80;"	d
glBindFramebufferEXT	shared/GLee.h	8359;"	d
glBindLightParameterEXT	include/GL/gl_mangle.h	82;"	d
glBindLightParameterEXT	shared/GLee.h	7290;"	d
glBindMaterialParameterEXT	include/GL/gl_mangle.h	83;"	d
glBindMaterialParameterEXT	shared/GLee.h	7291;"	d
glBindMultiTextureEXT	include/GL/gl_mangle.h	84;"	d
glBindParameterEXT	include/GL/gl_mangle.h	85;"	d
glBindParameterEXT	shared/GLee.h	7294;"	d
glBindProgramARB	include/GL/gl_mangle.h	86;"	d
glBindProgramARB	shared/GLee.h	2820;"	d
glBindProgramNV	include/GL/gl_mangle.h	87;"	d
glBindProgramNV	shared/GLee.h	6678;"	d
glBindRenderbuffer	include/GL/gl_mangle.h	89;"	d
glBindRenderbufferEXT	include/GL/gl_mangle.h	88;"	d
glBindRenderbufferEXT	shared/GLee.h	8353;"	d
glBindTexGenParameterEXT	include/GL/gl_mangle.h	90;"	d
glBindTexGenParameterEXT	shared/GLee.h	7292;"	d
glBindTexture	include/GL/gl_mangle.h	92;"	d
glBindTextureEXT	include/GL/gl_mangle.h	91;"	d
glBindTextureEXT	shared/GLee.h	3772;"	d
glBindTextureUnitParameterEXT	include/GL/gl_mangle.h	93;"	d
glBindTextureUnitParameterEXT	shared/GLee.h	7293;"	d
glBindTransformFeedbackNV	include/GL/gl_mangle.h	94;"	d
glBindVertexArray	include/GL/gl_mangle.h	96;"	d
glBindVertexArrayAPPLE	include/GL/gl_mangle.h	95;"	d
glBindVertexArrayAPPLE	shared/GLee.h	7718;"	d
glBindVertexShaderEXT	include/GL/gl_mangle.h	97;"	d
glBindVertexShaderEXT	shared/GLee.h	7266;"	d
glBindVideoCaptureStreamBufferNV	include/GL/gl_mangle.h	98;"	d
glBindVideoCaptureStreamTextureNV	include/GL/gl_mangle.h	99;"	d
glBinormal3bEXT	include/GL/gl_mangle.h	100;"	d
glBinormal3bEXT	shared/GLee.h	5234;"	d
glBinormal3bvEXT	include/GL/gl_mangle.h	101;"	d
glBinormal3bvEXT	shared/GLee.h	5235;"	d
glBinormal3dEXT	include/GL/gl_mangle.h	102;"	d
glBinormal3dEXT	shared/GLee.h	5236;"	d
glBinormal3dvEXT	include/GL/gl_mangle.h	103;"	d
glBinormal3dvEXT	shared/GLee.h	5237;"	d
glBinormal3fEXT	include/GL/gl_mangle.h	104;"	d
glBinormal3fEXT	shared/GLee.h	5238;"	d
glBinormal3fvEXT	include/GL/gl_mangle.h	105;"	d
glBinormal3fvEXT	shared/GLee.h	5239;"	d
glBinormal3iEXT	include/GL/gl_mangle.h	106;"	d
glBinormal3iEXT	shared/GLee.h	5240;"	d
glBinormal3ivEXT	include/GL/gl_mangle.h	107;"	d
glBinormal3ivEXT	shared/GLee.h	5241;"	d
glBinormal3sEXT	include/GL/gl_mangle.h	108;"	d
glBinormal3sEXT	shared/GLee.h	5242;"	d
glBinormal3svEXT	include/GL/gl_mangle.h	109;"	d
glBinormal3svEXT	shared/GLee.h	5243;"	d
glBinormalPointerEXT	include/GL/gl_mangle.h	110;"	d
glBinormalPointerEXT	shared/GLee.h	5245;"	d
glBitmap	include/GL/gl_mangle.h	111;"	d
glBlendColor	include/GL/gl_mangle.h	113;"	d
glBlendColor	shared/GLee.h	946;"	d
glBlendColorEXT	include/GL/gl_mangle.h	112;"	d
glBlendColorEXT	shared/GLee.h	3332;"	d
glBlendEquation	include/GL/gl_mangle.h	117;"	d
glBlendEquation	shared/GLee.h	947;"	d
glBlendEquationEXT	include/GL/gl_mangle.h	114;"	d
glBlendEquationEXT	shared/GLee.h	4030;"	d
glBlendEquationIndexedAMD	include/GL/gl_mangle.h	116;"	d
glBlendEquationSeparate	include/GL/gl_mangle.h	122;"	d
glBlendEquationSeparate	shared/GLee.h	1884;"	d
glBlendEquationSeparateATI	include/GL/gl_mangle.h	118;"	d
glBlendEquationSeparateEXT	include/GL/gl_mangle.h	119;"	d
glBlendEquationSeparateEXT	shared/GLee.h	8187;"	d
glBlendEquationSeparateIndexedAMD	include/GL/gl_mangle.h	121;"	d
glBlendEquationSeparatei	include/GL/gl_mangle.h	120;"	d
glBlendEquationi	include/GL/gl_mangle.h	115;"	d
glBlendFunc	include/GL/gl_mangle.h	125;"	d
glBlendFuncIndexedAMD	include/GL/gl_mangle.h	124;"	d
glBlendFuncSeparate	include/GL/gl_mangle.h	130;"	d
glBlendFuncSeparate	shared/GLee.h	1446;"	d
glBlendFuncSeparateEXT	include/GL/gl_mangle.h	126;"	d
glBlendFuncSeparateEXT	shared/GLee.h	5538;"	d
glBlendFuncSeparateINGR	include/GL/gl_mangle.h	129;"	d
glBlendFuncSeparateINGR	shared/GLee.h	9002;"	d
glBlendFuncSeparateIndexedAMD	include/GL/gl_mangle.h	128;"	d
glBlendFuncSeparatei	include/GL/gl_mangle.h	127;"	d
glBlendFunci	include/GL/gl_mangle.h	123;"	d
glBlitFramebuffer	include/GL/gl_mangle.h	132;"	d
glBlitFramebufferEXT	include/GL/gl_mangle.h	131;"	d
glBlitFramebufferEXT	shared/GLee.h	8963;"	d
glBufferAddressRangeNV	include/GL/gl_mangle.h	133;"	d
glBufferData	include/GL/gl_mangle.h	135;"	d
glBufferData	shared/GLee.h	1599;"	d
glBufferDataARB	include/GL/gl_mangle.h	134;"	d
glBufferDataARB	shared/GLee.h	2930;"	d
glBufferParameteriAPPLE	include/GL/gl_mangle.h	136;"	d
glBufferSubData	include/GL/gl_mangle.h	138;"	d
glBufferSubData	shared/GLee.h	1600;"	d
glBufferSubDataARB	include/GL/gl_mangle.h	137;"	d
glBufferSubDataARB	shared/GLee.h	2931;"	d
glCallList	include/GL/gl_mangle.h	139;"	d
glCallLists	include/GL/gl_mangle.h	140;"	d
glCheckFramebufferStatus	include/GL/gl_mangle.h	142;"	d
glCheckFramebufferStatusEXT	include/GL/gl_mangle.h	141;"	d
glCheckFramebufferStatusEXT	shared/GLee.h	8362;"	d
glCheckNamedFramebufferStatusEXT	include/GL/gl_mangle.h	143;"	d
glClampColor	include/GL/gl_mangle.h	145;"	d
glClampColorARB	include/GL/gl_mangle.h	144;"	d
glClampColorARB	shared/GLee.h	3258;"	d
glClear	include/GL/gl_mangle.h	158;"	d
glClearAccum	include/GL/gl_mangle.h	146;"	d
glClearBufferfi	include/GL/gl_mangle.h	147;"	d
glClearBufferfv	include/GL/gl_mangle.h	148;"	d
glClearBufferiv	include/GL/gl_mangle.h	149;"	d
glClearBufferuiv	include/GL/gl_mangle.h	150;"	d
glClearColor	include/GL/gl_mangle.h	153;"	d
glClearColorIiEXT	include/GL/gl_mangle.h	151;"	d
glClearColorIiEXT	shared/GLee.h	8739;"	d
glClearColorIuiEXT	include/GL/gl_mangle.h	152;"	d
glClearColorIuiEXT	shared/GLee.h	8740;"	d
glClearDebugLogMESA	include/GL/gl_mangle.h	154;"	d
glClearDepth	include/GL/gl_mangle.h	156;"	d
glClearDepthdNV	include/GL/gl_mangle.h	155;"	d
glClearDepthdNV	shared/GLee.h	8760;"	d
glClearDepthfOES	shared/GLee.h	9320;"	d
glClearIndex	include/GL/gl_mangle.h	157;"	d
glClearStencil	include/GL/gl_mangle.h	159;"	d
glClientActiveTexture	include/GL/gl_mangle.h	161;"	d
glClientActiveTexture	shared/GLee.h	1264;"	d
glClientActiveTextureARB	include/GL/gl_mangle.h	160;"	d
glClientActiveTextureARB	shared/GLee.h	2138;"	d
glClientActiveVertexStreamATI	include/GL/gl_mangle.h	162;"	d
glClientActiveVertexStreamATI	shared/GLee.h	7456;"	d
glClientAttribDefaultEXT	include/GL/gl_mangle.h	163;"	d
glClientWaitSync	include/GL/gl_mangle.h	164;"	d
glClipPlane	include/GL/gl_mangle.h	165;"	d
glClipPlanefOES	shared/GLee.h	9318;"	d
glColor	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^inline void glColor     ( const Imath::V3f &c ) { glColor3f(c.x,c.y,c.z);    }$/;"	f
glColor	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^inline void glColor     ( const Imath::V3f &c ) { glColor3f(c.x,c.y,c.z);    }$/;"	f
glColor3b	include/GL/gl_mangle.h	166;"	d
glColor3bv	include/GL/gl_mangle.h	167;"	d
glColor3d	include/GL/gl_mangle.h	168;"	d
glColor3dv	include/GL/gl_mangle.h	169;"	d
glColor3f	include/GL/gl_mangle.h	170;"	d
glColor3fVertex3fSUN	include/GL/gl_mangle.h	171;"	d
glColor3fVertex3fSUN	shared/GLee.h	5488;"	d
glColor3fVertex3fvSUN	include/GL/gl_mangle.h	172;"	d
glColor3fVertex3fvSUN	shared/GLee.h	5489;"	d
glColor3fv	include/GL/gl_mangle.h	173;"	d
glColor3hNV	include/GL/gl_mangle.h	174;"	d
glColor3hNV	shared/GLee.h	8001;"	d
glColor3hvNV	include/GL/gl_mangle.h	175;"	d
glColor3hvNV	shared/GLee.h	8002;"	d
glColor3i	include/GL/gl_mangle.h	176;"	d
glColor3iv	include/GL/gl_mangle.h	177;"	d
glColor3s	include/GL/gl_mangle.h	178;"	d
glColor3sv	include/GL/gl_mangle.h	179;"	d
glColor3ub	include/GL/gl_mangle.h	180;"	d
glColor3ubv	include/GL/gl_mangle.h	181;"	d
glColor3ui	include/GL/gl_mangle.h	182;"	d
glColor3uiv	include/GL/gl_mangle.h	183;"	d
glColor3us	include/GL/gl_mangle.h	184;"	d
glColor3usv	include/GL/gl_mangle.h	185;"	d
glColor4b	include/GL/gl_mangle.h	186;"	d
glColor4bv	include/GL/gl_mangle.h	187;"	d
glColor4d	include/GL/gl_mangle.h	188;"	d
glColor4dv	include/GL/gl_mangle.h	189;"	d
glColor4f	include/GL/gl_mangle.h	190;"	d
glColor4fNormal3fVertex3fSUN	include/GL/gl_mangle.h	191;"	d
glColor4fNormal3fVertex3fSUN	shared/GLee.h	5492;"	d
glColor4fNormal3fVertex3fvSUN	include/GL/gl_mangle.h	192;"	d
glColor4fNormal3fVertex3fvSUN	shared/GLee.h	5493;"	d
glColor4fv	include/GL/gl_mangle.h	193;"	d
glColor4hNV	include/GL/gl_mangle.h	194;"	d
glColor4hNV	shared/GLee.h	8003;"	d
glColor4hvNV	include/GL/gl_mangle.h	195;"	d
glColor4hvNV	shared/GLee.h	8004;"	d
glColor4i	include/GL/gl_mangle.h	196;"	d
glColor4iv	include/GL/gl_mangle.h	197;"	d
glColor4s	include/GL/gl_mangle.h	198;"	d
glColor4sv	include/GL/gl_mangle.h	199;"	d
glColor4ub	include/GL/gl_mangle.h	200;"	d
glColor4ubVertex2fSUN	include/GL/gl_mangle.h	201;"	d
glColor4ubVertex2fSUN	shared/GLee.h	5484;"	d
glColor4ubVertex2fvSUN	include/GL/gl_mangle.h	202;"	d
glColor4ubVertex2fvSUN	shared/GLee.h	5485;"	d
glColor4ubVertex3fSUN	include/GL/gl_mangle.h	203;"	d
glColor4ubVertex3fSUN	shared/GLee.h	5486;"	d
glColor4ubVertex3fvSUN	include/GL/gl_mangle.h	204;"	d
glColor4ubVertex3fvSUN	shared/GLee.h	5487;"	d
glColor4ubv	include/GL/gl_mangle.h	205;"	d
glColor4ui	include/GL/gl_mangle.h	206;"	d
glColor4uiv	include/GL/gl_mangle.h	207;"	d
glColor4us	include/GL/gl_mangle.h	208;"	d
glColor4usv	include/GL/gl_mangle.h	209;"	d
glColorFormatNV	include/GL/gl_mangle.h	210;"	d
glColorFragmentOp1ATI	include/GL/gl_mangle.h	211;"	d
glColorFragmentOp1ATI	shared/GLee.h	6980;"	d
glColorFragmentOp2ATI	include/GL/gl_mangle.h	212;"	d
glColorFragmentOp2ATI	shared/GLee.h	6981;"	d
glColorFragmentOp3ATI	include/GL/gl_mangle.h	213;"	d
glColorFragmentOp3ATI	shared/GLee.h	6982;"	d
glColorMask	include/GL/gl_mangle.h	216;"	d
glColorMaskIndexedEXT	include/GL/gl_mangle.h	215;"	d
glColorMaskIndexedEXT	shared/GLee.h	9042;"	d
glColorMaski	include/GL/gl_mangle.h	214;"	d
glColorMaterial	include/GL/gl_mangle.h	217;"	d
glColorPointer	include/GL/gl_mangle.h	220;"	d
glColorPointerEXT	include/GL/gl_mangle.h	218;"	d
glColorPointerEXT	shared/GLee.h	3940;"	d
glColorPointerListIBM	include/GL/gl_mangle.h	219;"	d
glColorPointerListIBM	shared/GLee.h	6020;"	d
glColorPointervINTEL	include/GL/gl_mangle.h	221;"	d
glColorPointervINTEL	shared/GLee.h	4955;"	d
glColorSubTable	include/GL/gl_mangle.h	223;"	d
glColorSubTable	shared/GLee.h	956;"	d
glColorSubTableEXT	include/GL/gl_mangle.h	222;"	d
glColorSubTableEXT	shared/GLee.h	4419;"	d
glColorTable	include/GL/gl_mangle.h	225;"	d
glColorTable	shared/GLee.h	949;"	d
glColorTableEXT	include/GL/gl_mangle.h	224;"	d
glColorTableEXT	shared/GLee.h	4505;"	d
glColorTableParameterfv	include/GL/gl_mangle.h	226;"	d
glColorTableParameterfv	shared/GLee.h	950;"	d
glColorTableParameterfvSGI	include/GL/gl_mangle.h	227;"	d
glColorTableParameterfvSGI	shared/GLee.h	3651;"	d
glColorTableParameteriv	include/GL/gl_mangle.h	228;"	d
glColorTableParameteriv	shared/GLee.h	951;"	d
glColorTableParameterivSGI	include/GL/gl_mangle.h	229;"	d
glColorTableParameterivSGI	shared/GLee.h	3652;"	d
glColorTableSGI	include/GL/gl_mangle.h	230;"	d
glColorTableSGI	shared/GLee.h	3650;"	d
glCombinerInputNV	include/GL/gl_mangle.h	231;"	d
glCombinerInputNV	shared/GLee.h	5802;"	d
glCombinerOutputNV	include/GL/gl_mangle.h	232;"	d
glCombinerOutputNV	shared/GLee.h	5803;"	d
glCombinerParameterfNV	include/GL/gl_mangle.h	233;"	d
glCombinerParameterfNV	shared/GLee.h	5799;"	d
glCombinerParameterfvNV	include/GL/gl_mangle.h	234;"	d
glCombinerParameterfvNV	shared/GLee.h	5798;"	d
glCombinerParameteriNV	include/GL/gl_mangle.h	235;"	d
glCombinerParameteriNV	shared/GLee.h	5801;"	d
glCombinerParameterivNV	include/GL/gl_mangle.h	236;"	d
glCombinerParameterivNV	shared/GLee.h	5800;"	d
glCombinerStageParameterfvNV	include/GL/gl_mangle.h	237;"	d
glCombinerStageParameterfvNV	shared/GLee.h	6337;"	d
glCompileShader	include/GL/gl_mangle.h	239;"	d
glCompileShader	shared/GLee.h	1891;"	d
glCompileShaderARB	include/GL/gl_mangle.h	238;"	d
glCompileShaderARB	shared/GLee.h	3099;"	d
glCompressedMultiTexImage1DEXT	include/GL/gl_mangle.h	240;"	d
glCompressedMultiTexImage2DEXT	include/GL/gl_mangle.h	241;"	d
glCompressedMultiTexImage3DEXT	include/GL/gl_mangle.h	242;"	d
glCompressedMultiTexSubImage1DEXT	include/GL/gl_mangle.h	243;"	d
glCompressedMultiTexSubImage2DEXT	include/GL/gl_mangle.h	244;"	d
glCompressedMultiTexSubImage3DEXT	include/GL/gl_mangle.h	245;"	d
glCompressedTexImage1D	include/GL/gl_mangle.h	247;"	d
glCompressedTexImage1D	shared/GLee.h	1304;"	d
glCompressedTexImage1DARB	include/GL/gl_mangle.h	246;"	d
glCompressedTexImage1DARB	shared/GLee.h	2278;"	d
glCompressedTexImage2D	include/GL/gl_mangle.h	249;"	d
glCompressedTexImage2D	shared/GLee.h	1303;"	d
glCompressedTexImage2DARB	include/GL/gl_mangle.h	248;"	d
glCompressedTexImage2DARB	shared/GLee.h	2277;"	d
glCompressedTexImage3D	include/GL/gl_mangle.h	251;"	d
glCompressedTexImage3D	shared/GLee.h	1302;"	d
glCompressedTexImage3DARB	include/GL/gl_mangle.h	250;"	d
glCompressedTexImage3DARB	shared/GLee.h	2276;"	d
glCompressedTexSubImage1D	include/GL/gl_mangle.h	253;"	d
glCompressedTexSubImage1D	shared/GLee.h	1307;"	d
glCompressedTexSubImage1DARB	include/GL/gl_mangle.h	252;"	d
glCompressedTexSubImage1DARB	shared/GLee.h	2281;"	d
glCompressedTexSubImage2D	include/GL/gl_mangle.h	255;"	d
glCompressedTexSubImage2D	shared/GLee.h	1306;"	d
glCompressedTexSubImage2DARB	include/GL/gl_mangle.h	254;"	d
glCompressedTexSubImage2DARB	shared/GLee.h	2280;"	d
glCompressedTexSubImage3D	include/GL/gl_mangle.h	257;"	d
glCompressedTexSubImage3D	shared/GLee.h	1305;"	d
glCompressedTexSubImage3DARB	include/GL/gl_mangle.h	256;"	d
glCompressedTexSubImage3DARB	shared/GLee.h	2279;"	d
glCompressedTextureImage1DEXT	include/GL/gl_mangle.h	258;"	d
glCompressedTextureImage2DEXT	include/GL/gl_mangle.h	259;"	d
glCompressedTextureImage3DEXT	include/GL/gl_mangle.h	260;"	d
glCompressedTextureSubImage1DEXT	include/GL/gl_mangle.h	261;"	d
glCompressedTextureSubImage2DEXT	include/GL/gl_mangle.h	262;"	d
glCompressedTextureSubImage3DEXT	include/GL/gl_mangle.h	263;"	d
glConvolutionFilter1D	include/GL/gl_mangle.h	265;"	d
glConvolutionFilter1D	shared/GLee.h	958;"	d
glConvolutionFilter1DEXT	include/GL/gl_mangle.h	264;"	d
glConvolutionFilter1DEXT	shared/GLee.h	3580;"	d
glConvolutionFilter2D	include/GL/gl_mangle.h	267;"	d
glConvolutionFilter2D	shared/GLee.h	959;"	d
glConvolutionFilter2DEXT	include/GL/gl_mangle.h	266;"	d
glConvolutionFilter2DEXT	shared/GLee.h	3581;"	d
glConvolutionParameterf	include/GL/gl_mangle.h	269;"	d
glConvolutionParameterf	shared/GLee.h	960;"	d
glConvolutionParameterfEXT	include/GL/gl_mangle.h	268;"	d
glConvolutionParameterfEXT	shared/GLee.h	3582;"	d
glConvolutionParameterfv	include/GL/gl_mangle.h	271;"	d
glConvolutionParameterfv	shared/GLee.h	961;"	d
glConvolutionParameterfvEXT	include/GL/gl_mangle.h	270;"	d
glConvolutionParameterfvEXT	shared/GLee.h	3583;"	d
glConvolutionParameteri	include/GL/gl_mangle.h	273;"	d
glConvolutionParameteri	shared/GLee.h	962;"	d
glConvolutionParameteriEXT	include/GL/gl_mangle.h	272;"	d
glConvolutionParameteriEXT	shared/GLee.h	3584;"	d
glConvolutionParameteriv	include/GL/gl_mangle.h	275;"	d
glConvolutionParameteriv	shared/GLee.h	963;"	d
glConvolutionParameterivEXT	include/GL/gl_mangle.h	274;"	d
glConvolutionParameterivEXT	shared/GLee.h	3585;"	d
glCopyBufferSubData	include/GL/gl_mangle.h	276;"	d
glCopyColorSubTable	include/GL/gl_mangle.h	278;"	d
glCopyColorSubTable	shared/GLee.h	957;"	d
glCopyColorSubTableEXT	include/GL/gl_mangle.h	277;"	d
glCopyColorSubTableEXT	shared/GLee.h	4420;"	d
glCopyColorTable	include/GL/gl_mangle.h	279;"	d
glCopyColorTable	shared/GLee.h	952;"	d
glCopyColorTableSGI	include/GL/gl_mangle.h	280;"	d
glCopyColorTableSGI	shared/GLee.h	3653;"	d
glCopyConvolutionFilter1D	include/GL/gl_mangle.h	282;"	d
glCopyConvolutionFilter1D	shared/GLee.h	964;"	d
glCopyConvolutionFilter1DEXT	include/GL/gl_mangle.h	281;"	d
glCopyConvolutionFilter1DEXT	shared/GLee.h	3586;"	d
glCopyConvolutionFilter2D	include/GL/gl_mangle.h	284;"	d
glCopyConvolutionFilter2D	shared/GLee.h	965;"	d
glCopyConvolutionFilter2DEXT	include/GL/gl_mangle.h	283;"	d
glCopyConvolutionFilter2DEXT	shared/GLee.h	3587;"	d
glCopyImageSubDataNV	include/GL/gl_mangle.h	285;"	d
glCopyMultiTexImage1DEXT	include/GL/gl_mangle.h	286;"	d
glCopyMultiTexImage2DEXT	include/GL/gl_mangle.h	287;"	d
glCopyMultiTexSubImage1DEXT	include/GL/gl_mangle.h	288;"	d
glCopyMultiTexSubImage2DEXT	include/GL/gl_mangle.h	289;"	d
glCopyMultiTexSubImage3DEXT	include/GL/gl_mangle.h	290;"	d
glCopyPixels	include/GL/gl_mangle.h	291;"	d
glCopyTexImage1D	include/GL/gl_mangle.h	293;"	d
glCopyTexImage1DEXT	include/GL/gl_mangle.h	292;"	d
glCopyTexImage1DEXT	shared/GLee.h	3469;"	d
glCopyTexImage2D	include/GL/gl_mangle.h	295;"	d
glCopyTexImage2DEXT	include/GL/gl_mangle.h	294;"	d
glCopyTexImage2DEXT	shared/GLee.h	3470;"	d
glCopyTexSubImage1D	include/GL/gl_mangle.h	297;"	d
glCopyTexSubImage1DEXT	include/GL/gl_mangle.h	296;"	d
glCopyTexSubImage1DEXT	shared/GLee.h	3471;"	d
glCopyTexSubImage2D	include/GL/gl_mangle.h	299;"	d
glCopyTexSubImage2DEXT	include/GL/gl_mangle.h	298;"	d
glCopyTexSubImage2DEXT	shared/GLee.h	3472;"	d
glCopyTexSubImage3D	include/GL/gl_mangle.h	301;"	d
glCopyTexSubImage3D	shared/GLee.h	983;"	d
glCopyTexSubImage3DEXT	include/GL/gl_mangle.h	300;"	d
glCopyTexSubImage3DEXT	shared/GLee.h	3473;"	d
glCopyTextureImage1DEXT	include/GL/gl_mangle.h	302;"	d
glCopyTextureImage2DEXT	include/GL/gl_mangle.h	303;"	d
glCopyTextureSubImage1DEXT	include/GL/gl_mangle.h	304;"	d
glCopyTextureSubImage2DEXT	include/GL/gl_mangle.h	305;"	d
glCopyTextureSubImage3DEXT	include/GL/gl_mangle.h	306;"	d
glCreateDebugObjectMESA	include/GL/gl_mangle.h	307;"	d
glCreateProgram	include/GL/gl_mangle.h	308;"	d
glCreateProgram	shared/GLee.h	1892;"	d
glCreateProgramObjectARB	include/GL/gl_mangle.h	309;"	d
glCreateProgramObjectARB	shared/GLee.h	3100;"	d
glCreateShader	include/GL/gl_mangle.h	310;"	d
glCreateShader	shared/GLee.h	1893;"	d
glCreateShaderObjectARB	include/GL/gl_mangle.h	311;"	d
glCreateShaderObjectARB	shared/GLee.h	3097;"	d
glCreateShaderProgramEXT	include/GL/gl_mangle.h	312;"	d
glCullFace	include/GL/gl_mangle.h	313;"	d
glCullParameterdvEXT	include/GL/gl_mangle.h	314;"	d
glCullParameterdvEXT	shared/GLee.h	4666;"	d
glCullParameterfvEXT	include/GL/gl_mangle.h	315;"	d
glCullParameterfvEXT	shared/GLee.h	4667;"	d
glCurrentPaletteMatrixARB	include/GL/gl_mangle.h	316;"	d
glCurrentPaletteMatrixARB	shared/GLee.h	2418;"	d
glDeformSGIX	include/GL/gl_mangle.h	319;"	d
glDeformSGIX	shared/GLee.h	4273;"	d
glDeformationMap3dSGIX	include/GL/gl_mangle.h	317;"	d
glDeformationMap3dSGIX	shared/GLee.h	4271;"	d
glDeformationMap3fSGIX	include/GL/gl_mangle.h	318;"	d
glDeformationMap3fSGIX	shared/GLee.h	4272;"	d
glDeleteAsyncMarkersSGIX	include/GL/gl_mangle.h	320;"	d
glDeleteAsyncMarkersSGIX	shared/GLee.h	4898;"	d
glDeleteBuffers	include/GL/gl_mangle.h	322;"	d
glDeleteBuffers	shared/GLee.h	1596;"	d
glDeleteBuffersARB	include/GL/gl_mangle.h	321;"	d
glDeleteBuffersARB	shared/GLee.h	2927;"	d
glDeleteFencesAPPLE	include/GL/gl_mangle.h	323;"	d
glDeleteFencesAPPLE	shared/GLee.h	7694;"	d
glDeleteFencesNV	include/GL/gl_mangle.h	324;"	d
glDeleteFencesNV	shared/GLee.h	6239;"	d
glDeleteFragmentShaderATI	include/GL/gl_mangle.h	325;"	d
glDeleteFragmentShaderATI	shared/GLee.h	6975;"	d
glDeleteFramebuffers	include/GL/gl_mangle.h	327;"	d
glDeleteFramebuffersEXT	include/GL/gl_mangle.h	326;"	d
glDeleteFramebuffersEXT	shared/GLee.h	8360;"	d
glDeleteLists	include/GL/gl_mangle.h	328;"	d
glDeleteObjectARB	include/GL/gl_mangle.h	329;"	d
glDeleteObjectARB	shared/GLee.h	3094;"	d
glDeleteOcclusionQueriesNV	include/GL/gl_mangle.h	330;"	d
glDeleteOcclusionQueriesNV	shared/GLee.h	7546;"	d
glDeletePerfMonitorsAMD	include/GL/gl_mangle.h	331;"	d
glDeleteProgram	include/GL/gl_mangle.h	332;"	d
glDeleteProgram	shared/GLee.h	1894;"	d
glDeleteProgramsARB	include/GL/gl_mangle.h	333;"	d
glDeleteProgramsARB	shared/GLee.h	2821;"	d
glDeleteProgramsNV	include/GL/gl_mangle.h	334;"	d
glDeleteProgramsNV	shared/GLee.h	6679;"	d
glDeleteQueries	include/GL/gl_mangle.h	336;"	d
glDeleteQueries	shared/GLee.h	1588;"	d
glDeleteQueriesARB	include/GL/gl_mangle.h	335;"	d
glDeleteQueriesARB	shared/GLee.h	2967;"	d
glDeleteRenderbuffers	include/GL/gl_mangle.h	338;"	d
glDeleteRenderbuffersEXT	include/GL/gl_mangle.h	337;"	d
glDeleteRenderbuffersEXT	shared/GLee.h	8354;"	d
glDeleteShader	include/GL/gl_mangle.h	339;"	d
glDeleteShader	shared/GLee.h	1895;"	d
glDeleteSync	include/GL/gl_mangle.h	340;"	d
glDeleteTextures	include/GL/gl_mangle.h	342;"	d
glDeleteTexturesEXT	include/GL/gl_mangle.h	341;"	d
glDeleteTexturesEXT	shared/GLee.h	3773;"	d
glDeleteTransformFeedbacksNV	include/GL/gl_mangle.h	343;"	d
glDeleteVertexArrays	include/GL/gl_mangle.h	345;"	d
glDeleteVertexArraysAPPLE	include/GL/gl_mangle.h	344;"	d
glDeleteVertexArraysAPPLE	shared/GLee.h	7719;"	d
glDeleteVertexShaderEXT	include/GL/gl_mangle.h	346;"	d
glDeleteVertexShaderEXT	shared/GLee.h	7268;"	d
glDepthBoundsEXT	include/GL/gl_mangle.h	348;"	d
glDepthBoundsEXT	shared/GLee.h	8163;"	d
glDepthBoundsdNV	include/GL/gl_mangle.h	347;"	d
glDepthBoundsdNV	shared/GLee.h	8761;"	d
glDepthFunc	include/GL/gl_mangle.h	349;"	d
glDepthMask	include/GL/gl_mangle.h	350;"	d
glDepthRange	include/GL/gl_mangle.h	352;"	d
glDepthRangedNV	include/GL/gl_mangle.h	351;"	d
glDepthRangedNV	shared/GLee.h	8759;"	d
glDepthRangefOES	shared/GLee.h	9315;"	d
glDetachObjectARB	include/GL/gl_mangle.h	353;"	d
glDetachObjectARB	shared/GLee.h	3096;"	d
glDetachShader	include/GL/gl_mangle.h	354;"	d
glDetachShader	shared/GLee.h	1896;"	d
glDetailTexFuncSGIS	include/GL/gl_mangle.h	355;"	d
glDetailTexFuncSGIS	shared/GLee.h	3797;"	d
glDisable	include/GL/gl_mangle.h	360;"	d
glDisableClientState	include/GL/gl_mangle.h	357;"	d
glDisableClientStateIndexedEXT	include/GL/gl_mangle.h	356;"	d
glDisableIndexedEXT	include/GL/gl_mangle.h	359;"	d
glDisableIndexedEXT	shared/GLee.h	9046;"	d
glDisableTexture	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^inline void glDisableTexture()$/;"	f
glDisableTexture	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^inline void glDisableTexture()$/;"	f
glDisableVariantClientStateEXT	include/GL/gl_mangle.h	361;"	d
glDisableVariantClientStateEXT	shared/GLee.h	7289;"	d
glDisableVertexAttribAPPLE	include/GL/gl_mangle.h	362;"	d
glDisableVertexAttribArray	include/GL/gl_mangle.h	364;"	d
glDisableVertexAttribArray	shared/GLee.h	1897;"	d
glDisableVertexAttribArrayARB	include/GL/gl_mangle.h	363;"	d
glDisableVertexAttribArrayARB	shared/GLee.h	2818;"	d
glDisablei	include/GL/gl_mangle.h	358;"	d
glDrawArrays	include/GL/gl_mangle.h	369;"	d
glDrawArraysEXT	include/GL/gl_mangle.h	365;"	d
glDrawArraysEXT	shared/GLee.h	3941;"	d
glDrawArraysInstanced	include/GL/gl_mangle.h	368;"	d
glDrawArraysInstancedARB	include/GL/gl_mangle.h	366;"	d
glDrawArraysInstancedEXT	include/GL/gl_mangle.h	367;"	d
glDrawArraysInstancedEXT	shared/GLee.h	9077;"	d
glDrawBuffer	include/GL/gl_mangle.h	370;"	d
glDrawBuffers	include/GL/gl_mangle.h	373;"	d
glDrawBuffers	shared/GLee.h	1885;"	d
glDrawBuffersARB	include/GL/gl_mangle.h	371;"	d
glDrawBuffersARB	shared/GLee.h	3230;"	d
glDrawBuffersATI	include/GL/gl_mangle.h	372;"	d
glDrawBuffersATI	shared/GLee.h	7795;"	d
glDrawElementArrayAPPLE	include/GL/gl_mangle.h	374;"	d
glDrawElementArrayAPPLE	shared/GLee.h	7663;"	d
glDrawElementArrayATI	include/GL/gl_mangle.h	375;"	d
glDrawElementArrayATI	shared/GLee.h	7477;"	d
glDrawElements	include/GL/gl_mangle.h	381;"	d
glDrawElementsBaseVertex	include/GL/gl_mangle.h	376;"	d
glDrawElementsInstanced	include/GL/gl_mangle.h	380;"	d
glDrawElementsInstancedARB	include/GL/gl_mangle.h	377;"	d
glDrawElementsInstancedBaseVertex	include/GL/gl_mangle.h	378;"	d
glDrawElementsInstancedEXT	include/GL/gl_mangle.h	379;"	d
glDrawElementsInstancedEXT	shared/GLee.h	9078;"	d
glDrawMeshArraysSUN	include/GL/gl_mangle.h	382;"	d
glDrawMeshArraysSUN	shared/GLee.h	7491;"	d
glDrawPixels	include/GL/gl_mangle.h	383;"	d
glDrawRangeElementArrayAPPLE	include/GL/gl_mangle.h	384;"	d
glDrawRangeElementArrayAPPLE	shared/GLee.h	7664;"	d
glDrawRangeElementArrayATI	include/GL/gl_mangle.h	385;"	d
glDrawRangeElementArrayATI	shared/GLee.h	7478;"	d
glDrawRangeElements	include/GL/gl_mangle.h	388;"	d
glDrawRangeElements	shared/GLee.h	948;"	d
glDrawRangeElementsBaseVertex	include/GL/gl_mangle.h	386;"	d
glDrawRangeElementsEXT	include/GL/gl_mangle.h	387;"	d
glDrawRangeElementsEXT	shared/GLee.h	4792;"	d
glDrawTransformFeedbackNV	include/GL/gl_mangle.h	389;"	d
glEdgeFlag	include/GL/gl_mangle.h	391;"	d
glEdgeFlagFormatNV	include/GL/gl_mangle.h	390;"	d
glEdgeFlagPointer	include/GL/gl_mangle.h	394;"	d
glEdgeFlagPointerEXT	include/GL/gl_mangle.h	392;"	d
glEdgeFlagPointerEXT	shared/GLee.h	3942;"	d
glEdgeFlagPointerListIBM	include/GL/gl_mangle.h	393;"	d
glEdgeFlagPointerListIBM	shared/GLee.h	6022;"	d
glEdgeFlagv	include/GL/gl_mangle.h	395;"	d
glElementPointerAPPLE	include/GL/gl_mangle.h	396;"	d
glElementPointerAPPLE	shared/GLee.h	7662;"	d
glElementPointerATI	include/GL/gl_mangle.h	397;"	d
glElementPointerATI	shared/GLee.h	7476;"	d
glEnable	include/GL/gl_mangle.h	402;"	d
glEnableClientState	include/GL/gl_mangle.h	399;"	d
glEnableClientStateIndexedEXT	include/GL/gl_mangle.h	398;"	d
glEnableIndexedEXT	include/GL/gl_mangle.h	401;"	d
glEnableIndexedEXT	shared/GLee.h	9045;"	d
glEnableVariantClientStateEXT	include/GL/gl_mangle.h	403;"	d
glEnableVariantClientStateEXT	shared/GLee.h	7288;"	d
glEnableVertexAttribAPPLE	include/GL/gl_mangle.h	404;"	d
glEnableVertexAttribArray	include/GL/gl_mangle.h	406;"	d
glEnableVertexAttribArray	shared/GLee.h	1898;"	d
glEnableVertexAttribArrayARB	include/GL/gl_mangle.h	405;"	d
glEnableVertexAttribArrayARB	shared/GLee.h	2817;"	d
glEnablei	include/GL/gl_mangle.h	400;"	d
glEnd	include/GL/gl_mangle.h	411;"	d
glEndConditionalRender	include/GL/gl_mangle.h	407;"	d
glEndConditionalRenderNV	include/GL/gl_mangle.h	408;"	d
glEndFragmentShaderATI	include/GL/gl_mangle.h	409;"	d
glEndFragmentShaderATI	shared/GLee.h	6977;"	d
glEndList	include/GL/gl_mangle.h	410;"	d
glEndOcclusionQueryNV	include/GL/gl_mangle.h	412;"	d
glEndOcclusionQueryNV	shared/GLee.h	7549;"	d
glEndPerfMonitorAMD	include/GL/gl_mangle.h	413;"	d
glEndQuery	include/GL/gl_mangle.h	415;"	d
glEndQuery	shared/GLee.h	1591;"	d
glEndQueryARB	include/GL/gl_mangle.h	414;"	d
glEndQueryARB	shared/GLee.h	2970;"	d
glEndSceneEXT	shared/GLee.h	9180;"	d
glEndTransformFeedback	include/GL/gl_mangle.h	417;"	d
glEndTransformFeedbackEXT	include/GL/gl_mangle.h	416;"	d
glEndTransformFeedbackNV	include/GL/gl_mangle.h	418;"	d
glEndTransformFeedbackNV	shared/GLee.h	8830;"	d
glEndVertexShaderEXT	include/GL/gl_mangle.h	419;"	d
glEndVertexShaderEXT	shared/GLee.h	7265;"	d
glEndVideoCaptureNV	include/GL/gl_mangle.h	420;"	d
glEvalCoord1d	include/GL/gl_mangle.h	421;"	d
glEvalCoord1dv	include/GL/gl_mangle.h	422;"	d
glEvalCoord1f	include/GL/gl_mangle.h	423;"	d
glEvalCoord1fv	include/GL/gl_mangle.h	424;"	d
glEvalCoord2d	include/GL/gl_mangle.h	425;"	d
glEvalCoord2dv	include/GL/gl_mangle.h	426;"	d
glEvalCoord2f	include/GL/gl_mangle.h	427;"	d
glEvalCoord2fv	include/GL/gl_mangle.h	428;"	d
glEvalMapsNV	include/GL/gl_mangle.h	429;"	d
glEvalMapsNV	shared/GLee.h	6313;"	d
glEvalMesh1	include/GL/gl_mangle.h	430;"	d
glEvalMesh2	include/GL/gl_mangle.h	431;"	d
glEvalPoint1	include/GL/gl_mangle.h	432;"	d
glEvalPoint2	include/GL/gl_mangle.h	433;"	d
glExecuteProgramNV	include/GL/gl_mangle.h	434;"	d
glExecuteProgramNV	shared/GLee.h	6680;"	d
glExtractComponentEXT	include/GL/gl_mangle.h	435;"	d
glExtractComponentEXT	shared/GLee.h	7275;"	d
glFeedbackBuffer	include/GL/gl_mangle.h	436;"	d
glFenceSync	include/GL/gl_mangle.h	437;"	d
glFinalCombinerInputNV	include/GL/gl_mangle.h	438;"	d
glFinalCombinerInputNV	shared/GLee.h	5804;"	d
glFinish	include/GL/gl_mangle.h	442;"	d
glFinishAsyncSGIX	include/GL/gl_mangle.h	439;"	d
glFinishAsyncSGIX	shared/GLee.h	4895;"	d
glFinishFenceAPPLE	include/GL/gl_mangle.h	440;"	d
glFinishFenceAPPLE	shared/GLee.h	7698;"	d
glFinishFenceNV	include/GL/gl_mangle.h	441;"	d
glFinishFenceNV	shared/GLee.h	6244;"	d
glFinishObjectAPPLE	include/GL/gl_mangle.h	443;"	d
glFinishObjectAPPLE	shared/GLee.h	7700;"	d
glFinishTextureSUNX	include/GL/gl_mangle.h	444;"	d
glFinishTextureSUNX	shared/GLee.h	5315;"	d
glFlush	include/GL/gl_mangle.h	445;"	d
glFlushMappedBufferRange	include/GL/gl_mangle.h	447;"	d
glFlushMappedBufferRangeAPPLE	include/GL/gl_mangle.h	446;"	d
glFlushPixelDataRangeNV	include/GL/gl_mangle.h	448;"	d
glFlushPixelDataRangeNV	shared/GLee.h	8058;"	d
glFlushRasterSGIX	include/GL/gl_mangle.h	449;"	d
glFlushRasterSGIX	shared/GLee.h	4298;"	d
glFlushVertexArrayRangeAPPLE	include/GL/gl_mangle.h	450;"	d
glFlushVertexArrayRangeAPPLE	shared/GLee.h	7743;"	d
glFlushVertexArrayRangeNV	include/GL/gl_mangle.h	451;"	d
glFlushVertexArrayRangeNV	shared/GLee.h	5711;"	d
glFogCoordFormatNV	include/GL/gl_mangle.h	458;"	d
glFogCoordPointer	include/GL/gl_mangle.h	465;"	d
glFogCoordPointer	shared/GLee.h	1451;"	d
glFogCoordPointerEXT	include/GL/gl_mangle.h	463;"	d
glFogCoordPointerEXT	shared/GLee.h	5147;"	d
glFogCoordPointerListIBM	include/GL/gl_mangle.h	464;"	d
glFogCoordPointerListIBM	shared/GLee.h	6023;"	d
glFogCoordd	include/GL/gl_mangle.h	453;"	d
glFogCoordd	shared/GLee.h	1449;"	d
glFogCoorddEXT	include/GL/gl_mangle.h	452;"	d
glFogCoorddEXT	shared/GLee.h	5145;"	d
glFogCoorddv	include/GL/gl_mangle.h	455;"	d
glFogCoorddv	shared/GLee.h	1450;"	d
glFogCoorddvEXT	include/GL/gl_mangle.h	454;"	d
glFogCoorddvEXT	shared/GLee.h	5146;"	d
glFogCoordf	include/GL/gl_mangle.h	457;"	d
glFogCoordf	shared/GLee.h	1447;"	d
glFogCoordfEXT	include/GL/gl_mangle.h	456;"	d
glFogCoordfEXT	shared/GLee.h	5143;"	d
glFogCoordfv	include/GL/gl_mangle.h	460;"	d
glFogCoordfv	shared/GLee.h	1448;"	d
glFogCoordfvEXT	include/GL/gl_mangle.h	459;"	d
glFogCoordfvEXT	shared/GLee.h	5144;"	d
glFogCoordhNV	include/GL/gl_mangle.h	461;"	d
glFogCoordhNV	shared/GLee.h	8021;"	d
glFogCoordhvNV	include/GL/gl_mangle.h	462;"	d
glFogCoordhvNV	shared/GLee.h	8022;"	d
glFogFuncSGIS	include/GL/gl_mangle.h	467;"	d
glFogFuncSGIS	shared/GLee.h	4325;"	d
glFogf	include/GL/gl_mangle.h	466;"	d
glFogfv	include/GL/gl_mangle.h	468;"	d
glFogi	include/GL/gl_mangle.h	469;"	d
glFogiv	include/GL/gl_mangle.h	470;"	d
glFragmentColorMaterialEXT	shared/GLee.h	9151;"	d
glFragmentColorMaterialSGIX	include/GL/gl_mangle.h	471;"	d
glFragmentColorMaterialSGIX	shared/GLee.h	4742;"	d
glFragmentLightModelfEXT	shared/GLee.h	9138;"	d
glFragmentLightModelfSGIX	include/GL/gl_mangle.h	476;"	d
glFragmentLightModelfSGIX	shared/GLee.h	4747;"	d
glFragmentLightModelfvEXT	shared/GLee.h	9140;"	d
glFragmentLightModelfvSGIX	include/GL/gl_mangle.h	477;"	d
glFragmentLightModelfvSGIX	shared/GLee.h	4748;"	d
glFragmentLightModeliEXT	shared/GLee.h	9137;"	d
glFragmentLightModeliSGIX	include/GL/gl_mangle.h	478;"	d
glFragmentLightModeliSGIX	shared/GLee.h	4749;"	d
glFragmentLightModelivEXT	shared/GLee.h	9139;"	d
glFragmentLightModelivSGIX	include/GL/gl_mangle.h	479;"	d
glFragmentLightModelivSGIX	shared/GLee.h	4750;"	d
glFragmentLightfEXT	shared/GLee.h	9142;"	d
glFragmentLightfSGIX	include/GL/gl_mangle.h	472;"	d
glFragmentLightfSGIX	shared/GLee.h	4743;"	d
glFragmentLightfvEXT	shared/GLee.h	9144;"	d
glFragmentLightfvSGIX	include/GL/gl_mangle.h	473;"	d
glFragmentLightfvSGIX	shared/GLee.h	4744;"	d
glFragmentLightiEXT	shared/GLee.h	9141;"	d
glFragmentLightiSGIX	include/GL/gl_mangle.h	474;"	d
glFragmentLightiSGIX	shared/GLee.h	4745;"	d
glFragmentLightivEXT	shared/GLee.h	9143;"	d
glFragmentLightivSGIX	include/GL/gl_mangle.h	475;"	d
glFragmentLightivSGIX	shared/GLee.h	4746;"	d
glFragmentMaterialfEXT	shared/GLee.h	9147;"	d
glFragmentMaterialfSGIX	include/GL/gl_mangle.h	480;"	d
glFragmentMaterialfSGIX	shared/GLee.h	4751;"	d
glFragmentMaterialfvEXT	shared/GLee.h	9149;"	d
glFragmentMaterialfvSGIX	include/GL/gl_mangle.h	481;"	d
glFragmentMaterialfvSGIX	shared/GLee.h	4752;"	d
glFragmentMaterialiEXT	shared/GLee.h	9148;"	d
glFragmentMaterialiSGIX	include/GL/gl_mangle.h	482;"	d
glFragmentMaterialiSGIX	shared/GLee.h	4753;"	d
glFragmentMaterialivEXT	shared/GLee.h	9150;"	d
glFragmentMaterialivSGIX	include/GL/gl_mangle.h	483;"	d
glFragmentMaterialivSGIX	shared/GLee.h	4754;"	d
glFrame.h	shared/glFrame.h	1;"	F
glFrameTerminatorGREMEDY	include/GL/gl_mangle.h	504;"	d
glFrameZoomSGIX	include/GL/gl_mangle.h	505;"	d
glFrameZoomSGIX	shared/GLee.h	4229;"	d
glFramebufferDrawBufferEXT	include/GL/gl_mangle.h	484;"	d
glFramebufferDrawBuffersEXT	include/GL/gl_mangle.h	485;"	d
glFramebufferReadBufferEXT	include/GL/gl_mangle.h	486;"	d
glFramebufferRenderbuffer	include/GL/gl_mangle.h	488;"	d
glFramebufferRenderbufferEXT	include/GL/gl_mangle.h	487;"	d
glFramebufferRenderbufferEXT	shared/GLee.h	8366;"	d
glFramebufferTexture	include/GL/gl_mangle.h	503;"	d
glFramebufferTexture1D	include/GL/gl_mangle.h	490;"	d
glFramebufferTexture1DEXT	include/GL/gl_mangle.h	489;"	d
glFramebufferTexture1DEXT	shared/GLee.h	8363;"	d
glFramebufferTexture2D	include/GL/gl_mangle.h	492;"	d
glFramebufferTexture2DEXT	include/GL/gl_mangle.h	491;"	d
glFramebufferTexture2DEXT	shared/GLee.h	8364;"	d
glFramebufferTexture3D	include/GL/gl_mangle.h	494;"	d
glFramebufferTexture3DEXT	include/GL/gl_mangle.h	493;"	d
glFramebufferTexture3DEXT	shared/GLee.h	8365;"	d
glFramebufferTextureARB	include/GL/gl_mangle.h	495;"	d
glFramebufferTextureEXT	include/GL/gl_mangle.h	496;"	d
glFramebufferTextureEXT	shared/GLee.h	8594;"	d
glFramebufferTextureFace	include/GL/gl_mangle.h	499;"	d
glFramebufferTextureFaceARB	include/GL/gl_mangle.h	497;"	d
glFramebufferTextureFaceEXT	include/GL/gl_mangle.h	498;"	d
glFramebufferTextureFaceEXT	shared/GLee.h	8596;"	d
glFramebufferTextureLayer	include/GL/gl_mangle.h	502;"	d
glFramebufferTextureLayerARB	include/GL/gl_mangle.h	500;"	d
glFramebufferTextureLayerEXT	include/GL/gl_mangle.h	501;"	d
glFramebufferTextureLayerEXT	shared/GLee.h	8595;"	d
glFreeObjectBufferATI	include/GL/gl_mangle.h	506;"	d
glFreeObjectBufferATI	shared/GLee.h	7055;"	d
glFrontFace	include/GL/gl_mangle.h	507;"	d
glFrustum	include/GL/gl_mangle.h	508;"	d
glFrustumfOES	shared/GLee.h	9316;"	d
glGenAsyncMarkersSGIX	include/GL/gl_mangle.h	509;"	d
glGenAsyncMarkersSGIX	shared/GLee.h	4897;"	d
glGenBuffers	include/GL/gl_mangle.h	511;"	d
glGenBuffers	shared/GLee.h	1597;"	d
glGenBuffersARB	include/GL/gl_mangle.h	510;"	d
glGenBuffersARB	shared/GLee.h	2928;"	d
glGenFencesAPPLE	include/GL/gl_mangle.h	516;"	d
glGenFencesAPPLE	shared/GLee.h	7693;"	d
glGenFencesNV	include/GL/gl_mangle.h	517;"	d
glGenFencesNV	shared/GLee.h	6240;"	d
glGenFragmentShadersATI	include/GL/gl_mangle.h	518;"	d
glGenFragmentShadersATI	shared/GLee.h	6973;"	d
glGenFramebuffers	include/GL/gl_mangle.h	520;"	d
glGenFramebuffersEXT	include/GL/gl_mangle.h	519;"	d
glGenFramebuffersEXT	shared/GLee.h	8361;"	d
glGenLists	include/GL/gl_mangle.h	521;"	d
glGenOcclusionQueriesNV	include/GL/gl_mangle.h	522;"	d
glGenOcclusionQueriesNV	shared/GLee.h	7545;"	d
glGenPerfMonitorsAMD	include/GL/gl_mangle.h	523;"	d
glGenProgramsARB	include/GL/gl_mangle.h	524;"	d
glGenProgramsARB	shared/GLee.h	2822;"	d
glGenProgramsNV	include/GL/gl_mangle.h	525;"	d
glGenProgramsNV	shared/GLee.h	6681;"	d
glGenQueries	include/GL/gl_mangle.h	527;"	d
glGenQueries	shared/GLee.h	1587;"	d
glGenQueriesARB	include/GL/gl_mangle.h	526;"	d
glGenQueriesARB	shared/GLee.h	2966;"	d
glGenRenderbuffers	include/GL/gl_mangle.h	529;"	d
glGenRenderbuffersEXT	include/GL/gl_mangle.h	528;"	d
glGenRenderbuffersEXT	shared/GLee.h	8355;"	d
glGenSymbolsEXT	include/GL/gl_mangle.h	530;"	d
glGenSymbolsEXT	shared/GLee.h	7276;"	d
glGenTextures	include/GL/gl_mangle.h	532;"	d
glGenTexturesEXT	include/GL/gl_mangle.h	531;"	d
glGenTexturesEXT	shared/GLee.h	3774;"	d
glGenTransformFeedbacksNV	include/GL/gl_mangle.h	533;"	d
glGenVertexArrays	include/GL/gl_mangle.h	535;"	d
glGenVertexArraysAPPLE	include/GL/gl_mangle.h	534;"	d
glGenVertexArraysAPPLE	shared/GLee.h	7720;"	d
glGenVertexShadersEXT	include/GL/gl_mangle.h	536;"	d
glGenVertexShadersEXT	shared/GLee.h	7267;"	d
glGenerateMipmap	include/GL/gl_mangle.h	513;"	d
glGenerateMipmapEXT	include/GL/gl_mangle.h	512;"	d
glGenerateMipmapEXT	shared/GLee.h	8368;"	d
glGenerateMultiTexMipmapEXT	include/GL/gl_mangle.h	514;"	d
glGenerateTextureMipmapEXT	include/GL/gl_mangle.h	515;"	d
glGetActiveAttrib	include/GL/gl_mangle.h	538;"	d
glGetActiveAttrib	shared/GLee.h	1899;"	d
glGetActiveAttribARB	include/GL/gl_mangle.h	537;"	d
glGetActiveAttribARB	shared/GLee.h	3155;"	d
glGetActiveUniform	include/GL/gl_mangle.h	542;"	d
glGetActiveUniform	shared/GLee.h	1900;"	d
glGetActiveUniformARB	include/GL/gl_mangle.h	539;"	d
glGetActiveUniformARB	shared/GLee.h	3129;"	d
glGetActiveUniformBlockName	include/GL/gl_mangle.h	541;"	d
glGetActiveUniformBlockiv	include/GL/gl_mangle.h	540;"	d
glGetActiveUniformName	include/GL/gl_mangle.h	543;"	d
glGetActiveUniformsiv	include/GL/gl_mangle.h	544;"	d
glGetActiveVaryingNV	include/GL/gl_mangle.h	545;"	d
glGetActiveVaryingNV	shared/GLee.h	8838;"	d
glGetArrayObjectfvATI	include/GL/gl_mangle.h	546;"	d
glGetArrayObjectfvATI	shared/GLee.h	7057;"	d
glGetArrayObjectivATI	include/GL/gl_mangle.h	547;"	d
glGetArrayObjectivATI	shared/GLee.h	7058;"	d
glGetAttachedObjectsARB	include/GL/gl_mangle.h	548;"	d
glGetAttachedObjectsARB	shared/GLee.h	3127;"	d
glGetAttachedShaders	include/GL/gl_mangle.h	549;"	d
glGetAttachedShaders	shared/GLee.h	1901;"	d
glGetAttribLocation	include/GL/gl_mangle.h	551;"	d
glGetAttribLocation	shared/GLee.h	1902;"	d
glGetAttribLocationARB	include/GL/gl_mangle.h	550;"	d
glGetAttribLocationARB	shared/GLee.h	3156;"	d
glGetBooleanIndexedvEXT	include/GL/gl_mangle.h	552;"	d
glGetBooleanIndexedvEXT	shared/GLee.h	9043;"	d
glGetBooleani_v	include/GL/gl_mangle.h	553;"	d
glGetBooleanv	include/GL/gl_mangle.h	554;"	d
glGetBufferParameteri64v	include/GL/gl_mangle.h	555;"	d
glGetBufferParameteriv	include/GL/gl_mangle.h	557;"	d
glGetBufferParameteriv	shared/GLee.h	1604;"	d
glGetBufferParameterivARB	include/GL/gl_mangle.h	556;"	d
glGetBufferParameterivARB	shared/GLee.h	2935;"	d
glGetBufferParameterui64vNV	include/GL/gl_mangle.h	558;"	d
glGetBufferPointerv	include/GL/gl_mangle.h	560;"	d
glGetBufferPointerv	shared/GLee.h	1605;"	d
glGetBufferPointervARB	include/GL/gl_mangle.h	559;"	d
glGetBufferPointervARB	shared/GLee.h	2936;"	d
glGetBufferSubData	include/GL/gl_mangle.h	562;"	d
glGetBufferSubData	shared/GLee.h	1601;"	d
glGetBufferSubDataARB	include/GL/gl_mangle.h	561;"	d
glGetBufferSubDataARB	shared/GLee.h	2932;"	d
glGetClipPlane	include/GL/gl_mangle.h	563;"	d
glGetClipPlanefOES	shared/GLee.h	9319;"	d
glGetColorTable	include/GL/gl_mangle.h	565;"	d
glGetColorTable	shared/GLee.h	953;"	d
glGetColorTableEXT	include/GL/gl_mangle.h	564;"	d
glGetColorTableEXT	shared/GLee.h	4506;"	d
glGetColorTableParameterfv	include/GL/gl_mangle.h	567;"	d
glGetColorTableParameterfv	shared/GLee.h	954;"	d
glGetColorTableParameterfvEXT	include/GL/gl_mangle.h	566;"	d
glGetColorTableParameterfvEXT	shared/GLee.h	4508;"	d
glGetColorTableParameterfvSGI	include/GL/gl_mangle.h	568;"	d
glGetColorTableParameterfvSGI	shared/GLee.h	3655;"	d
glGetColorTableParameteriv	include/GL/gl_mangle.h	570;"	d
glGetColorTableParameteriv	shared/GLee.h	955;"	d
glGetColorTableParameterivEXT	include/GL/gl_mangle.h	569;"	d
glGetColorTableParameterivEXT	shared/GLee.h	4507;"	d
glGetColorTableParameterivSGI	include/GL/gl_mangle.h	571;"	d
glGetColorTableParameterivSGI	shared/GLee.h	3656;"	d
glGetColorTableSGI	include/GL/gl_mangle.h	572;"	d
glGetColorTableSGI	shared/GLee.h	3654;"	d
glGetCombinerInputParameterfvNV	include/GL/gl_mangle.h	573;"	d
glGetCombinerInputParameterfvNV	shared/GLee.h	5805;"	d
glGetCombinerInputParameterivNV	include/GL/gl_mangle.h	574;"	d
glGetCombinerInputParameterivNV	shared/GLee.h	5806;"	d
glGetCombinerOutputParameterfvNV	include/GL/gl_mangle.h	575;"	d
glGetCombinerOutputParameterfvNV	shared/GLee.h	5807;"	d
glGetCombinerOutputParameterivNV	include/GL/gl_mangle.h	576;"	d
glGetCombinerOutputParameterivNV	shared/GLee.h	5808;"	d
glGetCombinerStageParameterfvNV	include/GL/gl_mangle.h	577;"	d
glGetCombinerStageParameterfvNV	shared/GLee.h	6338;"	d
glGetCompressedMultiTexImageEXT	include/GL/gl_mangle.h	578;"	d
glGetCompressedTexImage	include/GL/gl_mangle.h	580;"	d
glGetCompressedTexImage	shared/GLee.h	1308;"	d
glGetCompressedTexImageARB	include/GL/gl_mangle.h	579;"	d
glGetCompressedTexImageARB	shared/GLee.h	2282;"	d
glGetCompressedTextureImageEXT	include/GL/gl_mangle.h	581;"	d
glGetConvolutionFilter	include/GL/gl_mangle.h	583;"	d
glGetConvolutionFilter	shared/GLee.h	966;"	d
glGetConvolutionFilterEXT	include/GL/gl_mangle.h	582;"	d
glGetConvolutionFilterEXT	shared/GLee.h	3588;"	d
glGetConvolutionParameterfv	include/GL/gl_mangle.h	585;"	d
glGetConvolutionParameterfv	shared/GLee.h	967;"	d
glGetConvolutionParameterfvEXT	include/GL/gl_mangle.h	584;"	d
glGetConvolutionParameterfvEXT	shared/GLee.h	3589;"	d
glGetConvolutionParameteriv	include/GL/gl_mangle.h	587;"	d
glGetConvolutionParameteriv	shared/GLee.h	968;"	d
glGetConvolutionParameterivEXT	include/GL/gl_mangle.h	586;"	d
glGetConvolutionParameterivEXT	shared/GLee.h	3590;"	d
glGetDebugLogLengthMESA	include/GL/gl_mangle.h	588;"	d
glGetDebugLogMESA	include/GL/gl_mangle.h	589;"	d
glGetDetailTexFuncSGIS	include/GL/gl_mangle.h	590;"	d
glGetDetailTexFuncSGIS	shared/GLee.h	3798;"	d
glGetDoubleIndexedvEXT	include/GL/gl_mangle.h	591;"	d
glGetDoublev	include/GL/gl_mangle.h	592;"	d
glGetError	include/GL/gl_mangle.h	593;"	d
glGetFenceivNV	include/GL/gl_mangle.h	594;"	d
glGetFenceivNV	shared/GLee.h	6243;"	d
glGetFinalCombinerInputParameterfvNV	include/GL/gl_mangle.h	595;"	d
glGetFinalCombinerInputParameterfvNV	shared/GLee.h	5809;"	d
glGetFinalCombinerInputParameterivNV	include/GL/gl_mangle.h	596;"	d
glGetFinalCombinerInputParameterivNV	shared/GLee.h	5810;"	d
glGetFloatIndexedvEXT	include/GL/gl_mangle.h	597;"	d
glGetFloatv	include/GL/gl_mangle.h	598;"	d
glGetFogFuncSGIS	include/GL/gl_mangle.h	599;"	d
glGetFogFuncSGIS	shared/GLee.h	4326;"	d
glGetFragDataLocation	include/GL/gl_mangle.h	601;"	d
glGetFragDataLocationEXT	include/GL/gl_mangle.h	600;"	d
glGetFragDataLocationEXT	shared/GLee.h	8525;"	d
glGetFragmentLightfvEXT	shared/GLee.h	9146;"	d
glGetFragmentLightfvSGIX	include/GL/gl_mangle.h	602;"	d
glGetFragmentLightfvSGIX	shared/GLee.h	4755;"	d
glGetFragmentLightivEXT	shared/GLee.h	9145;"	d
glGetFragmentLightivSGIX	include/GL/gl_mangle.h	603;"	d
glGetFragmentLightivSGIX	shared/GLee.h	4756;"	d
glGetFragmentMaterialfvEXT	shared/GLee.h	9152;"	d
glGetFragmentMaterialfvSGIX	include/GL/gl_mangle.h	604;"	d
glGetFragmentMaterialfvSGIX	shared/GLee.h	4757;"	d
glGetFragmentMaterialivEXT	shared/GLee.h	9153;"	d
glGetFragmentMaterialivSGIX	include/GL/gl_mangle.h	605;"	d
glGetFragmentMaterialivSGIX	shared/GLee.h	4758;"	d
glGetFramebufferAttachmentParameteriv	include/GL/gl_mangle.h	607;"	d
glGetFramebufferAttachmentParameterivEXT	include/GL/gl_mangle.h	606;"	d
glGetFramebufferAttachmentParameterivEXT	shared/GLee.h	8367;"	d
glGetFramebufferParameterivEXT	include/GL/gl_mangle.h	608;"	d
glGetHandleARB	include/GL/gl_mangle.h	609;"	d
glGetHandleARB	shared/GLee.h	3095;"	d
glGetHistogram	include/GL/gl_mangle.h	611;"	d
glGetHistogram	shared/GLee.h	971;"	d
glGetHistogramEXT	include/GL/gl_mangle.h	610;"	d
glGetHistogramEXT	shared/GLee.h	3516;"	d
glGetHistogramParameterfv	include/GL/gl_mangle.h	613;"	d
glGetHistogramParameterfv	shared/GLee.h	972;"	d
glGetHistogramParameterfvEXT	include/GL/gl_mangle.h	612;"	d
glGetHistogramParameterfvEXT	shared/GLee.h	3517;"	d
glGetHistogramParameteriv	include/GL/gl_mangle.h	615;"	d
glGetHistogramParameteriv	shared/GLee.h	973;"	d
glGetHistogramParameterivEXT	include/GL/gl_mangle.h	614;"	d
glGetHistogramParameterivEXT	shared/GLee.h	3518;"	d
glGetImageTransformParameterfvHP	include/GL/gl_mangle.h	616;"	d
glGetImageTransformParameterfvHP	shared/GLee.h	4377;"	d
glGetImageTransformParameterivHP	include/GL/gl_mangle.h	617;"	d
glGetImageTransformParameterivHP	shared/GLee.h	4376;"	d
glGetInfoLogARB	include/GL/gl_mangle.h	618;"	d
glGetInfoLogARB	shared/GLee.h	3126;"	d
glGetInstrumentsSGIX	include/GL/gl_mangle.h	619;"	d
glGetInstrumentsSGIX	shared/GLee.h	4198;"	d
glGetInteger64i_v	include/GL/gl_mangle.h	620;"	d
glGetInteger64v	include/GL/gl_mangle.h	621;"	d
glGetIntegerIndexedvEXT	include/GL/gl_mangle.h	622;"	d
glGetIntegerIndexedvEXT	shared/GLee.h	9044;"	d
glGetIntegeri_v	include/GL/gl_mangle.h	623;"	d
glGetIntegerui64i_vNV	include/GL/gl_mangle.h	624;"	d
glGetIntegerui64vNV	include/GL/gl_mangle.h	625;"	d
glGetIntegerv	include/GL/gl_mangle.h	626;"	d
glGetInvariantBooleanvEXT	include/GL/gl_mangle.h	627;"	d
glGetInvariantBooleanvEXT	shared/GLee.h	7300;"	d
glGetInvariantFloatvEXT	include/GL/gl_mangle.h	628;"	d
glGetInvariantFloatvEXT	shared/GLee.h	7302;"	d
glGetInvariantIntegervEXT	include/GL/gl_mangle.h	629;"	d
glGetInvariantIntegervEXT	shared/GLee.h	7301;"	d
glGetLightfv	include/GL/gl_mangle.h	630;"	d
glGetLightiv	include/GL/gl_mangle.h	631;"	d
glGetListParameterfvSGIX	include/GL/gl_mangle.h	632;"	d
glGetListParameterfvSGIX	shared/GLee.h	4539;"	d
glGetListParameterivSGIX	include/GL/gl_mangle.h	633;"	d
glGetListParameterivSGIX	shared/GLee.h	4540;"	d
glGetLocalConstantBooleanvEXT	include/GL/gl_mangle.h	634;"	d
glGetLocalConstantBooleanvEXT	shared/GLee.h	7303;"	d
glGetLocalConstantFloatvEXT	include/GL/gl_mangle.h	635;"	d
glGetLocalConstantFloatvEXT	shared/GLee.h	7305;"	d
glGetLocalConstantIntegervEXT	include/GL/gl_mangle.h	636;"	d
glGetLocalConstantIntegervEXT	shared/GLee.h	7304;"	d
glGetMapAttribParameterfvNV	include/GL/gl_mangle.h	637;"	d
glGetMapAttribParameterfvNV	shared/GLee.h	6312;"	d
glGetMapAttribParameterivNV	include/GL/gl_mangle.h	638;"	d
glGetMapAttribParameterivNV	shared/GLee.h	6311;"	d
glGetMapControlPointsNV	include/GL/gl_mangle.h	639;"	d
glGetMapControlPointsNV	shared/GLee.h	6308;"	d
glGetMapParameterfvNV	include/GL/gl_mangle.h	643;"	d
glGetMapParameterfvNV	shared/GLee.h	6310;"	d
glGetMapParameterivNV	include/GL/gl_mangle.h	644;"	d
glGetMapParameterivNV	shared/GLee.h	6309;"	d
glGetMapdv	include/GL/gl_mangle.h	640;"	d
glGetMapfv	include/GL/gl_mangle.h	641;"	d
glGetMapiv	include/GL/gl_mangle.h	642;"	d
glGetMaterialfv	include/GL/gl_mangle.h	645;"	d
glGetMaterialiv	include/GL/gl_mangle.h	646;"	d
glGetMinmax	include/GL/gl_mangle.h	648;"	d
glGetMinmax	shared/GLee.h	974;"	d
glGetMinmaxEXT	include/GL/gl_mangle.h	647;"	d
glGetMinmaxEXT	shared/GLee.h	3519;"	d
glGetMinmaxParameterfv	include/GL/gl_mangle.h	650;"	d
glGetMinmaxParameterfv	shared/GLee.h	975;"	d
glGetMinmaxParameterfvEXT	include/GL/gl_mangle.h	649;"	d
glGetMinmaxParameterfvEXT	shared/GLee.h	3520;"	d
glGetMinmaxParameteriv	include/GL/gl_mangle.h	652;"	d
glGetMinmaxParameteriv	shared/GLee.h	976;"	d
glGetMinmaxParameterivEXT	include/GL/gl_mangle.h	651;"	d
glGetMinmaxParameterivEXT	shared/GLee.h	3521;"	d
glGetMultiTexEnvfvEXT	include/GL/gl_mangle.h	655;"	d
glGetMultiTexEnvivEXT	include/GL/gl_mangle.h	656;"	d
glGetMultiTexGendvEXT	include/GL/gl_mangle.h	657;"	d
glGetMultiTexGenfvEXT	include/GL/gl_mangle.h	658;"	d
glGetMultiTexGenivEXT	include/GL/gl_mangle.h	659;"	d
glGetMultiTexImageEXT	include/GL/gl_mangle.h	660;"	d
glGetMultiTexLevelParameterfvEXT	include/GL/gl_mangle.h	661;"	d
glGetMultiTexLevelParameterivEXT	include/GL/gl_mangle.h	662;"	d
glGetMultiTexParameterIivEXT	include/GL/gl_mangle.h	664;"	d
glGetMultiTexParameterIuivEXT	include/GL/gl_mangle.h	665;"	d
glGetMultiTexParameterfvEXT	include/GL/gl_mangle.h	663;"	d
glGetMultiTexParameterivEXT	include/GL/gl_mangle.h	666;"	d
glGetMultisamplefv	include/GL/gl_mangle.h	653;"	d
glGetMultisamplefvNV	include/GL/gl_mangle.h	654;"	d
glGetNamedBufferParameterivEXT	include/GL/gl_mangle.h	667;"	d
glGetNamedBufferParameterui64vNV	include/GL/gl_mangle.h	668;"	d
glGetNamedBufferPointervEXT	include/GL/gl_mangle.h	669;"	d
glGetNamedBufferSubDataEXT	include/GL/gl_mangle.h	670;"	d
glGetNamedFramebufferAttachmentParameterivEXT	include/GL/gl_mangle.h	671;"	d
glGetNamedProgramLocalParameterIivEXT	include/GL/gl_mangle.h	675;"	d
glGetNamedProgramLocalParameterIuivEXT	include/GL/gl_mangle.h	676;"	d
glGetNamedProgramLocalParameterdvEXT	include/GL/gl_mangle.h	673;"	d
glGetNamedProgramLocalParameterfvEXT	include/GL/gl_mangle.h	674;"	d
glGetNamedProgramStringEXT	include/GL/gl_mangle.h	677;"	d
glGetNamedProgramivEXT	include/GL/gl_mangle.h	672;"	d
glGetNamedRenderbufferParameterivEXT	include/GL/gl_mangle.h	678;"	d
glGetObjectBufferfvATI	include/GL/gl_mangle.h	679;"	d
glGetObjectBufferfvATI	shared/GLee.h	7053;"	d
glGetObjectBufferivATI	include/GL/gl_mangle.h	680;"	d
glGetObjectBufferivATI	shared/GLee.h	7054;"	d
glGetObjectParameterfvARB	include/GL/gl_mangle.h	681;"	d
glGetObjectParameterfvARB	shared/GLee.h	3124;"	d
glGetObjectParameterivAPPLE	include/GL/gl_mangle.h	682;"	d
glGetObjectParameterivARB	include/GL/gl_mangle.h	683;"	d
glGetObjectParameterivARB	shared/GLee.h	3125;"	d
glGetOcclusionQueryivNV	include/GL/gl_mangle.h	684;"	d
glGetOcclusionQueryivNV	shared/GLee.h	7550;"	d
glGetOcclusionQueryuivNV	include/GL/gl_mangle.h	685;"	d
glGetOcclusionQueryuivNV	shared/GLee.h	7551;"	d
glGetPerfMonitorCounterDataAMD	include/GL/gl_mangle.h	686;"	d
glGetPerfMonitorCounterInfoAMD	include/GL/gl_mangle.h	687;"	d
glGetPerfMonitorCounterStringAMD	include/GL/gl_mangle.h	689;"	d
glGetPerfMonitorCountersAMD	include/GL/gl_mangle.h	688;"	d
glGetPerfMonitorGroupStringAMD	include/GL/gl_mangle.h	691;"	d
glGetPerfMonitorGroupsAMD	include/GL/gl_mangle.h	690;"	d
glGetPixelMapfv	include/GL/gl_mangle.h	692;"	d
glGetPixelMapuiv	include/GL/gl_mangle.h	693;"	d
glGetPixelMapusv	include/GL/gl_mangle.h	694;"	d
glGetPixelTexGenParameterfvSGIS	include/GL/gl_mangle.h	695;"	d
glGetPixelTexGenParameterfvSGIS	shared/GLee.h	3686;"	d
glGetPixelTexGenParameterivSGIS	include/GL/gl_mangle.h	696;"	d
glGetPixelTexGenParameterivSGIS	shared/GLee.h	3685;"	d
glGetPointerIndexedvEXT	include/GL/gl_mangle.h	697;"	d
glGetPointerv	include/GL/gl_mangle.h	699;"	d
glGetPointervEXT	include/GL/gl_mangle.h	698;"	d
glGetPointervEXT	shared/GLee.h	3943;"	d
glGetPolygonStipple	include/GL/gl_mangle.h	700;"	d
glGetProgramEnvParameterIivNV	include/GL/gl_mangle.h	703;"	d
glGetProgramEnvParameterIivNV	shared/GLee.h	8916;"	d
glGetProgramEnvParameterIuivNV	include/GL/gl_mangle.h	704;"	d
glGetProgramEnvParameterIuivNV	shared/GLee.h	8917;"	d
glGetProgramEnvParameterdvARB	include/GL/gl_mangle.h	701;"	d
glGetProgramEnvParameterdvARB	shared/GLee.h	2831;"	d
glGetProgramEnvParameterfvARB	include/GL/gl_mangle.h	702;"	d
glGetProgramEnvParameterfvARB	shared/GLee.h	2832;"	d
glGetProgramInfoLog	include/GL/gl_mangle.h	705;"	d
glGetProgramInfoLog	shared/GLee.h	1904;"	d
glGetProgramLocalParameterIivNV	include/GL/gl_mangle.h	711;"	d
glGetProgramLocalParameterIivNV	shared/GLee.h	8914;"	d
glGetProgramLocalParameterIuivNV	include/GL/gl_mangle.h	712;"	d
glGetProgramLocalParameterIuivNV	shared/GLee.h	8915;"	d
glGetProgramLocalParameterdvARB	include/GL/gl_mangle.h	709;"	d
glGetProgramLocalParameterdvARB	shared/GLee.h	2833;"	d
glGetProgramLocalParameterfvARB	include/GL/gl_mangle.h	710;"	d
glGetProgramLocalParameterfvARB	shared/GLee.h	2834;"	d
glGetProgramNamedParameterdvNV	include/GL/gl_mangle.h	713;"	d
glGetProgramNamedParameterdvNV	shared/GLee.h	7891;"	d
glGetProgramNamedParameterfvNV	include/GL/gl_mangle.h	714;"	d
glGetProgramNamedParameterfvNV	shared/GLee.h	7890;"	d
glGetProgramParameterdvNV	include/GL/gl_mangle.h	715;"	d
glGetProgramParameterdvNV	shared/GLee.h	6682;"	d
glGetProgramParameterfvNV	include/GL/gl_mangle.h	716;"	d
glGetProgramParameterfvNV	shared/GLee.h	6683;"	d
glGetProgramRegisterfvMESA	include/GL/gl_mangle.h	717;"	d
glGetProgramStringARB	include/GL/gl_mangle.h	718;"	d
glGetProgramStringARB	shared/GLee.h	2836;"	d
glGetProgramStringNV	include/GL/gl_mangle.h	719;"	d
glGetProgramStringNV	shared/GLee.h	6685;"	d
glGetProgramiv	include/GL/gl_mangle.h	707;"	d
glGetProgramiv	shared/GLee.h	1903;"	d
glGetProgramivARB	include/GL/gl_mangle.h	706;"	d
glGetProgramivARB	shared/GLee.h	2835;"	d
glGetProgramivNV	include/GL/gl_mangle.h	708;"	d
glGetProgramivNV	shared/GLee.h	6684;"	d
glGetQueryObjecti64vEXT	include/GL/gl_mangle.h	722;"	d
glGetQueryObjecti64vEXT	shared/GLee.h	8403;"	d
glGetQueryObjectiv	include/GL/gl_mangle.h	724;"	d
glGetQueryObjectiv	shared/GLee.h	1593;"	d
glGetQueryObjectivARB	include/GL/gl_mangle.h	723;"	d
glGetQueryObjectivARB	shared/GLee.h	2972;"	d
glGetQueryObjectui64vEXT	include/GL/gl_mangle.h	725;"	d
glGetQueryObjectui64vEXT	shared/GLee.h	8404;"	d
glGetQueryObjectuiv	include/GL/gl_mangle.h	727;"	d
glGetQueryObjectuiv	shared/GLee.h	1594;"	d
glGetQueryObjectuivARB	include/GL/gl_mangle.h	726;"	d
glGetQueryObjectuivARB	shared/GLee.h	2973;"	d
glGetQueryiv	include/GL/gl_mangle.h	721;"	d
glGetQueryiv	shared/GLee.h	1592;"	d
glGetQueryivARB	include/GL/gl_mangle.h	720;"	d
glGetQueryivARB	shared/GLee.h	2971;"	d
glGetRenderbufferParameteriv	include/GL/gl_mangle.h	729;"	d
glGetRenderbufferParameterivEXT	include/GL/gl_mangle.h	728;"	d
glGetRenderbufferParameterivEXT	shared/GLee.h	8357;"	d
glGetSeparableFilter	include/GL/gl_mangle.h	731;"	d
glGetSeparableFilter	shared/GLee.h	969;"	d
glGetSeparableFilterEXT	include/GL/gl_mangle.h	730;"	d
glGetSeparableFilterEXT	shared/GLee.h	3591;"	d
glGetShaderInfoLog	include/GL/gl_mangle.h	732;"	d
glGetShaderInfoLog	shared/GLee.h	1906;"	d
glGetShaderSource	include/GL/gl_mangle.h	735;"	d
glGetShaderSource	shared/GLee.h	1907;"	d
glGetShaderSourceARB	include/GL/gl_mangle.h	734;"	d
glGetShaderSourceARB	shared/GLee.h	3132;"	d
glGetShaderiv	include/GL/gl_mangle.h	733;"	d
glGetShaderiv	shared/GLee.h	1905;"	d
glGetSharpenTexFuncSGIS	include/GL/gl_mangle.h	736;"	d
glGetSharpenTexFuncSGIS	shared/GLee.h	3816;"	d
glGetString	include/GL/gl_mangle.h	738;"	d
glGetStringi	include/GL/gl_mangle.h	737;"	d
glGetSynciv	include/GL/gl_mangle.h	739;"	d
glGetTexBumpParameterfvATI	include/GL/gl_mangle.h	740;"	d
glGetTexBumpParameterfvATI	shared/GLee.h	6832;"	d
glGetTexBumpParameterivATI	include/GL/gl_mangle.h	741;"	d
glGetTexBumpParameterivATI	shared/GLee.h	6831;"	d
glGetTexEnvfv	include/GL/gl_mangle.h	742;"	d
glGetTexEnviv	include/GL/gl_mangle.h	743;"	d
glGetTexFilterFuncSGIS	include/GL/gl_mangle.h	744;"	d
glGetTexFilterFuncSGIS	shared/GLee.h	3435;"	d
glGetTexGendv	include/GL/gl_mangle.h	745;"	d
glGetTexGenfv	include/GL/gl_mangle.h	746;"	d
glGetTexGeniv	include/GL/gl_mangle.h	747;"	d
glGetTexImage	include/GL/gl_mangle.h	748;"	d
glGetTexLevelParameterfv	include/GL/gl_mangle.h	749;"	d
glGetTexLevelParameteriv	include/GL/gl_mangle.h	750;"	d
glGetTexParameterIiv	include/GL/gl_mangle.h	753;"	d
glGetTexParameterIivEXT	include/GL/gl_mangle.h	752;"	d
glGetTexParameterIivEXT	shared/GLee.h	8737;"	d
glGetTexParameterIuiv	include/GL/gl_mangle.h	755;"	d
glGetTexParameterIuivEXT	include/GL/gl_mangle.h	754;"	d
glGetTexParameterIuivEXT	shared/GLee.h	8738;"	d
glGetTexParameterPointervAPPLE	include/GL/gl_mangle.h	757;"	d
glGetTexParameterfv	include/GL/gl_mangle.h	751;"	d
glGetTexParameteriv	include/GL/gl_mangle.h	756;"	d
glGetTextureImageEXT	include/GL/gl_mangle.h	758;"	d
glGetTextureLevelParameterfvEXT	include/GL/gl_mangle.h	759;"	d
glGetTextureLevelParameterivEXT	include/GL/gl_mangle.h	760;"	d
glGetTextureParameterIivEXT	include/GL/gl_mangle.h	762;"	d
glGetTextureParameterIuivEXT	include/GL/gl_mangle.h	763;"	d
glGetTextureParameterfvEXT	include/GL/gl_mangle.h	761;"	d
glGetTextureParameterivEXT	include/GL/gl_mangle.h	764;"	d
glGetTrackMatrixivNV	include/GL/gl_mangle.h	765;"	d
glGetTrackMatrixivNV	shared/GLee.h	6686;"	d
glGetTransformFeedbackVarying	include/GL/gl_mangle.h	767;"	d
glGetTransformFeedbackVaryingEXT	include/GL/gl_mangle.h	766;"	d
glGetTransformFeedbackVaryingNV	include/GL/gl_mangle.h	768;"	d
glGetTransformFeedbackVaryingNV	shared/GLee.h	8839;"	d
glGetUniformBlockIndex	include/GL/gl_mangle.h	769;"	d
glGetUniformBufferSizeEXT	include/GL/gl_mangle.h	770;"	d
glGetUniformBufferSizeEXT	shared/GLee.h	8618;"	d
glGetUniformIndices	include/GL/gl_mangle.h	773;"	d
glGetUniformLocation	include/GL/gl_mangle.h	777;"	d
glGetUniformLocation	shared/GLee.h	1908;"	d
glGetUniformLocationARB	include/GL/gl_mangle.h	776;"	d
glGetUniformLocationARB	shared/GLee.h	3128;"	d
glGetUniformOffsetEXT	include/GL/gl_mangle.h	778;"	d
glGetUniformOffsetEXT	shared/GLee.h	8619;"	d
glGetUniformfv	include/GL/gl_mangle.h	772;"	d
glGetUniformfv	shared/GLee.h	1909;"	d
glGetUniformfvARB	include/GL/gl_mangle.h	771;"	d
glGetUniformfvARB	shared/GLee.h	3130;"	d
glGetUniformiv	include/GL/gl_mangle.h	775;"	d
glGetUniformiv	shared/GLee.h	1910;"	d
glGetUniformivARB	include/GL/gl_mangle.h	774;"	d
glGetUniformivARB	shared/GLee.h	3131;"	d
glGetUniformui64vNV	include/GL/gl_mangle.h	779;"	d
glGetUniformuiv	include/GL/gl_mangle.h	781;"	d
glGetUniformuivEXT	include/GL/gl_mangle.h	780;"	d
glGetUniformuivEXT	shared/GLee.h	8523;"	d
glGetVariantArrayObjectfvATI	include/GL/gl_mangle.h	782;"	d
glGetVariantArrayObjectfvATI	shared/GLee.h	7060;"	d
glGetVariantArrayObjectivATI	include/GL/gl_mangle.h	783;"	d
glGetVariantArrayObjectivATI	shared/GLee.h	7061;"	d
glGetVariantBooleanvEXT	include/GL/gl_mangle.h	784;"	d
glGetVariantBooleanvEXT	shared/GLee.h	7296;"	d
glGetVariantFloatvEXT	include/GL/gl_mangle.h	785;"	d
glGetVariantFloatvEXT	shared/GLee.h	7298;"	d
glGetVariantIntegervEXT	include/GL/gl_mangle.h	786;"	d
glGetVariantIntegervEXT	shared/GLee.h	7297;"	d
glGetVariantPointervEXT	include/GL/gl_mangle.h	787;"	d
glGetVariantPointervEXT	shared/GLee.h	7299;"	d
glGetVaryingLocationNV	include/GL/gl_mangle.h	788;"	d
glGetVaryingLocationNV	shared/GLee.h	8837;"	d
glGetVertexAttribArrayObjectfvATI	include/GL/gl_mangle.h	789;"	d
glGetVertexAttribArrayObjectfvATI	shared/GLee.h	8139;"	d
glGetVertexAttribArrayObjectivATI	include/GL/gl_mangle.h	790;"	d
glGetVertexAttribArrayObjectivATI	shared/GLee.h	8140;"	d
glGetVertexAttribIiv	include/GL/gl_mangle.h	798;"	d
glGetVertexAttribIivEXT	include/GL/gl_mangle.h	797;"	d
glGetVertexAttribIivEXT	shared/GLee.h	8555;"	d
glGetVertexAttribIuiv	include/GL/gl_mangle.h	800;"	d
glGetVertexAttribIuivEXT	include/GL/gl_mangle.h	799;"	d
glGetVertexAttribIuivEXT	shared/GLee.h	8556;"	d
glGetVertexAttribPointerv	include/GL/gl_mangle.h	805;"	d
glGetVertexAttribPointerv	shared/GLee.h	1914;"	d
glGetVertexAttribPointervARB	include/GL/gl_mangle.h	804;"	d
glGetVertexAttribPointervARB	shared/GLee.h	2840;"	d
glGetVertexAttribPointervNV	include/GL/gl_mangle.h	806;"	d
glGetVertexAttribPointervNV	shared/GLee.h	6690;"	d
glGetVertexAttribdv	include/GL/gl_mangle.h	792;"	d
glGetVertexAttribdv	shared/GLee.h	1911;"	d
glGetVertexAttribdvARB	include/GL/gl_mangle.h	791;"	d
glGetVertexAttribdvARB	shared/GLee.h	2837;"	d
glGetVertexAttribdvNV	include/GL/gl_mangle.h	793;"	d
glGetVertexAttribdvNV	shared/GLee.h	6687;"	d
glGetVertexAttribfv	include/GL/gl_mangle.h	795;"	d
glGetVertexAttribfv	shared/GLee.h	1912;"	d
glGetVertexAttribfvARB	include/GL/gl_mangle.h	794;"	d
glGetVertexAttribfvARB	shared/GLee.h	2838;"	d
glGetVertexAttribfvNV	include/GL/gl_mangle.h	796;"	d
glGetVertexAttribfvNV	shared/GLee.h	6688;"	d
glGetVertexAttribiv	include/GL/gl_mangle.h	802;"	d
glGetVertexAttribiv	shared/GLee.h	1913;"	d
glGetVertexAttribivARB	include/GL/gl_mangle.h	801;"	d
glGetVertexAttribivARB	shared/GLee.h	2839;"	d
glGetVertexAttribivNV	include/GL/gl_mangle.h	803;"	d
glGetVertexAttribivNV	shared/GLee.h	6689;"	d
glGetVideoCaptureStreamdvNV	include/GL/gl_mangle.h	808;"	d
glGetVideoCaptureStreamfvNV	include/GL/gl_mangle.h	809;"	d
glGetVideoCaptureStreamivNV	include/GL/gl_mangle.h	810;"	d
glGetVideoCaptureivNV	include/GL/gl_mangle.h	807;"	d
glGetVideoi64vNV	include/GL/gl_mangle.h	811;"	d
glGetVideoivNV	include/GL/gl_mangle.h	812;"	d
glGetVideoui64vNV	include/GL/gl_mangle.h	813;"	d
glGetVideouivNV	include/GL/gl_mangle.h	814;"	d
glGlobalAlphaFactorbSUN	include/GL/gl_mangle.h	815;"	d
glGlobalAlphaFactorbSUN	shared/GLee.h	5342;"	d
glGlobalAlphaFactordSUN	include/GL/gl_mangle.h	816;"	d
glGlobalAlphaFactordSUN	shared/GLee.h	5346;"	d
glGlobalAlphaFactorfSUN	include/GL/gl_mangle.h	817;"	d
glGlobalAlphaFactorfSUN	shared/GLee.h	5345;"	d
glGlobalAlphaFactoriSUN	include/GL/gl_mangle.h	818;"	d
glGlobalAlphaFactoriSUN	shared/GLee.h	5344;"	d
glGlobalAlphaFactorsSUN	include/GL/gl_mangle.h	819;"	d
glGlobalAlphaFactorsSUN	shared/GLee.h	5343;"	d
glGlobalAlphaFactorubSUN	include/GL/gl_mangle.h	820;"	d
glGlobalAlphaFactorubSUN	shared/GLee.h	5347;"	d
glGlobalAlphaFactoruiSUN	include/GL/gl_mangle.h	821;"	d
glGlobalAlphaFactoruiSUN	shared/GLee.h	5349;"	d
glGlobalAlphaFactorusSUN	include/GL/gl_mangle.h	822;"	d
glGlobalAlphaFactorusSUN	shared/GLee.h	5348;"	d
glHint	include/GL/gl_mangle.h	823;"	d
glHintPGI	include/GL/gl_mangle.h	824;"	d
glHintPGI	shared/GLee.h	4481;"	d
glHistogram	include/GL/gl_mangle.h	826;"	d
glHistogram	shared/GLee.h	977;"	d
glHistogramEXT	include/GL/gl_mangle.h	825;"	d
glHistogramEXT	shared/GLee.h	3522;"	d
glIglooInterfaceSGIX	include/GL/gl_mangle.h	827;"	d
glIglooInterfaceSGIX	shared/GLee.h	9021;"	d
glImageTransformParameterfHP	include/GL/gl_mangle.h	828;"	d
glImageTransformParameterfHP	shared/GLee.h	4373;"	d
glImageTransformParameterfvHP	include/GL/gl_mangle.h	829;"	d
glImageTransformParameterfvHP	shared/GLee.h	4375;"	d
glImageTransformParameteriHP	include/GL/gl_mangle.h	830;"	d
glImageTransformParameteriHP	shared/GLee.h	4372;"	d
glImageTransformParameterivHP	include/GL/gl_mangle.h	831;"	d
glImageTransformParameterivHP	shared/GLee.h	4374;"	d
glIndexFormatNV	include/GL/gl_mangle.h	835;"	d
glIndexFuncEXT	include/GL/gl_mangle.h	836;"	d
glIndexFuncEXT	shared/GLee.h	4618;"	d
glIndexMask	include/GL/gl_mangle.h	840;"	d
glIndexMaterialEXT	include/GL/gl_mangle.h	841;"	d
glIndexMaterialEXT	shared/GLee.h	4604;"	d
glIndexPointer	include/GL/gl_mangle.h	844;"	d
glIndexPointerEXT	include/GL/gl_mangle.h	842;"	d
glIndexPointerEXT	shared/GLee.h	3944;"	d
glIndexPointerListIBM	include/GL/gl_mangle.h	843;"	d
glIndexPointerListIBM	shared/GLee.h	6024;"	d
glIndexd	include/GL/gl_mangle.h	832;"	d
glIndexdv	include/GL/gl_mangle.h	833;"	d
glIndexf	include/GL/gl_mangle.h	834;"	d
glIndexfv	include/GL/gl_mangle.h	837;"	d
glIndexi	include/GL/gl_mangle.h	838;"	d
glIndexiv	include/GL/gl_mangle.h	839;"	d
glIndexs	include/GL/gl_mangle.h	845;"	d
glIndexsv	include/GL/gl_mangle.h	846;"	d
glIndexub	include/GL/gl_mangle.h	847;"	d
glIndexubv	include/GL/gl_mangle.h	848;"	d
glInitNames	include/GL/gl_mangle.h	849;"	d
glInsertComponentEXT	include/GL/gl_mangle.h	850;"	d
glInsertComponentEXT	shared/GLee.h	7274;"	d
glInstrumentsBufferSGIX	include/GL/gl_mangle.h	851;"	d
glInstrumentsBufferSGIX	shared/GLee.h	4199;"	d
glInterleavedArrays	include/GL/gl_mangle.h	852;"	d
glIsAsyncMarkerSGIX	include/GL/gl_mangle.h	853;"	d
glIsAsyncMarkerSGIX	shared/GLee.h	4899;"	d
glIsBuffer	include/GL/gl_mangle.h	855;"	d
glIsBuffer	shared/GLee.h	1598;"	d
glIsBufferARB	include/GL/gl_mangle.h	854;"	d
glIsBufferARB	shared/GLee.h	2929;"	d
glIsBufferResidentNV	include/GL/gl_mangle.h	856;"	d
glIsEnabled	include/GL/gl_mangle.h	859;"	d
glIsEnabledIndexedEXT	include/GL/gl_mangle.h	858;"	d
glIsEnabledIndexedEXT	shared/GLee.h	9047;"	d
glIsEnabledi	include/GL/gl_mangle.h	857;"	d
glIsFenceAPPLE	include/GL/gl_mangle.h	860;"	d
glIsFenceAPPLE	shared/GLee.h	7696;"	d
glIsFenceNV	include/GL/gl_mangle.h	861;"	d
glIsFenceNV	shared/GLee.h	6241;"	d
glIsFramebuffer	include/GL/gl_mangle.h	863;"	d
glIsFramebufferEXT	include/GL/gl_mangle.h	862;"	d
glIsFramebufferEXT	shared/GLee.h	8358;"	d
glIsList	include/GL/gl_mangle.h	864;"	d
glIsNamedBufferResidentNV	include/GL/gl_mangle.h	865;"	d
glIsObjectBufferATI	include/GL/gl_mangle.h	866;"	d
glIsObjectBufferATI	shared/GLee.h	7051;"	d
glIsOcclusionQueryNV	include/GL/gl_mangle.h	867;"	d
glIsOcclusionQueryNV	shared/GLee.h	7547;"	d
glIsProgram	include/GL/gl_mangle.h	869;"	d
glIsProgram	shared/GLee.h	1915;"	d
glIsProgramARB	include/GL/gl_mangle.h	868;"	d
glIsProgramARB	shared/GLee.h	2841;"	d
glIsProgramNV	include/GL/gl_mangle.h	870;"	d
glIsProgramNV	shared/GLee.h	6691;"	d
glIsQuery	include/GL/gl_mangle.h	872;"	d
glIsQuery	shared/GLee.h	1589;"	d
glIsQueryARB	include/GL/gl_mangle.h	871;"	d
glIsQueryARB	shared/GLee.h	2968;"	d
glIsRenderbuffer	include/GL/gl_mangle.h	874;"	d
glIsRenderbufferEXT	include/GL/gl_mangle.h	873;"	d
glIsRenderbufferEXT	shared/GLee.h	8352;"	d
glIsShader	include/GL/gl_mangle.h	875;"	d
glIsShader	shared/GLee.h	1916;"	d
glIsSync	include/GL/gl_mangle.h	876;"	d
glIsTexture	include/GL/gl_mangle.h	878;"	d
glIsTextureEXT	include/GL/gl_mangle.h	877;"	d
glIsTextureEXT	shared/GLee.h	3775;"	d
glIsTransformFeedbackNV	include/GL/gl_mangle.h	879;"	d
glIsVariantEnabledEXT	include/GL/gl_mangle.h	880;"	d
glIsVariantEnabledEXT	shared/GLee.h	7295;"	d
glIsVertexArray	include/GL/gl_mangle.h	882;"	d
glIsVertexArrayAPPLE	include/GL/gl_mangle.h	881;"	d
glIsVertexArrayAPPLE	shared/GLee.h	7721;"	d
glIsVertexAttribEnabledAPPLE	include/GL/gl_mangle.h	883;"	d
glLightEnviEXT	shared/GLee.h	9154;"	d
glLightEnviSGIX	include/GL/gl_mangle.h	884;"	d
glLightEnviSGIX	shared/GLee.h	4759;"	d
glLightModelf	include/GL/gl_mangle.h	889;"	d
glLightModelfv	include/GL/gl_mangle.h	890;"	d
glLightModeli	include/GL/gl_mangle.h	891;"	d
glLightModeliv	include/GL/gl_mangle.h	892;"	d
glLightf	include/GL/gl_mangle.h	885;"	d
glLightfv	include/GL/gl_mangle.h	886;"	d
glLighti	include/GL/gl_mangle.h	887;"	d
glLightiv	include/GL/gl_mangle.h	888;"	d
glLineStipple	include/GL/gl_mangle.h	893;"	d
glLineWidth	include/GL/gl_mangle.h	894;"	d
glLinkProgram	include/GL/gl_mangle.h	896;"	d
glLinkProgram	shared/GLee.h	1917;"	d
glLinkProgramARB	include/GL/gl_mangle.h	895;"	d
glLinkProgramARB	shared/GLee.h	3102;"	d
glListBase	include/GL/gl_mangle.h	897;"	d
glListParameterfSGIX	include/GL/gl_mangle.h	898;"	d
glListParameterfSGIX	shared/GLee.h	4541;"	d
glListParameterfvSGIX	include/GL/gl_mangle.h	899;"	d
glListParameterfvSGIX	shared/GLee.h	4542;"	d
glListParameteriSGIX	include/GL/gl_mangle.h	900;"	d
glListParameteriSGIX	shared/GLee.h	4543;"	d
glListParameterivSGIX	include/GL/gl_mangle.h	901;"	d
glListParameterivSGIX	shared/GLee.h	4544;"	d
glLoadIdentity	include/GL/gl_mangle.h	903;"	d
glLoadIdentityDeformationMapSGIX	include/GL/gl_mangle.h	902;"	d
glLoadIdentityDeformationMapSGIX	shared/GLee.h	4274;"	d
glLoadMatrix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^glLoadMatrix( const Imath::M44f& m ) $/;"	f
glLoadMatrix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^glLoadMatrix( const Imath::M44f* m ) $/;"	f
glLoadMatrix	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^glLoadMatrix( const Imath::M44f& m ) $/;"	f
glLoadMatrix	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^glLoadMatrix( const Imath::M44f* m ) $/;"	f
glLoadMatrixd	include/GL/gl_mangle.h	904;"	d
glLoadMatrixf	include/GL/gl_mangle.h	905;"	d
glLoadName	include/GL/gl_mangle.h	906;"	d
glLoadProgramNV	include/GL/gl_mangle.h	907;"	d
glLoadProgramNV	shared/GLee.h	6692;"	d
glLoadTransposeMatrixd	include/GL/gl_mangle.h	909;"	d
glLoadTransposeMatrixd	shared/GLee.h	1298;"	d
glLoadTransposeMatrixdARB	include/GL/gl_mangle.h	908;"	d
glLoadTransposeMatrixdARB	shared/GLee.h	2192;"	d
glLoadTransposeMatrixf	include/GL/gl_mangle.h	911;"	d
glLoadTransposeMatrixf	shared/GLee.h	1297;"	d
glLoadTransposeMatrixfARB	include/GL/gl_mangle.h	910;"	d
glLoadTransposeMatrixfARB	shared/GLee.h	2191;"	d
glLockArraysEXT	include/GL/gl_mangle.h	912;"	d
glLockArraysEXT	shared/GLee.h	4649;"	d
glLogicOp	include/GL/gl_mangle.h	913;"	d
glMakeBufferNonResidentNV	include/GL/gl_mangle.h	914;"	d
glMakeBufferResidentNV	include/GL/gl_mangle.h	915;"	d
glMap1d	include/GL/gl_mangle.h	916;"	d
glMap1f	include/GL/gl_mangle.h	917;"	d
glMap2d	include/GL/gl_mangle.h	918;"	d
glMap2f	include/GL/gl_mangle.h	919;"	d
glMapBuffer	include/GL/gl_mangle.h	921;"	d
glMapBuffer	shared/GLee.h	1602;"	d
glMapBufferARB	include/GL/gl_mangle.h	920;"	d
glMapBufferARB	shared/GLee.h	2933;"	d
glMapBufferRange	include/GL/gl_mangle.h	922;"	d
glMapControlPointsNV	include/GL/gl_mangle.h	923;"	d
glMapControlPointsNV	shared/GLee.h	6305;"	d
glMapGrid1d	include/GL/gl_mangle.h	924;"	d
glMapGrid1f	include/GL/gl_mangle.h	925;"	d
glMapGrid2d	include/GL/gl_mangle.h	926;"	d
glMapGrid2f	include/GL/gl_mangle.h	927;"	d
glMapNamedBufferEXT	include/GL/gl_mangle.h	928;"	d
glMapObjectBufferATI	include/GL/gl_mangle.h	929;"	d
glMapObjectBufferATI	shared/GLee.h	8104;"	d
glMapParameterfvNV	include/GL/gl_mangle.h	930;"	d
glMapParameterfvNV	shared/GLee.h	6307;"	d
glMapParameterivNV	include/GL/gl_mangle.h	931;"	d
glMapParameterivNV	shared/GLee.h	6306;"	d
glMapVertexAttrib1dAPPLE	include/GL/gl_mangle.h	932;"	d
glMapVertexAttrib1fAPPLE	include/GL/gl_mangle.h	933;"	d
glMapVertexAttrib2dAPPLE	include/GL/gl_mangle.h	934;"	d
glMapVertexAttrib2fAPPLE	include/GL/gl_mangle.h	935;"	d
glMaterialf	include/GL/gl_mangle.h	936;"	d
glMaterialfv	include/GL/gl_mangle.h	937;"	d
glMateriali	include/GL/gl_mangle.h	938;"	d
glMaterialiv	include/GL/gl_mangle.h	939;"	d
glMatrixFrustumEXT	include/GL/gl_mangle.h	940;"	d
glMatrixIndexPointerARB	include/GL/gl_mangle.h	941;"	d
glMatrixIndexPointerARB	shared/GLee.h	2422;"	d
glMatrixIndexubvARB	include/GL/gl_mangle.h	942;"	d
glMatrixIndexubvARB	shared/GLee.h	2419;"	d
glMatrixIndexuivARB	include/GL/gl_mangle.h	943;"	d
glMatrixIndexuivARB	shared/GLee.h	2421;"	d
glMatrixIndexusvARB	include/GL/gl_mangle.h	944;"	d
glMatrixIndexusvARB	shared/GLee.h	2420;"	d
glMatrixLoadIdentityEXT	include/GL/gl_mangle.h	947;"	d
glMatrixLoadTransposedEXT	include/GL/gl_mangle.h	948;"	d
glMatrixLoadTransposefEXT	include/GL/gl_mangle.h	949;"	d
glMatrixLoaddEXT	include/GL/gl_mangle.h	945;"	d
glMatrixLoadfEXT	include/GL/gl_mangle.h	946;"	d
glMatrixMode	include/GL/gl_mangle.h	950;"	d
glMatrixMultTransposedEXT	include/GL/gl_mangle.h	953;"	d
glMatrixMultTransposefEXT	include/GL/gl_mangle.h	954;"	d
glMatrixMultdEXT	include/GL/gl_mangle.h	951;"	d
glMatrixMultfEXT	include/GL/gl_mangle.h	952;"	d
glMatrixOrthoEXT	include/GL/gl_mangle.h	955;"	d
glMatrixPopEXT	include/GL/gl_mangle.h	956;"	d
glMatrixPushEXT	include/GL/gl_mangle.h	957;"	d
glMatrixRotatedEXT	include/GL/gl_mangle.h	958;"	d
glMatrixRotatefEXT	include/GL/gl_mangle.h	959;"	d
glMatrixScaledEXT	include/GL/gl_mangle.h	960;"	d
glMatrixScalefEXT	include/GL/gl_mangle.h	961;"	d
glMatrixTranslatedEXT	include/GL/gl_mangle.h	962;"	d
glMatrixTranslatefEXT	include/GL/gl_mangle.h	963;"	d
glMinSampleShading	include/GL/gl_mangle.h	966;"	d
glMinmax	include/GL/gl_mangle.h	965;"	d
glMinmax	shared/GLee.h	978;"	d
glMinmaxEXT	include/GL/gl_mangle.h	964;"	d
glMinmaxEXT	shared/GLee.h	3523;"	d
glMultMatrix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^glMultMatrix( const Imath::M44f& m ) $/;"	f
glMultMatrix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^glMultMatrix( const Imath::M44f* m ) $/;"	f
glMultMatrix	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^glMultMatrix( const Imath::M44f& m ) $/;"	f
glMultMatrix	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^glMultMatrix( const Imath::M44f* m ) $/;"	f
glMultMatrixd	include/GL/gl_mangle.h	1073;"	d
glMultMatrixf	include/GL/gl_mangle.h	1074;"	d
glMultTransposeMatrixd	include/GL/gl_mangle.h	1076;"	d
glMultTransposeMatrixd	shared/GLee.h	1300;"	d
glMultTransposeMatrixdARB	include/GL/gl_mangle.h	1075;"	d
glMultTransposeMatrixdARB	shared/GLee.h	2194;"	d
glMultTransposeMatrixf	include/GL/gl_mangle.h	1078;"	d
glMultTransposeMatrixf	shared/GLee.h	1299;"	d
glMultTransposeMatrixfARB	include/GL/gl_mangle.h	1077;"	d
glMultTransposeMatrixfARB	shared/GLee.h	2193;"	d
glMultiDrawArrays	include/GL/gl_mangle.h	968;"	d
glMultiDrawArrays	shared/GLee.h	1452;"	d
glMultiDrawArraysEXT	include/GL/gl_mangle.h	967;"	d
glMultiDrawArraysEXT	shared/GLee.h	5115;"	d
glMultiDrawElementArrayAPPLE	include/GL/gl_mangle.h	969;"	d
glMultiDrawElementArrayAPPLE	shared/GLee.h	7665;"	d
glMultiDrawElements	include/GL/gl_mangle.h	972;"	d
glMultiDrawElements	shared/GLee.h	1453;"	d
glMultiDrawElementsBaseVertex	include/GL/gl_mangle.h	970;"	d
glMultiDrawElementsEXT	include/GL/gl_mangle.h	971;"	d
glMultiDrawElementsEXT	shared/GLee.h	5116;"	d
glMultiDrawRangeElementArrayAPPLE	include/GL/gl_mangle.h	973;"	d
glMultiDrawRangeElementArrayAPPLE	shared/GLee.h	7666;"	d
glMultiModeDrawArraysIBM	include/GL/gl_mangle.h	974;"	d
glMultiModeDrawArraysIBM	shared/GLee.h	5978;"	d
glMultiModeDrawElementsIBM	include/GL/gl_mangle.h	975;"	d
glMultiModeDrawElementsIBM	shared/GLee.h	5979;"	d
glMultiTexBufferEXT	include/GL/gl_mangle.h	976;"	d
glMultiTexCoord1d	include/GL/gl_mangle.h	978;"	d
glMultiTexCoord1d	shared/GLee.h	1265;"	d
glMultiTexCoord1dARB	include/GL/gl_mangle.h	977;"	d
glMultiTexCoord1dARB	shared/GLee.h	2139;"	d
glMultiTexCoord1dv	include/GL/gl_mangle.h	980;"	d
glMultiTexCoord1dv	shared/GLee.h	1266;"	d
glMultiTexCoord1dvARB	include/GL/gl_mangle.h	979;"	d
glMultiTexCoord1dvARB	shared/GLee.h	2140;"	d
glMultiTexCoord1f	include/GL/gl_mangle.h	982;"	d
glMultiTexCoord1f	shared/GLee.h	1267;"	d
glMultiTexCoord1fARB	include/GL/gl_mangle.h	981;"	d
glMultiTexCoord1fARB	shared/GLee.h	2141;"	d
glMultiTexCoord1fv	include/GL/gl_mangle.h	984;"	d
glMultiTexCoord1fv	shared/GLee.h	1268;"	d
glMultiTexCoord1fvARB	include/GL/gl_mangle.h	983;"	d
glMultiTexCoord1fvARB	shared/GLee.h	2142;"	d
glMultiTexCoord1hNV	include/GL/gl_mangle.h	985;"	d
glMultiTexCoord1hNV	shared/GLee.h	8013;"	d
glMultiTexCoord1hvNV	include/GL/gl_mangle.h	986;"	d
glMultiTexCoord1hvNV	shared/GLee.h	8014;"	d
glMultiTexCoord1i	include/GL/gl_mangle.h	988;"	d
glMultiTexCoord1i	shared/GLee.h	1269;"	d
glMultiTexCoord1iARB	include/GL/gl_mangle.h	987;"	d
glMultiTexCoord1iARB	shared/GLee.h	2143;"	d
glMultiTexCoord1iv	include/GL/gl_mangle.h	990;"	d
glMultiTexCoord1iv	shared/GLee.h	1270;"	d
glMultiTexCoord1ivARB	include/GL/gl_mangle.h	989;"	d
glMultiTexCoord1ivARB	shared/GLee.h	2144;"	d
glMultiTexCoord1s	include/GL/gl_mangle.h	992;"	d
glMultiTexCoord1s	shared/GLee.h	1271;"	d
glMultiTexCoord1sARB	include/GL/gl_mangle.h	991;"	d
glMultiTexCoord1sARB	shared/GLee.h	2145;"	d
glMultiTexCoord1sv	include/GL/gl_mangle.h	994;"	d
glMultiTexCoord1sv	shared/GLee.h	1272;"	d
glMultiTexCoord1svARB	include/GL/gl_mangle.h	993;"	d
glMultiTexCoord1svARB	shared/GLee.h	2146;"	d
glMultiTexCoord2d	include/GL/gl_mangle.h	996;"	d
glMultiTexCoord2d	shared/GLee.h	1273;"	d
glMultiTexCoord2dARB	include/GL/gl_mangle.h	995;"	d
glMultiTexCoord2dARB	shared/GLee.h	2147;"	d
glMultiTexCoord2dv	include/GL/gl_mangle.h	998;"	d
glMultiTexCoord2dv	shared/GLee.h	1274;"	d
glMultiTexCoord2dvARB	include/GL/gl_mangle.h	997;"	d
glMultiTexCoord2dvARB	shared/GLee.h	2148;"	d
glMultiTexCoord2f	include/GL/gl_mangle.h	1000;"	d
glMultiTexCoord2f	shared/GLee.h	1275;"	d
glMultiTexCoord2fARB	include/GL/gl_mangle.h	999;"	d
glMultiTexCoord2fARB	shared/GLee.h	2149;"	d
glMultiTexCoord2fv	include/GL/gl_mangle.h	1002;"	d
glMultiTexCoord2fv	shared/GLee.h	1276;"	d
glMultiTexCoord2fvARB	include/GL/gl_mangle.h	1001;"	d
glMultiTexCoord2fvARB	shared/GLee.h	2150;"	d
glMultiTexCoord2hNV	include/GL/gl_mangle.h	1003;"	d
glMultiTexCoord2hNV	shared/GLee.h	8015;"	d
glMultiTexCoord2hvNV	include/GL/gl_mangle.h	1004;"	d
glMultiTexCoord2hvNV	shared/GLee.h	8016;"	d
glMultiTexCoord2i	include/GL/gl_mangle.h	1006;"	d
glMultiTexCoord2i	shared/GLee.h	1277;"	d
glMultiTexCoord2iARB	include/GL/gl_mangle.h	1005;"	d
glMultiTexCoord2iARB	shared/GLee.h	2151;"	d
glMultiTexCoord2iv	include/GL/gl_mangle.h	1008;"	d
glMultiTexCoord2iv	shared/GLee.h	1278;"	d
glMultiTexCoord2ivARB	include/GL/gl_mangle.h	1007;"	d
glMultiTexCoord2ivARB	shared/GLee.h	2152;"	d
glMultiTexCoord2s	include/GL/gl_mangle.h	1010;"	d
glMultiTexCoord2s	shared/GLee.h	1279;"	d
glMultiTexCoord2sARB	include/GL/gl_mangle.h	1009;"	d
glMultiTexCoord2sARB	shared/GLee.h	2153;"	d
glMultiTexCoord2sv	include/GL/gl_mangle.h	1012;"	d
glMultiTexCoord2sv	shared/GLee.h	1280;"	d
glMultiTexCoord2svARB	include/GL/gl_mangle.h	1011;"	d
glMultiTexCoord2svARB	shared/GLee.h	2154;"	d
glMultiTexCoord3d	include/GL/gl_mangle.h	1014;"	d
glMultiTexCoord3d	shared/GLee.h	1281;"	d
glMultiTexCoord3dARB	include/GL/gl_mangle.h	1013;"	d
glMultiTexCoord3dARB	shared/GLee.h	2155;"	d
glMultiTexCoord3dv	include/GL/gl_mangle.h	1016;"	d
glMultiTexCoord3dv	shared/GLee.h	1282;"	d
glMultiTexCoord3dvARB	include/GL/gl_mangle.h	1015;"	d
glMultiTexCoord3dvARB	shared/GLee.h	2156;"	d
glMultiTexCoord3f	include/GL/gl_mangle.h	1018;"	d
glMultiTexCoord3f	shared/GLee.h	1283;"	d
glMultiTexCoord3fARB	include/GL/gl_mangle.h	1017;"	d
glMultiTexCoord3fARB	shared/GLee.h	2157;"	d
glMultiTexCoord3fv	include/GL/gl_mangle.h	1020;"	d
glMultiTexCoord3fv	shared/GLee.h	1284;"	d
glMultiTexCoord3fvARB	include/GL/gl_mangle.h	1019;"	d
glMultiTexCoord3fvARB	shared/GLee.h	2158;"	d
glMultiTexCoord3hNV	include/GL/gl_mangle.h	1021;"	d
glMultiTexCoord3hNV	shared/GLee.h	8017;"	d
glMultiTexCoord3hvNV	include/GL/gl_mangle.h	1022;"	d
glMultiTexCoord3hvNV	shared/GLee.h	8018;"	d
glMultiTexCoord3i	include/GL/gl_mangle.h	1024;"	d
glMultiTexCoord3i	shared/GLee.h	1285;"	d
glMultiTexCoord3iARB	include/GL/gl_mangle.h	1023;"	d
glMultiTexCoord3iARB	shared/GLee.h	2159;"	d
glMultiTexCoord3iv	include/GL/gl_mangle.h	1026;"	d
glMultiTexCoord3iv	shared/GLee.h	1286;"	d
glMultiTexCoord3ivARB	include/GL/gl_mangle.h	1025;"	d
glMultiTexCoord3ivARB	shared/GLee.h	2160;"	d
glMultiTexCoord3s	include/GL/gl_mangle.h	1028;"	d
glMultiTexCoord3s	shared/GLee.h	1287;"	d
glMultiTexCoord3sARB	include/GL/gl_mangle.h	1027;"	d
glMultiTexCoord3sARB	shared/GLee.h	2161;"	d
glMultiTexCoord3sv	include/GL/gl_mangle.h	1030;"	d
glMultiTexCoord3sv	shared/GLee.h	1288;"	d
glMultiTexCoord3svARB	include/GL/gl_mangle.h	1029;"	d
glMultiTexCoord3svARB	shared/GLee.h	2162;"	d
glMultiTexCoord4d	include/GL/gl_mangle.h	1032;"	d
glMultiTexCoord4d	shared/GLee.h	1289;"	d
glMultiTexCoord4dARB	include/GL/gl_mangle.h	1031;"	d
glMultiTexCoord4dARB	shared/GLee.h	2163;"	d
glMultiTexCoord4dv	include/GL/gl_mangle.h	1034;"	d
glMultiTexCoord4dv	shared/GLee.h	1290;"	d
glMultiTexCoord4dvARB	include/GL/gl_mangle.h	1033;"	d
glMultiTexCoord4dvARB	shared/GLee.h	2164;"	d
glMultiTexCoord4f	include/GL/gl_mangle.h	1036;"	d
glMultiTexCoord4f	shared/GLee.h	1291;"	d
glMultiTexCoord4fARB	include/GL/gl_mangle.h	1035;"	d
glMultiTexCoord4fARB	shared/GLee.h	2165;"	d
glMultiTexCoord4fv	include/GL/gl_mangle.h	1038;"	d
glMultiTexCoord4fv	shared/GLee.h	1292;"	d
glMultiTexCoord4fvARB	include/GL/gl_mangle.h	1037;"	d
glMultiTexCoord4fvARB	shared/GLee.h	2166;"	d
glMultiTexCoord4hNV	include/GL/gl_mangle.h	1039;"	d
glMultiTexCoord4hNV	shared/GLee.h	8019;"	d
glMultiTexCoord4hvNV	include/GL/gl_mangle.h	1040;"	d
glMultiTexCoord4hvNV	shared/GLee.h	8020;"	d
glMultiTexCoord4i	include/GL/gl_mangle.h	1042;"	d
glMultiTexCoord4i	shared/GLee.h	1293;"	d
glMultiTexCoord4iARB	include/GL/gl_mangle.h	1041;"	d
glMultiTexCoord4iARB	shared/GLee.h	2167;"	d
glMultiTexCoord4iv	include/GL/gl_mangle.h	1044;"	d
glMultiTexCoord4iv	shared/GLee.h	1294;"	d
glMultiTexCoord4ivARB	include/GL/gl_mangle.h	1043;"	d
glMultiTexCoord4ivARB	shared/GLee.h	2168;"	d
glMultiTexCoord4s	include/GL/gl_mangle.h	1046;"	d
glMultiTexCoord4s	shared/GLee.h	1295;"	d
glMultiTexCoord4sARB	include/GL/gl_mangle.h	1045;"	d
glMultiTexCoord4sARB	shared/GLee.h	2169;"	d
glMultiTexCoord4sv	include/GL/gl_mangle.h	1048;"	d
glMultiTexCoord4sv	shared/GLee.h	1296;"	d
glMultiTexCoord4svARB	include/GL/gl_mangle.h	1047;"	d
glMultiTexCoord4svARB	shared/GLee.h	2170;"	d
glMultiTexCoordPointerEXT	include/GL/gl_mangle.h	1049;"	d
glMultiTexEnvfEXT	include/GL/gl_mangle.h	1050;"	d
glMultiTexEnvfvEXT	include/GL/gl_mangle.h	1051;"	d
glMultiTexEnviEXT	include/GL/gl_mangle.h	1052;"	d
glMultiTexEnvivEXT	include/GL/gl_mangle.h	1053;"	d
glMultiTexGendEXT	include/GL/gl_mangle.h	1054;"	d
glMultiTexGendvEXT	include/GL/gl_mangle.h	1055;"	d
glMultiTexGenfEXT	include/GL/gl_mangle.h	1056;"	d
glMultiTexGenfvEXT	include/GL/gl_mangle.h	1057;"	d
glMultiTexGeniEXT	include/GL/gl_mangle.h	1058;"	d
glMultiTexGenivEXT	include/GL/gl_mangle.h	1059;"	d
glMultiTexImage1DEXT	include/GL/gl_mangle.h	1060;"	d
glMultiTexImage2DEXT	include/GL/gl_mangle.h	1061;"	d
glMultiTexImage3DEXT	include/GL/gl_mangle.h	1062;"	d
glMultiTexParameterIivEXT	include/GL/gl_mangle.h	1066;"	d
glMultiTexParameterIuivEXT	include/GL/gl_mangle.h	1067;"	d
glMultiTexParameterfEXT	include/GL/gl_mangle.h	1063;"	d
glMultiTexParameterfvEXT	include/GL/gl_mangle.h	1064;"	d
glMultiTexParameteriEXT	include/GL/gl_mangle.h	1065;"	d
glMultiTexParameterivEXT	include/GL/gl_mangle.h	1068;"	d
glMultiTexRenderbufferEXT	include/GL/gl_mangle.h	1069;"	d
glMultiTexSubImage1DEXT	include/GL/gl_mangle.h	1070;"	d
glMultiTexSubImage2DEXT	include/GL/gl_mangle.h	1071;"	d
glMultiTexSubImage3DEXT	include/GL/gl_mangle.h	1072;"	d
glNamedBufferDataEXT	include/GL/gl_mangle.h	1079;"	d
glNamedBufferSubDataEXT	include/GL/gl_mangle.h	1080;"	d
glNamedFramebufferRenderbufferEXT	include/GL/gl_mangle.h	1081;"	d
glNamedFramebufferTexture1DEXT	include/GL/gl_mangle.h	1082;"	d
glNamedFramebufferTexture2DEXT	include/GL/gl_mangle.h	1083;"	d
glNamedFramebufferTexture3DEXT	include/GL/gl_mangle.h	1084;"	d
glNamedFramebufferTextureEXT	include/GL/gl_mangle.h	1085;"	d
glNamedFramebufferTextureFaceEXT	include/GL/gl_mangle.h	1086;"	d
glNamedFramebufferTextureLayerEXT	include/GL/gl_mangle.h	1087;"	d
glNamedMakeBufferNonResidentNV	include/GL/gl_mangle.h	1088;"	d
glNamedMakeBufferResidentNV	include/GL/gl_mangle.h	1089;"	d
glNamedProgramLocalParameter4dEXT	include/GL/gl_mangle.h	1090;"	d
glNamedProgramLocalParameter4dvEXT	include/GL/gl_mangle.h	1091;"	d
glNamedProgramLocalParameter4fEXT	include/GL/gl_mangle.h	1092;"	d
glNamedProgramLocalParameter4fvEXT	include/GL/gl_mangle.h	1093;"	d
glNamedProgramLocalParameterI4iEXT	include/GL/gl_mangle.h	1094;"	d
glNamedProgramLocalParameterI4ivEXT	include/GL/gl_mangle.h	1095;"	d
glNamedProgramLocalParameterI4uiEXT	include/GL/gl_mangle.h	1096;"	d
glNamedProgramLocalParameterI4uivEXT	include/GL/gl_mangle.h	1097;"	d
glNamedProgramLocalParameters4fvEXT	include/GL/gl_mangle.h	1098;"	d
glNamedProgramLocalParametersI4ivEXT	include/GL/gl_mangle.h	1099;"	d
glNamedProgramLocalParametersI4uivEXT	include/GL/gl_mangle.h	1100;"	d
glNamedProgramStringEXT	include/GL/gl_mangle.h	1101;"	d
glNamedRenderbufferStorageEXT	include/GL/gl_mangle.h	1102;"	d
glNamedRenderbufferStorageMultisampleCoverageEXT	include/GL/gl_mangle.h	1103;"	d
glNamedRenderbufferStorageMultisampleEXT	include/GL/gl_mangle.h	1104;"	d
glNewList	include/GL/gl_mangle.h	1105;"	d
glNewObjectBufferATI	include/GL/gl_mangle.h	1106;"	d
glNewObjectBufferATI	shared/GLee.h	7050;"	d
glNormal	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^inline void glNormal    ( const Imath::V3f &n ) { glNormal3f(n.x,n.y,n.z);   }$/;"	f
glNormal	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^inline void glNormal    ( const Imath::V3f &n ) { glNormal3f(n.x,n.y,n.z);   }$/;"	f
glNormal3b	include/GL/gl_mangle.h	1107;"	d
glNormal3bv	include/GL/gl_mangle.h	1108;"	d
glNormal3d	include/GL/gl_mangle.h	1109;"	d
glNormal3dv	include/GL/gl_mangle.h	1110;"	d
glNormal3f	include/GL/gl_mangle.h	1111;"	d
glNormal3fVertex3fSUN	include/GL/gl_mangle.h	1112;"	d
glNormal3fVertex3fSUN	shared/GLee.h	5490;"	d
glNormal3fVertex3fvSUN	include/GL/gl_mangle.h	1113;"	d
glNormal3fVertex3fvSUN	shared/GLee.h	5491;"	d
glNormal3fv	include/GL/gl_mangle.h	1114;"	d
glNormal3hNV	include/GL/gl_mangle.h	1115;"	d
glNormal3hNV	shared/GLee.h	7999;"	d
glNormal3hvNV	include/GL/gl_mangle.h	1116;"	d
glNormal3hvNV	shared/GLee.h	8000;"	d
glNormal3i	include/GL/gl_mangle.h	1117;"	d
glNormal3iv	include/GL/gl_mangle.h	1118;"	d
glNormal3s	include/GL/gl_mangle.h	1119;"	d
glNormal3sv	include/GL/gl_mangle.h	1120;"	d
glNormalFormatNV	include/GL/gl_mangle.h	1121;"	d
glNormalPointer	include/GL/gl_mangle.h	1124;"	d
glNormalPointerEXT	include/GL/gl_mangle.h	1122;"	d
glNormalPointerEXT	shared/GLee.h	3945;"	d
glNormalPointerListIBM	include/GL/gl_mangle.h	1123;"	d
glNormalPointerListIBM	shared/GLee.h	6025;"	d
glNormalPointervINTEL	include/GL/gl_mangle.h	1125;"	d
glNormalPointervINTEL	shared/GLee.h	4954;"	d
glNormalStream3bATI	include/GL/gl_mangle.h	1126;"	d
glNormalStream3bATI	shared/GLee.h	7446;"	d
glNormalStream3bvATI	include/GL/gl_mangle.h	1127;"	d
glNormalStream3bvATI	shared/GLee.h	7447;"	d
glNormalStream3dATI	include/GL/gl_mangle.h	1128;"	d
glNormalStream3dATI	shared/GLee.h	7454;"	d
glNormalStream3dvATI	include/GL/gl_mangle.h	1129;"	d
glNormalStream3dvATI	shared/GLee.h	7455;"	d
glNormalStream3fATI	include/GL/gl_mangle.h	1130;"	d
glNormalStream3fATI	shared/GLee.h	7452;"	d
glNormalStream3fvATI	include/GL/gl_mangle.h	1131;"	d
glNormalStream3fvATI	shared/GLee.h	7453;"	d
glNormalStream3iATI	include/GL/gl_mangle.h	1132;"	d
glNormalStream3iATI	shared/GLee.h	7450;"	d
glNormalStream3ivATI	include/GL/gl_mangle.h	1133;"	d
glNormalStream3ivATI	shared/GLee.h	7451;"	d
glNormalStream3sATI	include/GL/gl_mangle.h	1134;"	d
glNormalStream3sATI	shared/GLee.h	7448;"	d
glNormalStream3svATI	include/GL/gl_mangle.h	1135;"	d
glNormalStream3svATI	shared/GLee.h	7449;"	d
glObjectPurgeableAPPLE	include/GL/gl_mangle.h	1136;"	d
glObjectUnpurgeableAPPLE	include/GL/gl_mangle.h	1137;"	d
glOrtho	include/GL/gl_mangle.h	1138;"	d
glOrthofOES	shared/GLee.h	9317;"	d
glPNTrianglesfATI	include/GL/gl_mangle.h	1160;"	d
glPNTrianglesfATI	shared/GLee.h	7009;"	d
glPNTrianglesiATI	include/GL/gl_mangle.h	1161;"	d
glPNTrianglesiATI	shared/GLee.h	7008;"	d
glPassTexCoordATI	include/GL/gl_mangle.h	1139;"	d
glPassTexCoordATI	shared/GLee.h	6978;"	d
glPassThrough	include/GL/gl_mangle.h	1140;"	d
glPauseTransformFeedbackNV	include/GL/gl_mangle.h	1141;"	d
glPixelDataRangeNV	include/GL/gl_mangle.h	1142;"	d
glPixelDataRangeNV	shared/GLee.h	8057;"	d
glPixelMapfv	include/GL/gl_mangle.h	1143;"	d
glPixelMapuiv	include/GL/gl_mangle.h	1144;"	d
glPixelMapusv	include/GL/gl_mangle.h	1145;"	d
glPixelStoref	include/GL/gl_mangle.h	1146;"	d
glPixelStorei	include/GL/gl_mangle.h	1147;"	d
glPixelTexGenParameterfSGIS	include/GL/gl_mangle.h	1148;"	d
glPixelTexGenParameterfSGIS	shared/GLee.h	3683;"	d
glPixelTexGenParameterfvSGIS	include/GL/gl_mangle.h	1149;"	d
glPixelTexGenParameterfvSGIS	shared/GLee.h	3684;"	d
glPixelTexGenParameteriSGIS	include/GL/gl_mangle.h	1150;"	d
glPixelTexGenParameteriSGIS	shared/GLee.h	3681;"	d
glPixelTexGenParameterivSGIS	include/GL/gl_mangle.h	1151;"	d
glPixelTexGenParameterivSGIS	shared/GLee.h	3682;"	d
glPixelTexGenSGIX	include/GL/gl_mangle.h	1152;"	d
glPixelTexGenSGIX	shared/GLee.h	3699;"	d
glPixelTransferf	include/GL/gl_mangle.h	1153;"	d
glPixelTransferi	include/GL/gl_mangle.h	1154;"	d
glPixelTransformParameterfEXT	include/GL/gl_mangle.h	1155;"	d
glPixelTransformParameterfEXT	shared/GLee.h	4993;"	d
glPixelTransformParameterfvEXT	include/GL/gl_mangle.h	1156;"	d
glPixelTransformParameterfvEXT	shared/GLee.h	4995;"	d
glPixelTransformParameteriEXT	include/GL/gl_mangle.h	1157;"	d
glPixelTransformParameteriEXT	shared/GLee.h	4992;"	d
glPixelTransformParameterivEXT	include/GL/gl_mangle.h	1158;"	d
glPixelTransformParameterivEXT	shared/GLee.h	4994;"	d
glPixelZoom	include/GL/gl_mangle.h	1159;"	d
glPointParameterf	include/GL/gl_mangle.h	1164;"	d
glPointParameterf	shared/GLee.h	1454;"	d
glPointParameterfARB	include/GL/gl_mangle.h	1162;"	d
glPointParameterfARB	shared/GLee.h	2308;"	d
glPointParameterfEXT	include/GL/gl_mangle.h	1163;"	d
glPointParameterfEXT	shared/GLee.h	4156;"	d
glPointParameterfSGIS	include/GL/gl_mangle.h	1165;"	d
glPointParameterfSGIS	shared/GLee.h	4174;"	d
glPointParameterfv	include/GL/gl_mangle.h	1168;"	d
glPointParameterfv	shared/GLee.h	1455;"	d
glPointParameterfvARB	include/GL/gl_mangle.h	1166;"	d
glPointParameterfvARB	shared/GLee.h	2309;"	d
glPointParameterfvEXT	include/GL/gl_mangle.h	1167;"	d
glPointParameterfvEXT	shared/GLee.h	4157;"	d
glPointParameterfvSGIS	include/GL/gl_mangle.h	1169;"	d
glPointParameterfvSGIS	shared/GLee.h	4175;"	d
glPointParameteri	include/GL/gl_mangle.h	1170;"	d
glPointParameteri	shared/GLee.h	1456;"	d
glPointParameteriNV	include/GL/gl_mangle.h	1171;"	d
glPointParameteriNV	shared/GLee.h	7567;"	d
glPointParameteriv	include/GL/gl_mangle.h	1172;"	d
glPointParameteriv	shared/GLee.h	1457;"	d
glPointParameterivNV	include/GL/gl_mangle.h	1173;"	d
glPointParameterivNV	shared/GLee.h	7568;"	d
glPointSize	include/GL/gl_mangle.h	1174;"	d
glPollAsyncSGIX	include/GL/gl_mangle.h	1175;"	d
glPollAsyncSGIX	shared/GLee.h	4896;"	d
glPollInstrumentsSGIX	include/GL/gl_mangle.h	1176;"	d
glPollInstrumentsSGIX	shared/GLee.h	4200;"	d
glPolygonMode	include/GL/gl_mangle.h	1177;"	d
glPolygonOffset	include/GL/gl_mangle.h	1179;"	d
glPolygonOffsetEXT	include/GL/gl_mangle.h	1178;"	d
glPolygonOffsetEXT	shared/GLee.h	3346;"	d
glPolygonStipple	include/GL/gl_mangle.h	1180;"	d
glPopAttrib	include/GL/gl_mangle.h	1181;"	d
glPopClientAttrib	include/GL/gl_mangle.h	1182;"	d
glPopMatrix	include/GL/gl_mangle.h	1183;"	d
glPopName	include/GL/gl_mangle.h	1184;"	d
glPresentFrameDualFillNV	include/GL/gl_mangle.h	1185;"	d
glPresentFrameKeyedNV	include/GL/gl_mangle.h	1186;"	d
glPrimitiveRestartIndex	include/GL/gl_mangle.h	1187;"	d
glPrimitiveRestartIndexNV	include/GL/gl_mangle.h	1188;"	d
glPrimitiveRestartIndexNV	shared/GLee.h	8074;"	d
glPrimitiveRestartNV	include/GL/gl_mangle.h	1189;"	d
glPrimitiveRestartNV	shared/GLee.h	8073;"	d
glPrioritizeTextures	include/GL/gl_mangle.h	1191;"	d
glPrioritizeTexturesEXT	include/GL/gl_mangle.h	1190;"	d
glPrioritizeTexturesEXT	shared/GLee.h	3776;"	d
glProgramBufferParametersIivNV	include/GL/gl_mangle.h	1193;"	d
glProgramBufferParametersIivNV	shared/GLee.h	9063;"	d
glProgramBufferParametersIuivNV	include/GL/gl_mangle.h	1194;"	d
glProgramBufferParametersIuivNV	shared/GLee.h	9064;"	d
glProgramBufferParametersfvNV	include/GL/gl_mangle.h	1192;"	d
glProgramBufferParametersfvNV	shared/GLee.h	9062;"	d
glProgramCallbackMESA	include/GL/gl_mangle.h	1195;"	d
glProgramEnvParameter4dARB	include/GL/gl_mangle.h	1196;"	d
glProgramEnvParameter4dARB	shared/GLee.h	2823;"	d
glProgramEnvParameter4dvARB	include/GL/gl_mangle.h	1197;"	d
glProgramEnvParameter4dvARB	shared/GLee.h	2824;"	d
glProgramEnvParameter4fARB	include/GL/gl_mangle.h	1198;"	d
glProgramEnvParameter4fARB	shared/GLee.h	2825;"	d
glProgramEnvParameter4fvARB	include/GL/gl_mangle.h	1199;"	d
glProgramEnvParameter4fvARB	shared/GLee.h	2826;"	d
glProgramEnvParameterI4iNV	include/GL/gl_mangle.h	1200;"	d
glProgramEnvParameterI4iNV	shared/GLee.h	8908;"	d
glProgramEnvParameterI4ivNV	include/GL/gl_mangle.h	1201;"	d
glProgramEnvParameterI4ivNV	shared/GLee.h	8909;"	d
glProgramEnvParameterI4uiNV	include/GL/gl_mangle.h	1202;"	d
glProgramEnvParameterI4uiNV	shared/GLee.h	8911;"	d
glProgramEnvParameterI4uivNV	include/GL/gl_mangle.h	1203;"	d
glProgramEnvParameterI4uivNV	shared/GLee.h	8912;"	d
glProgramEnvParameters4fvEXT	include/GL/gl_mangle.h	1204;"	d
glProgramEnvParametersI4ivNV	include/GL/gl_mangle.h	1205;"	d
glProgramEnvParametersI4ivNV	shared/GLee.h	8910;"	d
glProgramEnvParametersI4uivNV	include/GL/gl_mangle.h	1206;"	d
glProgramEnvParametersI4uivNV	shared/GLee.h	8913;"	d
glProgramLocalParameter4dARB	include/GL/gl_mangle.h	1207;"	d
glProgramLocalParameter4dARB	shared/GLee.h	2827;"	d
glProgramLocalParameter4dvARB	include/GL/gl_mangle.h	1208;"	d
glProgramLocalParameter4dvARB	shared/GLee.h	2828;"	d
glProgramLocalParameter4fARB	include/GL/gl_mangle.h	1209;"	d
glProgramLocalParameter4fARB	shared/GLee.h	2829;"	d
glProgramLocalParameter4fvARB	include/GL/gl_mangle.h	1210;"	d
glProgramLocalParameter4fvARB	shared/GLee.h	2830;"	d
glProgramLocalParameterI4iNV	include/GL/gl_mangle.h	1211;"	d
glProgramLocalParameterI4iNV	shared/GLee.h	8902;"	d
glProgramLocalParameterI4ivNV	include/GL/gl_mangle.h	1212;"	d
glProgramLocalParameterI4ivNV	shared/GLee.h	8903;"	d
glProgramLocalParameterI4uiNV	include/GL/gl_mangle.h	1213;"	d
glProgramLocalParameterI4uiNV	shared/GLee.h	8905;"	d
glProgramLocalParameterI4uivNV	include/GL/gl_mangle.h	1214;"	d
glProgramLocalParameterI4uivNV	shared/GLee.h	8906;"	d
glProgramLocalParameters4fvEXT	include/GL/gl_mangle.h	1215;"	d
glProgramLocalParametersI4ivNV	include/GL/gl_mangle.h	1216;"	d
glProgramLocalParametersI4ivNV	shared/GLee.h	8904;"	d
glProgramLocalParametersI4uivNV	include/GL/gl_mangle.h	1217;"	d
glProgramLocalParametersI4uivNV	shared/GLee.h	8907;"	d
glProgramNamedParameter4dNV	include/GL/gl_mangle.h	1218;"	d
glProgramNamedParameter4dNV	shared/GLee.h	7887;"	d
glProgramNamedParameter4dvNV	include/GL/gl_mangle.h	1219;"	d
glProgramNamedParameter4dvNV	shared/GLee.h	7889;"	d
glProgramNamedParameter4fNV	include/GL/gl_mangle.h	1220;"	d
glProgramNamedParameter4fNV	shared/GLee.h	7886;"	d
glProgramNamedParameter4fvNV	include/GL/gl_mangle.h	1221;"	d
glProgramNamedParameter4fvNV	shared/GLee.h	7888;"	d
glProgramParameter4dNV	include/GL/gl_mangle.h	1222;"	d
glProgramParameter4dNV	shared/GLee.h	6693;"	d
glProgramParameter4dvNV	include/GL/gl_mangle.h	1223;"	d
glProgramParameter4dvNV	shared/GLee.h	6694;"	d
glProgramParameter4fNV	include/GL/gl_mangle.h	1224;"	d
glProgramParameter4fNV	shared/GLee.h	6695;"	d
glProgramParameter4fvNV	include/GL/gl_mangle.h	1225;"	d
glProgramParameter4fvNV	shared/GLee.h	6696;"	d
glProgramParameteri	include/GL/gl_mangle.h	1228;"	d
glProgramParameteriARB	include/GL/gl_mangle.h	1226;"	d
glProgramParameteriEXT	include/GL/gl_mangle.h	1227;"	d
glProgramParameteriEXT	shared/GLee.h	8593;"	d
glProgramParameters4dvNV	include/GL/gl_mangle.h	1229;"	d
glProgramParameters4dvNV	shared/GLee.h	6697;"	d
glProgramParameters4fvNV	include/GL/gl_mangle.h	1230;"	d
glProgramParameters4fvNV	shared/GLee.h	6698;"	d
glProgramStringARB	include/GL/gl_mangle.h	1231;"	d
glProgramStringARB	shared/GLee.h	2819;"	d
glProgramUniform1fEXT	include/GL/gl_mangle.h	1232;"	d
glProgramUniform1fvEXT	include/GL/gl_mangle.h	1233;"	d
glProgramUniform1iEXT	include/GL/gl_mangle.h	1234;"	d
glProgramUniform1ivEXT	include/GL/gl_mangle.h	1235;"	d
glProgramUniform1uiEXT	include/GL/gl_mangle.h	1236;"	d
glProgramUniform1uivEXT	include/GL/gl_mangle.h	1237;"	d
glProgramUniform2fEXT	include/GL/gl_mangle.h	1238;"	d
glProgramUniform2fvEXT	include/GL/gl_mangle.h	1239;"	d
glProgramUniform2iEXT	include/GL/gl_mangle.h	1240;"	d
glProgramUniform2ivEXT	include/GL/gl_mangle.h	1241;"	d
glProgramUniform2uiEXT	include/GL/gl_mangle.h	1242;"	d
glProgramUniform2uivEXT	include/GL/gl_mangle.h	1243;"	d
glProgramUniform3fEXT	include/GL/gl_mangle.h	1244;"	d
glProgramUniform3fvEXT	include/GL/gl_mangle.h	1245;"	d
glProgramUniform3iEXT	include/GL/gl_mangle.h	1246;"	d
glProgramUniform3ivEXT	include/GL/gl_mangle.h	1247;"	d
glProgramUniform3uiEXT	include/GL/gl_mangle.h	1248;"	d
glProgramUniform3uivEXT	include/GL/gl_mangle.h	1249;"	d
glProgramUniform4fEXT	include/GL/gl_mangle.h	1250;"	d
glProgramUniform4fvEXT	include/GL/gl_mangle.h	1251;"	d
glProgramUniform4iEXT	include/GL/gl_mangle.h	1252;"	d
glProgramUniform4ivEXT	include/GL/gl_mangle.h	1253;"	d
glProgramUniform4uiEXT	include/GL/gl_mangle.h	1254;"	d
glProgramUniform4uivEXT	include/GL/gl_mangle.h	1255;"	d
glProgramUniformMatrix2fvEXT	include/GL/gl_mangle.h	1256;"	d
glProgramUniformMatrix2x3fvEXT	include/GL/gl_mangle.h	1257;"	d
glProgramUniformMatrix2x4fvEXT	include/GL/gl_mangle.h	1258;"	d
glProgramUniformMatrix3fvEXT	include/GL/gl_mangle.h	1259;"	d
glProgramUniformMatrix3x2fvEXT	include/GL/gl_mangle.h	1260;"	d
glProgramUniformMatrix3x4fvEXT	include/GL/gl_mangle.h	1261;"	d
glProgramUniformMatrix4fvEXT	include/GL/gl_mangle.h	1262;"	d
glProgramUniformMatrix4x2fvEXT	include/GL/gl_mangle.h	1263;"	d
glProgramUniformMatrix4x3fvEXT	include/GL/gl_mangle.h	1264;"	d
glProgramUniformui64NV	include/GL/gl_mangle.h	1265;"	d
glProgramUniformui64vNV	include/GL/gl_mangle.h	1266;"	d
glProgramVertexLimitNV	include/GL/gl_mangle.h	1267;"	d
glProgramVertexLimitNV	shared/GLee.h	8853;"	d
glProvokingVertex	include/GL/gl_mangle.h	1269;"	d
glProvokingVertexEXT	include/GL/gl_mangle.h	1268;"	d
glPushAttrib	include/GL/gl_mangle.h	1270;"	d
glPushClientAttrib	include/GL/gl_mangle.h	1272;"	d
glPushClientAttribDefaultEXT	include/GL/gl_mangle.h	1271;"	d
glPushMatrix	include/GL/gl_mangle.h	1273;"	d
glPushName	include/GL/gl_mangle.h	1274;"	d
glRasterPos2d	include/GL/gl_mangle.h	1275;"	d
glRasterPos2dv	include/GL/gl_mangle.h	1276;"	d
glRasterPos2f	include/GL/gl_mangle.h	1277;"	d
glRasterPos2fv	include/GL/gl_mangle.h	1278;"	d
glRasterPos2i	include/GL/gl_mangle.h	1279;"	d
glRasterPos2iv	include/GL/gl_mangle.h	1280;"	d
glRasterPos2s	include/GL/gl_mangle.h	1281;"	d
glRasterPos2sv	include/GL/gl_mangle.h	1282;"	d
glRasterPos3d	include/GL/gl_mangle.h	1283;"	d
glRasterPos3dv	include/GL/gl_mangle.h	1284;"	d
glRasterPos3f	include/GL/gl_mangle.h	1285;"	d
glRasterPos3fv	include/GL/gl_mangle.h	1286;"	d
glRasterPos3i	include/GL/gl_mangle.h	1287;"	d
glRasterPos3iv	include/GL/gl_mangle.h	1288;"	d
glRasterPos3s	include/GL/gl_mangle.h	1289;"	d
glRasterPos3sv	include/GL/gl_mangle.h	1290;"	d
glRasterPos4d	include/GL/gl_mangle.h	1291;"	d
glRasterPos4dv	include/GL/gl_mangle.h	1292;"	d
glRasterPos4f	include/GL/gl_mangle.h	1293;"	d
glRasterPos4fv	include/GL/gl_mangle.h	1294;"	d
glRasterPos4i	include/GL/gl_mangle.h	1295;"	d
glRasterPos4iv	include/GL/gl_mangle.h	1296;"	d
glRasterPos4s	include/GL/gl_mangle.h	1297;"	d
glRasterPos4sv	include/GL/gl_mangle.h	1298;"	d
glReadBuffer	include/GL/gl_mangle.h	1299;"	d
glReadInstrumentsSGIX	include/GL/gl_mangle.h	1300;"	d
glReadInstrumentsSGIX	shared/GLee.h	4201;"	d
glReadPixels	include/GL/gl_mangle.h	1301;"	d
glRectd	include/GL/gl_mangle.h	1302;"	d
glRectdv	include/GL/gl_mangle.h	1303;"	d
glRectf	include/GL/gl_mangle.h	1304;"	d
glRectfv	include/GL/gl_mangle.h	1305;"	d
glRecti	include/GL/gl_mangle.h	1306;"	d
glRectiv	include/GL/gl_mangle.h	1307;"	d
glRects	include/GL/gl_mangle.h	1308;"	d
glRectsv	include/GL/gl_mangle.h	1309;"	d
glReferencePlaneSGIX	include/GL/gl_mangle.h	1310;"	d
glReferencePlaneSGIX	shared/GLee.h	4287;"	d
glRenderMode	include/GL/gl_mangle.h	1316;"	d
glRenderbufferStorage	include/GL/gl_mangle.h	1312;"	d
glRenderbufferStorageEXT	include/GL/gl_mangle.h	1311;"	d
glRenderbufferStorageEXT	shared/GLee.h	8356;"	d
glRenderbufferStorageMultisample	include/GL/gl_mangle.h	1315;"	d
glRenderbufferStorageMultisampleCoverageNV	include/GL/gl_mangle.h	1313;"	d
glRenderbufferStorageMultisampleCoverageNV	shared/GLee.h	8934;"	d
glRenderbufferStorageMultisampleEXT	include/GL/gl_mangle.h	1314;"	d
glRenderbufferStorageMultisampleEXT	shared/GLee.h	8948;"	d
glReplacementCodePointerSUN	include/GL/gl_mangle.h	1317;"	d
glReplacementCodePointerSUN	shared/GLee.h	5395;"	d
glReplacementCodeubSUN	include/GL/gl_mangle.h	1318;"	d
glReplacementCodeubSUN	shared/GLee.h	5391;"	d
glReplacementCodeubvSUN	include/GL/gl_mangle.h	1319;"	d
glReplacementCodeubvSUN	shared/GLee.h	5394;"	d
glReplacementCodeuiColor3fVertex3fSUN	include/GL/gl_mangle.h	1320;"	d
glReplacementCodeuiColor3fVertex3fSUN	shared/GLee.h	5512;"	d
glReplacementCodeuiColor3fVertex3fvSUN	include/GL/gl_mangle.h	1321;"	d
glReplacementCodeuiColor3fVertex3fvSUN	shared/GLee.h	5513;"	d
glReplacementCodeuiColor4fNormal3fVertex3fSUN	include/GL/gl_mangle.h	1322;"	d
glReplacementCodeuiColor4fNormal3fVertex3fSUN	shared/GLee.h	5516;"	d
glReplacementCodeuiColor4fNormal3fVertex3fvSUN	include/GL/gl_mangle.h	1323;"	d
glReplacementCodeuiColor4fNormal3fVertex3fvSUN	shared/GLee.h	5517;"	d
glReplacementCodeuiColor4ubVertex3fSUN	include/GL/gl_mangle.h	1324;"	d
glReplacementCodeuiColor4ubVertex3fSUN	shared/GLee.h	5510;"	d
glReplacementCodeuiColor4ubVertex3fvSUN	include/GL/gl_mangle.h	1325;"	d
glReplacementCodeuiColor4ubVertex3fvSUN	shared/GLee.h	5511;"	d
glReplacementCodeuiNormal3fVertex3fSUN	include/GL/gl_mangle.h	1326;"	d
glReplacementCodeuiNormal3fVertex3fSUN	shared/GLee.h	5514;"	d
glReplacementCodeuiNormal3fVertex3fvSUN	include/GL/gl_mangle.h	1327;"	d
glReplacementCodeuiNormal3fVertex3fvSUN	shared/GLee.h	5515;"	d
glReplacementCodeuiSUN	include/GL/gl_mangle.h	1328;"	d
glReplacementCodeuiSUN	shared/GLee.h	5389;"	d
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	include/GL/gl_mangle.h	1329;"	d
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	shared/GLee.h	5522;"	d
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	include/GL/gl_mangle.h	1330;"	d
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	shared/GLee.h	5523;"	d
glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	include/GL/gl_mangle.h	1331;"	d
glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	shared/GLee.h	5520;"	d
glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	include/GL/gl_mangle.h	1332;"	d
glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	shared/GLee.h	5521;"	d
glReplacementCodeuiTexCoord2fVertex3fSUN	include/GL/gl_mangle.h	1333;"	d
glReplacementCodeuiTexCoord2fVertex3fSUN	shared/GLee.h	5518;"	d
glReplacementCodeuiTexCoord2fVertex3fvSUN	include/GL/gl_mangle.h	1334;"	d
glReplacementCodeuiTexCoord2fVertex3fvSUN	shared/GLee.h	5519;"	d
glReplacementCodeuiVertex3fSUN	include/GL/gl_mangle.h	1335;"	d
glReplacementCodeuiVertex3fSUN	shared/GLee.h	5508;"	d
glReplacementCodeuiVertex3fvSUN	include/GL/gl_mangle.h	1336;"	d
glReplacementCodeuiVertex3fvSUN	shared/GLee.h	5509;"	d
glReplacementCodeuivSUN	include/GL/gl_mangle.h	1337;"	d
glReplacementCodeuivSUN	shared/GLee.h	5392;"	d
glReplacementCodeusSUN	include/GL/gl_mangle.h	1338;"	d
glReplacementCodeusSUN	shared/GLee.h	5390;"	d
glReplacementCodeusvSUN	include/GL/gl_mangle.h	1339;"	d
glReplacementCodeusvSUN	shared/GLee.h	5393;"	d
glRequestResidentProgramsNV	include/GL/gl_mangle.h	1340;"	d
glRequestResidentProgramsNV	shared/GLee.h	6699;"	d
glResetHistogram	include/GL/gl_mangle.h	1342;"	d
glResetHistogram	shared/GLee.h	979;"	d
glResetHistogramEXT	include/GL/gl_mangle.h	1341;"	d
glResetHistogramEXT	shared/GLee.h	3524;"	d
glResetMinmax	include/GL/gl_mangle.h	1344;"	d
glResetMinmax	shared/GLee.h	980;"	d
glResetMinmaxEXT	include/GL/gl_mangle.h	1343;"	d
glResetMinmaxEXT	shared/GLee.h	3525;"	d
glResizeBuffersMESA	include/GL/gl_mangle.h	1345;"	d
glResizeBuffersMESA	shared/GLee.h	5864;"	d
glResumeTransformFeedbackNV	include/GL/gl_mangle.h	1346;"	d
glRotated	include/GL/gl_mangle.h	1347;"	d
glRotatef	include/GL/gl_mangle.h	1348;"	d
glSampleCoverage	include/GL/gl_mangle.h	1350;"	d
glSampleCoverage	shared/GLee.h	1301;"	d
glSampleCoverageARB	include/GL/gl_mangle.h	1349;"	d
glSampleCoverageARB	shared/GLee.h	2214;"	d
glSampleMapATI	include/GL/gl_mangle.h	1351;"	d
glSampleMapATI	shared/GLee.h	6979;"	d
glSampleMaskEXT	include/GL/gl_mangle.h	1352;"	d
glSampleMaskEXT	shared/GLee.h	6132;"	d
glSampleMaskIndexedNV	include/GL/gl_mangle.h	1354;"	d
glSampleMaskSGIS	include/GL/gl_mangle.h	1355;"	d
glSampleMaskSGIS	shared/GLee.h	3870;"	d
glSampleMaski	include/GL/gl_mangle.h	1353;"	d
glSamplePatternEXT	include/GL/gl_mangle.h	1356;"	d
glSamplePatternEXT	shared/GLee.h	6133;"	d
glSamplePatternSGIS	include/GL/gl_mangle.h	1357;"	d
glSamplePatternSGIS	shared/GLee.h	3871;"	d
glScaled	include/GL/gl_mangle.h	1358;"	d
glScalef	include/GL/gl_mangle.h	1359;"	d
glScissor	include/GL/gl_mangle.h	1360;"	d
glSecondaryColor3b	include/GL/gl_mangle.h	1362;"	d
glSecondaryColor3b	shared/GLee.h	1458;"	d
glSecondaryColor3bEXT	include/GL/gl_mangle.h	1361;"	d
glSecondaryColor3bEXT	shared/GLee.h	5073;"	d
glSecondaryColor3bv	include/GL/gl_mangle.h	1364;"	d
glSecondaryColor3bv	shared/GLee.h	1459;"	d
glSecondaryColor3bvEXT	include/GL/gl_mangle.h	1363;"	d
glSecondaryColor3bvEXT	shared/GLee.h	5074;"	d
glSecondaryColor3d	include/GL/gl_mangle.h	1366;"	d
glSecondaryColor3d	shared/GLee.h	1460;"	d
glSecondaryColor3dEXT	include/GL/gl_mangle.h	1365;"	d
glSecondaryColor3dEXT	shared/GLee.h	5075;"	d
glSecondaryColor3dv	include/GL/gl_mangle.h	1368;"	d
glSecondaryColor3dv	shared/GLee.h	1461;"	d
glSecondaryColor3dvEXT	include/GL/gl_mangle.h	1367;"	d
glSecondaryColor3dvEXT	shared/GLee.h	5076;"	d
glSecondaryColor3f	include/GL/gl_mangle.h	1370;"	d
glSecondaryColor3f	shared/GLee.h	1462;"	d
glSecondaryColor3fEXT	include/GL/gl_mangle.h	1369;"	d
glSecondaryColor3fEXT	shared/GLee.h	5077;"	d
glSecondaryColor3fv	include/GL/gl_mangle.h	1372;"	d
glSecondaryColor3fv	shared/GLee.h	1463;"	d
glSecondaryColor3fvEXT	include/GL/gl_mangle.h	1371;"	d
glSecondaryColor3fvEXT	shared/GLee.h	5078;"	d
glSecondaryColor3hNV	include/GL/gl_mangle.h	1373;"	d
glSecondaryColor3hNV	shared/GLee.h	8023;"	d
glSecondaryColor3hvNV	include/GL/gl_mangle.h	1374;"	d
glSecondaryColor3hvNV	shared/GLee.h	8024;"	d
glSecondaryColor3i	include/GL/gl_mangle.h	1376;"	d
glSecondaryColor3i	shared/GLee.h	1464;"	d
glSecondaryColor3iEXT	include/GL/gl_mangle.h	1375;"	d
glSecondaryColor3iEXT	shared/GLee.h	5079;"	d
glSecondaryColor3iv	include/GL/gl_mangle.h	1378;"	d
glSecondaryColor3iv	shared/GLee.h	1465;"	d
glSecondaryColor3ivEXT	include/GL/gl_mangle.h	1377;"	d
glSecondaryColor3ivEXT	shared/GLee.h	5080;"	d
glSecondaryColor3s	include/GL/gl_mangle.h	1380;"	d
glSecondaryColor3s	shared/GLee.h	1466;"	d
glSecondaryColor3sEXT	include/GL/gl_mangle.h	1379;"	d
glSecondaryColor3sEXT	shared/GLee.h	5081;"	d
glSecondaryColor3sv	include/GL/gl_mangle.h	1382;"	d
glSecondaryColor3sv	shared/GLee.h	1467;"	d
glSecondaryColor3svEXT	include/GL/gl_mangle.h	1381;"	d
glSecondaryColor3svEXT	shared/GLee.h	5082;"	d
glSecondaryColor3ub	include/GL/gl_mangle.h	1384;"	d
glSecondaryColor3ub	shared/GLee.h	1468;"	d
glSecondaryColor3ubEXT	include/GL/gl_mangle.h	1383;"	d
glSecondaryColor3ubEXT	shared/GLee.h	5083;"	d
glSecondaryColor3ubv	include/GL/gl_mangle.h	1386;"	d
glSecondaryColor3ubv	shared/GLee.h	1469;"	d
glSecondaryColor3ubvEXT	include/GL/gl_mangle.h	1385;"	d
glSecondaryColor3ubvEXT	shared/GLee.h	5084;"	d
glSecondaryColor3ui	include/GL/gl_mangle.h	1388;"	d
glSecondaryColor3ui	shared/GLee.h	1470;"	d
glSecondaryColor3uiEXT	include/GL/gl_mangle.h	1387;"	d
glSecondaryColor3uiEXT	shared/GLee.h	5085;"	d
glSecondaryColor3uiv	include/GL/gl_mangle.h	1390;"	d
glSecondaryColor3uiv	shared/GLee.h	1471;"	d
glSecondaryColor3uivEXT	include/GL/gl_mangle.h	1389;"	d
glSecondaryColor3uivEXT	shared/GLee.h	5086;"	d
glSecondaryColor3us	include/GL/gl_mangle.h	1392;"	d
glSecondaryColor3us	shared/GLee.h	1472;"	d
glSecondaryColor3usEXT	include/GL/gl_mangle.h	1391;"	d
glSecondaryColor3usEXT	shared/GLee.h	5087;"	d
glSecondaryColor3usv	include/GL/gl_mangle.h	1394;"	d
glSecondaryColor3usv	shared/GLee.h	1473;"	d
glSecondaryColor3usvEXT	include/GL/gl_mangle.h	1393;"	d
glSecondaryColor3usvEXT	shared/GLee.h	5088;"	d
glSecondaryColorFormatNV	include/GL/gl_mangle.h	1395;"	d
glSecondaryColorPointer	include/GL/gl_mangle.h	1398;"	d
glSecondaryColorPointer	shared/GLee.h	1474;"	d
glSecondaryColorPointerEXT	include/GL/gl_mangle.h	1396;"	d
glSecondaryColorPointerEXT	shared/GLee.h	5089;"	d
glSecondaryColorPointerListIBM	include/GL/gl_mangle.h	1397;"	d
glSecondaryColorPointerListIBM	shared/GLee.h	6021;"	d
glSelectBuffer	include/GL/gl_mangle.h	1399;"	d
glSelectPerfMonitorCountersAMD	include/GL/gl_mangle.h	1400;"	d
glSeparableFilter2D	include/GL/gl_mangle.h	1402;"	d
glSeparableFilter2D	shared/GLee.h	970;"	d
glSeparableFilter2DEXT	include/GL/gl_mangle.h	1401;"	d
glSeparableFilter2DEXT	shared/GLee.h	3592;"	d
glSetFenceAPPLE	include/GL/gl_mangle.h	1403;"	d
glSetFenceAPPLE	shared/GLee.h	7695;"	d
glSetFenceNV	include/GL/gl_mangle.h	1404;"	d
glSetFenceNV	shared/GLee.h	6245;"	d
glSetFragmentShaderConstantATI	include/GL/gl_mangle.h	1405;"	d
glSetFragmentShaderConstantATI	shared/GLee.h	6986;"	d
glSetInvariantEXT	include/GL/gl_mangle.h	1406;"	d
glSetInvariantEXT	shared/GLee.h	7277;"	d
glSetLocalConstantEXT	include/GL/gl_mangle.h	1407;"	d
glSetLocalConstantEXT	shared/GLee.h	7278;"	d
glShadeModel	include/GL/gl_mangle.h	1408;"	d
glShaderOp1EXT	include/GL/gl_mangle.h	1409;"	d
glShaderOp1EXT	shared/GLee.h	7269;"	d
glShaderOp2EXT	include/GL/gl_mangle.h	1410;"	d
glShaderOp2EXT	shared/GLee.h	7270;"	d
glShaderOp3EXT	include/GL/gl_mangle.h	1411;"	d
glShaderOp3EXT	shared/GLee.h	7271;"	d
glShaderSource	include/GL/gl_mangle.h	1413;"	d
glShaderSource	shared/GLee.h	1918;"	d
glShaderSourceARB	include/GL/gl_mangle.h	1412;"	d
glShaderSourceARB	shared/GLee.h	3098;"	d
glSharpenTexFuncSGIS	include/GL/gl_mangle.h	1414;"	d
glSharpenTexFuncSGIS	shared/GLee.h	3815;"	d
glSpriteParameterfSGIX	include/GL/gl_mangle.h	1415;"	d
glSpriteParameterfSGIX	shared/GLee.h	4127;"	d
glSpriteParameterfvSGIX	include/GL/gl_mangle.h	1416;"	d
glSpriteParameterfvSGIX	shared/GLee.h	4128;"	d
glSpriteParameteriSGIX	include/GL/gl_mangle.h	1417;"	d
glSpriteParameteriSGIX	shared/GLee.h	4129;"	d
glSpriteParameterivSGIX	include/GL/gl_mangle.h	1418;"	d
glSpriteParameterivSGIX	shared/GLee.h	4130;"	d
glStartInstrumentsSGIX	include/GL/gl_mangle.h	1419;"	d
glStartInstrumentsSGIX	shared/GLee.h	4202;"	d
glStencilClearTagEXT	include/GL/gl_mangle.h	1420;"	d
glStencilFunc	include/GL/gl_mangle.h	1421;"	d
glStencilFuncSeparate	include/GL/gl_mangle.h	1423;"	d
glStencilFuncSeparate	shared/GLee.h	1887;"	d
glStencilFuncSeparateATI	include/GL/gl_mangle.h	1422;"	d
glStencilFuncSeparateATI	shared/GLee.h	8123;"	d
glStencilMask	include/GL/gl_mangle.h	1424;"	d
glStencilMaskSeparate	include/GL/gl_mangle.h	1425;"	d
glStencilMaskSeparate	shared/GLee.h	1888;"	d
glStencilOp	include/GL/gl_mangle.h	1426;"	d
glStencilOpSeparate	include/GL/gl_mangle.h	1428;"	d
glStencilOpSeparate	shared/GLee.h	1886;"	d
glStencilOpSeparateATI	include/GL/gl_mangle.h	1427;"	d
glStencilOpSeparateATI	shared/GLee.h	8122;"	d
glStopInstrumentsSGIX	include/GL/gl_mangle.h	1429;"	d
glStopInstrumentsSGIX	shared/GLee.h	4203;"	d
glStringMarkerGREMEDY	include/GL/gl_mangle.h	1430;"	d
glStringMarkerGREMEDY	shared/GLee.h	8379;"	d
glSwizzleEXT	include/GL/gl_mangle.h	1431;"	d
glSwizzleEXT	shared/GLee.h	7272;"	d
glTagSampleBufferSGIX	include/GL/gl_mangle.h	1432;"	d
glTagSampleBufferSGIX	shared/GLee.h	4240;"	d
glTangent3bEXT	include/GL/gl_mangle.h	1433;"	d
glTangent3bEXT	shared/GLee.h	5224;"	d
glTangent3bvEXT	include/GL/gl_mangle.h	1434;"	d
glTangent3bvEXT	shared/GLee.h	5225;"	d
glTangent3dEXT	include/GL/gl_mangle.h	1435;"	d
glTangent3dEXT	shared/GLee.h	5226;"	d
glTangent3dvEXT	include/GL/gl_mangle.h	1436;"	d
glTangent3dvEXT	shared/GLee.h	5227;"	d
glTangent3fEXT	include/GL/gl_mangle.h	1437;"	d
glTangent3fEXT	shared/GLee.h	5228;"	d
glTangent3fvEXT	include/GL/gl_mangle.h	1438;"	d
glTangent3fvEXT	shared/GLee.h	5229;"	d
glTangent3iEXT	include/GL/gl_mangle.h	1439;"	d
glTangent3iEXT	shared/GLee.h	5230;"	d
glTangent3ivEXT	include/GL/gl_mangle.h	1440;"	d
glTangent3ivEXT	shared/GLee.h	5231;"	d
glTangent3sEXT	include/GL/gl_mangle.h	1441;"	d
glTangent3sEXT	shared/GLee.h	5232;"	d
glTangent3svEXT	include/GL/gl_mangle.h	1442;"	d
glTangent3svEXT	shared/GLee.h	5233;"	d
glTangentPointerEXT	include/GL/gl_mangle.h	1443;"	d
glTangentPointerEXT	shared/GLee.h	5244;"	d
glTbufferMask3DFX	include/GL/gl_mangle.h	1444;"	d
glTbufferMask3DFX	shared/GLee.h	6102;"	d
glTessellationFactorAMD	include/GL/gl_mangle.h	1445;"	d
glTessellationModeAMD	include/GL/gl_mangle.h	1446;"	d
glTestFenceAPPLE	include/GL/gl_mangle.h	1447;"	d
glTestFenceAPPLE	shared/GLee.h	7697;"	d
glTestFenceNV	include/GL/gl_mangle.h	1448;"	d
glTestFenceNV	shared/GLee.h	6242;"	d
glTestObjectAPPLE	include/GL/gl_mangle.h	1449;"	d
glTestObjectAPPLE	shared/GLee.h	7699;"	d
glTexBuffer	include/GL/gl_mangle.h	1452;"	d
glTexBufferARB	include/GL/gl_mangle.h	1450;"	d
glTexBufferEXT	include/GL/gl_mangle.h	1451;"	d
glTexBufferEXT	shared/GLee.h	8420;"	d
glTexBumpParameterfvATI	include/GL/gl_mangle.h	1453;"	d
glTexBumpParameterfvATI	shared/GLee.h	6830;"	d
glTexBumpParameterivATI	include/GL/gl_mangle.h	1454;"	d
glTexBumpParameterivATI	shared/GLee.h	6829;"	d
glTexCoord	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^inline void glTexCoord( const Imath::V2f &t )$/;"	f
glTexCoord	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^inline void glTexCoord( const Imath::V2f &t )$/;"	f
glTexCoord1d	include/GL/gl_mangle.h	1455;"	d
glTexCoord1dv	include/GL/gl_mangle.h	1456;"	d
glTexCoord1f	include/GL/gl_mangle.h	1457;"	d
glTexCoord1fv	include/GL/gl_mangle.h	1458;"	d
glTexCoord1hNV	include/GL/gl_mangle.h	1459;"	d
glTexCoord1hNV	shared/GLee.h	8005;"	d
glTexCoord1hvNV	include/GL/gl_mangle.h	1460;"	d
glTexCoord1hvNV	shared/GLee.h	8006;"	d
glTexCoord1i	include/GL/gl_mangle.h	1461;"	d
glTexCoord1iv	include/GL/gl_mangle.h	1462;"	d
glTexCoord1s	include/GL/gl_mangle.h	1463;"	d
glTexCoord1sv	include/GL/gl_mangle.h	1464;"	d
glTexCoord2d	include/GL/gl_mangle.h	1465;"	d
glTexCoord2dv	include/GL/gl_mangle.h	1466;"	d
glTexCoord2f	include/GL/gl_mangle.h	1473;"	d
glTexCoord2fColor3fVertex3fSUN	include/GL/gl_mangle.h	1467;"	d
glTexCoord2fColor3fVertex3fSUN	shared/GLee.h	5500;"	d
glTexCoord2fColor3fVertex3fvSUN	include/GL/gl_mangle.h	1468;"	d
glTexCoord2fColor3fVertex3fvSUN	shared/GLee.h	5501;"	d
glTexCoord2fColor4fNormal3fVertex3fSUN	include/GL/gl_mangle.h	1469;"	d
glTexCoord2fColor4fNormal3fVertex3fSUN	shared/GLee.h	5504;"	d
glTexCoord2fColor4fNormal3fVertex3fvSUN	include/GL/gl_mangle.h	1470;"	d
glTexCoord2fColor4fNormal3fVertex3fvSUN	shared/GLee.h	5505;"	d
glTexCoord2fColor4ubVertex3fSUN	include/GL/gl_mangle.h	1471;"	d
glTexCoord2fColor4ubVertex3fSUN	shared/GLee.h	5498;"	d
glTexCoord2fColor4ubVertex3fvSUN	include/GL/gl_mangle.h	1472;"	d
glTexCoord2fColor4ubVertex3fvSUN	shared/GLee.h	5499;"	d
glTexCoord2fNormal3fVertex3fSUN	include/GL/gl_mangle.h	1474;"	d
glTexCoord2fNormal3fVertex3fSUN	shared/GLee.h	5502;"	d
glTexCoord2fNormal3fVertex3fvSUN	include/GL/gl_mangle.h	1475;"	d
glTexCoord2fNormal3fVertex3fvSUN	shared/GLee.h	5503;"	d
glTexCoord2fVertex3fSUN	include/GL/gl_mangle.h	1476;"	d
glTexCoord2fVertex3fSUN	shared/GLee.h	5494;"	d
glTexCoord2fVertex3fvSUN	include/GL/gl_mangle.h	1477;"	d
glTexCoord2fVertex3fvSUN	shared/GLee.h	5495;"	d
glTexCoord2fv	include/GL/gl_mangle.h	1478;"	d
glTexCoord2hNV	include/GL/gl_mangle.h	1479;"	d
glTexCoord2hNV	shared/GLee.h	8007;"	d
glTexCoord2hvNV	include/GL/gl_mangle.h	1480;"	d
glTexCoord2hvNV	shared/GLee.h	8008;"	d
glTexCoord2i	include/GL/gl_mangle.h	1481;"	d
glTexCoord2iv	include/GL/gl_mangle.h	1482;"	d
glTexCoord2s	include/GL/gl_mangle.h	1483;"	d
glTexCoord2sv	include/GL/gl_mangle.h	1484;"	d
glTexCoord3d	include/GL/gl_mangle.h	1485;"	d
glTexCoord3dv	include/GL/gl_mangle.h	1486;"	d
glTexCoord3f	include/GL/gl_mangle.h	1487;"	d
glTexCoord3fv	include/GL/gl_mangle.h	1488;"	d
glTexCoord3hNV	include/GL/gl_mangle.h	1489;"	d
glTexCoord3hNV	shared/GLee.h	8009;"	d
glTexCoord3hvNV	include/GL/gl_mangle.h	1490;"	d
glTexCoord3hvNV	shared/GLee.h	8010;"	d
glTexCoord3i	include/GL/gl_mangle.h	1491;"	d
glTexCoord3iv	include/GL/gl_mangle.h	1492;"	d
glTexCoord3s	include/GL/gl_mangle.h	1493;"	d
glTexCoord3sv	include/GL/gl_mangle.h	1494;"	d
glTexCoord4d	include/GL/gl_mangle.h	1495;"	d
glTexCoord4dv	include/GL/gl_mangle.h	1496;"	d
glTexCoord4f	include/GL/gl_mangle.h	1499;"	d
glTexCoord4fColor4fNormal3fVertex4fSUN	include/GL/gl_mangle.h	1497;"	d
glTexCoord4fColor4fNormal3fVertex4fSUN	shared/GLee.h	5506;"	d
glTexCoord4fColor4fNormal3fVertex4fvSUN	include/GL/gl_mangle.h	1498;"	d
glTexCoord4fColor4fNormal3fVertex4fvSUN	shared/GLee.h	5507;"	d
glTexCoord4fVertex4fSUN	include/GL/gl_mangle.h	1500;"	d
glTexCoord4fVertex4fSUN	shared/GLee.h	5496;"	d
glTexCoord4fVertex4fvSUN	include/GL/gl_mangle.h	1501;"	d
glTexCoord4fVertex4fvSUN	shared/GLee.h	5497;"	d
glTexCoord4fv	include/GL/gl_mangle.h	1502;"	d
glTexCoord4hNV	include/GL/gl_mangle.h	1503;"	d
glTexCoord4hNV	shared/GLee.h	8011;"	d
glTexCoord4hvNV	include/GL/gl_mangle.h	1504;"	d
glTexCoord4hvNV	shared/GLee.h	8012;"	d
glTexCoord4i	include/GL/gl_mangle.h	1505;"	d
glTexCoord4iv	include/GL/gl_mangle.h	1506;"	d
glTexCoord4s	include/GL/gl_mangle.h	1507;"	d
glTexCoord4sv	include/GL/gl_mangle.h	1508;"	d
glTexCoordFormatNV	include/GL/gl_mangle.h	1509;"	d
glTexCoordPointer	include/GL/gl_mangle.h	1512;"	d
glTexCoordPointerEXT	include/GL/gl_mangle.h	1510;"	d
glTexCoordPointerEXT	shared/GLee.h	3946;"	d
glTexCoordPointerListIBM	include/GL/gl_mangle.h	1511;"	d
glTexCoordPointerListIBM	shared/GLee.h	6026;"	d
glTexCoordPointervINTEL	include/GL/gl_mangle.h	1513;"	d
glTexCoordPointervINTEL	shared/GLee.h	4956;"	d
glTexEnvf	include/GL/gl_mangle.h	1514;"	d
glTexEnvfv	include/GL/gl_mangle.h	1515;"	d
glTexEnvi	include/GL/gl_mangle.h	1516;"	d
glTexEnviv	include/GL/gl_mangle.h	1517;"	d
glTexFilterFuncSGIS	include/GL/gl_mangle.h	1518;"	d
glTexFilterFuncSGIS	shared/GLee.h	3436;"	d
glTexGend	include/GL/gl_mangle.h	1519;"	d
glTexGendv	include/GL/gl_mangle.h	1520;"	d
glTexGenf	include/GL/gl_mangle.h	1521;"	d
glTexGenfv	include/GL/gl_mangle.h	1522;"	d
glTexGeni	include/GL/gl_mangle.h	1523;"	d
glTexGeniv	include/GL/gl_mangle.h	1524;"	d
glTexImage1D	include/GL/gl_mangle.h	1525;"	d
glTexImage2D	include/GL/gl_mangle.h	1526;"	d
glTexImage2DMultisample	include/GL/gl_mangle.h	1527;"	d
glTexImage3D	include/GL/gl_mangle.h	1529;"	d
glTexImage3D	shared/GLee.h	981;"	d
glTexImage3DEXT	include/GL/gl_mangle.h	1528;"	d
glTexImage3DEXT	shared/GLee.h	3419;"	d
glTexImage3DMultisample	include/GL/gl_mangle.h	1530;"	d
glTexImage4DSGIS	include/GL/gl_mangle.h	1531;"	d
glTexImage4DSGIS	shared/GLee.h	3722;"	d
glTexParameterIiv	include/GL/gl_mangle.h	1535;"	d
glTexParameterIivEXT	include/GL/gl_mangle.h	1534;"	d
glTexParameterIivEXT	shared/GLee.h	8735;"	d
glTexParameterIuiv	include/GL/gl_mangle.h	1538;"	d
glTexParameterIuivEXT	include/GL/gl_mangle.h	1537;"	d
glTexParameterIuivEXT	shared/GLee.h	8736;"	d
glTexParameterf	include/GL/gl_mangle.h	1532;"	d
glTexParameterfv	include/GL/gl_mangle.h	1533;"	d
glTexParameteri	include/GL/gl_mangle.h	1536;"	d
glTexParameteriv	include/GL/gl_mangle.h	1539;"	d
glTexRenderbufferNV	include/GL/gl_mangle.h	1540;"	d
glTexSubImage1D	include/GL/gl_mangle.h	1542;"	d
glTexSubImage1DEXT	include/GL/gl_mangle.h	1541;"	d
glTexSubImage1DEXT	shared/GLee.h	3449;"	d
glTexSubImage2D	include/GL/gl_mangle.h	1544;"	d
glTexSubImage2DEXT	include/GL/gl_mangle.h	1543;"	d
glTexSubImage2DEXT	shared/GLee.h	3450;"	d
glTexSubImage3D	include/GL/gl_mangle.h	1546;"	d
glTexSubImage3D	shared/GLee.h	982;"	d
glTexSubImage3DEXT	include/GL/gl_mangle.h	1545;"	d
glTexSubImage3DEXT	shared/GLee.h	3420;"	d
glTexSubImage4DSGIS	include/GL/gl_mangle.h	1547;"	d
glTexSubImage4DSGIS	shared/GLee.h	3723;"	d
glTextureBarrierNV	include/GL/gl_mangle.h	1548;"	d
glTextureBufferEXT	include/GL/gl_mangle.h	1549;"	d
glTextureColorMaskSGIS	include/GL/gl_mangle.h	1550;"	d
glTextureColorMaskSGIS	shared/GLee.h	6193;"	d
glTextureImage1DEXT	include/GL/gl_mangle.h	1551;"	d
glTextureImage2DEXT	include/GL/gl_mangle.h	1552;"	d
glTextureImage3DEXT	include/GL/gl_mangle.h	1553;"	d
glTextureLightEXT	include/GL/gl_mangle.h	1554;"	d
glTextureLightEXT	shared/GLee.h	4836;"	d
glTextureMaterialEXT	include/GL/gl_mangle.h	1555;"	d
glTextureMaterialEXT	shared/GLee.h	4837;"	d
glTextureNormalEXT	include/GL/gl_mangle.h	1556;"	d
glTextureNormalEXT	shared/GLee.h	5102;"	d
glTextureParameterIivEXT	include/GL/gl_mangle.h	1560;"	d
glTextureParameterIuivEXT	include/GL/gl_mangle.h	1561;"	d
glTextureParameterfEXT	include/GL/gl_mangle.h	1557;"	d
glTextureParameterfvEXT	include/GL/gl_mangle.h	1558;"	d
glTextureParameteriEXT	include/GL/gl_mangle.h	1559;"	d
glTextureParameterivEXT	include/GL/gl_mangle.h	1562;"	d
glTextureRangeAPPLE	include/GL/gl_mangle.h	1563;"	d
glTextureRenderbufferEXT	include/GL/gl_mangle.h	1564;"	d
glTextureSubImage1DEXT	include/GL/gl_mangle.h	1565;"	d
glTextureSubImage2DEXT	include/GL/gl_mangle.h	1566;"	d
glTextureSubImage3DEXT	include/GL/gl_mangle.h	1567;"	d
glTrackMatrixNV	include/GL/gl_mangle.h	1568;"	d
glTrackMatrixNV	shared/GLee.h	6700;"	d
glTransformFeedbackAttribsNV	include/GL/gl_mangle.h	1569;"	d
glTransformFeedbackAttribsNV	shared/GLee.h	8831;"	d
glTransformFeedbackVaryings	include/GL/gl_mangle.h	1571;"	d
glTransformFeedbackVaryingsEXT	include/GL/gl_mangle.h	1570;"	d
glTransformFeedbackVaryingsNV	include/GL/gl_mangle.h	1572;"	d
glTransformFeedbackVaryingsNV	shared/GLee.h	8835;"	d
glTranslate	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^inline void glTranslate ( const Imath::V3f &t ) { glTranslatef(t.x,t.y,t.z); }$/;"	f
glTranslate	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^inline void glTranslate ( const Imath::V3f &t ) { glTranslatef(t.x,t.y,t.z); }$/;"	f
glTranslated	include/GL/gl_mangle.h	1573;"	d
glTranslatef	include/GL/gl_mangle.h	1574;"	d
glUniform1f	include/GL/gl_mangle.h	1576;"	d
glUniform1f	shared/GLee.h	1920;"	d
glUniform1fARB	include/GL/gl_mangle.h	1575;"	d
glUniform1fARB	shared/GLee.h	3105;"	d
glUniform1fv	include/GL/gl_mangle.h	1578;"	d
glUniform1fv	shared/GLee.h	1928;"	d
glUniform1fvARB	include/GL/gl_mangle.h	1577;"	d
glUniform1fvARB	shared/GLee.h	3113;"	d
glUniform1i	include/GL/gl_mangle.h	1580;"	d
glUniform1i	shared/GLee.h	1924;"	d
glUniform1iARB	include/GL/gl_mangle.h	1579;"	d
glUniform1iARB	shared/GLee.h	3109;"	d
glUniform1iv	include/GL/gl_mangle.h	1582;"	d
glUniform1iv	shared/GLee.h	1932;"	d
glUniform1ivARB	include/GL/gl_mangle.h	1581;"	d
glUniform1ivARB	shared/GLee.h	3117;"	d
glUniform1ui	include/GL/gl_mangle.h	1584;"	d
glUniform1uiEXT	include/GL/gl_mangle.h	1583;"	d
glUniform1uiEXT	shared/GLee.h	8526;"	d
glUniform1uiv	include/GL/gl_mangle.h	1586;"	d
glUniform1uivEXT	include/GL/gl_mangle.h	1585;"	d
glUniform1uivEXT	shared/GLee.h	8530;"	d
glUniform2f	include/GL/gl_mangle.h	1588;"	d
glUniform2f	shared/GLee.h	1921;"	d
glUniform2fARB	include/GL/gl_mangle.h	1587;"	d
glUniform2fARB	shared/GLee.h	3106;"	d
glUniform2fv	include/GL/gl_mangle.h	1590;"	d
glUniform2fv	shared/GLee.h	1929;"	d
glUniform2fvARB	include/GL/gl_mangle.h	1589;"	d
glUniform2fvARB	shared/GLee.h	3114;"	d
glUniform2i	include/GL/gl_mangle.h	1592;"	d
glUniform2i	shared/GLee.h	1925;"	d
glUniform2iARB	include/GL/gl_mangle.h	1591;"	d
glUniform2iARB	shared/GLee.h	3110;"	d
glUniform2iv	include/GL/gl_mangle.h	1594;"	d
glUniform2iv	shared/GLee.h	1933;"	d
glUniform2ivARB	include/GL/gl_mangle.h	1593;"	d
glUniform2ivARB	shared/GLee.h	3118;"	d
glUniform2ui	include/GL/gl_mangle.h	1596;"	d
glUniform2uiEXT	include/GL/gl_mangle.h	1595;"	d
glUniform2uiEXT	shared/GLee.h	8527;"	d
glUniform2uiv	include/GL/gl_mangle.h	1598;"	d
glUniform2uivEXT	include/GL/gl_mangle.h	1597;"	d
glUniform2uivEXT	shared/GLee.h	8531;"	d
glUniform3f	include/GL/gl_mangle.h	1600;"	d
glUniform3f	shared/GLee.h	1922;"	d
glUniform3fARB	include/GL/gl_mangle.h	1599;"	d
glUniform3fARB	shared/GLee.h	3107;"	d
glUniform3fv	include/GL/gl_mangle.h	1602;"	d
glUniform3fv	shared/GLee.h	1930;"	d
glUniform3fvARB	include/GL/gl_mangle.h	1601;"	d
glUniform3fvARB	shared/GLee.h	3115;"	d
glUniform3i	include/GL/gl_mangle.h	1604;"	d
glUniform3i	shared/GLee.h	1926;"	d
glUniform3iARB	include/GL/gl_mangle.h	1603;"	d
glUniform3iARB	shared/GLee.h	3111;"	d
glUniform3iv	include/GL/gl_mangle.h	1606;"	d
glUniform3iv	shared/GLee.h	1934;"	d
glUniform3ivARB	include/GL/gl_mangle.h	1605;"	d
glUniform3ivARB	shared/GLee.h	3119;"	d
glUniform3ui	include/GL/gl_mangle.h	1608;"	d
glUniform3uiEXT	include/GL/gl_mangle.h	1607;"	d
glUniform3uiEXT	shared/GLee.h	8528;"	d
glUniform3uiv	include/GL/gl_mangle.h	1610;"	d
glUniform3uivEXT	include/GL/gl_mangle.h	1609;"	d
glUniform3uivEXT	shared/GLee.h	8532;"	d
glUniform4f	include/GL/gl_mangle.h	1612;"	d
glUniform4f	shared/GLee.h	1923;"	d
glUniform4fARB	include/GL/gl_mangle.h	1611;"	d
glUniform4fARB	shared/GLee.h	3108;"	d
glUniform4fv	include/GL/gl_mangle.h	1614;"	d
glUniform4fv	shared/GLee.h	1931;"	d
glUniform4fvARB	include/GL/gl_mangle.h	1613;"	d
glUniform4fvARB	shared/GLee.h	3116;"	d
glUniform4i	include/GL/gl_mangle.h	1616;"	d
glUniform4i	shared/GLee.h	1927;"	d
glUniform4iARB	include/GL/gl_mangle.h	1615;"	d
glUniform4iARB	shared/GLee.h	3112;"	d
glUniform4iv	include/GL/gl_mangle.h	1618;"	d
glUniform4iv	shared/GLee.h	1935;"	d
glUniform4ivARB	include/GL/gl_mangle.h	1617;"	d
glUniform4ivARB	shared/GLee.h	3120;"	d
glUniform4ui	include/GL/gl_mangle.h	1620;"	d
glUniform4uiEXT	include/GL/gl_mangle.h	1619;"	d
glUniform4uiEXT	shared/GLee.h	8529;"	d
glUniform4uiv	include/GL/gl_mangle.h	1622;"	d
glUniform4uivEXT	include/GL/gl_mangle.h	1621;"	d
glUniform4uivEXT	shared/GLee.h	8533;"	d
glUniformBlockBinding	include/GL/gl_mangle.h	1623;"	d
glUniformBufferEXT	include/GL/gl_mangle.h	1624;"	d
glUniformBufferEXT	shared/GLee.h	8617;"	d
glUniformMatrix2fv	include/GL/gl_mangle.h	1626;"	d
glUniformMatrix2fv	shared/GLee.h	1936;"	d
glUniformMatrix2fvARB	include/GL/gl_mangle.h	1625;"	d
glUniformMatrix2fvARB	shared/GLee.h	3121;"	d
glUniformMatrix2x3fv	include/GL/gl_mangle.h	1627;"	d
glUniformMatrix2x3fv	shared/GLee.h	2020;"	d
glUniformMatrix2x4fv	include/GL/gl_mangle.h	1628;"	d
glUniformMatrix2x4fv	shared/GLee.h	2022;"	d
glUniformMatrix3fv	include/GL/gl_mangle.h	1630;"	d
glUniformMatrix3fv	shared/GLee.h	1937;"	d
glUniformMatrix3fvARB	include/GL/gl_mangle.h	1629;"	d
glUniformMatrix3fvARB	shared/GLee.h	3122;"	d
glUniformMatrix3x2fv	include/GL/gl_mangle.h	1631;"	d
glUniformMatrix3x2fv	shared/GLee.h	2021;"	d
glUniformMatrix3x4fv	include/GL/gl_mangle.h	1632;"	d
glUniformMatrix3x4fv	shared/GLee.h	2024;"	d
glUniformMatrix4fv	include/GL/gl_mangle.h	1634;"	d
glUniformMatrix4fv	shared/GLee.h	1938;"	d
glUniformMatrix4fvARB	include/GL/gl_mangle.h	1633;"	d
glUniformMatrix4fvARB	shared/GLee.h	3123;"	d
glUniformMatrix4x2fv	include/GL/gl_mangle.h	1635;"	d
glUniformMatrix4x2fv	shared/GLee.h	2023;"	d
glUniformMatrix4x3fv	include/GL/gl_mangle.h	1636;"	d
glUniformMatrix4x3fv	shared/GLee.h	2025;"	d
glUniformui64NV	include/GL/gl_mangle.h	1637;"	d
glUniformui64vNV	include/GL/gl_mangle.h	1638;"	d
glUnlockArraysEXT	include/GL/gl_mangle.h	1639;"	d
glUnlockArraysEXT	shared/GLee.h	4650;"	d
glUnmapBuffer	include/GL/gl_mangle.h	1641;"	d
glUnmapBuffer	shared/GLee.h	1603;"	d
glUnmapBufferARB	include/GL/gl_mangle.h	1640;"	d
glUnmapBufferARB	shared/GLee.h	2934;"	d
glUnmapNamedBufferEXT	include/GL/gl_mangle.h	1642;"	d
glUnmapObjectBufferATI	include/GL/gl_mangle.h	1643;"	d
glUnmapObjectBufferATI	shared/GLee.h	8105;"	d
glUpdateObjectBufferATI	include/GL/gl_mangle.h	1644;"	d
glUpdateObjectBufferATI	shared/GLee.h	7052;"	d
glUseProgram	include/GL/gl_mangle.h	1645;"	d
glUseProgram	shared/GLee.h	1919;"	d
glUseProgramObjectARB	include/GL/gl_mangle.h	1646;"	d
glUseProgramObjectARB	shared/GLee.h	3103;"	d
glUseShaderProgramEXT	include/GL/gl_mangle.h	1647;"	d
glValidateProgram	include/GL/gl_mangle.h	1649;"	d
glValidateProgram	shared/GLee.h	1939;"	d
glValidateProgramARB	include/GL/gl_mangle.h	1648;"	d
glValidateProgramARB	shared/GLee.h	3104;"	d
glVariantArrayObjectATI	include/GL/gl_mangle.h	1650;"	d
glVariantArrayObjectATI	shared/GLee.h	7059;"	d
glVariantPointerEXT	include/GL/gl_mangle.h	1655;"	d
glVariantPointerEXT	shared/GLee.h	7287;"	d
glVariantbvEXT	include/GL/gl_mangle.h	1651;"	d
glVariantbvEXT	shared/GLee.h	7279;"	d
glVariantdvEXT	include/GL/gl_mangle.h	1652;"	d
glVariantdvEXT	shared/GLee.h	7283;"	d
glVariantfvEXT	include/GL/gl_mangle.h	1653;"	d
glVariantfvEXT	shared/GLee.h	7282;"	d
glVariantivEXT	include/GL/gl_mangle.h	1654;"	d
glVariantivEXT	shared/GLee.h	7281;"	d
glVariantsvEXT	include/GL/gl_mangle.h	1656;"	d
glVariantsvEXT	shared/GLee.h	7280;"	d
glVariantubvEXT	include/GL/gl_mangle.h	1657;"	d
glVariantubvEXT	shared/GLee.h	7284;"	d
glVariantuivEXT	include/GL/gl_mangle.h	1658;"	d
glVariantuivEXT	shared/GLee.h	7286;"	d
glVariantusvEXT	include/GL/gl_mangle.h	1659;"	d
glVariantusvEXT	shared/GLee.h	7285;"	d
glVertex	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^inline void glVertex    ( const Imath::V2f &v ) { glVertex2f(v.x,v.y);       }$/;"	f
glVertex	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^inline void glVertex    ( const Imath::V3f &v ) { glVertex3f(v.x,v.y,v.z);   }$/;"	f
glVertex	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^inline void glVertex    ( const Imath::V2f &v ) { glVertex2f(v.x,v.y);       }$/;"	f
glVertex	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^inline void glVertex    ( const Imath::V3f &v ) { glVertex3f(v.x,v.y,v.z);   }$/;"	f
glVertex2d	include/GL/gl_mangle.h	1660;"	d
glVertex2dv	include/GL/gl_mangle.h	1661;"	d
glVertex2f	include/GL/gl_mangle.h	1662;"	d
glVertex2fv	include/GL/gl_mangle.h	1663;"	d
glVertex2hNV	include/GL/gl_mangle.h	1664;"	d
glVertex2hNV	shared/GLee.h	7993;"	d
glVertex2hvNV	include/GL/gl_mangle.h	1665;"	d
glVertex2hvNV	shared/GLee.h	7994;"	d
glVertex2i	include/GL/gl_mangle.h	1666;"	d
glVertex2iv	include/GL/gl_mangle.h	1667;"	d
glVertex2s	include/GL/gl_mangle.h	1668;"	d
glVertex2sv	include/GL/gl_mangle.h	1669;"	d
glVertex3d	include/GL/gl_mangle.h	1670;"	d
glVertex3dv	include/GL/gl_mangle.h	1671;"	d
glVertex3f	include/GL/gl_mangle.h	1672;"	d
glVertex3fv	include/GL/gl_mangle.h	1673;"	d
glVertex3hNV	include/GL/gl_mangle.h	1674;"	d
glVertex3hNV	shared/GLee.h	7995;"	d
glVertex3hvNV	include/GL/gl_mangle.h	1675;"	d
glVertex3hvNV	shared/GLee.h	7996;"	d
glVertex3i	include/GL/gl_mangle.h	1676;"	d
glVertex3iv	include/GL/gl_mangle.h	1677;"	d
glVertex3s	include/GL/gl_mangle.h	1678;"	d
glVertex3sv	include/GL/gl_mangle.h	1679;"	d
glVertex4d	include/GL/gl_mangle.h	1680;"	d
glVertex4dv	include/GL/gl_mangle.h	1681;"	d
glVertex4f	include/GL/gl_mangle.h	1682;"	d
glVertex4fv	include/GL/gl_mangle.h	1683;"	d
glVertex4hNV	include/GL/gl_mangle.h	1684;"	d
glVertex4hNV	shared/GLee.h	7997;"	d
glVertex4hvNV	include/GL/gl_mangle.h	1685;"	d
glVertex4hvNV	shared/GLee.h	7998;"	d
glVertex4i	include/GL/gl_mangle.h	1686;"	d
glVertex4iv	include/GL/gl_mangle.h	1687;"	d
glVertex4s	include/GL/gl_mangle.h	1688;"	d
glVertex4sv	include/GL/gl_mangle.h	1689;"	d
glVertexArrayParameteriAPPLE	include/GL/gl_mangle.h	1690;"	d
glVertexArrayParameteriAPPLE	shared/GLee.h	7744;"	d
glVertexArrayRangeAPPLE	include/GL/gl_mangle.h	1691;"	d
glVertexArrayRangeAPPLE	shared/GLee.h	7742;"	d
glVertexArrayRangeNV	include/GL/gl_mangle.h	1692;"	d
glVertexArrayRangeNV	shared/GLee.h	5712;"	d
glVertexAttrib1d	include/GL/gl_mangle.h	1694;"	d
glVertexAttrib1d	shared/GLee.h	1940;"	d
glVertexAttrib1dARB	include/GL/gl_mangle.h	1693;"	d
glVertexAttrib1dARB	shared/GLee.h	2780;"	d
glVertexAttrib1dNV	include/GL/gl_mangle.h	1695;"	d
glVertexAttrib1dNV	shared/GLee.h	6702;"	d
glVertexAttrib1dv	include/GL/gl_mangle.h	1697;"	d
glVertexAttrib1dv	shared/GLee.h	1941;"	d
glVertexAttrib1dvARB	include/GL/gl_mangle.h	1696;"	d
glVertexAttrib1dvARB	shared/GLee.h	2781;"	d
glVertexAttrib1dvNV	include/GL/gl_mangle.h	1698;"	d
glVertexAttrib1dvNV	shared/GLee.h	6703;"	d
glVertexAttrib1f	include/GL/gl_mangle.h	1700;"	d
glVertexAttrib1f	shared/GLee.h	1942;"	d
glVertexAttrib1fARB	include/GL/gl_mangle.h	1699;"	d
glVertexAttrib1fARB	shared/GLee.h	2782;"	d
glVertexAttrib1fNV	include/GL/gl_mangle.h	1701;"	d
glVertexAttrib1fNV	shared/GLee.h	6704;"	d
glVertexAttrib1fv	include/GL/gl_mangle.h	1703;"	d
glVertexAttrib1fv	shared/GLee.h	1943;"	d
glVertexAttrib1fvARB	include/GL/gl_mangle.h	1702;"	d
glVertexAttrib1fvARB	shared/GLee.h	2783;"	d
glVertexAttrib1fvNV	include/GL/gl_mangle.h	1704;"	d
glVertexAttrib1fvNV	shared/GLee.h	6705;"	d
glVertexAttrib1hNV	include/GL/gl_mangle.h	1705;"	d
glVertexAttrib1hNV	shared/GLee.h	8027;"	d
glVertexAttrib1hvNV	include/GL/gl_mangle.h	1706;"	d
glVertexAttrib1hvNV	shared/GLee.h	8028;"	d
glVertexAttrib1s	include/GL/gl_mangle.h	1708;"	d
glVertexAttrib1s	shared/GLee.h	1944;"	d
glVertexAttrib1sARB	include/GL/gl_mangle.h	1707;"	d
glVertexAttrib1sARB	shared/GLee.h	2784;"	d
glVertexAttrib1sNV	include/GL/gl_mangle.h	1709;"	d
glVertexAttrib1sNV	shared/GLee.h	6706;"	d
glVertexAttrib1sv	include/GL/gl_mangle.h	1711;"	d
glVertexAttrib1sv	shared/GLee.h	1945;"	d
glVertexAttrib1svARB	include/GL/gl_mangle.h	1710;"	d
glVertexAttrib1svARB	shared/GLee.h	2785;"	d
glVertexAttrib1svNV	include/GL/gl_mangle.h	1712;"	d
glVertexAttrib1svNV	shared/GLee.h	6707;"	d
glVertexAttrib2d	include/GL/gl_mangle.h	1714;"	d
glVertexAttrib2d	shared/GLee.h	1946;"	d
glVertexAttrib2dARB	include/GL/gl_mangle.h	1713;"	d
glVertexAttrib2dARB	shared/GLee.h	2786;"	d
glVertexAttrib2dNV	include/GL/gl_mangle.h	1715;"	d
glVertexAttrib2dNV	shared/GLee.h	6708;"	d
glVertexAttrib2dv	include/GL/gl_mangle.h	1717;"	d
glVertexAttrib2dv	shared/GLee.h	1947;"	d
glVertexAttrib2dvARB	include/GL/gl_mangle.h	1716;"	d
glVertexAttrib2dvARB	shared/GLee.h	2787;"	d
glVertexAttrib2dvNV	include/GL/gl_mangle.h	1718;"	d
glVertexAttrib2dvNV	shared/GLee.h	6709;"	d
glVertexAttrib2f	include/GL/gl_mangle.h	1720;"	d
glVertexAttrib2f	shared/GLee.h	1948;"	d
glVertexAttrib2fARB	include/GL/gl_mangle.h	1719;"	d
glVertexAttrib2fARB	shared/GLee.h	2788;"	d
glVertexAttrib2fNV	include/GL/gl_mangle.h	1721;"	d
glVertexAttrib2fNV	shared/GLee.h	6710;"	d
glVertexAttrib2fv	include/GL/gl_mangle.h	1723;"	d
glVertexAttrib2fv	shared/GLee.h	1949;"	d
glVertexAttrib2fvARB	include/GL/gl_mangle.h	1722;"	d
glVertexAttrib2fvARB	shared/GLee.h	2789;"	d
glVertexAttrib2fvNV	include/GL/gl_mangle.h	1724;"	d
glVertexAttrib2fvNV	shared/GLee.h	6711;"	d
glVertexAttrib2hNV	include/GL/gl_mangle.h	1725;"	d
glVertexAttrib2hNV	shared/GLee.h	8029;"	d
glVertexAttrib2hvNV	include/GL/gl_mangle.h	1726;"	d
glVertexAttrib2hvNV	shared/GLee.h	8030;"	d
glVertexAttrib2s	include/GL/gl_mangle.h	1728;"	d
glVertexAttrib2s	shared/GLee.h	1950;"	d
glVertexAttrib2sARB	include/GL/gl_mangle.h	1727;"	d
glVertexAttrib2sARB	shared/GLee.h	2790;"	d
glVertexAttrib2sNV	include/GL/gl_mangle.h	1729;"	d
glVertexAttrib2sNV	shared/GLee.h	6712;"	d
glVertexAttrib2sv	include/GL/gl_mangle.h	1731;"	d
glVertexAttrib2sv	shared/GLee.h	1951;"	d
glVertexAttrib2svARB	include/GL/gl_mangle.h	1730;"	d
glVertexAttrib2svARB	shared/GLee.h	2791;"	d
glVertexAttrib2svNV	include/GL/gl_mangle.h	1732;"	d
glVertexAttrib2svNV	shared/GLee.h	6713;"	d
glVertexAttrib3d	include/GL/gl_mangle.h	1734;"	d
glVertexAttrib3d	shared/GLee.h	1952;"	d
glVertexAttrib3dARB	include/GL/gl_mangle.h	1733;"	d
glVertexAttrib3dARB	shared/GLee.h	2792;"	d
glVertexAttrib3dNV	include/GL/gl_mangle.h	1735;"	d
glVertexAttrib3dNV	shared/GLee.h	6714;"	d
glVertexAttrib3dv	include/GL/gl_mangle.h	1737;"	d
glVertexAttrib3dv	shared/GLee.h	1953;"	d
glVertexAttrib3dvARB	include/GL/gl_mangle.h	1736;"	d
glVertexAttrib3dvARB	shared/GLee.h	2793;"	d
glVertexAttrib3dvNV	include/GL/gl_mangle.h	1738;"	d
glVertexAttrib3dvNV	shared/GLee.h	6715;"	d
glVertexAttrib3f	include/GL/gl_mangle.h	1740;"	d
glVertexAttrib3f	shared/GLee.h	1954;"	d
glVertexAttrib3fARB	include/GL/gl_mangle.h	1739;"	d
glVertexAttrib3fARB	shared/GLee.h	2794;"	d
glVertexAttrib3fNV	include/GL/gl_mangle.h	1741;"	d
glVertexAttrib3fNV	shared/GLee.h	6716;"	d
glVertexAttrib3fv	include/GL/gl_mangle.h	1743;"	d
glVertexAttrib3fv	shared/GLee.h	1955;"	d
glVertexAttrib3fvARB	include/GL/gl_mangle.h	1742;"	d
glVertexAttrib3fvARB	shared/GLee.h	2795;"	d
glVertexAttrib3fvNV	include/GL/gl_mangle.h	1744;"	d
glVertexAttrib3fvNV	shared/GLee.h	6717;"	d
glVertexAttrib3hNV	include/GL/gl_mangle.h	1745;"	d
glVertexAttrib3hNV	shared/GLee.h	8031;"	d
glVertexAttrib3hvNV	include/GL/gl_mangle.h	1746;"	d
glVertexAttrib3hvNV	shared/GLee.h	8032;"	d
glVertexAttrib3s	include/GL/gl_mangle.h	1748;"	d
glVertexAttrib3s	shared/GLee.h	1956;"	d
glVertexAttrib3sARB	include/GL/gl_mangle.h	1747;"	d
glVertexAttrib3sARB	shared/GLee.h	2796;"	d
glVertexAttrib3sNV	include/GL/gl_mangle.h	1749;"	d
glVertexAttrib3sNV	shared/GLee.h	6718;"	d
glVertexAttrib3sv	include/GL/gl_mangle.h	1751;"	d
glVertexAttrib3sv	shared/GLee.h	1957;"	d
glVertexAttrib3svARB	include/GL/gl_mangle.h	1750;"	d
glVertexAttrib3svARB	shared/GLee.h	2797;"	d
glVertexAttrib3svNV	include/GL/gl_mangle.h	1752;"	d
glVertexAttrib3svNV	shared/GLee.h	6719;"	d
glVertexAttrib4Nbv	include/GL/gl_mangle.h	1772;"	d
glVertexAttrib4Nbv	shared/GLee.h	1958;"	d
glVertexAttrib4NbvARB	include/GL/gl_mangle.h	1771;"	d
glVertexAttrib4NbvARB	shared/GLee.h	2798;"	d
glVertexAttrib4Niv	include/GL/gl_mangle.h	1774;"	d
glVertexAttrib4Niv	shared/GLee.h	1959;"	d
glVertexAttrib4NivARB	include/GL/gl_mangle.h	1773;"	d
glVertexAttrib4NivARB	shared/GLee.h	2799;"	d
glVertexAttrib4Nsv	include/GL/gl_mangle.h	1776;"	d
glVertexAttrib4Nsv	shared/GLee.h	1960;"	d
glVertexAttrib4NsvARB	include/GL/gl_mangle.h	1775;"	d
glVertexAttrib4NsvARB	shared/GLee.h	2800;"	d
glVertexAttrib4Nub	include/GL/gl_mangle.h	1778;"	d
glVertexAttrib4Nub	shared/GLee.h	1961;"	d
glVertexAttrib4NubARB	include/GL/gl_mangle.h	1777;"	d
glVertexAttrib4NubARB	shared/GLee.h	2801;"	d
glVertexAttrib4Nubv	include/GL/gl_mangle.h	1780;"	d
glVertexAttrib4Nubv	shared/GLee.h	1962;"	d
glVertexAttrib4NubvARB	include/GL/gl_mangle.h	1779;"	d
glVertexAttrib4NubvARB	shared/GLee.h	2802;"	d
glVertexAttrib4Nuiv	include/GL/gl_mangle.h	1782;"	d
glVertexAttrib4Nuiv	shared/GLee.h	1963;"	d
glVertexAttrib4NuivARB	include/GL/gl_mangle.h	1781;"	d
glVertexAttrib4NuivARB	shared/GLee.h	2803;"	d
glVertexAttrib4Nusv	include/GL/gl_mangle.h	1784;"	d
glVertexAttrib4Nusv	shared/GLee.h	1964;"	d
glVertexAttrib4NusvARB	include/GL/gl_mangle.h	1783;"	d
glVertexAttrib4NusvARB	shared/GLee.h	2804;"	d
glVertexAttrib4bv	include/GL/gl_mangle.h	1754;"	d
glVertexAttrib4bv	shared/GLee.h	1965;"	d
glVertexAttrib4bvARB	include/GL/gl_mangle.h	1753;"	d
glVertexAttrib4bvARB	shared/GLee.h	2805;"	d
glVertexAttrib4d	include/GL/gl_mangle.h	1756;"	d
glVertexAttrib4d	shared/GLee.h	1966;"	d
glVertexAttrib4dARB	include/GL/gl_mangle.h	1755;"	d
glVertexAttrib4dARB	shared/GLee.h	2806;"	d
glVertexAttrib4dNV	include/GL/gl_mangle.h	1757;"	d
glVertexAttrib4dNV	shared/GLee.h	6720;"	d
glVertexAttrib4dv	include/GL/gl_mangle.h	1759;"	d
glVertexAttrib4dv	shared/GLee.h	1967;"	d
glVertexAttrib4dvARB	include/GL/gl_mangle.h	1758;"	d
glVertexAttrib4dvARB	shared/GLee.h	2807;"	d
glVertexAttrib4dvNV	include/GL/gl_mangle.h	1760;"	d
glVertexAttrib4dvNV	shared/GLee.h	6721;"	d
glVertexAttrib4f	include/GL/gl_mangle.h	1762;"	d
glVertexAttrib4f	shared/GLee.h	1968;"	d
glVertexAttrib4fARB	include/GL/gl_mangle.h	1761;"	d
glVertexAttrib4fARB	shared/GLee.h	2808;"	d
glVertexAttrib4fNV	include/GL/gl_mangle.h	1763;"	d
glVertexAttrib4fNV	shared/GLee.h	6722;"	d
glVertexAttrib4fv	include/GL/gl_mangle.h	1765;"	d
glVertexAttrib4fv	shared/GLee.h	1969;"	d
glVertexAttrib4fvARB	include/GL/gl_mangle.h	1764;"	d
glVertexAttrib4fvARB	shared/GLee.h	2809;"	d
glVertexAttrib4fvNV	include/GL/gl_mangle.h	1766;"	d
glVertexAttrib4fvNV	shared/GLee.h	6723;"	d
glVertexAttrib4hNV	include/GL/gl_mangle.h	1767;"	d
glVertexAttrib4hNV	shared/GLee.h	8033;"	d
glVertexAttrib4hvNV	include/GL/gl_mangle.h	1768;"	d
glVertexAttrib4hvNV	shared/GLee.h	8034;"	d
glVertexAttrib4iv	include/GL/gl_mangle.h	1770;"	d
glVertexAttrib4iv	shared/GLee.h	1970;"	d
glVertexAttrib4ivARB	include/GL/gl_mangle.h	1769;"	d
glVertexAttrib4ivARB	shared/GLee.h	2810;"	d
glVertexAttrib4s	include/GL/gl_mangle.h	1786;"	d
glVertexAttrib4s	shared/GLee.h	1971;"	d
glVertexAttrib4sARB	include/GL/gl_mangle.h	1785;"	d
glVertexAttrib4sARB	shared/GLee.h	2811;"	d
glVertexAttrib4sNV	include/GL/gl_mangle.h	1787;"	d
glVertexAttrib4sNV	shared/GLee.h	6724;"	d
glVertexAttrib4sv	include/GL/gl_mangle.h	1789;"	d
glVertexAttrib4sv	shared/GLee.h	1972;"	d
glVertexAttrib4svARB	include/GL/gl_mangle.h	1788;"	d
glVertexAttrib4svARB	shared/GLee.h	2812;"	d
glVertexAttrib4svNV	include/GL/gl_mangle.h	1790;"	d
glVertexAttrib4svNV	shared/GLee.h	6725;"	d
glVertexAttrib4ubNV	include/GL/gl_mangle.h	1791;"	d
glVertexAttrib4ubNV	shared/GLee.h	6726;"	d
glVertexAttrib4ubv	include/GL/gl_mangle.h	1793;"	d
glVertexAttrib4ubv	shared/GLee.h	1973;"	d
glVertexAttrib4ubvARB	include/GL/gl_mangle.h	1792;"	d
glVertexAttrib4ubvARB	shared/GLee.h	2813;"	d
glVertexAttrib4ubvNV	include/GL/gl_mangle.h	1794;"	d
glVertexAttrib4ubvNV	shared/GLee.h	6727;"	d
glVertexAttrib4uiv	include/GL/gl_mangle.h	1796;"	d
glVertexAttrib4uiv	shared/GLee.h	1974;"	d
glVertexAttrib4uivARB	include/GL/gl_mangle.h	1795;"	d
glVertexAttrib4uivARB	shared/GLee.h	2814;"	d
glVertexAttrib4usv	include/GL/gl_mangle.h	1798;"	d
glVertexAttrib4usv	shared/GLee.h	1975;"	d
glVertexAttrib4usvARB	include/GL/gl_mangle.h	1797;"	d
glVertexAttrib4usvARB	shared/GLee.h	2815;"	d
glVertexAttribArrayObjectATI	include/GL/gl_mangle.h	1799;"	d
glVertexAttribArrayObjectATI	shared/GLee.h	8138;"	d
glVertexAttribDivisorARB	include/GL/gl_mangle.h	1800;"	d
glVertexAttribFormatNV	include/GL/gl_mangle.h	1801;"	d
glVertexAttribI1i	include/GL/gl_mangle.h	1803;"	d
glVertexAttribI1iEXT	include/GL/gl_mangle.h	1802;"	d
glVertexAttribI1iEXT	shared/GLee.h	8534;"	d
glVertexAttribI1iv	include/GL/gl_mangle.h	1805;"	d
glVertexAttribI1ivEXT	include/GL/gl_mangle.h	1804;"	d
glVertexAttribI1ivEXT	shared/GLee.h	8542;"	d
glVertexAttribI1ui	include/GL/gl_mangle.h	1807;"	d
glVertexAttribI1uiEXT	include/GL/gl_mangle.h	1806;"	d
glVertexAttribI1uiEXT	shared/GLee.h	8538;"	d
glVertexAttribI1uiv	include/GL/gl_mangle.h	1809;"	d
glVertexAttribI1uivEXT	include/GL/gl_mangle.h	1808;"	d
glVertexAttribI1uivEXT	shared/GLee.h	8546;"	d
glVertexAttribI2i	include/GL/gl_mangle.h	1811;"	d
glVertexAttribI2iEXT	include/GL/gl_mangle.h	1810;"	d
glVertexAttribI2iEXT	shared/GLee.h	8535;"	d
glVertexAttribI2iv	include/GL/gl_mangle.h	1813;"	d
glVertexAttribI2ivEXT	include/GL/gl_mangle.h	1812;"	d
glVertexAttribI2ivEXT	shared/GLee.h	8543;"	d
glVertexAttribI2ui	include/GL/gl_mangle.h	1815;"	d
glVertexAttribI2uiEXT	include/GL/gl_mangle.h	1814;"	d
glVertexAttribI2uiEXT	shared/GLee.h	8539;"	d
glVertexAttribI2uiv	include/GL/gl_mangle.h	1817;"	d
glVertexAttribI2uivEXT	include/GL/gl_mangle.h	1816;"	d
glVertexAttribI2uivEXT	shared/GLee.h	8547;"	d
glVertexAttribI3i	include/GL/gl_mangle.h	1819;"	d
glVertexAttribI3iEXT	include/GL/gl_mangle.h	1818;"	d
glVertexAttribI3iEXT	shared/GLee.h	8536;"	d
glVertexAttribI3iv	include/GL/gl_mangle.h	1821;"	d
glVertexAttribI3ivEXT	include/GL/gl_mangle.h	1820;"	d
glVertexAttribI3ivEXT	shared/GLee.h	8544;"	d
glVertexAttribI3ui	include/GL/gl_mangle.h	1823;"	d
glVertexAttribI3uiEXT	include/GL/gl_mangle.h	1822;"	d
glVertexAttribI3uiEXT	shared/GLee.h	8540;"	d
glVertexAttribI3uiv	include/GL/gl_mangle.h	1825;"	d
glVertexAttribI3uivEXT	include/GL/gl_mangle.h	1824;"	d
glVertexAttribI3uivEXT	shared/GLee.h	8548;"	d
glVertexAttribI4bv	include/GL/gl_mangle.h	1827;"	d
glVertexAttribI4bvEXT	include/GL/gl_mangle.h	1826;"	d
glVertexAttribI4bvEXT	shared/GLee.h	8550;"	d
glVertexAttribI4i	include/GL/gl_mangle.h	1829;"	d
glVertexAttribI4iEXT	include/GL/gl_mangle.h	1828;"	d
glVertexAttribI4iEXT	shared/GLee.h	8537;"	d
glVertexAttribI4iv	include/GL/gl_mangle.h	1831;"	d
glVertexAttribI4ivEXT	include/GL/gl_mangle.h	1830;"	d
glVertexAttribI4ivEXT	shared/GLee.h	8545;"	d
glVertexAttribI4sv	include/GL/gl_mangle.h	1833;"	d
glVertexAttribI4svEXT	include/GL/gl_mangle.h	1832;"	d
glVertexAttribI4svEXT	shared/GLee.h	8551;"	d
glVertexAttribI4ubv	include/GL/gl_mangle.h	1835;"	d
glVertexAttribI4ubvEXT	include/GL/gl_mangle.h	1834;"	d
glVertexAttribI4ubvEXT	shared/GLee.h	8552;"	d
glVertexAttribI4ui	include/GL/gl_mangle.h	1837;"	d
glVertexAttribI4uiEXT	include/GL/gl_mangle.h	1836;"	d
glVertexAttribI4uiEXT	shared/GLee.h	8541;"	d
glVertexAttribI4uiv	include/GL/gl_mangle.h	1839;"	d
glVertexAttribI4uivEXT	include/GL/gl_mangle.h	1838;"	d
glVertexAttribI4uivEXT	shared/GLee.h	8549;"	d
glVertexAttribI4usv	include/GL/gl_mangle.h	1841;"	d
glVertexAttribI4usvEXT	include/GL/gl_mangle.h	1840;"	d
glVertexAttribI4usvEXT	shared/GLee.h	8553;"	d
glVertexAttribIFormatNV	include/GL/gl_mangle.h	1842;"	d
glVertexAttribIPointer	include/GL/gl_mangle.h	1844;"	d
glVertexAttribIPointerEXT	include/GL/gl_mangle.h	1843;"	d
glVertexAttribIPointerEXT	shared/GLee.h	8554;"	d
glVertexAttribPointer	include/GL/gl_mangle.h	1846;"	d
glVertexAttribPointer	shared/GLee.h	1976;"	d
glVertexAttribPointerARB	include/GL/gl_mangle.h	1845;"	d
glVertexAttribPointerARB	shared/GLee.h	2816;"	d
glVertexAttribPointerNV	include/GL/gl_mangle.h	1847;"	d
glVertexAttribPointerNV	shared/GLee.h	6701;"	d
glVertexAttribs1dvNV	include/GL/gl_mangle.h	1848;"	d
glVertexAttribs1dvNV	shared/GLee.h	6728;"	d
glVertexAttribs1fvNV	include/GL/gl_mangle.h	1849;"	d
glVertexAttribs1fvNV	shared/GLee.h	6729;"	d
glVertexAttribs1hvNV	include/GL/gl_mangle.h	1850;"	d
glVertexAttribs1hvNV	shared/GLee.h	8035;"	d
glVertexAttribs1svNV	include/GL/gl_mangle.h	1851;"	d
glVertexAttribs1svNV	shared/GLee.h	6730;"	d
glVertexAttribs2dvNV	include/GL/gl_mangle.h	1852;"	d
glVertexAttribs2dvNV	shared/GLee.h	6731;"	d
glVertexAttribs2fvNV	include/GL/gl_mangle.h	1853;"	d
glVertexAttribs2fvNV	shared/GLee.h	6732;"	d
glVertexAttribs2hvNV	include/GL/gl_mangle.h	1854;"	d
glVertexAttribs2hvNV	shared/GLee.h	8036;"	d
glVertexAttribs2svNV	include/GL/gl_mangle.h	1855;"	d
glVertexAttribs2svNV	shared/GLee.h	6733;"	d
glVertexAttribs3dvNV	include/GL/gl_mangle.h	1856;"	d
glVertexAttribs3dvNV	shared/GLee.h	6734;"	d
glVertexAttribs3fvNV	include/GL/gl_mangle.h	1857;"	d
glVertexAttribs3fvNV	shared/GLee.h	6735;"	d
glVertexAttribs3hvNV	include/GL/gl_mangle.h	1858;"	d
glVertexAttribs3hvNV	shared/GLee.h	8037;"	d
glVertexAttribs3svNV	include/GL/gl_mangle.h	1859;"	d
glVertexAttribs3svNV	shared/GLee.h	6736;"	d
glVertexAttribs4dvNV	include/GL/gl_mangle.h	1860;"	d
glVertexAttribs4dvNV	shared/GLee.h	6737;"	d
glVertexAttribs4fvNV	include/GL/gl_mangle.h	1861;"	d
glVertexAttribs4fvNV	shared/GLee.h	6738;"	d
glVertexAttribs4hvNV	include/GL/gl_mangle.h	1862;"	d
glVertexAttribs4hvNV	shared/GLee.h	8038;"	d
glVertexAttribs4svNV	include/GL/gl_mangle.h	1863;"	d
glVertexAttribs4svNV	shared/GLee.h	6739;"	d
glVertexAttribs4ubvNV	include/GL/gl_mangle.h	1864;"	d
glVertexAttribs4ubvNV	shared/GLee.h	6740;"	d
glVertexBlendARB	include/GL/gl_mangle.h	1865;"	d
glVertexBlendARB	shared/GLee.h	2389;"	d
glVertexBlendEnvfATI	include/GL/gl_mangle.h	1866;"	d
glVertexBlendEnvfATI	shared/GLee.h	7458;"	d
glVertexBlendEnviATI	include/GL/gl_mangle.h	1867;"	d
glVertexBlendEnviATI	shared/GLee.h	7457;"	d
glVertexFormatNV	include/GL/gl_mangle.h	1868;"	d
glVertexPointer	include/GL/gl_mangle.h	1871;"	d
glVertexPointerEXT	include/GL/gl_mangle.h	1869;"	d
glVertexPointerEXT	shared/GLee.h	3947;"	d
glVertexPointerListIBM	include/GL/gl_mangle.h	1870;"	d
glVertexPointerListIBM	shared/GLee.h	6027;"	d
glVertexPointervINTEL	include/GL/gl_mangle.h	1872;"	d
glVertexPointervINTEL	shared/GLee.h	4953;"	d
glVertexStream1dATI	include/GL/gl_mangle.h	1873;"	d
glVertexStream1dATI	shared/GLee.h	7420;"	d
glVertexStream1dvATI	include/GL/gl_mangle.h	1874;"	d
glVertexStream1dvATI	shared/GLee.h	7421;"	d
glVertexStream1fATI	include/GL/gl_mangle.h	1875;"	d
glVertexStream1fATI	shared/GLee.h	7418;"	d
glVertexStream1fvATI	include/GL/gl_mangle.h	1876;"	d
glVertexStream1fvATI	shared/GLee.h	7419;"	d
glVertexStream1iATI	include/GL/gl_mangle.h	1877;"	d
glVertexStream1iATI	shared/GLee.h	7416;"	d
glVertexStream1ivATI	include/GL/gl_mangle.h	1878;"	d
glVertexStream1ivATI	shared/GLee.h	7417;"	d
glVertexStream1sATI	include/GL/gl_mangle.h	1879;"	d
glVertexStream1sATI	shared/GLee.h	7414;"	d
glVertexStream1svATI	include/GL/gl_mangle.h	1880;"	d
glVertexStream1svATI	shared/GLee.h	7415;"	d
glVertexStream2dATI	include/GL/gl_mangle.h	1881;"	d
glVertexStream2dATI	shared/GLee.h	7428;"	d
glVertexStream2dvATI	include/GL/gl_mangle.h	1882;"	d
glVertexStream2dvATI	shared/GLee.h	7429;"	d
glVertexStream2fATI	include/GL/gl_mangle.h	1883;"	d
glVertexStream2fATI	shared/GLee.h	7426;"	d
glVertexStream2fvATI	include/GL/gl_mangle.h	1884;"	d
glVertexStream2fvATI	shared/GLee.h	7427;"	d
glVertexStream2iATI	include/GL/gl_mangle.h	1885;"	d
glVertexStream2iATI	shared/GLee.h	7424;"	d
glVertexStream2ivATI	include/GL/gl_mangle.h	1886;"	d
glVertexStream2ivATI	shared/GLee.h	7425;"	d
glVertexStream2sATI	include/GL/gl_mangle.h	1887;"	d
glVertexStream2sATI	shared/GLee.h	7422;"	d
glVertexStream2svATI	include/GL/gl_mangle.h	1888;"	d
glVertexStream2svATI	shared/GLee.h	7423;"	d
glVertexStream3dATI	include/GL/gl_mangle.h	1889;"	d
glVertexStream3dATI	shared/GLee.h	7436;"	d
glVertexStream3dvATI	include/GL/gl_mangle.h	1890;"	d
glVertexStream3dvATI	shared/GLee.h	7437;"	d
glVertexStream3fATI	include/GL/gl_mangle.h	1891;"	d
glVertexStream3fATI	shared/GLee.h	7434;"	d
glVertexStream3fvATI	include/GL/gl_mangle.h	1892;"	d
glVertexStream3fvATI	shared/GLee.h	7435;"	d
glVertexStream3iATI	include/GL/gl_mangle.h	1893;"	d
glVertexStream3iATI	shared/GLee.h	7432;"	d
glVertexStream3ivATI	include/GL/gl_mangle.h	1894;"	d
glVertexStream3ivATI	shared/GLee.h	7433;"	d
glVertexStream3sATI	include/GL/gl_mangle.h	1895;"	d
glVertexStream3sATI	shared/GLee.h	7430;"	d
glVertexStream3svATI	include/GL/gl_mangle.h	1896;"	d
glVertexStream3svATI	shared/GLee.h	7431;"	d
glVertexStream4dATI	include/GL/gl_mangle.h	1897;"	d
glVertexStream4dATI	shared/GLee.h	7444;"	d
glVertexStream4dvATI	include/GL/gl_mangle.h	1898;"	d
glVertexStream4dvATI	shared/GLee.h	7445;"	d
glVertexStream4fATI	include/GL/gl_mangle.h	1899;"	d
glVertexStream4fATI	shared/GLee.h	7442;"	d
glVertexStream4fvATI	include/GL/gl_mangle.h	1900;"	d
glVertexStream4fvATI	shared/GLee.h	7443;"	d
glVertexStream4iATI	include/GL/gl_mangle.h	1901;"	d
glVertexStream4iATI	shared/GLee.h	7440;"	d
glVertexStream4ivATI	include/GL/gl_mangle.h	1902;"	d
glVertexStream4ivATI	shared/GLee.h	7441;"	d
glVertexStream4sATI	include/GL/gl_mangle.h	1903;"	d
glVertexStream4sATI	shared/GLee.h	7438;"	d
glVertexStream4svATI	include/GL/gl_mangle.h	1904;"	d
glVertexStream4svATI	shared/GLee.h	7439;"	d
glVertexWeightPointerEXT	include/GL/gl_mangle.h	1909;"	d
glVertexWeightPointerEXT	shared/GLee.h	5683;"	d
glVertexWeightfEXT	include/GL/gl_mangle.h	1905;"	d
glVertexWeightfEXT	shared/GLee.h	5681;"	d
glVertexWeightfvEXT	include/GL/gl_mangle.h	1906;"	d
glVertexWeightfvEXT	shared/GLee.h	5682;"	d
glVertexWeighthNV	include/GL/gl_mangle.h	1907;"	d
glVertexWeighthNV	shared/GLee.h	8025;"	d
glVertexWeighthvNV	include/GL/gl_mangle.h	1908;"	d
glVertexWeighthvNV	shared/GLee.h	8026;"	d
glVideoCaptureNV	include/GL/gl_mangle.h	1910;"	d
glVideoCaptureStreamParameterdvNV	include/GL/gl_mangle.h	1911;"	d
glVideoCaptureStreamParameterfvNV	include/GL/gl_mangle.h	1912;"	d
glVideoCaptureStreamParameterivNV	include/GL/gl_mangle.h	1913;"	d
glViewport	include/GL/gl_mangle.h	1914;"	d
glWaitSync	include/GL/gl_mangle.h	1915;"	d
glWeightPointerARB	include/GL/gl_mangle.h	1920;"	d
glWeightPointerARB	shared/GLee.h	2388;"	d
glWeightbvARB	include/GL/gl_mangle.h	1916;"	d
glWeightbvARB	shared/GLee.h	2380;"	d
glWeightdvARB	include/GL/gl_mangle.h	1917;"	d
glWeightdvARB	shared/GLee.h	2384;"	d
glWeightfvARB	include/GL/gl_mangle.h	1918;"	d
glWeightfvARB	shared/GLee.h	2383;"	d
glWeightivARB	include/GL/gl_mangle.h	1919;"	d
glWeightivARB	shared/GLee.h	2382;"	d
glWeightsvARB	include/GL/gl_mangle.h	1921;"	d
glWeightsvARB	shared/GLee.h	2381;"	d
glWeightubvARB	include/GL/gl_mangle.h	1922;"	d
glWeightubvARB	shared/GLee.h	2385;"	d
glWeightuivARB	include/GL/gl_mangle.h	1923;"	d
glWeightuivARB	shared/GLee.h	2387;"	d
glWeightusvARB	include/GL/gl_mangle.h	1924;"	d
glWeightusvARB	shared/GLee.h	2386;"	d
glWindowPos2d	include/GL/gl_mangle.h	1926;"	d
glWindowPos2d	shared/GLee.h	1475;"	d
glWindowPos2dARB	include/GL/gl_mangle.h	1925;"	d
glWindowPos2dARB	shared/GLee.h	2553;"	d
glWindowPos2dMESA	include/GL/gl_mangle.h	1927;"	d
glWindowPos2dMESA	shared/GLee.h	5921;"	d
glWindowPos2dv	include/GL/gl_mangle.h	1929;"	d
glWindowPos2dv	shared/GLee.h	1476;"	d
glWindowPos2dvARB	include/GL/gl_mangle.h	1928;"	d
glWindowPos2dvARB	shared/GLee.h	2554;"	d
glWindowPos2dvMESA	include/GL/gl_mangle.h	1930;"	d
glWindowPos2dvMESA	shared/GLee.h	5922;"	d
glWindowPos2f	include/GL/gl_mangle.h	1932;"	d
glWindowPos2f	shared/GLee.h	1477;"	d
glWindowPos2fARB	include/GL/gl_mangle.h	1931;"	d
glWindowPos2fARB	shared/GLee.h	2555;"	d
glWindowPos2fMESA	include/GL/gl_mangle.h	1933;"	d
glWindowPos2fMESA	shared/GLee.h	5923;"	d
glWindowPos2fv	include/GL/gl_mangle.h	1935;"	d
glWindowPos2fv	shared/GLee.h	1478;"	d
glWindowPos2fvARB	include/GL/gl_mangle.h	1934;"	d
glWindowPos2fvARB	shared/GLee.h	2556;"	d
glWindowPos2fvMESA	include/GL/gl_mangle.h	1936;"	d
glWindowPos2fvMESA	shared/GLee.h	5924;"	d
glWindowPos2i	include/GL/gl_mangle.h	1938;"	d
glWindowPos2i	shared/GLee.h	1479;"	d
glWindowPos2iARB	include/GL/gl_mangle.h	1937;"	d
glWindowPos2iARB	shared/GLee.h	2557;"	d
glWindowPos2iMESA	include/GL/gl_mangle.h	1939;"	d
glWindowPos2iMESA	shared/GLee.h	5925;"	d
glWindowPos2iv	include/GL/gl_mangle.h	1941;"	d
glWindowPos2iv	shared/GLee.h	1480;"	d
glWindowPos2ivARB	include/GL/gl_mangle.h	1940;"	d
glWindowPos2ivARB	shared/GLee.h	2558;"	d
glWindowPos2ivMESA	include/GL/gl_mangle.h	1942;"	d
glWindowPos2ivMESA	shared/GLee.h	5926;"	d
glWindowPos2s	include/GL/gl_mangle.h	1944;"	d
glWindowPos2s	shared/GLee.h	1481;"	d
glWindowPos2sARB	include/GL/gl_mangle.h	1943;"	d
glWindowPos2sARB	shared/GLee.h	2559;"	d
glWindowPos2sMESA	include/GL/gl_mangle.h	1945;"	d
glWindowPos2sMESA	shared/GLee.h	5927;"	d
glWindowPos2sv	include/GL/gl_mangle.h	1947;"	d
glWindowPos2sv	shared/GLee.h	1482;"	d
glWindowPos2svARB	include/GL/gl_mangle.h	1946;"	d
glWindowPos2svARB	shared/GLee.h	2560;"	d
glWindowPos2svMESA	include/GL/gl_mangle.h	1948;"	d
glWindowPos2svMESA	shared/GLee.h	5928;"	d
glWindowPos3d	include/GL/gl_mangle.h	1950;"	d
glWindowPos3d	shared/GLee.h	1483;"	d
glWindowPos3dARB	include/GL/gl_mangle.h	1949;"	d
glWindowPos3dARB	shared/GLee.h	2561;"	d
glWindowPos3dMESA	include/GL/gl_mangle.h	1951;"	d
glWindowPos3dMESA	shared/GLee.h	5929;"	d
glWindowPos3dv	include/GL/gl_mangle.h	1953;"	d
glWindowPos3dv	shared/GLee.h	1484;"	d
glWindowPos3dvARB	include/GL/gl_mangle.h	1952;"	d
glWindowPos3dvARB	shared/GLee.h	2562;"	d
glWindowPos3dvMESA	include/GL/gl_mangle.h	1954;"	d
glWindowPos3dvMESA	shared/GLee.h	5930;"	d
glWindowPos3f	include/GL/gl_mangle.h	1956;"	d
glWindowPos3f	shared/GLee.h	1485;"	d
glWindowPos3fARB	include/GL/gl_mangle.h	1955;"	d
glWindowPos3fARB	shared/GLee.h	2563;"	d
glWindowPos3fMESA	include/GL/gl_mangle.h	1957;"	d
glWindowPos3fMESA	shared/GLee.h	5931;"	d
glWindowPos3fv	include/GL/gl_mangle.h	1959;"	d
glWindowPos3fv	shared/GLee.h	1486;"	d
glWindowPos3fvARB	include/GL/gl_mangle.h	1958;"	d
glWindowPos3fvARB	shared/GLee.h	2564;"	d
glWindowPos3fvMESA	include/GL/gl_mangle.h	1960;"	d
glWindowPos3fvMESA	shared/GLee.h	5932;"	d
glWindowPos3i	include/GL/gl_mangle.h	1962;"	d
glWindowPos3i	shared/GLee.h	1487;"	d
glWindowPos3iARB	include/GL/gl_mangle.h	1961;"	d
glWindowPos3iARB	shared/GLee.h	2565;"	d
glWindowPos3iMESA	include/GL/gl_mangle.h	1963;"	d
glWindowPos3iMESA	shared/GLee.h	5933;"	d
glWindowPos3iv	include/GL/gl_mangle.h	1965;"	d
glWindowPos3iv	shared/GLee.h	1488;"	d
glWindowPos3ivARB	include/GL/gl_mangle.h	1964;"	d
glWindowPos3ivARB	shared/GLee.h	2566;"	d
glWindowPos3ivMESA	include/GL/gl_mangle.h	1966;"	d
glWindowPos3ivMESA	shared/GLee.h	5934;"	d
glWindowPos3s	include/GL/gl_mangle.h	1968;"	d
glWindowPos3s	shared/GLee.h	1489;"	d
glWindowPos3sARB	include/GL/gl_mangle.h	1967;"	d
glWindowPos3sARB	shared/GLee.h	2567;"	d
glWindowPos3sMESA	include/GL/gl_mangle.h	1969;"	d
glWindowPos3sMESA	shared/GLee.h	5935;"	d
glWindowPos3sv	include/GL/gl_mangle.h	1971;"	d
glWindowPos3sv	shared/GLee.h	1490;"	d
glWindowPos3svARB	include/GL/gl_mangle.h	1970;"	d
glWindowPos3svARB	shared/GLee.h	2568;"	d
glWindowPos3svMESA	include/GL/gl_mangle.h	1972;"	d
glWindowPos3svMESA	shared/GLee.h	5936;"	d
glWindowPos4dMESA	include/GL/gl_mangle.h	1973;"	d
glWindowPos4dMESA	shared/GLee.h	5937;"	d
glWindowPos4dvMESA	include/GL/gl_mangle.h	1974;"	d
glWindowPos4dvMESA	shared/GLee.h	5938;"	d
glWindowPos4fMESA	include/GL/gl_mangle.h	1975;"	d
glWindowPos4fMESA	shared/GLee.h	5939;"	d
glWindowPos4fvMESA	include/GL/gl_mangle.h	1976;"	d
glWindowPos4fvMESA	shared/GLee.h	5940;"	d
glWindowPos4iMESA	include/GL/gl_mangle.h	1977;"	d
glWindowPos4iMESA	shared/GLee.h	5941;"	d
glWindowPos4ivMESA	include/GL/gl_mangle.h	1978;"	d
glWindowPos4ivMESA	shared/GLee.h	5942;"	d
glWindowPos4sMESA	include/GL/gl_mangle.h	1979;"	d
glWindowPos4sMESA	shared/GLee.h	5943;"	d
glWindowPos4svMESA	include/GL/gl_mangle.h	1980;"	d
glWindowPos4svMESA	shared/GLee.h	5944;"	d
glWriteMaskEXT	include/GL/gl_mangle.h	1981;"	d
glWriteMaskEXT	shared/GLee.h	7273;"	d
glXBindChannelToWindowSGIX	shared/GLee.h	10543;"	d
glXBindHyperpipeSGIX	shared/GLee.h	10750;"	d
glXBindSwapBarrierSGIX	shared/GLee.h	10571;"	d
glXChannelRectSGIX	shared/GLee.h	10544;"	d
glXChannelRectSyncSGIX	shared/GLee.h	10547;"	d
glXChooseFBConfig	include/GL/glx_mangle.h	59;"	d
glXChooseFBConfig	shared/GLee.h	10268;"	d
glXChooseFBConfigSGIX	shared/GLee.h	10459;"	d
glXChooseVisual	include/GL/glx_mangle.h	29;"	d
glXCopyContext	include/GL/glx_mangle.h	33;"	d
glXCopySubBufferMESA	include/GL/glx_mangle.h	51;"	d
glXCopySubBufferMESA	shared/GLee.h	10623;"	d
glXCreateContext	include/GL/glx_mangle.h	30;"	d
glXCreateContextWithConfigSGIX	shared/GLee.h	10461;"	d
glXCreateGLXPbufferSGIX	shared/GLee.h	10507;"	d
glXCreateGLXPixmap	include/GL/glx_mangle.h	35;"	d
glXCreateGLXPixmapMESA	include/GL/glx_mangle.h	49;"	d
glXCreateGLXPixmapMESA	shared/GLee.h	10634;"	d
glXCreateGLXPixmapWithConfigSGIX	shared/GLee.h	10460;"	d
glXCreateNewContext	include/GL/glx_mangle.h	70;"	d
glXCreateNewContext	shared/GLee.h	10278;"	d
glXCreatePbuffer	include/GL/glx_mangle.h	67;"	d
glXCreatePbuffer	shared/GLee.h	10275;"	d
glXCreatePixmap	include/GL/glx_mangle.h	65;"	d
glXCreatePixmap	shared/GLee.h	10273;"	d
glXCreateWindow	include/GL/glx_mangle.h	63;"	d
glXCreateWindow	shared/GLee.h	10271;"	d
glXCushionSGI	shared/GLee.h	10522;"	d
glXDestroyContext	include/GL/glx_mangle.h	31;"	d
glXDestroyGLXPbufferSGIX	shared/GLee.h	10508;"	d
glXDestroyGLXPixmap	include/GL/glx_mangle.h	36;"	d
glXDestroyHyperpipeConfigSGIX	shared/GLee.h	10749;"	d
glXDestroyPbuffer	include/GL/glx_mangle.h	68;"	d
glXDestroyPbuffer	shared/GLee.h	10276;"	d
glXDestroyPixmap	include/GL/glx_mangle.h	66;"	d
glXDestroyPixmap	shared/GLee.h	10274;"	d
glXDestroyWindow	include/GL/glx_mangle.h	64;"	d
glXDestroyWindow	shared/GLee.h	10272;"	d
glXFreeContextEXT	shared/GLee.h	10427;"	d
glXGetAGPOffsetMESA	shared/GLee.h	10764;"	d
glXGetClientString	include/GL/glx_mangle.h	48;"	d
glXGetConfig	include/GL/glx_mangle.h	40;"	d
glXGetContextIDEXT	shared/GLee.h	10425;"	d
glXGetCurrentContext	include/GL/glx_mangle.h	41;"	d
glXGetCurrentDisplay	include/GL/glx_mangle.h	56;"	d
glXGetCurrentDisplay	shared/GLee.h	10281;"	d
glXGetCurrentDisplayEXT	shared/GLee.h	10423;"	d
glXGetCurrentDrawable	include/GL/glx_mangle.h	42;"	d
glXGetCurrentReadDrawable	include/GL/glx_mangle.h	72;"	d
glXGetCurrentReadDrawable	shared/GLee.h	10280;"	d
glXGetCurrentReadDrawableSGI	shared/GLee.h	10390;"	d
glXGetFBConfigAttrib	include/GL/glx_mangle.h	60;"	d
glXGetFBConfigAttrib	shared/GLee.h	10269;"	d
glXGetFBConfigAttribSGIX	shared/GLee.h	10458;"	d
glXGetFBConfigFromVisualSGIX	shared/GLee.h	10463;"	d
glXGetFBConfigs	include/GL/glx_mangle.h	61;"	d
glXGetFBConfigs	shared/GLee.h	10267;"	d
glXGetMscRateOML	shared/GLee.h	10699;"	d
glXGetProcAddress	include/GL/glx_mangle.h	78;"	d
glXGetProcAddress	shared/GLee.h	10297;"	d
glXGetProcAddressARB	include/GL/glx_mangle.h	79;"	d
glXGetSelectedEvent	include/GL/glx_mangle.h	75;"	d
glXGetSelectedEvent	shared/GLee.h	10284;"	d
glXGetSelectedEventSGIX	shared/GLee.h	10511;"	d
glXGetSyncValuesOML	shared/GLee.h	10698;"	d
glXGetTransparentIndexSUN	shared/GLee.h	10602;"	d
glXGetVideoSyncSGI	include/GL/glx_mangle.h	52;"	d
glXGetVideoSyncSGI	shared/GLee.h	10375;"	d
glXGetVisualFromFBConfig	include/GL/glx_mangle.h	62;"	d
glXGetVisualFromFBConfig	shared/GLee.h	10270;"	d
glXGetVisualFromFBConfigSGIX	shared/GLee.h	10462;"	d
glXHyperpipeAttribSGIX	shared/GLee.h	10752;"	d
glXHyperpipeConfigSGIX	shared/GLee.h	10747;"	d
glXImportContextEXT	shared/GLee.h	10426;"	d
glXIsDirect	include/GL/glx_mangle.h	39;"	d
glXJoinSwapGroupSGIX	shared/GLee.h	10558;"	d
glXMakeContextCurrent	include/GL/glx_mangle.h	71;"	d
glXMakeContextCurrent	shared/GLee.h	10279;"	d
glXMakeCurrent	include/GL/glx_mangle.h	32;"	d
glXMakeCurrentReadSGI	shared/GLee.h	10389;"	d
glXQueryChannelDeltasSGIX	shared/GLee.h	10546;"	d
glXQueryChannelRectSGIX	shared/GLee.h	10545;"	d
glXQueryContext	include/GL/glx_mangle.h	73;"	d
glXQueryContext	shared/GLee.h	10282;"	d
glXQueryContextInfoEXT	shared/GLee.h	10424;"	d
glXQueryDrawable	include/GL/glx_mangle.h	69;"	d
glXQueryDrawable	shared/GLee.h	10277;"	d
glXQueryExtension	include/GL/glx_mangle.h	37;"	d
glXQueryExtensionsString	include/GL/glx_mangle.h	46;"	d
glXQueryGLXPbufferSGIX	shared/GLee.h	10509;"	d
glXQueryHyperpipeAttribSGIX	shared/GLee.h	10753;"	d
glXQueryHyperpipeBestAttribSGIX	shared/GLee.h	10751;"	d
glXQueryHyperpipeConfigSGIX	shared/GLee.h	10748;"	d
glXQueryHyperpipeNetworkSGIX	shared/GLee.h	10746;"	d
glXQueryMaxSwapBarriersSGIX	shared/GLee.h	10572;"	d
glXQueryServerString	include/GL/glx_mangle.h	47;"	d
glXQueryVersion	include/GL/glx_mangle.h	38;"	d
glXReleaseBuffersMESA	include/GL/glx_mangle.h	50;"	d
glXReleaseBuffersMESA	shared/GLee.h	10645;"	d
glXSelectEvent	include/GL/glx_mangle.h	74;"	d
glXSelectEvent	shared/GLee.h	10283;"	d
glXSelectEventSGIX	shared/GLee.h	10510;"	d
glXSet3DfxModeMESA	shared/GLee.h	10658;"	d
glXSwapBuffers	include/GL/glx_mangle.h	34;"	d
glXSwapBuffersMscOML	shared/GLee.h	10700;"	d
glXSwapIntervalSGI	shared/GLee.h	10362;"	d
glXUseXFont	include/GL/glx_mangle.h	45;"	d
glXWaitForMscOML	shared/GLee.h	10701;"	d
glXWaitForSbcOML	shared/GLee.h	10702;"	d
glXWaitGL	include/GL/glx_mangle.h	43;"	d
glXWaitVideoSyncSGI	include/GL/glx_mangle.h	53;"	d
glXWaitVideoSyncSGI	shared/GLee.h	10376;"	d
glXWaitX	include/GL/glx_mangle.h	44;"	d
gl_mangle.h	include/GL/gl_mangle.h	1;"	F
glext.h	include/GL/glext.h	1;"	F
glfrustum.h	shared/glfrustum.h	1;"	F
glrect.cpp	chapt02/glrect/glrect.cpp	1;"	F
gltDrawSphere	shared/gltools.cpp	/^void gltDrawSphere(GLfloat fRadius, GLint iSlices, GLint iStacks)$/;"	f
gltDrawTorus	chapt04/SphereWorld/sphereworld.cpp	/^void gltDrawTorus(GLfloat majorRadius, GLfloat minorRadius, GLint numMajor, GLint numMinor)$/;"	f
gltDrawTorus	shared/gltools.cpp	/^void gltDrawTorus(GLfloat majorRadius, GLfloat minorRadius, GLint numMajor, GLint numMinor)$/;"	f
gltDrawUnitAxes	shared/gltools.cpp	/^void gltDrawUnitAxes(void)$/;"	f
gltGetExtensionPointer	shared/gltools.cpp	/^void *gltGetExtensionPointer(const char *szExtensionName)$/;"	f
gltGetOpenGLVersion	shared/gltools.cpp	/^bool gltGetOpenGLVersion(int &nMajor, int &nMinor)$/;"	f
gltIsExtSupported	shared/gltools.cpp	/^int gltIsExtSupported(const char *extension)$/;"	f
gltIsWGLExtSupported	shared/gltools.cpp	/^int gltIsWGLExtSupported(HDC hDC, const char *szExtension)$/;"	f
gltLoadShaderPair	shared/gltools.cpp	/^GLhandleARB gltLoadShaderPair(const char *szVertexProg, const char *szFragmentProg)$/;"	f
gltLoadTGA	shared/gltools.cpp	/^GLbyte *gltLoadTGA(const char *szFileName, GLint *iWidth, GLint *iHeight, GLint *iComponents, GLenum *eFormat)$/;"	f
gltWriteTGA	shared/gltools.cpp	/^GLint gltWriteTGA(const char *szFileName)$/;"	f
gltools.cpp	shared/gltools.cpp	1;"	F
gltools.h	shared/gltools.h	1;"	F
glu.h	include/GL/glu.h	1;"	F
gluBeginCurve	include/GL/glu_mangle.h	52;"	d
gluBeginPolygon	include/GL/glu_mangle.h	73;"	d
gluBeginSurface	include/GL/glu_mangle.h	55;"	d
gluBeginTrim	include/GL/glu_mangle.h	58;"	d
gluBuild1DMipmapLevels	include/GL/glu_mangle.h	77;"	d
gluBuild1DMipmaps	include/GL/glu_mangle.h	34;"	d
gluBuild2DMipmapLevels	include/GL/glu_mangle.h	78;"	d
gluBuild2DMipmaps	include/GL/glu_mangle.h	35;"	d
gluBuild3DMipmapLevels	include/GL/glu_mangle.h	79;"	d
gluBuild3DMipmaps	include/GL/glu_mangle.h	80;"	d
gluCheckExtension	include/GL/glu_mangle.h	81;"	d
gluCylinder	include/GL/glu_mangle.h	43;"	d
gluDeleteNurbsRenderer	include/GL/glu_mangle.h	48;"	d
gluDeleteQuadric	include/GL/glu_mangle.h	37;"	d
gluDeleteTess	include/GL/glu_mangle.h	63;"	d
gluDisk	include/GL/glu_mangle.h	45;"	d
gluEndCurve	include/GL/glu_mangle.h	53;"	d
gluEndPolygon	include/GL/glu_mangle.h	75;"	d
gluEndSurface	include/GL/glu_mangle.h	56;"	d
gluEndTrim	include/GL/glu_mangle.h	59;"	d
gluErrorString	include/GL/glu_mangle.h	32;"	d
gluGetNurbsProperty	include/GL/glu_mangle.h	51;"	d
gluGetString	include/GL/glu_mangle.h	76;"	d
gluGetTessProperty	include/GL/glu_mangle.h	72;"	d
gluLoadSamplingMatrices	include/GL/glu_mangle.h	49;"	d
gluLookAt	include/GL/glu_mangle.h	26;"	d
gluLookAt	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGLU.h	/^gluLookAt(const Imath::V3f &pos, const Imath::V3f &interest, const Imath::V3f &up)$/;"	f
gluLookAt	shared/openexr-mac/include/OpenEXR/ImathGLU.h	/^gluLookAt(const Imath::V3f &pos, const Imath::V3f &interest, const Imath::V3f &up)$/;"	f
gluNewNurbsRenderer	include/GL/glu_mangle.h	47;"	d
gluNewQuadric	include/GL/glu_mangle.h	36;"	d
gluNewTess	include/GL/glu_mangle.h	62;"	d
gluNextContour	include/GL/glu_mangle.h	74;"	d
gluNurbsCallback	include/GL/glu_mangle.h	61;"	d
gluNurbsCallbackData	include/GL/glu_mangle.h	83;"	d
gluNurbsCallbackDataEXT	include/GL/glu_mangle.h	84;"	d
gluNurbsCurve	include/GL/glu_mangle.h	54;"	d
gluNurbsProperty	include/GL/glu_mangle.h	50;"	d
gluNurbsSurface	include/GL/glu_mangle.h	57;"	d
gluOrtho2D	include/GL/glu_mangle.h	27;"	d
gluPartialDisk	include/GL/glu_mangle.h	46;"	d
gluPerspective	include/GL/glu_mangle.h	28;"	d
gluPickMatrix	include/GL/glu_mangle.h	29;"	d
gluProject	include/GL/glu_mangle.h	30;"	d
gluPwlCurve	include/GL/glu_mangle.h	60;"	d
gluQuadricCallback	include/GL/glu_mangle.h	42;"	d
gluQuadricDrawStyle	include/GL/glu_mangle.h	38;"	d
gluQuadricNormals	include/GL/glu_mangle.h	40;"	d
gluQuadricOrientation	include/GL/glu_mangle.h	39;"	d
gluQuadricTexture	include/GL/glu_mangle.h	41;"	d
gluScaleImage	include/GL/glu_mangle.h	33;"	d
gluSphere	include/GL/glu_mangle.h	44;"	d
gluTessBeginContour	include/GL/glu_mangle.h	65;"	d
gluTessBeginPolygon	include/GL/glu_mangle.h	64;"	d
gluTessCallback	include/GL/glu_mangle.h	71;"	d
gluTessEndContour	include/GL/glu_mangle.h	68;"	d
gluTessEndPolygon	include/GL/glu_mangle.h	67;"	d
gluTessNormal	include/GL/glu_mangle.h	70;"	d
gluTessProperty	include/GL/glu_mangle.h	69;"	d
gluTessVertex	include/GL/glu_mangle.h	66;"	d
gluUnProject	include/GL/glu_mangle.h	31;"	d
gluUnProject4	include/GL/glu_mangle.h	82;"	d
glu_mangle.h	include/GL/glu_mangle.h	1;"	F
glut.h	include/GL/glut.h	1;"	F
glut.h	shared/glut.h	1;"	F
glutCreateMenu	include/GL/freeglut_std.h	615;"	d
glutCreateMenu_ATEXIT_HACK	include/GL/freeglut_std.h	/^static int FGAPIENTRY FGUNUSED glutCreateMenu_ATEXIT_HACK(void (* func)(int)) { return __glutCreateMenuWithExit(func, exit); }$/;"	f
glutCreateWindow	include/GL/freeglut_std.h	613;"	d
glutCreateWindow_ATEXIT_HACK	include/GL/freeglut_std.h	/^static int FGAPIENTRY FGUNUSED glutCreateWindow_ATEXIT_HACK(const char *title) { return __glutCreateWindowWithExit(title, exit); }$/;"	f
glutInit	include/GL/freeglut_std.h	611;"	d
glutInit_ATEXIT_HACK	include/GL/freeglut_std.h	/^static void FGAPIENTRY FGUNUSED glutInit_ATEXIT_HACK(int *argcp, char **argv) { __glutInitWithExit(argcp, argv, exit); }$/;"	f
glx.h	include/GL/glx.h	1;"	F
glx_mangle.h	include/GL/glx_mangle.h	1;"	F
glxext.h	include/GL/glxext.h	1;"	F
glxpbufferclobber	include/GL/glx.h	/^    GLXPbufferClobberEvent glxpbufferclobber;$/;"	m	union:__GLXEvent
green	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChromaticities.h	/^    Imath::V2f	green;$/;"	m	struct:Imf::Chromaticities
green	shared/openexr-mac/include/OpenEXR/ImfChromaticities.h	/^    Imath::V2f	green;$/;"	m	struct:Imf::Chromaticities
half	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^class half$/;"	c
half	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::half ()$/;"	f	class:half
half	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::half (float f)$/;"	f	class:half
half	shared/openexr-mac/include/OpenEXR/half.h	/^class half$/;"	c
half	shared/openexr-mac/include/OpenEXR/half.h	/^half::half ()$/;"	f	class:half
half	shared/openexr-mac/include/OpenEXR/half.h	/^half::half (float f)$/;"	f	class:half
half.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	1;"	F
half.h	shared/openexr-mac/include/OpenEXR/half.h	1;"	F
halfFunction	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfFunction.h	/^class halfFunction$/;"	c
halfFunction	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfFunction.h	/^halfFunction<T>::halfFunction (Function f,$/;"	f	class:halfFunction
halfFunction	shared/openexr-mac/include/OpenEXR/halfFunction.h	/^class halfFunction$/;"	c
halfFunction	shared/openexr-mac/include/OpenEXR/halfFunction.h	/^halfFunction<T>::halfFunction (Function f,$/;"	f	class:halfFunction
halfFunction.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfFunction.h	1;"	F
halfFunction.h	shared/openexr-mac/include/OpenEXR/halfFunction.h	1;"	F
halfLimits.h	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	1;"	F
halfLimits.h	shared/openexr-mac/include/OpenEXR/halfLimits.h	1;"	F
hasVolume	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^inline bool Box<T>::hasVolume() const$/;"	f	class:Imath::Box
hasVolume	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^inline bool Interval<T>::hasVolume() const$/;"	f	class:Imath::Interval
hasVolume	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^inline bool Box<T>::hasVolume() const$/;"	f	class:Imath::Box
hasVolume	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^inline bool Interval<T>::hasVolume() const$/;"	f	class:Imath::Interval
has_denorm	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const float_denorm_style has_denorm = denorm_present;$/;"	m	class:std::numeric_limits
has_denorm	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const float_denorm_style has_denorm = denorm_present;$/;"	m	class:std::numeric_limits
has_denorm_loss	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const bool has_denorm_loss = false;$/;"	m	class:std::numeric_limits
has_denorm_loss	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const bool has_denorm_loss = false;$/;"	m	class:std::numeric_limits
has_infinity	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const bool has_infinity = true;$/;"	m	class:std::numeric_limits
has_infinity	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const bool has_infinity = true;$/;"	m	class:std::numeric_limits
has_quiet_NaN	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const bool has_quiet_NaN = true;$/;"	m	class:std::numeric_limits
has_quiet_NaN	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const bool has_quiet_NaN = true;$/;"	m	class:std::numeric_limits
has_signaling_NaN	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const bool has_signaling_NaN = true;$/;"	m	class:std::numeric_limits
has_signaling_NaN	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const bool has_signaling_NaN = true;$/;"	m	class:std::numeric_limits
height	include/GL/glx.h	/^    int width, height;$/;"	m	struct:__anon1
height	include/GL/glxext.h	/^    int width, height;$/;"	m	struct:__anon2
height	include/GL/internal/dri_interface.h	/^    int height;             \/**< Pixel height of the framebuffer. *\/$/;"	m	struct:__DRIframebufferRec
height	shared/GLee.h	/^		int width, height;$/;"	m	struct:__anon11
height	shared/gltools.cpp	/^    unsigned short	height;                 \/\/ height in pixels$/;"	m	struct:__anon10	file:
height	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^    unsigned int	height () const	{return _height;}$/;"	f	class:Imf::PreviewImage
height	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^    unsigned int	height () const	{return _height;}$/;"	f	class:Imf::PreviewImage
helloGL.cpp	helloGL/helloGL.cpp	1;"	F
hollowSphereRand	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^hollowSphereRand (Rand &rand)$/;"	f	namespace:Imath
hollowSphereRand	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^hollowSphereRand (Rand &rand)$/;"	f	namespace:Imath
hsv2rgb	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColorAlgo.h	/^hsv2rgb(const Color4<T> &hsv)$/;"	f	namespace:Imath
hsv2rgb	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColorAlgo.h	/^hsv2rgb(const Vec3<T> &hsv)$/;"	f	namespace:Imath
hsv2rgb	shared/openexr-mac/include/OpenEXR/ImathColorAlgo.h	/^hsv2rgb(const Color4<T> &hsv)$/;"	f	namespace:Imath
hsv2rgb	shared/openexr-mac/include/OpenEXR/ImathColorAlgo.h	/^hsv2rgb(const Vec3<T> &hsv)$/;"	f	namespace:Imath
hypot	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	hypot (T x, T y)	{return ::hypot (double(x), double(y));}$/;"	f	struct:Imath::Math
hypot	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	hypot (float x, float y)	{return ::hypotf (x, y);}$/;"	f	struct:Imath::Math
hypot	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float hypot (float x, float y)	{return ::sqrtf(x*x + y*y);}$/;"	f	struct:Imath::Math
hypot	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	hypot (T x, T y)	{return ::hypot (double(x), double(y));}$/;"	f	struct:Imath::Math
hypot	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	hypot (float x, float y)	{return ::hypotf (x, y);}$/;"	f	struct:Imath::Math
hypot	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float hypot (float x, float y)	{return ::sqrtf(x*x + y*y);}$/;"	f	struct:Imath::Math
i	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^	unsigned int	i;$/;"	m	union:half::uif
i	shared/openexr-mac/include/OpenEXR/half.h	/^	unsigned int	i;$/;"	m	union:half::uif
iCull	chapt03/triangle/triangle.cpp	/^int iCull = 0;$/;"	v
iDepth	chapt03/triangle/triangle.cpp	/^int iDepth = 0;$/;"	v
iMode	chapt03/star/star.cpp	/^int iMode = MODE_SOLID;$/;"	v
iOutline	chapt03/triangle/triangle.cpp	/^int iOutline = 0;$/;"	v
identity	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^    static Quat<T> identity()	{ return Quat<T>(); }$/;"	f	class:Imath::Quat
identity	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^    static Quat<T> identity()	{ return Quat<T>(); }$/;"	f	class:Imath::Quat
identity33d	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^IMATH_EXPORT_CONST M33d identity33d;$/;"	m	namespace:Imath
identity33d	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^IMATH_EXPORT_CONST M33d identity33d;$/;"	m	namespace:Imath
identity33f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^IMATH_EXPORT_CONST M33f identity33f;$/;"	m	namespace:Imath
identity33f	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^IMATH_EXPORT_CONST M33f identity33f;$/;"	m	namespace:Imath
identity44d	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^IMATH_EXPORT_CONST M44d identity44d;$/;"	m	namespace:Imath
identity44d	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^IMATH_EXPORT_CONST M44d identity44d;$/;"	m	namespace:Imath
identity44f	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^IMATH_EXPORT_CONST M44f identity44f;$/;"	m	namespace:Imath
identity44f	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^IMATH_EXPORT_CONST M44f identity44f;$/;"	m	namespace:Imath
identsize	shared/gltools.cpp	/^    GLbyte	identsize;              \/\/ Size of ID field that follows header (0)$/;"	m	struct:__anon10	file:
imageType	shared/gltools.cpp	/^    GLbyte	imageType;              \/\/ 0 = none, 1 = indexed, 2 = rgb, 3 = grey, +8=rle$/;"	m	struct:__anon10	file:
indexConfigAttrib	include/GL/internal/dri_interface.h	/^    int (*indexConfigAttrib)(const __DRIconfig *config, int index,$/;"	m	struct:__DRIcoreExtensionRec
infinity	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static half infinity () throw () {return half::posInf();}$/;"	f	class:std::numeric_limits
infinity	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static half infinity () throw () {return half::posInf();}$/;"	f	class:std::numeric_limits
init	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^Rand32::init (unsigned long int seed)$/;"	f	class:Imath::Rand32
init	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^Rand48::init (unsigned long int seed)$/;"	f	class:Imath::Rand48
init	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^Rand32::init (unsigned long int seed)$/;"	f	class:Imath::Rand32
init	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^Rand48::init (unsigned long int seed)$/;"	f	class:Imath::Rand48
initGLLoadFunctions	shared/GLee.c	/^void initGLLoadFunctions(void)$/;"	f
initGLXLoadFunctions	shared/GLee.c	/^void initGLXLoadFunctions(void)$/;"	f
initWGLLoadFunctions	shared/GLee.c	/^void initWGLLoadFunctions(void)$/;"	f
initialAxis	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^    Axis		initialAxis() const { return _initialAxis; }$/;"	f	class:Imath::Euler
initialAxis	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^    Axis		initialAxis() const { return _initialAxis; }$/;"	f	class:Imath::Euler
initialRepeated	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^    bool		initialRepeated() const { return _initialRepeated; }$/;"	f	class:Imath::Euler
initialRepeated	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^    bool		initialRepeated() const { return _initialRepeated; }$/;"	f	class:Imath::Euler
int32_t	include/GL/glext.h	/^typedef __int32 int32_t;$/;"	t
int32_t	include/GL/glext.h	/^typedef long int int32_t;$/;"	t
int32_t	include/GL/glxext.h	/^typedef __int32 int32_t;$/;"	t
int32_t	include/GL/glxext.h	/^typedef long int int32_t;$/;"	t
int64_t	include/GL/glext.h	/^typedef __int64 int64_t;$/;"	t
int64_t	include/GL/glext.h	/^typedef long int int64_t;$/;"	t
int64_t	include/GL/glext.h	/^typedef long long int int64_t;$/;"	t
int64_t	include/GL/glxext.h	/^typedef __int64 int64_t;$/;"	t
int64_t	include/GL/glxext.h	/^typedef long int int64_t;$/;"	t
int64_t	include/GL/glxext.h	/^typedef long long int int64_t;$/;"	t
intermediate	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^Quat<T> intermediate(const Quat<T> &q0, const Quat<T> &q1, const Quat<T> &q2)$/;"	f	namespace:Imath
intermediate	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^Quat<T> intermediate(const Quat<T> &q0, const Quat<T> &q1, const Quat<T> &q2)$/;"	f	namespace:Imath
intersect	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLineAlgo.h	/^bool intersect( const Line3<T> &line,$/;"	f	namespace:Imath
intersect	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^inline bool Plane3<T>::intersect(const Line3<T>& line, Vec3<T>& point) const$/;"	f	class:Imath::Plane3
intersect	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathSphere.h	/^bool Sphere3<T>::intersect(const Line3<T> &line, Vec3<T> &intersection) const$/;"	f	class:Imath::Sphere3
intersect	shared/openexr-mac/include/OpenEXR/ImathLineAlgo.h	/^bool intersect( const Line3<T> &line,$/;"	f	namespace:Imath
intersect	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^inline bool Plane3<T>::intersect(const Line3<T>& line, Vec3<T>& point) const$/;"	f	class:Imath::Plane3
intersect	shared/openexr-mac/include/OpenEXR/ImathSphere.h	/^bool Sphere3<T>::intersect(const Line3<T> &line, Vec3<T> &intersection) const$/;"	f	class:Imath::Sphere3
intersectT	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^inline bool Plane3<T>::intersectT(const Line3<T>& line, T &t) const$/;"	f	class:Imath::Plane3
intersectT	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathSphere.h	/^bool Sphere3<T>::intersectT(const Line3<T> &line, T &t) const$/;"	f	class:Imath::Sphere3
intersectT	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^inline bool Plane3<T>::intersectT(const Line3<T>& line, T &t) const$/;"	f	class:Imath::Plane3
intersectT	shared/openexr-mac/include/OpenEXR/ImathSphere.h	/^bool Sphere3<T>::intersectT(const Line3<T> &line, T &t) const$/;"	f	class:Imath::Sphere3
intersects	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^inline bool Box<T>::intersects(const Box<T>& box) const$/;"	f	class:Imath::Box
intersects	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^inline bool Box<T>::intersects(const T& point) const$/;"	f	class:Imath::Box
intersects	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBoxAlgo.h	/^bool intersects(const Box< Vec3<T> > &box, $/;"	f	namespace:Imath
intersects	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBoxAlgo.h	/^bool intersects(const Box< Vec3<T> > &box, const Line3<T> &line)$/;"	f	namespace:Imath
intersects	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^Interval<T>::intersects(const Interval<T>& interval) const$/;"	f	class:Imath::Interval
intersects	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^Interval<T>::intersects(const T& point) const$/;"	f	class:Imath::Interval
intersects	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^inline bool Box<T>::intersects(const Box<T>& box) const$/;"	f	class:Imath::Box
intersects	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^inline bool Box<T>::intersects(const T& point) const$/;"	f	class:Imath::Box
intersects	shared/openexr-mac/include/OpenEXR/ImathBoxAlgo.h	/^bool intersects(const Box< Vec3<T> > &box, $/;"	f	namespace:Imath
intersects	shared/openexr-mac/include/OpenEXR/ImathBoxAlgo.h	/^bool intersects(const Box< Vec3<T> > &box, const Line3<T> &line)$/;"	f	namespace:Imath
intersects	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^Interval<T>::intersects(const Interval<T>& interval) const$/;"	f	class:Imath::Interval
intersects	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^Interval<T>::intersects(const T& point) const$/;"	f	class:Imath::Interval
inverse	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::inverse (bool singExc) const throw (Iex::MathExc)$/;"	f	class:Imath::Matrix33
inverse	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::inverse (bool singExc) const throw (Iex::MathExc)$/;"	f	class:Imath::Matrix44
inverse	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Quat<T> Quat<T>::inverse() const$/;"	f	class:Imath::Quat
inverse	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::inverse (bool singExc) const throw (Iex::MathExc)$/;"	f	class:Imath::Matrix33
inverse	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::inverse (bool singExc) const throw (Iex::MathExc)$/;"	f	class:Imath::Matrix44
inverse	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Quat<T> Quat<T>::inverse() const$/;"	f	class:Imath::Quat
invert	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::invert (bool singExc) throw (Iex::MathExc)$/;"	f	class:Imath::Matrix33
invert	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::invert (bool singExc) throw (Iex::MathExc)$/;"	f	class:Imath::Matrix44
invert	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Quat<T>& Quat<T>::invert()$/;"	f	class:Imath::Quat
invert	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::invert (bool singExc) throw (Iex::MathExc)$/;"	f	class:Imath::Matrix33
invert	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::invert (bool singExc) throw (Iex::MathExc)$/;"	f	class:Imath::Matrix44
invert	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Quat<T>& Quat<T>::invert()$/;"	f	class:Imath::Quat
isDenormalized	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::isDenormalized () const$/;"	f	class:half
isDenormalized	shared/openexr-mac/include/OpenEXR/half.h	/^half::isDenormalized () const$/;"	f	class:half
isEmpty	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^inline bool Box<T>::isEmpty() const$/;"	f	class:Imath::Box
isEmpty	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^Interval<T>::isEmpty() const$/;"	f	class:Imath::Interval
isEmpty	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^inline bool Box<T>::isEmpty() const$/;"	f	class:Imath::Box
isEmpty	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^Interval<T>::isEmpty() const$/;"	f	class:Imath::Interval
isFinite	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::isFinite () const$/;"	f	class:half
isFinite	shared/openexr-mac/include/OpenEXR/half.h	/^half::isFinite () const$/;"	f	class:half
isInfinity	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::isInfinity () const$/;"	f	class:half
isInfinity	shared/openexr-mac/include/OpenEXR/half.h	/^half::isInfinity () const$/;"	f	class:half
isIntegral	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathHalfLimits.h	/^    static bool			isIntegral()	{return false;}$/;"	f	struct:Imath::limits
isIntegral	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static bool			isIntegral()	{return false;}$/;"	f	struct:Imath::limits
isIntegral	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static bool			isIntegral()	{return true;}$/;"	f	struct:Imath::limits
isIntegral	shared/openexr-mac/include/OpenEXR/ImathHalfLimits.h	/^    static bool			isIntegral()	{return false;}$/;"	f	struct:Imath::limits
isIntegral	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static bool			isIntegral()	{return false;}$/;"	f	struct:Imath::limits
isIntegral	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static bool			isIntegral()	{return true;}$/;"	f	struct:Imath::limits
isNan	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::isNan () const$/;"	f	class:half
isNan	shared/openexr-mac/include/OpenEXR/half.h	/^half::isNan () const$/;"	f	class:half
isNegative	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::isNegative () const$/;"	f	class:half
isNegative	shared/openexr-mac/include/OpenEXR/half.h	/^half::isNegative () const$/;"	f	class:half
isNormalized	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::isNormalized () const$/;"	f	class:half
isNormalized	shared/openexr-mac/include/OpenEXR/half.h	/^half::isNormalized () const$/;"	f	class:half
isSigned	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathHalfLimits.h	/^    static bool			isSigned()	{return true;}$/;"	f	struct:Imath::limits
isSigned	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static bool			isSigned()	{return (char) ~0 < 0;}$/;"	f	struct:Imath::limits
isSigned	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static bool			isSigned()	{return false;}$/;"	f	struct:Imath::limits
isSigned	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static bool			isSigned()	{return true;}$/;"	f	struct:Imath::limits
isSigned	shared/openexr-mac/include/OpenEXR/ImathHalfLimits.h	/^    static bool			isSigned()	{return true;}$/;"	f	struct:Imath::limits
isSigned	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static bool			isSigned()	{return (char) ~0 < 0;}$/;"	f	struct:Imath::limits
isSigned	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static bool			isSigned()	{return false;}$/;"	f	struct:Imath::limits
isSigned	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static bool			isSigned()	{return true;}$/;"	f	struct:Imath::limits
isTiled	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h	/^inline bool  isTiled (int version)	{return !!(version & TILED_FLAG);}$/;"	f	namespace:Imf
isTiled	shared/openexr-mac/include/OpenEXR/ImfVersion.h	/^inline bool  isTiled (int version)	{return !!(version & TILED_FLAG);}$/;"	f	namespace:Imf
isZero	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::isZero () const$/;"	f	class:half
isZero	shared/openexr-mac/include/OpenEXR/half.h	/^half::isZero () const$/;"	f	class:half
is_bounded	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const bool is_bounded = false;$/;"	m	class:std::numeric_limits
is_bounded	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const bool is_bounded = false;$/;"	m	class:std::numeric_limits
is_exact	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const bool is_exact = false;$/;"	m	class:std::numeric_limits
is_exact	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const bool is_exact = false;$/;"	m	class:std::numeric_limits
is_iec559	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const bool is_iec559 = false;$/;"	m	class:std::numeric_limits
is_iec559	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const bool is_iec559 = false;$/;"	m	class:std::numeric_limits
is_integer	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const bool is_integer = false;$/;"	m	class:std::numeric_limits
is_integer	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const bool is_integer = false;$/;"	m	class:std::numeric_limits
is_modulo	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const bool is_modulo = false;$/;"	m	class:std::numeric_limits
is_modulo	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const bool is_modulo = false;$/;"	m	class:std::numeric_limits
is_signed	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const bool is_signed = true;$/;"	m	class:std::numeric_limits
is_signed	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const bool is_signed = true;$/;"	m	class:std::numeric_limits
is_specialized	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const bool is_specialized = true;$/;"	m	class:std::numeric_limits
is_specialized	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const bool is_specialized = true;$/;"	m	class:std::numeric_limits
iszero	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^iszero (T a, T t)$/;"	f	namespace:Imath
iszero	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^iszero (T a, T t)$/;"	f	namespace:Imath
lastFrame	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrame.h	/^template<class T> Matrix44<T> lastFrame$/;"	f	namespace:Imath
lastFrame	shared/openexr-mac/include/OpenEXR/ImathFrame.h	/^template<class T> Matrix44<T> lastFrame$/;"	f	namespace:Imath
left	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^    T			left() const		{ return _left;		}$/;"	f	class:Imath::Frustum
left	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^    T			left() const		{ return _left;		}$/;"	f	class:Imath::Frustum
leftPlane	shared/glfrustum.h	/^        M3DVector4f nearPlane, farPlane, leftPlane, rightPlane;$/;"	m	class:GLFrustum
legal	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^Euler<T>::legal(typename Euler<T>::Order order)$/;"	f	class:Imath::Euler
legal	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^Euler<T>::legal(typename Euler<T>::Order order)$/;"	f	class:Imath::Euler
length	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline T Quat<T>::length() const$/;"	f	class:Imath::Quat
length	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::length () const$/;"	f	class:Imath::Vec2
length	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::length () const$/;"	f	class:Imath::Vec3
length	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline T Quat<T>::length() const$/;"	f	class:Imath::Quat
length	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::length () const$/;"	f	class:Imath::Vec2
length	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::length () const$/;"	f	class:Imath::Vec3
length2	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::length2 () const$/;"	f	class:Imath::Vec2
length2	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::length2 () const$/;"	f	class:Imath::Vec3
length2	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::length2 () const$/;"	f	class:Imath::Vec2
length2	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::length2 () const$/;"	f	class:Imath::Vec3
lengths	shared/GLee.c	/^	int * lengths;$/;"	m	struct:__anon8	file:
lerp	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^lerp (T a, T b, Q t)$/;"	f	namespace:Imath
lerp	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^lerp (T a, T b, Q t)$/;"	f	namespace:Imath
lerpfactor	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^lerpfactor(T m, T a, T b)$/;"	f	namespace:Imath
lerpfactor	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^lerpfactor(T m, T a, T b)$/;"	f	namespace:Imath
lightPos	chapt04/Solar/solar.cpp	/^GLfloat	 lightPos[] = { 0.0f, 0.0f, 0.0f, 1.0f };$/;"	v
limits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathHalfLimits.h	/^struct limits <half>$/;"	s	namespace:Imath
limits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^struct limits <char>$/;"	s	namespace:Imath
limits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^struct limits <double>$/;"	s	namespace:Imath
limits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^struct limits <float>$/;"	s	namespace:Imath
limits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^struct limits <int>$/;"	s	namespace:Imath
limits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^struct limits <long double>$/;"	s	namespace:Imath
limits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^struct limits <long>$/;"	s	namespace:Imath
limits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^struct limits <short>$/;"	s	namespace:Imath
limits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^struct limits <signed char>$/;"	s	namespace:Imath
limits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^struct limits <unsigned char>$/;"	s	namespace:Imath
limits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^struct limits <unsigned int>$/;"	s	namespace:Imath
limits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^struct limits <unsigned long>$/;"	s	namespace:Imath
limits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^struct limits <unsigned short>$/;"	s	namespace:Imath
limits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^template <class T> struct limits$/;"	s	namespace:Imath
limits	shared/openexr-mac/include/OpenEXR/ImathHalfLimits.h	/^struct limits <half>$/;"	s	namespace:Imath
limits	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^struct limits <char>$/;"	s	namespace:Imath
limits	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^struct limits <double>$/;"	s	namespace:Imath
limits	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^struct limits <float>$/;"	s	namespace:Imath
limits	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^struct limits <int>$/;"	s	namespace:Imath
limits	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^struct limits <long double>$/;"	s	namespace:Imath
limits	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^struct limits <long>$/;"	s	namespace:Imath
limits	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^struct limits <short>$/;"	s	namespace:Imath
limits	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^struct limits <signed char>$/;"	s	namespace:Imath
limits	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^struct limits <unsigned char>$/;"	s	namespace:Imath
limits	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^struct limits <unsigned int>$/;"	s	namespace:Imath
limits	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^struct limits <unsigned long>$/;"	s	namespace:Imath
limits	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^struct limits <unsigned short>$/;"	s	namespace:Imath
limits	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^template <class T> struct limits$/;"	s	namespace:Imath
lines.cpp	chapt03/lines/lines.cpp	1;"	F
linesw.cpp	chapt03/linesw/linesw.cpp	1;"	F
localToScreen	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^Vec2<T> Frustum<T>::localToScreen(const Vec2<T> &p) const$/;"	f	class:Imath::Frustum
localToScreen	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^Vec2<T> Frustum<T>::localToScreen(const Vec2<T> &p) const$/;"	f	class:Imath::Frustum
locked	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h	/^    bool locked ()$/;"	f	class:IlmThread::Lock
locked	shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h	/^    bool locked ()$/;"	f	class:IlmThread::Lock
log	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	log   (T x)		{return ::log (double(x));}$/;"	f	struct:Imath::Math
log	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	log   (float x)			{return ::logf (x);}$/;"	f	struct:Imath::Math
log	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Quat<T> Quat<T>::log() const$/;"	f	class:Imath::Quat
log	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	log   (T x)		{return ::log (double(x));}$/;"	f	struct:Imath::Math
log	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	log   (float x)			{return ::logf (x);}$/;"	f	struct:Imath::Math
log	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Quat<T> Quat<T>::log() const$/;"	f	class:Imath::Quat
log10	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	log10 (T x)		{return ::log10 (double(x));}$/;"	f	struct:Imath::Math
log10	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	log10 (float x)			{return ::log10f (x);}$/;"	f	struct:Imath::Math
log10	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	log10 (T x)		{return ::log10 (double(x));}$/;"	f	struct:Imath::Math
log10	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	log10 (float x)			{return ::log10f (x);}$/;"	f	struct:Imath::Math
lstipple.cpp	chapt03/lstipple/lstipple.cpp	1;"	F
lstrips.cpp	chapt03/lstrips/lstrips.cpp	1;"	F
m3dAddVectors2	shared/math3d.h	/^inline void m3dAddVectors2(M3DVector2d r, const M3DVector2d a, const M3DVector2d b)$/;"	f
m3dAddVectors2	shared/math3d.h	/^inline void m3dAddVectors2(M3DVector2f r, const M3DVector2f a, const M3DVector2f b)$/;"	f
m3dAddVectors3	shared/math3d.h	/^inline void m3dAddVectors3(M3DVector3d r, const M3DVector3d a, const M3DVector3d b)$/;"	f
m3dAddVectors3	shared/math3d.h	/^inline void m3dAddVectors3(M3DVector3f r, const M3DVector3f a, const M3DVector3f b)$/;"	f
m3dAddVectors4	shared/math3d.h	/^inline void m3dAddVectors4(M3DVector4d r, const M3DVector4d a, const M3DVector4d b)$/;"	f
m3dAddVectors4	shared/math3d.h	/^inline void m3dAddVectors4(M3DVector4f r, const M3DVector4f a, const M3DVector4f b)$/;"	f
m3dCalculateTangentBasis	shared/math3d.cpp	/^void m3dCalculateTangentBasis(const M3DVector3f vTriangle[3], const M3DVector2f vTexCoords[3], const M3DVector3f N, M3DVector3f vTangent)$/;"	f
m3dCatmullRom3	shared/math3d.cpp	/^void m3dCatmullRom3(M3DVector3d vOut, M3DVector3d vP0, M3DVector3d vP1, M3DVector3d vP2, M3DVector3d vP3, double t)$/;"	f
m3dCatmullRom3	shared/math3d.cpp	/^void m3dCatmullRom3(M3DVector3f vOut, M3DVector3f vP0, M3DVector3f vP1, M3DVector3f vP2, M3DVector3f vP3, float t)$/;"	f
m3dCloseEnough	shared/math3d.h	/^inline bool m3dCloseEnough(double dCandidate, double dCompare, double dEpsilon)$/;"	f
m3dCloseEnough	shared/math3d.h	/^inline bool m3dCloseEnough(float fCandidate, float fCompare, float fEpsilon)$/;"	f
m3dClosestPointOnRay	shared/math3d.cpp	/^double m3dClosestPointOnRay(M3DVector3d vPointOnRay, const M3DVector3d vRayOrigin, const M3DVector3d vUnitRayDir, $/;"	f
m3dClosestPointOnRay	shared/math3d.cpp	/^float m3dClosestPointOnRay(M3DVector3f vPointOnRay, const M3DVector3f vRayOrigin, const M3DVector3f vUnitRayDir, $/;"	f
m3dCopyMatrix33	shared/math3d.h	/^inline void m3dCopyMatrix33(M3DMatrix33d dst, const M3DMatrix33d src)$/;"	f
m3dCopyMatrix33	shared/math3d.h	/^inline void m3dCopyMatrix33(M3DMatrix33f dst, const M3DMatrix33f src)$/;"	f
m3dCopyMatrix44	shared/math3d.h	/^inline void m3dCopyMatrix44(M3DMatrix44d dst, const M3DMatrix44d src)$/;"	f
m3dCopyMatrix44	shared/math3d.h	/^inline void m3dCopyMatrix44(M3DMatrix44f dst, const M3DMatrix44f src)$/;"	f
m3dCopyVector2	shared/math3d.h	/^inline void	m3dCopyVector2(M3DVector2d dst, const M3DVector2d src) { memcpy(dst, src, sizeof(M3DVector2d)); }$/;"	f
m3dCopyVector2	shared/math3d.h	/^inline void	m3dCopyVector2(M3DVector2f dst, const M3DVector2f src) { memcpy(dst, src, sizeof(M3DVector2f)); }$/;"	f
m3dCopyVector3	shared/math3d.h	/^inline void	m3dCopyVector3(M3DVector3d dst, const M3DVector3d src) { memcpy(dst, src, sizeof(M3DVector3d)); }$/;"	f
m3dCopyVector3	shared/math3d.h	/^inline void	m3dCopyVector3(M3DVector3f dst, const M3DVector3f src) { memcpy(dst, src, sizeof(M3DVector3f)); }$/;"	f
m3dCopyVector4	shared/math3d.h	/^inline void	m3dCopyVector4(M3DVector4d dst, const M3DVector4d src) { memcpy(dst, src, sizeof(M3DVector4d)); }$/;"	f
m3dCopyVector4	shared/math3d.h	/^inline void	m3dCopyVector4(M3DVector4f dst, const M3DVector4f src) { memcpy(dst, src, sizeof(M3DVector4f)); }$/;"	f
m3dCrossProduct	shared/math3d.h	/^inline void m3dCrossProduct(M3DVector3d result, const M3DVector3d u, const M3DVector3d v)$/;"	f
m3dCrossProduct	shared/math3d.h	/^inline void m3dCrossProduct(M3DVector3f result, const M3DVector3f u, const M3DVector3f v)$/;"	f
m3dDegToHr	shared/math3d.h	66;"	d
m3dDegToRad	shared/math3d.h	59;"	d
m3dDotProduct	shared/math3d.h	/^inline double m3dDotProduct(const M3DVector3d u, const M3DVector3d v)$/;"	f
m3dDotProduct	shared/math3d.h	/^inline float m3dDotProduct(const M3DVector3f u, const M3DVector3f v)$/;"	f
m3dExtractRotation	shared/math3d.h	/^inline void m3dExtractRotation(M3DMatrix33d dst, const M3DMatrix44d src)$/;"	f
m3dExtractRotation	shared/math3d.h	/^inline void m3dExtractRotation(M3DMatrix33f dst, const M3DMatrix44f src)$/;"	f
m3dFindNormal	shared/math3d.cpp	/^void m3dFindNormal(M3DVector3d result, const M3DVector3d point1, const M3DVector3d point2, $/;"	f
m3dFindNormal	shared/math3d.cpp	/^void m3dFindNormal(M3DVector3f result, const M3DVector3f point1, const M3DVector3f point2, $/;"	f
m3dGetAngleBetweenVectors	shared/math3d.h	/^inline double m3dGetAngleBetweenVectors(const M3DVector3d u, const M3DVector3d v)$/;"	f
m3dGetAngleBetweenVectors	shared/math3d.h	/^inline float m3dGetAngleBetweenVectors(const M3DVector3f u, const M3DVector3f v)$/;"	f
m3dGetDistance	shared/math3d.h	/^inline double m3dGetDistance(const M3DVector3d u, const M3DVector3d v)$/;"	f
m3dGetDistance	shared/math3d.h	/^inline float m3dGetDistance(const M3DVector3f u, const M3DVector3f v)$/;"	f
m3dGetDistanceSquared	shared/math3d.cpp	/^double m3dGetDistanceSquared(const M3DVector3d u, const M3DVector3d v)$/;"	f
m3dGetDistanceSquared	shared/math3d.cpp	/^float m3dGetDistanceSquared(const M3DVector3f u, const M3DVector3f v)$/;"	f
m3dGetDistanceToPlane	shared/math3d.h	/^inline double m3dGetDistanceToPlane(const M3DVector3d point, const M3DVector4d plane)$/;"	f
m3dGetDistanceToPlane	shared/math3d.h	/^inline float m3dGetDistanceToPlane(const M3DVector3f point, const M3DVector4f plane)$/;"	f
m3dGetMagnitude	shared/math3d.h	/^inline double m3dGetMagnitude(const M3DVector3d u) { return sqrt(m3dGetMagnitudeSquared(u)); }$/;"	f
m3dGetMagnitude	shared/math3d.h	/^inline float m3dGetMagnitude(const M3DVector3f u) { return float(sqrt(m3dGetMagnitudeSquared(u))); }$/;"	f
m3dGetMagnitudeSquared	shared/math3d.h	/^inline double m3dGetMagnitudeSquared(const M3DVector3d u) { return u[0]*u[0] + u[1]*u[1] + u[2]*u[2]; }$/;"	f
m3dGetMagnitudeSquared	shared/math3d.h	/^inline float m3dGetMagnitudeSquared(const M3DVector3f u) { return u[0]*u[0] + u[1]*u[1] + u[2]*u[2]; }$/;"	f
m3dGetMatrixColumn33	shared/math3d.h	/^inline void m3dGetMatrixColumn33(M3DVector3d dst, const M3DMatrix33d src, int column)$/;"	f
m3dGetMatrixColumn33	shared/math3d.h	/^inline void m3dGetMatrixColumn33(M3DVector3f dst, const M3DMatrix33f src, int column)$/;"	f
m3dGetMatrixColumn44	shared/math3d.h	/^inline void m3dGetMatrixColumn44(M3DVector4d dst, const M3DMatrix44d src, int column)$/;"	f
m3dGetMatrixColumn44	shared/math3d.h	/^inline void m3dGetMatrixColumn44(M3DVector4f dst, const M3DMatrix44f src, int column)$/;"	f
m3dGetMatrixRowCol33	shared/math3d.h	/^inline double m3dGetMatrixRowCol33(const M3DMatrix33d m, int row, int col)$/;"	f
m3dGetMatrixRowCol33	shared/math3d.h	/^inline float m3dGetMatrixRowCol33(const M3DMatrix33f m, int row, int col)$/;"	f
m3dGetMatrixRowCol44	shared/math3d.h	/^inline double m3dGetMatrixRowCol44(const M3DMatrix44d m, int row, int col)$/;"	f
m3dGetMatrixRowCol44	shared/math3d.h	/^inline float m3dGetMatrixRowCol44(const M3DMatrix44f m, int row, int col)$/;"	f
m3dGetPlaneEquation	shared/math3d.cpp	/^void m3dGetPlaneEquation(M3DVector4d planeEq, const M3DVector3d p1, const M3DVector3d p2, const M3DVector3d p3)$/;"	f
m3dGetPlaneEquation	shared/math3d.cpp	/^void m3dGetPlaneEquation(M3DVector4f planeEq, const M3DVector3f p1, const M3DVector3f p2, const M3DVector3f p3)$/;"	f
m3dGetVectorLength	shared/math3d.h	/^inline double m3dGetVectorLength(const M3DVector3d u)$/;"	f
m3dGetVectorLength	shared/math3d.h	/^inline float m3dGetVectorLength(const M3DVector3f u)$/;"	f
m3dGetVectorLengthSquared	shared/math3d.h	/^inline double m3dGetVectorLengthSquared(const M3DVector3d u)$/;"	f
m3dGetVectorLengthSquared	shared/math3d.h	/^inline float m3dGetVectorLengthSquared(const M3DVector3f u)$/;"	f
m3dGetVectorW	shared/math3d.h	90;"	d
m3dGetVectorX	shared/math3d.h	87;"	d
m3dGetVectorY	shared/math3d.h	88;"	d
m3dGetVectorZ	shared/math3d.h	89;"	d
m3dHrToDeg	shared/math3d.h	63;"	d
m3dHrToRad	shared/math3d.h	64;"	d
m3dInjectRotation	shared/math3d.h	/^inline void m3dInjectRotation(M3DMatrix44d dst, const M3DMatrix33d src)$/;"	f
m3dInjectRotation	shared/math3d.h	/^inline void m3dInjectRotation(M3DMatrix44f dst, const M3DMatrix33f src)$/;"	f
m3dInvertMatrix44	shared/math3d.cpp	/^bool m3dInvertMatrix44(M3DMatrix44d dst, const M3DMatrix44d src)$/;"	f
m3dInvertMatrix44	shared/math3d.cpp	/^bool m3dInvertMatrix44(M3DMatrix44f dst, const M3DMatrix44f src )$/;"	f
m3dIsPOW2	shared/math3d.h	/^inline unsigned int m3dIsPOW2(unsigned int iValue)$/;"	f
m3dLoadIdentity33	shared/math3d.cpp	/^void m3dLoadIdentity33(M3DMatrix33d m)$/;"	f
m3dLoadIdentity33	shared/math3d.cpp	/^void m3dLoadIdentity33(M3DMatrix33f m)$/;"	f
m3dLoadIdentity44	shared/math3d.cpp	/^void m3dLoadIdentity44(M3DMatrix44d m)$/;"	f
m3dLoadIdentity44	shared/math3d.cpp	/^void m3dLoadIdentity44(M3DMatrix44f m)$/;"	f
m3dLoadVector2	shared/math3d.h	/^inline void m3dLoadVector2(M3DVector2d v, float x, float y)$/;"	f
m3dLoadVector2	shared/math3d.h	/^inline void m3dLoadVector2(M3DVector2f v, float x, float y)$/;"	f
m3dLoadVector3	shared/math3d.h	/^inline void m3dLoadVector3(M3DVector3d v, double x, double y, double z)$/;"	f
m3dLoadVector3	shared/math3d.h	/^inline void m3dLoadVector3(M3DVector3f v, float x, float y, float z) $/;"	f
m3dLoadVector4	shared/math3d.h	/^inline void m3dLoadVector4(M3DVector4d v, double x, double y, double z, double w)$/;"	f
m3dLoadVector4	shared/math3d.h	/^inline void m3dLoadVector4(M3DVector4f v, float x, float y, float z, float w) $/;"	f
m3dMakePlanarShadowMatrix	shared/math3d.cpp	/^void m3dMakePlanarShadowMatrix(M3DMatrix44d proj, const M3DVector4d planeEq, const M3DVector3f vLightPos)$/;"	f
m3dMakePlanarShadowMatrix	shared/math3d.cpp	/^void m3dMakePlanarShadowMatrix(M3DMatrix44f proj, const M3DVector4f planeEq, const M3DVector3f vLightPos)$/;"	f
m3dMatrixMultiply	shared/math3d.cpp	/^void m3dMatrixMultiply(M3DMatrix44d product, const M3DMatrix44d a, const M3DMatrix44d b )$/;"	f
m3dMatrixMultiply33	shared/math3d.cpp	/^void m3dMatrixMultiply33(M3DMatrix33f product, const M3DMatrix33f a, const M3DMatrix33f b )$/;"	f
m3dMatrixMultiply44	shared/math3d.cpp	/^void m3dMatrixMultiply44(M3DMatrix33d product, const M3DMatrix33d a, const M3DMatrix33d b )$/;"	f
m3dMatrixMultiply44	shared/math3d.cpp	/^void m3dMatrixMultiply44(M3DMatrix44f product, const M3DMatrix44f a, const M3DMatrix44f b )$/;"	f
m3dNormalizeVector	shared/math3d.h	/^inline void m3dNormalizeVector(M3DVector3d u)$/;"	f
m3dNormalizeVector	shared/math3d.h	/^inline void m3dNormalizeVector(M3DVector3f u)$/;"	f
m3dProjectXY	shared/math3d.cpp	/^void m3dProjectXY(const M3DMatrix44f mModelView, const M3DMatrix44f mProjection, const int iViewPort[4], const M3DVector3f vPointIn, M3DVector2f vPointOut)$/;"	f
m3dProjectXYZ	shared/math3d.cpp	/^void m3dProjectXYZ(const M3DMatrix44f mModelView, const M3DMatrix44f mProjection, const int iViewPort[4], const M3DVector3f vPointIn, M3DVector3f vPointOut)$/;"	f
m3dRadToDeg	shared/math3d.h	60;"	d
m3dRadToHr	shared/math3d.h	67;"	d
m3dRaySphereTest	shared/math3d.cpp	/^double m3dRaySphereTest(const M3DVector3d point, const M3DVector3d ray, const M3DVector3d sphereCenter, double sphereRadius)$/;"	f
m3dRaySphereTest	shared/math3d.cpp	/^float m3dRaySphereTest(const M3DVector3f point, const M3DVector3f ray, const M3DVector3f sphereCenter, float sphereRadius)$/;"	f
m3dRotateVector	shared/math3d.h	/^__inline void m3dRotateVector(M3DVector3d vOut, const M3DVector3d p, const M3DMatrix33d m)$/;"	f
m3dRotateVector	shared/math3d.h	/^__inline void m3dRotateVector(M3DVector3f vOut, const M3DVector3f p, const M3DMatrix33f m)$/;"	f
m3dRotationMatrix33	shared/math3d.cpp	/^void m3dRotationMatrix33(M3DMatrix33d m, double angle, double x, double y, double z)$/;"	f
m3dRotationMatrix33	shared/math3d.cpp	/^void m3dRotationMatrix33(M3DMatrix33f m, float angle, float x, float y, float z)$/;"	f
m3dRotationMatrix44	shared/math3d.cpp	/^void m3dRotationMatrix44(M3DMatrix44d m, double angle, double x, double y, double z)$/;"	f
m3dRotationMatrix44	shared/math3d.cpp	/^void m3dRotationMatrix44(M3DMatrix44f m, float angle, float x, float y, float z)$/;"	f
m3dScaleMatrix33	shared/math3d.h	/^inline void m3dScaleMatrix33(M3DMatrix33d m, double scale)$/;"	f
m3dScaleMatrix33	shared/math3d.h	/^inline void m3dScaleMatrix33(M3DMatrix33f m, float scale)$/;"	f
m3dScaleMatrix44	shared/math3d.h	/^inline void m3dScaleMatrix44(M3DMatrix44d m, double scale)$/;"	f
m3dScaleMatrix44	shared/math3d.h	/^inline void m3dScaleMatrix44(M3DMatrix44d m, double x, double y, double z)$/;"	f
m3dScaleMatrix44	shared/math3d.h	/^inline void m3dScaleMatrix44(M3DMatrix44f m, float scale)$/;"	f
m3dScaleMatrix44	shared/math3d.h	/^inline void m3dScaleMatrix44(M3DMatrix44f m, float x, float y, float z)$/;"	f
m3dScaleVector2	shared/math3d.h	/^inline void m3dScaleVector2(M3DVector2d v, double scale) $/;"	f
m3dScaleVector2	shared/math3d.h	/^inline void m3dScaleVector2(M3DVector2f v, float scale) $/;"	f
m3dScaleVector3	shared/math3d.h	/^inline void m3dScaleVector3(M3DVector3d v, double scale) $/;"	f
m3dScaleVector3	shared/math3d.h	/^inline void m3dScaleVector3(M3DVector3f v, float scale) $/;"	f
m3dScaleVector4	shared/math3d.h	/^inline void m3dScaleVector4(M3DVector4d v, double scale) $/;"	f
m3dScaleVector4	shared/math3d.h	/^inline void m3dScaleVector4(M3DVector4f v, float scale) $/;"	f
m3dSetMatrixColumn33	shared/math3d.h	/^inline void m3dSetMatrixColumn33(M3DMatrix33d dst, const M3DVector3d src, int column)$/;"	f
m3dSetMatrixColumn33	shared/math3d.h	/^inline void m3dSetMatrixColumn33(M3DMatrix33f dst, const M3DVector3f src, int column)$/;"	f
m3dSetMatrixColumn44	shared/math3d.h	/^inline void m3dSetMatrixColumn44(M3DMatrix44d dst, const M3DVector4d src, int column)$/;"	f
m3dSetMatrixColumn44	shared/math3d.h	/^inline void m3dSetMatrixColumn44(M3DMatrix44f dst, const M3DVector4f src, int column)$/;"	f
m3dSetMatrixRowCol33	shared/math3d.h	/^inline void m3dSetMatrixRowCol33(M3DMatrix33d m, int row, int col, double value)$/;"	f
m3dSetMatrixRowCol33	shared/math3d.h	/^inline void m3dSetMatrixRowCol33(M3DMatrix33f m, int row, int col, float value)$/;"	f
m3dSetMatrixRowCol44	shared/math3d.h	/^inline void m3dSetMatrixRowCol44(M3DMatrix44d m, int row, int col, double value)$/;"	f
m3dSetMatrixRowCol44	shared/math3d.h	/^inline void m3dSetMatrixRowCol44(M3DMatrix44f m, int row, int col, float value)$/;"	f
m3dSetVectorW	shared/math3d.h	95;"	d
m3dSetVectorX	shared/math3d.h	92;"	d
m3dSetVectorY	shared/math3d.h	93;"	d
m3dSetVectorZ	shared/math3d.h	94;"	d
m3dSmoothStep	shared/math3d.cpp	/^double m3dSmoothStep(double edge1, double edge2, double x)$/;"	f
m3dSmoothStep	shared/math3d.cpp	/^float m3dSmoothStep(float edge1, float edge2, float x)$/;"	f
m3dSubtractVectors2	shared/math3d.h	/^inline void m3dSubtractVectors2(M3DVector2d r, const M3DVector2d a, const M3DVector2d b)$/;"	f
m3dSubtractVectors2	shared/math3d.h	/^inline void m3dSubtractVectors2(M3DVector2f r, const M3DVector2f a, const M3DVector2f b)$/;"	f
m3dSubtractVectors3	shared/math3d.h	/^inline void m3dSubtractVectors3(M3DVector3d r, const M3DVector3d a, const M3DVector3d b)$/;"	f
m3dSubtractVectors3	shared/math3d.h	/^inline void m3dSubtractVectors3(M3DVector3f r, const M3DVector3f a, const M3DVector3f b)$/;"	f
m3dSubtractVectors4	shared/math3d.h	/^inline void m3dSubtractVectors4(M3DVector4d r, const M3DVector4d a, const M3DVector4d b)$/;"	f
m3dSubtractVectors4	shared/math3d.h	/^inline void m3dSubtractVectors4(M3DVector4f r, const M3DVector4f a, const M3DVector4f b)$/;"	f
m3dTransformVector3	shared/math3d.h	/^__inline void m3dTransformVector3(M3DVector3d vOut, const M3DVector3d v, const M3DMatrix44d m)$/;"	f
m3dTransformVector3	shared/math3d.h	/^__inline void m3dTransformVector3(M3DVector3f vOut, const M3DVector3f v, const M3DMatrix44f m)$/;"	f
m3dTransformVector4	shared/math3d.h	/^__inline void m3dTransformVector4(M3DVector4d vOut, const M3DVector4d v, const M3DMatrix44d m)$/;"	f
m3dTransformVector4	shared/math3d.h	/^__inline void m3dTransformVector4(M3DVector4f vOut, const M3DVector4f v, const M3DMatrix44f m)$/;"	f
m3dTranslateMatrix44	shared/math3d.h	/^inline void m3dTranslateMatrix44(M3DMatrix44d m, double x, double y, double z)$/;"	f
m3dTranslateMatrix44	shared/math3d.h	/^inline void m3dTranslateMatrix44(M3DMatrix44f m, float x, float y, float z)$/;"	f
m3dTranslationMatrix44	shared/math3d.h	/^inline void m3dTranslationMatrix44(M3DMatrix44d m, double x, double y, double z)$/;"	f
m3dTranslationMatrix44	shared/math3d.h	/^inline void m3dTranslationMatrix44(M3DMatrix44f m, float x, float y, float z)$/;"	f
m3dTransposeMatrix44	shared/math3d.h	/^inline void m3dTransposeMatrix44(M3DMatrix44d dst, const M3DMatrix44d src)$/;"	f
m3dTransposeMatrix44	shared/math3d.h	/^inline void m3dTransposeMatrix44(M3DMatrix44f dst, const M3DMatrix44f src)$/;"	f
m_CounterFrequency	shared/stopwatch.h	/^		LARGE_INTEGER m_CounterFrequency;$/;"	m	class:CStopWatch
m_LastCount	shared/stopwatch.h	/^		LARGE_INTEGER m_LastCount;$/;"	m	class:CStopWatch
m_LastCount	shared/stopwatch.h	/^        timeval m_LastCount;$/;"	m	class:CStopWatch
main	c3.drawLine/drawLines.cpp	/^int main(int argc, char* argv[])$/;"	f
main	c3.drawObject/drawObject.cpp	/^int main(int argc, char* argv[])$/;"	f
main	c3.drawPoints/drawPoints.cpp	/^int main(int argc, char* argv[])$/;"	f
main	c3.drawPolygonBitmap/draw.cpp	/^int main(int argc, char* argv[])$/;"	f
main	c3.drawStart/draw.cpp	/^int main(int argc, char* argv[])$/;"	f
main	c3.drawTriangles/triangles.cpp	/^int main(int argc, char* argv[])$/;"	f
main	c3.scissor/draw.cpp	/^int main(int argc, char* argv[])$/;"	f
main	c3.template/draw.cpp	/^int main(int argc, char* argv[])$/;"	f
main	c4.translate/draw.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt02/bounce/bounce.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt02/glrect/glrect.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt02/simple/simple.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt03/lines/lines.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt03/linesw/linesw.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt03/lstipple/lstipple.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt03/lstrips/lstrips.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt03/points/points.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt03/pointsz/pointsz.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt03/pstipple/pstipple.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt03/scissor/scissor.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt03/single/single.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt03/star/star.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt03/stencil/stencil.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt03/triangle/triangle.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt04/Atom/Atom.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt04/Atom2/atom2.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt04/Ortho/ortho.cpp	/^int main(int argc, char *argv[])$/;"	f
main	chapt04/Perspect/perspect.cpp	/^int main(int argc, char *argv[])$/;"	f
main	chapt04/Solar/solar.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt04/SphereWorld/sphereworld.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt04/Transform/transform.cpp	/^int main(int argc, char* argv[])$/;"	f
main	chapt04/Transformgl/transformgl.cpp	/^int main(int argc, char* argv[])$/;"	f
main	helloGL/helloGL.cpp	/^int main(int argc, char* argv[])$/;"	f
main	template.dir/drawPoints.cpp	/^int main(int argc, char* argv[])$/;"	f
major	include/GL/internal/dri_interface.h	/^    int    major;        \/**< Major version number. *\/$/;"	m	struct:__DRIversionRec
majorAxis	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^inline unsigned int Box<T>::majorAxis() const$/;"	f	class:Imath::Box
majorAxis	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^inline unsigned int Box<T>::majorAxis() const$/;"	f	class:Imath::Box
makeEmpty	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^inline void Box<T>::makeEmpty()$/;"	f	class:Imath::Box
makeEmpty	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^Interval<T>::makeEmpty()$/;"	f	class:Imath::Interval
makeEmpty	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^inline void Box<T>::makeEmpty()$/;"	f	class:Imath::Box
makeEmpty	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^Interval<T>::makeEmpty()$/;"	f	class:Imath::Interval
makeIdentity	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::makeIdentity()$/;"	f	class:Imath::Matrix33
makeIdentity	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::makeIdentity()$/;"	f	class:Imath::Matrix44
makeIdentity	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::makeIdentity()$/;"	f	class:Imath::Matrix33
makeIdentity	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::makeIdentity()$/;"	f	class:Imath::Matrix44
makeNear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^Euler<T>::makeNear (const Euler<T> &target)$/;"	f	class:Imath::Euler
makeNear	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^Euler<T>::makeNear (const Euler<T> &target)$/;"	f	class:Imath::Euler
makeNewAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::makeNewAttribute ()$/;"	f	class:Imf::TypedAttribute
makeNewAttribute	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::makeNewAttribute ()$/;"	f	class:Imf::TypedAttribute
makeNotTiled	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h	/^inline int   makeNotTiled (int version) {return version & ~TILED_FLAG;}$/;"	f	namespace:Imf
makeNotTiled	shared/openexr-mac/include/OpenEXR/ImfVersion.h	/^inline int   makeNotTiled (int version) {return version & ~TILED_FLAG;}$/;"	f	namespace:Imf
makeTiled	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h	/^inline int   makeTiled (int version)	{return version | TILED_FLAG;}$/;"	f	namespace:Imf
makeTiled	shared/openexr-mac/include/OpenEXR/ImfVersion.h	/^inline int   makeTiled (int version)	{return version | TILED_FLAG;}$/;"	f	namespace:Imf
mask	include/GL/glxext.h	/^    unsigned int mask;	  \/* mask indicating which buffers are affected*\/$/;"	m	struct:__anon2
mask	shared/GLee.h	/^		unsigned int mask;	  $/;"	m	struct:__anon11
math3d.cpp	shared/math3d.cpp	1;"	F
math3d.h	shared/math3d.h	1;"	F
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^    T				max;$/;"	m	class:Imath::Box
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathHalfLimits.h	/^    static float		max()		{return HALF_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^    T				max;$/;"	m	class:Imath::Interval
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static char			max()		{return CHAR_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static double		max()		{return DBL_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static float		max()		{return FLT_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static int			max()		{return INT_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static long			max()		{return LONG_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static long double		max()		{return LDBL_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static short		max()		{return SHRT_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static signed char		max()		{return SCHAR_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static unsigned char	max()		{return UCHAR_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static unsigned int		max()		{return UINT_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static unsigned long	max()		{return ULONG_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static unsigned short	max()		{return USHRT_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	58;"	d
max	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static half max () throw () {return HALF_MAX;}$/;"	f	class:std::numeric_limits
max	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^    T				max;$/;"	m	class:Imath::Box
max	shared/openexr-mac/include/OpenEXR/ImathHalfLimits.h	/^    static float		max()		{return HALF_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^    T				max;$/;"	m	class:Imath::Interval
max	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static char			max()		{return CHAR_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static double		max()		{return DBL_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static float		max()		{return FLT_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static int			max()		{return INT_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static long			max()		{return LONG_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static long double		max()		{return LDBL_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static short		max()		{return SHRT_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static signed char		max()		{return SCHAR_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static unsigned char	max()		{return UCHAR_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static unsigned int		max()		{return UINT_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static unsigned long	max()		{return ULONG_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static unsigned short	max()		{return USHRT_MAX;}$/;"	f	struct:Imath::limits
max	shared/openexr-mac/include/OpenEXR/ImathLimits.h	58;"	d
max	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static half max () throw () {return HALF_MAX;}$/;"	f	class:std::numeric_limits
maxHeight	include/GL/glxext.h	/^    int XOrigin, YOrigin, maxHeight, maxWidth;$/;"	m	struct:__anon6
maxHeight	shared/GLee.h	/^			int maxHeight;$/;"	m	struct:__anon15
maxWidth	include/GL/glxext.h	/^    int XOrigin, YOrigin, maxHeight, maxWidth;$/;"	m	struct:__anon6
maxWidth	shared/GLee.h	/^			int maxWidth;$/;"	m	struct:__anon15
max_exponent	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const int max_exponent = HALF_MAX_EXP;$/;"	m	class:std::numeric_limits
max_exponent	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const int max_exponent = HALF_MAX_EXP;$/;"	m	class:std::numeric_limits
max_exponent10	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const int max_exponent10 = HALF_MAX_10_EXP;$/;"	m	class:std::numeric_limits
max_exponent10	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const int max_exponent10 = HALF_MAX_10_EXP;$/;"	m	class:std::numeric_limits
memoryOffset	include/GL/internal/dri_interface.h	/^    GLuint (*memoryOffset)(__DRIscreen *screen, const GLvoid *pointer);$/;"	m	struct:__DRIallocateExtensionRec
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^    T				min;$/;"	m	class:Imath::Box
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathHalfLimits.h	/^    static float		min()		{return -HALF_MAX;}$/;"	f	struct:Imath::limits
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^    T				min;$/;"	m	class:Imath::Interval
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static char			min()		{return CHAR_MIN;}$/;"	f	struct:Imath::limits
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static double		min()		{return -DBL_MAX;}$/;"	f	struct:Imath::limits
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static float		min()		{return -FLT_MAX;}$/;"	f	struct:Imath::limits
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static int			min()		{return INT_MIN;}$/;"	f	struct:Imath::limits
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static long			min()		{return LONG_MIN;}$/;"	f	struct:Imath::limits
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static long double		min()		{return -LDBL_MAX;}$/;"	f	struct:Imath::limits
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static short		min()		{return SHRT_MIN;}$/;"	f	struct:Imath::limits
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static signed char		min()		{return SCHAR_MIN;}$/;"	f	struct:Imath::limits
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static unsigned char	min()		{return 0;}$/;"	f	struct:Imath::limits
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static unsigned int		min()		{return 0;}$/;"	f	struct:Imath::limits
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static unsigned long	min()		{return 0;}$/;"	f	struct:Imath::limits
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static unsigned short	min()		{return 0;}$/;"	f	struct:Imath::limits
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	55;"	d
min	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static half min () throw () {return HALF_NRM_MIN;}$/;"	f	class:std::numeric_limits
min	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^    T				min;$/;"	m	class:Imath::Box
min	shared/openexr-mac/include/OpenEXR/ImathHalfLimits.h	/^    static float		min()		{return -HALF_MAX;}$/;"	f	struct:Imath::limits
min	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^    T				min;$/;"	m	class:Imath::Interval
min	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static char			min()		{return CHAR_MIN;}$/;"	f	struct:Imath::limits
min	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static double		min()		{return -DBL_MAX;}$/;"	f	struct:Imath::limits
min	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static float		min()		{return -FLT_MAX;}$/;"	f	struct:Imath::limits
min	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static int			min()		{return INT_MIN;}$/;"	f	struct:Imath::limits
min	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static long			min()		{return LONG_MIN;}$/;"	f	struct:Imath::limits
min	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static long double		min()		{return -LDBL_MAX;}$/;"	f	struct:Imath::limits
min	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static short		min()		{return SHRT_MIN;}$/;"	f	struct:Imath::limits
min	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static signed char		min()		{return SCHAR_MIN;}$/;"	f	struct:Imath::limits
min	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static unsigned char	min()		{return 0;}$/;"	f	struct:Imath::limits
min	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static unsigned int		min()		{return 0;}$/;"	f	struct:Imath::limits
min	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static unsigned long	min()		{return 0;}$/;"	f	struct:Imath::limits
min	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static unsigned short	min()		{return 0;}$/;"	f	struct:Imath::limits
min	shared/openexr-mac/include/OpenEXR/ImathLimits.h	55;"	d
min	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static half min () throw () {return HALF_NRM_MIN;}$/;"	f	class:std::numeric_limits
min_exponent	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const int min_exponent = HALF_MIN_EXP;$/;"	m	class:std::numeric_limits
min_exponent	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const int min_exponent = HALF_MIN_EXP;$/;"	m	class:std::numeric_limits
min_exponent10	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const int min_exponent10 = HALF_MIN_10_EXP;$/;"	m	class:std::numeric_limits
min_exponent10	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const int min_exponent10 = HALF_MIN_10_EXP;$/;"	m	class:std::numeric_limits
minor	include/GL/internal/dri_interface.h	/^    int    minor;        \/**< Minor version number. *\/$/;"	m	struct:__DRIversionRec
mode	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^    LevelMode       mode;$/;"	m	class:Imf::TileDescription
mode	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^    LevelMode       mode;$/;"	m	class:Imf::TileDescription
modf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	modf  (T x, T *iptr)$/;"	f	struct:Imath::Math
modf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	modf  (float x, float *y)	{return ::modff (x, y);}$/;"	f	struct:Imath::Math
modf	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	modf  (T x, T *iptr)$/;"	f	struct:Imath::Math
modf	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	modf  (float x, float *y)	{return ::modff (x, y);}$/;"	f	struct:Imath::Math
modifyNearAndFar	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^void Frustum<T>::modifyNearAndFar(T n, T f)$/;"	f	class:Imath::Frustum
modifyNearAndFar	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^void Frustum<T>::modifyNearAndFar(T n, T f)$/;"	f	class:Imath::Frustum
modp	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^modp (int x, int y)$/;"	f	namespace:Imath
modp	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^modp (int x, int y)$/;"	f	namespace:Imath
mods	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^mods (int x, int y)$/;"	f	namespace:Imath
mods	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^mods (int x, int y)$/;"	f	namespace:Imath
multDirMatrix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::multDirMatrix(const Vec2<S> &src, Vec2<S> &dst) const$/;"	f	class:Imath::Matrix33
multDirMatrix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::multDirMatrix(const Vec3<S> &src, Vec3<S> &dst) const$/;"	f	class:Imath::Matrix44
multDirMatrix	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::multDirMatrix(const Vec2<S> &src, Vec2<S> &dst) const$/;"	f	class:Imath::Matrix33
multDirMatrix	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::multDirMatrix(const Vec3<S> &src, Vec3<S> &dst) const$/;"	f	class:Imath::Matrix44
multVecMatrix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::multVecMatrix(const Vec2<S> &src, Vec2<S> &dst) const$/;"	f	class:Imath::Matrix33
multVecMatrix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::multVecMatrix(const Vec3<S> &src, Vec3<S> &dst) const$/;"	f	class:Imath::Matrix44
multVecMatrix	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::multVecMatrix(const Vec2<S> &src, Vec2<S> &dst) const$/;"	f	class:Imath::Matrix33
multVecMatrix	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::multVecMatrix(const Vec3<S> &src, Vec3<S> &dst) const$/;"	f	class:Imath::Matrix44
multiply	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::multiply (const Matrix44<T> &a,$/;"	f	class:Imath::Matrix44
multiply	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::multiply (const Matrix44<T> &a,$/;"	f	class:Imath::Matrix44
mutex	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadSemaphore.h	/^	    pthread_mutex_t mutex;$/;"	m	struct:IlmThread::Semaphore::sema_t
mutex	shared/openexr-mac/include/OpenEXR/IlmThreadSemaphore.h	/^	    pthread_mutex_t mutex;$/;"	m	struct:IlmThread::Semaphore::sema_t
n	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLut.h	/^    int n;$/;"	m	struct:Imf::roundNBit
n	shared/openexr-mac/include/OpenEXR/ImfLut.h	/^    int n;$/;"	m	struct:Imf::roundNBit
nMaxIndexes	shared/TriangleMesh.h	/^        GLuint nMaxIndexes;         \/\/ Maximum workspace$/;"	m	class:CTriangleMesh
nMaxIndexes	shared/VBOMesh.h	/^        GLuint nMaxIndexes;         \/\/ Maximum workspace$/;"	m	class:CVBOMesh
nNumIndexes	shared/TriangleMesh.h	/^        GLuint nNumIndexes;         \/\/ Number of indexes currently used$/;"	m	class:CTriangleMesh
nNumIndexes	shared/VBOMesh.h	/^        GLuint nNumIndexes;         \/\/ Number of indexes currently used$/;"	m	class:CVBOMesh
nNumVerts	shared/TriangleMesh.h	/^        GLuint nNumVerts;           \/\/ $/;"	m	class:CTriangleMesh
nNumVerts	shared/VBOMesh.h	/^        GLuint nNumVerts;           \/\/ Number of vertices actually used$/;"	m	class:CVBOMesh
name	include/GL/internal/dri_interface.h	/^    const char *name;$/;"	m	struct:__DRIextensionRec
name	include/GL/internal/dri_interface.h	/^    unsigned int name;$/;"	m	struct:__DRIbufferRec
name	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^ChannelList::ConstIterator::name () const$/;"	f	class:Imf::ChannelList::ConstIterator
name	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^ChannelList::Iterator::name () const$/;"	f	class:Imf::ChannelList::Iterator
name	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::ConstIterator::name () const$/;"	f	class:Imf::FrameBuffer::ConstIterator
name	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::Iterator::name () const$/;"	f	class:Imf::FrameBuffer::Iterator
name	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::ConstIterator::name () const$/;"	f	class:Imf::Header::ConstIterator
name	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::Iterator::name () const$/;"	f	class:Imf::Header::Iterator
name	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^ChannelList::ConstIterator::name () const$/;"	f	class:Imf::ChannelList::ConstIterator
name	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^ChannelList::Iterator::name () const$/;"	f	class:Imf::ChannelList::Iterator
name	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::ConstIterator::name () const$/;"	f	class:Imf::FrameBuffer::ConstIterator
name	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::Iterator::name () const$/;"	f	class:Imf::FrameBuffer::Iterator
name	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::ConstIterator::name () const$/;"	f	class:Imf::Header::ConstIterator
name	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::Iterator::name () const$/;"	f	class:Imf::Header::Iterator
names	shared/GLee.c	/^	char ** names;$/;"	m	struct:__anon8	file:
near	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^    T			near() const		{ return _near;		}$/;"	f	class:Imath::Frustum
near	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	51;"	d
near	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^    T			near() const		{ return _near;		}$/;"	f	class:Imath::Frustum
near	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	51;"	d
nearLL	shared/glfrustum.h	/^        M3DVector4f  nearUL, nearLL, nearUR, nearLR;$/;"	m	class:GLFrustum
nearLLT	shared/glfrustum.h	/^        M3DVector4f  nearULT, nearLLT, nearURT, nearLRT;$/;"	m	class:GLFrustum
nearLR	shared/glfrustum.h	/^        M3DVector4f  nearUL, nearLL, nearUR, nearLR;$/;"	m	class:GLFrustum
nearLRT	shared/glfrustum.h	/^        M3DVector4f  nearULT, nearLLT, nearURT, nearLRT;$/;"	m	class:GLFrustum
nearPlane	shared/glfrustum.h	/^        M3DVector4f nearPlane, farPlane, leftPlane, rightPlane;$/;"	m	class:GLFrustum
nearUL	shared/glfrustum.h	/^        M3DVector4f  nearUL, nearLL, nearUR, nearLR;$/;"	m	class:GLFrustum
nearULT	shared/glfrustum.h	/^        M3DVector4f  nearULT, nearLLT, nearURT, nearLRT;$/;"	m	class:GLFrustum
nearUR	shared/glfrustum.h	/^        M3DVector4f  nearUL, nearLL, nearUR, nearLR;$/;"	m	class:GLFrustum
nearURT	shared/glfrustum.h	/^        M3DVector4f  nearULT, nearLLT, nearURT, nearLRT;$/;"	m	class:GLFrustum
nearestPointOnTriangle	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLineAlgo.h	/^nearestPointOnTriangle(const Vec3<T> &v0,$/;"	f	namespace:Imath
nearestPointOnTriangle	shared/openexr-mac/include/OpenEXR/ImathLineAlgo.h	/^nearestPointOnTriangle(const Vec3<T> &v0,$/;"	f	namespace:Imath
nearestRotation	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^Euler<T>::nearestRotation (Vec3<T> &xyzRot, const Vec3<T> &targetXyzRot,$/;"	f	class:Imath::Euler
nearestRotation	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^Euler<T>::nearestRotation (Vec3<T> &xyzRot, const Vec3<T> &targetXyzRot,$/;"	f	class:Imath::Euler
negInf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::negInf ()$/;"	f	class:half
negInf	shared/openexr-mac/include/OpenEXR/half.h	/^half::negInf ()$/;"	f	class:half
negate	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::negate ()$/;"	f	class:Imath::Color3
negate	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::negate ()$/;"	f	class:Imath::Color4
negate	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::negate ()$/;"	f	class:Imath::Matrix33
negate	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::negate ()$/;"	f	class:Imath::Matrix44
negate	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::negate ()$/;"	f	class:Imath::Shear6
negate	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::negate ()$/;"	f	class:Imath::Vec2
negate	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::negate ()$/;"	f	class:Imath::Vec3
negate	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::negate ()$/;"	f	class:Imath::Color3
negate	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::negate ()$/;"	f	class:Imath::Color4
negate	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::negate ()$/;"	f	class:Imath::Matrix33
negate	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::negate ()$/;"	f	class:Imath::Matrix44
negate	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::negate ()$/;"	f	class:Imath::Shear6
negate	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::negate ()$/;"	f	class:Imath::Vec2
negate	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::negate ()$/;"	f	class:Imath::Vec3
networkId	include/GL/glxext.h	/^    int     networkId;$/;"	m	struct:__anon3
networkId	shared/GLee.h	/^			int  networkId;$/;"	m	struct:__anon12
next	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^Rand32::next ()$/;"	f	class:Imath::Rand32
next	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^Rand32::next ()$/;"	f	class:Imath::Rand32
nextFrame	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrame.h	/^template<class T> Matrix44<T> nextFrame$/;"	f	namespace:Imath
nextFrame	shared/openexr-mac/include/OpenEXR/ImathFrame.h	/^template<class T> Matrix44<T> nextFrame$/;"	f	namespace:Imath
nextb	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^Rand32::nextb ()$/;"	f	class:Imath::Rand32
nextb	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^Rand48::nextb ()$/;"	f	class:Imath::Rand48
nextb	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^Rand32::nextb ()$/;"	f	class:Imath::Rand32
nextb	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^Rand48::nextb ()$/;"	f	class:Imath::Rand48
nextf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^Rand32::nextf ()$/;"	f	class:Imath::Rand32
nextf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^Rand32::nextf (float rangeMin, float rangeMax)$/;"	f	class:Imath::Rand32
nextf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^Rand48::nextf ()$/;"	f	class:Imath::Rand48
nextf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^Rand48::nextf (double rangeMin, double rangeMax)$/;"	f	class:Imath::Rand48
nextf	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^Rand32::nextf ()$/;"	f	class:Imath::Rand32
nextf	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^Rand32::nextf (float rangeMin, float rangeMax)$/;"	f	class:Imath::Rand32
nextf	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^Rand48::nextf ()$/;"	f	class:Imath::Rand48
nextf	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^Rand48::nextf (double rangeMin, double rangeMax)$/;"	f	class:Imath::Rand48
nexti	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^Rand32::nexti ()$/;"	f	class:Imath::Rand32
nexti	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^Rand48::nexti ()$/;"	f	class:Imath::Rand48
nexti	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^Rand32::nexti ()$/;"	f	class:Imath::Rand32
nexti	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^Rand48::nexti ()$/;"	f	class:Imath::Rand48
nonZero	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadSemaphore.h	/^	    pthread_cond_t nonZero;$/;"	m	struct:IlmThread::Semaphore::sema_t
nonZero	shared/openexr-mac/include/OpenEXR/IlmThreadSemaphore.h	/^	    pthread_cond_t nonZero;$/;"	m	struct:IlmThread::Semaphore::sema_t
normal	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^    Vec3<T>			normal;$/;"	m	class:Imath::Plane3
normal	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^    Vec3<T>			normal;$/;"	m	class:Imath::Plane3
normalize	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Quat<T>& Quat<T>::normalize()$/;"	f	class:Imath::Quat
normalize	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::normalize ()$/;"	f	class:Imath::Vec2
normalize	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::normalize ()$/;"	f	class:Imath::Vec3
normalize	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Quat<T>& Quat<T>::normalize()$/;"	f	class:Imath::Quat
normalize	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::normalize ()$/;"	f	class:Imath::Vec2
normalize	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::normalize ()$/;"	f	class:Imath::Vec3
normalizeExc	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::normalizeExc () throw (Iex::MathExc)$/;"	f	class:Imath::Vec2
normalizeExc	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::normalizeExc () throw (Iex::MathExc)$/;"	f	class:Imath::Vec3
normalizeExc	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::normalizeExc () throw (Iex::MathExc)$/;"	f	class:Imath::Vec2
normalizeExc	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::normalizeExc () throw (Iex::MathExc)$/;"	f	class:Imath::Vec3
normalizeNonNull	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::normalizeNonNull ()$/;"	f	class:Imath::Vec2
normalizeNonNull	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::normalizeNonNull ()$/;"	f	class:Imath::Vec3
normalizeNonNull	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::normalizeNonNull ()$/;"	f	class:Imath::Vec2
normalizeNonNull	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::normalizeNonNull ()$/;"	f	class:Imath::Vec3
normalized	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Quat<T> Quat<T>::normalized() const$/;"	f	class:Imath::Quat
normalized	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::normalized () const$/;"	f	class:Imath::Vec2
normalized	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::normalized () const$/;"	f	class:Imath::Vec3
normalized	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Quat<T> Quat<T>::normalized() const$/;"	f	class:Imath::Quat
normalized	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::normalized () const$/;"	f	class:Imath::Vec2
normalized	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::normalized () const$/;"	f	class:Imath::Vec3
normalizedExc	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::normalizedExc () const throw (Iex::MathExc)$/;"	f	class:Imath::Vec2
normalizedExc	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::normalizedExc () const throw (Iex::MathExc)$/;"	f	class:Imath::Vec3
normalizedExc	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::normalizedExc () const throw (Iex::MathExc)$/;"	f	class:Imath::Vec2
normalizedExc	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::normalizedExc () const throw (Iex::MathExc)$/;"	f	class:Imath::Vec3
normalizedNonNull	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::normalizedNonNull () const$/;"	f	class:Imath::Vec2
normalizedNonNull	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::normalizedNonNull () const$/;"	f	class:Imath::Vec3
normalizedNonNull	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::normalizedNonNull () const$/;"	f	class:Imath::Vec2
normalizedNonNull	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::normalizedNonNull () const$/;"	f	class:Imath::Vec3
normalizedZToDepth	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^T Frustum<T>::normalizedZToDepth(T zval) const$/;"	f	class:Imath::Frustum
normalizedZToDepth	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^T Frustum<T>::normalizedZToDepth(T zval) const$/;"	f	class:Imath::Frustum
numNames	shared/GLee.c	/^	int numNames;$/;"	m	struct:__anon8	file:
numWaiting	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadSemaphore.h	/^	    unsigned long numWaiting;$/;"	m	struct:IlmThread::Semaphore::sema_t
numWaiting	shared/openexr-mac/include/OpenEXR/IlmThreadSemaphore.h	/^	    unsigned long numWaiting;$/;"	m	struct:IlmThread::Semaphore::sema_t
numeric_limits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^class numeric_limits <half>$/;"	c	namespace:std
numeric_limits	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^class numeric_limits <half>$/;"	c	namespace:std
operator !=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^Box<T>::operator != (const Box<T> &src) const$/;"	f	class:Imath::Box
operator !=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator != (const Color4<S> &v) const$/;"	f	class:Imath::Color4
operator !=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^Frustum<T>::operator != (const Frustum<T> &src) const$/;"	f	class:Imath::Frustum
operator !=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator != (const Matrix33 &v) const$/;"	f	class:Imath::Matrix33
operator !=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator != (const Matrix44 &v) const$/;"	f	class:Imath::Matrix44
operator !=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^Quat<T>::operator != (const Quat<S> &q) const$/;"	f	class:Imath::Quat
operator !=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator != (const Shear6<S> &h) const$/;"	f	class:Imath::Shear6
operator !=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator != (const Vec2<S> &v) const$/;"	f	class:Imath::Vec2
operator !=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator != (const Vec3<S> &v) const$/;"	f	class:Imath::Vec3
operator !=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^operator != (const ChannelList::ConstIterator &x,$/;"	f	namespace:Imf
operator !=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^operator != (const FrameBuffer::ConstIterator &x,$/;"	f	namespace:Imf
operator !=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^operator != (const Header::ConstIterator &x, const Header::ConstIterator &y)$/;"	f	namespace:Imf
operator !=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h	/^operator != (const Name &x, const Name &y)$/;"	f	namespace:Imf
operator !=	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^Box<T>::operator != (const Box<T> &src) const$/;"	f	class:Imath::Box
operator !=	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator != (const Color4<S> &v) const$/;"	f	class:Imath::Color4
operator !=	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^Frustum<T>::operator != (const Frustum<T> &src) const$/;"	f	class:Imath::Frustum
operator !=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator != (const Matrix33 &v) const$/;"	f	class:Imath::Matrix33
operator !=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator != (const Matrix44 &v) const$/;"	f	class:Imath::Matrix44
operator !=	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^Quat<T>::operator != (const Quat<S> &q) const$/;"	f	class:Imath::Quat
operator !=	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator != (const Shear6<S> &h) const$/;"	f	class:Imath::Shear6
operator !=	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator != (const Vec2<S> &v) const$/;"	f	class:Imath::Vec2
operator !=	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator != (const Vec3<S> &v) const$/;"	f	class:Imath::Vec3
operator !=	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^operator != (const ChannelList::ConstIterator &x,$/;"	f	namespace:Imf
operator !=	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^operator != (const FrameBuffer::ConstIterator &x,$/;"	f	namespace:Imf
operator !=	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^operator != (const Header::ConstIterator &x, const Header::ConstIterator &y)$/;"	f	namespace:Imf
operator !=	shared/openexr-mac/include/OpenEXR/ImfName.h	/^operator != (const Name &x, const Name &y)$/;"	f	namespace:Imf
operator %	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator % (const Vec2 &v) const$/;"	f	class:Imath::Vec2
operator %	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator % (const Vec3 &v) const$/;"	f	class:Imath::Vec3
operator %	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator % (const Vec2 &v) const$/;"	f	class:Imath::Vec2
operator %	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator % (const Vec3 &v) const$/;"	f	class:Imath::Vec3
operator %=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator %= (const Vec3 &v)$/;"	f	class:Imath::Vec3
operator %=	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator %= (const Vec3 &v)$/;"	f	class:Imath::Vec3
operator ()	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	/^inline Vec3<T> Line3<T>::operator()(T parameter) const$/;"	f	class:Imath::Line3
operator ()	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLut.h	/^    half operator () (half x) {return x.round(n);}$/;"	f	struct:Imf::roundNBit
operator ()	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfFunction.h	/^halfFunction<T>::operator () (half x) const$/;"	f	class:halfFunction
operator ()	shared/openexr-mac/include/OpenEXR/ImathLine.h	/^inline Vec3<T> Line3<T>::operator()(T parameter) const$/;"	f	class:Imath::Line3
operator ()	shared/openexr-mac/include/OpenEXR/ImfLut.h	/^    half operator () (half x) {return x.round(n);}$/;"	f	struct:Imf::roundNBit
operator ()	shared/openexr-mac/include/OpenEXR/halfFunction.h	/^halfFunction<T>::operator () (half x) const$/;"	f	class:halfFunction
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::operator * (T a) const$/;"	f	class:Imath::Color3
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::operator * (const Color3 &c) const$/;"	f	class:Imath::Color3
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator * (T x) const$/;"	f	class:Imath::Color4
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator * (const Color4 &v) const$/;"	f	class:Imath::Color4
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^operator * (S x, const Color4<T> &v)$/;"	f	namespace:Imath
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	/^inline Line3<S> operator * (const Line3<S> &line, const Matrix44<T> &M)$/;"	f	namespace:Imath
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator * (T a) const$/;"	f	class:Imath::Matrix33
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator * (const Matrix33<T> &v) const$/;"	f	class:Imath::Matrix33
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator * (T a) const$/;"	f	class:Imath::Matrix44
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator * (const Matrix44<T> &v) const$/;"	f	class:Imath::Matrix44
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^operator * (T a, const Matrix33<T> &v)$/;"	f	namespace:Imath
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^operator * (T a, const Matrix44<T> &v)$/;"	f	namespace:Imath
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^operator * (const Vec2<S> &v, const Matrix33<T> &m)$/;"	f	namespace:Imath
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^operator * (const Vec3<S> &v, const Matrix33<T> &m)$/;"	f	namespace:Imath
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^operator * (const Vec3<S> &v, const Matrix44<T> &m)$/;"	f	namespace:Imath
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^Plane3<T> operator* (const Plane3<T> &plane, const Matrix44<T> &M)$/;"	f	namespace:Imath
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Matrix33<T> operator* (const Matrix33<T> &M, const Quat<T> &q)$/;"	f	namespace:Imath
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Matrix33<T> operator* (const Quat<T> &q, const Matrix33<T> &M)$/;"	f	namespace:Imath
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator* (T t, const Quat<T>& q)$/;"	f	namespace:Imath
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator* (const Quat<T>& q,T t)$/;"	f	namespace:Imath
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator* (const Quat<T>& q1, const Quat<T>& q2)$/;"	f	namespace:Imath
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator * (T a) const$/;"	f	class:Imath::Shear6
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator * (const Shear6 &h) const$/;"	f	class:Imath::Shear6
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^operator * (S a, const Shear6<T> &h)$/;"	f	namespace:Imath
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator * (T a) const$/;"	f	class:Imath::Vec2
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator * (const Vec2 &v) const$/;"	f	class:Imath::Vec2
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator * (T a) const$/;"	f	class:Imath::Vec3
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator * (const Vec3 &v) const$/;"	f	class:Imath::Vec3
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^operator * (T a, const Vec2<T> &v)$/;"	f	namespace:Imath
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^operator * (T a, const Vec3<T> &v)$/;"	f	namespace:Imath
operator *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h	/^    const char *	operator * () const	{return _text;}$/;"	f	class:Imf::Name
operator *	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::operator * (T a) const$/;"	f	class:Imath::Color3
operator *	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::operator * (const Color3 &c) const$/;"	f	class:Imath::Color3
operator *	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator * (T x) const$/;"	f	class:Imath::Color4
operator *	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator * (const Color4 &v) const$/;"	f	class:Imath::Color4
operator *	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^operator * (S x, const Color4<T> &v)$/;"	f	namespace:Imath
operator *	shared/openexr-mac/include/OpenEXR/ImathLine.h	/^inline Line3<S> operator * (const Line3<S> &line, const Matrix44<T> &M)$/;"	f	namespace:Imath
operator *	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator * (T a) const$/;"	f	class:Imath::Matrix33
operator *	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator * (const Matrix33<T> &v) const$/;"	f	class:Imath::Matrix33
operator *	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator * (T a) const$/;"	f	class:Imath::Matrix44
operator *	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator * (const Matrix44<T> &v) const$/;"	f	class:Imath::Matrix44
operator *	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^operator * (T a, const Matrix33<T> &v)$/;"	f	namespace:Imath
operator *	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^operator * (T a, const Matrix44<T> &v)$/;"	f	namespace:Imath
operator *	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^operator * (const Vec2<S> &v, const Matrix33<T> &m)$/;"	f	namespace:Imath
operator *	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^operator * (const Vec3<S> &v, const Matrix33<T> &m)$/;"	f	namespace:Imath
operator *	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^operator * (const Vec3<S> &v, const Matrix44<T> &m)$/;"	f	namespace:Imath
operator *	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^Plane3<T> operator* (const Plane3<T> &plane, const Matrix44<T> &M)$/;"	f	namespace:Imath
operator *	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Matrix33<T> operator* (const Matrix33<T> &M, const Quat<T> &q)$/;"	f	namespace:Imath
operator *	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Matrix33<T> operator* (const Quat<T> &q, const Matrix33<T> &M)$/;"	f	namespace:Imath
operator *	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator* (T t, const Quat<T>& q)$/;"	f	namespace:Imath
operator *	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator* (const Quat<T>& q,T t)$/;"	f	namespace:Imath
operator *	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator* (const Quat<T>& q1, const Quat<T>& q2)$/;"	f	namespace:Imath
operator *	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator * (T a) const$/;"	f	class:Imath::Shear6
operator *	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator * (const Shear6 &h) const$/;"	f	class:Imath::Shear6
operator *	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^operator * (S a, const Shear6<T> &h)$/;"	f	namespace:Imath
operator *	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator * (T a) const$/;"	f	class:Imath::Vec2
operator *	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator * (const Vec2 &v) const$/;"	f	class:Imath::Vec2
operator *	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator * (T a) const$/;"	f	class:Imath::Vec3
operator *	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator * (const Vec3 &v) const$/;"	f	class:Imath::Vec3
operator *	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^operator * (T a, const Vec2<T> &v)$/;"	f	namespace:Imath
operator *	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^operator * (T a, const Vec3<T> &v)$/;"	f	namespace:Imath
operator *	shared/openexr-mac/include/OpenEXR/ImfName.h	/^    const char *	operator * () const	{return _text;}$/;"	f	class:Imf::Name
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::operator *= (T a)$/;"	f	class:Imath::Color3
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::operator *= (const Color3 &c)$/;"	f	class:Imath::Color3
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator *= (T x)$/;"	f	class:Imath::Color4
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator *= (const Color4 &v)$/;"	f	class:Imath::Color4
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator *= (T a)$/;"	f	class:Imath::Matrix33
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator *= (const Matrix33<T> &v)$/;"	f	class:Imath::Matrix33
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator *= (T a)$/;"	f	class:Imath::Matrix44
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator *= (const Matrix44<T> &v)$/;"	f	class:Imath::Matrix44
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^operator *= (Vec2<S> &v, const Matrix33<T> &m)$/;"	f	namespace:Imath
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^operator *= (Vec3<S> &v, const Matrix33<T> &m)$/;"	f	namespace:Imath
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^operator *= (Vec3<S> &v, const Matrix44<T> &m)$/;"	f	namespace:Imath
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline const Quat<T>& Quat<T>::operator*= (T t)$/;"	f	class:Imath::Quat
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline const Quat<T>& Quat<T>::operator*= (const Quat<T>& q)$/;"	f	class:Imath::Quat
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator *= (T a)$/;"	f	class:Imath::Shear6
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator *= (const Shear6 &h)$/;"	f	class:Imath::Shear6
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator *= (T a)$/;"	f	class:Imath::Vec2
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator *= (const Vec2 &v)$/;"	f	class:Imath::Vec2
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator *= (T a)$/;"	f	class:Imath::Vec3
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator *= (const Vec3 &v)$/;"	f	class:Imath::Vec3
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::operator *= (float f)$/;"	f	class:half
operator *=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::operator *= (half h)$/;"	f	class:half
operator *=	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::operator *= (T a)$/;"	f	class:Imath::Color3
operator *=	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::operator *= (const Color3 &c)$/;"	f	class:Imath::Color3
operator *=	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator *= (T x)$/;"	f	class:Imath::Color4
operator *=	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator *= (const Color4 &v)$/;"	f	class:Imath::Color4
operator *=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator *= (T a)$/;"	f	class:Imath::Matrix33
operator *=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator *= (const Matrix33<T> &v)$/;"	f	class:Imath::Matrix33
operator *=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator *= (T a)$/;"	f	class:Imath::Matrix44
operator *=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator *= (const Matrix44<T> &v)$/;"	f	class:Imath::Matrix44
operator *=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^operator *= (Vec2<S> &v, const Matrix33<T> &m)$/;"	f	namespace:Imath
operator *=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^operator *= (Vec3<S> &v, const Matrix33<T> &m)$/;"	f	namespace:Imath
operator *=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^operator *= (Vec3<S> &v, const Matrix44<T> &m)$/;"	f	namespace:Imath
operator *=	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline const Quat<T>& Quat<T>::operator*= (T t)$/;"	f	class:Imath::Quat
operator *=	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline const Quat<T>& Quat<T>::operator*= (const Quat<T>& q)$/;"	f	class:Imath::Quat
operator *=	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator *= (T a)$/;"	f	class:Imath::Shear6
operator *=	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator *= (const Shear6 &h)$/;"	f	class:Imath::Shear6
operator *=	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator *= (T a)$/;"	f	class:Imath::Vec2
operator *=	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator *= (const Vec2 &v)$/;"	f	class:Imath::Vec2
operator *=	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator *= (T a)$/;"	f	class:Imath::Vec3
operator *=	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator *= (const Vec3 &v)$/;"	f	class:Imath::Vec3
operator *=	shared/openexr-mac/include/OpenEXR/half.h	/^half::operator *= (float f)$/;"	f	class:half
operator *=	shared/openexr-mac/include/OpenEXR/half.h	/^half::operator *= (half h)$/;"	f	class:half
operator +	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::operator + (const Color3 &c) const$/;"	f	class:Imath::Color3
operator +	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator + (const Color4 &v) const$/;"	f	class:Imath::Color4
operator +	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator + (const Matrix33<T> &v) const$/;"	f	class:Imath::Matrix33
operator +	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator + (const Matrix44<T> &v) const$/;"	f	class:Imath::Matrix44
operator +	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator+ (const Quat<T>& q1, const Quat<T>& q2)$/;"	f	namespace:Imath
operator +	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator + (const Shear6 &h) const$/;"	f	class:Imath::Shear6
operator +	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator + (const Vec2 &v) const$/;"	f	class:Imath::Vec2
operator +	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator + (const Vec3 &v) const$/;"	f	class:Imath::Vec3
operator +	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::operator + (const Color3 &c) const$/;"	f	class:Imath::Color3
operator +	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator + (const Color4 &v) const$/;"	f	class:Imath::Color4
operator +	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator + (const Matrix33<T> &v) const$/;"	f	class:Imath::Matrix33
operator +	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator + (const Matrix44<T> &v) const$/;"	f	class:Imath::Matrix44
operator +	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator+ (const Quat<T>& q1, const Quat<T>& q2)$/;"	f	namespace:Imath
operator +	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator + (const Shear6 &h) const$/;"	f	class:Imath::Shear6
operator +	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator + (const Vec2 &v) const$/;"	f	class:Imath::Vec2
operator +	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator + (const Vec3 &v) const$/;"	f	class:Imath::Vec3
operator ++	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^ChannelList::ConstIterator::operator ++ ()$/;"	f	class:Imf::ChannelList::ConstIterator
operator ++	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^ChannelList::ConstIterator::operator ++ (int)$/;"	f	class:Imf::ChannelList::ConstIterator
operator ++	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^ChannelList::Iterator::operator ++ ()$/;"	f	class:Imf::ChannelList::Iterator
operator ++	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^ChannelList::Iterator::operator ++ (int)$/;"	f	class:Imf::ChannelList::Iterator
operator ++	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::ConstIterator::operator ++ ()$/;"	f	class:Imf::FrameBuffer::ConstIterator
operator ++	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::ConstIterator::operator ++ (int)$/;"	f	class:Imf::FrameBuffer::ConstIterator
operator ++	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::Iterator::operator ++ ()$/;"	f	class:Imf::FrameBuffer::Iterator
operator ++	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::Iterator::operator ++ (int)$/;"	f	class:Imf::FrameBuffer::Iterator
operator ++	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::ConstIterator::operator ++ ()$/;"	f	class:Imf::Header::ConstIterator
operator ++	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::ConstIterator::operator ++ (int)$/;"	f	class:Imf::Header::ConstIterator
operator ++	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::Iterator::operator ++ ()$/;"	f	class:Imf::Header::Iterator
operator ++	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::Iterator::operator ++ (int)$/;"	f	class:Imf::Header::Iterator
operator ++	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^ChannelList::ConstIterator::operator ++ ()$/;"	f	class:Imf::ChannelList::ConstIterator
operator ++	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^ChannelList::ConstIterator::operator ++ (int)$/;"	f	class:Imf::ChannelList::ConstIterator
operator ++	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^ChannelList::Iterator::operator ++ ()$/;"	f	class:Imf::ChannelList::Iterator
operator ++	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^ChannelList::Iterator::operator ++ (int)$/;"	f	class:Imf::ChannelList::Iterator
operator ++	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::ConstIterator::operator ++ ()$/;"	f	class:Imf::FrameBuffer::ConstIterator
operator ++	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::ConstIterator::operator ++ (int)$/;"	f	class:Imf::FrameBuffer::ConstIterator
operator ++	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::Iterator::operator ++ ()$/;"	f	class:Imf::FrameBuffer::Iterator
operator ++	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::Iterator::operator ++ (int)$/;"	f	class:Imf::FrameBuffer::Iterator
operator ++	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::ConstIterator::operator ++ ()$/;"	f	class:Imf::Header::ConstIterator
operator ++	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::ConstIterator::operator ++ (int)$/;"	f	class:Imf::Header::ConstIterator
operator ++	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::Iterator::operator ++ ()$/;"	f	class:Imf::Header::Iterator
operator ++	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::Iterator::operator ++ (int)$/;"	f	class:Imf::Header::Iterator
operator +=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexBaseExc.h	/^BaseExc::operator += (const char *s)$/;"	f	class:Iex::BaseExc
operator +=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexBaseExc.h	/^BaseExc::operator += (std::stringstream &s)$/;"	f	class:Iex::BaseExc
operator +=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::operator += (const Color3 &c)$/;"	f	class:Imath::Color3
operator +=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator += (const Color4 &v)$/;"	f	class:Imath::Color4
operator +=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator += (T a)$/;"	f	class:Imath::Matrix33
operator +=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator += (const Matrix33<T> &v)$/;"	f	class:Imath::Matrix33
operator +=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator += (T a)$/;"	f	class:Imath::Matrix44
operator +=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator += (const Matrix44<T> &v)$/;"	f	class:Imath::Matrix44
operator +=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline const Quat<T>& Quat<T>::operator+= (const Quat<T>& q)$/;"	f	class:Imath::Quat
operator +=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator += (const Shear6 &h)$/;"	f	class:Imath::Shear6
operator +=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator += (const Vec2 &v)$/;"	f	class:Imath::Vec2
operator +=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator += (const Vec3 &v)$/;"	f	class:Imath::Vec3
operator +=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::operator += (float f)$/;"	f	class:half
operator +=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::operator += (half h)$/;"	f	class:half
operator +=	shared/openexr-mac/include/OpenEXR/IexBaseExc.h	/^BaseExc::operator += (const char *s)$/;"	f	class:Iex::BaseExc
operator +=	shared/openexr-mac/include/OpenEXR/IexBaseExc.h	/^BaseExc::operator += (std::stringstream &s)$/;"	f	class:Iex::BaseExc
operator +=	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::operator += (const Color3 &c)$/;"	f	class:Imath::Color3
operator +=	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator += (const Color4 &v)$/;"	f	class:Imath::Color4
operator +=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator += (T a)$/;"	f	class:Imath::Matrix33
operator +=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator += (const Matrix33<T> &v)$/;"	f	class:Imath::Matrix33
operator +=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator += (T a)$/;"	f	class:Imath::Matrix44
operator +=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator += (const Matrix44<T> &v)$/;"	f	class:Imath::Matrix44
operator +=	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline const Quat<T>& Quat<T>::operator+= (const Quat<T>& q)$/;"	f	class:Imath::Quat
operator +=	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator += (const Shear6 &h)$/;"	f	class:Imath::Shear6
operator +=	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator += (const Vec2 &v)$/;"	f	class:Imath::Vec2
operator +=	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator += (const Vec3 &v)$/;"	f	class:Imath::Vec3
operator +=	shared/openexr-mac/include/OpenEXR/half.h	/^half::operator += (float f)$/;"	f	class:half
operator +=	shared/openexr-mac/include/OpenEXR/half.h	/^half::operator += (half h)$/;"	f	class:half
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::operator - () const$/;"	f	class:Imath::Color3
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::operator - (const Color3 &c) const$/;"	f	class:Imath::Color3
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator - () const$/;"	f	class:Imath::Color4
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator - (const Color4 &v) const$/;"	f	class:Imath::Color4
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator - () const$/;"	f	class:Imath::Matrix33
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator - (const Matrix33<T> &v) const$/;"	f	class:Imath::Matrix33
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator - () const$/;"	f	class:Imath::Matrix44
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator - (const Matrix44<T> &v) const$/;"	f	class:Imath::Matrix44
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^Plane3<T> operator- (const Plane3<T> &plane)$/;"	f	namespace:Imath
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator- (const Quat<T>& q)$/;"	f	namespace:Imath
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator- (const Quat<T>& q1, const Quat<T>& q2)$/;"	f	namespace:Imath
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator - () const$/;"	f	class:Imath::Shear6
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator - (const Shear6 &h) const$/;"	f	class:Imath::Shear6
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator - () const$/;"	f	class:Imath::Vec2
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator - (const Vec2 &v) const$/;"	f	class:Imath::Vec2
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator - () const$/;"	f	class:Imath::Vec3
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator - (const Vec3 &v) const$/;"	f	class:Imath::Vec3
operator -	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::operator - () const$/;"	f	class:half
operator -	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::operator - () const$/;"	f	class:Imath::Color3
operator -	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::operator - (const Color3 &c) const$/;"	f	class:Imath::Color3
operator -	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator - () const$/;"	f	class:Imath::Color4
operator -	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator - (const Color4 &v) const$/;"	f	class:Imath::Color4
operator -	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator - () const$/;"	f	class:Imath::Matrix33
operator -	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator - (const Matrix33<T> &v) const$/;"	f	class:Imath::Matrix33
operator -	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator - () const$/;"	f	class:Imath::Matrix44
operator -	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator - (const Matrix44<T> &v) const$/;"	f	class:Imath::Matrix44
operator -	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^Plane3<T> operator- (const Plane3<T> &plane)$/;"	f	namespace:Imath
operator -	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator- (const Quat<T>& q)$/;"	f	namespace:Imath
operator -	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator- (const Quat<T>& q1, const Quat<T>& q2)$/;"	f	namespace:Imath
operator -	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator - () const$/;"	f	class:Imath::Shear6
operator -	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator - (const Shear6 &h) const$/;"	f	class:Imath::Shear6
operator -	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator - () const$/;"	f	class:Imath::Vec2
operator -	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator - (const Vec2 &v) const$/;"	f	class:Imath::Vec2
operator -	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator - () const$/;"	f	class:Imath::Vec3
operator -	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator - (const Vec3 &v) const$/;"	f	class:Imath::Vec3
operator -	shared/openexr-mac/include/OpenEXR/half.h	/^half::operator - () const$/;"	f	class:half
operator -=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::operator -= (const Color3 &c)$/;"	f	class:Imath::Color3
operator -=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator -= (const Color4 &v)$/;"	f	class:Imath::Color4
operator -=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator -= (T a)$/;"	f	class:Imath::Matrix33
operator -=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator -= (const Matrix33<T> &v)$/;"	f	class:Imath::Matrix33
operator -=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator -= (T a)$/;"	f	class:Imath::Matrix44
operator -=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator -= (const Matrix44<T> &v)$/;"	f	class:Imath::Matrix44
operator -=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline const Quat<T>& Quat<T>::operator-= (const Quat<T>& q)$/;"	f	class:Imath::Quat
operator -=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator -= (const Shear6 &h)$/;"	f	class:Imath::Shear6
operator -=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator -= (const Vec2 &v)$/;"	f	class:Imath::Vec2
operator -=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator -= (const Vec3 &v)$/;"	f	class:Imath::Vec3
operator -=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::operator -= (float f)$/;"	f	class:half
operator -=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::operator -= (half h)$/;"	f	class:half
operator -=	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::operator -= (const Color3 &c)$/;"	f	class:Imath::Color3
operator -=	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator -= (const Color4 &v)$/;"	f	class:Imath::Color4
operator -=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator -= (T a)$/;"	f	class:Imath::Matrix33
operator -=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator -= (const Matrix33<T> &v)$/;"	f	class:Imath::Matrix33
operator -=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator -= (T a)$/;"	f	class:Imath::Matrix44
operator -=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator -= (const Matrix44<T> &v)$/;"	f	class:Imath::Matrix44
operator -=	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline const Quat<T>& Quat<T>::operator-= (const Quat<T>& q)$/;"	f	class:Imath::Quat
operator -=	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator -= (const Shear6 &h)$/;"	f	class:Imath::Shear6
operator -=	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator -= (const Vec2 &v)$/;"	f	class:Imath::Vec2
operator -=	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator -= (const Vec3 &v)$/;"	f	class:Imath::Vec3
operator -=	shared/openexr-mac/include/OpenEXR/half.h	/^half::operator -= (float f)$/;"	f	class:half
operator -=	shared/openexr-mac/include/OpenEXR/half.h	/^half::operator -= (half h)$/;"	f	class:half
operator /	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::operator \/ (T a) const$/;"	f	class:Imath::Color3
operator /	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::operator \/ (const Color3 &c) const$/;"	f	class:Imath::Color3
operator /	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator \/ (T x) const$/;"	f	class:Imath::Color4
operator /	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator \/ (const Color4 &v) const$/;"	f	class:Imath::Color4
operator /	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator \/ (T a) const$/;"	f	class:Imath::Matrix33
operator /	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator \/ (T a) const$/;"	f	class:Imath::Matrix44
operator /	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator\/ (const Quat<T>& q,T t)$/;"	f	namespace:Imath
operator /	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator\/ (const Quat<T>& q1, const Quat<T>& q2)$/;"	f	namespace:Imath
operator /	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator \/ (T a) const$/;"	f	class:Imath::Shear6
operator /	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator \/ (const Shear6 &h) const$/;"	f	class:Imath::Shear6
operator /	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator \/ (T a) const$/;"	f	class:Imath::Vec2
operator /	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator \/ (const Vec2 &v) const$/;"	f	class:Imath::Vec2
operator /	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator \/ (T a) const$/;"	f	class:Imath::Vec3
operator /	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator \/ (const Vec3 &v) const$/;"	f	class:Imath::Vec3
operator /	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::operator \/ (T a) const$/;"	f	class:Imath::Color3
operator /	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::operator \/ (const Color3 &c) const$/;"	f	class:Imath::Color3
operator /	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator \/ (T x) const$/;"	f	class:Imath::Color4
operator /	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator \/ (const Color4 &v) const$/;"	f	class:Imath::Color4
operator /	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator \/ (T a) const$/;"	f	class:Imath::Matrix33
operator /	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator \/ (T a) const$/;"	f	class:Imath::Matrix44
operator /	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator\/ (const Quat<T>& q,T t)$/;"	f	namespace:Imath
operator /	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator\/ (const Quat<T>& q1, const Quat<T>& q2)$/;"	f	namespace:Imath
operator /	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator \/ (T a) const$/;"	f	class:Imath::Shear6
operator /	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator \/ (const Shear6 &h) const$/;"	f	class:Imath::Shear6
operator /	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator \/ (T a) const$/;"	f	class:Imath::Vec2
operator /	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator \/ (const Vec2 &v) const$/;"	f	class:Imath::Vec2
operator /	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator \/ (T a) const$/;"	f	class:Imath::Vec3
operator /	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator \/ (const Vec3 &v) const$/;"	f	class:Imath::Vec3
operator /=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::operator \/= (T a)$/;"	f	class:Imath::Color3
operator /=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::operator \/= (const Color3 &c)$/;"	f	class:Imath::Color3
operator /=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator \/= (T x)$/;"	f	class:Imath::Color4
operator /=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator \/= (const Color4 &v)$/;"	f	class:Imath::Color4
operator /=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator \/= (T a)$/;"	f	class:Imath::Matrix33
operator /=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator \/= (T a)$/;"	f	class:Imath::Matrix44
operator /=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline const Quat<T>& Quat<T>::operator\/= (T t)$/;"	f	class:Imath::Quat
operator /=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline const Quat<T>& Quat<T>::operator\/= (const Quat<T>& q)$/;"	f	class:Imath::Quat
operator /=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator \/= (T a)$/;"	f	class:Imath::Shear6
operator /=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator \/= (const Shear6 &h)$/;"	f	class:Imath::Shear6
operator /=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator \/= (T a)$/;"	f	class:Imath::Vec2
operator /=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator \/= (const Vec2 &v)$/;"	f	class:Imath::Vec2
operator /=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator \/= (T a)$/;"	f	class:Imath::Vec3
operator /=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator \/= (const Vec3 &v)$/;"	f	class:Imath::Vec3
operator /=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::operator \/= (float f)$/;"	f	class:half
operator /=	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::operator \/= (half h)$/;"	f	class:half
operator /=	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::operator \/= (T a)$/;"	f	class:Imath::Color3
operator /=	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::operator \/= (const Color3 &c)$/;"	f	class:Imath::Color3
operator /=	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator \/= (T x)$/;"	f	class:Imath::Color4
operator /=	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator \/= (const Color4 &v)$/;"	f	class:Imath::Color4
operator /=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator \/= (T a)$/;"	f	class:Imath::Matrix33
operator /=	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator \/= (T a)$/;"	f	class:Imath::Matrix44
operator /=	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline const Quat<T>& Quat<T>::operator\/= (T t)$/;"	f	class:Imath::Quat
operator /=	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline const Quat<T>& Quat<T>::operator\/= (const Quat<T>& q)$/;"	f	class:Imath::Quat
operator /=	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator \/= (T a)$/;"	f	class:Imath::Shear6
operator /=	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator \/= (const Shear6 &h)$/;"	f	class:Imath::Shear6
operator /=	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator \/= (T a)$/;"	f	class:Imath::Vec2
operator /=	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator \/= (const Vec2 &v)$/;"	f	class:Imath::Vec2
operator /=	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator \/= (T a)$/;"	f	class:Imath::Vec3
operator /=	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator \/= (const Vec3 &v)$/;"	f	class:Imath::Vec3
operator /=	shared/openexr-mac/include/OpenEXR/half.h	/^half::operator \/= (float f)$/;"	f	class:half
operator /=	shared/openexr-mac/include/OpenEXR/half.h	/^half::operator \/= (half h)$/;"	f	class:half
operator <	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h	/^operator < (const Name &x, const Name &y)$/;"	f	namespace:Imf
operator <	shared/openexr-mac/include/OpenEXR/ImfName.h	/^operator < (const Name &x, const Name &y)$/;"	f	namespace:Imf
operator <<	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^operator << (std::ostream &s, const Color4<T> &v)$/;"	f	namespace:Imath
operator <<	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^std::ostream& operator << (std::ostream &o, const Euler<T> &euler)$/;"	f	namespace:Imath
operator <<	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	/^std::ostream& operator<< (std::ostream &o, const Line3<T> &line)$/;"	f	namespace:Imath
operator <<	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^operator << (std::ostream &s, const Matrix33<T> &m)$/;"	f	namespace:Imath
operator <<	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^operator << (std::ostream &s, const Matrix44<T> &m)$/;"	f	namespace:Imath
operator <<	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^std::ostream &operator<< (std::ostream &o, const Plane3<T> &plane)$/;"	f	namespace:Imath
operator <<	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^std::ostream& operator<< (std::ostream &o, const Quat<T> &q)$/;"	f	namespace:Imath
operator <<	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^operator << (std::ostream &s, const Shear6<T> &h)$/;"	f	namespace:Imath
operator <<	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^operator << (std::ostream &s, const Vec2<T> &v)$/;"	f	namespace:Imath
operator <<	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^operator << (std::ostream &s, const Vec3<T> &v)$/;"	f	namespace:Imath
operator <<	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^operator << (std::ostream &s, const Color4<T> &v)$/;"	f	namespace:Imath
operator <<	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^std::ostream& operator << (std::ostream &o, const Euler<T> &euler)$/;"	f	namespace:Imath
operator <<	shared/openexr-mac/include/OpenEXR/ImathLine.h	/^std::ostream& operator<< (std::ostream &o, const Line3<T> &line)$/;"	f	namespace:Imath
operator <<	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^operator << (std::ostream &s, const Matrix33<T> &m)$/;"	f	namespace:Imath
operator <<	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^operator << (std::ostream &s, const Matrix44<T> &m)$/;"	f	namespace:Imath
operator <<	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^std::ostream &operator<< (std::ostream &o, const Plane3<T> &plane)$/;"	f	namespace:Imath
operator <<	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^std::ostream& operator<< (std::ostream &o, const Quat<T> &q)$/;"	f	namespace:Imath
operator <<	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^operator << (std::ostream &s, const Shear6<T> &h)$/;"	f	namespace:Imath
operator <<	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^operator << (std::ostream &s, const Vec2<T> &v)$/;"	f	namespace:Imath
operator <<	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^operator << (std::ostream &s, const Vec3<T> &v)$/;"	f	namespace:Imath
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexBaseExc.h	/^BaseExc::operator = (const char *s)$/;"	f	class:Iex::BaseExc
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexBaseExc.h	/^BaseExc::operator = (std::stringstream &s)$/;"	f	class:Iex::BaseExc
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color3<T>::operator = (const Color3 &c)$/;"	f	class:Imath::Color3
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator = (const Color4 &v)$/;"	f	class:Imath::Color4
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^const Euler<T>& Euler<T>::operator= (const Euler<T> &euler)$/;"	f	class:Imath::Euler
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^const Euler<T>& Euler<T>::operator= (const Vec3<T> &v)$/;"	f	class:Imath::Euler
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^Frustum<T>::operator = (const Frustum &f)$/;"	f	class:Imath::Frustum
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator = (T a)$/;"	f	class:Imath::Matrix33
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator = (const Matrix33 &v)$/;"	f	class:Imath::Matrix33
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator = (T a)$/;"	f	class:Imath::Matrix44
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator = (const Matrix44 &v)$/;"	f	class:Imath::Matrix44
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline const Quat<T>& Quat<T>::operator= (const Quat<T>& q)$/;"	f	class:Imath::Quat
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator = (const Shear6 &h)$/;"	f	class:Imath::Shear6
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator = (const Vec3<S> &v)$/;"	f	class:Imath::Shear6
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator = (const Vec2 &v)$/;"	f	class:Imath::Vec2
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator = (const Vec3 &v)$/;"	f	class:Imath::Vec3
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h	/^Name::operator = (const char text[])$/;"	f	class:Imf::Name
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    Rgba & operator = (const Rgba &other)$/;"	f	struct:Imf::Rgba
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::operator = (float f)$/;"	f	class:half
operator =	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::operator = (half h)$/;"	f	class:half
operator =	shared/openexr-mac/include/OpenEXR/IexBaseExc.h	/^BaseExc::operator = (const char *s)$/;"	f	class:Iex::BaseExc
operator =	shared/openexr-mac/include/OpenEXR/IexBaseExc.h	/^BaseExc::operator = (std::stringstream &s)$/;"	f	class:Iex::BaseExc
operator =	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color3<T>::operator = (const Color3 &c)$/;"	f	class:Imath::Color3
operator =	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator = (const Color4 &v)$/;"	f	class:Imath::Color4
operator =	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^const Euler<T>& Euler<T>::operator= (const Euler<T> &euler)$/;"	f	class:Imath::Euler
operator =	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^const Euler<T>& Euler<T>::operator= (const Vec3<T> &v)$/;"	f	class:Imath::Euler
operator =	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^Frustum<T>::operator = (const Frustum &f)$/;"	f	class:Imath::Frustum
operator =	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator = (T a)$/;"	f	class:Imath::Matrix33
operator =	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator = (const Matrix33 &v)$/;"	f	class:Imath::Matrix33
operator =	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator = (T a)$/;"	f	class:Imath::Matrix44
operator =	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator = (const Matrix44 &v)$/;"	f	class:Imath::Matrix44
operator =	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline const Quat<T>& Quat<T>::operator= (const Quat<T>& q)$/;"	f	class:Imath::Quat
operator =	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator = (const Shear6 &h)$/;"	f	class:Imath::Shear6
operator =	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator = (const Vec3<S> &v)$/;"	f	class:Imath::Shear6
operator =	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator = (const Vec2 &v)$/;"	f	class:Imath::Vec2
operator =	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator = (const Vec3 &v)$/;"	f	class:Imath::Vec3
operator =	shared/openexr-mac/include/OpenEXR/ImfName.h	/^Name::operator = (const char text[])$/;"	f	class:Imf::Name
operator =	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    Rgba & operator = (const Rgba &other)$/;"	f	struct:Imf::Rgba
operator =	shared/openexr-mac/include/OpenEXR/half.h	/^half::operator = (float f)$/;"	f	class:half
operator =	shared/openexr-mac/include/OpenEXR/half.h	/^half::operator = (half h)$/;"	f	class:half
operator ==	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^Box<T>::operator == (const Box<T> &src) const$/;"	f	class:Imath::Box
operator ==	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator == (const Color4<S> &v) const$/;"	f	class:Imath::Color4
operator ==	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^Frustum<T>::operator == (const Frustum<T> &src) const$/;"	f	class:Imath::Frustum
operator ==	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^Interval<T>::operator == (const Interval<T> &src) const$/;"	f	class:Imath::Interval
operator ==	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator == (const Matrix33 &v) const$/;"	f	class:Imath::Matrix33
operator ==	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator == (const Matrix44 &v) const$/;"	f	class:Imath::Matrix44
operator ==	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^Quat<T>::operator == (const Quat<S> &q) const$/;"	f	class:Imath::Quat
operator ==	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator == (const Shear6<S> &h) const$/;"	f	class:Imath::Shear6
operator ==	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator == (const Vec2<S> &v) const$/;"	f	class:Imath::Vec2
operator ==	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator == (const Vec3<S> &v) const$/;"	f	class:Imath::Vec3
operator ==	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^operator == (const ChannelList::ConstIterator &x,$/;"	f	namespace:Imf
operator ==	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^operator == (const FrameBuffer::ConstIterator &x,$/;"	f	namespace:Imf
operator ==	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^operator == (const Header::ConstIterator &x, const Header::ConstIterator &y)$/;"	f	namespace:Imf
operator ==	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h	/^operator == (const Name &x, const Name &y)$/;"	f	namespace:Imf
operator ==	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^    operator == (const TileDescription &other) const$/;"	f	class:Imf::TileDescription
operator ==	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^Box<T>::operator == (const Box<T> &src) const$/;"	f	class:Imath::Box
operator ==	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator == (const Color4<S> &v) const$/;"	f	class:Imath::Color4
operator ==	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^Frustum<T>::operator == (const Frustum<T> &src) const$/;"	f	class:Imath::Frustum
operator ==	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^Interval<T>::operator == (const Interval<T> &src) const$/;"	f	class:Imath::Interval
operator ==	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator == (const Matrix33 &v) const$/;"	f	class:Imath::Matrix33
operator ==	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator == (const Matrix44 &v) const$/;"	f	class:Imath::Matrix44
operator ==	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^Quat<T>::operator == (const Quat<S> &q) const$/;"	f	class:Imath::Quat
operator ==	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator == (const Shear6<S> &h) const$/;"	f	class:Imath::Shear6
operator ==	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator == (const Vec2<S> &v) const$/;"	f	class:Imath::Vec2
operator ==	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator == (const Vec3<S> &v) const$/;"	f	class:Imath::Vec3
operator ==	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^operator == (const ChannelList::ConstIterator &x,$/;"	f	namespace:Imf
operator ==	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^operator == (const FrameBuffer::ConstIterator &x,$/;"	f	namespace:Imf
operator ==	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^operator == (const Header::ConstIterator &x, const Header::ConstIterator &y)$/;"	f	namespace:Imf
operator ==	shared/openexr-mac/include/OpenEXR/ImfName.h	/^operator == (const Name &x, const Name &y)$/;"	f	namespace:Imf
operator ==	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^    operator == (const TileDescription &other) const$/;"	f	class:Imf::TileDescription
operator T *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^    operator T * ()			{return _data;}$/;"	f	class:Imf::Array
operator T *	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^    operator T * ()			{return _data;}$/;"	f	class:Imf::Array
operator []	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator [] (int i) const$/;"	f	class:Imath::Color4
operator []	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::operator [] (int i)$/;"	f	class:Imath::Color4
operator []	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator [] (int i) const$/;"	f	class:Imath::Matrix33
operator []	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator [] (int i)$/;"	f	class:Imath::Matrix33
operator []	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator [] (int i) const$/;"	f	class:Imath::Matrix44
operator []	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator [] (int i)$/;"	f	class:Imath::Matrix44
operator []	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline T Quat<T>::operator[] (int index) const$/;"	f	class:Imath::Quat
operator []	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline T& Quat<T>::operator[] (int index)$/;"	f	class:Imath::Quat
operator []	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator [] (int i) const$/;"	f	class:Imath::Shear6
operator []	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator [] (int i)$/;"	f	class:Imath::Shear6
operator []	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator [] (int i) const$/;"	f	class:Imath::Vec2
operator []	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator [] (int i)$/;"	f	class:Imath::Vec2
operator []	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator [] (int i) const$/;"	f	class:Imath::Vec3
operator []	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator [] (int i)$/;"	f	class:Imath::Vec3
operator []	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^Array2D<T>::operator [] (long x) const$/;"	f	class:Imf::Array2D
operator []	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^Array2D<T>::operator [] (long x)$/;"	f	class:Imf::Array2D
operator []	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator [] (int i) const$/;"	f	class:Imath::Color4
operator []	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::operator [] (int i)$/;"	f	class:Imath::Color4
operator []	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator [] (int i) const$/;"	f	class:Imath::Matrix33
operator []	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::operator [] (int i)$/;"	f	class:Imath::Matrix33
operator []	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator [] (int i) const$/;"	f	class:Imath::Matrix44
operator []	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::operator [] (int i)$/;"	f	class:Imath::Matrix44
operator []	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline T Quat<T>::operator[] (int index) const$/;"	f	class:Imath::Quat
operator []	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline T& Quat<T>::operator[] (int index)$/;"	f	class:Imath::Quat
operator []	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator [] (int i) const$/;"	f	class:Imath::Shear6
operator []	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::operator [] (int i)$/;"	f	class:Imath::Shear6
operator []	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator [] (int i) const$/;"	f	class:Imath::Vec2
operator []	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator [] (int i)$/;"	f	class:Imath::Vec2
operator []	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator [] (int i) const$/;"	f	class:Imath::Vec3
operator []	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator [] (int i)$/;"	f	class:Imath::Vec3
operator []	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^Array2D<T>::operator [] (long x) const$/;"	f	class:Imf::Array2D
operator []	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^Array2D<T>::operator [] (long x)$/;"	f	class:Imf::Array2D
operator ^	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline T operator^ (const Quat<T>& q1,const Quat<T>& q2)$/;"	f	namespace:Imath
operator ^	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator ^ (const Vec2 &v) const$/;"	f	class:Imath::Vec2
operator ^	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator ^ (const Vec3 &v) const$/;"	f	class:Imath::Vec3
operator ^	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline T operator^ (const Quat<T>& q1,const Quat<T>& q2)$/;"	f	namespace:Imath
operator ^	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::operator ^ (const Vec2 &v) const$/;"	f	class:Imath::Vec2
operator ^	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::operator ^ (const Vec3 &v) const$/;"	f	class:Imath::Vec3
operator const T *	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^    operator const T * () const		{return _data;}$/;"	f	class:Imf::Array
operator const T *	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^    operator const T * () const		{return _data;}$/;"	f	class:Imf::Array
operator float	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::operator float () const$/;"	f	class:half
operator float	shared/openexr-mac/include/OpenEXR/half.h	/^half::operator float () const$/;"	f	class:half
operator ~	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator~ (const Quat<T>& q)$/;"	f	namespace:Imath
operator ~	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Quat<T> operator~ (const Quat<T>& q)$/;"	f	namespace:Imath
order	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^Euler<T>::order() const$/;"	f	class:Imath::Euler
order	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^Euler<T>::order() const$/;"	f	class:Imath::Euler
ortho.cpp	chapt04/Ortho/ortho.cpp	1;"	F
orthogonal	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVecAlgo.h	/^orthogonal (const Vec &s, const Vec &t)$/;"	f	namespace:Imath
orthogonal	shared/openexr-mac/include/OpenEXR/ImathVecAlgo.h	/^orthogonal (const Vec &s, const Vec &t)$/;"	f	namespace:Imath
orthographic	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^    bool		orthographic() const	{ return _orthographic; }$/;"	f	class:Imath::Frustum
orthographic	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^    bool		orthographic() const	{ return _orthographic; }$/;"	f	class:Imath::Frustum
pIndexes	shared/TriangleMesh.h	/^        GLushort  *pIndexes;          \/\/ Array of indexes$/;"	m	class:CTriangleMesh
pIndexes	shared/VBOMesh.h	/^        GLushort  *pIndexes;          \/\/ Array of indexes$/;"	m	class:CVBOMesh
pNorms	shared/TriangleMesh.h	/^        M3DVector3f *pNorms;        \/\/ Array of normals$/;"	m	class:CTriangleMesh
pNorms	shared/VBOMesh.h	/^        M3DVector3f *pNorms;        \/\/ Array of normals$/;"	m	class:CVBOMesh
pTexCoords	shared/TriangleMesh.h	/^        M3DVector2f *pTexCoords;    \/\/ Array of texture coordinates$/;"	m	class:CTriangleMesh
pTexCoords	shared/VBOMesh.h	/^        M3DVector2f *pTexCoords;    \/\/ Array of texture coordinates$/;"	m	class:CVBOMesh
pVerts	shared/TriangleMesh.h	/^        M3DVector3f *pVerts;        \/\/ Array of vertices$/;"	m	class:CTriangleMesh
pVerts	shared/VBOMesh.h	/^        M3DVector3f *pVerts;        \/\/ Array of vertices$/;"	m	class:CVBOMesh
packed2rgb	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColorAlgo.h	/^packed2rgb(PackedColor packed, Color4<T> &out)$/;"	f	namespace:Imath
packed2rgb	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColorAlgo.h	/^packed2rgb(PackedColor packed, Vec3<T> &out)$/;"	f	namespace:Imath
packed2rgb	shared/openexr-mac/include/OpenEXR/ImathColorAlgo.h	/^packed2rgb(PackedColor packed, Color4<T> &out)$/;"	f	namespace:Imath
packed2rgb	shared/openexr-mac/include/OpenEXR/ImathColorAlgo.h	/^packed2rgb(PackedColor packed, Vec3<T> &out)$/;"	f	namespace:Imath
pad	include/GL/glx.h	/^    long pad[24];$/;"	m	union:__GLXEvent
pad	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^pad (T &out, int n)			\/\/ add n padding bytes$/;"	f	namespace:Imf::Xdr
pad	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^pad (T &out, int n)			\/\/ add n padding bytes$/;"	f	namespace:Imf::Xdr
parityEven	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^    bool		parityEven() const { return _parityEven; }$/;"	f	class:Imath::Euler
parityEven	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^    bool		parityEven() const { return _parityEven; }$/;"	f	class:Imath::Euler
participationType	include/GL/glxext.h	/^      participationType;$/;"	m	struct:__anon4
participationType	shared/GLee.h	/^			unsigned int participationType;$/;"	m	struct:__anon13
patch	include/GL/internal/dri_interface.h	/^    int    patch;        \/**< Patch-level. *\/$/;"	m	struct:__DRIversionRec
perspect.cpp	chapt04/Perspect/perspect.cpp	1;"	F
pglActiveStencilFaceEXT	shared/GLee.c	/^PFNGLACTIVESTENCILFACEEXTPROC pglActiveStencilFaceEXT=_Lazy_glActiveStencilFaceEXT;$/;"	v
pglActiveStencilFaceEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLACTIVESTENCILFACEEXTPROC pglActiveStencilFaceEXT;$/;"	v
pglActiveTexture	shared/GLee.c	/^PFNGLACTIVETEXTUREPROC pglActiveTexture=_Lazy_glActiveTexture;$/;"	v
pglActiveTexture	shared/GLee.h	/^GLEE_EXTERN PFNGLACTIVETEXTUREPROC pglActiveTexture;$/;"	v
pglActiveTextureARB	shared/GLee.c	/^PFNGLACTIVETEXTUREARBPROC pglActiveTextureARB=_Lazy_glActiveTextureARB;$/;"	v
pglActiveTextureARB	shared/GLee.h	/^GLEE_EXTERN PFNGLACTIVETEXTUREARBPROC pglActiveTextureARB;$/;"	v
pglActiveVaryingNV	shared/GLee.c	/^PFNGLACTIVEVARYINGNVPROC pglActiveVaryingNV=_Lazy_glActiveVaryingNV;$/;"	v
pglActiveVaryingNV	shared/GLee.h	/^GLEE_EXTERN PFNGLACTIVEVARYINGNVPROC pglActiveVaryingNV;$/;"	v
pglAlphaFragmentOp1ATI	shared/GLee.c	/^PFNGLALPHAFRAGMENTOP1ATIPROC pglAlphaFragmentOp1ATI=_Lazy_glAlphaFragmentOp1ATI;$/;"	v
pglAlphaFragmentOp1ATI	shared/GLee.h	/^GLEE_EXTERN PFNGLALPHAFRAGMENTOP1ATIPROC pglAlphaFragmentOp1ATI;$/;"	v
pglAlphaFragmentOp2ATI	shared/GLee.c	/^PFNGLALPHAFRAGMENTOP2ATIPROC pglAlphaFragmentOp2ATI=_Lazy_glAlphaFragmentOp2ATI;$/;"	v
pglAlphaFragmentOp2ATI	shared/GLee.h	/^GLEE_EXTERN PFNGLALPHAFRAGMENTOP2ATIPROC pglAlphaFragmentOp2ATI;$/;"	v
pglAlphaFragmentOp3ATI	shared/GLee.c	/^PFNGLALPHAFRAGMENTOP3ATIPROC pglAlphaFragmentOp3ATI=_Lazy_glAlphaFragmentOp3ATI;$/;"	v
pglAlphaFragmentOp3ATI	shared/GLee.h	/^GLEE_EXTERN PFNGLALPHAFRAGMENTOP3ATIPROC pglAlphaFragmentOp3ATI;$/;"	v
pglApplyTextureEXT	shared/GLee.c	/^PFNGLAPPLYTEXTUREEXTPROC pglApplyTextureEXT=_Lazy_glApplyTextureEXT;$/;"	v
pglApplyTextureEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLAPPLYTEXTUREEXTPROC pglApplyTextureEXT;$/;"	v
pglAreProgramsResidentNV	shared/GLee.c	/^PFNGLAREPROGRAMSRESIDENTNVPROC pglAreProgramsResidentNV=_Lazy_glAreProgramsResidentNV;$/;"	v
pglAreProgramsResidentNV	shared/GLee.h	/^GLEE_EXTERN PFNGLAREPROGRAMSRESIDENTNVPROC pglAreProgramsResidentNV;$/;"	v
pglAreTexturesResidentEXT	shared/GLee.c	/^PFNGLARETEXTURESRESIDENTEXTPROC pglAreTexturesResidentEXT=_Lazy_glAreTexturesResidentEXT;$/;"	v
pglAreTexturesResidentEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLARETEXTURESRESIDENTEXTPROC pglAreTexturesResidentEXT;$/;"	v
pglArrayElementEXT	shared/GLee.c	/^PFNGLARRAYELEMENTEXTPROC pglArrayElementEXT=_Lazy_glArrayElementEXT;$/;"	v
pglArrayElementEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLARRAYELEMENTEXTPROC pglArrayElementEXT;$/;"	v
pglArrayObjectATI	shared/GLee.c	/^PFNGLARRAYOBJECTATIPROC pglArrayObjectATI=_Lazy_glArrayObjectATI;$/;"	v
pglArrayObjectATI	shared/GLee.h	/^GLEE_EXTERN PFNGLARRAYOBJECTATIPROC pglArrayObjectATI;$/;"	v
pglAsyncMarkerSGIX	shared/GLee.c	/^PFNGLASYNCMARKERSGIXPROC pglAsyncMarkerSGIX=_Lazy_glAsyncMarkerSGIX;$/;"	v
pglAsyncMarkerSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLASYNCMARKERSGIXPROC pglAsyncMarkerSGIX;$/;"	v
pglAttachObjectARB	shared/GLee.c	/^PFNGLATTACHOBJECTARBPROC pglAttachObjectARB=_Lazy_glAttachObjectARB;$/;"	v
pglAttachObjectARB	shared/GLee.h	/^GLEE_EXTERN PFNGLATTACHOBJECTARBPROC pglAttachObjectARB;$/;"	v
pglAttachShader	shared/GLee.c	/^PFNGLATTACHSHADERPROC pglAttachShader=_Lazy_glAttachShader;$/;"	v
pglAttachShader	shared/GLee.h	/^GLEE_EXTERN PFNGLATTACHSHADERPROC pglAttachShader;$/;"	v
pglBeginFragmentShaderATI	shared/GLee.c	/^PFNGLBEGINFRAGMENTSHADERATIPROC pglBeginFragmentShaderATI=_Lazy_glBeginFragmentShaderATI;$/;"	v
pglBeginFragmentShaderATI	shared/GLee.h	/^GLEE_EXTERN PFNGLBEGINFRAGMENTSHADERATIPROC pglBeginFragmentShaderATI;$/;"	v
pglBeginOcclusionQueryNV	shared/GLee.c	/^PFNGLBEGINOCCLUSIONQUERYNVPROC pglBeginOcclusionQueryNV=_Lazy_glBeginOcclusionQueryNV;$/;"	v
pglBeginOcclusionQueryNV	shared/GLee.h	/^GLEE_EXTERN PFNGLBEGINOCCLUSIONQUERYNVPROC pglBeginOcclusionQueryNV;$/;"	v
pglBeginQuery	shared/GLee.c	/^PFNGLBEGINQUERYPROC pglBeginQuery=_Lazy_glBeginQuery;$/;"	v
pglBeginQuery	shared/GLee.h	/^GLEE_EXTERN PFNGLBEGINQUERYPROC pglBeginQuery;$/;"	v
pglBeginQueryARB	shared/GLee.c	/^PFNGLBEGINQUERYARBPROC pglBeginQueryARB=_Lazy_glBeginQueryARB;$/;"	v
pglBeginQueryARB	shared/GLee.h	/^GLEE_EXTERN PFNGLBEGINQUERYARBPROC pglBeginQueryARB;$/;"	v
pglBeginSceneEXT	shared/GLee.c	/^PFNGLBEGINSCENEEXTPROC pglBeginSceneEXT=_Lazy_glBeginSceneEXT;$/;"	v
pglBeginSceneEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBEGINSCENEEXTPROC pglBeginSceneEXT;$/;"	v
pglBeginTransformFeedbackNV	shared/GLee.c	/^PFNGLBEGINTRANSFORMFEEDBACKNVPROC pglBeginTransformFeedbackNV=_Lazy_glBeginTransformFeedbackNV;$/;"	v
pglBeginTransformFeedbackNV	shared/GLee.h	/^GLEE_EXTERN PFNGLBEGINTRANSFORMFEEDBACKNVPROC pglBeginTransformFeedbackNV;$/;"	v
pglBeginVertexShaderEXT	shared/GLee.c	/^PFNGLBEGINVERTEXSHADEREXTPROC pglBeginVertexShaderEXT=_Lazy_glBeginVertexShaderEXT;$/;"	v
pglBeginVertexShaderEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBEGINVERTEXSHADEREXTPROC pglBeginVertexShaderEXT;$/;"	v
pglBindAttribLocation	shared/GLee.c	/^PFNGLBINDATTRIBLOCATIONPROC pglBindAttribLocation=_Lazy_glBindAttribLocation;$/;"	v
pglBindAttribLocation	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDATTRIBLOCATIONPROC pglBindAttribLocation;$/;"	v
pglBindAttribLocationARB	shared/GLee.c	/^PFNGLBINDATTRIBLOCATIONARBPROC pglBindAttribLocationARB=_Lazy_glBindAttribLocationARB;$/;"	v
pglBindAttribLocationARB	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDATTRIBLOCATIONARBPROC pglBindAttribLocationARB;$/;"	v
pglBindBuffer	shared/GLee.c	/^PFNGLBINDBUFFERPROC pglBindBuffer=_Lazy_glBindBuffer;$/;"	v
pglBindBuffer	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDBUFFERPROC pglBindBuffer;$/;"	v
pglBindBufferARB	shared/GLee.c	/^PFNGLBINDBUFFERARBPROC pglBindBufferARB=_Lazy_glBindBufferARB;$/;"	v
pglBindBufferARB	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDBUFFERARBPROC pglBindBufferARB;$/;"	v
pglBindBufferBaseNV	shared/GLee.c	/^PFNGLBINDBUFFERBASENVPROC pglBindBufferBaseNV=_Lazy_glBindBufferBaseNV;$/;"	v
pglBindBufferBaseNV	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDBUFFERBASENVPROC pglBindBufferBaseNV;$/;"	v
pglBindBufferOffsetNV	shared/GLee.c	/^PFNGLBINDBUFFEROFFSETNVPROC pglBindBufferOffsetNV=_Lazy_glBindBufferOffsetNV;$/;"	v
pglBindBufferOffsetNV	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDBUFFEROFFSETNVPROC pglBindBufferOffsetNV;$/;"	v
pglBindBufferRangeNV	shared/GLee.c	/^PFNGLBINDBUFFERRANGENVPROC pglBindBufferRangeNV=_Lazy_glBindBufferRangeNV;$/;"	v
pglBindBufferRangeNV	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDBUFFERRANGENVPROC pglBindBufferRangeNV;$/;"	v
pglBindFragDataLocationEXT	shared/GLee.c	/^PFNGLBINDFRAGDATALOCATIONEXTPROC pglBindFragDataLocationEXT=_Lazy_glBindFragDataLocationEXT;$/;"	v
pglBindFragDataLocationEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDFRAGDATALOCATIONEXTPROC pglBindFragDataLocationEXT;$/;"	v
pglBindFragmentShaderATI	shared/GLee.c	/^PFNGLBINDFRAGMENTSHADERATIPROC pglBindFragmentShaderATI=_Lazy_glBindFragmentShaderATI;$/;"	v
pglBindFragmentShaderATI	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDFRAGMENTSHADERATIPROC pglBindFragmentShaderATI;$/;"	v
pglBindFramebufferEXT	shared/GLee.c	/^PFNGLBINDFRAMEBUFFEREXTPROC pglBindFramebufferEXT=_Lazy_glBindFramebufferEXT;$/;"	v
pglBindFramebufferEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDFRAMEBUFFEREXTPROC pglBindFramebufferEXT;$/;"	v
pglBindLightParameterEXT	shared/GLee.c	/^PFNGLBINDLIGHTPARAMETEREXTPROC pglBindLightParameterEXT=_Lazy_glBindLightParameterEXT;$/;"	v
pglBindLightParameterEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDLIGHTPARAMETEREXTPROC pglBindLightParameterEXT;$/;"	v
pglBindMaterialParameterEXT	shared/GLee.c	/^PFNGLBINDMATERIALPARAMETEREXTPROC pglBindMaterialParameterEXT=_Lazy_glBindMaterialParameterEXT;$/;"	v
pglBindMaterialParameterEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDMATERIALPARAMETEREXTPROC pglBindMaterialParameterEXT;$/;"	v
pglBindParameterEXT	shared/GLee.c	/^PFNGLBINDPARAMETEREXTPROC pglBindParameterEXT=_Lazy_glBindParameterEXT;$/;"	v
pglBindParameterEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDPARAMETEREXTPROC pglBindParameterEXT;$/;"	v
pglBindProgramARB	shared/GLee.c	/^PFNGLBINDPROGRAMARBPROC pglBindProgramARB=_Lazy_glBindProgramARB;$/;"	v
pglBindProgramARB	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDPROGRAMARBPROC pglBindProgramARB;$/;"	v
pglBindProgramNV	shared/GLee.c	/^PFNGLBINDPROGRAMNVPROC pglBindProgramNV=_Lazy_glBindProgramNV;$/;"	v
pglBindProgramNV	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDPROGRAMNVPROC pglBindProgramNV;$/;"	v
pglBindRenderbufferEXT	shared/GLee.c	/^PFNGLBINDRENDERBUFFEREXTPROC pglBindRenderbufferEXT=_Lazy_glBindRenderbufferEXT;$/;"	v
pglBindRenderbufferEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDRENDERBUFFEREXTPROC pglBindRenderbufferEXT;$/;"	v
pglBindTexGenParameterEXT	shared/GLee.c	/^PFNGLBINDTEXGENPARAMETEREXTPROC pglBindTexGenParameterEXT=_Lazy_glBindTexGenParameterEXT;$/;"	v
pglBindTexGenParameterEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDTEXGENPARAMETEREXTPROC pglBindTexGenParameterEXT;$/;"	v
pglBindTextureEXT	shared/GLee.c	/^PFNGLBINDTEXTUREEXTPROC pglBindTextureEXT=_Lazy_glBindTextureEXT;$/;"	v
pglBindTextureEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDTEXTUREEXTPROC pglBindTextureEXT;$/;"	v
pglBindTextureUnitParameterEXT	shared/GLee.c	/^PFNGLBINDTEXTUREUNITPARAMETEREXTPROC pglBindTextureUnitParameterEXT=_Lazy_glBindTextureUnitParameterEXT;$/;"	v
pglBindTextureUnitParameterEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDTEXTUREUNITPARAMETEREXTPROC pglBindTextureUnitParameterEXT;$/;"	v
pglBindVertexArrayAPPLE	shared/GLee.c	/^PFNGLBINDVERTEXARRAYAPPLEPROC pglBindVertexArrayAPPLE=_Lazy_glBindVertexArrayAPPLE;$/;"	v
pglBindVertexArrayAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDVERTEXARRAYAPPLEPROC pglBindVertexArrayAPPLE;$/;"	v
pglBindVertexShaderEXT	shared/GLee.c	/^PFNGLBINDVERTEXSHADEREXTPROC pglBindVertexShaderEXT=_Lazy_glBindVertexShaderEXT;$/;"	v
pglBindVertexShaderEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINDVERTEXSHADEREXTPROC pglBindVertexShaderEXT;$/;"	v
pglBinormal3bEXT	shared/GLee.c	/^PFNGLBINORMAL3BEXTPROC pglBinormal3bEXT=_Lazy_glBinormal3bEXT;$/;"	v
pglBinormal3bEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINORMAL3BEXTPROC pglBinormal3bEXT;$/;"	v
pglBinormal3bvEXT	shared/GLee.c	/^PFNGLBINORMAL3BVEXTPROC pglBinormal3bvEXT=_Lazy_glBinormal3bvEXT;$/;"	v
pglBinormal3bvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINORMAL3BVEXTPROC pglBinormal3bvEXT;$/;"	v
pglBinormal3dEXT	shared/GLee.c	/^PFNGLBINORMAL3DEXTPROC pglBinormal3dEXT=_Lazy_glBinormal3dEXT;$/;"	v
pglBinormal3dEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINORMAL3DEXTPROC pglBinormal3dEXT;$/;"	v
pglBinormal3dvEXT	shared/GLee.c	/^PFNGLBINORMAL3DVEXTPROC pglBinormal3dvEXT=_Lazy_glBinormal3dvEXT;$/;"	v
pglBinormal3dvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINORMAL3DVEXTPROC pglBinormal3dvEXT;$/;"	v
pglBinormal3fEXT	shared/GLee.c	/^PFNGLBINORMAL3FEXTPROC pglBinormal3fEXT=_Lazy_glBinormal3fEXT;$/;"	v
pglBinormal3fEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINORMAL3FEXTPROC pglBinormal3fEXT;$/;"	v
pglBinormal3fvEXT	shared/GLee.c	/^PFNGLBINORMAL3FVEXTPROC pglBinormal3fvEXT=_Lazy_glBinormal3fvEXT;$/;"	v
pglBinormal3fvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINORMAL3FVEXTPROC pglBinormal3fvEXT;$/;"	v
pglBinormal3iEXT	shared/GLee.c	/^PFNGLBINORMAL3IEXTPROC pglBinormal3iEXT=_Lazy_glBinormal3iEXT;$/;"	v
pglBinormal3iEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINORMAL3IEXTPROC pglBinormal3iEXT;$/;"	v
pglBinormal3ivEXT	shared/GLee.c	/^PFNGLBINORMAL3IVEXTPROC pglBinormal3ivEXT=_Lazy_glBinormal3ivEXT;$/;"	v
pglBinormal3ivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINORMAL3IVEXTPROC pglBinormal3ivEXT;$/;"	v
pglBinormal3sEXT	shared/GLee.c	/^PFNGLBINORMAL3SEXTPROC pglBinormal3sEXT=_Lazy_glBinormal3sEXT;$/;"	v
pglBinormal3sEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINORMAL3SEXTPROC pglBinormal3sEXT;$/;"	v
pglBinormal3svEXT	shared/GLee.c	/^PFNGLBINORMAL3SVEXTPROC pglBinormal3svEXT=_Lazy_glBinormal3svEXT;$/;"	v
pglBinormal3svEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINORMAL3SVEXTPROC pglBinormal3svEXT;$/;"	v
pglBinormalPointerEXT	shared/GLee.c	/^PFNGLBINORMALPOINTEREXTPROC pglBinormalPointerEXT=_Lazy_glBinormalPointerEXT;$/;"	v
pglBinormalPointerEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBINORMALPOINTEREXTPROC pglBinormalPointerEXT;$/;"	v
pglBlendColor	shared/GLee.c	/^PFNGLBLENDCOLORPROC pglBlendColor=_Lazy_glBlendColor;$/;"	v
pglBlendColor	shared/GLee.h	/^GLEE_EXTERN PFNGLBLENDCOLORPROC pglBlendColor;$/;"	v
pglBlendColorEXT	shared/GLee.c	/^PFNGLBLENDCOLOREXTPROC pglBlendColorEXT=_Lazy_glBlendColorEXT;$/;"	v
pglBlendColorEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBLENDCOLOREXTPROC pglBlendColorEXT;$/;"	v
pglBlendEquation	shared/GLee.c	/^PFNGLBLENDEQUATIONPROC pglBlendEquation=_Lazy_glBlendEquation;$/;"	v
pglBlendEquation	shared/GLee.h	/^GLEE_EXTERN PFNGLBLENDEQUATIONPROC pglBlendEquation;$/;"	v
pglBlendEquationEXT	shared/GLee.c	/^PFNGLBLENDEQUATIONEXTPROC pglBlendEquationEXT=_Lazy_glBlendEquationEXT;$/;"	v
pglBlendEquationEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBLENDEQUATIONEXTPROC pglBlendEquationEXT;$/;"	v
pglBlendEquationSeparate	shared/GLee.c	/^PFNGLBLENDEQUATIONSEPARATEPROC pglBlendEquationSeparate=_Lazy_glBlendEquationSeparate;$/;"	v
pglBlendEquationSeparate	shared/GLee.h	/^GLEE_EXTERN PFNGLBLENDEQUATIONSEPARATEPROC pglBlendEquationSeparate;$/;"	v
pglBlendEquationSeparateEXT	shared/GLee.c	/^PFNGLBLENDEQUATIONSEPARATEEXTPROC pglBlendEquationSeparateEXT=_Lazy_glBlendEquationSeparateEXT;$/;"	v
pglBlendEquationSeparateEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBLENDEQUATIONSEPARATEEXTPROC pglBlendEquationSeparateEXT;$/;"	v
pglBlendFuncSeparate	shared/GLee.c	/^PFNGLBLENDFUNCSEPARATEPROC pglBlendFuncSeparate=_Lazy_glBlendFuncSeparate;$/;"	v
pglBlendFuncSeparate	shared/GLee.h	/^GLEE_EXTERN PFNGLBLENDFUNCSEPARATEPROC pglBlendFuncSeparate;$/;"	v
pglBlendFuncSeparateEXT	shared/GLee.c	/^PFNGLBLENDFUNCSEPARATEEXTPROC pglBlendFuncSeparateEXT=_Lazy_glBlendFuncSeparateEXT;$/;"	v
pglBlendFuncSeparateEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBLENDFUNCSEPARATEEXTPROC pglBlendFuncSeparateEXT;$/;"	v
pglBlendFuncSeparateINGR	shared/GLee.c	/^PFNGLBLENDFUNCSEPARATEINGRPROC pglBlendFuncSeparateINGR=_Lazy_glBlendFuncSeparateINGR;$/;"	v
pglBlendFuncSeparateINGR	shared/GLee.h	/^GLEE_EXTERN PFNGLBLENDFUNCSEPARATEINGRPROC pglBlendFuncSeparateINGR;$/;"	v
pglBlitFramebufferEXT	shared/GLee.c	/^PFNGLBLITFRAMEBUFFEREXTPROC pglBlitFramebufferEXT=_Lazy_glBlitFramebufferEXT;$/;"	v
pglBlitFramebufferEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLBLITFRAMEBUFFEREXTPROC pglBlitFramebufferEXT;$/;"	v
pglBufferData	shared/GLee.c	/^PFNGLBUFFERDATAPROC pglBufferData=_Lazy_glBufferData;$/;"	v
pglBufferData	shared/GLee.h	/^GLEE_EXTERN PFNGLBUFFERDATAPROC pglBufferData;$/;"	v
pglBufferDataARB	shared/GLee.c	/^PFNGLBUFFERDATAARBPROC pglBufferDataARB=_Lazy_glBufferDataARB;$/;"	v
pglBufferDataARB	shared/GLee.h	/^GLEE_EXTERN PFNGLBUFFERDATAARBPROC pglBufferDataARB;$/;"	v
pglBufferSubData	shared/GLee.c	/^PFNGLBUFFERSUBDATAPROC pglBufferSubData=_Lazy_glBufferSubData;$/;"	v
pglBufferSubData	shared/GLee.h	/^GLEE_EXTERN PFNGLBUFFERSUBDATAPROC pglBufferSubData;$/;"	v
pglBufferSubDataARB	shared/GLee.c	/^PFNGLBUFFERSUBDATAARBPROC pglBufferSubDataARB=_Lazy_glBufferSubDataARB;$/;"	v
pglBufferSubDataARB	shared/GLee.h	/^GLEE_EXTERN PFNGLBUFFERSUBDATAARBPROC pglBufferSubDataARB;$/;"	v
pglCheckFramebufferStatusEXT	shared/GLee.c	/^PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC pglCheckFramebufferStatusEXT=_Lazy_glCheckFramebufferStatusEXT;$/;"	v
pglCheckFramebufferStatusEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC pglCheckFramebufferStatusEXT;$/;"	v
pglClampColorARB	shared/GLee.c	/^PFNGLCLAMPCOLORARBPROC pglClampColorARB=_Lazy_glClampColorARB;$/;"	v
pglClampColorARB	shared/GLee.h	/^GLEE_EXTERN PFNGLCLAMPCOLORARBPROC pglClampColorARB;$/;"	v
pglClearColorIiEXT	shared/GLee.c	/^PFNGLCLEARCOLORIIEXTPROC pglClearColorIiEXT=_Lazy_glClearColorIiEXT;$/;"	v
pglClearColorIiEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCLEARCOLORIIEXTPROC pglClearColorIiEXT;$/;"	v
pglClearColorIuiEXT	shared/GLee.c	/^PFNGLCLEARCOLORIUIEXTPROC pglClearColorIuiEXT=_Lazy_glClearColorIuiEXT;$/;"	v
pglClearColorIuiEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCLEARCOLORIUIEXTPROC pglClearColorIuiEXT;$/;"	v
pglClearDepthdNV	shared/GLee.c	/^PFNGLCLEARDEPTHDNVPROC pglClearDepthdNV=_Lazy_glClearDepthdNV;$/;"	v
pglClearDepthdNV	shared/GLee.h	/^GLEE_EXTERN PFNGLCLEARDEPTHDNVPROC pglClearDepthdNV;$/;"	v
pglClearDepthfOES	shared/GLee.c	/^PFNGLCLEARDEPTHFOESPROC pglClearDepthfOES=_Lazy_glClearDepthfOES;$/;"	v
pglClearDepthfOES	shared/GLee.h	/^GLEE_EXTERN PFNGLCLEARDEPTHFOESPROC pglClearDepthfOES;$/;"	v
pglClientActiveTexture	shared/GLee.c	/^PFNGLCLIENTACTIVETEXTUREPROC pglClientActiveTexture=_Lazy_glClientActiveTexture;$/;"	v
pglClientActiveTexture	shared/GLee.h	/^GLEE_EXTERN PFNGLCLIENTACTIVETEXTUREPROC pglClientActiveTexture;$/;"	v
pglClientActiveTextureARB	shared/GLee.c	/^PFNGLCLIENTACTIVETEXTUREARBPROC pglClientActiveTextureARB=_Lazy_glClientActiveTextureARB;$/;"	v
pglClientActiveTextureARB	shared/GLee.h	/^GLEE_EXTERN PFNGLCLIENTACTIVETEXTUREARBPROC pglClientActiveTextureARB;$/;"	v
pglClientActiveVertexStreamATI	shared/GLee.c	/^PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC pglClientActiveVertexStreamATI=_Lazy_glClientActiveVertexStreamATI;$/;"	v
pglClientActiveVertexStreamATI	shared/GLee.h	/^GLEE_EXTERN PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC pglClientActiveVertexStreamATI;$/;"	v
pglClipPlanefOES	shared/GLee.c	/^PFNGLCLIPPLANEFOESPROC pglClipPlanefOES=_Lazy_glClipPlanefOES;$/;"	v
pglClipPlanefOES	shared/GLee.h	/^GLEE_EXTERN PFNGLCLIPPLANEFOESPROC pglClipPlanefOES;$/;"	v
pglColor3fVertex3fSUN	shared/GLee.c	/^PFNGLCOLOR3FVERTEX3FSUNPROC pglColor3fVertex3fSUN=_Lazy_glColor3fVertex3fSUN;$/;"	v
pglColor3fVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLOR3FVERTEX3FSUNPROC pglColor3fVertex3fSUN;$/;"	v
pglColor3fVertex3fvSUN	shared/GLee.c	/^PFNGLCOLOR3FVERTEX3FVSUNPROC pglColor3fVertex3fvSUN=_Lazy_glColor3fVertex3fvSUN;$/;"	v
pglColor3fVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLOR3FVERTEX3FVSUNPROC pglColor3fVertex3fvSUN;$/;"	v
pglColor3hNV	shared/GLee.c	/^PFNGLCOLOR3HNVPROC pglColor3hNV=_Lazy_glColor3hNV;$/;"	v
pglColor3hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLOR3HNVPROC pglColor3hNV;$/;"	v
pglColor3hvNV	shared/GLee.c	/^PFNGLCOLOR3HVNVPROC pglColor3hvNV=_Lazy_glColor3hvNV;$/;"	v
pglColor3hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLOR3HVNVPROC pglColor3hvNV;$/;"	v
pglColor4fNormal3fVertex3fSUN	shared/GLee.c	/^PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC pglColor4fNormal3fVertex3fSUN=_Lazy_glColor4fNormal3fVertex3fSUN;$/;"	v
pglColor4fNormal3fVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC pglColor4fNormal3fVertex3fSUN;$/;"	v
pglColor4fNormal3fVertex3fvSUN	shared/GLee.c	/^PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC pglColor4fNormal3fVertex3fvSUN=_Lazy_glColor4fNormal3fVertex3fvSUN;$/;"	v
pglColor4fNormal3fVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC pglColor4fNormal3fVertex3fvSUN;$/;"	v
pglColor4hNV	shared/GLee.c	/^PFNGLCOLOR4HNVPROC pglColor4hNV=_Lazy_glColor4hNV;$/;"	v
pglColor4hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLOR4HNVPROC pglColor4hNV;$/;"	v
pglColor4hvNV	shared/GLee.c	/^PFNGLCOLOR4HVNVPROC pglColor4hvNV=_Lazy_glColor4hvNV;$/;"	v
pglColor4hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLOR4HVNVPROC pglColor4hvNV;$/;"	v
pglColor4ubVertex2fSUN	shared/GLee.c	/^PFNGLCOLOR4UBVERTEX2FSUNPROC pglColor4ubVertex2fSUN=_Lazy_glColor4ubVertex2fSUN;$/;"	v
pglColor4ubVertex2fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLOR4UBVERTEX2FSUNPROC pglColor4ubVertex2fSUN;$/;"	v
pglColor4ubVertex2fvSUN	shared/GLee.c	/^PFNGLCOLOR4UBVERTEX2FVSUNPROC pglColor4ubVertex2fvSUN=_Lazy_glColor4ubVertex2fvSUN;$/;"	v
pglColor4ubVertex2fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLOR4UBVERTEX2FVSUNPROC pglColor4ubVertex2fvSUN;$/;"	v
pglColor4ubVertex3fSUN	shared/GLee.c	/^PFNGLCOLOR4UBVERTEX3FSUNPROC pglColor4ubVertex3fSUN=_Lazy_glColor4ubVertex3fSUN;$/;"	v
pglColor4ubVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLOR4UBVERTEX3FSUNPROC pglColor4ubVertex3fSUN;$/;"	v
pglColor4ubVertex3fvSUN	shared/GLee.c	/^PFNGLCOLOR4UBVERTEX3FVSUNPROC pglColor4ubVertex3fvSUN=_Lazy_glColor4ubVertex3fvSUN;$/;"	v
pglColor4ubVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLOR4UBVERTEX3FVSUNPROC pglColor4ubVertex3fvSUN;$/;"	v
pglColorFragmentOp1ATI	shared/GLee.c	/^PFNGLCOLORFRAGMENTOP1ATIPROC pglColorFragmentOp1ATI=_Lazy_glColorFragmentOp1ATI;$/;"	v
pglColorFragmentOp1ATI	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLORFRAGMENTOP1ATIPROC pglColorFragmentOp1ATI;$/;"	v
pglColorFragmentOp2ATI	shared/GLee.c	/^PFNGLCOLORFRAGMENTOP2ATIPROC pglColorFragmentOp2ATI=_Lazy_glColorFragmentOp2ATI;$/;"	v
pglColorFragmentOp2ATI	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLORFRAGMENTOP2ATIPROC pglColorFragmentOp2ATI;$/;"	v
pglColorFragmentOp3ATI	shared/GLee.c	/^PFNGLCOLORFRAGMENTOP3ATIPROC pglColorFragmentOp3ATI=_Lazy_glColorFragmentOp3ATI;$/;"	v
pglColorFragmentOp3ATI	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLORFRAGMENTOP3ATIPROC pglColorFragmentOp3ATI;$/;"	v
pglColorMaskIndexedEXT	shared/GLee.c	/^PFNGLCOLORMASKINDEXEDEXTPROC pglColorMaskIndexedEXT=_Lazy_glColorMaskIndexedEXT;$/;"	v
pglColorMaskIndexedEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLORMASKINDEXEDEXTPROC pglColorMaskIndexedEXT;$/;"	v
pglColorPointerEXT	shared/GLee.c	/^PFNGLCOLORPOINTEREXTPROC pglColorPointerEXT=_Lazy_glColorPointerEXT;$/;"	v
pglColorPointerEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLORPOINTEREXTPROC pglColorPointerEXT;$/;"	v
pglColorPointerListIBM	shared/GLee.c	/^PFNGLCOLORPOINTERLISTIBMPROC pglColorPointerListIBM=_Lazy_glColorPointerListIBM;$/;"	v
pglColorPointerListIBM	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLORPOINTERLISTIBMPROC pglColorPointerListIBM;$/;"	v
pglColorPointervINTEL	shared/GLee.c	/^PFNGLCOLORPOINTERVINTELPROC pglColorPointervINTEL=_Lazy_glColorPointervINTEL;$/;"	v
pglColorPointervINTEL	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLORPOINTERVINTELPROC pglColorPointervINTEL;$/;"	v
pglColorSubTable	shared/GLee.c	/^PFNGLCOLORSUBTABLEPROC pglColorSubTable=_Lazy_glColorSubTable;$/;"	v
pglColorSubTable	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLORSUBTABLEPROC pglColorSubTable;$/;"	v
pglColorSubTableEXT	shared/GLee.c	/^PFNGLCOLORSUBTABLEEXTPROC pglColorSubTableEXT=_Lazy_glColorSubTableEXT;$/;"	v
pglColorSubTableEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLORSUBTABLEEXTPROC pglColorSubTableEXT;$/;"	v
pglColorTable	shared/GLee.c	/^PFNGLCOLORTABLEPROC pglColorTable=_Lazy_glColorTable;$/;"	v
pglColorTable	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLORTABLEPROC pglColorTable;$/;"	v
pglColorTableEXT	shared/GLee.c	/^PFNGLCOLORTABLEEXTPROC pglColorTableEXT=_Lazy_glColorTableEXT;$/;"	v
pglColorTableEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLORTABLEEXTPROC pglColorTableEXT;$/;"	v
pglColorTableParameterfv	shared/GLee.c	/^PFNGLCOLORTABLEPARAMETERFVPROC pglColorTableParameterfv=_Lazy_glColorTableParameterfv;$/;"	v
pglColorTableParameterfv	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLORTABLEPARAMETERFVPROC pglColorTableParameterfv;$/;"	v
pglColorTableParameterfvSGI	shared/GLee.c	/^PFNGLCOLORTABLEPARAMETERFVSGIPROC pglColorTableParameterfvSGI=_Lazy_glColorTableParameterfvSGI;$/;"	v
pglColorTableParameterfvSGI	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLORTABLEPARAMETERFVSGIPROC pglColorTableParameterfvSGI;$/;"	v
pglColorTableParameteriv	shared/GLee.c	/^PFNGLCOLORTABLEPARAMETERIVPROC pglColorTableParameteriv=_Lazy_glColorTableParameteriv;$/;"	v
pglColorTableParameteriv	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLORTABLEPARAMETERIVPROC pglColorTableParameteriv;$/;"	v
pglColorTableParameterivSGI	shared/GLee.c	/^PFNGLCOLORTABLEPARAMETERIVSGIPROC pglColorTableParameterivSGI=_Lazy_glColorTableParameterivSGI;$/;"	v
pglColorTableParameterivSGI	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLORTABLEPARAMETERIVSGIPROC pglColorTableParameterivSGI;$/;"	v
pglColorTableSGI	shared/GLee.c	/^PFNGLCOLORTABLESGIPROC pglColorTableSGI=_Lazy_glColorTableSGI;$/;"	v
pglColorTableSGI	shared/GLee.h	/^GLEE_EXTERN PFNGLCOLORTABLESGIPROC pglColorTableSGI;$/;"	v
pglCombinerInputNV	shared/GLee.c	/^PFNGLCOMBINERINPUTNVPROC pglCombinerInputNV=_Lazy_glCombinerInputNV;$/;"	v
pglCombinerInputNV	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMBINERINPUTNVPROC pglCombinerInputNV;$/;"	v
pglCombinerOutputNV	shared/GLee.c	/^PFNGLCOMBINEROUTPUTNVPROC pglCombinerOutputNV=_Lazy_glCombinerOutputNV;$/;"	v
pglCombinerOutputNV	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMBINEROUTPUTNVPROC pglCombinerOutputNV;$/;"	v
pglCombinerParameterfNV	shared/GLee.c	/^PFNGLCOMBINERPARAMETERFNVPROC pglCombinerParameterfNV=_Lazy_glCombinerParameterfNV;$/;"	v
pglCombinerParameterfNV	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMBINERPARAMETERFNVPROC pglCombinerParameterfNV;$/;"	v
pglCombinerParameterfvNV	shared/GLee.c	/^PFNGLCOMBINERPARAMETERFVNVPROC pglCombinerParameterfvNV=_Lazy_glCombinerParameterfvNV;$/;"	v
pglCombinerParameterfvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMBINERPARAMETERFVNVPROC pglCombinerParameterfvNV;$/;"	v
pglCombinerParameteriNV	shared/GLee.c	/^PFNGLCOMBINERPARAMETERINVPROC pglCombinerParameteriNV=_Lazy_glCombinerParameteriNV;$/;"	v
pglCombinerParameteriNV	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMBINERPARAMETERINVPROC pglCombinerParameteriNV;$/;"	v
pglCombinerParameterivNV	shared/GLee.c	/^PFNGLCOMBINERPARAMETERIVNVPROC pglCombinerParameterivNV=_Lazy_glCombinerParameterivNV;$/;"	v
pglCombinerParameterivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMBINERPARAMETERIVNVPROC pglCombinerParameterivNV;$/;"	v
pglCombinerStageParameterfvNV	shared/GLee.c	/^PFNGLCOMBINERSTAGEPARAMETERFVNVPROC pglCombinerStageParameterfvNV=_Lazy_glCombinerStageParameterfvNV;$/;"	v
pglCombinerStageParameterfvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMBINERSTAGEPARAMETERFVNVPROC pglCombinerStageParameterfvNV;$/;"	v
pglCompileShader	shared/GLee.c	/^PFNGLCOMPILESHADERPROC pglCompileShader=_Lazy_glCompileShader;$/;"	v
pglCompileShader	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMPILESHADERPROC pglCompileShader;$/;"	v
pglCompileShaderARB	shared/GLee.c	/^PFNGLCOMPILESHADERARBPROC pglCompileShaderARB=_Lazy_glCompileShaderARB;$/;"	v
pglCompileShaderARB	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMPILESHADERARBPROC pglCompileShaderARB;$/;"	v
pglCompressedTexImage1D	shared/GLee.c	/^PFNGLCOMPRESSEDTEXIMAGE1DPROC pglCompressedTexImage1D=_Lazy_glCompressedTexImage1D;$/;"	v
pglCompressedTexImage1D	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMPRESSEDTEXIMAGE1DPROC pglCompressedTexImage1D;$/;"	v
pglCompressedTexImage1DARB	shared/GLee.c	/^PFNGLCOMPRESSEDTEXIMAGE1DARBPROC pglCompressedTexImage1DARB=_Lazy_glCompressedTexImage1DARB;$/;"	v
pglCompressedTexImage1DARB	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMPRESSEDTEXIMAGE1DARBPROC pglCompressedTexImage1DARB;$/;"	v
pglCompressedTexImage2D	shared/GLee.c	/^PFNGLCOMPRESSEDTEXIMAGE2DPROC pglCompressedTexImage2D=_Lazy_glCompressedTexImage2D;$/;"	v
pglCompressedTexImage2D	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMPRESSEDTEXIMAGE2DPROC pglCompressedTexImage2D;$/;"	v
pglCompressedTexImage2DARB	shared/GLee.c	/^PFNGLCOMPRESSEDTEXIMAGE2DARBPROC pglCompressedTexImage2DARB=_Lazy_glCompressedTexImage2DARB;$/;"	v
pglCompressedTexImage2DARB	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMPRESSEDTEXIMAGE2DARBPROC pglCompressedTexImage2DARB;$/;"	v
pglCompressedTexImage3D	shared/GLee.c	/^PFNGLCOMPRESSEDTEXIMAGE3DPROC pglCompressedTexImage3D=_Lazy_glCompressedTexImage3D;$/;"	v
pglCompressedTexImage3D	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMPRESSEDTEXIMAGE3DPROC pglCompressedTexImage3D;$/;"	v
pglCompressedTexImage3DARB	shared/GLee.c	/^PFNGLCOMPRESSEDTEXIMAGE3DARBPROC pglCompressedTexImage3DARB=_Lazy_glCompressedTexImage3DARB;$/;"	v
pglCompressedTexImage3DARB	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMPRESSEDTEXIMAGE3DARBPROC pglCompressedTexImage3DARB;$/;"	v
pglCompressedTexSubImage1D	shared/GLee.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC pglCompressedTexSubImage1D=_Lazy_glCompressedTexSubImage1D;$/;"	v
pglCompressedTexSubImage1D	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC pglCompressedTexSubImage1D;$/;"	v
pglCompressedTexSubImage1DARB	shared/GLee.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC pglCompressedTexSubImage1DARB=_Lazy_glCompressedTexSubImage1DARB;$/;"	v
pglCompressedTexSubImage1DARB	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC pglCompressedTexSubImage1DARB;$/;"	v
pglCompressedTexSubImage2D	shared/GLee.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC pglCompressedTexSubImage2D=_Lazy_glCompressedTexSubImage2D;$/;"	v
pglCompressedTexSubImage2D	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC pglCompressedTexSubImage2D;$/;"	v
pglCompressedTexSubImage2DARB	shared/GLee.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC pglCompressedTexSubImage2DARB=_Lazy_glCompressedTexSubImage2DARB;$/;"	v
pglCompressedTexSubImage2DARB	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC pglCompressedTexSubImage2DARB;$/;"	v
pglCompressedTexSubImage3D	shared/GLee.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC pglCompressedTexSubImage3D=_Lazy_glCompressedTexSubImage3D;$/;"	v
pglCompressedTexSubImage3D	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC pglCompressedTexSubImage3D;$/;"	v
pglCompressedTexSubImage3DARB	shared/GLee.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC pglCompressedTexSubImage3DARB=_Lazy_glCompressedTexSubImage3DARB;$/;"	v
pglCompressedTexSubImage3DARB	shared/GLee.h	/^GLEE_EXTERN PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC pglCompressedTexSubImage3DARB;$/;"	v
pglConvolutionFilter1D	shared/GLee.c	/^PFNGLCONVOLUTIONFILTER1DPROC pglConvolutionFilter1D=_Lazy_glConvolutionFilter1D;$/;"	v
pglConvolutionFilter1D	shared/GLee.h	/^GLEE_EXTERN PFNGLCONVOLUTIONFILTER1DPROC pglConvolutionFilter1D;$/;"	v
pglConvolutionFilter1DEXT	shared/GLee.c	/^PFNGLCONVOLUTIONFILTER1DEXTPROC pglConvolutionFilter1DEXT=_Lazy_glConvolutionFilter1DEXT;$/;"	v
pglConvolutionFilter1DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCONVOLUTIONFILTER1DEXTPROC pglConvolutionFilter1DEXT;$/;"	v
pglConvolutionFilter2D	shared/GLee.c	/^PFNGLCONVOLUTIONFILTER2DPROC pglConvolutionFilter2D=_Lazy_glConvolutionFilter2D;$/;"	v
pglConvolutionFilter2D	shared/GLee.h	/^GLEE_EXTERN PFNGLCONVOLUTIONFILTER2DPROC pglConvolutionFilter2D;$/;"	v
pglConvolutionFilter2DEXT	shared/GLee.c	/^PFNGLCONVOLUTIONFILTER2DEXTPROC pglConvolutionFilter2DEXT=_Lazy_glConvolutionFilter2DEXT;$/;"	v
pglConvolutionFilter2DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCONVOLUTIONFILTER2DEXTPROC pglConvolutionFilter2DEXT;$/;"	v
pglConvolutionParameterf	shared/GLee.c	/^PFNGLCONVOLUTIONPARAMETERFPROC pglConvolutionParameterf=_Lazy_glConvolutionParameterf;$/;"	v
pglConvolutionParameterf	shared/GLee.h	/^GLEE_EXTERN PFNGLCONVOLUTIONPARAMETERFPROC pglConvolutionParameterf;$/;"	v
pglConvolutionParameterfEXT	shared/GLee.c	/^PFNGLCONVOLUTIONPARAMETERFEXTPROC pglConvolutionParameterfEXT=_Lazy_glConvolutionParameterfEXT;$/;"	v
pglConvolutionParameterfEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCONVOLUTIONPARAMETERFEXTPROC pglConvolutionParameterfEXT;$/;"	v
pglConvolutionParameterfv	shared/GLee.c	/^PFNGLCONVOLUTIONPARAMETERFVPROC pglConvolutionParameterfv=_Lazy_glConvolutionParameterfv;$/;"	v
pglConvolutionParameterfv	shared/GLee.h	/^GLEE_EXTERN PFNGLCONVOLUTIONPARAMETERFVPROC pglConvolutionParameterfv;$/;"	v
pglConvolutionParameterfvEXT	shared/GLee.c	/^PFNGLCONVOLUTIONPARAMETERFVEXTPROC pglConvolutionParameterfvEXT=_Lazy_glConvolutionParameterfvEXT;$/;"	v
pglConvolutionParameterfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCONVOLUTIONPARAMETERFVEXTPROC pglConvolutionParameterfvEXT;$/;"	v
pglConvolutionParameteri	shared/GLee.c	/^PFNGLCONVOLUTIONPARAMETERIPROC pglConvolutionParameteri=_Lazy_glConvolutionParameteri;$/;"	v
pglConvolutionParameteri	shared/GLee.h	/^GLEE_EXTERN PFNGLCONVOLUTIONPARAMETERIPROC pglConvolutionParameteri;$/;"	v
pglConvolutionParameteriEXT	shared/GLee.c	/^PFNGLCONVOLUTIONPARAMETERIEXTPROC pglConvolutionParameteriEXT=_Lazy_glConvolutionParameteriEXT;$/;"	v
pglConvolutionParameteriEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCONVOLUTIONPARAMETERIEXTPROC pglConvolutionParameteriEXT;$/;"	v
pglConvolutionParameteriv	shared/GLee.c	/^PFNGLCONVOLUTIONPARAMETERIVPROC pglConvolutionParameteriv=_Lazy_glConvolutionParameteriv;$/;"	v
pglConvolutionParameteriv	shared/GLee.h	/^GLEE_EXTERN PFNGLCONVOLUTIONPARAMETERIVPROC pglConvolutionParameteriv;$/;"	v
pglConvolutionParameterivEXT	shared/GLee.c	/^PFNGLCONVOLUTIONPARAMETERIVEXTPROC pglConvolutionParameterivEXT=_Lazy_glConvolutionParameterivEXT;$/;"	v
pglConvolutionParameterivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCONVOLUTIONPARAMETERIVEXTPROC pglConvolutionParameterivEXT;$/;"	v
pglCopyColorSubTable	shared/GLee.c	/^PFNGLCOPYCOLORSUBTABLEPROC pglCopyColorSubTable=_Lazy_glCopyColorSubTable;$/;"	v
pglCopyColorSubTable	shared/GLee.h	/^GLEE_EXTERN PFNGLCOPYCOLORSUBTABLEPROC pglCopyColorSubTable;$/;"	v
pglCopyColorSubTableEXT	shared/GLee.c	/^PFNGLCOPYCOLORSUBTABLEEXTPROC pglCopyColorSubTableEXT=_Lazy_glCopyColorSubTableEXT;$/;"	v
pglCopyColorSubTableEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCOPYCOLORSUBTABLEEXTPROC pglCopyColorSubTableEXT;$/;"	v
pglCopyColorTable	shared/GLee.c	/^PFNGLCOPYCOLORTABLEPROC pglCopyColorTable=_Lazy_glCopyColorTable;$/;"	v
pglCopyColorTable	shared/GLee.h	/^GLEE_EXTERN PFNGLCOPYCOLORTABLEPROC pglCopyColorTable;$/;"	v
pglCopyColorTableSGI	shared/GLee.c	/^PFNGLCOPYCOLORTABLESGIPROC pglCopyColorTableSGI=_Lazy_glCopyColorTableSGI;$/;"	v
pglCopyColorTableSGI	shared/GLee.h	/^GLEE_EXTERN PFNGLCOPYCOLORTABLESGIPROC pglCopyColorTableSGI;$/;"	v
pglCopyConvolutionFilter1D	shared/GLee.c	/^PFNGLCOPYCONVOLUTIONFILTER1DPROC pglCopyConvolutionFilter1D=_Lazy_glCopyConvolutionFilter1D;$/;"	v
pglCopyConvolutionFilter1D	shared/GLee.h	/^GLEE_EXTERN PFNGLCOPYCONVOLUTIONFILTER1DPROC pglCopyConvolutionFilter1D;$/;"	v
pglCopyConvolutionFilter1DEXT	shared/GLee.c	/^PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC pglCopyConvolutionFilter1DEXT=_Lazy_glCopyConvolutionFilter1DEXT;$/;"	v
pglCopyConvolutionFilter1DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC pglCopyConvolutionFilter1DEXT;$/;"	v
pglCopyConvolutionFilter2D	shared/GLee.c	/^PFNGLCOPYCONVOLUTIONFILTER2DPROC pglCopyConvolutionFilter2D=_Lazy_glCopyConvolutionFilter2D;$/;"	v
pglCopyConvolutionFilter2D	shared/GLee.h	/^GLEE_EXTERN PFNGLCOPYCONVOLUTIONFILTER2DPROC pglCopyConvolutionFilter2D;$/;"	v
pglCopyConvolutionFilter2DEXT	shared/GLee.c	/^PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC pglCopyConvolutionFilter2DEXT=_Lazy_glCopyConvolutionFilter2DEXT;$/;"	v
pglCopyConvolutionFilter2DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC pglCopyConvolutionFilter2DEXT;$/;"	v
pglCopyTexImage1DEXT	shared/GLee.c	/^PFNGLCOPYTEXIMAGE1DEXTPROC pglCopyTexImage1DEXT=_Lazy_glCopyTexImage1DEXT;$/;"	v
pglCopyTexImage1DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCOPYTEXIMAGE1DEXTPROC pglCopyTexImage1DEXT;$/;"	v
pglCopyTexImage2DEXT	shared/GLee.c	/^PFNGLCOPYTEXIMAGE2DEXTPROC pglCopyTexImage2DEXT=_Lazy_glCopyTexImage2DEXT;$/;"	v
pglCopyTexImage2DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCOPYTEXIMAGE2DEXTPROC pglCopyTexImage2DEXT;$/;"	v
pglCopyTexSubImage1DEXT	shared/GLee.c	/^PFNGLCOPYTEXSUBIMAGE1DEXTPROC pglCopyTexSubImage1DEXT=_Lazy_glCopyTexSubImage1DEXT;$/;"	v
pglCopyTexSubImage1DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCOPYTEXSUBIMAGE1DEXTPROC pglCopyTexSubImage1DEXT;$/;"	v
pglCopyTexSubImage2DEXT	shared/GLee.c	/^PFNGLCOPYTEXSUBIMAGE2DEXTPROC pglCopyTexSubImage2DEXT=_Lazy_glCopyTexSubImage2DEXT;$/;"	v
pglCopyTexSubImage2DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCOPYTEXSUBIMAGE2DEXTPROC pglCopyTexSubImage2DEXT;$/;"	v
pglCopyTexSubImage3D	shared/GLee.c	/^PFNGLCOPYTEXSUBIMAGE3DPROC pglCopyTexSubImage3D=_Lazy_glCopyTexSubImage3D;$/;"	v
pglCopyTexSubImage3D	shared/GLee.h	/^GLEE_EXTERN PFNGLCOPYTEXSUBIMAGE3DPROC pglCopyTexSubImage3D;$/;"	v
pglCopyTexSubImage3DEXT	shared/GLee.c	/^PFNGLCOPYTEXSUBIMAGE3DEXTPROC pglCopyTexSubImage3DEXT=_Lazy_glCopyTexSubImage3DEXT;$/;"	v
pglCopyTexSubImage3DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCOPYTEXSUBIMAGE3DEXTPROC pglCopyTexSubImage3DEXT;$/;"	v
pglCreateProgram	shared/GLee.c	/^PFNGLCREATEPROGRAMPROC pglCreateProgram=_Lazy_glCreateProgram;$/;"	v
pglCreateProgram	shared/GLee.h	/^GLEE_EXTERN PFNGLCREATEPROGRAMPROC pglCreateProgram;$/;"	v
pglCreateProgramObjectARB	shared/GLee.c	/^PFNGLCREATEPROGRAMOBJECTARBPROC pglCreateProgramObjectARB=_Lazy_glCreateProgramObjectARB;$/;"	v
pglCreateProgramObjectARB	shared/GLee.h	/^GLEE_EXTERN PFNGLCREATEPROGRAMOBJECTARBPROC pglCreateProgramObjectARB;$/;"	v
pglCreateShader	shared/GLee.c	/^PFNGLCREATESHADERPROC pglCreateShader=_Lazy_glCreateShader;$/;"	v
pglCreateShader	shared/GLee.h	/^GLEE_EXTERN PFNGLCREATESHADERPROC pglCreateShader;$/;"	v
pglCreateShaderObjectARB	shared/GLee.c	/^PFNGLCREATESHADEROBJECTARBPROC pglCreateShaderObjectARB=_Lazy_glCreateShaderObjectARB;$/;"	v
pglCreateShaderObjectARB	shared/GLee.h	/^GLEE_EXTERN PFNGLCREATESHADEROBJECTARBPROC pglCreateShaderObjectARB;$/;"	v
pglCullParameterdvEXT	shared/GLee.c	/^PFNGLCULLPARAMETERDVEXTPROC pglCullParameterdvEXT=_Lazy_glCullParameterdvEXT;$/;"	v
pglCullParameterdvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCULLPARAMETERDVEXTPROC pglCullParameterdvEXT;$/;"	v
pglCullParameterfvEXT	shared/GLee.c	/^PFNGLCULLPARAMETERFVEXTPROC pglCullParameterfvEXT=_Lazy_glCullParameterfvEXT;$/;"	v
pglCullParameterfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLCULLPARAMETERFVEXTPROC pglCullParameterfvEXT;$/;"	v
pglCurrentPaletteMatrixARB	shared/GLee.c	/^PFNGLCURRENTPALETTEMATRIXARBPROC pglCurrentPaletteMatrixARB=_Lazy_glCurrentPaletteMatrixARB;$/;"	v
pglCurrentPaletteMatrixARB	shared/GLee.h	/^GLEE_EXTERN PFNGLCURRENTPALETTEMATRIXARBPROC pglCurrentPaletteMatrixARB;$/;"	v
pglDeformSGIX	shared/GLee.c	/^PFNGLDEFORMSGIXPROC pglDeformSGIX=_Lazy_glDeformSGIX;$/;"	v
pglDeformSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLDEFORMSGIXPROC pglDeformSGIX;$/;"	v
pglDeformationMap3dSGIX	shared/GLee.c	/^PFNGLDEFORMATIONMAP3DSGIXPROC pglDeformationMap3dSGIX=_Lazy_glDeformationMap3dSGIX;$/;"	v
pglDeformationMap3dSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLDEFORMATIONMAP3DSGIXPROC pglDeformationMap3dSGIX;$/;"	v
pglDeformationMap3fSGIX	shared/GLee.c	/^PFNGLDEFORMATIONMAP3FSGIXPROC pglDeformationMap3fSGIX=_Lazy_glDeformationMap3fSGIX;$/;"	v
pglDeformationMap3fSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLDEFORMATIONMAP3FSGIXPROC pglDeformationMap3fSGIX;$/;"	v
pglDeleteAsyncMarkersSGIX	shared/GLee.c	/^PFNGLDELETEASYNCMARKERSSGIXPROC pglDeleteAsyncMarkersSGIX=_Lazy_glDeleteAsyncMarkersSGIX;$/;"	v
pglDeleteAsyncMarkersSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETEASYNCMARKERSSGIXPROC pglDeleteAsyncMarkersSGIX;$/;"	v
pglDeleteBuffers	shared/GLee.c	/^PFNGLDELETEBUFFERSPROC pglDeleteBuffers=_Lazy_glDeleteBuffers;$/;"	v
pglDeleteBuffers	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETEBUFFERSPROC pglDeleteBuffers;$/;"	v
pglDeleteBuffersARB	shared/GLee.c	/^PFNGLDELETEBUFFERSARBPROC pglDeleteBuffersARB=_Lazy_glDeleteBuffersARB;$/;"	v
pglDeleteBuffersARB	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETEBUFFERSARBPROC pglDeleteBuffersARB;$/;"	v
pglDeleteFencesAPPLE	shared/GLee.c	/^PFNGLDELETEFENCESAPPLEPROC pglDeleteFencesAPPLE=_Lazy_glDeleteFencesAPPLE;$/;"	v
pglDeleteFencesAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETEFENCESAPPLEPROC pglDeleteFencesAPPLE;$/;"	v
pglDeleteFencesNV	shared/GLee.c	/^PFNGLDELETEFENCESNVPROC pglDeleteFencesNV=_Lazy_glDeleteFencesNV;$/;"	v
pglDeleteFencesNV	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETEFENCESNVPROC pglDeleteFencesNV;$/;"	v
pglDeleteFragmentShaderATI	shared/GLee.c	/^PFNGLDELETEFRAGMENTSHADERATIPROC pglDeleteFragmentShaderATI=_Lazy_glDeleteFragmentShaderATI;$/;"	v
pglDeleteFragmentShaderATI	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETEFRAGMENTSHADERATIPROC pglDeleteFragmentShaderATI;$/;"	v
pglDeleteFramebuffersEXT	shared/GLee.c	/^PFNGLDELETEFRAMEBUFFERSEXTPROC pglDeleteFramebuffersEXT=_Lazy_glDeleteFramebuffersEXT;$/;"	v
pglDeleteFramebuffersEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETEFRAMEBUFFERSEXTPROC pglDeleteFramebuffersEXT;$/;"	v
pglDeleteObjectARB	shared/GLee.c	/^PFNGLDELETEOBJECTARBPROC pglDeleteObjectARB=_Lazy_glDeleteObjectARB;$/;"	v
pglDeleteObjectARB	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETEOBJECTARBPROC pglDeleteObjectARB;$/;"	v
pglDeleteOcclusionQueriesNV	shared/GLee.c	/^PFNGLDELETEOCCLUSIONQUERIESNVPROC pglDeleteOcclusionQueriesNV=_Lazy_glDeleteOcclusionQueriesNV;$/;"	v
pglDeleteOcclusionQueriesNV	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETEOCCLUSIONQUERIESNVPROC pglDeleteOcclusionQueriesNV;$/;"	v
pglDeleteProgram	shared/GLee.c	/^PFNGLDELETEPROGRAMPROC pglDeleteProgram=_Lazy_glDeleteProgram;$/;"	v
pglDeleteProgram	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETEPROGRAMPROC pglDeleteProgram;$/;"	v
pglDeleteProgramsARB	shared/GLee.c	/^PFNGLDELETEPROGRAMSARBPROC pglDeleteProgramsARB=_Lazy_glDeleteProgramsARB;$/;"	v
pglDeleteProgramsARB	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETEPROGRAMSARBPROC pglDeleteProgramsARB;$/;"	v
pglDeleteProgramsNV	shared/GLee.c	/^PFNGLDELETEPROGRAMSNVPROC pglDeleteProgramsNV=_Lazy_glDeleteProgramsNV;$/;"	v
pglDeleteProgramsNV	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETEPROGRAMSNVPROC pglDeleteProgramsNV;$/;"	v
pglDeleteQueries	shared/GLee.c	/^PFNGLDELETEQUERIESPROC pglDeleteQueries=_Lazy_glDeleteQueries;$/;"	v
pglDeleteQueries	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETEQUERIESPROC pglDeleteQueries;$/;"	v
pglDeleteQueriesARB	shared/GLee.c	/^PFNGLDELETEQUERIESARBPROC pglDeleteQueriesARB=_Lazy_glDeleteQueriesARB;$/;"	v
pglDeleteQueriesARB	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETEQUERIESARBPROC pglDeleteQueriesARB;$/;"	v
pglDeleteRenderbuffersEXT	shared/GLee.c	/^PFNGLDELETERENDERBUFFERSEXTPROC pglDeleteRenderbuffersEXT=_Lazy_glDeleteRenderbuffersEXT;$/;"	v
pglDeleteRenderbuffersEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETERENDERBUFFERSEXTPROC pglDeleteRenderbuffersEXT;$/;"	v
pglDeleteShader	shared/GLee.c	/^PFNGLDELETESHADERPROC pglDeleteShader=_Lazy_glDeleteShader;$/;"	v
pglDeleteShader	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETESHADERPROC pglDeleteShader;$/;"	v
pglDeleteTexturesEXT	shared/GLee.c	/^PFNGLDELETETEXTURESEXTPROC pglDeleteTexturesEXT=_Lazy_glDeleteTexturesEXT;$/;"	v
pglDeleteTexturesEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETETEXTURESEXTPROC pglDeleteTexturesEXT;$/;"	v
pglDeleteVertexArraysAPPLE	shared/GLee.c	/^PFNGLDELETEVERTEXARRAYSAPPLEPROC pglDeleteVertexArraysAPPLE=_Lazy_glDeleteVertexArraysAPPLE;$/;"	v
pglDeleteVertexArraysAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETEVERTEXARRAYSAPPLEPROC pglDeleteVertexArraysAPPLE;$/;"	v
pglDeleteVertexShaderEXT	shared/GLee.c	/^PFNGLDELETEVERTEXSHADEREXTPROC pglDeleteVertexShaderEXT=_Lazy_glDeleteVertexShaderEXT;$/;"	v
pglDeleteVertexShaderEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLDELETEVERTEXSHADEREXTPROC pglDeleteVertexShaderEXT;$/;"	v
pglDepthBoundsEXT	shared/GLee.c	/^PFNGLDEPTHBOUNDSEXTPROC pglDepthBoundsEXT=_Lazy_glDepthBoundsEXT;$/;"	v
pglDepthBoundsEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLDEPTHBOUNDSEXTPROC pglDepthBoundsEXT;$/;"	v
pglDepthBoundsdNV	shared/GLee.c	/^PFNGLDEPTHBOUNDSDNVPROC pglDepthBoundsdNV=_Lazy_glDepthBoundsdNV;$/;"	v
pglDepthBoundsdNV	shared/GLee.h	/^GLEE_EXTERN PFNGLDEPTHBOUNDSDNVPROC pglDepthBoundsdNV;$/;"	v
pglDepthRangedNV	shared/GLee.c	/^PFNGLDEPTHRANGEDNVPROC pglDepthRangedNV=_Lazy_glDepthRangedNV;$/;"	v
pglDepthRangedNV	shared/GLee.h	/^GLEE_EXTERN PFNGLDEPTHRANGEDNVPROC pglDepthRangedNV;$/;"	v
pglDepthRangefOES	shared/GLee.c	/^PFNGLDEPTHRANGEFOESPROC pglDepthRangefOES=_Lazy_glDepthRangefOES;$/;"	v
pglDepthRangefOES	shared/GLee.h	/^GLEE_EXTERN PFNGLDEPTHRANGEFOESPROC pglDepthRangefOES;$/;"	v
pglDetachObjectARB	shared/GLee.c	/^PFNGLDETACHOBJECTARBPROC pglDetachObjectARB=_Lazy_glDetachObjectARB;$/;"	v
pglDetachObjectARB	shared/GLee.h	/^GLEE_EXTERN PFNGLDETACHOBJECTARBPROC pglDetachObjectARB;$/;"	v
pglDetachShader	shared/GLee.c	/^PFNGLDETACHSHADERPROC pglDetachShader=_Lazy_glDetachShader;$/;"	v
pglDetachShader	shared/GLee.h	/^GLEE_EXTERN PFNGLDETACHSHADERPROC pglDetachShader;$/;"	v
pglDetailTexFuncSGIS	shared/GLee.c	/^PFNGLDETAILTEXFUNCSGISPROC pglDetailTexFuncSGIS=_Lazy_glDetailTexFuncSGIS;$/;"	v
pglDetailTexFuncSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLDETAILTEXFUNCSGISPROC pglDetailTexFuncSGIS;$/;"	v
pglDisableIndexedEXT	shared/GLee.c	/^PFNGLDISABLEINDEXEDEXTPROC pglDisableIndexedEXT=_Lazy_glDisableIndexedEXT;$/;"	v
pglDisableIndexedEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLDISABLEINDEXEDEXTPROC pglDisableIndexedEXT;$/;"	v
pglDisableVariantClientStateEXT	shared/GLee.c	/^PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC pglDisableVariantClientStateEXT=_Lazy_glDisableVariantClientStateEXT;$/;"	v
pglDisableVariantClientStateEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC pglDisableVariantClientStateEXT;$/;"	v
pglDisableVertexAttribArray	shared/GLee.c	/^PFNGLDISABLEVERTEXATTRIBARRAYPROC pglDisableVertexAttribArray=_Lazy_glDisableVertexAttribArray;$/;"	v
pglDisableVertexAttribArray	shared/GLee.h	/^GLEE_EXTERN PFNGLDISABLEVERTEXATTRIBARRAYPROC pglDisableVertexAttribArray;$/;"	v
pglDisableVertexAttribArrayARB	shared/GLee.c	/^PFNGLDISABLEVERTEXATTRIBARRAYARBPROC pglDisableVertexAttribArrayARB=_Lazy_glDisableVertexAttribArrayARB;$/;"	v
pglDisableVertexAttribArrayARB	shared/GLee.h	/^GLEE_EXTERN PFNGLDISABLEVERTEXATTRIBARRAYARBPROC pglDisableVertexAttribArrayARB;$/;"	v
pglDrawArraysEXT	shared/GLee.c	/^PFNGLDRAWARRAYSEXTPROC pglDrawArraysEXT=_Lazy_glDrawArraysEXT;$/;"	v
pglDrawArraysEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLDRAWARRAYSEXTPROC pglDrawArraysEXT;$/;"	v
pglDrawArraysInstancedEXT	shared/GLee.c	/^PFNGLDRAWARRAYSINSTANCEDEXTPROC pglDrawArraysInstancedEXT=_Lazy_glDrawArraysInstancedEXT;$/;"	v
pglDrawArraysInstancedEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLDRAWARRAYSINSTANCEDEXTPROC pglDrawArraysInstancedEXT;$/;"	v
pglDrawBuffers	shared/GLee.c	/^PFNGLDRAWBUFFERSPROC pglDrawBuffers=_Lazy_glDrawBuffers;$/;"	v
pglDrawBuffers	shared/GLee.h	/^GLEE_EXTERN PFNGLDRAWBUFFERSPROC pglDrawBuffers;$/;"	v
pglDrawBuffersARB	shared/GLee.c	/^PFNGLDRAWBUFFERSARBPROC pglDrawBuffersARB=_Lazy_glDrawBuffersARB;$/;"	v
pglDrawBuffersARB	shared/GLee.h	/^GLEE_EXTERN PFNGLDRAWBUFFERSARBPROC pglDrawBuffersARB;$/;"	v
pglDrawBuffersATI	shared/GLee.c	/^PFNGLDRAWBUFFERSATIPROC pglDrawBuffersATI=_Lazy_glDrawBuffersATI;$/;"	v
pglDrawBuffersATI	shared/GLee.h	/^GLEE_EXTERN PFNGLDRAWBUFFERSATIPROC pglDrawBuffersATI;$/;"	v
pglDrawElementArrayAPPLE	shared/GLee.c	/^PFNGLDRAWELEMENTARRAYAPPLEPROC pglDrawElementArrayAPPLE=_Lazy_glDrawElementArrayAPPLE;$/;"	v
pglDrawElementArrayAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLDRAWELEMENTARRAYAPPLEPROC pglDrawElementArrayAPPLE;$/;"	v
pglDrawElementArrayATI	shared/GLee.c	/^PFNGLDRAWELEMENTARRAYATIPROC pglDrawElementArrayATI=_Lazy_glDrawElementArrayATI;$/;"	v
pglDrawElementArrayATI	shared/GLee.h	/^GLEE_EXTERN PFNGLDRAWELEMENTARRAYATIPROC pglDrawElementArrayATI;$/;"	v
pglDrawElementsInstancedEXT	shared/GLee.c	/^PFNGLDRAWELEMENTSINSTANCEDEXTPROC pglDrawElementsInstancedEXT=_Lazy_glDrawElementsInstancedEXT;$/;"	v
pglDrawElementsInstancedEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLDRAWELEMENTSINSTANCEDEXTPROC pglDrawElementsInstancedEXT;$/;"	v
pglDrawMeshArraysSUN	shared/GLee.c	/^PFNGLDRAWMESHARRAYSSUNPROC pglDrawMeshArraysSUN=_Lazy_glDrawMeshArraysSUN;$/;"	v
pglDrawMeshArraysSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLDRAWMESHARRAYSSUNPROC pglDrawMeshArraysSUN;$/;"	v
pglDrawRangeElementArrayAPPLE	shared/GLee.c	/^PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC pglDrawRangeElementArrayAPPLE=_Lazy_glDrawRangeElementArrayAPPLE;$/;"	v
pglDrawRangeElementArrayAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC pglDrawRangeElementArrayAPPLE;$/;"	v
pglDrawRangeElementArrayATI	shared/GLee.c	/^PFNGLDRAWRANGEELEMENTARRAYATIPROC pglDrawRangeElementArrayATI=_Lazy_glDrawRangeElementArrayATI;$/;"	v
pglDrawRangeElementArrayATI	shared/GLee.h	/^GLEE_EXTERN PFNGLDRAWRANGEELEMENTARRAYATIPROC pglDrawRangeElementArrayATI;$/;"	v
pglDrawRangeElements	shared/GLee.c	/^PFNGLDRAWRANGEELEMENTSPROC pglDrawRangeElements=_Lazy_glDrawRangeElements;$/;"	v
pglDrawRangeElements	shared/GLee.h	/^GLEE_EXTERN PFNGLDRAWRANGEELEMENTSPROC pglDrawRangeElements;$/;"	v
pglDrawRangeElementsEXT	shared/GLee.c	/^PFNGLDRAWRANGEELEMENTSEXTPROC pglDrawRangeElementsEXT=_Lazy_glDrawRangeElementsEXT;$/;"	v
pglDrawRangeElementsEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLDRAWRANGEELEMENTSEXTPROC pglDrawRangeElementsEXT;$/;"	v
pglEdgeFlagPointerEXT	shared/GLee.c	/^PFNGLEDGEFLAGPOINTEREXTPROC pglEdgeFlagPointerEXT=_Lazy_glEdgeFlagPointerEXT;$/;"	v
pglEdgeFlagPointerEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLEDGEFLAGPOINTEREXTPROC pglEdgeFlagPointerEXT;$/;"	v
pglEdgeFlagPointerListIBM	shared/GLee.c	/^PFNGLEDGEFLAGPOINTERLISTIBMPROC pglEdgeFlagPointerListIBM=_Lazy_glEdgeFlagPointerListIBM;$/;"	v
pglEdgeFlagPointerListIBM	shared/GLee.h	/^GLEE_EXTERN PFNGLEDGEFLAGPOINTERLISTIBMPROC pglEdgeFlagPointerListIBM;$/;"	v
pglElementPointerAPPLE	shared/GLee.c	/^PFNGLELEMENTPOINTERAPPLEPROC pglElementPointerAPPLE=_Lazy_glElementPointerAPPLE;$/;"	v
pglElementPointerAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLELEMENTPOINTERAPPLEPROC pglElementPointerAPPLE;$/;"	v
pglElementPointerATI	shared/GLee.c	/^PFNGLELEMENTPOINTERATIPROC pglElementPointerATI=_Lazy_glElementPointerATI;$/;"	v
pglElementPointerATI	shared/GLee.h	/^GLEE_EXTERN PFNGLELEMENTPOINTERATIPROC pglElementPointerATI;$/;"	v
pglEnableIndexedEXT	shared/GLee.c	/^PFNGLENABLEINDEXEDEXTPROC pglEnableIndexedEXT=_Lazy_glEnableIndexedEXT;$/;"	v
pglEnableIndexedEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLENABLEINDEXEDEXTPROC pglEnableIndexedEXT;$/;"	v
pglEnableVariantClientStateEXT	shared/GLee.c	/^PFNGLENABLEVARIANTCLIENTSTATEEXTPROC pglEnableVariantClientStateEXT=_Lazy_glEnableVariantClientStateEXT;$/;"	v
pglEnableVariantClientStateEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLENABLEVARIANTCLIENTSTATEEXTPROC pglEnableVariantClientStateEXT;$/;"	v
pglEnableVertexAttribArray	shared/GLee.c	/^PFNGLENABLEVERTEXATTRIBARRAYPROC pglEnableVertexAttribArray=_Lazy_glEnableVertexAttribArray;$/;"	v
pglEnableVertexAttribArray	shared/GLee.h	/^GLEE_EXTERN PFNGLENABLEVERTEXATTRIBARRAYPROC pglEnableVertexAttribArray;$/;"	v
pglEnableVertexAttribArrayARB	shared/GLee.c	/^PFNGLENABLEVERTEXATTRIBARRAYARBPROC pglEnableVertexAttribArrayARB=_Lazy_glEnableVertexAttribArrayARB;$/;"	v
pglEnableVertexAttribArrayARB	shared/GLee.h	/^GLEE_EXTERN PFNGLENABLEVERTEXATTRIBARRAYARBPROC pglEnableVertexAttribArrayARB;$/;"	v
pglEndFragmentShaderATI	shared/GLee.c	/^PFNGLENDFRAGMENTSHADERATIPROC pglEndFragmentShaderATI=_Lazy_glEndFragmentShaderATI;$/;"	v
pglEndFragmentShaderATI	shared/GLee.h	/^GLEE_EXTERN PFNGLENDFRAGMENTSHADERATIPROC pglEndFragmentShaderATI;$/;"	v
pglEndOcclusionQueryNV	shared/GLee.c	/^PFNGLENDOCCLUSIONQUERYNVPROC pglEndOcclusionQueryNV=_Lazy_glEndOcclusionQueryNV;$/;"	v
pglEndOcclusionQueryNV	shared/GLee.h	/^GLEE_EXTERN PFNGLENDOCCLUSIONQUERYNVPROC pglEndOcclusionQueryNV;$/;"	v
pglEndQuery	shared/GLee.c	/^PFNGLENDQUERYPROC pglEndQuery=_Lazy_glEndQuery;$/;"	v
pglEndQuery	shared/GLee.h	/^GLEE_EXTERN PFNGLENDQUERYPROC pglEndQuery;$/;"	v
pglEndQueryARB	shared/GLee.c	/^PFNGLENDQUERYARBPROC pglEndQueryARB=_Lazy_glEndQueryARB;$/;"	v
pglEndQueryARB	shared/GLee.h	/^GLEE_EXTERN PFNGLENDQUERYARBPROC pglEndQueryARB;$/;"	v
pglEndSceneEXT	shared/GLee.c	/^PFNGLENDSCENEEXTPROC pglEndSceneEXT=_Lazy_glEndSceneEXT;$/;"	v
pglEndSceneEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLENDSCENEEXTPROC pglEndSceneEXT;$/;"	v
pglEndTransformFeedbackNV	shared/GLee.c	/^PFNGLENDTRANSFORMFEEDBACKNVPROC pglEndTransformFeedbackNV=_Lazy_glEndTransformFeedbackNV;$/;"	v
pglEndTransformFeedbackNV	shared/GLee.h	/^GLEE_EXTERN PFNGLENDTRANSFORMFEEDBACKNVPROC pglEndTransformFeedbackNV;$/;"	v
pglEndVertexShaderEXT	shared/GLee.c	/^PFNGLENDVERTEXSHADEREXTPROC pglEndVertexShaderEXT=_Lazy_glEndVertexShaderEXT;$/;"	v
pglEndVertexShaderEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLENDVERTEXSHADEREXTPROC pglEndVertexShaderEXT;$/;"	v
pglEvalMapsNV	shared/GLee.c	/^PFNGLEVALMAPSNVPROC pglEvalMapsNV=_Lazy_glEvalMapsNV;$/;"	v
pglEvalMapsNV	shared/GLee.h	/^GLEE_EXTERN PFNGLEVALMAPSNVPROC pglEvalMapsNV;$/;"	v
pglExecuteProgramNV	shared/GLee.c	/^PFNGLEXECUTEPROGRAMNVPROC pglExecuteProgramNV=_Lazy_glExecuteProgramNV;$/;"	v
pglExecuteProgramNV	shared/GLee.h	/^GLEE_EXTERN PFNGLEXECUTEPROGRAMNVPROC pglExecuteProgramNV;$/;"	v
pglExtractComponentEXT	shared/GLee.c	/^PFNGLEXTRACTCOMPONENTEXTPROC pglExtractComponentEXT=_Lazy_glExtractComponentEXT;$/;"	v
pglExtractComponentEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLEXTRACTCOMPONENTEXTPROC pglExtractComponentEXT;$/;"	v
pglFinalCombinerInputNV	shared/GLee.c	/^PFNGLFINALCOMBINERINPUTNVPROC pglFinalCombinerInputNV=_Lazy_glFinalCombinerInputNV;$/;"	v
pglFinalCombinerInputNV	shared/GLee.h	/^GLEE_EXTERN PFNGLFINALCOMBINERINPUTNVPROC pglFinalCombinerInputNV;$/;"	v
pglFinishAsyncSGIX	shared/GLee.c	/^PFNGLFINISHASYNCSGIXPROC pglFinishAsyncSGIX=_Lazy_glFinishAsyncSGIX;$/;"	v
pglFinishAsyncSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLFINISHASYNCSGIXPROC pglFinishAsyncSGIX;$/;"	v
pglFinishFenceAPPLE	shared/GLee.c	/^PFNGLFINISHFENCEAPPLEPROC pglFinishFenceAPPLE=_Lazy_glFinishFenceAPPLE;$/;"	v
pglFinishFenceAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLFINISHFENCEAPPLEPROC pglFinishFenceAPPLE;$/;"	v
pglFinishFenceNV	shared/GLee.c	/^PFNGLFINISHFENCENVPROC pglFinishFenceNV=_Lazy_glFinishFenceNV;$/;"	v
pglFinishFenceNV	shared/GLee.h	/^GLEE_EXTERN PFNGLFINISHFENCENVPROC pglFinishFenceNV;$/;"	v
pglFinishObjectAPPLE	shared/GLee.c	/^PFNGLFINISHOBJECTAPPLEPROC pglFinishObjectAPPLE=_Lazy_glFinishObjectAPPLE;$/;"	v
pglFinishObjectAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLFINISHOBJECTAPPLEPROC pglFinishObjectAPPLE;$/;"	v
pglFinishTextureSUNX	shared/GLee.c	/^PFNGLFINISHTEXTURESUNXPROC pglFinishTextureSUNX=_Lazy_glFinishTextureSUNX;$/;"	v
pglFinishTextureSUNX	shared/GLee.h	/^GLEE_EXTERN PFNGLFINISHTEXTURESUNXPROC pglFinishTextureSUNX;$/;"	v
pglFlushPixelDataRangeNV	shared/GLee.c	/^PFNGLFLUSHPIXELDATARANGENVPROC pglFlushPixelDataRangeNV=_Lazy_glFlushPixelDataRangeNV;$/;"	v
pglFlushPixelDataRangeNV	shared/GLee.h	/^GLEE_EXTERN PFNGLFLUSHPIXELDATARANGENVPROC pglFlushPixelDataRangeNV;$/;"	v
pglFlushRasterSGIX	shared/GLee.c	/^PFNGLFLUSHRASTERSGIXPROC pglFlushRasterSGIX=_Lazy_glFlushRasterSGIX;$/;"	v
pglFlushRasterSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLFLUSHRASTERSGIXPROC pglFlushRasterSGIX;$/;"	v
pglFlushVertexArrayRangeAPPLE	shared/GLee.c	/^PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC pglFlushVertexArrayRangeAPPLE=_Lazy_glFlushVertexArrayRangeAPPLE;$/;"	v
pglFlushVertexArrayRangeAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC pglFlushVertexArrayRangeAPPLE;$/;"	v
pglFlushVertexArrayRangeNV	shared/GLee.c	/^PFNGLFLUSHVERTEXARRAYRANGENVPROC pglFlushVertexArrayRangeNV=_Lazy_glFlushVertexArrayRangeNV;$/;"	v
pglFlushVertexArrayRangeNV	shared/GLee.h	/^GLEE_EXTERN PFNGLFLUSHVERTEXARRAYRANGENVPROC pglFlushVertexArrayRangeNV;$/;"	v
pglFogCoordPointer	shared/GLee.c	/^PFNGLFOGCOORDPOINTERPROC pglFogCoordPointer=_Lazy_glFogCoordPointer;$/;"	v
pglFogCoordPointer	shared/GLee.h	/^GLEE_EXTERN PFNGLFOGCOORDPOINTERPROC pglFogCoordPointer;$/;"	v
pglFogCoordPointerEXT	shared/GLee.c	/^PFNGLFOGCOORDPOINTEREXTPROC pglFogCoordPointerEXT=_Lazy_glFogCoordPointerEXT;$/;"	v
pglFogCoordPointerEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFOGCOORDPOINTEREXTPROC pglFogCoordPointerEXT;$/;"	v
pglFogCoordPointerListIBM	shared/GLee.c	/^PFNGLFOGCOORDPOINTERLISTIBMPROC pglFogCoordPointerListIBM=_Lazy_glFogCoordPointerListIBM;$/;"	v
pglFogCoordPointerListIBM	shared/GLee.h	/^GLEE_EXTERN PFNGLFOGCOORDPOINTERLISTIBMPROC pglFogCoordPointerListIBM;$/;"	v
pglFogCoordd	shared/GLee.c	/^PFNGLFOGCOORDDPROC pglFogCoordd=_Lazy_glFogCoordd;$/;"	v
pglFogCoordd	shared/GLee.h	/^GLEE_EXTERN PFNGLFOGCOORDDPROC pglFogCoordd;$/;"	v
pglFogCoorddEXT	shared/GLee.c	/^PFNGLFOGCOORDDEXTPROC pglFogCoorddEXT=_Lazy_glFogCoorddEXT;$/;"	v
pglFogCoorddEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFOGCOORDDEXTPROC pglFogCoorddEXT;$/;"	v
pglFogCoorddv	shared/GLee.c	/^PFNGLFOGCOORDDVPROC pglFogCoorddv=_Lazy_glFogCoorddv;$/;"	v
pglFogCoorddv	shared/GLee.h	/^GLEE_EXTERN PFNGLFOGCOORDDVPROC pglFogCoorddv;$/;"	v
pglFogCoorddvEXT	shared/GLee.c	/^PFNGLFOGCOORDDVEXTPROC pglFogCoorddvEXT=_Lazy_glFogCoorddvEXT;$/;"	v
pglFogCoorddvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFOGCOORDDVEXTPROC pglFogCoorddvEXT;$/;"	v
pglFogCoordf	shared/GLee.c	/^PFNGLFOGCOORDFPROC pglFogCoordf=_Lazy_glFogCoordf;$/;"	v
pglFogCoordf	shared/GLee.h	/^GLEE_EXTERN PFNGLFOGCOORDFPROC pglFogCoordf;$/;"	v
pglFogCoordfEXT	shared/GLee.c	/^PFNGLFOGCOORDFEXTPROC pglFogCoordfEXT=_Lazy_glFogCoordfEXT;$/;"	v
pglFogCoordfEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFOGCOORDFEXTPROC pglFogCoordfEXT;$/;"	v
pglFogCoordfv	shared/GLee.c	/^PFNGLFOGCOORDFVPROC pglFogCoordfv=_Lazy_glFogCoordfv;$/;"	v
pglFogCoordfv	shared/GLee.h	/^GLEE_EXTERN PFNGLFOGCOORDFVPROC pglFogCoordfv;$/;"	v
pglFogCoordfvEXT	shared/GLee.c	/^PFNGLFOGCOORDFVEXTPROC pglFogCoordfvEXT=_Lazy_glFogCoordfvEXT;$/;"	v
pglFogCoordfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFOGCOORDFVEXTPROC pglFogCoordfvEXT;$/;"	v
pglFogCoordhNV	shared/GLee.c	/^PFNGLFOGCOORDHNVPROC pglFogCoordhNV=_Lazy_glFogCoordhNV;$/;"	v
pglFogCoordhNV	shared/GLee.h	/^GLEE_EXTERN PFNGLFOGCOORDHNVPROC pglFogCoordhNV;$/;"	v
pglFogCoordhvNV	shared/GLee.c	/^PFNGLFOGCOORDHVNVPROC pglFogCoordhvNV=_Lazy_glFogCoordhvNV;$/;"	v
pglFogCoordhvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLFOGCOORDHVNVPROC pglFogCoordhvNV;$/;"	v
pglFogFuncSGIS	shared/GLee.c	/^PFNGLFOGFUNCSGISPROC pglFogFuncSGIS=_Lazy_glFogFuncSGIS;$/;"	v
pglFogFuncSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLFOGFUNCSGISPROC pglFogFuncSGIS;$/;"	v
pglFragmentColorMaterialEXT	shared/GLee.c	/^PFNGLFRAGMENTCOLORMATERIALEXTPROC pglFragmentColorMaterialEXT=_Lazy_glFragmentColorMaterialEXT;$/;"	v
pglFragmentColorMaterialEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTCOLORMATERIALEXTPROC pglFragmentColorMaterialEXT;$/;"	v
pglFragmentColorMaterialSGIX	shared/GLee.c	/^PFNGLFRAGMENTCOLORMATERIALSGIXPROC pglFragmentColorMaterialSGIX=_Lazy_glFragmentColorMaterialSGIX;$/;"	v
pglFragmentColorMaterialSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTCOLORMATERIALSGIXPROC pglFragmentColorMaterialSGIX;$/;"	v
pglFragmentLightModelfEXT	shared/GLee.c	/^PFNGLFRAGMENTLIGHTMODELFEXTPROC pglFragmentLightModelfEXT=_Lazy_glFragmentLightModelfEXT;$/;"	v
pglFragmentLightModelfEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTLIGHTMODELFEXTPROC pglFragmentLightModelfEXT;$/;"	v
pglFragmentLightModelfSGIX	shared/GLee.c	/^PFNGLFRAGMENTLIGHTMODELFSGIXPROC pglFragmentLightModelfSGIX=_Lazy_glFragmentLightModelfSGIX;$/;"	v
pglFragmentLightModelfSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTLIGHTMODELFSGIXPROC pglFragmentLightModelfSGIX;$/;"	v
pglFragmentLightModelfvEXT	shared/GLee.c	/^PFNGLFRAGMENTLIGHTMODELFVEXTPROC pglFragmentLightModelfvEXT=_Lazy_glFragmentLightModelfvEXT;$/;"	v
pglFragmentLightModelfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTLIGHTMODELFVEXTPROC pglFragmentLightModelfvEXT;$/;"	v
pglFragmentLightModelfvSGIX	shared/GLee.c	/^PFNGLFRAGMENTLIGHTMODELFVSGIXPROC pglFragmentLightModelfvSGIX=_Lazy_glFragmentLightModelfvSGIX;$/;"	v
pglFragmentLightModelfvSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTLIGHTMODELFVSGIXPROC pglFragmentLightModelfvSGIX;$/;"	v
pglFragmentLightModeliEXT	shared/GLee.c	/^PFNGLFRAGMENTLIGHTMODELIEXTPROC pglFragmentLightModeliEXT=_Lazy_glFragmentLightModeliEXT;$/;"	v
pglFragmentLightModeliEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTLIGHTMODELIEXTPROC pglFragmentLightModeliEXT;$/;"	v
pglFragmentLightModeliSGIX	shared/GLee.c	/^PFNGLFRAGMENTLIGHTMODELISGIXPROC pglFragmentLightModeliSGIX=_Lazy_glFragmentLightModeliSGIX;$/;"	v
pglFragmentLightModeliSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTLIGHTMODELISGIXPROC pglFragmentLightModeliSGIX;$/;"	v
pglFragmentLightModelivEXT	shared/GLee.c	/^PFNGLFRAGMENTLIGHTMODELIVEXTPROC pglFragmentLightModelivEXT=_Lazy_glFragmentLightModelivEXT;$/;"	v
pglFragmentLightModelivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTLIGHTMODELIVEXTPROC pglFragmentLightModelivEXT;$/;"	v
pglFragmentLightModelivSGIX	shared/GLee.c	/^PFNGLFRAGMENTLIGHTMODELIVSGIXPROC pglFragmentLightModelivSGIX=_Lazy_glFragmentLightModelivSGIX;$/;"	v
pglFragmentLightModelivSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTLIGHTMODELIVSGIXPROC pglFragmentLightModelivSGIX;$/;"	v
pglFragmentLightfEXT	shared/GLee.c	/^PFNGLFRAGMENTLIGHTFEXTPROC pglFragmentLightfEXT=_Lazy_glFragmentLightfEXT;$/;"	v
pglFragmentLightfEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTLIGHTFEXTPROC pglFragmentLightfEXT;$/;"	v
pglFragmentLightfSGIX	shared/GLee.c	/^PFNGLFRAGMENTLIGHTFSGIXPROC pglFragmentLightfSGIX=_Lazy_glFragmentLightfSGIX;$/;"	v
pglFragmentLightfSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTLIGHTFSGIXPROC pglFragmentLightfSGIX;$/;"	v
pglFragmentLightfvEXT	shared/GLee.c	/^PFNGLFRAGMENTLIGHTFVEXTPROC pglFragmentLightfvEXT=_Lazy_glFragmentLightfvEXT;$/;"	v
pglFragmentLightfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTLIGHTFVEXTPROC pglFragmentLightfvEXT;$/;"	v
pglFragmentLightfvSGIX	shared/GLee.c	/^PFNGLFRAGMENTLIGHTFVSGIXPROC pglFragmentLightfvSGIX=_Lazy_glFragmentLightfvSGIX;$/;"	v
pglFragmentLightfvSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTLIGHTFVSGIXPROC pglFragmentLightfvSGIX;$/;"	v
pglFragmentLightiEXT	shared/GLee.c	/^PFNGLFRAGMENTLIGHTIEXTPROC pglFragmentLightiEXT=_Lazy_glFragmentLightiEXT;$/;"	v
pglFragmentLightiEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTLIGHTIEXTPROC pglFragmentLightiEXT;$/;"	v
pglFragmentLightiSGIX	shared/GLee.c	/^PFNGLFRAGMENTLIGHTISGIXPROC pglFragmentLightiSGIX=_Lazy_glFragmentLightiSGIX;$/;"	v
pglFragmentLightiSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTLIGHTISGIXPROC pglFragmentLightiSGIX;$/;"	v
pglFragmentLightivEXT	shared/GLee.c	/^PFNGLFRAGMENTLIGHTIVEXTPROC pglFragmentLightivEXT=_Lazy_glFragmentLightivEXT;$/;"	v
pglFragmentLightivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTLIGHTIVEXTPROC pglFragmentLightivEXT;$/;"	v
pglFragmentLightivSGIX	shared/GLee.c	/^PFNGLFRAGMENTLIGHTIVSGIXPROC pglFragmentLightivSGIX=_Lazy_glFragmentLightivSGIX;$/;"	v
pglFragmentLightivSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTLIGHTIVSGIXPROC pglFragmentLightivSGIX;$/;"	v
pglFragmentMaterialfEXT	shared/GLee.c	/^PFNGLFRAGMENTMATERIALFEXTPROC pglFragmentMaterialfEXT=_Lazy_glFragmentMaterialfEXT;$/;"	v
pglFragmentMaterialfEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTMATERIALFEXTPROC pglFragmentMaterialfEXT;$/;"	v
pglFragmentMaterialfSGIX	shared/GLee.c	/^PFNGLFRAGMENTMATERIALFSGIXPROC pglFragmentMaterialfSGIX=_Lazy_glFragmentMaterialfSGIX;$/;"	v
pglFragmentMaterialfSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTMATERIALFSGIXPROC pglFragmentMaterialfSGIX;$/;"	v
pglFragmentMaterialfvEXT	shared/GLee.c	/^PFNGLFRAGMENTMATERIALFVEXTPROC pglFragmentMaterialfvEXT=_Lazy_glFragmentMaterialfvEXT;$/;"	v
pglFragmentMaterialfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTMATERIALFVEXTPROC pglFragmentMaterialfvEXT;$/;"	v
pglFragmentMaterialfvSGIX	shared/GLee.c	/^PFNGLFRAGMENTMATERIALFVSGIXPROC pglFragmentMaterialfvSGIX=_Lazy_glFragmentMaterialfvSGIX;$/;"	v
pglFragmentMaterialfvSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTMATERIALFVSGIXPROC pglFragmentMaterialfvSGIX;$/;"	v
pglFragmentMaterialiEXT	shared/GLee.c	/^PFNGLFRAGMENTMATERIALIEXTPROC pglFragmentMaterialiEXT=_Lazy_glFragmentMaterialiEXT;$/;"	v
pglFragmentMaterialiEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTMATERIALIEXTPROC pglFragmentMaterialiEXT;$/;"	v
pglFragmentMaterialiSGIX	shared/GLee.c	/^PFNGLFRAGMENTMATERIALISGIXPROC pglFragmentMaterialiSGIX=_Lazy_glFragmentMaterialiSGIX;$/;"	v
pglFragmentMaterialiSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTMATERIALISGIXPROC pglFragmentMaterialiSGIX;$/;"	v
pglFragmentMaterialivEXT	shared/GLee.c	/^PFNGLFRAGMENTMATERIALIVEXTPROC pglFragmentMaterialivEXT=_Lazy_glFragmentMaterialivEXT;$/;"	v
pglFragmentMaterialivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTMATERIALIVEXTPROC pglFragmentMaterialivEXT;$/;"	v
pglFragmentMaterialivSGIX	shared/GLee.c	/^PFNGLFRAGMENTMATERIALIVSGIXPROC pglFragmentMaterialivSGIX=_Lazy_glFragmentMaterialivSGIX;$/;"	v
pglFragmentMaterialivSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAGMENTMATERIALIVSGIXPROC pglFragmentMaterialivSGIX;$/;"	v
pglFrameZoomSGIX	shared/GLee.c	/^PFNGLFRAMEZOOMSGIXPROC pglFrameZoomSGIX=_Lazy_glFrameZoomSGIX;$/;"	v
pglFrameZoomSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAMEZOOMSGIXPROC pglFrameZoomSGIX;$/;"	v
pglFramebufferRenderbufferEXT	shared/GLee.c	/^PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC pglFramebufferRenderbufferEXT=_Lazy_glFramebufferRenderbufferEXT;$/;"	v
pglFramebufferRenderbufferEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC pglFramebufferRenderbufferEXT;$/;"	v
pglFramebufferTexture1DEXT	shared/GLee.c	/^PFNGLFRAMEBUFFERTEXTURE1DEXTPROC pglFramebufferTexture1DEXT=_Lazy_glFramebufferTexture1DEXT;$/;"	v
pglFramebufferTexture1DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAMEBUFFERTEXTURE1DEXTPROC pglFramebufferTexture1DEXT;$/;"	v
pglFramebufferTexture2DEXT	shared/GLee.c	/^PFNGLFRAMEBUFFERTEXTURE2DEXTPROC pglFramebufferTexture2DEXT=_Lazy_glFramebufferTexture2DEXT;$/;"	v
pglFramebufferTexture2DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAMEBUFFERTEXTURE2DEXTPROC pglFramebufferTexture2DEXT;$/;"	v
pglFramebufferTexture3DEXT	shared/GLee.c	/^PFNGLFRAMEBUFFERTEXTURE3DEXTPROC pglFramebufferTexture3DEXT=_Lazy_glFramebufferTexture3DEXT;$/;"	v
pglFramebufferTexture3DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAMEBUFFERTEXTURE3DEXTPROC pglFramebufferTexture3DEXT;$/;"	v
pglFramebufferTextureEXT	shared/GLee.c	/^PFNGLFRAMEBUFFERTEXTUREEXTPROC pglFramebufferTextureEXT=_Lazy_glFramebufferTextureEXT;$/;"	v
pglFramebufferTextureEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAMEBUFFERTEXTUREEXTPROC pglFramebufferTextureEXT;$/;"	v
pglFramebufferTextureFaceEXT	shared/GLee.c	/^PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC pglFramebufferTextureFaceEXT=_Lazy_glFramebufferTextureFaceEXT;$/;"	v
pglFramebufferTextureFaceEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC pglFramebufferTextureFaceEXT;$/;"	v
pglFramebufferTextureLayerEXT	shared/GLee.c	/^PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC pglFramebufferTextureLayerEXT=_Lazy_glFramebufferTextureLayerEXT;$/;"	v
pglFramebufferTextureLayerEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC pglFramebufferTextureLayerEXT;$/;"	v
pglFreeObjectBufferATI	shared/GLee.c	/^PFNGLFREEOBJECTBUFFERATIPROC pglFreeObjectBufferATI=_Lazy_glFreeObjectBufferATI;$/;"	v
pglFreeObjectBufferATI	shared/GLee.h	/^GLEE_EXTERN PFNGLFREEOBJECTBUFFERATIPROC pglFreeObjectBufferATI;$/;"	v
pglFrustumfOES	shared/GLee.c	/^PFNGLFRUSTUMFOESPROC pglFrustumfOES=_Lazy_glFrustumfOES;$/;"	v
pglFrustumfOES	shared/GLee.h	/^GLEE_EXTERN PFNGLFRUSTUMFOESPROC pglFrustumfOES;$/;"	v
pglGenAsyncMarkersSGIX	shared/GLee.c	/^PFNGLGENASYNCMARKERSSGIXPROC pglGenAsyncMarkersSGIX=_Lazy_glGenAsyncMarkersSGIX;$/;"	v
pglGenAsyncMarkersSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLGENASYNCMARKERSSGIXPROC pglGenAsyncMarkersSGIX;$/;"	v
pglGenBuffers	shared/GLee.c	/^PFNGLGENBUFFERSPROC pglGenBuffers=_Lazy_glGenBuffers;$/;"	v
pglGenBuffers	shared/GLee.h	/^GLEE_EXTERN PFNGLGENBUFFERSPROC pglGenBuffers;$/;"	v
pglGenBuffersARB	shared/GLee.c	/^PFNGLGENBUFFERSARBPROC pglGenBuffersARB=_Lazy_glGenBuffersARB;$/;"	v
pglGenBuffersARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGENBUFFERSARBPROC pglGenBuffersARB;$/;"	v
pglGenFencesAPPLE	shared/GLee.c	/^PFNGLGENFENCESAPPLEPROC pglGenFencesAPPLE=_Lazy_glGenFencesAPPLE;$/;"	v
pglGenFencesAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLGENFENCESAPPLEPROC pglGenFencesAPPLE;$/;"	v
pglGenFencesNV	shared/GLee.c	/^PFNGLGENFENCESNVPROC pglGenFencesNV=_Lazy_glGenFencesNV;$/;"	v
pglGenFencesNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGENFENCESNVPROC pglGenFencesNV;$/;"	v
pglGenFragmentShadersATI	shared/GLee.c	/^PFNGLGENFRAGMENTSHADERSATIPROC pglGenFragmentShadersATI=_Lazy_glGenFragmentShadersATI;$/;"	v
pglGenFragmentShadersATI	shared/GLee.h	/^GLEE_EXTERN PFNGLGENFRAGMENTSHADERSATIPROC pglGenFragmentShadersATI;$/;"	v
pglGenFramebuffersEXT	shared/GLee.c	/^PFNGLGENFRAMEBUFFERSEXTPROC pglGenFramebuffersEXT=_Lazy_glGenFramebuffersEXT;$/;"	v
pglGenFramebuffersEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGENFRAMEBUFFERSEXTPROC pglGenFramebuffersEXT;$/;"	v
pglGenOcclusionQueriesNV	shared/GLee.c	/^PFNGLGENOCCLUSIONQUERIESNVPROC pglGenOcclusionQueriesNV=_Lazy_glGenOcclusionQueriesNV;$/;"	v
pglGenOcclusionQueriesNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGENOCCLUSIONQUERIESNVPROC pglGenOcclusionQueriesNV;$/;"	v
pglGenProgramsARB	shared/GLee.c	/^PFNGLGENPROGRAMSARBPROC pglGenProgramsARB=_Lazy_glGenProgramsARB;$/;"	v
pglGenProgramsARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGENPROGRAMSARBPROC pglGenProgramsARB;$/;"	v
pglGenProgramsNV	shared/GLee.c	/^PFNGLGENPROGRAMSNVPROC pglGenProgramsNV=_Lazy_glGenProgramsNV;$/;"	v
pglGenProgramsNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGENPROGRAMSNVPROC pglGenProgramsNV;$/;"	v
pglGenQueries	shared/GLee.c	/^PFNGLGENQUERIESPROC pglGenQueries=_Lazy_glGenQueries;$/;"	v
pglGenQueries	shared/GLee.h	/^GLEE_EXTERN PFNGLGENQUERIESPROC pglGenQueries;$/;"	v
pglGenQueriesARB	shared/GLee.c	/^PFNGLGENQUERIESARBPROC pglGenQueriesARB=_Lazy_glGenQueriesARB;$/;"	v
pglGenQueriesARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGENQUERIESARBPROC pglGenQueriesARB;$/;"	v
pglGenRenderbuffersEXT	shared/GLee.c	/^PFNGLGENRENDERBUFFERSEXTPROC pglGenRenderbuffersEXT=_Lazy_glGenRenderbuffersEXT;$/;"	v
pglGenRenderbuffersEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGENRENDERBUFFERSEXTPROC pglGenRenderbuffersEXT;$/;"	v
pglGenSymbolsEXT	shared/GLee.c	/^PFNGLGENSYMBOLSEXTPROC pglGenSymbolsEXT=_Lazy_glGenSymbolsEXT;$/;"	v
pglGenSymbolsEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGENSYMBOLSEXTPROC pglGenSymbolsEXT;$/;"	v
pglGenTexturesEXT	shared/GLee.c	/^PFNGLGENTEXTURESEXTPROC pglGenTexturesEXT=_Lazy_glGenTexturesEXT;$/;"	v
pglGenTexturesEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGENTEXTURESEXTPROC pglGenTexturesEXT;$/;"	v
pglGenVertexArraysAPPLE	shared/GLee.c	/^PFNGLGENVERTEXARRAYSAPPLEPROC pglGenVertexArraysAPPLE=_Lazy_glGenVertexArraysAPPLE;$/;"	v
pglGenVertexArraysAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLGENVERTEXARRAYSAPPLEPROC pglGenVertexArraysAPPLE;$/;"	v
pglGenVertexShadersEXT	shared/GLee.c	/^PFNGLGENVERTEXSHADERSEXTPROC pglGenVertexShadersEXT=_Lazy_glGenVertexShadersEXT;$/;"	v
pglGenVertexShadersEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGENVERTEXSHADERSEXTPROC pglGenVertexShadersEXT;$/;"	v
pglGenerateMipmapEXT	shared/GLee.c	/^PFNGLGENERATEMIPMAPEXTPROC pglGenerateMipmapEXT=_Lazy_glGenerateMipmapEXT;$/;"	v
pglGenerateMipmapEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGENERATEMIPMAPEXTPROC pglGenerateMipmapEXT;$/;"	v
pglGetActiveAttrib	shared/GLee.c	/^PFNGLGETACTIVEATTRIBPROC pglGetActiveAttrib=_Lazy_glGetActiveAttrib;$/;"	v
pglGetActiveAttrib	shared/GLee.h	/^GLEE_EXTERN PFNGLGETACTIVEATTRIBPROC pglGetActiveAttrib;$/;"	v
pglGetActiveAttribARB	shared/GLee.c	/^PFNGLGETACTIVEATTRIBARBPROC pglGetActiveAttribARB=_Lazy_glGetActiveAttribARB;$/;"	v
pglGetActiveAttribARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETACTIVEATTRIBARBPROC pglGetActiveAttribARB;$/;"	v
pglGetActiveUniform	shared/GLee.c	/^PFNGLGETACTIVEUNIFORMPROC pglGetActiveUniform=_Lazy_glGetActiveUniform;$/;"	v
pglGetActiveUniform	shared/GLee.h	/^GLEE_EXTERN PFNGLGETACTIVEUNIFORMPROC pglGetActiveUniform;$/;"	v
pglGetActiveUniformARB	shared/GLee.c	/^PFNGLGETACTIVEUNIFORMARBPROC pglGetActiveUniformARB=_Lazy_glGetActiveUniformARB;$/;"	v
pglGetActiveUniformARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETACTIVEUNIFORMARBPROC pglGetActiveUniformARB;$/;"	v
pglGetActiveVaryingNV	shared/GLee.c	/^PFNGLGETACTIVEVARYINGNVPROC pglGetActiveVaryingNV=_Lazy_glGetActiveVaryingNV;$/;"	v
pglGetActiveVaryingNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETACTIVEVARYINGNVPROC pglGetActiveVaryingNV;$/;"	v
pglGetArrayObjectfvATI	shared/GLee.c	/^PFNGLGETARRAYOBJECTFVATIPROC pglGetArrayObjectfvATI=_Lazy_glGetArrayObjectfvATI;$/;"	v
pglGetArrayObjectfvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLGETARRAYOBJECTFVATIPROC pglGetArrayObjectfvATI;$/;"	v
pglGetArrayObjectivATI	shared/GLee.c	/^PFNGLGETARRAYOBJECTIVATIPROC pglGetArrayObjectivATI=_Lazy_glGetArrayObjectivATI;$/;"	v
pglGetArrayObjectivATI	shared/GLee.h	/^GLEE_EXTERN PFNGLGETARRAYOBJECTIVATIPROC pglGetArrayObjectivATI;$/;"	v
pglGetAttachedObjectsARB	shared/GLee.c	/^PFNGLGETATTACHEDOBJECTSARBPROC pglGetAttachedObjectsARB=_Lazy_glGetAttachedObjectsARB;$/;"	v
pglGetAttachedObjectsARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETATTACHEDOBJECTSARBPROC pglGetAttachedObjectsARB;$/;"	v
pglGetAttachedShaders	shared/GLee.c	/^PFNGLGETATTACHEDSHADERSPROC pglGetAttachedShaders=_Lazy_glGetAttachedShaders;$/;"	v
pglGetAttachedShaders	shared/GLee.h	/^GLEE_EXTERN PFNGLGETATTACHEDSHADERSPROC pglGetAttachedShaders;$/;"	v
pglGetAttribLocation	shared/GLee.c	/^PFNGLGETATTRIBLOCATIONPROC pglGetAttribLocation=_Lazy_glGetAttribLocation;$/;"	v
pglGetAttribLocation	shared/GLee.h	/^GLEE_EXTERN PFNGLGETATTRIBLOCATIONPROC pglGetAttribLocation;$/;"	v
pglGetAttribLocationARB	shared/GLee.c	/^PFNGLGETATTRIBLOCATIONARBPROC pglGetAttribLocationARB=_Lazy_glGetAttribLocationARB;$/;"	v
pglGetAttribLocationARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETATTRIBLOCATIONARBPROC pglGetAttribLocationARB;$/;"	v
pglGetBooleanIndexedvEXT	shared/GLee.c	/^PFNGLGETBOOLEANINDEXEDVEXTPROC pglGetBooleanIndexedvEXT=_Lazy_glGetBooleanIndexedvEXT;$/;"	v
pglGetBooleanIndexedvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETBOOLEANINDEXEDVEXTPROC pglGetBooleanIndexedvEXT;$/;"	v
pglGetBufferParameteriv	shared/GLee.c	/^PFNGLGETBUFFERPARAMETERIVPROC pglGetBufferParameteriv=_Lazy_glGetBufferParameteriv;$/;"	v
pglGetBufferParameteriv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETBUFFERPARAMETERIVPROC pglGetBufferParameteriv;$/;"	v
pglGetBufferParameterivARB	shared/GLee.c	/^PFNGLGETBUFFERPARAMETERIVARBPROC pglGetBufferParameterivARB=_Lazy_glGetBufferParameterivARB;$/;"	v
pglGetBufferParameterivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETBUFFERPARAMETERIVARBPROC pglGetBufferParameterivARB;$/;"	v
pglGetBufferPointerv	shared/GLee.c	/^PFNGLGETBUFFERPOINTERVPROC pglGetBufferPointerv=_Lazy_glGetBufferPointerv;$/;"	v
pglGetBufferPointerv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETBUFFERPOINTERVPROC pglGetBufferPointerv;$/;"	v
pglGetBufferPointervARB	shared/GLee.c	/^PFNGLGETBUFFERPOINTERVARBPROC pglGetBufferPointervARB=_Lazy_glGetBufferPointervARB;$/;"	v
pglGetBufferPointervARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETBUFFERPOINTERVARBPROC pglGetBufferPointervARB;$/;"	v
pglGetBufferSubData	shared/GLee.c	/^PFNGLGETBUFFERSUBDATAPROC pglGetBufferSubData=_Lazy_glGetBufferSubData;$/;"	v
pglGetBufferSubData	shared/GLee.h	/^GLEE_EXTERN PFNGLGETBUFFERSUBDATAPROC pglGetBufferSubData;$/;"	v
pglGetBufferSubDataARB	shared/GLee.c	/^PFNGLGETBUFFERSUBDATAARBPROC pglGetBufferSubDataARB=_Lazy_glGetBufferSubDataARB;$/;"	v
pglGetBufferSubDataARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETBUFFERSUBDATAARBPROC pglGetBufferSubDataARB;$/;"	v
pglGetClipPlanefOES	shared/GLee.c	/^PFNGLGETCLIPPLANEFOESPROC pglGetClipPlanefOES=_Lazy_glGetClipPlanefOES;$/;"	v
pglGetClipPlanefOES	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCLIPPLANEFOESPROC pglGetClipPlanefOES;$/;"	v
pglGetColorTable	shared/GLee.c	/^PFNGLGETCOLORTABLEPROC pglGetColorTable=_Lazy_glGetColorTable;$/;"	v
pglGetColorTable	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCOLORTABLEPROC pglGetColorTable;$/;"	v
pglGetColorTableEXT	shared/GLee.c	/^PFNGLGETCOLORTABLEEXTPROC pglGetColorTableEXT=_Lazy_glGetColorTableEXT;$/;"	v
pglGetColorTableEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCOLORTABLEEXTPROC pglGetColorTableEXT;$/;"	v
pglGetColorTableParameterfv	shared/GLee.c	/^PFNGLGETCOLORTABLEPARAMETERFVPROC pglGetColorTableParameterfv=_Lazy_glGetColorTableParameterfv;$/;"	v
pglGetColorTableParameterfv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCOLORTABLEPARAMETERFVPROC pglGetColorTableParameterfv;$/;"	v
pglGetColorTableParameterfvEXT	shared/GLee.c	/^PFNGLGETCOLORTABLEPARAMETERFVEXTPROC pglGetColorTableParameterfvEXT=_Lazy_glGetColorTableParameterfvEXT;$/;"	v
pglGetColorTableParameterfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCOLORTABLEPARAMETERFVEXTPROC pglGetColorTableParameterfvEXT;$/;"	v
pglGetColorTableParameterfvSGI	shared/GLee.c	/^PFNGLGETCOLORTABLEPARAMETERFVSGIPROC pglGetColorTableParameterfvSGI=_Lazy_glGetColorTableParameterfvSGI;$/;"	v
pglGetColorTableParameterfvSGI	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCOLORTABLEPARAMETERFVSGIPROC pglGetColorTableParameterfvSGI;$/;"	v
pglGetColorTableParameteriv	shared/GLee.c	/^PFNGLGETCOLORTABLEPARAMETERIVPROC pglGetColorTableParameteriv=_Lazy_glGetColorTableParameteriv;$/;"	v
pglGetColorTableParameteriv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCOLORTABLEPARAMETERIVPROC pglGetColorTableParameteriv;$/;"	v
pglGetColorTableParameterivEXT	shared/GLee.c	/^PFNGLGETCOLORTABLEPARAMETERIVEXTPROC pglGetColorTableParameterivEXT=_Lazy_glGetColorTableParameterivEXT;$/;"	v
pglGetColorTableParameterivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCOLORTABLEPARAMETERIVEXTPROC pglGetColorTableParameterivEXT;$/;"	v
pglGetColorTableParameterivSGI	shared/GLee.c	/^PFNGLGETCOLORTABLEPARAMETERIVSGIPROC pglGetColorTableParameterivSGI=_Lazy_glGetColorTableParameterivSGI;$/;"	v
pglGetColorTableParameterivSGI	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCOLORTABLEPARAMETERIVSGIPROC pglGetColorTableParameterivSGI;$/;"	v
pglGetColorTableSGI	shared/GLee.c	/^PFNGLGETCOLORTABLESGIPROC pglGetColorTableSGI=_Lazy_glGetColorTableSGI;$/;"	v
pglGetColorTableSGI	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCOLORTABLESGIPROC pglGetColorTableSGI;$/;"	v
pglGetCombinerInputParameterfvNV	shared/GLee.c	/^PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC pglGetCombinerInputParameterfvNV=_Lazy_glGetCombinerInputParameterfvNV;$/;"	v
pglGetCombinerInputParameterfvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC pglGetCombinerInputParameterfvNV;$/;"	v
pglGetCombinerInputParameterivNV	shared/GLee.c	/^PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC pglGetCombinerInputParameterivNV=_Lazy_glGetCombinerInputParameterivNV;$/;"	v
pglGetCombinerInputParameterivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC pglGetCombinerInputParameterivNV;$/;"	v
pglGetCombinerOutputParameterfvNV	shared/GLee.c	/^PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC pglGetCombinerOutputParameterfvNV=_Lazy_glGetCombinerOutputParameterfvNV;$/;"	v
pglGetCombinerOutputParameterfvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC pglGetCombinerOutputParameterfvNV;$/;"	v
pglGetCombinerOutputParameterivNV	shared/GLee.c	/^PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC pglGetCombinerOutputParameterivNV=_Lazy_glGetCombinerOutputParameterivNV;$/;"	v
pglGetCombinerOutputParameterivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC pglGetCombinerOutputParameterivNV;$/;"	v
pglGetCombinerStageParameterfvNV	shared/GLee.c	/^PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC pglGetCombinerStageParameterfvNV=_Lazy_glGetCombinerStageParameterfvNV;$/;"	v
pglGetCombinerStageParameterfvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC pglGetCombinerStageParameterfvNV;$/;"	v
pglGetCompressedTexImage	shared/GLee.c	/^PFNGLGETCOMPRESSEDTEXIMAGEPROC pglGetCompressedTexImage=_Lazy_glGetCompressedTexImage;$/;"	v
pglGetCompressedTexImage	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCOMPRESSEDTEXIMAGEPROC pglGetCompressedTexImage;$/;"	v
pglGetCompressedTexImageARB	shared/GLee.c	/^PFNGLGETCOMPRESSEDTEXIMAGEARBPROC pglGetCompressedTexImageARB=_Lazy_glGetCompressedTexImageARB;$/;"	v
pglGetCompressedTexImageARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCOMPRESSEDTEXIMAGEARBPROC pglGetCompressedTexImageARB;$/;"	v
pglGetConvolutionFilter	shared/GLee.c	/^PFNGLGETCONVOLUTIONFILTERPROC pglGetConvolutionFilter=_Lazy_glGetConvolutionFilter;$/;"	v
pglGetConvolutionFilter	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCONVOLUTIONFILTERPROC pglGetConvolutionFilter;$/;"	v
pglGetConvolutionFilterEXT	shared/GLee.c	/^PFNGLGETCONVOLUTIONFILTEREXTPROC pglGetConvolutionFilterEXT=_Lazy_glGetConvolutionFilterEXT;$/;"	v
pglGetConvolutionFilterEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCONVOLUTIONFILTEREXTPROC pglGetConvolutionFilterEXT;$/;"	v
pglGetConvolutionParameterfv	shared/GLee.c	/^PFNGLGETCONVOLUTIONPARAMETERFVPROC pglGetConvolutionParameterfv=_Lazy_glGetConvolutionParameterfv;$/;"	v
pglGetConvolutionParameterfv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCONVOLUTIONPARAMETERFVPROC pglGetConvolutionParameterfv;$/;"	v
pglGetConvolutionParameterfvEXT	shared/GLee.c	/^PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC pglGetConvolutionParameterfvEXT=_Lazy_glGetConvolutionParameterfvEXT;$/;"	v
pglGetConvolutionParameterfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC pglGetConvolutionParameterfvEXT;$/;"	v
pglGetConvolutionParameteriv	shared/GLee.c	/^PFNGLGETCONVOLUTIONPARAMETERIVPROC pglGetConvolutionParameteriv=_Lazy_glGetConvolutionParameteriv;$/;"	v
pglGetConvolutionParameteriv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCONVOLUTIONPARAMETERIVPROC pglGetConvolutionParameteriv;$/;"	v
pglGetConvolutionParameterivEXT	shared/GLee.c	/^PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC pglGetConvolutionParameterivEXT=_Lazy_glGetConvolutionParameterivEXT;$/;"	v
pglGetConvolutionParameterivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC pglGetConvolutionParameterivEXT;$/;"	v
pglGetDetailTexFuncSGIS	shared/GLee.c	/^PFNGLGETDETAILTEXFUNCSGISPROC pglGetDetailTexFuncSGIS=_Lazy_glGetDetailTexFuncSGIS;$/;"	v
pglGetDetailTexFuncSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLGETDETAILTEXFUNCSGISPROC pglGetDetailTexFuncSGIS;$/;"	v
pglGetFenceivNV	shared/GLee.c	/^PFNGLGETFENCEIVNVPROC pglGetFenceivNV=_Lazy_glGetFenceivNV;$/;"	v
pglGetFenceivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETFENCEIVNVPROC pglGetFenceivNV;$/;"	v
pglGetFinalCombinerInputParameterfvNV	shared/GLee.c	/^PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC pglGetFinalCombinerInputParameterfvNV=_Lazy_glGetFinalCombinerInputParameterfvNV;$/;"	v
pglGetFinalCombinerInputParameterfvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC pglGetFinalCombinerInputParameterfvNV;$/;"	v
pglGetFinalCombinerInputParameterivNV	shared/GLee.c	/^PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC pglGetFinalCombinerInputParameterivNV=_Lazy_glGetFinalCombinerInputParameterivNV;$/;"	v
pglGetFinalCombinerInputParameterivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC pglGetFinalCombinerInputParameterivNV;$/;"	v
pglGetFogFuncSGIS	shared/GLee.c	/^PFNGLGETFOGFUNCSGISPROC pglGetFogFuncSGIS=_Lazy_glGetFogFuncSGIS;$/;"	v
pglGetFogFuncSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLGETFOGFUNCSGISPROC pglGetFogFuncSGIS;$/;"	v
pglGetFragDataLocationEXT	shared/GLee.c	/^PFNGLGETFRAGDATALOCATIONEXTPROC pglGetFragDataLocationEXT=_Lazy_glGetFragDataLocationEXT;$/;"	v
pglGetFragDataLocationEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETFRAGDATALOCATIONEXTPROC pglGetFragDataLocationEXT;$/;"	v
pglGetFragmentLightfvEXT	shared/GLee.c	/^PFNGLGETFRAGMENTLIGHTFVEXTPROC pglGetFragmentLightfvEXT=_Lazy_glGetFragmentLightfvEXT;$/;"	v
pglGetFragmentLightfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETFRAGMENTLIGHTFVEXTPROC pglGetFragmentLightfvEXT;$/;"	v
pglGetFragmentLightfvSGIX	shared/GLee.c	/^PFNGLGETFRAGMENTLIGHTFVSGIXPROC pglGetFragmentLightfvSGIX=_Lazy_glGetFragmentLightfvSGIX;$/;"	v
pglGetFragmentLightfvSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLGETFRAGMENTLIGHTFVSGIXPROC pglGetFragmentLightfvSGIX;$/;"	v
pglGetFragmentLightivEXT	shared/GLee.c	/^PFNGLGETFRAGMENTLIGHTIVEXTPROC pglGetFragmentLightivEXT=_Lazy_glGetFragmentLightivEXT;$/;"	v
pglGetFragmentLightivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETFRAGMENTLIGHTIVEXTPROC pglGetFragmentLightivEXT;$/;"	v
pglGetFragmentLightivSGIX	shared/GLee.c	/^PFNGLGETFRAGMENTLIGHTIVSGIXPROC pglGetFragmentLightivSGIX=_Lazy_glGetFragmentLightivSGIX;$/;"	v
pglGetFragmentLightivSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLGETFRAGMENTLIGHTIVSGIXPROC pglGetFragmentLightivSGIX;$/;"	v
pglGetFragmentMaterialfvEXT	shared/GLee.c	/^PFNGLGETFRAGMENTMATERIALFVEXTPROC pglGetFragmentMaterialfvEXT=_Lazy_glGetFragmentMaterialfvEXT;$/;"	v
pglGetFragmentMaterialfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETFRAGMENTMATERIALFVEXTPROC pglGetFragmentMaterialfvEXT;$/;"	v
pglGetFragmentMaterialfvSGIX	shared/GLee.c	/^PFNGLGETFRAGMENTMATERIALFVSGIXPROC pglGetFragmentMaterialfvSGIX=_Lazy_glGetFragmentMaterialfvSGIX;$/;"	v
pglGetFragmentMaterialfvSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLGETFRAGMENTMATERIALFVSGIXPROC pglGetFragmentMaterialfvSGIX;$/;"	v
pglGetFragmentMaterialivEXT	shared/GLee.c	/^PFNGLGETFRAGMENTMATERIALIVEXTPROC pglGetFragmentMaterialivEXT=_Lazy_glGetFragmentMaterialivEXT;$/;"	v
pglGetFragmentMaterialivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETFRAGMENTMATERIALIVEXTPROC pglGetFragmentMaterialivEXT;$/;"	v
pglGetFragmentMaterialivSGIX	shared/GLee.c	/^PFNGLGETFRAGMENTMATERIALIVSGIXPROC pglGetFragmentMaterialivSGIX=_Lazy_glGetFragmentMaterialivSGIX;$/;"	v
pglGetFragmentMaterialivSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLGETFRAGMENTMATERIALIVSGIXPROC pglGetFragmentMaterialivSGIX;$/;"	v
pglGetFramebufferAttachmentParameterivEXT	shared/GLee.c	/^PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC pglGetFramebufferAttachmentParameterivEXT=_Lazy_glGetFramebufferAttachmentParameterivEXT;$/;"	v
pglGetFramebufferAttachmentParameterivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC pglGetFramebufferAttachmentParameterivEXT;$/;"	v
pglGetHandleARB	shared/GLee.c	/^PFNGLGETHANDLEARBPROC pglGetHandleARB=_Lazy_glGetHandleARB;$/;"	v
pglGetHandleARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETHANDLEARBPROC pglGetHandleARB;$/;"	v
pglGetHistogram	shared/GLee.c	/^PFNGLGETHISTOGRAMPROC pglGetHistogram=_Lazy_glGetHistogram;$/;"	v
pglGetHistogram	shared/GLee.h	/^GLEE_EXTERN PFNGLGETHISTOGRAMPROC pglGetHistogram;$/;"	v
pglGetHistogramEXT	shared/GLee.c	/^PFNGLGETHISTOGRAMEXTPROC pglGetHistogramEXT=_Lazy_glGetHistogramEXT;$/;"	v
pglGetHistogramEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETHISTOGRAMEXTPROC pglGetHistogramEXT;$/;"	v
pglGetHistogramParameterfv	shared/GLee.c	/^PFNGLGETHISTOGRAMPARAMETERFVPROC pglGetHistogramParameterfv=_Lazy_glGetHistogramParameterfv;$/;"	v
pglGetHistogramParameterfv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETHISTOGRAMPARAMETERFVPROC pglGetHistogramParameterfv;$/;"	v
pglGetHistogramParameterfvEXT	shared/GLee.c	/^PFNGLGETHISTOGRAMPARAMETERFVEXTPROC pglGetHistogramParameterfvEXT=_Lazy_glGetHistogramParameterfvEXT;$/;"	v
pglGetHistogramParameterfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETHISTOGRAMPARAMETERFVEXTPROC pglGetHistogramParameterfvEXT;$/;"	v
pglGetHistogramParameteriv	shared/GLee.c	/^PFNGLGETHISTOGRAMPARAMETERIVPROC pglGetHistogramParameteriv=_Lazy_glGetHistogramParameteriv;$/;"	v
pglGetHistogramParameteriv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETHISTOGRAMPARAMETERIVPROC pglGetHistogramParameteriv;$/;"	v
pglGetHistogramParameterivEXT	shared/GLee.c	/^PFNGLGETHISTOGRAMPARAMETERIVEXTPROC pglGetHistogramParameterivEXT=_Lazy_glGetHistogramParameterivEXT;$/;"	v
pglGetHistogramParameterivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETHISTOGRAMPARAMETERIVEXTPROC pglGetHistogramParameterivEXT;$/;"	v
pglGetImageTransformParameterfvHP	shared/GLee.c	/^PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC pglGetImageTransformParameterfvHP=_Lazy_glGetImageTransformParameterfvHP;$/;"	v
pglGetImageTransformParameterfvHP	shared/GLee.h	/^GLEE_EXTERN PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC pglGetImageTransformParameterfvHP;$/;"	v
pglGetImageTransformParameterivHP	shared/GLee.c	/^PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC pglGetImageTransformParameterivHP=_Lazy_glGetImageTransformParameterivHP;$/;"	v
pglGetImageTransformParameterivHP	shared/GLee.h	/^GLEE_EXTERN PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC pglGetImageTransformParameterivHP;$/;"	v
pglGetInfoLogARB	shared/GLee.c	/^PFNGLGETINFOLOGARBPROC pglGetInfoLogARB=_Lazy_glGetInfoLogARB;$/;"	v
pglGetInfoLogARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETINFOLOGARBPROC pglGetInfoLogARB;$/;"	v
pglGetInstrumentsSGIX	shared/GLee.c	/^PFNGLGETINSTRUMENTSSGIXPROC pglGetInstrumentsSGIX=_Lazy_glGetInstrumentsSGIX;$/;"	v
pglGetInstrumentsSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLGETINSTRUMENTSSGIXPROC pglGetInstrumentsSGIX;$/;"	v
pglGetIntegerIndexedvEXT	shared/GLee.c	/^PFNGLGETINTEGERINDEXEDVEXTPROC pglGetIntegerIndexedvEXT=_Lazy_glGetIntegerIndexedvEXT;$/;"	v
pglGetIntegerIndexedvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETINTEGERINDEXEDVEXTPROC pglGetIntegerIndexedvEXT;$/;"	v
pglGetInvariantBooleanvEXT	shared/GLee.c	/^PFNGLGETINVARIANTBOOLEANVEXTPROC pglGetInvariantBooleanvEXT=_Lazy_glGetInvariantBooleanvEXT;$/;"	v
pglGetInvariantBooleanvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETINVARIANTBOOLEANVEXTPROC pglGetInvariantBooleanvEXT;$/;"	v
pglGetInvariantFloatvEXT	shared/GLee.c	/^PFNGLGETINVARIANTFLOATVEXTPROC pglGetInvariantFloatvEXT=_Lazy_glGetInvariantFloatvEXT;$/;"	v
pglGetInvariantFloatvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETINVARIANTFLOATVEXTPROC pglGetInvariantFloatvEXT;$/;"	v
pglGetInvariantIntegervEXT	shared/GLee.c	/^PFNGLGETINVARIANTINTEGERVEXTPROC pglGetInvariantIntegervEXT=_Lazy_glGetInvariantIntegervEXT;$/;"	v
pglGetInvariantIntegervEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETINVARIANTINTEGERVEXTPROC pglGetInvariantIntegervEXT;$/;"	v
pglGetListParameterfvSGIX	shared/GLee.c	/^PFNGLGETLISTPARAMETERFVSGIXPROC pglGetListParameterfvSGIX=_Lazy_glGetListParameterfvSGIX;$/;"	v
pglGetListParameterfvSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLGETLISTPARAMETERFVSGIXPROC pglGetListParameterfvSGIX;$/;"	v
pglGetListParameterivSGIX	shared/GLee.c	/^PFNGLGETLISTPARAMETERIVSGIXPROC pglGetListParameterivSGIX=_Lazy_glGetListParameterivSGIX;$/;"	v
pglGetListParameterivSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLGETLISTPARAMETERIVSGIXPROC pglGetListParameterivSGIX;$/;"	v
pglGetLocalConstantBooleanvEXT	shared/GLee.c	/^PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC pglGetLocalConstantBooleanvEXT=_Lazy_glGetLocalConstantBooleanvEXT;$/;"	v
pglGetLocalConstantBooleanvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC pglGetLocalConstantBooleanvEXT;$/;"	v
pglGetLocalConstantFloatvEXT	shared/GLee.c	/^PFNGLGETLOCALCONSTANTFLOATVEXTPROC pglGetLocalConstantFloatvEXT=_Lazy_glGetLocalConstantFloatvEXT;$/;"	v
pglGetLocalConstantFloatvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETLOCALCONSTANTFLOATVEXTPROC pglGetLocalConstantFloatvEXT;$/;"	v
pglGetLocalConstantIntegervEXT	shared/GLee.c	/^PFNGLGETLOCALCONSTANTINTEGERVEXTPROC pglGetLocalConstantIntegervEXT=_Lazy_glGetLocalConstantIntegervEXT;$/;"	v
pglGetLocalConstantIntegervEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETLOCALCONSTANTINTEGERVEXTPROC pglGetLocalConstantIntegervEXT;$/;"	v
pglGetMapAttribParameterfvNV	shared/GLee.c	/^PFNGLGETMAPATTRIBPARAMETERFVNVPROC pglGetMapAttribParameterfvNV=_Lazy_glGetMapAttribParameterfvNV;$/;"	v
pglGetMapAttribParameterfvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETMAPATTRIBPARAMETERFVNVPROC pglGetMapAttribParameterfvNV;$/;"	v
pglGetMapAttribParameterivNV	shared/GLee.c	/^PFNGLGETMAPATTRIBPARAMETERIVNVPROC pglGetMapAttribParameterivNV=_Lazy_glGetMapAttribParameterivNV;$/;"	v
pglGetMapAttribParameterivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETMAPATTRIBPARAMETERIVNVPROC pglGetMapAttribParameterivNV;$/;"	v
pglGetMapControlPointsNV	shared/GLee.c	/^PFNGLGETMAPCONTROLPOINTSNVPROC pglGetMapControlPointsNV=_Lazy_glGetMapControlPointsNV;$/;"	v
pglGetMapControlPointsNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETMAPCONTROLPOINTSNVPROC pglGetMapControlPointsNV;$/;"	v
pglGetMapParameterfvNV	shared/GLee.c	/^PFNGLGETMAPPARAMETERFVNVPROC pglGetMapParameterfvNV=_Lazy_glGetMapParameterfvNV;$/;"	v
pglGetMapParameterfvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETMAPPARAMETERFVNVPROC pglGetMapParameterfvNV;$/;"	v
pglGetMapParameterivNV	shared/GLee.c	/^PFNGLGETMAPPARAMETERIVNVPROC pglGetMapParameterivNV=_Lazy_glGetMapParameterivNV;$/;"	v
pglGetMapParameterivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETMAPPARAMETERIVNVPROC pglGetMapParameterivNV;$/;"	v
pglGetMinmax	shared/GLee.c	/^PFNGLGETMINMAXPROC pglGetMinmax=_Lazy_glGetMinmax;$/;"	v
pglGetMinmax	shared/GLee.h	/^GLEE_EXTERN PFNGLGETMINMAXPROC pglGetMinmax;$/;"	v
pglGetMinmaxEXT	shared/GLee.c	/^PFNGLGETMINMAXEXTPROC pglGetMinmaxEXT=_Lazy_glGetMinmaxEXT;$/;"	v
pglGetMinmaxEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETMINMAXEXTPROC pglGetMinmaxEXT;$/;"	v
pglGetMinmaxParameterfv	shared/GLee.c	/^PFNGLGETMINMAXPARAMETERFVPROC pglGetMinmaxParameterfv=_Lazy_glGetMinmaxParameterfv;$/;"	v
pglGetMinmaxParameterfv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETMINMAXPARAMETERFVPROC pglGetMinmaxParameterfv;$/;"	v
pglGetMinmaxParameterfvEXT	shared/GLee.c	/^PFNGLGETMINMAXPARAMETERFVEXTPROC pglGetMinmaxParameterfvEXT=_Lazy_glGetMinmaxParameterfvEXT;$/;"	v
pglGetMinmaxParameterfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETMINMAXPARAMETERFVEXTPROC pglGetMinmaxParameterfvEXT;$/;"	v
pglGetMinmaxParameteriv	shared/GLee.c	/^PFNGLGETMINMAXPARAMETERIVPROC pglGetMinmaxParameteriv=_Lazy_glGetMinmaxParameteriv;$/;"	v
pglGetMinmaxParameteriv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETMINMAXPARAMETERIVPROC pglGetMinmaxParameteriv;$/;"	v
pglGetMinmaxParameterivEXT	shared/GLee.c	/^PFNGLGETMINMAXPARAMETERIVEXTPROC pglGetMinmaxParameterivEXT=_Lazy_glGetMinmaxParameterivEXT;$/;"	v
pglGetMinmaxParameterivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETMINMAXPARAMETERIVEXTPROC pglGetMinmaxParameterivEXT;$/;"	v
pglGetObjectBufferfvATI	shared/GLee.c	/^PFNGLGETOBJECTBUFFERFVATIPROC pglGetObjectBufferfvATI=_Lazy_glGetObjectBufferfvATI;$/;"	v
pglGetObjectBufferfvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLGETOBJECTBUFFERFVATIPROC pglGetObjectBufferfvATI;$/;"	v
pglGetObjectBufferivATI	shared/GLee.c	/^PFNGLGETOBJECTBUFFERIVATIPROC pglGetObjectBufferivATI=_Lazy_glGetObjectBufferivATI;$/;"	v
pglGetObjectBufferivATI	shared/GLee.h	/^GLEE_EXTERN PFNGLGETOBJECTBUFFERIVATIPROC pglGetObjectBufferivATI;$/;"	v
pglGetObjectParameterfvARB	shared/GLee.c	/^PFNGLGETOBJECTPARAMETERFVARBPROC pglGetObjectParameterfvARB=_Lazy_glGetObjectParameterfvARB;$/;"	v
pglGetObjectParameterfvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETOBJECTPARAMETERFVARBPROC pglGetObjectParameterfvARB;$/;"	v
pglGetObjectParameterivARB	shared/GLee.c	/^PFNGLGETOBJECTPARAMETERIVARBPROC pglGetObjectParameterivARB=_Lazy_glGetObjectParameterivARB;$/;"	v
pglGetObjectParameterivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETOBJECTPARAMETERIVARBPROC pglGetObjectParameterivARB;$/;"	v
pglGetOcclusionQueryivNV	shared/GLee.c	/^PFNGLGETOCCLUSIONQUERYIVNVPROC pglGetOcclusionQueryivNV=_Lazy_glGetOcclusionQueryivNV;$/;"	v
pglGetOcclusionQueryivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETOCCLUSIONQUERYIVNVPROC pglGetOcclusionQueryivNV;$/;"	v
pglGetOcclusionQueryuivNV	shared/GLee.c	/^PFNGLGETOCCLUSIONQUERYUIVNVPROC pglGetOcclusionQueryuivNV=_Lazy_glGetOcclusionQueryuivNV;$/;"	v
pglGetOcclusionQueryuivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETOCCLUSIONQUERYUIVNVPROC pglGetOcclusionQueryuivNV;$/;"	v
pglGetPixelTexGenParameterfvSGIS	shared/GLee.c	/^PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC pglGetPixelTexGenParameterfvSGIS=_Lazy_glGetPixelTexGenParameterfvSGIS;$/;"	v
pglGetPixelTexGenParameterfvSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC pglGetPixelTexGenParameterfvSGIS;$/;"	v
pglGetPixelTexGenParameterivSGIS	shared/GLee.c	/^PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC pglGetPixelTexGenParameterivSGIS=_Lazy_glGetPixelTexGenParameterivSGIS;$/;"	v
pglGetPixelTexGenParameterivSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC pglGetPixelTexGenParameterivSGIS;$/;"	v
pglGetPointervEXT	shared/GLee.c	/^PFNGLGETPOINTERVEXTPROC pglGetPointervEXT=_Lazy_glGetPointervEXT;$/;"	v
pglGetPointervEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPOINTERVEXTPROC pglGetPointervEXT;$/;"	v
pglGetProgramEnvParameterIivNV	shared/GLee.c	/^PFNGLGETPROGRAMENVPARAMETERIIVNVPROC pglGetProgramEnvParameterIivNV=_Lazy_glGetProgramEnvParameterIivNV;$/;"	v
pglGetProgramEnvParameterIivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMENVPARAMETERIIVNVPROC pglGetProgramEnvParameterIivNV;$/;"	v
pglGetProgramEnvParameterIuivNV	shared/GLee.c	/^PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC pglGetProgramEnvParameterIuivNV=_Lazy_glGetProgramEnvParameterIuivNV;$/;"	v
pglGetProgramEnvParameterIuivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC pglGetProgramEnvParameterIuivNV;$/;"	v
pglGetProgramEnvParameterdvARB	shared/GLee.c	/^PFNGLGETPROGRAMENVPARAMETERDVARBPROC pglGetProgramEnvParameterdvARB=_Lazy_glGetProgramEnvParameterdvARB;$/;"	v
pglGetProgramEnvParameterdvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMENVPARAMETERDVARBPROC pglGetProgramEnvParameterdvARB;$/;"	v
pglGetProgramEnvParameterfvARB	shared/GLee.c	/^PFNGLGETPROGRAMENVPARAMETERFVARBPROC pglGetProgramEnvParameterfvARB=_Lazy_glGetProgramEnvParameterfvARB;$/;"	v
pglGetProgramEnvParameterfvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMENVPARAMETERFVARBPROC pglGetProgramEnvParameterfvARB;$/;"	v
pglGetProgramInfoLog	shared/GLee.c	/^PFNGLGETPROGRAMINFOLOGPROC pglGetProgramInfoLog=_Lazy_glGetProgramInfoLog;$/;"	v
pglGetProgramInfoLog	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMINFOLOGPROC pglGetProgramInfoLog;$/;"	v
pglGetProgramLocalParameterIivNV	shared/GLee.c	/^PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC pglGetProgramLocalParameterIivNV=_Lazy_glGetProgramLocalParameterIivNV;$/;"	v
pglGetProgramLocalParameterIivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC pglGetProgramLocalParameterIivNV;$/;"	v
pglGetProgramLocalParameterIuivNV	shared/GLee.c	/^PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC pglGetProgramLocalParameterIuivNV=_Lazy_glGetProgramLocalParameterIuivNV;$/;"	v
pglGetProgramLocalParameterIuivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC pglGetProgramLocalParameterIuivNV;$/;"	v
pglGetProgramLocalParameterdvARB	shared/GLee.c	/^PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC pglGetProgramLocalParameterdvARB=_Lazy_glGetProgramLocalParameterdvARB;$/;"	v
pglGetProgramLocalParameterdvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC pglGetProgramLocalParameterdvARB;$/;"	v
pglGetProgramLocalParameterfvARB	shared/GLee.c	/^PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC pglGetProgramLocalParameterfvARB=_Lazy_glGetProgramLocalParameterfvARB;$/;"	v
pglGetProgramLocalParameterfvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC pglGetProgramLocalParameterfvARB;$/;"	v
pglGetProgramNamedParameterdvNV	shared/GLee.c	/^PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC pglGetProgramNamedParameterdvNV=_Lazy_glGetProgramNamedParameterdvNV;$/;"	v
pglGetProgramNamedParameterdvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC pglGetProgramNamedParameterdvNV;$/;"	v
pglGetProgramNamedParameterfvNV	shared/GLee.c	/^PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC pglGetProgramNamedParameterfvNV=_Lazy_glGetProgramNamedParameterfvNV;$/;"	v
pglGetProgramNamedParameterfvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC pglGetProgramNamedParameterfvNV;$/;"	v
pglGetProgramParameterdvNV	shared/GLee.c	/^PFNGLGETPROGRAMPARAMETERDVNVPROC pglGetProgramParameterdvNV=_Lazy_glGetProgramParameterdvNV;$/;"	v
pglGetProgramParameterdvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMPARAMETERDVNVPROC pglGetProgramParameterdvNV;$/;"	v
pglGetProgramParameterfvNV	shared/GLee.c	/^PFNGLGETPROGRAMPARAMETERFVNVPROC pglGetProgramParameterfvNV=_Lazy_glGetProgramParameterfvNV;$/;"	v
pglGetProgramParameterfvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMPARAMETERFVNVPROC pglGetProgramParameterfvNV;$/;"	v
pglGetProgramStringARB	shared/GLee.c	/^PFNGLGETPROGRAMSTRINGARBPROC pglGetProgramStringARB=_Lazy_glGetProgramStringARB;$/;"	v
pglGetProgramStringARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMSTRINGARBPROC pglGetProgramStringARB;$/;"	v
pglGetProgramStringNV	shared/GLee.c	/^PFNGLGETPROGRAMSTRINGNVPROC pglGetProgramStringNV=_Lazy_glGetProgramStringNV;$/;"	v
pglGetProgramStringNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMSTRINGNVPROC pglGetProgramStringNV;$/;"	v
pglGetProgramiv	shared/GLee.c	/^PFNGLGETPROGRAMIVPROC pglGetProgramiv=_Lazy_glGetProgramiv;$/;"	v
pglGetProgramiv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMIVPROC pglGetProgramiv;$/;"	v
pglGetProgramivARB	shared/GLee.c	/^PFNGLGETPROGRAMIVARBPROC pglGetProgramivARB=_Lazy_glGetProgramivARB;$/;"	v
pglGetProgramivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMIVARBPROC pglGetProgramivARB;$/;"	v
pglGetProgramivNV	shared/GLee.c	/^PFNGLGETPROGRAMIVNVPROC pglGetProgramivNV=_Lazy_glGetProgramivNV;$/;"	v
pglGetProgramivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETPROGRAMIVNVPROC pglGetProgramivNV;$/;"	v
pglGetQueryObjecti64vEXT	shared/GLee.c	/^PFNGLGETQUERYOBJECTI64VEXTPROC pglGetQueryObjecti64vEXT=_Lazy_glGetQueryObjecti64vEXT;$/;"	v
pglGetQueryObjecti64vEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETQUERYOBJECTI64VEXTPROC pglGetQueryObjecti64vEXT;$/;"	v
pglGetQueryObjectiv	shared/GLee.c	/^PFNGLGETQUERYOBJECTIVPROC pglGetQueryObjectiv=_Lazy_glGetQueryObjectiv;$/;"	v
pglGetQueryObjectiv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETQUERYOBJECTIVPROC pglGetQueryObjectiv;$/;"	v
pglGetQueryObjectivARB	shared/GLee.c	/^PFNGLGETQUERYOBJECTIVARBPROC pglGetQueryObjectivARB=_Lazy_glGetQueryObjectivARB;$/;"	v
pglGetQueryObjectivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETQUERYOBJECTIVARBPROC pglGetQueryObjectivARB;$/;"	v
pglGetQueryObjectui64vEXT	shared/GLee.c	/^PFNGLGETQUERYOBJECTUI64VEXTPROC pglGetQueryObjectui64vEXT=_Lazy_glGetQueryObjectui64vEXT;$/;"	v
pglGetQueryObjectui64vEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETQUERYOBJECTUI64VEXTPROC pglGetQueryObjectui64vEXT;$/;"	v
pglGetQueryObjectuiv	shared/GLee.c	/^PFNGLGETQUERYOBJECTUIVPROC pglGetQueryObjectuiv=_Lazy_glGetQueryObjectuiv;$/;"	v
pglGetQueryObjectuiv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETQUERYOBJECTUIVPROC pglGetQueryObjectuiv;$/;"	v
pglGetQueryObjectuivARB	shared/GLee.c	/^PFNGLGETQUERYOBJECTUIVARBPROC pglGetQueryObjectuivARB=_Lazy_glGetQueryObjectuivARB;$/;"	v
pglGetQueryObjectuivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETQUERYOBJECTUIVARBPROC pglGetQueryObjectuivARB;$/;"	v
pglGetQueryiv	shared/GLee.c	/^PFNGLGETQUERYIVPROC pglGetQueryiv=_Lazy_glGetQueryiv;$/;"	v
pglGetQueryiv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETQUERYIVPROC pglGetQueryiv;$/;"	v
pglGetQueryivARB	shared/GLee.c	/^PFNGLGETQUERYIVARBPROC pglGetQueryivARB=_Lazy_glGetQueryivARB;$/;"	v
pglGetQueryivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETQUERYIVARBPROC pglGetQueryivARB;$/;"	v
pglGetRenderbufferParameterivEXT	shared/GLee.c	/^PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC pglGetRenderbufferParameterivEXT=_Lazy_glGetRenderbufferParameterivEXT;$/;"	v
pglGetRenderbufferParameterivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC pglGetRenderbufferParameterivEXT;$/;"	v
pglGetSeparableFilter	shared/GLee.c	/^PFNGLGETSEPARABLEFILTERPROC pglGetSeparableFilter=_Lazy_glGetSeparableFilter;$/;"	v
pglGetSeparableFilter	shared/GLee.h	/^GLEE_EXTERN PFNGLGETSEPARABLEFILTERPROC pglGetSeparableFilter;$/;"	v
pglGetSeparableFilterEXT	shared/GLee.c	/^PFNGLGETSEPARABLEFILTEREXTPROC pglGetSeparableFilterEXT=_Lazy_glGetSeparableFilterEXT;$/;"	v
pglGetSeparableFilterEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETSEPARABLEFILTEREXTPROC pglGetSeparableFilterEXT;$/;"	v
pglGetShaderInfoLog	shared/GLee.c	/^PFNGLGETSHADERINFOLOGPROC pglGetShaderInfoLog=_Lazy_glGetShaderInfoLog;$/;"	v
pglGetShaderInfoLog	shared/GLee.h	/^GLEE_EXTERN PFNGLGETSHADERINFOLOGPROC pglGetShaderInfoLog;$/;"	v
pglGetShaderSource	shared/GLee.c	/^PFNGLGETSHADERSOURCEPROC pglGetShaderSource=_Lazy_glGetShaderSource;$/;"	v
pglGetShaderSource	shared/GLee.h	/^GLEE_EXTERN PFNGLGETSHADERSOURCEPROC pglGetShaderSource;$/;"	v
pglGetShaderSourceARB	shared/GLee.c	/^PFNGLGETSHADERSOURCEARBPROC pglGetShaderSourceARB=_Lazy_glGetShaderSourceARB;$/;"	v
pglGetShaderSourceARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETSHADERSOURCEARBPROC pglGetShaderSourceARB;$/;"	v
pglGetShaderiv	shared/GLee.c	/^PFNGLGETSHADERIVPROC pglGetShaderiv=_Lazy_glGetShaderiv;$/;"	v
pglGetShaderiv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETSHADERIVPROC pglGetShaderiv;$/;"	v
pglGetSharpenTexFuncSGIS	shared/GLee.c	/^PFNGLGETSHARPENTEXFUNCSGISPROC pglGetSharpenTexFuncSGIS=_Lazy_glGetSharpenTexFuncSGIS;$/;"	v
pglGetSharpenTexFuncSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLGETSHARPENTEXFUNCSGISPROC pglGetSharpenTexFuncSGIS;$/;"	v
pglGetTexBumpParameterfvATI	shared/GLee.c	/^PFNGLGETTEXBUMPPARAMETERFVATIPROC pglGetTexBumpParameterfvATI=_Lazy_glGetTexBumpParameterfvATI;$/;"	v
pglGetTexBumpParameterfvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLGETTEXBUMPPARAMETERFVATIPROC pglGetTexBumpParameterfvATI;$/;"	v
pglGetTexBumpParameterivATI	shared/GLee.c	/^PFNGLGETTEXBUMPPARAMETERIVATIPROC pglGetTexBumpParameterivATI=_Lazy_glGetTexBumpParameterivATI;$/;"	v
pglGetTexBumpParameterivATI	shared/GLee.h	/^GLEE_EXTERN PFNGLGETTEXBUMPPARAMETERIVATIPROC pglGetTexBumpParameterivATI;$/;"	v
pglGetTexFilterFuncSGIS	shared/GLee.c	/^PFNGLGETTEXFILTERFUNCSGISPROC pglGetTexFilterFuncSGIS=_Lazy_glGetTexFilterFuncSGIS;$/;"	v
pglGetTexFilterFuncSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLGETTEXFILTERFUNCSGISPROC pglGetTexFilterFuncSGIS;$/;"	v
pglGetTexParameterIivEXT	shared/GLee.c	/^PFNGLGETTEXPARAMETERIIVEXTPROC pglGetTexParameterIivEXT=_Lazy_glGetTexParameterIivEXT;$/;"	v
pglGetTexParameterIivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETTEXPARAMETERIIVEXTPROC pglGetTexParameterIivEXT;$/;"	v
pglGetTexParameterIuivEXT	shared/GLee.c	/^PFNGLGETTEXPARAMETERIUIVEXTPROC pglGetTexParameterIuivEXT=_Lazy_glGetTexParameterIuivEXT;$/;"	v
pglGetTexParameterIuivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETTEXPARAMETERIUIVEXTPROC pglGetTexParameterIuivEXT;$/;"	v
pglGetTrackMatrixivNV	shared/GLee.c	/^PFNGLGETTRACKMATRIXIVNVPROC pglGetTrackMatrixivNV=_Lazy_glGetTrackMatrixivNV;$/;"	v
pglGetTrackMatrixivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETTRACKMATRIXIVNVPROC pglGetTrackMatrixivNV;$/;"	v
pglGetTransformFeedbackVaryingNV	shared/GLee.c	/^PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC pglGetTransformFeedbackVaryingNV=_Lazy_glGetTransformFeedbackVaryingNV;$/;"	v
pglGetTransformFeedbackVaryingNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC pglGetTransformFeedbackVaryingNV;$/;"	v
pglGetUniformBufferSizeEXT	shared/GLee.c	/^PFNGLGETUNIFORMBUFFERSIZEEXTPROC pglGetUniformBufferSizeEXT=_Lazy_glGetUniformBufferSizeEXT;$/;"	v
pglGetUniformBufferSizeEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETUNIFORMBUFFERSIZEEXTPROC pglGetUniformBufferSizeEXT;$/;"	v
pglGetUniformLocation	shared/GLee.c	/^PFNGLGETUNIFORMLOCATIONPROC pglGetUniformLocation=_Lazy_glGetUniformLocation;$/;"	v
pglGetUniformLocation	shared/GLee.h	/^GLEE_EXTERN PFNGLGETUNIFORMLOCATIONPROC pglGetUniformLocation;$/;"	v
pglGetUniformLocationARB	shared/GLee.c	/^PFNGLGETUNIFORMLOCATIONARBPROC pglGetUniformLocationARB=_Lazy_glGetUniformLocationARB;$/;"	v
pglGetUniformLocationARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETUNIFORMLOCATIONARBPROC pglGetUniformLocationARB;$/;"	v
pglGetUniformOffsetEXT	shared/GLee.c	/^PFNGLGETUNIFORMOFFSETEXTPROC pglGetUniformOffsetEXT=_Lazy_glGetUniformOffsetEXT;$/;"	v
pglGetUniformOffsetEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETUNIFORMOFFSETEXTPROC pglGetUniformOffsetEXT;$/;"	v
pglGetUniformfv	shared/GLee.c	/^PFNGLGETUNIFORMFVPROC pglGetUniformfv=_Lazy_glGetUniformfv;$/;"	v
pglGetUniformfv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETUNIFORMFVPROC pglGetUniformfv;$/;"	v
pglGetUniformfvARB	shared/GLee.c	/^PFNGLGETUNIFORMFVARBPROC pglGetUniformfvARB=_Lazy_glGetUniformfvARB;$/;"	v
pglGetUniformfvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETUNIFORMFVARBPROC pglGetUniformfvARB;$/;"	v
pglGetUniformiv	shared/GLee.c	/^PFNGLGETUNIFORMIVPROC pglGetUniformiv=_Lazy_glGetUniformiv;$/;"	v
pglGetUniformiv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETUNIFORMIVPROC pglGetUniformiv;$/;"	v
pglGetUniformivARB	shared/GLee.c	/^PFNGLGETUNIFORMIVARBPROC pglGetUniformivARB=_Lazy_glGetUniformivARB;$/;"	v
pglGetUniformivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETUNIFORMIVARBPROC pglGetUniformivARB;$/;"	v
pglGetUniformuivEXT	shared/GLee.c	/^PFNGLGETUNIFORMUIVEXTPROC pglGetUniformuivEXT=_Lazy_glGetUniformuivEXT;$/;"	v
pglGetUniformuivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETUNIFORMUIVEXTPROC pglGetUniformuivEXT;$/;"	v
pglGetVariantArrayObjectfvATI	shared/GLee.c	/^PFNGLGETVARIANTARRAYOBJECTFVATIPROC pglGetVariantArrayObjectfvATI=_Lazy_glGetVariantArrayObjectfvATI;$/;"	v
pglGetVariantArrayObjectfvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVARIANTARRAYOBJECTFVATIPROC pglGetVariantArrayObjectfvATI;$/;"	v
pglGetVariantArrayObjectivATI	shared/GLee.c	/^PFNGLGETVARIANTARRAYOBJECTIVATIPROC pglGetVariantArrayObjectivATI=_Lazy_glGetVariantArrayObjectivATI;$/;"	v
pglGetVariantArrayObjectivATI	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVARIANTARRAYOBJECTIVATIPROC pglGetVariantArrayObjectivATI;$/;"	v
pglGetVariantBooleanvEXT	shared/GLee.c	/^PFNGLGETVARIANTBOOLEANVEXTPROC pglGetVariantBooleanvEXT=_Lazy_glGetVariantBooleanvEXT;$/;"	v
pglGetVariantBooleanvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVARIANTBOOLEANVEXTPROC pglGetVariantBooleanvEXT;$/;"	v
pglGetVariantFloatvEXT	shared/GLee.c	/^PFNGLGETVARIANTFLOATVEXTPROC pglGetVariantFloatvEXT=_Lazy_glGetVariantFloatvEXT;$/;"	v
pglGetVariantFloatvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVARIANTFLOATVEXTPROC pglGetVariantFloatvEXT;$/;"	v
pglGetVariantIntegervEXT	shared/GLee.c	/^PFNGLGETVARIANTINTEGERVEXTPROC pglGetVariantIntegervEXT=_Lazy_glGetVariantIntegervEXT;$/;"	v
pglGetVariantIntegervEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVARIANTINTEGERVEXTPROC pglGetVariantIntegervEXT;$/;"	v
pglGetVariantPointervEXT	shared/GLee.c	/^PFNGLGETVARIANTPOINTERVEXTPROC pglGetVariantPointervEXT=_Lazy_glGetVariantPointervEXT;$/;"	v
pglGetVariantPointervEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVARIANTPOINTERVEXTPROC pglGetVariantPointervEXT;$/;"	v
pglGetVaryingLocationNV	shared/GLee.c	/^PFNGLGETVARYINGLOCATIONNVPROC pglGetVaryingLocationNV=_Lazy_glGetVaryingLocationNV;$/;"	v
pglGetVaryingLocationNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVARYINGLOCATIONNVPROC pglGetVaryingLocationNV;$/;"	v
pglGetVertexAttribArrayObjectfvATI	shared/GLee.c	/^PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC pglGetVertexAttribArrayObjectfvATI=_Lazy_glGetVertexAttribArrayObjectfvATI;$/;"	v
pglGetVertexAttribArrayObjectfvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC pglGetVertexAttribArrayObjectfvATI;$/;"	v
pglGetVertexAttribArrayObjectivATI	shared/GLee.c	/^PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC pglGetVertexAttribArrayObjectivATI=_Lazy_glGetVertexAttribArrayObjectivATI;$/;"	v
pglGetVertexAttribArrayObjectivATI	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC pglGetVertexAttribArrayObjectivATI;$/;"	v
pglGetVertexAttribIivEXT	shared/GLee.c	/^PFNGLGETVERTEXATTRIBIIVEXTPROC pglGetVertexAttribIivEXT=_Lazy_glGetVertexAttribIivEXT;$/;"	v
pglGetVertexAttribIivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVERTEXATTRIBIIVEXTPROC pglGetVertexAttribIivEXT;$/;"	v
pglGetVertexAttribIuivEXT	shared/GLee.c	/^PFNGLGETVERTEXATTRIBIUIVEXTPROC pglGetVertexAttribIuivEXT=_Lazy_glGetVertexAttribIuivEXT;$/;"	v
pglGetVertexAttribIuivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVERTEXATTRIBIUIVEXTPROC pglGetVertexAttribIuivEXT;$/;"	v
pglGetVertexAttribPointerv	shared/GLee.c	/^PFNGLGETVERTEXATTRIBPOINTERVPROC pglGetVertexAttribPointerv=_Lazy_glGetVertexAttribPointerv;$/;"	v
pglGetVertexAttribPointerv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVERTEXATTRIBPOINTERVPROC pglGetVertexAttribPointerv;$/;"	v
pglGetVertexAttribPointervARB	shared/GLee.c	/^PFNGLGETVERTEXATTRIBPOINTERVARBPROC pglGetVertexAttribPointervARB=_Lazy_glGetVertexAttribPointervARB;$/;"	v
pglGetVertexAttribPointervARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVERTEXATTRIBPOINTERVARBPROC pglGetVertexAttribPointervARB;$/;"	v
pglGetVertexAttribPointervNV	shared/GLee.c	/^PFNGLGETVERTEXATTRIBPOINTERVNVPROC pglGetVertexAttribPointervNV=_Lazy_glGetVertexAttribPointervNV;$/;"	v
pglGetVertexAttribPointervNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVERTEXATTRIBPOINTERVNVPROC pglGetVertexAttribPointervNV;$/;"	v
pglGetVertexAttribdv	shared/GLee.c	/^PFNGLGETVERTEXATTRIBDVPROC pglGetVertexAttribdv=_Lazy_glGetVertexAttribdv;$/;"	v
pglGetVertexAttribdv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVERTEXATTRIBDVPROC pglGetVertexAttribdv;$/;"	v
pglGetVertexAttribdvARB	shared/GLee.c	/^PFNGLGETVERTEXATTRIBDVARBPROC pglGetVertexAttribdvARB=_Lazy_glGetVertexAttribdvARB;$/;"	v
pglGetVertexAttribdvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVERTEXATTRIBDVARBPROC pglGetVertexAttribdvARB;$/;"	v
pglGetVertexAttribdvNV	shared/GLee.c	/^PFNGLGETVERTEXATTRIBDVNVPROC pglGetVertexAttribdvNV=_Lazy_glGetVertexAttribdvNV;$/;"	v
pglGetVertexAttribdvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVERTEXATTRIBDVNVPROC pglGetVertexAttribdvNV;$/;"	v
pglGetVertexAttribfv	shared/GLee.c	/^PFNGLGETVERTEXATTRIBFVPROC pglGetVertexAttribfv=_Lazy_glGetVertexAttribfv;$/;"	v
pglGetVertexAttribfv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVERTEXATTRIBFVPROC pglGetVertexAttribfv;$/;"	v
pglGetVertexAttribfvARB	shared/GLee.c	/^PFNGLGETVERTEXATTRIBFVARBPROC pglGetVertexAttribfvARB=_Lazy_glGetVertexAttribfvARB;$/;"	v
pglGetVertexAttribfvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVERTEXATTRIBFVARBPROC pglGetVertexAttribfvARB;$/;"	v
pglGetVertexAttribfvNV	shared/GLee.c	/^PFNGLGETVERTEXATTRIBFVNVPROC pglGetVertexAttribfvNV=_Lazy_glGetVertexAttribfvNV;$/;"	v
pglGetVertexAttribfvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVERTEXATTRIBFVNVPROC pglGetVertexAttribfvNV;$/;"	v
pglGetVertexAttribiv	shared/GLee.c	/^PFNGLGETVERTEXATTRIBIVPROC pglGetVertexAttribiv=_Lazy_glGetVertexAttribiv;$/;"	v
pglGetVertexAttribiv	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVERTEXATTRIBIVPROC pglGetVertexAttribiv;$/;"	v
pglGetVertexAttribivARB	shared/GLee.c	/^PFNGLGETVERTEXATTRIBIVARBPROC pglGetVertexAttribivARB=_Lazy_glGetVertexAttribivARB;$/;"	v
pglGetVertexAttribivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVERTEXATTRIBIVARBPROC pglGetVertexAttribivARB;$/;"	v
pglGetVertexAttribivNV	shared/GLee.c	/^PFNGLGETVERTEXATTRIBIVNVPROC pglGetVertexAttribivNV=_Lazy_glGetVertexAttribivNV;$/;"	v
pglGetVertexAttribivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLGETVERTEXATTRIBIVNVPROC pglGetVertexAttribivNV;$/;"	v
pglGlobalAlphaFactorbSUN	shared/GLee.c	/^PFNGLGLOBALALPHAFACTORBSUNPROC pglGlobalAlphaFactorbSUN=_Lazy_glGlobalAlphaFactorbSUN;$/;"	v
pglGlobalAlphaFactorbSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLGLOBALALPHAFACTORBSUNPROC pglGlobalAlphaFactorbSUN;$/;"	v
pglGlobalAlphaFactordSUN	shared/GLee.c	/^PFNGLGLOBALALPHAFACTORDSUNPROC pglGlobalAlphaFactordSUN=_Lazy_glGlobalAlphaFactordSUN;$/;"	v
pglGlobalAlphaFactordSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLGLOBALALPHAFACTORDSUNPROC pglGlobalAlphaFactordSUN;$/;"	v
pglGlobalAlphaFactorfSUN	shared/GLee.c	/^PFNGLGLOBALALPHAFACTORFSUNPROC pglGlobalAlphaFactorfSUN=_Lazy_glGlobalAlphaFactorfSUN;$/;"	v
pglGlobalAlphaFactorfSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLGLOBALALPHAFACTORFSUNPROC pglGlobalAlphaFactorfSUN;$/;"	v
pglGlobalAlphaFactoriSUN	shared/GLee.c	/^PFNGLGLOBALALPHAFACTORISUNPROC pglGlobalAlphaFactoriSUN=_Lazy_glGlobalAlphaFactoriSUN;$/;"	v
pglGlobalAlphaFactoriSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLGLOBALALPHAFACTORISUNPROC pglGlobalAlphaFactoriSUN;$/;"	v
pglGlobalAlphaFactorsSUN	shared/GLee.c	/^PFNGLGLOBALALPHAFACTORSSUNPROC pglGlobalAlphaFactorsSUN=_Lazy_glGlobalAlphaFactorsSUN;$/;"	v
pglGlobalAlphaFactorsSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLGLOBALALPHAFACTORSSUNPROC pglGlobalAlphaFactorsSUN;$/;"	v
pglGlobalAlphaFactorubSUN	shared/GLee.c	/^PFNGLGLOBALALPHAFACTORUBSUNPROC pglGlobalAlphaFactorubSUN=_Lazy_glGlobalAlphaFactorubSUN;$/;"	v
pglGlobalAlphaFactorubSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLGLOBALALPHAFACTORUBSUNPROC pglGlobalAlphaFactorubSUN;$/;"	v
pglGlobalAlphaFactoruiSUN	shared/GLee.c	/^PFNGLGLOBALALPHAFACTORUISUNPROC pglGlobalAlphaFactoruiSUN=_Lazy_glGlobalAlphaFactoruiSUN;$/;"	v
pglGlobalAlphaFactoruiSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLGLOBALALPHAFACTORUISUNPROC pglGlobalAlphaFactoruiSUN;$/;"	v
pglGlobalAlphaFactorusSUN	shared/GLee.c	/^PFNGLGLOBALALPHAFACTORUSSUNPROC pglGlobalAlphaFactorusSUN=_Lazy_glGlobalAlphaFactorusSUN;$/;"	v
pglGlobalAlphaFactorusSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLGLOBALALPHAFACTORUSSUNPROC pglGlobalAlphaFactorusSUN;$/;"	v
pglHintPGI	shared/GLee.c	/^PFNGLHINTPGIPROC pglHintPGI=_Lazy_glHintPGI;$/;"	v
pglHintPGI	shared/GLee.h	/^GLEE_EXTERN PFNGLHINTPGIPROC pglHintPGI;$/;"	v
pglHistogram	shared/GLee.c	/^PFNGLHISTOGRAMPROC pglHistogram=_Lazy_glHistogram;$/;"	v
pglHistogram	shared/GLee.h	/^GLEE_EXTERN PFNGLHISTOGRAMPROC pglHistogram;$/;"	v
pglHistogramEXT	shared/GLee.c	/^PFNGLHISTOGRAMEXTPROC pglHistogramEXT=_Lazy_glHistogramEXT;$/;"	v
pglHistogramEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLHISTOGRAMEXTPROC pglHistogramEXT;$/;"	v
pglIglooInterfaceSGIX	shared/GLee.c	/^PFNGLIGLOOINTERFACESGIXPROC pglIglooInterfaceSGIX=_Lazy_glIglooInterfaceSGIX;$/;"	v
pglIglooInterfaceSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLIGLOOINTERFACESGIXPROC pglIglooInterfaceSGIX;$/;"	v
pglImageTransformParameterfHP	shared/GLee.c	/^PFNGLIMAGETRANSFORMPARAMETERFHPPROC pglImageTransformParameterfHP=_Lazy_glImageTransformParameterfHP;$/;"	v
pglImageTransformParameterfHP	shared/GLee.h	/^GLEE_EXTERN PFNGLIMAGETRANSFORMPARAMETERFHPPROC pglImageTransformParameterfHP;$/;"	v
pglImageTransformParameterfvHP	shared/GLee.c	/^PFNGLIMAGETRANSFORMPARAMETERFVHPPROC pglImageTransformParameterfvHP=_Lazy_glImageTransformParameterfvHP;$/;"	v
pglImageTransformParameterfvHP	shared/GLee.h	/^GLEE_EXTERN PFNGLIMAGETRANSFORMPARAMETERFVHPPROC pglImageTransformParameterfvHP;$/;"	v
pglImageTransformParameteriHP	shared/GLee.c	/^PFNGLIMAGETRANSFORMPARAMETERIHPPROC pglImageTransformParameteriHP=_Lazy_glImageTransformParameteriHP;$/;"	v
pglImageTransformParameteriHP	shared/GLee.h	/^GLEE_EXTERN PFNGLIMAGETRANSFORMPARAMETERIHPPROC pglImageTransformParameteriHP;$/;"	v
pglImageTransformParameterivHP	shared/GLee.c	/^PFNGLIMAGETRANSFORMPARAMETERIVHPPROC pglImageTransformParameterivHP=_Lazy_glImageTransformParameterivHP;$/;"	v
pglImageTransformParameterivHP	shared/GLee.h	/^GLEE_EXTERN PFNGLIMAGETRANSFORMPARAMETERIVHPPROC pglImageTransformParameterivHP;$/;"	v
pglIndexFuncEXT	shared/GLee.c	/^PFNGLINDEXFUNCEXTPROC pglIndexFuncEXT=_Lazy_glIndexFuncEXT;$/;"	v
pglIndexFuncEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLINDEXFUNCEXTPROC pglIndexFuncEXT;$/;"	v
pglIndexMaterialEXT	shared/GLee.c	/^PFNGLINDEXMATERIALEXTPROC pglIndexMaterialEXT=_Lazy_glIndexMaterialEXT;$/;"	v
pglIndexMaterialEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLINDEXMATERIALEXTPROC pglIndexMaterialEXT;$/;"	v
pglIndexPointerEXT	shared/GLee.c	/^PFNGLINDEXPOINTEREXTPROC pglIndexPointerEXT=_Lazy_glIndexPointerEXT;$/;"	v
pglIndexPointerEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLINDEXPOINTEREXTPROC pglIndexPointerEXT;$/;"	v
pglIndexPointerListIBM	shared/GLee.c	/^PFNGLINDEXPOINTERLISTIBMPROC pglIndexPointerListIBM=_Lazy_glIndexPointerListIBM;$/;"	v
pglIndexPointerListIBM	shared/GLee.h	/^GLEE_EXTERN PFNGLINDEXPOINTERLISTIBMPROC pglIndexPointerListIBM;$/;"	v
pglInsertComponentEXT	shared/GLee.c	/^PFNGLINSERTCOMPONENTEXTPROC pglInsertComponentEXT=_Lazy_glInsertComponentEXT;$/;"	v
pglInsertComponentEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLINSERTCOMPONENTEXTPROC pglInsertComponentEXT;$/;"	v
pglInstrumentsBufferSGIX	shared/GLee.c	/^PFNGLINSTRUMENTSBUFFERSGIXPROC pglInstrumentsBufferSGIX=_Lazy_glInstrumentsBufferSGIX;$/;"	v
pglInstrumentsBufferSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLINSTRUMENTSBUFFERSGIXPROC pglInstrumentsBufferSGIX;$/;"	v
pglIsAsyncMarkerSGIX	shared/GLee.c	/^PFNGLISASYNCMARKERSGIXPROC pglIsAsyncMarkerSGIX=_Lazy_glIsAsyncMarkerSGIX;$/;"	v
pglIsAsyncMarkerSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLISASYNCMARKERSGIXPROC pglIsAsyncMarkerSGIX;$/;"	v
pglIsBuffer	shared/GLee.c	/^PFNGLISBUFFERPROC pglIsBuffer=_Lazy_glIsBuffer;$/;"	v
pglIsBuffer	shared/GLee.h	/^GLEE_EXTERN PFNGLISBUFFERPROC pglIsBuffer;$/;"	v
pglIsBufferARB	shared/GLee.c	/^PFNGLISBUFFERARBPROC pglIsBufferARB=_Lazy_glIsBufferARB;$/;"	v
pglIsBufferARB	shared/GLee.h	/^GLEE_EXTERN PFNGLISBUFFERARBPROC pglIsBufferARB;$/;"	v
pglIsEnabledIndexedEXT	shared/GLee.c	/^PFNGLISENABLEDINDEXEDEXTPROC pglIsEnabledIndexedEXT=_Lazy_glIsEnabledIndexedEXT;$/;"	v
pglIsEnabledIndexedEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLISENABLEDINDEXEDEXTPROC pglIsEnabledIndexedEXT;$/;"	v
pglIsFenceAPPLE	shared/GLee.c	/^PFNGLISFENCEAPPLEPROC pglIsFenceAPPLE=_Lazy_glIsFenceAPPLE;$/;"	v
pglIsFenceAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLISFENCEAPPLEPROC pglIsFenceAPPLE;$/;"	v
pglIsFenceNV	shared/GLee.c	/^PFNGLISFENCENVPROC pglIsFenceNV=_Lazy_glIsFenceNV;$/;"	v
pglIsFenceNV	shared/GLee.h	/^GLEE_EXTERN PFNGLISFENCENVPROC pglIsFenceNV;$/;"	v
pglIsFramebufferEXT	shared/GLee.c	/^PFNGLISFRAMEBUFFEREXTPROC pglIsFramebufferEXT=_Lazy_glIsFramebufferEXT;$/;"	v
pglIsFramebufferEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLISFRAMEBUFFEREXTPROC pglIsFramebufferEXT;$/;"	v
pglIsObjectBufferATI	shared/GLee.c	/^PFNGLISOBJECTBUFFERATIPROC pglIsObjectBufferATI=_Lazy_glIsObjectBufferATI;$/;"	v
pglIsObjectBufferATI	shared/GLee.h	/^GLEE_EXTERN PFNGLISOBJECTBUFFERATIPROC pglIsObjectBufferATI;$/;"	v
pglIsOcclusionQueryNV	shared/GLee.c	/^PFNGLISOCCLUSIONQUERYNVPROC pglIsOcclusionQueryNV=_Lazy_glIsOcclusionQueryNV;$/;"	v
pglIsOcclusionQueryNV	shared/GLee.h	/^GLEE_EXTERN PFNGLISOCCLUSIONQUERYNVPROC pglIsOcclusionQueryNV;$/;"	v
pglIsProgram	shared/GLee.c	/^PFNGLISPROGRAMPROC pglIsProgram=_Lazy_glIsProgram;$/;"	v
pglIsProgram	shared/GLee.h	/^GLEE_EXTERN PFNGLISPROGRAMPROC pglIsProgram;$/;"	v
pglIsProgramARB	shared/GLee.c	/^PFNGLISPROGRAMARBPROC pglIsProgramARB=_Lazy_glIsProgramARB;$/;"	v
pglIsProgramARB	shared/GLee.h	/^GLEE_EXTERN PFNGLISPROGRAMARBPROC pglIsProgramARB;$/;"	v
pglIsProgramNV	shared/GLee.c	/^PFNGLISPROGRAMNVPROC pglIsProgramNV=_Lazy_glIsProgramNV;$/;"	v
pglIsProgramNV	shared/GLee.h	/^GLEE_EXTERN PFNGLISPROGRAMNVPROC pglIsProgramNV;$/;"	v
pglIsQuery	shared/GLee.c	/^PFNGLISQUERYPROC pglIsQuery=_Lazy_glIsQuery;$/;"	v
pglIsQuery	shared/GLee.h	/^GLEE_EXTERN PFNGLISQUERYPROC pglIsQuery;$/;"	v
pglIsQueryARB	shared/GLee.c	/^PFNGLISQUERYARBPROC pglIsQueryARB=_Lazy_glIsQueryARB;$/;"	v
pglIsQueryARB	shared/GLee.h	/^GLEE_EXTERN PFNGLISQUERYARBPROC pglIsQueryARB;$/;"	v
pglIsRenderbufferEXT	shared/GLee.c	/^PFNGLISRENDERBUFFEREXTPROC pglIsRenderbufferEXT=_Lazy_glIsRenderbufferEXT;$/;"	v
pglIsRenderbufferEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLISRENDERBUFFEREXTPROC pglIsRenderbufferEXT;$/;"	v
pglIsShader	shared/GLee.c	/^PFNGLISSHADERPROC pglIsShader=_Lazy_glIsShader;$/;"	v
pglIsShader	shared/GLee.h	/^GLEE_EXTERN PFNGLISSHADERPROC pglIsShader;$/;"	v
pglIsTextureEXT	shared/GLee.c	/^PFNGLISTEXTUREEXTPROC pglIsTextureEXT=_Lazy_glIsTextureEXT;$/;"	v
pglIsTextureEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLISTEXTUREEXTPROC pglIsTextureEXT;$/;"	v
pglIsVariantEnabledEXT	shared/GLee.c	/^PFNGLISVARIANTENABLEDEXTPROC pglIsVariantEnabledEXT=_Lazy_glIsVariantEnabledEXT;$/;"	v
pglIsVariantEnabledEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLISVARIANTENABLEDEXTPROC pglIsVariantEnabledEXT;$/;"	v
pglIsVertexArrayAPPLE	shared/GLee.c	/^PFNGLISVERTEXARRAYAPPLEPROC pglIsVertexArrayAPPLE=_Lazy_glIsVertexArrayAPPLE;$/;"	v
pglIsVertexArrayAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLISVERTEXARRAYAPPLEPROC pglIsVertexArrayAPPLE;$/;"	v
pglLightEnviEXT	shared/GLee.c	/^PFNGLLIGHTENVIEXTPROC pglLightEnviEXT=_Lazy_glLightEnviEXT;$/;"	v
pglLightEnviEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLLIGHTENVIEXTPROC pglLightEnviEXT;$/;"	v
pglLightEnviSGIX	shared/GLee.c	/^PFNGLLIGHTENVISGIXPROC pglLightEnviSGIX=_Lazy_glLightEnviSGIX;$/;"	v
pglLightEnviSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLLIGHTENVISGIXPROC pglLightEnviSGIX;$/;"	v
pglLinkProgram	shared/GLee.c	/^PFNGLLINKPROGRAMPROC pglLinkProgram=_Lazy_glLinkProgram;$/;"	v
pglLinkProgram	shared/GLee.h	/^GLEE_EXTERN PFNGLLINKPROGRAMPROC pglLinkProgram;$/;"	v
pglLinkProgramARB	shared/GLee.c	/^PFNGLLINKPROGRAMARBPROC pglLinkProgramARB=_Lazy_glLinkProgramARB;$/;"	v
pglLinkProgramARB	shared/GLee.h	/^GLEE_EXTERN PFNGLLINKPROGRAMARBPROC pglLinkProgramARB;$/;"	v
pglListParameterfSGIX	shared/GLee.c	/^PFNGLLISTPARAMETERFSGIXPROC pglListParameterfSGIX=_Lazy_glListParameterfSGIX;$/;"	v
pglListParameterfSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLLISTPARAMETERFSGIXPROC pglListParameterfSGIX;$/;"	v
pglListParameterfvSGIX	shared/GLee.c	/^PFNGLLISTPARAMETERFVSGIXPROC pglListParameterfvSGIX=_Lazy_glListParameterfvSGIX;$/;"	v
pglListParameterfvSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLLISTPARAMETERFVSGIXPROC pglListParameterfvSGIX;$/;"	v
pglListParameteriSGIX	shared/GLee.c	/^PFNGLLISTPARAMETERISGIXPROC pglListParameteriSGIX=_Lazy_glListParameteriSGIX;$/;"	v
pglListParameteriSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLLISTPARAMETERISGIXPROC pglListParameteriSGIX;$/;"	v
pglListParameterivSGIX	shared/GLee.c	/^PFNGLLISTPARAMETERIVSGIXPROC pglListParameterivSGIX=_Lazy_glListParameterivSGIX;$/;"	v
pglListParameterivSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLLISTPARAMETERIVSGIXPROC pglListParameterivSGIX;$/;"	v
pglLoadIdentityDeformationMapSGIX	shared/GLee.c	/^PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC pglLoadIdentityDeformationMapSGIX=_Lazy_glLoadIdentityDeformationMapSGIX;$/;"	v
pglLoadIdentityDeformationMapSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC pglLoadIdentityDeformationMapSGIX;$/;"	v
pglLoadProgramNV	shared/GLee.c	/^PFNGLLOADPROGRAMNVPROC pglLoadProgramNV=_Lazy_glLoadProgramNV;$/;"	v
pglLoadProgramNV	shared/GLee.h	/^GLEE_EXTERN PFNGLLOADPROGRAMNVPROC pglLoadProgramNV;$/;"	v
pglLoadTransposeMatrixd	shared/GLee.c	/^PFNGLLOADTRANSPOSEMATRIXDPROC pglLoadTransposeMatrixd=_Lazy_glLoadTransposeMatrixd;$/;"	v
pglLoadTransposeMatrixd	shared/GLee.h	/^GLEE_EXTERN PFNGLLOADTRANSPOSEMATRIXDPROC pglLoadTransposeMatrixd;$/;"	v
pglLoadTransposeMatrixdARB	shared/GLee.c	/^PFNGLLOADTRANSPOSEMATRIXDARBPROC pglLoadTransposeMatrixdARB=_Lazy_glLoadTransposeMatrixdARB;$/;"	v
pglLoadTransposeMatrixdARB	shared/GLee.h	/^GLEE_EXTERN PFNGLLOADTRANSPOSEMATRIXDARBPROC pglLoadTransposeMatrixdARB;$/;"	v
pglLoadTransposeMatrixf	shared/GLee.c	/^PFNGLLOADTRANSPOSEMATRIXFPROC pglLoadTransposeMatrixf=_Lazy_glLoadTransposeMatrixf;$/;"	v
pglLoadTransposeMatrixf	shared/GLee.h	/^GLEE_EXTERN PFNGLLOADTRANSPOSEMATRIXFPROC pglLoadTransposeMatrixf;$/;"	v
pglLoadTransposeMatrixfARB	shared/GLee.c	/^PFNGLLOADTRANSPOSEMATRIXFARBPROC pglLoadTransposeMatrixfARB=_Lazy_glLoadTransposeMatrixfARB;$/;"	v
pglLoadTransposeMatrixfARB	shared/GLee.h	/^GLEE_EXTERN PFNGLLOADTRANSPOSEMATRIXFARBPROC pglLoadTransposeMatrixfARB;$/;"	v
pglLockArraysEXT	shared/GLee.c	/^PFNGLLOCKARRAYSEXTPROC pglLockArraysEXT=_Lazy_glLockArraysEXT;$/;"	v
pglLockArraysEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLLOCKARRAYSEXTPROC pglLockArraysEXT;$/;"	v
pglMapBuffer	shared/GLee.c	/^PFNGLMAPBUFFERPROC pglMapBuffer=_Lazy_glMapBuffer;$/;"	v
pglMapBuffer	shared/GLee.h	/^GLEE_EXTERN PFNGLMAPBUFFERPROC pglMapBuffer;$/;"	v
pglMapBufferARB	shared/GLee.c	/^PFNGLMAPBUFFERARBPROC pglMapBufferARB=_Lazy_glMapBufferARB;$/;"	v
pglMapBufferARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMAPBUFFERARBPROC pglMapBufferARB;$/;"	v
pglMapControlPointsNV	shared/GLee.c	/^PFNGLMAPCONTROLPOINTSNVPROC pglMapControlPointsNV=_Lazy_glMapControlPointsNV;$/;"	v
pglMapControlPointsNV	shared/GLee.h	/^GLEE_EXTERN PFNGLMAPCONTROLPOINTSNVPROC pglMapControlPointsNV;$/;"	v
pglMapObjectBufferATI	shared/GLee.c	/^PFNGLMAPOBJECTBUFFERATIPROC pglMapObjectBufferATI=_Lazy_glMapObjectBufferATI;$/;"	v
pglMapObjectBufferATI	shared/GLee.h	/^GLEE_EXTERN PFNGLMAPOBJECTBUFFERATIPROC pglMapObjectBufferATI;$/;"	v
pglMapParameterfvNV	shared/GLee.c	/^PFNGLMAPPARAMETERFVNVPROC pglMapParameterfvNV=_Lazy_glMapParameterfvNV;$/;"	v
pglMapParameterfvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLMAPPARAMETERFVNVPROC pglMapParameterfvNV;$/;"	v
pglMapParameterivNV	shared/GLee.c	/^PFNGLMAPPARAMETERIVNVPROC pglMapParameterivNV=_Lazy_glMapParameterivNV;$/;"	v
pglMapParameterivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLMAPPARAMETERIVNVPROC pglMapParameterivNV;$/;"	v
pglMatrixIndexPointerARB	shared/GLee.c	/^PFNGLMATRIXINDEXPOINTERARBPROC pglMatrixIndexPointerARB=_Lazy_glMatrixIndexPointerARB;$/;"	v
pglMatrixIndexPointerARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMATRIXINDEXPOINTERARBPROC pglMatrixIndexPointerARB;$/;"	v
pglMatrixIndexubvARB	shared/GLee.c	/^PFNGLMATRIXINDEXUBVARBPROC pglMatrixIndexubvARB=_Lazy_glMatrixIndexubvARB;$/;"	v
pglMatrixIndexubvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMATRIXINDEXUBVARBPROC pglMatrixIndexubvARB;$/;"	v
pglMatrixIndexuivARB	shared/GLee.c	/^PFNGLMATRIXINDEXUIVARBPROC pglMatrixIndexuivARB=_Lazy_glMatrixIndexuivARB;$/;"	v
pglMatrixIndexuivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMATRIXINDEXUIVARBPROC pglMatrixIndexuivARB;$/;"	v
pglMatrixIndexusvARB	shared/GLee.c	/^PFNGLMATRIXINDEXUSVARBPROC pglMatrixIndexusvARB=_Lazy_glMatrixIndexusvARB;$/;"	v
pglMatrixIndexusvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMATRIXINDEXUSVARBPROC pglMatrixIndexusvARB;$/;"	v
pglMinmax	shared/GLee.c	/^PFNGLMINMAXPROC pglMinmax=_Lazy_glMinmax;$/;"	v
pglMinmax	shared/GLee.h	/^GLEE_EXTERN PFNGLMINMAXPROC pglMinmax;$/;"	v
pglMinmaxEXT	shared/GLee.c	/^PFNGLMINMAXEXTPROC pglMinmaxEXT=_Lazy_glMinmaxEXT;$/;"	v
pglMinmaxEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLMINMAXEXTPROC pglMinmaxEXT;$/;"	v
pglMultTransposeMatrixd	shared/GLee.c	/^PFNGLMULTTRANSPOSEMATRIXDPROC pglMultTransposeMatrixd=_Lazy_glMultTransposeMatrixd;$/;"	v
pglMultTransposeMatrixd	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTTRANSPOSEMATRIXDPROC pglMultTransposeMatrixd;$/;"	v
pglMultTransposeMatrixdARB	shared/GLee.c	/^PFNGLMULTTRANSPOSEMATRIXDARBPROC pglMultTransposeMatrixdARB=_Lazy_glMultTransposeMatrixdARB;$/;"	v
pglMultTransposeMatrixdARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTTRANSPOSEMATRIXDARBPROC pglMultTransposeMatrixdARB;$/;"	v
pglMultTransposeMatrixf	shared/GLee.c	/^PFNGLMULTTRANSPOSEMATRIXFPROC pglMultTransposeMatrixf=_Lazy_glMultTransposeMatrixf;$/;"	v
pglMultTransposeMatrixf	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTTRANSPOSEMATRIXFPROC pglMultTransposeMatrixf;$/;"	v
pglMultTransposeMatrixfARB	shared/GLee.c	/^PFNGLMULTTRANSPOSEMATRIXFARBPROC pglMultTransposeMatrixfARB=_Lazy_glMultTransposeMatrixfARB;$/;"	v
pglMultTransposeMatrixfARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTTRANSPOSEMATRIXFARBPROC pglMultTransposeMatrixfARB;$/;"	v
pglMultiDrawArrays	shared/GLee.c	/^PFNGLMULTIDRAWARRAYSPROC pglMultiDrawArrays=_Lazy_glMultiDrawArrays;$/;"	v
pglMultiDrawArrays	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTIDRAWARRAYSPROC pglMultiDrawArrays;$/;"	v
pglMultiDrawArraysEXT	shared/GLee.c	/^PFNGLMULTIDRAWARRAYSEXTPROC pglMultiDrawArraysEXT=_Lazy_glMultiDrawArraysEXT;$/;"	v
pglMultiDrawArraysEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTIDRAWARRAYSEXTPROC pglMultiDrawArraysEXT;$/;"	v
pglMultiDrawElementArrayAPPLE	shared/GLee.c	/^PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC pglMultiDrawElementArrayAPPLE=_Lazy_glMultiDrawElementArrayAPPLE;$/;"	v
pglMultiDrawElementArrayAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC pglMultiDrawElementArrayAPPLE;$/;"	v
pglMultiDrawElements	shared/GLee.c	/^PFNGLMULTIDRAWELEMENTSPROC pglMultiDrawElements=_Lazy_glMultiDrawElements;$/;"	v
pglMultiDrawElements	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTIDRAWELEMENTSPROC pglMultiDrawElements;$/;"	v
pglMultiDrawElementsEXT	shared/GLee.c	/^PFNGLMULTIDRAWELEMENTSEXTPROC pglMultiDrawElementsEXT=_Lazy_glMultiDrawElementsEXT;$/;"	v
pglMultiDrawElementsEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTIDRAWELEMENTSEXTPROC pglMultiDrawElementsEXT;$/;"	v
pglMultiDrawRangeElementArrayAPPLE	shared/GLee.c	/^PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC pglMultiDrawRangeElementArrayAPPLE=_Lazy_glMultiDrawRangeElementArrayAPPLE;$/;"	v
pglMultiDrawRangeElementArrayAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC pglMultiDrawRangeElementArrayAPPLE;$/;"	v
pglMultiModeDrawArraysIBM	shared/GLee.c	/^PFNGLMULTIMODEDRAWARRAYSIBMPROC pglMultiModeDrawArraysIBM=_Lazy_glMultiModeDrawArraysIBM;$/;"	v
pglMultiModeDrawArraysIBM	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTIMODEDRAWARRAYSIBMPROC pglMultiModeDrawArraysIBM;$/;"	v
pglMultiModeDrawElementsIBM	shared/GLee.c	/^PFNGLMULTIMODEDRAWELEMENTSIBMPROC pglMultiModeDrawElementsIBM=_Lazy_glMultiModeDrawElementsIBM;$/;"	v
pglMultiModeDrawElementsIBM	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTIMODEDRAWELEMENTSIBMPROC pglMultiModeDrawElementsIBM;$/;"	v
pglMultiTexCoord1d	shared/GLee.c	/^PFNGLMULTITEXCOORD1DPROC pglMultiTexCoord1d=_Lazy_glMultiTexCoord1d;$/;"	v
pglMultiTexCoord1d	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1DPROC pglMultiTexCoord1d;$/;"	v
pglMultiTexCoord1dARB	shared/GLee.c	/^PFNGLMULTITEXCOORD1DARBPROC pglMultiTexCoord1dARB=_Lazy_glMultiTexCoord1dARB;$/;"	v
pglMultiTexCoord1dARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1DARBPROC pglMultiTexCoord1dARB;$/;"	v
pglMultiTexCoord1dv	shared/GLee.c	/^PFNGLMULTITEXCOORD1DVPROC pglMultiTexCoord1dv=_Lazy_glMultiTexCoord1dv;$/;"	v
pglMultiTexCoord1dv	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1DVPROC pglMultiTexCoord1dv;$/;"	v
pglMultiTexCoord1dvARB	shared/GLee.c	/^PFNGLMULTITEXCOORD1DVARBPROC pglMultiTexCoord1dvARB=_Lazy_glMultiTexCoord1dvARB;$/;"	v
pglMultiTexCoord1dvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1DVARBPROC pglMultiTexCoord1dvARB;$/;"	v
pglMultiTexCoord1f	shared/GLee.c	/^PFNGLMULTITEXCOORD1FPROC pglMultiTexCoord1f=_Lazy_glMultiTexCoord1f;$/;"	v
pglMultiTexCoord1f	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1FPROC pglMultiTexCoord1f;$/;"	v
pglMultiTexCoord1fARB	shared/GLee.c	/^PFNGLMULTITEXCOORD1FARBPROC pglMultiTexCoord1fARB=_Lazy_glMultiTexCoord1fARB;$/;"	v
pglMultiTexCoord1fARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1FARBPROC pglMultiTexCoord1fARB;$/;"	v
pglMultiTexCoord1fv	shared/GLee.c	/^PFNGLMULTITEXCOORD1FVPROC pglMultiTexCoord1fv=_Lazy_glMultiTexCoord1fv;$/;"	v
pglMultiTexCoord1fv	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1FVPROC pglMultiTexCoord1fv;$/;"	v
pglMultiTexCoord1fvARB	shared/GLee.c	/^PFNGLMULTITEXCOORD1FVARBPROC pglMultiTexCoord1fvARB=_Lazy_glMultiTexCoord1fvARB;$/;"	v
pglMultiTexCoord1fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1FVARBPROC pglMultiTexCoord1fvARB;$/;"	v
pglMultiTexCoord1hNV	shared/GLee.c	/^PFNGLMULTITEXCOORD1HNVPROC pglMultiTexCoord1hNV=_Lazy_glMultiTexCoord1hNV;$/;"	v
pglMultiTexCoord1hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1HNVPROC pglMultiTexCoord1hNV;$/;"	v
pglMultiTexCoord1hvNV	shared/GLee.c	/^PFNGLMULTITEXCOORD1HVNVPROC pglMultiTexCoord1hvNV=_Lazy_glMultiTexCoord1hvNV;$/;"	v
pglMultiTexCoord1hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1HVNVPROC pglMultiTexCoord1hvNV;$/;"	v
pglMultiTexCoord1i	shared/GLee.c	/^PFNGLMULTITEXCOORD1IPROC pglMultiTexCoord1i=_Lazy_glMultiTexCoord1i;$/;"	v
pglMultiTexCoord1i	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1IPROC pglMultiTexCoord1i;$/;"	v
pglMultiTexCoord1iARB	shared/GLee.c	/^PFNGLMULTITEXCOORD1IARBPROC pglMultiTexCoord1iARB=_Lazy_glMultiTexCoord1iARB;$/;"	v
pglMultiTexCoord1iARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1IARBPROC pglMultiTexCoord1iARB;$/;"	v
pglMultiTexCoord1iv	shared/GLee.c	/^PFNGLMULTITEXCOORD1IVPROC pglMultiTexCoord1iv=_Lazy_glMultiTexCoord1iv;$/;"	v
pglMultiTexCoord1iv	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1IVPROC pglMultiTexCoord1iv;$/;"	v
pglMultiTexCoord1ivARB	shared/GLee.c	/^PFNGLMULTITEXCOORD1IVARBPROC pglMultiTexCoord1ivARB=_Lazy_glMultiTexCoord1ivARB;$/;"	v
pglMultiTexCoord1ivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1IVARBPROC pglMultiTexCoord1ivARB;$/;"	v
pglMultiTexCoord1s	shared/GLee.c	/^PFNGLMULTITEXCOORD1SPROC pglMultiTexCoord1s=_Lazy_glMultiTexCoord1s;$/;"	v
pglMultiTexCoord1s	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1SPROC pglMultiTexCoord1s;$/;"	v
pglMultiTexCoord1sARB	shared/GLee.c	/^PFNGLMULTITEXCOORD1SARBPROC pglMultiTexCoord1sARB=_Lazy_glMultiTexCoord1sARB;$/;"	v
pglMultiTexCoord1sARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1SARBPROC pglMultiTexCoord1sARB;$/;"	v
pglMultiTexCoord1sv	shared/GLee.c	/^PFNGLMULTITEXCOORD1SVPROC pglMultiTexCoord1sv=_Lazy_glMultiTexCoord1sv;$/;"	v
pglMultiTexCoord1sv	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1SVPROC pglMultiTexCoord1sv;$/;"	v
pglMultiTexCoord1svARB	shared/GLee.c	/^PFNGLMULTITEXCOORD1SVARBPROC pglMultiTexCoord1svARB=_Lazy_glMultiTexCoord1svARB;$/;"	v
pglMultiTexCoord1svARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD1SVARBPROC pglMultiTexCoord1svARB;$/;"	v
pglMultiTexCoord2d	shared/GLee.c	/^PFNGLMULTITEXCOORD2DPROC pglMultiTexCoord2d=_Lazy_glMultiTexCoord2d;$/;"	v
pglMultiTexCoord2d	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2DPROC pglMultiTexCoord2d;$/;"	v
pglMultiTexCoord2dARB	shared/GLee.c	/^PFNGLMULTITEXCOORD2DARBPROC pglMultiTexCoord2dARB=_Lazy_glMultiTexCoord2dARB;$/;"	v
pglMultiTexCoord2dARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2DARBPROC pglMultiTexCoord2dARB;$/;"	v
pglMultiTexCoord2dv	shared/GLee.c	/^PFNGLMULTITEXCOORD2DVPROC pglMultiTexCoord2dv=_Lazy_glMultiTexCoord2dv;$/;"	v
pglMultiTexCoord2dv	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2DVPROC pglMultiTexCoord2dv;$/;"	v
pglMultiTexCoord2dvARB	shared/GLee.c	/^PFNGLMULTITEXCOORD2DVARBPROC pglMultiTexCoord2dvARB=_Lazy_glMultiTexCoord2dvARB;$/;"	v
pglMultiTexCoord2dvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2DVARBPROC pglMultiTexCoord2dvARB;$/;"	v
pglMultiTexCoord2f	shared/GLee.c	/^PFNGLMULTITEXCOORD2FPROC pglMultiTexCoord2f=_Lazy_glMultiTexCoord2f;$/;"	v
pglMultiTexCoord2f	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2FPROC pglMultiTexCoord2f;$/;"	v
pglMultiTexCoord2fARB	shared/GLee.c	/^PFNGLMULTITEXCOORD2FARBPROC pglMultiTexCoord2fARB=_Lazy_glMultiTexCoord2fARB;$/;"	v
pglMultiTexCoord2fARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2FARBPROC pglMultiTexCoord2fARB;$/;"	v
pglMultiTexCoord2fv	shared/GLee.c	/^PFNGLMULTITEXCOORD2FVPROC pglMultiTexCoord2fv=_Lazy_glMultiTexCoord2fv;$/;"	v
pglMultiTexCoord2fv	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2FVPROC pglMultiTexCoord2fv;$/;"	v
pglMultiTexCoord2fvARB	shared/GLee.c	/^PFNGLMULTITEXCOORD2FVARBPROC pglMultiTexCoord2fvARB=_Lazy_glMultiTexCoord2fvARB;$/;"	v
pglMultiTexCoord2fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2FVARBPROC pglMultiTexCoord2fvARB;$/;"	v
pglMultiTexCoord2hNV	shared/GLee.c	/^PFNGLMULTITEXCOORD2HNVPROC pglMultiTexCoord2hNV=_Lazy_glMultiTexCoord2hNV;$/;"	v
pglMultiTexCoord2hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2HNVPROC pglMultiTexCoord2hNV;$/;"	v
pglMultiTexCoord2hvNV	shared/GLee.c	/^PFNGLMULTITEXCOORD2HVNVPROC pglMultiTexCoord2hvNV=_Lazy_glMultiTexCoord2hvNV;$/;"	v
pglMultiTexCoord2hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2HVNVPROC pglMultiTexCoord2hvNV;$/;"	v
pglMultiTexCoord2i	shared/GLee.c	/^PFNGLMULTITEXCOORD2IPROC pglMultiTexCoord2i=_Lazy_glMultiTexCoord2i;$/;"	v
pglMultiTexCoord2i	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2IPROC pglMultiTexCoord2i;$/;"	v
pglMultiTexCoord2iARB	shared/GLee.c	/^PFNGLMULTITEXCOORD2IARBPROC pglMultiTexCoord2iARB=_Lazy_glMultiTexCoord2iARB;$/;"	v
pglMultiTexCoord2iARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2IARBPROC pglMultiTexCoord2iARB;$/;"	v
pglMultiTexCoord2iv	shared/GLee.c	/^PFNGLMULTITEXCOORD2IVPROC pglMultiTexCoord2iv=_Lazy_glMultiTexCoord2iv;$/;"	v
pglMultiTexCoord2iv	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2IVPROC pglMultiTexCoord2iv;$/;"	v
pglMultiTexCoord2ivARB	shared/GLee.c	/^PFNGLMULTITEXCOORD2IVARBPROC pglMultiTexCoord2ivARB=_Lazy_glMultiTexCoord2ivARB;$/;"	v
pglMultiTexCoord2ivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2IVARBPROC pglMultiTexCoord2ivARB;$/;"	v
pglMultiTexCoord2s	shared/GLee.c	/^PFNGLMULTITEXCOORD2SPROC pglMultiTexCoord2s=_Lazy_glMultiTexCoord2s;$/;"	v
pglMultiTexCoord2s	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2SPROC pglMultiTexCoord2s;$/;"	v
pglMultiTexCoord2sARB	shared/GLee.c	/^PFNGLMULTITEXCOORD2SARBPROC pglMultiTexCoord2sARB=_Lazy_glMultiTexCoord2sARB;$/;"	v
pglMultiTexCoord2sARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2SARBPROC pglMultiTexCoord2sARB;$/;"	v
pglMultiTexCoord2sv	shared/GLee.c	/^PFNGLMULTITEXCOORD2SVPROC pglMultiTexCoord2sv=_Lazy_glMultiTexCoord2sv;$/;"	v
pglMultiTexCoord2sv	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2SVPROC pglMultiTexCoord2sv;$/;"	v
pglMultiTexCoord2svARB	shared/GLee.c	/^PFNGLMULTITEXCOORD2SVARBPROC pglMultiTexCoord2svARB=_Lazy_glMultiTexCoord2svARB;$/;"	v
pglMultiTexCoord2svARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD2SVARBPROC pglMultiTexCoord2svARB;$/;"	v
pglMultiTexCoord3d	shared/GLee.c	/^PFNGLMULTITEXCOORD3DPROC pglMultiTexCoord3d=_Lazy_glMultiTexCoord3d;$/;"	v
pglMultiTexCoord3d	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3DPROC pglMultiTexCoord3d;$/;"	v
pglMultiTexCoord3dARB	shared/GLee.c	/^PFNGLMULTITEXCOORD3DARBPROC pglMultiTexCoord3dARB=_Lazy_glMultiTexCoord3dARB;$/;"	v
pglMultiTexCoord3dARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3DARBPROC pglMultiTexCoord3dARB;$/;"	v
pglMultiTexCoord3dv	shared/GLee.c	/^PFNGLMULTITEXCOORD3DVPROC pglMultiTexCoord3dv=_Lazy_glMultiTexCoord3dv;$/;"	v
pglMultiTexCoord3dv	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3DVPROC pglMultiTexCoord3dv;$/;"	v
pglMultiTexCoord3dvARB	shared/GLee.c	/^PFNGLMULTITEXCOORD3DVARBPROC pglMultiTexCoord3dvARB=_Lazy_glMultiTexCoord3dvARB;$/;"	v
pglMultiTexCoord3dvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3DVARBPROC pglMultiTexCoord3dvARB;$/;"	v
pglMultiTexCoord3f	shared/GLee.c	/^PFNGLMULTITEXCOORD3FPROC pglMultiTexCoord3f=_Lazy_glMultiTexCoord3f;$/;"	v
pglMultiTexCoord3f	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3FPROC pglMultiTexCoord3f;$/;"	v
pglMultiTexCoord3fARB	shared/GLee.c	/^PFNGLMULTITEXCOORD3FARBPROC pglMultiTexCoord3fARB=_Lazy_glMultiTexCoord3fARB;$/;"	v
pglMultiTexCoord3fARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3FARBPROC pglMultiTexCoord3fARB;$/;"	v
pglMultiTexCoord3fv	shared/GLee.c	/^PFNGLMULTITEXCOORD3FVPROC pglMultiTexCoord3fv=_Lazy_glMultiTexCoord3fv;$/;"	v
pglMultiTexCoord3fv	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3FVPROC pglMultiTexCoord3fv;$/;"	v
pglMultiTexCoord3fvARB	shared/GLee.c	/^PFNGLMULTITEXCOORD3FVARBPROC pglMultiTexCoord3fvARB=_Lazy_glMultiTexCoord3fvARB;$/;"	v
pglMultiTexCoord3fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3FVARBPROC pglMultiTexCoord3fvARB;$/;"	v
pglMultiTexCoord3hNV	shared/GLee.c	/^PFNGLMULTITEXCOORD3HNVPROC pglMultiTexCoord3hNV=_Lazy_glMultiTexCoord3hNV;$/;"	v
pglMultiTexCoord3hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3HNVPROC pglMultiTexCoord3hNV;$/;"	v
pglMultiTexCoord3hvNV	shared/GLee.c	/^PFNGLMULTITEXCOORD3HVNVPROC pglMultiTexCoord3hvNV=_Lazy_glMultiTexCoord3hvNV;$/;"	v
pglMultiTexCoord3hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3HVNVPROC pglMultiTexCoord3hvNV;$/;"	v
pglMultiTexCoord3i	shared/GLee.c	/^PFNGLMULTITEXCOORD3IPROC pglMultiTexCoord3i=_Lazy_glMultiTexCoord3i;$/;"	v
pglMultiTexCoord3i	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3IPROC pglMultiTexCoord3i;$/;"	v
pglMultiTexCoord3iARB	shared/GLee.c	/^PFNGLMULTITEXCOORD3IARBPROC pglMultiTexCoord3iARB=_Lazy_glMultiTexCoord3iARB;$/;"	v
pglMultiTexCoord3iARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3IARBPROC pglMultiTexCoord3iARB;$/;"	v
pglMultiTexCoord3iv	shared/GLee.c	/^PFNGLMULTITEXCOORD3IVPROC pglMultiTexCoord3iv=_Lazy_glMultiTexCoord3iv;$/;"	v
pglMultiTexCoord3iv	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3IVPROC pglMultiTexCoord3iv;$/;"	v
pglMultiTexCoord3ivARB	shared/GLee.c	/^PFNGLMULTITEXCOORD3IVARBPROC pglMultiTexCoord3ivARB=_Lazy_glMultiTexCoord3ivARB;$/;"	v
pglMultiTexCoord3ivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3IVARBPROC pglMultiTexCoord3ivARB;$/;"	v
pglMultiTexCoord3s	shared/GLee.c	/^PFNGLMULTITEXCOORD3SPROC pglMultiTexCoord3s=_Lazy_glMultiTexCoord3s;$/;"	v
pglMultiTexCoord3s	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3SPROC pglMultiTexCoord3s;$/;"	v
pglMultiTexCoord3sARB	shared/GLee.c	/^PFNGLMULTITEXCOORD3SARBPROC pglMultiTexCoord3sARB=_Lazy_glMultiTexCoord3sARB;$/;"	v
pglMultiTexCoord3sARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3SARBPROC pglMultiTexCoord3sARB;$/;"	v
pglMultiTexCoord3sv	shared/GLee.c	/^PFNGLMULTITEXCOORD3SVPROC pglMultiTexCoord3sv=_Lazy_glMultiTexCoord3sv;$/;"	v
pglMultiTexCoord3sv	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3SVPROC pglMultiTexCoord3sv;$/;"	v
pglMultiTexCoord3svARB	shared/GLee.c	/^PFNGLMULTITEXCOORD3SVARBPROC pglMultiTexCoord3svARB=_Lazy_glMultiTexCoord3svARB;$/;"	v
pglMultiTexCoord3svARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD3SVARBPROC pglMultiTexCoord3svARB;$/;"	v
pglMultiTexCoord4d	shared/GLee.c	/^PFNGLMULTITEXCOORD4DPROC pglMultiTexCoord4d=_Lazy_glMultiTexCoord4d;$/;"	v
pglMultiTexCoord4d	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4DPROC pglMultiTexCoord4d;$/;"	v
pglMultiTexCoord4dARB	shared/GLee.c	/^PFNGLMULTITEXCOORD4DARBPROC pglMultiTexCoord4dARB=_Lazy_glMultiTexCoord4dARB;$/;"	v
pglMultiTexCoord4dARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4DARBPROC pglMultiTexCoord4dARB;$/;"	v
pglMultiTexCoord4dv	shared/GLee.c	/^PFNGLMULTITEXCOORD4DVPROC pglMultiTexCoord4dv=_Lazy_glMultiTexCoord4dv;$/;"	v
pglMultiTexCoord4dv	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4DVPROC pglMultiTexCoord4dv;$/;"	v
pglMultiTexCoord4dvARB	shared/GLee.c	/^PFNGLMULTITEXCOORD4DVARBPROC pglMultiTexCoord4dvARB=_Lazy_glMultiTexCoord4dvARB;$/;"	v
pglMultiTexCoord4dvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4DVARBPROC pglMultiTexCoord4dvARB;$/;"	v
pglMultiTexCoord4f	shared/GLee.c	/^PFNGLMULTITEXCOORD4FPROC pglMultiTexCoord4f=_Lazy_glMultiTexCoord4f;$/;"	v
pglMultiTexCoord4f	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4FPROC pglMultiTexCoord4f;$/;"	v
pglMultiTexCoord4fARB	shared/GLee.c	/^PFNGLMULTITEXCOORD4FARBPROC pglMultiTexCoord4fARB=_Lazy_glMultiTexCoord4fARB;$/;"	v
pglMultiTexCoord4fARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4FARBPROC pglMultiTexCoord4fARB;$/;"	v
pglMultiTexCoord4fv	shared/GLee.c	/^PFNGLMULTITEXCOORD4FVPROC pglMultiTexCoord4fv=_Lazy_glMultiTexCoord4fv;$/;"	v
pglMultiTexCoord4fv	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4FVPROC pglMultiTexCoord4fv;$/;"	v
pglMultiTexCoord4fvARB	shared/GLee.c	/^PFNGLMULTITEXCOORD4FVARBPROC pglMultiTexCoord4fvARB=_Lazy_glMultiTexCoord4fvARB;$/;"	v
pglMultiTexCoord4fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4FVARBPROC pglMultiTexCoord4fvARB;$/;"	v
pglMultiTexCoord4hNV	shared/GLee.c	/^PFNGLMULTITEXCOORD4HNVPROC pglMultiTexCoord4hNV=_Lazy_glMultiTexCoord4hNV;$/;"	v
pglMultiTexCoord4hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4HNVPROC pglMultiTexCoord4hNV;$/;"	v
pglMultiTexCoord4hvNV	shared/GLee.c	/^PFNGLMULTITEXCOORD4HVNVPROC pglMultiTexCoord4hvNV=_Lazy_glMultiTexCoord4hvNV;$/;"	v
pglMultiTexCoord4hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4HVNVPROC pglMultiTexCoord4hvNV;$/;"	v
pglMultiTexCoord4i	shared/GLee.c	/^PFNGLMULTITEXCOORD4IPROC pglMultiTexCoord4i=_Lazy_glMultiTexCoord4i;$/;"	v
pglMultiTexCoord4i	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4IPROC pglMultiTexCoord4i;$/;"	v
pglMultiTexCoord4iARB	shared/GLee.c	/^PFNGLMULTITEXCOORD4IARBPROC pglMultiTexCoord4iARB=_Lazy_glMultiTexCoord4iARB;$/;"	v
pglMultiTexCoord4iARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4IARBPROC pglMultiTexCoord4iARB;$/;"	v
pglMultiTexCoord4iv	shared/GLee.c	/^PFNGLMULTITEXCOORD4IVPROC pglMultiTexCoord4iv=_Lazy_glMultiTexCoord4iv;$/;"	v
pglMultiTexCoord4iv	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4IVPROC pglMultiTexCoord4iv;$/;"	v
pglMultiTexCoord4ivARB	shared/GLee.c	/^PFNGLMULTITEXCOORD4IVARBPROC pglMultiTexCoord4ivARB=_Lazy_glMultiTexCoord4ivARB;$/;"	v
pglMultiTexCoord4ivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4IVARBPROC pglMultiTexCoord4ivARB;$/;"	v
pglMultiTexCoord4s	shared/GLee.c	/^PFNGLMULTITEXCOORD4SPROC pglMultiTexCoord4s=_Lazy_glMultiTexCoord4s;$/;"	v
pglMultiTexCoord4s	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4SPROC pglMultiTexCoord4s;$/;"	v
pglMultiTexCoord4sARB	shared/GLee.c	/^PFNGLMULTITEXCOORD4SARBPROC pglMultiTexCoord4sARB=_Lazy_glMultiTexCoord4sARB;$/;"	v
pglMultiTexCoord4sARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4SARBPROC pglMultiTexCoord4sARB;$/;"	v
pglMultiTexCoord4sv	shared/GLee.c	/^PFNGLMULTITEXCOORD4SVPROC pglMultiTexCoord4sv=_Lazy_glMultiTexCoord4sv;$/;"	v
pglMultiTexCoord4sv	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4SVPROC pglMultiTexCoord4sv;$/;"	v
pglMultiTexCoord4svARB	shared/GLee.c	/^PFNGLMULTITEXCOORD4SVARBPROC pglMultiTexCoord4svARB=_Lazy_glMultiTexCoord4svARB;$/;"	v
pglMultiTexCoord4svARB	shared/GLee.h	/^GLEE_EXTERN PFNGLMULTITEXCOORD4SVARBPROC pglMultiTexCoord4svARB;$/;"	v
pglNewObjectBufferATI	shared/GLee.c	/^PFNGLNEWOBJECTBUFFERATIPROC pglNewObjectBufferATI=_Lazy_glNewObjectBufferATI;$/;"	v
pglNewObjectBufferATI	shared/GLee.h	/^GLEE_EXTERN PFNGLNEWOBJECTBUFFERATIPROC pglNewObjectBufferATI;$/;"	v
pglNormal3fVertex3fSUN	shared/GLee.c	/^PFNGLNORMAL3FVERTEX3FSUNPROC pglNormal3fVertex3fSUN=_Lazy_glNormal3fVertex3fSUN;$/;"	v
pglNormal3fVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMAL3FVERTEX3FSUNPROC pglNormal3fVertex3fSUN;$/;"	v
pglNormal3fVertex3fvSUN	shared/GLee.c	/^PFNGLNORMAL3FVERTEX3FVSUNPROC pglNormal3fVertex3fvSUN=_Lazy_glNormal3fVertex3fvSUN;$/;"	v
pglNormal3fVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMAL3FVERTEX3FVSUNPROC pglNormal3fVertex3fvSUN;$/;"	v
pglNormal3hNV	shared/GLee.c	/^PFNGLNORMAL3HNVPROC pglNormal3hNV=_Lazy_glNormal3hNV;$/;"	v
pglNormal3hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMAL3HNVPROC pglNormal3hNV;$/;"	v
pglNormal3hvNV	shared/GLee.c	/^PFNGLNORMAL3HVNVPROC pglNormal3hvNV=_Lazy_glNormal3hvNV;$/;"	v
pglNormal3hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMAL3HVNVPROC pglNormal3hvNV;$/;"	v
pglNormalPointerEXT	shared/GLee.c	/^PFNGLNORMALPOINTEREXTPROC pglNormalPointerEXT=_Lazy_glNormalPointerEXT;$/;"	v
pglNormalPointerEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMALPOINTEREXTPROC pglNormalPointerEXT;$/;"	v
pglNormalPointerListIBM	shared/GLee.c	/^PFNGLNORMALPOINTERLISTIBMPROC pglNormalPointerListIBM=_Lazy_glNormalPointerListIBM;$/;"	v
pglNormalPointerListIBM	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMALPOINTERLISTIBMPROC pglNormalPointerListIBM;$/;"	v
pglNormalPointervINTEL	shared/GLee.c	/^PFNGLNORMALPOINTERVINTELPROC pglNormalPointervINTEL=_Lazy_glNormalPointervINTEL;$/;"	v
pglNormalPointervINTEL	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMALPOINTERVINTELPROC pglNormalPointervINTEL;$/;"	v
pglNormalStream3bATI	shared/GLee.c	/^PFNGLNORMALSTREAM3BATIPROC pglNormalStream3bATI=_Lazy_glNormalStream3bATI;$/;"	v
pglNormalStream3bATI	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMALSTREAM3BATIPROC pglNormalStream3bATI;$/;"	v
pglNormalStream3bvATI	shared/GLee.c	/^PFNGLNORMALSTREAM3BVATIPROC pglNormalStream3bvATI=_Lazy_glNormalStream3bvATI;$/;"	v
pglNormalStream3bvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMALSTREAM3BVATIPROC pglNormalStream3bvATI;$/;"	v
pglNormalStream3dATI	shared/GLee.c	/^PFNGLNORMALSTREAM3DATIPROC pglNormalStream3dATI=_Lazy_glNormalStream3dATI;$/;"	v
pglNormalStream3dATI	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMALSTREAM3DATIPROC pglNormalStream3dATI;$/;"	v
pglNormalStream3dvATI	shared/GLee.c	/^PFNGLNORMALSTREAM3DVATIPROC pglNormalStream3dvATI=_Lazy_glNormalStream3dvATI;$/;"	v
pglNormalStream3dvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMALSTREAM3DVATIPROC pglNormalStream3dvATI;$/;"	v
pglNormalStream3fATI	shared/GLee.c	/^PFNGLNORMALSTREAM3FATIPROC pglNormalStream3fATI=_Lazy_glNormalStream3fATI;$/;"	v
pglNormalStream3fATI	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMALSTREAM3FATIPROC pglNormalStream3fATI;$/;"	v
pglNormalStream3fvATI	shared/GLee.c	/^PFNGLNORMALSTREAM3FVATIPROC pglNormalStream3fvATI=_Lazy_glNormalStream3fvATI;$/;"	v
pglNormalStream3fvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMALSTREAM3FVATIPROC pglNormalStream3fvATI;$/;"	v
pglNormalStream3iATI	shared/GLee.c	/^PFNGLNORMALSTREAM3IATIPROC pglNormalStream3iATI=_Lazy_glNormalStream3iATI;$/;"	v
pglNormalStream3iATI	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMALSTREAM3IATIPROC pglNormalStream3iATI;$/;"	v
pglNormalStream3ivATI	shared/GLee.c	/^PFNGLNORMALSTREAM3IVATIPROC pglNormalStream3ivATI=_Lazy_glNormalStream3ivATI;$/;"	v
pglNormalStream3ivATI	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMALSTREAM3IVATIPROC pglNormalStream3ivATI;$/;"	v
pglNormalStream3sATI	shared/GLee.c	/^PFNGLNORMALSTREAM3SATIPROC pglNormalStream3sATI=_Lazy_glNormalStream3sATI;$/;"	v
pglNormalStream3sATI	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMALSTREAM3SATIPROC pglNormalStream3sATI;$/;"	v
pglNormalStream3svATI	shared/GLee.c	/^PFNGLNORMALSTREAM3SVATIPROC pglNormalStream3svATI=_Lazy_glNormalStream3svATI;$/;"	v
pglNormalStream3svATI	shared/GLee.h	/^GLEE_EXTERN PFNGLNORMALSTREAM3SVATIPROC pglNormalStream3svATI;$/;"	v
pglOrthofOES	shared/GLee.c	/^PFNGLORTHOFOESPROC pglOrthofOES=_Lazy_glOrthofOES;$/;"	v
pglOrthofOES	shared/GLee.h	/^GLEE_EXTERN PFNGLORTHOFOESPROC pglOrthofOES;$/;"	v
pglPNTrianglesfATI	shared/GLee.c	/^PFNGLPNTRIANGLESFATIPROC pglPNTrianglesfATI=_Lazy_glPNTrianglesfATI;$/;"	v
pglPNTrianglesfATI	shared/GLee.h	/^GLEE_EXTERN PFNGLPNTRIANGLESFATIPROC pglPNTrianglesfATI;$/;"	v
pglPNTrianglesiATI	shared/GLee.c	/^PFNGLPNTRIANGLESIATIPROC pglPNTrianglesiATI=_Lazy_glPNTrianglesiATI;$/;"	v
pglPNTrianglesiATI	shared/GLee.h	/^GLEE_EXTERN PFNGLPNTRIANGLESIATIPROC pglPNTrianglesiATI;$/;"	v
pglPassTexCoordATI	shared/GLee.c	/^PFNGLPASSTEXCOORDATIPROC pglPassTexCoordATI=_Lazy_glPassTexCoordATI;$/;"	v
pglPassTexCoordATI	shared/GLee.h	/^GLEE_EXTERN PFNGLPASSTEXCOORDATIPROC pglPassTexCoordATI;$/;"	v
pglPixelDataRangeNV	shared/GLee.c	/^PFNGLPIXELDATARANGENVPROC pglPixelDataRangeNV=_Lazy_glPixelDataRangeNV;$/;"	v
pglPixelDataRangeNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPIXELDATARANGENVPROC pglPixelDataRangeNV;$/;"	v
pglPixelTexGenParameterfSGIS	shared/GLee.c	/^PFNGLPIXELTEXGENPARAMETERFSGISPROC pglPixelTexGenParameterfSGIS=_Lazy_glPixelTexGenParameterfSGIS;$/;"	v
pglPixelTexGenParameterfSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLPIXELTEXGENPARAMETERFSGISPROC pglPixelTexGenParameterfSGIS;$/;"	v
pglPixelTexGenParameterfvSGIS	shared/GLee.c	/^PFNGLPIXELTEXGENPARAMETERFVSGISPROC pglPixelTexGenParameterfvSGIS=_Lazy_glPixelTexGenParameterfvSGIS;$/;"	v
pglPixelTexGenParameterfvSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLPIXELTEXGENPARAMETERFVSGISPROC pglPixelTexGenParameterfvSGIS;$/;"	v
pglPixelTexGenParameteriSGIS	shared/GLee.c	/^PFNGLPIXELTEXGENPARAMETERISGISPROC pglPixelTexGenParameteriSGIS=_Lazy_glPixelTexGenParameteriSGIS;$/;"	v
pglPixelTexGenParameteriSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLPIXELTEXGENPARAMETERISGISPROC pglPixelTexGenParameteriSGIS;$/;"	v
pglPixelTexGenParameterivSGIS	shared/GLee.c	/^PFNGLPIXELTEXGENPARAMETERIVSGISPROC pglPixelTexGenParameterivSGIS=_Lazy_glPixelTexGenParameterivSGIS;$/;"	v
pglPixelTexGenParameterivSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLPIXELTEXGENPARAMETERIVSGISPROC pglPixelTexGenParameterivSGIS;$/;"	v
pglPixelTexGenSGIX	shared/GLee.c	/^PFNGLPIXELTEXGENSGIXPROC pglPixelTexGenSGIX=_Lazy_glPixelTexGenSGIX;$/;"	v
pglPixelTexGenSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLPIXELTEXGENSGIXPROC pglPixelTexGenSGIX;$/;"	v
pglPixelTransformParameterfEXT	shared/GLee.c	/^PFNGLPIXELTRANSFORMPARAMETERFEXTPROC pglPixelTransformParameterfEXT=_Lazy_glPixelTransformParameterfEXT;$/;"	v
pglPixelTransformParameterfEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLPIXELTRANSFORMPARAMETERFEXTPROC pglPixelTransformParameterfEXT;$/;"	v
pglPixelTransformParameterfvEXT	shared/GLee.c	/^PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC pglPixelTransformParameterfvEXT=_Lazy_glPixelTransformParameterfvEXT;$/;"	v
pglPixelTransformParameterfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC pglPixelTransformParameterfvEXT;$/;"	v
pglPixelTransformParameteriEXT	shared/GLee.c	/^PFNGLPIXELTRANSFORMPARAMETERIEXTPROC pglPixelTransformParameteriEXT=_Lazy_glPixelTransformParameteriEXT;$/;"	v
pglPixelTransformParameteriEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLPIXELTRANSFORMPARAMETERIEXTPROC pglPixelTransformParameteriEXT;$/;"	v
pglPixelTransformParameterivEXT	shared/GLee.c	/^PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC pglPixelTransformParameterivEXT=_Lazy_glPixelTransformParameterivEXT;$/;"	v
pglPixelTransformParameterivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC pglPixelTransformParameterivEXT;$/;"	v
pglPointParameterf	shared/GLee.c	/^PFNGLPOINTPARAMETERFPROC pglPointParameterf=_Lazy_glPointParameterf;$/;"	v
pglPointParameterf	shared/GLee.h	/^GLEE_EXTERN PFNGLPOINTPARAMETERFPROC pglPointParameterf;$/;"	v
pglPointParameterfARB	shared/GLee.c	/^PFNGLPOINTPARAMETERFARBPROC pglPointParameterfARB=_Lazy_glPointParameterfARB;$/;"	v
pglPointParameterfARB	shared/GLee.h	/^GLEE_EXTERN PFNGLPOINTPARAMETERFARBPROC pglPointParameterfARB;$/;"	v
pglPointParameterfEXT	shared/GLee.c	/^PFNGLPOINTPARAMETERFEXTPROC pglPointParameterfEXT=_Lazy_glPointParameterfEXT;$/;"	v
pglPointParameterfEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLPOINTPARAMETERFEXTPROC pglPointParameterfEXT;$/;"	v
pglPointParameterfSGIS	shared/GLee.c	/^PFNGLPOINTPARAMETERFSGISPROC pglPointParameterfSGIS=_Lazy_glPointParameterfSGIS;$/;"	v
pglPointParameterfSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLPOINTPARAMETERFSGISPROC pglPointParameterfSGIS;$/;"	v
pglPointParameterfv	shared/GLee.c	/^PFNGLPOINTPARAMETERFVPROC pglPointParameterfv=_Lazy_glPointParameterfv;$/;"	v
pglPointParameterfv	shared/GLee.h	/^GLEE_EXTERN PFNGLPOINTPARAMETERFVPROC pglPointParameterfv;$/;"	v
pglPointParameterfvARB	shared/GLee.c	/^PFNGLPOINTPARAMETERFVARBPROC pglPointParameterfvARB=_Lazy_glPointParameterfvARB;$/;"	v
pglPointParameterfvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLPOINTPARAMETERFVARBPROC pglPointParameterfvARB;$/;"	v
pglPointParameterfvEXT	shared/GLee.c	/^PFNGLPOINTPARAMETERFVEXTPROC pglPointParameterfvEXT=_Lazy_glPointParameterfvEXT;$/;"	v
pglPointParameterfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLPOINTPARAMETERFVEXTPROC pglPointParameterfvEXT;$/;"	v
pglPointParameterfvSGIS	shared/GLee.c	/^PFNGLPOINTPARAMETERFVSGISPROC pglPointParameterfvSGIS=_Lazy_glPointParameterfvSGIS;$/;"	v
pglPointParameterfvSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLPOINTPARAMETERFVSGISPROC pglPointParameterfvSGIS;$/;"	v
pglPointParameteri	shared/GLee.c	/^PFNGLPOINTPARAMETERIPROC pglPointParameteri=_Lazy_glPointParameteri;$/;"	v
pglPointParameteri	shared/GLee.h	/^GLEE_EXTERN PFNGLPOINTPARAMETERIPROC pglPointParameteri;$/;"	v
pglPointParameteriNV	shared/GLee.c	/^PFNGLPOINTPARAMETERINVPROC pglPointParameteriNV=_Lazy_glPointParameteriNV;$/;"	v
pglPointParameteriNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPOINTPARAMETERINVPROC pglPointParameteriNV;$/;"	v
pglPointParameteriv	shared/GLee.c	/^PFNGLPOINTPARAMETERIVPROC pglPointParameteriv=_Lazy_glPointParameteriv;$/;"	v
pglPointParameteriv	shared/GLee.h	/^GLEE_EXTERN PFNGLPOINTPARAMETERIVPROC pglPointParameteriv;$/;"	v
pglPointParameterivNV	shared/GLee.c	/^PFNGLPOINTPARAMETERIVNVPROC pglPointParameterivNV=_Lazy_glPointParameterivNV;$/;"	v
pglPointParameterivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPOINTPARAMETERIVNVPROC pglPointParameterivNV;$/;"	v
pglPollAsyncSGIX	shared/GLee.c	/^PFNGLPOLLASYNCSGIXPROC pglPollAsyncSGIX=_Lazy_glPollAsyncSGIX;$/;"	v
pglPollAsyncSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLPOLLASYNCSGIXPROC pglPollAsyncSGIX;$/;"	v
pglPollInstrumentsSGIX	shared/GLee.c	/^PFNGLPOLLINSTRUMENTSSGIXPROC pglPollInstrumentsSGIX=_Lazy_glPollInstrumentsSGIX;$/;"	v
pglPollInstrumentsSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLPOLLINSTRUMENTSSGIXPROC pglPollInstrumentsSGIX;$/;"	v
pglPolygonOffsetEXT	shared/GLee.c	/^PFNGLPOLYGONOFFSETEXTPROC pglPolygonOffsetEXT=_Lazy_glPolygonOffsetEXT;$/;"	v
pglPolygonOffsetEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLPOLYGONOFFSETEXTPROC pglPolygonOffsetEXT;$/;"	v
pglPrimitiveRestartIndexNV	shared/GLee.c	/^PFNGLPRIMITIVERESTARTINDEXNVPROC pglPrimitiveRestartIndexNV=_Lazy_glPrimitiveRestartIndexNV;$/;"	v
pglPrimitiveRestartIndexNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPRIMITIVERESTARTINDEXNVPROC pglPrimitiveRestartIndexNV;$/;"	v
pglPrimitiveRestartNV	shared/GLee.c	/^PFNGLPRIMITIVERESTARTNVPROC pglPrimitiveRestartNV=_Lazy_glPrimitiveRestartNV;$/;"	v
pglPrimitiveRestartNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPRIMITIVERESTARTNVPROC pglPrimitiveRestartNV;$/;"	v
pglPrioritizeTexturesEXT	shared/GLee.c	/^PFNGLPRIORITIZETEXTURESEXTPROC pglPrioritizeTexturesEXT=_Lazy_glPrioritizeTexturesEXT;$/;"	v
pglPrioritizeTexturesEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLPRIORITIZETEXTURESEXTPROC pglPrioritizeTexturesEXT;$/;"	v
pglProgramBufferParametersIivNV	shared/GLee.c	/^PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC pglProgramBufferParametersIivNV=_Lazy_glProgramBufferParametersIivNV;$/;"	v
pglProgramBufferParametersIivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC pglProgramBufferParametersIivNV;$/;"	v
pglProgramBufferParametersIuivNV	shared/GLee.c	/^PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC pglProgramBufferParametersIuivNV=_Lazy_glProgramBufferParametersIuivNV;$/;"	v
pglProgramBufferParametersIuivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC pglProgramBufferParametersIuivNV;$/;"	v
pglProgramBufferParametersfvNV	shared/GLee.c	/^PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC pglProgramBufferParametersfvNV=_Lazy_glProgramBufferParametersfvNV;$/;"	v
pglProgramBufferParametersfvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC pglProgramBufferParametersfvNV;$/;"	v
pglProgramEnvParameter4dARB	shared/GLee.c	/^PFNGLPROGRAMENVPARAMETER4DARBPROC pglProgramEnvParameter4dARB=_Lazy_glProgramEnvParameter4dARB;$/;"	v
pglProgramEnvParameter4dARB	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMENVPARAMETER4DARBPROC pglProgramEnvParameter4dARB;$/;"	v
pglProgramEnvParameter4dvARB	shared/GLee.c	/^PFNGLPROGRAMENVPARAMETER4DVARBPROC pglProgramEnvParameter4dvARB=_Lazy_glProgramEnvParameter4dvARB;$/;"	v
pglProgramEnvParameter4dvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMENVPARAMETER4DVARBPROC pglProgramEnvParameter4dvARB;$/;"	v
pglProgramEnvParameter4fARB	shared/GLee.c	/^PFNGLPROGRAMENVPARAMETER4FARBPROC pglProgramEnvParameter4fARB=_Lazy_glProgramEnvParameter4fARB;$/;"	v
pglProgramEnvParameter4fARB	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMENVPARAMETER4FARBPROC pglProgramEnvParameter4fARB;$/;"	v
pglProgramEnvParameter4fvARB	shared/GLee.c	/^PFNGLPROGRAMENVPARAMETER4FVARBPROC pglProgramEnvParameter4fvARB=_Lazy_glProgramEnvParameter4fvARB;$/;"	v
pglProgramEnvParameter4fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMENVPARAMETER4FVARBPROC pglProgramEnvParameter4fvARB;$/;"	v
pglProgramEnvParameterI4iNV	shared/GLee.c	/^PFNGLPROGRAMENVPARAMETERI4INVPROC pglProgramEnvParameterI4iNV=_Lazy_glProgramEnvParameterI4iNV;$/;"	v
pglProgramEnvParameterI4iNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMENVPARAMETERI4INVPROC pglProgramEnvParameterI4iNV;$/;"	v
pglProgramEnvParameterI4ivNV	shared/GLee.c	/^PFNGLPROGRAMENVPARAMETERI4IVNVPROC pglProgramEnvParameterI4ivNV=_Lazy_glProgramEnvParameterI4ivNV;$/;"	v
pglProgramEnvParameterI4ivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMENVPARAMETERI4IVNVPROC pglProgramEnvParameterI4ivNV;$/;"	v
pglProgramEnvParameterI4uiNV	shared/GLee.c	/^PFNGLPROGRAMENVPARAMETERI4UINVPROC pglProgramEnvParameterI4uiNV=_Lazy_glProgramEnvParameterI4uiNV;$/;"	v
pglProgramEnvParameterI4uiNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMENVPARAMETERI4UINVPROC pglProgramEnvParameterI4uiNV;$/;"	v
pglProgramEnvParameterI4uivNV	shared/GLee.c	/^PFNGLPROGRAMENVPARAMETERI4UIVNVPROC pglProgramEnvParameterI4uivNV=_Lazy_glProgramEnvParameterI4uivNV;$/;"	v
pglProgramEnvParameterI4uivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMENVPARAMETERI4UIVNVPROC pglProgramEnvParameterI4uivNV;$/;"	v
pglProgramEnvParametersI4ivNV	shared/GLee.c	/^PFNGLPROGRAMENVPARAMETERSI4IVNVPROC pglProgramEnvParametersI4ivNV=_Lazy_glProgramEnvParametersI4ivNV;$/;"	v
pglProgramEnvParametersI4ivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMENVPARAMETERSI4IVNVPROC pglProgramEnvParametersI4ivNV;$/;"	v
pglProgramEnvParametersI4uivNV	shared/GLee.c	/^PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC pglProgramEnvParametersI4uivNV=_Lazy_glProgramEnvParametersI4uivNV;$/;"	v
pglProgramEnvParametersI4uivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC pglProgramEnvParametersI4uivNV;$/;"	v
pglProgramLocalParameter4dARB	shared/GLee.c	/^PFNGLPROGRAMLOCALPARAMETER4DARBPROC pglProgramLocalParameter4dARB=_Lazy_glProgramLocalParameter4dARB;$/;"	v
pglProgramLocalParameter4dARB	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMLOCALPARAMETER4DARBPROC pglProgramLocalParameter4dARB;$/;"	v
pglProgramLocalParameter4dvARB	shared/GLee.c	/^PFNGLPROGRAMLOCALPARAMETER4DVARBPROC pglProgramLocalParameter4dvARB=_Lazy_glProgramLocalParameter4dvARB;$/;"	v
pglProgramLocalParameter4dvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMLOCALPARAMETER4DVARBPROC pglProgramLocalParameter4dvARB;$/;"	v
pglProgramLocalParameter4fARB	shared/GLee.c	/^PFNGLPROGRAMLOCALPARAMETER4FARBPROC pglProgramLocalParameter4fARB=_Lazy_glProgramLocalParameter4fARB;$/;"	v
pglProgramLocalParameter4fARB	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMLOCALPARAMETER4FARBPROC pglProgramLocalParameter4fARB;$/;"	v
pglProgramLocalParameter4fvARB	shared/GLee.c	/^PFNGLPROGRAMLOCALPARAMETER4FVARBPROC pglProgramLocalParameter4fvARB=_Lazy_glProgramLocalParameter4fvARB;$/;"	v
pglProgramLocalParameter4fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMLOCALPARAMETER4FVARBPROC pglProgramLocalParameter4fvARB;$/;"	v
pglProgramLocalParameterI4iNV	shared/GLee.c	/^PFNGLPROGRAMLOCALPARAMETERI4INVPROC pglProgramLocalParameterI4iNV=_Lazy_glProgramLocalParameterI4iNV;$/;"	v
pglProgramLocalParameterI4iNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMLOCALPARAMETERI4INVPROC pglProgramLocalParameterI4iNV;$/;"	v
pglProgramLocalParameterI4ivNV	shared/GLee.c	/^PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC pglProgramLocalParameterI4ivNV=_Lazy_glProgramLocalParameterI4ivNV;$/;"	v
pglProgramLocalParameterI4ivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC pglProgramLocalParameterI4ivNV;$/;"	v
pglProgramLocalParameterI4uiNV	shared/GLee.c	/^PFNGLPROGRAMLOCALPARAMETERI4UINVPROC pglProgramLocalParameterI4uiNV=_Lazy_glProgramLocalParameterI4uiNV;$/;"	v
pglProgramLocalParameterI4uiNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMLOCALPARAMETERI4UINVPROC pglProgramLocalParameterI4uiNV;$/;"	v
pglProgramLocalParameterI4uivNV	shared/GLee.c	/^PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC pglProgramLocalParameterI4uivNV=_Lazy_glProgramLocalParameterI4uivNV;$/;"	v
pglProgramLocalParameterI4uivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC pglProgramLocalParameterI4uivNV;$/;"	v
pglProgramLocalParametersI4ivNV	shared/GLee.c	/^PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC pglProgramLocalParametersI4ivNV=_Lazy_glProgramLocalParametersI4ivNV;$/;"	v
pglProgramLocalParametersI4ivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC pglProgramLocalParametersI4ivNV;$/;"	v
pglProgramLocalParametersI4uivNV	shared/GLee.c	/^PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC pglProgramLocalParametersI4uivNV=_Lazy_glProgramLocalParametersI4uivNV;$/;"	v
pglProgramLocalParametersI4uivNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC pglProgramLocalParametersI4uivNV;$/;"	v
pglProgramNamedParameter4dNV	shared/GLee.c	/^PFNGLPROGRAMNAMEDPARAMETER4DNVPROC pglProgramNamedParameter4dNV=_Lazy_glProgramNamedParameter4dNV;$/;"	v
pglProgramNamedParameter4dNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMNAMEDPARAMETER4DNVPROC pglProgramNamedParameter4dNV;$/;"	v
pglProgramNamedParameter4dvNV	shared/GLee.c	/^PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC pglProgramNamedParameter4dvNV=_Lazy_glProgramNamedParameter4dvNV;$/;"	v
pglProgramNamedParameter4dvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC pglProgramNamedParameter4dvNV;$/;"	v
pglProgramNamedParameter4fNV	shared/GLee.c	/^PFNGLPROGRAMNAMEDPARAMETER4FNVPROC pglProgramNamedParameter4fNV=_Lazy_glProgramNamedParameter4fNV;$/;"	v
pglProgramNamedParameter4fNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMNAMEDPARAMETER4FNVPROC pglProgramNamedParameter4fNV;$/;"	v
pglProgramNamedParameter4fvNV	shared/GLee.c	/^PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC pglProgramNamedParameter4fvNV=_Lazy_glProgramNamedParameter4fvNV;$/;"	v
pglProgramNamedParameter4fvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC pglProgramNamedParameter4fvNV;$/;"	v
pglProgramParameter4dNV	shared/GLee.c	/^PFNGLPROGRAMPARAMETER4DNVPROC pglProgramParameter4dNV=_Lazy_glProgramParameter4dNV;$/;"	v
pglProgramParameter4dNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMPARAMETER4DNVPROC pglProgramParameter4dNV;$/;"	v
pglProgramParameter4dvNV	shared/GLee.c	/^PFNGLPROGRAMPARAMETER4DVNVPROC pglProgramParameter4dvNV=_Lazy_glProgramParameter4dvNV;$/;"	v
pglProgramParameter4dvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMPARAMETER4DVNVPROC pglProgramParameter4dvNV;$/;"	v
pglProgramParameter4fNV	shared/GLee.c	/^PFNGLPROGRAMPARAMETER4FNVPROC pglProgramParameter4fNV=_Lazy_glProgramParameter4fNV;$/;"	v
pglProgramParameter4fNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMPARAMETER4FNVPROC pglProgramParameter4fNV;$/;"	v
pglProgramParameter4fvNV	shared/GLee.c	/^PFNGLPROGRAMPARAMETER4FVNVPROC pglProgramParameter4fvNV=_Lazy_glProgramParameter4fvNV;$/;"	v
pglProgramParameter4fvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMPARAMETER4FVNVPROC pglProgramParameter4fvNV;$/;"	v
pglProgramParameteriEXT	shared/GLee.c	/^PFNGLPROGRAMPARAMETERIEXTPROC pglProgramParameteriEXT=_Lazy_glProgramParameteriEXT;$/;"	v
pglProgramParameteriEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMPARAMETERIEXTPROC pglProgramParameteriEXT;$/;"	v
pglProgramParameters4dvNV	shared/GLee.c	/^PFNGLPROGRAMPARAMETERS4DVNVPROC pglProgramParameters4dvNV=_Lazy_glProgramParameters4dvNV;$/;"	v
pglProgramParameters4dvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMPARAMETERS4DVNVPROC pglProgramParameters4dvNV;$/;"	v
pglProgramParameters4fvNV	shared/GLee.c	/^PFNGLPROGRAMPARAMETERS4FVNVPROC pglProgramParameters4fvNV=_Lazy_glProgramParameters4fvNV;$/;"	v
pglProgramParameters4fvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMPARAMETERS4FVNVPROC pglProgramParameters4fvNV;$/;"	v
pglProgramStringARB	shared/GLee.c	/^PFNGLPROGRAMSTRINGARBPROC pglProgramStringARB=_Lazy_glProgramStringARB;$/;"	v
pglProgramStringARB	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMSTRINGARBPROC pglProgramStringARB;$/;"	v
pglProgramVertexLimitNV	shared/GLee.c	/^PFNGLPROGRAMVERTEXLIMITNVPROC pglProgramVertexLimitNV=_Lazy_glProgramVertexLimitNV;$/;"	v
pglProgramVertexLimitNV	shared/GLee.h	/^GLEE_EXTERN PFNGLPROGRAMVERTEXLIMITNVPROC pglProgramVertexLimitNV;$/;"	v
pglReadInstrumentsSGIX	shared/GLee.c	/^PFNGLREADINSTRUMENTSSGIXPROC pglReadInstrumentsSGIX=_Lazy_glReadInstrumentsSGIX;$/;"	v
pglReadInstrumentsSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLREADINSTRUMENTSSGIXPROC pglReadInstrumentsSGIX;$/;"	v
pglReferencePlaneSGIX	shared/GLee.c	/^PFNGLREFERENCEPLANESGIXPROC pglReferencePlaneSGIX=_Lazy_glReferencePlaneSGIX;$/;"	v
pglReferencePlaneSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLREFERENCEPLANESGIXPROC pglReferencePlaneSGIX;$/;"	v
pglRenderbufferStorageEXT	shared/GLee.c	/^PFNGLRENDERBUFFERSTORAGEEXTPROC pglRenderbufferStorageEXT=_Lazy_glRenderbufferStorageEXT;$/;"	v
pglRenderbufferStorageEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLRENDERBUFFERSTORAGEEXTPROC pglRenderbufferStorageEXT;$/;"	v
pglRenderbufferStorageMultisampleCoverageNV	shared/GLee.c	/^PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC pglRenderbufferStorageMultisampleCoverageNV=_Lazy_glRenderbufferStorageMultisampleCoverageNV;$/;"	v
pglRenderbufferStorageMultisampleCoverageNV	shared/GLee.h	/^GLEE_EXTERN PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC pglRenderbufferStorageMultisampleCoverageNV;$/;"	v
pglRenderbufferStorageMultisampleEXT	shared/GLee.c	/^PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC pglRenderbufferStorageMultisampleEXT=_Lazy_glRenderbufferStorageMultisampleEXT;$/;"	v
pglRenderbufferStorageMultisampleEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC pglRenderbufferStorageMultisampleEXT;$/;"	v
pglReplacementCodePointerSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEPOINTERSUNPROC pglReplacementCodePointerSUN=_Lazy_glReplacementCodePointerSUN;$/;"	v
pglReplacementCodePointerSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEPOINTERSUNPROC pglReplacementCodePointerSUN;$/;"	v
pglReplacementCodeubSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUBSUNPROC pglReplacementCodeubSUN=_Lazy_glReplacementCodeubSUN;$/;"	v
pglReplacementCodeubSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUBSUNPROC pglReplacementCodeubSUN;$/;"	v
pglReplacementCodeubvSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUBVSUNPROC pglReplacementCodeubvSUN=_Lazy_glReplacementCodeubvSUN;$/;"	v
pglReplacementCodeubvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUBVSUNPROC pglReplacementCodeubvSUN;$/;"	v
pglReplacementCodeuiColor3fVertex3fSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC pglReplacementCodeuiColor3fVertex3fSUN=_Lazy_glReplacementCodeuiColor3fVertex3fSUN;$/;"	v
pglReplacementCodeuiColor3fVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC pglReplacementCodeuiColor3fVertex3fSUN;$/;"	v
pglReplacementCodeuiColor3fVertex3fvSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC pglReplacementCodeuiColor3fVertex3fvSUN=_Lazy_glReplacementCodeuiColor3fVertex3fvSUN;$/;"	v
pglReplacementCodeuiColor3fVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC pglReplacementCodeuiColor3fVertex3fvSUN;$/;"	v
pglReplacementCodeuiColor4fNormal3fVertex3fSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC pglReplacementCodeuiColor4fNormal3fVertex3fSUN=_Lazy_glReplacementCodeuiColor4fNormal3fVertex3fSUN;$/;"	v
pglReplacementCodeuiColor4fNormal3fVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC pglReplacementCodeuiColor4fNormal3fVertex3fSUN;$/;"	v
pglReplacementCodeuiColor4fNormal3fVertex3fvSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC pglReplacementCodeuiColor4fNormal3fVertex3fvSUN=_Lazy_glReplacementCodeuiColor4fNormal3fVertex3fvSUN;$/;"	v
pglReplacementCodeuiColor4fNormal3fVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC pglReplacementCodeuiColor4fNormal3fVertex3fvSUN;$/;"	v
pglReplacementCodeuiColor4ubVertex3fSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC pglReplacementCodeuiColor4ubVertex3fSUN=_Lazy_glReplacementCodeuiColor4ubVertex3fSUN;$/;"	v
pglReplacementCodeuiColor4ubVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC pglReplacementCodeuiColor4ubVertex3fSUN;$/;"	v
pglReplacementCodeuiColor4ubVertex3fvSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC pglReplacementCodeuiColor4ubVertex3fvSUN=_Lazy_glReplacementCodeuiColor4ubVertex3fvSUN;$/;"	v
pglReplacementCodeuiColor4ubVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC pglReplacementCodeuiColor4ubVertex3fvSUN;$/;"	v
pglReplacementCodeuiNormal3fVertex3fSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC pglReplacementCodeuiNormal3fVertex3fSUN=_Lazy_glReplacementCodeuiNormal3fVertex3fSUN;$/;"	v
pglReplacementCodeuiNormal3fVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC pglReplacementCodeuiNormal3fVertex3fSUN;$/;"	v
pglReplacementCodeuiNormal3fVertex3fvSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC pglReplacementCodeuiNormal3fVertex3fvSUN=_Lazy_glReplacementCodeuiNormal3fVertex3fvSUN;$/;"	v
pglReplacementCodeuiNormal3fVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC pglReplacementCodeuiNormal3fVertex3fvSUN;$/;"	v
pglReplacementCodeuiSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUISUNPROC pglReplacementCodeuiSUN=_Lazy_glReplacementCodeuiSUN;$/;"	v
pglReplacementCodeuiSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUISUNPROC pglReplacementCodeuiSUN;$/;"	v
pglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC pglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN=_Lazy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;$/;"	v
pglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC pglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;$/;"	v
pglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC pglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN=_Lazy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;$/;"	v
pglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC pglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;$/;"	v
pglReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC pglReplacementCodeuiTexCoord2fNormal3fVertex3fSUN=_Lazy_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;$/;"	v
pglReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC pglReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;$/;"	v
pglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC pglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN=_Lazy_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;$/;"	v
pglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC pglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;$/;"	v
pglReplacementCodeuiTexCoord2fVertex3fSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC pglReplacementCodeuiTexCoord2fVertex3fSUN=_Lazy_glReplacementCodeuiTexCoord2fVertex3fSUN;$/;"	v
pglReplacementCodeuiTexCoord2fVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC pglReplacementCodeuiTexCoord2fVertex3fSUN;$/;"	v
pglReplacementCodeuiTexCoord2fVertex3fvSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC pglReplacementCodeuiTexCoord2fVertex3fvSUN=_Lazy_glReplacementCodeuiTexCoord2fVertex3fvSUN;$/;"	v
pglReplacementCodeuiTexCoord2fVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC pglReplacementCodeuiTexCoord2fVertex3fvSUN;$/;"	v
pglReplacementCodeuiVertex3fSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC pglReplacementCodeuiVertex3fSUN=_Lazy_glReplacementCodeuiVertex3fSUN;$/;"	v
pglReplacementCodeuiVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC pglReplacementCodeuiVertex3fSUN;$/;"	v
pglReplacementCodeuiVertex3fvSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC pglReplacementCodeuiVertex3fvSUN=_Lazy_glReplacementCodeuiVertex3fvSUN;$/;"	v
pglReplacementCodeuiVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC pglReplacementCodeuiVertex3fvSUN;$/;"	v
pglReplacementCodeuivSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUIVSUNPROC pglReplacementCodeuivSUN=_Lazy_glReplacementCodeuivSUN;$/;"	v
pglReplacementCodeuivSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUIVSUNPROC pglReplacementCodeuivSUN;$/;"	v
pglReplacementCodeusSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUSSUNPROC pglReplacementCodeusSUN=_Lazy_glReplacementCodeusSUN;$/;"	v
pglReplacementCodeusSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUSSUNPROC pglReplacementCodeusSUN;$/;"	v
pglReplacementCodeusvSUN	shared/GLee.c	/^PFNGLREPLACEMENTCODEUSVSUNPROC pglReplacementCodeusvSUN=_Lazy_glReplacementCodeusvSUN;$/;"	v
pglReplacementCodeusvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLREPLACEMENTCODEUSVSUNPROC pglReplacementCodeusvSUN;$/;"	v
pglRequestResidentProgramsNV	shared/GLee.c	/^PFNGLREQUESTRESIDENTPROGRAMSNVPROC pglRequestResidentProgramsNV=_Lazy_glRequestResidentProgramsNV;$/;"	v
pglRequestResidentProgramsNV	shared/GLee.h	/^GLEE_EXTERN PFNGLREQUESTRESIDENTPROGRAMSNVPROC pglRequestResidentProgramsNV;$/;"	v
pglResetHistogram	shared/GLee.c	/^PFNGLRESETHISTOGRAMPROC pglResetHistogram=_Lazy_glResetHistogram;$/;"	v
pglResetHistogram	shared/GLee.h	/^GLEE_EXTERN PFNGLRESETHISTOGRAMPROC pglResetHistogram;$/;"	v
pglResetHistogramEXT	shared/GLee.c	/^PFNGLRESETHISTOGRAMEXTPROC pglResetHistogramEXT=_Lazy_glResetHistogramEXT;$/;"	v
pglResetHistogramEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLRESETHISTOGRAMEXTPROC pglResetHistogramEXT;$/;"	v
pglResetMinmax	shared/GLee.c	/^PFNGLRESETMINMAXPROC pglResetMinmax=_Lazy_glResetMinmax;$/;"	v
pglResetMinmax	shared/GLee.h	/^GLEE_EXTERN PFNGLRESETMINMAXPROC pglResetMinmax;$/;"	v
pglResetMinmaxEXT	shared/GLee.c	/^PFNGLRESETMINMAXEXTPROC pglResetMinmaxEXT=_Lazy_glResetMinmaxEXT;$/;"	v
pglResetMinmaxEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLRESETMINMAXEXTPROC pglResetMinmaxEXT;$/;"	v
pglResizeBuffersMESA	shared/GLee.c	/^PFNGLRESIZEBUFFERSMESAPROC pglResizeBuffersMESA=_Lazy_glResizeBuffersMESA;$/;"	v
pglResizeBuffersMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLRESIZEBUFFERSMESAPROC pglResizeBuffersMESA;$/;"	v
pglSampleCoverage	shared/GLee.c	/^PFNGLSAMPLECOVERAGEPROC pglSampleCoverage=_Lazy_glSampleCoverage;$/;"	v
pglSampleCoverage	shared/GLee.h	/^GLEE_EXTERN PFNGLSAMPLECOVERAGEPROC pglSampleCoverage;$/;"	v
pglSampleCoverageARB	shared/GLee.c	/^PFNGLSAMPLECOVERAGEARBPROC pglSampleCoverageARB=_Lazy_glSampleCoverageARB;$/;"	v
pglSampleCoverageARB	shared/GLee.h	/^GLEE_EXTERN PFNGLSAMPLECOVERAGEARBPROC pglSampleCoverageARB;$/;"	v
pglSampleMapATI	shared/GLee.c	/^PFNGLSAMPLEMAPATIPROC pglSampleMapATI=_Lazy_glSampleMapATI;$/;"	v
pglSampleMapATI	shared/GLee.h	/^GLEE_EXTERN PFNGLSAMPLEMAPATIPROC pglSampleMapATI;$/;"	v
pglSampleMaskEXT	shared/GLee.c	/^PFNGLSAMPLEMASKEXTPROC pglSampleMaskEXT=_Lazy_glSampleMaskEXT;$/;"	v
pglSampleMaskEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSAMPLEMASKEXTPROC pglSampleMaskEXT;$/;"	v
pglSampleMaskSGIS	shared/GLee.c	/^PFNGLSAMPLEMASKSGISPROC pglSampleMaskSGIS=_Lazy_glSampleMaskSGIS;$/;"	v
pglSampleMaskSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLSAMPLEMASKSGISPROC pglSampleMaskSGIS;$/;"	v
pglSamplePatternEXT	shared/GLee.c	/^PFNGLSAMPLEPATTERNEXTPROC pglSamplePatternEXT=_Lazy_glSamplePatternEXT;$/;"	v
pglSamplePatternEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSAMPLEPATTERNEXTPROC pglSamplePatternEXT;$/;"	v
pglSamplePatternSGIS	shared/GLee.c	/^PFNGLSAMPLEPATTERNSGISPROC pglSamplePatternSGIS=_Lazy_glSamplePatternSGIS;$/;"	v
pglSamplePatternSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLSAMPLEPATTERNSGISPROC pglSamplePatternSGIS;$/;"	v
pglSecondaryColor3b	shared/GLee.c	/^PFNGLSECONDARYCOLOR3BPROC pglSecondaryColor3b=_Lazy_glSecondaryColor3b;$/;"	v
pglSecondaryColor3b	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3BPROC pglSecondaryColor3b;$/;"	v
pglSecondaryColor3bEXT	shared/GLee.c	/^PFNGLSECONDARYCOLOR3BEXTPROC pglSecondaryColor3bEXT=_Lazy_glSecondaryColor3bEXT;$/;"	v
pglSecondaryColor3bEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3BEXTPROC pglSecondaryColor3bEXT;$/;"	v
pglSecondaryColor3bv	shared/GLee.c	/^PFNGLSECONDARYCOLOR3BVPROC pglSecondaryColor3bv=_Lazy_glSecondaryColor3bv;$/;"	v
pglSecondaryColor3bv	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3BVPROC pglSecondaryColor3bv;$/;"	v
pglSecondaryColor3bvEXT	shared/GLee.c	/^PFNGLSECONDARYCOLOR3BVEXTPROC pglSecondaryColor3bvEXT=_Lazy_glSecondaryColor3bvEXT;$/;"	v
pglSecondaryColor3bvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3BVEXTPROC pglSecondaryColor3bvEXT;$/;"	v
pglSecondaryColor3d	shared/GLee.c	/^PFNGLSECONDARYCOLOR3DPROC pglSecondaryColor3d=_Lazy_glSecondaryColor3d;$/;"	v
pglSecondaryColor3d	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3DPROC pglSecondaryColor3d;$/;"	v
pglSecondaryColor3dEXT	shared/GLee.c	/^PFNGLSECONDARYCOLOR3DEXTPROC pglSecondaryColor3dEXT=_Lazy_glSecondaryColor3dEXT;$/;"	v
pglSecondaryColor3dEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3DEXTPROC pglSecondaryColor3dEXT;$/;"	v
pglSecondaryColor3dv	shared/GLee.c	/^PFNGLSECONDARYCOLOR3DVPROC pglSecondaryColor3dv=_Lazy_glSecondaryColor3dv;$/;"	v
pglSecondaryColor3dv	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3DVPROC pglSecondaryColor3dv;$/;"	v
pglSecondaryColor3dvEXT	shared/GLee.c	/^PFNGLSECONDARYCOLOR3DVEXTPROC pglSecondaryColor3dvEXT=_Lazy_glSecondaryColor3dvEXT;$/;"	v
pglSecondaryColor3dvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3DVEXTPROC pglSecondaryColor3dvEXT;$/;"	v
pglSecondaryColor3f	shared/GLee.c	/^PFNGLSECONDARYCOLOR3FPROC pglSecondaryColor3f=_Lazy_glSecondaryColor3f;$/;"	v
pglSecondaryColor3f	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3FPROC pglSecondaryColor3f;$/;"	v
pglSecondaryColor3fEXT	shared/GLee.c	/^PFNGLSECONDARYCOLOR3FEXTPROC pglSecondaryColor3fEXT=_Lazy_glSecondaryColor3fEXT;$/;"	v
pglSecondaryColor3fEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3FEXTPROC pglSecondaryColor3fEXT;$/;"	v
pglSecondaryColor3fv	shared/GLee.c	/^PFNGLSECONDARYCOLOR3FVPROC pglSecondaryColor3fv=_Lazy_glSecondaryColor3fv;$/;"	v
pglSecondaryColor3fv	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3FVPROC pglSecondaryColor3fv;$/;"	v
pglSecondaryColor3fvEXT	shared/GLee.c	/^PFNGLSECONDARYCOLOR3FVEXTPROC pglSecondaryColor3fvEXT=_Lazy_glSecondaryColor3fvEXT;$/;"	v
pglSecondaryColor3fvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3FVEXTPROC pglSecondaryColor3fvEXT;$/;"	v
pglSecondaryColor3hNV	shared/GLee.c	/^PFNGLSECONDARYCOLOR3HNVPROC pglSecondaryColor3hNV=_Lazy_glSecondaryColor3hNV;$/;"	v
pglSecondaryColor3hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3HNVPROC pglSecondaryColor3hNV;$/;"	v
pglSecondaryColor3hvNV	shared/GLee.c	/^PFNGLSECONDARYCOLOR3HVNVPROC pglSecondaryColor3hvNV=_Lazy_glSecondaryColor3hvNV;$/;"	v
pglSecondaryColor3hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3HVNVPROC pglSecondaryColor3hvNV;$/;"	v
pglSecondaryColor3i	shared/GLee.c	/^PFNGLSECONDARYCOLOR3IPROC pglSecondaryColor3i=_Lazy_glSecondaryColor3i;$/;"	v
pglSecondaryColor3i	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3IPROC pglSecondaryColor3i;$/;"	v
pglSecondaryColor3iEXT	shared/GLee.c	/^PFNGLSECONDARYCOLOR3IEXTPROC pglSecondaryColor3iEXT=_Lazy_glSecondaryColor3iEXT;$/;"	v
pglSecondaryColor3iEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3IEXTPROC pglSecondaryColor3iEXT;$/;"	v
pglSecondaryColor3iv	shared/GLee.c	/^PFNGLSECONDARYCOLOR3IVPROC pglSecondaryColor3iv=_Lazy_glSecondaryColor3iv;$/;"	v
pglSecondaryColor3iv	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3IVPROC pglSecondaryColor3iv;$/;"	v
pglSecondaryColor3ivEXT	shared/GLee.c	/^PFNGLSECONDARYCOLOR3IVEXTPROC pglSecondaryColor3ivEXT=_Lazy_glSecondaryColor3ivEXT;$/;"	v
pglSecondaryColor3ivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3IVEXTPROC pglSecondaryColor3ivEXT;$/;"	v
pglSecondaryColor3s	shared/GLee.c	/^PFNGLSECONDARYCOLOR3SPROC pglSecondaryColor3s=_Lazy_glSecondaryColor3s;$/;"	v
pglSecondaryColor3s	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3SPROC pglSecondaryColor3s;$/;"	v
pglSecondaryColor3sEXT	shared/GLee.c	/^PFNGLSECONDARYCOLOR3SEXTPROC pglSecondaryColor3sEXT=_Lazy_glSecondaryColor3sEXT;$/;"	v
pglSecondaryColor3sEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3SEXTPROC pglSecondaryColor3sEXT;$/;"	v
pglSecondaryColor3sv	shared/GLee.c	/^PFNGLSECONDARYCOLOR3SVPROC pglSecondaryColor3sv=_Lazy_glSecondaryColor3sv;$/;"	v
pglSecondaryColor3sv	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3SVPROC pglSecondaryColor3sv;$/;"	v
pglSecondaryColor3svEXT	shared/GLee.c	/^PFNGLSECONDARYCOLOR3SVEXTPROC pglSecondaryColor3svEXT=_Lazy_glSecondaryColor3svEXT;$/;"	v
pglSecondaryColor3svEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3SVEXTPROC pglSecondaryColor3svEXT;$/;"	v
pglSecondaryColor3ub	shared/GLee.c	/^PFNGLSECONDARYCOLOR3UBPROC pglSecondaryColor3ub=_Lazy_glSecondaryColor3ub;$/;"	v
pglSecondaryColor3ub	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3UBPROC pglSecondaryColor3ub;$/;"	v
pglSecondaryColor3ubEXT	shared/GLee.c	/^PFNGLSECONDARYCOLOR3UBEXTPROC pglSecondaryColor3ubEXT=_Lazy_glSecondaryColor3ubEXT;$/;"	v
pglSecondaryColor3ubEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3UBEXTPROC pglSecondaryColor3ubEXT;$/;"	v
pglSecondaryColor3ubv	shared/GLee.c	/^PFNGLSECONDARYCOLOR3UBVPROC pglSecondaryColor3ubv=_Lazy_glSecondaryColor3ubv;$/;"	v
pglSecondaryColor3ubv	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3UBVPROC pglSecondaryColor3ubv;$/;"	v
pglSecondaryColor3ubvEXT	shared/GLee.c	/^PFNGLSECONDARYCOLOR3UBVEXTPROC pglSecondaryColor3ubvEXT=_Lazy_glSecondaryColor3ubvEXT;$/;"	v
pglSecondaryColor3ubvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3UBVEXTPROC pglSecondaryColor3ubvEXT;$/;"	v
pglSecondaryColor3ui	shared/GLee.c	/^PFNGLSECONDARYCOLOR3UIPROC pglSecondaryColor3ui=_Lazy_glSecondaryColor3ui;$/;"	v
pglSecondaryColor3ui	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3UIPROC pglSecondaryColor3ui;$/;"	v
pglSecondaryColor3uiEXT	shared/GLee.c	/^PFNGLSECONDARYCOLOR3UIEXTPROC pglSecondaryColor3uiEXT=_Lazy_glSecondaryColor3uiEXT;$/;"	v
pglSecondaryColor3uiEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3UIEXTPROC pglSecondaryColor3uiEXT;$/;"	v
pglSecondaryColor3uiv	shared/GLee.c	/^PFNGLSECONDARYCOLOR3UIVPROC pglSecondaryColor3uiv=_Lazy_glSecondaryColor3uiv;$/;"	v
pglSecondaryColor3uiv	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3UIVPROC pglSecondaryColor3uiv;$/;"	v
pglSecondaryColor3uivEXT	shared/GLee.c	/^PFNGLSECONDARYCOLOR3UIVEXTPROC pglSecondaryColor3uivEXT=_Lazy_glSecondaryColor3uivEXT;$/;"	v
pglSecondaryColor3uivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3UIVEXTPROC pglSecondaryColor3uivEXT;$/;"	v
pglSecondaryColor3us	shared/GLee.c	/^PFNGLSECONDARYCOLOR3USPROC pglSecondaryColor3us=_Lazy_glSecondaryColor3us;$/;"	v
pglSecondaryColor3us	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3USPROC pglSecondaryColor3us;$/;"	v
pglSecondaryColor3usEXT	shared/GLee.c	/^PFNGLSECONDARYCOLOR3USEXTPROC pglSecondaryColor3usEXT=_Lazy_glSecondaryColor3usEXT;$/;"	v
pglSecondaryColor3usEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3USEXTPROC pglSecondaryColor3usEXT;$/;"	v
pglSecondaryColor3usv	shared/GLee.c	/^PFNGLSECONDARYCOLOR3USVPROC pglSecondaryColor3usv=_Lazy_glSecondaryColor3usv;$/;"	v
pglSecondaryColor3usv	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3USVPROC pglSecondaryColor3usv;$/;"	v
pglSecondaryColor3usvEXT	shared/GLee.c	/^PFNGLSECONDARYCOLOR3USVEXTPROC pglSecondaryColor3usvEXT=_Lazy_glSecondaryColor3usvEXT;$/;"	v
pglSecondaryColor3usvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLOR3USVEXTPROC pglSecondaryColor3usvEXT;$/;"	v
pglSecondaryColorPointer	shared/GLee.c	/^PFNGLSECONDARYCOLORPOINTERPROC pglSecondaryColorPointer=_Lazy_glSecondaryColorPointer;$/;"	v
pglSecondaryColorPointer	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLORPOINTERPROC pglSecondaryColorPointer;$/;"	v
pglSecondaryColorPointerEXT	shared/GLee.c	/^PFNGLSECONDARYCOLORPOINTEREXTPROC pglSecondaryColorPointerEXT=_Lazy_glSecondaryColorPointerEXT;$/;"	v
pglSecondaryColorPointerEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLORPOINTEREXTPROC pglSecondaryColorPointerEXT;$/;"	v
pglSecondaryColorPointerListIBM	shared/GLee.c	/^PFNGLSECONDARYCOLORPOINTERLISTIBMPROC pglSecondaryColorPointerListIBM=_Lazy_glSecondaryColorPointerListIBM;$/;"	v
pglSecondaryColorPointerListIBM	shared/GLee.h	/^GLEE_EXTERN PFNGLSECONDARYCOLORPOINTERLISTIBMPROC pglSecondaryColorPointerListIBM;$/;"	v
pglSeparableFilter2D	shared/GLee.c	/^PFNGLSEPARABLEFILTER2DPROC pglSeparableFilter2D=_Lazy_glSeparableFilter2D;$/;"	v
pglSeparableFilter2D	shared/GLee.h	/^GLEE_EXTERN PFNGLSEPARABLEFILTER2DPROC pglSeparableFilter2D;$/;"	v
pglSeparableFilter2DEXT	shared/GLee.c	/^PFNGLSEPARABLEFILTER2DEXTPROC pglSeparableFilter2DEXT=_Lazy_glSeparableFilter2DEXT;$/;"	v
pglSeparableFilter2DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSEPARABLEFILTER2DEXTPROC pglSeparableFilter2DEXT;$/;"	v
pglSetFenceAPPLE	shared/GLee.c	/^PFNGLSETFENCEAPPLEPROC pglSetFenceAPPLE=_Lazy_glSetFenceAPPLE;$/;"	v
pglSetFenceAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLSETFENCEAPPLEPROC pglSetFenceAPPLE;$/;"	v
pglSetFenceNV	shared/GLee.c	/^PFNGLSETFENCENVPROC pglSetFenceNV=_Lazy_glSetFenceNV;$/;"	v
pglSetFenceNV	shared/GLee.h	/^GLEE_EXTERN PFNGLSETFENCENVPROC pglSetFenceNV;$/;"	v
pglSetFragmentShaderConstantATI	shared/GLee.c	/^PFNGLSETFRAGMENTSHADERCONSTANTATIPROC pglSetFragmentShaderConstantATI=_Lazy_glSetFragmentShaderConstantATI;$/;"	v
pglSetFragmentShaderConstantATI	shared/GLee.h	/^GLEE_EXTERN PFNGLSETFRAGMENTSHADERCONSTANTATIPROC pglSetFragmentShaderConstantATI;$/;"	v
pglSetInvariantEXT	shared/GLee.c	/^PFNGLSETINVARIANTEXTPROC pglSetInvariantEXT=_Lazy_glSetInvariantEXT;$/;"	v
pglSetInvariantEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSETINVARIANTEXTPROC pglSetInvariantEXT;$/;"	v
pglSetLocalConstantEXT	shared/GLee.c	/^PFNGLSETLOCALCONSTANTEXTPROC pglSetLocalConstantEXT=_Lazy_glSetLocalConstantEXT;$/;"	v
pglSetLocalConstantEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSETLOCALCONSTANTEXTPROC pglSetLocalConstantEXT;$/;"	v
pglShaderOp1EXT	shared/GLee.c	/^PFNGLSHADEROP1EXTPROC pglShaderOp1EXT=_Lazy_glShaderOp1EXT;$/;"	v
pglShaderOp1EXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSHADEROP1EXTPROC pglShaderOp1EXT;$/;"	v
pglShaderOp2EXT	shared/GLee.c	/^PFNGLSHADEROP2EXTPROC pglShaderOp2EXT=_Lazy_glShaderOp2EXT;$/;"	v
pglShaderOp2EXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSHADEROP2EXTPROC pglShaderOp2EXT;$/;"	v
pglShaderOp3EXT	shared/GLee.c	/^PFNGLSHADEROP3EXTPROC pglShaderOp3EXT=_Lazy_glShaderOp3EXT;$/;"	v
pglShaderOp3EXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSHADEROP3EXTPROC pglShaderOp3EXT;$/;"	v
pglShaderSource	shared/GLee.c	/^PFNGLSHADERSOURCEPROC pglShaderSource=_Lazy_glShaderSource;$/;"	v
pglShaderSource	shared/GLee.h	/^GLEE_EXTERN PFNGLSHADERSOURCEPROC pglShaderSource;$/;"	v
pglShaderSourceARB	shared/GLee.c	/^PFNGLSHADERSOURCEARBPROC pglShaderSourceARB=_Lazy_glShaderSourceARB;$/;"	v
pglShaderSourceARB	shared/GLee.h	/^GLEE_EXTERN PFNGLSHADERSOURCEARBPROC pglShaderSourceARB;$/;"	v
pglSharpenTexFuncSGIS	shared/GLee.c	/^PFNGLSHARPENTEXFUNCSGISPROC pglSharpenTexFuncSGIS=_Lazy_glSharpenTexFuncSGIS;$/;"	v
pglSharpenTexFuncSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLSHARPENTEXFUNCSGISPROC pglSharpenTexFuncSGIS;$/;"	v
pglSpriteParameterfSGIX	shared/GLee.c	/^PFNGLSPRITEPARAMETERFSGIXPROC pglSpriteParameterfSGIX=_Lazy_glSpriteParameterfSGIX;$/;"	v
pglSpriteParameterfSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLSPRITEPARAMETERFSGIXPROC pglSpriteParameterfSGIX;$/;"	v
pglSpriteParameterfvSGIX	shared/GLee.c	/^PFNGLSPRITEPARAMETERFVSGIXPROC pglSpriteParameterfvSGIX=_Lazy_glSpriteParameterfvSGIX;$/;"	v
pglSpriteParameterfvSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLSPRITEPARAMETERFVSGIXPROC pglSpriteParameterfvSGIX;$/;"	v
pglSpriteParameteriSGIX	shared/GLee.c	/^PFNGLSPRITEPARAMETERISGIXPROC pglSpriteParameteriSGIX=_Lazy_glSpriteParameteriSGIX;$/;"	v
pglSpriteParameteriSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLSPRITEPARAMETERISGIXPROC pglSpriteParameteriSGIX;$/;"	v
pglSpriteParameterivSGIX	shared/GLee.c	/^PFNGLSPRITEPARAMETERIVSGIXPROC pglSpriteParameterivSGIX=_Lazy_glSpriteParameterivSGIX;$/;"	v
pglSpriteParameterivSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLSPRITEPARAMETERIVSGIXPROC pglSpriteParameterivSGIX;$/;"	v
pglStartInstrumentsSGIX	shared/GLee.c	/^PFNGLSTARTINSTRUMENTSSGIXPROC pglStartInstrumentsSGIX=_Lazy_glStartInstrumentsSGIX;$/;"	v
pglStartInstrumentsSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLSTARTINSTRUMENTSSGIXPROC pglStartInstrumentsSGIX;$/;"	v
pglStencilFuncSeparate	shared/GLee.c	/^PFNGLSTENCILFUNCSEPARATEPROC pglStencilFuncSeparate=_Lazy_glStencilFuncSeparate;$/;"	v
pglStencilFuncSeparate	shared/GLee.h	/^GLEE_EXTERN PFNGLSTENCILFUNCSEPARATEPROC pglStencilFuncSeparate;$/;"	v
pglStencilFuncSeparateATI	shared/GLee.c	/^PFNGLSTENCILFUNCSEPARATEATIPROC pglStencilFuncSeparateATI=_Lazy_glStencilFuncSeparateATI;$/;"	v
pglStencilFuncSeparateATI	shared/GLee.h	/^GLEE_EXTERN PFNGLSTENCILFUNCSEPARATEATIPROC pglStencilFuncSeparateATI;$/;"	v
pglStencilMaskSeparate	shared/GLee.c	/^PFNGLSTENCILMASKSEPARATEPROC pglStencilMaskSeparate=_Lazy_glStencilMaskSeparate;$/;"	v
pglStencilMaskSeparate	shared/GLee.h	/^GLEE_EXTERN PFNGLSTENCILMASKSEPARATEPROC pglStencilMaskSeparate;$/;"	v
pglStencilOpSeparate	shared/GLee.c	/^PFNGLSTENCILOPSEPARATEPROC pglStencilOpSeparate=_Lazy_glStencilOpSeparate;$/;"	v
pglStencilOpSeparate	shared/GLee.h	/^GLEE_EXTERN PFNGLSTENCILOPSEPARATEPROC pglStencilOpSeparate;$/;"	v
pglStencilOpSeparateATI	shared/GLee.c	/^PFNGLSTENCILOPSEPARATEATIPROC pglStencilOpSeparateATI=_Lazy_glStencilOpSeparateATI;$/;"	v
pglStencilOpSeparateATI	shared/GLee.h	/^GLEE_EXTERN PFNGLSTENCILOPSEPARATEATIPROC pglStencilOpSeparateATI;$/;"	v
pglStopInstrumentsSGIX	shared/GLee.c	/^PFNGLSTOPINSTRUMENTSSGIXPROC pglStopInstrumentsSGIX=_Lazy_glStopInstrumentsSGIX;$/;"	v
pglStopInstrumentsSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLSTOPINSTRUMENTSSGIXPROC pglStopInstrumentsSGIX;$/;"	v
pglStringMarkerGREMEDY	shared/GLee.c	/^PFNGLSTRINGMARKERGREMEDYPROC pglStringMarkerGREMEDY=_Lazy_glStringMarkerGREMEDY;$/;"	v
pglStringMarkerGREMEDY	shared/GLee.h	/^GLEE_EXTERN PFNGLSTRINGMARKERGREMEDYPROC pglStringMarkerGREMEDY;$/;"	v
pglSwizzleEXT	shared/GLee.c	/^PFNGLSWIZZLEEXTPROC pglSwizzleEXT=_Lazy_glSwizzleEXT;$/;"	v
pglSwizzleEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLSWIZZLEEXTPROC pglSwizzleEXT;$/;"	v
pglTagSampleBufferSGIX	shared/GLee.c	/^PFNGLTAGSAMPLEBUFFERSGIXPROC pglTagSampleBufferSGIX=_Lazy_glTagSampleBufferSGIX;$/;"	v
pglTagSampleBufferSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLTAGSAMPLEBUFFERSGIXPROC pglTagSampleBufferSGIX;$/;"	v
pglTangent3bEXT	shared/GLee.c	/^PFNGLTANGENT3BEXTPROC pglTangent3bEXT=_Lazy_glTangent3bEXT;$/;"	v
pglTangent3bEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTANGENT3BEXTPROC pglTangent3bEXT;$/;"	v
pglTangent3bvEXT	shared/GLee.c	/^PFNGLTANGENT3BVEXTPROC pglTangent3bvEXT=_Lazy_glTangent3bvEXT;$/;"	v
pglTangent3bvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTANGENT3BVEXTPROC pglTangent3bvEXT;$/;"	v
pglTangent3dEXT	shared/GLee.c	/^PFNGLTANGENT3DEXTPROC pglTangent3dEXT=_Lazy_glTangent3dEXT;$/;"	v
pglTangent3dEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTANGENT3DEXTPROC pglTangent3dEXT;$/;"	v
pglTangent3dvEXT	shared/GLee.c	/^PFNGLTANGENT3DVEXTPROC pglTangent3dvEXT=_Lazy_glTangent3dvEXT;$/;"	v
pglTangent3dvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTANGENT3DVEXTPROC pglTangent3dvEXT;$/;"	v
pglTangent3fEXT	shared/GLee.c	/^PFNGLTANGENT3FEXTPROC pglTangent3fEXT=_Lazy_glTangent3fEXT;$/;"	v
pglTangent3fEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTANGENT3FEXTPROC pglTangent3fEXT;$/;"	v
pglTangent3fvEXT	shared/GLee.c	/^PFNGLTANGENT3FVEXTPROC pglTangent3fvEXT=_Lazy_glTangent3fvEXT;$/;"	v
pglTangent3fvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTANGENT3FVEXTPROC pglTangent3fvEXT;$/;"	v
pglTangent3iEXT	shared/GLee.c	/^PFNGLTANGENT3IEXTPROC pglTangent3iEXT=_Lazy_glTangent3iEXT;$/;"	v
pglTangent3iEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTANGENT3IEXTPROC pglTangent3iEXT;$/;"	v
pglTangent3ivEXT	shared/GLee.c	/^PFNGLTANGENT3IVEXTPROC pglTangent3ivEXT=_Lazy_glTangent3ivEXT;$/;"	v
pglTangent3ivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTANGENT3IVEXTPROC pglTangent3ivEXT;$/;"	v
pglTangent3sEXT	shared/GLee.c	/^PFNGLTANGENT3SEXTPROC pglTangent3sEXT=_Lazy_glTangent3sEXT;$/;"	v
pglTangent3sEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTANGENT3SEXTPROC pglTangent3sEXT;$/;"	v
pglTangent3svEXT	shared/GLee.c	/^PFNGLTANGENT3SVEXTPROC pglTangent3svEXT=_Lazy_glTangent3svEXT;$/;"	v
pglTangent3svEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTANGENT3SVEXTPROC pglTangent3svEXT;$/;"	v
pglTangentPointerEXT	shared/GLee.c	/^PFNGLTANGENTPOINTEREXTPROC pglTangentPointerEXT=_Lazy_glTangentPointerEXT;$/;"	v
pglTangentPointerEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTANGENTPOINTEREXTPROC pglTangentPointerEXT;$/;"	v
pglTbufferMask3DFX	shared/GLee.c	/^PFNGLTBUFFERMASK3DFXPROC pglTbufferMask3DFX=_Lazy_glTbufferMask3DFX;$/;"	v
pglTbufferMask3DFX	shared/GLee.h	/^GLEE_EXTERN PFNGLTBUFFERMASK3DFXPROC pglTbufferMask3DFX;$/;"	v
pglTestFenceAPPLE	shared/GLee.c	/^PFNGLTESTFENCEAPPLEPROC pglTestFenceAPPLE=_Lazy_glTestFenceAPPLE;$/;"	v
pglTestFenceAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLTESTFENCEAPPLEPROC pglTestFenceAPPLE;$/;"	v
pglTestFenceNV	shared/GLee.c	/^PFNGLTESTFENCENVPROC pglTestFenceNV=_Lazy_glTestFenceNV;$/;"	v
pglTestFenceNV	shared/GLee.h	/^GLEE_EXTERN PFNGLTESTFENCENVPROC pglTestFenceNV;$/;"	v
pglTestObjectAPPLE	shared/GLee.c	/^PFNGLTESTOBJECTAPPLEPROC pglTestObjectAPPLE=_Lazy_glTestObjectAPPLE;$/;"	v
pglTestObjectAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLTESTOBJECTAPPLEPROC pglTestObjectAPPLE;$/;"	v
pglTexBufferEXT	shared/GLee.c	/^PFNGLTEXBUFFEREXTPROC pglTexBufferEXT=_Lazy_glTexBufferEXT;$/;"	v
pglTexBufferEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXBUFFEREXTPROC pglTexBufferEXT;$/;"	v
pglTexBumpParameterfvATI	shared/GLee.c	/^PFNGLTEXBUMPPARAMETERFVATIPROC pglTexBumpParameterfvATI=_Lazy_glTexBumpParameterfvATI;$/;"	v
pglTexBumpParameterfvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXBUMPPARAMETERFVATIPROC pglTexBumpParameterfvATI;$/;"	v
pglTexBumpParameterivATI	shared/GLee.c	/^PFNGLTEXBUMPPARAMETERIVATIPROC pglTexBumpParameterivATI=_Lazy_glTexBumpParameterivATI;$/;"	v
pglTexBumpParameterivATI	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXBUMPPARAMETERIVATIPROC pglTexBumpParameterivATI;$/;"	v
pglTexCoord1hNV	shared/GLee.c	/^PFNGLTEXCOORD1HNVPROC pglTexCoord1hNV=_Lazy_glTexCoord1hNV;$/;"	v
pglTexCoord1hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD1HNVPROC pglTexCoord1hNV;$/;"	v
pglTexCoord1hvNV	shared/GLee.c	/^PFNGLTEXCOORD1HVNVPROC pglTexCoord1hvNV=_Lazy_glTexCoord1hvNV;$/;"	v
pglTexCoord1hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD1HVNVPROC pglTexCoord1hvNV;$/;"	v
pglTexCoord2fColor3fVertex3fSUN	shared/GLee.c	/^PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC pglTexCoord2fColor3fVertex3fSUN=_Lazy_glTexCoord2fColor3fVertex3fSUN;$/;"	v
pglTexCoord2fColor3fVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC pglTexCoord2fColor3fVertex3fSUN;$/;"	v
pglTexCoord2fColor3fVertex3fvSUN	shared/GLee.c	/^PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC pglTexCoord2fColor3fVertex3fvSUN=_Lazy_glTexCoord2fColor3fVertex3fvSUN;$/;"	v
pglTexCoord2fColor3fVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC pglTexCoord2fColor3fVertex3fvSUN;$/;"	v
pglTexCoord2fColor4fNormal3fVertex3fSUN	shared/GLee.c	/^PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC pglTexCoord2fColor4fNormal3fVertex3fSUN=_Lazy_glTexCoord2fColor4fNormal3fVertex3fSUN;$/;"	v
pglTexCoord2fColor4fNormal3fVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC pglTexCoord2fColor4fNormal3fVertex3fSUN;$/;"	v
pglTexCoord2fColor4fNormal3fVertex3fvSUN	shared/GLee.c	/^PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC pglTexCoord2fColor4fNormal3fVertex3fvSUN=_Lazy_glTexCoord2fColor4fNormal3fVertex3fvSUN;$/;"	v
pglTexCoord2fColor4fNormal3fVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC pglTexCoord2fColor4fNormal3fVertex3fvSUN;$/;"	v
pglTexCoord2fColor4ubVertex3fSUN	shared/GLee.c	/^PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC pglTexCoord2fColor4ubVertex3fSUN=_Lazy_glTexCoord2fColor4ubVertex3fSUN;$/;"	v
pglTexCoord2fColor4ubVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC pglTexCoord2fColor4ubVertex3fSUN;$/;"	v
pglTexCoord2fColor4ubVertex3fvSUN	shared/GLee.c	/^PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC pglTexCoord2fColor4ubVertex3fvSUN=_Lazy_glTexCoord2fColor4ubVertex3fvSUN;$/;"	v
pglTexCoord2fColor4ubVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC pglTexCoord2fColor4ubVertex3fvSUN;$/;"	v
pglTexCoord2fNormal3fVertex3fSUN	shared/GLee.c	/^PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC pglTexCoord2fNormal3fVertex3fSUN=_Lazy_glTexCoord2fNormal3fVertex3fSUN;$/;"	v
pglTexCoord2fNormal3fVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC pglTexCoord2fNormal3fVertex3fSUN;$/;"	v
pglTexCoord2fNormal3fVertex3fvSUN	shared/GLee.c	/^PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC pglTexCoord2fNormal3fVertex3fvSUN=_Lazy_glTexCoord2fNormal3fVertex3fvSUN;$/;"	v
pglTexCoord2fNormal3fVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC pglTexCoord2fNormal3fVertex3fvSUN;$/;"	v
pglTexCoord2fVertex3fSUN	shared/GLee.c	/^PFNGLTEXCOORD2FVERTEX3FSUNPROC pglTexCoord2fVertex3fSUN=_Lazy_glTexCoord2fVertex3fSUN;$/;"	v
pglTexCoord2fVertex3fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD2FVERTEX3FSUNPROC pglTexCoord2fVertex3fSUN;$/;"	v
pglTexCoord2fVertex3fvSUN	shared/GLee.c	/^PFNGLTEXCOORD2FVERTEX3FVSUNPROC pglTexCoord2fVertex3fvSUN=_Lazy_glTexCoord2fVertex3fvSUN;$/;"	v
pglTexCoord2fVertex3fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD2FVERTEX3FVSUNPROC pglTexCoord2fVertex3fvSUN;$/;"	v
pglTexCoord2hNV	shared/GLee.c	/^PFNGLTEXCOORD2HNVPROC pglTexCoord2hNV=_Lazy_glTexCoord2hNV;$/;"	v
pglTexCoord2hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD2HNVPROC pglTexCoord2hNV;$/;"	v
pglTexCoord2hvNV	shared/GLee.c	/^PFNGLTEXCOORD2HVNVPROC pglTexCoord2hvNV=_Lazy_glTexCoord2hvNV;$/;"	v
pglTexCoord2hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD2HVNVPROC pglTexCoord2hvNV;$/;"	v
pglTexCoord3hNV	shared/GLee.c	/^PFNGLTEXCOORD3HNVPROC pglTexCoord3hNV=_Lazy_glTexCoord3hNV;$/;"	v
pglTexCoord3hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD3HNVPROC pglTexCoord3hNV;$/;"	v
pglTexCoord3hvNV	shared/GLee.c	/^PFNGLTEXCOORD3HVNVPROC pglTexCoord3hvNV=_Lazy_glTexCoord3hvNV;$/;"	v
pglTexCoord3hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD3HVNVPROC pglTexCoord3hvNV;$/;"	v
pglTexCoord4fColor4fNormal3fVertex4fSUN	shared/GLee.c	/^PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC pglTexCoord4fColor4fNormal3fVertex4fSUN=_Lazy_glTexCoord4fColor4fNormal3fVertex4fSUN;$/;"	v
pglTexCoord4fColor4fNormal3fVertex4fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC pglTexCoord4fColor4fNormal3fVertex4fSUN;$/;"	v
pglTexCoord4fColor4fNormal3fVertex4fvSUN	shared/GLee.c	/^PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC pglTexCoord4fColor4fNormal3fVertex4fvSUN=_Lazy_glTexCoord4fColor4fNormal3fVertex4fvSUN;$/;"	v
pglTexCoord4fColor4fNormal3fVertex4fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC pglTexCoord4fColor4fNormal3fVertex4fvSUN;$/;"	v
pglTexCoord4fVertex4fSUN	shared/GLee.c	/^PFNGLTEXCOORD4FVERTEX4FSUNPROC pglTexCoord4fVertex4fSUN=_Lazy_glTexCoord4fVertex4fSUN;$/;"	v
pglTexCoord4fVertex4fSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD4FVERTEX4FSUNPROC pglTexCoord4fVertex4fSUN;$/;"	v
pglTexCoord4fVertex4fvSUN	shared/GLee.c	/^PFNGLTEXCOORD4FVERTEX4FVSUNPROC pglTexCoord4fVertex4fvSUN=_Lazy_glTexCoord4fVertex4fvSUN;$/;"	v
pglTexCoord4fVertex4fvSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD4FVERTEX4FVSUNPROC pglTexCoord4fVertex4fvSUN;$/;"	v
pglTexCoord4hNV	shared/GLee.c	/^PFNGLTEXCOORD4HNVPROC pglTexCoord4hNV=_Lazy_glTexCoord4hNV;$/;"	v
pglTexCoord4hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD4HNVPROC pglTexCoord4hNV;$/;"	v
pglTexCoord4hvNV	shared/GLee.c	/^PFNGLTEXCOORD4HVNVPROC pglTexCoord4hvNV=_Lazy_glTexCoord4hvNV;$/;"	v
pglTexCoord4hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORD4HVNVPROC pglTexCoord4hvNV;$/;"	v
pglTexCoordPointerEXT	shared/GLee.c	/^PFNGLTEXCOORDPOINTEREXTPROC pglTexCoordPointerEXT=_Lazy_glTexCoordPointerEXT;$/;"	v
pglTexCoordPointerEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORDPOINTEREXTPROC pglTexCoordPointerEXT;$/;"	v
pglTexCoordPointerListIBM	shared/GLee.c	/^PFNGLTEXCOORDPOINTERLISTIBMPROC pglTexCoordPointerListIBM=_Lazy_glTexCoordPointerListIBM;$/;"	v
pglTexCoordPointerListIBM	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORDPOINTERLISTIBMPROC pglTexCoordPointerListIBM;$/;"	v
pglTexCoordPointervINTEL	shared/GLee.c	/^PFNGLTEXCOORDPOINTERVINTELPROC pglTexCoordPointervINTEL=_Lazy_glTexCoordPointervINTEL;$/;"	v
pglTexCoordPointervINTEL	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXCOORDPOINTERVINTELPROC pglTexCoordPointervINTEL;$/;"	v
pglTexFilterFuncSGIS	shared/GLee.c	/^PFNGLTEXFILTERFUNCSGISPROC pglTexFilterFuncSGIS=_Lazy_glTexFilterFuncSGIS;$/;"	v
pglTexFilterFuncSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXFILTERFUNCSGISPROC pglTexFilterFuncSGIS;$/;"	v
pglTexImage3D	shared/GLee.c	/^PFNGLTEXIMAGE3DPROC pglTexImage3D=_Lazy_glTexImage3D;$/;"	v
pglTexImage3D	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXIMAGE3DPROC pglTexImage3D;$/;"	v
pglTexImage3DEXT	shared/GLee.c	/^PFNGLTEXIMAGE3DEXTPROC pglTexImage3DEXT=_Lazy_glTexImage3DEXT;$/;"	v
pglTexImage3DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXIMAGE3DEXTPROC pglTexImage3DEXT;$/;"	v
pglTexImage4DSGIS	shared/GLee.c	/^PFNGLTEXIMAGE4DSGISPROC pglTexImage4DSGIS=_Lazy_glTexImage4DSGIS;$/;"	v
pglTexImage4DSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXIMAGE4DSGISPROC pglTexImage4DSGIS;$/;"	v
pglTexParameterIivEXT	shared/GLee.c	/^PFNGLTEXPARAMETERIIVEXTPROC pglTexParameterIivEXT=_Lazy_glTexParameterIivEXT;$/;"	v
pglTexParameterIivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXPARAMETERIIVEXTPROC pglTexParameterIivEXT;$/;"	v
pglTexParameterIuivEXT	shared/GLee.c	/^PFNGLTEXPARAMETERIUIVEXTPROC pglTexParameterIuivEXT=_Lazy_glTexParameterIuivEXT;$/;"	v
pglTexParameterIuivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXPARAMETERIUIVEXTPROC pglTexParameterIuivEXT;$/;"	v
pglTexSubImage1DEXT	shared/GLee.c	/^PFNGLTEXSUBIMAGE1DEXTPROC pglTexSubImage1DEXT=_Lazy_glTexSubImage1DEXT;$/;"	v
pglTexSubImage1DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXSUBIMAGE1DEXTPROC pglTexSubImage1DEXT;$/;"	v
pglTexSubImage2DEXT	shared/GLee.c	/^PFNGLTEXSUBIMAGE2DEXTPROC pglTexSubImage2DEXT=_Lazy_glTexSubImage2DEXT;$/;"	v
pglTexSubImage2DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXSUBIMAGE2DEXTPROC pglTexSubImage2DEXT;$/;"	v
pglTexSubImage3D	shared/GLee.c	/^PFNGLTEXSUBIMAGE3DPROC pglTexSubImage3D=_Lazy_glTexSubImage3D;$/;"	v
pglTexSubImage3D	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXSUBIMAGE3DPROC pglTexSubImage3D;$/;"	v
pglTexSubImage3DEXT	shared/GLee.c	/^PFNGLTEXSUBIMAGE3DEXTPROC pglTexSubImage3DEXT=_Lazy_glTexSubImage3DEXT;$/;"	v
pglTexSubImage3DEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXSUBIMAGE3DEXTPROC pglTexSubImage3DEXT;$/;"	v
pglTexSubImage4DSGIS	shared/GLee.c	/^PFNGLTEXSUBIMAGE4DSGISPROC pglTexSubImage4DSGIS=_Lazy_glTexSubImage4DSGIS;$/;"	v
pglTexSubImage4DSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXSUBIMAGE4DSGISPROC pglTexSubImage4DSGIS;$/;"	v
pglTextureColorMaskSGIS	shared/GLee.c	/^PFNGLTEXTURECOLORMASKSGISPROC pglTextureColorMaskSGIS=_Lazy_glTextureColorMaskSGIS;$/;"	v
pglTextureColorMaskSGIS	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXTURECOLORMASKSGISPROC pglTextureColorMaskSGIS;$/;"	v
pglTextureLightEXT	shared/GLee.c	/^PFNGLTEXTURELIGHTEXTPROC pglTextureLightEXT=_Lazy_glTextureLightEXT;$/;"	v
pglTextureLightEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXTURELIGHTEXTPROC pglTextureLightEXT;$/;"	v
pglTextureMaterialEXT	shared/GLee.c	/^PFNGLTEXTUREMATERIALEXTPROC pglTextureMaterialEXT=_Lazy_glTextureMaterialEXT;$/;"	v
pglTextureMaterialEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXTUREMATERIALEXTPROC pglTextureMaterialEXT;$/;"	v
pglTextureNormalEXT	shared/GLee.c	/^PFNGLTEXTURENORMALEXTPROC pglTextureNormalEXT=_Lazy_glTextureNormalEXT;$/;"	v
pglTextureNormalEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLTEXTURENORMALEXTPROC pglTextureNormalEXT;$/;"	v
pglTrackMatrixNV	shared/GLee.c	/^PFNGLTRACKMATRIXNVPROC pglTrackMatrixNV=_Lazy_glTrackMatrixNV;$/;"	v
pglTrackMatrixNV	shared/GLee.h	/^GLEE_EXTERN PFNGLTRACKMATRIXNVPROC pglTrackMatrixNV;$/;"	v
pglTransformFeedbackAttribsNV	shared/GLee.c	/^PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC pglTransformFeedbackAttribsNV=_Lazy_glTransformFeedbackAttribsNV;$/;"	v
pglTransformFeedbackAttribsNV	shared/GLee.h	/^GLEE_EXTERN PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC pglTransformFeedbackAttribsNV;$/;"	v
pglTransformFeedbackVaryingsNV	shared/GLee.c	/^PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC pglTransformFeedbackVaryingsNV=_Lazy_glTransformFeedbackVaryingsNV;$/;"	v
pglTransformFeedbackVaryingsNV	shared/GLee.h	/^GLEE_EXTERN PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC pglTransformFeedbackVaryingsNV;$/;"	v
pglUniform1f	shared/GLee.c	/^PFNGLUNIFORM1FPROC pglUniform1f=_Lazy_glUniform1f;$/;"	v
pglUniform1f	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM1FPROC pglUniform1f;$/;"	v
pglUniform1fARB	shared/GLee.c	/^PFNGLUNIFORM1FARBPROC pglUniform1fARB=_Lazy_glUniform1fARB;$/;"	v
pglUniform1fARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM1FARBPROC pglUniform1fARB;$/;"	v
pglUniform1fv	shared/GLee.c	/^PFNGLUNIFORM1FVPROC pglUniform1fv=_Lazy_glUniform1fv;$/;"	v
pglUniform1fv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM1FVPROC pglUniform1fv;$/;"	v
pglUniform1fvARB	shared/GLee.c	/^PFNGLUNIFORM1FVARBPROC pglUniform1fvARB=_Lazy_glUniform1fvARB;$/;"	v
pglUniform1fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM1FVARBPROC pglUniform1fvARB;$/;"	v
pglUniform1i	shared/GLee.c	/^PFNGLUNIFORM1IPROC pglUniform1i=_Lazy_glUniform1i;$/;"	v
pglUniform1i	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM1IPROC pglUniform1i;$/;"	v
pglUniform1iARB	shared/GLee.c	/^PFNGLUNIFORM1IARBPROC pglUniform1iARB=_Lazy_glUniform1iARB;$/;"	v
pglUniform1iARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM1IARBPROC pglUniform1iARB;$/;"	v
pglUniform1iv	shared/GLee.c	/^PFNGLUNIFORM1IVPROC pglUniform1iv=_Lazy_glUniform1iv;$/;"	v
pglUniform1iv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM1IVPROC pglUniform1iv;$/;"	v
pglUniform1ivARB	shared/GLee.c	/^PFNGLUNIFORM1IVARBPROC pglUniform1ivARB=_Lazy_glUniform1ivARB;$/;"	v
pglUniform1ivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM1IVARBPROC pglUniform1ivARB;$/;"	v
pglUniform1uiEXT	shared/GLee.c	/^PFNGLUNIFORM1UIEXTPROC pglUniform1uiEXT=_Lazy_glUniform1uiEXT;$/;"	v
pglUniform1uiEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM1UIEXTPROC pglUniform1uiEXT;$/;"	v
pglUniform1uivEXT	shared/GLee.c	/^PFNGLUNIFORM1UIVEXTPROC pglUniform1uivEXT=_Lazy_glUniform1uivEXT;$/;"	v
pglUniform1uivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM1UIVEXTPROC pglUniform1uivEXT;$/;"	v
pglUniform2f	shared/GLee.c	/^PFNGLUNIFORM2FPROC pglUniform2f=_Lazy_glUniform2f;$/;"	v
pglUniform2f	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM2FPROC pglUniform2f;$/;"	v
pglUniform2fARB	shared/GLee.c	/^PFNGLUNIFORM2FARBPROC pglUniform2fARB=_Lazy_glUniform2fARB;$/;"	v
pglUniform2fARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM2FARBPROC pglUniform2fARB;$/;"	v
pglUniform2fv	shared/GLee.c	/^PFNGLUNIFORM2FVPROC pglUniform2fv=_Lazy_glUniform2fv;$/;"	v
pglUniform2fv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM2FVPROC pglUniform2fv;$/;"	v
pglUniform2fvARB	shared/GLee.c	/^PFNGLUNIFORM2FVARBPROC pglUniform2fvARB=_Lazy_glUniform2fvARB;$/;"	v
pglUniform2fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM2FVARBPROC pglUniform2fvARB;$/;"	v
pglUniform2i	shared/GLee.c	/^PFNGLUNIFORM2IPROC pglUniform2i=_Lazy_glUniform2i;$/;"	v
pglUniform2i	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM2IPROC pglUniform2i;$/;"	v
pglUniform2iARB	shared/GLee.c	/^PFNGLUNIFORM2IARBPROC pglUniform2iARB=_Lazy_glUniform2iARB;$/;"	v
pglUniform2iARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM2IARBPROC pglUniform2iARB;$/;"	v
pglUniform2iv	shared/GLee.c	/^PFNGLUNIFORM2IVPROC pglUniform2iv=_Lazy_glUniform2iv;$/;"	v
pglUniform2iv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM2IVPROC pglUniform2iv;$/;"	v
pglUniform2ivARB	shared/GLee.c	/^PFNGLUNIFORM2IVARBPROC pglUniform2ivARB=_Lazy_glUniform2ivARB;$/;"	v
pglUniform2ivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM2IVARBPROC pglUniform2ivARB;$/;"	v
pglUniform2uiEXT	shared/GLee.c	/^PFNGLUNIFORM2UIEXTPROC pglUniform2uiEXT=_Lazy_glUniform2uiEXT;$/;"	v
pglUniform2uiEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM2UIEXTPROC pglUniform2uiEXT;$/;"	v
pglUniform2uivEXT	shared/GLee.c	/^PFNGLUNIFORM2UIVEXTPROC pglUniform2uivEXT=_Lazy_glUniform2uivEXT;$/;"	v
pglUniform2uivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM2UIVEXTPROC pglUniform2uivEXT;$/;"	v
pglUniform3f	shared/GLee.c	/^PFNGLUNIFORM3FPROC pglUniform3f=_Lazy_glUniform3f;$/;"	v
pglUniform3f	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM3FPROC pglUniform3f;$/;"	v
pglUniform3fARB	shared/GLee.c	/^PFNGLUNIFORM3FARBPROC pglUniform3fARB=_Lazy_glUniform3fARB;$/;"	v
pglUniform3fARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM3FARBPROC pglUniform3fARB;$/;"	v
pglUniform3fv	shared/GLee.c	/^PFNGLUNIFORM3FVPROC pglUniform3fv=_Lazy_glUniform3fv;$/;"	v
pglUniform3fv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM3FVPROC pglUniform3fv;$/;"	v
pglUniform3fvARB	shared/GLee.c	/^PFNGLUNIFORM3FVARBPROC pglUniform3fvARB=_Lazy_glUniform3fvARB;$/;"	v
pglUniform3fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM3FVARBPROC pglUniform3fvARB;$/;"	v
pglUniform3i	shared/GLee.c	/^PFNGLUNIFORM3IPROC pglUniform3i=_Lazy_glUniform3i;$/;"	v
pglUniform3i	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM3IPROC pglUniform3i;$/;"	v
pglUniform3iARB	shared/GLee.c	/^PFNGLUNIFORM3IARBPROC pglUniform3iARB=_Lazy_glUniform3iARB;$/;"	v
pglUniform3iARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM3IARBPROC pglUniform3iARB;$/;"	v
pglUniform3iv	shared/GLee.c	/^PFNGLUNIFORM3IVPROC pglUniform3iv=_Lazy_glUniform3iv;$/;"	v
pglUniform3iv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM3IVPROC pglUniform3iv;$/;"	v
pglUniform3ivARB	shared/GLee.c	/^PFNGLUNIFORM3IVARBPROC pglUniform3ivARB=_Lazy_glUniform3ivARB;$/;"	v
pglUniform3ivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM3IVARBPROC pglUniform3ivARB;$/;"	v
pglUniform3uiEXT	shared/GLee.c	/^PFNGLUNIFORM3UIEXTPROC pglUniform3uiEXT=_Lazy_glUniform3uiEXT;$/;"	v
pglUniform3uiEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM3UIEXTPROC pglUniform3uiEXT;$/;"	v
pglUniform3uivEXT	shared/GLee.c	/^PFNGLUNIFORM3UIVEXTPROC pglUniform3uivEXT=_Lazy_glUniform3uivEXT;$/;"	v
pglUniform3uivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM3UIVEXTPROC pglUniform3uivEXT;$/;"	v
pglUniform4f	shared/GLee.c	/^PFNGLUNIFORM4FPROC pglUniform4f=_Lazy_glUniform4f;$/;"	v
pglUniform4f	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM4FPROC pglUniform4f;$/;"	v
pglUniform4fARB	shared/GLee.c	/^PFNGLUNIFORM4FARBPROC pglUniform4fARB=_Lazy_glUniform4fARB;$/;"	v
pglUniform4fARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM4FARBPROC pglUniform4fARB;$/;"	v
pglUniform4fv	shared/GLee.c	/^PFNGLUNIFORM4FVPROC pglUniform4fv=_Lazy_glUniform4fv;$/;"	v
pglUniform4fv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM4FVPROC pglUniform4fv;$/;"	v
pglUniform4fvARB	shared/GLee.c	/^PFNGLUNIFORM4FVARBPROC pglUniform4fvARB=_Lazy_glUniform4fvARB;$/;"	v
pglUniform4fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM4FVARBPROC pglUniform4fvARB;$/;"	v
pglUniform4i	shared/GLee.c	/^PFNGLUNIFORM4IPROC pglUniform4i=_Lazy_glUniform4i;$/;"	v
pglUniform4i	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM4IPROC pglUniform4i;$/;"	v
pglUniform4iARB	shared/GLee.c	/^PFNGLUNIFORM4IARBPROC pglUniform4iARB=_Lazy_glUniform4iARB;$/;"	v
pglUniform4iARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM4IARBPROC pglUniform4iARB;$/;"	v
pglUniform4iv	shared/GLee.c	/^PFNGLUNIFORM4IVPROC pglUniform4iv=_Lazy_glUniform4iv;$/;"	v
pglUniform4iv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM4IVPROC pglUniform4iv;$/;"	v
pglUniform4ivARB	shared/GLee.c	/^PFNGLUNIFORM4IVARBPROC pglUniform4ivARB=_Lazy_glUniform4ivARB;$/;"	v
pglUniform4ivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM4IVARBPROC pglUniform4ivARB;$/;"	v
pglUniform4uiEXT	shared/GLee.c	/^PFNGLUNIFORM4UIEXTPROC pglUniform4uiEXT=_Lazy_glUniform4uiEXT;$/;"	v
pglUniform4uiEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM4UIEXTPROC pglUniform4uiEXT;$/;"	v
pglUniform4uivEXT	shared/GLee.c	/^PFNGLUNIFORM4UIVEXTPROC pglUniform4uivEXT=_Lazy_glUniform4uivEXT;$/;"	v
pglUniform4uivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORM4UIVEXTPROC pglUniform4uivEXT;$/;"	v
pglUniformBufferEXT	shared/GLee.c	/^PFNGLUNIFORMBUFFEREXTPROC pglUniformBufferEXT=_Lazy_glUniformBufferEXT;$/;"	v
pglUniformBufferEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORMBUFFEREXTPROC pglUniformBufferEXT;$/;"	v
pglUniformMatrix2fv	shared/GLee.c	/^PFNGLUNIFORMMATRIX2FVPROC pglUniformMatrix2fv=_Lazy_glUniformMatrix2fv;$/;"	v
pglUniformMatrix2fv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORMMATRIX2FVPROC pglUniformMatrix2fv;$/;"	v
pglUniformMatrix2fvARB	shared/GLee.c	/^PFNGLUNIFORMMATRIX2FVARBPROC pglUniformMatrix2fvARB=_Lazy_glUniformMatrix2fvARB;$/;"	v
pglUniformMatrix2fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORMMATRIX2FVARBPROC pglUniformMatrix2fvARB;$/;"	v
pglUniformMatrix2x3fv	shared/GLee.c	/^PFNGLUNIFORMMATRIX2X3FVPROC pglUniformMatrix2x3fv=_Lazy_glUniformMatrix2x3fv;$/;"	v
pglUniformMatrix2x3fv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORMMATRIX2X3FVPROC pglUniformMatrix2x3fv;$/;"	v
pglUniformMatrix2x4fv	shared/GLee.c	/^PFNGLUNIFORMMATRIX2X4FVPROC pglUniformMatrix2x4fv=_Lazy_glUniformMatrix2x4fv;$/;"	v
pglUniformMatrix2x4fv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORMMATRIX2X4FVPROC pglUniformMatrix2x4fv;$/;"	v
pglUniformMatrix3fv	shared/GLee.c	/^PFNGLUNIFORMMATRIX3FVPROC pglUniformMatrix3fv=_Lazy_glUniformMatrix3fv;$/;"	v
pglUniformMatrix3fv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORMMATRIX3FVPROC pglUniformMatrix3fv;$/;"	v
pglUniformMatrix3fvARB	shared/GLee.c	/^PFNGLUNIFORMMATRIX3FVARBPROC pglUniformMatrix3fvARB=_Lazy_glUniformMatrix3fvARB;$/;"	v
pglUniformMatrix3fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORMMATRIX3FVARBPROC pglUniformMatrix3fvARB;$/;"	v
pglUniformMatrix3x2fv	shared/GLee.c	/^PFNGLUNIFORMMATRIX3X2FVPROC pglUniformMatrix3x2fv=_Lazy_glUniformMatrix3x2fv;$/;"	v
pglUniformMatrix3x2fv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORMMATRIX3X2FVPROC pglUniformMatrix3x2fv;$/;"	v
pglUniformMatrix3x4fv	shared/GLee.c	/^PFNGLUNIFORMMATRIX3X4FVPROC pglUniformMatrix3x4fv=_Lazy_glUniformMatrix3x4fv;$/;"	v
pglUniformMatrix3x4fv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORMMATRIX3X4FVPROC pglUniformMatrix3x4fv;$/;"	v
pglUniformMatrix4fv	shared/GLee.c	/^PFNGLUNIFORMMATRIX4FVPROC pglUniformMatrix4fv=_Lazy_glUniformMatrix4fv;$/;"	v
pglUniformMatrix4fv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORMMATRIX4FVPROC pglUniformMatrix4fv;$/;"	v
pglUniformMatrix4fvARB	shared/GLee.c	/^PFNGLUNIFORMMATRIX4FVARBPROC pglUniformMatrix4fvARB=_Lazy_glUniformMatrix4fvARB;$/;"	v
pglUniformMatrix4fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORMMATRIX4FVARBPROC pglUniformMatrix4fvARB;$/;"	v
pglUniformMatrix4x2fv	shared/GLee.c	/^PFNGLUNIFORMMATRIX4X2FVPROC pglUniformMatrix4x2fv=_Lazy_glUniformMatrix4x2fv;$/;"	v
pglUniformMatrix4x2fv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORMMATRIX4X2FVPROC pglUniformMatrix4x2fv;$/;"	v
pglUniformMatrix4x3fv	shared/GLee.c	/^PFNGLUNIFORMMATRIX4X3FVPROC pglUniformMatrix4x3fv=_Lazy_glUniformMatrix4x3fv;$/;"	v
pglUniformMatrix4x3fv	shared/GLee.h	/^GLEE_EXTERN PFNGLUNIFORMMATRIX4X3FVPROC pglUniformMatrix4x3fv;$/;"	v
pglUnlockArraysEXT	shared/GLee.c	/^PFNGLUNLOCKARRAYSEXTPROC pglUnlockArraysEXT=_Lazy_glUnlockArraysEXT;$/;"	v
pglUnlockArraysEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLUNLOCKARRAYSEXTPROC pglUnlockArraysEXT;$/;"	v
pglUnmapBuffer	shared/GLee.c	/^PFNGLUNMAPBUFFERPROC pglUnmapBuffer=_Lazy_glUnmapBuffer;$/;"	v
pglUnmapBuffer	shared/GLee.h	/^GLEE_EXTERN PFNGLUNMAPBUFFERPROC pglUnmapBuffer;$/;"	v
pglUnmapBufferARB	shared/GLee.c	/^PFNGLUNMAPBUFFERARBPROC pglUnmapBufferARB=_Lazy_glUnmapBufferARB;$/;"	v
pglUnmapBufferARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUNMAPBUFFERARBPROC pglUnmapBufferARB;$/;"	v
pglUnmapObjectBufferATI	shared/GLee.c	/^PFNGLUNMAPOBJECTBUFFERATIPROC pglUnmapObjectBufferATI=_Lazy_glUnmapObjectBufferATI;$/;"	v
pglUnmapObjectBufferATI	shared/GLee.h	/^GLEE_EXTERN PFNGLUNMAPOBJECTBUFFERATIPROC pglUnmapObjectBufferATI;$/;"	v
pglUpdateObjectBufferATI	shared/GLee.c	/^PFNGLUPDATEOBJECTBUFFERATIPROC pglUpdateObjectBufferATI=_Lazy_glUpdateObjectBufferATI;$/;"	v
pglUpdateObjectBufferATI	shared/GLee.h	/^GLEE_EXTERN PFNGLUPDATEOBJECTBUFFERATIPROC pglUpdateObjectBufferATI;$/;"	v
pglUseProgram	shared/GLee.c	/^PFNGLUSEPROGRAMPROC pglUseProgram=_Lazy_glUseProgram;$/;"	v
pglUseProgram	shared/GLee.h	/^GLEE_EXTERN PFNGLUSEPROGRAMPROC pglUseProgram;$/;"	v
pglUseProgramObjectARB	shared/GLee.c	/^PFNGLUSEPROGRAMOBJECTARBPROC pglUseProgramObjectARB=_Lazy_glUseProgramObjectARB;$/;"	v
pglUseProgramObjectARB	shared/GLee.h	/^GLEE_EXTERN PFNGLUSEPROGRAMOBJECTARBPROC pglUseProgramObjectARB;$/;"	v
pglValidateProgram	shared/GLee.c	/^PFNGLVALIDATEPROGRAMPROC pglValidateProgram=_Lazy_glValidateProgram;$/;"	v
pglValidateProgram	shared/GLee.h	/^GLEE_EXTERN PFNGLVALIDATEPROGRAMPROC pglValidateProgram;$/;"	v
pglValidateProgramARB	shared/GLee.c	/^PFNGLVALIDATEPROGRAMARBPROC pglValidateProgramARB=_Lazy_glValidateProgramARB;$/;"	v
pglValidateProgramARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVALIDATEPROGRAMARBPROC pglValidateProgramARB;$/;"	v
pglVariantArrayObjectATI	shared/GLee.c	/^PFNGLVARIANTARRAYOBJECTATIPROC pglVariantArrayObjectATI=_Lazy_glVariantArrayObjectATI;$/;"	v
pglVariantArrayObjectATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVARIANTARRAYOBJECTATIPROC pglVariantArrayObjectATI;$/;"	v
pglVariantPointerEXT	shared/GLee.c	/^PFNGLVARIANTPOINTEREXTPROC pglVariantPointerEXT=_Lazy_glVariantPointerEXT;$/;"	v
pglVariantPointerEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVARIANTPOINTEREXTPROC pglVariantPointerEXT;$/;"	v
pglVariantbvEXT	shared/GLee.c	/^PFNGLVARIANTBVEXTPROC pglVariantbvEXT=_Lazy_glVariantbvEXT;$/;"	v
pglVariantbvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVARIANTBVEXTPROC pglVariantbvEXT;$/;"	v
pglVariantdvEXT	shared/GLee.c	/^PFNGLVARIANTDVEXTPROC pglVariantdvEXT=_Lazy_glVariantdvEXT;$/;"	v
pglVariantdvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVARIANTDVEXTPROC pglVariantdvEXT;$/;"	v
pglVariantfvEXT	shared/GLee.c	/^PFNGLVARIANTFVEXTPROC pglVariantfvEXT=_Lazy_glVariantfvEXT;$/;"	v
pglVariantfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVARIANTFVEXTPROC pglVariantfvEXT;$/;"	v
pglVariantivEXT	shared/GLee.c	/^PFNGLVARIANTIVEXTPROC pglVariantivEXT=_Lazy_glVariantivEXT;$/;"	v
pglVariantivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVARIANTIVEXTPROC pglVariantivEXT;$/;"	v
pglVariantsvEXT	shared/GLee.c	/^PFNGLVARIANTSVEXTPROC pglVariantsvEXT=_Lazy_glVariantsvEXT;$/;"	v
pglVariantsvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVARIANTSVEXTPROC pglVariantsvEXT;$/;"	v
pglVariantubvEXT	shared/GLee.c	/^PFNGLVARIANTUBVEXTPROC pglVariantubvEXT=_Lazy_glVariantubvEXT;$/;"	v
pglVariantubvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVARIANTUBVEXTPROC pglVariantubvEXT;$/;"	v
pglVariantuivEXT	shared/GLee.c	/^PFNGLVARIANTUIVEXTPROC pglVariantuivEXT=_Lazy_glVariantuivEXT;$/;"	v
pglVariantuivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVARIANTUIVEXTPROC pglVariantuivEXT;$/;"	v
pglVariantusvEXT	shared/GLee.c	/^PFNGLVARIANTUSVEXTPROC pglVariantusvEXT=_Lazy_glVariantusvEXT;$/;"	v
pglVariantusvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVARIANTUSVEXTPROC pglVariantusvEXT;$/;"	v
pglVertex2hNV	shared/GLee.c	/^PFNGLVERTEX2HNVPROC pglVertex2hNV=_Lazy_glVertex2hNV;$/;"	v
pglVertex2hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEX2HNVPROC pglVertex2hNV;$/;"	v
pglVertex2hvNV	shared/GLee.c	/^PFNGLVERTEX2HVNVPROC pglVertex2hvNV=_Lazy_glVertex2hvNV;$/;"	v
pglVertex2hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEX2HVNVPROC pglVertex2hvNV;$/;"	v
pglVertex3hNV	shared/GLee.c	/^PFNGLVERTEX3HNVPROC pglVertex3hNV=_Lazy_glVertex3hNV;$/;"	v
pglVertex3hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEX3HNVPROC pglVertex3hNV;$/;"	v
pglVertex3hvNV	shared/GLee.c	/^PFNGLVERTEX3HVNVPROC pglVertex3hvNV=_Lazy_glVertex3hvNV;$/;"	v
pglVertex3hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEX3HVNVPROC pglVertex3hvNV;$/;"	v
pglVertex4hNV	shared/GLee.c	/^PFNGLVERTEX4HNVPROC pglVertex4hNV=_Lazy_glVertex4hNV;$/;"	v
pglVertex4hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEX4HNVPROC pglVertex4hNV;$/;"	v
pglVertex4hvNV	shared/GLee.c	/^PFNGLVERTEX4HVNVPROC pglVertex4hvNV=_Lazy_glVertex4hvNV;$/;"	v
pglVertex4hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEX4HVNVPROC pglVertex4hvNV;$/;"	v
pglVertexArrayParameteriAPPLE	shared/GLee.c	/^PFNGLVERTEXARRAYPARAMETERIAPPLEPROC pglVertexArrayParameteriAPPLE=_Lazy_glVertexArrayParameteriAPPLE;$/;"	v
pglVertexArrayParameteriAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXARRAYPARAMETERIAPPLEPROC pglVertexArrayParameteriAPPLE;$/;"	v
pglVertexArrayRangeAPPLE	shared/GLee.c	/^PFNGLVERTEXARRAYRANGEAPPLEPROC pglVertexArrayRangeAPPLE=_Lazy_glVertexArrayRangeAPPLE;$/;"	v
pglVertexArrayRangeAPPLE	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXARRAYRANGEAPPLEPROC pglVertexArrayRangeAPPLE;$/;"	v
pglVertexArrayRangeNV	shared/GLee.c	/^PFNGLVERTEXARRAYRANGENVPROC pglVertexArrayRangeNV=_Lazy_glVertexArrayRangeNV;$/;"	v
pglVertexArrayRangeNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXARRAYRANGENVPROC pglVertexArrayRangeNV;$/;"	v
pglVertexAttrib1d	shared/GLee.c	/^PFNGLVERTEXATTRIB1DPROC pglVertexAttrib1d=_Lazy_glVertexAttrib1d;$/;"	v
pglVertexAttrib1d	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1DPROC pglVertexAttrib1d;$/;"	v
pglVertexAttrib1dARB	shared/GLee.c	/^PFNGLVERTEXATTRIB1DARBPROC pglVertexAttrib1dARB=_Lazy_glVertexAttrib1dARB;$/;"	v
pglVertexAttrib1dARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1DARBPROC pglVertexAttrib1dARB;$/;"	v
pglVertexAttrib1dNV	shared/GLee.c	/^PFNGLVERTEXATTRIB1DNVPROC pglVertexAttrib1dNV=_Lazy_glVertexAttrib1dNV;$/;"	v
pglVertexAttrib1dNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1DNVPROC pglVertexAttrib1dNV;$/;"	v
pglVertexAttrib1dv	shared/GLee.c	/^PFNGLVERTEXATTRIB1DVPROC pglVertexAttrib1dv=_Lazy_glVertexAttrib1dv;$/;"	v
pglVertexAttrib1dv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1DVPROC pglVertexAttrib1dv;$/;"	v
pglVertexAttrib1dvARB	shared/GLee.c	/^PFNGLVERTEXATTRIB1DVARBPROC pglVertexAttrib1dvARB=_Lazy_glVertexAttrib1dvARB;$/;"	v
pglVertexAttrib1dvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1DVARBPROC pglVertexAttrib1dvARB;$/;"	v
pglVertexAttrib1dvNV	shared/GLee.c	/^PFNGLVERTEXATTRIB1DVNVPROC pglVertexAttrib1dvNV=_Lazy_glVertexAttrib1dvNV;$/;"	v
pglVertexAttrib1dvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1DVNVPROC pglVertexAttrib1dvNV;$/;"	v
pglVertexAttrib1f	shared/GLee.c	/^PFNGLVERTEXATTRIB1FPROC pglVertexAttrib1f=_Lazy_glVertexAttrib1f;$/;"	v
pglVertexAttrib1f	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1FPROC pglVertexAttrib1f;$/;"	v
pglVertexAttrib1fARB	shared/GLee.c	/^PFNGLVERTEXATTRIB1FARBPROC pglVertexAttrib1fARB=_Lazy_glVertexAttrib1fARB;$/;"	v
pglVertexAttrib1fARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1FARBPROC pglVertexAttrib1fARB;$/;"	v
pglVertexAttrib1fNV	shared/GLee.c	/^PFNGLVERTEXATTRIB1FNVPROC pglVertexAttrib1fNV=_Lazy_glVertexAttrib1fNV;$/;"	v
pglVertexAttrib1fNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1FNVPROC pglVertexAttrib1fNV;$/;"	v
pglVertexAttrib1fv	shared/GLee.c	/^PFNGLVERTEXATTRIB1FVPROC pglVertexAttrib1fv=_Lazy_glVertexAttrib1fv;$/;"	v
pglVertexAttrib1fv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1FVPROC pglVertexAttrib1fv;$/;"	v
pglVertexAttrib1fvARB	shared/GLee.c	/^PFNGLVERTEXATTRIB1FVARBPROC pglVertexAttrib1fvARB=_Lazy_glVertexAttrib1fvARB;$/;"	v
pglVertexAttrib1fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1FVARBPROC pglVertexAttrib1fvARB;$/;"	v
pglVertexAttrib1fvNV	shared/GLee.c	/^PFNGLVERTEXATTRIB1FVNVPROC pglVertexAttrib1fvNV=_Lazy_glVertexAttrib1fvNV;$/;"	v
pglVertexAttrib1fvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1FVNVPROC pglVertexAttrib1fvNV;$/;"	v
pglVertexAttrib1hNV	shared/GLee.c	/^PFNGLVERTEXATTRIB1HNVPROC pglVertexAttrib1hNV=_Lazy_glVertexAttrib1hNV;$/;"	v
pglVertexAttrib1hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1HNVPROC pglVertexAttrib1hNV;$/;"	v
pglVertexAttrib1hvNV	shared/GLee.c	/^PFNGLVERTEXATTRIB1HVNVPROC pglVertexAttrib1hvNV=_Lazy_glVertexAttrib1hvNV;$/;"	v
pglVertexAttrib1hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1HVNVPROC pglVertexAttrib1hvNV;$/;"	v
pglVertexAttrib1s	shared/GLee.c	/^PFNGLVERTEXATTRIB1SPROC pglVertexAttrib1s=_Lazy_glVertexAttrib1s;$/;"	v
pglVertexAttrib1s	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1SPROC pglVertexAttrib1s;$/;"	v
pglVertexAttrib1sARB	shared/GLee.c	/^PFNGLVERTEXATTRIB1SARBPROC pglVertexAttrib1sARB=_Lazy_glVertexAttrib1sARB;$/;"	v
pglVertexAttrib1sARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1SARBPROC pglVertexAttrib1sARB;$/;"	v
pglVertexAttrib1sNV	shared/GLee.c	/^PFNGLVERTEXATTRIB1SNVPROC pglVertexAttrib1sNV=_Lazy_glVertexAttrib1sNV;$/;"	v
pglVertexAttrib1sNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1SNVPROC pglVertexAttrib1sNV;$/;"	v
pglVertexAttrib1sv	shared/GLee.c	/^PFNGLVERTEXATTRIB1SVPROC pglVertexAttrib1sv=_Lazy_glVertexAttrib1sv;$/;"	v
pglVertexAttrib1sv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1SVPROC pglVertexAttrib1sv;$/;"	v
pglVertexAttrib1svARB	shared/GLee.c	/^PFNGLVERTEXATTRIB1SVARBPROC pglVertexAttrib1svARB=_Lazy_glVertexAttrib1svARB;$/;"	v
pglVertexAttrib1svARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1SVARBPROC pglVertexAttrib1svARB;$/;"	v
pglVertexAttrib1svNV	shared/GLee.c	/^PFNGLVERTEXATTRIB1SVNVPROC pglVertexAttrib1svNV=_Lazy_glVertexAttrib1svNV;$/;"	v
pglVertexAttrib1svNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB1SVNVPROC pglVertexAttrib1svNV;$/;"	v
pglVertexAttrib2d	shared/GLee.c	/^PFNGLVERTEXATTRIB2DPROC pglVertexAttrib2d=_Lazy_glVertexAttrib2d;$/;"	v
pglVertexAttrib2d	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2DPROC pglVertexAttrib2d;$/;"	v
pglVertexAttrib2dARB	shared/GLee.c	/^PFNGLVERTEXATTRIB2DARBPROC pglVertexAttrib2dARB=_Lazy_glVertexAttrib2dARB;$/;"	v
pglVertexAttrib2dARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2DARBPROC pglVertexAttrib2dARB;$/;"	v
pglVertexAttrib2dNV	shared/GLee.c	/^PFNGLVERTEXATTRIB2DNVPROC pglVertexAttrib2dNV=_Lazy_glVertexAttrib2dNV;$/;"	v
pglVertexAttrib2dNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2DNVPROC pglVertexAttrib2dNV;$/;"	v
pglVertexAttrib2dv	shared/GLee.c	/^PFNGLVERTEXATTRIB2DVPROC pglVertexAttrib2dv=_Lazy_glVertexAttrib2dv;$/;"	v
pglVertexAttrib2dv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2DVPROC pglVertexAttrib2dv;$/;"	v
pglVertexAttrib2dvARB	shared/GLee.c	/^PFNGLVERTEXATTRIB2DVARBPROC pglVertexAttrib2dvARB=_Lazy_glVertexAttrib2dvARB;$/;"	v
pglVertexAttrib2dvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2DVARBPROC pglVertexAttrib2dvARB;$/;"	v
pglVertexAttrib2dvNV	shared/GLee.c	/^PFNGLVERTEXATTRIB2DVNVPROC pglVertexAttrib2dvNV=_Lazy_glVertexAttrib2dvNV;$/;"	v
pglVertexAttrib2dvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2DVNVPROC pglVertexAttrib2dvNV;$/;"	v
pglVertexAttrib2f	shared/GLee.c	/^PFNGLVERTEXATTRIB2FPROC pglVertexAttrib2f=_Lazy_glVertexAttrib2f;$/;"	v
pglVertexAttrib2f	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2FPROC pglVertexAttrib2f;$/;"	v
pglVertexAttrib2fARB	shared/GLee.c	/^PFNGLVERTEXATTRIB2FARBPROC pglVertexAttrib2fARB=_Lazy_glVertexAttrib2fARB;$/;"	v
pglVertexAttrib2fARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2FARBPROC pglVertexAttrib2fARB;$/;"	v
pglVertexAttrib2fNV	shared/GLee.c	/^PFNGLVERTEXATTRIB2FNVPROC pglVertexAttrib2fNV=_Lazy_glVertexAttrib2fNV;$/;"	v
pglVertexAttrib2fNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2FNVPROC pglVertexAttrib2fNV;$/;"	v
pglVertexAttrib2fv	shared/GLee.c	/^PFNGLVERTEXATTRIB2FVPROC pglVertexAttrib2fv=_Lazy_glVertexAttrib2fv;$/;"	v
pglVertexAttrib2fv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2FVPROC pglVertexAttrib2fv;$/;"	v
pglVertexAttrib2fvARB	shared/GLee.c	/^PFNGLVERTEXATTRIB2FVARBPROC pglVertexAttrib2fvARB=_Lazy_glVertexAttrib2fvARB;$/;"	v
pglVertexAttrib2fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2FVARBPROC pglVertexAttrib2fvARB;$/;"	v
pglVertexAttrib2fvNV	shared/GLee.c	/^PFNGLVERTEXATTRIB2FVNVPROC pglVertexAttrib2fvNV=_Lazy_glVertexAttrib2fvNV;$/;"	v
pglVertexAttrib2fvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2FVNVPROC pglVertexAttrib2fvNV;$/;"	v
pglVertexAttrib2hNV	shared/GLee.c	/^PFNGLVERTEXATTRIB2HNVPROC pglVertexAttrib2hNV=_Lazy_glVertexAttrib2hNV;$/;"	v
pglVertexAttrib2hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2HNVPROC pglVertexAttrib2hNV;$/;"	v
pglVertexAttrib2hvNV	shared/GLee.c	/^PFNGLVERTEXATTRIB2HVNVPROC pglVertexAttrib2hvNV=_Lazy_glVertexAttrib2hvNV;$/;"	v
pglVertexAttrib2hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2HVNVPROC pglVertexAttrib2hvNV;$/;"	v
pglVertexAttrib2s	shared/GLee.c	/^PFNGLVERTEXATTRIB2SPROC pglVertexAttrib2s=_Lazy_glVertexAttrib2s;$/;"	v
pglVertexAttrib2s	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2SPROC pglVertexAttrib2s;$/;"	v
pglVertexAttrib2sARB	shared/GLee.c	/^PFNGLVERTEXATTRIB2SARBPROC pglVertexAttrib2sARB=_Lazy_glVertexAttrib2sARB;$/;"	v
pglVertexAttrib2sARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2SARBPROC pglVertexAttrib2sARB;$/;"	v
pglVertexAttrib2sNV	shared/GLee.c	/^PFNGLVERTEXATTRIB2SNVPROC pglVertexAttrib2sNV=_Lazy_glVertexAttrib2sNV;$/;"	v
pglVertexAttrib2sNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2SNVPROC pglVertexAttrib2sNV;$/;"	v
pglVertexAttrib2sv	shared/GLee.c	/^PFNGLVERTEXATTRIB2SVPROC pglVertexAttrib2sv=_Lazy_glVertexAttrib2sv;$/;"	v
pglVertexAttrib2sv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2SVPROC pglVertexAttrib2sv;$/;"	v
pglVertexAttrib2svARB	shared/GLee.c	/^PFNGLVERTEXATTRIB2SVARBPROC pglVertexAttrib2svARB=_Lazy_glVertexAttrib2svARB;$/;"	v
pglVertexAttrib2svARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2SVARBPROC pglVertexAttrib2svARB;$/;"	v
pglVertexAttrib2svNV	shared/GLee.c	/^PFNGLVERTEXATTRIB2SVNVPROC pglVertexAttrib2svNV=_Lazy_glVertexAttrib2svNV;$/;"	v
pglVertexAttrib2svNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB2SVNVPROC pglVertexAttrib2svNV;$/;"	v
pglVertexAttrib3d	shared/GLee.c	/^PFNGLVERTEXATTRIB3DPROC pglVertexAttrib3d=_Lazy_glVertexAttrib3d;$/;"	v
pglVertexAttrib3d	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3DPROC pglVertexAttrib3d;$/;"	v
pglVertexAttrib3dARB	shared/GLee.c	/^PFNGLVERTEXATTRIB3DARBPROC pglVertexAttrib3dARB=_Lazy_glVertexAttrib3dARB;$/;"	v
pglVertexAttrib3dARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3DARBPROC pglVertexAttrib3dARB;$/;"	v
pglVertexAttrib3dNV	shared/GLee.c	/^PFNGLVERTEXATTRIB3DNVPROC pglVertexAttrib3dNV=_Lazy_glVertexAttrib3dNV;$/;"	v
pglVertexAttrib3dNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3DNVPROC pglVertexAttrib3dNV;$/;"	v
pglVertexAttrib3dv	shared/GLee.c	/^PFNGLVERTEXATTRIB3DVPROC pglVertexAttrib3dv=_Lazy_glVertexAttrib3dv;$/;"	v
pglVertexAttrib3dv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3DVPROC pglVertexAttrib3dv;$/;"	v
pglVertexAttrib3dvARB	shared/GLee.c	/^PFNGLVERTEXATTRIB3DVARBPROC pglVertexAttrib3dvARB=_Lazy_glVertexAttrib3dvARB;$/;"	v
pglVertexAttrib3dvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3DVARBPROC pglVertexAttrib3dvARB;$/;"	v
pglVertexAttrib3dvNV	shared/GLee.c	/^PFNGLVERTEXATTRIB3DVNVPROC pglVertexAttrib3dvNV=_Lazy_glVertexAttrib3dvNV;$/;"	v
pglVertexAttrib3dvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3DVNVPROC pglVertexAttrib3dvNV;$/;"	v
pglVertexAttrib3f	shared/GLee.c	/^PFNGLVERTEXATTRIB3FPROC pglVertexAttrib3f=_Lazy_glVertexAttrib3f;$/;"	v
pglVertexAttrib3f	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3FPROC pglVertexAttrib3f;$/;"	v
pglVertexAttrib3fARB	shared/GLee.c	/^PFNGLVERTEXATTRIB3FARBPROC pglVertexAttrib3fARB=_Lazy_glVertexAttrib3fARB;$/;"	v
pglVertexAttrib3fARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3FARBPROC pglVertexAttrib3fARB;$/;"	v
pglVertexAttrib3fNV	shared/GLee.c	/^PFNGLVERTEXATTRIB3FNVPROC pglVertexAttrib3fNV=_Lazy_glVertexAttrib3fNV;$/;"	v
pglVertexAttrib3fNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3FNVPROC pglVertexAttrib3fNV;$/;"	v
pglVertexAttrib3fv	shared/GLee.c	/^PFNGLVERTEXATTRIB3FVPROC pglVertexAttrib3fv=_Lazy_glVertexAttrib3fv;$/;"	v
pglVertexAttrib3fv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3FVPROC pglVertexAttrib3fv;$/;"	v
pglVertexAttrib3fvARB	shared/GLee.c	/^PFNGLVERTEXATTRIB3FVARBPROC pglVertexAttrib3fvARB=_Lazy_glVertexAttrib3fvARB;$/;"	v
pglVertexAttrib3fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3FVARBPROC pglVertexAttrib3fvARB;$/;"	v
pglVertexAttrib3fvNV	shared/GLee.c	/^PFNGLVERTEXATTRIB3FVNVPROC pglVertexAttrib3fvNV=_Lazy_glVertexAttrib3fvNV;$/;"	v
pglVertexAttrib3fvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3FVNVPROC pglVertexAttrib3fvNV;$/;"	v
pglVertexAttrib3hNV	shared/GLee.c	/^PFNGLVERTEXATTRIB3HNVPROC pglVertexAttrib3hNV=_Lazy_glVertexAttrib3hNV;$/;"	v
pglVertexAttrib3hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3HNVPROC pglVertexAttrib3hNV;$/;"	v
pglVertexAttrib3hvNV	shared/GLee.c	/^PFNGLVERTEXATTRIB3HVNVPROC pglVertexAttrib3hvNV=_Lazy_glVertexAttrib3hvNV;$/;"	v
pglVertexAttrib3hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3HVNVPROC pglVertexAttrib3hvNV;$/;"	v
pglVertexAttrib3s	shared/GLee.c	/^PFNGLVERTEXATTRIB3SPROC pglVertexAttrib3s=_Lazy_glVertexAttrib3s;$/;"	v
pglVertexAttrib3s	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3SPROC pglVertexAttrib3s;$/;"	v
pglVertexAttrib3sARB	shared/GLee.c	/^PFNGLVERTEXATTRIB3SARBPROC pglVertexAttrib3sARB=_Lazy_glVertexAttrib3sARB;$/;"	v
pglVertexAttrib3sARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3SARBPROC pglVertexAttrib3sARB;$/;"	v
pglVertexAttrib3sNV	shared/GLee.c	/^PFNGLVERTEXATTRIB3SNVPROC pglVertexAttrib3sNV=_Lazy_glVertexAttrib3sNV;$/;"	v
pglVertexAttrib3sNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3SNVPROC pglVertexAttrib3sNV;$/;"	v
pglVertexAttrib3sv	shared/GLee.c	/^PFNGLVERTEXATTRIB3SVPROC pglVertexAttrib3sv=_Lazy_glVertexAttrib3sv;$/;"	v
pglVertexAttrib3sv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3SVPROC pglVertexAttrib3sv;$/;"	v
pglVertexAttrib3svARB	shared/GLee.c	/^PFNGLVERTEXATTRIB3SVARBPROC pglVertexAttrib3svARB=_Lazy_glVertexAttrib3svARB;$/;"	v
pglVertexAttrib3svARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3SVARBPROC pglVertexAttrib3svARB;$/;"	v
pglVertexAttrib3svNV	shared/GLee.c	/^PFNGLVERTEXATTRIB3SVNVPROC pglVertexAttrib3svNV=_Lazy_glVertexAttrib3svNV;$/;"	v
pglVertexAttrib3svNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB3SVNVPROC pglVertexAttrib3svNV;$/;"	v
pglVertexAttrib4Nbv	shared/GLee.c	/^PFNGLVERTEXATTRIB4NBVPROC pglVertexAttrib4Nbv=_Lazy_glVertexAttrib4Nbv;$/;"	v
pglVertexAttrib4Nbv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4NBVPROC pglVertexAttrib4Nbv;$/;"	v
pglVertexAttrib4NbvARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4NBVARBPROC pglVertexAttrib4NbvARB=_Lazy_glVertexAttrib4NbvARB;$/;"	v
pglVertexAttrib4NbvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4NBVARBPROC pglVertexAttrib4NbvARB;$/;"	v
pglVertexAttrib4Niv	shared/GLee.c	/^PFNGLVERTEXATTRIB4NIVPROC pglVertexAttrib4Niv=_Lazy_glVertexAttrib4Niv;$/;"	v
pglVertexAttrib4Niv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4NIVPROC pglVertexAttrib4Niv;$/;"	v
pglVertexAttrib4NivARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4NIVARBPROC pglVertexAttrib4NivARB=_Lazy_glVertexAttrib4NivARB;$/;"	v
pglVertexAttrib4NivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4NIVARBPROC pglVertexAttrib4NivARB;$/;"	v
pglVertexAttrib4Nsv	shared/GLee.c	/^PFNGLVERTEXATTRIB4NSVPROC pglVertexAttrib4Nsv=_Lazy_glVertexAttrib4Nsv;$/;"	v
pglVertexAttrib4Nsv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4NSVPROC pglVertexAttrib4Nsv;$/;"	v
pglVertexAttrib4NsvARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4NSVARBPROC pglVertexAttrib4NsvARB=_Lazy_glVertexAttrib4NsvARB;$/;"	v
pglVertexAttrib4NsvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4NSVARBPROC pglVertexAttrib4NsvARB;$/;"	v
pglVertexAttrib4Nub	shared/GLee.c	/^PFNGLVERTEXATTRIB4NUBPROC pglVertexAttrib4Nub=_Lazy_glVertexAttrib4Nub;$/;"	v
pglVertexAttrib4Nub	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4NUBPROC pglVertexAttrib4Nub;$/;"	v
pglVertexAttrib4NubARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4NUBARBPROC pglVertexAttrib4NubARB=_Lazy_glVertexAttrib4NubARB;$/;"	v
pglVertexAttrib4NubARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4NUBARBPROC pglVertexAttrib4NubARB;$/;"	v
pglVertexAttrib4Nubv	shared/GLee.c	/^PFNGLVERTEXATTRIB4NUBVPROC pglVertexAttrib4Nubv=_Lazy_glVertexAttrib4Nubv;$/;"	v
pglVertexAttrib4Nubv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4NUBVPROC pglVertexAttrib4Nubv;$/;"	v
pglVertexAttrib4NubvARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4NUBVARBPROC pglVertexAttrib4NubvARB=_Lazy_glVertexAttrib4NubvARB;$/;"	v
pglVertexAttrib4NubvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4NUBVARBPROC pglVertexAttrib4NubvARB;$/;"	v
pglVertexAttrib4Nuiv	shared/GLee.c	/^PFNGLVERTEXATTRIB4NUIVPROC pglVertexAttrib4Nuiv=_Lazy_glVertexAttrib4Nuiv;$/;"	v
pglVertexAttrib4Nuiv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4NUIVPROC pglVertexAttrib4Nuiv;$/;"	v
pglVertexAttrib4NuivARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4NUIVARBPROC pglVertexAttrib4NuivARB=_Lazy_glVertexAttrib4NuivARB;$/;"	v
pglVertexAttrib4NuivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4NUIVARBPROC pglVertexAttrib4NuivARB;$/;"	v
pglVertexAttrib4Nusv	shared/GLee.c	/^PFNGLVERTEXATTRIB4NUSVPROC pglVertexAttrib4Nusv=_Lazy_glVertexAttrib4Nusv;$/;"	v
pglVertexAttrib4Nusv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4NUSVPROC pglVertexAttrib4Nusv;$/;"	v
pglVertexAttrib4NusvARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4NUSVARBPROC pglVertexAttrib4NusvARB=_Lazy_glVertexAttrib4NusvARB;$/;"	v
pglVertexAttrib4NusvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4NUSVARBPROC pglVertexAttrib4NusvARB;$/;"	v
pglVertexAttrib4bv	shared/GLee.c	/^PFNGLVERTEXATTRIB4BVPROC pglVertexAttrib4bv=_Lazy_glVertexAttrib4bv;$/;"	v
pglVertexAttrib4bv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4BVPROC pglVertexAttrib4bv;$/;"	v
pglVertexAttrib4bvARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4BVARBPROC pglVertexAttrib4bvARB=_Lazy_glVertexAttrib4bvARB;$/;"	v
pglVertexAttrib4bvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4BVARBPROC pglVertexAttrib4bvARB;$/;"	v
pglVertexAttrib4d	shared/GLee.c	/^PFNGLVERTEXATTRIB4DPROC pglVertexAttrib4d=_Lazy_glVertexAttrib4d;$/;"	v
pglVertexAttrib4d	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4DPROC pglVertexAttrib4d;$/;"	v
pglVertexAttrib4dARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4DARBPROC pglVertexAttrib4dARB=_Lazy_glVertexAttrib4dARB;$/;"	v
pglVertexAttrib4dARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4DARBPROC pglVertexAttrib4dARB;$/;"	v
pglVertexAttrib4dNV	shared/GLee.c	/^PFNGLVERTEXATTRIB4DNVPROC pglVertexAttrib4dNV=_Lazy_glVertexAttrib4dNV;$/;"	v
pglVertexAttrib4dNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4DNVPROC pglVertexAttrib4dNV;$/;"	v
pglVertexAttrib4dv	shared/GLee.c	/^PFNGLVERTEXATTRIB4DVPROC pglVertexAttrib4dv=_Lazy_glVertexAttrib4dv;$/;"	v
pglVertexAttrib4dv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4DVPROC pglVertexAttrib4dv;$/;"	v
pglVertexAttrib4dvARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4DVARBPROC pglVertexAttrib4dvARB=_Lazy_glVertexAttrib4dvARB;$/;"	v
pglVertexAttrib4dvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4DVARBPROC pglVertexAttrib4dvARB;$/;"	v
pglVertexAttrib4dvNV	shared/GLee.c	/^PFNGLVERTEXATTRIB4DVNVPROC pglVertexAttrib4dvNV=_Lazy_glVertexAttrib4dvNV;$/;"	v
pglVertexAttrib4dvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4DVNVPROC pglVertexAttrib4dvNV;$/;"	v
pglVertexAttrib4f	shared/GLee.c	/^PFNGLVERTEXATTRIB4FPROC pglVertexAttrib4f=_Lazy_glVertexAttrib4f;$/;"	v
pglVertexAttrib4f	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4FPROC pglVertexAttrib4f;$/;"	v
pglVertexAttrib4fARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4FARBPROC pglVertexAttrib4fARB=_Lazy_glVertexAttrib4fARB;$/;"	v
pglVertexAttrib4fARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4FARBPROC pglVertexAttrib4fARB;$/;"	v
pglVertexAttrib4fNV	shared/GLee.c	/^PFNGLVERTEXATTRIB4FNVPROC pglVertexAttrib4fNV=_Lazy_glVertexAttrib4fNV;$/;"	v
pglVertexAttrib4fNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4FNVPROC pglVertexAttrib4fNV;$/;"	v
pglVertexAttrib4fv	shared/GLee.c	/^PFNGLVERTEXATTRIB4FVPROC pglVertexAttrib4fv=_Lazy_glVertexAttrib4fv;$/;"	v
pglVertexAttrib4fv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4FVPROC pglVertexAttrib4fv;$/;"	v
pglVertexAttrib4fvARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4FVARBPROC pglVertexAttrib4fvARB=_Lazy_glVertexAttrib4fvARB;$/;"	v
pglVertexAttrib4fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4FVARBPROC pglVertexAttrib4fvARB;$/;"	v
pglVertexAttrib4fvNV	shared/GLee.c	/^PFNGLVERTEXATTRIB4FVNVPROC pglVertexAttrib4fvNV=_Lazy_glVertexAttrib4fvNV;$/;"	v
pglVertexAttrib4fvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4FVNVPROC pglVertexAttrib4fvNV;$/;"	v
pglVertexAttrib4hNV	shared/GLee.c	/^PFNGLVERTEXATTRIB4HNVPROC pglVertexAttrib4hNV=_Lazy_glVertexAttrib4hNV;$/;"	v
pglVertexAttrib4hNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4HNVPROC pglVertexAttrib4hNV;$/;"	v
pglVertexAttrib4hvNV	shared/GLee.c	/^PFNGLVERTEXATTRIB4HVNVPROC pglVertexAttrib4hvNV=_Lazy_glVertexAttrib4hvNV;$/;"	v
pglVertexAttrib4hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4HVNVPROC pglVertexAttrib4hvNV;$/;"	v
pglVertexAttrib4iv	shared/GLee.c	/^PFNGLVERTEXATTRIB4IVPROC pglVertexAttrib4iv=_Lazy_glVertexAttrib4iv;$/;"	v
pglVertexAttrib4iv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4IVPROC pglVertexAttrib4iv;$/;"	v
pglVertexAttrib4ivARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4IVARBPROC pglVertexAttrib4ivARB=_Lazy_glVertexAttrib4ivARB;$/;"	v
pglVertexAttrib4ivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4IVARBPROC pglVertexAttrib4ivARB;$/;"	v
pglVertexAttrib4s	shared/GLee.c	/^PFNGLVERTEXATTRIB4SPROC pglVertexAttrib4s=_Lazy_glVertexAttrib4s;$/;"	v
pglVertexAttrib4s	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4SPROC pglVertexAttrib4s;$/;"	v
pglVertexAttrib4sARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4SARBPROC pglVertexAttrib4sARB=_Lazy_glVertexAttrib4sARB;$/;"	v
pglVertexAttrib4sARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4SARBPROC pglVertexAttrib4sARB;$/;"	v
pglVertexAttrib4sNV	shared/GLee.c	/^PFNGLVERTEXATTRIB4SNVPROC pglVertexAttrib4sNV=_Lazy_glVertexAttrib4sNV;$/;"	v
pglVertexAttrib4sNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4SNVPROC pglVertexAttrib4sNV;$/;"	v
pglVertexAttrib4sv	shared/GLee.c	/^PFNGLVERTEXATTRIB4SVPROC pglVertexAttrib4sv=_Lazy_glVertexAttrib4sv;$/;"	v
pglVertexAttrib4sv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4SVPROC pglVertexAttrib4sv;$/;"	v
pglVertexAttrib4svARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4SVARBPROC pglVertexAttrib4svARB=_Lazy_glVertexAttrib4svARB;$/;"	v
pglVertexAttrib4svARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4SVARBPROC pglVertexAttrib4svARB;$/;"	v
pglVertexAttrib4svNV	shared/GLee.c	/^PFNGLVERTEXATTRIB4SVNVPROC pglVertexAttrib4svNV=_Lazy_glVertexAttrib4svNV;$/;"	v
pglVertexAttrib4svNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4SVNVPROC pglVertexAttrib4svNV;$/;"	v
pglVertexAttrib4ubNV	shared/GLee.c	/^PFNGLVERTEXATTRIB4UBNVPROC pglVertexAttrib4ubNV=_Lazy_glVertexAttrib4ubNV;$/;"	v
pglVertexAttrib4ubNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4UBNVPROC pglVertexAttrib4ubNV;$/;"	v
pglVertexAttrib4ubv	shared/GLee.c	/^PFNGLVERTEXATTRIB4UBVPROC pglVertexAttrib4ubv=_Lazy_glVertexAttrib4ubv;$/;"	v
pglVertexAttrib4ubv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4UBVPROC pglVertexAttrib4ubv;$/;"	v
pglVertexAttrib4ubvARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4UBVARBPROC pglVertexAttrib4ubvARB=_Lazy_glVertexAttrib4ubvARB;$/;"	v
pglVertexAttrib4ubvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4UBVARBPROC pglVertexAttrib4ubvARB;$/;"	v
pglVertexAttrib4ubvNV	shared/GLee.c	/^PFNGLVERTEXATTRIB4UBVNVPROC pglVertexAttrib4ubvNV=_Lazy_glVertexAttrib4ubvNV;$/;"	v
pglVertexAttrib4ubvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4UBVNVPROC pglVertexAttrib4ubvNV;$/;"	v
pglVertexAttrib4uiv	shared/GLee.c	/^PFNGLVERTEXATTRIB4UIVPROC pglVertexAttrib4uiv=_Lazy_glVertexAttrib4uiv;$/;"	v
pglVertexAttrib4uiv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4UIVPROC pglVertexAttrib4uiv;$/;"	v
pglVertexAttrib4uivARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4UIVARBPROC pglVertexAttrib4uivARB=_Lazy_glVertexAttrib4uivARB;$/;"	v
pglVertexAttrib4uivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4UIVARBPROC pglVertexAttrib4uivARB;$/;"	v
pglVertexAttrib4usv	shared/GLee.c	/^PFNGLVERTEXATTRIB4USVPROC pglVertexAttrib4usv=_Lazy_glVertexAttrib4usv;$/;"	v
pglVertexAttrib4usv	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4USVPROC pglVertexAttrib4usv;$/;"	v
pglVertexAttrib4usvARB	shared/GLee.c	/^PFNGLVERTEXATTRIB4USVARBPROC pglVertexAttrib4usvARB=_Lazy_glVertexAttrib4usvARB;$/;"	v
pglVertexAttrib4usvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIB4USVARBPROC pglVertexAttrib4usvARB;$/;"	v
pglVertexAttribArrayObjectATI	shared/GLee.c	/^PFNGLVERTEXATTRIBARRAYOBJECTATIPROC pglVertexAttribArrayObjectATI=_Lazy_glVertexAttribArrayObjectATI;$/;"	v
pglVertexAttribArrayObjectATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBARRAYOBJECTATIPROC pglVertexAttribArrayObjectATI;$/;"	v
pglVertexAttribI1iEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI1IEXTPROC pglVertexAttribI1iEXT=_Lazy_glVertexAttribI1iEXT;$/;"	v
pglVertexAttribI1iEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI1IEXTPROC pglVertexAttribI1iEXT;$/;"	v
pglVertexAttribI1ivEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI1IVEXTPROC pglVertexAttribI1ivEXT=_Lazy_glVertexAttribI1ivEXT;$/;"	v
pglVertexAttribI1ivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI1IVEXTPROC pglVertexAttribI1ivEXT;$/;"	v
pglVertexAttribI1uiEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI1UIEXTPROC pglVertexAttribI1uiEXT=_Lazy_glVertexAttribI1uiEXT;$/;"	v
pglVertexAttribI1uiEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI1UIEXTPROC pglVertexAttribI1uiEXT;$/;"	v
pglVertexAttribI1uivEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI1UIVEXTPROC pglVertexAttribI1uivEXT=_Lazy_glVertexAttribI1uivEXT;$/;"	v
pglVertexAttribI1uivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI1UIVEXTPROC pglVertexAttribI1uivEXT;$/;"	v
pglVertexAttribI2iEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI2IEXTPROC pglVertexAttribI2iEXT=_Lazy_glVertexAttribI2iEXT;$/;"	v
pglVertexAttribI2iEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI2IEXTPROC pglVertexAttribI2iEXT;$/;"	v
pglVertexAttribI2ivEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI2IVEXTPROC pglVertexAttribI2ivEXT=_Lazy_glVertexAttribI2ivEXT;$/;"	v
pglVertexAttribI2ivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI2IVEXTPROC pglVertexAttribI2ivEXT;$/;"	v
pglVertexAttribI2uiEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI2UIEXTPROC pglVertexAttribI2uiEXT=_Lazy_glVertexAttribI2uiEXT;$/;"	v
pglVertexAttribI2uiEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI2UIEXTPROC pglVertexAttribI2uiEXT;$/;"	v
pglVertexAttribI2uivEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI2UIVEXTPROC pglVertexAttribI2uivEXT=_Lazy_glVertexAttribI2uivEXT;$/;"	v
pglVertexAttribI2uivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI2UIVEXTPROC pglVertexAttribI2uivEXT;$/;"	v
pglVertexAttribI3iEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI3IEXTPROC pglVertexAttribI3iEXT=_Lazy_glVertexAttribI3iEXT;$/;"	v
pglVertexAttribI3iEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI3IEXTPROC pglVertexAttribI3iEXT;$/;"	v
pglVertexAttribI3ivEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI3IVEXTPROC pglVertexAttribI3ivEXT=_Lazy_glVertexAttribI3ivEXT;$/;"	v
pglVertexAttribI3ivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI3IVEXTPROC pglVertexAttribI3ivEXT;$/;"	v
pglVertexAttribI3uiEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI3UIEXTPROC pglVertexAttribI3uiEXT=_Lazy_glVertexAttribI3uiEXT;$/;"	v
pglVertexAttribI3uiEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI3UIEXTPROC pglVertexAttribI3uiEXT;$/;"	v
pglVertexAttribI3uivEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI3UIVEXTPROC pglVertexAttribI3uivEXT=_Lazy_glVertexAttribI3uivEXT;$/;"	v
pglVertexAttribI3uivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI3UIVEXTPROC pglVertexAttribI3uivEXT;$/;"	v
pglVertexAttribI4bvEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI4BVEXTPROC pglVertexAttribI4bvEXT=_Lazy_glVertexAttribI4bvEXT;$/;"	v
pglVertexAttribI4bvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI4BVEXTPROC pglVertexAttribI4bvEXT;$/;"	v
pglVertexAttribI4iEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI4IEXTPROC pglVertexAttribI4iEXT=_Lazy_glVertexAttribI4iEXT;$/;"	v
pglVertexAttribI4iEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI4IEXTPROC pglVertexAttribI4iEXT;$/;"	v
pglVertexAttribI4ivEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI4IVEXTPROC pglVertexAttribI4ivEXT=_Lazy_glVertexAttribI4ivEXT;$/;"	v
pglVertexAttribI4ivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI4IVEXTPROC pglVertexAttribI4ivEXT;$/;"	v
pglVertexAttribI4svEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI4SVEXTPROC pglVertexAttribI4svEXT=_Lazy_glVertexAttribI4svEXT;$/;"	v
pglVertexAttribI4svEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI4SVEXTPROC pglVertexAttribI4svEXT;$/;"	v
pglVertexAttribI4ubvEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI4UBVEXTPROC pglVertexAttribI4ubvEXT=_Lazy_glVertexAttribI4ubvEXT;$/;"	v
pglVertexAttribI4ubvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI4UBVEXTPROC pglVertexAttribI4ubvEXT;$/;"	v
pglVertexAttribI4uiEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI4UIEXTPROC pglVertexAttribI4uiEXT=_Lazy_glVertexAttribI4uiEXT;$/;"	v
pglVertexAttribI4uiEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI4UIEXTPROC pglVertexAttribI4uiEXT;$/;"	v
pglVertexAttribI4uivEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI4UIVEXTPROC pglVertexAttribI4uivEXT=_Lazy_glVertexAttribI4uivEXT;$/;"	v
pglVertexAttribI4uivEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI4UIVEXTPROC pglVertexAttribI4uivEXT;$/;"	v
pglVertexAttribI4usvEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBI4USVEXTPROC pglVertexAttribI4usvEXT=_Lazy_glVertexAttribI4usvEXT;$/;"	v
pglVertexAttribI4usvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBI4USVEXTPROC pglVertexAttribI4usvEXT;$/;"	v
pglVertexAttribIPointerEXT	shared/GLee.c	/^PFNGLVERTEXATTRIBIPOINTEREXTPROC pglVertexAttribIPointerEXT=_Lazy_glVertexAttribIPointerEXT;$/;"	v
pglVertexAttribIPointerEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBIPOINTEREXTPROC pglVertexAttribIPointerEXT;$/;"	v
pglVertexAttribPointer	shared/GLee.c	/^PFNGLVERTEXATTRIBPOINTERPROC pglVertexAttribPointer=_Lazy_glVertexAttribPointer;$/;"	v
pglVertexAttribPointer	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBPOINTERPROC pglVertexAttribPointer;$/;"	v
pglVertexAttribPointerARB	shared/GLee.c	/^PFNGLVERTEXATTRIBPOINTERARBPROC pglVertexAttribPointerARB=_Lazy_glVertexAttribPointerARB;$/;"	v
pglVertexAttribPointerARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBPOINTERARBPROC pglVertexAttribPointerARB;$/;"	v
pglVertexAttribPointerNV	shared/GLee.c	/^PFNGLVERTEXATTRIBPOINTERNVPROC pglVertexAttribPointerNV=_Lazy_glVertexAttribPointerNV;$/;"	v
pglVertexAttribPointerNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBPOINTERNVPROC pglVertexAttribPointerNV;$/;"	v
pglVertexAttribs1dvNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS1DVNVPROC pglVertexAttribs1dvNV=_Lazy_glVertexAttribs1dvNV;$/;"	v
pglVertexAttribs1dvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS1DVNVPROC pglVertexAttribs1dvNV;$/;"	v
pglVertexAttribs1fvNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS1FVNVPROC pglVertexAttribs1fvNV=_Lazy_glVertexAttribs1fvNV;$/;"	v
pglVertexAttribs1fvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS1FVNVPROC pglVertexAttribs1fvNV;$/;"	v
pglVertexAttribs1hvNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS1HVNVPROC pglVertexAttribs1hvNV=_Lazy_glVertexAttribs1hvNV;$/;"	v
pglVertexAttribs1hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS1HVNVPROC pglVertexAttribs1hvNV;$/;"	v
pglVertexAttribs1svNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS1SVNVPROC pglVertexAttribs1svNV=_Lazy_glVertexAttribs1svNV;$/;"	v
pglVertexAttribs1svNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS1SVNVPROC pglVertexAttribs1svNV;$/;"	v
pglVertexAttribs2dvNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS2DVNVPROC pglVertexAttribs2dvNV=_Lazy_glVertexAttribs2dvNV;$/;"	v
pglVertexAttribs2dvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS2DVNVPROC pglVertexAttribs2dvNV;$/;"	v
pglVertexAttribs2fvNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS2FVNVPROC pglVertexAttribs2fvNV=_Lazy_glVertexAttribs2fvNV;$/;"	v
pglVertexAttribs2fvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS2FVNVPROC pglVertexAttribs2fvNV;$/;"	v
pglVertexAttribs2hvNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS2HVNVPROC pglVertexAttribs2hvNV=_Lazy_glVertexAttribs2hvNV;$/;"	v
pglVertexAttribs2hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS2HVNVPROC pglVertexAttribs2hvNV;$/;"	v
pglVertexAttribs2svNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS2SVNVPROC pglVertexAttribs2svNV=_Lazy_glVertexAttribs2svNV;$/;"	v
pglVertexAttribs2svNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS2SVNVPROC pglVertexAttribs2svNV;$/;"	v
pglVertexAttribs3dvNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS3DVNVPROC pglVertexAttribs3dvNV=_Lazy_glVertexAttribs3dvNV;$/;"	v
pglVertexAttribs3dvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS3DVNVPROC pglVertexAttribs3dvNV;$/;"	v
pglVertexAttribs3fvNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS3FVNVPROC pglVertexAttribs3fvNV=_Lazy_glVertexAttribs3fvNV;$/;"	v
pglVertexAttribs3fvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS3FVNVPROC pglVertexAttribs3fvNV;$/;"	v
pglVertexAttribs3hvNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS3HVNVPROC pglVertexAttribs3hvNV=_Lazy_glVertexAttribs3hvNV;$/;"	v
pglVertexAttribs3hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS3HVNVPROC pglVertexAttribs3hvNV;$/;"	v
pglVertexAttribs3svNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS3SVNVPROC pglVertexAttribs3svNV=_Lazy_glVertexAttribs3svNV;$/;"	v
pglVertexAttribs3svNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS3SVNVPROC pglVertexAttribs3svNV;$/;"	v
pglVertexAttribs4dvNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS4DVNVPROC pglVertexAttribs4dvNV=_Lazy_glVertexAttribs4dvNV;$/;"	v
pglVertexAttribs4dvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS4DVNVPROC pglVertexAttribs4dvNV;$/;"	v
pglVertexAttribs4fvNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS4FVNVPROC pglVertexAttribs4fvNV=_Lazy_glVertexAttribs4fvNV;$/;"	v
pglVertexAttribs4fvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS4FVNVPROC pglVertexAttribs4fvNV;$/;"	v
pglVertexAttribs4hvNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS4HVNVPROC pglVertexAttribs4hvNV=_Lazy_glVertexAttribs4hvNV;$/;"	v
pglVertexAttribs4hvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS4HVNVPROC pglVertexAttribs4hvNV;$/;"	v
pglVertexAttribs4svNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS4SVNVPROC pglVertexAttribs4svNV=_Lazy_glVertexAttribs4svNV;$/;"	v
pglVertexAttribs4svNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS4SVNVPROC pglVertexAttribs4svNV;$/;"	v
pglVertexAttribs4ubvNV	shared/GLee.c	/^PFNGLVERTEXATTRIBS4UBVNVPROC pglVertexAttribs4ubvNV=_Lazy_glVertexAttribs4ubvNV;$/;"	v
pglVertexAttribs4ubvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXATTRIBS4UBVNVPROC pglVertexAttribs4ubvNV;$/;"	v
pglVertexBlendARB	shared/GLee.c	/^PFNGLVERTEXBLENDARBPROC pglVertexBlendARB=_Lazy_glVertexBlendARB;$/;"	v
pglVertexBlendARB	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXBLENDARBPROC pglVertexBlendARB;$/;"	v
pglVertexBlendEnvfATI	shared/GLee.c	/^PFNGLVERTEXBLENDENVFATIPROC pglVertexBlendEnvfATI=_Lazy_glVertexBlendEnvfATI;$/;"	v
pglVertexBlendEnvfATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXBLENDENVFATIPROC pglVertexBlendEnvfATI;$/;"	v
pglVertexBlendEnviATI	shared/GLee.c	/^PFNGLVERTEXBLENDENVIATIPROC pglVertexBlendEnviATI=_Lazy_glVertexBlendEnviATI;$/;"	v
pglVertexBlendEnviATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXBLENDENVIATIPROC pglVertexBlendEnviATI;$/;"	v
pglVertexPointerEXT	shared/GLee.c	/^PFNGLVERTEXPOINTEREXTPROC pglVertexPointerEXT=_Lazy_glVertexPointerEXT;$/;"	v
pglVertexPointerEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXPOINTEREXTPROC pglVertexPointerEXT;$/;"	v
pglVertexPointerListIBM	shared/GLee.c	/^PFNGLVERTEXPOINTERLISTIBMPROC pglVertexPointerListIBM=_Lazy_glVertexPointerListIBM;$/;"	v
pglVertexPointerListIBM	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXPOINTERLISTIBMPROC pglVertexPointerListIBM;$/;"	v
pglVertexPointervINTEL	shared/GLee.c	/^PFNGLVERTEXPOINTERVINTELPROC pglVertexPointervINTEL=_Lazy_glVertexPointervINTEL;$/;"	v
pglVertexPointervINTEL	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXPOINTERVINTELPROC pglVertexPointervINTEL;$/;"	v
pglVertexStream1dATI	shared/GLee.c	/^PFNGLVERTEXSTREAM1DATIPROC pglVertexStream1dATI=_Lazy_glVertexStream1dATI;$/;"	v
pglVertexStream1dATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM1DATIPROC pglVertexStream1dATI;$/;"	v
pglVertexStream1dvATI	shared/GLee.c	/^PFNGLVERTEXSTREAM1DVATIPROC pglVertexStream1dvATI=_Lazy_glVertexStream1dvATI;$/;"	v
pglVertexStream1dvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM1DVATIPROC pglVertexStream1dvATI;$/;"	v
pglVertexStream1fATI	shared/GLee.c	/^PFNGLVERTEXSTREAM1FATIPROC pglVertexStream1fATI=_Lazy_glVertexStream1fATI;$/;"	v
pglVertexStream1fATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM1FATIPROC pglVertexStream1fATI;$/;"	v
pglVertexStream1fvATI	shared/GLee.c	/^PFNGLVERTEXSTREAM1FVATIPROC pglVertexStream1fvATI=_Lazy_glVertexStream1fvATI;$/;"	v
pglVertexStream1fvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM1FVATIPROC pglVertexStream1fvATI;$/;"	v
pglVertexStream1iATI	shared/GLee.c	/^PFNGLVERTEXSTREAM1IATIPROC pglVertexStream1iATI=_Lazy_glVertexStream1iATI;$/;"	v
pglVertexStream1iATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM1IATIPROC pglVertexStream1iATI;$/;"	v
pglVertexStream1ivATI	shared/GLee.c	/^PFNGLVERTEXSTREAM1IVATIPROC pglVertexStream1ivATI=_Lazy_glVertexStream1ivATI;$/;"	v
pglVertexStream1ivATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM1IVATIPROC pglVertexStream1ivATI;$/;"	v
pglVertexStream1sATI	shared/GLee.c	/^PFNGLVERTEXSTREAM1SATIPROC pglVertexStream1sATI=_Lazy_glVertexStream1sATI;$/;"	v
pglVertexStream1sATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM1SATIPROC pglVertexStream1sATI;$/;"	v
pglVertexStream1svATI	shared/GLee.c	/^PFNGLVERTEXSTREAM1SVATIPROC pglVertexStream1svATI=_Lazy_glVertexStream1svATI;$/;"	v
pglVertexStream1svATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM1SVATIPROC pglVertexStream1svATI;$/;"	v
pglVertexStream2dATI	shared/GLee.c	/^PFNGLVERTEXSTREAM2DATIPROC pglVertexStream2dATI=_Lazy_glVertexStream2dATI;$/;"	v
pglVertexStream2dATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM2DATIPROC pglVertexStream2dATI;$/;"	v
pglVertexStream2dvATI	shared/GLee.c	/^PFNGLVERTEXSTREAM2DVATIPROC pglVertexStream2dvATI=_Lazy_glVertexStream2dvATI;$/;"	v
pglVertexStream2dvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM2DVATIPROC pglVertexStream2dvATI;$/;"	v
pglVertexStream2fATI	shared/GLee.c	/^PFNGLVERTEXSTREAM2FATIPROC pglVertexStream2fATI=_Lazy_glVertexStream2fATI;$/;"	v
pglVertexStream2fATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM2FATIPROC pglVertexStream2fATI;$/;"	v
pglVertexStream2fvATI	shared/GLee.c	/^PFNGLVERTEXSTREAM2FVATIPROC pglVertexStream2fvATI=_Lazy_glVertexStream2fvATI;$/;"	v
pglVertexStream2fvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM2FVATIPROC pglVertexStream2fvATI;$/;"	v
pglVertexStream2iATI	shared/GLee.c	/^PFNGLVERTEXSTREAM2IATIPROC pglVertexStream2iATI=_Lazy_glVertexStream2iATI;$/;"	v
pglVertexStream2iATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM2IATIPROC pglVertexStream2iATI;$/;"	v
pglVertexStream2ivATI	shared/GLee.c	/^PFNGLVERTEXSTREAM2IVATIPROC pglVertexStream2ivATI=_Lazy_glVertexStream2ivATI;$/;"	v
pglVertexStream2ivATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM2IVATIPROC pglVertexStream2ivATI;$/;"	v
pglVertexStream2sATI	shared/GLee.c	/^PFNGLVERTEXSTREAM2SATIPROC pglVertexStream2sATI=_Lazy_glVertexStream2sATI;$/;"	v
pglVertexStream2sATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM2SATIPROC pglVertexStream2sATI;$/;"	v
pglVertexStream2svATI	shared/GLee.c	/^PFNGLVERTEXSTREAM2SVATIPROC pglVertexStream2svATI=_Lazy_glVertexStream2svATI;$/;"	v
pglVertexStream2svATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM2SVATIPROC pglVertexStream2svATI;$/;"	v
pglVertexStream3dATI	shared/GLee.c	/^PFNGLVERTEXSTREAM3DATIPROC pglVertexStream3dATI=_Lazy_glVertexStream3dATI;$/;"	v
pglVertexStream3dATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM3DATIPROC pglVertexStream3dATI;$/;"	v
pglVertexStream3dvATI	shared/GLee.c	/^PFNGLVERTEXSTREAM3DVATIPROC pglVertexStream3dvATI=_Lazy_glVertexStream3dvATI;$/;"	v
pglVertexStream3dvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM3DVATIPROC pglVertexStream3dvATI;$/;"	v
pglVertexStream3fATI	shared/GLee.c	/^PFNGLVERTEXSTREAM3FATIPROC pglVertexStream3fATI=_Lazy_glVertexStream3fATI;$/;"	v
pglVertexStream3fATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM3FATIPROC pglVertexStream3fATI;$/;"	v
pglVertexStream3fvATI	shared/GLee.c	/^PFNGLVERTEXSTREAM3FVATIPROC pglVertexStream3fvATI=_Lazy_glVertexStream3fvATI;$/;"	v
pglVertexStream3fvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM3FVATIPROC pglVertexStream3fvATI;$/;"	v
pglVertexStream3iATI	shared/GLee.c	/^PFNGLVERTEXSTREAM3IATIPROC pglVertexStream3iATI=_Lazy_glVertexStream3iATI;$/;"	v
pglVertexStream3iATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM3IATIPROC pglVertexStream3iATI;$/;"	v
pglVertexStream3ivATI	shared/GLee.c	/^PFNGLVERTEXSTREAM3IVATIPROC pglVertexStream3ivATI=_Lazy_glVertexStream3ivATI;$/;"	v
pglVertexStream3ivATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM3IVATIPROC pglVertexStream3ivATI;$/;"	v
pglVertexStream3sATI	shared/GLee.c	/^PFNGLVERTEXSTREAM3SATIPROC pglVertexStream3sATI=_Lazy_glVertexStream3sATI;$/;"	v
pglVertexStream3sATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM3SATIPROC pglVertexStream3sATI;$/;"	v
pglVertexStream3svATI	shared/GLee.c	/^PFNGLVERTEXSTREAM3SVATIPROC pglVertexStream3svATI=_Lazy_glVertexStream3svATI;$/;"	v
pglVertexStream3svATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM3SVATIPROC pglVertexStream3svATI;$/;"	v
pglVertexStream4dATI	shared/GLee.c	/^PFNGLVERTEXSTREAM4DATIPROC pglVertexStream4dATI=_Lazy_glVertexStream4dATI;$/;"	v
pglVertexStream4dATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM4DATIPROC pglVertexStream4dATI;$/;"	v
pglVertexStream4dvATI	shared/GLee.c	/^PFNGLVERTEXSTREAM4DVATIPROC pglVertexStream4dvATI=_Lazy_glVertexStream4dvATI;$/;"	v
pglVertexStream4dvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM4DVATIPROC pglVertexStream4dvATI;$/;"	v
pglVertexStream4fATI	shared/GLee.c	/^PFNGLVERTEXSTREAM4FATIPROC pglVertexStream4fATI=_Lazy_glVertexStream4fATI;$/;"	v
pglVertexStream4fATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM4FATIPROC pglVertexStream4fATI;$/;"	v
pglVertexStream4fvATI	shared/GLee.c	/^PFNGLVERTEXSTREAM4FVATIPROC pglVertexStream4fvATI=_Lazy_glVertexStream4fvATI;$/;"	v
pglVertexStream4fvATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM4FVATIPROC pglVertexStream4fvATI;$/;"	v
pglVertexStream4iATI	shared/GLee.c	/^PFNGLVERTEXSTREAM4IATIPROC pglVertexStream4iATI=_Lazy_glVertexStream4iATI;$/;"	v
pglVertexStream4iATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM4IATIPROC pglVertexStream4iATI;$/;"	v
pglVertexStream4ivATI	shared/GLee.c	/^PFNGLVERTEXSTREAM4IVATIPROC pglVertexStream4ivATI=_Lazy_glVertexStream4ivATI;$/;"	v
pglVertexStream4ivATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM4IVATIPROC pglVertexStream4ivATI;$/;"	v
pglVertexStream4sATI	shared/GLee.c	/^PFNGLVERTEXSTREAM4SATIPROC pglVertexStream4sATI=_Lazy_glVertexStream4sATI;$/;"	v
pglVertexStream4sATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM4SATIPROC pglVertexStream4sATI;$/;"	v
pglVertexStream4svATI	shared/GLee.c	/^PFNGLVERTEXSTREAM4SVATIPROC pglVertexStream4svATI=_Lazy_glVertexStream4svATI;$/;"	v
pglVertexStream4svATI	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXSTREAM4SVATIPROC pglVertexStream4svATI;$/;"	v
pglVertexWeightPointerEXT	shared/GLee.c	/^PFNGLVERTEXWEIGHTPOINTEREXTPROC pglVertexWeightPointerEXT=_Lazy_glVertexWeightPointerEXT;$/;"	v
pglVertexWeightPointerEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXWEIGHTPOINTEREXTPROC pglVertexWeightPointerEXT;$/;"	v
pglVertexWeightfEXT	shared/GLee.c	/^PFNGLVERTEXWEIGHTFEXTPROC pglVertexWeightfEXT=_Lazy_glVertexWeightfEXT;$/;"	v
pglVertexWeightfEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXWEIGHTFEXTPROC pglVertexWeightfEXT;$/;"	v
pglVertexWeightfvEXT	shared/GLee.c	/^PFNGLVERTEXWEIGHTFVEXTPROC pglVertexWeightfvEXT=_Lazy_glVertexWeightfvEXT;$/;"	v
pglVertexWeightfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXWEIGHTFVEXTPROC pglVertexWeightfvEXT;$/;"	v
pglVertexWeighthNV	shared/GLee.c	/^PFNGLVERTEXWEIGHTHNVPROC pglVertexWeighthNV=_Lazy_glVertexWeighthNV;$/;"	v
pglVertexWeighthNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXWEIGHTHNVPROC pglVertexWeighthNV;$/;"	v
pglVertexWeighthvNV	shared/GLee.c	/^PFNGLVERTEXWEIGHTHVNVPROC pglVertexWeighthvNV=_Lazy_glVertexWeighthvNV;$/;"	v
pglVertexWeighthvNV	shared/GLee.h	/^GLEE_EXTERN PFNGLVERTEXWEIGHTHVNVPROC pglVertexWeighthvNV;$/;"	v
pglWeightPointerARB	shared/GLee.c	/^PFNGLWEIGHTPOINTERARBPROC pglWeightPointerARB=_Lazy_glWeightPointerARB;$/;"	v
pglWeightPointerARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWEIGHTPOINTERARBPROC pglWeightPointerARB;$/;"	v
pglWeightbvARB	shared/GLee.c	/^PFNGLWEIGHTBVARBPROC pglWeightbvARB=_Lazy_glWeightbvARB;$/;"	v
pglWeightbvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWEIGHTBVARBPROC pglWeightbvARB;$/;"	v
pglWeightdvARB	shared/GLee.c	/^PFNGLWEIGHTDVARBPROC pglWeightdvARB=_Lazy_glWeightdvARB;$/;"	v
pglWeightdvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWEIGHTDVARBPROC pglWeightdvARB;$/;"	v
pglWeightfvARB	shared/GLee.c	/^PFNGLWEIGHTFVARBPROC pglWeightfvARB=_Lazy_glWeightfvARB;$/;"	v
pglWeightfvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWEIGHTFVARBPROC pglWeightfvARB;$/;"	v
pglWeightivARB	shared/GLee.c	/^PFNGLWEIGHTIVARBPROC pglWeightivARB=_Lazy_glWeightivARB;$/;"	v
pglWeightivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWEIGHTIVARBPROC pglWeightivARB;$/;"	v
pglWeightsvARB	shared/GLee.c	/^PFNGLWEIGHTSVARBPROC pglWeightsvARB=_Lazy_glWeightsvARB;$/;"	v
pglWeightsvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWEIGHTSVARBPROC pglWeightsvARB;$/;"	v
pglWeightubvARB	shared/GLee.c	/^PFNGLWEIGHTUBVARBPROC pglWeightubvARB=_Lazy_glWeightubvARB;$/;"	v
pglWeightubvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWEIGHTUBVARBPROC pglWeightubvARB;$/;"	v
pglWeightuivARB	shared/GLee.c	/^PFNGLWEIGHTUIVARBPROC pglWeightuivARB=_Lazy_glWeightuivARB;$/;"	v
pglWeightuivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWEIGHTUIVARBPROC pglWeightuivARB;$/;"	v
pglWeightusvARB	shared/GLee.c	/^PFNGLWEIGHTUSVARBPROC pglWeightusvARB=_Lazy_glWeightusvARB;$/;"	v
pglWeightusvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWEIGHTUSVARBPROC pglWeightusvARB;$/;"	v
pglWindowPos2d	shared/GLee.c	/^PFNGLWINDOWPOS2DPROC pglWindowPos2d=_Lazy_glWindowPos2d;$/;"	v
pglWindowPos2d	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2DPROC pglWindowPos2d;$/;"	v
pglWindowPos2dARB	shared/GLee.c	/^PFNGLWINDOWPOS2DARBPROC pglWindowPos2dARB=_Lazy_glWindowPos2dARB;$/;"	v
pglWindowPos2dARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2DARBPROC pglWindowPos2dARB;$/;"	v
pglWindowPos2dMESA	shared/GLee.c	/^PFNGLWINDOWPOS2DMESAPROC pglWindowPos2dMESA=_Lazy_glWindowPos2dMESA;$/;"	v
pglWindowPos2dMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2DMESAPROC pglWindowPos2dMESA;$/;"	v
pglWindowPos2dv	shared/GLee.c	/^PFNGLWINDOWPOS2DVPROC pglWindowPos2dv=_Lazy_glWindowPos2dv;$/;"	v
pglWindowPos2dv	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2DVPROC pglWindowPos2dv;$/;"	v
pglWindowPos2dvARB	shared/GLee.c	/^PFNGLWINDOWPOS2DVARBPROC pglWindowPos2dvARB=_Lazy_glWindowPos2dvARB;$/;"	v
pglWindowPos2dvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2DVARBPROC pglWindowPos2dvARB;$/;"	v
pglWindowPos2dvMESA	shared/GLee.c	/^PFNGLWINDOWPOS2DVMESAPROC pglWindowPos2dvMESA=_Lazy_glWindowPos2dvMESA;$/;"	v
pglWindowPos2dvMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2DVMESAPROC pglWindowPos2dvMESA;$/;"	v
pglWindowPos2f	shared/GLee.c	/^PFNGLWINDOWPOS2FPROC pglWindowPos2f=_Lazy_glWindowPos2f;$/;"	v
pglWindowPos2f	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2FPROC pglWindowPos2f;$/;"	v
pglWindowPos2fARB	shared/GLee.c	/^PFNGLWINDOWPOS2FARBPROC pglWindowPos2fARB=_Lazy_glWindowPos2fARB;$/;"	v
pglWindowPos2fARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2FARBPROC pglWindowPos2fARB;$/;"	v
pglWindowPos2fMESA	shared/GLee.c	/^PFNGLWINDOWPOS2FMESAPROC pglWindowPos2fMESA=_Lazy_glWindowPos2fMESA;$/;"	v
pglWindowPos2fMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2FMESAPROC pglWindowPos2fMESA;$/;"	v
pglWindowPos2fv	shared/GLee.c	/^PFNGLWINDOWPOS2FVPROC pglWindowPos2fv=_Lazy_glWindowPos2fv;$/;"	v
pglWindowPos2fv	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2FVPROC pglWindowPos2fv;$/;"	v
pglWindowPos2fvARB	shared/GLee.c	/^PFNGLWINDOWPOS2FVARBPROC pglWindowPos2fvARB=_Lazy_glWindowPos2fvARB;$/;"	v
pglWindowPos2fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2FVARBPROC pglWindowPos2fvARB;$/;"	v
pglWindowPos2fvMESA	shared/GLee.c	/^PFNGLWINDOWPOS2FVMESAPROC pglWindowPos2fvMESA=_Lazy_glWindowPos2fvMESA;$/;"	v
pglWindowPos2fvMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2FVMESAPROC pglWindowPos2fvMESA;$/;"	v
pglWindowPos2i	shared/GLee.c	/^PFNGLWINDOWPOS2IPROC pglWindowPos2i=_Lazy_glWindowPos2i;$/;"	v
pglWindowPos2i	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2IPROC pglWindowPos2i;$/;"	v
pglWindowPos2iARB	shared/GLee.c	/^PFNGLWINDOWPOS2IARBPROC pglWindowPos2iARB=_Lazy_glWindowPos2iARB;$/;"	v
pglWindowPos2iARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2IARBPROC pglWindowPos2iARB;$/;"	v
pglWindowPos2iMESA	shared/GLee.c	/^PFNGLWINDOWPOS2IMESAPROC pglWindowPos2iMESA=_Lazy_glWindowPos2iMESA;$/;"	v
pglWindowPos2iMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2IMESAPROC pglWindowPos2iMESA;$/;"	v
pglWindowPos2iv	shared/GLee.c	/^PFNGLWINDOWPOS2IVPROC pglWindowPos2iv=_Lazy_glWindowPos2iv;$/;"	v
pglWindowPos2iv	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2IVPROC pglWindowPos2iv;$/;"	v
pglWindowPos2ivARB	shared/GLee.c	/^PFNGLWINDOWPOS2IVARBPROC pglWindowPos2ivARB=_Lazy_glWindowPos2ivARB;$/;"	v
pglWindowPos2ivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2IVARBPROC pglWindowPos2ivARB;$/;"	v
pglWindowPos2ivMESA	shared/GLee.c	/^PFNGLWINDOWPOS2IVMESAPROC pglWindowPos2ivMESA=_Lazy_glWindowPos2ivMESA;$/;"	v
pglWindowPos2ivMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2IVMESAPROC pglWindowPos2ivMESA;$/;"	v
pglWindowPos2s	shared/GLee.c	/^PFNGLWINDOWPOS2SPROC pglWindowPos2s=_Lazy_glWindowPos2s;$/;"	v
pglWindowPos2s	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2SPROC pglWindowPos2s;$/;"	v
pglWindowPos2sARB	shared/GLee.c	/^PFNGLWINDOWPOS2SARBPROC pglWindowPos2sARB=_Lazy_glWindowPos2sARB;$/;"	v
pglWindowPos2sARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2SARBPROC pglWindowPos2sARB;$/;"	v
pglWindowPos2sMESA	shared/GLee.c	/^PFNGLWINDOWPOS2SMESAPROC pglWindowPos2sMESA=_Lazy_glWindowPos2sMESA;$/;"	v
pglWindowPos2sMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2SMESAPROC pglWindowPos2sMESA;$/;"	v
pglWindowPos2sv	shared/GLee.c	/^PFNGLWINDOWPOS2SVPROC pglWindowPos2sv=_Lazy_glWindowPos2sv;$/;"	v
pglWindowPos2sv	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2SVPROC pglWindowPos2sv;$/;"	v
pglWindowPos2svARB	shared/GLee.c	/^PFNGLWINDOWPOS2SVARBPROC pglWindowPos2svARB=_Lazy_glWindowPos2svARB;$/;"	v
pglWindowPos2svARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2SVARBPROC pglWindowPos2svARB;$/;"	v
pglWindowPos2svMESA	shared/GLee.c	/^PFNGLWINDOWPOS2SVMESAPROC pglWindowPos2svMESA=_Lazy_glWindowPos2svMESA;$/;"	v
pglWindowPos2svMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS2SVMESAPROC pglWindowPos2svMESA;$/;"	v
pglWindowPos3d	shared/GLee.c	/^PFNGLWINDOWPOS3DPROC pglWindowPos3d=_Lazy_glWindowPos3d;$/;"	v
pglWindowPos3d	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3DPROC pglWindowPos3d;$/;"	v
pglWindowPos3dARB	shared/GLee.c	/^PFNGLWINDOWPOS3DARBPROC pglWindowPos3dARB=_Lazy_glWindowPos3dARB;$/;"	v
pglWindowPos3dARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3DARBPROC pglWindowPos3dARB;$/;"	v
pglWindowPos3dMESA	shared/GLee.c	/^PFNGLWINDOWPOS3DMESAPROC pglWindowPos3dMESA=_Lazy_glWindowPos3dMESA;$/;"	v
pglWindowPos3dMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3DMESAPROC pglWindowPos3dMESA;$/;"	v
pglWindowPos3dv	shared/GLee.c	/^PFNGLWINDOWPOS3DVPROC pglWindowPos3dv=_Lazy_glWindowPos3dv;$/;"	v
pglWindowPos3dv	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3DVPROC pglWindowPos3dv;$/;"	v
pglWindowPos3dvARB	shared/GLee.c	/^PFNGLWINDOWPOS3DVARBPROC pglWindowPos3dvARB=_Lazy_glWindowPos3dvARB;$/;"	v
pglWindowPos3dvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3DVARBPROC pglWindowPos3dvARB;$/;"	v
pglWindowPos3dvMESA	shared/GLee.c	/^PFNGLWINDOWPOS3DVMESAPROC pglWindowPos3dvMESA=_Lazy_glWindowPos3dvMESA;$/;"	v
pglWindowPos3dvMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3DVMESAPROC pglWindowPos3dvMESA;$/;"	v
pglWindowPos3f	shared/GLee.c	/^PFNGLWINDOWPOS3FPROC pglWindowPos3f=_Lazy_glWindowPos3f;$/;"	v
pglWindowPos3f	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3FPROC pglWindowPos3f;$/;"	v
pglWindowPos3fARB	shared/GLee.c	/^PFNGLWINDOWPOS3FARBPROC pglWindowPos3fARB=_Lazy_glWindowPos3fARB;$/;"	v
pglWindowPos3fARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3FARBPROC pglWindowPos3fARB;$/;"	v
pglWindowPos3fMESA	shared/GLee.c	/^PFNGLWINDOWPOS3FMESAPROC pglWindowPos3fMESA=_Lazy_glWindowPos3fMESA;$/;"	v
pglWindowPos3fMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3FMESAPROC pglWindowPos3fMESA;$/;"	v
pglWindowPos3fv	shared/GLee.c	/^PFNGLWINDOWPOS3FVPROC pglWindowPos3fv=_Lazy_glWindowPos3fv;$/;"	v
pglWindowPos3fv	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3FVPROC pglWindowPos3fv;$/;"	v
pglWindowPos3fvARB	shared/GLee.c	/^PFNGLWINDOWPOS3FVARBPROC pglWindowPos3fvARB=_Lazy_glWindowPos3fvARB;$/;"	v
pglWindowPos3fvARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3FVARBPROC pglWindowPos3fvARB;$/;"	v
pglWindowPos3fvMESA	shared/GLee.c	/^PFNGLWINDOWPOS3FVMESAPROC pglWindowPos3fvMESA=_Lazy_glWindowPos3fvMESA;$/;"	v
pglWindowPos3fvMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3FVMESAPROC pglWindowPos3fvMESA;$/;"	v
pglWindowPos3i	shared/GLee.c	/^PFNGLWINDOWPOS3IPROC pglWindowPos3i=_Lazy_glWindowPos3i;$/;"	v
pglWindowPos3i	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3IPROC pglWindowPos3i;$/;"	v
pglWindowPos3iARB	shared/GLee.c	/^PFNGLWINDOWPOS3IARBPROC pglWindowPos3iARB=_Lazy_glWindowPos3iARB;$/;"	v
pglWindowPos3iARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3IARBPROC pglWindowPos3iARB;$/;"	v
pglWindowPos3iMESA	shared/GLee.c	/^PFNGLWINDOWPOS3IMESAPROC pglWindowPos3iMESA=_Lazy_glWindowPos3iMESA;$/;"	v
pglWindowPos3iMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3IMESAPROC pglWindowPos3iMESA;$/;"	v
pglWindowPos3iv	shared/GLee.c	/^PFNGLWINDOWPOS3IVPROC pglWindowPos3iv=_Lazy_glWindowPos3iv;$/;"	v
pglWindowPos3iv	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3IVPROC pglWindowPos3iv;$/;"	v
pglWindowPos3ivARB	shared/GLee.c	/^PFNGLWINDOWPOS3IVARBPROC pglWindowPos3ivARB=_Lazy_glWindowPos3ivARB;$/;"	v
pglWindowPos3ivARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3IVARBPROC pglWindowPos3ivARB;$/;"	v
pglWindowPos3ivMESA	shared/GLee.c	/^PFNGLWINDOWPOS3IVMESAPROC pglWindowPos3ivMESA=_Lazy_glWindowPos3ivMESA;$/;"	v
pglWindowPos3ivMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3IVMESAPROC pglWindowPos3ivMESA;$/;"	v
pglWindowPos3s	shared/GLee.c	/^PFNGLWINDOWPOS3SPROC pglWindowPos3s=_Lazy_glWindowPos3s;$/;"	v
pglWindowPos3s	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3SPROC pglWindowPos3s;$/;"	v
pglWindowPos3sARB	shared/GLee.c	/^PFNGLWINDOWPOS3SARBPROC pglWindowPos3sARB=_Lazy_glWindowPos3sARB;$/;"	v
pglWindowPos3sARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3SARBPROC pglWindowPos3sARB;$/;"	v
pglWindowPos3sMESA	shared/GLee.c	/^PFNGLWINDOWPOS3SMESAPROC pglWindowPos3sMESA=_Lazy_glWindowPos3sMESA;$/;"	v
pglWindowPos3sMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3SMESAPROC pglWindowPos3sMESA;$/;"	v
pglWindowPos3sv	shared/GLee.c	/^PFNGLWINDOWPOS3SVPROC pglWindowPos3sv=_Lazy_glWindowPos3sv;$/;"	v
pglWindowPos3sv	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3SVPROC pglWindowPos3sv;$/;"	v
pglWindowPos3svARB	shared/GLee.c	/^PFNGLWINDOWPOS3SVARBPROC pglWindowPos3svARB=_Lazy_glWindowPos3svARB;$/;"	v
pglWindowPos3svARB	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3SVARBPROC pglWindowPos3svARB;$/;"	v
pglWindowPos3svMESA	shared/GLee.c	/^PFNGLWINDOWPOS3SVMESAPROC pglWindowPos3svMESA=_Lazy_glWindowPos3svMESA;$/;"	v
pglWindowPos3svMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS3SVMESAPROC pglWindowPos3svMESA;$/;"	v
pglWindowPos4dMESA	shared/GLee.c	/^PFNGLWINDOWPOS4DMESAPROC pglWindowPos4dMESA=_Lazy_glWindowPos4dMESA;$/;"	v
pglWindowPos4dMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS4DMESAPROC pglWindowPos4dMESA;$/;"	v
pglWindowPos4dvMESA	shared/GLee.c	/^PFNGLWINDOWPOS4DVMESAPROC pglWindowPos4dvMESA=_Lazy_glWindowPos4dvMESA;$/;"	v
pglWindowPos4dvMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS4DVMESAPROC pglWindowPos4dvMESA;$/;"	v
pglWindowPos4fMESA	shared/GLee.c	/^PFNGLWINDOWPOS4FMESAPROC pglWindowPos4fMESA=_Lazy_glWindowPos4fMESA;$/;"	v
pglWindowPos4fMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS4FMESAPROC pglWindowPos4fMESA;$/;"	v
pglWindowPos4fvMESA	shared/GLee.c	/^PFNGLWINDOWPOS4FVMESAPROC pglWindowPos4fvMESA=_Lazy_glWindowPos4fvMESA;$/;"	v
pglWindowPos4fvMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS4FVMESAPROC pglWindowPos4fvMESA;$/;"	v
pglWindowPos4iMESA	shared/GLee.c	/^PFNGLWINDOWPOS4IMESAPROC pglWindowPos4iMESA=_Lazy_glWindowPos4iMESA;$/;"	v
pglWindowPos4iMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS4IMESAPROC pglWindowPos4iMESA;$/;"	v
pglWindowPos4ivMESA	shared/GLee.c	/^PFNGLWINDOWPOS4IVMESAPROC pglWindowPos4ivMESA=_Lazy_glWindowPos4ivMESA;$/;"	v
pglWindowPos4ivMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS4IVMESAPROC pglWindowPos4ivMESA;$/;"	v
pglWindowPos4sMESA	shared/GLee.c	/^PFNGLWINDOWPOS4SMESAPROC pglWindowPos4sMESA=_Lazy_glWindowPos4sMESA;$/;"	v
pglWindowPos4sMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS4SMESAPROC pglWindowPos4sMESA;$/;"	v
pglWindowPos4svMESA	shared/GLee.c	/^PFNGLWINDOWPOS4SVMESAPROC pglWindowPos4svMESA=_Lazy_glWindowPos4svMESA;$/;"	v
pglWindowPos4svMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLWINDOWPOS4SVMESAPROC pglWindowPos4svMESA;$/;"	v
pglWriteMaskEXT	shared/GLee.c	/^PFNGLWRITEMASKEXTPROC pglWriteMaskEXT=_Lazy_glWriteMaskEXT;$/;"	v
pglWriteMaskEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLWRITEMASKEXTPROC pglWriteMaskEXT;$/;"	v
pglXBindChannelToWindowSGIX	shared/GLee.c	/^PFNGLXBINDCHANNELTOWINDOWSGIXPROC pglXBindChannelToWindowSGIX=_Lazy_glXBindChannelToWindowSGIX;$/;"	v
pglXBindChannelToWindowSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXBINDCHANNELTOWINDOWSGIXPROC pglXBindChannelToWindowSGIX;$/;"	v
pglXBindHyperpipeSGIX	shared/GLee.c	/^PFNGLXBINDHYPERPIPESGIXPROC pglXBindHyperpipeSGIX=_Lazy_glXBindHyperpipeSGIX;$/;"	v
pglXBindHyperpipeSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXBINDHYPERPIPESGIXPROC pglXBindHyperpipeSGIX;$/;"	v
pglXBindSwapBarrierSGIX	shared/GLee.c	/^PFNGLXBINDSWAPBARRIERSGIXPROC pglXBindSwapBarrierSGIX=_Lazy_glXBindSwapBarrierSGIX;$/;"	v
pglXBindSwapBarrierSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXBINDSWAPBARRIERSGIXPROC pglXBindSwapBarrierSGIX;$/;"	v
pglXChannelRectSGIX	shared/GLee.c	/^PFNGLXCHANNELRECTSGIXPROC pglXChannelRectSGIX=_Lazy_glXChannelRectSGIX;$/;"	v
pglXChannelRectSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXCHANNELRECTSGIXPROC pglXChannelRectSGIX;$/;"	v
pglXChannelRectSyncSGIX	shared/GLee.c	/^PFNGLXCHANNELRECTSYNCSGIXPROC pglXChannelRectSyncSGIX=_Lazy_glXChannelRectSyncSGIX;$/;"	v
pglXChannelRectSyncSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXCHANNELRECTSYNCSGIXPROC pglXChannelRectSyncSGIX;$/;"	v
pglXChooseFBConfig	shared/GLee.c	/^PFNGLXCHOOSEFBCONFIGPROC pglXChooseFBConfig=_Lazy_glXChooseFBConfig;$/;"	v
pglXChooseFBConfig	shared/GLee.h	/^GLEE_EXTERN PFNGLXCHOOSEFBCONFIGPROC pglXChooseFBConfig;$/;"	v
pglXChooseFBConfigSGIX	shared/GLee.c	/^PFNGLXCHOOSEFBCONFIGSGIXPROC pglXChooseFBConfigSGIX=_Lazy_glXChooseFBConfigSGIX;$/;"	v
pglXChooseFBConfigSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXCHOOSEFBCONFIGSGIXPROC pglXChooseFBConfigSGIX;$/;"	v
pglXCopySubBufferMESA	shared/GLee.c	/^PFNGLXCOPYSUBBUFFERMESAPROC pglXCopySubBufferMESA=_Lazy_glXCopySubBufferMESA;$/;"	v
pglXCopySubBufferMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLXCOPYSUBBUFFERMESAPROC pglXCopySubBufferMESA;$/;"	v
pglXCreateContextWithConfigSGIX	shared/GLee.c	/^PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC pglXCreateContextWithConfigSGIX=_Lazy_glXCreateContextWithConfigSGIX;$/;"	v
pglXCreateContextWithConfigSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC pglXCreateContextWithConfigSGIX;$/;"	v
pglXCreateGLXPbufferSGIX	shared/GLee.c	/^PFNGLXCREATEGLXPBUFFERSGIXPROC pglXCreateGLXPbufferSGIX=_Lazy_glXCreateGLXPbufferSGIX;$/;"	v
pglXCreateGLXPbufferSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXCREATEGLXPBUFFERSGIXPROC pglXCreateGLXPbufferSGIX;$/;"	v
pglXCreateGLXPixmapMESA	shared/GLee.c	/^PFNGLXCREATEGLXPIXMAPMESAPROC pglXCreateGLXPixmapMESA=_Lazy_glXCreateGLXPixmapMESA;$/;"	v
pglXCreateGLXPixmapMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLXCREATEGLXPIXMAPMESAPROC pglXCreateGLXPixmapMESA;$/;"	v
pglXCreateGLXPixmapWithConfigSGIX	shared/GLee.c	/^PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC pglXCreateGLXPixmapWithConfigSGIX=_Lazy_glXCreateGLXPixmapWithConfigSGIX;$/;"	v
pglXCreateGLXPixmapWithConfigSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC pglXCreateGLXPixmapWithConfigSGIX;$/;"	v
pglXCreateNewContext	shared/GLee.c	/^PFNGLXCREATENEWCONTEXTPROC pglXCreateNewContext=_Lazy_glXCreateNewContext;$/;"	v
pglXCreateNewContext	shared/GLee.h	/^GLEE_EXTERN PFNGLXCREATENEWCONTEXTPROC pglXCreateNewContext;$/;"	v
pglXCreatePbuffer	shared/GLee.c	/^PFNGLXCREATEPBUFFERPROC pglXCreatePbuffer=_Lazy_glXCreatePbuffer;$/;"	v
pglXCreatePbuffer	shared/GLee.h	/^GLEE_EXTERN PFNGLXCREATEPBUFFERPROC pglXCreatePbuffer;$/;"	v
pglXCreatePixmap	shared/GLee.c	/^PFNGLXCREATEPIXMAPPROC pglXCreatePixmap=_Lazy_glXCreatePixmap;$/;"	v
pglXCreatePixmap	shared/GLee.h	/^GLEE_EXTERN PFNGLXCREATEPIXMAPPROC pglXCreatePixmap;$/;"	v
pglXCreateWindow	shared/GLee.c	/^PFNGLXCREATEWINDOWPROC pglXCreateWindow=_Lazy_glXCreateWindow;$/;"	v
pglXCreateWindow	shared/GLee.h	/^GLEE_EXTERN PFNGLXCREATEWINDOWPROC pglXCreateWindow;$/;"	v
pglXCushionSGI	shared/GLee.c	/^PFNGLXCUSHIONSGIPROC pglXCushionSGI=_Lazy_glXCushionSGI;$/;"	v
pglXCushionSGI	shared/GLee.h	/^GLEE_EXTERN PFNGLXCUSHIONSGIPROC pglXCushionSGI;$/;"	v
pglXDestroyGLXPbufferSGIX	shared/GLee.c	/^PFNGLXDESTROYGLXPBUFFERSGIXPROC pglXDestroyGLXPbufferSGIX=_Lazy_glXDestroyGLXPbufferSGIX;$/;"	v
pglXDestroyGLXPbufferSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXDESTROYGLXPBUFFERSGIXPROC pglXDestroyGLXPbufferSGIX;$/;"	v
pglXDestroyHyperpipeConfigSGIX	shared/GLee.c	/^PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC pglXDestroyHyperpipeConfigSGIX=_Lazy_glXDestroyHyperpipeConfigSGIX;$/;"	v
pglXDestroyHyperpipeConfigSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC pglXDestroyHyperpipeConfigSGIX;$/;"	v
pglXDestroyPbuffer	shared/GLee.c	/^PFNGLXDESTROYPBUFFERPROC pglXDestroyPbuffer=_Lazy_glXDestroyPbuffer;$/;"	v
pglXDestroyPbuffer	shared/GLee.h	/^GLEE_EXTERN PFNGLXDESTROYPBUFFERPROC pglXDestroyPbuffer;$/;"	v
pglXDestroyPixmap	shared/GLee.c	/^PFNGLXDESTROYPIXMAPPROC pglXDestroyPixmap=_Lazy_glXDestroyPixmap;$/;"	v
pglXDestroyPixmap	shared/GLee.h	/^GLEE_EXTERN PFNGLXDESTROYPIXMAPPROC pglXDestroyPixmap;$/;"	v
pglXDestroyWindow	shared/GLee.c	/^PFNGLXDESTROYWINDOWPROC pglXDestroyWindow=_Lazy_glXDestroyWindow;$/;"	v
pglXDestroyWindow	shared/GLee.h	/^GLEE_EXTERN PFNGLXDESTROYWINDOWPROC pglXDestroyWindow;$/;"	v
pglXFreeContextEXT	shared/GLee.c	/^PFNGLXFREECONTEXTEXTPROC pglXFreeContextEXT=_Lazy_glXFreeContextEXT;$/;"	v
pglXFreeContextEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLXFREECONTEXTEXTPROC pglXFreeContextEXT;$/;"	v
pglXGetAGPOffsetMESA	shared/GLee.c	/^PFNGLXGETAGPOFFSETMESAPROC pglXGetAGPOffsetMESA=_Lazy_glXGetAGPOffsetMESA;$/;"	v
pglXGetAGPOffsetMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETAGPOFFSETMESAPROC pglXGetAGPOffsetMESA;$/;"	v
pglXGetContextIDEXT	shared/GLee.c	/^PFNGLXGETCONTEXTIDEXTPROC pglXGetContextIDEXT=_Lazy_glXGetContextIDEXT;$/;"	v
pglXGetContextIDEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETCONTEXTIDEXTPROC pglXGetContextIDEXT;$/;"	v
pglXGetCurrentDisplay	shared/GLee.c	/^PFNGLXGETCURRENTDISPLAYPROC pglXGetCurrentDisplay=_Lazy_glXGetCurrentDisplay;$/;"	v
pglXGetCurrentDisplay	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETCURRENTDISPLAYPROC pglXGetCurrentDisplay;$/;"	v
pglXGetCurrentDisplayEXT	shared/GLee.c	/^PFNGLXGETCURRENTDISPLAYEXTPROC pglXGetCurrentDisplayEXT=_Lazy_glXGetCurrentDisplayEXT;$/;"	v
pglXGetCurrentDisplayEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETCURRENTDISPLAYEXTPROC pglXGetCurrentDisplayEXT;$/;"	v
pglXGetCurrentReadDrawable	shared/GLee.c	/^PFNGLXGETCURRENTREADDRAWABLEPROC pglXGetCurrentReadDrawable=_Lazy_glXGetCurrentReadDrawable;$/;"	v
pglXGetCurrentReadDrawable	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETCURRENTREADDRAWABLEPROC pglXGetCurrentReadDrawable;$/;"	v
pglXGetCurrentReadDrawableSGI	shared/GLee.c	/^PFNGLXGETCURRENTREADDRAWABLESGIPROC pglXGetCurrentReadDrawableSGI=_Lazy_glXGetCurrentReadDrawableSGI;$/;"	v
pglXGetCurrentReadDrawableSGI	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETCURRENTREADDRAWABLESGIPROC pglXGetCurrentReadDrawableSGI;$/;"	v
pglXGetFBConfigAttrib	shared/GLee.c	/^PFNGLXGETFBCONFIGATTRIBPROC pglXGetFBConfigAttrib=_Lazy_glXGetFBConfigAttrib;$/;"	v
pglXGetFBConfigAttrib	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETFBCONFIGATTRIBPROC pglXGetFBConfigAttrib;$/;"	v
pglXGetFBConfigAttribSGIX	shared/GLee.c	/^PFNGLXGETFBCONFIGATTRIBSGIXPROC pglXGetFBConfigAttribSGIX=_Lazy_glXGetFBConfigAttribSGIX;$/;"	v
pglXGetFBConfigAttribSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETFBCONFIGATTRIBSGIXPROC pglXGetFBConfigAttribSGIX;$/;"	v
pglXGetFBConfigFromVisualSGIX	shared/GLee.c	/^PFNGLXGETFBCONFIGFROMVISUALSGIXPROC pglXGetFBConfigFromVisualSGIX=_Lazy_glXGetFBConfigFromVisualSGIX;$/;"	v
pglXGetFBConfigFromVisualSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETFBCONFIGFROMVISUALSGIXPROC pglXGetFBConfigFromVisualSGIX;$/;"	v
pglXGetFBConfigs	shared/GLee.c	/^PFNGLXGETFBCONFIGSPROC pglXGetFBConfigs=_Lazy_glXGetFBConfigs;$/;"	v
pglXGetFBConfigs	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETFBCONFIGSPROC pglXGetFBConfigs;$/;"	v
pglXGetMscRateOML	shared/GLee.c	/^PFNGLXGETMSCRATEOMLPROC pglXGetMscRateOML=_Lazy_glXGetMscRateOML;$/;"	v
pglXGetMscRateOML	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETMSCRATEOMLPROC pglXGetMscRateOML;$/;"	v
pglXGetProcAddress	shared/GLee.c	/^PFNGLXGETPROCADDRESSPROC pglXGetProcAddress=_Lazy_glXGetProcAddress;$/;"	v
pglXGetProcAddress	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETPROCADDRESSPROC pglXGetProcAddress;$/;"	v
pglXGetSelectedEvent	shared/GLee.c	/^PFNGLXGETSELECTEDEVENTPROC pglXGetSelectedEvent=_Lazy_glXGetSelectedEvent;$/;"	v
pglXGetSelectedEvent	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETSELECTEDEVENTPROC pglXGetSelectedEvent;$/;"	v
pglXGetSelectedEventSGIX	shared/GLee.c	/^PFNGLXGETSELECTEDEVENTSGIXPROC pglXGetSelectedEventSGIX=_Lazy_glXGetSelectedEventSGIX;$/;"	v
pglXGetSelectedEventSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETSELECTEDEVENTSGIXPROC pglXGetSelectedEventSGIX;$/;"	v
pglXGetSyncValuesOML	shared/GLee.c	/^PFNGLXGETSYNCVALUESOMLPROC pglXGetSyncValuesOML=_Lazy_glXGetSyncValuesOML;$/;"	v
pglXGetSyncValuesOML	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETSYNCVALUESOMLPROC pglXGetSyncValuesOML;$/;"	v
pglXGetTransparentIndexSUN	shared/GLee.c	/^PFNGLXGETTRANSPARENTINDEXSUNPROC pglXGetTransparentIndexSUN=_Lazy_glXGetTransparentIndexSUN;$/;"	v
pglXGetTransparentIndexSUN	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETTRANSPARENTINDEXSUNPROC pglXGetTransparentIndexSUN;$/;"	v
pglXGetVideoSyncSGI	shared/GLee.c	/^PFNGLXGETVIDEOSYNCSGIPROC pglXGetVideoSyncSGI=_Lazy_glXGetVideoSyncSGI;$/;"	v
pglXGetVideoSyncSGI	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETVIDEOSYNCSGIPROC pglXGetVideoSyncSGI;$/;"	v
pglXGetVisualFromFBConfig	shared/GLee.c	/^PFNGLXGETVISUALFROMFBCONFIGPROC pglXGetVisualFromFBConfig=_Lazy_glXGetVisualFromFBConfig;$/;"	v
pglXGetVisualFromFBConfig	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETVISUALFROMFBCONFIGPROC pglXGetVisualFromFBConfig;$/;"	v
pglXGetVisualFromFBConfigSGIX	shared/GLee.c	/^PFNGLXGETVISUALFROMFBCONFIGSGIXPROC pglXGetVisualFromFBConfigSGIX=_Lazy_glXGetVisualFromFBConfigSGIX;$/;"	v
pglXGetVisualFromFBConfigSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXGETVISUALFROMFBCONFIGSGIXPROC pglXGetVisualFromFBConfigSGIX;$/;"	v
pglXHyperpipeAttribSGIX	shared/GLee.c	/^PFNGLXHYPERPIPEATTRIBSGIXPROC pglXHyperpipeAttribSGIX=_Lazy_glXHyperpipeAttribSGIX;$/;"	v
pglXHyperpipeAttribSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXHYPERPIPEATTRIBSGIXPROC pglXHyperpipeAttribSGIX;$/;"	v
pglXHyperpipeConfigSGIX	shared/GLee.c	/^PFNGLXHYPERPIPECONFIGSGIXPROC pglXHyperpipeConfigSGIX=_Lazy_glXHyperpipeConfigSGIX;$/;"	v
pglXHyperpipeConfigSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXHYPERPIPECONFIGSGIXPROC pglXHyperpipeConfigSGIX;$/;"	v
pglXImportContextEXT	shared/GLee.c	/^PFNGLXIMPORTCONTEXTEXTPROC pglXImportContextEXT=_Lazy_glXImportContextEXT;$/;"	v
pglXImportContextEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLXIMPORTCONTEXTEXTPROC pglXImportContextEXT;$/;"	v
pglXJoinSwapGroupSGIX	shared/GLee.c	/^PFNGLXJOINSWAPGROUPSGIXPROC pglXJoinSwapGroupSGIX=_Lazy_glXJoinSwapGroupSGIX;$/;"	v
pglXJoinSwapGroupSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXJOINSWAPGROUPSGIXPROC pglXJoinSwapGroupSGIX;$/;"	v
pglXMakeContextCurrent	shared/GLee.c	/^PFNGLXMAKECONTEXTCURRENTPROC pglXMakeContextCurrent=_Lazy_glXMakeContextCurrent;$/;"	v
pglXMakeContextCurrent	shared/GLee.h	/^GLEE_EXTERN PFNGLXMAKECONTEXTCURRENTPROC pglXMakeContextCurrent;$/;"	v
pglXMakeCurrentReadSGI	shared/GLee.c	/^PFNGLXMAKECURRENTREADSGIPROC pglXMakeCurrentReadSGI=_Lazy_glXMakeCurrentReadSGI;$/;"	v
pglXMakeCurrentReadSGI	shared/GLee.h	/^GLEE_EXTERN PFNGLXMAKECURRENTREADSGIPROC pglXMakeCurrentReadSGI;$/;"	v
pglXQueryChannelDeltasSGIX	shared/GLee.c	/^PFNGLXQUERYCHANNELDELTASSGIXPROC pglXQueryChannelDeltasSGIX=_Lazy_glXQueryChannelDeltasSGIX;$/;"	v
pglXQueryChannelDeltasSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXQUERYCHANNELDELTASSGIXPROC pglXQueryChannelDeltasSGIX;$/;"	v
pglXQueryChannelRectSGIX	shared/GLee.c	/^PFNGLXQUERYCHANNELRECTSGIXPROC pglXQueryChannelRectSGIX=_Lazy_glXQueryChannelRectSGIX;$/;"	v
pglXQueryChannelRectSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXQUERYCHANNELRECTSGIXPROC pglXQueryChannelRectSGIX;$/;"	v
pglXQueryContext	shared/GLee.c	/^PFNGLXQUERYCONTEXTPROC pglXQueryContext=_Lazy_glXQueryContext;$/;"	v
pglXQueryContext	shared/GLee.h	/^GLEE_EXTERN PFNGLXQUERYCONTEXTPROC pglXQueryContext;$/;"	v
pglXQueryContextInfoEXT	shared/GLee.c	/^PFNGLXQUERYCONTEXTINFOEXTPROC pglXQueryContextInfoEXT=_Lazy_glXQueryContextInfoEXT;$/;"	v
pglXQueryContextInfoEXT	shared/GLee.h	/^GLEE_EXTERN PFNGLXQUERYCONTEXTINFOEXTPROC pglXQueryContextInfoEXT;$/;"	v
pglXQueryDrawable	shared/GLee.c	/^PFNGLXQUERYDRAWABLEPROC pglXQueryDrawable=_Lazy_glXQueryDrawable;$/;"	v
pglXQueryDrawable	shared/GLee.h	/^GLEE_EXTERN PFNGLXQUERYDRAWABLEPROC pglXQueryDrawable;$/;"	v
pglXQueryGLXPbufferSGIX	shared/GLee.c	/^PFNGLXQUERYGLXPBUFFERSGIXPROC pglXQueryGLXPbufferSGIX=_Lazy_glXQueryGLXPbufferSGIX;$/;"	v
pglXQueryGLXPbufferSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXQUERYGLXPBUFFERSGIXPROC pglXQueryGLXPbufferSGIX;$/;"	v
pglXQueryHyperpipeAttribSGIX	shared/GLee.c	/^PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC pglXQueryHyperpipeAttribSGIX=_Lazy_glXQueryHyperpipeAttribSGIX;$/;"	v
pglXQueryHyperpipeAttribSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC pglXQueryHyperpipeAttribSGIX;$/;"	v
pglXQueryHyperpipeBestAttribSGIX	shared/GLee.c	/^PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC pglXQueryHyperpipeBestAttribSGIX=_Lazy_glXQueryHyperpipeBestAttribSGIX;$/;"	v
pglXQueryHyperpipeBestAttribSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC pglXQueryHyperpipeBestAttribSGIX;$/;"	v
pglXQueryHyperpipeConfigSGIX	shared/GLee.c	/^PFNGLXQUERYHYPERPIPECONFIGSGIXPROC pglXQueryHyperpipeConfigSGIX=_Lazy_glXQueryHyperpipeConfigSGIX;$/;"	v
pglXQueryHyperpipeConfigSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXQUERYHYPERPIPECONFIGSGIXPROC pglXQueryHyperpipeConfigSGIX;$/;"	v
pglXQueryHyperpipeNetworkSGIX	shared/GLee.c	/^PFNGLXQUERYHYPERPIPENETWORKSGIXPROC pglXQueryHyperpipeNetworkSGIX=_Lazy_glXQueryHyperpipeNetworkSGIX;$/;"	v
pglXQueryHyperpipeNetworkSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXQUERYHYPERPIPENETWORKSGIXPROC pglXQueryHyperpipeNetworkSGIX;$/;"	v
pglXQueryMaxSwapBarriersSGIX	shared/GLee.c	/^PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC pglXQueryMaxSwapBarriersSGIX=_Lazy_glXQueryMaxSwapBarriersSGIX;$/;"	v
pglXQueryMaxSwapBarriersSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC pglXQueryMaxSwapBarriersSGIX;$/;"	v
pglXReleaseBuffersMESA	shared/GLee.c	/^PFNGLXRELEASEBUFFERSMESAPROC pglXReleaseBuffersMESA=_Lazy_glXReleaseBuffersMESA;$/;"	v
pglXReleaseBuffersMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLXRELEASEBUFFERSMESAPROC pglXReleaseBuffersMESA;$/;"	v
pglXSelectEvent	shared/GLee.c	/^PFNGLXSELECTEVENTPROC pglXSelectEvent=_Lazy_glXSelectEvent;$/;"	v
pglXSelectEvent	shared/GLee.h	/^GLEE_EXTERN PFNGLXSELECTEVENTPROC pglXSelectEvent;$/;"	v
pglXSelectEventSGIX	shared/GLee.c	/^PFNGLXSELECTEVENTSGIXPROC pglXSelectEventSGIX=_Lazy_glXSelectEventSGIX;$/;"	v
pglXSelectEventSGIX	shared/GLee.h	/^GLEE_EXTERN PFNGLXSELECTEVENTSGIXPROC pglXSelectEventSGIX;$/;"	v
pglXSet3DfxModeMESA	shared/GLee.c	/^PFNGLXSET3DFXMODEMESAPROC pglXSet3DfxModeMESA=_Lazy_glXSet3DfxModeMESA;$/;"	v
pglXSet3DfxModeMESA	shared/GLee.h	/^GLEE_EXTERN PFNGLXSET3DFXMODEMESAPROC pglXSet3DfxModeMESA;$/;"	v
pglXSwapBuffersMscOML	shared/GLee.c	/^PFNGLXSWAPBUFFERSMSCOMLPROC pglXSwapBuffersMscOML=_Lazy_glXSwapBuffersMscOML;$/;"	v
pglXSwapBuffersMscOML	shared/GLee.h	/^GLEE_EXTERN PFNGLXSWAPBUFFERSMSCOMLPROC pglXSwapBuffersMscOML;$/;"	v
pglXSwapIntervalSGI	shared/GLee.c	/^PFNGLXSWAPINTERVALSGIPROC pglXSwapIntervalSGI=_Lazy_glXSwapIntervalSGI;$/;"	v
pglXSwapIntervalSGI	shared/GLee.h	/^GLEE_EXTERN PFNGLXSWAPINTERVALSGIPROC pglXSwapIntervalSGI;$/;"	v
pglXWaitForMscOML	shared/GLee.c	/^PFNGLXWAITFORMSCOMLPROC pglXWaitForMscOML=_Lazy_glXWaitForMscOML;$/;"	v
pglXWaitForMscOML	shared/GLee.h	/^GLEE_EXTERN PFNGLXWAITFORMSCOMLPROC pglXWaitForMscOML;$/;"	v
pglXWaitForSbcOML	shared/GLee.c	/^PFNGLXWAITFORSBCOMLPROC pglXWaitForSbcOML=_Lazy_glXWaitForSbcOML;$/;"	v
pglXWaitForSbcOML	shared/GLee.h	/^GLEE_EXTERN PFNGLXWAITFORSBCOMLPROC pglXWaitForSbcOML;$/;"	v
pglXWaitVideoSyncSGI	shared/GLee.c	/^PFNGLXWAITVIDEOSYNCSGIPROC pglXWaitVideoSyncSGI=_Lazy_glXWaitVideoSyncSGI;$/;"	v
pglXWaitVideoSyncSGI	shared/GLee.h	/^GLEE_EXTERN PFNGLXWAITVIDEOSYNCSGIPROC pglXWaitVideoSyncSGI;$/;"	v
pipeName	include/GL/glxext.h	/^    char    pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];$/;"	m	struct:__anon3
pipeName	include/GL/glxext.h	/^    char    pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];$/;"	m	struct:__anon4
pipeName	include/GL/glxext.h	/^    char pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];$/;"	m	struct:__anon5
pipeName	include/GL/glxext.h	/^    char pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];$/;"	m	struct:__anon6
pipeName	shared/GLee.h	/^			char  pipeName[_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];$/;"	m	struct:__anon12
pipeName	shared/GLee.h	/^			char pipeName[_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];$/;"	m	struct:__anon13
pipeName	shared/GLee.h	/^			char pipeName[_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];$/;"	m	struct:__anon14
pipeName	shared/GLee.h	/^			char pipeName[_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];$/;"	m	struct:__anon15
pitch	include/GL/internal/dri_interface.h	/^    unsigned int pitch;$/;"	m	struct:__DRIbufferRec
pixel	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^    PreviewRgba &	pixel (unsigned int x, unsigned int y)$/;"	f	class:Imf::PreviewImage
pixel	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^    const PreviewRgba &	pixel (unsigned int x, unsigned int y) const$/;"	f	class:Imf::PreviewImage
pixel	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^    PreviewRgba &	pixel (unsigned int x, unsigned int y)$/;"	f	class:Imf::PreviewImage
pixel	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^    const PreviewRgba &	pixel (unsigned int x, unsigned int y) const$/;"	f	class:Imf::PreviewImage
pixels	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^    PreviewRgba *	pixels ()	{return _pixels;}$/;"	f	class:Imf::PreviewImage
pixels	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^    const PreviewRgba *	pixels () const	{return _pixels;}$/;"	f	class:Imf::PreviewImage
pixels	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^    PreviewRgba *	pixels ()	{return _pixels;}$/;"	f	class:Imf::PreviewImage
pixels	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^    const PreviewRgba *	pixels () const	{return _pixels;}$/;"	f	class:Imf::PreviewImage
planes	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^void Frustum<T>::planes(Plane3<T> p[6])$/;"	f	class:Imath::Frustum
planes	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^void Frustum<T>::planes(Plane3<T> p[6], const Matrix44<T> &M)$/;"	f	class:Imath::Frustum
planes	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^void Frustum<T>::planes(Plane3<T> p[6])$/;"	f	class:Imath::Frustum
planes	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^void Frustum<T>::planes(Plane3<T> p[6], const Matrix44<T> &M)$/;"	f	class:Imath::Frustum
points.cpp	chapt03/points/points.cpp	1;"	F
pointsz.cpp	chapt03/pointsz/pointsz.cpp	1;"	F
pos	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	/^    Vec3<T>			pos;$/;"	m	class:Imath::Line3
pos	shared/openexr-mac/include/OpenEXR/ImathLine.h	/^    Vec3<T>			pos;$/;"	m	class:Imath::Line3
posInf	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::posInf ()$/;"	f	class:half
posInf	shared/openexr-mac/include/OpenEXR/half.h	/^half::posInf ()$/;"	f	class:half
pow	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	pow   (T x, T y)	{return ::pow (double(x), double(y));}$/;"	f	struct:Imath::Math
pow	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	pow   (float x, float y)	{return ::powf (x, y);}$/;"	f	struct:Imath::Math
pow	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	pow   (T x, T y)	{return ::pow (double(x), double(y));}$/;"	f	struct:Imath::Math
pow	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	pow   (float x, float y)	{return ::powf (x, y);}$/;"	f	struct:Imath::Math
project	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVecAlgo.h	/^project (const Vec &s, const Vec &t)$/;"	f	namespace:Imath
project	shared/openexr-mac/include/OpenEXR/ImathVecAlgo.h	/^project (const Vec &s, const Vec &t)$/;"	f	namespace:Imath
projectPointToScreen	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^Vec2<T> Frustum<T>::projectPointToScreen(const Vec3<T> &point) const$/;"	f	class:Imath::Frustum
projectPointToScreen	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^Vec2<T> Frustum<T>::projectPointToScreen(const Vec3<T> &point) const$/;"	f	class:Imath::Frustum
projectScreenToRay	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^Line3<T> Frustum<T>::projectScreenToRay(const Vec2<T> &p) const$/;"	f	class:Imath::Frustum
projectScreenToRay	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^Line3<T> Frustum<T>::projectScreenToRay(const Vec2<T> &p) const$/;"	f	class:Imath::Frustum
projectionMatrix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^Matrix44<T> Frustum<T>::projectionMatrix() const$/;"	f	class:Imath::Frustum
projectionMatrix	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^Matrix44<T> Frustum<T>::projectionMatrix() const$/;"	f	class:Imath::Frustum
pstipple.cpp	chapt03/pstipple/pstipple.cpp	1;"	F
putImage	include/GL/internal/dri_interface.h	/^    void (*putImage)(__DRIdrawable *drawable, int op,$/;"	m	struct:__DRIswrastLoaderExtensionRec
pwglAllocateMemoryNV	shared/GLee.c	/^PFNWGLALLOCATEMEMORYNVPROC pwglAllocateMemoryNV=_Lazy_wglAllocateMemoryNV;$/;"	v
pwglAllocateMemoryNV	shared/GLee.h	/^GLEE_EXTERN PFNWGLALLOCATEMEMORYNVPROC pwglAllocateMemoryNV;$/;"	v
pwglAssociateImageBufferEventsI3D	shared/GLee.c	/^PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC pwglAssociateImageBufferEventsI3D=_Lazy_wglAssociateImageBufferEventsI3D;$/;"	v
pwglAssociateImageBufferEventsI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC pwglAssociateImageBufferEventsI3D;$/;"	v
pwglBeginFrameTrackingI3D	shared/GLee.c	/^PFNWGLBEGINFRAMETRACKINGI3DPROC pwglBeginFrameTrackingI3D=_Lazy_wglBeginFrameTrackingI3D;$/;"	v
pwglBeginFrameTrackingI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLBEGINFRAMETRACKINGI3DPROC pwglBeginFrameTrackingI3D;$/;"	v
pwglBindDisplayColorTableEXT	shared/GLee.c	/^PFNWGLBINDDISPLAYCOLORTABLEEXTPROC pwglBindDisplayColorTableEXT=_Lazy_wglBindDisplayColorTableEXT;$/;"	v
pwglBindDisplayColorTableEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLBINDDISPLAYCOLORTABLEEXTPROC pwglBindDisplayColorTableEXT;$/;"	v
pwglBindTexImageARB	shared/GLee.c	/^PFNWGLBINDTEXIMAGEARBPROC pwglBindTexImageARB=_Lazy_wglBindTexImageARB;$/;"	v
pwglBindTexImageARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLBINDTEXIMAGEARBPROC pwglBindTexImageARB;$/;"	v
pwglChoosePixelFormatARB	shared/GLee.c	/^PFNWGLCHOOSEPIXELFORMATARBPROC pwglChoosePixelFormatARB=_Lazy_wglChoosePixelFormatARB;$/;"	v
pwglChoosePixelFormatARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLCHOOSEPIXELFORMATARBPROC pwglChoosePixelFormatARB;$/;"	v
pwglChoosePixelFormatEXT	shared/GLee.c	/^PFNWGLCHOOSEPIXELFORMATEXTPROC pwglChoosePixelFormatEXT=_Lazy_wglChoosePixelFormatEXT;$/;"	v
pwglChoosePixelFormatEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLCHOOSEPIXELFORMATEXTPROC pwglChoosePixelFormatEXT;$/;"	v
pwglCreateBufferRegionARB	shared/GLee.c	/^PFNWGLCREATEBUFFERREGIONARBPROC pwglCreateBufferRegionARB=_Lazy_wglCreateBufferRegionARB;$/;"	v
pwglCreateBufferRegionARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLCREATEBUFFERREGIONARBPROC pwglCreateBufferRegionARB;$/;"	v
pwglCreateDisplayColorTableEXT	shared/GLee.c	/^PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC pwglCreateDisplayColorTableEXT=_Lazy_wglCreateDisplayColorTableEXT;$/;"	v
pwglCreateDisplayColorTableEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC pwglCreateDisplayColorTableEXT;$/;"	v
pwglCreateImageBufferI3D	shared/GLee.c	/^PFNWGLCREATEIMAGEBUFFERI3DPROC pwglCreateImageBufferI3D=_Lazy_wglCreateImageBufferI3D;$/;"	v
pwglCreateImageBufferI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLCREATEIMAGEBUFFERI3DPROC pwglCreateImageBufferI3D;$/;"	v
pwglCreatePbufferARB	shared/GLee.c	/^PFNWGLCREATEPBUFFERARBPROC pwglCreatePbufferARB=_Lazy_wglCreatePbufferARB;$/;"	v
pwglCreatePbufferARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLCREATEPBUFFERARBPROC pwglCreatePbufferARB;$/;"	v
pwglCreatePbufferEXT	shared/GLee.c	/^PFNWGLCREATEPBUFFEREXTPROC pwglCreatePbufferEXT=_Lazy_wglCreatePbufferEXT;$/;"	v
pwglCreatePbufferEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLCREATEPBUFFEREXTPROC pwglCreatePbufferEXT;$/;"	v
pwglDeleteBufferRegionARB	shared/GLee.c	/^PFNWGLDELETEBUFFERREGIONARBPROC pwglDeleteBufferRegionARB=_Lazy_wglDeleteBufferRegionARB;$/;"	v
pwglDeleteBufferRegionARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLDELETEBUFFERREGIONARBPROC pwglDeleteBufferRegionARB;$/;"	v
pwglDestroyDisplayColorTableEXT	shared/GLee.c	/^PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC pwglDestroyDisplayColorTableEXT=_Lazy_wglDestroyDisplayColorTableEXT;$/;"	v
pwglDestroyDisplayColorTableEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC pwglDestroyDisplayColorTableEXT;$/;"	v
pwglDestroyImageBufferI3D	shared/GLee.c	/^PFNWGLDESTROYIMAGEBUFFERI3DPROC pwglDestroyImageBufferI3D=_Lazy_wglDestroyImageBufferI3D;$/;"	v
pwglDestroyImageBufferI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLDESTROYIMAGEBUFFERI3DPROC pwglDestroyImageBufferI3D;$/;"	v
pwglDestroyPbufferARB	shared/GLee.c	/^PFNWGLDESTROYPBUFFERARBPROC pwglDestroyPbufferARB=_Lazy_wglDestroyPbufferARB;$/;"	v
pwglDestroyPbufferARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLDESTROYPBUFFERARBPROC pwglDestroyPbufferARB;$/;"	v
pwglDestroyPbufferEXT	shared/GLee.c	/^PFNWGLDESTROYPBUFFEREXTPROC pwglDestroyPbufferEXT=_Lazy_wglDestroyPbufferEXT;$/;"	v
pwglDestroyPbufferEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLDESTROYPBUFFEREXTPROC pwglDestroyPbufferEXT;$/;"	v
pwglDisableFrameLockI3D	shared/GLee.c	/^PFNWGLDISABLEFRAMELOCKI3DPROC pwglDisableFrameLockI3D=_Lazy_wglDisableFrameLockI3D;$/;"	v
pwglDisableFrameLockI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLDISABLEFRAMELOCKI3DPROC pwglDisableFrameLockI3D;$/;"	v
pwglDisableGenlockI3D	shared/GLee.c	/^PFNWGLDISABLEGENLOCKI3DPROC pwglDisableGenlockI3D=_Lazy_wglDisableGenlockI3D;$/;"	v
pwglDisableGenlockI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLDISABLEGENLOCKI3DPROC pwglDisableGenlockI3D;$/;"	v
pwglEnableFrameLockI3D	shared/GLee.c	/^PFNWGLENABLEFRAMELOCKI3DPROC pwglEnableFrameLockI3D=_Lazy_wglEnableFrameLockI3D;$/;"	v
pwglEnableFrameLockI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLENABLEFRAMELOCKI3DPROC pwglEnableFrameLockI3D;$/;"	v
pwglEnableGenlockI3D	shared/GLee.c	/^PFNWGLENABLEGENLOCKI3DPROC pwglEnableGenlockI3D=_Lazy_wglEnableGenlockI3D;$/;"	v
pwglEnableGenlockI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLENABLEGENLOCKI3DPROC pwglEnableGenlockI3D;$/;"	v
pwglEndFrameTrackingI3D	shared/GLee.c	/^PFNWGLENDFRAMETRACKINGI3DPROC pwglEndFrameTrackingI3D=_Lazy_wglEndFrameTrackingI3D;$/;"	v
pwglEndFrameTrackingI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLENDFRAMETRACKINGI3DPROC pwglEndFrameTrackingI3D;$/;"	v
pwglFreeMemoryNV	shared/GLee.c	/^PFNWGLFREEMEMORYNVPROC pwglFreeMemoryNV=_Lazy_wglFreeMemoryNV;$/;"	v
pwglFreeMemoryNV	shared/GLee.h	/^GLEE_EXTERN PFNWGLFREEMEMORYNVPROC pwglFreeMemoryNV;$/;"	v
pwglGenlockSampleRateI3D	shared/GLee.c	/^PFNWGLGENLOCKSAMPLERATEI3DPROC pwglGenlockSampleRateI3D=_Lazy_wglGenlockSampleRateI3D;$/;"	v
pwglGenlockSampleRateI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLGENLOCKSAMPLERATEI3DPROC pwglGenlockSampleRateI3D;$/;"	v
pwglGenlockSourceDelayI3D	shared/GLee.c	/^PFNWGLGENLOCKSOURCEDELAYI3DPROC pwglGenlockSourceDelayI3D=_Lazy_wglGenlockSourceDelayI3D;$/;"	v
pwglGenlockSourceDelayI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLGENLOCKSOURCEDELAYI3DPROC pwglGenlockSourceDelayI3D;$/;"	v
pwglGenlockSourceEdgeI3D	shared/GLee.c	/^PFNWGLGENLOCKSOURCEEDGEI3DPROC pwglGenlockSourceEdgeI3D=_Lazy_wglGenlockSourceEdgeI3D;$/;"	v
pwglGenlockSourceEdgeI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLGENLOCKSOURCEEDGEI3DPROC pwglGenlockSourceEdgeI3D;$/;"	v
pwglGenlockSourceI3D	shared/GLee.c	/^PFNWGLGENLOCKSOURCEI3DPROC pwglGenlockSourceI3D=_Lazy_wglGenlockSourceI3D;$/;"	v
pwglGenlockSourceI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLGENLOCKSOURCEI3DPROC pwglGenlockSourceI3D;$/;"	v
pwglGetCurrentReadDCARB	shared/GLee.c	/^PFNWGLGETCURRENTREADDCARBPROC pwglGetCurrentReadDCARB=_Lazy_wglGetCurrentReadDCARB;$/;"	v
pwglGetCurrentReadDCARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETCURRENTREADDCARBPROC pwglGetCurrentReadDCARB;$/;"	v
pwglGetCurrentReadDCEXT	shared/GLee.c	/^PFNWGLGETCURRENTREADDCEXTPROC pwglGetCurrentReadDCEXT=_Lazy_wglGetCurrentReadDCEXT;$/;"	v
pwglGetCurrentReadDCEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETCURRENTREADDCEXTPROC pwglGetCurrentReadDCEXT;$/;"	v
pwglGetDigitalVideoParametersI3D	shared/GLee.c	/^PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC pwglGetDigitalVideoParametersI3D=_Lazy_wglGetDigitalVideoParametersI3D;$/;"	v
pwglGetDigitalVideoParametersI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC pwglGetDigitalVideoParametersI3D;$/;"	v
pwglGetExtensionsStringARB	shared/GLee.c	/^PFNWGLGETEXTENSIONSSTRINGARBPROC pwglGetExtensionsStringARB=_Lazy_wglGetExtensionsStringARB;$/;"	v
pwglGetExtensionsStringARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETEXTENSIONSSTRINGARBPROC pwglGetExtensionsStringARB;$/;"	v
pwglGetExtensionsStringEXT	shared/GLee.c	/^PFNWGLGETEXTENSIONSSTRINGEXTPROC pwglGetExtensionsStringEXT=_Lazy_wglGetExtensionsStringEXT;$/;"	v
pwglGetExtensionsStringEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETEXTENSIONSSTRINGEXTPROC pwglGetExtensionsStringEXT;$/;"	v
pwglGetFrameUsageI3D	shared/GLee.c	/^PFNWGLGETFRAMEUSAGEI3DPROC pwglGetFrameUsageI3D=_Lazy_wglGetFrameUsageI3D;$/;"	v
pwglGetFrameUsageI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETFRAMEUSAGEI3DPROC pwglGetFrameUsageI3D;$/;"	v
pwglGetGammaTableI3D	shared/GLee.c	/^PFNWGLGETGAMMATABLEI3DPROC pwglGetGammaTableI3D=_Lazy_wglGetGammaTableI3D;$/;"	v
pwglGetGammaTableI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETGAMMATABLEI3DPROC pwglGetGammaTableI3D;$/;"	v
pwglGetGammaTableParametersI3D	shared/GLee.c	/^PFNWGLGETGAMMATABLEPARAMETERSI3DPROC pwglGetGammaTableParametersI3D=_Lazy_wglGetGammaTableParametersI3D;$/;"	v
pwglGetGammaTableParametersI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETGAMMATABLEPARAMETERSI3DPROC pwglGetGammaTableParametersI3D;$/;"	v
pwglGetGenlockSampleRateI3D	shared/GLee.c	/^PFNWGLGETGENLOCKSAMPLERATEI3DPROC pwglGetGenlockSampleRateI3D=_Lazy_wglGetGenlockSampleRateI3D;$/;"	v
pwglGetGenlockSampleRateI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETGENLOCKSAMPLERATEI3DPROC pwglGetGenlockSampleRateI3D;$/;"	v
pwglGetGenlockSourceDelayI3D	shared/GLee.c	/^PFNWGLGETGENLOCKSOURCEDELAYI3DPROC pwglGetGenlockSourceDelayI3D=_Lazy_wglGetGenlockSourceDelayI3D;$/;"	v
pwglGetGenlockSourceDelayI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETGENLOCKSOURCEDELAYI3DPROC pwglGetGenlockSourceDelayI3D;$/;"	v
pwglGetGenlockSourceEdgeI3D	shared/GLee.c	/^PFNWGLGETGENLOCKSOURCEEDGEI3DPROC pwglGetGenlockSourceEdgeI3D=_Lazy_wglGetGenlockSourceEdgeI3D;$/;"	v
pwglGetGenlockSourceEdgeI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETGENLOCKSOURCEEDGEI3DPROC pwglGetGenlockSourceEdgeI3D;$/;"	v
pwglGetGenlockSourceI3D	shared/GLee.c	/^PFNWGLGETGENLOCKSOURCEI3DPROC pwglGetGenlockSourceI3D=_Lazy_wglGetGenlockSourceI3D;$/;"	v
pwglGetGenlockSourceI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETGENLOCKSOURCEI3DPROC pwglGetGenlockSourceI3D;$/;"	v
pwglGetMscRateOML	shared/GLee.c	/^PFNWGLGETMSCRATEOMLPROC pwglGetMscRateOML=_Lazy_wglGetMscRateOML;$/;"	v
pwglGetMscRateOML	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETMSCRATEOMLPROC pwglGetMscRateOML;$/;"	v
pwglGetPbufferDCARB	shared/GLee.c	/^PFNWGLGETPBUFFERDCARBPROC pwglGetPbufferDCARB=_Lazy_wglGetPbufferDCARB;$/;"	v
pwglGetPbufferDCARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETPBUFFERDCARBPROC pwglGetPbufferDCARB;$/;"	v
pwglGetPbufferDCEXT	shared/GLee.c	/^PFNWGLGETPBUFFERDCEXTPROC pwglGetPbufferDCEXT=_Lazy_wglGetPbufferDCEXT;$/;"	v
pwglGetPbufferDCEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETPBUFFERDCEXTPROC pwglGetPbufferDCEXT;$/;"	v
pwglGetPixelFormatAttribfvARB	shared/GLee.c	/^PFNWGLGETPIXELFORMATATTRIBFVARBPROC pwglGetPixelFormatAttribfvARB=_Lazy_wglGetPixelFormatAttribfvARB;$/;"	v
pwglGetPixelFormatAttribfvARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETPIXELFORMATATTRIBFVARBPROC pwglGetPixelFormatAttribfvARB;$/;"	v
pwglGetPixelFormatAttribfvEXT	shared/GLee.c	/^PFNWGLGETPIXELFORMATATTRIBFVEXTPROC pwglGetPixelFormatAttribfvEXT=_Lazy_wglGetPixelFormatAttribfvEXT;$/;"	v
pwglGetPixelFormatAttribfvEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETPIXELFORMATATTRIBFVEXTPROC pwglGetPixelFormatAttribfvEXT;$/;"	v
pwglGetPixelFormatAttribivARB	shared/GLee.c	/^PFNWGLGETPIXELFORMATATTRIBIVARBPROC pwglGetPixelFormatAttribivARB=_Lazy_wglGetPixelFormatAttribivARB;$/;"	v
pwglGetPixelFormatAttribivARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETPIXELFORMATATTRIBIVARBPROC pwglGetPixelFormatAttribivARB;$/;"	v
pwglGetPixelFormatAttribivEXT	shared/GLee.c	/^PFNWGLGETPIXELFORMATATTRIBIVEXTPROC pwglGetPixelFormatAttribivEXT=_Lazy_wglGetPixelFormatAttribivEXT;$/;"	v
pwglGetPixelFormatAttribivEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETPIXELFORMATATTRIBIVEXTPROC pwglGetPixelFormatAttribivEXT;$/;"	v
pwglGetSwapIntervalEXT	shared/GLee.c	/^PFNWGLGETSWAPINTERVALEXTPROC pwglGetSwapIntervalEXT=_Lazy_wglGetSwapIntervalEXT;$/;"	v
pwglGetSwapIntervalEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETSWAPINTERVALEXTPROC pwglGetSwapIntervalEXT;$/;"	v
pwglGetSyncValuesOML	shared/GLee.c	/^PFNWGLGETSYNCVALUESOMLPROC pwglGetSyncValuesOML=_Lazy_wglGetSyncValuesOML;$/;"	v
pwglGetSyncValuesOML	shared/GLee.h	/^GLEE_EXTERN PFNWGLGETSYNCVALUESOMLPROC pwglGetSyncValuesOML;$/;"	v
pwglIsEnabledFrameLockI3D	shared/GLee.c	/^PFNWGLISENABLEDFRAMELOCKI3DPROC pwglIsEnabledFrameLockI3D=_Lazy_wglIsEnabledFrameLockI3D;$/;"	v
pwglIsEnabledFrameLockI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLISENABLEDFRAMELOCKI3DPROC pwglIsEnabledFrameLockI3D;$/;"	v
pwglIsEnabledGenlockI3D	shared/GLee.c	/^PFNWGLISENABLEDGENLOCKI3DPROC pwglIsEnabledGenlockI3D=_Lazy_wglIsEnabledGenlockI3D;$/;"	v
pwglIsEnabledGenlockI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLISENABLEDGENLOCKI3DPROC pwglIsEnabledGenlockI3D;$/;"	v
pwglLoadDisplayColorTableEXT	shared/GLee.c	/^PFNWGLLOADDISPLAYCOLORTABLEEXTPROC pwglLoadDisplayColorTableEXT=_Lazy_wglLoadDisplayColorTableEXT;$/;"	v
pwglLoadDisplayColorTableEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLLOADDISPLAYCOLORTABLEEXTPROC pwglLoadDisplayColorTableEXT;$/;"	v
pwglMakeContextCurrentARB	shared/GLee.c	/^PFNWGLMAKECONTEXTCURRENTARBPROC pwglMakeContextCurrentARB=_Lazy_wglMakeContextCurrentARB;$/;"	v
pwglMakeContextCurrentARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLMAKECONTEXTCURRENTARBPROC pwglMakeContextCurrentARB;$/;"	v
pwglMakeContextCurrentEXT	shared/GLee.c	/^PFNWGLMAKECONTEXTCURRENTEXTPROC pwglMakeContextCurrentEXT=_Lazy_wglMakeContextCurrentEXT;$/;"	v
pwglMakeContextCurrentEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLMAKECONTEXTCURRENTEXTPROC pwglMakeContextCurrentEXT;$/;"	v
pwglQueryFrameLockMasterI3D	shared/GLee.c	/^PFNWGLQUERYFRAMELOCKMASTERI3DPROC pwglQueryFrameLockMasterI3D=_Lazy_wglQueryFrameLockMasterI3D;$/;"	v
pwglQueryFrameLockMasterI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLQUERYFRAMELOCKMASTERI3DPROC pwglQueryFrameLockMasterI3D;$/;"	v
pwglQueryFrameTrackingI3D	shared/GLee.c	/^PFNWGLQUERYFRAMETRACKINGI3DPROC pwglQueryFrameTrackingI3D=_Lazy_wglQueryFrameTrackingI3D;$/;"	v
pwglQueryFrameTrackingI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLQUERYFRAMETRACKINGI3DPROC pwglQueryFrameTrackingI3D;$/;"	v
pwglQueryGenlockMaxSourceDelayI3D	shared/GLee.c	/^PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC pwglQueryGenlockMaxSourceDelayI3D=_Lazy_wglQueryGenlockMaxSourceDelayI3D;$/;"	v
pwglQueryGenlockMaxSourceDelayI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC pwglQueryGenlockMaxSourceDelayI3D;$/;"	v
pwglQueryPbufferARB	shared/GLee.c	/^PFNWGLQUERYPBUFFERARBPROC pwglQueryPbufferARB=_Lazy_wglQueryPbufferARB;$/;"	v
pwglQueryPbufferARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLQUERYPBUFFERARBPROC pwglQueryPbufferARB;$/;"	v
pwglQueryPbufferEXT	shared/GLee.c	/^PFNWGLQUERYPBUFFEREXTPROC pwglQueryPbufferEXT=_Lazy_wglQueryPbufferEXT;$/;"	v
pwglQueryPbufferEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLQUERYPBUFFEREXTPROC pwglQueryPbufferEXT;$/;"	v
pwglReleaseImageBufferEventsI3D	shared/GLee.c	/^PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC pwglReleaseImageBufferEventsI3D=_Lazy_wglReleaseImageBufferEventsI3D;$/;"	v
pwglReleaseImageBufferEventsI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC pwglReleaseImageBufferEventsI3D;$/;"	v
pwglReleasePbufferDCARB	shared/GLee.c	/^PFNWGLRELEASEPBUFFERDCARBPROC pwglReleasePbufferDCARB=_Lazy_wglReleasePbufferDCARB;$/;"	v
pwglReleasePbufferDCARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLRELEASEPBUFFERDCARBPROC pwglReleasePbufferDCARB;$/;"	v
pwglReleasePbufferDCEXT	shared/GLee.c	/^PFNWGLRELEASEPBUFFERDCEXTPROC pwglReleasePbufferDCEXT=_Lazy_wglReleasePbufferDCEXT;$/;"	v
pwglReleasePbufferDCEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLRELEASEPBUFFERDCEXTPROC pwglReleasePbufferDCEXT;$/;"	v
pwglReleaseTexImageARB	shared/GLee.c	/^PFNWGLRELEASETEXIMAGEARBPROC pwglReleaseTexImageARB=_Lazy_wglReleaseTexImageARB;$/;"	v
pwglReleaseTexImageARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLRELEASETEXIMAGEARBPROC pwglReleaseTexImageARB;$/;"	v
pwglRestoreBufferRegionARB	shared/GLee.c	/^PFNWGLRESTOREBUFFERREGIONARBPROC pwglRestoreBufferRegionARB=_Lazy_wglRestoreBufferRegionARB;$/;"	v
pwglRestoreBufferRegionARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLRESTOREBUFFERREGIONARBPROC pwglRestoreBufferRegionARB;$/;"	v
pwglSaveBufferRegionARB	shared/GLee.c	/^PFNWGLSAVEBUFFERREGIONARBPROC pwglSaveBufferRegionARB=_Lazy_wglSaveBufferRegionARB;$/;"	v
pwglSaveBufferRegionARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLSAVEBUFFERREGIONARBPROC pwglSaveBufferRegionARB;$/;"	v
pwglSetDigitalVideoParametersI3D	shared/GLee.c	/^PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC pwglSetDigitalVideoParametersI3D=_Lazy_wglSetDigitalVideoParametersI3D;$/;"	v
pwglSetDigitalVideoParametersI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC pwglSetDigitalVideoParametersI3D;$/;"	v
pwglSetGammaTableI3D	shared/GLee.c	/^PFNWGLSETGAMMATABLEI3DPROC pwglSetGammaTableI3D=_Lazy_wglSetGammaTableI3D;$/;"	v
pwglSetGammaTableI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLSETGAMMATABLEI3DPROC pwglSetGammaTableI3D;$/;"	v
pwglSetGammaTableParametersI3D	shared/GLee.c	/^PFNWGLSETGAMMATABLEPARAMETERSI3DPROC pwglSetGammaTableParametersI3D=_Lazy_wglSetGammaTableParametersI3D;$/;"	v
pwglSetGammaTableParametersI3D	shared/GLee.h	/^GLEE_EXTERN PFNWGLSETGAMMATABLEPARAMETERSI3DPROC pwglSetGammaTableParametersI3D;$/;"	v
pwglSetPbufferAttribARB	shared/GLee.c	/^PFNWGLSETPBUFFERATTRIBARBPROC pwglSetPbufferAttribARB=_Lazy_wglSetPbufferAttribARB;$/;"	v
pwglSetPbufferAttribARB	shared/GLee.h	/^GLEE_EXTERN PFNWGLSETPBUFFERATTRIBARBPROC pwglSetPbufferAttribARB;$/;"	v
pwglSetStereoEmitterState3DL	shared/GLee.c	/^PFNWGLSETSTEREOEMITTERSTATE3DLPROC pwglSetStereoEmitterState3DL=_Lazy_wglSetStereoEmitterState3DL;$/;"	v
pwglSetStereoEmitterState3DL	shared/GLee.h	/^GLEE_EXTERN PFNWGLSETSTEREOEMITTERSTATE3DLPROC pwglSetStereoEmitterState3DL;$/;"	v
pwglSwapBuffersMscOML	shared/GLee.c	/^PFNWGLSWAPBUFFERSMSCOMLPROC pwglSwapBuffersMscOML=_Lazy_wglSwapBuffersMscOML;$/;"	v
pwglSwapBuffersMscOML	shared/GLee.h	/^GLEE_EXTERN PFNWGLSWAPBUFFERSMSCOMLPROC pwglSwapBuffersMscOML;$/;"	v
pwglSwapIntervalEXT	shared/GLee.c	/^PFNWGLSWAPINTERVALEXTPROC pwglSwapIntervalEXT=_Lazy_wglSwapIntervalEXT;$/;"	v
pwglSwapIntervalEXT	shared/GLee.h	/^GLEE_EXTERN PFNWGLSWAPINTERVALEXTPROC pwglSwapIntervalEXT;$/;"	v
pwglSwapLayerBuffersMscOML	shared/GLee.c	/^PFNWGLSWAPLAYERBUFFERSMSCOMLPROC pwglSwapLayerBuffersMscOML=_Lazy_wglSwapLayerBuffersMscOML;$/;"	v
pwglSwapLayerBuffersMscOML	shared/GLee.h	/^GLEE_EXTERN PFNWGLSWAPLAYERBUFFERSMSCOMLPROC pwglSwapLayerBuffersMscOML;$/;"	v
pwglWaitForMscOML	shared/GLee.c	/^PFNWGLWAITFORMSCOMLPROC pwglWaitForMscOML=_Lazy_wglWaitForMscOML;$/;"	v
pwglWaitForMscOML	shared/GLee.h	/^GLEE_EXTERN PFNWGLWAITFORMSCOMLPROC pwglWaitForMscOML;$/;"	v
pwglWaitForSbcOML	shared/GLee.c	/^PFNWGLWAITFORSBCOMLPROC pwglWaitForSbcOML=_Lazy_wglWaitForSbcOML;$/;"	v
pwglWaitForSbcOML	shared/GLee.h	/^GLEE_EXTERN PFNWGLWAITFORSBCOMLPROC pwglWaitForSbcOML;$/;"	v
qNan	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::qNan ()$/;"	f	class:half
qNan	shared/openexr-mac/include/OpenEXR/half.h	/^half::qNan ()$/;"	f	class:half
queryFrameTracking	include/GL/internal/dri_interface.h	/^    int (*queryFrameTracking)(__DRIdrawable *drawable,$/;"	m	struct:__DRIframeTrackingExtensionRec
quiet_NaN	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static half quiet_NaN () throw () {return half::qNan();}$/;"	f	class:std::numeric_limits
quiet_NaN	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static half quiet_NaN () throw () {return half::qNan();}$/;"	f	class:std::numeric_limits
r	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^    T			r, g, b, a;$/;"	m	class:Imath::Color4
r	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^    T			    r;	    \/\/ real part$/;"	m	class:Imath::Quat
r	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h	/^    ImfHalf	r;$/;"	m	struct:ImfRgba
r	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^    unsigned char	r;	\/\/ Red, green and blue components of$/;"	m	struct:Imf::PreviewRgba
r	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h	/^    half	r;$/;"	m	struct:Imf::Rgba
r	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^    T			r, g, b, a;$/;"	m	class:Imath::Color4
r	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^    T			    r;	    \/\/ real part$/;"	m	class:Imath::Quat
r	shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h	/^    ImfHalf	r;$/;"	m	struct:ImfRgba
r	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^    unsigned char	r;	\/\/ Red, green and blue components of$/;"	m	struct:Imf::PreviewRgba
r	shared/openexr-mac/include/OpenEXR/ImfRgba.h	/^    half	r;$/;"	m	struct:Imf::Rgba
radius	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathSphere.h	/^    T           radius;$/;"	m	class:Imath::Sphere3
radius	shared/openexr-mac/include/OpenEXR/ImathSphere.h	/^    T           radius;$/;"	m	class:Imath::Sphere3
radix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const int radix = HALF_RADIX;$/;"	m	class:std::numeric_limits
radix	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const int radix = HALF_RADIX;$/;"	m	class:std::numeric_limits
read	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^    read (T &in, Int64 &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^read (T &in, bool &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^read (T &in, char &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^read (T &in, char v[], int n)		\/\/ fixed-size char array$/;"	f	namespace:Imf::Xdr
read	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^read (T &in, double &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^read (T &in, float &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^read (T &in, half &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^read (T &in, int n, char v[])		\/\/ zero-terminated string$/;"	f	namespace:Imf::Xdr
read	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^read (T &in, signed char &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^read (T &in, signed int &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^read (T &in, signed long &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^read (T &in, signed short &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^read (T &in, unsigned char &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^read (T &in, unsigned int &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^read (T &in, unsigned long &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^read (T &in, unsigned short &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^    read (T &in, Int64 &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^read (T &in, bool &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^read (T &in, char &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^read (T &in, char v[], int n)		\/\/ fixed-size char array$/;"	f	namespace:Imf::Xdr
read	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^read (T &in, double &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^read (T &in, float &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^read (T &in, half &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^read (T &in, int n, char v[])		\/\/ zero-terminated string$/;"	f	namespace:Imf::Xdr
read	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^read (T &in, signed char &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^read (T &in, signed int &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^read (T &in, signed long &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^read (T &in, signed short &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^read (T &in, unsigned char &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^read (T &in, unsigned int &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^read (T &in, unsigned long &v)$/;"	f	namespace:Imf::Xdr
read	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^read (T &in, unsigned short &v)$/;"	f	namespace:Imf::Xdr
readChars	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIO.h	/^    readChars (IStream &is, char c[\/*n*\/], int n)$/;"	f	struct:Imf::StreamIO
readChars	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIO.h	/^    readChars (const char *&ip, char c[\/*n*\/], int n)$/;"	f	struct:Imf::CharPtrIO
readChars	shared/openexr-mac/include/OpenEXR/ImfIO.h	/^    readChars (IStream &is, char c[\/*n*\/], int n)$/;"	f	struct:Imf::StreamIO
readChars	shared/openexr-mac/include/OpenEXR/ImfIO.h	/^    readChars (const char *&ip, char c[\/*n*\/], int n)$/;"	f	struct:Imf::CharPtrIO
readSignedChars	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^readSignedChars (T &in, signed char c[], int n)$/;"	f	namespace:Imf::Xdr
readSignedChars	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^readSignedChars (T &in, signed char c[], int n)$/;"	f	namespace:Imf::Xdr
readUnsignedChars	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^readUnsignedChars (T &in, unsigned char c[], int n)$/;"	f	namespace:Imf::Xdr
readUnsignedChars	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^readUnsignedChars (T &in, unsigned char c[], int n)$/;"	f	namespace:Imf::Xdr
readValueFrom	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::readValueFrom (IStream &is, int size, int version)$/;"	f	class:Imf::TypedAttribute
readValueFrom	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::readValueFrom (IStream &is, int size, int version)$/;"	f	class:Imf::TypedAttribute
red	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChromaticities.h	/^    Imath::V2f	red;$/;"	m	struct:Imf::Chromaticities
red	shared/openexr-mac/include/OpenEXR/ImfChromaticities.h	/^    Imath::V2f	red;$/;"	m	struct:Imf::Chromaticities
reflect	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVecAlgo.h	/^reflect (const Vec &s, const Vec &t)$/;"	f	namespace:Imath
reflect	shared/openexr-mac/include/OpenEXR/ImathVecAlgo.h	/^reflect (const Vec &s, const Vec &t)$/;"	f	namespace:Imath
reflectPoint	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^inline Vec3<T> Plane3<T>::reflectPoint(const Vec3<T> &point) const$/;"	f	class:Imath::Plane3
reflectPoint	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^inline Vec3<T> Plane3<T>::reflectPoint(const Vec3<T> &point) const$/;"	f	class:Imath::Plane3
reflectVector	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^inline Vec3<T> Plane3<T>::reflectVector(const Vec3<T> &v) const$/;"	f	class:Imath::Plane3
reflectVector	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^inline Vec3<T> Plane3<T>::reflectVector(const Vec3<T> &v) const$/;"	f	class:Imath::Plane3
registerAttributeType	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::registerAttributeType ()$/;"	f	class:Imf::TypedAttribute
registerAttributeType	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::registerAttributeType ()$/;"	f	class:Imf::TypedAttribute
release	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h	/^    void release ()$/;"	f	class:IlmThread::Lock
release	shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h	/^    void release ()$/;"	f	class:IlmThread::Lock
removeScaling	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^removeScaling (Matrix33<T> &mat, bool exc)$/;"	f	namespace:Imath
removeScaling	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^removeScaling (Matrix44<T> &mat, bool exc)$/;"	f	namespace:Imath
removeScaling	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^removeScaling (Matrix33<T> &mat, bool exc)$/;"	f	namespace:Imath
removeScaling	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^removeScaling (Matrix44<T> &mat, bool exc)$/;"	f	namespace:Imath
removeScalingAndShear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^removeScalingAndShear (Matrix33<T> &mat, bool exc)$/;"	f	namespace:Imath
removeScalingAndShear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^removeScalingAndShear (Matrix44<T> &mat, bool exc)$/;"	f	namespace:Imath
removeScalingAndShear	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^removeScalingAndShear (Matrix33<T> &mat, bool exc)$/;"	f	namespace:Imath
removeScalingAndShear	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^removeScalingAndShear (Matrix44<T> &mat, bool exc)$/;"	f	namespace:Imath
reportDamage	include/GL/internal/dri_interface.h	/^    void (*reportDamage)(__DRIdrawable *draw,$/;"	m	struct:__DRIdamageExtensionRec
resizeErase	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^Array2D<T>::resizeErase (long sizeX, long sizeY)$/;"	f	class:Imf::Array2D
resizeErase	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^Array<T>::resizeErase (long size)$/;"	f	class:Imf::Array
resizeErase	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^Array2D<T>::resizeErase (long sizeX, long sizeY)$/;"	f	class:Imf::Array2D
resizeErase	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^Array<T>::resizeErase (long size)$/;"	f	class:Imf::Array
resizeEraseUnsafe	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^Array2D<T>::resizeEraseUnsafe (long sizeX, long sizeY)$/;"	f	class:Imf::Array2D
resizeEraseUnsafe	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^Array<T>::resizeEraseUnsafe (long size)$/;"	f	class:Imf::Array
resizeEraseUnsafe	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^Array2D<T>::resizeEraseUnsafe (long sizeX, long sizeY)$/;"	f	class:Imf::Array2D
resizeEraseUnsafe	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^Array<T>::resizeEraseUnsafe (long size)$/;"	f	class:Imf::Array
restrict	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlatform.h	78;"	d
restrict	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlatform.h	88;"	d
restrict	shared/openexr-mac/include/OpenEXR/ImathPlatform.h	78;"	d
restrict	shared/openexr-mac/include/OpenEXR/ImathPlatform.h	88;"	d
rgb2hsv	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColorAlgo.h	/^rgb2hsv(const Color4<T> &rgb)$/;"	f	namespace:Imath
rgb2hsv	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColorAlgo.h	/^rgb2hsv(const Vec3<T> &rgb)$/;"	f	namespace:Imath
rgb2hsv	shared/openexr-mac/include/OpenEXR/ImathColorAlgo.h	/^rgb2hsv(const Color4<T> &rgb)$/;"	f	namespace:Imath
rgb2hsv	shared/openexr-mac/include/OpenEXR/ImathColorAlgo.h	/^rgb2hsv(const Vec3<T> &rgb)$/;"	f	namespace:Imath
rgb2packed	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColorAlgo.h	/^rgb2packed(const Color4<T> &c)$/;"	f	namespace:Imath
rgb2packed	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColorAlgo.h	/^rgb2packed(const Vec3<T> &c)$/;"	f	namespace:Imath
rgb2packed	shared/openexr-mac/include/OpenEXR/ImathColorAlgo.h	/^rgb2packed(const Color4<T> &c)$/;"	f	namespace:Imath
rgb2packed	shared/openexr-mac/include/OpenEXR/ImathColorAlgo.h	/^rgb2packed(const Vec3<T> &c)$/;"	f	namespace:Imath
right	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^    T			right() const		{ return _right;	}$/;"	f	class:Imath::Frustum
right	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^    T			right() const		{ return _right;	}$/;"	f	class:Imath::Frustum
rightPlane	shared/glfrustum.h	/^        M3DVector4f nearPlane, farPlane, leftPlane, rightPlane;$/;"	m	class:GLFrustum
rotate	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::rotate (S r)$/;"	f	class:Imath::Matrix33
rotate	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::rotate (const Vec3<S> &r)$/;"	f	class:Imath::Matrix44
rotate	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::rotate (S r)$/;"	f	class:Imath::Matrix33
rotate	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::rotate (const Vec3<S> &r)$/;"	f	class:Imath::Matrix44
rotatePoint	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLineAlgo.h	/^rotatePoint(const Vec3<T> p, Line3<T> l, T angle)$/;"	f	namespace:Imath
rotatePoint	shared/openexr-mac/include/OpenEXR/ImathLineAlgo.h	/^rotatePoint(const Vec3<T> p, Line3<T> l, T angle)$/;"	f	namespace:Imath
rotationMatrix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^rotationMatrix (const Vec3<T> &from, const Vec3<T> &to)$/;"	f	namespace:Imath
rotationMatrix	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^rotationMatrix (const Vec3<T> &from, const Vec3<T> &to)$/;"	f	namespace:Imath
rotationMatrixWithUpDir	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^rotationMatrixWithUpDir (const Vec3<T> &fromDir,$/;"	f	namespace:Imath
rotationMatrixWithUpDir	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^rotationMatrixWithUpDir (const Vec3<T> &fromDir,$/;"	f	namespace:Imath
round	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::round (unsigned int n) const$/;"	f	class:half
round	shared/openexr-mac/include/OpenEXR/half.h	/^half::round (unsigned int n) const$/;"	f	class:half
roundNBit	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLut.h	/^    roundNBit (int n): n(n) {}$/;"	f	struct:Imf::roundNBit
roundNBit	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLut.h	/^struct roundNBit$/;"	s	namespace:Imf
roundNBit	shared/openexr-mac/include/OpenEXR/ImfLut.h	/^    roundNBit (int n): n(n) {}$/;"	f	struct:Imf::roundNBit
roundNBit	shared/openexr-mac/include/OpenEXR/ImfLut.h	/^struct roundNBit$/;"	s	namespace:Imf
round_error	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static half round_error () throw () {return HALF_EPSILON \/ 2;}$/;"	f	class:std::numeric_limits
round_error	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static half round_error () throw () {return HALF_EPSILON \/ 2;}$/;"	f	class:std::numeric_limits
round_style	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const float_round_style round_style = round_to_nearest;$/;"	m	class:std::numeric_limits
round_style	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const float_round_style round_style = round_to_nearest;$/;"	m	class:std::numeric_limits
roundingMode	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^    LevelRoundingMode	roundingMode;$/;"	m	class:Imf::TileDescription
roundingMode	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^    LevelRoundingMode	roundingMode;$/;"	m	class:Imf::TileDescription
rsize	chapt02/bounce/bounce.cpp	/^GLfloat rsize = 25;$/;"	v
rsize	chapt03/stencil/stencil.cpp	/^GLfloat rsize = 25;$/;"	v
sNan	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::sNan ()$/;"	f	class:half
sNan	shared/openexr-mac/include/OpenEXR/half.h	/^half::sNan ()$/;"	f	class:half
sansScaling	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^sansScaling (const Matrix33<T> &mat, bool exc)$/;"	f	namespace:Imath
sansScaling	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^sansScaling (const Matrix44<T> &mat, bool exc)$/;"	f	namespace:Imath
sansScaling	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^sansScaling (const Matrix33<T> &mat, bool exc)$/;"	f	namespace:Imath
sansScaling	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^sansScaling (const Matrix44<T> &mat, bool exc)$/;"	f	namespace:Imath
sansScalingAndShear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^sansScalingAndShear (const Matrix33<T> &mat, bool exc)$/;"	f	namespace:Imath
sansScalingAndShear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h	/^sansScalingAndShear (const Matrix44<T> &mat, bool exc)$/;"	f	namespace:Imath
sansScalingAndShear	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^sansScalingAndShear (const Matrix33<T> &mat, bool exc)$/;"	f	namespace:Imath
sansScalingAndShear	shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h	/^sansScalingAndShear (const Matrix44<T> &mat, bool exc)$/;"	f	namespace:Imath
scale	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::scale (const Vec2<S> &s)$/;"	f	class:Imath::Matrix33
scale	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::scale (const Vec3<S> &s)$/;"	f	class:Imath::Matrix44
scale	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::scale (const Vec2<S> &s)$/;"	f	class:Imath::Matrix33
scale	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::scale (const Vec3<S> &s)$/;"	f	class:Imath::Matrix44
scissor.cpp	chapt03/scissor/scissor.cpp	1;"	F
screenRadius	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^T Frustum<T>::screenRadius(const Vec3<T> &p, T radius) const$/;"	f	class:Imath::Frustum
screenRadius	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^T Frustum<T>::screenRadius(const Vec3<T> &p, T radius) const$/;"	f	class:Imath::Frustum
screenToLocal	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^Vec2<T> Frustum<T>::screenToLocal(const Vec2<T> &s) const$/;"	f	class:Imath::Frustum
screenToLocal	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^Vec2<T> Frustum<T>::screenToLocal(const Vec2<T> &s) const$/;"	f	class:Imath::Frustum
sema_t	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadSemaphore.h	/^	struct sema_t$/;"	s	class:IlmThread::Semaphore
sema_t	shared/openexr-mac/include/OpenEXR/IlmThreadSemaphore.h	/^	struct sema_t$/;"	s	class:IlmThread::Semaphore
send_event	include/GL/glx.h	/^    Bool send_event;		\/* true if this came for SendEvent request *\/$/;"	m	struct:__anon1
send_event	include/GL/glxext.h	/^    Bool send_event;		  \/* true if this came for SendEvent request *\/$/;"	m	struct:__anon2
send_event	shared/GLee.h	/^		Bool send_event;$/;"	m	struct:__anon11
serial	include/GL/glx.h	/^    unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon1
serial	include/GL/glxext.h	/^    unsigned long serial;	  \/* # of last request processed by server *\/$/;"	m	struct:__anon2
serial	shared/GLee.h	/^		unsigned long serial;$/;"	m	struct:__anon11
set	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^void Euler<T>::set(typename Euler<T>::Axis axis,$/;"	f	class:Imath::Euler
set	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^void Frustum<T>::set(T n, T f, T l, T r, T t, T b, bool o)$/;"	f	class:Imath::Frustum
set	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^void Frustum<T>::set(T near, T far, T fovx, T fovy, T aspect)$/;"	f	class:Imath::Frustum
set	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h	/^inline void Line3<T>::set(const Vec3<T> &p0, const Vec3<T> &p1)$/;"	f	class:Imath::Line3
set	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^inline void Plane3<T>::set(const Vec3<T>& n, T d)$/;"	f	class:Imath::Plane3
set	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^inline void Plane3<T>::set(const Vec3<T>& point, const Vec3<T>& n)$/;"	f	class:Imath::Plane3
set	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h	/^inline void Plane3<T>::set(const Vec3<T>& point1,$/;"	f	class:Imath::Plane3
set	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^void Euler<T>::set(typename Euler<T>::Axis axis,$/;"	f	class:Imath::Euler
set	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^void Frustum<T>::set(T n, T f, T l, T r, T t, T b, bool o)$/;"	f	class:Imath::Frustum
set	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^void Frustum<T>::set(T near, T far, T fovx, T fovy, T aspect)$/;"	f	class:Imath::Frustum
set	shared/openexr-mac/include/OpenEXR/ImathLine.h	/^inline void Line3<T>::set(const Vec3<T> &p0, const Vec3<T> &p1)$/;"	f	class:Imath::Line3
set	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^inline void Plane3<T>::set(const Vec3<T>& n, T d)$/;"	f	class:Imath::Plane3
set	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^inline void Plane3<T>::set(const Vec3<T>& point, const Vec3<T>& n)$/;"	f	class:Imath::Plane3
set	shared/openexr-mac/include/OpenEXR/ImathPlane.h	/^inline void Plane3<T>::set(const Vec3<T>& point1,$/;"	f	class:Imath::Plane3
setAxisAngle	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setAxisAngle (const Vec3<S>& axis, S angle)$/;"	f	class:Imath::Matrix44
setAxisAngle	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^inline Quat<T>& Quat<T>::setAxisAngle(const Vec3<T>& axis, T radians)$/;"	f	class:Imath::Quat
setAxisAngle	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setAxisAngle (const Vec3<S>& axis, S angle)$/;"	f	class:Imath::Matrix44
setAxisAngle	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^inline Quat<T>& Quat<T>::setAxisAngle(const Vec3<T>& axis, T radians)$/;"	f	class:Imath::Quat
setBits	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^half::setBits (unsigned short bits)$/;"	f	class:half
setBits	shared/openexr-mac/include/OpenEXR/half.h	/^half::setBits (unsigned short bits)$/;"	f	class:half
setEulerAngles	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setEulerAngles (const Vec3<S>& r)$/;"	f	class:Imath::Matrix44
setEulerAngles	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setEulerAngles (const Vec3<S>& r)$/;"	f	class:Imath::Matrix44
setOrder	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^inline void Euler<T>::setOrder(typename Euler<T>::Order p)$/;"	f	class:Imath::Euler
setOrder	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^inline void Euler<T>::setOrder(typename Euler<T>::Order p)$/;"	f	class:Imath::Euler
setOrthographic	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^void Frustum<T>::setOrthographic(bool ortho)$/;"	f	class:Imath::Frustum
setOrthographic	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^void Frustum<T>::setOrthographic(bool ortho)$/;"	f	class:Imath::Frustum
setRotation	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::setRotation (S r)$/;"	f	class:Imath::Matrix33
setRotation	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^Quat<T>::setRotation(const Vec3<T>& from, const Vec3<T>& to)$/;"	f	class:Imath::Quat
setRotation	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::setRotation (S r)$/;"	f	class:Imath::Matrix33
setRotation	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^Quat<T>::setRotation(const Vec3<T>& from, const Vec3<T>& to)$/;"	f	class:Imath::Quat
setScale	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::setScale (T s)$/;"	f	class:Imath::Matrix33
setScale	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::setScale (const Vec2<S> &s)$/;"	f	class:Imath::Matrix33
setScale	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setScale (T s)$/;"	f	class:Imath::Matrix44
setScale	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setScale (const Vec3<S> &s)$/;"	f	class:Imath::Matrix44
setScale	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::setScale (T s)$/;"	f	class:Imath::Matrix33
setScale	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::setScale (const Vec2<S> &s)$/;"	f	class:Imath::Matrix33
setScale	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setScale (T s)$/;"	f	class:Imath::Matrix44
setScale	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setScale (const Vec3<S> &s)$/;"	f	class:Imath::Matrix44
setShear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::setShear (const S &xy)$/;"	f	class:Imath::Matrix33
setShear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::setShear (const Vec2<S> &h)$/;"	f	class:Imath::Matrix33
setShear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setShear (const Shear6<S> &h)$/;"	f	class:Imath::Matrix44
setShear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setShear (const Vec3<S> &h)$/;"	f	class:Imath::Matrix44
setShear	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::setShear (const S &xy)$/;"	f	class:Imath::Matrix33
setShear	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::setShear (const Vec2<S> &h)$/;"	f	class:Imath::Matrix33
setShear	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setShear (const Shear6<S> &h)$/;"	f	class:Imath::Matrix44
setShear	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setShear (const Vec3<S> &h)$/;"	f	class:Imath::Matrix44
setSwapInterval	include/GL/internal/dri_interface.h	/^    void (*setSwapInterval)(__DRIdrawable *drawable, unsigned int inteval);$/;"	m	struct:__DRIswapControlExtensionRec
setTexBuffer	include/GL/internal/dri_interface.h	/^    void (*setTexBuffer)(__DRIcontext *pDRICtx,$/;"	m	struct:__DRItexBufferExtensionRec
setTexBuffer2	include/GL/internal/dri_interface.h	/^    void (*setTexBuffer2)(__DRIcontext *pDRICtx,$/;"	m	struct:__DRItexBufferExtensionRec
setTexOffset	include/GL/internal/dri_interface.h	/^    void (*setTexOffset)(__DRIcontext *pDRICtx, GLint texname,$/;"	m	struct:__DRItexOffsetExtensionRec
setTheMatrix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::setTheMatrix (const Matrix33<S> &v)$/;"	f	class:Imath::Matrix33
setTheMatrix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setTheMatrix (const Matrix44<S> &v)$/;"	f	class:Imath::Matrix44
setTheMatrix	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::setTheMatrix (const Matrix33<S> &v)$/;"	f	class:Imath::Matrix33
setTheMatrix	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setTheMatrix (const Matrix44<S> &v)$/;"	f	class:Imath::Matrix44
setTranslation	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::setTranslation (const Vec2<S> &t)$/;"	f	class:Imath::Matrix33
setTranslation	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setTranslation (const Vec3<S> &t)$/;"	f	class:Imath::Matrix44
setTranslation	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::setTranslation (const Vec2<S> &t)$/;"	f	class:Imath::Matrix33
setTranslation	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setTranslation (const Vec3<S> &t)$/;"	f	class:Imath::Matrix44
setValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::setValue (S x, S y, S z, S w)$/;"	f	class:Imath::Color4
setValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h	/^Color4<T>::setValue (const Color4<S> &v)$/;"	f	class:Imath::Color4
setValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::setValue (const Matrix33<S> &v)$/;"	f	class:Imath::Matrix33
setValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setValue (const Matrix44<S> &v)$/;"	f	class:Imath::Matrix44
setValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::setValue (S XY, S XZ, S YZ, S YX, S ZX, S ZY)$/;"	f	class:Imath::Shear6
setValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^Shear6<T>::setValue (const Shear6<S> &h)$/;"	f	class:Imath::Shear6
setValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::setValue (S a, S b)$/;"	f	class:Imath::Vec2
setValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec2<T>::setValue (const Vec2<S> &v)$/;"	f	class:Imath::Vec2
setValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::setValue (S a, S b, S c)$/;"	f	class:Imath::Vec3
setValue	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^Vec3<T>::setValue (const Vec3<S> &v)$/;"	f	class:Imath::Vec3
setValue	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::setValue (S x, S y, S z, S w)$/;"	f	class:Imath::Color4
setValue	shared/openexr-mac/include/OpenEXR/ImathColor.h	/^Color4<T>::setValue (const Color4<S> &v)$/;"	f	class:Imath::Color4
setValue	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::setValue (const Matrix33<S> &v)$/;"	f	class:Imath::Matrix33
setValue	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::setValue (const Matrix44<S> &v)$/;"	f	class:Imath::Matrix44
setValue	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::setValue (S XY, S XZ, S YZ, S YX, S ZX, S ZY)$/;"	f	class:Imath::Shear6
setValue	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^Shear6<T>::setValue (const Shear6<S> &h)$/;"	f	class:Imath::Shear6
setValue	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::setValue (S a, S b)$/;"	f	class:Imath::Vec2
setValue	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec2<T>::setValue (const Vec2<S> &v)$/;"	f	class:Imath::Vec2
setValue	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::setValue (S a, S b, S c)$/;"	f	class:Imath::Vec3
setValue	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^Vec3<T>::setValue (const Vec3<S> &v)$/;"	f	class:Imath::Vec3
setXYZVector	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^Euler<T>::setXYZVector(const Vec3<T> &v)$/;"	f	class:Imath::Euler
setXYZVector	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^Euler<T>::setXYZVector(const Vec3<T> &v)$/;"	f	class:Imath::Euler
shaderText	shared/gltools.cpp	/^static GLubyte shaderText[MAX_SHADER_LENGTH];$/;"	v	file:
shear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::shear (const S &xy)$/;"	f	class:Imath::Matrix33
shear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::shear (const Vec2<S> &h)$/;"	f	class:Imath::Matrix33
shear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::shear (const Shear6<S> &h)$/;"	f	class:Imath::Matrix44
shear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::shear (const Vec3<S> &h)$/;"	f	class:Imath::Matrix44
shear	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::shear (const S &xy)$/;"	f	class:Imath::Matrix33
shear	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::shear (const Vec2<S> &h)$/;"	f	class:Imath::Matrix33
shear	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::shear (const Shear6<S> &h)$/;"	f	class:Imath::Matrix44
shear	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::shear (const Vec3<S> &h)$/;"	f	class:Imath::Matrix44
shiftState	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^Rand48::shiftState()$/;"	f	class:Imath::Rand48
shiftState	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^Rand48::shiftState()$/;"	f	class:Imath::Rand48
sign	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^sign (T a)$/;"	f	namespace:Imath
sign	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^sign (T a)$/;"	f	namespace:Imath
signaling_NaN	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static half signaling_NaN () throw () {return half::sNan();}$/;"	f	class:std::numeric_limits
signaling_NaN	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static half signaling_NaN () throw () {return half::sNan();}$/;"	f	class:std::numeric_limits
signed	include/GL/gl.h	124;"	d
simple.cpp	chapt02/simple/simple.cpp	1;"	F
simpleXYZRotation	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^Euler<T>::simpleXYZRotation (Vec3<T> &xyzRot, const Vec3<T> &targetXyzRot)$/;"	f	class:Imath::Euler
simpleXYZRotation	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^Euler<T>::simpleXYZRotation (Vec3<T> &xyzRot, const Vec3<T> &targetXyzRot)$/;"	f	class:Imath::Euler
sin	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	sin   (T x)		{return ::sin (double(x));}$/;"	f	struct:Imath::Math
sin	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	sin   (float x)			{return ::sinf (x);}$/;"	f	struct:Imath::Math
sin	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	sin   (T x)		{return ::sin (double(x));}$/;"	f	struct:Imath::Math
sin	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	sin   (float x)			{return ::sinf (x);}$/;"	f	struct:Imath::Math
single.cpp	chapt03/single/single.cpp	1;"	F
sinh	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	sinh  (T x)		{return ::sinh (double(x));}$/;"	f	struct:Imath::Math
sinh	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	sinh  (float x)			{return ::sinhf (x);}$/;"	f	struct:Imath::Math
sinh	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	sinh  (T x)		{return ::sinh (double(x));}$/;"	f	struct:Imath::Math
sinh	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	sinh  (float x)			{return ::sinhf (x);}$/;"	f	struct:Imath::Math
size	include/GL/internal/dri_interface.h	/^    int size;               \/**< Framebuffer size, in bytes. *\/$/;"	m	struct:__DRIframebufferRec
size	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h	/^inline T Box<T>::size() const $/;"	f	class:Imath::Box
size	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h	/^Interval<T>::size() const $/;"	f	class:Imath::Interval
size	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^template <> inline int size <bool> ()			{return 1;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^template <> inline int size <char> ()			{return 1;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^template <> inline int size <double> ()			{return 8;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^template <> inline int size <float> ()			{return 4;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^template <> inline int size <half> ()			{return 2;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^template <> inline int size <signed char> ()		{return 1;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^template <> inline int size <signed int> ()		{return 4;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^template <> inline int size <signed long> ()		{return 8;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^template <> inline int size <signed short> ()		{return 2;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^template <> inline int size <unsigned char> ()		{return 1;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^template <> inline int size <unsigned int> ()		{return 4;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^template <> inline int size <unsigned long> ()		{return 8;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^template <> inline int size <unsigned short> ()		{return 2;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-mac/include/OpenEXR/ImathBox.h	/^inline T Box<T>::size() const $/;"	f	class:Imath::Box
size	shared/openexr-mac/include/OpenEXR/ImathInterval.h	/^Interval<T>::size() const $/;"	f	class:Imath::Interval
size	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^template <> inline int size <bool> ()			{return 1;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^template <> inline int size <char> ()			{return 1;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^template <> inline int size <double> ()			{return 8;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^template <> inline int size <float> ()			{return 4;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^template <> inline int size <half> ()			{return 2;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^template <> inline int size <signed char> ()		{return 1;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^template <> inline int size <signed int> ()		{return 4;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^template <> inline int size <signed long> ()		{return 8;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^template <> inline int size <signed short> ()		{return 2;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^template <> inline int size <unsigned char> ()		{return 1;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^template <> inline int size <unsigned int> ()		{return 4;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^template <> inline int size <unsigned long> ()		{return 8;}$/;"	f	namespace:Imf::Xdr
size	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^template <> inline int size <unsigned short> ()		{return 2;}$/;"	f	namespace:Imf::Xdr
skip	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^skip (T &in, int n)			\/\/ skip n padding bytes$/;"	f	namespace:Imf::Xdr
skip	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^skip (T &in, int n)			\/\/ skip n padding bytes$/;"	f	namespace:Imf::Xdr
slerp	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^slerp(const Quat<T> &q1,const Quat<T> &q2, T t)$/;"	f	namespace:Imath
slerp	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^slerp(const Quat<T> &q1,const Quat<T> &q2, T t)$/;"	f	namespace:Imath
slice	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::ConstIterator::slice () const$/;"	f	class:Imf::FrameBuffer::ConstIterator
slice	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::Iterator::slice () const$/;"	f	class:Imf::FrameBuffer::Iterator
slice	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::ConstIterator::slice () const$/;"	f	class:Imf::FrameBuffer::ConstIterator
slice	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^FrameBuffer::Iterator::slice () const$/;"	f	class:Imf::FrameBuffer::Iterator
smallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathHalfLimits.h	/^    static float		smallest()	{return HALF_MIN;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static char			smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static double		smallest()	{return DBL_MIN;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static float		smallest()	{return FLT_MIN;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static int			smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static long			smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static long double		smallest()	{return LDBL_MIN;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static short		smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static signed char		smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static unsigned char	smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static unsigned int		smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static unsigned long	smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h	/^    static unsigned short	smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-mac/include/OpenEXR/ImathHalfLimits.h	/^    static float		smallest()	{return HALF_MIN;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static char			smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static double		smallest()	{return DBL_MIN;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static float		smallest()	{return FLT_MIN;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static int			smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static long			smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static long double		smallest()	{return LDBL_MIN;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static short		smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static signed char		smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static unsigned char	smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static unsigned int		smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static unsigned long	smallest()	{return 1;}$/;"	f	struct:Imath::limits
smallest	shared/openexr-mac/include/OpenEXR/ImathLimits.h	/^    static unsigned short	smallest()	{return 1;}$/;"	f	struct:Imath::limits
solar.cpp	chapt04/Solar/solar.cpp	1;"	F
solidSphereRand	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h	/^solidSphereRand (Rand &rand)$/;"	f	namespace:Imath
solidSphereRand	shared/openexr-mac/include/OpenEXR/ImathRandom.h	/^solidSphereRand (Rand &rand)$/;"	f	namespace:Imath
solveCubic	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRoots.h	/^solveCubic (T a, T b, T c, T d, T x[3])$/;"	f	namespace:Imath
solveCubic	shared/openexr-mac/include/OpenEXR/ImathRoots.h	/^solveCubic (T a, T b, T c, T d, T x[3])$/;"	f	namespace:Imath
solveLinear	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRoots.h	/^solveLinear (T a, T b, T &x)$/;"	f	namespace:Imath
solveLinear	shared/openexr-mac/include/OpenEXR/ImathRoots.h	/^solveLinear (T a, T b, T &x)$/;"	f	namespace:Imath
solveNormalizedCubic	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRoots.h	/^solveNormalizedCubic (T r, T s, T t, T x[3])$/;"	f	namespace:Imath
solveNormalizedCubic	shared/openexr-mac/include/OpenEXR/ImathRoots.h	/^solveNormalizedCubic (T r, T s, T t, T x[3])$/;"	f	namespace:Imath
solveQuadratic	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRoots.h	/^solveQuadratic (T a, T b, T c, T x[2])$/;"	f	namespace:Imath
solveQuadratic	shared/openexr-mac/include/OpenEXR/ImathRoots.h	/^solveQuadratic (T a, T b, T c, T x[2])$/;"	f	namespace:Imath
sourceLight	chapt04/Solar/solar.cpp	/^GLfloat  sourceLight[] = { 0.8f, 0.8f, 0.8f, 1.0f };$/;"	v
spheres	chapt04/SphereWorld/sphereworld.cpp	/^GLFrame    spheres[NUM_SPHERES];$/;"	v
sphereworld.cpp	chapt04/SphereWorld/sphereworld.cpp	1;"	F
spline	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^Quat<T> spline(const Quat<T> &q0, const Quat<T> &q1,$/;"	f	namespace:Imath
spline	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^Quat<T> spline(const Quat<T> &q0, const Quat<T> &q1,$/;"	f	namespace:Imath
sqrt	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	sqrt  (T x)		{return ::sqrt (double(x));}$/;"	f	struct:Imath::Math
sqrt	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	sqrt  (float x)			{return ::sqrtf (x);}$/;"	f	struct:Imath::Math
sqrt	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	sqrt  (T x)		{return ::sqrt (double(x));}$/;"	f	struct:Imath::Math
sqrt	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	sqrt  (float x)			{return ::sqrtf (x);}$/;"	f	struct:Imath::Math
squad	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^Quat<T> squad(const Quat<T> &q1, const Quat<T> &qa,$/;"	f	namespace:Imath
squad	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^Quat<T> squad(const Quat<T> &q1, const Quat<T> &qa,$/;"	f	namespace:Imath
srcHeight	include/GL/glxext.h	/^    int srcXOrigin, srcYOrigin, srcWidth, srcHeight;$/;"	m	struct:__anon5
srcHeight	shared/GLee.h	/^			int srcHeight;$/;"	m	struct:__anon14
srcWidth	include/GL/glxext.h	/^    int srcXOrigin, srcYOrigin, srcWidth, srcHeight;$/;"	m	struct:__anon5
srcWidth	shared/GLee.h	/^			int srcWidth;$/;"	m	struct:__anon14
srcXOrigin	include/GL/glxext.h	/^    int srcXOrigin, srcYOrigin, srcWidth, srcHeight;$/;"	m	struct:__anon5
srcXOrigin	shared/GLee.h	/^			int srcXOrigin;$/;"	m	struct:__anon14
srcYOrigin	include/GL/glxext.h	/^    int srcXOrigin, srcYOrigin, srcWidth, srcHeight;$/;"	m	struct:__anon5
srcYOrigin	shared/GLee.h	/^			int srcYOrigin;$/;"	m	struct:__anon14
stackTrace	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexBaseExc.h	/^BaseExc::stackTrace () const$/;"	f	class:Iex::BaseExc
stackTrace	shared/openexr-mac/include/OpenEXR/IexBaseExc.h	/^BaseExc::stackTrace () const$/;"	f	class:Iex::BaseExc
star.cpp	chapt03/star/star.cpp	1;"	F
std	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^namespace std {$/;"	n
std	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^namespace std {$/;"	n
stencil.cpp	chapt03/stencil/stencil.cpp	1;"	F
stopwatch.h	shared/stopwatch.h	1;"	F
str	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStdIO.h	/^    std::string		str () const {return _os.str();}$/;"	f	class:Imf::StdOSStream
stride	include/GL/internal/dri_interface.h	/^    int stride;             \/**< Number of bytes from one line to the next. *\/$/;"	m	struct:__DRIframebufferRec
supportsFlags	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h	/^inline bool  supportsFlags (int flags)	{return !(flags & ~ALL_FLAGS);}$/;"	f	namespace:Imf
supportsFlags	shared/openexr-mac/include/OpenEXR/ImfVersion.h	/^inline bool  supportsFlags (int flags)	{return !(flags & ~ALL_FLAGS);}$/;"	f	namespace:Imf
swapBuffers	include/GL/internal/dri_interface.h	/^    void (*swapBuffers)(__DRIdrawable *drawable);$/;"	m	struct:__DRIcoreExtensionRec
tan	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	tan   (T x)		{return ::tan (double(x));}$/;"	f	struct:Imath::Math
tan	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	tan   (float x)			{return ::tanf (x);}$/;"	f	struct:Imath::Math
tan	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	tan   (T x)		{return ::tan (double(x));}$/;"	f	struct:Imath::Math
tan	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	tan   (float x)			{return ::tanf (x);}$/;"	f	struct:Imath::Math
tanh	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static T	tanh  (T x)		{return ::tanh (double(x));}$/;"	f	struct:Imath::Math
tanh	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h	/^   static float	tanh  (float x)			{return ::tanhf (x);}$/;"	f	struct:Imath::Math
tanh	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static T	tanh  (T x)		{return ::tanh (double(x));}$/;"	f	struct:Imath::Math
tanh	shared/openexr-mac/include/OpenEXR/ImathMath.h	/^   static float	tanh  (float x)			{return ::tanhf (x);}$/;"	f	struct:Imath::Math
text	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h	/^    const char *	text () const		{return _text;}$/;"	f	class:Imf::Name
text	shared/openexr-mac/include/OpenEXR/ImfName.h	/^    const char *	text () const		{return _text;}$/;"	f	class:Imf::Name
throwBadMatrix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^throwBadMatrix (const Imath::M44f& m)$/;"	f
throwBadMatrix	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^throwBadMatrix (const Imath::M44f& m)$/;"	f
timeSlice	include/GL/glxext.h	/^    int     timeSlice;$/;"	m	struct:__anon4
timeSlice	shared/GLee.h	/^			int timeSlice;$/;"	m	struct:__anon13
tinyness_before	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const bool tinyness_before = false;$/;"	m	class:std::numeric_limits
tinyness_before	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const bool tinyness_before = false;$/;"	m	class:std::numeric_limits
toMatrix33	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^Matrix33<T> Euler<T>::toMatrix33() const$/;"	f	class:Imath::Euler
toMatrix33	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^Matrix33<T> Quat<T>::toMatrix33() const$/;"	f	class:Imath::Quat
toMatrix33	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^Matrix33<T> Euler<T>::toMatrix33() const$/;"	f	class:Imath::Euler
toMatrix33	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^Matrix33<T> Quat<T>::toMatrix33() const$/;"	f	class:Imath::Quat
toMatrix44	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^Matrix44<T> Euler<T>::toMatrix44() const$/;"	f	class:Imath::Euler
toMatrix44	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^Matrix44<T> Quat<T>::toMatrix44() const$/;"	f	class:Imath::Quat
toMatrix44	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^Matrix44<T> Euler<T>::toMatrix44() const$/;"	f	class:Imath::Euler
toMatrix44	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^Matrix44<T> Quat<T>::toMatrix44() const$/;"	f	class:Imath::Quat
toQuat	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^Quat<T> Euler<T>::toQuat() const$/;"	f	class:Imath::Euler
toQuat	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^Quat<T> Euler<T>::toQuat() const$/;"	f	class:Imath::Euler
toXYZVector	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h	/^Euler<T>::toXYZVector() const$/;"	f	class:Imath::Euler
toXYZVector	shared/openexr-mac/include/OpenEXR/ImathEuler.h	/^Euler<T>::toXYZVector() const$/;"	f	class:Imath::Euler
top	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^    T			top() const		{ return _top;		}$/;"	f	class:Imath::Frustum
top	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^    T			top() const		{ return _top;		}$/;"	f	class:Imath::Frustum
topPlane	shared/glfrustum.h	/^        M3DVector4f topPlane, bottomPlane;$/;"	m	class:GLFrustum
transform	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBoxAlgo.h	/^transform(const Box< Vec3<S> >& box, const Matrix44<T>& m)$/;"	f	namespace:Imath
transform	shared/openexr-mac/include/OpenEXR/ImathBoxAlgo.h	/^transform(const Box< Vec3<S> >& box, const Matrix44<T>& m)$/;"	f	namespace:Imath
transform.cpp	chapt04/Transform/transform.cpp	1;"	F
transformgl.cpp	chapt04/Transformgl/transformgl.cpp	1;"	F
translate	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::translate (const Vec2<S> &t)$/;"	f	class:Imath::Matrix33
translate	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::translate (const Vec3<S> &t)$/;"	f	class:Imath::Matrix44
translate	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::translate (const Vec2<S> &t)$/;"	f	class:Imath::Matrix33
translate	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::translate (const Vec3<S> &t)$/;"	f	class:Imath::Matrix44
translation	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::translation () const$/;"	f	class:Imath::Matrix33
translation	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::translation () const$/;"	f	class:Imath::Matrix44
translation	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::translation () const$/;"	f	class:Imath::Matrix33
translation	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::translation () const$/;"	f	class:Imath::Matrix44
transpose	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::transpose ()$/;"	f	class:Imath::Matrix33
transpose	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::transpose ()$/;"	f	class:Imath::Matrix44
transpose	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::transpose ()$/;"	f	class:Imath::Matrix33
transpose	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::transpose ()$/;"	f	class:Imath::Matrix44
transposed	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::transposed () const$/;"	f	class:Imath::Matrix33
transposed	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::transposed () const$/;"	f	class:Imath::Matrix44
transposed	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix33<T>::transposed () const$/;"	f	class:Imath::Matrix33
transposed	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^Matrix44<T>::transposed () const$/;"	f	class:Imath::Matrix44
traps	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h	/^    static const bool traps = true;$/;"	m	class:std::numeric_limits
traps	shared/openexr-mac/include/OpenEXR/halfLimits.h	/^    static const bool traps = true;$/;"	m	class:std::numeric_limits
triangle.cpp	chapt03/triangle/triangle.cpp	1;"	F
triangles.cpp	c3.drawTriangles/triangles.cpp	1;"	F
trunc	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^trunc (T x)$/;"	f	namespace:Imath
trunc	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^trunc (T x)$/;"	f	namespace:Imath
type	include/GL/glxext.h	/^    int type;$/;"	m	struct:__anon2
type	shared/GLee.h	/^		int type;$/;"	m	struct:__anon11
type	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^    PixelType		type;$/;"	m	struct:Imf::Channel
type	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^    PixelType		type;$/;"	m	struct:Imf::Slice
type	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^    PixelType		type;$/;"	m	struct:Imf::Channel
type	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^    PixelType		type;$/;"	m	struct:Imf::Slice
typeName	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::typeName () const$/;"	f	class:Imf::TypedAttribute
typeName	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::typeName () const$/;"	f	class:Imf::TypedAttribute
typedAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::typedAttribute (const char name[]) const$/;"	f	class:Imf::Header
typedAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h	/^Header::typedAttribute (const char name[])$/;"	f	class:Imf::Header
typedAttribute	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::typedAttribute (const char name[]) const$/;"	f	class:Imf::Header
typedAttribute	shared/openexr-mac/include/OpenEXR/ImfHeader.h	/^Header::typedAttribute (const char name[])$/;"	f	class:Imf::Header
uif	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h	/^    union uif$/;"	u	class:half
uif	shared/openexr-mac/include/OpenEXR/half.h	/^    union uif$/;"	u	class:half
uint64_t	include/GL/glext.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	include/GL/glext.h	/^typedef unsigned long int uint64_t;$/;"	t
uint64_t	include/GL/glext.h	/^typedef unsigned long long int uint64_t;$/;"	t
uint64_t	include/GL/glxext.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	include/GL/glxext.h	/^typedef unsigned long int uint64_t;$/;"	t
uint64_t	include/GL/glxext.h	/^typedef unsigned long long int uint64_t;$/;"	t
ulerp	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h	/^ulerp (T a, T b, Q t)$/;"	f	namespace:Imath
ulerp	shared/openexr-mac/include/OpenEXR/ImathFun.h	/^ulerp (T a, T b, Q t)$/;"	f	namespace:Imath
unRegisterAttributeType	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::unRegisterAttributeType ()$/;"	f	class:Imf::TypedAttribute
unRegisterAttributeType	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::unRegisterAttributeType ()$/;"	f	class:Imf::TypedAttribute
unbindContext	include/GL/internal/dri_interface.h	/^    int (*unbindContext)(__DRIcontext *ctx);$/;"	m	struct:__DRIcoreExtensionRec
v	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h	/^    Vec3<T>		    v;	    \/\/ imaginary vector$/;"	m	class:Imath::Quat
v	shared/openexr-mac/include/OpenEXR/ImathQuat.h	/^    Vec3<T>		    v;	    \/\/ imaginary vector$/;"	m	class:Imath::Quat
vForward	shared/glFrame.h	/^        M3DVector3f vForward;	\/\/ Where am I going?$/;"	m	class:GLFrame
vOrigin	shared/glFrame.h	/^        M3DVector3f vOrigin;	\/\/ Where am I?$/;"	m	class:GLFrame
vUp	shared/glFrame.h	/^        M3DVector3f vUp;		\/\/ Which way is up?$/;"	m	class:GLFrame
value	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::value () const$/;"	f	class:Imf::TypedAttribute
value	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::value ()$/;"	f	class:Imf::TypedAttribute
value	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::value () const$/;"	f	class:Imf::TypedAttribute
value	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::value ()$/;"	f	class:Imf::TypedAttribute
version	include/GL/internal/dri_interface.h	/^    int version;$/;"	m	struct:__DRIextensionRec
waitForMSC	include/GL/internal/dri_interface.h	/^    int (*waitForMSC)(__DRIdrawable *drawable,$/;"	m	struct:__DRImediaStreamCounterExtensionRec
wglAllocateMemoryNV	shared/GLee.h	10032;"	d
wglAssociateImageBufferEventsI3D	shared/GLee.h	9903;"	d
wglBeginFrameTrackingI3D	shared/GLee.h	10077;"	d
wglBindDisplayColorTableEXT	shared/GLee.h	9993;"	d
wglBindTexImageARB	shared/GLee.h	9640;"	d
wglChoosePixelFormatARB	shared/GLee.h	9545;"	d
wglChoosePixelFormatEXT	shared/GLee.h	9728;"	d
wglCreateBufferRegionARB	shared/GLee.h	9455;"	d
wglCreateDisplayColorTableEXT	shared/GLee.h	9991;"	d
wglCreateImageBufferI3D	shared/GLee.h	9901;"	d
wglCreatePbufferARB	shared/GLee.h	9588;"	d
wglCreatePbufferEXT	shared/GLee.h	9756;"	d
wglDeleteBufferRegionARB	shared/GLee.h	9456;"	d
wglDestroyDisplayColorTableEXT	shared/GLee.h	9994;"	d
wglDestroyImageBufferI3D	shared/GLee.h	9902;"	d
wglDestroyPbufferARB	shared/GLee.h	9591;"	d
wglDestroyPbufferEXT	shared/GLee.h	9759;"	d
wglDisableFrameLockI3D	shared/GLee.h	9922;"	d
wglDisableGenlockI3D	shared/GLee.h	9872;"	d
wglEnableFrameLockI3D	shared/GLee.h	9921;"	d
wglEnableGenlockI3D	shared/GLee.h	9871;"	d
wglEndFrameTrackingI3D	shared/GLee.h	10078;"	d
wglFreeMemoryNV	shared/GLee.h	10033;"	d
wglGenlockSampleRateI3D	shared/GLee.h	9878;"	d
wglGenlockSourceDelayI3D	shared/GLee.h	9880;"	d
wglGenlockSourceEdgeI3D	shared/GLee.h	9876;"	d
wglGenlockSourceI3D	shared/GLee.h	9874;"	d
wglGetCurrentReadDCARB	shared/GLee.h	9561;"	d
wglGetCurrentReadDCEXT	shared/GLee.h	9666;"	d
wglGetDigitalVideoParametersI3D	shared/GLee.h	9806;"	d
wglGetExtensionsStringARB	shared/GLee.h	9479;"	d
wglGetExtensionsStringEXT	shared/GLee.h	10005;"	d
wglGetFrameUsageI3D	shared/GLee.h	10076;"	d
wglGetGammaTableI3D	shared/GLee.h	9828;"	d
wglGetGammaTableParametersI3D	shared/GLee.h	9826;"	d
wglGetGenlockSampleRateI3D	shared/GLee.h	9879;"	d
wglGetGenlockSourceDelayI3D	shared/GLee.h	9881;"	d
wglGetGenlockSourceEdgeI3D	shared/GLee.h	9877;"	d
wglGetGenlockSourceI3D	shared/GLee.h	9875;"	d
wglGetMscRateOML	shared/GLee.h	10055;"	d
wglGetPbufferDCARB	shared/GLee.h	9589;"	d
wglGetPbufferDCEXT	shared/GLee.h	9757;"	d
wglGetPixelFormatAttribfvARB	shared/GLee.h	9544;"	d
wglGetPixelFormatAttribfvEXT	shared/GLee.h	9727;"	d
wglGetPixelFormatAttribivARB	shared/GLee.h	9543;"	d
wglGetPixelFormatAttribivEXT	shared/GLee.h	9726;"	d
wglGetSwapIntervalEXT	shared/GLee.h	10019;"	d
wglGetSyncValuesOML	shared/GLee.h	10054;"	d
wglIsEnabledFrameLockI3D	shared/GLee.h	9923;"	d
wglIsEnabledGenlockI3D	shared/GLee.h	9873;"	d
wglLoadDisplayColorTableEXT	shared/GLee.h	9992;"	d
wglMakeContextCurrentARB	shared/GLee.h	9560;"	d
wglMakeContextCurrentEXT	shared/GLee.h	9665;"	d
wglQueryFrameLockMasterI3D	shared/GLee.h	9924;"	d
wglQueryFrameTrackingI3D	shared/GLee.h	10079;"	d
wglQueryGenlockMaxSourceDelayI3D	shared/GLee.h	9882;"	d
wglQueryPbufferARB	shared/GLee.h	9592;"	d
wglQueryPbufferEXT	shared/GLee.h	9760;"	d
wglReleaseImageBufferEventsI3D	shared/GLee.h	9904;"	d
wglReleasePbufferDCARB	shared/GLee.h	9590;"	d
wglReleasePbufferDCEXT	shared/GLee.h	9758;"	d
wglReleaseTexImageARB	shared/GLee.h	9641;"	d
wglRestoreBufferRegionARB	shared/GLee.h	9458;"	d
wglSaveBufferRegionARB	shared/GLee.h	9457;"	d
wglSetDigitalVideoParametersI3D	shared/GLee.h	9807;"	d
wglSetGammaTableI3D	shared/GLee.h	9829;"	d
wglSetGammaTableParametersI3D	shared/GLee.h	9827;"	d
wglSetPbufferAttribARB	shared/GLee.h	9642;"	d
wglSetStereoEmitterState3DL	shared/GLee.h	10094;"	d
wglSwapBuffersMscOML	shared/GLee.h	10056;"	d
wglSwapIntervalEXT	shared/GLee.h	10018;"	d
wglSwapLayerBuffersMscOML	shared/GLee.h	10057;"	d
wglWaitForMscOML	shared/GLee.h	10058;"	d
wglWaitForSbcOML	shared/GLee.h	10059;"	d
wglext.h	shared/wglext.h	1;"	F
white	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChromaticities.h	/^    Imath::V2f	white;$/;"	m	struct:Imf::Chromaticities
white	shared/openexr-mac/include/OpenEXR/ImfChromaticities.h	/^    Imath::V2f	white;$/;"	m	struct:Imf::Chromaticities
whiteLight	chapt04/Solar/solar.cpp	/^GLfloat  whiteLight[] = { 0.2f, 0.2f, 0.2f, 1.0f };$/;"	v
width	include/GL/glx.h	/^    int width, height;$/;"	m	struct:__anon1
width	include/GL/glxext.h	/^    int width, height;$/;"	m	struct:__anon2
width	include/GL/internal/dri_interface.h	/^    int width;              \/**< Pixel width of the framebuffer. *\/$/;"	m	struct:__DRIframebufferRec
width	shared/GLee.h	/^		int width, height;$/;"	m	struct:__anon11
width	shared/gltools.cpp	/^    unsigned short	width;                  \/\/ width in pixels$/;"	m	struct:__anon10	file:
width	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h	/^    unsigned int	width () const	{return _width;}$/;"	f	class:Imf::PreviewImage
width	shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h	/^    unsigned int	width () const	{return _width;}$/;"	f	class:Imf::PreviewImage
window	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^Frustum<T> Frustum<T>::window(T l, T r, T t, T b) const$/;"	f	class:Imath::Frustum
window	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^Frustum<T> Frustum<T>::window(T l, T r, T t, T b) const$/;"	f	class:Imath::Frustum
windowHeight	chapt02/bounce/bounce.cpp	/^GLfloat windowHeight;$/;"	v
windowHeight	chapt03/stencil/stencil.cpp	/^GLfloat windowHeight;$/;"	v
windowWidth	chapt02/bounce/bounce.cpp	/^GLfloat windowWidth;$/;"	v
windowWidth	chapt03/stencil/stencil.cpp	/^GLfloat windowWidth;$/;"	v
worldRadius	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^T Frustum<T>::worldRadius(const Vec3<T> &p, T radius) const$/;"	f	class:Imath::Frustum
worldRadius	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^T Frustum<T>::worldRadius(const Vec3<T> &p, T radius) const$/;"	f	class:Imath::Frustum
write	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^    write (T &out, Int64 v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^write (T &out, bool v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^write (T &out, char v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^write (T &out, const char v[])		\/\/ zero-terminated string$/;"	f	namespace:Imf::Xdr
write	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^write (T &out, const char v[], int n)	\/\/ fixed-size char array$/;"	f	namespace:Imf::Xdr
write	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^write (T &out, double v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^write (T &out, float v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^write (T &out, half v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^write (T &out, signed char v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^write (T &out, signed int v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^write (T &out, signed long v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^write (T &out, signed short v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^write (T &out, unsigned char v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^write (T &out, unsigned int v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^write (T &out, unsigned long v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^write (T &out, unsigned short v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^    write (T &out, Int64 v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^write (T &out, bool v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^write (T &out, char v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^write (T &out, const char v[])		\/\/ zero-terminated string$/;"	f	namespace:Imf::Xdr
write	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^write (T &out, const char v[], int n)	\/\/ fixed-size char array$/;"	f	namespace:Imf::Xdr
write	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^write (T &out, double v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^write (T &out, float v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^write (T &out, half v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^write (T &out, signed char v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^write (T &out, signed int v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^write (T &out, signed long v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^write (T &out, signed short v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^write (T &out, unsigned char v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^write (T &out, unsigned int v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^write (T &out, unsigned long v)$/;"	f	namespace:Imf::Xdr
write	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^write (T &out, unsigned short v)$/;"	f	namespace:Imf::Xdr
writeChars	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIO.h	/^    writeChars (OStream &os, const char c[\/*n*\/], int n)$/;"	f	struct:Imf::StreamIO
writeChars	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIO.h	/^    writeChars (char *&op, const char c[\/*n*\/], int n)$/;"	f	struct:Imf::CharPtrIO
writeChars	shared/openexr-mac/include/OpenEXR/ImfIO.h	/^    writeChars (OStream &os, const char c[\/*n*\/], int n)$/;"	f	struct:Imf::StreamIO
writeChars	shared/openexr-mac/include/OpenEXR/ImfIO.h	/^    writeChars (char *&op, const char c[\/*n*\/], int n)$/;"	f	struct:Imf::CharPtrIO
writeSignedChars	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^writeSignedChars (T &out, const signed char c[], int n)$/;"	f	namespace:Imf::Xdr
writeSignedChars	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^writeSignedChars (T &out, const signed char c[], int n)$/;"	f	namespace:Imf::Xdr
writeUnsignedChars	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h	/^writeUnsignedChars (T &out, const unsigned char c[], int n)$/;"	f	namespace:Imf::Xdr
writeUnsignedChars	shared/openexr-mac/include/OpenEXR/ImfXdr.h	/^writeUnsignedChars (T &out, const unsigned char c[], int n)$/;"	f	namespace:Imf::Xdr
writeValueTo	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::writeValueTo (OStream &os, int version) const$/;"	f	class:Imf::TypedAttribute
writeValueTo	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::writeValueTo (OStream &os, int version) const$/;"	f	class:Imf::TypedAttribute
x	chapt02/bounce/bounce.cpp	/^GLfloat x = 0.0f;$/;"	v
x	chapt03/stencil/stencil.cpp	/^GLfloat x = 0.0f;$/;"	v
x	include/GL/glx.h	/^    int x, y;$/;"	m	struct:__anon1
x	include/GL/glxext.h	/^    int x, y;$/;"	m	struct:__anon2
x	shared/GLee.h	/^		int x, y;$/;"	m	struct:__anon11
x	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^    T		x[3][3];$/;"	m	class:Imath::Matrix33
x	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h	/^    T		x[4][4];$/;"	m	class:Imath::Matrix44
x	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    T			x, y, z;$/;"	m	class:Imath::Vec3
x	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    T			x, y;$/;"	m	class:Imath::Vec2
x	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^    T		x[3][3];$/;"	m	class:Imath::Matrix33
x	shared/openexr-mac/include/OpenEXR/ImathMatrix.h	/^    T		x[4][4];$/;"	m	class:Imath::Matrix44
x	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    T			x, y, z;$/;"	m	class:Imath::Vec3
x	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    T			x, y;$/;"	m	class:Imath::Vec2
xRot	c3.drawLine/drawLines.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	c3.drawObject/drawObject.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	c3.drawPoints/drawPoints.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	c3.drawPolygonBitmap/draw.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	c3.drawStart/draw.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	c3.drawTriangles/triangles.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	c4.translate/draw.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	chapt03/lines/lines.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	chapt03/linesw/linesw.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	chapt03/lstipple/lstipple.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	chapt03/lstrips/lstrips.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	chapt03/points/points.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	chapt03/pointsz/pointsz.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	chapt03/pstipple/pstipple.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	chapt03/star/star.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	chapt03/triangle/triangle.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	chapt04/Atom/Atom.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	chapt04/Atom2/atom2.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	chapt04/Ortho/ortho.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	chapt04/Perspect/perspect.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xRot	template.dir/drawPoints.cpp	/^static GLfloat xRot = 0.0f;$/;"	v	file:
xSampling	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^    int			xSampling;$/;"	m	struct:Imf::Channel
xSampling	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^    int			xSampling;$/;"	m	struct:Imf::Slice
xSampling	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^    int			xSampling;$/;"	m	struct:Imf::Channel
xSampling	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^    int			xSampling;$/;"	m	struct:Imf::Slice
xSize	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^    unsigned int    xSize;          \/\/ size of a tile in the x dimension$/;"	m	class:Imf::TileDescription
xSize	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^    unsigned int    xSize;          \/\/ size of a tile in the x dimension$/;"	m	class:Imf::TileDescription
xStride	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^    size_t		xStride;$/;"	m	struct:Imf::Slice
xStride	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^    size_t		xStride;$/;"	m	struct:Imf::Slice
xTileCoords	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^    bool                xTileCoords;$/;"	m	struct:Imf::Slice
xTileCoords	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^    bool                xTileCoords;$/;"	m	struct:Imf::Slice
xstart	shared/gltools.cpp	/^    unsigned short	xstart;                 \/\/ image x origin$/;"	m	struct:__anon10	file:
xstep	chapt02/bounce/bounce.cpp	/^GLfloat xstep = 1.0f;$/;"	v
xstep	chapt03/stencil/stencil.cpp	/^GLfloat xstep = 1.0f;$/;"	v
xy	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^    T			xy, xz, yz, yx, zx, zy;$/;"	m	class:Imath::Shear6
xy	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^    T			xy, xz, yz, yx, zx, zy;$/;"	m	class:Imath::Shear6
xz	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^    T			xy, xz, yz, yx, zx, zy;$/;"	m	class:Imath::Shear6
xz	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^    T			xy, xz, yz, yx, zx, zy;$/;"	m	class:Imath::Shear6
y	chapt02/bounce/bounce.cpp	/^GLfloat y = 0.0f;$/;"	v
y	chapt03/stencil/stencil.cpp	/^GLfloat y = 0.0f;$/;"	v
y	include/GL/glx.h	/^    int x, y;$/;"	m	struct:__anon1
y	include/GL/glxext.h	/^    int x, y;$/;"	m	struct:__anon2
y	shared/GLee.h	/^		int x, y;$/;"	m	struct:__anon11
y	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    T			x, y, z;$/;"	m	class:Imath::Vec3
y	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    T			x, y;$/;"	m	class:Imath::Vec2
y	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    T			x, y, z;$/;"	m	class:Imath::Vec3
y	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    T			x, y;$/;"	m	class:Imath::Vec2
yRot	c3.drawLine/drawLines.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	c3.drawObject/drawObject.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	c3.drawPoints/drawPoints.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	c3.drawPolygonBitmap/draw.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	c3.drawStart/draw.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	c3.drawTriangles/triangles.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	c4.translate/draw.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	chapt03/lines/lines.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	chapt03/linesw/linesw.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	chapt03/lstipple/lstipple.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	chapt03/lstrips/lstrips.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	chapt03/points/points.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	chapt03/pointsz/pointsz.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	chapt03/pstipple/pstipple.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	chapt03/star/star.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	chapt03/triangle/triangle.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	chapt04/Atom/Atom.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	chapt04/Atom2/atom2.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	chapt04/Ortho/ortho.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	chapt04/Perspect/perspect.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
yRot	template.dir/drawPoints.cpp	/^static GLfloat yRot = 0.0f;$/;"	v	file:
ySampling	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h	/^    int			ySampling;$/;"	m	struct:Imf::Channel
ySampling	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^    int			ySampling;$/;"	m	struct:Imf::Slice
ySampling	shared/openexr-mac/include/OpenEXR/ImfChannelList.h	/^    int			ySampling;$/;"	m	struct:Imf::Channel
ySampling	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^    int			ySampling;$/;"	m	struct:Imf::Slice
ySize	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h	/^    unsigned int    ySize;          \/\/ size of a tile in the y dimension$/;"	m	class:Imf::TileDescription
ySize	shared/openexr-mac/include/OpenEXR/ImfTileDescription.h	/^    unsigned int    ySize;          \/\/ size of a tile in the y dimension$/;"	m	class:Imf::TileDescription
yStride	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^    size_t		yStride;$/;"	m	struct:Imf::Slice
yStride	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^    size_t		yStride;$/;"	m	struct:Imf::Slice
yTileCoords	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h	/^    bool                yTileCoords;$/;"	m	struct:Imf::Slice
yTileCoords	shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h	/^    bool                yTileCoords;$/;"	m	struct:Imf::Slice
ystart	shared/gltools.cpp	/^    unsigned short	ystart;                 \/\/ image y origin$/;"	m	struct:__anon10	file:
ystep	chapt02/bounce/bounce.cpp	/^GLfloat ystep = 1.0f;$/;"	v
ystep	chapt03/stencil/stencil.cpp	/^GLfloat ystep = 1.0f;$/;"	v
yx	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^    T			xy, xz, yz, yx, zx, zy;$/;"	m	class:Imath::Shear6
yx	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^    T			xy, xz, yz, yx, zx, zy;$/;"	m	class:Imath::Shear6
yz	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^    T			xy, xz, yz, yx, zx, zy;$/;"	m	class:Imath::Shear6
yz	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^    T			xy, xz, yz, yx, zx, zy;$/;"	m	class:Imath::Shear6
z	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h	/^    T			x, y, z;$/;"	m	class:Imath::Vec3
z	shared/openexr-mac/include/OpenEXR/ImathVec.h	/^    T			x, y, z;$/;"	m	class:Imath::Vec3
zx	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^    T			xy, xz, yz, yx, zx, zy;$/;"	m	class:Imath::Shear6
zx	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^    T			xy, xz, yz, yx, zx, zy;$/;"	m	class:Imath::Shear6
zy	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h	/^    T			xy, xz, yz, yx, zx, zy;$/;"	m	class:Imath::Shear6
zy	shared/openexr-mac/include/OpenEXR/ImathShear.h	/^    T			xy, xz, yz, yx, zx, zy;$/;"	m	class:Imath::Shear6
~Array	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^    ~Array ()				{delete [] _data;}$/;"	f	class:Imf::Array
~Array	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^    ~Array ()				{delete [] _data;}$/;"	f	class:Imf::Array
~Array2D	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h	/^Array2D<T>::~Array2D ()$/;"	f	class:Imf::Array2D
~Array2D	shared/openexr-mac/include/OpenEXR/ImfArray.h	/^Array2D<T>::~Array2D ()$/;"	f	class:Imf::Array2D
~CTriangleMesh	shared/TriangleMesh.cpp	/^CTriangleMesh::~CTriangleMesh(void)$/;"	f	class:CTriangleMesh
~CVBOMesh	shared/VBOMesh.cpp	/^CVBOMesh::~CVBOMesh(void)$/;"	f	class:CVBOMesh
~Frustum	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h	/^Frustum<T>::~Frustum()$/;"	f	class:Imath::Frustum
~Frustum	shared/openexr-mac/include/OpenEXR/ImathFrustum.h	/^Frustum<T>::~Frustum()$/;"	f	class:Imath::Frustum
~GLBegin	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^    ~GLBegin()				{ glEnd(); }$/;"	f	class:Imath::GLBegin
~GLBegin	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^    ~GLBegin()				{ glEnd(); }$/;"	f	class:Imath::GLBegin
~GLPushAttrib	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^    ~GLPushAttrib()			{ glPopAttrib(); }$/;"	f	class:Imath::GLPushAttrib
~GLPushAttrib	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^    ~GLPushAttrib()			{ glPopAttrib(); }$/;"	f	class:Imath::GLPushAttrib
~GLPushMatrix	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h	/^    ~GLPushMatrix()			{ glPopMatrix(); }$/;"	f	class:Imath::GLPushMatrix
~GLPushMatrix	shared/openexr-mac/include/OpenEXR/ImathGL.h	/^    ~GLPushMatrix()			{ glPopMatrix(); }$/;"	f	class:Imath::GLPushMatrix
~Lock	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h	/^    ~Lock ()$/;"	f	class:IlmThread::Lock
~Lock	shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h	/^    ~Lock ()$/;"	f	class:IlmThread::Lock
~TypedAttribute	shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::~TypedAttribute ()$/;"	f	class:Imf::TypedAttribute
~TypedAttribute	shared/openexr-mac/include/OpenEXR/ImfAttribute.h	/^TypedAttribute<T>::~TypedAttribute ()$/;"	f	class:Imf::TypedAttribute
