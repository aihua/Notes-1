cscope 15 $HOME/git/note/opengl/examples -q 0000026429 0004117067
	@c3.drawLine/drawLines.cpp

8 
	~<GL/glut.h
>

10 
	~<°dlib.h
>

11 
	~<°dio.h
>

12 
	~<m©h.h
>

14 c⁄° 
	gGL_PI
 = 3.1415f;

17 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

18 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

22 
	$RídîS˚√
()

24 
GLÊﬂt
 
x
 = 0.0f;

25 
GLÊﬂt
 
y
 = 0.0f;

26 
GLÊﬂt
 
z
 = 0.0f;

27 
GLÊﬂt
 
™gÀ
 = 0.0f;

30 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

32 
	`glPushM©rix
();

33 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

34 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

97 
	`glE«bÀ
(
GL_LINE_STIPPLE
);

99 
GLÊﬂt
 
y
;

100 
GLöt
 
Á˘‹
 = 3;

101 
GLush‹t
 
∑âîn
 = 0x00FF;

104 
y
 = -90.0f; y < 90.0f; y += 20.0f)

107 
	`glLöeStù∂e
(
Á˘‹
,
∑âîn
);

110 
	`glBegö
(
GL_LINES
);

111 
	`glVîãx2f
(-80.0f, 
y
);

112 
	`glVîãx2f
(80.0f, 
y
);

113 
	`glEnd
();

115 
Á˘‹
++;

118 
	`glDißbÀ
(
GL_LINE_STIPPLE
);

120 
	`glP›M©rix
();

123 
	`glutSw≠Buf„rs
();

124 
	}
}

129 
	$SëupRC
()

132 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f);

135 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

136 
	}
}

141 
	$Ch™geSize
(
w
, 
h
)

143 
GLÊﬂt
 
a•e˘R©io
;

146 if(
h
 == 0)

147 
h
 = 1;

150 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

153 
	`glM©rixMode
(
GL_PROJECTION
);

154 
	`glLﬂdIdítôy
();

157 
a•e˘R©io
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

158 i‡(
w
 <
h
)

159 
	`glOπho
 (-100.0, 100.0, -100.0 / 
a•e˘R©io
, 100.0 /áspectRatio, -100.0, 100.0);

161 
	`glOπho
 (-100.0 * 
a•e˘R©io
, 100.0 *áspectRatio, -100.0, 100.0, -100.0, 100.0);

163 
	`glM©rixMode
(
GL_MODELVIEW
);

164 
	`glLﬂdIdítôy
();

165 
	}
}

167 
	$S≥cülKeys
(
key
, 
x
, 
y
)

169 if(
key
 =
GLUT_KEY_UP
)

170 
xRŸ
-= 5.0f;

172 if(
key
 =
GLUT_KEY_DOWN
)

173 
xRŸ
 += 5.0f;

175 if(
key
 =
GLUT_KEY_LEFT
)

176 
yRŸ
 -= 5.0f;

178 if(
key
 =
GLUT_KEY_RIGHT
)

179 
yRŸ
 += 5.0f;

181 if(
key
 > 356.0f)

182 
xRŸ
 = 0.0f;

184 if(
key
 < -1.0f)

185 
xRŸ
 = 355.0f;

187 if(
key
 > 356.0f)

188 
yRŸ
 = 0.0f;

190 if(
key
 < -1.0f)

191 
yRŸ
 = 355.0f;

194 
	`glutPo°Redi•œy
();

195 
	}
}

199 
	$maö
(
¨gc
, * 
¨gv
[])

201 
	`glutInô
(&
¨gc
, 
¨gv
);

202 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

203 
	`glutInôWödowSize
(800, 600);

204 
	`glutCª©eWödow
("GLRect");

205 
	`glutDi•œyFunc
(
RídîS˚√
);

206 
	`glutResh≠eFunc
(
Ch™geSize
);

207 
	`glutS≥cülFunc
(
S≥cülKeys
);

208 
	`SëupRC
();

209 
	`glutMaöLo›
();

212 
	}
}

	@c3.drawObject/drawObject.cpp

8 
	~<GL/glut.h
>

10 
	~<°dlib.h
>

11 
	~<°dio.h
>

12 
	~<m©h.h
>

14 
	#GL_PI
 3.1415f

	)

17 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

18 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

22 
	$RídîS˚√
()

24 
GLÊﬂt
 
x
 = 0.0f;

25 
GLÊﬂt
 
y
 = 0.0f;

26 
GLÊﬂt
 
z
 = 0.0f;

27 
GLÊﬂt
 
™gÀ
 = 0.0f;

30 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
 | 
GL_DEPTH_BUFFER_BIT
);

32 
	`glE«bÀ
(
GL_CULL_FACE
);

33 
	`glE«bÀ
(
GL_DEPTH_TEST
);

36 
	`glPushM©rix
();

37 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

38 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

40 
	`glBegö
(
GL_TRIANGLE_FAN
);

42 
iPivŸ
 = 1;

43 
	`glVîãx3f
(.0f, .0f, 75.0f);

45 
™gÀ
 = 0.0f;ángÀ <2 * 
GL_PI
;ángle += (GL_PI / 8.0f))

47 
x
 = 50.0f*
	`sö
(
™gÀ
);

48 
y
 = 50.0f*
	`cos
(
™gÀ
);

50 if(0 =
iPivŸ
 % 2)

51 
	`glCﬁ‹3f
(0.0f, 1.0f, 1.0f);

53 
	`glCﬁ‹3f
(1.0f, 0.0f, 1.0f);

55 
iPivŸ
++;

56 
	`glVîãx3f
(
x
, 
y
, 
z
);

59 
	`glEnd
();

61 
	`glBegö
(
GL_TRIANGLE_FAN
);

63 
iPivŸ
 = 1;

64 
	`glVîãx3f
(.0f, .0f, .0f);

65 
™gÀ
 = 2 * 
GL_PI
;ángle >= 0.0f;ángle -= (GL_PI / 8.0f))

68 
x
 = 50.0f*
	`sö
(
™gÀ
);

69 
y
 = 50.0f*
	`cos
(
™gÀ
);

71 if(0 =
iPivŸ
 % 2)

72 
	`glCﬁ‹3f
(0.0f, 1.0f, 1.0f);

74 
	`glCﬁ‹3f
(1.0f, 0.0f, 1.0f);

76 
iPivŸ
++;

77 
	`glVîãx3f
(
x
, 
y
, 
z
);

80 
	`glEnd
();

82 
	`glP›M©rix
();

85 
	`glutSw≠Buf„rs
();

86 
	}
}

91 
	$SëupRC
()

94 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f);

97 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

99 
	`glShadeModñ
(
GL_FLAT
);

102 
	`glFr⁄tFa˚
(
GL_CW
);

103 
	}
}

108 
	$Ch™geSize
(
w
, 
h
)

110 
GLÊﬂt
 
a•e˘R©io
;

113 if(
h
 == 0)

114 
h
 = 1;

117 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

120 
	`glM©rixMode
(
GL_PROJECTION
);

121 
	`glLﬂdIdítôy
();

124 
a•e˘R©io
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

125 i‡(
w
 <
h
)

126 
	`glOπho
 (-100.0, 100.0, -100.0 / 
a•e˘R©io
, 100.0 /áspectRatio, -100.0, 100.0);

128 
	`glOπho
 (-100.0 * 
a•e˘R©io
, 100.0 *áspectRatio, -100.0, 100.0, -100.0, 100.0);

130 
	`glM©rixMode
(
GL_MODELVIEW
);

131 
	`glLﬂdIdítôy
();

132 
	}
}

134 
	$S≥cülKeys
(
key
, 
x
, 
y
)

136 if(
key
 =
GLUT_KEY_UP
)

137 
xRŸ
-= 5.0f;

139 if(
key
 =
GLUT_KEY_DOWN
)

140 
xRŸ
 += 5.0f;

142 if(
key
 =
GLUT_KEY_LEFT
)

143 
yRŸ
 -= 5.0f;

145 if(
key
 =
GLUT_KEY_RIGHT
)

146 
yRŸ
 += 5.0f;

148 if(
key
 > 356.0f)

149 
xRŸ
 = 0.0f;

151 if(
key
 < -1.0f)

152 
xRŸ
 = 355.0f;

154 if(
key
 > 356.0f)

155 
yRŸ
 = 0.0f;

157 if(
key
 < -1.0f)

158 
yRŸ
 = 355.0f;

161 
	`glutPo°Redi•œy
();

162 
	}
}

166 
	$maö
(
¨gc
, * 
¨gv
[])

168 
	`glutInô
(&
¨gc
, 
¨gv
);

169 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

171 
	`glutCª©eWödow
("GLRect");

172 
	`glutDi•œyFunc
(
RídîS˚√
);

173 
	`glutResh≠eFunc
(
Ch™geSize
);

174 
	`glutS≥cülFunc
(
S≥cülKeys
);

175 
	`SëupRC
();

176 
	`glutMaöLo›
();

179 
	}
}

	@c3.drawPoints/drawPoints.cpp

8 
	~<GL/glut.h
>

10 
	~<°dlib.h
>

11 
	~<°dio.h
>

12 
	~<m©h.h
>

14 c⁄° 
	gGL_PI
 = 3.1415f;

17 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

18 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

22 
	$RídîS˚√
()

24 
GLÊﬂt
 
x
 = 0.0f;

25 
GLÊﬂt
 
y
 = 0.0f;

26 
GLÊﬂt
 
z
 = 0.0f;

27 
GLÊﬂt
 
™gÀ
 = 0.0f;

28 
GLÊﬂt
 
sizeR™ge
[2];

29 
GLÊﬂt
 
sizeSãp
;

32 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

34 
	`glPushM©rix
();

35 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

36 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

38 
	`glGëFlﬂtv
(
GL_POINT_SIZE_RANGE
, 
sizeR™ge
);

39 
	`glGëFlﬂtv
(
GL_POINT_SIZE_GRANULARITY
, &
sizeSãp
);

40 
GLÊﬂt
 
poötSize
 = 
sizeR™ge
[0];

42 
z
 = -50.0f;

43 
™gÀ
 = 0.0f;ángÀ <(2.0f*
GL_PI
)*3.0f;ángle += 0.1f) {

44 
x
 = 50.0‡* 
	`sö
(
™gÀ
);

45 
y
 = 50.0‡* 
	`cos
(
™gÀ
);

47 
	`glPoötSize
(
poötSize
);

49 
	`glBegö
(
GL_POINTS
);

50 
	`glVîãx3f
(
x
, 
y
, 
z
);

51 
	`glEnd
();

53 
z
 += 0.5f;

54 
poötSize
 +
sizeSãp
;

57 
	`glP›M©rix
();

60 
	`glutSw≠Buf„rs
();

61 
	}
}

66 
	$SëupRC
()

69 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f);

72 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

73 
	}
}

78 
	$Ch™geSize
(
w
, 
h
)

80 
GLÊﬂt
 
a•e˘R©io
;

83 if(
h
 == 0)

84 
h
 = 1;

87 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

90 
	`glM©rixMode
(
GL_PROJECTION
);

91 
	`glLﬂdIdítôy
();

94 
a•e˘R©io
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

95 i‡(
w
 <
h
)

96 
	`glOπho
 (-100.0, 100.0, -100.0 / 
a•e˘R©io
, 100.0 /áspectRatio, -100.0, 100.0);

98 
	`glOπho
 (-100.0 * 
a•e˘R©io
, 100.0 *áspectRatio, -100.0, 100.0, -100.0, 100.0);

100 
	`glM©rixMode
(
GL_MODELVIEW
);

101 
	`glLﬂdIdítôy
();

102 
	}
}

104 
	$S≥cülKeys
(
key
, 
x
, 
y
)

106 if(
key
 =
GLUT_KEY_UP
)

107 
xRŸ
-= 5.0f;

109 if(
key
 =
GLUT_KEY_DOWN
)

110 
xRŸ
 += 5.0f;

112 if(
key
 =
GLUT_KEY_LEFT
)

113 
yRŸ
 -= 5.0f;

115 if(
key
 =
GLUT_KEY_RIGHT
)

116 
yRŸ
 += 5.0f;

118 if(
key
 > 356.0f)

119 
xRŸ
 = 0.0f;

121 if(
key
 < -1.0f)

122 
xRŸ
 = 355.0f;

124 if(
key
 > 356.0f)

125 
yRŸ
 = 0.0f;

127 if(
key
 < -1.0f)

128 
yRŸ
 = 355.0f;

131 
	`glutPo°Redi•œy
();

132 
	}
}

136 
	$maö
(
¨gc
, * 
¨gv
[])

138 
	`glutInô
(&
¨gc
, 
¨gv
);

139 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

141 
	`glutCª©eWödow
("GLRect");

142 
	`glutDi•œyFunc
(
RídîS˚√
);

143 
	`glutResh≠eFunc
(
Ch™geSize
);

144 
	`glutS≥cülFunc
(
S≥cülKeys
);

145 
	`SëupRC
();

146 
	`glutMaöLo›
();

149 
	}
}

	@c3.drawPolygonBitmap/draw.cpp

8 
	~<GL/glut.h
>

10 
	~<°dlib.h
>

11 
	~<°dio.h
>

12 
	~<m©h.h
>

14 
	#GL_PI
 3.1415f

	)

17 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

18 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

20 
GLubyã
 
	gfúe
[128] = { 0x00, 0x00, 0x00, 0x00,

56 
	$RídîS˚√
()

59 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
 | 
GL_DEPTH_BUFFER_BIT
);

61 
	`glPushM©rix
();

62 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

63 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

67 
	`glBegö
(
GL_POLYGON
);

68 
	`glVîãx2f
(-20.0f, 50.0f);

69 
	`glVîãx2f
(20.0f, 50.0f);

70 
	`glVîãx2f
(50.0f, 20.0f);

71 
	`glVîãx2f
(50.0f, -20.0f);

72 
	`glVîãx2f
(20.0f, -50.0f);

73 
	`glVîãx2f
(-20.0f, -50.0f);

74 
	`glVîãx2f
(-50.0f, -20.0f);

75 
	`glVîãx2f
(-50.0f, 20.0f);

76 
	`glEnd
();

78 
	`glP›M©rix
();

81 
	`glutSw≠Buf„rs
();

82 
	}
}

87 
	$SëupRC
()

90 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f);

93 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

96 
	`glE«bÀ
(
GL_POLYGON_STIPPLE
);

99 
	`glPﬁyg⁄Stù∂e
(
fúe
);

100 
	}
}

105 
	$Ch™geSize
(
w
, 
h
)

107 
GLÊﬂt
 
a•e˘R©io
;

110 if(
h
 == 0)

111 
h
 = 1;

114 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

117 
	`glM©rixMode
(
GL_PROJECTION
);

118 
	`glLﬂdIdítôy
();

121 
a•e˘R©io
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

122 i‡(
w
 <
h
)

123 
	`glOπho
 (-100.0, 100.0, -100.0 / 
a•e˘R©io
, 100.0 /áspectRatio, -100.0, 100.0);

125 
	`glOπho
 (-100.0 * 
a•e˘R©io
, 100.0 *áspectRatio, -100.0, 100.0, -100.0, 100.0);

127 
	`glM©rixMode
(
GL_MODELVIEW
);

128 
	`glLﬂdIdítôy
();

129 
	}
}

131 
	$S≥cülKeys
(
key
, 
x
, 
y
)

133 if(
key
 =
GLUT_KEY_UP
)

134 
xRŸ
-= 5.0f;

136 if(
key
 =
GLUT_KEY_DOWN
)

137 
xRŸ
 += 5.0f;

139 if(
key
 =
GLUT_KEY_LEFT
)

140 
yRŸ
 -= 5.0f;

142 if(
key
 =
GLUT_KEY_RIGHT
)

143 
yRŸ
 += 5.0f;

145 if(
key
 > 356.0f)

146 
xRŸ
 = 0.0f;

148 if(
key
 < -1.0f)

149 
xRŸ
 = 355.0f;

151 if(
key
 > 356.0f)

152 
yRŸ
 = 0.0f;

154 if(
key
 < -1.0f)

155 
yRŸ
 = 355.0f;

158 
	`glutPo°Redi•œy
();

159 
	}
}

163 
	$maö
(
¨gc
, * 
¨gv
[])

165 
	`glutInô
(&
¨gc
, 
¨gv
);

166 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

168 
	`glutCª©eWödow
("GLRect");

169 
	`glutDi•œyFunc
(
RídîS˚√
);

170 
	`glutResh≠eFunc
(
Ch™geSize
);

171 
	`glutS≥cülFunc
(
S≥cülKeys
);

172 
	`SëupRC
();

173 
	`glutMaöLo›
();

176 
	}
}

	@c3.drawStart/draw.cpp

8 
	~<GL/glut.h
>

10 
	~<°dlib.h
>

11 
	~<°dio.h
>

12 
	~<m©h.h
>

14 
	#GL_PI
 3.1415f

	)

17 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

18 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

22 
	$RídîS˚√
()

24 
GLÊﬂt
 
x
 = 0.0f;

25 
GLÊﬂt
 
y
 = 0.0f;

26 
GLÊﬂt
 
z
 = 0.0f;

27 
GLÊﬂt
 
™gÀ
 = 0.0f;

30 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
 | 
GL_DEPTH_BUFFER_BIT
);

33 
	`glPﬁyg⁄Mode
(
GL_FRONT_AND_BACK
,
GL_LINE
);

35 
	`glPushM©rix
();

36 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

37 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

39 
	`glBegö
(
GL_TRIANGLES
);

40 
	`glEdgeFœg
(
Ál£
);

41 
	`glVîãx2f
(40.0f, 40.0f);

42 
	`glVîãx2f
(40.0f, -40.0f);

43 
	`glEdgeFœg
(
åue
);

44 
	`glVîãx2f
(-40.0f, -40.0f);

45 
	`glEnd
();

47 
	`glP›M©rix
();

50 
	`glutSw≠Buf„rs
();

51 
	}
}

56 
	$SëupRC
()

59 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f);

62 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

63 
	}
}

68 
	$Ch™geSize
(
w
, 
h
)

70 
GLÊﬂt
 
a•e˘R©io
;

73 if(
h
 == 0)

74 
h
 = 1;

77 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

80 
	`glM©rixMode
(
GL_PROJECTION
);

81 
	`glLﬂdIdítôy
();

84 
a•e˘R©io
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

85 i‡(
w
 <
h
)

86 
	`glOπho
 (-100.0, 100.0, -100.0 / 
a•e˘R©io
, 100.0 /áspectRatio, -100.0, 100.0);

88 
	`glOπho
 (-100.0 * 
a•e˘R©io
, 100.0 *áspectRatio, -100.0, 100.0, -100.0, 100.0);

90 
	`glM©rixMode
(
GL_MODELVIEW
);

91 
	`glLﬂdIdítôy
();

92 
	}
}

94 
	$S≥cülKeys
(
key
, 
x
, 
y
)

96 if(
key
 =
GLUT_KEY_UP
)

97 
xRŸ
-= 5.0f;

99 if(
key
 =
GLUT_KEY_DOWN
)

100 
xRŸ
 += 5.0f;

102 if(
key
 =
GLUT_KEY_LEFT
)

103 
yRŸ
 -= 5.0f;

105 if(
key
 =
GLUT_KEY_RIGHT
)

106 
yRŸ
 += 5.0f;

108 if(
key
 > 356.0f)

109 
xRŸ
 = 0.0f;

111 if(
key
 < -1.0f)

112 
xRŸ
 = 355.0f;

114 if(
key
 > 356.0f)

115 
yRŸ
 = 0.0f;

117 if(
key
 < -1.0f)

118 
yRŸ
 = 355.0f;

121 
	`glutPo°Redi•œy
();

122 
	}
}

126 
	$maö
(
¨gc
, * 
¨gv
[])

128 
	`glutInô
(&
¨gc
, 
¨gv
);

129 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

131 
	`glutCª©eWödow
("GLRect");

132 
	`glutDi•œyFunc
(
RídîS˚√
);

133 
	`glutResh≠eFunc
(
Ch™geSize
);

134 
	`glutS≥cülFunc
(
S≥cülKeys
);

135 
	`SëupRC
();

136 
	`glutMaöLo›
();

139 
	}
}

	@c3.drawTriangles/triangles.cpp

8 
	~<GL/glut.h
>

10 
	~<°dlib.h
>

11 
	~<°dio.h
>

12 
	~<m©h.h
>

14 c⁄° 
	gGL_PI
 = 3.1415f;

17 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

18 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

22 
	$RídîS˚√
()

24 
GLÊﬂt
 
x
 = 0.0f;

25 
GLÊﬂt
 
y
 = 0.0f;

26 
GLÊﬂt
 
z
 = 0.0f;

27 
GLÊﬂt
 
™gÀ
 = 0.0f;

30 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

32 
	`glPushM©rix
();

33 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

34 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

58 
	`glBegö
(
GL_TRIANGLE_FAN
);

60 
	`glVîãx3f
(0.0f, 0.0f, 0.0f);

61 
	`glVîãx3f
(50.0f, 50.0f, 0.0f);

62 
	`glVîãx3f
(50.0f, 0.0f, 0.0f);

63 
	`glVîãx3f
(50.0f, -50.0f, 0.0f);

64 
	`glVîãx3f
(-50.0f,-50.0f, 0.0f);

66 
	`glEnd
();

69 
	`glP›M©rix
();

72 
	`glutSw≠Buf„rs
();

73 
	}
}

78 
	$SëupRC
()

81 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f);

84 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

85 
	}
}

90 
	$Ch™geSize
(
w
, 
h
)

92 
GLÊﬂt
 
a•e˘R©io
;

95 if(
h
 == 0)

96 
h
 = 1;

99 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

102 
	`glM©rixMode
(
GL_PROJECTION
);

103 
	`glLﬂdIdítôy
();

106 
a•e˘R©io
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

107 i‡(
w
 <
h
)

108 
	`glOπho
 (-100.0, 100.0, -100.0 / 
a•e˘R©io
, 100.0 /áspectRatio, -100.0, 100.0);

110 
	`glOπho
 (-100.0 * 
a•e˘R©io
, 100.0 *áspectRatio, -100.0, 100.0, -100.0, 100.0);

112 
	`glM©rixMode
(
GL_MODELVIEW
);

113 
	`glLﬂdIdítôy
();

114 
	}
}

116 
	$S≥cülKeys
(
key
, 
x
, 
y
)

118 if(
key
 =
GLUT_KEY_UP
)

119 
xRŸ
-= 5.0f;

121 if(
key
 =
GLUT_KEY_DOWN
)

122 
xRŸ
 += 5.0f;

124 if(
key
 =
GLUT_KEY_LEFT
)

125 
yRŸ
 -= 5.0f;

127 if(
key
 =
GLUT_KEY_RIGHT
)

128 
yRŸ
 += 5.0f;

130 if(
key
 > 356.0f)

131 
xRŸ
 = 0.0f;

133 if(
key
 < -1.0f)

134 
xRŸ
 = 355.0f;

136 if(
key
 > 356.0f)

137 
yRŸ
 = 0.0f;

139 if(
key
 < -1.0f)

140 
yRŸ
 = 355.0f;

143 
	`glutPo°Redi•œy
();

144 
	}
}

148 
	$maö
(
¨gc
, * 
¨gv
[])

150 
	`glutInô
(&
¨gc
, 
¨gv
);

151 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

153 
	`glutCª©eWödow
("GLRect");

154 
	`glutDi•œyFunc
(
RídîS˚√
);

155 
	`glutResh≠eFunc
(
Ch™geSize
);

156 
	`glutS≥cülFunc
(
S≥cülKeys
);

157 
	`SëupRC
();

158 
	`glutMaöLo›
();

161 
	}
}

	@c3.scissor/draw.cpp

8 
	~<GL/glut.h
>

10 
	~<°dlib.h
>

11 
	~<°dio.h
>

12 
	~<m©h.h
>

16 
	$RídîS˚√
()

19 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f);

20 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

22 
	`glE«bÀ
(
GL_SCISSOR_TEST
);

24 
	`glSciss‹
(100, 100, 600, 400);

25 
	`glCÀ¨Cﬁ‹
(1.0f, 0.0f, 0.0f, 0.0f);

26 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

28 
	`glSciss‹
(200, 200, 400, 200);

29 
	`glCÀ¨Cﬁ‹
(0.0f, 1.0f, 0.0f, 0.0f);

30 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

33 
	`glDißbÀ
(
GL_SCISSOR_TEST
);

36 
	`glutSw≠Buf„rs
();

37 
	}
}

41 
	$Ch™geSize
(
w
, 
h
)

43 
GLÊﬂt
 
a•e˘R©io
;

46 if(
h
 == 0)

47 
h
 = 1;

50 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

53 
	`glM©rixMode
(
GL_PROJECTION
);

54 
	`glLﬂdIdítôy
();

57 
a•e˘R©io
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

58 i‡(
w
 <
h
)

59 
	`glOπho
 (-100.0, 100.0, -100.0 / 
a•e˘R©io
, 100.0 /áspectRatio, -100.0, 100.0);

61 
	`glOπho
 (-100.0 * 
a•e˘R©io
, 100.0 *áspectRatio, -100.0, 100.0, -100.0, 100.0);

63 
	`glM©rixMode
(
GL_MODELVIEW
);

64 
	`glLﬂdIdítôy
();

65 
	}
}

67 
	$S≥cülKeys
(
key
, 
x
, 
y
)

70 
	`glutPo°Redi•œy
();

71 
	}
}

75 
	$maö
(
¨gc
, * 
¨gv
[])

77 
	`glutInô
(&
¨gc
, 
¨gv
);

78 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

79 
	`glutInôWödowSize
(800, 600);

80 
	`glutCª©eWödow
("GLRect");

81 
	`glutDi•œyFunc
(
RídîS˚√
);

82 
	`glutResh≠eFunc
(
Ch™geSize
);

83 
	`glutS≥cülFunc
(
S≥cülKeys
);

84 
	`glutMaöLo›
();

87 
	}
}

	@c3.template/draw.cpp

8 
	~<GL/glut.h
>

10 
	~<°dlib.h
>

11 
	~<°dio.h
>

12 
	~<m©h.h
>

16 
	$RídîS˚√
()

18 
GLdoubÀ
 
dRadius
 = 0.1;

19 
GLdoubÀ
 
dAngÀ
;

22 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 1.0f, 0.0f);

24 
	`glCÀ¨Sãncû
(0.0f);

26 
	`glE«bÀ
(
GL_STENCIL_TEST
);

29 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
 | 
GL_STENCIL_BUFFER_BIT
);

35 
	`glSãncûFunc
(
GL_NEVER
, 0x0, 0x0);

36 
	`glSãncûOp
(
GL_INCR
, GL_INCR, GL_INCR);

44 
	`glCﬁ‹3f
(1.0f, 1.0f, 1.0f);

45 
	`glBegö
(
GL_LINE_STRIP
);

46 
dAngÀ
 = 0; dAngle < 400.0; dAngle += 0.1)

48 
	`glVîãx2d
(
dRadius
 * 
	`cos
(
dAngÀ
), dRadiu†* 
	`sö
(dAngle));

49 
dRadius
 *= 1.002;

51 
	`glEnd
();

60 
	`glSãncûFunc
(
GL_NOTEQUAL
, 0x1, 0x1);

61 
	`glSãncûOp
(
GL_KEEP
, GL_KEEP, GL_KEEP);

67 
	`glCﬁ‹3f
(1.0f, 0.0f, 0.0f);

68 
	`glRe˘f
(0, 0, 40, -40);

77 
	`glDißbÀ
(
GL_STENCIL_TEST
);

80 
	`glutSw≠Buf„rs
();

81 
	}
}

85 
	$Ch™geSize
(
w
, 
h
)

87 
GLÊﬂt
 
a•e˘R©io
;

90 if(
h
 == 0)

91 
h
 = 1;

94 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

97 
	`glM©rixMode
(
GL_PROJECTION
);

98 
	`glLﬂdIdítôy
();

101 
a•e˘R©io
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

102 i‡(
w
 <
h
)

103 
	`glOπho
 (-100.0, 100.0, -100.0 / 
a•e˘R©io
, 100.0 /áspectRatio, -100.0, 100.0);

105 
	`glOπho
 (-100.0 * 
a•e˘R©io
, 100.0 *áspectRatio, -100.0, 100.0, -100.0, 100.0);

107 
	`glM©rixMode
(
GL_MODELVIEW
);

108 
	`glLﬂdIdítôy
();

109 
	}
}

111 
	$S≥cülKeys
(
key
, 
x
, 
y
)

114 
	`glutPo°Redi•œy
();

115 
	}
}

119 
	$maö
(
¨gc
, * 
¨gv
[])

121 
	`glutInô
(&
¨gc
, 
¨gv
);

122 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_STENCIL
);

123 
	`glutInôWödowSize
(800, 600);

124 
	`glutCª©eWödow
("GLRect");

125 
	`glutDi•œyFunc
(
RídîS˚√
);

126 
	`glutResh≠eFunc
(
Ch™geSize
);

127 
	`glutS≥cülFunc
(
S≥cülKeys
);

128 
	`glutMaöLo›
();

131 
	}
}

	@c4.translate/draw.cpp

8 
	~<GL/glut.h
>

10 
	~<°dlib.h
>

11 
	~<°dio.h
>

12 
	~<m©h.h
>

14 
	#GL_PI
 3.1415f

	)

17 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

18 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

20 
	$døwTrüngÀs
 () {

21 
	`glPﬁyg⁄Mode
(
GL_FRONT_AND_BACK
,
GL_LINE
);

24 
	`glCﬁ‹3f
(1.0f, 0.0f, 0.0f);

25 
	`glBegö
(
GL_TRIANGLES
);

26 
	`glVîãx2f
(40.0f, 40.0f);

27 
	`glVîãx2f
(40.0f, -40.0f);

28 
	`glVîãx2f
(-40.0f, -40.0f);

29 
	`glEnd
();

31 
	`glPushM©rix
();

33 
	`glTøn¶©ef
(0.0f, 10.0f, 0.0f);

35 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

36 
	`glBegö
(
GL_TRIANGLES
);

37 
	`glVîãx2f
(40.0f, 40.0f);

38 
	`glVîãx2f
(40.0f, -40.0f);

39 
	`glVîãx2f
(-40.0f, -40.0f);

40 
	`glEnd
();

42 
	`glSˇÀf
(.5f, .5f, .5f);

44 
	`glBegö
(
GL_TRIANGLES
);

45 
	`glVîãx2f
(40.0f, 40.0f);

46 
	`glVîãx2f
(40.0f, -40.0f);

47 
	`glVîãx2f
(-40.0f, -40.0f);

48 
	`glEnd
();

50 
	`glRŸ©ef
(10.0f, 0.0f, 0.0f, 1.0f);

51 
	`glBegö
(
GL_TRIANGLES
);

52 
	`glVîãx2f
(40.0f, 40.0f);

53 
	`glVîãx2f
(40.0f, -40.0f);

54 
	`glVîãx2f
(-40.0f, -40.0f);

55 
	`glEnd
();

57 
	`glP›M©rix
();

59 
	`glCﬁ‹3f
(0.0f, 0.0f, 1.0f);

60 
	`glPushM©rix
();

61 
	`glRŸ©ef
(30.0f, 0.0f, 0.0f, 1.0f);

63 
	`glBegö
(
GL_TRIANGLES
);

64 
	`glVîãx2f
(40.0f, 40.0f);

65 
	`glVîãx2f
(40.0f, -40.0f);

66 
	`glVîãx2f
(-40.0f, -40.0f);

67 
	`glEnd
();

69 
	`glP›M©rix
();

70 
	}
}

72 
	$døwSphîes
() {

74 
	`glTøn¶©ef
(20.0f, 0.0f, 0.0f);

75 
	`glCﬁ‹3f
(1.0f, 0.0f, 0.0f);

76 
	`glutSﬁidSphîe
(10.0f, 15, 15);

78 
	`glTøn¶©ef
(00.0f, 20.0f, 0.0f);

79 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

80 
	`glutSﬁidSphîe
(10.0f, 15, 15);

82 
	`glM©rixMode
(
GL_MODELVIEW
);

83 
	`glLﬂdIdítôy
();

85 
	`glCﬁ‹3f
(1.0f, 1.0f, 0.0f);

86 
	`glutSﬁidSphîe
(10.0f, 15, 15);

87 
	}
}

91 
	$RídîS˚√
()

93 
GLÊﬂt
 
x
 = 0.0f;

94 
GLÊﬂt
 
y
 = 0.0f;

95 
GLÊﬂt
 
z
 = 0.0f;

96 
GLÊﬂt
 
™gÀ
 = 0.0f;

99 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
 | 
GL_DEPTH_BUFFER_BIT
);

101 
	`døwTrüngÀs
();

105 
	`glutSw≠Buf„rs
();

106 
	}
}

111 
	$SëupRC
()

114 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f);

117 
	`glCﬁ‹3f
(1.0f, 0.0f, 0.0f);

118 
	}
}

123 
	$Ch™geSize
(
w
, 
h
)

125 
GLÊﬂt
 
a•e˘R©io
;

128 if(
h
 == 0)

129 
h
 = 1;

132 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

135 
	`glM©rixMode
(
GL_PROJECTION
);

136 
	`glLﬂdIdítôy
();

139 
a•e˘R©io
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

140 i‡(
w
 <
h
)

141 
	`glOπho
 (-100.0, 100.0, -100.0 / 
a•e˘R©io
, 100.0 /áspectRatio, -100.0, 100.0);

143 
	`glOπho
 (-100.0 * 
a•e˘R©io
, 100.0 *áspectRatio, -100.0, 100.0, -100.0, 100.0);

145 
	`glM©rixMode
(
GL_MODELVIEW
);

146 
	`glLﬂdIdítôy
();

147 
	}
}

149 
	$S≥cülKeys
(
key
, 
x
, 
y
)

152 
	`glutPo°Redi•œy
();

153 
	}
}

157 
	$maö
(
¨gc
, * 
¨gv
[])

159 
	`glutInô
(&
¨gc
, 
¨gv
);

160 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

161 
	`glutInôWödowSize
(800, 600);

162 
	`glutCª©eWödow
("GLRect");

163 
	`glutDi•œyFunc
(
RídîS˚√
);

164 
	`glutResh≠eFunc
(
Ch™geSize
);

165 
	`glutS≥cülFunc
(
S≥cülKeys
);

166 
	`SëupRC
();

167 
	`glutMaöLo›
();

170 
	}
}

	@chapt02/bounce/bounce.cpp

7 
	~"../../sh¨ed/g…oﬁs.h
"

11 
GLÊﬂt
 
	gx
 = 0.0f;

12 
GLÊﬂt
 
	gy
 = 0.0f;

13 
GLÊﬂt
 
	grsize
 = 25;

17 
GLÊﬂt
 
	gx°ï
 = 1.0f;

18 
GLÊﬂt
 
	gy°ï
 = 1.0f;

21 
GLÊﬂt
 
	gwödowWidth
;

22 
GLÊﬂt
 
	gwödowHeight
;

26 
	$RídîS˚√
()

29 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

33 
	`glCﬁ‹3f
(1.0f, 0.0f, 0.0f);

36 
	`glRe˘f
(
x
, 
y
, x + 
rsize
, y -Ñsize);

39 
	`glutSw≠Buf„rs
();

40 
	}
}

45 
	$TimîFun˘i⁄
(
vÆue
)

48 if(
x
 > 
wödowWidth
-
rsize
 || x < -windowWidth)

49 
x°ï
 = -xstep;

52 if(
y
 > 
wödowHeight
 || y < -wödowHeighà+ 
rsize
)

53 
y°ï
 = -ystep;

56 
x
 +
x°ï
;

57 
y
 +
y°ï
;

63 if(
x
 > (
wödowWidth
-
rsize
 + 
x°ï
))

64 
x
 = 
wödowWidth
-
rsize
-1;

65 if(
x
 < -(
wödowWidth
 + 
x°ï
))

66 
x
 = -
wödowWidth
 -1;

68 if(
y
 > (
wödowHeight
 + 
y°ï
))

69 
y
 = 
wödowHeight
-1;

70 if(
y
 < -(
wödowHeight
 - 
rsize
 + 
y°ï
))

71 
y
 = -
wödowHeight
 + 
rsize
 - 1;

76 
	`glutPo°Redi•œy
();

77 
	`glutTimîFunc
(33,
TimîFun˘i⁄
, 1);

78 
	}
}

83 
	$SëupRC
()

86 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 1.0f, 1.0f);

87 
	}
}

92 
	$Ch™geSize
(
w
, 
h
)

94 
GLÊﬂt
 
a•e˘R©io
;

97 if(
h
 == 0)

98 
h
 = 1;

101 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

104 
	`glM©rixMode
(
GL_PROJECTION
);

105 
	`glLﬂdIdítôy
();

108 
a•e˘R©io
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

109 i‡(
w
 <
h
)

111 
wödowWidth
 = 100;

112 
wödowHeight
 = 100 / 
a•e˘R©io
;

113 
	`glOπho
 (-100.0, 100.0, -
wödowHeight
, windowHeight, 1.0, -1.0);

117 
wödowWidth
 = 100 * 
a•e˘R©io
;

118 
wödowHeight
 = 100;

119 
	`glOπho
 (-
wödowWidth
, windowWidth, -100.0, 100.0, 1.0, -1.0);

122 
	`glM©rixMode
(
GL_MODELVIEW
);

123 
	`glLﬂdIdítôy
();

124 
	}
}

128 
	$maö
(
¨gc
, * 
¨gv
[])

130 
	`glutInô
(&
¨gc
, 
¨gv
);

131 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGBA
);

132 
	`glutInôWödowSize
(800,600);

133 
	`glutCª©eWödow
("Bounce");

134 
	`glutDi•œyFunc
(
RídîS˚√
);

135 
	`glutResh≠eFunc
(
Ch™geSize
);

136 
	`glutTimîFunc
(33, 
TimîFun˘i⁄
, 1);

138 
	`SëupRC
();

140 
	`glutMaöLo›
();

143 
	}
}

	@chapt02/glrect/glrect.cpp

7 
	~"../../sh¨ed/g…oﬁs.h
"

10 
	~<°dlib.h
>

11 
	~<°dio.h
>

15 
	$RídîS˚√
()

18 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

22 
	`glCﬁ‹3f
(1.0f, 0.0f, 0.0f);

25 
	`glRe˘f
(-25.0f, 25.0f, 25.0f, -25.0f);

28 
	`glFlush
();

29 
	}
}

34 
	$SëupRC
()

37 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 1.0f, 1.0f);

38 
	}
}

43 
	$Ch™geSize
(
w
, 
h
)

45 
GLÊﬂt
 
a•e˘R©io
;

48 if(
h
 == 0)

49 
h
 = 1;

52 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

55 
	`glM©rixMode
(
GL_PROJECTION
);

56 
	`glLﬂdIdítôy
();

59 
a•e˘R©io
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

60 i‡(
w
 <
h
)

61 
	`glOπho
 (-100.0, 100.0, -100 / 
a•e˘R©io
, 100.0 /áspectRatio, 1.0, -1.0);

63 
	`glOπho
 (-100.0 * 
a•e˘R©io
, 100.0 *áspectRatio, -100.0, 100.0, 1.0, -1.0);

65 
	`glM©rixMode
(
GL_MODELVIEW
);

66 
	`glLﬂdIdítôy
();

67 
	}
}

71 
	$maö
(
¨gc
, * 
¨gv
[])

73 
	`glutInô
(&
¨gc
, 
¨gv
);

74 
	`glutInôDi•œyMode
(
GLUT_SINGLE
 | 
GLUT_RGB
);

76 
	`glutCª©eWödow
("GLRect");

77 
	`glutDi•œyFunc
(
RídîS˚√
);

78 
	`glutResh≠eFunc
(
Ch™geSize
);

79 
	`SëupRC
();

80 
	`glutMaöLo›
();

83 
	}
}

	@chapt02/simple/simple.cpp

7 
	~"../../sh¨ed/g…oﬁs.h
"

11 
	$RídîS˚√
()

14 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

18 
	`glFlush
();

19 
	}
}

23 
	$SëupRC
()

25 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 1.0f, 1.0f);

26 
	}
}

30 
	$maö
(
¨gc
, * 
¨gv
[])

32 
	`glutInô
(&
¨gc
, 
¨gv
);

33 
	`glutInôDi•œyMode
(
GLUT_SINGLE
 | 
GLUT_RGBA
);

34 
	`glutCª©eWödow
("Simple");

35 
	`glutDi•œyFunc
(
RídîS˚√
);

37 
	`SëupRC
();

39 
	`glutMaöLo›
();

42 
	}
}

	@chapt03/lines/lines.cpp

7 
	~"../../sh¨ed/g…oﬁs.h
"

11 
	#GL_PI
 3.1415f

	)

14 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

15 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

19 
	$RídîS˚√
()

21 
GLÊﬂt
 
x
,
y
,
z
,
™gÀ
;

24 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

27 
	`glPushM©rix
();

28 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

29 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

32 
	`glBegö
(
GL_LINES
);

34 
z
 = 0.0f;

35 
™gÀ
 = 0.0f;ángÀ <
GL_PI
;ángle += (GL_PI / 20.0f))

38 
x
 = 50.0f*
	`sö
(
™gÀ
);

39 
y
 = 50.0f*
	`cos
(
™gÀ
);

40 
	`glVîãx3f
(
x
, 
y
, 
z
);

43 
x
 = 50.0f*
	`sö
(
™gÀ
+
GL_PI
);

44 
y
 = 50.0f*
	`cos
(
™gÀ
+
GL_PI
);

45 
	`glVîãx3f
(
x
, 
y
, 
z
);

49 
	`glEnd
();

52 
	`glP›M©rix
();

55 
	`glutSw≠Buf„rs
();

56 
	}
}

61 
	$SëupRC
()

64 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f );

67 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

68 
	}
}

72 
	$S≥cülKeys
(
key
, 
x
, 
y
)

74 if(
key
 =
GLUT_KEY_UP
)

75 
xRŸ
-= 5.0f;

77 if(
key
 =
GLUT_KEY_DOWN
)

78 
xRŸ
 += 5.0f;

80 if(
key
 =
GLUT_KEY_LEFT
)

81 
yRŸ
 -= 5.0f;

83 if(
key
 =
GLUT_KEY_RIGHT
)

84 
yRŸ
 += 5.0f;

86 if(
key
 > 356.0f)

87 
xRŸ
 = 0.0f;

89 if(
key
 < -1.0f)

90 
xRŸ
 = 355.0f;

92 if(
key
 > 356.0f)

93 
yRŸ
 = 0.0f;

95 if(
key
 < -1.0f)

96 
yRŸ
 = 355.0f;

99 
	`glutPo°Redi•œy
();

100 
	}
}

104 
	$Ch™geSize
(
w
, 
h
)

106 
GLÊﬂt
 
nR™ge
 = 100.0f;

109 if(
h
 == 0)

110 
h
 = 1;

113 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

116 
	`glM©rixMode
(
GL_PROJECTION
);

117 
	`glLﬂdIdítôy
();

120 i‡(
w
 <
h
)

121 
	`glOπho
 (-
nR™ge
,ÇR™ge, -nR™ge*
h
/
w
,ÇRange*h/w, -nRange,ÇRange);

123 
	`glOπho
 (-
nR™ge
*
w
/
h
,ÇRange*w/h, -nRange,ÇRange, -nRange,ÇRange);

125 
	`glM©rixMode
(
GL_MODELVIEW
);

126 
	`glLﬂdIdítôy
();

127 
	}
}

131 
	$maö
(
¨gc
, * 
¨gv
[])

133 
	`glutInô
(&
¨gc
, 
¨gv
);

134 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

135 
	`glutInôWödowSize
(800,600);

136 
	`glutCª©eWödow
("Lines Example");

137 
	`glutResh≠eFunc
(
Ch™geSize
);

138 
	`glutS≥cülFunc
(
S≥cülKeys
);

139 
	`glutDi•œyFunc
(
RídîS˚√
);

140 
	`SëupRC
();

141 
	`glutMaöLo›
();

144 
	}
}

	@chapt03/linesw/linesw.cpp

6 
	~"../../sh¨ed/g…oﬁs.h
"

7 
	~<m©h.h
>

11 
	#GL_PI
 3.1415f

	)

14 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

15 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

19 
	$RídîS˚√
()

21 
GLÊﬂt
 
y
;

22 
GLÊﬂt
 
fSizes
[2];

23 
GLÊﬂt
 
fCuºSize
;

27 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

30 
	`glPushM©rix
();

31 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

32 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

35 
	`glGëFlﬂtv
(
GL_LINE_WIDTH_RANGE
,
fSizes
);

36 
fCuºSize
 = 
fSizes
[0];

39 
y
 = -90.0f; y < 90.0f; y += 20.0f)

42 
	`glLöeWidth
(
fCuºSize
);

45 
	`glBegö
(
GL_LINES
);

46 
	`glVîãx2f
(-80.0f, 
y
);

47 
	`glVîãx2f
(80.0f, 
y
);

48 
	`glEnd
();

51 
fCuºSize
 += 1.0f;

56 
	`glP›M©rix
();

59 
	`glutSw≠Buf„rs
();

60 
	}
}

64 
	$SëupRC
()

67 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f );

70 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

71 
	}
}

73 
	$S≥cülKeys
(
key
, 
x
, 
y
)

75 if(
key
 =
GLUT_KEY_UP
)

76 
xRŸ
-= 5.0f;

78 if(
key
 =
GLUT_KEY_DOWN
)

79 
xRŸ
 += 5.0f;

81 if(
key
 =
GLUT_KEY_LEFT
)

82 
yRŸ
 -= 5.0f;

84 if(
key
 =
GLUT_KEY_RIGHT
)

85 
yRŸ
 += 5.0f;

87 if(
key
 > 356.0f)

88 
xRŸ
 = 0.0f;

90 if(
key
 < -1.0f)

91 
xRŸ
 = 355.0f;

93 if(
key
 > 356.0f)

94 
yRŸ
 = 0.0f;

96 if(
key
 < -1.0f)

97 
yRŸ
 = 355.0f;

100 
	`glutPo°Redi•œy
();

101 
	}
}

104 
	$Ch™geSize
(
w
, 
h
)

106 
GLÊﬂt
 
nR™ge
 = 100.0f;

109 if(
h
 == 0)

110 
h
 = 1;

113 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

116 
	`glM©rixMode
(
GL_PROJECTION
);

117 
	`glLﬂdIdítôy
();

120 i‡(
w
 <
h
)

121 
	`glOπho
 (-
nR™ge
,ÇR™ge, -nR™ge*
h
/
w
,ÇRange*h/w, -nRange,ÇRange);

123 
	`glOπho
 (-
nR™ge
*
w
/
h
,ÇRange*w/h, -nRange,ÇRange, -nRange,ÇRange);

125 
	`glM©rixMode
(
GL_MODELVIEW
);

126 
	`glLﬂdIdítôy
();

127 
	}
}

129 
	$maö
(
¨gc
, * 
¨gv
[])

131 
	`glutInô
(&
¨gc
, 
¨gv
);

132 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

133 
	`glutCª©eWödow
("Line Width Example");

134 
	`glutResh≠eFunc
(
Ch™geSize
);

135 
	`glutS≥cülFunc
(
S≥cülKeys
);

136 
	`glutDi•œyFunc
(
RídîS˚√
);

137 
	`SëupRC
();

138 
	`glutMaöLo›
();

141 
	}
}

	@chapt03/lstipple/lstipple.cpp

6 
	~"../../sh¨ed/g…oﬁs.h
"

7 
	~<m©h.h
>

11 
	#GL_PI
 3.1415f

	)

14 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

15 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

19 
	$RídîS˚√
()

21 
GLÊﬂt
 
y
;

22 
GLöt
 
Á˘‹
 = 3;

23 
GLush‹t
 
∑âîn
 = 0x5555;

27 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

30 
	`glPushM©rix
();

31 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

32 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

37 
y
 = -90.0f; y < 90.0f; y += 20.0f)

40 
	`glLöeStù∂e
(
Á˘‹
,
∑âîn
);

43 
	`glBegö
(
GL_LINES
);

44 
	`glVîãx2f
(-80.0f, 
y
);

45 
	`glVîãx2f
(80.0f, 
y
);

46 
	`glEnd
();

48 
Á˘‹
++;

53 
	`glP›M©rix
();

56 
	`glutSw≠Buf„rs
();

57 
	}
}

61 
	$SëupRC
()

64 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f );

67 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

70 
	`glE«bÀ
(
GL_LINE_STIPPLE
);

71 
	}
}

73 
	$S≥cülKeys
(
key
, 
x
, 
y
)

75 if(
key
 =
GLUT_KEY_UP
)

76 
xRŸ
-= 5.0f;

78 if(
key
 =
GLUT_KEY_DOWN
)

79 
xRŸ
 += 5.0f;

81 if(
key
 =
GLUT_KEY_LEFT
)

82 
yRŸ
 -= 5.0f;

84 if(
key
 =
GLUT_KEY_RIGHT
)

85 
yRŸ
 += 5.0f;

87 if(
key
 > 356.0f)

88 
xRŸ
 = 0.0f;

90 if(
key
 < -1.0f)

91 
xRŸ
 = 355.0f;

93 if(
key
 > 356.0f)

94 
yRŸ
 = 0.0f;

96 if(
key
 < -1.0f)

97 
yRŸ
 = 355.0f;

100 
	`glutPo°Redi•œy
();

101 
	}
}

104 
	$Ch™geSize
(
w
, 
h
)

106 
GLÊﬂt
 
nR™ge
 = 100.0f;

109 if(
h
 == 0)

110 
h
 = 1;

113 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

116 
	`glM©rixMode
(
GL_PROJECTION
);

117 
	`glLﬂdIdítôy
();

120 i‡(
w
 <
h
)

121 
	`glOπho
 (-
nR™ge
,ÇR™ge, -nR™ge*
h
/
w
,ÇRange*h/w, -nRange,ÇRange);

123 
	`glOπho
 (-
nR™ge
*
w
/
h
,ÇRange*w/h, -nRange,ÇRange, -nRange,ÇRange);

125 
	`glM©rixMode
(
GL_MODELVIEW
);

126 
	`glLﬂdIdítôy
();

127 
	}
}

129 
	$maö
(
¨gc
, * 
¨gv
[])

131 
	`glutInô
(&
¨gc
, 
¨gv
);

132 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

133 
	`glutCª©eWödow
("Stippled Line Example");

134 
	`glutResh≠eFunc
(
Ch™geSize
);

135 
	`glutS≥cülFunc
(
S≥cülKeys
);

136 
	`glutDi•œyFunc
(
RídîS˚√
);

137 
	`SëupRC
();

138 
	`glutMaöLo›
();

141 
	}
}

	@chapt03/lstrips/lstrips.cpp

6 
	~"../../sh¨ed/g…oﬁs.h
"

7 
	~<m©h.h
>

11 
	#GL_PI
 3.1415f

	)

14 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

15 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

19 
	$RídîS˚√
()

21 
GLÊﬂt
 
x
,
y
,
z
,
™gÀ
;

24 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

27 
	`glPushM©rix
();

28 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

29 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

32 
	`glBegö
(
GL_LINE_STRIP
);

34 
z
 = -50.0f;

35 
™gÀ
 = 0.0f;ángle <= (2.0f*3.1415f)*3.0f;ángle += 0.1f)

37 
x
 = 50.0f*
	`sö
(
™gÀ
);

38 
y
 = 50.0f*
	`cos
(
™gÀ
);

41 
	`glVîãx3f
(
x
, 
y
, 
z
);

42 
z
 += 0.5f;

46 
	`glEnd
();

49 
	`glP›M©rix
();

52 
	`glutSw≠Buf„rs
();

53 
	}
}

57 
	$SëupRC
()

60 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f );

63 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

64 
	}
}

66 
	$S≥cülKeys
(
key
, 
x
, 
y
)

68 if(
key
 =
GLUT_KEY_UP
)

69 
xRŸ
-= 5.0f;

71 if(
key
 =
GLUT_KEY_DOWN
)

72 
xRŸ
 += 5.0f;

74 if(
key
 =
GLUT_KEY_LEFT
)

75 
yRŸ
 -= 5.0f;

77 if(
key
 =
GLUT_KEY_RIGHT
)

78 
yRŸ
 += 5.0f;

80 if(
key
 > 356.0f)

81 
xRŸ
 = 0.0f;

83 if(
key
 < -1.0f)

84 
xRŸ
 = 355.0f;

86 if(
key
 > 356.0f)

87 
yRŸ
 = 0.0f;

89 if(
key
 < -1.0f)

90 
yRŸ
 = 355.0f;

93 
	`glutPo°Redi•œy
();

94 
	}
}

97 
	$Ch™geSize
(
w
, 
h
)

99 
GLÊﬂt
 
nR™ge
 = 100.0f;

102 if(
h
 == 0)

103 
h
 = 1;

106 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

109 
	`glM©rixMode
(
GL_PROJECTION
);

110 
	`glLﬂdIdítôy
();

113 i‡(
w
 <
h
)

114 
	`glOπho
 (-
nR™ge
,ÇR™ge, -nR™ge*
h
/
w
,ÇRange*h/w, -nRange,ÇRange);

116 
	`glOπho
 (-
nR™ge
*
w
/
h
,ÇRange*w/h, -nRange,ÇRange, -nRange,ÇRange);

118 
	`glM©rixMode
(
GL_MODELVIEW
);

119 
	`glLﬂdIdítôy
();

120 
	}
}

122 
	$maö
(
¨gc
, * 
¨gv
[])

124 
	`glutInô
(&
¨gc
, 
¨gv
);

125 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

126 
	`glutCª©eWödow
("Line Strips Example");

127 
	`glutResh≠eFunc
(
Ch™geSize
);

128 
	`glutS≥cülFunc
(
S≥cülKeys
);

129 
	`glutDi•œyFunc
(
RídîS˚√
);

130 
	`SëupRC
();

131 
	`glutMaöLo›
();

134 
	}
}

	@chapt03/points/points.cpp

6 
	~"../../sh¨ed/g…oﬁs.h
"

7 
	~<m©h.h
>

11 
	#GL_PI
 3.1415f

	)

14 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

15 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

19 
	$RídîS˚√
()

21 
GLÊﬂt
 
x
,
y
,
z
,
™gÀ
;

24 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

27 
	`glPushM©rix
();

28 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

29 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

32 
	`glBegö
(
GL_POINTS
);

34 
z
 = -50.0f;

35 
™gÀ
 = 0.0f;ángÀ <(2.0f*
GL_PI
)*3.0f;ángle += 0.1f)

37 
x
 = 50.0f*
	`sö
(
™gÀ
);

38 
y
 = 50.0f*
	`cos
(
™gÀ
);

41 
	`glVîãx3f
(
x
, 
y
, 
z
);

42 
z
 += 0.5f;

46 
	`glEnd
();

49 
	`glP›M©rix
();

52 
	`glutSw≠Buf„rs
();

53 
	}
}

57 
	$SëupRC
()

60 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f );

63 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

64 
	}
}

66 
	$S≥cülKeys
(
key
, 
x
, 
y
)

68 if(
key
 =
GLUT_KEY_UP
)

69 
xRŸ
-= 5.0f;

71 if(
key
 =
GLUT_KEY_DOWN
)

72 
xRŸ
 += 5.0f;

74 if(
key
 =
GLUT_KEY_LEFT
)

75 
yRŸ
 -= 5.0f;

77 if(
key
 =
GLUT_KEY_RIGHT
)

78 
yRŸ
 += 5.0f;

80 if(
key
 > 356.0f)

81 
xRŸ
 = 0.0f;

83 if(
key
 < -1.0f)

84 
xRŸ
 = 355.0f;

86 if(
key
 > 356.0f)

87 
yRŸ
 = 0.0f;

89 if(
key
 < -1.0f)

90 
yRŸ
 = 355.0f;

93 
	`glutPo°Redi•œy
();

94 
	}
}

97 
	$Ch™geSize
(
w
, 
h
)

99 
GLÊﬂt
 
nR™ge
 = 100.0f;

102 if(
h
 == 0)

103 
h
 = 1;

106 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

109 
	`glM©rixMode
(
GL_PROJECTION
);

110 
	`glLﬂdIdítôy
();

113 i‡(
w
 <
h
)

114 
	`glOπho
 (-
nR™ge
,ÇR™ge, -nR™ge*
h
/
w
,ÇRange*h/w, -nRange,ÇRange);

116 
	`glOπho
 (-
nR™ge
*
w
/
h
,ÇRange*w/h, -nRange,ÇRange, -nRange,ÇRange);

119 
	`glM©rixMode
(
GL_MODELVIEW
);

120 
	`glLﬂdIdítôy
();

121 
	}
}

123 
	$maö
(
¨gc
, * 
¨gv
[])

125 
	`glutInô
(&
¨gc
, 
¨gv
);

126 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

127 
	`glutCª©eWödow
("Points Example");

128 
	`glutResh≠eFunc
(
Ch™geSize
);

129 
	`glutS≥cülFunc
(
S≥cülKeys
);

130 
	`glutDi•œyFunc
(
RídîS˚√
);

131 
	`SëupRC
();

132 
	`glutMaöLo›
();

135 
	}
}

	@chapt03/pointsz/pointsz.cpp

6 
	~"../../sh¨ed/g…oﬁs.h
"

7 
	~<m©h.h
>

11 
	#GL_PI
 3.1415f

	)

14 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

15 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

19 
	$RídîS˚√
()

21 
GLÊﬂt
 
x
,
y
,
z
,
™gÀ
;

22 
GLÊﬂt
 
sizes
[2];

23 
GLÊﬂt
 
°ï
;

24 
GLÊﬂt
 
curSize
;

27 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

30 
	`glPushM©rix
();

31 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

32 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

35 
	`glGëFlﬂtv
(
GL_POINT_SIZE_RANGE
,
sizes
);

36 
	`glGëFlﬂtv
(
GL_POINT_SIZE_GRANULARITY
,&
°ï
);

39 
curSize
 = 
sizes
[0];

42 
z
 = -50.0f;

45 
™gÀ
 = 0.0f;ángle <= (2.0f*3.1415f)*3.0f;ángle += 0.1f)

48 
x
 = 50.0f*
	`sö
(
™gÀ
);

49 
y
 = 50.0f*
	`cos
(
™gÀ
);

52 
	`glPoötSize
(
curSize
);

55 
	`glBegö
(
GL_POINTS
);

56 
	`glVîãx3f
(
x
, 
y
, 
z
);

57 
	`glEnd
();

60 
z
 += 0.5f;

61 
curSize
 +
°ï
;

65 
	`glP›M©rix
();

68 
	`glutSw≠Buf„rs
();

69 
	}
}

73 
	$SëupRC
()

76 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f );

79 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

80 
	}
}

82 
	$S≥cülKeys
(
key
, 
x
, 
y
)

84 if(
key
 =
GLUT_KEY_UP
)

85 
xRŸ
-= 5.0f;

87 if(
key
 =
GLUT_KEY_DOWN
)

88 
xRŸ
 += 5.0f;

90 if(
key
 =
GLUT_KEY_LEFT
)

91 
yRŸ
 -= 5.0f;

93 if(
key
 =
GLUT_KEY_RIGHT
)

94 
yRŸ
 += 5.0f;

96 if(
key
 > 356.0f)

97 
xRŸ
 = 0.0f;

99 if(
key
 < -1.0f)

100 
xRŸ
 = 355.0f;

102 if(
key
 > 356.0f)

103 
yRŸ
 = 0.0f;

105 if(
key
 < -1.0f)

106 
yRŸ
 = 355.0f;

109 
	`glutPo°Redi•œy
();

110 
	}
}

113 
	$Ch™geSize
(
w
, 
h
)

115 
GLÊﬂt
 
nR™ge
 = 100.0f;

118 if(
h
 == 0)

119 
h
 = 1;

122 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

125 
	`glM©rixMode
(
GL_PROJECTION
);

126 
	`glLﬂdIdítôy
();

129 i‡(
w
 <
h
)

130 
	`glOπho
 (-
nR™ge
,ÇR™ge, -nR™ge*
h
/
w
,ÇRange*h/w, -nRange,ÇRange);

132 
	`glOπho
 (-
nR™ge
*
w
/
h
,ÇRange*w/h, -nRange,ÇRange, -nRange,ÇRange);

135 
	`glM©rixMode
(
GL_MODELVIEW
);

136 
	`glLﬂdIdítôy
();

137 
	}
}

139 
	$maö
(
¨gc
, * 
¨gv
[])

141 
	`glutInô
(&
¨gc
, 
¨gv
);

142 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

143 
	`glutCª©eWödow
("Points Size Example");

144 
	`glutResh≠eFunc
(
Ch™geSize
);

145 
	`glutS≥cülFunc
(
S≥cülKeys
);

146 
	`glutDi•œyFunc
(
RídîS˚√
);

147 
	`SëupRC
();

148 
	`glutMaöLo›
();

151 
	}
}

	@chapt03/pstipple/pstipple.cpp

5 
	~"../../sh¨ed/g…oﬁs.h
"

6 
	~<m©h.h
>

10 
	#GL_PI
 3.1415f

	)

13 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

14 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

23 
GLubyã
 
	gfúe
[128] = { 0x00, 0x00, 0x00, 0x00,

57 
	$RídîS˚√
()

60 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

63 
	`glPushM©rix
();

64 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

65 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

69 
	`glBegö
(
GL_POLYGON
);

70 
	`glVîãx2f
(-20.0f, 50.0f);

71 
	`glVîãx2f
(20.0f, 50.0f);

72 
	`glVîãx2f
(50.0f, 20.0f);

73 
	`glVîãx2f
(50.0f, -20.0f);

74 
	`glVîãx2f
(20.0f, -50.0f);

75 
	`glVîãx2f
(-20.0f, -50.0f);

76 
	`glVîãx2f
(-50.0f, -20.0f);

77 
	`glVîãx2f
(-50.0f, 20.0f);

78 
	`glEnd
();

81 
	`glP›M©rix
();

84 
	`glutSw≠Buf„rs
();

85 
	}
}

90 
	$SëupRC
()

93 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f );

96 
	`glCﬁ‹3f
(1.0f, 0.0f, 0.0f);

99 
	`glE«bÀ
(
GL_POLYGON_STIPPLE
);

102 
	`glPﬁyg⁄Stù∂e
(
fúe
);

103 
	}
}

105 
	$S≥cülKeys
(
key
, 
x
, 
y
)

107 if(
key
 =
GLUT_KEY_UP
)

108 
xRŸ
-= 5.0f;

110 if(
key
 =
GLUT_KEY_DOWN
)

111 
xRŸ
 += 5.0f;

113 if(
key
 =
GLUT_KEY_LEFT
)

114 
yRŸ
 -= 5.0f;

116 if(
key
 =
GLUT_KEY_RIGHT
)

117 
yRŸ
 += 5.0f;

119 if(
key
 > 356.0f)

120 
xRŸ
 = 0.0f;

122 if(
key
 < -1.0f)

123 
xRŸ
 = 355.0f;

125 if(
key
 > 356.0f)

126 
yRŸ
 = 0.0f;

128 if(
key
 < -1.0f)

129 
yRŸ
 = 355.0f;

132 
	`glutPo°Redi•œy
();

133 
	}
}

136 
	$Ch™geSize
(
w
, 
h
)

138 
GLÊﬂt
 
nR™ge
 = 100.0f;

141 if(
h
 == 0)

142 
h
 = 1;

145 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

148 
	`glM©rixMode
(
GL_PROJECTION
);

149 
	`glLﬂdIdítôy
();

152 i‡(
w
 <
h
)

153 
	`glOπho
 (-
nR™ge
,ÇR™ge, -nR™ge*
h
/
w
,ÇRange*h/w, -nRange,ÇRange);

155 
	`glOπho
 (-
nR™ge
*
w
/
h
,ÇRange*w/h, -nRange,ÇRange, -nRange,ÇRange);

158 
	`glM©rixMode
(
GL_MODELVIEW
);

159 
	`glLﬂdIdítôy
();

160 
	}
}

162 
	$maö
(
¨gc
, * 
¨gv
[])

164 
	`glutInô
(&
¨gc
, 
¨gv
);

165 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

166 
	`glutCª©eWödow
("Polygon Stippling");

167 
	`glutResh≠eFunc
(
Ch™geSize
);

168 
	`glutS≥cülFunc
(
S≥cülKeys
);

169 
	`glutDi•œyFunc
(
RídîS˚√
);

170 
	`SëupRC
();

171 
	`glutMaöLo›
();

174 
	}
}

	@chapt03/scissor/scissor.cpp

6 
	~"../../sh¨ed/g…oﬁs.h
"

10 
	$RídîS˚√
()

13 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 1.0f, 0.0f);

14 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

17 
	`glCÀ¨Cﬁ‹
(1.0f, 0.0f, 0.0f, 0.0f);

18 
	`glSciss‹
(100, 100, 600, 400);

19 
	`glE«bÀ
(
GL_SCISSOR_TEST
);

20 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

23 
	`glCÀ¨Cﬁ‹
(0.0f, 1.0f, 0.0f, 0.0f);

24 
	`glSciss‹
(200, 200, 400, 200);

25 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

28 
	`glDißbÀ
(
GL_SCISSOR_TEST
);

30 
	`glutSw≠Buf„rs
();

31 
	}
}

36 
	$Ch™geSize
(
w
, 
h
)

39 if(
h
 == 0)

40 
h
 = 1;

43 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

47 
	`glM©rixMode
(
GL_PROJECTION
);

48 
	`glLﬂdIdítôy
();

51 
	`gluOπho2D
(-4.0, 4.0, -3.0, 3.0);

54 
	`glM©rixMode
(
GL_MODELVIEW
);

55 
	`glLﬂdIdítôy
();

56 
	}
}

58 
	$S≥cülKeys
(
key
, 
x
, 
y
)

61 
	`glutPo°Redi•œy
();

62 
	}
}

66 
	$maö
(
¨gc
, * 
¨gv
[])

68 
	`glutInô
(&
¨gc
, 
¨gv
);

69 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
);

70 
	`glutInôWödowSize
(800,600);

71 
	`glutCª©eWödow
("OpenGL Scissor");

72 
	`glutResh≠eFunc
(
Ch™geSize
);

73 
	`glutDi•œyFunc
(
RídîS˚√
);

74 
	`glutS≥cülFunc
(
S≥cülKeys
);

75 
	`glutMaöLo›
();

78 
	}
}

	@chapt03/single/single.cpp

6 
	~"../../sh¨ed/g…oﬁs.h
"

7 
	~<m©h.h
>

11 
	$RídîS˚√
()

13 
GLdoubÀ
 
dRadius
 = 0.1;

14 
GLdoubÀ
 
dAngÀ
 = 0.0;

17 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 1.0f, 0.0f);

19 if(
dAngÀ
 == 0.0)

20 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

22 
	`glPoötSize
(4);

24 
GLdoubÀ
 
dRadiusPªv
 = 
dRadius
;

25 
GLdoubÀ
 
dAngÀPªv
 = 
dAngÀ
;

27 
dRadius
 *= 1.01;

28 
dAngÀ
 += 0.1;

36 
	`glBegö
(
GL_LINES
);

37 
	`glVîãx2d
(
dRadiusPªv
 * 
	`cos
(
dAngÀPªv
), dRadiusPªv * 
	`sö
(dAnglePrev));

38 
	`glVîãx2d
(
dRadius
 * 
	`cos
(
dAngÀ
), dRadiu†* 
	`sö
(dAngle));

39 
	`glEnd
();

49 if(
dAngÀ
 > 30.0)

51 
dRadius
 = 0.1;

52 
dAngÀ
 = 0.0;

56 
	`glFöish
();

57 
	}
}

61 
	$Timî
(
vÆue
)

63 
	`glutTimîFunc
(50,
Timî
, 0);

64 
	`glutPo°Redi•œy
();

65 
	}
}

70 
	$Ch™geSize
(
w
, 
h
)

73 if(
h
 == 0)

74 
h
 = 1;

77 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

81 
	`glM©rixMode
(
GL_PROJECTION
);

82 
	`glLﬂdIdítôy
();

85 
	`gluOπho2D
(-4.0, 4.0, -3.0, 3.0);

88 
	`glM©rixMode
(
GL_MODELVIEW
);

89 
	`glLﬂdIdítôy
();

90 
	}
}

92 
	$S≥cülKeys
(
key
, 
x
, 
y
)

95 
	`glutPo°Redi•œy
();

96 
	}
}

102 
	$maö
(
¨gc
, * 
¨gv
[])

104 
	`glutInô
(&
¨gc
, 
¨gv
);

106 
	`glutInôDi•œyMode
(
GLUT_RGB
);

107 
	`glutInôWödowSize
(800,600);

108 
	`glutCª©eWödow
("OpenGL Single Buffered");

109 
	`glutResh≠eFunc
(
Ch™geSize
);

110 
	`glutDi•œyFunc
(
RídîS˚√
);

111 
	`glutS≥cülFunc
(
S≥cülKeys
);

112 
	`glutTimîFunc
(50,
Timî
, 0);

113 
	`glutMaöLo›
();

116 
	}
}

	@chapt03/star/star.cpp

6 
	~"../../sh¨ed/g…oﬁs.h
"

7 
	~<m©h.h
>

11 
	#GL_PI
 3.1415f

	)

14 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

15 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

18 
	#MODE_SOLID
 0

	)

19 
	#MODE_LINE
 1

	)

20 
	#MODE_POINT
 2

	)

22 
	#TRUE
 
åue


	)

23 
	#FALSE
 
Ál£


	)

25 
	giMode
 = 
MODE_SOLID
;

26 
GLboﬁón
 
	gbEdgeFœg
 = 
TRUE
;

30 
	$Pro˚ssMíu
(
vÆue
)

32 
vÆue
)

35 
iMode
 = 
MODE_SOLID
;

39 
iMode
 = 
MODE_LINE
;

43 
iMode
 = 
MODE_POINT
;

47 
bEdgeFœg
 = 
TRUE
;

52 
bEdgeFœg
 = 
FALSE
;

56 
	`glutPo°Redi•œy
();

57 
	}
}

61 
	$RídîS˚√
()

64 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

68 if(
iMode
 =
MODE_LINE
)

69 
	`glPﬁyg⁄Mode
(
GL_FRONT_AND_BACK
,
GL_LINE
);

71 if(
iMode
 =
MODE_POINT
)

72 
	`glPﬁyg⁄Mode
(
GL_FRONT_AND_BACK
,
GL_POINT
);

74 if(
iMode
 =
MODE_SOLID
)

75 
	`glPﬁyg⁄Mode
(
GL_FRONT_AND_BACK
,
GL_FILL
);

79 
	`glPushM©rix
();

80 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

81 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

85 
	`glBegö
(
GL_TRIANGLES
);

87 
	`glEdgeFœg
(
bEdgeFœg
);

88 
	`glVîãx2f
(-20.0f, 0.0f);

89 
	`glEdgeFœg
(
TRUE
);

90 
	`glVîãx2f
(20.0f, 0.0f);

91 
	`glVîãx2f
(0.0f, 40.0f);

93 
	`glVîãx2f
(-20.0f,0.0f);

94 
	`glVîãx2f
(-60.0f,-20.0f);

95 
	`glEdgeFœg
(
bEdgeFœg
);

96 
	`glVîãx2f
(-20.0f,-40.0f);

97 
	`glEdgeFœg
(
TRUE
);

99 
	`glVîãx2f
(-20.0f,-40.0f);

100 
	`glVîãx2f
(0.0f, -80.0f);

101 
	`glEdgeFœg
(
bEdgeFœg
);

102 
	`glVîãx2f
(20.0f, -40.0f);

103 
	`glEdgeFœg
(
TRUE
);

105 
	`glVîãx2f
(20.0f, -40.0f);

106 
	`glVîãx2f
(60.0f, -20.0f);

107 
	`glEdgeFœg
(
bEdgeFœg
);

108 
	`glVîãx2f
(20.0f, 0.0f);

109 
	`glEdgeFœg
(
TRUE
);

112 
	`glEdgeFœg
(
bEdgeFœg
);

113 
	`glVîãx2f
(-20.0f, 0.0f);

114 
	`glVîãx2f
(-20.0f,-40.0f);

115 
	`glVîãx2f
(20.0f, 0.0f);

117 
	`glVîãx2f
(-20.0f,-40.0f);

118 
	`glVîãx2f
(20.0f, -40.0f);

119 
	`glVîãx2f
(20.0f, 0.0f);

120 
	`glEdgeFœg
(
TRUE
);

123 
	`glEnd
();

126 
	`glP›M©rix
();

129 
	`glutSw≠Buf„rs
();

130 
	}
}

134 
	$SëupRC
()

137 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f );

140 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

141 
	}
}

143 
	$S≥cülKeys
(
key
, 
x
, 
y
)

145 if(
key
 =
GLUT_KEY_UP
)

146 
xRŸ
-= 5.0f;

148 if(
key
 =
GLUT_KEY_DOWN
)

149 
xRŸ
 += 5.0f;

151 if(
key
 =
GLUT_KEY_LEFT
)

152 
yRŸ
 -= 5.0f;

154 if(
key
 =
GLUT_KEY_RIGHT
)

155 
yRŸ
 += 5.0f;

157 if(
key
 > 356.0f)

158 
xRŸ
 = 0.0f;

160 if(
key
 < -1.0f)

161 
xRŸ
 = 355.0f;

163 if(
key
 > 356.0f)

164 
yRŸ
 = 0.0f;

166 if(
key
 < -1.0f)

167 
yRŸ
 = 355.0f;

170 
	`glutPo°Redi•œy
();

171 
	}
}

174 
	$Ch™geSize
(
w
, 
h
)

176 
GLÊﬂt
 
nR™ge
 = 100.0f;

179 if(
h
 == 0)

180 
h
 = 1;

183 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

186 
	`glM©rixMode
(
GL_PROJECTION
);

187 
	`glLﬂdIdítôy
();

190 i‡(
w
 <
h
)

191 
	`glOπho
 (-
nR™ge
,ÇR™ge, -nR™ge*
h
/
w
,ÇRange*h/w, -nRange,ÇRange);

193 
	`glOπho
 (-
nR™ge
*
w
/
h
,ÇRange*w/h, -nRange,ÇRange, -nRange,ÇRange);

196 
	`glM©rixMode
(
GL_MODELVIEW
);

197 
	`glLﬂdIdítôy
();

198 
	}
}

200 
	$maö
(
¨gc
, * 
¨gv
[])

202 
nModeMíu
;

203 
nEdgeMíu
;

204 
nMaöMíu
;

206 
	`glutInô
(&
¨gc
, 
¨gv
);

207 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

208 
	`glutCª©eWödow
("Solidánd Outlined Star");

211 
nModeMíu
 = 
	`glutCª©eMíu
(
Pro˚ssMíu
);

212 
	`glutAddMíuE¡ry
("Solid",1);

213 
	`glutAddMíuE¡ry
("Outline",2);

214 
	`glutAddMíuE¡ry
("Points",3);

216 
nEdgeMíu
 = 
	`glutCª©eMíu
(
Pro˚ssMíu
);

217 
	`glutAddMíuE¡ry
("On",4);

218 
	`glutAddMíuE¡ry
("Off",5);

220 
nMaöMíu
 = 
	`glutCª©eMíu
(
Pro˚ssMíu
);

221 
	`glutAddSubMíu
("Mode", 
nModeMíu
);

222 
	`glutAddSubMíu
("Edges", 
nEdgeMíu
);

223 
	`glutAâachMíu
(
GLUT_RIGHT_BUTTON
);

225 
	`glutResh≠eFunc
(
Ch™geSize
);

226 
	`glutS≥cülFunc
(
S≥cülKeys
);

227 
	`glutDi•œyFunc
(
RídîS˚√
);

228 
	`SëupRC
();

229 
	`glutMaöLo›
();

232 
	}
}

	@chapt03/stencil/stencil.cpp

6 
	~"../../sh¨ed/g…oﬁs.h
"

9 
GLÊﬂt
 
	gx
 = 0.0f;

10 
GLÊﬂt
 
	gy
 = 0.0f;

11 
GLÊﬂt
 
	grsize
 = 25;

15 
GLÊﬂt
 
	gx°ï
 = 1.0f;

16 
GLÊﬂt
 
	gy°ï
 = 1.0f;

19 
GLÊﬂt
 
	gwödowWidth
;

20 
GLÊﬂt
 
	gwödowHeight
;

24 
	$RídîS˚√
()

26 
GLdoubÀ
 
dRadius
 = 0.1;

27 
GLdoubÀ
 
dAngÀ
;

30 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 1.0f, 0.0f);

33 
	`glCÀ¨Sãncû
(0.0f);

34 
	`glE«bÀ
(
GL_STENCIL_TEST
);

37 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
 | 
GL_STENCIL_BUFFER_BIT
);

41 
	`glSãncûFunc
(
GL_NEVER
, 0x0, 0x0);

42 
	`glSãncûOp
(
GL_INCR
, GL_INCR, GL_INCR);

48 
	`glCﬁ‹3f
(1.0f, 1.0f, 1.0f);

49 
	`glBegö
(
GL_LINE_STRIP
);

50 
dAngÀ
 = 0; dAngle < 400.0; dAngle += 0.1)

52 
	`glVîãx2d
(
dRadius
 * 
	`cos
(
dAngÀ
), dRadiu†* 
	`sö
(dAngle));

53 
dRadius
 *= 1.002;

55 
	`glEnd
();

59 
	`glSãncûFunc
(
GL_NOTEQUAL
, 0x1, 0x1);

60 
	`glSãncûOp
(
GL_KEEP
, GL_KEEP, GL_KEEP);

64 
	`glCﬁ‹3f
(1.0f, 0.0f, 0.0f);

65 
	`glRe˘f
(
x
, 
y
, x + 
rsize
, y -Ñsize);

68 
	`glutSw≠Buf„rs
();

69 
	}
}

74 
	$TimîFun˘i⁄
(
vÆue
)

77 if(
x
 > 
wödowWidth
-
rsize
 || x < -windowWidth)

78 
x°ï
 = -xstep;

81 if(
y
 > 
wödowHeight
 || y < -wödowHeighà+ 
rsize
)

82 
y°ï
 = -ystep;

89 if(
x
 > 
wödowWidth
-
rsize
)

90 
x
 = 
wödowWidth
-
rsize
-1;

92 if(
y
 > 
wödowHeight
)

93 
y
 = 
wödowHeight
-1;

96 
x
 +
x°ï
;

97 
y
 +
y°ï
;

100 
	`glutPo°Redi•œy
();

101 
	`glutTimîFunc
(33,
TimîFun˘i⁄
, 1);

102 
	}
}

107 
	$Ch™geSize
(
w
, 
h
)

109 
GLÊﬂt
 
a•e˘R©io
;

112 if(
h
 == 0)

113 
h
 = 1;

116 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

119 
	`glM©rixMode
(
GL_PROJECTION
);

120 
	`glLﬂdIdítôy
();

123 
a•e˘R©io
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

124 i‡(
w
 <
h
)

126 
wödowWidth
 = 100;

127 
wödowHeight
 = 100 / 
a•e˘R©io
;

128 
	`glOπho
 (-100.0, 100.0, -
wödowHeight
, windowHeight, 1.0, -1.0);

132 
wödowWidth
 = 100 * 
a•e˘R©io
;

133 
wödowHeight
 = 100;

134 
	`glOπho
 (-
wödowWidth
, windowWidth, -100.0, 100.0, 1.0, -1.0);

137 
	`glM©rixMode
(
GL_MODELVIEW
);

138 
	`glLﬂdIdítôy
();

139 
	}
}

144 
	$maö
(
¨gc
, * 
¨gv
[])

146 
	`glutInô
(&
¨gc
, 
¨gv
);

147 
	`glutInôDi•œyMode
(
GLUT_RGB
 | 
GLUT_DOUBLE
 | 
GLUT_STENCIL
);

148 
	`glutInôWödowSize
(800,600);

149 
	`glutCª©eWödow
("OpenGL Stencil Test");

150 
	`glutResh≠eFunc
(
Ch™geSize
);

151 
	`glutDi•œyFunc
(
RídîS˚√
);

152 
	`glutTimîFunc
(33, 
TimîFun˘i⁄
, 1);

153 
	`glutMaöLo›
();

156 
	}
}

	@chapt03/triangle/triangle.cpp

5 
	~"../../sh¨ed/g…oﬁs.h
"

6 
	~<m©h.h
>

10 
	#GL_PI
 3.1415f

	)

13 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

14 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

18 
	giCuŒ
 = 0;

19 
	giOuéöe
 = 0;

20 
	giDïth
 = 0;

24 
	$Pro˚ssMíu
(
vÆue
)

26 
vÆue
)

29 
iDïth
 = !iDepth;

33 
iCuŒ
 = !iCull;

37 
iOuéöe
 = !iOutline;

42 
	`glutPo°Redi•œy
();

43 
	}
}

47 
	$RídîS˚√
()

49 
GLÊﬂt
 
x
,
y
,
™gÀ
;

50 
iPivŸ
 = 1;

53 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
 | 
GL_DEPTH_BUFFER_BIT
);

56 if(
iCuŒ
)

57 
	`glE«bÀ
(
GL_CULL_FACE
);

59 
	`glDißbÀ
(
GL_CULL_FACE
);

62 if(
iDïth
)

63 
	`glE«bÀ
(
GL_DEPTH_TEST
);

65 
	`glDißbÀ
(
GL_DEPTH_TEST
);

68 if(
iOuéöe
)

69 
	`glPﬁyg⁄Mode
(
GL_BACK
,
GL_LINE
);

71 
	`glPﬁyg⁄Mode
(
GL_BACK
,
GL_FILL
);

75 
	`glPushM©rix
();

76 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

77 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

81 
	`glBegö
(
GL_TRIANGLE_FAN
);

85 
	`glVîãx3f
(0.0f, 0.0f, 75.0f);

90 
™gÀ
 = (2.0f*
GL_PI
);ángle >= 0.0f;ángle -= (GL_PI/8.0f))

93 
x
 = 50.0f*
	`sö
(
™gÀ
);

94 
y
 = 50.0f*
	`cos
(
™gÀ
);

97 if((
iPivŸ
 %2) == 0)

98 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

100 
	`glCﬁ‹3f
(1.0f, 0.0f, 0.0f);

103 
iPivŸ
++;

106 
	`glVîãx2f
(
x
, 
y
);

110 
	`glEnd
();

114 
	`glBegö
(
GL_TRIANGLE_FAN
);

117 
	`glVîãx2f
(0.0f, 0.0f);

118 
™gÀ
 = 0.0f;ángÀ < (2.0f*
GL_PI
);ángle += (GL_PI/8.0f))

121 
x
 = 50.0f*
	`sö
(
™gÀ
);

122 
y
 = 50.0f*
	`cos
(
™gÀ
);

125 if((
iPivŸ
 %2) == 0)

126 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

128 
	`glCﬁ‹3f
(1.0f, 0.0f, 0.0f);

131 
iPivŸ
++;

134 
	`glVîãx2f
(
x
, 
y
);

138 
	`glEnd
();

141 
	`glP›M©rix
();

144 
	`glutSw≠Buf„rs
();

145 
	}
}

149 
	$SëupRC
()

152 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f );

155 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

158 
	`glShadeModñ
(
GL_FLAT
);

162 
	`glFr⁄tFa˚
(
GL_CW
);

163 
	}
}

165 
	$S≥cülKeys
(
key
, 
x
, 
y
)

167 if(
key
 =
GLUT_KEY_UP
)

168 
xRŸ
-= 5.0f;

170 if(
key
 =
GLUT_KEY_DOWN
)

171 
xRŸ
 += 5.0f;

173 if(
key
 =
GLUT_KEY_LEFT
)

174 
yRŸ
 -= 5.0f;

176 if(
key
 =
GLUT_KEY_RIGHT
)

177 
yRŸ
 += 5.0f;

179 if(
key
 > 356.0f)

180 
xRŸ
 = 0.0f;

182 if(
key
 < -1.0f)

183 
xRŸ
 = 355.0f;

185 if(
key
 > 356.0f)

186 
yRŸ
 = 0.0f;

188 if(
key
 < -1.0f)

189 
yRŸ
 = 355.0f;

192 
	`glutPo°Redi•œy
();

193 
	}
}

196 
	$Ch™geSize
(
w
, 
h
)

198 
GLÊﬂt
 
nR™ge
 = 100.0f;

201 if(
h
 == 0)

202 
h
 = 1;

205 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

208 
	`glM©rixMode
(
GL_PROJECTION
);

209 
	`glLﬂdIdítôy
();

212 i‡(
w
 <
h
)

213 
	`glOπho
 (-
nR™ge
,ÇR™ge, -nR™ge*
h
/
w
,ÇRange*h/w, -nRange,ÇRange);

215 
	`glOπho
 (-
nR™ge
*
w
/
h
,ÇRange*w/h, -nRange,ÇRange, -nRange,ÇRange);

218 
	`glM©rixMode
(
GL_MODELVIEW
);

219 
	`glLﬂdIdítôy
();

220 
	}
}

222 
	$maö
(
¨gc
, * 
¨gv
[])

224 
	`glutInô
(&
¨gc
, 
¨gv
);

225 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

226 
	`glutCª©eWödow
("Triangle Culling Example");

229 
	`glutCª©eMíu
(
Pro˚ssMíu
);

230 
	`glutAddMíuE¡ry
("Toggle depthÅest",1);

231 
	`glutAddMíuE¡ry
("Toggle cull backface",2);

232 
	`glutAddMíuE¡ry
("Toggle outline back",3);

233 
	`glutAâachMíu
(
GLUT_RIGHT_BUTTON
);

235 
	`glutResh≠eFunc
(
Ch™geSize
);

236 
	`glutS≥cülFunc
(
S≥cülKeys
);

237 
	`glutDi•œyFunc
(
RídîS˚√
);

238 
	`SëupRC
();

239 
	`glutMaöLo›
();

242 
	}
}

	@chapt04/Atom/Atom.cpp

5 
	~"../../sh¨ed/g…oﬁs.h
"

8 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

9 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

13 
	$RídîS˚√
()

16 
GLÊﬂt
 
fEÀ˘1
 = 0.0f;

19 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
 | 
GL_DEPTH_BUFFER_BIT
);

22 
	`glM©rixMode
(
GL_MODELVIEW
);

23 
	`glLﬂdIdítôy
();

27 
	`glTøn¶©ef
(0.0f, 0.0f, -100.0f);

30 
	`glCﬁ‹3ub
(255, 0, 0);

31 
	`glutSﬁidSphîe
(10.0f, 15, 15);

34 
	`glCﬁ‹3ub
(255,255,0);

38 
	`glPushM©rix
();

41 
	`glRŸ©ef
(
fEÀ˘1
, 0.0f, 1.0f, 0.0f);

44 
	`glTøn¶©ef
(90.0f, 0.0f, 0.0f);

47 
	`glutSﬁidSphîe
(6.0f, 15, 15);

51 
	`glP›M©rix
();

54 
	`glPushM©rix
();

55 
	`glRŸ©ef
(45.0f, 0.0f, 0.0f, 1.0f);

56 
	`glRŸ©ef
(
fEÀ˘1
, 0.0f, 1.0f, 0.0f);

57 
	`glTøn¶©ef
(-70.0f, 0.0f, 0.0f);

58 
	`glutSﬁidSphîe
(6.0f, 15, 15);

59 
	`glP›M©rix
();

63 
	`glPushM©rix
();

64 
	`glRŸ©ef
(360.0f-45.0f,0.0f, 0.0f, 1.0f);

65 
	`glRŸ©ef
(
fEÀ˘1
, 0.0f, 1.0f, 0.0f);

66 
	`glTøn¶©ef
(0.0f, 0.0f, 60.0f);

67 
	`glutSﬁidSphîe
(6.0f, 15, 15);

68 
	`glP›M©rix
();

72 
fEÀ˘1
 += 5.0f;

73 if(
fEÀ˘1
 > 360.0f)

74 
fEÀ˘1
 = 0.0f;

77 
	`glutSw≠Buf„rs
();

78 
	}
}

83 
	$SëupRC
()

85 
	`glE«bÀ
(
GL_DEPTH_TEST
);

90 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f );

91 
	}
}

93 
	$S≥cülKeys
(
key
, 
x
, 
y
)

95 if(
key
 =
GLUT_KEY_UP
)

96 
xRŸ
-= 5.0f;

98 if(
key
 =
GLUT_KEY_DOWN
)

99 
xRŸ
 += 5.0f;

101 if(
key
 =
GLUT_KEY_LEFT
)

102 
yRŸ
 -= 5.0f;

104 if(
key
 =
GLUT_KEY_RIGHT
)

105 
yRŸ
 += 5.0f;

107 if(
key
 > 356.0f)

108 
xRŸ
 = 0.0f;

110 if(
key
 < -1.0f)

111 
xRŸ
 = 355.0f;

113 if(
key
 > 356.0f)

114 
yRŸ
 = 0.0f;

116 if(
key
 < -1.0f)

117 
yRŸ
 = 355.0f;

120 
	`glutPo°Redi•œy
();

121 
	}
}

123 
	$TimîFunc
(
vÆue
)

125 
	`glutPo°Redi•œy
();

126 
	`glutTimîFunc
(100, 
TimîFunc
, 1);

127 
	}
}

130 
	$Ch™geSize
(
w
, 
h
)

132 
GLÊﬂt
 
nR™ge
 = 100.0f;

135 if(
h
 == 0)

136 
h
 = 1;

139 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

143 
	`glM©rixMode
(
GL_PROJECTION
);

144 
	`glLﬂdIdítôy
();

147 i‡(
w
 <
h
)

148 
	`glOπho
 (-
nR™ge
,ÇR™ge,ÇR™ge*
h
/
w
, -nRange*h/w, -nRange*2.0f,ÇRange*2.0f);

150 
	`glOπho
 (-
nR™ge
*
w
/
h
,ÇRange*w/h,ÇRange, -nRange, -nRange*2.0f,ÇRange*2.0f);

152 
	`glM©rixMode
(
GL_MODELVIEW
);

153 
	`glLﬂdIdítôy
();

154 
	}
}

156 
	$maö
(
¨gc
, * 
¨gv
[])

158 
	`glutInô
(&
¨gc
, 
¨gv
);

159 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

160 
	`glutInôWödowSize
(800, 600);

161 
	`glutCª©eWödow
("OpenGL Atom");

162 
	`glutResh≠eFunc
(
Ch™geSize
);

163 
	`glutS≥cülFunc
(
S≥cülKeys
);

164 
	`glutDi•œyFunc
(
RídîS˚√
);

165 
	`glutTimîFunc
(500, 
TimîFunc
, 1);

166 
	`SëupRC
();

167 
	`glutMaöLo›
();

170 
	}
}

	@chapt04/Atom2/atom2.cpp

7 
	~"../../sh¨ed/g…oﬁs.h
"

8 
	~<m©h.h
>

13 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

14 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

18 
	$RídîS˚√
()

21 
fEÀ˘1
 = 0.0f;

24 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
 | 
GL_DEPTH_BUFFER_BIT
);

27 
	`glCﬁ‹3ub
(255, 0, 0);

28 
	`glutSﬁidSphîe
(10.0f, 15, 15);

31 
	`glCﬁ‹3ub
(255,255,0);

35 
	`glPushM©rix
();

38 
	`glRŸ©ef
(
fEÀ˘1
, 0.0f, 1.0f, 0.0f);

41 
	`glTøn¶©ef
(90.0f, 0.0f, 0.0f);

44 
	`glutSﬁidSphîe
(6.0f, 15, 15);

47 
	`glP›M©rix
();

50 
	`glPushM©rix
();

51 
	`glRŸ©ef
(45.0f, 0.0f, 0.0f, 1.0f);

52 
	`glRŸ©ef
(
fEÀ˘1
, 0.0f, 1.0f, 0.0f);

53 
	`glTøn¶©ef
(-70.0f, 0.0f, 0.0f);

54 
	`glutSﬁidSphîe
(6.0f, 15, 15);

55 
	`glP›M©rix
();

59 
	`glPushM©rix
();

60 
	`glRŸ©ef
(360.0f-45.0f,0.0f, 0.0f, 1.0f);

61 
	`glRŸ©ef
(
fEÀ˘1
, 0.0f, 1.0f, 0.0f);

62 
	`glTøn¶©ef
(0.0f, 0.0f, 60.0f);

63 
	`glutSﬁidSphîe
(6.0f, 15, 15);

64 
	`glP›M©rix
();

68 
fEÀ˘1
 += 10.0f;

69 if(
fEÀ˘1
 > 360.0f)

70 
fEÀ˘1
 = 0.0f;

73 
	`glutSw≠Buf„rs
();

74 
	}
}

79 
	$SëupRC
()

81 
	`glE«bÀ
(
GL_DEPTH_TEST
);

82 
	`glFr⁄tFa˚
(
GL_CCW
);

83 
	`glE«bÀ
(
GL_CULL_FACE
);

86 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f );

87 
	}
}

89 
	$S≥cülKeys
(
key
, 
x
, 
y
)

91 if(
key
 =
GLUT_KEY_UP
)

92 
xRŸ
-= 5.0f;

94 if(
key
 =
GLUT_KEY_DOWN
)

95 
xRŸ
 += 5.0f;

97 if(
key
 =
GLUT_KEY_LEFT
)

98 
yRŸ
 -= 5.0f;

100 if(
key
 =
GLUT_KEY_RIGHT
)

101 
yRŸ
 += 5.0f;

103 if(
key
 > 356.0f)

104 
xRŸ
 = 0.0f;

106 if(
key
 < -1.0f)

107 
xRŸ
 = 355.0f;

109 if(
key
 > 356.0f)

110 
yRŸ
 = 0.0f;

112 if(
key
 < -1.0f)

113 
yRŸ
 = 355.0f;

116 
	`glutPo°Redi•œy
();

117 
	}
}

119 
	$TimîFunc
(
vÆue
)

121 
	`glutPo°Redi•œy
();

122 
	`glutTimîFunc
(100, 
TimîFunc
, 1);

123 
	}
}

125 
	$Ch™geSize
(
w
, 
h
)

127 
GLÊﬂt
 
fA•e˘
;

130 if(
h
 == 0)

131 
h
 = 1;

134 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

137 
	`glM©rixMode
(
GL_PROJECTION
);

138 
	`glLﬂdIdítôy
();

140 
fA•e˘
 = ()
w
/()
h
;

141 
	`gluPî•e˘ive
(45.0, 
fA•e˘
, 1.0, 500.0);

143 
	`glM©rixMode
(
GL_MODELVIEW
);

144 
	`glLﬂdIdítôy
();

145 
	`glTøn¶©ef
(0.0f, 0.0f, -250.0f);

146 
	}
}

148 
	$maö
(
¨gc
, * 
¨gv
[])

150 
	`glutInô
(&
¨gc
, 
¨gv
);

151 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

152 
	`glutInôWödowSize
(800, 600);

153 
	`glutCª©eWödow
("OpenGL Atom - Part Duex");

154 
	`glutResh≠eFunc
(
Ch™geSize
);

155 
	`glutS≥cülFunc
(
S≥cülKeys
);

156 
	`glutDi•œyFunc
(
RídîS˚√
);

157 
	`glutTimîFunc
(500, 
TimîFunc
, 1);

158 
	`SëupRC
();

159 
	`glutMaöLo›
();

162 
	}
}

	@chapt04/Ortho/ortho.cpp

6 
	~"../../sh¨ed/g…oﬁs.h
"

9 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

10 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

14 
	$Ch™geSize
(
w
, 
h
)

16 
GLÊﬂt
 
nR™ge
 = 120.0f;

18 if(
h
 == 0)

19 
h
 = 1;

22 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

25 
	`glM©rixMode
(
GL_PROJECTION
);

26 
	`glLﬂdIdítôy
();

29 i‡(
w
 <
h
)

30 
	`glOπho
 (-
nR™ge
,ÇR™ge, -nR™ge*
h
/
w
,ÇRange*h/w, -nRange*2.0f,ÇRange*2.0f);

32 
	`glOπho
 (-
nR™ge
*
w
/
h
,ÇRange*w/h, -nRange,ÇRange, -nRange*2.0f,ÇRange*2.0f);

34 
	`glM©rixMode
(
GL_MODELVIEW
);

35 
	`glLﬂdIdítôy
();

36 
	}
}

43 
	$SëupRC
()

46 
GLÊﬂt
 
whôeLight
[] = { 0.45f, 0.45f, 0.45f, 1.0f };

47 
GLÊﬂt
 
sour˚Light
[] = { 0.25f, 0.25f, 0.25f, 1.0f };

48 
GLÊﬂt
 
lightPos
[] = { -50.f, 25.0f, 250.0f, 0.0f };

50 
	`glE«bÀ
(
GL_DEPTH_TEST
);

51 
	`glFr⁄tFa˚
(
GL_CCW
);

52 
	`glE«bÀ
(
GL_CULL_FACE
);

55 
	`glE«bÀ
(
GL_LIGHTING
);

58 
	`glLightModñfv
(
GL_LIGHT_MODEL_AMBIENT
,
whôeLight
);

59 
	`glLightfv
(
GL_LIGHT0
,
GL_AMBIENT
,
sour˚Light
);

60 
	`glLightfv
(
GL_LIGHT0
,
GL_DIFFUSE
,
sour˚Light
);

61 
	`glLightfv
(
GL_LIGHT0
,
GL_POSITION
,
lightPos
);

62 
	`glE«bÀ
(
GL_LIGHT0
);

65 
	`glE«bÀ
(
GL_COLOR_MATERIAL
);

68 
	`glCﬁ‹M©îül
(
GL_FRONT
, 
GL_AMBIENT_AND_DIFFUSE
);

71 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f );

72 
	}
}

75 
	$S≥cülKeys
(
key
, 
x
, 
y
)

77 if(
key
 =
GLUT_KEY_UP
)

78 
xRŸ
-= 5.0f;

80 if(
key
 =
GLUT_KEY_DOWN
)

81 
xRŸ
 += 5.0f;

83 if(
key
 =
GLUT_KEY_LEFT
)

84 
yRŸ
 -= 5.0f;

86 if(
key
 =
GLUT_KEY_RIGHT
)

87 
yRŸ
 += 5.0f;

89 
xRŸ
 = (
GLÊﬂt
)((const )xRot % 360);

90 
yRŸ
 = (
GLÊﬂt
)((const )yRot % 360);

93 
	`glutPo°Redi•œy
();

94 
	}
}

98 
	$RídîS˚√
()

100 
fZ
,
bZ
;

103 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
 | 
GL_DEPTH_BUFFER_BIT
);

105 
fZ
 = 100.0f;

106 
bZ
 = -100.0f;

109 
	`glPushM©rix
();

110 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

111 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

114 
	`glCﬁ‹3f
(1.0f, 0.0f, 0.0f);

117 
	`glBegö
(
GL_QUADS
);

119 
	`glN‹mÆ3f
(0.0f, 0.0f, 1.0f);

122 
	`glVîãx3f
(-50.0f, 50.0f, 
fZ
);

123 
	`glVîãx3f
(-50.0f, -50.0f, 
fZ
);

124 
	`glVîãx3f
(-35.0f, -50.0f, 
fZ
);

125 
	`glVîãx3f
(-35.0f,50.0f,
fZ
);

128 
	`glVîãx3f
(50.0f, 50.0f, 
fZ
);

129 
	`glVîãx3f
(35.0f, 50.0f, 
fZ
);

130 
	`glVîãx3f
(35.0f, -50.0f, 
fZ
);

131 
	`glVîãx3f
(50.0f,-50.0f,
fZ
);

134 
	`glVîãx3f
(-35.0f, 50.0f, 
fZ
);

135 
	`glVîãx3f
(-35.0f, 35.0f, 
fZ
);

136 
	`glVîãx3f
(35.0f, 35.0f, 
fZ
);

137 
	`glVîãx3f
(35.0f, 50.0f,
fZ
);

140 
	`glVîãx3f
(-35.0f, -35.0f, 
fZ
);

141 
	`glVîãx3f
(-35.0f, -50.0f, 
fZ
);

142 
	`glVîãx3f
(35.0f, -50.0f, 
fZ
);

143 
	`glVîãx3f
(35.0f, -35.0f,
fZ
);

147 
	`glN‹mÆ3f
(0.0f, 1.0f, 0.0f);

148 
	`glVîãx3f
(-50.0f, 50.0f, 
fZ
);

149 
	`glVîãx3f
(50.0f, 50.0f, 
fZ
);

150 
	`glVîãx3f
(50.0f, 50.0f, 
bZ
);

151 
	`glVîãx3f
(-50.0f,50.0f,
bZ
);

154 
	`glN‹mÆ3f
(0.0f, -1.0f, 0.0f);

155 
	`glVîãx3f
(-50.0f, -50.0f, 
fZ
);

156 
	`glVîãx3f
(-50.0f, -50.0f, 
bZ
);

157 
	`glVîãx3f
(50.0f, -50.0f, 
bZ
);

158 
	`glVîãx3f
(50.0f, -50.0f, 
fZ
);

161 
	`glN‹mÆ3f
(1.0f, 0.0f, 0.0f);

162 
	`glVîãx3f
(50.0f, 50.0f, 
fZ
);

163 
	`glVîãx3f
(50.0f, -50.0f, 
fZ
);

164 
	`glVîãx3f
(50.0f, -50.0f, 
bZ
);

165 
	`glVîãx3f
(50.0f, 50.0f, 
bZ
);

168 
	`glN‹mÆ3f
(-1.0f, 0.0f, 0.0f);

169 
	`glVîãx3f
(-50.0f, 50.0f, 
fZ
);

170 
	`glVîãx3f
(-50.0f, 50.0f, 
bZ
);

171 
	`glVîãx3f
(-50.0f, -50.0f, 
bZ
);

172 
	`glVîãx3f
(-50.0f, -50.0f, 
fZ
);

173 
	`glEnd
();

175 
	`glFr⁄tFa˚
(
GL_CW
);

177 
	`glBegö
(
GL_QUADS
);

180 
	`glN‹mÆ3f
(0.0f, 0.0f, -1.0f);

183 
	`glVîãx3f
(-50.0f, 50.0f, 
bZ
);

184 
	`glVîãx3f
(-50.0f, -50.0f, 
bZ
);

185 
	`glVîãx3f
(-35.0f, -50.0f, 
bZ
);

186 
	`glVîãx3f
(-35.0f,50.0f,
bZ
);

189 
	`glVîãx3f
(50.0f, 50.0f, 
bZ
);

190 
	`glVîãx3f
(35.0f, 50.0f, 
bZ
);

191 
	`glVîãx3f
(35.0f, -50.0f, 
bZ
);

192 
	`glVîãx3f
(50.0f,-50.0f,
bZ
);

195 
	`glVîãx3f
(-35.0f, 50.0f, 
bZ
);

196 
	`glVîãx3f
(-35.0f, 35.0f, 
bZ
);

197 
	`glVîãx3f
(35.0f, 35.0f, 
bZ
);

198 
	`glVîãx3f
(35.0f, 50.0f,
bZ
);

201 
	`glVîãx3f
(-35.0f, -35.0f, 
bZ
);

202 
	`glVîãx3f
(-35.0f, -50.0f, 
bZ
);

203 
	`glVîãx3f
(35.0f, -50.0f, 
bZ
);

204 
	`glVîãx3f
(35.0f, -35.0f,
bZ
);

207 
	`glCﬁ‹3f
(0.75f, 0.75f, 0.75f);

210 
	`glN‹mÆ3f
(0.0f, 1.0f, 0.0f);

211 
	`glVîãx3f
(-35.0f, 35.0f, 
fZ
);

212 
	`glVîãx3f
(35.0f, 35.0f, 
fZ
);

213 
	`glVîãx3f
(35.0f, 35.0f, 
bZ
);

214 
	`glVîãx3f
(-35.0f,35.0f,
bZ
);

217 
	`glN‹mÆ3f
(0.0f, 1.0f, 0.0f);

218 
	`glVîãx3f
(-35.0f, -35.0f, 
fZ
);

219 
	`glVîãx3f
(-35.0f, -35.0f, 
bZ
);

220 
	`glVîãx3f
(35.0f, -35.0f, 
bZ
);

221 
	`glVîãx3f
(35.0f, -35.0f, 
fZ
);

224 
	`glN‹mÆ3f
(1.0f, 0.0f, 0.0f);

225 
	`glVîãx3f
(-35.0f, 35.0f, 
fZ
);

226 
	`glVîãx3f
(-35.0f, 35.0f, 
bZ
);

227 
	`glVîãx3f
(-35.0f, -35.0f, 
bZ
);

228 
	`glVîãx3f
(-35.0f, -35.0f, 
fZ
);

231 
	`glN‹mÆ3f
(-1.0f, 0.0f, 0.0f);

232 
	`glVîãx3f
(35.0f, 35.0f, 
fZ
);

233 
	`glVîãx3f
(35.0f, -35.0f, 
fZ
);

234 
	`glVîãx3f
(35.0f, -35.0f, 
bZ
);

235 
	`glVîãx3f
(35.0f, 35.0f, 
bZ
);

236 
	`glEnd
();

238 
	`glFr⁄tFa˚
(
GL_CCW
);

241 
	`glP›M©rix
();

244 
	`glutSw≠Buf„rs
();

245 
	}
}

249 
	$maö
(
¨gc
, *
¨gv
[])

251 
	`glutInô
(&
¨gc
, 
¨gv
);

252 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

253 
	`glutInôWödowSize
(800, 600);

254 
	`glutCª©eWödow
("Orthographic Projection");

255 
	`glutResh≠eFunc
(
Ch™geSize
);

256 
	`glutS≥cülFunc
(
S≥cülKeys
);

257 
	`glutDi•œyFunc
(
RídîS˚√
);

258 
	`SëupRC
();

259 
	`glutMaöLo›
();

262 
	}
}

	@chapt04/Perspect/perspect.cpp

5 
	~"../../sh¨ed/g…oﬁs.h
"

8 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

9 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

13 
	$Ch™geSize
(
w
, 
h
)

15 
GLÊﬂt
 
fA•e˘
;

18 if(
h
 == 0)

19 
h
 = 1;

22 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

24 
fA•e˘
 = (
GLÊﬂt
)
w
/(GLÊﬂt)
h
;

27 
	`glM©rixMode
(
GL_PROJECTION
);

28 
	`glLﬂdIdítôy
();

31 
	`gluPî•e˘ive
(60.0f, 
fA•e˘
, 1.0, 400.0);

33 
	`glM©rixMode
(
GL_MODELVIEW
);

34 
	`glLﬂdIdítôy
();

35 
	}
}

41 
	$SëupRC
()

44 
GLÊﬂt
 
whôeLight
[] = { 0.45f, 0.45f, 0.45f, 1.0f };

45 
GLÊﬂt
 
sour˚Light
[] = { 0.25f, 0.25f, 0.25f, 1.0f };

46 
GLÊﬂt
 
lightPos
[] = { -50.f, 25.0f, 250.0f, 0.0f };

48 
	`glE«bÀ
(
GL_DEPTH_TEST
);

49 
	`glFr⁄tFa˚
(
GL_CCW
);

50 
	`glE«bÀ
(
GL_CULL_FACE
);

53 
	`glE«bÀ
(
GL_LIGHTING
);

56 
	`glLightModñfv
(
GL_LIGHT_MODEL_AMBIENT
,
whôeLight
);

57 
	`glLightfv
(
GL_LIGHT0
,
GL_AMBIENT
,
sour˚Light
);

58 
	`glLightfv
(
GL_LIGHT0
,
GL_DIFFUSE
,
sour˚Light
);

59 
	`glLightfv
(
GL_LIGHT0
,
GL_POSITION
,
lightPos
);

60 
	`glE«bÀ
(
GL_LIGHT0
);

63 
	`glE«bÀ
(
GL_COLOR_MATERIAL
);

66 
	`glCﬁ‹M©îül
(
GL_FRONT
, 
GL_AMBIENT_AND_DIFFUSE
);

69 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f );

70 
	}
}

73 
	$S≥cülKeys
(
key
, 
x
, 
y
)

75 if(
key
 =
GLUT_KEY_UP
)

76 
xRŸ
-= 5.0f;

78 if(
key
 =
GLUT_KEY_DOWN
)

79 
xRŸ
 += 5.0f;

81 if(
key
 =
GLUT_KEY_LEFT
)

82 
yRŸ
 -= 5.0f;

84 if(
key
 =
GLUT_KEY_RIGHT
)

85 
yRŸ
 += 5.0f;

87 
xRŸ
 = (
GLÊﬂt
)((const )xRot % 360);

88 
yRŸ
 = (
GLÊﬂt
)((const )yRot % 360);

91 
	`glutPo°Redi•œy
();

92 
	}
}

96 
	$RídîS˚√
()

98 
fZ
,
bZ
;

101 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
 | 
GL_DEPTH_BUFFER_BIT
);

103 
fZ
 = 100.0f;

104 
bZ
 = -100.0f;

107 
	`glPushM©rix
();

108 
	`glTøn¶©ef
(0.0f, 0.0f, -300.0f);

109 
	`glRŸ©ef
(
xRŸ
, 1.0f, 0.0f, 0.0f);

110 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

113 
	`glCﬁ‹3f
(1.0f, 0.0f, 0.0f);

116 
	`glBegö
(
GL_QUADS
);

118 
	`glN‹mÆ3f
(0.0f, 0.0f, 1.0f);

121 
	`glVîãx3f
(-50.0f, 50.0f, 
fZ
);

122 
	`glVîãx3f
(-50.0f, -50.0f, 
fZ
);

123 
	`glVîãx3f
(-35.0f, -50.0f, 
fZ
);

124 
	`glVîãx3f
(-35.0f,50.0f,
fZ
);

127 
	`glVîãx3f
(50.0f, 50.0f, 
fZ
);

128 
	`glVîãx3f
(35.0f, 50.0f, 
fZ
);

129 
	`glVîãx3f
(35.0f, -50.0f, 
fZ
);

130 
	`glVîãx3f
(50.0f,-50.0f,
fZ
);

133 
	`glVîãx3f
(-35.0f, 50.0f, 
fZ
);

134 
	`glVîãx3f
(-35.0f, 35.0f, 
fZ
);

135 
	`glVîãx3f
(35.0f, 35.0f, 
fZ
);

136 
	`glVîãx3f
(35.0f, 50.0f,
fZ
);

139 
	`glVîãx3f
(-35.0f, -35.0f, 
fZ
);

140 
	`glVîãx3f
(-35.0f, -50.0f, 
fZ
);

141 
	`glVîãx3f
(35.0f, -50.0f, 
fZ
);

142 
	`glVîãx3f
(35.0f, -35.0f,
fZ
);

146 
	`glN‹mÆ3f
(0.0f, 1.0f, 0.0f);

147 
	`glVîãx3f
(-50.0f, 50.0f, 
fZ
);

148 
	`glVîãx3f
(50.0f, 50.0f, 
fZ
);

149 
	`glVîãx3f
(50.0f, 50.0f, 
bZ
);

150 
	`glVîãx3f
(-50.0f,50.0f,
bZ
);

153 
	`glN‹mÆ3f
(0.0f, -1.0f, 0.0f);

154 
	`glVîãx3f
(-50.0f, -50.0f, 
fZ
);

155 
	`glVîãx3f
(-50.0f, -50.0f, 
bZ
);

156 
	`glVîãx3f
(50.0f, -50.0f, 
bZ
);

157 
	`glVîãx3f
(50.0f, -50.0f, 
fZ
);

160 
	`glN‹mÆ3f
(1.0f, 0.0f, 0.0f);

161 
	`glVîãx3f
(50.0f, 50.0f, 
fZ
);

162 
	`glVîãx3f
(50.0f, -50.0f, 
fZ
);

163 
	`glVîãx3f
(50.0f, -50.0f, 
bZ
);

164 
	`glVîãx3f
(50.0f, 50.0f, 
bZ
);

167 
	`glN‹mÆ3f
(-1.0f, 0.0f, 0.0f);

168 
	`glVîãx3f
(-50.0f, 50.0f, 
fZ
);

169 
	`glVîãx3f
(-50.0f, 50.0f, 
bZ
);

170 
	`glVîãx3f
(-50.0f, -50.0f, 
bZ
);

171 
	`glVîãx3f
(-50.0f, -50.0f, 
fZ
);

172 
	`glEnd
();

174 
	`glFr⁄tFa˚
(
GL_CW
);

176 
	`glBegö
(
GL_QUADS
);

179 
	`glN‹mÆ3f
(0.0f, 0.0f, -1.0f);

182 
	`glVîãx3f
(-50.0f, 50.0f, 
bZ
);

183 
	`glVîãx3f
(-50.0f, -50.0f, 
bZ
);

184 
	`glVîãx3f
(-35.0f, -50.0f, 
bZ
);

185 
	`glVîãx3f
(-35.0f,50.0f,
bZ
);

188 
	`glVîãx3f
(50.0f, 50.0f, 
bZ
);

189 
	`glVîãx3f
(35.0f, 50.0f, 
bZ
);

190 
	`glVîãx3f
(35.0f, -50.0f, 
bZ
);

191 
	`glVîãx3f
(50.0f,-50.0f,
bZ
);

194 
	`glVîãx3f
(-35.0f, 50.0f, 
bZ
);

195 
	`glVîãx3f
(-35.0f, 35.0f, 
bZ
);

196 
	`glVîãx3f
(35.0f, 35.0f, 
bZ
);

197 
	`glVîãx3f
(35.0f, 50.0f,
bZ
);

200 
	`glVîãx3f
(-35.0f, -35.0f, 
bZ
);

201 
	`glVîãx3f
(-35.0f, -50.0f, 
bZ
);

202 
	`glVîãx3f
(35.0f, -50.0f, 
bZ
);

203 
	`glVîãx3f
(35.0f, -35.0f,
bZ
);

206 
	`glCﬁ‹3f
(0.75f, 0.75f, 0.75f);

209 
	`glN‹mÆ3f
(0.0f, 1.0f, 0.0f);

210 
	`glVîãx3f
(-35.0f, 35.0f, 
fZ
);

211 
	`glVîãx3f
(35.0f, 35.0f, 
fZ
);

212 
	`glVîãx3f
(35.0f, 35.0f, 
bZ
);

213 
	`glVîãx3f
(-35.0f,35.0f,
bZ
);

216 
	`glN‹mÆ3f
(0.0f, 1.0f, 0.0f);

217 
	`glVîãx3f
(-35.0f, -35.0f, 
fZ
);

218 
	`glVîãx3f
(-35.0f, -35.0f, 
bZ
);

219 
	`glVîãx3f
(35.0f, -35.0f, 
bZ
);

220 
	`glVîãx3f
(35.0f, -35.0f, 
fZ
);

223 
	`glN‹mÆ3f
(1.0f, 0.0f, 0.0f);

224 
	`glVîãx3f
(-35.0f, 35.0f, 
fZ
);

225 
	`glVîãx3f
(-35.0f, 35.0f, 
bZ
);

226 
	`glVîãx3f
(-35.0f, -35.0f, 
bZ
);

227 
	`glVîãx3f
(-35.0f, -35.0f, 
fZ
);

230 
	`glN‹mÆ3f
(-1.0f, 0.0f, 0.0f);

231 
	`glVîãx3f
(35.0f, 35.0f, 
fZ
);

232 
	`glVîãx3f
(35.0f, -35.0f, 
fZ
);

233 
	`glVîãx3f
(35.0f, -35.0f, 
bZ
);

234 
	`glVîãx3f
(35.0f, 35.0f, 
bZ
);

235 
	`glEnd
();

237 
	`glFr⁄tFa˚
(
GL_CCW
);

240 
	`glP›M©rix
();

243 
	`glutSw≠Buf„rs
();

244 
	}
}

248 
	$maö
(
¨gc
, *
¨gv
[])

250 
	`glutInô
(&
¨gc
, 
¨gv
);

251 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

252 
	`glutInôWödowSize
(800, 600);

253 
	`glutCª©eWödow
("Perspective Projection");

254 
	`glutResh≠eFunc
(
Ch™geSize
);

255 
	`glutS≥cülFunc
(
S≥cülKeys
);

256 
	`glutDi•œyFunc
(
RídîS˚√
);

257 
	`SëupRC
();

258 
	`glutMaöLo›
();

261 
	}
}

	@chapt04/Solar/solar.cpp

7 
	~"../../sh¨ed/g…oﬁs.h
"

8 
	~<m©h.h
>

11 
GLÊﬂt
 
	gwhôeLight
[] = { 0.2f, 0.2f, 0.2f, 1.0f };

12 
GLÊﬂt
 
	gsour˚Light
[] = { 0.8f, 0.8f, 0.8f, 1.0f };

13 
GLÊﬂt
 
	glightPos
[] = { 0.0f, 0.0f, 0.0f, 1.0f };

17 
	$RídîS˚√
()

20 
fMo⁄RŸ
 = 0.0f;

21 
fE¨thRŸ
 = 0.0f;

24 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
 | 
GL_DEPTH_BUFFER_BIT
);

27 
	`glM©rixMode
(
GL_MODELVIEW
);

28 
	`glPushM©rix
();

31 
	`glTøn¶©ef
(0.0f, 0.0f, -300.0f);

35 
	`glDißbÀ
(
GL_LIGHTING
);

36 
	`glCﬁ‹3ub
(255, 255, 0);

37 
	`glutSﬁidSphîe
(15.0f, 30, 17);

38 
	`glE«bÀ
(
GL_LIGHTING
);

41 
	`glLightfv
(
GL_LIGHT0
,
GL_POSITION
,
lightPos
);

44 
	`glRŸ©ef
(
fE¨thRŸ
, 0.0f, 1.0f, 0.0f);

47 
	`glCﬁ‹3ub
(0,0,255);

48 
	`glTøn¶©ef
(105.0f,0.0f,0.0f);

49 
	`glutSﬁidSphîe
(15.0f, 30, 17);

53 
	`glCﬁ‹3ub
(200,200,200);

54 
	`glRŸ©ef
(
fMo⁄RŸ
,0.0f, 1.0f, 0.0f);

55 
	`glTøn¶©ef
(30.0f, 0.0f, 0.0f);

56 
fMo⁄RŸ
+= 15.0f;

57 if(
fMo⁄RŸ
 > 360.0f)

58 
fMo⁄RŸ
 = 0.0f;

60 
	`glutSﬁidSphîe
(6.0f, 30, 17);

63 
	`glP›M©rix
();

67 
fE¨thRŸ
 += 5.0f;

68 if(
fE¨thRŸ
 > 360.0f)

69 
fE¨thRŸ
 = 0.0f;

72 
	`glutSw≠Buf„rs
();

73 
	}
}

78 
	$SëupRC
()

81 
	`glE«bÀ
(
GL_DEPTH_TEST
);

82 
	`glFr⁄tFa˚
(
GL_CCW
);

83 
	`glE«bÀ
(
GL_CULL_FACE
);

86 
	`glE«bÀ
(
GL_LIGHTING
);

89 
	`glLightModñfv
(
GL_LIGHT_MODEL_AMBIENT
,
whôeLight
);

90 
	`glLightfv
(
GL_LIGHT0
,
GL_DIFFUSE
,
sour˚Light
);

91 
	`glLightfv
(
GL_LIGHT0
,
GL_POSITION
,
lightPos
);

92 
	`glE«bÀ
(
GL_LIGHT0
);

95 
	`glE«bÀ
(
GL_COLOR_MATERIAL
);

98 
	`glCﬁ‹M©îül
(
GL_FRONT
, 
GL_AMBIENT_AND_DIFFUSE
);

101 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f );

102 
	}
}

105 
	$TimîFunc
(
vÆue
)

107 
	`glutPo°Redi•œy
();

108 
	`glutTimîFunc
(100, 
TimîFunc
, 1);

109 
	}
}

111 
	$Ch™geSize
(
w
, 
h
)

113 
GLÊﬂt
 
fA•e˘
;

116 if(
h
 == 0)

117 
h
 = 1;

120 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

123 
fA•e˘
 = (
GLÊﬂt
)
w
/(GLÊﬂt)
h
;

126 
	`glM©rixMode
(
GL_PROJECTION
);

127 
	`glLﬂdIdítôy
();

132 
	`gluPî•e˘ive
(20.0f, 
fA•e˘
, 1.0f, 900.0f);

135 
	`glM©rixMode
(
GL_MODELVIEW
);

136 
	`glLﬂdIdítôy
();

137 
	}
}

140 
	$maö
(
¨gc
, * 
¨gv
[])

142 
	`glutInô
(&
¨gc
, 
¨gv
);

143 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

144 
	`glutInôWödowSize
(800, 600);

145 
	`glutCª©eWödow
("Earth/Moon/Sun System");

146 
	`glutResh≠eFunc
(
Ch™geSize
);

147 
	`glutDi•œyFunc
(
RídîS˚√
);

148 
	`glutTimîFunc
(250, 
TimîFunc
, 1);

149 
	`SëupRC
();

150 
	`glutMaöLo›
();

153 
	}
}

	@chapt04/SphereWorld/sphereworld.cpp

7 
	~"../../sh¨ed/g…oﬁs.h
"

8 
	~"../../sh¨ed/glFøme.h
"

9 
	~<m©h.h
>

12 
	#NUM_SPHERES
 50

	)

13 
GLFøme
 
	g•hîes
[
NUM_SPHERES
];

14 
GLFøme
 
	g‰ameCamîa
;

18 
	$g…DøwT‹us
(
GLÊﬂt
 
maj‹Radius
, GLÊﬂà
mö‹Radius
, 
GLöt
 
numMaj‹
, GLöà
numMö‹
)

20 
M3DVe˘‹3f
 
vN‹mÆ
;

21 
maj‹Sãp
 = 2.0f*
M3D_PI
 / 
numMaj‹
;

22 
mö‹Sãp
 = 2.0f*
M3D_PI
 / 
numMö‹
;

23 
i
, 
j
;

25 
i
=0; i<
numMaj‹
; ++i)

27 
a0
 = 
i
 * 
maj‹Sãp
;

28 
a1
 = 
a0
 + 
maj‹Sãp
;

29 
GLÊﬂt
 
x0
 = (GLÊﬂtË
	`cos
(
a0
);

30 
GLÊﬂt
 
y0
 = (GLÊﬂtË
	`sö
(
a0
);

31 
GLÊﬂt
 
x1
 = (GLÊﬂtË
	`cos
(
a1
);

32 
GLÊﬂt
 
y1
 = (GLÊﬂtË
	`sö
(
a1
);

34 
	`glBegö
(
GL_TRIANGLE_STRIP
);

35 
j
=0; j<=
numMö‹
; ++j)

37 
b
 = 
j
 * 
mö‹Sãp
;

38 
GLÊﬂt
 
c
 = (GLÊﬂtË
	`cos
(
b
);

39 
GLÊﬂt
 
r
 = 
mö‹Radius
 * 
c
 + 
maj‹Radius
;

40 
GLÊﬂt
 
z
 = 
mö‹Radius
 * (GLÊﬂtË
	`sö
(
b
);

43 
	`glTexCo‹d2f
(()(
i
)/()(
numMaj‹
), ()(
j
)/()(
numMö‹
));

44 
vN‹mÆ
[0] = 
x0
*
c
;

45 
vN‹mÆ
[1] = 
y0
*
c
;

46 
vN‹mÆ
[2] = 
z
/
mö‹Radius
;

47 
	`m3dN‹mÆizeVe˘‹
(
vN‹mÆ
);

48 
	`glN‹mÆ3fv
(
vN‹mÆ
);

49 
	`glVîãx3f
(
x0
*
r
, 
y0
*r, 
z
);

51 
	`glTexCo‹d2f
(()(
i
+1)/()(
numMaj‹
), ()(
j
)/()(
numMö‹
));

52 
vN‹mÆ
[0] = 
x1
*
c
;

53 
vN‹mÆ
[1] = 
y1
*
c
;

54 
vN‹mÆ
[2] = 
z
/
mö‹Radius
;

55 
	`m3dN‹mÆizeVe˘‹
(
vN‹mÆ
);

56 
	`glN‹mÆ3fv
(
vN‹mÆ
);

57 
	`glVîãx3f
(
x1
*
r
, 
y1
*r, 
z
);

59 
	`glEnd
();

61 
	}
}

67 
	$SëupRC
()

69 
iSphîe
;

72 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, .50f, 1.0f );

75 
	`glPﬁyg⁄Mode
(
GL_FRONT_AND_BACK
, 
GL_LINE
);

78 
iSphîe
 = 0; iSphîê< 
NUM_SPHERES
; iSphere++)

81 
x
 = (()((
	`ønd
() % 400) - 200) * 0.1f);

82 
z
 = ()((
	`ønd
() % 400) - 200) * 0.1f;

83 
•hîes
[
iSphîe
].
	`SëOrigö
(
x
, 0.0f, 
z
);

85 
	}
}

90 
	$DøwGround
()

92 
GLÊﬂt
 
fExã¡
 = 20.0f;

93 
GLÊﬂt
 
fSãp
 = 1.0f;

94 
GLÊﬂt
 
y
 = -0.4f;

95 
GLöt
 
iLöe
;

97 
	`glBegö
(
GL_LINES
);

99 
iLöe
 = -
fExã¡
; iLöê<fExã¡; iLöê+
fSãp
)

101 
	`glVîãx3f
(
iLöe
, 
y
, 
fExã¡
);

102 
	`glVîãx3f
(
iLöe
, 
y
, -
fExã¡
);

104 
	`glVîãx3f
(
fExã¡
, 
y
, 
iLöe
);

105 
	`glVîãx3f
(-
fExã¡
, 
y
, 
iLöe
);

107 
	`glEnd
();

108 
	}
}

112 
	$RídîS˚√
()

114 
i
;

115 
GLÊﬂt
 
yRŸ
 = 0.0f;

116 
yRŸ
 += 0.5f;

119 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
 | 
GL_DEPTH_BUFFER_BIT
);

121 
	`glPushM©rix
();

122 
‰ameCamîa
.
	`AµlyCamîaTønsf‹m
();

125 
	`DøwGround
();

128 
i
 = 0; i < 
NUM_SPHERES
; i++)

130 
	`glPushM©rix
();

131 
•hîes
[
i
].
	`AµlyA˘‹Tønsf‹m
();

132 
	`glutSﬁidSphîe
(0.1f, 13, 26);

133 
	`glP›M©rix
();

136 
	`glPushM©rix
();

137 
	`glTøn¶©ef
(0.0f, 0.0f, -2.5f);

139 
	`glPushM©rix
();

140 
	`glRŸ©ef
(-
yRŸ
 * 2.0f, 0.0f, 1.0f, 0.0f);

141 
	`glTøn¶©ef
(1.0f, 0.0f, 0.0f);

142 
	`glutSﬁidSphîe
(0.1f, 13, 26);

143 
	`glP›M©rix
();

145 
	`glRŸ©ef
(
yRŸ
, 0.0f, 1.0f, 0.0f);

146 
	`g…DøwT‹us
(0.35, 0.15, 40, 20);

147 
	`glP›M©rix
();

148 
	`glP›M©rix
();

151 
	`glutSw≠Buf„rs
();

152 
	}
}

157 
	$S≥cülKeys
(
key
, 
x
, 
y
)

159 if(
key
 =
GLUT_KEY_UP
)

160 
‰ameCamîa
.
	`MoveF‹w¨d
(0.1f);

162 if(
key
 =
GLUT_KEY_DOWN
)

163 
‰ameCamîa
.
	`MoveF‹w¨d
(-0.1f);

165 if(
key
 =
GLUT_KEY_LEFT
)

166 
‰ameCamîa
.
	`RŸ©eLoˇlY
(0.1f);

168 if(
key
 =
GLUT_KEY_RIGHT
)

169 
‰ameCamîa
.
	`RŸ©eLoˇlY
(-0.1f);

172 
	`glutPo°Redi•œy
();

173 
	}
}

179 
	$TimîFun˘i⁄
(
vÆue
)

182 
	`glutPo°Redi•œy
();

183 
	`glutTimîFunc
(3,
TimîFun˘i⁄
, 1);

184 
	}
}

186 
	$Ch™geSize
(
w
, 
h
)

188 
GLÊﬂt
 
fA•e˘
;

192 if(
h
 == 0)

193 
h
 = 1;

195 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

197 
fA•e˘
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

200 
	`glM©rixMode
(
GL_PROJECTION
);

201 
	`glLﬂdIdítôy
();

204 
	`gluPî•e˘ive
(35.0f, 
fA•e˘
, 1.0f, 50.0f);

206 
	`glM©rixMode
(
GL_MODELVIEW
);

207 
	`glLﬂdIdítôy
();

208 
	}
}

210 
	$maö
(
¨gc
, * 
¨gv
[])

212 
	`glutInô
(&
¨gc
, 
¨gv
);

213 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

214 
	`glutInôWödowSize
(800,600);

215 
	`glutCª©eWödow
("OpenGL SphereWorld Demo");

216 
	`glutResh≠eFunc
(
Ch™geSize
);

217 
	`glutDi•œyFunc
(
RídîS˚√
);

218 
	`glutS≥cülFunc
(
S≥cülKeys
);

220 
	`SëupRC
();

221 
	`glutTimîFunc
(33, 
TimîFun˘i⁄
, 1);

223 
	`glutMaöLo›
();

226 
	}
}

	@chapt04/Transform/transform.cpp

6 
	~"../../sh¨ed/g…oﬁs.h
"

7 
	~"../../sh¨ed/m©h3d.h
"

8 
	~<m©h.h
>

12 
	$DøwT‹us
(
M3DM©rix44f
 
mTønsf‹m
)

14 
GLÊﬂt
 
maj‹Radius
 = 0.35f;

15 
GLÊﬂt
 
mö‹Radius
 = 0.15f;

16 
GLöt
 
numMaj‹
 = 40;

17 
GLöt
 
numMö‹
 = 20;

18 
M3DVe˘‹3f
 
obje˘Vîãx
;

19 
M3DVe˘‹3f
 
å™sf‹medVîãx
;

20 
maj‹Sãp
 = 2.0f*
M3D_PI
 / 
numMaj‹
;

21 
mö‹Sãp
 = 2.0f*
M3D_PI
 / 
numMö‹
;

22 
i
, 
j
;

24 
i
=0; i<
numMaj‹
; ++i)

26 
a0
 = 
i
 * 
maj‹Sãp
;

27 
a1
 = 
a0
 + 
maj‹Sãp
;

28 
GLÊﬂt
 
x0
 = (GLÊﬂtË
	`cos
(
a0
);

29 
GLÊﬂt
 
y0
 = (GLÊﬂtË
	`sö
(
a0
);

30 
GLÊﬂt
 
x1
 = (GLÊﬂtË
	`cos
(
a1
);

31 
GLÊﬂt
 
y1
 = (GLÊﬂtË
	`sö
(
a1
);

33 
	`glBegö
(
GL_TRIANGLE_STRIP
);

34 
j
=0; j<=
numMö‹
; ++j)

36 
b
 = 
j
 * 
mö‹Sãp
;

37 
GLÊﬂt
 
c
 = (GLÊﬂtË
	`cos
(
b
);

38 
GLÊﬂt
 
r
 = 
mö‹Radius
 * 
c
 + 
maj‹Radius
;

39 
GLÊﬂt
 
z
 = 
mö‹Radius
 * (GLÊﬂtË
	`sö
(
b
);

42 
obje˘Vîãx
[0] = 
x0
*
r
;

43 
obje˘Vîãx
[1] = 
y0
*
r
;

44 
obje˘Vîãx
[2] = 
z
;

45 
	`m3dTønsf‹mVe˘‹3
(
å™sf‹medVîãx
, 
obje˘Vîãx
, 
mTønsf‹m
);

46 
	`glVîãx3fv
(
å™sf‹medVîãx
);

49 
obje˘Vîãx
[0] = 
x1
*
r
;

50 
obje˘Vîãx
[1] = 
y1
*
r
;

51 
obje˘Vîãx
[2] = 
z
;

52 
	`m3dTønsf‹mVe˘‹3
(
å™sf‹medVîãx
, 
obje˘Vîãx
, 
mTønsf‹m
);

53 
	`glVîãx3fv
(
å™sf‹medVîãx
);

55 
	`glEnd
();

57 
	}
}

61 
	$RídîS˚√
()

63 
M3DM©rix44f
 
å™sf‹m©i⁄M©rix
;

64 
GLÊﬂt
 
yRŸ
 = 0.0f;

65 
yRŸ
 += 0.5f;

68 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
 | 
GL_DEPTH_BUFFER_BIT
);

71 
	`m3dRŸ©i⁄M©rix44
(
å™sf‹m©i⁄M©rix
, 
	`m3dDegToRad
(
yRŸ
), 0.0f, 1.0f, 0.0f);

72 
å™sf‹m©i⁄M©rix
[12] = 0.0f;

73 
å™sf‹m©i⁄M©rix
[13] = 0.5f;

74 
å™sf‹m©i⁄M©rix
[14] = -2.5f;

76 
	`DøwT‹us
(
å™sf‹m©i⁄M©rix
);

79 
	`glutSw≠Buf„rs
();

80 
	}
}

84 
	$SëupRC
()

87 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, .50f, 1.0f );

90 
	`glPﬁyg⁄Mode
(
GL_FRONT_AND_BACK
, 
GL_LINE
);

91 
	}
}

96 
	$TimîFun˘i⁄
(
vÆue
)

99 
	`glutPo°Redi•œy
();

100 
	`glutTimîFunc
(33,
TimîFun˘i⁄
, 1);

101 
	}
}

105 
	$Ch™geSize
(
w
, 
h
)

107 
GLÊﬂt
 
fA•e˘
;

111 if(
h
 == 0)

112 
h
 = 1;

114 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

116 
fA•e˘
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

119 
	`glM©rixMode
(
GL_PROJECTION
);

120 
	`glLﬂdIdítôy
();

123 
	`gluPî•e˘ive
(35.0f, 
fA•e˘
, 1.0f, 500.0f);

125 
	`glM©rixMode
(
GL_MODELVIEW
);

126 
	`glLﬂdIdítôy
();

127 
	}
}

129 
	$maö
(
¨gc
, * 
¨gv
[])

131 
	`glutInô
(&
¨gc
, 
¨gv
);

132 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

133 
	`glutInôWödowSize
(800,600);

134 
	`glutCª©eWödow
("Manual Transformations Demo");

135 
	`glutResh≠eFunc
(
Ch™geSize
);

136 
	`glutDi•œyFunc
(
RídîS˚√
);

138 
	`SëupRC
();

139 
	`glutTimîFunc
(33, 
TimîFun˘i⁄
, 1);

141 
	`glutMaöLo›
();

144 
	}
}

	@chapt04/Transformgl/transformgl.cpp

6 
	~"../../sh¨ed/g…oﬁs.h
"

7 
	~"../../sh¨ed/m©h3d.h
"

8 
	~<m©h.h
>

13 
	$RídîS˚√
()

15 
M3DM©rix44f
 
rŸ©i⁄M©rix
, 
å™¶©i⁄M©rix
, 
å™sf‹m©i⁄M©rix
;

17 
GLÊﬂt
 
yRŸ
 = 0.0f;

18 
yRŸ
 += 0.5f;

21 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
 | 
GL_DEPTH_BUFFER_BIT
);

24 
	`m3dRŸ©i⁄M©rix44
(
å™sf‹m©i⁄M©rix
, 
	`m3dDegToRad
(
yRŸ
), 0.0f, 1.0f, 0.0f);

25 
å™sf‹m©i⁄M©rix
[12] = 0.0f;

26 
å™sf‹m©i⁄M©rix
[13] = 0.0f;

27 
å™sf‹m©i⁄M©rix
[14] = -2.5f;

29 
	`glLﬂdM©rixf
(
å™sf‹m©i⁄M©rix
);

31 
	`g…DøwT‹us
(0.35f, 0.15f, 40, 20);

34 
	`glutSw≠Buf„rs
();

35 
	}
}

39 
	$SëupRC
()

42 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, .50f, 1.0f );

45 
	`glPﬁyg⁄Mode
(
GL_FRONT_AND_BACK
, 
GL_LINE
);

46 
	}
}

51 
	$TimîFun˘i⁄
(
vÆue
)

54 
	`glutPo°Redi•œy
();

55 
	`glutTimîFunc
(33,
TimîFun˘i⁄
, 1);

56 
	}
}

60 
	$Ch™geSize
(
w
, 
h
)

62 
GLÊﬂt
 
fA•e˘
;

66 if(
h
 == 0)

67 
h
 = 1;

69 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

71 
fA•e˘
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

74 
	`glM©rixMode
(
GL_PROJECTION
);

75 
	`glLﬂdIdítôy
();

78 
	`gluPî•e˘ive
(35.0f, 
fA•e˘
, 1.0f, 50.0f);

80 
	`glM©rixMode
(
GL_MODELVIEW
);

81 
	`glLﬂdIdítôy
();

82 
	}
}

84 
	$maö
(
¨gc
, * 
¨gv
[])

86 
	`glutInô
(&
¨gc
, 
¨gv
);

87 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

88 
	`glutInôWödowSize
(800,600);

89 
	`glutCª©eWödow
("OpenGL Transformations Demo");

90 
	`glutResh≠eFunc
(
Ch™geSize
);

91 
	`glutDi•œyFunc
(
RídîS˚√
);

93 
	`SëupRC
();

94 
	`glutTimîFunc
(33, 
TimîFun˘i⁄
, 1);

96 
	`glutMaöLo›
();

99 
	}
}

	@helloGL/helloGL.cpp

1 
	~<GL/glut.h
>

3 
	~<°dlib.h
>

4 
	~<°dio.h
>

8 
	$SëupRC
()

10 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 1.0f, 1.0f);

11 
	}
}

15 
	$RídîS˚√
()

18 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

24 
	`glCﬁ‹3f
(1.0, 0.0, 0.0);

26 
	`glRe˘f
(-0.25, 0.25, 0.25, -0.25);

30 
	`glFlush
();

31 
	}
}

34 
	$Ch™geSize
(
w
, 
h
)

36 
GLÊﬂt
 
a•e˘R©io
;

39 if(
h
 == 0)

40 
h
 = 1;

43 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

46 
	`glM©rixMode
(
GL_PROJECTION
);

47 
	`glLﬂdIdítôy
();

50 
a•e˘R©io
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

51 i‡(
w
 <
h
)

52 
	`glOπho
 (-100.0, 100.0, -100 / 
a•e˘R©io
, 100.0 /áspectRatio, 1.0, -1.0);

54 
	`glOπho
 (-100.0 * 
a•e˘R©io
, 100.0 *áspectRatio, -100.0, 100.0, 1.0, -1.0);

56 
	`glM©rixMode
(
GL_MODELVIEW
);

57 
	`glLﬂdIdítôy
();

58 
	}
}

62 
	$maö
(
¨gc
, * 
¨gv
[])

65 
	`glutInô
(&
¨gc
, 
¨gv
);

70 
	`glutInôDi•œyMode
(
GLUT_SINGLE
 | 
GLUT_RGBA
);

73 
	`glutCª©eWödow
("Simple");

76 
	`glutDi•œyFunc
(
RídîS˚√
);

77 
	`glutResh≠eFunc
(
Ch™geSize
);

79 
	`SëupRC
();

81 c⁄° * 
ext
 = (c⁄° *)
	`glGëSåög
(
GL_EXTENSIONS
);

82 
	`¥ötf
("%s\n", 
ext
);

85 
	`glutMaöLo›
();

87 
	}
}

	@include/GL/freeglut.h

1 #i‚de‡ 
__FREEGLUT_H__


2 
	#__FREEGLUT_H__


	)

17 
	~"‰ìglut_°d.h
"

18 
	~"‰ìglut_ext.h
"

	@include/GL/freeglut_ext.h

1 #i‚de‡ 
__FREEGLUT_EXT_H__


2 
	#__FREEGLUT_EXT_H__


	)

31 #ifde‡
__˝lu•lus


38 
	#GLUT_KEY_NUM_LOCK
 0x006D

	)

39 
	#GLUT_KEY_BEGIN
 0x006E

	)

40 
	#GLUT_KEY_DELETE
 0x006F

	)

45 
	#GLUT_ACTION_EXIT
 0

	)

46 
	#GLUT_ACTION_GLUTMAINLOOP_RETURNS
 1

	)

47 
	#GLUT_ACTION_CONTINUE_EXECUTION
 2

	)

52 
	#GLUT_CREATE_NEW_CONTEXT
 0

	)

53 
	#GLUT_USE_CURRENT_CONTEXT
 1

	)

58 
	#GLUT_FORCE_INDIRECT_CONTEXT
 0

	)

59 
	#GLUT_ALLOW_DIRECT_CONTEXT
 1

	)

60 
	#GLUT_TRY_DIRECT_CONTEXT
 2

	)

61 
	#GLUT_FORCE_DIRECT_CONTEXT
 3

	)

66 
	#GLUT_INIT_STATE
 0x007C

	)

68 
	#GLUT_ACTION_ON_WINDOW_CLOSE
 0x01F9

	)

70 
	#GLUT_WINDOW_BORDER_WIDTH
 0x01FA

	)

71 
	#GLUT_WINDOW_HEADER_HEIGHT
 0x01FB

	)

73 
	#GLUT_VERSION
 0x01FC

	)

75 
	#GLUT_RENDERING_CONTEXT
 0x01FD

	)

76 
	#GLUT_DIRECT_RENDERING
 0x01FE

	)

78 
	#GLUT_FULL_SCREEN
 0x01FF

	)

85 
	#GLUT_AUX
 0x1000

	)

87 
	#GLUT_AUX1
 0x1000

	)

88 
	#GLUT_AUX2
 0x2000

	)

89 
	#GLUT_AUX3
 0x4000

	)

90 
	#GLUT_AUX4
 0x8000

	)

95 
	#GLUT_INIT_MAJOR_VERSION
 0x0200

	)

96 
	#GLUT_INIT_MINOR_VERSION
 0x0201

	)

97 
	#GLUT_INIT_FLAGS
 0x0202

	)

98 
	#GLUT_INIT_PROFILE
 0x0203

	)

103 
	#GLUT_DEBUG
 0x0001

	)

104 
	#GLUT_FORWARD_COMPATIBLE
 0x0002

	)

110 
	#GLUT_CORE_PROFILE
 0x0001

	)

111 
	#GLUT_COMPATIBILITY_PROFILE
 0x0002

	)

116 
FGAPI
 
FGAPIENTRY
 
glutMaöLo›Evít
( );

117 
FGAPI
 
FGAPIENTRY
 
glutLóveMaöLo›
( );

118 
FGAPI
 
FGAPIENTRY
 
glutExô
 ( );

123 
FGAPI
 
FGAPIENTRY
 
glutFuŒS¸ìnToggÀ
( );

128 
FGAPI
 
FGAPIENTRY
 
glutMou£WhìlFunc
–(* 
ˇŒback
)( , , , ) );

129 
FGAPI
 
FGAPIENTRY
 
glutClo£Func
–(* 
ˇŒback
)( ) );

130 
FGAPI
 
FGAPIENTRY
 
glutWMClo£Func
–(* 
ˇŒback
)( ) );

132 
FGAPI
 
FGAPIENTRY
 
glutMíuDe°royFunc
–(* 
ˇŒback
)( ) );

137 
FGAPI
 
FGAPIENTRY
 
glutSëO±i⁄
 ( 
GLíum
 
›ti⁄_Êag
, 
vÆue
 );

138 
FGAPI
 * 
FGAPIENTRY
 
glutGëModeVÆues
(
GLíum
 
mode
, * 
size
);

140 
FGAPI
 * 
FGAPIENTRY
 
glutGëWödowD©a
( );

141 
FGAPI
 
FGAPIENTRY
 
glutSëWödowD©a
(* 
d©a
);

142 
FGAPI
 * 
FGAPIENTRY
 
glutGëMíuD©a
( );

143 
FGAPI
 
FGAPIENTRY
 
glutSëMíuD©a
(* 
d©a
);

148 
FGAPI
 
FGAPIENTRY
 
glutBôm≠Height
–* 
f⁄t
 );

149 
FGAPI
 
GLÊﬂt
 
FGAPIENTRY
 
glutSåokeHeight
–* 
f⁄t
 );

150 
FGAPI
 
FGAPIENTRY
 
glutBôm≠Såög
–* 
f⁄t
, c⁄° *
°rög
 );

151 
FGAPI
 
FGAPIENTRY
 
glutSåokeSåög
–* 
f⁄t
, c⁄° *
°rög
 );

156 
FGAPI
 
FGAPIENTRY
 
glutWúeRhombicDodeˇhedr⁄
( );

157 
FGAPI
 
FGAPIENTRY
 
glutSﬁidRhombicDodeˇhedr⁄
( );

158 
FGAPI
 
FGAPIENTRY
 
glutWúeSõΩöskiSp⁄ge
 ( 
num_Àvñs
, 
GLdoubÀ
 
off£t
[3], GLdoubÀ 
sˇÀ
 );

159 
FGAPI
 
FGAPIENTRY
 
glutSﬁidSõΩöskiSp⁄ge
 ( 
num_Àvñs
, 
GLdoubÀ
 
off£t
[3], GLdoubÀ 
sˇÀ
 );

160 
FGAPI
 
FGAPIENTRY
 
glutWúeCylödî
–
GLdoubÀ
 
ødius
, GLdoubÀ 
height
, 
GLöt
 
¶i˚s
, GLöà
°acks
);

161 
FGAPI
 
FGAPIENTRY
 
glutSﬁidCylödî
–
GLdoubÀ
 
ødius
, GLdoubÀ 
height
, 
GLöt
 
¶i˚s
, GLöà
°acks
);

166 (*
GLUT¥oc
)();

167 
FGAPI
 
GLUT¥oc
 
FGAPIENTRY
 
glutGëProcAddªss
–c⁄° *
¥ocName
 );

178 
glutJoy°ickGëNumAxes
–
idít
 );

179 
glutJoy°ickGëNumBuâ⁄s
–
idít
 );

180 
glutJoy°ickNŸW‹kög
–
idít
 );

181 
glutJoy°ickGëDódB™d
–
idít
, 
axis
 );

182 
glutJoy°ickSëDódB™d
–
idít
, 
axis
, 
db
 );

183 
glutJoy°ickGëS©uøti⁄
–
idít
, 
axis
 );

184 
glutJoy°ickSëS©uøti⁄
–
idít
, 
axis
, 
°
 );

185 
glutJoy°ickSëMöR™ge
–
idít
, *
axes
 );

186 
glutJoy°ickSëMaxR™ge
–
idít
, *
axes
 );

187 
glutJoy°ickSëCíãr
–
idít
, *
axes
 );

188 
glutJoy°ickGëMöR™ge
–
idít
, *
axes
 );

189 
glutJoy°ickGëMaxR™ge
–
idít
, *
axes
 );

190 
glutJoy°ickGëCíãr
–
idít
, *
axes
 );

195 
FGAPI
 
FGAPIENTRY
 
glutInôC⁄ãxtVîsi⁄
–
maj‹Vîsi⁄
, 
mö‹Vîsi⁄
 );

196 
FGAPI
 
FGAPIENTRY
 
glutInôC⁄ãxtFœgs
–
Êags
 );

197 
FGAPI
 
FGAPIENTRY
 
glutInôC⁄ãxtProfûe
–
¥ofûe
 );

202 
	#GLUT_CAPTIONLESS
 0x0400

	)

203 
	#GLUT_BORDERLESS
 0x0800

	)

204 
	#GLUT_SRGB
 0x1000

	)

206 #ifde‡
__˝lu•lus


	@include/GL/freeglut_std.h

1 #i‚de‡ 
__FREEGLUT_STD_H__


2 
	#__FREEGLUT_STD_H__


	)

31 #ifde‡
__˝lu•lus


38 #ifde‡
_WIN32


49 #i‚de‡
FREEGLUT_LIB_PRAGMAS


50 #i‡–
deföed
(
_MSC_VER
Ë|| deföed(
__WATCOMC__
ËË&& !deföed(
_WIN32_WCE
)

51 
	#FREEGLUT_LIB_PRAGMAS
 1

	)

53 
	#FREEGLUT_LIB_PRAGMAS
 0

	)

57 #i‚de‡
WIN32_LEAN_AND_MEAN


58 
	#WIN32_LEAN_AND_MEAN
 1

	)

60 
	#NOMINMAX


	)

61 
	~<Wödows.h
>

64 #ifde‡
FREEGLUT_STATIC


66 
	#FGAPI


	)

67 
	#FGAPIENTRY


	)

70 #i‡
FREEGLUT_LIB_PRAGMAS


71 #¥agm®
commít
 (
lib
, "freeglut_static.lib")

77 
	#FGAPIENTRY
 
__°dˇŒ


	)

78 #i‡
deföed
(
FREEGLUT_EXPORTS
)

79 
	#FGAPI
 
	`__de˛•ec
(
dŒexp‹t
)

	)

81 
	#FGAPI
 
	`__de˛•ec
(
dŒimp‹t
)

	)

84 #i‡
FREEGLUT_LIB_PRAGMAS


85 #¥agm®
commít
 (
lib
, "freeglut.lib")

93 #i‡
FREEGLUT_LIB_PRAGMAS


94 #¥agm®
commít
 (
lib
, "glu32.lib")

95 #¥agm®
commít
 (
lib
, "opengl32.lib")

96 #¥agm®
commít
 (
lib
, "gdi32.lib")

97 #¥agm®
commít
 (
lib
, "winmm.lib")

98 #¥agm®
commít
 (
lib
, "user32.lib")

104 
	#FGAPI


	)

105 
	#FGAPIENTRY


	)

112 
	#FREEGLUT
 1

	)

113 
	#GLUT_API_VERSION
 4

	)

114 
	#FREEGLUT_VERSION_2_0
 1

	)

115 
	#GLUT_XLIB_IMPLEMENTATION
 13

	)

120 
	~<GL/gl.h
>

121 
	~<GL/glu.h
>

126 
	#GLUT_KEY_F1
 0x0001

	)

127 
	#GLUT_KEY_F2
 0x0002

	)

128 
	#GLUT_KEY_F3
 0x0003

	)

129 
	#GLUT_KEY_F4
 0x0004

	)

130 
	#GLUT_KEY_F5
 0x0005

	)

131 
	#GLUT_KEY_F6
 0x0006

	)

132 
	#GLUT_KEY_F7
 0x0007

	)

133 
	#GLUT_KEY_F8
 0x0008

	)

134 
	#GLUT_KEY_F9
 0x0009

	)

135 
	#GLUT_KEY_F10
 0x000A

	)

136 
	#GLUT_KEY_F11
 0x000B

	)

137 
	#GLUT_KEY_F12
 0x000C

	)

138 
	#GLUT_KEY_LEFT
 0x0064

	)

139 
	#GLUT_KEY_UP
 0x0065

	)

140 
	#GLUT_KEY_RIGHT
 0x0066

	)

141 
	#GLUT_KEY_DOWN
 0x0067

	)

142 
	#GLUT_KEY_PAGE_UP
 0x0068

	)

143 
	#GLUT_KEY_PAGE_DOWN
 0x0069

	)

144 
	#GLUT_KEY_HOME
 0x006A

	)

145 
	#GLUT_KEY_END
 0x006B

	)

146 
	#GLUT_KEY_INSERT
 0x006C

	)

151 
	#GLUT_LEFT_BUTTON
 0x0000

	)

152 
	#GLUT_MIDDLE_BUTTON
 0x0001

	)

153 
	#GLUT_RIGHT_BUTTON
 0x0002

	)

154 
	#GLUT_DOWN
 0x0000

	)

155 
	#GLUT_UP
 0x0001

	)

156 
	#GLUT_LEFT
 0x0000

	)

157 
	#GLUT_ENTERED
 0x0001

	)

162 
	#GLUT_RGB
 0x0000

	)

163 
	#GLUT_RGBA
 0x0000

	)

164 
	#GLUT_INDEX
 0x0001

	)

165 
	#GLUT_SINGLE
 0x0000

	)

166 
	#GLUT_DOUBLE
 0x0002

	)

167 
	#GLUT_ACCUM
 0x0004

	)

168 
	#GLUT_ALPHA
 0x0008

	)

169 
	#GLUT_DEPTH
 0x0010

	)

170 
	#GLUT_STENCIL
 0x0020

	)

171 
	#GLUT_MULTISAMPLE
 0x0080

	)

172 
	#GLUT_STEREO
 0x0100

	)

173 
	#GLUT_LUMINANCE
 0x0200

	)

178 
	#GLUT_MENU_NOT_IN_USE
 0x0000

	)

179 
	#GLUT_MENU_IN_USE
 0x0001

	)

180 
	#GLUT_NOT_VISIBLE
 0x0000

	)

181 
	#GLUT_VISIBLE
 0x0001

	)

182 
	#GLUT_HIDDEN
 0x0000

	)

183 
	#GLUT_FULLY_RETAINED
 0x0001

	)

184 
	#GLUT_PARTIALLY_RETAINED
 0x0002

	)

185 
	#GLUT_FULLY_COVERED
 0x0003

	)

192 #i‡
deföed
(
_MSC_VER
Ë|| deföed(
__CYGWIN__
Ë|| deföed(
__MINGW32__
Ë|| deföed(
__WATCOMC__
)

193 
	#GLUT_STROKE_ROMAN
 ((*)0x0000)

	)

194 
	#GLUT_STROKE_MONO_ROMAN
 ((*)0x0001)

	)

195 
	#GLUT_BITMAP_9_BY_15
 ((*)0x0002)

	)

196 
	#GLUT_BITMAP_8_BY_13
 ((*)0x0003)

	)

197 
	#GLUT_BITMAP_TIMES_ROMAN_10
 ((*)0x0004)

	)

198 
	#GLUT_BITMAP_TIMES_ROMAN_24
 ((*)0x0005)

	)

199 
	#GLUT_BITMAP_HELVETICA_10
 ((*)0x0006)

	)

200 
	#GLUT_BITMAP_HELVETICA_12
 ((*)0x0007)

	)

201 
	#GLUT_BITMAP_HELVETICA_18
 ((*)0x0008)

	)

206 * 
glutSåokeRom™
;

207 * 
glutSåokeM⁄oRom™
;

208 * 
glutBôm≠9By15
;

209 * 
glutBôm≠8By13
;

210 * 
glutBôm≠TimesRom™10
;

211 * 
glutBôm≠TimesRom™24
;

212 * 
glutBôm≠Hñvëiˇ10
;

213 * 
glutBôm≠Hñvëiˇ12
;

214 * 
glutBôm≠Hñvëiˇ18
;

219 
	#GLUT_STROKE_ROMAN
 ((*Ë&
glutSåokeRom™
)

	)

220 
	#GLUT_STROKE_MONO_ROMAN
 ((*Ë&
glutSåokeM⁄oRom™
)

	)

221 
	#GLUT_BITMAP_9_BY_15
 ((*Ë&
glutBôm≠9By15
)

	)

222 
	#GLUT_BITMAP_8_BY_13
 ((*Ë&
glutBôm≠8By13
)

	)

223 
	#GLUT_BITMAP_TIMES_ROMAN_10
 ((*Ë&
glutBôm≠TimesRom™10
)

	)

224 
	#GLUT_BITMAP_TIMES_ROMAN_24
 ((*Ë&
glutBôm≠TimesRom™24
)

	)

225 
	#GLUT_BITMAP_HELVETICA_10
 ((*Ë&
glutBôm≠Hñvëiˇ10
)

	)

226 
	#GLUT_BITMAP_HELVETICA_12
 ((*Ë&
glutBôm≠Hñvëiˇ12
)

	)

227 
	#GLUT_BITMAP_HELVETICA_18
 ((*Ë&
glutBôm≠Hñvëiˇ18
)

	)

233 
	#GLUT_WINDOW_X
 0x0064

	)

234 
	#GLUT_WINDOW_Y
 0x0065

	)

235 
	#GLUT_WINDOW_WIDTH
 0x0066

	)

236 
	#GLUT_WINDOW_HEIGHT
 0x0067

	)

237 
	#GLUT_WINDOW_BUFFER_SIZE
 0x0068

	)

238 
	#GLUT_WINDOW_STENCIL_SIZE
 0x0069

	)

239 
	#GLUT_WINDOW_DEPTH_SIZE
 0x006A

	)

240 
	#GLUT_WINDOW_RED_SIZE
 0x006B

	)

241 
	#GLUT_WINDOW_GREEN_SIZE
 0x006C

	)

242 
	#GLUT_WINDOW_BLUE_SIZE
 0x006D

	)

243 
	#GLUT_WINDOW_ALPHA_SIZE
 0x006E

	)

244 
	#GLUT_WINDOW_ACCUM_RED_SIZE
 0x006F

	)

245 
	#GLUT_WINDOW_ACCUM_GREEN_SIZE
 0x0070

	)

246 
	#GLUT_WINDOW_ACCUM_BLUE_SIZE
 0x0071

	)

247 
	#GLUT_WINDOW_ACCUM_ALPHA_SIZE
 0x0072

	)

248 
	#GLUT_WINDOW_DOUBLEBUFFER
 0x0073

	)

249 
	#GLUT_WINDOW_RGBA
 0x0074

	)

250 
	#GLUT_WINDOW_PARENT
 0x0075

	)

251 
	#GLUT_WINDOW_NUM_CHILDREN
 0x0076

	)

252 
	#GLUT_WINDOW_COLORMAP_SIZE
 0x0077

	)

253 
	#GLUT_WINDOW_NUM_SAMPLES
 0x0078

	)

254 
	#GLUT_WINDOW_STEREO
 0x0079

	)

255 
	#GLUT_WINDOW_CURSOR
 0x007A

	)

257 
	#GLUT_SCREEN_WIDTH
 0x00C8

	)

258 
	#GLUT_SCREEN_HEIGHT
 0x00C9

	)

259 
	#GLUT_SCREEN_WIDTH_MM
 0x00CA

	)

260 
	#GLUT_SCREEN_HEIGHT_MM
 0x00CB

	)

261 
	#GLUT_MENU_NUM_ITEMS
 0x012C

	)

262 
	#GLUT_DISPLAY_MODE_POSSIBLE
 0x0190

	)

263 
	#GLUT_INIT_WINDOW_X
 0x01F4

	)

264 
	#GLUT_INIT_WINDOW_Y
 0x01F5

	)

265 
	#GLUT_INIT_WINDOW_WIDTH
 0x01F6

	)

266 
	#GLUT_INIT_WINDOW_HEIGHT
 0x01F7

	)

267 
	#GLUT_INIT_DISPLAY_MODE
 0x01F8

	)

268 
	#GLUT_ELAPSED_TIME
 0x02BC

	)

269 
	#GLUT_WINDOW_FORMAT_ID
 0x007B

	)

274 
	#GLUT_HAS_KEYBOARD
 0x0258

	)

275 
	#GLUT_HAS_MOUSE
 0x0259

	)

276 
	#GLUT_HAS_SPACEBALL
 0x025A

	)

277 
	#GLUT_HAS_DIAL_AND_BUTTON_BOX
 0x025B

	)

278 
	#GLUT_HAS_TABLET
 0x025C

	)

279 
	#GLUT_NUM_MOUSE_BUTTONS
 0x025D

	)

280 
	#GLUT_NUM_SPACEBALL_BUTTONS
 0x025E

	)

281 
	#GLUT_NUM_BUTTON_BOX_BUTTONS
 0x025F

	)

282 
	#GLUT_NUM_DIALS
 0x0260

	)

283 
	#GLUT_NUM_TABLET_BUTTONS
 0x0261

	)

284 
	#GLUT_DEVICE_IGNORE_KEY_REPEAT
 0x0262

	)

285 
	#GLUT_DEVICE_KEY_REPEAT
 0x0263

	)

286 
	#GLUT_HAS_JOYSTICK
 0x0264

	)

287 
	#GLUT_OWNS_JOYSTICK
 0x0265

	)

288 
	#GLUT_JOYSTICK_BUTTONS
 0x0266

	)

289 
	#GLUT_JOYSTICK_AXES
 0x0267

	)

290 
	#GLUT_JOYSTICK_POLL_RATE
 0x0268

	)

295 
	#GLUT_OVERLAY_POSSIBLE
 0x0320

	)

296 
	#GLUT_LAYER_IN_USE
 0x0321

	)

297 
	#GLUT_HAS_OVERLAY
 0x0322

	)

298 
	#GLUT_TRANSPARENT_INDEX
 0x0323

	)

299 
	#GLUT_NORMAL_DAMAGED
 0x0324

	)

300 
	#GLUT_OVERLAY_DAMAGED
 0x0325

	)

305 
	#GLUT_VIDEO_RESIZE_POSSIBLE
 0x0384

	)

306 
	#GLUT_VIDEO_RESIZE_IN_USE
 0x0385

	)

307 
	#GLUT_VIDEO_RESIZE_X_DELTA
 0x0386

	)

308 
	#GLUT_VIDEO_RESIZE_Y_DELTA
 0x0387

	)

309 
	#GLUT_VIDEO_RESIZE_WIDTH_DELTA
 0x0388

	)

310 
	#GLUT_VIDEO_RESIZE_HEIGHT_DELTA
 0x0389

	)

311 
	#GLUT_VIDEO_RESIZE_X
 0x038A

	)

312 
	#GLUT_VIDEO_RESIZE_Y
 0x038B

	)

313 
	#GLUT_VIDEO_RESIZE_WIDTH
 0x038C

	)

314 
	#GLUT_VIDEO_RESIZE_HEIGHT
 0x038D

	)

319 
	#GLUT_NORMAL
 0x0000

	)

320 
	#GLUT_OVERLAY
 0x0001

	)

325 
	#GLUT_ACTIVE_SHIFT
 0x0001

	)

326 
	#GLUT_ACTIVE_CTRL
 0x0002

	)

327 
	#GLUT_ACTIVE_ALT
 0x0004

	)

332 
	#GLUT_CURSOR_RIGHT_ARROW
 0x0000

	)

333 
	#GLUT_CURSOR_LEFT_ARROW
 0x0001

	)

334 
	#GLUT_CURSOR_INFO
 0x0002

	)

335 
	#GLUT_CURSOR_DESTROY
 0x0003

	)

336 
	#GLUT_CURSOR_HELP
 0x0004

	)

337 
	#GLUT_CURSOR_CYCLE
 0x0005

	)

338 
	#GLUT_CURSOR_SPRAY
 0x0006

	)

339 
	#GLUT_CURSOR_WAIT
 0x0007

	)

340 
	#GLUT_CURSOR_TEXT
 0x0008

	)

341 
	#GLUT_CURSOR_CROSSHAIR
 0x0009

	)

342 
	#GLUT_CURSOR_UP_DOWN
 0x000A

	)

343 
	#GLUT_CURSOR_LEFT_RIGHT
 0x000B

	)

344 
	#GLUT_CURSOR_TOP_SIDE
 0x000C

	)

345 
	#GLUT_CURSOR_BOTTOM_SIDE
 0x000D

	)

346 
	#GLUT_CURSOR_LEFT_SIDE
 0x000E

	)

347 
	#GLUT_CURSOR_RIGHT_SIDE
 0x000F

	)

348 
	#GLUT_CURSOR_TOP_LEFT_CORNER
 0x0010

	)

349 
	#GLUT_CURSOR_TOP_RIGHT_CORNER
 0x0011

	)

350 
	#GLUT_CURSOR_BOTTOM_RIGHT_CORNER
 0x0012

	)

351 
	#GLUT_CURSOR_BOTTOM_LEFT_CORNER
 0x0013

	)

352 
	#GLUT_CURSOR_INHERIT
 0x0064

	)

353 
	#GLUT_CURSOR_NONE
 0x0065

	)

354 
	#GLUT_CURSOR_FULL_CROSSHAIR
 0x0066

	)

359 
	#GLUT_RED
 0x0000

	)

360 
	#GLUT_GREEN
 0x0001

	)

361 
	#GLUT_BLUE
 0x0002

	)

366 
	#GLUT_KEY_REPEAT_OFF
 0x0000

	)

367 
	#GLUT_KEY_REPEAT_ON
 0x0001

	)

368 
	#GLUT_KEY_REPEAT_DEFAULT
 0x0002

	)

370 
	#GLUT_JOYSTICK_BUTTON_A
 0x0001

	)

371 
	#GLUT_JOYSTICK_BUTTON_B
 0x0002

	)

372 
	#GLUT_JOYSTICK_BUTTON_C
 0x0004

	)

373 
	#GLUT_JOYSTICK_BUTTON_D
 0x0008

	)

378 
	#GLUT_GAME_MODE_ACTIVE
 0x0000

	)

379 
	#GLUT_GAME_MODE_POSSIBLE
 0x0001

	)

380 
	#GLUT_GAME_MODE_WIDTH
 0x0002

	)

381 
	#GLUT_GAME_MODE_HEIGHT
 0x0003

	)

382 
	#GLUT_GAME_MODE_PIXEL_DEPTH
 0x0004

	)

383 
	#GLUT_GAME_MODE_REFRESH_RATE
 0x0005

	)

384 
	#GLUT_GAME_MODE_DISPLAY_CHANGED
 0x0006

	)

389 
FGAPI
 
FGAPIENTRY
 
glutInô
–* 
∑rgc
, ** 
¨gv
 );

390 
FGAPI
 
FGAPIENTRY
 
glutInôWödowPosôi⁄
–
x
, 
y
 );

391 
FGAPI
 
FGAPIENTRY
 
glutInôWödowSize
–
width
, 
height
 );

392 
FGAPI
 
FGAPIENTRY
 
glutInôDi•œyMode
–
di•œyMode
 );

393 
FGAPI
 
FGAPIENTRY
 
glutInôDi•œySåög
–c⁄° * 
di•œyMode
 );

398 
FGAPI
 
FGAPIENTRY
 
glutMaöLo›
( );

403 
FGAPI
 
FGAPIENTRY
 
glutCª©eWödow
–c⁄° * 
tôÀ
 );

404 
FGAPI
 
FGAPIENTRY
 
glutCª©eSubWödow
–
wödow
, 
x
, 
y
, 
width
, 
height
 );

405 
FGAPI
 
FGAPIENTRY
 
glutDe°royWödow
–
wödow
 );

406 
FGAPI
 
FGAPIENTRY
 
glutSëWödow
–
wödow
 );

407 
FGAPI
 
FGAPIENTRY
 
glutGëWödow
( );

408 
FGAPI
 
FGAPIENTRY
 
glutSëWödowTôÀ
–c⁄° * 
tôÀ
 );

409 
FGAPI
 
FGAPIENTRY
 
glutSëIc⁄TôÀ
–c⁄° * 
tôÀ
 );

410 
FGAPI
 
FGAPIENTRY
 
glutResh≠eWödow
–
width
, 
height
 );

411 
FGAPI
 
FGAPIENTRY
 
glutPosôi⁄Wödow
–
x
, 
y
 );

412 
FGAPI
 
FGAPIENTRY
 
glutShowWödow
( );

413 
FGAPI
 
FGAPIENTRY
 
glutHideWödow
( );

414 
FGAPI
 
FGAPIENTRY
 
glutIc⁄ifyWödow
( );

415 
FGAPI
 
FGAPIENTRY
 
glutPushWödow
( );

416 
FGAPI
 
FGAPIENTRY
 
glutP›Wödow
( );

417 
FGAPI
 
FGAPIENTRY
 
glutFuŒS¸ìn
( );

422 
FGAPI
 
FGAPIENTRY
 
glutPo°WödowRedi•œy
–
wödow
 );

423 
FGAPI
 
FGAPIENTRY
 
glutPo°Redi•œy
( );

424 
FGAPI
 
FGAPIENTRY
 
glutSw≠Buf„rs
( );

429 
FGAPI
 
FGAPIENTRY
 
glutW¨pPoöãr
–
x
, 
y
 );

430 
FGAPI
 
FGAPIENTRY
 
glutSëCurs‹
–
curs‹
 );

435 
FGAPI
 
FGAPIENTRY
 
glutE°ablishOvîœy
( );

436 
FGAPI
 
FGAPIENTRY
 
glutRemoveOvîœy
( );

437 
FGAPI
 
FGAPIENTRY
 
glutU£Layî
–
GLíum
 
œyî
 );

438 
FGAPI
 
FGAPIENTRY
 
glutPo°OvîœyRedi•œy
( );

439 
FGAPI
 
FGAPIENTRY
 
glutPo°WödowOvîœyRedi•œy
–
wödow
 );

440 
FGAPI
 
FGAPIENTRY
 
glutShowOvîœy
( );

441 
FGAPI
 
FGAPIENTRY
 
glutHideOvîœy
( );

446 
FGAPI
 
FGAPIENTRY
 
glutCª©eMíu
–(* 
ˇŒback
)–
míu
 ) );

447 
FGAPI
 
FGAPIENTRY
 
glutDe°royMíu
–
míu
 );

448 
FGAPI
 
FGAPIENTRY
 
glutGëMíu
( );

449 
FGAPI
 
FGAPIENTRY
 
glutSëMíu
–
míu
 );

450 
FGAPI
 
FGAPIENTRY
 
glutAddMíuE¡ry
–c⁄° * 
œbñ
, 
vÆue
 );

451 
FGAPI
 
FGAPIENTRY
 
glutAddSubMíu
–c⁄° * 
œbñ
, 
subMíu
 );

452 
FGAPI
 
FGAPIENTRY
 
glutCh™geToMíuE¡ry
–
ôem
, c⁄° * 
œbñ
, 
vÆue
 );

453 
FGAPI
 
FGAPIENTRY
 
glutCh™geToSubMíu
–
ôem
, c⁄° * 
œbñ
, 
vÆue
 );

454 
FGAPI
 
FGAPIENTRY
 
glutRemoveMíuIãm
–
ôem
 );

455 
FGAPI
 
FGAPIENTRY
 
glutAâachMíu
–
buâ⁄
 );

456 
FGAPI
 
FGAPIENTRY
 
glutDëachMíu
–
buâ⁄
 );

461 
FGAPI
 
FGAPIENTRY
 
glutTimîFunc
–
time
, (* 
ˇŒback
)–), 
vÆue
 );

462 
FGAPI
 
FGAPIENTRY
 
glutIdÀFunc
–(* 
ˇŒback
)( ) );

467 
FGAPI
 
FGAPIENTRY
 
glutKeybﬂrdFunc
–(* 
ˇŒback
)( , , ) );

468 
FGAPI
 
FGAPIENTRY
 
glutS≥cülFunc
–(* 
ˇŒback
)( , , ) );

469 
FGAPI
 
FGAPIENTRY
 
glutResh≠eFunc
–(* 
ˇŒback
)( , ) );

470 
FGAPI
 
FGAPIENTRY
 
glutVisibûôyFunc
–(* 
ˇŒback
)( ) );

471 
FGAPI
 
FGAPIENTRY
 
glutDi•œyFunc
–(* 
ˇŒback
)( ) );

472 
FGAPI
 
FGAPIENTRY
 
glutMou£Func
–(* 
ˇŒback
)( , , , ) );

473 
FGAPI
 
FGAPIENTRY
 
glutMŸi⁄Func
–(* 
ˇŒback
)( , ) );

474 
FGAPI
 
FGAPIENTRY
 
glutPassiveMŸi⁄Func
–(* 
ˇŒback
)( , ) );

475 
FGAPI
 
FGAPIENTRY
 
glutE¡ryFunc
–(* 
ˇŒback
)( ) );

477 
FGAPI
 
FGAPIENTRY
 
glutKeybﬂrdUpFunc
–(* 
ˇŒback
)( , , ) );

478 
FGAPI
 
FGAPIENTRY
 
glutS≥cülUpFunc
–(* 
ˇŒback
)( , , ) );

479 
FGAPI
 
FGAPIENTRY
 
glutJoy°ickFunc
–(* 
ˇŒback
)–, , , ), 
pﬁlI¡îvÆ
 );

480 
FGAPI
 
FGAPIENTRY
 
glutMíuSèãFunc
–(* 
ˇŒback
)( ) );

481 
FGAPI
 
FGAPIENTRY
 
glutMíuSètusFunc
–(* 
ˇŒback
)( , , ) );

482 
FGAPI
 
FGAPIENTRY
 
glutOvîœyDi•œyFunc
–(* 
ˇŒback
)( ) );

483 
FGAPI
 
FGAPIENTRY
 
glutWödowSètusFunc
–(* 
ˇŒback
)( ) );

485 
FGAPI
 
FGAPIENTRY
 
glutS∑˚bÆlMŸi⁄Func
–(* 
ˇŒback
)( , , ) );

486 
FGAPI
 
FGAPIENTRY
 
glutS∑˚bÆlRŸ©eFunc
–(* 
ˇŒback
)( , , ) );

487 
FGAPI
 
FGAPIENTRY
 
glutS∑˚bÆlBuâ⁄Func
–(* 
ˇŒback
)( , ) );

488 
FGAPI
 
FGAPIENTRY
 
glutBuâ⁄BoxFunc
–(* 
ˇŒback
)( , ) );

489 
FGAPI
 
FGAPIENTRY
 
glutDülsFunc
–(* 
ˇŒback
)( , ) );

490 
FGAPI
 
FGAPIENTRY
 
glutTabÀtMŸi⁄Func
–(* 
ˇŒback
)( , ) );

491 
FGAPI
 
FGAPIENTRY
 
glutTabÀtBuâ⁄Func
–(* 
ˇŒback
)( , , , ) );

496 
FGAPI
 
FGAPIENTRY
 
glutGë
–
GLíum
 
quîy
 );

497 
FGAPI
 
FGAPIENTRY
 
glutDevi˚Gë
–
GLíum
 
quîy
 );

498 
FGAPI
 
FGAPIENTRY
 
glutGëModifõrs
( );

499 
FGAPI
 
FGAPIENTRY
 
glutLayîGë
–
GLíum
 
quîy
 );

504 
FGAPI
 
FGAPIENTRY
 
glutBôm≠Ch¨a˘î
–* 
f⁄t
, 
ch¨a˘î
 );

505 
FGAPI
 
FGAPIENTRY
 
glutBôm≠Width
–* 
f⁄t
, 
ch¨a˘î
 );

506 
FGAPI
 
FGAPIENTRY
 
glutSåokeCh¨a˘î
–* 
f⁄t
, 
ch¨a˘î
 );

507 
FGAPI
 
FGAPIENTRY
 
glutSåokeWidth
–* 
f⁄t
, 
ch¨a˘î
 );

508 
FGAPI
 
FGAPIENTRY
 
glutBôm≠Lígth
–* 
f⁄t
, c⁄° * 
°rög
 );

509 
FGAPI
 
FGAPIENTRY
 
glutSåokeLígth
–* 
f⁄t
, c⁄° * 
°rög
 );

514 
FGAPI
 
FGAPIENTRY
 
glutWúeCube
–
GLdoubÀ
 
size
 );

515 
FGAPI
 
FGAPIENTRY
 
glutSﬁidCube
–
GLdoubÀ
 
size
 );

516 
FGAPI
 
FGAPIENTRY
 
glutWúeSphîe
–
GLdoubÀ
 
ødius
, 
GLöt
 
¶i˚s
, GLöà
°acks
 );

517 
FGAPI
 
FGAPIENTRY
 
glutSﬁidSphîe
–
GLdoubÀ
 
ødius
, 
GLöt
 
¶i˚s
, GLöà
°acks
 );

518 
FGAPI
 
FGAPIENTRY
 
glutWúeC⁄e
–
GLdoubÀ
 
ba£
, GLdoubÀ 
height
, 
GLöt
 
¶i˚s
, GLöà
°acks
 );

519 
FGAPI
 
FGAPIENTRY
 
glutSﬁidC⁄e
–
GLdoubÀ
 
ba£
, GLdoubÀ 
height
, 
GLöt
 
¶i˚s
, GLöà
°acks
 );

521 
FGAPI
 
FGAPIENTRY
 
glutWúeT‹us
–
GLdoubÀ
 
ö√rRadius
, GLdoubÀ 
ouãrRadius
, 
GLöt
 
sides
, GLöà
rögs
 );

522 
FGAPI
 
FGAPIENTRY
 
glutSﬁidT‹us
–
GLdoubÀ
 
ö√rRadius
, GLdoubÀ 
ouãrRadius
, 
GLöt
 
sides
, GLöà
rögs
 );

523 
FGAPI
 
FGAPIENTRY
 
glutWúeDodeˇhedr⁄
( );

524 
FGAPI
 
FGAPIENTRY
 
glutSﬁidDodeˇhedr⁄
( );

525 
FGAPI
 
FGAPIENTRY
 
glutWúeO˘ahedr⁄
( );

526 
FGAPI
 
FGAPIENTRY
 
glutSﬁidO˘ahedr⁄
( );

527 
FGAPI
 
FGAPIENTRY
 
glutWúeTëøhedr⁄
( );

528 
FGAPI
 
FGAPIENTRY
 
glutSﬁidTëøhedr⁄
( );

529 
FGAPI
 
FGAPIENTRY
 
glutWúeIcoßhedr⁄
( );

530 
FGAPI
 
FGAPIENTRY
 
glutSﬁidIcoßhedr⁄
( );

535 
FGAPI
 
FGAPIENTRY
 
glutWúeTópŸ
–
GLdoubÀ
 
size
 );

536 
FGAPI
 
FGAPIENTRY
 
glutSﬁidTópŸ
–
GLdoubÀ
 
size
 );

541 
FGAPI
 
FGAPIENTRY
 
glutGameModeSåög
–c⁄° * 
°rög
 );

542 
FGAPI
 
FGAPIENTRY
 
glutE¡îGameMode
( );

543 
FGAPI
 
FGAPIENTRY
 
glutLóveGameMode
( );

544 
FGAPI
 
FGAPIENTRY
 
glutGameModeGë
–
GLíum
 
quîy
 );

549 
FGAPI
 
FGAPIENTRY
 
glutVideoResizeGë
–
GLíum
 
quîy
 );

550 
FGAPI
 
FGAPIENTRY
 
glutSëupVideoResizög
( );

551 
FGAPI
 
FGAPIENTRY
 
glutSt›VideoResizög
( );

552 
FGAPI
 
FGAPIENTRY
 
glutVideoResize
–
x
, 
y
, 
width
, 
height
 );

553 
FGAPI
 
FGAPIENTRY
 
glutVideoP™
–
x
, 
y
, 
width
, 
height
 );

558 
FGAPI
 
FGAPIENTRY
 
glutSëCﬁ‹
–
cﬁ‹
, 
GLÊﬂt
 
ªd
, GLÊﬂà
gªí
, GLÊﬂà
blue
 );

559 
FGAPI
 
GLÊﬂt
 
FGAPIENTRY
 
glutGëCﬁ‹
–
cﬁ‹
, 
comp⁄ít
 );

560 
FGAPI
 
FGAPIENTRY
 
glutC›yCﬁ‹m≠
–
wödow
 );

565 
FGAPI
 
FGAPIENTRY
 
glutIgn‹eKeyRïót
–
ign‹e
 );

566 
FGAPI
 
FGAPIENTRY
 
glutSëKeyRïót
–
ª≥©Mode
 );

567 
FGAPI
 
FGAPIENTRY
 
glutF‹˚Joy°ickFunc
( );

572 
FGAPI
 
FGAPIENTRY
 
glutExãnsi⁄Suµ‹ãd
–c⁄° * 
exãnsi⁄
 );

573 
FGAPI
 
FGAPIENTRY
 
glutRï‹tEº‹s
( );

598 
	~<°dlib.h
>

600 #i‡
deföed
(
_WIN32
Ë&& !deföed(
GLUT_DISABLE_ATEXIT_HACK
Ë&& !deföed(
__WATCOMC__
)

601 
FGAPI
 
FGAPIENTRY
 
__glutInôWôhExô
(*
¨g˝
, **
¨gv
, (
__cde˛
 *
exôfunc
)());

602 
FGAPI
 
FGAPIENTRY
 
__glutCª©eWödowWôhExô
(c⁄° *
tôÀ
, (
__cde˛
 *
exôfunc
)());

603 
FGAPI
 
FGAPIENTRY
 
__glutCª©eMíuWôhExô
((* 
func
)(), (
__cde˛
 *
exôfunc
)());

604 #i‚de‡
FREEGLUT_BUILDING_LIB


605 #i‡
deföed
(
__GNUC__
)

606 
	#FGUNUSED
 
	`__©åibuã__
((
unu£d
))

	)

608 
	#FGUNUSED


	)

610 
FGAPIENTRY
 
FGUNUSED
 
glutInô_ATEXIT_HACK
(*
¨g˝
, **
¨gv
Ë{ 
__glutInôWôhExô
◊rg˝,árgv, 
exô
); }

611 
	#glutInô
 
glutInô_ATEXIT_HACK


	)

612 
FGAPIENTRY
 
FGUNUSED
 
glutCª©eWödow_ATEXIT_HACK
(c⁄° *
tôÀ
Ë{  
__glutCª©eWödowWôhExô
—ôÀ, 
exô
); }

613 
	#glutCª©eWödow
 
glutCª©eWödow_ATEXIT_HACK


	)

614 
FGAPIENTRY
 
FGUNUSED
 
glutCª©eMíu_ATEXIT_HACK
((* 
func
)()Ë{  
__glutCª©eMíuWôhExô
(func, 
exô
); }

615 
	#glutCª©eMíu
 
glutCª©eMíu_ATEXIT_HACK


	)

619 #ifde‡
__˝lu•lus


	@include/GL/gl.h

27 #i‚de‡
__gl_h_


28 
	#__gl_h_


	)

30 #i‡
deföed
(
USE_MGL_NAMESPACE
)

31 
	~"gl_m™gÀ.h
"

40 #i‡!
deföed
(
__SCITECH_SNAP__
)

42 #i‡
deföed
(
__BEOS__
)

43 
	~<°dlib.h
>

46 #i‡!
deföed
(
OPENSTEP
Ë&& (deföed(
NeXT
Ë|| deföed(
NeXT_PDO
))

47 
	#OPENSTEP


	)

50 #i‡
deföed
(
_WIN32
Ë&& !deföed(
__WIN32__
Ë&& !deföed(
__CYGWIN__
)

51 
	#__WIN32__


	)

54 #i‡!
deföed
(
OPENSTEP
Ë&& (deföed(
__WIN32__
Ë&& !deföed(
__CYGWIN__
))

55 #i‡(
deföed
(
_MSC_VER
Ë|| deföed(
__MINGW32__
)Ë&& deföed(
BUILD_GL32
)

56 
	#GLAPI
 
	`__de˛•ec
(
dŒexp‹t
)

	)

57 #ñi‡(
deföed
(
_MSC_VER
Ë|| deföed(
__MINGW32__
)Ë&& deföed(
_DLL
)

58 
	#GLAPI
 
	`__de˛•ec
(
dŒimp‹t
)

	)

60 
	#GLAPI
 

	)

62 #i‡
deföed
(
__MINGW32__
Ë&& deföed(
GL_NO_STDCALL
Ë|| deföed(
UNDER_CE
)

63 
	#GLAPIENTRY


	)

65 
	#GLAPIENTRY
 
__°dˇŒ


	)

67 #ñi‡
deföed
(
__CYGWIN__
Ë&& deföed(
USE_OPENGL32
)

68 
	#GLAPI
 

	)

69 
	#GLAPIENTRY
 
__°dˇŒ


	)

70 #ñi‡
deföed
(
__GNUC__
Ë&& (__GNUC__ * 100 + 
__GNUC_MINOR__
) >= 303

71 
	#GLAPI
 
	`__©åibuã__
((
	`visibûôy
("deÁu…")))

	)

72 
	#GLAPIENTRY


	)

75 #i‡(
deföed
(
__BEOS__
Ë&& deföed(
__POWERPC__
)Ë|| deföed(
__QUICKDRAW__
)

76 
	#PRAGMA_EXPORT_SUPPORTED
 1

	)

87 #i‡
deföed
(
_WIN32
Ë&& !deföed(
APIENTRY
Ë&& !deföed(
__CYGWIN__
)

88 
	#WIN32_LEAN_AND_MEAN
 1

	)

89 
	~<wödows.h
>

92 #i‡
deföed
(
_WIN32
Ë&& !deföed(
_WINGDI_
Ë&& !deföed(
_WIN32_WCE
) \

93 && !
deföed
(
_GNU_H_WINDOWS32_DEFINES
Ë&& !deföed(
OPENSTEP
) \

94 && !
deföed
(
__CYGWIN__
Ë|| 
	$deföed
(
__MINGW32__
)

95 
	~<GL/meß_wgl.h
>

98 #i‡
	`deföed
(
macötosh
Ë&& 
PRAGMA_IMPORT_SUPPORTED


99 #¥agm®
imp‹t
 
⁄


102 #i‚de‡
GLAPI


103 
	#GLAPI
 

	)

106 #i‚de‡
GLAPIENTRY


107 
	#GLAPIENTRY


	)

110 #i‚de‡
APIENTRY


111 
	#APIENTRY
 
GLAPIENTRY


	)

115 #i‚de‡
APIENTRYP


116 
	#APIENTRYP
 
APIENTRY
 *

	)

119 #i‚de‡
GLAPIENTRYP


120 
	#GLAPIENTRYP
 
GLAPIENTRY
 *

	)

123 #ifde‡
CENTERLINE_CLPP


124 sig√d

	)

127 #i‡
	`deföed
(
PRAGMA_EXPORT_SUPPORTED
)

128 #¥agm®
exp‹t
 
⁄


138 #ifde‡
__˝lu•lus


144 
	#GL_VERSION_1_1
 1

	)

145 
	#GL_VERSION_1_2
 1

	)

146 
	#GL_VERSION_1_3
 1

	)

147 
	#GL_ARB_imagög
 1

	)

153 
	tGLíum
;

154 
	tGLboﬁón
;

155 
	tGLbôfõld
;

156 
	tGLvoid
;

157 sig√d 
	tGLbyã
;

158 
	tGLsh‹t
;

159 
	tGLöt
;

160 
	tGLubyã
;

161 
	tGLush‹t
;

162 
	tGLuöt
;

163 
	tGLsizei
;

164 
	tGLÊﬂt
;

165 
	tGL˛ampf
;

166 
	tGLdoubÀ
;

167 
	tGL˛ampd
;

176 
	#GL_FALSE
 0x0

	)

177 
	#GL_TRUE
 0x1

	)

180 
	#GL_BYTE
 0x1400

	)

181 
	#GL_UNSIGNED_BYTE
 0x1401

	)

182 
	#GL_SHORT
 0x1402

	)

183 
	#GL_UNSIGNED_SHORT
 0x1403

	)

184 
	#GL_INT
 0x1404

	)

185 
	#GL_UNSIGNED_INT
 0x1405

	)

186 
	#GL_FLOAT
 0x1406

	)

187 
	#GL_2_BYTES
 0x1407

	)

188 
	#GL_3_BYTES
 0x1408

	)

189 
	#GL_4_BYTES
 0x1409

	)

190 
	#GL_DOUBLE
 0x140A

	)

193 
	#GL_POINTS
 0x0000

	)

194 
	#GL_LINES
 0x0001

	)

195 
	#GL_LINE_LOOP
 0x0002

	)

196 
	#GL_LINE_STRIP
 0x0003

	)

197 
	#GL_TRIANGLES
 0x0004

	)

198 
	#GL_TRIANGLE_STRIP
 0x0005

	)

199 
	#GL_TRIANGLE_FAN
 0x0006

	)

200 
	#GL_QUADS
 0x0007

	)

201 
	#GL_QUAD_STRIP
 0x0008

	)

202 
	#GL_POLYGON
 0x0009

	)

205 
	#GL_VERTEX_ARRAY
 0x8074

	)

206 
	#GL_NORMAL_ARRAY
 0x8075

	)

207 
	#GL_COLOR_ARRAY
 0x8076

	)

208 
	#GL_INDEX_ARRAY
 0x8077

	)

209 
	#GL_TEXTURE_COORD_ARRAY
 0x8078

	)

210 
	#GL_EDGE_FLAG_ARRAY
 0x8079

	)

211 
	#GL_VERTEX_ARRAY_SIZE
 0x807A

	)

212 
	#GL_VERTEX_ARRAY_TYPE
 0x807B

	)

213 
	#GL_VERTEX_ARRAY_STRIDE
 0x807C

	)

214 
	#GL_NORMAL_ARRAY_TYPE
 0x807E

	)

215 
	#GL_NORMAL_ARRAY_STRIDE
 0x807F

	)

216 
	#GL_COLOR_ARRAY_SIZE
 0x8081

	)

217 
	#GL_COLOR_ARRAY_TYPE
 0x8082

	)

218 
	#GL_COLOR_ARRAY_STRIDE
 0x8083

	)

219 
	#GL_INDEX_ARRAY_TYPE
 0x8085

	)

220 
	#GL_INDEX_ARRAY_STRIDE
 0x8086

	)

221 
	#GL_TEXTURE_COORD_ARRAY_SIZE
 0x8088

	)

222 
	#GL_TEXTURE_COORD_ARRAY_TYPE
 0x8089

	)

223 
	#GL_TEXTURE_COORD_ARRAY_STRIDE
 0x808A

	)

224 
	#GL_EDGE_FLAG_ARRAY_STRIDE
 0x808C

	)

225 
	#GL_VERTEX_ARRAY_POINTER
 0x808E

	)

226 
	#GL_NORMAL_ARRAY_POINTER
 0x808F

	)

227 
	#GL_COLOR_ARRAY_POINTER
 0x8090

	)

228 
	#GL_INDEX_ARRAY_POINTER
 0x8091

	)

229 
	#GL_TEXTURE_COORD_ARRAY_POINTER
 0x8092

	)

230 
	#GL_EDGE_FLAG_ARRAY_POINTER
 0x8093

	)

231 
	#GL_V2F
 0x2A20

	)

232 
	#GL_V3F
 0x2A21

	)

233 
	#GL_C4UB_V2F
 0x2A22

	)

234 
	#GL_C4UB_V3F
 0x2A23

	)

235 
	#GL_C3F_V3F
 0x2A24

	)

236 
	#GL_N3F_V3F
 0x2A25

	)

237 
	#GL_C4F_N3F_V3F
 0x2A26

	)

238 
	#GL_T2F_V3F
 0x2A27

	)

239 
	#GL_T4F_V4F
 0x2A28

	)

240 
	#GL_T2F_C4UB_V3F
 0x2A29

	)

241 
	#GL_T2F_C3F_V3F
 0x2A2A

	)

242 
	#GL_T2F_N3F_V3F
 0x2A2B

	)

243 
	#GL_T2F_C4F_N3F_V3F
 0x2A2C

	)

244 
	#GL_T4F_C4F_N3F_V4F
 0x2A2D

	)

247 
	#GL_MATRIX_MODE
 0x0BA0

	)

248 
	#GL_MODELVIEW
 0x1700

	)

249 
	#GL_PROJECTION
 0x1701

	)

250 
	#GL_TEXTURE
 0x1702

	)

253 
	#GL_POINT_SMOOTH
 0x0B10

	)

254 
	#GL_POINT_SIZE
 0x0B11

	)

255 
	#GL_POINT_SIZE_GRANULARITY
 0x0B13

	)

256 
	#GL_POINT_SIZE_RANGE
 0x0B12

	)

259 
	#GL_LINE_SMOOTH
 0x0B20

	)

260 
	#GL_LINE_STIPPLE
 0x0B24

	)

261 
	#GL_LINE_STIPPLE_PATTERN
 0x0B25

	)

262 
	#GL_LINE_STIPPLE_REPEAT
 0x0B26

	)

263 
	#GL_LINE_WIDTH
 0x0B21

	)

264 
	#GL_LINE_WIDTH_GRANULARITY
 0x0B23

	)

265 
	#GL_LINE_WIDTH_RANGE
 0x0B22

	)

268 
	#GL_POINT
 0x1B00

	)

269 
	#GL_LINE
 0x1B01

	)

270 
	#GL_FILL
 0x1B02

	)

271 
	#GL_CW
 0x0900

	)

272 
	#GL_CCW
 0x0901

	)

273 
	#GL_FRONT
 0x0404

	)

274 
	#GL_BACK
 0x0405

	)

275 
	#GL_POLYGON_MODE
 0x0B40

	)

276 
	#GL_POLYGON_SMOOTH
 0x0B41

	)

277 
	#GL_POLYGON_STIPPLE
 0x0B42

	)

278 
	#GL_EDGE_FLAG
 0x0B43

	)

279 
	#GL_CULL_FACE
 0x0B44

	)

280 
	#GL_CULL_FACE_MODE
 0x0B45

	)

281 
	#GL_FRONT_FACE
 0x0B46

	)

282 
	#GL_POLYGON_OFFSET_FACTOR
 0x8038

	)

283 
	#GL_POLYGON_OFFSET_UNITS
 0x2A00

	)

284 
	#GL_POLYGON_OFFSET_POINT
 0x2A01

	)

285 
	#GL_POLYGON_OFFSET_LINE
 0x2A02

	)

286 
	#GL_POLYGON_OFFSET_FILL
 0x8037

	)

289 
	#GL_COMPILE
 0x1300

	)

290 
	#GL_COMPILE_AND_EXECUTE
 0x1301

	)

291 
	#GL_LIST_BASE
 0x0B32

	)

292 
	#GL_LIST_INDEX
 0x0B33

	)

293 
	#GL_LIST_MODE
 0x0B30

	)

296 
	#GL_NEVER
 0x0200

	)

297 
	#GL_LESS
 0x0201

	)

298 
	#GL_EQUAL
 0x0202

	)

299 
	#GL_LEQUAL
 0x0203

	)

300 
	#GL_GREATER
 0x0204

	)

301 
	#GL_NOTEQUAL
 0x0205

	)

302 
	#GL_GEQUAL
 0x0206

	)

303 
	#GL_ALWAYS
 0x0207

	)

304 
	#GL_DEPTH_TEST
 0x0B71

	)

305 
	#GL_DEPTH_BITS
 0x0D56

	)

306 
	#GL_DEPTH_CLEAR_VALUE
 0x0B73

	)

307 
	#GL_DEPTH_FUNC
 0x0B74

	)

308 
	#GL_DEPTH_RANGE
 0x0B70

	)

309 
	#GL_DEPTH_WRITEMASK
 0x0B72

	)

310 
	#GL_DEPTH_COMPONENT
 0x1902

	)

313 
	#GL_LIGHTING
 0x0B50

	)

314 
	#GL_LIGHT0
 0x4000

	)

315 
	#GL_LIGHT1
 0x4001

	)

316 
	#GL_LIGHT2
 0x4002

	)

317 
	#GL_LIGHT3
 0x4003

	)

318 
	#GL_LIGHT4
 0x4004

	)

319 
	#GL_LIGHT5
 0x4005

	)

320 
	#GL_LIGHT6
 0x4006

	)

321 
	#GL_LIGHT7
 0x4007

	)

322 
	#GL_SPOT_EXPONENT
 0x1205

	)

323 
	#GL_SPOT_CUTOFF
 0x1206

	)

324 
	#GL_CONSTANT_ATTENUATION
 0x1207

	)

325 
	#GL_LINEAR_ATTENUATION
 0x1208

	)

326 
	#GL_QUADRATIC_ATTENUATION
 0x1209

	)

327 
	#GL_AMBIENT
 0x1200

	)

328 
	#GL_DIFFUSE
 0x1201

	)

329 
	#GL_SPECULAR
 0x1202

	)

330 
	#GL_SHININESS
 0x1601

	)

331 
	#GL_EMISSION
 0x1600

	)

332 
	#GL_POSITION
 0x1203

	)

333 
	#GL_SPOT_DIRECTION
 0x1204

	)

334 
	#GL_AMBIENT_AND_DIFFUSE
 0x1602

	)

335 
	#GL_COLOR_INDEXES
 0x1603

	)

336 
	#GL_LIGHT_MODEL_TWO_SIDE
 0x0B52

	)

337 
	#GL_LIGHT_MODEL_LOCAL_VIEWER
 0x0B51

	)

338 
	#GL_LIGHT_MODEL_AMBIENT
 0x0B53

	)

339 
	#GL_FRONT_AND_BACK
 0x0408

	)

340 
	#GL_SHADE_MODEL
 0x0B54

	)

341 
	#GL_FLAT
 0x1D00

	)

342 
	#GL_SMOOTH
 0x1D01

	)

343 
	#GL_COLOR_MATERIAL
 0x0B57

	)

344 
	#GL_COLOR_MATERIAL_FACE
 0x0B55

	)

345 
	#GL_COLOR_MATERIAL_PARAMETER
 0x0B56

	)

346 
	#GL_NORMALIZE
 0x0BA1

	)

349 
	#GL_CLIP_PLANE0
 0x3000

	)

350 
	#GL_CLIP_PLANE1
 0x3001

	)

351 
	#GL_CLIP_PLANE2
 0x3002

	)

352 
	#GL_CLIP_PLANE3
 0x3003

	)

353 
	#GL_CLIP_PLANE4
 0x3004

	)

354 
	#GL_CLIP_PLANE5
 0x3005

	)

357 
	#GL_ACCUM_RED_BITS
 0x0D58

	)

358 
	#GL_ACCUM_GREEN_BITS
 0x0D59

	)

359 
	#GL_ACCUM_BLUE_BITS
 0x0D5A

	)

360 
	#GL_ACCUM_ALPHA_BITS
 0x0D5B

	)

361 
	#GL_ACCUM_CLEAR_VALUE
 0x0B80

	)

362 
	#GL_ACCUM
 0x0100

	)

363 
	#GL_ADD
 0x0104

	)

364 
	#GL_LOAD
 0x0101

	)

365 
	#GL_MULT
 0x0103

	)

366 
	#GL_RETURN
 0x0102

	)

369 
	#GL_ALPHA_TEST
 0x0BC0

	)

370 
	#GL_ALPHA_TEST_REF
 0x0BC2

	)

371 
	#GL_ALPHA_TEST_FUNC
 0x0BC1

	)

374 
	#GL_BLEND
 0x0BE2

	)

375 
	#GL_BLEND_SRC
 0x0BE1

	)

376 
	#GL_BLEND_DST
 0x0BE0

	)

377 
	#GL_ZERO
 0x0

	)

378 
	#GL_ONE
 0x1

	)

379 
	#GL_SRC_COLOR
 0x0300

	)

380 
	#GL_ONE_MINUS_SRC_COLOR
 0x0301

	)

381 
	#GL_SRC_ALPHA
 0x0302

	)

382 
	#GL_ONE_MINUS_SRC_ALPHA
 0x0303

	)

383 
	#GL_DST_ALPHA
 0x0304

	)

384 
	#GL_ONE_MINUS_DST_ALPHA
 0x0305

	)

385 
	#GL_DST_COLOR
 0x0306

	)

386 
	#GL_ONE_MINUS_DST_COLOR
 0x0307

	)

387 
	#GL_SRC_ALPHA_SATURATE
 0x0308

	)

390 
	#GL_FEEDBACK
 0x1C01

	)

391 
	#GL_RENDER
 0x1C00

	)

392 
	#GL_SELECT
 0x1C02

	)

395 
	#GL_2D
 0x0600

	)

396 
	#GL_3D
 0x0601

	)

397 
	#GL_3D_COLOR
 0x0602

	)

398 
	#GL_3D_COLOR_TEXTURE
 0x0603

	)

399 
	#GL_4D_COLOR_TEXTURE
 0x0604

	)

400 
	#GL_POINT_TOKEN
 0x0701

	)

401 
	#GL_LINE_TOKEN
 0x0702

	)

402 
	#GL_LINE_RESET_TOKEN
 0x0707

	)

403 
	#GL_POLYGON_TOKEN
 0x0703

	)

404 
	#GL_BITMAP_TOKEN
 0x0704

	)

405 
	#GL_DRAW_PIXEL_TOKEN
 0x0705

	)

406 
	#GL_COPY_PIXEL_TOKEN
 0x0706

	)

407 
	#GL_PASS_THROUGH_TOKEN
 0x0700

	)

408 
	#GL_FEEDBACK_BUFFER_POINTER
 0x0DF0

	)

409 
	#GL_FEEDBACK_BUFFER_SIZE
 0x0DF1

	)

410 
	#GL_FEEDBACK_BUFFER_TYPE
 0x0DF2

	)

413 
	#GL_SELECTION_BUFFER_POINTER
 0x0DF3

	)

414 
	#GL_SELECTION_BUFFER_SIZE
 0x0DF4

	)

417 
	#GL_FOG
 0x0B60

	)

418 
	#GL_FOG_MODE
 0x0B65

	)

419 
	#GL_FOG_DENSITY
 0x0B62

	)

420 
	#GL_FOG_COLOR
 0x0B66

	)

421 
	#GL_FOG_INDEX
 0x0B61

	)

422 
	#GL_FOG_START
 0x0B63

	)

423 
	#GL_FOG_END
 0x0B64

	)

424 
	#GL_LINEAR
 0x2601

	)

425 
	#GL_EXP
 0x0800

	)

426 
	#GL_EXP2
 0x0801

	)

429 
	#GL_LOGIC_OP
 0x0BF1

	)

430 
	#GL_INDEX_LOGIC_OP
 0x0BF1

	)

431 
	#GL_COLOR_LOGIC_OP
 0x0BF2

	)

432 
	#GL_LOGIC_OP_MODE
 0x0BF0

	)

433 
	#GL_CLEAR
 0x1500

	)

434 
	#GL_SET
 0x150F

	)

435 
	#GL_COPY
 0x1503

	)

436 
	#GL_COPY_INVERTED
 0x150C

	)

437 
	#GL_NOOP
 0x1505

	)

438 
	#GL_INVERT
 0x150A

	)

439 
	#GL_AND
 0x1501

	)

440 
	#GL_NAND
 0x150E

	)

441 
	#GL_OR
 0x1507

	)

442 
	#GL_NOR
 0x1508

	)

443 
	#GL_XOR
 0x1506

	)

444 
	#GL_EQUIV
 0x1509

	)

445 
	#GL_AND_REVERSE
 0x1502

	)

446 
	#GL_AND_INVERTED
 0x1504

	)

447 
	#GL_OR_REVERSE
 0x150B

	)

448 
	#GL_OR_INVERTED
 0x150D

	)

451 
	#GL_STENCIL_BITS
 0x0D57

	)

452 
	#GL_STENCIL_TEST
 0x0B90

	)

453 
	#GL_STENCIL_CLEAR_VALUE
 0x0B91

	)

454 
	#GL_STENCIL_FUNC
 0x0B92

	)

455 
	#GL_STENCIL_VALUE_MASK
 0x0B93

	)

456 
	#GL_STENCIL_FAIL
 0x0B94

	)

457 
	#GL_STENCIL_PASS_DEPTH_FAIL
 0x0B95

	)

458 
	#GL_STENCIL_PASS_DEPTH_PASS
 0x0B96

	)

459 
	#GL_STENCIL_REF
 0x0B97

	)

460 
	#GL_STENCIL_WRITEMASK
 0x0B98

	)

461 
	#GL_STENCIL_INDEX
 0x1901

	)

462 
	#GL_KEEP
 0x1E00

	)

463 
	#GL_REPLACE
 0x1E01

	)

464 
	#GL_INCR
 0x1E02

	)

465 
	#GL_DECR
 0x1E03

	)

468 
	#GL_NONE
 0x0

	)

469 
	#GL_LEFT
 0x0406

	)

470 
	#GL_RIGHT
 0x0407

	)

474 
	#GL_FRONT_LEFT
 0x0400

	)

475 
	#GL_FRONT_RIGHT
 0x0401

	)

476 
	#GL_BACK_LEFT
 0x0402

	)

477 
	#GL_BACK_RIGHT
 0x0403

	)

478 
	#GL_AUX0
 0x0409

	)

479 
	#GL_AUX1
 0x040A

	)

480 
	#GL_AUX2
 0x040B

	)

481 
	#GL_AUX3
 0x040C

	)

482 
	#GL_COLOR_INDEX
 0x1900

	)

483 
	#GL_RED
 0x1903

	)

484 
	#GL_GREEN
 0x1904

	)

485 
	#GL_BLUE
 0x1905

	)

486 
	#GL_ALPHA
 0x1906

	)

487 
	#GL_LUMINANCE
 0x1909

	)

488 
	#GL_LUMINANCE_ALPHA
 0x190A

	)

489 
	#GL_ALPHA_BITS
 0x0D55

	)

490 
	#GL_RED_BITS
 0x0D52

	)

491 
	#GL_GREEN_BITS
 0x0D53

	)

492 
	#GL_BLUE_BITS
 0x0D54

	)

493 
	#GL_INDEX_BITS
 0x0D51

	)

494 
	#GL_SUBPIXEL_BITS
 0x0D50

	)

495 
	#GL_AUX_BUFFERS
 0x0C00

	)

496 
	#GL_READ_BUFFER
 0x0C02

	)

497 
	#GL_DRAW_BUFFER
 0x0C01

	)

498 
	#GL_DOUBLEBUFFER
 0x0C32

	)

499 
	#GL_STEREO
 0x0C33

	)

500 
	#GL_BITMAP
 0x1A00

	)

501 
	#GL_COLOR
 0x1800

	)

502 
	#GL_DEPTH
 0x1801

	)

503 
	#GL_STENCIL
 0x1802

	)

504 
	#GL_DITHER
 0x0BD0

	)

505 
	#GL_RGB
 0x1907

	)

506 
	#GL_RGBA
 0x1908

	)

509 
	#GL_MAX_LIST_NESTING
 0x0B31

	)

510 
	#GL_MAX_EVAL_ORDER
 0x0D30

	)

511 
	#GL_MAX_LIGHTS
 0x0D31

	)

512 
	#GL_MAX_CLIP_PLANES
 0x0D32

	)

513 
	#GL_MAX_TEXTURE_SIZE
 0x0D33

	)

514 
	#GL_MAX_PIXEL_MAP_TABLE
 0x0D34

	)

515 
	#GL_MAX_ATTRIB_STACK_DEPTH
 0x0D35

	)

516 
	#GL_MAX_MODELVIEW_STACK_DEPTH
 0x0D36

	)

517 
	#GL_MAX_NAME_STACK_DEPTH
 0x0D37

	)

518 
	#GL_MAX_PROJECTION_STACK_DEPTH
 0x0D38

	)

519 
	#GL_MAX_TEXTURE_STACK_DEPTH
 0x0D39

	)

520 
	#GL_MAX_VIEWPORT_DIMS
 0x0D3A

	)

521 
	#GL_MAX_CLIENT_ATTRIB_STACK_DEPTH
 0x0D3B

	)

524 
	#GL_ATTRIB_STACK_DEPTH
 0x0BB0

	)

525 
	#GL_CLIENT_ATTRIB_STACK_DEPTH
 0x0BB1

	)

526 
	#GL_COLOR_CLEAR_VALUE
 0x0C22

	)

527 
	#GL_COLOR_WRITEMASK
 0x0C23

	)

528 
	#GL_CURRENT_INDEX
 0x0B01

	)

529 
	#GL_CURRENT_COLOR
 0x0B00

	)

530 
	#GL_CURRENT_NORMAL
 0x0B02

	)

531 
	#GL_CURRENT_RASTER_COLOR
 0x0B04

	)

532 
	#GL_CURRENT_RASTER_DISTANCE
 0x0B09

	)

533 
	#GL_CURRENT_RASTER_INDEX
 0x0B05

	)

534 
	#GL_CURRENT_RASTER_POSITION
 0x0B07

	)

535 
	#GL_CURRENT_RASTER_TEXTURE_COORDS
 0x0B06

	)

536 
	#GL_CURRENT_RASTER_POSITION_VALID
 0x0B08

	)

537 
	#GL_CURRENT_TEXTURE_COORDS
 0x0B03

	)

538 
	#GL_INDEX_CLEAR_VALUE
 0x0C20

	)

539 
	#GL_INDEX_MODE
 0x0C30

	)

540 
	#GL_INDEX_WRITEMASK
 0x0C21

	)

541 
	#GL_MODELVIEW_MATRIX
 0x0BA6

	)

542 
	#GL_MODELVIEW_STACK_DEPTH
 0x0BA3

	)

543 
	#GL_NAME_STACK_DEPTH
 0x0D70

	)

544 
	#GL_PROJECTION_MATRIX
 0x0BA7

	)

545 
	#GL_PROJECTION_STACK_DEPTH
 0x0BA4

	)

546 
	#GL_RENDER_MODE
 0x0C40

	)

547 
	#GL_RGBA_MODE
 0x0C31

	)

548 
	#GL_TEXTURE_MATRIX
 0x0BA8

	)

549 
	#GL_TEXTURE_STACK_DEPTH
 0x0BA5

	)

550 
	#GL_VIEWPORT
 0x0BA2

	)

553 
	#GL_AUTO_NORMAL
 0x0D80

	)

554 
	#GL_MAP1_COLOR_4
 0x0D90

	)

555 
	#GL_MAP1_INDEX
 0x0D91

	)

556 
	#GL_MAP1_NORMAL
 0x0D92

	)

557 
	#GL_MAP1_TEXTURE_COORD_1
 0x0D93

	)

558 
	#GL_MAP1_TEXTURE_COORD_2
 0x0D94

	)

559 
	#GL_MAP1_TEXTURE_COORD_3
 0x0D95

	)

560 
	#GL_MAP1_TEXTURE_COORD_4
 0x0D96

	)

561 
	#GL_MAP1_VERTEX_3
 0x0D97

	)

562 
	#GL_MAP1_VERTEX_4
 0x0D98

	)

563 
	#GL_MAP2_COLOR_4
 0x0DB0

	)

564 
	#GL_MAP2_INDEX
 0x0DB1

	)

565 
	#GL_MAP2_NORMAL
 0x0DB2

	)

566 
	#GL_MAP2_TEXTURE_COORD_1
 0x0DB3

	)

567 
	#GL_MAP2_TEXTURE_COORD_2
 0x0DB4

	)

568 
	#GL_MAP2_TEXTURE_COORD_3
 0x0DB5

	)

569 
	#GL_MAP2_TEXTURE_COORD_4
 0x0DB6

	)

570 
	#GL_MAP2_VERTEX_3
 0x0DB7

	)

571 
	#GL_MAP2_VERTEX_4
 0x0DB8

	)

572 
	#GL_MAP1_GRID_DOMAIN
 0x0DD0

	)

573 
	#GL_MAP1_GRID_SEGMENTS
 0x0DD1

	)

574 
	#GL_MAP2_GRID_DOMAIN
 0x0DD2

	)

575 
	#GL_MAP2_GRID_SEGMENTS
 0x0DD3

	)

576 
	#GL_COEFF
 0x0A00

	)

577 
	#GL_ORDER
 0x0A01

	)

578 
	#GL_DOMAIN
 0x0A02

	)

581 
	#GL_PERSPECTIVE_CORRECTION_HINT
 0x0C50

	)

582 
	#GL_POINT_SMOOTH_HINT
 0x0C51

	)

583 
	#GL_LINE_SMOOTH_HINT
 0x0C52

	)

584 
	#GL_POLYGON_SMOOTH_HINT
 0x0C53

	)

585 
	#GL_FOG_HINT
 0x0C54

	)

586 
	#GL_DONT_CARE
 0x1100

	)

587 
	#GL_FASTEST
 0x1101

	)

588 
	#GL_NICEST
 0x1102

	)

591 
	#GL_SCISSOR_BOX
 0x0C10

	)

592 
	#GL_SCISSOR_TEST
 0x0C11

	)

595 
	#GL_MAP_COLOR
 0x0D10

	)

596 
	#GL_MAP_STENCIL
 0x0D11

	)

597 
	#GL_INDEX_SHIFT
 0x0D12

	)

598 
	#GL_INDEX_OFFSET
 0x0D13

	)

599 
	#GL_RED_SCALE
 0x0D14

	)

600 
	#GL_RED_BIAS
 0x0D15

	)

601 
	#GL_GREEN_SCALE
 0x0D18

	)

602 
	#GL_GREEN_BIAS
 0x0D19

	)

603 
	#GL_BLUE_SCALE
 0x0D1A

	)

604 
	#GL_BLUE_BIAS
 0x0D1B

	)

605 
	#GL_ALPHA_SCALE
 0x0D1C

	)

606 
	#GL_ALPHA_BIAS
 0x0D1D

	)

607 
	#GL_DEPTH_SCALE
 0x0D1E

	)

608 
	#GL_DEPTH_BIAS
 0x0D1F

	)

609 
	#GL_PIXEL_MAP_S_TO_S_SIZE
 0x0CB1

	)

610 
	#GL_PIXEL_MAP_I_TO_I_SIZE
 0x0CB0

	)

611 
	#GL_PIXEL_MAP_I_TO_R_SIZE
 0x0CB2

	)

612 
	#GL_PIXEL_MAP_I_TO_G_SIZE
 0x0CB3

	)

613 
	#GL_PIXEL_MAP_I_TO_B_SIZE
 0x0CB4

	)

614 
	#GL_PIXEL_MAP_I_TO_A_SIZE
 0x0CB5

	)

615 
	#GL_PIXEL_MAP_R_TO_R_SIZE
 0x0CB6

	)

616 
	#GL_PIXEL_MAP_G_TO_G_SIZE
 0x0CB7

	)

617 
	#GL_PIXEL_MAP_B_TO_B_SIZE
 0x0CB8

	)

618 
	#GL_PIXEL_MAP_A_TO_A_SIZE
 0x0CB9

	)

619 
	#GL_PIXEL_MAP_S_TO_S
 0x0C71

	)

620 
	#GL_PIXEL_MAP_I_TO_I
 0x0C70

	)

621 
	#GL_PIXEL_MAP_I_TO_R
 0x0C72

	)

622 
	#GL_PIXEL_MAP_I_TO_G
 0x0C73

	)

623 
	#GL_PIXEL_MAP_I_TO_B
 0x0C74

	)

624 
	#GL_PIXEL_MAP_I_TO_A
 0x0C75

	)

625 
	#GL_PIXEL_MAP_R_TO_R
 0x0C76

	)

626 
	#GL_PIXEL_MAP_G_TO_G
 0x0C77

	)

627 
	#GL_PIXEL_MAP_B_TO_B
 0x0C78

	)

628 
	#GL_PIXEL_MAP_A_TO_A
 0x0C79

	)

629 
	#GL_PACK_ALIGNMENT
 0x0D05

	)

630 
	#GL_PACK_LSB_FIRST
 0x0D01

	)

631 
	#GL_PACK_ROW_LENGTH
 0x0D02

	)

632 
	#GL_PACK_SKIP_PIXELS
 0x0D04

	)

633 
	#GL_PACK_SKIP_ROWS
 0x0D03

	)

634 
	#GL_PACK_SWAP_BYTES
 0x0D00

	)

635 
	#GL_UNPACK_ALIGNMENT
 0x0CF5

	)

636 
	#GL_UNPACK_LSB_FIRST
 0x0CF1

	)

637 
	#GL_UNPACK_ROW_LENGTH
 0x0CF2

	)

638 
	#GL_UNPACK_SKIP_PIXELS
 0x0CF4

	)

639 
	#GL_UNPACK_SKIP_ROWS
 0x0CF3

	)

640 
	#GL_UNPACK_SWAP_BYTES
 0x0CF0

	)

641 
	#GL_ZOOM_X
 0x0D16

	)

642 
	#GL_ZOOM_Y
 0x0D17

	)

645 
	#GL_TEXTURE_ENV
 0x2300

	)

646 
	#GL_TEXTURE_ENV_MODE
 0x2200

	)

647 
	#GL_TEXTURE_1D
 0x0DE0

	)

648 
	#GL_TEXTURE_2D
 0x0DE1

	)

649 
	#GL_TEXTURE_WRAP_S
 0x2802

	)

650 
	#GL_TEXTURE_WRAP_T
 0x2803

	)

651 
	#GL_TEXTURE_MAG_FILTER
 0x2800

	)

652 
	#GL_TEXTURE_MIN_FILTER
 0x2801

	)

653 
	#GL_TEXTURE_ENV_COLOR
 0x2201

	)

654 
	#GL_TEXTURE_GEN_S
 0x0C60

	)

655 
	#GL_TEXTURE_GEN_T
 0x0C61

	)

656 
	#GL_TEXTURE_GEN_MODE
 0x2500

	)

657 
	#GL_TEXTURE_BORDER_COLOR
 0x1004

	)

658 
	#GL_TEXTURE_WIDTH
 0x1000

	)

659 
	#GL_TEXTURE_HEIGHT
 0x1001

	)

660 
	#GL_TEXTURE_BORDER
 0x1005

	)

661 
	#GL_TEXTURE_COMPONENTS
 0x1003

	)

662 
	#GL_TEXTURE_RED_SIZE
 0x805C

	)

663 
	#GL_TEXTURE_GREEN_SIZE
 0x805D

	)

664 
	#GL_TEXTURE_BLUE_SIZE
 0x805E

	)

665 
	#GL_TEXTURE_ALPHA_SIZE
 0x805F

	)

666 
	#GL_TEXTURE_LUMINANCE_SIZE
 0x8060

	)

667 
	#GL_TEXTURE_INTENSITY_SIZE
 0x8061

	)

668 
	#GL_NEAREST_MIPMAP_NEAREST
 0x2700

	)

669 
	#GL_NEAREST_MIPMAP_LINEAR
 0x2702

	)

670 
	#GL_LINEAR_MIPMAP_NEAREST
 0x2701

	)

671 
	#GL_LINEAR_MIPMAP_LINEAR
 0x2703

	)

672 
	#GL_OBJECT_LINEAR
 0x2401

	)

673 
	#GL_OBJECT_PLANE
 0x2501

	)

674 
	#GL_EYE_LINEAR
 0x2400

	)

675 
	#GL_EYE_PLANE
 0x2502

	)

676 
	#GL_SPHERE_MAP
 0x2402

	)

677 
	#GL_DECAL
 0x2101

	)

678 
	#GL_MODULATE
 0x2100

	)

679 
	#GL_NEAREST
 0x2600

	)

680 
	#GL_REPEAT
 0x2901

	)

681 
	#GL_CLAMP
 0x2900

	)

682 
	#GL_S
 0x2000

	)

683 
	#GL_T
 0x2001

	)

684 
	#GL_R
 0x2002

	)

685 
	#GL_Q
 0x2003

	)

686 
	#GL_TEXTURE_GEN_R
 0x0C62

	)

687 
	#GL_TEXTURE_GEN_Q
 0x0C63

	)

690 
	#GL_VENDOR
 0x1F00

	)

691 
	#GL_RENDERER
 0x1F01

	)

692 
	#GL_VERSION
 0x1F02

	)

693 
	#GL_EXTENSIONS
 0x1F03

	)

696 
	#GL_NO_ERROR
 0x0

	)

697 
	#GL_INVALID_ENUM
 0x0500

	)

698 
	#GL_INVALID_VALUE
 0x0501

	)

699 
	#GL_INVALID_OPERATION
 0x0502

	)

700 
	#GL_STACK_OVERFLOW
 0x0503

	)

701 
	#GL_STACK_UNDERFLOW
 0x0504

	)

702 
	#GL_OUT_OF_MEMORY
 0x0505

	)

705 
	#GL_CURRENT_BIT
 0x00000001

	)

706 
	#GL_POINT_BIT
 0x00000002

	)

707 
	#GL_LINE_BIT
 0x00000004

	)

708 
	#GL_POLYGON_BIT
 0x00000008

	)

709 
	#GL_POLYGON_STIPPLE_BIT
 0x00000010

	)

710 
	#GL_PIXEL_MODE_BIT
 0x00000020

	)

711 
	#GL_LIGHTING_BIT
 0x00000040

	)

712 
	#GL_FOG_BIT
 0x00000080

	)

713 
	#GL_DEPTH_BUFFER_BIT
 0x00000100

	)

714 
	#GL_ACCUM_BUFFER_BIT
 0x00000200

	)

715 
	#GL_STENCIL_BUFFER_BIT
 0x00000400

	)

716 
	#GL_VIEWPORT_BIT
 0x00000800

	)

717 
	#GL_TRANSFORM_BIT
 0x00001000

	)

718 
	#GL_ENABLE_BIT
 0x00002000

	)

719 
	#GL_COLOR_BUFFER_BIT
 0x00004000

	)

720 
	#GL_HINT_BIT
 0x00008000

	)

721 
	#GL_EVAL_BIT
 0x00010000

	)

722 
	#GL_LIST_BIT
 0x00020000

	)

723 
	#GL_TEXTURE_BIT
 0x00040000

	)

724 
	#GL_SCISSOR_BIT
 0x00080000

	)

725 
	#GL_ALL_ATTRIB_BITS
 0x000FFFFF

	)

729 
	#GL_PROXY_TEXTURE_1D
 0x8063

	)

730 
	#GL_PROXY_TEXTURE_2D
 0x8064

	)

731 
	#GL_TEXTURE_PRIORITY
 0x8066

	)

732 
	#GL_TEXTURE_RESIDENT
 0x8067

	)

733 
	#GL_TEXTURE_BINDING_1D
 0x8068

	)

734 
	#GL_TEXTURE_BINDING_2D
 0x8069

	)

735 
	#GL_TEXTURE_INTERNAL_FORMAT
 0x1003

	)

736 
	#GL_ALPHA4
 0x803B

	)

737 
	#GL_ALPHA8
 0x803C

	)

738 
	#GL_ALPHA12
 0x803D

	)

739 
	#GL_ALPHA16
 0x803E

	)

740 
	#GL_LUMINANCE4
 0x803F

	)

741 
	#GL_LUMINANCE8
 0x8040

	)

742 
	#GL_LUMINANCE12
 0x8041

	)

743 
	#GL_LUMINANCE16
 0x8042

	)

744 
	#GL_LUMINANCE4_ALPHA4
 0x8043

	)

745 
	#GL_LUMINANCE6_ALPHA2
 0x8044

	)

746 
	#GL_LUMINANCE8_ALPHA8
 0x8045

	)

747 
	#GL_LUMINANCE12_ALPHA4
 0x8046

	)

748 
	#GL_LUMINANCE12_ALPHA12
 0x8047

	)

749 
	#GL_LUMINANCE16_ALPHA16
 0x8048

	)

750 
	#GL_INTENSITY
 0x8049

	)

751 
	#GL_INTENSITY4
 0x804A

	)

752 
	#GL_INTENSITY8
 0x804B

	)

753 
	#GL_INTENSITY12
 0x804C

	)

754 
	#GL_INTENSITY16
 0x804D

	)

755 
	#GL_R3_G3_B2
 0x2A10

	)

756 
	#GL_RGB4
 0x804F

	)

757 
	#GL_RGB5
 0x8050

	)

758 
	#GL_RGB8
 0x8051

	)

759 
	#GL_RGB10
 0x8052

	)

760 
	#GL_RGB12
 0x8053

	)

761 
	#GL_RGB16
 0x8054

	)

762 
	#GL_RGBA2
 0x8055

	)

763 
	#GL_RGBA4
 0x8056

	)

764 
	#GL_RGB5_A1
 0x8057

	)

765 
	#GL_RGBA8
 0x8058

	)

766 
	#GL_RGB10_A2
 0x8059

	)

767 
	#GL_RGBA12
 0x805A

	)

768 
	#GL_RGBA16
 0x805B

	)

769 
	#GL_CLIENT_PIXEL_STORE_BIT
 0x00000001

	)

770 
	#GL_CLIENT_VERTEX_ARRAY_BIT
 0x00000002

	)

771 
	#GL_ALL_CLIENT_ATTRIB_BITS
 0xFFFFFFFF

	)

772 
	#GL_CLIENT_ALL_ATTRIB_BITS
 0xFFFFFFFF

	)

780 
GLAPI
 
GLAPIENTRY
 
	`glCÀ¨Index
–
GLÊﬂt
 
c
 );

782 
GLAPI
 
GLAPIENTRY
 
	`glCÀ¨Cﬁ‹
–
GL˛ampf
 
ªd
, GL˛amp‡
gªí
, GL˛amp‡
blue
, GL˛amp‡
Æpha
 );

784 
GLAPI
 
GLAPIENTRY
 
	`glCÀ¨
–
GLbôfõld
 
mask
 );

786 
GLAPI
 
GLAPIENTRY
 
	`glIndexMask
–
GLuöt
 
mask
 );

788 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹Mask
–
GLboﬁón
 
ªd
, GLboﬁó¿
gªí
, GLboﬁó¿
blue
, GLboﬁó¿
Æpha
 );

790 
GLAPI
 
GLAPIENTRY
 
	`glAÕhaFunc
–
GLíum
 
func
, 
GL˛ampf
 
ªf
 );

792 
GLAPI
 
GLAPIENTRY
 
	`glBÀndFunc
–
GLíum
 
sÁ˘‹
, GLíum 
dÁ˘‹
 );

794 
GLAPI
 
GLAPIENTRY
 
	`glLogicOp
–
GLíum
 
›code
 );

796 
GLAPI
 
GLAPIENTRY
 
	`glCuŒFa˚
–
GLíum
 
mode
 );

798 
GLAPI
 
GLAPIENTRY
 
	`glFr⁄tFa˚
–
GLíum
 
mode
 );

800 
GLAPI
 
GLAPIENTRY
 
	`glPoötSize
–
GLÊﬂt
 
size
 );

802 
GLAPI
 
GLAPIENTRY
 
	`glLöeWidth
–
GLÊﬂt
 
width
 );

804 
GLAPI
 
GLAPIENTRY
 
	`glLöeStù∂e
–
GLöt
 
Á˘‹
, 
GLush‹t
 
∑âîn
 );

806 
GLAPI
 
GLAPIENTRY
 
	`glPﬁyg⁄Mode
–
GLíum
 
Á˚
, GLíum 
mode
 );

808 
GLAPI
 
GLAPIENTRY
 
	`glPﬁyg⁄Off£t
–
GLÊﬂt
 
Á˘‹
, GLÊﬂà
unôs
 );

810 
GLAPI
 
GLAPIENTRY
 
	`glPﬁyg⁄Stù∂e
–c⁄° 
GLubyã
 *
mask
 );

812 
GLAPI
 
GLAPIENTRY
 
	`glGëPﬁyg⁄Stù∂e
–
GLubyã
 *
mask
 );

814 
GLAPI
 
GLAPIENTRY
 
	`glEdgeFœg
–
GLboﬁón
 
Êag
 );

816 
GLAPI
 
GLAPIENTRY
 
	`glEdgeFœgv
–c⁄° 
GLboﬁón
 *
Êag
 );

818 
GLAPI
 
GLAPIENTRY
 
	`glSciss‹
–
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
, GLsizeò
height
);

820 
GLAPI
 
GLAPIENTRY
 
	`glClùPœ√
–
GLíum
 
∂™e
, c⁄° 
GLdoubÀ
 *
equ©i⁄
 );

822 
GLAPI
 
GLAPIENTRY
 
	`glGëClùPœ√
–
GLíum
 
∂™e
, 
GLdoubÀ
 *
equ©i⁄
 );

824 
GLAPI
 
GLAPIENTRY
 
	`glDøwBuf„r
–
GLíum
 
mode
 );

826 
GLAPI
 
GLAPIENTRY
 
	`glRódBuf„r
–
GLíum
 
mode
 );

828 
GLAPI
 
GLAPIENTRY
 
	`glE«bÀ
–
GLíum
 
ˇp
 );

830 
GLAPI
 
GLAPIENTRY
 
	`glDißbÀ
–
GLíum
 
ˇp
 );

832 
GLAPI
 
GLboﬁón
 
GLAPIENTRY
 
	`glIsE«bÀd
–
GLíum
 
ˇp
 );

835 
GLAPI
 
GLAPIENTRY
 
	`glE«bÀClõ¡Sèã
–
GLíum
 
ˇp
 );

837 
GLAPI
 
GLAPIENTRY
 
	`glDißbÀClõ¡Sèã
–
GLíum
 
ˇp
 );

840 
GLAPI
 
GLAPIENTRY
 
	`glGëBoﬁónv
–
GLíum
 
≤ame
, 
GLboﬁón
 *
∑øms
 );

842 
GLAPI
 
GLAPIENTRY
 
	`glGëDoubÀv
–
GLíum
 
≤ame
, 
GLdoubÀ
 *
∑øms
 );

844 
GLAPI
 
GLAPIENTRY
 
	`glGëFlﬂtv
–
GLíum
 
≤ame
, 
GLÊﬂt
 *
∑øms
 );

846 
GLAPI
 
GLAPIENTRY
 
	`glGëI¡egîv
–
GLíum
 
≤ame
, 
GLöt
 *
∑øms
 );

849 
GLAPI
 
GLAPIENTRY
 
	`glPushAârib
–
GLbôfõld
 
mask
 );

851 
GLAPI
 
GLAPIENTRY
 
	`glP›Aârib
( );

854 
GLAPI
 
GLAPIENTRY
 
	`glPushClõ¡Aârib
–
GLbôfõld
 
mask
 );

856 
GLAPI
 
GLAPIENTRY
 
	`glP›Clõ¡Aârib
( );

859 
GLAPI
 
GLöt
 
GLAPIENTRY
 
	`glRídîMode
–
GLíum
 
mode
 );

861 
GLAPI
 
GLíum
 
GLAPIENTRY
 
	`glGëEº‹
( );

863 
GLAPI
 c⁄° 
GLubyã
 * 
GLAPIENTRY
 
	`glGëSåög
–
GLíum
 
«me
 );

865 
GLAPI
 
GLAPIENTRY
 
	`glFöish
( );

867 
GLAPI
 
GLAPIENTRY
 
	`glFlush
( );

869 
GLAPI
 
GLAPIENTRY
 
	`glHöt
–
GLíum
 
èrgë
, GLíum 
mode
 );

876 
GLAPI
 
GLAPIENTRY
 
	`glCÀ¨Dïth
–
GL˛ampd
 
dïth
 );

878 
GLAPI
 
GLAPIENTRY
 
	`glDïthFunc
–
GLíum
 
func
 );

880 
GLAPI
 
GLAPIENTRY
 
	`glDïthMask
–
GLboﬁón
 
Êag
 );

882 
GLAPI
 
GLAPIENTRY
 
	`glDïthR™ge
–
GL˛ampd
 
√¨_vÆ
, GL˛ampd 
Ár_vÆ
 );

889 
GLAPI
 
GLAPIENTRY
 
	`glCÀ¨Accum
–
GLÊﬂt
 
ªd
, GLÊﬂà
gªí
, GLÊﬂà
blue
, GLÊﬂà
Æpha
 );

891 
GLAPI
 
GLAPIENTRY
 
	`glAccum
–
GLíum
 
›
, 
GLÊﬂt
 
vÆue
 );

898 
GLAPI
 
GLAPIENTRY
 
	`glM©rixMode
–
GLíum
 
mode
 );

900 
GLAPI
 
GLAPIENTRY
 
	`glOπho
–
GLdoubÀ
 
À·
, GLdoubÀ 
right
,

901 
GLdoubÀ
 
bŸtom
, GLdoubÀ 
t›
,

902 
GLdoubÀ
 
√¨_vÆ
, GLdoubÀ 
Ár_vÆ
 );

904 
GLAPI
 
GLAPIENTRY
 
	`glFru°um
–
GLdoubÀ
 
À·
, GLdoubÀ 
right
,

905 
GLdoubÀ
 
bŸtom
, GLdoubÀ 
t›
,

906 
GLdoubÀ
 
√¨_vÆ
, GLdoubÀ 
Ár_vÆ
 );

908 
GLAPI
 
GLAPIENTRY
 
	`glVõwp‹t
–
GLöt
 
x
, GLöà
y
,

909 
GLsizei
 
width
, GLsizeò
height
 );

911 
GLAPI
 
GLAPIENTRY
 
	`glPushM©rix
( );

913 
GLAPI
 
GLAPIENTRY
 
	`glP›M©rix
( );

915 
GLAPI
 
GLAPIENTRY
 
	`glLﬂdIdítôy
( );

917 
GLAPI
 
GLAPIENTRY
 
	`glLﬂdM©rixd
–c⁄° 
GLdoubÀ
 *
m
 );

918 
GLAPI
 
GLAPIENTRY
 
	`glLﬂdM©rixf
–c⁄° 
GLÊﬂt
 *
m
 );

920 
GLAPI
 
GLAPIENTRY
 
	`glMu…M©rixd
–c⁄° 
GLdoubÀ
 *
m
 );

921 
GLAPI
 
GLAPIENTRY
 
	`glMu…M©rixf
–c⁄° 
GLÊﬂt
 *
m
 );

923 
GLAPI
 
GLAPIENTRY
 
	`glRŸ©ed
–
GLdoubÀ
 
™gÀ
,

924 
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
 );

925 
GLAPI
 
GLAPIENTRY
 
	`glRŸ©ef
–
GLÊﬂt
 
™gÀ
,

926 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
 );

928 
GLAPI
 
GLAPIENTRY
 
	`glSˇÀd
–
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
 );

929 
GLAPI
 
GLAPIENTRY
 
	`glSˇÀf
–
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
 );

931 
GLAPI
 
GLAPIENTRY
 
	`glTøn¶©ed
–
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
 );

932 
GLAPI
 
GLAPIENTRY
 
	`glTøn¶©ef
–
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
 );

939 
GLAPI
 
GLboﬁón
 
GLAPIENTRY
 
	`glIsLi°
–
GLuöt
 
li°
 );

941 
GLAPI
 
GLAPIENTRY
 
	`glDñëeLi°s
–
GLuöt
 
li°
, 
GLsizei
 
ønge
 );

943 
GLAPI
 
GLuöt
 
GLAPIENTRY
 
	`glGíLi°s
–
GLsizei
 
ønge
 );

945 
GLAPI
 
GLAPIENTRY
 
	`glNewLi°
–
GLuöt
 
li°
, 
GLíum
 
mode
 );

947 
GLAPI
 
GLAPIENTRY
 
	`glEndLi°
( );

949 
GLAPI
 
GLAPIENTRY
 
	`glCÆlLi°
–
GLuöt
 
li°
 );

951 
GLAPI
 
GLAPIENTRY
 
	`glCÆlLi°s
–
GLsizei
 
n
, 
GLíum
 
ty≥
,

952 c⁄° 
GLvoid
 *
li°s
 );

954 
GLAPI
 
GLAPIENTRY
 
	`glLi°Ba£
–
GLuöt
 
ba£
 );

961 
GLAPI
 
GLAPIENTRY
 
	`glBegö
–
GLíum
 
mode
 );

963 
GLAPI
 
GLAPIENTRY
 
	`glEnd
( );

966 
GLAPI
 
GLAPIENTRY
 
	`glVîãx2d
–
GLdoubÀ
 
x
, GLdoubÀ 
y
 );

967 
GLAPI
 
GLAPIENTRY
 
	`glVîãx2f
–
GLÊﬂt
 
x
, GLÊﬂà
y
 );

968 
GLAPI
 
GLAPIENTRY
 
	`glVîãx2i
–
GLöt
 
x
, GLöà
y
 );

969 
GLAPI
 
GLAPIENTRY
 
	`glVîãx2s
–
GLsh‹t
 
x
, GLsh‹à
y
 );

971 
GLAPI
 
GLAPIENTRY
 
	`glVîãx3d
–
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
 );

972 
GLAPI
 
GLAPIENTRY
 
	`glVîãx3f
–
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
 );

973 
GLAPI
 
GLAPIENTRY
 
	`glVîãx3i
–
GLöt
 
x
, GLöà
y
, GLöà
z
 );

974 
GLAPI
 
GLAPIENTRY
 
	`glVîãx3s
–
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
 );

976 
GLAPI
 
GLAPIENTRY
 
	`glVîãx4d
–
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
, GLdoubÀ 
w
 );

977 
GLAPI
 
GLAPIENTRY
 
	`glVîãx4f
–
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
, GLÊﬂà
w
 );

978 
GLAPI
 
GLAPIENTRY
 
	`glVîãx4i
–
GLöt
 
x
, GLöà
y
, GLöà
z
, GLöà
w
 );

979 
GLAPI
 
GLAPIENTRY
 
	`glVîãx4s
–
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
, GLsh‹à
w
 );

981 
GLAPI
 
GLAPIENTRY
 
	`glVîãx2dv
–c⁄° 
GLdoubÀ
 *
v
 );

982 
GLAPI
 
GLAPIENTRY
 
	`glVîãx2fv
–c⁄° 
GLÊﬂt
 *
v
 );

983 
GLAPI
 
GLAPIENTRY
 
	`glVîãx2iv
–c⁄° 
GLöt
 *
v
 );

984 
GLAPI
 
GLAPIENTRY
 
	`glVîãx2sv
–c⁄° 
GLsh‹t
 *
v
 );

986 
GLAPI
 
GLAPIENTRY
 
	`glVîãx3dv
–c⁄° 
GLdoubÀ
 *
v
 );

987 
GLAPI
 
GLAPIENTRY
 
	`glVîãx3fv
–c⁄° 
GLÊﬂt
 *
v
 );

988 
GLAPI
 
GLAPIENTRY
 
	`glVîãx3iv
–c⁄° 
GLöt
 *
v
 );

989 
GLAPI
 
GLAPIENTRY
 
	`glVîãx3sv
–c⁄° 
GLsh‹t
 *
v
 );

991 
GLAPI
 
GLAPIENTRY
 
	`glVîãx4dv
–c⁄° 
GLdoubÀ
 *
v
 );

992 
GLAPI
 
GLAPIENTRY
 
	`glVîãx4fv
–c⁄° 
GLÊﬂt
 *
v
 );

993 
GLAPI
 
GLAPIENTRY
 
	`glVîãx4iv
–c⁄° 
GLöt
 *
v
 );

994 
GLAPI
 
GLAPIENTRY
 
	`glVîãx4sv
–c⁄° 
GLsh‹t
 *
v
 );

997 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3b
–
GLbyã
 
nx
, GLbyã 
ny
, GLbyã 
nz
 );

998 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3d
–
GLdoubÀ
 
nx
, GLdoubÀ 
ny
, GLdoubÀ 
nz
 );

999 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3f
–
GLÊﬂt
 
nx
, GLÊﬂà
ny
, GLÊﬂà
nz
 );

1000 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3i
–
GLöt
 
nx
, GLöà
ny
, GLöà
nz
 );

1001 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3s
–
GLsh‹t
 
nx
, GLsh‹à
ny
, GLsh‹à
nz
 );

1003 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3bv
–c⁄° 
GLbyã
 *
v
 );

1004 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3dv
–c⁄° 
GLdoubÀ
 *
v
 );

1005 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3fv
–c⁄° 
GLÊﬂt
 *
v
 );

1006 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3iv
–c⁄° 
GLöt
 *
v
 );

1007 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3sv
–c⁄° 
GLsh‹t
 *
v
 );

1010 
GLAPI
 
GLAPIENTRY
 
	`glIndexd
–
GLdoubÀ
 
c
 );

1011 
GLAPI
 
GLAPIENTRY
 
	`glIndexf
–
GLÊﬂt
 
c
 );

1012 
GLAPI
 
GLAPIENTRY
 
	`glIndexi
–
GLöt
 
c
 );

1013 
GLAPI
 
GLAPIENTRY
 
	`glIndexs
–
GLsh‹t
 
c
 );

1014 
GLAPI
 
GLAPIENTRY
 
	`glIndexub
–
GLubyã
 
c
 );

1016 
GLAPI
 
GLAPIENTRY
 
	`glIndexdv
–c⁄° 
GLdoubÀ
 *
c
 );

1017 
GLAPI
 
GLAPIENTRY
 
	`glIndexfv
–c⁄° 
GLÊﬂt
 *
c
 );

1018 
GLAPI
 
GLAPIENTRY
 
	`glIndexiv
–c⁄° 
GLöt
 *
c
 );

1019 
GLAPI
 
GLAPIENTRY
 
	`glIndexsv
–c⁄° 
GLsh‹t
 *
c
 );

1020 
GLAPI
 
GLAPIENTRY
 
	`glIndexubv
–c⁄° 
GLubyã
 *
c
 );

1022 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3b
–
GLbyã
 
ªd
, GLbyã 
gªí
, GLbyã 
blue
 );

1023 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3d
–
GLdoubÀ
 
ªd
, GLdoubÀ 
gªí
, GLdoubÀ 
blue
 );

1024 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3f
–
GLÊﬂt
 
ªd
, GLÊﬂà
gªí
, GLÊﬂà
blue
 );

1025 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3i
–
GLöt
 
ªd
, GLöà
gªí
, GLöà
blue
 );

1026 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3s
–
GLsh‹t
 
ªd
, GLsh‹à
gªí
, GLsh‹à
blue
 );

1027 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3ub
–
GLubyã
 
ªd
, GLubyã 
gªí
, GLubyã 
blue
 );

1028 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3ui
–
GLuöt
 
ªd
, GLuöà
gªí
, GLuöà
blue
 );

1029 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3us
–
GLush‹t
 
ªd
, GLush‹à
gªí
, GLush‹à
blue
 );

1031 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4b
–
GLbyã
 
ªd
, GLbyã 
gªí
,

1032 
GLbyã
 
blue
, GLbyã 
Æpha
 );

1033 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4d
–
GLdoubÀ
 
ªd
, GLdoubÀ 
gªí
,

1034 
GLdoubÀ
 
blue
, GLdoubÀ 
Æpha
 );

1035 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4f
–
GLÊﬂt
 
ªd
, GLÊﬂà
gªí
,

1036 
GLÊﬂt
 
blue
, GLÊﬂà
Æpha
 );

1037 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4i
–
GLöt
 
ªd
, GLöà
gªí
,

1038 
GLöt
 
blue
, GLöà
Æpha
 );

1039 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4s
–
GLsh‹t
 
ªd
, GLsh‹à
gªí
,

1040 
GLsh‹t
 
blue
, GLsh‹à
Æpha
 );

1041 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4ub
–
GLubyã
 
ªd
, GLubyã 
gªí
,

1042 
GLubyã
 
blue
, GLubyã 
Æpha
 );

1043 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4ui
–
GLuöt
 
ªd
, GLuöà
gªí
,

1044 
GLuöt
 
blue
, GLuöà
Æpha
 );

1045 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4us
–
GLush‹t
 
ªd
, GLush‹à
gªí
,

1046 
GLush‹t
 
blue
, GLush‹à
Æpha
 );

1049 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3bv
–c⁄° 
GLbyã
 *
v
 );

1050 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3dv
–c⁄° 
GLdoubÀ
 *
v
 );

1051 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3fv
–c⁄° 
GLÊﬂt
 *
v
 );

1052 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3iv
–c⁄° 
GLöt
 *
v
 );

1053 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3sv
–c⁄° 
GLsh‹t
 *
v
 );

1054 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3ubv
–c⁄° 
GLubyã
 *
v
 );

1055 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3uiv
–c⁄° 
GLuöt
 *
v
 );

1056 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3usv
–c⁄° 
GLush‹t
 *
v
 );

1058 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4bv
–c⁄° 
GLbyã
 *
v
 );

1059 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4dv
–c⁄° 
GLdoubÀ
 *
v
 );

1060 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4fv
–c⁄° 
GLÊﬂt
 *
v
 );

1061 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4iv
–c⁄° 
GLöt
 *
v
 );

1062 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4sv
–c⁄° 
GLsh‹t
 *
v
 );

1063 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4ubv
–c⁄° 
GLubyã
 *
v
 );

1064 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4uiv
–c⁄° 
GLuöt
 *
v
 );

1065 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4usv
–c⁄° 
GLush‹t
 *
v
 );

1068 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d1d
–
GLdoubÀ
 
s
 );

1069 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d1f
–
GLÊﬂt
 
s
 );

1070 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d1i
–
GLöt
 
s
 );

1071 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d1s
–
GLsh‹t
 
s
 );

1073 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d2d
–
GLdoubÀ
 
s
, GLdoubÀ 
t
 );

1074 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d2f
–
GLÊﬂt
 
s
, GLÊﬂà
t
 );

1075 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d2i
–
GLöt
 
s
, GLöà
t
 );

1076 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d2s
–
GLsh‹t
 
s
, GLsh‹à
t
 );

1078 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d3d
–
GLdoubÀ
 
s
, GLdoubÀ 
t
, GLdoubÀ 
r
 );

1079 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d3f
–
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
 );

1080 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d3i
–
GLöt
 
s
, GLöà
t
, GLöà
r
 );

1081 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d3s
–
GLsh‹t
 
s
, GLsh‹à
t
, GLsh‹à
r
 );

1083 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d4d
–
GLdoubÀ
 
s
, GLdoubÀ 
t
, GLdoubÀ 
r
, GLdoubÀ 
q
 );

1084 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d4f
–
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
, GLÊﬂà
q
 );

1085 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d4i
–
GLöt
 
s
, GLöà
t
, GLöà
r
, GLöà
q
 );

1086 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d4s
–
GLsh‹t
 
s
, GLsh‹à
t
, GLsh‹à
r
, GLsh‹à
q
 );

1088 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d1dv
–c⁄° 
GLdoubÀ
 *
v
 );

1089 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d1fv
–c⁄° 
GLÊﬂt
 *
v
 );

1090 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d1iv
–c⁄° 
GLöt
 *
v
 );

1091 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d1sv
–c⁄° 
GLsh‹t
 *
v
 );

1093 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d2dv
–c⁄° 
GLdoubÀ
 *
v
 );

1094 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d2fv
–c⁄° 
GLÊﬂt
 *
v
 );

1095 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d2iv
–c⁄° 
GLöt
 *
v
 );

1096 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d2sv
–c⁄° 
GLsh‹t
 *
v
 );

1098 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d3dv
–c⁄° 
GLdoubÀ
 *
v
 );

1099 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d3fv
–c⁄° 
GLÊﬂt
 *
v
 );

1100 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d3iv
–c⁄° 
GLöt
 *
v
 );

1101 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d3sv
–c⁄° 
GLsh‹t
 *
v
 );

1103 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d4dv
–c⁄° 
GLdoubÀ
 *
v
 );

1104 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d4fv
–c⁄° 
GLÊﬂt
 *
v
 );

1105 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d4iv
–c⁄° 
GLöt
 *
v
 );

1106 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d4sv
–c⁄° 
GLsh‹t
 *
v
 );

1109 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos2d
–
GLdoubÀ
 
x
, GLdoubÀ 
y
 );

1110 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos2f
–
GLÊﬂt
 
x
, GLÊﬂà
y
 );

1111 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos2i
–
GLöt
 
x
, GLöà
y
 );

1112 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos2s
–
GLsh‹t
 
x
, GLsh‹à
y
 );

1114 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos3d
–
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
 );

1115 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos3f
–
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
 );

1116 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos3i
–
GLöt
 
x
, GLöà
y
, GLöà
z
 );

1117 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos3s
–
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
 );

1119 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos4d
–
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
, GLdoubÀ 
w
 );

1120 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos4f
–
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
, GLÊﬂà
w
 );

1121 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos4i
–
GLöt
 
x
, GLöà
y
, GLöà
z
, GLöà
w
 );

1122 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos4s
–
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
, GLsh‹à
w
 );

1124 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos2dv
–c⁄° 
GLdoubÀ
 *
v
 );

1125 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos2fv
–c⁄° 
GLÊﬂt
 *
v
 );

1126 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos2iv
–c⁄° 
GLöt
 *
v
 );

1127 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos2sv
–c⁄° 
GLsh‹t
 *
v
 );

1129 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos3dv
–c⁄° 
GLdoubÀ
 *
v
 );

1130 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos3fv
–c⁄° 
GLÊﬂt
 *
v
 );

1131 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos3iv
–c⁄° 
GLöt
 *
v
 );

1132 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos3sv
–c⁄° 
GLsh‹t
 *
v
 );

1134 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos4dv
–c⁄° 
GLdoubÀ
 *
v
 );

1135 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos4fv
–c⁄° 
GLÊﬂt
 *
v
 );

1136 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos4iv
–c⁄° 
GLöt
 *
v
 );

1137 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos4sv
–c⁄° 
GLsh‹t
 *
v
 );

1140 
GLAPI
 
GLAPIENTRY
 
	`glRe˘d
–
GLdoubÀ
 
x1
, GLdoubÀ 
y1
, GLdoubÀ 
x2
, GLdoubÀ 
y2
 );

1141 
GLAPI
 
GLAPIENTRY
 
	`glRe˘f
–
GLÊﬂt
 
x1
, GLÊﬂà
y1
, GLÊﬂà
x2
, GLÊﬂà
y2
 );

1142 
GLAPI
 
GLAPIENTRY
 
	`glRe˘i
–
GLöt
 
x1
, GLöà
y1
, GLöà
x2
, GLöà
y2
 );

1143 
GLAPI
 
GLAPIENTRY
 
	`glRe˘s
–
GLsh‹t
 
x1
, GLsh‹à
y1
, GLsh‹à
x2
, GLsh‹à
y2
 );

1146 
GLAPI
 
GLAPIENTRY
 
	`glRe˘dv
–c⁄° 
GLdoubÀ
 *
v1
, c⁄° GLdoubÀ *
v2
 );

1147 
GLAPI
 
GLAPIENTRY
 
	`glRe˘fv
–c⁄° 
GLÊﬂt
 *
v1
, c⁄° GLÊﬂà*
v2
 );

1148 
GLAPI
 
GLAPIENTRY
 
	`glRe˘iv
–c⁄° 
GLöt
 *
v1
, c⁄° GLöà*
v2
 );

1149 
GLAPI
 
GLAPIENTRY
 
	`glRe˘sv
–c⁄° 
GLsh‹t
 *
v1
, c⁄° GLsh‹à*
v2
 );

1156 
GLAPI
 
GLAPIENTRY
 
	`glVîãxPoöãr
–
GLöt
 
size
, 
GLíum
 
ty≥
,

1157 
GLsizei
 
°ride
, c⁄° 
GLvoid
 *
±r
 );

1159 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆPoöãr
–
GLíum
 
ty≥
, 
GLsizei
 
°ride
,

1160 c⁄° 
GLvoid
 *
±r
 );

1162 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹Poöãr
–
GLöt
 
size
, 
GLíum
 
ty≥
,

1163 
GLsizei
 
°ride
, c⁄° 
GLvoid
 *
±r
 );

1165 
GLAPI
 
GLAPIENTRY
 
	`glIndexPoöãr
–
GLíum
 
ty≥
, 
GLsizei
 
°ride
,

1166 c⁄° 
GLvoid
 *
±r
 );

1168 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹dPoöãr
–
GLöt
 
size
, 
GLíum
 
ty≥
,

1169 
GLsizei
 
°ride
, c⁄° 
GLvoid
 *
±r
 );

1171 
GLAPI
 
GLAPIENTRY
 
	`glEdgeFœgPoöãr
–
GLsizei
 
°ride
, c⁄° 
GLvoid
 *
±r
 );

1173 
GLAPI
 
GLAPIENTRY
 
	`glGëPoöãrv
–
GLíum
 
≤ame
, 
GLvoid
 **
∑øms
 );

1175 
GLAPI
 
GLAPIENTRY
 
	`glAºayEÀmít
–
GLöt
 
i
 );

1177 
GLAPI
 
GLAPIENTRY
 
	`glDøwAºays
–
GLíum
 
mode
, 
GLöt
 
fú°
, 
GLsizei
 
cou¡
 );

1179 
GLAPI
 
GLAPIENTRY
 
	`glDøwEÀmíts
–
GLíum
 
mode
, 
GLsizei
 
cou¡
,

1180 
GLíum
 
ty≥
, c⁄° 
GLvoid
 *
ödi˚s
 );

1182 
GLAPI
 
GLAPIENTRY
 
	`glI¡îÀavedAºays
–
GLíum
 
f‹m©
, 
GLsizei
 
°ride
,

1183 c⁄° 
GLvoid
 *
poöãr
 );

1189 
GLAPI
 
GLAPIENTRY
 
	`glShadeModñ
–
GLíum
 
mode
 );

1191 
GLAPI
 
GLAPIENTRY
 
	`glLightf
–
GLíum
 
light
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1192 
GLAPI
 
GLAPIENTRY
 
	`glLighti
–
GLíum
 
light
, GLíum 
≤ame
, 
GLöt
 
∑øm
 );

1193 
GLAPI
 
GLAPIENTRY
 
	`glLightfv
–
GLíum
 
light
, GLíum 
≤ame
,

1194 c⁄° 
GLÊﬂt
 *
∑øms
 );

1195 
GLAPI
 
GLAPIENTRY
 
	`glLightiv
–
GLíum
 
light
, GLíum 
≤ame
,

1196 c⁄° 
GLöt
 *
∑øms
 );

1198 
GLAPI
 
GLAPIENTRY
 
	`glGëLightfv
–
GLíum
 
light
, GLíum 
≤ame
,

1199 
GLÊﬂt
 *
∑øms
 );

1200 
GLAPI
 
GLAPIENTRY
 
	`glGëLightiv
–
GLíum
 
light
, GLíum 
≤ame
,

1201 
GLöt
 *
∑øms
 );

1203 
GLAPI
 
GLAPIENTRY
 
	`glLightModñf
–
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1204 
GLAPI
 
GLAPIENTRY
 
	`glLightModñi
–
GLíum
 
≤ame
, 
GLöt
 
∑øm
 );

1205 
GLAPI
 
GLAPIENTRY
 
	`glLightModñfv
–
GLíum
 
≤ame
, c⁄° 
GLÊﬂt
 *
∑øms
 );

1206 
GLAPI
 
GLAPIENTRY
 
	`glLightModñiv
–
GLíum
 
≤ame
, c⁄° 
GLöt
 *
∑øms
 );

1208 
GLAPI
 
GLAPIENTRY
 
	`glM©îülf
–
GLíum
 
Á˚
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1209 
GLAPI
 
GLAPIENTRY
 
	`glM©îüli
–
GLíum
 
Á˚
, GLíum 
≤ame
, 
GLöt
 
∑øm
 );

1210 
GLAPI
 
GLAPIENTRY
 
	`glM©îülfv
–
GLíum
 
Á˚
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 *
∑øms
 );

1211 
GLAPI
 
GLAPIENTRY
 
	`glM©îüliv
–
GLíum
 
Á˚
, GLíum 
≤ame
, c⁄° 
GLöt
 *
∑øms
 );

1213 
GLAPI
 
GLAPIENTRY
 
	`glGëM©îülfv
–
GLíum
 
Á˚
, GLíum 
≤ame
, 
GLÊﬂt
 *
∑øms
 );

1214 
GLAPI
 
GLAPIENTRY
 
	`glGëM©îüliv
–
GLíum
 
Á˚
, GLíum 
≤ame
, 
GLöt
 *
∑øms
 );

1216 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹M©îül
–
GLíum
 
Á˚
, GLíum 
mode
 );

1223 
GLAPI
 
GLAPIENTRY
 
	`glPixñZoom
–
GLÊﬂt
 
xÁ˘‹
, GLÊﬂà
yÁ˘‹
 );

1225 
GLAPI
 
GLAPIENTRY
 
	`glPixñSt‹ef
–
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1226 
GLAPI
 
GLAPIENTRY
 
	`glPixñSt‹ei
–
GLíum
 
≤ame
, 
GLöt
 
∑øm
 );

1228 
GLAPI
 
GLAPIENTRY
 
	`glPixñTøns„rf
–
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1229 
GLAPI
 
GLAPIENTRY
 
	`glPixñTøns„ri
–
GLíum
 
≤ame
, 
GLöt
 
∑øm
 );

1231 
GLAPI
 
GLAPIENTRY
 
	`glPixñM≠fv
–
GLíum
 
m≠
, 
GLsizei
 
m≠size
,

1232 c⁄° 
GLÊﬂt
 *
vÆues
 );

1233 
GLAPI
 
GLAPIENTRY
 
	`glPixñM≠uiv
–
GLíum
 
m≠
, 
GLsizei
 
m≠size
,

1234 c⁄° 
GLuöt
 *
vÆues
 );

1235 
GLAPI
 
GLAPIENTRY
 
	`glPixñM≠usv
–
GLíum
 
m≠
, 
GLsizei
 
m≠size
,

1236 c⁄° 
GLush‹t
 *
vÆues
 );

1238 
GLAPI
 
GLAPIENTRY
 
	`glGëPixñM≠fv
–
GLíum
 
m≠
, 
GLÊﬂt
 *
vÆues
 );

1239 
GLAPI
 
GLAPIENTRY
 
	`glGëPixñM≠uiv
–
GLíum
 
m≠
, 
GLuöt
 *
vÆues
 );

1240 
GLAPI
 
GLAPIENTRY
 
	`glGëPixñM≠usv
–
GLíum
 
m≠
, 
GLush‹t
 *
vÆues
 );

1242 
GLAPI
 
GLAPIENTRY
 
	`glBôm≠
–
GLsizei
 
width
, GLsizeò
height
,

1243 
GLÊﬂt
 
x‹ig
, GLÊﬂà
y‹ig
,

1244 
GLÊﬂt
 
xmove
, GLÊﬂà
ymove
,

1245 c⁄° 
GLubyã
 *
bôm≠
 );

1247 
GLAPI
 
GLAPIENTRY
 
	`glRódPixñs
–
GLöt
 
x
, GLöà
y
,

1248 
GLsizei
 
width
, GLsizeò
height
,

1249 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1250 
GLvoid
 *
pixñs
 );

1252 
GLAPI
 
GLAPIENTRY
 
	`glDøwPixñs
–
GLsizei
 
width
, GLsizeò
height
,

1253 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1254 c⁄° 
GLvoid
 *
pixñs
 );

1256 
GLAPI
 
GLAPIENTRY
 
	`glC›yPixñs
–
GLöt
 
x
, GLöà
y
,

1257 
GLsizei
 
width
, GLsizeò
height
,

1258 
GLíum
 
ty≥
 );

1264 
GLAPI
 
GLAPIENTRY
 
	`glSãncûFunc
–
GLíum
 
func
, 
GLöt
 
ªf
, 
GLuöt
 
mask
 );

1266 
GLAPI
 
GLAPIENTRY
 
	`glSãncûMask
–
GLuöt
 
mask
 );

1268 
GLAPI
 
GLAPIENTRY
 
	`glSãncûOp
–
GLíum
 
Áû
, GLíum 
zÁû
, GLíum 
z∑ss
 );

1270 
GLAPI
 
GLAPIENTRY
 
	`glCÀ¨Sãncû
–
GLöt
 
s
 );

1278 
GLAPI
 
GLAPIENTRY
 
	`glTexGíd
–
GLíum
 
co‹d
, GLíum 
≤ame
, 
GLdoubÀ
 
∑øm
 );

1279 
GLAPI
 
GLAPIENTRY
 
	`glTexGíf
–
GLíum
 
co‹d
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1280 
GLAPI
 
GLAPIENTRY
 
	`glTexGíi
–
GLíum
 
co‹d
, GLíum 
≤ame
, 
GLöt
 
∑øm
 );

1282 
GLAPI
 
GLAPIENTRY
 
	`glTexGídv
–
GLíum
 
co‹d
, GLíum 
≤ame
, c⁄° 
GLdoubÀ
 *
∑øms
 );

1283 
GLAPI
 
GLAPIENTRY
 
	`glTexGífv
–
GLíum
 
co‹d
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 *
∑øms
 );

1284 
GLAPI
 
GLAPIENTRY
 
	`glTexGíiv
–
GLíum
 
co‹d
, GLíum 
≤ame
, c⁄° 
GLöt
 *
∑øms
 );

1286 
GLAPI
 
GLAPIENTRY
 
	`glGëTexGídv
–
GLíum
 
co‹d
, GLíum 
≤ame
, 
GLdoubÀ
 *
∑øms
 );

1287 
GLAPI
 
GLAPIENTRY
 
	`glGëTexGífv
–
GLíum
 
co‹d
, GLíum 
≤ame
, 
GLÊﬂt
 *
∑øms
 );

1288 
GLAPI
 
GLAPIENTRY
 
	`glGëTexGíiv
–
GLíum
 
co‹d
, GLíum 
≤ame
, 
GLöt
 *
∑øms
 );

1291 
GLAPI
 
GLAPIENTRY
 
	`glTexEnvf
–
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1292 
GLAPI
 
GLAPIENTRY
 
	`glTexEnvi
–
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 
∑øm
 );

1294 
GLAPI
 
GLAPIENTRY
 
	`glTexEnvfv
–
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 *
∑øms
 );

1295 
GLAPI
 
GLAPIENTRY
 
	`glTexEnviv
–
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLöt
 *
∑øms
 );

1297 
GLAPI
 
GLAPIENTRY
 
	`glGëTexEnvfv
–
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 *
∑øms
 );

1298 
GLAPI
 
GLAPIENTRY
 
	`glGëTexEnviv
–
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 *
∑øms
 );

1301 
GLAPI
 
GLAPIENTRY
 
	`glTexP¨amëîf
–
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1302 
GLAPI
 
GLAPIENTRY
 
	`glTexP¨amëîi
–
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 
∑øm
 );

1304 
GLAPI
 
GLAPIENTRY
 
	`glTexP¨amëîfv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1305 c⁄° 
GLÊﬂt
 *
∑øms
 );

1306 
GLAPI
 
GLAPIENTRY
 
	`glTexP¨amëîiv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1307 c⁄° 
GLöt
 *
∑øms
 );

1309 
GLAPI
 
GLAPIENTRY
 
	`glGëTexP¨amëîfv
–
GLíum
 
èrgë
,

1310 
GLíum
 
≤ame
, 
GLÊﬂt
 *
∑øms
);

1311 
GLAPI
 
GLAPIENTRY
 
	`glGëTexP¨amëîiv
–
GLíum
 
èrgë
,

1312 
GLíum
 
≤ame
, 
GLöt
 *
∑øms
 );

1314 
GLAPI
 
GLAPIENTRY
 
	`glGëTexLevñP¨amëîfv
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1315 
GLíum
 
≤ame
, 
GLÊﬂt
 *
∑øms
 );

1316 
GLAPI
 
GLAPIENTRY
 
	`glGëTexLevñP¨amëîiv
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1317 
GLíum
 
≤ame
, 
GLöt
 *
∑øms
 );

1320 
GLAPI
 
GLAPIENTRY
 
	`glTexImage1D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1321 
GLöt
 
öã∫ÆF‹m©
,

1322 
GLsizei
 
width
, 
GLöt
 
b‹dî
,

1323 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1324 c⁄° 
GLvoid
 *
pixñs
 );

1326 
GLAPI
 
GLAPIENTRY
 
	`glTexImage2D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1327 
GLöt
 
öã∫ÆF‹m©
,

1328 
GLsizei
 
width
, GLsizeò
height
,

1329 
GLöt
 
b‹dî
, 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1330 c⁄° 
GLvoid
 *
pixñs
 );

1332 
GLAPI
 
GLAPIENTRY
 
	`glGëTexImage
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1333 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1334 
GLvoid
 *
pixñs
 );

1339 
GLAPI
 
GLAPIENTRY
 
	`glGíTextuªs
–
GLsizei
 
n
, 
GLuöt
 *
ãxtuªs
 );

1341 
GLAPI
 
GLAPIENTRY
 
	`glDñëeTextuªs
–
GLsizei
 
n
, c⁄° 
GLuöt
 *
ãxtuªs
);

1343 
GLAPI
 
GLAPIENTRY
 
	`glBödTextuª
–
GLíum
 
èrgë
, 
GLuöt
 
ãxtuª
 );

1345 
GLAPI
 
GLAPIENTRY
 
	`glPri‹ôizeTextuªs
–
GLsizei
 
n
,

1346 c⁄° 
GLuöt
 *
ãxtuªs
,

1347 c⁄° 
GL˛ampf
 *
¥i‹ôõs
 );

1349 
GLAPI
 
GLboﬁón
 
GLAPIENTRY
 
	`glAªTextuªsResidít
–
GLsizei
 
n
,

1350 c⁄° 
GLuöt
 *
ãxtuªs
,

1351 
GLboﬁón
 *
ªsidí˚s
 );

1353 
GLAPI
 
GLboﬁón
 
GLAPIENTRY
 
	`glIsTextuª
–
GLuöt
 
ãxtuª
 );

1356 
GLAPI
 
GLAPIENTRY
 
	`glTexSubImage1D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1357 
GLöt
 
xoff£t
,

1358 
GLsizei
 
width
, 
GLíum
 
f‹m©
,

1359 
GLíum
 
ty≥
, c⁄° 
GLvoid
 *
pixñs
 );

1362 
GLAPI
 
GLAPIENTRY
 
	`glTexSubImage2D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1363 
GLöt
 
xoff£t
, GLöà
yoff£t
,

1364 
GLsizei
 
width
, GLsizeò
height
,

1365 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1366 c⁄° 
GLvoid
 *
pixñs
 );

1369 
GLAPI
 
GLAPIENTRY
 
	`glC›yTexImage1D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1370 
GLíum
 
öã∫Æf‹m©
,

1371 
GLöt
 
x
, GLöà
y
,

1372 
GLsizei
 
width
, 
GLöt
 
b‹dî
 );

1375 
GLAPI
 
GLAPIENTRY
 
	`glC›yTexImage2D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1376 
GLíum
 
öã∫Æf‹m©
,

1377 
GLöt
 
x
, GLöà
y
,

1378 
GLsizei
 
width
, GLsizeò
height
,

1379 
GLöt
 
b‹dî
 );

1382 
GLAPI
 
GLAPIENTRY
 
	`glC›yTexSubImage1D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1383 
GLöt
 
xoff£t
, GLöà
x
, GLöà
y
,

1384 
GLsizei
 
width
 );

1387 
GLAPI
 
GLAPIENTRY
 
	`glC›yTexSubImage2D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1388 
GLöt
 
xoff£t
, GLöà
yoff£t
,

1389 
GLöt
 
x
, GLöà
y
,

1390 
GLsizei
 
width
, GLsizeò
height
 );

1397 
GLAPI
 
GLAPIENTRY
 
	`glM≠1d
–
GLíum
 
èrgë
, 
GLdoubÀ
 
u1
, GLdoubÀ 
u2
,

1398 
GLöt
 
°ride
,

1399 
GLöt
 
‹dî
, c⁄° 
GLdoubÀ
 *
poöts
 );

1400 
GLAPI
 
GLAPIENTRY
 
	`glM≠1f
–
GLíum
 
èrgë
, 
GLÊﬂt
 
u1
, GLÊﬂà
u2
,

1401 
GLöt
 
°ride
,

1402 
GLöt
 
‹dî
, c⁄° 
GLÊﬂt
 *
poöts
 );

1404 
GLAPI
 
GLAPIENTRY
 
	`glM≠2d
–
GLíum
 
èrgë
,

1405 
GLdoubÀ
 
u1
, GLdoubÀ 
u2
, 
GLöt
 
u°ride
, GLöà
u‹dî
,

1406 
GLdoubÀ
 
v1
, GLdoubÀ 
v2
, 
GLöt
 
v°ride
, GLöà
v‹dî
,

1407 c⁄° 
GLdoubÀ
 *
poöts
 );

1408 
GLAPI
 
GLAPIENTRY
 
	`glM≠2f
–
GLíum
 
èrgë
,

1409 
GLÊﬂt
 
u1
, GLÊﬂà
u2
, 
GLöt
 
u°ride
, GLöà
u‹dî
,

1410 
GLÊﬂt
 
v1
, GLÊﬂà
v2
, 
GLöt
 
v°ride
, GLöà
v‹dî
,

1411 c⁄° 
GLÊﬂt
 *
poöts
 );

1413 
GLAPI
 
GLAPIENTRY
 
	`glGëM≠dv
–
GLíum
 
èrgë
, GLíum 
quîy
, 
GLdoubÀ
 *
v
 );

1414 
GLAPI
 
GLAPIENTRY
 
	`glGëM≠fv
–
GLíum
 
èrgë
, GLíum 
quîy
, 
GLÊﬂt
 *
v
 );

1415 
GLAPI
 
GLAPIENTRY
 
	`glGëM≠iv
–
GLíum
 
èrgë
, GLíum 
quîy
, 
GLöt
 *
v
 );

1417 
GLAPI
 
GLAPIENTRY
 
	`glEvÆCo‹d1d
–
GLdoubÀ
 
u
 );

1418 
GLAPI
 
GLAPIENTRY
 
	`glEvÆCo‹d1f
–
GLÊﬂt
 
u
 );

1420 
GLAPI
 
GLAPIENTRY
 
	`glEvÆCo‹d1dv
–c⁄° 
GLdoubÀ
 *
u
 );

1421 
GLAPI
 
GLAPIENTRY
 
	`glEvÆCo‹d1fv
–c⁄° 
GLÊﬂt
 *
u
 );

1423 
GLAPI
 
GLAPIENTRY
 
	`glEvÆCo‹d2d
–
GLdoubÀ
 
u
, GLdoubÀ 
v
 );

1424 
GLAPI
 
GLAPIENTRY
 
	`glEvÆCo‹d2f
–
GLÊﬂt
 
u
, GLÊﬂà
v
 );

1426 
GLAPI
 
GLAPIENTRY
 
	`glEvÆCo‹d2dv
–c⁄° 
GLdoubÀ
 *
u
 );

1427 
GLAPI
 
GLAPIENTRY
 
	`glEvÆCo‹d2fv
–c⁄° 
GLÊﬂt
 *
u
 );

1429 
GLAPI
 
GLAPIENTRY
 
	`glM≠Grid1d
–
GLöt
 
un
, 
GLdoubÀ
 
u1
, GLdoubÀ 
u2
 );

1430 
GLAPI
 
GLAPIENTRY
 
	`glM≠Grid1f
–
GLöt
 
un
, 
GLÊﬂt
 
u1
, GLÊﬂà
u2
 );

1432 
GLAPI
 
GLAPIENTRY
 
	`glM≠Grid2d
–
GLöt
 
un
, 
GLdoubÀ
 
u1
, GLdoubÀ 
u2
,

1433 
GLöt
 
vn
, 
GLdoubÀ
 
v1
, GLdoubÀ 
v2
 );

1434 
GLAPI
 
GLAPIENTRY
 
	`glM≠Grid2f
–
GLöt
 
un
, 
GLÊﬂt
 
u1
, GLÊﬂà
u2
,

1435 
GLöt
 
vn
, 
GLÊﬂt
 
v1
, GLÊﬂà
v2
 );

1437 
GLAPI
 
GLAPIENTRY
 
	`glEvÆPoöt1
–
GLöt
 
i
 );

1439 
GLAPI
 
GLAPIENTRY
 
	`glEvÆPoöt2
–
GLöt
 
i
, GLöà
j
 );

1441 
GLAPI
 
GLAPIENTRY
 
	`glEvÆMesh1
–
GLíum
 
mode
, 
GLöt
 
i1
, GLöà
i2
 );

1443 
GLAPI
 
GLAPIENTRY
 
	`glEvÆMesh2
–
GLíum
 
mode
, 
GLöt
 
i1
, GLöà
i2
, GLöà
j1
, GLöà
j2
 );

1450 
GLAPI
 
GLAPIENTRY
 
	`glFogf
–
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1452 
GLAPI
 
GLAPIENTRY
 
	`glFogi
–
GLíum
 
≤ame
, 
GLöt
 
∑øm
 );

1454 
GLAPI
 
GLAPIENTRY
 
	`glFogfv
–
GLíum
 
≤ame
, c⁄° 
GLÊﬂt
 *
∑øms
 );

1456 
GLAPI
 
GLAPIENTRY
 
	`glFogiv
–
GLíum
 
≤ame
, c⁄° 
GLöt
 *
∑øms
 );

1463 
GLAPI
 
GLAPIENTRY
 
	`glFìdbackBuf„r
–
GLsizei
 
size
, 
GLíum
 
ty≥
, 
GLÊﬂt
 *
buf„r
 );

1465 
GLAPI
 
GLAPIENTRY
 
	`glPassThrough
–
GLÊﬂt
 
tokí
 );

1467 
GLAPI
 
GLAPIENTRY
 
	`glSñe˘Buf„r
–
GLsizei
 
size
, 
GLuöt
 *
buf„r
 );

1469 
GLAPI
 
GLAPIENTRY
 
	`glInôNames
( );

1471 
GLAPI
 
GLAPIENTRY
 
	`glLﬂdName
–
GLuöt
 
«me
 );

1473 
GLAPI
 
GLAPIENTRY
 
	`glPushName
–
GLuöt
 
«me
 );

1475 
GLAPI
 
GLAPIENTRY
 
	`glP›Name
( );

1483 
	#GL_RESCALE_NORMAL
 0x803A

	)

1484 
	#GL_CLAMP_TO_EDGE
 0x812F

	)

1485 
	#GL_MAX_ELEMENTS_VERTICES
 0x80E8

	)

1486 
	#GL_MAX_ELEMENTS_INDICES
 0x80E9

	)

1487 
	#GL_BGR
 0x80E0

	)

1488 
	#GL_BGRA
 0x80E1

	)

1489 
	#GL_UNSIGNED_BYTE_3_3_2
 0x8032

	)

1490 
	#GL_UNSIGNED_BYTE_2_3_3_REV
 0x8362

	)

1491 
	#GL_UNSIGNED_SHORT_5_6_5
 0x8363

	)

1492 
	#GL_UNSIGNED_SHORT_5_6_5_REV
 0x8364

	)

1493 
	#GL_UNSIGNED_SHORT_4_4_4_4
 0x8033

	)

1494 
	#GL_UNSIGNED_SHORT_4_4_4_4_REV
 0x8365

	)

1495 
	#GL_UNSIGNED_SHORT_5_5_5_1
 0x8034

	)

1496 
	#GL_UNSIGNED_SHORT_1_5_5_5_REV
 0x8366

	)

1497 
	#GL_UNSIGNED_INT_8_8_8_8
 0x8035

	)

1498 
	#GL_UNSIGNED_INT_8_8_8_8_REV
 0x8367

	)

1499 
	#GL_UNSIGNED_INT_10_10_10_2
 0x8036

	)

1500 
	#GL_UNSIGNED_INT_2_10_10_10_REV
 0x8368

	)

1501 
	#GL_LIGHT_MODEL_COLOR_CONTROL
 0x81F8

	)

1502 
	#GL_SINGLE_COLOR
 0x81F9

	)

1503 
	#GL_SEPARATE_SPECULAR_COLOR
 0x81FA

	)

1504 
	#GL_TEXTURE_MIN_LOD
 0x813A

	)

1505 
	#GL_TEXTURE_MAX_LOD
 0x813B

	)

1506 
	#GL_TEXTURE_BASE_LEVEL
 0x813C

	)

1507 
	#GL_TEXTURE_MAX_LEVEL
 0x813D

	)

1508 
	#GL_SMOOTH_POINT_SIZE_RANGE
 0x0B12

	)

1509 
	#GL_SMOOTH_POINT_SIZE_GRANULARITY
 0x0B13

	)

1510 
	#GL_SMOOTH_LINE_WIDTH_RANGE
 0x0B22

	)

1511 
	#GL_SMOOTH_LINE_WIDTH_GRANULARITY
 0x0B23

	)

1512 
	#GL_ALIASED_POINT_SIZE_RANGE
 0x846D

	)

1513 
	#GL_ALIASED_LINE_WIDTH_RANGE
 0x846E

	)

1514 
	#GL_PACK_SKIP_IMAGES
 0x806B

	)

1515 
	#GL_PACK_IMAGE_HEIGHT
 0x806C

	)

1516 
	#GL_UNPACK_SKIP_IMAGES
 0x806D

	)

1517 
	#GL_UNPACK_IMAGE_HEIGHT
 0x806E

	)

1518 
	#GL_TEXTURE_3D
 0x806F

	)

1519 
	#GL_PROXY_TEXTURE_3D
 0x8070

	)

1520 
	#GL_TEXTURE_DEPTH
 0x8071

	)

1521 
	#GL_TEXTURE_WRAP_R
 0x8072

	)

1522 
	#GL_MAX_3D_TEXTURE_SIZE
 0x8073

	)

1523 
	#GL_TEXTURE_BINDING_3D
 0x806A

	)

1525 
GLAPI
 
GLAPIENTRY
 
	`glDøwR™geEÀmíts
–
GLíum
 
mode
, 
GLuöt
 
°¨t
,

1526 
GLuöt
 
íd
, 
GLsizei
 
cou¡
, 
GLíum
 
ty≥
, c⁄° 
GLvoid
 *
ödi˚s
 );

1528 
GLAPI
 
GLAPIENTRY
 
	`glTexImage3D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1529 
GLöt
 
öã∫ÆF‹m©
,

1530 
GLsizei
 
width
, GLsizeò
height
,

1531 
GLsizei
 
dïth
, 
GLöt
 
b‹dî
,

1532 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1533 c⁄° 
GLvoid
 *
pixñs
 );

1535 
GLAPI
 
GLAPIENTRY
 
	`glTexSubImage3D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1536 
GLöt
 
xoff£t
, GLöà
yoff£t
,

1537 
GLöt
 
zoff£t
, 
GLsizei
 
width
,

1538 
GLsizei
 
height
, GLsizeò
dïth
,

1539 
GLíum
 
f‹m©
,

1540 
GLíum
 
ty≥
, c⁄° 
GLvoid
 *
pixñs
);

1542 
GLAPI
 
GLAPIENTRY
 
	`glC›yTexSubImage3D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1543 
GLöt
 
xoff£t
, GLöà
yoff£t
,

1544 
GLöt
 
zoff£t
, GLöà
x
,

1545 
GLöt
 
y
, 
GLsizei
 
width
,

1546 
GLsizei
 
height
 );

1548 (
	tAPIENTRYP
 
	tPFNGLDRAWRANGEELEMENTSPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
);

1549 (
	tAPIENTRYP
 
	tPFNGLTEXIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

1550 (
	tAPIENTRYP
 
	tPFNGLTEXSUBIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

1551 (
	tAPIENTRYP
 
	tPFNGLCOPYTEXSUBIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

1558 
	#GL_CONSTANT_COLOR
 0x8001

	)

1559 
	#GL_ONE_MINUS_CONSTANT_COLOR
 0x8002

	)

1560 
	#GL_CONSTANT_ALPHA
 0x8003

	)

1561 
	#GL_ONE_MINUS_CONSTANT_ALPHA
 0x8004

	)

1562 
	#GL_COLOR_TABLE
 0x80D0

	)

1563 
	#GL_POST_CONVOLUTION_COLOR_TABLE
 0x80D1

	)

1564 
	#GL_POST_COLOR_MATRIX_COLOR_TABLE
 0x80D2

	)

1565 
	#GL_PROXY_COLOR_TABLE
 0x80D3

	)

1566 
	#GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
 0x80D4

	)

1567 
	#GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
 0x80D5

	)

1568 
	#GL_COLOR_TABLE_SCALE
 0x80D6

	)

1569 
	#GL_COLOR_TABLE_BIAS
 0x80D7

	)

1570 
	#GL_COLOR_TABLE_FORMAT
 0x80D8

	)

1571 
	#GL_COLOR_TABLE_WIDTH
 0x80D9

	)

1572 
	#GL_COLOR_TABLE_RED_SIZE
 0x80DA

	)

1573 
	#GL_COLOR_TABLE_GREEN_SIZE
 0x80DB

	)

1574 
	#GL_COLOR_TABLE_BLUE_SIZE
 0x80DC

	)

1575 
	#GL_COLOR_TABLE_ALPHA_SIZE
 0x80DD

	)

1576 
	#GL_COLOR_TABLE_LUMINANCE_SIZE
 0x80DE

	)

1577 
	#GL_COLOR_TABLE_INTENSITY_SIZE
 0x80DF

	)

1578 
	#GL_CONVOLUTION_1D
 0x8010

	)

1579 
	#GL_CONVOLUTION_2D
 0x8011

	)

1580 
	#GL_SEPARABLE_2D
 0x8012

	)

1581 
	#GL_CONVOLUTION_BORDER_MODE
 0x8013

	)

1582 
	#GL_CONVOLUTION_FILTER_SCALE
 0x8014

	)

1583 
	#GL_CONVOLUTION_FILTER_BIAS
 0x8015

	)

1584 
	#GL_REDUCE
 0x8016

	)

1585 
	#GL_CONVOLUTION_FORMAT
 0x8017

	)

1586 
	#GL_CONVOLUTION_WIDTH
 0x8018

	)

1587 
	#GL_CONVOLUTION_HEIGHT
 0x8019

	)

1588 
	#GL_MAX_CONVOLUTION_WIDTH
 0x801A

	)

1589 
	#GL_MAX_CONVOLUTION_HEIGHT
 0x801B

	)

1590 
	#GL_POST_CONVOLUTION_RED_SCALE
 0x801C

	)

1591 
	#GL_POST_CONVOLUTION_GREEN_SCALE
 0x801D

	)

1592 
	#GL_POST_CONVOLUTION_BLUE_SCALE
 0x801E

	)

1593 
	#GL_POST_CONVOLUTION_ALPHA_SCALE
 0x801F

	)

1594 
	#GL_POST_CONVOLUTION_RED_BIAS
 0x8020

	)

1595 
	#GL_POST_CONVOLUTION_GREEN_BIAS
 0x8021

	)

1596 
	#GL_POST_CONVOLUTION_BLUE_BIAS
 0x8022

	)

1597 
	#GL_POST_CONVOLUTION_ALPHA_BIAS
 0x8023

	)

1598 
	#GL_CONSTANT_BORDER
 0x8151

	)

1599 
	#GL_REPLICATE_BORDER
 0x8153

	)

1600 
	#GL_CONVOLUTION_BORDER_COLOR
 0x8154

	)

1601 
	#GL_COLOR_MATRIX
 0x80B1

	)

1602 
	#GL_COLOR_MATRIX_STACK_DEPTH
 0x80B2

	)

1603 
	#GL_MAX_COLOR_MATRIX_STACK_DEPTH
 0x80B3

	)

1604 
	#GL_POST_COLOR_MATRIX_RED_SCALE
 0x80B4

	)

1605 
	#GL_POST_COLOR_MATRIX_GREEN_SCALE
 0x80B5

	)

1606 
	#GL_POST_COLOR_MATRIX_BLUE_SCALE
 0x80B6

	)

1607 
	#GL_POST_COLOR_MATRIX_ALPHA_SCALE
 0x80B7

	)

1608 
	#GL_POST_COLOR_MATRIX_RED_BIAS
 0x80B8

	)

1609 
	#GL_POST_COLOR_MATRIX_GREEN_BIAS
 0x80B9

	)

1610 
	#GL_POST_COLOR_MATRIX_BLUE_BIAS
 0x80BA

	)

1611 
	#GL_POST_COLOR_MATRIX_ALPHA_BIAS
 0x80BB

	)

1612 
	#GL_HISTOGRAM
 0x8024

	)

1613 
	#GL_PROXY_HISTOGRAM
 0x8025

	)

1614 
	#GL_HISTOGRAM_WIDTH
 0x8026

	)

1615 
	#GL_HISTOGRAM_FORMAT
 0x8027

	)

1616 
	#GL_HISTOGRAM_RED_SIZE
 0x8028

	)

1617 
	#GL_HISTOGRAM_GREEN_SIZE
 0x8029

	)

1618 
	#GL_HISTOGRAM_BLUE_SIZE
 0x802A

	)

1619 
	#GL_HISTOGRAM_ALPHA_SIZE
 0x802B

	)

1620 
	#GL_HISTOGRAM_LUMINANCE_SIZE
 0x802C

	)

1621 
	#GL_HISTOGRAM_SINK
 0x802D

	)

1622 
	#GL_MINMAX
 0x802E

	)

1623 
	#GL_MINMAX_FORMAT
 0x802F

	)

1624 
	#GL_MINMAX_SINK
 0x8030

	)

1625 
	#GL_TABLE_TOO_LARGE
 0x8031

	)

1626 
	#GL_BLEND_EQUATION
 0x8009

	)

1627 
	#GL_MIN
 0x8007

	)

1628 
	#GL_MAX
 0x8008

	)

1629 
	#GL_FUNC_ADD
 0x8006

	)

1630 
	#GL_FUNC_SUBTRACT
 0x800A

	)

1631 
	#GL_FUNC_REVERSE_SUBTRACT
 0x800B

	)

1632 
	#GL_BLEND_COLOR
 0x8005

	)

1635 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹TabÀ
–
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
,

1636 
GLsizei
 
width
, 
GLíum
 
f‹m©
,

1637 
GLíum
 
ty≥
, c⁄° 
GLvoid
 *
èbÀ
 );

1639 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹SubTabÀ
–
GLíum
 
èrgë
,

1640 
GLsizei
 
°¨t
, GLsizeò
cou¡
,

1641 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1642 c⁄° 
GLvoid
 *
d©a
 );

1644 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹TabÀP¨amëîiv
(
GLíum
 
èrgë
, GLíum 
≤ame
,

1645 c⁄° 
GLöt
 *
∑øms
);

1647 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹TabÀP¨amëîfv
(
GLíum
 
èrgë
, GLíum 
≤ame
,

1648 c⁄° 
GLÊﬂt
 *
∑øms
);

1650 
GLAPI
 
GLAPIENTRY
 
	`glC›yCﬁ‹SubTabÀ
–
GLíum
 
èrgë
, 
GLsizei
 
°¨t
,

1651 
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
 );

1653 
GLAPI
 
GLAPIENTRY
 
	`glC›yCﬁ‹TabÀ
–
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
,

1654 
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
 );

1656 
GLAPI
 
GLAPIENTRY
 
	`glGëCﬁ‹TabÀ
–
GLíum
 
èrgë
, GLíum 
f‹m©
,

1657 
GLíum
 
ty≥
, 
GLvoid
 *
èbÀ
 );

1659 
GLAPI
 
GLAPIENTRY
 
	`glGëCﬁ‹TabÀP¨amëîfv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1660 
GLÊﬂt
 *
∑øms
 );

1662 
GLAPI
 
GLAPIENTRY
 
	`glGëCﬁ‹TabÀP¨amëîiv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1663 
GLöt
 *
∑øms
 );

1665 
GLAPI
 
GLAPIENTRY
 
	`glBÀndEqu©i⁄
–
GLíum
 
mode
 );

1667 
GLAPI
 
GLAPIENTRY
 
	`glBÀndCﬁ‹
–
GL˛ampf
 
ªd
, GL˛amp‡
gªí
,

1668 
GL˛ampf
 
blue
, GL˛amp‡
Æpha
 );

1670 
GLAPI
 
GLAPIENTRY
 
	`glHi°ogøm
–
GLíum
 
èrgë
, 
GLsizei
 
width
,

1671 
GLíum
 
öã∫Æf‹m©
, 
GLboﬁón
 
sök
 );

1673 
GLAPI
 
GLAPIENTRY
 
	`glRe£tHi°ogøm
–
GLíum
 
èrgë
 );

1675 
GLAPI
 
GLAPIENTRY
 
	`glGëHi°ogøm
–
GLíum
 
èrgë
, 
GLboﬁón
 
ª£t
,

1676 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1677 
GLvoid
 *
vÆues
 );

1679 
GLAPI
 
GLAPIENTRY
 
	`glGëHi°ogømP¨amëîfv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1680 
GLÊﬂt
 *
∑øms
 );

1682 
GLAPI
 
GLAPIENTRY
 
	`glGëHi°ogømP¨amëîiv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1683 
GLöt
 *
∑øms
 );

1685 
GLAPI
 
GLAPIENTRY
 
	`glMömax
–
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
,

1686 
GLboﬁón
 
sök
 );

1688 
GLAPI
 
GLAPIENTRY
 
	`glRe£tMömax
–
GLíum
 
èrgë
 );

1690 
GLAPI
 
GLAPIENTRY
 
	`glGëMömax
–
GLíum
 
èrgë
, 
GLboﬁón
 
ª£t
,

1691 
GLíum
 
f‹m©
, GLíum 
ty≥s
,

1692 
GLvoid
 *
vÆues
 );

1694 
GLAPI
 
GLAPIENTRY
 
	`glGëMömaxP¨amëîfv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1695 
GLÊﬂt
 *
∑øms
 );

1697 
GLAPI
 
GLAPIENTRY
 
	`glGëMömaxP¨amëîiv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1698 
GLöt
 *
∑øms
 );

1700 
GLAPI
 
GLAPIENTRY
 
	`glC⁄vﬁuti⁄Fûãr1D
–
GLíum
 
èrgë
,

1701 
GLíum
 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLíum 
f‹m©
, GLíum 
ty≥
,

1702 c⁄° 
GLvoid
 *
image
 );

1704 
GLAPI
 
GLAPIENTRY
 
	`glC⁄vﬁuti⁄Fûãr2D
–
GLíum
 
èrgë
,

1705 
GLíum
 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
,

1706 
GLíum
 
ty≥
, c⁄° 
GLvoid
 *
image
 );

1708 
GLAPI
 
GLAPIENTRY
 
	`glC⁄vﬁuti⁄P¨amëîf
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1709 
GLÊﬂt
 
∑øms
 );

1711 
GLAPI
 
GLAPIENTRY
 
	`glC⁄vﬁuti⁄P¨amëîfv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1712 c⁄° 
GLÊﬂt
 *
∑øms
 );

1714 
GLAPI
 
GLAPIENTRY
 
	`glC⁄vﬁuti⁄P¨amëîi
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1715 
GLöt
 
∑øms
 );

1717 
GLAPI
 
GLAPIENTRY
 
	`glC⁄vﬁuti⁄P¨amëîiv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1718 c⁄° 
GLöt
 *
∑øms
 );

1720 
GLAPI
 
GLAPIENTRY
 
	`glC›yC⁄vﬁuti⁄Fûãr1D
–
GLíum
 
èrgë
,

1721 
GLíum
 
öã∫Æf‹m©
, 
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
 );

1723 
GLAPI
 
GLAPIENTRY
 
	`glC›yC⁄vﬁuti⁄Fûãr2D
–
GLíum
 
èrgë
,

1724 
GLíum
 
öã∫Æf‹m©
, 
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
,

1725 
GLsizei
 
height
);

1727 
GLAPI
 
GLAPIENTRY
 
	`glGëC⁄vﬁuti⁄Fûãr
–
GLíum
 
èrgë
, GLíum 
f‹m©
,

1728 
GLíum
 
ty≥
, 
GLvoid
 *
image
 );

1730 
GLAPI
 
GLAPIENTRY
 
	`glGëC⁄vﬁuti⁄P¨amëîfv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1731 
GLÊﬂt
 *
∑øms
 );

1733 
GLAPI
 
GLAPIENTRY
 
	`glGëC⁄vﬁuti⁄P¨amëîiv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1734 
GLöt
 *
∑øms
 );

1736 
GLAPI
 
GLAPIENTRY
 
	`glSï¨abÀFûãr2D
–
GLíum
 
èrgë
,

1737 
GLíum
 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
,

1738 
GLíum
 
ty≥
, c⁄° 
GLvoid
 *
row
, c⁄° GLvoid *
cﬁumn
 );

1740 
GLAPI
 
GLAPIENTRY
 
	`glGëSï¨abÀFûãr
–
GLíum
 
èrgë
, GLíum 
f‹m©
,

1741 
GLíum
 
ty≥
, 
GLvoid
 *
row
, GLvoid *
cﬁumn
, GLvoid *
•™
 );

1743 (
	tAPIENTRYP
 
	tPFNGLBLENDCOLORPROC
Ë(
	tGL˛ampf
 
	tªd
, GL˛amp‡
	tgªí
, GL˛amp‡
	tblue
, GL˛amp‡
	tÆpha
);

1744 (
	tAPIENTRYP
 
	tPFNGLBLENDEQUATIONPROC
Ë(
	tGLíum
 
	tmode
);

1753 
	#GL_TEXTURE0
 0x84C0

	)

1754 
	#GL_TEXTURE1
 0x84C1

	)

1755 
	#GL_TEXTURE2
 0x84C2

	)

1756 
	#GL_TEXTURE3
 0x84C3

	)

1757 
	#GL_TEXTURE4
 0x84C4

	)

1758 
	#GL_TEXTURE5
 0x84C5

	)

1759 
	#GL_TEXTURE6
 0x84C6

	)

1760 
	#GL_TEXTURE7
 0x84C7

	)

1761 
	#GL_TEXTURE8
 0x84C8

	)

1762 
	#GL_TEXTURE9
 0x84C9

	)

1763 
	#GL_TEXTURE10
 0x84CA

	)

1764 
	#GL_TEXTURE11
 0x84CB

	)

1765 
	#GL_TEXTURE12
 0x84CC

	)

1766 
	#GL_TEXTURE13
 0x84CD

	)

1767 
	#GL_TEXTURE14
 0x84CE

	)

1768 
	#GL_TEXTURE15
 0x84CF

	)

1769 
	#GL_TEXTURE16
 0x84D0

	)

1770 
	#GL_TEXTURE17
 0x84D1

	)

1771 
	#GL_TEXTURE18
 0x84D2

	)

1772 
	#GL_TEXTURE19
 0x84D3

	)

1773 
	#GL_TEXTURE20
 0x84D4

	)

1774 
	#GL_TEXTURE21
 0x84D5

	)

1775 
	#GL_TEXTURE22
 0x84D6

	)

1776 
	#GL_TEXTURE23
 0x84D7

	)

1777 
	#GL_TEXTURE24
 0x84D8

	)

1778 
	#GL_TEXTURE25
 0x84D9

	)

1779 
	#GL_TEXTURE26
 0x84DA

	)

1780 
	#GL_TEXTURE27
 0x84DB

	)

1781 
	#GL_TEXTURE28
 0x84DC

	)

1782 
	#GL_TEXTURE29
 0x84DD

	)

1783 
	#GL_TEXTURE30
 0x84DE

	)

1784 
	#GL_TEXTURE31
 0x84DF

	)

1785 
	#GL_ACTIVE_TEXTURE
 0x84E0

	)

1786 
	#GL_CLIENT_ACTIVE_TEXTURE
 0x84E1

	)

1787 
	#GL_MAX_TEXTURE_UNITS
 0x84E2

	)

1789 
	#GL_NORMAL_MAP
 0x8511

	)

1790 
	#GL_REFLECTION_MAP
 0x8512

	)

1791 
	#GL_TEXTURE_CUBE_MAP
 0x8513

	)

1792 
	#GL_TEXTURE_BINDING_CUBE_MAP
 0x8514

	)

1793 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_X
 0x8515

	)

1794 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_X
 0x8516

	)

1795 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Y
 0x8517

	)

1796 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
 0x8518

	)

1797 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Z
 0x8519

	)

1798 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
 0x851A

	)

1799 
	#GL_PROXY_TEXTURE_CUBE_MAP
 0x851B

	)

1800 
	#GL_MAX_CUBE_MAP_TEXTURE_SIZE
 0x851C

	)

1802 
	#GL_COMPRESSED_ALPHA
 0x84E9

	)

1803 
	#GL_COMPRESSED_LUMINANCE
 0x84EA

	)

1804 
	#GL_COMPRESSED_LUMINANCE_ALPHA
 0x84EB

	)

1805 
	#GL_COMPRESSED_INTENSITY
 0x84EC

	)

1806 
	#GL_COMPRESSED_RGB
 0x84ED

	)

1807 
	#GL_COMPRESSED_RGBA
 0x84EE

	)

1808 
	#GL_TEXTURE_COMPRESSION_HINT
 0x84EF

	)

1809 
	#GL_TEXTURE_COMPRESSED_IMAGE_SIZE
 0x86A0

	)

1810 
	#GL_TEXTURE_COMPRESSED
 0x86A1

	)

1811 
	#GL_NUM_COMPRESSED_TEXTURE_FORMATS
 0x86A2

	)

1812 
	#GL_COMPRESSED_TEXTURE_FORMATS
 0x86A3

	)

1814 
	#GL_MULTISAMPLE
 0x809D

	)

1815 
	#GL_SAMPLE_ALPHA_TO_COVERAGE
 0x809E

	)

1816 
	#GL_SAMPLE_ALPHA_TO_ONE
 0x809F

	)

1817 
	#GL_SAMPLE_COVERAGE
 0x80A0

	)

1818 
	#GL_SAMPLE_BUFFERS
 0x80A8

	)

1819 
	#GL_SAMPLES
 0x80A9

	)

1820 
	#GL_SAMPLE_COVERAGE_VALUE
 0x80AA

	)

1821 
	#GL_SAMPLE_COVERAGE_INVERT
 0x80AB

	)

1822 
	#GL_MULTISAMPLE_BIT
 0x20000000

	)

1824 
	#GL_TRANSPOSE_MODELVIEW_MATRIX
 0x84E3

	)

1825 
	#GL_TRANSPOSE_PROJECTION_MATRIX
 0x84E4

	)

1826 
	#GL_TRANSPOSE_TEXTURE_MATRIX
 0x84E5

	)

1827 
	#GL_TRANSPOSE_COLOR_MATRIX
 0x84E6

	)

1829 
	#GL_COMBINE
 0x8570

	)

1830 
	#GL_COMBINE_RGB
 0x8571

	)

1831 
	#GL_COMBINE_ALPHA
 0x8572

	)

1832 
	#GL_SOURCE0_RGB
 0x8580

	)

1833 
	#GL_SOURCE1_RGB
 0x8581

	)

1834 
	#GL_SOURCE2_RGB
 0x8582

	)

1835 
	#GL_SOURCE0_ALPHA
 0x8588

	)

1836 
	#GL_SOURCE1_ALPHA
 0x8589

	)

1837 
	#GL_SOURCE2_ALPHA
 0x858A

	)

1838 
	#GL_OPERAND0_RGB
 0x8590

	)

1839 
	#GL_OPERAND1_RGB
 0x8591

	)

1840 
	#GL_OPERAND2_RGB
 0x8592

	)

1841 
	#GL_OPERAND0_ALPHA
 0x8598

	)

1842 
	#GL_OPERAND1_ALPHA
 0x8599

	)

1843 
	#GL_OPERAND2_ALPHA
 0x859A

	)

1844 
	#GL_RGB_SCALE
 0x8573

	)

1845 
	#GL_ADD_SIGNED
 0x8574

	)

1846 
	#GL_INTERPOLATE
 0x8575

	)

1847 
	#GL_SUBTRACT
 0x84E7

	)

1848 
	#GL_CONSTANT
 0x8576

	)

1849 
	#GL_PRIMARY_COLOR
 0x8577

	)

1850 
	#GL_PREVIOUS
 0x8578

	)

1852 
	#GL_DOT3_RGB
 0x86AE

	)

1853 
	#GL_DOT3_RGBA
 0x86AF

	)

1855 
	#GL_CLAMP_TO_BORDER
 0x812D

	)

1857 
GLAPI
 
GLAPIENTRY
 
	`glA˘iveTextuª
–
GLíum
 
ãxtuª
 );

1859 
GLAPI
 
GLAPIENTRY
 
	`glClõ¡A˘iveTextuª
–
GLíum
 
ãxtuª
 );

1861 
GLAPI
 
GLAPIENTRY
 
	`glCom¥es£dTexImage1D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLöà
b‹dî
, GLsizeò
imageSize
, c⁄° 
GLvoid
 *
d©a
 );

1863 
GLAPI
 
GLAPIENTRY
 
	`glCom¥es£dTexImage2D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLöà
b‹dî
, GLsizeò
imageSize
, c⁄° 
GLvoid
 *
d©a
 );

1865 
GLAPI
 
GLAPIENTRY
 
	`glCom¥es£dTexImage3D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLöà
b‹dî
, GLsizeò
imageSize
, c⁄° 
GLvoid
 *
d©a
 );

1867 
GLAPI
 
GLAPIENTRY
 
	`glCom¥es£dTexSubImage1D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, 
GLsizei
 
width
, GLíum 
f‹m©
, GLsizeò
imageSize
, c⁄° 
GLvoid
 *
d©a
 );

1869 
GLAPI
 
GLAPIENTRY
 
	`glCom¥es£dTexSubImage2D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, GLöà
yoff£t
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
, GLsizeò
imageSize
, c⁄° 
GLvoid
 *
d©a
 );

1871 
GLAPI
 
GLAPIENTRY
 
	`glCom¥es£dTexSubImage3D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, GLöà
yoff£t
, GLöà
zoff£t
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLíum 
f‹m©
, GLsizeò
imageSize
, c⁄° 
GLvoid
 *
d©a
 );

1873 
GLAPI
 
GLAPIENTRY
 
	`glGëCom¥es£dTexImage
–
GLíum
 
èrgë
, 
GLöt
 
lod
, 
GLvoid
 *
img
 );

1875 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1d
–
GLíum
 
èrgë
, 
GLdoubÀ
 
s
 );

1877 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1dv
–
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 *
v
 );

1879 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1f
–
GLíum
 
èrgë
, 
GLÊﬂt
 
s
 );

1881 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1fv
–
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 *
v
 );

1883 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1i
–
GLíum
 
èrgë
, 
GLöt
 
s
 );

1885 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1iv
–
GLíum
 
èrgë
, c⁄° 
GLöt
 *
v
 );

1887 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1s
–
GLíum
 
èrgë
, 
GLsh‹t
 
s
 );

1889 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1sv
–
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 *
v
 );

1891 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2d
–
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
 );

1893 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2dv
–
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 *
v
 );

1895 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2f
–
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
 );

1897 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2fv
–
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 *
v
 );

1899 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2i
–
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
 );

1901 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2iv
–
GLíum
 
èrgë
, c⁄° 
GLöt
 *
v
 );

1903 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2s
–
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
 );

1905 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2sv
–
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 *
v
 );

1907 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3d
–
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
, GLdoubÀ 
r
 );

1909 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3dv
–
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 *
v
 );

1911 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3f
–
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
 );

1913 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3fv
–
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 *
v
 );

1915 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3i
–
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
, GLöà
r
 );

1917 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3iv
–
GLíum
 
èrgë
, c⁄° 
GLöt
 *
v
 );

1919 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3s
–
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
, GLsh‹à
r
 );

1921 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3sv
–
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 *
v
 );

1923 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4d
–
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
, GLdoubÀ 
r
, GLdoubÀ 
q
 );

1925 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4dv
–
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 *
v
 );

1927 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4f
–
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
, GLÊﬂà
q
 );

1929 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4fv
–
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 *
v
 );

1931 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4i
–
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
, GLöà
r
, GLöà
q
 );

1933 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4iv
–
GLíum
 
èrgë
, c⁄° 
GLöt
 *
v
 );

1935 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4s
–
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
, GLsh‹à
r
, GLsh‹à
q
 );

1937 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4sv
–
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 *
v
 );

1940 
GLAPI
 
GLAPIENTRY
 
	`glLﬂdTøn•o£M©rixd
–c⁄° 
GLdoubÀ
 
m
[16] );

1942 
GLAPI
 
GLAPIENTRY
 
	`glLﬂdTøn•o£M©rixf
–c⁄° 
GLÊﬂt
 
m
[16] );

1944 
GLAPI
 
GLAPIENTRY
 
	`glMu…Tøn•o£M©rixd
–c⁄° 
GLdoubÀ
 
m
[16] );

1946 
GLAPI
 
GLAPIENTRY
 
	`glMu…Tøn•o£M©rixf
–c⁄° 
GLÊﬂt
 
m
[16] );

1948 
GLAPI
 
GLAPIENTRY
 
	`glSam∂eCovîage
–
GL˛ampf
 
vÆue
, 
GLboﬁón
 
övît
 );

1951 (
	tAPIENTRYP
 
	tPFNGLACTIVETEXTUREPROC
Ë(
	tGLíum
 
	tãxtuª
);

1952 (
	tAPIENTRYP
 
	tPFNGLSAMPLECOVERAGEPROC
Ë(
	tGL˛ampf
 
	tvÆue
, 
	tGLboﬁón
 
	tövît
);

1953 (
	tAPIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

1954 (
	tAPIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE2DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

1955 (
	tAPIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE1DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

1956 (
	tAPIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

1957 (
	tAPIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

1958 (
	tAPIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

1959 (
	tAPIENTRYP
 
	tPFNGLGETCOMPRESSEDTEXIMAGEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, 
	tGLvoid
 *
	timg
);

1966 #i‚de‡
GL_ARB_mu…ôextuª


1967 
	#GL_ARB_mu…ôextuª
 1

	)

1969 
	#GL_TEXTURE0_ARB
 0x84C0

	)

1970 
	#GL_TEXTURE1_ARB
 0x84C1

	)

1971 
	#GL_TEXTURE2_ARB
 0x84C2

	)

1972 
	#GL_TEXTURE3_ARB
 0x84C3

	)

1973 
	#GL_TEXTURE4_ARB
 0x84C4

	)

1974 
	#GL_TEXTURE5_ARB
 0x84C5

	)

1975 
	#GL_TEXTURE6_ARB
 0x84C6

	)

1976 
	#GL_TEXTURE7_ARB
 0x84C7

	)

1977 
	#GL_TEXTURE8_ARB
 0x84C8

	)

1978 
	#GL_TEXTURE9_ARB
 0x84C9

	)

1979 
	#GL_TEXTURE10_ARB
 0x84CA

	)

1980 
	#GL_TEXTURE11_ARB
 0x84CB

	)

1981 
	#GL_TEXTURE12_ARB
 0x84CC

	)

1982 
	#GL_TEXTURE13_ARB
 0x84CD

	)

1983 
	#GL_TEXTURE14_ARB
 0x84CE

	)

1984 
	#GL_TEXTURE15_ARB
 0x84CF

	)

1985 
	#GL_TEXTURE16_ARB
 0x84D0

	)

1986 
	#GL_TEXTURE17_ARB
 0x84D1

	)

1987 
	#GL_TEXTURE18_ARB
 0x84D2

	)

1988 
	#GL_TEXTURE19_ARB
 0x84D3

	)

1989 
	#GL_TEXTURE20_ARB
 0x84D4

	)

1990 
	#GL_TEXTURE21_ARB
 0x84D5

	)

1991 
	#GL_TEXTURE22_ARB
 0x84D6

	)

1992 
	#GL_TEXTURE23_ARB
 0x84D7

	)

1993 
	#GL_TEXTURE24_ARB
 0x84D8

	)

1994 
	#GL_TEXTURE25_ARB
 0x84D9

	)

1995 
	#GL_TEXTURE26_ARB
 0x84DA

	)

1996 
	#GL_TEXTURE27_ARB
 0x84DB

	)

1997 
	#GL_TEXTURE28_ARB
 0x84DC

	)

1998 
	#GL_TEXTURE29_ARB
 0x84DD

	)

1999 
	#GL_TEXTURE30_ARB
 0x84DE

	)

2000 
	#GL_TEXTURE31_ARB
 0x84DF

	)

2001 
	#GL_ACTIVE_TEXTURE_ARB
 0x84E0

	)

2002 
	#GL_CLIENT_ACTIVE_TEXTURE_ARB
 0x84E1

	)

2003 
	#GL_MAX_TEXTURE_UNITS_ARB
 0x84E2

	)

2005 
GLAPI
 
GLAPIENTRY
 
	`glA˘iveTextuªARB
(
GLíum
 
ãxtuª
);

2006 
GLAPI
 
GLAPIENTRY
 
	`glClõ¡A˘iveTextuªARB
(
GLíum
 
ãxtuª
);

2007 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1dARB
(
GLíum
 
èrgë
, 
GLdoubÀ
 
s
);

2008 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1dvARB
(
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 *
v
);

2009 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1fARB
(
GLíum
 
èrgë
, 
GLÊﬂt
 
s
);

2010 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1fvARB
(
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 *
v
);

2011 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1iARB
(
GLíum
 
èrgë
, 
GLöt
 
s
);

2012 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1ivARB
(
GLíum
 
èrgë
, c⁄° 
GLöt
 *
v
);

2013 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1sARB
(
GLíum
 
èrgë
, 
GLsh‹t
 
s
);

2014 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1svARB
(
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 *
v
);

2015 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2dARB
(
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
);

2016 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2dvARB
(
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 *
v
);

2017 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2fARB
(
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
);

2018 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2fvARB
(
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 *
v
);

2019 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2iARB
(
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
);

2020 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2ivARB
(
GLíum
 
èrgë
, c⁄° 
GLöt
 *
v
);

2021 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2sARB
(
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
);

2022 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2svARB
(
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 *
v
);

2023 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3dARB
(
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
, GLdoubÀ 
r
);

2024 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3dvARB
(
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 *
v
);

2025 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3fARB
(
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
);

2026 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3fvARB
(
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 *
v
);

2027 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3iARB
(
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
, GLöà
r
);

2028 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3ivARB
(
GLíum
 
èrgë
, c⁄° 
GLöt
 *
v
);

2029 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3sARB
(
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
, GLsh‹à
r
);

2030 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3svARB
(
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 *
v
);

2031 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4dARB
(
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
, GLdoubÀ 
r
, GLdoubÀ 
q
);

2032 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4dvARB
(
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 *
v
);

2033 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4fARB
(
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
, GLÊﬂà
q
);

2034 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4fvARB
(
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 *
v
);

2035 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4iARB
(
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
, GLöà
r
, GLöà
q
);

2036 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4ivARB
(
GLíum
 
èrgë
, c⁄° 
GLöt
 *
v
);

2037 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4sARB
(
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
, GLsh‹à
r
, GLsh‹à
q
);

2038 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4svARB
(
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 *
v
);

2040 (
	tAPIENTRYP
 
	tPFNGLACTIVETEXTUREARBPROC
Ë(
	tGLíum
 
	tãxtuª
);

2041 (
	tAPIENTRYP
 
	tPFNGLCLIENTACTIVETEXTUREARBPROC
Ë(
	tGLíum
 
	tãxtuª
);

2042 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD1DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
);

2043 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD1DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

2044 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD1FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
);

2045 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD1FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

2046 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD1IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
);

2047 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD1IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

2048 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD1SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
);

2049 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD1SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

2050 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD2DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
);

2051 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD2DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

2052 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD2FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
);

2053 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD2FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

2054 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD2IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
);

2055 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD2IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

2056 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD2SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
);

2057 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD2SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

2058 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD3DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
, GLdoubÀ 
	tr
);

2059 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD3DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

2060 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD3FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
);

2061 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD3FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

2062 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD3IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
, GLöà
	tr
);

2063 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD3IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

2064 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD3SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
, GLsh‹à
	tr
);

2065 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD3SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

2066 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD4DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
, GLdoubÀ 
	tr
, GLdoubÀ 
	tq
);

2067 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD4DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

2068 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD4FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tq
);

2069 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD4FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

2070 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD4IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
, GLöà
	tr
, GLöà
	tq
);

2071 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD4IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

2072 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD4SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
, GLsh‹à
	tr
, GLsh‹à
	tq
);

2073 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD4SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

2083 #i‡
	`deföed
(
GL_GLEXT_LEGACY
)

2089 
	~<GL/gÀxt.h
>

2095 #i‡
GL_ARB_shadî_obje˘s


2097 #i‚de‡
GL_MESA_shadî_debug


2098 
	#GL_MESA_shadî_debug
 1

	)

2100 
	#GL_DEBUG_OBJECT_MESA
 0x8759

	)

2101 
	#GL_DEBUG_PRINT_MESA
 0x875A

	)

2102 
	#GL_DEBUG_ASSERT_MESA
 0x875B

	)

2104 
GLAPI
 
GLh™dÀARB
 
GLAPIENTRY
 
	`glCª©eDebugObje˘MESA
 ();

2105 
GLAPI
 
GLAPIENTRY
 
	`glCÀ¨DebugLogMESA
 (
GLh™dÀARB
 
obj
, 
GLíum
 
logTy≥
, GLíum 
shadîTy≥
);

2106 
GLAPI
 
GLAPIENTRY
 
	`glGëDebugLogMESA
 (
GLh™dÀARB
 
obj
, 
GLíum
 
logTy≥
, GLíum 
shadîTy≥
, 
GLsizei
 
maxLígth
,

2107 
GLsizei
 *
Àngth
, 
GLch¨ARB
 *
debugLog
);

2108 
GLAPI
 
GLsizei
 
GLAPIENTRY
 
	`glGëDebugLogLígthMESA
 (
GLh™dÀARB
 
obj
, 
GLíum
 
logTy≥
, GLíum 
shadîTy≥
);

2119 #i‚de‡
GL_MESA_∑cked_dïth_°ícû


2120 
	#GL_MESA_∑cked_dïth_°ícû
 1

	)

2122 
	#GL_DEPTH_STENCIL_MESA
 0x8750

	)

2123 
	#GL_UNSIGNED_INT_24_8_MESA
 0x8751

	)

2124 
	#GL_UNSIGNED_INT_8_24_REV_MESA
 0x8752

	)

2125 
	#GL_UNSIGNED_SHORT_15_1_MESA
 0x8753

	)

2126 
	#GL_UNSIGNED_SHORT_1_15_REV_MESA
 0x8754

	)

2131 #i‚de‡
GL_MESA_¥ogøm_debug


2132 
	#GL_MESA_¥ogøm_debug
 1

	)

2134 
	#GL_FRAGMENT_PROGRAM_POSITION_MESA
 0x8bb0

	)

2135 
	#GL_FRAGMENT_PROGRAM_CALLBACK_MESA
 0x8bb1

	)

2136 
	#GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA
 0x8bb2

	)

2137 
	#GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA
 0x8bb3

	)

2138 
	#GL_VERTEX_PROGRAM_POSITION_MESA
 0x8bb4

	)

2139 
	#GL_VERTEX_PROGRAM_CALLBACK_MESA
 0x8bb5

	)

2140 
	#GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA
 0x8bb6

	)

2141 
	#GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA
 0x8bb7

	)

2143 (*
	tGL¥ogømˇŒbackMESA
)(
	tGLíum
 
	tèrgë
, 
	tGLvoid
 *
	td©a
);

2145 
GLAPI
 
GLAPIENTRY
 
	`glProgømCÆlbackMESA
(
GLíum
 
èrgë
, 
GL¥ogømˇŒbackMESA
 
ˇŒback
, 
GLvoid
 *
d©a
);

2147 
GLAPI
 
GLAPIENTRY
 
	`glGëProgømRegi°îfvMESA
(
GLíum
 
èrgë
, 
GLsizei
 
Àn
, c⁄° 
GLubyã
 *
«me
, 
GLÊﬂt
 *
v
);

2152 #i‚de‡
GL_MESA_ãxtuª_¨øy


2153 
	#GL_MESA_ãxtuª_¨øy
 1

	)

2157 #i‚de‡
GL_EXT_ãxtuª_¨øy


2159 #ifde‡
GL_GLEXT_PROTOTYPES


2160 
GLAPI
 
APIENTRY
 
	`glFømebuf„rTextuªLayîEXT
(
GLíum
 
èrgë
,

2161 
GLíum
 
©èchmít
, 
GLuöt
 
ãxtuª
, 
GLöt
 
Àvñ
, GLöà
œyî
);

2168 (
	tAPIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
Ë(
	tGLíum
 
	tèrgë
,

2169 
	tGLíum
 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tœyî
);

2172 
	#GL_TEXTURE_1D_ARRAY_EXT
 0x8C18

	)

2173 
	#GL_PROXY_TEXTURE_1D_ARRAY_EXT
 0x8C19

	)

2174 
	#GL_TEXTURE_2D_ARRAY_EXT
 0x8C1A

	)

2175 
	#GL_PROXY_TEXTURE_2D_ARRAY_EXT
 0x8C1B

	)

2176 
	#GL_TEXTURE_BINDING_1D_ARRAY_EXT
 0x8C1C

	)

2177 
	#GL_TEXTURE_BINDING_2D_ARRAY_EXT
 0x8C1D

	)

2178 
	#GL_MAX_ARRAY_TEXTURE_LAYERS_EXT
 0x88FF

	)

2179 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
 0x8CD4

	)

2185 #i‚de‡
GL_ATI_bÀnd_equ©i⁄_£∑øã


2186 
	#GL_ATI_bÀnd_equ©i⁄_£∑øã
 1

	)

2188 
	#GL_ALPHA_BLEND_EQUATION_ATI
 0x883D

	)

2190 
GLAPI
 
GLAPIENTRY
 
	`glBÀndEqu©i⁄Sï¨©eATI
–
GLíum
 
modeRGB
, GLíum 
modeA
 );

2191 (
	tAPIENTRYP
 
	tPFNGLBLENDEQUATIONSEPARATEATIPROC
Ë(
	tGLíum
 
	tmodeRGB
, GLíum 
	tmodeA
);

2208 #i‡
	`deföed
(
PRAGMA_EXPORT_SUPPORTED
)

2209 #¥agm®
exp‹t
 
off


2212 #i‡
	`deföed
(
macötosh
Ë&& 
PRAGMA_IMPORT_SUPPORTED


2213 #¥agm®
imp‹t
 
off


2220 #ifde‡
__˝lu•lus


2221 
	}
}

	@include/GL/gl_mangle.h

2 
	#GL_MANGLE_C1
 "DO NOT EDIT!!! - TO REGENERATE from gl.h, EXECUTE THIS FILE IN SHELL (/bö/shË™d savêthêouçut"

	)

3 
	#GL_MANGLE_C2
 "Thi†fûêi†u£dÅÿ¸óã GL fun˘i⁄ÖrŸy≥†™dálü£†f‹Åhêfun˘i⁄Çames"

	)

4 
	gfûes
="gl.h glext.h"

5 
	#GL_MANGLE_C3
 "gëÑegíî©i⁄ hódî - c›yÉvîythög i¿thi†fûêabovêthê'REGENERATE_TO_END'Üöe"

	)

6 
awk
 '!d⁄e; /^\/\*REGENERATE_TO_END/ {d⁄e=1}' 
$0


7 
echo
 ""

8 
	#GL_MANGLE_C4
 
gë
 
Æü£s


	)

9 
gªp
 '^GLAPI' 
$fûes
 | 
£d
 -
e
 's/.*ENTRY gl\([^–]*\).*$/#deföêgl\1 MANGLE(\1)/' | 
s‹t
 | 
uniq


10 
echo
 ""

11 
echo
 "#endif /* GL_MANGLE_H */"

12 
exô


23 #i‚de‡
GL_MANGLE_H


24 
	#GL_MANGLE_H


	)

26 #i‚de‡ 
MANGLE


27 
	#MANGLE
(
x
Ë
mgl
##
	)
x

32 
	#glAccum
 
	`MANGLE
(
Accum
)

	)

33 
	#glA˘iveProgømEXT
 
	`MANGLE
(
A˘iveProgømEXT
)

	)

34 
	#glA˘iveSãncûFa˚EXT
 
	`MANGLE
(
A˘iveSãncûFa˚EXT
)

	)

35 
	#glA˘iveTextuªARB
 
	`MANGLE
(
A˘iveTextuªARB
)

	)

36 
	#glA˘iveTextuª
 
	`MANGLE
(
A˘iveTextuª
)

	)

37 
	#glA˘iveV¨yögNV
 
	`MANGLE
(
A˘iveV¨yögNV
)

	)

38 
	#glAÕhaFøgmítOp1ATI
 
	`MANGLE
(
AÕhaFøgmítOp1ATI
)

	)

39 
	#glAÕhaFøgmítOp2ATI
 
	`MANGLE
(
AÕhaFøgmítOp2ATI
)

	)

40 
	#glAÕhaFøgmítOp3ATI
 
	`MANGLE
(
AÕhaFøgmítOp3ATI
)

	)

41 
	#glAÕhaFunc
 
	`MANGLE
(
AÕhaFunc
)

	)

42 
	#glAµlyTextuªEXT
 
	`MANGLE
(
AµlyTextuªEXT
)

	)

43 
	#glAªProgømsResidítNV
 
	`MANGLE
(
AªProgømsResidítNV
)

	)

44 
	#glAªTextuªsResidítEXT
 
	`MANGLE
(
AªTextuªsResidítEXT
)

	)

45 
	#glAªTextuªsResidít
 
	`MANGLE
(
AªTextuªsResidít
)

	)

46 
	#glAºayEÀmítEXT
 
	`MANGLE
(
AºayEÀmítEXT
)

	)

47 
	#glAºayEÀmít
 
	`MANGLE
(
AºayEÀmít
)

	)

48 
	#glAºayObje˘ATI
 
	`MANGLE
(
AºayObje˘ATI
)

	)

49 
	#glAsyncM¨kîSGIX
 
	`MANGLE
(
AsyncM¨kîSGIX
)

	)

50 
	#glAâachObje˘ARB
 
	`MANGLE
(
AâachObje˘ARB
)

	)

51 
	#glAâachShadî
 
	`MANGLE
(
AâachShadî
)

	)

52 
	#glBegöC⁄dôi⁄ÆRídî
 
	`MANGLE
(
BegöC⁄dôi⁄ÆRídî
)

	)

53 
	#glBegöC⁄dôi⁄ÆRídîNV
 
	`MANGLE
(
BegöC⁄dôi⁄ÆRídîNV
)

	)

54 
	#glBegöFøgmítShadîATI
 
	`MANGLE
(
BegöFøgmítShadîATI
)

	)

55 
	#glBegö
 
	`MANGLE
(
Begö
)

	)

56 
	#glBegöOc˛usi⁄QuîyNV
 
	`MANGLE
(
BegöOc˛usi⁄QuîyNV
)

	)

57 
	#glBegöPîfM⁄ô‹AMD
 
	`MANGLE
(
BegöPîfM⁄ô‹AMD
)

	)

58 
	#glBegöQuîyARB
 
	`MANGLE
(
BegöQuîyARB
)

	)

59 
	#glBegöQuîy
 
	`MANGLE
(
BegöQuîy
)

	)

60 
	#glBegöTønsf‹mFìdbackEXT
 
	`MANGLE
(
BegöTønsf‹mFìdbackEXT
)

	)

61 
	#glBegöTønsf‹mFìdback
 
	`MANGLE
(
BegöTønsf‹mFìdback
)

	)

62 
	#glBegöTønsf‹mFìdbackNV
 
	`MANGLE
(
BegöTønsf‹mFìdbackNV
)

	)

63 
	#glBegöVîãxShadîEXT
 
	`MANGLE
(
BegöVîãxShadîEXT
)

	)

64 
	#glBegöVideoC≠tuªNV
 
	`MANGLE
(
BegöVideoC≠tuªNV
)

	)

65 
	#glBödAâribLoˇti⁄ARB
 
	`MANGLE
(
BödAâribLoˇti⁄ARB
)

	)

66 
	#glBödAâribLoˇti⁄
 
	`MANGLE
(
BödAâribLoˇti⁄
)

	)

67 
	#glBödBuf„rARB
 
	`MANGLE
(
BödBuf„rARB
)

	)

68 
	#glBödBuf„rBa£EXT
 
	`MANGLE
(
BödBuf„rBa£EXT
)

	)

69 
	#glBödBuf„rBa£
 
	`MANGLE
(
BödBuf„rBa£
)

	)

70 
	#glBödBuf„rBa£NV
 
	`MANGLE
(
BödBuf„rBa£NV
)

	)

71 
	#glBödBuf„r
 
	`MANGLE
(
BödBuf„r
)

	)

72 
	#glBödBuf„rOff£tEXT
 
	`MANGLE
(
BödBuf„rOff£tEXT
)

	)

73 
	#glBödBuf„rOff£tNV
 
	`MANGLE
(
BödBuf„rOff£tNV
)

	)

74 
	#glBödBuf„rR™geEXT
 
	`MANGLE
(
BödBuf„rR™geEXT
)

	)

75 
	#glBödBuf„rR™ge
 
	`MANGLE
(
BödBuf„rR™ge
)

	)

76 
	#glBödBuf„rR™geNV
 
	`MANGLE
(
BödBuf„rR™geNV
)

	)

77 
	#glBödFøgD©aLoˇti⁄EXT
 
	`MANGLE
(
BödFøgD©aLoˇti⁄EXT
)

	)

78 
	#glBödFøgD©aLoˇti⁄
 
	`MANGLE
(
BödFøgD©aLoˇti⁄
)

	)

79 
	#glBödFøgmítShadîATI
 
	`MANGLE
(
BödFøgmítShadîATI
)

	)

80 
	#glBödFømebuf„rEXT
 
	`MANGLE
(
BödFømebuf„rEXT
)

	)

81 
	#glBödFømebuf„r
 
	`MANGLE
(
BödFømebuf„r
)

	)

82 
	#glBödLightP¨amëîEXT
 
	`MANGLE
(
BödLightP¨amëîEXT
)

	)

83 
	#glBödM©îülP¨amëîEXT
 
	`MANGLE
(
BödM©îülP¨amëîEXT
)

	)

84 
	#glBödMu…iTextuªEXT
 
	`MANGLE
(
BödMu…iTextuªEXT
)

	)

85 
	#glBödP¨amëîEXT
 
	`MANGLE
(
BödP¨amëîEXT
)

	)

86 
	#glBödProgømARB
 
	`MANGLE
(
BödProgømARB
)

	)

87 
	#glBödProgømNV
 
	`MANGLE
(
BödProgømNV
)

	)

88 
	#glBödRídîbuf„rEXT
 
	`MANGLE
(
BödRídîbuf„rEXT
)

	)

89 
	#glBödRídîbuf„r
 
	`MANGLE
(
BödRídîbuf„r
)

	)

90 
	#glBödTexGíP¨amëîEXT
 
	`MANGLE
(
BödTexGíP¨amëîEXT
)

	)

91 
	#glBödTextuªEXT
 
	`MANGLE
(
BödTextuªEXT
)

	)

92 
	#glBödTextuª
 
	`MANGLE
(
BödTextuª
)

	)

93 
	#glBödTextuªUnôP¨amëîEXT
 
	`MANGLE
(
BödTextuªUnôP¨amëîEXT
)

	)

94 
	#glBödTønsf‹mFìdbackNV
 
	`MANGLE
(
BödTønsf‹mFìdbackNV
)

	)

95 
	#glBödVîãxAºayAPPLE
 
	`MANGLE
(
BödVîãxAºayAPPLE
)

	)

96 
	#glBödVîãxAºay
 
	`MANGLE
(
BödVîãxAºay
)

	)

97 
	#glBödVîãxShadîEXT
 
	`MANGLE
(
BödVîãxShadîEXT
)

	)

98 
	#glBödVideoC≠tuªSåómBuf„rNV
 
	`MANGLE
(
BödVideoC≠tuªSåómBuf„rNV
)

	)

99 
	#glBödVideoC≠tuªSåómTextuªNV
 
	`MANGLE
(
BödVideoC≠tuªSåómTextuªNV
)

	)

100 
	#glBö‹mÆ3bEXT
 
	`MANGLE
(
Bö‹mÆ3bEXT
)

	)

101 
	#glBö‹mÆ3bvEXT
 
	`MANGLE
(
Bö‹mÆ3bvEXT
)

	)

102 
	#glBö‹mÆ3dEXT
 
	`MANGLE
(
Bö‹mÆ3dEXT
)

	)

103 
	#glBö‹mÆ3dvEXT
 
	`MANGLE
(
Bö‹mÆ3dvEXT
)

	)

104 
	#glBö‹mÆ3fEXT
 
	`MANGLE
(
Bö‹mÆ3fEXT
)

	)

105 
	#glBö‹mÆ3fvEXT
 
	`MANGLE
(
Bö‹mÆ3fvEXT
)

	)

106 
	#glBö‹mÆ3iEXT
 
	`MANGLE
(
Bö‹mÆ3iEXT
)

	)

107 
	#glBö‹mÆ3ivEXT
 
	`MANGLE
(
Bö‹mÆ3ivEXT
)

	)

108 
	#glBö‹mÆ3sEXT
 
	`MANGLE
(
Bö‹mÆ3sEXT
)

	)

109 
	#glBö‹mÆ3svEXT
 
	`MANGLE
(
Bö‹mÆ3svEXT
)

	)

110 
	#glBö‹mÆPoöãrEXT
 
	`MANGLE
(
Bö‹mÆPoöãrEXT
)

	)

111 
	#glBôm≠
 
	`MANGLE
(
Bôm≠
)

	)

112 
	#glBÀndCﬁ‹EXT
 
	`MANGLE
(
BÀndCﬁ‹EXT
)

	)

113 
	#glBÀndCﬁ‹
 
	`MANGLE
(
BÀndCﬁ‹
)

	)

114 
	#glBÀndEqu©i⁄EXT
 
	`MANGLE
(
BÀndEqu©i⁄EXT
)

	)

115 
	#glBÀndEqu©i⁄i
 
	`MANGLE
(
BÀndEqu©i⁄i
)

	)

116 
	#glBÀndEqu©i⁄IndexedAMD
 
	`MANGLE
(
BÀndEqu©i⁄IndexedAMD
)

	)

117 
	#glBÀndEqu©i⁄
 
	`MANGLE
(
BÀndEqu©i⁄
)

	)

118 
	#glBÀndEqu©i⁄Sï¨©eATI
 
	`MANGLE
(
BÀndEqu©i⁄Sï¨©eATI
)

	)

119 
	#glBÀndEqu©i⁄Sï¨©eEXT
 
	`MANGLE
(
BÀndEqu©i⁄Sï¨©eEXT
)

	)

120 
	#glBÀndEqu©i⁄Sï¨©ei
 
	`MANGLE
(
BÀndEqu©i⁄Sï¨©ei
)

	)

121 
	#glBÀndEqu©i⁄Sï¨©eIndexedAMD
 
	`MANGLE
(
BÀndEqu©i⁄Sï¨©eIndexedAMD
)

	)

122 
	#glBÀndEqu©i⁄Sï¨©e
 
	`MANGLE
(
BÀndEqu©i⁄Sï¨©e
)

	)

123 
	#glBÀndFunci
 
	`MANGLE
(
BÀndFunci
)

	)

124 
	#glBÀndFuncIndexedAMD
 
	`MANGLE
(
BÀndFuncIndexedAMD
)

	)

125 
	#glBÀndFunc
 
	`MANGLE
(
BÀndFunc
)

	)

126 
	#glBÀndFuncSï¨©eEXT
 
	`MANGLE
(
BÀndFuncSï¨©eEXT
)

	)

127 
	#glBÀndFuncSï¨©ei
 
	`MANGLE
(
BÀndFuncSï¨©ei
)

	)

128 
	#glBÀndFuncSï¨©eIndexedAMD
 
	`MANGLE
(
BÀndFuncSï¨©eIndexedAMD
)

	)

129 
	#glBÀndFuncSï¨©eINGR
 
	`MANGLE
(
BÀndFuncSï¨©eINGR
)

	)

130 
	#glBÀndFuncSï¨©e
 
	`MANGLE
(
BÀndFuncSï¨©e
)

	)

131 
	#glBlôFømebuf„rEXT
 
	`MANGLE
(
BlôFømebuf„rEXT
)

	)

132 
	#glBlôFømebuf„r
 
	`MANGLE
(
BlôFømebuf„r
)

	)

133 
	#glBuf„rAddªssR™geNV
 
	`MANGLE
(
Buf„rAddªssR™geNV
)

	)

134 
	#glBuf„rD©aARB
 
	`MANGLE
(
Buf„rD©aARB
)

	)

135 
	#glBuf„rD©a
 
	`MANGLE
(
Buf„rD©a
)

	)

136 
	#glBuf„rP¨amëîiAPPLE
 
	`MANGLE
(
Buf„rP¨amëîiAPPLE
)

	)

137 
	#glBuf„rSubD©aARB
 
	`MANGLE
(
Buf„rSubD©aARB
)

	)

138 
	#glBuf„rSubD©a
 
	`MANGLE
(
Buf„rSubD©a
)

	)

139 
	#glCÆlLi°
 
	`MANGLE
(
CÆlLi°
)

	)

140 
	#glCÆlLi°s
 
	`MANGLE
(
CÆlLi°s
)

	)

141 
	#glCheckFømebuf„rSètusEXT
 
	`MANGLE
(
CheckFømebuf„rSètusEXT
)

	)

142 
	#glCheckFømebuf„rSètus
 
	`MANGLE
(
CheckFømebuf„rSètus
)

	)

143 
	#glCheckNamedFømebuf„rSètusEXT
 
	`MANGLE
(
CheckNamedFømebuf„rSètusEXT
)

	)

144 
	#glCœmpCﬁ‹ARB
 
	`MANGLE
(
CœmpCﬁ‹ARB
)

	)

145 
	#glCœmpCﬁ‹
 
	`MANGLE
(
CœmpCﬁ‹
)

	)

146 
	#glCÀ¨Accum
 
	`MANGLE
(
CÀ¨Accum
)

	)

147 
	#glCÀ¨Buf„rfi
 
	`MANGLE
(
CÀ¨Buf„rfi
)

	)

148 
	#glCÀ¨Buf„rfv
 
	`MANGLE
(
CÀ¨Buf„rfv
)

	)

149 
	#glCÀ¨Buf„riv
 
	`MANGLE
(
CÀ¨Buf„riv
)

	)

150 
	#glCÀ¨Buf„ruiv
 
	`MANGLE
(
CÀ¨Buf„ruiv
)

	)

151 
	#glCÀ¨Cﬁ‹IiEXT
 
	`MANGLE
(
CÀ¨Cﬁ‹IiEXT
)

	)

152 
	#glCÀ¨Cﬁ‹IuiEXT
 
	`MANGLE
(
CÀ¨Cﬁ‹IuiEXT
)

	)

153 
	#glCÀ¨Cﬁ‹
 
	`MANGLE
(
CÀ¨Cﬁ‹
)

	)

154 
	#glCÀ¨DebugLogMESA
 
	`MANGLE
(
CÀ¨DebugLogMESA
)

	)

155 
	#glCÀ¨DïthdNV
 
	`MANGLE
(
CÀ¨DïthdNV
)

	)

156 
	#glCÀ¨Dïth
 
	`MANGLE
(
CÀ¨Dïth
)

	)

157 
	#glCÀ¨Index
 
	`MANGLE
(
CÀ¨Index
)

	)

158 
	#glCÀ¨
 
	`MANGLE
(
CÀ¨
)

	)

159 
	#glCÀ¨Sãncû
 
	`MANGLE
(
CÀ¨Sãncû
)

	)

160 
	#glClõ¡A˘iveTextuªARB
 
	`MANGLE
(
Clõ¡A˘iveTextuªARB
)

	)

161 
	#glClõ¡A˘iveTextuª
 
	`MANGLE
(
Clõ¡A˘iveTextuª
)

	)

162 
	#glClõ¡A˘iveVîãxSåómATI
 
	`MANGLE
(
Clõ¡A˘iveVîãxSåómATI
)

	)

163 
	#glClõ¡AâribDeÁu…EXT
 
	`MANGLE
(
Clõ¡AâribDeÁu…EXT
)

	)

164 
	#glClõ¡WaôSync
 
	`MANGLE
(
Clõ¡WaôSync
)

	)

165 
	#glClùPœ√
 
	`MANGLE
(
ClùPœ√
)

	)

166 
	#glCﬁ‹3b
 
	`MANGLE
(
Cﬁ‹3b
)

	)

167 
	#glCﬁ‹3bv
 
	`MANGLE
(
Cﬁ‹3bv
)

	)

168 
	#glCﬁ‹3d
 
	`MANGLE
(
Cﬁ‹3d
)

	)

169 
	#glCﬁ‹3dv
 
	`MANGLE
(
Cﬁ‹3dv
)

	)

170 
	#glCﬁ‹3f
 
	`MANGLE
(
Cﬁ‹3f
)

	)

171 
	#glCﬁ‹3fVîãx3fSUN
 
	`MANGLE
(
Cﬁ‹3fVîãx3fSUN
)

	)

172 
	#glCﬁ‹3fVîãx3fvSUN
 
	`MANGLE
(
Cﬁ‹3fVîãx3fvSUN
)

	)

173 
	#glCﬁ‹3fv
 
	`MANGLE
(
Cﬁ‹3fv
)

	)

174 
	#glCﬁ‹3hNV
 
	`MANGLE
(
Cﬁ‹3hNV
)

	)

175 
	#glCﬁ‹3hvNV
 
	`MANGLE
(
Cﬁ‹3hvNV
)

	)

176 
	#glCﬁ‹3i
 
	`MANGLE
(
Cﬁ‹3i
)

	)

177 
	#glCﬁ‹3iv
 
	`MANGLE
(
Cﬁ‹3iv
)

	)

178 
	#glCﬁ‹3s
 
	`MANGLE
(
Cﬁ‹3s
)

	)

179 
	#glCﬁ‹3sv
 
	`MANGLE
(
Cﬁ‹3sv
)

	)

180 
	#glCﬁ‹3ub
 
	`MANGLE
(
Cﬁ‹3ub
)

	)

181 
	#glCﬁ‹3ubv
 
	`MANGLE
(
Cﬁ‹3ubv
)

	)

182 
	#glCﬁ‹3ui
 
	`MANGLE
(
Cﬁ‹3ui
)

	)

183 
	#glCﬁ‹3uiv
 
	`MANGLE
(
Cﬁ‹3uiv
)

	)

184 
	#glCﬁ‹3us
 
	`MANGLE
(
Cﬁ‹3us
)

	)

185 
	#glCﬁ‹3usv
 
	`MANGLE
(
Cﬁ‹3usv
)

	)

186 
	#glCﬁ‹4b
 
	`MANGLE
(
Cﬁ‹4b
)

	)

187 
	#glCﬁ‹4bv
 
	`MANGLE
(
Cﬁ‹4bv
)

	)

188 
	#glCﬁ‹4d
 
	`MANGLE
(
Cﬁ‹4d
)

	)

189 
	#glCﬁ‹4dv
 
	`MANGLE
(
Cﬁ‹4dv
)

	)

190 
	#glCﬁ‹4f
 
	`MANGLE
(
Cﬁ‹4f
)

	)

191 
	#glCﬁ‹4fN‹mÆ3fVîãx3fSUN
 
	`MANGLE
(
Cﬁ‹4fN‹mÆ3fVîãx3fSUN
)

	)

192 
	#glCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 
	`MANGLE
(
Cﬁ‹4fN‹mÆ3fVîãx3fvSUN
)

	)

193 
	#glCﬁ‹4fv
 
	`MANGLE
(
Cﬁ‹4fv
)

	)

194 
	#glCﬁ‹4hNV
 
	`MANGLE
(
Cﬁ‹4hNV
)

	)

195 
	#glCﬁ‹4hvNV
 
	`MANGLE
(
Cﬁ‹4hvNV
)

	)

196 
	#glCﬁ‹4i
 
	`MANGLE
(
Cﬁ‹4i
)

	)

197 
	#glCﬁ‹4iv
 
	`MANGLE
(
Cﬁ‹4iv
)

	)

198 
	#glCﬁ‹4s
 
	`MANGLE
(
Cﬁ‹4s
)

	)

199 
	#glCﬁ‹4sv
 
	`MANGLE
(
Cﬁ‹4sv
)

	)

200 
	#glCﬁ‹4ub
 
	`MANGLE
(
Cﬁ‹4ub
)

	)

201 
	#glCﬁ‹4ubVîãx2fSUN
 
	`MANGLE
(
Cﬁ‹4ubVîãx2fSUN
)

	)

202 
	#glCﬁ‹4ubVîãx2fvSUN
 
	`MANGLE
(
Cﬁ‹4ubVîãx2fvSUN
)

	)

203 
	#glCﬁ‹4ubVîãx3fSUN
 
	`MANGLE
(
Cﬁ‹4ubVîãx3fSUN
)

	)

204 
	#glCﬁ‹4ubVîãx3fvSUN
 
	`MANGLE
(
Cﬁ‹4ubVîãx3fvSUN
)

	)

205 
	#glCﬁ‹4ubv
 
	`MANGLE
(
Cﬁ‹4ubv
)

	)

206 
	#glCﬁ‹4ui
 
	`MANGLE
(
Cﬁ‹4ui
)

	)

207 
	#glCﬁ‹4uiv
 
	`MANGLE
(
Cﬁ‹4uiv
)

	)

208 
	#glCﬁ‹4us
 
	`MANGLE
(
Cﬁ‹4us
)

	)

209 
	#glCﬁ‹4usv
 
	`MANGLE
(
Cﬁ‹4usv
)

	)

210 
	#glCﬁ‹F‹m©NV
 
	`MANGLE
(
Cﬁ‹F‹m©NV
)

	)

211 
	#glCﬁ‹FøgmítOp1ATI
 
	`MANGLE
(
Cﬁ‹FøgmítOp1ATI
)

	)

212 
	#glCﬁ‹FøgmítOp2ATI
 
	`MANGLE
(
Cﬁ‹FøgmítOp2ATI
)

	)

213 
	#glCﬁ‹FøgmítOp3ATI
 
	`MANGLE
(
Cﬁ‹FøgmítOp3ATI
)

	)

214 
	#glCﬁ‹Maski
 
	`MANGLE
(
Cﬁ‹Maski
)

	)

215 
	#glCﬁ‹MaskIndexedEXT
 
	`MANGLE
(
Cﬁ‹MaskIndexedEXT
)

	)

216 
	#glCﬁ‹Mask
 
	`MANGLE
(
Cﬁ‹Mask
)

	)

217 
	#glCﬁ‹M©îül
 
	`MANGLE
(
Cﬁ‹M©îül
)

	)

218 
	#glCﬁ‹PoöãrEXT
 
	`MANGLE
(
Cﬁ‹PoöãrEXT
)

	)

219 
	#glCﬁ‹PoöãrLi°IBM
 
	`MANGLE
(
Cﬁ‹PoöãrLi°IBM
)

	)

220 
	#glCﬁ‹Poöãr
 
	`MANGLE
(
Cﬁ‹Poöãr
)

	)

221 
	#glCﬁ‹PoöãrvINTEL
 
	`MANGLE
(
Cﬁ‹PoöãrvINTEL
)

	)

222 
	#glCﬁ‹SubTabÀEXT
 
	`MANGLE
(
Cﬁ‹SubTabÀEXT
)

	)

223 
	#glCﬁ‹SubTabÀ
 
	`MANGLE
(
Cﬁ‹SubTabÀ
)

	)

224 
	#glCﬁ‹TabÀEXT
 
	`MANGLE
(
Cﬁ‹TabÀEXT
)

	)

225 
	#glCﬁ‹TabÀ
 
	`MANGLE
(
Cﬁ‹TabÀ
)

	)

226 
	#glCﬁ‹TabÀP¨amëîfv
 
	`MANGLE
(
Cﬁ‹TabÀP¨amëîfv
)

	)

227 
	#glCﬁ‹TabÀP¨amëîfvSGI
 
	`MANGLE
(
Cﬁ‹TabÀP¨amëîfvSGI
)

	)

228 
	#glCﬁ‹TabÀP¨amëîiv
 
	`MANGLE
(
Cﬁ‹TabÀP¨amëîiv
)

	)

229 
	#glCﬁ‹TabÀP¨amëîivSGI
 
	`MANGLE
(
Cﬁ‹TabÀP¨amëîivSGI
)

	)

230 
	#glCﬁ‹TabÀSGI
 
	`MANGLE
(
Cﬁ‹TabÀSGI
)

	)

231 
	#glComböîI≈utNV
 
	`MANGLE
(
ComböîI≈utNV
)

	)

232 
	#glComböîOuçutNV
 
	`MANGLE
(
ComböîOuçutNV
)

	)

233 
	#glComböîP¨amëîfNV
 
	`MANGLE
(
ComböîP¨amëîfNV
)

	)

234 
	#glComböîP¨amëîfvNV
 
	`MANGLE
(
ComböîP¨amëîfvNV
)

	)

235 
	#glComböîP¨amëîiNV
 
	`MANGLE
(
ComböîP¨amëîiNV
)

	)

236 
	#glComböîP¨amëîivNV
 
	`MANGLE
(
ComböîP¨amëîivNV
)

	)

237 
	#glComböîSègeP¨amëîfvNV
 
	`MANGLE
(
ComböîSègeP¨amëîfvNV
)

	)

238 
	#glCompûeShadîARB
 
	`MANGLE
(
CompûeShadîARB
)

	)

239 
	#glCompûeShadî
 
	`MANGLE
(
CompûeShadî
)

	)

240 
	#glCom¥es£dMu…iTexImage1DEXT
 
	`MANGLE
(
Com¥es£dMu…iTexImage1DEXT
)

	)

241 
	#glCom¥es£dMu…iTexImage2DEXT
 
	`MANGLE
(
Com¥es£dMu…iTexImage2DEXT
)

	)

242 
	#glCom¥es£dMu…iTexImage3DEXT
 
	`MANGLE
(
Com¥es£dMu…iTexImage3DEXT
)

	)

243 
	#glCom¥es£dMu…iTexSubImage1DEXT
 
	`MANGLE
(
Com¥es£dMu…iTexSubImage1DEXT
)

	)

244 
	#glCom¥es£dMu…iTexSubImage2DEXT
 
	`MANGLE
(
Com¥es£dMu…iTexSubImage2DEXT
)

	)

245 
	#glCom¥es£dMu…iTexSubImage3DEXT
 
	`MANGLE
(
Com¥es£dMu…iTexSubImage3DEXT
)

	)

246 
	#glCom¥es£dTexImage1DARB
 
	`MANGLE
(
Com¥es£dTexImage1DARB
)

	)

247 
	#glCom¥es£dTexImage1D
 
	`MANGLE
(
Com¥es£dTexImage1D
)

	)

248 
	#glCom¥es£dTexImage2DARB
 
	`MANGLE
(
Com¥es£dTexImage2DARB
)

	)

249 
	#glCom¥es£dTexImage2D
 
	`MANGLE
(
Com¥es£dTexImage2D
)

	)

250 
	#glCom¥es£dTexImage3DARB
 
	`MANGLE
(
Com¥es£dTexImage3DARB
)

	)

251 
	#glCom¥es£dTexImage3D
 
	`MANGLE
(
Com¥es£dTexImage3D
)

	)

252 
	#glCom¥es£dTexSubImage1DARB
 
	`MANGLE
(
Com¥es£dTexSubImage1DARB
)

	)

253 
	#glCom¥es£dTexSubImage1D
 
	`MANGLE
(
Com¥es£dTexSubImage1D
)

	)

254 
	#glCom¥es£dTexSubImage2DARB
 
	`MANGLE
(
Com¥es£dTexSubImage2DARB
)

	)

255 
	#glCom¥es£dTexSubImage2D
 
	`MANGLE
(
Com¥es£dTexSubImage2D
)

	)

256 
	#glCom¥es£dTexSubImage3DARB
 
	`MANGLE
(
Com¥es£dTexSubImage3DARB
)

	)

257 
	#glCom¥es£dTexSubImage3D
 
	`MANGLE
(
Com¥es£dTexSubImage3D
)

	)

258 
	#glCom¥es£dTextuªImage1DEXT
 
	`MANGLE
(
Com¥es£dTextuªImage1DEXT
)

	)

259 
	#glCom¥es£dTextuªImage2DEXT
 
	`MANGLE
(
Com¥es£dTextuªImage2DEXT
)

	)

260 
	#glCom¥es£dTextuªImage3DEXT
 
	`MANGLE
(
Com¥es£dTextuªImage3DEXT
)

	)

261 
	#glCom¥es£dTextuªSubImage1DEXT
 
	`MANGLE
(
Com¥es£dTextuªSubImage1DEXT
)

	)

262 
	#glCom¥es£dTextuªSubImage2DEXT
 
	`MANGLE
(
Com¥es£dTextuªSubImage2DEXT
)

	)

263 
	#glCom¥es£dTextuªSubImage3DEXT
 
	`MANGLE
(
Com¥es£dTextuªSubImage3DEXT
)

	)

264 
	#glC⁄vﬁuti⁄Fûãr1DEXT
 
	`MANGLE
(
C⁄vﬁuti⁄Fûãr1DEXT
)

	)

265 
	#glC⁄vﬁuti⁄Fûãr1D
 
	`MANGLE
(
C⁄vﬁuti⁄Fûãr1D
)

	)

266 
	#glC⁄vﬁuti⁄Fûãr2DEXT
 
	`MANGLE
(
C⁄vﬁuti⁄Fûãr2DEXT
)

	)

267 
	#glC⁄vﬁuti⁄Fûãr2D
 
	`MANGLE
(
C⁄vﬁuti⁄Fûãr2D
)

	)

268 
	#glC⁄vﬁuti⁄P¨amëîfEXT
 
	`MANGLE
(
C⁄vﬁuti⁄P¨amëîfEXT
)

	)

269 
	#glC⁄vﬁuti⁄P¨amëîf
 
	`MANGLE
(
C⁄vﬁuti⁄P¨amëîf
)

	)

270 
	#glC⁄vﬁuti⁄P¨amëîfvEXT
 
	`MANGLE
(
C⁄vﬁuti⁄P¨amëîfvEXT
)

	)

271 
	#glC⁄vﬁuti⁄P¨amëîfv
 
	`MANGLE
(
C⁄vﬁuti⁄P¨amëîfv
)

	)

272 
	#glC⁄vﬁuti⁄P¨amëîiEXT
 
	`MANGLE
(
C⁄vﬁuti⁄P¨amëîiEXT
)

	)

273 
	#glC⁄vﬁuti⁄P¨amëîi
 
	`MANGLE
(
C⁄vﬁuti⁄P¨amëîi
)

	)

274 
	#glC⁄vﬁuti⁄P¨amëîivEXT
 
	`MANGLE
(
C⁄vﬁuti⁄P¨amëîivEXT
)

	)

275 
	#glC⁄vﬁuti⁄P¨amëîiv
 
	`MANGLE
(
C⁄vﬁuti⁄P¨amëîiv
)

	)

276 
	#glC›yBuf„rSubD©a
 
	`MANGLE
(
C›yBuf„rSubD©a
)

	)

277 
	#glC›yCﬁ‹SubTabÀEXT
 
	`MANGLE
(
C›yCﬁ‹SubTabÀEXT
)

	)

278 
	#glC›yCﬁ‹SubTabÀ
 
	`MANGLE
(
C›yCﬁ‹SubTabÀ
)

	)

279 
	#glC›yCﬁ‹TabÀ
 
	`MANGLE
(
C›yCﬁ‹TabÀ
)

	)

280 
	#glC›yCﬁ‹TabÀSGI
 
	`MANGLE
(
C›yCﬁ‹TabÀSGI
)

	)

281 
	#glC›yC⁄vﬁuti⁄Fûãr1DEXT
 
	`MANGLE
(
C›yC⁄vﬁuti⁄Fûãr1DEXT
)

	)

282 
	#glC›yC⁄vﬁuti⁄Fûãr1D
 
	`MANGLE
(
C›yC⁄vﬁuti⁄Fûãr1D
)

	)

283 
	#glC›yC⁄vﬁuti⁄Fûãr2DEXT
 
	`MANGLE
(
C›yC⁄vﬁuti⁄Fûãr2DEXT
)

	)

284 
	#glC›yC⁄vﬁuti⁄Fûãr2D
 
	`MANGLE
(
C›yC⁄vﬁuti⁄Fûãr2D
)

	)

285 
	#glC›yImageSubD©aNV
 
	`MANGLE
(
C›yImageSubD©aNV
)

	)

286 
	#glC›yMu…iTexImage1DEXT
 
	`MANGLE
(
C›yMu…iTexImage1DEXT
)

	)

287 
	#glC›yMu…iTexImage2DEXT
 
	`MANGLE
(
C›yMu…iTexImage2DEXT
)

	)

288 
	#glC›yMu…iTexSubImage1DEXT
 
	`MANGLE
(
C›yMu…iTexSubImage1DEXT
)

	)

289 
	#glC›yMu…iTexSubImage2DEXT
 
	`MANGLE
(
C›yMu…iTexSubImage2DEXT
)

	)

290 
	#glC›yMu…iTexSubImage3DEXT
 
	`MANGLE
(
C›yMu…iTexSubImage3DEXT
)

	)

291 
	#glC›yPixñs
 
	`MANGLE
(
C›yPixñs
)

	)

292 
	#glC›yTexImage1DEXT
 
	`MANGLE
(
C›yTexImage1DEXT
)

	)

293 
	#glC›yTexImage1D
 
	`MANGLE
(
C›yTexImage1D
)

	)

294 
	#glC›yTexImage2DEXT
 
	`MANGLE
(
C›yTexImage2DEXT
)

	)

295 
	#glC›yTexImage2D
 
	`MANGLE
(
C›yTexImage2D
)

	)

296 
	#glC›yTexSubImage1DEXT
 
	`MANGLE
(
C›yTexSubImage1DEXT
)

	)

297 
	#glC›yTexSubImage1D
 
	`MANGLE
(
C›yTexSubImage1D
)

	)

298 
	#glC›yTexSubImage2DEXT
 
	`MANGLE
(
C›yTexSubImage2DEXT
)

	)

299 
	#glC›yTexSubImage2D
 
	`MANGLE
(
C›yTexSubImage2D
)

	)

300 
	#glC›yTexSubImage3DEXT
 
	`MANGLE
(
C›yTexSubImage3DEXT
)

	)

301 
	#glC›yTexSubImage3D
 
	`MANGLE
(
C›yTexSubImage3D
)

	)

302 
	#glC›yTextuªImage1DEXT
 
	`MANGLE
(
C›yTextuªImage1DEXT
)

	)

303 
	#glC›yTextuªImage2DEXT
 
	`MANGLE
(
C›yTextuªImage2DEXT
)

	)

304 
	#glC›yTextuªSubImage1DEXT
 
	`MANGLE
(
C›yTextuªSubImage1DEXT
)

	)

305 
	#glC›yTextuªSubImage2DEXT
 
	`MANGLE
(
C›yTextuªSubImage2DEXT
)

	)

306 
	#glC›yTextuªSubImage3DEXT
 
	`MANGLE
(
C›yTextuªSubImage3DEXT
)

	)

307 
	#glCª©eDebugObje˘MESA
 
	`MANGLE
(
Cª©eDebugObje˘MESA
)

	)

308 
	#glCª©eProgøm
 
	`MANGLE
(
Cª©eProgøm
)

	)

309 
	#glCª©eProgømObje˘ARB
 
	`MANGLE
(
Cª©eProgømObje˘ARB
)

	)

310 
	#glCª©eShadî
 
	`MANGLE
(
Cª©eShadî
)

	)

311 
	#glCª©eShadîObje˘ARB
 
	`MANGLE
(
Cª©eShadîObje˘ARB
)

	)

312 
	#glCª©eShadîProgømEXT
 
	`MANGLE
(
Cª©eShadîProgømEXT
)

	)

313 
	#glCuŒFa˚
 
	`MANGLE
(
CuŒFa˚
)

	)

314 
	#glCuŒP¨amëîdvEXT
 
	`MANGLE
(
CuŒP¨amëîdvEXT
)

	)

315 
	#glCuŒP¨amëîfvEXT
 
	`MANGLE
(
CuŒP¨amëîfvEXT
)

	)

316 
	#glCuºítPÆëãM©rixARB
 
	`MANGLE
(
CuºítPÆëãM©rixARB
)

	)

317 
	#glDef‹m©i⁄M≠3dSGIX
 
	`MANGLE
(
Def‹m©i⁄M≠3dSGIX
)

	)

318 
	#glDef‹m©i⁄M≠3fSGIX
 
	`MANGLE
(
Def‹m©i⁄M≠3fSGIX
)

	)

319 
	#glDef‹mSGIX
 
	`MANGLE
(
Def‹mSGIX
)

	)

320 
	#glDñëeAsyncM¨kîsSGIX
 
	`MANGLE
(
DñëeAsyncM¨kîsSGIX
)

	)

321 
	#glDñëeBuf„rsARB
 
	`MANGLE
(
DñëeBuf„rsARB
)

	)

322 
	#glDñëeBuf„rs
 
	`MANGLE
(
DñëeBuf„rs
)

	)

323 
	#glDñëeFí˚sAPPLE
 
	`MANGLE
(
DñëeFí˚sAPPLE
)

	)

324 
	#glDñëeFí˚sNV
 
	`MANGLE
(
DñëeFí˚sNV
)

	)

325 
	#glDñëeFøgmítShadîATI
 
	`MANGLE
(
DñëeFøgmítShadîATI
)

	)

326 
	#glDñëeFømebuf„rsEXT
 
	`MANGLE
(
DñëeFømebuf„rsEXT
)

	)

327 
	#glDñëeFømebuf„rs
 
	`MANGLE
(
DñëeFømebuf„rs
)

	)

328 
	#glDñëeLi°s
 
	`MANGLE
(
DñëeLi°s
)

	)

329 
	#glDñëeObje˘ARB
 
	`MANGLE
(
DñëeObje˘ARB
)

	)

330 
	#glDñëeOc˛usi⁄QuîõsNV
 
	`MANGLE
(
DñëeOc˛usi⁄QuîõsNV
)

	)

331 
	#glDñëePîfM⁄ô‹sAMD
 
	`MANGLE
(
DñëePîfM⁄ô‹sAMD
)

	)

332 
	#glDñëeProgøm
 
	`MANGLE
(
DñëeProgøm
)

	)

333 
	#glDñëeProgømsARB
 
	`MANGLE
(
DñëeProgømsARB
)

	)

334 
	#glDñëeProgømsNV
 
	`MANGLE
(
DñëeProgømsNV
)

	)

335 
	#glDñëeQuîõsARB
 
	`MANGLE
(
DñëeQuîõsARB
)

	)

336 
	#glDñëeQuîõs
 
	`MANGLE
(
DñëeQuîõs
)

	)

337 
	#glDñëeRídîbuf„rsEXT
 
	`MANGLE
(
DñëeRídîbuf„rsEXT
)

	)

338 
	#glDñëeRídîbuf„rs
 
	`MANGLE
(
DñëeRídîbuf„rs
)

	)

339 
	#glDñëeShadî
 
	`MANGLE
(
DñëeShadî
)

	)

340 
	#glDñëeSync
 
	`MANGLE
(
DñëeSync
)

	)

341 
	#glDñëeTextuªsEXT
 
	`MANGLE
(
DñëeTextuªsEXT
)

	)

342 
	#glDñëeTextuªs
 
	`MANGLE
(
DñëeTextuªs
)

	)

343 
	#glDñëeTønsf‹mFìdbacksNV
 
	`MANGLE
(
DñëeTønsf‹mFìdbacksNV
)

	)

344 
	#glDñëeVîãxAºaysAPPLE
 
	`MANGLE
(
DñëeVîãxAºaysAPPLE
)

	)

345 
	#glDñëeVîãxAºays
 
	`MANGLE
(
DñëeVîãxAºays
)

	)

346 
	#glDñëeVîãxShadîEXT
 
	`MANGLE
(
DñëeVîãxShadîEXT
)

	)

347 
	#glDïthBoundsdNV
 
	`MANGLE
(
DïthBoundsdNV
)

	)

348 
	#glDïthBoundsEXT
 
	`MANGLE
(
DïthBoundsEXT
)

	)

349 
	#glDïthFunc
 
	`MANGLE
(
DïthFunc
)

	)

350 
	#glDïthMask
 
	`MANGLE
(
DïthMask
)

	)

351 
	#glDïthR™gedNV
 
	`MANGLE
(
DïthR™gedNV
)

	)

352 
	#glDïthR™ge
 
	`MANGLE
(
DïthR™ge
)

	)

353 
	#glDëachObje˘ARB
 
	`MANGLE
(
DëachObje˘ARB
)

	)

354 
	#glDëachShadî
 
	`MANGLE
(
DëachShadî
)

	)

355 
	#glDëaûTexFuncSGIS
 
	`MANGLE
(
DëaûTexFuncSGIS
)

	)

356 
	#glDißbÀClõ¡SèãIndexedEXT
 
	`MANGLE
(
DißbÀClõ¡SèãIndexedEXT
)

	)

357 
	#glDißbÀClõ¡Sèã
 
	`MANGLE
(
DißbÀClõ¡Sèã
)

	)

358 
	#glDißbÀi
 
	`MANGLE
(
DißbÀi
)

	)

359 
	#glDißbÀIndexedEXT
 
	`MANGLE
(
DißbÀIndexedEXT
)

	)

360 
	#glDißbÀ
 
	`MANGLE
(
DißbÀ
)

	)

361 
	#glDißbÀV¨ü¡Clõ¡SèãEXT
 
	`MANGLE
(
DißbÀV¨ü¡Clõ¡SèãEXT
)

	)

362 
	#glDißbÀVîãxAâribAPPLE
 
	`MANGLE
(
DißbÀVîãxAâribAPPLE
)

	)

363 
	#glDißbÀVîãxAâribAºayARB
 
	`MANGLE
(
DißbÀVîãxAâribAºayARB
)

	)

364 
	#glDißbÀVîãxAâribAºay
 
	`MANGLE
(
DißbÀVîãxAâribAºay
)

	)

365 
	#glDøwAºaysEXT
 
	`MANGLE
(
DøwAºaysEXT
)

	)

366 
	#glDøwAºaysIn°™˚dARB
 
	`MANGLE
(
DøwAºaysIn°™˚dARB
)

	)

367 
	#glDøwAºaysIn°™˚dEXT
 
	`MANGLE
(
DøwAºaysIn°™˚dEXT
)

	)

368 
	#glDøwAºaysIn°™˚d
 
	`MANGLE
(
DøwAºaysIn°™˚d
)

	)

369 
	#glDøwAºays
 
	`MANGLE
(
DøwAºays
)

	)

370 
	#glDøwBuf„r
 
	`MANGLE
(
DøwBuf„r
)

	)

371 
	#glDøwBuf„rsARB
 
	`MANGLE
(
DøwBuf„rsARB
)

	)

372 
	#glDøwBuf„rsATI
 
	`MANGLE
(
DøwBuf„rsATI
)

	)

373 
	#glDøwBuf„rs
 
	`MANGLE
(
DøwBuf„rs
)

	)

374 
	#glDøwEÀmítAºayAPPLE
 
	`MANGLE
(
DøwEÀmítAºayAPPLE
)

	)

375 
	#glDøwEÀmítAºayATI
 
	`MANGLE
(
DøwEÀmítAºayATI
)

	)

376 
	#glDøwEÀmítsBa£Vîãx
 
	`MANGLE
(
DøwEÀmítsBa£Vîãx
)

	)

377 
	#glDøwEÀmítsIn°™˚dARB
 
	`MANGLE
(
DøwEÀmítsIn°™˚dARB
)

	)

378 
	#glDøwEÀmítsIn°™˚dBa£Vîãx
 
	`MANGLE
(
DøwEÀmítsIn°™˚dBa£Vîãx
)

	)

379 
	#glDøwEÀmítsIn°™˚dEXT
 
	`MANGLE
(
DøwEÀmítsIn°™˚dEXT
)

	)

380 
	#glDøwEÀmítsIn°™˚d
 
	`MANGLE
(
DøwEÀmítsIn°™˚d
)

	)

381 
	#glDøwEÀmíts
 
	`MANGLE
(
DøwEÀmíts
)

	)

382 
	#glDøwMeshAºaysSUN
 
	`MANGLE
(
DøwMeshAºaysSUN
)

	)

383 
	#glDøwPixñs
 
	`MANGLE
(
DøwPixñs
)

	)

384 
	#glDøwR™geEÀmítAºayAPPLE
 
	`MANGLE
(
DøwR™geEÀmítAºayAPPLE
)

	)

385 
	#glDøwR™geEÀmítAºayATI
 
	`MANGLE
(
DøwR™geEÀmítAºayATI
)

	)

386 
	#glDøwR™geEÀmítsBa£Vîãx
 
	`MANGLE
(
DøwR™geEÀmítsBa£Vîãx
)

	)

387 
	#glDøwR™geEÀmítsEXT
 
	`MANGLE
(
DøwR™geEÀmítsEXT
)

	)

388 
	#glDøwR™geEÀmíts
 
	`MANGLE
(
DøwR™geEÀmíts
)

	)

389 
	#glDøwTønsf‹mFìdbackNV
 
	`MANGLE
(
DøwTønsf‹mFìdbackNV
)

	)

390 
	#glEdgeFœgF‹m©NV
 
	`MANGLE
(
EdgeFœgF‹m©NV
)

	)

391 
	#glEdgeFœg
 
	`MANGLE
(
EdgeFœg
)

	)

392 
	#glEdgeFœgPoöãrEXT
 
	`MANGLE
(
EdgeFœgPoöãrEXT
)

	)

393 
	#glEdgeFœgPoöãrLi°IBM
 
	`MANGLE
(
EdgeFœgPoöãrLi°IBM
)

	)

394 
	#glEdgeFœgPoöãr
 
	`MANGLE
(
EdgeFœgPoöãr
)

	)

395 
	#glEdgeFœgv
 
	`MANGLE
(
EdgeFœgv
)

	)

396 
	#glEÀmítPoöãrAPPLE
 
	`MANGLE
(
EÀmítPoöãrAPPLE
)

	)

397 
	#glEÀmítPoöãrATI
 
	`MANGLE
(
EÀmítPoöãrATI
)

	)

398 
	#glE«bÀClõ¡SèãIndexedEXT
 
	`MANGLE
(
E«bÀClõ¡SèãIndexedEXT
)

	)

399 
	#glE«bÀClõ¡Sèã
 
	`MANGLE
(
E«bÀClõ¡Sèã
)

	)

400 
	#glE«bÀi
 
	`MANGLE
(
E«bÀi
)

	)

401 
	#glE«bÀIndexedEXT
 
	`MANGLE
(
E«bÀIndexedEXT
)

	)

402 
	#glE«bÀ
 
	`MANGLE
(
E«bÀ
)

	)

403 
	#glE«bÀV¨ü¡Clõ¡SèãEXT
 
	`MANGLE
(
E«bÀV¨ü¡Clõ¡SèãEXT
)

	)

404 
	#glE«bÀVîãxAâribAPPLE
 
	`MANGLE
(
E«bÀVîãxAâribAPPLE
)

	)

405 
	#glE«bÀVîãxAâribAºayARB
 
	`MANGLE
(
E«bÀVîãxAâribAºayARB
)

	)

406 
	#glE«bÀVîãxAâribAºay
 
	`MANGLE
(
E«bÀVîãxAâribAºay
)

	)

407 
	#glEndC⁄dôi⁄ÆRídî
 
	`MANGLE
(
EndC⁄dôi⁄ÆRídî
)

	)

408 
	#glEndC⁄dôi⁄ÆRídîNV
 
	`MANGLE
(
EndC⁄dôi⁄ÆRídîNV
)

	)

409 
	#glEndFøgmítShadîATI
 
	`MANGLE
(
EndFøgmítShadîATI
)

	)

410 
	#glEndLi°
 
	`MANGLE
(
EndLi°
)

	)

411 
	#glEnd
 
	`MANGLE
(
End
)

	)

412 
	#glEndOc˛usi⁄QuîyNV
 
	`MANGLE
(
EndOc˛usi⁄QuîyNV
)

	)

413 
	#glEndPîfM⁄ô‹AMD
 
	`MANGLE
(
EndPîfM⁄ô‹AMD
)

	)

414 
	#glEndQuîyARB
 
	`MANGLE
(
EndQuîyARB
)

	)

415 
	#glEndQuîy
 
	`MANGLE
(
EndQuîy
)

	)

416 
	#glEndTønsf‹mFìdbackEXT
 
	`MANGLE
(
EndTønsf‹mFìdbackEXT
)

	)

417 
	#glEndTønsf‹mFìdback
 
	`MANGLE
(
EndTønsf‹mFìdback
)

	)

418 
	#glEndTønsf‹mFìdbackNV
 
	`MANGLE
(
EndTønsf‹mFìdbackNV
)

	)

419 
	#glEndVîãxShadîEXT
 
	`MANGLE
(
EndVîãxShadîEXT
)

	)

420 
	#glEndVideoC≠tuªNV
 
	`MANGLE
(
EndVideoC≠tuªNV
)

	)

421 
	#glEvÆCo‹d1d
 
	`MANGLE
(
EvÆCo‹d1d
)

	)

422 
	#glEvÆCo‹d1dv
 
	`MANGLE
(
EvÆCo‹d1dv
)

	)

423 
	#glEvÆCo‹d1f
 
	`MANGLE
(
EvÆCo‹d1f
)

	)

424 
	#glEvÆCo‹d1fv
 
	`MANGLE
(
EvÆCo‹d1fv
)

	)

425 
	#glEvÆCo‹d2d
 
	`MANGLE
(
EvÆCo‹d2d
)

	)

426 
	#glEvÆCo‹d2dv
 
	`MANGLE
(
EvÆCo‹d2dv
)

	)

427 
	#glEvÆCo‹d2f
 
	`MANGLE
(
EvÆCo‹d2f
)

	)

428 
	#glEvÆCo‹d2fv
 
	`MANGLE
(
EvÆCo‹d2fv
)

	)

429 
	#glEvÆM≠sNV
 
	`MANGLE
(
EvÆM≠sNV
)

	)

430 
	#glEvÆMesh1
 
	`MANGLE
(
EvÆMesh1
)

	)

431 
	#glEvÆMesh2
 
	`MANGLE
(
EvÆMesh2
)

	)

432 
	#glEvÆPoöt1
 
	`MANGLE
(
EvÆPoöt1
)

	)

433 
	#glEvÆPoöt2
 
	`MANGLE
(
EvÆPoöt2
)

	)

434 
	#glExecuãProgømNV
 
	`MANGLE
(
ExecuãProgømNV
)

	)

435 
	#glExåa˘Comp⁄ítEXT
 
	`MANGLE
(
Exåa˘Comp⁄ítEXT
)

	)

436 
	#glFìdbackBuf„r
 
	`MANGLE
(
FìdbackBuf„r
)

	)

437 
	#glFí˚Sync
 
	`MANGLE
(
Fí˚Sync
)

	)

438 
	#glFöÆComböîI≈utNV
 
	`MANGLE
(
FöÆComböîI≈utNV
)

	)

439 
	#glFöishAsyncSGIX
 
	`MANGLE
(
FöishAsyncSGIX
)

	)

440 
	#glFöishFí˚APPLE
 
	`MANGLE
(
FöishFí˚APPLE
)

	)

441 
	#glFöishFí˚NV
 
	`MANGLE
(
FöishFí˚NV
)

	)

442 
	#glFöish
 
	`MANGLE
(
Föish
)

	)

443 
	#glFöishObje˘APPLE
 
	`MANGLE
(
FöishObje˘APPLE
)

	)

444 
	#glFöishTextuªSUNX
 
	`MANGLE
(
FöishTextuªSUNX
)

	)

445 
	#glFlush
 
	`MANGLE
(
Flush
)

	)

446 
	#glFlushM≠≥dBuf„rR™geAPPLE
 
	`MANGLE
(
FlushM≠≥dBuf„rR™geAPPLE
)

	)

447 
	#glFlushM≠≥dBuf„rR™ge
 
	`MANGLE
(
FlushM≠≥dBuf„rR™ge
)

	)

448 
	#glFlushPixñD©aR™geNV
 
	`MANGLE
(
FlushPixñD©aR™geNV
)

	)

449 
	#glFlushRa°îSGIX
 
	`MANGLE
(
FlushRa°îSGIX
)

	)

450 
	#glFlushVîãxAºayR™geAPPLE
 
	`MANGLE
(
FlushVîãxAºayR™geAPPLE
)

	)

451 
	#glFlushVîãxAºayR™geNV
 
	`MANGLE
(
FlushVîãxAºayR™geNV
)

	)

452 
	#glFogCo‹ddEXT
 
	`MANGLE
(
FogCo‹ddEXT
)

	)

453 
	#glFogCo‹dd
 
	`MANGLE
(
FogCo‹dd
)

	)

454 
	#glFogCo‹ddvEXT
 
	`MANGLE
(
FogCo‹ddvEXT
)

	)

455 
	#glFogCo‹ddv
 
	`MANGLE
(
FogCo‹ddv
)

	)

456 
	#glFogCo‹dfEXT
 
	`MANGLE
(
FogCo‹dfEXT
)

	)

457 
	#glFogCo‹df
 
	`MANGLE
(
FogCo‹df
)

	)

458 
	#glFogCo‹dF‹m©NV
 
	`MANGLE
(
FogCo‹dF‹m©NV
)

	)

459 
	#glFogCo‹dfvEXT
 
	`MANGLE
(
FogCo‹dfvEXT
)

	)

460 
	#glFogCo‹dfv
 
	`MANGLE
(
FogCo‹dfv
)

	)

461 
	#glFogCo‹dhNV
 
	`MANGLE
(
FogCo‹dhNV
)

	)

462 
	#glFogCo‹dhvNV
 
	`MANGLE
(
FogCo‹dhvNV
)

	)

463 
	#glFogCo‹dPoöãrEXT
 
	`MANGLE
(
FogCo‹dPoöãrEXT
)

	)

464 
	#glFogCo‹dPoöãrLi°IBM
 
	`MANGLE
(
FogCo‹dPoöãrLi°IBM
)

	)

465 
	#glFogCo‹dPoöãr
 
	`MANGLE
(
FogCo‹dPoöãr
)

	)

466 
	#glFogf
 
	`MANGLE
(
Fogf
)

	)

467 
	#glFogFuncSGIS
 
	`MANGLE
(
FogFuncSGIS
)

	)

468 
	#glFogfv
 
	`MANGLE
(
Fogfv
)

	)

469 
	#glFogi
 
	`MANGLE
(
Fogi
)

	)

470 
	#glFogiv
 
	`MANGLE
(
Fogiv
)

	)

471 
	#glFøgmítCﬁ‹M©îülSGIX
 
	`MANGLE
(
FøgmítCﬁ‹M©îülSGIX
)

	)

472 
	#glFøgmítLightfSGIX
 
	`MANGLE
(
FøgmítLightfSGIX
)

	)

473 
	#glFøgmítLightfvSGIX
 
	`MANGLE
(
FøgmítLightfvSGIX
)

	)

474 
	#glFøgmítLightiSGIX
 
	`MANGLE
(
FøgmítLightiSGIX
)

	)

475 
	#glFøgmítLightivSGIX
 
	`MANGLE
(
FøgmítLightivSGIX
)

	)

476 
	#glFøgmítLightModñfSGIX
 
	`MANGLE
(
FøgmítLightModñfSGIX
)

	)

477 
	#glFøgmítLightModñfvSGIX
 
	`MANGLE
(
FøgmítLightModñfvSGIX
)

	)

478 
	#glFøgmítLightModñiSGIX
 
	`MANGLE
(
FøgmítLightModñiSGIX
)

	)

479 
	#glFøgmítLightModñivSGIX
 
	`MANGLE
(
FøgmítLightModñivSGIX
)

	)

480 
	#glFøgmítM©îülfSGIX
 
	`MANGLE
(
FøgmítM©îülfSGIX
)

	)

481 
	#glFøgmítM©îülfvSGIX
 
	`MANGLE
(
FøgmítM©îülfvSGIX
)

	)

482 
	#glFøgmítM©îüliSGIX
 
	`MANGLE
(
FøgmítM©îüliSGIX
)

	)

483 
	#glFøgmítM©îülivSGIX
 
	`MANGLE
(
FøgmítM©îülivSGIX
)

	)

484 
	#glFømebuf„rDøwBuf„rEXT
 
	`MANGLE
(
Fømebuf„rDøwBuf„rEXT
)

	)

485 
	#glFømebuf„rDøwBuf„rsEXT
 
	`MANGLE
(
Fømebuf„rDøwBuf„rsEXT
)

	)

486 
	#glFømebuf„rRódBuf„rEXT
 
	`MANGLE
(
Fømebuf„rRódBuf„rEXT
)

	)

487 
	#glFømebuf„rRídîbuf„rEXT
 
	`MANGLE
(
Fømebuf„rRídîbuf„rEXT
)

	)

488 
	#glFømebuf„rRídîbuf„r
 
	`MANGLE
(
Fømebuf„rRídîbuf„r
)

	)

489 
	#glFømebuf„rTextuª1DEXT
 
	`MANGLE
(
Fømebuf„rTextuª1DEXT
)

	)

490 
	#glFømebuf„rTextuª1D
 
	`MANGLE
(
Fømebuf„rTextuª1D
)

	)

491 
	#glFømebuf„rTextuª2DEXT
 
	`MANGLE
(
Fømebuf„rTextuª2DEXT
)

	)

492 
	#glFømebuf„rTextuª2D
 
	`MANGLE
(
Fømebuf„rTextuª2D
)

	)

493 
	#glFømebuf„rTextuª3DEXT
 
	`MANGLE
(
Fømebuf„rTextuª3DEXT
)

	)

494 
	#glFømebuf„rTextuª3D
 
	`MANGLE
(
Fømebuf„rTextuª3D
)

	)

495 
	#glFømebuf„rTextuªARB
 
	`MANGLE
(
Fømebuf„rTextuªARB
)

	)

496 
	#glFømebuf„rTextuªEXT
 
	`MANGLE
(
Fømebuf„rTextuªEXT
)

	)

497 
	#glFømebuf„rTextuªFa˚ARB
 
	`MANGLE
(
Fømebuf„rTextuªFa˚ARB
)

	)

498 
	#glFømebuf„rTextuªFa˚EXT
 
	`MANGLE
(
Fømebuf„rTextuªFa˚EXT
)

	)

499 
	#glFømebuf„rTextuªFa˚
 
	`MANGLE
(
Fømebuf„rTextuªFa˚
)

	)

500 
	#glFømebuf„rTextuªLayîARB
 
	`MANGLE
(
Fømebuf„rTextuªLayîARB
)

	)

501 
	#glFømebuf„rTextuªLayîEXT
 
	`MANGLE
(
Fømebuf„rTextuªLayîEXT
)

	)

502 
	#glFømebuf„rTextuªLayî
 
	`MANGLE
(
Fømebuf„rTextuªLayî
)

	)

503 
	#glFømebuf„rTextuª
 
	`MANGLE
(
Fømebuf„rTextuª
)

	)

504 
	#glFømeTîmö©‹GREMEDY
 
	`MANGLE
(
FømeTîmö©‹GREMEDY
)

	)

505 
	#glFømeZoomSGIX
 
	`MANGLE
(
FømeZoomSGIX
)

	)

506 
	#glFªeObje˘Buf„rATI
 
	`MANGLE
(
FªeObje˘Buf„rATI
)

	)

507 
	#glFr⁄tFa˚
 
	`MANGLE
(
Fr⁄tFa˚
)

	)

508 
	#glFru°um
 
	`MANGLE
(
Fru°um
)

	)

509 
	#glGíAsyncM¨kîsSGIX
 
	`MANGLE
(
GíAsyncM¨kîsSGIX
)

	)

510 
	#glGíBuf„rsARB
 
	`MANGLE
(
GíBuf„rsARB
)

	)

511 
	#glGíBuf„rs
 
	`MANGLE
(
GíBuf„rs
)

	)

512 
	#glGíî©eMùm≠EXT
 
	`MANGLE
(
Gíî©eMùm≠EXT
)

	)

513 
	#glGíî©eMùm≠
 
	`MANGLE
(
Gíî©eMùm≠
)

	)

514 
	#glGíî©eMu…iTexMùm≠EXT
 
	`MANGLE
(
Gíî©eMu…iTexMùm≠EXT
)

	)

515 
	#glGíî©eTextuªMùm≠EXT
 
	`MANGLE
(
Gíî©eTextuªMùm≠EXT
)

	)

516 
	#glGíFí˚sAPPLE
 
	`MANGLE
(
GíFí˚sAPPLE
)

	)

517 
	#glGíFí˚sNV
 
	`MANGLE
(
GíFí˚sNV
)

	)

518 
	#glGíFøgmítShadîsATI
 
	`MANGLE
(
GíFøgmítShadîsATI
)

	)

519 
	#glGíFømebuf„rsEXT
 
	`MANGLE
(
GíFømebuf„rsEXT
)

	)

520 
	#glGíFømebuf„rs
 
	`MANGLE
(
GíFømebuf„rs
)

	)

521 
	#glGíLi°s
 
	`MANGLE
(
GíLi°s
)

	)

522 
	#glGíOc˛usi⁄QuîõsNV
 
	`MANGLE
(
GíOc˛usi⁄QuîõsNV
)

	)

523 
	#glGíPîfM⁄ô‹sAMD
 
	`MANGLE
(
GíPîfM⁄ô‹sAMD
)

	)

524 
	#glGíProgømsARB
 
	`MANGLE
(
GíProgømsARB
)

	)

525 
	#glGíProgømsNV
 
	`MANGLE
(
GíProgømsNV
)

	)

526 
	#glGíQuîõsARB
 
	`MANGLE
(
GíQuîõsARB
)

	)

527 
	#glGíQuîõs
 
	`MANGLE
(
GíQuîõs
)

	)

528 
	#glGíRídîbuf„rsEXT
 
	`MANGLE
(
GíRídîbuf„rsEXT
)

	)

529 
	#glGíRídîbuf„rs
 
	`MANGLE
(
GíRídîbuf„rs
)

	)

530 
	#glGíSymbﬁsEXT
 
	`MANGLE
(
GíSymbﬁsEXT
)

	)

531 
	#glGíTextuªsEXT
 
	`MANGLE
(
GíTextuªsEXT
)

	)

532 
	#glGíTextuªs
 
	`MANGLE
(
GíTextuªs
)

	)

533 
	#glGíTønsf‹mFìdbacksNV
 
	`MANGLE
(
GíTønsf‹mFìdbacksNV
)

	)

534 
	#glGíVîãxAºaysAPPLE
 
	`MANGLE
(
GíVîãxAºaysAPPLE
)

	)

535 
	#glGíVîãxAºays
 
	`MANGLE
(
GíVîãxAºays
)

	)

536 
	#glGíVîãxShadîsEXT
 
	`MANGLE
(
GíVîãxShadîsEXT
)

	)

537 
	#glGëA˘iveAâribARB
 
	`MANGLE
(
GëA˘iveAâribARB
)

	)

538 
	#glGëA˘iveAârib
 
	`MANGLE
(
GëA˘iveAârib
)

	)

539 
	#glGëA˘iveUnif‹mARB
 
	`MANGLE
(
GëA˘iveUnif‹mARB
)

	)

540 
	#glGëA˘iveUnif‹mBlockiv
 
	`MANGLE
(
GëA˘iveUnif‹mBlockiv
)

	)

541 
	#glGëA˘iveUnif‹mBlockName
 
	`MANGLE
(
GëA˘iveUnif‹mBlockName
)

	)

542 
	#glGëA˘iveUnif‹m
 
	`MANGLE
(
GëA˘iveUnif‹m
)

	)

543 
	#glGëA˘iveUnif‹mName
 
	`MANGLE
(
GëA˘iveUnif‹mName
)

	)

544 
	#glGëA˘iveUnif‹msiv
 
	`MANGLE
(
GëA˘iveUnif‹msiv
)

	)

545 
	#glGëA˘iveV¨yögNV
 
	`MANGLE
(
GëA˘iveV¨yögNV
)

	)

546 
	#glGëAºayObje˘fvATI
 
	`MANGLE
(
GëAºayObje˘fvATI
)

	)

547 
	#glGëAºayObje˘ivATI
 
	`MANGLE
(
GëAºayObje˘ivATI
)

	)

548 
	#glGëAâachedObje˘sARB
 
	`MANGLE
(
GëAâachedObje˘sARB
)

	)

549 
	#glGëAâachedShadîs
 
	`MANGLE
(
GëAâachedShadîs
)

	)

550 
	#glGëAâribLoˇti⁄ARB
 
	`MANGLE
(
GëAâribLoˇti⁄ARB
)

	)

551 
	#glGëAâribLoˇti⁄
 
	`MANGLE
(
GëAâribLoˇti⁄
)

	)

552 
	#glGëBoﬁónIndexedvEXT
 
	`MANGLE
(
GëBoﬁónIndexedvEXT
)

	)

553 
	#glGëBoﬁóni_v
 
	`MANGLE
(
GëBoﬁóni_v
)

	)

554 
	#glGëBoﬁónv
 
	`MANGLE
(
GëBoﬁónv
)

	)

555 
	#glGëBuf„rP¨amëîi64v
 
	`MANGLE
(
GëBuf„rP¨amëîi64v
)

	)

556 
	#glGëBuf„rP¨amëîivARB
 
	`MANGLE
(
GëBuf„rP¨amëîivARB
)

	)

557 
	#glGëBuf„rP¨amëîiv
 
	`MANGLE
(
GëBuf„rP¨amëîiv
)

	)

558 
	#glGëBuf„rP¨amëîui64vNV
 
	`MANGLE
(
GëBuf„rP¨amëîui64vNV
)

	)

559 
	#glGëBuf„rPoöãrvARB
 
	`MANGLE
(
GëBuf„rPoöãrvARB
)

	)

560 
	#glGëBuf„rPoöãrv
 
	`MANGLE
(
GëBuf„rPoöãrv
)

	)

561 
	#glGëBuf„rSubD©aARB
 
	`MANGLE
(
GëBuf„rSubD©aARB
)

	)

562 
	#glGëBuf„rSubD©a
 
	`MANGLE
(
GëBuf„rSubD©a
)

	)

563 
	#glGëClùPœ√
 
	`MANGLE
(
GëClùPœ√
)

	)

564 
	#glGëCﬁ‹TabÀEXT
 
	`MANGLE
(
GëCﬁ‹TabÀEXT
)

	)

565 
	#glGëCﬁ‹TabÀ
 
	`MANGLE
(
GëCﬁ‹TabÀ
)

	)

566 
	#glGëCﬁ‹TabÀP¨amëîfvEXT
 
	`MANGLE
(
GëCﬁ‹TabÀP¨amëîfvEXT
)

	)

567 
	#glGëCﬁ‹TabÀP¨amëîfv
 
	`MANGLE
(
GëCﬁ‹TabÀP¨amëîfv
)

	)

568 
	#glGëCﬁ‹TabÀP¨amëîfvSGI
 
	`MANGLE
(
GëCﬁ‹TabÀP¨amëîfvSGI
)

	)

569 
	#glGëCﬁ‹TabÀP¨amëîivEXT
 
	`MANGLE
(
GëCﬁ‹TabÀP¨amëîivEXT
)

	)

570 
	#glGëCﬁ‹TabÀP¨amëîiv
 
	`MANGLE
(
GëCﬁ‹TabÀP¨amëîiv
)

	)

571 
	#glGëCﬁ‹TabÀP¨amëîivSGI
 
	`MANGLE
(
GëCﬁ‹TabÀP¨amëîivSGI
)

	)

572 
	#glGëCﬁ‹TabÀSGI
 
	`MANGLE
(
GëCﬁ‹TabÀSGI
)

	)

573 
	#glGëComböîI≈utP¨amëîfvNV
 
	`MANGLE
(
GëComböîI≈utP¨amëîfvNV
)

	)

574 
	#glGëComböîI≈utP¨amëîivNV
 
	`MANGLE
(
GëComböîI≈utP¨amëîivNV
)

	)

575 
	#glGëComböîOuçutP¨amëîfvNV
 
	`MANGLE
(
GëComböîOuçutP¨amëîfvNV
)

	)

576 
	#glGëComböîOuçutP¨amëîivNV
 
	`MANGLE
(
GëComböîOuçutP¨amëîivNV
)

	)

577 
	#glGëComböîSègeP¨amëîfvNV
 
	`MANGLE
(
GëComböîSègeP¨amëîfvNV
)

	)

578 
	#glGëCom¥es£dMu…iTexImageEXT
 
	`MANGLE
(
GëCom¥es£dMu…iTexImageEXT
)

	)

579 
	#glGëCom¥es£dTexImageARB
 
	`MANGLE
(
GëCom¥es£dTexImageARB
)

	)

580 
	#glGëCom¥es£dTexImage
 
	`MANGLE
(
GëCom¥es£dTexImage
)

	)

581 
	#glGëCom¥es£dTextuªImageEXT
 
	`MANGLE
(
GëCom¥es£dTextuªImageEXT
)

	)

582 
	#glGëC⁄vﬁuti⁄FûãrEXT
 
	`MANGLE
(
GëC⁄vﬁuti⁄FûãrEXT
)

	)

583 
	#glGëC⁄vﬁuti⁄Fûãr
 
	`MANGLE
(
GëC⁄vﬁuti⁄Fûãr
)

	)

584 
	#glGëC⁄vﬁuti⁄P¨amëîfvEXT
 
	`MANGLE
(
GëC⁄vﬁuti⁄P¨amëîfvEXT
)

	)

585 
	#glGëC⁄vﬁuti⁄P¨amëîfv
 
	`MANGLE
(
GëC⁄vﬁuti⁄P¨amëîfv
)

	)

586 
	#glGëC⁄vﬁuti⁄P¨amëîivEXT
 
	`MANGLE
(
GëC⁄vﬁuti⁄P¨amëîivEXT
)

	)

587 
	#glGëC⁄vﬁuti⁄P¨amëîiv
 
	`MANGLE
(
GëC⁄vﬁuti⁄P¨amëîiv
)

	)

588 
	#glGëDebugLogLígthMESA
 
	`MANGLE
(
GëDebugLogLígthMESA
)

	)

589 
	#glGëDebugLogMESA
 
	`MANGLE
(
GëDebugLogMESA
)

	)

590 
	#glGëDëaûTexFuncSGIS
 
	`MANGLE
(
GëDëaûTexFuncSGIS
)

	)

591 
	#glGëDoubÀIndexedvEXT
 
	`MANGLE
(
GëDoubÀIndexedvEXT
)

	)

592 
	#glGëDoubÀv
 
	`MANGLE
(
GëDoubÀv
)

	)

593 
	#glGëEº‹
 
	`MANGLE
(
GëEº‹
)

	)

594 
	#glGëFí˚ivNV
 
	`MANGLE
(
GëFí˚ivNV
)

	)

595 
	#glGëFöÆComböîI≈utP¨amëîfvNV
 
	`MANGLE
(
GëFöÆComböîI≈utP¨amëîfvNV
)

	)

596 
	#glGëFöÆComböîI≈utP¨amëîivNV
 
	`MANGLE
(
GëFöÆComböîI≈utP¨amëîivNV
)

	)

597 
	#glGëFlﬂtIndexedvEXT
 
	`MANGLE
(
GëFlﬂtIndexedvEXT
)

	)

598 
	#glGëFlﬂtv
 
	`MANGLE
(
GëFlﬂtv
)

	)

599 
	#glGëFogFuncSGIS
 
	`MANGLE
(
GëFogFuncSGIS
)

	)

600 
	#glGëFøgD©aLoˇti⁄EXT
 
	`MANGLE
(
GëFøgD©aLoˇti⁄EXT
)

	)

601 
	#glGëFøgD©aLoˇti⁄
 
	`MANGLE
(
GëFøgD©aLoˇti⁄
)

	)

602 
	#glGëFøgmítLightfvSGIX
 
	`MANGLE
(
GëFøgmítLightfvSGIX
)

	)

603 
	#glGëFøgmítLightivSGIX
 
	`MANGLE
(
GëFøgmítLightivSGIX
)

	)

604 
	#glGëFøgmítM©îülfvSGIX
 
	`MANGLE
(
GëFøgmítM©îülfvSGIX
)

	)

605 
	#glGëFøgmítM©îülivSGIX
 
	`MANGLE
(
GëFøgmítM©îülivSGIX
)

	)

606 
	#glGëFømebuf„rAâachmítP¨amëîivEXT
 
	`MANGLE
(
GëFømebuf„rAâachmítP¨amëîivEXT
)

	)

607 
	#glGëFømebuf„rAâachmítP¨amëîiv
 
	`MANGLE
(
GëFømebuf„rAâachmítP¨amëîiv
)

	)

608 
	#glGëFømebuf„rP¨amëîivEXT
 
	`MANGLE
(
GëFømebuf„rP¨amëîivEXT
)

	)

609 
	#glGëH™dÀARB
 
	`MANGLE
(
GëH™dÀARB
)

	)

610 
	#glGëHi°ogømEXT
 
	`MANGLE
(
GëHi°ogømEXT
)

	)

611 
	#glGëHi°ogøm
 
	`MANGLE
(
GëHi°ogøm
)

	)

612 
	#glGëHi°ogømP¨amëîfvEXT
 
	`MANGLE
(
GëHi°ogømP¨amëîfvEXT
)

	)

613 
	#glGëHi°ogømP¨amëîfv
 
	`MANGLE
(
GëHi°ogømP¨amëîfv
)

	)

614 
	#glGëHi°ogømP¨amëîivEXT
 
	`MANGLE
(
GëHi°ogømP¨amëîivEXT
)

	)

615 
	#glGëHi°ogømP¨amëîiv
 
	`MANGLE
(
GëHi°ogømP¨amëîiv
)

	)

616 
	#glGëImageTønsf‹mP¨amëîfvHP
 
	`MANGLE
(
GëImageTønsf‹mP¨amëîfvHP
)

	)

617 
	#glGëImageTønsf‹mP¨amëîivHP
 
	`MANGLE
(
GëImageTønsf‹mP¨amëîivHP
)

	)

618 
	#glGëInfoLogARB
 
	`MANGLE
(
GëInfoLogARB
)

	)

619 
	#glGëIn°rumítsSGIX
 
	`MANGLE
(
GëIn°rumítsSGIX
)

	)

620 
	#glGëI¡egî64i_v
 
	`MANGLE
(
GëI¡egî64i_v
)

	)

621 
	#glGëI¡egî64v
 
	`MANGLE
(
GëI¡egî64v
)

	)

622 
	#glGëI¡egîIndexedvEXT
 
	`MANGLE
(
GëI¡egîIndexedvEXT
)

	)

623 
	#glGëI¡egîi_v
 
	`MANGLE
(
GëI¡egîi_v
)

	)

624 
	#glGëI¡egîui64i_vNV
 
	`MANGLE
(
GëI¡egîui64i_vNV
)

	)

625 
	#glGëI¡egîui64vNV
 
	`MANGLE
(
GëI¡egîui64vNV
)

	)

626 
	#glGëI¡egîv
 
	`MANGLE
(
GëI¡egîv
)

	)

627 
	#glGëInv¨ü¡BoﬁónvEXT
 
	`MANGLE
(
GëInv¨ü¡BoﬁónvEXT
)

	)

628 
	#glGëInv¨ü¡FlﬂtvEXT
 
	`MANGLE
(
GëInv¨ü¡FlﬂtvEXT
)

	)

629 
	#glGëInv¨ü¡I¡egîvEXT
 
	`MANGLE
(
GëInv¨ü¡I¡egîvEXT
)

	)

630 
	#glGëLightfv
 
	`MANGLE
(
GëLightfv
)

	)

631 
	#glGëLightiv
 
	`MANGLE
(
GëLightiv
)

	)

632 
	#glGëLi°P¨amëîfvSGIX
 
	`MANGLE
(
GëLi°P¨amëîfvSGIX
)

	)

633 
	#glGëLi°P¨amëîivSGIX
 
	`MANGLE
(
GëLi°P¨amëîivSGIX
)

	)

634 
	#glGëLoˇlC⁄°™tBoﬁónvEXT
 
	`MANGLE
(
GëLoˇlC⁄°™tBoﬁónvEXT
)

	)

635 
	#glGëLoˇlC⁄°™tFlﬂtvEXT
 
	`MANGLE
(
GëLoˇlC⁄°™tFlﬂtvEXT
)

	)

636 
	#glGëLoˇlC⁄°™tI¡egîvEXT
 
	`MANGLE
(
GëLoˇlC⁄°™tI¡egîvEXT
)

	)

637 
	#glGëM≠AâribP¨amëîfvNV
 
	`MANGLE
(
GëM≠AâribP¨amëîfvNV
)

	)

638 
	#glGëM≠AâribP¨amëîivNV
 
	`MANGLE
(
GëM≠AâribP¨amëîivNV
)

	)

639 
	#glGëM≠C⁄åﬁPoötsNV
 
	`MANGLE
(
GëM≠C⁄åﬁPoötsNV
)

	)

640 
	#glGëM≠dv
 
	`MANGLE
(
GëM≠dv
)

	)

641 
	#glGëM≠fv
 
	`MANGLE
(
GëM≠fv
)

	)

642 
	#glGëM≠iv
 
	`MANGLE
(
GëM≠iv
)

	)

643 
	#glGëM≠P¨amëîfvNV
 
	`MANGLE
(
GëM≠P¨amëîfvNV
)

	)

644 
	#glGëM≠P¨amëîivNV
 
	`MANGLE
(
GëM≠P¨amëîivNV
)

	)

645 
	#glGëM©îülfv
 
	`MANGLE
(
GëM©îülfv
)

	)

646 
	#glGëM©îüliv
 
	`MANGLE
(
GëM©îüliv
)

	)

647 
	#glGëMömaxEXT
 
	`MANGLE
(
GëMömaxEXT
)

	)

648 
	#glGëMömax
 
	`MANGLE
(
GëMömax
)

	)

649 
	#glGëMömaxP¨amëîfvEXT
 
	`MANGLE
(
GëMömaxP¨amëîfvEXT
)

	)

650 
	#glGëMömaxP¨amëîfv
 
	`MANGLE
(
GëMömaxP¨amëîfv
)

	)

651 
	#glGëMömaxP¨amëîivEXT
 
	`MANGLE
(
GëMömaxP¨amëîivEXT
)

	)

652 
	#glGëMömaxP¨amëîiv
 
	`MANGLE
(
GëMömaxP¨amëîiv
)

	)

653 
	#glGëMu…ißm∂efv
 
	`MANGLE
(
GëMu…ißm∂efv
)

	)

654 
	#glGëMu…ißm∂efvNV
 
	`MANGLE
(
GëMu…ißm∂efvNV
)

	)

655 
	#glGëMu…iTexEnvfvEXT
 
	`MANGLE
(
GëMu…iTexEnvfvEXT
)

	)

656 
	#glGëMu…iTexEnvivEXT
 
	`MANGLE
(
GëMu…iTexEnvivEXT
)

	)

657 
	#glGëMu…iTexGídvEXT
 
	`MANGLE
(
GëMu…iTexGídvEXT
)

	)

658 
	#glGëMu…iTexGífvEXT
 
	`MANGLE
(
GëMu…iTexGífvEXT
)

	)

659 
	#glGëMu…iTexGíivEXT
 
	`MANGLE
(
GëMu…iTexGíivEXT
)

	)

660 
	#glGëMu…iTexImageEXT
 
	`MANGLE
(
GëMu…iTexImageEXT
)

	)

661 
	#glGëMu…iTexLevñP¨amëîfvEXT
 
	`MANGLE
(
GëMu…iTexLevñP¨amëîfvEXT
)

	)

662 
	#glGëMu…iTexLevñP¨amëîivEXT
 
	`MANGLE
(
GëMu…iTexLevñP¨amëîivEXT
)

	)

663 
	#glGëMu…iTexP¨amëîfvEXT
 
	`MANGLE
(
GëMu…iTexP¨amëîfvEXT
)

	)

664 
	#glGëMu…iTexP¨amëîIivEXT
 
	`MANGLE
(
GëMu…iTexP¨amëîIivEXT
)

	)

665 
	#glGëMu…iTexP¨amëîIuivEXT
 
	`MANGLE
(
GëMu…iTexP¨amëîIuivEXT
)

	)

666 
	#glGëMu…iTexP¨amëîivEXT
 
	`MANGLE
(
GëMu…iTexP¨amëîivEXT
)

	)

667 
	#glGëNamedBuf„rP¨amëîivEXT
 
	`MANGLE
(
GëNamedBuf„rP¨amëîivEXT
)

	)

668 
	#glGëNamedBuf„rP¨amëîui64vNV
 
	`MANGLE
(
GëNamedBuf„rP¨amëîui64vNV
)

	)

669 
	#glGëNamedBuf„rPoöãrvEXT
 
	`MANGLE
(
GëNamedBuf„rPoöãrvEXT
)

	)

670 
	#glGëNamedBuf„rSubD©aEXT
 
	`MANGLE
(
GëNamedBuf„rSubD©aEXT
)

	)

671 
	#glGëNamedFømebuf„rAâachmítP¨amëîivEXT
 
	`MANGLE
(
GëNamedFømebuf„rAâachmítP¨amëîivEXT
)

	)

672 
	#glGëNamedProgømivEXT
 
	`MANGLE
(
GëNamedProgømivEXT
)

	)

673 
	#glGëNamedProgømLoˇlP¨amëîdvEXT
 
	`MANGLE
(
GëNamedProgømLoˇlP¨amëîdvEXT
)

	)

674 
	#glGëNamedProgømLoˇlP¨amëîfvEXT
 
	`MANGLE
(
GëNamedProgømLoˇlP¨amëîfvEXT
)

	)

675 
	#glGëNamedProgømLoˇlP¨amëîIivEXT
 
	`MANGLE
(
GëNamedProgømLoˇlP¨amëîIivEXT
)

	)

676 
	#glGëNamedProgømLoˇlP¨amëîIuivEXT
 
	`MANGLE
(
GëNamedProgømLoˇlP¨amëîIuivEXT
)

	)

677 
	#glGëNamedProgømSåögEXT
 
	`MANGLE
(
GëNamedProgømSåögEXT
)

	)

678 
	#glGëNamedRídîbuf„rP¨amëîivEXT
 
	`MANGLE
(
GëNamedRídîbuf„rP¨amëîivEXT
)

	)

679 
	#glGëObje˘Buf„rfvATI
 
	`MANGLE
(
GëObje˘Buf„rfvATI
)

	)

680 
	#glGëObje˘Buf„rivATI
 
	`MANGLE
(
GëObje˘Buf„rivATI
)

	)

681 
	#glGëObje˘P¨amëîfvARB
 
	`MANGLE
(
GëObje˘P¨amëîfvARB
)

	)

682 
	#glGëObje˘P¨amëîivAPPLE
 
	`MANGLE
(
GëObje˘P¨amëîivAPPLE
)

	)

683 
	#glGëObje˘P¨amëîivARB
 
	`MANGLE
(
GëObje˘P¨amëîivARB
)

	)

684 
	#glGëOc˛usi⁄QuîyivNV
 
	`MANGLE
(
GëOc˛usi⁄QuîyivNV
)

	)

685 
	#glGëOc˛usi⁄QuîyuivNV
 
	`MANGLE
(
GëOc˛usi⁄QuîyuivNV
)

	)

686 
	#glGëPîfM⁄ô‹Cou¡îD©aAMD
 
	`MANGLE
(
GëPîfM⁄ô‹Cou¡îD©aAMD
)

	)

687 
	#glGëPîfM⁄ô‹Cou¡îInfoAMD
 
	`MANGLE
(
GëPîfM⁄ô‹Cou¡îInfoAMD
)

	)

688 
	#glGëPîfM⁄ô‹Cou¡îsAMD
 
	`MANGLE
(
GëPîfM⁄ô‹Cou¡îsAMD
)

	)

689 
	#glGëPîfM⁄ô‹Cou¡îSåögAMD
 
	`MANGLE
(
GëPîfM⁄ô‹Cou¡îSåögAMD
)

	)

690 
	#glGëPîfM⁄ô‹GroupsAMD
 
	`MANGLE
(
GëPîfM⁄ô‹GroupsAMD
)

	)

691 
	#glGëPîfM⁄ô‹GroupSåögAMD
 
	`MANGLE
(
GëPîfM⁄ô‹GroupSåögAMD
)

	)

692 
	#glGëPixñM≠fv
 
	`MANGLE
(
GëPixñM≠fv
)

	)

693 
	#glGëPixñM≠uiv
 
	`MANGLE
(
GëPixñM≠uiv
)

	)

694 
	#glGëPixñM≠usv
 
	`MANGLE
(
GëPixñM≠usv
)

	)

695 
	#glGëPixñTexGíP¨amëîfvSGIS
 
	`MANGLE
(
GëPixñTexGíP¨amëîfvSGIS
)

	)

696 
	#glGëPixñTexGíP¨amëîivSGIS
 
	`MANGLE
(
GëPixñTexGíP¨amëîivSGIS
)

	)

697 
	#glGëPoöãrIndexedvEXT
 
	`MANGLE
(
GëPoöãrIndexedvEXT
)

	)

698 
	#glGëPoöãrvEXT
 
	`MANGLE
(
GëPoöãrvEXT
)

	)

699 
	#glGëPoöãrv
 
	`MANGLE
(
GëPoöãrv
)

	)

700 
	#glGëPﬁyg⁄Stù∂e
 
	`MANGLE
(
GëPﬁyg⁄Stù∂e
)

	)

701 
	#glGëProgømEnvP¨amëîdvARB
 
	`MANGLE
(
GëProgømEnvP¨amëîdvARB
)

	)

702 
	#glGëProgømEnvP¨amëîfvARB
 
	`MANGLE
(
GëProgømEnvP¨amëîfvARB
)

	)

703 
	#glGëProgømEnvP¨amëîIivNV
 
	`MANGLE
(
GëProgømEnvP¨amëîIivNV
)

	)

704 
	#glGëProgømEnvP¨amëîIuivNV
 
	`MANGLE
(
GëProgømEnvP¨amëîIuivNV
)

	)

705 
	#glGëProgømInfoLog
 
	`MANGLE
(
GëProgømInfoLog
)

	)

706 
	#glGëProgømivARB
 
	`MANGLE
(
GëProgømivARB
)

	)

707 
	#glGëProgømiv
 
	`MANGLE
(
GëProgømiv
)

	)

708 
	#glGëProgømivNV
 
	`MANGLE
(
GëProgømivNV
)

	)

709 
	#glGëProgømLoˇlP¨amëîdvARB
 
	`MANGLE
(
GëProgømLoˇlP¨amëîdvARB
)

	)

710 
	#glGëProgømLoˇlP¨amëîfvARB
 
	`MANGLE
(
GëProgømLoˇlP¨amëîfvARB
)

	)

711 
	#glGëProgømLoˇlP¨amëîIivNV
 
	`MANGLE
(
GëProgømLoˇlP¨amëîIivNV
)

	)

712 
	#glGëProgømLoˇlP¨amëîIuivNV
 
	`MANGLE
(
GëProgømLoˇlP¨amëîIuivNV
)

	)

713 
	#glGëProgømNamedP¨amëîdvNV
 
	`MANGLE
(
GëProgømNamedP¨amëîdvNV
)

	)

714 
	#glGëProgømNamedP¨amëîfvNV
 
	`MANGLE
(
GëProgømNamedP¨amëîfvNV
)

	)

715 
	#glGëProgømP¨amëîdvNV
 
	`MANGLE
(
GëProgømP¨amëîdvNV
)

	)

716 
	#glGëProgømP¨amëîfvNV
 
	`MANGLE
(
GëProgømP¨amëîfvNV
)

	)

717 
	#glGëProgømRegi°îfvMESA
 
	`MANGLE
(
GëProgømRegi°îfvMESA
)

	)

718 
	#glGëProgømSåögARB
 
	`MANGLE
(
GëProgømSåögARB
)

	)

719 
	#glGëProgømSåögNV
 
	`MANGLE
(
GëProgømSåögNV
)

	)

720 
	#glGëQuîyivARB
 
	`MANGLE
(
GëQuîyivARB
)

	)

721 
	#glGëQuîyiv
 
	`MANGLE
(
GëQuîyiv
)

	)

722 
	#glGëQuîyObje˘i64vEXT
 
	`MANGLE
(
GëQuîyObje˘i64vEXT
)

	)

723 
	#glGëQuîyObje˘ivARB
 
	`MANGLE
(
GëQuîyObje˘ivARB
)

	)

724 
	#glGëQuîyObje˘iv
 
	`MANGLE
(
GëQuîyObje˘iv
)

	)

725 
	#glGëQuîyObje˘ui64vEXT
 
	`MANGLE
(
GëQuîyObje˘ui64vEXT
)

	)

726 
	#glGëQuîyObje˘uivARB
 
	`MANGLE
(
GëQuîyObje˘uivARB
)

	)

727 
	#glGëQuîyObje˘uiv
 
	`MANGLE
(
GëQuîyObje˘uiv
)

	)

728 
	#glGëRídîbuf„rP¨amëîivEXT
 
	`MANGLE
(
GëRídîbuf„rP¨amëîivEXT
)

	)

729 
	#glGëRídîbuf„rP¨amëîiv
 
	`MANGLE
(
GëRídîbuf„rP¨amëîiv
)

	)

730 
	#glGëSï¨abÀFûãrEXT
 
	`MANGLE
(
GëSï¨abÀFûãrEXT
)

	)

731 
	#glGëSï¨abÀFûãr
 
	`MANGLE
(
GëSï¨abÀFûãr
)

	)

732 
	#glGëShadîInfoLog
 
	`MANGLE
(
GëShadîInfoLog
)

	)

733 
	#glGëShadîiv
 
	`MANGLE
(
GëShadîiv
)

	)

734 
	#glGëShadîSour˚ARB
 
	`MANGLE
(
GëShadîSour˚ARB
)

	)

735 
	#glGëShadîSour˚
 
	`MANGLE
(
GëShadîSour˚
)

	)

736 
	#glGëSh¨≥nTexFuncSGIS
 
	`MANGLE
(
GëSh¨≥nTexFuncSGIS
)

	)

737 
	#glGëSåögi
 
	`MANGLE
(
GëSåögi
)

	)

738 
	#glGëSåög
 
	`MANGLE
(
GëSåög
)

	)

739 
	#glGëSynciv
 
	`MANGLE
(
GëSynciv
)

	)

740 
	#glGëTexBumpP¨amëîfvATI
 
	`MANGLE
(
GëTexBumpP¨amëîfvATI
)

	)

741 
	#glGëTexBumpP¨amëîivATI
 
	`MANGLE
(
GëTexBumpP¨amëîivATI
)

	)

742 
	#glGëTexEnvfv
 
	`MANGLE
(
GëTexEnvfv
)

	)

743 
	#glGëTexEnviv
 
	`MANGLE
(
GëTexEnviv
)

	)

744 
	#glGëTexFûãrFuncSGIS
 
	`MANGLE
(
GëTexFûãrFuncSGIS
)

	)

745 
	#glGëTexGídv
 
	`MANGLE
(
GëTexGídv
)

	)

746 
	#glGëTexGífv
 
	`MANGLE
(
GëTexGífv
)

	)

747 
	#glGëTexGíiv
 
	`MANGLE
(
GëTexGíiv
)

	)

748 
	#glGëTexImage
 
	`MANGLE
(
GëTexImage
)

	)

749 
	#glGëTexLevñP¨amëîfv
 
	`MANGLE
(
GëTexLevñP¨amëîfv
)

	)

750 
	#glGëTexLevñP¨amëîiv
 
	`MANGLE
(
GëTexLevñP¨amëîiv
)

	)

751 
	#glGëTexP¨amëîfv
 
	`MANGLE
(
GëTexP¨amëîfv
)

	)

752 
	#glGëTexP¨amëîIivEXT
 
	`MANGLE
(
GëTexP¨amëîIivEXT
)

	)

753 
	#glGëTexP¨amëîIiv
 
	`MANGLE
(
GëTexP¨amëîIiv
)

	)

754 
	#glGëTexP¨amëîIuivEXT
 
	`MANGLE
(
GëTexP¨amëîIuivEXT
)

	)

755 
	#glGëTexP¨amëîIuiv
 
	`MANGLE
(
GëTexP¨amëîIuiv
)

	)

756 
	#glGëTexP¨amëîiv
 
	`MANGLE
(
GëTexP¨amëîiv
)

	)

757 
	#glGëTexP¨amëîPoöãrvAPPLE
 
	`MANGLE
(
GëTexP¨amëîPoöãrvAPPLE
)

	)

758 
	#glGëTextuªImageEXT
 
	`MANGLE
(
GëTextuªImageEXT
)

	)

759 
	#glGëTextuªLevñP¨amëîfvEXT
 
	`MANGLE
(
GëTextuªLevñP¨amëîfvEXT
)

	)

760 
	#glGëTextuªLevñP¨amëîivEXT
 
	`MANGLE
(
GëTextuªLevñP¨amëîivEXT
)

	)

761 
	#glGëTextuªP¨amëîfvEXT
 
	`MANGLE
(
GëTextuªP¨amëîfvEXT
)

	)

762 
	#glGëTextuªP¨amëîIivEXT
 
	`MANGLE
(
GëTextuªP¨amëîIivEXT
)

	)

763 
	#glGëTextuªP¨amëîIuivEXT
 
	`MANGLE
(
GëTextuªP¨amëîIuivEXT
)

	)

764 
	#glGëTextuªP¨amëîivEXT
 
	`MANGLE
(
GëTextuªP¨amëîivEXT
)

	)

765 
	#glGëTøckM©rixivNV
 
	`MANGLE
(
GëTøckM©rixivNV
)

	)

766 
	#glGëTønsf‹mFìdbackV¨yögEXT
 
	`MANGLE
(
GëTønsf‹mFìdbackV¨yögEXT
)

	)

767 
	#glGëTønsf‹mFìdbackV¨yög
 
	`MANGLE
(
GëTønsf‹mFìdbackV¨yög
)

	)

768 
	#glGëTønsf‹mFìdbackV¨yögNV
 
	`MANGLE
(
GëTønsf‹mFìdbackV¨yögNV
)

	)

769 
	#glGëUnif‹mBlockIndex
 
	`MANGLE
(
GëUnif‹mBlockIndex
)

	)

770 
	#glGëUnif‹mBuf„rSizeEXT
 
	`MANGLE
(
GëUnif‹mBuf„rSizeEXT
)

	)

771 
	#glGëUnif‹mfvARB
 
	`MANGLE
(
GëUnif‹mfvARB
)

	)

772 
	#glGëUnif‹mfv
 
	`MANGLE
(
GëUnif‹mfv
)

	)

773 
	#glGëUnif‹mIndi˚s
 
	`MANGLE
(
GëUnif‹mIndi˚s
)

	)

774 
	#glGëUnif‹mivARB
 
	`MANGLE
(
GëUnif‹mivARB
)

	)

775 
	#glGëUnif‹miv
 
	`MANGLE
(
GëUnif‹miv
)

	)

776 
	#glGëUnif‹mLoˇti⁄ARB
 
	`MANGLE
(
GëUnif‹mLoˇti⁄ARB
)

	)

777 
	#glGëUnif‹mLoˇti⁄
 
	`MANGLE
(
GëUnif‹mLoˇti⁄
)

	)

778 
	#glGëUnif‹mOff£tEXT
 
	`MANGLE
(
GëUnif‹mOff£tEXT
)

	)

779 
	#glGëUnif‹mui64vNV
 
	`MANGLE
(
GëUnif‹mui64vNV
)

	)

780 
	#glGëUnif‹muivEXT
 
	`MANGLE
(
GëUnif‹muivEXT
)

	)

781 
	#glGëUnif‹muiv
 
	`MANGLE
(
GëUnif‹muiv
)

	)

782 
	#glGëV¨ü¡AºayObje˘fvATI
 
	`MANGLE
(
GëV¨ü¡AºayObje˘fvATI
)

	)

783 
	#glGëV¨ü¡AºayObje˘ivATI
 
	`MANGLE
(
GëV¨ü¡AºayObje˘ivATI
)

	)

784 
	#glGëV¨ü¡BoﬁónvEXT
 
	`MANGLE
(
GëV¨ü¡BoﬁónvEXT
)

	)

785 
	#glGëV¨ü¡FlﬂtvEXT
 
	`MANGLE
(
GëV¨ü¡FlﬂtvEXT
)

	)

786 
	#glGëV¨ü¡I¡egîvEXT
 
	`MANGLE
(
GëV¨ü¡I¡egîvEXT
)

	)

787 
	#glGëV¨ü¡PoöãrvEXT
 
	`MANGLE
(
GëV¨ü¡PoöãrvEXT
)

	)

788 
	#glGëV¨yögLoˇti⁄NV
 
	`MANGLE
(
GëV¨yögLoˇti⁄NV
)

	)

789 
	#glGëVîãxAâribAºayObje˘fvATI
 
	`MANGLE
(
GëVîãxAâribAºayObje˘fvATI
)

	)

790 
	#glGëVîãxAâribAºayObje˘ivATI
 
	`MANGLE
(
GëVîãxAâribAºayObje˘ivATI
)

	)

791 
	#glGëVîãxAâribdvARB
 
	`MANGLE
(
GëVîãxAâribdvARB
)

	)

792 
	#glGëVîãxAâribdv
 
	`MANGLE
(
GëVîãxAâribdv
)

	)

793 
	#glGëVîãxAâribdvNV
 
	`MANGLE
(
GëVîãxAâribdvNV
)

	)

794 
	#glGëVîãxAâribfvARB
 
	`MANGLE
(
GëVîãxAâribfvARB
)

	)

795 
	#glGëVîãxAâribfv
 
	`MANGLE
(
GëVîãxAâribfv
)

	)

796 
	#glGëVîãxAâribfvNV
 
	`MANGLE
(
GëVîãxAâribfvNV
)

	)

797 
	#glGëVîãxAâribIivEXT
 
	`MANGLE
(
GëVîãxAâribIivEXT
)

	)

798 
	#glGëVîãxAâribIiv
 
	`MANGLE
(
GëVîãxAâribIiv
)

	)

799 
	#glGëVîãxAâribIuivEXT
 
	`MANGLE
(
GëVîãxAâribIuivEXT
)

	)

800 
	#glGëVîãxAâribIuiv
 
	`MANGLE
(
GëVîãxAâribIuiv
)

	)

801 
	#glGëVîãxAâribivARB
 
	`MANGLE
(
GëVîãxAâribivARB
)

	)

802 
	#glGëVîãxAâribiv
 
	`MANGLE
(
GëVîãxAâribiv
)

	)

803 
	#glGëVîãxAâribivNV
 
	`MANGLE
(
GëVîãxAâribivNV
)

	)

804 
	#glGëVîãxAâribPoöãrvARB
 
	`MANGLE
(
GëVîãxAâribPoöãrvARB
)

	)

805 
	#glGëVîãxAâribPoöãrv
 
	`MANGLE
(
GëVîãxAâribPoöãrv
)

	)

806 
	#glGëVîãxAâribPoöãrvNV
 
	`MANGLE
(
GëVîãxAâribPoöãrvNV
)

	)

807 
	#glGëVideoC≠tuªivNV
 
	`MANGLE
(
GëVideoC≠tuªivNV
)

	)

808 
	#glGëVideoC≠tuªSåómdvNV
 
	`MANGLE
(
GëVideoC≠tuªSåómdvNV
)

	)

809 
	#glGëVideoC≠tuªSåómfvNV
 
	`MANGLE
(
GëVideoC≠tuªSåómfvNV
)

	)

810 
	#glGëVideoC≠tuªSåómivNV
 
	`MANGLE
(
GëVideoC≠tuªSåómivNV
)

	)

811 
	#glGëVideoi64vNV
 
	`MANGLE
(
GëVideoi64vNV
)

	)

812 
	#glGëVideoivNV
 
	`MANGLE
(
GëVideoivNV
)

	)

813 
	#glGëVideoui64vNV
 
	`MANGLE
(
GëVideoui64vNV
)

	)

814 
	#glGëVideouivNV
 
	`MANGLE
(
GëVideouivNV
)

	)

815 
	#glGlobÆAÕhaFa˘‹bSUN
 
	`MANGLE
(
GlobÆAÕhaFa˘‹bSUN
)

	)

816 
	#glGlobÆAÕhaFa˘‹dSUN
 
	`MANGLE
(
GlobÆAÕhaFa˘‹dSUN
)

	)

817 
	#glGlobÆAÕhaFa˘‹fSUN
 
	`MANGLE
(
GlobÆAÕhaFa˘‹fSUN
)

	)

818 
	#glGlobÆAÕhaFa˘‹iSUN
 
	`MANGLE
(
GlobÆAÕhaFa˘‹iSUN
)

	)

819 
	#glGlobÆAÕhaFa˘‹sSUN
 
	`MANGLE
(
GlobÆAÕhaFa˘‹sSUN
)

	)

820 
	#glGlobÆAÕhaFa˘‹ubSUN
 
	`MANGLE
(
GlobÆAÕhaFa˘‹ubSUN
)

	)

821 
	#glGlobÆAÕhaFa˘‹uiSUN
 
	`MANGLE
(
GlobÆAÕhaFa˘‹uiSUN
)

	)

822 
	#glGlobÆAÕhaFa˘‹usSUN
 
	`MANGLE
(
GlobÆAÕhaFa˘‹usSUN
)

	)

823 
	#glHöt
 
	`MANGLE
(
Höt
)

	)

824 
	#glHötPGI
 
	`MANGLE
(
HötPGI
)

	)

825 
	#glHi°ogømEXT
 
	`MANGLE
(
Hi°ogømEXT
)

	)

826 
	#glHi°ogøm
 
	`MANGLE
(
Hi°ogøm
)

	)

827 
	#glIglooI¡îÁ˚SGIX
 
	`MANGLE
(
IglooI¡îÁ˚SGIX
)

	)

828 
	#glImageTønsf‹mP¨amëîfHP
 
	`MANGLE
(
ImageTønsf‹mP¨amëîfHP
)

	)

829 
	#glImageTønsf‹mP¨amëîfvHP
 
	`MANGLE
(
ImageTønsf‹mP¨amëîfvHP
)

	)

830 
	#glImageTønsf‹mP¨amëîiHP
 
	`MANGLE
(
ImageTønsf‹mP¨amëîiHP
)

	)

831 
	#glImageTønsf‹mP¨amëîivHP
 
	`MANGLE
(
ImageTønsf‹mP¨amëîivHP
)

	)

832 
	#glIndexd
 
	`MANGLE
(
Indexd
)

	)

833 
	#glIndexdv
 
	`MANGLE
(
Indexdv
)

	)

834 
	#glIndexf
 
	`MANGLE
(
Indexf
)

	)

835 
	#glIndexF‹m©NV
 
	`MANGLE
(
IndexF‹m©NV
)

	)

836 
	#glIndexFuncEXT
 
	`MANGLE
(
IndexFuncEXT
)

	)

837 
	#glIndexfv
 
	`MANGLE
(
Indexfv
)

	)

838 
	#glIndexi
 
	`MANGLE
(
Indexi
)

	)

839 
	#glIndexiv
 
	`MANGLE
(
Indexiv
)

	)

840 
	#glIndexMask
 
	`MANGLE
(
IndexMask
)

	)

841 
	#glIndexM©îülEXT
 
	`MANGLE
(
IndexM©îülEXT
)

	)

842 
	#glIndexPoöãrEXT
 
	`MANGLE
(
IndexPoöãrEXT
)

	)

843 
	#glIndexPoöãrLi°IBM
 
	`MANGLE
(
IndexPoöãrLi°IBM
)

	)

844 
	#glIndexPoöãr
 
	`MANGLE
(
IndexPoöãr
)

	)

845 
	#glIndexs
 
	`MANGLE
(
Indexs
)

	)

846 
	#glIndexsv
 
	`MANGLE
(
Indexsv
)

	)

847 
	#glIndexub
 
	`MANGLE
(
Indexub
)

	)

848 
	#glIndexubv
 
	`MANGLE
(
Indexubv
)

	)

849 
	#glInôNames
 
	`MANGLE
(
InôNames
)

	)

850 
	#glIn£πComp⁄ítEXT
 
	`MANGLE
(
In£πComp⁄ítEXT
)

	)

851 
	#glIn°rumítsBuf„rSGIX
 
	`MANGLE
(
In°rumítsBuf„rSGIX
)

	)

852 
	#glI¡îÀavedAºays
 
	`MANGLE
(
I¡îÀavedAºays
)

	)

853 
	#glIsAsyncM¨kîSGIX
 
	`MANGLE
(
IsAsyncM¨kîSGIX
)

	)

854 
	#glIsBuf„rARB
 
	`MANGLE
(
IsBuf„rARB
)

	)

855 
	#glIsBuf„r
 
	`MANGLE
(
IsBuf„r
)

	)

856 
	#glIsBuf„rResidítNV
 
	`MANGLE
(
IsBuf„rResidítNV
)

	)

857 
	#glIsE«bÀdi
 
	`MANGLE
(
IsE«bÀdi
)

	)

858 
	#glIsE«bÀdIndexedEXT
 
	`MANGLE
(
IsE«bÀdIndexedEXT
)

	)

859 
	#glIsE«bÀd
 
	`MANGLE
(
IsE«bÀd
)

	)

860 
	#glIsFí˚APPLE
 
	`MANGLE
(
IsFí˚APPLE
)

	)

861 
	#glIsFí˚NV
 
	`MANGLE
(
IsFí˚NV
)

	)

862 
	#glIsFømebuf„rEXT
 
	`MANGLE
(
IsFømebuf„rEXT
)

	)

863 
	#glIsFømebuf„r
 
	`MANGLE
(
IsFømebuf„r
)

	)

864 
	#glIsLi°
 
	`MANGLE
(
IsLi°
)

	)

865 
	#glIsNamedBuf„rResidítNV
 
	`MANGLE
(
IsNamedBuf„rResidítNV
)

	)

866 
	#glIsObje˘Buf„rATI
 
	`MANGLE
(
IsObje˘Buf„rATI
)

	)

867 
	#glIsOc˛usi⁄QuîyNV
 
	`MANGLE
(
IsOc˛usi⁄QuîyNV
)

	)

868 
	#glIsProgømARB
 
	`MANGLE
(
IsProgømARB
)

	)

869 
	#glIsProgøm
 
	`MANGLE
(
IsProgøm
)

	)

870 
	#glIsProgømNV
 
	`MANGLE
(
IsProgømNV
)

	)

871 
	#glIsQuîyARB
 
	`MANGLE
(
IsQuîyARB
)

	)

872 
	#glIsQuîy
 
	`MANGLE
(
IsQuîy
)

	)

873 
	#glIsRídîbuf„rEXT
 
	`MANGLE
(
IsRídîbuf„rEXT
)

	)

874 
	#glIsRídîbuf„r
 
	`MANGLE
(
IsRídîbuf„r
)

	)

875 
	#glIsShadî
 
	`MANGLE
(
IsShadî
)

	)

876 
	#glIsSync
 
	`MANGLE
(
IsSync
)

	)

877 
	#glIsTextuªEXT
 
	`MANGLE
(
IsTextuªEXT
)

	)

878 
	#glIsTextuª
 
	`MANGLE
(
IsTextuª
)

	)

879 
	#glIsTønsf‹mFìdbackNV
 
	`MANGLE
(
IsTønsf‹mFìdbackNV
)

	)

880 
	#glIsV¨ü¡E«bÀdEXT
 
	`MANGLE
(
IsV¨ü¡E«bÀdEXT
)

	)

881 
	#glIsVîãxAºayAPPLE
 
	`MANGLE
(
IsVîãxAºayAPPLE
)

	)

882 
	#glIsVîãxAºay
 
	`MANGLE
(
IsVîãxAºay
)

	)

883 
	#glIsVîãxAâribE«bÀdAPPLE
 
	`MANGLE
(
IsVîãxAâribE«bÀdAPPLE
)

	)

884 
	#glLightEnviSGIX
 
	`MANGLE
(
LightEnviSGIX
)

	)

885 
	#glLightf
 
	`MANGLE
(
Lightf
)

	)

886 
	#glLightfv
 
	`MANGLE
(
Lightfv
)

	)

887 
	#glLighti
 
	`MANGLE
(
Lighti
)

	)

888 
	#glLightiv
 
	`MANGLE
(
Lightiv
)

	)

889 
	#glLightModñf
 
	`MANGLE
(
LightModñf
)

	)

890 
	#glLightModñfv
 
	`MANGLE
(
LightModñfv
)

	)

891 
	#glLightModñi
 
	`MANGLE
(
LightModñi
)

	)

892 
	#glLightModñiv
 
	`MANGLE
(
LightModñiv
)

	)

893 
	#glLöeStù∂e
 
	`MANGLE
(
LöeStù∂e
)

	)

894 
	#glLöeWidth
 
	`MANGLE
(
LöeWidth
)

	)

895 
	#glLökProgømARB
 
	`MANGLE
(
LökProgømARB
)

	)

896 
	#glLökProgøm
 
	`MANGLE
(
LökProgøm
)

	)

897 
	#glLi°Ba£
 
	`MANGLE
(
Li°Ba£
)

	)

898 
	#glLi°P¨amëîfSGIX
 
	`MANGLE
(
Li°P¨amëîfSGIX
)

	)

899 
	#glLi°P¨amëîfvSGIX
 
	`MANGLE
(
Li°P¨amëîfvSGIX
)

	)

900 
	#glLi°P¨amëîiSGIX
 
	`MANGLE
(
Li°P¨amëîiSGIX
)

	)

901 
	#glLi°P¨amëîivSGIX
 
	`MANGLE
(
Li°P¨amëîivSGIX
)

	)

902 
	#glLﬂdIdítôyDef‹m©i⁄M≠SGIX
 
	`MANGLE
(
LﬂdIdítôyDef‹m©i⁄M≠SGIX
)

	)

903 
	#glLﬂdIdítôy
 
	`MANGLE
(
LﬂdIdítôy
)

	)

904 
	#glLﬂdM©rixd
 
	`MANGLE
(
LﬂdM©rixd
)

	)

905 
	#glLﬂdM©rixf
 
	`MANGLE
(
LﬂdM©rixf
)

	)

906 
	#glLﬂdName
 
	`MANGLE
(
LﬂdName
)

	)

907 
	#glLﬂdProgømNV
 
	`MANGLE
(
LﬂdProgømNV
)

	)

908 
	#glLﬂdTøn•o£M©rixdARB
 
	`MANGLE
(
LﬂdTøn•o£M©rixdARB
)

	)

909 
	#glLﬂdTøn•o£M©rixd
 
	`MANGLE
(
LﬂdTøn•o£M©rixd
)

	)

910 
	#glLﬂdTøn•o£M©rixfARB
 
	`MANGLE
(
LﬂdTøn•o£M©rixfARB
)

	)

911 
	#glLﬂdTøn•o£M©rixf
 
	`MANGLE
(
LﬂdTøn•o£M©rixf
)

	)

912 
	#glLockAºaysEXT
 
	`MANGLE
(
LockAºaysEXT
)

	)

913 
	#glLogicOp
 
	`MANGLE
(
LogicOp
)

	)

914 
	#glMakeBuf„rN⁄ResidítNV
 
	`MANGLE
(
MakeBuf„rN⁄ResidítNV
)

	)

915 
	#glMakeBuf„rResidítNV
 
	`MANGLE
(
MakeBuf„rResidítNV
)

	)

916 
	#glM≠1d
 
	`MANGLE
(
M≠1d
)

	)

917 
	#glM≠1f
 
	`MANGLE
(
M≠1f
)

	)

918 
	#glM≠2d
 
	`MANGLE
(
M≠2d
)

	)

919 
	#glM≠2f
 
	`MANGLE
(
M≠2f
)

	)

920 
	#glM≠Buf„rARB
 
	`MANGLE
(
M≠Buf„rARB
)

	)

921 
	#glM≠Buf„r
 
	`MANGLE
(
M≠Buf„r
)

	)

922 
	#glM≠Buf„rR™ge
 
	`MANGLE
(
M≠Buf„rR™ge
)

	)

923 
	#glM≠C⁄åﬁPoötsNV
 
	`MANGLE
(
M≠C⁄åﬁPoötsNV
)

	)

924 
	#glM≠Grid1d
 
	`MANGLE
(
M≠Grid1d
)

	)

925 
	#glM≠Grid1f
 
	`MANGLE
(
M≠Grid1f
)

	)

926 
	#glM≠Grid2d
 
	`MANGLE
(
M≠Grid2d
)

	)

927 
	#glM≠Grid2f
 
	`MANGLE
(
M≠Grid2f
)

	)

928 
	#glM≠NamedBuf„rEXT
 
	`MANGLE
(
M≠NamedBuf„rEXT
)

	)

929 
	#glM≠Obje˘Buf„rATI
 
	`MANGLE
(
M≠Obje˘Buf„rATI
)

	)

930 
	#glM≠P¨amëîfvNV
 
	`MANGLE
(
M≠P¨amëîfvNV
)

	)

931 
	#glM≠P¨amëîivNV
 
	`MANGLE
(
M≠P¨amëîivNV
)

	)

932 
	#glM≠VîãxAârib1dAPPLE
 
	`MANGLE
(
M≠VîãxAârib1dAPPLE
)

	)

933 
	#glM≠VîãxAârib1fAPPLE
 
	`MANGLE
(
M≠VîãxAârib1fAPPLE
)

	)

934 
	#glM≠VîãxAârib2dAPPLE
 
	`MANGLE
(
M≠VîãxAârib2dAPPLE
)

	)

935 
	#glM≠VîãxAârib2fAPPLE
 
	`MANGLE
(
M≠VîãxAârib2fAPPLE
)

	)

936 
	#glM©îülf
 
	`MANGLE
(
M©îülf
)

	)

937 
	#glM©îülfv
 
	`MANGLE
(
M©îülfv
)

	)

938 
	#glM©îüli
 
	`MANGLE
(
M©îüli
)

	)

939 
	#glM©îüliv
 
	`MANGLE
(
M©îüliv
)

	)

940 
	#glM©rixFru°umEXT
 
	`MANGLE
(
M©rixFru°umEXT
)

	)

941 
	#glM©rixIndexPoöãrARB
 
	`MANGLE
(
M©rixIndexPoöãrARB
)

	)

942 
	#glM©rixIndexubvARB
 
	`MANGLE
(
M©rixIndexubvARB
)

	)

943 
	#glM©rixIndexuivARB
 
	`MANGLE
(
M©rixIndexuivARB
)

	)

944 
	#glM©rixIndexusvARB
 
	`MANGLE
(
M©rixIndexusvARB
)

	)

945 
	#glM©rixLﬂddEXT
 
	`MANGLE
(
M©rixLﬂddEXT
)

	)

946 
	#glM©rixLﬂdfEXT
 
	`MANGLE
(
M©rixLﬂdfEXT
)

	)

947 
	#glM©rixLﬂdIdítôyEXT
 
	`MANGLE
(
M©rixLﬂdIdítôyEXT
)

	)

948 
	#glM©rixLﬂdTøn•o£dEXT
 
	`MANGLE
(
M©rixLﬂdTøn•o£dEXT
)

	)

949 
	#glM©rixLﬂdTøn•o£fEXT
 
	`MANGLE
(
M©rixLﬂdTøn•o£fEXT
)

	)

950 
	#glM©rixMode
 
	`MANGLE
(
M©rixMode
)

	)

951 
	#glM©rixMu…dEXT
 
	`MANGLE
(
M©rixMu…dEXT
)

	)

952 
	#glM©rixMu…fEXT
 
	`MANGLE
(
M©rixMu…fEXT
)

	)

953 
	#glM©rixMu…Tøn•o£dEXT
 
	`MANGLE
(
M©rixMu…Tøn•o£dEXT
)

	)

954 
	#glM©rixMu…Tøn•o£fEXT
 
	`MANGLE
(
M©rixMu…Tøn•o£fEXT
)

	)

955 
	#glM©rixOπhoEXT
 
	`MANGLE
(
M©rixOπhoEXT
)

	)

956 
	#glM©rixP›EXT
 
	`MANGLE
(
M©rixP›EXT
)

	)

957 
	#glM©rixPushEXT
 
	`MANGLE
(
M©rixPushEXT
)

	)

958 
	#glM©rixRŸ©edEXT
 
	`MANGLE
(
M©rixRŸ©edEXT
)

	)

959 
	#glM©rixRŸ©efEXT
 
	`MANGLE
(
M©rixRŸ©efEXT
)

	)

960 
	#glM©rixSˇÀdEXT
 
	`MANGLE
(
M©rixSˇÀdEXT
)

	)

961 
	#glM©rixSˇÀfEXT
 
	`MANGLE
(
M©rixSˇÀfEXT
)

	)

962 
	#glM©rixTøn¶©edEXT
 
	`MANGLE
(
M©rixTøn¶©edEXT
)

	)

963 
	#glM©rixTøn¶©efEXT
 
	`MANGLE
(
M©rixTøn¶©efEXT
)

	)

964 
	#glMömaxEXT
 
	`MANGLE
(
MömaxEXT
)

	)

965 
	#glMömax
 
	`MANGLE
(
Mömax
)

	)

966 
	#glMöSam∂eShadög
 
	`MANGLE
(
MöSam∂eShadög
)

	)

967 
	#glMu…iDøwAºaysEXT
 
	`MANGLE
(
Mu…iDøwAºaysEXT
)

	)

968 
	#glMu…iDøwAºays
 
	`MANGLE
(
Mu…iDøwAºays
)

	)

969 
	#glMu…iDøwEÀmítAºayAPPLE
 
	`MANGLE
(
Mu…iDøwEÀmítAºayAPPLE
)

	)

970 
	#glMu…iDøwEÀmítsBa£Vîãx
 
	`MANGLE
(
Mu…iDøwEÀmítsBa£Vîãx
)

	)

971 
	#glMu…iDøwEÀmítsEXT
 
	`MANGLE
(
Mu…iDøwEÀmítsEXT
)

	)

972 
	#glMu…iDøwEÀmíts
 
	`MANGLE
(
Mu…iDøwEÀmíts
)

	)

973 
	#glMu…iDøwR™geEÀmítAºayAPPLE
 
	`MANGLE
(
Mu…iDøwR™geEÀmítAºayAPPLE
)

	)

974 
	#glMu…iModeDøwAºaysIBM
 
	`MANGLE
(
Mu…iModeDøwAºaysIBM
)

	)

975 
	#glMu…iModeDøwEÀmítsIBM
 
	`MANGLE
(
Mu…iModeDøwEÀmítsIBM
)

	)

976 
	#glMu…iTexBuf„rEXT
 
	`MANGLE
(
Mu…iTexBuf„rEXT
)

	)

977 
	#glMu…iTexCo‹d1dARB
 
	`MANGLE
(
Mu…iTexCo‹d1dARB
)

	)

978 
	#glMu…iTexCo‹d1d
 
	`MANGLE
(
Mu…iTexCo‹d1d
)

	)

979 
	#glMu…iTexCo‹d1dvARB
 
	`MANGLE
(
Mu…iTexCo‹d1dvARB
)

	)

980 
	#glMu…iTexCo‹d1dv
 
	`MANGLE
(
Mu…iTexCo‹d1dv
)

	)

981 
	#glMu…iTexCo‹d1fARB
 
	`MANGLE
(
Mu…iTexCo‹d1fARB
)

	)

982 
	#glMu…iTexCo‹d1f
 
	`MANGLE
(
Mu…iTexCo‹d1f
)

	)

983 
	#glMu…iTexCo‹d1fvARB
 
	`MANGLE
(
Mu…iTexCo‹d1fvARB
)

	)

984 
	#glMu…iTexCo‹d1fv
 
	`MANGLE
(
Mu…iTexCo‹d1fv
)

	)

985 
	#glMu…iTexCo‹d1hNV
 
	`MANGLE
(
Mu…iTexCo‹d1hNV
)

	)

986 
	#glMu…iTexCo‹d1hvNV
 
	`MANGLE
(
Mu…iTexCo‹d1hvNV
)

	)

987 
	#glMu…iTexCo‹d1iARB
 
	`MANGLE
(
Mu…iTexCo‹d1iARB
)

	)

988 
	#glMu…iTexCo‹d1i
 
	`MANGLE
(
Mu…iTexCo‹d1i
)

	)

989 
	#glMu…iTexCo‹d1ivARB
 
	`MANGLE
(
Mu…iTexCo‹d1ivARB
)

	)

990 
	#glMu…iTexCo‹d1iv
 
	`MANGLE
(
Mu…iTexCo‹d1iv
)

	)

991 
	#glMu…iTexCo‹d1sARB
 
	`MANGLE
(
Mu…iTexCo‹d1sARB
)

	)

992 
	#glMu…iTexCo‹d1s
 
	`MANGLE
(
Mu…iTexCo‹d1s
)

	)

993 
	#glMu…iTexCo‹d1svARB
 
	`MANGLE
(
Mu…iTexCo‹d1svARB
)

	)

994 
	#glMu…iTexCo‹d1sv
 
	`MANGLE
(
Mu…iTexCo‹d1sv
)

	)

995 
	#glMu…iTexCo‹d2dARB
 
	`MANGLE
(
Mu…iTexCo‹d2dARB
)

	)

996 
	#glMu…iTexCo‹d2d
 
	`MANGLE
(
Mu…iTexCo‹d2d
)

	)

997 
	#glMu…iTexCo‹d2dvARB
 
	`MANGLE
(
Mu…iTexCo‹d2dvARB
)

	)

998 
	#glMu…iTexCo‹d2dv
 
	`MANGLE
(
Mu…iTexCo‹d2dv
)

	)

999 
	#glMu…iTexCo‹d2fARB
 
	`MANGLE
(
Mu…iTexCo‹d2fARB
)

	)

1000 
	#glMu…iTexCo‹d2f
 
	`MANGLE
(
Mu…iTexCo‹d2f
)

	)

1001 
	#glMu…iTexCo‹d2fvARB
 
	`MANGLE
(
Mu…iTexCo‹d2fvARB
)

	)

1002 
	#glMu…iTexCo‹d2fv
 
	`MANGLE
(
Mu…iTexCo‹d2fv
)

	)

1003 
	#glMu…iTexCo‹d2hNV
 
	`MANGLE
(
Mu…iTexCo‹d2hNV
)

	)

1004 
	#glMu…iTexCo‹d2hvNV
 
	`MANGLE
(
Mu…iTexCo‹d2hvNV
)

	)

1005 
	#glMu…iTexCo‹d2iARB
 
	`MANGLE
(
Mu…iTexCo‹d2iARB
)

	)

1006 
	#glMu…iTexCo‹d2i
 
	`MANGLE
(
Mu…iTexCo‹d2i
)

	)

1007 
	#glMu…iTexCo‹d2ivARB
 
	`MANGLE
(
Mu…iTexCo‹d2ivARB
)

	)

1008 
	#glMu…iTexCo‹d2iv
 
	`MANGLE
(
Mu…iTexCo‹d2iv
)

	)

1009 
	#glMu…iTexCo‹d2sARB
 
	`MANGLE
(
Mu…iTexCo‹d2sARB
)

	)

1010 
	#glMu…iTexCo‹d2s
 
	`MANGLE
(
Mu…iTexCo‹d2s
)

	)

1011 
	#glMu…iTexCo‹d2svARB
 
	`MANGLE
(
Mu…iTexCo‹d2svARB
)

	)

1012 
	#glMu…iTexCo‹d2sv
 
	`MANGLE
(
Mu…iTexCo‹d2sv
)

	)

1013 
	#glMu…iTexCo‹d3dARB
 
	`MANGLE
(
Mu…iTexCo‹d3dARB
)

	)

1014 
	#glMu…iTexCo‹d3d
 
	`MANGLE
(
Mu…iTexCo‹d3d
)

	)

1015 
	#glMu…iTexCo‹d3dvARB
 
	`MANGLE
(
Mu…iTexCo‹d3dvARB
)

	)

1016 
	#glMu…iTexCo‹d3dv
 
	`MANGLE
(
Mu…iTexCo‹d3dv
)

	)

1017 
	#glMu…iTexCo‹d3fARB
 
	`MANGLE
(
Mu…iTexCo‹d3fARB
)

	)

1018 
	#glMu…iTexCo‹d3f
 
	`MANGLE
(
Mu…iTexCo‹d3f
)

	)

1019 
	#glMu…iTexCo‹d3fvARB
 
	`MANGLE
(
Mu…iTexCo‹d3fvARB
)

	)

1020 
	#glMu…iTexCo‹d3fv
 
	`MANGLE
(
Mu…iTexCo‹d3fv
)

	)

1021 
	#glMu…iTexCo‹d3hNV
 
	`MANGLE
(
Mu…iTexCo‹d3hNV
)

	)

1022 
	#glMu…iTexCo‹d3hvNV
 
	`MANGLE
(
Mu…iTexCo‹d3hvNV
)

	)

1023 
	#glMu…iTexCo‹d3iARB
 
	`MANGLE
(
Mu…iTexCo‹d3iARB
)

	)

1024 
	#glMu…iTexCo‹d3i
 
	`MANGLE
(
Mu…iTexCo‹d3i
)

	)

1025 
	#glMu…iTexCo‹d3ivARB
 
	`MANGLE
(
Mu…iTexCo‹d3ivARB
)

	)

1026 
	#glMu…iTexCo‹d3iv
 
	`MANGLE
(
Mu…iTexCo‹d3iv
)

	)

1027 
	#glMu…iTexCo‹d3sARB
 
	`MANGLE
(
Mu…iTexCo‹d3sARB
)

	)

1028 
	#glMu…iTexCo‹d3s
 
	`MANGLE
(
Mu…iTexCo‹d3s
)

	)

1029 
	#glMu…iTexCo‹d3svARB
 
	`MANGLE
(
Mu…iTexCo‹d3svARB
)

	)

1030 
	#glMu…iTexCo‹d3sv
 
	`MANGLE
(
Mu…iTexCo‹d3sv
)

	)

1031 
	#glMu…iTexCo‹d4dARB
 
	`MANGLE
(
Mu…iTexCo‹d4dARB
)

	)

1032 
	#glMu…iTexCo‹d4d
 
	`MANGLE
(
Mu…iTexCo‹d4d
)

	)

1033 
	#glMu…iTexCo‹d4dvARB
 
	`MANGLE
(
Mu…iTexCo‹d4dvARB
)

	)

1034 
	#glMu…iTexCo‹d4dv
 
	`MANGLE
(
Mu…iTexCo‹d4dv
)

	)

1035 
	#glMu…iTexCo‹d4fARB
 
	`MANGLE
(
Mu…iTexCo‹d4fARB
)

	)

1036 
	#glMu…iTexCo‹d4f
 
	`MANGLE
(
Mu…iTexCo‹d4f
)

	)

1037 
	#glMu…iTexCo‹d4fvARB
 
	`MANGLE
(
Mu…iTexCo‹d4fvARB
)

	)

1038 
	#glMu…iTexCo‹d4fv
 
	`MANGLE
(
Mu…iTexCo‹d4fv
)

	)

1039 
	#glMu…iTexCo‹d4hNV
 
	`MANGLE
(
Mu…iTexCo‹d4hNV
)

	)

1040 
	#glMu…iTexCo‹d4hvNV
 
	`MANGLE
(
Mu…iTexCo‹d4hvNV
)

	)

1041 
	#glMu…iTexCo‹d4iARB
 
	`MANGLE
(
Mu…iTexCo‹d4iARB
)

	)

1042 
	#glMu…iTexCo‹d4i
 
	`MANGLE
(
Mu…iTexCo‹d4i
)

	)

1043 
	#glMu…iTexCo‹d4ivARB
 
	`MANGLE
(
Mu…iTexCo‹d4ivARB
)

	)

1044 
	#glMu…iTexCo‹d4iv
 
	`MANGLE
(
Mu…iTexCo‹d4iv
)

	)

1045 
	#glMu…iTexCo‹d4sARB
 
	`MANGLE
(
Mu…iTexCo‹d4sARB
)

	)

1046 
	#glMu…iTexCo‹d4s
 
	`MANGLE
(
Mu…iTexCo‹d4s
)

	)

1047 
	#glMu…iTexCo‹d4svARB
 
	`MANGLE
(
Mu…iTexCo‹d4svARB
)

	)

1048 
	#glMu…iTexCo‹d4sv
 
	`MANGLE
(
Mu…iTexCo‹d4sv
)

	)

1049 
	#glMu…iTexCo‹dPoöãrEXT
 
	`MANGLE
(
Mu…iTexCo‹dPoöãrEXT
)

	)

1050 
	#glMu…iTexEnvfEXT
 
	`MANGLE
(
Mu…iTexEnvfEXT
)

	)

1051 
	#glMu…iTexEnvfvEXT
 
	`MANGLE
(
Mu…iTexEnvfvEXT
)

	)

1052 
	#glMu…iTexEnviEXT
 
	`MANGLE
(
Mu…iTexEnviEXT
)

	)

1053 
	#glMu…iTexEnvivEXT
 
	`MANGLE
(
Mu…iTexEnvivEXT
)

	)

1054 
	#glMu…iTexGídEXT
 
	`MANGLE
(
Mu…iTexGídEXT
)

	)

1055 
	#glMu…iTexGídvEXT
 
	`MANGLE
(
Mu…iTexGídvEXT
)

	)

1056 
	#glMu…iTexGífEXT
 
	`MANGLE
(
Mu…iTexGífEXT
)

	)

1057 
	#glMu…iTexGífvEXT
 
	`MANGLE
(
Mu…iTexGífvEXT
)

	)

1058 
	#glMu…iTexGíiEXT
 
	`MANGLE
(
Mu…iTexGíiEXT
)

	)

1059 
	#glMu…iTexGíivEXT
 
	`MANGLE
(
Mu…iTexGíivEXT
)

	)

1060 
	#glMu…iTexImage1DEXT
 
	`MANGLE
(
Mu…iTexImage1DEXT
)

	)

1061 
	#glMu…iTexImage2DEXT
 
	`MANGLE
(
Mu…iTexImage2DEXT
)

	)

1062 
	#glMu…iTexImage3DEXT
 
	`MANGLE
(
Mu…iTexImage3DEXT
)

	)

1063 
	#glMu…iTexP¨amëîfEXT
 
	`MANGLE
(
Mu…iTexP¨amëîfEXT
)

	)

1064 
	#glMu…iTexP¨amëîfvEXT
 
	`MANGLE
(
Mu…iTexP¨amëîfvEXT
)

	)

1065 
	#glMu…iTexP¨amëîiEXT
 
	`MANGLE
(
Mu…iTexP¨amëîiEXT
)

	)

1066 
	#glMu…iTexP¨amëîIivEXT
 
	`MANGLE
(
Mu…iTexP¨amëîIivEXT
)

	)

1067 
	#glMu…iTexP¨amëîIuivEXT
 
	`MANGLE
(
Mu…iTexP¨amëîIuivEXT
)

	)

1068 
	#glMu…iTexP¨amëîivEXT
 
	`MANGLE
(
Mu…iTexP¨amëîivEXT
)

	)

1069 
	#glMu…iTexRídîbuf„rEXT
 
	`MANGLE
(
Mu…iTexRídîbuf„rEXT
)

	)

1070 
	#glMu…iTexSubImage1DEXT
 
	`MANGLE
(
Mu…iTexSubImage1DEXT
)

	)

1071 
	#glMu…iTexSubImage2DEXT
 
	`MANGLE
(
Mu…iTexSubImage2DEXT
)

	)

1072 
	#glMu…iTexSubImage3DEXT
 
	`MANGLE
(
Mu…iTexSubImage3DEXT
)

	)

1073 
	#glMu…M©rixd
 
	`MANGLE
(
Mu…M©rixd
)

	)

1074 
	#glMu…M©rixf
 
	`MANGLE
(
Mu…M©rixf
)

	)

1075 
	#glMu…Tøn•o£M©rixdARB
 
	`MANGLE
(
Mu…Tøn•o£M©rixdARB
)

	)

1076 
	#glMu…Tøn•o£M©rixd
 
	`MANGLE
(
Mu…Tøn•o£M©rixd
)

	)

1077 
	#glMu…Tøn•o£M©rixfARB
 
	`MANGLE
(
Mu…Tøn•o£M©rixfARB
)

	)

1078 
	#glMu…Tøn•o£M©rixf
 
	`MANGLE
(
Mu…Tøn•o£M©rixf
)

	)

1079 
	#glNamedBuf„rD©aEXT
 
	`MANGLE
(
NamedBuf„rD©aEXT
)

	)

1080 
	#glNamedBuf„rSubD©aEXT
 
	`MANGLE
(
NamedBuf„rSubD©aEXT
)

	)

1081 
	#glNamedFømebuf„rRídîbuf„rEXT
 
	`MANGLE
(
NamedFømebuf„rRídîbuf„rEXT
)

	)

1082 
	#glNamedFømebuf„rTextuª1DEXT
 
	`MANGLE
(
NamedFømebuf„rTextuª1DEXT
)

	)

1083 
	#glNamedFømebuf„rTextuª2DEXT
 
	`MANGLE
(
NamedFømebuf„rTextuª2DEXT
)

	)

1084 
	#glNamedFømebuf„rTextuª3DEXT
 
	`MANGLE
(
NamedFømebuf„rTextuª3DEXT
)

	)

1085 
	#glNamedFømebuf„rTextuªEXT
 
	`MANGLE
(
NamedFømebuf„rTextuªEXT
)

	)

1086 
	#glNamedFømebuf„rTextuªFa˚EXT
 
	`MANGLE
(
NamedFømebuf„rTextuªFa˚EXT
)

	)

1087 
	#glNamedFømebuf„rTextuªLayîEXT
 
	`MANGLE
(
NamedFømebuf„rTextuªLayîEXT
)

	)

1088 
	#glNamedMakeBuf„rN⁄ResidítNV
 
	`MANGLE
(
NamedMakeBuf„rN⁄ResidítNV
)

	)

1089 
	#glNamedMakeBuf„rResidítNV
 
	`MANGLE
(
NamedMakeBuf„rResidítNV
)

	)

1090 
	#glNamedProgømLoˇlP¨amëî4dEXT
 
	`MANGLE
(
NamedProgømLoˇlP¨amëî4dEXT
)

	)

1091 
	#glNamedProgømLoˇlP¨amëî4dvEXT
 
	`MANGLE
(
NamedProgømLoˇlP¨amëî4dvEXT
)

	)

1092 
	#glNamedProgømLoˇlP¨amëî4fEXT
 
	`MANGLE
(
NamedProgømLoˇlP¨amëî4fEXT
)

	)

1093 
	#glNamedProgømLoˇlP¨amëî4fvEXT
 
	`MANGLE
(
NamedProgømLoˇlP¨amëî4fvEXT
)

	)

1094 
	#glNamedProgømLoˇlP¨amëîI4iEXT
 
	`MANGLE
(
NamedProgømLoˇlP¨amëîI4iEXT
)

	)

1095 
	#glNamedProgømLoˇlP¨amëîI4ivEXT
 
	`MANGLE
(
NamedProgømLoˇlP¨amëîI4ivEXT
)

	)

1096 
	#glNamedProgømLoˇlP¨amëîI4uiEXT
 
	`MANGLE
(
NamedProgømLoˇlP¨amëîI4uiEXT
)

	)

1097 
	#glNamedProgømLoˇlP¨amëîI4uivEXT
 
	`MANGLE
(
NamedProgømLoˇlP¨amëîI4uivEXT
)

	)

1098 
	#glNamedProgømLoˇlP¨amëîs4fvEXT
 
	`MANGLE
(
NamedProgømLoˇlP¨amëîs4fvEXT
)

	)

1099 
	#glNamedProgømLoˇlP¨amëîsI4ivEXT
 
	`MANGLE
(
NamedProgømLoˇlP¨amëîsI4ivEXT
)

	)

1100 
	#glNamedProgømLoˇlP¨amëîsI4uivEXT
 
	`MANGLE
(
NamedProgømLoˇlP¨amëîsI4uivEXT
)

	)

1101 
	#glNamedProgømSåögEXT
 
	`MANGLE
(
NamedProgømSåögEXT
)

	)

1102 
	#glNamedRídîbuf„rSt‹ageEXT
 
	`MANGLE
(
NamedRídîbuf„rSt‹ageEXT
)

	)

1103 
	#glNamedRídîbuf„rSt‹ageMu…ißm∂eCovîageEXT
 
	`MANGLE
(
NamedRídîbuf„rSt‹ageMu…ißm∂eCovîageEXT
)

	)

1104 
	#glNamedRídîbuf„rSt‹ageMu…ißm∂eEXT
 
	`MANGLE
(
NamedRídîbuf„rSt‹ageMu…ißm∂eEXT
)

	)

1105 
	#glNewLi°
 
	`MANGLE
(
NewLi°
)

	)

1106 
	#glNewObje˘Buf„rATI
 
	`MANGLE
(
NewObje˘Buf„rATI
)

	)

1107 
	#glN‹mÆ3b
 
	`MANGLE
(
N‹mÆ3b
)

	)

1108 
	#glN‹mÆ3bv
 
	`MANGLE
(
N‹mÆ3bv
)

	)

1109 
	#glN‹mÆ3d
 
	`MANGLE
(
N‹mÆ3d
)

	)

1110 
	#glN‹mÆ3dv
 
	`MANGLE
(
N‹mÆ3dv
)

	)

1111 
	#glN‹mÆ3f
 
	`MANGLE
(
N‹mÆ3f
)

	)

1112 
	#glN‹mÆ3fVîãx3fSUN
 
	`MANGLE
(
N‹mÆ3fVîãx3fSUN
)

	)

1113 
	#glN‹mÆ3fVîãx3fvSUN
 
	`MANGLE
(
N‹mÆ3fVîãx3fvSUN
)

	)

1114 
	#glN‹mÆ3fv
 
	`MANGLE
(
N‹mÆ3fv
)

	)

1115 
	#glN‹mÆ3hNV
 
	`MANGLE
(
N‹mÆ3hNV
)

	)

1116 
	#glN‹mÆ3hvNV
 
	`MANGLE
(
N‹mÆ3hvNV
)

	)

1117 
	#glN‹mÆ3i
 
	`MANGLE
(
N‹mÆ3i
)

	)

1118 
	#glN‹mÆ3iv
 
	`MANGLE
(
N‹mÆ3iv
)

	)

1119 
	#glN‹mÆ3s
 
	`MANGLE
(
N‹mÆ3s
)

	)

1120 
	#glN‹mÆ3sv
 
	`MANGLE
(
N‹mÆ3sv
)

	)

1121 
	#glN‹mÆF‹m©NV
 
	`MANGLE
(
N‹mÆF‹m©NV
)

	)

1122 
	#glN‹mÆPoöãrEXT
 
	`MANGLE
(
N‹mÆPoöãrEXT
)

	)

1123 
	#glN‹mÆPoöãrLi°IBM
 
	`MANGLE
(
N‹mÆPoöãrLi°IBM
)

	)

1124 
	#glN‹mÆPoöãr
 
	`MANGLE
(
N‹mÆPoöãr
)

	)

1125 
	#glN‹mÆPoöãrvINTEL
 
	`MANGLE
(
N‹mÆPoöãrvINTEL
)

	)

1126 
	#glN‹mÆSåóm3bATI
 
	`MANGLE
(
N‹mÆSåóm3bATI
)

	)

1127 
	#glN‹mÆSåóm3bvATI
 
	`MANGLE
(
N‹mÆSåóm3bvATI
)

	)

1128 
	#glN‹mÆSåóm3dATI
 
	`MANGLE
(
N‹mÆSåóm3dATI
)

	)

1129 
	#glN‹mÆSåóm3dvATI
 
	`MANGLE
(
N‹mÆSåóm3dvATI
)

	)

1130 
	#glN‹mÆSåóm3fATI
 
	`MANGLE
(
N‹mÆSåóm3fATI
)

	)

1131 
	#glN‹mÆSåóm3fvATI
 
	`MANGLE
(
N‹mÆSåóm3fvATI
)

	)

1132 
	#glN‹mÆSåóm3iATI
 
	`MANGLE
(
N‹mÆSåóm3iATI
)

	)

1133 
	#glN‹mÆSåóm3ivATI
 
	`MANGLE
(
N‹mÆSåóm3ivATI
)

	)

1134 
	#glN‹mÆSåóm3sATI
 
	`MANGLE
(
N‹mÆSåóm3sATI
)

	)

1135 
	#glN‹mÆSåóm3svATI
 
	`MANGLE
(
N‹mÆSåóm3svATI
)

	)

1136 
	#glObje˘PurgóbÀAPPLE
 
	`MANGLE
(
Obje˘PurgóbÀAPPLE
)

	)

1137 
	#glObje˘U≈urgóbÀAPPLE
 
	`MANGLE
(
Obje˘U≈urgóbÀAPPLE
)

	)

1138 
	#glOπho
 
	`MANGLE
(
Oπho
)

	)

1139 
	#glPassTexCo‹dATI
 
	`MANGLE
(
PassTexCo‹dATI
)

	)

1140 
	#glPassThrough
 
	`MANGLE
(
PassThrough
)

	)

1141 
	#glPau£Tønsf‹mFìdbackNV
 
	`MANGLE
(
Pau£Tønsf‹mFìdbackNV
)

	)

1142 
	#glPixñD©aR™geNV
 
	`MANGLE
(
PixñD©aR™geNV
)

	)

1143 
	#glPixñM≠fv
 
	`MANGLE
(
PixñM≠fv
)

	)

1144 
	#glPixñM≠uiv
 
	`MANGLE
(
PixñM≠uiv
)

	)

1145 
	#glPixñM≠usv
 
	`MANGLE
(
PixñM≠usv
)

	)

1146 
	#glPixñSt‹ef
 
	`MANGLE
(
PixñSt‹ef
)

	)

1147 
	#glPixñSt‹ei
 
	`MANGLE
(
PixñSt‹ei
)

	)

1148 
	#glPixñTexGíP¨amëîfSGIS
 
	`MANGLE
(
PixñTexGíP¨amëîfSGIS
)

	)

1149 
	#glPixñTexGíP¨amëîfvSGIS
 
	`MANGLE
(
PixñTexGíP¨amëîfvSGIS
)

	)

1150 
	#glPixñTexGíP¨amëîiSGIS
 
	`MANGLE
(
PixñTexGíP¨amëîiSGIS
)

	)

1151 
	#glPixñTexGíP¨amëîivSGIS
 
	`MANGLE
(
PixñTexGíP¨amëîivSGIS
)

	)

1152 
	#glPixñTexGíSGIX
 
	`MANGLE
(
PixñTexGíSGIX
)

	)

1153 
	#glPixñTøns„rf
 
	`MANGLE
(
PixñTøns„rf
)

	)

1154 
	#glPixñTøns„ri
 
	`MANGLE
(
PixñTøns„ri
)

	)

1155 
	#glPixñTønsf‹mP¨amëîfEXT
 
	`MANGLE
(
PixñTønsf‹mP¨amëîfEXT
)

	)

1156 
	#glPixñTønsf‹mP¨amëîfvEXT
 
	`MANGLE
(
PixñTønsf‹mP¨amëîfvEXT
)

	)

1157 
	#glPixñTønsf‹mP¨amëîiEXT
 
	`MANGLE
(
PixñTønsf‹mP¨amëîiEXT
)

	)

1158 
	#glPixñTønsf‹mP¨amëîivEXT
 
	`MANGLE
(
PixñTønsf‹mP¨amëîivEXT
)

	)

1159 
	#glPixñZoom
 
	`MANGLE
(
PixñZoom
)

	)

1160 
	#glPNTrüngÀsfATI
 
	`MANGLE
(
PNTrüngÀsfATI
)

	)

1161 
	#glPNTrüngÀsiATI
 
	`MANGLE
(
PNTrüngÀsiATI
)

	)

1162 
	#glPoötP¨amëîfARB
 
	`MANGLE
(
PoötP¨amëîfARB
)

	)

1163 
	#glPoötP¨amëîfEXT
 
	`MANGLE
(
PoötP¨amëîfEXT
)

	)

1164 
	#glPoötP¨amëîf
 
	`MANGLE
(
PoötP¨amëîf
)

	)

1165 
	#glPoötP¨amëîfSGIS
 
	`MANGLE
(
PoötP¨amëîfSGIS
)

	)

1166 
	#glPoötP¨amëîfvARB
 
	`MANGLE
(
PoötP¨amëîfvARB
)

	)

1167 
	#glPoötP¨amëîfvEXT
 
	`MANGLE
(
PoötP¨amëîfvEXT
)

	)

1168 
	#glPoötP¨amëîfv
 
	`MANGLE
(
PoötP¨amëîfv
)

	)

1169 
	#glPoötP¨amëîfvSGIS
 
	`MANGLE
(
PoötP¨amëîfvSGIS
)

	)

1170 
	#glPoötP¨amëîi
 
	`MANGLE
(
PoötP¨amëîi
)

	)

1171 
	#glPoötP¨amëîiNV
 
	`MANGLE
(
PoötP¨amëîiNV
)

	)

1172 
	#glPoötP¨amëîiv
 
	`MANGLE
(
PoötP¨amëîiv
)

	)

1173 
	#glPoötP¨amëîivNV
 
	`MANGLE
(
PoötP¨amëîivNV
)

	)

1174 
	#glPoötSize
 
	`MANGLE
(
PoötSize
)

	)

1175 
	#glPﬁlAsyncSGIX
 
	`MANGLE
(
PﬁlAsyncSGIX
)

	)

1176 
	#glPﬁlIn°rumítsSGIX
 
	`MANGLE
(
PﬁlIn°rumítsSGIX
)

	)

1177 
	#glPﬁyg⁄Mode
 
	`MANGLE
(
Pﬁyg⁄Mode
)

	)

1178 
	#glPﬁyg⁄Off£tEXT
 
	`MANGLE
(
Pﬁyg⁄Off£tEXT
)

	)

1179 
	#glPﬁyg⁄Off£t
 
	`MANGLE
(
Pﬁyg⁄Off£t
)

	)

1180 
	#glPﬁyg⁄Stù∂e
 
	`MANGLE
(
Pﬁyg⁄Stù∂e
)

	)

1181 
	#glP›Aârib
 
	`MANGLE
(
P›Aârib
)

	)

1182 
	#glP›Clõ¡Aârib
 
	`MANGLE
(
P›Clõ¡Aârib
)

	)

1183 
	#glP›M©rix
 
	`MANGLE
(
P›M©rix
)

	)

1184 
	#glP›Name
 
	`MANGLE
(
P›Name
)

	)

1185 
	#glPª£¡FømeDuÆFûlNV
 
	`MANGLE
(
Pª£¡FømeDuÆFûlNV
)

	)

1186 
	#glPª£¡FømeKeyedNV
 
	`MANGLE
(
Pª£¡FømeKeyedNV
)

	)

1187 
	#glPrimôiveRe°¨tIndex
 
	`MANGLE
(
PrimôiveRe°¨tIndex
)

	)

1188 
	#glPrimôiveRe°¨tIndexNV
 
	`MANGLE
(
PrimôiveRe°¨tIndexNV
)

	)

1189 
	#glPrimôiveRe°¨tNV
 
	`MANGLE
(
PrimôiveRe°¨tNV
)

	)

1190 
	#glPri‹ôizeTextuªsEXT
 
	`MANGLE
(
Pri‹ôizeTextuªsEXT
)

	)

1191 
	#glPri‹ôizeTextuªs
 
	`MANGLE
(
Pri‹ôizeTextuªs
)

	)

1192 
	#glProgømBuf„rP¨amëîsfvNV
 
	`MANGLE
(
ProgømBuf„rP¨amëîsfvNV
)

	)

1193 
	#glProgømBuf„rP¨amëîsIivNV
 
	`MANGLE
(
ProgømBuf„rP¨amëîsIivNV
)

	)

1194 
	#glProgømBuf„rP¨amëîsIuivNV
 
	`MANGLE
(
ProgømBuf„rP¨amëîsIuivNV
)

	)

1195 
	#glProgømCÆlbackMESA
 
	`MANGLE
(
ProgømCÆlbackMESA
)

	)

1196 
	#glProgømEnvP¨amëî4dARB
 
	`MANGLE
(
ProgømEnvP¨amëî4dARB
)

	)

1197 
	#glProgømEnvP¨amëî4dvARB
 
	`MANGLE
(
ProgømEnvP¨amëî4dvARB
)

	)

1198 
	#glProgømEnvP¨amëî4fARB
 
	`MANGLE
(
ProgømEnvP¨amëî4fARB
)

	)

1199 
	#glProgømEnvP¨amëî4fvARB
 
	`MANGLE
(
ProgømEnvP¨amëî4fvARB
)

	)

1200 
	#glProgømEnvP¨amëîI4iNV
 
	`MANGLE
(
ProgømEnvP¨amëîI4iNV
)

	)

1201 
	#glProgømEnvP¨amëîI4ivNV
 
	`MANGLE
(
ProgømEnvP¨amëîI4ivNV
)

	)

1202 
	#glProgømEnvP¨amëîI4uiNV
 
	`MANGLE
(
ProgømEnvP¨amëîI4uiNV
)

	)

1203 
	#glProgømEnvP¨amëîI4uivNV
 
	`MANGLE
(
ProgømEnvP¨amëîI4uivNV
)

	)

1204 
	#glProgømEnvP¨amëîs4fvEXT
 
	`MANGLE
(
ProgømEnvP¨amëîs4fvEXT
)

	)

1205 
	#glProgømEnvP¨amëîsI4ivNV
 
	`MANGLE
(
ProgømEnvP¨amëîsI4ivNV
)

	)

1206 
	#glProgømEnvP¨amëîsI4uivNV
 
	`MANGLE
(
ProgømEnvP¨amëîsI4uivNV
)

	)

1207 
	#glProgømLoˇlP¨amëî4dARB
 
	`MANGLE
(
ProgømLoˇlP¨amëî4dARB
)

	)

1208 
	#glProgømLoˇlP¨amëî4dvARB
 
	`MANGLE
(
ProgømLoˇlP¨amëî4dvARB
)

	)

1209 
	#glProgømLoˇlP¨amëî4fARB
 
	`MANGLE
(
ProgømLoˇlP¨amëî4fARB
)

	)

1210 
	#glProgømLoˇlP¨amëî4fvARB
 
	`MANGLE
(
ProgømLoˇlP¨amëî4fvARB
)

	)

1211 
	#glProgømLoˇlP¨amëîI4iNV
 
	`MANGLE
(
ProgømLoˇlP¨amëîI4iNV
)

	)

1212 
	#glProgømLoˇlP¨amëîI4ivNV
 
	`MANGLE
(
ProgømLoˇlP¨amëîI4ivNV
)

	)

1213 
	#glProgømLoˇlP¨amëîI4uiNV
 
	`MANGLE
(
ProgømLoˇlP¨amëîI4uiNV
)

	)

1214 
	#glProgømLoˇlP¨amëîI4uivNV
 
	`MANGLE
(
ProgømLoˇlP¨amëîI4uivNV
)

	)

1215 
	#glProgømLoˇlP¨amëîs4fvEXT
 
	`MANGLE
(
ProgømLoˇlP¨amëîs4fvEXT
)

	)

1216 
	#glProgømLoˇlP¨amëîsI4ivNV
 
	`MANGLE
(
ProgømLoˇlP¨amëîsI4ivNV
)

	)

1217 
	#glProgømLoˇlP¨amëîsI4uivNV
 
	`MANGLE
(
ProgømLoˇlP¨amëîsI4uivNV
)

	)

1218 
	#glProgømNamedP¨amëî4dNV
 
	`MANGLE
(
ProgømNamedP¨amëî4dNV
)

	)

1219 
	#glProgømNamedP¨amëî4dvNV
 
	`MANGLE
(
ProgømNamedP¨amëî4dvNV
)

	)

1220 
	#glProgømNamedP¨amëî4fNV
 
	`MANGLE
(
ProgømNamedP¨amëî4fNV
)

	)

1221 
	#glProgømNamedP¨amëî4fvNV
 
	`MANGLE
(
ProgømNamedP¨amëî4fvNV
)

	)

1222 
	#glProgømP¨amëî4dNV
 
	`MANGLE
(
ProgømP¨amëî4dNV
)

	)

1223 
	#glProgømP¨amëî4dvNV
 
	`MANGLE
(
ProgømP¨amëî4dvNV
)

	)

1224 
	#glProgømP¨amëî4fNV
 
	`MANGLE
(
ProgømP¨amëî4fNV
)

	)

1225 
	#glProgømP¨amëî4fvNV
 
	`MANGLE
(
ProgømP¨amëî4fvNV
)

	)

1226 
	#glProgømP¨amëîiARB
 
	`MANGLE
(
ProgømP¨amëîiARB
)

	)

1227 
	#glProgømP¨amëîiEXT
 
	`MANGLE
(
ProgømP¨amëîiEXT
)

	)

1228 
	#glProgømP¨amëîi
 
	`MANGLE
(
ProgømP¨amëîi
)

	)

1229 
	#glProgømP¨amëîs4dvNV
 
	`MANGLE
(
ProgømP¨amëîs4dvNV
)

	)

1230 
	#glProgømP¨amëîs4fvNV
 
	`MANGLE
(
ProgømP¨amëîs4fvNV
)

	)

1231 
	#glProgømSåögARB
 
	`MANGLE
(
ProgømSåögARB
)

	)

1232 
	#glProgømUnif‹m1fEXT
 
	`MANGLE
(
ProgømUnif‹m1fEXT
)

	)

1233 
	#glProgømUnif‹m1fvEXT
 
	`MANGLE
(
ProgømUnif‹m1fvEXT
)

	)

1234 
	#glProgømUnif‹m1iEXT
 
	`MANGLE
(
ProgømUnif‹m1iEXT
)

	)

1235 
	#glProgømUnif‹m1ivEXT
 
	`MANGLE
(
ProgømUnif‹m1ivEXT
)

	)

1236 
	#glProgømUnif‹m1uiEXT
 
	`MANGLE
(
ProgømUnif‹m1uiEXT
)

	)

1237 
	#glProgømUnif‹m1uivEXT
 
	`MANGLE
(
ProgømUnif‹m1uivEXT
)

	)

1238 
	#glProgømUnif‹m2fEXT
 
	`MANGLE
(
ProgømUnif‹m2fEXT
)

	)

1239 
	#glProgømUnif‹m2fvEXT
 
	`MANGLE
(
ProgømUnif‹m2fvEXT
)

	)

1240 
	#glProgømUnif‹m2iEXT
 
	`MANGLE
(
ProgømUnif‹m2iEXT
)

	)

1241 
	#glProgømUnif‹m2ivEXT
 
	`MANGLE
(
ProgømUnif‹m2ivEXT
)

	)

1242 
	#glProgømUnif‹m2uiEXT
 
	`MANGLE
(
ProgømUnif‹m2uiEXT
)

	)

1243 
	#glProgømUnif‹m2uivEXT
 
	`MANGLE
(
ProgømUnif‹m2uivEXT
)

	)

1244 
	#glProgømUnif‹m3fEXT
 
	`MANGLE
(
ProgømUnif‹m3fEXT
)

	)

1245 
	#glProgømUnif‹m3fvEXT
 
	`MANGLE
(
ProgømUnif‹m3fvEXT
)

	)

1246 
	#glProgømUnif‹m3iEXT
 
	`MANGLE
(
ProgømUnif‹m3iEXT
)

	)

1247 
	#glProgømUnif‹m3ivEXT
 
	`MANGLE
(
ProgømUnif‹m3ivEXT
)

	)

1248 
	#glProgømUnif‹m3uiEXT
 
	`MANGLE
(
ProgømUnif‹m3uiEXT
)

	)

1249 
	#glProgømUnif‹m3uivEXT
 
	`MANGLE
(
ProgømUnif‹m3uivEXT
)

	)

1250 
	#glProgømUnif‹m4fEXT
 
	`MANGLE
(
ProgømUnif‹m4fEXT
)

	)

1251 
	#glProgømUnif‹m4fvEXT
 
	`MANGLE
(
ProgømUnif‹m4fvEXT
)

	)

1252 
	#glProgømUnif‹m4iEXT
 
	`MANGLE
(
ProgømUnif‹m4iEXT
)

	)

1253 
	#glProgømUnif‹m4ivEXT
 
	`MANGLE
(
ProgømUnif‹m4ivEXT
)

	)

1254 
	#glProgømUnif‹m4uiEXT
 
	`MANGLE
(
ProgømUnif‹m4uiEXT
)

	)

1255 
	#glProgømUnif‹m4uivEXT
 
	`MANGLE
(
ProgømUnif‹m4uivEXT
)

	)

1256 
	#glProgømUnif‹mM©rix2fvEXT
 
	`MANGLE
(
ProgømUnif‹mM©rix2fvEXT
)

	)

1257 
	#glProgømUnif‹mM©rix2x3fvEXT
 
	`MANGLE
(
ProgømUnif‹mM©rix2x3fvEXT
)

	)

1258 
	#glProgømUnif‹mM©rix2x4fvEXT
 
	`MANGLE
(
ProgømUnif‹mM©rix2x4fvEXT
)

	)

1259 
	#glProgømUnif‹mM©rix3fvEXT
 
	`MANGLE
(
ProgømUnif‹mM©rix3fvEXT
)

	)

1260 
	#glProgømUnif‹mM©rix3x2fvEXT
 
	`MANGLE
(
ProgømUnif‹mM©rix3x2fvEXT
)

	)

1261 
	#glProgømUnif‹mM©rix3x4fvEXT
 
	`MANGLE
(
ProgømUnif‹mM©rix3x4fvEXT
)

	)

1262 
	#glProgømUnif‹mM©rix4fvEXT
 
	`MANGLE
(
ProgømUnif‹mM©rix4fvEXT
)

	)

1263 
	#glProgømUnif‹mM©rix4x2fvEXT
 
	`MANGLE
(
ProgømUnif‹mM©rix4x2fvEXT
)

	)

1264 
	#glProgømUnif‹mM©rix4x3fvEXT
 
	`MANGLE
(
ProgømUnif‹mM©rix4x3fvEXT
)

	)

1265 
	#glProgømUnif‹mui64NV
 
	`MANGLE
(
ProgømUnif‹mui64NV
)

	)

1266 
	#glProgømUnif‹mui64vNV
 
	`MANGLE
(
ProgømUnif‹mui64vNV
)

	)

1267 
	#glProgømVîãxLimôNV
 
	`MANGLE
(
ProgømVîãxLimôNV
)

	)

1268 
	#glProvokögVîãxEXT
 
	`MANGLE
(
ProvokögVîãxEXT
)

	)

1269 
	#glProvokögVîãx
 
	`MANGLE
(
ProvokögVîãx
)

	)

1270 
	#glPushAârib
 
	`MANGLE
(
PushAârib
)

	)

1271 
	#glPushClõ¡AâribDeÁu…EXT
 
	`MANGLE
(
PushClõ¡AâribDeÁu…EXT
)

	)

1272 
	#glPushClõ¡Aârib
 
	`MANGLE
(
PushClõ¡Aârib
)

	)

1273 
	#glPushM©rix
 
	`MANGLE
(
PushM©rix
)

	)

1274 
	#glPushName
 
	`MANGLE
(
PushName
)

	)

1275 
	#glRa°îPos2d
 
	`MANGLE
(
Ra°îPos2d
)

	)

1276 
	#glRa°îPos2dv
 
	`MANGLE
(
Ra°îPos2dv
)

	)

1277 
	#glRa°îPos2f
 
	`MANGLE
(
Ra°îPos2f
)

	)

1278 
	#glRa°îPos2fv
 
	`MANGLE
(
Ra°îPos2fv
)

	)

1279 
	#glRa°îPos2i
 
	`MANGLE
(
Ra°îPos2i
)

	)

1280 
	#glRa°îPos2iv
 
	`MANGLE
(
Ra°îPos2iv
)

	)

1281 
	#glRa°îPos2s
 
	`MANGLE
(
Ra°îPos2s
)

	)

1282 
	#glRa°îPos2sv
 
	`MANGLE
(
Ra°îPos2sv
)

	)

1283 
	#glRa°îPos3d
 
	`MANGLE
(
Ra°îPos3d
)

	)

1284 
	#glRa°îPos3dv
 
	`MANGLE
(
Ra°îPos3dv
)

	)

1285 
	#glRa°îPos3f
 
	`MANGLE
(
Ra°îPos3f
)

	)

1286 
	#glRa°îPos3fv
 
	`MANGLE
(
Ra°îPos3fv
)

	)

1287 
	#glRa°îPos3i
 
	`MANGLE
(
Ra°îPos3i
)

	)

1288 
	#glRa°îPos3iv
 
	`MANGLE
(
Ra°îPos3iv
)

	)

1289 
	#glRa°îPos3s
 
	`MANGLE
(
Ra°îPos3s
)

	)

1290 
	#glRa°îPos3sv
 
	`MANGLE
(
Ra°îPos3sv
)

	)

1291 
	#glRa°îPos4d
 
	`MANGLE
(
Ra°îPos4d
)

	)

1292 
	#glRa°îPos4dv
 
	`MANGLE
(
Ra°îPos4dv
)

	)

1293 
	#glRa°îPos4f
 
	`MANGLE
(
Ra°îPos4f
)

	)

1294 
	#glRa°îPos4fv
 
	`MANGLE
(
Ra°îPos4fv
)

	)

1295 
	#glRa°îPos4i
 
	`MANGLE
(
Ra°îPos4i
)

	)

1296 
	#glRa°îPos4iv
 
	`MANGLE
(
Ra°îPos4iv
)

	)

1297 
	#glRa°îPos4s
 
	`MANGLE
(
Ra°îPos4s
)

	)

1298 
	#glRa°îPos4sv
 
	`MANGLE
(
Ra°îPos4sv
)

	)

1299 
	#glRódBuf„r
 
	`MANGLE
(
RódBuf„r
)

	)

1300 
	#glRódIn°rumítsSGIX
 
	`MANGLE
(
RódIn°rumítsSGIX
)

	)

1301 
	#glRódPixñs
 
	`MANGLE
(
RódPixñs
)

	)

1302 
	#glRe˘d
 
	`MANGLE
(
Re˘d
)

	)

1303 
	#glRe˘dv
 
	`MANGLE
(
Re˘dv
)

	)

1304 
	#glRe˘f
 
	`MANGLE
(
Re˘f
)

	)

1305 
	#glRe˘fv
 
	`MANGLE
(
Re˘fv
)

	)

1306 
	#glRe˘i
 
	`MANGLE
(
Re˘i
)

	)

1307 
	#glRe˘iv
 
	`MANGLE
(
Re˘iv
)

	)

1308 
	#glRe˘s
 
	`MANGLE
(
Re˘s
)

	)

1309 
	#glRe˘sv
 
	`MANGLE
(
Re˘sv
)

	)

1310 
	#glRe„ªn˚Pœ√SGIX
 
	`MANGLE
(
Re„ªn˚Pœ√SGIX
)

	)

1311 
	#glRídîbuf„rSt‹ageEXT
 
	`MANGLE
(
Rídîbuf„rSt‹ageEXT
)

	)

1312 
	#glRídîbuf„rSt‹age
 
	`MANGLE
(
Rídîbuf„rSt‹age
)

	)

1313 
	#glRídîbuf„rSt‹ageMu…ißm∂eCovîageNV
 
	`MANGLE
(
Rídîbuf„rSt‹ageMu…ißm∂eCovîageNV
)

	)

1314 
	#glRídîbuf„rSt‹ageMu…ißm∂eEXT
 
	`MANGLE
(
Rídîbuf„rSt‹ageMu…ißm∂eEXT
)

	)

1315 
	#glRídîbuf„rSt‹ageMu…ißm∂e
 
	`MANGLE
(
Rídîbuf„rSt‹ageMu…ißm∂e
)

	)

1316 
	#glRídîMode
 
	`MANGLE
(
RídîMode
)

	)

1317 
	#glRïœ˚mítCodePoöãrSUN
 
	`MANGLE
(
Rïœ˚mítCodePoöãrSUN
)

	)

1318 
	#glRïœ˚mítCodeubSUN
 
	`MANGLE
(
Rïœ˚mítCodeubSUN
)

	)

1319 
	#glRïœ˚mítCodeubvSUN
 
	`MANGLE
(
Rïœ˚mítCodeubvSUN
)

	)

1320 
	#glRïœ˚mítCodeuiCﬁ‹3fVîãx3fSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiCﬁ‹3fVîãx3fSUN
)

	)

1321 
	#glRïœ˚mítCodeuiCﬁ‹3fVîãx3fvSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiCﬁ‹3fVîãx3fvSUN
)

	)

1322 
	#glRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fSUN
)

	)

1323 
	#glRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fvSUN
)

	)

1324 
	#glRïœ˚mítCodeuiCﬁ‹4ubVîãx3fSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiCﬁ‹4ubVîãx3fSUN
)

	)

1325 
	#glRïœ˚mítCodeuiCﬁ‹4ubVîãx3fvSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiCﬁ‹4ubVîãx3fvSUN
)

	)

1326 
	#glRïœ˚mítCodeuiN‹mÆ3fVîãx3fSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiN‹mÆ3fVîãx3fSUN
)

	)

1327 
	#glRïœ˚mítCodeuiN‹mÆ3fVîãx3fvSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiN‹mÆ3fVîãx3fvSUN
)

	)

1328 
	#glRïœ˚mítCodeuiSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiSUN
)

	)

1329 
	#glRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
)

	)

1330 
	#glRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
)

	)

1331 
	#glRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fSUN
)

	)

1332 
	#glRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fvSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fvSUN
)

	)

1333 
	#glRïœ˚mítCodeuiTexCo‹d2fVîãx3fSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiTexCo‹d2fVîãx3fSUN
)

	)

1334 
	#glRïœ˚mítCodeuiTexCo‹d2fVîãx3fvSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiTexCo‹d2fVîãx3fvSUN
)

	)

1335 
	#glRïœ˚mítCodeuiVîãx3fSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiVîãx3fSUN
)

	)

1336 
	#glRïœ˚mítCodeuiVîãx3fvSUN
 
	`MANGLE
(
Rïœ˚mítCodeuiVîãx3fvSUN
)

	)

1337 
	#glRïœ˚mítCodeuivSUN
 
	`MANGLE
(
Rïœ˚mítCodeuivSUN
)

	)

1338 
	#glRïœ˚mítCodeusSUN
 
	`MANGLE
(
Rïœ˚mítCodeusSUN
)

	)

1339 
	#glRïœ˚mítCodeusvSUN
 
	`MANGLE
(
Rïœ˚mítCodeusvSUN
)

	)

1340 
	#glReque°ResidítProgømsNV
 
	`MANGLE
(
Reque°ResidítProgømsNV
)

	)

1341 
	#glRe£tHi°ogømEXT
 
	`MANGLE
(
Re£tHi°ogømEXT
)

	)

1342 
	#glRe£tHi°ogøm
 
	`MANGLE
(
Re£tHi°ogøm
)

	)

1343 
	#glRe£tMömaxEXT
 
	`MANGLE
(
Re£tMömaxEXT
)

	)

1344 
	#glRe£tMömax
 
	`MANGLE
(
Re£tMömax
)

	)

1345 
	#glResizeBuf„rsMESA
 
	`MANGLE
(
ResizeBuf„rsMESA
)

	)

1346 
	#glResumeTønsf‹mFìdbackNV
 
	`MANGLE
(
ResumeTønsf‹mFìdbackNV
)

	)

1347 
	#glRŸ©ed
 
	`MANGLE
(
RŸ©ed
)

	)

1348 
	#glRŸ©ef
 
	`MANGLE
(
RŸ©ef
)

	)

1349 
	#glSam∂eCovîageARB
 
	`MANGLE
(
Sam∂eCovîageARB
)

	)

1350 
	#glSam∂eCovîage
 
	`MANGLE
(
Sam∂eCovîage
)

	)

1351 
	#glSam∂eM≠ATI
 
	`MANGLE
(
Sam∂eM≠ATI
)

	)

1352 
	#glSam∂eMaskEXT
 
	`MANGLE
(
Sam∂eMaskEXT
)

	)

1353 
	#glSam∂eMaski
 
	`MANGLE
(
Sam∂eMaski
)

	)

1354 
	#glSam∂eMaskIndexedNV
 
	`MANGLE
(
Sam∂eMaskIndexedNV
)

	)

1355 
	#glSam∂eMaskSGIS
 
	`MANGLE
(
Sam∂eMaskSGIS
)

	)

1356 
	#glSam∂eP©ã∫EXT
 
	`MANGLE
(
Sam∂eP©ã∫EXT
)

	)

1357 
	#glSam∂eP©ã∫SGIS
 
	`MANGLE
(
Sam∂eP©ã∫SGIS
)

	)

1358 
	#glSˇÀd
 
	`MANGLE
(
SˇÀd
)

	)

1359 
	#glSˇÀf
 
	`MANGLE
(
SˇÀf
)

	)

1360 
	#glSciss‹
 
	`MANGLE
(
Sciss‹
)

	)

1361 
	#glSec⁄d¨yCﬁ‹3bEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3bEXT
)

	)

1362 
	#glSec⁄d¨yCﬁ‹3b
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3b
)

	)

1363 
	#glSec⁄d¨yCﬁ‹3bvEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3bvEXT
)

	)

1364 
	#glSec⁄d¨yCﬁ‹3bv
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3bv
)

	)

1365 
	#glSec⁄d¨yCﬁ‹3dEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3dEXT
)

	)

1366 
	#glSec⁄d¨yCﬁ‹3d
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3d
)

	)

1367 
	#glSec⁄d¨yCﬁ‹3dvEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3dvEXT
)

	)

1368 
	#glSec⁄d¨yCﬁ‹3dv
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3dv
)

	)

1369 
	#glSec⁄d¨yCﬁ‹3fEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3fEXT
)

	)

1370 
	#glSec⁄d¨yCﬁ‹3f
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3f
)

	)

1371 
	#glSec⁄d¨yCﬁ‹3fvEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3fvEXT
)

	)

1372 
	#glSec⁄d¨yCﬁ‹3fv
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3fv
)

	)

1373 
	#glSec⁄d¨yCﬁ‹3hNV
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3hNV
)

	)

1374 
	#glSec⁄d¨yCﬁ‹3hvNV
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3hvNV
)

	)

1375 
	#glSec⁄d¨yCﬁ‹3iEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3iEXT
)

	)

1376 
	#glSec⁄d¨yCﬁ‹3i
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3i
)

	)

1377 
	#glSec⁄d¨yCﬁ‹3ivEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3ivEXT
)

	)

1378 
	#glSec⁄d¨yCﬁ‹3iv
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3iv
)

	)

1379 
	#glSec⁄d¨yCﬁ‹3sEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3sEXT
)

	)

1380 
	#glSec⁄d¨yCﬁ‹3s
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3s
)

	)

1381 
	#glSec⁄d¨yCﬁ‹3svEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3svEXT
)

	)

1382 
	#glSec⁄d¨yCﬁ‹3sv
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3sv
)

	)

1383 
	#glSec⁄d¨yCﬁ‹3ubEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3ubEXT
)

	)

1384 
	#glSec⁄d¨yCﬁ‹3ub
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3ub
)

	)

1385 
	#glSec⁄d¨yCﬁ‹3ubvEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3ubvEXT
)

	)

1386 
	#glSec⁄d¨yCﬁ‹3ubv
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3ubv
)

	)

1387 
	#glSec⁄d¨yCﬁ‹3uiEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3uiEXT
)

	)

1388 
	#glSec⁄d¨yCﬁ‹3ui
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3ui
)

	)

1389 
	#glSec⁄d¨yCﬁ‹3uivEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3uivEXT
)

	)

1390 
	#glSec⁄d¨yCﬁ‹3uiv
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3uiv
)

	)

1391 
	#glSec⁄d¨yCﬁ‹3usEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3usEXT
)

	)

1392 
	#glSec⁄d¨yCﬁ‹3us
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3us
)

	)

1393 
	#glSec⁄d¨yCﬁ‹3usvEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3usvEXT
)

	)

1394 
	#glSec⁄d¨yCﬁ‹3usv
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹3usv
)

	)

1395 
	#glSec⁄d¨yCﬁ‹F‹m©NV
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹F‹m©NV
)

	)

1396 
	#glSec⁄d¨yCﬁ‹PoöãrEXT
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹PoöãrEXT
)

	)

1397 
	#glSec⁄d¨yCﬁ‹PoöãrLi°IBM
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹PoöãrLi°IBM
)

	)

1398 
	#glSec⁄d¨yCﬁ‹Poöãr
 
	`MANGLE
(
Sec⁄d¨yCﬁ‹Poöãr
)

	)

1399 
	#glSñe˘Buf„r
 
	`MANGLE
(
Sñe˘Buf„r
)

	)

1400 
	#glSñe˘PîfM⁄ô‹Cou¡îsAMD
 
	`MANGLE
(
Sñe˘PîfM⁄ô‹Cou¡îsAMD
)

	)

1401 
	#glSï¨abÀFûãr2DEXT
 
	`MANGLE
(
Sï¨abÀFûãr2DEXT
)

	)

1402 
	#glSï¨abÀFûãr2D
 
	`MANGLE
(
Sï¨abÀFûãr2D
)

	)

1403 
	#glSëFí˚APPLE
 
	`MANGLE
(
SëFí˚APPLE
)

	)

1404 
	#glSëFí˚NV
 
	`MANGLE
(
SëFí˚NV
)

	)

1405 
	#glSëFøgmítShadîC⁄°™tATI
 
	`MANGLE
(
SëFøgmítShadîC⁄°™tATI
)

	)

1406 
	#glSëInv¨ü¡EXT
 
	`MANGLE
(
SëInv¨ü¡EXT
)

	)

1407 
	#glSëLoˇlC⁄°™tEXT
 
	`MANGLE
(
SëLoˇlC⁄°™tEXT
)

	)

1408 
	#glShadeModñ
 
	`MANGLE
(
ShadeModñ
)

	)

1409 
	#glShadîOp1EXT
 
	`MANGLE
(
ShadîOp1EXT
)

	)

1410 
	#glShadîOp2EXT
 
	`MANGLE
(
ShadîOp2EXT
)

	)

1411 
	#glShadîOp3EXT
 
	`MANGLE
(
ShadîOp3EXT
)

	)

1412 
	#glShadîSour˚ARB
 
	`MANGLE
(
ShadîSour˚ARB
)

	)

1413 
	#glShadîSour˚
 
	`MANGLE
(
ShadîSour˚
)

	)

1414 
	#glSh¨≥nTexFuncSGIS
 
	`MANGLE
(
Sh¨≥nTexFuncSGIS
)

	)

1415 
	#glS¥ôeP¨amëîfSGIX
 
	`MANGLE
(
S¥ôeP¨amëîfSGIX
)

	)

1416 
	#glS¥ôeP¨amëîfvSGIX
 
	`MANGLE
(
S¥ôeP¨amëîfvSGIX
)

	)

1417 
	#glS¥ôeP¨amëîiSGIX
 
	`MANGLE
(
S¥ôeP¨amëîiSGIX
)

	)

1418 
	#glS¥ôeP¨amëîivSGIX
 
	`MANGLE
(
S¥ôeP¨amëîivSGIX
)

	)

1419 
	#glSèπIn°rumítsSGIX
 
	`MANGLE
(
SèπIn°rumítsSGIX
)

	)

1420 
	#glSãncûCÀ¨TagEXT
 
	`MANGLE
(
SãncûCÀ¨TagEXT
)

	)

1421 
	#glSãncûFunc
 
	`MANGLE
(
SãncûFunc
)

	)

1422 
	#glSãncûFuncSï¨©eATI
 
	`MANGLE
(
SãncûFuncSï¨©eATI
)

	)

1423 
	#glSãncûFuncSï¨©e
 
	`MANGLE
(
SãncûFuncSï¨©e
)

	)

1424 
	#glSãncûMask
 
	`MANGLE
(
SãncûMask
)

	)

1425 
	#glSãncûMaskSï¨©e
 
	`MANGLE
(
SãncûMaskSï¨©e
)

	)

1426 
	#glSãncûOp
 
	`MANGLE
(
SãncûOp
)

	)

1427 
	#glSãncûOpSï¨©eATI
 
	`MANGLE
(
SãncûOpSï¨©eATI
)

	)

1428 
	#glSãncûOpSï¨©e
 
	`MANGLE
(
SãncûOpSï¨©e
)

	)

1429 
	#glSt›In°rumítsSGIX
 
	`MANGLE
(
St›In°rumítsSGIX
)

	)

1430 
	#glSåögM¨kîGREMEDY
 
	`MANGLE
(
SåögM¨kîGREMEDY
)

	)

1431 
	#glSwizzÀEXT
 
	`MANGLE
(
SwizzÀEXT
)

	)

1432 
	#glTagSam∂eBuf„rSGIX
 
	`MANGLE
(
TagSam∂eBuf„rSGIX
)

	)

1433 
	#glT™gít3bEXT
 
	`MANGLE
(
T™gít3bEXT
)

	)

1434 
	#glT™gít3bvEXT
 
	`MANGLE
(
T™gít3bvEXT
)

	)

1435 
	#glT™gít3dEXT
 
	`MANGLE
(
T™gít3dEXT
)

	)

1436 
	#glT™gít3dvEXT
 
	`MANGLE
(
T™gít3dvEXT
)

	)

1437 
	#glT™gít3fEXT
 
	`MANGLE
(
T™gít3fEXT
)

	)

1438 
	#glT™gít3fvEXT
 
	`MANGLE
(
T™gít3fvEXT
)

	)

1439 
	#glT™gít3iEXT
 
	`MANGLE
(
T™gít3iEXT
)

	)

1440 
	#glT™gít3ivEXT
 
	`MANGLE
(
T™gít3ivEXT
)

	)

1441 
	#glT™gít3sEXT
 
	`MANGLE
(
T™gít3sEXT
)

	)

1442 
	#glT™gít3svEXT
 
	`MANGLE
(
T™gít3svEXT
)

	)

1443 
	#glT™gítPoöãrEXT
 
	`MANGLE
(
T™gítPoöãrEXT
)

	)

1444 
	#glTbuf„rMask3DFX
 
	`MANGLE
(
Tbuf„rMask3DFX
)

	)

1445 
	#glTes£Œ©i⁄Fa˘‹AMD
 
	`MANGLE
(
Tes£Œ©i⁄Fa˘‹AMD
)

	)

1446 
	#glTes£Œ©i⁄ModeAMD
 
	`MANGLE
(
Tes£Œ©i⁄ModeAMD
)

	)

1447 
	#glTe°Fí˚APPLE
 
	`MANGLE
(
Te°Fí˚APPLE
)

	)

1448 
	#glTe°Fí˚NV
 
	`MANGLE
(
Te°Fí˚NV
)

	)

1449 
	#glTe°Obje˘APPLE
 
	`MANGLE
(
Te°Obje˘APPLE
)

	)

1450 
	#glTexBuf„rARB
 
	`MANGLE
(
TexBuf„rARB
)

	)

1451 
	#glTexBuf„rEXT
 
	`MANGLE
(
TexBuf„rEXT
)

	)

1452 
	#glTexBuf„r
 
	`MANGLE
(
TexBuf„r
)

	)

1453 
	#glTexBumpP¨amëîfvATI
 
	`MANGLE
(
TexBumpP¨amëîfvATI
)

	)

1454 
	#glTexBumpP¨amëîivATI
 
	`MANGLE
(
TexBumpP¨amëîivATI
)

	)

1455 
	#glTexCo‹d1d
 
	`MANGLE
(
TexCo‹d1d
)

	)

1456 
	#glTexCo‹d1dv
 
	`MANGLE
(
TexCo‹d1dv
)

	)

1457 
	#glTexCo‹d1f
 
	`MANGLE
(
TexCo‹d1f
)

	)

1458 
	#glTexCo‹d1fv
 
	`MANGLE
(
TexCo‹d1fv
)

	)

1459 
	#glTexCo‹d1hNV
 
	`MANGLE
(
TexCo‹d1hNV
)

	)

1460 
	#glTexCo‹d1hvNV
 
	`MANGLE
(
TexCo‹d1hvNV
)

	)

1461 
	#glTexCo‹d1i
 
	`MANGLE
(
TexCo‹d1i
)

	)

1462 
	#glTexCo‹d1iv
 
	`MANGLE
(
TexCo‹d1iv
)

	)

1463 
	#glTexCo‹d1s
 
	`MANGLE
(
TexCo‹d1s
)

	)

1464 
	#glTexCo‹d1sv
 
	`MANGLE
(
TexCo‹d1sv
)

	)

1465 
	#glTexCo‹d2d
 
	`MANGLE
(
TexCo‹d2d
)

	)

1466 
	#glTexCo‹d2dv
 
	`MANGLE
(
TexCo‹d2dv
)

	)

1467 
	#glTexCo‹d2fCﬁ‹3fVîãx3fSUN
 
	`MANGLE
(
TexCo‹d2fCﬁ‹3fVîãx3fSUN
)

	)

1468 
	#glTexCo‹d2fCﬁ‹3fVîãx3fvSUN
 
	`MANGLE
(
TexCo‹d2fCﬁ‹3fVîãx3fvSUN
)

	)

1469 
	#glTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
 
	`MANGLE
(
TexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
)

	)

1470 
	#glTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 
	`MANGLE
(
TexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
)

	)

1471 
	#glTexCo‹d2fCﬁ‹4ubVîãx3fSUN
 
	`MANGLE
(
TexCo‹d2fCﬁ‹4ubVîãx3fSUN
)

	)

1472 
	#glTexCo‹d2fCﬁ‹4ubVîãx3fvSUN
 
	`MANGLE
(
TexCo‹d2fCﬁ‹4ubVîãx3fvSUN
)

	)

1473 
	#glTexCo‹d2f
 
	`MANGLE
(
TexCo‹d2f
)

	)

1474 
	#glTexCo‹d2fN‹mÆ3fVîãx3fSUN
 
	`MANGLE
(
TexCo‹d2fN‹mÆ3fVîãx3fSUN
)

	)

1475 
	#glTexCo‹d2fN‹mÆ3fVîãx3fvSUN
 
	`MANGLE
(
TexCo‹d2fN‹mÆ3fVîãx3fvSUN
)

	)

1476 
	#glTexCo‹d2fVîãx3fSUN
 
	`MANGLE
(
TexCo‹d2fVîãx3fSUN
)

	)

1477 
	#glTexCo‹d2fVîãx3fvSUN
 
	`MANGLE
(
TexCo‹d2fVîãx3fvSUN
)

	)

1478 
	#glTexCo‹d2fv
 
	`MANGLE
(
TexCo‹d2fv
)

	)

1479 
	#glTexCo‹d2hNV
 
	`MANGLE
(
TexCo‹d2hNV
)

	)

1480 
	#glTexCo‹d2hvNV
 
	`MANGLE
(
TexCo‹d2hvNV
)

	)

1481 
	#glTexCo‹d2i
 
	`MANGLE
(
TexCo‹d2i
)

	)

1482 
	#glTexCo‹d2iv
 
	`MANGLE
(
TexCo‹d2iv
)

	)

1483 
	#glTexCo‹d2s
 
	`MANGLE
(
TexCo‹d2s
)

	)

1484 
	#glTexCo‹d2sv
 
	`MANGLE
(
TexCo‹d2sv
)

	)

1485 
	#glTexCo‹d3d
 
	`MANGLE
(
TexCo‹d3d
)

	)

1486 
	#glTexCo‹d3dv
 
	`MANGLE
(
TexCo‹d3dv
)

	)

1487 
	#glTexCo‹d3f
 
	`MANGLE
(
TexCo‹d3f
)

	)

1488 
	#glTexCo‹d3fv
 
	`MANGLE
(
TexCo‹d3fv
)

	)

1489 
	#glTexCo‹d3hNV
 
	`MANGLE
(
TexCo‹d3hNV
)

	)

1490 
	#glTexCo‹d3hvNV
 
	`MANGLE
(
TexCo‹d3hvNV
)

	)

1491 
	#glTexCo‹d3i
 
	`MANGLE
(
TexCo‹d3i
)

	)

1492 
	#glTexCo‹d3iv
 
	`MANGLE
(
TexCo‹d3iv
)

	)

1493 
	#glTexCo‹d3s
 
	`MANGLE
(
TexCo‹d3s
)

	)

1494 
	#glTexCo‹d3sv
 
	`MANGLE
(
TexCo‹d3sv
)

	)

1495 
	#glTexCo‹d4d
 
	`MANGLE
(
TexCo‹d4d
)

	)

1496 
	#glTexCo‹d4dv
 
	`MANGLE
(
TexCo‹d4dv
)

	)

1497 
	#glTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fSUN
 
	`MANGLE
(
TexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fSUN
)

	)

1498 
	#glTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fvSUN
 
	`MANGLE
(
TexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fvSUN
)

	)

1499 
	#glTexCo‹d4f
 
	`MANGLE
(
TexCo‹d4f
)

	)

1500 
	#glTexCo‹d4fVîãx4fSUN
 
	`MANGLE
(
TexCo‹d4fVîãx4fSUN
)

	)

1501 
	#glTexCo‹d4fVîãx4fvSUN
 
	`MANGLE
(
TexCo‹d4fVîãx4fvSUN
)

	)

1502 
	#glTexCo‹d4fv
 
	`MANGLE
(
TexCo‹d4fv
)

	)

1503 
	#glTexCo‹d4hNV
 
	`MANGLE
(
TexCo‹d4hNV
)

	)

1504 
	#glTexCo‹d4hvNV
 
	`MANGLE
(
TexCo‹d4hvNV
)

	)

1505 
	#glTexCo‹d4i
 
	`MANGLE
(
TexCo‹d4i
)

	)

1506 
	#glTexCo‹d4iv
 
	`MANGLE
(
TexCo‹d4iv
)

	)

1507 
	#glTexCo‹d4s
 
	`MANGLE
(
TexCo‹d4s
)

	)

1508 
	#glTexCo‹d4sv
 
	`MANGLE
(
TexCo‹d4sv
)

	)

1509 
	#glTexCo‹dF‹m©NV
 
	`MANGLE
(
TexCo‹dF‹m©NV
)

	)

1510 
	#glTexCo‹dPoöãrEXT
 
	`MANGLE
(
TexCo‹dPoöãrEXT
)

	)

1511 
	#glTexCo‹dPoöãrLi°IBM
 
	`MANGLE
(
TexCo‹dPoöãrLi°IBM
)

	)

1512 
	#glTexCo‹dPoöãr
 
	`MANGLE
(
TexCo‹dPoöãr
)

	)

1513 
	#glTexCo‹dPoöãrvINTEL
 
	`MANGLE
(
TexCo‹dPoöãrvINTEL
)

	)

1514 
	#glTexEnvf
 
	`MANGLE
(
TexEnvf
)

	)

1515 
	#glTexEnvfv
 
	`MANGLE
(
TexEnvfv
)

	)

1516 
	#glTexEnvi
 
	`MANGLE
(
TexEnvi
)

	)

1517 
	#glTexEnviv
 
	`MANGLE
(
TexEnviv
)

	)

1518 
	#glTexFûãrFuncSGIS
 
	`MANGLE
(
TexFûãrFuncSGIS
)

	)

1519 
	#glTexGíd
 
	`MANGLE
(
TexGíd
)

	)

1520 
	#glTexGídv
 
	`MANGLE
(
TexGídv
)

	)

1521 
	#glTexGíf
 
	`MANGLE
(
TexGíf
)

	)

1522 
	#glTexGífv
 
	`MANGLE
(
TexGífv
)

	)

1523 
	#glTexGíi
 
	`MANGLE
(
TexGíi
)

	)

1524 
	#glTexGíiv
 
	`MANGLE
(
TexGíiv
)

	)

1525 
	#glTexImage1D
 
	`MANGLE
(
TexImage1D
)

	)

1526 
	#glTexImage2D
 
	`MANGLE
(
TexImage2D
)

	)

1527 
	#glTexImage2DMu…ißm∂e
 
	`MANGLE
(
TexImage2DMu…ißm∂e
)

	)

1528 
	#glTexImage3DEXT
 
	`MANGLE
(
TexImage3DEXT
)

	)

1529 
	#glTexImage3D
 
	`MANGLE
(
TexImage3D
)

	)

1530 
	#glTexImage3DMu…ißm∂e
 
	`MANGLE
(
TexImage3DMu…ißm∂e
)

	)

1531 
	#glTexImage4DSGIS
 
	`MANGLE
(
TexImage4DSGIS
)

	)

1532 
	#glTexP¨amëîf
 
	`MANGLE
(
TexP¨amëîf
)

	)

1533 
	#glTexP¨amëîfv
 
	`MANGLE
(
TexP¨amëîfv
)

	)

1534 
	#glTexP¨amëîIivEXT
 
	`MANGLE
(
TexP¨amëîIivEXT
)

	)

1535 
	#glTexP¨amëîIiv
 
	`MANGLE
(
TexP¨amëîIiv
)

	)

1536 
	#glTexP¨amëîi
 
	`MANGLE
(
TexP¨amëîi
)

	)

1537 
	#glTexP¨amëîIuivEXT
 
	`MANGLE
(
TexP¨amëîIuivEXT
)

	)

1538 
	#glTexP¨amëîIuiv
 
	`MANGLE
(
TexP¨amëîIuiv
)

	)

1539 
	#glTexP¨amëîiv
 
	`MANGLE
(
TexP¨amëîiv
)

	)

1540 
	#glTexRídîbuf„rNV
 
	`MANGLE
(
TexRídîbuf„rNV
)

	)

1541 
	#glTexSubImage1DEXT
 
	`MANGLE
(
TexSubImage1DEXT
)

	)

1542 
	#glTexSubImage1D
 
	`MANGLE
(
TexSubImage1D
)

	)

1543 
	#glTexSubImage2DEXT
 
	`MANGLE
(
TexSubImage2DEXT
)

	)

1544 
	#glTexSubImage2D
 
	`MANGLE
(
TexSubImage2D
)

	)

1545 
	#glTexSubImage3DEXT
 
	`MANGLE
(
TexSubImage3DEXT
)

	)

1546 
	#glTexSubImage3D
 
	`MANGLE
(
TexSubImage3D
)

	)

1547 
	#glTexSubImage4DSGIS
 
	`MANGLE
(
TexSubImage4DSGIS
)

	)

1548 
	#glTextuªB¨rõrNV
 
	`MANGLE
(
TextuªB¨rõrNV
)

	)

1549 
	#glTextuªBuf„rEXT
 
	`MANGLE
(
TextuªBuf„rEXT
)

	)

1550 
	#glTextuªCﬁ‹MaskSGIS
 
	`MANGLE
(
TextuªCﬁ‹MaskSGIS
)

	)

1551 
	#glTextuªImage1DEXT
 
	`MANGLE
(
TextuªImage1DEXT
)

	)

1552 
	#glTextuªImage2DEXT
 
	`MANGLE
(
TextuªImage2DEXT
)

	)

1553 
	#glTextuªImage3DEXT
 
	`MANGLE
(
TextuªImage3DEXT
)

	)

1554 
	#glTextuªLightEXT
 
	`MANGLE
(
TextuªLightEXT
)

	)

1555 
	#glTextuªM©îülEXT
 
	`MANGLE
(
TextuªM©îülEXT
)

	)

1556 
	#glTextuªN‹mÆEXT
 
	`MANGLE
(
TextuªN‹mÆEXT
)

	)

1557 
	#glTextuªP¨amëîfEXT
 
	`MANGLE
(
TextuªP¨amëîfEXT
)

	)

1558 
	#glTextuªP¨amëîfvEXT
 
	`MANGLE
(
TextuªP¨amëîfvEXT
)

	)

1559 
	#glTextuªP¨amëîiEXT
 
	`MANGLE
(
TextuªP¨amëîiEXT
)

	)

1560 
	#glTextuªP¨amëîIivEXT
 
	`MANGLE
(
TextuªP¨amëîIivEXT
)

	)

1561 
	#glTextuªP¨amëîIuivEXT
 
	`MANGLE
(
TextuªP¨amëîIuivEXT
)

	)

1562 
	#glTextuªP¨amëîivEXT
 
	`MANGLE
(
TextuªP¨amëîivEXT
)

	)

1563 
	#glTextuªR™geAPPLE
 
	`MANGLE
(
TextuªR™geAPPLE
)

	)

1564 
	#glTextuªRídîbuf„rEXT
 
	`MANGLE
(
TextuªRídîbuf„rEXT
)

	)

1565 
	#glTextuªSubImage1DEXT
 
	`MANGLE
(
TextuªSubImage1DEXT
)

	)

1566 
	#glTextuªSubImage2DEXT
 
	`MANGLE
(
TextuªSubImage2DEXT
)

	)

1567 
	#glTextuªSubImage3DEXT
 
	`MANGLE
(
TextuªSubImage3DEXT
)

	)

1568 
	#glTøckM©rixNV
 
	`MANGLE
(
TøckM©rixNV
)

	)

1569 
	#glTønsf‹mFìdbackAâribsNV
 
	`MANGLE
(
Tønsf‹mFìdbackAâribsNV
)

	)

1570 
	#glTønsf‹mFìdbackV¨yögsEXT
 
	`MANGLE
(
Tønsf‹mFìdbackV¨yögsEXT
)

	)

1571 
	#glTønsf‹mFìdbackV¨yögs
 
	`MANGLE
(
Tønsf‹mFìdbackV¨yögs
)

	)

1572 
	#glTønsf‹mFìdbackV¨yögsNV
 
	`MANGLE
(
Tønsf‹mFìdbackV¨yögsNV
)

	)

1573 
	#glTøn¶©ed
 
	`MANGLE
(
Tøn¶©ed
)

	)

1574 
	#glTøn¶©ef
 
	`MANGLE
(
Tøn¶©ef
)

	)

1575 
	#glUnif‹m1fARB
 
	`MANGLE
(
Unif‹m1fARB
)

	)

1576 
	#glUnif‹m1f
 
	`MANGLE
(
Unif‹m1f
)

	)

1577 
	#glUnif‹m1fvARB
 
	`MANGLE
(
Unif‹m1fvARB
)

	)

1578 
	#glUnif‹m1fv
 
	`MANGLE
(
Unif‹m1fv
)

	)

1579 
	#glUnif‹m1iARB
 
	`MANGLE
(
Unif‹m1iARB
)

	)

1580 
	#glUnif‹m1i
 
	`MANGLE
(
Unif‹m1i
)

	)

1581 
	#glUnif‹m1ivARB
 
	`MANGLE
(
Unif‹m1ivARB
)

	)

1582 
	#glUnif‹m1iv
 
	`MANGLE
(
Unif‹m1iv
)

	)

1583 
	#glUnif‹m1uiEXT
 
	`MANGLE
(
Unif‹m1uiEXT
)

	)

1584 
	#glUnif‹m1ui
 
	`MANGLE
(
Unif‹m1ui
)

	)

1585 
	#glUnif‹m1uivEXT
 
	`MANGLE
(
Unif‹m1uivEXT
)

	)

1586 
	#glUnif‹m1uiv
 
	`MANGLE
(
Unif‹m1uiv
)

	)

1587 
	#glUnif‹m2fARB
 
	`MANGLE
(
Unif‹m2fARB
)

	)

1588 
	#glUnif‹m2f
 
	`MANGLE
(
Unif‹m2f
)

	)

1589 
	#glUnif‹m2fvARB
 
	`MANGLE
(
Unif‹m2fvARB
)

	)

1590 
	#glUnif‹m2fv
 
	`MANGLE
(
Unif‹m2fv
)

	)

1591 
	#glUnif‹m2iARB
 
	`MANGLE
(
Unif‹m2iARB
)

	)

1592 
	#glUnif‹m2i
 
	`MANGLE
(
Unif‹m2i
)

	)

1593 
	#glUnif‹m2ivARB
 
	`MANGLE
(
Unif‹m2ivARB
)

	)

1594 
	#glUnif‹m2iv
 
	`MANGLE
(
Unif‹m2iv
)

	)

1595 
	#glUnif‹m2uiEXT
 
	`MANGLE
(
Unif‹m2uiEXT
)

	)

1596 
	#glUnif‹m2ui
 
	`MANGLE
(
Unif‹m2ui
)

	)

1597 
	#glUnif‹m2uivEXT
 
	`MANGLE
(
Unif‹m2uivEXT
)

	)

1598 
	#glUnif‹m2uiv
 
	`MANGLE
(
Unif‹m2uiv
)

	)

1599 
	#glUnif‹m3fARB
 
	`MANGLE
(
Unif‹m3fARB
)

	)

1600 
	#glUnif‹m3f
 
	`MANGLE
(
Unif‹m3f
)

	)

1601 
	#glUnif‹m3fvARB
 
	`MANGLE
(
Unif‹m3fvARB
)

	)

1602 
	#glUnif‹m3fv
 
	`MANGLE
(
Unif‹m3fv
)

	)

1603 
	#glUnif‹m3iARB
 
	`MANGLE
(
Unif‹m3iARB
)

	)

1604 
	#glUnif‹m3i
 
	`MANGLE
(
Unif‹m3i
)

	)

1605 
	#glUnif‹m3ivARB
 
	`MANGLE
(
Unif‹m3ivARB
)

	)

1606 
	#glUnif‹m3iv
 
	`MANGLE
(
Unif‹m3iv
)

	)

1607 
	#glUnif‹m3uiEXT
 
	`MANGLE
(
Unif‹m3uiEXT
)

	)

1608 
	#glUnif‹m3ui
 
	`MANGLE
(
Unif‹m3ui
)

	)

1609 
	#glUnif‹m3uivEXT
 
	`MANGLE
(
Unif‹m3uivEXT
)

	)

1610 
	#glUnif‹m3uiv
 
	`MANGLE
(
Unif‹m3uiv
)

	)

1611 
	#glUnif‹m4fARB
 
	`MANGLE
(
Unif‹m4fARB
)

	)

1612 
	#glUnif‹m4f
 
	`MANGLE
(
Unif‹m4f
)

	)

1613 
	#glUnif‹m4fvARB
 
	`MANGLE
(
Unif‹m4fvARB
)

	)

1614 
	#glUnif‹m4fv
 
	`MANGLE
(
Unif‹m4fv
)

	)

1615 
	#glUnif‹m4iARB
 
	`MANGLE
(
Unif‹m4iARB
)

	)

1616 
	#glUnif‹m4i
 
	`MANGLE
(
Unif‹m4i
)

	)

1617 
	#glUnif‹m4ivARB
 
	`MANGLE
(
Unif‹m4ivARB
)

	)

1618 
	#glUnif‹m4iv
 
	`MANGLE
(
Unif‹m4iv
)

	)

1619 
	#glUnif‹m4uiEXT
 
	`MANGLE
(
Unif‹m4uiEXT
)

	)

1620 
	#glUnif‹m4ui
 
	`MANGLE
(
Unif‹m4ui
)

	)

1621 
	#glUnif‹m4uivEXT
 
	`MANGLE
(
Unif‹m4uivEXT
)

	)

1622 
	#glUnif‹m4uiv
 
	`MANGLE
(
Unif‹m4uiv
)

	)

1623 
	#glUnif‹mBlockBödög
 
	`MANGLE
(
Unif‹mBlockBödög
)

	)

1624 
	#glUnif‹mBuf„rEXT
 
	`MANGLE
(
Unif‹mBuf„rEXT
)

	)

1625 
	#glUnif‹mM©rix2fvARB
 
	`MANGLE
(
Unif‹mM©rix2fvARB
)

	)

1626 
	#glUnif‹mM©rix2fv
 
	`MANGLE
(
Unif‹mM©rix2fv
)

	)

1627 
	#glUnif‹mM©rix2x3fv
 
	`MANGLE
(
Unif‹mM©rix2x3fv
)

	)

1628 
	#glUnif‹mM©rix2x4fv
 
	`MANGLE
(
Unif‹mM©rix2x4fv
)

	)

1629 
	#glUnif‹mM©rix3fvARB
 
	`MANGLE
(
Unif‹mM©rix3fvARB
)

	)

1630 
	#glUnif‹mM©rix3fv
 
	`MANGLE
(
Unif‹mM©rix3fv
)

	)

1631 
	#glUnif‹mM©rix3x2fv
 
	`MANGLE
(
Unif‹mM©rix3x2fv
)

	)

1632 
	#glUnif‹mM©rix3x4fv
 
	`MANGLE
(
Unif‹mM©rix3x4fv
)

	)

1633 
	#glUnif‹mM©rix4fvARB
 
	`MANGLE
(
Unif‹mM©rix4fvARB
)

	)

1634 
	#glUnif‹mM©rix4fv
 
	`MANGLE
(
Unif‹mM©rix4fv
)

	)

1635 
	#glUnif‹mM©rix4x2fv
 
	`MANGLE
(
Unif‹mM©rix4x2fv
)

	)

1636 
	#glUnif‹mM©rix4x3fv
 
	`MANGLE
(
Unif‹mM©rix4x3fv
)

	)

1637 
	#glUnif‹mui64NV
 
	`MANGLE
(
Unif‹mui64NV
)

	)

1638 
	#glUnif‹mui64vNV
 
	`MANGLE
(
Unif‹mui64vNV
)

	)

1639 
	#glU∆ockAºaysEXT
 
	`MANGLE
(
U∆ockAºaysEXT
)

	)

1640 
	#glUnm≠Buf„rARB
 
	`MANGLE
(
Unm≠Buf„rARB
)

	)

1641 
	#glUnm≠Buf„r
 
	`MANGLE
(
Unm≠Buf„r
)

	)

1642 
	#glUnm≠NamedBuf„rEXT
 
	`MANGLE
(
Unm≠NamedBuf„rEXT
)

	)

1643 
	#glUnm≠Obje˘Buf„rATI
 
	`MANGLE
(
Unm≠Obje˘Buf„rATI
)

	)

1644 
	#glUpd©eObje˘Buf„rATI
 
	`MANGLE
(
Upd©eObje˘Buf„rATI
)

	)

1645 
	#glU£Progøm
 
	`MANGLE
(
U£Progøm
)

	)

1646 
	#glU£ProgømObje˘ARB
 
	`MANGLE
(
U£ProgømObje˘ARB
)

	)

1647 
	#glU£ShadîProgømEXT
 
	`MANGLE
(
U£ShadîProgømEXT
)

	)

1648 
	#glVÆid©eProgømARB
 
	`MANGLE
(
VÆid©eProgømARB
)

	)

1649 
	#glVÆid©eProgøm
 
	`MANGLE
(
VÆid©eProgøm
)

	)

1650 
	#glV¨ü¡AºayObje˘ATI
 
	`MANGLE
(
V¨ü¡AºayObje˘ATI
)

	)

1651 
	#glV¨ü¡bvEXT
 
	`MANGLE
(
V¨ü¡bvEXT
)

	)

1652 
	#glV¨ü¡dvEXT
 
	`MANGLE
(
V¨ü¡dvEXT
)

	)

1653 
	#glV¨ü¡fvEXT
 
	`MANGLE
(
V¨ü¡fvEXT
)

	)

1654 
	#glV¨ü¡ivEXT
 
	`MANGLE
(
V¨ü¡ivEXT
)

	)

1655 
	#glV¨ü¡PoöãrEXT
 
	`MANGLE
(
V¨ü¡PoöãrEXT
)

	)

1656 
	#glV¨ü¡svEXT
 
	`MANGLE
(
V¨ü¡svEXT
)

	)

1657 
	#glV¨ü¡ubvEXT
 
	`MANGLE
(
V¨ü¡ubvEXT
)

	)

1658 
	#glV¨ü¡uivEXT
 
	`MANGLE
(
V¨ü¡uivEXT
)

	)

1659 
	#glV¨ü¡usvEXT
 
	`MANGLE
(
V¨ü¡usvEXT
)

	)

1660 
	#glVîãx2d
 
	`MANGLE
(
Vîãx2d
)

	)

1661 
	#glVîãx2dv
 
	`MANGLE
(
Vîãx2dv
)

	)

1662 
	#glVîãx2f
 
	`MANGLE
(
Vîãx2f
)

	)

1663 
	#glVîãx2fv
 
	`MANGLE
(
Vîãx2fv
)

	)

1664 
	#glVîãx2hNV
 
	`MANGLE
(
Vîãx2hNV
)

	)

1665 
	#glVîãx2hvNV
 
	`MANGLE
(
Vîãx2hvNV
)

	)

1666 
	#glVîãx2i
 
	`MANGLE
(
Vîãx2i
)

	)

1667 
	#glVîãx2iv
 
	`MANGLE
(
Vîãx2iv
)

	)

1668 
	#glVîãx2s
 
	`MANGLE
(
Vîãx2s
)

	)

1669 
	#glVîãx2sv
 
	`MANGLE
(
Vîãx2sv
)

	)

1670 
	#glVîãx3d
 
	`MANGLE
(
Vîãx3d
)

	)

1671 
	#glVîãx3dv
 
	`MANGLE
(
Vîãx3dv
)

	)

1672 
	#glVîãx3f
 
	`MANGLE
(
Vîãx3f
)

	)

1673 
	#glVîãx3fv
 
	`MANGLE
(
Vîãx3fv
)

	)

1674 
	#glVîãx3hNV
 
	`MANGLE
(
Vîãx3hNV
)

	)

1675 
	#glVîãx3hvNV
 
	`MANGLE
(
Vîãx3hvNV
)

	)

1676 
	#glVîãx3i
 
	`MANGLE
(
Vîãx3i
)

	)

1677 
	#glVîãx3iv
 
	`MANGLE
(
Vîãx3iv
)

	)

1678 
	#glVîãx3s
 
	`MANGLE
(
Vîãx3s
)

	)

1679 
	#glVîãx3sv
 
	`MANGLE
(
Vîãx3sv
)

	)

1680 
	#glVîãx4d
 
	`MANGLE
(
Vîãx4d
)

	)

1681 
	#glVîãx4dv
 
	`MANGLE
(
Vîãx4dv
)

	)

1682 
	#glVîãx4f
 
	`MANGLE
(
Vîãx4f
)

	)

1683 
	#glVîãx4fv
 
	`MANGLE
(
Vîãx4fv
)

	)

1684 
	#glVîãx4hNV
 
	`MANGLE
(
Vîãx4hNV
)

	)

1685 
	#glVîãx4hvNV
 
	`MANGLE
(
Vîãx4hvNV
)

	)

1686 
	#glVîãx4i
 
	`MANGLE
(
Vîãx4i
)

	)

1687 
	#glVîãx4iv
 
	`MANGLE
(
Vîãx4iv
)

	)

1688 
	#glVîãx4s
 
	`MANGLE
(
Vîãx4s
)

	)

1689 
	#glVîãx4sv
 
	`MANGLE
(
Vîãx4sv
)

	)

1690 
	#glVîãxAºayP¨amëîiAPPLE
 
	`MANGLE
(
VîãxAºayP¨amëîiAPPLE
)

	)

1691 
	#glVîãxAºayR™geAPPLE
 
	`MANGLE
(
VîãxAºayR™geAPPLE
)

	)

1692 
	#glVîãxAºayR™geNV
 
	`MANGLE
(
VîãxAºayR™geNV
)

	)

1693 
	#glVîãxAârib1dARB
 
	`MANGLE
(
VîãxAârib1dARB
)

	)

1694 
	#glVîãxAârib1d
 
	`MANGLE
(
VîãxAârib1d
)

	)

1695 
	#glVîãxAârib1dNV
 
	`MANGLE
(
VîãxAârib1dNV
)

	)

1696 
	#glVîãxAârib1dvARB
 
	`MANGLE
(
VîãxAârib1dvARB
)

	)

1697 
	#glVîãxAârib1dv
 
	`MANGLE
(
VîãxAârib1dv
)

	)

1698 
	#glVîãxAârib1dvNV
 
	`MANGLE
(
VîãxAârib1dvNV
)

	)

1699 
	#glVîãxAârib1fARB
 
	`MANGLE
(
VîãxAârib1fARB
)

	)

1700 
	#glVîãxAârib1f
 
	`MANGLE
(
VîãxAârib1f
)

	)

1701 
	#glVîãxAârib1fNV
 
	`MANGLE
(
VîãxAârib1fNV
)

	)

1702 
	#glVîãxAârib1fvARB
 
	`MANGLE
(
VîãxAârib1fvARB
)

	)

1703 
	#glVîãxAârib1fv
 
	`MANGLE
(
VîãxAârib1fv
)

	)

1704 
	#glVîãxAârib1fvNV
 
	`MANGLE
(
VîãxAârib1fvNV
)

	)

1705 
	#glVîãxAârib1hNV
 
	`MANGLE
(
VîãxAârib1hNV
)

	)

1706 
	#glVîãxAârib1hvNV
 
	`MANGLE
(
VîãxAârib1hvNV
)

	)

1707 
	#glVîãxAârib1sARB
 
	`MANGLE
(
VîãxAârib1sARB
)

	)

1708 
	#glVîãxAârib1s
 
	`MANGLE
(
VîãxAârib1s
)

	)

1709 
	#glVîãxAârib1sNV
 
	`MANGLE
(
VîãxAârib1sNV
)

	)

1710 
	#glVîãxAârib1svARB
 
	`MANGLE
(
VîãxAârib1svARB
)

	)

1711 
	#glVîãxAârib1sv
 
	`MANGLE
(
VîãxAârib1sv
)

	)

1712 
	#glVîãxAârib1svNV
 
	`MANGLE
(
VîãxAârib1svNV
)

	)

1713 
	#glVîãxAârib2dARB
 
	`MANGLE
(
VîãxAârib2dARB
)

	)

1714 
	#glVîãxAârib2d
 
	`MANGLE
(
VîãxAârib2d
)

	)

1715 
	#glVîãxAârib2dNV
 
	`MANGLE
(
VîãxAârib2dNV
)

	)

1716 
	#glVîãxAârib2dvARB
 
	`MANGLE
(
VîãxAârib2dvARB
)

	)

1717 
	#glVîãxAârib2dv
 
	`MANGLE
(
VîãxAârib2dv
)

	)

1718 
	#glVîãxAârib2dvNV
 
	`MANGLE
(
VîãxAârib2dvNV
)

	)

1719 
	#glVîãxAârib2fARB
 
	`MANGLE
(
VîãxAârib2fARB
)

	)

1720 
	#glVîãxAârib2f
 
	`MANGLE
(
VîãxAârib2f
)

	)

1721 
	#glVîãxAârib2fNV
 
	`MANGLE
(
VîãxAârib2fNV
)

	)

1722 
	#glVîãxAârib2fvARB
 
	`MANGLE
(
VîãxAârib2fvARB
)

	)

1723 
	#glVîãxAârib2fv
 
	`MANGLE
(
VîãxAârib2fv
)

	)

1724 
	#glVîãxAârib2fvNV
 
	`MANGLE
(
VîãxAârib2fvNV
)

	)

1725 
	#glVîãxAârib2hNV
 
	`MANGLE
(
VîãxAârib2hNV
)

	)

1726 
	#glVîãxAârib2hvNV
 
	`MANGLE
(
VîãxAârib2hvNV
)

	)

1727 
	#glVîãxAârib2sARB
 
	`MANGLE
(
VîãxAârib2sARB
)

	)

1728 
	#glVîãxAârib2s
 
	`MANGLE
(
VîãxAârib2s
)

	)

1729 
	#glVîãxAârib2sNV
 
	`MANGLE
(
VîãxAârib2sNV
)

	)

1730 
	#glVîãxAârib2svARB
 
	`MANGLE
(
VîãxAârib2svARB
)

	)

1731 
	#glVîãxAârib2sv
 
	`MANGLE
(
VîãxAârib2sv
)

	)

1732 
	#glVîãxAârib2svNV
 
	`MANGLE
(
VîãxAârib2svNV
)

	)

1733 
	#glVîãxAârib3dARB
 
	`MANGLE
(
VîãxAârib3dARB
)

	)

1734 
	#glVîãxAârib3d
 
	`MANGLE
(
VîãxAârib3d
)

	)

1735 
	#glVîãxAârib3dNV
 
	`MANGLE
(
VîãxAârib3dNV
)

	)

1736 
	#glVîãxAârib3dvARB
 
	`MANGLE
(
VîãxAârib3dvARB
)

	)

1737 
	#glVîãxAârib3dv
 
	`MANGLE
(
VîãxAârib3dv
)

	)

1738 
	#glVîãxAârib3dvNV
 
	`MANGLE
(
VîãxAârib3dvNV
)

	)

1739 
	#glVîãxAârib3fARB
 
	`MANGLE
(
VîãxAârib3fARB
)

	)

1740 
	#glVîãxAârib3f
 
	`MANGLE
(
VîãxAârib3f
)

	)

1741 
	#glVîãxAârib3fNV
 
	`MANGLE
(
VîãxAârib3fNV
)

	)

1742 
	#glVîãxAârib3fvARB
 
	`MANGLE
(
VîãxAârib3fvARB
)

	)

1743 
	#glVîãxAârib3fv
 
	`MANGLE
(
VîãxAârib3fv
)

	)

1744 
	#glVîãxAârib3fvNV
 
	`MANGLE
(
VîãxAârib3fvNV
)

	)

1745 
	#glVîãxAârib3hNV
 
	`MANGLE
(
VîãxAârib3hNV
)

	)

1746 
	#glVîãxAârib3hvNV
 
	`MANGLE
(
VîãxAârib3hvNV
)

	)

1747 
	#glVîãxAârib3sARB
 
	`MANGLE
(
VîãxAârib3sARB
)

	)

1748 
	#glVîãxAârib3s
 
	`MANGLE
(
VîãxAârib3s
)

	)

1749 
	#glVîãxAârib3sNV
 
	`MANGLE
(
VîãxAârib3sNV
)

	)

1750 
	#glVîãxAârib3svARB
 
	`MANGLE
(
VîãxAârib3svARB
)

	)

1751 
	#glVîãxAârib3sv
 
	`MANGLE
(
VîãxAârib3sv
)

	)

1752 
	#glVîãxAârib3svNV
 
	`MANGLE
(
VîãxAârib3svNV
)

	)

1753 
	#glVîãxAârib4bvARB
 
	`MANGLE
(
VîãxAârib4bvARB
)

	)

1754 
	#glVîãxAârib4bv
 
	`MANGLE
(
VîãxAârib4bv
)

	)

1755 
	#glVîãxAârib4dARB
 
	`MANGLE
(
VîãxAârib4dARB
)

	)

1756 
	#glVîãxAârib4d
 
	`MANGLE
(
VîãxAârib4d
)

	)

1757 
	#glVîãxAârib4dNV
 
	`MANGLE
(
VîãxAârib4dNV
)

	)

1758 
	#glVîãxAârib4dvARB
 
	`MANGLE
(
VîãxAârib4dvARB
)

	)

1759 
	#glVîãxAârib4dv
 
	`MANGLE
(
VîãxAârib4dv
)

	)

1760 
	#glVîãxAârib4dvNV
 
	`MANGLE
(
VîãxAârib4dvNV
)

	)

1761 
	#glVîãxAârib4fARB
 
	`MANGLE
(
VîãxAârib4fARB
)

	)

1762 
	#glVîãxAârib4f
 
	`MANGLE
(
VîãxAârib4f
)

	)

1763 
	#glVîãxAârib4fNV
 
	`MANGLE
(
VîãxAârib4fNV
)

	)

1764 
	#glVîãxAârib4fvARB
 
	`MANGLE
(
VîãxAârib4fvARB
)

	)

1765 
	#glVîãxAârib4fv
 
	`MANGLE
(
VîãxAârib4fv
)

	)

1766 
	#glVîãxAârib4fvNV
 
	`MANGLE
(
VîãxAârib4fvNV
)

	)

1767 
	#glVîãxAârib4hNV
 
	`MANGLE
(
VîãxAârib4hNV
)

	)

1768 
	#glVîãxAârib4hvNV
 
	`MANGLE
(
VîãxAârib4hvNV
)

	)

1769 
	#glVîãxAârib4ivARB
 
	`MANGLE
(
VîãxAârib4ivARB
)

	)

1770 
	#glVîãxAârib4iv
 
	`MANGLE
(
VîãxAârib4iv
)

	)

1771 
	#glVîãxAârib4NbvARB
 
	`MANGLE
(
VîãxAârib4NbvARB
)

	)

1772 
	#glVîãxAârib4Nbv
 
	`MANGLE
(
VîãxAârib4Nbv
)

	)

1773 
	#glVîãxAârib4NivARB
 
	`MANGLE
(
VîãxAârib4NivARB
)

	)

1774 
	#glVîãxAârib4Niv
 
	`MANGLE
(
VîãxAârib4Niv
)

	)

1775 
	#glVîãxAârib4NsvARB
 
	`MANGLE
(
VîãxAârib4NsvARB
)

	)

1776 
	#glVîãxAârib4Nsv
 
	`MANGLE
(
VîãxAârib4Nsv
)

	)

1777 
	#glVîãxAârib4NubARB
 
	`MANGLE
(
VîãxAârib4NubARB
)

	)

1778 
	#glVîãxAârib4Nub
 
	`MANGLE
(
VîãxAârib4Nub
)

	)

1779 
	#glVîãxAârib4NubvARB
 
	`MANGLE
(
VîãxAârib4NubvARB
)

	)

1780 
	#glVîãxAârib4Nubv
 
	`MANGLE
(
VîãxAârib4Nubv
)

	)

1781 
	#glVîãxAârib4NuivARB
 
	`MANGLE
(
VîãxAârib4NuivARB
)

	)

1782 
	#glVîãxAârib4Nuiv
 
	`MANGLE
(
VîãxAârib4Nuiv
)

	)

1783 
	#glVîãxAârib4NusvARB
 
	`MANGLE
(
VîãxAârib4NusvARB
)

	)

1784 
	#glVîãxAârib4Nusv
 
	`MANGLE
(
VîãxAârib4Nusv
)

	)

1785 
	#glVîãxAârib4sARB
 
	`MANGLE
(
VîãxAârib4sARB
)

	)

1786 
	#glVîãxAârib4s
 
	`MANGLE
(
VîãxAârib4s
)

	)

1787 
	#glVîãxAârib4sNV
 
	`MANGLE
(
VîãxAârib4sNV
)

	)

1788 
	#glVîãxAârib4svARB
 
	`MANGLE
(
VîãxAârib4svARB
)

	)

1789 
	#glVîãxAârib4sv
 
	`MANGLE
(
VîãxAârib4sv
)

	)

1790 
	#glVîãxAârib4svNV
 
	`MANGLE
(
VîãxAârib4svNV
)

	)

1791 
	#glVîãxAârib4ubNV
 
	`MANGLE
(
VîãxAârib4ubNV
)

	)

1792 
	#glVîãxAârib4ubvARB
 
	`MANGLE
(
VîãxAârib4ubvARB
)

	)

1793 
	#glVîãxAârib4ubv
 
	`MANGLE
(
VîãxAârib4ubv
)

	)

1794 
	#glVîãxAârib4ubvNV
 
	`MANGLE
(
VîãxAârib4ubvNV
)

	)

1795 
	#glVîãxAârib4uivARB
 
	`MANGLE
(
VîãxAârib4uivARB
)

	)

1796 
	#glVîãxAârib4uiv
 
	`MANGLE
(
VîãxAârib4uiv
)

	)

1797 
	#glVîãxAârib4usvARB
 
	`MANGLE
(
VîãxAârib4usvARB
)

	)

1798 
	#glVîãxAârib4usv
 
	`MANGLE
(
VîãxAârib4usv
)

	)

1799 
	#glVîãxAâribAºayObje˘ATI
 
	`MANGLE
(
VîãxAâribAºayObje˘ATI
)

	)

1800 
	#glVîãxAâribDivis‹ARB
 
	`MANGLE
(
VîãxAâribDivis‹ARB
)

	)

1801 
	#glVîãxAâribF‹m©NV
 
	`MANGLE
(
VîãxAâribF‹m©NV
)

	)

1802 
	#glVîãxAâribI1iEXT
 
	`MANGLE
(
VîãxAâribI1iEXT
)

	)

1803 
	#glVîãxAâribI1i
 
	`MANGLE
(
VîãxAâribI1i
)

	)

1804 
	#glVîãxAâribI1ivEXT
 
	`MANGLE
(
VîãxAâribI1ivEXT
)

	)

1805 
	#glVîãxAâribI1iv
 
	`MANGLE
(
VîãxAâribI1iv
)

	)

1806 
	#glVîãxAâribI1uiEXT
 
	`MANGLE
(
VîãxAâribI1uiEXT
)

	)

1807 
	#glVîãxAâribI1ui
 
	`MANGLE
(
VîãxAâribI1ui
)

	)

1808 
	#glVîãxAâribI1uivEXT
 
	`MANGLE
(
VîãxAâribI1uivEXT
)

	)

1809 
	#glVîãxAâribI1uiv
 
	`MANGLE
(
VîãxAâribI1uiv
)

	)

1810 
	#glVîãxAâribI2iEXT
 
	`MANGLE
(
VîãxAâribI2iEXT
)

	)

1811 
	#glVîãxAâribI2i
 
	`MANGLE
(
VîãxAâribI2i
)

	)

1812 
	#glVîãxAâribI2ivEXT
 
	`MANGLE
(
VîãxAâribI2ivEXT
)

	)

1813 
	#glVîãxAâribI2iv
 
	`MANGLE
(
VîãxAâribI2iv
)

	)

1814 
	#glVîãxAâribI2uiEXT
 
	`MANGLE
(
VîãxAâribI2uiEXT
)

	)

1815 
	#glVîãxAâribI2ui
 
	`MANGLE
(
VîãxAâribI2ui
)

	)

1816 
	#glVîãxAâribI2uivEXT
 
	`MANGLE
(
VîãxAâribI2uivEXT
)

	)

1817 
	#glVîãxAâribI2uiv
 
	`MANGLE
(
VîãxAâribI2uiv
)

	)

1818 
	#glVîãxAâribI3iEXT
 
	`MANGLE
(
VîãxAâribI3iEXT
)

	)

1819 
	#glVîãxAâribI3i
 
	`MANGLE
(
VîãxAâribI3i
)

	)

1820 
	#glVîãxAâribI3ivEXT
 
	`MANGLE
(
VîãxAâribI3ivEXT
)

	)

1821 
	#glVîãxAâribI3iv
 
	`MANGLE
(
VîãxAâribI3iv
)

	)

1822 
	#glVîãxAâribI3uiEXT
 
	`MANGLE
(
VîãxAâribI3uiEXT
)

	)

1823 
	#glVîãxAâribI3ui
 
	`MANGLE
(
VîãxAâribI3ui
)

	)

1824 
	#glVîãxAâribI3uivEXT
 
	`MANGLE
(
VîãxAâribI3uivEXT
)

	)

1825 
	#glVîãxAâribI3uiv
 
	`MANGLE
(
VîãxAâribI3uiv
)

	)

1826 
	#glVîãxAâribI4bvEXT
 
	`MANGLE
(
VîãxAâribI4bvEXT
)

	)

1827 
	#glVîãxAâribI4bv
 
	`MANGLE
(
VîãxAâribI4bv
)

	)

1828 
	#glVîãxAâribI4iEXT
 
	`MANGLE
(
VîãxAâribI4iEXT
)

	)

1829 
	#glVîãxAâribI4i
 
	`MANGLE
(
VîãxAâribI4i
)

	)

1830 
	#glVîãxAâribI4ivEXT
 
	`MANGLE
(
VîãxAâribI4ivEXT
)

	)

1831 
	#glVîãxAâribI4iv
 
	`MANGLE
(
VîãxAâribI4iv
)

	)

1832 
	#glVîãxAâribI4svEXT
 
	`MANGLE
(
VîãxAâribI4svEXT
)

	)

1833 
	#glVîãxAâribI4sv
 
	`MANGLE
(
VîãxAâribI4sv
)

	)

1834 
	#glVîãxAâribI4ubvEXT
 
	`MANGLE
(
VîãxAâribI4ubvEXT
)

	)

1835 
	#glVîãxAâribI4ubv
 
	`MANGLE
(
VîãxAâribI4ubv
)

	)

1836 
	#glVîãxAâribI4uiEXT
 
	`MANGLE
(
VîãxAâribI4uiEXT
)

	)

1837 
	#glVîãxAâribI4ui
 
	`MANGLE
(
VîãxAâribI4ui
)

	)

1838 
	#glVîãxAâribI4uivEXT
 
	`MANGLE
(
VîãxAâribI4uivEXT
)

	)

1839 
	#glVîãxAâribI4uiv
 
	`MANGLE
(
VîãxAâribI4uiv
)

	)

1840 
	#glVîãxAâribI4usvEXT
 
	`MANGLE
(
VîãxAâribI4usvEXT
)

	)

1841 
	#glVîãxAâribI4usv
 
	`MANGLE
(
VîãxAâribI4usv
)

	)

1842 
	#glVîãxAâribIF‹m©NV
 
	`MANGLE
(
VîãxAâribIF‹m©NV
)

	)

1843 
	#glVîãxAâribIPoöãrEXT
 
	`MANGLE
(
VîãxAâribIPoöãrEXT
)

	)

1844 
	#glVîãxAâribIPoöãr
 
	`MANGLE
(
VîãxAâribIPoöãr
)

	)

1845 
	#glVîãxAâribPoöãrARB
 
	`MANGLE
(
VîãxAâribPoöãrARB
)

	)

1846 
	#glVîãxAâribPoöãr
 
	`MANGLE
(
VîãxAâribPoöãr
)

	)

1847 
	#glVîãxAâribPoöãrNV
 
	`MANGLE
(
VîãxAâribPoöãrNV
)

	)

1848 
	#glVîãxAâribs1dvNV
 
	`MANGLE
(
VîãxAâribs1dvNV
)

	)

1849 
	#glVîãxAâribs1fvNV
 
	`MANGLE
(
VîãxAâribs1fvNV
)

	)

1850 
	#glVîãxAâribs1hvNV
 
	`MANGLE
(
VîãxAâribs1hvNV
)

	)

1851 
	#glVîãxAâribs1svNV
 
	`MANGLE
(
VîãxAâribs1svNV
)

	)

1852 
	#glVîãxAâribs2dvNV
 
	`MANGLE
(
VîãxAâribs2dvNV
)

	)

1853 
	#glVîãxAâribs2fvNV
 
	`MANGLE
(
VîãxAâribs2fvNV
)

	)

1854 
	#glVîãxAâribs2hvNV
 
	`MANGLE
(
VîãxAâribs2hvNV
)

	)

1855 
	#glVîãxAâribs2svNV
 
	`MANGLE
(
VîãxAâribs2svNV
)

	)

1856 
	#glVîãxAâribs3dvNV
 
	`MANGLE
(
VîãxAâribs3dvNV
)

	)

1857 
	#glVîãxAâribs3fvNV
 
	`MANGLE
(
VîãxAâribs3fvNV
)

	)

1858 
	#glVîãxAâribs3hvNV
 
	`MANGLE
(
VîãxAâribs3hvNV
)

	)

1859 
	#glVîãxAâribs3svNV
 
	`MANGLE
(
VîãxAâribs3svNV
)

	)

1860 
	#glVîãxAâribs4dvNV
 
	`MANGLE
(
VîãxAâribs4dvNV
)

	)

1861 
	#glVîãxAâribs4fvNV
 
	`MANGLE
(
VîãxAâribs4fvNV
)

	)

1862 
	#glVîãxAâribs4hvNV
 
	`MANGLE
(
VîãxAâribs4hvNV
)

	)

1863 
	#glVîãxAâribs4svNV
 
	`MANGLE
(
VîãxAâribs4svNV
)

	)

1864 
	#glVîãxAâribs4ubvNV
 
	`MANGLE
(
VîãxAâribs4ubvNV
)

	)

1865 
	#glVîãxBÀndARB
 
	`MANGLE
(
VîãxBÀndARB
)

	)

1866 
	#glVîãxBÀndEnvfATI
 
	`MANGLE
(
VîãxBÀndEnvfATI
)

	)

1867 
	#glVîãxBÀndEnviATI
 
	`MANGLE
(
VîãxBÀndEnviATI
)

	)

1868 
	#glVîãxF‹m©NV
 
	`MANGLE
(
VîãxF‹m©NV
)

	)

1869 
	#glVîãxPoöãrEXT
 
	`MANGLE
(
VîãxPoöãrEXT
)

	)

1870 
	#glVîãxPoöãrLi°IBM
 
	`MANGLE
(
VîãxPoöãrLi°IBM
)

	)

1871 
	#glVîãxPoöãr
 
	`MANGLE
(
VîãxPoöãr
)

	)

1872 
	#glVîãxPoöãrvINTEL
 
	`MANGLE
(
VîãxPoöãrvINTEL
)

	)

1873 
	#glVîãxSåóm1dATI
 
	`MANGLE
(
VîãxSåóm1dATI
)

	)

1874 
	#glVîãxSåóm1dvATI
 
	`MANGLE
(
VîãxSåóm1dvATI
)

	)

1875 
	#glVîãxSåóm1fATI
 
	`MANGLE
(
VîãxSåóm1fATI
)

	)

1876 
	#glVîãxSåóm1fvATI
 
	`MANGLE
(
VîãxSåóm1fvATI
)

	)

1877 
	#glVîãxSåóm1iATI
 
	`MANGLE
(
VîãxSåóm1iATI
)

	)

1878 
	#glVîãxSåóm1ivATI
 
	`MANGLE
(
VîãxSåóm1ivATI
)

	)

1879 
	#glVîãxSåóm1sATI
 
	`MANGLE
(
VîãxSåóm1sATI
)

	)

1880 
	#glVîãxSåóm1svATI
 
	`MANGLE
(
VîãxSåóm1svATI
)

	)

1881 
	#glVîãxSåóm2dATI
 
	`MANGLE
(
VîãxSåóm2dATI
)

	)

1882 
	#glVîãxSåóm2dvATI
 
	`MANGLE
(
VîãxSåóm2dvATI
)

	)

1883 
	#glVîãxSåóm2fATI
 
	`MANGLE
(
VîãxSåóm2fATI
)

	)

1884 
	#glVîãxSåóm2fvATI
 
	`MANGLE
(
VîãxSåóm2fvATI
)

	)

1885 
	#glVîãxSåóm2iATI
 
	`MANGLE
(
VîãxSåóm2iATI
)

	)

1886 
	#glVîãxSåóm2ivATI
 
	`MANGLE
(
VîãxSåóm2ivATI
)

	)

1887 
	#glVîãxSåóm2sATI
 
	`MANGLE
(
VîãxSåóm2sATI
)

	)

1888 
	#glVîãxSåóm2svATI
 
	`MANGLE
(
VîãxSåóm2svATI
)

	)

1889 
	#glVîãxSåóm3dATI
 
	`MANGLE
(
VîãxSåóm3dATI
)

	)

1890 
	#glVîãxSåóm3dvATI
 
	`MANGLE
(
VîãxSåóm3dvATI
)

	)

1891 
	#glVîãxSåóm3fATI
 
	`MANGLE
(
VîãxSåóm3fATI
)

	)

1892 
	#glVîãxSåóm3fvATI
 
	`MANGLE
(
VîãxSåóm3fvATI
)

	)

1893 
	#glVîãxSåóm3iATI
 
	`MANGLE
(
VîãxSåóm3iATI
)

	)

1894 
	#glVîãxSåóm3ivATI
 
	`MANGLE
(
VîãxSåóm3ivATI
)

	)

1895 
	#glVîãxSåóm3sATI
 
	`MANGLE
(
VîãxSåóm3sATI
)

	)

1896 
	#glVîãxSåóm3svATI
 
	`MANGLE
(
VîãxSåóm3svATI
)

	)

1897 
	#glVîãxSåóm4dATI
 
	`MANGLE
(
VîãxSåóm4dATI
)

	)

1898 
	#glVîãxSåóm4dvATI
 
	`MANGLE
(
VîãxSåóm4dvATI
)

	)

1899 
	#glVîãxSåóm4fATI
 
	`MANGLE
(
VîãxSåóm4fATI
)

	)

1900 
	#glVîãxSåóm4fvATI
 
	`MANGLE
(
VîãxSåóm4fvATI
)

	)

1901 
	#glVîãxSåóm4iATI
 
	`MANGLE
(
VîãxSåóm4iATI
)

	)

1902 
	#glVîãxSåóm4ivATI
 
	`MANGLE
(
VîãxSåóm4ivATI
)

	)

1903 
	#glVîãxSåóm4sATI
 
	`MANGLE
(
VîãxSåóm4sATI
)

	)

1904 
	#glVîãxSåóm4svATI
 
	`MANGLE
(
VîãxSåóm4svATI
)

	)

1905 
	#glVîãxWeightfEXT
 
	`MANGLE
(
VîãxWeightfEXT
)

	)

1906 
	#glVîãxWeightfvEXT
 
	`MANGLE
(
VîãxWeightfvEXT
)

	)

1907 
	#glVîãxWeighthNV
 
	`MANGLE
(
VîãxWeighthNV
)

	)

1908 
	#glVîãxWeighthvNV
 
	`MANGLE
(
VîãxWeighthvNV
)

	)

1909 
	#glVîãxWeightPoöãrEXT
 
	`MANGLE
(
VîãxWeightPoöãrEXT
)

	)

1910 
	#glVideoC≠tuªNV
 
	`MANGLE
(
VideoC≠tuªNV
)

	)

1911 
	#glVideoC≠tuªSåómP¨amëîdvNV
 
	`MANGLE
(
VideoC≠tuªSåómP¨amëîdvNV
)

	)

1912 
	#glVideoC≠tuªSåómP¨amëîfvNV
 
	`MANGLE
(
VideoC≠tuªSåómP¨amëîfvNV
)

	)

1913 
	#glVideoC≠tuªSåómP¨amëîivNV
 
	`MANGLE
(
VideoC≠tuªSåómP¨amëîivNV
)

	)

1914 
	#glVõwp‹t
 
	`MANGLE
(
Võwp‹t
)

	)

1915 
	#glWaôSync
 
	`MANGLE
(
WaôSync
)

	)

1916 
	#glWeightbvARB
 
	`MANGLE
(
WeightbvARB
)

	)

1917 
	#glWeightdvARB
 
	`MANGLE
(
WeightdvARB
)

	)

1918 
	#glWeightfvARB
 
	`MANGLE
(
WeightfvARB
)

	)

1919 
	#glWeightivARB
 
	`MANGLE
(
WeightivARB
)

	)

1920 
	#glWeightPoöãrARB
 
	`MANGLE
(
WeightPoöãrARB
)

	)

1921 
	#glWeightsvARB
 
	`MANGLE
(
WeightsvARB
)

	)

1922 
	#glWeightubvARB
 
	`MANGLE
(
WeightubvARB
)

	)

1923 
	#glWeightuivARB
 
	`MANGLE
(
WeightuivARB
)

	)

1924 
	#glWeightusvARB
 
	`MANGLE
(
WeightusvARB
)

	)

1925 
	#glWödowPos2dARB
 
	`MANGLE
(
WödowPos2dARB
)

	)

1926 
	#glWödowPos2d
 
	`MANGLE
(
WödowPos2d
)

	)

1927 
	#glWödowPos2dMESA
 
	`MANGLE
(
WödowPos2dMESA
)

	)

1928 
	#glWödowPos2dvARB
 
	`MANGLE
(
WödowPos2dvARB
)

	)

1929 
	#glWödowPos2dv
 
	`MANGLE
(
WödowPos2dv
)

	)

1930 
	#glWödowPos2dvMESA
 
	`MANGLE
(
WödowPos2dvMESA
)

	)

1931 
	#glWödowPos2fARB
 
	`MANGLE
(
WödowPos2fARB
)

	)

1932 
	#glWödowPos2f
 
	`MANGLE
(
WödowPos2f
)

	)

1933 
	#glWödowPos2fMESA
 
	`MANGLE
(
WödowPos2fMESA
)

	)

1934 
	#glWödowPos2fvARB
 
	`MANGLE
(
WödowPos2fvARB
)

	)

1935 
	#glWödowPos2fv
 
	`MANGLE
(
WödowPos2fv
)

	)

1936 
	#glWödowPos2fvMESA
 
	`MANGLE
(
WödowPos2fvMESA
)

	)

1937 
	#glWödowPos2iARB
 
	`MANGLE
(
WödowPos2iARB
)

	)

1938 
	#glWödowPos2i
 
	`MANGLE
(
WödowPos2i
)

	)

1939 
	#glWödowPos2iMESA
 
	`MANGLE
(
WödowPos2iMESA
)

	)

1940 
	#glWödowPos2ivARB
 
	`MANGLE
(
WödowPos2ivARB
)

	)

1941 
	#glWödowPos2iv
 
	`MANGLE
(
WödowPos2iv
)

	)

1942 
	#glWödowPos2ivMESA
 
	`MANGLE
(
WödowPos2ivMESA
)

	)

1943 
	#glWödowPos2sARB
 
	`MANGLE
(
WödowPos2sARB
)

	)

1944 
	#glWödowPos2s
 
	`MANGLE
(
WödowPos2s
)

	)

1945 
	#glWödowPos2sMESA
 
	`MANGLE
(
WödowPos2sMESA
)

	)

1946 
	#glWödowPos2svARB
 
	`MANGLE
(
WödowPos2svARB
)

	)

1947 
	#glWödowPos2sv
 
	`MANGLE
(
WödowPos2sv
)

	)

1948 
	#glWödowPos2svMESA
 
	`MANGLE
(
WödowPos2svMESA
)

	)

1949 
	#glWödowPos3dARB
 
	`MANGLE
(
WödowPos3dARB
)

	)

1950 
	#glWödowPos3d
 
	`MANGLE
(
WödowPos3d
)

	)

1951 
	#glWödowPos3dMESA
 
	`MANGLE
(
WödowPos3dMESA
)

	)

1952 
	#glWödowPos3dvARB
 
	`MANGLE
(
WödowPos3dvARB
)

	)

1953 
	#glWödowPos3dv
 
	`MANGLE
(
WödowPos3dv
)

	)

1954 
	#glWödowPos3dvMESA
 
	`MANGLE
(
WödowPos3dvMESA
)

	)

1955 
	#glWödowPos3fARB
 
	`MANGLE
(
WödowPos3fARB
)

	)

1956 
	#glWödowPos3f
 
	`MANGLE
(
WödowPos3f
)

	)

1957 
	#glWödowPos3fMESA
 
	`MANGLE
(
WödowPos3fMESA
)

	)

1958 
	#glWödowPos3fvARB
 
	`MANGLE
(
WödowPos3fvARB
)

	)

1959 
	#glWödowPos3fv
 
	`MANGLE
(
WödowPos3fv
)

	)

1960 
	#glWödowPos3fvMESA
 
	`MANGLE
(
WödowPos3fvMESA
)

	)

1961 
	#glWödowPos3iARB
 
	`MANGLE
(
WödowPos3iARB
)

	)

1962 
	#glWödowPos3i
 
	`MANGLE
(
WödowPos3i
)

	)

1963 
	#glWödowPos3iMESA
 
	`MANGLE
(
WödowPos3iMESA
)

	)

1964 
	#glWödowPos3ivARB
 
	`MANGLE
(
WödowPos3ivARB
)

	)

1965 
	#glWödowPos3iv
 
	`MANGLE
(
WödowPos3iv
)

	)

1966 
	#glWödowPos3ivMESA
 
	`MANGLE
(
WödowPos3ivMESA
)

	)

1967 
	#glWödowPos3sARB
 
	`MANGLE
(
WödowPos3sARB
)

	)

1968 
	#glWödowPos3s
 
	`MANGLE
(
WödowPos3s
)

	)

1969 
	#glWödowPos3sMESA
 
	`MANGLE
(
WödowPos3sMESA
)

	)

1970 
	#glWödowPos3svARB
 
	`MANGLE
(
WödowPos3svARB
)

	)

1971 
	#glWödowPos3sv
 
	`MANGLE
(
WödowPos3sv
)

	)

1972 
	#glWödowPos3svMESA
 
	`MANGLE
(
WödowPos3svMESA
)

	)

1973 
	#glWödowPos4dMESA
 
	`MANGLE
(
WödowPos4dMESA
)

	)

1974 
	#glWödowPos4dvMESA
 
	`MANGLE
(
WödowPos4dvMESA
)

	)

1975 
	#glWödowPos4fMESA
 
	`MANGLE
(
WödowPos4fMESA
)

	)

1976 
	#glWödowPos4fvMESA
 
	`MANGLE
(
WödowPos4fvMESA
)

	)

1977 
	#glWödowPos4iMESA
 
	`MANGLE
(
WödowPos4iMESA
)

	)

1978 
	#glWödowPos4ivMESA
 
	`MANGLE
(
WödowPos4ivMESA
)

	)

1979 
	#glWödowPos4sMESA
 
	`MANGLE
(
WödowPos4sMESA
)

	)

1980 
	#glWödowPos4svMESA
 
	`MANGLE
(
WödowPos4svMESA
)

	)

1981 
	#glWrôeMaskEXT
 
	`MANGLE
(
WrôeMaskEXT
)

	)

	@include/GL/glext.h

1 #i‚de‡
__gÀxt_h_


2 
	#__gÀxt_h_


	)

4 #ifde‡
__˝lu•lus


34 
	#GL_GLEXT_VERSION
 56

	)

38 #i‡
deföed
(
_WIN32
Ë&& !deföed(
APIENTRY
Ë&& !deföed(
__CYGWIN__
Ë&& !deföed(
__SCITECH_SNAP__
)

39 
	#WIN32_LEAN_AND_MEAN
 1

	)

40 
	~<wödows.h
>

43 #i‚de‡
APIENTRY


44 
	#APIENTRY


	)

46 #i‚de‡
APIENTRYP


47 
	#APIENTRYP
 
APIENTRY
 *

	)

49 #i‚de‡
GLAPI


50 
	#GLAPI
 

	)

55 #i‚de‡
GL_VERSION_1_2


56 
	#GL_UNSIGNED_BYTE_3_3_2
 0x8032

	)

57 
	#GL_UNSIGNED_SHORT_4_4_4_4
 0x8033

	)

58 
	#GL_UNSIGNED_SHORT_5_5_5_1
 0x8034

	)

59 
	#GL_UNSIGNED_INT_8_8_8_8
 0x8035

	)

60 
	#GL_UNSIGNED_INT_10_10_10_2
 0x8036

	)

61 
	#GL_TEXTURE_BINDING_3D
 0x806A

	)

62 
	#GL_PACK_SKIP_IMAGES
 0x806B

	)

63 
	#GL_PACK_IMAGE_HEIGHT
 0x806C

	)

64 
	#GL_UNPACK_SKIP_IMAGES
 0x806D

	)

65 
	#GL_UNPACK_IMAGE_HEIGHT
 0x806E

	)

66 
	#GL_TEXTURE_3D
 0x806F

	)

67 
	#GL_PROXY_TEXTURE_3D
 0x8070

	)

68 
	#GL_TEXTURE_DEPTH
 0x8071

	)

69 
	#GL_TEXTURE_WRAP_R
 0x8072

	)

70 
	#GL_MAX_3D_TEXTURE_SIZE
 0x8073

	)

71 
	#GL_UNSIGNED_BYTE_2_3_3_REV
 0x8362

	)

72 
	#GL_UNSIGNED_SHORT_5_6_5
 0x8363

	)

73 
	#GL_UNSIGNED_SHORT_5_6_5_REV
 0x8364

	)

74 
	#GL_UNSIGNED_SHORT_4_4_4_4_REV
 0x8365

	)

75 
	#GL_UNSIGNED_SHORT_1_5_5_5_REV
 0x8366

	)

76 
	#GL_UNSIGNED_INT_8_8_8_8_REV
 0x8367

	)

77 
	#GL_UNSIGNED_INT_2_10_10_10_REV
 0x8368

	)

78 
	#GL_BGR
 0x80E0

	)

79 
	#GL_BGRA
 0x80E1

	)

80 
	#GL_MAX_ELEMENTS_VERTICES
 0x80E8

	)

81 
	#GL_MAX_ELEMENTS_INDICES
 0x80E9

	)

82 
	#GL_CLAMP_TO_EDGE
 0x812F

	)

83 
	#GL_TEXTURE_MIN_LOD
 0x813A

	)

84 
	#GL_TEXTURE_MAX_LOD
 0x813B

	)

85 
	#GL_TEXTURE_BASE_LEVEL
 0x813C

	)

86 
	#GL_TEXTURE_MAX_LEVEL
 0x813D

	)

87 
	#GL_SMOOTH_POINT_SIZE_RANGE
 0x0B12

	)

88 
	#GL_SMOOTH_POINT_SIZE_GRANULARITY
 0x0B13

	)

89 
	#GL_SMOOTH_LINE_WIDTH_RANGE
 0x0B22

	)

90 
	#GL_SMOOTH_LINE_WIDTH_GRANULARITY
 0x0B23

	)

91 
	#GL_ALIASED_LINE_WIDTH_RANGE
 0x846E

	)

94 #i‚de‡
GL_VERSION_1_2_DEPRECATED


95 
	#GL_RESCALE_NORMAL
 0x803A

	)

96 
	#GL_LIGHT_MODEL_COLOR_CONTROL
 0x81F8

	)

97 
	#GL_SINGLE_COLOR
 0x81F9

	)

98 
	#GL_SEPARATE_SPECULAR_COLOR
 0x81FA

	)

99 
	#GL_ALIASED_POINT_SIZE_RANGE
 0x846D

	)

102 #i‚de‡
GL_ARB_imagög


103 
	#GL_CONSTANT_COLOR
 0x8001

	)

104 
	#GL_ONE_MINUS_CONSTANT_COLOR
 0x8002

	)

105 
	#GL_CONSTANT_ALPHA
 0x8003

	)

106 
	#GL_ONE_MINUS_CONSTANT_ALPHA
 0x8004

	)

107 
	#GL_BLEND_COLOR
 0x8005

	)

108 
	#GL_FUNC_ADD
 0x8006

	)

109 
	#GL_MIN
 0x8007

	)

110 
	#GL_MAX
 0x8008

	)

111 
	#GL_BLEND_EQUATION
 0x8009

	)

112 
	#GL_FUNC_SUBTRACT
 0x800A

	)

113 
	#GL_FUNC_REVERSE_SUBTRACT
 0x800B

	)

116 #i‚de‡
GL_ARB_imagög_DEPRECATED


117 
	#GL_CONVOLUTION_1D
 0x8010

	)

118 
	#GL_CONVOLUTION_2D
 0x8011

	)

119 
	#GL_SEPARABLE_2D
 0x8012

	)

120 
	#GL_CONVOLUTION_BORDER_MODE
 0x8013

	)

121 
	#GL_CONVOLUTION_FILTER_SCALE
 0x8014

	)

122 
	#GL_CONVOLUTION_FILTER_BIAS
 0x8015

	)

123 
	#GL_REDUCE
 0x8016

	)

124 
	#GL_CONVOLUTION_FORMAT
 0x8017

	)

125 
	#GL_CONVOLUTION_WIDTH
 0x8018

	)

126 
	#GL_CONVOLUTION_HEIGHT
 0x8019

	)

127 
	#GL_MAX_CONVOLUTION_WIDTH
 0x801A

	)

128 
	#GL_MAX_CONVOLUTION_HEIGHT
 0x801B

	)

129 
	#GL_POST_CONVOLUTION_RED_SCALE
 0x801C

	)

130 
	#GL_POST_CONVOLUTION_GREEN_SCALE
 0x801D

	)

131 
	#GL_POST_CONVOLUTION_BLUE_SCALE
 0x801E

	)

132 
	#GL_POST_CONVOLUTION_ALPHA_SCALE
 0x801F

	)

133 
	#GL_POST_CONVOLUTION_RED_BIAS
 0x8020

	)

134 
	#GL_POST_CONVOLUTION_GREEN_BIAS
 0x8021

	)

135 
	#GL_POST_CONVOLUTION_BLUE_BIAS
 0x8022

	)

136 
	#GL_POST_CONVOLUTION_ALPHA_BIAS
 0x8023

	)

137 
	#GL_HISTOGRAM
 0x8024

	)

138 
	#GL_PROXY_HISTOGRAM
 0x8025

	)

139 
	#GL_HISTOGRAM_WIDTH
 0x8026

	)

140 
	#GL_HISTOGRAM_FORMAT
 0x8027

	)

141 
	#GL_HISTOGRAM_RED_SIZE
 0x8028

	)

142 
	#GL_HISTOGRAM_GREEN_SIZE
 0x8029

	)

143 
	#GL_HISTOGRAM_BLUE_SIZE
 0x802A

	)

144 
	#GL_HISTOGRAM_ALPHA_SIZE
 0x802B

	)

145 
	#GL_HISTOGRAM_LUMINANCE_SIZE
 0x802C

	)

146 
	#GL_HISTOGRAM_SINK
 0x802D

	)

147 
	#GL_MINMAX
 0x802E

	)

148 
	#GL_MINMAX_FORMAT
 0x802F

	)

149 
	#GL_MINMAX_SINK
 0x8030

	)

150 
	#GL_TABLE_TOO_LARGE
 0x8031

	)

151 
	#GL_COLOR_MATRIX
 0x80B1

	)

152 
	#GL_COLOR_MATRIX_STACK_DEPTH
 0x80B2

	)

153 
	#GL_MAX_COLOR_MATRIX_STACK_DEPTH
 0x80B3

	)

154 
	#GL_POST_COLOR_MATRIX_RED_SCALE
 0x80B4

	)

155 
	#GL_POST_COLOR_MATRIX_GREEN_SCALE
 0x80B5

	)

156 
	#GL_POST_COLOR_MATRIX_BLUE_SCALE
 0x80B6

	)

157 
	#GL_POST_COLOR_MATRIX_ALPHA_SCALE
 0x80B7

	)

158 
	#GL_POST_COLOR_MATRIX_RED_BIAS
 0x80B8

	)

159 
	#GL_POST_COLOR_MATRIX_GREEN_BIAS
 0x80B9

	)

160 
	#GL_POST_COLOR_MATRIX_BLUE_BIAS
 0x80BA

	)

161 
	#GL_POST_COLOR_MATRIX_ALPHA_BIAS
 0x80BB

	)

162 
	#GL_COLOR_TABLE
 0x80D0

	)

163 
	#GL_POST_CONVOLUTION_COLOR_TABLE
 0x80D1

	)

164 
	#GL_POST_COLOR_MATRIX_COLOR_TABLE
 0x80D2

	)

165 
	#GL_PROXY_COLOR_TABLE
 0x80D3

	)

166 
	#GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
 0x80D4

	)

167 
	#GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
 0x80D5

	)

168 
	#GL_COLOR_TABLE_SCALE
 0x80D6

	)

169 
	#GL_COLOR_TABLE_BIAS
 0x80D7

	)

170 
	#GL_COLOR_TABLE_FORMAT
 0x80D8

	)

171 
	#GL_COLOR_TABLE_WIDTH
 0x80D9

	)

172 
	#GL_COLOR_TABLE_RED_SIZE
 0x80DA

	)

173 
	#GL_COLOR_TABLE_GREEN_SIZE
 0x80DB

	)

174 
	#GL_COLOR_TABLE_BLUE_SIZE
 0x80DC

	)

175 
	#GL_COLOR_TABLE_ALPHA_SIZE
 0x80DD

	)

176 
	#GL_COLOR_TABLE_LUMINANCE_SIZE
 0x80DE

	)

177 
	#GL_COLOR_TABLE_INTENSITY_SIZE
 0x80DF

	)

178 
	#GL_CONSTANT_BORDER
 0x8151

	)

179 
	#GL_REPLICATE_BORDER
 0x8153

	)

180 
	#GL_CONVOLUTION_BORDER_COLOR
 0x8154

	)

183 #i‚de‡
GL_VERSION_1_3


184 
	#GL_TEXTURE0
 0x84C0

	)

185 
	#GL_TEXTURE1
 0x84C1

	)

186 
	#GL_TEXTURE2
 0x84C2

	)

187 
	#GL_TEXTURE3
 0x84C3

	)

188 
	#GL_TEXTURE4
 0x84C4

	)

189 
	#GL_TEXTURE5
 0x84C5

	)

190 
	#GL_TEXTURE6
 0x84C6

	)

191 
	#GL_TEXTURE7
 0x84C7

	)

192 
	#GL_TEXTURE8
 0x84C8

	)

193 
	#GL_TEXTURE9
 0x84C9

	)

194 
	#GL_TEXTURE10
 0x84CA

	)

195 
	#GL_TEXTURE11
 0x84CB

	)

196 
	#GL_TEXTURE12
 0x84CC

	)

197 
	#GL_TEXTURE13
 0x84CD

	)

198 
	#GL_TEXTURE14
 0x84CE

	)

199 
	#GL_TEXTURE15
 0x84CF

	)

200 
	#GL_TEXTURE16
 0x84D0

	)

201 
	#GL_TEXTURE17
 0x84D1

	)

202 
	#GL_TEXTURE18
 0x84D2

	)

203 
	#GL_TEXTURE19
 0x84D3

	)

204 
	#GL_TEXTURE20
 0x84D4

	)

205 
	#GL_TEXTURE21
 0x84D5

	)

206 
	#GL_TEXTURE22
 0x84D6

	)

207 
	#GL_TEXTURE23
 0x84D7

	)

208 
	#GL_TEXTURE24
 0x84D8

	)

209 
	#GL_TEXTURE25
 0x84D9

	)

210 
	#GL_TEXTURE26
 0x84DA

	)

211 
	#GL_TEXTURE27
 0x84DB

	)

212 
	#GL_TEXTURE28
 0x84DC

	)

213 
	#GL_TEXTURE29
 0x84DD

	)

214 
	#GL_TEXTURE30
 0x84DE

	)

215 
	#GL_TEXTURE31
 0x84DF

	)

216 
	#GL_ACTIVE_TEXTURE
 0x84E0

	)

217 
	#GL_MULTISAMPLE
 0x809D

	)

218 
	#GL_SAMPLE_ALPHA_TO_COVERAGE
 0x809E

	)

219 
	#GL_SAMPLE_ALPHA_TO_ONE
 0x809F

	)

220 
	#GL_SAMPLE_COVERAGE
 0x80A0

	)

221 
	#GL_SAMPLE_BUFFERS
 0x80A8

	)

222 
	#GL_SAMPLES
 0x80A9

	)

223 
	#GL_SAMPLE_COVERAGE_VALUE
 0x80AA

	)

224 
	#GL_SAMPLE_COVERAGE_INVERT
 0x80AB

	)

225 
	#GL_TEXTURE_CUBE_MAP
 0x8513

	)

226 
	#GL_TEXTURE_BINDING_CUBE_MAP
 0x8514

	)

227 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_X
 0x8515

	)

228 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_X
 0x8516

	)

229 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Y
 0x8517

	)

230 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
 0x8518

	)

231 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Z
 0x8519

	)

232 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
 0x851A

	)

233 
	#GL_PROXY_TEXTURE_CUBE_MAP
 0x851B

	)

234 
	#GL_MAX_CUBE_MAP_TEXTURE_SIZE
 0x851C

	)

235 
	#GL_COMPRESSED_RGB
 0x84ED

	)

236 
	#GL_COMPRESSED_RGBA
 0x84EE

	)

237 
	#GL_TEXTURE_COMPRESSION_HINT
 0x84EF

	)

238 
	#GL_TEXTURE_COMPRESSED_IMAGE_SIZE
 0x86A0

	)

239 
	#GL_TEXTURE_COMPRESSED
 0x86A1

	)

240 
	#GL_NUM_COMPRESSED_TEXTURE_FORMATS
 0x86A2

	)

241 
	#GL_COMPRESSED_TEXTURE_FORMATS
 0x86A3

	)

242 
	#GL_CLAMP_TO_BORDER
 0x812D

	)

245 #i‚de‡
GL_VERSION_1_3_DEPRECATED


246 
	#GL_CLIENT_ACTIVE_TEXTURE
 0x84E1

	)

247 
	#GL_MAX_TEXTURE_UNITS
 0x84E2

	)

248 
	#GL_TRANSPOSE_MODELVIEW_MATRIX
 0x84E3

	)

249 
	#GL_TRANSPOSE_PROJECTION_MATRIX
 0x84E4

	)

250 
	#GL_TRANSPOSE_TEXTURE_MATRIX
 0x84E5

	)

251 
	#GL_TRANSPOSE_COLOR_MATRIX
 0x84E6

	)

252 
	#GL_MULTISAMPLE_BIT
 0x20000000

	)

253 
	#GL_NORMAL_MAP
 0x8511

	)

254 
	#GL_REFLECTION_MAP
 0x8512

	)

255 
	#GL_COMPRESSED_ALPHA
 0x84E9

	)

256 
	#GL_COMPRESSED_LUMINANCE
 0x84EA

	)

257 
	#GL_COMPRESSED_LUMINANCE_ALPHA
 0x84EB

	)

258 
	#GL_COMPRESSED_INTENSITY
 0x84EC

	)

259 
	#GL_COMBINE
 0x8570

	)

260 
	#GL_COMBINE_RGB
 0x8571

	)

261 
	#GL_COMBINE_ALPHA
 0x8572

	)

262 
	#GL_SOURCE0_RGB
 0x8580

	)

263 
	#GL_SOURCE1_RGB
 0x8581

	)

264 
	#GL_SOURCE2_RGB
 0x8582

	)

265 
	#GL_SOURCE0_ALPHA
 0x8588

	)

266 
	#GL_SOURCE1_ALPHA
 0x8589

	)

267 
	#GL_SOURCE2_ALPHA
 0x858A

	)

268 
	#GL_OPERAND0_RGB
 0x8590

	)

269 
	#GL_OPERAND1_RGB
 0x8591

	)

270 
	#GL_OPERAND2_RGB
 0x8592

	)

271 
	#GL_OPERAND0_ALPHA
 0x8598

	)

272 
	#GL_OPERAND1_ALPHA
 0x8599

	)

273 
	#GL_OPERAND2_ALPHA
 0x859A

	)

274 
	#GL_RGB_SCALE
 0x8573

	)

275 
	#GL_ADD_SIGNED
 0x8574

	)

276 
	#GL_INTERPOLATE
 0x8575

	)

277 
	#GL_SUBTRACT
 0x84E7

	)

278 
	#GL_CONSTANT
 0x8576

	)

279 
	#GL_PRIMARY_COLOR
 0x8577

	)

280 
	#GL_PREVIOUS
 0x8578

	)

281 
	#GL_DOT3_RGB
 0x86AE

	)

282 
	#GL_DOT3_RGBA
 0x86AF

	)

285 #i‚de‡
GL_VERSION_1_4


286 
	#GL_BLEND_DST_RGB
 0x80C8

	)

287 
	#GL_BLEND_SRC_RGB
 0x80C9

	)

288 
	#GL_BLEND_DST_ALPHA
 0x80CA

	)

289 
	#GL_BLEND_SRC_ALPHA
 0x80CB

	)

290 
	#GL_POINT_FADE_THRESHOLD_SIZE
 0x8128

	)

291 
	#GL_DEPTH_COMPONENT16
 0x81A5

	)

292 
	#GL_DEPTH_COMPONENT24
 0x81A6

	)

293 
	#GL_DEPTH_COMPONENT32
 0x81A7

	)

294 
	#GL_MIRRORED_REPEAT
 0x8370

	)

295 
	#GL_MAX_TEXTURE_LOD_BIAS
 0x84FD

	)

296 
	#GL_TEXTURE_LOD_BIAS
 0x8501

	)

297 
	#GL_INCR_WRAP
 0x8507

	)

298 
	#GL_DECR_WRAP
 0x8508

	)

299 
	#GL_TEXTURE_DEPTH_SIZE
 0x884A

	)

300 
	#GL_TEXTURE_COMPARE_MODE
 0x884C

	)

301 
	#GL_TEXTURE_COMPARE_FUNC
 0x884D

	)

304 #i‚de‡
GL_VERSION_1_4_DEPRECATED


305 
	#GL_POINT_SIZE_MIN
 0x8126

	)

306 
	#GL_POINT_SIZE_MAX
 0x8127

	)

307 
	#GL_POINT_DISTANCE_ATTENUATION
 0x8129

	)

308 
	#GL_GENERATE_MIPMAP
 0x8191

	)

309 
	#GL_GENERATE_MIPMAP_HINT
 0x8192

	)

310 
	#GL_FOG_COORDINATE_SOURCE
 0x8450

	)

311 
	#GL_FOG_COORDINATE
 0x8451

	)

312 
	#GL_FRAGMENT_DEPTH
 0x8452

	)

313 
	#GL_CURRENT_FOG_COORDINATE
 0x8453

	)

314 
	#GL_FOG_COORDINATE_ARRAY_TYPE
 0x8454

	)

315 
	#GL_FOG_COORDINATE_ARRAY_STRIDE
 0x8455

	)

316 
	#GL_FOG_COORDINATE_ARRAY_POINTER
 0x8456

	)

317 
	#GL_FOG_COORDINATE_ARRAY
 0x8457

	)

318 
	#GL_COLOR_SUM
 0x8458

	)

319 
	#GL_CURRENT_SECONDARY_COLOR
 0x8459

	)

320 
	#GL_SECONDARY_COLOR_ARRAY_SIZE
 0x845A

	)

321 
	#GL_SECONDARY_COLOR_ARRAY_TYPE
 0x845B

	)

322 
	#GL_SECONDARY_COLOR_ARRAY_STRIDE
 0x845C

	)

323 
	#GL_SECONDARY_COLOR_ARRAY_POINTER
 0x845D

	)

324 
	#GL_SECONDARY_COLOR_ARRAY
 0x845E

	)

325 
	#GL_TEXTURE_FILTER_CONTROL
 0x8500

	)

326 
	#GL_DEPTH_TEXTURE_MODE
 0x884B

	)

327 
	#GL_COMPARE_R_TO_TEXTURE
 0x884E

	)

330 #i‚de‡
GL_VERSION_1_5


331 
	#GL_BUFFER_SIZE
 0x8764

	)

332 
	#GL_BUFFER_USAGE
 0x8765

	)

333 
	#GL_QUERY_COUNTER_BITS
 0x8864

	)

334 
	#GL_CURRENT_QUERY
 0x8865

	)

335 
	#GL_QUERY_RESULT
 0x8866

	)

336 
	#GL_QUERY_RESULT_AVAILABLE
 0x8867

	)

337 
	#GL_ARRAY_BUFFER
 0x8892

	)

338 
	#GL_ELEMENT_ARRAY_BUFFER
 0x8893

	)

339 
	#GL_ARRAY_BUFFER_BINDING
 0x8894

	)

340 
	#GL_ELEMENT_ARRAY_BUFFER_BINDING
 0x8895

	)

341 
	#GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
 0x889F

	)

342 
	#GL_READ_ONLY
 0x88B8

	)

343 
	#GL_WRITE_ONLY
 0x88B9

	)

344 
	#GL_READ_WRITE
 0x88BA

	)

345 
	#GL_BUFFER_ACCESS
 0x88BB

	)

346 
	#GL_BUFFER_MAPPED
 0x88BC

	)

347 
	#GL_BUFFER_MAP_POINTER
 0x88BD

	)

348 
	#GL_STREAM_DRAW
 0x88E0

	)

349 
	#GL_STREAM_READ
 0x88E1

	)

350 
	#GL_STREAM_COPY
 0x88E2

	)

351 
	#GL_STATIC_DRAW
 0x88E4

	)

352 
	#GL_STATIC_READ
 0x88E5

	)

353 
	#GL_STATIC_COPY
 0x88E6

	)

354 
	#GL_DYNAMIC_DRAW
 0x88E8

	)

355 
	#GL_DYNAMIC_READ
 0x88E9

	)

356 
	#GL_DYNAMIC_COPY
 0x88EA

	)

357 
	#GL_SAMPLES_PASSED
 0x8914

	)

360 #i‚de‡
GL_VERSION_1_5_DEPRECATED


361 
	#GL_VERTEX_ARRAY_BUFFER_BINDING
 0x8896

	)

362 
	#GL_NORMAL_ARRAY_BUFFER_BINDING
 0x8897

	)

363 
	#GL_COLOR_ARRAY_BUFFER_BINDING
 0x8898

	)

364 
	#GL_INDEX_ARRAY_BUFFER_BINDING
 0x8899

	)

365 
	#GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
 0x889A

	)

366 
	#GL_EDGE_FLAG_ARRAY_BUFFER_BINDING
 0x889B

	)

367 
	#GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING
 0x889C

	)

368 
	#GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING
 0x889D

	)

369 
	#GL_WEIGHT_ARRAY_BUFFER_BINDING
 0x889E

	)

370 
	#GL_FOG_COORD_SRC
 0x8450

	)

371 
	#GL_FOG_COORD
 0x8451

	)

372 
	#GL_CURRENT_FOG_COORD
 0x8453

	)

373 
	#GL_FOG_COORD_ARRAY_TYPE
 0x8454

	)

374 
	#GL_FOG_COORD_ARRAY_STRIDE
 0x8455

	)

375 
	#GL_FOG_COORD_ARRAY_POINTER
 0x8456

	)

376 
	#GL_FOG_COORD_ARRAY
 0x8457

	)

377 
	#GL_FOG_COORD_ARRAY_BUFFER_BINDING
 0x889D

	)

378 
	#GL_SRC0_RGB
 0x8580

	)

379 
	#GL_SRC1_RGB
 0x8581

	)

380 
	#GL_SRC2_RGB
 0x8582

	)

381 
	#GL_SRC0_ALPHA
 0x8588

	)

382 
	#GL_SRC1_ALPHA
 0x8589

	)

383 
	#GL_SRC2_ALPHA
 0x858A

	)

386 #i‚de‡
GL_VERSION_2_0


387 
	#GL_BLEND_EQUATION_RGB
 0x8009

	)

388 
	#GL_VERTEX_ATTRIB_ARRAY_ENABLED
 0x8622

	)

389 
	#GL_VERTEX_ATTRIB_ARRAY_SIZE
 0x8623

	)

390 
	#GL_VERTEX_ATTRIB_ARRAY_STRIDE
 0x8624

	)

391 
	#GL_VERTEX_ATTRIB_ARRAY_TYPE
 0x8625

	)

392 
	#GL_CURRENT_VERTEX_ATTRIB
 0x8626

	)

393 
	#GL_VERTEX_PROGRAM_POINT_SIZE
 0x8642

	)

394 
	#GL_VERTEX_ATTRIB_ARRAY_POINTER
 0x8645

	)

395 
	#GL_STENCIL_BACK_FUNC
 0x8800

	)

396 
	#GL_STENCIL_BACK_FAIL
 0x8801

	)

397 
	#GL_STENCIL_BACK_PASS_DEPTH_FAIL
 0x8802

	)

398 
	#GL_STENCIL_BACK_PASS_DEPTH_PASS
 0x8803

	)

399 
	#GL_MAX_DRAW_BUFFERS
 0x8824

	)

400 
	#GL_DRAW_BUFFER0
 0x8825

	)

401 
	#GL_DRAW_BUFFER1
 0x8826

	)

402 
	#GL_DRAW_BUFFER2
 0x8827

	)

403 
	#GL_DRAW_BUFFER3
 0x8828

	)

404 
	#GL_DRAW_BUFFER4
 0x8829

	)

405 
	#GL_DRAW_BUFFER5
 0x882A

	)

406 
	#GL_DRAW_BUFFER6
 0x882B

	)

407 
	#GL_DRAW_BUFFER7
 0x882C

	)

408 
	#GL_DRAW_BUFFER8
 0x882D

	)

409 
	#GL_DRAW_BUFFER9
 0x882E

	)

410 
	#GL_DRAW_BUFFER10
 0x882F

	)

411 
	#GL_DRAW_BUFFER11
 0x8830

	)

412 
	#GL_DRAW_BUFFER12
 0x8831

	)

413 
	#GL_DRAW_BUFFER13
 0x8832

	)

414 
	#GL_DRAW_BUFFER14
 0x8833

	)

415 
	#GL_DRAW_BUFFER15
 0x8834

	)

416 
	#GL_BLEND_EQUATION_ALPHA
 0x883D

	)

417 
	#GL_MAX_VERTEX_ATTRIBS
 0x8869

	)

418 
	#GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
 0x886A

	)

419 
	#GL_MAX_TEXTURE_IMAGE_UNITS
 0x8872

	)

420 
	#GL_FRAGMENT_SHADER
 0x8B30

	)

421 
	#GL_VERTEX_SHADER
 0x8B31

	)

422 
	#GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
 0x8B49

	)

423 
	#GL_MAX_VERTEX_UNIFORM_COMPONENTS
 0x8B4A

	)

424 
	#GL_MAX_VARYING_FLOATS
 0x8B4B

	)

425 
	#GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
 0x8B4C

	)

426 
	#GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
 0x8B4D

	)

427 
	#GL_SHADER_TYPE
 0x8B4F

	)

428 
	#GL_FLOAT_VEC2
 0x8B50

	)

429 
	#GL_FLOAT_VEC3
 0x8B51

	)

430 
	#GL_FLOAT_VEC4
 0x8B52

	)

431 
	#GL_INT_VEC2
 0x8B53

	)

432 
	#GL_INT_VEC3
 0x8B54

	)

433 
	#GL_INT_VEC4
 0x8B55

	)

434 
	#GL_BOOL
 0x8B56

	)

435 
	#GL_BOOL_VEC2
 0x8B57

	)

436 
	#GL_BOOL_VEC3
 0x8B58

	)

437 
	#GL_BOOL_VEC4
 0x8B59

	)

438 
	#GL_FLOAT_MAT2
 0x8B5A

	)

439 
	#GL_FLOAT_MAT3
 0x8B5B

	)

440 
	#GL_FLOAT_MAT4
 0x8B5C

	)

441 
	#GL_SAMPLER_1D
 0x8B5D

	)

442 
	#GL_SAMPLER_2D
 0x8B5E

	)

443 
	#GL_SAMPLER_3D
 0x8B5F

	)

444 
	#GL_SAMPLER_CUBE
 0x8B60

	)

445 
	#GL_SAMPLER_1D_SHADOW
 0x8B61

	)

446 
	#GL_SAMPLER_2D_SHADOW
 0x8B62

	)

447 
	#GL_DELETE_STATUS
 0x8B80

	)

448 
	#GL_COMPILE_STATUS
 0x8B81

	)

449 
	#GL_LINK_STATUS
 0x8B82

	)

450 
	#GL_VALIDATE_STATUS
 0x8B83

	)

451 
	#GL_INFO_LOG_LENGTH
 0x8B84

	)

452 
	#GL_ATTACHED_SHADERS
 0x8B85

	)

453 
	#GL_ACTIVE_UNIFORMS
 0x8B86

	)

454 
	#GL_ACTIVE_UNIFORM_MAX_LENGTH
 0x8B87

	)

455 
	#GL_SHADER_SOURCE_LENGTH
 0x8B88

	)

456 
	#GL_ACTIVE_ATTRIBUTES
 0x8B89

	)

457 
	#GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
 0x8B8A

	)

458 
	#GL_FRAGMENT_SHADER_DERIVATIVE_HINT
 0x8B8B

	)

459 
	#GL_SHADING_LANGUAGE_VERSION
 0x8B8C

	)

460 
	#GL_CURRENT_PROGRAM
 0x8B8D

	)

461 
	#GL_POINT_SPRITE_COORD_ORIGIN
 0x8CA0

	)

462 
	#GL_LOWER_LEFT
 0x8CA1

	)

463 
	#GL_UPPER_LEFT
 0x8CA2

	)

464 
	#GL_STENCIL_BACK_REF
 0x8CA3

	)

465 
	#GL_STENCIL_BACK_VALUE_MASK
 0x8CA4

	)

466 
	#GL_STENCIL_BACK_WRITEMASK
 0x8CA5

	)

469 #i‚de‡
GL_VERSION_2_0_DEPRECATED


470 
	#GL_VERTEX_PROGRAM_TWO_SIDE
 0x8643

	)

471 
	#GL_POINT_SPRITE
 0x8861

	)

472 
	#GL_COORD_REPLACE
 0x8862

	)

473 
	#GL_MAX_TEXTURE_COORDS
 0x8871

	)

476 #i‚de‡
GL_VERSION_2_1


477 
	#GL_PIXEL_PACK_BUFFER
 0x88EB

	)

478 
	#GL_PIXEL_UNPACK_BUFFER
 0x88EC

	)

479 
	#GL_PIXEL_PACK_BUFFER_BINDING
 0x88ED

	)

480 
	#GL_PIXEL_UNPACK_BUFFER_BINDING
 0x88EF

	)

481 
	#GL_FLOAT_MAT2x3
 0x8B65

	)

482 
	#GL_FLOAT_MAT2x4
 0x8B66

	)

483 
	#GL_FLOAT_MAT3x2
 0x8B67

	)

484 
	#GL_FLOAT_MAT3x4
 0x8B68

	)

485 
	#GL_FLOAT_MAT4x2
 0x8B69

	)

486 
	#GL_FLOAT_MAT4x3
 0x8B6A

	)

487 
	#GL_SRGB
 0x8C40

	)

488 
	#GL_SRGB8
 0x8C41

	)

489 
	#GL_SRGB_ALPHA
 0x8C42

	)

490 
	#GL_SRGB8_ALPHA8
 0x8C43

	)

491 
	#GL_COMPRESSED_SRGB
 0x8C48

	)

492 
	#GL_COMPRESSED_SRGB_ALPHA
 0x8C49

	)

495 #i‚de‡
GL_VERSION_2_1_DEPRECATED


496 
	#GL_CURRENT_RASTER_SECONDARY_COLOR
 0x845F

	)

497 
	#GL_SLUMINANCE_ALPHA
 0x8C44

	)

498 
	#GL_SLUMINANCE8_ALPHA8
 0x8C45

	)

499 
	#GL_SLUMINANCE
 0x8C46

	)

500 
	#GL_SLUMINANCE8
 0x8C47

	)

501 
	#GL_COMPRESSED_SLUMINANCE
 0x8C4A

	)

502 
	#GL_COMPRESSED_SLUMINANCE_ALPHA
 0x8C4B

	)

505 #i‚de‡
GL_VERSION_3_0


506 
	#GL_COMPARE_REF_TO_TEXTURE
 0x884E

	)

507 
	#GL_CLIP_DISTANCE0
 0x3000

	)

508 
	#GL_CLIP_DISTANCE1
 0x3001

	)

509 
	#GL_CLIP_DISTANCE2
 0x3002

	)

510 
	#GL_CLIP_DISTANCE3
 0x3003

	)

511 
	#GL_CLIP_DISTANCE4
 0x3004

	)

512 
	#GL_CLIP_DISTANCE5
 0x3005

	)

513 
	#GL_CLIP_DISTANCE6
 0x3006

	)

514 
	#GL_CLIP_DISTANCE7
 0x3007

	)

515 
	#GL_MAX_CLIP_DISTANCES
 0x0D32

	)

516 
	#GL_MAJOR_VERSION
 0x821B

	)

517 
	#GL_MINOR_VERSION
 0x821C

	)

518 
	#GL_NUM_EXTENSIONS
 0x821D

	)

519 
	#GL_CONTEXT_FLAGS
 0x821E

	)

520 
	#GL_DEPTH_BUFFER
 0x8223

	)

521 
	#GL_STENCIL_BUFFER
 0x8224

	)

522 
	#GL_COMPRESSED_RED
 0x8225

	)

523 
	#GL_COMPRESSED_RG
 0x8226

	)

524 
	#GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT
 0x0001

	)

525 
	#GL_RGBA32F
 0x8814

	)

526 
	#GL_RGB32F
 0x8815

	)

527 
	#GL_RGBA16F
 0x881A

	)

528 
	#GL_RGB16F
 0x881B

	)

529 
	#GL_VERTEX_ATTRIB_ARRAY_INTEGER
 0x88FD

	)

530 
	#GL_MAX_ARRAY_TEXTURE_LAYERS
 0x88FF

	)

531 
	#GL_MIN_PROGRAM_TEXEL_OFFSET
 0x8904

	)

532 
	#GL_MAX_PROGRAM_TEXEL_OFFSET
 0x8905

	)

533 
	#GL_CLAMP_READ_COLOR
 0x891C

	)

534 
	#GL_FIXED_ONLY
 0x891D

	)

535 
	#GL_MAX_VARYING_COMPONENTS
 0x8B4B

	)

536 
	#GL_TEXTURE_1D_ARRAY
 0x8C18

	)

537 
	#GL_PROXY_TEXTURE_1D_ARRAY
 0x8C19

	)

538 
	#GL_TEXTURE_2D_ARRAY
 0x8C1A

	)

539 
	#GL_PROXY_TEXTURE_2D_ARRAY
 0x8C1B

	)

540 
	#GL_TEXTURE_BINDING_1D_ARRAY
 0x8C1C

	)

541 
	#GL_TEXTURE_BINDING_2D_ARRAY
 0x8C1D

	)

542 
	#GL_R11F_G11F_B10F
 0x8C3A

	)

543 
	#GL_UNSIGNED_INT_10F_11F_11F_REV
 0x8C3B

	)

544 
	#GL_RGB9_E5
 0x8C3D

	)

545 
	#GL_UNSIGNED_INT_5_9_9_9_REV
 0x8C3E

	)

546 
	#GL_TEXTURE_SHARED_SIZE
 0x8C3F

	)

547 
	#GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
 0x8C76

	)

548 
	#GL_TRANSFORM_FEEDBACK_BUFFER_MODE
 0x8C7F

	)

549 
	#GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
 0x8C80

	)

550 
	#GL_TRANSFORM_FEEDBACK_VARYINGS
 0x8C83

	)

551 
	#GL_TRANSFORM_FEEDBACK_BUFFER_START
 0x8C84

	)

552 
	#GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
 0x8C85

	)

553 
	#GL_PRIMITIVES_GENERATED
 0x8C87

	)

554 
	#GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
 0x8C88

	)

555 
	#GL_RASTERIZER_DISCARD
 0x8C89

	)

556 
	#GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
 0x8C8A

	)

557 
	#GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
 0x8C8B

	)

558 
	#GL_INTERLEAVED_ATTRIBS
 0x8C8C

	)

559 
	#GL_SEPARATE_ATTRIBS
 0x8C8D

	)

560 
	#GL_TRANSFORM_FEEDBACK_BUFFER
 0x8C8E

	)

561 
	#GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
 0x8C8F

	)

562 
	#GL_RGBA32UI
 0x8D70

	)

563 
	#GL_RGB32UI
 0x8D71

	)

564 
	#GL_RGBA16UI
 0x8D76

	)

565 
	#GL_RGB16UI
 0x8D77

	)

566 
	#GL_RGBA8UI
 0x8D7C

	)

567 
	#GL_RGB8UI
 0x8D7D

	)

568 
	#GL_RGBA32I
 0x8D82

	)

569 
	#GL_RGB32I
 0x8D83

	)

570 
	#GL_RGBA16I
 0x8D88

	)

571 
	#GL_RGB16I
 0x8D89

	)

572 
	#GL_RGBA8I
 0x8D8E

	)

573 
	#GL_RGB8I
 0x8D8F

	)

574 
	#GL_RED_INTEGER
 0x8D94

	)

575 
	#GL_GREEN_INTEGER
 0x8D95

	)

576 
	#GL_BLUE_INTEGER
 0x8D96

	)

577 
	#GL_RGB_INTEGER
 0x8D98

	)

578 
	#GL_RGBA_INTEGER
 0x8D99

	)

579 
	#GL_BGR_INTEGER
 0x8D9A

	)

580 
	#GL_BGRA_INTEGER
 0x8D9B

	)

581 
	#GL_SAMPLER_1D_ARRAY
 0x8DC0

	)

582 
	#GL_SAMPLER_2D_ARRAY
 0x8DC1

	)

583 
	#GL_SAMPLER_1D_ARRAY_SHADOW
 0x8DC3

	)

584 
	#GL_SAMPLER_2D_ARRAY_SHADOW
 0x8DC4

	)

585 
	#GL_SAMPLER_CUBE_SHADOW
 0x8DC5

	)

586 
	#GL_UNSIGNED_INT_VEC2
 0x8DC6

	)

587 
	#GL_UNSIGNED_INT_VEC3
 0x8DC7

	)

588 
	#GL_UNSIGNED_INT_VEC4
 0x8DC8

	)

589 
	#GL_INT_SAMPLER_1D
 0x8DC9

	)

590 
	#GL_INT_SAMPLER_2D
 0x8DCA

	)

591 
	#GL_INT_SAMPLER_3D
 0x8DCB

	)

592 
	#GL_INT_SAMPLER_CUBE
 0x8DCC

	)

593 
	#GL_INT_SAMPLER_1D_ARRAY
 0x8DCE

	)

594 
	#GL_INT_SAMPLER_2D_ARRAY
 0x8DCF

	)

595 
	#GL_UNSIGNED_INT_SAMPLER_1D
 0x8DD1

	)

596 
	#GL_UNSIGNED_INT_SAMPLER_2D
 0x8DD2

	)

597 
	#GL_UNSIGNED_INT_SAMPLER_3D
 0x8DD3

	)

598 
	#GL_UNSIGNED_INT_SAMPLER_CUBE
 0x8DD4

	)

599 
	#GL_UNSIGNED_INT_SAMPLER_1D_ARRAY
 0x8DD6

	)

600 
	#GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
 0x8DD7

	)

601 
	#GL_QUERY_WAIT
 0x8E13

	)

602 
	#GL_QUERY_NO_WAIT
 0x8E14

	)

603 
	#GL_QUERY_BY_REGION_WAIT
 0x8E15

	)

604 
	#GL_QUERY_BY_REGION_NO_WAIT
 0x8E16

	)

605 
	#GL_BUFFER_ACCESS_FLAGS
 0x911F

	)

606 
	#GL_BUFFER_MAP_LENGTH
 0x9120

	)

607 
	#GL_BUFFER_MAP_OFFSET
 0x9121

	)

734 #i‚de‡
GL_VERSION_3_0_DEPRECATED


735 
	#GL_CLAMP_VERTEX_COLOR
 0x891A

	)

736 
	#GL_CLAMP_FRAGMENT_COLOR
 0x891B

	)

737 
	#GL_ALPHA_INTEGER
 0x8D97

	)

743 #i‚de‡
GL_VERSION_3_1


744 
	#GL_SAMPLER_2D_RECT
 0x8B63

	)

745 
	#GL_SAMPLER_2D_RECT_SHADOW
 0x8B64

	)

746 
	#GL_SAMPLER_BUFFER
 0x8DC2

	)

747 
	#GL_INT_SAMPLER_2D_RECT
 0x8DCD

	)

748 
	#GL_INT_SAMPLER_BUFFER
 0x8DD0

	)

749 
	#GL_UNSIGNED_INT_SAMPLER_2D_RECT
 0x8DD5

	)

750 
	#GL_UNSIGNED_INT_SAMPLER_BUFFER
 0x8DD8

	)

751 
	#GL_TEXTURE_BUFFER
 0x8C2A

	)

752 
	#GL_MAX_TEXTURE_BUFFER_SIZE
 0x8C2B

	)

753 
	#GL_TEXTURE_BINDING_BUFFER
 0x8C2C

	)

754 
	#GL_TEXTURE_BUFFER_DATA_STORE_BINDING
 0x8C2D

	)

755 
	#GL_TEXTURE_BUFFER_FORMAT
 0x8C2E

	)

756 
	#GL_TEXTURE_RECTANGLE
 0x84F5

	)

757 
	#GL_TEXTURE_BINDING_RECTANGLE
 0x84F6

	)

758 
	#GL_PROXY_TEXTURE_RECTANGLE
 0x84F7

	)

759 
	#GL_MAX_RECTANGLE_TEXTURE_SIZE
 0x84F8

	)

760 
	#GL_RED_SNORM
 0x8F90

	)

761 
	#GL_RG_SNORM
 0x8F91

	)

762 
	#GL_RGB_SNORM
 0x8F92

	)

763 
	#GL_RGBA_SNORM
 0x8F93

	)

764 
	#GL_R8_SNORM
 0x8F94

	)

765 
	#GL_RG8_SNORM
 0x8F95

	)

766 
	#GL_RGB8_SNORM
 0x8F96

	)

767 
	#GL_RGBA8_SNORM
 0x8F97

	)

768 
	#GL_R16_SNORM
 0x8F98

	)

769 
	#GL_RG16_SNORM
 0x8F99

	)

770 
	#GL_RGB16_SNORM
 0x8F9A

	)

771 
	#GL_RGBA16_SNORM
 0x8F9B

	)

772 
	#GL_SIGNED_NORMALIZED
 0x8F9C

	)

773 
	#GL_PRIMITIVE_RESTART
 0x8F9D

	)

774 
	#GL_PRIMITIVE_RESTART_INDEX
 0x8F9E

	)

812 #i‚de‡
GL_VERSION_3_2


813 
	#GL_CONTEXT_CORE_PROFILE_BIT
 0x00000001

	)

814 
	#GL_CONTEXT_COMPATIBILITY_PROFILE_BIT
 0x00000002

	)

815 
	#GL_LINES_ADJACENCY
 0x000A

	)

816 
	#GL_LINE_STRIP_ADJACENCY
 0x000B

	)

817 
	#GL_TRIANGLES_ADJACENCY
 0x000C

	)

818 
	#GL_TRIANGLE_STRIP_ADJACENCY
 0x000D

	)

819 
	#GL_PROGRAM_POINT_SIZE
 0x8642

	)

820 
	#GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS
 0x8C29

	)

821 
	#GL_FRAMEBUFFER_ATTACHMENT_LAYERED
 0x8DA7

	)

822 
	#GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS
 0x8DA8

	)

823 
	#GL_GEOMETRY_SHADER
 0x8DD9

	)

824 
	#GL_GEOMETRY_VERTICES_OUT
 0x8916

	)

825 
	#GL_GEOMETRY_INPUT_TYPE
 0x8917

	)

826 
	#GL_GEOMETRY_OUTPUT_TYPE
 0x8918

	)

827 
	#GL_MAX_GEOMETRY_UNIFORM_COMPONENTS
 0x8DDF

	)

828 
	#GL_MAX_GEOMETRY_OUTPUT_VERTICES
 0x8DE0

	)

829 
	#GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS
 0x8DE1

	)

830 
	#GL_MAX_VERTEX_OUTPUT_COMPONENTS
 0x9122

	)

831 
	#GL_MAX_GEOMETRY_INPUT_COMPONENTS
 0x9123

	)

832 
	#GL_MAX_GEOMETRY_OUTPUT_COMPONENTS
 0x9124

	)

833 
	#GL_MAX_FRAGMENT_INPUT_COMPONENTS
 0x9125

	)

834 
	#GL_CONTEXT_PROFILE_MASK
 0x9126

	)

890 #i‚de‡
GL_ARB_mu…ôextuª


891 
	#GL_TEXTURE0_ARB
 0x84C0

	)

892 
	#GL_TEXTURE1_ARB
 0x84C1

	)

893 
	#GL_TEXTURE2_ARB
 0x84C2

	)

894 
	#GL_TEXTURE3_ARB
 0x84C3

	)

895 
	#GL_TEXTURE4_ARB
 0x84C4

	)

896 
	#GL_TEXTURE5_ARB
 0x84C5

	)

897 
	#GL_TEXTURE6_ARB
 0x84C6

	)

898 
	#GL_TEXTURE7_ARB
 0x84C7

	)

899 
	#GL_TEXTURE8_ARB
 0x84C8

	)

900 
	#GL_TEXTURE9_ARB
 0x84C9

	)

901 
	#GL_TEXTURE10_ARB
 0x84CA

	)

902 
	#GL_TEXTURE11_ARB
 0x84CB

	)

903 
	#GL_TEXTURE12_ARB
 0x84CC

	)

904 
	#GL_TEXTURE13_ARB
 0x84CD

	)

905 
	#GL_TEXTURE14_ARB
 0x84CE

	)

906 
	#GL_TEXTURE15_ARB
 0x84CF

	)

907 
	#GL_TEXTURE16_ARB
 0x84D0

	)

908 
	#GL_TEXTURE17_ARB
 0x84D1

	)

909 
	#GL_TEXTURE18_ARB
 0x84D2

	)

910 
	#GL_TEXTURE19_ARB
 0x84D3

	)

911 
	#GL_TEXTURE20_ARB
 0x84D4

	)

912 
	#GL_TEXTURE21_ARB
 0x84D5

	)

913 
	#GL_TEXTURE22_ARB
 0x84D6

	)

914 
	#GL_TEXTURE23_ARB
 0x84D7

	)

915 
	#GL_TEXTURE24_ARB
 0x84D8

	)

916 
	#GL_TEXTURE25_ARB
 0x84D9

	)

917 
	#GL_TEXTURE26_ARB
 0x84DA

	)

918 
	#GL_TEXTURE27_ARB
 0x84DB

	)

919 
	#GL_TEXTURE28_ARB
 0x84DC

	)

920 
	#GL_TEXTURE29_ARB
 0x84DD

	)

921 
	#GL_TEXTURE30_ARB
 0x84DE

	)

922 
	#GL_TEXTURE31_ARB
 0x84DF

	)

923 
	#GL_ACTIVE_TEXTURE_ARB
 0x84E0

	)

924 
	#GL_CLIENT_ACTIVE_TEXTURE_ARB
 0x84E1

	)

925 
	#GL_MAX_TEXTURE_UNITS_ARB
 0x84E2

	)

928 #i‚de‡
GL_ARB_å™•o£_m©rix


929 
	#GL_TRANSPOSE_MODELVIEW_MATRIX_ARB
 0x84E3

	)

930 
	#GL_TRANSPOSE_PROJECTION_MATRIX_ARB
 0x84E4

	)

931 
	#GL_TRANSPOSE_TEXTURE_MATRIX_ARB
 0x84E5

	)

932 
	#GL_TRANSPOSE_COLOR_MATRIX_ARB
 0x84E6

	)

935 #i‚de‡
GL_ARB_mu…ißm∂e


936 
	#GL_MULTISAMPLE_ARB
 0x809D

	)

937 
	#GL_SAMPLE_ALPHA_TO_COVERAGE_ARB
 0x809E

	)

938 
	#GL_SAMPLE_ALPHA_TO_ONE_ARB
 0x809F

	)

939 
	#GL_SAMPLE_COVERAGE_ARB
 0x80A0

	)

940 
	#GL_SAMPLE_BUFFERS_ARB
 0x80A8

	)

941 
	#GL_SAMPLES_ARB
 0x80A9

	)

942 
	#GL_SAMPLE_COVERAGE_VALUE_ARB
 0x80AA

	)

943 
	#GL_SAMPLE_COVERAGE_INVERT_ARB
 0x80AB

	)

944 
	#GL_MULTISAMPLE_BIT_ARB
 0x20000000

	)

947 #i‚de‡
GL_ARB_ãxtuª_ív_add


950 #i‚de‡
GL_ARB_ãxtuª_cube_m≠


951 
	#GL_NORMAL_MAP_ARB
 0x8511

	)

952 
	#GL_REFLECTION_MAP_ARB
 0x8512

	)

953 
	#GL_TEXTURE_CUBE_MAP_ARB
 0x8513

	)

954 
	#GL_TEXTURE_BINDING_CUBE_MAP_ARB
 0x8514

	)

955 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
 0x8515

	)

956 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
 0x8516

	)

957 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
 0x8517

	)

958 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
 0x8518

	)

959 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
 0x8519

	)

960 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
 0x851A

	)

961 
	#GL_PROXY_TEXTURE_CUBE_MAP_ARB
 0x851B

	)

962 
	#GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB
 0x851C

	)

965 #i‚de‡
GL_ARB_ãxtuª_com¥essi⁄


966 
	#GL_COMPRESSED_ALPHA_ARB
 0x84E9

	)

967 
	#GL_COMPRESSED_LUMINANCE_ARB
 0x84EA

	)

968 
	#GL_COMPRESSED_LUMINANCE_ALPHA_ARB
 0x84EB

	)

969 
	#GL_COMPRESSED_INTENSITY_ARB
 0x84EC

	)

970 
	#GL_COMPRESSED_RGB_ARB
 0x84ED

	)

971 
	#GL_COMPRESSED_RGBA_ARB
 0x84EE

	)

972 
	#GL_TEXTURE_COMPRESSION_HINT_ARB
 0x84EF

	)

973 
	#GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
 0x86A0

	)

974 
	#GL_TEXTURE_COMPRESSED_ARB
 0x86A1

	)

975 
	#GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
 0x86A2

	)

976 
	#GL_COMPRESSED_TEXTURE_FORMATS_ARB
 0x86A3

	)

979 #i‚de‡
GL_ARB_ãxtuª_b‹dî_˛amp


980 
	#GL_CLAMP_TO_BORDER_ARB
 0x812D

	)

983 #i‚de‡
GL_ARB_poöt_∑ømëîs


984 
	#GL_POINT_SIZE_MIN_ARB
 0x8126

	)

985 
	#GL_POINT_SIZE_MAX_ARB
 0x8127

	)

986 
	#GL_POINT_FADE_THRESHOLD_SIZE_ARB
 0x8128

	)

987 
	#GL_POINT_DISTANCE_ATTENUATION_ARB
 0x8129

	)

990 #i‚de‡
GL_ARB_vîãx_bÀnd


991 
	#GL_MAX_VERTEX_UNITS_ARB
 0x86A4

	)

992 
	#GL_ACTIVE_VERTEX_UNITS_ARB
 0x86A5

	)

993 
	#GL_WEIGHT_SUM_UNITY_ARB
 0x86A6

	)

994 
	#GL_VERTEX_BLEND_ARB
 0x86A7

	)

995 
	#GL_CURRENT_WEIGHT_ARB
 0x86A8

	)

996 
	#GL_WEIGHT_ARRAY_TYPE_ARB
 0x86A9

	)

997 
	#GL_WEIGHT_ARRAY_STRIDE_ARB
 0x86AA

	)

998 
	#GL_WEIGHT_ARRAY_SIZE_ARB
 0x86AB

	)

999 
	#GL_WEIGHT_ARRAY_POINTER_ARB
 0x86AC

	)

1000 
	#GL_WEIGHT_ARRAY_ARB
 0x86AD

	)

1001 
	#GL_MODELVIEW0_ARB
 0x1700

	)

1002 
	#GL_MODELVIEW1_ARB
 0x850A

	)

1003 
	#GL_MODELVIEW2_ARB
 0x8722

	)

1004 
	#GL_MODELVIEW3_ARB
 0x8723

	)

1005 
	#GL_MODELVIEW4_ARB
 0x8724

	)

1006 
	#GL_MODELVIEW5_ARB
 0x8725

	)

1007 
	#GL_MODELVIEW6_ARB
 0x8726

	)

1008 
	#GL_MODELVIEW7_ARB
 0x8727

	)

1009 
	#GL_MODELVIEW8_ARB
 0x8728

	)

1010 
	#GL_MODELVIEW9_ARB
 0x8729

	)

1011 
	#GL_MODELVIEW10_ARB
 0x872A

	)

1012 
	#GL_MODELVIEW11_ARB
 0x872B

	)

1013 
	#GL_MODELVIEW12_ARB
 0x872C

	)

1014 
	#GL_MODELVIEW13_ARB
 0x872D

	)

1015 
	#GL_MODELVIEW14_ARB
 0x872E

	)

1016 
	#GL_MODELVIEW15_ARB
 0x872F

	)

1017 
	#GL_MODELVIEW16_ARB
 0x8730

	)

1018 
	#GL_MODELVIEW17_ARB
 0x8731

	)

1019 
	#GL_MODELVIEW18_ARB
 0x8732

	)

1020 
	#GL_MODELVIEW19_ARB
 0x8733

	)

1021 
	#GL_MODELVIEW20_ARB
 0x8734

	)

1022 
	#GL_MODELVIEW21_ARB
 0x8735

	)

1023 
	#GL_MODELVIEW22_ARB
 0x8736

	)

1024 
	#GL_MODELVIEW23_ARB
 0x8737

	)

1025 
	#GL_MODELVIEW24_ARB
 0x8738

	)

1026 
	#GL_MODELVIEW25_ARB
 0x8739

	)

1027 
	#GL_MODELVIEW26_ARB
 0x873A

	)

1028 
	#GL_MODELVIEW27_ARB
 0x873B

	)

1029 
	#GL_MODELVIEW28_ARB
 0x873C

	)

1030 
	#GL_MODELVIEW29_ARB
 0x873D

	)

1031 
	#GL_MODELVIEW30_ARB
 0x873E

	)

1032 
	#GL_MODELVIEW31_ARB
 0x873F

	)

1035 #i‚de‡
GL_ARB_m©rix_∑Àâe


1036 
	#GL_MATRIX_PALETTE_ARB
 0x8840

	)

1037 
	#GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
 0x8841

	)

1038 
	#GL_MAX_PALETTE_MATRICES_ARB
 0x8842

	)

1039 
	#GL_CURRENT_PALETTE_MATRIX_ARB
 0x8843

	)

1040 
	#GL_MATRIX_INDEX_ARRAY_ARB
 0x8844

	)

1041 
	#GL_CURRENT_MATRIX_INDEX_ARB
 0x8845

	)

1042 
	#GL_MATRIX_INDEX_ARRAY_SIZE_ARB
 0x8846

	)

1043 
	#GL_MATRIX_INDEX_ARRAY_TYPE_ARB
 0x8847

	)

1044 
	#GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
 0x8848

	)

1045 
	#GL_MATRIX_INDEX_ARRAY_POINTER_ARB
 0x8849

	)

1048 #i‚de‡
GL_ARB_ãxtuª_ív_comböe


1049 
	#GL_COMBINE_ARB
 0x8570

	)

1050 
	#GL_COMBINE_RGB_ARB
 0x8571

	)

1051 
	#GL_COMBINE_ALPHA_ARB
 0x8572

	)

1052 
	#GL_SOURCE0_RGB_ARB
 0x8580

	)

1053 
	#GL_SOURCE1_RGB_ARB
 0x8581

	)

1054 
	#GL_SOURCE2_RGB_ARB
 0x8582

	)

1055 
	#GL_SOURCE0_ALPHA_ARB
 0x8588

	)

1056 
	#GL_SOURCE1_ALPHA_ARB
 0x8589

	)

1057 
	#GL_SOURCE2_ALPHA_ARB
 0x858A

	)

1058 
	#GL_OPERAND0_RGB_ARB
 0x8590

	)

1059 
	#GL_OPERAND1_RGB_ARB
 0x8591

	)

1060 
	#GL_OPERAND2_RGB_ARB
 0x8592

	)

1061 
	#GL_OPERAND0_ALPHA_ARB
 0x8598

	)

1062 
	#GL_OPERAND1_ALPHA_ARB
 0x8599

	)

1063 
	#GL_OPERAND2_ALPHA_ARB
 0x859A

	)

1064 
	#GL_RGB_SCALE_ARB
 0x8573

	)

1065 
	#GL_ADD_SIGNED_ARB
 0x8574

	)

1066 
	#GL_INTERPOLATE_ARB
 0x8575

	)

1067 
	#GL_SUBTRACT_ARB
 0x84E7

	)

1068 
	#GL_CONSTANT_ARB
 0x8576

	)

1069 
	#GL_PRIMARY_COLOR_ARB
 0x8577

	)

1070 
	#GL_PREVIOUS_ARB
 0x8578

	)

1073 #i‚de‡
GL_ARB_ãxtuª_ív_¸ossb¨


1076 #i‚de‡
GL_ARB_ãxtuª_ív_dŸ3


1077 
	#GL_DOT3_RGB_ARB
 0x86AE

	)

1078 
	#GL_DOT3_RGBA_ARB
 0x86AF

	)

1081 #i‚de‡
GL_ARB_ãxtuª_múr‹ed_ª≥©


1082 
	#GL_MIRRORED_REPEAT_ARB
 0x8370

	)

1085 #i‚de‡
GL_ARB_dïth_ãxtuª


1086 
	#GL_DEPTH_COMPONENT16_ARB
 0x81A5

	)

1087 
	#GL_DEPTH_COMPONENT24_ARB
 0x81A6

	)

1088 
	#GL_DEPTH_COMPONENT32_ARB
 0x81A7

	)

1089 
	#GL_TEXTURE_DEPTH_SIZE_ARB
 0x884A

	)

1090 
	#GL_DEPTH_TEXTURE_MODE_ARB
 0x884B

	)

1093 #i‚de‡
GL_ARB_shadow


1094 
	#GL_TEXTURE_COMPARE_MODE_ARB
 0x884C

	)

1095 
	#GL_TEXTURE_COMPARE_FUNC_ARB
 0x884D

	)

1096 
	#GL_COMPARE_R_TO_TEXTURE_ARB
 0x884E

	)

1099 #i‚de‡
GL_ARB_shadow_ambõ¡


1100 
	#GL_TEXTURE_COMPARE_FAIL_VALUE_ARB
 0x80BF

	)

1103 #i‚de‡
GL_ARB_wödow_pos


1106 #i‚de‡
GL_ARB_vîãx_¥ogøm


1107 
	#GL_COLOR_SUM_ARB
 0x8458

	)

1108 
	#GL_VERTEX_PROGRAM_ARB
 0x8620

	)

1109 
	#GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB
 0x8622

	)

1110 
	#GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB
 0x8623

	)

1111 
	#GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB
 0x8624

	)

1112 
	#GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB
 0x8625

	)

1113 
	#GL_CURRENT_VERTEX_ATTRIB_ARB
 0x8626

	)

1114 
	#GL_PROGRAM_LENGTH_ARB
 0x8627

	)

1115 
	#GL_PROGRAM_STRING_ARB
 0x8628

	)

1116 
	#GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB
 0x862E

	)

1117 
	#GL_MAX_PROGRAM_MATRICES_ARB
 0x862F

	)

1118 
	#GL_CURRENT_MATRIX_STACK_DEPTH_ARB
 0x8640

	)

1119 
	#GL_CURRENT_MATRIX_ARB
 0x8641

	)

1120 
	#GL_VERTEX_PROGRAM_POINT_SIZE_ARB
 0x8642

	)

1121 
	#GL_VERTEX_PROGRAM_TWO_SIDE_ARB
 0x8643

	)

1122 
	#GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB
 0x8645

	)

1123 
	#GL_PROGRAM_ERROR_POSITION_ARB
 0x864B

	)

1124 
	#GL_PROGRAM_BINDING_ARB
 0x8677

	)

1125 
	#GL_MAX_VERTEX_ATTRIBS_ARB
 0x8869

	)

1126 
	#GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB
 0x886A

	)

1127 
	#GL_PROGRAM_ERROR_STRING_ARB
 0x8874

	)

1128 
	#GL_PROGRAM_FORMAT_ASCII_ARB
 0x8875

	)

1129 
	#GL_PROGRAM_FORMAT_ARB
 0x8876

	)

1130 
	#GL_PROGRAM_INSTRUCTIONS_ARB
 0x88A0

	)

1131 
	#GL_MAX_PROGRAM_INSTRUCTIONS_ARB
 0x88A1

	)

1132 
	#GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB
 0x88A2

	)

1133 
	#GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB
 0x88A3

	)

1134 
	#GL_PROGRAM_TEMPORARIES_ARB
 0x88A4

	)

1135 
	#GL_MAX_PROGRAM_TEMPORARIES_ARB
 0x88A5

	)

1136 
	#GL_PROGRAM_NATIVE_TEMPORARIES_ARB
 0x88A6

	)

1137 
	#GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB
 0x88A7

	)

1138 
	#GL_PROGRAM_PARAMETERS_ARB
 0x88A8

	)

1139 
	#GL_MAX_PROGRAM_PARAMETERS_ARB
 0x88A9

	)

1140 
	#GL_PROGRAM_NATIVE_PARAMETERS_ARB
 0x88AA

	)

1141 
	#GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB
 0x88AB

	)

1142 
	#GL_PROGRAM_ATTRIBS_ARB
 0x88AC

	)

1143 
	#GL_MAX_PROGRAM_ATTRIBS_ARB
 0x88AD

	)

1144 
	#GL_PROGRAM_NATIVE_ATTRIBS_ARB
 0x88AE

	)

1145 
	#GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB
 0x88AF

	)

1146 
	#GL_PROGRAM_ADDRESS_REGISTERS_ARB
 0x88B0

	)

1147 
	#GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB
 0x88B1

	)

1148 
	#GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
 0x88B2

	)

1149 
	#GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
 0x88B3

	)

1150 
	#GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB
 0x88B4

	)

1151 
	#GL_MAX_PROGRAM_ENV_PARAMETERS_ARB
 0x88B5

	)

1152 
	#GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB
 0x88B6

	)

1153 
	#GL_TRANSPOSE_CURRENT_MATRIX_ARB
 0x88B7

	)

1154 
	#GL_MATRIX0_ARB
 0x88C0

	)

1155 
	#GL_MATRIX1_ARB
 0x88C1

	)

1156 
	#GL_MATRIX2_ARB
 0x88C2

	)

1157 
	#GL_MATRIX3_ARB
 0x88C3

	)

1158 
	#GL_MATRIX4_ARB
 0x88C4

	)

1159 
	#GL_MATRIX5_ARB
 0x88C5

	)

1160 
	#GL_MATRIX6_ARB
 0x88C6

	)

1161 
	#GL_MATRIX7_ARB
 0x88C7

	)

1162 
	#GL_MATRIX8_ARB
 0x88C8

	)

1163 
	#GL_MATRIX9_ARB
 0x88C9

	)

1164 
	#GL_MATRIX10_ARB
 0x88CA

	)

1165 
	#GL_MATRIX11_ARB
 0x88CB

	)

1166 
	#GL_MATRIX12_ARB
 0x88CC

	)

1167 
	#GL_MATRIX13_ARB
 0x88CD

	)

1168 
	#GL_MATRIX14_ARB
 0x88CE

	)

1169 
	#GL_MATRIX15_ARB
 0x88CF

	)

1170 
	#GL_MATRIX16_ARB
 0x88D0

	)

1171 
	#GL_MATRIX17_ARB
 0x88D1

	)

1172 
	#GL_MATRIX18_ARB
 0x88D2

	)

1173 
	#GL_MATRIX19_ARB
 0x88D3

	)

1174 
	#GL_MATRIX20_ARB
 0x88D4

	)

1175 
	#GL_MATRIX21_ARB
 0x88D5

	)

1176 
	#GL_MATRIX22_ARB
 0x88D6

	)

1177 
	#GL_MATRIX23_ARB
 0x88D7

	)

1178 
	#GL_MATRIX24_ARB
 0x88D8

	)

1179 
	#GL_MATRIX25_ARB
 0x88D9

	)

1180 
	#GL_MATRIX26_ARB
 0x88DA

	)

1181 
	#GL_MATRIX27_ARB
 0x88DB

	)

1182 
	#GL_MATRIX28_ARB
 0x88DC

	)

1183 
	#GL_MATRIX29_ARB
 0x88DD

	)

1184 
	#GL_MATRIX30_ARB
 0x88DE

	)

1185 
	#GL_MATRIX31_ARB
 0x88DF

	)

1188 #i‚de‡
GL_ARB_‰agmít_¥ogøm


1189 
	#GL_FRAGMENT_PROGRAM_ARB
 0x8804

	)

1190 
	#GL_PROGRAM_ALU_INSTRUCTIONS_ARB
 0x8805

	)

1191 
	#GL_PROGRAM_TEX_INSTRUCTIONS_ARB
 0x8806

	)

1192 
	#GL_PROGRAM_TEX_INDIRECTIONS_ARB
 0x8807

	)

1193 
	#GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
 0x8808

	)

1194 
	#GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
 0x8809

	)

1195 
	#GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
 0x880A

	)

1196 
	#GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB
 0x880B

	)

1197 
	#GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB
 0x880C

	)

1198 
	#GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB
 0x880D

	)

1199 
	#GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
 0x880E

	)

1200 
	#GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
 0x880F

	)

1201 
	#GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
 0x8810

	)

1202 
	#GL_MAX_TEXTURE_COORDS_ARB
 0x8871

	)

1203 
	#GL_MAX_TEXTURE_IMAGE_UNITS_ARB
 0x8872

	)

1206 #i‚de‡
GL_ARB_vîãx_buf„r_obje˘


1207 
	#GL_BUFFER_SIZE_ARB
 0x8764

	)

1208 
	#GL_BUFFER_USAGE_ARB
 0x8765

	)

1209 
	#GL_ARRAY_BUFFER_ARB
 0x8892

	)

1210 
	#GL_ELEMENT_ARRAY_BUFFER_ARB
 0x8893

	)

1211 
	#GL_ARRAY_BUFFER_BINDING_ARB
 0x8894

	)

1212 
	#GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB
 0x8895

	)

1213 
	#GL_VERTEX_ARRAY_BUFFER_BINDING_ARB
 0x8896

	)

1214 
	#GL_NORMAL_ARRAY_BUFFER_BINDING_ARB
 0x8897

	)

1215 
	#GL_COLOR_ARRAY_BUFFER_BINDING_ARB
 0x8898

	)

1216 
	#GL_INDEX_ARRAY_BUFFER_BINDING_ARB
 0x8899

	)

1217 
	#GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB
 0x889A

	)

1218 
	#GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB
 0x889B

	)

1219 
	#GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB
 0x889C

	)

1220 
	#GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB
 0x889D

	)

1221 
	#GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB
 0x889E

	)

1222 
	#GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB
 0x889F

	)

1223 
	#GL_READ_ONLY_ARB
 0x88B8

	)

1224 
	#GL_WRITE_ONLY_ARB
 0x88B9

	)

1225 
	#GL_READ_WRITE_ARB
 0x88BA

	)

1226 
	#GL_BUFFER_ACCESS_ARB
 0x88BB

	)

1227 
	#GL_BUFFER_MAPPED_ARB
 0x88BC

	)

1228 
	#GL_BUFFER_MAP_POINTER_ARB
 0x88BD

	)

1229 
	#GL_STREAM_DRAW_ARB
 0x88E0

	)

1230 
	#GL_STREAM_READ_ARB
 0x88E1

	)

1231 
	#GL_STREAM_COPY_ARB
 0x88E2

	)

1232 
	#GL_STATIC_DRAW_ARB
 0x88E4

	)

1233 
	#GL_STATIC_READ_ARB
 0x88E5

	)

1234 
	#GL_STATIC_COPY_ARB
 0x88E6

	)

1235 
	#GL_DYNAMIC_DRAW_ARB
 0x88E8

	)

1236 
	#GL_DYNAMIC_READ_ARB
 0x88E9

	)

1237 
	#GL_DYNAMIC_COPY_ARB
 0x88EA

	)

1240 #i‚de‡
GL_ARB_oc˛usi⁄_quîy


1241 
	#GL_QUERY_COUNTER_BITS_ARB
 0x8864

	)

1242 
	#GL_CURRENT_QUERY_ARB
 0x8865

	)

1243 
	#GL_QUERY_RESULT_ARB
 0x8866

	)

1244 
	#GL_QUERY_RESULT_AVAILABLE_ARB
 0x8867

	)

1245 
	#GL_SAMPLES_PASSED_ARB
 0x8914

	)

1248 #i‚de‡
GL_ARB_shadî_obje˘s


1249 
	#GL_PROGRAM_OBJECT_ARB
 0x8B40

	)

1250 
	#GL_SHADER_OBJECT_ARB
 0x8B48

	)

1251 
	#GL_OBJECT_TYPE_ARB
 0x8B4E

	)

1252 
	#GL_OBJECT_SUBTYPE_ARB
 0x8B4F

	)

1253 
	#GL_FLOAT_VEC2_ARB
 0x8B50

	)

1254 
	#GL_FLOAT_VEC3_ARB
 0x8B51

	)

1255 
	#GL_FLOAT_VEC4_ARB
 0x8B52

	)

1256 
	#GL_INT_VEC2_ARB
 0x8B53

	)

1257 
	#GL_INT_VEC3_ARB
 0x8B54

	)

1258 
	#GL_INT_VEC4_ARB
 0x8B55

	)

1259 
	#GL_BOOL_ARB
 0x8B56

	)

1260 
	#GL_BOOL_VEC2_ARB
 0x8B57

	)

1261 
	#GL_BOOL_VEC3_ARB
 0x8B58

	)

1262 
	#GL_BOOL_VEC4_ARB
 0x8B59

	)

1263 
	#GL_FLOAT_MAT2_ARB
 0x8B5A

	)

1264 
	#GL_FLOAT_MAT3_ARB
 0x8B5B

	)

1265 
	#GL_FLOAT_MAT4_ARB
 0x8B5C

	)

1266 
	#GL_SAMPLER_1D_ARB
 0x8B5D

	)

1267 
	#GL_SAMPLER_2D_ARB
 0x8B5E

	)

1268 
	#GL_SAMPLER_3D_ARB
 0x8B5F

	)

1269 
	#GL_SAMPLER_CUBE_ARB
 0x8B60

	)

1270 
	#GL_SAMPLER_1D_SHADOW_ARB
 0x8B61

	)

1271 
	#GL_SAMPLER_2D_SHADOW_ARB
 0x8B62

	)

1272 
	#GL_SAMPLER_2D_RECT_ARB
 0x8B63

	)

1273 
	#GL_SAMPLER_2D_RECT_SHADOW_ARB
 0x8B64

	)

1274 
	#GL_OBJECT_DELETE_STATUS_ARB
 0x8B80

	)

1275 
	#GL_OBJECT_COMPILE_STATUS_ARB
 0x8B81

	)

1276 
	#GL_OBJECT_LINK_STATUS_ARB
 0x8B82

	)

1277 
	#GL_OBJECT_VALIDATE_STATUS_ARB
 0x8B83

	)

1278 
	#GL_OBJECT_INFO_LOG_LENGTH_ARB
 0x8B84

	)

1279 
	#GL_OBJECT_ATTACHED_OBJECTS_ARB
 0x8B85

	)

1280 
	#GL_OBJECT_ACTIVE_UNIFORMS_ARB
 0x8B86

	)

1281 
	#GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB
 0x8B87

	)

1282 
	#GL_OBJECT_SHADER_SOURCE_LENGTH_ARB
 0x8B88

	)

1285 #i‚de‡
GL_ARB_vîãx_shadî


1286 
	#GL_VERTEX_SHADER_ARB
 0x8B31

	)

1287 
	#GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB
 0x8B4A

	)

1288 
	#GL_MAX_VARYING_FLOATS_ARB
 0x8B4B

	)

1289 
	#GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB
 0x8B4C

	)

1290 
	#GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB
 0x8B4D

	)

1291 
	#GL_OBJECT_ACTIVE_ATTRIBUTES_ARB
 0x8B89

	)

1292 
	#GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB
 0x8B8A

	)

1295 #i‚de‡
GL_ARB_‰agmít_shadî


1296 
	#GL_FRAGMENT_SHADER_ARB
 0x8B30

	)

1297 
	#GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB
 0x8B49

	)

1298 
	#GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB
 0x8B8B

	)

1301 #i‚de‡
GL_ARB_shadög_œnguage_100


1302 
	#GL_SHADING_LANGUAGE_VERSION_ARB
 0x8B8C

	)

1305 #i‚de‡
GL_ARB_ãxtuª_n⁄_powî_of_two


1308 #i‚de‡
GL_ARB_poöt_•rôe


1309 
	#GL_POINT_SPRITE_ARB
 0x8861

	)

1310 
	#GL_COORD_REPLACE_ARB
 0x8862

	)

1313 #i‚de‡
GL_ARB_‰agmít_¥ogøm_shadow


1316 #i‚de‡
GL_ARB_døw_buf„rs


1317 
	#GL_MAX_DRAW_BUFFERS_ARB
 0x8824

	)

1318 
	#GL_DRAW_BUFFER0_ARB
 0x8825

	)

1319 
	#GL_DRAW_BUFFER1_ARB
 0x8826

	)

1320 
	#GL_DRAW_BUFFER2_ARB
 0x8827

	)

1321 
	#GL_DRAW_BUFFER3_ARB
 0x8828

	)

1322 
	#GL_DRAW_BUFFER4_ARB
 0x8829

	)

1323 
	#GL_DRAW_BUFFER5_ARB
 0x882A

	)

1324 
	#GL_DRAW_BUFFER6_ARB
 0x882B

	)

1325 
	#GL_DRAW_BUFFER7_ARB
 0x882C

	)

1326 
	#GL_DRAW_BUFFER8_ARB
 0x882D

	)

1327 
	#GL_DRAW_BUFFER9_ARB
 0x882E

	)

1328 
	#GL_DRAW_BUFFER10_ARB
 0x882F

	)

1329 
	#GL_DRAW_BUFFER11_ARB
 0x8830

	)

1330 
	#GL_DRAW_BUFFER12_ARB
 0x8831

	)

1331 
	#GL_DRAW_BUFFER13_ARB
 0x8832

	)

1332 
	#GL_DRAW_BUFFER14_ARB
 0x8833

	)

1333 
	#GL_DRAW_BUFFER15_ARB
 0x8834

	)

1336 #i‚de‡
GL_ARB_ãxtuª_ª˘™gÀ


1337 
	#GL_TEXTURE_RECTANGLE_ARB
 0x84F5

	)

1338 
	#GL_TEXTURE_BINDING_RECTANGLE_ARB
 0x84F6

	)

1339 
	#GL_PROXY_TEXTURE_RECTANGLE_ARB
 0x84F7

	)

1340 
	#GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB
 0x84F8

	)

1343 #i‚de‡
GL_ARB_cﬁ‹_buf„r_Êﬂt


1344 
	#GL_RGBA_FLOAT_MODE_ARB
 0x8820

	)

1345 
	#GL_CLAMP_VERTEX_COLOR_ARB
 0x891A

	)

1346 
	#GL_CLAMP_FRAGMENT_COLOR_ARB
 0x891B

	)

1347 
	#GL_CLAMP_READ_COLOR_ARB
 0x891C

	)

1348 
	#GL_FIXED_ONLY_ARB
 0x891D

	)

1351 #i‚de‡
GL_ARB_hÆf_Êﬂt_pixñ


1352 
	#GL_HALF_FLOAT_ARB
 0x140B

	)

1355 #i‚de‡
GL_ARB_ãxtuª_Êﬂt


1356 
	#GL_TEXTURE_RED_TYPE_ARB
 0x8C10

	)

1357 
	#GL_TEXTURE_GREEN_TYPE_ARB
 0x8C11

	)

1358 
	#GL_TEXTURE_BLUE_TYPE_ARB
 0x8C12

	)

1359 
	#GL_TEXTURE_ALPHA_TYPE_ARB
 0x8C13

	)

1360 
	#GL_TEXTURE_LUMINANCE_TYPE_ARB
 0x8C14

	)

1361 
	#GL_TEXTURE_INTENSITY_TYPE_ARB
 0x8C15

	)

1362 
	#GL_TEXTURE_DEPTH_TYPE_ARB
 0x8C16

	)

1363 
	#GL_UNSIGNED_NORMALIZED_ARB
 0x8C17

	)

1364 
	#GL_RGBA32F_ARB
 0x8814

	)

1365 
	#GL_RGB32F_ARB
 0x8815

	)

1366 
	#GL_ALPHA32F_ARB
 0x8816

	)

1367 
	#GL_INTENSITY32F_ARB
 0x8817

	)

1368 
	#GL_LUMINANCE32F_ARB
 0x8818

	)

1369 
	#GL_LUMINANCE_ALPHA32F_ARB
 0x8819

	)

1370 
	#GL_RGBA16F_ARB
 0x881A

	)

1371 
	#GL_RGB16F_ARB
 0x881B

	)

1372 
	#GL_ALPHA16F_ARB
 0x881C

	)

1373 
	#GL_INTENSITY16F_ARB
 0x881D

	)

1374 
	#GL_LUMINANCE16F_ARB
 0x881E

	)

1375 
	#GL_LUMINANCE_ALPHA16F_ARB
 0x881F

	)

1378 #i‚de‡
GL_ARB_pixñ_buf„r_obje˘


1379 
	#GL_PIXEL_PACK_BUFFER_ARB
 0x88EB

	)

1380 
	#GL_PIXEL_UNPACK_BUFFER_ARB
 0x88EC

	)

1381 
	#GL_PIXEL_PACK_BUFFER_BINDING_ARB
 0x88ED

	)

1382 
	#GL_PIXEL_UNPACK_BUFFER_BINDING_ARB
 0x88EF

	)

1385 #i‚de‡
GL_ARB_dïth_buf„r_Êﬂt


1386 
	#GL_DEPTH_COMPONENT32F
 0x8CAC

	)

1387 
	#GL_DEPTH32F_STENCIL8
 0x8CAD

	)

1388 
	#GL_FLOAT_32_UNSIGNED_INT_24_8_REV
 0x8DAD

	)

1391 #i‚de‡
GL_ARB_døw_ö°™˚d


1394 #i‚de‡
GL_ARB_‰amebuf„r_obje˘


1395 
	#GL_INVALID_FRAMEBUFFER_OPERATION
 0x0506

	)

1396 
	#GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
 0x8210

	)

1397 
	#GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
 0x8211

	)

1398 
	#GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
 0x8212

	)

1399 
	#GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
 0x8213

	)

1400 
	#GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
 0x8214

	)

1401 
	#GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
 0x8215

	)

1402 
	#GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
 0x8216

	)

1403 
	#GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
 0x8217

	)

1404 
	#GL_FRAMEBUFFER_DEFAULT
 0x8218

	)

1405 
	#GL_FRAMEBUFFER_UNDEFINED
 0x8219

	)

1406 
	#GL_DEPTH_STENCIL_ATTACHMENT
 0x821A

	)

1407 
	#GL_MAX_RENDERBUFFER_SIZE
 0x84E8

	)

1408 
	#GL_DEPTH_STENCIL
 0x84F9

	)

1409 
	#GL_UNSIGNED_INT_24_8
 0x84FA

	)

1410 
	#GL_DEPTH24_STENCIL8
 0x88F0

	)

1411 
	#GL_TEXTURE_STENCIL_SIZE
 0x88F1

	)

1412 
	#GL_TEXTURE_RED_TYPE
 0x8C10

	)

1413 
	#GL_TEXTURE_GREEN_TYPE
 0x8C11

	)

1414 
	#GL_TEXTURE_BLUE_TYPE
 0x8C12

	)

1415 
	#GL_TEXTURE_ALPHA_TYPE
 0x8C13

	)

1416 
	#GL_TEXTURE_DEPTH_TYPE
 0x8C16

	)

1417 
	#GL_UNSIGNED_NORMALIZED
 0x8C17

	)

1418 
	#GL_FRAMEBUFFER_BINDING
 0x8CA6

	)

1419 
	#GL_DRAW_FRAMEBUFFER_BINDING
 
GL_FRAMEBUFFER_BINDING


	)

1420 
	#GL_RENDERBUFFER_BINDING
 0x8CA7

	)

1421 
	#GL_READ_FRAMEBUFFER
 0x8CA8

	)

1422 
	#GL_DRAW_FRAMEBUFFER
 0x8CA9

	)

1423 
	#GL_READ_FRAMEBUFFER_BINDING
 0x8CAA

	)

1424 
	#GL_RENDERBUFFER_SAMPLES
 0x8CAB

	)

1425 
	#GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
 0x8CD0

	)

1426 
	#GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
 0x8CD1

	)

1427 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
 0x8CD2

	)

1428 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
 0x8CD3

	)

1429 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
 0x8CD4

	)

1430 
	#GL_FRAMEBUFFER_COMPLETE
 0x8CD5

	)

1431 
	#GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
 0x8CD6

	)

1432 
	#GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
 0x8CD7

	)

1433 
	#GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
 0x8CDB

	)

1434 
	#GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
 0x8CDC

	)

1435 
	#GL_FRAMEBUFFER_UNSUPPORTED
 0x8CDD

	)

1436 
	#GL_MAX_COLOR_ATTACHMENTS
 0x8CDF

	)

1437 
	#GL_COLOR_ATTACHMENT0
 0x8CE0

	)

1438 
	#GL_COLOR_ATTACHMENT1
 0x8CE1

	)

1439 
	#GL_COLOR_ATTACHMENT2
 0x8CE2

	)

1440 
	#GL_COLOR_ATTACHMENT3
 0x8CE3

	)

1441 
	#GL_COLOR_ATTACHMENT4
 0x8CE4

	)

1442 
	#GL_COLOR_ATTACHMENT5
 0x8CE5

	)

1443 
	#GL_COLOR_ATTACHMENT6
 0x8CE6

	)

1444 
	#GL_COLOR_ATTACHMENT7
 0x8CE7

	)

1445 
	#GL_COLOR_ATTACHMENT8
 0x8CE8

	)

1446 
	#GL_COLOR_ATTACHMENT9
 0x8CE9

	)

1447 
	#GL_COLOR_ATTACHMENT10
 0x8CEA

	)

1448 
	#GL_COLOR_ATTACHMENT11
 0x8CEB

	)

1449 
	#GL_COLOR_ATTACHMENT12
 0x8CEC

	)

1450 
	#GL_COLOR_ATTACHMENT13
 0x8CED

	)

1451 
	#GL_COLOR_ATTACHMENT14
 0x8CEE

	)

1452 
	#GL_COLOR_ATTACHMENT15
 0x8CEF

	)

1453 
	#GL_DEPTH_ATTACHMENT
 0x8D00

	)

1454 
	#GL_STENCIL_ATTACHMENT
 0x8D20

	)

1455 
	#GL_FRAMEBUFFER
 0x8D40

	)

1456 
	#GL_RENDERBUFFER
 0x8D41

	)

1457 
	#GL_RENDERBUFFER_WIDTH
 0x8D42

	)

1458 
	#GL_RENDERBUFFER_HEIGHT
 0x8D43

	)

1459 
	#GL_RENDERBUFFER_INTERNAL_FORMAT
 0x8D44

	)

1460 
	#GL_STENCIL_INDEX1
 0x8D46

	)

1461 
	#GL_STENCIL_INDEX4
 0x8D47

	)

1462 
	#GL_STENCIL_INDEX8
 0x8D48

	)

1463 
	#GL_STENCIL_INDEX16
 0x8D49

	)

1464 
	#GL_RENDERBUFFER_RED_SIZE
 0x8D50

	)

1465 
	#GL_RENDERBUFFER_GREEN_SIZE
 0x8D51

	)

1466 
	#GL_RENDERBUFFER_BLUE_SIZE
 0x8D52

	)

1467 
	#GL_RENDERBUFFER_ALPHA_SIZE
 0x8D53

	)

1468 
	#GL_RENDERBUFFER_DEPTH_SIZE
 0x8D54

	)

1469 
	#GL_RENDERBUFFER_STENCIL_SIZE
 0x8D55

	)

1470 
	#GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
 0x8D56

	)

1471 
	#GL_MAX_SAMPLES
 0x8D57

	)

1474 #i‚de‡
GL_ARB_‰amebuf„r_obje˘_DEPRECATED


1475 
	#GL_INDEX
 0x8222

	)

1476 
	#GL_TEXTURE_LUMINANCE_TYPE
 0x8C14

	)

1477 
	#GL_TEXTURE_INTENSITY_TYPE
 0x8C15

	)

1480 #i‚de‡
GL_ARB_‰amebuf„r_sRGB


1481 
	#GL_FRAMEBUFFER_SRGB
 0x8DB9

	)

1484 #i‚de‡
GL_ARB_geomëry_shadî4


1485 
	#GL_LINES_ADJACENCY_ARB
 0x000A

	)

1486 
	#GL_LINE_STRIP_ADJACENCY_ARB
 0x000B

	)

1487 
	#GL_TRIANGLES_ADJACENCY_ARB
 0x000C

	)

1488 
	#GL_TRIANGLE_STRIP_ADJACENCY_ARB
 0x000D

	)

1489 
	#GL_PROGRAM_POINT_SIZE_ARB
 0x8642

	)

1490 
	#GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
 0x8C29

	)

1491 
	#GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
 0x8DA7

	)

1492 
	#GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
 0x8DA8

	)

1493 
	#GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
 0x8DA9

	)

1494 
	#GL_GEOMETRY_SHADER_ARB
 0x8DD9

	)

1495 
	#GL_GEOMETRY_VERTICES_OUT_ARB
 0x8DDA

	)

1496 
	#GL_GEOMETRY_INPUT_TYPE_ARB
 0x8DDB

	)

1497 
	#GL_GEOMETRY_OUTPUT_TYPE_ARB
 0x8DDC

	)

1498 
	#GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
 0x8DDD

	)

1499 
	#GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
 0x8DDE

	)

1500 
	#GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
 0x8DDF

	)

1501 
	#GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
 0x8DE0

	)

1502 
	#GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
 0x8DE1

	)

1507 #i‚de‡
GL_ARB_hÆf_Êﬂt_vîãx


1508 
	#GL_HALF_FLOAT
 0x140B

	)

1511 #i‚de‡
GL_ARB_ö°™˚d_¨øys


1512 
	#GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB
 0x88FE

	)

1515 #i‚de‡
GL_ARB_m≠_buf„r_ønge


1516 
	#GL_MAP_READ_BIT
 0x0001

	)

1517 
	#GL_MAP_WRITE_BIT
 0x0002

	)

1518 
	#GL_MAP_INVALIDATE_RANGE_BIT
 0x0004

	)

1519 
	#GL_MAP_INVALIDATE_BUFFER_BIT
 0x0008

	)

1520 
	#GL_MAP_FLUSH_EXPLICIT_BIT
 0x0010

	)

1521 
	#GL_MAP_UNSYNCHRONIZED_BIT
 0x0020

	)

1524 #i‚de‡
GL_ARB_ãxtuª_buf„r_obje˘


1525 
	#GL_TEXTURE_BUFFER_ARB
 0x8C2A

	)

1526 
	#GL_MAX_TEXTURE_BUFFER_SIZE_ARB
 0x8C2B

	)

1527 
	#GL_TEXTURE_BINDING_BUFFER_ARB
 0x8C2C

	)

1528 
	#GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB
 0x8C2D

	)

1529 
	#GL_TEXTURE_BUFFER_FORMAT_ARB
 0x8C2E

	)

1532 #i‚de‡
GL_ARB_ãxtuª_com¥essi⁄_rgtc


1533 
	#GL_COMPRESSED_RED_RGTC1
 0x8DBB

	)

1534 
	#GL_COMPRESSED_SIGNED_RED_RGTC1
 0x8DBC

	)

1535 
	#GL_COMPRESSED_RG_RGTC2
 0x8DBD

	)

1536 
	#GL_COMPRESSED_SIGNED_RG_RGTC2
 0x8DBE

	)

1539 #i‚de‡
GL_ARB_ãxtuª_rg


1540 
	#GL_RG
 0x8227

	)

1541 
	#GL_RG_INTEGER
 0x8228

	)

1542 
	#GL_R8
 0x8229

	)

1543 
	#GL_R16
 0x822A

	)

1544 
	#GL_RG8
 0x822B

	)

1545 
	#GL_RG16
 0x822C

	)

1546 
	#GL_R16F
 0x822D

	)

1547 
	#GL_R32F
 0x822E

	)

1548 
	#GL_RG16F
 0x822F

	)

1549 
	#GL_RG32F
 0x8230

	)

1550 
	#GL_R8I
 0x8231

	)

1551 
	#GL_R8UI
 0x8232

	)

1552 
	#GL_R16I
 0x8233

	)

1553 
	#GL_R16UI
 0x8234

	)

1554 
	#GL_R32I
 0x8235

	)

1555 
	#GL_R32UI
 0x8236

	)

1556 
	#GL_RG8I
 0x8237

	)

1557 
	#GL_RG8UI
 0x8238

	)

1558 
	#GL_RG16I
 0x8239

	)

1559 
	#GL_RG16UI
 0x823A

	)

1560 
	#GL_RG32I
 0x823B

	)

1561 
	#GL_RG32UI
 0x823C

	)

1564 #i‚de‡
GL_ARB_vîãx_¨øy_obje˘


1565 
	#GL_VERTEX_ARRAY_BINDING
 0x85B5

	)

1568 #i‚de‡
GL_ARB_unif‹m_buf„r_obje˘


1569 
	#GL_UNIFORM_BUFFER
 0x8A11

	)

1570 
	#GL_UNIFORM_BUFFER_BINDING
 0x8A28

	)

1571 
	#GL_UNIFORM_BUFFER_START
 0x8A29

	)

1572 
	#GL_UNIFORM_BUFFER_SIZE
 0x8A2A

	)

1573 
	#GL_MAX_VERTEX_UNIFORM_BLOCKS
 0x8A2B

	)

1574 
	#GL_MAX_GEOMETRY_UNIFORM_BLOCKS
 0x8A2C

	)

1575 
	#GL_MAX_FRAGMENT_UNIFORM_BLOCKS
 0x8A2D

	)

1576 
	#GL_MAX_COMBINED_UNIFORM_BLOCKS
 0x8A2E

	)

1577 
	#GL_MAX_UNIFORM_BUFFER_BINDINGS
 0x8A2F

	)

1578 
	#GL_MAX_UNIFORM_BLOCK_SIZE
 0x8A30

	)

1579 
	#GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
 0x8A31

	)

1580 
	#GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS
 0x8A32

	)

1581 
	#GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
 0x8A33

	)

1582 
	#GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
 0x8A34

	)

1583 
	#GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
 0x8A35

	)

1584 
	#GL_ACTIVE_UNIFORM_BLOCKS
 0x8A36

	)

1585 
	#GL_UNIFORM_TYPE
 0x8A37

	)

1586 
	#GL_UNIFORM_SIZE
 0x8A38

	)

1587 
	#GL_UNIFORM_NAME_LENGTH
 0x8A39

	)

1588 
	#GL_UNIFORM_BLOCK_INDEX
 0x8A3A

	)

1589 
	#GL_UNIFORM_OFFSET
 0x8A3B

	)

1590 
	#GL_UNIFORM_ARRAY_STRIDE
 0x8A3C

	)

1591 
	#GL_UNIFORM_MATRIX_STRIDE
 0x8A3D

	)

1592 
	#GL_UNIFORM_IS_ROW_MAJOR
 0x8A3E

	)

1593 
	#GL_UNIFORM_BLOCK_BINDING
 0x8A3F

	)

1594 
	#GL_UNIFORM_BLOCK_DATA_SIZE
 0x8A40

	)

1595 
	#GL_UNIFORM_BLOCK_NAME_LENGTH
 0x8A41

	)

1596 
	#GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
 0x8A42

	)

1597 
	#GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
 0x8A43

	)

1598 
	#GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
 0x8A44

	)

1599 
	#GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER
 0x8A45

	)

1600 
	#GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
 0x8A46

	)

1601 
	#GL_INVALID_INDEX
 0xFFFFFFFFu

	)

1604 #i‚de‡
GL_ARB_com∑tibûôy


1608 #i‚de‡
GL_ARB_c›y_buf„r


1609 
	#GL_COPY_READ_BUFFER
 0x8F36

	)

1610 
	#GL_COPY_WRITE_BUFFER
 0x8F37

	)

1613 #i‚de‡
GL_ARB_shadî_ãxtuª_lod


1616 #i‚de‡
GL_ARB_dïth_˛amp


1617 
	#GL_DEPTH_CLAMP
 0x864F

	)

1620 #i‚de‡
GL_ARB_døw_ñemíts_ba£_vîãx


1623 #i‚de‡
GL_ARB_‰agmít_co‹d_c⁄víti⁄s


1626 #i‚de‡
GL_ARB_¥ovokög_vîãx


1627 
	#GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION
 0x8E4C

	)

1628 
	#GL_FIRST_VERTEX_CONVENTION
 0x8E4D

	)

1629 
	#GL_LAST_VERTEX_CONVENTION
 0x8E4E

	)

1630 
	#GL_PROVOKING_VERTEX
 0x8E4F

	)

1633 #i‚de‡
GL_ARB_£amÀss_cube_m≠


1634 
	#GL_TEXTURE_CUBE_MAP_SEAMLESS
 0x884F

	)

1637 #i‚de‡
GL_ARB_sync


1638 
	#GL_MAX_SERVER_WAIT_TIMEOUT
 0x9111

	)

1639 
	#GL_OBJECT_TYPE
 0x9112

	)

1640 
	#GL_SYNC_CONDITION
 0x9113

	)

1641 
	#GL_SYNC_STATUS
 0x9114

	)

1642 
	#GL_SYNC_FLAGS
 0x9115

	)

1643 
	#GL_SYNC_FENCE
 0x9116

	)

1644 
	#GL_SYNC_GPU_COMMANDS_COMPLETE
 0x9117

	)

1645 
	#GL_UNSIGNALED
 0x9118

	)

1646 
	#GL_SIGNALED
 0x9119

	)

1647 
	#GL_ALREADY_SIGNALED
 0x911A

	)

1648 
	#GL_TIMEOUT_EXPIRED
 0x911B

	)

1649 
	#GL_CONDITION_SATISFIED
 0x911C

	)

1650 
	#GL_WAIT_FAILED
 0x911D

	)

1651 
	#GL_SYNC_FLUSH_COMMANDS_BIT
 0x00000001

	)

1652 
	#GL_TIMEOUT_IGNORED
 0xFFFFFFFFFFFFFFFFuŒ

	)

1655 #i‚de‡
GL_ARB_ãxtuª_mu…ißm∂e


1656 
	#GL_SAMPLE_POSITION
 0x8E50

	)

1657 
	#GL_SAMPLE_MASK
 0x8E51

	)

1658 
	#GL_SAMPLE_MASK_VALUE
 0x8E52

	)

1659 
	#GL_MAX_SAMPLE_MASK_WORDS
 0x8E59

	)

1660 
	#GL_TEXTURE_2D_MULTISAMPLE
 0x9100

	)

1661 
	#GL_PROXY_TEXTURE_2D_MULTISAMPLE
 0x9101

	)

1662 
	#GL_TEXTURE_2D_MULTISAMPLE_ARRAY
 0x9102

	)

1663 
	#GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY
 0x9103

	)

1664 
	#GL_TEXTURE_BINDING_2D_MULTISAMPLE
 0x9104

	)

1665 
	#GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY
 0x9105

	)

1666 
	#GL_TEXTURE_SAMPLES
 0x9106

	)

1667 
	#GL_TEXTURE_FIXED_SAMPLE_LOCATIONS
 0x9107

	)

1668 
	#GL_SAMPLER_2D_MULTISAMPLE
 0x9108

	)

1669 
	#GL_INT_SAMPLER_2D_MULTISAMPLE
 0x9109

	)

1670 
	#GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE
 0x910A

	)

1671 
	#GL_SAMPLER_2D_MULTISAMPLE_ARRAY
 0x910B

	)

1672 
	#GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
 0x910C

	)

1673 
	#GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
 0x910D

	)

1674 
	#GL_MAX_COLOR_TEXTURE_SAMPLES
 0x910E

	)

1675 
	#GL_MAX_DEPTH_TEXTURE_SAMPLES
 0x910F

	)

1676 
	#GL_MAX_INTEGER_SAMPLES
 0x9110

	)

1679 #i‚de‡
GL_ARB_vîãx_¨øy_bgø


1683 #i‚de‡
GL_ARB_døw_buf„rs_bÀnd


1686 #i‚de‡
GL_ARB_ßm∂e_shadög


1687 
	#GL_SAMPLE_SHADING
 0x8C36

	)

1688 
	#GL_MIN_SAMPLE_SHADING_VALUE
 0x8C37

	)

1691 #i‚de‡
GL_ARB_ãxtuª_cube_m≠_¨øy


1692 
	#GL_TEXTURE_CUBE_MAP_ARRAY
 0x9009

	)

1693 
	#GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
 0x900A

	)

1694 
	#GL_PROXY_TEXTURE_CUBE_MAP_ARRAY
 0x900B

	)

1695 
	#GL_SAMPLER_CUBE_MAP_ARRAY
 0x900C

	)

1696 
	#GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW
 0x900D

	)

1697 
	#GL_INT_SAMPLER_CUBE_MAP_ARRAY
 0x900E

	)

1698 
	#GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY
 0x900F

	)

1701 #i‚de‡
GL_ARB_ãxtuª_g©hî


1702 
	#GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
 0x8E5E

	)

1703 
	#GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
 0x8E5F

	)

1704 
	#GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS
 0x8F9F

	)

1707 #i‚de‡
GL_ARB_ãxtuª_quîy_lod


1710 #i‚de‡
GL_EXT_abgr


1711 
	#GL_ABGR_EXT
 0x8000

	)

1714 #i‚de‡
GL_EXT_bÀnd_cﬁ‹


1715 
	#GL_CONSTANT_COLOR_EXT
 0x8001

	)

1716 
	#GL_ONE_MINUS_CONSTANT_COLOR_EXT
 0x8002

	)

1717 
	#GL_CONSTANT_ALPHA_EXT
 0x8003

	)

1718 
	#GL_ONE_MINUS_CONSTANT_ALPHA_EXT
 0x8004

	)

1719 
	#GL_BLEND_COLOR_EXT
 0x8005

	)

1722 #i‚de‡
GL_EXT_pﬁyg⁄_off£t


1723 
	#GL_POLYGON_OFFSET_EXT
 0x8037

	)

1724 
	#GL_POLYGON_OFFSET_FACTOR_EXT
 0x8038

	)

1725 
	#GL_POLYGON_OFFSET_BIAS_EXT
 0x8039

	)

1728 #i‚de‡
GL_EXT_ãxtuª


1729 
	#GL_ALPHA4_EXT
 0x803B

	)

1730 
	#GL_ALPHA8_EXT
 0x803C

	)

1731 
	#GL_ALPHA12_EXT
 0x803D

	)

1732 
	#GL_ALPHA16_EXT
 0x803E

	)

1733 
	#GL_LUMINANCE4_EXT
 0x803F

	)

1734 
	#GL_LUMINANCE8_EXT
 0x8040

	)

1735 
	#GL_LUMINANCE12_EXT
 0x8041

	)

1736 
	#GL_LUMINANCE16_EXT
 0x8042

	)

1737 
	#GL_LUMINANCE4_ALPHA4_EXT
 0x8043

	)

1738 
	#GL_LUMINANCE6_ALPHA2_EXT
 0x8044

	)

1739 
	#GL_LUMINANCE8_ALPHA8_EXT
 0x8045

	)

1740 
	#GL_LUMINANCE12_ALPHA4_EXT
 0x8046

	)

1741 
	#GL_LUMINANCE12_ALPHA12_EXT
 0x8047

	)

1742 
	#GL_LUMINANCE16_ALPHA16_EXT
 0x8048

	)

1743 
	#GL_INTENSITY_EXT
 0x8049

	)

1744 
	#GL_INTENSITY4_EXT
 0x804A

	)

1745 
	#GL_INTENSITY8_EXT
 0x804B

	)

1746 
	#GL_INTENSITY12_EXT
 0x804C

	)

1747 
	#GL_INTENSITY16_EXT
 0x804D

	)

1748 
	#GL_RGB2_EXT
 0x804E

	)

1749 
	#GL_RGB4_EXT
 0x804F

	)

1750 
	#GL_RGB5_EXT
 0x8050

	)

1751 
	#GL_RGB8_EXT
 0x8051

	)

1752 
	#GL_RGB10_EXT
 0x8052

	)

1753 
	#GL_RGB12_EXT
 0x8053

	)

1754 
	#GL_RGB16_EXT
 0x8054

	)

1755 
	#GL_RGBA2_EXT
 0x8055

	)

1756 
	#GL_RGBA4_EXT
 0x8056

	)

1757 
	#GL_RGB5_A1_EXT
 0x8057

	)

1758 
	#GL_RGBA8_EXT
 0x8058

	)

1759 
	#GL_RGB10_A2_EXT
 0x8059

	)

1760 
	#GL_RGBA12_EXT
 0x805A

	)

1761 
	#GL_RGBA16_EXT
 0x805B

	)

1762 
	#GL_TEXTURE_RED_SIZE_EXT
 0x805C

	)

1763 
	#GL_TEXTURE_GREEN_SIZE_EXT
 0x805D

	)

1764 
	#GL_TEXTURE_BLUE_SIZE_EXT
 0x805E

	)

1765 
	#GL_TEXTURE_ALPHA_SIZE_EXT
 0x805F

	)

1766 
	#GL_TEXTURE_LUMINANCE_SIZE_EXT
 0x8060

	)

1767 
	#GL_TEXTURE_INTENSITY_SIZE_EXT
 0x8061

	)

1768 
	#GL_REPLACE_EXT
 0x8062

	)

1769 
	#GL_PROXY_TEXTURE_1D_EXT
 0x8063

	)

1770 
	#GL_PROXY_TEXTURE_2D_EXT
 0x8064

	)

1771 
	#GL_TEXTURE_TOO_LARGE_EXT
 0x8065

	)

1774 #i‚de‡
GL_EXT_ãxtuª3D


1775 
	#GL_PACK_SKIP_IMAGES_EXT
 0x806B

	)

1776 
	#GL_PACK_IMAGE_HEIGHT_EXT
 0x806C

	)

1777 
	#GL_UNPACK_SKIP_IMAGES_EXT
 0x806D

	)

1778 
	#GL_UNPACK_IMAGE_HEIGHT_EXT
 0x806E

	)

1779 
	#GL_TEXTURE_3D_EXT
 0x806F

	)

1780 
	#GL_PROXY_TEXTURE_3D_EXT
 0x8070

	)

1781 
	#GL_TEXTURE_DEPTH_EXT
 0x8071

	)

1782 
	#GL_TEXTURE_WRAP_R_EXT
 0x8072

	)

1783 
	#GL_MAX_3D_TEXTURE_SIZE_EXT
 0x8073

	)

1786 #i‚de‡
GL_SGIS_ãxtuª_fûãr4


1787 
	#GL_FILTER4_SGIS
 0x8146

	)

1788 
	#GL_TEXTURE_FILTER4_SIZE_SGIS
 0x8147

	)

1791 #i‚de‡
GL_EXT_subãxtuª


1794 #i‚de‡
GL_EXT_c›y_ãxtuª


1797 #i‚de‡
GL_EXT_hi°ogøm


1798 
	#GL_HISTOGRAM_EXT
 0x8024

	)

1799 
	#GL_PROXY_HISTOGRAM_EXT
 0x8025

	)

1800 
	#GL_HISTOGRAM_WIDTH_EXT
 0x8026

	)

1801 
	#GL_HISTOGRAM_FORMAT_EXT
 0x8027

	)

1802 
	#GL_HISTOGRAM_RED_SIZE_EXT
 0x8028

	)

1803 
	#GL_HISTOGRAM_GREEN_SIZE_EXT
 0x8029

	)

1804 
	#GL_HISTOGRAM_BLUE_SIZE_EXT
 0x802A

	)

1805 
	#GL_HISTOGRAM_ALPHA_SIZE_EXT
 0x802B

	)

1806 
	#GL_HISTOGRAM_LUMINANCE_SIZE_EXT
 0x802C

	)

1807 
	#GL_HISTOGRAM_SINK_EXT
 0x802D

	)

1808 
	#GL_MINMAX_EXT
 0x802E

	)

1809 
	#GL_MINMAX_FORMAT_EXT
 0x802F

	)

1810 
	#GL_MINMAX_SINK_EXT
 0x8030

	)

1811 
	#GL_TABLE_TOO_LARGE_EXT
 0x8031

	)

1814 #i‚de‡
GL_EXT_c⁄vﬁuti⁄


1815 
	#GL_CONVOLUTION_1D_EXT
 0x8010

	)

1816 
	#GL_CONVOLUTION_2D_EXT
 0x8011

	)

1817 
	#GL_SEPARABLE_2D_EXT
 0x8012

	)

1818 
	#GL_CONVOLUTION_BORDER_MODE_EXT
 0x8013

	)

1819 
	#GL_CONVOLUTION_FILTER_SCALE_EXT
 0x8014

	)

1820 
	#GL_CONVOLUTION_FILTER_BIAS_EXT
 0x8015

	)

1821 
	#GL_REDUCE_EXT
 0x8016

	)

1822 
	#GL_CONVOLUTION_FORMAT_EXT
 0x8017

	)

1823 
	#GL_CONVOLUTION_WIDTH_EXT
 0x8018

	)

1824 
	#GL_CONVOLUTION_HEIGHT_EXT
 0x8019

	)

1825 
	#GL_MAX_CONVOLUTION_WIDTH_EXT
 0x801A

	)

1826 
	#GL_MAX_CONVOLUTION_HEIGHT_EXT
 0x801B

	)

1827 
	#GL_POST_CONVOLUTION_RED_SCALE_EXT
 0x801C

	)

1828 
	#GL_POST_CONVOLUTION_GREEN_SCALE_EXT
 0x801D

	)

1829 
	#GL_POST_CONVOLUTION_BLUE_SCALE_EXT
 0x801E

	)

1830 
	#GL_POST_CONVOLUTION_ALPHA_SCALE_EXT
 0x801F

	)

1831 
	#GL_POST_CONVOLUTION_RED_BIAS_EXT
 0x8020

	)

1832 
	#GL_POST_CONVOLUTION_GREEN_BIAS_EXT
 0x8021

	)

1833 
	#GL_POST_CONVOLUTION_BLUE_BIAS_EXT
 0x8022

	)

1834 
	#GL_POST_CONVOLUTION_ALPHA_BIAS_EXT
 0x8023

	)

1837 #i‚de‡
GL_SGI_cﬁ‹_m©rix


1838 
	#GL_COLOR_MATRIX_SGI
 0x80B1

	)

1839 
	#GL_COLOR_MATRIX_STACK_DEPTH_SGI
 0x80B2

	)

1840 
	#GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI
 0x80B3

	)

1841 
	#GL_POST_COLOR_MATRIX_RED_SCALE_SGI
 0x80B4

	)

1842 
	#GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI
 0x80B5

	)

1843 
	#GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI
 0x80B6

	)

1844 
	#GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI
 0x80B7

	)

1845 
	#GL_POST_COLOR_MATRIX_RED_BIAS_SGI
 0x80B8

	)

1846 
	#GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI
 0x80B9

	)

1847 
	#GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI
 0x80BA

	)

1848 
	#GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI
 0x80BB

	)

1851 #i‚de‡
GL_SGI_cﬁ‹_èbÀ


1852 
	#GL_COLOR_TABLE_SGI
 0x80D0

	)

1853 
	#GL_POST_CONVOLUTION_COLOR_TABLE_SGI
 0x80D1

	)

1854 
	#GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI
 0x80D2

	)

1855 
	#GL_PROXY_COLOR_TABLE_SGI
 0x80D3

	)

1856 
	#GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI
 0x80D4

	)

1857 
	#GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI
 0x80D5

	)

1858 
	#GL_COLOR_TABLE_SCALE_SGI
 0x80D6

	)

1859 
	#GL_COLOR_TABLE_BIAS_SGI
 0x80D7

	)

1860 
	#GL_COLOR_TABLE_FORMAT_SGI
 0x80D8

	)

1861 
	#GL_COLOR_TABLE_WIDTH_SGI
 0x80D9

	)

1862 
	#GL_COLOR_TABLE_RED_SIZE_SGI
 0x80DA

	)

1863 
	#GL_COLOR_TABLE_GREEN_SIZE_SGI
 0x80DB

	)

1864 
	#GL_COLOR_TABLE_BLUE_SIZE_SGI
 0x80DC

	)

1865 
	#GL_COLOR_TABLE_ALPHA_SIZE_SGI
 0x80DD

	)

1866 
	#GL_COLOR_TABLE_LUMINANCE_SIZE_SGI
 0x80DE

	)

1867 
	#GL_COLOR_TABLE_INTENSITY_SIZE_SGI
 0x80DF

	)

1870 #i‚de‡
GL_SGIS_pixñ_ãxtuª


1871 
	#GL_PIXEL_TEXTURE_SGIS
 0x8353

	)

1872 
	#GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS
 0x8354

	)

1873 
	#GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS
 0x8355

	)

1874 
	#GL_PIXEL_GROUP_COLOR_SGIS
 0x8356

	)

1877 #i‚de‡
GL_SGIX_pixñ_ãxtuª


1878 
	#GL_PIXEL_TEX_GEN_SGIX
 0x8139

	)

1879 
	#GL_PIXEL_TEX_GEN_MODE_SGIX
 0x832B

	)

1882 #i‚de‡
GL_SGIS_ãxtuª4D


1883 
	#GL_PACK_SKIP_VOLUMES_SGIS
 0x8130

	)

1884 
	#GL_PACK_IMAGE_DEPTH_SGIS
 0x8131

	)

1885 
	#GL_UNPACK_SKIP_VOLUMES_SGIS
 0x8132

	)

1886 
	#GL_UNPACK_IMAGE_DEPTH_SGIS
 0x8133

	)

1887 
	#GL_TEXTURE_4D_SGIS
 0x8134

	)

1888 
	#GL_PROXY_TEXTURE_4D_SGIS
 0x8135

	)

1889 
	#GL_TEXTURE_4DSIZE_SGIS
 0x8136

	)

1890 
	#GL_TEXTURE_WRAP_Q_SGIS
 0x8137

	)

1891 
	#GL_MAX_4D_TEXTURE_SIZE_SGIS
 0x8138

	)

1892 
	#GL_TEXTURE_4D_BINDING_SGIS
 0x814F

	)

1895 #i‚de‡
GL_SGI_ãxtuª_cﬁ‹_èbÀ


1896 
	#GL_TEXTURE_COLOR_TABLE_SGI
 0x80BC

	)

1897 
	#GL_PROXY_TEXTURE_COLOR_TABLE_SGI
 0x80BD

	)

1900 #i‚de‡
GL_EXT_cmyka


1901 
	#GL_CMYK_EXT
 0x800C

	)

1902 
	#GL_CMYKA_EXT
 0x800D

	)

1903 
	#GL_PACK_CMYK_HINT_EXT
 0x800E

	)

1904 
	#GL_UNPACK_CMYK_HINT_EXT
 0x800F

	)

1907 #i‚de‡
GL_EXT_ãxtuª_obje˘


1908 
	#GL_TEXTURE_PRIORITY_EXT
 0x8066

	)

1909 
	#GL_TEXTURE_RESIDENT_EXT
 0x8067

	)

1910 
	#GL_TEXTURE_1D_BINDING_EXT
 0x8068

	)

1911 
	#GL_TEXTURE_2D_BINDING_EXT
 0x8069

	)

1912 
	#GL_TEXTURE_3D_BINDING_EXT
 0x806A

	)

1915 #i‚de‡
GL_SGIS_dëaû_ãxtuª


1916 
	#GL_DETAIL_TEXTURE_2D_SGIS
 0x8095

	)

1917 
	#GL_DETAIL_TEXTURE_2D_BINDING_SGIS
 0x8096

	)

1918 
	#GL_LINEAR_DETAIL_SGIS
 0x8097

	)

1919 
	#GL_LINEAR_DETAIL_ALPHA_SGIS
 0x8098

	)

1920 
	#GL_LINEAR_DETAIL_COLOR_SGIS
 0x8099

	)

1921 
	#GL_DETAIL_TEXTURE_LEVEL_SGIS
 0x809A

	)

1922 
	#GL_DETAIL_TEXTURE_MODE_SGIS
 0x809B

	)

1923 
	#GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS
 0x809C

	)

1926 #i‚de‡
GL_SGIS_sh¨≥n_ãxtuª


1927 
	#GL_LINEAR_SHARPEN_SGIS
 0x80AD

	)

1928 
	#GL_LINEAR_SHARPEN_ALPHA_SGIS
 0x80AE

	)

1929 
	#GL_LINEAR_SHARPEN_COLOR_SGIS
 0x80AF

	)

1930 
	#GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS
 0x80B0

	)

1933 #i‚de‡
GL_EXT_∑cked_pixñs


1934 
	#GL_UNSIGNED_BYTE_3_3_2_EXT
 0x8032

	)

1935 
	#GL_UNSIGNED_SHORT_4_4_4_4_EXT
 0x8033

	)

1936 
	#GL_UNSIGNED_SHORT_5_5_5_1_EXT
 0x8034

	)

1937 
	#GL_UNSIGNED_INT_8_8_8_8_EXT
 0x8035

	)

1938 
	#GL_UNSIGNED_INT_10_10_10_2_EXT
 0x8036

	)

1941 #i‚de‡
GL_SGIS_ãxtuª_lod


1942 
	#GL_TEXTURE_MIN_LOD_SGIS
 0x813A

	)

1943 
	#GL_TEXTURE_MAX_LOD_SGIS
 0x813B

	)

1944 
	#GL_TEXTURE_BASE_LEVEL_SGIS
 0x813C

	)

1945 
	#GL_TEXTURE_MAX_LEVEL_SGIS
 0x813D

	)

1948 #i‚de‡
GL_SGIS_mu…ißm∂e


1949 
	#GL_MULTISAMPLE_SGIS
 0x809D

	)

1950 
	#GL_SAMPLE_ALPHA_TO_MASK_SGIS
 0x809E

	)

1951 
	#GL_SAMPLE_ALPHA_TO_ONE_SGIS
 0x809F

	)

1952 
	#GL_SAMPLE_MASK_SGIS
 0x80A0

	)

1953 
	#GL_1PASS_SGIS
 0x80A1

	)

1954 
	#GL_2PASS_0_SGIS
 0x80A2

	)

1955 
	#GL_2PASS_1_SGIS
 0x80A3

	)

1956 
	#GL_4PASS_0_SGIS
 0x80A4

	)

1957 
	#GL_4PASS_1_SGIS
 0x80A5

	)

1958 
	#GL_4PASS_2_SGIS
 0x80A6

	)

1959 
	#GL_4PASS_3_SGIS
 0x80A7

	)

1960 
	#GL_SAMPLE_BUFFERS_SGIS
 0x80A8

	)

1961 
	#GL_SAMPLES_SGIS
 0x80A9

	)

1962 
	#GL_SAMPLE_MASK_VALUE_SGIS
 0x80AA

	)

1963 
	#GL_SAMPLE_MASK_INVERT_SGIS
 0x80AB

	)

1964 
	#GL_SAMPLE_PATTERN_SGIS
 0x80AC

	)

1967 #i‚de‡
GL_EXT_ªsˇÀ_n‹mÆ


1968 
	#GL_RESCALE_NORMAL_EXT
 0x803A

	)

1971 #i‚de‡
GL_EXT_vîãx_¨øy


1972 
	#GL_VERTEX_ARRAY_EXT
 0x8074

	)

1973 
	#GL_NORMAL_ARRAY_EXT
 0x8075

	)

1974 
	#GL_COLOR_ARRAY_EXT
 0x8076

	)

1975 
	#GL_INDEX_ARRAY_EXT
 0x8077

	)

1976 
	#GL_TEXTURE_COORD_ARRAY_EXT
 0x8078

	)

1977 
	#GL_EDGE_FLAG_ARRAY_EXT
 0x8079

	)

1978 
	#GL_VERTEX_ARRAY_SIZE_EXT
 0x807A

	)

1979 
	#GL_VERTEX_ARRAY_TYPE_EXT
 0x807B

	)

1980 
	#GL_VERTEX_ARRAY_STRIDE_EXT
 0x807C

	)

1981 
	#GL_VERTEX_ARRAY_COUNT_EXT
 0x807D

	)

1982 
	#GL_NORMAL_ARRAY_TYPE_EXT
 0x807E

	)

1983 
	#GL_NORMAL_ARRAY_STRIDE_EXT
 0x807F

	)

1984 
	#GL_NORMAL_ARRAY_COUNT_EXT
 0x8080

	)

1985 
	#GL_COLOR_ARRAY_SIZE_EXT
 0x8081

	)

1986 
	#GL_COLOR_ARRAY_TYPE_EXT
 0x8082

	)

1987 
	#GL_COLOR_ARRAY_STRIDE_EXT
 0x8083

	)

1988 
	#GL_COLOR_ARRAY_COUNT_EXT
 0x8084

	)

1989 
	#GL_INDEX_ARRAY_TYPE_EXT
 0x8085

	)

1990 
	#GL_INDEX_ARRAY_STRIDE_EXT
 0x8086

	)

1991 
	#GL_INDEX_ARRAY_COUNT_EXT
 0x8087

	)

1992 
	#GL_TEXTURE_COORD_ARRAY_SIZE_EXT
 0x8088

	)

1993 
	#GL_TEXTURE_COORD_ARRAY_TYPE_EXT
 0x8089

	)

1994 
	#GL_TEXTURE_COORD_ARRAY_STRIDE_EXT
 0x808A

	)

1995 
	#GL_TEXTURE_COORD_ARRAY_COUNT_EXT
 0x808B

	)

1996 
	#GL_EDGE_FLAG_ARRAY_STRIDE_EXT
 0x808C

	)

1997 
	#GL_EDGE_FLAG_ARRAY_COUNT_EXT
 0x808D

	)

1998 
	#GL_VERTEX_ARRAY_POINTER_EXT
 0x808E

	)

1999 
	#GL_NORMAL_ARRAY_POINTER_EXT
 0x808F

	)

2000 
	#GL_COLOR_ARRAY_POINTER_EXT
 0x8090

	)

2001 
	#GL_INDEX_ARRAY_POINTER_EXT
 0x8091

	)

2002 
	#GL_TEXTURE_COORD_ARRAY_POINTER_EXT
 0x8092

	)

2003 
	#GL_EDGE_FLAG_ARRAY_POINTER_EXT
 0x8093

	)

2006 #i‚de‡
GL_EXT_misc_©åibuã


2009 #i‚de‡
GL_SGIS_gíî©e_mùm≠


2010 
	#GL_GENERATE_MIPMAP_SGIS
 0x8191

	)

2011 
	#GL_GENERATE_MIPMAP_HINT_SGIS
 0x8192

	)

2014 #i‚de‡
GL_SGIX_˛ùm≠


2015 
	#GL_LINEAR_CLIPMAP_LINEAR_SGIX
 0x8170

	)

2016 
	#GL_TEXTURE_CLIPMAP_CENTER_SGIX
 0x8171

	)

2017 
	#GL_TEXTURE_CLIPMAP_FRAME_SGIX
 0x8172

	)

2018 
	#GL_TEXTURE_CLIPMAP_OFFSET_SGIX
 0x8173

	)

2019 
	#GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX
 0x8174

	)

2020 
	#GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX
 0x8175

	)

2021 
	#GL_TEXTURE_CLIPMAP_DEPTH_SGIX
 0x8176

	)

2022 
	#GL_MAX_CLIPMAP_DEPTH_SGIX
 0x8177

	)

2023 
	#GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX
 0x8178

	)

2024 
	#GL_NEAREST_CLIPMAP_NEAREST_SGIX
 0x844D

	)

2025 
	#GL_NEAREST_CLIPMAP_LINEAR_SGIX
 0x844E

	)

2026 
	#GL_LINEAR_CLIPMAP_NEAREST_SGIX
 0x844F

	)

2029 #i‚de‡
GL_SGIX_shadow


2030 
	#GL_TEXTURE_COMPARE_SGIX
 0x819A

	)

2031 
	#GL_TEXTURE_COMPARE_OPERATOR_SGIX
 0x819B

	)

2032 
	#GL_TEXTURE_LEQUAL_R_SGIX
 0x819C

	)

2033 
	#GL_TEXTURE_GEQUAL_R_SGIX
 0x819D

	)

2036 #i‚de‡
GL_SGIS_ãxtuª_edge_˛amp


2037 
	#GL_CLAMP_TO_EDGE_SGIS
 0x812F

	)

2040 #i‚de‡
GL_SGIS_ãxtuª_b‹dî_˛amp


2041 
	#GL_CLAMP_TO_BORDER_SGIS
 0x812D

	)

2044 #i‚de‡
GL_EXT_bÀnd_mömax


2045 
	#GL_FUNC_ADD_EXT
 0x8006

	)

2046 
	#GL_MIN_EXT
 0x8007

	)

2047 
	#GL_MAX_EXT
 0x8008

	)

2048 
	#GL_BLEND_EQUATION_EXT
 0x8009

	)

2051 #i‚de‡
GL_EXT_bÀnd_subåa˘


2052 
	#GL_FUNC_SUBTRACT_EXT
 0x800A

	)

2053 
	#GL_FUNC_REVERSE_SUBTRACT_EXT
 0x800B

	)

2056 #i‚de‡
GL_EXT_bÀnd_logic_›


2059 #i‚de‡
GL_SGIX_öãæa˚


2060 
	#GL_INTERLACE_SGIX
 0x8094

	)

2063 #i‚de‡
GL_SGIX_pixñ_tûes


2064 
	#GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX
 0x813E

	)

2065 
	#GL_PIXEL_TILE_CACHE_INCREMENT_SGIX
 0x813F

	)

2066 
	#GL_PIXEL_TILE_WIDTH_SGIX
 0x8140

	)

2067 
	#GL_PIXEL_TILE_HEIGHT_SGIX
 0x8141

	)

2068 
	#GL_PIXEL_TILE_GRID_WIDTH_SGIX
 0x8142

	)

2069 
	#GL_PIXEL_TILE_GRID_HEIGHT_SGIX
 0x8143

	)

2070 
	#GL_PIXEL_TILE_GRID_DEPTH_SGIX
 0x8144

	)

2071 
	#GL_PIXEL_TILE_CACHE_SIZE_SGIX
 0x8145

	)

2074 #i‚de‡
GL_SGIS_ãxtuª_£À˘


2075 
	#GL_DUAL_ALPHA4_SGIS
 0x8110

	)

2076 
	#GL_DUAL_ALPHA8_SGIS
 0x8111

	)

2077 
	#GL_DUAL_ALPHA12_SGIS
 0x8112

	)

2078 
	#GL_DUAL_ALPHA16_SGIS
 0x8113

	)

2079 
	#GL_DUAL_LUMINANCE4_SGIS
 0x8114

	)

2080 
	#GL_DUAL_LUMINANCE8_SGIS
 0x8115

	)

2081 
	#GL_DUAL_LUMINANCE12_SGIS
 0x8116

	)

2082 
	#GL_DUAL_LUMINANCE16_SGIS
 0x8117

	)

2083 
	#GL_DUAL_INTENSITY4_SGIS
 0x8118

	)

2084 
	#GL_DUAL_INTENSITY8_SGIS
 0x8119

	)

2085 
	#GL_DUAL_INTENSITY12_SGIS
 0x811A

	)

2086 
	#GL_DUAL_INTENSITY16_SGIS
 0x811B

	)

2087 
	#GL_DUAL_LUMINANCE_ALPHA4_SGIS
 0x811C

	)

2088 
	#GL_DUAL_LUMINANCE_ALPHA8_SGIS
 0x811D

	)

2089 
	#GL_QUAD_ALPHA4_SGIS
 0x811E

	)

2090 
	#GL_QUAD_ALPHA8_SGIS
 0x811F

	)

2091 
	#GL_QUAD_LUMINANCE4_SGIS
 0x8120

	)

2092 
	#GL_QUAD_LUMINANCE8_SGIS
 0x8121

	)

2093 
	#GL_QUAD_INTENSITY4_SGIS
 0x8122

	)

2094 
	#GL_QUAD_INTENSITY8_SGIS
 0x8123

	)

2095 
	#GL_DUAL_TEXTURE_SELECT_SGIS
 0x8124

	)

2096 
	#GL_QUAD_TEXTURE_SELECT_SGIS
 0x8125

	)

2099 #i‚de‡
GL_SGIX_•rôe


2100 
	#GL_SPRITE_SGIX
 0x8148

	)

2101 
	#GL_SPRITE_MODE_SGIX
 0x8149

	)

2102 
	#GL_SPRITE_AXIS_SGIX
 0x814A

	)

2103 
	#GL_SPRITE_TRANSLATION_SGIX
 0x814B

	)

2104 
	#GL_SPRITE_AXIAL_SGIX
 0x814C

	)

2105 
	#GL_SPRITE_OBJECT_ALIGNED_SGIX
 0x814D

	)

2106 
	#GL_SPRITE_EYE_ALIGNED_SGIX
 0x814E

	)

2109 #i‚de‡
GL_SGIX_ãxtuª_mu…i_buf„r


2110 
	#GL_TEXTURE_MULTI_BUFFER_HINT_SGIX
 0x812E

	)

2113 #i‚de‡
GL_EXT_poöt_∑ømëîs


2114 
	#GL_POINT_SIZE_MIN_EXT
 0x8126

	)

2115 
	#GL_POINT_SIZE_MAX_EXT
 0x8127

	)

2116 
	#GL_POINT_FADE_THRESHOLD_SIZE_EXT
 0x8128

	)

2117 
	#GL_DISTANCE_ATTENUATION_EXT
 0x8129

	)

2120 #i‚de‡
GL_SGIS_poöt_∑ømëîs


2121 
	#GL_POINT_SIZE_MIN_SGIS
 0x8126

	)

2122 
	#GL_POINT_SIZE_MAX_SGIS
 0x8127

	)

2123 
	#GL_POINT_FADE_THRESHOLD_SIZE_SGIS
 0x8128

	)

2124 
	#GL_DISTANCE_ATTENUATION_SGIS
 0x8129

	)

2127 #i‚de‡
GL_SGIX_ö°rumíts


2128 
	#GL_INSTRUMENT_BUFFER_POINTER_SGIX
 0x8180

	)

2129 
	#GL_INSTRUMENT_MEASUREMENTS_SGIX
 0x8181

	)

2132 #i‚de‡
GL_SGIX_ãxtuª_sˇÀ_büs


2133 
	#GL_POST_TEXTURE_FILTER_BIAS_SGIX
 0x8179

	)

2134 
	#GL_POST_TEXTURE_FILTER_SCALE_SGIX
 0x817A

	)

2135 
	#GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX
 0x817B

	)

2136 
	#GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX
 0x817C

	)

2139 #i‚de‡
GL_SGIX_‰amezoom


2140 
	#GL_FRAMEZOOM_SGIX
 0x818B

	)

2141 
	#GL_FRAMEZOOM_FACTOR_SGIX
 0x818C

	)

2142 
	#GL_MAX_FRAMEZOOM_FACTOR_SGIX
 0x818D

	)

2145 #i‚de‡
GL_SGIX_èg_ßm∂e_buf„r


2148 #i‚de‡
GL_FfdMaskSGIX


2149 
	#GL_TEXTURE_DEFORMATION_BIT_SGIX
 0x00000001

	)

2150 
	#GL_GEOMETRY_DEFORMATION_BIT_SGIX
 0x00000002

	)

2153 #i‚de‡
GL_SGIX_pﬁynomül_ffd


2154 
	#GL_GEOMETRY_DEFORMATION_SGIX
 0x8194

	)

2155 
	#GL_TEXTURE_DEFORMATION_SGIX
 0x8195

	)

2156 
	#GL_DEFORMATIONS_MASK_SGIX
 0x8196

	)

2157 
	#GL_MAX_DEFORMATION_ORDER_SGIX
 0x8197

	)

2160 #i‚de‡
GL_SGIX_ª„ªn˚_∂™e


2161 
	#GL_REFERENCE_PLANE_SGIX
 0x817D

	)

2162 
	#GL_REFERENCE_PLANE_EQUATION_SGIX
 0x817E

	)

2165 #i‚de‡
GL_SGIX_Êush_ø°î


2168 #i‚de‡
GL_SGIX_dïth_ãxtuª


2169 
	#GL_DEPTH_COMPONENT16_SGIX
 0x81A5

	)

2170 
	#GL_DEPTH_COMPONENT24_SGIX
 0x81A6

	)

2171 
	#GL_DEPTH_COMPONENT32_SGIX
 0x81A7

	)

2174 #i‚de‡
GL_SGIS_fog_fun˘i⁄


2175 
	#GL_FOG_FUNC_SGIS
 0x812A

	)

2176 
	#GL_FOG_FUNC_POINTS_SGIS
 0x812B

	)

2177 
	#GL_MAX_FOG_FUNC_POINTS_SGIS
 0x812C

	)

2180 #i‚de‡
GL_SGIX_fog_off£t


2181 
	#GL_FOG_OFFSET_SGIX
 0x8198

	)

2182 
	#GL_FOG_OFFSET_VALUE_SGIX
 0x8199

	)

2185 #i‚de‡
GL_HP_image_å™sf‹m


2186 
	#GL_IMAGE_SCALE_X_HP
 0x8155

	)

2187 
	#GL_IMAGE_SCALE_Y_HP
 0x8156

	)

2188 
	#GL_IMAGE_TRANSLATE_X_HP
 0x8157

	)

2189 
	#GL_IMAGE_TRANSLATE_Y_HP
 0x8158

	)

2190 
	#GL_IMAGE_ROTATE_ANGLE_HP
 0x8159

	)

2191 
	#GL_IMAGE_ROTATE_ORIGIN_X_HP
 0x815A

	)

2192 
	#GL_IMAGE_ROTATE_ORIGIN_Y_HP
 0x815B

	)

2193 
	#GL_IMAGE_MAG_FILTER_HP
 0x815C

	)

2194 
	#GL_IMAGE_MIN_FILTER_HP
 0x815D

	)

2195 
	#GL_IMAGE_CUBIC_WEIGHT_HP
 0x815E

	)

2196 
	#GL_CUBIC_HP
 0x815F

	)

2197 
	#GL_AVERAGE_HP
 0x8160

	)

2198 
	#GL_IMAGE_TRANSFORM_2D_HP
 0x8161

	)

2199 
	#GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
 0x8162

	)

2200 
	#GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
 0x8163

	)

2203 #i‚de‡
GL_HP_c⁄vﬁuti⁄_b‹dî_modes


2204 
	#GL_IGNORE_BORDER_HP
 0x8150

	)

2205 
	#GL_CONSTANT_BORDER_HP
 0x8151

	)

2206 
	#GL_REPLICATE_BORDER_HP
 0x8153

	)

2207 
	#GL_CONVOLUTION_BORDER_COLOR_HP
 0x8154

	)

2210 #i‚de‡
GL_INGR_∑Àâe_buf„r


2213 #i‚de‡
GL_SGIX_ãxtuª_add_ív


2214 
	#GL_TEXTURE_ENV_BIAS_SGIX
 0x80BE

	)

2217 #i‚de‡
GL_EXT_cﬁ‹_subèbÀ


2220 #i‚de‡
GL_PGI_vîãx_höts


2221 
	#GL_VERTEX_DATA_HINT_PGI
 0x1A22A

	)

2222 
	#GL_VERTEX_CONSISTENT_HINT_PGI
 0x1A22B

	)

2223 
	#GL_MATERIAL_SIDE_HINT_PGI
 0x1A22C

	)

2224 
	#GL_MAX_VERTEX_HINT_PGI
 0x1A22D

	)

2225 
	#GL_COLOR3_BIT_PGI
 0x00010000

	)

2226 
	#GL_COLOR4_BIT_PGI
 0x00020000

	)

2227 
	#GL_EDGEFLAG_BIT_PGI
 0x00040000

	)

2228 
	#GL_INDEX_BIT_PGI
 0x00080000

	)

2229 
	#GL_MAT_AMBIENT_BIT_PGI
 0x00100000

	)

2230 
	#GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI
 0x00200000

	)

2231 
	#GL_MAT_DIFFUSE_BIT_PGI
 0x00400000

	)

2232 
	#GL_MAT_EMISSION_BIT_PGI
 0x00800000

	)

2233 
	#GL_MAT_COLOR_INDEXES_BIT_PGI
 0x01000000

	)

2234 
	#GL_MAT_SHININESS_BIT_PGI
 0x02000000

	)

2235 
	#GL_MAT_SPECULAR_BIT_PGI
 0x04000000

	)

2236 
	#GL_NORMAL_BIT_PGI
 0x08000000

	)

2237 
	#GL_TEXCOORD1_BIT_PGI
 0x10000000

	)

2238 
	#GL_TEXCOORD2_BIT_PGI
 0x20000000

	)

2239 
	#GL_TEXCOORD3_BIT_PGI
 0x40000000

	)

2240 
	#GL_TEXCOORD4_BIT_PGI
 0x80000000

	)

2241 
	#GL_VERTEX23_BIT_PGI
 0x00000004

	)

2242 
	#GL_VERTEX4_BIT_PGI
 0x00000008

	)

2245 #i‚de‡
GL_PGI_misc_höts


2246 
	#GL_PREFER_DOUBLEBUFFER_HINT_PGI
 0x1A1F8

	)

2247 
	#GL_CONSERVE_MEMORY_HINT_PGI
 0x1A1FD

	)

2248 
	#GL_RECLAIM_MEMORY_HINT_PGI
 0x1A1FE

	)

2249 
	#GL_NATIVE_GRAPHICS_HANDLE_PGI
 0x1A202

	)

2250 
	#GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI
 0x1A203

	)

2251 
	#GL_NATIVE_GRAPHICS_END_HINT_PGI
 0x1A204

	)

2252 
	#GL_ALWAYS_FAST_HINT_PGI
 0x1A20C

	)

2253 
	#GL_ALWAYS_SOFT_HINT_PGI
 0x1A20D

	)

2254 
	#GL_ALLOW_DRAW_OBJ_HINT_PGI
 0x1A20E

	)

2255 
	#GL_ALLOW_DRAW_WIN_HINT_PGI
 0x1A20F

	)

2256 
	#GL_ALLOW_DRAW_FRG_HINT_PGI
 0x1A210

	)

2257 
	#GL_ALLOW_DRAW_MEM_HINT_PGI
 0x1A211

	)

2258 
	#GL_STRICT_DEPTHFUNC_HINT_PGI
 0x1A216

	)

2259 
	#GL_STRICT_LIGHTING_HINT_PGI
 0x1A217

	)

2260 
	#GL_STRICT_SCISSOR_HINT_PGI
 0x1A218

	)

2261 
	#GL_FULL_STIPPLE_HINT_PGI
 0x1A219

	)

2262 
	#GL_CLIP_NEAR_HINT_PGI
 0x1A220

	)

2263 
	#GL_CLIP_FAR_HINT_PGI
 0x1A221

	)

2264 
	#GL_WIDE_LINE_HINT_PGI
 0x1A222

	)

2265 
	#GL_BACK_NORMALS_HINT_PGI
 0x1A223

	)

2268 #i‚de‡
GL_EXT_∑Àâed_ãxtuª


2269 
	#GL_COLOR_INDEX1_EXT
 0x80E2

	)

2270 
	#GL_COLOR_INDEX2_EXT
 0x80E3

	)

2271 
	#GL_COLOR_INDEX4_EXT
 0x80E4

	)

2272 
	#GL_COLOR_INDEX8_EXT
 0x80E5

	)

2273 
	#GL_COLOR_INDEX12_EXT
 0x80E6

	)

2274 
	#GL_COLOR_INDEX16_EXT
 0x80E7

	)

2275 
	#GL_TEXTURE_INDEX_SIZE_EXT
 0x80ED

	)

2278 #i‚de‡
GL_EXT_˛ù_vﬁume_höt


2279 
	#GL_CLIP_VOLUME_CLIPPING_HINT_EXT
 0x80F0

	)

2282 #i‚de‡
GL_SGIX_li°_¥i‹ôy


2283 
	#GL_LIST_PRIORITY_SGIX
 0x8182

	)

2286 #i‚de‡
GL_SGIX_ú_ö°rumít1


2287 
	#GL_IR_INSTRUMENT1_SGIX
 0x817F

	)

2290 #i‚de‡
GL_SGIX_ˇŒigøphic_‰agmít


2291 
	#GL_CALLIGRAPHIC_FRAGMENT_SGIX
 0x8183

	)

2294 #i‚de‡
GL_SGIX_ãxtuª_lod_büs


2295 
	#GL_TEXTURE_LOD_BIAS_S_SGIX
 0x818E

	)

2296 
	#GL_TEXTURE_LOD_BIAS_T_SGIX
 0x818F

	)

2297 
	#GL_TEXTURE_LOD_BIAS_R_SGIX
 0x8190

	)

2300 #i‚de‡
GL_SGIX_shadow_ambõ¡


2301 
	#GL_SHADOW_AMBIENT_SGIX
 0x80BF

	)

2304 #i‚de‡
GL_EXT_ödex_ãxtuª


2307 #i‚de‡
GL_EXT_ödex_m©îül


2308 
	#GL_INDEX_MATERIAL_EXT
 0x81B8

	)

2309 
	#GL_INDEX_MATERIAL_PARAMETER_EXT
 0x81B9

	)

2310 
	#GL_INDEX_MATERIAL_FACE_EXT
 0x81BA

	)

2313 #i‚de‡
GL_EXT_ödex_func


2314 
	#GL_INDEX_TEST_EXT
 0x81B5

	)

2315 
	#GL_INDEX_TEST_FUNC_EXT
 0x81B6

	)

2316 
	#GL_INDEX_TEST_REF_EXT
 0x81B7

	)

2319 #i‚de‡
GL_EXT_ödex_¨øy_f‹m©s


2320 
	#GL_IUI_V2F_EXT
 0x81AD

	)

2321 
	#GL_IUI_V3F_EXT
 0x81AE

	)

2322 
	#GL_IUI_N3F_V2F_EXT
 0x81AF

	)

2323 
	#GL_IUI_N3F_V3F_EXT
 0x81B0

	)

2324 
	#GL_T2F_IUI_V2F_EXT
 0x81B1

	)

2325 
	#GL_T2F_IUI_V3F_EXT
 0x81B2

	)

2326 
	#GL_T2F_IUI_N3F_V2F_EXT
 0x81B3

	)

2327 
	#GL_T2F_IUI_N3F_V3F_EXT
 0x81B4

	)

2330 #i‚de‡
GL_EXT_compûed_vîãx_¨øy


2331 
	#GL_ARRAY_ELEMENT_LOCK_FIRST_EXT
 0x81A8

	)

2332 
	#GL_ARRAY_ELEMENT_LOCK_COUNT_EXT
 0x81A9

	)

2335 #i‚de‡
GL_EXT_cuŒ_vîãx


2336 
	#GL_CULL_VERTEX_EXT
 0x81AA

	)

2337 
	#GL_CULL_VERTEX_EYE_POSITION_EXT
 0x81AB

	)

2338 
	#GL_CULL_VERTEX_OBJECT_POSITION_EXT
 0x81AC

	)

2341 #i‚de‡
GL_SGIX_y¸cb


2342 
	#GL_YCRCB_422_SGIX
 0x81BB

	)

2343 
	#GL_YCRCB_444_SGIX
 0x81BC

	)

2346 #i‚de‡
GL_SGIX_‰agmít_lightög


2347 
	#GL_FRAGMENT_LIGHTING_SGIX
 0x8400

	)

2348 
	#GL_FRAGMENT_COLOR_MATERIAL_SGIX
 0x8401

	)

2349 
	#GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX
 0x8402

	)

2350 
	#GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX
 0x8403

	)

2351 
	#GL_MAX_FRAGMENT_LIGHTS_SGIX
 0x8404

	)

2352 
	#GL_MAX_ACTIVE_LIGHTS_SGIX
 0x8405

	)

2353 
	#GL_CURRENT_RASTER_NORMAL_SGIX
 0x8406

	)

2354 
	#GL_LIGHT_ENV_MODE_SGIX
 0x8407

	)

2355 
	#GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX
 0x8408

	)

2356 
	#GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX
 0x8409

	)

2357 
	#GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX
 0x840A

	)

2358 
	#GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX
 0x840B

	)

2359 
	#GL_FRAGMENT_LIGHT0_SGIX
 0x840C

	)

2360 
	#GL_FRAGMENT_LIGHT1_SGIX
 0x840D

	)

2361 
	#GL_FRAGMENT_LIGHT2_SGIX
 0x840E

	)

2362 
	#GL_FRAGMENT_LIGHT3_SGIX
 0x840F

	)

2363 
	#GL_FRAGMENT_LIGHT4_SGIX
 0x8410

	)

2364 
	#GL_FRAGMENT_LIGHT5_SGIX
 0x8411

	)

2365 
	#GL_FRAGMENT_LIGHT6_SGIX
 0x8412

	)

2366 
	#GL_FRAGMENT_LIGHT7_SGIX
 0x8413

	)

2369 #i‚de‡
GL_IBM_ø°îpos_˛ù


2370 
	#GL_RASTER_POSITION_UNCLIPPED_IBM
 0x19262

	)

2373 #i‚de‡
GL_HP_ãxtuª_lightög


2374 
	#GL_TEXTURE_LIGHTING_MODE_HP
 0x8167

	)

2375 
	#GL_TEXTURE_POST_SPECULAR_HP
 0x8168

	)

2376 
	#GL_TEXTURE_PRE_SPECULAR_HP
 0x8169

	)

2379 #i‚de‡
GL_EXT_døw_ønge_ñemíts


2380 
	#GL_MAX_ELEMENTS_VERTICES_EXT
 0x80E8

	)

2381 
	#GL_MAX_ELEMENTS_INDICES_EXT
 0x80E9

	)

2384 #i‚de‡
GL_WIN_ph⁄g_shadög


2385 
	#GL_PHONG_WIN
 0x80EA

	)

2386 
	#GL_PHONG_HINT_WIN
 0x80EB

	)

2389 #i‚de‡
GL_WIN_•ecuœr_fog


2390 
	#GL_FOG_SPECULAR_TEXTURE_WIN
 0x80EC

	)

2393 #i‚de‡
GL_EXT_light_ãxtuª


2394 
	#GL_FRAGMENT_MATERIAL_EXT
 0x8349

	)

2395 
	#GL_FRAGMENT_NORMAL_EXT
 0x834A

	)

2396 
	#GL_FRAGMENT_COLOR_EXT
 0x834C

	)

2397 
	#GL_ATTENUATION_EXT
 0x834D

	)

2398 
	#GL_SHADOW_ATTENUATION_EXT
 0x834E

	)

2399 
	#GL_TEXTURE_APPLICATION_MODE_EXT
 0x834F

	)

2400 
	#GL_TEXTURE_LIGHT_EXT
 0x8350

	)

2401 
	#GL_TEXTURE_MATERIAL_FACE_EXT
 0x8351

	)

2402 
	#GL_TEXTURE_MATERIAL_PARAMETER_EXT
 0x8352

	)

2406 #i‚de‡
GL_SGIX_bÀnd_Æpha_mömax


2407 
	#GL_ALPHA_MIN_SGIX
 0x8320

	)

2408 
	#GL_ALPHA_MAX_SGIX
 0x8321

	)

2411 #i‚de‡
GL_SGIX_im∑˘_pixñ_ãxtuª


2412 
	#GL_PIXEL_TEX_GEN_Q_CEILING_SGIX
 0x8184

	)

2413 
	#GL_PIXEL_TEX_GEN_Q_ROUND_SGIX
 0x8185

	)

2414 
	#GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX
 0x8186

	)

2415 
	#GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX
 0x8187

	)

2416 
	#GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX
 0x8188

	)

2417 
	#GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX
 0x8189

	)

2418 
	#GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX
 0x818A

	)

2421 #i‚de‡
GL_EXT_bgø


2422 
	#GL_BGR_EXT
 0x80E0

	)

2423 
	#GL_BGRA_EXT
 0x80E1

	)

2426 #i‚de‡
GL_SGIX_async


2427 
	#GL_ASYNC_MARKER_SGIX
 0x8329

	)

2430 #i‚de‡
GL_SGIX_async_pixñ


2431 
	#GL_ASYNC_TEX_IMAGE_SGIX
 0x835C

	)

2432 
	#GL_ASYNC_DRAW_PIXELS_SGIX
 0x835D

	)

2433 
	#GL_ASYNC_READ_PIXELS_SGIX
 0x835E

	)

2434 
	#GL_MAX_ASYNC_TEX_IMAGE_SGIX
 0x835F

	)

2435 
	#GL_MAX_ASYNC_DRAW_PIXELS_SGIX
 0x8360

	)

2436 
	#GL_MAX_ASYNC_READ_PIXELS_SGIX
 0x8361

	)

2439 #i‚de‡
GL_SGIX_async_hi°ogøm


2440 
	#GL_ASYNC_HISTOGRAM_SGIX
 0x832C

	)

2441 
	#GL_MAX_ASYNC_HISTOGRAM_SGIX
 0x832D

	)

2444 #i‚de‡
GL_INTEL_ãxtuª_sciss‹


2447 #i‚de‡
GL_INTEL_∑øŒñ_¨øys


2448 
	#GL_PARALLEL_ARRAYS_INTEL
 0x83F4

	)

2449 
	#GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL
 0x83F5

	)

2450 
	#GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL
 0x83F6

	)

2451 
	#GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL
 0x83F7

	)

2452 
	#GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL
 0x83F8

	)

2455 #i‚de‡
GL_HP_oc˛usi⁄_ã°


2456 
	#GL_OCCLUSION_TEST_HP
 0x8165

	)

2457 
	#GL_OCCLUSION_TEST_RESULT_HP
 0x8166

	)

2460 #i‚de‡
GL_EXT_pixñ_å™sf‹m


2461 
	#GL_PIXEL_TRANSFORM_2D_EXT
 0x8330

	)

2462 
	#GL_PIXEL_MAG_FILTER_EXT
 0x8331

	)

2463 
	#GL_PIXEL_MIN_FILTER_EXT
 0x8332

	)

2464 
	#GL_PIXEL_CUBIC_WEIGHT_EXT
 0x8333

	)

2465 
	#GL_CUBIC_EXT
 0x8334

	)

2466 
	#GL_AVERAGE_EXT
 0x8335

	)

2467 
	#GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
 0x8336

	)

2468 
	#GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
 0x8337

	)

2469 
	#GL_PIXEL_TRANSFORM_2D_MATRIX_EXT
 0x8338

	)

2472 #i‚de‡
GL_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ


2475 #i‚de‡
GL_EXT_sh¨ed_ãxtuª_∑Àâe


2476 
	#GL_SHARED_TEXTURE_PALETTE_EXT
 0x81FB

	)

2479 #i‚de‡
GL_EXT_£∑øã_•ecuœr_cﬁ‹


2480 
	#GL_LIGHT_MODEL_COLOR_CONTROL_EXT
 0x81F8

	)

2481 
	#GL_SINGLE_COLOR_EXT
 0x81F9

	)

2482 
	#GL_SEPARATE_SPECULAR_COLOR_EXT
 0x81FA

	)

2485 #i‚de‡
GL_EXT_£c⁄d¨y_cﬁ‹


2486 
	#GL_COLOR_SUM_EXT
 0x8458

	)

2487 
	#GL_CURRENT_SECONDARY_COLOR_EXT
 0x8459

	)

2488 
	#GL_SECONDARY_COLOR_ARRAY_SIZE_EXT
 0x845A

	)

2489 
	#GL_SECONDARY_COLOR_ARRAY_TYPE_EXT
 0x845B

	)

2490 
	#GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT
 0x845C

	)

2491 
	#GL_SECONDARY_COLOR_ARRAY_POINTER_EXT
 0x845D

	)

2492 
	#GL_SECONDARY_COLOR_ARRAY_EXT
 0x845E

	)

2495 #i‚de‡
GL_EXT_ãxtuª_≥πurb_n‹mÆ


2496 
	#GL_PERTURB_EXT
 0x85AE

	)

2497 
	#GL_TEXTURE_NORMAL_EXT
 0x85AF

	)

2500 #i‚de‡
GL_EXT_mu…i_døw_¨øys


2503 #i‚de‡
GL_EXT_fog_co‹d


2504 
	#GL_FOG_COORDINATE_SOURCE_EXT
 0x8450

	)

2505 
	#GL_FOG_COORDINATE_EXT
 0x8451

	)

2506 
	#GL_FRAGMENT_DEPTH_EXT
 0x8452

	)

2507 
	#GL_CURRENT_FOG_COORDINATE_EXT
 0x8453

	)

2508 
	#GL_FOG_COORDINATE_ARRAY_TYPE_EXT
 0x8454

	)

2509 
	#GL_FOG_COORDINATE_ARRAY_STRIDE_EXT
 0x8455

	)

2510 
	#GL_FOG_COORDINATE_ARRAY_POINTER_EXT
 0x8456

	)

2511 
	#GL_FOG_COORDINATE_ARRAY_EXT
 0x8457

	)

2514 #i‚de‡
GL_REND_s¸ìn_co‹dö©es


2515 
	#GL_SCREEN_COORDINATES_REND
 0x8490

	)

2516 
	#GL_INVERTED_SCREEN_W_REND
 0x8491

	)

2519 #i‚de‡
GL_EXT_co‹dö©e_‰ame


2520 
	#GL_TANGENT_ARRAY_EXT
 0x8439

	)

2521 
	#GL_BINORMAL_ARRAY_EXT
 0x843A

	)

2522 
	#GL_CURRENT_TANGENT_EXT
 0x843B

	)

2523 
	#GL_CURRENT_BINORMAL_EXT
 0x843C

	)

2524 
	#GL_TANGENT_ARRAY_TYPE_EXT
 0x843E

	)

2525 
	#GL_TANGENT_ARRAY_STRIDE_EXT
 0x843F

	)

2526 
	#GL_BINORMAL_ARRAY_TYPE_EXT
 0x8440

	)

2527 
	#GL_BINORMAL_ARRAY_STRIDE_EXT
 0x8441

	)

2528 
	#GL_TANGENT_ARRAY_POINTER_EXT
 0x8442

	)

2529 
	#GL_BINORMAL_ARRAY_POINTER_EXT
 0x8443

	)

2530 
	#GL_MAP1_TANGENT_EXT
 0x8444

	)

2531 
	#GL_MAP2_TANGENT_EXT
 0x8445

	)

2532 
	#GL_MAP1_BINORMAL_EXT
 0x8446

	)

2533 
	#GL_MAP2_BINORMAL_EXT
 0x8447

	)

2536 #i‚de‡
GL_EXT_ãxtuª_ív_comböe


2537 
	#GL_COMBINE_EXT
 0x8570

	)

2538 
	#GL_COMBINE_RGB_EXT
 0x8571

	)

2539 
	#GL_COMBINE_ALPHA_EXT
 0x8572

	)

2540 
	#GL_RGB_SCALE_EXT
 0x8573

	)

2541 
	#GL_ADD_SIGNED_EXT
 0x8574

	)

2542 
	#GL_INTERPOLATE_EXT
 0x8575

	)

2543 
	#GL_CONSTANT_EXT
 0x8576

	)

2544 
	#GL_PRIMARY_COLOR_EXT
 0x8577

	)

2545 
	#GL_PREVIOUS_EXT
 0x8578

	)

2546 
	#GL_SOURCE0_RGB_EXT
 0x8580

	)

2547 
	#GL_SOURCE1_RGB_EXT
 0x8581

	)

2548 
	#GL_SOURCE2_RGB_EXT
 0x8582

	)

2549 
	#GL_SOURCE0_ALPHA_EXT
 0x8588

	)

2550 
	#GL_SOURCE1_ALPHA_EXT
 0x8589

	)

2551 
	#GL_SOURCE2_ALPHA_EXT
 0x858A

	)

2552 
	#GL_OPERAND0_RGB_EXT
 0x8590

	)

2553 
	#GL_OPERAND1_RGB_EXT
 0x8591

	)

2554 
	#GL_OPERAND2_RGB_EXT
 0x8592

	)

2555 
	#GL_OPERAND0_ALPHA_EXT
 0x8598

	)

2556 
	#GL_OPERAND1_ALPHA_EXT
 0x8599

	)

2557 
	#GL_OPERAND2_ALPHA_EXT
 0x859A

	)

2560 #i‚de‡
GL_APPLE_•ecuœr_ve˘‹


2561 
	#GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE
 0x85B0

	)

2564 #i‚de‡
GL_APPLE_å™sf‹m_höt


2565 
	#GL_TRANSFORM_HINT_APPLE
 0x85B1

	)

2568 #i‚de‡
GL_SGIX_fog_sˇÀ


2569 
	#GL_FOG_SCALE_SGIX
 0x81FC

	)

2570 
	#GL_FOG_SCALE_VALUE_SGIX
 0x81FD

	)

2573 #i‚de‡
GL_SUNX_c⁄°™t_d©a


2574 
	#GL_UNPACK_CONSTANT_DATA_SUNX
 0x81D5

	)

2575 
	#GL_TEXTURE_CONSTANT_DATA_SUNX
 0x81D6

	)

2578 #i‚de‡
GL_SUN_globÆ_Æpha


2579 
	#GL_GLOBAL_ALPHA_SUN
 0x81D9

	)

2580 
	#GL_GLOBAL_ALPHA_FACTOR_SUN
 0x81DA

	)

2583 #i‚de‡
GL_SUN_åüngÀ_li°


2584 
	#GL_RESTART_SUN
 0x0001

	)

2585 
	#GL_REPLACE_MIDDLE_SUN
 0x0002

	)

2586 
	#GL_REPLACE_OLDEST_SUN
 0x0003

	)

2587 
	#GL_TRIANGLE_LIST_SUN
 0x81D7

	)

2588 
	#GL_REPLACEMENT_CODE_SUN
 0x81D8

	)

2589 
	#GL_REPLACEMENT_CODE_ARRAY_SUN
 0x85C0

	)

2590 
	#GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN
 0x85C1

	)

2591 
	#GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN
 0x85C2

	)

2592 
	#GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN
 0x85C3

	)

2593 
	#GL_R1UI_V3F_SUN
 0x85C4

	)

2594 
	#GL_R1UI_C4UB_V3F_SUN
 0x85C5

	)

2595 
	#GL_R1UI_C3F_V3F_SUN
 0x85C6

	)

2596 
	#GL_R1UI_N3F_V3F_SUN
 0x85C7

	)

2597 
	#GL_R1UI_C4F_N3F_V3F_SUN
 0x85C8

	)

2598 
	#GL_R1UI_T2F_V3F_SUN
 0x85C9

	)

2599 
	#GL_R1UI_T2F_N3F_V3F_SUN
 0x85CA

	)

2600 
	#GL_R1UI_T2F_C4F_N3F_V3F_SUN
 0x85CB

	)

2603 #i‚de‡
GL_SUN_vîãx


2606 #i‚de‡
GL_EXT_bÀnd_func_£∑øã


2607 
	#GL_BLEND_DST_RGB_EXT
 0x80C8

	)

2608 
	#GL_BLEND_SRC_RGB_EXT
 0x80C9

	)

2609 
	#GL_BLEND_DST_ALPHA_EXT
 0x80CA

	)

2610 
	#GL_BLEND_SRC_ALPHA_EXT
 0x80CB

	)

2613 #i‚de‡
GL_INGR_cﬁ‹_˛amp


2614 
	#GL_RED_MIN_CLAMP_INGR
 0x8560

	)

2615 
	#GL_GREEN_MIN_CLAMP_INGR
 0x8561

	)

2616 
	#GL_BLUE_MIN_CLAMP_INGR
 0x8562

	)

2617 
	#GL_ALPHA_MIN_CLAMP_INGR
 0x8563

	)

2618 
	#GL_RED_MAX_CLAMP_INGR
 0x8564

	)

2619 
	#GL_GREEN_MAX_CLAMP_INGR
 0x8565

	)

2620 
	#GL_BLUE_MAX_CLAMP_INGR
 0x8566

	)

2621 
	#GL_ALPHA_MAX_CLAMP_INGR
 0x8567

	)

2624 #i‚de‡
GL_INGR_öãæa˚_ªad


2625 
	#GL_INTERLACE_READ_INGR
 0x8568

	)

2628 #i‚de‡
GL_EXT_°ícû_wøp


2629 
	#GL_INCR_WRAP_EXT
 0x8507

	)

2630 
	#GL_DECR_WRAP_EXT
 0x8508

	)

2633 #i‚de‡
GL_EXT_422_pixñs


2634 
	#GL_422_EXT
 0x80CC

	)

2635 
	#GL_422_REV_EXT
 0x80CD

	)

2636 
	#GL_422_AVERAGE_EXT
 0x80CE

	)

2637 
	#GL_422_REV_AVERAGE_EXT
 0x80CF

	)

2640 #i‚de‡
GL_NV_ãxgí_ªÊe˘i⁄


2641 
	#GL_NORMAL_MAP_NV
 0x8511

	)

2642 
	#GL_REFLECTION_MAP_NV
 0x8512

	)

2645 #i‚de‡
GL_EXT_ãxtuª_cube_m≠


2646 
	#GL_NORMAL_MAP_EXT
 0x8511

	)

2647 
	#GL_REFLECTION_MAP_EXT
 0x8512

	)

2648 
	#GL_TEXTURE_CUBE_MAP_EXT
 0x8513

	)

2649 
	#GL_TEXTURE_BINDING_CUBE_MAP_EXT
 0x8514

	)

2650 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT
 0x8515

	)

2651 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT
 0x8516

	)

2652 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT
 0x8517

	)

2653 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT
 0x8518

	)

2654 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT
 0x8519

	)

2655 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT
 0x851A

	)

2656 
	#GL_PROXY_TEXTURE_CUBE_MAP_EXT
 0x851B

	)

2657 
	#GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT
 0x851C

	)

2660 #i‚de‡
GL_SUN_c⁄vﬁuti⁄_b‹dî_modes


2661 
	#GL_WRAP_BORDER_SUN
 0x81D4

	)

2664 #i‚de‡
GL_EXT_ãxtuª_ív_add


2667 #i‚de‡
GL_EXT_ãxtuª_lod_büs


2668 
	#GL_MAX_TEXTURE_LOD_BIAS_EXT
 0x84FD

	)

2669 
	#GL_TEXTURE_FILTER_CONTROL_EXT
 0x8500

	)

2670 
	#GL_TEXTURE_LOD_BIAS_EXT
 0x8501

	)

2673 #i‚de‡
GL_EXT_ãxtuª_fûãr_™isŸr›ic


2674 
	#GL_TEXTURE_MAX_ANISOTROPY_EXT
 0x84FE

	)

2675 
	#GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
 0x84FF

	)

2678 #i‚de‡
GL_EXT_vîãx_weightög


2679 
	#GL_MODELVIEW0_STACK_DEPTH_EXT
 
GL_MODELVIEW_STACK_DEPTH


	)

2680 
	#GL_MODELVIEW1_STACK_DEPTH_EXT
 0x8502

	)

2681 
	#GL_MODELVIEW0_MATRIX_EXT
 
GL_MODELVIEW_MATRIX


	)

2682 
	#GL_MODELVIEW1_MATRIX_EXT
 0x8506

	)

2683 
	#GL_VERTEX_WEIGHTING_EXT
 0x8509

	)

2684 
	#GL_MODELVIEW0_EXT
 
GL_MODELVIEW


	)

2685 
	#GL_MODELVIEW1_EXT
 0x850A

	)

2686 
	#GL_CURRENT_VERTEX_WEIGHT_EXT
 0x850B

	)

2687 
	#GL_VERTEX_WEIGHT_ARRAY_EXT
 0x850C

	)

2688 
	#GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT
 0x850D

	)

2689 
	#GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT
 0x850E

	)

2690 
	#GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT
 0x850F

	)

2691 
	#GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT
 0x8510

	)

2694 #i‚de‡
GL_NV_light_max_exp⁄ít


2695 
	#GL_MAX_SHININESS_NV
 0x8504

	)

2696 
	#GL_MAX_SPOT_EXPONENT_NV
 0x8505

	)

2699 #i‚de‡
GL_NV_vîãx_¨øy_ønge


2700 
	#GL_VERTEX_ARRAY_RANGE_NV
 0x851D

	)

2701 
	#GL_VERTEX_ARRAY_RANGE_LENGTH_NV
 0x851E

	)

2702 
	#GL_VERTEX_ARRAY_RANGE_VALID_NV
 0x851F

	)

2703 
	#GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV
 0x8520

	)

2704 
	#GL_VERTEX_ARRAY_RANGE_POINTER_NV
 0x8521

	)

2707 #i‚de‡
GL_NV_ªgi°î_comböîs


2708 
	#GL_REGISTER_COMBINERS_NV
 0x8522

	)

2709 
	#GL_VARIABLE_A_NV
 0x8523

	)

2710 
	#GL_VARIABLE_B_NV
 0x8524

	)

2711 
	#GL_VARIABLE_C_NV
 0x8525

	)

2712 
	#GL_VARIABLE_D_NV
 0x8526

	)

2713 
	#GL_VARIABLE_E_NV
 0x8527

	)

2714 
	#GL_VARIABLE_F_NV
 0x8528

	)

2715 
	#GL_VARIABLE_G_NV
 0x8529

	)

2716 
	#GL_CONSTANT_COLOR0_NV
 0x852A

	)

2717 
	#GL_CONSTANT_COLOR1_NV
 0x852B

	)

2718 
	#GL_PRIMARY_COLOR_NV
 0x852C

	)

2719 
	#GL_SECONDARY_COLOR_NV
 0x852D

	)

2720 
	#GL_SPARE0_NV
 0x852E

	)

2721 
	#GL_SPARE1_NV
 0x852F

	)

2722 
	#GL_DISCARD_NV
 0x8530

	)

2723 
	#GL_E_TIMES_F_NV
 0x8531

	)

2724 
	#GL_SPARE0_PLUS_SECONDARY_COLOR_NV
 0x8532

	)

2725 
	#GL_UNSIGNED_IDENTITY_NV
 0x8536

	)

2726 
	#GL_UNSIGNED_INVERT_NV
 0x8537

	)

2727 
	#GL_EXPAND_NORMAL_NV
 0x8538

	)

2728 
	#GL_EXPAND_NEGATE_NV
 0x8539

	)

2729 
	#GL_HALF_BIAS_NORMAL_NV
 0x853A

	)

2730 
	#GL_HALF_BIAS_NEGATE_NV
 0x853B

	)

2731 
	#GL_SIGNED_IDENTITY_NV
 0x853C

	)

2732 
	#GL_SIGNED_NEGATE_NV
 0x853D

	)

2733 
	#GL_SCALE_BY_TWO_NV
 0x853E

	)

2734 
	#GL_SCALE_BY_FOUR_NV
 0x853F

	)

2735 
	#GL_SCALE_BY_ONE_HALF_NV
 0x8540

	)

2736 
	#GL_BIAS_BY_NEGATIVE_ONE_HALF_NV
 0x8541

	)

2737 
	#GL_COMBINER_INPUT_NV
 0x8542

	)

2738 
	#GL_COMBINER_MAPPING_NV
 0x8543

	)

2739 
	#GL_COMBINER_COMPONENT_USAGE_NV
 0x8544

	)

2740 
	#GL_COMBINER_AB_DOT_PRODUCT_NV
 0x8545

	)

2741 
	#GL_COMBINER_CD_DOT_PRODUCT_NV
 0x8546

	)

2742 
	#GL_COMBINER_MUX_SUM_NV
 0x8547

	)

2743 
	#GL_COMBINER_SCALE_NV
 0x8548

	)

2744 
	#GL_COMBINER_BIAS_NV
 0x8549

	)

2745 
	#GL_COMBINER_AB_OUTPUT_NV
 0x854A

	)

2746 
	#GL_COMBINER_CD_OUTPUT_NV
 0x854B

	)

2747 
	#GL_COMBINER_SUM_OUTPUT_NV
 0x854C

	)

2748 
	#GL_MAX_GENERAL_COMBINERS_NV
 0x854D

	)

2749 
	#GL_NUM_GENERAL_COMBINERS_NV
 0x854E

	)

2750 
	#GL_COLOR_SUM_CLAMP_NV
 0x854F

	)

2751 
	#GL_COMBINER0_NV
 0x8550

	)

2752 
	#GL_COMBINER1_NV
 0x8551

	)

2753 
	#GL_COMBINER2_NV
 0x8552

	)

2754 
	#GL_COMBINER3_NV
 0x8553

	)

2755 
	#GL_COMBINER4_NV
 0x8554

	)

2756 
	#GL_COMBINER5_NV
 0x8555

	)

2757 
	#GL_COMBINER6_NV
 0x8556

	)

2758 
	#GL_COMBINER7_NV
 0x8557

	)

2766 #i‚de‡
GL_NV_fog_di°™˚


2767 
	#GL_FOG_DISTANCE_MODE_NV
 0x855A

	)

2768 
	#GL_EYE_RADIAL_NV
 0x855B

	)

2769 
	#GL_EYE_PLANE_ABSOLUTE_NV
 0x855C

	)

2773 #i‚de‡
GL_NV_ãxgí_emboss


2774 
	#GL_EMBOSS_LIGHT_NV
 0x855D

	)

2775 
	#GL_EMBOSS_CONSTANT_NV
 0x855E

	)

2776 
	#GL_EMBOSS_MAP_NV
 0x855F

	)

2779 #i‚de‡
GL_NV_bÀnd_squ¨e


2782 #i‚de‡
GL_NV_ãxtuª_ív_comböe4


2783 
	#GL_COMBINE4_NV
 0x8503

	)

2784 
	#GL_SOURCE3_RGB_NV
 0x8583

	)

2785 
	#GL_SOURCE3_ALPHA_NV
 0x858B

	)

2786 
	#GL_OPERAND3_RGB_NV
 0x8593

	)

2787 
	#GL_OPERAND3_ALPHA_NV
 0x859B

	)

2790 #i‚de‡
GL_MESA_ªsize_buf„rs


2793 #i‚de‡
GL_MESA_wödow_pos


2796 #i‚de‡
GL_EXT_ãxtuª_com¥essi⁄_s3tc


2797 
	#GL_COMPRESSED_RGB_S3TC_DXT1_EXT
 0x83F0

	)

2798 
	#GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
 0x83F1

	)

2799 
	#GL_COMPRESSED_RGBA_S3TC_DXT3_EXT
 0x83F2

	)

2800 
	#GL_COMPRESSED_RGBA_S3TC_DXT5_EXT
 0x83F3

	)

2803 #i‚de‡
GL_IBM_cuŒ_vîãx


2804 
	#GL_CULL_VERTEX_IBM
 103050

	)

2807 #i‚de‡
GL_IBM_mu…imode_døw_¨øys


2810 #i‚de‡
GL_IBM_vîãx_¨øy_li°s


2811 
	#GL_VERTEX_ARRAY_LIST_IBM
 103070

	)

2812 
	#GL_NORMAL_ARRAY_LIST_IBM
 103071

	)

2813 
	#GL_COLOR_ARRAY_LIST_IBM
 103072

	)

2814 
	#GL_INDEX_ARRAY_LIST_IBM
 103073

	)

2815 
	#GL_TEXTURE_COORD_ARRAY_LIST_IBM
 103074

	)

2816 
	#GL_EDGE_FLAG_ARRAY_LIST_IBM
 103075

	)

2817 
	#GL_FOG_COORDINATE_ARRAY_LIST_IBM
 103076

	)

2818 
	#GL_SECONDARY_COLOR_ARRAY_LIST_IBM
 103077

	)

2819 
	#GL_VERTEX_ARRAY_LIST_STRIDE_IBM
 103080

	)

2820 
	#GL_NORMAL_ARRAY_LIST_STRIDE_IBM
 103081

	)

2821 
	#GL_COLOR_ARRAY_LIST_STRIDE_IBM
 103082

	)

2822 
	#GL_INDEX_ARRAY_LIST_STRIDE_IBM
 103083

	)

2823 
	#GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
 103084

	)

2824 
	#GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
 103085

	)

2825 
	#GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
 103086

	)

2826 
	#GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
 103087

	)

2829 #i‚de‡
GL_SGIX_subßm∂e


2830 
	#GL_PACK_SUBSAMPLE_RATE_SGIX
 0x85A0

	)

2831 
	#GL_UNPACK_SUBSAMPLE_RATE_SGIX
 0x85A1

	)

2832 
	#GL_PIXEL_SUBSAMPLE_4444_SGIX
 0x85A2

	)

2833 
	#GL_PIXEL_SUBSAMPLE_2424_SGIX
 0x85A3

	)

2834 
	#GL_PIXEL_SUBSAMPLE_4242_SGIX
 0x85A4

	)

2837 #i‚de‡
GL_SGIX_y¸cb_subßm∂e


2840 #i‚de‡
GL_SGIX_y¸cba


2841 
	#GL_YCRCB_SGIX
 0x8318

	)

2842 
	#GL_YCRCBA_SGIX
 0x8319

	)

2845 #i‚de‡
GL_SGI_dïth_∑ss_ö°rumít


2846 
	#GL_DEPTH_PASS_INSTRUMENT_SGIX
 0x8310

	)

2847 
	#GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX
 0x8311

	)

2848 
	#GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX
 0x8312

	)

2851 #i‚de‡
GL_3DFX_ãxtuª_com¥essi⁄_FXT1


2852 
	#GL_COMPRESSED_RGB_FXT1_3DFX
 0x86B0

	)

2853 
	#GL_COMPRESSED_RGBA_FXT1_3DFX
 0x86B1

	)

2856 #i‚de‡
GL_3DFX_mu…ißm∂e


2857 
	#GL_MULTISAMPLE_3DFX
 0x86B2

	)

2858 
	#GL_SAMPLE_BUFFERS_3DFX
 0x86B3

	)

2859 
	#GL_SAMPLES_3DFX
 0x86B4

	)

2860 
	#GL_MULTISAMPLE_BIT_3DFX
 0x20000000

	)

2863 #i‚de‡
GL_3DFX_tbuf„r


2866 #i‚de‡
GL_EXT_mu…ißm∂e


2867 
	#GL_MULTISAMPLE_EXT
 0x809D

	)

2868 
	#GL_SAMPLE_ALPHA_TO_MASK_EXT
 0x809E

	)

2869 
	#GL_SAMPLE_ALPHA_TO_ONE_EXT
 0x809F

	)

2870 
	#GL_SAMPLE_MASK_EXT
 0x80A0

	)

2871 
	#GL_1PASS_EXT
 0x80A1

	)

2872 
	#GL_2PASS_0_EXT
 0x80A2

	)

2873 
	#GL_2PASS_1_EXT
 0x80A3

	)

2874 
	#GL_4PASS_0_EXT
 0x80A4

	)

2875 
	#GL_4PASS_1_EXT
 0x80A5

	)

2876 
	#GL_4PASS_2_EXT
 0x80A6

	)

2877 
	#GL_4PASS_3_EXT
 0x80A7

	)

2878 
	#GL_SAMPLE_BUFFERS_EXT
 0x80A8

	)

2879 
	#GL_SAMPLES_EXT
 0x80A9

	)

2880 
	#GL_SAMPLE_MASK_VALUE_EXT
 0x80AA

	)

2881 
	#GL_SAMPLE_MASK_INVERT_EXT
 0x80AB

	)

2882 
	#GL_SAMPLE_PATTERN_EXT
 0x80AC

	)

2883 
	#GL_MULTISAMPLE_BIT_EXT
 0x20000000

	)

2886 #i‚de‡
GL_SGIX_vîãx_¥e˛ù


2887 
	#GL_VERTEX_PRECLIP_SGIX
 0x83EE

	)

2888 
	#GL_VERTEX_PRECLIP_HINT_SGIX
 0x83EF

	)

2891 #i‚de‡
GL_SGIX_c⁄vﬁuti⁄_accuøcy


2892 
	#GL_CONVOLUTION_HINT_SGIX
 0x8316

	)

2895 #i‚de‡
GL_SGIX_ªßm∂e


2896 
	#GL_PACK_RESAMPLE_SGIX
 0x842C

	)

2897 
	#GL_UNPACK_RESAMPLE_SGIX
 0x842D

	)

2898 
	#GL_RESAMPLE_REPLICATE_SGIX
 0x842E

	)

2899 
	#GL_RESAMPLE_ZERO_FILL_SGIX
 0x842F

	)

2900 
	#GL_RESAMPLE_DECIMATE_SGIX
 0x8430

	)

2903 #i‚de‡
GL_SGIS_poöt_löe_ãxgí


2904 
	#GL_EYE_DISTANCE_TO_POINT_SGIS
 0x81F0

	)

2905 
	#GL_OBJECT_DISTANCE_TO_POINT_SGIS
 0x81F1

	)

2906 
	#GL_EYE_DISTANCE_TO_LINE_SGIS
 0x81F2

	)

2907 
	#GL_OBJECT_DISTANCE_TO_LINE_SGIS
 0x81F3

	)

2908 
	#GL_EYE_POINT_SGIS
 0x81F4

	)

2909 
	#GL_OBJECT_POINT_SGIS
 0x81F5

	)

2910 
	#GL_EYE_LINE_SGIS
 0x81F6

	)

2911 
	#GL_OBJECT_LINE_SGIS
 0x81F7

	)

2914 #i‚de‡
GL_SGIS_ãxtuª_cﬁ‹_mask


2915 
	#GL_TEXTURE_COLOR_WRITEMASK_SGIS
 0x81EF

	)

2918 #i‚de‡
GL_EXT_ãxtuª_ív_dŸ3


2919 
	#GL_DOT3_RGB_EXT
 0x8740

	)

2920 
	#GL_DOT3_RGBA_EXT
 0x8741

	)

2923 #i‚de‡
GL_ATI_ãxtuª_múr‹_⁄˚


2924 
	#GL_MIRROR_CLAMP_ATI
 0x8742

	)

2925 
	#GL_MIRROR_CLAMP_TO_EDGE_ATI
 0x8743

	)

2928 #i‚de‡
GL_NV_„n˚


2929 
	#GL_ALL_COMPLETED_NV
 0x84F2

	)

2930 
	#GL_FENCE_STATUS_NV
 0x84F3

	)

2931 
	#GL_FENCE_CONDITION_NV
 0x84F4

	)

2934 #i‚de‡
GL_IBM_ãxtuª_múr‹ed_ª≥©


2935 
	#GL_MIRRORED_REPEAT_IBM
 0x8370

	)

2938 #i‚de‡
GL_NV_evÆu©‹s


2939 
	#GL_EVAL_2D_NV
 0x86C0

	)

2940 
	#GL_EVAL_TRIANGULAR_2D_NV
 0x86C1

	)

2941 
	#GL_MAP_TESSELLATION_NV
 0x86C2

	)

2942 
	#GL_MAP_ATTRIB_U_ORDER_NV
 0x86C3

	)

2943 
	#GL_MAP_ATTRIB_V_ORDER_NV
 0x86C4

	)

2944 
	#GL_EVAL_FRACTIONAL_TESSELLATION_NV
 0x86C5

	)

2945 
	#GL_EVAL_VERTEX_ATTRIB0_NV
 0x86C6

	)

2946 
	#GL_EVAL_VERTEX_ATTRIB1_NV
 0x86C7

	)

2947 
	#GL_EVAL_VERTEX_ATTRIB2_NV
 0x86C8

	)

2948 
	#GL_EVAL_VERTEX_ATTRIB3_NV
 0x86C9

	)

2949 
	#GL_EVAL_VERTEX_ATTRIB4_NV
 0x86CA

	)

2950 
	#GL_EVAL_VERTEX_ATTRIB5_NV
 0x86CB

	)

2951 
	#GL_EVAL_VERTEX_ATTRIB6_NV
 0x86CC

	)

2952 
	#GL_EVAL_VERTEX_ATTRIB7_NV
 0x86CD

	)

2953 
	#GL_EVAL_VERTEX_ATTRIB8_NV
 0x86CE

	)

2954 
	#GL_EVAL_VERTEX_ATTRIB9_NV
 0x86CF

	)

2955 
	#GL_EVAL_VERTEX_ATTRIB10_NV
 0x86D0

	)

2956 
	#GL_EVAL_VERTEX_ATTRIB11_NV
 0x86D1

	)

2957 
	#GL_EVAL_VERTEX_ATTRIB12_NV
 0x86D2

	)

2958 
	#GL_EVAL_VERTEX_ATTRIB13_NV
 0x86D3

	)

2959 
	#GL_EVAL_VERTEX_ATTRIB14_NV
 0x86D4

	)

2960 
	#GL_EVAL_VERTEX_ATTRIB15_NV
 0x86D5

	)

2961 
	#GL_MAX_MAP_TESSELLATION_NV
 0x86D6

	)

2962 
	#GL_MAX_RATIONAL_EVAL_ORDER_NV
 0x86D7

	)

2965 #i‚de‡
GL_NV_∑cked_dïth_°ícû


2966 
	#GL_DEPTH_STENCIL_NV
 0x84F9

	)

2967 
	#GL_UNSIGNED_INT_24_8_NV
 0x84FA

	)

2970 #i‚de‡
GL_NV_ªgi°î_comböîs2


2971 
	#GL_PER_STAGE_CONSTANTS_NV
 0x8535

	)

2974 #i‚de‡
GL_NV_ãxtuª_com¥essi⁄_vtc


2977 #i‚de‡
GL_NV_ãxtuª_ª˘™gÀ


2978 
	#GL_TEXTURE_RECTANGLE_NV
 0x84F5

	)

2979 
	#GL_TEXTURE_BINDING_RECTANGLE_NV
 0x84F6

	)

2980 
	#GL_PROXY_TEXTURE_RECTANGLE_NV
 0x84F7

	)

2981 
	#GL_MAX_RECTANGLE_TEXTURE_SIZE_NV
 0x84F8

	)

2984 #i‚de‡
GL_NV_ãxtuª_shadî


2985 
	#GL_OFFSET_TEXTURE_RECTANGLE_NV
 0x864C

	)

2986 
	#GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV
 0x864D

	)

2987 
	#GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV
 0x864E

	)

2988 
	#GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV
 0x86D9

	)

2989 
	#GL_UNSIGNED_INT_S8_S8_8_8_NV
 0x86DA

	)

2990 
	#GL_UNSIGNED_INT_8_8_S8_S8_REV_NV
 0x86DB

	)

2991 
	#GL_DSDT_MAG_INTENSITY_NV
 0x86DC

	)

2992 
	#GL_SHADER_CONSISTENT_NV
 0x86DD

	)

2993 
	#GL_TEXTURE_SHADER_NV
 0x86DE

	)

2994 
	#GL_SHADER_OPERATION_NV
 0x86DF

	)

2995 
	#GL_CULL_MODES_NV
 0x86E0

	)

2996 
	#GL_OFFSET_TEXTURE_MATRIX_NV
 0x86E1

	)

2997 
	#GL_OFFSET_TEXTURE_SCALE_NV
 0x86E2

	)

2998 
	#GL_OFFSET_TEXTURE_BIAS_NV
 0x86E3

	)

2999 
	#GL_OFFSET_TEXTURE_2D_MATRIX_NV
 
GL_OFFSET_TEXTURE_MATRIX_NV


	)

3000 
	#GL_OFFSET_TEXTURE_2D_SCALE_NV
 
GL_OFFSET_TEXTURE_SCALE_NV


	)

3001 
	#GL_OFFSET_TEXTURE_2D_BIAS_NV
 
GL_OFFSET_TEXTURE_BIAS_NV


	)

3002 
	#GL_PREVIOUS_TEXTURE_INPUT_NV
 0x86E4

	)

3003 
	#GL_CONST_EYE_NV
 0x86E5

	)

3004 
	#GL_PASS_THROUGH_NV
 0x86E6

	)

3005 
	#GL_CULL_FRAGMENT_NV
 0x86E7

	)

3006 
	#GL_OFFSET_TEXTURE_2D_NV
 0x86E8

	)

3007 
	#GL_DEPENDENT_AR_TEXTURE_2D_NV
 0x86E9

	)

3008 
	#GL_DEPENDENT_GB_TEXTURE_2D_NV
 0x86EA

	)

3009 
	#GL_DOT_PRODUCT_NV
 0x86EC

	)

3010 
	#GL_DOT_PRODUCT_DEPTH_REPLACE_NV
 0x86ED

	)

3011 
	#GL_DOT_PRODUCT_TEXTURE_2D_NV
 0x86EE

	)

3012 
	#GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV
 0x86F0

	)

3013 
	#GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV
 0x86F1

	)

3014 
	#GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV
 0x86F2

	)

3015 
	#GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV
 0x86F3

	)

3016 
	#GL_HILO_NV
 0x86F4

	)

3017 
	#GL_DSDT_NV
 0x86F5

	)

3018 
	#GL_DSDT_MAG_NV
 0x86F6

	)

3019 
	#GL_DSDT_MAG_VIB_NV
 0x86F7

	)

3020 
	#GL_HILO16_NV
 0x86F8

	)

3021 
	#GL_SIGNED_HILO_NV
 0x86F9

	)

3022 
	#GL_SIGNED_HILO16_NV
 0x86FA

	)

3023 
	#GL_SIGNED_RGBA_NV
 0x86FB

	)

3024 
	#GL_SIGNED_RGBA8_NV
 0x86FC

	)

3025 
	#GL_SIGNED_RGB_NV
 0x86FE

	)

3026 
	#GL_SIGNED_RGB8_NV
 0x86FF

	)

3027 
	#GL_SIGNED_LUMINANCE_NV
 0x8701

	)

3028 
	#GL_SIGNED_LUMINANCE8_NV
 0x8702

	)

3029 
	#GL_SIGNED_LUMINANCE_ALPHA_NV
 0x8703

	)

3030 
	#GL_SIGNED_LUMINANCE8_ALPHA8_NV
 0x8704

	)

3031 
	#GL_SIGNED_ALPHA_NV
 0x8705

	)

3032 
	#GL_SIGNED_ALPHA8_NV
 0x8706

	)

3033 
	#GL_SIGNED_INTENSITY_NV
 0x8707

	)

3034 
	#GL_SIGNED_INTENSITY8_NV
 0x8708

	)

3035 
	#GL_DSDT8_NV
 0x8709

	)

3036 
	#GL_DSDT8_MAG8_NV
 0x870A

	)

3037 
	#GL_DSDT8_MAG8_INTENSITY8_NV
 0x870B

	)

3038 
	#GL_SIGNED_RGB_UNSIGNED_ALPHA_NV
 0x870C

	)

3039 
	#GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV
 0x870D

	)

3040 
	#GL_HI_SCALE_NV
 0x870E

	)

3041 
	#GL_LO_SCALE_NV
 0x870F

	)

3042 
	#GL_DS_SCALE_NV
 0x8710

	)

3043 
	#GL_DT_SCALE_NV
 0x8711

	)

3044 
	#GL_MAGNITUDE_SCALE_NV
 0x8712

	)

3045 
	#GL_VIBRANCE_SCALE_NV
 0x8713

	)

3046 
	#GL_HI_BIAS_NV
 0x8714

	)

3047 
	#GL_LO_BIAS_NV
 0x8715

	)

3048 
	#GL_DS_BIAS_NV
 0x8716

	)

3049 
	#GL_DT_BIAS_NV
 0x8717

	)

3050 
	#GL_MAGNITUDE_BIAS_NV
 0x8718

	)

3051 
	#GL_VIBRANCE_BIAS_NV
 0x8719

	)

3052 
	#GL_TEXTURE_BORDER_VALUES_NV
 0x871A

	)

3053 
	#GL_TEXTURE_HI_SIZE_NV
 0x871B

	)

3054 
	#GL_TEXTURE_LO_SIZE_NV
 0x871C

	)

3055 
	#GL_TEXTURE_DS_SIZE_NV
 0x871D

	)

3056 
	#GL_TEXTURE_DT_SIZE_NV
 0x871E

	)

3057 
	#GL_TEXTURE_MAG_SIZE_NV
 0x871F

	)

3060 #i‚de‡
GL_NV_ãxtuª_shadî2


3061 
	#GL_DOT_PRODUCT_TEXTURE_3D_NV
 0x86EF

	)

3064 #i‚de‡
GL_NV_vîãx_¨øy_ønge2


3065 
	#GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV
 0x8533

	)

3068 #i‚de‡
GL_NV_vîãx_¥ogøm


3069 
	#GL_VERTEX_PROGRAM_NV
 0x8620

	)

3070 
	#GL_VERTEX_STATE_PROGRAM_NV
 0x8621

	)

3071 
	#GL_ATTRIB_ARRAY_SIZE_NV
 0x8623

	)

3072 
	#GL_ATTRIB_ARRAY_STRIDE_NV
 0x8624

	)

3073 
	#GL_ATTRIB_ARRAY_TYPE_NV
 0x8625

	)

3074 
	#GL_CURRENT_ATTRIB_NV
 0x8626

	)

3075 
	#GL_PROGRAM_LENGTH_NV
 0x8627

	)

3076 
	#GL_PROGRAM_STRING_NV
 0x8628

	)

3077 
	#GL_MODELVIEW_PROJECTION_NV
 0x8629

	)

3078 
	#GL_IDENTITY_NV
 0x862A

	)

3079 
	#GL_INVERSE_NV
 0x862B

	)

3080 
	#GL_TRANSPOSE_NV
 0x862C

	)

3081 
	#GL_INVERSE_TRANSPOSE_NV
 0x862D

	)

3082 
	#GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV
 0x862E

	)

3083 
	#GL_MAX_TRACK_MATRICES_NV
 0x862F

	)

3084 
	#GL_MATRIX0_NV
 0x8630

	)

3085 
	#GL_MATRIX1_NV
 0x8631

	)

3086 
	#GL_MATRIX2_NV
 0x8632

	)

3087 
	#GL_MATRIX3_NV
 0x8633

	)

3088 
	#GL_MATRIX4_NV
 0x8634

	)

3089 
	#GL_MATRIX5_NV
 0x8635

	)

3090 
	#GL_MATRIX6_NV
 0x8636

	)

3091 
	#GL_MATRIX7_NV
 0x8637

	)

3092 
	#GL_CURRENT_MATRIX_STACK_DEPTH_NV
 0x8640

	)

3093 
	#GL_CURRENT_MATRIX_NV
 0x8641

	)

3094 
	#GL_VERTEX_PROGRAM_POINT_SIZE_NV
 0x8642

	)

3095 
	#GL_VERTEX_PROGRAM_TWO_SIDE_NV
 0x8643

	)

3096 
	#GL_PROGRAM_PARAMETER_NV
 0x8644

	)

3097 
	#GL_ATTRIB_ARRAY_POINTER_NV
 0x8645

	)

3098 
	#GL_PROGRAM_TARGET_NV
 0x8646

	)

3099 
	#GL_PROGRAM_RESIDENT_NV
 0x8647

	)

3100 
	#GL_TRACK_MATRIX_NV
 0x8648

	)

3101 
	#GL_TRACK_MATRIX_TRANSFORM_NV
 0x8649

	)

3102 
	#GL_VERTEX_PROGRAM_BINDING_NV
 0x864A

	)

3103 
	#GL_PROGRAM_ERROR_POSITION_NV
 0x864B

	)

3104 
	#GL_VERTEX_ATTRIB_ARRAY0_NV
 0x8650

	)

3105 
	#GL_VERTEX_ATTRIB_ARRAY1_NV
 0x8651

	)

3106 
	#GL_VERTEX_ATTRIB_ARRAY2_NV
 0x8652

	)

3107 
	#GL_VERTEX_ATTRIB_ARRAY3_NV
 0x8653

	)

3108 
	#GL_VERTEX_ATTRIB_ARRAY4_NV
 0x8654

	)

3109 
	#GL_VERTEX_ATTRIB_ARRAY5_NV
 0x8655

	)

3110 
	#GL_VERTEX_ATTRIB_ARRAY6_NV
 0x8656

	)

3111 
	#GL_VERTEX_ATTRIB_ARRAY7_NV
 0x8657

	)

3112 
	#GL_VERTEX_ATTRIB_ARRAY8_NV
 0x8658

	)

3113 
	#GL_VERTEX_ATTRIB_ARRAY9_NV
 0x8659

	)

3114 
	#GL_VERTEX_ATTRIB_ARRAY10_NV
 0x865A

	)

3115 
	#GL_VERTEX_ATTRIB_ARRAY11_NV
 0x865B

	)

3116 
	#GL_VERTEX_ATTRIB_ARRAY12_NV
 0x865C

	)

3117 
	#GL_VERTEX_ATTRIB_ARRAY13_NV
 0x865D

	)

3118 
	#GL_VERTEX_ATTRIB_ARRAY14_NV
 0x865E

	)

3119 
	#GL_VERTEX_ATTRIB_ARRAY15_NV
 0x865F

	)

3120 
	#GL_MAP1_VERTEX_ATTRIB0_4_NV
 0x8660

	)

3121 
	#GL_MAP1_VERTEX_ATTRIB1_4_NV
 0x8661

	)

3122 
	#GL_MAP1_VERTEX_ATTRIB2_4_NV
 0x8662

	)

3123 
	#GL_MAP1_VERTEX_ATTRIB3_4_NV
 0x8663

	)

3124 
	#GL_MAP1_VERTEX_ATTRIB4_4_NV
 0x8664

	)

3125 
	#GL_MAP1_VERTEX_ATTRIB5_4_NV
 0x8665

	)

3126 
	#GL_MAP1_VERTEX_ATTRIB6_4_NV
 0x8666

	)

3127 
	#GL_MAP1_VERTEX_ATTRIB7_4_NV
 0x8667

	)

3128 
	#GL_MAP1_VERTEX_ATTRIB8_4_NV
 0x8668

	)

3129 
	#GL_MAP1_VERTEX_ATTRIB9_4_NV
 0x8669

	)

3130 
	#GL_MAP1_VERTEX_ATTRIB10_4_NV
 0x866A

	)

3131 
	#GL_MAP1_VERTEX_ATTRIB11_4_NV
 0x866B

	)

3132 
	#GL_MAP1_VERTEX_ATTRIB12_4_NV
 0x866C

	)

3133 
	#GL_MAP1_VERTEX_ATTRIB13_4_NV
 0x866D

	)

3134 
	#GL_MAP1_VERTEX_ATTRIB14_4_NV
 0x866E

	)

3135 
	#GL_MAP1_VERTEX_ATTRIB15_4_NV
 0x866F

	)

3136 
	#GL_MAP2_VERTEX_ATTRIB0_4_NV
 0x8670

	)

3137 
	#GL_MAP2_VERTEX_ATTRIB1_4_NV
 0x8671

	)

3138 
	#GL_MAP2_VERTEX_ATTRIB2_4_NV
 0x8672

	)

3139 
	#GL_MAP2_VERTEX_ATTRIB3_4_NV
 0x8673

	)

3140 
	#GL_MAP2_VERTEX_ATTRIB4_4_NV
 0x8674

	)

3141 
	#GL_MAP2_VERTEX_ATTRIB5_4_NV
 0x8675

	)

3142 
	#GL_MAP2_VERTEX_ATTRIB6_4_NV
 0x8676

	)

3143 
	#GL_MAP2_VERTEX_ATTRIB7_4_NV
 0x8677

	)

3144 
	#GL_MAP2_VERTEX_ATTRIB8_4_NV
 0x8678

	)

3145 
	#GL_MAP2_VERTEX_ATTRIB9_4_NV
 0x8679

	)

3146 
	#GL_MAP2_VERTEX_ATTRIB10_4_NV
 0x867A

	)

3147 
	#GL_MAP2_VERTEX_ATTRIB11_4_NV
 0x867B

	)

3148 
	#GL_MAP2_VERTEX_ATTRIB12_4_NV
 0x867C

	)

3149 
	#GL_MAP2_VERTEX_ATTRIB13_4_NV
 0x867D

	)

3150 
	#GL_MAP2_VERTEX_ATTRIB14_4_NV
 0x867E

	)

3151 
	#GL_MAP2_VERTEX_ATTRIB15_4_NV
 0x867F

	)

3154 #i‚de‡
GL_SGIX_ãxtuª_co‹dö©e_˛amp


3155 
	#GL_TEXTURE_MAX_CLAMP_S_SGIX
 0x8369

	)

3156 
	#GL_TEXTURE_MAX_CLAMP_T_SGIX
 0x836A

	)

3157 
	#GL_TEXTURE_MAX_CLAMP_R_SGIX
 0x836B

	)

3160 #i‚de‡
GL_SGIX_sˇÀbüs_höt


3161 
	#GL_SCALEBIAS_HINT_SGIX
 0x8322

	)

3164 #i‚de‡
GL_OML_öãæa˚


3165 
	#GL_INTERLACE_OML
 0x8980

	)

3166 
	#GL_INTERLACE_READ_OML
 0x8981

	)

3169 #i‚de‡
GL_OML_subßm∂e


3170 
	#GL_FORMAT_SUBSAMPLE_24_24_OML
 0x8982

	)

3171 
	#GL_FORMAT_SUBSAMPLE_244_244_OML
 0x8983

	)

3174 #i‚de‡
GL_OML_ªßm∂e


3175 
	#GL_PACK_RESAMPLE_OML
 0x8984

	)

3176 
	#GL_UNPACK_RESAMPLE_OML
 0x8985

	)

3177 
	#GL_RESAMPLE_REPLICATE_OML
 0x8986

	)

3178 
	#GL_RESAMPLE_ZERO_FILL_OML
 0x8987

	)

3179 
	#GL_RESAMPLE_AVERAGE_OML
 0x8988

	)

3180 
	#GL_RESAMPLE_DECIMATE_OML
 0x8989

	)

3183 #i‚de‡
GL_NV_c›y_dïth_to_cﬁ‹


3184 
	#GL_DEPTH_STENCIL_TO_RGBA_NV
 0x886E

	)

3185 
	#GL_DEPTH_STENCIL_TO_BGRA_NV
 0x886F

	)

3188 #i‚de‡
GL_ATI_ívm≠_bumpm≠


3189 
	#GL_BUMP_ROT_MATRIX_ATI
 0x8775

	)

3190 
	#GL_BUMP_ROT_MATRIX_SIZE_ATI
 0x8776

	)

3191 
	#GL_BUMP_NUM_TEX_UNITS_ATI
 0x8777

	)

3192 
	#GL_BUMP_TEX_UNITS_ATI
 0x8778

	)

3193 
	#GL_DUDV_ATI
 0x8779

	)

3194 
	#GL_DU8DV8_ATI
 0x877A

	)

3195 
	#GL_BUMP_ENVMAP_ATI
 0x877B

	)

3196 
	#GL_BUMP_TARGET_ATI
 0x877C

	)

3199 #i‚de‡
GL_ATI_‰agmít_shadî


3200 
	#GL_FRAGMENT_SHADER_ATI
 0x8920

	)

3201 
	#GL_REG_0_ATI
 0x8921

	)

3202 
	#GL_REG_1_ATI
 0x8922

	)

3203 
	#GL_REG_2_ATI
 0x8923

	)

3204 
	#GL_REG_3_ATI
 0x8924

	)

3205 
	#GL_REG_4_ATI
 0x8925

	)

3206 
	#GL_REG_5_ATI
 0x8926

	)

3207 
	#GL_REG_6_ATI
 0x8927

	)

3208 
	#GL_REG_7_ATI
 0x8928

	)

3209 
	#GL_REG_8_ATI
 0x8929

	)

3210 
	#GL_REG_9_ATI
 0x892A

	)

3211 
	#GL_REG_10_ATI
 0x892B

	)

3212 
	#GL_REG_11_ATI
 0x892C

	)

3213 
	#GL_REG_12_ATI
 0x892D

	)

3214 
	#GL_REG_13_ATI
 0x892E

	)

3215 
	#GL_REG_14_ATI
 0x892F

	)

3216 
	#GL_REG_15_ATI
 0x8930

	)

3217 
	#GL_REG_16_ATI
 0x8931

	)

3218 
	#GL_REG_17_ATI
 0x8932

	)

3219 
	#GL_REG_18_ATI
 0x8933

	)

3220 
	#GL_REG_19_ATI
 0x8934

	)

3221 
	#GL_REG_20_ATI
 0x8935

	)

3222 
	#GL_REG_21_ATI
 0x8936

	)

3223 
	#GL_REG_22_ATI
 0x8937

	)

3224 
	#GL_REG_23_ATI
 0x8938

	)

3225 
	#GL_REG_24_ATI
 0x8939

	)

3226 
	#GL_REG_25_ATI
 0x893A

	)

3227 
	#GL_REG_26_ATI
 0x893B

	)

3228 
	#GL_REG_27_ATI
 0x893C

	)

3229 
	#GL_REG_28_ATI
 0x893D

	)

3230 
	#GL_REG_29_ATI
 0x893E

	)

3231 
	#GL_REG_30_ATI
 0x893F

	)

3232 
	#GL_REG_31_ATI
 0x8940

	)

3233 
	#GL_CON_0_ATI
 0x8941

	)

3234 
	#GL_CON_1_ATI
 0x8942

	)

3235 
	#GL_CON_2_ATI
 0x8943

	)

3236 
	#GL_CON_3_ATI
 0x8944

	)

3237 
	#GL_CON_4_ATI
 0x8945

	)

3238 
	#GL_CON_5_ATI
 0x8946

	)

3239 
	#GL_CON_6_ATI
 0x8947

	)

3240 
	#GL_CON_7_ATI
 0x8948

	)

3241 
	#GL_CON_8_ATI
 0x8949

	)

3242 
	#GL_CON_9_ATI
 0x894A

	)

3243 
	#GL_CON_10_ATI
 0x894B

	)

3244 
	#GL_CON_11_ATI
 0x894C

	)

3245 
	#GL_CON_12_ATI
 0x894D

	)

3246 
	#GL_CON_13_ATI
 0x894E

	)

3247 
	#GL_CON_14_ATI
 0x894F

	)

3248 
	#GL_CON_15_ATI
 0x8950

	)

3249 
	#GL_CON_16_ATI
 0x8951

	)

3250 
	#GL_CON_17_ATI
 0x8952

	)

3251 
	#GL_CON_18_ATI
 0x8953

	)

3252 
	#GL_CON_19_ATI
 0x8954

	)

3253 
	#GL_CON_20_ATI
 0x8955

	)

3254 
	#GL_CON_21_ATI
 0x8956

	)

3255 
	#GL_CON_22_ATI
 0x8957

	)

3256 
	#GL_CON_23_ATI
 0x8958

	)

3257 
	#GL_CON_24_ATI
 0x8959

	)

3258 
	#GL_CON_25_ATI
 0x895A

	)

3259 
	#GL_CON_26_ATI
 0x895B

	)

3260 
	#GL_CON_27_ATI
 0x895C

	)

3261 
	#GL_CON_28_ATI
 0x895D

	)

3262 
	#GL_CON_29_ATI
 0x895E

	)

3263 
	#GL_CON_30_ATI
 0x895F

	)

3264 
	#GL_CON_31_ATI
 0x8960

	)

3265 
	#GL_MOV_ATI
 0x8961

	)

3266 
	#GL_ADD_ATI
 0x8963

	)

3267 
	#GL_MUL_ATI
 0x8964

	)

3268 
	#GL_SUB_ATI
 0x8965

	)

3269 
	#GL_DOT3_ATI
 0x8966

	)

3270 
	#GL_DOT4_ATI
 0x8967

	)

3271 
	#GL_MAD_ATI
 0x8968

	)

3272 
	#GL_LERP_ATI
 0x8969

	)

3273 
	#GL_CND_ATI
 0x896A

	)

3274 
	#GL_CND0_ATI
 0x896B

	)

3275 
	#GL_DOT2_ADD_ATI
 0x896C

	)

3276 
	#GL_SECONDARY_INTERPOLATOR_ATI
 0x896D

	)

3277 
	#GL_NUM_FRAGMENT_REGISTERS_ATI
 0x896E

	)

3278 
	#GL_NUM_FRAGMENT_CONSTANTS_ATI
 0x896F

	)

3279 
	#GL_NUM_PASSES_ATI
 0x8970

	)

3280 
	#GL_NUM_INSTRUCTIONS_PER_PASS_ATI
 0x8971

	)

3281 
	#GL_NUM_INSTRUCTIONS_TOTAL_ATI
 0x8972

	)

3282 
	#GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI
 0x8973

	)

3283 
	#GL_NUM_LOOPBACK_COMPONENTS_ATI
 0x8974

	)

3284 
	#GL_COLOR_ALPHA_PAIRING_ATI
 0x8975

	)

3285 
	#GL_SWIZZLE_STR_ATI
 0x8976

	)

3286 
	#GL_SWIZZLE_STQ_ATI
 0x8977

	)

3287 
	#GL_SWIZZLE_STR_DR_ATI
 0x8978

	)

3288 
	#GL_SWIZZLE_STQ_DQ_ATI
 0x8979

	)

3289 
	#GL_SWIZZLE_STRQ_ATI
 0x897A

	)

3290 
	#GL_SWIZZLE_STRQ_DQ_ATI
 0x897B

	)

3291 
	#GL_RED_BIT_ATI
 0x00000001

	)

3292 
	#GL_GREEN_BIT_ATI
 0x00000002

	)

3293 
	#GL_BLUE_BIT_ATI
 0x00000004

	)

3294 
	#GL_2X_BIT_ATI
 0x00000001

	)

3295 
	#GL_4X_BIT_ATI
 0x00000002

	)

3296 
	#GL_8X_BIT_ATI
 0x00000004

	)

3297 
	#GL_HALF_BIT_ATI
 0x00000008

	)

3298 
	#GL_QUARTER_BIT_ATI
 0x00000010

	)

3299 
	#GL_EIGHTH_BIT_ATI
 0x00000020

	)

3300 
	#GL_SATURATE_BIT_ATI
 0x00000040

	)

3301 
	#GL_COMP_BIT_ATI
 0x00000002

	)

3302 
	#GL_NEGATE_BIT_ATI
 0x00000004

	)

3303 
	#GL_BIAS_BIT_ATI
 0x00000008

	)

3306 #i‚de‡
GL_ATI_≤_åüngÀs


3307 
	#GL_PN_TRIANGLES_ATI
 0x87F0

	)

3308 
	#GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI
 0x87F1

	)

3309 
	#GL_PN_TRIANGLES_POINT_MODE_ATI
 0x87F2

	)

3310 
	#GL_PN_TRIANGLES_NORMAL_MODE_ATI
 0x87F3

	)

3311 
	#GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI
 0x87F4

	)

3312 
	#GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI
 0x87F5

	)

3313 
	#GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI
 0x87F6

	)

3314 
	#GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI
 0x87F7

	)

3315 
	#GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI
 0x87F8

	)

3318 #i‚de‡
GL_ATI_vîãx_¨øy_obje˘


3319 
	#GL_STATIC_ATI
 0x8760

	)

3320 
	#GL_DYNAMIC_ATI
 0x8761

	)

3321 
	#GL_PRESERVE_ATI
 0x8762

	)

3322 
	#GL_DISCARD_ATI
 0x8763

	)

3323 
	#GL_OBJECT_BUFFER_SIZE_ATI
 0x8764

	)

3324 
	#GL_OBJECT_BUFFER_USAGE_ATI
 0x8765

	)

3325 
	#GL_ARRAY_OBJECT_BUFFER_ATI
 0x8766

	)

3326 
	#GL_ARRAY_OBJECT_OFFSET_ATI
 0x8767

	)

3329 #i‚de‡
GL_EXT_vîãx_shadî


3330 
	#GL_VERTEX_SHADER_EXT
 0x8780

	)

3331 
	#GL_VERTEX_SHADER_BINDING_EXT
 0x8781

	)

3332 
	#GL_OP_INDEX_EXT
 0x8782

	)

3333 
	#GL_OP_NEGATE_EXT
 0x8783

	)

3334 
	#GL_OP_DOT3_EXT
 0x8784

	)

3335 
	#GL_OP_DOT4_EXT
 0x8785

	)

3336 
	#GL_OP_MUL_EXT
 0x8786

	)

3337 
	#GL_OP_ADD_EXT
 0x8787

	)

3338 
	#GL_OP_MADD_EXT
 0x8788

	)

3339 
	#GL_OP_FRAC_EXT
 0x8789

	)

3340 
	#GL_OP_MAX_EXT
 0x878A

	)

3341 
	#GL_OP_MIN_EXT
 0x878B

	)

3342 
	#GL_OP_SET_GE_EXT
 0x878C

	)

3343 
	#GL_OP_SET_LT_EXT
 0x878D

	)

3344 
	#GL_OP_CLAMP_EXT
 0x878E

	)

3345 
	#GL_OP_FLOOR_EXT
 0x878F

	)

3346 
	#GL_OP_ROUND_EXT
 0x8790

	)

3347 
	#GL_OP_EXP_BASE_2_EXT
 0x8791

	)

3348 
	#GL_OP_LOG_BASE_2_EXT
 0x8792

	)

3349 
	#GL_OP_POWER_EXT
 0x8793

	)

3350 
	#GL_OP_RECIP_EXT
 0x8794

	)

3351 
	#GL_OP_RECIP_SQRT_EXT
 0x8795

	)

3352 
	#GL_OP_SUB_EXT
 0x8796

	)

3353 
	#GL_OP_CROSS_PRODUCT_EXT
 0x8797

	)

3354 
	#GL_OP_MULTIPLY_MATRIX_EXT
 0x8798

	)

3355 
	#GL_OP_MOV_EXT
 0x8799

	)

3356 
	#GL_OUTPUT_VERTEX_EXT
 0x879A

	)

3357 
	#GL_OUTPUT_COLOR0_EXT
 0x879B

	)

3358 
	#GL_OUTPUT_COLOR1_EXT
 0x879C

	)

3359 
	#GL_OUTPUT_TEXTURE_COORD0_EXT
 0x879D

	)

3360 
	#GL_OUTPUT_TEXTURE_COORD1_EXT
 0x879E

	)

3361 
	#GL_OUTPUT_TEXTURE_COORD2_EXT
 0x879F

	)

3362 
	#GL_OUTPUT_TEXTURE_COORD3_EXT
 0x87A0

	)

3363 
	#GL_OUTPUT_TEXTURE_COORD4_EXT
 0x87A1

	)

3364 
	#GL_OUTPUT_TEXTURE_COORD5_EXT
 0x87A2

	)

3365 
	#GL_OUTPUT_TEXTURE_COORD6_EXT
 0x87A3

	)

3366 
	#GL_OUTPUT_TEXTURE_COORD7_EXT
 0x87A4

	)

3367 
	#GL_OUTPUT_TEXTURE_COORD8_EXT
 0x87A5

	)

3368 
	#GL_OUTPUT_TEXTURE_COORD9_EXT
 0x87A6

	)

3369 
	#GL_OUTPUT_TEXTURE_COORD10_EXT
 0x87A7

	)

3370 
	#GL_OUTPUT_TEXTURE_COORD11_EXT
 0x87A8

	)

3371 
	#GL_OUTPUT_TEXTURE_COORD12_EXT
 0x87A9

	)

3372 
	#GL_OUTPUT_TEXTURE_COORD13_EXT
 0x87AA

	)

3373 
	#GL_OUTPUT_TEXTURE_COORD14_EXT
 0x87AB

	)

3374 
	#GL_OUTPUT_TEXTURE_COORD15_EXT
 0x87AC

	)

3375 
	#GL_OUTPUT_TEXTURE_COORD16_EXT
 0x87AD

	)

3376 
	#GL_OUTPUT_TEXTURE_COORD17_EXT
 0x87AE

	)

3377 
	#GL_OUTPUT_TEXTURE_COORD18_EXT
 0x87AF

	)

3378 
	#GL_OUTPUT_TEXTURE_COORD19_EXT
 0x87B0

	)

3379 
	#GL_OUTPUT_TEXTURE_COORD20_EXT
 0x87B1

	)

3380 
	#GL_OUTPUT_TEXTURE_COORD21_EXT
 0x87B2

	)

3381 
	#GL_OUTPUT_TEXTURE_COORD22_EXT
 0x87B3

	)

3382 
	#GL_OUTPUT_TEXTURE_COORD23_EXT
 0x87B4

	)

3383 
	#GL_OUTPUT_TEXTURE_COORD24_EXT
 0x87B5

	)

3384 
	#GL_OUTPUT_TEXTURE_COORD25_EXT
 0x87B6

	)

3385 
	#GL_OUTPUT_TEXTURE_COORD26_EXT
 0x87B7

	)

3386 
	#GL_OUTPUT_TEXTURE_COORD27_EXT
 0x87B8

	)

3387 
	#GL_OUTPUT_TEXTURE_COORD28_EXT
 0x87B9

	)

3388 
	#GL_OUTPUT_TEXTURE_COORD29_EXT
 0x87BA

	)

3389 
	#GL_OUTPUT_TEXTURE_COORD30_EXT
 0x87BB

	)

3390 
	#GL_OUTPUT_TEXTURE_COORD31_EXT
 0x87BC

	)

3391 
	#GL_OUTPUT_FOG_EXT
 0x87BD

	)

3392 
	#GL_SCALAR_EXT
 0x87BE

	)

3393 
	#GL_VECTOR_EXT
 0x87BF

	)

3394 
	#GL_MATRIX_EXT
 0x87C0

	)

3395 
	#GL_VARIANT_EXT
 0x87C1

	)

3396 
	#GL_INVARIANT_EXT
 0x87C2

	)

3397 
	#GL_LOCAL_CONSTANT_EXT
 0x87C3

	)

3398 
	#GL_LOCAL_EXT
 0x87C4

	)

3399 
	#GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT
 0x87C5

	)

3400 
	#GL_MAX_VERTEX_SHADER_VARIANTS_EXT
 0x87C6

	)

3401 
	#GL_MAX_VERTEX_SHADER_INVARIANTS_EXT
 0x87C7

	)

3402 
	#GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
 0x87C8

	)

3403 
	#GL_MAX_VERTEX_SHADER_LOCALS_EXT
 0x87C9

	)

3404 
	#GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT
 0x87CA

	)

3405 
	#GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT
 0x87CB

	)

3406 
	#GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
 0x87CC

	)

3407 
	#GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT
 0x87CD

	)

3408 
	#GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT
 0x87CE

	)

3409 
	#GL_VERTEX_SHADER_INSTRUCTIONS_EXT
 0x87CF

	)

3410 
	#GL_VERTEX_SHADER_VARIANTS_EXT
 0x87D0

	)

3411 
	#GL_VERTEX_SHADER_INVARIANTS_EXT
 0x87D1

	)

3412 
	#GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
 0x87D2

	)

3413 
	#GL_VERTEX_SHADER_LOCALS_EXT
 0x87D3

	)

3414 
	#GL_VERTEX_SHADER_OPTIMIZED_EXT
 0x87D4

	)

3415 
	#GL_X_EXT
 0x87D5

	)

3416 
	#GL_Y_EXT
 0x87D6

	)

3417 
	#GL_Z_EXT
 0x87D7

	)

3418 
	#GL_W_EXT
 0x87D8

	)

3419 
	#GL_NEGATIVE_X_EXT
 0x87D9

	)

3420 
	#GL_NEGATIVE_Y_EXT
 0x87DA

	)

3421 
	#GL_NEGATIVE_Z_EXT
 0x87DB

	)

3422 
	#GL_NEGATIVE_W_EXT
 0x87DC

	)

3423 
	#GL_ZERO_EXT
 0x87DD

	)

3424 
	#GL_ONE_EXT
 0x87DE

	)

3425 
	#GL_NEGATIVE_ONE_EXT
 0x87DF

	)

3426 
	#GL_NORMALIZED_RANGE_EXT
 0x87E0

	)

3427 
	#GL_FULL_RANGE_EXT
 0x87E1

	)

3428 
	#GL_CURRENT_VERTEX_EXT
 0x87E2

	)

3429 
	#GL_MVP_MATRIX_EXT
 0x87E3

	)

3430 
	#GL_VARIANT_VALUE_EXT
 0x87E4

	)

3431 
	#GL_VARIANT_DATATYPE_EXT
 0x87E5

	)

3432 
	#GL_VARIANT_ARRAY_STRIDE_EXT
 0x87E6

	)

3433 
	#GL_VARIANT_ARRAY_TYPE_EXT
 0x87E7

	)

3434 
	#GL_VARIANT_ARRAY_EXT
 0x87E8

	)

3435 
	#GL_VARIANT_ARRAY_POINTER_EXT
 0x87E9

	)

3436 
	#GL_INVARIANT_VALUE_EXT
 0x87EA

	)

3437 
	#GL_INVARIANT_DATATYPE_EXT
 0x87EB

	)

3438 
	#GL_LOCAL_CONSTANT_VALUE_EXT
 0x87EC

	)

3439 
	#GL_LOCAL_CONSTANT_DATATYPE_EXT
 0x87ED

	)

3442 #i‚de‡
GL_ATI_vîãx_°ªams


3443 
	#GL_MAX_VERTEX_STREAMS_ATI
 0x876B

	)

3444 
	#GL_VERTEX_STREAM0_ATI
 0x876C

	)

3445 
	#GL_VERTEX_STREAM1_ATI
 0x876D

	)

3446 
	#GL_VERTEX_STREAM2_ATI
 0x876E

	)

3447 
	#GL_VERTEX_STREAM3_ATI
 0x876F

	)

3448 
	#GL_VERTEX_STREAM4_ATI
 0x8770

	)

3449 
	#GL_VERTEX_STREAM5_ATI
 0x8771

	)

3450 
	#GL_VERTEX_STREAM6_ATI
 0x8772

	)

3451 
	#GL_VERTEX_STREAM7_ATI
 0x8773

	)

3452 
	#GL_VERTEX_SOURCE_ATI
 0x8774

	)

3455 #i‚de‡
GL_ATI_ñemít_¨øy


3456 
	#GL_ELEMENT_ARRAY_ATI
 0x8768

	)

3457 
	#GL_ELEMENT_ARRAY_TYPE_ATI
 0x8769

	)

3458 
	#GL_ELEMENT_ARRAY_POINTER_ATI
 0x876A

	)

3461 #i‚de‡
GL_SUN_mesh_¨øy


3462 
	#GL_QUAD_MESH_SUN
 0x8614

	)

3463 
	#GL_TRIANGLE_MESH_SUN
 0x8615

	)

3466 #i‚de‡
GL_SUN_¶i˚_accum


3467 
	#GL_SLICE_ACCUM_SUN
 0x85CC

	)

3470 #i‚de‡
GL_NV_mu…ißm∂e_fûãr_höt


3471 
	#GL_MULTISAMPLE_FILTER_HINT_NV
 0x8534

	)

3474 #i‚de‡
GL_NV_dïth_˛amp


3475 
	#GL_DEPTH_CLAMP_NV
 0x864F

	)

3478 #i‚de‡
GL_NV_oc˛usi⁄_quîy


3479 
	#GL_PIXEL_COUNTER_BITS_NV
 0x8864

	)

3480 
	#GL_CURRENT_OCCLUSION_QUERY_ID_NV
 0x8865

	)

3481 
	#GL_PIXEL_COUNT_NV
 0x8866

	)

3482 
	#GL_PIXEL_COUNT_AVAILABLE_NV
 0x8867

	)

3485 #i‚de‡
GL_NV_poöt_•rôe


3486 
	#GL_POINT_SPRITE_NV
 0x8861

	)

3487 
	#GL_COORD_REPLACE_NV
 0x8862

	)

3488 
	#GL_POINT_SPRITE_R_MODE_NV
 0x8863

	)

3491 #i‚de‡
GL_NV_ãxtuª_shadî3


3492 
	#GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV
 0x8850

	)

3493 
	#GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV
 0x8851

	)

3494 
	#GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV
 0x8852

	)

3495 
	#GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV
 0x8853

	)

3496 
	#GL_OFFSET_HILO_TEXTURE_2D_NV
 0x8854

	)

3497 
	#GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV
 0x8855

	)

3498 
	#GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV
 0x8856

	)

3499 
	#GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV
 0x8857

	)

3500 
	#GL_DEPENDENT_HILO_TEXTURE_2D_NV
 0x8858

	)

3501 
	#GL_DEPENDENT_RGB_TEXTURE_3D_NV
 0x8859

	)

3502 
	#GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV
 0x885A

	)

3503 
	#GL_DOT_PRODUCT_PASS_THROUGH_NV
 0x885B

	)

3504 
	#GL_DOT_PRODUCT_TEXTURE_1D_NV
 0x885C

	)

3505 
	#GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV
 0x885D

	)

3506 
	#GL_HILO8_NV
 0x885E

	)

3507 
	#GL_SIGNED_HILO8_NV
 0x885F

	)

3508 
	#GL_FORCE_BLUE_TO_ONE_NV
 0x8860

	)

3511 #i‚de‡
GL_NV_vîãx_¥ogøm1_1


3514 #i‚de‡
GL_EXT_shadow_funcs


3517 #i‚de‡
GL_EXT_°ícû_two_side


3518 
	#GL_STENCIL_TEST_TWO_SIDE_EXT
 0x8910

	)

3519 
	#GL_ACTIVE_STENCIL_FACE_EXT
 0x8911

	)

3522 #i‚de‡
GL_ATI_ãxt_‰agmít_shadî


3523 
	#GL_TEXT_FRAGMENT_SHADER_ATI
 0x8200

	)

3526 #i‚de‡
GL_APPLE_˛õ¡_°‹age


3527 
	#GL_UNPACK_CLIENT_STORAGE_APPLE
 0x85B2

	)

3530 #i‚de‡
GL_APPLE_ñemít_¨øy


3531 
	#GL_ELEMENT_ARRAY_APPLE
 0x8768

	)

3532 
	#GL_ELEMENT_ARRAY_TYPE_APPLE
 0x8769

	)

3533 
	#GL_ELEMENT_ARRAY_POINTER_APPLE
 0x876A

	)

3536 #i‚de‡
GL_APPLE_„n˚


3537 
	#GL_DRAW_PIXELS_APPLE
 0x8A0A

	)

3538 
	#GL_FENCE_APPLE
 0x8A0B

	)

3541 #i‚de‡
GL_APPLE_vîãx_¨øy_obje˘


3542 
	#GL_VERTEX_ARRAY_BINDING_APPLE
 0x85B5

	)

3545 #i‚de‡
GL_APPLE_vîãx_¨øy_ønge


3546 
	#GL_VERTEX_ARRAY_RANGE_APPLE
 0x851D

	)

3547 
	#GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE
 0x851E

	)

3548 
	#GL_VERTEX_ARRAY_STORAGE_HINT_APPLE
 0x851F

	)

3549 
	#GL_VERTEX_ARRAY_RANGE_POINTER_APPLE
 0x8521

	)

3550 
	#GL_STORAGE_CACHED_APPLE
 0x85BE

	)

3551 
	#GL_STORAGE_SHARED_APPLE
 0x85BF

	)

3554 #i‚de‡
GL_APPLE_ycb¸_422


3555 
	#GL_YCBCR_422_APPLE
 0x85B9

	)

3556 
	#GL_UNSIGNED_SHORT_8_8_APPLE
 0x85BA

	)

3557 
	#GL_UNSIGNED_SHORT_8_8_REV_APPLE
 0x85BB

	)

3560 #i‚de‡
GL_S3_s3tc


3561 
	#GL_RGB_S3TC
 0x83A0

	)

3562 
	#GL_RGB4_S3TC
 0x83A1

	)

3563 
	#GL_RGBA_S3TC
 0x83A2

	)

3564 
	#GL_RGBA4_S3TC
 0x83A3

	)

3567 #i‚de‡
GL_ATI_døw_buf„rs


3568 
	#GL_MAX_DRAW_BUFFERS_ATI
 0x8824

	)

3569 
	#GL_DRAW_BUFFER0_ATI
 0x8825

	)

3570 
	#GL_DRAW_BUFFER1_ATI
 0x8826

	)

3571 
	#GL_DRAW_BUFFER2_ATI
 0x8827

	)

3572 
	#GL_DRAW_BUFFER3_ATI
 0x8828

	)

3573 
	#GL_DRAW_BUFFER4_ATI
 0x8829

	)

3574 
	#GL_DRAW_BUFFER5_ATI
 0x882A

	)

3575 
	#GL_DRAW_BUFFER6_ATI
 0x882B

	)

3576 
	#GL_DRAW_BUFFER7_ATI
 0x882C

	)

3577 
	#GL_DRAW_BUFFER8_ATI
 0x882D

	)

3578 
	#GL_DRAW_BUFFER9_ATI
 0x882E

	)

3579 
	#GL_DRAW_BUFFER10_ATI
 0x882F

	)

3580 
	#GL_DRAW_BUFFER11_ATI
 0x8830

	)

3581 
	#GL_DRAW_BUFFER12_ATI
 0x8831

	)

3582 
	#GL_DRAW_BUFFER13_ATI
 0x8832

	)

3583 
	#GL_DRAW_BUFFER14_ATI
 0x8833

	)

3584 
	#GL_DRAW_BUFFER15_ATI
 0x8834

	)

3587 #i‚de‡
GL_ATI_pixñ_f‹m©_Êﬂt


3588 
	#GL_TYPE_RGBA_FLOAT_ATI
 0x8820

	)

3589 
	#GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI
 0x8835

	)

3592 #i‚de‡
GL_ATI_ãxtuª_ív_comböe3


3593 
	#GL_MODULATE_ADD_ATI
 0x8744

	)

3594 
	#GL_MODULATE_SIGNED_ADD_ATI
 0x8745

	)

3595 
	#GL_MODULATE_SUBTRACT_ATI
 0x8746

	)

3598 #i‚de‡
GL_ATI_ãxtuª_Êﬂt


3599 
	#GL_RGBA_FLOAT32_ATI
 0x8814

	)

3600 
	#GL_RGB_FLOAT32_ATI
 0x8815

	)

3601 
	#GL_ALPHA_FLOAT32_ATI
 0x8816

	)

3602 
	#GL_INTENSITY_FLOAT32_ATI
 0x8817

	)

3603 
	#GL_LUMINANCE_FLOAT32_ATI
 0x8818

	)

3604 
	#GL_LUMINANCE_ALPHA_FLOAT32_ATI
 0x8819

	)

3605 
	#GL_RGBA_FLOAT16_ATI
 0x881A

	)

3606 
	#GL_RGB_FLOAT16_ATI
 0x881B

	)

3607 
	#GL_ALPHA_FLOAT16_ATI
 0x881C

	)

3608 
	#GL_INTENSITY_FLOAT16_ATI
 0x881D

	)

3609 
	#GL_LUMINANCE_FLOAT16_ATI
 0x881E

	)

3610 
	#GL_LUMINANCE_ALPHA_FLOAT16_ATI
 0x881F

	)

3613 #i‚de‡
GL_NV_Êﬂt_buf„r


3614 
	#GL_FLOAT_R_NV
 0x8880

	)

3615 
	#GL_FLOAT_RG_NV
 0x8881

	)

3616 
	#GL_FLOAT_RGB_NV
 0x8882

	)

3617 
	#GL_FLOAT_RGBA_NV
 0x8883

	)

3618 
	#GL_FLOAT_R16_NV
 0x8884

	)

3619 
	#GL_FLOAT_R32_NV
 0x8885

	)

3620 
	#GL_FLOAT_RG16_NV
 0x8886

	)

3621 
	#GL_FLOAT_RG32_NV
 0x8887

	)

3622 
	#GL_FLOAT_RGB16_NV
 0x8888

	)

3623 
	#GL_FLOAT_RGB32_NV
 0x8889

	)

3624 
	#GL_FLOAT_RGBA16_NV
 0x888A

	)

3625 
	#GL_FLOAT_RGBA32_NV
 0x888B

	)

3626 
	#GL_TEXTURE_FLOAT_COMPONENTS_NV
 0x888C

	)

3627 
	#GL_FLOAT_CLEAR_COLOR_VALUE_NV
 0x888D

	)

3628 
	#GL_FLOAT_RGBA_MODE_NV
 0x888E

	)

3631 #i‚de‡
GL_NV_‰agmít_¥ogøm


3632 
	#GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV
 0x8868

	)

3633 
	#GL_FRAGMENT_PROGRAM_NV
 0x8870

	)

3634 
	#GL_MAX_TEXTURE_COORDS_NV
 0x8871

	)

3635 
	#GL_MAX_TEXTURE_IMAGE_UNITS_NV
 0x8872

	)

3636 
	#GL_FRAGMENT_PROGRAM_BINDING_NV
 0x8873

	)

3637 
	#GL_PROGRAM_ERROR_STRING_NV
 0x8874

	)

3640 #i‚de‡
GL_NV_hÆf_Êﬂt


3641 
	#GL_HALF_FLOAT_NV
 0x140B

	)

3644 #i‚de‡
GL_NV_pixñ_d©a_ønge


3645 
	#GL_WRITE_PIXEL_DATA_RANGE_NV
 0x8878

	)

3646 
	#GL_READ_PIXEL_DATA_RANGE_NV
 0x8879

	)

3647 
	#GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV
 0x887A

	)

3648 
	#GL_READ_PIXEL_DATA_RANGE_LENGTH_NV
 0x887B

	)

3649 
	#GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV
 0x887C

	)

3650 
	#GL_READ_PIXEL_DATA_RANGE_POINTER_NV
 0x887D

	)

3653 #i‚de‡
GL_NV_¥imôive_ª°¨t


3654 
	#GL_PRIMITIVE_RESTART_NV
 0x8558

	)

3655 
	#GL_PRIMITIVE_RESTART_INDEX_NV
 0x8559

	)

3658 #i‚de‡
GL_NV_ãxtuª_ex∑nd_n‹mÆ


3659 
	#GL_TEXTURE_UNSIGNED_REMAP_MODE_NV
 0x888F

	)

3662 #i‚de‡
GL_NV_vîãx_¥ogøm2


3665 #i‚de‡
GL_ATI_m≠_obje˘_buf„r


3668 #i‚de‡
GL_ATI_£∑øã_°ícû


3669 
	#GL_STENCIL_BACK_FUNC_ATI
 0x8800

	)

3670 
	#GL_STENCIL_BACK_FAIL_ATI
 0x8801

	)

3671 
	#GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI
 0x8802

	)

3672 
	#GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI
 0x8803

	)

3675 #i‚de‡
GL_ATI_vîãx_©åib_¨øy_obje˘


3678 #i‚de‡
GL_OES_ªad_f‹m©


3679 
	#GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
 0x8B9A

	)

3680 
	#GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
 0x8B9B

	)

3683 #i‚de‡
GL_EXT_dïth_bounds_ã°


3684 
	#GL_DEPTH_BOUNDS_TEST_EXT
 0x8890

	)

3685 
	#GL_DEPTH_BOUNDS_EXT
 0x8891

	)

3688 #i‚de‡
GL_EXT_ãxtuª_múr‹_˛amp


3689 
	#GL_MIRROR_CLAMP_EXT
 0x8742

	)

3690 
	#GL_MIRROR_CLAMP_TO_EDGE_EXT
 0x8743

	)

3691 
	#GL_MIRROR_CLAMP_TO_BORDER_EXT
 0x8912

	)

3694 #i‚de‡
GL_EXT_bÀnd_equ©i⁄_£∑øã


3695 
	#GL_BLEND_EQUATION_RGB_EXT
 0x8009

	)

3696 
	#GL_BLEND_EQUATION_ALPHA_EXT
 0x883D

	)

3699 #i‚de‡
GL_MESA_∑ck_övît


3700 
	#GL_PACK_INVERT_MESA
 0x8758

	)

3703 #i‚de‡
GL_MESA_ycb¸_ãxtuª


3704 
	#GL_UNSIGNED_SHORT_8_8_MESA
 0x85BA

	)

3705 
	#GL_UNSIGNED_SHORT_8_8_REV_MESA
 0x85BB

	)

3706 
	#GL_YCBCR_MESA
 0x8757

	)

3709 #i‚de‡
GL_EXT_pixñ_buf„r_obje˘


3710 
	#GL_PIXEL_PACK_BUFFER_EXT
 0x88EB

	)

3711 
	#GL_PIXEL_UNPACK_BUFFER_EXT
 0x88EC

	)

3712 
	#GL_PIXEL_PACK_BUFFER_BINDING_EXT
 0x88ED

	)

3713 
	#GL_PIXEL_UNPACK_BUFFER_BINDING_EXT
 0x88EF

	)

3716 #i‚de‡
GL_NV_‰agmít_¥ogøm_›ti⁄


3719 #i‚de‡
GL_NV_‰agmít_¥ogøm2


3720 
	#GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV
 0x88F4

	)

3721 
	#GL_MAX_PROGRAM_CALL_DEPTH_NV
 0x88F5

	)

3722 
	#GL_MAX_PROGRAM_IF_DEPTH_NV
 0x88F6

	)

3723 
	#GL_MAX_PROGRAM_LOOP_DEPTH_NV
 0x88F7

	)

3724 
	#GL_MAX_PROGRAM_LOOP_COUNT_NV
 0x88F8

	)

3727 #i‚de‡
GL_NV_vîãx_¥ogøm2_›ti⁄


3732 #i‚de‡
GL_NV_vîãx_¥ogøm3


3736 #i‚de‡
GL_EXT_‰amebuf„r_obje˘


3737 
	#GL_INVALID_FRAMEBUFFER_OPERATION_EXT
 0x0506

	)

3738 
	#GL_MAX_RENDERBUFFER_SIZE_EXT
 0x84E8

	)

3739 
	#GL_FRAMEBUFFER_BINDING_EXT
 0x8CA6

	)

3740 
	#GL_RENDERBUFFER_BINDING_EXT
 0x8CA7

	)

3741 
	#GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
 0x8CD0

	)

3742 
	#GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
 0x8CD1

	)

3743 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
 0x8CD2

	)

3744 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
 0x8CD3

	)

3745 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
 0x8CD4

	)

3746 
	#GL_FRAMEBUFFER_COMPLETE_EXT
 0x8CD5

	)

3747 
	#GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
 0x8CD6

	)

3748 
	#GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
 0x8CD7

	)

3749 
	#GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
 0x8CD9

	)

3750 
	#GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
 0x8CDA

	)

3751 
	#GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
 0x8CDB

	)

3752 
	#GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
 0x8CDC

	)

3753 
	#GL_FRAMEBUFFER_UNSUPPORTED_EXT
 0x8CDD

	)

3754 
	#GL_MAX_COLOR_ATTACHMENTS_EXT
 0x8CDF

	)

3755 
	#GL_COLOR_ATTACHMENT0_EXT
 0x8CE0

	)

3756 
	#GL_COLOR_ATTACHMENT1_EXT
 0x8CE1

	)

3757 
	#GL_COLOR_ATTACHMENT2_EXT
 0x8CE2

	)

3758 
	#GL_COLOR_ATTACHMENT3_EXT
 0x8CE3

	)

3759 
	#GL_COLOR_ATTACHMENT4_EXT
 0x8CE4

	)

3760 
	#GL_COLOR_ATTACHMENT5_EXT
 0x8CE5

	)

3761 
	#GL_COLOR_ATTACHMENT6_EXT
 0x8CE6

	)

3762 
	#GL_COLOR_ATTACHMENT7_EXT
 0x8CE7

	)

3763 
	#GL_COLOR_ATTACHMENT8_EXT
 0x8CE8

	)

3764 
	#GL_COLOR_ATTACHMENT9_EXT
 0x8CE9

	)

3765 
	#GL_COLOR_ATTACHMENT10_EXT
 0x8CEA

	)

3766 
	#GL_COLOR_ATTACHMENT11_EXT
 0x8CEB

	)

3767 
	#GL_COLOR_ATTACHMENT12_EXT
 0x8CEC

	)

3768 
	#GL_COLOR_ATTACHMENT13_EXT
 0x8CED

	)

3769 
	#GL_COLOR_ATTACHMENT14_EXT
 0x8CEE

	)

3770 
	#GL_COLOR_ATTACHMENT15_EXT
 0x8CEF

	)

3771 
	#GL_DEPTH_ATTACHMENT_EXT
 0x8D00

	)

3772 
	#GL_STENCIL_ATTACHMENT_EXT
 0x8D20

	)

3773 
	#GL_FRAMEBUFFER_EXT
 0x8D40

	)

3774 
	#GL_RENDERBUFFER_EXT
 0x8D41

	)

3775 
	#GL_RENDERBUFFER_WIDTH_EXT
 0x8D42

	)

3776 
	#GL_RENDERBUFFER_HEIGHT_EXT
 0x8D43

	)

3777 
	#GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
 0x8D44

	)

3778 
	#GL_STENCIL_INDEX1_EXT
 0x8D46

	)

3779 
	#GL_STENCIL_INDEX4_EXT
 0x8D47

	)

3780 
	#GL_STENCIL_INDEX8_EXT
 0x8D48

	)

3781 
	#GL_STENCIL_INDEX16_EXT
 0x8D49

	)

3782 
	#GL_RENDERBUFFER_RED_SIZE_EXT
 0x8D50

	)

3783 
	#GL_RENDERBUFFER_GREEN_SIZE_EXT
 0x8D51

	)

3784 
	#GL_RENDERBUFFER_BLUE_SIZE_EXT
 0x8D52

	)

3785 
	#GL_RENDERBUFFER_ALPHA_SIZE_EXT
 0x8D53

	)

3786 
	#GL_RENDERBUFFER_DEPTH_SIZE_EXT
 0x8D54

	)

3787 
	#GL_RENDERBUFFER_STENCIL_SIZE_EXT
 0x8D55

	)

3790 #i‚de‡
GL_GREMEDY_°rög_m¨kî


3793 #i‚de‡
GL_EXT_∑cked_dïth_°ícû


3794 
	#GL_DEPTH_STENCIL_EXT
 0x84F9

	)

3795 
	#GL_UNSIGNED_INT_24_8_EXT
 0x84FA

	)

3796 
	#GL_DEPTH24_STENCIL8_EXT
 0x88F0

	)

3797 
	#GL_TEXTURE_STENCIL_SIZE_EXT
 0x88F1

	)

3800 #i‚de‡
GL_EXT_°ícû_˛ór_èg


3801 
	#GL_STENCIL_TAG_BITS_EXT
 0x88F2

	)

3802 
	#GL_STENCIL_CLEAR_TAG_VALUE_EXT
 0x88F3

	)

3805 #i‚de‡
GL_EXT_ãxtuª_sRGB


3806 
	#GL_SRGB_EXT
 0x8C40

	)

3807 
	#GL_SRGB8_EXT
 0x8C41

	)

3808 
	#GL_SRGB_ALPHA_EXT
 0x8C42

	)

3809 
	#GL_SRGB8_ALPHA8_EXT
 0x8C43

	)

3810 
	#GL_SLUMINANCE_ALPHA_EXT
 0x8C44

	)

3811 
	#GL_SLUMINANCE8_ALPHA8_EXT
 0x8C45

	)

3812 
	#GL_SLUMINANCE_EXT
 0x8C46

	)

3813 
	#GL_SLUMINANCE8_EXT
 0x8C47

	)

3814 
	#GL_COMPRESSED_SRGB_EXT
 0x8C48

	)

3815 
	#GL_COMPRESSED_SRGB_ALPHA_EXT
 0x8C49

	)

3816 
	#GL_COMPRESSED_SLUMINANCE_EXT
 0x8C4A

	)

3817 
	#GL_COMPRESSED_SLUMINANCE_ALPHA_EXT
 0x8C4B

	)

3818 
	#GL_COMPRESSED_SRGB_S3TC_DXT1_EXT
 0x8C4C

	)

3819 
	#GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT
 0x8C4D

	)

3820 
	#GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT
 0x8C4E

	)

3821 
	#GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT
 0x8C4F

	)

3824 #i‚de‡
GL_EXT_‰amebuf„r_blô


3825 
	#GL_READ_FRAMEBUFFER_EXT
 0x8CA8

	)

3826 
	#GL_DRAW_FRAMEBUFFER_EXT
 0x8CA9

	)

3827 
	#GL_DRAW_FRAMEBUFFER_BINDING_EXT
 
GL_FRAMEBUFFER_BINDING_EXT


	)

3828 
	#GL_READ_FRAMEBUFFER_BINDING_EXT
 0x8CAA

	)

3831 #i‚de‡
GL_EXT_‰amebuf„r_mu…ißm∂e


3832 
	#GL_RENDERBUFFER_SAMPLES_EXT
 0x8CAB

	)

3833 
	#GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
 0x8D56

	)

3834 
	#GL_MAX_SAMPLES_EXT
 0x8D57

	)

3837 #i‚de‡
GL_MESAX_ãxtuª_°ack


3838 
	#GL_TEXTURE_1D_STACK_MESAX
 0x8759

	)

3839 
	#GL_TEXTURE_2D_STACK_MESAX
 0x875A

	)

3840 
	#GL_PROXY_TEXTURE_1D_STACK_MESAX
 0x875B

	)

3841 
	#GL_PROXY_TEXTURE_2D_STACK_MESAX
 0x875C

	)

3842 
	#GL_TEXTURE_1D_STACK_BINDING_MESAX
 0x875D

	)

3843 
	#GL_TEXTURE_2D_STACK_BINDING_MESAX
 0x875E

	)

3846 #i‚de‡
GL_EXT_timî_quîy


3847 
	#GL_TIME_ELAPSED_EXT
 0x88BF

	)

3850 #i‚de‡
GL_EXT_gpu_¥ogøm_∑ømëîs


3853 #i‚de‡
GL_APPLE_Êush_buf„r_ønge


3854 
	#GL_BUFFER_SERIALIZED_MODIFY_APPLE
 0x8A12

	)

3855 
	#GL_BUFFER_FLUSHING_UNMAP_APPLE
 0x8A13

	)

3858 #i‚de‡
GL_NV_gpu_¥ogøm4


3859 
	#GL_MIN_PROGRAM_TEXEL_OFFSET_NV
 0x8904

	)

3860 
	#GL_MAX_PROGRAM_TEXEL_OFFSET_NV
 0x8905

	)

3861 
	#GL_PROGRAM_ATTRIB_COMPONENTS_NV
 0x8906

	)

3862 
	#GL_PROGRAM_RESULT_COMPONENTS_NV
 0x8907

	)

3863 
	#GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV
 0x8908

	)

3864 
	#GL_MAX_PROGRAM_RESULT_COMPONENTS_NV
 0x8909

	)

3865 
	#GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV
 0x8DA5

	)

3866 
	#GL_MAX_PROGRAM_GENERIC_RESULTS_NV
 0x8DA6

	)

3869 #i‚de‡
GL_NV_geomëry_¥ogøm4


3870 
	#GL_LINES_ADJACENCY_EXT
 0x000A

	)

3871 
	#GL_LINE_STRIP_ADJACENCY_EXT
 0x000B

	)

3872 
	#GL_TRIANGLES_ADJACENCY_EXT
 0x000C

	)

3873 
	#GL_TRIANGLE_STRIP_ADJACENCY_EXT
 0x000D

	)

3874 
	#GL_GEOMETRY_PROGRAM_NV
 0x8C26

	)

3875 
	#GL_MAX_PROGRAM_OUTPUT_VERTICES_NV
 0x8C27

	)

3876 
	#GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV
 0x8C28

	)

3877 
	#GL_GEOMETRY_VERTICES_OUT_EXT
 0x8DDA

	)

3878 
	#GL_GEOMETRY_INPUT_TYPE_EXT
 0x8DDB

	)

3879 
	#GL_GEOMETRY_OUTPUT_TYPE_EXT
 0x8DDC

	)

3880 
	#GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
 0x8C29

	)

3881 
	#GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
 0x8DA7

	)

3882 
	#GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
 0x8DA8

	)

3883 
	#GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT
 0x8DA9

	)

3884 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
 0x8CD4

	)

3885 
	#GL_PROGRAM_POINT_SIZE_EXT
 0x8642

	)

3888 #i‚de‡
GL_EXT_geomëry_shadî4


3889 
	#GL_GEOMETRY_SHADER_EXT
 0x8DD9

	)

3894 
	#GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT
 0x8DDD

	)

3895 
	#GL_MAX_VERTEX_VARYING_COMPONENTS_EXT
 0x8DDE

	)

3896 
	#GL_MAX_VARYING_COMPONENTS_EXT
 0x8B4B

	)

3897 
	#GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT
 0x8DDF

	)

3898 
	#GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT
 0x8DE0

	)

3899 
	#GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT
 0x8DE1

	)

3911 #i‚de‡
GL_NV_vîãx_¥ogøm4


3912 
	#GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV
 0x88FD

	)

3915 #i‚de‡
GL_EXT_gpu_shadî4


3916 
	#GL_SAMPLER_1D_ARRAY_EXT
 0x8DC0

	)

3917 
	#GL_SAMPLER_2D_ARRAY_EXT
 0x8DC1

	)

3918 
	#GL_SAMPLER_BUFFER_EXT
 0x8DC2

	)

3919 
	#GL_SAMPLER_1D_ARRAY_SHADOW_EXT
 0x8DC3

	)

3920 
	#GL_SAMPLER_2D_ARRAY_SHADOW_EXT
 0x8DC4

	)

3921 
	#GL_SAMPLER_CUBE_SHADOW_EXT
 0x8DC5

	)

3922 
	#GL_UNSIGNED_INT_VEC2_EXT
 0x8DC6

	)

3923 
	#GL_UNSIGNED_INT_VEC3_EXT
 0x8DC7

	)

3924 
	#GL_UNSIGNED_INT_VEC4_EXT
 0x8DC8

	)

3925 
	#GL_INT_SAMPLER_1D_EXT
 0x8DC9

	)

3926 
	#GL_INT_SAMPLER_2D_EXT
 0x8DCA

	)

3927 
	#GL_INT_SAMPLER_3D_EXT
 0x8DCB

	)

3928 
	#GL_INT_SAMPLER_CUBE_EXT
 0x8DCC

	)

3929 
	#GL_INT_SAMPLER_2D_RECT_EXT
 0x8DCD

	)

3930 
	#GL_INT_SAMPLER_1D_ARRAY_EXT
 0x8DCE

	)

3931 
	#GL_INT_SAMPLER_2D_ARRAY_EXT
 0x8DCF

	)

3932 
	#GL_INT_SAMPLER_BUFFER_EXT
 0x8DD0

	)

3933 
	#GL_UNSIGNED_INT_SAMPLER_1D_EXT
 0x8DD1

	)

3934 
	#GL_UNSIGNED_INT_SAMPLER_2D_EXT
 0x8DD2

	)

3935 
	#GL_UNSIGNED_INT_SAMPLER_3D_EXT
 0x8DD3

	)

3936 
	#GL_UNSIGNED_INT_SAMPLER_CUBE_EXT
 0x8DD4

	)

3937 
	#GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT
 0x8DD5

	)

3938 
	#GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT
 0x8DD6

	)

3939 
	#GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT
 0x8DD7

	)

3940 
	#GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT
 0x8DD8

	)

3943 #i‚de‡
GL_EXT_døw_ö°™˚d


3946 #i‚de‡
GL_EXT_∑cked_Êﬂt


3947 
	#GL_R11F_G11F_B10F_EXT
 0x8C3A

	)

3948 
	#GL_UNSIGNED_INT_10F_11F_11F_REV_EXT
 0x8C3B

	)

3949 
	#GL_RGBA_SIGNED_COMPONENTS_EXT
 0x8C3C

	)

3952 #i‚de‡
GL_EXT_ãxtuª_¨øy


3953 
	#GL_TEXTURE_1D_ARRAY_EXT
 0x8C18

	)

3954 
	#GL_PROXY_TEXTURE_1D_ARRAY_EXT
 0x8C19

	)

3955 
	#GL_TEXTURE_2D_ARRAY_EXT
 0x8C1A

	)

3956 
	#GL_PROXY_TEXTURE_2D_ARRAY_EXT
 0x8C1B

	)

3957 
	#GL_TEXTURE_BINDING_1D_ARRAY_EXT
 0x8C1C

	)

3958 
	#GL_TEXTURE_BINDING_2D_ARRAY_EXT
 0x8C1D

	)

3959 
	#GL_MAX_ARRAY_TEXTURE_LAYERS_EXT
 0x88FF

	)

3960 
	#GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT
 0x884E

	)

3964 #i‚de‡
GL_EXT_ãxtuª_buf„r_obje˘


3965 
	#GL_TEXTURE_BUFFER_EXT
 0x8C2A

	)

3966 
	#GL_MAX_TEXTURE_BUFFER_SIZE_EXT
 0x8C2B

	)

3967 
	#GL_TEXTURE_BINDING_BUFFER_EXT
 0x8C2C

	)

3968 
	#GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT
 0x8C2D

	)

3969 
	#GL_TEXTURE_BUFFER_FORMAT_EXT
 0x8C2E

	)

3972 #i‚de‡
GL_EXT_ãxtuª_com¥essi⁄_œtc


3973 
	#GL_COMPRESSED_LUMINANCE_LATC1_EXT
 0x8C70

	)

3974 
	#GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT
 0x8C71

	)

3975 
	#GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT
 0x8C72

	)

3976 
	#GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT
 0x8C73

	)

3979 #i‚de‡
GL_EXT_ãxtuª_com¥essi⁄_rgtc


3980 
	#GL_COMPRESSED_RED_RGTC1_EXT
 0x8DBB

	)

3981 
	#GL_COMPRESSED_SIGNED_RED_RGTC1_EXT
 0x8DBC

	)

3982 
	#GL_COMPRESSED_RED_GREEN_RGTC2_EXT
 0x8DBD

	)

3983 
	#GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT
 0x8DBE

	)

3986 #i‚de‡
GL_EXT_ãxtuª_sh¨ed_exp⁄ít


3987 
	#GL_RGB9_E5_EXT
 0x8C3D

	)

3988 
	#GL_UNSIGNED_INT_5_9_9_9_REV_EXT
 0x8C3E

	)

3989 
	#GL_TEXTURE_SHARED_SIZE_EXT
 0x8C3F

	)

3992 #i‚de‡
GL_NV_dïth_buf„r_Êﬂt


3993 
	#GL_DEPTH_COMPONENT32F_NV
 0x8DAB

	)

3994 
	#GL_DEPTH32F_STENCIL8_NV
 0x8DAC

	)

3995 
	#GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV
 0x8DAD

	)

3996 
	#GL_DEPTH_BUFFER_FLOAT_MODE_NV
 0x8DAF

	)

3999 #i‚de‡
GL_NV_‰agmít_¥ogøm4


4002 #i‚de‡
GL_NV_‰amebuf„r_mu…ißm∂e_covîage


4003 
	#GL_RENDERBUFFER_COVERAGE_SAMPLES_NV
 0x8CAB

	)

4004 
	#GL_RENDERBUFFER_COLOR_SAMPLES_NV
 0x8E10

	)

4005 
	#GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV
 0x8E11

	)

4006 
	#GL_MULTISAMPLE_COVERAGE_MODES_NV
 0x8E12

	)

4009 #i‚de‡
GL_EXT_‰amebuf„r_sRGB


4010 
	#GL_FRAMEBUFFER_SRGB_EXT
 0x8DB9

	)

4011 
	#GL_FRAMEBUFFER_SRGB_CAPABLE_EXT
 0x8DBA

	)

4014 #i‚de‡
GL_NV_geomëry_shadî4


4017 #i‚de‡
GL_NV_∑ømëî_buf„r_obje˘


4018 
	#GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV
 0x8DA0

	)

4019 
	#GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV
 0x8DA1

	)

4020 
	#GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV
 0x8DA2

	)

4021 
	#GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV
 0x8DA3

	)

4022 
	#GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV
 0x8DA4

	)

4025 #i‚de‡
GL_EXT_døw_buf„rs2


4028 #i‚de‡
GL_NV_å™sf‹m_„edback


4029 
	#GL_BACK_PRIMARY_COLOR_NV
 0x8C77

	)

4030 
	#GL_BACK_SECONDARY_COLOR_NV
 0x8C78

	)

4031 
	#GL_TEXTURE_COORD_NV
 0x8C79

	)

4032 
	#GL_CLIP_DISTANCE_NV
 0x8C7A

	)

4033 
	#GL_VERTEX_ID_NV
 0x8C7B

	)

4034 
	#GL_PRIMITIVE_ID_NV
 0x8C7C

	)

4035 
	#GL_GENERIC_ATTRIB_NV
 0x8C7D

	)

4036 
	#GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
 0x8C7E

	)

4037 
	#GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
 0x8C7F

	)

4038 
	#GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
 0x8C80

	)

4039 
	#GL_ACTIVE_VARYINGS_NV
 0x8C81

	)

4040 
	#GL_ACTIVE_VARYING_MAX_LENGTH_NV
 0x8C82

	)

4041 
	#GL_TRANSFORM_FEEDBACK_VARYINGS_NV
 0x8C83

	)

4042 
	#GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
 0x8C84

	)

4043 
	#GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
 0x8C85

	)

4044 
	#GL_TRANSFORM_FEEDBACK_RECORD_NV
 0x8C86

	)

4045 
	#GL_PRIMITIVES_GENERATED_NV
 0x8C87

	)

4046 
	#GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
 0x8C88

	)

4047 
	#GL_RASTERIZER_DISCARD_NV
 0x8C89

	)

4048 
	#GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_ATTRIBS_NV
 0x8C8A

	)

4049 
	#GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
 0x8C8B

	)

4050 
	#GL_INTERLEAVED_ATTRIBS_NV
 0x8C8C

	)

4051 
	#GL_SEPARATE_ATTRIBS_NV
 0x8C8D

	)

4052 
	#GL_TRANSFORM_FEEDBACK_BUFFER_NV
 0x8C8E

	)

4053 
	#GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
 0x8C8F

	)

4056 #i‚de‡
GL_EXT_bödabÀ_unif‹m


4057 
	#GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
 0x8DE2

	)

4058 
	#GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
 0x8DE3

	)

4059 
	#GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
 0x8DE4

	)

4060 
	#GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
 0x8DED

	)

4061 
	#GL_UNIFORM_BUFFER_EXT
 0x8DEE

	)

4062 
	#GL_UNIFORM_BUFFER_BINDING_EXT
 0x8DEF

	)

4065 #i‚de‡
GL_EXT_ãxtuª_öãgî


4066 
	#GL_RGBA32UI_EXT
 0x8D70

	)

4067 
	#GL_RGB32UI_EXT
 0x8D71

	)

4068 
	#GL_ALPHA32UI_EXT
 0x8D72

	)

4069 
	#GL_INTENSITY32UI_EXT
 0x8D73

	)

4070 
	#GL_LUMINANCE32UI_EXT
 0x8D74

	)

4071 
	#GL_LUMINANCE_ALPHA32UI_EXT
 0x8D75

	)

4072 
	#GL_RGBA16UI_EXT
 0x8D76

	)

4073 
	#GL_RGB16UI_EXT
 0x8D77

	)

4074 
	#GL_ALPHA16UI_EXT
 0x8D78

	)

4075 
	#GL_INTENSITY16UI_EXT
 0x8D79

	)

4076 
	#GL_LUMINANCE16UI_EXT
 0x8D7A

	)

4077 
	#GL_LUMINANCE_ALPHA16UI_EXT
 0x8D7B

	)

4078 
	#GL_RGBA8UI_EXT
 0x8D7C

	)

4079 
	#GL_RGB8UI_EXT
 0x8D7D

	)

4080 
	#GL_ALPHA8UI_EXT
 0x8D7E

	)

4081 
	#GL_INTENSITY8UI_EXT
 0x8D7F

	)

4082 
	#GL_LUMINANCE8UI_EXT
 0x8D80

	)

4083 
	#GL_LUMINANCE_ALPHA8UI_EXT
 0x8D81

	)

4084 
	#GL_RGBA32I_EXT
 0x8D82

	)

4085 
	#GL_RGB32I_EXT
 0x8D83

	)

4086 
	#GL_ALPHA32I_EXT
 0x8D84

	)

4087 
	#GL_INTENSITY32I_EXT
 0x8D85

	)

4088 
	#GL_LUMINANCE32I_EXT
 0x8D86

	)

4089 
	#GL_LUMINANCE_ALPHA32I_EXT
 0x8D87

	)

4090 
	#GL_RGBA16I_EXT
 0x8D88

	)

4091 
	#GL_RGB16I_EXT
 0x8D89

	)

4092 
	#GL_ALPHA16I_EXT
 0x8D8A

	)

4093 
	#GL_INTENSITY16I_EXT
 0x8D8B

	)

4094 
	#GL_LUMINANCE16I_EXT
 0x8D8C

	)

4095 
	#GL_LUMINANCE_ALPHA16I_EXT
 0x8D8D

	)

4096 
	#GL_RGBA8I_EXT
 0x8D8E

	)

4097 
	#GL_RGB8I_EXT
 0x8D8F

	)

4098 
	#GL_ALPHA8I_EXT
 0x8D90

	)

4099 
	#GL_INTENSITY8I_EXT
 0x8D91

	)

4100 
	#GL_LUMINANCE8I_EXT
 0x8D92

	)

4101 
	#GL_LUMINANCE_ALPHA8I_EXT
 0x8D93

	)

4102 
	#GL_RED_INTEGER_EXT
 0x8D94

	)

4103 
	#GL_GREEN_INTEGER_EXT
 0x8D95

	)

4104 
	#GL_BLUE_INTEGER_EXT
 0x8D96

	)

4105 
	#GL_ALPHA_INTEGER_EXT
 0x8D97

	)

4106 
	#GL_RGB_INTEGER_EXT
 0x8D98

	)

4107 
	#GL_RGBA_INTEGER_EXT
 0x8D99

	)

4108 
	#GL_BGR_INTEGER_EXT
 0x8D9A

	)

4109 
	#GL_BGRA_INTEGER_EXT
 0x8D9B

	)

4110 
	#GL_LUMINANCE_INTEGER_EXT
 0x8D9C

	)

4111 
	#GL_LUMINANCE_ALPHA_INTEGER_EXT
 0x8D9D

	)

4112 
	#GL_RGBA_INTEGER_MODE_EXT
 0x8D9E

	)

4115 #i‚de‡
GL_GREMEDY_‰ame_ãrmö©‹


4118 #i‚de‡
GL_NV_c⁄dôi⁄Æ_ªndî


4119 
	#GL_QUERY_WAIT_NV
 0x8E13

	)

4120 
	#GL_QUERY_NO_WAIT_NV
 0x8E14

	)

4121 
	#GL_QUERY_BY_REGION_WAIT_NV
 0x8E15

	)

4122 
	#GL_QUERY_BY_REGION_NO_WAIT_NV
 0x8E16

	)

4125 #i‚de‡
GL_NV_¥e£¡_video


4126 
	#GL_FRAME_NV
 0x8E26

	)

4127 
	#GL_FIELDS_NV
 0x8E27

	)

4128 
	#GL_CURRENT_TIME_NV
 0x8E28

	)

4129 
	#GL_NUM_FILL_STREAMS_NV
 0x8E29

	)

4130 
	#GL_PRESENT_TIME_NV
 0x8E2A

	)

4131 
	#GL_PRESENT_DURATION_NV
 0x8E2B

	)

4134 #i‚de‡
GL_EXT_å™sf‹m_„edback


4135 
	#GL_TRANSFORM_FEEDBACK_BUFFER_EXT
 0x8C8E

	)

4136 
	#GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT
 0x8C84

	)

4137 
	#GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT
 0x8C85

	)

4138 
	#GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT
 0x8C8F

	)

4139 
	#GL_INTERLEAVED_ATTRIBS_EXT
 0x8C8C

	)

4140 
	#GL_SEPARATE_ATTRIBS_EXT
 0x8C8D

	)

4141 
	#GL_PRIMITIVES_GENERATED_EXT
 0x8C87

	)

4142 
	#GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT
 0x8C88

	)

4143 
	#GL_RASTERIZER_DISCARD_EXT
 0x8C89

	)

4144 
	#GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT
 0x8C8A

	)

4145 
	#GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT
 0x8C8B

	)

4146 
	#GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT
 0x8C80

	)

4147 
	#GL_TRANSFORM_FEEDBACK_VARYINGS_EXT
 0x8C83

	)

4148 
	#GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT
 0x8C7F

	)

4149 
	#GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT
 0x8C76

	)

4152 #i‚de‡
GL_EXT_dúe˘_°©e_ac˚ss


4153 
	#GL_PROGRAM_MATRIX_EXT
 0x8E2D

	)

4154 
	#GL_TRANSPOSE_PROGRAM_MATRIX_EXT
 0x8E2E

	)

4155 
	#GL_PROGRAM_MATRIX_STACK_DEPTH_EXT
 0x8E2F

	)

4158 #i‚de‡
GL_EXT_vîãx_¨øy_bgø


4162 #i‚de‡
GL_EXT_ãxtuª_swizzÀ


4163 
	#GL_TEXTURE_SWIZZLE_R_EXT
 0x8E42

	)

4164 
	#GL_TEXTURE_SWIZZLE_G_EXT
 0x8E43

	)

4165 
	#GL_TEXTURE_SWIZZLE_B_EXT
 0x8E44

	)

4166 
	#GL_TEXTURE_SWIZZLE_A_EXT
 0x8E45

	)

4167 
	#GL_TEXTURE_SWIZZLE_RGBA_EXT
 0x8E46

	)

4170 #i‚de‡
GL_NV_ex∂icô_mu…ißm∂e


4171 
	#GL_SAMPLE_POSITION_NV
 0x8E50

	)

4172 
	#GL_SAMPLE_MASK_NV
 0x8E51

	)

4173 
	#GL_SAMPLE_MASK_VALUE_NV
 0x8E52

	)

4174 
	#GL_TEXTURE_BINDING_RENDERBUFFER_NV
 0x8E53

	)

4175 
	#GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV
 0x8E54

	)

4176 
	#GL_TEXTURE_RENDERBUFFER_NV
 0x8E55

	)

4177 
	#GL_SAMPLER_RENDERBUFFER_NV
 0x8E56

	)

4178 
	#GL_INT_SAMPLER_RENDERBUFFER_NV
 0x8E57

	)

4179 
	#GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV
 0x8E58

	)

4180 
	#GL_MAX_SAMPLE_MASK_WORDS_NV
 0x8E59

	)

4183 #i‚de‡
GL_NV_å™sf‹m_„edback2


4184 
	#GL_TRANSFORM_FEEDBACK_NV
 0x8E22

	)

4185 
	#GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
 0x8E23

	)

4186 
	#GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
 0x8E24

	)

4187 
	#GL_TRANSFORM_FEEDBACK_BINDING_NV
 0x8E25

	)

4190 #i‚de‡
GL_ATI_memöfo


4191 
	#GL_VBO_FREE_MEMORY_ATI
 0x87FB

	)

4192 
	#GL_TEXTURE_FREE_MEMORY_ATI
 0x87FC

	)

4193 
	#GL_RENDERBUFFER_FREE_MEMORY_ATI
 0x87FD

	)

4196 #i‚de‡
GL_AMD_≥rf‹m™˚_m⁄ô‹


4197 
	#GL_COUNTER_TYPE_AMD
 0x8BC0

	)

4198 
	#GL_COUNTER_RANGE_AMD
 0x8BC1

	)

4199 
	#GL_UNSIGNED_INT64_AMD
 0x8BC2

	)

4200 
	#GL_PERCENTAGE_AMD
 0x8BC3

	)

4201 
	#GL_PERFMON_RESULT_AVAILABLE_AMD
 0x8BC4

	)

4202 
	#GL_PERFMON_RESULT_SIZE_AMD
 0x8BC5

	)

4203 
	#GL_PERFMON_RESULT_AMD
 0x8BC6

	)

4206 #i‚de‡
GL_AMD_ãxtuª_ãxtuª4


4209 #i‚de‡
GL_AMD_vîãx_shadî_ãs£œt‹


4210 
	#GL_SAMPLER_BUFFER_AMD
 0x9001

	)

4211 
	#GL_INT_SAMPLER_BUFFER_AMD
 0x9002

	)

4212 
	#GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD
 0x9003

	)

4213 
	#GL_TESSELLATION_MODE_AMD
 0x9004

	)

4214 
	#GL_TESSELLATION_FACTOR_AMD
 0x9005

	)

4215 
	#GL_DISCRETE_AMD
 0x9006

	)

4216 
	#GL_CONTINUOUS_AMD
 0x9007

	)

4219 #i‚de‡
GL_EXT_¥ovokög_vîãx


4220 
	#GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT
 0x8E4C

	)

4221 
	#GL_FIRST_VERTEX_CONVENTION_EXT
 0x8E4D

	)

4222 
	#GL_LAST_VERTEX_CONVENTION_EXT
 0x8E4E

	)

4223 
	#GL_PROVOKING_VERTEX_EXT
 0x8E4F

	)

4226 #i‚de‡
GL_EXT_ãxtuª_¢‹m


4227 
	#GL_ALPHA_SNORM
 0x9010

	)

4228 
	#GL_LUMINANCE_SNORM
 0x9011

	)

4229 
	#GL_LUMINANCE_ALPHA_SNORM
 0x9012

	)

4230 
	#GL_INTENSITY_SNORM
 0x9013

	)

4231 
	#GL_ALPHA8_SNORM
 0x9014

	)

4232 
	#GL_LUMINANCE8_SNORM
 0x9015

	)

4233 
	#GL_LUMINANCE8_ALPHA8_SNORM
 0x9016

	)

4234 
	#GL_INTENSITY8_SNORM
 0x9017

	)

4235 
	#GL_ALPHA16_SNORM
 0x9018

	)

4236 
	#GL_LUMINANCE16_SNORM
 0x9019

	)

4237 
	#GL_LUMINANCE16_ALPHA16_SNORM
 0x901A

	)

4238 
	#GL_INTENSITY16_SNORM
 0x901B

	)

4254 #i‚de‡
GL_AMD_døw_buf„rs_bÀnd


4257 #i‚de‡
GL_APPLE_ãxtuª_ønge


4258 
	#GL_TEXTURE_RANGE_LENGTH_APPLE
 0x85B7

	)

4259 
	#GL_TEXTURE_RANGE_POINTER_APPLE
 0x85B8

	)

4260 
	#GL_TEXTURE_STORAGE_HINT_APPLE
 0x85BC

	)

4261 
	#GL_STORAGE_PRIVATE_APPLE
 0x85BD

	)

4266 #i‚de‡
GL_APPLE_Êﬂt_pixñs


4267 
	#GL_HALF_APPLE
 0x140B

	)

4268 
	#GL_RGBA_FLOAT32_APPLE
 0x8814

	)

4269 
	#GL_RGB_FLOAT32_APPLE
 0x8815

	)

4270 
	#GL_ALPHA_FLOAT32_APPLE
 0x8816

	)

4271 
	#GL_INTENSITY_FLOAT32_APPLE
 0x8817

	)

4272 
	#GL_LUMINANCE_FLOAT32_APPLE
 0x8818

	)

4273 
	#GL_LUMINANCE_ALPHA_FLOAT32_APPLE
 0x8819

	)

4274 
	#GL_RGBA_FLOAT16_APPLE
 0x881A

	)

4275 
	#GL_RGB_FLOAT16_APPLE
 0x881B

	)

4276 
	#GL_ALPHA_FLOAT16_APPLE
 0x881C

	)

4277 
	#GL_INTENSITY_FLOAT16_APPLE
 0x881D

	)

4278 
	#GL_LUMINANCE_FLOAT16_APPLE
 0x881E

	)

4279 
	#GL_LUMINANCE_ALPHA_FLOAT16_APPLE
 0x881F

	)

4280 
	#GL_COLOR_FLOAT_APPLE
 0x8A0F

	)

4283 #i‚de‡
GL_APPLE_vîãx_¥ogøm_evÆu©‹s


4284 
	#GL_VERTEX_ATTRIB_MAP1_APPLE
 0x8A00

	)

4285 
	#GL_VERTEX_ATTRIB_MAP2_APPLE
 0x8A01

	)

4286 
	#GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE
 0x8A02

	)

4287 
	#GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE
 0x8A03

	)

4288 
	#GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE
 0x8A04

	)

4289 
	#GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE
 0x8A05

	)

4290 
	#GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE
 0x8A06

	)

4291 
	#GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE
 0x8A07

	)

4292 
	#GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE
 0x8A08

	)

4293 
	#GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE
 0x8A09

	)

4296 #i‚de‡
GL_APPLE_aux_dïth_°ícû


4297 
	#GL_AUX_DEPTH_STENCIL_APPLE
 0x8A14

	)

4300 #i‚de‡
GL_APPLE_obje˘_purgóbÀ


4301 
	#GL_BUFFER_OBJECT_APPLE
 0x85B3

	)

4302 
	#GL_RELEASED_APPLE
 0x8A19

	)

4303 
	#GL_VOLATILE_APPLE
 0x8A1A

	)

4304 
	#GL_RETAINED_APPLE
 0x8A1B

	)

4305 
	#GL_UNDEFINED_APPLE
 0x8A1C

	)

4306 
	#GL_PURGEABLE_APPLE
 0x8A1D

	)

4309 #i‚de‡
GL_APPLE_row_byãs


4310 
	#GL_PACK_ROW_BYTES_APPLE
 0x8A15

	)

4311 
	#GL_UNPACK_ROW_BYTES_APPLE
 0x8A16

	)

4314 #i‚de‡
GL_APPLE_rgb_422


4315 
	#GL_RGB_422_APPLE
 0x8A1F

	)

4320 #i‚de‡
GL_NV_video_ˇ±uª


4321 
	#GL_VIDEO_BUFFER_NV
 0x9020

	)

4322 
	#GL_VIDEO_BUFFER_BINDING_NV
 0x9021

	)

4323 
	#GL_FIELD_UPPER_NV
 0x9022

	)

4324 
	#GL_FIELD_LOWER_NV
 0x9023

	)

4325 
	#GL_NUM_VIDEO_CAPTURE_STREAMS_NV
 0x9024

	)

4326 
	#GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV
 0x9025

	)

4327 
	#GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV
 0x9026

	)

4328 
	#GL_LAST_VIDEO_CAPTURE_STATUS_NV
 0x9027

	)

4329 
	#GL_VIDEO_BUFFER_PITCH_NV
 0x9028

	)

4330 
	#GL_VIDEO_COLOR_CONVERSION_MATRIX_NV
 0x9029

	)

4331 
	#GL_VIDEO_COLOR_CONVERSION_MAX_NV
 0x902A

	)

4332 
	#GL_VIDEO_COLOR_CONVERSION_MIN_NV
 0x902B

	)

4333 
	#GL_VIDEO_COLOR_CONVERSION_OFFSET_NV
 0x902C

	)

4334 
	#GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV
 0x902D

	)

4335 
	#GL_PARTIAL_SUCCESS_NV
 0x902E

	)

4336 
	#GL_SUCCESS_NV
 0x902F

	)

4337 
	#GL_FAILURE_NV
 0x9030

	)

4338 
	#GL_YCBYCR8_422_NV
 0x9031

	)

4339 
	#GL_YCBAYCR8A_4224_NV
 0x9032

	)

4340 
	#GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV
 0x9033

	)

4341 
	#GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV
 0x9034

	)

4342 
	#GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV
 0x9035

	)

4343 
	#GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV
 0x9036

	)

4344 
	#GL_Z4Y12Z4CB12Z4CR12_444_NV
 0x9037

	)

4345 
	#GL_VIDEO_CAPTURE_FRAME_WIDTH_NV
 0x9038

	)

4346 
	#GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV
 0x9039

	)

4347 
	#GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV
 0x903A

	)

4348 
	#GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV
 0x903B

	)

4349 
	#GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV
 0x903C

	)

4352 #i‚de‡
GL_NV_c›y_image


4355 #i‚de‡
GL_EXT_£∑øã_shadî_obje˘s


4356 
	#GL_ACTIVE_PROGRAM_EXT
 0x8B8D

	)

4359 #i‚de‡
GL_NV_∑ømëî_buf„r_obje˘2


4362 #i‚de‡
GL_NV_shadî_buf„r_lﬂd


4363 
	#GL_BUFFER_GPU_ADDRESS_NV
 0x8F1D

	)

4364 
	#GL_GPU_ADDRESS_NV
 0x8F34

	)

4365 
	#GL_MAX_SHADER_BUFFER_ADDRESS_NV
 0x8F35

	)

4368 #i‚de‡
GL_NV_vîãx_buf„r_unifõd_mem‹y


4369 
	#GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
 0x8F1E

	)

4370 
	#GL_ELEMENT_ARRAY_UNIFIED_NV
 0x8F1F

	)

4371 
	#GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
 0x8F20

	)

4372 
	#GL_VERTEX_ARRAY_ADDRESS_NV
 0x8F21

	)

4373 
	#GL_NORMAL_ARRAY_ADDRESS_NV
 0x8F22

	)

4374 
	#GL_COLOR_ARRAY_ADDRESS_NV
 0x8F23

	)

4375 
	#GL_INDEX_ARRAY_ADDRESS_NV
 0x8F24

	)

4376 
	#GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
 0x8F25

	)

4377 
	#GL_EDGE_FLAG_ARRAY_ADDRESS_NV
 0x8F26

	)

4378 
	#GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
 0x8F27

	)

4379 
	#GL_FOG_COORD_ARRAY_ADDRESS_NV
 0x8F28

	)

4380 
	#GL_ELEMENT_ARRAY_ADDRESS_NV
 0x8F29

	)

4381 
	#GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
 0x8F2A

	)

4382 
	#GL_VERTEX_ARRAY_LENGTH_NV
 0x8F2B

	)

4383 
	#GL_NORMAL_ARRAY_LENGTH_NV
 0x8F2C

	)

4384 
	#GL_COLOR_ARRAY_LENGTH_NV
 0x8F2D

	)

4385 
	#GL_INDEX_ARRAY_LENGTH_NV
 0x8F2E

	)

4386 
	#GL_TEXTURE_COORD_ARRAY_LENGTH_NV
 0x8F2F

	)

4387 
	#GL_EDGE_FLAG_ARRAY_LENGTH_NV
 0x8F30

	)

4388 
	#GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
 0x8F31

	)

4389 
	#GL_FOG_COORD_ARRAY_LENGTH_NV
 0x8F32

	)

4390 
	#GL_ELEMENT_ARRAY_LENGTH_NV
 0x8F33

	)

4393 #i‚de‡
GL_NV_ãxtuª_b¨rõr


4399 
	~<°ddef.h
>

4400 #i‚de‡
GL_VERSION_2_0


4402 
	tGLch¨
;

4405 #i‚de‡
GL_VERSION_1_5


4407 
±rdiff_t
 
	tGLöçå
;

4408 
±rdiff_t
 
	tGLsizeùå
;

4411 #i‚de‡
GL_ARB_vîãx_buf„r_obje˘


4413 
±rdiff_t
 
	tGLöçåARB
;

4414 
±rdiff_t
 
	tGLsizeùåARB
;

4417 #i‚de‡
GL_ARB_shadî_obje˘s


4419 
	tGLch¨ARB
;

4420 
	tGLh™dÀARB
;

4424 #i‚de‡
GL_ARB_hÆf_Êﬂt_pixñ


4425 
	tGLhÆfARB
;

4428 #i‚de‡
GL_NV_hÆf_Êﬂt


4429 
	tGLhÆfNV
;

4432 #i‚de‡
GLEXT_64_TYPES_DEFINED


4434 
	#GLEXT_64_TYPES_DEFINED


	)

4437 #i‡
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

4438 
	~<öây≥s.h
>

4439 #ñi‡
deföed
(
__sun__
Ë|| deföed(
__digôÆ__
)

4440 
	~<öây≥s.h
>

4441 #i‡
deföed
(
__STDC__
)

4442 #i‡
deföed
(
__¨ch64__
Ë|| deföed(
_LP64
)

4443 
	töt64_t
;

4444 
	tuöt64_t
;

4446 
	töt64_t
;

4447 
	tuöt64_t
;

4450 #ñi‡
deföed
–
__VMS
 ) || deföed(
__sgi
)

4451 
	~<öây≥s.h
>

4452 #ñi‡
deföed
(
__SCO__
Ë|| deföed(
__USLC__
)

4453 
	~<°döt.h
>

4454 #ñi‡
deföed
(
__UNIXOS2__
Ë|| deföed(
__SOL64__
)

4455 
	töt32_t
;

4456 
	töt64_t
;

4457 
	tuöt64_t
;

4458 #ñi‡
deföed
(
_WIN32
Ë&& deföed(
__GNUC__
)

4459 
	~<°döt.h
>

4460 #ñi‡
deföed
(
_WIN32
)

4461 
__öt32
 
	töt32_t
;

4462 
__öt64
 
	töt64_t
;

4463 
	t__öt64
 
	tuöt64_t
;

4466 
	~<öây≥s.h
>

4470 #i‚de‡
GL_EXT_timî_quîy


4471 
öt64_t
 
	tGLöt64EXT
;

4472 
uöt64_t
 
	tGLuöt64EXT
;

4475 #i‚de‡
ARB_sync


4476 
öt64_t
 
	tGLöt64
;

4477 
uöt64_t
 
	tGLuöt64
;

4478 
__GLsync
 *
	tGLsync
;

4481 #i‚de‡
GL_VERSION_1_2


4482 
	#GL_VERSION_1_2
 1

	)

4483 #ifde‡
GL_GLEXT_PROTOTYPES


4484 
GLAPI
 
APIENTRY
 
glBÀndCﬁ‹
 (
GL˛ampf
, GLclampf, GLclampf, GLclampf);

4485 
GLAPI
 
APIENTRY
 
glBÀndEqu©i⁄
 (
GLíum
);

4486 
GLAPI
 
APIENTRY
 
glDøwR™geEÀmíts
 (
GLíum
, 
GLuöt
, GLuöt, 
GLsizei
, GLíum, c⁄° 
GLvoid
 *);

4487 
GLAPI
 
APIENTRY
 
glTexImage3D
 (
GLíum
, 
GLöt
, GLöt, 
GLsizei
, GLsizei, GLsizei, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

4488 
GLAPI
 
APIENTRY
 
glTexSubImage3D
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

4489 
GLAPI
 
APIENTRY
 
glC›yTexSubImage3D
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei);

4491 (
APIENTRYP
 
	tPFNGLBLENDCOLORPROC
Ë(
	tGL˛ampf
 
	tªd
, GL˛amp‡
	tgªí
, GL˛amp‡
	tblue
, GL˛amp‡
	tÆpha
);

4492 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONPROC
Ë(
	tGLíum
 
	tmode
);

4493 (
APIENTRYP
 
	tPFNGLDRAWRANGEELEMENTSPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
);

4494 (
APIENTRYP
 
	tPFNGLTEXIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

4495 (
APIENTRYP
 
	tPFNGLTEXSUBIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

4496 (
APIENTRYP
 
	tPFNGLCOPYTEXSUBIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

4499 #i‚de‡
GL_VERSION_1_2_DEPRECATED


4500 
	#GL_VERSION_1_2_DEPRECATED
 1

	)

4501 #ifde‡
GL_GLEXT_PROTOTYPES


4502 
GLAPI
 
APIENTRY
 
glCﬁ‹TabÀ
 (
GLíum
, GLíum, 
GLsizei
, GLíum, GLíum, c⁄° 
GLvoid
 *);

4503 
GLAPI
 
APIENTRY
 
glCﬁ‹TabÀP¨amëîfv
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

4504 
GLAPI
 
APIENTRY
 
glCﬁ‹TabÀP¨amëîiv
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

4505 
GLAPI
 
APIENTRY
 
glC›yCﬁ‹TabÀ
 (
GLíum
, GLíum, 
GLöt
, GLöt, 
GLsizei
);

4506 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀ
 (
GLíum
, GLíum, GLíum, 
GLvoid
 *);

4507 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀP¨amëîfv
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

4508 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀP¨amëîiv
 (
GLíum
, GLíum, 
GLöt
 *);

4509 
GLAPI
 
APIENTRY
 
glCﬁ‹SubTabÀ
 (
GLíum
, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

4510 
GLAPI
 
APIENTRY
 
glC›yCﬁ‹SubTabÀ
 (
GLíum
, 
GLsizei
, 
GLöt
, GLint, GLsizei);

4511 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄Fûãr1D
 (
GLíum
, GLíum, 
GLsizei
, GLíum, GLíum, c⁄° 
GLvoid
 *);

4512 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄Fûãr2D
 (
GLíum
, GLíum, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

4513 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄P¨amëîf
 (
GLíum
, GLíum, 
GLÊﬂt
);

4514 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄P¨amëîfv
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

4515 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄P¨amëîi
 (
GLíum
, GLíum, 
GLöt
);

4516 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄P¨amëîiv
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

4517 
GLAPI
 
APIENTRY
 
glC›yC⁄vﬁuti⁄Fûãr1D
 (
GLíum
, GLíum, 
GLöt
, GLöt, 
GLsizei
);

4518 
GLAPI
 
APIENTRY
 
glC›yC⁄vﬁuti⁄Fûãr2D
 (
GLíum
, GLíum, 
GLöt
, GLöt, 
GLsizei
, GLsizei);

4519 
GLAPI
 
APIENTRY
 
glGëC⁄vﬁuti⁄Fûãr
 (
GLíum
, GLíum, GLíum, 
GLvoid
 *);

4520 
GLAPI
 
APIENTRY
 
glGëC⁄vﬁuti⁄P¨amëîfv
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

4521 
GLAPI
 
APIENTRY
 
glGëC⁄vﬁuti⁄P¨amëîiv
 (
GLíum
, GLíum, 
GLöt
 *);

4522 
GLAPI
 
APIENTRY
 
glGëSï¨abÀFûãr
 (
GLíum
, GLíum, GLíum, 
GLvoid
 *, GLvoid *, GLvoid *);

4523 
GLAPI
 
APIENTRY
 
glSï¨abÀFûãr2D
 (
GLíum
, GLíum, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *, const GLvoid *);

4524 
GLAPI
 
APIENTRY
 
glGëHi°ogøm
 (
GLíum
, 
GLboﬁón
, GLíum, GLíum, 
GLvoid
 *);

4525 
GLAPI
 
APIENTRY
 
glGëHi°ogømP¨amëîfv
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

4526 
GLAPI
 
APIENTRY
 
glGëHi°ogømP¨amëîiv
 (
GLíum
, GLíum, 
GLöt
 *);

4527 
GLAPI
 
APIENTRY
 
glGëMömax
 (
GLíum
, 
GLboﬁón
, GLíum, GLíum, 
GLvoid
 *);

4528 
GLAPI
 
APIENTRY
 
glGëMömaxP¨amëîfv
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

4529 
GLAPI
 
APIENTRY
 
glGëMömaxP¨amëîiv
 (
GLíum
, GLíum, 
GLöt
 *);

4530 
GLAPI
 
APIENTRY
 
glHi°ogøm
 (
GLíum
, 
GLsizei
, GLíum, 
GLboﬁón
);

4531 
GLAPI
 
APIENTRY
 
glMömax
 (
GLíum
, GLíum, 
GLboﬁón
);

4532 
GLAPI
 
APIENTRY
 
glRe£tHi°ogøm
 (
GLíum
);

4533 
GLAPI
 
APIENTRY
 
glRe£tMömax
 (
GLíum
);

4535 (
APIENTRYP
 
	tPFNGLCOLORTABLEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tèbÀ
);

4536 (
APIENTRYP
 
	tPFNGLCOLORTABLEPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

4537 (
APIENTRYP
 
	tPFNGLCOLORTABLEPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

4538 (
APIENTRYP
 
	tPFNGLCOPYCOLORTABLEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

4539 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	tèbÀ
);

4540 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

4541 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4542 (
APIENTRYP
 
	tPFNGLCOLORSUBTABLEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	t°¨t
, GLsizeò
	tcou¡
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	td©a
);

4543 (
APIENTRYP
 
	tPFNGLCOPYCOLORSUBTABLEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	t°¨t
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLsizeò
	twidth
);

4544 (
APIENTRYP
 
	tPFNGLCONVOLUTIONFILTER1DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	timage
);

4545 (
APIENTRYP
 
	tPFNGLCONVOLUTIONFILTER2DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	timage
);

4546 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERFPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øms
);

4547 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

4548 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øms
);

4549 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

4550 (
APIENTRYP
 
	tPFNGLCOPYCONVOLUTIONFILTER1DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

4551 (
APIENTRYP
 
	tPFNGLCOPYCONVOLUTIONFILTER2DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

4552 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONFILTERPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	timage
);

4553 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

4554 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4555 (
APIENTRYP
 
	tPFNGLGETSEPARABLEFILTERPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	trow
, GLvoid *
	tcﬁumn
, GLvoid *
	t•™
);

4556 (
APIENTRYP
 
	tPFNGLSEPARABLEFILTER2DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	trow
, c⁄° GLvoid *
	tcﬁumn
);

4557 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLboﬁón
 
	tª£t
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	tvÆues
);

4558 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

4559 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4560 (
APIENTRYP
 
	tPFNGLGETMINMAXPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLboﬁón
 
	tª£t
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	tvÆues
);

4561 (
APIENTRYP
 
	tPFNGLGETMINMAXPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

4562 (
APIENTRYP
 
	tPFNGLGETMINMAXPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4563 (
APIENTRYP
 
	tPFNGLHISTOGRAMPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	twidth
, GLíum 
	töã∫Æf‹m©
, 
	tGLboﬁón
 
	tsök
);

4564 (
APIENTRYP
 
	tPFNGLMINMAXPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLboﬁón
 
	tsök
);

4565 (
APIENTRYP
 
	tPFNGLRESETHISTOGRAMPROC
Ë(
	tGLíum
 
	tèrgë
);

4566 (
APIENTRYP
 
	tPFNGLRESETMINMAXPROC
Ë(
	tGLíum
 
	tèrgë
);

4569 #i‚de‡
GL_VERSION_1_3


4570 
	#GL_VERSION_1_3
 1

	)

4571 #ifde‡
GL_GLEXT_PROTOTYPES


4572 
GLAPI
 
APIENTRY
 
glA˘iveTextuª
 (
GLíum
);

4573 
GLAPI
 
APIENTRY
 
glSam∂eCovîage
 (
GL˛ampf
, 
GLboﬁón
);

4574 
GLAPI
 
APIENTRY
 
glCom¥es£dTexImage3D
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLsizei, GLöt, GLsizei, c⁄° 
GLvoid
 *);

4575 
GLAPI
 
APIENTRY
 
glCom¥es£dTexImage2D
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLöt, GLsizei, c⁄° 
GLvoid
 *);

4576 
GLAPI
 
APIENTRY
 
glCom¥es£dTexImage1D
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLöt, GLsizei, c⁄° 
GLvoid
 *);

4577 
GLAPI
 
APIENTRY
 
glCom¥es£dTexSubImage3D
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLíum, GLsizei, c⁄° 
GLvoid
 *);

4578 
GLAPI
 
APIENTRY
 
glCom¥es£dTexSubImage2D
 (
GLíum
, 
GLöt
, GLöt, GLöt, 
GLsizei
, GLsizei, GLíum, GLsizei, c⁄° 
GLvoid
 *);

4579 
GLAPI
 
APIENTRY
 
glCom¥es£dTexSubImage1D
 (
GLíum
, 
GLöt
, GLöt, 
GLsizei
, GLíum, GLsizei, c⁄° 
GLvoid
 *);

4580 
GLAPI
 
APIENTRY
 
glGëCom¥es£dTexImage
 (
GLíum
, 
GLöt
, 
GLvoid
 *);

4582 (
APIENTRYP
 
	tPFNGLACTIVETEXTUREPROC
Ë(
	tGLíum
 
	tãxtuª
);

4583 (
APIENTRYP
 
	tPFNGLSAMPLECOVERAGEPROC
Ë(
	tGL˛ampf
 
	tvÆue
, 
	tGLboﬁón
 
	tövît
);

4584 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

4585 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE2DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

4586 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE1DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

4587 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

4588 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

4589 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

4590 (
APIENTRYP
 
	tPFNGLGETCOMPRESSEDTEXIMAGEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, 
	tGLvoid
 *
	timg
);

4593 #i‚de‡
GL_VERSION_1_3_DEPRECATED


4594 
	#GL_VERSION_1_3_DEPRECATED
 1

	)

4595 #ifde‡
GL_GLEXT_PROTOTYPES


4596 
GLAPI
 
APIENTRY
 
glClõ¡A˘iveTextuª
 (
GLíum
);

4597 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1d
 (
GLíum
, 
GLdoubÀ
);

4598 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1dv
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

4599 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1f
 (
GLíum
, 
GLÊﬂt
);

4600 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1fv
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

4601 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1i
 (
GLíum
, 
GLöt
);

4602 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1iv
 (
GLíum
, c⁄° 
GLöt
 *);

4603 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1s
 (
GLíum
, 
GLsh‹t
);

4604 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1sv
 (
GLíum
, c⁄° 
GLsh‹t
 *);

4605 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2d
 (
GLíum
, 
GLdoubÀ
, GLdouble);

4606 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2dv
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

4607 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2f
 (
GLíum
, 
GLÊﬂt
, GLfloat);

4608 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2fv
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

4609 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2i
 (
GLíum
, 
GLöt
, GLint);

4610 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2iv
 (
GLíum
, c⁄° 
GLöt
 *);

4611 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2s
 (
GLíum
, 
GLsh‹t
, GLshort);

4612 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2sv
 (
GLíum
, c⁄° 
GLsh‹t
 *);

4613 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3d
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble);

4614 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3dv
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

4615 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3f
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat);

4616 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3fv
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

4617 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3i
 (
GLíum
, 
GLöt
, GLint, GLint);

4618 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3iv
 (
GLíum
, c⁄° 
GLöt
 *);

4619 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3s
 (
GLíum
, 
GLsh‹t
, GLshort, GLshort);

4620 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3sv
 (
GLíum
, c⁄° 
GLsh‹t
 *);

4621 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4d
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

4622 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4dv
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

4623 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4f
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

4624 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4fv
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

4625 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4i
 (
GLíum
, 
GLöt
, GLint, GLint, GLint);

4626 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4iv
 (
GLíum
, c⁄° 
GLöt
 *);

4627 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4s
 (
GLíum
, 
GLsh‹t
, GLshort, GLshort, GLshort);

4628 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4sv
 (
GLíum
, c⁄° 
GLsh‹t
 *);

4629 
GLAPI
 
APIENTRY
 
glLﬂdTøn•o£M©rixf
 (c⁄° 
GLÊﬂt
 *);

4630 
GLAPI
 
APIENTRY
 
glLﬂdTøn•o£M©rixd
 (c⁄° 
GLdoubÀ
 *);

4631 
GLAPI
 
APIENTRY
 
glMu…Tøn•o£M©rixf
 (c⁄° 
GLÊﬂt
 *);

4632 
GLAPI
 
APIENTRY
 
glMu…Tøn•o£M©rixd
 (c⁄° 
GLdoubÀ
 *);

4634 (
APIENTRYP
 
	tPFNGLCLIENTACTIVETEXTUREPROC
Ë(
	tGLíum
 
	tãxtuª
);

4635 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
);

4636 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1DVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

4637 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1FPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
);

4638 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1FVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

4639 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1IPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
);

4640 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1IVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

4641 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1SPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
);

4642 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1SVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

4643 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
);

4644 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2DVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

4645 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2FPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
);

4646 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2FVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

4647 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2IPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
);

4648 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2IVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

4649 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2SPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
);

4650 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2SVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

4651 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
, GLdoubÀ 
	tr
);

4652 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3DVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

4653 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3FPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
);

4654 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3FVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

4655 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3IPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
, GLöà
	tr
);

4656 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3IVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

4657 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3SPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
, GLsh‹à
	tr
);

4658 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3SVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

4659 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
, GLdoubÀ 
	tr
, GLdoubÀ 
	tq
);

4660 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4DVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

4661 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4FPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tq
);

4662 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4FVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

4663 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4IPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
, GLöà
	tr
, GLöà
	tq
);

4664 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4IVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

4665 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4SPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
, GLsh‹à
	tr
, GLsh‹à
	tq
);

4666 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4SVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

4667 (
APIENTRYP
 
	tPFNGLLOADTRANSPOSEMATRIXFPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tm
);

4668 (
APIENTRYP
 
	tPFNGLLOADTRANSPOSEMATRIXDPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tm
);

4669 (
APIENTRYP
 
	tPFNGLMULTTRANSPOSEMATRIXFPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tm
);

4670 (
APIENTRYP
 
	tPFNGLMULTTRANSPOSEMATRIXDPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tm
);

4673 #i‚de‡
GL_VERSION_1_4


4674 
	#GL_VERSION_1_4
 1

	)

4675 #ifde‡
GL_GLEXT_PROTOTYPES


4676 
GLAPI
 
APIENTRY
 
glBÀndFuncSï¨©e
 (
GLíum
, GLenum, GLenum, GLenum);

4677 
GLAPI
 
APIENTRY
 
glMu…iDøwAºays
 (
GLíum
, 
GLöt
 *, 
GLsizei
 *, GLsizei);

4678 
GLAPI
 
APIENTRY
 
glMu…iDøwEÀmíts
 (
GLíum
, c⁄° 
GLsizei
 *, GLíum, c⁄° 
GLvoid
* *, GLsizei);

4679 
GLAPI
 
APIENTRY
 
glPoötP¨amëîf
 (
GLíum
, 
GLÊﬂt
);

4680 
GLAPI
 
APIENTRY
 
glPoötP¨amëîfv
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

4681 
GLAPI
 
APIENTRY
 
glPoötP¨amëîi
 (
GLíum
, 
GLöt
);

4682 
GLAPI
 
APIENTRY
 
glPoötP¨amëîiv
 (
GLíum
, c⁄° 
GLöt
 *);

4684 (
APIENTRYP
 
	tPFNGLBLENDFUNCSEPARATEPROC
Ë(
	tGLíum
 
	tsÁ˘‹RGB
, GLíum 
	tdÁ˘‹RGB
, GLíum 
	tsÁ˘‹AÕha
, GLíum 
	tdÁ˘‹AÕha
);

4685 (
APIENTRYP
 
	tPFNGLMULTIDRAWARRAYSPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 *
	tfú°
, 
	tGLsizei
 *
	tcou¡
, GLsizeò
	t¥imcou¡
);

4686 (
APIENTRYP
 
	tPFNGLMULTIDRAWELEMENTSPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLsizei
 *
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
* *
	tödi˚s
, GLsizeò
	t¥imcou¡
);

4687 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

4688 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFVPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

4689 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

4690 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERIVPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

4693 #i‚de‡
GL_VERSION_1_4_DEPRECATED


4694 
	#GL_VERSION_1_4_DEPRECATED
 1

	)

4695 #ifde‡
GL_GLEXT_PROTOTYPES


4696 
GLAPI
 
APIENTRY
 
glFogCo‹df
 (
GLÊﬂt
);

4697 
GLAPI
 
APIENTRY
 
glFogCo‹dfv
 (c⁄° 
GLÊﬂt
 *);

4698 
GLAPI
 
APIENTRY
 
glFogCo‹dd
 (
GLdoubÀ
);

4699 
GLAPI
 
APIENTRY
 
glFogCo‹ddv
 (c⁄° 
GLdoubÀ
 *);

4700 
GLAPI
 
APIENTRY
 
glFogCo‹dPoöãr
 (
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

4701 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3b
 (
GLbyã
, GLbyte, GLbyte);

4702 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3bv
 (c⁄° 
GLbyã
 *);

4703 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3d
 (
GLdoubÀ
, GLdouble, GLdouble);

4704 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3dv
 (c⁄° 
GLdoubÀ
 *);

4705 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3f
 (
GLÊﬂt
, GLfloat, GLfloat);

4706 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3fv
 (c⁄° 
GLÊﬂt
 *);

4707 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3i
 (
GLöt
, GLint, GLint);

4708 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3iv
 (c⁄° 
GLöt
 *);

4709 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3s
 (
GLsh‹t
, GLshort, GLshort);

4710 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3sv
 (c⁄° 
GLsh‹t
 *);

4711 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3ub
 (
GLubyã
, GLubyte, GLubyte);

4712 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3ubv
 (c⁄° 
GLubyã
 *);

4713 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3ui
 (
GLuöt
, GLuint, GLuint);

4714 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3uiv
 (c⁄° 
GLuöt
 *);

4715 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3us
 (
GLush‹t
, GLushort, GLushort);

4716 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3usv
 (c⁄° 
GLush‹t
 *);

4717 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹Poöãr
 (
GLöt
, 
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

4718 
GLAPI
 
APIENTRY
 
glWödowPos2d
 (
GLdoubÀ
, GLdouble);

4719 
GLAPI
 
APIENTRY
 
glWödowPos2dv
 (c⁄° 
GLdoubÀ
 *);

4720 
GLAPI
 
APIENTRY
 
glWödowPos2f
 (
GLÊﬂt
, GLfloat);

4721 
GLAPI
 
APIENTRY
 
glWödowPos2fv
 (c⁄° 
GLÊﬂt
 *);

4722 
GLAPI
 
APIENTRY
 
glWödowPos2i
 (
GLöt
, GLint);

4723 
GLAPI
 
APIENTRY
 
glWödowPos2iv
 (c⁄° 
GLöt
 *);

4724 
GLAPI
 
APIENTRY
 
glWödowPos2s
 (
GLsh‹t
, GLshort);

4725 
GLAPI
 
APIENTRY
 
glWödowPos2sv
 (c⁄° 
GLsh‹t
 *);

4726 
GLAPI
 
APIENTRY
 
glWödowPos3d
 (
GLdoubÀ
, GLdouble, GLdouble);

4727 
GLAPI
 
APIENTRY
 
glWödowPos3dv
 (c⁄° 
GLdoubÀ
 *);

4728 
GLAPI
 
APIENTRY
 
glWödowPos3f
 (
GLÊﬂt
, GLfloat, GLfloat);

4729 
GLAPI
 
APIENTRY
 
glWödowPos3fv
 (c⁄° 
GLÊﬂt
 *);

4730 
GLAPI
 
APIENTRY
 
glWödowPos3i
 (
GLöt
, GLint, GLint);

4731 
GLAPI
 
APIENTRY
 
glWödowPos3iv
 (c⁄° 
GLöt
 *);

4732 
GLAPI
 
APIENTRY
 
glWödowPos3s
 (
GLsh‹t
, GLshort, GLshort);

4733 
GLAPI
 
APIENTRY
 
glWödowPos3sv
 (c⁄° 
GLsh‹t
 *);

4735 (
APIENTRYP
 
	tPFNGLFOGCOORDFPROC
Ë(
	tGLÊﬂt
 
	tco‹d
);

4736 (
APIENTRYP
 
	tPFNGLFOGCOORDFVPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tco‹d
);

4737 (
APIENTRYP
 
	tPFNGLFOGCOORDDPROC
Ë(
	tGLdoubÀ
 
	tco‹d
);

4738 (
APIENTRYP
 
	tPFNGLFOGCOORDDVPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tco‹d
);

4739 (
APIENTRYP
 
	tPFNGLFOGCOORDPOINTERPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

4740 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3BPROC
Ë(
	tGLbyã
 
	tªd
, GLbyã 
	tgªí
, GLbyã 
	tblue
);

4741 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3BVPROC
Ë(c⁄° 
	tGLbyã
 *
	tv
);

4742 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3DPROC
Ë(
	tGLdoubÀ
 
	tªd
, GLdoubÀ 
	tgªí
, GLdoubÀ 
	tblue
);

4743 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3DVPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

4744 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3FPROC
Ë(
	tGLÊﬂt
 
	tªd
, GLÊﬂà
	tgªí
, GLÊﬂà
	tblue
);

4745 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3FVPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

4746 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3IPROC
Ë(
	tGLöt
 
	tªd
, GLöà
	tgªí
, GLöà
	tblue
);

4747 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3IVPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

4748 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3SPROC
Ë(
	tGLsh‹t
 
	tªd
, GLsh‹à
	tgªí
, GLsh‹à
	tblue
);

4749 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3SVPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

4750 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UBPROC
Ë(
	tGLubyã
 
	tªd
, GLubyã 
	tgªí
, GLubyã 
	tblue
);

4751 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UBVPROC
Ë(c⁄° 
	tGLubyã
 *
	tv
);

4752 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UIPROC
Ë(
	tGLuöt
 
	tªd
, GLuöà
	tgªí
, GLuöà
	tblue
);

4753 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UIVPROC
Ë(c⁄° 
	tGLuöt
 *
	tv
);

4754 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3USPROC
Ë(
	tGLush‹t
 
	tªd
, GLush‹à
	tgªí
, GLush‹à
	tblue
);

4755 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3USVPROC
Ë(c⁄° 
	tGLush‹t
 *
	tv
);

4756 (
APIENTRYP
 
	tPFNGLSECONDARYCOLORPOINTERPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

4757 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

4758 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DVPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

4759 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

4760 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FVPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

4761 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
);

4762 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IVPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

4763 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

4764 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SVPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

4765 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

4766 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DVPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

4767 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

4768 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FVPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

4769 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

4770 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IVPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

4771 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

4772 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SVPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

4775 #i‚de‡
GL_VERSION_1_5


4776 
	#GL_VERSION_1_5
 1

	)

4777 #ifde‡
GL_GLEXT_PROTOTYPES


4778 
GLAPI
 
APIENTRY
 
glGíQuîõs
 (
GLsizei
, 
GLuöt
 *);

4779 
GLAPI
 
APIENTRY
 
glDñëeQuîõs
 (
GLsizei
, c⁄° 
GLuöt
 *);

4780 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsQuîy
 (
GLuöt
);

4781 
GLAPI
 
APIENTRY
 
glBegöQuîy
 (
GLíum
, 
GLuöt
);

4782 
GLAPI
 
APIENTRY
 
glEndQuîy
 (
GLíum
);

4783 
GLAPI
 
APIENTRY
 
glGëQuîyiv
 (
GLíum
, GLíum, 
GLöt
 *);

4784 
GLAPI
 
APIENTRY
 
glGëQuîyObje˘iv
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

4785 
GLAPI
 
APIENTRY
 
glGëQuîyObje˘uiv
 (
GLuöt
, 
GLíum
, GLuint *);

4786 
GLAPI
 
APIENTRY
 
glBödBuf„r
 (
GLíum
, 
GLuöt
);

4787 
GLAPI
 
APIENTRY
 
glDñëeBuf„rs
 (
GLsizei
, c⁄° 
GLuöt
 *);

4788 
GLAPI
 
APIENTRY
 
glGíBuf„rs
 (
GLsizei
, 
GLuöt
 *);

4789 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsBuf„r
 (
GLuöt
);

4790 
GLAPI
 
APIENTRY
 
glBuf„rD©a
 (
GLíum
, 
GLsizeùå
, c⁄° 
GLvoid
 *, GLenum);

4791 
GLAPI
 
APIENTRY
 
glBuf„rSubD©a
 (
GLíum
, 
GLöçå
, 
GLsizeùå
, c⁄° 
GLvoid
 *);

4792 
GLAPI
 
APIENTRY
 
glGëBuf„rSubD©a
 (
GLíum
, 
GLöçå
, 
GLsizeùå
, 
GLvoid
 *);

4793 
GLAPI
 
GLvoid
* 
APIENTRY
 
glM≠Buf„r
 (
GLíum
, GLenum);

4794 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glUnm≠Buf„r
 (
GLíum
);

4795 
GLAPI
 
APIENTRY
 
glGëBuf„rP¨amëîiv
 (
GLíum
, GLíum, 
GLöt
 *);

4796 
GLAPI
 
APIENTRY
 
glGëBuf„rPoöãrv
 (
GLíum
, GLíum, 
GLvoid
* *);

4798 (
APIENTRYP
 
	tPFNGLGENQUERIESPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tids
);

4799 (
APIENTRYP
 
	tPFNGLDELETEQUERIESPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tids
);

4800 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISQUERYPROC
Ë(
	tGLuöt
 
	tid
);

4801 (
APIENTRYP
 
	tPFNGLBEGINQUERYPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
);

4802 (
APIENTRYP
 
	tPFNGLENDQUERYPROC
Ë(
	tGLíum
 
	tèrgë
);

4803 (
APIENTRYP
 
	tPFNGLGETQUERYIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4804 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTIVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4805 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTUIVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, GLuöà*
	t∑øms
);

4806 (
APIENTRYP
 
	tPFNGLBINDBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tbuf„r
);

4807 (
APIENTRYP
 
	tPFNGLDELETEBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tbuf„rs
);

4808 (
APIENTRYP
 
	tPFNGLGENBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tbuf„rs
);

4809 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISBUFFERPROC
Ë(
	tGLuöt
 
	tbuf„r
);

4810 (
APIENTRYP
 
	tPFNGLBUFFERDATAPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizeùå
 
	tsize
, c⁄° 
	tGLvoid
 *
	td©a
, GLíum 
	tußge
);

4811 (
APIENTRYP
 
	tPFNGLBUFFERSUBDATAPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
, c⁄° 
	tGLvoid
 *
	td©a
);

4812 (
APIENTRYP
 
	tPFNGLGETBUFFERSUBDATAPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
, 
	tGLvoid
 *
	td©a
);

4813 
	gGLvoid
* (
	tAPIENTRYP
 
	tPFNGLMAPBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tac˚ss
);

4814 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLUNMAPBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
);

4815 (
APIENTRYP
 
	tPFNGLGETBUFFERPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4816 (
APIENTRYP
 
	tPFNGLGETBUFFERPOINTERVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLvoid
* *
	t∑øms
);

4819 #i‚de‡
GL_VERSION_2_0


4820 
	#GL_VERSION_2_0
 1

	)

4821 #ifde‡
GL_GLEXT_PROTOTYPES


4822 
GLAPI
 
APIENTRY
 
glBÀndEqu©i⁄Sï¨©e
 (
GLíum
, GLenum);

4823 
GLAPI
 
APIENTRY
 
glDøwBuf„rs
 (
GLsizei
, c⁄° 
GLíum
 *);

4824 
GLAPI
 
APIENTRY
 
glSãncûOpSï¨©e
 (
GLíum
, GLenum, GLenum, GLenum);

4825 
GLAPI
 
APIENTRY
 
glSãncûFuncSï¨©e
 (
GLíum
, GLíum, 
GLöt
, 
GLuöt
);

4826 
GLAPI
 
APIENTRY
 
glSãncûMaskSï¨©e
 (
GLíum
, 
GLuöt
);

4827 
GLAPI
 
APIENTRY
 
glAâachShadî
 (
GLuöt
, GLuint);

4828 
GLAPI
 
APIENTRY
 
glBödAâribLoˇti⁄
 (
GLuöt
, GLuöt, c⁄° 
GLch¨
 *);

4829 
GLAPI
 
APIENTRY
 
glCompûeShadî
 (
GLuöt
);

4830 
GLAPI
 
GLuöt
 
APIENTRY
 
glCª©eProgøm
 ();

4831 
GLAPI
 
GLuöt
 
APIENTRY
 
glCª©eShadî
 (
GLíum
);

4832 
GLAPI
 
APIENTRY
 
glDñëeProgøm
 (
GLuöt
);

4833 
GLAPI
 
APIENTRY
 
glDñëeShadî
 (
GLuöt
);

4834 
GLAPI
 
APIENTRY
 
glDëachShadî
 (
GLuöt
, GLuint);

4835 
GLAPI
 
APIENTRY
 
glDißbÀVîãxAâribAºay
 (
GLuöt
);

4836 
GLAPI
 
APIENTRY
 
glE«bÀVîãxAâribAºay
 (
GLuöt
);

4837 
GLAPI
 
APIENTRY
 
glGëA˘iveAârib
 (
GLuöt
, GLuöt, 
GLsizei
, GLsizeò*, 
GLöt
 *, 
GLíum
 *, 
GLch¨
 *);

4838 
GLAPI
 
APIENTRY
 
glGëA˘iveUnif‹m
 (
GLuöt
, GLuöt, 
GLsizei
, GLsizeò*, 
GLöt
 *, 
GLíum
 *, 
GLch¨
 *);

4839 
GLAPI
 
APIENTRY
 
glGëAâachedShadîs
 (
GLuöt
, 
GLsizei
, GLsizei *, GLuint *);

4840 
GLAPI
 
GLöt
 
APIENTRY
 
glGëAâribLoˇti⁄
 (
GLuöt
, c⁄° 
GLch¨
 *);

4841 
GLAPI
 
APIENTRY
 
glGëProgømiv
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

4842 
GLAPI
 
APIENTRY
 
glGëProgømInfoLog
 (
GLuöt
, 
GLsizei
, GLsizeò*, 
GLch¨
 *);

4843 
GLAPI
 
APIENTRY
 
glGëShadîiv
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

4844 
GLAPI
 
APIENTRY
 
glGëShadîInfoLog
 (
GLuöt
, 
GLsizei
, GLsizeò*, 
GLch¨
 *);

4845 
GLAPI
 
APIENTRY
 
glGëShadîSour˚
 (
GLuöt
, 
GLsizei
, GLsizeò*, 
GLch¨
 *);

4846 
GLAPI
 
GLöt
 
APIENTRY
 
glGëUnif‹mLoˇti⁄
 (
GLuöt
, c⁄° 
GLch¨
 *);

4847 
GLAPI
 
APIENTRY
 
glGëUnif‹mfv
 (
GLuöt
, 
GLöt
, 
GLÊﬂt
 *);

4848 
GLAPI
 
APIENTRY
 
glGëUnif‹miv
 (
GLuöt
, 
GLöt
, GLint *);

4849 
GLAPI
 
APIENTRY
 
glGëVîãxAâribdv
 (
GLuöt
, 
GLíum
, 
GLdoubÀ
 *);

4850 
GLAPI
 
APIENTRY
 
glGëVîãxAâribfv
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

4851 
GLAPI
 
APIENTRY
 
glGëVîãxAâribiv
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

4852 
GLAPI
 
APIENTRY
 
glGëVîãxAâribPoöãrv
 (
GLuöt
, 
GLíum
, 
GLvoid
* *);

4853 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsProgøm
 (
GLuöt
);

4854 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsShadî
 (
GLuöt
);

4855 
GLAPI
 
APIENTRY
 
glLökProgøm
 (
GLuöt
);

4856 
GLAPI
 
APIENTRY
 
glShadîSour˚
 (
GLuöt
, 
GLsizei
, c⁄° 
GLch¨
* *, c⁄° 
GLöt
 *);

4857 
GLAPI
 
APIENTRY
 
glU£Progøm
 (
GLuöt
);

4858 
GLAPI
 
APIENTRY
 
glUnif‹m1f
 (
GLöt
, 
GLÊﬂt
);

4859 
GLAPI
 
APIENTRY
 
glUnif‹m2f
 (
GLöt
, 
GLÊﬂt
, GLfloat);

4860 
GLAPI
 
APIENTRY
 
glUnif‹m3f
 (
GLöt
, 
GLÊﬂt
, GLfloat, GLfloat);

4861 
GLAPI
 
APIENTRY
 
glUnif‹m4f
 (
GLöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

4862 
GLAPI
 
APIENTRY
 
glUnif‹m1i
 (
GLöt
, GLint);

4863 
GLAPI
 
APIENTRY
 
glUnif‹m2i
 (
GLöt
, GLint, GLint);

4864 
GLAPI
 
APIENTRY
 
glUnif‹m3i
 (
GLöt
, GLint, GLint, GLint);

4865 
GLAPI
 
APIENTRY
 
glUnif‹m4i
 (
GLöt
, GLint, GLint, GLint, GLint);

4866 
GLAPI
 
APIENTRY
 
glUnif‹m1fv
 (
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

4867 
GLAPI
 
APIENTRY
 
glUnif‹m2fv
 (
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

4868 
GLAPI
 
APIENTRY
 
glUnif‹m3fv
 (
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

4869 
GLAPI
 
APIENTRY
 
glUnif‹m4fv
 (
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

4870 
GLAPI
 
APIENTRY
 
glUnif‹m1iv
 (
GLöt
, 
GLsizei
, const GLint *);

4871 
GLAPI
 
APIENTRY
 
glUnif‹m2iv
 (
GLöt
, 
GLsizei
, const GLint *);

4872 
GLAPI
 
APIENTRY
 
glUnif‹m3iv
 (
GLöt
, 
GLsizei
, const GLint *);

4873 
GLAPI
 
APIENTRY
 
glUnif‹m4iv
 (
GLöt
, 
GLsizei
, const GLint *);

4874 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix2fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

4875 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix3fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

4876 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix4fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

4877 
GLAPI
 
APIENTRY
 
glVÆid©eProgøm
 (
GLuöt
);

4878 
GLAPI
 
APIENTRY
 
glVîãxAârib1d
 (
GLuöt
, 
GLdoubÀ
);

4879 
GLAPI
 
APIENTRY
 
glVîãxAârib1dv
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

4880 
GLAPI
 
APIENTRY
 
glVîãxAârib1f
 (
GLuöt
, 
GLÊﬂt
);

4881 
GLAPI
 
APIENTRY
 
glVîãxAârib1fv
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

4882 
GLAPI
 
APIENTRY
 
glVîãxAârib1s
 (
GLuöt
, 
GLsh‹t
);

4883 
GLAPI
 
APIENTRY
 
glVîãxAârib1sv
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

4884 
GLAPI
 
APIENTRY
 
glVîãxAârib2d
 (
GLuöt
, 
GLdoubÀ
, GLdouble);

4885 
GLAPI
 
APIENTRY
 
glVîãxAârib2dv
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

4886 
GLAPI
 
APIENTRY
 
glVîãxAârib2f
 (
GLuöt
, 
GLÊﬂt
, GLfloat);

4887 
GLAPI
 
APIENTRY
 
glVîãxAârib2fv
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

4888 
GLAPI
 
APIENTRY
 
glVîãxAârib2s
 (
GLuöt
, 
GLsh‹t
, GLshort);

4889 
GLAPI
 
APIENTRY
 
glVîãxAârib2sv
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

4890 
GLAPI
 
APIENTRY
 
glVîãxAârib3d
 (
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble);

4891 
GLAPI
 
APIENTRY
 
glVîãxAârib3dv
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

4892 
GLAPI
 
APIENTRY
 
glVîãxAârib3f
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat);

4893 
GLAPI
 
APIENTRY
 
glVîãxAârib3fv
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

4894 
GLAPI
 
APIENTRY
 
glVîãxAârib3s
 (
GLuöt
, 
GLsh‹t
, GLshort, GLshort);

4895 
GLAPI
 
APIENTRY
 
glVîãxAârib3sv
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

4896 
GLAPI
 
APIENTRY
 
glVîãxAârib4Nbv
 (
GLuöt
, c⁄° 
GLbyã
 *);

4897 
GLAPI
 
APIENTRY
 
glVîãxAârib4Niv
 (
GLuöt
, c⁄° 
GLöt
 *);

4898 
GLAPI
 
APIENTRY
 
glVîãxAârib4Nsv
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

4899 
GLAPI
 
APIENTRY
 
glVîãxAârib4Nub
 (
GLuöt
, 
GLubyã
, GLubyte, GLubyte, GLubyte);

4900 
GLAPI
 
APIENTRY
 
glVîãxAârib4Nubv
 (
GLuöt
, c⁄° 
GLubyã
 *);

4901 
GLAPI
 
APIENTRY
 
glVîãxAârib4Nuiv
 (
GLuöt
, const GLuint *);

4902 
GLAPI
 
APIENTRY
 
glVîãxAârib4Nusv
 (
GLuöt
, c⁄° 
GLush‹t
 *);

4903 
GLAPI
 
APIENTRY
 
glVîãxAârib4bv
 (
GLuöt
, c⁄° 
GLbyã
 *);

4904 
GLAPI
 
APIENTRY
 
glVîãxAârib4d
 (
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

4905 
GLAPI
 
APIENTRY
 
glVîãxAârib4dv
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

4906 
GLAPI
 
APIENTRY
 
glVîãxAârib4f
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

4907 
GLAPI
 
APIENTRY
 
glVîãxAârib4fv
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

4908 
GLAPI
 
APIENTRY
 
glVîãxAârib4iv
 (
GLuöt
, c⁄° 
GLöt
 *);

4909 
GLAPI
 
APIENTRY
 
glVîãxAârib4s
 (
GLuöt
, 
GLsh‹t
, GLshort, GLshort, GLshort);

4910 
GLAPI
 
APIENTRY
 
glVîãxAârib4sv
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

4911 
GLAPI
 
APIENTRY
 
glVîãxAârib4ubv
 (
GLuöt
, c⁄° 
GLubyã
 *);

4912 
GLAPI
 
APIENTRY
 
glVîãxAârib4uiv
 (
GLuöt
, const GLuint *);

4913 
GLAPI
 
APIENTRY
 
glVîãxAârib4usv
 (
GLuöt
, c⁄° 
GLush‹t
 *);

4914 
GLAPI
 
APIENTRY
 
glVîãxAâribPoöãr
 (
GLuöt
, 
GLöt
, 
GLíum
, 
GLboﬁón
, 
GLsizei
, c⁄° 
GLvoid
 *);

4916 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONSEPARATEPROC
Ë(
	tGLíum
 
	tmodeRGB
, GLíum 
	tmodeAÕha
);

4917 (
APIENTRYP
 
	tPFNGLDRAWBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLíum
 *
	tbufs
);

4918 (
APIENTRYP
 
	tPFNGLSTENCILOPSEPARATEPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tsÁû
, GLíum 
	tdpÁû
, GLíum 
	tdµass
);

4919 (
APIENTRYP
 
	tPFNGLSTENCILFUNCSEPARATEPROC
Ë(
	tGLíum
 
	t‰⁄tfunc
, GLíum 
	tbackfunc
, 
	tGLöt
 
	tªf
, 
	tGLuöt
 
	tmask
);

4920 (
APIENTRYP
 
	tPFNGLSTENCILMASKSEPARATEPROC
Ë(
	tGLíum
 
	tÁ˚
, 
	tGLuöt
 
	tmask
);

4921 (
APIENTRYP
 
	tPFNGLATTACHSHADERPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tshadî
);

4922 (
APIENTRYP
 
	tPFNGLBINDATTRIBLOCATIONPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, c⁄° 
	tGLch¨
 *
	t«me
);

4923 (
APIENTRYP
 
	tPFNGLCOMPILESHADERPROC
Ë(
	tGLuöt
 
	tshadî
);

4924 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLCREATEPROGRAMPROC
) ();

4925 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLCREATESHADERPROC
Ë(
	tGLíum
 
	tty≥
);

4926 (
APIENTRYP
 
	tPFNGLDELETEPROGRAMPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

4927 (
APIENTRYP
 
	tPFNGLDELETESHADERPROC
Ë(
	tGLuöt
 
	tshadî
);

4928 (
APIENTRYP
 
	tPFNGLDETACHSHADERPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tshadî
);

4929 (
APIENTRYP
 
	tPFNGLDISABLEVERTEXATTRIBARRAYPROC
Ë(
	tGLuöt
 
	tödex
);

4930 (
APIENTRYP
 
	tPFNGLENABLEVERTEXATTRIBARRAYPROC
Ë(
	tGLuöt
 
	tödex
);

4931 (
APIENTRYP
 
	tPFNGLGETACTIVEATTRIBPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLöt
 *
	tsize
, 
	tGLíum
 *
	tty≥
, 
	tGLch¨
 *
	t«me
);

4932 (
APIENTRYP
 
	tPFNGLGETACTIVEUNIFORMPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLöt
 *
	tsize
, 
	tGLíum
 *
	tty≥
, 
	tGLch¨
 *
	t«me
);

4933 (
APIENTRYP
 
	tPFNGLGETATTACHEDSHADERSPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tmaxCou¡
, GLsizeò*
	tcou¡
, GLuöà*
	tobj
);

4934 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETATTRIBLOCATIONPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 *
	t«me
);

4935 (
APIENTRYP
 
	tPFNGLGETPROGRAMIVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4936 (
APIENTRYP
 
	tPFNGLGETPROGRAMINFOLOGPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLch¨
 *
	töfoLog
);

4937 (
APIENTRYP
 
	tPFNGLGETSHADERIVPROC
Ë(
	tGLuöt
 
	tshadî
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4938 (
APIENTRYP
 
	tPFNGLGETSHADERINFOLOGPROC
Ë(
	tGLuöt
 
	tshadî
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLch¨
 *
	töfoLog
);

4939 (
APIENTRYP
 
	tPFNGLGETSHADERSOURCEPROC
Ë(
	tGLuöt
 
	tshadî
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLch¨
 *
	tsour˚
);

4940 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETUNIFORMLOCATIONPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 *
	t«me
);

4941 (
APIENTRYP
 
	tPFNGLGETUNIFORMFVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 *
	t∑øms
);

4942 (
APIENTRYP
 
	tPFNGLGETUNIFORMIVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLöà*
	t∑øms
);

4943 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBDVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLdoubÀ
 *
	t∑øms
);

4944 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBFVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

4945 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4946 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBPOINTERVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLvoid
* *
	tpoöãr
);

4947 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISPROGRAMPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

4948 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISSHADERPROC
Ë(
	tGLuöt
 
	tshadî
);

4949 (
APIENTRYP
 
	tPFNGLLINKPROGRAMPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

4950 (
APIENTRYP
 
	tPFNGLSHADERSOURCEPROC
Ë(
	tGLuöt
 
	tshadî
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLch¨
* *
	t°rög
, c⁄° 
	tGLöt
 *
	tÀngth
);

4951 (
APIENTRYP
 
	tPFNGLUSEPROGRAMPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

4952 (
APIENTRYP
 
	tPFNGLUNIFORM1FPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
);

4953 (
APIENTRYP
 
	tPFNGLUNIFORM2FPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
);

4954 (
APIENTRYP
 
	tPFNGLUNIFORM3FPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
);

4955 (
APIENTRYP
 
	tPFNGLUNIFORM4FPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
, GLÊﬂà
	tv3
);

4956 (
APIENTRYP
 
	tPFNGLUNIFORM1IPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
);

4957 (
APIENTRYP
 
	tPFNGLUNIFORM2IPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
);

4958 (
APIENTRYP
 
	tPFNGLUNIFORM3IPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
, GLöà
	tv2
);

4959 (
APIENTRYP
 
	tPFNGLUNIFORM4IPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
, GLöà
	tv2
, GLöà
	tv3
);

4960 (
APIENTRYP
 
	tPFNGLUNIFORM1FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

4961 (
APIENTRYP
 
	tPFNGLUNIFORM2FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

4962 (
APIENTRYP
 
	tPFNGLUNIFORM3FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

4963 (
APIENTRYP
 
	tPFNGLUNIFORM4FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

4964 (
APIENTRYP
 
	tPFNGLUNIFORM1IVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

4965 (
APIENTRYP
 
	tPFNGLUNIFORM2IVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

4966 (
APIENTRYP
 
	tPFNGLUNIFORM3IVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

4967 (
APIENTRYP
 
	tPFNGLUNIFORM4IVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

4968 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX2FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

4969 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX3FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

4970 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX4FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

4971 (
APIENTRYP
 
	tPFNGLVALIDATEPROGRAMPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

4972 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
);

4973 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

4974 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
);

4975 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

4976 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
);

4977 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

4978 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

4979 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

4980 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

4981 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

4982 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

4983 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

4984 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

4985 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

4986 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

4987 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

4988 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

4989 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

4990 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NBVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 *
	tv
);

4991 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

4992 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NSVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

4993 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLubyã
 
	tx
, GLubyã 
	ty
, GLubyã 
	tz
, GLubyã 
	tw
);

4994 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUBVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 *
	tv
);

4995 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

4996 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUSVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 *
	tv
);

4997 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4BVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 *
	tv
);

4998 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

4999 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5000 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

5001 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5002 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4IVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

5003 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
, GLsh‹à
	tw
);

5004 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

5005 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UBVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 *
	tv
);

5006 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

5007 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4USVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 *
	tv
);

5008 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBPOINTERPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLboﬁón
 
	tn‹mÆized
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

5011 #i‚de‡
GL_VERSION_2_1


5012 
	#GL_VERSION_2_1
 1

	)

5013 #ifde‡
GL_GLEXT_PROTOTYPES


5014 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix2x3fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5015 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix3x2fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5016 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix2x4fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5017 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix4x2fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5018 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix3x4fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5019 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix4x3fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5021 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX2X3FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5022 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX3X2FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5023 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX2X4FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5024 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX4X2FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5025 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX3X4FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5026 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX4X3FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5029 #i‚de‡
GL_VERSION_3_0


5030 
	#GL_VERSION_3_0
 1

	)

5035 #ifde‡
GL_GLEXT_PROTOTYPES


5036 
GLAPI
 
APIENTRY
 
glCﬁ‹Maski
 (
GLuöt
, 
GLboﬁón
, GLboolean, GLboolean, GLboolean);

5037 
GLAPI
 
APIENTRY
 
glGëBoﬁóni_v
 (
GLíum
, 
GLuöt
, 
GLboﬁón
 *);

5038 
GLAPI
 
APIENTRY
 
glGëI¡egîi_v
 (
GLíum
, 
GLuöt
, 
GLöt
 *);

5039 
GLAPI
 
APIENTRY
 
glE«bÀi
 (
GLíum
, 
GLuöt
);

5040 
GLAPI
 
APIENTRY
 
glDißbÀi
 (
GLíum
, 
GLuöt
);

5041 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsE«bÀdi
 (
GLíum
, 
GLuöt
);

5042 
GLAPI
 
APIENTRY
 
glBegöTønsf‹mFìdback
 (
GLíum
);

5043 
GLAPI
 
APIENTRY
 
glEndTønsf‹mFìdback
 ();

5044 
GLAPI
 
APIENTRY
 
glBödBuf„rR™ge
 (
GLíum
, 
GLuöt
, GLuöt, 
GLöçå
, 
GLsizeùå
);

5045 
GLAPI
 
APIENTRY
 
glBödBuf„rBa£
 (
GLíum
, 
GLuöt
, GLuint);

5046 
GLAPI
 
APIENTRY
 
glTønsf‹mFìdbackV¨yögs
 (
GLuöt
, 
GLsizei
, c⁄° 
GLch¨
* *, 
GLíum
);

5047 
GLAPI
 
APIENTRY
 
glGëTønsf‹mFìdbackV¨yög
 (
GLuöt
, GLuöt, 
GLsizei
, GLsizeò*, GLsizeò*, 
GLíum
 *, 
GLch¨
 *);

5048 
GLAPI
 
APIENTRY
 
glCœmpCﬁ‹
 (
GLíum
, GLenum);

5049 
GLAPI
 
APIENTRY
 
glBegöC⁄dôi⁄ÆRídî
 (
GLuöt
, 
GLíum
);

5050 
GLAPI
 
APIENTRY
 
glEndC⁄dôi⁄ÆRídî
 ();

5051 
GLAPI
 
APIENTRY
 
glVîãxAâribIPoöãr
 (
GLuöt
, 
GLöt
, 
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

5052 
GLAPI
 
APIENTRY
 
glGëVîãxAâribIiv
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

5053 
GLAPI
 
APIENTRY
 
glGëVîãxAâribIuiv
 (
GLuöt
, 
GLíum
, GLuint *);

5054 
GLAPI
 
APIENTRY
 
glVîãxAâribI1i
 (
GLuöt
, 
GLöt
);

5055 
GLAPI
 
APIENTRY
 
glVîãxAâribI2i
 (
GLuöt
, 
GLöt
, GLint);

5056 
GLAPI
 
APIENTRY
 
glVîãxAâribI3i
 (
GLuöt
, 
GLöt
, GLint, GLint);

5057 
GLAPI
 
APIENTRY
 
glVîãxAâribI4i
 (
GLuöt
, 
GLöt
, GLint, GLint, GLint);

5058 
GLAPI
 
APIENTRY
 
glVîãxAâribI1ui
 (
GLuöt
, GLuint);

5059 
GLAPI
 
APIENTRY
 
glVîãxAâribI2ui
 (
GLuöt
, GLuint, GLuint);

5060 
GLAPI
 
APIENTRY
 
glVîãxAâribI3ui
 (
GLuöt
, GLuint, GLuint, GLuint);

5061 
GLAPI
 
APIENTRY
 
glVîãxAâribI4ui
 (
GLuöt
, GLuint, GLuint, GLuint, GLuint);

5062 
GLAPI
 
APIENTRY
 
glVîãxAâribI1iv
 (
GLuöt
, c⁄° 
GLöt
 *);

5063 
GLAPI
 
APIENTRY
 
glVîãxAâribI2iv
 (
GLuöt
, c⁄° 
GLöt
 *);

5064 
GLAPI
 
APIENTRY
 
glVîãxAâribI3iv
 (
GLuöt
, c⁄° 
GLöt
 *);

5065 
GLAPI
 
APIENTRY
 
glVîãxAâribI4iv
 (
GLuöt
, c⁄° 
GLöt
 *);

5066 
GLAPI
 
APIENTRY
 
glVîãxAâribI1uiv
 (
GLuöt
, const GLuint *);

5067 
GLAPI
 
APIENTRY
 
glVîãxAâribI2uiv
 (
GLuöt
, const GLuint *);

5068 
GLAPI
 
APIENTRY
 
glVîãxAâribI3uiv
 (
GLuöt
, const GLuint *);

5069 
GLAPI
 
APIENTRY
 
glVîãxAâribI4uiv
 (
GLuöt
, const GLuint *);

5070 
GLAPI
 
APIENTRY
 
glVîãxAâribI4bv
 (
GLuöt
, c⁄° 
GLbyã
 *);

5071 
GLAPI
 
APIENTRY
 
glVîãxAâribI4sv
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

5072 
GLAPI
 
APIENTRY
 
glVîãxAâribI4ubv
 (
GLuöt
, c⁄° 
GLubyã
 *);

5073 
GLAPI
 
APIENTRY
 
glVîãxAâribI4usv
 (
GLuöt
, c⁄° 
GLush‹t
 *);

5074 
GLAPI
 
APIENTRY
 
glGëUnif‹muiv
 (
GLuöt
, 
GLöt
, GLuint *);

5075 
GLAPI
 
APIENTRY
 
glBödFøgD©aLoˇti⁄
 (
GLuöt
, GLuöt, c⁄° 
GLch¨
 *);

5076 
GLAPI
 
GLöt
 
APIENTRY
 
glGëFøgD©aLoˇti⁄
 (
GLuöt
, c⁄° 
GLch¨
 *);

5077 
GLAPI
 
APIENTRY
 
glUnif‹m1ui
 (
GLöt
, 
GLuöt
);

5078 
GLAPI
 
APIENTRY
 
glUnif‹m2ui
 (
GLöt
, 
GLuöt
, GLuint);

5079 
GLAPI
 
APIENTRY
 
glUnif‹m3ui
 (
GLöt
, 
GLuöt
, GLuint, GLuint);

5080 
GLAPI
 
APIENTRY
 
glUnif‹m4ui
 (
GLöt
, 
GLuöt
, GLuint, GLuint, GLuint);

5081 
GLAPI
 
APIENTRY
 
glUnif‹m1uiv
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt
 *);

5082 
GLAPI
 
APIENTRY
 
glUnif‹m2uiv
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt
 *);

5083 
GLAPI
 
APIENTRY
 
glUnif‹m3uiv
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt
 *);

5084 
GLAPI
 
APIENTRY
 
glUnif‹m4uiv
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt
 *);

5085 
GLAPI
 
APIENTRY
 
glTexP¨amëîIiv
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

5086 
GLAPI
 
APIENTRY
 
glTexP¨amëîIuiv
 (
GLíum
, GLíum, c⁄° 
GLuöt
 *);

5087 
GLAPI
 
APIENTRY
 
glGëTexP¨amëîIiv
 (
GLíum
, GLíum, 
GLöt
 *);

5088 
GLAPI
 
APIENTRY
 
glGëTexP¨amëîIuiv
 (
GLíum
, GLíum, 
GLuöt
 *);

5089 
GLAPI
 
APIENTRY
 
glCÀ¨Buf„riv
 (
GLíum
, 
GLöt
, const GLint *);

5090 
GLAPI
 
APIENTRY
 
glCÀ¨Buf„ruiv
 (
GLíum
, 
GLöt
, c⁄° 
GLuöt
 *);

5091 
GLAPI
 
APIENTRY
 
glCÀ¨Buf„rfv
 (
GLíum
, 
GLöt
, c⁄° 
GLÊﬂt
 *);

5092 
GLAPI
 
APIENTRY
 
glCÀ¨Buf„rfi
 (
GLíum
, 
GLöt
, 
GLÊﬂt
, GLint);

5093 
GLAPI
 c⁄° 
GLubyã
 * 
APIENTRY
 
glGëSåögi
 (
GLíum
, 
GLuöt
);

5095 (
APIENTRYP
 
	tPFNGLCOLORMASKIPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLboﬁón
 
	tr
, GLboﬁó¿
	tg
, GLboﬁó¿
	tb
, GLboﬁó¿
	ta
);

5096 (
APIENTRYP
 
	tPFNGLGETBOOLEANI_VPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLboﬁón
 *
	td©a
);

5097 (
APIENTRYP
 
	tPFNGLGETINTEGERI_VPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 *
	td©a
);

5098 (
APIENTRYP
 
	tPFNGLENABLEIPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
);

5099 (
APIENTRYP
 
	tPFNGLDISABLEIPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
);

5100 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISENABLEDIPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
);

5101 (
APIENTRYP
 
	tPFNGLBEGINTRANSFORMFEEDBACKPROC
Ë(
	tGLíum
 
	t¥imôiveMode
);

5102 (
APIENTRYP
 
	tPFNGLENDTRANSFORMFEEDBACKPROC
) ();

5103 (
APIENTRYP
 
	tPFNGLBINDBUFFERRANGEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
);

5104 (
APIENTRYP
 
	tPFNGLBINDBUFFERBASEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
);

5105 (
APIENTRYP
 
	tPFNGLTRANSFORMFEEDBACKVARYINGSPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLch¨
* *
	tv¨yögs
, 
	tGLíum
 
	tbuf„rMode
);

5106 (
APIENTRYP
 
	tPFNGLGETTRANSFORMFEEDBACKVARYINGPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, GLsizeò*
	tsize
, 
	tGLíum
 *
	tty≥
, 
	tGLch¨
 *
	t«me
);

5107 (
APIENTRYP
 
	tPFNGLCLAMPCOLORPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t˛amp
);

5108 (
APIENTRYP
 
	tPFNGLBEGINCONDITIONALRENDERPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tmode
);

5109 (
APIENTRYP
 
	tPFNGLENDCONDITIONALRENDERPROC
) ();

5110 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBIPOINTERPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

5111 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIIVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5112 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIUIVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, GLuöà*
	t∑øms
);

5113 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1IPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
);

5114 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2IPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
);

5115 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3IPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

5116 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4IPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

5117 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1UIPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
);

5118 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2UIPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
);

5119 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3UIPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
);

5120 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4UIPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
, GLuöà
	tw
);

5121 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1IVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

5122 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2IVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

5123 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3IVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

5124 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4IVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

5125 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1UIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

5126 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2UIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

5127 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3UIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

5128 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4UIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

5129 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4BVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 *
	tv
);

5130 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4SVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

5131 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4UBVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 *
	tv
);

5132 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4USVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 *
	tv
);

5133 (
APIENTRYP
 
	tPFNGLGETUNIFORMUIVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLuöà*
	t∑øms
);

5134 (
APIENTRYP
 
	tPFNGLBINDFRAGDATALOCATIONPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tcﬁ‹
, c⁄° 
	tGLch¨
 *
	t«me
);

5135 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETFRAGDATALOCATIONPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 *
	t«me
);

5136 (
APIENTRYP
 
	tPFNGLUNIFORM1UIPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
);

5137 (
APIENTRYP
 
	tPFNGLUNIFORM2UIPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
, GLuöà
	tv1
);

5138 (
APIENTRYP
 
	tPFNGLUNIFORM3UIPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
, GLuöà
	tv1
, GLuöà
	tv2
);

5139 (
APIENTRYP
 
	tPFNGLUNIFORM4UIPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
, GLuöà
	tv1
, GLuöà
	tv2
, GLuöà
	tv3
);

5140 (
APIENTRYP
 
	tPFNGLUNIFORM1UIVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 *
	tvÆue
);

5141 (
APIENTRYP
 
	tPFNGLUNIFORM2UIVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 *
	tvÆue
);

5142 (
APIENTRYP
 
	tPFNGLUNIFORM3UIVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 *
	tvÆue
);

5143 (
APIENTRYP
 
	tPFNGLUNIFORM4UIVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 *
	tvÆue
);

5144 (
APIENTRYP
 
	tPFNGLTEXPARAMETERIIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

5145 (
APIENTRYP
 
	tPFNGLTEXPARAMETERIUIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLuöt
 *
	t∑øms
);

5146 (
APIENTRYP
 
	tPFNGLGETTEXPARAMETERIIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5147 (
APIENTRYP
 
	tPFNGLGETTEXPARAMETERIUIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLuöt
 *
	t∑øms
);

5148 (
APIENTRYP
 
	tPFNGLCLEARBUFFERIVPROC
Ë(
	tGLíum
 
	tbuf„r
, 
	tGLöt
 
	tdøwbuf„r
, c⁄° GLöà*
	tvÆue
);

5149 (
APIENTRYP
 
	tPFNGLCLEARBUFFERUIVPROC
Ë(
	tGLíum
 
	tbuf„r
, 
	tGLöt
 
	tdøwbuf„r
, c⁄° 
	tGLuöt
 *
	tvÆue
);

5150 (
APIENTRYP
 
	tPFNGLCLEARBUFFERFVPROC
Ë(
	tGLíum
 
	tbuf„r
, 
	tGLöt
 
	tdøwbuf„r
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5151 (
APIENTRYP
 
	tPFNGLCLEARBUFFERFIPROC
Ë(
	tGLíum
 
	tbuf„r
, 
	tGLöt
 
	tdøwbuf„r
, 
	tGLÊﬂt
 
	tdïth
, GLöà
	t°ícû
);

5152 c⁄° 
	tGLubyã
 * (
	tAPIENTRYP
 
	tPFNGLGETSTRINGIPROC
Ë(
	tGLíum
 
	t«me
, 
	tGLuöt
 
	tödex
);

5155 #i‚de‡
GL_VERSION_3_1


5156 
	#GL_VERSION_3_1
 1

	)

5160 #ifde‡
GL_GLEXT_PROTOTYPES


5161 
GLAPI
 
APIENTRY
 
glDøwAºaysIn°™˚d
 (
GLíum
, 
GLöt
, 
GLsizei
, GLsizei);

5162 
GLAPI
 
APIENTRY
 
glDøwEÀmítsIn°™˚d
 (
GLíum
, 
GLsizei
, GLíum, c⁄° 
GLvoid
 *, GLsizei);

5163 
GLAPI
 
APIENTRY
 
glTexBuf„r
 (
GLíum
, GLíum, 
GLuöt
);

5164 
GLAPI
 
APIENTRY
 
glPrimôiveRe°¨tIndex
 (
GLuöt
);

5166 (
APIENTRYP
 
	tPFNGLDRAWARRAYSINSTANCEDPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
, GLsizeò
	t¥imcou¡
);

5167 (
APIENTRYP
 
	tPFNGLDRAWELEMENTSINSTANCEDPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
, GLsizeò
	t¥imcou¡
);

5168 (
APIENTRYP
 
	tPFNGLTEXBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLuöt
 
	tbuf„r
);

5169 (
APIENTRYP
 
	tPFNGLPRIMITIVERESTARTINDEXPROC
Ë(
	tGLuöt
 
	tödex
);

5172 #i‚de‡
GL_VERSION_3_2


5173 
	#GL_VERSION_3_2
 1

	)

5179 #ifde‡
GL_GLEXT_PROTOTYPES


5180 
GLAPI
 
APIENTRY
 
glGëI¡egî64i_v
 (
GLíum
, 
GLuöt
, 
GLöt64
 *);

5181 
GLAPI
 
APIENTRY
 
glGëBuf„rP¨amëîi64v
 (
GLíum
, GLíum, 
GLöt64
 *);

5182 
GLAPI
 
APIENTRY
 
glProgømP¨amëîi
 (
GLuöt
, 
GLíum
, 
GLöt
);

5183 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuª
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
);

5184 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuªFa˚
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
, GLenum);

5186 (
APIENTRYP
 
	tPFNGLGETINTEGER64I_VPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt64
 *
	td©a
);

5187 (
APIENTRYP
 
	tPFNGLGETBUFFERPARAMETERI64VPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt64
 *
	t∑øms
);

5188 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETERIPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	tvÆue
);

5189 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTUREPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

5190 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTUREFACEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLíum 
	tÁ˚
);

5193 #i‚de‡
GL_ARB_mu…ôextuª


5194 
	#GL_ARB_mu…ôextuª
 1

	)

5195 #ifde‡
GL_GLEXT_PROTOTYPES


5196 
GLAPI
 
APIENTRY
 
glA˘iveTextuªARB
 (
GLíum
);

5197 
GLAPI
 
APIENTRY
 
glClõ¡A˘iveTextuªARB
 (
GLíum
);

5198 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1dARB
 (
GLíum
, 
GLdoubÀ
);

5199 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1dvARB
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

5200 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1fARB
 (
GLíum
, 
GLÊﬂt
);

5201 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1fvARB
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

5202 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1iARB
 (
GLíum
, 
GLöt
);

5203 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1ivARB
 (
GLíum
, c⁄° 
GLöt
 *);

5204 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1sARB
 (
GLíum
, 
GLsh‹t
);

5205 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1svARB
 (
GLíum
, c⁄° 
GLsh‹t
 *);

5206 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2dARB
 (
GLíum
, 
GLdoubÀ
, GLdouble);

5207 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2dvARB
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

5208 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2fARB
 (
GLíum
, 
GLÊﬂt
, GLfloat);

5209 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2fvARB
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

5210 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2iARB
 (
GLíum
, 
GLöt
, GLint);

5211 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2ivARB
 (
GLíum
, c⁄° 
GLöt
 *);

5212 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2sARB
 (
GLíum
, 
GLsh‹t
, GLshort);

5213 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2svARB
 (
GLíum
, c⁄° 
GLsh‹t
 *);

5214 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3dARB
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble);

5215 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3dvARB
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

5216 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3fARB
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat);

5217 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3fvARB
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

5218 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3iARB
 (
GLíum
, 
GLöt
, GLint, GLint);

5219 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3ivARB
 (
GLíum
, c⁄° 
GLöt
 *);

5220 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3sARB
 (
GLíum
, 
GLsh‹t
, GLshort, GLshort);

5221 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3svARB
 (
GLíum
, c⁄° 
GLsh‹t
 *);

5222 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4dARB
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

5223 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4dvARB
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

5224 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4fARB
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

5225 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4fvARB
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

5226 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4iARB
 (
GLíum
, 
GLöt
, GLint, GLint, GLint);

5227 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4ivARB
 (
GLíum
, c⁄° 
GLöt
 *);

5228 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4sARB
 (
GLíum
, 
GLsh‹t
, GLshort, GLshort, GLshort);

5229 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4svARB
 (
GLíum
, c⁄° 
GLsh‹t
 *);

5231 (
APIENTRYP
 
	tPFNGLACTIVETEXTUREARBPROC
Ë(
	tGLíum
 
	tãxtuª
);

5232 (
APIENTRYP
 
	tPFNGLCLIENTACTIVETEXTUREARBPROC
Ë(
	tGLíum
 
	tãxtuª
);

5233 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
);

5234 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5235 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
);

5236 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5237 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
);

5238 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

5239 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
);

5240 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

5241 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
);

5242 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5243 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
);

5244 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5245 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
);

5246 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

5247 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
);

5248 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

5249 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
, GLdoubÀ 
	tr
);

5250 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5251 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
);

5252 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5253 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
, GLöà
	tr
);

5254 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

5255 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
, GLsh‹à
	tr
);

5256 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

5257 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
, GLdoubÀ 
	tr
, GLdoubÀ 
	tq
);

5258 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5259 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tq
);

5260 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5261 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
, GLöà
	tr
, GLöà
	tq
);

5262 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

5263 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
, GLsh‹à
	tr
, GLsh‹à
	tq
);

5264 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

5267 #i‚de‡
GL_ARB_å™•o£_m©rix


5268 
	#GL_ARB_å™•o£_m©rix
 1

	)

5269 #ifde‡
GL_GLEXT_PROTOTYPES


5270 
GLAPI
 
APIENTRY
 
glLﬂdTøn•o£M©rixfARB
 (c⁄° 
GLÊﬂt
 *);

5271 
GLAPI
 
APIENTRY
 
glLﬂdTøn•o£M©rixdARB
 (c⁄° 
GLdoubÀ
 *);

5272 
GLAPI
 
APIENTRY
 
glMu…Tøn•o£M©rixfARB
 (c⁄° 
GLÊﬂt
 *);

5273 
GLAPI
 
APIENTRY
 
glMu…Tøn•o£M©rixdARB
 (c⁄° 
GLdoubÀ
 *);

5275 (
APIENTRYP
 
	tPFNGLLOADTRANSPOSEMATRIXFARBPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tm
);

5276 (
APIENTRYP
 
	tPFNGLLOADTRANSPOSEMATRIXDARBPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tm
);

5277 (
APIENTRYP
 
	tPFNGLMULTTRANSPOSEMATRIXFARBPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tm
);

5278 (
APIENTRYP
 
	tPFNGLMULTTRANSPOSEMATRIXDARBPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tm
);

5281 #i‚de‡
GL_ARB_mu…ißm∂e


5282 
	#GL_ARB_mu…ißm∂e
 1

	)

5283 #ifde‡
GL_GLEXT_PROTOTYPES


5284 
GLAPI
 
APIENTRY
 
glSam∂eCovîageARB
 (
GL˛ampf
, 
GLboﬁón
);

5286 (
APIENTRYP
 
	tPFNGLSAMPLECOVERAGEARBPROC
Ë(
	tGL˛ampf
 
	tvÆue
, 
	tGLboﬁón
 
	tövît
);

5289 #i‚de‡
GL_ARB_ãxtuª_ív_add


5290 
	#GL_ARB_ãxtuª_ív_add
 1

	)

5293 #i‚de‡
GL_ARB_ãxtuª_cube_m≠


5294 
	#GL_ARB_ãxtuª_cube_m≠
 1

	)

5297 #i‚de‡
GL_ARB_ãxtuª_com¥essi⁄


5298 
	#GL_ARB_ãxtuª_com¥essi⁄
 1

	)

5299 #ifde‡
GL_GLEXT_PROTOTYPES


5300 
GLAPI
 
APIENTRY
 
glCom¥es£dTexImage3DARB
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLsizei, GLöt, GLsizei, c⁄° 
GLvoid
 *);

5301 
GLAPI
 
APIENTRY
 
glCom¥es£dTexImage2DARB
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLöt, GLsizei, c⁄° 
GLvoid
 *);

5302 
GLAPI
 
APIENTRY
 
glCom¥es£dTexImage1DARB
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLöt, GLsizei, c⁄° 
GLvoid
 *);

5303 
GLAPI
 
APIENTRY
 
glCom¥es£dTexSubImage3DARB
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLíum, GLsizei, c⁄° 
GLvoid
 *);

5304 
GLAPI
 
APIENTRY
 
glCom¥es£dTexSubImage2DARB
 (
GLíum
, 
GLöt
, GLöt, GLöt, 
GLsizei
, GLsizei, GLíum, GLsizei, c⁄° 
GLvoid
 *);

5305 
GLAPI
 
APIENTRY
 
glCom¥es£dTexSubImage1DARB
 (
GLíum
, 
GLöt
, GLöt, 
GLsizei
, GLíum, GLsizei, c⁄° 
GLvoid
 *);

5306 
GLAPI
 
APIENTRY
 
glGëCom¥es£dTexImageARB
 (
GLíum
, 
GLöt
, 
GLvoid
 *);

5308 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE3DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

5309 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE2DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

5310 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE1DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

5311 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

5312 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

5313 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

5314 (
APIENTRYP
 
	tPFNGLGETCOMPRESSEDTEXIMAGEARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, 
	tGLvoid
 *
	timg
);

5317 #i‚de‡
GL_ARB_ãxtuª_b‹dî_˛amp


5318 
	#GL_ARB_ãxtuª_b‹dî_˛amp
 1

	)

5321 #i‚de‡
GL_ARB_poöt_∑ømëîs


5322 
	#GL_ARB_poöt_∑ømëîs
 1

	)

5323 #ifde‡
GL_GLEXT_PROTOTYPES


5324 
GLAPI
 
APIENTRY
 
glPoötP¨amëîfARB
 (
GLíum
, 
GLÊﬂt
);

5325 
GLAPI
 
APIENTRY
 
glPoötP¨amëîfvARB
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

5327 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFARBPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

5328 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFVARBPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

5331 #i‚de‡
GL_ARB_vîãx_bÀnd


5332 
	#GL_ARB_vîãx_bÀnd
 1

	)

5333 #ifde‡
GL_GLEXT_PROTOTYPES


5334 
GLAPI
 
APIENTRY
 
glWeightbvARB
 (
GLöt
, c⁄° 
GLbyã
 *);

5335 
GLAPI
 
APIENTRY
 
glWeightsvARB
 (
GLöt
, c⁄° 
GLsh‹t
 *);

5336 
GLAPI
 
APIENTRY
 
glWeightivARB
 (
GLöt
, const GLint *);

5337 
GLAPI
 
APIENTRY
 
glWeightfvARB
 (
GLöt
, c⁄° 
GLÊﬂt
 *);

5338 
GLAPI
 
APIENTRY
 
glWeightdvARB
 (
GLöt
, c⁄° 
GLdoubÀ
 *);

5339 
GLAPI
 
APIENTRY
 
glWeightubvARB
 (
GLöt
, c⁄° 
GLubyã
 *);

5340 
GLAPI
 
APIENTRY
 
glWeightusvARB
 (
GLöt
, c⁄° 
GLush‹t
 *);

5341 
GLAPI
 
APIENTRY
 
glWeightuivARB
 (
GLöt
, c⁄° 
GLuöt
 *);

5342 
GLAPI
 
APIENTRY
 
glWeightPoöãrARB
 (
GLöt
, 
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

5343 
GLAPI
 
APIENTRY
 
glVîãxBÀndARB
 (
GLöt
);

5345 (
APIENTRYP
 
	tPFNGLWEIGHTBVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLbyã
 *
	tweights
);

5346 (
APIENTRYP
 
	tPFNGLWEIGHTSVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLsh‹t
 *
	tweights
);

5347 (
APIENTRYP
 
	tPFNGLWEIGHTIVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° GLöà*
	tweights
);

5348 (
APIENTRYP
 
	tPFNGLWEIGHTFVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLÊﬂt
 *
	tweights
);

5349 (
APIENTRYP
 
	tPFNGLWEIGHTDVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLdoubÀ
 *
	tweights
);

5350 (
APIENTRYP
 
	tPFNGLWEIGHTUBVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLubyã
 *
	tweights
);

5351 (
APIENTRYP
 
	tPFNGLWEIGHTUSVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLush‹t
 *
	tweights
);

5352 (
APIENTRYP
 
	tPFNGLWEIGHTUIVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLuöt
 *
	tweights
);

5353 (
APIENTRYP
 
	tPFNGLWEIGHTPOINTERARBPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

5354 (
APIENTRYP
 
	tPFNGLVERTEXBLENDARBPROC
Ë(
	tGLöt
 
	tcou¡
);

5357 #i‚de‡
GL_ARB_m©rix_∑Àâe


5358 
	#GL_ARB_m©rix_∑Àâe
 1

	)

5359 #ifde‡
GL_GLEXT_PROTOTYPES


5360 
GLAPI
 
APIENTRY
 
glCuºítPÆëãM©rixARB
 (
GLöt
);

5361 
GLAPI
 
APIENTRY
 
glM©rixIndexubvARB
 (
GLöt
, c⁄° 
GLubyã
 *);

5362 
GLAPI
 
APIENTRY
 
glM©rixIndexusvARB
 (
GLöt
, c⁄° 
GLush‹t
 *);

5363 
GLAPI
 
APIENTRY
 
glM©rixIndexuivARB
 (
GLöt
, c⁄° 
GLuöt
 *);

5364 
GLAPI
 
APIENTRY
 
glM©rixIndexPoöãrARB
 (
GLöt
, 
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

5366 (
APIENTRYP
 
	tPFNGLCURRENTPALETTEMATRIXARBPROC
Ë(
	tGLöt
 
	tödex
);

5367 (
APIENTRYP
 
	tPFNGLMATRIXINDEXUBVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLubyã
 *
	tödi˚s
);

5368 (
APIENTRYP
 
	tPFNGLMATRIXINDEXUSVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLush‹t
 *
	tödi˚s
);

5369 (
APIENTRYP
 
	tPFNGLMATRIXINDEXUIVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLuöt
 *
	tödi˚s
);

5370 (
APIENTRYP
 
	tPFNGLMATRIXINDEXPOINTERARBPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

5373 #i‚de‡
GL_ARB_ãxtuª_ív_comböe


5374 
	#GL_ARB_ãxtuª_ív_comböe
 1

	)

5377 #i‚de‡
GL_ARB_ãxtuª_ív_¸ossb¨


5378 
	#GL_ARB_ãxtuª_ív_¸ossb¨
 1

	)

5381 #i‚de‡
GL_ARB_ãxtuª_ív_dŸ3


5382 
	#GL_ARB_ãxtuª_ív_dŸ3
 1

	)

5385 #i‚de‡
GL_ARB_ãxtuª_múr‹ed_ª≥©


5386 
	#GL_ARB_ãxtuª_múr‹ed_ª≥©
 1

	)

5389 #i‚de‡
GL_ARB_dïth_ãxtuª


5390 
	#GL_ARB_dïth_ãxtuª
 1

	)

5393 #i‚de‡
GL_ARB_shadow


5394 
	#GL_ARB_shadow
 1

	)

5397 #i‚de‡
GL_ARB_shadow_ambõ¡


5398 
	#GL_ARB_shadow_ambõ¡
 1

	)

5401 #i‚de‡
GL_ARB_wödow_pos


5402 
	#GL_ARB_wödow_pos
 1

	)

5403 #ifde‡
GL_GLEXT_PROTOTYPES


5404 
GLAPI
 
APIENTRY
 
glWödowPos2dARB
 (
GLdoubÀ
, GLdouble);

5405 
GLAPI
 
APIENTRY
 
glWödowPos2dvARB
 (c⁄° 
GLdoubÀ
 *);

5406 
GLAPI
 
APIENTRY
 
glWödowPos2fARB
 (
GLÊﬂt
, GLfloat);

5407 
GLAPI
 
APIENTRY
 
glWödowPos2fvARB
 (c⁄° 
GLÊﬂt
 *);

5408 
GLAPI
 
APIENTRY
 
glWödowPos2iARB
 (
GLöt
, GLint);

5409 
GLAPI
 
APIENTRY
 
glWödowPos2ivARB
 (c⁄° 
GLöt
 *);

5410 
GLAPI
 
APIENTRY
 
glWödowPos2sARB
 (
GLsh‹t
, GLshort);

5411 
GLAPI
 
APIENTRY
 
glWödowPos2svARB
 (c⁄° 
GLsh‹t
 *);

5412 
GLAPI
 
APIENTRY
 
glWödowPos3dARB
 (
GLdoubÀ
, GLdouble, GLdouble);

5413 
GLAPI
 
APIENTRY
 
glWödowPos3dvARB
 (c⁄° 
GLdoubÀ
 *);

5414 
GLAPI
 
APIENTRY
 
glWödowPos3fARB
 (
GLÊﬂt
, GLfloat, GLfloat);

5415 
GLAPI
 
APIENTRY
 
glWödowPos3fvARB
 (c⁄° 
GLÊﬂt
 *);

5416 
GLAPI
 
APIENTRY
 
glWödowPos3iARB
 (
GLöt
, GLint, GLint);

5417 
GLAPI
 
APIENTRY
 
glWödowPos3ivARB
 (c⁄° 
GLöt
 *);

5418 
GLAPI
 
APIENTRY
 
glWödowPos3sARB
 (
GLsh‹t
, GLshort, GLshort);

5419 
GLAPI
 
APIENTRY
 
glWödowPos3svARB
 (c⁄° 
GLsh‹t
 *);

5421 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DARBPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

5422 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DVARBPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

5423 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FARBPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

5424 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FVARBPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

5425 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IARBPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
);

5426 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IVARBPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

5427 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SARBPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

5428 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SVARBPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

5429 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DARBPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

5430 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DVARBPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

5431 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FARBPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5432 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FVARBPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

5433 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IARBPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

5434 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IVARBPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

5435 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SARBPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

5436 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SVARBPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

5439 #i‚de‡
GL_ARB_vîãx_¥ogøm


5440 
	#GL_ARB_vîãx_¥ogøm
 1

	)

5441 #ifde‡
GL_GLEXT_PROTOTYPES


5442 
GLAPI
 
APIENTRY
 
glVîãxAârib1dARB
 (
GLuöt
, 
GLdoubÀ
);

5443 
GLAPI
 
APIENTRY
 
glVîãxAârib1dvARB
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

5444 
GLAPI
 
APIENTRY
 
glVîãxAârib1fARB
 (
GLuöt
, 
GLÊﬂt
);

5445 
GLAPI
 
APIENTRY
 
glVîãxAârib1fvARB
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

5446 
GLAPI
 
APIENTRY
 
glVîãxAârib1sARB
 (
GLuöt
, 
GLsh‹t
);

5447 
GLAPI
 
APIENTRY
 
glVîãxAârib1svARB
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

5448 
GLAPI
 
APIENTRY
 
glVîãxAârib2dARB
 (
GLuöt
, 
GLdoubÀ
, GLdouble);

5449 
GLAPI
 
APIENTRY
 
glVîãxAârib2dvARB
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

5450 
GLAPI
 
APIENTRY
 
glVîãxAârib2fARB
 (
GLuöt
, 
GLÊﬂt
, GLfloat);

5451 
GLAPI
 
APIENTRY
 
glVîãxAârib2fvARB
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

5452 
GLAPI
 
APIENTRY
 
glVîãxAârib2sARB
 (
GLuöt
, 
GLsh‹t
, GLshort);

5453 
GLAPI
 
APIENTRY
 
glVîãxAârib2svARB
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

5454 
GLAPI
 
APIENTRY
 
glVîãxAârib3dARB
 (
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble);

5455 
GLAPI
 
APIENTRY
 
glVîãxAârib3dvARB
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

5456 
GLAPI
 
APIENTRY
 
glVîãxAârib3fARB
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat);

5457 
GLAPI
 
APIENTRY
 
glVîãxAârib3fvARB
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

5458 
GLAPI
 
APIENTRY
 
glVîãxAârib3sARB
 (
GLuöt
, 
GLsh‹t
, GLshort, GLshort);

5459 
GLAPI
 
APIENTRY
 
glVîãxAârib3svARB
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

5460 
GLAPI
 
APIENTRY
 
glVîãxAârib4NbvARB
 (
GLuöt
, c⁄° 
GLbyã
 *);

5461 
GLAPI
 
APIENTRY
 
glVîãxAârib4NivARB
 (
GLuöt
, c⁄° 
GLöt
 *);

5462 
GLAPI
 
APIENTRY
 
glVîãxAârib4NsvARB
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

5463 
GLAPI
 
APIENTRY
 
glVîãxAârib4NubARB
 (
GLuöt
, 
GLubyã
, GLubyte, GLubyte, GLubyte);

5464 
GLAPI
 
APIENTRY
 
glVîãxAârib4NubvARB
 (
GLuöt
, c⁄° 
GLubyã
 *);

5465 
GLAPI
 
APIENTRY
 
glVîãxAârib4NuivARB
 (
GLuöt
, const GLuint *);

5466 
GLAPI
 
APIENTRY
 
glVîãxAârib4NusvARB
 (
GLuöt
, c⁄° 
GLush‹t
 *);

5467 
GLAPI
 
APIENTRY
 
glVîãxAârib4bvARB
 (
GLuöt
, c⁄° 
GLbyã
 *);

5468 
GLAPI
 
APIENTRY
 
glVîãxAârib4dARB
 (
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

5469 
GLAPI
 
APIENTRY
 
glVîãxAârib4dvARB
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

5470 
GLAPI
 
APIENTRY
 
glVîãxAârib4fARB
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

5471 
GLAPI
 
APIENTRY
 
glVîãxAârib4fvARB
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

5472 
GLAPI
 
APIENTRY
 
glVîãxAârib4ivARB
 (
GLuöt
, c⁄° 
GLöt
 *);

5473 
GLAPI
 
APIENTRY
 
glVîãxAârib4sARB
 (
GLuöt
, 
GLsh‹t
, GLshort, GLshort, GLshort);

5474 
GLAPI
 
APIENTRY
 
glVîãxAârib4svARB
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

5475 
GLAPI
 
APIENTRY
 
glVîãxAârib4ubvARB
 (
GLuöt
, c⁄° 
GLubyã
 *);

5476 
GLAPI
 
APIENTRY
 
glVîãxAârib4uivARB
 (
GLuöt
, const GLuint *);

5477 
GLAPI
 
APIENTRY
 
glVîãxAârib4usvARB
 (
GLuöt
, c⁄° 
GLush‹t
 *);

5478 
GLAPI
 
APIENTRY
 
glVîãxAâribPoöãrARB
 (
GLuöt
, 
GLöt
, 
GLíum
, 
GLboﬁón
, 
GLsizei
, c⁄° 
GLvoid
 *);

5479 
GLAPI
 
APIENTRY
 
glE«bÀVîãxAâribAºayARB
 (
GLuöt
);

5480 
GLAPI
 
APIENTRY
 
glDißbÀVîãxAâribAºayARB
 (
GLuöt
);

5481 
GLAPI
 
APIENTRY
 
glProgømSåögARB
 (
GLíum
, GLíum, 
GLsizei
, c⁄° 
GLvoid
 *);

5482 
GLAPI
 
APIENTRY
 
glBödProgømARB
 (
GLíum
, 
GLuöt
);

5483 
GLAPI
 
APIENTRY
 
glDñëeProgømsARB
 (
GLsizei
, c⁄° 
GLuöt
 *);

5484 
GLAPI
 
APIENTRY
 
glGíProgømsARB
 (
GLsizei
, 
GLuöt
 *);

5485 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëî4dARB
 (
GLíum
, 
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

5486 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëî4dvARB
 (
GLíum
, 
GLuöt
, c⁄° 
GLdoubÀ
 *);

5487 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëî4fARB
 (
GLíum
, 
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

5488 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëî4fvARB
 (
GLíum
, 
GLuöt
, c⁄° 
GLÊﬂt
 *);

5489 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëî4dARB
 (
GLíum
, 
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

5490 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëî4dvARB
 (
GLíum
, 
GLuöt
, c⁄° 
GLdoubÀ
 *);

5491 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëî4fARB
 (
GLíum
, 
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

5492 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëî4fvARB
 (
GLíum
, 
GLuöt
, c⁄° 
GLÊﬂt
 *);

5493 
GLAPI
 
APIENTRY
 
glGëProgømEnvP¨amëîdvARB
 (
GLíum
, 
GLuöt
, 
GLdoubÀ
 *);

5494 
GLAPI
 
APIENTRY
 
glGëProgømEnvP¨amëîfvARB
 (
GLíum
, 
GLuöt
, 
GLÊﬂt
 *);

5495 
GLAPI
 
APIENTRY
 
glGëProgømLoˇlP¨amëîdvARB
 (
GLíum
, 
GLuöt
, 
GLdoubÀ
 *);

5496 
GLAPI
 
APIENTRY
 
glGëProgømLoˇlP¨amëîfvARB
 (
GLíum
, 
GLuöt
, 
GLÊﬂt
 *);

5497 
GLAPI
 
APIENTRY
 
glGëProgømivARB
 (
GLíum
, GLíum, 
GLöt
 *);

5498 
GLAPI
 
APIENTRY
 
glGëProgømSåögARB
 (
GLíum
, GLíum, 
GLvoid
 *);

5499 
GLAPI
 
APIENTRY
 
glGëVîãxAâribdvARB
 (
GLuöt
, 
GLíum
, 
GLdoubÀ
 *);

5500 
GLAPI
 
APIENTRY
 
glGëVîãxAâribfvARB
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

5501 
GLAPI
 
APIENTRY
 
glGëVîãxAâribivARB
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

5502 
GLAPI
 
APIENTRY
 
glGëVîãxAâribPoöãrvARB
 (
GLuöt
, 
GLíum
, 
GLvoid
* *);

5503 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsProgømARB
 (
GLuöt
);

5505 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
);

5506 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5507 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
);

5508 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5509 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
);

5510 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

5511 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

5512 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5513 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

5514 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5515 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

5516 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

5517 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

5518 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5519 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5520 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5521 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

5522 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

5523 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NBVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 *
	tv
);

5524 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NIVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

5525 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NSVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

5526 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUBARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLubyã
 
	tx
, GLubyã 
	ty
, GLubyã 
	tz
, GLubyã 
	tw
);

5527 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUBVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 *
	tv
);

5528 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUIVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

5529 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUSVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 *
	tv
);

5530 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4BVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 *
	tv
);

5531 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

5532 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5533 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

5534 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5535 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4IVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

5536 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
, GLsh‹à
	tw
);

5537 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

5538 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UBVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 *
	tv
);

5539 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UIVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

5540 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4USVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 *
	tv
);

5541 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBPOINTERARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLboﬁón
 
	tn‹mÆized
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

5542 (
APIENTRYP
 
	tPFNGLENABLEVERTEXATTRIBARRAYARBPROC
Ë(
	tGLuöt
 
	tödex
);

5543 (
APIENTRYP
 
	tPFNGLDISABLEVERTEXATTRIBARRAYARBPROC
Ë(
	tGLuöt
 
	tödex
);

5544 (
APIENTRYP
 
	tPFNGLPROGRAMSTRINGARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLvoid
 *
	t°rög
);

5545 (
APIENTRYP
 
	tPFNGLBINDPROGRAMARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	t¥ogøm
);

5546 (
APIENTRYP
 
	tPFNGLDELETEPROGRAMSARBPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t¥ogøms
);

5547 (
APIENTRYP
 
	tPFNGLGENPROGRAMSARBPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	t¥ogøms
);

5548 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETER4DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

5549 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETER4DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	t∑øms
);

5550 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETER4FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

5551 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETER4FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

5552 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETER4DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

5553 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETER4DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	t∑øms
);

5554 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETER4FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

5555 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETER4FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

5556 (
APIENTRYP
 
	tPFNGLGETPROGRAMENVPARAMETERDVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 *
	t∑øms
);

5557 (
APIENTRYP
 
	tPFNGLGETPROGRAMENVPARAMETERFVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 *
	t∑øms
);

5558 (
APIENTRYP
 
	tPFNGLGETPROGRAMLOCALPARAMETERDVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 *
	t∑øms
);

5559 (
APIENTRYP
 
	tPFNGLGETPROGRAMLOCALPARAMETERFVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 *
	t∑øms
);

5560 (
APIENTRYP
 
	tPFNGLGETPROGRAMIVARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5561 (
APIENTRYP
 
	tPFNGLGETPROGRAMSTRINGARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLvoid
 *
	t°rög
);

5562 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBDVARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLdoubÀ
 *
	t∑øms
);

5563 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBFVARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

5564 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIVARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5565 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBPOINTERVARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLvoid
* *
	tpoöãr
);

5566 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISPROGRAMARBPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

5569 #i‚de‡
GL_ARB_‰agmít_¥ogøm


5570 
	#GL_ARB_‰agmít_¥ogøm
 1

	)

5574 #i‚de‡
GL_ARB_vîãx_buf„r_obje˘


5575 
	#GL_ARB_vîãx_buf„r_obje˘
 1

	)

5576 #ifde‡
GL_GLEXT_PROTOTYPES


5577 
GLAPI
 
APIENTRY
 
glBödBuf„rARB
 (
GLíum
, 
GLuöt
);

5578 
GLAPI
 
APIENTRY
 
glDñëeBuf„rsARB
 (
GLsizei
, c⁄° 
GLuöt
 *);

5579 
GLAPI
 
APIENTRY
 
glGíBuf„rsARB
 (
GLsizei
, 
GLuöt
 *);

5580 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsBuf„rARB
 (
GLuöt
);

5581 
GLAPI
 
APIENTRY
 
glBuf„rD©aARB
 (
GLíum
, 
GLsizeùåARB
, c⁄° 
GLvoid
 *, GLenum);

5582 
GLAPI
 
APIENTRY
 
glBuf„rSubD©aARB
 (
GLíum
, 
GLöçåARB
, 
GLsizeùåARB
, c⁄° 
GLvoid
 *);

5583 
GLAPI
 
APIENTRY
 
glGëBuf„rSubD©aARB
 (
GLíum
, 
GLöçåARB
, 
GLsizeùåARB
, 
GLvoid
 *);

5584 
GLAPI
 
GLvoid
* 
APIENTRY
 
glM≠Buf„rARB
 (
GLíum
, GLenum);

5585 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glUnm≠Buf„rARB
 (
GLíum
);

5586 
GLAPI
 
APIENTRY
 
glGëBuf„rP¨amëîivARB
 (
GLíum
, GLíum, 
GLöt
 *);

5587 
GLAPI
 
APIENTRY
 
glGëBuf„rPoöãrvARB
 (
GLíum
, GLíum, 
GLvoid
* *);

5589 (
APIENTRYP
 
	tPFNGLBINDBUFFERARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tbuf„r
);

5590 (
APIENTRYP
 
	tPFNGLDELETEBUFFERSARBPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tbuf„rs
);

5591 (
APIENTRYP
 
	tPFNGLGENBUFFERSARBPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tbuf„rs
);

5592 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISBUFFERARBPROC
Ë(
	tGLuöt
 
	tbuf„r
);

5593 (
APIENTRYP
 
	tPFNGLBUFFERDATAARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizeùåARB
 
	tsize
, c⁄° 
	tGLvoid
 *
	td©a
, GLíum 
	tußge
);

5594 (
APIENTRYP
 
	tPFNGLBUFFERSUBDATAARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçåARB
 
	toff£t
, 
	tGLsizeùåARB
 
	tsize
, c⁄° 
	tGLvoid
 *
	td©a
);

5595 (
APIENTRYP
 
	tPFNGLGETBUFFERSUBDATAARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçåARB
 
	toff£t
, 
	tGLsizeùåARB
 
	tsize
, 
	tGLvoid
 *
	td©a
);

5596 
	gGLvoid
* (
	tAPIENTRYP
 
	tPFNGLMAPBUFFERARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tac˚ss
);

5597 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLUNMAPBUFFERARBPROC
Ë(
	tGLíum
 
	tèrgë
);

5598 (
APIENTRYP
 
	tPFNGLGETBUFFERPARAMETERIVARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5599 (
APIENTRYP
 
	tPFNGLGETBUFFERPOINTERVARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLvoid
* *
	t∑øms
);

5602 #i‚de‡
GL_ARB_oc˛usi⁄_quîy


5603 
	#GL_ARB_oc˛usi⁄_quîy
 1

	)

5604 #ifde‡
GL_GLEXT_PROTOTYPES


5605 
GLAPI
 
APIENTRY
 
glGíQuîõsARB
 (
GLsizei
, 
GLuöt
 *);

5606 
GLAPI
 
APIENTRY
 
glDñëeQuîõsARB
 (
GLsizei
, c⁄° 
GLuöt
 *);

5607 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsQuîyARB
 (
GLuöt
);

5608 
GLAPI
 
APIENTRY
 
glBegöQuîyARB
 (
GLíum
, 
GLuöt
);

5609 
GLAPI
 
APIENTRY
 
glEndQuîyARB
 (
GLíum
);

5610 
GLAPI
 
APIENTRY
 
glGëQuîyivARB
 (
GLíum
, GLíum, 
GLöt
 *);

5611 
GLAPI
 
APIENTRY
 
glGëQuîyObje˘ivARB
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

5612 
GLAPI
 
APIENTRY
 
glGëQuîyObje˘uivARB
 (
GLuöt
, 
GLíum
, GLuint *);

5614 (
APIENTRYP
 
	tPFNGLGENQUERIESARBPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tids
);

5615 (
APIENTRYP
 
	tPFNGLDELETEQUERIESARBPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tids
);

5616 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISQUERYARBPROC
Ë(
	tGLuöt
 
	tid
);

5617 (
APIENTRYP
 
	tPFNGLBEGINQUERYARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
);

5618 (
APIENTRYP
 
	tPFNGLENDQUERYARBPROC
Ë(
	tGLíum
 
	tèrgë
);

5619 (
APIENTRYP
 
	tPFNGLGETQUERYIVARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5620 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTIVARBPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5621 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTUIVARBPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, GLuöà*
	t∑øms
);

5624 #i‚de‡
GL_ARB_shadî_obje˘s


5625 
	#GL_ARB_shadî_obje˘s
 1

	)

5626 #ifde‡
GL_GLEXT_PROTOTYPES


5627 
GLAPI
 
APIENTRY
 
glDñëeObje˘ARB
 (
GLh™dÀARB
);

5628 
GLAPI
 
GLh™dÀARB
 
APIENTRY
 
glGëH™dÀARB
 (
GLíum
);

5629 
GLAPI
 
APIENTRY
 
glDëachObje˘ARB
 (
GLh™dÀARB
, GLhandleARB);

5630 
GLAPI
 
GLh™dÀARB
 
APIENTRY
 
glCª©eShadîObje˘ARB
 (
GLíum
);

5631 
GLAPI
 
APIENTRY
 
glShadîSour˚ARB
 (
GLh™dÀARB
, 
GLsizei
, c⁄° 
GLch¨ARB
* *, c⁄° 
GLöt
 *);

5632 
GLAPI
 
APIENTRY
 
glCompûeShadîARB
 (
GLh™dÀARB
);

5633 
GLAPI
 
GLh™dÀARB
 
APIENTRY
 
glCª©eProgømObje˘ARB
 ();

5634 
GLAPI
 
APIENTRY
 
glAâachObje˘ARB
 (
GLh™dÀARB
, GLhandleARB);

5635 
GLAPI
 
APIENTRY
 
glLökProgømARB
 (
GLh™dÀARB
);

5636 
GLAPI
 
APIENTRY
 
glU£ProgømObje˘ARB
 (
GLh™dÀARB
);

5637 
GLAPI
 
APIENTRY
 
glVÆid©eProgømARB
 (
GLh™dÀARB
);

5638 
GLAPI
 
APIENTRY
 
glUnif‹m1fARB
 (
GLöt
, 
GLÊﬂt
);

5639 
GLAPI
 
APIENTRY
 
glUnif‹m2fARB
 (
GLöt
, 
GLÊﬂt
, GLfloat);

5640 
GLAPI
 
APIENTRY
 
glUnif‹m3fARB
 (
GLöt
, 
GLÊﬂt
, GLfloat, GLfloat);

5641 
GLAPI
 
APIENTRY
 
glUnif‹m4fARB
 (
GLöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

5642 
GLAPI
 
APIENTRY
 
glUnif‹m1iARB
 (
GLöt
, GLint);

5643 
GLAPI
 
APIENTRY
 
glUnif‹m2iARB
 (
GLöt
, GLint, GLint);

5644 
GLAPI
 
APIENTRY
 
glUnif‹m3iARB
 (
GLöt
, GLint, GLint, GLint);

5645 
GLAPI
 
APIENTRY
 
glUnif‹m4iARB
 (
GLöt
, GLint, GLint, GLint, GLint);

5646 
GLAPI
 
APIENTRY
 
glUnif‹m1fvARB
 (
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

5647 
GLAPI
 
APIENTRY
 
glUnif‹m2fvARB
 (
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

5648 
GLAPI
 
APIENTRY
 
glUnif‹m3fvARB
 (
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

5649 
GLAPI
 
APIENTRY
 
glUnif‹m4fvARB
 (
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

5650 
GLAPI
 
APIENTRY
 
glUnif‹m1ivARB
 (
GLöt
, 
GLsizei
, const GLint *);

5651 
GLAPI
 
APIENTRY
 
glUnif‹m2ivARB
 (
GLöt
, 
GLsizei
, const GLint *);

5652 
GLAPI
 
APIENTRY
 
glUnif‹m3ivARB
 (
GLöt
, 
GLsizei
, const GLint *);

5653 
GLAPI
 
APIENTRY
 
glUnif‹m4ivARB
 (
GLöt
, 
GLsizei
, const GLint *);

5654 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix2fvARB
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5655 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix3fvARB
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5656 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix4fvARB
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5657 
GLAPI
 
APIENTRY
 
glGëObje˘P¨amëîfvARB
 (
GLh™dÀARB
, 
GLíum
, 
GLÊﬂt
 *);

5658 
GLAPI
 
APIENTRY
 
glGëObje˘P¨amëîivARB
 (
GLh™dÀARB
, 
GLíum
, 
GLöt
 *);

5659 
GLAPI
 
APIENTRY
 
glGëInfoLogARB
 (
GLh™dÀARB
, 
GLsizei
, GLsizeò*, 
GLch¨ARB
 *);

5660 
GLAPI
 
APIENTRY
 
glGëAâachedObje˘sARB
 (
GLh™dÀARB
, 
GLsizei
, GLsizei *, GLhandleARB *);

5661 
GLAPI
 
GLöt
 
APIENTRY
 
glGëUnif‹mLoˇti⁄ARB
 (
GLh™dÀARB
, c⁄° 
GLch¨ARB
 *);

5662 
GLAPI
 
APIENTRY
 
glGëA˘iveUnif‹mARB
 (
GLh™dÀARB
, 
GLuöt
, 
GLsizei
, GLsizeò*, 
GLöt
 *, 
GLíum
 *, 
GLch¨ARB
 *);

5663 
GLAPI
 
APIENTRY
 
glGëUnif‹mfvARB
 (
GLh™dÀARB
, 
GLöt
, 
GLÊﬂt
 *);

5664 
GLAPI
 
APIENTRY
 
glGëUnif‹mivARB
 (
GLh™dÀARB
, 
GLöt
, GLint *);

5665 
GLAPI
 
APIENTRY
 
glGëShadîSour˚ARB
 (
GLh™dÀARB
, 
GLsizei
, GLsizeò*, 
GLch¨ARB
 *);

5667 (
APIENTRYP
 
	tPFNGLDELETEOBJECTARBPROC
Ë(
	tGLh™dÀARB
 
	tobj
);

5668 
GLh™dÀARB
 (
	tAPIENTRYP
 
	tPFNGLGETHANDLEARBPROC
Ë(
	tGLíum
 
	t≤ame
);

5669 (
APIENTRYP
 
	tPFNGLDETACHOBJECTARBPROC
Ë(
	tGLh™dÀARB
 
	tc⁄èöîObj
, GLh™dÀARB 
	t©èchedObj
);

5670 
GLh™dÀARB
 (
	tAPIENTRYP
 
	tPFNGLCREATESHADEROBJECTARBPROC
Ë(
	tGLíum
 
	tshadîTy≥
);

5671 (
APIENTRYP
 
	tPFNGLSHADERSOURCEARBPROC
Ë(
	tGLh™dÀARB
 
	tshadîObj
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLch¨ARB
* *
	t°rög
, c⁄° 
	tGLöt
 *
	tÀngth
);

5672 (
APIENTRYP
 
	tPFNGLCOMPILESHADERARBPROC
Ë(
	tGLh™dÀARB
 
	tshadîObj
);

5673 
GLh™dÀARB
 (
	tAPIENTRYP
 
	tPFNGLCREATEPROGRAMOBJECTARBPROC
) ();

5674 (
APIENTRYP
 
	tPFNGLATTACHOBJECTARBPROC
Ë(
	tGLh™dÀARB
 
	tc⁄èöîObj
, GLh™dÀARB 
	tobj
);

5675 (
APIENTRYP
 
	tPFNGLLINKPROGRAMARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
);

5676 (
APIENTRYP
 
	tPFNGLUSEPROGRAMOBJECTARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
);

5677 (
APIENTRYP
 
	tPFNGLVALIDATEPROGRAMARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
);

5678 (
APIENTRYP
 
	tPFNGLUNIFORM1FARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
);

5679 (
APIENTRYP
 
	tPFNGLUNIFORM2FARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
);

5680 (
APIENTRYP
 
	tPFNGLUNIFORM3FARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
);

5681 (
APIENTRYP
 
	tPFNGLUNIFORM4FARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
, GLÊﬂà
	tv3
);

5682 (
APIENTRYP
 
	tPFNGLUNIFORM1IARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
);

5683 (
APIENTRYP
 
	tPFNGLUNIFORM2IARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
);

5684 (
APIENTRYP
 
	tPFNGLUNIFORM3IARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
, GLöà
	tv2
);

5685 (
APIENTRYP
 
	tPFNGLUNIFORM4IARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
, GLöà
	tv2
, GLöà
	tv3
);

5686 (
APIENTRYP
 
	tPFNGLUNIFORM1FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5687 (
APIENTRYP
 
	tPFNGLUNIFORM2FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5688 (
APIENTRYP
 
	tPFNGLUNIFORM3FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5689 (
APIENTRYP
 
	tPFNGLUNIFORM4FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5690 (
APIENTRYP
 
	tPFNGLUNIFORM1IVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

5691 (
APIENTRYP
 
	tPFNGLUNIFORM2IVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

5692 (
APIENTRYP
 
	tPFNGLUNIFORM3IVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

5693 (
APIENTRYP
 
	tPFNGLUNIFORM4IVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

5694 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX2FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5695 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX3FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5696 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX4FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5697 (
APIENTRYP
 
	tPFNGLGETOBJECTPARAMETERFVARBPROC
Ë(
	tGLh™dÀARB
 
	tobj
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

5698 (
APIENTRYP
 
	tPFNGLGETOBJECTPARAMETERIVARBPROC
Ë(
	tGLh™dÀARB
 
	tobj
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5699 (
APIENTRYP
 
	tPFNGLGETINFOLOGARBPROC
Ë(
	tGLh™dÀARB
 
	tobj
, 
	tGLsizei
 
	tmaxLígth
, GLsizeò*
	tÀngth
, 
	tGLch¨ARB
 *
	töfoLog
);

5700 (
APIENTRYP
 
	tPFNGLGETATTACHEDOBJECTSARBPROC
Ë(
	tGLh™dÀARB
 
	tc⁄èöîObj
, 
	tGLsizei
 
	tmaxCou¡
, GLsizeò*
	tcou¡
, GLh™dÀARB *
	tobj
);

5701 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETUNIFORMLOCATIONARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, c⁄° 
	tGLch¨ARB
 *
	t«me
);

5702 (
APIENTRYP
 
	tPFNGLGETACTIVEUNIFORMARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tmaxLígth
, GLsizeò*
	tÀngth
, 
	tGLöt
 *
	tsize
, 
	tGLíum
 *
	tty≥
, 
	tGLch¨ARB
 *
	t«me
);

5703 (
APIENTRYP
 
	tPFNGLGETUNIFORMFVARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 *
	t∑øms
);

5704 (
APIENTRYP
 
	tPFNGLGETUNIFORMIVARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, 
	tGLöt
 
	tloˇti⁄
, GLöà*
	t∑øms
);

5705 (
APIENTRYP
 
	tPFNGLGETSHADERSOURCEARBPROC
Ë(
	tGLh™dÀARB
 
	tobj
, 
	tGLsizei
 
	tmaxLígth
, GLsizeò*
	tÀngth
, 
	tGLch¨ARB
 *
	tsour˚
);

5708 #i‚de‡
GL_ARB_vîãx_shadî


5709 
	#GL_ARB_vîãx_shadî
 1

	)

5710 #ifde‡
GL_GLEXT_PROTOTYPES


5711 
GLAPI
 
APIENTRY
 
glBödAâribLoˇti⁄ARB
 (
GLh™dÀARB
, 
GLuöt
, c⁄° 
GLch¨ARB
 *);

5712 
GLAPI
 
APIENTRY
 
glGëA˘iveAâribARB
 (
GLh™dÀARB
, 
GLuöt
, 
GLsizei
, GLsizeò*, 
GLöt
 *, 
GLíum
 *, 
GLch¨ARB
 *);

5713 
GLAPI
 
GLöt
 
APIENTRY
 
glGëAâribLoˇti⁄ARB
 (
GLh™dÀARB
, c⁄° 
GLch¨ARB
 *);

5715 (
APIENTRYP
 
	tPFNGLBINDATTRIBLOCATIONARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLch¨ARB
 *
	t«me
);

5716 (
APIENTRYP
 
	tPFNGLGETACTIVEATTRIBARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tmaxLígth
, GLsizeò*
	tÀngth
, 
	tGLöt
 *
	tsize
, 
	tGLíum
 *
	tty≥
, 
	tGLch¨ARB
 *
	t«me
);

5717 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETATTRIBLOCATIONARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, c⁄° 
	tGLch¨ARB
 *
	t«me
);

5720 #i‚de‡
GL_ARB_‰agmít_shadî


5721 
	#GL_ARB_‰agmít_shadî
 1

	)

5724 #i‚de‡
GL_ARB_shadög_œnguage_100


5725 
	#GL_ARB_shadög_œnguage_100
 1

	)

5728 #i‚de‡
GL_ARB_ãxtuª_n⁄_powî_of_two


5729 
	#GL_ARB_ãxtuª_n⁄_powî_of_two
 1

	)

5732 #i‚de‡
GL_ARB_poöt_•rôe


5733 
	#GL_ARB_poöt_•rôe
 1

	)

5736 #i‚de‡
GL_ARB_‰agmít_¥ogøm_shadow


5737 
	#GL_ARB_‰agmít_¥ogøm_shadow
 1

	)

5740 #i‚de‡
GL_ARB_døw_buf„rs


5741 
	#GL_ARB_døw_buf„rs
 1

	)

5742 #ifde‡
GL_GLEXT_PROTOTYPES


5743 
GLAPI
 
APIENTRY
 
glDøwBuf„rsARB
 (
GLsizei
, c⁄° 
GLíum
 *);

5745 (
APIENTRYP
 
	tPFNGLDRAWBUFFERSARBPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLíum
 *
	tbufs
);

5748 #i‚de‡
GL_ARB_ãxtuª_ª˘™gÀ


5749 
	#GL_ARB_ãxtuª_ª˘™gÀ
 1

	)

5752 #i‚de‡
GL_ARB_cﬁ‹_buf„r_Êﬂt


5753 
	#GL_ARB_cﬁ‹_buf„r_Êﬂt
 1

	)

5754 #ifde‡
GL_GLEXT_PROTOTYPES


5755 
GLAPI
 
APIENTRY
 
glCœmpCﬁ‹ARB
 (
GLíum
, GLenum);

5757 (
APIENTRYP
 
	tPFNGLCLAMPCOLORARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t˛amp
);

5760 #i‚de‡
GL_ARB_hÆf_Êﬂt_pixñ


5761 
	#GL_ARB_hÆf_Êﬂt_pixñ
 1

	)

5764 #i‚de‡
GL_ARB_ãxtuª_Êﬂt


5765 
	#GL_ARB_ãxtuª_Êﬂt
 1

	)

5768 #i‚de‡
GL_ARB_pixñ_buf„r_obje˘


5769 
	#GL_ARB_pixñ_buf„r_obje˘
 1

	)

5772 #i‚de‡
GL_ARB_dïth_buf„r_Êﬂt


5773 
	#GL_ARB_dïth_buf„r_Êﬂt
 1

	)

5776 #i‚de‡
GL_ARB_døw_ö°™˚d


5777 
	#GL_ARB_døw_ö°™˚d
 1

	)

5778 #ifde‡
GL_GLEXT_PROTOTYPES


5779 
GLAPI
 
APIENTRY
 
glDøwAºaysIn°™˚dARB
 (
GLíum
, 
GLöt
, 
GLsizei
, GLsizei);

5780 
GLAPI
 
APIENTRY
 
glDøwEÀmítsIn°™˚dARB
 (
GLíum
, 
GLsizei
, GLíum, c⁄° 
GLvoid
 *, GLsizei);

5782 (
APIENTRYP
 
	tPFNGLDRAWARRAYSINSTANCEDARBPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
, GLsizeò
	t¥imcou¡
);

5783 (
APIENTRYP
 
	tPFNGLDRAWELEMENTSINSTANCEDARBPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
, GLsizeò
	t¥imcou¡
);

5786 #i‚de‡
GL_ARB_‰amebuf„r_obje˘


5787 
	#GL_ARB_‰amebuf„r_obje˘
 1

	)

5788 #ifde‡
GL_GLEXT_PROTOTYPES


5789 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsRídîbuf„r
 (
GLuöt
);

5790 
GLAPI
 
APIENTRY
 
glBödRídîbuf„r
 (
GLíum
, 
GLuöt
);

5791 
GLAPI
 
APIENTRY
 
glDñëeRídîbuf„rs
 (
GLsizei
, c⁄° 
GLuöt
 *);

5792 
GLAPI
 
APIENTRY
 
glGíRídîbuf„rs
 (
GLsizei
, 
GLuöt
 *);

5793 
GLAPI
 
APIENTRY
 
glRídîbuf„rSt‹age
 (
GLíum
, GLíum, 
GLsizei
, GLsizei);

5794 
GLAPI
 
APIENTRY
 
glGëRídîbuf„rP¨amëîiv
 (
GLíum
, GLíum, 
GLöt
 *);

5795 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsFømebuf„r
 (
GLuöt
);

5796 
GLAPI
 
APIENTRY
 
glBödFømebuf„r
 (
GLíum
, 
GLuöt
);

5797 
GLAPI
 
APIENTRY
 
glDñëeFømebuf„rs
 (
GLsizei
, c⁄° 
GLuöt
 *);

5798 
GLAPI
 
APIENTRY
 
glGíFømebuf„rs
 (
GLsizei
, 
GLuöt
 *);

5799 
GLAPI
 
GLíum
 
APIENTRY
 
glCheckFømebuf„rSètus
 (GLenum);

5800 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuª1D
 (
GLíum
, GLíum, GLíum, 
GLuöt
, 
GLöt
);

5801 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuª2D
 (
GLíum
, GLíum, GLíum, 
GLuöt
, 
GLöt
);

5802 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuª3D
 (
GLíum
, GLíum, GLíum, 
GLuöt
, 
GLöt
, GLint);

5803 
GLAPI
 
APIENTRY
 
glFømebuf„rRídîbuf„r
 (
GLíum
, GLíum, GLíum, 
GLuöt
);

5804 
GLAPI
 
APIENTRY
 
glGëFømebuf„rAâachmítP¨amëîiv
 (
GLíum
, GLíum, GLíum, 
GLöt
 *);

5805 
GLAPI
 
APIENTRY
 
glGíî©eMùm≠
 (
GLíum
);

5806 
GLAPI
 
APIENTRY
 
glBlôFømebuf„r
 (
GLöt
, GLöt, GLöt, GLöt, GLöt, GLöt, GLöt, GLöt, 
GLbôfõld
, 
GLíum
);

5807 
GLAPI
 
APIENTRY
 
glRídîbuf„rSt‹ageMu…ißm∂e
 (
GLíum
, 
GLsizei
, GLenum, GLsizei, GLsizei);

5808 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuªLayî
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
, GLint);

5810 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISRENDERBUFFERPROC
Ë(
	tGLuöt
 
	tªndîbuf„r
);

5811 (
APIENTRYP
 
	tPFNGLBINDRENDERBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tªndîbuf„r
);

5812 (
APIENTRYP
 
	tPFNGLDELETERENDERBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tªndîbuf„rs
);

5813 (
APIENTRYP
 
	tPFNGLGENRENDERBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tªndîbuf„rs
);

5814 (
APIENTRYP
 
	tPFNGLRENDERBUFFERSTORAGEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

5815 (
APIENTRYP
 
	tPFNGLGETRENDERBUFFERPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5816 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISFRAMEBUFFERPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
);

5817 (
APIENTRYP
 
	tPFNGLBINDFRAMEBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	t‰amebuf„r
);

5818 (
APIENTRYP
 
	tPFNGLDELETEFRAMEBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t‰amebuf„rs
);

5819 (
APIENTRYP
 
	tPFNGLGENFRAMEBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	t‰amebuf„rs
);

5820 
GLíum
 (
	tAPIENTRYP
 
	tPFNGLCHECKFRAMEBUFFERSTATUSPROC
Ë(
	tGLíum
 
	tèrgë
);

5821 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURE1DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tãxèrgë
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

5822 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURE2DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tãxèrgë
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

5823 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURE3DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tãxèrgë
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tzoff£t
);

5824 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERRENDERBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tªndîbuf„π¨gë
, 
	tGLuöt
 
	tªndîbuf„r
);

5825 (
APIENTRYP
 
	tPFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5826 (
APIENTRYP
 
	tPFNGLGENERATEMIPMAPPROC
Ë(
	tGLíum
 
	tèrgë
);

5827 (
APIENTRYP
 
	tPFNGLBLITFRAMEBUFFERPROC
Ë(
	tGLöt
 
	t§cX0
, GLöà
	t§cY0
, GLöà
	t§cX1
, GLöà
	t§cY1
, GLöà
	td°X0
, GLöà
	td°Y0
, GLöà
	td°X1
, GLöà
	td°Y1
, 
	tGLbôfõld
 
	tmask
, 
	tGLíum
 
	tfûãr
);

5828 (
APIENTRYP
 
	tPFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tßm∂es
, GLíum 
	töã∫Æf‹m©
, GLsizeò
	twidth
, GLsizeò
	theight
);

5829 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURELAYERPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tœyî
);

5832 #i‚de‡
GL_ARB_‰amebuf„r_sRGB


5833 
	#GL_ARB_‰amebuf„r_sRGB
 1

	)

5836 #i‚de‡
GL_ARB_geomëry_shadî4


5837 
	#GL_ARB_geomëry_shadî4
 1

	)

5838 #ifde‡
GL_GLEXT_PROTOTYPES


5839 
GLAPI
 
APIENTRY
 
glProgømP¨amëîiARB
 (
GLuöt
, 
GLíum
, 
GLöt
);

5840 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuªARB
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
);

5841 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuªLayîARB
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
, GLint);

5842 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuªFa˚ARB
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
, GLenum);

5844 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETERIARBPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	tvÆue
);

5845 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTUREARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

5846 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURELAYERARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tœyî
);

5847 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTUREFACEARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLíum 
	tÁ˚
);

5850 #i‚de‡
GL_ARB_hÆf_Êﬂt_vîãx


5851 
	#GL_ARB_hÆf_Êﬂt_vîãx
 1

	)

5854 #i‚de‡
GL_ARB_ö°™˚d_¨øys


5855 
	#GL_ARB_ö°™˚d_¨øys
 1

	)

5856 #ifde‡
GL_GLEXT_PROTOTYPES


5857 
GLAPI
 
APIENTRY
 
glVîãxAâribDivis‹ARB
 (
GLuöt
, GLuint);

5859 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBDIVISORARBPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tdivis‹
);

5862 #i‚de‡
GL_ARB_m≠_buf„r_ønge


5863 
	#GL_ARB_m≠_buf„r_ønge
 1

	)

5864 #ifde‡
GL_GLEXT_PROTOTYPES


5865 
GLAPI
 
GLvoid
* 
APIENTRY
 
glM≠Buf„rR™ge
 (
GLíum
, 
GLöçå
, 
GLsizeùå
, 
GLbôfõld
);

5866 
GLAPI
 
APIENTRY
 
glFlushM≠≥dBuf„rR™ge
 (
GLíum
, 
GLöçå
, 
GLsizeùå
);

5868 
	gGLvoid
* (
	tAPIENTRYP
 
	tPFNGLMAPBUFFERRANGEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tÀngth
, 
	tGLbôfõld
 
	tac˚ss
);

5869 (
APIENTRYP
 
	tPFNGLFLUSHMAPPEDBUFFERRANGEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tÀngth
);

5872 #i‚de‡
GL_ARB_ãxtuª_buf„r_obje˘


5873 
	#GL_ARB_ãxtuª_buf„r_obje˘
 1

	)

5874 #ifde‡
GL_GLEXT_PROTOTYPES


5875 
GLAPI
 
APIENTRY
 
glTexBuf„rARB
 (
GLíum
, GLíum, 
GLuöt
);

5877 (
APIENTRYP
 
	tPFNGLTEXBUFFERARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLuöt
 
	tbuf„r
);

5880 #i‚de‡
GL_ARB_ãxtuª_com¥essi⁄_rgtc


5881 
	#GL_ARB_ãxtuª_com¥essi⁄_rgtc
 1

	)

5884 #i‚de‡
GL_ARB_ãxtuª_rg


5885 
	#GL_ARB_ãxtuª_rg
 1

	)

5888 #i‚de‡
GL_ARB_vîãx_¨øy_obje˘


5889 
	#GL_ARB_vîãx_¨øy_obje˘
 1

	)

5890 #ifde‡
GL_GLEXT_PROTOTYPES


5891 
GLAPI
 
APIENTRY
 
glBödVîãxAºay
 (
GLuöt
);

5892 
GLAPI
 
APIENTRY
 
glDñëeVîãxAºays
 (
GLsizei
, c⁄° 
GLuöt
 *);

5893 
GLAPI
 
APIENTRY
 
glGíVîãxAºays
 (
GLsizei
, 
GLuöt
 *);

5894 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsVîãxAºay
 (
GLuöt
);

5896 (
APIENTRYP
 
	tPFNGLBINDVERTEXARRAYPROC
Ë(
	tGLuöt
 
	t¨øy
);

5897 (
APIENTRYP
 
	tPFNGLDELETEVERTEXARRAYSPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t¨øys
);

5898 (
APIENTRYP
 
	tPFNGLGENVERTEXARRAYSPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	t¨øys
);

5899 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISVERTEXARRAYPROC
Ë(
	tGLuöt
 
	t¨øy
);

5902 #i‚de‡
GL_ARB_unif‹m_buf„r_obje˘


5903 
	#GL_ARB_unif‹m_buf„r_obje˘
 1

	)

5904 #ifde‡
GL_GLEXT_PROTOTYPES


5905 
GLAPI
 
APIENTRY
 
glGëUnif‹mIndi˚s
 (
GLuöt
, 
GLsizei
, c⁄° 
GLch¨
* *, GLuint *);

5906 
GLAPI
 
APIENTRY
 
glGëA˘iveUnif‹msiv
 (
GLuöt
, 
GLsizei
, c⁄° GLuöà*, 
GLíum
, 
GLöt
 *);

5907 
GLAPI
 
APIENTRY
 
glGëA˘iveUnif‹mName
 (
GLuöt
, GLuöt, 
GLsizei
, GLsizeò*, 
GLch¨
 *);

5908 
GLAPI
 
GLuöt
 
APIENTRY
 
glGëUnif‹mBlockIndex
 (GLuöt, c⁄° 
GLch¨
 *);

5909 
GLAPI
 
APIENTRY
 
glGëA˘iveUnif‹mBlockiv
 (
GLuöt
, GLuöt, 
GLíum
, 
GLöt
 *);

5910 
GLAPI
 
APIENTRY
 
glGëA˘iveUnif‹mBlockName
 (
GLuöt
, GLuöt, 
GLsizei
, GLsizeò*, 
GLch¨
 *);

5911 
GLAPI
 
APIENTRY
 
glUnif‹mBlockBödög
 (
GLuöt
, GLuint, GLuint);

5913 (
APIENTRYP
 
	tPFNGLGETUNIFORMINDICESPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tunif‹mCou¡
, c⁄° 
	tGLch¨
* *
	tunif‹mNames
, GLuöà*
	tunif‹mIndi˚s
);

5914 (
APIENTRYP
 
	tPFNGLGETACTIVEUNIFORMSIVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tunif‹mCou¡
, c⁄° GLuöà*
	tunif‹mIndi˚s
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5915 (
APIENTRYP
 
	tPFNGLGETACTIVEUNIFORMNAMEPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tunif‹mIndex
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLch¨
 *
	tunif‹mName
);

5916 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLGETUNIFORMBLOCKINDEXPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 *
	tunif‹mBlockName
);

5917 (
APIENTRYP
 
	tPFNGLGETACTIVEUNIFORMBLOCKIVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tunif‹mBlockIndex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5918 (
APIENTRYP
 
	tPFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tunif‹mBlockIndex
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLch¨
 *
	tunif‹mBlockName
);

5919 (
APIENTRYP
 
	tPFNGLUNIFORMBLOCKBINDINGPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tunif‹mBlockIndex
, GLuöà
	tunif‹mBlockBödög
);

5922 #i‚de‡
GL_ARB_com∑tibûôy


5923 
	#GL_ARB_com∑tibûôy
 1

	)

5926 #i‚de‡
GL_ARB_c›y_buf„r


5927 
	#GL_ARB_c›y_buf„r
 1

	)

5928 #ifde‡
GL_GLEXT_PROTOTYPES


5929 
GLAPI
 
APIENTRY
 
glC›yBuf„rSubD©a
 (
GLíum
, GLíum, 
GLöçå
, GLöçå, 
GLsizeùå
);

5931 (
APIENTRYP
 
	tPFNGLCOPYBUFFERSUBDATAPROC
Ë(
	tGLíum
 
	tªadT¨gë
, GLíum 
	twrôeT¨gë
, 
	tGLöçå
 
	tªadOff£t
, GLöçå 
	twrôeOff£t
, 
	tGLsizeùå
 
	tsize
);

5934 #i‚de‡
GL_ARB_shadî_ãxtuª_lod


5935 
	#GL_ARB_shadî_ãxtuª_lod
 1

	)

5938 #i‚de‡
GL_ARB_dïth_˛amp


5939 
	#GL_ARB_dïth_˛amp
 1

	)

5942 #i‚de‡
GL_ARB_døw_ñemíts_ba£_vîãx


5943 
	#GL_ARB_døw_ñemíts_ba£_vîãx
 1

	)

5944 #ifde‡
GL_GLEXT_PROTOTYPES


5945 
GLAPI
 
APIENTRY
 
glDøwEÀmítsBa£Vîãx
 (
GLíum
, 
GLsizei
, GLíum, c⁄° 
GLvoid
 *, 
GLöt
);

5946 
GLAPI
 
APIENTRY
 
glDøwR™geEÀmítsBa£Vîãx
 (
GLíum
, 
GLuöt
, GLuöt, 
GLsizei
, GLíum, c⁄° 
GLvoid
 *, 
GLöt
);

5947 
GLAPI
 
APIENTRY
 
glDøwEÀmítsIn°™˚dBa£Vîãx
 (
GLíum
, 
GLsizei
, GLíum, c⁄° 
GLvoid
 *, GLsizei, 
GLöt
);

5948 
GLAPI
 
APIENTRY
 
glMu…iDøwEÀmítsBa£Vîãx
 (
GLíum
, c⁄° 
GLsizei
 *, GLíum, c⁄° 
GLvoid
* *, GLsizei, c⁄° 
GLöt
 *);

5950 (
APIENTRYP
 
	tPFNGLDRAWELEMENTSBASEVERTEXPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
, 
	tGLöt
 
	tba£vîãx
);

5951 (
APIENTRYP
 
	tPFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
, 
	tGLöt
 
	tba£vîãx
);

5952 (
APIENTRYP
 
	tPFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
, GLsizeò
	t¥imcou¡
, 
	tGLöt
 
	tba£vîãx
);

5953 (
APIENTRYP
 
	tPFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLsizei
 *
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
* *
	tödi˚s
, GLsizeò
	t¥imcou¡
, c⁄° 
	tGLöt
 *
	tba£vîãx
);

5956 #i‚de‡
GL_ARB_‰agmít_co‹d_c⁄víti⁄s


5957 
	#GL_ARB_‰agmít_co‹d_c⁄víti⁄s
 1

	)

5960 #i‚de‡
GL_ARB_¥ovokög_vîãx


5961 
	#GL_ARB_¥ovokög_vîãx
 1

	)

5962 #ifde‡
GL_GLEXT_PROTOTYPES


5963 
GLAPI
 
APIENTRY
 
glProvokögVîãx
 (
GLíum
);

5965 (
APIENTRYP
 
	tPFNGLPROVOKINGVERTEXPROC
Ë(
	tGLíum
 
	tmode
);

5968 #i‚de‡
GL_ARB_£amÀss_cube_m≠


5969 
	#GL_ARB_£amÀss_cube_m≠
 1

	)

5972 #i‚de‡
GL_ARB_sync


5973 
	#GL_ARB_sync
 1

	)

5974 #ifde‡
GL_GLEXT_PROTOTYPES


5975 
GLAPI
 
GLsync
 
APIENTRY
 
glFí˚Sync
 (
GLíum
, 
GLbôfõld
);

5976 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsSync
 (
GLsync
);

5977 
GLAPI
 
APIENTRY
 
glDñëeSync
 (
GLsync
);

5978 
GLAPI
 
GLíum
 
APIENTRY
 
glClõ¡WaôSync
 (
GLsync
, 
GLbôfõld
, 
GLuöt64
);

5979 
GLAPI
 
APIENTRY
 
glWaôSync
 (
GLsync
, 
GLbôfõld
, 
GLuöt64
);

5980 
GLAPI
 
APIENTRY
 
glGëI¡egî64v
 (
GLíum
, 
GLöt64
 *);

5981 
GLAPI
 
APIENTRY
 
glGëSynciv
 (
GLsync
, 
GLíum
, 
GLsizei
, GLsizeò*, 
GLöt
 *);

5983 
GLsync
 (
	tAPIENTRYP
 
	tPFNGLFENCESYNCPROC
Ë(
	tGLíum
 
	tc⁄dôi⁄
, 
	tGLbôfõld
 
	tÊags
);

5984 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISSYNCPROC
Ë(
	tGLsync
 
	tsync
);

5985 (
APIENTRYP
 
	tPFNGLDELETESYNCPROC
Ë(
	tGLsync
 
	tsync
);

5986 
GLíum
 (
	tAPIENTRYP
 
	tPFNGLCLIENTWAITSYNCPROC
Ë(
	tGLsync
 
	tsync
, 
	tGLbôfõld
 
	tÊags
, 
	tGLuöt64
 
	ttimeout
);

5987 (
APIENTRYP
 
	tPFNGLWAITSYNCPROC
Ë(
	tGLsync
 
	tsync
, 
	tGLbôfõld
 
	tÊags
, 
	tGLuöt64
 
	ttimeout
);

5988 (
APIENTRYP
 
	tPFNGLGETINTEGER64VPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt64
 *
	t∑øms
);

5989 (
APIENTRYP
 
	tPFNGLGETSYNCIVPROC
Ë(
	tGLsync
 
	tsync
, 
	tGLíum
 
	t≤ame
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLöt
 *
	tvÆues
);

5992 #i‚de‡
GL_ARB_ãxtuª_mu…ißm∂e


5993 
	#GL_ARB_ãxtuª_mu…ißm∂e
 1

	)

5994 #ifde‡
GL_GLEXT_PROTOTYPES


5995 
GLAPI
 
APIENTRY
 
glTexImage2DMu…ißm∂e
 (
GLíum
, 
GLsizei
, 
GLöt
, GLsizei, GLsizei, 
GLboﬁón
);

5996 
GLAPI
 
APIENTRY
 
glTexImage3DMu…ißm∂e
 (
GLíum
, 
GLsizei
, 
GLöt
, GLsizei, GLsizei, GLsizei, 
GLboﬁón
);

5997 
GLAPI
 
APIENTRY
 
glGëMu…ißm∂efv
 (
GLíum
, 
GLuöt
, 
GLÊﬂt
 *);

5998 
GLAPI
 
APIENTRY
 
glSam∂eMaski
 (
GLuöt
, 
GLbôfõld
);

6000 (
APIENTRYP
 
	tPFNGLTEXIMAGE2DMULTISAMPLEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tßm∂es
, 
	tGLöt
 
	töã∫Æf‹m©
, GLsizeò
	twidth
, GLsizeò
	theight
, 
	tGLboﬁón
 
	tfixedßm∂ñoˇti⁄s
);

6001 (
APIENTRYP
 
	tPFNGLTEXIMAGE3DMULTISAMPLEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tßm∂es
, 
	tGLöt
 
	töã∫Æf‹m©
, GLsizeò
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, 
	tGLboﬁón
 
	tfixedßm∂ñoˇti⁄s
);

6002 (
APIENTRYP
 
	tPFNGLGETMULTISAMPLEFVPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 *
	tvÆ
);

6003 (
APIENTRYP
 
	tPFNGLSAMPLEMASKIPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLbôfõld
 
	tmask
);

6006 #i‚de‡
GL_ARB_vîãx_¨øy_bgø


6007 
	#GL_ARB_vîãx_¨øy_bgø
 1

	)

6010 #i‚de‡
GL_ARB_døw_buf„rs_bÀnd


6011 
	#GL_ARB_døw_buf„rs_bÀnd
 1

	)

6012 #ifde‡
GL_GLEXT_PROTOTYPES


6013 
GLAPI
 
APIENTRY
 
glBÀndEqu©i⁄i
 (
GLuöt
, 
GLíum
);

6014 
GLAPI
 
APIENTRY
 
glBÀndEqu©i⁄Sï¨©ei
 (
GLuöt
, 
GLíum
, GLenum);

6015 
GLAPI
 
APIENTRY
 
glBÀndFunci
 (
GLuöt
, 
GLíum
, GLenum);

6016 
GLAPI
 
APIENTRY
 
glBÀndFuncSï¨©ei
 (
GLuöt
, 
GLíum
, GLenum, GLenum, GLenum);

6018 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONIPROC
Ë(
	tGLuöt
 
	tbuf
, 
	tGLíum
 
	tmode
);

6019 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONSEPARATEIPROC
Ë(
	tGLuöt
 
	tbuf
, 
	tGLíum
 
	tmodeRGB
, GLíum 
	tmodeAÕha
);

6020 (
APIENTRYP
 
	tPFNGLBLENDFUNCIPROC
Ë(
	tGLuöt
 
	tbuf
, 
	tGLíum
 
	t§c
, GLíum 
	td°
);

6021 (
APIENTRYP
 
	tPFNGLBLENDFUNCSEPARATEIPROC
Ë(
	tGLuöt
 
	tbuf
, 
	tGLíum
 
	t§cRGB
, GLíum 
	td°RGB
, GLíum 
	t§cAÕha
, GLíum 
	td°AÕha
);

6024 #i‚de‡
GL_ARB_ßm∂e_shadög


6025 
	#GL_ARB_ßm∂e_shadög
 1

	)

6026 #ifde‡
GL_GLEXT_PROTOTYPES


6027 
GLAPI
 
APIENTRY
 
glMöSam∂eShadög
 (
GL˛ampf
);

6029 (
APIENTRYP
 
	tPFNGLMINSAMPLESHADINGPROC
Ë(
	tGL˛ampf
 
	tvÆue
);

6032 #i‚de‡
GL_ARB_ãxtuª_cube_m≠_¨øy


6033 
	#GL_ARB_ãxtuª_cube_m≠_¨øy
 1

	)

6036 #i‚de‡
GL_ARB_ãxtuª_g©hî


6037 
	#GL_ARB_ãxtuª_g©hî
 1

	)

6040 #i‚de‡
GL_ARB_ãxtuª_quîy_lod


6041 
	#GL_ARB_ãxtuª_quîy_lod
 1

	)

6044 #i‚de‡
GL_EXT_abgr


6045 
	#GL_EXT_abgr
 1

	)

6048 #i‚de‡
GL_EXT_bÀnd_cﬁ‹


6049 
	#GL_EXT_bÀnd_cﬁ‹
 1

	)

6050 #ifde‡
GL_GLEXT_PROTOTYPES


6051 
GLAPI
 
APIENTRY
 
glBÀndCﬁ‹EXT
 (
GL˛ampf
, GLclampf, GLclampf, GLclampf);

6053 (
APIENTRYP
 
	tPFNGLBLENDCOLOREXTPROC
Ë(
	tGL˛ampf
 
	tªd
, GL˛amp‡
	tgªí
, GL˛amp‡
	tblue
, GL˛amp‡
	tÆpha
);

6056 #i‚de‡
GL_EXT_pﬁyg⁄_off£t


6057 
	#GL_EXT_pﬁyg⁄_off£t
 1

	)

6058 #ifde‡
GL_GLEXT_PROTOTYPES


6059 
GLAPI
 
APIENTRY
 
glPﬁyg⁄Off£tEXT
 (
GLÊﬂt
, GLfloat);

6061 (
APIENTRYP
 
	tPFNGLPOLYGONOFFSETEXTPROC
Ë(
	tGLÊﬂt
 
	tÁ˘‹
, GLÊﬂà
	tbüs
);

6064 #i‚de‡
GL_EXT_ãxtuª


6065 
	#GL_EXT_ãxtuª
 1

	)

6068 #i‚de‡
GL_EXT_ãxtuª3D


6069 
	#GL_EXT_ãxtuª3D
 1

	)

6070 #ifde‡
GL_GLEXT_PROTOTYPES


6071 
GLAPI
 
APIENTRY
 
glTexImage3DEXT
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLsizei, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

6072 
GLAPI
 
APIENTRY
 
glTexSubImage3DEXT
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

6074 (
APIENTRYP
 
	tPFNGLTEXIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

6075 (
APIENTRYP
 
	tPFNGLTEXSUBIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

6078 #i‚de‡
GL_SGIS_ãxtuª_fûãr4


6079 
	#GL_SGIS_ãxtuª_fûãr4
 1

	)

6080 #ifde‡
GL_GLEXT_PROTOTYPES


6081 
GLAPI
 
APIENTRY
 
glGëTexFûãrFuncSGIS
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6082 
GLAPI
 
APIENTRY
 
glTexFûãrFuncSGIS
 (
GLíum
, GLíum, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

6084 (
APIENTRYP
 
	tPFNGLGETTEXFILTERFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tfûãr
, 
	tGLÊﬂt
 *
	tweights
);

6085 (
APIENTRYP
 
	tPFNGLTEXFILTERFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tfûãr
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLÊﬂt
 *
	tweights
);

6088 #i‚de‡
GL_EXT_subãxtuª


6089 
	#GL_EXT_subãxtuª
 1

	)

6090 #ifde‡
GL_GLEXT_PROTOTYPES


6091 
GLAPI
 
APIENTRY
 
glTexSubImage1DEXT
 (
GLíum
, 
GLöt
, GLöt, 
GLsizei
, GLíum, GLíum, c⁄° 
GLvoid
 *);

6092 
GLAPI
 
APIENTRY
 
glTexSubImage2DEXT
 (
GLíum
, 
GLöt
, GLöt, GLöt, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

6094 (
APIENTRYP
 
	tPFNGLTEXSUBIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

6095 (
APIENTRYP
 
	tPFNGLTEXSUBIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

6098 #i‚de‡
GL_EXT_c›y_ãxtuª


6099 
	#GL_EXT_c›y_ãxtuª
 1

	)

6100 #ifde‡
GL_GLEXT_PROTOTYPES


6101 
GLAPI
 
APIENTRY
 
glC›yTexImage1DEXT
 (
GLíum
, 
GLöt
, GLíum, GLöt, GLöt, 
GLsizei
, GLint);

6102 
GLAPI
 
APIENTRY
 
glC›yTexImage2DEXT
 (
GLíum
, 
GLöt
, GLíum, GLöt, GLöt, 
GLsizei
, GLsizei, GLint);

6103 
GLAPI
 
APIENTRY
 
glC›yTexSubImage1DEXT
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
);

6104 
GLAPI
 
APIENTRY
 
glC›yTexSubImage2DEXT
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei);

6105 
GLAPI
 
APIENTRY
 
glC›yTexSubImage3DEXT
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei);

6107 (
APIENTRYP
 
	tPFNGLCOPYTEXIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
);

6108 (
APIENTRYP
 
	tPFNGLCOPYTEXIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
);

6109 (
APIENTRYP
 
	tPFNGLCOPYTEXSUBIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

6110 (
APIENTRYP
 
	tPFNGLCOPYTEXSUBIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

6111 (
APIENTRYP
 
	tPFNGLCOPYTEXSUBIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

6114 #i‚de‡
GL_EXT_hi°ogøm


6115 
	#GL_EXT_hi°ogøm
 1

	)

6116 #ifde‡
GL_GLEXT_PROTOTYPES


6117 
GLAPI
 
APIENTRY
 
glGëHi°ogømEXT
 (
GLíum
, 
GLboﬁón
, GLíum, GLíum, 
GLvoid
 *);

6118 
GLAPI
 
APIENTRY
 
glGëHi°ogømP¨amëîfvEXT
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6119 
GLAPI
 
APIENTRY
 
glGëHi°ogømP¨amëîivEXT
 (
GLíum
, GLíum, 
GLöt
 *);

6120 
GLAPI
 
APIENTRY
 
glGëMömaxEXT
 (
GLíum
, 
GLboﬁón
, GLíum, GLíum, 
GLvoid
 *);

6121 
GLAPI
 
APIENTRY
 
glGëMömaxP¨amëîfvEXT
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6122 
GLAPI
 
APIENTRY
 
glGëMömaxP¨amëîivEXT
 (
GLíum
, GLíum, 
GLöt
 *);

6123 
GLAPI
 
APIENTRY
 
glHi°ogømEXT
 (
GLíum
, 
GLsizei
, GLíum, 
GLboﬁón
);

6124 
GLAPI
 
APIENTRY
 
glMömaxEXT
 (
GLíum
, GLíum, 
GLboﬁón
);

6125 
GLAPI
 
APIENTRY
 
glRe£tHi°ogømEXT
 (
GLíum
);

6126 
GLAPI
 
APIENTRY
 
glRe£tMömaxEXT
 (
GLíum
);

6128 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLboﬁón
 
	tª£t
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	tvÆues
);

6129 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6130 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6131 (
APIENTRYP
 
	tPFNGLGETMINMAXEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLboﬁón
 
	tª£t
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	tvÆues
);

6132 (
APIENTRYP
 
	tPFNGLGETMINMAXPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6133 (
APIENTRYP
 
	tPFNGLGETMINMAXPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6134 (
APIENTRYP
 
	tPFNGLHISTOGRAMEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	twidth
, GLíum 
	töã∫Æf‹m©
, 
	tGLboﬁón
 
	tsök
);

6135 (
APIENTRYP
 
	tPFNGLMINMAXEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLboﬁón
 
	tsök
);

6136 (
APIENTRYP
 
	tPFNGLRESETHISTOGRAMEXTPROC
Ë(
	tGLíum
 
	tèrgë
);

6137 (
APIENTRYP
 
	tPFNGLRESETMINMAXEXTPROC
Ë(
	tGLíum
 
	tèrgë
);

6140 #i‚de‡
GL_EXT_c⁄vﬁuti⁄


6141 
	#GL_EXT_c⁄vﬁuti⁄
 1

	)

6142 #ifde‡
GL_GLEXT_PROTOTYPES


6143 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄Fûãr1DEXT
 (
GLíum
, GLíum, 
GLsizei
, GLíum, GLíum, c⁄° 
GLvoid
 *);

6144 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄Fûãr2DEXT
 (
GLíum
, GLíum, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

6145 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄P¨amëîfEXT
 (
GLíum
, GLíum, 
GLÊﬂt
);

6146 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄P¨amëîfvEXT
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

6147 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄P¨amëîiEXT
 (
GLíum
, GLíum, 
GLöt
);

6148 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄P¨amëîivEXT
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

6149 
GLAPI
 
APIENTRY
 
glC›yC⁄vﬁuti⁄Fûãr1DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, 
GLsizei
);

6150 
GLAPI
 
APIENTRY
 
glC›yC⁄vﬁuti⁄Fûãr2DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, 
GLsizei
, GLsizei);

6151 
GLAPI
 
APIENTRY
 
glGëC⁄vﬁuti⁄FûãrEXT
 (
GLíum
, GLíum, GLíum, 
GLvoid
 *);

6152 
GLAPI
 
APIENTRY
 
glGëC⁄vﬁuti⁄P¨amëîfvEXT
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6153 
GLAPI
 
APIENTRY
 
glGëC⁄vﬁuti⁄P¨amëîivEXT
 (
GLíum
, GLíum, 
GLöt
 *);

6154 
GLAPI
 
APIENTRY
 
glGëSï¨abÀFûãrEXT
 (
GLíum
, GLíum, GLíum, 
GLvoid
 *, GLvoid *, GLvoid *);

6155 
GLAPI
 
APIENTRY
 
glSï¨abÀFûãr2DEXT
 (
GLíum
, GLíum, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *, const GLvoid *);

6157 (
APIENTRYP
 
	tPFNGLCONVOLUTIONFILTER1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	timage
);

6158 (
APIENTRYP
 
	tPFNGLCONVOLUTIONFILTER2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	timage
);

6159 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERFEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øms
);

6160 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6161 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERIEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øms
);

6162 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6163 (
APIENTRYP
 
	tPFNGLCOPYCONVOLUTIONFILTER1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

6164 (
APIENTRYP
 
	tPFNGLCOPYCONVOLUTIONFILTER2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

6165 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONFILTEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	timage
);

6166 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6167 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6168 (
APIENTRYP
 
	tPFNGLGETSEPARABLEFILTEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	trow
, GLvoid *
	tcﬁumn
, GLvoid *
	t•™
);

6169 (
APIENTRYP
 
	tPFNGLSEPARABLEFILTER2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	trow
, c⁄° GLvoid *
	tcﬁumn
);

6172 #i‚de‡
GL_SGI_cﬁ‹_m©rix


6173 
	#GL_SGI_cﬁ‹_m©rix
 1

	)

6176 #i‚de‡
GL_SGI_cﬁ‹_èbÀ


6177 
	#GL_SGI_cﬁ‹_èbÀ
 1

	)

6178 #ifde‡
GL_GLEXT_PROTOTYPES


6179 
GLAPI
 
APIENTRY
 
glCﬁ‹TabÀSGI
 (
GLíum
, GLíum, 
GLsizei
, GLíum, GLíum, c⁄° 
GLvoid
 *);

6180 
GLAPI
 
APIENTRY
 
glCﬁ‹TabÀP¨amëîfvSGI
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

6181 
GLAPI
 
APIENTRY
 
glCﬁ‹TabÀP¨amëîivSGI
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

6182 
GLAPI
 
APIENTRY
 
glC›yCﬁ‹TabÀSGI
 (
GLíum
, GLíum, 
GLöt
, GLöt, 
GLsizei
);

6183 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀSGI
 (
GLíum
, GLíum, GLíum, 
GLvoid
 *);

6184 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀP¨amëîfvSGI
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6185 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀP¨amëîivSGI
 (
GLíum
, GLíum, 
GLöt
 *);

6187 (
APIENTRYP
 
	tPFNGLCOLORTABLESGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tèbÀ
);

6188 (
APIENTRYP
 
	tPFNGLCOLORTABLEPARAMETERFVSGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6189 (
APIENTRYP
 
	tPFNGLCOLORTABLEPARAMETERIVSGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6190 (
APIENTRYP
 
	tPFNGLCOPYCOLORTABLESGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

6191 (
APIENTRYP
 
	tPFNGLGETCOLORTABLESGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	tèbÀ
);

6192 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERFVSGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6193 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERIVSGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6196 #i‚de‡
GL_SGIX_pixñ_ãxtuª


6197 
	#GL_SGIX_pixñ_ãxtuª
 1

	)

6198 #ifde‡
GL_GLEXT_PROTOTYPES


6199 
GLAPI
 
APIENTRY
 
glPixñTexGíSGIX
 (
GLíum
);

6201 (
APIENTRYP
 
	tPFNGLPIXELTEXGENSGIXPROC
Ë(
	tGLíum
 
	tmode
);

6204 #i‚de‡
GL_SGIS_pixñ_ãxtuª


6205 
	#GL_SGIS_pixñ_ãxtuª
 1

	)

6206 #ifde‡
GL_GLEXT_PROTOTYPES


6207 
GLAPI
 
APIENTRY
 
glPixñTexGíP¨amëîiSGIS
 (
GLíum
, 
GLöt
);

6208 
GLAPI
 
APIENTRY
 
glPixñTexGíP¨amëîivSGIS
 (
GLíum
, c⁄° 
GLöt
 *);

6209 
GLAPI
 
APIENTRY
 
glPixñTexGíP¨amëîfSGIS
 (
GLíum
, 
GLÊﬂt
);

6210 
GLAPI
 
APIENTRY
 
glPixñTexGíP¨amëîfvSGIS
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

6211 
GLAPI
 
APIENTRY
 
glGëPixñTexGíP¨amëîivSGIS
 (
GLíum
, 
GLöt
 *);

6212 
GLAPI
 
APIENTRY
 
glGëPixñTexGíP¨amëîfvSGIS
 (
GLíum
, 
GLÊﬂt
 *);

6214 (
APIENTRYP
 
	tPFNGLPIXELTEXGENPARAMETERISGISPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6215 (
APIENTRYP
 
	tPFNGLPIXELTEXGENPARAMETERIVSGISPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6216 (
APIENTRYP
 
	tPFNGLPIXELTEXGENPARAMETERFSGISPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6217 (
APIENTRYP
 
	tPFNGLPIXELTEXGENPARAMETERFVSGISPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6218 (
APIENTRYP
 
	tPFNGLGETPIXELTEXGENPARAMETERIVSGISPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6219 (
APIENTRYP
 
	tPFNGLGETPIXELTEXGENPARAMETERFVSGISPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6222 #i‚de‡
GL_SGIS_ãxtuª4D


6223 
	#GL_SGIS_ãxtuª4D
 1

	)

6224 #ifde‡
GL_GLEXT_PROTOTYPES


6225 
GLAPI
 
APIENTRY
 
glTexImage4DSGIS
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLsizei, GLsizei, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

6226 
GLAPI
 
APIENTRY
 
glTexSubImage4DSGIS
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

6228 (
APIENTRYP
 
	tPFNGLTEXIMAGE4DSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLsizeò
	tsize4d
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

6229 (
APIENTRYP
 
	tPFNGLTEXSUBIMAGE4DSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, GLöà
	twoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLsizeò
	tsize4d
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

6232 #i‚de‡
GL_SGI_ãxtuª_cﬁ‹_èbÀ


6233 
	#GL_SGI_ãxtuª_cﬁ‹_èbÀ
 1

	)

6236 #i‚de‡
GL_EXT_cmyka


6237 
	#GL_EXT_cmyka
 1

	)

6240 #i‚de‡
GL_EXT_ãxtuª_obje˘


6241 
	#GL_EXT_ãxtuª_obje˘
 1

	)

6242 #ifde‡
GL_GLEXT_PROTOTYPES


6243 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glAªTextuªsResidítEXT
 (
GLsizei
, c⁄° 
GLuöt
 *, GLboolean *);

6244 
GLAPI
 
APIENTRY
 
glBödTextuªEXT
 (
GLíum
, 
GLuöt
);

6245 
GLAPI
 
APIENTRY
 
glDñëeTextuªsEXT
 (
GLsizei
, c⁄° 
GLuöt
 *);

6246 
GLAPI
 
APIENTRY
 
glGíTextuªsEXT
 (
GLsizei
, 
GLuöt
 *);

6247 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsTextuªEXT
 (
GLuöt
);

6248 
GLAPI
 
APIENTRY
 
glPri‹ôizeTextuªsEXT
 (
GLsizei
, c⁄° 
GLuöt
 *, c⁄° 
GL˛ampf
 *);

6250 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLARETEXTURESRESIDENTEXTPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tãxtuªs
, 
	tGLboﬁón
 *
	tªsidí˚s
);

6251 (
APIENTRYP
 
	tPFNGLBINDTEXTUREEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tãxtuª
);

6252 (
APIENTRYP
 
	tPFNGLDELETETEXTURESEXTPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tãxtuªs
);

6253 (
APIENTRYP
 
	tPFNGLGENTEXTURESEXTPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tãxtuªs
);

6254 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISTEXTUREEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
);

6255 (
APIENTRYP
 
	tPFNGLPRIORITIZETEXTURESEXTPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tãxtuªs
, c⁄° 
	tGL˛ampf
 *
	t¥i‹ôõs
);

6258 #i‚de‡
GL_SGIS_dëaû_ãxtuª


6259 
	#GL_SGIS_dëaû_ãxtuª
 1

	)

6260 #ifde‡
GL_GLEXT_PROTOTYPES


6261 
GLAPI
 
APIENTRY
 
glDëaûTexFuncSGIS
 (
GLíum
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

6262 
GLAPI
 
APIENTRY
 
glGëDëaûTexFuncSGIS
 (
GLíum
, 
GLÊﬂt
 *);

6264 (
APIENTRYP
 
	tPFNGLDETAILTEXFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLÊﬂt
 *
	tpoöts
);

6265 (
APIENTRYP
 
	tPFNGLGETDETAILTEXFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 *
	tpoöts
);

6268 #i‚de‡
GL_SGIS_sh¨≥n_ãxtuª


6269 
	#GL_SGIS_sh¨≥n_ãxtuª
 1

	)

6270 #ifde‡
GL_GLEXT_PROTOTYPES


6271 
GLAPI
 
APIENTRY
 
glSh¨≥nTexFuncSGIS
 (
GLíum
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

6272 
GLAPI
 
APIENTRY
 
glGëSh¨≥nTexFuncSGIS
 (
GLíum
, 
GLÊﬂt
 *);

6274 (
APIENTRYP
 
	tPFNGLSHARPENTEXFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLÊﬂt
 *
	tpoöts
);

6275 (
APIENTRYP
 
	tPFNGLGETSHARPENTEXFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 *
	tpoöts
);

6278 #i‚de‡
GL_EXT_∑cked_pixñs


6279 
	#GL_EXT_∑cked_pixñs
 1

	)

6282 #i‚de‡
GL_SGIS_ãxtuª_lod


6283 
	#GL_SGIS_ãxtuª_lod
 1

	)

6286 #i‚de‡
GL_SGIS_mu…ißm∂e


6287 
	#GL_SGIS_mu…ißm∂e
 1

	)

6288 #ifde‡
GL_GLEXT_PROTOTYPES


6289 
GLAPI
 
APIENTRY
 
glSam∂eMaskSGIS
 (
GL˛ampf
, 
GLboﬁón
);

6290 
GLAPI
 
APIENTRY
 
glSam∂eP©ã∫SGIS
 (
GLíum
);

6292 (
APIENTRYP
 
	tPFNGLSAMPLEMASKSGISPROC
Ë(
	tGL˛ampf
 
	tvÆue
, 
	tGLboﬁón
 
	tövît
);

6293 (
APIENTRYP
 
	tPFNGLSAMPLEPATTERNSGISPROC
Ë(
	tGLíum
 
	t∑âîn
);

6296 #i‚de‡
GL_EXT_ªsˇÀ_n‹mÆ


6297 
	#GL_EXT_ªsˇÀ_n‹mÆ
 1

	)

6300 #i‚de‡
GL_EXT_vîãx_¨øy


6301 
	#GL_EXT_vîãx_¨øy
 1

	)

6302 #ifde‡
GL_GLEXT_PROTOTYPES


6303 
GLAPI
 
APIENTRY
 
glAºayEÀmítEXT
 (
GLöt
);

6304 
GLAPI
 
APIENTRY
 
glCﬁ‹PoöãrEXT
 (
GLöt
, 
GLíum
, 
GLsizei
, GLsizei, c⁄° 
GLvoid
 *);

6305 
GLAPI
 
APIENTRY
 
glDøwAºaysEXT
 (
GLíum
, 
GLöt
, 
GLsizei
);

6306 
GLAPI
 
APIENTRY
 
glEdgeFœgPoöãrEXT
 (
GLsizei
, GLsizei, c⁄° 
GLboﬁón
 *);

6307 
GLAPI
 
APIENTRY
 
glGëPoöãrvEXT
 (
GLíum
, 
GLvoid
* *);

6308 
GLAPI
 
APIENTRY
 
glIndexPoöãrEXT
 (
GLíum
, 
GLsizei
, GLsizei, c⁄° 
GLvoid
 *);

6309 
GLAPI
 
APIENTRY
 
glN‹mÆPoöãrEXT
 (
GLíum
, 
GLsizei
, GLsizei, c⁄° 
GLvoid
 *);

6310 
GLAPI
 
APIENTRY
 
glTexCo‹dPoöãrEXT
 (
GLöt
, 
GLíum
, 
GLsizei
, GLsizei, c⁄° 
GLvoid
 *);

6311 
GLAPI
 
APIENTRY
 
glVîãxPoöãrEXT
 (
GLöt
, 
GLíum
, 
GLsizei
, GLsizei, c⁄° 
GLvoid
 *);

6313 (
APIENTRYP
 
	tPFNGLARRAYELEMENTEXTPROC
Ë(
	tGLöt
 
	ti
);

6314 (
APIENTRYP
 
	tPFNGLCOLORPOINTEREXTPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6315 (
APIENTRYP
 
	tPFNGLDRAWARRAYSEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
);

6316 (
APIENTRYP
 
	tPFNGLEDGEFLAGPOINTEREXTPROC
Ë(
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLboﬁón
 *
	tpoöãr
);

6317 (
APIENTRYP
 
	tPFNGLGETPOINTERVEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLvoid
* *
	t∑øms
);

6318 (
APIENTRYP
 
	tPFNGLINDEXPOINTEREXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6319 (
APIENTRYP
 
	tPFNGLNORMALPOINTEREXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6320 (
APIENTRYP
 
	tPFNGLTEXCOORDPOINTEREXTPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6321 (
APIENTRYP
 
	tPFNGLVERTEXPOINTEREXTPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6324 #i‚de‡
GL_EXT_misc_©åibuã


6325 
	#GL_EXT_misc_©åibuã
 1

	)

6328 #i‚de‡
GL_SGIS_gíî©e_mùm≠


6329 
	#GL_SGIS_gíî©e_mùm≠
 1

	)

6332 #i‚de‡
GL_SGIX_˛ùm≠


6333 
	#GL_SGIX_˛ùm≠
 1

	)

6336 #i‚de‡
GL_SGIX_shadow


6337 
	#GL_SGIX_shadow
 1

	)

6340 #i‚de‡
GL_SGIS_ãxtuª_edge_˛amp


6341 
	#GL_SGIS_ãxtuª_edge_˛amp
 1

	)

6344 #i‚de‡
GL_SGIS_ãxtuª_b‹dî_˛amp


6345 
	#GL_SGIS_ãxtuª_b‹dî_˛amp
 1

	)

6348 #i‚de‡
GL_EXT_bÀnd_mömax


6349 
	#GL_EXT_bÀnd_mömax
 1

	)

6350 #ifde‡
GL_GLEXT_PROTOTYPES


6351 
GLAPI
 
APIENTRY
 
glBÀndEqu©i⁄EXT
 (
GLíum
);

6353 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONEXTPROC
Ë(
	tGLíum
 
	tmode
);

6356 #i‚de‡
GL_EXT_bÀnd_subåa˘


6357 
	#GL_EXT_bÀnd_subåa˘
 1

	)

6360 #i‚de‡
GL_EXT_bÀnd_logic_›


6361 
	#GL_EXT_bÀnd_logic_›
 1

	)

6364 #i‚de‡
GL_SGIX_öãæa˚


6365 
	#GL_SGIX_öãæa˚
 1

	)

6368 #i‚de‡
GL_SGIX_pixñ_tûes


6369 
	#GL_SGIX_pixñ_tûes
 1

	)

6372 #i‚de‡
GL_SGIX_ãxtuª_£À˘


6373 
	#GL_SGIX_ãxtuª_£À˘
 1

	)

6376 #i‚de‡
GL_SGIX_•rôe


6377 
	#GL_SGIX_•rôe
 1

	)

6378 #ifde‡
GL_GLEXT_PROTOTYPES


6379 
GLAPI
 
APIENTRY
 
glS¥ôeP¨amëîfSGIX
 (
GLíum
, 
GLÊﬂt
);

6380 
GLAPI
 
APIENTRY
 
glS¥ôeP¨amëîfvSGIX
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

6381 
GLAPI
 
APIENTRY
 
glS¥ôeP¨amëîiSGIX
 (
GLíum
, 
GLöt
);

6382 
GLAPI
 
APIENTRY
 
glS¥ôeP¨amëîivSGIX
 (
GLíum
, c⁄° 
GLöt
 *);

6384 (
APIENTRYP
 
	tPFNGLSPRITEPARAMETERFSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6385 (
APIENTRYP
 
	tPFNGLSPRITEPARAMETERFVSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6386 (
APIENTRYP
 
	tPFNGLSPRITEPARAMETERISGIXPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6387 (
APIENTRYP
 
	tPFNGLSPRITEPARAMETERIVSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6390 #i‚de‡
GL_SGIX_ãxtuª_mu…i_buf„r


6391 
	#GL_SGIX_ãxtuª_mu…i_buf„r
 1

	)

6394 #i‚de‡
GL_EXT_poöt_∑ømëîs


6395 
	#GL_EXT_poöt_∑ømëîs
 1

	)

6396 #ifde‡
GL_GLEXT_PROTOTYPES


6397 
GLAPI
 
APIENTRY
 
glPoötP¨amëîfEXT
 (
GLíum
, 
GLÊﬂt
);

6398 
GLAPI
 
APIENTRY
 
glPoötP¨amëîfvEXT
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

6400 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6401 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6404 #i‚de‡
GL_SGIS_poöt_∑ømëîs


6405 
	#GL_SGIS_poöt_∑ømëîs
 1

	)

6406 #ifde‡
GL_GLEXT_PROTOTYPES


6407 
GLAPI
 
APIENTRY
 
glPoötP¨amëîfSGIS
 (
GLíum
, 
GLÊﬂt
);

6408 
GLAPI
 
APIENTRY
 
glPoötP¨amëîfvSGIS
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

6410 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFSGISPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6411 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFVSGISPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6414 #i‚de‡
GL_SGIX_ö°rumíts


6415 
	#GL_SGIX_ö°rumíts
 1

	)

6416 #ifde‡
GL_GLEXT_PROTOTYPES


6417 
GLAPI
 
GLöt
 
APIENTRY
 
glGëIn°rumítsSGIX
 ();

6418 
GLAPI
 
APIENTRY
 
glIn°rumítsBuf„rSGIX
 (
GLsizei
, 
GLöt
 *);

6419 
GLAPI
 
GLöt
 
APIENTRY
 
glPﬁlIn°rumítsSGIX
 (GLint *);

6420 
GLAPI
 
APIENTRY
 
glRódIn°rumítsSGIX
 (
GLöt
);

6421 
GLAPI
 
APIENTRY
 
glSèπIn°rumítsSGIX
 ();

6422 
GLAPI
 
APIENTRY
 
glSt›In°rumítsSGIX
 (
GLöt
);

6424 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETINSTRUMENTSSGIXPROC
) ();

6425 (
APIENTRYP
 
	tPFNGLINSTRUMENTSBUFFERSGIXPROC
Ë(
	tGLsizei
 
	tsize
, 
	tGLöt
 *
	tbuf„r
);

6426 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLPOLLINSTRUMENTSSGIXPROC
Ë(
	tGLöt
 *
	tm¨kî_p
);

6427 (
APIENTRYP
 
	tPFNGLREADINSTRUMENTSSGIXPROC
Ë(
	tGLöt
 
	tm¨kî
);

6428 (
APIENTRYP
 
	tPFNGLSTARTINSTRUMENTSSGIXPROC
) ();

6429 (
APIENTRYP
 
	tPFNGLSTOPINSTRUMENTSSGIXPROC
Ë(
	tGLöt
 
	tm¨kî
);

6432 #i‚de‡
GL_SGIX_ãxtuª_sˇÀ_büs


6433 
	#GL_SGIX_ãxtuª_sˇÀ_büs
 1

	)

6436 #i‚de‡
GL_SGIX_‰amezoom


6437 
	#GL_SGIX_‰amezoom
 1

	)

6438 #ifde‡
GL_GLEXT_PROTOTYPES


6439 
GLAPI
 
APIENTRY
 
glFømeZoomSGIX
 (
GLöt
);

6441 (
APIENTRYP
 
	tPFNGLFRAMEZOOMSGIXPROC
Ë(
	tGLöt
 
	tÁ˘‹
);

6444 #i‚de‡
GL_SGIX_èg_ßm∂e_buf„r


6445 
	#GL_SGIX_èg_ßm∂e_buf„r
 1

	)

6446 #ifde‡
GL_GLEXT_PROTOTYPES


6447 
GLAPI
 
APIENTRY
 
glTagSam∂eBuf„rSGIX
 ();

6449 (
APIENTRYP
 
	tPFNGLTAGSAMPLEBUFFERSGIXPROC
) ();

6452 #i‚de‡
GL_SGIX_pﬁynomül_ffd


6453 
	#GL_SGIX_pﬁynomül_ffd
 1

	)

6454 #ifde‡
GL_GLEXT_PROTOTYPES


6455 
GLAPI
 
APIENTRY
 
glDef‹m©i⁄M≠3dSGIX
 (
GLíum
, 
GLdoubÀ
, GLdoubÀ, 
GLöt
, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, const GLdouble *);

6456 
GLAPI
 
APIENTRY
 
glDef‹m©i⁄M≠3fSGIX
 (
GLíum
, 
GLÊﬂt
, GLÊﬂt, 
GLöt
, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, const GLfloat *);

6457 
GLAPI
 
APIENTRY
 
glDef‹mSGIX
 (
GLbôfõld
);

6458 
GLAPI
 
APIENTRY
 
glLﬂdIdítôyDef‹m©i⁄M≠SGIX
 (
GLbôfõld
);

6460 (
APIENTRYP
 
	tPFNGLDEFORMATIONMAP3DSGIXPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	tu1
, GLdoubÀ 
	tu2
, 
	tGLöt
 
	tu°ride
, GLöà
	tu‹dî
, GLdoubÀ 
	tv1
, GLdoubÀ 
	tv2
, GLöà
	tv°ride
, GLöà
	tv‹dî
, GLdoubÀ 
	tw1
, GLdoubÀ 
	tw2
, GLöà
	tw°ride
, GLöà
	tw‹dî
, c⁄° GLdoubÀ *
	tpoöts
);

6461 (
APIENTRYP
 
	tPFNGLDEFORMATIONMAP3FSGIXPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	tu1
, GLÊﬂà
	tu2
, 
	tGLöt
 
	tu°ride
, GLöà
	tu‹dî
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
, GLöà
	tv°ride
, GLöà
	tv‹dî
, GLÊﬂà
	tw1
, GLÊﬂà
	tw2
, GLöà
	tw°ride
, GLöà
	tw‹dî
, c⁄° GLÊﬂà*
	tpoöts
);

6462 (
APIENTRYP
 
	tPFNGLDEFORMSGIXPROC
Ë(
	tGLbôfõld
 
	tmask
);

6463 (
APIENTRYP
 
	tPFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC
Ë(
	tGLbôfõld
 
	tmask
);

6466 #i‚de‡
GL_SGIX_ª„ªn˚_∂™e


6467 
	#GL_SGIX_ª„ªn˚_∂™e
 1

	)

6468 #ifde‡
GL_GLEXT_PROTOTYPES


6469 
GLAPI
 
APIENTRY
 
glRe„ªn˚Pœ√SGIX
 (c⁄° 
GLdoubÀ
 *);

6471 (
APIENTRYP
 
	tPFNGLREFERENCEPLANESGIXPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tequ©i⁄
);

6474 #i‚de‡
GL_SGIX_Êush_ø°î


6475 
	#GL_SGIX_Êush_ø°î
 1

	)

6476 #ifde‡
GL_GLEXT_PROTOTYPES


6477 
GLAPI
 
APIENTRY
 
glFlushRa°îSGIX
 ();

6479 (
APIENTRYP
 
	tPFNGLFLUSHRASTERSGIXPROC
) ();

6482 #i‚de‡
GL_SGIX_dïth_ãxtuª


6483 
	#GL_SGIX_dïth_ãxtuª
 1

	)

6486 #i‚de‡
GL_SGIS_fog_fun˘i⁄


6487 
	#GL_SGIS_fog_fun˘i⁄
 1

	)

6488 #ifde‡
GL_GLEXT_PROTOTYPES


6489 
GLAPI
 
APIENTRY
 
glFogFuncSGIS
 (
GLsizei
, c⁄° 
GLÊﬂt
 *);

6490 
GLAPI
 
APIENTRY
 
glGëFogFuncSGIS
 (
GLÊﬂt
 *);

6492 (
APIENTRYP
 
	tPFNGLFOGFUNCSGISPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLÊﬂt
 *
	tpoöts
);

6493 (
APIENTRYP
 
	tPFNGLGETFOGFUNCSGISPROC
Ë(
	tGLÊﬂt
 *
	tpoöts
);

6496 #i‚de‡
GL_SGIX_fog_off£t


6497 
	#GL_SGIX_fog_off£t
 1

	)

6500 #i‚de‡
GL_HP_image_å™sf‹m


6501 
	#GL_HP_image_å™sf‹m
 1

	)

6502 #ifde‡
GL_GLEXT_PROTOTYPES


6503 
GLAPI
 
APIENTRY
 
glImageTønsf‹mP¨amëîiHP
 (
GLíum
, GLíum, 
GLöt
);

6504 
GLAPI
 
APIENTRY
 
glImageTønsf‹mP¨amëîfHP
 (
GLíum
, GLíum, 
GLÊﬂt
);

6505 
GLAPI
 
APIENTRY
 
glImageTønsf‹mP¨amëîivHP
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

6506 
GLAPI
 
APIENTRY
 
glImageTønsf‹mP¨amëîfvHP
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

6507 
GLAPI
 
APIENTRY
 
glGëImageTønsf‹mP¨amëîivHP
 (
GLíum
, GLíum, 
GLöt
 *);

6508 
GLAPI
 
APIENTRY
 
glGëImageTønsf‹mP¨amëîfvHP
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6510 (
APIENTRYP
 
	tPFNGLIMAGETRANSFORMPARAMETERIHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6511 (
APIENTRYP
 
	tPFNGLIMAGETRANSFORMPARAMETERFHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6512 (
APIENTRYP
 
	tPFNGLIMAGETRANSFORMPARAMETERIVHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6513 (
APIENTRYP
 
	tPFNGLIMAGETRANSFORMPARAMETERFVHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6514 (
APIENTRYP
 
	tPFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6515 (
APIENTRYP
 
	tPFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6518 #i‚de‡
GL_HP_c⁄vﬁuti⁄_b‹dî_modes


6519 
	#GL_HP_c⁄vﬁuti⁄_b‹dî_modes
 1

	)

6522 #i‚de‡
GL_SGIX_ãxtuª_add_ív


6523 
	#GL_SGIX_ãxtuª_add_ív
 1

	)

6526 #i‚de‡
GL_EXT_cﬁ‹_subèbÀ


6527 
	#GL_EXT_cﬁ‹_subèbÀ
 1

	)

6528 #ifde‡
GL_GLEXT_PROTOTYPES


6529 
GLAPI
 
APIENTRY
 
glCﬁ‹SubTabÀEXT
 (
GLíum
, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

6530 
GLAPI
 
APIENTRY
 
glC›yCﬁ‹SubTabÀEXT
 (
GLíum
, 
GLsizei
, 
GLöt
, GLint, GLsizei);

6532 (
APIENTRYP
 
	tPFNGLCOLORSUBTABLEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	t°¨t
, GLsizeò
	tcou¡
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	td©a
);

6533 (
APIENTRYP
 
	tPFNGLCOPYCOLORSUBTABLEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	t°¨t
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLsizeò
	twidth
);

6536 #i‚de‡
GL_PGI_vîãx_höts


6537 
	#GL_PGI_vîãx_höts
 1

	)

6540 #i‚de‡
GL_PGI_misc_höts


6541 
	#GL_PGI_misc_höts
 1

	)

6542 #ifde‡
GL_GLEXT_PROTOTYPES


6543 
GLAPI
 
APIENTRY
 
glHötPGI
 (
GLíum
, 
GLöt
);

6545 (
APIENTRYP
 
	tPFNGLHINTPGIPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tmode
);

6548 #i‚de‡
GL_EXT_∑Àâed_ãxtuª


6549 
	#GL_EXT_∑Àâed_ãxtuª
 1

	)

6550 #ifde‡
GL_GLEXT_PROTOTYPES


6551 
GLAPI
 
APIENTRY
 
glCﬁ‹TabÀEXT
 (
GLíum
, GLíum, 
GLsizei
, GLíum, GLíum, c⁄° 
GLvoid
 *);

6552 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀEXT
 (
GLíum
, GLíum, GLíum, 
GLvoid
 *);

6553 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀP¨amëîivEXT
 (
GLíum
, GLíum, 
GLöt
 *);

6554 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀP¨amëîfvEXT
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6556 (
APIENTRYP
 
	tPFNGLCOLORTABLEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫ÆF‹m©
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tèbÀ
);

6557 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	td©a
);

6558 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6559 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6562 #i‚de‡
GL_EXT_˛ù_vﬁume_höt


6563 
	#GL_EXT_˛ù_vﬁume_höt
 1

	)

6566 #i‚de‡
GL_SGIX_li°_¥i‹ôy


6567 
	#GL_SGIX_li°_¥i‹ôy
 1

	)

6568 #ifde‡
GL_GLEXT_PROTOTYPES


6569 
GLAPI
 
APIENTRY
 
glGëLi°P¨amëîfvSGIX
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

6570 
GLAPI
 
APIENTRY
 
glGëLi°P¨amëîivSGIX
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

6571 
GLAPI
 
APIENTRY
 
glLi°P¨amëîfSGIX
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
);

6572 
GLAPI
 
APIENTRY
 
glLi°P¨amëîfvSGIX
 (
GLuöt
, 
GLíum
, c⁄° 
GLÊﬂt
 *);

6573 
GLAPI
 
APIENTRY
 
glLi°P¨amëîiSGIX
 (
GLuöt
, 
GLíum
, 
GLöt
);

6574 
GLAPI
 
APIENTRY
 
glLi°P¨amëîivSGIX
 (
GLuöt
, 
GLíum
, c⁄° 
GLöt
 *);

6576 (
APIENTRYP
 
	tPFNGLGETLISTPARAMETERFVSGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6577 (
APIENTRYP
 
	tPFNGLGETLISTPARAMETERIVSGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6578 (
APIENTRYP
 
	tPFNGLLISTPARAMETERFSGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6579 (
APIENTRYP
 
	tPFNGLLISTPARAMETERFVSGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6580 (
APIENTRYP
 
	tPFNGLLISTPARAMETERISGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6581 (
APIENTRYP
 
	tPFNGLLISTPARAMETERIVSGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6584 #i‚de‡
GL_SGIX_ú_ö°rumít1


6585 
	#GL_SGIX_ú_ö°rumít1
 1

	)

6588 #i‚de‡
GL_SGIX_ˇŒigøphic_‰agmít


6589 
	#GL_SGIX_ˇŒigøphic_‰agmít
 1

	)

6592 #i‚de‡
GL_SGIX_ãxtuª_lod_büs


6593 
	#GL_SGIX_ãxtuª_lod_büs
 1

	)

6596 #i‚de‡
GL_SGIX_shadow_ambõ¡


6597 
	#GL_SGIX_shadow_ambõ¡
 1

	)

6600 #i‚de‡
GL_EXT_ödex_ãxtuª


6601 
	#GL_EXT_ödex_ãxtuª
 1

	)

6604 #i‚de‡
GL_EXT_ödex_m©îül


6605 
	#GL_EXT_ödex_m©îül
 1

	)

6606 #ifde‡
GL_GLEXT_PROTOTYPES


6607 
GLAPI
 
APIENTRY
 
glIndexM©îülEXT
 (
GLíum
, GLenum);

6609 (
APIENTRYP
 
	tPFNGLINDEXMATERIALEXTPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tmode
);

6612 #i‚de‡
GL_EXT_ödex_func


6613 
	#GL_EXT_ödex_func
 1

	)

6614 #ifde‡
GL_GLEXT_PROTOTYPES


6615 
GLAPI
 
APIENTRY
 
glIndexFuncEXT
 (
GLíum
, 
GL˛ampf
);

6617 (
APIENTRYP
 
	tPFNGLINDEXFUNCEXTPROC
Ë(
	tGLíum
 
	tfunc
, 
	tGL˛ampf
 
	tªf
);

6620 #i‚de‡
GL_EXT_ödex_¨øy_f‹m©s


6621 
	#GL_EXT_ödex_¨øy_f‹m©s
 1

	)

6624 #i‚de‡
GL_EXT_compûed_vîãx_¨øy


6625 
	#GL_EXT_compûed_vîãx_¨øy
 1

	)

6626 #ifde‡
GL_GLEXT_PROTOTYPES


6627 
GLAPI
 
APIENTRY
 
glLockAºaysEXT
 (
GLöt
, 
GLsizei
);

6628 
GLAPI
 
APIENTRY
 
glU∆ockAºaysEXT
 ();

6630 (
APIENTRYP
 
	tPFNGLLOCKARRAYSEXTPROC
Ë(
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
);

6631 (
APIENTRYP
 
	tPFNGLUNLOCKARRAYSEXTPROC
) ();

6634 #i‚de‡
GL_EXT_cuŒ_vîãx


6635 
	#GL_EXT_cuŒ_vîãx
 1

	)

6636 #ifde‡
GL_GLEXT_PROTOTYPES


6637 
GLAPI
 
APIENTRY
 
glCuŒP¨amëîdvEXT
 (
GLíum
, 
GLdoubÀ
 *);

6638 
GLAPI
 
APIENTRY
 
glCuŒP¨amëîfvEXT
 (
GLíum
, 
GLÊﬂt
 *);

6640 (
APIENTRYP
 
	tPFNGLCULLPARAMETERDVEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLdoubÀ
 *
	t∑øms
);

6641 (
APIENTRYP
 
	tPFNGLCULLPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6644 #i‚de‡
GL_SGIX_y¸cb


6645 
	#GL_SGIX_y¸cb
 1

	)

6648 #i‚de‡
GL_SGIX_‰agmít_lightög


6649 
	#GL_SGIX_‰agmít_lightög
 1

	)

6650 #ifde‡
GL_GLEXT_PROTOTYPES


6651 
GLAPI
 
APIENTRY
 
glFøgmítCﬁ‹M©îülSGIX
 (
GLíum
, GLenum);

6652 
GLAPI
 
APIENTRY
 
glFøgmítLightfSGIX
 (
GLíum
, GLíum, 
GLÊﬂt
);

6653 
GLAPI
 
APIENTRY
 
glFøgmítLightfvSGIX
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

6654 
GLAPI
 
APIENTRY
 
glFøgmítLightiSGIX
 (
GLíum
, GLíum, 
GLöt
);

6655 
GLAPI
 
APIENTRY
 
glFøgmítLightivSGIX
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

6656 
GLAPI
 
APIENTRY
 
glFøgmítLightModñfSGIX
 (
GLíum
, 
GLÊﬂt
);

6657 
GLAPI
 
APIENTRY
 
glFøgmítLightModñfvSGIX
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

6658 
GLAPI
 
APIENTRY
 
glFøgmítLightModñiSGIX
 (
GLíum
, 
GLöt
);

6659 
GLAPI
 
APIENTRY
 
glFøgmítLightModñivSGIX
 (
GLíum
, c⁄° 
GLöt
 *);

6660 
GLAPI
 
APIENTRY
 
glFøgmítM©îülfSGIX
 (
GLíum
, GLíum, 
GLÊﬂt
);

6661 
GLAPI
 
APIENTRY
 
glFøgmítM©îülfvSGIX
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

6662 
GLAPI
 
APIENTRY
 
glFøgmítM©îüliSGIX
 (
GLíum
, GLíum, 
GLöt
);

6663 
GLAPI
 
APIENTRY
 
glFøgmítM©îülivSGIX
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

6664 
GLAPI
 
APIENTRY
 
glGëFøgmítLightfvSGIX
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6665 
GLAPI
 
APIENTRY
 
glGëFøgmítLightivSGIX
 (
GLíum
, GLíum, 
GLöt
 *);

6666 
GLAPI
 
APIENTRY
 
glGëFøgmítM©îülfvSGIX
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6667 
GLAPI
 
APIENTRY
 
glGëFøgmítM©îülivSGIX
 (
GLíum
, GLíum, 
GLöt
 *);

6668 
GLAPI
 
APIENTRY
 
glLightEnviSGIX
 (
GLíum
, 
GLöt
);

6670 (
APIENTRYP
 
	tPFNGLFRAGMENTCOLORMATERIALSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tmode
);

6671 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTFSGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6672 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTFVSGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6673 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTISGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6674 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTIVSGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6675 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTMODELFSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6676 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTMODELFVSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6677 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTMODELISGIXPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6678 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTMODELIVSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6679 (
APIENTRYP
 
	tPFNGLFRAGMENTMATERIALFSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6680 (
APIENTRYP
 
	tPFNGLFRAGMENTMATERIALFVSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6681 (
APIENTRYP
 
	tPFNGLFRAGMENTMATERIALISGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6682 (
APIENTRYP
 
	tPFNGLFRAGMENTMATERIALIVSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6683 (
APIENTRYP
 
	tPFNGLGETFRAGMENTLIGHTFVSGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6684 (
APIENTRYP
 
	tPFNGLGETFRAGMENTLIGHTIVSGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6685 (
APIENTRYP
 
	tPFNGLGETFRAGMENTMATERIALFVSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6686 (
APIENTRYP
 
	tPFNGLGETFRAGMENTMATERIALIVSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6687 (
APIENTRYP
 
	tPFNGLLIGHTENVISGIXPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6690 #i‚de‡
GL_IBM_ø°îpos_˛ù


6691 
	#GL_IBM_ø°îpos_˛ù
 1

	)

6694 #i‚de‡
GL_HP_ãxtuª_lightög


6695 
	#GL_HP_ãxtuª_lightög
 1

	)

6698 #i‚de‡
GL_EXT_døw_ønge_ñemíts


6699 
	#GL_EXT_døw_ønge_ñemíts
 1

	)

6700 #ifde‡
GL_GLEXT_PROTOTYPES


6701 
GLAPI
 
APIENTRY
 
glDøwR™geEÀmítsEXT
 (
GLíum
, 
GLuöt
, GLuöt, 
GLsizei
, GLíum, c⁄° 
GLvoid
 *);

6703 (
APIENTRYP
 
	tPFNGLDRAWRANGEELEMENTSEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
);

6706 #i‚de‡
GL_WIN_ph⁄g_shadög


6707 
	#GL_WIN_ph⁄g_shadög
 1

	)

6710 #i‚de‡
GL_WIN_•ecuœr_fog


6711 
	#GL_WIN_•ecuœr_fog
 1

	)

6714 #i‚de‡
GL_EXT_light_ãxtuª


6715 
	#GL_EXT_light_ãxtuª
 1

	)

6716 #ifde‡
GL_GLEXT_PROTOTYPES


6717 
GLAPI
 
APIENTRY
 
glAµlyTextuªEXT
 (
GLíum
);

6718 
GLAPI
 
APIENTRY
 
glTextuªLightEXT
 (
GLíum
);

6719 
GLAPI
 
APIENTRY
 
glTextuªM©îülEXT
 (
GLíum
, GLenum);

6721 (
APIENTRYP
 
	tPFNGLAPPLYTEXTUREEXTPROC
Ë(
	tGLíum
 
	tmode
);

6722 (
APIENTRYP
 
	tPFNGLTEXTURELIGHTEXTPROC
Ë(
	tGLíum
 
	t≤ame
);

6723 (
APIENTRYP
 
	tPFNGLTEXTUREMATERIALEXTPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tmode
);

6726 #i‚de‡
GL_SGIX_bÀnd_Æpha_mömax


6727 
	#GL_SGIX_bÀnd_Æpha_mömax
 1

	)

6730 #i‚de‡
GL_EXT_bgø


6731 
	#GL_EXT_bgø
 1

	)

6734 #i‚de‡
GL_SGIX_async


6735 
	#GL_SGIX_async
 1

	)

6736 #ifde‡
GL_GLEXT_PROTOTYPES


6737 
GLAPI
 
APIENTRY
 
glAsyncM¨kîSGIX
 (
GLuöt
);

6738 
GLAPI
 
GLöt
 
APIENTRY
 
glFöishAsyncSGIX
 (
GLuöt
 *);

6739 
GLAPI
 
GLöt
 
APIENTRY
 
glPﬁlAsyncSGIX
 (
GLuöt
 *);

6740 
GLAPI
 
GLuöt
 
APIENTRY
 
glGíAsyncM¨kîsSGIX
 (
GLsizei
);

6741 
GLAPI
 
APIENTRY
 
glDñëeAsyncM¨kîsSGIX
 (
GLuöt
, 
GLsizei
);

6742 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsAsyncM¨kîSGIX
 (
GLuöt
);

6744 (
APIENTRYP
 
	tPFNGLASYNCMARKERSGIXPROC
Ë(
	tGLuöt
 
	tm¨kî
);

6745 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLFINISHASYNCSGIXPROC
Ë(
	tGLuöt
 *
	tm¨kîp
);

6746 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLPOLLASYNCSGIXPROC
Ë(
	tGLuöt
 *
	tm¨kîp
);

6747 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLGENASYNCMARKERSSGIXPROC
Ë(
	tGLsizei
 
	tønge
);

6748 (
APIENTRYP
 
	tPFNGLDELETEASYNCMARKERSSGIXPROC
Ë(
	tGLuöt
 
	tm¨kî
, 
	tGLsizei
 
	tønge
);

6749 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISASYNCMARKERSGIXPROC
Ë(
	tGLuöt
 
	tm¨kî
);

6752 #i‚de‡
GL_SGIX_async_pixñ


6753 
	#GL_SGIX_async_pixñ
 1

	)

6756 #i‚de‡
GL_SGIX_async_hi°ogøm


6757 
	#GL_SGIX_async_hi°ogøm
 1

	)

6760 #i‚de‡
GL_INTEL_∑øŒñ_¨øys


6761 
	#GL_INTEL_∑øŒñ_¨øys
 1

	)

6762 #ifde‡
GL_GLEXT_PROTOTYPES


6763 
GLAPI
 
APIENTRY
 
glVîãxPoöãrvINTEL
 (
GLöt
, 
GLíum
, c⁄° 
GLvoid
* *);

6764 
GLAPI
 
APIENTRY
 
glN‹mÆPoöãrvINTEL
 (
GLíum
, c⁄° 
GLvoid
* *);

6765 
GLAPI
 
APIENTRY
 
glCﬁ‹PoöãrvINTEL
 (
GLöt
, 
GLíum
, c⁄° 
GLvoid
* *);

6766 
GLAPI
 
APIENTRY
 
glTexCo‹dPoöãrvINTEL
 (
GLöt
, 
GLíum
, c⁄° 
GLvoid
* *);

6768 (
APIENTRYP
 
	tPFNGLVERTEXPOINTERVINTELPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
* *
	tpoöãr
);

6769 (
APIENTRYP
 
	tPFNGLNORMALPOINTERVINTELPROC
Ë(
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
* *
	tpoöãr
);

6770 (
APIENTRYP
 
	tPFNGLCOLORPOINTERVINTELPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
* *
	tpoöãr
);

6771 (
APIENTRYP
 
	tPFNGLTEXCOORDPOINTERVINTELPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
* *
	tpoöãr
);

6774 #i‚de‡
GL_HP_oc˛usi⁄_ã°


6775 
	#GL_HP_oc˛usi⁄_ã°
 1

	)

6778 #i‚de‡
GL_EXT_pixñ_å™sf‹m


6779 
	#GL_EXT_pixñ_å™sf‹m
 1

	)

6780 #ifde‡
GL_GLEXT_PROTOTYPES


6781 
GLAPI
 
APIENTRY
 
glPixñTønsf‹mP¨amëîiEXT
 (
GLíum
, GLíum, 
GLöt
);

6782 
GLAPI
 
APIENTRY
 
glPixñTønsf‹mP¨amëîfEXT
 (
GLíum
, GLíum, 
GLÊﬂt
);

6783 
GLAPI
 
APIENTRY
 
glPixñTønsf‹mP¨amëîivEXT
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

6784 
GLAPI
 
APIENTRY
 
glPixñTønsf‹mP¨amëîfvEXT
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

6786 (
APIENTRYP
 
	tPFNGLPIXELTRANSFORMPARAMETERIEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6787 (
APIENTRYP
 
	tPFNGLPIXELTRANSFORMPARAMETERFEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6788 (
APIENTRYP
 
	tPFNGLPIXELTRANSFORMPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6789 (
APIENTRYP
 
	tPFNGLPIXELTRANSFORMPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6792 #i‚de‡
GL_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ


6793 
	#GL_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ
 1

	)

6796 #i‚de‡
GL_EXT_sh¨ed_ãxtuª_∑Àâe


6797 
	#GL_EXT_sh¨ed_ãxtuª_∑Àâe
 1

	)

6800 #i‚de‡
GL_EXT_£∑øã_•ecuœr_cﬁ‹


6801 
	#GL_EXT_£∑øã_•ecuœr_cﬁ‹
 1

	)

6804 #i‚de‡
GL_EXT_£c⁄d¨y_cﬁ‹


6805 
	#GL_EXT_£c⁄d¨y_cﬁ‹
 1

	)

6806 #ifde‡
GL_GLEXT_PROTOTYPES


6807 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3bEXT
 (
GLbyã
, GLbyte, GLbyte);

6808 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3bvEXT
 (c⁄° 
GLbyã
 *);

6809 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3dEXT
 (
GLdoubÀ
, GLdouble, GLdouble);

6810 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3dvEXT
 (c⁄° 
GLdoubÀ
 *);

6811 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3fEXT
 (
GLÊﬂt
, GLfloat, GLfloat);

6812 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3fvEXT
 (c⁄° 
GLÊﬂt
 *);

6813 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3iEXT
 (
GLöt
, GLint, GLint);

6814 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3ivEXT
 (c⁄° 
GLöt
 *);

6815 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3sEXT
 (
GLsh‹t
, GLshort, GLshort);

6816 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3svEXT
 (c⁄° 
GLsh‹t
 *);

6817 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3ubEXT
 (
GLubyã
, GLubyte, GLubyte);

6818 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3ubvEXT
 (c⁄° 
GLubyã
 *);

6819 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3uiEXT
 (
GLuöt
, GLuint, GLuint);

6820 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3uivEXT
 (c⁄° 
GLuöt
 *);

6821 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3usEXT
 (
GLush‹t
, GLushort, GLushort);

6822 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3usvEXT
 (c⁄° 
GLush‹t
 *);

6823 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹PoöãrEXT
 (
GLöt
, 
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

6825 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3BEXTPROC
Ë(
	tGLbyã
 
	tªd
, GLbyã 
	tgªí
, GLbyã 
	tblue
);

6826 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3BVEXTPROC
Ë(c⁄° 
	tGLbyã
 *
	tv
);

6827 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3DEXTPROC
Ë(
	tGLdoubÀ
 
	tªd
, GLdoubÀ 
	tgªí
, GLdoubÀ 
	tblue
);

6828 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3DVEXTPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

6829 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3FEXTPROC
Ë(
	tGLÊﬂt
 
	tªd
, GLÊﬂà
	tgªí
, GLÊﬂà
	tblue
);

6830 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3FVEXTPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

6831 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3IEXTPROC
Ë(
	tGLöt
 
	tªd
, GLöà
	tgªí
, GLöà
	tblue
);

6832 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3IVEXTPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

6833 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3SEXTPROC
Ë(
	tGLsh‹t
 
	tªd
, GLsh‹à
	tgªí
, GLsh‹à
	tblue
);

6834 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3SVEXTPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

6835 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UBEXTPROC
Ë(
	tGLubyã
 
	tªd
, GLubyã 
	tgªí
, GLubyã 
	tblue
);

6836 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UBVEXTPROC
Ë(c⁄° 
	tGLubyã
 *
	tv
);

6837 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UIEXTPROC
Ë(
	tGLuöt
 
	tªd
, GLuöà
	tgªí
, GLuöà
	tblue
);

6838 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UIVEXTPROC
Ë(c⁄° 
	tGLuöt
 *
	tv
);

6839 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3USEXTPROC
Ë(
	tGLush‹t
 
	tªd
, GLush‹à
	tgªí
, GLush‹à
	tblue
);

6840 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3USVEXTPROC
Ë(c⁄° 
	tGLush‹t
 *
	tv
);

6841 (
APIENTRYP
 
	tPFNGLSECONDARYCOLORPOINTEREXTPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6844 #i‚de‡
GL_EXT_ãxtuª_≥πurb_n‹mÆ


6845 
	#GL_EXT_ãxtuª_≥πurb_n‹mÆ
 1

	)

6846 #ifde‡
GL_GLEXT_PROTOTYPES


6847 
GLAPI
 
APIENTRY
 
glTextuªN‹mÆEXT
 (
GLíum
);

6849 (
APIENTRYP
 
	tPFNGLTEXTURENORMALEXTPROC
Ë(
	tGLíum
 
	tmode
);

6852 #i‚de‡
GL_EXT_mu…i_døw_¨øys


6853 
	#GL_EXT_mu…i_døw_¨øys
 1

	)

6854 #ifde‡
GL_GLEXT_PROTOTYPES


6855 
GLAPI
 
APIENTRY
 
glMu…iDøwAºaysEXT
 (
GLíum
, 
GLöt
 *, 
GLsizei
 *, GLsizei);

6856 
GLAPI
 
APIENTRY
 
glMu…iDøwEÀmítsEXT
 (
GLíum
, c⁄° 
GLsizei
 *, GLíum, c⁄° 
GLvoid
* *, GLsizei);

6858 (
APIENTRYP
 
	tPFNGLMULTIDRAWARRAYSEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 *
	tfú°
, 
	tGLsizei
 *
	tcou¡
, GLsizeò
	t¥imcou¡
);

6859 (
APIENTRYP
 
	tPFNGLMULTIDRAWELEMENTSEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLsizei
 *
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
* *
	tödi˚s
, GLsizeò
	t¥imcou¡
);

6862 #i‚de‡
GL_EXT_fog_co‹d


6863 
	#GL_EXT_fog_co‹d
 1

	)

6864 #ifde‡
GL_GLEXT_PROTOTYPES


6865 
GLAPI
 
APIENTRY
 
glFogCo‹dfEXT
 (
GLÊﬂt
);

6866 
GLAPI
 
APIENTRY
 
glFogCo‹dfvEXT
 (c⁄° 
GLÊﬂt
 *);

6867 
GLAPI
 
APIENTRY
 
glFogCo‹ddEXT
 (
GLdoubÀ
);

6868 
GLAPI
 
APIENTRY
 
glFogCo‹ddvEXT
 (c⁄° 
GLdoubÀ
 *);

6869 
GLAPI
 
APIENTRY
 
glFogCo‹dPoöãrEXT
 (
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

6871 (
APIENTRYP
 
	tPFNGLFOGCOORDFEXTPROC
Ë(
	tGLÊﬂt
 
	tco‹d
);

6872 (
APIENTRYP
 
	tPFNGLFOGCOORDFVEXTPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tco‹d
);

6873 (
APIENTRYP
 
	tPFNGLFOGCOORDDEXTPROC
Ë(
	tGLdoubÀ
 
	tco‹d
);

6874 (
APIENTRYP
 
	tPFNGLFOGCOORDDVEXTPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tco‹d
);

6875 (
APIENTRYP
 
	tPFNGLFOGCOORDPOINTEREXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6878 #i‚de‡
GL_REND_s¸ìn_co‹dö©es


6879 
	#GL_REND_s¸ìn_co‹dö©es
 1

	)

6882 #i‚de‡
GL_EXT_co‹dö©e_‰ame


6883 
	#GL_EXT_co‹dö©e_‰ame
 1

	)

6884 #ifde‡
GL_GLEXT_PROTOTYPES


6885 
GLAPI
 
APIENTRY
 
glT™gít3bEXT
 (
GLbyã
, GLbyte, GLbyte);

6886 
GLAPI
 
APIENTRY
 
glT™gít3bvEXT
 (c⁄° 
GLbyã
 *);

6887 
GLAPI
 
APIENTRY
 
glT™gít3dEXT
 (
GLdoubÀ
, GLdouble, GLdouble);

6888 
GLAPI
 
APIENTRY
 
glT™gít3dvEXT
 (c⁄° 
GLdoubÀ
 *);

6889 
GLAPI
 
APIENTRY
 
glT™gít3fEXT
 (
GLÊﬂt
, GLfloat, GLfloat);

6890 
GLAPI
 
APIENTRY
 
glT™gít3fvEXT
 (c⁄° 
GLÊﬂt
 *);

6891 
GLAPI
 
APIENTRY
 
glT™gít3iEXT
 (
GLöt
, GLint, GLint);

6892 
GLAPI
 
APIENTRY
 
glT™gít3ivEXT
 (c⁄° 
GLöt
 *);

6893 
GLAPI
 
APIENTRY
 
glT™gít3sEXT
 (
GLsh‹t
, GLshort, GLshort);

6894 
GLAPI
 
APIENTRY
 
glT™gít3svEXT
 (c⁄° 
GLsh‹t
 *);

6895 
GLAPI
 
APIENTRY
 
glBö‹mÆ3bEXT
 (
GLbyã
, GLbyte, GLbyte);

6896 
GLAPI
 
APIENTRY
 
glBö‹mÆ3bvEXT
 (c⁄° 
GLbyã
 *);

6897 
GLAPI
 
APIENTRY
 
glBö‹mÆ3dEXT
 (
GLdoubÀ
, GLdouble, GLdouble);

6898 
GLAPI
 
APIENTRY
 
glBö‹mÆ3dvEXT
 (c⁄° 
GLdoubÀ
 *);

6899 
GLAPI
 
APIENTRY
 
glBö‹mÆ3fEXT
 (
GLÊﬂt
, GLfloat, GLfloat);

6900 
GLAPI
 
APIENTRY
 
glBö‹mÆ3fvEXT
 (c⁄° 
GLÊﬂt
 *);

6901 
GLAPI
 
APIENTRY
 
glBö‹mÆ3iEXT
 (
GLöt
, GLint, GLint);

6902 
GLAPI
 
APIENTRY
 
glBö‹mÆ3ivEXT
 (c⁄° 
GLöt
 *);

6903 
GLAPI
 
APIENTRY
 
glBö‹mÆ3sEXT
 (
GLsh‹t
, GLshort, GLshort);

6904 
GLAPI
 
APIENTRY
 
glBö‹mÆ3svEXT
 (c⁄° 
GLsh‹t
 *);

6905 
GLAPI
 
APIENTRY
 
glT™gítPoöãrEXT
 (
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

6906 
GLAPI
 
APIENTRY
 
glBö‹mÆPoöãrEXT
 (
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

6908 (
APIENTRYP
 
	tPFNGLTANGENT3BEXTPROC
Ë(
	tGLbyã
 
	ttx
, GLbyã 
	tty
, GLbyã 
	ttz
);

6909 (
APIENTRYP
 
	tPFNGLTANGENT3BVEXTPROC
Ë(c⁄° 
	tGLbyã
 *
	tv
);

6910 (
APIENTRYP
 
	tPFNGLTANGENT3DEXTPROC
Ë(
	tGLdoubÀ
 
	ttx
, GLdoubÀ 
	tty
, GLdoubÀ 
	ttz
);

6911 (
APIENTRYP
 
	tPFNGLTANGENT3DVEXTPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

6912 (
APIENTRYP
 
	tPFNGLTANGENT3FEXTPROC
Ë(
	tGLÊﬂt
 
	ttx
, GLÊﬂà
	tty
, GLÊﬂà
	ttz
);

6913 (
APIENTRYP
 
	tPFNGLTANGENT3FVEXTPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

6914 (
APIENTRYP
 
	tPFNGLTANGENT3IEXTPROC
Ë(
	tGLöt
 
	ttx
, GLöà
	tty
, GLöà
	ttz
);

6915 (
APIENTRYP
 
	tPFNGLTANGENT3IVEXTPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

6916 (
APIENTRYP
 
	tPFNGLTANGENT3SEXTPROC
Ë(
	tGLsh‹t
 
	ttx
, GLsh‹à
	tty
, GLsh‹à
	ttz
);

6917 (
APIENTRYP
 
	tPFNGLTANGENT3SVEXTPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

6918 (
APIENTRYP
 
	tPFNGLBINORMAL3BEXTPROC
Ë(
	tGLbyã
 
	tbx
, GLbyã 
	tby
, GLbyã 
	tbz
);

6919 (
APIENTRYP
 
	tPFNGLBINORMAL3BVEXTPROC
Ë(c⁄° 
	tGLbyã
 *
	tv
);

6920 (
APIENTRYP
 
	tPFNGLBINORMAL3DEXTPROC
Ë(
	tGLdoubÀ
 
	tbx
, GLdoubÀ 
	tby
, GLdoubÀ 
	tbz
);

6921 (
APIENTRYP
 
	tPFNGLBINORMAL3DVEXTPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

6922 (
APIENTRYP
 
	tPFNGLBINORMAL3FEXTPROC
Ë(
	tGLÊﬂt
 
	tbx
, GLÊﬂà
	tby
, GLÊﬂà
	tbz
);

6923 (
APIENTRYP
 
	tPFNGLBINORMAL3FVEXTPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

6924 (
APIENTRYP
 
	tPFNGLBINORMAL3IEXTPROC
Ë(
	tGLöt
 
	tbx
, GLöà
	tby
, GLöà
	tbz
);

6925 (
APIENTRYP
 
	tPFNGLBINORMAL3IVEXTPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

6926 (
APIENTRYP
 
	tPFNGLBINORMAL3SEXTPROC
Ë(
	tGLsh‹t
 
	tbx
, GLsh‹à
	tby
, GLsh‹à
	tbz
);

6927 (
APIENTRYP
 
	tPFNGLBINORMAL3SVEXTPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

6928 (
APIENTRYP
 
	tPFNGLTANGENTPOINTEREXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6929 (
APIENTRYP
 
	tPFNGLBINORMALPOINTEREXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6932 #i‚de‡
GL_EXT_ãxtuª_ív_comböe


6933 
	#GL_EXT_ãxtuª_ív_comböe
 1

	)

6936 #i‚de‡
GL_APPLE_•ecuœr_ve˘‹


6937 
	#GL_APPLE_•ecuœr_ve˘‹
 1

	)

6940 #i‚de‡
GL_APPLE_å™sf‹m_höt


6941 
	#GL_APPLE_å™sf‹m_höt
 1

	)

6944 #i‚de‡
GL_SGIX_fog_sˇÀ


6945 
	#GL_SGIX_fog_sˇÀ
 1

	)

6948 #i‚de‡
GL_SUNX_c⁄°™t_d©a


6949 
	#GL_SUNX_c⁄°™t_d©a
 1

	)

6950 #ifde‡
GL_GLEXT_PROTOTYPES


6951 
GLAPI
 
APIENTRY
 
glFöishTextuªSUNX
 ();

6953 (
APIENTRYP
 
	tPFNGLFINISHTEXTURESUNXPROC
) ();

6956 #i‚de‡
GL_SUN_globÆ_Æpha


6957 
	#GL_SUN_globÆ_Æpha
 1

	)

6958 #ifde‡
GL_GLEXT_PROTOTYPES


6959 
GLAPI
 
APIENTRY
 
glGlobÆAÕhaFa˘‹bSUN
 (
GLbyã
);

6960 
GLAPI
 
APIENTRY
 
glGlobÆAÕhaFa˘‹sSUN
 (
GLsh‹t
);

6961 
GLAPI
 
APIENTRY
 
glGlobÆAÕhaFa˘‹iSUN
 (
GLöt
);

6962 
GLAPI
 
APIENTRY
 
glGlobÆAÕhaFa˘‹fSUN
 (
GLÊﬂt
);

6963 
GLAPI
 
APIENTRY
 
glGlobÆAÕhaFa˘‹dSUN
 (
GLdoubÀ
);

6964 
GLAPI
 
APIENTRY
 
glGlobÆAÕhaFa˘‹ubSUN
 (
GLubyã
);

6965 
GLAPI
 
APIENTRY
 
glGlobÆAÕhaFa˘‹usSUN
 (
GLush‹t
);

6966 
GLAPI
 
APIENTRY
 
glGlobÆAÕhaFa˘‹uiSUN
 (
GLuöt
);

6968 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORBSUNPROC
Ë(
	tGLbyã
 
	tÁ˘‹
);

6969 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORSSUNPROC
Ë(
	tGLsh‹t
 
	tÁ˘‹
);

6970 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORISUNPROC
Ë(
	tGLöt
 
	tÁ˘‹
);

6971 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORFSUNPROC
Ë(
	tGLÊﬂt
 
	tÁ˘‹
);

6972 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORDSUNPROC
Ë(
	tGLdoubÀ
 
	tÁ˘‹
);

6973 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORUBSUNPROC
Ë(
	tGLubyã
 
	tÁ˘‹
);

6974 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORUSSUNPROC
Ë(
	tGLush‹t
 
	tÁ˘‹
);

6975 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORUISUNPROC
Ë(
	tGLuöt
 
	tÁ˘‹
);

6978 #i‚de‡
GL_SUN_åüngÀ_li°


6979 
	#GL_SUN_åüngÀ_li°
 1

	)

6980 #ifde‡
GL_GLEXT_PROTOTYPES


6981 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiSUN
 (
GLuöt
);

6982 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeusSUN
 (
GLush‹t
);

6983 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeubSUN
 (
GLubyã
);

6984 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuivSUN
 (c⁄° 
GLuöt
 *);

6985 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeusvSUN
 (c⁄° 
GLush‹t
 *);

6986 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeubvSUN
 (c⁄° 
GLubyã
 *);

6987 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodePoöãrSUN
 (
GLíum
, 
GLsizei
, c⁄° 
GLvoid
* *);

6989 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUISUNPROC
Ë(
	tGLuöt
 
	tcode
);

6990 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUSSUNPROC
Ë(
	tGLush‹t
 
	tcode
);

6991 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUBSUNPROC
Ë(
	tGLubyã
 
	tcode
);

6992 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUIVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	tcode
);

6993 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUSVSUNPROC
Ë(c⁄° 
	tGLush‹t
 *
	tcode
);

6994 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUBVSUNPROC
Ë(c⁄° 
	tGLubyã
 *
	tcode
);

6995 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEPOINTERSUNPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
* *
	tpoöãr
);

6998 #i‚de‡
GL_SUN_vîãx


6999 
	#GL_SUN_vîãx
 1

	)

7000 #ifde‡
GL_GLEXT_PROTOTYPES


7001 
GLAPI
 
APIENTRY
 
glCﬁ‹4ubVîãx2fSUN
 (
GLubyã
, GLubyã, GLubyã, GLubyã, 
GLÊﬂt
, GLfloat);

7002 
GLAPI
 
APIENTRY
 
glCﬁ‹4ubVîãx2fvSUN
 (c⁄° 
GLubyã
 *, c⁄° 
GLÊﬂt
 *);

7003 
GLAPI
 
APIENTRY
 
glCﬁ‹4ubVîãx3fSUN
 (
GLubyã
, GLubyã, GLubyã, GLubyã, 
GLÊﬂt
, GLfloat, GLfloat);

7004 
GLAPI
 
APIENTRY
 
glCﬁ‹4ubVîãx3fvSUN
 (c⁄° 
GLubyã
 *, c⁄° 
GLÊﬂt
 *);

7005 
GLAPI
 
APIENTRY
 
glCﬁ‹3fVîãx3fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7006 
GLAPI
 
APIENTRY
 
glCﬁ‹3fVîãx3fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *);

7007 
GLAPI
 
APIENTRY
 
glN‹mÆ3fVîãx3fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7008 
GLAPI
 
APIENTRY
 
glN‹mÆ3fVîãx3fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *);

7009 
GLAPI
 
APIENTRY
 
glCﬁ‹4fN‹mÆ3fVîãx3fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7010 
GLAPI
 
APIENTRY
 
glCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *, const GLfloat *);

7011 
GLAPI
 
APIENTRY
 
glTexCo‹d2fVîãx3fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat);

7012 
GLAPI
 
APIENTRY
 
glTexCo‹d2fVîãx3fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *);

7013 
GLAPI
 
APIENTRY
 
glTexCo‹d4fVîãx4fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7014 
GLAPI
 
APIENTRY
 
glTexCo‹d4fVîãx4fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *);

7015 
GLAPI
 
APIENTRY
 
glTexCo‹d2fCﬁ‹4ubVîãx3fSUN
 (
GLÊﬂt
, GLÊﬂt, 
GLubyã
, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat);

7016 
GLAPI
 
APIENTRY
 
glTexCo‹d2fCﬁ‹4ubVîãx3fvSUN
 (c⁄° 
GLÊﬂt
 *, c⁄° 
GLubyã
 *, const GLfloat *);

7017 
GLAPI
 
APIENTRY
 
glTexCo‹d2fCﬁ‹3fVîãx3fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7018 
GLAPI
 
APIENTRY
 
glTexCo‹d2fCﬁ‹3fVîãx3fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *, const GLfloat *);

7019 
GLAPI
 
APIENTRY
 
glTexCo‹d2fN‹mÆ3fVîãx3fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7020 
GLAPI
 
APIENTRY
 
glTexCo‹d2fN‹mÆ3fVîãx3fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *, const GLfloat *);

7021 
GLAPI
 
APIENTRY
 
glTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7022 
GLAPI
 
APIENTRY
 
glTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *, const GLfloat *, const GLfloat *);

7023 
GLAPI
 
APIENTRY
 
glTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7024 
GLAPI
 
APIENTRY
 
glTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *, const GLfloat *, const GLfloat *);

7025 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiVîãx3fSUN
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat);

7026 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiVîãx3fvSUN
 (c⁄° 
GLuöt
 *, c⁄° 
GLÊﬂt
 *);

7027 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiCﬁ‹4ubVîãx3fSUN
 (
GLuöt
, 
GLubyã
, GLubyã, GLubyã, GLubyã, 
GLÊﬂt
, GLfloat, GLfloat);

7028 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiCﬁ‹4ubVîãx3fvSUN
 (c⁄° 
GLuöt
 *, c⁄° 
GLubyã
 *, c⁄° 
GLÊﬂt
 *);

7029 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiCﬁ‹3fVîãx3fSUN
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7030 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiCﬁ‹3fVîãx3fvSUN
 (c⁄° 
GLuöt
 *, c⁄° 
GLÊﬂt
 *, const GLfloat *);

7031 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiN‹mÆ3fVîãx3fSUN
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7032 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiN‹mÆ3fVîãx3fvSUN
 (c⁄° 
GLuöt
 *, c⁄° 
GLÊﬂt
 *, const GLfloat *);

7033 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fSUN
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7034 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 (c⁄° 
GLuöt
 *, c⁄° 
GLÊﬂt
 *, const GLfloat *, const GLfloat *);

7035 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiTexCo‹d2fVîãx3fSUN
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat);

7036 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiTexCo‹d2fVîãx3fvSUN
 (c⁄° 
GLuöt
 *, c⁄° 
GLÊﬂt
 *, const GLfloat *);

7037 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fSUN
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7038 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fvSUN
 (c⁄° 
GLuöt
 *, c⁄° 
GLÊﬂt
 *, const GLfloat *, const GLfloat *);

7039 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7040 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 (c⁄° 
GLuöt
 *, c⁄° 
GLÊﬂt
 *, const GLfloat *, const GLfloat *, const GLfloat *);

7042 (
APIENTRYP
 
	tPFNGLCOLOR4UBVERTEX2FSUNPROC
Ë(
	tGLubyã
 
	tr
, GLubyã 
	tg
, GLubyã 
	tb
, GLubyã 
	ta
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

7043 (
APIENTRYP
 
	tPFNGLCOLOR4UBVERTEX2FVSUNPROC
Ë(c⁄° 
	tGLubyã
 *
	tc
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7044 (
APIENTRYP
 
	tPFNGLCOLOR4UBVERTEX3FSUNPROC
Ë(
	tGLubyã
 
	tr
, GLubyã 
	tg
, GLubyã 
	tb
, GLubyã 
	ta
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7045 (
APIENTRYP
 
	tPFNGLCOLOR4UBVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLubyã
 *
	tc
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7046 (
APIENTRYP
 
	tPFNGLCOLOR3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7047 (
APIENTRYP
 
	tPFNGLCOLOR3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tc
, c⁄° GLÊﬂà*
	tv
);

7048 (
APIENTRYP
 
	tPFNGLNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7049 (
APIENTRYP
 
	tPFNGLNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tn
, c⁄° GLÊﬂà*
	tv
);

7050 (
APIENTRYP
 
	tPFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	ta
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7051 (
APIENTRYP
 
	tPFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tc
, c⁄° GLÊﬂà*
	tn
, c⁄° GLÊﬂà*
	tv
);

7052 (
APIENTRYP
 
	tPFNGLTEXCOORD2FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7053 (
APIENTRYP
 
	tPFNGLTEXCOORD2FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tv
);

7054 (
APIENTRYP
 
	tPFNGLTEXCOORD4FVERTEX4FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tp
, GLÊﬂà
	tq
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

7055 (
APIENTRYP
 
	tPFNGLTEXCOORD4FVERTEX4FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tv
);

7056 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, 
	tGLubyã
 
	tr
, GLubyã 
	tg
, GLubyã 
	tb
, GLubyã 
	ta
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7057 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° 
	tGLubyã
 *
	tc
, c⁄° GLÊﬂà*
	tv
);

7058 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7059 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tc
, c⁄° GLÊﬂà*
	tv
);

7060 (
APIENTRYP
 
	tPFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7061 (
APIENTRYP
 
	tPFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tn
, c⁄° GLÊﬂà*
	tv
);

7062 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	ta
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7063 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tc
, c⁄° GLÊﬂà*
	tn
, c⁄° GLÊﬂà*
	tv
);

7064 (
APIENTRYP
 
	tPFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tp
, GLÊﬂà
	tq
, GLÊﬂà
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	ta
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

7065 (
APIENTRYP
 
	tPFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tc
, c⁄° GLÊﬂà*
	tn
, c⁄° GLÊﬂà*
	tv
);

7066 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7067 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	trc
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7068 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLubyã
 
	tr
, GLubyã 
	tg
, GLubyã 
	tb
, GLubyã 
	ta
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7069 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	trc
, c⁄° 
	tGLubyã
 *
	tc
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7070 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7071 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	trc
, c⁄° 
	tGLÊﬂt
 *
	tc
, c⁄° GLÊﬂà*
	tv
);

7072 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7073 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	trc
, c⁄° 
	tGLÊﬂt
 *
	tn
, c⁄° GLÊﬂà*
	tv
);

7074 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	ta
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7075 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	trc
, c⁄° 
	tGLÊﬂt
 *
	tc
, c⁄° GLÊﬂà*
	tn
, c⁄° GLÊﬂà*
	tv
);

7076 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7077 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	trc
, c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tv
);

7078 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7079 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	trc
, c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tn
, c⁄° GLÊﬂà*
	tv
);

7080 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	ta
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7081 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	trc
, c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tc
, c⁄° GLÊﬂà*
	tn
, c⁄° GLÊﬂà*
	tv
);

7084 #i‚de‡
GL_EXT_bÀnd_func_£∑øã


7085 
	#GL_EXT_bÀnd_func_£∑øã
 1

	)

7086 #ifde‡
GL_GLEXT_PROTOTYPES


7087 
GLAPI
 
APIENTRY
 
glBÀndFuncSï¨©eEXT
 (
GLíum
, GLenum, GLenum, GLenum);

7089 (
APIENTRYP
 
	tPFNGLBLENDFUNCSEPARATEEXTPROC
Ë(
	tGLíum
 
	tsÁ˘‹RGB
, GLíum 
	tdÁ˘‹RGB
, GLíum 
	tsÁ˘‹AÕha
, GLíum 
	tdÁ˘‹AÕha
);

7092 #i‚de‡
GL_INGR_bÀnd_func_£∑øã


7093 
	#GL_INGR_bÀnd_func_£∑øã
 1

	)

7094 #ifde‡
GL_GLEXT_PROTOTYPES


7095 
GLAPI
 
APIENTRY
 
glBÀndFuncSï¨©eINGR
 (
GLíum
, GLenum, GLenum, GLenum);

7097 (
APIENTRYP
 
	tPFNGLBLENDFUNCSEPARATEINGRPROC
Ë(
	tGLíum
 
	tsÁ˘‹RGB
, GLíum 
	tdÁ˘‹RGB
, GLíum 
	tsÁ˘‹AÕha
, GLíum 
	tdÁ˘‹AÕha
);

7100 #i‚de‡
GL_INGR_cﬁ‹_˛amp


7101 
	#GL_INGR_cﬁ‹_˛amp
 1

	)

7104 #i‚de‡
GL_INGR_öãæa˚_ªad


7105 
	#GL_INGR_öãæa˚_ªad
 1

	)

7108 #i‚de‡
GL_EXT_°ícû_wøp


7109 
	#GL_EXT_°ícû_wøp
 1

	)

7112 #i‚de‡
GL_EXT_422_pixñs


7113 
	#GL_EXT_422_pixñs
 1

	)

7116 #i‚de‡
GL_NV_ãxgí_ªÊe˘i⁄


7117 
	#GL_NV_ãxgí_ªÊe˘i⁄
 1

	)

7120 #i‚de‡
GL_SUN_c⁄vﬁuti⁄_b‹dî_modes


7121 
	#GL_SUN_c⁄vﬁuti⁄_b‹dî_modes
 1

	)

7124 #i‚de‡
GL_EXT_ãxtuª_ív_add


7125 
	#GL_EXT_ãxtuª_ív_add
 1

	)

7128 #i‚de‡
GL_EXT_ãxtuª_lod_büs


7129 
	#GL_EXT_ãxtuª_lod_büs
 1

	)

7132 #i‚de‡
GL_EXT_ãxtuª_fûãr_™isŸr›ic


7133 
	#GL_EXT_ãxtuª_fûãr_™isŸr›ic
 1

	)

7136 #i‚de‡
GL_EXT_vîãx_weightög


7137 
	#GL_EXT_vîãx_weightög
 1

	)

7138 #ifde‡
GL_GLEXT_PROTOTYPES


7139 
GLAPI
 
APIENTRY
 
glVîãxWeightfEXT
 (
GLÊﬂt
);

7140 
GLAPI
 
APIENTRY
 
glVîãxWeightfvEXT
 (c⁄° 
GLÊﬂt
 *);

7141 
GLAPI
 
APIENTRY
 
glVîãxWeightPoöãrEXT
 (
GLsizei
, 
GLíum
, GLsizei, c⁄° 
GLvoid
 *);

7143 (
APIENTRYP
 
	tPFNGLVERTEXWEIGHTFEXTPROC
Ë(
	tGLÊﬂt
 
	tweight
);

7144 (
APIENTRYP
 
	tPFNGLVERTEXWEIGHTFVEXTPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tweight
);

7145 (
APIENTRYP
 
	tPFNGLVERTEXWEIGHTPOINTEREXTPROC
Ë(
	tGLsizei
 
	tsize
, 
	tGLíum
 
	tty≥
, GLsizeò
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

7148 #i‚de‡
GL_NV_light_max_exp⁄ít


7149 
	#GL_NV_light_max_exp⁄ít
 1

	)

7152 #i‚de‡
GL_NV_vîãx_¨øy_ønge


7153 
	#GL_NV_vîãx_¨øy_ønge
 1

	)

7154 #ifde‡
GL_GLEXT_PROTOTYPES


7155 
GLAPI
 
APIENTRY
 
glFlushVîãxAºayR™geNV
 ();

7156 
GLAPI
 
APIENTRY
 
glVîãxAºayR™geNV
 (
GLsizei
, c⁄° 
GLvoid
 *);

7158 (
APIENTRYP
 
	tPFNGLFLUSHVERTEXARRAYRANGENVPROC
) ();

7159 (
APIENTRYP
 
	tPFNGLVERTEXARRAYRANGENVPROC
Ë(
	tGLsizei
 
	tÀngth
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

7162 #i‚de‡
GL_NV_ªgi°î_comböîs


7163 
	#GL_NV_ªgi°î_comböîs
 1

	)

7164 #ifde‡
GL_GLEXT_PROTOTYPES


7165 
GLAPI
 
APIENTRY
 
glComböîP¨amëîfvNV
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

7166 
GLAPI
 
APIENTRY
 
glComböîP¨amëîfNV
 (
GLíum
, 
GLÊﬂt
);

7167 
GLAPI
 
APIENTRY
 
glComböîP¨amëîivNV
 (
GLíum
, c⁄° 
GLöt
 *);

7168 
GLAPI
 
APIENTRY
 
glComböîP¨amëîiNV
 (
GLíum
, 
GLöt
);

7169 
GLAPI
 
APIENTRY
 
glComböîI≈utNV
 (
GLíum
, GLenum, GLenum, GLenum, GLenum, GLenum);

7170 
GLAPI
 
APIENTRY
 
glComböîOuçutNV
 (
GLíum
, GLíum, GLíum, GLíum, GLíum, GLíum, GLíum, 
GLboﬁón
, GLboolean, GLboolean);

7171 
GLAPI
 
APIENTRY
 
glFöÆComböîI≈utNV
 (
GLíum
, GLenum, GLenum, GLenum);

7172 
GLAPI
 
APIENTRY
 
glGëComböîI≈utP¨amëîfvNV
 (
GLíum
, GLíum, GLíum, GLíum, 
GLÊﬂt
 *);

7173 
GLAPI
 
APIENTRY
 
glGëComböîI≈utP¨amëîivNV
 (
GLíum
, GLíum, GLíum, GLíum, 
GLöt
 *);

7174 
GLAPI
 
APIENTRY
 
glGëComböîOuçutP¨amëîfvNV
 (
GLíum
, GLíum, GLíum, 
GLÊﬂt
 *);

7175 
GLAPI
 
APIENTRY
 
glGëComböîOuçutP¨amëîivNV
 (
GLíum
, GLíum, GLíum, 
GLöt
 *);

7176 
GLAPI
 
APIENTRY
 
glGëFöÆComböîI≈utP¨amëîfvNV
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

7177 
GLAPI
 
APIENTRY
 
glGëFöÆComböîI≈utP¨amëîivNV
 (
GLíum
, GLíum, 
GLöt
 *);

7179 (
APIENTRYP
 
	tPFNGLCOMBINERPARAMETERFVNVPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

7180 (
APIENTRYP
 
	tPFNGLCOMBINERPARAMETERFNVPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

7181 (
APIENTRYP
 
	tPFNGLCOMBINERPARAMETERIVNVPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

7182 (
APIENTRYP
 
	tPFNGLCOMBINERPARAMETERINVPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

7183 (
APIENTRYP
 
	tPFNGLCOMBINERINPUTNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	tv¨übÀ
, GLíum 
	töput
, GLíum 
	tm≠pög
, GLíum 
	tcomp⁄ítUßge
);

7184 (
APIENTRYP
 
	tPFNGLCOMBINEROUTPUTNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	tabOuçut
, GLíum 
	tcdOuçut
, GLíum 
	tsumOuçut
, GLíum 
	tsˇÀ
, GLíum 
	tbüs
, 
	tGLboﬁón
 
	tabDŸProdu˘
, GLboﬁó¿
	tcdDŸProdu˘
, GLboﬁó¿
	tmuxSum
);

7185 (
APIENTRYP
 
	tPFNGLFINALCOMBINERINPUTNVPROC
Ë(
	tGLíum
 
	tv¨übÀ
, GLíum 
	töput
, GLíum 
	tm≠pög
, GLíum 
	tcomp⁄ítUßge
);

7186 (
APIENTRYP
 
	tPFNGLGETCOMBINERINPUTPARAMETERFVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	tv¨übÀ
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7187 (
APIENTRYP
 
	tPFNGLGETCOMBINERINPUTPARAMETERIVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	tv¨übÀ
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7188 (
APIENTRYP
 
	tPFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7189 (
APIENTRYP
 
	tPFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7190 (
APIENTRYP
 
	tPFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC
Ë(
	tGLíum
 
	tv¨übÀ
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7191 (
APIENTRYP
 
	tPFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC
Ë(
	tGLíum
 
	tv¨übÀ
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7194 #i‚de‡
GL_NV_fog_di°™˚


7195 
	#GL_NV_fog_di°™˚
 1

	)

7198 #i‚de‡
GL_NV_ãxgí_emboss


7199 
	#GL_NV_ãxgí_emboss
 1

	)

7202 #i‚de‡
GL_NV_bÀnd_squ¨e


7203 
	#GL_NV_bÀnd_squ¨e
 1

	)

7206 #i‚de‡
GL_NV_ãxtuª_ív_comböe4


7207 
	#GL_NV_ãxtuª_ív_comböe4
 1

	)

7210 #i‚de‡
GL_MESA_ªsize_buf„rs


7211 
	#GL_MESA_ªsize_buf„rs
 1

	)

7212 #ifde‡
GL_GLEXT_PROTOTYPES


7213 
GLAPI
 
APIENTRY
 
glResizeBuf„rsMESA
 ();

7215 (
APIENTRYP
 
	tPFNGLRESIZEBUFFERSMESAPROC
) ();

7218 #i‚de‡
GL_MESA_wödow_pos


7219 
	#GL_MESA_wödow_pos
 1

	)

7220 #ifde‡
GL_GLEXT_PROTOTYPES


7221 
GLAPI
 
APIENTRY
 
glWödowPos2dMESA
 (
GLdoubÀ
, GLdouble);

7222 
GLAPI
 
APIENTRY
 
glWödowPos2dvMESA
 (c⁄° 
GLdoubÀ
 *);

7223 
GLAPI
 
APIENTRY
 
glWödowPos2fMESA
 (
GLÊﬂt
, GLfloat);

7224 
GLAPI
 
APIENTRY
 
glWödowPos2fvMESA
 (c⁄° 
GLÊﬂt
 *);

7225 
GLAPI
 
APIENTRY
 
glWödowPos2iMESA
 (
GLöt
, GLint);

7226 
GLAPI
 
APIENTRY
 
glWödowPos2ivMESA
 (c⁄° 
GLöt
 *);

7227 
GLAPI
 
APIENTRY
 
glWödowPos2sMESA
 (
GLsh‹t
, GLshort);

7228 
GLAPI
 
APIENTRY
 
glWödowPos2svMESA
 (c⁄° 
GLsh‹t
 *);

7229 
GLAPI
 
APIENTRY
 
glWödowPos3dMESA
 (
GLdoubÀ
, GLdouble, GLdouble);

7230 
GLAPI
 
APIENTRY
 
glWödowPos3dvMESA
 (c⁄° 
GLdoubÀ
 *);

7231 
GLAPI
 
APIENTRY
 
glWödowPos3fMESA
 (
GLÊﬂt
, GLfloat, GLfloat);

7232 
GLAPI
 
APIENTRY
 
glWödowPos3fvMESA
 (c⁄° 
GLÊﬂt
 *);

7233 
GLAPI
 
APIENTRY
 
glWödowPos3iMESA
 (
GLöt
, GLint, GLint);

7234 
GLAPI
 
APIENTRY
 
glWödowPos3ivMESA
 (c⁄° 
GLöt
 *);

7235 
GLAPI
 
APIENTRY
 
glWödowPos3sMESA
 (
GLsh‹t
, GLshort, GLshort);

7236 
GLAPI
 
APIENTRY
 
glWödowPos3svMESA
 (c⁄° 
GLsh‹t
 *);

7237 
GLAPI
 
APIENTRY
 
glWödowPos4dMESA
 (
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

7238 
GLAPI
 
APIENTRY
 
glWödowPos4dvMESA
 (c⁄° 
GLdoubÀ
 *);

7239 
GLAPI
 
APIENTRY
 
glWödowPos4fMESA
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

7240 
GLAPI
 
APIENTRY
 
glWödowPos4fvMESA
 (c⁄° 
GLÊﬂt
 *);

7241 
GLAPI
 
APIENTRY
 
glWödowPos4iMESA
 (
GLöt
, GLint, GLint, GLint);

7242 
GLAPI
 
APIENTRY
 
glWödowPos4ivMESA
 (c⁄° 
GLöt
 *);

7243 
GLAPI
 
APIENTRY
 
glWödowPos4sMESA
 (
GLsh‹t
, GLshort, GLshort, GLshort);

7244 
GLAPI
 
APIENTRY
 
glWödowPos4svMESA
 (c⁄° 
GLsh‹t
 *);

7246 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DMESAPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

7247 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DVMESAPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

7248 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FMESAPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

7249 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FVMESAPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

7250 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IMESAPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
);

7251 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IVMESAPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

7252 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SMESAPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

7253 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SVMESAPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

7254 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DMESAPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

7255 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DVMESAPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

7256 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FMESAPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7257 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FVMESAPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

7258 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IMESAPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

7259 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IVMESAPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

7260 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SMESAPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

7261 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SVMESAPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

7262 (
APIENTRYP
 
	tPFNGLWINDOWPOS4DMESAPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

7263 (
APIENTRYP
 
	tPFNGLWINDOWPOS4DVMESAPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

7264 (
APIENTRYP
 
	tPFNGLWINDOWPOS4FMESAPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

7265 (
APIENTRYP
 
	tPFNGLWINDOWPOS4FVMESAPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

7266 (
APIENTRYP
 
	tPFNGLWINDOWPOS4IMESAPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

7267 (
APIENTRYP
 
	tPFNGLWINDOWPOS4IVMESAPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

7268 (
APIENTRYP
 
	tPFNGLWINDOWPOS4SMESAPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
, GLsh‹à
	tw
);

7269 (
APIENTRYP
 
	tPFNGLWINDOWPOS4SVMESAPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

7272 #i‚de‡
GL_IBM_cuŒ_vîãx


7273 
	#GL_IBM_cuŒ_vîãx
 1

	)

7276 #i‚de‡
GL_IBM_mu…imode_døw_¨øys


7277 
	#GL_IBM_mu…imode_døw_¨øys
 1

	)

7278 #ifde‡
GL_GLEXT_PROTOTYPES


7279 
GLAPI
 
APIENTRY
 
glMu…iModeDøwAºaysIBM
 (c⁄° 
GLíum
 *, c⁄° 
GLöt
 *, c⁄° 
GLsizei
 *, GLsizei, GLint);

7280 
GLAPI
 
APIENTRY
 
glMu…iModeDøwEÀmítsIBM
 (c⁄° 
GLíum
 *, c⁄° 
GLsizei
 *, GLíum, c⁄° 
GLvoid
* c⁄° *, GLsizei, 
GLöt
);

7282 (
APIENTRYP
 
	tPFNGLMULTIMODEDRAWARRAYSIBMPROC
Ë(c⁄° 
	tGLíum
 *
	tmode
, c⁄° 
	tGLöt
 *
	tfú°
, c⁄° 
	tGLsizei
 *
	tcou¡
, GLsizeò
	t¥imcou¡
, GLöà
	tmode°ride
);

7283 (
APIENTRYP
 
	tPFNGLMULTIMODEDRAWELEMENTSIBMPROC
Ë(c⁄° 
	tGLíum
 *
	tmode
, c⁄° 
	tGLsizei
 *
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
* c⁄° *
	tödi˚s
, GLsizeò
	t¥imcou¡
, 
	tGLöt
 
	tmode°ride
);

7286 #i‚de‡
GL_IBM_vîãx_¨øy_li°s


7287 
	#GL_IBM_vîãx_¨øy_li°s
 1

	)

7288 #ifde‡
GL_GLEXT_PROTOTYPES


7289 
GLAPI
 
APIENTRY
 
glCﬁ‹PoöãrLi°IBM
 (
GLöt
, 
GLíum
, GLöt, c⁄° 
GLvoid
* *, GLint);

7290 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹PoöãrLi°IBM
 (
GLöt
, 
GLíum
, GLöt, c⁄° 
GLvoid
* *, GLint);

7291 
GLAPI
 
APIENTRY
 
glEdgeFœgPoöãrLi°IBM
 (
GLöt
, c⁄° 
GLboﬁón
* *, GLint);

7292 
GLAPI
 
APIENTRY
 
glFogCo‹dPoöãrLi°IBM
 (
GLíum
, 
GLöt
, c⁄° 
GLvoid
* *, GLint);

7293 
GLAPI
 
APIENTRY
 
glIndexPoöãrLi°IBM
 (
GLíum
, 
GLöt
, c⁄° 
GLvoid
* *, GLint);

7294 
GLAPI
 
APIENTRY
 
glN‹mÆPoöãrLi°IBM
 (
GLíum
, 
GLöt
, c⁄° 
GLvoid
* *, GLint);

7295 
GLAPI
 
APIENTRY
 
glTexCo‹dPoöãrLi°IBM
 (
GLöt
, 
GLíum
, GLöt, c⁄° 
GLvoid
* *, GLint);

7296 
GLAPI
 
APIENTRY
 
glVîãxPoöãrLi°IBM
 (
GLöt
, 
GLíum
, GLöt, c⁄° 
GLvoid
* *, GLint);

7298 (
APIENTRYP
 
	tPFNGLCOLORPOINTERLISTIBMPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, GLöà
	t°ride
, c⁄° 
	tGLvoid
* *
	tpoöãr
, GLöà
	t±r°ride
);

7299 (
APIENTRYP
 
	tPFNGLSECONDARYCOLORPOINTERLISTIBMPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, GLöà
	t°ride
, c⁄° 
	tGLvoid
* *
	tpoöãr
, GLöà
	t±r°ride
);

7300 (
APIENTRYP
 
	tPFNGLEDGEFLAGPOINTERLISTIBMPROC
Ë(
	tGLöt
 
	t°ride
, c⁄° 
	tGLboﬁón
* *
	tpoöãr
, GLöà
	t±r°ride
);

7301 (
APIENTRYP
 
	tPFNGLFOGCOORDPOINTERLISTIBMPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLöt
 
	t°ride
, c⁄° 
	tGLvoid
* *
	tpoöãr
, GLöà
	t±r°ride
);

7302 (
APIENTRYP
 
	tPFNGLINDEXPOINTERLISTIBMPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLöt
 
	t°ride
, c⁄° 
	tGLvoid
* *
	tpoöãr
, GLöà
	t±r°ride
);

7303 (
APIENTRYP
 
	tPFNGLNORMALPOINTERLISTIBMPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLöt
 
	t°ride
, c⁄° 
	tGLvoid
* *
	tpoöãr
, GLöà
	t±r°ride
);

7304 (
APIENTRYP
 
	tPFNGLTEXCOORDPOINTERLISTIBMPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, GLöà
	t°ride
, c⁄° 
	tGLvoid
* *
	tpoöãr
, GLöà
	t±r°ride
);

7305 (
APIENTRYP
 
	tPFNGLVERTEXPOINTERLISTIBMPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, GLöà
	t°ride
, c⁄° 
	tGLvoid
* *
	tpoöãr
, GLöà
	t±r°ride
);

7308 #i‚de‡
GL_SGIX_subßm∂e


7309 
	#GL_SGIX_subßm∂e
 1

	)

7312 #i‚de‡
GL_SGIX_y¸cba


7313 
	#GL_SGIX_y¸cba
 1

	)

7316 #i‚de‡
GL_SGIX_y¸cb_subßm∂e


7317 
	#GL_SGIX_y¸cb_subßm∂e
 1

	)

7320 #i‚de‡
GL_SGIX_dïth_∑ss_ö°rumít


7321 
	#GL_SGIX_dïth_∑ss_ö°rumít
 1

	)

7324 #i‚de‡
GL_3DFX_ãxtuª_com¥essi⁄_FXT1


7325 
	#GL_3DFX_ãxtuª_com¥essi⁄_FXT1
 1

	)

7328 #i‚de‡
GL_3DFX_mu…ißm∂e


7329 
	#GL_3DFX_mu…ißm∂e
 1

	)

7332 #i‚de‡
GL_3DFX_tbuf„r


7333 
	#GL_3DFX_tbuf„r
 1

	)

7334 #ifde‡
GL_GLEXT_PROTOTYPES


7335 
GLAPI
 
APIENTRY
 
glTbuf„rMask3DFX
 (
GLuöt
);

7337 (
APIENTRYP
 
	tPFNGLTBUFFERMASK3DFXPROC
Ë(
	tGLuöt
 
	tmask
);

7340 #i‚de‡
GL_EXT_mu…ißm∂e


7341 
	#GL_EXT_mu…ißm∂e
 1

	)

7342 #ifde‡
GL_GLEXT_PROTOTYPES


7343 
GLAPI
 
APIENTRY
 
glSam∂eMaskEXT
 (
GL˛ampf
, 
GLboﬁón
);

7344 
GLAPI
 
APIENTRY
 
glSam∂eP©ã∫EXT
 (
GLíum
);

7346 (
APIENTRYP
 
	tPFNGLSAMPLEMASKEXTPROC
Ë(
	tGL˛ampf
 
	tvÆue
, 
	tGLboﬁón
 
	tövît
);

7347 (
APIENTRYP
 
	tPFNGLSAMPLEPATTERNEXTPROC
Ë(
	tGLíum
 
	t∑âîn
);

7350 #i‚de‡
GL_SGIX_vîãx_¥e˛ù


7351 
	#GL_SGIX_vîãx_¥e˛ù
 1

	)

7354 #i‚de‡
GL_SGIX_c⁄vﬁuti⁄_accuøcy


7355 
	#GL_SGIX_c⁄vﬁuti⁄_accuøcy
 1

	)

7358 #i‚de‡
GL_SGIX_ªßm∂e


7359 
	#GL_SGIX_ªßm∂e
 1

	)

7362 #i‚de‡
GL_SGIS_poöt_löe_ãxgí


7363 
	#GL_SGIS_poöt_löe_ãxgí
 1

	)

7366 #i‚de‡
GL_SGIS_ãxtuª_cﬁ‹_mask


7367 
	#GL_SGIS_ãxtuª_cﬁ‹_mask
 1

	)

7368 #ifde‡
GL_GLEXT_PROTOTYPES


7369 
GLAPI
 
APIENTRY
 
glTextuªCﬁ‹MaskSGIS
 (
GLboﬁón
, GLboolean, GLboolean, GLboolean);

7371 (
APIENTRYP
 
	tPFNGLTEXTURECOLORMASKSGISPROC
Ë(
	tGLboﬁón
 
	tªd
, GLboﬁó¿
	tgªí
, GLboﬁó¿
	tblue
, GLboﬁó¿
	tÆpha
);

7374 #i‚de‡
GL_SGIX_igloo_öãrÁ˚


7375 
	#GL_SGIX_igloo_öãrÁ˚
 1

	)

7376 #ifde‡
GL_GLEXT_PROTOTYPES


7377 
GLAPI
 
APIENTRY
 
glIglooI¡îÁ˚SGIX
 (
GLíum
, c⁄° 
GLvoid
 *);

7379 (
APIENTRYP
 
	tPFNGLIGLOOINTERFACESGIXPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLvoid
 *
	t∑øms
);

7382 #i‚de‡
GL_EXT_ãxtuª_ív_dŸ3


7383 
	#GL_EXT_ãxtuª_ív_dŸ3
 1

	)

7386 #i‚de‡
GL_ATI_ãxtuª_múr‹_⁄˚


7387 
	#GL_ATI_ãxtuª_múr‹_⁄˚
 1

	)

7390 #i‚de‡
GL_NV_„n˚


7391 
	#GL_NV_„n˚
 1

	)

7392 #ifde‡
GL_GLEXT_PROTOTYPES


7393 
GLAPI
 
APIENTRY
 
glDñëeFí˚sNV
 (
GLsizei
, c⁄° 
GLuöt
 *);

7394 
GLAPI
 
APIENTRY
 
glGíFí˚sNV
 (
GLsizei
, 
GLuöt
 *);

7395 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsFí˚NV
 (
GLuöt
);

7396 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glTe°Fí˚NV
 (
GLuöt
);

7397 
GLAPI
 
APIENTRY
 
glGëFí˚ivNV
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7398 
GLAPI
 
APIENTRY
 
glFöishFí˚NV
 (
GLuöt
);

7399 
GLAPI
 
APIENTRY
 
glSëFí˚NV
 (
GLuöt
, 
GLíum
);

7401 (
APIENTRYP
 
	tPFNGLDELETEFENCESNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t„n˚s
);

7402 (
APIENTRYP
 
	tPFNGLGENFENCESNVPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	t„n˚s
);

7403 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISFENCENVPROC
Ë(
	tGLuöt
 
	t„n˚
);

7404 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLTESTFENCENVPROC
Ë(
	tGLuöt
 
	t„n˚
);

7405 (
APIENTRYP
 
	tPFNGLGETFENCEIVNVPROC
Ë(
	tGLuöt
 
	t„n˚
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7406 (
APIENTRYP
 
	tPFNGLFINISHFENCENVPROC
Ë(
	tGLuöt
 
	t„n˚
);

7407 (
APIENTRYP
 
	tPFNGLSETFENCENVPROC
Ë(
	tGLuöt
 
	t„n˚
, 
	tGLíum
 
	tc⁄dôi⁄
);

7410 #i‚de‡
GL_NV_evÆu©‹s


7411 
	#GL_NV_evÆu©‹s
 1

	)

7412 #ifde‡
GL_GLEXT_PROTOTYPES


7413 
GLAPI
 
APIENTRY
 
glM≠C⁄åﬁPoötsNV
 (
GLíum
, 
GLuöt
, GLíum, 
GLsizei
, GLsizei, 
GLöt
, GLöt, 
GLboﬁón
, c⁄° 
GLvoid
 *);

7414 
GLAPI
 
APIENTRY
 
glM≠P¨amëîivNV
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

7415 
GLAPI
 
APIENTRY
 
glM≠P¨amëîfvNV
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

7416 
GLAPI
 
APIENTRY
 
glGëM≠C⁄åﬁPoötsNV
 (
GLíum
, 
GLuöt
, GLíum, 
GLsizei
, GLsizei, 
GLboﬁón
, 
GLvoid
 *);

7417 
GLAPI
 
APIENTRY
 
glGëM≠P¨amëîivNV
 (
GLíum
, GLíum, 
GLöt
 *);

7418 
GLAPI
 
APIENTRY
 
glGëM≠P¨amëîfvNV
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

7419 
GLAPI
 
APIENTRY
 
glGëM≠AâribP¨amëîivNV
 (
GLíum
, 
GLuöt
, GLíum, 
GLöt
 *);

7420 
GLAPI
 
APIENTRY
 
glGëM≠AâribP¨amëîfvNV
 (
GLíum
, 
GLuöt
, GLíum, 
GLÊﬂt
 *);

7421 
GLAPI
 
APIENTRY
 
glEvÆM≠sNV
 (
GLíum
, GLenum);

7423 (
APIENTRYP
 
	tPFNGLMAPCONTROLPOINTSNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	tty≥
, 
	tGLsizei
 
	tu°ride
, GLsizeò
	tv°ride
, 
	tGLöt
 
	tu‹dî
, GLöà
	tv‹dî
, 
	tGLboﬁón
 
	t∑cked
, c⁄° 
	tGLvoid
 *
	tpoöts
);

7424 (
APIENTRYP
 
	tPFNGLMAPPARAMETERIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

7425 (
APIENTRYP
 
	tPFNGLMAPPARAMETERFVNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

7426 (
APIENTRYP
 
	tPFNGLGETMAPCONTROLPOINTSNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	tty≥
, 
	tGLsizei
 
	tu°ride
, GLsizeò
	tv°ride
, 
	tGLboﬁón
 
	t∑cked
, 
	tGLvoid
 *
	tpoöts
);

7427 (
APIENTRYP
 
	tPFNGLGETMAPPARAMETERIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7428 (
APIENTRYP
 
	tPFNGLGETMAPPARAMETERFVNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7429 (
APIENTRYP
 
	tPFNGLGETMAPATTRIBPARAMETERIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7430 (
APIENTRYP
 
	tPFNGLGETMAPATTRIBPARAMETERFVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7431 (
APIENTRYP
 
	tPFNGLEVALMAPSNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tmode
);

7434 #i‚de‡
GL_NV_∑cked_dïth_°ícû


7435 
	#GL_NV_∑cked_dïth_°ícû
 1

	)

7438 #i‚de‡
GL_NV_ªgi°î_comböîs2


7439 
	#GL_NV_ªgi°î_comböîs2
 1

	)

7440 #ifde‡
GL_GLEXT_PROTOTYPES


7441 
GLAPI
 
APIENTRY
 
glComböîSègeP¨amëîfvNV
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

7442 
GLAPI
 
APIENTRY
 
glGëComböîSègeP¨amëîfvNV
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

7444 (
APIENTRYP
 
	tPFNGLCOMBINERSTAGEPARAMETERFVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

7445 (
APIENTRYP
 
	tPFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7448 #i‚de‡
GL_NV_ãxtuª_com¥essi⁄_vtc


7449 
	#GL_NV_ãxtuª_com¥essi⁄_vtc
 1

	)

7452 #i‚de‡
GL_NV_ãxtuª_ª˘™gÀ


7453 
	#GL_NV_ãxtuª_ª˘™gÀ
 1

	)

7456 #i‚de‡
GL_NV_ãxtuª_shadî


7457 
	#GL_NV_ãxtuª_shadî
 1

	)

7460 #i‚de‡
GL_NV_ãxtuª_shadî2


7461 
	#GL_NV_ãxtuª_shadî2
 1

	)

7464 #i‚de‡
GL_NV_vîãx_¨øy_ønge2


7465 
	#GL_NV_vîãx_¨øy_ønge2
 1

	)

7468 #i‚de‡
GL_NV_vîãx_¥ogøm


7469 
	#GL_NV_vîãx_¥ogøm
 1

	)

7470 #ifde‡
GL_GLEXT_PROTOTYPES


7471 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glAªProgømsResidítNV
 (
GLsizei
, c⁄° 
GLuöt
 *, GLboolean *);

7472 
GLAPI
 
APIENTRY
 
glBödProgømNV
 (
GLíum
, 
GLuöt
);

7473 
GLAPI
 
APIENTRY
 
glDñëeProgømsNV
 (
GLsizei
, c⁄° 
GLuöt
 *);

7474 
GLAPI
 
APIENTRY
 
glExecuãProgømNV
 (
GLíum
, 
GLuöt
, c⁄° 
GLÊﬂt
 *);

7475 
GLAPI
 
APIENTRY
 
glGíProgømsNV
 (
GLsizei
, 
GLuöt
 *);

7476 
GLAPI
 
APIENTRY
 
glGëProgømP¨amëîdvNV
 (
GLíum
, 
GLuöt
, GLíum, 
GLdoubÀ
 *);

7477 
GLAPI
 
APIENTRY
 
glGëProgømP¨amëîfvNV
 (
GLíum
, 
GLuöt
, GLíum, 
GLÊﬂt
 *);

7478 
GLAPI
 
APIENTRY
 
glGëProgømivNV
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7479 
GLAPI
 
APIENTRY
 
glGëProgømSåögNV
 (
GLuöt
, 
GLíum
, 
GLubyã
 *);

7480 
GLAPI
 
APIENTRY
 
glGëTøckM©rixivNV
 (
GLíum
, 
GLuöt
, GLíum, 
GLöt
 *);

7481 
GLAPI
 
APIENTRY
 
glGëVîãxAâribdvNV
 (
GLuöt
, 
GLíum
, 
GLdoubÀ
 *);

7482 
GLAPI
 
APIENTRY
 
glGëVîãxAâribfvNV
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

7483 
GLAPI
 
APIENTRY
 
glGëVîãxAâribivNV
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7484 
GLAPI
 
APIENTRY
 
glGëVîãxAâribPoöãrvNV
 (
GLuöt
, 
GLíum
, 
GLvoid
* *);

7485 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsProgømNV
 (
GLuöt
);

7486 
GLAPI
 
APIENTRY
 
glLﬂdProgømNV
 (
GLíum
, 
GLuöt
, 
GLsizei
, c⁄° 
GLubyã
 *);

7487 
GLAPI
 
APIENTRY
 
glProgømP¨amëî4dNV
 (
GLíum
, 
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

7488 
GLAPI
 
APIENTRY
 
glProgømP¨amëî4dvNV
 (
GLíum
, 
GLuöt
, c⁄° 
GLdoubÀ
 *);

7489 
GLAPI
 
APIENTRY
 
glProgømP¨amëî4fNV
 (
GLíum
, 
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

7490 
GLAPI
 
APIENTRY
 
glProgømP¨amëî4fvNV
 (
GLíum
, 
GLuöt
, c⁄° 
GLÊﬂt
 *);

7491 
GLAPI
 
APIENTRY
 
glProgømP¨amëîs4dvNV
 (
GLíum
, 
GLuöt
, GLuöt, c⁄° 
GLdoubÀ
 *);

7492 
GLAPI
 
APIENTRY
 
glProgømP¨amëîs4fvNV
 (
GLíum
, 
GLuöt
, GLuöt, c⁄° 
GLÊﬂt
 *);

7493 
GLAPI
 
APIENTRY
 
glReque°ResidítProgømsNV
 (
GLsizei
, c⁄° 
GLuöt
 *);

7494 
GLAPI
 
APIENTRY
 
glTøckM©rixNV
 (
GLíum
, 
GLuöt
, GLenum, GLenum);

7495 
GLAPI
 
APIENTRY
 
glVîãxAâribPoöãrNV
 (
GLuöt
, 
GLöt
, 
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

7496 
GLAPI
 
APIENTRY
 
glVîãxAârib1dNV
 (
GLuöt
, 
GLdoubÀ
);

7497 
GLAPI
 
APIENTRY
 
glVîãxAârib1dvNV
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

7498 
GLAPI
 
APIENTRY
 
glVîãxAârib1fNV
 (
GLuöt
, 
GLÊﬂt
);

7499 
GLAPI
 
APIENTRY
 
glVîãxAârib1fvNV
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

7500 
GLAPI
 
APIENTRY
 
glVîãxAârib1sNV
 (
GLuöt
, 
GLsh‹t
);

7501 
GLAPI
 
APIENTRY
 
glVîãxAârib1svNV
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

7502 
GLAPI
 
APIENTRY
 
glVîãxAârib2dNV
 (
GLuöt
, 
GLdoubÀ
, GLdouble);

7503 
GLAPI
 
APIENTRY
 
glVîãxAârib2dvNV
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

7504 
GLAPI
 
APIENTRY
 
glVîãxAârib2fNV
 (
GLuöt
, 
GLÊﬂt
, GLfloat);

7505 
GLAPI
 
APIENTRY
 
glVîãxAârib2fvNV
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

7506 
GLAPI
 
APIENTRY
 
glVîãxAârib2sNV
 (
GLuöt
, 
GLsh‹t
, GLshort);

7507 
GLAPI
 
APIENTRY
 
glVîãxAârib2svNV
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

7508 
GLAPI
 
APIENTRY
 
glVîãxAârib3dNV
 (
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble);

7509 
GLAPI
 
APIENTRY
 
glVîãxAârib3dvNV
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

7510 
GLAPI
 
APIENTRY
 
glVîãxAârib3fNV
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat);

7511 
GLAPI
 
APIENTRY
 
glVîãxAârib3fvNV
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

7512 
GLAPI
 
APIENTRY
 
glVîãxAârib3sNV
 (
GLuöt
, 
GLsh‹t
, GLshort, GLshort);

7513 
GLAPI
 
APIENTRY
 
glVîãxAârib3svNV
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

7514 
GLAPI
 
APIENTRY
 
glVîãxAârib4dNV
 (
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

7515 
GLAPI
 
APIENTRY
 
glVîãxAârib4dvNV
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

7516 
GLAPI
 
APIENTRY
 
glVîãxAârib4fNV
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

7517 
GLAPI
 
APIENTRY
 
glVîãxAârib4fvNV
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

7518 
GLAPI
 
APIENTRY
 
glVîãxAârib4sNV
 (
GLuöt
, 
GLsh‹t
, GLshort, GLshort, GLshort);

7519 
GLAPI
 
APIENTRY
 
glVîãxAârib4svNV
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

7520 
GLAPI
 
APIENTRY
 
glVîãxAârib4ubNV
 (
GLuöt
, 
GLubyã
, GLubyte, GLubyte, GLubyte);

7521 
GLAPI
 
APIENTRY
 
glVîãxAârib4ubvNV
 (
GLuöt
, c⁄° 
GLubyã
 *);

7522 
GLAPI
 
APIENTRY
 
glVîãxAâribs1dvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLdoubÀ
 *);

7523 
GLAPI
 
APIENTRY
 
glVîãxAâribs1fvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

7524 
GLAPI
 
APIENTRY
 
glVîãxAâribs1svNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLsh‹t
 *);

7525 
GLAPI
 
APIENTRY
 
glVîãxAâribs2dvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLdoubÀ
 *);

7526 
GLAPI
 
APIENTRY
 
glVîãxAâribs2fvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

7527 
GLAPI
 
APIENTRY
 
glVîãxAâribs2svNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLsh‹t
 *);

7528 
GLAPI
 
APIENTRY
 
glVîãxAâribs3dvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLdoubÀ
 *);

7529 
GLAPI
 
APIENTRY
 
glVîãxAâribs3fvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

7530 
GLAPI
 
APIENTRY
 
glVîãxAâribs3svNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLsh‹t
 *);

7531 
GLAPI
 
APIENTRY
 
glVîãxAâribs4dvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLdoubÀ
 *);

7532 
GLAPI
 
APIENTRY
 
glVîãxAâribs4fvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

7533 
GLAPI
 
APIENTRY
 
glVîãxAâribs4svNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLsh‹t
 *);

7534 
GLAPI
 
APIENTRY
 
glVîãxAâribs4ubvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLubyã
 *);

7536 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLAREPROGRAMSRESIDENTNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t¥ogøms
, 
	tGLboﬁón
 *
	tªsidí˚s
);

7537 (
APIENTRYP
 
	tPFNGLBINDPROGRAMNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
);

7538 (
APIENTRYP
 
	tPFNGLDELETEPROGRAMSNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t¥ogøms
);

7539 (
APIENTRYP
 
	tPFNGLEXECUTEPROGRAMNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

7540 (
APIENTRYP
 
	tPFNGLGENPROGRAMSNVPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	t¥ogøms
);

7541 (
APIENTRYP
 
	tPFNGLGETPROGRAMPARAMETERDVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	t≤ame
, 
	tGLdoubÀ
 *
	t∑øms
);

7542 (
APIENTRYP
 
	tPFNGLGETPROGRAMPARAMETERFVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7543 (
APIENTRYP
 
	tPFNGLGETPROGRAMIVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7544 (
APIENTRYP
 
	tPFNGLGETPROGRAMSTRINGNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLubyã
 *
	t¥ogøm
);

7545 (
APIENTRYP
 
	tPFNGLGETTRACKMATRIXIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	taddªss
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7546 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBDVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLdoubÀ
 *
	t∑øms
);

7547 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBFVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7548 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7549 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBPOINTERVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLvoid
* *
	tpoöãr
);

7550 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISPROGRAMNVPROC
Ë(
	tGLuöt
 
	tid
);

7551 (
APIENTRYP
 
	tPFNGLLOADPROGRAMNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 *
	t¥ogøm
);

7552 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETER4DNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

7553 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETER4DVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7554 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETER4FNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

7555 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETER4FVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7556 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETERS4DVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tcou¡
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7557 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETERS4FVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7558 (
APIENTRYP
 
	tPFNGLREQUESTRESIDENTPROGRAMSNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t¥ogøms
);

7559 (
APIENTRYP
 
	tPFNGLTRACKMATRIXNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	taddªss
, GLíum 
	tm©rix
, GLíum 
	tå™sf‹m
);

7560 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBPOINTERNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tfsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

7561 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
);

7562 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7563 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
);

7564 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7565 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
);

7566 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

7567 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

7568 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7569 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

7570 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7571 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

7572 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

7573 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

7574 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7575 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7576 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7577 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

7578 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

7579 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

7580 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7581 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

7582 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7583 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
, GLsh‹à
	tw
);

7584 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

7585 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UBNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLubyã
 
	tx
, GLubyã 
	ty
, GLubyã 
	tz
, GLubyã 
	tw
);

7586 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UBVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 *
	tv
);

7587 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS1DVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7588 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS1FVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7589 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS1SVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLsh‹t
 *
	tv
);

7590 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS2DVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7591 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS2FVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7592 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS2SVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLsh‹t
 *
	tv
);

7593 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS3DVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7594 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS3FVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7595 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS3SVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLsh‹t
 *
	tv
);

7596 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS4DVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7597 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS4FVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7598 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS4SVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLsh‹t
 *
	tv
);

7599 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS4UBVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLubyã
 *
	tv
);

7602 #i‚de‡
GL_SGIX_ãxtuª_co‹dö©e_˛amp


7603 
	#GL_SGIX_ãxtuª_co‹dö©e_˛amp
 1

	)

7606 #i‚de‡
GL_SGIX_sˇÀbüs_höt


7607 
	#GL_SGIX_sˇÀbüs_höt
 1

	)

7610 #i‚de‡
GL_OML_öãæa˚


7611 
	#GL_OML_öãæa˚
 1

	)

7614 #i‚de‡
GL_OML_subßm∂e


7615 
	#GL_OML_subßm∂e
 1

	)

7618 #i‚de‡
GL_OML_ªßm∂e


7619 
	#GL_OML_ªßm∂e
 1

	)

7622 #i‚de‡
GL_NV_c›y_dïth_to_cﬁ‹


7623 
	#GL_NV_c›y_dïth_to_cﬁ‹
 1

	)

7626 #i‚de‡
GL_ATI_ívm≠_bumpm≠


7627 
	#GL_ATI_ívm≠_bumpm≠
 1

	)

7628 #ifde‡
GL_GLEXT_PROTOTYPES


7629 
GLAPI
 
APIENTRY
 
glTexBumpP¨amëîivATI
 (
GLíum
, c⁄° 
GLöt
 *);

7630 
GLAPI
 
APIENTRY
 
glTexBumpP¨amëîfvATI
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

7631 
GLAPI
 
APIENTRY
 
glGëTexBumpP¨amëîivATI
 (
GLíum
, 
GLöt
 *);

7632 
GLAPI
 
APIENTRY
 
glGëTexBumpP¨amëîfvATI
 (
GLíum
, 
GLÊﬂt
 *);

7634 (
APIENTRYP
 
	tPFNGLTEXBUMPPARAMETERIVATIPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øm
);

7635 (
APIENTRYP
 
	tPFNGLTEXBUMPPARAMETERFVATIPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øm
);

7636 (
APIENTRYP
 
	tPFNGLGETTEXBUMPPARAMETERIVATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øm
);

7637 (
APIENTRYP
 
	tPFNGLGETTEXBUMPPARAMETERFVATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øm
);

7640 #i‚de‡
GL_ATI_‰agmít_shadî


7641 
	#GL_ATI_‰agmít_shadî
 1

	)

7642 #ifde‡
GL_GLEXT_PROTOTYPES


7643 
GLAPI
 
GLuöt
 
APIENTRY
 
glGíFøgmítShadîsATI
 (GLuint);

7644 
GLAPI
 
APIENTRY
 
glBödFøgmítShadîATI
 (
GLuöt
);

7645 
GLAPI
 
APIENTRY
 
glDñëeFøgmítShadîATI
 (
GLuöt
);

7646 
GLAPI
 
APIENTRY
 
glBegöFøgmítShadîATI
 ();

7647 
GLAPI
 
APIENTRY
 
glEndFøgmítShadîATI
 ();

7648 
GLAPI
 
APIENTRY
 
glPassTexCo‹dATI
 (
GLuöt
, GLuöt, 
GLíum
);

7649 
GLAPI
 
APIENTRY
 
glSam∂eM≠ATI
 (
GLuöt
, GLuöt, 
GLíum
);

7650 
GLAPI
 
APIENTRY
 
glCﬁ‹FøgmítOp1ATI
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint, GLuint, GLuint);

7651 
GLAPI
 
APIENTRY
 
glCﬁ‹FøgmítOp2ATI
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);

7652 
GLAPI
 
APIENTRY
 
glCﬁ‹FøgmítOp3ATI
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);

7653 
GLAPI
 
APIENTRY
 
glAÕhaFøgmítOp1ATI
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint, GLuint);

7654 
GLAPI
 
APIENTRY
 
glAÕhaFøgmítOp2ATI
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);

7655 
GLAPI
 
APIENTRY
 
glAÕhaFøgmítOp3ATI
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);

7656 
GLAPI
 
APIENTRY
 
glSëFøgmítShadîC⁄°™tATI
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

7658 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLGENFRAGMENTSHADERSATIPROC
Ë(
	tGLuöt
 
	tønge
);

7659 (
APIENTRYP
 
	tPFNGLBINDFRAGMENTSHADERATIPROC
Ë(
	tGLuöt
 
	tid
);

7660 (
APIENTRYP
 
	tPFNGLDELETEFRAGMENTSHADERATIPROC
Ë(
	tGLuöt
 
	tid
);

7661 (
APIENTRYP
 
	tPFNGLBEGINFRAGMENTSHADERATIPROC
) ();

7662 (
APIENTRYP
 
	tPFNGLENDFRAGMENTSHADERATIPROC
) ();

7663 (
APIENTRYP
 
	tPFNGLPASSTEXCOORDATIPROC
Ë(
	tGLuöt
 
	td°
, GLuöà
	tco‹d
, 
	tGLíum
 
	tswizzÀ
);

7664 (
APIENTRYP
 
	tPFNGLSAMPLEMAPATIPROC
Ë(
	tGLuöt
 
	td°
, GLuöà
	töãΩ
, 
	tGLíum
 
	tswizzÀ
);

7665 (
APIENTRYP
 
	tPFNGLCOLORFRAGMENTOP1ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mask
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
);

7666 (
APIENTRYP
 
	tPFNGLCOLORFRAGMENTOP2ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mask
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
, GLuöà
	t¨g2
, GLuöà
	t¨g2Rï
, GLuöà
	t¨g2Mod
);

7667 (
APIENTRYP
 
	tPFNGLCOLORFRAGMENTOP3ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mask
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
, GLuöà
	t¨g2
, GLuöà
	t¨g2Rï
, GLuöà
	t¨g2Mod
, GLuöà
	t¨g3
, GLuöà
	t¨g3Rï
, GLuöà
	t¨g3Mod
);

7668 (
APIENTRYP
 
	tPFNGLALPHAFRAGMENTOP1ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
);

7669 (
APIENTRYP
 
	tPFNGLALPHAFRAGMENTOP2ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
, GLuöà
	t¨g2
, GLuöà
	t¨g2Rï
, GLuöà
	t¨g2Mod
);

7670 (
APIENTRYP
 
	tPFNGLALPHAFRAGMENTOP3ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
, GLuöà
	t¨g2
, GLuöà
	t¨g2Rï
, GLuöà
	t¨g2Mod
, GLuöà
	t¨g3
, GLuöà
	t¨g3Rï
, GLuöà
	t¨g3Mod
);

7671 (
APIENTRYP
 
	tPFNGLSETFRAGMENTSHADERCONSTANTATIPROC
Ë(
	tGLuöt
 
	td°
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

7674 #i‚de‡
GL_ATI_≤_åüngÀs


7675 
	#GL_ATI_≤_åüngÀs
 1

	)

7676 #ifde‡
GL_GLEXT_PROTOTYPES


7677 
GLAPI
 
APIENTRY
 
glPNTrüngÀsiATI
 (
GLíum
, 
GLöt
);

7678 
GLAPI
 
APIENTRY
 
glPNTrüngÀsfATI
 (
GLíum
, 
GLÊﬂt
);

7680 (
APIENTRYP
 
	tPFNGLPNTRIANGLESIATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

7681 (
APIENTRYP
 
	tPFNGLPNTRIANGLESFATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

7684 #i‚de‡
GL_ATI_vîãx_¨øy_obje˘


7685 
	#GL_ATI_vîãx_¨øy_obje˘
 1

	)

7686 #ifde‡
GL_GLEXT_PROTOTYPES


7687 
GLAPI
 
GLuöt
 
APIENTRY
 
glNewObje˘Buf„rATI
 (
GLsizei
, c⁄° 
GLvoid
 *, 
GLíum
);

7688 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsObje˘Buf„rATI
 (
GLuöt
);

7689 
GLAPI
 
APIENTRY
 
glUpd©eObje˘Buf„rATI
 (
GLuöt
, GLuöt, 
GLsizei
, c⁄° 
GLvoid
 *, 
GLíum
);

7690 
GLAPI
 
APIENTRY
 
glGëObje˘Buf„rfvATI
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

7691 
GLAPI
 
APIENTRY
 
glGëObje˘Buf„rivATI
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7692 
GLAPI
 
APIENTRY
 
glFªeObje˘Buf„rATI
 (
GLuöt
);

7693 
GLAPI
 
APIENTRY
 
glAºayObje˘ATI
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, 
GLuöt
, GLuint);

7694 
GLAPI
 
APIENTRY
 
glGëAºayObje˘fvATI
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

7695 
GLAPI
 
APIENTRY
 
glGëAºayObje˘ivATI
 (
GLíum
, GLíum, 
GLöt
 *);

7696 
GLAPI
 
APIENTRY
 
glV¨ü¡AºayObje˘ATI
 (
GLuöt
, 
GLíum
, 
GLsizei
, GLuint, GLuint);

7697 
GLAPI
 
APIENTRY
 
glGëV¨ü¡AºayObje˘fvATI
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

7698 
GLAPI
 
APIENTRY
 
glGëV¨ü¡AºayObje˘ivATI
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7700 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLNEWOBJECTBUFFERATIPROC
Ë(
	tGLsizei
 
	tsize
, c⁄° 
	tGLvoid
 *
	tpoöãr
, 
	tGLíum
 
	tußge
);

7701 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISOBJECTBUFFERATIPROC
Ë(
	tGLuöt
 
	tbuf„r
);

7702 (
APIENTRYP
 
	tPFNGLUPDATEOBJECTBUFFERATIPROC
Ë(
	tGLuöt
 
	tbuf„r
, GLuöà
	toff£t
, 
	tGLsizei
 
	tsize
, c⁄° 
	tGLvoid
 *
	tpoöãr
, 
	tGLíum
 
	t¥e£rve
);

7703 (
APIENTRYP
 
	tPFNGLGETOBJECTBUFFERFVATIPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7704 (
APIENTRYP
 
	tPFNGLGETOBJECTBUFFERIVATIPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7705 (
APIENTRYP
 
	tPFNGLFREEOBJECTBUFFERATIPROC
Ë(
	tGLuöt
 
	tbuf„r
);

7706 (
APIENTRYP
 
	tPFNGLARRAYOBJECTATIPROC
Ë(
	tGLíum
 
	t¨øy
, 
	tGLöt
 
	tsize
, GLíum 
	tty≥
, 
	tGLsizei
 
	t°ride
, 
	tGLuöt
 
	tbuf„r
, GLuöà
	toff£t
);

7707 (
APIENTRYP
 
	tPFNGLGETARRAYOBJECTFVATIPROC
Ë(
	tGLíum
 
	t¨øy
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7708 (
APIENTRYP
 
	tPFNGLGETARRAYOBJECTIVATIPROC
Ë(
	tGLíum
 
	t¨øy
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7709 (
APIENTRYP
 
	tPFNGLVARIANTARRAYOBJECTATIPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLuöà
	tbuf„r
, GLuöà
	toff£t
);

7710 (
APIENTRYP
 
	tPFNGLGETVARIANTARRAYOBJECTFVATIPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7711 (
APIENTRYP
 
	tPFNGLGETVARIANTARRAYOBJECTIVATIPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7714 #i‚de‡
GL_EXT_vîãx_shadî


7715 
	#GL_EXT_vîãx_shadî
 1

	)

7716 #ifde‡
GL_GLEXT_PROTOTYPES


7717 
GLAPI
 
APIENTRY
 
glBegöVîãxShadîEXT
 ();

7718 
GLAPI
 
APIENTRY
 
glEndVîãxShadîEXT
 ();

7719 
GLAPI
 
APIENTRY
 
glBödVîãxShadîEXT
 (
GLuöt
);

7720 
GLAPI
 
GLuöt
 
APIENTRY
 
glGíVîãxShadîsEXT
 (GLuint);

7721 
GLAPI
 
APIENTRY
 
glDñëeVîãxShadîEXT
 (
GLuöt
);

7722 
GLAPI
 
APIENTRY
 
glShadîOp1EXT
 (
GLíum
, 
GLuöt
, GLuint);

7723 
GLAPI
 
APIENTRY
 
glShadîOp2EXT
 (
GLíum
, 
GLuöt
, GLuint, GLuint);

7724 
GLAPI
 
APIENTRY
 
glShadîOp3EXT
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint);

7725 
GLAPI
 
APIENTRY
 
glSwizzÀEXT
 (
GLuöt
, GLuöt, 
GLíum
, GLenum, GLenum, GLenum);

7726 
GLAPI
 
APIENTRY
 
glWrôeMaskEXT
 (
GLuöt
, GLuöt, 
GLíum
, GLenum, GLenum, GLenum);

7727 
GLAPI
 
APIENTRY
 
glIn£πComp⁄ítEXT
 (
GLuöt
, GLuint, GLuint);

7728 
GLAPI
 
APIENTRY
 
glExåa˘Comp⁄ítEXT
 (
GLuöt
, GLuint, GLuint);

7729 
GLAPI
 
GLuöt
 
APIENTRY
 
glGíSymbﬁsEXT
 (
GLíum
, GLenum, GLenum, GLuint);

7730 
GLAPI
 
APIENTRY
 
glSëInv¨ü¡EXT
 (
GLuöt
, 
GLíum
, c⁄° 
GLvoid
 *);

7731 
GLAPI
 
APIENTRY
 
glSëLoˇlC⁄°™tEXT
 (
GLuöt
, 
GLíum
, c⁄° 
GLvoid
 *);

7732 
GLAPI
 
APIENTRY
 
glV¨ü¡bvEXT
 (
GLuöt
, c⁄° 
GLbyã
 *);

7733 
GLAPI
 
APIENTRY
 
glV¨ü¡svEXT
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

7734 
GLAPI
 
APIENTRY
 
glV¨ü¡ivEXT
 (
GLuöt
, c⁄° 
GLöt
 *);

7735 
GLAPI
 
APIENTRY
 
glV¨ü¡fvEXT
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

7736 
GLAPI
 
APIENTRY
 
glV¨ü¡dvEXT
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

7737 
GLAPI
 
APIENTRY
 
glV¨ü¡ubvEXT
 (
GLuöt
, c⁄° 
GLubyã
 *);

7738 
GLAPI
 
APIENTRY
 
glV¨ü¡usvEXT
 (
GLuöt
, c⁄° 
GLush‹t
 *);

7739 
GLAPI
 
APIENTRY
 
glV¨ü¡uivEXT
 (
GLuöt
, const GLuint *);

7740 
GLAPI
 
APIENTRY
 
glV¨ü¡PoöãrEXT
 (
GLuöt
, 
GLíum
, GLuöt, c⁄° 
GLvoid
 *);

7741 
GLAPI
 
APIENTRY
 
glE«bÀV¨ü¡Clõ¡SèãEXT
 (
GLuöt
);

7742 
GLAPI
 
APIENTRY
 
glDißbÀV¨ü¡Clõ¡SèãEXT
 (
GLuöt
);

7743 
GLAPI
 
GLuöt
 
APIENTRY
 
glBödLightP¨amëîEXT
 (
GLíum
, GLenum);

7744 
GLAPI
 
GLuöt
 
APIENTRY
 
glBödM©îülP¨amëîEXT
 (
GLíum
, GLenum);

7745 
GLAPI
 
GLuöt
 
APIENTRY
 
glBödTexGíP¨amëîEXT
 (
GLíum
, GLenum, GLenum);

7746 
GLAPI
 
GLuöt
 
APIENTRY
 
glBödTextuªUnôP¨amëîEXT
 (
GLíum
, GLenum);

7747 
GLAPI
 
GLuöt
 
APIENTRY
 
glBödP¨amëîEXT
 (
GLíum
);

7748 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsV¨ü¡E«bÀdEXT
 (
GLuöt
, 
GLíum
);

7749 
GLAPI
 
APIENTRY
 
glGëV¨ü¡BoﬁónvEXT
 (
GLuöt
, 
GLíum
, 
GLboﬁón
 *);

7750 
GLAPI
 
APIENTRY
 
glGëV¨ü¡I¡egîvEXT
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7751 
GLAPI
 
APIENTRY
 
glGëV¨ü¡FlﬂtvEXT
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

7752 
GLAPI
 
APIENTRY
 
glGëV¨ü¡PoöãrvEXT
 (
GLuöt
, 
GLíum
, 
GLvoid
* *);

7753 
GLAPI
 
APIENTRY
 
glGëInv¨ü¡BoﬁónvEXT
 (
GLuöt
, 
GLíum
, 
GLboﬁón
 *);

7754 
GLAPI
 
APIENTRY
 
glGëInv¨ü¡I¡egîvEXT
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7755 
GLAPI
 
APIENTRY
 
glGëInv¨ü¡FlﬂtvEXT
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

7756 
GLAPI
 
APIENTRY
 
glGëLoˇlC⁄°™tBoﬁónvEXT
 (
GLuöt
, 
GLíum
, 
GLboﬁón
 *);

7757 
GLAPI
 
APIENTRY
 
glGëLoˇlC⁄°™tI¡egîvEXT
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7758 
GLAPI
 
APIENTRY
 
glGëLoˇlC⁄°™tFlﬂtvEXT
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

7760 (
APIENTRYP
 
	tPFNGLBEGINVERTEXSHADEREXTPROC
) ();

7761 (
APIENTRYP
 
	tPFNGLENDVERTEXSHADEREXTPROC
) ();

7762 (
APIENTRYP
 
	tPFNGLBINDVERTEXSHADEREXTPROC
Ë(
	tGLuöt
 
	tid
);

7763 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLGENVERTEXSHADERSEXTPROC
Ë(
	tGLuöt
 
	tønge
);

7764 (
APIENTRYP
 
	tPFNGLDELETEVERTEXSHADEREXTPROC
Ë(
	tGLuöt
 
	tid
);

7765 (
APIENTRYP
 
	tPFNGLSHADEROP1EXTPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	tªs
, GLuöà
	t¨g1
);

7766 (
APIENTRYP
 
	tPFNGLSHADEROP2EXTPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	tªs
, GLuöà
	t¨g1
, GLuöà
	t¨g2
);

7767 (
APIENTRYP
 
	tPFNGLSHADEROP3EXTPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	tªs
, GLuöà
	t¨g1
, GLuöà
	t¨g2
, GLuöà
	t¨g3
);

7768 (
APIENTRYP
 
	tPFNGLSWIZZLEEXTPROC
Ë(
	tGLuöt
 
	tªs
, GLuöà
	tö
, 
	tGLíum
 
	toutX
, GLíum 
	toutY
, GLíum 
	toutZ
, GLíum 
	toutW
);

7769 (
APIENTRYP
 
	tPFNGLWRITEMASKEXTPROC
Ë(
	tGLuöt
 
	tªs
, GLuöà
	tö
, 
	tGLíum
 
	toutX
, GLíum 
	toutY
, GLíum 
	toutZ
, GLíum 
	toutW
);

7770 (
APIENTRYP
 
	tPFNGLINSERTCOMPONENTEXTPROC
Ë(
	tGLuöt
 
	tªs
, GLuöà
	t§c
, GLuöà
	tnum
);

7771 (
APIENTRYP
 
	tPFNGLEXTRACTCOMPONENTEXTPROC
Ë(
	tGLuöt
 
	tªs
, GLuöà
	t§c
, GLuöà
	tnum
);

7772 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLGENSYMBOLSEXTPROC
Ë(
	tGLíum
 
	td©©y≥
, GLíum 
	t°‹agëy≥
, GLíum 
	tønge
, 
	tGLuöt
 
	tcomp⁄íts
);

7773 (
APIENTRYP
 
	tPFNGLSETINVARIANTEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
 *
	taddr
);

7774 (
APIENTRYP
 
	tPFNGLSETLOCALCONSTANTEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
 *
	taddr
);

7775 (
APIENTRYP
 
	tPFNGLVARIANTBVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLbyã
 *
	taddr
);

7776 (
APIENTRYP
 
	tPFNGLVARIANTSVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLsh‹t
 *
	taddr
);

7777 (
APIENTRYP
 
	tPFNGLVARIANTIVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLöt
 *
	taddr
);

7778 (
APIENTRYP
 
	tPFNGLVARIANTFVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLÊﬂt
 *
	taddr
);

7779 (
APIENTRYP
 
	tPFNGLVARIANTDVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLdoubÀ
 *
	taddr
);

7780 (
APIENTRYP
 
	tPFNGLVARIANTUBVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLubyã
 *
	taddr
);

7781 (
APIENTRYP
 
	tPFNGLVARIANTUSVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLush‹t
 *
	taddr
);

7782 (
APIENTRYP
 
	tPFNGLVARIANTUIVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° GLuöà*
	taddr
);

7783 (
APIENTRYP
 
	tPFNGLVARIANTPOINTEREXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tty≥
, GLuöà
	t°ride
, c⁄° 
	tGLvoid
 *
	taddr
);

7784 (
APIENTRYP
 
	tPFNGLENABLEVARIANTCLIENTSTATEEXTPROC
Ë(
	tGLuöt
 
	tid
);

7785 (
APIENTRYP
 
	tPFNGLDISABLEVARIANTCLIENTSTATEEXTPROC
Ë(
	tGLuöt
 
	tid
);

7786 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLBINDLIGHTPARAMETEREXTPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	tvÆue
);

7787 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLBINDMATERIALPARAMETEREXTPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tvÆue
);

7788 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLBINDTEXGENPARAMETEREXTPROC
Ë(
	tGLíum
 
	tunô
, GLíum 
	tco‹d
, GLíum 
	tvÆue
);

7789 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLBINDTEXTUREUNITPARAMETEREXTPROC
Ë(
	tGLíum
 
	tunô
, GLíum 
	tvÆue
);

7790 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLBINDPARAMETEREXTPROC
Ë(
	tGLíum
 
	tvÆue
);

7791 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISVARIANTENABLEDEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tˇp
);

7792 (
APIENTRYP
 
	tPFNGLGETVARIANTBOOLEANVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLboﬁón
 *
	td©a
);

7793 (
APIENTRYP
 
	tPFNGLGETVARIANTINTEGERVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLöt
 *
	td©a
);

7794 (
APIENTRYP
 
	tPFNGLGETVARIANTFLOATVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLÊﬂt
 *
	td©a
);

7795 (
APIENTRYP
 
	tPFNGLGETVARIANTPOINTERVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLvoid
* *
	td©a
);

7796 (
APIENTRYP
 
	tPFNGLGETINVARIANTBOOLEANVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLboﬁón
 *
	td©a
);

7797 (
APIENTRYP
 
	tPFNGLGETINVARIANTINTEGERVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLöt
 *
	td©a
);

7798 (
APIENTRYP
 
	tPFNGLGETINVARIANTFLOATVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLÊﬂt
 *
	td©a
);

7799 (
APIENTRYP
 
	tPFNGLGETLOCALCONSTANTBOOLEANVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLboﬁón
 *
	td©a
);

7800 (
APIENTRYP
 
	tPFNGLGETLOCALCONSTANTINTEGERVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLöt
 *
	td©a
);

7801 (
APIENTRYP
 
	tPFNGLGETLOCALCONSTANTFLOATVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLÊﬂt
 *
	td©a
);

7804 #i‚de‡
GL_ATI_vîãx_°ªams


7805 
	#GL_ATI_vîãx_°ªams
 1

	)

7806 #ifde‡
GL_GLEXT_PROTOTYPES


7807 
GLAPI
 
APIENTRY
 
glVîãxSåóm1sATI
 (
GLíum
, 
GLsh‹t
);

7808 
GLAPI
 
APIENTRY
 
glVîãxSåóm1svATI
 (
GLíum
, c⁄° 
GLsh‹t
 *);

7809 
GLAPI
 
APIENTRY
 
glVîãxSåóm1iATI
 (
GLíum
, 
GLöt
);

7810 
GLAPI
 
APIENTRY
 
glVîãxSåóm1ivATI
 (
GLíum
, c⁄° 
GLöt
 *);

7811 
GLAPI
 
APIENTRY
 
glVîãxSåóm1fATI
 (
GLíum
, 
GLÊﬂt
);

7812 
GLAPI
 
APIENTRY
 
glVîãxSåóm1fvATI
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

7813 
GLAPI
 
APIENTRY
 
glVîãxSåóm1dATI
 (
GLíum
, 
GLdoubÀ
);

7814 
GLAPI
 
APIENTRY
 
glVîãxSåóm1dvATI
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

7815 
GLAPI
 
APIENTRY
 
glVîãxSåóm2sATI
 (
GLíum
, 
GLsh‹t
, GLshort);

7816 
GLAPI
 
APIENTRY
 
glVîãxSåóm2svATI
 (
GLíum
, c⁄° 
GLsh‹t
 *);

7817 
GLAPI
 
APIENTRY
 
glVîãxSåóm2iATI
 (
GLíum
, 
GLöt
, GLint);

7818 
GLAPI
 
APIENTRY
 
glVîãxSåóm2ivATI
 (
GLíum
, c⁄° 
GLöt
 *);

7819 
GLAPI
 
APIENTRY
 
glVîãxSåóm2fATI
 (
GLíum
, 
GLÊﬂt
, GLfloat);

7820 
GLAPI
 
APIENTRY
 
glVîãxSåóm2fvATI
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

7821 
GLAPI
 
APIENTRY
 
glVîãxSåóm2dATI
 (
GLíum
, 
GLdoubÀ
, GLdouble);

7822 
GLAPI
 
APIENTRY
 
glVîãxSåóm2dvATI
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

7823 
GLAPI
 
APIENTRY
 
glVîãxSåóm3sATI
 (
GLíum
, 
GLsh‹t
, GLshort, GLshort);

7824 
GLAPI
 
APIENTRY
 
glVîãxSåóm3svATI
 (
GLíum
, c⁄° 
GLsh‹t
 *);

7825 
GLAPI
 
APIENTRY
 
glVîãxSåóm3iATI
 (
GLíum
, 
GLöt
, GLint, GLint);

7826 
GLAPI
 
APIENTRY
 
glVîãxSåóm3ivATI
 (
GLíum
, c⁄° 
GLöt
 *);

7827 
GLAPI
 
APIENTRY
 
glVîãxSåóm3fATI
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat);

7828 
GLAPI
 
APIENTRY
 
glVîãxSåóm3fvATI
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

7829 
GLAPI
 
APIENTRY
 
glVîãxSåóm3dATI
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble);

7830 
GLAPI
 
APIENTRY
 
glVîãxSåóm3dvATI
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

7831 
GLAPI
 
APIENTRY
 
glVîãxSåóm4sATI
 (
GLíum
, 
GLsh‹t
, GLshort, GLshort, GLshort);

7832 
GLAPI
 
APIENTRY
 
glVîãxSåóm4svATI
 (
GLíum
, c⁄° 
GLsh‹t
 *);

7833 
GLAPI
 
APIENTRY
 
glVîãxSåóm4iATI
 (
GLíum
, 
GLöt
, GLint, GLint, GLint);

7834 
GLAPI
 
APIENTRY
 
glVîãxSåóm4ivATI
 (
GLíum
, c⁄° 
GLöt
 *);

7835 
GLAPI
 
APIENTRY
 
glVîãxSåóm4fATI
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

7836 
GLAPI
 
APIENTRY
 
glVîãxSåóm4fvATI
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

7837 
GLAPI
 
APIENTRY
 
glVîãxSåóm4dATI
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

7838 
GLAPI
 
APIENTRY
 
glVîãxSåóm4dvATI
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

7839 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3bATI
 (
GLíum
, 
GLbyã
, GLbyte, GLbyte);

7840 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3bvATI
 (
GLíum
, c⁄° 
GLbyã
 *);

7841 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3sATI
 (
GLíum
, 
GLsh‹t
, GLshort, GLshort);

7842 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3svATI
 (
GLíum
, c⁄° 
GLsh‹t
 *);

7843 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3iATI
 (
GLíum
, 
GLöt
, GLint, GLint);

7844 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3ivATI
 (
GLíum
, c⁄° 
GLöt
 *);

7845 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3fATI
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat);

7846 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3fvATI
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

7847 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3dATI
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble);

7848 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3dvATI
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

7849 
GLAPI
 
APIENTRY
 
glClõ¡A˘iveVîãxSåómATI
 (
GLíum
);

7850 
GLAPI
 
APIENTRY
 
glVîãxBÀndEnviATI
 (
GLíum
, 
GLöt
);

7851 
GLAPI
 
APIENTRY
 
glVîãxBÀndEnvfATI
 (
GLíum
, 
GLÊﬂt
);

7853 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1SATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLsh‹t
 
	tx
);

7854 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1SVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLsh‹t
 *
	tco‹ds
);

7855 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1IATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLöt
 
	tx
);

7856 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1IVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLöt
 *
	tco‹ds
);

7857 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1FATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLÊﬂt
 
	tx
);

7858 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1FVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLÊﬂt
 *
	tco‹ds
);

7859 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1DATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLdoubÀ
 
	tx
);

7860 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1DVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLdoubÀ
 *
	tco‹ds
);

7861 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2SATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

7862 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2SVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLsh‹t
 *
	tco‹ds
);

7863 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2IATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLöt
 
	tx
, GLöà
	ty
);

7864 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2IVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLöt
 *
	tco‹ds
);

7865 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2FATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

7866 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2FVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLÊﬂt
 *
	tco‹ds
);

7867 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2DATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

7868 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2DVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLdoubÀ
 *
	tco‹ds
);

7869 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3SATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

7870 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3SVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLsh‹t
 *
	tco‹ds
);

7871 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3IATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

7872 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3IVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLöt
 *
	tco‹ds
);

7873 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3FATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7874 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3FVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLÊﬂt
 *
	tco‹ds
);

7875 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3DATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

7876 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3DVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLdoubÀ
 *
	tco‹ds
);

7877 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4SATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
, GLsh‹à
	tw
);

7878 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4SVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLsh‹t
 *
	tco‹ds
);

7879 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4IATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

7880 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4IVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLöt
 *
	tco‹ds
);

7881 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4FATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

7882 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4FVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLÊﬂt
 *
	tco‹ds
);

7883 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4DATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

7884 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4DVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLdoubÀ
 *
	tco‹ds
);

7885 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3BATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLbyã
 
	tnx
, GLbyã 
	tny
, GLbyã 
	tnz
);

7886 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3BVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLbyã
 *
	tco‹ds
);

7887 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3SATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLsh‹t
 
	tnx
, GLsh‹à
	tny
, GLsh‹à
	tnz
);

7888 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3SVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLsh‹t
 *
	tco‹ds
);

7889 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3IATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLöt
 
	tnx
, GLöà
	tny
, GLöà
	tnz
);

7890 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3IVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLöt
 *
	tco‹ds
);

7891 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3FATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLÊﬂt
 
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
);

7892 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3FVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLÊﬂt
 *
	tco‹ds
);

7893 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3DATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLdoubÀ
 
	tnx
, GLdoubÀ 
	tny
, GLdoubÀ 
	tnz
);

7894 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3DVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLdoubÀ
 *
	tco‹ds
);

7895 (
APIENTRYP
 
	tPFNGLCLIENTACTIVEVERTEXSTREAMATIPROC
Ë(
	tGLíum
 
	t°ªam
);

7896 (
APIENTRYP
 
	tPFNGLVERTEXBLENDENVIATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

7897 (
APIENTRYP
 
	tPFNGLVERTEXBLENDENVFATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

7900 #i‚de‡
GL_ATI_ñemít_¨øy


7901 
	#GL_ATI_ñemít_¨øy
 1

	)

7902 #ifde‡
GL_GLEXT_PROTOTYPES


7903 
GLAPI
 
APIENTRY
 
glEÀmítPoöãrATI
 (
GLíum
, c⁄° 
GLvoid
 *);

7904 
GLAPI
 
APIENTRY
 
glDøwEÀmítAºayATI
 (
GLíum
, 
GLsizei
);

7905 
GLAPI
 
APIENTRY
 
glDøwR™geEÀmítAºayATI
 (
GLíum
, 
GLuöt
, GLuöt, 
GLsizei
);

7907 (
APIENTRYP
 
	tPFNGLELEMENTPOINTERATIPROC
Ë(
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

7908 (
APIENTRYP
 
	tPFNGLDRAWELEMENTARRAYATIPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLsizei
 
	tcou¡
);

7909 (
APIENTRYP
 
	tPFNGLDRAWRANGEELEMENTARRAYATIPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, 
	tGLsizei
 
	tcou¡
);

7912 #i‚de‡
GL_SUN_mesh_¨øy


7913 
	#GL_SUN_mesh_¨øy
 1

	)

7914 #ifde‡
GL_GLEXT_PROTOTYPES


7915 
GLAPI
 
APIENTRY
 
glDøwMeshAºaysSUN
 (
GLíum
, 
GLöt
, 
GLsizei
, GLsizei);

7917 (
APIENTRYP
 
	tPFNGLDRAWMESHARRAYSSUNPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
, GLsizeò
	twidth
);

7920 #i‚de‡
GL_SUN_¶i˚_accum


7921 
	#GL_SUN_¶i˚_accum
 1

	)

7924 #i‚de‡
GL_NV_mu…ißm∂e_fûãr_höt


7925 
	#GL_NV_mu…ißm∂e_fûãr_höt
 1

	)

7928 #i‚de‡
GL_NV_dïth_˛amp


7929 
	#GL_NV_dïth_˛amp
 1

	)

7932 #i‚de‡
GL_NV_oc˛usi⁄_quîy


7933 
	#GL_NV_oc˛usi⁄_quîy
 1

	)

7934 #ifde‡
GL_GLEXT_PROTOTYPES


7935 
GLAPI
 
APIENTRY
 
glGíOc˛usi⁄QuîõsNV
 (
GLsizei
, 
GLuöt
 *);

7936 
GLAPI
 
APIENTRY
 
glDñëeOc˛usi⁄QuîõsNV
 (
GLsizei
, c⁄° 
GLuöt
 *);

7937 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsOc˛usi⁄QuîyNV
 (
GLuöt
);

7938 
GLAPI
 
APIENTRY
 
glBegöOc˛usi⁄QuîyNV
 (
GLuöt
);

7939 
GLAPI
 
APIENTRY
 
glEndOc˛usi⁄QuîyNV
 ();

7940 
GLAPI
 
APIENTRY
 
glGëOc˛usi⁄QuîyivNV
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7941 
GLAPI
 
APIENTRY
 
glGëOc˛usi⁄QuîyuivNV
 (
GLuöt
, 
GLíum
, GLuint *);

7943 (
APIENTRYP
 
	tPFNGLGENOCCLUSIONQUERIESNVPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tids
);

7944 (
APIENTRYP
 
	tPFNGLDELETEOCCLUSIONQUERIESNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tids
);

7945 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISOCCLUSIONQUERYNVPROC
Ë(
	tGLuöt
 
	tid
);

7946 (
APIENTRYP
 
	tPFNGLBEGINOCCLUSIONQUERYNVPROC
Ë(
	tGLuöt
 
	tid
);

7947 (
APIENTRYP
 
	tPFNGLENDOCCLUSIONQUERYNVPROC
) ();

7948 (
APIENTRYP
 
	tPFNGLGETOCCLUSIONQUERYIVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7949 (
APIENTRYP
 
	tPFNGLGETOCCLUSIONQUERYUIVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, GLuöà*
	t∑øms
);

7952 #i‚de‡
GL_NV_poöt_•rôe


7953 
	#GL_NV_poöt_•rôe
 1

	)

7954 #ifde‡
GL_GLEXT_PROTOTYPES


7955 
GLAPI
 
APIENTRY
 
glPoötP¨amëîiNV
 (
GLíum
, 
GLöt
);

7956 
GLAPI
 
APIENTRY
 
glPoötP¨amëîivNV
 (
GLíum
, c⁄° 
GLöt
 *);

7958 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERINVPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

7959 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERIVNVPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

7962 #i‚de‡
GL_NV_ãxtuª_shadî3


7963 
	#GL_NV_ãxtuª_shadî3
 1

	)

7966 #i‚de‡
GL_NV_vîãx_¥ogøm1_1


7967 
	#GL_NV_vîãx_¥ogøm1_1
 1

	)

7970 #i‚de‡
GL_EXT_shadow_funcs


7971 
	#GL_EXT_shadow_funcs
 1

	)

7974 #i‚de‡
GL_EXT_°ícû_two_side


7975 
	#GL_EXT_°ícû_two_side
 1

	)

7976 #ifde‡
GL_GLEXT_PROTOTYPES


7977 
GLAPI
 
APIENTRY
 
glA˘iveSãncûFa˚EXT
 (
GLíum
);

7979 (
APIENTRYP
 
	tPFNGLACTIVESTENCILFACEEXTPROC
Ë(
	tGLíum
 
	tÁ˚
);

7982 #i‚de‡
GL_ATI_ãxt_‰agmít_shadî


7983 
	#GL_ATI_ãxt_‰agmít_shadî
 1

	)

7986 #i‚de‡
GL_APPLE_˛õ¡_°‹age


7987 
	#GL_APPLE_˛õ¡_°‹age
 1

	)

7990 #i‚de‡
GL_APPLE_ñemít_¨øy


7991 
	#GL_APPLE_ñemít_¨øy
 1

	)

7992 #ifde‡
GL_GLEXT_PROTOTYPES


7993 
GLAPI
 
APIENTRY
 
glEÀmítPoöãrAPPLE
 (
GLíum
, c⁄° 
GLvoid
 *);

7994 
GLAPI
 
APIENTRY
 
glDøwEÀmítAºayAPPLE
 (
GLíum
, 
GLöt
, 
GLsizei
);

7995 
GLAPI
 
APIENTRY
 
glDøwR™geEÀmítAºayAPPLE
 (
GLíum
, 
GLuöt
, GLuöt, 
GLöt
, 
GLsizei
);

7996 
GLAPI
 
APIENTRY
 
glMu…iDøwEÀmítAºayAPPLE
 (
GLíum
, c⁄° 
GLöt
 *, c⁄° 
GLsizei
 *, GLsizei);

7997 
GLAPI
 
APIENTRY
 
glMu…iDøwR™geEÀmítAºayAPPLE
 (
GLíum
, 
GLuöt
, GLuöt, c⁄° 
GLöt
 *, c⁄° 
GLsizei
 *, GLsizei);

7999 (
APIENTRYP
 
	tPFNGLELEMENTPOINTERAPPLEPROC
Ë(
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

8000 (
APIENTRYP
 
	tPFNGLDRAWELEMENTARRAYAPPLEPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
);

8001 (
APIENTRYP
 
	tPFNGLDRAWRANGEELEMENTARRAYAPPLEPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, 
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
);

8002 (
APIENTRYP
 
	tPFNGLMULTIDRAWELEMENTARRAYAPPLEPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLöt
 *
	tfú°
, c⁄° 
	tGLsizei
 *
	tcou¡
, GLsizeò
	t¥imcou¡
);

8003 (
APIENTRYP
 
	tPFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, c⁄° 
	tGLöt
 *
	tfú°
, c⁄° 
	tGLsizei
 *
	tcou¡
, GLsizeò
	t¥imcou¡
);

8006 #i‚de‡
GL_APPLE_„n˚


8007 
	#GL_APPLE_„n˚
 1

	)

8008 #ifde‡
GL_GLEXT_PROTOTYPES


8009 
GLAPI
 
APIENTRY
 
glGíFí˚sAPPLE
 (
GLsizei
, 
GLuöt
 *);

8010 
GLAPI
 
APIENTRY
 
glDñëeFí˚sAPPLE
 (
GLsizei
, c⁄° 
GLuöt
 *);

8011 
GLAPI
 
APIENTRY
 
glSëFí˚APPLE
 (
GLuöt
);

8012 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsFí˚APPLE
 (
GLuöt
);

8013 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glTe°Fí˚APPLE
 (
GLuöt
);

8014 
GLAPI
 
APIENTRY
 
glFöishFí˚APPLE
 (
GLuöt
);

8015 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glTe°Obje˘APPLE
 (
GLíum
, 
GLuöt
);

8016 
GLAPI
 
APIENTRY
 
glFöishObje˘APPLE
 (
GLíum
, 
GLöt
);

8018 (
APIENTRYP
 
	tPFNGLGENFENCESAPPLEPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	t„n˚s
);

8019 (
APIENTRYP
 
	tPFNGLDELETEFENCESAPPLEPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t„n˚s
);

8020 (
APIENTRYP
 
	tPFNGLSETFENCEAPPLEPROC
Ë(
	tGLuöt
 
	t„n˚
);

8021 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISFENCEAPPLEPROC
Ë(
	tGLuöt
 
	t„n˚
);

8022 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLTESTFENCEAPPLEPROC
Ë(
	tGLuöt
 
	t„n˚
);

8023 (
APIENTRYP
 
	tPFNGLFINISHFENCEAPPLEPROC
Ë(
	tGLuöt
 
	t„n˚
);

8024 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLTESTOBJECTAPPLEPROC
Ë(
	tGLíum
 
	tobje˘
, 
	tGLuöt
 
	t«me
);

8025 (
APIENTRYP
 
	tPFNGLFINISHOBJECTAPPLEPROC
Ë(
	tGLíum
 
	tobje˘
, 
	tGLöt
 
	t«me
);

8028 #i‚de‡
GL_APPLE_vîãx_¨øy_obje˘


8029 
	#GL_APPLE_vîãx_¨øy_obje˘
 1

	)

8030 #ifde‡
GL_GLEXT_PROTOTYPES


8031 
GLAPI
 
APIENTRY
 
glBödVîãxAºayAPPLE
 (
GLuöt
);

8032 
GLAPI
 
APIENTRY
 
glDñëeVîãxAºaysAPPLE
 (
GLsizei
, c⁄° 
GLuöt
 *);

8033 
GLAPI
 
APIENTRY
 
glGíVîãxAºaysAPPLE
 (
GLsizei
, 
GLuöt
 *);

8034 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsVîãxAºayAPPLE
 (
GLuöt
);

8036 (
APIENTRYP
 
	tPFNGLBINDVERTEXARRAYAPPLEPROC
Ë(
	tGLuöt
 
	t¨øy
);

8037 (
APIENTRYP
 
	tPFNGLDELETEVERTEXARRAYSAPPLEPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t¨øys
);

8038 (
APIENTRYP
 
	tPFNGLGENVERTEXARRAYSAPPLEPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	t¨øys
);

8039 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISVERTEXARRAYAPPLEPROC
Ë(
	tGLuöt
 
	t¨øy
);

8042 #i‚de‡
GL_APPLE_vîãx_¨øy_ønge


8043 
	#GL_APPLE_vîãx_¨øy_ønge
 1

	)

8044 #ifde‡
GL_GLEXT_PROTOTYPES


8045 
GLAPI
 
APIENTRY
 
glVîãxAºayR™geAPPLE
 (
GLsizei
, 
GLvoid
 *);

8046 
GLAPI
 
APIENTRY
 
glFlushVîãxAºayR™geAPPLE
 (
GLsizei
, 
GLvoid
 *);

8047 
GLAPI
 
APIENTRY
 
glVîãxAºayP¨amëîiAPPLE
 (
GLíum
, 
GLöt
);

8049 (
APIENTRYP
 
	tPFNGLVERTEXARRAYRANGEAPPLEPROC
Ë(
	tGLsizei
 
	tÀngth
, 
	tGLvoid
 *
	tpoöãr
);

8050 (
APIENTRYP
 
	tPFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC
Ë(
	tGLsizei
 
	tÀngth
, 
	tGLvoid
 *
	tpoöãr
);

8051 (
APIENTRYP
 
	tPFNGLVERTEXARRAYPARAMETERIAPPLEPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

8054 #i‚de‡
GL_APPLE_ycb¸_422


8055 
	#GL_APPLE_ycb¸_422
 1

	)

8058 #i‚de‡
GL_S3_s3tc


8059 
	#GL_S3_s3tc
 1

	)

8062 #i‚de‡
GL_ATI_døw_buf„rs


8063 
	#GL_ATI_døw_buf„rs
 1

	)

8064 #ifde‡
GL_GLEXT_PROTOTYPES


8065 
GLAPI
 
APIENTRY
 
glDøwBuf„rsATI
 (
GLsizei
, c⁄° 
GLíum
 *);

8067 (
APIENTRYP
 
	tPFNGLDRAWBUFFERSATIPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLíum
 *
	tbufs
);

8070 #i‚de‡
GL_ATI_pixñ_f‹m©_Êﬂt


8071 
	#GL_ATI_pixñ_f‹m©_Êﬂt
 1

	)

8077 #i‚de‡
GL_ATI_ãxtuª_ív_comböe3


8078 
	#GL_ATI_ãxtuª_ív_comböe3
 1

	)

8081 #i‚de‡
GL_ATI_ãxtuª_Êﬂt


8082 
	#GL_ATI_ãxtuª_Êﬂt
 1

	)

8085 #i‚de‡
GL_NV_Êﬂt_buf„r


8086 
	#GL_NV_Êﬂt_buf„r
 1

	)

8089 #i‚de‡
GL_NV_‰agmít_¥ogøm


8090 
	#GL_NV_‰agmít_¥ogøm
 1

	)

8092 #ifde‡
GL_GLEXT_PROTOTYPES


8093 
GLAPI
 
APIENTRY
 
glProgømNamedP¨amëî4fNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLubyã
 *, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

8094 
GLAPI
 
APIENTRY
 
glProgømNamedP¨amëî4dNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLubyã
 *, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

8095 
GLAPI
 
APIENTRY
 
glProgømNamedP¨amëî4fvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLubyã
 *, c⁄° 
GLÊﬂt
 *);

8096 
GLAPI
 
APIENTRY
 
glProgømNamedP¨amëî4dvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLubyã
 *, c⁄° 
GLdoubÀ
 *);

8097 
GLAPI
 
APIENTRY
 
glGëProgømNamedP¨amëîfvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLubyã
 *, 
GLÊﬂt
 *);

8098 
GLAPI
 
APIENTRY
 
glGëProgømNamedP¨amëîdvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLubyã
 *, 
GLdoubÀ
 *);

8100 (
APIENTRYP
 
	tPFNGLPROGRAMNAMEDPARAMETER4FNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 *
	t«me
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

8101 (
APIENTRYP
 
	tPFNGLPROGRAMNAMEDPARAMETER4DNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 *
	t«me
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

8102 (
APIENTRYP
 
	tPFNGLPROGRAMNAMEDPARAMETER4FVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 *
	t«me
, c⁄° 
	tGLÊﬂt
 *
	tv
);

8103 (
APIENTRYP
 
	tPFNGLPROGRAMNAMEDPARAMETER4DVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 *
	t«me
, c⁄° 
	tGLdoubÀ
 *
	tv
);

8104 (
APIENTRYP
 
	tPFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 *
	t«me
, 
	tGLÊﬂt
 *
	t∑øms
);

8105 (
APIENTRYP
 
	tPFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 *
	t«me
, 
	tGLdoubÀ
 *
	t∑øms
);

8108 #i‚de‡
GL_NV_hÆf_Êﬂt


8109 
	#GL_NV_hÆf_Êﬂt
 1

	)

8110 #ifde‡
GL_GLEXT_PROTOTYPES


8111 
GLAPI
 
APIENTRY
 
glVîãx2hNV
 (
GLhÆfNV
, GLhalfNV);

8112 
GLAPI
 
APIENTRY
 
glVîãx2hvNV
 (c⁄° 
GLhÆfNV
 *);

8113 
GLAPI
 
APIENTRY
 
glVîãx3hNV
 (
GLhÆfNV
, GLhalfNV, GLhalfNV);

8114 
GLAPI
 
APIENTRY
 
glVîãx3hvNV
 (c⁄° 
GLhÆfNV
 *);

8115 
GLAPI
 
APIENTRY
 
glVîãx4hNV
 (
GLhÆfNV
, GLhalfNV, GLhalfNV, GLhalfNV);

8116 
GLAPI
 
APIENTRY
 
glVîãx4hvNV
 (c⁄° 
GLhÆfNV
 *);

8117 
GLAPI
 
APIENTRY
 
glN‹mÆ3hNV
 (
GLhÆfNV
, GLhalfNV, GLhalfNV);

8118 
GLAPI
 
APIENTRY
 
glN‹mÆ3hvNV
 (c⁄° 
GLhÆfNV
 *);

8119 
GLAPI
 
APIENTRY
 
glCﬁ‹3hNV
 (
GLhÆfNV
, GLhalfNV, GLhalfNV);

8120 
GLAPI
 
APIENTRY
 
glCﬁ‹3hvNV
 (c⁄° 
GLhÆfNV
 *);

8121 
GLAPI
 
APIENTRY
 
glCﬁ‹4hNV
 (
GLhÆfNV
, GLhalfNV, GLhalfNV, GLhalfNV);

8122 
GLAPI
 
APIENTRY
 
glCﬁ‹4hvNV
 (c⁄° 
GLhÆfNV
 *);

8123 
GLAPI
 
APIENTRY
 
glTexCo‹d1hNV
 (
GLhÆfNV
);

8124 
GLAPI
 
APIENTRY
 
glTexCo‹d1hvNV
 (c⁄° 
GLhÆfNV
 *);

8125 
GLAPI
 
APIENTRY
 
glTexCo‹d2hNV
 (
GLhÆfNV
, GLhalfNV);

8126 
GLAPI
 
APIENTRY
 
glTexCo‹d2hvNV
 (c⁄° 
GLhÆfNV
 *);

8127 
GLAPI
 
APIENTRY
 
glTexCo‹d3hNV
 (
GLhÆfNV
, GLhalfNV, GLhalfNV);

8128 
GLAPI
 
APIENTRY
 
glTexCo‹d3hvNV
 (c⁄° 
GLhÆfNV
 *);

8129 
GLAPI
 
APIENTRY
 
glTexCo‹d4hNV
 (
GLhÆfNV
, GLhalfNV, GLhalfNV, GLhalfNV);

8130 
GLAPI
 
APIENTRY
 
glTexCo‹d4hvNV
 (c⁄° 
GLhÆfNV
 *);

8131 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1hNV
 (
GLíum
, 
GLhÆfNV
);

8132 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1hvNV
 (
GLíum
, c⁄° 
GLhÆfNV
 *);

8133 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2hNV
 (
GLíum
, 
GLhÆfNV
, GLhalfNV);

8134 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2hvNV
 (
GLíum
, c⁄° 
GLhÆfNV
 *);

8135 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3hNV
 (
GLíum
, 
GLhÆfNV
, GLhalfNV, GLhalfNV);

8136 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3hvNV
 (
GLíum
, c⁄° 
GLhÆfNV
 *);

8137 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4hNV
 (
GLíum
, 
GLhÆfNV
, GLhalfNV, GLhalfNV, GLhalfNV);

8138 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4hvNV
 (
GLíum
, c⁄° 
GLhÆfNV
 *);

8139 
GLAPI
 
APIENTRY
 
glFogCo‹dhNV
 (
GLhÆfNV
);

8140 
GLAPI
 
APIENTRY
 
glFogCo‹dhvNV
 (c⁄° 
GLhÆfNV
 *);

8141 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3hNV
 (
GLhÆfNV
, GLhalfNV, GLhalfNV);

8142 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3hvNV
 (c⁄° 
GLhÆfNV
 *);

8143 
GLAPI
 
APIENTRY
 
glVîãxWeighthNV
 (
GLhÆfNV
);

8144 
GLAPI
 
APIENTRY
 
glVîãxWeighthvNV
 (c⁄° 
GLhÆfNV
 *);

8145 
GLAPI
 
APIENTRY
 
glVîãxAârib1hNV
 (
GLuöt
, 
GLhÆfNV
);

8146 
GLAPI
 
APIENTRY
 
glVîãxAârib1hvNV
 (
GLuöt
, c⁄° 
GLhÆfNV
 *);

8147 
GLAPI
 
APIENTRY
 
glVîãxAârib2hNV
 (
GLuöt
, 
GLhÆfNV
, GLhalfNV);

8148 
GLAPI
 
APIENTRY
 
glVîãxAârib2hvNV
 (
GLuöt
, c⁄° 
GLhÆfNV
 *);

8149 
GLAPI
 
APIENTRY
 
glVîãxAârib3hNV
 (
GLuöt
, 
GLhÆfNV
, GLhalfNV, GLhalfNV);

8150 
GLAPI
 
APIENTRY
 
glVîãxAârib3hvNV
 (
GLuöt
, c⁄° 
GLhÆfNV
 *);

8151 
GLAPI
 
APIENTRY
 
glVîãxAârib4hNV
 (
GLuöt
, 
GLhÆfNV
, GLhalfNV, GLhalfNV, GLhalfNV);

8152 
GLAPI
 
APIENTRY
 
glVîãxAârib4hvNV
 (
GLuöt
, c⁄° 
GLhÆfNV
 *);

8153 
GLAPI
 
APIENTRY
 
glVîãxAâribs1hvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLhÆfNV
 *);

8154 
GLAPI
 
APIENTRY
 
glVîãxAâribs2hvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLhÆfNV
 *);

8155 
GLAPI
 
APIENTRY
 
glVîãxAâribs3hvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLhÆfNV
 *);

8156 
GLAPI
 
APIENTRY
 
glVîãxAâribs4hvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLhÆfNV
 *);

8158 (
APIENTRYP
 
	tPFNGLVERTEX2HNVPROC
Ë(
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
);

8159 (
APIENTRYP
 
	tPFNGLVERTEX2HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8160 (
APIENTRYP
 
	tPFNGLVERTEX3HNVPROC
Ë(
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
, GLhÆfNV 
	tz
);

8161 (
APIENTRYP
 
	tPFNGLVERTEX3HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8162 (
APIENTRYP
 
	tPFNGLVERTEX4HNVPROC
Ë(
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
, GLhÆfNV 
	tz
, GLhÆfNV 
	tw
);

8163 (
APIENTRYP
 
	tPFNGLVERTEX4HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8164 (
APIENTRYP
 
	tPFNGLNORMAL3HNVPROC
Ë(
	tGLhÆfNV
 
	tnx
, GLhÆfNV 
	tny
, GLhÆfNV 
	tnz
);

8165 (
APIENTRYP
 
	tPFNGLNORMAL3HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8166 (
APIENTRYP
 
	tPFNGLCOLOR3HNVPROC
Ë(
	tGLhÆfNV
 
	tªd
, GLhÆfNV 
	tgªí
, GLhÆfNV 
	tblue
);

8167 (
APIENTRYP
 
	tPFNGLCOLOR3HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8168 (
APIENTRYP
 
	tPFNGLCOLOR4HNVPROC
Ë(
	tGLhÆfNV
 
	tªd
, GLhÆfNV 
	tgªí
, GLhÆfNV 
	tblue
, GLhÆfNV 
	tÆpha
);

8169 (
APIENTRYP
 
	tPFNGLCOLOR4HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8170 (
APIENTRYP
 
	tPFNGLTEXCOORD1HNVPROC
Ë(
	tGLhÆfNV
 
	ts
);

8171 (
APIENTRYP
 
	tPFNGLTEXCOORD1HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8172 (
APIENTRYP
 
	tPFNGLTEXCOORD2HNVPROC
Ë(
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
);

8173 (
APIENTRYP
 
	tPFNGLTEXCOORD2HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8174 (
APIENTRYP
 
	tPFNGLTEXCOORD3HNVPROC
Ë(
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
, GLhÆfNV 
	tr
);

8175 (
APIENTRYP
 
	tPFNGLTEXCOORD3HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8176 (
APIENTRYP
 
	tPFNGLTEXCOORD4HNVPROC
Ë(
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
, GLhÆfNV 
	tr
, GLhÆfNV 
	tq
);

8177 (
APIENTRYP
 
	tPFNGLTEXCOORD4HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8178 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1HNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLhÆfNV
 
	ts
);

8179 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1HVNVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8180 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2HNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
);

8181 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2HVNVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8182 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3HNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
, GLhÆfNV 
	tr
);

8183 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3HVNVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8184 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4HNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
, GLhÆfNV 
	tr
, GLhÆfNV 
	tq
);

8185 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4HVNVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8186 (
APIENTRYP
 
	tPFNGLFOGCOORDHNVPROC
Ë(
	tGLhÆfNV
 
	tfog
);

8187 (
APIENTRYP
 
	tPFNGLFOGCOORDHVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tfog
);

8188 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3HNVPROC
Ë(
	tGLhÆfNV
 
	tªd
, GLhÆfNV 
	tgªí
, GLhÆfNV 
	tblue
);

8189 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8190 (
APIENTRYP
 
	tPFNGLVERTEXWEIGHTHNVPROC
Ë(
	tGLhÆfNV
 
	tweight
);

8191 (
APIENTRYP
 
	tPFNGLVERTEXWEIGHTHVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tweight
);

8192 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1HNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLhÆfNV
 
	tx
);

8193 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1HVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8194 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2HNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
);

8195 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2HVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8196 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3HNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
, GLhÆfNV 
	tz
);

8197 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3HVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8198 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4HNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
, GLhÆfNV 
	tz
, GLhÆfNV 
	tw
);

8199 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4HVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8200 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS1HVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8201 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS2HVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8202 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS3HVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8203 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS4HVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8206 #i‚de‡
GL_NV_pixñ_d©a_ønge


8207 
	#GL_NV_pixñ_d©a_ønge
 1

	)

8208 #ifde‡
GL_GLEXT_PROTOTYPES


8209 
GLAPI
 
APIENTRY
 
glPixñD©aR™geNV
 (
GLíum
, 
GLsizei
, 
GLvoid
 *);

8210 
GLAPI
 
APIENTRY
 
glFlushPixñD©aR™geNV
 (
GLíum
);

8212 (
APIENTRYP
 
	tPFNGLPIXELDATARANGENVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tÀngth
, 
	tGLvoid
 *
	tpoöãr
);

8213 (
APIENTRYP
 
	tPFNGLFLUSHPIXELDATARANGENVPROC
Ë(
	tGLíum
 
	tèrgë
);

8216 #i‚de‡
GL_NV_¥imôive_ª°¨t


8217 
	#GL_NV_¥imôive_ª°¨t
 1

	)

8218 #ifde‡
GL_GLEXT_PROTOTYPES


8219 
GLAPI
 
APIENTRY
 
glPrimôiveRe°¨tNV
 ();

8220 
GLAPI
 
APIENTRY
 
glPrimôiveRe°¨tIndexNV
 (
GLuöt
);

8222 (
APIENTRYP
 
	tPFNGLPRIMITIVERESTARTNVPROC
) ();

8223 (
APIENTRYP
 
	tPFNGLPRIMITIVERESTARTINDEXNVPROC
Ë(
	tGLuöt
 
	tödex
);

8226 #i‚de‡
GL_NV_ãxtuª_ex∑nd_n‹mÆ


8227 
	#GL_NV_ãxtuª_ex∑nd_n‹mÆ
 1

	)

8230 #i‚de‡
GL_NV_vîãx_¥ogøm2


8231 
	#GL_NV_vîãx_¥ogøm2
 1

	)

8234 #i‚de‡
GL_ATI_m≠_obje˘_buf„r


8235 
	#GL_ATI_m≠_obje˘_buf„r
 1

	)

8236 #ifde‡
GL_GLEXT_PROTOTYPES


8237 
GLAPI
 
GLvoid
* 
APIENTRY
 
glM≠Obje˘Buf„rATI
 (
GLuöt
);

8238 
GLAPI
 
APIENTRY
 
glUnm≠Obje˘Buf„rATI
 (
GLuöt
);

8240 
	gGLvoid
* (
	tAPIENTRYP
 
	tPFNGLMAPOBJECTBUFFERATIPROC
Ë(
	tGLuöt
 
	tbuf„r
);

8241 (
APIENTRYP
 
	tPFNGLUNMAPOBJECTBUFFERATIPROC
Ë(
	tGLuöt
 
	tbuf„r
);

8244 #i‚de‡
GL_ATI_£∑øã_°ícû


8245 
	#GL_ATI_£∑øã_°ícû
 1

	)

8246 #ifde‡
GL_GLEXT_PROTOTYPES


8247 
GLAPI
 
APIENTRY
 
glSãncûOpSï¨©eATI
 (
GLíum
, GLenum, GLenum, GLenum);

8248 
GLAPI
 
APIENTRY
 
glSãncûFuncSï¨©eATI
 (
GLíum
, GLíum, 
GLöt
, 
GLuöt
);

8250 (
APIENTRYP
 
	tPFNGLSTENCILOPSEPARATEATIPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tsÁû
, GLíum 
	tdpÁû
, GLíum 
	tdµass
);

8251 (
APIENTRYP
 
	tPFNGLSTENCILFUNCSEPARATEATIPROC
Ë(
	tGLíum
 
	t‰⁄tfunc
, GLíum 
	tbackfunc
, 
	tGLöt
 
	tªf
, 
	tGLuöt
 
	tmask
);

8254 #i‚de‡
GL_ATI_vîãx_©åib_¨øy_obje˘


8255 
	#GL_ATI_vîãx_©åib_¨øy_obje˘
 1

	)

8256 #ifde‡
GL_GLEXT_PROTOTYPES


8257 
GLAPI
 
APIENTRY
 
glVîãxAâribAºayObje˘ATI
 (
GLuöt
, 
GLöt
, 
GLíum
, 
GLboﬁón
, 
GLsizei
, GLuint, GLuint);

8258 
GLAPI
 
APIENTRY
 
glGëVîãxAâribAºayObje˘fvATI
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

8259 
GLAPI
 
APIENTRY
 
glGëVîãxAâribAºayObje˘ivATI
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

8261 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBARRAYOBJECTATIPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLboﬁón
 
	tn‹mÆized
, 
	tGLsizei
 
	t°ride
, GLuöà
	tbuf„r
, GLuöà
	toff£t
);

8262 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

8263 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

8266 #i‚de‡
GL_OES_ªad_f‹m©


8267 
	#GL_OES_ªad_f‹m©
 1

	)

8270 #i‚de‡
GL_EXT_dïth_bounds_ã°


8271 
	#GL_EXT_dïth_bounds_ã°
 1

	)

8272 #ifde‡
GL_GLEXT_PROTOTYPES


8273 
GLAPI
 
APIENTRY
 
glDïthBoundsEXT
 (
GL˛ampd
, GLclampd);

8275 (
APIENTRYP
 
	tPFNGLDEPTHBOUNDSEXTPROC
Ë(
	tGL˛ampd
 
	tzmö
, GL˛ampd 
	tzmax
);

8278 #i‚de‡
GL_EXT_ãxtuª_múr‹_˛amp


8279 
	#GL_EXT_ãxtuª_múr‹_˛amp
 1

	)

8282 #i‚de‡
GL_EXT_bÀnd_equ©i⁄_£∑øã


8283 
	#GL_EXT_bÀnd_equ©i⁄_£∑øã
 1

	)

8284 #ifde‡
GL_GLEXT_PROTOTYPES


8285 
GLAPI
 
APIENTRY
 
glBÀndEqu©i⁄Sï¨©eEXT
 (
GLíum
, GLenum);

8287 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONSEPARATEEXTPROC
Ë(
	tGLíum
 
	tmodeRGB
, GLíum 
	tmodeAÕha
);

8290 #i‚de‡
GL_MESA_∑ck_övît


8291 
	#GL_MESA_∑ck_övît
 1

	)

8294 #i‚de‡
GL_MESA_ycb¸_ãxtuª


8295 
	#GL_MESA_ycb¸_ãxtuª
 1

	)

8298 #i‚de‡
GL_EXT_pixñ_buf„r_obje˘


8299 
	#GL_EXT_pixñ_buf„r_obje˘
 1

	)

8302 #i‚de‡
GL_NV_‰agmít_¥ogøm_›ti⁄


8303 
	#GL_NV_‰agmít_¥ogøm_›ti⁄
 1

	)

8306 #i‚de‡
GL_NV_‰agmít_¥ogøm2


8307 
	#GL_NV_‰agmít_¥ogøm2
 1

	)

8310 #i‚de‡
GL_NV_vîãx_¥ogøm2_›ti⁄


8311 
	#GL_NV_vîãx_¥ogøm2_›ti⁄
 1

	)

8314 #i‚de‡
GL_NV_vîãx_¥ogøm3


8315 
	#GL_NV_vîãx_¥ogøm3
 1

	)

8318 #i‚de‡
GL_EXT_‰amebuf„r_obje˘


8319 
	#GL_EXT_‰amebuf„r_obje˘
 1

	)

8320 #ifde‡
GL_GLEXT_PROTOTYPES


8321 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsRídîbuf„rEXT
 (
GLuöt
);

8322 
GLAPI
 
APIENTRY
 
glBödRídîbuf„rEXT
 (
GLíum
, 
GLuöt
);

8323 
GLAPI
 
APIENTRY
 
glDñëeRídîbuf„rsEXT
 (
GLsizei
, c⁄° 
GLuöt
 *);

8324 
GLAPI
 
APIENTRY
 
glGíRídîbuf„rsEXT
 (
GLsizei
, 
GLuöt
 *);

8325 
GLAPI
 
APIENTRY
 
glRídîbuf„rSt‹ageEXT
 (
GLíum
, GLíum, 
GLsizei
, GLsizei);

8326 
GLAPI
 
APIENTRY
 
glGëRídîbuf„rP¨amëîivEXT
 (
GLíum
, GLíum, 
GLöt
 *);

8327 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsFømebuf„rEXT
 (
GLuöt
);

8328 
GLAPI
 
APIENTRY
 
glBödFømebuf„rEXT
 (
GLíum
, 
GLuöt
);

8329 
GLAPI
 
APIENTRY
 
glDñëeFømebuf„rsEXT
 (
GLsizei
, c⁄° 
GLuöt
 *);

8330 
GLAPI
 
APIENTRY
 
glGíFømebuf„rsEXT
 (
GLsizei
, 
GLuöt
 *);

8331 
GLAPI
 
GLíum
 
APIENTRY
 
glCheckFømebuf„rSètusEXT
 (GLenum);

8332 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuª1DEXT
 (
GLíum
, GLíum, GLíum, 
GLuöt
, 
GLöt
);

8333 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuª2DEXT
 (
GLíum
, GLíum, GLíum, 
GLuöt
, 
GLöt
);

8334 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuª3DEXT
 (
GLíum
, GLíum, GLíum, 
GLuöt
, 
GLöt
, GLint);

8335 
GLAPI
 
APIENTRY
 
glFømebuf„rRídîbuf„rEXT
 (
GLíum
, GLíum, GLíum, 
GLuöt
);

8336 
GLAPI
 
APIENTRY
 
glGëFømebuf„rAâachmítP¨amëîivEXT
 (
GLíum
, GLíum, GLíum, 
GLöt
 *);

8337 
GLAPI
 
APIENTRY
 
glGíî©eMùm≠EXT
 (
GLíum
);

8339 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISRENDERBUFFEREXTPROC
Ë(
	tGLuöt
 
	tªndîbuf„r
);

8340 (
APIENTRYP
 
	tPFNGLBINDRENDERBUFFEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tªndîbuf„r
);

8341 (
APIENTRYP
 
	tPFNGLDELETERENDERBUFFERSEXTPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tªndîbuf„rs
);

8342 (
APIENTRYP
 
	tPFNGLGENRENDERBUFFERSEXTPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tªndîbuf„rs
);

8343 (
APIENTRYP
 
	tPFNGLRENDERBUFFERSTORAGEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

8344 (
APIENTRYP
 
	tPFNGLGETRENDERBUFFERPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

8345 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISFRAMEBUFFEREXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
);

8346 (
APIENTRYP
 
	tPFNGLBINDFRAMEBUFFEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	t‰amebuf„r
);

8347 (
APIENTRYP
 
	tPFNGLDELETEFRAMEBUFFERSEXTPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t‰amebuf„rs
);

8348 (
APIENTRYP
 
	tPFNGLGENFRAMEBUFFERSEXTPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	t‰amebuf„rs
);

8349 
GLíum
 (
	tAPIENTRYP
 
	tPFNGLCHECKFRAMEBUFFERSTATUSEXTPROC
Ë(
	tGLíum
 
	tèrgë
);

8350 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURE1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tãxèrgë
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

8351 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURE2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tãxèrgë
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

8352 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURE3DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tãxèrgë
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tzoff£t
);

8353 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERRENDERBUFFEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tªndîbuf„π¨gë
, 
	tGLuöt
 
	tªndîbuf„r
);

8354 (
APIENTRYP
 
	tPFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

8355 (
APIENTRYP
 
	tPFNGLGENERATEMIPMAPEXTPROC
Ë(
	tGLíum
 
	tèrgë
);

8358 #i‚de‡
GL_GREMEDY_°rög_m¨kî


8359 
	#GL_GREMEDY_°rög_m¨kî
 1

	)

8360 #ifde‡
GL_GLEXT_PROTOTYPES


8361 
GLAPI
 
APIENTRY
 
glSåögM¨kîGREMEDY
 (
GLsizei
, c⁄° 
GLvoid
 *);

8363 (
APIENTRYP
 
	tPFNGLSTRINGMARKERGREMEDYPROC
Ë(
	tGLsizei
 
	tÀn
, c⁄° 
	tGLvoid
 *
	t°rög
);

8366 #i‚de‡
GL_EXT_∑cked_dïth_°ícû


8367 
	#GL_EXT_∑cked_dïth_°ícû
 1

	)

8370 #i‚de‡
GL_EXT_°ícû_˛ór_èg


8371 
	#GL_EXT_°ícû_˛ór_èg
 1

	)

8372 #ifde‡
GL_GLEXT_PROTOTYPES


8373 
GLAPI
 
APIENTRY
 
glSãncûCÀ¨TagEXT
 (
GLsizei
, 
GLuöt
);

8375 (
APIENTRYP
 
	tPFNGLSTENCILCLEARTAGEXTPROC
Ë(
	tGLsizei
 
	t°ícûTagBôs
, 
	tGLuöt
 
	t°ícûCÀ¨Tag
);

8378 #i‚de‡
GL_EXT_ãxtuª_sRGB


8379 
	#GL_EXT_ãxtuª_sRGB
 1

	)

8382 #i‚de‡
GL_EXT_‰amebuf„r_blô


8383 
	#GL_EXT_‰amebuf„r_blô
 1

	)

8384 #ifde‡
GL_GLEXT_PROTOTYPES


8385 
GLAPI
 
APIENTRY
 
glBlôFømebuf„rEXT
 (
GLöt
, GLöt, GLöt, GLöt, GLöt, GLöt, GLöt, GLöt, 
GLbôfõld
, 
GLíum
);

8387 (
APIENTRYP
 
	tPFNGLBLITFRAMEBUFFEREXTPROC
Ë(
	tGLöt
 
	t§cX0
, GLöà
	t§cY0
, GLöà
	t§cX1
, GLöà
	t§cY1
, GLöà
	td°X0
, GLöà
	td°Y0
, GLöà
	td°X1
, GLöà
	td°Y1
, 
	tGLbôfõld
 
	tmask
, 
	tGLíum
 
	tfûãr
);

8390 #i‚de‡
GL_EXT_‰amebuf„r_mu…ißm∂e


8391 
	#GL_EXT_‰amebuf„r_mu…ißm∂e
 1

	)

8392 #ifde‡
GL_GLEXT_PROTOTYPES


8393 
GLAPI
 
APIENTRY
 
glRídîbuf„rSt‹ageMu…ißm∂eEXT
 (
GLíum
, 
GLsizei
, GLenum, GLsizei, GLsizei);

8395 (
APIENTRYP
 
	tPFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tßm∂es
, GLíum 
	töã∫Æf‹m©
, GLsizeò
	twidth
, GLsizeò
	theight
);

8398 #i‚de‡
GL_MESAX_ãxtuª_°ack


8399 
	#GL_MESAX_ãxtuª_°ack
 1

	)

8402 #i‚de‡
GL_EXT_timî_quîy


8403 
	#GL_EXT_timî_quîy
 1

	)

8404 #ifde‡
GL_GLEXT_PROTOTYPES


8405 
GLAPI
 
APIENTRY
 
glGëQuîyObje˘i64vEXT
 (
GLuöt
, 
GLíum
, 
GLöt64EXT
 *);

8406 
GLAPI
 
APIENTRY
 
glGëQuîyObje˘ui64vEXT
 (
GLuöt
, 
GLíum
, 
GLuöt64EXT
 *);

8408 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTI64VEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt64EXT
 *
	t∑øms
);

8409 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTUI64VEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLuöt64EXT
 *
	t∑øms
);

8412 #i‚de‡
GL_EXT_gpu_¥ogøm_∑ømëîs


8413 
	#GL_EXT_gpu_¥ogøm_∑ømëîs
 1

	)

8414 #ifde‡
GL_GLEXT_PROTOTYPES


8415 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëîs4fvEXT
 (
GLíum
, 
GLuöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

8416 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëîs4fvEXT
 (
GLíum
, 
GLuöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

8418 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERS4FVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

8419 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

8422 #i‚de‡
GL_APPLE_Êush_buf„r_ønge


8423 
	#GL_APPLE_Êush_buf„r_ønge
 1

	)

8424 #ifde‡
GL_GLEXT_PROTOTYPES


8425 
GLAPI
 
APIENTRY
 
glBuf„rP¨amëîiAPPLE
 (
GLíum
, GLíum, 
GLöt
);

8426 
GLAPI
 
APIENTRY
 
glFlushM≠≥dBuf„rR™geAPPLE
 (
GLíum
, 
GLöçå
, 
GLsizeùå
);

8428 (
APIENTRYP
 
	tPFNGLBUFFERPARAMETERIAPPLEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

8429 (
APIENTRYP
 
	tPFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
);

8432 #i‚de‡
GL_NV_gpu_¥ogøm4


8433 
	#GL_NV_gpu_¥ogøm4
 1

	)

8434 #ifde‡
GL_GLEXT_PROTOTYPES


8435 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëîI4iNV
 (
GLíum
, 
GLuöt
, 
GLöt
, GLint, GLint, GLint);

8436 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëîI4ivNV
 (
GLíum
, 
GLuöt
, c⁄° 
GLöt
 *);

8437 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëîsI4ivNV
 (
GLíum
, 
GLuöt
, 
GLsizei
, c⁄° 
GLöt
 *);

8438 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëîI4uiNV
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint, GLuint);

8439 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëîI4uivNV
 (
GLíum
, 
GLuöt
, const GLuint *);

8440 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëîsI4uivNV
 (
GLíum
, 
GLuöt
, 
GLsizei
, const GLuint *);

8441 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëîI4iNV
 (
GLíum
, 
GLuöt
, 
GLöt
, GLint, GLint, GLint);

8442 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëîI4ivNV
 (
GLíum
, 
GLuöt
, c⁄° 
GLöt
 *);

8443 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëîsI4ivNV
 (
GLíum
, 
GLuöt
, 
GLsizei
, c⁄° 
GLöt
 *);

8444 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëîI4uiNV
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint, GLuint);

8445 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëîI4uivNV
 (
GLíum
, 
GLuöt
, const GLuint *);

8446 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëîsI4uivNV
 (
GLíum
, 
GLuöt
, 
GLsizei
, const GLuint *);

8447 
GLAPI
 
APIENTRY
 
glGëProgømLoˇlP¨amëîIivNV
 (
GLíum
, 
GLuöt
, 
GLöt
 *);

8448 
GLAPI
 
APIENTRY
 
glGëProgømLoˇlP¨amëîIuivNV
 (
GLíum
, 
GLuöt
, GLuint *);

8449 
GLAPI
 
APIENTRY
 
glGëProgømEnvP¨amëîIivNV
 (
GLíum
, 
GLuöt
, 
GLöt
 *);

8450 
GLAPI
 
APIENTRY
 
glGëProgømEnvP¨amëîIuivNV
 (
GLíum
, 
GLuöt
, GLuint *);

8452 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERI4INVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

8453 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERI4IVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	t∑øms
);

8454 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLöt
 *
	t∑øms
);

8455 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERI4UINVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
, GLuöà
	tw
);

8456 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	t∑øms
);

8457 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà*
	t∑øms
);

8458 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERI4INVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

8459 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERI4IVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	t∑øms
);

8460 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERSI4IVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLöt
 *
	t∑øms
);

8461 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERI4UINVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
, GLuöà
	tw
);

8462 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERI4UIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	t∑øms
);

8463 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERSI4UIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà*
	t∑øms
);

8464 (
APIENTRYP
 
	tPFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 *
	t∑øms
);

8465 (
APIENTRYP
 
	tPFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà*
	t∑øms
);

8466 (
APIENTRYP
 
	tPFNGLGETPROGRAMENVPARAMETERIIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 *
	t∑øms
);

8467 (
APIENTRYP
 
	tPFNGLGETPROGRAMENVPARAMETERIUIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà*
	t∑øms
);

8470 #i‚de‡
GL_NV_geomëry_¥ogøm4


8471 
	#GL_NV_geomëry_¥ogøm4
 1

	)

8472 #ifde‡
GL_GLEXT_PROTOTYPES


8473 
GLAPI
 
APIENTRY
 
glProgømVîãxLimôNV
 (
GLíum
, 
GLöt
);

8474 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuªEXT
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
);

8475 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuªLayîEXT
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
, GLint);

8476 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuªFa˚EXT
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
, GLenum);

8478 (
APIENTRYP
 
	tPFNGLPROGRAMVERTEXLIMITNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tlimô
);

8479 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTUREEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

8480 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tœyî
);

8481 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTUREFACEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLíum 
	tÁ˚
);

8484 #i‚de‡
GL_EXT_geomëry_shadî4


8485 
	#GL_EXT_geomëry_shadî4
 1

	)

8486 #ifde‡
GL_GLEXT_PROTOTYPES


8487 
GLAPI
 
APIENTRY
 
glProgømP¨amëîiEXT
 (
GLuöt
, 
GLíum
, 
GLöt
);

8489 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETERIEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	tvÆue
);

8492 #i‚de‡
GL_NV_vîãx_¥ogøm4


8493 
	#GL_NV_vîãx_¥ogøm4
 1

	)

8494 #ifde‡
GL_GLEXT_PROTOTYPES


8495 
GLAPI
 
APIENTRY
 
glVîãxAâribI1iEXT
 (
GLuöt
, 
GLöt
);

8496 
GLAPI
 
APIENTRY
 
glVîãxAâribI2iEXT
 (
GLuöt
, 
GLöt
, GLint);

8497 
GLAPI
 
APIENTRY
 
glVîãxAâribI3iEXT
 (
GLuöt
, 
GLöt
, GLint, GLint);

8498 
GLAPI
 
APIENTRY
 
glVîãxAâribI4iEXT
 (
GLuöt
, 
GLöt
, GLint, GLint, GLint);

8499 
GLAPI
 
APIENTRY
 
glVîãxAâribI1uiEXT
 (
GLuöt
, GLuint);

8500 
GLAPI
 
APIENTRY
 
glVîãxAâribI2uiEXT
 (
GLuöt
, GLuint, GLuint);

8501 
GLAPI
 
APIENTRY
 
glVîãxAâribI3uiEXT
 (
GLuöt
, GLuint, GLuint, GLuint);

8502 
GLAPI
 
APIENTRY
 
glVîãxAâribI4uiEXT
 (
GLuöt
, GLuint, GLuint, GLuint, GLuint);

8503 
GLAPI
 
APIENTRY
 
glVîãxAâribI1ivEXT
 (
GLuöt
, c⁄° 
GLöt
 *);

8504 
GLAPI
 
APIENTRY
 
glVîãxAâribI2ivEXT
 (
GLuöt
, c⁄° 
GLöt
 *);

8505 
GLAPI
 
APIENTRY
 
glVîãxAâribI3ivEXT
 (
GLuöt
, c⁄° 
GLöt
 *);

8506 
GLAPI
 
APIENTRY
 
glVîãxAâribI4ivEXT
 (
GLuöt
, c⁄° 
GLöt
 *);

8507 
GLAPI
 
APIENTRY
 
glVîãxAâribI1uivEXT
 (
GLuöt
, const GLuint *);

8508 
GLAPI
 
APIENTRY
 
glVîãxAâribI2uivEXT
 (
GLuöt
, const GLuint *);

8509 
GLAPI
 
APIENTRY
 
glVîãxAâribI3uivEXT
 (
GLuöt
, const GLuint *);

8510 
GLAPI
 
APIENTRY
 
glVîãxAâribI4uivEXT
 (
GLuöt
, const GLuint *);

8511 
GLAPI
 
APIENTRY
 
glVîãxAâribI4bvEXT
 (
GLuöt
, c⁄° 
GLbyã
 *);

8512 
GLAPI
 
APIENTRY
 
glVîãxAâribI4svEXT
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

8513 
GLAPI
 
APIENTRY
 
glVîãxAâribI4ubvEXT
 (
GLuöt
, c⁄° 
GLubyã
 *);

8514 
GLAPI
 
APIENTRY
 
glVîãxAâribI4usvEXT
 (
GLuöt
, c⁄° 
GLush‹t
 *);

8515 
GLAPI
 
APIENTRY
 
glVîãxAâribIPoöãrEXT
 (
GLuöt
, 
GLöt
, 
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

8516 
GLAPI
 
APIENTRY
 
glGëVîãxAâribIivEXT
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

8517 
GLAPI
 
APIENTRY
 
glGëVîãxAâribIuivEXT
 (
GLuöt
, 
GLíum
, GLuint *);

8519 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1IEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
);

8520 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2IEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
);

8521 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3IEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

8522 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4IEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

8523 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1UIEXTPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
);

8524 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2UIEXTPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
);

8525 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3UIEXTPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
);

8526 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4UIEXTPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
, GLuöà
	tw
);

8527 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1IVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

8528 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2IVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

8529 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3IVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

8530 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4IVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

8531 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1UIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

8532 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2UIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

8533 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3UIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

8534 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4UIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

8535 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4BVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 *
	tv
);

8536 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4SVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

8537 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4UBVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 *
	tv
);

8538 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4USVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 *
	tv
);

8539 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBIPOINTEREXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

8540 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

8541 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIUIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, GLuöà*
	t∑øms
);

8544 #i‚de‡
GL_EXT_gpu_shadî4


8545 
	#GL_EXT_gpu_shadî4
 1

	)

8546 #ifde‡
GL_GLEXT_PROTOTYPES


8547 
GLAPI
 
APIENTRY
 
glGëUnif‹muivEXT
 (
GLuöt
, 
GLöt
, GLuint *);

8548 
GLAPI
 
APIENTRY
 
glBödFøgD©aLoˇti⁄EXT
 (
GLuöt
, GLuöt, c⁄° 
GLch¨
 *);

8549 
GLAPI
 
GLöt
 
APIENTRY
 
glGëFøgD©aLoˇti⁄EXT
 (
GLuöt
, c⁄° 
GLch¨
 *);

8550 
GLAPI
 
APIENTRY
 
glUnif‹m1uiEXT
 (
GLöt
, 
GLuöt
);

8551 
GLAPI
 
APIENTRY
 
glUnif‹m2uiEXT
 (
GLöt
, 
GLuöt
, GLuint);

8552 
GLAPI
 
APIENTRY
 
glUnif‹m3uiEXT
 (
GLöt
, 
GLuöt
, GLuint, GLuint);

8553 
GLAPI
 
APIENTRY
 
glUnif‹m4uiEXT
 (
GLöt
, 
GLuöt
, GLuint, GLuint, GLuint);

8554 
GLAPI
 
APIENTRY
 
glUnif‹m1uivEXT
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt
 *);

8555 
GLAPI
 
APIENTRY
 
glUnif‹m2uivEXT
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt
 *);

8556 
GLAPI
 
APIENTRY
 
glUnif‹m3uivEXT
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt
 *);

8557 
GLAPI
 
APIENTRY
 
glUnif‹m4uivEXT
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt
 *);

8559 (
APIENTRYP
 
	tPFNGLGETUNIFORMUIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLuöà*
	t∑øms
);

8560 (
APIENTRYP
 
	tPFNGLBINDFRAGDATALOCATIONEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tcﬁ‹
, c⁄° 
	tGLch¨
 *
	t«me
);

8561 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETFRAGDATALOCATIONEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 *
	t«me
);

8562 (
APIENTRYP
 
	tPFNGLUNIFORM1UIEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
);

8563 (
APIENTRYP
 
	tPFNGLUNIFORM2UIEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
, GLuöà
	tv1
);

8564 (
APIENTRYP
 
	tPFNGLUNIFORM3UIEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
, GLuöà
	tv1
, GLuöà
	tv2
);

8565 (
APIENTRYP
 
	tPFNGLUNIFORM4UIEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
, GLuöà
	tv1
, GLuöà
	tv2
, GLuöà
	tv3
);

8566 (
APIENTRYP
 
	tPFNGLUNIFORM1UIVEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 *
	tvÆue
);

8567 (
APIENTRYP
 
	tPFNGLUNIFORM2UIVEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 *
	tvÆue
);

8568 (
APIENTRYP
 
	tPFNGLUNIFORM3UIVEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 *
	tvÆue
);

8569 (
APIENTRYP
 
	tPFNGLUNIFORM4UIVEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 *
	tvÆue
);

8572 #i‚de‡
GL_EXT_døw_ö°™˚d


8573 
	#GL_EXT_døw_ö°™˚d
 1

	)

8574 #ifde‡
GL_GLEXT_PROTOTYPES


8575 
GLAPI
 
APIENTRY
 
glDøwAºaysIn°™˚dEXT
 (
GLíum
, 
GLöt
, 
GLsizei
, GLsizei);

8576 
GLAPI
 
APIENTRY
 
glDøwEÀmítsIn°™˚dEXT
 (
GLíum
, 
GLsizei
, GLíum, c⁄° 
GLvoid
 *, GLsizei);

8578 (
APIENTRYP
 
	tPFNGLDRAWARRAYSINSTANCEDEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 
	t°¨t
, 
	tGLsizei
 
	tcou¡
, GLsizeò
	t¥imcou¡
);

8579 (
APIENTRYP
 
	tPFNGLDRAWELEMENTSINSTANCEDEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
, GLsizeò
	t¥imcou¡
);

8582 #i‚de‡
GL_EXT_∑cked_Êﬂt


8583 
	#GL_EXT_∑cked_Êﬂt
 1

	)

8586 #i‚de‡
GL_EXT_ãxtuª_¨øy


8587 
	#GL_EXT_ãxtuª_¨øy
 1

	)

8590 #i‚de‡
GL_EXT_ãxtuª_buf„r_obje˘


8591 
	#GL_EXT_ãxtuª_buf„r_obje˘
 1

	)

8592 #ifde‡
GL_GLEXT_PROTOTYPES


8593 
GLAPI
 
APIENTRY
 
glTexBuf„rEXT
 (
GLíum
, GLíum, 
GLuöt
);

8595 (
APIENTRYP
 
	tPFNGLTEXBUFFEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLuöt
 
	tbuf„r
);

8598 #i‚de‡
GL_EXT_ãxtuª_com¥essi⁄_œtc


8599 
	#GL_EXT_ãxtuª_com¥essi⁄_œtc
 1

	)

8602 #i‚de‡
GL_EXT_ãxtuª_com¥essi⁄_rgtc


8603 
	#GL_EXT_ãxtuª_com¥essi⁄_rgtc
 1

	)

8606 #i‚de‡
GL_EXT_ãxtuª_sh¨ed_exp⁄ít


8607 
	#GL_EXT_ãxtuª_sh¨ed_exp⁄ít
 1

	)

8610 #i‚de‡
GL_NV_dïth_buf„r_Êﬂt


8611 
	#GL_NV_dïth_buf„r_Êﬂt
 1

	)

8612 #ifde‡
GL_GLEXT_PROTOTYPES


8613 
GLAPI
 
APIENTRY
 
glDïthR™gedNV
 (
GLdoubÀ
, GLdouble);

8614 
GLAPI
 
APIENTRY
 
glCÀ¨DïthdNV
 (
GLdoubÀ
);

8615 
GLAPI
 
APIENTRY
 
glDïthBoundsdNV
 (
GLdoubÀ
, GLdouble);

8617 (
APIENTRYP
 
	tPFNGLDEPTHRANGEDNVPROC
Ë(
	tGLdoubÀ
 
	tzNór
, GLdoubÀ 
	tzF¨
);

8618 (
APIENTRYP
 
	tPFNGLCLEARDEPTHDNVPROC
Ë(
	tGLdoubÀ
 
	tdïth
);

8619 (
APIENTRYP
 
	tPFNGLDEPTHBOUNDSDNVPROC
Ë(
	tGLdoubÀ
 
	tzmö
, GLdoubÀ 
	tzmax
);

8622 #i‚de‡
GL_NV_‰agmít_¥ogøm4


8623 
	#GL_NV_‰agmít_¥ogøm4
 1

	)

8626 #i‚de‡
GL_NV_‰amebuf„r_mu…ißm∂e_covîage


8627 
	#GL_NV_‰amebuf„r_mu…ißm∂e_covîage
 1

	)

8628 #ifde‡
GL_GLEXT_PROTOTYPES


8629 
GLAPI
 
APIENTRY
 
glRídîbuf„rSt‹ageMu…ißm∂eCovîageNV
 (
GLíum
, 
GLsizei
, GLsizei, GLenum, GLsizei, GLsizei);

8631 (
APIENTRYP
 
	tPFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tcovîageSam∂es
, GLsizeò
	tcﬁ‹Sam∂es
, GLíum 
	töã∫Æf‹m©
, GLsizeò
	twidth
, GLsizeò
	theight
);

8634 #i‚de‡
GL_EXT_‰amebuf„r_sRGB


8635 
	#GL_EXT_‰amebuf„r_sRGB
 1

	)

8638 #i‚de‡
GL_NV_geomëry_shadî4


8639 
	#GL_NV_geomëry_shadî4
 1

	)

8642 #i‚de‡
GL_NV_∑ømëî_buf„r_obje˘


8643 
	#GL_NV_∑ømëî_buf„r_obje˘
 1

	)

8644 #ifde‡
GL_GLEXT_PROTOTYPES


8645 
GLAPI
 
APIENTRY
 
glProgømBuf„rP¨amëîsfvNV
 (
GLíum
, 
GLuöt
, GLuöt, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

8646 
GLAPI
 
APIENTRY
 
glProgømBuf„rP¨amëîsIivNV
 (
GLíum
, 
GLuöt
, GLuöt, 
GLsizei
, c⁄° 
GLöt
 *);

8647 
GLAPI
 
APIENTRY
 
glProgømBuf„rP¨amëîsIuivNV
 (
GLíum
, 
GLuöt
, GLuöt, 
GLsizei
, const GLuint *);

8649 (
APIENTRYP
 
	tPFNGLPROGRAMBUFFERPARAMETERSFVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tbuf„r
, GLuöà
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

8650 (
APIENTRYP
 
	tPFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tbuf„r
, GLuöà
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLöt
 *
	t∑øms
);

8651 (
APIENTRYP
 
	tPFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tbuf„r
, GLuöà
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà*
	t∑øms
);

8654 #i‚de‡
GL_EXT_døw_buf„rs2


8655 
	#GL_EXT_døw_buf„rs2
 1

	)

8656 #ifde‡
GL_GLEXT_PROTOTYPES


8657 
GLAPI
 
APIENTRY
 
glCﬁ‹MaskIndexedEXT
 (
GLuöt
, 
GLboﬁón
, GLboolean, GLboolean, GLboolean);

8658 
GLAPI
 
APIENTRY
 
glGëBoﬁónIndexedvEXT
 (
GLíum
, 
GLuöt
, 
GLboﬁón
 *);

8659 
GLAPI
 
APIENTRY
 
glGëI¡egîIndexedvEXT
 (
GLíum
, 
GLuöt
, 
GLöt
 *);

8660 
GLAPI
 
APIENTRY
 
glE«bÀIndexedEXT
 (
GLíum
, 
GLuöt
);

8661 
GLAPI
 
APIENTRY
 
glDißbÀIndexedEXT
 (
GLíum
, 
GLuöt
);

8662 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsE«bÀdIndexedEXT
 (
GLíum
, 
GLuöt
);

8664 (
APIENTRYP
 
	tPFNGLCOLORMASKINDEXEDEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLboﬁón
 
	tr
, GLboﬁó¿
	tg
, GLboﬁó¿
	tb
, GLboﬁó¿
	ta
);

8665 (
APIENTRYP
 
	tPFNGLGETBOOLEANINDEXEDVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLboﬁón
 *
	td©a
);

8666 (
APIENTRYP
 
	tPFNGLGETINTEGERINDEXEDVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 *
	td©a
);

8667 (
APIENTRYP
 
	tPFNGLENABLEINDEXEDEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
);

8668 (
APIENTRYP
 
	tPFNGLDISABLEINDEXEDEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
);

8669 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISENABLEDINDEXEDEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
);

8672 #i‚de‡
GL_NV_å™sf‹m_„edback


8673 
	#GL_NV_å™sf‹m_„edback
 1

	)

8674 #ifde‡
GL_GLEXT_PROTOTYPES


8675 
GLAPI
 
APIENTRY
 
glBegöTønsf‹mFìdbackNV
 (
GLíum
);

8676 
GLAPI
 
APIENTRY
 
glEndTønsf‹mFìdbackNV
 ();

8677 
GLAPI
 
APIENTRY
 
glTønsf‹mFìdbackAâribsNV
 (
GLuöt
, c⁄° 
GLöt
 *, 
GLíum
);

8678 
GLAPI
 
APIENTRY
 
glBödBuf„rR™geNV
 (
GLíum
, 
GLuöt
, GLuöt, 
GLöçå
, 
GLsizeùå
);

8679 
GLAPI
 
APIENTRY
 
glBödBuf„rOff£tNV
 (
GLíum
, 
GLuöt
, GLuöt, 
GLöçå
);

8680 
GLAPI
 
APIENTRY
 
glBödBuf„rBa£NV
 (
GLíum
, 
GLuöt
, GLuint);

8681 
GLAPI
 
APIENTRY
 
glTønsf‹mFìdbackV¨yögsNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLch¨
* *, 
GLíum
);

8682 
GLAPI
 
APIENTRY
 
glA˘iveV¨yögNV
 (
GLuöt
, c⁄° 
GLch¨
 *);

8683 
GLAPI
 
GLöt
 
APIENTRY
 
glGëV¨yögLoˇti⁄NV
 (
GLuöt
, c⁄° 
GLch¨
 *);

8684 
GLAPI
 
APIENTRY
 
glGëA˘iveV¨yögNV
 (
GLuöt
, GLuöt, 
GLsizei
, GLsizeò*, GLsizeò*, 
GLíum
 *, 
GLch¨
 *);

8685 
GLAPI
 
APIENTRY
 
glGëTønsf‹mFìdbackV¨yögNV
 (
GLuöt
, GLuöt, 
GLöt
 *);

8687 (
APIENTRYP
 
	tPFNGLBEGINTRANSFORMFEEDBACKNVPROC
Ë(
	tGLíum
 
	t¥imôiveMode
);

8688 (
APIENTRYP
 
	tPFNGLENDTRANSFORMFEEDBACKNVPROC
) ();

8689 (
APIENTRYP
 
	tPFNGLTRANSFORMFEEDBACKATTRIBSNVPROC
Ë(
	tGLuöt
 
	tcou¡
, c⁄° 
	tGLöt
 *
	t©åibs
, 
	tGLíum
 
	tbuf„rMode
);

8690 (
APIENTRYP
 
	tPFNGLBINDBUFFERRANGENVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
);

8691 (
APIENTRYP
 
	tPFNGLBINDBUFFEROFFSETNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
, 
	tGLöçå
 
	toff£t
);

8692 (
APIENTRYP
 
	tPFNGLBINDBUFFERBASENVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
);

8693 (
APIENTRYP
 
	tPFNGLTRANSFORMFEEDBACKVARYINGSNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLch¨
* *
	tv¨yögs
, 
	tGLíum
 
	tbuf„rMode
);

8694 (
APIENTRYP
 
	tPFNGLACTIVEVARYINGNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 *
	t«me
);

8695 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETVARYINGLOCATIONNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 *
	t«me
);

8696 (
APIENTRYP
 
	tPFNGLGETACTIVEVARYINGNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, GLsizeò*
	tsize
, 
	tGLíum
 *
	tty≥
, 
	tGLch¨
 *
	t«me
);

8697 (
APIENTRYP
 
	tPFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, 
	tGLöt
 *
	tloˇti⁄
);

8700 #i‚de‡
GL_EXT_bödabÀ_unif‹m


8701 
	#GL_EXT_bödabÀ_unif‹m
 1

	)

8702 #ifde‡
GL_GLEXT_PROTOTYPES


8703 
GLAPI
 
APIENTRY
 
glUnif‹mBuf„rEXT
 (
GLuöt
, 
GLöt
, GLuint);

8704 
GLAPI
 
GLöt
 
APIENTRY
 
glGëUnif‹mBuf„rSizeEXT
 (
GLuöt
, GLint);

8705 
GLAPI
 
GLöçå
 
APIENTRY
 
glGëUnif‹mOff£tEXT
 (
GLuöt
, 
GLöt
);

8707 (
APIENTRYP
 
	tPFNGLUNIFORMBUFFEREXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLuöà
	tbuf„r
);

8708 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETUNIFORMBUFFERSIZEEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
);

8709 
GLöçå
 (
	tAPIENTRYP
 
	tPFNGLGETUNIFORMOFFSETEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
);

8712 #i‚de‡
GL_EXT_ãxtuª_öãgî


8713 
	#GL_EXT_ãxtuª_öãgî
 1

	)

8714 #ifde‡
GL_GLEXT_PROTOTYPES


8715 
GLAPI
 
APIENTRY
 
glTexP¨amëîIivEXT
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

8716 
GLAPI
 
APIENTRY
 
glTexP¨amëîIuivEXT
 (
GLíum
, GLíum, c⁄° 
GLuöt
 *);

8717 
GLAPI
 
APIENTRY
 
glGëTexP¨amëîIivEXT
 (
GLíum
, GLíum, 
GLöt
 *);

8718 
GLAPI
 
APIENTRY
 
glGëTexP¨amëîIuivEXT
 (
GLíum
, GLíum, 
GLuöt
 *);

8719 
GLAPI
 
APIENTRY
 
glCÀ¨Cﬁ‹IiEXT
 (
GLöt
, GLint, GLint, GLint);

8720 
GLAPI
 
APIENTRY
 
glCÀ¨Cﬁ‹IuiEXT
 (
GLuöt
, GLuint, GLuint, GLuint);

8722 (
APIENTRYP
 
	tPFNGLTEXPARAMETERIIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

8723 (
APIENTRYP
 
	tPFNGLTEXPARAMETERIUIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLuöt
 *
	t∑øms
);

8724 (
APIENTRYP
 
	tPFNGLGETTEXPARAMETERIIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

8725 (
APIENTRYP
 
	tPFNGLGETTEXPARAMETERIUIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLuöt
 *
	t∑øms
);

8726 (
APIENTRYP
 
	tPFNGLCLEARCOLORIIEXTPROC
Ë(
	tGLöt
 
	tªd
, GLöà
	tgªí
, GLöà
	tblue
, GLöà
	tÆpha
);

8727 (
APIENTRYP
 
	tPFNGLCLEARCOLORIUIEXTPROC
Ë(
	tGLuöt
 
	tªd
, GLuöà
	tgªí
, GLuöà
	tblue
, GLuöà
	tÆpha
);

8730 #i‚de‡
GL_GREMEDY_‰ame_ãrmö©‹


8731 
	#GL_GREMEDY_‰ame_ãrmö©‹
 1

	)

8732 #ifde‡
GL_GLEXT_PROTOTYPES


8733 
GLAPI
 
APIENTRY
 
glFømeTîmö©‹GREMEDY
 ();

8735 (
APIENTRYP
 
	tPFNGLFRAMETERMINATORGREMEDYPROC
) ();

8738 #i‚de‡
GL_NV_c⁄dôi⁄Æ_ªndî


8739 
	#GL_NV_c⁄dôi⁄Æ_ªndî
 1

	)

8740 #ifde‡
GL_GLEXT_PROTOTYPES


8741 
GLAPI
 
APIENTRY
 
glBegöC⁄dôi⁄ÆRídîNV
 (
GLuöt
, 
GLíum
);

8742 
GLAPI
 
APIENTRY
 
glEndC⁄dôi⁄ÆRídîNV
 ();

8744 (
APIENTRYP
 
	tPFNGLBEGINCONDITIONALRENDERNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tmode
);

8745 (
APIENTRYP
 
	tPFNGLENDCONDITIONALRENDERNVPROC
) ();

8748 #i‚de‡
GL_NV_¥e£¡_video


8749 
	#GL_NV_¥e£¡_video
 1

	)

8750 #ifde‡
GL_GLEXT_PROTOTYPES


8751 
GLAPI
 
APIENTRY
 
glPª£¡FømeKeyedNV
 (
GLuöt
, 
GLuöt64EXT
, GLuöt, GLuöt, 
GLíum
, GLenum, GLuint, GLuint, GLenum, GLuint, GLuint);

8752 
GLAPI
 
APIENTRY
 
glPª£¡FømeDuÆFûlNV
 (
GLuöt
, 
GLuöt64EXT
, GLuöt, GLuöt, 
GLíum
, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint);

8753 
GLAPI
 
APIENTRY
 
glGëVideoivNV
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

8754 
GLAPI
 
APIENTRY
 
glGëVideouivNV
 (
GLuöt
, 
GLíum
, GLuint *);

8755 
GLAPI
 
APIENTRY
 
glGëVideoi64vNV
 (
GLuöt
, 
GLíum
, 
GLöt64EXT
 *);

8756 
GLAPI
 
APIENTRY
 
glGëVideoui64vNV
 (
GLuöt
, 
GLíum
, 
GLuöt64EXT
 *);

8758 (
APIENTRYP
 
	tPFNGLPRESENTFRAMEKEYEDNVPROC
Ë(
	tGLuöt
 
	tvideo_¶Ÿ
, 
	tGLuöt64EXT
 
	tmöPª£¡Time
, GLuöà
	tbegöPª£¡TimeId
, GLuöà
	t¥e£¡Duøti⁄Id
, 
	tGLíum
 
	tty≥
, GLíum 
	tèrgë0
, GLuöà
	tfûl0
, GLuöà
	tkey0
, GLíum 
	tèrgë1
, GLuöà
	tfûl1
, GLuöà
	tkey1
);

8759 (
APIENTRYP
 
	tPFNGLPRESENTFRAMEDUALFILLNVPROC
Ë(
	tGLuöt
 
	tvideo_¶Ÿ
, 
	tGLuöt64EXT
 
	tmöPª£¡Time
, GLuöà
	tbegöPª£¡TimeId
, GLuöà
	t¥e£¡Duøti⁄Id
, 
	tGLíum
 
	tty≥
, GLíum 
	tèrgë0
, GLuöà
	tfûl0
, GLíum 
	tèrgë1
, GLuöà
	tfûl1
, GLíum 
	tèrgë2
, GLuöà
	tfûl2
, GLíum 
	tèrgë3
, GLuöà
	tfûl3
);

8760 (
APIENTRYP
 
	tPFNGLGETVIDEOIVNVPROC
Ë(
	tGLuöt
 
	tvideo_¶Ÿ
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

8761 (
APIENTRYP
 
	tPFNGLGETVIDEOUIVNVPROC
Ë(
	tGLuöt
 
	tvideo_¶Ÿ
, 
	tGLíum
 
	t≤ame
, GLuöà*
	t∑øms
);

8762 (
APIENTRYP
 
	tPFNGLGETVIDEOI64VNVPROC
Ë(
	tGLuöt
 
	tvideo_¶Ÿ
, 
	tGLíum
 
	t≤ame
, 
	tGLöt64EXT
 *
	t∑øms
);

8763 (
APIENTRYP
 
	tPFNGLGETVIDEOUI64VNVPROC
Ë(
	tGLuöt
 
	tvideo_¶Ÿ
, 
	tGLíum
 
	t≤ame
, 
	tGLuöt64EXT
 *
	t∑øms
);

8766 #i‚de‡
GL_EXT_å™sf‹m_„edback


8767 
	#GL_EXT_å™sf‹m_„edback
 1

	)

8768 #ifde‡
GL_GLEXT_PROTOTYPES


8769 
GLAPI
 
APIENTRY
 
glBegöTønsf‹mFìdbackEXT
 (
GLíum
);

8770 
GLAPI
 
APIENTRY
 
glEndTønsf‹mFìdbackEXT
 ();

8771 
GLAPI
 
APIENTRY
 
glBödBuf„rR™geEXT
 (
GLíum
, 
GLuöt
, GLuöt, 
GLöçå
, 
GLsizeùå
);

8772 
GLAPI
 
APIENTRY
 
glBödBuf„rOff£tEXT
 (
GLíum
, 
GLuöt
, GLuöt, 
GLöçå
);

8773 
GLAPI
 
APIENTRY
 
glBödBuf„rBa£EXT
 (
GLíum
, 
GLuöt
, GLuint);

8774 
GLAPI
 
APIENTRY
 
glTønsf‹mFìdbackV¨yögsEXT
 (
GLuöt
, 
GLsizei
, c⁄° 
GLch¨
* *, 
GLíum
);

8775 
GLAPI
 
APIENTRY
 
glGëTønsf‹mFìdbackV¨yögEXT
 (
GLuöt
, GLuöt, 
GLsizei
, GLsizeò*, GLsizeò*, 
GLíum
 *, 
GLch¨
 *);

8777 (
APIENTRYP
 
	tPFNGLBEGINTRANSFORMFEEDBACKEXTPROC
Ë(
	tGLíum
 
	t¥imôiveMode
);

8778 (
APIENTRYP
 
	tPFNGLENDTRANSFORMFEEDBACKEXTPROC
) ();

8779 (
APIENTRYP
 
	tPFNGLBINDBUFFERRANGEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
);

8780 (
APIENTRYP
 
	tPFNGLBINDBUFFEROFFSETEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
, 
	tGLöçå
 
	toff£t
);

8781 (
APIENTRYP
 
	tPFNGLBINDBUFFERBASEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
);

8782 (
APIENTRYP
 
	tPFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLch¨
* *
	tv¨yögs
, 
	tGLíum
 
	tbuf„rMode
);

8783 (
APIENTRYP
 
	tPFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, GLsizeò*
	tsize
, 
	tGLíum
 *
	tty≥
, 
	tGLch¨
 *
	t«me
);

8786 #i‚de‡
GL_EXT_dúe˘_°©e_ac˚ss


8787 
	#GL_EXT_dúe˘_°©e_ac˚ss
 1

	)

8788 #ifde‡
GL_GLEXT_PROTOTYPES


8789 
GLAPI
 
APIENTRY
 
glClõ¡AâribDeÁu…EXT
 (
GLbôfõld
);

8790 
GLAPI
 
APIENTRY
 
glPushClõ¡AâribDeÁu…EXT
 (
GLbôfõld
);

8791 
GLAPI
 
APIENTRY
 
glM©rixLﬂdfEXT
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

8792 
GLAPI
 
APIENTRY
 
glM©rixLﬂddEXT
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

8793 
GLAPI
 
APIENTRY
 
glM©rixMu…fEXT
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

8794 
GLAPI
 
APIENTRY
 
glM©rixMu…dEXT
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

8795 
GLAPI
 
APIENTRY
 
glM©rixLﬂdIdítôyEXT
 (
GLíum
);

8796 
GLAPI
 
APIENTRY
 
glM©rixRŸ©efEXT
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

8797 
GLAPI
 
APIENTRY
 
glM©rixRŸ©edEXT
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

8798 
GLAPI
 
APIENTRY
 
glM©rixSˇÀfEXT
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat);

8799 
GLAPI
 
APIENTRY
 
glM©rixSˇÀdEXT
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble);

8800 
GLAPI
 
APIENTRY
 
glM©rixTøn¶©efEXT
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat);

8801 
GLAPI
 
APIENTRY
 
glM©rixTøn¶©edEXT
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble);

8802 
GLAPI
 
APIENTRY
 
glM©rixFru°umEXT
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);

8803 
GLAPI
 
APIENTRY
 
glM©rixOπhoEXT
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);

8804 
GLAPI
 
APIENTRY
 
glM©rixP›EXT
 (
GLíum
);

8805 
GLAPI
 
APIENTRY
 
glM©rixPushEXT
 (
GLíum
);

8806 
GLAPI
 
APIENTRY
 
glM©rixLﬂdTøn•o£fEXT
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

8807 
GLAPI
 
APIENTRY
 
glM©rixLﬂdTøn•o£dEXT
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

8808 
GLAPI
 
APIENTRY
 
glM©rixMu…Tøn•o£fEXT
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

8809 
GLAPI
 
APIENTRY
 
glM©rixMu…Tøn•o£dEXT
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

8810 
GLAPI
 
APIENTRY
 
glTextuªP¨amëîfEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLÊﬂt
);

8811 
GLAPI
 
APIENTRY
 
glTextuªP¨amëîfvEXT
 (
GLuöt
, 
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

8812 
GLAPI
 
APIENTRY
 
glTextuªP¨amëîiEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLöt
);

8813 
GLAPI
 
APIENTRY
 
glTextuªP¨amëîivEXT
 (
GLuöt
, 
GLíum
, GLíum, c⁄° 
GLöt
 *);

8814 
GLAPI
 
APIENTRY
 
glTextuªImage1DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

8815 
GLAPI
 
APIENTRY
 
glTextuªImage2DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

8816 
GLAPI
 
APIENTRY
 
glTextuªSubImage1DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, 
GLsizei
, GLíum, GLíum, c⁄° 
GLvoid
 *);

8817 
GLAPI
 
APIENTRY
 
glTextuªSubImage2DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

8818 
GLAPI
 
APIENTRY
 
glC›yTextuªImage1DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, GLöt, GLöt, 
GLsizei
, GLint);

8819 
GLAPI
 
APIENTRY
 
glC›yTextuªImage2DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, GLöt, GLöt, 
GLsizei
, GLsizei, GLint);

8820 
GLAPI
 
APIENTRY
 
glC›yTextuªSubImage1DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
);

8821 
GLAPI
 
APIENTRY
 
glC›yTextuªSubImage2DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei);

8822 
GLAPI
 
APIENTRY
 
glGëTextuªImageEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, GLíum, 
GLvoid
 *);

8823 
GLAPI
 
APIENTRY
 
glGëTextuªP¨amëîfvEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLÊﬂt
 *);

8824 
GLAPI
 
APIENTRY
 
glGëTextuªP¨amëîivEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLöt
 *);

8825 
GLAPI
 
APIENTRY
 
glGëTextuªLevñP¨amëîfvEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, 
GLÊﬂt
 *);

8826 
GLAPI
 
APIENTRY
 
glGëTextuªLevñP¨amëîivEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLenum, GLint *);

8827 
GLAPI
 
APIENTRY
 
glTextuªImage3DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLsizei, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

8828 
GLAPI
 
APIENTRY
 
glTextuªSubImage3DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

8829 
GLAPI
 
APIENTRY
 
glC›yTextuªSubImage3DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei);

8830 
GLAPI
 
APIENTRY
 
glMu…iTexP¨amëîfEXT
 (
GLíum
, GLíum, GLíum, 
GLÊﬂt
);

8831 
GLAPI
 
APIENTRY
 
glMu…iTexP¨amëîfvEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLÊﬂt
 *);

8832 
GLAPI
 
APIENTRY
 
glMu…iTexP¨amëîiEXT
 (
GLíum
, GLíum, GLíum, 
GLöt
);

8833 
GLAPI
 
APIENTRY
 
glMu…iTexP¨amëîivEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLöt
 *);

8834 
GLAPI
 
APIENTRY
 
glMu…iTexImage1DEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, 
GLsizei
, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

8835 
GLAPI
 
APIENTRY
 
glMu…iTexImage2DEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

8836 
GLAPI
 
APIENTRY
 
glMu…iTexSubImage1DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, 
GLsizei
, GLíum, GLíum, c⁄° 
GLvoid
 *);

8837 
GLAPI
 
APIENTRY
 
glMu…iTexSubImage2DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, GLöt, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

8838 
GLAPI
 
APIENTRY
 
glC›yMu…iTexImage1DEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, GLöt, GLöt, 
GLsizei
, GLint);

8839 
GLAPI
 
APIENTRY
 
glC›yMu…iTexImage2DEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, GLöt, GLöt, 
GLsizei
, GLsizei, GLint);

8840 
GLAPI
 
APIENTRY
 
glC›yMu…iTexSubImage1DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
);

8841 
GLAPI
 
APIENTRY
 
glC›yMu…iTexSubImage2DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei);

8842 
GLAPI
 
APIENTRY
 
glGëMu…iTexImageEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, GLíum, 
GLvoid
 *);

8843 
GLAPI
 
APIENTRY
 
glGëMu…iTexP¨amëîfvEXT
 (
GLíum
, GLíum, GLíum, 
GLÊﬂt
 *);

8844 
GLAPI
 
APIENTRY
 
glGëMu…iTexP¨amëîivEXT
 (
GLíum
, GLíum, GLíum, 
GLöt
 *);

8845 
GLAPI
 
APIENTRY
 
glGëMu…iTexLevñP¨amëîfvEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, 
GLÊﬂt
 *);

8846 
GLAPI
 
APIENTRY
 
glGëMu…iTexLevñP¨amëîivEXT
 (
GLíum
, GLíum, 
GLöt
, GLenum, GLint *);

8847 
GLAPI
 
APIENTRY
 
glMu…iTexImage3DEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLsizei, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

8848 
GLAPI
 
APIENTRY
 
glMu…iTexSubImage3DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

8849 
GLAPI
 
APIENTRY
 
glC›yMu…iTexSubImage3DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei);

8850 
GLAPI
 
APIENTRY
 
glBödMu…iTextuªEXT
 (
GLíum
, GLíum, 
GLuöt
);

8851 
GLAPI
 
APIENTRY
 
glE«bÀClõ¡SèãIndexedEXT
 (
GLíum
, 
GLuöt
);

8852 
GLAPI
 
APIENTRY
 
glDißbÀClõ¡SèãIndexedEXT
 (
GLíum
, 
GLuöt
);

8853 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹dPoöãrEXT
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, c⁄° 
GLvoid
 *);

8854 
GLAPI
 
APIENTRY
 
glMu…iTexEnvfEXT
 (
GLíum
, GLíum, GLíum, 
GLÊﬂt
);

8855 
GLAPI
 
APIENTRY
 
glMu…iTexEnvfvEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLÊﬂt
 *);

8856 
GLAPI
 
APIENTRY
 
glMu…iTexEnviEXT
 (
GLíum
, GLíum, GLíum, 
GLöt
);

8857 
GLAPI
 
APIENTRY
 
glMu…iTexEnvivEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLöt
 *);

8858 
GLAPI
 
APIENTRY
 
glMu…iTexGídEXT
 (
GLíum
, GLíum, GLíum, 
GLdoubÀ
);

8859 
GLAPI
 
APIENTRY
 
glMu…iTexGídvEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLdoubÀ
 *);

8860 
GLAPI
 
APIENTRY
 
glMu…iTexGífEXT
 (
GLíum
, GLíum, GLíum, 
GLÊﬂt
);

8861 
GLAPI
 
APIENTRY
 
glMu…iTexGífvEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLÊﬂt
 *);

8862 
GLAPI
 
APIENTRY
 
glMu…iTexGíiEXT
 (
GLíum
, GLíum, GLíum, 
GLöt
);

8863 
GLAPI
 
APIENTRY
 
glMu…iTexGíivEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLöt
 *);

8864 
GLAPI
 
APIENTRY
 
glGëMu…iTexEnvfvEXT
 (
GLíum
, GLíum, GLíum, 
GLÊﬂt
 *);

8865 
GLAPI
 
APIENTRY
 
glGëMu…iTexEnvivEXT
 (
GLíum
, GLíum, GLíum, 
GLöt
 *);

8866 
GLAPI
 
APIENTRY
 
glGëMu…iTexGídvEXT
 (
GLíum
, GLíum, GLíum, 
GLdoubÀ
 *);

8867 
GLAPI
 
APIENTRY
 
glGëMu…iTexGífvEXT
 (
GLíum
, GLíum, GLíum, 
GLÊﬂt
 *);

8868 
GLAPI
 
APIENTRY
 
glGëMu…iTexGíivEXT
 (
GLíum
, GLíum, GLíum, 
GLöt
 *);

8869 
GLAPI
 
APIENTRY
 
glGëFlﬂtIndexedvEXT
 (
GLíum
, 
GLuöt
, 
GLÊﬂt
 *);

8870 
GLAPI
 
APIENTRY
 
glGëDoubÀIndexedvEXT
 (
GLíum
, 
GLuöt
, 
GLdoubÀ
 *);

8871 
GLAPI
 
APIENTRY
 
glGëPoöãrIndexedvEXT
 (
GLíum
, 
GLuöt
, 
GLvoid
* *);

8872 
GLAPI
 
APIENTRY
 
glCom¥es£dTextuªImage3DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLsizei, GLöt, GLsizei, c⁄° 
GLvoid
 *);

8873 
GLAPI
 
APIENTRY
 
glCom¥es£dTextuªImage2DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLöt, GLsizei, c⁄° 
GLvoid
 *);

8874 
GLAPI
 
APIENTRY
 
glCom¥es£dTextuªImage1DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLöt, GLsizei, c⁄° 
GLvoid
 *);

8875 
GLAPI
 
APIENTRY
 
glCom¥es£dTextuªSubImage3DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLíum, GLsizei, c⁄° 
GLvoid
 *);

8876 
GLAPI
 
APIENTRY
 
glCom¥es£dTextuªSubImage2DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, 
GLsizei
, GLsizei, GLíum, GLsizei, c⁄° 
GLvoid
 *);

8877 
GLAPI
 
APIENTRY
 
glCom¥es£dTextuªSubImage1DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, 
GLsizei
, GLíum, GLsizei, c⁄° 
GLvoid
 *);

8878 
GLAPI
 
APIENTRY
 
glGëCom¥es£dTextuªImageEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, 
GLvoid
 *);

8879 
GLAPI
 
APIENTRY
 
glCom¥es£dMu…iTexImage3DEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLsizei, GLöt, GLsizei, c⁄° 
GLvoid
 *);

8880 
GLAPI
 
APIENTRY
 
glCom¥es£dMu…iTexImage2DEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLöt, GLsizei, c⁄° 
GLvoid
 *);

8881 
GLAPI
 
APIENTRY
 
glCom¥es£dMu…iTexImage1DEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, 
GLsizei
, GLöt, GLsizei, c⁄° 
GLvoid
 *);

8882 
GLAPI
 
APIENTRY
 
glCom¥es£dMu…iTexSubImage3DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLíum, GLsizei, c⁄° 
GLvoid
 *);

8883 
GLAPI
 
APIENTRY
 
glCom¥es£dMu…iTexSubImage2DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, GLöt, 
GLsizei
, GLsizei, GLíum, GLsizei, c⁄° 
GLvoid
 *);

8884 
GLAPI
 
APIENTRY
 
glCom¥es£dMu…iTexSubImage1DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, 
GLsizei
, GLíum, GLsizei, c⁄° 
GLvoid
 *);

8885 
GLAPI
 
APIENTRY
 
glGëCom¥es£dMu…iTexImageEXT
 (
GLíum
, GLíum, 
GLöt
, 
GLvoid
 *);

8886 
GLAPI
 
APIENTRY
 
glNamedProgømSåögEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLsizei
, c⁄° 
GLvoid
 *);

8887 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëî4dEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

8888 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëî4dvEXT
 (
GLuöt
, 
GLíum
, GLuöt, c⁄° 
GLdoubÀ
 *);

8889 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëî4fEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

8890 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëî4fvEXT
 (
GLuöt
, 
GLíum
, GLuöt, c⁄° 
GLÊﬂt
 *);

8891 
GLAPI
 
APIENTRY
 
glGëNamedProgømLoˇlP¨amëîdvEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLdoubÀ
 *);

8892 
GLAPI
 
APIENTRY
 
glGëNamedProgømLoˇlP¨amëîfvEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLÊﬂt
 *);

8893 
GLAPI
 
APIENTRY
 
glGëNamedProgømivEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLöt
 *);

8894 
GLAPI
 
APIENTRY
 
glGëNamedProgømSåögEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLvoid
 *);

8895 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëîs4fvEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

8896 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëîI4iEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLöt
, GLint, GLint, GLint);

8897 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëîI4ivEXT
 (
GLuöt
, 
GLíum
, GLuöt, c⁄° 
GLöt
 *);

8898 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëîsI4ivEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLsizei
, c⁄° 
GLöt
 *);

8899 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëîI4uiEXT
 (
GLuöt
, 
GLíum
, GLuint, GLuint, GLuint, GLuint, GLuint);

8900 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëîI4uivEXT
 (
GLuöt
, 
GLíum
, GLuint, const GLuint *);

8901 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëîsI4uivEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLsizei
, const GLuint *);

8902 
GLAPI
 
APIENTRY
 
glGëNamedProgømLoˇlP¨amëîIivEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLöt
 *);

8903 
GLAPI
 
APIENTRY
 
glGëNamedProgømLoˇlP¨amëîIuivEXT
 (
GLuöt
, 
GLíum
, GLuint, GLuint *);

8904 
GLAPI
 
APIENTRY
 
glTextuªP¨amëîIivEXT
 (
GLuöt
, 
GLíum
, GLíum, c⁄° 
GLöt
 *);

8905 
GLAPI
 
APIENTRY
 
glTextuªP¨amëîIuivEXT
 (
GLuöt
, 
GLíum
, GLenum, const GLuint *);

8906 
GLAPI
 
APIENTRY
 
glGëTextuªP¨amëîIivEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLöt
 *);

8907 
GLAPI
 
APIENTRY
 
glGëTextuªP¨amëîIuivEXT
 (
GLuöt
, 
GLíum
, GLenum, GLuint *);

8908 
GLAPI
 
APIENTRY
 
glMu…iTexP¨amëîIivEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLöt
 *);

8909 
GLAPI
 
APIENTRY
 
glMu…iTexP¨amëîIuivEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLuöt
 *);

8910 
GLAPI
 
APIENTRY
 
glGëMu…iTexP¨amëîIivEXT
 (
GLíum
, GLíum, GLíum, 
GLöt
 *);

8911 
GLAPI
 
APIENTRY
 
glGëMu…iTexP¨amëîIuivEXT
 (
GLíum
, GLíum, GLíum, 
GLuöt
 *);

8912 
GLAPI
 
APIENTRY
 
glProgømUnif‹m1fEXT
 (
GLuöt
, 
GLöt
, 
GLÊﬂt
);

8913 
GLAPI
 
APIENTRY
 
glProgømUnif‹m2fEXT
 (
GLuöt
, 
GLöt
, 
GLÊﬂt
, GLfloat);

8914 
GLAPI
 
APIENTRY
 
glProgømUnif‹m3fEXT
 (
GLuöt
, 
GLöt
, 
GLÊﬂt
, GLfloat, GLfloat);

8915 
GLAPI
 
APIENTRY
 
glProgømUnif‹m4fEXT
 (
GLuöt
, 
GLöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

8916 
GLAPI
 
APIENTRY
 
glProgømUnif‹m1iEXT
 (
GLuöt
, 
GLöt
, GLint);

8917 
GLAPI
 
APIENTRY
 
glProgømUnif‹m2iEXT
 (
GLuöt
, 
GLöt
, GLint, GLint);

8918 
GLAPI
 
APIENTRY
 
glProgømUnif‹m3iEXT
 (
GLuöt
, 
GLöt
, GLint, GLint, GLint);

8919 
GLAPI
 
APIENTRY
 
glProgømUnif‹m4iEXT
 (
GLuöt
, 
GLöt
, GLint, GLint, GLint, GLint);

8920 
GLAPI
 
APIENTRY
 
glProgømUnif‹m1fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

8921 
GLAPI
 
APIENTRY
 
glProgømUnif‹m2fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

8922 
GLAPI
 
APIENTRY
 
glProgømUnif‹m3fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

8923 
GLAPI
 
APIENTRY
 
glProgømUnif‹m4fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

8924 
GLAPI
 
APIENTRY
 
glProgømUnif‹m1ivEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, const GLint *);

8925 
GLAPI
 
APIENTRY
 
glProgømUnif‹m2ivEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, const GLint *);

8926 
GLAPI
 
APIENTRY
 
glProgømUnif‹m3ivEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, const GLint *);

8927 
GLAPI
 
APIENTRY
 
glProgømUnif‹m4ivEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, const GLint *);

8928 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix2fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8929 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix3fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8930 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix4fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8931 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix2x3fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8932 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix3x2fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8933 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix2x4fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8934 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix4x2fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8935 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix3x4fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8936 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix4x3fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8937 
GLAPI
 
APIENTRY
 
glProgømUnif‹m1uiEXT
 (
GLuöt
, 
GLöt
, GLuint);

8938 
GLAPI
 
APIENTRY
 
glProgømUnif‹m2uiEXT
 (
GLuöt
, 
GLöt
, GLuint, GLuint);

8939 
GLAPI
 
APIENTRY
 
glProgømUnif‹m3uiEXT
 (
GLuöt
, 
GLöt
, GLuint, GLuint, GLuint);

8940 
GLAPI
 
APIENTRY
 
glProgømUnif‹m4uiEXT
 (
GLuöt
, 
GLöt
, GLuint, GLuint, GLuint, GLuint);

8941 
GLAPI
 
APIENTRY
 
glProgømUnif‹m1uivEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, const GLuint *);

8942 
GLAPI
 
APIENTRY
 
glProgømUnif‹m2uivEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, const GLuint *);

8943 
GLAPI
 
APIENTRY
 
glProgømUnif‹m3uivEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, const GLuint *);

8944 
GLAPI
 
APIENTRY
 
glProgømUnif‹m4uivEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, const GLuint *);

8945 
GLAPI
 
APIENTRY
 
glNamedBuf„rD©aEXT
 (
GLuöt
, 
GLsizeùå
, c⁄° 
GLvoid
 *, 
GLíum
);

8946 
GLAPI
 
APIENTRY
 
glNamedBuf„rSubD©aEXT
 (
GLuöt
, 
GLöçå
, 
GLsizeùå
, c⁄° 
GLvoid
 *);

8947 
GLAPI
 
GLvoid
* 
APIENTRY
 
glM≠NamedBuf„rEXT
 (
GLuöt
, 
GLíum
);

8948 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glUnm≠NamedBuf„rEXT
 (
GLuöt
);

8949 
GLAPI
 
APIENTRY
 
glGëNamedBuf„rP¨amëîivEXT
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

8950 
GLAPI
 
APIENTRY
 
glGëNamedBuf„rPoöãrvEXT
 (
GLuöt
, 
GLíum
, 
GLvoid
* *);

8951 
GLAPI
 
APIENTRY
 
glGëNamedBuf„rSubD©aEXT
 (
GLuöt
, 
GLöçå
, 
GLsizeùå
, 
GLvoid
 *);

8952 
GLAPI
 
APIENTRY
 
glTextuªBuf„rEXT
 (
GLuöt
, 
GLíum
, GLenum, GLuint);

8953 
GLAPI
 
APIENTRY
 
glMu…iTexBuf„rEXT
 (
GLíum
, GLíum, GLíum, 
GLuöt
);

8954 
GLAPI
 
APIENTRY
 
glNamedRídîbuf„rSt‹ageEXT
 (
GLuöt
, 
GLíum
, 
GLsizei
, GLsizei);

8955 
GLAPI
 
APIENTRY
 
glGëNamedRídîbuf„rP¨amëîivEXT
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

8956 
GLAPI
 
GLíum
 
APIENTRY
 
glCheckNamedFømebuf„rSètusEXT
 (
GLuöt
, GLenum);

8957 
GLAPI
 
APIENTRY
 
glNamedFømebuf„rTextuª1DEXT
 (
GLuöt
, 
GLíum
, GLíum, GLuöt, 
GLöt
);

8958 
GLAPI
 
APIENTRY
 
glNamedFømebuf„rTextuª2DEXT
 (
GLuöt
, 
GLíum
, GLíum, GLuöt, 
GLöt
);

8959 
GLAPI
 
APIENTRY
 
glNamedFømebuf„rTextuª3DEXT
 (
GLuöt
, 
GLíum
, GLíum, GLuöt, 
GLöt
, GLint);

8960 
GLAPI
 
APIENTRY
 
glNamedFømebuf„rRídîbuf„rEXT
 (
GLuöt
, 
GLíum
, GLenum, GLuint);

8961 
GLAPI
 
APIENTRY
 
glGëNamedFømebuf„rAâachmítP¨amëîivEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLöt
 *);

8962 
GLAPI
 
APIENTRY
 
glGíî©eTextuªMùm≠EXT
 (
GLuöt
, 
GLíum
);

8963 
GLAPI
 
APIENTRY
 
glGíî©eMu…iTexMùm≠EXT
 (
GLíum
, GLenum);

8964 
GLAPI
 
APIENTRY
 
glFømebuf„rDøwBuf„rEXT
 (
GLuöt
, 
GLíum
);

8965 
GLAPI
 
APIENTRY
 
glFømebuf„rDøwBuf„rsEXT
 (
GLuöt
, 
GLsizei
, c⁄° 
GLíum
 *);

8966 
GLAPI
 
APIENTRY
 
glFømebuf„rRódBuf„rEXT
 (
GLuöt
, 
GLíum
);

8967 
GLAPI
 
APIENTRY
 
glGëFømebuf„rP¨amëîivEXT
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

8968 
GLAPI
 
APIENTRY
 
glNamedRídîbuf„rSt‹ageMu…ißm∂eEXT
 (
GLuöt
, 
GLsizei
, 
GLíum
, GLsizei, GLsizei);

8969 
GLAPI
 
APIENTRY
 
glNamedRídîbuf„rSt‹ageMu…ißm∂eCovîageEXT
 (
GLuöt
, 
GLsizei
, GLsizei, 
GLíum
, GLsizei, GLsizei);

8970 
GLAPI
 
APIENTRY
 
glNamedFømebuf„rTextuªEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLöt
);

8971 
GLAPI
 
APIENTRY
 
glNamedFømebuf„rTextuªLayîEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLöt
, GLint);

8972 
GLAPI
 
APIENTRY
 
glNamedFømebuf„rTextuªFa˚EXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLöt
, GLenum);

8973 
GLAPI
 
APIENTRY
 
glTextuªRídîbuf„rEXT
 (
GLuöt
, 
GLíum
, GLuint);

8974 
GLAPI
 
APIENTRY
 
glMu…iTexRídîbuf„rEXT
 (
GLíum
, GLíum, 
GLuöt
);

8976 (
APIENTRYP
 
	tPFNGLCLIENTATTRIBDEFAULTEXTPROC
Ë(
	tGLbôfõld
 
	tmask
);

8977 (
APIENTRYP
 
	tPFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC
Ë(
	tGLbôfõld
 
	tmask
);

8978 (
APIENTRYP
 
	tPFNGLMATRIXLOADFEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLÊﬂt
 *
	tm
);

8979 (
APIENTRYP
 
	tPFNGLMATRIXLOADDEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLdoubÀ
 *
	tm
);

8980 (
APIENTRYP
 
	tPFNGLMATRIXMULTFEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLÊﬂt
 *
	tm
);

8981 (
APIENTRYP
 
	tPFNGLMATRIXMULTDEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLdoubÀ
 *
	tm
);

8982 (
APIENTRYP
 
	tPFNGLMATRIXLOADIDENTITYEXTPROC
Ë(
	tGLíum
 
	tmode
);

8983 (
APIENTRYP
 
	tPFNGLMATRIXROTATEFEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLÊﬂt
 
	t™gÀ
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

8984 (
APIENTRYP
 
	tPFNGLMATRIXROTATEDEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLdoubÀ
 
	t™gÀ
, GLdoubÀ 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

8985 (
APIENTRYP
 
	tPFNGLMATRIXSCALEFEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

8986 (
APIENTRYP
 
	tPFNGLMATRIXSCALEDEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

8987 (
APIENTRYP
 
	tPFNGLMATRIXTRANSLATEFEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

8988 (
APIENTRYP
 
	tPFNGLMATRIXTRANSLATEDEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

8989 (
APIENTRYP
 
	tPFNGLMATRIXFRUSTUMEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLdoubÀ
 
	tÀ·
, GLdoubÀ 
	tright
, GLdoubÀ 
	tbŸtom
, GLdoubÀ 
	tt›
, GLdoubÀ 
	tzNór
, GLdoubÀ 
	tzF¨
);

8990 (
APIENTRYP
 
	tPFNGLMATRIXORTHOEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLdoubÀ
 
	tÀ·
, GLdoubÀ 
	tright
, GLdoubÀ 
	tbŸtom
, GLdoubÀ 
	tt›
, GLdoubÀ 
	tzNór
, GLdoubÀ 
	tzF¨
);

8991 (
APIENTRYP
 
	tPFNGLMATRIXPOPEXTPROC
Ë(
	tGLíum
 
	tmode
);

8992 (
APIENTRYP
 
	tPFNGLMATRIXPUSHEXTPROC
Ë(
	tGLíum
 
	tmode
);

8993 (
APIENTRYP
 
	tPFNGLMATRIXLOADTRANSPOSEFEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLÊﬂt
 *
	tm
);

8994 (
APIENTRYP
 
	tPFNGLMATRIXLOADTRANSPOSEDEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLdoubÀ
 *
	tm
);

8995 (
APIENTRYP
 
	tPFNGLMATRIXMULTTRANSPOSEFEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLÊﬂt
 *
	tm
);

8996 (
APIENTRYP
 
	tPFNGLMATRIXMULTTRANSPOSEDEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLdoubÀ
 *
	tm
);

8997 (
APIENTRYP
 
	tPFNGLTEXTUREPARAMETERFEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

8998 (
APIENTRYP
 
	tPFNGLTEXTUREPARAMETERFVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

8999 (
APIENTRYP
 
	tPFNGLTEXTUREPARAMETERIEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

9000 (
APIENTRYP
 
	tPFNGLTEXTUREPARAMETERIVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

9001 (
APIENTRYP
 
	tPFNGLTEXTUREIMAGE1DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9002 (
APIENTRYP
 
	tPFNGLTEXTUREIMAGE2DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9003 (
APIENTRYP
 
	tPFNGLTEXTURESUBIMAGE1DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9004 (
APIENTRYP
 
	tPFNGLTEXTURESUBIMAGE2DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9005 (
APIENTRYP
 
	tPFNGLCOPYTEXTUREIMAGE1DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
);

9006 (
APIENTRYP
 
	tPFNGLCOPYTEXTUREIMAGE2DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
);

9007 (
APIENTRYP
 
	tPFNGLCOPYTEXTURESUBIMAGE1DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

9008 (
APIENTRYP
 
	tPFNGLCOPYTEXTURESUBIMAGE2DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

9009 (
APIENTRYP
 
	tPFNGLGETTEXTUREIMAGEEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	tpixñs
);

9010 (
APIENTRYP
 
	tPFNGLGETTEXTUREPARAMETERFVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

9011 (
APIENTRYP
 
	tPFNGLGETTEXTUREPARAMETERIVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9012 (
APIENTRYP
 
	tPFNGLGETTEXTURELEVELPARAMETERFVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

9013 (
APIENTRYP
 
	tPFNGLGETTEXTURELEVELPARAMETERIVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	t≤ame
, GLöà*
	t∑øms
);

9014 (
APIENTRYP
 
	tPFNGLTEXTUREIMAGE3DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9015 (
APIENTRYP
 
	tPFNGLTEXTURESUBIMAGE3DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9016 (
APIENTRYP
 
	tPFNGLCOPYTEXTURESUBIMAGE3DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

9017 (
APIENTRYP
 
	tPFNGLMULTITEXPARAMETERFEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

9018 (
APIENTRYP
 
	tPFNGLMULTITEXPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

9019 (
APIENTRYP
 
	tPFNGLMULTITEXPARAMETERIEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

9020 (
APIENTRYP
 
	tPFNGLMULTITEXPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

9021 (
APIENTRYP
 
	tPFNGLMULTITEXIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9022 (
APIENTRYP
 
	tPFNGLMULTITEXIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9023 (
APIENTRYP
 
	tPFNGLMULTITEXSUBIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9024 (
APIENTRYP
 
	tPFNGLMULTITEXSUBIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9025 (
APIENTRYP
 
	tPFNGLCOPYMULTITEXIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
);

9026 (
APIENTRYP
 
	tPFNGLCOPYMULTITEXIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
);

9027 (
APIENTRYP
 
	tPFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

9028 (
APIENTRYP
 
	tPFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

9029 (
APIENTRYP
 
	tPFNGLGETMULTITEXIMAGEEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	tpixñs
);

9030 (
APIENTRYP
 
	tPFNGLGETMULTITEXPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

9031 (
APIENTRYP
 
	tPFNGLGETMULTITEXPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9032 (
APIENTRYP
 
	tPFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

9033 (
APIENTRYP
 
	tPFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	t≤ame
, GLöà*
	t∑øms
);

9034 (
APIENTRYP
 
	tPFNGLMULTITEXIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9035 (
APIENTRYP
 
	tPFNGLMULTITEXSUBIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9036 (
APIENTRYP
 
	tPFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

9037 (
APIENTRYP
 
	tPFNGLBINDMULTITEXTUREEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLuöt
 
	tãxtuª
);

9038 (
APIENTRYP
 
	tPFNGLENABLECLIENTSTATEINDEXEDEXTPROC
Ë(
	tGLíum
 
	t¨øy
, 
	tGLuöt
 
	tödex
);

9039 (
APIENTRYP
 
	tPFNGLDISABLECLIENTSTATEINDEXEDEXTPROC
Ë(
	tGLíum
 
	t¨øy
, 
	tGLuöt
 
	tödex
);

9040 (
APIENTRYP
 
	tPFNGLMULTITEXCOORDPOINTEREXTPROC
Ë(
	tGLíum
 
	tãxunô
, 
	tGLöt
 
	tsize
, GLíum 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

9041 (
APIENTRYP
 
	tPFNGLMULTITEXENVFEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

9042 (
APIENTRYP
 
	tPFNGLMULTITEXENVFVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

9043 (
APIENTRYP
 
	tPFNGLMULTITEXENVIEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

9044 (
APIENTRYP
 
	tPFNGLMULTITEXENVIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

9045 (
APIENTRYP
 
	tPFNGLMULTITEXGENDEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, 
	tGLdoubÀ
 
	t∑øm
);

9046 (
APIENTRYP
 
	tPFNGLMULTITEXGENDVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, c⁄° 
	tGLdoubÀ
 *
	t∑øms
);

9047 (
APIENTRYP
 
	tPFNGLMULTITEXGENFEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

9048 (
APIENTRYP
 
	tPFNGLMULTITEXGENFVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

9049 (
APIENTRYP
 
	tPFNGLMULTITEXGENIEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

9050 (
APIENTRYP
 
	tPFNGLMULTITEXGENIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

9051 (
APIENTRYP
 
	tPFNGLGETMULTITEXENVFVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

9052 (
APIENTRYP
 
	tPFNGLGETMULTITEXENVIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9053 (
APIENTRYP
 
	tPFNGLGETMULTITEXGENDVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, 
	tGLdoubÀ
 *
	t∑øms
);

9054 (
APIENTRYP
 
	tPFNGLGETMULTITEXGENFVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

9055 (
APIENTRYP
 
	tPFNGLGETMULTITEXGENIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9056 (
APIENTRYP
 
	tPFNGLGETFLOATINDEXEDVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 *
	td©a
);

9057 (
APIENTRYP
 
	tPFNGLGETDOUBLEINDEXEDVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 *
	td©a
);

9058 (
APIENTRYP
 
	tPFNGLGETPOINTERINDEXEDVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLvoid
* *
	td©a
);

9059 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9060 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9061 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9062 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9063 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9064 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9065 (
APIENTRYP
 
	tPFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tlod
, 
	tGLvoid
 *
	timg
);

9066 (
APIENTRYP
 
	tPFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9067 (
APIENTRYP
 
	tPFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9068 (
APIENTRYP
 
	tPFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9069 (
APIENTRYP
 
	tPFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9070 (
APIENTRYP
 
	tPFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9071 (
APIENTRYP
 
	tPFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9072 (
APIENTRYP
 
	tPFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tlod
, 
	tGLvoid
 *
	timg
);

9073 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMSTRINGEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLvoid
 *
	t°rög
);

9074 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

9075 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, c⁄° 
	tGLdoubÀ
 *
	t∑øms
);

9076 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

9077 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

9078 (
APIENTRYP
 
	tPFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLdoubÀ
 *
	t∑øms
);

9079 (
APIENTRYP
 
	tPFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLÊﬂt
 *
	t∑øms
);

9080 (
APIENTRYP
 
	tPFNGLGETNAMEDPROGRAMIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9081 (
APIENTRYP
 
	tPFNGLGETNAMEDPROGRAMSTRINGEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLvoid
 *
	t°rög
);

9082 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

9083 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

9084 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, c⁄° 
	tGLöt
 *
	t∑øms
);

9085 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLöt
 *
	t∑øms
);

9086 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
, GLuöà
	tw
);

9087 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, c⁄° GLuöà*
	t∑øms
);

9088 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà*
	t∑øms
);

9089 (
APIENTRYP
 
	tPFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLöt
 *
	t∑øms
);

9090 (
APIENTRYP
 
	tPFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, GLuöà*
	t∑øms
);

9091 (
APIENTRYP
 
	tPFNGLTEXTUREPARAMETERIIVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

9092 (
APIENTRYP
 
	tPFNGLTEXTUREPARAMETERIUIVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° GLuöà*
	t∑øms
);

9093 (
APIENTRYP
 
	tPFNGLGETTEXTUREPARAMETERIIVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9094 (
APIENTRYP
 
	tPFNGLGETTEXTUREPARAMETERIUIVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, GLuöà*
	t∑øms
);

9095 (
APIENTRYP
 
	tPFNGLMULTITEXPARAMETERIIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

9096 (
APIENTRYP
 
	tPFNGLMULTITEXPARAMETERIUIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLuöt
 *
	t∑øms
);

9097 (
APIENTRYP
 
	tPFNGLGETMULTITEXPARAMETERIIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9098 (
APIENTRYP
 
	tPFNGLGETMULTITEXPARAMETERIUIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLuöt
 *
	t∑øms
);

9099 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM1FEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
);

9100 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM2FEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
);

9101 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM3FEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
);

9102 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM4FEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
, GLÊﬂà
	tv3
);

9103 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM1IEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
);

9104 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM2IEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
);

9105 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM3IEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
, GLöà
	tv2
);

9106 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM4IEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
, GLöà
	tv2
, GLöà
	tv3
);

9107 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM1FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9108 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM2FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9109 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM3FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9110 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM4FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9111 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM1IVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

9112 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM2IVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

9113 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM3IVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

9114 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM4IVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

9115 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9116 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9117 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9118 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9119 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9120 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9121 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9122 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9123 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9124 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM1UIEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLuöà
	tv0
);

9125 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM2UIEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLuöà
	tv0
, GLuöà
	tv1
);

9126 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM3UIEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLuöà
	tv0
, GLuöà
	tv1
, GLuöà
	tv2
);

9127 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM4UIEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLuöà
	tv0
, GLuöà
	tv1
, GLuöà
	tv2
, GLuöà
	tv3
);

9128 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM1UIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà*
	tvÆue
);

9129 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM2UIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà*
	tvÆue
);

9130 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM3UIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà*
	tvÆue
);

9131 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM4UIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà*
	tvÆue
);

9132 (
APIENTRYP
 
	tPFNGLNAMEDBUFFERDATAEXTPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLsizeùå
 
	tsize
, c⁄° 
	tGLvoid
 *
	td©a
, 
	tGLíum
 
	tußge
);

9133 (
APIENTRYP
 
	tPFNGLNAMEDBUFFERSUBDATAEXTPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
, c⁄° 
	tGLvoid
 *
	td©a
);

9134 
	gGLvoid
* (
	tAPIENTRYP
 
	tPFNGLMAPNAMEDBUFFEREXTPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLíum
 
	tac˚ss
);

9135 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLUNMAPNAMEDBUFFEREXTPROC
Ë(
	tGLuöt
 
	tbuf„r
);

9136 (
APIENTRYP
 
	tPFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9137 (
APIENTRYP
 
	tPFNGLGETNAMEDBUFFERPOINTERVEXTPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLíum
 
	t≤ame
, 
	tGLvoid
* *
	t∑øms
);

9138 (
APIENTRYP
 
	tPFNGLGETNAMEDBUFFERSUBDATAEXTPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
, 
	tGLvoid
 *
	td©a
);

9139 (
APIENTRYP
 
	tPFNGLTEXTUREBUFFEREXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, GLuöà
	tbuf„r
);

9140 (
APIENTRYP
 
	tPFNGLMULTITEXBUFFEREXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLuöt
 
	tbuf„r
);

9141 (
APIENTRYP
 
	tPFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC
Ë(
	tGLuöt
 
	tªndîbuf„r
, 
	tGLíum
 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

9142 (
APIENTRYP
 
	tPFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC
Ë(
	tGLuöt
 
	tªndîbuf„r
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9143 
GLíum
 (
	tAPIENTRYP
 
	tPFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	tèrgë
);

9144 (
APIENTRYP
 
	tPFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t©èchmít
, GLíum 
	tãxèrgë
, GLuöà
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

9145 (
APIENTRYP
 
	tPFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t©èchmít
, GLíum 
	tãxèrgë
, GLuöà
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

9146 (
APIENTRYP
 
	tPFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t©èchmít
, GLíum 
	tãxèrgë
, GLuöà
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tzoff£t
);

9147 (
APIENTRYP
 
	tPFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t©èchmít
, GLíum 
	tªndîbuf„π¨gë
, GLuöà
	tªndîbuf„r
);

9148 (
APIENTRYP
 
	tPFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t©èchmít
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9149 (
APIENTRYP
 
	tPFNGLGENERATETEXTUREMIPMAPEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
);

9150 (
APIENTRYP
 
	tPFNGLGENERATEMULTITEXMIPMAPEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
);

9151 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERDRAWBUFFEREXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	tmode
);

9152 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLíum
 *
	tbufs
);

9153 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERREADBUFFEREXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	tmode
);

9154 (
APIENTRYP
 
	tPFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9155 (
APIENTRYP
 
	tPFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
Ë(
	tGLuöt
 
	tªndîbuf„r
, 
	tGLsizei
 
	tßm∂es
, 
	tGLíum
 
	töã∫Æf‹m©
, GLsizeò
	twidth
, GLsizeò
	theight
);

9156 (
APIENTRYP
 
	tPFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC
Ë(
	tGLuöt
 
	tªndîbuf„r
, 
	tGLsizei
 
	tcovîageSam∂es
, GLsizeò
	tcﬁ‹Sam∂es
, 
	tGLíum
 
	töã∫Æf‹m©
, GLsizeò
	twidth
, GLsizeò
	theight
);

9157 (
APIENTRYP
 
	tPFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t©èchmít
, GLuöà
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

9158 (
APIENTRYP
 
	tPFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t©èchmít
, GLuöà
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tœyî
);

9159 (
APIENTRYP
 
	tPFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t©èchmít
, GLuöà
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLíum 
	tÁ˚
);

9160 (
APIENTRYP
 
	tPFNGLTEXTURERENDERBUFFEREXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLuöà
	tªndîbuf„r
);

9161 (
APIENTRYP
 
	tPFNGLMULTITEXRENDERBUFFEREXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLuöt
 
	tªndîbuf„r
);

9164 #i‚de‡
GL_EXT_vîãx_¨øy_bgø


9165 
	#GL_EXT_vîãx_¨øy_bgø
 1

	)

9168 #i‚de‡
GL_EXT_ãxtuª_swizzÀ


9169 
	#GL_EXT_ãxtuª_swizzÀ
 1

	)

9172 #i‚de‡
GL_NV_ex∂icô_mu…ißm∂e


9173 
	#GL_NV_ex∂icô_mu…ißm∂e
 1

	)

9174 #ifde‡
GL_GLEXT_PROTOTYPES


9175 
GLAPI
 
APIENTRY
 
glGëMu…ißm∂efvNV
 (
GLíum
, 
GLuöt
, 
GLÊﬂt
 *);

9176 
GLAPI
 
APIENTRY
 
glSam∂eMaskIndexedNV
 (
GLuöt
, 
GLbôfõld
);

9177 
GLAPI
 
APIENTRY
 
glTexRídîbuf„rNV
 (
GLíum
, 
GLuöt
);

9179 (
APIENTRYP
 
	tPFNGLGETMULTISAMPLEFVNVPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 *
	tvÆ
);

9180 (
APIENTRYP
 
	tPFNGLSAMPLEMASKINDEXEDNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLbôfõld
 
	tmask
);

9181 (
APIENTRYP
 
	tPFNGLTEXRENDERBUFFERNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tªndîbuf„r
);

9184 #i‚de‡
GL_NV_å™sf‹m_„edback2


9185 
	#GL_NV_å™sf‹m_„edback2
 1

	)

9186 #ifde‡
GL_GLEXT_PROTOTYPES


9187 
GLAPI
 
APIENTRY
 
glBödTønsf‹mFìdbackNV
 (
GLíum
, 
GLuöt
);

9188 
GLAPI
 
APIENTRY
 
glDñëeTønsf‹mFìdbacksNV
 (
GLsizei
, c⁄° 
GLuöt
 *);

9189 
GLAPI
 
APIENTRY
 
glGíTønsf‹mFìdbacksNV
 (
GLsizei
, 
GLuöt
 *);

9190 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsTønsf‹mFìdbackNV
 (
GLuöt
);

9191 
GLAPI
 
APIENTRY
 
glPau£Tønsf‹mFìdbackNV
 ();

9192 
GLAPI
 
APIENTRY
 
glResumeTønsf‹mFìdbackNV
 ();

9193 
GLAPI
 
APIENTRY
 
glDøwTønsf‹mFìdbackNV
 (
GLíum
, 
GLuöt
);

9195 (
APIENTRYP
 
	tPFNGLBINDTRANSFORMFEEDBACKNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
);

9196 (
APIENTRYP
 
	tPFNGLDELETETRANSFORMFEEDBACKSNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tids
);

9197 (
APIENTRYP
 
	tPFNGLGENTRANSFORMFEEDBACKSNVPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tids
);

9198 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISTRANSFORMFEEDBACKNVPROC
Ë(
	tGLuöt
 
	tid
);

9199 (
APIENTRYP
 
	tPFNGLPAUSETRANSFORMFEEDBACKNVPROC
) ();

9200 (
APIENTRYP
 
	tPFNGLRESUMETRANSFORMFEEDBACKNVPROC
) ();

9201 (
APIENTRYP
 
	tPFNGLDRAWTRANSFORMFEEDBACKNVPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	tid
);

9204 #i‚de‡
GL_ATI_memöfo


9205 
	#GL_ATI_memöfo
 1

	)

9208 #i‚de‡
GL_AMD_≥rf‹m™˚_m⁄ô‹


9209 
	#GL_AMD_≥rf‹m™˚_m⁄ô‹
 1

	)

9210 #ifde‡
GL_GLEXT_PROTOTYPES


9211 
GLAPI
 
APIENTRY
 
glGëPîfM⁄ô‹GroupsAMD
 (
GLöt
 *, 
GLsizei
, 
GLuöt
 *);

9212 
GLAPI
 
APIENTRY
 
glGëPîfM⁄ô‹Cou¡îsAMD
 (
GLuöt
, 
GLöt
 *, GLöà*, 
GLsizei
, GLuint *);

9213 
GLAPI
 
APIENTRY
 
glGëPîfM⁄ô‹GroupSåögAMD
 (
GLuöt
, 
GLsizei
, GLsizeò*, 
GLch¨
 *);

9214 
GLAPI
 
APIENTRY
 
glGëPîfM⁄ô‹Cou¡îSåögAMD
 (
GLuöt
, GLuöt, 
GLsizei
, GLsizeò*, 
GLch¨
 *);

9215 
GLAPI
 
APIENTRY
 
glGëPîfM⁄ô‹Cou¡îInfoAMD
 (
GLuöt
, GLuöt, 
GLíum
, *);

9216 
GLAPI
 
APIENTRY
 
glGíPîfM⁄ô‹sAMD
 (
GLsizei
, 
GLuöt
 *);

9217 
GLAPI
 
APIENTRY
 
glDñëePîfM⁄ô‹sAMD
 (
GLsizei
, 
GLuöt
 *);

9218 
GLAPI
 
APIENTRY
 
glSñe˘PîfM⁄ô‹Cou¡îsAMD
 (
GLuöt
, 
GLboﬁón
, GLuöt, 
GLöt
, GLuint *);

9219 
GLAPI
 
APIENTRY
 
glBegöPîfM⁄ô‹AMD
 (
GLuöt
);

9220 
GLAPI
 
APIENTRY
 
glEndPîfM⁄ô‹AMD
 (
GLuöt
);

9221 
GLAPI
 
APIENTRY
 
glGëPîfM⁄ô‹Cou¡îD©aAMD
 (
GLuöt
, 
GLíum
, 
GLsizei
, GLuöà*, 
GLöt
 *);

9223 (
APIENTRYP
 
	tPFNGLGETPERFMONITORGROUPSAMDPROC
Ë(
	tGLöt
 *
	tnumGroups
, 
	tGLsizei
 
	tgroupsSize
, 
	tGLuöt
 *
	tgroups
);

9224 (
APIENTRYP
 
	tPFNGLGETPERFMONITORCOUNTERSAMDPROC
Ë(
	tGLuöt
 
	tgroup
, 
	tGLöt
 *
	tnumCou¡îs
, GLöà*
	tmaxA˘iveCou¡îs
, 
	tGLsizei
 
	tcou¡îSize
, GLuöà*
	tcou¡îs
);

9225 (
APIENTRYP
 
	tPFNGLGETPERFMONITORGROUPSTRINGAMDPROC
Ë(
	tGLuöt
 
	tgroup
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLch¨
 *
	tgroupSåög
);

9226 (
APIENTRYP
 
	tPFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC
Ë(
	tGLuöt
 
	tgroup
, GLuöà
	tcou¡î
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLch¨
 *
	tcou¡îSåög
);

9227 (
APIENTRYP
 
	tPFNGLGETPERFMONITORCOUNTERINFOAMDPROC
Ë(
	tGLuöt
 
	tgroup
, GLuöà
	tcou¡î
, 
	tGLíum
 
	t≤ame
, *
	td©a
);

9228 (
APIENTRYP
 
	tPFNGLGENPERFMONITORSAMDPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tm⁄ô‹s
);

9229 (
APIENTRYP
 
	tPFNGLDELETEPERFMONITORSAMDPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tm⁄ô‹s
);

9230 (
APIENTRYP
 
	tPFNGLSELECTPERFMONITORCOUNTERSAMDPROC
Ë(
	tGLuöt
 
	tm⁄ô‹
, 
	tGLboﬁón
 
	tíabÀ
, GLuöà
	tgroup
, 
	tGLöt
 
	tnumCou¡îs
, GLuöà*
	tcou¡îLi°
);

9231 (
APIENTRYP
 
	tPFNGLBEGINPERFMONITORAMDPROC
Ë(
	tGLuöt
 
	tm⁄ô‹
);

9232 (
APIENTRYP
 
	tPFNGLENDPERFMONITORAMDPROC
Ë(
	tGLuöt
 
	tm⁄ô‹
);

9233 (
APIENTRYP
 
	tPFNGLGETPERFMONITORCOUNTERDATAAMDPROC
Ë(
	tGLuöt
 
	tm⁄ô‹
, 
	tGLíum
 
	t≤ame
, 
	tGLsizei
 
	td©aSize
, GLuöà*
	td©a
, 
	tGLöt
 *
	tbyãsWrôãn
);

9236 #i‚de‡
GL_AMD_ãxtuª_ãxtuª4


9237 
	#GL_AMD_ãxtuª_ãxtuª4
 1

	)

9240 #i‚de‡
GL_AMD_vîãx_shadî_ãs£œt‹


9241 
	#GL_AMD_vîãx_shadî_ãs£œt‹
 1

	)

9242 #ifde‡
GL_GLEXT_PROTOTYPES


9243 
GLAPI
 
APIENTRY
 
glTes£Œ©i⁄Fa˘‹AMD
 (
GLÊﬂt
);

9244 
GLAPI
 
APIENTRY
 
glTes£Œ©i⁄ModeAMD
 (
GLíum
);

9246 (
APIENTRYP
 
	tPFNGLTESSELLATIONFACTORAMDPROC
Ë(
	tGLÊﬂt
 
	tÁ˘‹
);

9247 (
APIENTRYP
 
	tPFNGLTESSELLATIONMODEAMDPROC
Ë(
	tGLíum
 
	tmode
);

9250 #i‚de‡
GL_EXT_¥ovokög_vîãx


9251 
	#GL_EXT_¥ovokög_vîãx
 1

	)

9252 #ifde‡
GL_GLEXT_PROTOTYPES


9253 
GLAPI
 
APIENTRY
 
glProvokögVîãxEXT
 (
GLíum
);

9255 (
APIENTRYP
 
	tPFNGLPROVOKINGVERTEXEXTPROC
Ë(
	tGLíum
 
	tmode
);

9258 #i‚de‡
GL_EXT_ãxtuª_¢‹m


9259 
	#GL_EXT_ãxtuª_¢‹m
 1

	)

9262 #i‚de‡
GL_AMD_døw_buf„rs_bÀnd


9263 
	#GL_AMD_døw_buf„rs_bÀnd
 1

	)

9264 #ifde‡
GL_GLEXT_PROTOTYPES


9265 
GLAPI
 
APIENTRY
 
glBÀndFuncIndexedAMD
 (
GLuöt
, 
GLíum
, GLenum);

9266 
GLAPI
 
APIENTRY
 
glBÀndFuncSï¨©eIndexedAMD
 (
GLuöt
, 
GLíum
, GLenum, GLenum, GLenum);

9267 
GLAPI
 
APIENTRY
 
glBÀndEqu©i⁄IndexedAMD
 (
GLuöt
, 
GLíum
);

9268 
GLAPI
 
APIENTRY
 
glBÀndEqu©i⁄Sï¨©eIndexedAMD
 (
GLuöt
, 
GLíum
, GLenum);

9270 (
APIENTRYP
 
	tPFNGLBLENDFUNCINDEXEDAMDPROC
Ë(
	tGLuöt
 
	tbuf
, 
	tGLíum
 
	t§c
, GLíum 
	td°
);

9271 (
APIENTRYP
 
	tPFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC
Ë(
	tGLuöt
 
	tbuf
, 
	tGLíum
 
	t§cRGB
, GLíum 
	td°RGB
, GLíum 
	t§cAÕha
, GLíum 
	td°AÕha
);

9272 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONINDEXEDAMDPROC
Ë(
	tGLuöt
 
	tbuf
, 
	tGLíum
 
	tmode
);

9273 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC
Ë(
	tGLuöt
 
	tbuf
, 
	tGLíum
 
	tmodeRGB
, GLíum 
	tmodeAÕha
);

9276 #i‚de‡
GL_APPLE_ãxtuª_ønge


9277 
	#GL_APPLE_ãxtuª_ønge
 1

	)

9278 #ifde‡
GL_GLEXT_PROTOTYPES


9279 
GLAPI
 
APIENTRY
 
glTextuªR™geAPPLE
 (
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

9280 
GLAPI
 
APIENTRY
 
glGëTexP¨amëîPoöãrvAPPLE
 (
GLíum
, GLíum, 
GLvoid
* *);

9282 (
APIENTRYP
 
	tPFNGLTEXTURERANGEAPPLEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tÀngth
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

9283 (
APIENTRYP
 
	tPFNGLGETTEXPARAMETERPOINTERVAPPLEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLvoid
* *
	t∑øms
);

9286 #i‚de‡
GL_APPLE_Êﬂt_pixñs


9287 
	#GL_APPLE_Êﬂt_pixñs
 1

	)

9290 #i‚de‡
GL_APPLE_vîãx_¥ogøm_evÆu©‹s


9291 
	#GL_APPLE_vîãx_¥ogøm_evÆu©‹s
 1

	)

9292 #ifde‡
GL_GLEXT_PROTOTYPES


9293 
GLAPI
 
APIENTRY
 
glE«bÀVîãxAâribAPPLE
 (
GLuöt
, 
GLíum
);

9294 
GLAPI
 
APIENTRY
 
glDißbÀVîãxAâribAPPLE
 (
GLuöt
, 
GLíum
);

9295 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsVîãxAâribE«bÀdAPPLE
 (
GLuöt
, 
GLíum
);

9296 
GLAPI
 
APIENTRY
 
glM≠VîãxAârib1dAPPLE
 (
GLuöt
, GLuöt, 
GLdoubÀ
, GLdoubÀ, 
GLöt
, GLint, const GLdouble *);

9297 
GLAPI
 
APIENTRY
 
glM≠VîãxAârib1fAPPLE
 (
GLuöt
, GLuöt, 
GLÊﬂt
, GLÊﬂt, 
GLöt
, GLint, const GLfloat *);

9298 
GLAPI
 
APIENTRY
 
glM≠VîãxAârib2dAPPLE
 (
GLuöt
, GLuöt, 
GLdoubÀ
, GLdoubÀ, 
GLöt
, GLint, GLdouble, GLdouble, GLint, GLint, const GLdouble *);

9299 
GLAPI
 
APIENTRY
 
glM≠VîãxAârib2fAPPLE
 (
GLuöt
, GLuöt, 
GLÊﬂt
, GLÊﬂt, 
GLöt
, GLint, GLfloat, GLfloat, GLint, GLint, const GLfloat *);

9301 (
APIENTRYP
 
	tPFNGLENABLEVERTEXATTRIBAPPLEPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
);

9302 (
APIENTRYP
 
	tPFNGLDISABLEVERTEXATTRIBAPPLEPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
);

9303 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISVERTEXATTRIBENABLEDAPPLEPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
);

9304 (
APIENTRYP
 
	tPFNGLMAPVERTEXATTRIB1DAPPLEPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tsize
, 
	tGLdoubÀ
 
	tu1
, GLdoubÀ 
	tu2
, 
	tGLöt
 
	t°ride
, GLöà
	t‹dî
, c⁄° GLdoubÀ *
	tpoöts
);

9305 (
APIENTRYP
 
	tPFNGLMAPVERTEXATTRIB1FAPPLEPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tsize
, 
	tGLÊﬂt
 
	tu1
, GLÊﬂà
	tu2
, 
	tGLöt
 
	t°ride
, GLöà
	t‹dî
, c⁄° GLÊﬂà*
	tpoöts
);

9306 (
APIENTRYP
 
	tPFNGLMAPVERTEXATTRIB2DAPPLEPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tsize
, 
	tGLdoubÀ
 
	tu1
, GLdoubÀ 
	tu2
, 
	tGLöt
 
	tu°ride
, GLöà
	tu‹dî
, GLdoubÀ 
	tv1
, GLdoubÀ 
	tv2
, GLöà
	tv°ride
, GLöà
	tv‹dî
, c⁄° GLdoubÀ *
	tpoöts
);

9307 (
APIENTRYP
 
	tPFNGLMAPVERTEXATTRIB2FAPPLEPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tsize
, 
	tGLÊﬂt
 
	tu1
, GLÊﬂà
	tu2
, 
	tGLöt
 
	tu°ride
, GLöà
	tu‹dî
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
, GLöà
	tv°ride
, GLöà
	tv‹dî
, c⁄° GLÊﬂà*
	tpoöts
);

9310 #i‚de‡
GL_APPLE_aux_dïth_°ícû


9311 
	#GL_APPLE_aux_dïth_°ícû
 1

	)

9314 #i‚de‡
GL_APPLE_obje˘_purgóbÀ


9315 
	#GL_APPLE_obje˘_purgóbÀ
 1

	)

9316 #ifde‡
GL_GLEXT_PROTOTYPES


9317 
GLAPI
 
GLíum
 
APIENTRY
 
glObje˘PurgóbÀAPPLE
 (GLíum, 
GLuöt
, GLenum);

9318 
GLAPI
 
GLíum
 
APIENTRY
 
glObje˘U≈urgóbÀAPPLE
 (GLíum, 
GLuöt
, GLenum);

9319 
GLAPI
 
APIENTRY
 
glGëObje˘P¨amëîivAPPLE
 (
GLíum
, 
GLuöt
, GLíum, 
GLöt
 *);

9321 
GLíum
 (
	tAPIENTRYP
 
	tPFNGLOBJECTPURGEABLEAPPLEPROC
Ë(
	tGLíum
 
	tobje˘Ty≥
, 
	tGLuöt
 
	t«me
, GLíum 
	t›ti⁄
);

9322 
GLíum
 (
	tAPIENTRYP
 
	tPFNGLOBJECTUNPURGEABLEAPPLEPROC
Ë(
	tGLíum
 
	tobje˘Ty≥
, 
	tGLuöt
 
	t«me
, GLíum 
	t›ti⁄
);

9323 (
APIENTRYP
 
	tPFNGLGETOBJECTPARAMETERIVAPPLEPROC
Ë(
	tGLíum
 
	tobje˘Ty≥
, 
	tGLuöt
 
	t«me
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9326 #i‚de‡
GL_APPLE_row_byãs


9327 
	#GL_APPLE_row_byãs
 1

	)

9330 #i‚de‡
GL_APPLE_rgb_422


9331 
	#GL_APPLE_rgb_422
 1

	)

9334 #i‚de‡
GL_NV_video_ˇ±uª


9335 
	#GL_NV_video_ˇ±uª
 1

	)

9336 #ifde‡
GL_GLEXT_PROTOTYPES


9337 
GLAPI
 
APIENTRY
 
glBegöVideoC≠tuªNV
 (
GLuöt
);

9338 
GLAPI
 
APIENTRY
 
glBödVideoC≠tuªSåómBuf„rNV
 (
GLuöt
, GLuöt, 
GLíum
, 
GLöçåARB
);

9339 
GLAPI
 
APIENTRY
 
glBödVideoC≠tuªSåómTextuªNV
 (
GLuöt
, GLuöt, 
GLíum
, GLenum, GLuint);

9340 
GLAPI
 
APIENTRY
 
glEndVideoC≠tuªNV
 (
GLuöt
);

9341 
GLAPI
 
APIENTRY
 
glGëVideoC≠tuªivNV
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

9342 
GLAPI
 
APIENTRY
 
glGëVideoC≠tuªSåómivNV
 (
GLuöt
, GLuöt, 
GLíum
, 
GLöt
 *);

9343 
GLAPI
 
APIENTRY
 
glGëVideoC≠tuªSåómfvNV
 (
GLuöt
, GLuöt, 
GLíum
, 
GLÊﬂt
 *);

9344 
GLAPI
 
APIENTRY
 
glGëVideoC≠tuªSåómdvNV
 (
GLuöt
, GLuöt, 
GLíum
, 
GLdoubÀ
 *);

9345 
GLAPI
 
GLíum
 
APIENTRY
 
glVideoC≠tuªNV
 (
GLuöt
, GLuöà*, 
GLuöt64EXT
 *);

9346 
GLAPI
 
APIENTRY
 
glVideoC≠tuªSåómP¨amëîivNV
 (
GLuöt
, GLuöt, 
GLíum
, c⁄° 
GLöt
 *);

9347 
GLAPI
 
APIENTRY
 
glVideoC≠tuªSåómP¨amëîfvNV
 (
GLuöt
, GLuöt, 
GLíum
, c⁄° 
GLÊﬂt
 *);

9348 
GLAPI
 
APIENTRY
 
glVideoC≠tuªSåómP¨amëîdvNV
 (
GLuöt
, GLuöt, 
GLíum
, c⁄° 
GLdoubÀ
 *);

9350 (
APIENTRYP
 
	tPFNGLBEGINVIDEOCAPTURENVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
);

9351 (
APIENTRYP
 
	tPFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà
	t°ªam
, 
	tGLíum
 
	t‰ame_ªgi⁄
, 
	tGLöçåARB
 
	toff£t
);

9352 (
APIENTRYP
 
	tPFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà
	t°ªam
, 
	tGLíum
 
	t‰ame_ªgi⁄
, GLíum 
	tèrgë
, GLuöà
	tãxtuª
);

9353 (
APIENTRYP
 
	tPFNGLENDVIDEOCAPTURENVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
);

9354 (
APIENTRYP
 
	tPFNGLGETVIDEOCAPTUREIVNVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9355 (
APIENTRYP
 
	tPFNGLGETVIDEOCAPTURESTREAMIVNVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà
	t°ªam
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9356 (
APIENTRYP
 
	tPFNGLGETVIDEOCAPTURESTREAMFVNVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà
	t°ªam
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

9357 (
APIENTRYP
 
	tPFNGLGETVIDEOCAPTURESTREAMDVNVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà
	t°ªam
, 
	tGLíum
 
	t≤ame
, 
	tGLdoubÀ
 *
	t∑øms
);

9358 
GLíum
 (
	tAPIENTRYP
 
	tPFNGLVIDEOCAPTURENVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà*
	t£quí˚_num
, 
	tGLuöt64EXT
 *
	tˇ±uª_time
);

9359 (
APIENTRYP
 
	tPFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà
	t°ªam
, 
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

9360 (
APIENTRYP
 
	tPFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà
	t°ªam
, 
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

9361 (
APIENTRYP
 
	tPFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà
	t°ªam
, 
	tGLíum
 
	t≤ame
, c⁄° 
	tGLdoubÀ
 *
	t∑øms
);

9364 #i‚de‡
GL_NV_c›y_image


9365 
	#GL_NV_c›y_image
 1

	)

9366 #ifde‡
GL_GLEXT_PROTOTYPES


9367 
GLAPI
 
APIENTRY
 
glC›yImageSubD©aNV
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, GLuöt, GLíum, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei);

9369 (
APIENTRYP
 
	tPFNGLCOPYIMAGESUBDATANVPROC
Ë(
	tGLuöt
 
	t§cName
, 
	tGLíum
 
	t§cT¨gë
, 
	tGLöt
 
	t§cLevñ
, GLöà
	t§cX
, GLöà
	t§cY
, GLöà
	t§cZ
, GLuöà
	td°Name
, GLíum 
	td°T¨gë
, GLöà
	td°Levñ
, GLöà
	td°X
, GLöà
	td°Y
, GLöà
	td°Z
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
);

9372 #i‚de‡
GL_EXT_£∑øã_shadî_obje˘s


9373 
	#GL_EXT_£∑øã_shadî_obje˘s
 1

	)

9374 #ifde‡
GL_GLEXT_PROTOTYPES


9375 
GLAPI
 
APIENTRY
 
glU£ShadîProgømEXT
 (
GLíum
, 
GLuöt
);

9376 
GLAPI
 
APIENTRY
 
glA˘iveProgømEXT
 (
GLuöt
);

9377 
GLAPI
 
GLuöt
 
APIENTRY
 
glCª©eShadîProgømEXT
 (
GLíum
, c⁄° 
GLch¨
 *);

9379 (
APIENTRYP
 
	tPFNGLUSESHADERPROGRAMEXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLuöt
 
	t¥ogøm
);

9380 (
APIENTRYP
 
	tPFNGLACTIVEPROGRAMEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

9381 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLCREATESHADERPROGRAMEXTPROC
Ë(
	tGLíum
 
	tty≥
, c⁄° 
	tGLch¨
 *
	t°rög
);

9384 #i‚de‡
GL_NV_∑ømëî_buf„r_obje˘2


9385 
	#GL_NV_∑ømëî_buf„r_obje˘2
 1

	)

9388 #i‚de‡
GL_NV_shadî_buf„r_lﬂd


9389 
	#GL_NV_shadî_buf„r_lﬂd
 1

	)

9390 #ifde‡
GL_GLEXT_PROTOTYPES


9391 
GLAPI
 
APIENTRY
 
glMakeBuf„rResidítNV
 (
GLíum
, GLenum);

9392 
GLAPI
 
APIENTRY
 
glMakeBuf„rN⁄ResidítNV
 (
GLíum
);

9393 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsBuf„rResidítNV
 (
GLíum
);

9394 
GLAPI
 
APIENTRY
 
glNamedMakeBuf„rResidítNV
 (
GLuöt
, 
GLíum
);

9395 
GLAPI
 
APIENTRY
 
glNamedMakeBuf„rN⁄ResidítNV
 (
GLuöt
);

9396 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsNamedBuf„rResidítNV
 (
GLuöt
);

9397 
GLAPI
 
APIENTRY
 
glGëBuf„rP¨amëîui64vNV
 (
GLíum
, GLíum, 
GLuöt64EXT
 *);

9398 
GLAPI
 
APIENTRY
 
glGëNamedBuf„rP¨amëîui64vNV
 (
GLuöt
, 
GLíum
, 
GLuöt64EXT
 *);

9399 
GLAPI
 
APIENTRY
 
glGëI¡egîui64vNV
 (
GLíum
, 
GLuöt64EXT
 *);

9400 
GLAPI
 
APIENTRY
 
glUnif‹mui64NV
 (
GLöt
, 
GLuöt64EXT
);

9401 
GLAPI
 
APIENTRY
 
glUnif‹mui64vNV
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt64EXT
 *);

9402 
GLAPI
 
APIENTRY
 
glGëUnif‹mui64vNV
 (
GLuöt
, 
GLöt
, 
GLuöt64EXT
 *);

9403 
GLAPI
 
APIENTRY
 
glProgømUnif‹mui64NV
 (
GLuöt
, 
GLöt
, 
GLuöt64EXT
);

9404 
GLAPI
 
APIENTRY
 
glProgømUnif‹mui64vNV
 (
GLuöt
, 
GLöt
, 
GLsizei
, c⁄° 
GLuöt64EXT
 *);

9406 (
APIENTRYP
 
	tPFNGLMAKEBUFFERRESIDENTNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tac˚ss
);

9407 (
APIENTRYP
 
	tPFNGLMAKEBUFFERNONRESIDENTNVPROC
Ë(
	tGLíum
 
	tèrgë
);

9408 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISBUFFERRESIDENTNVPROC
Ë(
	tGLíum
 
	tèrgë
);

9409 (
APIENTRYP
 
	tPFNGLNAMEDMAKEBUFFERRESIDENTNVPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLíum
 
	tac˚ss
);

9410 (
APIENTRYP
 
	tPFNGLNAMEDMAKEBUFFERNONRESIDENTNVPROC
Ë(
	tGLuöt
 
	tbuf„r
);

9411 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISNAMEDBUFFERRESIDENTNVPROC
Ë(
	tGLuöt
 
	tbuf„r
);

9412 (
APIENTRYP
 
	tPFNGLGETBUFFERPARAMETERUI64VNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLuöt64EXT
 *
	t∑øms
);

9413 (
APIENTRYP
 
	tPFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLíum
 
	t≤ame
, 
	tGLuöt64EXT
 *
	t∑øms
);

9414 (
APIENTRYP
 
	tPFNGLGETINTEGERUI64VNVPROC
Ë(
	tGLíum
 
	tvÆue
, 
	tGLuöt64EXT
 *
	tªsu…
);

9415 (
APIENTRYP
 
	tPFNGLUNIFORMUI64NVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt64EXT
 
	tvÆue
);

9416 (
APIENTRYP
 
	tPFNGLUNIFORMUI64VNVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt64EXT
 *
	tvÆue
);

9417 (
APIENTRYP
 
	tPFNGLGETUNIFORMUI64VNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt64EXT
 *
	t∑øms
);

9418 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMUI64NVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt64EXT
 
	tvÆue
);

9419 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMUI64VNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt64EXT
 *
	tvÆue
);

9422 #i‚de‡
GL_NV_vîãx_buf„r_unifõd_mem‹y


9423 
	#GL_NV_vîãx_buf„r_unifõd_mem‹y
 1

	)

9424 #ifde‡
GL_GLEXT_PROTOTYPES


9425 
GLAPI
 
APIENTRY
 
glBuf„rAddªssR™geNV
 (
GLíum
, 
GLuöt
, 
GLuöt64EXT
, 
GLsizeùå
);

9426 
GLAPI
 
APIENTRY
 
glVîãxF‹m©NV
 (
GLöt
, 
GLíum
, 
GLsizei
);

9427 
GLAPI
 
APIENTRY
 
glN‹mÆF‹m©NV
 (
GLíum
, 
GLsizei
);

9428 
GLAPI
 
APIENTRY
 
glCﬁ‹F‹m©NV
 (
GLöt
, 
GLíum
, 
GLsizei
);

9429 
GLAPI
 
APIENTRY
 
glIndexF‹m©NV
 (
GLíum
, 
GLsizei
);

9430 
GLAPI
 
APIENTRY
 
glTexCo‹dF‹m©NV
 (
GLöt
, 
GLíum
, 
GLsizei
);

9431 
GLAPI
 
APIENTRY
 
glEdgeFœgF‹m©NV
 (
GLsizei
);

9432 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹F‹m©NV
 (
GLöt
, 
GLíum
, 
GLsizei
);

9433 
GLAPI
 
APIENTRY
 
glFogCo‹dF‹m©NV
 (
GLíum
, 
GLsizei
);

9434 
GLAPI
 
APIENTRY
 
glVîãxAâribF‹m©NV
 (
GLuöt
, 
GLöt
, 
GLíum
, 
GLboﬁón
, 
GLsizei
);

9435 
GLAPI
 
APIENTRY
 
glVîãxAâribIF‹m©NV
 (
GLuöt
, 
GLöt
, 
GLíum
, 
GLsizei
);

9436 
GLAPI
 
APIENTRY
 
glGëI¡egîui64i_vNV
 (
GLíum
, 
GLuöt
, 
GLuöt64EXT
 *);

9438 (
APIENTRYP
 
	tPFNGLBUFFERADDRESSRANGENVPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLuöt
 
	tödex
, 
	tGLuöt64EXT
 
	taddªss
, 
	tGLsizeùå
 
	tÀngth
);

9439 (
APIENTRYP
 
	tPFNGLVERTEXFORMATNVPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
);

9440 (
APIENTRYP
 
	tPFNGLNORMALFORMATNVPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
);

9441 (
APIENTRYP
 
	tPFNGLCOLORFORMATNVPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
);

9442 (
APIENTRYP
 
	tPFNGLINDEXFORMATNVPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
);

9443 (
APIENTRYP
 
	tPFNGLTEXCOORDFORMATNVPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
);

9444 (
APIENTRYP
 
	tPFNGLEDGEFLAGFORMATNVPROC
Ë(
	tGLsizei
 
	t°ride
);

9445 (
APIENTRYP
 
	tPFNGLSECONDARYCOLORFORMATNVPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
);

9446 (
APIENTRYP
 
	tPFNGLFOGCOORDFORMATNVPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
);

9447 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBFORMATNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLboﬁón
 
	tn‹mÆized
, 
	tGLsizei
 
	t°ride
);

9448 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBIFORMATNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
);

9449 (
APIENTRYP
 
	tPFNGLGETINTEGERUI64I_VNVPROC
Ë(
	tGLíum
 
	tvÆue
, 
	tGLuöt
 
	tödex
, 
	tGLuöt64EXT
 *
	tªsu…
);

9452 #i‚de‡
GL_NV_ãxtuª_b¨rõr


9453 
	#GL_NV_ãxtuª_b¨rõr
 1

	)

9454 #ifde‡
GL_GLEXT_PROTOTYPES


9455 
GLAPI
 
APIENTRY
 
glTextuªB¨rõrNV
 ();

9457 (
APIENTRYP
 
	tPFNGLTEXTUREBARRIERNVPROC
) ();

9461 #ifde‡
__˝lu•lus


	@include/GL/glu.h

31 #i‚de‡
__glu_h__


32 
	#__glu_h__


	)

34 #i‡
deföed
(
USE_MGL_NAMESPACE
)

35 
	~"glu_m™gÀ.h
"

38 
	~<GL/gl.h
>

40 #i‚de‡
GLAPIENTRY


41 #i‡
deföed
(
_MSC_VER
Ë|| deföed(
__MINGW32__
)

42 
	#GLAPIENTRY
 
__°dˇŒ


	)

44 
	#GLAPIENTRY


	)

48 #i‚de‡
GLAPIENTRYP


49 
	#GLAPIENTRYP
 
GLAPIENTRY
 *

	)

52 #i‡(
deföed
(
_MSC_VER
Ë|| deföed(
__MINGW32__
)Ë&& deföed(
BUILD_GLU32
)

53 #unde‡
GLAPI


54 
	#GLAPI
 
	`__de˛•ec
(
dŒexp‹t
)

	)

55 #ñi‡(
deföed
(
_MSC_VER
Ë|| deföed(
__MINGW32__
)Ë&& deföed(
_DLL
)

57 #unde‡
GLAPI


58 
	#GLAPI
 
	`__de˛•ec
(
dŒimp‹t
)

	)

59 #ñi‡!
deföed
(
GLAPI
)

61 
	#GLAPI
 

	)

64 #ifde‡
__˝lu•lus


71 
	#GLU_EXT_obje˘_•a˚_ãss
 1

	)

72 
	#GLU_EXT_nurbs_ãs£Œ©‹
 1

	)

75 
	#GLU_FALSE
 0

	)

76 
	#GLU_TRUE
 1

	)

79 
	#GLU_VERSION_1_1
 1

	)

80 
	#GLU_VERSION_1_2
 1

	)

81 
	#GLU_VERSION_1_3
 1

	)

84 
	#GLU_VERSION
 100800

	)

85 
	#GLU_EXTENSIONS
 100801

	)

88 
	#GLU_INVALID_ENUM
 100900

	)

89 
	#GLU_INVALID_VALUE
 100901

	)

90 
	#GLU_OUT_OF_MEMORY
 100902

	)

91 
	#GLU_INCOMPATIBLE_GL_VERSION
 100903

	)

92 
	#GLU_INVALID_OPERATION
 100904

	)

96 
	#GLU_OUTLINE_POLYGON
 100240

	)

97 
	#GLU_OUTLINE_PATCH
 100241

	)

100 
	#GLU_NURBS_ERROR
 100103

	)

101 
	#GLU_ERROR
 100103

	)

102 
	#GLU_NURBS_BEGIN
 100164

	)

103 
	#GLU_NURBS_BEGIN_EXT
 100164

	)

104 
	#GLU_NURBS_VERTEX
 100165

	)

105 
	#GLU_NURBS_VERTEX_EXT
 100165

	)

106 
	#GLU_NURBS_NORMAL
 100166

	)

107 
	#GLU_NURBS_NORMAL_EXT
 100166

	)

108 
	#GLU_NURBS_COLOR
 100167

	)

109 
	#GLU_NURBS_COLOR_EXT
 100167

	)

110 
	#GLU_NURBS_TEXTURE_COORD
 100168

	)

111 
	#GLU_NURBS_TEX_COORD_EXT
 100168

	)

112 
	#GLU_NURBS_END
 100169

	)

113 
	#GLU_NURBS_END_EXT
 100169

	)

114 
	#GLU_NURBS_BEGIN_DATA
 100170

	)

115 
	#GLU_NURBS_BEGIN_DATA_EXT
 100170

	)

116 
	#GLU_NURBS_VERTEX_DATA
 100171

	)

117 
	#GLU_NURBS_VERTEX_DATA_EXT
 100171

	)

118 
	#GLU_NURBS_NORMAL_DATA
 100172

	)

119 
	#GLU_NURBS_NORMAL_DATA_EXT
 100172

	)

120 
	#GLU_NURBS_COLOR_DATA
 100173

	)

121 
	#GLU_NURBS_COLOR_DATA_EXT
 100173

	)

122 
	#GLU_NURBS_TEXTURE_COORD_DATA
 100174

	)

123 
	#GLU_NURBS_TEX_COORD_DATA_EXT
 100174

	)

124 
	#GLU_NURBS_END_DATA
 100175

	)

125 
	#GLU_NURBS_END_DATA_EXT
 100175

	)

128 
	#GLU_NURBS_ERROR1
 100251

	)

129 
	#GLU_NURBS_ERROR2
 100252

	)

130 
	#GLU_NURBS_ERROR3
 100253

	)

131 
	#GLU_NURBS_ERROR4
 100254

	)

132 
	#GLU_NURBS_ERROR5
 100255

	)

133 
	#GLU_NURBS_ERROR6
 100256

	)

134 
	#GLU_NURBS_ERROR7
 100257

	)

135 
	#GLU_NURBS_ERROR8
 100258

	)

136 
	#GLU_NURBS_ERROR9
 100259

	)

137 
	#GLU_NURBS_ERROR10
 100260

	)

138 
	#GLU_NURBS_ERROR11
 100261

	)

139 
	#GLU_NURBS_ERROR12
 100262

	)

140 
	#GLU_NURBS_ERROR13
 100263

	)

141 
	#GLU_NURBS_ERROR14
 100264

	)

142 
	#GLU_NURBS_ERROR15
 100265

	)

143 
	#GLU_NURBS_ERROR16
 100266

	)

144 
	#GLU_NURBS_ERROR17
 100267

	)

145 
	#GLU_NURBS_ERROR18
 100268

	)

146 
	#GLU_NURBS_ERROR19
 100269

	)

147 
	#GLU_NURBS_ERROR20
 100270

	)

148 
	#GLU_NURBS_ERROR21
 100271

	)

149 
	#GLU_NURBS_ERROR22
 100272

	)

150 
	#GLU_NURBS_ERROR23
 100273

	)

151 
	#GLU_NURBS_ERROR24
 100274

	)

152 
	#GLU_NURBS_ERROR25
 100275

	)

153 
	#GLU_NURBS_ERROR26
 100276

	)

154 
	#GLU_NURBS_ERROR27
 100277

	)

155 
	#GLU_NURBS_ERROR28
 100278

	)

156 
	#GLU_NURBS_ERROR29
 100279

	)

157 
	#GLU_NURBS_ERROR30
 100280

	)

158 
	#GLU_NURBS_ERROR31
 100281

	)

159 
	#GLU_NURBS_ERROR32
 100282

	)

160 
	#GLU_NURBS_ERROR33
 100283

	)

161 
	#GLU_NURBS_ERROR34
 100284

	)

162 
	#GLU_NURBS_ERROR35
 100285

	)

163 
	#GLU_NURBS_ERROR36
 100286

	)

164 
	#GLU_NURBS_ERROR37
 100287

	)

167 
	#GLU_AUTO_LOAD_MATRIX
 100200

	)

168 
	#GLU_CULLING
 100201

	)

169 
	#GLU_SAMPLING_TOLERANCE
 100203

	)

170 
	#GLU_DISPLAY_MODE
 100204

	)

171 
	#GLU_PARAMETRIC_TOLERANCE
 100202

	)

172 
	#GLU_SAMPLING_METHOD
 100205

	)

173 
	#GLU_U_STEP
 100206

	)

174 
	#GLU_V_STEP
 100207

	)

175 
	#GLU_NURBS_MODE
 100160

	)

176 
	#GLU_NURBS_MODE_EXT
 100160

	)

177 
	#GLU_NURBS_TESSELLATOR
 100161

	)

178 
	#GLU_NURBS_TESSELLATOR_EXT
 100161

	)

179 
	#GLU_NURBS_RENDERER
 100162

	)

180 
	#GLU_NURBS_RENDERER_EXT
 100162

	)

183 
	#GLU_OBJECT_PARAMETRIC_ERROR
 100208

	)

184 
	#GLU_OBJECT_PARAMETRIC_ERROR_EXT
 100208

	)

185 
	#GLU_OBJECT_PATH_LENGTH
 100209

	)

186 
	#GLU_OBJECT_PATH_LENGTH_EXT
 100209

	)

187 
	#GLU_PATH_LENGTH
 100215

	)

188 
	#GLU_PARAMETRIC_ERROR
 100216

	)

189 
	#GLU_DOMAIN_DISTANCE
 100217

	)

192 
	#GLU_MAP1_TRIM_2
 100210

	)

193 
	#GLU_MAP1_TRIM_3
 100211

	)

196 
	#GLU_POINT
 100010

	)

197 
	#GLU_LINE
 100011

	)

198 
	#GLU_FILL
 100012

	)

199 
	#GLU_SILHOUETTE
 100013

	)

205 
	#GLU_SMOOTH
 100000

	)

206 
	#GLU_FLAT
 100001

	)

207 
	#GLU_NONE
 100002

	)

210 
	#GLU_OUTSIDE
 100020

	)

211 
	#GLU_INSIDE
 100021

	)

214 
	#GLU_TESS_BEGIN
 100100

	)

215 
	#GLU_BEGIN
 100100

	)

216 
	#GLU_TESS_VERTEX
 100101

	)

217 
	#GLU_VERTEX
 100101

	)

218 
	#GLU_TESS_END
 100102

	)

219 
	#GLU_END
 100102

	)

220 
	#GLU_TESS_ERROR
 100103

	)

221 
	#GLU_TESS_EDGE_FLAG
 100104

	)

222 
	#GLU_EDGE_FLAG
 100104

	)

223 
	#GLU_TESS_COMBINE
 100105

	)

224 
	#GLU_TESS_BEGIN_DATA
 100106

	)

225 
	#GLU_TESS_VERTEX_DATA
 100107

	)

226 
	#GLU_TESS_END_DATA
 100108

	)

227 
	#GLU_TESS_ERROR_DATA
 100109

	)

228 
	#GLU_TESS_EDGE_FLAG_DATA
 100110

	)

229 
	#GLU_TESS_COMBINE_DATA
 100111

	)

232 
	#GLU_CW
 100120

	)

233 
	#GLU_CCW
 100121

	)

234 
	#GLU_INTERIOR
 100122

	)

235 
	#GLU_EXTERIOR
 100123

	)

236 
	#GLU_UNKNOWN
 100124

	)

239 
	#GLU_TESS_WINDING_RULE
 100140

	)

240 
	#GLU_TESS_BOUNDARY_ONLY
 100141

	)

241 
	#GLU_TESS_TOLERANCE
 100142

	)

244 
	#GLU_TESS_ERROR1
 100151

	)

245 
	#GLU_TESS_ERROR2
 100152

	)

246 
	#GLU_TESS_ERROR3
 100153

	)

247 
	#GLU_TESS_ERROR4
 100154

	)

248 
	#GLU_TESS_ERROR5
 100155

	)

249 
	#GLU_TESS_ERROR6
 100156

	)

250 
	#GLU_TESS_ERROR7
 100157

	)

251 
	#GLU_TESS_ERROR8
 100158

	)

252 
	#GLU_TESS_MISSING_BEGIN_POLYGON
 100151

	)

253 
	#GLU_TESS_MISSING_BEGIN_CONTOUR
 100152

	)

254 
	#GLU_TESS_MISSING_END_POLYGON
 100153

	)

255 
	#GLU_TESS_MISSING_END_CONTOUR
 100154

	)

256 
	#GLU_TESS_COORD_TOO_LARGE
 100155

	)

257 
	#GLU_TESS_NEED_COMBINE_CALLBACK
 100156

	)

260 
	#GLU_TESS_WINDING_ODD
 100130

	)

261 
	#GLU_TESS_WINDING_NONZERO
 100131

	)

262 
	#GLU_TESS_WINDING_POSITIVE
 100132

	)

263 
	#GLU_TESS_WINDING_NEGATIVE
 100133

	)

264 
	#GLU_TESS_WINDING_ABS_GEQ_TWO
 100134

	)

269 #ifde‡
__˝lu•lus


270 
˛ass
 
GLUnurbs
;

271 
˛ass
 
GLUquadric
;

272 
˛ass
 
GLUãs£œt‹
;

274 
GLUnurbs
 
	tGLUnurbs
;

275 
GLUquadric
 
	tGLUquadric
;

276 
GLUãs£œt‹
 
	tGLUãs£œt‹
;

279 
GLUnurbs
 
	tGLUnurbsObj
;

280 
GLUquadric
 
	tGLUquadricObj
;

281 
GLUãs£œt‹
 
	tGLUãs£œt‹Obj
;

282 
GLUãs£œt‹
 
	tGLUåünguœt‹Obj
;

284 
	#GLU_TESS_MAX_COORD
 1.0e150

	)

287 (
GLAPIENTRYP
 
	t_GLUfun˝å
)();

289 
GLAPI
 
GLAPIENTRY
 
gluBegöCurve
 (
GLUnurbs
* 
nurb
);

290 
GLAPI
 
GLAPIENTRY
 
gluBegöPﬁyg⁄
 (
GLUãs£œt‹
* 
ãss
);

291 
GLAPI
 
GLAPIENTRY
 
gluBegöSurÁ˚
 (
GLUnurbs
* 
nurb
);

292 
GLAPI
 
GLAPIENTRY
 
gluBegöTrim
 (
GLUnurbs
* 
nurb
);

293 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluBuûd1DMùm≠Levñs
 (
GLíum
 
èrgë
, GLöà
öã∫ÆF‹m©
, 
GLsizei
 
width
, GLíum 
f‹m©
, GLíum 
ty≥
, GLöà
Àvñ
, GLöà
ba£
, GLöà
max
, c⁄° *
d©a
);

294 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluBuûd1DMùm≠s
 (
GLíum
 
èrgë
, GLöà
öã∫ÆF‹m©
, 
GLsizei
 
width
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° *
d©a
);

295 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluBuûd2DMùm≠Levñs
 (
GLíum
 
èrgë
, GLöà
öã∫ÆF‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
, GLíum 
ty≥
, GLöà
Àvñ
, GLöà
ba£
, GLöà
max
, c⁄° *
d©a
);

296 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluBuûd2DMùm≠s
 (
GLíum
 
èrgë
, GLöà
öã∫ÆF‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° *
d©a
);

297 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluBuûd3DMùm≠Levñs
 (
GLíum
 
èrgë
, GLöà
öã∫ÆF‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLíum 
f‹m©
, GLíum 
ty≥
, GLöà
Àvñ
, GLöà
ba£
, GLöà
max
, c⁄° *
d©a
);

298 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluBuûd3DMùm≠s
 (
GLíum
 
èrgë
, GLöà
öã∫ÆF‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° *
d©a
);

299 
GLAPI
 
GLboﬁón
 
GLAPIENTRY
 
gluCheckExãnsi⁄
 (c⁄° 
GLubyã
 *
extName
, c⁄° GLubyã *
extSåög
);

300 
GLAPI
 
GLAPIENTRY
 
gluCylödî
 (
GLUquadric
* 
quad
, 
GLdoubÀ
 
ba£
, GLdoubÀ 
t›
, GLdoubÀ 
height
, 
GLöt
 
¶i˚s
, GLöà
°acks
);

301 
GLAPI
 
GLAPIENTRY
 
gluDñëeNurbsRídîî
 (
GLUnurbs
* 
nurb
);

302 
GLAPI
 
GLAPIENTRY
 
gluDñëeQuadric
 (
GLUquadric
* 
quad
);

303 
GLAPI
 
GLAPIENTRY
 
gluDñëeTess
 (
GLUãs£œt‹
* 
ãss
);

304 
GLAPI
 
GLAPIENTRY
 
gluDisk
 (
GLUquadric
* 
quad
, 
GLdoubÀ
 
ö√r
, GLdoubÀ 
ouãr
, 
GLöt
 
¶i˚s
, GLöà
lo›s
);

305 
GLAPI
 
GLAPIENTRY
 
gluEndCurve
 (
GLUnurbs
* 
nurb
);

306 
GLAPI
 
GLAPIENTRY
 
gluEndPﬁyg⁄
 (
GLUãs£œt‹
* 
ãss
);

307 
GLAPI
 
GLAPIENTRY
 
gluEndSurÁ˚
 (
GLUnurbs
* 
nurb
);

308 
GLAPI
 
GLAPIENTRY
 
gluEndTrim
 (
GLUnurbs
* 
nurb
);

309 
GLAPI
 c⁄° 
GLubyã
 * 
GLAPIENTRY
 
gluEº‹Såög
 (
GLíum
 
îr‹
);

310 
GLAPI
 
GLAPIENTRY
 
gluGëNurbsPr›îty
 (
GLUnurbs
* 
nurb
, 
GLíum
 
¥›îty
, 
GLÊﬂt
* 
d©a
);

311 
GLAPI
 c⁄° 
GLubyã
 * 
GLAPIENTRY
 
gluGëSåög
 (
GLíum
 
«me
);

312 
GLAPI
 
GLAPIENTRY
 
gluGëTessPr›îty
 (
GLUãs£œt‹
* 
ãss
, 
GLíum
 
which
, 
GLdoubÀ
* 
d©a
);

313 
GLAPI
 
GLAPIENTRY
 
gluLﬂdSam∂ögM©ri˚s
 (
GLUnurbs
* 
nurb
, c⁄° 
GLÊﬂt
 *
modñ
, c⁄° GLÊﬂà*
≥r•e˘ive
, c⁄° 
GLöt
 *
võw
);

314 
GLAPI
 
GLAPIENTRY
 
gluLookAt
 (
GLdoubÀ
 
eyeX
, GLdoubÀ 
eyeY
, GLdoubÀ 
eyeZ
, GLdoubÀ 
˚¡îX
, GLdoubÀ 
˚¡îY
, GLdoubÀ 
˚¡îZ
, GLdoubÀ 
upX
, GLdoubÀ 
upY
, GLdoubÀ 
upZ
);

315 
GLAPI
 
GLUnurbs
* 
GLAPIENTRY
 
gluNewNurbsRídîî
 ();

316 
GLAPI
 
GLUquadric
* 
GLAPIENTRY
 
gluNewQuadric
 ();

317 
GLAPI
 
GLUãs£œt‹
* 
GLAPIENTRY
 
gluNewTess
 ();

318 
GLAPI
 
GLAPIENTRY
 
gluNextC⁄tour
 (
GLUãs£œt‹
* 
ãss
, 
GLíum
 
ty≥
);

319 
GLAPI
 
GLAPIENTRY
 
gluNurbsCÆlback
 (
GLUnurbs
* 
nurb
, 
GLíum
 
which
, 
_GLUfun˝å
 
CÆlBackFunc
);

320 
GLAPI
 
GLAPIENTRY
 
gluNurbsCÆlbackD©a
 (
GLUnurbs
* 
nurb
, 
GLvoid
* 
u£rD©a
);

321 
GLAPI
 
GLAPIENTRY
 
gluNurbsCÆlbackD©aEXT
 (
GLUnurbs
* 
nurb
, 
GLvoid
* 
u£rD©a
);

322 
GLAPI
 
GLAPIENTRY
 
gluNurbsCurve
 (
GLUnurbs
* 
nurb
, 
GLöt
 
knŸCou¡
, 
GLÊﬂt
 *
knŸs
, GLöà
°ride
, GLÊﬂà*
c⁄åﬁ
, GLöà
‹dî
, 
GLíum
 
ty≥
);

323 
GLAPI
 
GLAPIENTRY
 
gluNurbsPr›îty
 (
GLUnurbs
* 
nurb
, 
GLíum
 
¥›îty
, 
GLÊﬂt
 
vÆue
);

324 
GLAPI
 
GLAPIENTRY
 
gluNurbsSurÁ˚
 (
GLUnurbs
* 
nurb
, 
GLöt
 
sKnŸCou¡
, 
GLÊﬂt
* 
sKnŸs
, GLöà
tKnŸCou¡
, GLÊﬂt* 
tKnŸs
, GLöà
sSåide
, GLöà
tSåide
, GLÊﬂt* 
c⁄åﬁ
, GLöà
sOrdî
, GLöà
tOrdî
, 
GLíum
 
ty≥
);

325 
GLAPI
 
GLAPIENTRY
 
gluOπho2D
 (
GLdoubÀ
 
À·
, GLdoubÀ 
right
, GLdoubÀ 
bŸtom
, GLdoubÀ 
t›
);

326 
GLAPI
 
GLAPIENTRY
 
gluP¨tülDisk
 (
GLUquadric
* 
quad
, 
GLdoubÀ
 
ö√r
, GLdoubÀ 
ouãr
, 
GLöt
 
¶i˚s
, GLöà
lo›s
, GLdoubÀ 
°¨t
, GLdoubÀ 
swìp
);

327 
GLAPI
 
GLAPIENTRY
 
gluPî•e˘ive
 (
GLdoubÀ
 
fovy
, GLdoubÀ 
a•e˘
, GLdoubÀ 
zNór
, GLdoubÀ 
zF¨
);

328 
GLAPI
 
GLAPIENTRY
 
gluPickM©rix
 (
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
dñX
, GLdoubÀ 
dñY
, 
GLöt
 *
võwp‹t
);

329 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluProje˘
 (
GLdoubÀ
 
objX
, GLdoubÀ 
objY
, GLdoubÀ 
objZ
, c⁄° GLdoubÀ *
modñ
, c⁄° GLdoubÀ *
¥oj
, c⁄° GLöà*
võw
, GLdoubÀ* 
wöX
, GLdoubÀ* 
wöY
, GLdoubÀ* 
wöZ
);

330 
GLAPI
 
GLAPIENTRY
 
gluPwlCurve
 (
GLUnurbs
* 
nurb
, 
GLöt
 
cou¡
, 
GLÊﬂt
* 
d©a
, GLöà
°ride
, 
GLíum
 
ty≥
);

331 
GLAPI
 
GLAPIENTRY
 
gluQuadricCÆlback
 (
GLUquadric
* 
quad
, 
GLíum
 
which
, 
_GLUfun˝å
 
CÆlBackFunc
);

332 
GLAPI
 
GLAPIENTRY
 
gluQuadricDøwStyÀ
 (
GLUquadric
* 
quad
, 
GLíum
 
døw
);

333 
GLAPI
 
GLAPIENTRY
 
gluQuadricN‹mÆs
 (
GLUquadric
* 
quad
, 
GLíum
 
n‹mÆ
);

334 
GLAPI
 
GLAPIENTRY
 
gluQuadricOrõ¡©i⁄
 (
GLUquadric
* 
quad
, 
GLíum
 
‹õ¡©i⁄
);

335 
GLAPI
 
GLAPIENTRY
 
gluQuadricTextuª
 (
GLUquadric
* 
quad
, 
GLboﬁón
 
ãxtuª
);

336 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluSˇÀImage
 (
GLíum
 
f‹m©
, 
GLsizei
 
wIn
, GLsizeò
hIn
, GLíum 
ty≥In
, c⁄° *
d©aIn
, GLsizeò
wOut
, GLsizeò
hOut
, GLíum 
ty≥Out
, 
GLvoid
* 
d©aOut
);

337 
GLAPI
 
GLAPIENTRY
 
gluSphîe
 (
GLUquadric
* 
quad
, 
GLdoubÀ
 
ødius
, 
GLöt
 
¶i˚s
, GLöà
°acks
);

338 
GLAPI
 
GLAPIENTRY
 
gluTessBegöC⁄tour
 (
GLUãs£œt‹
* 
ãss
);

339 
GLAPI
 
GLAPIENTRY
 
gluTessBegöPﬁyg⁄
 (
GLUãs£œt‹
* 
ãss
, 
GLvoid
* 
d©a
);

340 
GLAPI
 
GLAPIENTRY
 
gluTessCÆlback
 (
GLUãs£œt‹
* 
ãss
, 
GLíum
 
which
, 
_GLUfun˝å
 
CÆlBackFunc
);

341 
GLAPI
 
GLAPIENTRY
 
gluTessEndC⁄tour
 (
GLUãs£œt‹
* 
ãss
);

342 
GLAPI
 
GLAPIENTRY
 
gluTessEndPﬁyg⁄
 (
GLUãs£œt‹
* 
ãss
);

343 
GLAPI
 
GLAPIENTRY
 
gluTessN‹mÆ
 (
GLUãs£œt‹
* 
ãss
, 
GLdoubÀ
 
vÆueX
, GLdoubÀ 
vÆueY
, GLdoubÀ 
vÆueZ
);

344 
GLAPI
 
GLAPIENTRY
 
gluTessPr›îty
 (
GLUãs£œt‹
* 
ãss
, 
GLíum
 
which
, 
GLdoubÀ
 
d©a
);

345 
GLAPI
 
GLAPIENTRY
 
gluTessVîãx
 (
GLUãs£œt‹
* 
ãss
, 
GLdoubÀ
 *
loˇti⁄
, 
GLvoid
* 
d©a
);

346 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluUnProje˘
 (
GLdoubÀ
 
wöX
, GLdoubÀ 
wöY
, GLdoubÀ 
wöZ
, c⁄° GLdoubÀ *
modñ
, c⁄° GLdoubÀ *
¥oj
, c⁄° GLöà*
võw
, GLdoubÀ* 
objX
, GLdoubÀ* 
objY
, GLdoubÀ* 
objZ
);

347 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluUnProje˘4
 (
GLdoubÀ
 
wöX
, GLdoubÀ 
wöY
, GLdoubÀ 
wöZ
, GLdoubÀ 
˛ùW
, c⁄° GLdoubÀ *
modñ
, c⁄° GLdoubÀ *
¥oj
, c⁄° GLöà*
võw
, GLdoubÀ 
√¨VÆ
, GLdoubÀ 
ÁrVÆ
, GLdoubÀ* 
objX
, GLdoubÀ* 
objY
, GLdoubÀ* 
objZ
, GLdoubÀ* 
objW
);

349 #ifde‡
__˝lu•lus


	@include/GL/glu_mangle.h

22 #i‚de‡
GLU_MANGLE_H


23 
	#GLU_MANGLE_H


	)

26 
	#gluLookAt
 
mgluLookAt


	)

27 
	#gluOπho2D
 
mgluOπho2D


	)

28 
	#gluPî•e˘ive
 
mgluPî•e˘ive


	)

29 
	#gluPickM©rix
 
mgluPickM©rix


	)

30 
	#gluProje˘
 
mgluProje˘


	)

31 
	#gluUnProje˘
 
mgluUnProje˘


	)

32 
	#gluEº‹Såög
 
mgluEº‹Såög


	)

33 
	#gluSˇÀImage
 
mgluSˇÀImage


	)

34 
	#gluBuûd1DMùm≠s
 
mgluBuûd1DMùm≠s


	)

35 
	#gluBuûd2DMùm≠s
 
mgluBuûd2DMùm≠s


	)

36 
	#gluNewQuadric
 
mgluNewQuadric


	)

37 
	#gluDñëeQuadric
 
mgluDñëeQuadric


	)

38 
	#gluQuadricDøwStyÀ
 
mgluQuadricDøwStyÀ


	)

39 
	#gluQuadricOrõ¡©i⁄
 
mgluQuadricOrõ¡©i⁄


	)

40 
	#gluQuadricN‹mÆs
 
mgluQuadricN‹mÆs


	)

41 
	#gluQuadricTextuª
 
mgluQuadricTextuª


	)

42 
	#gluQuadricCÆlback
 
mgluQuadricCÆlback


	)

43 
	#gluCylödî
 
mgluCylödî


	)

44 
	#gluSphîe
 
mgluSphîe


	)

45 
	#gluDisk
 
mgluDisk


	)

46 
	#gluP¨tülDisk
 
mgluP¨tülDisk


	)

47 
	#gluNewNurbsRídîî
 
mgluNewNurbsRídîî


	)

48 
	#gluDñëeNurbsRídîî
 
mgluDñëeNurbsRídîî


	)

49 
	#gluLﬂdSam∂ögM©ri˚s
 
mgluLﬂdSam∂ögM©ri˚s


	)

50 
	#gluNurbsPr›îty
 
mgluNurbsPr›îty


	)

51 
	#gluGëNurbsPr›îty
 
mgluGëNurbsPr›îty


	)

52 
	#gluBegöCurve
 
mgluBegöCurve


	)

53 
	#gluEndCurve
 
mgluEndCurve


	)

54 
	#gluNurbsCurve
 
mgluNurbsCurve


	)

55 
	#gluBegöSurÁ˚
 
mgluBegöSurÁ˚


	)

56 
	#gluEndSurÁ˚
 
mgluEndSurÁ˚


	)

57 
	#gluNurbsSurÁ˚
 
mgluNurbsSurÁ˚


	)

58 
	#gluBegöTrim
 
mgluBegöTrim


	)

59 
	#gluEndTrim
 
mgluEndTrim


	)

60 
	#gluPwlCurve
 
mgluPwlCurve


	)

61 
	#gluNurbsCÆlback
 
mgluNurbsCÆlback


	)

62 
	#gluNewTess
 
mgluNewTess


	)

63 
	#gluDñëeTess
 
mgluDñëeTess


	)

64 
	#gluTessBegöPﬁyg⁄
 
mgluTessBegöPﬁyg⁄


	)

65 
	#gluTessBegöC⁄tour
 
mgluTessBegöC⁄tour


	)

66 
	#gluTessVîãx
 
mgluTessVîãx


	)

67 
	#gluTessEndPﬁyg⁄
 
mgluTessEndPﬁyg⁄


	)

68 
	#gluTessEndC⁄tour
 
mgluTessEndC⁄tour


	)

69 
	#gluTessPr›îty
 
mgluTessPr›îty


	)

70 
	#gluTessN‹mÆ
 
mgluTessN‹mÆ


	)

71 
	#gluTessCÆlback
 
mgluTessCÆlback


	)

72 
	#gluGëTessPr›îty
 
mgluGëTessPr›îty


	)

73 
	#gluBegöPﬁyg⁄
 
mgluBegöPﬁyg⁄


	)

74 
	#gluNextC⁄tour
 
mgluNextC⁄tour


	)

75 
	#gluEndPﬁyg⁄
 
mgluEndPﬁyg⁄


	)

76 
	#gluGëSåög
 
mgluGëSåög


	)

77 
	#gluBuûd1DMùm≠Levñs
 
mgluBuûd1DMùm≠Levñs


	)

78 
	#gluBuûd2DMùm≠Levñs
 
mgluBuûd2DMùm≠Levñs


	)

79 
	#gluBuûd3DMùm≠Levñs
 
mgluBuûd3DMùm≠Levñs


	)

80 
	#gluBuûd3DMùm≠s
 
mgluBuûd3DMùm≠s


	)

81 
	#gluCheckExãnsi⁄
 
mgluCheckExãnsi⁄


	)

82 
	#gluUnProje˘4
 
mgluUnProje˘4


	)

83 
	#gluNurbsCÆlbackD©a
 
mgluNurbsCÆlbackD©a


	)

84 
	#gluNurbsCÆlbackD©aEXT
 
mgluNurbsCÆlbackD©aEXT


	)

	@include/GL/glut.h

1 #i‚de‡ 
__GLUT_H__


2 
	#__GLUT_H__


	)

17 
	~"‰ìglut_°d.h
"

	@include/GL/glx.h

26 #i‚de‡
GLX_H


27 
	#GLX_H


	)

30 #ifde‡
__VMS


31 
	~<GL/vms_x_fix.h
>

32 #ifde‡
__˝lu•lus


35 #¥agm®
mesßge
 
dißbÀ
 
nosimpöt


38 
	~<X11/Xlib.h
>

39 
	~<X11/Xutû.h
>

40 #ifde‡
__VMS


41 #ifde‡
__˝lu•lus


42 #¥agm®
mesßge
 
íabÀ
 
nosimpöt


45 
	~<GL/gl.h
>

48 #i‡
deföed
(
USE_MGL_NAMESPACE
)

49 
	~"glx_m™gÀ.h
"

53 #ifde‡
__˝lu•lus


58 
	#GLX_VERSION_1_1
 1

	)

59 
	#GLX_VERSION_1_2
 1

	)

60 
	#GLX_VERSION_1_3
 1

	)

61 
	#GLX_VERSION_1_4
 1

	)

63 
	#GLX_EXTENSION_NAME
 "GLX"

	)

70 
	#GLX_USE_GL
 1

	)

71 
	#GLX_BUFFER_SIZE
 2

	)

72 
	#GLX_LEVEL
 3

	)

73 
	#GLX_RGBA
 4

	)

74 
	#GLX_DOUBLEBUFFER
 5

	)

75 
	#GLX_STEREO
 6

	)

76 
	#GLX_AUX_BUFFERS
 7

	)

77 
	#GLX_RED_SIZE
 8

	)

78 
	#GLX_GREEN_SIZE
 9

	)

79 
	#GLX_BLUE_SIZE
 10

	)

80 
	#GLX_ALPHA_SIZE
 11

	)

81 
	#GLX_DEPTH_SIZE
 12

	)

82 
	#GLX_STENCIL_SIZE
 13

	)

83 
	#GLX_ACCUM_RED_SIZE
 14

	)

84 
	#GLX_ACCUM_GREEN_SIZE
 15

	)

85 
	#GLX_ACCUM_BLUE_SIZE
 16

	)

86 
	#GLX_ACCUM_ALPHA_SIZE
 17

	)

92 
	#GLX_BAD_SCREEN
 1

	)

93 
	#GLX_BAD_ATTRIBUTE
 2

	)

94 
	#GLX_NO_EXTENSION
 3

	)

95 
	#GLX_BAD_VISUAL
 4

	)

96 
	#GLX_BAD_CONTEXT
 5

	)

97 
	#GLX_BAD_VALUE
 6

	)

98 
	#GLX_BAD_ENUM
 7

	)

104 
	#GLX_VENDOR
 1

	)

105 
	#GLX_VERSION
 2

	)

106 
	#GLX_EXTENSIONS
 3

	)

112 
	#GLX_CONFIG_CAVEAT
 0x20

	)

113 
	#GLX_DONT_CARE
 0xFFFFFFFF

	)

114 
	#GLX_X_VISUAL_TYPE
 0x22

	)

115 
	#GLX_TRANSPARENT_TYPE
 0x23

	)

116 
	#GLX_TRANSPARENT_INDEX_VALUE
 0x24

	)

117 
	#GLX_TRANSPARENT_RED_VALUE
 0x25

	)

118 
	#GLX_TRANSPARENT_GREEN_VALUE
 0x26

	)

119 
	#GLX_TRANSPARENT_BLUE_VALUE
 0x27

	)

120 
	#GLX_TRANSPARENT_ALPHA_VALUE
 0x28

	)

121 
	#GLX_WINDOW_BIT
 0x00000001

	)

122 
	#GLX_PIXMAP_BIT
 0x00000002

	)

123 
	#GLX_PBUFFER_BIT
 0x00000004

	)

124 
	#GLX_AUX_BUFFERS_BIT
 0x00000010

	)

125 
	#GLX_FRONT_LEFT_BUFFER_BIT
 0x00000001

	)

126 
	#GLX_FRONT_RIGHT_BUFFER_BIT
 0x00000002

	)

127 
	#GLX_BACK_LEFT_BUFFER_BIT
 0x00000004

	)

128 
	#GLX_BACK_RIGHT_BUFFER_BIT
 0x00000008

	)

129 
	#GLX_DEPTH_BUFFER_BIT
 0x00000020

	)

130 
	#GLX_STENCIL_BUFFER_BIT
 0x00000040

	)

131 
	#GLX_ACCUM_BUFFER_BIT
 0x00000080

	)

132 
	#GLX_NONE
 0x8000

	)

133 
	#GLX_SLOW_CONFIG
 0x8001

	)

134 
	#GLX_TRUE_COLOR
 0x8002

	)

135 
	#GLX_DIRECT_COLOR
 0x8003

	)

136 
	#GLX_PSEUDO_COLOR
 0x8004

	)

137 
	#GLX_STATIC_COLOR
 0x8005

	)

138 
	#GLX_GRAY_SCALE
 0x8006

	)

139 
	#GLX_STATIC_GRAY
 0x8007

	)

140 
	#GLX_TRANSPARENT_RGB
 0x8008

	)

141 
	#GLX_TRANSPARENT_INDEX
 0x8009

	)

142 
	#GLX_VISUAL_ID
 0x800B

	)

143 
	#GLX_SCREEN
 0x800C

	)

144 
	#GLX_NON_CONFORMANT_CONFIG
 0x800D

	)

145 
	#GLX_DRAWABLE_TYPE
 0x8010

	)

146 
	#GLX_RENDER_TYPE
 0x8011

	)

147 
	#GLX_X_RENDERABLE
 0x8012

	)

148 
	#GLX_FBCONFIG_ID
 0x8013

	)

149 
	#GLX_RGBA_TYPE
 0x8014

	)

150 
	#GLX_COLOR_INDEX_TYPE
 0x8015

	)

151 
	#GLX_MAX_PBUFFER_WIDTH
 0x8016

	)

152 
	#GLX_MAX_PBUFFER_HEIGHT
 0x8017

	)

153 
	#GLX_MAX_PBUFFER_PIXELS
 0x8018

	)

154 
	#GLX_PRESERVED_CONTENTS
 0x801B

	)

155 
	#GLX_LARGEST_PBUFFER
 0x801C

	)

156 
	#GLX_WIDTH
 0x801D

	)

157 
	#GLX_HEIGHT
 0x801E

	)

158 
	#GLX_EVENT_MASK
 0x801F

	)

159 
	#GLX_DAMAGED
 0x8020

	)

160 
	#GLX_SAVED
 0x8021

	)

161 
	#GLX_WINDOW
 0x8022

	)

162 
	#GLX_PBUFFER
 0x8023

	)

163 
	#GLX_PBUFFER_HEIGHT
 0x8040

	)

164 
	#GLX_PBUFFER_WIDTH
 0x8041

	)

165 
	#GLX_RGBA_BIT
 0x00000001

	)

166 
	#GLX_COLOR_INDEX_BIT
 0x00000002

	)

167 
	#GLX_PBUFFER_CLOBBER_MASK
 0x08000000

	)

173 
	#GLX_SAMPLE_BUFFERS
 0x186a0

	)

174 
	#GLX_SAMPLES
 0x186a1

	)

178 
__GLXc⁄ãxtRec
 *
	tGLXC⁄ãxt
;

179 
XID
 
	tGLXPixm≠
;

180 
XID
 
	tGLXDøwabÀ
;

182 
__GLXFBC⁄figRec
 *
	tGLXFBC⁄fig
;

183 
XID
 
	tGLXFBC⁄figID
;

184 
XID
 
	tGLXC⁄ãxtID
;

185 
XID
 
	tGLXWödow
;

186 
XID
 
	tGLXPbuf„r
;

190 
XVisuÆInfo
* 
glXChoo£VisuÆ
–
Di•œy
 *
dpy
, 
s¸ìn
,

191 *
©åibLi°
 );

193 
GLXC⁄ãxt
 
glXCª©eC⁄ãxt
–
Di•œy
 *
dpy
, 
XVisuÆInfo
 *
vis
,

194 
GLXC⁄ãxt
 
sh¨eLi°
, 
Boﬁ
 
dúe˘
 );

196 
glXDe°royC⁄ãxt
–
Di•œy
 *
dpy
, 
GLXC⁄ãxt
 
˘x
 );

198 
Boﬁ
 
glXMakeCuºít
–
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
,

199 
GLXC⁄ãxt
 
˘x
);

201 
glXC›yC⁄ãxt
–
Di•œy
 *
dpy
, 
GLXC⁄ãxt
 
§c
, GLXC⁄ãxà
d°
,

202 
mask
 );

204 
glXSw≠Buf„rs
–
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
 );

206 
GLXPixm≠
 
glXCª©eGLXPixm≠
–
Di•œy
 *
dpy
, 
XVisuÆInfo
 *
visuÆ
,

207 
Pixm≠
 
pixm≠
 );

209 
glXDe°royGLXPixm≠
–
Di•œy
 *
dpy
, 
GLXPixm≠
 
pixm≠
 );

211 
Boﬁ
 
glXQuîyExãnsi⁄
–
Di•œy
 *
dpy
, *
îr‹b
, *
evít
 );

213 
Boﬁ
 
glXQuîyVîsi⁄
–
Di•œy
 *
dpy
, *
maj
, *
mö
 );

215 
Boﬁ
 
glXIsDúe˘
–
Di•œy
 *
dpy
, 
GLXC⁄ãxt
 
˘x
 );

217 
glXGëC⁄fig
–
Di•œy
 *
dpy
, 
XVisuÆInfo
 *
visuÆ
,

218 
©åib
, *
vÆue
 );

220 
GLXC⁄ãxt
 
glXGëCuºítC⁄ãxt
( );

222 
GLXDøwabÀ
 
glXGëCuºítDøwabÀ
( );

224 
glXWaôGL
( );

226 
glXWaôX
( );

228 
glXU£XF⁄t
–
F⁄t
 
f⁄t
, 
fú°
, 
cou¡
, 
li°
 );

233 c⁄° *
glXQuîyExãnsi⁄sSåög
–
Di•œy
 *
dpy
, 
s¸ìn
 );

235 c⁄° *
glXQuîySîvîSåög
–
Di•œy
 *
dpy
, 
s¸ìn
, 
«me
 );

237 c⁄° *
glXGëClõ¡Såög
–
Di•œy
 *
dpy
, 
«me
 );

241 
Di•œy
 *
glXGëCuºítDi•œy
( );

245 
GLXFBC⁄fig
 *
glXChoo£FBC⁄fig
–
Di•œy
 *
dpy
, 
s¸ìn
,

246 c⁄° *
©åibLi°
, *
nôems
 );

248 
glXGëFBC⁄figAârib
–
Di•œy
 *
dpy
, 
GLXFBC⁄fig
 
c⁄fig
,

249 
©åibuã
, *
vÆue
 );

251 
GLXFBC⁄fig
 *
glXGëFBC⁄figs
–
Di•œy
 *
dpy
, 
s¸ìn
,

252 *
√Àmíts
 );

254 
XVisuÆInfo
 *
glXGëVisuÆFromFBC⁄fig
–
Di•œy
 *
dpy
,

255 
GLXFBC⁄fig
 
c⁄fig
 );

257 
GLXWödow
 
glXCª©eWödow
–
Di•œy
 *
dpy
, 
GLXFBC⁄fig
 
c⁄fig
,

258 
Wödow
 
wö
, c⁄° *
©åibLi°
 );

260 
glXDe°royWödow
–
Di•œy
 *
dpy
, 
GLXWödow
 
wödow
 );

262 
GLXPixm≠
 
glXCª©ePixm≠
–
Di•œy
 *
dpy
, 
GLXFBC⁄fig
 
c⁄fig
,

263 
Pixm≠
 
pixm≠
, c⁄° *
©åibLi°
 );

265 
glXDe°royPixm≠
–
Di•œy
 *
dpy
, 
GLXPixm≠
 
pixm≠
 );

267 
GLXPbuf„r
 
glXCª©ePbuf„r
–
Di•œy
 *
dpy
, 
GLXFBC⁄fig
 
c⁄fig
,

268 c⁄° *
©åibLi°
 );

270 
glXDe°royPbuf„r
–
Di•œy
 *
dpy
, 
GLXPbuf„r
 
pbuf
 );

272 
glXQuîyDøwabÀ
–
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døw
, 
©åibuã
,

273 *
vÆue
 );

275 
GLXC⁄ãxt
 
glXCª©eNewC⁄ãxt
–
Di•œy
 *
dpy
, 
GLXFBC⁄fig
 
c⁄fig
,

276 
ªndîTy≥
, 
GLXC⁄ãxt
 
sh¨eLi°
,

277 
Boﬁ
 
dúe˘
 );

279 
Boﬁ
 
glXMakeC⁄ãxtCuºít
–
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døw
,

280 
GLXDøwabÀ
 
ªad
, 
GLXC⁄ãxt
 
˘x
 );

282 
GLXDøwabÀ
 
glXGëCuºítRódDøwabÀ
( );

284 
glXQuîyC⁄ãxt
–
Di•œy
 *
dpy
, 
GLXC⁄ãxt
 
˘x
, 
©åibuã
,

285 *
vÆue
 );

287 
glXSñe˘Evít
–
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
,

288 
mask
 );

290 
glXGëSñe˘edEvít
–
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
,

291 *
mask
 );

294 
	gGLXFBC⁄fig
 * (* 
	tPFNGLXGETFBCONFIGSPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, *
	t√Àmíts
);

295 
	gGLXFBC⁄fig
 * (* 
	tPFNGLXCHOOSEFBCONFIGPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, c⁄° *
	t©åib_li°
, *
	t√Àmíts
);

296 (* 
	gPFNGLXGETFBCONFIGATTRIBPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	t©åibuã
, *
	tvÆue
);

297 
	gXVisuÆInfo
 * (* 
	tPFNGLXGETVISUALFROMFBCONFIGPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
);

298 
GLXWödow
 (* 
	tPFNGLXCREATEWINDOWPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tWödow
 
	twö
, c⁄° *
	t©åib_li°
);

299 (* 
	gPFNGLXDESTROYWINDOWPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXWödow
 
	twö
);

300 
GLXPixm≠
 (* 
	tPFNGLXCREATEPIXMAPPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tPixm≠
 
	tpixm≠
, c⁄° *
	t©åib_li°
);

301 (* 
	gPFNGLXDESTROYPIXMAPPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPixm≠
 
	tpixm≠
);

302 
GLXPbuf„r
 (* 
	tPFNGLXCREATEPBUFFERPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, c⁄° *
	t©åib_li°
);

303 (* 
	gPFNGLXDESTROYPBUFFERPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPbuf„r
 
	tpbuf
);

304 (* 
	gPFNGLXQUERYDRAWABLEPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, 
	t©åibuã
, *
	tvÆue
);

305 
GLXC⁄ãxt
 (* 
	tPFNGLXCREATENEWCONTEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tªndî_ty≥
, 
	tGLXC⁄ãxt
 
	tsh¨e_li°
, 
	tBoﬁ
 
	tdúe˘
);

306 
Boﬁ
 (* 
	tPFNGLXMAKECONTEXTCURRENTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, GLXDøwabÀ 
	tªad
, 
	tGLXC⁄ãxt
 
	t˘x
);

307 
GLXDøwabÀ
 (* 
	tPFNGLXGETCURRENTREADDRAWABLEPROC
) ();

308 
	gDi•œy
 * (* 
	tPFNGLXGETCURRENTDISPLAYPROC
) ();

309 (* 
	gPFNGLXQUERYCONTEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXC⁄ãxt
 
	t˘x
, 
	t©åibuã
, *
	tvÆue
);

310 (* 
	gPFNGLXSELECTEVENTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, 
	tevít_mask
);

311 (* 
	gPFNGLXGETSELECTEDEVENTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, *
	tevít_mask
);

317 #i‚de‡
GLX_ARB_gë_¥oc_addªss


318 
	#GLX_ARB_gë_¥oc_addªss
 1

	)

320 (*
	g__GLXextFuncPå
)();

321 
__GLXextFuncPå
 
glXGëProcAddªssARB
 (c⁄° 
GLubyã
 *);

328 (*
glXGëProcAddªss
(c⁄° 
GLubyã
 *
¥o˙ame
))( );

331 
__GLXextFuncPå
 (* 
	tPFNGLXGETPROCADDRESSPROC
Ë(c⁄° 
	tGLubyã
 *
	t¥ocName
);

334 #i‚de‡
GLX_GLXEXT_LEGACY


336 
	~<GL/glxext.h
>

349 #i‚de‡
GLX_NV_vîãx_¨øy_ønge


350 
	#GLX_NV_vîãx_¨øy_ønge


	)

352 *
glXAŒoˇãMem‹yNV
(
GLsizei
 
size
, 
GLÊﬂt
 
ªad‰eq
, GLÊﬂà
wrôe‰eq
, GLÊﬂà
¥i‹ôy
);

353 
glXFªeMem‹yNV
(
GLvoid
 *
poöãr
);

354 * ( * 
	tPFNGLXALLOCATEMEMORYNVPROC
Ë(
	tGLsizei
 
	tsize
, 
	tGLÊﬂt
 
	tªad‰eq
, GLÊﬂà
	twrôe‰eq
, GLÊﬂà
	t¥i‹ôy
);

355 –* 
	gPFNGLXFREEMEMORYNVPROC
Ë(
	tGLvoid
 *
	tpoöãr
);

363 #i‚de‡
GLX_MESA_Æloˇã_mem‹y


364 
	#GLX_MESA_Æloˇã_mem‹y
 1

	)

366 *
glXAŒoˇãMem‹yMESA
(
Di•œy
 *
dpy
, 
s¸n
, 
size_t
 
size
, 
ªad‰eq
, 
wrôe‰eq
, 
¥i‹ôy
);

367 
glXFªeMem‹yMESA
(
Di•œy
 *
dpy
, 
s¸n
, *
poöãr
);

368 
GLuöt
 
glXGëMem‹yOff£tMESA
(
Di•œy
 *
dpy
, 
s¸n
, c⁄° *
poöãr
);

369 * ( * 
	tPFNGLXALLOCATEMEMORYMESAPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸n
, 
	tsize_t
 
	tsize
, 
	tªad‰eq
, 
	twrôe‰eq
, 
	t¥i‹ôy
);

370 –* 
	gPFNGLXFREEMEMORYMESAPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸n
, *
	tpoöãr
);

371 
GLuöt
 (* 
	tPFNGLXGETMEMORYOFFSETMESAPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸n
, c⁄° *
	tpoöãr
);

380 #i‚de‡
GLX_ARB_ªndî_ãxtuª


381 
	#GLX_ARB_ªndî_ãxtuª
 1

	)

383 
Boﬁ
 
glXBödTexImageARB
(
Di•œy
 *
dpy
, 
GLXPbuf„r
 
pbuf„r
, 
buf„r
);

384 
Boﬁ
 
glXRñó£TexImageARB
(
Di•œy
 *
dpy
, 
GLXPbuf„r
 
pbuf„r
, 
buf„r
);

385 
Boﬁ
 
glXDøwabÀAâribARB
(
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døw
, c⁄° *
©åibLi°
);

393 #i‚de‡
GLX_NV_Êﬂt_buf„r


394 
	#GLX_NV_Êﬂt_buf„r
 1

	)

396 
	#GLX_FLOAT_COMPONENTS_NV
 0x20B0

	)

405 #i‚de‡
GLX_MESA_sw≠_‰ame_ußge


406 
	#GLX_MESA_sw≠_‰ame_ußge
 1

	)

408 
glXGëFømeUßgeMESA
(
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
, *
ußge
);

409 
glXBegöFømeTøckögMESA
(
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
);

410 
glXEndFømeTøckögMESA
(
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
);

411 
glXQuîyFømeTøckögMESA
(
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
, 
öt64_t
 *
sw≠Cou¡
, i¡64_à*
mis£dFømes
, *
œ°Mis£dUßge
);

413 (*
	gPFNGLXGETFRAMEUSAGEMESAPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, *
	tußge
);

414 (*
	gPFNGLXBEGINFRAMETRACKINGMESAPROC
)(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
);

415 (*
	gPFNGLXENDFRAMETRACKINGMESAPROC
)(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
);

416 (*
	gPFNGLXQUERYFRAMETRACKINGMESAPROC
)(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt64_t
 *
	tsw≠Cou¡
, i¡64_à*
	tmis£dFømes
, *
	tœ°Mis£dUßge
);

425 #i‚de‡
GLX_MESA_sw≠_c⁄åﬁ


426 
	#GLX_MESA_sw≠_c⁄åﬁ
 1

	)

428 
glXSw≠I¡îvÆMESA
(
öãrvÆ
);

429 
glXGëSw≠I¡îvÆMESA
();

431 (*
	gPFNGLXSWAPINTERVALMESAPROC
)(
	töãrvÆ
);

432 (*
	gPFNGLXGETSWAPINTERVALMESAPROC
)();

442 #i‚de‡
GLX_EXT_ãxtuª_‰om_pixm≠


443 
	#GLX_EXT_ãxtuª_‰om_pixm≠
 1

	)

445 
	#GLX_BIND_TO_TEXTURE_RGB_EXT
 0x20D0

	)

446 
	#GLX_BIND_TO_TEXTURE_RGBA_EXT
 0x20D1

	)

447 
	#GLX_BIND_TO_MIPMAP_TEXTURE_EXT
 0x20D2

	)

448 
	#GLX_BIND_TO_TEXTURE_TARGETS_EXT
 0x20D3

	)

449 
	#GLX_Y_INVERTED_EXT
 0x20D4

	)

451 
	#GLX_TEXTURE_FORMAT_EXT
 0x20D5

	)

452 
	#GLX_TEXTURE_TARGET_EXT
 0x20D6

	)

453 
	#GLX_MIPMAP_TEXTURE_EXT
 0x20D7

	)

455 
	#GLX_TEXTURE_FORMAT_NONE_EXT
 0x20D8

	)

456 
	#GLX_TEXTURE_FORMAT_RGB_EXT
 0x20D9

	)

457 
	#GLX_TEXTURE_FORMAT_RGBA_EXT
 0x20DA

	)

459 
	#GLX_TEXTURE_1D_BIT_EXT
 0x00000001

	)

460 
	#GLX_TEXTURE_2D_BIT_EXT
 0x00000002

	)

461 
	#GLX_TEXTURE_RECTANGLE_BIT_EXT
 0x00000004

	)

463 
	#GLX_TEXTURE_1D_EXT
 0x20DB

	)

464 
	#GLX_TEXTURE_2D_EXT
 0x20DC

	)

465 
	#GLX_TEXTURE_RECTANGLE_EXT
 0x20DD

	)

467 
	#GLX_FRONT_LEFT_EXT
 0x20DE

	)

468 
	#GLX_FRONT_RIGHT_EXT
 0x20DF

	)

469 
	#GLX_BACK_LEFT_EXT
 0x20E0

	)

470 
	#GLX_BACK_RIGHT_EXT
 0x20E1

	)

471 
	#GLX_FRONT_EXT
 
GLX_FRONT_LEFT_EXT


	)

472 
	#GLX_BACK_EXT
 
GLX_BACK_LEFT_EXT


	)

473 
	#GLX_AUX0_EXT
 0x20E2

	)

474 
	#GLX_AUX1_EXT
 0x20E3

	)

475 
	#GLX_AUX2_EXT
 0x20E4

	)

476 
	#GLX_AUX3_EXT
 0x20E5

	)

477 
	#GLX_AUX4_EXT
 0x20E6

	)

478 
	#GLX_AUX5_EXT
 0x20E7

	)

479 
	#GLX_AUX6_EXT
 0x20E8

	)

480 
	#GLX_AUX7_EXT
 0x20E9

	)

481 
	#GLX_AUX8_EXT
 0x20EA

	)

482 
	#GLX_AUX9_EXT
 0x20EB

	)

484 
glXBödTexImageEXT
(
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
, 
buf„r
, c⁄° *
©åib_li°
);

485 
glXRñó£TexImageEXT
(
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
, 
buf„r
);

497 
	gevít_ty≥
;

498 
	gdøw_ty≥
;

499 
	g£rül
;

500 
Boﬁ
 
	g£nd_evít
;

501 
Di•œy
 *
	gdi•œy
;

502 
GLXDøwabÀ
 
	gdøwabÀ
;

503 
	gbuf„r_mask
;

504 
	gaux_buf„r
;

505 
	gx
, 
	gy
;

506 
	gwidth
, 
	gheight
;

507 
	gcou¡
;

508 } 
	tGLXPbuf„rClobbîEvít
;

510 
	u__GLXEvít
 {

511 
GLXPbuf„rClobbîEvít
 
	gglxpbuf„r˛obbî
;

512 
	g∑d
[24];

513 } 
	tGLXEvít
;

515 #ifde‡
__˝lu•lus


	@include/GL/glx_mangle.h

26 #i‚de‡
GLX_MANGLE_H


27 
	#GLX_MANGLE_H


	)

29 
	#glXChoo£VisuÆ
 
mglXChoo£VisuÆ


	)

30 
	#glXCª©eC⁄ãxt
 
mglXCª©eC⁄ãxt


	)

31 
	#glXDe°royC⁄ãxt
 
mglXDe°royC⁄ãxt


	)

32 
	#glXMakeCuºít
 
mglXMakeCuºít


	)

33 
	#glXC›yC⁄ãxt
 
mglXC›yC⁄ãxt


	)

34 
	#glXSw≠Buf„rs
 
mglXSw≠Buf„rs


	)

35 
	#glXCª©eGLXPixm≠
 
mglXCª©eGLXPixm≠


	)

36 
	#glXDe°royGLXPixm≠
 
mglXDe°royGLXPixm≠


	)

37 
	#glXQuîyExãnsi⁄
 
mglXQuîyExãnsi⁄


	)

38 
	#glXQuîyVîsi⁄
 
mglXQuîyVîsi⁄


	)

39 
	#glXIsDúe˘
 
mglXIsDúe˘


	)

40 
	#glXGëC⁄fig
 
mglXGëC⁄fig


	)

41 
	#glXGëCuºítC⁄ãxt
 
mglXGëCuºítC⁄ãxt


	)

42 
	#glXGëCuºítDøwabÀ
 
mglXGëCuºítDøwabÀ


	)

43 
	#glXWaôGL
 
mglXWaôGL


	)

44 
	#glXWaôX
 
mglXWaôX


	)

45 
	#glXU£XF⁄t
 
mglXU£XF⁄t


	)

46 
	#glXQuîyExãnsi⁄sSåög
 
mglXQuîyExãnsi⁄sSåög


	)

47 
	#glXQuîySîvîSåög
 
mglXQuîySîvîSåög


	)

48 
	#glXGëClõ¡Såög
 
mglXGëClõ¡Såög


	)

49 
	#glXCª©eGLXPixm≠MESA
 
mglXCª©eGLXPixm≠MESA


	)

50 
	#glXRñó£Buf„rsMESA
 
mglXRñó£Buf„rsMESA


	)

51 
	#glXC›ySubBuf„rMESA
 
mglXC›ySubBuf„rMESA


	)

52 
	#glXGëVideoSyncSGI
 
mglXGëVideoSyncSGI


	)

53 
	#glXWaôVideoSyncSGI
 
mglXWaôVideoSyncSGI


	)

56 
	#glXGëCuºítDi•œy
 
mglXGëCuºítDi•œy


	)

59 
	#glXChoo£FBC⁄fig
 
mglXChoo£FBC⁄fig


	)

60 
	#glXGëFBC⁄figAârib
 
mglXGëFBC⁄figAârib


	)

61 
	#glXGëFBC⁄figs
 
mglXGëFBC⁄figs


	)

62 
	#glXGëVisuÆFromFBC⁄fig
 
mglXGëVisuÆFromFBC⁄fig


	)

63 
	#glXCª©eWödow
 
mglXCª©eWödow


	)

64 
	#glXDe°royWödow
 
mglXDe°royWödow


	)

65 
	#glXCª©ePixm≠
 
mglXCª©ePixm≠


	)

66 
	#glXDe°royPixm≠
 
mglXDe°royPixm≠


	)

67 
	#glXCª©ePbuf„r
 
mglXCª©ePbuf„r


	)

68 
	#glXDe°royPbuf„r
 
mglXDe°royPbuf„r


	)

69 
	#glXQuîyDøwabÀ
 
mglXQuîyDøwabÀ


	)

70 
	#glXCª©eNewC⁄ãxt
 
mglXCª©eNewC⁄ãxt


	)

71 
	#glXMakeC⁄ãxtCuºít
 
mglXMakeC⁄ãxtCuºít


	)

72 
	#glXGëCuºítRódDøwabÀ
 
mglXGëCuºítRódDøwabÀ


	)

73 
	#glXQuîyC⁄ãxt
 
mglXQuîyC⁄ãxt


	)

74 
	#glXSñe˘Evít
 
mglXSñe˘Evít


	)

75 
	#glXGëSñe˘edEvít
 
mglXGëSñe˘edEvít


	)

78 
	#glXGëProcAddªss
 
mglXGëProcAddªss


	)

79 
	#glXGëProcAddªssARB
 
mglXGëProcAddªssARB


	)

	@include/GL/glxext.h

1 #i‚de‡
__glxext_h_


2 
	#__glxext_h_


	)

4 #ifde‡
__˝lu•lus


33 #i‡
deföed
(
_WIN32
Ë&& !deföed(
APIENTRY
Ë&& !deföed(
__CYGWIN__
Ë&& !deföed(
__SCITECH_SNAP__
)

34 
	#WIN32_LEAN_AND_MEAN
 1

	)

35 
	~<wödows.h
>

38 #i‚de‡
APIENTRY


39 
	#APIENTRY


	)

41 #i‚de‡
APIENTRYP


42 
	#APIENTRYP
 
APIENTRY
 *

	)

44 #i‚de‡
GLAPI


45 
	#GLAPI
 

	)

53 
	#GLX_GLXEXT_VERSION
 25

	)

55 #i‚de‡
GLX_VERSION_1_3


56 
	#GLX_WINDOW_BIT
 0x00000001

	)

57 
	#GLX_PIXMAP_BIT
 0x00000002

	)

58 
	#GLX_PBUFFER_BIT
 0x00000004

	)

59 
	#GLX_RGBA_BIT
 0x00000001

	)

60 
	#GLX_COLOR_INDEX_BIT
 0x00000002

	)

61 
	#GLX_PBUFFER_CLOBBER_MASK
 0x08000000

	)

62 
	#GLX_FRONT_LEFT_BUFFER_BIT
 0x00000001

	)

63 
	#GLX_FRONT_RIGHT_BUFFER_BIT
 0x00000002

	)

64 
	#GLX_BACK_LEFT_BUFFER_BIT
 0x00000004

	)

65 
	#GLX_BACK_RIGHT_BUFFER_BIT
 0x00000008

	)

66 
	#GLX_AUX_BUFFERS_BIT
 0x00000010

	)

67 
	#GLX_DEPTH_BUFFER_BIT
 0x00000020

	)

68 
	#GLX_STENCIL_BUFFER_BIT
 0x00000040

	)

69 
	#GLX_ACCUM_BUFFER_BIT
 0x00000080

	)

70 
	#GLX_CONFIG_CAVEAT
 0x20

	)

71 
	#GLX_X_VISUAL_TYPE
 0x22

	)

72 
	#GLX_TRANSPARENT_TYPE
 0x23

	)

73 
	#GLX_TRANSPARENT_INDEX_VALUE
 0x24

	)

74 
	#GLX_TRANSPARENT_RED_VALUE
 0x25

	)

75 
	#GLX_TRANSPARENT_GREEN_VALUE
 0x26

	)

76 
	#GLX_TRANSPARENT_BLUE_VALUE
 0x27

	)

77 
	#GLX_TRANSPARENT_ALPHA_VALUE
 0x28

	)

78 
	#GLX_DONT_CARE
 0xFFFFFFFF

	)

79 
	#GLX_NONE
 0x8000

	)

80 
	#GLX_SLOW_CONFIG
 0x8001

	)

81 
	#GLX_TRUE_COLOR
 0x8002

	)

82 
	#GLX_DIRECT_COLOR
 0x8003

	)

83 
	#GLX_PSEUDO_COLOR
 0x8004

	)

84 
	#GLX_STATIC_COLOR
 0x8005

	)

85 
	#GLX_GRAY_SCALE
 0x8006

	)

86 
	#GLX_STATIC_GRAY
 0x8007

	)

87 
	#GLX_TRANSPARENT_RGB
 0x8008

	)

88 
	#GLX_TRANSPARENT_INDEX
 0x8009

	)

89 
	#GLX_VISUAL_ID
 0x800B

	)

90 
	#GLX_SCREEN
 0x800C

	)

91 
	#GLX_NON_CONFORMANT_CONFIG
 0x800D

	)

92 
	#GLX_DRAWABLE_TYPE
 0x8010

	)

93 
	#GLX_RENDER_TYPE
 0x8011

	)

94 
	#GLX_X_RENDERABLE
 0x8012

	)

95 
	#GLX_FBCONFIG_ID
 0x8013

	)

96 
	#GLX_RGBA_TYPE
 0x8014

	)

97 
	#GLX_COLOR_INDEX_TYPE
 0x8015

	)

98 
	#GLX_MAX_PBUFFER_WIDTH
 0x8016

	)

99 
	#GLX_MAX_PBUFFER_HEIGHT
 0x8017

	)

100 
	#GLX_MAX_PBUFFER_PIXELS
 0x8018

	)

101 
	#GLX_PRESERVED_CONTENTS
 0x801B

	)

102 
	#GLX_LARGEST_PBUFFER
 0x801C

	)

103 
	#GLX_WIDTH
 0x801D

	)

104 
	#GLX_HEIGHT
 0x801E

	)

105 
	#GLX_EVENT_MASK
 0x801F

	)

106 
	#GLX_DAMAGED
 0x8020

	)

107 
	#GLX_SAVED
 0x8021

	)

108 
	#GLX_WINDOW
 0x8022

	)

109 
	#GLX_PBUFFER
 0x8023

	)

110 
	#GLX_PBUFFER_HEIGHT
 0x8040

	)

111 
	#GLX_PBUFFER_WIDTH
 0x8041

	)

114 #i‚de‡
GLX_VERSION_1_4


115 
	#GLX_SAMPLE_BUFFERS
 100000

	)

116 
	#GLX_SAMPLES
 100001

	)

119 #i‚de‡
GLX_ARB_gë_¥oc_addªss


122 #i‚de‡
GLX_ARB_mu…ißm∂e


123 
	#GLX_SAMPLE_BUFFERS_ARB
 100000

	)

124 
	#GLX_SAMPLES_ARB
 100001

	)

127 #i‚de‡
GLX_ARB_fbc⁄fig_Êﬂt


128 
	#GLX_RGBA_FLOAT_TYPE_ARB
 0x20B9

	)

129 
	#GLX_RGBA_FLOAT_BIT_ARB
 0x00000004

	)

132 #i‚de‡
GLX_ARB_¸óã_c⁄ãxt


133 
	#GLX_CONTEXT_DEBUG_BIT_ARB
 0x00000001

	)

134 
	#GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB
 0x00000002

	)

135 
	#GLX_CONTEXT_MAJOR_VERSION_ARB
 0x2091

	)

136 
	#GLX_CONTEXT_MINOR_VERSION_ARB
 0x2092

	)

137 
	#GLX_CONTEXT_FLAGS_ARB
 0x2094

	)

140 #i‚de‡
GLX_ARB_¸óã_c⁄ãxt_¥ofûe


141 
	#GLX_CONTEXT_CORE_PROFILE_BIT_ARB
 0x00000001

	)

142 
	#GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB
 0x00000002

	)

143 
	#GLX_CONTEXT_PROFILE_MASK_ARB
 0x9126

	)

146 #i‚de‡
GLX_SGIS_mu…ißm∂e


147 
	#GLX_SAMPLE_BUFFERS_SGIS
 100000

	)

148 
	#GLX_SAMPLES_SGIS
 100001

	)

151 #i‚de‡
GLX_EXT_visuÆ_öfo


152 
	#GLX_X_VISUAL_TYPE_EXT
 0x22

	)

153 
	#GLX_TRANSPARENT_TYPE_EXT
 0x23

	)

154 
	#GLX_TRANSPARENT_INDEX_VALUE_EXT
 0x24

	)

155 
	#GLX_TRANSPARENT_RED_VALUE_EXT
 0x25

	)

156 
	#GLX_TRANSPARENT_GREEN_VALUE_EXT
 0x26

	)

157 
	#GLX_TRANSPARENT_BLUE_VALUE_EXT
 0x27

	)

158 
	#GLX_TRANSPARENT_ALPHA_VALUE_EXT
 0x28

	)

159 
	#GLX_NONE_EXT
 0x8000

	)

160 
	#GLX_TRUE_COLOR_EXT
 0x8002

	)

161 
	#GLX_DIRECT_COLOR_EXT
 0x8003

	)

162 
	#GLX_PSEUDO_COLOR_EXT
 0x8004

	)

163 
	#GLX_STATIC_COLOR_EXT
 0x8005

	)

164 
	#GLX_GRAY_SCALE_EXT
 0x8006

	)

165 
	#GLX_STATIC_GRAY_EXT
 0x8007

	)

166 
	#GLX_TRANSPARENT_RGB_EXT
 0x8008

	)

167 
	#GLX_TRANSPARENT_INDEX_EXT
 0x8009

	)

170 #i‚de‡
GLX_SGI_sw≠_c⁄åﬁ


173 #i‚de‡
GLX_SGI_video_sync


176 #i‚de‡
GLX_SGI_make_cuºít_ªad


179 #i‚de‡
GLX_SGIX_video_sour˚


182 #i‚de‡
GLX_EXT_visuÆ_øtög


183 
	#GLX_VISUAL_CAVEAT_EXT
 0x20

	)

184 
	#GLX_SLOW_VISUAL_EXT
 0x8001

	)

185 
	#GLX_NON_CONFORMANT_VISUAL_EXT
 0x800D

	)

189 #i‚de‡
GLX_EXT_imp‹t_c⁄ãxt


190 
	#GLX_SHARE_CONTEXT_EXT
 0x800A

	)

191 
	#GLX_VISUAL_ID_EXT
 0x800B

	)

192 
	#GLX_SCREEN_EXT
 0x800C

	)

195 #i‚de‡
GLX_SGIX_fbc⁄fig


196 
	#GLX_WINDOW_BIT_SGIX
 0x00000001

	)

197 
	#GLX_PIXMAP_BIT_SGIX
 0x00000002

	)

198 
	#GLX_RGBA_BIT_SGIX
 0x00000001

	)

199 
	#GLX_COLOR_INDEX_BIT_SGIX
 0x00000002

	)

200 
	#GLX_DRAWABLE_TYPE_SGIX
 0x8010

	)

201 
	#GLX_RENDER_TYPE_SGIX
 0x8011

	)

202 
	#GLX_X_RENDERABLE_SGIX
 0x8012

	)

203 
	#GLX_FBCONFIG_ID_SGIX
 0x8013

	)

204 
	#GLX_RGBA_TYPE_SGIX
 0x8014

	)

205 
	#GLX_COLOR_INDEX_TYPE_SGIX
 0x8015

	)

209 #i‚de‡
GLX_SGIX_pbuf„r


210 
	#GLX_PBUFFER_BIT_SGIX
 0x00000004

	)

211 
	#GLX_BUFFER_CLOBBER_MASK_SGIX
 0x08000000

	)

212 
	#GLX_FRONT_LEFT_BUFFER_BIT_SGIX
 0x00000001

	)

213 
	#GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
 0x00000002

	)

214 
	#GLX_BACK_LEFT_BUFFER_BIT_SGIX
 0x00000004

	)

215 
	#GLX_BACK_RIGHT_BUFFER_BIT_SGIX
 0x00000008

	)

216 
	#GLX_AUX_BUFFERS_BIT_SGIX
 0x00000010

	)

217 
	#GLX_DEPTH_BUFFER_BIT_SGIX
 0x00000020

	)

218 
	#GLX_STENCIL_BUFFER_BIT_SGIX
 0x00000040

	)

219 
	#GLX_ACCUM_BUFFER_BIT_SGIX
 0x00000080

	)

220 
	#GLX_SAMPLE_BUFFERS_BIT_SGIX
 0x00000100

	)

221 
	#GLX_MAX_PBUFFER_WIDTH_SGIX
 0x8016

	)

222 
	#GLX_MAX_PBUFFER_HEIGHT_SGIX
 0x8017

	)

223 
	#GLX_MAX_PBUFFER_PIXELS_SGIX
 0x8018

	)

224 
	#GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
 0x8019

	)

225 
	#GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
 0x801A

	)

226 
	#GLX_PRESERVED_CONTENTS_SGIX
 0x801B

	)

227 
	#GLX_LARGEST_PBUFFER_SGIX
 0x801C

	)

228 
	#GLX_WIDTH_SGIX
 0x801D

	)

229 
	#GLX_HEIGHT_SGIX
 0x801E

	)

230 
	#GLX_EVENT_MASK_SGIX
 0x801F

	)

231 
	#GLX_DAMAGED_SGIX
 0x8020

	)

232 
	#GLX_SAVED_SGIX
 0x8021

	)

233 
	#GLX_WINDOW_SGIX
 0x8022

	)

234 
	#GLX_PBUFFER_SGIX
 0x8023

	)

237 #i‚de‡
GLX_SGI_cushi⁄


240 #i‚de‡
GLX_SGIX_video_ªsize


241 
	#GLX_SYNC_FRAME_SGIX
 0x00000000

	)

242 
	#GLX_SYNC_SWAP_SGIX
 0x00000001

	)

245 #i‚de‡
GLX_SGIX_dmbuf„r


246 
	#GLX_DIGITAL_MEDIA_PBUFFER_SGIX
 0x8024

	)

249 #i‚de‡
GLX_SGIX_sw≠_group


252 #i‚de‡
GLX_SGIX_sw≠_b¨rõr


255 #i‚de‡
GLX_SGIS_bÀnded_ovîœy


256 
	#GLX_BLENDED_RGBA_SGIS
 0x8025

	)

259 #i‚de‡
GLX_SGIS_sh¨ed_mu…ißm∂e


260 
	#GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS
 0x8026

	)

261 
	#GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS
 0x8027

	)

264 #i‚de‡
GLX_SUN_gë_å™•¨ít_ödex


267 #i‚de‡
GLX_3DFX_mu…ißm∂e


268 
	#GLX_SAMPLE_BUFFERS_3DFX
 0x8050

	)

269 
	#GLX_SAMPLES_3DFX
 0x8051

	)

272 #i‚de‡
GLX_MESA_c›y_sub_buf„r


275 #i‚de‡
GLX_MESA_pixm≠_cﬁ‹m≠


278 #i‚de‡
GLX_MESA_ªÀa£_buf„rs


281 #i‚de‡
GLX_MESA_£t_3dfx_mode


282 
	#GLX_3DFX_WINDOW_MODE_MESA
 0x1

	)

283 
	#GLX_3DFX_FULLSCREEN_MODE_MESA
 0x2

	)

286 #i‚de‡
GLX_SGIX_visuÆ_£À˘_group


287 
	#GLX_VISUAL_SELECT_GROUP_SGIX
 0x8028

	)

290 #i‚de‡
GLX_OML_sw≠_mëhod


291 
	#GLX_SWAP_METHOD_OML
 0x8060

	)

292 
	#GLX_SWAP_EXCHANGE_OML
 0x8061

	)

293 
	#GLX_SWAP_COPY_OML
 0x8062

	)

294 
	#GLX_SWAP_UNDEFINED_OML
 0x8063

	)

297 #i‚de‡
GLX_OML_sync_c⁄åﬁ


300 #i‚de‡
GLX_NV_Êﬂt_buf„r


301 
	#GLX_FLOAT_COMPONENTS_NV
 0x20B0

	)

304 #i‚de‡
GLX_SGIX_hy≥Ωùe


305 
	#GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
 80

	)

306 
	#GLX_BAD_HYPERPIPE_CONFIG_SGIX
 91

	)

307 
	#GLX_BAD_HYPERPIPE_SGIX
 92

	)

308 
	#GLX_HYPERPIPE_DISPLAY_PIPE_SGIX
 0x00000001

	)

309 
	#GLX_HYPERPIPE_RENDER_PIPE_SGIX
 0x00000002

	)

310 
	#GLX_PIPE_RECT_SGIX
 0x00000001

	)

311 
	#GLX_PIPE_RECT_LIMITS_SGIX
 0x00000002

	)

312 
	#GLX_HYPERPIPE_STEREO_SGIX
 0x00000003

	)

313 
	#GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX
 0x00000004

	)

314 
	#GLX_HYPERPIPE_ID_SGIX
 0x8030

	)

317 #i‚de‡
GLX_MESA_agp_off£t


320 #i‚de‡
GLX_EXT_fbc⁄fig_∑cked_Êﬂt


321 
	#GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT
 0x20B1

	)

322 
	#GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT
 0x00000008

	)

325 #i‚de‡
GLX_EXT_‰amebuf„r_sRGB


326 
	#GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT
 0x20B2

	)

329 #i‚de‡
GLX_EXT_ãxtuª_‰om_pixm≠


330 
	#GLX_TEXTURE_1D_BIT_EXT
 0x00000001

	)

331 
	#GLX_TEXTURE_2D_BIT_EXT
 0x00000002

	)

332 
	#GLX_TEXTURE_RECTANGLE_BIT_EXT
 0x00000004

	)

333 
	#GLX_BIND_TO_TEXTURE_RGB_EXT
 0x20D0

	)

334 
	#GLX_BIND_TO_TEXTURE_RGBA_EXT
 0x20D1

	)

335 
	#GLX_BIND_TO_MIPMAP_TEXTURE_EXT
 0x20D2

	)

336 
	#GLX_BIND_TO_TEXTURE_TARGETS_EXT
 0x20D3

	)

337 
	#GLX_Y_INVERTED_EXT
 0x20D4

	)

338 
	#GLX_TEXTURE_FORMAT_EXT
 0x20D5

	)

339 
	#GLX_TEXTURE_TARGET_EXT
 0x20D6

	)

340 
	#GLX_MIPMAP_TEXTURE_EXT
 0x20D7

	)

341 
	#GLX_TEXTURE_FORMAT_NONE_EXT
 0x20D8

	)

342 
	#GLX_TEXTURE_FORMAT_RGB_EXT
 0x20D9

	)

343 
	#GLX_TEXTURE_FORMAT_RGBA_EXT
 0x20DA

	)

344 
	#GLX_TEXTURE_1D_EXT
 0x20DB

	)

345 
	#GLX_TEXTURE_2D_EXT
 0x20DC

	)

346 
	#GLX_TEXTURE_RECTANGLE_EXT
 0x20DD

	)

347 
	#GLX_FRONT_LEFT_EXT
 0x20DE

	)

348 
	#GLX_FRONT_RIGHT_EXT
 0x20DF

	)

349 
	#GLX_BACK_LEFT_EXT
 0x20E0

	)

350 
	#GLX_BACK_RIGHT_EXT
 0x20E1

	)

351 
	#GLX_FRONT_EXT
 
GLX_FRONT_LEFT_EXT


	)

352 
	#GLX_BACK_EXT
 
GLX_BACK_LEFT_EXT


	)

353 
	#GLX_AUX0_EXT
 0x20E2

	)

354 
	#GLX_AUX1_EXT
 0x20E3

	)

355 
	#GLX_AUX2_EXT
 0x20E4

	)

356 
	#GLX_AUX3_EXT
 0x20E5

	)

357 
	#GLX_AUX4_EXT
 0x20E6

	)

358 
	#GLX_AUX5_EXT
 0x20E7

	)

359 
	#GLX_AUX6_EXT
 0x20E8

	)

360 
	#GLX_AUX7_EXT
 0x20E9

	)

361 
	#GLX_AUX8_EXT
 0x20EA

	)

362 
	#GLX_AUX9_EXT
 0x20EB

	)

365 #i‚de‡
GLX_NV_¥e£¡_video


366 
	#GLX_NUM_VIDEO_SLOTS_NV
 0x20F0

	)

369 #i‚de‡
GLX_NV_video_out


370 
	#GLX_VIDEO_OUT_COLOR_NV
 0x20C3

	)

371 
	#GLX_VIDEO_OUT_ALPHA_NV
 0x20C4

	)

372 
	#GLX_VIDEO_OUT_DEPTH_NV
 0x20C5

	)

373 
	#GLX_VIDEO_OUT_COLOR_AND_ALPHA_NV
 0x20C6

	)

374 
	#GLX_VIDEO_OUT_COLOR_AND_DEPTH_NV
 0x20C7

	)

375 
	#GLX_VIDEO_OUT_FRAME_NV
 0x20C8

	)

376 
	#GLX_VIDEO_OUT_FIELD_1_NV
 0x20C9

	)

377 
	#GLX_VIDEO_OUT_FIELD_2_NV
 0x20CA

	)

378 
	#GLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV
 0x20CB

	)

379 
	#GLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV
 0x20CC

	)

382 #i‚de‡
GLX_NV_sw≠_group


385 #i‚de‡
GLX_NV_video_ˇ±uª


386 
	#GLX_DEVICE_ID_NV
 0x20CD

	)

387 
	#GLX_UNIQUE_ID_NV
 0x20CE

	)

388 
	#GLX_NUM_VIDEO_CAPTURE_SLOTS_NV
 0x20CF

	)

391 #i‚de‡
GLX_EXT_sw≠_c⁄åﬁ


392 
	#GLX_SWAP_INTERVAL_EXT
 0x20F1

	)

393 
	#GLX_MAX_SWAP_INTERVAL_EXT
 0x20F2

	)

396 #i‚de‡
GLX_NV_c›y_image


402 #i‚de‡
GLX_ARB_gë_¥oc_addªss


403 (*
__GLXextFuncPå
)();

406 #i‚de‡
GLX_SGIX_video_sour˚


407 
XID
 
	tGLXVideoSour˚SGIX
;

410 #i‚de‡
GLX_SGIX_fbc⁄fig


411 
XID
 
	tGLXFBC⁄figIDSGIX
;

412 
__GLXFBC⁄figRec
 *
	tGLXFBC⁄figSGIX
;

415 #i‚de‡
GLX_SGIX_pbuf„r


416 
XID
 
	tGLXPbuf„rSGIX
;

418 
ty≥
;

419 
£rül
;

420 
Boﬁ
 
£nd_evít
;

421 
Di•œy
 *
di•œy
;

422 
GLXDøwabÀ
 
døwabÀ
;

423 
evít_ty≥
;

424 
døw_ty≥
;

425 
mask
;

426 
x
, 
y
;

427 
width
, 
height
;

428 
cou¡
;

429 } 
	tGLXBuf„rClobbîEvítSGIX
;

432 #i‚de‡
GLX_NV_video_ouçut


433 
	tGLXVideoDevi˚NV
;

436 #i‚de‡
GLX_NV_video_ˇ±uª


437 
XID
 
	tGLXVideoC≠tuªDevi˚NV
;

440 #i‚de‡
GLEXT_64_TYPES_DEFINED


442 
	#GLEXT_64_TYPES_DEFINED


	)

445 #i‡
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

446 
	~<öây≥s.h
>

447 #ñi‡
deföed
(
__sun__
Ë|| deföed(
__digôÆ__
)

448 
	~<öây≥s.h
>

449 #i‡
deföed
(
__STDC__
)

450 #i‡
deföed
(
__¨ch64__
Ë|| deföed(
_LP64
)

451 
	töt64_t
;

452 
	tuöt64_t
;

454 
	töt64_t
;

455 
	tuöt64_t
;

458 #ñi‡
deföed
–
__VMS
 ) || deföed(
__sgi
)

459 
	~<öây≥s.h
>

460 #ñi‡
deföed
(
__SCO__
Ë|| deföed(
__USLC__
)

461 
	~<°döt.h
>

462 #ñi‡
deföed
(
__UNIXOS2__
Ë|| deföed(
__SOL64__
)

463 
	töt32_t
;

464 
	töt64_t
;

465 
	tuöt64_t
;

466 #ñi‡
deföed
(
_WIN32
Ë&& deföed(
__GNUC__
)

467 
	~<°döt.h
>

468 #ñi‡
deföed
(
_WIN32
)

469 
__öt32
 
	töt32_t
;

470 
__öt64
 
	töt64_t
;

471 
	t__öt64
 
	tuöt64_t
;

473 
	~<öây≥s.h
>

477 #i‚de‡
GLX_VERSION_1_3


478 
	#GLX_VERSION_1_3
 1

	)

479 #ifde‡
GLX_GLXEXT_PROTOTYPES


480 
GLXFBC⁄fig
 * 
glXGëFBC⁄figs
 (
Di•œy
 *, , *);

481 
GLXFBC⁄fig
 * 
glXChoo£FBC⁄fig
 (
Di•œy
 *, , const *, *);

482 
glXGëFBC⁄figAârib
 (
Di•œy
 *, 
GLXFBC⁄fig
, , *);

483 
XVisuÆInfo
 * 
glXGëVisuÆFromFBC⁄fig
 (
Di•œy
 *, 
GLXFBC⁄fig
);

484 
GLXWödow
 
glXCª©eWödow
 (
Di•œy
 *, 
GLXFBC⁄fig
, 
Wödow
, const *);

485 
glXDe°royWödow
 (
Di•œy
 *, 
GLXWödow
);

486 
GLXPixm≠
 
glXCª©ePixm≠
 (
Di•œy
 *, 
GLXFBC⁄fig
, 
Pixm≠
, const *);

487 
glXDe°royPixm≠
 (
Di•œy
 *, 
GLXPixm≠
);

488 
GLXPbuf„r
 
glXCª©ePbuf„r
 (
Di•œy
 *, 
GLXFBC⁄fig
, const *);

489 
glXDe°royPbuf„r
 (
Di•œy
 *, 
GLXPbuf„r
);

490 
glXQuîyDøwabÀ
 (
Di•œy
 *, 
GLXDøwabÀ
, , *);

491 
GLXC⁄ãxt
 
glXCª©eNewC⁄ãxt
 (
Di•œy
 *, 
GLXFBC⁄fig
, , GLXC⁄ãxt, 
Boﬁ
);

492 
Boﬁ
 
glXMakeC⁄ãxtCuºít
 (
Di•œy
 *, 
GLXDøwabÀ
, GLXDøwabÀ, 
GLXC⁄ãxt
);

493 
GLXDøwabÀ
 
glXGëCuºítRódDøwabÀ
 ();

494 
Di•œy
 * 
glXGëCuºítDi•œy
 ();

495 
glXQuîyC⁄ãxt
 (
Di•œy
 *, 
GLXC⁄ãxt
, , *);

496 
glXSñe˘Evít
 (
Di•œy
 *, 
GLXDøwabÀ
, );

497 
glXGëSñe˘edEvít
 (
Di•œy
 *, 
GLXDøwabÀ
, *);

499 
	gGLXFBC⁄fig
 * ( * 
	tPFNGLXGETFBCONFIGSPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, *
	t√Àmíts
);

500 
	gGLXFBC⁄fig
 * ( * 
	tPFNGLXCHOOSEFBCONFIGPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, c⁄° *
	t©åib_li°
, *
	t√Àmíts
);

501 –* 
	gPFNGLXGETFBCONFIGATTRIBPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	t©åibuã
, *
	tvÆue
);

502 
	gXVisuÆInfo
 * ( * 
	tPFNGLXGETVISUALFROMFBCONFIGPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
);

503 
GLXWödow
 ( * 
	tPFNGLXCREATEWINDOWPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tWödow
 
	twö
, c⁄° *
	t©åib_li°
);

504 –* 
	gPFNGLXDESTROYWINDOWPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXWödow
 
	twö
);

505 
GLXPixm≠
 ( * 
	tPFNGLXCREATEPIXMAPPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tPixm≠
 
	tpixm≠
, c⁄° *
	t©åib_li°
);

506 –* 
	gPFNGLXDESTROYPIXMAPPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPixm≠
 
	tpixm≠
);

507 
GLXPbuf„r
 ( * 
	tPFNGLXCREATEPBUFFERPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, c⁄° *
	t©åib_li°
);

508 –* 
	gPFNGLXDESTROYPBUFFERPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPbuf„r
 
	tpbuf
);

509 –* 
	gPFNGLXQUERYDRAWABLEPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, 
	t©åibuã
, *
	tvÆue
);

510 
GLXC⁄ãxt
 ( * 
	tPFNGLXCREATENEWCONTEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tªndî_ty≥
, 
	tGLXC⁄ãxt
 
	tsh¨e_li°
, 
	tBoﬁ
 
	tdúe˘
);

511 
Boﬁ
 ( * 
	tPFNGLXMAKECONTEXTCURRENTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, GLXDøwabÀ 
	tªad
, 
	tGLXC⁄ãxt
 
	t˘x
);

512 
GLXDøwabÀ
 ( * 
	tPFNGLXGETCURRENTREADDRAWABLEPROC
) ();

513 
	gDi•œy
 * ( * 
	tPFNGLXGETCURRENTDISPLAYPROC
) ();

514 –* 
	gPFNGLXQUERYCONTEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXC⁄ãxt
 
	t˘x
, 
	t©åibuã
, *
	tvÆue
);

515 –* 
	gPFNGLXSELECTEVENTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, 
	tevít_mask
);

516 –* 
	gPFNGLXGETSELECTEDEVENTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, *
	tevít_mask
);

519 #i‚de‡
GLX_VERSION_1_4


520 
	#GLX_VERSION_1_4
 1

	)

521 #ifde‡
GLX_GLXEXT_PROTOTYPES


522 
__GLXextFuncPå
 
glXGëProcAddªss
 (c⁄° 
GLubyã
 *);

524 
__GLXextFuncPå
 ( * 
	tPFNGLXGETPROCADDRESSPROC
Ë(c⁄° 
	tGLubyã
 *
	t¥ocName
);

527 #i‚de‡
GLX_ARB_gë_¥oc_addªss


528 
	#GLX_ARB_gë_¥oc_addªss
 1

	)

529 #ifde‡
GLX_GLXEXT_PROTOTYPES


530 
__GLXextFuncPå
 
glXGëProcAddªssARB
 (c⁄° 
GLubyã
 *);

532 
__GLXextFuncPå
 ( * 
	tPFNGLXGETPROCADDRESSARBPROC
Ë(c⁄° 
	tGLubyã
 *
	t¥ocName
);

535 #i‚de‡
GLX_ARB_mu…ißm∂e


536 
	#GLX_ARB_mu…ißm∂e
 1

	)

539 #i‚de‡
GLX_ARB_fbc⁄fig_Êﬂt


540 
	#GLX_ARB_fbc⁄fig_Êﬂt
 1

	)

543 #i‚de‡
GLX_ARB_¸óã_c⁄ãxt


544 
	#GLX_ARB_¸óã_c⁄ãxt
 1

	)

545 #ifde‡
GLX_GLXEXT_PROTOTYPES


546 
GLXC⁄ãxt
 
glXCª©eC⁄ãxtAâribsARB
 (
Di•œy
 *, 
GLXFBC⁄fig
, GLXC⁄ãxt, 
Boﬁ
, const *);

548 
GLXC⁄ãxt
 ( * 
	tPFNGLXCREATECONTEXTATTRIBSARBPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tGLXC⁄ãxt
 
	tsh¨e_c⁄ãxt
, 
	tBoﬁ
 
	tdúe˘
, c⁄° *
	t©åib_li°
);

551 #i‚de‡
GLX_ARB_¸óã_c⁄ãxt_¥ofûe


552 
	#GLX_ARB_¸óã_c⁄ãxt_¥ofûe
 1

	)

555 #i‚de‡
GLX_SGIS_mu…ißm∂e


556 
	#GLX_SGIS_mu…ißm∂e
 1

	)

559 #i‚de‡
GLX_EXT_visuÆ_öfo


560 
	#GLX_EXT_visuÆ_öfo
 1

	)

563 #i‚de‡
GLX_SGI_sw≠_c⁄åﬁ


564 
	#GLX_SGI_sw≠_c⁄åﬁ
 1

	)

565 #ifde‡
GLX_GLXEXT_PROTOTYPES


566 
glXSw≠I¡îvÆSGI
 ();

568 –* 
	gPFNGLXSWAPINTERVALSGIPROC
Ë(
	töãrvÆ
);

571 #i‚de‡
GLX_SGI_video_sync


572 
	#GLX_SGI_video_sync
 1

	)

573 #ifde‡
GLX_GLXEXT_PROTOTYPES


574 
glXGëVideoSyncSGI
 (*);

575 
glXWaôVideoSyncSGI
 (, , *);

577 –* 
	gPFNGLXGETVIDEOSYNCSGIPROC
Ë(*
	tcou¡
);

578 –* 
	gPFNGLXWAITVIDEOSYNCSGIPROC
Ë(
	tdivis‹
, 
	tªmaödî
, *
	tcou¡
);

581 #i‚de‡
GLX_SGI_make_cuºít_ªad


582 
	#GLX_SGI_make_cuºít_ªad
 1

	)

583 #ifde‡
GLX_GLXEXT_PROTOTYPES


584 
Boﬁ
 
glXMakeCuºítRódSGI
 (
Di•œy
 *, 
GLXDøwabÀ
, GLXDøwabÀ, 
GLXC⁄ãxt
);

585 
GLXDøwabÀ
 
glXGëCuºítRódDøwabÀSGI
 ();

587 
Boﬁ
 ( * 
	tPFNGLXMAKECURRENTREADSGIPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, GLXDøwabÀ 
	tªad
, 
	tGLXC⁄ãxt
 
	t˘x
);

588 
GLXDøwabÀ
 ( * 
	tPFNGLXGETCURRENTREADDRAWABLESGIPROC
) ();

591 #i‚de‡
GLX_SGIX_video_sour˚


592 
	#GLX_SGIX_video_sour˚
 1

	)

593 #ifde‡
_VL_H


594 #ifde‡
GLX_GLXEXT_PROTOTYPES


595 
GLXVideoSour˚SGIX
 
glXCª©eGLXVideoSour˚SGIX
 (
Di•œy
 *, , 
VLSîvî
, 
VLP©h
, , 
VLNode
);

596 
glXDe°royGLXVideoSour˚SGIX
 (
Di•œy
 *, 
GLXVideoSour˚SGIX
);

598 
GLXVideoSour˚SGIX
 ( * 
	tPFNGLXCREATEGLXVIDEOSOURCESGIXPROC
Ë(
	tDi•œy
 *
	tdi•œy
, 
	ts¸ìn
, 
	tVLSîvî
 
	t£rvî
, 
	tVLP©h
 
	t∑th
, 
	tnodeCœss
, 
	tVLNode
 
	tdøöNode
);

599 –* 
	gPFNGLXDESTROYGLXVIDEOSOURCESGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXVideoSour˚SGIX
 
	tglxvideosour˚
);

603 #i‚de‡
GLX_EXT_visuÆ_øtög


604 
	#GLX_EXT_visuÆ_øtög
 1

	)

607 #i‚de‡
GLX_EXT_imp‹t_c⁄ãxt


608 
	#GLX_EXT_imp‹t_c⁄ãxt
 1

	)

609 #ifde‡
GLX_GLXEXT_PROTOTYPES


610 
Di•œy
 * 
glXGëCuºítDi•œyEXT
 ();

611 
glXQuîyC⁄ãxtInfoEXT
 (
Di•œy
 *, 
GLXC⁄ãxt
, , *);

612 
GLXC⁄ãxtID
 
glXGëC⁄ãxtIDEXT
 (c⁄° 
GLXC⁄ãxt
);

613 
GLXC⁄ãxt
 
glXImp‹tC⁄ãxtEXT
 (
Di•œy
 *, 
GLXC⁄ãxtID
);

614 
glXFªeC⁄ãxtEXT
 (
Di•œy
 *, 
GLXC⁄ãxt
);

616 
	gDi•œy
 * ( * 
	tPFNGLXGETCURRENTDISPLAYEXTPROC
) ();

617 –* 
	gPFNGLXQUERYCONTEXTINFOEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXC⁄ãxt
 
	tc⁄ãxt
, 
	t©åibuã
, *
	tvÆue
);

618 
GLXC⁄ãxtID
 ( * 
	tPFNGLXGETCONTEXTIDEXTPROC
Ë(c⁄° 
	tGLXC⁄ãxt
 
	tc⁄ãxt
);

619 
GLXC⁄ãxt
 ( * 
	tPFNGLXIMPORTCONTEXTEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXC⁄ãxtID
 
	tc⁄ãxtID
);

620 –* 
	gPFNGLXFREECONTEXTEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXC⁄ãxt
 
	tc⁄ãxt
);

623 #i‚de‡
GLX_SGIX_fbc⁄fig


624 
	#GLX_SGIX_fbc⁄fig
 1

	)

625 #ifde‡
GLX_GLXEXT_PROTOTYPES


626 
glXGëFBC⁄figAâribSGIX
 (
Di•œy
 *, 
GLXFBC⁄figSGIX
, , *);

627 
GLXFBC⁄figSGIX
 * 
glXChoo£FBC⁄figSGIX
 (
Di•œy
 *, , *, *);

628 
GLXPixm≠
 
glXCª©eGLXPixm≠WôhC⁄figSGIX
 (
Di•œy
 *, 
GLXFBC⁄figSGIX
, 
Pixm≠
);

629 
GLXC⁄ãxt
 
glXCª©eC⁄ãxtWôhC⁄figSGIX
 (
Di•œy
 *, 
GLXFBC⁄figSGIX
, , GLXC⁄ãxt, 
Boﬁ
);

630 
XVisuÆInfo
 * 
glXGëVisuÆFromFBC⁄figSGIX
 (
Di•œy
 *, 
GLXFBC⁄figSGIX
);

631 
GLXFBC⁄figSGIX
 
glXGëFBC⁄figFromVisuÆSGIX
 (
Di•œy
 *, 
XVisuÆInfo
 *);

633 –* 
	gPFNGLXGETFBCONFIGATTRIBSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄figSGIX
 
	tc⁄fig
, 
	t©åibuã
, *
	tvÆue
);

634 
	gGLXFBC⁄figSGIX
 * ( * 
	tPFNGLXCHOOSEFBCONFIGSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, *
	t©åib_li°
, *
	t√Àmíts
);

635 
GLXPixm≠
 ( * 
	tPFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄figSGIX
 
	tc⁄fig
, 
	tPixm≠
 
	tpixm≠
);

636 
GLXC⁄ãxt
 ( * 
	tPFNGLXCREATECONTEXTWITHCONFIGSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄figSGIX
 
	tc⁄fig
, 
	tªndî_ty≥
, 
	tGLXC⁄ãxt
 
	tsh¨e_li°
, 
	tBoﬁ
 
	tdúe˘
);

637 
	gXVisuÆInfo
 * ( * 
	tPFNGLXGETVISUALFROMFBCONFIGSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄figSGIX
 
	tc⁄fig
);

638 
GLXFBC⁄figSGIX
 ( * 
	tPFNGLXGETFBCONFIGFROMVISUALSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tXVisuÆInfo
 *
	tvis
);

641 #i‚de‡
GLX_SGIX_pbuf„r


642 
	#GLX_SGIX_pbuf„r
 1

	)

643 #ifde‡
GLX_GLXEXT_PROTOTYPES


644 
GLXPbuf„rSGIX
 
glXCª©eGLXPbuf„rSGIX
 (
Di•œy
 *, 
GLXFBC⁄figSGIX
, , , *);

645 
glXDe°royGLXPbuf„rSGIX
 (
Di•œy
 *, 
GLXPbuf„rSGIX
);

646 
glXQuîyGLXPbuf„rSGIX
 (
Di•œy
 *, 
GLXPbuf„rSGIX
, , *);

647 
glXSñe˘EvítSGIX
 (
Di•œy
 *, 
GLXDøwabÀ
, );

648 
glXGëSñe˘edEvítSGIX
 (
Di•œy
 *, 
GLXDøwabÀ
, *);

650 
GLXPbuf„rSGIX
 ( * 
	tPFNGLXCREATEGLXPBUFFERSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄figSGIX
 
	tc⁄fig
, 
	twidth
, 
	theight
, *
	t©åib_li°
);

651 –* 
	gPFNGLXDESTROYGLXPBUFFERSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPbuf„rSGIX
 
	tpbuf
);

652 –* 
	gPFNGLXQUERYGLXPBUFFERSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPbuf„rSGIX
 
	tpbuf
, 
	t©åibuã
, *
	tvÆue
);

653 –* 
	gPFNGLXSELECTEVENTSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tmask
);

654 –* 
	gPFNGLXGETSELECTEDEVENTSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, *
	tmask
);

657 #i‚de‡
GLX_SGI_cushi⁄


658 
	#GLX_SGI_cushi⁄
 1

	)

659 #ifde‡
GLX_GLXEXT_PROTOTYPES


660 
glXCushi⁄SGI
 (
Di•œy
 *, 
Wödow
, );

662 –* 
	gPFNGLXCUSHIONSGIPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tWödow
 
	twödow
, 
	tcushi⁄
);

665 #i‚de‡
GLX_SGIX_video_ªsize


666 
	#GLX_SGIX_video_ªsize
 1

	)

667 #ifde‡
GLX_GLXEXT_PROTOTYPES


668 
glXBödCh™√lToWödowSGIX
 (
Di•œy
 *, , , 
Wödow
);

669 
glXCh™√lRe˘SGIX
 (
Di•œy
 *, , , , , , );

670 
glXQuîyCh™√lRe˘SGIX
 (
Di•œy
 *, , , *, *, *, *);

671 
glXQuîyCh™√lDñèsSGIX
 (
Di•œy
 *, , , *, *, *, *);

672 
glXCh™√lRe˘SyncSGIX
 (
Di•œy
 *, , , 
GLíum
);

674 –* 
	gPFNGLXBINDCHANNELTOWINDOWSGIXPROC
Ë(
	tDi•œy
 *
	tdi•œy
, 
	ts¸ìn
, 
	tch™√l
, 
	tWödow
 
	twödow
);

675 –* 
	gPFNGLXCHANNELRECTSGIXPROC
Ë(
	tDi•œy
 *
	tdi•œy
, 
	ts¸ìn
, 
	tch™√l
, 
	tx
, 
	ty
, 
	tw
, 
	th
);

676 –* 
	gPFNGLXQUERYCHANNELRECTSGIXPROC
Ë(
	tDi•œy
 *
	tdi•œy
, 
	ts¸ìn
, 
	tch™√l
, *
	tdx
, *
	tdy
, *
	tdw
, *
	tdh
);

677 –* 
	gPFNGLXQUERYCHANNELDELTASSGIXPROC
Ë(
	tDi•œy
 *
	tdi•œy
, 
	ts¸ìn
, 
	tch™√l
, *
	tx
, *
	ty
, *
	tw
, *
	th
);

678 –* 
	gPFNGLXCHANNELRECTSYNCSGIXPROC
Ë(
	tDi•œy
 *
	tdi•œy
, 
	ts¸ìn
, 
	tch™√l
, 
	tGLíum
 
	tsyn˘y≥
);

681 #i‚de‡
GLX_SGIX_dmbuf„r


682 
	#GLX_SGIX_dmbuf„r
 1

	)

683 #ifde‡
_DM_BUFFER_H_


684 #ifde‡
GLX_GLXEXT_PROTOTYPES


685 
Boﬁ
 
glXAssocüãDMPbuf„rSGIX
 (
Di•œy
 *, 
GLXPbuf„rSGIX
, 
DM∑øms
 *, 
DMbuf„r
);

687 
Boﬁ
 ( * 
	tPFNGLXASSOCIATEDMPBUFFERSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPbuf„rSGIX
 
	tpbuf„r
, 
	tDM∑øms
 *
	t∑øms
, 
	tDMbuf„r
 
	tdmbuf„r
);

691 #i‚de‡
GLX_SGIX_sw≠_group


692 
	#GLX_SGIX_sw≠_group
 1

	)

693 #ifde‡
GLX_GLXEXT_PROTOTYPES


694 
glXJoöSw≠GroupSGIX
 (
Di•œy
 *, 
GLXDøwabÀ
, GLXDrawable);

696 –* 
	gPFNGLXJOINSWAPGROUPSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, GLXDøwabÀ 
	tmembî
);

699 #i‚de‡
GLX_SGIX_sw≠_b¨rõr


700 
	#GLX_SGIX_sw≠_b¨rõr
 1

	)

701 #ifde‡
GLX_GLXEXT_PROTOTYPES


702 
glXBödSw≠B¨rõrSGIX
 (
Di•œy
 *, 
GLXDøwabÀ
, );

703 
Boﬁ
 
glXQuîyMaxSw≠B¨rõrsSGIX
 (
Di•œy
 *, , *);

705 –* 
	gPFNGLXBINDSWAPBARRIERSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tb¨rõr
);

706 
Boﬁ
 ( * 
	tPFNGLXQUERYMAXSWAPBARRIERSSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, *
	tmax
);

709 #i‚de‡
GLX_SUN_gë_å™•¨ít_ödex


710 
	#GLX_SUN_gë_å™•¨ít_ödex
 1

	)

711 #ifde‡
GLX_GLXEXT_PROTOTYPES


712 
Sètus
 
glXGëTøn•¨ítIndexSUN
 (
Di•œy
 *, 
Wödow
, Window, *);

714 
Sètus
 ( * 
	tPFNGLXGETTRANSPARENTINDEXSUNPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tWödow
 
	tovîœy
, Wödow 
	tundîœy
, *
	tpTøn•¨ítIndex
);

717 #i‚de‡
GLX_MESA_c›y_sub_buf„r


718 
	#GLX_MESA_c›y_sub_buf„r
 1

	)

719 #ifde‡
GLX_GLXEXT_PROTOTYPES


720 
glXC›ySubBuf„rMESA
 (
Di•œy
 *, 
GLXDøwabÀ
, , , , );

722 –* 
	gPFNGLXCOPYSUBBUFFERMESAPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tx
, 
	ty
, 
	twidth
, 
	theight
);

725 #i‚de‡
GLX_MESA_pixm≠_cﬁ‹m≠


726 
	#GLX_MESA_pixm≠_cﬁ‹m≠
 1

	)

727 #ifde‡
GLX_GLXEXT_PROTOTYPES


728 
GLXPixm≠
 
glXCª©eGLXPixm≠MESA
 (
Di•œy
 *, 
XVisuÆInfo
 *, 
Pixm≠
, 
Cﬁ‹m≠
);

730 
GLXPixm≠
 ( * 
	tPFNGLXCREATEGLXPIXMAPMESAPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tXVisuÆInfo
 *
	tvisuÆ
, 
	tPixm≠
 
	tpixm≠
, 
	tCﬁ‹m≠
 
	tcm≠
);

733 #i‚de‡
GLX_MESA_ªÀa£_buf„rs


734 
	#GLX_MESA_ªÀa£_buf„rs
 1

	)

735 #ifde‡
GLX_GLXEXT_PROTOTYPES


736 
Boﬁ
 
glXRñó£Buf„rsMESA
 (
Di•œy
 *, 
GLXDøwabÀ
);

738 
Boﬁ
 ( * 
	tPFNGLXRELEASEBUFFERSMESAPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
);

741 #i‚de‡
GLX_MESA_£t_3dfx_mode


742 
	#GLX_MESA_£t_3dfx_mode
 1

	)

743 #ifde‡
GLX_GLXEXT_PROTOTYPES


744 
Boﬁ
 
glXSë3DfxModeMESA
 ();

746 
Boﬁ
 ( * 
	tPFNGLXSET3DFXMODEMESAPROC
Ë(
	tmode
);

749 #i‚de‡
GLX_SGIX_visuÆ_£À˘_group


750 
	#GLX_SGIX_visuÆ_£À˘_group
 1

	)

753 #i‚de‡
GLX_OML_sw≠_mëhod


754 
	#GLX_OML_sw≠_mëhod
 1

	)

757 #i‚de‡
GLX_OML_sync_c⁄åﬁ


758 
	#GLX_OML_sync_c⁄åﬁ
 1

	)

759 #ifde‡
GLX_GLXEXT_PROTOTYPES


760 
Boﬁ
 
glXGëSyncVÆuesOML
 (
Di•œy
 *, 
GLXDøwabÀ
, 
öt64_t
 *, int64_t *, int64_t *);

761 
Boﬁ
 
glXGëMscR©eOML
 (
Di•œy
 *, 
GLXDøwabÀ
, 
öt32_t
 *, int32_t *);

762 
öt64_t
 
glXSw≠Buf„rsMscOML
 (
Di•œy
 *, 
GLXDøwabÀ
, int64_t, int64_t, int64_t);

763 
Boﬁ
 
glXWaôF‹MscOML
 (
Di•œy
 *, 
GLXDøwabÀ
, 
öt64_t
, int64_t, int64_t, int64_t *, int64_t *, int64_t *);

764 
Boﬁ
 
glXWaôF‹SbcOML
 (
Di•œy
 *, 
GLXDøwabÀ
, 
öt64_t
, int64_t *, int64_t *, int64_t *);

766 
Boﬁ
 ( * 
	tPFNGLXGETSYNCVALUESOMLPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt64_t
 *
	tu°
, i¡64_à*
	tmsc
, i¡64_à*
	tsbc
);

767 
Boﬁ
 ( * 
	tPFNGLXGETMSCRATEOMLPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt32_t
 *
	tnumî©‹
, i¡32_à*
	tdíomö©‹
);

768 
öt64_t
 ( * 
	tPFNGLXSWAPBUFFERSMSCOMLPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt64_t
 
	tèrgë_msc
, i¡64_à
	tdivis‹
, i¡64_à
	tªmaödî
);

769 
Boﬁ
 ( * 
	tPFNGLXWAITFORMSCOMLPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt64_t
 
	tèrgë_msc
, i¡64_à
	tdivis‹
, i¡64_à
	tªmaödî
, i¡64_à*
	tu°
, i¡64_à*
	tmsc
, i¡64_à*
	tsbc
);

770 
Boﬁ
 ( * 
	tPFNGLXWAITFORSBCOMLPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt64_t
 
	tèrgë_sbc
, i¡64_à*
	tu°
, i¡64_à*
	tmsc
, i¡64_à*
	tsbc
);

773 #i‚de‡
GLX_NV_Êﬂt_buf„r


774 
	#GLX_NV_Êﬂt_buf„r
 1

	)

777 #i‚de‡
GLX_SGIX_hy≥Ωùe


778 
	#GLX_SGIX_hy≥Ωùe
 1

	)

781 
	gpùeName
[
GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
];

782 
	g√tw‹kId
;

783 } 
	tGLXHy≥ΩùeNëw‹kSGIX
;

786 
	gpùeName
[
GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
];

787 
	gch™√l
;

789 
	g∑πicù©i⁄Ty≥
;

790 
	gtimeSli˚
;

791 } 
	tGLXHy≥ΩùeC⁄figSGIX
;

794 
	gpùeName
[
GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
];

795 
	g§cXOrigö
, 
	g§cYOrigö
, 
	g§cWidth
, 
	g§cHeight
;

796 
	gde°XOrigö
, 
	gde°YOrigö
, 
	gde°Width
, 
	gde°Height
;

797 } 
	tGLXPùeRe˘
;

800 
	gpùeName
[
GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
];

801 
	gXOrigö
, 
	gYOrigö
, 
	gmaxHeight
, 
	gmaxWidth
;

802 } 
	tGLXPùeRe˘Limôs
;

804 #ifde‡
GLX_GLXEXT_PROTOTYPES


805 
GLXHy≥ΩùeNëw‹kSGIX
 * 
glXQuîyHy≥ΩùeNëw‹kSGIX
 (
Di•œy
 *, *);

806 
glXHy≥ΩùeC⁄figSGIX
 (
Di•œy
 *, , , 
GLXHy≥ΩùeC⁄figSGIX
 *, *);

807 
GLXHy≥ΩùeC⁄figSGIX
 * 
glXQuîyHy≥ΩùeC⁄figSGIX
 (
Di•œy
 *, , *);

808 
glXDe°royHy≥ΩùeC⁄figSGIX
 (
Di•œy
 *, );

809 
glXBödHy≥ΩùeSGIX
 (
Di•œy
 *, );

810 
glXQuîyHy≥ΩùeBe°AâribSGIX
 (
Di•œy
 *, , , , *, *);

811 
glXHy≥ΩùeAâribSGIX
 (
Di•œy
 *, , , , *);

812 
glXQuîyHy≥ΩùeAâribSGIX
 (
Di•œy
 *, , , , *);

814 
	gGLXHy≥ΩùeNëw‹kSGIX
 * ( * 
	tPFNGLXQUERYHYPERPIPENETWORKSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, *
	t≈ùes
);

815 –* 
	gPFNGLXHYPERPIPECONFIGSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	t√tw‹kId
, 
	t≈ùes
, 
	tGLXHy≥ΩùeC⁄figSGIX
 *
	tcfg
, *
	thpId
);

816 
	gGLXHy≥ΩùeC⁄figSGIX
 * ( * 
	tPFNGLXQUERYHYPERPIPECONFIGSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	thpId
, *
	t≈ùes
);

817 –* 
	gPFNGLXDESTROYHYPERPIPECONFIGSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	thpId
);

818 –* 
	gPFNGLXBINDHYPERPIPESGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	thpId
);

819 –* 
	gPFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ttimeSli˚
, 
	t©åib
, 
	tsize
, *
	t©åibLi°
, *
	tªtu∫AâribLi°
);

820 –* 
	gPFNGLXHYPERPIPEATTRIBSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ttimeSli˚
, 
	t©åib
, 
	tsize
, *
	t©åibLi°
);

821 –* 
	gPFNGLXQUERYHYPERPIPEATTRIBSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ttimeSli˚
, 
	t©åib
, 
	tsize
, *
	tªtu∫AâribLi°
);

824 #i‚de‡
GLX_MESA_agp_off£t


825 
	#GLX_MESA_agp_off£t
 1

	)

826 #ifde‡
GLX_GLXEXT_PROTOTYPES


827 
glXGëAGPOff£tMESA
 (const *);

829 –* 
	tPFNGLXGETAGPOFFSETMESAPROC
Ë(c⁄° *
	tpoöãr
);

832 #i‚de‡
GLX_EXT_fbc⁄fig_∑cked_Êﬂt


833 
	#GLX_EXT_fbc⁄fig_∑cked_Êﬂt
 1

	)

836 #i‚de‡
GLX_EXT_‰amebuf„r_sRGB


837 
	#GLX_EXT_‰amebuf„r_sRGB
 1

	)

840 #i‚de‡
GLX_EXT_ãxtuª_‰om_pixm≠


841 
	#GLX_EXT_ãxtuª_‰om_pixm≠
 1

	)

842 #ifde‡
GLX_GLXEXT_PROTOTYPES


843 
glXBödTexImageEXT
 (
Di•œy
 *, 
GLXDøwabÀ
, , const *);

844 
glXRñó£TexImageEXT
 (
Di•œy
 *, 
GLXDøwabÀ
, );

846 –* 
	gPFNGLXBINDTEXIMAGEEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tbuf„r
, c⁄° *
	t©åib_li°
);

847 –* 
	gPFNGLXRELEASETEXIMAGEEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tbuf„r
);

850 #i‚de‡
GLX_NV_¥e£¡_video


851 
	#GLX_NV_¥e£¡_video
 1

	)

852 #ifde‡
GLX_GLXEXT_PROTOTYPES


853 * 
glXEnumî©eVideoDevi˚sNV
 (
Di•œy
 *, , *);

854 
glXBödVideoDevi˚NV
 (
Di•œy
 *, , , const *);

856 * ( * 
	tPFNGLXENUMERATEVIDEODEVICESNVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, *
	t√Àmíts
);

857 –* 
	gPFNGLXBINDVIDEODEVICENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tvideo_¶Ÿ
, 
	tvideo_devi˚
, c⁄° *
	t©åib_li°
);

860 #i‚de‡
GLX_NV_video_ouçut


861 
	#GLX_NV_video_ouçut
 1

	)

862 #ifde‡
GLX_GLXEXT_PROTOTYPES


863 
glXGëVideoDevi˚NV
 (
Di•œy
 *, , , 
GLXVideoDevi˚NV
 *);

864 
glXRñó£VideoDevi˚NV
 (
Di•œy
 *, , 
GLXVideoDevi˚NV
);

865 
glXBödVideoImageNV
 (
Di•œy
 *, 
GLXVideoDevi˚NV
, 
GLXPbuf„r
, );

866 
glXRñó£VideoImageNV
 (
Di•œy
 *, 
GLXPbuf„r
);

867 
glXSídPbuf„rToVideoNV
 (
Di•œy
 *, 
GLXPbuf„r
, , *, 
GLboﬁón
);

868 
glXGëVideoInfoNV
 (
Di•œy
 *, , 
GLXVideoDevi˚NV
, *, *);

870 –* 
	gPFNGLXGETVIDEODEVICENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, 
	tnumVideoDevi˚s
, 
	tGLXVideoDevi˚NV
 *
	tpVideoDevi˚
);

871 –* 
	gPFNGLXRELEASEVIDEODEVICENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, 
	tGLXVideoDevi˚NV
 
	tVideoDevi˚
);

872 –* 
	gPFNGLXBINDVIDEOIMAGENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXVideoDevi˚NV
 
	tVideoDevi˚
, 
	tGLXPbuf„r
 
	tpbuf
, 
	tiVideoBuf„r
);

873 –* 
	gPFNGLXRELEASEVIDEOIMAGENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPbuf„r
 
	tpbuf
);

874 –* 
	gPFNGLXSENDPBUFFERTOVIDEONVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPbuf„r
 
	tpbuf
, 
	tiBuf„rTy≥
, *
	tpulCou¡îPbuf„r
, 
	tGLboﬁón
 
	tbBlock
);

875 –* 
	gPFNGLXGETVIDEOINFONVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, 
	tGLXVideoDevi˚NV
 
	tVideoDevi˚
, *
	tpulCou¡îOuçutPbuf„r
, *
	tpulCou¡îOuçutVideo
);

878 #i‚de‡
GLX_NV_sw≠_group


879 
	#GLX_NV_sw≠_group
 1

	)

880 #ifde‡
GLX_GLXEXT_PROTOTYPES


881 
Boﬁ
 
glXJoöSw≠GroupNV
 (
Di•œy
 *, 
GLXDøwabÀ
, 
GLuöt
);

882 
Boﬁ
 
glXBödSw≠B¨rõrNV
 (
Di•œy
 *, 
GLuöt
, GLuint);

883 
Boﬁ
 
glXQuîySw≠GroupNV
 (
Di•œy
 *, 
GLXDøwabÀ
, 
GLuöt
 *, GLuint *);

884 
Boﬁ
 
glXQuîyMaxSw≠GroupsNV
 (
Di•œy
 *, , 
GLuöt
 *, GLuint *);

885 
Boﬁ
 
glXQuîyFømeCou¡NV
 (
Di•œy
 *, , 
GLuöt
 *);

886 
Boﬁ
 
glXRe£tFømeCou¡NV
 (
Di•œy
 *, );

888 
Boﬁ
 ( * 
	tPFNGLXJOINSWAPGROUPNVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tGLuöt
 
	tgroup
);

889 
Boﬁ
 ( * 
	tPFNGLXBINDSWAPBARRIERNVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLuöt
 
	tgroup
, GLuöà
	tb¨rõr
);

890 
Boﬁ
 ( * 
	tPFNGLXQUERYSWAPGROUPNVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tGLuöt
 *
	tgroup
, GLuöà*
	tb¨rõr
);

891 
Boﬁ
 ( * 
	tPFNGLXQUERYMAXSWAPGROUPSNVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, 
	tGLuöt
 *
	tmaxGroups
, GLuöà*
	tmaxB¨rõrs
);

892 
Boﬁ
 ( * 
	tPFNGLXQUERYFRAMECOUNTNVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, 
	tGLuöt
 *
	tcou¡
);

893 
Boﬁ
 ( * 
	tPFNGLXRESETFRAMECOUNTNVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
);

896 #i‚de‡
GLX_NV_video_ˇ±uª


897 
	#GLX_NV_video_ˇ±uª
 1

	)

898 #ifde‡
GLX_GLXEXT_PROTOTYPES


899 
glXBödVideoC≠tuªDevi˚NV
 (
Di•œy
 *, , 
GLXVideoC≠tuªDevi˚NV
);

900 
GLXVideoC≠tuªDevi˚NV
 * 
glXEnumî©eVideoC≠tuªDevi˚sNV
 (
Di•œy
 *, , *);

901 
glXLockVideoC≠tuªDevi˚NV
 (
Di•œy
 *, 
GLXVideoC≠tuªDevi˚NV
);

902 
glXQuîyVideoC≠tuªDevi˚NV
 (
Di•œy
 *, 
GLXVideoC≠tuªDevi˚NV
, , *);

903 
glXRñó£VideoC≠tuªDevi˚NV
 (
Di•œy
 *, 
GLXVideoC≠tuªDevi˚NV
);

905 –* 
	gPFNGLXBINDVIDEOCAPTUREDEVICENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tvideo_ˇ±uª_¶Ÿ
, 
	tGLXVideoC≠tuªDevi˚NV
 
	tdevi˚
);

906 
	gGLXVideoC≠tuªDevi˚NV
 * ( * 
	tPFNGLXENUMERATEVIDEOCAPTUREDEVICESNVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, *
	t√Àmíts
);

907 –* 
	gPFNGLXLOCKVIDEOCAPTUREDEVICENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXVideoC≠tuªDevi˚NV
 
	tdevi˚
);

908 –* 
	gPFNGLXQUERYVIDEOCAPTUREDEVICENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXVideoC≠tuªDevi˚NV
 
	tdevi˚
, 
	t©åibuã
, *
	tvÆue
);

909 –* 
	gPFNGLXRELEASEVIDEOCAPTUREDEVICENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXVideoC≠tuªDevi˚NV
 
	tdevi˚
);

912 #i‚de‡
GLX_EXT_sw≠_c⁄åﬁ


913 
	#GLX_EXT_sw≠_c⁄åﬁ
 1

	)

914 #ifde‡
GLX_GLXEXT_PROTOTYPES


915 
glXSw≠I¡îvÆEXT
 (
Di•œy
 *, 
GLXDøwabÀ
, );

917 –* 
	gPFNGLXSWAPINTERVALEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töãrvÆ
);

920 #i‚de‡
GLX_NV_c›y_image


921 
	#GLX_NV_c›y_image
 1

	)

922 #ifde‡
GLX_GLXEXT_PROTOTYPES


923 
glXC›yImageSubD©aNV
 (
Di•œy
 *, 
GLXC⁄ãxt
, 
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, GLXC⁄ãxt, GLuöt, GLíum, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei);

925 –* 
	gPFNGLXCOPYIMAGESUBDATANVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXC⁄ãxt
 
	t§cCtx
, 
	tGLuöt
 
	t§cName
, 
	tGLíum
 
	t§cT¨gë
, 
	tGLöt
 
	t§cLevñ
, GLöà
	t§cX
, GLöà
	t§cY
, GLöà
	t§cZ
, GLXC⁄ãxà
	td°Ctx
, GLuöà
	td°Name
, GLíum 
	td°T¨gë
, GLöà
	td°Levñ
, GLöà
	td°X
, GLöà
	td°Y
, GLöà
	td°Z
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
);

929 #ifde‡
__˝lu•lus


	@include/GL/internal/dri_interface.h

40 #i‚de‡
DRI_INTERFACE_H


41 
	#DRI_INTERFACE_H


	)

44 #i‡!
deföed
(
__APPLE__
Ë&& !deföed(
__CYGWIN__
Ë&& !deföed(
__GNU__
)

45 
	~<drm.h
>

47 
	tdrm_c⁄ãxt_t
;

48 
	tdrm_døwabÀ_t
;

49 
drm_˛ù_ª˘
 
	tdrm_˛ù_ª˘_t
;

59 
__DRIdi•œyRec
 
	t__DRIdi•œy
;

60 
__DRIs¸ìnRec
 
	t__DRIs¸ìn
;

61 
__DRIc⁄ãxtRec
 
	t__DRIc⁄ãxt
;

62 
__DRIdøwabÀRec
 
	t__DRIdøwabÀ
;

63 
__DRIc⁄figRec
 
	t__DRIc⁄fig
;

64 
__DRI‰amebuf„rRec
 
	t__DRI‰amebuf„r
;

65 
__DRIvîsi⁄Rec
 
	t__DRIvîsi⁄
;

67 
__DRIc‹eExãnsi⁄Rec
 
	t__DRIc‹eExãnsi⁄
;

68 
__DRIexãnsi⁄Rec
 
	t__DRIexãnsi⁄
;

69 
__DRIc›ySubBuf„rExãnsi⁄Rec
 
	t__DRIc›ySubBuf„rExãnsi⁄
;

70 
__DRIsw≠C⁄åﬁExãnsi⁄Rec
 
	t__DRIsw≠C⁄åﬁExãnsi⁄
;

71 
__DRIÆloˇãExãnsi⁄Rec
 
	t__DRIÆloˇãExãnsi⁄
;

72 
__DRI‰ameTøckögExãnsi⁄Rec
 
	t__DRI‰ameTøckögExãnsi⁄
;

73 
__DRImedüSåómCou¡îExãnsi⁄Rec
 
	t__DRImedüSåómCou¡îExãnsi⁄
;

74 
__DRIãxOff£tExãnsi⁄Rec
 
	t__DRIãxOff£tExãnsi⁄
;

75 
__DRIãxBuf„rExãnsi⁄Rec
 
	t__DRIãxBuf„rExãnsi⁄
;

76 
__DRIÀgacyExãnsi⁄Rec
 
	t__DRIÀgacyExãnsi⁄
;

77 
__DRIswø°Exãnsi⁄Rec
 
	t__DRIswø°Exãnsi⁄
;

78 
__DRIbuf„rRec
 
	t__DRIbuf„r
;

79 
__DRIdri2Exãnsi⁄Rec
 
	t__DRIdri2Exãnsi⁄
;

80 
__DRIdri2LﬂdîExãnsi⁄Rec
 
	t__DRIdri2LﬂdîExãnsi⁄
;

81 
__DRI2ÊushExãnsi⁄Rec
 
	t__DRI2ÊushExãnsi⁄
;

105 
	s__DRIexãnsi⁄Rec
 {

106 c⁄° *
	m«me
;

107 
	mvîsi⁄
;

121 
	#__DRI_READ_DRAWABLE
 "DRI_RódDøwabÀ"

	)

122 
	#__DRI_READ_DRAWABLE_VERSION
 1

	)

127 
	#__DRI_COPY_SUB_BUFFER
 "DRI_C›ySubBuf„r"

	)

128 
	#__DRI_COPY_SUB_BUFFER_VERSION
 1

	)

129 
	s__DRIc›ySubBuf„rExãnsi⁄Rec
 {

130 
__DRIexãnsi⁄
 
	mba£
;

131 (*
	mc›ySubBuf„r
)(
__DRIdøwabÀ
 *
	mdøwabÀ
, 
	mx
, 
	my
, 
	mw
, 
	mh
);

138 
	#__DRI_SWAP_CONTROL
 "DRI_Sw≠C⁄åﬁ"

	)

139 
	#__DRI_SWAP_CONTROL_VERSION
 1

	)

140 
	s__DRIsw≠C⁄åﬁExãnsi⁄Rec
 {

141 
__DRIexãnsi⁄
 
	mba£
;

142 (*
	m£tSw≠I¡îvÆ
)(
__DRIdøwabÀ
 *
	mdøwabÀ
, 
	möãvÆ
);

143 (*
	mgëSw≠I¡îvÆ
)(
__DRIdøwabÀ
 *
	mdøwabÀ
);

149 
	#__DRI_ALLOCATE
 "DRI_AŒoˇã"

	)

150 
	#__DRI_ALLOCATE_VERSION
 1

	)

151 
	s__DRIÆloˇãExãnsi⁄Rec
 {

152 
__DRIexãnsi⁄
 
	mba£
;

154 *(*
	mÆloˇãMem‹y
)(
__DRIs¸ìn
 *
	ms¸ìn
, 
GLsizei
 
	msize
,

155 
GLÊﬂt
 
	mªad‰eq
, GLÊﬂà
	mwrôe‰eq
,

156 
GLÊﬂt
 
	m¥i‹ôy
);

158 (*
	m‰ìMem‹y
)(
__DRIs¸ìn
 *
	ms¸ìn
, 
GLvoid
 *
	mpoöãr
);

160 
GLuöt
 (*
mem‹yOff£t
)(
__DRIs¸ìn
 *
	ms¸ìn
, c⁄° 
GLvoid
 *
	mpoöãr
);

166 
	#__DRI_FRAME_TRACKING
 "DRI_FømeTøckög"

	)

167 
	#__DRI_FRAME_TRACKING_VERSION
 1

	)

168 
	s__DRI‰ameTøckögExãnsi⁄Rec
 {

169 
__DRIexãnsi⁄
 
	mba£
;

176 (*
	m‰ameTøckög
)(
__DRIdøwabÀ
 *
	mdøwabÀ
, 
GLboﬁón
 
	míabÀ
);

183 (*
	mquîyFømeTøckög
)(
__DRIdøwabÀ
 *
	mdøwabÀ
,

184 
öt64_t
 * 
	msbc
, i¡64_à* 
	mmis£dFømes
,

185 * 
	mœ°Mis£dUßge
, * 
	mußge
);

192 
	#__DRI_MEDIA_STREAM_COUNTER
 "DRI_MedüSåómCou¡î"

	)

193 
	#__DRI_MEDIA_STREAM_COUNTER_VERSION
 1

	)

194 
	s__DRImedüSåómCou¡îExãnsi⁄Rec
 {

195 
__DRIexãnsi⁄
 
	mba£
;

203 (*
	mwaôF‹MSC
)(
__DRIdøwabÀ
 *
	mdøwabÀ
,

204 
öt64_t
 
	mèrgë_msc
, i¡64_à
	mdivis‹
, i¡64_à
	mªmaödî
,

205 
öt64_t
 * 
	mmsc
, i¡64_à* 
	msbc
);

211 (*
	mgëDøwabÀMSC
)(
__DRIs¸ìn
 *
	ms¸ìn
, 
__DRIdøwabÀ
 *
	mdøwabÀ
,

212 
öt64_t
 *
	mmsc
);

216 
	#__DRI_TEX_OFFSET
 "DRI_TexOff£t"

	)

217 
	#__DRI_TEX_OFFSET_VERSION
 1

	)

218 
	s__DRIãxOff£tExãnsi⁄Rec
 {

219 
__DRIexãnsi⁄
 
	mba£
;

228 (*
	m£tTexOff£t
)(
__DRIc⁄ãxt
 *
	mpDRICtx
, 
GLöt
 
	mãx«me
,

229 
	moff£t
, 
GLöt
 
	mdïth
, 
GLuöt
 
	mpôch
);

233 
	#__DRI_TEX_BUFFER
 "DRI_TexBuf„r"

	)

234 
	#__DRI_TEX_BUFFER_VERSION
 2

	)

235 
	s__DRIãxBuf„rExãnsi⁄Rec
 {

236 
__DRIexãnsi⁄
 
	mba£
;

245 (*
	m£tTexBuf„r
)(
__DRIc⁄ãxt
 *
	mpDRICtx
,

246 
GLöt
 
	mèrgë
,

247 
__DRIdøwabÀ
 *
	mpDøw
);

255 (*
	m£tTexBuf„r2
)(
__DRIc⁄ãxt
 *
	mpDRICtx
,

256 
GLöt
 
	mèrgë
,

257 
GLöt
 
	mf‹m©
,

258 
__DRIdøwabÀ
 *
	mpDøw
);

264 
	#__DRI2_FLUSH
 "DRI2_Flush"

	)

265 
	#__DRI2_FLUSH_VERSION
 1

	)

266 
	s__DRI2ÊushExãnsi⁄Rec
 {

267 
__DRIexãnsi⁄
 
	mba£
;

268 (*
	mÊush
)(
__DRIdøwabÀ
 *
	mdøwabÀ
);

276 c⁄° 
__driC⁄figO±i⁄s
[];

290 
__DRIgëDøwabÀInfoExãnsi⁄Rec
 
	t__DRIgëDøwabÀInfoExãnsi⁄
;

291 
__DRIsy°emTimeExãnsi⁄Rec
 
	t__DRIsy°emTimeExãnsi⁄
;

292 
__DRIdamageExãnsi⁄Rec
 
	t__DRIdamageExãnsi⁄
;

293 
__DRIlﬂdîExãnsi⁄Rec
 
	t__DRIlﬂdîExãnsi⁄
;

294 
__DRIswø°LﬂdîExãnsi⁄Rec
 
	t__DRIswø°LﬂdîExãnsi⁄
;

300 
	#__DRI_GET_DRAWABLE_INFO
 "DRI_GëDøwabÀInfo"

	)

301 
	#__DRI_GET_DRAWABLE_INFO_VERSION
 1

	)

302 
	s__DRIgëDøwabÀInfoExãnsi⁄Rec
 {

303 
__DRIexãnsi⁄
 
	mba£
;

309 
GLboﬁón
 (* 
gëDøwabÀInfo
Ë–
__DRIdøwabÀ
 *
	mdøwabÀ
,

310 * 
	mödex
, * 
	m°amp
,

311 * 
	mx
, * 
	my
, * 
	mwidth
, * 
	mheight
,

312 * 
	mnumClùRe˘s
, 
drm_˛ù_ª˘_t
 ** 
	mpClùRe˘s
,

313 * 
	mbackX
, * 
	mbackY
,

314 * 
	mnumBackClùRe˘s
, 
drm_˛ù_ª˘_t
 ** 
	mpBackClùRe˘s
,

315 *
	mlﬂdîPriv©e
);

321 
	#__DRI_SYSTEM_TIME
 "DRI_Sy°emTime"

	)

322 
	#__DRI_SYSTEM_TIME_VERSION
 1

	)

323 
	s__DRIsy°emTimeExãnsi⁄Rec
 {

324 
__DRIexãnsi⁄
 
	mba£
;

329 (*
	mgëUST
)(
öt64_t
 * 
	mu°
);

338 
GLboﬁón
 (*
gëMSCR©e
)(
__DRIdøwabÀ
 *
	mdøw
,

339 
öt32_t
 * 
	mnumî©‹
, i¡32_à* 
	mdíomö©‹
,

340 *
	mlﬂdîPriv©e
);

346 
	#__DRI_DAMAGE
 "DRI_Damage"

	)

347 
	#__DRI_DAMAGE_VERSION
 1

	)

348 
	s__DRIdamageExãnsi⁄Rec
 {

349 
__DRIexãnsi⁄
 
	mba£
;

366 (*
	mªp‹tDamage
)(
__DRIdøwabÀ
 *
	mdøw
,

367 
	mx
, 
	my
,

368 
drm_˛ù_ª˘_t
 *
	mª˘s
, 
	mnum_ª˘s
,

369 
GLboﬁón
 
	m‰⁄t_buf„r
,

370 *
	mlﬂdîPriv©e
);

373 
	#__DRI_SWRAST_IMAGE_OP_DRAW
 1

	)

374 
	#__DRI_SWRAST_IMAGE_OP_CLEAR
 2

	)

375 
	#__DRI_SWRAST_IMAGE_OP_SWAP
 3

	)

380 
	#__DRI_SWRAST_LOADER
 "DRI_SWRa°Lﬂdî"

	)

381 
	#__DRI_SWRAST_LOADER_VERSION
 1

	)

382 
	s__DRIswø°LﬂdîExãnsi⁄Rec
 {

383 
__DRIexãnsi⁄
 
	mba£
;

388 (*
	mgëDøwabÀInfo
)(
__DRIdøwabÀ
 *
	mdøwabÀ
,

389 *
	mx
, *
	my
, *
	mwidth
, *
	mheight
,

390 *
	mlﬂdîPriv©e
);

395 (*
	mputImage
)(
__DRIdøwabÀ
 *
	mdøwabÀ
, 
	m›
,

396 
	mx
, 
	my
, 
	mwidth
, 
	mheight
, *
	md©a
,

397 *
	mlﬂdîPriv©e
);

402 (*
	mgëImage
)(
__DRIdøwabÀ
 *
	mdøwabÀ
,

403 
	mx
, 
	my
, 
	mwidth
, 
	mheight
, *
	md©a
,

404 *
	mlﬂdîPriv©e
);

413 
	#__DRI_DRIVER_EXTENSIONS
 "__driDrivîExãnsi⁄s"

	)

421 
	#__DRI_ATTRIB_BUFFER_SIZE
 1

	)

422 
	#__DRI_ATTRIB_LEVEL
 2

	)

423 
	#__DRI_ATTRIB_RED_SIZE
 3

	)

424 
	#__DRI_ATTRIB_GREEN_SIZE
 4

	)

425 
	#__DRI_ATTRIB_BLUE_SIZE
 5

	)

426 
	#__DRI_ATTRIB_LUMINANCE_SIZE
 6

	)

427 
	#__DRI_ATTRIB_ALPHA_SIZE
 7

	)

428 
	#__DRI_ATTRIB_ALPHA_MASK_SIZE
 8

	)

429 
	#__DRI_ATTRIB_DEPTH_SIZE
 9

	)

430 
	#__DRI_ATTRIB_STENCIL_SIZE
 10

	)

431 
	#__DRI_ATTRIB_ACCUM_RED_SIZE
 11

	)

432 
	#__DRI_ATTRIB_ACCUM_GREEN_SIZE
 12

	)

433 
	#__DRI_ATTRIB_ACCUM_BLUE_SIZE
 13

	)

434 
	#__DRI_ATTRIB_ACCUM_ALPHA_SIZE
 14

	)

435 
	#__DRI_ATTRIB_SAMPLE_BUFFERS
 15

	)

436 
	#__DRI_ATTRIB_SAMPLES
 16

	)

437 
	#__DRI_ATTRIB_RENDER_TYPE
 17

	)

438 
	#__DRI_ATTRIB_CONFIG_CAVEAT
 18

	)

439 
	#__DRI_ATTRIB_CONFORMANT
 19

	)

440 
	#__DRI_ATTRIB_DOUBLE_BUFFER
 20

	)

441 
	#__DRI_ATTRIB_STEREO
 21

	)

442 
	#__DRI_ATTRIB_AUX_BUFFERS
 22

	)

443 
	#__DRI_ATTRIB_TRANSPARENT_TYPE
 23

	)

444 
	#__DRI_ATTRIB_TRANSPARENT_INDEX_VALUE
 24

	)

445 
	#__DRI_ATTRIB_TRANSPARENT_RED_VALUE
 25

	)

446 
	#__DRI_ATTRIB_TRANSPARENT_GREEN_VALUE
 26

	)

447 
	#__DRI_ATTRIB_TRANSPARENT_BLUE_VALUE
 27

	)

448 
	#__DRI_ATTRIB_TRANSPARENT_ALPHA_VALUE
 28

	)

449 
	#__DRI_ATTRIB_FLOAT_MODE
 29

	)

450 
	#__DRI_ATTRIB_RED_MASK
 30

	)

451 
	#__DRI_ATTRIB_GREEN_MASK
 31

	)

452 
	#__DRI_ATTRIB_BLUE_MASK
 32

	)

453 
	#__DRI_ATTRIB_ALPHA_MASK
 33

	)

454 
	#__DRI_ATTRIB_MAX_PBUFFER_WIDTH
 34

	)

455 
	#__DRI_ATTRIB_MAX_PBUFFER_HEIGHT
 35

	)

456 
	#__DRI_ATTRIB_MAX_PBUFFER_PIXELS
 36

	)

457 
	#__DRI_ATTRIB_OPTIMAL_PBUFFER_WIDTH
 37

	)

458 
	#__DRI_ATTRIB_OPTIMAL_PBUFFER_HEIGHT
 38

	)

459 
	#__DRI_ATTRIB_VISUAL_SELECT_GROUP
 39

	)

460 
	#__DRI_ATTRIB_SWAP_METHOD
 40

	)

461 
	#__DRI_ATTRIB_MAX_SWAP_INTERVAL
 41

	)

462 
	#__DRI_ATTRIB_MIN_SWAP_INTERVAL
 42

	)

463 
	#__DRI_ATTRIB_BIND_TO_TEXTURE_RGB
 43

	)

464 
	#__DRI_ATTRIB_BIND_TO_TEXTURE_RGBA
 44

	)

465 
	#__DRI_ATTRIB_BIND_TO_MIPMAP_TEXTURE
 45

	)

466 
	#__DRI_ATTRIB_BIND_TO_TEXTURE_TARGETS
 46

	)

467 
	#__DRI_ATTRIB_YINVERTED
 47

	)

470 
	#__DRI_ATTRIB_RGBA_BIT
 0x01

	)

471 
	#__DRI_ATTRIB_COLOR_INDEX_BIT
 0x02

	)

472 
	#__DRI_ATTRIB_LUMINANCE_BIT
 0x04

	)

475 
	#__DRI_ATTRIB_SLOW_BIT
 0x01

	)

476 
	#__DRI_ATTRIB_NON_CONFORMANT_CONFIG
 0x02

	)

479 
	#__DRI_ATTRIB_TRANSPARENT_RGB
 0x00

	)

480 
	#__DRI_ATTRIB_TRANSPARENT_INDEX
 0x01

	)

483 
	#__DRI_ATTRIB_TEXTURE_1D_BIT
 0x01

	)

484 
	#__DRI_ATTRIB_TEXTURE_2D_BIT
 0x02

	)

485 
	#__DRI_ATTRIB_TEXTURE_RECTANGLE_BIT
 0x04

	)

490 
	#__DRI_CORE
 "DRI_C‹e"

	)

491 
	#__DRI_CORE_VERSION
 1

	)

493 
	s__DRIc‹eExãnsi⁄Rec
 {

494 
__DRIexãnsi⁄
 
	mba£
;

496 
	m__DRIs¸ìn
 *(*
	m¸óãNewS¸ìn
)(
	ms¸ìn
, 
	mfd
,

497 
	mßªa_h™dÀ
,

498 c⁄° 
__DRIexãnsi⁄
 **
	mexãnsi⁄s
,

499 c⁄° 
__DRIc⁄fig
 ***
	mdrivîC⁄figs
,

500 *
	mlﬂdîPriv©e
);

502 (*
	mde°royS¸ìn
)(
__DRIs¸ìn
 *
	ms¸ìn
);

504 c⁄° 
	m__DRIexãnsi⁄
 **(*
	mgëExãnsi⁄s
)(
__DRIs¸ìn
 *
	ms¸ìn
);

506 (*
	mgëC⁄figAârib
)(c⁄° 
__DRIc⁄fig
 *
	mc⁄fig
,

507 
	m©åib
,

508 *
	mvÆue
);

510 (*
	mödexC⁄figAârib
)(c⁄° 
__DRIc⁄fig
 *
	mc⁄fig
, 
	mödex
,

511 *
	m©åib
, *
	mvÆue
);

513 
	m__DRIdøwabÀ
 *(*
	m¸óãNewDøwabÀ
)(
__DRIs¸ìn
 *
	ms¸ìn
,

514 c⁄° 
__DRIc⁄fig
 *
	mc⁄fig
,

515 
	mdøwabÀ_id
,

516 
	mhód
,

517 *
	mlﬂdîPriv©e
);

519 (*
	mde°royDøwabÀ
)(
__DRIdøwabÀ
 *
	mdøwabÀ
);

521 (*
	msw≠Buf„rs
)(
__DRIdøwabÀ
 *
	mdøwabÀ
);

523 
	m__DRIc⁄ãxt
 *(*
	m¸óãNewC⁄ãxt
)(
__DRIs¸ìn
 *
	ms¸ìn
,

524 c⁄° 
__DRIc⁄fig
 *
	mc⁄fig
,

525 
__DRIc⁄ãxt
 *
	msh¨ed
,

526 *
	mlﬂdîPriv©e
);

528 (*
	mc›yC⁄ãxt
)(
__DRIc⁄ãxt
 *
	mde°
,

529 
__DRIc⁄ãxt
 *
	m§c
,

530 
	mmask
);

532 (*
	mde°royC⁄ãxt
)(
__DRIc⁄ãxt
 *
	mc⁄ãxt
);

534 (*
	mbödC⁄ãxt
)(
__DRIc⁄ãxt
 *
	m˘x
,

535 
__DRIdøwabÀ
 *
	mpdøw
,

536 
__DRIdøwabÀ
 *
	m¥ód
);

538 (*
	munbödC⁄ãxt
)(
__DRIc⁄ãxt
 *
	m˘x
);

550 
	s__DRIvîsi⁄Rec
 {

551 
	mmaj‹
;

552 
	mmö‹
;

553 
	m∑tch
;

568 
	s__DRI‰amebuf„rRec
 {

569 *
	mba£
;

575 
	msize
;

576 
	m°ride
;

577 
	mwidth
;

578 
	mheight
;

579 
	mdev_¥iv_size
;

580 *
	mdev_¥iv
;

589 
	#__DRI_LEGACY
 "DRI_Legacy"

	)

590 
	#__DRI_LEGACY_VERSION
 1

	)

592 
	s__DRIÀgacyExãnsi⁄Rec
 {

593 
__DRIexãnsi⁄
 
	mba£
;

595 
	m__DRIs¸ìn
 *(*
	m¸óãNewS¸ìn
)(
	ms¸ìn
,

596 c⁄° 
__DRIvîsi⁄
 *
	mddx_vîsi⁄
,

597 c⁄° 
__DRIvîsi⁄
 *
	mdri_vîsi⁄
,

598 c⁄° 
__DRIvîsi⁄
 *
	mdrm_vîsi⁄
,

599 c⁄° 
__DRI‰amebuf„r
 *
	m‰ame_buf„r
,

600 *
	mpSAREA
, 
	mfd
,

601 c⁄° 
__DRIexãnsi⁄
 **
	mexãnsi⁄s
,

602 c⁄° 
__DRIc⁄fig
 ***
	mdrivî_c⁄figs
,

603 *
	mlﬂdîPriv©e
);

605 
	m__DRIdøwabÀ
 *(*
	m¸óãNewDøwabÀ
)(
__DRIs¸ìn
 *
	ms¸ìn
,

606 c⁄° 
__DRIc⁄fig
 *
	mc⁄fig
,

607 
drm_døwabÀ_t
 
	mhwDøwabÀ
,

608 
	mªndîTy≥
, c⁄° *
	m©ås
,

609 *
	mlﬂdîPriv©e
);

611 
	m__DRIc⁄ãxt
 *(*
	m¸óãNewC⁄ãxt
)(
__DRIs¸ìn
 *
	ms¸ìn
,

612 c⁄° 
__DRIc⁄fig
 *
	mc⁄fig
,

613 
	mªndî_ty≥
,

614 
__DRIc⁄ãxt
 *
	msh¨ed
,

615 
drm_c⁄ãxt_t
 
	mhwC⁄ãxt
,

616 *
	mlﬂdîPriv©e
);

624 
	#__DRI_SWRAST
 "DRI_SWRa°"

	)

625 
	#__DRI_SWRAST_VERSION
 1

	)

627 
	s__DRIswø°Exãnsi⁄Rec
 {

628 
__DRIexãnsi⁄
 
	mba£
;

630 
	m__DRIs¸ìn
 *(*
	m¸óãNewS¸ìn
)(
	ms¸ìn
,

631 c⁄° 
__DRIexãnsi⁄
 **
	mexãnsi⁄s
,

632 c⁄° 
__DRIc⁄fig
 ***
	mdrivî_c⁄figs
,

633 *
	mlﬂdîPriv©e
);

635 
	m__DRIdøwabÀ
 *(*
	m¸óãNewDøwabÀ
)(
__DRIs¸ìn
 *
	ms¸ìn
,

636 c⁄° 
__DRIc⁄fig
 *
	mc⁄fig
,

637 *
	mlﬂdîPriv©e
);

643 
	#__DRI_BUFFER_FRONT_LEFT
 0

	)

644 
	#__DRI_BUFFER_BACK_LEFT
 1

	)

645 
	#__DRI_BUFFER_FRONT_RIGHT
 2

	)

646 
	#__DRI_BUFFER_BACK_RIGHT
 3

	)

647 
	#__DRI_BUFFER_DEPTH
 4

	)

648 
	#__DRI_BUFFER_STENCIL
 5

	)

649 
	#__DRI_BUFFER_ACCUM
 6

	)

650 
	#__DRI_BUFFER_FAKE_FRONT_LEFT
 7

	)

651 
	#__DRI_BUFFER_FAKE_FRONT_RIGHT
 8

	)

652 
	#__DRI_BUFFER_DEPTH_STENCIL
 9

	)

654 
	s__DRIbuf„rRec
 {

655 
	m©èchmít
;

656 
	m«me
;

657 
	mpôch
;

658 
	m˝p
;

659 
	mÊags
;

662 
	#__DRI_DRI2_LOADER
 "DRI_DRI2Lﬂdî"

	)

663 
	#__DRI_DRI2_LOADER_VERSION
 3

	)

664 
	s__DRIdri2LﬂdîExãnsi⁄Rec
 {

665 
__DRIexãnsi⁄
 
	mba£
;

667 
	m__DRIbuf„r
 *(*
	mgëBuf„rs
)(
__DRIdøwabÀ
 *
	mdriDøwabÀ
,

668 *
	mwidth
, *
	mheight
,

669 *
	m©èchmíts
, 
	mcou¡
,

670 *
	mout_cou¡
, *
	mlﬂdîPriv©e
);

683 (*
	mÊushFr⁄tBuf„r
)(
__DRIdøwabÀ
 *
	mdriDøwabÀ
, *
	mlﬂdîPriv©e
);

705 
	m__DRIbuf„r
 *(*
	mgëBuf„rsWôhF‹m©
)(
__DRIdøwabÀ
 *
	mdriDøwabÀ
,

706 *
	mwidth
, *
	mheight
,

707 *
	m©èchmíts
, 
	mcou¡
,

708 *
	mout_cou¡
, *
	mlﬂdîPriv©e
);

715 
	#__DRI_DRI2
 "DRI_DRI2"

	)

716 
	#__DRI_DRI2_VERSION
 1

	)

718 
	s__DRIdri2Exãnsi⁄Rec
 {

719 
__DRIexãnsi⁄
 
	mba£
;

721 
	m__DRIs¸ìn
 *(*
	m¸óãNewS¸ìn
)(
	ms¸ìn
, 
	mfd
,

722 c⁄° 
__DRIexãnsi⁄
 **
	mexãnsi⁄s
,

723 c⁄° 
__DRIc⁄fig
 ***
	mdrivî_c⁄figs
,

724 *
	mlﬂdîPriv©e
);

726 
	m__DRIdøwabÀ
 *(*
	m¸óãNewDøwabÀ
)(
__DRIs¸ìn
 *
	ms¸ìn
,

727 c⁄° 
__DRIc⁄fig
 *
	mc⁄fig
,

728 *
	mlﬂdîPriv©e
);

730 
	m__DRIc⁄ãxt
 *(*
	m¸óãNewC⁄ãxt
)(
__DRIs¸ìn
 *
	ms¸ìn
,

731 c⁄° 
__DRIc⁄fig
 *
	mc⁄fig
,

732 
__DRIc⁄ãxt
 *
	msh¨ed
,

733 *
	mlﬂdîPriv©e
);

	@shared/GLee.c

36 #ifde‡
_MSC_VER


37 #¥agm®
›timize
–"g", 
off
 )

40 
	~<°dio.h
>

41 
	~<°dlib.h
>

42 
	~<°rög.h
>

43 
	~"GLì.h
"

45 #i‡
deföed
(
__APPLE__
Ë|| deföed(
__APPLE_CC__
)

46 
	~<C¨b⁄/C¨b⁄.h
>

49 
	$GLuöt
(*
	tGLEE_LINK_FUNCTION
)();

51 
GLboﬁón
 
__GLìInôed
=
GL_FALSE
;

53 #i‚de‡
_WIN32


54 
	#__°dˇŒ


	)

57 * 
	$__GLìGëProcAddªss
(c⁄° *
exäame
)

59 #ifde‡
WIN32


60  (*)
	`wglGëProcAddªss
(
exäame
);

61 #ñi‡
	`deföed
(
__APPLE__
Ë|| deföed(
__APPLE_CC__
)

62 
CFBundÀRef
 
bundÀ
;

63 
CFURLRef
 
bundÀURL
 = 
	`CFURLCª©eWôhFûeSy°emP©h
(
kCFAŒoˇt‹DeÁu…
, 
	`CFSTR
("/Sy°em/Libøry/Fømew‹ks/O≥nGL.‰amew‹k"), 
kCFURLPOSIXP©hStyÀ
, 
åue
);

65 
CFSåögRef
 
fun˘i⁄Name
 = 
	`CFSåögCª©eWôhCSåög
(
kCFAŒoˇt‹DeÁu…
, 
exäame
, 
kCFSåögEncodögASCII
);

67 *
fun˘i⁄
;

69 
bundÀ
 = 
	`CFBundÀCª©e
(
kCFAŒoˇt‹DeÁu…
, 
bundÀURL
);

70 
	`as£π
(
bundÀ
 !
NULL
);

72 
fun˘i⁄
 = 
	`CFBundÀGëFun˘i⁄PoöãrF‹Name
(
bundÀ
, 
fun˘i⁄Name
);

74 
	`CFRñó£
(
bundÀURL
);

75 
	`CFRñó£
(
fun˘i⁄Name
);

76 
	`CFRñó£
(
bundÀ
);

78  
fun˘i⁄
;

80  (*)
	`glXGëProcAddªssARB
((c⁄° 
GLubyã
 *)
exäame
);

82 
	}
}

89 
GLboﬁón
 
	g_GLEE_VERSION_1_2
 = 
GL_FALSE
;

90 
GLboﬁón
 
	g_GLEE_ARB_imagög
 = 
GL_FALSE
;

91 
GLboﬁón
 
	g_GLEE_VERSION_1_3
 = 
GL_FALSE
;

92 
GLboﬁón
 
	g_GLEE_VERSION_1_4
 = 
GL_FALSE
;

93 
GLboﬁón
 
	g_GLEE_VERSION_1_5
 = 
GL_FALSE
;

94 
GLboﬁón
 
	g_GLEE_VERSION_2_0
 = 
GL_FALSE
;

95 
GLboﬁón
 
	g_GLEE_VERSION_2_1
 = 
GL_FALSE
;

96 
GLboﬁón
 
	g_GLEE_ARB_mu…ôextuª
 = 
GL_FALSE
;

97 
GLboﬁón
 
	g_GLEE_ARB_å™•o£_m©rix
 = 
GL_FALSE
;

98 
GLboﬁón
 
	g_GLEE_ARB_mu…ißm∂e
 = 
GL_FALSE
;

99 
GLboﬁón
 
	g_GLEE_ARB_ãxtuª_ív_add
 = 
GL_FALSE
;

100 
GLboﬁón
 
	g_GLEE_ARB_ãxtuª_cube_m≠
 = 
GL_FALSE
;

101 
GLboﬁón
 
	g_GLEE_ARB_ãxtuª_com¥essi⁄
 = 
GL_FALSE
;

102 
GLboﬁón
 
	g_GLEE_ARB_ãxtuª_b‹dî_˛amp
 = 
GL_FALSE
;

103 
GLboﬁón
 
	g_GLEE_ARB_poöt_∑ømëîs
 = 
GL_FALSE
;

104 
GLboﬁón
 
	g_GLEE_ARB_vîãx_bÀnd
 = 
GL_FALSE
;

105 
GLboﬁón
 
	g_GLEE_ARB_m©rix_∑Àâe
 = 
GL_FALSE
;

106 
GLboﬁón
 
	g_GLEE_ARB_ãxtuª_ív_comböe
 = 
GL_FALSE
;

107 
GLboﬁón
 
	g_GLEE_ARB_ãxtuª_ív_¸ossb¨
 = 
GL_FALSE
;

108 
GLboﬁón
 
	g_GLEE_ARB_ãxtuª_ív_dŸ3
 = 
GL_FALSE
;

109 
GLboﬁón
 
	g_GLEE_ARB_ãxtuª_múr‹ed_ª≥©
 = 
GL_FALSE
;

110 
GLboﬁón
 
	g_GLEE_ARB_dïth_ãxtuª
 = 
GL_FALSE
;

111 
GLboﬁón
 
	g_GLEE_ARB_shadow
 = 
GL_FALSE
;

112 
GLboﬁón
 
	g_GLEE_ARB_shadow_ambõ¡
 = 
GL_FALSE
;

113 
GLboﬁón
 
	g_GLEE_ARB_wödow_pos
 = 
GL_FALSE
;

114 
GLboﬁón
 
	g_GLEE_ARB_vîãx_¥ogøm
 = 
GL_FALSE
;

115 
GLboﬁón
 
	g_GLEE_ARB_‰agmít_¥ogøm
 = 
GL_FALSE
;

116 
GLboﬁón
 
	g_GLEE_ARB_vîãx_buf„r_obje˘
 = 
GL_FALSE
;

117 
GLboﬁón
 
	g_GLEE_ARB_oc˛usi⁄_quîy
 = 
GL_FALSE
;

118 
GLboﬁón
 
	g_GLEE_ARB_shadî_obje˘s
 = 
GL_FALSE
;

119 
GLboﬁón
 
	g_GLEE_ARB_vîãx_shadî
 = 
GL_FALSE
;

120 
GLboﬁón
 
	g_GLEE_ARB_‰agmít_shadî
 = 
GL_FALSE
;

121 
GLboﬁón
 
	g_GLEE_ARB_shadög_œnguage_100
 = 
GL_FALSE
;

122 
GLboﬁón
 
	g_GLEE_ARB_ãxtuª_n⁄_powî_of_two
 = 
GL_FALSE
;

123 
GLboﬁón
 
	g_GLEE_ARB_poöt_•rôe
 = 
GL_FALSE
;

124 
GLboﬁón
 
	g_GLEE_ARB_‰agmít_¥ogøm_shadow
 = 
GL_FALSE
;

125 
GLboﬁón
 
	g_GLEE_ARB_døw_buf„rs
 = 
GL_FALSE
;

126 
GLboﬁón
 
	g_GLEE_ARB_ãxtuª_ª˘™gÀ
 = 
GL_FALSE
;

127 
GLboﬁón
 
	g_GLEE_ARB_cﬁ‹_buf„r_Êﬂt
 = 
GL_FALSE
;

128 
GLboﬁón
 
	g_GLEE_ARB_hÆf_Êﬂt_pixñ
 = 
GL_FALSE
;

129 
GLboﬁón
 
	g_GLEE_ARB_ãxtuª_Êﬂt
 = 
GL_FALSE
;

130 
GLboﬁón
 
	g_GLEE_ARB_pixñ_buf„r_obje˘
 = 
GL_FALSE
;

131 
GLboﬁón
 
	g_GLEE_EXT_abgr
 = 
GL_FALSE
;

132 
GLboﬁón
 
	g_GLEE_EXT_bÀnd_cﬁ‹
 = 
GL_FALSE
;

133 
GLboﬁón
 
	g_GLEE_EXT_pﬁyg⁄_off£t
 = 
GL_FALSE
;

134 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª
 = 
GL_FALSE
;

135 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª3D
 = 
GL_FALSE
;

136 
GLboﬁón
 
	g_GLEE_SGIS_ãxtuª_fûãr4
 = 
GL_FALSE
;

137 
GLboﬁón
 
	g_GLEE_EXT_subãxtuª
 = 
GL_FALSE
;

138 
GLboﬁón
 
	g_GLEE_EXT_c›y_ãxtuª
 = 
GL_FALSE
;

139 
GLboﬁón
 
	g_GLEE_EXT_hi°ogøm
 = 
GL_FALSE
;

140 
GLboﬁón
 
	g_GLEE_EXT_c⁄vﬁuti⁄
 = 
GL_FALSE
;

141 
GLboﬁón
 
	g_GLEE_SGI_cﬁ‹_m©rix
 = 
GL_FALSE
;

142 
GLboﬁón
 
	g_GLEE_SGI_cﬁ‹_èbÀ
 = 
GL_FALSE
;

143 
GLboﬁón
 
	g_GLEE_SGIS_pixñ_ãxtuª
 = 
GL_FALSE
;

144 
GLboﬁón
 
	g_GLEE_SGIX_pixñ_ãxtuª
 = 
GL_FALSE
;

145 
GLboﬁón
 
	g_GLEE_SGIS_ãxtuª4D
 = 
GL_FALSE
;

146 
GLboﬁón
 
	g_GLEE_SGI_ãxtuª_cﬁ‹_èbÀ
 = 
GL_FALSE
;

147 
GLboﬁón
 
	g_GLEE_EXT_cmyka
 = 
GL_FALSE
;

148 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_obje˘
 = 
GL_FALSE
;

149 
GLboﬁón
 
	g_GLEE_SGIS_dëaû_ãxtuª
 = 
GL_FALSE
;

150 
GLboﬁón
 
	g_GLEE_SGIS_sh¨≥n_ãxtuª
 = 
GL_FALSE
;

151 
GLboﬁón
 
	g_GLEE_EXT_∑cked_pixñs
 = 
GL_FALSE
;

152 
GLboﬁón
 
	g_GLEE_SGIS_ãxtuª_lod
 = 
GL_FALSE
;

153 
GLboﬁón
 
	g_GLEE_SGIS_mu…ißm∂e
 = 
GL_FALSE
;

154 
GLboﬁón
 
	g_GLEE_EXT_ªsˇÀ_n‹mÆ
 = 
GL_FALSE
;

155 
GLboﬁón
 
	g_GLEE_EXT_vîãx_¨øy
 = 
GL_FALSE
;

156 
GLboﬁón
 
	g_GLEE_EXT_misc_©åibuã
 = 
GL_FALSE
;

157 
GLboﬁón
 
	g_GLEE_SGIS_gíî©e_mùm≠
 = 
GL_FALSE
;

158 
GLboﬁón
 
	g_GLEE_SGIX_˛ùm≠
 = 
GL_FALSE
;

159 
GLboﬁón
 
	g_GLEE_SGIX_shadow
 = 
GL_FALSE
;

160 
GLboﬁón
 
	g_GLEE_SGIS_ãxtuª_edge_˛amp
 = 
GL_FALSE
;

161 
GLboﬁón
 
	g_GLEE_SGIS_ãxtuª_b‹dî_˛amp
 = 
GL_FALSE
;

162 
GLboﬁón
 
	g_GLEE_EXT_bÀnd_mömax
 = 
GL_FALSE
;

163 
GLboﬁón
 
	g_GLEE_EXT_bÀnd_subåa˘
 = 
GL_FALSE
;

164 
GLboﬁón
 
	g_GLEE_EXT_bÀnd_logic_›
 = 
GL_FALSE
;

165 
GLboﬁón
 
	g_GLEE_SGIX_öãæa˚
 = 
GL_FALSE
;

166 
GLboﬁón
 
	g_GLEE_SGIX_pixñ_tûes
 = 
GL_FALSE
;

167 
GLboﬁón
 
	g_GLEE_SGIS_ãxtuª_£À˘
 = 
GL_FALSE
;

168 
GLboﬁón
 
	g_GLEE_SGIX_•rôe
 = 
GL_FALSE
;

169 
GLboﬁón
 
	g_GLEE_SGIX_ãxtuª_mu…i_buf„r
 = 
GL_FALSE
;

170 
GLboﬁón
 
	g_GLEE_EXT_poöt_∑ømëîs
 = 
GL_FALSE
;

171 
GLboﬁón
 
	g_GLEE_SGIS_poöt_∑ømëîs
 = 
GL_FALSE
;

172 
GLboﬁón
 
	g_GLEE_SGIX_ö°rumíts
 = 
GL_FALSE
;

173 
GLboﬁón
 
	g_GLEE_SGIX_ãxtuª_sˇÀ_büs
 = 
GL_FALSE
;

174 
GLboﬁón
 
	g_GLEE_SGIX_‰amezoom
 = 
GL_FALSE
;

175 
GLboﬁón
 
	g_GLEE_SGIX_èg_ßm∂e_buf„r
 = 
GL_FALSE
;

176 
GLboﬁón
 
	g_GLEE_FfdMaskSGIX
 = 
GL_FALSE
;

177 
GLboﬁón
 
	g_GLEE_SGIX_pﬁynomül_ffd
 = 
GL_FALSE
;

178 
GLboﬁón
 
	g_GLEE_SGIX_ª„ªn˚_∂™e
 = 
GL_FALSE
;

179 
GLboﬁón
 
	g_GLEE_SGIX_Êush_ø°î
 = 
GL_FALSE
;

180 
GLboﬁón
 
	g_GLEE_SGIX_dïth_ãxtuª
 = 
GL_FALSE
;

181 
GLboﬁón
 
	g_GLEE_SGIS_fog_fun˘i⁄
 = 
GL_FALSE
;

182 
GLboﬁón
 
	g_GLEE_SGIX_fog_off£t
 = 
GL_FALSE
;

183 
GLboﬁón
 
	g_GLEE_HP_image_å™sf‹m
 = 
GL_FALSE
;

184 
GLboﬁón
 
	g_GLEE_HP_c⁄vﬁuti⁄_b‹dî_modes
 = 
GL_FALSE
;

185 
GLboﬁón
 
	g_GLEE_INGR_∑Àâe_buf„r
 = 
GL_FALSE
;

186 
GLboﬁón
 
	g_GLEE_SGIX_ãxtuª_add_ív
 = 
GL_FALSE
;

187 
GLboﬁón
 
	g_GLEE_EXT_cﬁ‹_subèbÀ
 = 
GL_FALSE
;

188 
GLboﬁón
 
	g_GLEE_PGI_vîãx_höts
 = 
GL_FALSE
;

189 
GLboﬁón
 
	g_GLEE_PGI_misc_höts
 = 
GL_FALSE
;

190 
GLboﬁón
 
	g_GLEE_EXT_∑Àâed_ãxtuª
 = 
GL_FALSE
;

191 
GLboﬁón
 
	g_GLEE_EXT_˛ù_vﬁume_höt
 = 
GL_FALSE
;

192 
GLboﬁón
 
	g_GLEE_SGIX_li°_¥i‹ôy
 = 
GL_FALSE
;

193 
GLboﬁón
 
	g_GLEE_SGIX_ú_ö°rumít1
 = 
GL_FALSE
;

194 
GLboﬁón
 
	g_GLEE_SGIX_ˇŒigøphic_‰agmít
 = 
GL_FALSE
;

195 
GLboﬁón
 
	g_GLEE_SGIX_ãxtuª_lod_büs
 = 
GL_FALSE
;

196 
GLboﬁón
 
	g_GLEE_SGIX_shadow_ambõ¡
 = 
GL_FALSE
;

197 
GLboﬁón
 
	g_GLEE_EXT_ödex_ãxtuª
 = 
GL_FALSE
;

198 
GLboﬁón
 
	g_GLEE_EXT_ödex_m©îül
 = 
GL_FALSE
;

199 
GLboﬁón
 
	g_GLEE_EXT_ödex_func
 = 
GL_FALSE
;

200 
GLboﬁón
 
	g_GLEE_EXT_ödex_¨øy_f‹m©s
 = 
GL_FALSE
;

201 
GLboﬁón
 
	g_GLEE_EXT_compûed_vîãx_¨øy
 = 
GL_FALSE
;

202 
GLboﬁón
 
	g_GLEE_EXT_cuŒ_vîãx
 = 
GL_FALSE
;

203 
GLboﬁón
 
	g_GLEE_SGIX_y¸cb
 = 
GL_FALSE
;

204 
GLboﬁón
 
	g_GLEE_SGIX_‰agmít_lightög
 = 
GL_FALSE
;

205 
GLboﬁón
 
	g_GLEE_IBM_ø°îpos_˛ù
 = 
GL_FALSE
;

206 
GLboﬁón
 
	g_GLEE_HP_ãxtuª_lightög
 = 
GL_FALSE
;

207 
GLboﬁón
 
	g_GLEE_EXT_døw_ønge_ñemíts
 = 
GL_FALSE
;

208 
GLboﬁón
 
	g_GLEE_WIN_ph⁄g_shadög
 = 
GL_FALSE
;

209 
GLboﬁón
 
	g_GLEE_WIN_•ecuœr_fog
 = 
GL_FALSE
;

210 
GLboﬁón
 
	g_GLEE_EXT_light_ãxtuª
 = 
GL_FALSE
;

211 
GLboﬁón
 
	g_GLEE_SGIX_bÀnd_Æpha_mömax
 = 
GL_FALSE
;

212 
GLboﬁón
 
	g_GLEE_SGIX_im∑˘_pixñ_ãxtuª
 = 
GL_FALSE
;

213 
GLboﬁón
 
	g_GLEE_EXT_bgø
 = 
GL_FALSE
;

214 
GLboﬁón
 
	g_GLEE_SGIX_async
 = 
GL_FALSE
;

215 
GLboﬁón
 
	g_GLEE_SGIX_async_pixñ
 = 
GL_FALSE
;

216 
GLboﬁón
 
	g_GLEE_SGIX_async_hi°ogøm
 = 
GL_FALSE
;

217 
GLboﬁón
 
	g_GLEE_INTEL_ãxtuª_sciss‹
 = 
GL_FALSE
;

218 
GLboﬁón
 
	g_GLEE_INTEL_∑øŒñ_¨øys
 = 
GL_FALSE
;

219 
GLboﬁón
 
	g_GLEE_HP_oc˛usi⁄_ã°
 = 
GL_FALSE
;

220 
GLboﬁón
 
	g_GLEE_EXT_pixñ_å™sf‹m
 = 
GL_FALSE
;

221 
GLboﬁón
 
	g_GLEE_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ
 = 
GL_FALSE
;

222 
GLboﬁón
 
	g_GLEE_EXT_sh¨ed_ãxtuª_∑Àâe
 = 
GL_FALSE
;

223 
GLboﬁón
 
	g_GLEE_EXT_£∑øã_•ecuœr_cﬁ‹
 = 
GL_FALSE
;

224 
GLboﬁón
 
	g_GLEE_EXT_£c⁄d¨y_cﬁ‹
 = 
GL_FALSE
;

225 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_≥πurb_n‹mÆ
 = 
GL_FALSE
;

226 
GLboﬁón
 
	g_GLEE_EXT_mu…i_døw_¨øys
 = 
GL_FALSE
;

227 
GLboﬁón
 
	g_GLEE_EXT_fog_co‹d
 = 
GL_FALSE
;

228 
GLboﬁón
 
	g_GLEE_REND_s¸ìn_co‹dö©es
 = 
GL_FALSE
;

229 
GLboﬁón
 
	g_GLEE_EXT_co‹dö©e_‰ame
 = 
GL_FALSE
;

230 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_ív_comböe
 = 
GL_FALSE
;

231 
GLboﬁón
 
	g_GLEE_APPLE_•ecuœr_ve˘‹
 = 
GL_FALSE
;

232 
GLboﬁón
 
	g_GLEE_APPLE_å™sf‹m_höt
 = 
GL_FALSE
;

233 
GLboﬁón
 
	g_GLEE_SGIX_fog_sˇÀ
 = 
GL_FALSE
;

234 
GLboﬁón
 
	g_GLEE_SUNX_c⁄°™t_d©a
 = 
GL_FALSE
;

235 
GLboﬁón
 
	g_GLEE_SUN_globÆ_Æpha
 = 
GL_FALSE
;

236 
GLboﬁón
 
	g_GLEE_SUN_åüngÀ_li°
 = 
GL_FALSE
;

237 
GLboﬁón
 
	g_GLEE_SUN_vîãx
 = 
GL_FALSE
;

238 
GLboﬁón
 
	g_GLEE_EXT_bÀnd_func_£∑øã
 = 
GL_FALSE
;

239 
GLboﬁón
 
	g_GLEE_INGR_cﬁ‹_˛amp
 = 
GL_FALSE
;

240 
GLboﬁón
 
	g_GLEE_INGR_öãæa˚_ªad
 = 
GL_FALSE
;

241 
GLboﬁón
 
	g_GLEE_EXT_°ícû_wøp
 = 
GL_FALSE
;

242 
GLboﬁón
 
	g_GLEE_EXT_422_pixñs
 = 
GL_FALSE
;

243 
GLboﬁón
 
	g_GLEE_NV_ãxgí_ªÊe˘i⁄
 = 
GL_FALSE
;

244 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_cube_m≠
 = 
GL_FALSE
;

245 
GLboﬁón
 
	g_GLEE_SUN_c⁄vﬁuti⁄_b‹dî_modes
 = 
GL_FALSE
;

246 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_ív_add
 = 
GL_FALSE
;

247 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_lod_büs
 = 
GL_FALSE
;

248 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_fûãr_™isŸr›ic
 = 
GL_FALSE
;

249 
GLboﬁón
 
	g_GLEE_EXT_vîãx_weightög
 = 
GL_FALSE
;

250 
GLboﬁón
 
	g_GLEE_NV_light_max_exp⁄ít
 = 
GL_FALSE
;

251 
GLboﬁón
 
	g_GLEE_NV_vîãx_¨øy_ønge
 = 
GL_FALSE
;

252 
GLboﬁón
 
	g_GLEE_NV_ªgi°î_comböîs
 = 
GL_FALSE
;

253 
GLboﬁón
 
	g_GLEE_NV_fog_di°™˚
 = 
GL_FALSE
;

254 
GLboﬁón
 
	g_GLEE_NV_ãxgí_emboss
 = 
GL_FALSE
;

255 
GLboﬁón
 
	g_GLEE_NV_bÀnd_squ¨e
 = 
GL_FALSE
;

256 
GLboﬁón
 
	g_GLEE_NV_ãxtuª_ív_comböe4
 = 
GL_FALSE
;

257 
GLboﬁón
 
	g_GLEE_MESA_ªsize_buf„rs
 = 
GL_FALSE
;

258 
GLboﬁón
 
	g_GLEE_MESA_wödow_pos
 = 
GL_FALSE
;

259 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_com¥essi⁄_s3tc
 = 
GL_FALSE
;

260 
GLboﬁón
 
	g_GLEE_IBM_cuŒ_vîãx
 = 
GL_FALSE
;

261 
GLboﬁón
 
	g_GLEE_IBM_mu…imode_døw_¨øys
 = 
GL_FALSE
;

262 
GLboﬁón
 
	g_GLEE_IBM_vîãx_¨øy_li°s
 = 
GL_FALSE
;

263 
GLboﬁón
 
	g_GLEE_SGIX_subßm∂e
 = 
GL_FALSE
;

264 
GLboﬁón
 
	g_GLEE_SGIX_y¸cb_subßm∂e
 = 
GL_FALSE
;

265 
GLboﬁón
 
	g_GLEE_SGIX_y¸cba
 = 
GL_FALSE
;

266 
GLboﬁón
 
	g_GLEE_SGI_dïth_∑ss_ö°rumít
 = 
GL_FALSE
;

267 
GLboﬁón
 
	g_GLEE_3DFX_ãxtuª_com¥essi⁄_FXT1
 = 
GL_FALSE
;

268 
GLboﬁón
 
	g_GLEE_3DFX_mu…ißm∂e
 = 
GL_FALSE
;

269 
GLboﬁón
 
	g_GLEE_3DFX_tbuf„r
 = 
GL_FALSE
;

270 
GLboﬁón
 
	g_GLEE_EXT_mu…ißm∂e
 = 
GL_FALSE
;

271 
GLboﬁón
 
	g_GLEE_SGIX_vîãx_¥e˛ù
 = 
GL_FALSE
;

272 
GLboﬁón
 
	g_GLEE_SGIX_c⁄vﬁuti⁄_accuøcy
 = 
GL_FALSE
;

273 
GLboﬁón
 
	g_GLEE_SGIX_ªßm∂e
 = 
GL_FALSE
;

274 
GLboﬁón
 
	g_GLEE_SGIS_poöt_löe_ãxgí
 = 
GL_FALSE
;

275 
GLboﬁón
 
	g_GLEE_SGIS_ãxtuª_cﬁ‹_mask
 = 
GL_FALSE
;

276 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_ív_dŸ3
 = 
GL_FALSE
;

277 
GLboﬁón
 
	g_GLEE_ATI_ãxtuª_múr‹_⁄˚
 = 
GL_FALSE
;

278 
GLboﬁón
 
	g_GLEE_NV_„n˚
 = 
GL_FALSE
;

279 
GLboﬁón
 
	g_GLEE_IBM_ãxtuª_múr‹ed_ª≥©
 = 
GL_FALSE
;

280 
GLboﬁón
 
	g_GLEE_NV_evÆu©‹s
 = 
GL_FALSE
;

281 
GLboﬁón
 
	g_GLEE_NV_∑cked_dïth_°ícû
 = 
GL_FALSE
;

282 
GLboﬁón
 
	g_GLEE_NV_ªgi°î_comböîs2
 = 
GL_FALSE
;

283 
GLboﬁón
 
	g_GLEE_NV_ãxtuª_com¥essi⁄_vtc
 = 
GL_FALSE
;

284 
GLboﬁón
 
	g_GLEE_NV_ãxtuª_ª˘™gÀ
 = 
GL_FALSE
;

285 
GLboﬁón
 
	g_GLEE_NV_ãxtuª_shadî
 = 
GL_FALSE
;

286 
GLboﬁón
 
	g_GLEE_NV_ãxtuª_shadî2
 = 
GL_FALSE
;

287 
GLboﬁón
 
	g_GLEE_NV_vîãx_¨øy_ønge2
 = 
GL_FALSE
;

288 
GLboﬁón
 
	g_GLEE_NV_vîãx_¥ogøm
 = 
GL_FALSE
;

289 
GLboﬁón
 
	g_GLEE_SGIX_ãxtuª_co‹dö©e_˛amp
 = 
GL_FALSE
;

290 
GLboﬁón
 
	g_GLEE_SGIX_sˇÀbüs_höt
 = 
GL_FALSE
;

291 
GLboﬁón
 
	g_GLEE_OML_öãæa˚
 = 
GL_FALSE
;

292 
GLboﬁón
 
	g_GLEE_OML_subßm∂e
 = 
GL_FALSE
;

293 
GLboﬁón
 
	g_GLEE_OML_ªßm∂e
 = 
GL_FALSE
;

294 
GLboﬁón
 
	g_GLEE_NV_c›y_dïth_to_cﬁ‹
 = 
GL_FALSE
;

295 
GLboﬁón
 
	g_GLEE_ATI_ívm≠_bumpm≠
 = 
GL_FALSE
;

296 
GLboﬁón
 
	g_GLEE_ATI_‰agmít_shadî
 = 
GL_FALSE
;

297 
GLboﬁón
 
	g_GLEE_ATI_≤_åüngÀs
 = 
GL_FALSE
;

298 
GLboﬁón
 
	g_GLEE_ATI_vîãx_¨øy_obje˘
 = 
GL_FALSE
;

299 
GLboﬁón
 
	g_GLEE_EXT_vîãx_shadî
 = 
GL_FALSE
;

300 
GLboﬁón
 
	g_GLEE_ATI_vîãx_°ªams
 = 
GL_FALSE
;

301 
GLboﬁón
 
	g_GLEE_ATI_ñemít_¨øy
 = 
GL_FALSE
;

302 
GLboﬁón
 
	g_GLEE_SUN_mesh_¨øy
 = 
GL_FALSE
;

303 
GLboﬁón
 
	g_GLEE_SUN_¶i˚_accum
 = 
GL_FALSE
;

304 
GLboﬁón
 
	g_GLEE_NV_mu…ißm∂e_fûãr_höt
 = 
GL_FALSE
;

305 
GLboﬁón
 
	g_GLEE_NV_dïth_˛amp
 = 
GL_FALSE
;

306 
GLboﬁón
 
	g_GLEE_NV_oc˛usi⁄_quîy
 = 
GL_FALSE
;

307 
GLboﬁón
 
	g_GLEE_NV_poöt_•rôe
 = 
GL_FALSE
;

308 
GLboﬁón
 
	g_GLEE_NV_ãxtuª_shadî3
 = 
GL_FALSE
;

309 
GLboﬁón
 
	g_GLEE_NV_vîãx_¥ogøm1_1
 = 
GL_FALSE
;

310 
GLboﬁón
 
	g_GLEE_EXT_shadow_funcs
 = 
GL_FALSE
;

311 
GLboﬁón
 
	g_GLEE_EXT_°ícû_two_side
 = 
GL_FALSE
;

312 
GLboﬁón
 
	g_GLEE_ATI_ãxt_‰agmít_shadî
 = 
GL_FALSE
;

313 
GLboﬁón
 
	g_GLEE_APPLE_˛õ¡_°‹age
 = 
GL_FALSE
;

314 
GLboﬁón
 
	g_GLEE_APPLE_ñemít_¨øy
 = 
GL_FALSE
;

315 
GLboﬁón
 
	g_GLEE_APPLE_„n˚
 = 
GL_FALSE
;

316 
GLboﬁón
 
	g_GLEE_APPLE_vîãx_¨øy_obje˘
 = 
GL_FALSE
;

317 
GLboﬁón
 
	g_GLEE_APPLE_vîãx_¨øy_ønge
 = 
GL_FALSE
;

318 
GLboﬁón
 
	g_GLEE_APPLE_ycb¸_422
 = 
GL_FALSE
;

319 
GLboﬁón
 
	g_GLEE_S3_s3tc
 = 
GL_FALSE
;

320 
GLboﬁón
 
	g_GLEE_ATI_døw_buf„rs
 = 
GL_FALSE
;

321 
GLboﬁón
 
	g_GLEE_ATI_pixñ_f‹m©_Êﬂt
 = 
GL_FALSE
;

322 
GLboﬁón
 
	g_GLEE_ATI_ãxtuª_ív_comböe3
 = 
GL_FALSE
;

323 
GLboﬁón
 
	g_GLEE_ATI_ãxtuª_Êﬂt
 = 
GL_FALSE
;

324 
GLboﬁón
 
	g_GLEE_NV_Êﬂt_buf„r
 = 
GL_FALSE
;

325 
GLboﬁón
 
	g_GLEE_NV_‰agmít_¥ogøm
 = 
GL_FALSE
;

326 
GLboﬁón
 
	g_GLEE_NV_hÆf_Êﬂt
 = 
GL_FALSE
;

327 
GLboﬁón
 
	g_GLEE_NV_pixñ_d©a_ønge
 = 
GL_FALSE
;

328 
GLboﬁón
 
	g_GLEE_NV_¥imôive_ª°¨t
 = 
GL_FALSE
;

329 
GLboﬁón
 
	g_GLEE_NV_ãxtuª_ex∑nd_n‹mÆ
 = 
GL_FALSE
;

330 
GLboﬁón
 
	g_GLEE_NV_vîãx_¥ogøm2
 = 
GL_FALSE
;

331 
GLboﬁón
 
	g_GLEE_ATI_m≠_obje˘_buf„r
 = 
GL_FALSE
;

332 
GLboﬁón
 
	g_GLEE_ATI_£∑øã_°ícû
 = 
GL_FALSE
;

333 
GLboﬁón
 
	g_GLEE_ATI_vîãx_©åib_¨øy_obje˘
 = 
GL_FALSE
;

334 
GLboﬁón
 
	g_GLEE_OES_ªad_f‹m©
 = 
GL_FALSE
;

335 
GLboﬁón
 
	g_GLEE_EXT_dïth_bounds_ã°
 = 
GL_FALSE
;

336 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_múr‹_˛amp
 = 
GL_FALSE
;

337 
GLboﬁón
 
	g_GLEE_EXT_bÀnd_equ©i⁄_£∑øã
 = 
GL_FALSE
;

338 
GLboﬁón
 
	g_GLEE_MESA_∑ck_övît
 = 
GL_FALSE
;

339 
GLboﬁón
 
	g_GLEE_MESA_ycb¸_ãxtuª
 = 
GL_FALSE
;

340 
GLboﬁón
 
	g_GLEE_EXT_pixñ_buf„r_obje˘
 = 
GL_FALSE
;

341 
GLboﬁón
 
	g_GLEE_NV_‰agmít_¥ogøm_›ti⁄
 = 
GL_FALSE
;

342 
GLboﬁón
 
	g_GLEE_NV_‰agmít_¥ogøm2
 = 
GL_FALSE
;

343 
GLboﬁón
 
	g_GLEE_NV_vîãx_¥ogøm2_›ti⁄
 = 
GL_FALSE
;

344 
GLboﬁón
 
	g_GLEE_NV_vîãx_¥ogøm3
 = 
GL_FALSE
;

345 
GLboﬁón
 
	g_GLEE_EXT_‰amebuf„r_obje˘
 = 
GL_FALSE
;

346 
GLboﬁón
 
	g_GLEE_GREMEDY_°rög_m¨kî
 = 
GL_FALSE
;

347 
GLboﬁón
 
	g_GLEE_EXT_Cg_shadî
 = 
GL_FALSE
;

348 
GLboﬁón
 
	g_GLEE_EXT_timî_quîy
 = 
GL_FALSE
;

349 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_buf„r_obje˘
 = 
GL_FALSE
;

350 
GLboﬁón
 
	g_GLEE_EXT_gpu_shadî4
 = 
GL_FALSE
;

351 
GLboﬁón
 
	g_GLEE_EXT_geomëry_shadî4
 = 
GL_FALSE
;

352 
GLboﬁón
 
	g_GLEE_EXT_bödabÀ_unif‹m
 = 
GL_FALSE
;

353 
GLboﬁón
 
	g_GLEE_EXT_‰amebuf„r_sRGB
 = 
GL_FALSE
;

354 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_sh¨ed_exp⁄ít
 = 
GL_FALSE
;

355 
GLboﬁón
 
	g_GLEE_EXT_∑cked_Êﬂt
 = 
GL_FALSE
;

356 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_¨øy
 = 
GL_FALSE
;

357 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_öãgî
 = 
GL_FALSE
;

358 
GLboﬁón
 
	g_GLEE_NV_dïth_buf„r_Êﬂt
 = 
GL_FALSE
;

359 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_com¥essi⁄_œtc
 = 
GL_FALSE
;

360 
GLboﬁón
 
	g_GLEE_NV_å™sf‹m_„edback
 = 
GL_FALSE
;

361 
GLboﬁón
 
	g_GLEE_NV_geomëry_¥ogøm4
 = 
GL_FALSE
;

362 
GLboﬁón
 
	g_GLEE_NV_gpu_¥ogøm4
 = 
GL_FALSE
;

363 
GLboﬁón
 
	g_GLEE_NV_‰amebuf„r_mu…ißm∂e_covîage
 = 
GL_FALSE
;

364 
GLboﬁón
 
	g_GLEE_EXT_‰amebuf„r_mu…ißm∂e
 = 
GL_FALSE
;

365 
GLboﬁón
 
	g_GLEE_EXT_‰amebuf„r_blô
 = 
GL_FALSE
;

366 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_com¥essi⁄_rgtc
 = 
GL_FALSE
;

367 
GLboﬁón
 
	g_GLEE_EXT_cﬁ‹_m©rix
 = 
GL_FALSE
;

368 
GLboﬁón
 
	g_GLEE_SGIX_ãxtuª_£À˘
 = 
GL_FALSE
;

369 
GLboﬁón
 
	g_GLEE_INGR_bÀnd_func_£∑øã
 = 
GL_FALSE
;

370 
GLboﬁón
 
	g_GLEE_SGIX_dïth_∑ss_ö°rumít
 = 
GL_FALSE
;

371 
GLboﬁón
 
	g_GLEE_SGIX_igloo_öãrÁ˚
 = 
GL_FALSE
;

372 
GLboﬁón
 
	g_GLEE_EXT_døw_buf„rs2
 = 
GL_FALSE
;

373 
GLboﬁón
 
	g_GLEE_NV_∑ømëî_buf„r_obje˘
 = 
GL_FALSE
;

374 
GLboﬁón
 
	g_GLEE_EXT_døw_ö°™˚d
 = 
GL_FALSE
;

375 
GLboﬁón
 
	g_GLEE_EXT_‰agmít_lightög
 = 
GL_FALSE
;

376 
GLboﬁón
 
	g_GLEE_EXT_∑cked_dïth_°ícû
 = 
GL_FALSE
;

377 
GLboﬁón
 
	g_GLEE_EXT_s˚√_m¨kî
 = 
GL_FALSE
;

378 
GLboﬁón
 
	g_GLEE_EXT_°ícû_˛ór_èg
 = 
GL_FALSE
;

379 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_com¥essi⁄_dxt1
 = 
GL_FALSE
;

380 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_ív
 = 
GL_FALSE
;

381 
GLboﬁón
 
	g_GLEE_EXT_ãxtuª_sRGB
 = 
GL_FALSE
;

382 
GLboﬁón
 
	g_GLEE_IBM_°©ic_d©a
 = 
GL_FALSE
;

383 
GLboﬁón
 
	g_GLEE_MESAX_ãxtuª_°ack
 = 
GL_FALSE
;

384 
GLboﬁón
 
	g_GLEE_OES_byã_co‹dö©es
 = 
GL_FALSE
;

385 
GLboﬁón
 
	g_GLEE_OES_com¥es£d_∑Àâed_ãxtuª
 = 
GL_FALSE
;

386 
GLboﬁón
 
	g_GLEE_OES_sögÀ_¥ecisi⁄
 = 
GL_FALSE
;

387 
GLboﬁón
 
	g_GLEE_SGIX_pixñ_ãxtuª_bôs
 = 
GL_FALSE
;

388 
GLboﬁón
 
	g_GLEE_SGIX_ãxtuª_ønge
 = 
GL_FALSE
;

392 
	g__GLìGLExãnsi⁄Names
[300][39]={

694 
	g__GLìGLNumExãnsi⁄s
=300;

698 #ifde‡
__GLEE_GL_VERSION_1_2


699 
__°dˇŒ
 
	$_Lazy_glBÀndCﬁ‹
(
GL˛ampf
 
ªd
, GL˛amp‡
gªí
, GL˛amp‡
blue
, GL˛amp‡
Æpha
Ë{i‡(
	`GLìInô
()Ë
	`glBÀndCﬁ‹
‘ed, gªí, blue,áÕha);
	}
}

700 
__°dˇŒ
 
	$_Lazy_glBÀndEqu©i⁄
(
GLíum
 
mode
Ë{i‡(
	`GLìInô
()Ë
	`glBÀndEqu©i⁄
(mode);
	}
}

701 
__°dˇŒ
 
	$_Lazy_glDøwR™geEÀmíts
(
GLíum
 
mode
, 
GLuöt
 
°¨t
, GLuöà
íd
, 
GLsizei
 
cou¡
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
ödi˚s
Ë{i‡(
	`GLìInô
()Ë
	`glDøwR™geEÀmíts
(mode, sèπ,Énd, cou¡,Åy≥, indi˚s);
	}
}

702 
__°dˇŒ
 
	$_Lazy_glCﬁ‹TabÀ
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
èbÀ
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹TabÀ
—¨gë, i¡î«lf‹m©, width, f‹m©,Åy≥,ÅabÀ);
	}
}

703 
__°dˇŒ
 
	$_Lazy_glCﬁ‹TabÀP¨amëîfv
(
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹TabÀP¨amëîfv
—¨gë,Ö«me,Ö¨ams);
	}
}

704 
__°dˇŒ
 
	$_Lazy_glCﬁ‹TabÀP¨amëîiv
(
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹TabÀP¨amëîiv
—¨gë,Ö«me,Ö¨ams);
	}
}

705 
__°dˇŒ
 
	$_Lazy_glC›yCﬁ‹TabÀ
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
Ë{i‡(
	`GLìInô
()Ë
	`glC›yCﬁ‹TabÀ
—¨gë, i¡î«lf‹m©, x, y, width);
	}
}

706 
__°dˇŒ
 
	$_Lazy_glGëCﬁ‹TabÀ
(
GLíum
 
èrgë
, GLíum 
f‹m©
, GLíum 
ty≥
, 
GLvoid
 * 
èbÀ
Ë{i‡(
	`GLìInô
()Ë
	`glGëCﬁ‹TabÀ
—¨gë, f‹m©,Åy≥,ÅabÀ);
	}
}

707 
__°dˇŒ
 
	$_Lazy_glGëCﬁ‹TabÀP¨amëîfv
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëCﬁ‹TabÀP¨amëîfv
—¨gë,Ö«me,Ö¨ams);
	}
}

708 
__°dˇŒ
 
	$_Lazy_glGëCﬁ‹TabÀP¨amëîiv
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëCﬁ‹TabÀP¨amëîiv
—¨gë,Ö«me,Ö¨ams);
	}
}

709 
__°dˇŒ
 
	$_Lazy_glCﬁ‹SubTabÀ
(
GLíum
 
èrgë
, 
GLsizei
 
°¨t
, GLsizeò
cou¡
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹SubTabÀ
—¨gë, sèπ, cou¡, f‹m©,Åy≥, d©a);
	}
}

710 
__°dˇŒ
 
	$_Lazy_glC›yCﬁ‹SubTabÀ
(
GLíum
 
èrgë
, 
GLsizei
 
°¨t
, 
GLöt
 
x
, GLöà
y
, GLsizeò
width
Ë{i‡(
	`GLìInô
()Ë
	`glC›yCﬁ‹SubTabÀ
—¨gë, sèπ, x, y, width);
	}
}

711 
__°dˇŒ
 
	$_Lazy_glC⁄vﬁuti⁄Fûãr1D
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
image
Ë{i‡(
	`GLìInô
()Ë
	`glC⁄vﬁuti⁄Fûãr1D
—¨gë, i¡î«lf‹m©, width, f‹m©,Åy≥, image);
	}
}

712 
__°dˇŒ
 
	$_Lazy_glC⁄vﬁuti⁄Fûãr2D
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
image
Ë{i‡(
	`GLìInô
()Ë
	`glC⁄vﬁuti⁄Fûãr2D
—¨gë, i¡î«lf‹m©, width, height, f‹m©,Åy≥, image);
	}
}

713 
__°dˇŒ
 
	$_Lazy_glC⁄vﬁuti⁄P¨amëîf
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glC⁄vﬁuti⁄P¨amëîf
—¨gë,Ö«me,Ö¨ams);
	}
}

714 
__°dˇŒ
 
	$_Lazy_glC⁄vﬁuti⁄P¨amëîfv
(
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glC⁄vﬁuti⁄P¨amëîfv
—¨gë,Ö«me,Ö¨ams);
	}
}

715 
__°dˇŒ
 
	$_Lazy_glC⁄vﬁuti⁄P¨amëîi
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glC⁄vﬁuti⁄P¨amëîi
—¨gë,Ö«me,Ö¨ams);
	}
}

716 
__°dˇŒ
 
	$_Lazy_glC⁄vﬁuti⁄P¨amëîiv
(
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glC⁄vﬁuti⁄P¨amëîiv
—¨gë,Ö«me,Ö¨ams);
	}
}

717 
__°dˇŒ
 
	$_Lazy_glC›yC⁄vﬁuti⁄Fûãr1D
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
Ë{i‡(
	`GLìInô
()Ë
	`glC›yC⁄vﬁuti⁄Fûãr1D
—¨gë, i¡î«lf‹m©, x, y, width);
	}
}

718 
__°dˇŒ
 
	$_Lazy_glC›yC⁄vﬁuti⁄Fûãr2D
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
, GLsizeò
height
Ë{i‡(
	`GLìInô
()Ë
	`glC›yC⁄vﬁuti⁄Fûãr2D
—¨gë, i¡î«lf‹m©, x, y, width, height);
	}
}

719 
__°dˇŒ
 
	$_Lazy_glGëC⁄vﬁuti⁄Fûãr
(
GLíum
 
èrgë
, GLíum 
f‹m©
, GLíum 
ty≥
, 
GLvoid
 * 
image
Ë{i‡(
	`GLìInô
()Ë
	`glGëC⁄vﬁuti⁄Fûãr
—¨gë, f‹m©,Åy≥, image);
	}
}

720 
__°dˇŒ
 
	$_Lazy_glGëC⁄vﬁuti⁄P¨amëîfv
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëC⁄vﬁuti⁄P¨amëîfv
—¨gë,Ö«me,Ö¨ams);
	}
}

721 
__°dˇŒ
 
	$_Lazy_glGëC⁄vﬁuti⁄P¨amëîiv
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëC⁄vﬁuti⁄P¨amëîiv
—¨gë,Ö«me,Ö¨ams);
	}
}

722 
__°dˇŒ
 
	$_Lazy_glGëSï¨abÀFûãr
(
GLíum
 
èrgë
, GLíum 
f‹m©
, GLíum 
ty≥
, 
GLvoid
 * 
row
, GLvoid * 
cﬁumn
, GLvoid * 
•™
Ë{i‡(
	`GLìInô
()Ë
	`glGëSï¨abÀFûãr
—¨gë, f‹m©,Åy≥,Ñow, cﬁumn, s∑n);
	}
}

723 
__°dˇŒ
 
	$_Lazy_glSï¨abÀFûãr2D
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
row
, c⁄° GLvoid * 
cﬁumn
Ë{i‡(
	`GLìInô
()Ë
	`glSï¨abÀFûãr2D
—¨gë, i¡î«lf‹m©, width, height, f‹m©,Åy≥,Ñow, cﬁumn);
	}
}

724 
__°dˇŒ
 
	$_Lazy_glGëHi°ogøm
(
GLíum
 
èrgë
, 
GLboﬁón
 
ª£t
, GLíum 
f‹m©
, GLíum 
ty≥
, 
GLvoid
 * 
vÆues
Ë{i‡(
	`GLìInô
()Ë
	`glGëHi°ogøm
—¨gë,Ñe£t, f‹m©,Åy≥, vÆues);
	}
}

725 
__°dˇŒ
 
	$_Lazy_glGëHi°ogømP¨amëîfv
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëHi°ogømP¨amëîfv
—¨gë,Ö«me,Ö¨ams);
	}
}

726 
__°dˇŒ
 
	$_Lazy_glGëHi°ogømP¨amëîiv
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëHi°ogømP¨amëîiv
—¨gë,Ö«me,Ö¨ams);
	}
}

727 
__°dˇŒ
 
	$_Lazy_glGëMömax
(
GLíum
 
èrgë
, 
GLboﬁón
 
ª£t
, GLíum 
f‹m©
, GLíum 
ty≥
, 
GLvoid
 * 
vÆues
Ë{i‡(
	`GLìInô
()Ë
	`glGëMömax
—¨gë,Ñe£t, f‹m©,Åy≥, vÆues);
	}
}

728 
__°dˇŒ
 
	$_Lazy_glGëMömaxP¨amëîfv
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëMömaxP¨amëîfv
—¨gë,Ö«me,Ö¨ams);
	}
}

729 
__°dˇŒ
 
	$_Lazy_glGëMömaxP¨amëîiv
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëMömaxP¨amëîiv
—¨gë,Ö«me,Ö¨ams);
	}
}

730 
__°dˇŒ
 
	$_Lazy_glHi°ogøm
(
GLíum
 
èrgë
, 
GLsizei
 
width
, GLíum 
öã∫Æf‹m©
, 
GLboﬁón
 
sök
Ë{i‡(
	`GLìInô
()Ë
	`glHi°ogøm
—¨gë, width, i¡î«lf‹m©, sök);
	}
}

731 
__°dˇŒ
 
	$_Lazy_glMömax
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLboﬁón
 
sök
Ë{i‡(
	`GLìInô
()Ë
	`glMömax
—¨gë, i¡î«lf‹m©, sök);
	}
}

732 
__°dˇŒ
 
	$_Lazy_glRe£tHi°ogøm
(
GLíum
 
èrgë
Ë{i‡(
	`GLìInô
()Ë
	`glRe£tHi°ogøm
—¨gë);
	}
}

733 
__°dˇŒ
 
	$_Lazy_glRe£tMömax
(
GLíum
 
èrgë
Ë{i‡(
	`GLìInô
()Ë
	`glRe£tMömax
—¨gë);
	}
}

734 
__°dˇŒ
 
	$_Lazy_glTexImage3D
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLöà
b‹dî
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
pixñs
Ë{i‡(
	`GLìInô
()Ë
	`glTexImage3D
—¨gë,Üevñ, i¡î«lf‹m©, width, height, dïth, b‹dî, f‹m©,Åy≥,Öixñs);
	}
}

735 
__°dˇŒ
 
	$_Lazy_glTexSubImage3D
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, GLöà
yoff£t
, GLöà
zoff£t
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
pixñs
Ë{i‡(
	`GLìInô
()Ë
	`glTexSubImage3D
—¨gë,Üevñ, xoff£t, yoff£t, zoff£t, width, height, dïth, f‹m©,Åy≥,Öixñs);
	}
}

736 
__°dˇŒ
 
	$_Lazy_glC›yTexSubImage3D
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, GLöà
yoff£t
, GLöà
zoff£t
, GLöà
x
, GLöà
y
, 
GLsizei
 
width
, GLsizeò
height
Ë{i‡(
	`GLìInô
()Ë
	`glC›yTexSubImage3D
—¨gë,Üevñ, xoff£t, yoff£t, zoff£t, x, y, width, height);
	}
}

737 
PFNGLBLENDCOLORPROC
 
	gpglBÀndCﬁ‹
=
_Lazy_glBÀndCﬁ‹
;

738 
PFNGLBLENDEQUATIONPROC
 
	gpglBÀndEqu©i⁄
=
_Lazy_glBÀndEqu©i⁄
;

739 
PFNGLDRAWRANGEELEMENTSPROC
 
	gpglDøwR™geEÀmíts
=
_Lazy_glDøwR™geEÀmíts
;

740 
PFNGLCOLORTABLEPROC
 
	gpglCﬁ‹TabÀ
=
_Lazy_glCﬁ‹TabÀ
;

741 
PFNGLCOLORTABLEPARAMETERFVPROC
 
	gpglCﬁ‹TabÀP¨amëîfv
=
_Lazy_glCﬁ‹TabÀP¨amëîfv
;

742 
PFNGLCOLORTABLEPARAMETERIVPROC
 
	gpglCﬁ‹TabÀP¨amëîiv
=
_Lazy_glCﬁ‹TabÀP¨amëîiv
;

743 
PFNGLCOPYCOLORTABLEPROC
 
	gpglC›yCﬁ‹TabÀ
=
_Lazy_glC›yCﬁ‹TabÀ
;

744 
PFNGLGETCOLORTABLEPROC
 
	gpglGëCﬁ‹TabÀ
=
_Lazy_glGëCﬁ‹TabÀ
;

745 
PFNGLGETCOLORTABLEPARAMETERFVPROC
 
	gpglGëCﬁ‹TabÀP¨amëîfv
=
_Lazy_glGëCﬁ‹TabÀP¨amëîfv
;

746 
PFNGLGETCOLORTABLEPARAMETERIVPROC
 
	gpglGëCﬁ‹TabÀP¨amëîiv
=
_Lazy_glGëCﬁ‹TabÀP¨amëîiv
;

747 
PFNGLCOLORSUBTABLEPROC
 
	gpglCﬁ‹SubTabÀ
=
_Lazy_glCﬁ‹SubTabÀ
;

748 
PFNGLCOPYCOLORSUBTABLEPROC
 
	gpglC›yCﬁ‹SubTabÀ
=
_Lazy_glC›yCﬁ‹SubTabÀ
;

749 
PFNGLCONVOLUTIONFILTER1DPROC
 
	gpglC⁄vﬁuti⁄Fûãr1D
=
_Lazy_glC⁄vﬁuti⁄Fûãr1D
;

750 
PFNGLCONVOLUTIONFILTER2DPROC
 
	gpglC⁄vﬁuti⁄Fûãr2D
=
_Lazy_glC⁄vﬁuti⁄Fûãr2D
;

751 
PFNGLCONVOLUTIONPARAMETERFPROC
 
	gpglC⁄vﬁuti⁄P¨amëîf
=
_Lazy_glC⁄vﬁuti⁄P¨amëîf
;

752 
PFNGLCONVOLUTIONPARAMETERFVPROC
 
	gpglC⁄vﬁuti⁄P¨amëîfv
=
_Lazy_glC⁄vﬁuti⁄P¨amëîfv
;

753 
PFNGLCONVOLUTIONPARAMETERIPROC
 
	gpglC⁄vﬁuti⁄P¨amëîi
=
_Lazy_glC⁄vﬁuti⁄P¨amëîi
;

754 
PFNGLCONVOLUTIONPARAMETERIVPROC
 
	gpglC⁄vﬁuti⁄P¨amëîiv
=
_Lazy_glC⁄vﬁuti⁄P¨amëîiv
;

755 
PFNGLCOPYCONVOLUTIONFILTER1DPROC
 
	gpglC›yC⁄vﬁuti⁄Fûãr1D
=
_Lazy_glC›yC⁄vﬁuti⁄Fûãr1D
;

756 
PFNGLCOPYCONVOLUTIONFILTER2DPROC
 
	gpglC›yC⁄vﬁuti⁄Fûãr2D
=
_Lazy_glC›yC⁄vﬁuti⁄Fûãr2D
;

757 
PFNGLGETCONVOLUTIONFILTERPROC
 
	gpglGëC⁄vﬁuti⁄Fûãr
=
_Lazy_glGëC⁄vﬁuti⁄Fûãr
;

758 
PFNGLGETCONVOLUTIONPARAMETERFVPROC
 
	gpglGëC⁄vﬁuti⁄P¨amëîfv
=
_Lazy_glGëC⁄vﬁuti⁄P¨amëîfv
;

759 
PFNGLGETCONVOLUTIONPARAMETERIVPROC
 
	gpglGëC⁄vﬁuti⁄P¨amëîiv
=
_Lazy_glGëC⁄vﬁuti⁄P¨amëîiv
;

760 
PFNGLGETSEPARABLEFILTERPROC
 
	gpglGëSï¨abÀFûãr
=
_Lazy_glGëSï¨abÀFûãr
;

761 
PFNGLSEPARABLEFILTER2DPROC
 
	gpglSï¨abÀFûãr2D
=
_Lazy_glSï¨abÀFûãr2D
;

762 
PFNGLGETHISTOGRAMPROC
 
	gpglGëHi°ogøm
=
_Lazy_glGëHi°ogøm
;

763 
PFNGLGETHISTOGRAMPARAMETERFVPROC
 
	gpglGëHi°ogømP¨amëîfv
=
_Lazy_glGëHi°ogømP¨amëîfv
;

764 
PFNGLGETHISTOGRAMPARAMETERIVPROC
 
	gpglGëHi°ogømP¨amëîiv
=
_Lazy_glGëHi°ogømP¨amëîiv
;

765 
PFNGLGETMINMAXPROC
 
	gpglGëMömax
=
_Lazy_glGëMömax
;

766 
PFNGLGETMINMAXPARAMETERFVPROC
 
	gpglGëMömaxP¨amëîfv
=
_Lazy_glGëMömaxP¨amëîfv
;

767 
PFNGLGETMINMAXPARAMETERIVPROC
 
	gpglGëMömaxP¨amëîiv
=
_Lazy_glGëMömaxP¨amëîiv
;

768 
PFNGLHISTOGRAMPROC
 
	gpglHi°ogøm
=
_Lazy_glHi°ogøm
;

769 
PFNGLMINMAXPROC
 
	gpglMömax
=
_Lazy_glMömax
;

770 
PFNGLRESETHISTOGRAMPROC
 
	gpglRe£tHi°ogøm
=
_Lazy_glRe£tHi°ogøm
;

771 
PFNGLRESETMINMAXPROC
 
	gpglRe£tMömax
=
_Lazy_glRe£tMömax
;

772 
PFNGLTEXIMAGE3DPROC
 
	gpglTexImage3D
=
_Lazy_glTexImage3D
;

773 
PFNGLTEXSUBIMAGE3DPROC
 
	gpglTexSubImage3D
=
_Lazy_glTexSubImage3D
;

774 
PFNGLCOPYTEXSUBIMAGE3DPROC
 
	gpglC›yTexSubImage3D
=
_Lazy_glC›yTexSubImage3D
;

779 #ifde‡
__GLEE_GL_ARB_imagög


784 #ifde‡
__GLEE_GL_VERSION_1_3


785 
__°dˇŒ
 
	$_Lazy_glA˘iveTextuª
(
GLíum
 
ãxtuª
Ë{i‡(
	`GLìInô
()Ë
	`glA˘iveTextuª
—extuª);
	}
}

786 
__°dˇŒ
 
	$_Lazy_glClõ¡A˘iveTextuª
(
GLíum
 
ãxtuª
Ë{i‡(
	`GLìInô
()Ë
	`glClõ¡A˘iveTextuª
—extuª);
	}
}

787 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1d
(
GLíum
 
èrgë
, 
GLdoubÀ
 
s
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1d
—¨gë, s);
	}
}

788 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1dv
(
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1dv
—¨gë, v);
	}
}

789 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1f
(
GLíum
 
èrgë
, 
GLÊﬂt
 
s
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1f
—¨gë, s);
	}
}

790 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1fv
(
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1fv
—¨gë, v);
	}
}

791 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1i
(
GLíum
 
èrgë
, 
GLöt
 
s
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1i
—¨gë, s);
	}
}

792 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1iv
(
GLíum
 
èrgë
, c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1iv
—¨gë, v);
	}
}

793 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1s
(
GLíum
 
èrgë
, 
GLsh‹t
 
s
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1s
—¨gë, s);
	}
}

794 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1sv
(
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1sv
—¨gë, v);
	}
}

795 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2d
(
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2d
—¨gë, s,Å);
	}
}

796 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2dv
(
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2dv
—¨gë, v);
	}
}

797 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2f
(
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2f
—¨gë, s,Å);
	}
}

798 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2fv
(
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2fv
—¨gë, v);
	}
}

799 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2i
(
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2i
—¨gë, s,Å);
	}
}

800 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2iv
(
GLíum
 
èrgë
, c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2iv
—¨gë, v);
	}
}

801 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2s
(
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2s
—¨gë, s,Å);
	}
}

802 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2sv
(
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2sv
—¨gë, v);
	}
}

803 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3d
(
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
, GLdoubÀ 
r
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3d
—¨gë, s,Å,Ñ);
	}
}

804 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3dv
(
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3dv
—¨gë, v);
	}
}

805 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3f
(
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3f
—¨gë, s,Å,Ñ);
	}
}

806 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3fv
(
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3fv
—¨gë, v);
	}
}

807 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3i
(
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
, GLöà
r
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3i
—¨gë, s,Å,Ñ);
	}
}

808 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3iv
(
GLíum
 
èrgë
, c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3iv
—¨gë, v);
	}
}

809 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3s
(
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
, GLsh‹à
r
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3s
—¨gë, s,Å,Ñ);
	}
}

810 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3sv
(
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3sv
—¨gë, v);
	}
}

811 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4d
(
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
, GLdoubÀ 
r
, GLdoubÀ 
q
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4d
—¨gë, s,Å,Ñ, q);
	}
}

812 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4dv
(
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4dv
—¨gë, v);
	}
}

813 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4f
(
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
, GLÊﬂà
q
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4f
—¨gë, s,Å,Ñ, q);
	}
}

814 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4fv
(
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4fv
—¨gë, v);
	}
}

815 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4i
(
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
, GLöà
r
, GLöà
q
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4i
—¨gë, s,Å,Ñ, q);
	}
}

816 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4iv
(
GLíum
 
èrgë
, c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4iv
—¨gë, v);
	}
}

817 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4s
(
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
, GLsh‹à
r
, GLsh‹à
q
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4s
—¨gë, s,Å,Ñ, q);
	}
}

818 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4sv
(
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4sv
—¨gë, v);
	}
}

819 
__°dˇŒ
 
	$_Lazy_glLﬂdTøn•o£M©rixf
(c⁄° 
GLÊﬂt
 * 
m
Ë{i‡(
	`GLìInô
()Ë
	`glLﬂdTøn•o£M©rixf
(m);
	}
}

820 
__°dˇŒ
 
	$_Lazy_glLﬂdTøn•o£M©rixd
(c⁄° 
GLdoubÀ
 * 
m
Ë{i‡(
	`GLìInô
()Ë
	`glLﬂdTøn•o£M©rixd
(m);
	}
}

821 
__°dˇŒ
 
	$_Lazy_glMu…Tøn•o£M©rixf
(c⁄° 
GLÊﬂt
 * 
m
Ë{i‡(
	`GLìInô
()Ë
	`glMu…Tøn•o£M©rixf
(m);
	}
}

822 
__°dˇŒ
 
	$_Lazy_glMu…Tøn•o£M©rixd
(c⁄° 
GLdoubÀ
 * 
m
Ë{i‡(
	`GLìInô
()Ë
	`glMu…Tøn•o£M©rixd
(m);
	}
}

823 
__°dˇŒ
 
	$_Lazy_glSam∂eCovîage
(
GL˛ampf
 
vÆue
, 
GLboﬁón
 
övît
Ë{i‡(
	`GLìInô
()Ë
	`glSam∂eCovîage
(vÆue, invît);
	}
}

824 
__°dˇŒ
 
	$_Lazy_glCom¥es£dTexImage3D
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLöà
b‹dî
, GLsizeò
imageSize
, c⁄° 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glCom¥es£dTexImage3D
—¨gë,Üevñ, i¡î«lf‹m©, width, height, dïth, b‹dî, imageSize, d©a);
	}
}

825 
__°dˇŒ
 
	$_Lazy_glCom¥es£dTexImage2D
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLöà
b‹dî
, GLsizeò
imageSize
, c⁄° 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glCom¥es£dTexImage2D
—¨gë,Üevñ, i¡î«lf‹m©, width, height, b‹dî, imageSize, d©a);
	}
}

826 
__°dˇŒ
 
	$_Lazy_glCom¥es£dTexImage1D
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLöà
b‹dî
, GLsizeò
imageSize
, c⁄° 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glCom¥es£dTexImage1D
—¨gë,Üevñ, i¡î«lf‹m©, width, b‹dî, imageSize, d©a);
	}
}

827 
__°dˇŒ
 
	$_Lazy_glCom¥es£dTexSubImage3D
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, GLöà
yoff£t
, GLöà
zoff£t
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLíum 
f‹m©
, GLsizeò
imageSize
, c⁄° 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glCom¥es£dTexSubImage3D
—¨gë,Üevñ, xoff£t, yoff£t, zoff£t, width, height, dïth, f‹m©, imageSize, d©a);
	}
}

828 
__°dˇŒ
 
	$_Lazy_glCom¥es£dTexSubImage2D
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, GLöà
yoff£t
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
, GLsizeò
imageSize
, c⁄° 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glCom¥es£dTexSubImage2D
—¨gë,Üevñ, xoff£t, yoff£t, width, height, f‹m©, imageSize, d©a);
	}
}

829 
__°dˇŒ
 
	$_Lazy_glCom¥es£dTexSubImage1D
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, 
GLsizei
 
width
, GLíum 
f‹m©
, GLsizeò
imageSize
, c⁄° 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glCom¥es£dTexSubImage1D
—¨gë,Üevñ, xoff£t, width, f‹m©, imageSize, d©a);
	}
}

830 
__°dˇŒ
 
	$_Lazy_glGëCom¥es£dTexImage
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, 
GLvoid
 * 
img
Ë{i‡(
	`GLìInô
()Ë
	`glGëCom¥es£dTexImage
—¨gë,Üevñ, img);
	}
}

831 
PFNGLACTIVETEXTUREPROC
 
	gpglA˘iveTextuª
=
_Lazy_glA˘iveTextuª
;

832 
PFNGLCLIENTACTIVETEXTUREPROC
 
	gpglClõ¡A˘iveTextuª
=
_Lazy_glClõ¡A˘iveTextuª
;

833 
PFNGLMULTITEXCOORD1DPROC
 
	gpglMu…iTexCo‹d1d
=
_Lazy_glMu…iTexCo‹d1d
;

834 
PFNGLMULTITEXCOORD1DVPROC
 
	gpglMu…iTexCo‹d1dv
=
_Lazy_glMu…iTexCo‹d1dv
;

835 
PFNGLMULTITEXCOORD1FPROC
 
	gpglMu…iTexCo‹d1f
=
_Lazy_glMu…iTexCo‹d1f
;

836 
PFNGLMULTITEXCOORD1FVPROC
 
	gpglMu…iTexCo‹d1fv
=
_Lazy_glMu…iTexCo‹d1fv
;

837 
PFNGLMULTITEXCOORD1IPROC
 
	gpglMu…iTexCo‹d1i
=
_Lazy_glMu…iTexCo‹d1i
;

838 
PFNGLMULTITEXCOORD1IVPROC
 
	gpglMu…iTexCo‹d1iv
=
_Lazy_glMu…iTexCo‹d1iv
;

839 
PFNGLMULTITEXCOORD1SPROC
 
	gpglMu…iTexCo‹d1s
=
_Lazy_glMu…iTexCo‹d1s
;

840 
PFNGLMULTITEXCOORD1SVPROC
 
	gpglMu…iTexCo‹d1sv
=
_Lazy_glMu…iTexCo‹d1sv
;

841 
PFNGLMULTITEXCOORD2DPROC
 
	gpglMu…iTexCo‹d2d
=
_Lazy_glMu…iTexCo‹d2d
;

842 
PFNGLMULTITEXCOORD2DVPROC
 
	gpglMu…iTexCo‹d2dv
=
_Lazy_glMu…iTexCo‹d2dv
;

843 
PFNGLMULTITEXCOORD2FPROC
 
	gpglMu…iTexCo‹d2f
=
_Lazy_glMu…iTexCo‹d2f
;

844 
PFNGLMULTITEXCOORD2FVPROC
 
	gpglMu…iTexCo‹d2fv
=
_Lazy_glMu…iTexCo‹d2fv
;

845 
PFNGLMULTITEXCOORD2IPROC
 
	gpglMu…iTexCo‹d2i
=
_Lazy_glMu…iTexCo‹d2i
;

846 
PFNGLMULTITEXCOORD2IVPROC
 
	gpglMu…iTexCo‹d2iv
=
_Lazy_glMu…iTexCo‹d2iv
;

847 
PFNGLMULTITEXCOORD2SPROC
 
	gpglMu…iTexCo‹d2s
=
_Lazy_glMu…iTexCo‹d2s
;

848 
PFNGLMULTITEXCOORD2SVPROC
 
	gpglMu…iTexCo‹d2sv
=
_Lazy_glMu…iTexCo‹d2sv
;

849 
PFNGLMULTITEXCOORD3DPROC
 
	gpglMu…iTexCo‹d3d
=
_Lazy_glMu…iTexCo‹d3d
;

850 
PFNGLMULTITEXCOORD3DVPROC
 
	gpglMu…iTexCo‹d3dv
=
_Lazy_glMu…iTexCo‹d3dv
;

851 
PFNGLMULTITEXCOORD3FPROC
 
	gpglMu…iTexCo‹d3f
=
_Lazy_glMu…iTexCo‹d3f
;

852 
PFNGLMULTITEXCOORD3FVPROC
 
	gpglMu…iTexCo‹d3fv
=
_Lazy_glMu…iTexCo‹d3fv
;

853 
PFNGLMULTITEXCOORD3IPROC
 
	gpglMu…iTexCo‹d3i
=
_Lazy_glMu…iTexCo‹d3i
;

854 
PFNGLMULTITEXCOORD3IVPROC
 
	gpglMu…iTexCo‹d3iv
=
_Lazy_glMu…iTexCo‹d3iv
;

855 
PFNGLMULTITEXCOORD3SPROC
 
	gpglMu…iTexCo‹d3s
=
_Lazy_glMu…iTexCo‹d3s
;

856 
PFNGLMULTITEXCOORD3SVPROC
 
	gpglMu…iTexCo‹d3sv
=
_Lazy_glMu…iTexCo‹d3sv
;

857 
PFNGLMULTITEXCOORD4DPROC
 
	gpglMu…iTexCo‹d4d
=
_Lazy_glMu…iTexCo‹d4d
;

858 
PFNGLMULTITEXCOORD4DVPROC
 
	gpglMu…iTexCo‹d4dv
=
_Lazy_glMu…iTexCo‹d4dv
;

859 
PFNGLMULTITEXCOORD4FPROC
 
	gpglMu…iTexCo‹d4f
=
_Lazy_glMu…iTexCo‹d4f
;

860 
PFNGLMULTITEXCOORD4FVPROC
 
	gpglMu…iTexCo‹d4fv
=
_Lazy_glMu…iTexCo‹d4fv
;

861 
PFNGLMULTITEXCOORD4IPROC
 
	gpglMu…iTexCo‹d4i
=
_Lazy_glMu…iTexCo‹d4i
;

862 
PFNGLMULTITEXCOORD4IVPROC
 
	gpglMu…iTexCo‹d4iv
=
_Lazy_glMu…iTexCo‹d4iv
;

863 
PFNGLMULTITEXCOORD4SPROC
 
	gpglMu…iTexCo‹d4s
=
_Lazy_glMu…iTexCo‹d4s
;

864 
PFNGLMULTITEXCOORD4SVPROC
 
	gpglMu…iTexCo‹d4sv
=
_Lazy_glMu…iTexCo‹d4sv
;

865 
PFNGLLOADTRANSPOSEMATRIXFPROC
 
	gpglLﬂdTøn•o£M©rixf
=
_Lazy_glLﬂdTøn•o£M©rixf
;

866 
PFNGLLOADTRANSPOSEMATRIXDPROC
 
	gpglLﬂdTøn•o£M©rixd
=
_Lazy_glLﬂdTøn•o£M©rixd
;

867 
PFNGLMULTTRANSPOSEMATRIXFPROC
 
	gpglMu…Tøn•o£M©rixf
=
_Lazy_glMu…Tøn•o£M©rixf
;

868 
PFNGLMULTTRANSPOSEMATRIXDPROC
 
	gpglMu…Tøn•o£M©rixd
=
_Lazy_glMu…Tøn•o£M©rixd
;

869 
PFNGLSAMPLECOVERAGEPROC
 
	gpglSam∂eCovîage
=
_Lazy_glSam∂eCovîage
;

870 
PFNGLCOMPRESSEDTEXIMAGE3DPROC
 
	gpglCom¥es£dTexImage3D
=
_Lazy_glCom¥es£dTexImage3D
;

871 
PFNGLCOMPRESSEDTEXIMAGE2DPROC
 
	gpglCom¥es£dTexImage2D
=
_Lazy_glCom¥es£dTexImage2D
;

872 
PFNGLCOMPRESSEDTEXIMAGE1DPROC
 
	gpglCom¥es£dTexImage1D
=
_Lazy_glCom¥es£dTexImage1D
;

873 
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
 
	gpglCom¥es£dTexSubImage3D
=
_Lazy_glCom¥es£dTexSubImage3D
;

874 
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
 
	gpglCom¥es£dTexSubImage2D
=
_Lazy_glCom¥es£dTexSubImage2D
;

875 
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
 
	gpglCom¥es£dTexSubImage1D
=
_Lazy_glCom¥es£dTexSubImage1D
;

876 
PFNGLGETCOMPRESSEDTEXIMAGEPROC
 
	gpglGëCom¥es£dTexImage
=
_Lazy_glGëCom¥es£dTexImage
;

881 #ifde‡
__GLEE_GL_VERSION_1_4


882 
__°dˇŒ
 
	$_Lazy_glBÀndFuncSï¨©e
(
GLíum
 
sÁ˘‹RGB
, GLíum 
dÁ˘‹RGB
, GLíum 
sÁ˘‹AÕha
, GLíum 
dÁ˘‹AÕha
Ë{i‡(
	`GLìInô
()Ë
	`glBÀndFuncSï¨©e
(sÁ˘‹RGB, dÁ˘‹RGB, sÁ˘‹AÕha, dÁ˘‹AÕha);
	}
}

883 
__°dˇŒ
 
	$_Lazy_glFogCo‹df
(
GLÊﬂt
 
co‹d
Ë{i‡(
	`GLìInô
()Ë
	`glFogCo‹df
(co‹d);
	}
}

884 
__°dˇŒ
 
	$_Lazy_glFogCo‹dfv
(c⁄° 
GLÊﬂt
 * 
co‹d
Ë{i‡(
	`GLìInô
()Ë
	`glFogCo‹dfv
(co‹d);
	}
}

885 
__°dˇŒ
 
	$_Lazy_glFogCo‹dd
(
GLdoubÀ
 
co‹d
Ë{i‡(
	`GLìInô
()Ë
	`glFogCo‹dd
(co‹d);
	}
}

886 
__°dˇŒ
 
	$_Lazy_glFogCo‹ddv
(c⁄° 
GLdoubÀ
 * 
co‹d
Ë{i‡(
	`GLìInô
()Ë
	`glFogCo‹ddv
(co‹d);
	}
}

887 
__°dˇŒ
 
	$_Lazy_glFogCo‹dPoöãr
(
GLíum
 
ty≥
, 
GLsizei
 
°ride
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glFogCo‹dPoöãr
—y≥, såide,Öoöãr);
	}
}

888 
__°dˇŒ
 
	$_Lazy_glMu…iDøwAºays
(
GLíum
 
mode
, 
GLöt
 * 
fú°
, 
GLsizei
 * 
cou¡
, GLsizeò
¥imcou¡
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iDøwAºays
(mode, fú°, cou¡,Örimcou¡);
	}
}

889 
__°dˇŒ
 
	$_Lazy_glMu…iDøwEÀmíts
(
GLíum
 
mode
, c⁄° 
GLsizei
 * 
cou¡
, GLíum 
ty≥
, c⁄° 
GLvoid
* * 
ödi˚s
, GLsizeò
¥imcou¡
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iDøwEÀmíts
(mode, cou¡,Åy≥, indi˚s,Örimcou¡);
	}
}

890 
__°dˇŒ
 
	$_Lazy_glPoötP¨amëîf
(
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glPoötP¨amëîf
’«me,Ö¨am);
	}
}

891 
__°dˇŒ
 
	$_Lazy_glPoötP¨amëîfv
(
GLíum
 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glPoötP¨amëîfv
’«me,Ö¨ams);
	}
}

892 
__°dˇŒ
 
	$_Lazy_glPoötP¨amëîi
(
GLíum
 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glPoötP¨amëîi
’«me,Ö¨am);
	}
}

893 
__°dˇŒ
 
	$_Lazy_glPoötP¨amëîiv
(
GLíum
 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glPoötP¨amëîiv
’«me,Ö¨ams);
	}
}

894 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3b
(
GLbyã
 
ªd
, GLbyã 
gªí
, GLbyã 
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3b
‘ed, gªí, blue);
	}
}

895 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3bv
(c⁄° 
GLbyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3bv
(v);
	}
}

896 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3d
(
GLdoubÀ
 
ªd
, GLdoubÀ 
gªí
, GLdoubÀ 
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3d
‘ed, gªí, blue);
	}
}

897 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3dv
(c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3dv
(v);
	}
}

898 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3f
(
GLÊﬂt
 
ªd
, GLÊﬂà
gªí
, GLÊﬂà
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3f
‘ed, gªí, blue);
	}
}

899 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3fv
(c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3fv
(v);
	}
}

900 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3i
(
GLöt
 
ªd
, GLöà
gªí
, GLöà
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3i
‘ed, gªí, blue);
	}
}

901 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3iv
(c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3iv
(v);
	}
}

902 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3s
(
GLsh‹t
 
ªd
, GLsh‹à
gªí
, GLsh‹à
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3s
‘ed, gªí, blue);
	}
}

903 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3sv
(c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3sv
(v);
	}
}

904 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3ub
(
GLubyã
 
ªd
, GLubyã 
gªí
, GLubyã 
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3ub
‘ed, gªí, blue);
	}
}

905 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3ubv
(c⁄° 
GLubyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3ubv
(v);
	}
}

906 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3ui
(
GLuöt
 
ªd
, GLuöà
gªí
, GLuöà
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3ui
‘ed, gªí, blue);
	}
}

907 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3uiv
(c⁄° 
GLuöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3uiv
(v);
	}
}

908 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3us
(
GLush‹t
 
ªd
, GLush‹à
gªí
, GLush‹à
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3us
‘ed, gªí, blue);
	}
}

909 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3usv
(c⁄° 
GLush‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3usv
(v);
	}
}

910 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹Poöãr
(
GLöt
 
size
, 
GLíum
 
ty≥
, 
GLsizei
 
°ride
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹Poöãr
(size,Åy≥, såide,Öoöãr);
	}
}

911 
__°dˇŒ
 
	$_Lazy_glWödowPos2d
(
GLdoubÀ
 
x
, GLdoubÀ 
y
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2d
(x, y);
	}
}

912 
__°dˇŒ
 
	$_Lazy_glWödowPos2dv
(c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2dv
(v);
	}
}

913 
__°dˇŒ
 
	$_Lazy_glWödowPos2f
(
GLÊﬂt
 
x
, GLÊﬂà
y
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2f
(x, y);
	}
}

914 
__°dˇŒ
 
	$_Lazy_glWödowPos2fv
(c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2fv
(v);
	}
}

915 
__°dˇŒ
 
	$_Lazy_glWödowPos2i
(
GLöt
 
x
, GLöà
y
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2i
(x, y);
	}
}

916 
__°dˇŒ
 
	$_Lazy_glWödowPos2iv
(c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2iv
(v);
	}
}

917 
__°dˇŒ
 
	$_Lazy_glWödowPos2s
(
GLsh‹t
 
x
, GLsh‹à
y
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2s
(x, y);
	}
}

918 
__°dˇŒ
 
	$_Lazy_glWödowPos2sv
(c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2sv
(v);
	}
}

919 
__°dˇŒ
 
	$_Lazy_glWödowPos3d
(
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3d
(x, y, z);
	}
}

920 
__°dˇŒ
 
	$_Lazy_glWödowPos3dv
(c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3dv
(v);
	}
}

921 
__°dˇŒ
 
	$_Lazy_glWödowPos3f
(
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3f
(x, y, z);
	}
}

922 
__°dˇŒ
 
	$_Lazy_glWödowPos3fv
(c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3fv
(v);
	}
}

923 
__°dˇŒ
 
	$_Lazy_glWödowPos3i
(
GLöt
 
x
, GLöà
y
, GLöà
z
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3i
(x, y, z);
	}
}

924 
__°dˇŒ
 
	$_Lazy_glWödowPos3iv
(c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3iv
(v);
	}
}

925 
__°dˇŒ
 
	$_Lazy_glWödowPos3s
(
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3s
(x, y, z);
	}
}

926 
__°dˇŒ
 
	$_Lazy_glWödowPos3sv
(c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3sv
(v);
	}
}

927 
PFNGLBLENDFUNCSEPARATEPROC
 
	gpglBÀndFuncSï¨©e
=
_Lazy_glBÀndFuncSï¨©e
;

928 
PFNGLFOGCOORDFPROC
 
	gpglFogCo‹df
=
_Lazy_glFogCo‹df
;

929 
PFNGLFOGCOORDFVPROC
 
	gpglFogCo‹dfv
=
_Lazy_glFogCo‹dfv
;

930 
PFNGLFOGCOORDDPROC
 
	gpglFogCo‹dd
=
_Lazy_glFogCo‹dd
;

931 
PFNGLFOGCOORDDVPROC
 
	gpglFogCo‹ddv
=
_Lazy_glFogCo‹ddv
;

932 
PFNGLFOGCOORDPOINTERPROC
 
	gpglFogCo‹dPoöãr
=
_Lazy_glFogCo‹dPoöãr
;

933 
PFNGLMULTIDRAWARRAYSPROC
 
	gpglMu…iDøwAºays
=
_Lazy_glMu…iDøwAºays
;

934 
PFNGLMULTIDRAWELEMENTSPROC
 
	gpglMu…iDøwEÀmíts
=
_Lazy_glMu…iDøwEÀmíts
;

935 
PFNGLPOINTPARAMETERFPROC
 
	gpglPoötP¨amëîf
=
_Lazy_glPoötP¨amëîf
;

936 
PFNGLPOINTPARAMETERFVPROC
 
	gpglPoötP¨amëîfv
=
_Lazy_glPoötP¨amëîfv
;

937 
PFNGLPOINTPARAMETERIPROC
 
	gpglPoötP¨amëîi
=
_Lazy_glPoötP¨amëîi
;

938 
PFNGLPOINTPARAMETERIVPROC
 
	gpglPoötP¨amëîiv
=
_Lazy_glPoötP¨amëîiv
;

939 
PFNGLSECONDARYCOLOR3BPROC
 
	gpglSec⁄d¨yCﬁ‹3b
=
_Lazy_glSec⁄d¨yCﬁ‹3b
;

940 
PFNGLSECONDARYCOLOR3BVPROC
 
	gpglSec⁄d¨yCﬁ‹3bv
=
_Lazy_glSec⁄d¨yCﬁ‹3bv
;

941 
PFNGLSECONDARYCOLOR3DPROC
 
	gpglSec⁄d¨yCﬁ‹3d
=
_Lazy_glSec⁄d¨yCﬁ‹3d
;

942 
PFNGLSECONDARYCOLOR3DVPROC
 
	gpglSec⁄d¨yCﬁ‹3dv
=
_Lazy_glSec⁄d¨yCﬁ‹3dv
;

943 
PFNGLSECONDARYCOLOR3FPROC
 
	gpglSec⁄d¨yCﬁ‹3f
=
_Lazy_glSec⁄d¨yCﬁ‹3f
;

944 
PFNGLSECONDARYCOLOR3FVPROC
 
	gpglSec⁄d¨yCﬁ‹3fv
=
_Lazy_glSec⁄d¨yCﬁ‹3fv
;

945 
PFNGLSECONDARYCOLOR3IPROC
 
	gpglSec⁄d¨yCﬁ‹3i
=
_Lazy_glSec⁄d¨yCﬁ‹3i
;

946 
PFNGLSECONDARYCOLOR3IVPROC
 
	gpglSec⁄d¨yCﬁ‹3iv
=
_Lazy_glSec⁄d¨yCﬁ‹3iv
;

947 
PFNGLSECONDARYCOLOR3SPROC
 
	gpglSec⁄d¨yCﬁ‹3s
=
_Lazy_glSec⁄d¨yCﬁ‹3s
;

948 
PFNGLSECONDARYCOLOR3SVPROC
 
	gpglSec⁄d¨yCﬁ‹3sv
=
_Lazy_glSec⁄d¨yCﬁ‹3sv
;

949 
PFNGLSECONDARYCOLOR3UBPROC
 
	gpglSec⁄d¨yCﬁ‹3ub
=
_Lazy_glSec⁄d¨yCﬁ‹3ub
;

950 
PFNGLSECONDARYCOLOR3UBVPROC
 
	gpglSec⁄d¨yCﬁ‹3ubv
=
_Lazy_glSec⁄d¨yCﬁ‹3ubv
;

951 
PFNGLSECONDARYCOLOR3UIPROC
 
	gpglSec⁄d¨yCﬁ‹3ui
=
_Lazy_glSec⁄d¨yCﬁ‹3ui
;

952 
PFNGLSECONDARYCOLOR3UIVPROC
 
	gpglSec⁄d¨yCﬁ‹3uiv
=
_Lazy_glSec⁄d¨yCﬁ‹3uiv
;

953 
PFNGLSECONDARYCOLOR3USPROC
 
	gpglSec⁄d¨yCﬁ‹3us
=
_Lazy_glSec⁄d¨yCﬁ‹3us
;

954 
PFNGLSECONDARYCOLOR3USVPROC
 
	gpglSec⁄d¨yCﬁ‹3usv
=
_Lazy_glSec⁄d¨yCﬁ‹3usv
;

955 
PFNGLSECONDARYCOLORPOINTERPROC
 
	gpglSec⁄d¨yCﬁ‹Poöãr
=
_Lazy_glSec⁄d¨yCﬁ‹Poöãr
;

956 
PFNGLWINDOWPOS2DPROC
 
	gpglWödowPos2d
=
_Lazy_glWödowPos2d
;

957 
PFNGLWINDOWPOS2DVPROC
 
	gpglWödowPos2dv
=
_Lazy_glWödowPos2dv
;

958 
PFNGLWINDOWPOS2FPROC
 
	gpglWödowPos2f
=
_Lazy_glWödowPos2f
;

959 
PFNGLWINDOWPOS2FVPROC
 
	gpglWödowPos2fv
=
_Lazy_glWödowPos2fv
;

960 
PFNGLWINDOWPOS2IPROC
 
	gpglWödowPos2i
=
_Lazy_glWödowPos2i
;

961 
PFNGLWINDOWPOS2IVPROC
 
	gpglWödowPos2iv
=
_Lazy_glWödowPos2iv
;

962 
PFNGLWINDOWPOS2SPROC
 
	gpglWödowPos2s
=
_Lazy_glWödowPos2s
;

963 
PFNGLWINDOWPOS2SVPROC
 
	gpglWödowPos2sv
=
_Lazy_glWödowPos2sv
;

964 
PFNGLWINDOWPOS3DPROC
 
	gpglWödowPos3d
=
_Lazy_glWödowPos3d
;

965 
PFNGLWINDOWPOS3DVPROC
 
	gpglWödowPos3dv
=
_Lazy_glWödowPos3dv
;

966 
PFNGLWINDOWPOS3FPROC
 
	gpglWödowPos3f
=
_Lazy_glWödowPos3f
;

967 
PFNGLWINDOWPOS3FVPROC
 
	gpglWödowPos3fv
=
_Lazy_glWödowPos3fv
;

968 
PFNGLWINDOWPOS3IPROC
 
	gpglWödowPos3i
=
_Lazy_glWödowPos3i
;

969 
PFNGLWINDOWPOS3IVPROC
 
	gpglWödowPos3iv
=
_Lazy_glWödowPos3iv
;

970 
PFNGLWINDOWPOS3SPROC
 
	gpglWödowPos3s
=
_Lazy_glWödowPos3s
;

971 
PFNGLWINDOWPOS3SVPROC
 
	gpglWödowPos3sv
=
_Lazy_glWödowPos3sv
;

976 #ifde‡
__GLEE_GL_VERSION_1_5


977 
__°dˇŒ
 
	$_Lazy_glGíQuîõs
(
GLsizei
 
n
, 
GLuöt
 * 
ids
Ë{i‡(
	`GLìInô
()Ë
	`glGíQuîõs
“, ids);
	}
}

978 
__°dˇŒ
 
	$_Lazy_glDñëeQuîõs
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
ids
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeQuîõs
“, ids);
	}
}

979 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsQuîy
(
GLuöt
 
id
Ë{i‡(
	`GLìInô
()Ë 
	`glIsQuîy
(id);  (
GLboﬁón
)0;
	}
}

980 
__°dˇŒ
 
	$_Lazy_glBegöQuîy
(
GLíum
 
èrgë
, 
GLuöt
 
id
Ë{i‡(
	`GLìInô
()Ë
	`glBegöQuîy
—¨gë, id);
	}
}

981 
__°dˇŒ
 
	$_Lazy_glEndQuîy
(
GLíum
 
èrgë
Ë{i‡(
	`GLìInô
()Ë
	`glEndQuîy
—¨gë);
	}
}

982 
__°dˇŒ
 
	$_Lazy_glGëQuîyiv
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëQuîyiv
—¨gë,Ö«me,Ö¨ams);
	}
}

983 
__°dˇŒ
 
	$_Lazy_glGëQuîyObje˘iv
(
GLuöt
 
id
, 
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëQuîyObje˘iv
(id,Ö«me,Ö¨ams);
	}
}

984 
__°dˇŒ
 
	$_Lazy_glGëQuîyObje˘uiv
(
GLuöt
 
id
, 
GLíum
 
≤ame
, GLuöà* 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëQuîyObje˘uiv
(id,Ö«me,Ö¨ams);
	}
}

985 
__°dˇŒ
 
	$_Lazy_glBödBuf„r
(
GLíum
 
èrgë
, 
GLuöt
 
buf„r
Ë{i‡(
	`GLìInô
()Ë
	`glBödBuf„r
—¨gë, buf„r);
	}
}

986 
__°dˇŒ
 
	$_Lazy_glDñëeBuf„rs
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
buf„rs
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeBuf„rs
“, buf„rs);
	}
}

987 
__°dˇŒ
 
	$_Lazy_glGíBuf„rs
(
GLsizei
 
n
, 
GLuöt
 * 
buf„rs
Ë{i‡(
	`GLìInô
()Ë
	`glGíBuf„rs
“, buf„rs);
	}
}

988 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsBuf„r
(
GLuöt
 
buf„r
Ë{i‡(
	`GLìInô
()Ë 
	`glIsBuf„r
(buf„r);  (
GLboﬁón
)0;
	}
}

989 
__°dˇŒ
 
	$_Lazy_glBuf„rD©a
(
GLíum
 
èrgë
, 
GLsizeùå
 
size
, c⁄° 
GLvoid
 * 
d©a
, GLíum 
ußge
Ë{i‡(
	`GLìInô
()Ë
	`glBuf„rD©a
—¨gë, size, d©a, ußge);
	}
}

990 
__°dˇŒ
 
	$_Lazy_glBuf„rSubD©a
(
GLíum
 
èrgë
, 
GLöçå
 
off£t
, 
GLsizeùå
 
size
, c⁄° 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glBuf„rSubD©a
—¨gë, off£t, size, d©a);
	}
}

991 
__°dˇŒ
 
	$_Lazy_glGëBuf„rSubD©a
(
GLíum
 
èrgë
, 
GLöçå
 
off£t
, 
GLsizeùå
 
size
, 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glGëBuf„rSubD©a
—¨gë, off£t, size, d©a);
	}
}

992 
GLvoid
* 
__°dˇŒ
 
	$_Lazy_glM≠Buf„r
(
GLíum
 
èrgë
, GLíum 
ac˚ss
Ë{i‡(
	`GLìInô
()Ë 
	`glM≠Buf„r
—¨gë,ác˚ss);  (
GLvoid
*)0;
	}
}

993 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glUnm≠Buf„r
(
GLíum
 
èrgë
Ë{i‡(
	`GLìInô
()Ë 
	`glUnm≠Buf„r
—¨gë);  (
GLboﬁón
)0;
	}
}

994 
__°dˇŒ
 
	$_Lazy_glGëBuf„rP¨amëîiv
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëBuf„rP¨amëîiv
—¨gë,Ö«me,Ö¨ams);
	}
}

995 
__°dˇŒ
 
	$_Lazy_glGëBuf„rPoöãrv
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLvoid
* * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëBuf„rPoöãrv
—¨gë,Ö«me,Ö¨ams);
	}
}

996 
PFNGLGENQUERIESPROC
 
	gpglGíQuîõs
=
_Lazy_glGíQuîõs
;

997 
PFNGLDELETEQUERIESPROC
 
	gpglDñëeQuîõs
=
_Lazy_glDñëeQuîõs
;

998 
PFNGLISQUERYPROC
 
	gpglIsQuîy
=
_Lazy_glIsQuîy
;

999 
PFNGLBEGINQUERYPROC
 
	gpglBegöQuîy
=
_Lazy_glBegöQuîy
;

1000 
PFNGLENDQUERYPROC
 
	gpglEndQuîy
=
_Lazy_glEndQuîy
;

1001 
PFNGLGETQUERYIVPROC
 
	gpglGëQuîyiv
=
_Lazy_glGëQuîyiv
;

1002 
PFNGLGETQUERYOBJECTIVPROC
 
	gpglGëQuîyObje˘iv
=
_Lazy_glGëQuîyObje˘iv
;

1003 
PFNGLGETQUERYOBJECTUIVPROC
 
	gpglGëQuîyObje˘uiv
=
_Lazy_glGëQuîyObje˘uiv
;

1004 
PFNGLBINDBUFFERPROC
 
	gpglBödBuf„r
=
_Lazy_glBödBuf„r
;

1005 
PFNGLDELETEBUFFERSPROC
 
	gpglDñëeBuf„rs
=
_Lazy_glDñëeBuf„rs
;

1006 
PFNGLGENBUFFERSPROC
 
	gpglGíBuf„rs
=
_Lazy_glGíBuf„rs
;

1007 
PFNGLISBUFFERPROC
 
	gpglIsBuf„r
=
_Lazy_glIsBuf„r
;

1008 
PFNGLBUFFERDATAPROC
 
	gpglBuf„rD©a
=
_Lazy_glBuf„rD©a
;

1009 
PFNGLBUFFERSUBDATAPROC
 
	gpglBuf„rSubD©a
=
_Lazy_glBuf„rSubD©a
;

1010 
PFNGLGETBUFFERSUBDATAPROC
 
	gpglGëBuf„rSubD©a
=
_Lazy_glGëBuf„rSubD©a
;

1011 
PFNGLMAPBUFFERPROC
 
	gpglM≠Buf„r
=
_Lazy_glM≠Buf„r
;

1012 
PFNGLUNMAPBUFFERPROC
 
	gpglUnm≠Buf„r
=
_Lazy_glUnm≠Buf„r
;

1013 
PFNGLGETBUFFERPARAMETERIVPROC
 
	gpglGëBuf„rP¨amëîiv
=
_Lazy_glGëBuf„rP¨amëîiv
;

1014 
PFNGLGETBUFFERPOINTERVPROC
 
	gpglGëBuf„rPoöãrv
=
_Lazy_glGëBuf„rPoöãrv
;

1019 #ifde‡
__GLEE_GL_VERSION_2_0


1020 
__°dˇŒ
 
	$_Lazy_glBÀndEqu©i⁄Sï¨©e
(
GLíum
 
modeRGB
, GLíum 
modeAÕha
Ë{i‡(
	`GLìInô
()Ë
	`glBÀndEqu©i⁄Sï¨©e
(modeRGB, modeAÕha);
	}
}

1021 
__°dˇŒ
 
	$_Lazy_glDøwBuf„rs
(
GLsizei
 
n
, c⁄° 
GLíum
 * 
bufs
Ë{i‡(
	`GLìInô
()Ë
	`glDøwBuf„rs
“, bufs);
	}
}

1022 
__°dˇŒ
 
	$_Lazy_glSãncûOpSï¨©e
(
GLíum
 
Á˚
, GLíum 
sÁû
, GLíum 
dpÁû
, GLíum 
dµass
Ë{i‡(
	`GLìInô
()Ë
	`glSãncûOpSï¨©e
(Á˚, sÁû, dpÁû, dµass);
	}
}

1023 
__°dˇŒ
 
	$_Lazy_glSãncûFuncSï¨©e
(
GLíum
 
‰⁄tfunc
, GLíum 
backfunc
, 
GLöt
 
ªf
, 
GLuöt
 
mask
Ë{i‡(
	`GLìInô
()Ë
	`glSãncûFuncSï¨©e
(‰⁄tfunc, backfunc,Ñef, mask);
	}
}

1024 
__°dˇŒ
 
	$_Lazy_glSãncûMaskSï¨©e
(
GLíum
 
Á˚
, 
GLuöt
 
mask
Ë{i‡(
	`GLìInô
()Ë
	`glSãncûMaskSï¨©e
(Á˚, mask);
	}
}

1025 
__°dˇŒ
 
	$_Lazy_glAâachShadî
(
GLuöt
 
¥ogøm
, GLuöà
shadî
Ë{i‡(
	`GLìInô
()Ë
	`glAâachShadî
’rogøm, shadî);
	}
}

1026 
__°dˇŒ
 
	$_Lazy_glBödAâribLoˇti⁄
(
GLuöt
 
¥ogøm
, GLuöà
ödex
, c⁄° 
GLch¨
 * 
«me
Ë{i‡(
	`GLìInô
()Ë
	`glBödAâribLoˇti⁄
’rogøm, index,Çame);
	}
}

1027 
__°dˇŒ
 
	$_Lazy_glCompûeShadî
(
GLuöt
 
shadî
Ë{i‡(
	`GLìInô
()Ë
	`glCompûeShadî
(shadî);
	}
}

1028 
GLuöt
 
__°dˇŒ
 
	$_Lazy_glCª©eProgøm
(Ë{i‡(
	`GLìInô
()Ë 
	`glCª©eProgøm
();  (
GLuöt
)0;
	}
}

1029 
GLuöt
 
__°dˇŒ
 
	$_Lazy_glCª©eShadî
(
GLíum
 
ty≥
Ë{i‡(
	`GLìInô
()Ë 
	`glCª©eShadî
—y≥);  (
GLuöt
)0;
	}
}

1030 
__°dˇŒ
 
	$_Lazy_glDñëeProgøm
(
GLuöt
 
¥ogøm
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeProgøm
’rogøm);
	}
}

1031 
__°dˇŒ
 
	$_Lazy_glDñëeShadî
(
GLuöt
 
shadî
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeShadî
(shadî);
	}
}

1032 
__°dˇŒ
 
	$_Lazy_glDëachShadî
(
GLuöt
 
¥ogøm
, GLuöà
shadî
Ë{i‡(
	`GLìInô
()Ë
	`glDëachShadî
’rogøm, shadî);
	}
}

1033 
__°dˇŒ
 
	$_Lazy_glDißbÀVîãxAâribAºay
(
GLuöt
 
ödex
Ë{i‡(
	`GLìInô
()Ë
	`glDißbÀVîãxAâribAºay
(ödex);
	}
}

1034 
__°dˇŒ
 
	$_Lazy_glE«bÀVîãxAâribAºay
(
GLuöt
 
ödex
Ë{i‡(
	`GLìInô
()Ë
	`glE«bÀVîãxAâribAºay
(ödex);
	}
}

1035 
__°dˇŒ
 
	$_Lazy_glGëA˘iveAârib
(
GLuöt
 
¥ogøm
, GLuöà
ödex
, 
GLsizei
 
bufSize
, GLsizeò* 
Àngth
, 
GLöt
 * 
size
, 
GLíum
 * 
ty≥
, 
GLch¨
 * 
«me
Ë{i‡(
	`GLìInô
()Ë
	`glGëA˘iveAârib
’rogøm, index, bufSize,Üígth, size,Åy≥,Çame);
	}
}

1036 
__°dˇŒ
 
	$_Lazy_glGëA˘iveUnif‹m
(
GLuöt
 
¥ogøm
, GLuöà
ödex
, 
GLsizei
 
bufSize
, GLsizeò* 
Àngth
, 
GLöt
 * 
size
, 
GLíum
 * 
ty≥
, 
GLch¨
 * 
«me
Ë{i‡(
	`GLìInô
()Ë
	`glGëA˘iveUnif‹m
’rogøm, index, bufSize,Üígth, size,Åy≥,Çame);
	}
}

1037 
__°dˇŒ
 
	$_Lazy_glGëAâachedShadîs
(
GLuöt
 
¥ogøm
, 
GLsizei
 
maxCou¡
, GLsizeò* 
cou¡
, GLuöà* 
obj
Ë{i‡(
	`GLìInô
()Ë
	`glGëAâachedShadîs
’rogøm, maxCou¡, cou¡, obj);
	}
}

1038 
GLöt
 
__°dˇŒ
 
	$_Lazy_glGëAâribLoˇti⁄
(
GLuöt
 
¥ogøm
, c⁄° 
GLch¨
 * 
«me
Ë{i‡(
	`GLìInô
()Ë 
	`glGëAâribLoˇti⁄
’rogøm,Çame);  (
GLöt
)0;
	}
}

1039 
__°dˇŒ
 
	$_Lazy_glGëProgømiv
(
GLuöt
 
¥ogøm
, 
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømiv
’rogøm,Ö«me,Ö¨ams);
	}
}

1040 
__°dˇŒ
 
	$_Lazy_glGëProgømInfoLog
(
GLuöt
 
¥ogøm
, 
GLsizei
 
bufSize
, GLsizeò* 
Àngth
, 
GLch¨
 * 
öfoLog
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømInfoLog
’rogøm, bufSize,Üígth, infoLog);
	}
}

1041 
__°dˇŒ
 
	$_Lazy_glGëShadîiv
(
GLuöt
 
shadî
, 
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëShadîiv
(shadî,Ö«me,Ö¨ams);
	}
}

1042 
__°dˇŒ
 
	$_Lazy_glGëShadîInfoLog
(
GLuöt
 
shadî
, 
GLsizei
 
bufSize
, GLsizeò* 
Àngth
, 
GLch¨
 * 
öfoLog
Ë{i‡(
	`GLìInô
()Ë
	`glGëShadîInfoLog
(shadî, bufSize,Üígth, infoLog);
	}
}

1043 
__°dˇŒ
 
	$_Lazy_glGëShadîSour˚
(
GLuöt
 
shadî
, 
GLsizei
 
bufSize
, GLsizeò* 
Àngth
, 
GLch¨
 * 
sour˚
Ë{i‡(
	`GLìInô
()Ë
	`glGëShadîSour˚
(shadî, bufSize,Üígth, sour˚);
	}
}

1044 
GLöt
 
__°dˇŒ
 
	$_Lazy_glGëUnif‹mLoˇti⁄
(
GLuöt
 
¥ogøm
, c⁄° 
GLch¨
 * 
«me
Ë{i‡(
	`GLìInô
()Ë 
	`glGëUnif‹mLoˇti⁄
’rogøm,Çame);  (
GLöt
)0;
	}
}

1045 
__°dˇŒ
 
	$_Lazy_glGëUnif‹mfv
(
GLuöt
 
¥ogøm
, 
GLöt
 
loˇti⁄
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëUnif‹mfv
’rogøm,Üoˇti⁄,Ö¨ams);
	}
}

1046 
__°dˇŒ
 
	$_Lazy_glGëUnif‹miv
(
GLuöt
 
¥ogøm
, 
GLöt
 
loˇti⁄
, GLöà* 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëUnif‹miv
’rogøm,Üoˇti⁄,Ö¨ams);
	}
}

1047 
__°dˇŒ
 
	$_Lazy_glGëVîãxAâribdv
(
GLuöt
 
ödex
, 
GLíum
 
≤ame
, 
GLdoubÀ
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëVîãxAâribdv
(ödex,Ö«me,Ö¨ams);
	}
}

1048 
__°dˇŒ
 
	$_Lazy_glGëVîãxAâribfv
(
GLuöt
 
ödex
, 
GLíum
 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëVîãxAâribfv
(ödex,Ö«me,Ö¨ams);
	}
}

1049 
__°dˇŒ
 
	$_Lazy_glGëVîãxAâribiv
(
GLuöt
 
ödex
, 
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëVîãxAâribiv
(ödex,Ö«me,Ö¨ams);
	}
}

1050 
__°dˇŒ
 
	$_Lazy_glGëVîãxAâribPoöãrv
(
GLuöt
 
ödex
, 
GLíum
 
≤ame
, 
GLvoid
* * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glGëVîãxAâribPoöãrv
(ödex,Ö«me,Öoöãr);
	}
}

1051 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsProgøm
(
GLuöt
 
¥ogøm
Ë{i‡(
	`GLìInô
()Ë 
	`glIsProgøm
’rogøm);  (
GLboﬁón
)0;
	}
}

1052 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsShadî
(
GLuöt
 
shadî
Ë{i‡(
	`GLìInô
()Ë 
	`glIsShadî
(shadî);  (
GLboﬁón
)0;
	}
}

1053 
__°dˇŒ
 
	$_Lazy_glLökProgøm
(
GLuöt
 
¥ogøm
Ë{i‡(
	`GLìInô
()Ë
	`glLökProgøm
’rogøm);
	}
}

1054 
__°dˇŒ
 
	$_Lazy_glShadîSour˚
(
GLuöt
 
shadî
, 
GLsizei
 
cou¡
, c⁄° 
GLch¨
* * 
°rög
, c⁄° 
GLöt
 * 
Àngth
Ë{i‡(
	`GLìInô
()Ë
	`glShadîSour˚
(shadî, cou¡, såög,Üígth);
	}
}

1055 
__°dˇŒ
 
	$_Lazy_glU£Progøm
(
GLuöt
 
¥ogøm
Ë{i‡(
	`GLìInô
()Ë
	`glU£Progøm
’rogøm);
	}
}

1056 
__°dˇŒ
 
	$_Lazy_glUnif‹m1f
(
GLöt
 
loˇti⁄
, 
GLÊﬂt
 
v0
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m1f
÷oˇti⁄, v0);
	}
}

1057 
__°dˇŒ
 
	$_Lazy_glUnif‹m2f
(
GLöt
 
loˇti⁄
, 
GLÊﬂt
 
v0
, GLÊﬂà
v1
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m2f
÷oˇti⁄, v0, v1);
	}
}

1058 
__°dˇŒ
 
	$_Lazy_glUnif‹m3f
(
GLöt
 
loˇti⁄
, 
GLÊﬂt
 
v0
, GLÊﬂà
v1
, GLÊﬂà
v2
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m3f
÷oˇti⁄, v0, v1, v2);
	}
}

1059 
__°dˇŒ
 
	$_Lazy_glUnif‹m4f
(
GLöt
 
loˇti⁄
, 
GLÊﬂt
 
v0
, GLÊﬂà
v1
, GLÊﬂà
v2
, GLÊﬂà
v3
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m4f
÷oˇti⁄, v0, v1, v2, v3);
	}
}

1060 
__°dˇŒ
 
	$_Lazy_glUnif‹m1i
(
GLöt
 
loˇti⁄
, GLöà
v0
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m1i
÷oˇti⁄, v0);
	}
}

1061 
__°dˇŒ
 
	$_Lazy_glUnif‹m2i
(
GLöt
 
loˇti⁄
, GLöà
v0
, GLöà
v1
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m2i
÷oˇti⁄, v0, v1);
	}
}

1062 
__°dˇŒ
 
	$_Lazy_glUnif‹m3i
(
GLöt
 
loˇti⁄
, GLöà
v0
, GLöà
v1
, GLöà
v2
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m3i
÷oˇti⁄, v0, v1, v2);
	}
}

1063 
__°dˇŒ
 
	$_Lazy_glUnif‹m4i
(
GLöt
 
loˇti⁄
, GLöà
v0
, GLöà
v1
, GLöà
v2
, GLöà
v3
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m4i
÷oˇti⁄, v0, v1, v2, v3);
	}
}

1064 
__°dˇŒ
 
	$_Lazy_glUnif‹m1fv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m1fv
÷oˇti⁄, cou¡, vÆue);
	}
}

1065 
__°dˇŒ
 
	$_Lazy_glUnif‹m2fv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m2fv
÷oˇti⁄, cou¡, vÆue);
	}
}

1066 
__°dˇŒ
 
	$_Lazy_glUnif‹m3fv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m3fv
÷oˇti⁄, cou¡, vÆue);
	}
}

1067 
__°dˇŒ
 
	$_Lazy_glUnif‹m4fv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m4fv
÷oˇti⁄, cou¡, vÆue);
	}
}

1068 
__°dˇŒ
 
	$_Lazy_glUnif‹m1iv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° GLöà* 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m1iv
÷oˇti⁄, cou¡, vÆue);
	}
}

1069 
__°dˇŒ
 
	$_Lazy_glUnif‹m2iv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° GLöà* 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m2iv
÷oˇti⁄, cou¡, vÆue);
	}
}

1070 
__°dˇŒ
 
	$_Lazy_glUnif‹m3iv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° GLöà* 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m3iv
÷oˇti⁄, cou¡, vÆue);
	}
}

1071 
__°dˇŒ
 
	$_Lazy_glUnif‹m4iv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° GLöà* 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m4iv
÷oˇti⁄, cou¡, vÆue);
	}
}

1072 
__°dˇŒ
 
	$_Lazy_glUnif‹mM©rix2fv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, 
GLboﬁón
 
å™•o£
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹mM©rix2fv
÷oˇti⁄, cou¡,Åøn•o£, vÆue);
	}
}

1073 
__°dˇŒ
 
	$_Lazy_glUnif‹mM©rix3fv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, 
GLboﬁón
 
å™•o£
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹mM©rix3fv
÷oˇti⁄, cou¡,Åøn•o£, vÆue);
	}
}

1074 
__°dˇŒ
 
	$_Lazy_glUnif‹mM©rix4fv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, 
GLboﬁón
 
å™•o£
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹mM©rix4fv
÷oˇti⁄, cou¡,Åøn•o£, vÆue);
	}
}

1075 
__°dˇŒ
 
	$_Lazy_glVÆid©eProgøm
(
GLuöt
 
¥ogøm
Ë{i‡(
	`GLìInô
()Ë
	`glVÆid©eProgøm
’rogøm);
	}
}

1076 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1d
(
GLuöt
 
ödex
, 
GLdoubÀ
 
x
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1d
(ödex, x);
	}
}

1077 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1dv
(
GLuöt
 
ödex
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1dv
(ödex, v);
	}
}

1078 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1f
(
GLuöt
 
ödex
, 
GLÊﬂt
 
x
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1f
(ödex, x);
	}
}

1079 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1fv
(
GLuöt
 
ödex
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1fv
(ödex, v);
	}
}

1080 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1s
(
GLuöt
 
ödex
, 
GLsh‹t
 
x
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1s
(ödex, x);
	}
}

1081 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1sv
(
GLuöt
 
ödex
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1sv
(ödex, v);
	}
}

1082 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2d
(
GLuöt
 
ödex
, 
GLdoubÀ
 
x
, GLdoubÀ 
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2d
(ödex, x, y);
	}
}

1083 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2dv
(
GLuöt
 
ödex
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2dv
(ödex, v);
	}
}

1084 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2f
(
GLuöt
 
ödex
, 
GLÊﬂt
 
x
, GLÊﬂà
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2f
(ödex, x, y);
	}
}

1085 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2fv
(
GLuöt
 
ödex
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2fv
(ödex, v);
	}
}

1086 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2s
(
GLuöt
 
ödex
, 
GLsh‹t
 
x
, GLsh‹à
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2s
(ödex, x, y);
	}
}

1087 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2sv
(
GLuöt
 
ödex
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2sv
(ödex, v);
	}
}

1088 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3d
(
GLuöt
 
ödex
, 
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3d
(ödex, x, y, z);
	}
}

1089 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3dv
(
GLuöt
 
ödex
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3dv
(ödex, v);
	}
}

1090 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3f
(
GLuöt
 
ödex
, 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3f
(ödex, x, y, z);
	}
}

1091 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3fv
(
GLuöt
 
ödex
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3fv
(ödex, v);
	}
}

1092 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3s
(
GLuöt
 
ödex
, 
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3s
(ödex, x, y, z);
	}
}

1093 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3sv
(
GLuöt
 
ödex
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3sv
(ödex, v);
	}
}

1094 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4Nbv
(
GLuöt
 
ödex
, c⁄° 
GLbyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4Nbv
(ödex, v);
	}
}

1095 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4Niv
(
GLuöt
 
ödex
, c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4Niv
(ödex, v);
	}
}

1096 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4Nsv
(
GLuöt
 
ödex
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4Nsv
(ödex, v);
	}
}

1097 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4Nub
(
GLuöt
 
ödex
, 
GLubyã
 
x
, GLubyã 
y
, GLubyã 
z
, GLubyã 
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4Nub
(ödex, x, y, z, w);
	}
}

1098 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4Nubv
(
GLuöt
 
ödex
, c⁄° 
GLubyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4Nubv
(ödex, v);
	}
}

1099 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4Nuiv
(
GLuöt
 
ödex
, c⁄° GLuöà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4Nuiv
(ödex, v);
	}
}

1100 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4Nusv
(
GLuöt
 
ödex
, c⁄° 
GLush‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4Nusv
(ödex, v);
	}
}

1101 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4bv
(
GLuöt
 
ödex
, c⁄° 
GLbyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4bv
(ödex, v);
	}
}

1102 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4d
(
GLuöt
 
ödex
, 
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
, GLdoubÀ 
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4d
(ödex, x, y, z, w);
	}
}

1103 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4dv
(
GLuöt
 
ödex
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4dv
(ödex, v);
	}
}

1104 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4f
(
GLuöt
 
ödex
, 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
, GLÊﬂà
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4f
(ödex, x, y, z, w);
	}
}

1105 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4fv
(
GLuöt
 
ödex
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4fv
(ödex, v);
	}
}

1106 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4iv
(
GLuöt
 
ödex
, c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4iv
(ödex, v);
	}
}

1107 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4s
(
GLuöt
 
ödex
, 
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
, GLsh‹à
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4s
(ödex, x, y, z, w);
	}
}

1108 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4sv
(
GLuöt
 
ödex
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4sv
(ödex, v);
	}
}

1109 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4ubv
(
GLuöt
 
ödex
, c⁄° 
GLubyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4ubv
(ödex, v);
	}
}

1110 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4uiv
(
GLuöt
 
ödex
, c⁄° GLuöà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4uiv
(ödex, v);
	}
}

1111 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4usv
(
GLuöt
 
ödex
, c⁄° 
GLush‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4usv
(ödex, v);
	}
}

1112 
__°dˇŒ
 
	$_Lazy_glVîãxAâribPoöãr
(
GLuöt
 
ödex
, 
GLöt
 
size
, 
GLíum
 
ty≥
, 
GLboﬁón
 
n‹mÆized
, 
GLsizei
 
°ride
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribPoöãr
(ödex, size,Åy≥,Ç‹mÆized, såide,Öoöãr);
	}
}

1113 
PFNGLBLENDEQUATIONSEPARATEPROC
 
	gpglBÀndEqu©i⁄Sï¨©e
=
_Lazy_glBÀndEqu©i⁄Sï¨©e
;

1114 
PFNGLDRAWBUFFERSPROC
 
	gpglDøwBuf„rs
=
_Lazy_glDøwBuf„rs
;

1115 
PFNGLSTENCILOPSEPARATEPROC
 
	gpglSãncûOpSï¨©e
=
_Lazy_glSãncûOpSï¨©e
;

1116 
PFNGLSTENCILFUNCSEPARATEPROC
 
	gpglSãncûFuncSï¨©e
=
_Lazy_glSãncûFuncSï¨©e
;

1117 
PFNGLSTENCILMASKSEPARATEPROC
 
	gpglSãncûMaskSï¨©e
=
_Lazy_glSãncûMaskSï¨©e
;

1118 
PFNGLATTACHSHADERPROC
 
	gpglAâachShadî
=
_Lazy_glAâachShadî
;

1119 
PFNGLBINDATTRIBLOCATIONPROC
 
	gpglBödAâribLoˇti⁄
=
_Lazy_glBödAâribLoˇti⁄
;

1120 
PFNGLCOMPILESHADERPROC
 
	gpglCompûeShadî
=
_Lazy_glCompûeShadî
;

1121 
PFNGLCREATEPROGRAMPROC
 
	gpglCª©eProgøm
=
_Lazy_glCª©eProgøm
;

1122 
PFNGLCREATESHADERPROC
 
	gpglCª©eShadî
=
_Lazy_glCª©eShadî
;

1123 
PFNGLDELETEPROGRAMPROC
 
	gpglDñëeProgøm
=
_Lazy_glDñëeProgøm
;

1124 
PFNGLDELETESHADERPROC
 
	gpglDñëeShadî
=
_Lazy_glDñëeShadî
;

1125 
PFNGLDETACHSHADERPROC
 
	gpglDëachShadî
=
_Lazy_glDëachShadî
;

1126 
PFNGLDISABLEVERTEXATTRIBARRAYPROC
 
	gpglDißbÀVîãxAâribAºay
=
_Lazy_glDißbÀVîãxAâribAºay
;

1127 
PFNGLENABLEVERTEXATTRIBARRAYPROC
 
	gpglE«bÀVîãxAâribAºay
=
_Lazy_glE«bÀVîãxAâribAºay
;

1128 
PFNGLGETACTIVEATTRIBPROC
 
	gpglGëA˘iveAârib
=
_Lazy_glGëA˘iveAârib
;

1129 
PFNGLGETACTIVEUNIFORMPROC
 
	gpglGëA˘iveUnif‹m
=
_Lazy_glGëA˘iveUnif‹m
;

1130 
PFNGLGETATTACHEDSHADERSPROC
 
	gpglGëAâachedShadîs
=
_Lazy_glGëAâachedShadîs
;

1131 
PFNGLGETATTRIBLOCATIONPROC
 
	gpglGëAâribLoˇti⁄
=
_Lazy_glGëAâribLoˇti⁄
;

1132 
PFNGLGETPROGRAMIVPROC
 
	gpglGëProgømiv
=
_Lazy_glGëProgømiv
;

1133 
PFNGLGETPROGRAMINFOLOGPROC
 
	gpglGëProgømInfoLog
=
_Lazy_glGëProgømInfoLog
;

1134 
PFNGLGETSHADERIVPROC
 
	gpglGëShadîiv
=
_Lazy_glGëShadîiv
;

1135 
PFNGLGETSHADERINFOLOGPROC
 
	gpglGëShadîInfoLog
=
_Lazy_glGëShadîInfoLog
;

1136 
PFNGLGETSHADERSOURCEPROC
 
	gpglGëShadîSour˚
=
_Lazy_glGëShadîSour˚
;

1137 
PFNGLGETUNIFORMLOCATIONPROC
 
	gpglGëUnif‹mLoˇti⁄
=
_Lazy_glGëUnif‹mLoˇti⁄
;

1138 
PFNGLGETUNIFORMFVPROC
 
	gpglGëUnif‹mfv
=
_Lazy_glGëUnif‹mfv
;

1139 
PFNGLGETUNIFORMIVPROC
 
	gpglGëUnif‹miv
=
_Lazy_glGëUnif‹miv
;

1140 
PFNGLGETVERTEXATTRIBDVPROC
 
	gpglGëVîãxAâribdv
=
_Lazy_glGëVîãxAâribdv
;

1141 
PFNGLGETVERTEXATTRIBFVPROC
 
	gpglGëVîãxAâribfv
=
_Lazy_glGëVîãxAâribfv
;

1142 
PFNGLGETVERTEXATTRIBIVPROC
 
	gpglGëVîãxAâribiv
=
_Lazy_glGëVîãxAâribiv
;

1143 
PFNGLGETVERTEXATTRIBPOINTERVPROC
 
	gpglGëVîãxAâribPoöãrv
=
_Lazy_glGëVîãxAâribPoöãrv
;

1144 
PFNGLISPROGRAMPROC
 
	gpglIsProgøm
=
_Lazy_glIsProgøm
;

1145 
PFNGLISSHADERPROC
 
	gpglIsShadî
=
_Lazy_glIsShadî
;

1146 
PFNGLLINKPROGRAMPROC
 
	gpglLökProgøm
=
_Lazy_glLökProgøm
;

1147 
PFNGLSHADERSOURCEPROC
 
	gpglShadîSour˚
=
_Lazy_glShadîSour˚
;

1148 
PFNGLUSEPROGRAMPROC
 
	gpglU£Progøm
=
_Lazy_glU£Progøm
;

1149 
PFNGLUNIFORM1FPROC
 
	gpglUnif‹m1f
=
_Lazy_glUnif‹m1f
;

1150 
PFNGLUNIFORM2FPROC
 
	gpglUnif‹m2f
=
_Lazy_glUnif‹m2f
;

1151 
PFNGLUNIFORM3FPROC
 
	gpglUnif‹m3f
=
_Lazy_glUnif‹m3f
;

1152 
PFNGLUNIFORM4FPROC
 
	gpglUnif‹m4f
=
_Lazy_glUnif‹m4f
;

1153 
PFNGLUNIFORM1IPROC
 
	gpglUnif‹m1i
=
_Lazy_glUnif‹m1i
;

1154 
PFNGLUNIFORM2IPROC
 
	gpglUnif‹m2i
=
_Lazy_glUnif‹m2i
;

1155 
PFNGLUNIFORM3IPROC
 
	gpglUnif‹m3i
=
_Lazy_glUnif‹m3i
;

1156 
PFNGLUNIFORM4IPROC
 
	gpglUnif‹m4i
=
_Lazy_glUnif‹m4i
;

1157 
PFNGLUNIFORM1FVPROC
 
	gpglUnif‹m1fv
=
_Lazy_glUnif‹m1fv
;

1158 
PFNGLUNIFORM2FVPROC
 
	gpglUnif‹m2fv
=
_Lazy_glUnif‹m2fv
;

1159 
PFNGLUNIFORM3FVPROC
 
	gpglUnif‹m3fv
=
_Lazy_glUnif‹m3fv
;

1160 
PFNGLUNIFORM4FVPROC
 
	gpglUnif‹m4fv
=
_Lazy_glUnif‹m4fv
;

1161 
PFNGLUNIFORM1IVPROC
 
	gpglUnif‹m1iv
=
_Lazy_glUnif‹m1iv
;

1162 
PFNGLUNIFORM2IVPROC
 
	gpglUnif‹m2iv
=
_Lazy_glUnif‹m2iv
;

1163 
PFNGLUNIFORM3IVPROC
 
	gpglUnif‹m3iv
=
_Lazy_glUnif‹m3iv
;

1164 
PFNGLUNIFORM4IVPROC
 
	gpglUnif‹m4iv
=
_Lazy_glUnif‹m4iv
;

1165 
PFNGLUNIFORMMATRIX2FVPROC
 
	gpglUnif‹mM©rix2fv
=
_Lazy_glUnif‹mM©rix2fv
;

1166 
PFNGLUNIFORMMATRIX3FVPROC
 
	gpglUnif‹mM©rix3fv
=
_Lazy_glUnif‹mM©rix3fv
;

1167 
PFNGLUNIFORMMATRIX4FVPROC
 
	gpglUnif‹mM©rix4fv
=
_Lazy_glUnif‹mM©rix4fv
;

1168 
PFNGLVALIDATEPROGRAMPROC
 
	gpglVÆid©eProgøm
=
_Lazy_glVÆid©eProgøm
;

1169 
PFNGLVERTEXATTRIB1DPROC
 
	gpglVîãxAârib1d
=
_Lazy_glVîãxAârib1d
;

1170 
PFNGLVERTEXATTRIB1DVPROC
 
	gpglVîãxAârib1dv
=
_Lazy_glVîãxAârib1dv
;

1171 
PFNGLVERTEXATTRIB1FPROC
 
	gpglVîãxAârib1f
=
_Lazy_glVîãxAârib1f
;

1172 
PFNGLVERTEXATTRIB1FVPROC
 
	gpglVîãxAârib1fv
=
_Lazy_glVîãxAârib1fv
;

1173 
PFNGLVERTEXATTRIB1SPROC
 
	gpglVîãxAârib1s
=
_Lazy_glVîãxAârib1s
;

1174 
PFNGLVERTEXATTRIB1SVPROC
 
	gpglVîãxAârib1sv
=
_Lazy_glVîãxAârib1sv
;

1175 
PFNGLVERTEXATTRIB2DPROC
 
	gpglVîãxAârib2d
=
_Lazy_glVîãxAârib2d
;

1176 
PFNGLVERTEXATTRIB2DVPROC
 
	gpglVîãxAârib2dv
=
_Lazy_glVîãxAârib2dv
;

1177 
PFNGLVERTEXATTRIB2FPROC
 
	gpglVîãxAârib2f
=
_Lazy_glVîãxAârib2f
;

1178 
PFNGLVERTEXATTRIB2FVPROC
 
	gpglVîãxAârib2fv
=
_Lazy_glVîãxAârib2fv
;

1179 
PFNGLVERTEXATTRIB2SPROC
 
	gpglVîãxAârib2s
=
_Lazy_glVîãxAârib2s
;

1180 
PFNGLVERTEXATTRIB2SVPROC
 
	gpglVîãxAârib2sv
=
_Lazy_glVîãxAârib2sv
;

1181 
PFNGLVERTEXATTRIB3DPROC
 
	gpglVîãxAârib3d
=
_Lazy_glVîãxAârib3d
;

1182 
PFNGLVERTEXATTRIB3DVPROC
 
	gpglVîãxAârib3dv
=
_Lazy_glVîãxAârib3dv
;

1183 
PFNGLVERTEXATTRIB3FPROC
 
	gpglVîãxAârib3f
=
_Lazy_glVîãxAârib3f
;

1184 
PFNGLVERTEXATTRIB3FVPROC
 
	gpglVîãxAârib3fv
=
_Lazy_glVîãxAârib3fv
;

1185 
PFNGLVERTEXATTRIB3SPROC
 
	gpglVîãxAârib3s
=
_Lazy_glVîãxAârib3s
;

1186 
PFNGLVERTEXATTRIB3SVPROC
 
	gpglVîãxAârib3sv
=
_Lazy_glVîãxAârib3sv
;

1187 
PFNGLVERTEXATTRIB4NBVPROC
 
	gpglVîãxAârib4Nbv
=
_Lazy_glVîãxAârib4Nbv
;

1188 
PFNGLVERTEXATTRIB4NIVPROC
 
	gpglVîãxAârib4Niv
=
_Lazy_glVîãxAârib4Niv
;

1189 
PFNGLVERTEXATTRIB4NSVPROC
 
	gpglVîãxAârib4Nsv
=
_Lazy_glVîãxAârib4Nsv
;

1190 
PFNGLVERTEXATTRIB4NUBPROC
 
	gpglVîãxAârib4Nub
=
_Lazy_glVîãxAârib4Nub
;

1191 
PFNGLVERTEXATTRIB4NUBVPROC
 
	gpglVîãxAârib4Nubv
=
_Lazy_glVîãxAârib4Nubv
;

1192 
PFNGLVERTEXATTRIB4NUIVPROC
 
	gpglVîãxAârib4Nuiv
=
_Lazy_glVîãxAârib4Nuiv
;

1193 
PFNGLVERTEXATTRIB4NUSVPROC
 
	gpglVîãxAârib4Nusv
=
_Lazy_glVîãxAârib4Nusv
;

1194 
PFNGLVERTEXATTRIB4BVPROC
 
	gpglVîãxAârib4bv
=
_Lazy_glVîãxAârib4bv
;

1195 
PFNGLVERTEXATTRIB4DPROC
 
	gpglVîãxAârib4d
=
_Lazy_glVîãxAârib4d
;

1196 
PFNGLVERTEXATTRIB4DVPROC
 
	gpglVîãxAârib4dv
=
_Lazy_glVîãxAârib4dv
;

1197 
PFNGLVERTEXATTRIB4FPROC
 
	gpglVîãxAârib4f
=
_Lazy_glVîãxAârib4f
;

1198 
PFNGLVERTEXATTRIB4FVPROC
 
	gpglVîãxAârib4fv
=
_Lazy_glVîãxAârib4fv
;

1199 
PFNGLVERTEXATTRIB4IVPROC
 
	gpglVîãxAârib4iv
=
_Lazy_glVîãxAârib4iv
;

1200 
PFNGLVERTEXATTRIB4SPROC
 
	gpglVîãxAârib4s
=
_Lazy_glVîãxAârib4s
;

1201 
PFNGLVERTEXATTRIB4SVPROC
 
	gpglVîãxAârib4sv
=
_Lazy_glVîãxAârib4sv
;

1202 
PFNGLVERTEXATTRIB4UBVPROC
 
	gpglVîãxAârib4ubv
=
_Lazy_glVîãxAârib4ubv
;

1203 
PFNGLVERTEXATTRIB4UIVPROC
 
	gpglVîãxAârib4uiv
=
_Lazy_glVîãxAârib4uiv
;

1204 
PFNGLVERTEXATTRIB4USVPROC
 
	gpglVîãxAârib4usv
=
_Lazy_glVîãxAârib4usv
;

1205 
PFNGLVERTEXATTRIBPOINTERPROC
 
	gpglVîãxAâribPoöãr
=
_Lazy_glVîãxAâribPoöãr
;

1210 #ifde‡
__GLEE_GL_VERSION_2_1


1211 
__°dˇŒ
 
	$_Lazy_glUnif‹mM©rix2x3fv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, 
GLboﬁón
 
å™•o£
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹mM©rix2x3fv
÷oˇti⁄, cou¡,Åøn•o£, vÆue);
	}
}

1212 
__°dˇŒ
 
	$_Lazy_glUnif‹mM©rix3x2fv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, 
GLboﬁón
 
å™•o£
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹mM©rix3x2fv
÷oˇti⁄, cou¡,Åøn•o£, vÆue);
	}
}

1213 
__°dˇŒ
 
	$_Lazy_glUnif‹mM©rix2x4fv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, 
GLboﬁón
 
å™•o£
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹mM©rix2x4fv
÷oˇti⁄, cou¡,Åøn•o£, vÆue);
	}
}

1214 
__°dˇŒ
 
	$_Lazy_glUnif‹mM©rix4x2fv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, 
GLboﬁón
 
å™•o£
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹mM©rix4x2fv
÷oˇti⁄, cou¡,Åøn•o£, vÆue);
	}
}

1215 
__°dˇŒ
 
	$_Lazy_glUnif‹mM©rix3x4fv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, 
GLboﬁón
 
å™•o£
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹mM©rix3x4fv
÷oˇti⁄, cou¡,Åøn•o£, vÆue);
	}
}

1216 
__°dˇŒ
 
	$_Lazy_glUnif‹mM©rix4x3fv
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, 
GLboﬁón
 
å™•o£
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹mM©rix4x3fv
÷oˇti⁄, cou¡,Åøn•o£, vÆue);
	}
}

1217 
PFNGLUNIFORMMATRIX2X3FVPROC
 
	gpglUnif‹mM©rix2x3fv
=
_Lazy_glUnif‹mM©rix2x3fv
;

1218 
PFNGLUNIFORMMATRIX3X2FVPROC
 
	gpglUnif‹mM©rix3x2fv
=
_Lazy_glUnif‹mM©rix3x2fv
;

1219 
PFNGLUNIFORMMATRIX2X4FVPROC
 
	gpglUnif‹mM©rix2x4fv
=
_Lazy_glUnif‹mM©rix2x4fv
;

1220 
PFNGLUNIFORMMATRIX4X2FVPROC
 
	gpglUnif‹mM©rix4x2fv
=
_Lazy_glUnif‹mM©rix4x2fv
;

1221 
PFNGLUNIFORMMATRIX3X4FVPROC
 
	gpglUnif‹mM©rix3x4fv
=
_Lazy_glUnif‹mM©rix3x4fv
;

1222 
PFNGLUNIFORMMATRIX4X3FVPROC
 
	gpglUnif‹mM©rix4x3fv
=
_Lazy_glUnif‹mM©rix4x3fv
;

1227 #ifde‡
__GLEE_GL_ARB_mu…ôextuª


1228 
__°dˇŒ
 
	$_Lazy_glA˘iveTextuªARB
(
GLíum
 
ãxtuª
Ë{i‡(
	`GLìInô
()Ë
	`glA˘iveTextuªARB
—extuª);
	}
}

1229 
__°dˇŒ
 
	$_Lazy_glClõ¡A˘iveTextuªARB
(
GLíum
 
ãxtuª
Ë{i‡(
	`GLìInô
()Ë
	`glClõ¡A˘iveTextuªARB
—extuª);
	}
}

1230 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1dARB
(
GLíum
 
èrgë
, 
GLdoubÀ
 
s
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1dARB
—¨gë, s);
	}
}

1231 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1dvARB
(
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1dvARB
—¨gë, v);
	}
}

1232 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1fARB
(
GLíum
 
èrgë
, 
GLÊﬂt
 
s
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1fARB
—¨gë, s);
	}
}

1233 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1fvARB
(
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1fvARB
—¨gë, v);
	}
}

1234 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1iARB
(
GLíum
 
èrgë
, 
GLöt
 
s
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1iARB
—¨gë, s);
	}
}

1235 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1ivARB
(
GLíum
 
èrgë
, c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1ivARB
—¨gë, v);
	}
}

1236 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1sARB
(
GLíum
 
èrgë
, 
GLsh‹t
 
s
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1sARB
—¨gë, s);
	}
}

1237 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1svARB
(
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1svARB
—¨gë, v);
	}
}

1238 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2dARB
(
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2dARB
—¨gë, s,Å);
	}
}

1239 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2dvARB
(
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2dvARB
—¨gë, v);
	}
}

1240 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2fARB
(
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2fARB
—¨gë, s,Å);
	}
}

1241 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2fvARB
(
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2fvARB
—¨gë, v);
	}
}

1242 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2iARB
(
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2iARB
—¨gë, s,Å);
	}
}

1243 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2ivARB
(
GLíum
 
èrgë
, c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2ivARB
—¨gë, v);
	}
}

1244 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2sARB
(
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2sARB
—¨gë, s,Å);
	}
}

1245 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2svARB
(
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2svARB
—¨gë, v);
	}
}

1246 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3dARB
(
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
, GLdoubÀ 
r
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3dARB
—¨gë, s,Å,Ñ);
	}
}

1247 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3dvARB
(
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3dvARB
—¨gë, v);
	}
}

1248 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3fARB
(
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3fARB
—¨gë, s,Å,Ñ);
	}
}

1249 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3fvARB
(
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3fvARB
—¨gë, v);
	}
}

1250 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3iARB
(
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
, GLöà
r
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3iARB
—¨gë, s,Å,Ñ);
	}
}

1251 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3ivARB
(
GLíum
 
èrgë
, c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3ivARB
—¨gë, v);
	}
}

1252 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3sARB
(
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
, GLsh‹à
r
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3sARB
—¨gë, s,Å,Ñ);
	}
}

1253 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3svARB
(
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3svARB
—¨gë, v);
	}
}

1254 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4dARB
(
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
, GLdoubÀ 
r
, GLdoubÀ 
q
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4dARB
—¨gë, s,Å,Ñ, q);
	}
}

1255 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4dvARB
(
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4dvARB
—¨gë, v);
	}
}

1256 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4fARB
(
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
, GLÊﬂà
q
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4fARB
—¨gë, s,Å,Ñ, q);
	}
}

1257 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4fvARB
(
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4fvARB
—¨gë, v);
	}
}

1258 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4iARB
(
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
, GLöà
r
, GLöà
q
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4iARB
—¨gë, s,Å,Ñ, q);
	}
}

1259 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4ivARB
(
GLíum
 
èrgë
, c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4ivARB
—¨gë, v);
	}
}

1260 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4sARB
(
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
, GLsh‹à
r
, GLsh‹à
q
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4sARB
—¨gë, s,Å,Ñ, q);
	}
}

1261 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4svARB
(
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4svARB
—¨gë, v);
	}
}

1262 
PFNGLACTIVETEXTUREARBPROC
 
	gpglA˘iveTextuªARB
=
_Lazy_glA˘iveTextuªARB
;

1263 
PFNGLCLIENTACTIVETEXTUREARBPROC
 
	gpglClõ¡A˘iveTextuªARB
=
_Lazy_glClõ¡A˘iveTextuªARB
;

1264 
PFNGLMULTITEXCOORD1DARBPROC
 
	gpglMu…iTexCo‹d1dARB
=
_Lazy_glMu…iTexCo‹d1dARB
;

1265 
PFNGLMULTITEXCOORD1DVARBPROC
 
	gpglMu…iTexCo‹d1dvARB
=
_Lazy_glMu…iTexCo‹d1dvARB
;

1266 
PFNGLMULTITEXCOORD1FARBPROC
 
	gpglMu…iTexCo‹d1fARB
=
_Lazy_glMu…iTexCo‹d1fARB
;

1267 
PFNGLMULTITEXCOORD1FVARBPROC
 
	gpglMu…iTexCo‹d1fvARB
=
_Lazy_glMu…iTexCo‹d1fvARB
;

1268 
PFNGLMULTITEXCOORD1IARBPROC
 
	gpglMu…iTexCo‹d1iARB
=
_Lazy_glMu…iTexCo‹d1iARB
;

1269 
PFNGLMULTITEXCOORD1IVARBPROC
 
	gpglMu…iTexCo‹d1ivARB
=
_Lazy_glMu…iTexCo‹d1ivARB
;

1270 
PFNGLMULTITEXCOORD1SARBPROC
 
	gpglMu…iTexCo‹d1sARB
=
_Lazy_glMu…iTexCo‹d1sARB
;

1271 
PFNGLMULTITEXCOORD1SVARBPROC
 
	gpglMu…iTexCo‹d1svARB
=
_Lazy_glMu…iTexCo‹d1svARB
;

1272 
PFNGLMULTITEXCOORD2DARBPROC
 
	gpglMu…iTexCo‹d2dARB
=
_Lazy_glMu…iTexCo‹d2dARB
;

1273 
PFNGLMULTITEXCOORD2DVARBPROC
 
	gpglMu…iTexCo‹d2dvARB
=
_Lazy_glMu…iTexCo‹d2dvARB
;

1274 
PFNGLMULTITEXCOORD2FARBPROC
 
	gpglMu…iTexCo‹d2fARB
=
_Lazy_glMu…iTexCo‹d2fARB
;

1275 
PFNGLMULTITEXCOORD2FVARBPROC
 
	gpglMu…iTexCo‹d2fvARB
=
_Lazy_glMu…iTexCo‹d2fvARB
;

1276 
PFNGLMULTITEXCOORD2IARBPROC
 
	gpglMu…iTexCo‹d2iARB
=
_Lazy_glMu…iTexCo‹d2iARB
;

1277 
PFNGLMULTITEXCOORD2IVARBPROC
 
	gpglMu…iTexCo‹d2ivARB
=
_Lazy_glMu…iTexCo‹d2ivARB
;

1278 
PFNGLMULTITEXCOORD2SARBPROC
 
	gpglMu…iTexCo‹d2sARB
=
_Lazy_glMu…iTexCo‹d2sARB
;

1279 
PFNGLMULTITEXCOORD2SVARBPROC
 
	gpglMu…iTexCo‹d2svARB
=
_Lazy_glMu…iTexCo‹d2svARB
;

1280 
PFNGLMULTITEXCOORD3DARBPROC
 
	gpglMu…iTexCo‹d3dARB
=
_Lazy_glMu…iTexCo‹d3dARB
;

1281 
PFNGLMULTITEXCOORD3DVARBPROC
 
	gpglMu…iTexCo‹d3dvARB
=
_Lazy_glMu…iTexCo‹d3dvARB
;

1282 
PFNGLMULTITEXCOORD3FARBPROC
 
	gpglMu…iTexCo‹d3fARB
=
_Lazy_glMu…iTexCo‹d3fARB
;

1283 
PFNGLMULTITEXCOORD3FVARBPROC
 
	gpglMu…iTexCo‹d3fvARB
=
_Lazy_glMu…iTexCo‹d3fvARB
;

1284 
PFNGLMULTITEXCOORD3IARBPROC
 
	gpglMu…iTexCo‹d3iARB
=
_Lazy_glMu…iTexCo‹d3iARB
;

1285 
PFNGLMULTITEXCOORD3IVARBPROC
 
	gpglMu…iTexCo‹d3ivARB
=
_Lazy_glMu…iTexCo‹d3ivARB
;

1286 
PFNGLMULTITEXCOORD3SARBPROC
 
	gpglMu…iTexCo‹d3sARB
=
_Lazy_glMu…iTexCo‹d3sARB
;

1287 
PFNGLMULTITEXCOORD3SVARBPROC
 
	gpglMu…iTexCo‹d3svARB
=
_Lazy_glMu…iTexCo‹d3svARB
;

1288 
PFNGLMULTITEXCOORD4DARBPROC
 
	gpglMu…iTexCo‹d4dARB
=
_Lazy_glMu…iTexCo‹d4dARB
;

1289 
PFNGLMULTITEXCOORD4DVARBPROC
 
	gpglMu…iTexCo‹d4dvARB
=
_Lazy_glMu…iTexCo‹d4dvARB
;

1290 
PFNGLMULTITEXCOORD4FARBPROC
 
	gpglMu…iTexCo‹d4fARB
=
_Lazy_glMu…iTexCo‹d4fARB
;

1291 
PFNGLMULTITEXCOORD4FVARBPROC
 
	gpglMu…iTexCo‹d4fvARB
=
_Lazy_glMu…iTexCo‹d4fvARB
;

1292 
PFNGLMULTITEXCOORD4IARBPROC
 
	gpglMu…iTexCo‹d4iARB
=
_Lazy_glMu…iTexCo‹d4iARB
;

1293 
PFNGLMULTITEXCOORD4IVARBPROC
 
	gpglMu…iTexCo‹d4ivARB
=
_Lazy_glMu…iTexCo‹d4ivARB
;

1294 
PFNGLMULTITEXCOORD4SARBPROC
 
	gpglMu…iTexCo‹d4sARB
=
_Lazy_glMu…iTexCo‹d4sARB
;

1295 
PFNGLMULTITEXCOORD4SVARBPROC
 
	gpglMu…iTexCo‹d4svARB
=
_Lazy_glMu…iTexCo‹d4svARB
;

1300 #ifde‡
__GLEE_GL_ARB_å™•o£_m©rix


1301 
__°dˇŒ
 
	$_Lazy_glLﬂdTøn•o£M©rixfARB
(c⁄° 
GLÊﬂt
 * 
m
Ë{i‡(
	`GLìInô
()Ë
	`glLﬂdTøn•o£M©rixfARB
(m);
	}
}

1302 
__°dˇŒ
 
	$_Lazy_glLﬂdTøn•o£M©rixdARB
(c⁄° 
GLdoubÀ
 * 
m
Ë{i‡(
	`GLìInô
()Ë
	`glLﬂdTøn•o£M©rixdARB
(m);
	}
}

1303 
__°dˇŒ
 
	$_Lazy_glMu…Tøn•o£M©rixfARB
(c⁄° 
GLÊﬂt
 * 
m
Ë{i‡(
	`GLìInô
()Ë
	`glMu…Tøn•o£M©rixfARB
(m);
	}
}

1304 
__°dˇŒ
 
	$_Lazy_glMu…Tøn•o£M©rixdARB
(c⁄° 
GLdoubÀ
 * 
m
Ë{i‡(
	`GLìInô
()Ë
	`glMu…Tøn•o£M©rixdARB
(m);
	}
}

1305 
PFNGLLOADTRANSPOSEMATRIXFARBPROC
 
	gpglLﬂdTøn•o£M©rixfARB
=
_Lazy_glLﬂdTøn•o£M©rixfARB
;

1306 
PFNGLLOADTRANSPOSEMATRIXDARBPROC
 
	gpglLﬂdTøn•o£M©rixdARB
=
_Lazy_glLﬂdTøn•o£M©rixdARB
;

1307 
PFNGLMULTTRANSPOSEMATRIXFARBPROC
 
	gpglMu…Tøn•o£M©rixfARB
=
_Lazy_glMu…Tøn•o£M©rixfARB
;

1308 
PFNGLMULTTRANSPOSEMATRIXDARBPROC
 
	gpglMu…Tøn•o£M©rixdARB
=
_Lazy_glMu…Tøn•o£M©rixdARB
;

1313 #ifde‡
__GLEE_GL_ARB_mu…ißm∂e


1314 
__°dˇŒ
 
	$_Lazy_glSam∂eCovîageARB
(
GL˛ampf
 
vÆue
, 
GLboﬁón
 
övît
Ë{i‡(
	`GLìInô
()Ë
	`glSam∂eCovîageARB
(vÆue, invît);
	}
}

1315 
PFNGLSAMPLECOVERAGEARBPROC
 
	gpglSam∂eCovîageARB
=
_Lazy_glSam∂eCovîageARB
;

1320 #ifde‡
__GLEE_GL_ARB_ãxtuª_ív_add


1325 #ifde‡
__GLEE_GL_ARB_ãxtuª_cube_m≠


1330 #ifde‡
__GLEE_GL_ARB_ãxtuª_com¥essi⁄


1331 
__°dˇŒ
 
	$_Lazy_glCom¥es£dTexImage3DARB
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLöà
b‹dî
, GLsizeò
imageSize
, c⁄° 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glCom¥es£dTexImage3DARB
—¨gë,Üevñ, i¡î«lf‹m©, width, height, dïth, b‹dî, imageSize, d©a);
	}
}

1332 
__°dˇŒ
 
	$_Lazy_glCom¥es£dTexImage2DARB
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLöà
b‹dî
, GLsizeò
imageSize
, c⁄° 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glCom¥es£dTexImage2DARB
—¨gë,Üevñ, i¡î«lf‹m©, width, height, b‹dî, imageSize, d©a);
	}
}

1333 
__°dˇŒ
 
	$_Lazy_glCom¥es£dTexImage1DARB
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLöà
b‹dî
, GLsizeò
imageSize
, c⁄° 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glCom¥es£dTexImage1DARB
—¨gë,Üevñ, i¡î«lf‹m©, width, b‹dî, imageSize, d©a);
	}
}

1334 
__°dˇŒ
 
	$_Lazy_glCom¥es£dTexSubImage3DARB
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, GLöà
yoff£t
, GLöà
zoff£t
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLíum 
f‹m©
, GLsizeò
imageSize
, c⁄° 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glCom¥es£dTexSubImage3DARB
—¨gë,Üevñ, xoff£t, yoff£t, zoff£t, width, height, dïth, f‹m©, imageSize, d©a);
	}
}

1335 
__°dˇŒ
 
	$_Lazy_glCom¥es£dTexSubImage2DARB
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, GLöà
yoff£t
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
, GLsizeò
imageSize
, c⁄° 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glCom¥es£dTexSubImage2DARB
—¨gë,Üevñ, xoff£t, yoff£t, width, height, f‹m©, imageSize, d©a);
	}
}

1336 
__°dˇŒ
 
	$_Lazy_glCom¥es£dTexSubImage1DARB
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, 
GLsizei
 
width
, GLíum 
f‹m©
, GLsizeò
imageSize
, c⁄° 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glCom¥es£dTexSubImage1DARB
—¨gë,Üevñ, xoff£t, width, f‹m©, imageSize, d©a);
	}
}

1337 
__°dˇŒ
 
	$_Lazy_glGëCom¥es£dTexImageARB
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, 
GLvoid
 * 
img
Ë{i‡(
	`GLìInô
()Ë
	`glGëCom¥es£dTexImageARB
—¨gë,Üevñ, img);
	}
}

1338 
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC
 
	gpglCom¥es£dTexImage3DARB
=
_Lazy_glCom¥es£dTexImage3DARB
;

1339 
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC
 
	gpglCom¥es£dTexImage2DARB
=
_Lazy_glCom¥es£dTexImage2DARB
;

1340 
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC
 
	gpglCom¥es£dTexImage1DARB
=
_Lazy_glCom¥es£dTexImage1DARB
;

1341 
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC
 
	gpglCom¥es£dTexSubImage3DARB
=
_Lazy_glCom¥es£dTexSubImage3DARB
;

1342 
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC
 
	gpglCom¥es£dTexSubImage2DARB
=
_Lazy_glCom¥es£dTexSubImage2DARB
;

1343 
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC
 
	gpglCom¥es£dTexSubImage1DARB
=
_Lazy_glCom¥es£dTexSubImage1DARB
;

1344 
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC
 
	gpglGëCom¥es£dTexImageARB
=
_Lazy_glGëCom¥es£dTexImageARB
;

1349 #ifde‡
__GLEE_GL_ARB_ãxtuª_b‹dî_˛amp


1354 #ifde‡
__GLEE_GL_ARB_poöt_∑ømëîs


1355 
__°dˇŒ
 
	$_Lazy_glPoötP¨amëîfARB
(
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glPoötP¨amëîfARB
’«me,Ö¨am);
	}
}

1356 
__°dˇŒ
 
	$_Lazy_glPoötP¨amëîfvARB
(
GLíum
 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glPoötP¨amëîfvARB
’«me,Ö¨ams);
	}
}

1357 
PFNGLPOINTPARAMETERFARBPROC
 
	gpglPoötP¨amëîfARB
=
_Lazy_glPoötP¨amëîfARB
;

1358 
PFNGLPOINTPARAMETERFVARBPROC
 
	gpglPoötP¨amëîfvARB
=
_Lazy_glPoötP¨amëîfvARB
;

1363 #ifde‡
__GLEE_GL_ARB_vîãx_bÀnd


1364 
__°dˇŒ
 
	$_Lazy_glWeightbvARB
(
GLöt
 
size
, c⁄° 
GLbyã
 * 
weights
Ë{i‡(
	`GLìInô
()Ë
	`glWeightbvARB
(size, weights);
	}
}

1365 
__°dˇŒ
 
	$_Lazy_glWeightsvARB
(
GLöt
 
size
, c⁄° 
GLsh‹t
 * 
weights
Ë{i‡(
	`GLìInô
()Ë
	`glWeightsvARB
(size, weights);
	}
}

1366 
__°dˇŒ
 
	$_Lazy_glWeightivARB
(
GLöt
 
size
, c⁄° GLöà* 
weights
Ë{i‡(
	`GLìInô
()Ë
	`glWeightivARB
(size, weights);
	}
}

1367 
__°dˇŒ
 
	$_Lazy_glWeightfvARB
(
GLöt
 
size
, c⁄° 
GLÊﬂt
 * 
weights
Ë{i‡(
	`GLìInô
()Ë
	`glWeightfvARB
(size, weights);
	}
}

1368 
__°dˇŒ
 
	$_Lazy_glWeightdvARB
(
GLöt
 
size
, c⁄° 
GLdoubÀ
 * 
weights
Ë{i‡(
	`GLìInô
()Ë
	`glWeightdvARB
(size, weights);
	}
}

1369 
__°dˇŒ
 
	$_Lazy_glWeightubvARB
(
GLöt
 
size
, c⁄° 
GLubyã
 * 
weights
Ë{i‡(
	`GLìInô
()Ë
	`glWeightubvARB
(size, weights);
	}
}

1370 
__°dˇŒ
 
	$_Lazy_glWeightusvARB
(
GLöt
 
size
, c⁄° 
GLush‹t
 * 
weights
Ë{i‡(
	`GLìInô
()Ë
	`glWeightusvARB
(size, weights);
	}
}

1371 
__°dˇŒ
 
	$_Lazy_glWeightuivARB
(
GLöt
 
size
, c⁄° 
GLuöt
 * 
weights
Ë{i‡(
	`GLìInô
()Ë
	`glWeightuivARB
(size, weights);
	}
}

1372 
__°dˇŒ
 
	$_Lazy_glWeightPoöãrARB
(
GLöt
 
size
, 
GLíum
 
ty≥
, 
GLsizei
 
°ride
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glWeightPoöãrARB
(size,Åy≥, såide,Öoöãr);
	}
}

1373 
__°dˇŒ
 
	$_Lazy_glVîãxBÀndARB
(
GLöt
 
cou¡
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxBÀndARB
(cou¡);
	}
}

1374 
PFNGLWEIGHTBVARBPROC
 
	gpglWeightbvARB
=
_Lazy_glWeightbvARB
;

1375 
PFNGLWEIGHTSVARBPROC
 
	gpglWeightsvARB
=
_Lazy_glWeightsvARB
;

1376 
PFNGLWEIGHTIVARBPROC
 
	gpglWeightivARB
=
_Lazy_glWeightivARB
;

1377 
PFNGLWEIGHTFVARBPROC
 
	gpglWeightfvARB
=
_Lazy_glWeightfvARB
;

1378 
PFNGLWEIGHTDVARBPROC
 
	gpglWeightdvARB
=
_Lazy_glWeightdvARB
;

1379 
PFNGLWEIGHTUBVARBPROC
 
	gpglWeightubvARB
=
_Lazy_glWeightubvARB
;

1380 
PFNGLWEIGHTUSVARBPROC
 
	gpglWeightusvARB
=
_Lazy_glWeightusvARB
;

1381 
PFNGLWEIGHTUIVARBPROC
 
	gpglWeightuivARB
=
_Lazy_glWeightuivARB
;

1382 
PFNGLWEIGHTPOINTERARBPROC
 
	gpglWeightPoöãrARB
=
_Lazy_glWeightPoöãrARB
;

1383 
PFNGLVERTEXBLENDARBPROC
 
	gpglVîãxBÀndARB
=
_Lazy_glVîãxBÀndARB
;

1388 #ifde‡
__GLEE_GL_ARB_m©rix_∑Àâe


1389 
__°dˇŒ
 
	$_Lazy_glCuºítPÆëãM©rixARB
(
GLöt
 
ödex
Ë{i‡(
	`GLìInô
()Ë
	`glCuºítPÆëãM©rixARB
(ödex);
	}
}

1390 
__°dˇŒ
 
	$_Lazy_glM©rixIndexubvARB
(
GLöt
 
size
, c⁄° 
GLubyã
 * 
ödi˚s
Ë{i‡(
	`GLìInô
()Ë
	`glM©rixIndexubvARB
(size, indi˚s);
	}
}

1391 
__°dˇŒ
 
	$_Lazy_glM©rixIndexusvARB
(
GLöt
 
size
, c⁄° 
GLush‹t
 * 
ödi˚s
Ë{i‡(
	`GLìInô
()Ë
	`glM©rixIndexusvARB
(size, indi˚s);
	}
}

1392 
__°dˇŒ
 
	$_Lazy_glM©rixIndexuivARB
(
GLöt
 
size
, c⁄° 
GLuöt
 * 
ödi˚s
Ë{i‡(
	`GLìInô
()Ë
	`glM©rixIndexuivARB
(size, indi˚s);
	}
}

1393 
__°dˇŒ
 
	$_Lazy_glM©rixIndexPoöãrARB
(
GLöt
 
size
, 
GLíum
 
ty≥
, 
GLsizei
 
°ride
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glM©rixIndexPoöãrARB
(size,Åy≥, såide,Öoöãr);
	}
}

1394 
PFNGLCURRENTPALETTEMATRIXARBPROC
 
	gpglCuºítPÆëãM©rixARB
=
_Lazy_glCuºítPÆëãM©rixARB
;

1395 
PFNGLMATRIXINDEXUBVARBPROC
 
	gpglM©rixIndexubvARB
=
_Lazy_glM©rixIndexubvARB
;

1396 
PFNGLMATRIXINDEXUSVARBPROC
 
	gpglM©rixIndexusvARB
=
_Lazy_glM©rixIndexusvARB
;

1397 
PFNGLMATRIXINDEXUIVARBPROC
 
	gpglM©rixIndexuivARB
=
_Lazy_glM©rixIndexuivARB
;

1398 
PFNGLMATRIXINDEXPOINTERARBPROC
 
	gpglM©rixIndexPoöãrARB
=
_Lazy_glM©rixIndexPoöãrARB
;

1403 #ifde‡
__GLEE_GL_ARB_ãxtuª_ív_comböe


1408 #ifde‡
__GLEE_GL_ARB_ãxtuª_ív_¸ossb¨


1413 #ifde‡
__GLEE_GL_ARB_ãxtuª_ív_dŸ3


1418 #ifde‡
__GLEE_GL_ARB_ãxtuª_múr‹ed_ª≥©


1423 #ifde‡
__GLEE_GL_ARB_dïth_ãxtuª


1428 #ifde‡
__GLEE_GL_ARB_shadow


1433 #ifde‡
__GLEE_GL_ARB_shadow_ambõ¡


1438 #ifde‡
__GLEE_GL_ARB_wödow_pos


1439 
__°dˇŒ
 
	$_Lazy_glWödowPos2dARB
(
GLdoubÀ
 
x
, GLdoubÀ 
y
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2dARB
(x, y);
	}
}

1440 
__°dˇŒ
 
	$_Lazy_glWödowPos2dvARB
(c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2dvARB
(v);
	}
}

1441 
__°dˇŒ
 
	$_Lazy_glWödowPos2fARB
(
GLÊﬂt
 
x
, GLÊﬂà
y
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2fARB
(x, y);
	}
}

1442 
__°dˇŒ
 
	$_Lazy_glWödowPos2fvARB
(c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2fvARB
(v);
	}
}

1443 
__°dˇŒ
 
	$_Lazy_glWödowPos2iARB
(
GLöt
 
x
, GLöà
y
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2iARB
(x, y);
	}
}

1444 
__°dˇŒ
 
	$_Lazy_glWödowPos2ivARB
(c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2ivARB
(v);
	}
}

1445 
__°dˇŒ
 
	$_Lazy_glWödowPos2sARB
(
GLsh‹t
 
x
, GLsh‹à
y
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2sARB
(x, y);
	}
}

1446 
__°dˇŒ
 
	$_Lazy_glWödowPos2svARB
(c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2svARB
(v);
	}
}

1447 
__°dˇŒ
 
	$_Lazy_glWödowPos3dARB
(
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3dARB
(x, y, z);
	}
}

1448 
__°dˇŒ
 
	$_Lazy_glWödowPos3dvARB
(c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3dvARB
(v);
	}
}

1449 
__°dˇŒ
 
	$_Lazy_glWödowPos3fARB
(
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3fARB
(x, y, z);
	}
}

1450 
__°dˇŒ
 
	$_Lazy_glWödowPos3fvARB
(c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3fvARB
(v);
	}
}

1451 
__°dˇŒ
 
	$_Lazy_glWödowPos3iARB
(
GLöt
 
x
, GLöà
y
, GLöà
z
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3iARB
(x, y, z);
	}
}

1452 
__°dˇŒ
 
	$_Lazy_glWödowPos3ivARB
(c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3ivARB
(v);
	}
}

1453 
__°dˇŒ
 
	$_Lazy_glWödowPos3sARB
(
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3sARB
(x, y, z);
	}
}

1454 
__°dˇŒ
 
	$_Lazy_glWödowPos3svARB
(c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3svARB
(v);
	}
}

1455 
PFNGLWINDOWPOS2DARBPROC
 
	gpglWödowPos2dARB
=
_Lazy_glWödowPos2dARB
;

1456 
PFNGLWINDOWPOS2DVARBPROC
 
	gpglWödowPos2dvARB
=
_Lazy_glWödowPos2dvARB
;

1457 
PFNGLWINDOWPOS2FARBPROC
 
	gpglWödowPos2fARB
=
_Lazy_glWödowPos2fARB
;

1458 
PFNGLWINDOWPOS2FVARBPROC
 
	gpglWödowPos2fvARB
=
_Lazy_glWödowPos2fvARB
;

1459 
PFNGLWINDOWPOS2IARBPROC
 
	gpglWödowPos2iARB
=
_Lazy_glWödowPos2iARB
;

1460 
PFNGLWINDOWPOS2IVARBPROC
 
	gpglWödowPos2ivARB
=
_Lazy_glWödowPos2ivARB
;

1461 
PFNGLWINDOWPOS2SARBPROC
 
	gpglWödowPos2sARB
=
_Lazy_glWödowPos2sARB
;

1462 
PFNGLWINDOWPOS2SVARBPROC
 
	gpglWödowPos2svARB
=
_Lazy_glWödowPos2svARB
;

1463 
PFNGLWINDOWPOS3DARBPROC
 
	gpglWödowPos3dARB
=
_Lazy_glWödowPos3dARB
;

1464 
PFNGLWINDOWPOS3DVARBPROC
 
	gpglWödowPos3dvARB
=
_Lazy_glWödowPos3dvARB
;

1465 
PFNGLWINDOWPOS3FARBPROC
 
	gpglWödowPos3fARB
=
_Lazy_glWödowPos3fARB
;

1466 
PFNGLWINDOWPOS3FVARBPROC
 
	gpglWödowPos3fvARB
=
_Lazy_glWödowPos3fvARB
;

1467 
PFNGLWINDOWPOS3IARBPROC
 
	gpglWödowPos3iARB
=
_Lazy_glWödowPos3iARB
;

1468 
PFNGLWINDOWPOS3IVARBPROC
 
	gpglWödowPos3ivARB
=
_Lazy_glWödowPos3ivARB
;

1469 
PFNGLWINDOWPOS3SARBPROC
 
	gpglWödowPos3sARB
=
_Lazy_glWödowPos3sARB
;

1470 
PFNGLWINDOWPOS3SVARBPROC
 
	gpglWödowPos3svARB
=
_Lazy_glWödowPos3svARB
;

1475 #ifde‡
__GLEE_GL_ARB_vîãx_¥ogøm


1476 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1dARB
(
GLuöt
 
ödex
, 
GLdoubÀ
 
x
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1dARB
(ödex, x);
	}
}

1477 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1dvARB
(
GLuöt
 
ödex
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1dvARB
(ödex, v);
	}
}

1478 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1fARB
(
GLuöt
 
ödex
, 
GLÊﬂt
 
x
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1fARB
(ödex, x);
	}
}

1479 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1fvARB
(
GLuöt
 
ödex
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1fvARB
(ödex, v);
	}
}

1480 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1sARB
(
GLuöt
 
ödex
, 
GLsh‹t
 
x
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1sARB
(ödex, x);
	}
}

1481 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1svARB
(
GLuöt
 
ödex
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1svARB
(ödex, v);
	}
}

1482 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2dARB
(
GLuöt
 
ödex
, 
GLdoubÀ
 
x
, GLdoubÀ 
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2dARB
(ödex, x, y);
	}
}

1483 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2dvARB
(
GLuöt
 
ödex
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2dvARB
(ödex, v);
	}
}

1484 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2fARB
(
GLuöt
 
ödex
, 
GLÊﬂt
 
x
, GLÊﬂà
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2fARB
(ödex, x, y);
	}
}

1485 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2fvARB
(
GLuöt
 
ödex
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2fvARB
(ödex, v);
	}
}

1486 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2sARB
(
GLuöt
 
ödex
, 
GLsh‹t
 
x
, GLsh‹à
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2sARB
(ödex, x, y);
	}
}

1487 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2svARB
(
GLuöt
 
ödex
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2svARB
(ödex, v);
	}
}

1488 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3dARB
(
GLuöt
 
ödex
, 
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3dARB
(ödex, x, y, z);
	}
}

1489 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3dvARB
(
GLuöt
 
ödex
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3dvARB
(ödex, v);
	}
}

1490 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3fARB
(
GLuöt
 
ödex
, 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3fARB
(ödex, x, y, z);
	}
}

1491 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3fvARB
(
GLuöt
 
ödex
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3fvARB
(ödex, v);
	}
}

1492 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3sARB
(
GLuöt
 
ödex
, 
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3sARB
(ödex, x, y, z);
	}
}

1493 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3svARB
(
GLuöt
 
ödex
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3svARB
(ödex, v);
	}
}

1494 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4NbvARB
(
GLuöt
 
ödex
, c⁄° 
GLbyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4NbvARB
(ödex, v);
	}
}

1495 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4NivARB
(
GLuöt
 
ödex
, c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4NivARB
(ödex, v);
	}
}

1496 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4NsvARB
(
GLuöt
 
ödex
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4NsvARB
(ödex, v);
	}
}

1497 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4NubARB
(
GLuöt
 
ödex
, 
GLubyã
 
x
, GLubyã 
y
, GLubyã 
z
, GLubyã 
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4NubARB
(ödex, x, y, z, w);
	}
}

1498 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4NubvARB
(
GLuöt
 
ödex
, c⁄° 
GLubyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4NubvARB
(ödex, v);
	}
}

1499 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4NuivARB
(
GLuöt
 
ödex
, c⁄° GLuöà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4NuivARB
(ödex, v);
	}
}

1500 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4NusvARB
(
GLuöt
 
ödex
, c⁄° 
GLush‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4NusvARB
(ödex, v);
	}
}

1501 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4bvARB
(
GLuöt
 
ödex
, c⁄° 
GLbyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4bvARB
(ödex, v);
	}
}

1502 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4dARB
(
GLuöt
 
ödex
, 
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
, GLdoubÀ 
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4dARB
(ödex, x, y, z, w);
	}
}

1503 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4dvARB
(
GLuöt
 
ödex
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4dvARB
(ödex, v);
	}
}

1504 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4fARB
(
GLuöt
 
ödex
, 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
, GLÊﬂà
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4fARB
(ödex, x, y, z, w);
	}
}

1505 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4fvARB
(
GLuöt
 
ödex
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4fvARB
(ödex, v);
	}
}

1506 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4ivARB
(
GLuöt
 
ödex
, c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4ivARB
(ödex, v);
	}
}

1507 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4sARB
(
GLuöt
 
ödex
, 
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
, GLsh‹à
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4sARB
(ödex, x, y, z, w);
	}
}

1508 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4svARB
(
GLuöt
 
ödex
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4svARB
(ödex, v);
	}
}

1509 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4ubvARB
(
GLuöt
 
ödex
, c⁄° 
GLubyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4ubvARB
(ödex, v);
	}
}

1510 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4uivARB
(
GLuöt
 
ödex
, c⁄° GLuöà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4uivARB
(ödex, v);
	}
}

1511 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4usvARB
(
GLuöt
 
ödex
, c⁄° 
GLush‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4usvARB
(ödex, v);
	}
}

1512 
__°dˇŒ
 
	$_Lazy_glVîãxAâribPoöãrARB
(
GLuöt
 
ödex
, 
GLöt
 
size
, 
GLíum
 
ty≥
, 
GLboﬁón
 
n‹mÆized
, 
GLsizei
 
°ride
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribPoöãrARB
(ödex, size,Åy≥,Ç‹mÆized, såide,Öoöãr);
	}
}

1513 
__°dˇŒ
 
	$_Lazy_glE«bÀVîãxAâribAºayARB
(
GLuöt
 
ödex
Ë{i‡(
	`GLìInô
()Ë
	`glE«bÀVîãxAâribAºayARB
(ödex);
	}
}

1514 
__°dˇŒ
 
	$_Lazy_glDißbÀVîãxAâribAºayARB
(
GLuöt
 
ödex
Ë{i‡(
	`GLìInô
()Ë
	`glDißbÀVîãxAâribAºayARB
(ödex);
	}
}

1515 
__°dˇŒ
 
	$_Lazy_glProgømSåögARB
(
GLíum
 
èrgë
, GLíum 
f‹m©
, 
GLsizei
 
Àn
, c⁄° 
GLvoid
 * 
°rög
Ë{i‡(
	`GLìInô
()Ë
	`glProgømSåögARB
—¨gë, f‹m©,Üí, såög);
	}
}

1516 
__°dˇŒ
 
	$_Lazy_glBödProgømARB
(
GLíum
 
èrgë
, 
GLuöt
 
¥ogøm
Ë{i‡(
	`GLìInô
()Ë
	`glBödProgømARB
—¨gë,Örogøm);
	}
}

1517 
__°dˇŒ
 
	$_Lazy_glDñëeProgømsARB
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
¥ogøms
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeProgømsARB
“,Örogøms);
	}
}

1518 
__°dˇŒ
 
	$_Lazy_glGíProgømsARB
(
GLsizei
 
n
, 
GLuöt
 * 
¥ogøms
Ë{i‡(
	`GLìInô
()Ë
	`glGíProgømsARB
“,Örogøms);
	}
}

1519 
__°dˇŒ
 
	$_Lazy_glProgømEnvP¨amëî4dARB
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
, GLdoubÀ 
w
Ë{i‡(
	`GLìInô
()Ë
	`glProgømEnvP¨amëî4dARB
—¨gë, index, x, y, z, w);
	}
}

1520 
__°dˇŒ
 
	$_Lazy_glProgømEnvP¨amëî4dvARB
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, c⁄° 
GLdoubÀ
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glProgømEnvP¨amëî4dvARB
—¨gë, index,Ö¨ams);
	}
}

1521 
__°dˇŒ
 
	$_Lazy_glProgømEnvP¨amëî4fARB
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
, GLÊﬂà
w
Ë{i‡(
	`GLìInô
()Ë
	`glProgømEnvP¨amëî4fARB
—¨gë, index, x, y, z, w);
	}
}

1522 
__°dˇŒ
 
	$_Lazy_glProgømEnvP¨amëî4fvARB
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glProgømEnvP¨amëî4fvARB
—¨gë, index,Ö¨ams);
	}
}

1523 
__°dˇŒ
 
	$_Lazy_glProgømLoˇlP¨amëî4dARB
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
, GLdoubÀ 
w
Ë{i‡(
	`GLìInô
()Ë
	`glProgømLoˇlP¨amëî4dARB
—¨gë, index, x, y, z, w);
	}
}

1524 
__°dˇŒ
 
	$_Lazy_glProgømLoˇlP¨amëî4dvARB
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, c⁄° 
GLdoubÀ
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glProgømLoˇlP¨amëî4dvARB
—¨gë, index,Ö¨ams);
	}
}

1525 
__°dˇŒ
 
	$_Lazy_glProgømLoˇlP¨amëî4fARB
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
, GLÊﬂà
w
Ë{i‡(
	`GLìInô
()Ë
	`glProgømLoˇlP¨amëî4fARB
—¨gë, index, x, y, z, w);
	}
}

1526 
__°dˇŒ
 
	$_Lazy_glProgømLoˇlP¨amëî4fvARB
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glProgømLoˇlP¨amëî4fvARB
—¨gë, index,Ö¨ams);
	}
}

1527 
__°dˇŒ
 
	$_Lazy_glGëProgømEnvP¨amëîdvARB
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLdoubÀ
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømEnvP¨amëîdvARB
—¨gë, index,Ö¨ams);
	}
}

1528 
__°dˇŒ
 
	$_Lazy_glGëProgømEnvP¨amëîfvARB
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømEnvP¨amëîfvARB
—¨gë, index,Ö¨ams);
	}
}

1529 
__°dˇŒ
 
	$_Lazy_glGëProgømLoˇlP¨amëîdvARB
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLdoubÀ
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømLoˇlP¨amëîdvARB
—¨gë, index,Ö¨ams);
	}
}

1530 
__°dˇŒ
 
	$_Lazy_glGëProgømLoˇlP¨amëîfvARB
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømLoˇlP¨amëîfvARB
—¨gë, index,Ö¨ams);
	}
}

1531 
__°dˇŒ
 
	$_Lazy_glGëProgømivARB
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømivARB
—¨gë,Ö«me,Ö¨ams);
	}
}

1532 
__°dˇŒ
 
	$_Lazy_glGëProgømSåögARB
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLvoid
 * 
°rög
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømSåögARB
—¨gë,Ö«me, såög);
	}
}

1533 
__°dˇŒ
 
	$_Lazy_glGëVîãxAâribdvARB
(
GLuöt
 
ödex
, 
GLíum
 
≤ame
, 
GLdoubÀ
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëVîãxAâribdvARB
(ödex,Ö«me,Ö¨ams);
	}
}

1534 
__°dˇŒ
 
	$_Lazy_glGëVîãxAâribfvARB
(
GLuöt
 
ödex
, 
GLíum
 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëVîãxAâribfvARB
(ödex,Ö«me,Ö¨ams);
	}
}

1535 
__°dˇŒ
 
	$_Lazy_glGëVîãxAâribivARB
(
GLuöt
 
ödex
, 
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëVîãxAâribivARB
(ödex,Ö«me,Ö¨ams);
	}
}

1536 
__°dˇŒ
 
	$_Lazy_glGëVîãxAâribPoöãrvARB
(
GLuöt
 
ödex
, 
GLíum
 
≤ame
, 
GLvoid
* * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glGëVîãxAâribPoöãrvARB
(ödex,Ö«me,Öoöãr);
	}
}

1537 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsProgømARB
(
GLuöt
 
¥ogøm
Ë{i‡(
	`GLìInô
()Ë 
	`glIsProgømARB
’rogøm);  (
GLboﬁón
)0;
	}
}

1538 
PFNGLVERTEXATTRIB1DARBPROC
 
	gpglVîãxAârib1dARB
=
_Lazy_glVîãxAârib1dARB
;

1539 
PFNGLVERTEXATTRIB1DVARBPROC
 
	gpglVîãxAârib1dvARB
=
_Lazy_glVîãxAârib1dvARB
;

1540 
PFNGLVERTEXATTRIB1FARBPROC
 
	gpglVîãxAârib1fARB
=
_Lazy_glVîãxAârib1fARB
;

1541 
PFNGLVERTEXATTRIB1FVARBPROC
 
	gpglVîãxAârib1fvARB
=
_Lazy_glVîãxAârib1fvARB
;

1542 
PFNGLVERTEXATTRIB1SARBPROC
 
	gpglVîãxAârib1sARB
=
_Lazy_glVîãxAârib1sARB
;

1543 
PFNGLVERTEXATTRIB1SVARBPROC
 
	gpglVîãxAârib1svARB
=
_Lazy_glVîãxAârib1svARB
;

1544 
PFNGLVERTEXATTRIB2DARBPROC
 
	gpglVîãxAârib2dARB
=
_Lazy_glVîãxAârib2dARB
;

1545 
PFNGLVERTEXATTRIB2DVARBPROC
 
	gpglVîãxAârib2dvARB
=
_Lazy_glVîãxAârib2dvARB
;

1546 
PFNGLVERTEXATTRIB2FARBPROC
 
	gpglVîãxAârib2fARB
=
_Lazy_glVîãxAârib2fARB
;

1547 
PFNGLVERTEXATTRIB2FVARBPROC
 
	gpglVîãxAârib2fvARB
=
_Lazy_glVîãxAârib2fvARB
;

1548 
PFNGLVERTEXATTRIB2SARBPROC
 
	gpglVîãxAârib2sARB
=
_Lazy_glVîãxAârib2sARB
;

1549 
PFNGLVERTEXATTRIB2SVARBPROC
 
	gpglVîãxAârib2svARB
=
_Lazy_glVîãxAârib2svARB
;

1550 
PFNGLVERTEXATTRIB3DARBPROC
 
	gpglVîãxAârib3dARB
=
_Lazy_glVîãxAârib3dARB
;

1551 
PFNGLVERTEXATTRIB3DVARBPROC
 
	gpglVîãxAârib3dvARB
=
_Lazy_glVîãxAârib3dvARB
;

1552 
PFNGLVERTEXATTRIB3FARBPROC
 
	gpglVîãxAârib3fARB
=
_Lazy_glVîãxAârib3fARB
;

1553 
PFNGLVERTEXATTRIB3FVARBPROC
 
	gpglVîãxAârib3fvARB
=
_Lazy_glVîãxAârib3fvARB
;

1554 
PFNGLVERTEXATTRIB3SARBPROC
 
	gpglVîãxAârib3sARB
=
_Lazy_glVîãxAârib3sARB
;

1555 
PFNGLVERTEXATTRIB3SVARBPROC
 
	gpglVîãxAârib3svARB
=
_Lazy_glVîãxAârib3svARB
;

1556 
PFNGLVERTEXATTRIB4NBVARBPROC
 
	gpglVîãxAârib4NbvARB
=
_Lazy_glVîãxAârib4NbvARB
;

1557 
PFNGLVERTEXATTRIB4NIVARBPROC
 
	gpglVîãxAârib4NivARB
=
_Lazy_glVîãxAârib4NivARB
;

1558 
PFNGLVERTEXATTRIB4NSVARBPROC
 
	gpglVîãxAârib4NsvARB
=
_Lazy_glVîãxAârib4NsvARB
;

1559 
PFNGLVERTEXATTRIB4NUBARBPROC
 
	gpglVîãxAârib4NubARB
=
_Lazy_glVîãxAârib4NubARB
;

1560 
PFNGLVERTEXATTRIB4NUBVARBPROC
 
	gpglVîãxAârib4NubvARB
=
_Lazy_glVîãxAârib4NubvARB
;

1561 
PFNGLVERTEXATTRIB4NUIVARBPROC
 
	gpglVîãxAârib4NuivARB
=
_Lazy_glVîãxAârib4NuivARB
;

1562 
PFNGLVERTEXATTRIB4NUSVARBPROC
 
	gpglVîãxAârib4NusvARB
=
_Lazy_glVîãxAârib4NusvARB
;

1563 
PFNGLVERTEXATTRIB4BVARBPROC
 
	gpglVîãxAârib4bvARB
=
_Lazy_glVîãxAârib4bvARB
;

1564 
PFNGLVERTEXATTRIB4DARBPROC
 
	gpglVîãxAârib4dARB
=
_Lazy_glVîãxAârib4dARB
;

1565 
PFNGLVERTEXATTRIB4DVARBPROC
 
	gpglVîãxAârib4dvARB
=
_Lazy_glVîãxAârib4dvARB
;

1566 
PFNGLVERTEXATTRIB4FARBPROC
 
	gpglVîãxAârib4fARB
=
_Lazy_glVîãxAârib4fARB
;

1567 
PFNGLVERTEXATTRIB4FVARBPROC
 
	gpglVîãxAârib4fvARB
=
_Lazy_glVîãxAârib4fvARB
;

1568 
PFNGLVERTEXATTRIB4IVARBPROC
 
	gpglVîãxAârib4ivARB
=
_Lazy_glVîãxAârib4ivARB
;

1569 
PFNGLVERTEXATTRIB4SARBPROC
 
	gpglVîãxAârib4sARB
=
_Lazy_glVîãxAârib4sARB
;

1570 
PFNGLVERTEXATTRIB4SVARBPROC
 
	gpglVîãxAârib4svARB
=
_Lazy_glVîãxAârib4svARB
;

1571 
PFNGLVERTEXATTRIB4UBVARBPROC
 
	gpglVîãxAârib4ubvARB
=
_Lazy_glVîãxAârib4ubvARB
;

1572 
PFNGLVERTEXATTRIB4UIVARBPROC
 
	gpglVîãxAârib4uivARB
=
_Lazy_glVîãxAârib4uivARB
;

1573 
PFNGLVERTEXATTRIB4USVARBPROC
 
	gpglVîãxAârib4usvARB
=
_Lazy_glVîãxAârib4usvARB
;

1574 
PFNGLVERTEXATTRIBPOINTERARBPROC
 
	gpglVîãxAâribPoöãrARB
=
_Lazy_glVîãxAâribPoöãrARB
;

1575 
PFNGLENABLEVERTEXATTRIBARRAYARBPROC
 
	gpglE«bÀVîãxAâribAºayARB
=
_Lazy_glE«bÀVîãxAâribAºayARB
;

1576 
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC
 
	gpglDißbÀVîãxAâribAºayARB
=
_Lazy_glDißbÀVîãxAâribAºayARB
;

1577 
PFNGLPROGRAMSTRINGARBPROC
 
	gpglProgømSåögARB
=
_Lazy_glProgømSåögARB
;

1578 
PFNGLBINDPROGRAMARBPROC
 
	gpglBödProgømARB
=
_Lazy_glBödProgømARB
;

1579 
PFNGLDELETEPROGRAMSARBPROC
 
	gpglDñëeProgømsARB
=
_Lazy_glDñëeProgømsARB
;

1580 
PFNGLGENPROGRAMSARBPROC
 
	gpglGíProgømsARB
=
_Lazy_glGíProgømsARB
;

1581 
PFNGLPROGRAMENVPARAMETER4DARBPROC
 
	gpglProgømEnvP¨amëî4dARB
=
_Lazy_glProgømEnvP¨amëî4dARB
;

1582 
PFNGLPROGRAMENVPARAMETER4DVARBPROC
 
	gpglProgømEnvP¨amëî4dvARB
=
_Lazy_glProgømEnvP¨amëî4dvARB
;

1583 
PFNGLPROGRAMENVPARAMETER4FARBPROC
 
	gpglProgømEnvP¨amëî4fARB
=
_Lazy_glProgømEnvP¨amëî4fARB
;

1584 
PFNGLPROGRAMENVPARAMETER4FVARBPROC
 
	gpglProgømEnvP¨amëî4fvARB
=
_Lazy_glProgømEnvP¨amëî4fvARB
;

1585 
PFNGLPROGRAMLOCALPARAMETER4DARBPROC
 
	gpglProgømLoˇlP¨amëî4dARB
=
_Lazy_glProgømLoˇlP¨amëî4dARB
;

1586 
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC
 
	gpglProgømLoˇlP¨amëî4dvARB
=
_Lazy_glProgømLoˇlP¨amëî4dvARB
;

1587 
PFNGLPROGRAMLOCALPARAMETER4FARBPROC
 
	gpglProgømLoˇlP¨amëî4fARB
=
_Lazy_glProgømLoˇlP¨amëî4fARB
;

1588 
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC
 
	gpglProgømLoˇlP¨amëî4fvARB
=
_Lazy_glProgømLoˇlP¨amëî4fvARB
;

1589 
PFNGLGETPROGRAMENVPARAMETERDVARBPROC
 
	gpglGëProgømEnvP¨amëîdvARB
=
_Lazy_glGëProgømEnvP¨amëîdvARB
;

1590 
PFNGLGETPROGRAMENVPARAMETERFVARBPROC
 
	gpglGëProgømEnvP¨amëîfvARB
=
_Lazy_glGëProgømEnvP¨amëîfvARB
;

1591 
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC
 
	gpglGëProgømLoˇlP¨amëîdvARB
=
_Lazy_glGëProgømLoˇlP¨amëîdvARB
;

1592 
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC
 
	gpglGëProgømLoˇlP¨amëîfvARB
=
_Lazy_glGëProgømLoˇlP¨amëîfvARB
;

1593 
PFNGLGETPROGRAMIVARBPROC
 
	gpglGëProgømivARB
=
_Lazy_glGëProgømivARB
;

1594 
PFNGLGETPROGRAMSTRINGARBPROC
 
	gpglGëProgømSåögARB
=
_Lazy_glGëProgømSåögARB
;

1595 
PFNGLGETVERTEXATTRIBDVARBPROC
 
	gpglGëVîãxAâribdvARB
=
_Lazy_glGëVîãxAâribdvARB
;

1596 
PFNGLGETVERTEXATTRIBFVARBPROC
 
	gpglGëVîãxAâribfvARB
=
_Lazy_glGëVîãxAâribfvARB
;

1597 
PFNGLGETVERTEXATTRIBIVARBPROC
 
	gpglGëVîãxAâribivARB
=
_Lazy_glGëVîãxAâribivARB
;

1598 
PFNGLGETVERTEXATTRIBPOINTERVARBPROC
 
	gpglGëVîãxAâribPoöãrvARB
=
_Lazy_glGëVîãxAâribPoöãrvARB
;

1599 
PFNGLISPROGRAMARBPROC
 
	gpglIsProgømARB
=
_Lazy_glIsProgømARB
;

1604 #ifde‡
__GLEE_GL_ARB_‰agmít_¥ogøm


1609 #ifde‡
__GLEE_GL_ARB_vîãx_buf„r_obje˘


1610 
__°dˇŒ
 
	$_Lazy_glBödBuf„rARB
(
GLíum
 
èrgë
, 
GLuöt
 
buf„r
Ë{i‡(
	`GLìInô
()Ë
	`glBödBuf„rARB
—¨gë, buf„r);
	}
}

1611 
__°dˇŒ
 
	$_Lazy_glDñëeBuf„rsARB
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
buf„rs
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeBuf„rsARB
“, buf„rs);
	}
}

1612 
__°dˇŒ
 
	$_Lazy_glGíBuf„rsARB
(
GLsizei
 
n
, 
GLuöt
 * 
buf„rs
Ë{i‡(
	`GLìInô
()Ë
	`glGíBuf„rsARB
“, buf„rs);
	}
}

1613 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsBuf„rARB
(
GLuöt
 
buf„r
Ë{i‡(
	`GLìInô
()Ë 
	`glIsBuf„rARB
(buf„r);  (
GLboﬁón
)0;
	}
}

1614 
__°dˇŒ
 
	$_Lazy_glBuf„rD©aARB
(
GLíum
 
èrgë
, 
GLsizeùåARB
 
size
, c⁄° 
GLvoid
 * 
d©a
, GLíum 
ußge
Ë{i‡(
	`GLìInô
()Ë
	`glBuf„rD©aARB
—¨gë, size, d©a, ußge);
	}
}

1615 
__°dˇŒ
 
	$_Lazy_glBuf„rSubD©aARB
(
GLíum
 
èrgë
, 
GLöçåARB
 
off£t
, 
GLsizeùåARB
 
size
, c⁄° 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glBuf„rSubD©aARB
—¨gë, off£t, size, d©a);
	}
}

1616 
__°dˇŒ
 
	$_Lazy_glGëBuf„rSubD©aARB
(
GLíum
 
èrgë
, 
GLöçåARB
 
off£t
, 
GLsizeùåARB
 
size
, 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glGëBuf„rSubD©aARB
—¨gë, off£t, size, d©a);
	}
}

1617 
GLvoid
* 
__°dˇŒ
 
	$_Lazy_glM≠Buf„rARB
(
GLíum
 
èrgë
, GLíum 
ac˚ss
Ë{i‡(
	`GLìInô
()Ë 
	`glM≠Buf„rARB
—¨gë,ác˚ss);  (
GLvoid
*)0;
	}
}

1618 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glUnm≠Buf„rARB
(
GLíum
 
èrgë
Ë{i‡(
	`GLìInô
()Ë 
	`glUnm≠Buf„rARB
—¨gë);  (
GLboﬁón
)0;
	}
}

1619 
__°dˇŒ
 
	$_Lazy_glGëBuf„rP¨amëîivARB
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëBuf„rP¨amëîivARB
—¨gë,Ö«me,Ö¨ams);
	}
}

1620 
__°dˇŒ
 
	$_Lazy_glGëBuf„rPoöãrvARB
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLvoid
* * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëBuf„rPoöãrvARB
—¨gë,Ö«me,Ö¨ams);
	}
}

1621 
PFNGLBINDBUFFERARBPROC
 
	gpglBödBuf„rARB
=
_Lazy_glBödBuf„rARB
;

1622 
PFNGLDELETEBUFFERSARBPROC
 
	gpglDñëeBuf„rsARB
=
_Lazy_glDñëeBuf„rsARB
;

1623 
PFNGLGENBUFFERSARBPROC
 
	gpglGíBuf„rsARB
=
_Lazy_glGíBuf„rsARB
;

1624 
PFNGLISBUFFERARBPROC
 
	gpglIsBuf„rARB
=
_Lazy_glIsBuf„rARB
;

1625 
PFNGLBUFFERDATAARBPROC
 
	gpglBuf„rD©aARB
=
_Lazy_glBuf„rD©aARB
;

1626 
PFNGLBUFFERSUBDATAARBPROC
 
	gpglBuf„rSubD©aARB
=
_Lazy_glBuf„rSubD©aARB
;

1627 
PFNGLGETBUFFERSUBDATAARBPROC
 
	gpglGëBuf„rSubD©aARB
=
_Lazy_glGëBuf„rSubD©aARB
;

1628 
PFNGLMAPBUFFERARBPROC
 
	gpglM≠Buf„rARB
=
_Lazy_glM≠Buf„rARB
;

1629 
PFNGLUNMAPBUFFERARBPROC
 
	gpglUnm≠Buf„rARB
=
_Lazy_glUnm≠Buf„rARB
;

1630 
PFNGLGETBUFFERPARAMETERIVARBPROC
 
	gpglGëBuf„rP¨amëîivARB
=
_Lazy_glGëBuf„rP¨amëîivARB
;

1631 
PFNGLGETBUFFERPOINTERVARBPROC
 
	gpglGëBuf„rPoöãrvARB
=
_Lazy_glGëBuf„rPoöãrvARB
;

1636 #ifde‡
__GLEE_GL_ARB_oc˛usi⁄_quîy


1637 
__°dˇŒ
 
	$_Lazy_glGíQuîõsARB
(
GLsizei
 
n
, 
GLuöt
 * 
ids
Ë{i‡(
	`GLìInô
()Ë
	`glGíQuîõsARB
“, ids);
	}
}

1638 
__°dˇŒ
 
	$_Lazy_glDñëeQuîõsARB
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
ids
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeQuîõsARB
“, ids);
	}
}

1639 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsQuîyARB
(
GLuöt
 
id
Ë{i‡(
	`GLìInô
()Ë 
	`glIsQuîyARB
(id);  (
GLboﬁón
)0;
	}
}

1640 
__°dˇŒ
 
	$_Lazy_glBegöQuîyARB
(
GLíum
 
èrgë
, 
GLuöt
 
id
Ë{i‡(
	`GLìInô
()Ë
	`glBegöQuîyARB
—¨gë, id);
	}
}

1641 
__°dˇŒ
 
	$_Lazy_glEndQuîyARB
(
GLíum
 
èrgë
Ë{i‡(
	`GLìInô
()Ë
	`glEndQuîyARB
—¨gë);
	}
}

1642 
__°dˇŒ
 
	$_Lazy_glGëQuîyivARB
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëQuîyivARB
—¨gë,Ö«me,Ö¨ams);
	}
}

1643 
__°dˇŒ
 
	$_Lazy_glGëQuîyObje˘ivARB
(
GLuöt
 
id
, 
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëQuîyObje˘ivARB
(id,Ö«me,Ö¨ams);
	}
}

1644 
__°dˇŒ
 
	$_Lazy_glGëQuîyObje˘uivARB
(
GLuöt
 
id
, 
GLíum
 
≤ame
, GLuöà* 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëQuîyObje˘uivARB
(id,Ö«me,Ö¨ams);
	}
}

1645 
PFNGLGENQUERIESARBPROC
 
	gpglGíQuîõsARB
=
_Lazy_glGíQuîõsARB
;

1646 
PFNGLDELETEQUERIESARBPROC
 
	gpglDñëeQuîõsARB
=
_Lazy_glDñëeQuîõsARB
;

1647 
PFNGLISQUERYARBPROC
 
	gpglIsQuîyARB
=
_Lazy_glIsQuîyARB
;

1648 
PFNGLBEGINQUERYARBPROC
 
	gpglBegöQuîyARB
=
_Lazy_glBegöQuîyARB
;

1649 
PFNGLENDQUERYARBPROC
 
	gpglEndQuîyARB
=
_Lazy_glEndQuîyARB
;

1650 
PFNGLGETQUERYIVARBPROC
 
	gpglGëQuîyivARB
=
_Lazy_glGëQuîyivARB
;

1651 
PFNGLGETQUERYOBJECTIVARBPROC
 
	gpglGëQuîyObje˘ivARB
=
_Lazy_glGëQuîyObje˘ivARB
;

1652 
PFNGLGETQUERYOBJECTUIVARBPROC
 
	gpglGëQuîyObje˘uivARB
=
_Lazy_glGëQuîyObje˘uivARB
;

1657 #ifde‡
__GLEE_GL_ARB_shadî_obje˘s


1658 
__°dˇŒ
 
	$_Lazy_glDñëeObje˘ARB
(
GLh™dÀARB
 
obj
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeObje˘ARB
(obj);
	}
}

1659 
GLh™dÀARB
 
__°dˇŒ
 
	$_Lazy_glGëH™dÀARB
(
GLíum
 
≤ame
Ë{i‡(
	`GLìInô
()Ë 
	`glGëH™dÀARB
’«me);  (
GLh™dÀARB
)0;
	}
}

1660 
__°dˇŒ
 
	$_Lazy_glDëachObje˘ARB
(
GLh™dÀARB
 
c⁄èöîObj
, GLh™dÀARB 
©èchedObj
Ë{i‡(
	`GLìInô
()Ë
	`glDëachObje˘ARB
(c⁄èöîObj,áâachedObj);
	}
}

1661 
GLh™dÀARB
 
__°dˇŒ
 
	$_Lazy_glCª©eShadîObje˘ARB
(
GLíum
 
shadîTy≥
Ë{i‡(
	`GLìInô
()Ë 
	`glCª©eShadîObje˘ARB
(shadîTy≥);  (
GLh™dÀARB
)0;
	}
}

1662 
__°dˇŒ
 
	$_Lazy_glShadîSour˚ARB
(
GLh™dÀARB
 
shadîObj
, 
GLsizei
 
cou¡
, c⁄° 
GLch¨ARB
* * 
°rög
, c⁄° 
GLöt
 * 
Àngth
Ë{i‡(
	`GLìInô
()Ë
	`glShadîSour˚ARB
(shadîObj, cou¡, såög,Üígth);
	}
}

1663 
__°dˇŒ
 
	$_Lazy_glCompûeShadîARB
(
GLh™dÀARB
 
shadîObj
Ë{i‡(
	`GLìInô
()Ë
	`glCompûeShadîARB
(shadîObj);
	}
}

1664 
GLh™dÀARB
 
__°dˇŒ
 
	$_Lazy_glCª©eProgømObje˘ARB
(Ë{i‡(
	`GLìInô
()Ë 
	`glCª©eProgømObje˘ARB
();  (
GLh™dÀARB
)0;
	}
}

1665 
__°dˇŒ
 
	$_Lazy_glAâachObje˘ARB
(
GLh™dÀARB
 
c⁄èöîObj
, GLh™dÀARB 
obj
Ë{i‡(
	`GLìInô
()Ë
	`glAâachObje˘ARB
(c⁄èöîObj, obj);
	}
}

1666 
__°dˇŒ
 
	$_Lazy_glLökProgømARB
(
GLh™dÀARB
 
¥ogømObj
Ë{i‡(
	`GLìInô
()Ë
	`glLökProgømARB
’rogømObj);
	}
}

1667 
__°dˇŒ
 
	$_Lazy_glU£ProgømObje˘ARB
(
GLh™dÀARB
 
¥ogømObj
Ë{i‡(
	`GLìInô
()Ë
	`glU£ProgømObje˘ARB
’rogømObj);
	}
}

1668 
__°dˇŒ
 
	$_Lazy_glVÆid©eProgømARB
(
GLh™dÀARB
 
¥ogømObj
Ë{i‡(
	`GLìInô
()Ë
	`glVÆid©eProgømARB
’rogømObj);
	}
}

1669 
__°dˇŒ
 
	$_Lazy_glUnif‹m1fARB
(
GLöt
 
loˇti⁄
, 
GLÊﬂt
 
v0
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m1fARB
÷oˇti⁄, v0);
	}
}

1670 
__°dˇŒ
 
	$_Lazy_glUnif‹m2fARB
(
GLöt
 
loˇti⁄
, 
GLÊﬂt
 
v0
, GLÊﬂà
v1
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m2fARB
÷oˇti⁄, v0, v1);
	}
}

1671 
__°dˇŒ
 
	$_Lazy_glUnif‹m3fARB
(
GLöt
 
loˇti⁄
, 
GLÊﬂt
 
v0
, GLÊﬂà
v1
, GLÊﬂà
v2
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m3fARB
÷oˇti⁄, v0, v1, v2);
	}
}

1672 
__°dˇŒ
 
	$_Lazy_glUnif‹m4fARB
(
GLöt
 
loˇti⁄
, 
GLÊﬂt
 
v0
, GLÊﬂà
v1
, GLÊﬂà
v2
, GLÊﬂà
v3
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m4fARB
÷oˇti⁄, v0, v1, v2, v3);
	}
}

1673 
__°dˇŒ
 
	$_Lazy_glUnif‹m1iARB
(
GLöt
 
loˇti⁄
, GLöà
v0
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m1iARB
÷oˇti⁄, v0);
	}
}

1674 
__°dˇŒ
 
	$_Lazy_glUnif‹m2iARB
(
GLöt
 
loˇti⁄
, GLöà
v0
, GLöà
v1
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m2iARB
÷oˇti⁄, v0, v1);
	}
}

1675 
__°dˇŒ
 
	$_Lazy_glUnif‹m3iARB
(
GLöt
 
loˇti⁄
, GLöà
v0
, GLöà
v1
, GLöà
v2
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m3iARB
÷oˇti⁄, v0, v1, v2);
	}
}

1676 
__°dˇŒ
 
	$_Lazy_glUnif‹m4iARB
(
GLöt
 
loˇti⁄
, GLöà
v0
, GLöà
v1
, GLöà
v2
, GLöà
v3
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m4iARB
÷oˇti⁄, v0, v1, v2, v3);
	}
}

1677 
__°dˇŒ
 
	$_Lazy_glUnif‹m1fvARB
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m1fvARB
÷oˇti⁄, cou¡, vÆue);
	}
}

1678 
__°dˇŒ
 
	$_Lazy_glUnif‹m2fvARB
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m2fvARB
÷oˇti⁄, cou¡, vÆue);
	}
}

1679 
__°dˇŒ
 
	$_Lazy_glUnif‹m3fvARB
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m3fvARB
÷oˇti⁄, cou¡, vÆue);
	}
}

1680 
__°dˇŒ
 
	$_Lazy_glUnif‹m4fvARB
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m4fvARB
÷oˇti⁄, cou¡, vÆue);
	}
}

1681 
__°dˇŒ
 
	$_Lazy_glUnif‹m1ivARB
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° GLöà* 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m1ivARB
÷oˇti⁄, cou¡, vÆue);
	}
}

1682 
__°dˇŒ
 
	$_Lazy_glUnif‹m2ivARB
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° GLöà* 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m2ivARB
÷oˇti⁄, cou¡, vÆue);
	}
}

1683 
__°dˇŒ
 
	$_Lazy_glUnif‹m3ivARB
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° GLöà* 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m3ivARB
÷oˇti⁄, cou¡, vÆue);
	}
}

1684 
__°dˇŒ
 
	$_Lazy_glUnif‹m4ivARB
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° GLöà* 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m4ivARB
÷oˇti⁄, cou¡, vÆue);
	}
}

1685 
__°dˇŒ
 
	$_Lazy_glUnif‹mM©rix2fvARB
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, 
GLboﬁón
 
å™•o£
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹mM©rix2fvARB
÷oˇti⁄, cou¡,Åøn•o£, vÆue);
	}
}

1686 
__°dˇŒ
 
	$_Lazy_glUnif‹mM©rix3fvARB
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, 
GLboﬁón
 
å™•o£
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹mM©rix3fvARB
÷oˇti⁄, cou¡,Åøn•o£, vÆue);
	}
}

1687 
__°dˇŒ
 
	$_Lazy_glUnif‹mM©rix4fvARB
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, 
GLboﬁón
 
å™•o£
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹mM©rix4fvARB
÷oˇti⁄, cou¡,Åøn•o£, vÆue);
	}
}

1688 
__°dˇŒ
 
	$_Lazy_glGëObje˘P¨amëîfvARB
(
GLh™dÀARB
 
obj
, 
GLíum
 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëObje˘P¨amëîfvARB
(obj,Ö«me,Ö¨ams);
	}
}

1689 
__°dˇŒ
 
	$_Lazy_glGëObje˘P¨amëîivARB
(
GLh™dÀARB
 
obj
, 
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëObje˘P¨amëîivARB
(obj,Ö«me,Ö¨ams);
	}
}

1690 
__°dˇŒ
 
	$_Lazy_glGëInfoLogARB
(
GLh™dÀARB
 
obj
, 
GLsizei
 
maxLígth
, GLsizeò* 
Àngth
, 
GLch¨ARB
 * 
öfoLog
Ë{i‡(
	`GLìInô
()Ë
	`glGëInfoLogARB
(obj, maxLígth,Üígth, infoLog);
	}
}

1691 
__°dˇŒ
 
	$_Lazy_glGëAâachedObje˘sARB
(
GLh™dÀARB
 
c⁄èöîObj
, 
GLsizei
 
maxCou¡
, GLsizeò* 
cou¡
, GLh™dÀARB * 
obj
Ë{i‡(
	`GLìInô
()Ë
	`glGëAâachedObje˘sARB
(c⁄èöîObj, maxCou¡, cou¡, obj);
	}
}

1692 
GLöt
 
__°dˇŒ
 
	$_Lazy_glGëUnif‹mLoˇti⁄ARB
(
GLh™dÀARB
 
¥ogømObj
, c⁄° 
GLch¨ARB
 * 
«me
Ë{i‡(
	`GLìInô
()Ë 
	`glGëUnif‹mLoˇti⁄ARB
’rogømObj,Çame);  (
GLöt
)0;
	}
}

1693 
__°dˇŒ
 
	$_Lazy_glGëA˘iveUnif‹mARB
(
GLh™dÀARB
 
¥ogømObj
, 
GLuöt
 
ödex
, 
GLsizei
 
maxLígth
, GLsizeò* 
Àngth
, 
GLöt
 * 
size
, 
GLíum
 * 
ty≥
, 
GLch¨ARB
 * 
«me
Ë{i‡(
	`GLìInô
()Ë
	`glGëA˘iveUnif‹mARB
’rogømObj, index, maxLígth,Üígth, size,Åy≥,Çame);
	}
}

1694 
__°dˇŒ
 
	$_Lazy_glGëUnif‹mfvARB
(
GLh™dÀARB
 
¥ogømObj
, 
GLöt
 
loˇti⁄
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëUnif‹mfvARB
’rogømObj,Üoˇti⁄,Ö¨ams);
	}
}

1695 
__°dˇŒ
 
	$_Lazy_glGëUnif‹mivARB
(
GLh™dÀARB
 
¥ogømObj
, 
GLöt
 
loˇti⁄
, GLöà* 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëUnif‹mivARB
’rogømObj,Üoˇti⁄,Ö¨ams);
	}
}

1696 
__°dˇŒ
 
	$_Lazy_glGëShadîSour˚ARB
(
GLh™dÀARB
 
obj
, 
GLsizei
 
maxLígth
, GLsizeò* 
Àngth
, 
GLch¨ARB
 * 
sour˚
Ë{i‡(
	`GLìInô
()Ë
	`glGëShadîSour˚ARB
(obj, maxLígth,Üígth, sour˚);
	}
}

1697 
PFNGLDELETEOBJECTARBPROC
 
	gpglDñëeObje˘ARB
=
_Lazy_glDñëeObje˘ARB
;

1698 
PFNGLGETHANDLEARBPROC
 
	gpglGëH™dÀARB
=
_Lazy_glGëH™dÀARB
;

1699 
PFNGLDETACHOBJECTARBPROC
 
	gpglDëachObje˘ARB
=
_Lazy_glDëachObje˘ARB
;

1700 
PFNGLCREATESHADEROBJECTARBPROC
 
	gpglCª©eShadîObje˘ARB
=
_Lazy_glCª©eShadîObje˘ARB
;

1701 
PFNGLSHADERSOURCEARBPROC
 
	gpglShadîSour˚ARB
=
_Lazy_glShadîSour˚ARB
;

1702 
PFNGLCOMPILESHADERARBPROC
 
	gpglCompûeShadîARB
=
_Lazy_glCompûeShadîARB
;

1703 
PFNGLCREATEPROGRAMOBJECTARBPROC
 
	gpglCª©eProgømObje˘ARB
=
_Lazy_glCª©eProgømObje˘ARB
;

1704 
PFNGLATTACHOBJECTARBPROC
 
	gpglAâachObje˘ARB
=
_Lazy_glAâachObje˘ARB
;

1705 
PFNGLLINKPROGRAMARBPROC
 
	gpglLökProgømARB
=
_Lazy_glLökProgømARB
;

1706 
PFNGLUSEPROGRAMOBJECTARBPROC
 
	gpglU£ProgømObje˘ARB
=
_Lazy_glU£ProgømObje˘ARB
;

1707 
PFNGLVALIDATEPROGRAMARBPROC
 
	gpglVÆid©eProgømARB
=
_Lazy_glVÆid©eProgømARB
;

1708 
PFNGLUNIFORM1FARBPROC
 
	gpglUnif‹m1fARB
=
_Lazy_glUnif‹m1fARB
;

1709 
PFNGLUNIFORM2FARBPROC
 
	gpglUnif‹m2fARB
=
_Lazy_glUnif‹m2fARB
;

1710 
PFNGLUNIFORM3FARBPROC
 
	gpglUnif‹m3fARB
=
_Lazy_glUnif‹m3fARB
;

1711 
PFNGLUNIFORM4FARBPROC
 
	gpglUnif‹m4fARB
=
_Lazy_glUnif‹m4fARB
;

1712 
PFNGLUNIFORM1IARBPROC
 
	gpglUnif‹m1iARB
=
_Lazy_glUnif‹m1iARB
;

1713 
PFNGLUNIFORM2IARBPROC
 
	gpglUnif‹m2iARB
=
_Lazy_glUnif‹m2iARB
;

1714 
PFNGLUNIFORM3IARBPROC
 
	gpglUnif‹m3iARB
=
_Lazy_glUnif‹m3iARB
;

1715 
PFNGLUNIFORM4IARBPROC
 
	gpglUnif‹m4iARB
=
_Lazy_glUnif‹m4iARB
;

1716 
PFNGLUNIFORM1FVARBPROC
 
	gpglUnif‹m1fvARB
=
_Lazy_glUnif‹m1fvARB
;

1717 
PFNGLUNIFORM2FVARBPROC
 
	gpglUnif‹m2fvARB
=
_Lazy_glUnif‹m2fvARB
;

1718 
PFNGLUNIFORM3FVARBPROC
 
	gpglUnif‹m3fvARB
=
_Lazy_glUnif‹m3fvARB
;

1719 
PFNGLUNIFORM4FVARBPROC
 
	gpglUnif‹m4fvARB
=
_Lazy_glUnif‹m4fvARB
;

1720 
PFNGLUNIFORM1IVARBPROC
 
	gpglUnif‹m1ivARB
=
_Lazy_glUnif‹m1ivARB
;

1721 
PFNGLUNIFORM2IVARBPROC
 
	gpglUnif‹m2ivARB
=
_Lazy_glUnif‹m2ivARB
;

1722 
PFNGLUNIFORM3IVARBPROC
 
	gpglUnif‹m3ivARB
=
_Lazy_glUnif‹m3ivARB
;

1723 
PFNGLUNIFORM4IVARBPROC
 
	gpglUnif‹m4ivARB
=
_Lazy_glUnif‹m4ivARB
;

1724 
PFNGLUNIFORMMATRIX2FVARBPROC
 
	gpglUnif‹mM©rix2fvARB
=
_Lazy_glUnif‹mM©rix2fvARB
;

1725 
PFNGLUNIFORMMATRIX3FVARBPROC
 
	gpglUnif‹mM©rix3fvARB
=
_Lazy_glUnif‹mM©rix3fvARB
;

1726 
PFNGLUNIFORMMATRIX4FVARBPROC
 
	gpglUnif‹mM©rix4fvARB
=
_Lazy_glUnif‹mM©rix4fvARB
;

1727 
PFNGLGETOBJECTPARAMETERFVARBPROC
 
	gpglGëObje˘P¨amëîfvARB
=
_Lazy_glGëObje˘P¨amëîfvARB
;

1728 
PFNGLGETOBJECTPARAMETERIVARBPROC
 
	gpglGëObje˘P¨amëîivARB
=
_Lazy_glGëObje˘P¨amëîivARB
;

1729 
PFNGLGETINFOLOGARBPROC
 
	gpglGëInfoLogARB
=
_Lazy_glGëInfoLogARB
;

1730 
PFNGLGETATTACHEDOBJECTSARBPROC
 
	gpglGëAâachedObje˘sARB
=
_Lazy_glGëAâachedObje˘sARB
;

1731 
PFNGLGETUNIFORMLOCATIONARBPROC
 
	gpglGëUnif‹mLoˇti⁄ARB
=
_Lazy_glGëUnif‹mLoˇti⁄ARB
;

1732 
PFNGLGETACTIVEUNIFORMARBPROC
 
	gpglGëA˘iveUnif‹mARB
=
_Lazy_glGëA˘iveUnif‹mARB
;

1733 
PFNGLGETUNIFORMFVARBPROC
 
	gpglGëUnif‹mfvARB
=
_Lazy_glGëUnif‹mfvARB
;

1734 
PFNGLGETUNIFORMIVARBPROC
 
	gpglGëUnif‹mivARB
=
_Lazy_glGëUnif‹mivARB
;

1735 
PFNGLGETSHADERSOURCEARBPROC
 
	gpglGëShadîSour˚ARB
=
_Lazy_glGëShadîSour˚ARB
;

1740 #ifde‡
__GLEE_GL_ARB_vîãx_shadî


1741 
__°dˇŒ
 
	$_Lazy_glBödAâribLoˇti⁄ARB
(
GLh™dÀARB
 
¥ogømObj
, 
GLuöt
 
ödex
, c⁄° 
GLch¨ARB
 * 
«me
Ë{i‡(
	`GLìInô
()Ë
	`glBödAâribLoˇti⁄ARB
’rogømObj, index,Çame);
	}
}

1742 
__°dˇŒ
 
	$_Lazy_glGëA˘iveAâribARB
(
GLh™dÀARB
 
¥ogømObj
, 
GLuöt
 
ödex
, 
GLsizei
 
maxLígth
, GLsizeò* 
Àngth
, 
GLöt
 * 
size
, 
GLíum
 * 
ty≥
, 
GLch¨ARB
 * 
«me
Ë{i‡(
	`GLìInô
()Ë
	`glGëA˘iveAâribARB
’rogømObj, index, maxLígth,Üígth, size,Åy≥,Çame);
	}
}

1743 
GLöt
 
__°dˇŒ
 
	$_Lazy_glGëAâribLoˇti⁄ARB
(
GLh™dÀARB
 
¥ogømObj
, c⁄° 
GLch¨ARB
 * 
«me
Ë{i‡(
	`GLìInô
()Ë 
	`glGëAâribLoˇti⁄ARB
’rogømObj,Çame);  (
GLöt
)0;
	}
}

1744 
PFNGLBINDATTRIBLOCATIONARBPROC
 
	gpglBödAâribLoˇti⁄ARB
=
_Lazy_glBödAâribLoˇti⁄ARB
;

1745 
PFNGLGETACTIVEATTRIBARBPROC
 
	gpglGëA˘iveAâribARB
=
_Lazy_glGëA˘iveAâribARB
;

1746 
PFNGLGETATTRIBLOCATIONARBPROC
 
	gpglGëAâribLoˇti⁄ARB
=
_Lazy_glGëAâribLoˇti⁄ARB
;

1751 #ifde‡
__GLEE_GL_ARB_‰agmít_shadî


1756 #ifde‡
__GLEE_GL_ARB_shadög_œnguage_100


1761 #ifde‡
__GLEE_GL_ARB_ãxtuª_n⁄_powî_of_two


1766 #ifde‡
__GLEE_GL_ARB_poöt_•rôe


1771 #ifde‡
__GLEE_GL_ARB_‰agmít_¥ogøm_shadow


1776 #ifde‡
__GLEE_GL_ARB_døw_buf„rs


1777 
__°dˇŒ
 
	$_Lazy_glDøwBuf„rsARB
(
GLsizei
 
n
, c⁄° 
GLíum
 * 
bufs
Ë{i‡(
	`GLìInô
()Ë
	`glDøwBuf„rsARB
“, bufs);
	}
}

1778 
PFNGLDRAWBUFFERSARBPROC
 
	gpglDøwBuf„rsARB
=
_Lazy_glDøwBuf„rsARB
;

1783 #ifde‡
__GLEE_GL_ARB_ãxtuª_ª˘™gÀ


1788 #ifde‡
__GLEE_GL_ARB_cﬁ‹_buf„r_Êﬂt


1789 
__°dˇŒ
 
	$_Lazy_glCœmpCﬁ‹ARB
(
GLíum
 
èrgë
, GLíum 
˛amp
Ë{i‡(
	`GLìInô
()Ë
	`glCœmpCﬁ‹ARB
—¨gë, cœmp);
	}
}

1790 
PFNGLCLAMPCOLORARBPROC
 
	gpglCœmpCﬁ‹ARB
=
_Lazy_glCœmpCﬁ‹ARB
;

1795 #ifde‡
__GLEE_GL_ARB_hÆf_Êﬂt_pixñ


1800 #ifde‡
__GLEE_GL_ARB_ãxtuª_Êﬂt


1805 #ifde‡
__GLEE_GL_ARB_pixñ_buf„r_obje˘


1810 #ifde‡
__GLEE_GL_EXT_abgr


1815 #ifde‡
__GLEE_GL_EXT_bÀnd_cﬁ‹


1816 
__°dˇŒ
 
	$_Lazy_glBÀndCﬁ‹EXT
(
GL˛ampf
 
ªd
, GL˛amp‡
gªí
, GL˛amp‡
blue
, GL˛amp‡
Æpha
Ë{i‡(
	`GLìInô
()Ë
	`glBÀndCﬁ‹EXT
‘ed, gªí, blue,áÕha);
	}
}

1817 
PFNGLBLENDCOLOREXTPROC
 
	gpglBÀndCﬁ‹EXT
=
_Lazy_glBÀndCﬁ‹EXT
;

1822 #ifde‡
__GLEE_GL_EXT_pﬁyg⁄_off£t


1823 
__°dˇŒ
 
	$_Lazy_glPﬁyg⁄Off£tEXT
(
GLÊﬂt
 
Á˘‹
, GLÊﬂà
büs
Ë{i‡(
	`GLìInô
()Ë
	`glPﬁyg⁄Off£tEXT
(Á˘‹, büs);
	}
}

1824 
PFNGLPOLYGONOFFSETEXTPROC
 
	gpglPﬁyg⁄Off£tEXT
=
_Lazy_glPﬁyg⁄Off£tEXT
;

1829 #ifde‡
__GLEE_GL_EXT_ãxtuª


1834 #ifde‡
__GLEE_GL_EXT_ãxtuª3D


1835 
__°dˇŒ
 
	$_Lazy_glTexImage3DEXT
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLöà
b‹dî
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
pixñs
Ë{i‡(
	`GLìInô
()Ë
	`glTexImage3DEXT
—¨gë,Üevñ, i¡î«lf‹m©, width, height, dïth, b‹dî, f‹m©,Åy≥,Öixñs);
	}
}

1836 
__°dˇŒ
 
	$_Lazy_glTexSubImage3DEXT
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, GLöà
yoff£t
, GLöà
zoff£t
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
pixñs
Ë{i‡(
	`GLìInô
()Ë
	`glTexSubImage3DEXT
—¨gë,Üevñ, xoff£t, yoff£t, zoff£t, width, height, dïth, f‹m©,Åy≥,Öixñs);
	}
}

1837 
PFNGLTEXIMAGE3DEXTPROC
 
	gpglTexImage3DEXT
=
_Lazy_glTexImage3DEXT
;

1838 
PFNGLTEXSUBIMAGE3DEXTPROC
 
	gpglTexSubImage3DEXT
=
_Lazy_glTexSubImage3DEXT
;

1843 #ifde‡
__GLEE_GL_SGIS_ãxtuª_fûãr4


1844 
__°dˇŒ
 
	$_Lazy_glGëTexFûãrFuncSGIS
(
GLíum
 
èrgë
, GLíum 
fûãr
, 
GLÊﬂt
 * 
weights
Ë{i‡(
	`GLìInô
()Ë
	`glGëTexFûãrFuncSGIS
—¨gë, fûãr, weights);
	}
}

1845 
__°dˇŒ
 
	$_Lazy_glTexFûãrFuncSGIS
(
GLíum
 
èrgë
, GLíum 
fûãr
, 
GLsizei
 
n
, c⁄° 
GLÊﬂt
 * 
weights
Ë{i‡(
	`GLìInô
()Ë
	`glTexFûãrFuncSGIS
—¨gë, fûãr,Ç, weights);
	}
}

1846 
PFNGLGETTEXFILTERFUNCSGISPROC
 
	gpglGëTexFûãrFuncSGIS
=
_Lazy_glGëTexFûãrFuncSGIS
;

1847 
PFNGLTEXFILTERFUNCSGISPROC
 
	gpglTexFûãrFuncSGIS
=
_Lazy_glTexFûãrFuncSGIS
;

1852 #ifde‡
__GLEE_GL_EXT_subãxtuª


1853 
__°dˇŒ
 
	$_Lazy_glTexSubImage1DEXT
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, 
GLsizei
 
width
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
pixñs
Ë{i‡(
	`GLìInô
()Ë
	`glTexSubImage1DEXT
—¨gë,Üevñ, xoff£t, width, f‹m©,Åy≥,Öixñs);
	}
}

1854 
__°dˇŒ
 
	$_Lazy_glTexSubImage2DEXT
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, GLöà
yoff£t
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
pixñs
Ë{i‡(
	`GLìInô
()Ë
	`glTexSubImage2DEXT
—¨gë,Üevñ, xoff£t, yoff£t, width, height, f‹m©,Åy≥,Öixñs);
	}
}

1855 
PFNGLTEXSUBIMAGE1DEXTPROC
 
	gpglTexSubImage1DEXT
=
_Lazy_glTexSubImage1DEXT
;

1856 
PFNGLTEXSUBIMAGE2DEXTPROC
 
	gpglTexSubImage2DEXT
=
_Lazy_glTexSubImage2DEXT
;

1861 #ifde‡
__GLEE_GL_EXT_c›y_ãxtuª


1862 
__°dˇŒ
 
	$_Lazy_glC›yTexImage1DEXT
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLíum 
öã∫Æf‹m©
, GLöà
x
, GLöà
y
, 
GLsizei
 
width
, GLöà
b‹dî
Ë{i‡(
	`GLìInô
()Ë
	`glC›yTexImage1DEXT
—¨gë,Üevñ, i¡î«lf‹m©, x, y, width, b‹dî);
	}
}

1863 
__°dˇŒ
 
	$_Lazy_glC›yTexImage2DEXT
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLíum 
öã∫Æf‹m©
, GLöà
x
, GLöà
y
, 
GLsizei
 
width
, GLsizeò
height
, GLöà
b‹dî
Ë{i‡(
	`GLìInô
()Ë
	`glC›yTexImage2DEXT
—¨gë,Üevñ, i¡î«lf‹m©, x, y, width, height, b‹dî);
	}
}

1864 
__°dˇŒ
 
	$_Lazy_glC›yTexSubImage1DEXT
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, GLöà
x
, GLöà
y
, 
GLsizei
 
width
Ë{i‡(
	`GLìInô
()Ë
	`glC›yTexSubImage1DEXT
—¨gë,Üevñ, xoff£t, x, y, width);
	}
}

1865 
__°dˇŒ
 
	$_Lazy_glC›yTexSubImage2DEXT
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, GLöà
yoff£t
, GLöà
x
, GLöà
y
, 
GLsizei
 
width
, GLsizeò
height
Ë{i‡(
	`GLìInô
()Ë
	`glC›yTexSubImage2DEXT
—¨gë,Üevñ, xoff£t, yoff£t, x, y, width, height);
	}
}

1866 
__°dˇŒ
 
	$_Lazy_glC›yTexSubImage3DEXT
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, GLöà
yoff£t
, GLöà
zoff£t
, GLöà
x
, GLöà
y
, 
GLsizei
 
width
, GLsizeò
height
Ë{i‡(
	`GLìInô
()Ë
	`glC›yTexSubImage3DEXT
—¨gë,Üevñ, xoff£t, yoff£t, zoff£t, x, y, width, height);
	}
}

1867 
PFNGLCOPYTEXIMAGE1DEXTPROC
 
	gpglC›yTexImage1DEXT
=
_Lazy_glC›yTexImage1DEXT
;

1868 
PFNGLCOPYTEXIMAGE2DEXTPROC
 
	gpglC›yTexImage2DEXT
=
_Lazy_glC›yTexImage2DEXT
;

1869 
PFNGLCOPYTEXSUBIMAGE1DEXTPROC
 
	gpglC›yTexSubImage1DEXT
=
_Lazy_glC›yTexSubImage1DEXT
;

1870 
PFNGLCOPYTEXSUBIMAGE2DEXTPROC
 
	gpglC›yTexSubImage2DEXT
=
_Lazy_glC›yTexSubImage2DEXT
;

1871 
PFNGLCOPYTEXSUBIMAGE3DEXTPROC
 
	gpglC›yTexSubImage3DEXT
=
_Lazy_glC›yTexSubImage3DEXT
;

1876 #ifde‡
__GLEE_GL_EXT_hi°ogøm


1877 
__°dˇŒ
 
	$_Lazy_glGëHi°ogømEXT
(
GLíum
 
èrgë
, 
GLboﬁón
 
ª£t
, GLíum 
f‹m©
, GLíum 
ty≥
, 
GLvoid
 * 
vÆues
Ë{i‡(
	`GLìInô
()Ë
	`glGëHi°ogømEXT
—¨gë,Ñe£t, f‹m©,Åy≥, vÆues);
	}
}

1878 
__°dˇŒ
 
	$_Lazy_glGëHi°ogømP¨amëîfvEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëHi°ogømP¨amëîfvEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

1879 
__°dˇŒ
 
	$_Lazy_glGëHi°ogømP¨amëîivEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëHi°ogømP¨amëîivEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

1880 
__°dˇŒ
 
	$_Lazy_glGëMömaxEXT
(
GLíum
 
èrgë
, 
GLboﬁón
 
ª£t
, GLíum 
f‹m©
, GLíum 
ty≥
, 
GLvoid
 * 
vÆues
Ë{i‡(
	`GLìInô
()Ë
	`glGëMömaxEXT
—¨gë,Ñe£t, f‹m©,Åy≥, vÆues);
	}
}

1881 
__°dˇŒ
 
	$_Lazy_glGëMömaxP¨amëîfvEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëMömaxP¨amëîfvEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

1882 
__°dˇŒ
 
	$_Lazy_glGëMömaxP¨amëîivEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëMömaxP¨amëîivEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

1883 
__°dˇŒ
 
	$_Lazy_glHi°ogømEXT
(
GLíum
 
èrgë
, 
GLsizei
 
width
, GLíum 
öã∫Æf‹m©
, 
GLboﬁón
 
sök
Ë{i‡(
	`GLìInô
()Ë
	`glHi°ogømEXT
—¨gë, width, i¡î«lf‹m©, sök);
	}
}

1884 
__°dˇŒ
 
	$_Lazy_glMömaxEXT
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLboﬁón
 
sök
Ë{i‡(
	`GLìInô
()Ë
	`glMömaxEXT
—¨gë, i¡î«lf‹m©, sök);
	}
}

1885 
__°dˇŒ
 
	$_Lazy_glRe£tHi°ogømEXT
(
GLíum
 
èrgë
Ë{i‡(
	`GLìInô
()Ë
	`glRe£tHi°ogømEXT
—¨gë);
	}
}

1886 
__°dˇŒ
 
	$_Lazy_glRe£tMömaxEXT
(
GLíum
 
èrgë
Ë{i‡(
	`GLìInô
()Ë
	`glRe£tMömaxEXT
—¨gë);
	}
}

1887 
PFNGLGETHISTOGRAMEXTPROC
 
	gpglGëHi°ogømEXT
=
_Lazy_glGëHi°ogømEXT
;

1888 
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC
 
	gpglGëHi°ogømP¨amëîfvEXT
=
_Lazy_glGëHi°ogømP¨amëîfvEXT
;

1889 
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC
 
	gpglGëHi°ogømP¨amëîivEXT
=
_Lazy_glGëHi°ogømP¨amëîivEXT
;

1890 
PFNGLGETMINMAXEXTPROC
 
	gpglGëMömaxEXT
=
_Lazy_glGëMömaxEXT
;

1891 
PFNGLGETMINMAXPARAMETERFVEXTPROC
 
	gpglGëMömaxP¨amëîfvEXT
=
_Lazy_glGëMömaxP¨amëîfvEXT
;

1892 
PFNGLGETMINMAXPARAMETERIVEXTPROC
 
	gpglGëMömaxP¨amëîivEXT
=
_Lazy_glGëMömaxP¨amëîivEXT
;

1893 
PFNGLHISTOGRAMEXTPROC
 
	gpglHi°ogømEXT
=
_Lazy_glHi°ogømEXT
;

1894 
PFNGLMINMAXEXTPROC
 
	gpglMömaxEXT
=
_Lazy_glMömaxEXT
;

1895 
PFNGLRESETHISTOGRAMEXTPROC
 
	gpglRe£tHi°ogømEXT
=
_Lazy_glRe£tHi°ogømEXT
;

1896 
PFNGLRESETMINMAXEXTPROC
 
	gpglRe£tMömaxEXT
=
_Lazy_glRe£tMömaxEXT
;

1901 #ifde‡
__GLEE_GL_EXT_c⁄vﬁuti⁄


1902 
__°dˇŒ
 
	$_Lazy_glC⁄vﬁuti⁄Fûãr1DEXT
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
image
Ë{i‡(
	`GLìInô
()Ë
	`glC⁄vﬁuti⁄Fûãr1DEXT
—¨gë, i¡î«lf‹m©, width, f‹m©,Åy≥, image);
	}
}

1903 
__°dˇŒ
 
	$_Lazy_glC⁄vﬁuti⁄Fûãr2DEXT
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
image
Ë{i‡(
	`GLìInô
()Ë
	`glC⁄vﬁuti⁄Fûãr2DEXT
—¨gë, i¡î«lf‹m©, width, height, f‹m©,Åy≥, image);
	}
}

1904 
__°dˇŒ
 
	$_Lazy_glC⁄vﬁuti⁄P¨amëîfEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glC⁄vﬁuti⁄P¨amëîfEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

1905 
__°dˇŒ
 
	$_Lazy_glC⁄vﬁuti⁄P¨amëîfvEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glC⁄vﬁuti⁄P¨amëîfvEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

1906 
__°dˇŒ
 
	$_Lazy_glC⁄vﬁuti⁄P¨amëîiEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glC⁄vﬁuti⁄P¨amëîiEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

1907 
__°dˇŒ
 
	$_Lazy_glC⁄vﬁuti⁄P¨amëîivEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glC⁄vﬁuti⁄P¨amëîivEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

1908 
__°dˇŒ
 
	$_Lazy_glC›yC⁄vﬁuti⁄Fûãr1DEXT
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
Ë{i‡(
	`GLìInô
()Ë
	`glC›yC⁄vﬁuti⁄Fûãr1DEXT
—¨gë, i¡î«lf‹m©, x, y, width);
	}
}

1909 
__°dˇŒ
 
	$_Lazy_glC›yC⁄vﬁuti⁄Fûãr2DEXT
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
, GLsizeò
height
Ë{i‡(
	`GLìInô
()Ë
	`glC›yC⁄vﬁuti⁄Fûãr2DEXT
—¨gë, i¡î«lf‹m©, x, y, width, height);
	}
}

1910 
__°dˇŒ
 
	$_Lazy_glGëC⁄vﬁuti⁄FûãrEXT
(
GLíum
 
èrgë
, GLíum 
f‹m©
, GLíum 
ty≥
, 
GLvoid
 * 
image
Ë{i‡(
	`GLìInô
()Ë
	`glGëC⁄vﬁuti⁄FûãrEXT
—¨gë, f‹m©,Åy≥, image);
	}
}

1911 
__°dˇŒ
 
	$_Lazy_glGëC⁄vﬁuti⁄P¨amëîfvEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëC⁄vﬁuti⁄P¨amëîfvEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

1912 
__°dˇŒ
 
	$_Lazy_glGëC⁄vﬁuti⁄P¨amëîivEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëC⁄vﬁuti⁄P¨amëîivEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

1913 
__°dˇŒ
 
	$_Lazy_glGëSï¨abÀFûãrEXT
(
GLíum
 
èrgë
, GLíum 
f‹m©
, GLíum 
ty≥
, 
GLvoid
 * 
row
, GLvoid * 
cﬁumn
, GLvoid * 
•™
Ë{i‡(
	`GLìInô
()Ë
	`glGëSï¨abÀFûãrEXT
—¨gë, f‹m©,Åy≥,Ñow, cﬁumn, s∑n);
	}
}

1914 
__°dˇŒ
 
	$_Lazy_glSï¨abÀFûãr2DEXT
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
row
, c⁄° GLvoid * 
cﬁumn
Ë{i‡(
	`GLìInô
()Ë
	`glSï¨abÀFûãr2DEXT
—¨gë, i¡î«lf‹m©, width, height, f‹m©,Åy≥,Ñow, cﬁumn);
	}
}

1915 
PFNGLCONVOLUTIONFILTER1DEXTPROC
 
	gpglC⁄vﬁuti⁄Fûãr1DEXT
=
_Lazy_glC⁄vﬁuti⁄Fûãr1DEXT
;

1916 
PFNGLCONVOLUTIONFILTER2DEXTPROC
 
	gpglC⁄vﬁuti⁄Fûãr2DEXT
=
_Lazy_glC⁄vﬁuti⁄Fûãr2DEXT
;

1917 
PFNGLCONVOLUTIONPARAMETERFEXTPROC
 
	gpglC⁄vﬁuti⁄P¨amëîfEXT
=
_Lazy_glC⁄vﬁuti⁄P¨amëîfEXT
;

1918 
PFNGLCONVOLUTIONPARAMETERFVEXTPROC
 
	gpglC⁄vﬁuti⁄P¨amëîfvEXT
=
_Lazy_glC⁄vﬁuti⁄P¨amëîfvEXT
;

1919 
PFNGLCONVOLUTIONPARAMETERIEXTPROC
 
	gpglC⁄vﬁuti⁄P¨amëîiEXT
=
_Lazy_glC⁄vﬁuti⁄P¨amëîiEXT
;

1920 
PFNGLCONVOLUTIONPARAMETERIVEXTPROC
 
	gpglC⁄vﬁuti⁄P¨amëîivEXT
=
_Lazy_glC⁄vﬁuti⁄P¨amëîivEXT
;

1921 
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC
 
	gpglC›yC⁄vﬁuti⁄Fûãr1DEXT
=
_Lazy_glC›yC⁄vﬁuti⁄Fûãr1DEXT
;

1922 
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC
 
	gpglC›yC⁄vﬁuti⁄Fûãr2DEXT
=
_Lazy_glC›yC⁄vﬁuti⁄Fûãr2DEXT
;

1923 
PFNGLGETCONVOLUTIONFILTEREXTPROC
 
	gpglGëC⁄vﬁuti⁄FûãrEXT
=
_Lazy_glGëC⁄vﬁuti⁄FûãrEXT
;

1924 
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC
 
	gpglGëC⁄vﬁuti⁄P¨amëîfvEXT
=
_Lazy_glGëC⁄vﬁuti⁄P¨amëîfvEXT
;

1925 
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC
 
	gpglGëC⁄vﬁuti⁄P¨amëîivEXT
=
_Lazy_glGëC⁄vﬁuti⁄P¨amëîivEXT
;

1926 
PFNGLGETSEPARABLEFILTEREXTPROC
 
	gpglGëSï¨abÀFûãrEXT
=
_Lazy_glGëSï¨abÀFûãrEXT
;

1927 
PFNGLSEPARABLEFILTER2DEXTPROC
 
	gpglSï¨abÀFûãr2DEXT
=
_Lazy_glSï¨abÀFûãr2DEXT
;

1932 #ifde‡
__GLEE_GL_SGI_cﬁ‹_m©rix


1937 #ifde‡
__GLEE_GL_SGI_cﬁ‹_èbÀ


1938 
__°dˇŒ
 
	$_Lazy_glCﬁ‹TabÀSGI
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
èbÀ
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹TabÀSGI
—¨gë, i¡î«lf‹m©, width, f‹m©,Åy≥,ÅabÀ);
	}
}

1939 
__°dˇŒ
 
	$_Lazy_glCﬁ‹TabÀP¨amëîfvSGI
(
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹TabÀP¨amëîfvSGI
—¨gë,Ö«me,Ö¨ams);
	}
}

1940 
__°dˇŒ
 
	$_Lazy_glCﬁ‹TabÀP¨amëîivSGI
(
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹TabÀP¨amëîivSGI
—¨gë,Ö«me,Ö¨ams);
	}
}

1941 
__°dˇŒ
 
	$_Lazy_glC›yCﬁ‹TabÀSGI
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
Ë{i‡(
	`GLìInô
()Ë
	`glC›yCﬁ‹TabÀSGI
—¨gë, i¡î«lf‹m©, x, y, width);
	}
}

1942 
__°dˇŒ
 
	$_Lazy_glGëCﬁ‹TabÀSGI
(
GLíum
 
èrgë
, GLíum 
f‹m©
, GLíum 
ty≥
, 
GLvoid
 * 
èbÀ
Ë{i‡(
	`GLìInô
()Ë
	`glGëCﬁ‹TabÀSGI
—¨gë, f‹m©,Åy≥,ÅabÀ);
	}
}

1943 
__°dˇŒ
 
	$_Lazy_glGëCﬁ‹TabÀP¨amëîfvSGI
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëCﬁ‹TabÀP¨amëîfvSGI
—¨gë,Ö«me,Ö¨ams);
	}
}

1944 
__°dˇŒ
 
	$_Lazy_glGëCﬁ‹TabÀP¨amëîivSGI
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëCﬁ‹TabÀP¨amëîivSGI
—¨gë,Ö«me,Ö¨ams);
	}
}

1945 
PFNGLCOLORTABLESGIPROC
 
	gpglCﬁ‹TabÀSGI
=
_Lazy_glCﬁ‹TabÀSGI
;

1946 
PFNGLCOLORTABLEPARAMETERFVSGIPROC
 
	gpglCﬁ‹TabÀP¨amëîfvSGI
=
_Lazy_glCﬁ‹TabÀP¨amëîfvSGI
;

1947 
PFNGLCOLORTABLEPARAMETERIVSGIPROC
 
	gpglCﬁ‹TabÀP¨amëîivSGI
=
_Lazy_glCﬁ‹TabÀP¨amëîivSGI
;

1948 
PFNGLCOPYCOLORTABLESGIPROC
 
	gpglC›yCﬁ‹TabÀSGI
=
_Lazy_glC›yCﬁ‹TabÀSGI
;

1949 
PFNGLGETCOLORTABLESGIPROC
 
	gpglGëCﬁ‹TabÀSGI
=
_Lazy_glGëCﬁ‹TabÀSGI
;

1950 
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC
 
	gpglGëCﬁ‹TabÀP¨amëîfvSGI
=
_Lazy_glGëCﬁ‹TabÀP¨amëîfvSGI
;

1951 
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC
 
	gpglGëCﬁ‹TabÀP¨amëîivSGI
=
_Lazy_glGëCﬁ‹TabÀP¨amëîivSGI
;

1956 #ifde‡
__GLEE_GL_SGIS_pixñ_ãxtuª


1957 
__°dˇŒ
 
	$_Lazy_glPixñTexGíP¨amëîiSGIS
(
GLíum
 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glPixñTexGíP¨amëîiSGIS
’«me,Ö¨am);
	}
}

1958 
__°dˇŒ
 
	$_Lazy_glPixñTexGíP¨amëîivSGIS
(
GLíum
 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glPixñTexGíP¨amëîivSGIS
’«me,Ö¨ams);
	}
}

1959 
__°dˇŒ
 
	$_Lazy_glPixñTexGíP¨amëîfSGIS
(
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glPixñTexGíP¨amëîfSGIS
’«me,Ö¨am);
	}
}

1960 
__°dˇŒ
 
	$_Lazy_glPixñTexGíP¨amëîfvSGIS
(
GLíum
 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glPixñTexGíP¨amëîfvSGIS
’«me,Ö¨ams);
	}
}

1961 
__°dˇŒ
 
	$_Lazy_glGëPixñTexGíP¨amëîivSGIS
(
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëPixñTexGíP¨amëîivSGIS
’«me,Ö¨ams);
	}
}

1962 
__°dˇŒ
 
	$_Lazy_glGëPixñTexGíP¨amëîfvSGIS
(
GLíum
 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëPixñTexGíP¨amëîfvSGIS
’«me,Ö¨ams);
	}
}

1963 
PFNGLPIXELTEXGENPARAMETERISGISPROC
 
	gpglPixñTexGíP¨amëîiSGIS
=
_Lazy_glPixñTexGíP¨amëîiSGIS
;

1964 
PFNGLPIXELTEXGENPARAMETERIVSGISPROC
 
	gpglPixñTexGíP¨amëîivSGIS
=
_Lazy_glPixñTexGíP¨amëîivSGIS
;

1965 
PFNGLPIXELTEXGENPARAMETERFSGISPROC
 
	gpglPixñTexGíP¨amëîfSGIS
=
_Lazy_glPixñTexGíP¨amëîfSGIS
;

1966 
PFNGLPIXELTEXGENPARAMETERFVSGISPROC
 
	gpglPixñTexGíP¨amëîfvSGIS
=
_Lazy_glPixñTexGíP¨amëîfvSGIS
;

1967 
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC
 
	gpglGëPixñTexGíP¨amëîivSGIS
=
_Lazy_glGëPixñTexGíP¨amëîivSGIS
;

1968 
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC
 
	gpglGëPixñTexGíP¨amëîfvSGIS
=
_Lazy_glGëPixñTexGíP¨amëîfvSGIS
;

1973 #ifde‡
__GLEE_GL_SGIX_pixñ_ãxtuª


1974 
__°dˇŒ
 
	$_Lazy_glPixñTexGíSGIX
(
GLíum
 
mode
Ë{i‡(
	`GLìInô
()Ë
	`glPixñTexGíSGIX
(mode);
	}
}

1975 
PFNGLPIXELTEXGENSGIXPROC
 
	gpglPixñTexGíSGIX
=
_Lazy_glPixñTexGíSGIX
;

1980 #ifde‡
__GLEE_GL_SGIS_ãxtuª4D


1981 
__°dˇŒ
 
	$_Lazy_glTexImage4DSGIS
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLsizeò
size4d
, GLöà
b‹dî
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
pixñs
Ë{i‡(
	`GLìInô
()Ë
	`glTexImage4DSGIS
—¨gë,Üevñ, i¡î«lf‹m©, width, height, dïth, size4d, b‹dî, f‹m©,Åy≥,Öixñs);
	}
}

1982 
__°dˇŒ
 
	$_Lazy_glTexSubImage4DSGIS
(
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, GLöà
yoff£t
, GLöà
zoff£t
, GLöà
woff£t
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLsizeò
size4d
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
pixñs
Ë{i‡(
	`GLìInô
()Ë
	`glTexSubImage4DSGIS
—¨gë,Üevñ, xoff£t, yoff£t, zoff£t, woff£t, width, height, dïth, size4d, f‹m©,Åy≥,Öixñs);
	}
}

1983 
PFNGLTEXIMAGE4DSGISPROC
 
	gpglTexImage4DSGIS
=
_Lazy_glTexImage4DSGIS
;

1984 
PFNGLTEXSUBIMAGE4DSGISPROC
 
	gpglTexSubImage4DSGIS
=
_Lazy_glTexSubImage4DSGIS
;

1989 #ifde‡
__GLEE_GL_SGI_ãxtuª_cﬁ‹_èbÀ


1994 #ifde‡
__GLEE_GL_EXT_cmyka


1999 #ifde‡
__GLEE_GL_EXT_ãxtuª_obje˘


2000 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glAªTextuªsResidítEXT
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
ãxtuªs
, 
GLboﬁón
 * 
ªsidí˚s
Ë{i‡(
	`GLìInô
()Ë 
	`glAªTextuªsResidítEXT
“,Åextuªs,Ñesidí˚s);  (GLboﬁón)0;
	}
}

2001 
__°dˇŒ
 
	$_Lazy_glBödTextuªEXT
(
GLíum
 
èrgë
, 
GLuöt
 
ãxtuª
Ë{i‡(
	`GLìInô
()Ë
	`glBödTextuªEXT
—¨gë,Åextuª);
	}
}

2002 
__°dˇŒ
 
	$_Lazy_glDñëeTextuªsEXT
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
ãxtuªs
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeTextuªsEXT
“,Åextuªs);
	}
}

2003 
__°dˇŒ
 
	$_Lazy_glGíTextuªsEXT
(
GLsizei
 
n
, 
GLuöt
 * 
ãxtuªs
Ë{i‡(
	`GLìInô
()Ë
	`glGíTextuªsEXT
“,Åextuªs);
	}
}

2004 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsTextuªEXT
(
GLuöt
 
ãxtuª
Ë{i‡(
	`GLìInô
()Ë 
	`glIsTextuªEXT
—extuª);  (
GLboﬁón
)0;
	}
}

2005 
__°dˇŒ
 
	$_Lazy_glPri‹ôizeTextuªsEXT
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
ãxtuªs
, c⁄° 
GL˛ampf
 * 
¥i‹ôõs
Ë{i‡(
	`GLìInô
()Ë
	`glPri‹ôizeTextuªsEXT
“,Åextuªs,Öri‹ôõs);
	}
}

2006 
PFNGLARETEXTURESRESIDENTEXTPROC
 
	gpglAªTextuªsResidítEXT
=
_Lazy_glAªTextuªsResidítEXT
;

2007 
PFNGLBINDTEXTUREEXTPROC
 
	gpglBödTextuªEXT
=
_Lazy_glBödTextuªEXT
;

2008 
PFNGLDELETETEXTURESEXTPROC
 
	gpglDñëeTextuªsEXT
=
_Lazy_glDñëeTextuªsEXT
;

2009 
PFNGLGENTEXTURESEXTPROC
 
	gpglGíTextuªsEXT
=
_Lazy_glGíTextuªsEXT
;

2010 
PFNGLISTEXTUREEXTPROC
 
	gpglIsTextuªEXT
=
_Lazy_glIsTextuªEXT
;

2011 
PFNGLPRIORITIZETEXTURESEXTPROC
 
	gpglPri‹ôizeTextuªsEXT
=
_Lazy_glPri‹ôizeTextuªsEXT
;

2016 #ifde‡
__GLEE_GL_SGIS_dëaû_ãxtuª


2017 
__°dˇŒ
 
	$_Lazy_glDëaûTexFuncSGIS
(
GLíum
 
èrgë
, 
GLsizei
 
n
, c⁄° 
GLÊﬂt
 * 
poöts
Ë{i‡(
	`GLìInô
()Ë
	`glDëaûTexFuncSGIS
—¨gë,Ç,Öoöts);
	}
}

2018 
__°dˇŒ
 
	$_Lazy_glGëDëaûTexFuncSGIS
(
GLíum
 
èrgë
, 
GLÊﬂt
 * 
poöts
Ë{i‡(
	`GLìInô
()Ë
	`glGëDëaûTexFuncSGIS
—¨gë,Öoöts);
	}
}

2019 
PFNGLDETAILTEXFUNCSGISPROC
 
	gpglDëaûTexFuncSGIS
=
_Lazy_glDëaûTexFuncSGIS
;

2020 
PFNGLGETDETAILTEXFUNCSGISPROC
 
	gpglGëDëaûTexFuncSGIS
=
_Lazy_glGëDëaûTexFuncSGIS
;

2025 #ifde‡
__GLEE_GL_SGIS_sh¨≥n_ãxtuª


2026 
__°dˇŒ
 
	$_Lazy_glSh¨≥nTexFuncSGIS
(
GLíum
 
èrgë
, 
GLsizei
 
n
, c⁄° 
GLÊﬂt
 * 
poöts
Ë{i‡(
	`GLìInô
()Ë
	`glSh¨≥nTexFuncSGIS
—¨gë,Ç,Öoöts);
	}
}

2027 
__°dˇŒ
 
	$_Lazy_glGëSh¨≥nTexFuncSGIS
(
GLíum
 
èrgë
, 
GLÊﬂt
 * 
poöts
Ë{i‡(
	`GLìInô
()Ë
	`glGëSh¨≥nTexFuncSGIS
—¨gë,Öoöts);
	}
}

2028 
PFNGLSHARPENTEXFUNCSGISPROC
 
	gpglSh¨≥nTexFuncSGIS
=
_Lazy_glSh¨≥nTexFuncSGIS
;

2029 
PFNGLGETSHARPENTEXFUNCSGISPROC
 
	gpglGëSh¨≥nTexFuncSGIS
=
_Lazy_glGëSh¨≥nTexFuncSGIS
;

2034 #ifde‡
__GLEE_GL_EXT_∑cked_pixñs


2039 #ifde‡
__GLEE_GL_SGIS_ãxtuª_lod


2044 #ifde‡
__GLEE_GL_SGIS_mu…ißm∂e


2045 
__°dˇŒ
 
	$_Lazy_glSam∂eMaskSGIS
(
GL˛ampf
 
vÆue
, 
GLboﬁón
 
övît
Ë{i‡(
	`GLìInô
()Ë
	`glSam∂eMaskSGIS
(vÆue, invît);
	}
}

2046 
__°dˇŒ
 
	$_Lazy_glSam∂eP©ã∫SGIS
(
GLíum
 
∑âîn
Ë{i‡(
	`GLìInô
()Ë
	`glSam∂eP©ã∫SGIS
’©ã∫);
	}
}

2047 
PFNGLSAMPLEMASKSGISPROC
 
	gpglSam∂eMaskSGIS
=
_Lazy_glSam∂eMaskSGIS
;

2048 
PFNGLSAMPLEPATTERNSGISPROC
 
	gpglSam∂eP©ã∫SGIS
=
_Lazy_glSam∂eP©ã∫SGIS
;

2053 #ifde‡
__GLEE_GL_EXT_ªsˇÀ_n‹mÆ


2058 #ifde‡
__GLEE_GL_EXT_vîãx_¨øy


2059 
__°dˇŒ
 
	$_Lazy_glAºayEÀmítEXT
(
GLöt
 
i
Ë{i‡(
	`GLìInô
()Ë
	`glAºayEÀmítEXT
(i);
	}
}

2060 
__°dˇŒ
 
	$_Lazy_glCﬁ‹PoöãrEXT
(
GLöt
 
size
, 
GLíum
 
ty≥
, 
GLsizei
 
°ride
, GLsizeò
cou¡
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹PoöãrEXT
(size,Åy≥, såide, cou¡,Öoöãr);
	}
}

2061 
__°dˇŒ
 
	$_Lazy_glDøwAºaysEXT
(
GLíum
 
mode
, 
GLöt
 
fú°
, 
GLsizei
 
cou¡
Ë{i‡(
	`GLìInô
()Ë
	`glDøwAºaysEXT
(mode, fú°, cou¡);
	}
}

2062 
__°dˇŒ
 
	$_Lazy_glEdgeFœgPoöãrEXT
(
GLsizei
 
°ride
, GLsizeò
cou¡
, c⁄° 
GLboﬁón
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glEdgeFœgPoöãrEXT
(°ride, cou¡,Öoöãr);
	}
}

2063 
__°dˇŒ
 
	$_Lazy_glGëPoöãrvEXT
(
GLíum
 
≤ame
, 
GLvoid
* * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëPoöãrvEXT
’«me,Ö¨ams);
	}
}

2064 
__°dˇŒ
 
	$_Lazy_glIndexPoöãrEXT
(
GLíum
 
ty≥
, 
GLsizei
 
°ride
, GLsizeò
cou¡
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glIndexPoöãrEXT
—y≥, såide, cou¡,Öoöãr);
	}
}

2065 
__°dˇŒ
 
	$_Lazy_glN‹mÆPoöãrEXT
(
GLíum
 
ty≥
, 
GLsizei
 
°ride
, GLsizeò
cou¡
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆPoöãrEXT
—y≥, såide, cou¡,Öoöãr);
	}
}

2066 
__°dˇŒ
 
	$_Lazy_glTexCo‹dPoöãrEXT
(
GLöt
 
size
, 
GLíum
 
ty≥
, 
GLsizei
 
°ride
, GLsizeò
cou¡
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹dPoöãrEXT
(size,Åy≥, såide, cou¡,Öoöãr);
	}
}

2067 
__°dˇŒ
 
	$_Lazy_glVîãxPoöãrEXT
(
GLöt
 
size
, 
GLíum
 
ty≥
, 
GLsizei
 
°ride
, GLsizeò
cou¡
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxPoöãrEXT
(size,Åy≥, såide, cou¡,Öoöãr);
	}
}

2068 
PFNGLARRAYELEMENTEXTPROC
 
	gpglAºayEÀmítEXT
=
_Lazy_glAºayEÀmítEXT
;

2069 
PFNGLCOLORPOINTEREXTPROC
 
	gpglCﬁ‹PoöãrEXT
=
_Lazy_glCﬁ‹PoöãrEXT
;

2070 
PFNGLDRAWARRAYSEXTPROC
 
	gpglDøwAºaysEXT
=
_Lazy_glDøwAºaysEXT
;

2071 
PFNGLEDGEFLAGPOINTEREXTPROC
 
	gpglEdgeFœgPoöãrEXT
=
_Lazy_glEdgeFœgPoöãrEXT
;

2072 
PFNGLGETPOINTERVEXTPROC
 
	gpglGëPoöãrvEXT
=
_Lazy_glGëPoöãrvEXT
;

2073 
PFNGLINDEXPOINTEREXTPROC
 
	gpglIndexPoöãrEXT
=
_Lazy_glIndexPoöãrEXT
;

2074 
PFNGLNORMALPOINTEREXTPROC
 
	gpglN‹mÆPoöãrEXT
=
_Lazy_glN‹mÆPoöãrEXT
;

2075 
PFNGLTEXCOORDPOINTEREXTPROC
 
	gpglTexCo‹dPoöãrEXT
=
_Lazy_glTexCo‹dPoöãrEXT
;

2076 
PFNGLVERTEXPOINTEREXTPROC
 
	gpglVîãxPoöãrEXT
=
_Lazy_glVîãxPoöãrEXT
;

2081 #ifde‡
__GLEE_GL_EXT_misc_©åibuã


2086 #ifde‡
__GLEE_GL_SGIS_gíî©e_mùm≠


2091 #ifde‡
__GLEE_GL_SGIX_˛ùm≠


2096 #ifde‡
__GLEE_GL_SGIX_shadow


2101 #ifde‡
__GLEE_GL_SGIS_ãxtuª_edge_˛amp


2106 #ifde‡
__GLEE_GL_SGIS_ãxtuª_b‹dî_˛amp


2111 #ifde‡
__GLEE_GL_EXT_bÀnd_mömax


2112 
__°dˇŒ
 
	$_Lazy_glBÀndEqu©i⁄EXT
(
GLíum
 
mode
Ë{i‡(
	`GLìInô
()Ë
	`glBÀndEqu©i⁄EXT
(mode);
	}
}

2113 
PFNGLBLENDEQUATIONEXTPROC
 
	gpglBÀndEqu©i⁄EXT
=
_Lazy_glBÀndEqu©i⁄EXT
;

2118 #ifde‡
__GLEE_GL_EXT_bÀnd_subåa˘


2123 #ifde‡
__GLEE_GL_EXT_bÀnd_logic_›


2128 #ifde‡
__GLEE_GL_SGIX_öãæa˚


2133 #ifde‡
__GLEE_GL_SGIX_pixñ_tûes


2138 #ifde‡
__GLEE_GL_SGIS_ãxtuª_£À˘


2143 #ifde‡
__GLEE_GL_SGIX_•rôe


2144 
__°dˇŒ
 
	$_Lazy_glS¥ôeP¨amëîfSGIX
(
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glS¥ôeP¨amëîfSGIX
’«me,Ö¨am);
	}
}

2145 
__°dˇŒ
 
	$_Lazy_glS¥ôeP¨amëîfvSGIX
(
GLíum
 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glS¥ôeP¨amëîfvSGIX
’«me,Ö¨ams);
	}
}

2146 
__°dˇŒ
 
	$_Lazy_glS¥ôeP¨amëîiSGIX
(
GLíum
 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glS¥ôeP¨amëîiSGIX
’«me,Ö¨am);
	}
}

2147 
__°dˇŒ
 
	$_Lazy_glS¥ôeP¨amëîivSGIX
(
GLíum
 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glS¥ôeP¨amëîivSGIX
’«me,Ö¨ams);
	}
}

2148 
PFNGLSPRITEPARAMETERFSGIXPROC
 
	gpglS¥ôeP¨amëîfSGIX
=
_Lazy_glS¥ôeP¨amëîfSGIX
;

2149 
PFNGLSPRITEPARAMETERFVSGIXPROC
 
	gpglS¥ôeP¨amëîfvSGIX
=
_Lazy_glS¥ôeP¨amëîfvSGIX
;

2150 
PFNGLSPRITEPARAMETERISGIXPROC
 
	gpglS¥ôeP¨amëîiSGIX
=
_Lazy_glS¥ôeP¨amëîiSGIX
;

2151 
PFNGLSPRITEPARAMETERIVSGIXPROC
 
	gpglS¥ôeP¨amëîivSGIX
=
_Lazy_glS¥ôeP¨amëîivSGIX
;

2156 #ifde‡
__GLEE_GL_SGIX_ãxtuª_mu…i_buf„r


2161 #ifde‡
__GLEE_GL_EXT_poöt_∑ømëîs


2162 
__°dˇŒ
 
	$_Lazy_glPoötP¨amëîfEXT
(
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glPoötP¨amëîfEXT
’«me,Ö¨am);
	}
}

2163 
__°dˇŒ
 
	$_Lazy_glPoötP¨amëîfvEXT
(
GLíum
 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glPoötP¨amëîfvEXT
’«me,Ö¨ams);
	}
}

2164 
PFNGLPOINTPARAMETERFEXTPROC
 
	gpglPoötP¨amëîfEXT
=
_Lazy_glPoötP¨amëîfEXT
;

2165 
PFNGLPOINTPARAMETERFVEXTPROC
 
	gpglPoötP¨amëîfvEXT
=
_Lazy_glPoötP¨amëîfvEXT
;

2170 #ifde‡
__GLEE_GL_SGIS_poöt_∑ømëîs


2171 
__°dˇŒ
 
	$_Lazy_glPoötP¨amëîfSGIS
(
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glPoötP¨amëîfSGIS
’«me,Ö¨am);
	}
}

2172 
__°dˇŒ
 
	$_Lazy_glPoötP¨amëîfvSGIS
(
GLíum
 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glPoötP¨amëîfvSGIS
’«me,Ö¨ams);
	}
}

2173 
PFNGLPOINTPARAMETERFSGISPROC
 
	gpglPoötP¨amëîfSGIS
=
_Lazy_glPoötP¨amëîfSGIS
;

2174 
PFNGLPOINTPARAMETERFVSGISPROC
 
	gpglPoötP¨amëîfvSGIS
=
_Lazy_glPoötP¨amëîfvSGIS
;

2179 #ifde‡
__GLEE_GL_SGIX_ö°rumíts


2180 
GLöt
 
__°dˇŒ
 
	$_Lazy_glGëIn°rumítsSGIX
(Ë{i‡(
	`GLìInô
()Ë 
	`glGëIn°rumítsSGIX
();  (
GLöt
)0;
	}
}

2181 
__°dˇŒ
 
	$_Lazy_glIn°rumítsBuf„rSGIX
(
GLsizei
 
size
, 
GLöt
 * 
buf„r
Ë{i‡(
	`GLìInô
()Ë
	`glIn°rumítsBuf„rSGIX
(size, buf„r);
	}
}

2182 
GLöt
 
__°dˇŒ
 
	$_Lazy_glPﬁlIn°rumítsSGIX
(
GLöt
 * 
m¨kî_p
Ë{i‡(
	`GLìInô
()Ë 
	`glPﬁlIn°rumítsSGIX
(m¨kî_p);  (GLöt)0;
	}
}

2183 
__°dˇŒ
 
	$_Lazy_glRódIn°rumítsSGIX
(
GLöt
 
m¨kî
Ë{i‡(
	`GLìInô
()Ë
	`glRódIn°rumítsSGIX
(m¨kî);
	}
}

2184 
__°dˇŒ
 
	$_Lazy_glSèπIn°rumítsSGIX
(Ë{i‡(
	`GLìInô
()Ë
	`glSèπIn°rumítsSGIX
();
	}
}

2185 
__°dˇŒ
 
	$_Lazy_glSt›In°rumítsSGIX
(
GLöt
 
m¨kî
Ë{i‡(
	`GLìInô
()Ë
	`glSt›In°rumítsSGIX
(m¨kî);
	}
}

2186 
PFNGLGETINSTRUMENTSSGIXPROC
 
	gpglGëIn°rumítsSGIX
=
_Lazy_glGëIn°rumítsSGIX
;

2187 
PFNGLINSTRUMENTSBUFFERSGIXPROC
 
	gpglIn°rumítsBuf„rSGIX
=
_Lazy_glIn°rumítsBuf„rSGIX
;

2188 
PFNGLPOLLINSTRUMENTSSGIXPROC
 
	gpglPﬁlIn°rumítsSGIX
=
_Lazy_glPﬁlIn°rumítsSGIX
;

2189 
PFNGLREADINSTRUMENTSSGIXPROC
 
	gpglRódIn°rumítsSGIX
=
_Lazy_glRódIn°rumítsSGIX
;

2190 
PFNGLSTARTINSTRUMENTSSGIXPROC
 
	gpglSèπIn°rumítsSGIX
=
_Lazy_glSèπIn°rumítsSGIX
;

2191 
PFNGLSTOPINSTRUMENTSSGIXPROC
 
	gpglSt›In°rumítsSGIX
=
_Lazy_glSt›In°rumítsSGIX
;

2196 #ifde‡
__GLEE_GL_SGIX_ãxtuª_sˇÀ_büs


2201 #ifde‡
__GLEE_GL_SGIX_‰amezoom


2202 
__°dˇŒ
 
	$_Lazy_glFømeZoomSGIX
(
GLöt
 
Á˘‹
Ë{i‡(
	`GLìInô
()Ë
	`glFømeZoomSGIX
(Á˘‹);
	}
}

2203 
PFNGLFRAMEZOOMSGIXPROC
 
	gpglFømeZoomSGIX
=
_Lazy_glFømeZoomSGIX
;

2208 #ifde‡
__GLEE_GL_SGIX_èg_ßm∂e_buf„r


2209 
__°dˇŒ
 
	$_Lazy_glTagSam∂eBuf„rSGIX
(Ë{i‡(
	`GLìInô
()Ë
	`glTagSam∂eBuf„rSGIX
();
	}
}

2210 
PFNGLTAGSAMPLEBUFFERSGIXPROC
 
	gpglTagSam∂eBuf„rSGIX
=
_Lazy_glTagSam∂eBuf„rSGIX
;

2215 #ifde‡
__GLEE_GL_FfdMaskSGIX


2220 #ifde‡
__GLEE_GL_SGIX_pﬁynomül_ffd


2221 
__°dˇŒ
 
	$_Lazy_glDef‹m©i⁄M≠3dSGIX
(
GLíum
 
èrgë
, 
GLdoubÀ
 
u1
, GLdoubÀ 
u2
, 
GLöt
 
u°ride
, GLöà
u‹dî
, GLdoubÀ 
v1
, GLdoubÀ 
v2
, GLöà
v°ride
, GLöà
v‹dî
, GLdoubÀ 
w1
, GLdoubÀ 
w2
, GLöà
w°ride
, GLöà
w‹dî
, c⁄° GLdoubÀ * 
poöts
Ë{i‡(
	`GLìInô
()Ë
	`glDef‹m©i⁄M≠3dSGIX
—¨gë, u1, u2, u°ride, u‹dî, v1, v2, v°ride, v‹dî, w1, w2, w°ride, w‹dî,Öoöts);
	}
}

2222 
__°dˇŒ
 
	$_Lazy_glDef‹m©i⁄M≠3fSGIX
(
GLíum
 
èrgë
, 
GLÊﬂt
 
u1
, GLÊﬂà
u2
, 
GLöt
 
u°ride
, GLöà
u‹dî
, GLÊﬂà
v1
, GLÊﬂà
v2
, GLöà
v°ride
, GLöà
v‹dî
, GLÊﬂà
w1
, GLÊﬂà
w2
, GLöà
w°ride
, GLöà
w‹dî
, c⁄° GLÊﬂà* 
poöts
Ë{i‡(
	`GLìInô
()Ë
	`glDef‹m©i⁄M≠3fSGIX
—¨gë, u1, u2, u°ride, u‹dî, v1, v2, v°ride, v‹dî, w1, w2, w°ride, w‹dî,Öoöts);
	}
}

2223 
__°dˇŒ
 
	$_Lazy_glDef‹mSGIX
(
GLbôfõld
 
mask
Ë{i‡(
	`GLìInô
()Ë
	`glDef‹mSGIX
(mask);
	}
}

2224 
__°dˇŒ
 
	$_Lazy_glLﬂdIdítôyDef‹m©i⁄M≠SGIX
(
GLbôfõld
 
mask
Ë{i‡(
	`GLìInô
()Ë
	`glLﬂdIdítôyDef‹m©i⁄M≠SGIX
(mask);
	}
}

2225 
PFNGLDEFORMATIONMAP3DSGIXPROC
 
	gpglDef‹m©i⁄M≠3dSGIX
=
_Lazy_glDef‹m©i⁄M≠3dSGIX
;

2226 
PFNGLDEFORMATIONMAP3FSGIXPROC
 
	gpglDef‹m©i⁄M≠3fSGIX
=
_Lazy_glDef‹m©i⁄M≠3fSGIX
;

2227 
PFNGLDEFORMSGIXPROC
 
	gpglDef‹mSGIX
=
_Lazy_glDef‹mSGIX
;

2228 
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC
 
	gpglLﬂdIdítôyDef‹m©i⁄M≠SGIX
=
_Lazy_glLﬂdIdítôyDef‹m©i⁄M≠SGIX
;

2233 #ifde‡
__GLEE_GL_SGIX_ª„ªn˚_∂™e


2234 
__°dˇŒ
 
	$_Lazy_glRe„ªn˚Pœ√SGIX
(c⁄° 
GLdoubÀ
 * 
equ©i⁄
Ë{i‡(
	`GLìInô
()Ë
	`glRe„ªn˚Pœ√SGIX
”qu©i⁄);
	}
}

2235 
PFNGLREFERENCEPLANESGIXPROC
 
	gpglRe„ªn˚Pœ√SGIX
=
_Lazy_glRe„ªn˚Pœ√SGIX
;

2240 #ifde‡
__GLEE_GL_SGIX_Êush_ø°î


2241 
__°dˇŒ
 
	$_Lazy_glFlushRa°îSGIX
(Ë{i‡(
	`GLìInô
()Ë
	`glFlushRa°îSGIX
();
	}
}

2242 
PFNGLFLUSHRASTERSGIXPROC
 
	gpglFlushRa°îSGIX
=
_Lazy_glFlushRa°îSGIX
;

2247 #ifde‡
__GLEE_GL_SGIX_dïth_ãxtuª


2252 #ifde‡
__GLEE_GL_SGIS_fog_fun˘i⁄


2253 
__°dˇŒ
 
	$_Lazy_glFogFuncSGIS
(
GLsizei
 
n
, c⁄° 
GLÊﬂt
 * 
poöts
Ë{i‡(
	`GLìInô
()Ë
	`glFogFuncSGIS
“,Öoöts);
	}
}

2254 
__°dˇŒ
 
	$_Lazy_glGëFogFuncSGIS
(
GLÊﬂt
 * 
poöts
Ë{i‡(
	`GLìInô
()Ë
	`glGëFogFuncSGIS
’oöts);
	}
}

2255 
PFNGLFOGFUNCSGISPROC
 
	gpglFogFuncSGIS
=
_Lazy_glFogFuncSGIS
;

2256 
PFNGLGETFOGFUNCSGISPROC
 
	gpglGëFogFuncSGIS
=
_Lazy_glGëFogFuncSGIS
;

2261 #ifde‡
__GLEE_GL_SGIX_fog_off£t


2266 #ifde‡
__GLEE_GL_HP_image_å™sf‹m


2267 
__°dˇŒ
 
	$_Lazy_glImageTønsf‹mP¨amëîiHP
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glImageTønsf‹mP¨amëîiHP
—¨gë,Ö«me,Ö¨am);
	}
}

2268 
__°dˇŒ
 
	$_Lazy_glImageTønsf‹mP¨amëîfHP
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glImageTønsf‹mP¨amëîfHP
—¨gë,Ö«me,Ö¨am);
	}
}

2269 
__°dˇŒ
 
	$_Lazy_glImageTønsf‹mP¨amëîivHP
(
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glImageTønsf‹mP¨amëîivHP
—¨gë,Ö«me,Ö¨ams);
	}
}

2270 
__°dˇŒ
 
	$_Lazy_glImageTønsf‹mP¨amëîfvHP
(
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glImageTønsf‹mP¨amëîfvHP
—¨gë,Ö«me,Ö¨ams);
	}
}

2271 
__°dˇŒ
 
	$_Lazy_glGëImageTønsf‹mP¨amëîivHP
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëImageTønsf‹mP¨amëîivHP
—¨gë,Ö«me,Ö¨ams);
	}
}

2272 
__°dˇŒ
 
	$_Lazy_glGëImageTønsf‹mP¨amëîfvHP
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëImageTønsf‹mP¨amëîfvHP
—¨gë,Ö«me,Ö¨ams);
	}
}

2273 
PFNGLIMAGETRANSFORMPARAMETERIHPPROC
 
	gpglImageTønsf‹mP¨amëîiHP
=
_Lazy_glImageTønsf‹mP¨amëîiHP
;

2274 
PFNGLIMAGETRANSFORMPARAMETERFHPPROC
 
	gpglImageTønsf‹mP¨amëîfHP
=
_Lazy_glImageTønsf‹mP¨amëîfHP
;

2275 
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC
 
	gpglImageTønsf‹mP¨amëîivHP
=
_Lazy_glImageTønsf‹mP¨amëîivHP
;

2276 
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC
 
	gpglImageTønsf‹mP¨amëîfvHP
=
_Lazy_glImageTønsf‹mP¨amëîfvHP
;

2277 
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC
 
	gpglGëImageTønsf‹mP¨amëîivHP
=
_Lazy_glGëImageTønsf‹mP¨amëîivHP
;

2278 
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC
 
	gpglGëImageTønsf‹mP¨amëîfvHP
=
_Lazy_glGëImageTønsf‹mP¨amëîfvHP
;

2283 #ifde‡
__GLEE_GL_HP_c⁄vﬁuti⁄_b‹dî_modes


2288 #ifde‡
__GLEE_GL_INGR_∑Àâe_buf„r


2293 #ifde‡
__GLEE_GL_SGIX_ãxtuª_add_ív


2298 #ifde‡
__GLEE_GL_EXT_cﬁ‹_subèbÀ


2299 
__°dˇŒ
 
	$_Lazy_glCﬁ‹SubTabÀEXT
(
GLíum
 
èrgë
, 
GLsizei
 
°¨t
, GLsizeò
cou¡
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹SubTabÀEXT
—¨gë, sèπ, cou¡, f‹m©,Åy≥, d©a);
	}
}

2300 
__°dˇŒ
 
	$_Lazy_glC›yCﬁ‹SubTabÀEXT
(
GLíum
 
èrgë
, 
GLsizei
 
°¨t
, 
GLöt
 
x
, GLöà
y
, GLsizeò
width
Ë{i‡(
	`GLìInô
()Ë
	`glC›yCﬁ‹SubTabÀEXT
—¨gë, sèπ, x, y, width);
	}
}

2301 
PFNGLCOLORSUBTABLEEXTPROC
 
	gpglCﬁ‹SubTabÀEXT
=
_Lazy_glCﬁ‹SubTabÀEXT
;

2302 
PFNGLCOPYCOLORSUBTABLEEXTPROC
 
	gpglC›yCﬁ‹SubTabÀEXT
=
_Lazy_glC›yCﬁ‹SubTabÀEXT
;

2307 #ifde‡
__GLEE_GL_PGI_vîãx_höts


2312 #ifde‡
__GLEE_GL_PGI_misc_höts


2313 
__°dˇŒ
 
	$_Lazy_glHötPGI
(
GLíum
 
èrgë
, 
GLöt
 
mode
Ë{i‡(
	`GLìInô
()Ë
	`glHötPGI
—¨gë, mode);
	}
}

2314 
PFNGLHINTPGIPROC
 
	gpglHötPGI
=
_Lazy_glHötPGI
;

2319 #ifde‡
__GLEE_GL_EXT_∑Àâed_ãxtuª


2320 
__°dˇŒ
 
	$_Lazy_glCﬁ‹TabÀEXT
(
GLíum
 
èrgë
, GLíum 
öã∫ÆF‹m©
, 
GLsizei
 
width
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
èbÀ
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹TabÀEXT
—¨gë, i¡î«lF‹m©, width, f‹m©,Åy≥,ÅabÀ);
	}
}

2321 
__°dˇŒ
 
	$_Lazy_glGëCﬁ‹TabÀEXT
(
GLíum
 
èrgë
, GLíum 
f‹m©
, GLíum 
ty≥
, 
GLvoid
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glGëCﬁ‹TabÀEXT
—¨gë, f‹m©,Åy≥, d©a);
	}
}

2322 
__°dˇŒ
 
	$_Lazy_glGëCﬁ‹TabÀP¨amëîivEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëCﬁ‹TabÀP¨amëîivEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

2323 
__°dˇŒ
 
	$_Lazy_glGëCﬁ‹TabÀP¨amëîfvEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëCﬁ‹TabÀP¨amëîfvEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

2324 
PFNGLCOLORTABLEEXTPROC
 
	gpglCﬁ‹TabÀEXT
=
_Lazy_glCﬁ‹TabÀEXT
;

2325 
PFNGLGETCOLORTABLEEXTPROC
 
	gpglGëCﬁ‹TabÀEXT
=
_Lazy_glGëCﬁ‹TabÀEXT
;

2326 
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC
 
	gpglGëCﬁ‹TabÀP¨amëîivEXT
=
_Lazy_glGëCﬁ‹TabÀP¨amëîivEXT
;

2327 
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC
 
	gpglGëCﬁ‹TabÀP¨amëîfvEXT
=
_Lazy_glGëCﬁ‹TabÀP¨amëîfvEXT
;

2332 #ifde‡
__GLEE_GL_EXT_˛ù_vﬁume_höt


2337 #ifde‡
__GLEE_GL_SGIX_li°_¥i‹ôy


2338 
__°dˇŒ
 
	$_Lazy_glGëLi°P¨amëîfvSGIX
(
GLuöt
 
li°
, 
GLíum
 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëLi°P¨amëîfvSGIX
÷i°,Ö«me,Ö¨ams);
	}
}

2339 
__°dˇŒ
 
	$_Lazy_glGëLi°P¨amëîivSGIX
(
GLuöt
 
li°
, 
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëLi°P¨amëîivSGIX
÷i°,Ö«me,Ö¨ams);
	}
}

2340 
__°dˇŒ
 
	$_Lazy_glLi°P¨amëîfSGIX
(
GLuöt
 
li°
, 
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glLi°P¨amëîfSGIX
÷i°,Ö«me,Ö¨am);
	}
}

2341 
__°dˇŒ
 
	$_Lazy_glLi°P¨amëîfvSGIX
(
GLuöt
 
li°
, 
GLíum
 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glLi°P¨amëîfvSGIX
÷i°,Ö«me,Ö¨ams);
	}
}

2342 
__°dˇŒ
 
	$_Lazy_glLi°P¨amëîiSGIX
(
GLuöt
 
li°
, 
GLíum
 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glLi°P¨amëîiSGIX
÷i°,Ö«me,Ö¨am);
	}
}

2343 
__°dˇŒ
 
	$_Lazy_glLi°P¨amëîivSGIX
(
GLuöt
 
li°
, 
GLíum
 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glLi°P¨amëîivSGIX
÷i°,Ö«me,Ö¨ams);
	}
}

2344 
PFNGLGETLISTPARAMETERFVSGIXPROC
 
	gpglGëLi°P¨amëîfvSGIX
=
_Lazy_glGëLi°P¨amëîfvSGIX
;

2345 
PFNGLGETLISTPARAMETERIVSGIXPROC
 
	gpglGëLi°P¨amëîivSGIX
=
_Lazy_glGëLi°P¨amëîivSGIX
;

2346 
PFNGLLISTPARAMETERFSGIXPROC
 
	gpglLi°P¨amëîfSGIX
=
_Lazy_glLi°P¨amëîfSGIX
;

2347 
PFNGLLISTPARAMETERFVSGIXPROC
 
	gpglLi°P¨amëîfvSGIX
=
_Lazy_glLi°P¨amëîfvSGIX
;

2348 
PFNGLLISTPARAMETERISGIXPROC
 
	gpglLi°P¨amëîiSGIX
=
_Lazy_glLi°P¨amëîiSGIX
;

2349 
PFNGLLISTPARAMETERIVSGIXPROC
 
	gpglLi°P¨amëîivSGIX
=
_Lazy_glLi°P¨amëîivSGIX
;

2354 #ifde‡
__GLEE_GL_SGIX_ú_ö°rumít1


2359 #ifde‡
__GLEE_GL_SGIX_ˇŒigøphic_‰agmít


2364 #ifde‡
__GLEE_GL_SGIX_ãxtuª_lod_büs


2369 #ifde‡
__GLEE_GL_SGIX_shadow_ambõ¡


2374 #ifde‡
__GLEE_GL_EXT_ödex_ãxtuª


2379 #ifde‡
__GLEE_GL_EXT_ödex_m©îül


2380 
__°dˇŒ
 
	$_Lazy_glIndexM©îülEXT
(
GLíum
 
Á˚
, GLíum 
mode
Ë{i‡(
	`GLìInô
()Ë
	`glIndexM©îülEXT
(Á˚, mode);
	}
}

2381 
PFNGLINDEXMATERIALEXTPROC
 
	gpglIndexM©îülEXT
=
_Lazy_glIndexM©îülEXT
;

2386 #ifde‡
__GLEE_GL_EXT_ödex_func


2387 
__°dˇŒ
 
	$_Lazy_glIndexFuncEXT
(
GLíum
 
func
, 
GL˛ampf
 
ªf
Ë{i‡(
	`GLìInô
()Ë
	`glIndexFuncEXT
(func,Ñef);
	}
}

2388 
PFNGLINDEXFUNCEXTPROC
 
	gpglIndexFuncEXT
=
_Lazy_glIndexFuncEXT
;

2393 #ifde‡
__GLEE_GL_EXT_ödex_¨øy_f‹m©s


2398 #ifde‡
__GLEE_GL_EXT_compûed_vîãx_¨øy


2399 
__°dˇŒ
 
	$_Lazy_glLockAºaysEXT
(
GLöt
 
fú°
, 
GLsizei
 
cou¡
Ë{i‡(
	`GLìInô
()Ë
	`glLockAºaysEXT
(fú°, cou¡);
	}
}

2400 
__°dˇŒ
 
	$_Lazy_glU∆ockAºaysEXT
(Ë{i‡(
	`GLìInô
()Ë
	`glU∆ockAºaysEXT
();
	}
}

2401 
PFNGLLOCKARRAYSEXTPROC
 
	gpglLockAºaysEXT
=
_Lazy_glLockAºaysEXT
;

2402 
PFNGLUNLOCKARRAYSEXTPROC
 
	gpglU∆ockAºaysEXT
=
_Lazy_glU∆ockAºaysEXT
;

2407 #ifde‡
__GLEE_GL_EXT_cuŒ_vîãx


2408 
__°dˇŒ
 
	$_Lazy_glCuŒP¨amëîdvEXT
(
GLíum
 
≤ame
, 
GLdoubÀ
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glCuŒP¨amëîdvEXT
’«me,Ö¨ams);
	}
}

2409 
__°dˇŒ
 
	$_Lazy_glCuŒP¨amëîfvEXT
(
GLíum
 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glCuŒP¨amëîfvEXT
’«me,Ö¨ams);
	}
}

2410 
PFNGLCULLPARAMETERDVEXTPROC
 
	gpglCuŒP¨amëîdvEXT
=
_Lazy_glCuŒP¨amëîdvEXT
;

2411 
PFNGLCULLPARAMETERFVEXTPROC
 
	gpglCuŒP¨amëîfvEXT
=
_Lazy_glCuŒP¨amëîfvEXT
;

2416 #ifde‡
__GLEE_GL_SGIX_y¸cb


2421 #ifde‡
__GLEE_GL_SGIX_‰agmít_lightög


2422 
__°dˇŒ
 
	$_Lazy_glFøgmítCﬁ‹M©îülSGIX
(
GLíum
 
Á˚
, GLíum 
mode
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítCﬁ‹M©îülSGIX
(Á˚, mode);
	}
}

2423 
__°dˇŒ
 
	$_Lazy_glFøgmítLightfSGIX
(
GLíum
 
light
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítLightfSGIX
÷ight,Ö«me,Ö¨am);
	}
}

2424 
__°dˇŒ
 
	$_Lazy_glFøgmítLightfvSGIX
(
GLíum
 
light
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítLightfvSGIX
÷ight,Ö«me,Ö¨ams);
	}
}

2425 
__°dˇŒ
 
	$_Lazy_glFøgmítLightiSGIX
(
GLíum
 
light
, GLíum 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítLightiSGIX
÷ight,Ö«me,Ö¨am);
	}
}

2426 
__°dˇŒ
 
	$_Lazy_glFøgmítLightivSGIX
(
GLíum
 
light
, GLíum 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítLightivSGIX
÷ight,Ö«me,Ö¨ams);
	}
}

2427 
__°dˇŒ
 
	$_Lazy_glFøgmítLightModñfSGIX
(
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítLightModñfSGIX
’«me,Ö¨am);
	}
}

2428 
__°dˇŒ
 
	$_Lazy_glFøgmítLightModñfvSGIX
(
GLíum
 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítLightModñfvSGIX
’«me,Ö¨ams);
	}
}

2429 
__°dˇŒ
 
	$_Lazy_glFøgmítLightModñiSGIX
(
GLíum
 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítLightModñiSGIX
’«me,Ö¨am);
	}
}

2430 
__°dˇŒ
 
	$_Lazy_glFøgmítLightModñivSGIX
(
GLíum
 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítLightModñivSGIX
’«me,Ö¨ams);
	}
}

2431 
__°dˇŒ
 
	$_Lazy_glFøgmítM©îülfSGIX
(
GLíum
 
Á˚
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítM©îülfSGIX
(Á˚,Ö«me,Ö¨am);
	}
}

2432 
__°dˇŒ
 
	$_Lazy_glFøgmítM©îülfvSGIX
(
GLíum
 
Á˚
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítM©îülfvSGIX
(Á˚,Ö«me,Ö¨ams);
	}
}

2433 
__°dˇŒ
 
	$_Lazy_glFøgmítM©îüliSGIX
(
GLíum
 
Á˚
, GLíum 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítM©îüliSGIX
(Á˚,Ö«me,Ö¨am);
	}
}

2434 
__°dˇŒ
 
	$_Lazy_glFøgmítM©îülivSGIX
(
GLíum
 
Á˚
, GLíum 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítM©îülivSGIX
(Á˚,Ö«me,Ö¨ams);
	}
}

2435 
__°dˇŒ
 
	$_Lazy_glGëFøgmítLightfvSGIX
(
GLíum
 
light
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëFøgmítLightfvSGIX
÷ight,Ö«me,Ö¨ams);
	}
}

2436 
__°dˇŒ
 
	$_Lazy_glGëFøgmítLightivSGIX
(
GLíum
 
light
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëFøgmítLightivSGIX
÷ight,Ö«me,Ö¨ams);
	}
}

2437 
__°dˇŒ
 
	$_Lazy_glGëFøgmítM©îülfvSGIX
(
GLíum
 
Á˚
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëFøgmítM©îülfvSGIX
(Á˚,Ö«me,Ö¨ams);
	}
}

2438 
__°dˇŒ
 
	$_Lazy_glGëFøgmítM©îülivSGIX
(
GLíum
 
Á˚
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëFøgmítM©îülivSGIX
(Á˚,Ö«me,Ö¨ams);
	}
}

2439 
__°dˇŒ
 
	$_Lazy_glLightEnviSGIX
(
GLíum
 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glLightEnviSGIX
’«me,Ö¨am);
	}
}

2440 
PFNGLFRAGMENTCOLORMATERIALSGIXPROC
 
	gpglFøgmítCﬁ‹M©îülSGIX
=
_Lazy_glFøgmítCﬁ‹M©îülSGIX
;

2441 
PFNGLFRAGMENTLIGHTFSGIXPROC
 
	gpglFøgmítLightfSGIX
=
_Lazy_glFøgmítLightfSGIX
;

2442 
PFNGLFRAGMENTLIGHTFVSGIXPROC
 
	gpglFøgmítLightfvSGIX
=
_Lazy_glFøgmítLightfvSGIX
;

2443 
PFNGLFRAGMENTLIGHTISGIXPROC
 
	gpglFøgmítLightiSGIX
=
_Lazy_glFøgmítLightiSGIX
;

2444 
PFNGLFRAGMENTLIGHTIVSGIXPROC
 
	gpglFøgmítLightivSGIX
=
_Lazy_glFøgmítLightivSGIX
;

2445 
PFNGLFRAGMENTLIGHTMODELFSGIXPROC
 
	gpglFøgmítLightModñfSGIX
=
_Lazy_glFøgmítLightModñfSGIX
;

2446 
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC
 
	gpglFøgmítLightModñfvSGIX
=
_Lazy_glFøgmítLightModñfvSGIX
;

2447 
PFNGLFRAGMENTLIGHTMODELISGIXPROC
 
	gpglFøgmítLightModñiSGIX
=
_Lazy_glFøgmítLightModñiSGIX
;

2448 
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC
 
	gpglFøgmítLightModñivSGIX
=
_Lazy_glFøgmítLightModñivSGIX
;

2449 
PFNGLFRAGMENTMATERIALFSGIXPROC
 
	gpglFøgmítM©îülfSGIX
=
_Lazy_glFøgmítM©îülfSGIX
;

2450 
PFNGLFRAGMENTMATERIALFVSGIXPROC
 
	gpglFøgmítM©îülfvSGIX
=
_Lazy_glFøgmítM©îülfvSGIX
;

2451 
PFNGLFRAGMENTMATERIALISGIXPROC
 
	gpglFøgmítM©îüliSGIX
=
_Lazy_glFøgmítM©îüliSGIX
;

2452 
PFNGLFRAGMENTMATERIALIVSGIXPROC
 
	gpglFøgmítM©îülivSGIX
=
_Lazy_glFøgmítM©îülivSGIX
;

2453 
PFNGLGETFRAGMENTLIGHTFVSGIXPROC
 
	gpglGëFøgmítLightfvSGIX
=
_Lazy_glGëFøgmítLightfvSGIX
;

2454 
PFNGLGETFRAGMENTLIGHTIVSGIXPROC
 
	gpglGëFøgmítLightivSGIX
=
_Lazy_glGëFøgmítLightivSGIX
;

2455 
PFNGLGETFRAGMENTMATERIALFVSGIXPROC
 
	gpglGëFøgmítM©îülfvSGIX
=
_Lazy_glGëFøgmítM©îülfvSGIX
;

2456 
PFNGLGETFRAGMENTMATERIALIVSGIXPROC
 
	gpglGëFøgmítM©îülivSGIX
=
_Lazy_glGëFøgmítM©îülivSGIX
;

2457 
PFNGLLIGHTENVISGIXPROC
 
	gpglLightEnviSGIX
=
_Lazy_glLightEnviSGIX
;

2462 #ifde‡
__GLEE_GL_IBM_ø°îpos_˛ù


2467 #ifde‡
__GLEE_GL_HP_ãxtuª_lightög


2472 #ifde‡
__GLEE_GL_EXT_døw_ønge_ñemíts


2473 
__°dˇŒ
 
	$_Lazy_glDøwR™geEÀmítsEXT
(
GLíum
 
mode
, 
GLuöt
 
°¨t
, GLuöà
íd
, 
GLsizei
 
cou¡
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
ödi˚s
Ë{i‡(
	`GLìInô
()Ë
	`glDøwR™geEÀmítsEXT
(mode, sèπ,Énd, cou¡,Åy≥, indi˚s);
	}
}

2474 
PFNGLDRAWRANGEELEMENTSEXTPROC
 
	gpglDøwR™geEÀmítsEXT
=
_Lazy_glDøwR™geEÀmítsEXT
;

2479 #ifde‡
__GLEE_GL_WIN_ph⁄g_shadög


2484 #ifde‡
__GLEE_GL_WIN_•ecuœr_fog


2489 #ifde‡
__GLEE_GL_EXT_light_ãxtuª


2490 
__°dˇŒ
 
	$_Lazy_glAµlyTextuªEXT
(
GLíum
 
mode
Ë{i‡(
	`GLìInô
()Ë
	`glAµlyTextuªEXT
(mode);
	}
}

2491 
__°dˇŒ
 
	$_Lazy_glTextuªLightEXT
(
GLíum
 
≤ame
Ë{i‡(
	`GLìInô
()Ë
	`glTextuªLightEXT
’«me);
	}
}

2492 
__°dˇŒ
 
	$_Lazy_glTextuªM©îülEXT
(
GLíum
 
Á˚
, GLíum 
mode
Ë{i‡(
	`GLìInô
()Ë
	`glTextuªM©îülEXT
(Á˚, mode);
	}
}

2493 
PFNGLAPPLYTEXTUREEXTPROC
 
	gpglAµlyTextuªEXT
=
_Lazy_glAµlyTextuªEXT
;

2494 
PFNGLTEXTURELIGHTEXTPROC
 
	gpglTextuªLightEXT
=
_Lazy_glTextuªLightEXT
;

2495 
PFNGLTEXTUREMATERIALEXTPROC
 
	gpglTextuªM©îülEXT
=
_Lazy_glTextuªM©îülEXT
;

2500 #ifde‡
__GLEE_GL_SGIX_bÀnd_Æpha_mömax


2505 #ifde‡
__GLEE_GL_SGIX_im∑˘_pixñ_ãxtuª


2510 #ifde‡
__GLEE_GL_EXT_bgø


2515 #ifde‡
__GLEE_GL_SGIX_async


2516 
__°dˇŒ
 
	$_Lazy_glAsyncM¨kîSGIX
(
GLuöt
 
m¨kî
Ë{i‡(
	`GLìInô
()Ë
	`glAsyncM¨kîSGIX
(m¨kî);
	}
}

2517 
GLöt
 
__°dˇŒ
 
	$_Lazy_glFöishAsyncSGIX
(
GLuöt
 * 
m¨kîp
Ë{i‡(
	`GLìInô
()Ë 
	`glFöishAsyncSGIX
(m¨kîp);  (
GLöt
)0;
	}
}

2518 
GLöt
 
__°dˇŒ
 
	$_Lazy_glPﬁlAsyncSGIX
(
GLuöt
 * 
m¨kîp
Ë{i‡(
	`GLìInô
()Ë 
	`glPﬁlAsyncSGIX
(m¨kîp);  (
GLöt
)0;
	}
}

2519 
GLuöt
 
__°dˇŒ
 
	$_Lazy_glGíAsyncM¨kîsSGIX
(
GLsizei
 
ønge
Ë{i‡(
	`GLìInô
()Ë 
	`glGíAsyncM¨kîsSGIX
‘™ge);  (
GLuöt
)0;
	}
}

2520 
__°dˇŒ
 
	$_Lazy_glDñëeAsyncM¨kîsSGIX
(
GLuöt
 
m¨kî
, 
GLsizei
 
ønge
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeAsyncM¨kîsSGIX
(m¨kî,Ñ™ge);
	}
}

2521 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsAsyncM¨kîSGIX
(
GLuöt
 
m¨kî
Ë{i‡(
	`GLìInô
()Ë 
	`glIsAsyncM¨kîSGIX
(m¨kî);  (
GLboﬁón
)0;
	}
}

2522 
PFNGLASYNCMARKERSGIXPROC
 
	gpglAsyncM¨kîSGIX
=
_Lazy_glAsyncM¨kîSGIX
;

2523 
PFNGLFINISHASYNCSGIXPROC
 
	gpglFöishAsyncSGIX
=
_Lazy_glFöishAsyncSGIX
;

2524 
PFNGLPOLLASYNCSGIXPROC
 
	gpglPﬁlAsyncSGIX
=
_Lazy_glPﬁlAsyncSGIX
;

2525 
PFNGLGENASYNCMARKERSSGIXPROC
 
	gpglGíAsyncM¨kîsSGIX
=
_Lazy_glGíAsyncM¨kîsSGIX
;

2526 
PFNGLDELETEASYNCMARKERSSGIXPROC
 
	gpglDñëeAsyncM¨kîsSGIX
=
_Lazy_glDñëeAsyncM¨kîsSGIX
;

2527 
PFNGLISASYNCMARKERSGIXPROC
 
	gpglIsAsyncM¨kîSGIX
=
_Lazy_glIsAsyncM¨kîSGIX
;

2532 #ifde‡
__GLEE_GL_SGIX_async_pixñ


2537 #ifde‡
__GLEE_GL_SGIX_async_hi°ogøm


2542 #ifde‡
__GLEE_GL_INTEL_ãxtuª_sciss‹


2547 #ifde‡
__GLEE_GL_INTEL_∑øŒñ_¨øys


2548 
__°dˇŒ
 
	$_Lazy_glVîãxPoöãrvINTEL
(
GLöt
 
size
, 
GLíum
 
ty≥
, c⁄° 
GLvoid
* * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxPoöãrvINTEL
(size,Åy≥,Öoöãr);
	}
}

2549 
__°dˇŒ
 
	$_Lazy_glN‹mÆPoöãrvINTEL
(
GLíum
 
ty≥
, c⁄° 
GLvoid
* * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆPoöãrvINTEL
—y≥,Öoöãr);
	}
}

2550 
__°dˇŒ
 
	$_Lazy_glCﬁ‹PoöãrvINTEL
(
GLöt
 
size
, 
GLíum
 
ty≥
, c⁄° 
GLvoid
* * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹PoöãrvINTEL
(size,Åy≥,Öoöãr);
	}
}

2551 
__°dˇŒ
 
	$_Lazy_glTexCo‹dPoöãrvINTEL
(
GLöt
 
size
, 
GLíum
 
ty≥
, c⁄° 
GLvoid
* * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹dPoöãrvINTEL
(size,Åy≥,Öoöãr);
	}
}

2552 
PFNGLVERTEXPOINTERVINTELPROC
 
	gpglVîãxPoöãrvINTEL
=
_Lazy_glVîãxPoöãrvINTEL
;

2553 
PFNGLNORMALPOINTERVINTELPROC
 
	gpglN‹mÆPoöãrvINTEL
=
_Lazy_glN‹mÆPoöãrvINTEL
;

2554 
PFNGLCOLORPOINTERVINTELPROC
 
	gpglCﬁ‹PoöãrvINTEL
=
_Lazy_glCﬁ‹PoöãrvINTEL
;

2555 
PFNGLTEXCOORDPOINTERVINTELPROC
 
	gpglTexCo‹dPoöãrvINTEL
=
_Lazy_glTexCo‹dPoöãrvINTEL
;

2560 #ifde‡
__GLEE_GL_HP_oc˛usi⁄_ã°


2565 #ifde‡
__GLEE_GL_EXT_pixñ_å™sf‹m


2566 
__°dˇŒ
 
	$_Lazy_glPixñTønsf‹mP¨amëîiEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glPixñTønsf‹mP¨amëîiEXT
—¨gë,Ö«me,Ö¨am);
	}
}

2567 
__°dˇŒ
 
	$_Lazy_glPixñTønsf‹mP¨amëîfEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glPixñTønsf‹mP¨amëîfEXT
—¨gë,Ö«me,Ö¨am);
	}
}

2568 
__°dˇŒ
 
	$_Lazy_glPixñTønsf‹mP¨amëîivEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glPixñTønsf‹mP¨amëîivEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

2569 
__°dˇŒ
 
	$_Lazy_glPixñTønsf‹mP¨amëîfvEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glPixñTønsf‹mP¨amëîfvEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

2570 
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC
 
	gpglPixñTønsf‹mP¨amëîiEXT
=
_Lazy_glPixñTønsf‹mP¨amëîiEXT
;

2571 
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC
 
	gpglPixñTønsf‹mP¨amëîfEXT
=
_Lazy_glPixñTønsf‹mP¨amëîfEXT
;

2572 
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC
 
	gpglPixñTønsf‹mP¨amëîivEXT
=
_Lazy_glPixñTønsf‹mP¨amëîivEXT
;

2573 
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC
 
	gpglPixñTønsf‹mP¨amëîfvEXT
=
_Lazy_glPixñTønsf‹mP¨amëîfvEXT
;

2578 #ifde‡
__GLEE_GL_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ


2583 #ifde‡
__GLEE_GL_EXT_sh¨ed_ãxtuª_∑Àâe


2588 #ifde‡
__GLEE_GL_EXT_£∑øã_•ecuœr_cﬁ‹


2593 #ifde‡
__GLEE_GL_EXT_£c⁄d¨y_cﬁ‹


2594 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3bEXT
(
GLbyã
 
ªd
, GLbyã 
gªí
, GLbyã 
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3bEXT
‘ed, gªí, blue);
	}
}

2595 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3bvEXT
(c⁄° 
GLbyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3bvEXT
(v);
	}
}

2596 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3dEXT
(
GLdoubÀ
 
ªd
, GLdoubÀ 
gªí
, GLdoubÀ 
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3dEXT
‘ed, gªí, blue);
	}
}

2597 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3dvEXT
(c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3dvEXT
(v);
	}
}

2598 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3fEXT
(
GLÊﬂt
 
ªd
, GLÊﬂà
gªí
, GLÊﬂà
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3fEXT
‘ed, gªí, blue);
	}
}

2599 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3fvEXT
(c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3fvEXT
(v);
	}
}

2600 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3iEXT
(
GLöt
 
ªd
, GLöà
gªí
, GLöà
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3iEXT
‘ed, gªí, blue);
	}
}

2601 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3ivEXT
(c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3ivEXT
(v);
	}
}

2602 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3sEXT
(
GLsh‹t
 
ªd
, GLsh‹à
gªí
, GLsh‹à
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3sEXT
‘ed, gªí, blue);
	}
}

2603 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3svEXT
(c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3svEXT
(v);
	}
}

2604 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3ubEXT
(
GLubyã
 
ªd
, GLubyã 
gªí
, GLubyã 
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3ubEXT
‘ed, gªí, blue);
	}
}

2605 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3ubvEXT
(c⁄° 
GLubyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3ubvEXT
(v);
	}
}

2606 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3uiEXT
(
GLuöt
 
ªd
, GLuöà
gªí
, GLuöà
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3uiEXT
‘ed, gªí, blue);
	}
}

2607 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3uivEXT
(c⁄° 
GLuöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3uivEXT
(v);
	}
}

2608 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3usEXT
(
GLush‹t
 
ªd
, GLush‹à
gªí
, GLush‹à
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3usEXT
‘ed, gªí, blue);
	}
}

2609 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3usvEXT
(c⁄° 
GLush‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3usvEXT
(v);
	}
}

2610 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹PoöãrEXT
(
GLöt
 
size
, 
GLíum
 
ty≥
, 
GLsizei
 
°ride
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹PoöãrEXT
(size,Åy≥, såide,Öoöãr);
	}
}

2611 
PFNGLSECONDARYCOLOR3BEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3bEXT
=
_Lazy_glSec⁄d¨yCﬁ‹3bEXT
;

2612 
PFNGLSECONDARYCOLOR3BVEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3bvEXT
=
_Lazy_glSec⁄d¨yCﬁ‹3bvEXT
;

2613 
PFNGLSECONDARYCOLOR3DEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3dEXT
=
_Lazy_glSec⁄d¨yCﬁ‹3dEXT
;

2614 
PFNGLSECONDARYCOLOR3DVEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3dvEXT
=
_Lazy_glSec⁄d¨yCﬁ‹3dvEXT
;

2615 
PFNGLSECONDARYCOLOR3FEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3fEXT
=
_Lazy_glSec⁄d¨yCﬁ‹3fEXT
;

2616 
PFNGLSECONDARYCOLOR3FVEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3fvEXT
=
_Lazy_glSec⁄d¨yCﬁ‹3fvEXT
;

2617 
PFNGLSECONDARYCOLOR3IEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3iEXT
=
_Lazy_glSec⁄d¨yCﬁ‹3iEXT
;

2618 
PFNGLSECONDARYCOLOR3IVEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3ivEXT
=
_Lazy_glSec⁄d¨yCﬁ‹3ivEXT
;

2619 
PFNGLSECONDARYCOLOR3SEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3sEXT
=
_Lazy_glSec⁄d¨yCﬁ‹3sEXT
;

2620 
PFNGLSECONDARYCOLOR3SVEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3svEXT
=
_Lazy_glSec⁄d¨yCﬁ‹3svEXT
;

2621 
PFNGLSECONDARYCOLOR3UBEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3ubEXT
=
_Lazy_glSec⁄d¨yCﬁ‹3ubEXT
;

2622 
PFNGLSECONDARYCOLOR3UBVEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3ubvEXT
=
_Lazy_glSec⁄d¨yCﬁ‹3ubvEXT
;

2623 
PFNGLSECONDARYCOLOR3UIEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3uiEXT
=
_Lazy_glSec⁄d¨yCﬁ‹3uiEXT
;

2624 
PFNGLSECONDARYCOLOR3UIVEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3uivEXT
=
_Lazy_glSec⁄d¨yCﬁ‹3uivEXT
;

2625 
PFNGLSECONDARYCOLOR3USEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3usEXT
=
_Lazy_glSec⁄d¨yCﬁ‹3usEXT
;

2626 
PFNGLSECONDARYCOLOR3USVEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3usvEXT
=
_Lazy_glSec⁄d¨yCﬁ‹3usvEXT
;

2627 
PFNGLSECONDARYCOLORPOINTEREXTPROC
 
	gpglSec⁄d¨yCﬁ‹PoöãrEXT
=
_Lazy_glSec⁄d¨yCﬁ‹PoöãrEXT
;

2632 #ifde‡
__GLEE_GL_EXT_ãxtuª_≥πurb_n‹mÆ


2633 
__°dˇŒ
 
	$_Lazy_glTextuªN‹mÆEXT
(
GLíum
 
mode
Ë{i‡(
	`GLìInô
()Ë
	`glTextuªN‹mÆEXT
(mode);
	}
}

2634 
PFNGLTEXTURENORMALEXTPROC
 
	gpglTextuªN‹mÆEXT
=
_Lazy_glTextuªN‹mÆEXT
;

2639 #ifde‡
__GLEE_GL_EXT_mu…i_døw_¨øys


2640 
__°dˇŒ
 
	$_Lazy_glMu…iDøwAºaysEXT
(
GLíum
 
mode
, 
GLöt
 * 
fú°
, 
GLsizei
 * 
cou¡
, GLsizeò
¥imcou¡
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iDøwAºaysEXT
(mode, fú°, cou¡,Örimcou¡);
	}
}

2641 
__°dˇŒ
 
	$_Lazy_glMu…iDøwEÀmítsEXT
(
GLíum
 
mode
, c⁄° 
GLsizei
 * 
cou¡
, GLíum 
ty≥
, c⁄° 
GLvoid
* * 
ödi˚s
, GLsizeò
¥imcou¡
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iDøwEÀmítsEXT
(mode, cou¡,Åy≥, indi˚s,Örimcou¡);
	}
}

2642 
PFNGLMULTIDRAWARRAYSEXTPROC
 
	gpglMu…iDøwAºaysEXT
=
_Lazy_glMu…iDøwAºaysEXT
;

2643 
PFNGLMULTIDRAWELEMENTSEXTPROC
 
	gpglMu…iDøwEÀmítsEXT
=
_Lazy_glMu…iDøwEÀmítsEXT
;

2648 #ifde‡
__GLEE_GL_EXT_fog_co‹d


2649 
__°dˇŒ
 
	$_Lazy_glFogCo‹dfEXT
(
GLÊﬂt
 
co‹d
Ë{i‡(
	`GLìInô
()Ë
	`glFogCo‹dfEXT
(co‹d);
	}
}

2650 
__°dˇŒ
 
	$_Lazy_glFogCo‹dfvEXT
(c⁄° 
GLÊﬂt
 * 
co‹d
Ë{i‡(
	`GLìInô
()Ë
	`glFogCo‹dfvEXT
(co‹d);
	}
}

2651 
__°dˇŒ
 
	$_Lazy_glFogCo‹ddEXT
(
GLdoubÀ
 
co‹d
Ë{i‡(
	`GLìInô
()Ë
	`glFogCo‹ddEXT
(co‹d);
	}
}

2652 
__°dˇŒ
 
	$_Lazy_glFogCo‹ddvEXT
(c⁄° 
GLdoubÀ
 * 
co‹d
Ë{i‡(
	`GLìInô
()Ë
	`glFogCo‹ddvEXT
(co‹d);
	}
}

2653 
__°dˇŒ
 
	$_Lazy_glFogCo‹dPoöãrEXT
(
GLíum
 
ty≥
, 
GLsizei
 
°ride
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glFogCo‹dPoöãrEXT
—y≥, såide,Öoöãr);
	}
}

2654 
PFNGLFOGCOORDFEXTPROC
 
	gpglFogCo‹dfEXT
=
_Lazy_glFogCo‹dfEXT
;

2655 
PFNGLFOGCOORDFVEXTPROC
 
	gpglFogCo‹dfvEXT
=
_Lazy_glFogCo‹dfvEXT
;

2656 
PFNGLFOGCOORDDEXTPROC
 
	gpglFogCo‹ddEXT
=
_Lazy_glFogCo‹ddEXT
;

2657 
PFNGLFOGCOORDDVEXTPROC
 
	gpglFogCo‹ddvEXT
=
_Lazy_glFogCo‹ddvEXT
;

2658 
PFNGLFOGCOORDPOINTEREXTPROC
 
	gpglFogCo‹dPoöãrEXT
=
_Lazy_glFogCo‹dPoöãrEXT
;

2663 #ifde‡
__GLEE_GL_REND_s¸ìn_co‹dö©es


2668 #ifde‡
__GLEE_GL_EXT_co‹dö©e_‰ame


2669 
__°dˇŒ
 
	$_Lazy_glT™gít3bEXT
(
GLbyã
 
tx
, GLbyã 
ty
, GLbyã 
tz
Ë{i‡(
	`GLìInô
()Ë
	`glT™gít3bEXT
—x,Åy,Åz);
	}
}

2670 
__°dˇŒ
 
	$_Lazy_glT™gít3bvEXT
(c⁄° 
GLbyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glT™gít3bvEXT
(v);
	}
}

2671 
__°dˇŒ
 
	$_Lazy_glT™gít3dEXT
(
GLdoubÀ
 
tx
, GLdoubÀ 
ty
, GLdoubÀ 
tz
Ë{i‡(
	`GLìInô
()Ë
	`glT™gít3dEXT
—x,Åy,Åz);
	}
}

2672 
__°dˇŒ
 
	$_Lazy_glT™gít3dvEXT
(c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glT™gít3dvEXT
(v);
	}
}

2673 
__°dˇŒ
 
	$_Lazy_glT™gít3fEXT
(
GLÊﬂt
 
tx
, GLÊﬂà
ty
, GLÊﬂà
tz
Ë{i‡(
	`GLìInô
()Ë
	`glT™gít3fEXT
—x,Åy,Åz);
	}
}

2674 
__°dˇŒ
 
	$_Lazy_glT™gít3fvEXT
(c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glT™gít3fvEXT
(v);
	}
}

2675 
__°dˇŒ
 
	$_Lazy_glT™gít3iEXT
(
GLöt
 
tx
, GLöà
ty
, GLöà
tz
Ë{i‡(
	`GLìInô
()Ë
	`glT™gít3iEXT
—x,Åy,Åz);
	}
}

2676 
__°dˇŒ
 
	$_Lazy_glT™gít3ivEXT
(c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glT™gít3ivEXT
(v);
	}
}

2677 
__°dˇŒ
 
	$_Lazy_glT™gít3sEXT
(
GLsh‹t
 
tx
, GLsh‹à
ty
, GLsh‹à
tz
Ë{i‡(
	`GLìInô
()Ë
	`glT™gít3sEXT
—x,Åy,Åz);
	}
}

2678 
__°dˇŒ
 
	$_Lazy_glT™gít3svEXT
(c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glT™gít3svEXT
(v);
	}
}

2679 
__°dˇŒ
 
	$_Lazy_glBö‹mÆ3bEXT
(
GLbyã
 
bx
, GLbyã 
by
, GLbyã 
bz
Ë{i‡(
	`GLìInô
()Ë
	`glBö‹mÆ3bEXT
(bx, by, bz);
	}
}

2680 
__°dˇŒ
 
	$_Lazy_glBö‹mÆ3bvEXT
(c⁄° 
GLbyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glBö‹mÆ3bvEXT
(v);
	}
}

2681 
__°dˇŒ
 
	$_Lazy_glBö‹mÆ3dEXT
(
GLdoubÀ
 
bx
, GLdoubÀ 
by
, GLdoubÀ 
bz
Ë{i‡(
	`GLìInô
()Ë
	`glBö‹mÆ3dEXT
(bx, by, bz);
	}
}

2682 
__°dˇŒ
 
	$_Lazy_glBö‹mÆ3dvEXT
(c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glBö‹mÆ3dvEXT
(v);
	}
}

2683 
__°dˇŒ
 
	$_Lazy_glBö‹mÆ3fEXT
(
GLÊﬂt
 
bx
, GLÊﬂà
by
, GLÊﬂà
bz
Ë{i‡(
	`GLìInô
()Ë
	`glBö‹mÆ3fEXT
(bx, by, bz);
	}
}

2684 
__°dˇŒ
 
	$_Lazy_glBö‹mÆ3fvEXT
(c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glBö‹mÆ3fvEXT
(v);
	}
}

2685 
__°dˇŒ
 
	$_Lazy_glBö‹mÆ3iEXT
(
GLöt
 
bx
, GLöà
by
, GLöà
bz
Ë{i‡(
	`GLìInô
()Ë
	`glBö‹mÆ3iEXT
(bx, by, bz);
	}
}

2686 
__°dˇŒ
 
	$_Lazy_glBö‹mÆ3ivEXT
(c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glBö‹mÆ3ivEXT
(v);
	}
}

2687 
__°dˇŒ
 
	$_Lazy_glBö‹mÆ3sEXT
(
GLsh‹t
 
bx
, GLsh‹à
by
, GLsh‹à
bz
Ë{i‡(
	`GLìInô
()Ë
	`glBö‹mÆ3sEXT
(bx, by, bz);
	}
}

2688 
__°dˇŒ
 
	$_Lazy_glBö‹mÆ3svEXT
(c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glBö‹mÆ3svEXT
(v);
	}
}

2689 
__°dˇŒ
 
	$_Lazy_glT™gítPoöãrEXT
(
GLíum
 
ty≥
, 
GLsizei
 
°ride
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glT™gítPoöãrEXT
—y≥, såide,Öoöãr);
	}
}

2690 
__°dˇŒ
 
	$_Lazy_glBö‹mÆPoöãrEXT
(
GLíum
 
ty≥
, 
GLsizei
 
°ride
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glBö‹mÆPoöãrEXT
—y≥, såide,Öoöãr);
	}
}

2691 
PFNGLTANGENT3BEXTPROC
 
	gpglT™gít3bEXT
=
_Lazy_glT™gít3bEXT
;

2692 
PFNGLTANGENT3BVEXTPROC
 
	gpglT™gít3bvEXT
=
_Lazy_glT™gít3bvEXT
;

2693 
PFNGLTANGENT3DEXTPROC
 
	gpglT™gít3dEXT
=
_Lazy_glT™gít3dEXT
;

2694 
PFNGLTANGENT3DVEXTPROC
 
	gpglT™gít3dvEXT
=
_Lazy_glT™gít3dvEXT
;

2695 
PFNGLTANGENT3FEXTPROC
 
	gpglT™gít3fEXT
=
_Lazy_glT™gít3fEXT
;

2696 
PFNGLTANGENT3FVEXTPROC
 
	gpglT™gít3fvEXT
=
_Lazy_glT™gít3fvEXT
;

2697 
PFNGLTANGENT3IEXTPROC
 
	gpglT™gít3iEXT
=
_Lazy_glT™gít3iEXT
;

2698 
PFNGLTANGENT3IVEXTPROC
 
	gpglT™gít3ivEXT
=
_Lazy_glT™gít3ivEXT
;

2699 
PFNGLTANGENT3SEXTPROC
 
	gpglT™gít3sEXT
=
_Lazy_glT™gít3sEXT
;

2700 
PFNGLTANGENT3SVEXTPROC
 
	gpglT™gít3svEXT
=
_Lazy_glT™gít3svEXT
;

2701 
PFNGLBINORMAL3BEXTPROC
 
	gpglBö‹mÆ3bEXT
=
_Lazy_glBö‹mÆ3bEXT
;

2702 
PFNGLBINORMAL3BVEXTPROC
 
	gpglBö‹mÆ3bvEXT
=
_Lazy_glBö‹mÆ3bvEXT
;

2703 
PFNGLBINORMAL3DEXTPROC
 
	gpglBö‹mÆ3dEXT
=
_Lazy_glBö‹mÆ3dEXT
;

2704 
PFNGLBINORMAL3DVEXTPROC
 
	gpglBö‹mÆ3dvEXT
=
_Lazy_glBö‹mÆ3dvEXT
;

2705 
PFNGLBINORMAL3FEXTPROC
 
	gpglBö‹mÆ3fEXT
=
_Lazy_glBö‹mÆ3fEXT
;

2706 
PFNGLBINORMAL3FVEXTPROC
 
	gpglBö‹mÆ3fvEXT
=
_Lazy_glBö‹mÆ3fvEXT
;

2707 
PFNGLBINORMAL3IEXTPROC
 
	gpglBö‹mÆ3iEXT
=
_Lazy_glBö‹mÆ3iEXT
;

2708 
PFNGLBINORMAL3IVEXTPROC
 
	gpglBö‹mÆ3ivEXT
=
_Lazy_glBö‹mÆ3ivEXT
;

2709 
PFNGLBINORMAL3SEXTPROC
 
	gpglBö‹mÆ3sEXT
=
_Lazy_glBö‹mÆ3sEXT
;

2710 
PFNGLBINORMAL3SVEXTPROC
 
	gpglBö‹mÆ3svEXT
=
_Lazy_glBö‹mÆ3svEXT
;

2711 
PFNGLTANGENTPOINTEREXTPROC
 
	gpglT™gítPoöãrEXT
=
_Lazy_glT™gítPoöãrEXT
;

2712 
PFNGLBINORMALPOINTEREXTPROC
 
	gpglBö‹mÆPoöãrEXT
=
_Lazy_glBö‹mÆPoöãrEXT
;

2717 #ifde‡
__GLEE_GL_EXT_ãxtuª_ív_comböe


2722 #ifde‡
__GLEE_GL_APPLE_•ecuœr_ve˘‹


2727 #ifde‡
__GLEE_GL_APPLE_å™sf‹m_höt


2732 #ifde‡
__GLEE_GL_SGIX_fog_sˇÀ


2737 #ifde‡
__GLEE_GL_SUNX_c⁄°™t_d©a


2738 
__°dˇŒ
 
	$_Lazy_glFöishTextuªSUNX
(Ë{i‡(
	`GLìInô
()Ë
	`glFöishTextuªSUNX
();
	}
}

2739 
PFNGLFINISHTEXTURESUNXPROC
 
	gpglFöishTextuªSUNX
=
_Lazy_glFöishTextuªSUNX
;

2744 #ifde‡
__GLEE_GL_SUN_globÆ_Æpha


2745 
__°dˇŒ
 
	$_Lazy_glGlobÆAÕhaFa˘‹bSUN
(
GLbyã
 
Á˘‹
Ë{i‡(
	`GLìInô
()Ë
	`glGlobÆAÕhaFa˘‹bSUN
(Á˘‹);
	}
}

2746 
__°dˇŒ
 
	$_Lazy_glGlobÆAÕhaFa˘‹sSUN
(
GLsh‹t
 
Á˘‹
Ë{i‡(
	`GLìInô
()Ë
	`glGlobÆAÕhaFa˘‹sSUN
(Á˘‹);
	}
}

2747 
__°dˇŒ
 
	$_Lazy_glGlobÆAÕhaFa˘‹iSUN
(
GLöt
 
Á˘‹
Ë{i‡(
	`GLìInô
()Ë
	`glGlobÆAÕhaFa˘‹iSUN
(Á˘‹);
	}
}

2748 
__°dˇŒ
 
	$_Lazy_glGlobÆAÕhaFa˘‹fSUN
(
GLÊﬂt
 
Á˘‹
Ë{i‡(
	`GLìInô
()Ë
	`glGlobÆAÕhaFa˘‹fSUN
(Á˘‹);
	}
}

2749 
__°dˇŒ
 
	$_Lazy_glGlobÆAÕhaFa˘‹dSUN
(
GLdoubÀ
 
Á˘‹
Ë{i‡(
	`GLìInô
()Ë
	`glGlobÆAÕhaFa˘‹dSUN
(Á˘‹);
	}
}

2750 
__°dˇŒ
 
	$_Lazy_glGlobÆAÕhaFa˘‹ubSUN
(
GLubyã
 
Á˘‹
Ë{i‡(
	`GLìInô
()Ë
	`glGlobÆAÕhaFa˘‹ubSUN
(Á˘‹);
	}
}

2751 
__°dˇŒ
 
	$_Lazy_glGlobÆAÕhaFa˘‹usSUN
(
GLush‹t
 
Á˘‹
Ë{i‡(
	`GLìInô
()Ë
	`glGlobÆAÕhaFa˘‹usSUN
(Á˘‹);
	}
}

2752 
__°dˇŒ
 
	$_Lazy_glGlobÆAÕhaFa˘‹uiSUN
(
GLuöt
 
Á˘‹
Ë{i‡(
	`GLìInô
()Ë
	`glGlobÆAÕhaFa˘‹uiSUN
(Á˘‹);
	}
}

2753 
PFNGLGLOBALALPHAFACTORBSUNPROC
 
	gpglGlobÆAÕhaFa˘‹bSUN
=
_Lazy_glGlobÆAÕhaFa˘‹bSUN
;

2754 
PFNGLGLOBALALPHAFACTORSSUNPROC
 
	gpglGlobÆAÕhaFa˘‹sSUN
=
_Lazy_glGlobÆAÕhaFa˘‹sSUN
;

2755 
PFNGLGLOBALALPHAFACTORISUNPROC
 
	gpglGlobÆAÕhaFa˘‹iSUN
=
_Lazy_glGlobÆAÕhaFa˘‹iSUN
;

2756 
PFNGLGLOBALALPHAFACTORFSUNPROC
 
	gpglGlobÆAÕhaFa˘‹fSUN
=
_Lazy_glGlobÆAÕhaFa˘‹fSUN
;

2757 
PFNGLGLOBALALPHAFACTORDSUNPROC
 
	gpglGlobÆAÕhaFa˘‹dSUN
=
_Lazy_glGlobÆAÕhaFa˘‹dSUN
;

2758 
PFNGLGLOBALALPHAFACTORUBSUNPROC
 
	gpglGlobÆAÕhaFa˘‹ubSUN
=
_Lazy_glGlobÆAÕhaFa˘‹ubSUN
;

2759 
PFNGLGLOBALALPHAFACTORUSSUNPROC
 
	gpglGlobÆAÕhaFa˘‹usSUN
=
_Lazy_glGlobÆAÕhaFa˘‹usSUN
;

2760 
PFNGLGLOBALALPHAFACTORUISUNPROC
 
	gpglGlobÆAÕhaFa˘‹uiSUN
=
_Lazy_glGlobÆAÕhaFa˘‹uiSUN
;

2765 #ifde‡
__GLEE_GL_SUN_åüngÀ_li°


2766 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiSUN
(
GLuöt
 
code
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiSUN
(code);
	}
}

2767 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeusSUN
(
GLush‹t
 
code
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeusSUN
(code);
	}
}

2768 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeubSUN
(
GLubyã
 
code
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeubSUN
(code);
	}
}

2769 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuivSUN
(c⁄° 
GLuöt
 * 
code
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuivSUN
(code);
	}
}

2770 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeusvSUN
(c⁄° 
GLush‹t
 * 
code
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeusvSUN
(code);
	}
}

2771 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeubvSUN
(c⁄° 
GLubyã
 * 
code
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeubvSUN
(code);
	}
}

2772 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodePoöãrSUN
(
GLíum
 
ty≥
, 
GLsizei
 
°ride
, c⁄° 
GLvoid
* * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodePoöãrSUN
—y≥, såide,Öoöãr);
	}
}

2773 
PFNGLREPLACEMENTCODEUISUNPROC
 
	gpglRïœ˚mítCodeuiSUN
=
_Lazy_glRïœ˚mítCodeuiSUN
;

2774 
PFNGLREPLACEMENTCODEUSSUNPROC
 
	gpglRïœ˚mítCodeusSUN
=
_Lazy_glRïœ˚mítCodeusSUN
;

2775 
PFNGLREPLACEMENTCODEUBSUNPROC
 
	gpglRïœ˚mítCodeubSUN
=
_Lazy_glRïœ˚mítCodeubSUN
;

2776 
PFNGLREPLACEMENTCODEUIVSUNPROC
 
	gpglRïœ˚mítCodeuivSUN
=
_Lazy_glRïœ˚mítCodeuivSUN
;

2777 
PFNGLREPLACEMENTCODEUSVSUNPROC
 
	gpglRïœ˚mítCodeusvSUN
=
_Lazy_glRïœ˚mítCodeusvSUN
;

2778 
PFNGLREPLACEMENTCODEUBVSUNPROC
 
	gpglRïœ˚mítCodeubvSUN
=
_Lazy_glRïœ˚mítCodeubvSUN
;

2779 
PFNGLREPLACEMENTCODEPOINTERSUNPROC
 
	gpglRïœ˚mítCodePoöãrSUN
=
_Lazy_glRïœ˚mítCodePoöãrSUN
;

2784 #ifde‡
__GLEE_GL_SUN_vîãx


2785 
__°dˇŒ
 
	$_Lazy_glCﬁ‹4ubVîãx2fSUN
(
GLubyã
 
r
, GLubyã 
g
, GLubyã 
b
, GLubyã 
a
, 
GLÊﬂt
 
x
, GLÊﬂà
y
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹4ubVîãx2fSUN
‘, g, b,á, x, y);
	}
}

2786 
__°dˇŒ
 
	$_Lazy_glCﬁ‹4ubVîãx2fvSUN
(c⁄° 
GLubyã
 * 
c
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹4ubVîãx2fvSUN
(c, v);
	}
}

2787 
__°dˇŒ
 
	$_Lazy_glCﬁ‹4ubVîãx3fSUN
(
GLubyã
 
r
, GLubyã 
g
, GLubyã 
b
, GLubyã 
a
, 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹4ubVîãx3fSUN
‘, g, b,á, x, y, z);
	}
}

2788 
__°dˇŒ
 
	$_Lazy_glCﬁ‹4ubVîãx3fvSUN
(c⁄° 
GLubyã
 * 
c
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹4ubVîãx3fvSUN
(c, v);
	}
}

2789 
__°dˇŒ
 
	$_Lazy_glCﬁ‹3fVîãx3fSUN
(
GLÊﬂt
 
r
, GLÊﬂà
g
, GLÊﬂà
b
, GLÊﬂà
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹3fVîãx3fSUN
‘, g, b, x, y, z);
	}
}

2790 
__°dˇŒ
 
	$_Lazy_glCﬁ‹3fVîãx3fvSUN
(c⁄° 
GLÊﬂt
 * 
c
, c⁄° GLÊﬂà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹3fVîãx3fvSUN
(c, v);
	}
}

2791 
__°dˇŒ
 
	$_Lazy_glN‹mÆ3fVîãx3fSUN
(
GLÊﬂt
 
nx
, GLÊﬂà
ny
, GLÊﬂà
nz
, GLÊﬂà
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆ3fVîãx3fSUN
“x,Çy,Çz, x, y, z);
	}
}

2792 
__°dˇŒ
 
	$_Lazy_glN‹mÆ3fVîãx3fvSUN
(c⁄° 
GLÊﬂt
 * 
n
, c⁄° GLÊﬂà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆ3fVîãx3fvSUN
“, v);
	}
}

2793 
__°dˇŒ
 
	$_Lazy_glCﬁ‹4fN‹mÆ3fVîãx3fSUN
(
GLÊﬂt
 
r
, GLÊﬂà
g
, GLÊﬂà
b
, GLÊﬂà
a
, GLÊﬂà
nx
, GLÊﬂà
ny
, GLÊﬂà
nz
, GLÊﬂà
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹4fN‹mÆ3fVîãx3fSUN
‘, g, b,á,Çx,Çy,Çz, x, y, z);
	}
}

2794 
__°dˇŒ
 
	$_Lazy_glCﬁ‹4fN‹mÆ3fVîãx3fvSUN
(c⁄° 
GLÊﬂt
 * 
c
, c⁄° GLÊﬂà* 
n
, c⁄° GLÊﬂà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹4fN‹mÆ3fVîãx3fvSUN
(c,Ç, v);
	}
}

2795 
__°dˇŒ
 
	$_Lazy_glTexCo‹d2fVîãx3fSUN
(
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d2fVîãx3fSUN
(s,Å, x, y, z);
	}
}

2796 
__°dˇŒ
 
	$_Lazy_glTexCo‹d2fVîãx3fvSUN
(c⁄° 
GLÊﬂt
 * 
tc
, c⁄° GLÊﬂà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d2fVîãx3fvSUN
—c, v);
	}
}

2797 
__°dˇŒ
 
	$_Lazy_glTexCo‹d4fVîãx4fSUN
(
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
p
, GLÊﬂà
q
, GLÊﬂà
x
, GLÊﬂà
y
, GLÊﬂà
z
, GLÊﬂà
w
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d4fVîãx4fSUN
(s,Å,Ö, q, x, y, z, w);
	}
}

2798 
__°dˇŒ
 
	$_Lazy_glTexCo‹d4fVîãx4fvSUN
(c⁄° 
GLÊﬂt
 * 
tc
, c⁄° GLÊﬂà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d4fVîãx4fvSUN
—c, v);
	}
}

2799 
__°dˇŒ
 
	$_Lazy_glTexCo‹d2fCﬁ‹4ubVîãx3fSUN
(
GLÊﬂt
 
s
, GLÊﬂà
t
, 
GLubyã
 
r
, GLubyã 
g
, GLubyã 
b
, GLubyã 
a
, GLÊﬂà
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d2fCﬁ‹4ubVîãx3fSUN
(s,Å,Ñ, g, b,á, x, y, z);
	}
}

2800 
__°dˇŒ
 
	$_Lazy_glTexCo‹d2fCﬁ‹4ubVîãx3fvSUN
(c⁄° 
GLÊﬂt
 * 
tc
, c⁄° 
GLubyã
 * 
c
, c⁄° GLÊﬂà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d2fCﬁ‹4ubVîãx3fvSUN
—c, c, v);
	}
}

2801 
__°dˇŒ
 
	$_Lazy_glTexCo‹d2fCﬁ‹3fVîãx3fSUN
(
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
, GLÊﬂà
g
, GLÊﬂà
b
, GLÊﬂà
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d2fCﬁ‹3fVîãx3fSUN
(s,Å,Ñ, g, b, x, y, z);
	}
}

2802 
__°dˇŒ
 
	$_Lazy_glTexCo‹d2fCﬁ‹3fVîãx3fvSUN
(c⁄° 
GLÊﬂt
 * 
tc
, c⁄° GLÊﬂà* 
c
, c⁄° GLÊﬂà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d2fCﬁ‹3fVîãx3fvSUN
—c, c, v);
	}
}

2803 
__°dˇŒ
 
	$_Lazy_glTexCo‹d2fN‹mÆ3fVîãx3fSUN
(
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
nx
, GLÊﬂà
ny
, GLÊﬂà
nz
, GLÊﬂà
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d2fN‹mÆ3fVîãx3fSUN
(s,Å,Çx,Çy,Çz, x, y, z);
	}
}

2804 
__°dˇŒ
 
	$_Lazy_glTexCo‹d2fN‹mÆ3fVîãx3fvSUN
(c⁄° 
GLÊﬂt
 * 
tc
, c⁄° GLÊﬂà* 
n
, c⁄° GLÊﬂà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d2fN‹mÆ3fVîãx3fvSUN
—c,Ç, v);
	}
}

2805 
__°dˇŒ
 
	$_Lazy_glTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
(
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
, GLÊﬂà
g
, GLÊﬂà
b
, GLÊﬂà
a
, GLÊﬂà
nx
, GLÊﬂà
ny
, GLÊﬂà
nz
, GLÊﬂà
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
(s,Å,Ñ, g, b,á,Çx,Çy,Çz, x, y, z);
	}
}

2806 
__°dˇŒ
 
	$_Lazy_glTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
(c⁄° 
GLÊﬂt
 * 
tc
, c⁄° GLÊﬂà* 
c
, c⁄° GLÊﬂà* 
n
, c⁄° GLÊﬂà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
—c, c,Ç, v);
	}
}

2807 
__°dˇŒ
 
	$_Lazy_glTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fSUN
(
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
p
, GLÊﬂà
q
, GLÊﬂà
r
, GLÊﬂà
g
, GLÊﬂà
b
, GLÊﬂà
a
, GLÊﬂà
nx
, GLÊﬂà
ny
, GLÊﬂà
nz
, GLÊﬂà
x
, GLÊﬂà
y
, GLÊﬂà
z
, GLÊﬂà
w
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fSUN
(s,Å,Ö, q,Ñ, g, b,á,Çx,Çy,Çz, x, y, z, w);
	}
}

2808 
__°dˇŒ
 
	$_Lazy_glTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fvSUN
(c⁄° 
GLÊﬂt
 * 
tc
, c⁄° GLÊﬂà* 
c
, c⁄° GLÊﬂà* 
n
, c⁄° GLÊﬂà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fvSUN
—c, c,Ç, v);
	}
}

2809 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiVîãx3fSUN
(
GLuöt
 
rc
, 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiVîãx3fSUN
‘c, x, y, z);
	}
}

2810 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiVîãx3fvSUN
(c⁄° 
GLuöt
 * 
rc
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiVîãx3fvSUN
‘c, v);
	}
}

2811 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiCﬁ‹4ubVîãx3fSUN
(
GLuöt
 
rc
, 
GLubyã
 
r
, GLubyã 
g
, GLubyã 
b
, GLubyã 
a
, 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiCﬁ‹4ubVîãx3fSUN
‘c,Ñ, g, b,á, x, y, z);
	}
}

2812 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiCﬁ‹4ubVîãx3fvSUN
(c⁄° 
GLuöt
 * 
rc
, c⁄° 
GLubyã
 * 
c
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiCﬁ‹4ubVîãx3fvSUN
‘c, c, v);
	}
}

2813 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiCﬁ‹3fVîãx3fSUN
(
GLuöt
 
rc
, 
GLÊﬂt
 
r
, GLÊﬂà
g
, GLÊﬂà
b
, GLÊﬂà
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiCﬁ‹3fVîãx3fSUN
‘c,Ñ, g, b, x, y, z);
	}
}

2814 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiCﬁ‹3fVîãx3fvSUN
(c⁄° 
GLuöt
 * 
rc
, c⁄° 
GLÊﬂt
 * 
c
, c⁄° GLÊﬂà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiCﬁ‹3fVîãx3fvSUN
‘c, c, v);
	}
}

2815 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiN‹mÆ3fVîãx3fSUN
(
GLuöt
 
rc
, 
GLÊﬂt
 
nx
, GLÊﬂà
ny
, GLÊﬂà
nz
, GLÊﬂà
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiN‹mÆ3fVîãx3fSUN
‘c,Çx,Çy,Çz, x, y, z);
	}
}

2816 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiN‹mÆ3fVîãx3fvSUN
(c⁄° 
GLuöt
 * 
rc
, c⁄° 
GLÊﬂt
 * 
n
, c⁄° GLÊﬂà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiN‹mÆ3fVîãx3fvSUN
‘c,Ç, v);
	}
}

2817 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fSUN
(
GLuöt
 
rc
, 
GLÊﬂt
 
r
, GLÊﬂà
g
, GLÊﬂà
b
, GLÊﬂà
a
, GLÊﬂà
nx
, GLÊﬂà
ny
, GLÊﬂà
nz
, GLÊﬂà
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fSUN
‘c,Ñ, g, b,á,Çx,Çy,Çz, x, y, z);
	}
}

2818 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fvSUN
(c⁄° 
GLuöt
 * 
rc
, c⁄° 
GLÊﬂt
 * 
c
, c⁄° GLÊﬂà* 
n
, c⁄° GLÊﬂà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fvSUN
‘c, c,Ç, v);
	}
}

2819 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiTexCo‹d2fVîãx3fSUN
(
GLuöt
 
rc
, 
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiTexCo‹d2fVîãx3fSUN
‘c, s,Å, x, y, z);
	}
}

2820 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiTexCo‹d2fVîãx3fvSUN
(c⁄° 
GLuöt
 * 
rc
, c⁄° 
GLÊﬂt
 * 
tc
, c⁄° GLÊﬂà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiTexCo‹d2fVîãx3fvSUN
‘c,Åc, v);
	}
}

2821 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fSUN
(
GLuöt
 
rc
, 
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
nx
, GLÊﬂà
ny
, GLÊﬂà
nz
, GLÊﬂà
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fSUN
‘c, s,Å,Çx,Çy,Çz, x, y, z);
	}
}

2822 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fvSUN
(c⁄° 
GLuöt
 * 
rc
, c⁄° 
GLÊﬂt
 * 
tc
, c⁄° GLÊﬂà* 
n
, c⁄° GLÊﬂà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fvSUN
‘c,Åc,Ç, v);
	}
}

2823 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
(
GLuöt
 
rc
, 
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
, GLÊﬂà
g
, GLÊﬂà
b
, GLÊﬂà
a
, GLÊﬂà
nx
, GLÊﬂà
ny
, GLÊﬂà
nz
, GLÊﬂà
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
‘c, s,Å,Ñ, g, b,á,Çx,Çy,Çz, x, y, z);
	}
}

2824 
__°dˇŒ
 
	$_Lazy_glRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
(c⁄° 
GLuöt
 * 
rc
, c⁄° 
GLÊﬂt
 * 
tc
, c⁄° GLÊﬂà* 
c
, c⁄° GLÊﬂà* 
n
, c⁄° GLÊﬂà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
‘c,Åc, c,Ç, v);
	}
}

2825 
PFNGLCOLOR4UBVERTEX2FSUNPROC
 
	gpglCﬁ‹4ubVîãx2fSUN
=
_Lazy_glCﬁ‹4ubVîãx2fSUN
;

2826 
PFNGLCOLOR4UBVERTEX2FVSUNPROC
 
	gpglCﬁ‹4ubVîãx2fvSUN
=
_Lazy_glCﬁ‹4ubVîãx2fvSUN
;

2827 
PFNGLCOLOR4UBVERTEX3FSUNPROC
 
	gpglCﬁ‹4ubVîãx3fSUN
=
_Lazy_glCﬁ‹4ubVîãx3fSUN
;

2828 
PFNGLCOLOR4UBVERTEX3FVSUNPROC
 
	gpglCﬁ‹4ubVîãx3fvSUN
=
_Lazy_glCﬁ‹4ubVîãx3fvSUN
;

2829 
PFNGLCOLOR3FVERTEX3FSUNPROC
 
	gpglCﬁ‹3fVîãx3fSUN
=
_Lazy_glCﬁ‹3fVîãx3fSUN
;

2830 
PFNGLCOLOR3FVERTEX3FVSUNPROC
 
	gpglCﬁ‹3fVîãx3fvSUN
=
_Lazy_glCﬁ‹3fVîãx3fvSUN
;

2831 
PFNGLNORMAL3FVERTEX3FSUNPROC
 
	gpglN‹mÆ3fVîãx3fSUN
=
_Lazy_glN‹mÆ3fVîãx3fSUN
;

2832 
PFNGLNORMAL3FVERTEX3FVSUNPROC
 
	gpglN‹mÆ3fVîãx3fvSUN
=
_Lazy_glN‹mÆ3fVîãx3fvSUN
;

2833 
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC
 
	gpglCﬁ‹4fN‹mÆ3fVîãx3fSUN
=
_Lazy_glCﬁ‹4fN‹mÆ3fVîãx3fSUN
;

2834 
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC
 
	gpglCﬁ‹4fN‹mÆ3fVîãx3fvSUN
=
_Lazy_glCﬁ‹4fN‹mÆ3fVîãx3fvSUN
;

2835 
PFNGLTEXCOORD2FVERTEX3FSUNPROC
 
	gpglTexCo‹d2fVîãx3fSUN
=
_Lazy_glTexCo‹d2fVîãx3fSUN
;

2836 
PFNGLTEXCOORD2FVERTEX3FVSUNPROC
 
	gpglTexCo‹d2fVîãx3fvSUN
=
_Lazy_glTexCo‹d2fVîãx3fvSUN
;

2837 
PFNGLTEXCOORD4FVERTEX4FSUNPROC
 
	gpglTexCo‹d4fVîãx4fSUN
=
_Lazy_glTexCo‹d4fVîãx4fSUN
;

2838 
PFNGLTEXCOORD4FVERTEX4FVSUNPROC
 
	gpglTexCo‹d4fVîãx4fvSUN
=
_Lazy_glTexCo‹d4fVîãx4fvSUN
;

2839 
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC
 
	gpglTexCo‹d2fCﬁ‹4ubVîãx3fSUN
=
_Lazy_glTexCo‹d2fCﬁ‹4ubVîãx3fSUN
;

2840 
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC
 
	gpglTexCo‹d2fCﬁ‹4ubVîãx3fvSUN
=
_Lazy_glTexCo‹d2fCﬁ‹4ubVîãx3fvSUN
;

2841 
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC
 
	gpglTexCo‹d2fCﬁ‹3fVîãx3fSUN
=
_Lazy_glTexCo‹d2fCﬁ‹3fVîãx3fSUN
;

2842 
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC
 
	gpglTexCo‹d2fCﬁ‹3fVîãx3fvSUN
=
_Lazy_glTexCo‹d2fCﬁ‹3fVîãx3fvSUN
;

2843 
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC
 
	gpglTexCo‹d2fN‹mÆ3fVîãx3fSUN
=
_Lazy_glTexCo‹d2fN‹mÆ3fVîãx3fSUN
;

2844 
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
 
	gpglTexCo‹d2fN‹mÆ3fVîãx3fvSUN
=
_Lazy_glTexCo‹d2fN‹mÆ3fVîãx3fvSUN
;

2845 
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
 
	gpglTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
=
_Lazy_glTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
;

2846 
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
 
	gpglTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
=
_Lazy_glTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
;

2847 
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC
 
	gpglTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fSUN
=
_Lazy_glTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fSUN
;

2848 
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC
 
	gpglTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fvSUN
=
_Lazy_glTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fvSUN
;

2849 
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC
 
	gpglRïœ˚mítCodeuiVîãx3fSUN
=
_Lazy_glRïœ˚mítCodeuiVîãx3fSUN
;

2850 
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC
 
	gpglRïœ˚mítCodeuiVîãx3fvSUN
=
_Lazy_glRïœ˚mítCodeuiVîãx3fvSUN
;

2851 
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC
 
	gpglRïœ˚mítCodeuiCﬁ‹4ubVîãx3fSUN
=
_Lazy_glRïœ˚mítCodeuiCﬁ‹4ubVîãx3fSUN
;

2852 
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC
 
	gpglRïœ˚mítCodeuiCﬁ‹4ubVîãx3fvSUN
=
_Lazy_glRïœ˚mítCodeuiCﬁ‹4ubVîãx3fvSUN
;

2853 
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC
 
	gpglRïœ˚mítCodeuiCﬁ‹3fVîãx3fSUN
=
_Lazy_glRïœ˚mítCodeuiCﬁ‹3fVîãx3fSUN
;

2854 
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC
 
	gpglRïœ˚mítCodeuiCﬁ‹3fVîãx3fvSUN
=
_Lazy_glRïœ˚mítCodeuiCﬁ‹3fVîãx3fvSUN
;

2855 
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC
 
	gpglRïœ˚mítCodeuiN‹mÆ3fVîãx3fSUN
=
_Lazy_glRïœ˚mítCodeuiN‹mÆ3fVîãx3fSUN
;

2856 
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC
 
	gpglRïœ˚mítCodeuiN‹mÆ3fVîãx3fvSUN
=
_Lazy_glRïœ˚mítCodeuiN‹mÆ3fVîãx3fvSUN
;

2857 
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC
 
	gpglRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fSUN
=
_Lazy_glRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fSUN
;

2858 
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC
 
	gpglRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fvSUN
=
_Lazy_glRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fvSUN
;

2859 
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC
 
	gpglRïœ˚mítCodeuiTexCo‹d2fVîãx3fSUN
=
_Lazy_glRïœ˚mítCodeuiTexCo‹d2fVîãx3fSUN
;

2860 
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC
 
	gpglRïœ˚mítCodeuiTexCo‹d2fVîãx3fvSUN
=
_Lazy_glRïœ˚mítCodeuiTexCo‹d2fVîãx3fvSUN
;

2861 
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC
 
	gpglRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fSUN
=
_Lazy_glRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fSUN
;

2862 
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
 
	gpglRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fvSUN
=
_Lazy_glRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fvSUN
;

2863 
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
 
	gpglRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
=
_Lazy_glRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
;

2864 
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
 
	gpglRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
=
_Lazy_glRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
;

2869 #ifde‡
__GLEE_GL_EXT_bÀnd_func_£∑øã


2870 
__°dˇŒ
 
	$_Lazy_glBÀndFuncSï¨©eEXT
(
GLíum
 
sÁ˘‹RGB
, GLíum 
dÁ˘‹RGB
, GLíum 
sÁ˘‹AÕha
, GLíum 
dÁ˘‹AÕha
Ë{i‡(
	`GLìInô
()Ë
	`glBÀndFuncSï¨©eEXT
(sÁ˘‹RGB, dÁ˘‹RGB, sÁ˘‹AÕha, dÁ˘‹AÕha);
	}
}

2871 
PFNGLBLENDFUNCSEPARATEEXTPROC
 
	gpglBÀndFuncSï¨©eEXT
=
_Lazy_glBÀndFuncSï¨©eEXT
;

2876 #ifde‡
__GLEE_GL_INGR_cﬁ‹_˛amp


2881 #ifde‡
__GLEE_GL_INGR_öãæa˚_ªad


2886 #ifde‡
__GLEE_GL_EXT_°ícû_wøp


2891 #ifde‡
__GLEE_GL_EXT_422_pixñs


2896 #ifde‡
__GLEE_GL_NV_ãxgí_ªÊe˘i⁄


2901 #ifde‡
__GLEE_GL_EXT_ãxtuª_cube_m≠


2906 #ifde‡
__GLEE_GL_SUN_c⁄vﬁuti⁄_b‹dî_modes


2911 #ifde‡
__GLEE_GL_EXT_ãxtuª_ív_add


2916 #ifde‡
__GLEE_GL_EXT_ãxtuª_lod_büs


2921 #ifde‡
__GLEE_GL_EXT_ãxtuª_fûãr_™isŸr›ic


2926 #ifde‡
__GLEE_GL_EXT_vîãx_weightög


2927 
__°dˇŒ
 
	$_Lazy_glVîãxWeightfEXT
(
GLÊﬂt
 
weight
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxWeightfEXT
(weight);
	}
}

2928 
__°dˇŒ
 
	$_Lazy_glVîãxWeightfvEXT
(c⁄° 
GLÊﬂt
 * 
weight
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxWeightfvEXT
(weight);
	}
}

2929 
__°dˇŒ
 
	$_Lazy_glVîãxWeightPoöãrEXT
(
GLsizei
 
size
, 
GLíum
 
ty≥
, GLsizeò
°ride
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxWeightPoöãrEXT
(size,Åy≥, såide,Öoöãr);
	}
}

2930 
PFNGLVERTEXWEIGHTFEXTPROC
 
	gpglVîãxWeightfEXT
=
_Lazy_glVîãxWeightfEXT
;

2931 
PFNGLVERTEXWEIGHTFVEXTPROC
 
	gpglVîãxWeightfvEXT
=
_Lazy_glVîãxWeightfvEXT
;

2932 
PFNGLVERTEXWEIGHTPOINTEREXTPROC
 
	gpglVîãxWeightPoöãrEXT
=
_Lazy_glVîãxWeightPoöãrEXT
;

2937 #ifde‡
__GLEE_GL_NV_light_max_exp⁄ít


2942 #ifde‡
__GLEE_GL_NV_vîãx_¨øy_ønge


2943 
__°dˇŒ
 
	$_Lazy_glFlushVîãxAºayR™geNV
(Ë{i‡(
	`GLìInô
()Ë
	`glFlushVîãxAºayR™geNV
();
	}
}

2944 
__°dˇŒ
 
	$_Lazy_glVîãxAºayR™geNV
(
GLsizei
 
Àngth
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAºayR™geNV
÷ígth,Öoöãr);
	}
}

2945 
PFNGLFLUSHVERTEXARRAYRANGENVPROC
 
	gpglFlushVîãxAºayR™geNV
=
_Lazy_glFlushVîãxAºayR™geNV
;

2946 
PFNGLVERTEXARRAYRANGENVPROC
 
	gpglVîãxAºayR™geNV
=
_Lazy_glVîãxAºayR™geNV
;

2951 #ifde‡
__GLEE_GL_NV_ªgi°î_comböîs


2952 
__°dˇŒ
 
	$_Lazy_glComböîP¨amëîfvNV
(
GLíum
 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glComböîP¨amëîfvNV
’«me,Ö¨ams);
	}
}

2953 
__°dˇŒ
 
	$_Lazy_glComböîP¨amëîfNV
(
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glComböîP¨amëîfNV
’«me,Ö¨am);
	}
}

2954 
__°dˇŒ
 
	$_Lazy_glComböîP¨amëîivNV
(
GLíum
 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glComböîP¨amëîivNV
’«me,Ö¨ams);
	}
}

2955 
__°dˇŒ
 
	$_Lazy_glComböîP¨amëîiNV
(
GLíum
 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glComböîP¨amëîiNV
’«me,Ö¨am);
	}
}

2956 
__°dˇŒ
 
	$_Lazy_glComböîI≈utNV
(
GLíum
 
°age
, GLíum 
p‹ti⁄
, GLíum 
v¨übÀ
, GLíum 
öput
, GLíum 
m≠pög
, GLíum 
comp⁄ítUßge
Ë{i‡(
	`GLìInô
()Ë
	`glComböîI≈utNV
(°age,Ö‹ti⁄, v¨übÀ, i≈ut, m≠pög, comp⁄ítUßge);
	}
}

2957 
__°dˇŒ
 
	$_Lazy_glComböîOuçutNV
(
GLíum
 
°age
, GLíum 
p‹ti⁄
, GLíum 
abOuçut
, GLíum 
cdOuçut
, GLíum 
sumOuçut
, GLíum 
sˇÀ
, GLíum 
büs
, 
GLboﬁón
 
abDŸProdu˘
, GLboﬁó¿
cdDŸProdu˘
, GLboﬁó¿
muxSum
Ë{i‡(
	`GLìInô
()Ë
	`glComböîOuçutNV
(°age,Ö‹ti⁄,ábOuçut, cdOuçut, sumOuçut, sˇÀ, büs,ábDŸProdu˘, cdDŸProdu˘, muxSum);
	}
}

2958 
__°dˇŒ
 
	$_Lazy_glFöÆComböîI≈utNV
(
GLíum
 
v¨übÀ
, GLíum 
öput
, GLíum 
m≠pög
, GLíum 
comp⁄ítUßge
Ë{i‡(
	`GLìInô
()Ë
	`glFöÆComböîI≈utNV
(v¨übÀ, i≈ut, m≠pög, comp⁄ítUßge);
	}
}

2959 
__°dˇŒ
 
	$_Lazy_glGëComböîI≈utP¨amëîfvNV
(
GLíum
 
°age
, GLíum 
p‹ti⁄
, GLíum 
v¨übÀ
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëComböîI≈utP¨amëîfvNV
(°age,Ö‹ti⁄, v¨übÀ,Ö«me,Ö¨ams);
	}
}

2960 
__°dˇŒ
 
	$_Lazy_glGëComböîI≈utP¨amëîivNV
(
GLíum
 
°age
, GLíum 
p‹ti⁄
, GLíum 
v¨übÀ
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëComböîI≈utP¨amëîivNV
(°age,Ö‹ti⁄, v¨übÀ,Ö«me,Ö¨ams);
	}
}

2961 
__°dˇŒ
 
	$_Lazy_glGëComböîOuçutP¨amëîfvNV
(
GLíum
 
°age
, GLíum 
p‹ti⁄
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëComböîOuçutP¨amëîfvNV
(°age,Ö‹ti⁄,Ö«me,Ö¨ams);
	}
}

2962 
__°dˇŒ
 
	$_Lazy_glGëComböîOuçutP¨amëîivNV
(
GLíum
 
°age
, GLíum 
p‹ti⁄
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëComböîOuçutP¨amëîivNV
(°age,Ö‹ti⁄,Ö«me,Ö¨ams);
	}
}

2963 
__°dˇŒ
 
	$_Lazy_glGëFöÆComböîI≈utP¨amëîfvNV
(
GLíum
 
v¨übÀ
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëFöÆComböîI≈utP¨amëîfvNV
(v¨übÀ,Ö«me,Ö¨ams);
	}
}

2964 
__°dˇŒ
 
	$_Lazy_glGëFöÆComböîI≈utP¨amëîivNV
(
GLíum
 
v¨übÀ
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëFöÆComböîI≈utP¨amëîivNV
(v¨übÀ,Ö«me,Ö¨ams);
	}
}

2965 
PFNGLCOMBINERPARAMETERFVNVPROC
 
	gpglComböîP¨amëîfvNV
=
_Lazy_glComböîP¨amëîfvNV
;

2966 
PFNGLCOMBINERPARAMETERFNVPROC
 
	gpglComböîP¨amëîfNV
=
_Lazy_glComböîP¨amëîfNV
;

2967 
PFNGLCOMBINERPARAMETERIVNVPROC
 
	gpglComböîP¨amëîivNV
=
_Lazy_glComböîP¨amëîivNV
;

2968 
PFNGLCOMBINERPARAMETERINVPROC
 
	gpglComböîP¨amëîiNV
=
_Lazy_glComböîP¨amëîiNV
;

2969 
PFNGLCOMBINERINPUTNVPROC
 
	gpglComböîI≈utNV
=
_Lazy_glComböîI≈utNV
;

2970 
PFNGLCOMBINEROUTPUTNVPROC
 
	gpglComböîOuçutNV
=
_Lazy_glComböîOuçutNV
;

2971 
PFNGLFINALCOMBINERINPUTNVPROC
 
	gpglFöÆComböîI≈utNV
=
_Lazy_glFöÆComböîI≈utNV
;

2972 
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC
 
	gpglGëComböîI≈utP¨amëîfvNV
=
_Lazy_glGëComböîI≈utP¨amëîfvNV
;

2973 
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC
 
	gpglGëComböîI≈utP¨amëîivNV
=
_Lazy_glGëComböîI≈utP¨amëîivNV
;

2974 
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC
 
	gpglGëComböîOuçutP¨amëîfvNV
=
_Lazy_glGëComböîOuçutP¨amëîfvNV
;

2975 
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC
 
	gpglGëComböîOuçutP¨amëîivNV
=
_Lazy_glGëComböîOuçutP¨amëîivNV
;

2976 
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC
 
	gpglGëFöÆComböîI≈utP¨amëîfvNV
=
_Lazy_glGëFöÆComböîI≈utP¨amëîfvNV
;

2977 
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC
 
	gpglGëFöÆComböîI≈utP¨amëîivNV
=
_Lazy_glGëFöÆComböîI≈utP¨amëîivNV
;

2982 #ifde‡
__GLEE_GL_NV_fog_di°™˚


2987 #ifde‡
__GLEE_GL_NV_ãxgí_emboss


2992 #ifde‡
__GLEE_GL_NV_bÀnd_squ¨e


2997 #ifde‡
__GLEE_GL_NV_ãxtuª_ív_comböe4


3002 #ifde‡
__GLEE_GL_MESA_ªsize_buf„rs


3003 
__°dˇŒ
 
	$_Lazy_glResizeBuf„rsMESA
(Ë{i‡(
	`GLìInô
()Ë
	`glResizeBuf„rsMESA
();
	}
}

3004 
PFNGLRESIZEBUFFERSMESAPROC
 
	gpglResizeBuf„rsMESA
=
_Lazy_glResizeBuf„rsMESA
;

3009 #ifde‡
__GLEE_GL_MESA_wödow_pos


3010 
__°dˇŒ
 
	$_Lazy_glWödowPos2dMESA
(
GLdoubÀ
 
x
, GLdoubÀ 
y
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2dMESA
(x, y);
	}
}

3011 
__°dˇŒ
 
	$_Lazy_glWödowPos2dvMESA
(c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2dvMESA
(v);
	}
}

3012 
__°dˇŒ
 
	$_Lazy_glWödowPos2fMESA
(
GLÊﬂt
 
x
, GLÊﬂà
y
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2fMESA
(x, y);
	}
}

3013 
__°dˇŒ
 
	$_Lazy_glWödowPos2fvMESA
(c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2fvMESA
(v);
	}
}

3014 
__°dˇŒ
 
	$_Lazy_glWödowPos2iMESA
(
GLöt
 
x
, GLöà
y
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2iMESA
(x, y);
	}
}

3015 
__°dˇŒ
 
	$_Lazy_glWödowPos2ivMESA
(c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2ivMESA
(v);
	}
}

3016 
__°dˇŒ
 
	$_Lazy_glWödowPos2sMESA
(
GLsh‹t
 
x
, GLsh‹à
y
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2sMESA
(x, y);
	}
}

3017 
__°dˇŒ
 
	$_Lazy_glWödowPos2svMESA
(c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos2svMESA
(v);
	}
}

3018 
__°dˇŒ
 
	$_Lazy_glWödowPos3dMESA
(
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3dMESA
(x, y, z);
	}
}

3019 
__°dˇŒ
 
	$_Lazy_glWödowPos3dvMESA
(c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3dvMESA
(v);
	}
}

3020 
__°dˇŒ
 
	$_Lazy_glWödowPos3fMESA
(
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3fMESA
(x, y, z);
	}
}

3021 
__°dˇŒ
 
	$_Lazy_glWödowPos3fvMESA
(c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3fvMESA
(v);
	}
}

3022 
__°dˇŒ
 
	$_Lazy_glWödowPos3iMESA
(
GLöt
 
x
, GLöà
y
, GLöà
z
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3iMESA
(x, y, z);
	}
}

3023 
__°dˇŒ
 
	$_Lazy_glWödowPos3ivMESA
(c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3ivMESA
(v);
	}
}

3024 
__°dˇŒ
 
	$_Lazy_glWödowPos3sMESA
(
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3sMESA
(x, y, z);
	}
}

3025 
__°dˇŒ
 
	$_Lazy_glWödowPos3svMESA
(c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos3svMESA
(v);
	}
}

3026 
__°dˇŒ
 
	$_Lazy_glWödowPos4dMESA
(
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
, GLdoubÀ 
w
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos4dMESA
(x, y, z, w);
	}
}

3027 
__°dˇŒ
 
	$_Lazy_glWödowPos4dvMESA
(c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos4dvMESA
(v);
	}
}

3028 
__°dˇŒ
 
	$_Lazy_glWödowPos4fMESA
(
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
, GLÊﬂà
w
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos4fMESA
(x, y, z, w);
	}
}

3029 
__°dˇŒ
 
	$_Lazy_glWödowPos4fvMESA
(c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos4fvMESA
(v);
	}
}

3030 
__°dˇŒ
 
	$_Lazy_glWödowPos4iMESA
(
GLöt
 
x
, GLöà
y
, GLöà
z
, GLöà
w
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos4iMESA
(x, y, z, w);
	}
}

3031 
__°dˇŒ
 
	$_Lazy_glWödowPos4ivMESA
(c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos4ivMESA
(v);
	}
}

3032 
__°dˇŒ
 
	$_Lazy_glWödowPos4sMESA
(
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
, GLsh‹à
w
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos4sMESA
(x, y, z, w);
	}
}

3033 
__°dˇŒ
 
	$_Lazy_glWödowPos4svMESA
(c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glWödowPos4svMESA
(v);
	}
}

3034 
PFNGLWINDOWPOS2DMESAPROC
 
	gpglWödowPos2dMESA
=
_Lazy_glWödowPos2dMESA
;

3035 
PFNGLWINDOWPOS2DVMESAPROC
 
	gpglWödowPos2dvMESA
=
_Lazy_glWödowPos2dvMESA
;

3036 
PFNGLWINDOWPOS2FMESAPROC
 
	gpglWödowPos2fMESA
=
_Lazy_glWödowPos2fMESA
;

3037 
PFNGLWINDOWPOS2FVMESAPROC
 
	gpglWödowPos2fvMESA
=
_Lazy_glWödowPos2fvMESA
;

3038 
PFNGLWINDOWPOS2IMESAPROC
 
	gpglWödowPos2iMESA
=
_Lazy_glWödowPos2iMESA
;

3039 
PFNGLWINDOWPOS2IVMESAPROC
 
	gpglWödowPos2ivMESA
=
_Lazy_glWödowPos2ivMESA
;

3040 
PFNGLWINDOWPOS2SMESAPROC
 
	gpglWödowPos2sMESA
=
_Lazy_glWödowPos2sMESA
;

3041 
PFNGLWINDOWPOS2SVMESAPROC
 
	gpglWödowPos2svMESA
=
_Lazy_glWödowPos2svMESA
;

3042 
PFNGLWINDOWPOS3DMESAPROC
 
	gpglWödowPos3dMESA
=
_Lazy_glWödowPos3dMESA
;

3043 
PFNGLWINDOWPOS3DVMESAPROC
 
	gpglWödowPos3dvMESA
=
_Lazy_glWödowPos3dvMESA
;

3044 
PFNGLWINDOWPOS3FMESAPROC
 
	gpglWödowPos3fMESA
=
_Lazy_glWödowPos3fMESA
;

3045 
PFNGLWINDOWPOS3FVMESAPROC
 
	gpglWödowPos3fvMESA
=
_Lazy_glWödowPos3fvMESA
;

3046 
PFNGLWINDOWPOS3IMESAPROC
 
	gpglWödowPos3iMESA
=
_Lazy_glWödowPos3iMESA
;

3047 
PFNGLWINDOWPOS3IVMESAPROC
 
	gpglWödowPos3ivMESA
=
_Lazy_glWödowPos3ivMESA
;

3048 
PFNGLWINDOWPOS3SMESAPROC
 
	gpglWödowPos3sMESA
=
_Lazy_glWödowPos3sMESA
;

3049 
PFNGLWINDOWPOS3SVMESAPROC
 
	gpglWödowPos3svMESA
=
_Lazy_glWödowPos3svMESA
;

3050 
PFNGLWINDOWPOS4DMESAPROC
 
	gpglWödowPos4dMESA
=
_Lazy_glWödowPos4dMESA
;

3051 
PFNGLWINDOWPOS4DVMESAPROC
 
	gpglWödowPos4dvMESA
=
_Lazy_glWödowPos4dvMESA
;

3052 
PFNGLWINDOWPOS4FMESAPROC
 
	gpglWödowPos4fMESA
=
_Lazy_glWödowPos4fMESA
;

3053 
PFNGLWINDOWPOS4FVMESAPROC
 
	gpglWödowPos4fvMESA
=
_Lazy_glWödowPos4fvMESA
;

3054 
PFNGLWINDOWPOS4IMESAPROC
 
	gpglWödowPos4iMESA
=
_Lazy_glWödowPos4iMESA
;

3055 
PFNGLWINDOWPOS4IVMESAPROC
 
	gpglWödowPos4ivMESA
=
_Lazy_glWödowPos4ivMESA
;

3056 
PFNGLWINDOWPOS4SMESAPROC
 
	gpglWödowPos4sMESA
=
_Lazy_glWödowPos4sMESA
;

3057 
PFNGLWINDOWPOS4SVMESAPROC
 
	gpglWödowPos4svMESA
=
_Lazy_glWödowPos4svMESA
;

3062 #ifde‡
__GLEE_GL_EXT_ãxtuª_com¥essi⁄_s3tc


3067 #ifde‡
__GLEE_GL_IBM_cuŒ_vîãx


3072 #ifde‡
__GLEE_GL_IBM_mu…imode_døw_¨øys


3073 
__°dˇŒ
 
	$_Lazy_glMu…iModeDøwAºaysIBM
(c⁄° 
GLíum
 * 
mode
, c⁄° 
GLöt
 * 
fú°
, c⁄° 
GLsizei
 * 
cou¡
, GLsizeò
¥imcou¡
, GLöà
mode°ride
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iModeDøwAºaysIBM
(mode, fú°, cou¡,Örimcou¡, mode°ride);
	}
}

3074 
__°dˇŒ
 
	$_Lazy_glMu…iModeDøwEÀmítsIBM
(c⁄° 
GLíum
 * 
mode
, c⁄° 
GLsizei
 * 
cou¡
, GLíum 
ty≥
, c⁄° 
GLvoid
* c⁄° * 
ödi˚s
, GLsizeò
¥imcou¡
, 
GLöt
 
mode°ride
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iModeDøwEÀmítsIBM
(mode, cou¡,Åy≥, indi˚s,Örimcou¡, mode°ride);
	}
}

3075 
PFNGLMULTIMODEDRAWARRAYSIBMPROC
 
	gpglMu…iModeDøwAºaysIBM
=
_Lazy_glMu…iModeDøwAºaysIBM
;

3076 
PFNGLMULTIMODEDRAWELEMENTSIBMPROC
 
	gpglMu…iModeDøwEÀmítsIBM
=
_Lazy_glMu…iModeDøwEÀmítsIBM
;

3081 #ifde‡
__GLEE_GL_IBM_vîãx_¨øy_li°s


3082 
__°dˇŒ
 
	$_Lazy_glCﬁ‹PoöãrLi°IBM
(
GLöt
 
size
, 
GLíum
 
ty≥
, GLöà
°ride
, c⁄° 
GLvoid
* * 
poöãr
, GLöà
±r°ride
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹PoöãrLi°IBM
(size,Åy≥, såide,Öoöãr,Öå°ride);
	}
}

3083 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹PoöãrLi°IBM
(
GLöt
 
size
, 
GLíum
 
ty≥
, GLöà
°ride
, c⁄° 
GLvoid
* * 
poöãr
, GLöà
±r°ride
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹PoöãrLi°IBM
(size,Åy≥, såide,Öoöãr,Öå°ride);
	}
}

3084 
__°dˇŒ
 
	$_Lazy_glEdgeFœgPoöãrLi°IBM
(
GLöt
 
°ride
, c⁄° 
GLboﬁón
* * 
poöãr
, GLöà
±r°ride
Ë{i‡(
	`GLìInô
()Ë
	`glEdgeFœgPoöãrLi°IBM
(°ride,Öoöãr,Öå°ride);
	}
}

3085 
__°dˇŒ
 
	$_Lazy_glFogCo‹dPoöãrLi°IBM
(
GLíum
 
ty≥
, 
GLöt
 
°ride
, c⁄° 
GLvoid
* * 
poöãr
, GLöà
±r°ride
Ë{i‡(
	`GLìInô
()Ë
	`glFogCo‹dPoöãrLi°IBM
—y≥, såide,Öoöãr,Öå°ride);
	}
}

3086 
__°dˇŒ
 
	$_Lazy_glIndexPoöãrLi°IBM
(
GLíum
 
ty≥
, 
GLöt
 
°ride
, c⁄° 
GLvoid
* * 
poöãr
, GLöà
±r°ride
Ë{i‡(
	`GLìInô
()Ë
	`glIndexPoöãrLi°IBM
—y≥, såide,Öoöãr,Öå°ride);
	}
}

3087 
__°dˇŒ
 
	$_Lazy_glN‹mÆPoöãrLi°IBM
(
GLíum
 
ty≥
, 
GLöt
 
°ride
, c⁄° 
GLvoid
* * 
poöãr
, GLöà
±r°ride
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆPoöãrLi°IBM
—y≥, såide,Öoöãr,Öå°ride);
	}
}

3088 
__°dˇŒ
 
	$_Lazy_glTexCo‹dPoöãrLi°IBM
(
GLöt
 
size
, 
GLíum
 
ty≥
, GLöà
°ride
, c⁄° 
GLvoid
* * 
poöãr
, GLöà
±r°ride
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹dPoöãrLi°IBM
(size,Åy≥, såide,Öoöãr,Öå°ride);
	}
}

3089 
__°dˇŒ
 
	$_Lazy_glVîãxPoöãrLi°IBM
(
GLöt
 
size
, 
GLíum
 
ty≥
, GLöà
°ride
, c⁄° 
GLvoid
* * 
poöãr
, GLöà
±r°ride
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxPoöãrLi°IBM
(size,Åy≥, såide,Öoöãr,Öå°ride);
	}
}

3090 
PFNGLCOLORPOINTERLISTIBMPROC
 
	gpglCﬁ‹PoöãrLi°IBM
=
_Lazy_glCﬁ‹PoöãrLi°IBM
;

3091 
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC
 
	gpglSec⁄d¨yCﬁ‹PoöãrLi°IBM
=
_Lazy_glSec⁄d¨yCﬁ‹PoöãrLi°IBM
;

3092 
PFNGLEDGEFLAGPOINTERLISTIBMPROC
 
	gpglEdgeFœgPoöãrLi°IBM
=
_Lazy_glEdgeFœgPoöãrLi°IBM
;

3093 
PFNGLFOGCOORDPOINTERLISTIBMPROC
 
	gpglFogCo‹dPoöãrLi°IBM
=
_Lazy_glFogCo‹dPoöãrLi°IBM
;

3094 
PFNGLINDEXPOINTERLISTIBMPROC
 
	gpglIndexPoöãrLi°IBM
=
_Lazy_glIndexPoöãrLi°IBM
;

3095 
PFNGLNORMALPOINTERLISTIBMPROC
 
	gpglN‹mÆPoöãrLi°IBM
=
_Lazy_glN‹mÆPoöãrLi°IBM
;

3096 
PFNGLTEXCOORDPOINTERLISTIBMPROC
 
	gpglTexCo‹dPoöãrLi°IBM
=
_Lazy_glTexCo‹dPoöãrLi°IBM
;

3097 
PFNGLVERTEXPOINTERLISTIBMPROC
 
	gpglVîãxPoöãrLi°IBM
=
_Lazy_glVîãxPoöãrLi°IBM
;

3102 #ifde‡
__GLEE_GL_SGIX_subßm∂e


3107 #ifde‡
__GLEE_GL_SGIX_y¸cb_subßm∂e


3112 #ifde‡
__GLEE_GL_SGIX_y¸cba


3117 #ifde‡
__GLEE_GL_SGI_dïth_∑ss_ö°rumít


3122 #ifde‡
__GLEE_GL_3DFX_ãxtuª_com¥essi⁄_FXT1


3127 #ifde‡
__GLEE_GL_3DFX_mu…ißm∂e


3132 #ifde‡
__GLEE_GL_3DFX_tbuf„r


3133 
__°dˇŒ
 
	$_Lazy_glTbuf„rMask3DFX
(
GLuöt
 
mask
Ë{i‡(
	`GLìInô
()Ë
	`glTbuf„rMask3DFX
(mask);
	}
}

3134 
PFNGLTBUFFERMASK3DFXPROC
 
	gpglTbuf„rMask3DFX
=
_Lazy_glTbuf„rMask3DFX
;

3139 #ifde‡
__GLEE_GL_EXT_mu…ißm∂e


3140 
__°dˇŒ
 
	$_Lazy_glSam∂eMaskEXT
(
GL˛ampf
 
vÆue
, 
GLboﬁón
 
övît
Ë{i‡(
	`GLìInô
()Ë
	`glSam∂eMaskEXT
(vÆue, invît);
	}
}

3141 
__°dˇŒ
 
	$_Lazy_glSam∂eP©ã∫EXT
(
GLíum
 
∑âîn
Ë{i‡(
	`GLìInô
()Ë
	`glSam∂eP©ã∫EXT
’©ã∫);
	}
}

3142 
PFNGLSAMPLEMASKEXTPROC
 
	gpglSam∂eMaskEXT
=
_Lazy_glSam∂eMaskEXT
;

3143 
PFNGLSAMPLEPATTERNEXTPROC
 
	gpglSam∂eP©ã∫EXT
=
_Lazy_glSam∂eP©ã∫EXT
;

3148 #ifde‡
__GLEE_GL_SGIX_vîãx_¥e˛ù


3153 #ifde‡
__GLEE_GL_SGIX_c⁄vﬁuti⁄_accuøcy


3158 #ifde‡
__GLEE_GL_SGIX_ªßm∂e


3163 #ifde‡
__GLEE_GL_SGIS_poöt_löe_ãxgí


3168 #ifde‡
__GLEE_GL_SGIS_ãxtuª_cﬁ‹_mask


3169 
__°dˇŒ
 
	$_Lazy_glTextuªCﬁ‹MaskSGIS
(
GLboﬁón
 
ªd
, GLboﬁó¿
gªí
, GLboﬁó¿
blue
, GLboﬁó¿
Æpha
Ë{i‡(
	`GLìInô
()Ë
	`glTextuªCﬁ‹MaskSGIS
‘ed, gªí, blue,áÕha);
	}
}

3170 
PFNGLTEXTURECOLORMASKSGISPROC
 
	gpglTextuªCﬁ‹MaskSGIS
=
_Lazy_glTextuªCﬁ‹MaskSGIS
;

3175 #ifde‡
__GLEE_GL_EXT_ãxtuª_ív_dŸ3


3180 #ifde‡
__GLEE_GL_ATI_ãxtuª_múr‹_⁄˚


3185 #ifde‡
__GLEE_GL_NV_„n˚


3186 
__°dˇŒ
 
	$_Lazy_glDñëeFí˚sNV
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
„n˚s
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeFí˚sNV
“, fí˚s);
	}
}

3187 
__°dˇŒ
 
	$_Lazy_glGíFí˚sNV
(
GLsizei
 
n
, 
GLuöt
 * 
„n˚s
Ë{i‡(
	`GLìInô
()Ë
	`glGíFí˚sNV
“, fí˚s);
	}
}

3188 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsFí˚NV
(
GLuöt
 
„n˚
Ë{i‡(
	`GLìInô
()Ë 
	`glIsFí˚NV
(„n˚);  (
GLboﬁón
)0;
	}
}

3189 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glTe°Fí˚NV
(
GLuöt
 
„n˚
Ë{i‡(
	`GLìInô
()Ë 
	`glTe°Fí˚NV
(„n˚);  (
GLboﬁón
)0;
	}
}

3190 
__°dˇŒ
 
	$_Lazy_glGëFí˚ivNV
(
GLuöt
 
„n˚
, 
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëFí˚ivNV
(„n˚,Ö«me,Ö¨ams);
	}
}

3191 
__°dˇŒ
 
	$_Lazy_glFöishFí˚NV
(
GLuöt
 
„n˚
Ë{i‡(
	`GLìInô
()Ë
	`glFöishFí˚NV
(„n˚);
	}
}

3192 
__°dˇŒ
 
	$_Lazy_glSëFí˚NV
(
GLuöt
 
„n˚
, 
GLíum
 
c⁄dôi⁄
Ë{i‡(
	`GLìInô
()Ë
	`glSëFí˚NV
(„n˚, c⁄dôi⁄);
	}
}

3193 
PFNGLDELETEFENCESNVPROC
 
	gpglDñëeFí˚sNV
=
_Lazy_glDñëeFí˚sNV
;

3194 
PFNGLGENFENCESNVPROC
 
	gpglGíFí˚sNV
=
_Lazy_glGíFí˚sNV
;

3195 
PFNGLISFENCENVPROC
 
	gpglIsFí˚NV
=
_Lazy_glIsFí˚NV
;

3196 
PFNGLTESTFENCENVPROC
 
	gpglTe°Fí˚NV
=
_Lazy_glTe°Fí˚NV
;

3197 
PFNGLGETFENCEIVNVPROC
 
	gpglGëFí˚ivNV
=
_Lazy_glGëFí˚ivNV
;

3198 
PFNGLFINISHFENCENVPROC
 
	gpglFöishFí˚NV
=
_Lazy_glFöishFí˚NV
;

3199 
PFNGLSETFENCENVPROC
 
	gpglSëFí˚NV
=
_Lazy_glSëFí˚NV
;

3204 #ifde‡
__GLEE_GL_IBM_ãxtuª_múr‹ed_ª≥©


3209 #ifde‡
__GLEE_GL_NV_evÆu©‹s


3210 
__°dˇŒ
 
	$_Lazy_glM≠C⁄åﬁPoötsNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, GLíum 
ty≥
, 
GLsizei
 
u°ride
, GLsizeò
v°ride
, 
GLöt
 
u‹dî
, GLöà
v‹dî
, 
GLboﬁón
 
∑cked
, c⁄° 
GLvoid
 * 
poöts
Ë{i‡(
	`GLìInô
()Ë
	`glM≠C⁄åﬁPoötsNV
—¨gë, index,Åy≥, u°ride, v°ride, u‹dî, v‹dî,Öacked,Öoöts);
	}
}

3211 
__°dˇŒ
 
	$_Lazy_glM≠P¨amëîivNV
(
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glM≠P¨amëîivNV
—¨gë,Ö«me,Ö¨ams);
	}
}

3212 
__°dˇŒ
 
	$_Lazy_glM≠P¨amëîfvNV
(
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glM≠P¨amëîfvNV
—¨gë,Ö«me,Ö¨ams);
	}
}

3213 
__°dˇŒ
 
	$_Lazy_glGëM≠C⁄åﬁPoötsNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, GLíum 
ty≥
, 
GLsizei
 
u°ride
, GLsizeò
v°ride
, 
GLboﬁón
 
∑cked
, 
GLvoid
 * 
poöts
Ë{i‡(
	`GLìInô
()Ë
	`glGëM≠C⁄åﬁPoötsNV
—¨gë, index,Åy≥, u°ride, v°ride,Öacked,Öoöts);
	}
}

3214 
__°dˇŒ
 
	$_Lazy_glGëM≠P¨amëîivNV
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëM≠P¨amëîivNV
—¨gë,Ö«me,Ö¨ams);
	}
}

3215 
__°dˇŒ
 
	$_Lazy_glGëM≠P¨amëîfvNV
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëM≠P¨amëîfvNV
—¨gë,Ö«me,Ö¨ams);
	}
}

3216 
__°dˇŒ
 
	$_Lazy_glGëM≠AâribP¨amëîivNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëM≠AâribP¨amëîivNV
—¨gë, index,Ö«me,Ö¨ams);
	}
}

3217 
__°dˇŒ
 
	$_Lazy_glGëM≠AâribP¨amëîfvNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëM≠AâribP¨amëîfvNV
—¨gë, index,Ö«me,Ö¨ams);
	}
}

3218 
__°dˇŒ
 
	$_Lazy_glEvÆM≠sNV
(
GLíum
 
èrgë
, GLíum 
mode
Ë{i‡(
	`GLìInô
()Ë
	`glEvÆM≠sNV
—¨gë, mode);
	}
}

3219 
PFNGLMAPCONTROLPOINTSNVPROC
 
	gpglM≠C⁄åﬁPoötsNV
=
_Lazy_glM≠C⁄åﬁPoötsNV
;

3220 
PFNGLMAPPARAMETERIVNVPROC
 
	gpglM≠P¨amëîivNV
=
_Lazy_glM≠P¨amëîivNV
;

3221 
PFNGLMAPPARAMETERFVNVPROC
 
	gpglM≠P¨amëîfvNV
=
_Lazy_glM≠P¨amëîfvNV
;

3222 
PFNGLGETMAPCONTROLPOINTSNVPROC
 
	gpglGëM≠C⁄åﬁPoötsNV
=
_Lazy_glGëM≠C⁄åﬁPoötsNV
;

3223 
PFNGLGETMAPPARAMETERIVNVPROC
 
	gpglGëM≠P¨amëîivNV
=
_Lazy_glGëM≠P¨amëîivNV
;

3224 
PFNGLGETMAPPARAMETERFVNVPROC
 
	gpglGëM≠P¨amëîfvNV
=
_Lazy_glGëM≠P¨amëîfvNV
;

3225 
PFNGLGETMAPATTRIBPARAMETERIVNVPROC
 
	gpglGëM≠AâribP¨amëîivNV
=
_Lazy_glGëM≠AâribP¨amëîivNV
;

3226 
PFNGLGETMAPATTRIBPARAMETERFVNVPROC
 
	gpglGëM≠AâribP¨amëîfvNV
=
_Lazy_glGëM≠AâribP¨amëîfvNV
;

3227 
PFNGLEVALMAPSNVPROC
 
	gpglEvÆM≠sNV
=
_Lazy_glEvÆM≠sNV
;

3232 #ifde‡
__GLEE_GL_NV_∑cked_dïth_°ícû


3237 #ifde‡
__GLEE_GL_NV_ªgi°î_comböîs2


3238 
__°dˇŒ
 
	$_Lazy_glComböîSègeP¨amëîfvNV
(
GLíum
 
°age
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glComböîSègeP¨amëîfvNV
(°age,Ö«me,Ö¨ams);
	}
}

3239 
__°dˇŒ
 
	$_Lazy_glGëComböîSègeP¨amëîfvNV
(
GLíum
 
°age
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëComböîSègeP¨amëîfvNV
(°age,Ö«me,Ö¨ams);
	}
}

3240 
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC
 
	gpglComböîSègeP¨amëîfvNV
=
_Lazy_glComböîSègeP¨amëîfvNV
;

3241 
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC
 
	gpglGëComböîSègeP¨amëîfvNV
=
_Lazy_glGëComböîSègeP¨amëîfvNV
;

3246 #ifde‡
__GLEE_GL_NV_ãxtuª_com¥essi⁄_vtc


3251 #ifde‡
__GLEE_GL_NV_ãxtuª_ª˘™gÀ


3256 #ifde‡
__GLEE_GL_NV_ãxtuª_shadî


3261 #ifde‡
__GLEE_GL_NV_ãxtuª_shadî2


3266 #ifde‡
__GLEE_GL_NV_vîãx_¨øy_ønge2


3271 #ifde‡
__GLEE_GL_NV_vîãx_¥ogøm


3272 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glAªProgømsResidítNV
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
¥ogøms
, 
GLboﬁón
 * 
ªsidí˚s
Ë{i‡(
	`GLìInô
()Ë 
	`glAªProgømsResidítNV
“,Örogøms,Ñesidí˚s);  (GLboﬁón)0;
	}
}

3273 
__°dˇŒ
 
	$_Lazy_glBödProgømNV
(
GLíum
 
èrgë
, 
GLuöt
 
id
Ë{i‡(
	`GLìInô
()Ë
	`glBödProgømNV
—¨gë, id);
	}
}

3274 
__°dˇŒ
 
	$_Lazy_glDñëeProgømsNV
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
¥ogøms
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeProgømsNV
“,Örogøms);
	}
}

3275 
__°dˇŒ
 
	$_Lazy_glExecuãProgømNV
(
GLíum
 
èrgë
, 
GLuöt
 
id
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glExecuãProgømNV
—¨gë, id,Ö¨ams);
	}
}

3276 
__°dˇŒ
 
	$_Lazy_glGíProgømsNV
(
GLsizei
 
n
, 
GLuöt
 * 
¥ogøms
Ë{i‡(
	`GLìInô
()Ë
	`glGíProgømsNV
“,Örogøms);
	}
}

3277 
__°dˇŒ
 
	$_Lazy_glGëProgømP¨amëîdvNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, GLíum 
≤ame
, 
GLdoubÀ
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømP¨amëîdvNV
—¨gë, index,Ö«me,Ö¨ams);
	}
}

3278 
__°dˇŒ
 
	$_Lazy_glGëProgømP¨amëîfvNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømP¨amëîfvNV
—¨gë, index,Ö«me,Ö¨ams);
	}
}

3279 
__°dˇŒ
 
	$_Lazy_glGëProgømivNV
(
GLuöt
 
id
, 
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømivNV
(id,Ö«me,Ö¨ams);
	}
}

3280 
__°dˇŒ
 
	$_Lazy_glGëProgømSåögNV
(
GLuöt
 
id
, 
GLíum
 
≤ame
, 
GLubyã
 * 
¥ogøm
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømSåögNV
(id,Ö«me,Örogøm);
	}
}

3281 
__°dˇŒ
 
	$_Lazy_glGëTøckM©rixivNV
(
GLíum
 
èrgë
, 
GLuöt
 
addªss
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëTøckM©rixivNV
—¨gë,áddªss,Ö«me,Ö¨ams);
	}
}

3282 
__°dˇŒ
 
	$_Lazy_glGëVîãxAâribdvNV
(
GLuöt
 
ödex
, 
GLíum
 
≤ame
, 
GLdoubÀ
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëVîãxAâribdvNV
(ödex,Ö«me,Ö¨ams);
	}
}

3283 
__°dˇŒ
 
	$_Lazy_glGëVîãxAâribfvNV
(
GLuöt
 
ödex
, 
GLíum
 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëVîãxAâribfvNV
(ödex,Ö«me,Ö¨ams);
	}
}

3284 
__°dˇŒ
 
	$_Lazy_glGëVîãxAâribivNV
(
GLuöt
 
ödex
, 
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëVîãxAâribivNV
(ödex,Ö«me,Ö¨ams);
	}
}

3285 
__°dˇŒ
 
	$_Lazy_glGëVîãxAâribPoöãrvNV
(
GLuöt
 
ödex
, 
GLíum
 
≤ame
, 
GLvoid
* * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glGëVîãxAâribPoöãrvNV
(ödex,Ö«me,Öoöãr);
	}
}

3286 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsProgømNV
(
GLuöt
 
id
Ë{i‡(
	`GLìInô
()Ë 
	`glIsProgømNV
(id);  (
GLboﬁón
)0;
	}
}

3287 
__°dˇŒ
 
	$_Lazy_glLﬂdProgømNV
(
GLíum
 
èrgë
, 
GLuöt
 
id
, 
GLsizei
 
Àn
, c⁄° 
GLubyã
 * 
¥ogøm
Ë{i‡(
	`GLìInô
()Ë
	`glLﬂdProgømNV
—¨gë, id,Üí,Örogøm);
	}
}

3288 
__°dˇŒ
 
	$_Lazy_glProgømP¨amëî4dNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
, GLdoubÀ 
w
Ë{i‡(
	`GLìInô
()Ë
	`glProgømP¨amëî4dNV
—¨gë, index, x, y, z, w);
	}
}

3289 
__°dˇŒ
 
	$_Lazy_glProgømP¨amëî4dvNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glProgømP¨amëî4dvNV
—¨gë, index, v);
	}
}

3290 
__°dˇŒ
 
	$_Lazy_glProgømP¨amëî4fNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
, GLÊﬂà
w
Ë{i‡(
	`GLìInô
()Ë
	`glProgømP¨amëî4fNV
—¨gë, index, x, y, z, w);
	}
}

3291 
__°dˇŒ
 
	$_Lazy_glProgømP¨amëî4fvNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glProgømP¨amëî4fvNV
—¨gë, index, v);
	}
}

3292 
__°dˇŒ
 
	$_Lazy_glProgømP¨amëîs4dvNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, GLuöà
cou¡
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glProgømP¨amëîs4dvNV
—¨gë, index, cou¡, v);
	}
}

3293 
__°dˇŒ
 
	$_Lazy_glProgømP¨amëîs4fvNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, GLuöà
cou¡
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glProgømP¨amëîs4fvNV
—¨gë, index, cou¡, v);
	}
}

3294 
__°dˇŒ
 
	$_Lazy_glReque°ResidítProgømsNV
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
¥ogøms
Ë{i‡(
	`GLìInô
()Ë
	`glReque°ResidítProgømsNV
“,Örogøms);
	}
}

3295 
__°dˇŒ
 
	$_Lazy_glTøckM©rixNV
(
GLíum
 
èrgë
, 
GLuöt
 
addªss
, GLíum 
m©rix
, GLíum 
å™sf‹m
Ë{i‡(
	`GLìInô
()Ë
	`glTøckM©rixNV
—¨gë,áddªss, m©rix,Åønsf‹m);
	}
}

3296 
__°dˇŒ
 
	$_Lazy_glVîãxAâribPoöãrNV
(
GLuöt
 
ödex
, 
GLöt
 
fsize
, 
GLíum
 
ty≥
, 
GLsizei
 
°ride
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribPoöãrNV
(ödex, fsize,Åy≥, såide,Öoöãr);
	}
}

3297 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1dNV
(
GLuöt
 
ödex
, 
GLdoubÀ
 
x
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1dNV
(ödex, x);
	}
}

3298 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1dvNV
(
GLuöt
 
ödex
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1dvNV
(ödex, v);
	}
}

3299 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1fNV
(
GLuöt
 
ödex
, 
GLÊﬂt
 
x
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1fNV
(ödex, x);
	}
}

3300 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1fvNV
(
GLuöt
 
ödex
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1fvNV
(ödex, v);
	}
}

3301 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1sNV
(
GLuöt
 
ödex
, 
GLsh‹t
 
x
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1sNV
(ödex, x);
	}
}

3302 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1svNV
(
GLuöt
 
ödex
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1svNV
(ödex, v);
	}
}

3303 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2dNV
(
GLuöt
 
ödex
, 
GLdoubÀ
 
x
, GLdoubÀ 
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2dNV
(ödex, x, y);
	}
}

3304 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2dvNV
(
GLuöt
 
ödex
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2dvNV
(ödex, v);
	}
}

3305 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2fNV
(
GLuöt
 
ödex
, 
GLÊﬂt
 
x
, GLÊﬂà
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2fNV
(ödex, x, y);
	}
}

3306 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2fvNV
(
GLuöt
 
ödex
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2fvNV
(ödex, v);
	}
}

3307 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2sNV
(
GLuöt
 
ödex
, 
GLsh‹t
 
x
, GLsh‹à
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2sNV
(ödex, x, y);
	}
}

3308 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2svNV
(
GLuöt
 
ödex
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2svNV
(ödex, v);
	}
}

3309 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3dNV
(
GLuöt
 
ödex
, 
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3dNV
(ödex, x, y, z);
	}
}

3310 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3dvNV
(
GLuöt
 
ödex
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3dvNV
(ödex, v);
	}
}

3311 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3fNV
(
GLuöt
 
ödex
, 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3fNV
(ödex, x, y, z);
	}
}

3312 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3fvNV
(
GLuöt
 
ödex
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3fvNV
(ödex, v);
	}
}

3313 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3sNV
(
GLuöt
 
ödex
, 
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3sNV
(ödex, x, y, z);
	}
}

3314 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3svNV
(
GLuöt
 
ödex
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3svNV
(ödex, v);
	}
}

3315 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4dNV
(
GLuöt
 
ödex
, 
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
, GLdoubÀ 
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4dNV
(ödex, x, y, z, w);
	}
}

3316 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4dvNV
(
GLuöt
 
ödex
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4dvNV
(ödex, v);
	}
}

3317 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4fNV
(
GLuöt
 
ödex
, 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
, GLÊﬂà
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4fNV
(ödex, x, y, z, w);
	}
}

3318 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4fvNV
(
GLuöt
 
ödex
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4fvNV
(ödex, v);
	}
}

3319 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4sNV
(
GLuöt
 
ödex
, 
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
, GLsh‹à
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4sNV
(ödex, x, y, z, w);
	}
}

3320 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4svNV
(
GLuöt
 
ödex
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4svNV
(ödex, v);
	}
}

3321 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4ubNV
(
GLuöt
 
ödex
, 
GLubyã
 
x
, GLubyã 
y
, GLubyã 
z
, GLubyã 
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4ubNV
(ödex, x, y, z, w);
	}
}

3322 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4ubvNV
(
GLuöt
 
ödex
, c⁄° 
GLubyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4ubvNV
(ödex, v);
	}
}

3323 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs1dvNV
(
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs1dvNV
(ödex, cou¡, v);
	}
}

3324 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs1fvNV
(
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs1fvNV
(ödex, cou¡, v);
	}
}

3325 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs1svNV
(
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs1svNV
(ödex, cou¡, v);
	}
}

3326 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs2dvNV
(
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs2dvNV
(ödex, cou¡, v);
	}
}

3327 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs2fvNV
(
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs2fvNV
(ödex, cou¡, v);
	}
}

3328 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs2svNV
(
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs2svNV
(ödex, cou¡, v);
	}
}

3329 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs3dvNV
(
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs3dvNV
(ödex, cou¡, v);
	}
}

3330 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs3fvNV
(
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs3fvNV
(ödex, cou¡, v);
	}
}

3331 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs3svNV
(
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs3svNV
(ödex, cou¡, v);
	}
}

3332 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs4dvNV
(
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs4dvNV
(ödex, cou¡, v);
	}
}

3333 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs4fvNV
(
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs4fvNV
(ödex, cou¡, v);
	}
}

3334 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs4svNV
(
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs4svNV
(ödex, cou¡, v);
	}
}

3335 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs4ubvNV
(
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLubyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs4ubvNV
(ödex, cou¡, v);
	}
}

3336 
PFNGLAREPROGRAMSRESIDENTNVPROC
 
	gpglAªProgømsResidítNV
=
_Lazy_glAªProgømsResidítNV
;

3337 
PFNGLBINDPROGRAMNVPROC
 
	gpglBödProgømNV
=
_Lazy_glBödProgømNV
;

3338 
PFNGLDELETEPROGRAMSNVPROC
 
	gpglDñëeProgømsNV
=
_Lazy_glDñëeProgømsNV
;

3339 
PFNGLEXECUTEPROGRAMNVPROC
 
	gpglExecuãProgømNV
=
_Lazy_glExecuãProgømNV
;

3340 
PFNGLGENPROGRAMSNVPROC
 
	gpglGíProgømsNV
=
_Lazy_glGíProgømsNV
;

3341 
PFNGLGETPROGRAMPARAMETERDVNVPROC
 
	gpglGëProgømP¨amëîdvNV
=
_Lazy_glGëProgømP¨amëîdvNV
;

3342 
PFNGLGETPROGRAMPARAMETERFVNVPROC
 
	gpglGëProgømP¨amëîfvNV
=
_Lazy_glGëProgømP¨amëîfvNV
;

3343 
PFNGLGETPROGRAMIVNVPROC
 
	gpglGëProgømivNV
=
_Lazy_glGëProgømivNV
;

3344 
PFNGLGETPROGRAMSTRINGNVPROC
 
	gpglGëProgømSåögNV
=
_Lazy_glGëProgømSåögNV
;

3345 
PFNGLGETTRACKMATRIXIVNVPROC
 
	gpglGëTøckM©rixivNV
=
_Lazy_glGëTøckM©rixivNV
;

3346 
PFNGLGETVERTEXATTRIBDVNVPROC
 
	gpglGëVîãxAâribdvNV
=
_Lazy_glGëVîãxAâribdvNV
;

3347 
PFNGLGETVERTEXATTRIBFVNVPROC
 
	gpglGëVîãxAâribfvNV
=
_Lazy_glGëVîãxAâribfvNV
;

3348 
PFNGLGETVERTEXATTRIBIVNVPROC
 
	gpglGëVîãxAâribivNV
=
_Lazy_glGëVîãxAâribivNV
;

3349 
PFNGLGETVERTEXATTRIBPOINTERVNVPROC
 
	gpglGëVîãxAâribPoöãrvNV
=
_Lazy_glGëVîãxAâribPoöãrvNV
;

3350 
PFNGLISPROGRAMNVPROC
 
	gpglIsProgømNV
=
_Lazy_glIsProgømNV
;

3351 
PFNGLLOADPROGRAMNVPROC
 
	gpglLﬂdProgømNV
=
_Lazy_glLﬂdProgømNV
;

3352 
PFNGLPROGRAMPARAMETER4DNVPROC
 
	gpglProgømP¨amëî4dNV
=
_Lazy_glProgømP¨amëî4dNV
;

3353 
PFNGLPROGRAMPARAMETER4DVNVPROC
 
	gpglProgømP¨amëî4dvNV
=
_Lazy_glProgømP¨amëî4dvNV
;

3354 
PFNGLPROGRAMPARAMETER4FNVPROC
 
	gpglProgømP¨amëî4fNV
=
_Lazy_glProgømP¨amëî4fNV
;

3355 
PFNGLPROGRAMPARAMETER4FVNVPROC
 
	gpglProgømP¨amëî4fvNV
=
_Lazy_glProgømP¨amëî4fvNV
;

3356 
PFNGLPROGRAMPARAMETERS4DVNVPROC
 
	gpglProgømP¨amëîs4dvNV
=
_Lazy_glProgømP¨amëîs4dvNV
;

3357 
PFNGLPROGRAMPARAMETERS4FVNVPROC
 
	gpglProgømP¨amëîs4fvNV
=
_Lazy_glProgømP¨amëîs4fvNV
;

3358 
PFNGLREQUESTRESIDENTPROGRAMSNVPROC
 
	gpglReque°ResidítProgømsNV
=
_Lazy_glReque°ResidítProgømsNV
;

3359 
PFNGLTRACKMATRIXNVPROC
 
	gpglTøckM©rixNV
=
_Lazy_glTøckM©rixNV
;

3360 
PFNGLVERTEXATTRIBPOINTERNVPROC
 
	gpglVîãxAâribPoöãrNV
=
_Lazy_glVîãxAâribPoöãrNV
;

3361 
PFNGLVERTEXATTRIB1DNVPROC
 
	gpglVîãxAârib1dNV
=
_Lazy_glVîãxAârib1dNV
;

3362 
PFNGLVERTEXATTRIB1DVNVPROC
 
	gpglVîãxAârib1dvNV
=
_Lazy_glVîãxAârib1dvNV
;

3363 
PFNGLVERTEXATTRIB1FNVPROC
 
	gpglVîãxAârib1fNV
=
_Lazy_glVîãxAârib1fNV
;

3364 
PFNGLVERTEXATTRIB1FVNVPROC
 
	gpglVîãxAârib1fvNV
=
_Lazy_glVîãxAârib1fvNV
;

3365 
PFNGLVERTEXATTRIB1SNVPROC
 
	gpglVîãxAârib1sNV
=
_Lazy_glVîãxAârib1sNV
;

3366 
PFNGLVERTEXATTRIB1SVNVPROC
 
	gpglVîãxAârib1svNV
=
_Lazy_glVîãxAârib1svNV
;

3367 
PFNGLVERTEXATTRIB2DNVPROC
 
	gpglVîãxAârib2dNV
=
_Lazy_glVîãxAârib2dNV
;

3368 
PFNGLVERTEXATTRIB2DVNVPROC
 
	gpglVîãxAârib2dvNV
=
_Lazy_glVîãxAârib2dvNV
;

3369 
PFNGLVERTEXATTRIB2FNVPROC
 
	gpglVîãxAârib2fNV
=
_Lazy_glVîãxAârib2fNV
;

3370 
PFNGLVERTEXATTRIB2FVNVPROC
 
	gpglVîãxAârib2fvNV
=
_Lazy_glVîãxAârib2fvNV
;

3371 
PFNGLVERTEXATTRIB2SNVPROC
 
	gpglVîãxAârib2sNV
=
_Lazy_glVîãxAârib2sNV
;

3372 
PFNGLVERTEXATTRIB2SVNVPROC
 
	gpglVîãxAârib2svNV
=
_Lazy_glVîãxAârib2svNV
;

3373 
PFNGLVERTEXATTRIB3DNVPROC
 
	gpglVîãxAârib3dNV
=
_Lazy_glVîãxAârib3dNV
;

3374 
PFNGLVERTEXATTRIB3DVNVPROC
 
	gpglVîãxAârib3dvNV
=
_Lazy_glVîãxAârib3dvNV
;

3375 
PFNGLVERTEXATTRIB3FNVPROC
 
	gpglVîãxAârib3fNV
=
_Lazy_glVîãxAârib3fNV
;

3376 
PFNGLVERTEXATTRIB3FVNVPROC
 
	gpglVîãxAârib3fvNV
=
_Lazy_glVîãxAârib3fvNV
;

3377 
PFNGLVERTEXATTRIB3SNVPROC
 
	gpglVîãxAârib3sNV
=
_Lazy_glVîãxAârib3sNV
;

3378 
PFNGLVERTEXATTRIB3SVNVPROC
 
	gpglVîãxAârib3svNV
=
_Lazy_glVîãxAârib3svNV
;

3379 
PFNGLVERTEXATTRIB4DNVPROC
 
	gpglVîãxAârib4dNV
=
_Lazy_glVîãxAârib4dNV
;

3380 
PFNGLVERTEXATTRIB4DVNVPROC
 
	gpglVîãxAârib4dvNV
=
_Lazy_glVîãxAârib4dvNV
;

3381 
PFNGLVERTEXATTRIB4FNVPROC
 
	gpglVîãxAârib4fNV
=
_Lazy_glVîãxAârib4fNV
;

3382 
PFNGLVERTEXATTRIB4FVNVPROC
 
	gpglVîãxAârib4fvNV
=
_Lazy_glVîãxAârib4fvNV
;

3383 
PFNGLVERTEXATTRIB4SNVPROC
 
	gpglVîãxAârib4sNV
=
_Lazy_glVîãxAârib4sNV
;

3384 
PFNGLVERTEXATTRIB4SVNVPROC
 
	gpglVîãxAârib4svNV
=
_Lazy_glVîãxAârib4svNV
;

3385 
PFNGLVERTEXATTRIB4UBNVPROC
 
	gpglVîãxAârib4ubNV
=
_Lazy_glVîãxAârib4ubNV
;

3386 
PFNGLVERTEXATTRIB4UBVNVPROC
 
	gpglVîãxAârib4ubvNV
=
_Lazy_glVîãxAârib4ubvNV
;

3387 
PFNGLVERTEXATTRIBS1DVNVPROC
 
	gpglVîãxAâribs1dvNV
=
_Lazy_glVîãxAâribs1dvNV
;

3388 
PFNGLVERTEXATTRIBS1FVNVPROC
 
	gpglVîãxAâribs1fvNV
=
_Lazy_glVîãxAâribs1fvNV
;

3389 
PFNGLVERTEXATTRIBS1SVNVPROC
 
	gpglVîãxAâribs1svNV
=
_Lazy_glVîãxAâribs1svNV
;

3390 
PFNGLVERTEXATTRIBS2DVNVPROC
 
	gpglVîãxAâribs2dvNV
=
_Lazy_glVîãxAâribs2dvNV
;

3391 
PFNGLVERTEXATTRIBS2FVNVPROC
 
	gpglVîãxAâribs2fvNV
=
_Lazy_glVîãxAâribs2fvNV
;

3392 
PFNGLVERTEXATTRIBS2SVNVPROC
 
	gpglVîãxAâribs2svNV
=
_Lazy_glVîãxAâribs2svNV
;

3393 
PFNGLVERTEXATTRIBS3DVNVPROC
 
	gpglVîãxAâribs3dvNV
=
_Lazy_glVîãxAâribs3dvNV
;

3394 
PFNGLVERTEXATTRIBS3FVNVPROC
 
	gpglVîãxAâribs3fvNV
=
_Lazy_glVîãxAâribs3fvNV
;

3395 
PFNGLVERTEXATTRIBS3SVNVPROC
 
	gpglVîãxAâribs3svNV
=
_Lazy_glVîãxAâribs3svNV
;

3396 
PFNGLVERTEXATTRIBS4DVNVPROC
 
	gpglVîãxAâribs4dvNV
=
_Lazy_glVîãxAâribs4dvNV
;

3397 
PFNGLVERTEXATTRIBS4FVNVPROC
 
	gpglVîãxAâribs4fvNV
=
_Lazy_glVîãxAâribs4fvNV
;

3398 
PFNGLVERTEXATTRIBS4SVNVPROC
 
	gpglVîãxAâribs4svNV
=
_Lazy_glVîãxAâribs4svNV
;

3399 
PFNGLVERTEXATTRIBS4UBVNVPROC
 
	gpglVîãxAâribs4ubvNV
=
_Lazy_glVîãxAâribs4ubvNV
;

3404 #ifde‡
__GLEE_GL_SGIX_ãxtuª_co‹dö©e_˛amp


3409 #ifde‡
__GLEE_GL_SGIX_sˇÀbüs_höt


3414 #ifde‡
__GLEE_GL_OML_öãæa˚


3419 #ifde‡
__GLEE_GL_OML_subßm∂e


3424 #ifde‡
__GLEE_GL_OML_ªßm∂e


3429 #ifde‡
__GLEE_GL_NV_c›y_dïth_to_cﬁ‹


3434 #ifde‡
__GLEE_GL_ATI_ívm≠_bumpm≠


3435 
__°dˇŒ
 
	$_Lazy_glTexBumpP¨amëîivATI
(
GLíum
 
≤ame
, c⁄° 
GLöt
 * 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glTexBumpP¨amëîivATI
’«me,Ö¨am);
	}
}

3436 
__°dˇŒ
 
	$_Lazy_glTexBumpP¨amëîfvATI
(
GLíum
 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glTexBumpP¨amëîfvATI
’«me,Ö¨am);
	}
}

3437 
__°dˇŒ
 
	$_Lazy_glGëTexBumpP¨amëîivATI
(
GLíum
 
≤ame
, 
GLöt
 * 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glGëTexBumpP¨amëîivATI
’«me,Ö¨am);
	}
}

3438 
__°dˇŒ
 
	$_Lazy_glGëTexBumpP¨amëîfvATI
(
GLíum
 
≤ame
, 
GLÊﬂt
 * 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glGëTexBumpP¨amëîfvATI
’«me,Ö¨am);
	}
}

3439 
PFNGLTEXBUMPPARAMETERIVATIPROC
 
	gpglTexBumpP¨amëîivATI
=
_Lazy_glTexBumpP¨amëîivATI
;

3440 
PFNGLTEXBUMPPARAMETERFVATIPROC
 
	gpglTexBumpP¨amëîfvATI
=
_Lazy_glTexBumpP¨amëîfvATI
;

3441 
PFNGLGETTEXBUMPPARAMETERIVATIPROC
 
	gpglGëTexBumpP¨amëîivATI
=
_Lazy_glGëTexBumpP¨amëîivATI
;

3442 
PFNGLGETTEXBUMPPARAMETERFVATIPROC
 
	gpglGëTexBumpP¨amëîfvATI
=
_Lazy_glGëTexBumpP¨amëîfvATI
;

3447 #ifde‡
__GLEE_GL_ATI_‰agmít_shadî


3448 
GLuöt
 
__°dˇŒ
 
	$_Lazy_glGíFøgmítShadîsATI
(
GLuöt
 
ønge
Ë{i‡(
	`GLìInô
()Ë 
	`glGíFøgmítShadîsATI
‘™ge);  (GLuöt)0;
	}
}

3449 
__°dˇŒ
 
	$_Lazy_glBödFøgmítShadîATI
(
GLuöt
 
id
Ë{i‡(
	`GLìInô
()Ë
	`glBödFøgmítShadîATI
(id);
	}
}

3450 
__°dˇŒ
 
	$_Lazy_glDñëeFøgmítShadîATI
(
GLuöt
 
id
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeFøgmítShadîATI
(id);
	}
}

3451 
__°dˇŒ
 
	$_Lazy_glBegöFøgmítShadîATI
(Ë{i‡(
	`GLìInô
()Ë
	`glBegöFøgmítShadîATI
();
	}
}

3452 
__°dˇŒ
 
	$_Lazy_glEndFøgmítShadîATI
(Ë{i‡(
	`GLìInô
()Ë
	`glEndFøgmítShadîATI
();
	}
}

3453 
__°dˇŒ
 
	$_Lazy_glPassTexCo‹dATI
(
GLuöt
 
d°
, GLuöà
co‹d
, 
GLíum
 
swizzÀ
Ë{i‡(
	`GLìInô
()Ë
	`glPassTexCo‹dATI
(d°, co‹d, swizzÀ);
	}
}

3454 
__°dˇŒ
 
	$_Lazy_glSam∂eM≠ATI
(
GLuöt
 
d°
, GLuöà
öãΩ
, 
GLíum
 
swizzÀ
Ë{i‡(
	`GLìInô
()Ë
	`glSam∂eM≠ATI
(d°, i¡îp, swizzÀ);
	}
}

3455 
__°dˇŒ
 
	$_Lazy_glCﬁ‹FøgmítOp1ATI
(
GLíum
 
›
, 
GLuöt
 
d°
, GLuöà
d°Mask
, GLuöà
d°Mod
, GLuöà
¨g1
, GLuöà
¨g1Rï
, GLuöà
¨g1Mod
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹FøgmítOp1ATI
(›, d°, d°Mask, d°Mod,árg1,árg1Rï,árg1Mod);
	}
}

3456 
__°dˇŒ
 
	$_Lazy_glCﬁ‹FøgmítOp2ATI
(
GLíum
 
›
, 
GLuöt
 
d°
, GLuöà
d°Mask
, GLuöà
d°Mod
, GLuöà
¨g1
, GLuöà
¨g1Rï
, GLuöà
¨g1Mod
, GLuöà
¨g2
, GLuöà
¨g2Rï
, GLuöà
¨g2Mod
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹FøgmítOp2ATI
(›, d°, d°Mask, d°Mod,árg1,árg1Rï,árg1Mod,árg2,árg2Rï,árg2Mod);
	}
}

3457 
__°dˇŒ
 
	$_Lazy_glCﬁ‹FøgmítOp3ATI
(
GLíum
 
›
, 
GLuöt
 
d°
, GLuöà
d°Mask
, GLuöà
d°Mod
, GLuöà
¨g1
, GLuöà
¨g1Rï
, GLuöà
¨g1Mod
, GLuöà
¨g2
, GLuöà
¨g2Rï
, GLuöà
¨g2Mod
, GLuöà
¨g3
, GLuöà
¨g3Rï
, GLuöà
¨g3Mod
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹FøgmítOp3ATI
(›, d°, d°Mask, d°Mod,árg1,árg1Rï,árg1Mod,árg2,árg2Rï,árg2Mod,árg3,árg3Rï,árg3Mod);
	}
}

3458 
__°dˇŒ
 
	$_Lazy_glAÕhaFøgmítOp1ATI
(
GLíum
 
›
, 
GLuöt
 
d°
, GLuöà
d°Mod
, GLuöà
¨g1
, GLuöà
¨g1Rï
, GLuöà
¨g1Mod
Ë{i‡(
	`GLìInô
()Ë
	`glAÕhaFøgmítOp1ATI
(›, d°, d°Mod,árg1,árg1Rï,árg1Mod);
	}
}

3459 
__°dˇŒ
 
	$_Lazy_glAÕhaFøgmítOp2ATI
(
GLíum
 
›
, 
GLuöt
 
d°
, GLuöà
d°Mod
, GLuöà
¨g1
, GLuöà
¨g1Rï
, GLuöà
¨g1Mod
, GLuöà
¨g2
, GLuöà
¨g2Rï
, GLuöà
¨g2Mod
Ë{i‡(
	`GLìInô
()Ë
	`glAÕhaFøgmítOp2ATI
(›, d°, d°Mod,árg1,árg1Rï,árg1Mod,árg2,árg2Rï,árg2Mod);
	}
}

3460 
__°dˇŒ
 
	$_Lazy_glAÕhaFøgmítOp3ATI
(
GLíum
 
›
, 
GLuöt
 
d°
, GLuöà
d°Mod
, GLuöà
¨g1
, GLuöà
¨g1Rï
, GLuöà
¨g1Mod
, GLuöà
¨g2
, GLuöà
¨g2Rï
, GLuöà
¨g2Mod
, GLuöà
¨g3
, GLuöà
¨g3Rï
, GLuöà
¨g3Mod
Ë{i‡(
	`GLìInô
()Ë
	`glAÕhaFøgmítOp3ATI
(›, d°, d°Mod,árg1,árg1Rï,árg1Mod,árg2,árg2Rï,árg2Mod,árg3,árg3Rï,árg3Mod);
	}
}

3461 
__°dˇŒ
 
	$_Lazy_glSëFøgmítShadîC⁄°™tATI
(
GLuöt
 
d°
, c⁄° 
GLÊﬂt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glSëFøgmítShadîC⁄°™tATI
(d°, vÆue);
	}
}

3462 
PFNGLGENFRAGMENTSHADERSATIPROC
 
	gpglGíFøgmítShadîsATI
=
_Lazy_glGíFøgmítShadîsATI
;

3463 
PFNGLBINDFRAGMENTSHADERATIPROC
 
	gpglBödFøgmítShadîATI
=
_Lazy_glBödFøgmítShadîATI
;

3464 
PFNGLDELETEFRAGMENTSHADERATIPROC
 
	gpglDñëeFøgmítShadîATI
=
_Lazy_glDñëeFøgmítShadîATI
;

3465 
PFNGLBEGINFRAGMENTSHADERATIPROC
 
	gpglBegöFøgmítShadîATI
=
_Lazy_glBegöFøgmítShadîATI
;

3466 
PFNGLENDFRAGMENTSHADERATIPROC
 
	gpglEndFøgmítShadîATI
=
_Lazy_glEndFøgmítShadîATI
;

3467 
PFNGLPASSTEXCOORDATIPROC
 
	gpglPassTexCo‹dATI
=
_Lazy_glPassTexCo‹dATI
;

3468 
PFNGLSAMPLEMAPATIPROC
 
	gpglSam∂eM≠ATI
=
_Lazy_glSam∂eM≠ATI
;

3469 
PFNGLCOLORFRAGMENTOP1ATIPROC
 
	gpglCﬁ‹FøgmítOp1ATI
=
_Lazy_glCﬁ‹FøgmítOp1ATI
;

3470 
PFNGLCOLORFRAGMENTOP2ATIPROC
 
	gpglCﬁ‹FøgmítOp2ATI
=
_Lazy_glCﬁ‹FøgmítOp2ATI
;

3471 
PFNGLCOLORFRAGMENTOP3ATIPROC
 
	gpglCﬁ‹FøgmítOp3ATI
=
_Lazy_glCﬁ‹FøgmítOp3ATI
;

3472 
PFNGLALPHAFRAGMENTOP1ATIPROC
 
	gpglAÕhaFøgmítOp1ATI
=
_Lazy_glAÕhaFøgmítOp1ATI
;

3473 
PFNGLALPHAFRAGMENTOP2ATIPROC
 
	gpglAÕhaFøgmítOp2ATI
=
_Lazy_glAÕhaFøgmítOp2ATI
;

3474 
PFNGLALPHAFRAGMENTOP3ATIPROC
 
	gpglAÕhaFøgmítOp3ATI
=
_Lazy_glAÕhaFøgmítOp3ATI
;

3475 
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC
 
	gpglSëFøgmítShadîC⁄°™tATI
=
_Lazy_glSëFøgmítShadîC⁄°™tATI
;

3480 #ifde‡
__GLEE_GL_ATI_≤_åüngÀs


3481 
__°dˇŒ
 
	$_Lazy_glPNTrüngÀsiATI
(
GLíum
 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glPNTrüngÀsiATI
’«me,Ö¨am);
	}
}

3482 
__°dˇŒ
 
	$_Lazy_glPNTrüngÀsfATI
(
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glPNTrüngÀsfATI
’«me,Ö¨am);
	}
}

3483 
PFNGLPNTRIANGLESIATIPROC
 
	gpglPNTrüngÀsiATI
=
_Lazy_glPNTrüngÀsiATI
;

3484 
PFNGLPNTRIANGLESFATIPROC
 
	gpglPNTrüngÀsfATI
=
_Lazy_glPNTrüngÀsfATI
;

3489 #ifde‡
__GLEE_GL_ATI_vîãx_¨øy_obje˘


3490 
GLuöt
 
__°dˇŒ
 
	$_Lazy_glNewObje˘Buf„rATI
(
GLsizei
 
size
, c⁄° 
GLvoid
 * 
poöãr
, 
GLíum
 
ußge
Ë{i‡(
	`GLìInô
()Ë 
	`glNewObje˘Buf„rATI
(size,Öoöãr, ußge);  (
GLuöt
)0;
	}
}

3491 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsObje˘Buf„rATI
(
GLuöt
 
buf„r
Ë{i‡(
	`GLìInô
()Ë 
	`glIsObje˘Buf„rATI
(buf„r);  (
GLboﬁón
)0;
	}
}

3492 
__°dˇŒ
 
	$_Lazy_glUpd©eObje˘Buf„rATI
(
GLuöt
 
buf„r
, GLuöà
off£t
, 
GLsizei
 
size
, c⁄° 
GLvoid
 * 
poöãr
, 
GLíum
 
¥e£rve
Ë{i‡(
	`GLìInô
()Ë
	`glUpd©eObje˘Buf„rATI
(buf„r, off£t, size,Öoöãr,Öª£rve);
	}
}

3493 
__°dˇŒ
 
	$_Lazy_glGëObje˘Buf„rfvATI
(
GLuöt
 
buf„r
, 
GLíum
 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëObje˘Buf„rfvATI
(buf„r,Ö«me,Ö¨ams);
	}
}

3494 
__°dˇŒ
 
	$_Lazy_glGëObje˘Buf„rivATI
(
GLuöt
 
buf„r
, 
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëObje˘Buf„rivATI
(buf„r,Ö«me,Ö¨ams);
	}
}

3495 
__°dˇŒ
 
	$_Lazy_glFªeObje˘Buf„rATI
(
GLuöt
 
buf„r
Ë{i‡(
	`GLìInô
()Ë
	`glFªeObje˘Buf„rATI
(buf„r);
	}
}

3496 
__°dˇŒ
 
	$_Lazy_glAºayObje˘ATI
(
GLíum
 
¨øy
, 
GLöt
 
size
, GLíum 
ty≥
, 
GLsizei
 
°ride
, 
GLuöt
 
buf„r
, GLuöà
off£t
Ë{i‡(
	`GLìInô
()Ë
	`glAºayObje˘ATI
◊ºay, size,Åy≥, såide, buf„r, off£t);
	}
}

3497 
__°dˇŒ
 
	$_Lazy_glGëAºayObje˘fvATI
(
GLíum
 
¨øy
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëAºayObje˘fvATI
◊ºay,Ö«me,Ö¨ams);
	}
}

3498 
__°dˇŒ
 
	$_Lazy_glGëAºayObje˘ivATI
(
GLíum
 
¨øy
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëAºayObje˘ivATI
◊ºay,Ö«me,Ö¨ams);
	}
}

3499 
__°dˇŒ
 
	$_Lazy_glV¨ü¡AºayObje˘ATI
(
GLuöt
 
id
, 
GLíum
 
ty≥
, 
GLsizei
 
°ride
, GLuöà
buf„r
, GLuöà
off£t
Ë{i‡(
	`GLìInô
()Ë
	`glV¨ü¡AºayObje˘ATI
(id,Åy≥, såide, buf„r, off£t);
	}
}

3500 
__°dˇŒ
 
	$_Lazy_glGëV¨ü¡AºayObje˘fvATI
(
GLuöt
 
id
, 
GLíum
 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëV¨ü¡AºayObje˘fvATI
(id,Ö«me,Ö¨ams);
	}
}

3501 
__°dˇŒ
 
	$_Lazy_glGëV¨ü¡AºayObje˘ivATI
(
GLuöt
 
id
, 
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëV¨ü¡AºayObje˘ivATI
(id,Ö«me,Ö¨ams);
	}
}

3502 
PFNGLNEWOBJECTBUFFERATIPROC
 
	gpglNewObje˘Buf„rATI
=
_Lazy_glNewObje˘Buf„rATI
;

3503 
PFNGLISOBJECTBUFFERATIPROC
 
	gpglIsObje˘Buf„rATI
=
_Lazy_glIsObje˘Buf„rATI
;

3504 
PFNGLUPDATEOBJECTBUFFERATIPROC
 
	gpglUpd©eObje˘Buf„rATI
=
_Lazy_glUpd©eObje˘Buf„rATI
;

3505 
PFNGLGETOBJECTBUFFERFVATIPROC
 
	gpglGëObje˘Buf„rfvATI
=
_Lazy_glGëObje˘Buf„rfvATI
;

3506 
PFNGLGETOBJECTBUFFERIVATIPROC
 
	gpglGëObje˘Buf„rivATI
=
_Lazy_glGëObje˘Buf„rivATI
;

3507 
PFNGLFREEOBJECTBUFFERATIPROC
 
	gpglFªeObje˘Buf„rATI
=
_Lazy_glFªeObje˘Buf„rATI
;

3508 
PFNGLARRAYOBJECTATIPROC
 
	gpglAºayObje˘ATI
=
_Lazy_glAºayObje˘ATI
;

3509 
PFNGLGETARRAYOBJECTFVATIPROC
 
	gpglGëAºayObje˘fvATI
=
_Lazy_glGëAºayObje˘fvATI
;

3510 
PFNGLGETARRAYOBJECTIVATIPROC
 
	gpglGëAºayObje˘ivATI
=
_Lazy_glGëAºayObje˘ivATI
;

3511 
PFNGLVARIANTARRAYOBJECTATIPROC
 
	gpglV¨ü¡AºayObje˘ATI
=
_Lazy_glV¨ü¡AºayObje˘ATI
;

3512 
PFNGLGETVARIANTARRAYOBJECTFVATIPROC
 
	gpglGëV¨ü¡AºayObje˘fvATI
=
_Lazy_glGëV¨ü¡AºayObje˘fvATI
;

3513 
PFNGLGETVARIANTARRAYOBJECTIVATIPROC
 
	gpglGëV¨ü¡AºayObje˘ivATI
=
_Lazy_glGëV¨ü¡AºayObje˘ivATI
;

3518 #ifde‡
__GLEE_GL_EXT_vîãx_shadî


3519 
__°dˇŒ
 
	$_Lazy_glBegöVîãxShadîEXT
(Ë{i‡(
	`GLìInô
()Ë
	`glBegöVîãxShadîEXT
();
	}
}

3520 
__°dˇŒ
 
	$_Lazy_glEndVîãxShadîEXT
(Ë{i‡(
	`GLìInô
()Ë
	`glEndVîãxShadîEXT
();
	}
}

3521 
__°dˇŒ
 
	$_Lazy_glBödVîãxShadîEXT
(
GLuöt
 
id
Ë{i‡(
	`GLìInô
()Ë
	`glBödVîãxShadîEXT
(id);
	}
}

3522 
GLuöt
 
__°dˇŒ
 
	$_Lazy_glGíVîãxShadîsEXT
(
GLuöt
 
ønge
Ë{i‡(
	`GLìInô
()Ë 
	`glGíVîãxShadîsEXT
‘™ge);  (GLuöt)0;
	}
}

3523 
__°dˇŒ
 
	$_Lazy_glDñëeVîãxShadîEXT
(
GLuöt
 
id
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeVîãxShadîEXT
(id);
	}
}

3524 
__°dˇŒ
 
	$_Lazy_glShadîOp1EXT
(
GLíum
 
›
, 
GLuöt
 
ªs
, GLuöà
¨g1
Ë{i‡(
	`GLìInô
()Ë
	`glShadîOp1EXT
(›,Ñes,árg1);
	}
}

3525 
__°dˇŒ
 
	$_Lazy_glShadîOp2EXT
(
GLíum
 
›
, 
GLuöt
 
ªs
, GLuöà
¨g1
, GLuöà
¨g2
Ë{i‡(
	`GLìInô
()Ë
	`glShadîOp2EXT
(›,Ñes,árg1,árg2);
	}
}

3526 
__°dˇŒ
 
	$_Lazy_glShadîOp3EXT
(
GLíum
 
›
, 
GLuöt
 
ªs
, GLuöà
¨g1
, GLuöà
¨g2
, GLuöà
¨g3
Ë{i‡(
	`GLìInô
()Ë
	`glShadîOp3EXT
(›,Ñes,árg1,árg2,árg3);
	}
}

3527 
__°dˇŒ
 
	$_Lazy_glSwizzÀEXT
(
GLuöt
 
ªs
, GLuöà
ö
, 
GLíum
 
outX
, GLíum 
outY
, GLíum 
outZ
, GLíum 
outW
Ë{i‡(
	`GLìInô
()Ë
	`glSwizzÀEXT
‘es, in, outX, outY, outZ, outW);
	}
}

3528 
__°dˇŒ
 
	$_Lazy_glWrôeMaskEXT
(
GLuöt
 
ªs
, GLuöà
ö
, 
GLíum
 
outX
, GLíum 
outY
, GLíum 
outZ
, GLíum 
outW
Ë{i‡(
	`GLìInô
()Ë
	`glWrôeMaskEXT
‘es, in, outX, outY, outZ, outW);
	}
}

3529 
__°dˇŒ
 
	$_Lazy_glIn£πComp⁄ítEXT
(
GLuöt
 
ªs
, GLuöà
§c
, GLuöà
num
Ë{i‡(
	`GLìInô
()Ë
	`glIn£πComp⁄ítEXT
‘es, src,Çum);
	}
}

3530 
__°dˇŒ
 
	$_Lazy_glExåa˘Comp⁄ítEXT
(
GLuöt
 
ªs
, GLuöà
§c
, GLuöà
num
Ë{i‡(
	`GLìInô
()Ë
	`glExåa˘Comp⁄ítEXT
‘es, src,Çum);
	}
}

3531 
GLuöt
 
__°dˇŒ
 
	$_Lazy_glGíSymbﬁsEXT
(
GLíum
 
d©©y≥
, GLíum 
°‹agëy≥
, GLíum 
ønge
, 
GLuöt
 
comp⁄íts
Ë{i‡(
	`GLìInô
()Ë 
	`glGíSymbﬁsEXT
(d©©y≥, st‹agëy≥,Ñ™ge, comp⁄íts);  (GLuöt)0;
	}
}

3532 
__°dˇŒ
 
	$_Lazy_glSëInv¨ü¡EXT
(
GLuöt
 
id
, 
GLíum
 
ty≥
, c⁄° 
GLvoid
 * 
addr
Ë{i‡(
	`GLìInô
()Ë
	`glSëInv¨ü¡EXT
(id,Åy≥,áddr);
	}
}

3533 
__°dˇŒ
 
	$_Lazy_glSëLoˇlC⁄°™tEXT
(
GLuöt
 
id
, 
GLíum
 
ty≥
, c⁄° 
GLvoid
 * 
addr
Ë{i‡(
	`GLìInô
()Ë
	`glSëLoˇlC⁄°™tEXT
(id,Åy≥,áddr);
	}
}

3534 
__°dˇŒ
 
	$_Lazy_glV¨ü¡bvEXT
(
GLuöt
 
id
, c⁄° 
GLbyã
 * 
addr
Ë{i‡(
	`GLìInô
()Ë
	`glV¨ü¡bvEXT
(id,áddr);
	}
}

3535 
__°dˇŒ
 
	$_Lazy_glV¨ü¡svEXT
(
GLuöt
 
id
, c⁄° 
GLsh‹t
 * 
addr
Ë{i‡(
	`GLìInô
()Ë
	`glV¨ü¡svEXT
(id,áddr);
	}
}

3536 
__°dˇŒ
 
	$_Lazy_glV¨ü¡ivEXT
(
GLuöt
 
id
, c⁄° 
GLöt
 * 
addr
Ë{i‡(
	`GLìInô
()Ë
	`glV¨ü¡ivEXT
(id,áddr);
	}
}

3537 
__°dˇŒ
 
	$_Lazy_glV¨ü¡fvEXT
(
GLuöt
 
id
, c⁄° 
GLÊﬂt
 * 
addr
Ë{i‡(
	`GLìInô
()Ë
	`glV¨ü¡fvEXT
(id,áddr);
	}
}

3538 
__°dˇŒ
 
	$_Lazy_glV¨ü¡dvEXT
(
GLuöt
 
id
, c⁄° 
GLdoubÀ
 * 
addr
Ë{i‡(
	`GLìInô
()Ë
	`glV¨ü¡dvEXT
(id,áddr);
	}
}

3539 
__°dˇŒ
 
	$_Lazy_glV¨ü¡ubvEXT
(
GLuöt
 
id
, c⁄° 
GLubyã
 * 
addr
Ë{i‡(
	`GLìInô
()Ë
	`glV¨ü¡ubvEXT
(id,áddr);
	}
}

3540 
__°dˇŒ
 
	$_Lazy_glV¨ü¡usvEXT
(
GLuöt
 
id
, c⁄° 
GLush‹t
 * 
addr
Ë{i‡(
	`GLìInô
()Ë
	`glV¨ü¡usvEXT
(id,áddr);
	}
}

3541 
__°dˇŒ
 
	$_Lazy_glV¨ü¡uivEXT
(
GLuöt
 
id
, c⁄° GLuöà* 
addr
Ë{i‡(
	`GLìInô
()Ë
	`glV¨ü¡uivEXT
(id,áddr);
	}
}

3542 
__°dˇŒ
 
	$_Lazy_glV¨ü¡PoöãrEXT
(
GLuöt
 
id
, 
GLíum
 
ty≥
, GLuöà
°ride
, c⁄° 
GLvoid
 * 
addr
Ë{i‡(
	`GLìInô
()Ë
	`glV¨ü¡PoöãrEXT
(id,Åy≥, såide,áddr);
	}
}

3543 
__°dˇŒ
 
	$_Lazy_glE«bÀV¨ü¡Clõ¡SèãEXT
(
GLuöt
 
id
Ë{i‡(
	`GLìInô
()Ë
	`glE«bÀV¨ü¡Clõ¡SèãEXT
(id);
	}
}

3544 
__°dˇŒ
 
	$_Lazy_glDißbÀV¨ü¡Clõ¡SèãEXT
(
GLuöt
 
id
Ë{i‡(
	`GLìInô
()Ë
	`glDißbÀV¨ü¡Clõ¡SèãEXT
(id);
	}
}

3545 
GLuöt
 
__°dˇŒ
 
	$_Lazy_glBödLightP¨amëîEXT
(
GLíum
 
light
, GLíum 
vÆue
Ë{i‡(
	`GLìInô
()Ë 
	`glBödLightP¨amëîEXT
÷ight, vÆue);  (
GLuöt
)0;
	}
}

3546 
GLuöt
 
__°dˇŒ
 
	$_Lazy_glBödM©îülP¨amëîEXT
(
GLíum
 
Á˚
, GLíum 
vÆue
Ë{i‡(
	`GLìInô
()Ë 
	`glBödM©îülP¨amëîEXT
(Á˚, vÆue);  (
GLuöt
)0;
	}
}

3547 
GLuöt
 
__°dˇŒ
 
	$_Lazy_glBödTexGíP¨amëîEXT
(
GLíum
 
unô
, GLíum 
co‹d
, GLíum 
vÆue
Ë{i‡(
	`GLìInô
()Ë 
	`glBödTexGíP¨amëîEXT
(unô, co‹d, vÆue);  (
GLuöt
)0;
	}
}

3548 
GLuöt
 
__°dˇŒ
 
	$_Lazy_glBödTextuªUnôP¨amëîEXT
(
GLíum
 
unô
, GLíum 
vÆue
Ë{i‡(
	`GLìInô
()Ë 
	`glBödTextuªUnôP¨amëîEXT
(unô, vÆue);  (
GLuöt
)0;
	}
}

3549 
GLuöt
 
__°dˇŒ
 
	$_Lazy_glBödP¨amëîEXT
(
GLíum
 
vÆue
Ë{i‡(
	`GLìInô
()Ë 
	`glBödP¨amëîEXT
(vÆue);  (
GLuöt
)0;
	}
}

3550 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsV¨ü¡E«bÀdEXT
(
GLuöt
 
id
, 
GLíum
 
ˇp
Ë{i‡(
	`GLìInô
()Ë 
	`glIsV¨ü¡E«bÀdEXT
(id, c≠);  (
GLboﬁón
)0;
	}
}

3551 
__°dˇŒ
 
	$_Lazy_glGëV¨ü¡BoﬁónvEXT
(
GLuöt
 
id
, 
GLíum
 
vÆue
, 
GLboﬁón
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glGëV¨ü¡BoﬁónvEXT
(id, vÆue, d©a);
	}
}

3552 
__°dˇŒ
 
	$_Lazy_glGëV¨ü¡I¡egîvEXT
(
GLuöt
 
id
, 
GLíum
 
vÆue
, 
GLöt
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glGëV¨ü¡I¡egîvEXT
(id, vÆue, d©a);
	}
}

3553 
__°dˇŒ
 
	$_Lazy_glGëV¨ü¡FlﬂtvEXT
(
GLuöt
 
id
, 
GLíum
 
vÆue
, 
GLÊﬂt
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glGëV¨ü¡FlﬂtvEXT
(id, vÆue, d©a);
	}
}

3554 
__°dˇŒ
 
	$_Lazy_glGëV¨ü¡PoöãrvEXT
(
GLuöt
 
id
, 
GLíum
 
vÆue
, 
GLvoid
* * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glGëV¨ü¡PoöãrvEXT
(id, vÆue, d©a);
	}
}

3555 
__°dˇŒ
 
	$_Lazy_glGëInv¨ü¡BoﬁónvEXT
(
GLuöt
 
id
, 
GLíum
 
vÆue
, 
GLboﬁón
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glGëInv¨ü¡BoﬁónvEXT
(id, vÆue, d©a);
	}
}

3556 
__°dˇŒ
 
	$_Lazy_glGëInv¨ü¡I¡egîvEXT
(
GLuöt
 
id
, 
GLíum
 
vÆue
, 
GLöt
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glGëInv¨ü¡I¡egîvEXT
(id, vÆue, d©a);
	}
}

3557 
__°dˇŒ
 
	$_Lazy_glGëInv¨ü¡FlﬂtvEXT
(
GLuöt
 
id
, 
GLíum
 
vÆue
, 
GLÊﬂt
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glGëInv¨ü¡FlﬂtvEXT
(id, vÆue, d©a);
	}
}

3558 
__°dˇŒ
 
	$_Lazy_glGëLoˇlC⁄°™tBoﬁónvEXT
(
GLuöt
 
id
, 
GLíum
 
vÆue
, 
GLboﬁón
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glGëLoˇlC⁄°™tBoﬁónvEXT
(id, vÆue, d©a);
	}
}

3559 
__°dˇŒ
 
	$_Lazy_glGëLoˇlC⁄°™tI¡egîvEXT
(
GLuöt
 
id
, 
GLíum
 
vÆue
, 
GLöt
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glGëLoˇlC⁄°™tI¡egîvEXT
(id, vÆue, d©a);
	}
}

3560 
__°dˇŒ
 
	$_Lazy_glGëLoˇlC⁄°™tFlﬂtvEXT
(
GLuöt
 
id
, 
GLíum
 
vÆue
, 
GLÊﬂt
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glGëLoˇlC⁄°™tFlﬂtvEXT
(id, vÆue, d©a);
	}
}

3561 
PFNGLBEGINVERTEXSHADEREXTPROC
 
	gpglBegöVîãxShadîEXT
=
_Lazy_glBegöVîãxShadîEXT
;

3562 
PFNGLENDVERTEXSHADEREXTPROC
 
	gpglEndVîãxShadîEXT
=
_Lazy_glEndVîãxShadîEXT
;

3563 
PFNGLBINDVERTEXSHADEREXTPROC
 
	gpglBödVîãxShadîEXT
=
_Lazy_glBödVîãxShadîEXT
;

3564 
PFNGLGENVERTEXSHADERSEXTPROC
 
	gpglGíVîãxShadîsEXT
=
_Lazy_glGíVîãxShadîsEXT
;

3565 
PFNGLDELETEVERTEXSHADEREXTPROC
 
	gpglDñëeVîãxShadîEXT
=
_Lazy_glDñëeVîãxShadîEXT
;

3566 
PFNGLSHADEROP1EXTPROC
 
	gpglShadîOp1EXT
=
_Lazy_glShadîOp1EXT
;

3567 
PFNGLSHADEROP2EXTPROC
 
	gpglShadîOp2EXT
=
_Lazy_glShadîOp2EXT
;

3568 
PFNGLSHADEROP3EXTPROC
 
	gpglShadîOp3EXT
=
_Lazy_glShadîOp3EXT
;

3569 
PFNGLSWIZZLEEXTPROC
 
	gpglSwizzÀEXT
=
_Lazy_glSwizzÀEXT
;

3570 
PFNGLWRITEMASKEXTPROC
 
	gpglWrôeMaskEXT
=
_Lazy_glWrôeMaskEXT
;

3571 
PFNGLINSERTCOMPONENTEXTPROC
 
	gpglIn£πComp⁄ítEXT
=
_Lazy_glIn£πComp⁄ítEXT
;

3572 
PFNGLEXTRACTCOMPONENTEXTPROC
 
	gpglExåa˘Comp⁄ítEXT
=
_Lazy_glExåa˘Comp⁄ítEXT
;

3573 
PFNGLGENSYMBOLSEXTPROC
 
	gpglGíSymbﬁsEXT
=
_Lazy_glGíSymbﬁsEXT
;

3574 
PFNGLSETINVARIANTEXTPROC
 
	gpglSëInv¨ü¡EXT
=
_Lazy_glSëInv¨ü¡EXT
;

3575 
PFNGLSETLOCALCONSTANTEXTPROC
 
	gpglSëLoˇlC⁄°™tEXT
=
_Lazy_glSëLoˇlC⁄°™tEXT
;

3576 
PFNGLVARIANTBVEXTPROC
 
	gpglV¨ü¡bvEXT
=
_Lazy_glV¨ü¡bvEXT
;

3577 
PFNGLVARIANTSVEXTPROC
 
	gpglV¨ü¡svEXT
=
_Lazy_glV¨ü¡svEXT
;

3578 
PFNGLVARIANTIVEXTPROC
 
	gpglV¨ü¡ivEXT
=
_Lazy_glV¨ü¡ivEXT
;

3579 
PFNGLVARIANTFVEXTPROC
 
	gpglV¨ü¡fvEXT
=
_Lazy_glV¨ü¡fvEXT
;

3580 
PFNGLVARIANTDVEXTPROC
 
	gpglV¨ü¡dvEXT
=
_Lazy_glV¨ü¡dvEXT
;

3581 
PFNGLVARIANTUBVEXTPROC
 
	gpglV¨ü¡ubvEXT
=
_Lazy_glV¨ü¡ubvEXT
;

3582 
PFNGLVARIANTUSVEXTPROC
 
	gpglV¨ü¡usvEXT
=
_Lazy_glV¨ü¡usvEXT
;

3583 
PFNGLVARIANTUIVEXTPROC
 
	gpglV¨ü¡uivEXT
=
_Lazy_glV¨ü¡uivEXT
;

3584 
PFNGLVARIANTPOINTEREXTPROC
 
	gpglV¨ü¡PoöãrEXT
=
_Lazy_glV¨ü¡PoöãrEXT
;

3585 
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC
 
	gpglE«bÀV¨ü¡Clõ¡SèãEXT
=
_Lazy_glE«bÀV¨ü¡Clõ¡SèãEXT
;

3586 
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC
 
	gpglDißbÀV¨ü¡Clõ¡SèãEXT
=
_Lazy_glDißbÀV¨ü¡Clõ¡SèãEXT
;

3587 
PFNGLBINDLIGHTPARAMETEREXTPROC
 
	gpglBödLightP¨amëîEXT
=
_Lazy_glBödLightP¨amëîEXT
;

3588 
PFNGLBINDMATERIALPARAMETEREXTPROC
 
	gpglBödM©îülP¨amëîEXT
=
_Lazy_glBödM©îülP¨amëîEXT
;

3589 
PFNGLBINDTEXGENPARAMETEREXTPROC
 
	gpglBödTexGíP¨amëîEXT
=
_Lazy_glBödTexGíP¨amëîEXT
;

3590 
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC
 
	gpglBödTextuªUnôP¨amëîEXT
=
_Lazy_glBödTextuªUnôP¨amëîEXT
;

3591 
PFNGLBINDPARAMETEREXTPROC
 
	gpglBödP¨amëîEXT
=
_Lazy_glBödP¨amëîEXT
;

3592 
PFNGLISVARIANTENABLEDEXTPROC
 
	gpglIsV¨ü¡E«bÀdEXT
=
_Lazy_glIsV¨ü¡E«bÀdEXT
;

3593 
PFNGLGETVARIANTBOOLEANVEXTPROC
 
	gpglGëV¨ü¡BoﬁónvEXT
=
_Lazy_glGëV¨ü¡BoﬁónvEXT
;

3594 
PFNGLGETVARIANTINTEGERVEXTPROC
 
	gpglGëV¨ü¡I¡egîvEXT
=
_Lazy_glGëV¨ü¡I¡egîvEXT
;

3595 
PFNGLGETVARIANTFLOATVEXTPROC
 
	gpglGëV¨ü¡FlﬂtvEXT
=
_Lazy_glGëV¨ü¡FlﬂtvEXT
;

3596 
PFNGLGETVARIANTPOINTERVEXTPROC
 
	gpglGëV¨ü¡PoöãrvEXT
=
_Lazy_glGëV¨ü¡PoöãrvEXT
;

3597 
PFNGLGETINVARIANTBOOLEANVEXTPROC
 
	gpglGëInv¨ü¡BoﬁónvEXT
=
_Lazy_glGëInv¨ü¡BoﬁónvEXT
;

3598 
PFNGLGETINVARIANTINTEGERVEXTPROC
 
	gpglGëInv¨ü¡I¡egîvEXT
=
_Lazy_glGëInv¨ü¡I¡egîvEXT
;

3599 
PFNGLGETINVARIANTFLOATVEXTPROC
 
	gpglGëInv¨ü¡FlﬂtvEXT
=
_Lazy_glGëInv¨ü¡FlﬂtvEXT
;

3600 
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC
 
	gpglGëLoˇlC⁄°™tBoﬁónvEXT
=
_Lazy_glGëLoˇlC⁄°™tBoﬁónvEXT
;

3601 
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC
 
	gpglGëLoˇlC⁄°™tI¡egîvEXT
=
_Lazy_glGëLoˇlC⁄°™tI¡egîvEXT
;

3602 
PFNGLGETLOCALCONSTANTFLOATVEXTPROC
 
	gpglGëLoˇlC⁄°™tFlﬂtvEXT
=
_Lazy_glGëLoˇlC⁄°™tFlﬂtvEXT
;

3607 #ifde‡
__GLEE_GL_ATI_vîãx_°ªams


3608 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm1sATI
(
GLíum
 
°ªam
, 
GLsh‹t
 
x
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm1sATI
(°ªam, x);
	}
}

3609 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm1svATI
(
GLíum
 
°ªam
, c⁄° 
GLsh‹t
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm1svATI
(°ªam, co‹ds);
	}
}

3610 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm1iATI
(
GLíum
 
°ªam
, 
GLöt
 
x
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm1iATI
(°ªam, x);
	}
}

3611 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm1ivATI
(
GLíum
 
°ªam
, c⁄° 
GLöt
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm1ivATI
(°ªam, co‹ds);
	}
}

3612 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm1fATI
(
GLíum
 
°ªam
, 
GLÊﬂt
 
x
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm1fATI
(°ªam, x);
	}
}

3613 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm1fvATI
(
GLíum
 
°ªam
, c⁄° 
GLÊﬂt
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm1fvATI
(°ªam, co‹ds);
	}
}

3614 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm1dATI
(
GLíum
 
°ªam
, 
GLdoubÀ
 
x
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm1dATI
(°ªam, x);
	}
}

3615 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm1dvATI
(
GLíum
 
°ªam
, c⁄° 
GLdoubÀ
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm1dvATI
(°ªam, co‹ds);
	}
}

3616 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm2sATI
(
GLíum
 
°ªam
, 
GLsh‹t
 
x
, GLsh‹à
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm2sATI
(°ªam, x, y);
	}
}

3617 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm2svATI
(
GLíum
 
°ªam
, c⁄° 
GLsh‹t
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm2svATI
(°ªam, co‹ds);
	}
}

3618 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm2iATI
(
GLíum
 
°ªam
, 
GLöt
 
x
, GLöà
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm2iATI
(°ªam, x, y);
	}
}

3619 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm2ivATI
(
GLíum
 
°ªam
, c⁄° 
GLöt
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm2ivATI
(°ªam, co‹ds);
	}
}

3620 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm2fATI
(
GLíum
 
°ªam
, 
GLÊﬂt
 
x
, GLÊﬂà
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm2fATI
(°ªam, x, y);
	}
}

3621 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm2fvATI
(
GLíum
 
°ªam
, c⁄° 
GLÊﬂt
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm2fvATI
(°ªam, co‹ds);
	}
}

3622 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm2dATI
(
GLíum
 
°ªam
, 
GLdoubÀ
 
x
, GLdoubÀ 
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm2dATI
(°ªam, x, y);
	}
}

3623 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm2dvATI
(
GLíum
 
°ªam
, c⁄° 
GLdoubÀ
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm2dvATI
(°ªam, co‹ds);
	}
}

3624 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm3sATI
(
GLíum
 
°ªam
, 
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm3sATI
(°ªam, x, y, z);
	}
}

3625 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm3svATI
(
GLíum
 
°ªam
, c⁄° 
GLsh‹t
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm3svATI
(°ªam, co‹ds);
	}
}

3626 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm3iATI
(
GLíum
 
°ªam
, 
GLöt
 
x
, GLöà
y
, GLöà
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm3iATI
(°ªam, x, y, z);
	}
}

3627 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm3ivATI
(
GLíum
 
°ªam
, c⁄° 
GLöt
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm3ivATI
(°ªam, co‹ds);
	}
}

3628 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm3fATI
(
GLíum
 
°ªam
, 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm3fATI
(°ªam, x, y, z);
	}
}

3629 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm3fvATI
(
GLíum
 
°ªam
, c⁄° 
GLÊﬂt
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm3fvATI
(°ªam, co‹ds);
	}
}

3630 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm3dATI
(
GLíum
 
°ªam
, 
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm3dATI
(°ªam, x, y, z);
	}
}

3631 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm3dvATI
(
GLíum
 
°ªam
, c⁄° 
GLdoubÀ
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm3dvATI
(°ªam, co‹ds);
	}
}

3632 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm4sATI
(
GLíum
 
°ªam
, 
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
, GLsh‹à
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm4sATI
(°ªam, x, y, z, w);
	}
}

3633 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm4svATI
(
GLíum
 
°ªam
, c⁄° 
GLsh‹t
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm4svATI
(°ªam, co‹ds);
	}
}

3634 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm4iATI
(
GLíum
 
°ªam
, 
GLöt
 
x
, GLöà
y
, GLöà
z
, GLöà
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm4iATI
(°ªam, x, y, z, w);
	}
}

3635 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm4ivATI
(
GLíum
 
°ªam
, c⁄° 
GLöt
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm4ivATI
(°ªam, co‹ds);
	}
}

3636 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm4fATI
(
GLíum
 
°ªam
, 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
, GLÊﬂà
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm4fATI
(°ªam, x, y, z, w);
	}
}

3637 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm4fvATI
(
GLíum
 
°ªam
, c⁄° 
GLÊﬂt
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm4fvATI
(°ªam, co‹ds);
	}
}

3638 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm4dATI
(
GLíum
 
°ªam
, 
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
, GLdoubÀ 
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm4dATI
(°ªam, x, y, z, w);
	}
}

3639 
__°dˇŒ
 
	$_Lazy_glVîãxSåóm4dvATI
(
GLíum
 
°ªam
, c⁄° 
GLdoubÀ
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxSåóm4dvATI
(°ªam, co‹ds);
	}
}

3640 
__°dˇŒ
 
	$_Lazy_glN‹mÆSåóm3bATI
(
GLíum
 
°ªam
, 
GLbyã
 
nx
, GLbyã 
ny
, GLbyã 
nz
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆSåóm3bATI
(°ªam,Çx,Çy,Çz);
	}
}

3641 
__°dˇŒ
 
	$_Lazy_glN‹mÆSåóm3bvATI
(
GLíum
 
°ªam
, c⁄° 
GLbyã
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆSåóm3bvATI
(°ªam, co‹ds);
	}
}

3642 
__°dˇŒ
 
	$_Lazy_glN‹mÆSåóm3sATI
(
GLíum
 
°ªam
, 
GLsh‹t
 
nx
, GLsh‹à
ny
, GLsh‹à
nz
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆSåóm3sATI
(°ªam,Çx,Çy,Çz);
	}
}

3643 
__°dˇŒ
 
	$_Lazy_glN‹mÆSåóm3svATI
(
GLíum
 
°ªam
, c⁄° 
GLsh‹t
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆSåóm3svATI
(°ªam, co‹ds);
	}
}

3644 
__°dˇŒ
 
	$_Lazy_glN‹mÆSåóm3iATI
(
GLíum
 
°ªam
, 
GLöt
 
nx
, GLöà
ny
, GLöà
nz
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆSåóm3iATI
(°ªam,Çx,Çy,Çz);
	}
}

3645 
__°dˇŒ
 
	$_Lazy_glN‹mÆSåóm3ivATI
(
GLíum
 
°ªam
, c⁄° 
GLöt
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆSåóm3ivATI
(°ªam, co‹ds);
	}
}

3646 
__°dˇŒ
 
	$_Lazy_glN‹mÆSåóm3fATI
(
GLíum
 
°ªam
, 
GLÊﬂt
 
nx
, GLÊﬂà
ny
, GLÊﬂà
nz
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆSåóm3fATI
(°ªam,Çx,Çy,Çz);
	}
}

3647 
__°dˇŒ
 
	$_Lazy_glN‹mÆSåóm3fvATI
(
GLíum
 
°ªam
, c⁄° 
GLÊﬂt
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆSåóm3fvATI
(°ªam, co‹ds);
	}
}

3648 
__°dˇŒ
 
	$_Lazy_glN‹mÆSåóm3dATI
(
GLíum
 
°ªam
, 
GLdoubÀ
 
nx
, GLdoubÀ 
ny
, GLdoubÀ 
nz
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆSåóm3dATI
(°ªam,Çx,Çy,Çz);
	}
}

3649 
__°dˇŒ
 
	$_Lazy_glN‹mÆSåóm3dvATI
(
GLíum
 
°ªam
, c⁄° 
GLdoubÀ
 * 
co‹ds
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆSåóm3dvATI
(°ªam, co‹ds);
	}
}

3650 
__°dˇŒ
 
	$_Lazy_glClõ¡A˘iveVîãxSåómATI
(
GLíum
 
°ªam
Ë{i‡(
	`GLìInô
()Ë
	`glClõ¡A˘iveVîãxSåómATI
(°ªam);
	}
}

3651 
__°dˇŒ
 
	$_Lazy_glVîãxBÀndEnviATI
(
GLíum
 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxBÀndEnviATI
’«me,Ö¨am);
	}
}

3652 
__°dˇŒ
 
	$_Lazy_glVîãxBÀndEnvfATI
(
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxBÀndEnvfATI
’«me,Ö¨am);
	}
}

3653 
PFNGLVERTEXSTREAM1SATIPROC
 
	gpglVîãxSåóm1sATI
=
_Lazy_glVîãxSåóm1sATI
;

3654 
PFNGLVERTEXSTREAM1SVATIPROC
 
	gpglVîãxSåóm1svATI
=
_Lazy_glVîãxSåóm1svATI
;

3655 
PFNGLVERTEXSTREAM1IATIPROC
 
	gpglVîãxSåóm1iATI
=
_Lazy_glVîãxSåóm1iATI
;

3656 
PFNGLVERTEXSTREAM1IVATIPROC
 
	gpglVîãxSåóm1ivATI
=
_Lazy_glVîãxSåóm1ivATI
;

3657 
PFNGLVERTEXSTREAM1FATIPROC
 
	gpglVîãxSåóm1fATI
=
_Lazy_glVîãxSåóm1fATI
;

3658 
PFNGLVERTEXSTREAM1FVATIPROC
 
	gpglVîãxSåóm1fvATI
=
_Lazy_glVîãxSåóm1fvATI
;

3659 
PFNGLVERTEXSTREAM1DATIPROC
 
	gpglVîãxSåóm1dATI
=
_Lazy_glVîãxSåóm1dATI
;

3660 
PFNGLVERTEXSTREAM1DVATIPROC
 
	gpglVîãxSåóm1dvATI
=
_Lazy_glVîãxSåóm1dvATI
;

3661 
PFNGLVERTEXSTREAM2SATIPROC
 
	gpglVîãxSåóm2sATI
=
_Lazy_glVîãxSåóm2sATI
;

3662 
PFNGLVERTEXSTREAM2SVATIPROC
 
	gpglVîãxSåóm2svATI
=
_Lazy_glVîãxSåóm2svATI
;

3663 
PFNGLVERTEXSTREAM2IATIPROC
 
	gpglVîãxSåóm2iATI
=
_Lazy_glVîãxSåóm2iATI
;

3664 
PFNGLVERTEXSTREAM2IVATIPROC
 
	gpglVîãxSåóm2ivATI
=
_Lazy_glVîãxSåóm2ivATI
;

3665 
PFNGLVERTEXSTREAM2FATIPROC
 
	gpglVîãxSåóm2fATI
=
_Lazy_glVîãxSåóm2fATI
;

3666 
PFNGLVERTEXSTREAM2FVATIPROC
 
	gpglVîãxSåóm2fvATI
=
_Lazy_glVîãxSåóm2fvATI
;

3667 
PFNGLVERTEXSTREAM2DATIPROC
 
	gpglVîãxSåóm2dATI
=
_Lazy_glVîãxSåóm2dATI
;

3668 
PFNGLVERTEXSTREAM2DVATIPROC
 
	gpglVîãxSåóm2dvATI
=
_Lazy_glVîãxSåóm2dvATI
;

3669 
PFNGLVERTEXSTREAM3SATIPROC
 
	gpglVîãxSåóm3sATI
=
_Lazy_glVîãxSåóm3sATI
;

3670 
PFNGLVERTEXSTREAM3SVATIPROC
 
	gpglVîãxSåóm3svATI
=
_Lazy_glVîãxSåóm3svATI
;

3671 
PFNGLVERTEXSTREAM3IATIPROC
 
	gpglVîãxSåóm3iATI
=
_Lazy_glVîãxSåóm3iATI
;

3672 
PFNGLVERTEXSTREAM3IVATIPROC
 
	gpglVîãxSåóm3ivATI
=
_Lazy_glVîãxSåóm3ivATI
;

3673 
PFNGLVERTEXSTREAM3FATIPROC
 
	gpglVîãxSåóm3fATI
=
_Lazy_glVîãxSåóm3fATI
;

3674 
PFNGLVERTEXSTREAM3FVATIPROC
 
	gpglVîãxSåóm3fvATI
=
_Lazy_glVîãxSåóm3fvATI
;

3675 
PFNGLVERTEXSTREAM3DATIPROC
 
	gpglVîãxSåóm3dATI
=
_Lazy_glVîãxSåóm3dATI
;

3676 
PFNGLVERTEXSTREAM3DVATIPROC
 
	gpglVîãxSåóm3dvATI
=
_Lazy_glVîãxSåóm3dvATI
;

3677 
PFNGLVERTEXSTREAM4SATIPROC
 
	gpglVîãxSåóm4sATI
=
_Lazy_glVîãxSåóm4sATI
;

3678 
PFNGLVERTEXSTREAM4SVATIPROC
 
	gpglVîãxSåóm4svATI
=
_Lazy_glVîãxSåóm4svATI
;

3679 
PFNGLVERTEXSTREAM4IATIPROC
 
	gpglVîãxSåóm4iATI
=
_Lazy_glVîãxSåóm4iATI
;

3680 
PFNGLVERTEXSTREAM4IVATIPROC
 
	gpglVîãxSåóm4ivATI
=
_Lazy_glVîãxSåóm4ivATI
;

3681 
PFNGLVERTEXSTREAM4FATIPROC
 
	gpglVîãxSåóm4fATI
=
_Lazy_glVîãxSåóm4fATI
;

3682 
PFNGLVERTEXSTREAM4FVATIPROC
 
	gpglVîãxSåóm4fvATI
=
_Lazy_glVîãxSåóm4fvATI
;

3683 
PFNGLVERTEXSTREAM4DATIPROC
 
	gpglVîãxSåóm4dATI
=
_Lazy_glVîãxSåóm4dATI
;

3684 
PFNGLVERTEXSTREAM4DVATIPROC
 
	gpglVîãxSåóm4dvATI
=
_Lazy_glVîãxSåóm4dvATI
;

3685 
PFNGLNORMALSTREAM3BATIPROC
 
	gpglN‹mÆSåóm3bATI
=
_Lazy_glN‹mÆSåóm3bATI
;

3686 
PFNGLNORMALSTREAM3BVATIPROC
 
	gpglN‹mÆSåóm3bvATI
=
_Lazy_glN‹mÆSåóm3bvATI
;

3687 
PFNGLNORMALSTREAM3SATIPROC
 
	gpglN‹mÆSåóm3sATI
=
_Lazy_glN‹mÆSåóm3sATI
;

3688 
PFNGLNORMALSTREAM3SVATIPROC
 
	gpglN‹mÆSåóm3svATI
=
_Lazy_glN‹mÆSåóm3svATI
;

3689 
PFNGLNORMALSTREAM3IATIPROC
 
	gpglN‹mÆSåóm3iATI
=
_Lazy_glN‹mÆSåóm3iATI
;

3690 
PFNGLNORMALSTREAM3IVATIPROC
 
	gpglN‹mÆSåóm3ivATI
=
_Lazy_glN‹mÆSåóm3ivATI
;

3691 
PFNGLNORMALSTREAM3FATIPROC
 
	gpglN‹mÆSåóm3fATI
=
_Lazy_glN‹mÆSåóm3fATI
;

3692 
PFNGLNORMALSTREAM3FVATIPROC
 
	gpglN‹mÆSåóm3fvATI
=
_Lazy_glN‹mÆSåóm3fvATI
;

3693 
PFNGLNORMALSTREAM3DATIPROC
 
	gpglN‹mÆSåóm3dATI
=
_Lazy_glN‹mÆSåóm3dATI
;

3694 
PFNGLNORMALSTREAM3DVATIPROC
 
	gpglN‹mÆSåóm3dvATI
=
_Lazy_glN‹mÆSåóm3dvATI
;

3695 
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC
 
	gpglClõ¡A˘iveVîãxSåómATI
=
_Lazy_glClõ¡A˘iveVîãxSåómATI
;

3696 
PFNGLVERTEXBLENDENVIATIPROC
 
	gpglVîãxBÀndEnviATI
=
_Lazy_glVîãxBÀndEnviATI
;

3697 
PFNGLVERTEXBLENDENVFATIPROC
 
	gpglVîãxBÀndEnvfATI
=
_Lazy_glVîãxBÀndEnvfATI
;

3702 #ifde‡
__GLEE_GL_ATI_ñemít_¨øy


3703 
__°dˇŒ
 
	$_Lazy_glEÀmítPoöãrATI
(
GLíum
 
ty≥
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glEÀmítPoöãrATI
—y≥,Öoöãr);
	}
}

3704 
__°dˇŒ
 
	$_Lazy_glDøwEÀmítAºayATI
(
GLíum
 
mode
, 
GLsizei
 
cou¡
Ë{i‡(
	`GLìInô
()Ë
	`glDøwEÀmítAºayATI
(mode, cou¡);
	}
}

3705 
__°dˇŒ
 
	$_Lazy_glDøwR™geEÀmítAºayATI
(
GLíum
 
mode
, 
GLuöt
 
°¨t
, GLuöà
íd
, 
GLsizei
 
cou¡
Ë{i‡(
	`GLìInô
()Ë
	`glDøwR™geEÀmítAºayATI
(mode, sèπ,Énd, cou¡);
	}
}

3706 
PFNGLELEMENTPOINTERATIPROC
 
	gpglEÀmítPoöãrATI
=
_Lazy_glEÀmítPoöãrATI
;

3707 
PFNGLDRAWELEMENTARRAYATIPROC
 
	gpglDøwEÀmítAºayATI
=
_Lazy_glDøwEÀmítAºayATI
;

3708 
PFNGLDRAWRANGEELEMENTARRAYATIPROC
 
	gpglDøwR™geEÀmítAºayATI
=
_Lazy_glDøwR™geEÀmítAºayATI
;

3713 #ifde‡
__GLEE_GL_SUN_mesh_¨øy


3714 
__°dˇŒ
 
	$_Lazy_glDøwMeshAºaysSUN
(
GLíum
 
mode
, 
GLöt
 
fú°
, 
GLsizei
 
cou¡
, GLsizeò
width
Ë{i‡(
	`GLìInô
()Ë
	`glDøwMeshAºaysSUN
(mode, fú°, cou¡, width);
	}
}

3715 
PFNGLDRAWMESHARRAYSSUNPROC
 
	gpglDøwMeshAºaysSUN
=
_Lazy_glDøwMeshAºaysSUN
;

3720 #ifde‡
__GLEE_GL_SUN_¶i˚_accum


3725 #ifde‡
__GLEE_GL_NV_mu…ißm∂e_fûãr_höt


3730 #ifde‡
__GLEE_GL_NV_dïth_˛amp


3735 #ifde‡
__GLEE_GL_NV_oc˛usi⁄_quîy


3736 
__°dˇŒ
 
	$_Lazy_glGíOc˛usi⁄QuîõsNV
(
GLsizei
 
n
, 
GLuöt
 * 
ids
Ë{i‡(
	`GLìInô
()Ë
	`glGíOc˛usi⁄QuîõsNV
“, ids);
	}
}

3737 
__°dˇŒ
 
	$_Lazy_glDñëeOc˛usi⁄QuîõsNV
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
ids
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeOc˛usi⁄QuîõsNV
“, ids);
	}
}

3738 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsOc˛usi⁄QuîyNV
(
GLuöt
 
id
Ë{i‡(
	`GLìInô
()Ë 
	`glIsOc˛usi⁄QuîyNV
(id);  (
GLboﬁón
)0;
	}
}

3739 
__°dˇŒ
 
	$_Lazy_glBegöOc˛usi⁄QuîyNV
(
GLuöt
 
id
Ë{i‡(
	`GLìInô
()Ë
	`glBegöOc˛usi⁄QuîyNV
(id);
	}
}

3740 
__°dˇŒ
 
	$_Lazy_glEndOc˛usi⁄QuîyNV
(Ë{i‡(
	`GLìInô
()Ë
	`glEndOc˛usi⁄QuîyNV
();
	}
}

3741 
__°dˇŒ
 
	$_Lazy_glGëOc˛usi⁄QuîyivNV
(
GLuöt
 
id
, 
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëOc˛usi⁄QuîyivNV
(id,Ö«me,Ö¨ams);
	}
}

3742 
__°dˇŒ
 
	$_Lazy_glGëOc˛usi⁄QuîyuivNV
(
GLuöt
 
id
, 
GLíum
 
≤ame
, GLuöà* 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëOc˛usi⁄QuîyuivNV
(id,Ö«me,Ö¨ams);
	}
}

3743 
PFNGLGENOCCLUSIONQUERIESNVPROC
 
	gpglGíOc˛usi⁄QuîõsNV
=
_Lazy_glGíOc˛usi⁄QuîõsNV
;

3744 
PFNGLDELETEOCCLUSIONQUERIESNVPROC
 
	gpglDñëeOc˛usi⁄QuîõsNV
=
_Lazy_glDñëeOc˛usi⁄QuîõsNV
;

3745 
PFNGLISOCCLUSIONQUERYNVPROC
 
	gpglIsOc˛usi⁄QuîyNV
=
_Lazy_glIsOc˛usi⁄QuîyNV
;

3746 
PFNGLBEGINOCCLUSIONQUERYNVPROC
 
	gpglBegöOc˛usi⁄QuîyNV
=
_Lazy_glBegöOc˛usi⁄QuîyNV
;

3747 
PFNGLENDOCCLUSIONQUERYNVPROC
 
	gpglEndOc˛usi⁄QuîyNV
=
_Lazy_glEndOc˛usi⁄QuîyNV
;

3748 
PFNGLGETOCCLUSIONQUERYIVNVPROC
 
	gpglGëOc˛usi⁄QuîyivNV
=
_Lazy_glGëOc˛usi⁄QuîyivNV
;

3749 
PFNGLGETOCCLUSIONQUERYUIVNVPROC
 
	gpglGëOc˛usi⁄QuîyuivNV
=
_Lazy_glGëOc˛usi⁄QuîyuivNV
;

3754 #ifde‡
__GLEE_GL_NV_poöt_•rôe


3755 
__°dˇŒ
 
	$_Lazy_glPoötP¨amëîiNV
(
GLíum
 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glPoötP¨amëîiNV
’«me,Ö¨am);
	}
}

3756 
__°dˇŒ
 
	$_Lazy_glPoötP¨amëîivNV
(
GLíum
 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glPoötP¨amëîivNV
’«me,Ö¨ams);
	}
}

3757 
PFNGLPOINTPARAMETERINVPROC
 
	gpglPoötP¨amëîiNV
=
_Lazy_glPoötP¨amëîiNV
;

3758 
PFNGLPOINTPARAMETERIVNVPROC
 
	gpglPoötP¨amëîivNV
=
_Lazy_glPoötP¨amëîivNV
;

3763 #ifde‡
__GLEE_GL_NV_ãxtuª_shadî3


3768 #ifde‡
__GLEE_GL_NV_vîãx_¥ogøm1_1


3773 #ifde‡
__GLEE_GL_EXT_shadow_funcs


3778 #ifde‡
__GLEE_GL_EXT_°ícû_two_side


3779 
__°dˇŒ
 
	$_Lazy_glA˘iveSãncûFa˚EXT
(
GLíum
 
Á˚
Ë{i‡(
	`GLìInô
()Ë
	`glA˘iveSãncûFa˚EXT
(Á˚);
	}
}

3780 
PFNGLACTIVESTENCILFACEEXTPROC
 
	gpglA˘iveSãncûFa˚EXT
=
_Lazy_glA˘iveSãncûFa˚EXT
;

3785 #ifde‡
__GLEE_GL_ATI_ãxt_‰agmít_shadî


3790 #ifde‡
__GLEE_GL_APPLE_˛õ¡_°‹age


3795 #ifde‡
__GLEE_GL_APPLE_ñemít_¨øy


3796 
__°dˇŒ
 
	$_Lazy_glEÀmítPoöãrAPPLE
(
GLíum
 
ty≥
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glEÀmítPoöãrAPPLE
—y≥,Öoöãr);
	}
}

3797 
__°dˇŒ
 
	$_Lazy_glDøwEÀmítAºayAPPLE
(
GLíum
 
mode
, 
GLöt
 
fú°
, 
GLsizei
 
cou¡
Ë{i‡(
	`GLìInô
()Ë
	`glDøwEÀmítAºayAPPLE
(mode, fú°, cou¡);
	}
}

3798 
__°dˇŒ
 
	$_Lazy_glDøwR™geEÀmítAºayAPPLE
(
GLíum
 
mode
, 
GLuöt
 
°¨t
, GLuöà
íd
, 
GLöt
 
fú°
, 
GLsizei
 
cou¡
Ë{i‡(
	`GLìInô
()Ë
	`glDøwR™geEÀmítAºayAPPLE
(mode, sèπ,Énd, fú°, cou¡);
	}
}

3799 
__°dˇŒ
 
	$_Lazy_glMu…iDøwEÀmítAºayAPPLE
(
GLíum
 
mode
, c⁄° 
GLöt
 * 
fú°
, c⁄° 
GLsizei
 * 
cou¡
, GLsizeò
¥imcou¡
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iDøwEÀmítAºayAPPLE
(mode, fú°, cou¡,Örimcou¡);
	}
}

3800 
__°dˇŒ
 
	$_Lazy_glMu…iDøwR™geEÀmítAºayAPPLE
(
GLíum
 
mode
, 
GLuöt
 
°¨t
, GLuöà
íd
, c⁄° 
GLöt
 * 
fú°
, c⁄° 
GLsizei
 * 
cou¡
, GLsizeò
¥imcou¡
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iDøwR™geEÀmítAºayAPPLE
(mode, sèπ,Énd, fú°, cou¡,Örimcou¡);
	}
}

3801 
PFNGLELEMENTPOINTERAPPLEPROC
 
	gpglEÀmítPoöãrAPPLE
=
_Lazy_glEÀmítPoöãrAPPLE
;

3802 
PFNGLDRAWELEMENTARRAYAPPLEPROC
 
	gpglDøwEÀmítAºayAPPLE
=
_Lazy_glDøwEÀmítAºayAPPLE
;

3803 
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC
 
	gpglDøwR™geEÀmítAºayAPPLE
=
_Lazy_glDøwR™geEÀmítAºayAPPLE
;

3804 
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC
 
	gpglMu…iDøwEÀmítAºayAPPLE
=
_Lazy_glMu…iDøwEÀmítAºayAPPLE
;

3805 
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC
 
	gpglMu…iDøwR™geEÀmítAºayAPPLE
=
_Lazy_glMu…iDøwR™geEÀmítAºayAPPLE
;

3810 #ifde‡
__GLEE_GL_APPLE_„n˚


3811 
__°dˇŒ
 
	$_Lazy_glGíFí˚sAPPLE
(
GLsizei
 
n
, 
GLuöt
 * 
„n˚s
Ë{i‡(
	`GLìInô
()Ë
	`glGíFí˚sAPPLE
“, fí˚s);
	}
}

3812 
__°dˇŒ
 
	$_Lazy_glDñëeFí˚sAPPLE
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
„n˚s
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeFí˚sAPPLE
“, fí˚s);
	}
}

3813 
__°dˇŒ
 
	$_Lazy_glSëFí˚APPLE
(
GLuöt
 
„n˚
Ë{i‡(
	`GLìInô
()Ë
	`glSëFí˚APPLE
(„n˚);
	}
}

3814 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsFí˚APPLE
(
GLuöt
 
„n˚
Ë{i‡(
	`GLìInô
()Ë 
	`glIsFí˚APPLE
(„n˚);  (
GLboﬁón
)0;
	}
}

3815 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glTe°Fí˚APPLE
(
GLuöt
 
„n˚
Ë{i‡(
	`GLìInô
()Ë 
	`glTe°Fí˚APPLE
(„n˚);  (
GLboﬁón
)0;
	}
}

3816 
__°dˇŒ
 
	$_Lazy_glFöishFí˚APPLE
(
GLuöt
 
„n˚
Ë{i‡(
	`GLìInô
()Ë
	`glFöishFí˚APPLE
(„n˚);
	}
}

3817 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glTe°Obje˘APPLE
(
GLíum
 
obje˘
, 
GLuöt
 
«me
Ë{i‡(
	`GLìInô
()Ë 
	`glTe°Obje˘APPLE
(obje˘,Çame);  (
GLboﬁón
)0;
	}
}

3818 
__°dˇŒ
 
	$_Lazy_glFöishObje˘APPLE
(
GLíum
 
obje˘
, 
GLöt
 
«me
Ë{i‡(
	`GLìInô
()Ë
	`glFöishObje˘APPLE
(obje˘,Çame);
	}
}

3819 
PFNGLGENFENCESAPPLEPROC
 
	gpglGíFí˚sAPPLE
=
_Lazy_glGíFí˚sAPPLE
;

3820 
PFNGLDELETEFENCESAPPLEPROC
 
	gpglDñëeFí˚sAPPLE
=
_Lazy_glDñëeFí˚sAPPLE
;

3821 
PFNGLSETFENCEAPPLEPROC
 
	gpglSëFí˚APPLE
=
_Lazy_glSëFí˚APPLE
;

3822 
PFNGLISFENCEAPPLEPROC
 
	gpglIsFí˚APPLE
=
_Lazy_glIsFí˚APPLE
;

3823 
PFNGLTESTFENCEAPPLEPROC
 
	gpglTe°Fí˚APPLE
=
_Lazy_glTe°Fí˚APPLE
;

3824 
PFNGLFINISHFENCEAPPLEPROC
 
	gpglFöishFí˚APPLE
=
_Lazy_glFöishFí˚APPLE
;

3825 
PFNGLTESTOBJECTAPPLEPROC
 
	gpglTe°Obje˘APPLE
=
_Lazy_glTe°Obje˘APPLE
;

3826 
PFNGLFINISHOBJECTAPPLEPROC
 
	gpglFöishObje˘APPLE
=
_Lazy_glFöishObje˘APPLE
;

3831 #ifde‡
__GLEE_GL_APPLE_vîãx_¨øy_obje˘


3832 
__°dˇŒ
 
	$_Lazy_glBödVîãxAºayAPPLE
(
GLuöt
 
¨øy
Ë{i‡(
	`GLìInô
()Ë
	`glBödVîãxAºayAPPLE
◊ºay);
	}
}

3833 
__°dˇŒ
 
	$_Lazy_glDñëeVîãxAºaysAPPLE
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
¨øys
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeVîãxAºaysAPPLE
“,áºays);
	}
}

3834 
__°dˇŒ
 
	$_Lazy_glGíVîãxAºaysAPPLE
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
¨øys
Ë{i‡(
	`GLìInô
()Ë
	`glGíVîãxAºaysAPPLE
“,áºays);
	}
}

3835 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsVîãxAºayAPPLE
(
GLuöt
 
¨øy
Ë{i‡(
	`GLìInô
()Ë 
	`glIsVîãxAºayAPPLE
◊ºay);  (
GLboﬁón
)0;
	}
}

3836 
PFNGLBINDVERTEXARRAYAPPLEPROC
 
	gpglBödVîãxAºayAPPLE
=
_Lazy_glBödVîãxAºayAPPLE
;

3837 
PFNGLDELETEVERTEXARRAYSAPPLEPROC
 
	gpglDñëeVîãxAºaysAPPLE
=
_Lazy_glDñëeVîãxAºaysAPPLE
;

3838 
PFNGLGENVERTEXARRAYSAPPLEPROC
 
	gpglGíVîãxAºaysAPPLE
=
_Lazy_glGíVîãxAºaysAPPLE
;

3839 
PFNGLISVERTEXARRAYAPPLEPROC
 
	gpglIsVîãxAºayAPPLE
=
_Lazy_glIsVîãxAºayAPPLE
;

3844 #ifde‡
__GLEE_GL_APPLE_vîãx_¨øy_ønge


3845 
__°dˇŒ
 
	$_Lazy_glVîãxAºayR™geAPPLE
(
GLsizei
 
Àngth
, 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAºayR™geAPPLE
÷ígth,Öoöãr);
	}
}

3846 
__°dˇŒ
 
	$_Lazy_glFlushVîãxAºayR™geAPPLE
(
GLsizei
 
Àngth
, 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glFlushVîãxAºayR™geAPPLE
÷ígth,Öoöãr);
	}
}

3847 
__°dˇŒ
 
	$_Lazy_glVîãxAºayP¨amëîiAPPLE
(
GLíum
 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAºayP¨amëîiAPPLE
’«me,Ö¨am);
	}
}

3848 
PFNGLVERTEXARRAYRANGEAPPLEPROC
 
	gpglVîãxAºayR™geAPPLE
=
_Lazy_glVîãxAºayR™geAPPLE
;

3849 
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC
 
	gpglFlushVîãxAºayR™geAPPLE
=
_Lazy_glFlushVîãxAºayR™geAPPLE
;

3850 
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC
 
	gpglVîãxAºayP¨amëîiAPPLE
=
_Lazy_glVîãxAºayP¨amëîiAPPLE
;

3855 #ifde‡
__GLEE_GL_APPLE_ycb¸_422


3860 #ifde‡
__GLEE_GL_S3_s3tc


3865 #ifde‡
__GLEE_GL_ATI_døw_buf„rs


3866 
__°dˇŒ
 
	$_Lazy_glDøwBuf„rsATI
(
GLsizei
 
n
, c⁄° 
GLíum
 * 
bufs
Ë{i‡(
	`GLìInô
()Ë
	`glDøwBuf„rsATI
“, bufs);
	}
}

3867 
PFNGLDRAWBUFFERSATIPROC
 
	gpglDøwBuf„rsATI
=
_Lazy_glDøwBuf„rsATI
;

3872 #ifde‡
__GLEE_GL_ATI_pixñ_f‹m©_Êﬂt


3877 #ifde‡
__GLEE_GL_ATI_ãxtuª_ív_comböe3


3882 #ifde‡
__GLEE_GL_ATI_ãxtuª_Êﬂt


3887 #ifde‡
__GLEE_GL_NV_Êﬂt_buf„r


3892 #ifde‡
__GLEE_GL_NV_‰agmít_¥ogøm


3893 
__°dˇŒ
 
	$_Lazy_glProgømNamedP¨amëî4fNV
(
GLuöt
 
id
, 
GLsizei
 
Àn
, c⁄° 
GLubyã
 * 
«me
, 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
, GLÊﬂà
w
Ë{i‡(
	`GLìInô
()Ë
	`glProgømNamedP¨amëî4fNV
(id,Üí,Çame, x, y, z, w);
	}
}

3894 
__°dˇŒ
 
	$_Lazy_glProgømNamedP¨amëî4dNV
(
GLuöt
 
id
, 
GLsizei
 
Àn
, c⁄° 
GLubyã
 * 
«me
, 
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
, GLdoubÀ 
w
Ë{i‡(
	`GLìInô
()Ë
	`glProgømNamedP¨amëî4dNV
(id,Üí,Çame, x, y, z, w);
	}
}

3895 
__°dˇŒ
 
	$_Lazy_glProgømNamedP¨amëî4fvNV
(
GLuöt
 
id
, 
GLsizei
 
Àn
, c⁄° 
GLubyã
 * 
«me
, c⁄° 
GLÊﬂt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glProgømNamedP¨amëî4fvNV
(id,Üí,Çame, v);
	}
}

3896 
__°dˇŒ
 
	$_Lazy_glProgømNamedP¨amëî4dvNV
(
GLuöt
 
id
, 
GLsizei
 
Àn
, c⁄° 
GLubyã
 * 
«me
, c⁄° 
GLdoubÀ
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glProgømNamedP¨amëî4dvNV
(id,Üí,Çame, v);
	}
}

3897 
__°dˇŒ
 
	$_Lazy_glGëProgømNamedP¨amëîfvNV
(
GLuöt
 
id
, 
GLsizei
 
Àn
, c⁄° 
GLubyã
 * 
«me
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømNamedP¨amëîfvNV
(id,Üí,Çame,Ö¨ams);
	}
}

3898 
__°dˇŒ
 
	$_Lazy_glGëProgømNamedP¨amëîdvNV
(
GLuöt
 
id
, 
GLsizei
 
Àn
, c⁄° 
GLubyã
 * 
«me
, 
GLdoubÀ
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømNamedP¨amëîdvNV
(id,Üí,Çame,Ö¨ams);
	}
}

3899 
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC
 
	gpglProgømNamedP¨amëî4fNV
=
_Lazy_glProgømNamedP¨amëî4fNV
;

3900 
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC
 
	gpglProgømNamedP¨amëî4dNV
=
_Lazy_glProgømNamedP¨amëî4dNV
;

3901 
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC
 
	gpglProgømNamedP¨amëî4fvNV
=
_Lazy_glProgømNamedP¨amëî4fvNV
;

3902 
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC
 
	gpglProgømNamedP¨amëî4dvNV
=
_Lazy_glProgømNamedP¨amëî4dvNV
;

3903 
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC
 
	gpglGëProgømNamedP¨amëîfvNV
=
_Lazy_glGëProgømNamedP¨amëîfvNV
;

3904 
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC
 
	gpglGëProgømNamedP¨amëîdvNV
=
_Lazy_glGëProgømNamedP¨amëîdvNV
;

3909 #ifde‡
__GLEE_GL_NV_hÆf_Êﬂt


3910 
__°dˇŒ
 
	$_Lazy_glVîãx2hNV
(
GLhÆfNV
 
x
, GLhÆfNV 
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãx2hNV
(x, y);
	}
}

3911 
__°dˇŒ
 
	$_Lazy_glVîãx2hvNV
(c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãx2hvNV
(v);
	}
}

3912 
__°dˇŒ
 
	$_Lazy_glVîãx3hNV
(
GLhÆfNV
 
x
, GLhÆfNV 
y
, GLhÆfNV 
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãx3hNV
(x, y, z);
	}
}

3913 
__°dˇŒ
 
	$_Lazy_glVîãx3hvNV
(c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãx3hvNV
(v);
	}
}

3914 
__°dˇŒ
 
	$_Lazy_glVîãx4hNV
(
GLhÆfNV
 
x
, GLhÆfNV 
y
, GLhÆfNV 
z
, GLhÆfNV 
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãx4hNV
(x, y, z, w);
	}
}

3915 
__°dˇŒ
 
	$_Lazy_glVîãx4hvNV
(c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãx4hvNV
(v);
	}
}

3916 
__°dˇŒ
 
	$_Lazy_glN‹mÆ3hNV
(
GLhÆfNV
 
nx
, GLhÆfNV 
ny
, GLhÆfNV 
nz
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆ3hNV
“x,Çy,Çz);
	}
}

3917 
__°dˇŒ
 
	$_Lazy_glN‹mÆ3hvNV
(c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glN‹mÆ3hvNV
(v);
	}
}

3918 
__°dˇŒ
 
	$_Lazy_glCﬁ‹3hNV
(
GLhÆfNV
 
ªd
, GLhÆfNV 
gªí
, GLhÆfNV 
blue
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹3hNV
‘ed, gªí, blue);
	}
}

3919 
__°dˇŒ
 
	$_Lazy_glCﬁ‹3hvNV
(c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹3hvNV
(v);
	}
}

3920 
__°dˇŒ
 
	$_Lazy_glCﬁ‹4hNV
(
GLhÆfNV
 
ªd
, GLhÆfNV 
gªí
, GLhÆfNV 
blue
, GLhÆfNV 
Æpha
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹4hNV
‘ed, gªí, blue,áÕha);
	}
}

3921 
__°dˇŒ
 
	$_Lazy_glCﬁ‹4hvNV
(c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹4hvNV
(v);
	}
}

3922 
__°dˇŒ
 
	$_Lazy_glTexCo‹d1hNV
(
GLhÆfNV
 
s
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d1hNV
(s);
	}
}

3923 
__°dˇŒ
 
	$_Lazy_glTexCo‹d1hvNV
(c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d1hvNV
(v);
	}
}

3924 
__°dˇŒ
 
	$_Lazy_glTexCo‹d2hNV
(
GLhÆfNV
 
s
, GLhÆfNV 
t
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d2hNV
(s,Å);
	}
}

3925 
__°dˇŒ
 
	$_Lazy_glTexCo‹d2hvNV
(c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d2hvNV
(v);
	}
}

3926 
__°dˇŒ
 
	$_Lazy_glTexCo‹d3hNV
(
GLhÆfNV
 
s
, GLhÆfNV 
t
, GLhÆfNV 
r
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d3hNV
(s,Å,Ñ);
	}
}

3927 
__°dˇŒ
 
	$_Lazy_glTexCo‹d3hvNV
(c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d3hvNV
(v);
	}
}

3928 
__°dˇŒ
 
	$_Lazy_glTexCo‹d4hNV
(
GLhÆfNV
 
s
, GLhÆfNV 
t
, GLhÆfNV 
r
, GLhÆfNV 
q
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d4hNV
(s,Å,Ñ, q);
	}
}

3929 
__°dˇŒ
 
	$_Lazy_glTexCo‹d4hvNV
(c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glTexCo‹d4hvNV
(v);
	}
}

3930 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1hNV
(
GLíum
 
èrgë
, 
GLhÆfNV
 
s
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1hNV
—¨gë, s);
	}
}

3931 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d1hvNV
(
GLíum
 
èrgë
, c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d1hvNV
—¨gë, v);
	}
}

3932 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2hNV
(
GLíum
 
èrgë
, 
GLhÆfNV
 
s
, GLhÆfNV 
t
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2hNV
—¨gë, s,Å);
	}
}

3933 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d2hvNV
(
GLíum
 
èrgë
, c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d2hvNV
—¨gë, v);
	}
}

3934 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3hNV
(
GLíum
 
èrgë
, 
GLhÆfNV
 
s
, GLhÆfNV 
t
, GLhÆfNV 
r
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3hNV
—¨gë, s,Å,Ñ);
	}
}

3935 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d3hvNV
(
GLíum
 
èrgë
, c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d3hvNV
—¨gë, v);
	}
}

3936 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4hNV
(
GLíum
 
èrgë
, 
GLhÆfNV
 
s
, GLhÆfNV 
t
, GLhÆfNV 
r
, GLhÆfNV 
q
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4hNV
—¨gë, s,Å,Ñ, q);
	}
}

3937 
__°dˇŒ
 
	$_Lazy_glMu…iTexCo‹d4hvNV
(
GLíum
 
èrgë
, c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glMu…iTexCo‹d4hvNV
—¨gë, v);
	}
}

3938 
__°dˇŒ
 
	$_Lazy_glFogCo‹dhNV
(
GLhÆfNV
 
fog
Ë{i‡(
	`GLìInô
()Ë
	`glFogCo‹dhNV
(fog);
	}
}

3939 
__°dˇŒ
 
	$_Lazy_glFogCo‹dhvNV
(c⁄° 
GLhÆfNV
 * 
fog
Ë{i‡(
	`GLìInô
()Ë
	`glFogCo‹dhvNV
(fog);
	}
}

3940 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3hNV
(
GLhÆfNV
 
ªd
, GLhÆfNV 
gªí
, GLhÆfNV 
blue
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3hNV
‘ed, gªí, blue);
	}
}

3941 
__°dˇŒ
 
	$_Lazy_glSec⁄d¨yCﬁ‹3hvNV
(c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glSec⁄d¨yCﬁ‹3hvNV
(v);
	}
}

3942 
__°dˇŒ
 
	$_Lazy_glVîãxWeighthNV
(
GLhÆfNV
 
weight
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxWeighthNV
(weight);
	}
}

3943 
__°dˇŒ
 
	$_Lazy_glVîãxWeighthvNV
(c⁄° 
GLhÆfNV
 * 
weight
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxWeighthvNV
(weight);
	}
}

3944 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1hNV
(
GLuöt
 
ödex
, 
GLhÆfNV
 
x
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1hNV
(ödex, x);
	}
}

3945 
__°dˇŒ
 
	$_Lazy_glVîãxAârib1hvNV
(
GLuöt
 
ödex
, c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib1hvNV
(ödex, v);
	}
}

3946 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2hNV
(
GLuöt
 
ödex
, 
GLhÆfNV
 
x
, GLhÆfNV 
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2hNV
(ödex, x, y);
	}
}

3947 
__°dˇŒ
 
	$_Lazy_glVîãxAârib2hvNV
(
GLuöt
 
ödex
, c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib2hvNV
(ödex, v);
	}
}

3948 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3hNV
(
GLuöt
 
ödex
, 
GLhÆfNV
 
x
, GLhÆfNV 
y
, GLhÆfNV 
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3hNV
(ödex, x, y, z);
	}
}

3949 
__°dˇŒ
 
	$_Lazy_glVîãxAârib3hvNV
(
GLuöt
 
ödex
, c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib3hvNV
(ödex, v);
	}
}

3950 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4hNV
(
GLuöt
 
ödex
, 
GLhÆfNV
 
x
, GLhÆfNV 
y
, GLhÆfNV 
z
, GLhÆfNV 
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4hNV
(ödex, x, y, z, w);
	}
}

3951 
__°dˇŒ
 
	$_Lazy_glVîãxAârib4hvNV
(
GLuöt
 
ödex
, c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAârib4hvNV
(ödex, v);
	}
}

3952 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs1hvNV
(
GLuöt
 
ödex
, 
GLsizei
 
n
, c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs1hvNV
(ödex,Ç, v);
	}
}

3953 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs2hvNV
(
GLuöt
 
ödex
, 
GLsizei
 
n
, c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs2hvNV
(ödex,Ç, v);
	}
}

3954 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs3hvNV
(
GLuöt
 
ödex
, 
GLsizei
 
n
, c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs3hvNV
(ödex,Ç, v);
	}
}

3955 
__°dˇŒ
 
	$_Lazy_glVîãxAâribs4hvNV
(
GLuöt
 
ödex
, 
GLsizei
 
n
, c⁄° 
GLhÆfNV
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribs4hvNV
(ödex,Ç, v);
	}
}

3956 
PFNGLVERTEX2HNVPROC
 
	gpglVîãx2hNV
=
_Lazy_glVîãx2hNV
;

3957 
PFNGLVERTEX2HVNVPROC
 
	gpglVîãx2hvNV
=
_Lazy_glVîãx2hvNV
;

3958 
PFNGLVERTEX3HNVPROC
 
	gpglVîãx3hNV
=
_Lazy_glVîãx3hNV
;

3959 
PFNGLVERTEX3HVNVPROC
 
	gpglVîãx3hvNV
=
_Lazy_glVîãx3hvNV
;

3960 
PFNGLVERTEX4HNVPROC
 
	gpglVîãx4hNV
=
_Lazy_glVîãx4hNV
;

3961 
PFNGLVERTEX4HVNVPROC
 
	gpglVîãx4hvNV
=
_Lazy_glVîãx4hvNV
;

3962 
PFNGLNORMAL3HNVPROC
 
	gpglN‹mÆ3hNV
=
_Lazy_glN‹mÆ3hNV
;

3963 
PFNGLNORMAL3HVNVPROC
 
	gpglN‹mÆ3hvNV
=
_Lazy_glN‹mÆ3hvNV
;

3964 
PFNGLCOLOR3HNVPROC
 
	gpglCﬁ‹3hNV
=
_Lazy_glCﬁ‹3hNV
;

3965 
PFNGLCOLOR3HVNVPROC
 
	gpglCﬁ‹3hvNV
=
_Lazy_glCﬁ‹3hvNV
;

3966 
PFNGLCOLOR4HNVPROC
 
	gpglCﬁ‹4hNV
=
_Lazy_glCﬁ‹4hNV
;

3967 
PFNGLCOLOR4HVNVPROC
 
	gpglCﬁ‹4hvNV
=
_Lazy_glCﬁ‹4hvNV
;

3968 
PFNGLTEXCOORD1HNVPROC
 
	gpglTexCo‹d1hNV
=
_Lazy_glTexCo‹d1hNV
;

3969 
PFNGLTEXCOORD1HVNVPROC
 
	gpglTexCo‹d1hvNV
=
_Lazy_glTexCo‹d1hvNV
;

3970 
PFNGLTEXCOORD2HNVPROC
 
	gpglTexCo‹d2hNV
=
_Lazy_glTexCo‹d2hNV
;

3971 
PFNGLTEXCOORD2HVNVPROC
 
	gpglTexCo‹d2hvNV
=
_Lazy_glTexCo‹d2hvNV
;

3972 
PFNGLTEXCOORD3HNVPROC
 
	gpglTexCo‹d3hNV
=
_Lazy_glTexCo‹d3hNV
;

3973 
PFNGLTEXCOORD3HVNVPROC
 
	gpglTexCo‹d3hvNV
=
_Lazy_glTexCo‹d3hvNV
;

3974 
PFNGLTEXCOORD4HNVPROC
 
	gpglTexCo‹d4hNV
=
_Lazy_glTexCo‹d4hNV
;

3975 
PFNGLTEXCOORD4HVNVPROC
 
	gpglTexCo‹d4hvNV
=
_Lazy_glTexCo‹d4hvNV
;

3976 
PFNGLMULTITEXCOORD1HNVPROC
 
	gpglMu…iTexCo‹d1hNV
=
_Lazy_glMu…iTexCo‹d1hNV
;

3977 
PFNGLMULTITEXCOORD1HVNVPROC
 
	gpglMu…iTexCo‹d1hvNV
=
_Lazy_glMu…iTexCo‹d1hvNV
;

3978 
PFNGLMULTITEXCOORD2HNVPROC
 
	gpglMu…iTexCo‹d2hNV
=
_Lazy_glMu…iTexCo‹d2hNV
;

3979 
PFNGLMULTITEXCOORD2HVNVPROC
 
	gpglMu…iTexCo‹d2hvNV
=
_Lazy_glMu…iTexCo‹d2hvNV
;

3980 
PFNGLMULTITEXCOORD3HNVPROC
 
	gpglMu…iTexCo‹d3hNV
=
_Lazy_glMu…iTexCo‹d3hNV
;

3981 
PFNGLMULTITEXCOORD3HVNVPROC
 
	gpglMu…iTexCo‹d3hvNV
=
_Lazy_glMu…iTexCo‹d3hvNV
;

3982 
PFNGLMULTITEXCOORD4HNVPROC
 
	gpglMu…iTexCo‹d4hNV
=
_Lazy_glMu…iTexCo‹d4hNV
;

3983 
PFNGLMULTITEXCOORD4HVNVPROC
 
	gpglMu…iTexCo‹d4hvNV
=
_Lazy_glMu…iTexCo‹d4hvNV
;

3984 
PFNGLFOGCOORDHNVPROC
 
	gpglFogCo‹dhNV
=
_Lazy_glFogCo‹dhNV
;

3985 
PFNGLFOGCOORDHVNVPROC
 
	gpglFogCo‹dhvNV
=
_Lazy_glFogCo‹dhvNV
;

3986 
PFNGLSECONDARYCOLOR3HNVPROC
 
	gpglSec⁄d¨yCﬁ‹3hNV
=
_Lazy_glSec⁄d¨yCﬁ‹3hNV
;

3987 
PFNGLSECONDARYCOLOR3HVNVPROC
 
	gpglSec⁄d¨yCﬁ‹3hvNV
=
_Lazy_glSec⁄d¨yCﬁ‹3hvNV
;

3988 
PFNGLVERTEXWEIGHTHNVPROC
 
	gpglVîãxWeighthNV
=
_Lazy_glVîãxWeighthNV
;

3989 
PFNGLVERTEXWEIGHTHVNVPROC
 
	gpglVîãxWeighthvNV
=
_Lazy_glVîãxWeighthvNV
;

3990 
PFNGLVERTEXATTRIB1HNVPROC
 
	gpglVîãxAârib1hNV
=
_Lazy_glVîãxAârib1hNV
;

3991 
PFNGLVERTEXATTRIB1HVNVPROC
 
	gpglVîãxAârib1hvNV
=
_Lazy_glVîãxAârib1hvNV
;

3992 
PFNGLVERTEXATTRIB2HNVPROC
 
	gpglVîãxAârib2hNV
=
_Lazy_glVîãxAârib2hNV
;

3993 
PFNGLVERTEXATTRIB2HVNVPROC
 
	gpglVîãxAârib2hvNV
=
_Lazy_glVîãxAârib2hvNV
;

3994 
PFNGLVERTEXATTRIB3HNVPROC
 
	gpglVîãxAârib3hNV
=
_Lazy_glVîãxAârib3hNV
;

3995 
PFNGLVERTEXATTRIB3HVNVPROC
 
	gpglVîãxAârib3hvNV
=
_Lazy_glVîãxAârib3hvNV
;

3996 
PFNGLVERTEXATTRIB4HNVPROC
 
	gpglVîãxAârib4hNV
=
_Lazy_glVîãxAârib4hNV
;

3997 
PFNGLVERTEXATTRIB4HVNVPROC
 
	gpglVîãxAârib4hvNV
=
_Lazy_glVîãxAârib4hvNV
;

3998 
PFNGLVERTEXATTRIBS1HVNVPROC
 
	gpglVîãxAâribs1hvNV
=
_Lazy_glVîãxAâribs1hvNV
;

3999 
PFNGLVERTEXATTRIBS2HVNVPROC
 
	gpglVîãxAâribs2hvNV
=
_Lazy_glVîãxAâribs2hvNV
;

4000 
PFNGLVERTEXATTRIBS3HVNVPROC
 
	gpglVîãxAâribs3hvNV
=
_Lazy_glVîãxAâribs3hvNV
;

4001 
PFNGLVERTEXATTRIBS4HVNVPROC
 
	gpglVîãxAâribs4hvNV
=
_Lazy_glVîãxAâribs4hvNV
;

4006 #ifde‡
__GLEE_GL_NV_pixñ_d©a_ønge


4007 
__°dˇŒ
 
	$_Lazy_glPixñD©aR™geNV
(
GLíum
 
èrgë
, 
GLsizei
 
Àngth
, 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glPixñD©aR™geNV
—¨gë,Üígth,Öoöãr);
	}
}

4008 
__°dˇŒ
 
	$_Lazy_glFlushPixñD©aR™geNV
(
GLíum
 
èrgë
Ë{i‡(
	`GLìInô
()Ë
	`glFlushPixñD©aR™geNV
—¨gë);
	}
}

4009 
PFNGLPIXELDATARANGENVPROC
 
	gpglPixñD©aR™geNV
=
_Lazy_glPixñD©aR™geNV
;

4010 
PFNGLFLUSHPIXELDATARANGENVPROC
 
	gpglFlushPixñD©aR™geNV
=
_Lazy_glFlushPixñD©aR™geNV
;

4015 #ifde‡
__GLEE_GL_NV_¥imôive_ª°¨t


4016 
__°dˇŒ
 
	$_Lazy_glPrimôiveRe°¨tNV
(Ë{i‡(
	`GLìInô
()Ë
	`glPrimôiveRe°¨tNV
();
	}
}

4017 
__°dˇŒ
 
	$_Lazy_glPrimôiveRe°¨tIndexNV
(
GLuöt
 
ödex
Ë{i‡(
	`GLìInô
()Ë
	`glPrimôiveRe°¨tIndexNV
(ödex);
	}
}

4018 
PFNGLPRIMITIVERESTARTNVPROC
 
	gpglPrimôiveRe°¨tNV
=
_Lazy_glPrimôiveRe°¨tNV
;

4019 
PFNGLPRIMITIVERESTARTINDEXNVPROC
 
	gpglPrimôiveRe°¨tIndexNV
=
_Lazy_glPrimôiveRe°¨tIndexNV
;

4024 #ifde‡
__GLEE_GL_NV_ãxtuª_ex∑nd_n‹mÆ


4029 #ifde‡
__GLEE_GL_NV_vîãx_¥ogøm2


4034 #ifde‡
__GLEE_GL_ATI_m≠_obje˘_buf„r


4035 
GLvoid
* 
__°dˇŒ
 
	$_Lazy_glM≠Obje˘Buf„rATI
(
GLuöt
 
buf„r
Ë{i‡(
	`GLìInô
()Ë 
	`glM≠Obje˘Buf„rATI
(buf„r);  (
GLvoid
*)0;
	}
}

4036 
__°dˇŒ
 
	$_Lazy_glUnm≠Obje˘Buf„rATI
(
GLuöt
 
buf„r
Ë{i‡(
	`GLìInô
()Ë
	`glUnm≠Obje˘Buf„rATI
(buf„r);
	}
}

4037 
PFNGLMAPOBJECTBUFFERATIPROC
 
	gpglM≠Obje˘Buf„rATI
=
_Lazy_glM≠Obje˘Buf„rATI
;

4038 
PFNGLUNMAPOBJECTBUFFERATIPROC
 
	gpglUnm≠Obje˘Buf„rATI
=
_Lazy_glUnm≠Obje˘Buf„rATI
;

4043 #ifde‡
__GLEE_GL_ATI_£∑øã_°ícû


4044 
__°dˇŒ
 
	$_Lazy_glSãncûOpSï¨©eATI
(
GLíum
 
Á˚
, GLíum 
sÁû
, GLíum 
dpÁû
, GLíum 
dµass
Ë{i‡(
	`GLìInô
()Ë
	`glSãncûOpSï¨©eATI
(Á˚, sÁû, dpÁû, dµass);
	}
}

4045 
__°dˇŒ
 
	$_Lazy_glSãncûFuncSï¨©eATI
(
GLíum
 
‰⁄tfunc
, GLíum 
backfunc
, 
GLöt
 
ªf
, 
GLuöt
 
mask
Ë{i‡(
	`GLìInô
()Ë
	`glSãncûFuncSï¨©eATI
(‰⁄tfunc, backfunc,Ñef, mask);
	}
}

4046 
PFNGLSTENCILOPSEPARATEATIPROC
 
	gpglSãncûOpSï¨©eATI
=
_Lazy_glSãncûOpSï¨©eATI
;

4047 
PFNGLSTENCILFUNCSEPARATEATIPROC
 
	gpglSãncûFuncSï¨©eATI
=
_Lazy_glSãncûFuncSï¨©eATI
;

4052 #ifde‡
__GLEE_GL_ATI_vîãx_©åib_¨øy_obje˘


4053 
__°dˇŒ
 
	$_Lazy_glVîãxAâribAºayObje˘ATI
(
GLuöt
 
ödex
, 
GLöt
 
size
, 
GLíum
 
ty≥
, 
GLboﬁón
 
n‹mÆized
, 
GLsizei
 
°ride
, GLuöà
buf„r
, GLuöà
off£t
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribAºayObje˘ATI
(ödex, size,Åy≥,Ç‹mÆized, såide, buf„r, off£t);
	}
}

4054 
__°dˇŒ
 
	$_Lazy_glGëVîãxAâribAºayObje˘fvATI
(
GLuöt
 
ödex
, 
GLíum
 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëVîãxAâribAºayObje˘fvATI
(ödex,Ö«me,Ö¨ams);
	}
}

4055 
__°dˇŒ
 
	$_Lazy_glGëVîãxAâribAºayObje˘ivATI
(
GLuöt
 
ödex
, 
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëVîãxAâribAºayObje˘ivATI
(ödex,Ö«me,Ö¨ams);
	}
}

4056 
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC
 
	gpglVîãxAâribAºayObje˘ATI
=
_Lazy_glVîãxAâribAºayObje˘ATI
;

4057 
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC
 
	gpglGëVîãxAâribAºayObje˘fvATI
=
_Lazy_glGëVîãxAâribAºayObje˘fvATI
;

4058 
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC
 
	gpglGëVîãxAâribAºayObje˘ivATI
=
_Lazy_glGëVîãxAâribAºayObje˘ivATI
;

4063 #ifde‡
__GLEE_GL_OES_ªad_f‹m©


4068 #ifde‡
__GLEE_GL_EXT_dïth_bounds_ã°


4069 
__°dˇŒ
 
	$_Lazy_glDïthBoundsEXT
(
GL˛ampd
 
zmö
, GL˛ampd 
zmax
Ë{i‡(
	`GLìInô
()Ë
	`glDïthBoundsEXT
(zmö, zmax);
	}
}

4070 
PFNGLDEPTHBOUNDSEXTPROC
 
	gpglDïthBoundsEXT
=
_Lazy_glDïthBoundsEXT
;

4075 #ifde‡
__GLEE_GL_EXT_ãxtuª_múr‹_˛amp


4080 #ifde‡
__GLEE_GL_EXT_bÀnd_equ©i⁄_£∑øã


4081 
__°dˇŒ
 
	$_Lazy_glBÀndEqu©i⁄Sï¨©eEXT
(
GLíum
 
modeRGB
, GLíum 
modeAÕha
Ë{i‡(
	`GLìInô
()Ë
	`glBÀndEqu©i⁄Sï¨©eEXT
(modeRGB, modeAÕha);
	}
}

4082 
PFNGLBLENDEQUATIONSEPARATEEXTPROC
 
	gpglBÀndEqu©i⁄Sï¨©eEXT
=
_Lazy_glBÀndEqu©i⁄Sï¨©eEXT
;

4087 #ifde‡
__GLEE_GL_MESA_∑ck_övît


4092 #ifde‡
__GLEE_GL_MESA_ycb¸_ãxtuª


4097 #ifde‡
__GLEE_GL_EXT_pixñ_buf„r_obje˘


4102 #ifde‡
__GLEE_GL_NV_‰agmít_¥ogøm_›ti⁄


4107 #ifde‡
__GLEE_GL_NV_‰agmít_¥ogøm2


4112 #ifde‡
__GLEE_GL_NV_vîãx_¥ogøm2_›ti⁄


4117 #ifde‡
__GLEE_GL_NV_vîãx_¥ogøm3


4122 #ifde‡
__GLEE_GL_EXT_‰amebuf„r_obje˘


4123 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsRídîbuf„rEXT
(
GLuöt
 
ªndîbuf„r
Ë{i‡(
	`GLìInô
()Ë 
	`glIsRídîbuf„rEXT
‘ídîbuf„r);  (
GLboﬁón
)0;
	}
}

4124 
__°dˇŒ
 
	$_Lazy_glBödRídîbuf„rEXT
(
GLíum
 
èrgë
, 
GLuöt
 
ªndîbuf„r
Ë{i‡(
	`GLìInô
()Ë
	`glBödRídîbuf„rEXT
—¨gë,Ñídîbuf„r);
	}
}

4125 
__°dˇŒ
 
	$_Lazy_glDñëeRídîbuf„rsEXT
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
ªndîbuf„rs
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeRídîbuf„rsEXT
“,Ñídîbuf„rs);
	}
}

4126 
__°dˇŒ
 
	$_Lazy_glGíRídîbuf„rsEXT
(
GLsizei
 
n
, 
GLuöt
 * 
ªndîbuf„rs
Ë{i‡(
	`GLìInô
()Ë
	`glGíRídîbuf„rsEXT
“,Ñídîbuf„rs);
	}
}

4127 
__°dˇŒ
 
	$_Lazy_glRídîbuf„rSt‹ageEXT
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
Ë{i‡(
	`GLìInô
()Ë
	`glRídîbuf„rSt‹ageEXT
—¨gë, i¡î«lf‹m©, width, height);
	}
}

4128 
__°dˇŒ
 
	$_Lazy_glGëRídîbuf„rP¨amëîivEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëRídîbuf„rP¨amëîivEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

4129 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsFømebuf„rEXT
(
GLuöt
 
‰amebuf„r
Ë{i‡(
	`GLìInô
()Ë 
	`glIsFømebuf„rEXT
(‰amebuf„r);  (
GLboﬁón
)0;
	}
}

4130 
__°dˇŒ
 
	$_Lazy_glBödFømebuf„rEXT
(
GLíum
 
èrgë
, 
GLuöt
 
‰amebuf„r
Ë{i‡(
	`GLìInô
()Ë
	`glBödFømebuf„rEXT
—¨gë, fømebuf„r);
	}
}

4131 
__°dˇŒ
 
	$_Lazy_glDñëeFømebuf„rsEXT
(
GLsizei
 
n
, c⁄° 
GLuöt
 * 
‰amebuf„rs
Ë{i‡(
	`GLìInô
()Ë
	`glDñëeFømebuf„rsEXT
“, fømebuf„rs);
	}
}

4132 
__°dˇŒ
 
	$_Lazy_glGíFømebuf„rsEXT
(
GLsizei
 
n
, 
GLuöt
 * 
‰amebuf„rs
Ë{i‡(
	`GLìInô
()Ë
	`glGíFømebuf„rsEXT
“, fømebuf„rs);
	}
}

4133 
GLíum
 
__°dˇŒ
 
	$_Lazy_glCheckFømebuf„rSètusEXT
(
GLíum
 
èrgë
Ë{i‡(
	`GLìInô
()Ë 
	`glCheckFømebuf„rSètusEXT
—¨gë);  (GLíum)0;
	}
}

4134 
__°dˇŒ
 
	$_Lazy_glFømebuf„rTextuª1DEXT
(
GLíum
 
èrgë
, GLíum 
©èchmít
, GLíum 
ãxèrgë
, 
GLuöt
 
ãxtuª
, 
GLöt
 
Àvñ
Ë{i‡(
	`GLìInô
()Ë
	`glFømebuf„rTextuª1DEXT
—¨gë,áâachmít,Åexèrgë,Åextuª,Üevñ);
	}
}

4135 
__°dˇŒ
 
	$_Lazy_glFømebuf„rTextuª2DEXT
(
GLíum
 
èrgë
, GLíum 
©èchmít
, GLíum 
ãxèrgë
, 
GLuöt
 
ãxtuª
, 
GLöt
 
Àvñ
Ë{i‡(
	`GLìInô
()Ë
	`glFømebuf„rTextuª2DEXT
—¨gë,áâachmít,Åexèrgë,Åextuª,Üevñ);
	}
}

4136 
__°dˇŒ
 
	$_Lazy_glFømebuf„rTextuª3DEXT
(
GLíum
 
èrgë
, GLíum 
©èchmít
, GLíum 
ãxèrgë
, 
GLuöt
 
ãxtuª
, 
GLöt
 
Àvñ
, GLöà
zoff£t
Ë{i‡(
	`GLìInô
()Ë
	`glFømebuf„rTextuª3DEXT
—¨gë,áâachmít,Åexèrgë,Åextuª,Üevñ, zoff£t);
	}
}

4137 
__°dˇŒ
 
	$_Lazy_glFømebuf„rRídîbuf„rEXT
(
GLíum
 
èrgë
, GLíum 
©èchmít
, GLíum 
ªndîbuf„π¨gë
, 
GLuöt
 
ªndîbuf„r
Ë{i‡(
	`GLìInô
()Ë
	`glFømebuf„rRídîbuf„rEXT
—¨gë,áâachmít,Ñídîbuf„π¨gë,Ñídîbuf„r);
	}
}

4138 
__°dˇŒ
 
	$_Lazy_glGëFømebuf„rAâachmítP¨amëîivEXT
(
GLíum
 
èrgë
, GLíum 
©èchmít
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëFømebuf„rAâachmítP¨amëîivEXT
—¨gë,áâachmít,Ö«me,Ö¨ams);
	}
}

4139 
__°dˇŒ
 
	$_Lazy_glGíî©eMùm≠EXT
(
GLíum
 
èrgë
Ë{i‡(
	`GLìInô
()Ë
	`glGíî©eMùm≠EXT
—¨gë);
	}
}

4140 
PFNGLISRENDERBUFFEREXTPROC
 
	gpglIsRídîbuf„rEXT
=
_Lazy_glIsRídîbuf„rEXT
;

4141 
PFNGLBINDRENDERBUFFEREXTPROC
 
	gpglBödRídîbuf„rEXT
=
_Lazy_glBödRídîbuf„rEXT
;

4142 
PFNGLDELETERENDERBUFFERSEXTPROC
 
	gpglDñëeRídîbuf„rsEXT
=
_Lazy_glDñëeRídîbuf„rsEXT
;

4143 
PFNGLGENRENDERBUFFERSEXTPROC
 
	gpglGíRídîbuf„rsEXT
=
_Lazy_glGíRídîbuf„rsEXT
;

4144 
PFNGLRENDERBUFFERSTORAGEEXTPROC
 
	gpglRídîbuf„rSt‹ageEXT
=
_Lazy_glRídîbuf„rSt‹ageEXT
;

4145 
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC
 
	gpglGëRídîbuf„rP¨amëîivEXT
=
_Lazy_glGëRídîbuf„rP¨amëîivEXT
;

4146 
PFNGLISFRAMEBUFFEREXTPROC
 
	gpglIsFømebuf„rEXT
=
_Lazy_glIsFømebuf„rEXT
;

4147 
PFNGLBINDFRAMEBUFFEREXTPROC
 
	gpglBödFømebuf„rEXT
=
_Lazy_glBödFømebuf„rEXT
;

4148 
PFNGLDELETEFRAMEBUFFERSEXTPROC
 
	gpglDñëeFømebuf„rsEXT
=
_Lazy_glDñëeFømebuf„rsEXT
;

4149 
PFNGLGENFRAMEBUFFERSEXTPROC
 
	gpglGíFømebuf„rsEXT
=
_Lazy_glGíFømebuf„rsEXT
;

4150 
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC
 
	gpglCheckFømebuf„rSètusEXT
=
_Lazy_glCheckFømebuf„rSètusEXT
;

4151 
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC
 
	gpglFømebuf„rTextuª1DEXT
=
_Lazy_glFømebuf„rTextuª1DEXT
;

4152 
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC
 
	gpglFømebuf„rTextuª2DEXT
=
_Lazy_glFømebuf„rTextuª2DEXT
;

4153 
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC
 
	gpglFømebuf„rTextuª3DEXT
=
_Lazy_glFømebuf„rTextuª3DEXT
;

4154 
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC
 
	gpglFømebuf„rRídîbuf„rEXT
=
_Lazy_glFømebuf„rRídîbuf„rEXT
;

4155 
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
 
	gpglGëFømebuf„rAâachmítP¨amëîivEXT
=
_Lazy_glGëFømebuf„rAâachmítP¨amëîivEXT
;

4156 
PFNGLGENERATEMIPMAPEXTPROC
 
	gpglGíî©eMùm≠EXT
=
_Lazy_glGíî©eMùm≠EXT
;

4161 #ifde‡
__GLEE_GL_GREMEDY_°rög_m¨kî


4162 
__°dˇŒ
 
	$_Lazy_glSåögM¨kîGREMEDY
(
GLsizei
 
Àn
, c⁄° 
GLvoid
 * 
°rög
Ë{i‡(
	`GLìInô
()Ë
	`glSåögM¨kîGREMEDY
÷í, såög);
	}
}

4163 
PFNGLSTRINGMARKERGREMEDYPROC
 
	gpglSåögM¨kîGREMEDY
=
_Lazy_glSåögM¨kîGREMEDY
;

4168 #ifde‡
__GLEE_GL_EXT_Cg_shadî


4173 #ifde‡
__GLEE_GL_EXT_timî_quîy


4174 
__°dˇŒ
 
	$_Lazy_glGëQuîyObje˘i64vEXT
(
GLuöt
 
id
, 
GLíum
 
≤ame
, 
GLöt64EXT
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëQuîyObje˘i64vEXT
(id,Ö«me,Ö¨ams);
	}
}

4175 
__°dˇŒ
 
	$_Lazy_glGëQuîyObje˘ui64vEXT
(
GLuöt
 
id
, 
GLíum
 
≤ame
, 
GLuöt64EXT
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëQuîyObje˘ui64vEXT
(id,Ö«me,Ö¨ams);
	}
}

4176 
PFNGLGETQUERYOBJECTI64VEXTPROC
 
	gpglGëQuîyObje˘i64vEXT
=
_Lazy_glGëQuîyObje˘i64vEXT
;

4177 
PFNGLGETQUERYOBJECTUI64VEXTPROC
 
	gpglGëQuîyObje˘ui64vEXT
=
_Lazy_glGëQuîyObje˘ui64vEXT
;

4182 #ifde‡
__GLEE_GL_EXT_ãxtuª_buf„r_obje˘


4183 
__°dˇŒ
 
	$_Lazy_glTexBuf„rEXT
(
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
, 
GLuöt
 
buf„r
Ë{i‡(
	`GLìInô
()Ë
	`glTexBuf„rEXT
—¨gë, i¡î«lf‹m©, buf„r);
	}
}

4184 
PFNGLTEXBUFFEREXTPROC
 
	gpglTexBuf„rEXT
=
_Lazy_glTexBuf„rEXT
;

4189 #ifde‡
__GLEE_GL_EXT_gpu_shadî4


4190 
__°dˇŒ
 
	$_Lazy_glGëUnif‹muivEXT
(
GLuöt
 
¥ogøm
, 
GLöt
 
loˇti⁄
, GLuöà* 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëUnif‹muivEXT
’rogøm,Üoˇti⁄,Ö¨ams);
	}
}

4191 
__°dˇŒ
 
	$_Lazy_glBödFøgD©aLoˇti⁄EXT
(
GLuöt
 
¥ogøm
, GLuöà
cﬁ‹
, c⁄° 
GLch¨
 * 
«me
Ë{i‡(
	`GLìInô
()Ë
	`glBödFøgD©aLoˇti⁄EXT
’rogøm, cﬁ‹,Çame);
	}
}

4192 
GLöt
 
__°dˇŒ
 
	$_Lazy_glGëFøgD©aLoˇti⁄EXT
(
GLuöt
 
¥ogøm
, c⁄° 
GLch¨
 * 
«me
Ë{i‡(
	`GLìInô
()Ë 
	`glGëFøgD©aLoˇti⁄EXT
’rogøm,Çame);  (
GLöt
)0;
	}
}

4193 
__°dˇŒ
 
	$_Lazy_glUnif‹m1uiEXT
(
GLöt
 
loˇti⁄
, 
GLuöt
 
v0
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m1uiEXT
÷oˇti⁄, v0);
	}
}

4194 
__°dˇŒ
 
	$_Lazy_glUnif‹m2uiEXT
(
GLöt
 
loˇti⁄
, 
GLuöt
 
v0
, GLuöà
v1
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m2uiEXT
÷oˇti⁄, v0, v1);
	}
}

4195 
__°dˇŒ
 
	$_Lazy_glUnif‹m3uiEXT
(
GLöt
 
loˇti⁄
, 
GLuöt
 
v0
, GLuöà
v1
, GLuöà
v2
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m3uiEXT
÷oˇti⁄, v0, v1, v2);
	}
}

4196 
__°dˇŒ
 
	$_Lazy_glUnif‹m4uiEXT
(
GLöt
 
loˇti⁄
, 
GLuöt
 
v0
, GLuöà
v1
, GLuöà
v2
, GLuöà
v3
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m4uiEXT
÷oˇti⁄, v0, v1, v2, v3);
	}
}

4197 
__°dˇŒ
 
	$_Lazy_glUnif‹m1uivEXT
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° 
GLuöt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m1uivEXT
÷oˇti⁄, cou¡, vÆue);
	}
}

4198 
__°dˇŒ
 
	$_Lazy_glUnif‹m2uivEXT
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° 
GLuöt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m2uivEXT
÷oˇti⁄, cou¡, vÆue);
	}
}

4199 
__°dˇŒ
 
	$_Lazy_glUnif‹m3uivEXT
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° 
GLuöt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m3uivEXT
÷oˇti⁄, cou¡, vÆue);
	}
}

4200 
__°dˇŒ
 
	$_Lazy_glUnif‹m4uivEXT
(
GLöt
 
loˇti⁄
, 
GLsizei
 
cou¡
, c⁄° 
GLuöt
 * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹m4uivEXT
÷oˇti⁄, cou¡, vÆue);
	}
}

4201 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI1iEXT
(
GLuöt
 
ödex
, 
GLöt
 
x
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI1iEXT
(ödex, x);
	}
}

4202 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI2iEXT
(
GLuöt
 
ödex
, 
GLöt
 
x
, GLöà
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI2iEXT
(ödex, x, y);
	}
}

4203 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI3iEXT
(
GLuöt
 
ödex
, 
GLöt
 
x
, GLöà
y
, GLöà
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI3iEXT
(ödex, x, y, z);
	}
}

4204 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI4iEXT
(
GLuöt
 
ödex
, 
GLöt
 
x
, GLöà
y
, GLöà
z
, GLöà
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI4iEXT
(ödex, x, y, z, w);
	}
}

4205 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI1uiEXT
(
GLuöt
 
ödex
, GLuöà
x
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI1uiEXT
(ödex, x);
	}
}

4206 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI2uiEXT
(
GLuöt
 
ödex
, GLuöà
x
, GLuöà
y
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI2uiEXT
(ödex, x, y);
	}
}

4207 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI3uiEXT
(
GLuöt
 
ödex
, GLuöà
x
, GLuöà
y
, GLuöà
z
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI3uiEXT
(ödex, x, y, z);
	}
}

4208 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI4uiEXT
(
GLuöt
 
ödex
, GLuöà
x
, GLuöà
y
, GLuöà
z
, GLuöà
w
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI4uiEXT
(ödex, x, y, z, w);
	}
}

4209 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI1ivEXT
(
GLuöt
 
ödex
, c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI1ivEXT
(ödex, v);
	}
}

4210 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI2ivEXT
(
GLuöt
 
ödex
, c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI2ivEXT
(ödex, v);
	}
}

4211 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI3ivEXT
(
GLuöt
 
ödex
, c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI3ivEXT
(ödex, v);
	}
}

4212 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI4ivEXT
(
GLuöt
 
ödex
, c⁄° 
GLöt
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI4ivEXT
(ödex, v);
	}
}

4213 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI1uivEXT
(
GLuöt
 
ödex
, c⁄° GLuöà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI1uivEXT
(ödex, v);
	}
}

4214 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI2uivEXT
(
GLuöt
 
ödex
, c⁄° GLuöà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI2uivEXT
(ödex, v);
	}
}

4215 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI3uivEXT
(
GLuöt
 
ödex
, c⁄° GLuöà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI3uivEXT
(ödex, v);
	}
}

4216 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI4uivEXT
(
GLuöt
 
ödex
, c⁄° GLuöà* 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI4uivEXT
(ödex, v);
	}
}

4217 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI4bvEXT
(
GLuöt
 
ödex
, c⁄° 
GLbyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI4bvEXT
(ödex, v);
	}
}

4218 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI4svEXT
(
GLuöt
 
ödex
, c⁄° 
GLsh‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI4svEXT
(ödex, v);
	}
}

4219 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI4ubvEXT
(
GLuöt
 
ödex
, c⁄° 
GLubyã
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI4ubvEXT
(ödex, v);
	}
}

4220 
__°dˇŒ
 
	$_Lazy_glVîãxAâribI4usvEXT
(
GLuöt
 
ödex
, c⁄° 
GLush‹t
 * 
v
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribI4usvEXT
(ödex, v);
	}
}

4221 
__°dˇŒ
 
	$_Lazy_glVîãxAâribIPoöãrEXT
(
GLuöt
 
ödex
, 
GLöt
 
size
, 
GLíum
 
ty≥
, 
GLsizei
 
°ride
, c⁄° 
GLvoid
 * 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`glVîãxAâribIPoöãrEXT
(ödex, size,Åy≥, såide,Öoöãr);
	}
}

4222 
__°dˇŒ
 
	$_Lazy_glGëVîãxAâribIivEXT
(
GLuöt
 
ödex
, 
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëVîãxAâribIivEXT
(ödex,Ö«me,Ö¨ams);
	}
}

4223 
__°dˇŒ
 
	$_Lazy_glGëVîãxAâribIuivEXT
(
GLuöt
 
ödex
, 
GLíum
 
≤ame
, GLuöà* 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëVîãxAâribIuivEXT
(ödex,Ö«me,Ö¨ams);
	}
}

4224 
PFNGLGETUNIFORMUIVEXTPROC
 
	gpglGëUnif‹muivEXT
=
_Lazy_glGëUnif‹muivEXT
;

4225 
PFNGLBINDFRAGDATALOCATIONEXTPROC
 
	gpglBödFøgD©aLoˇti⁄EXT
=
_Lazy_glBödFøgD©aLoˇti⁄EXT
;

4226 
PFNGLGETFRAGDATALOCATIONEXTPROC
 
	gpglGëFøgD©aLoˇti⁄EXT
=
_Lazy_glGëFøgD©aLoˇti⁄EXT
;

4227 
PFNGLUNIFORM1UIEXTPROC
 
	gpglUnif‹m1uiEXT
=
_Lazy_glUnif‹m1uiEXT
;

4228 
PFNGLUNIFORM2UIEXTPROC
 
	gpglUnif‹m2uiEXT
=
_Lazy_glUnif‹m2uiEXT
;

4229 
PFNGLUNIFORM3UIEXTPROC
 
	gpglUnif‹m3uiEXT
=
_Lazy_glUnif‹m3uiEXT
;

4230 
PFNGLUNIFORM4UIEXTPROC
 
	gpglUnif‹m4uiEXT
=
_Lazy_glUnif‹m4uiEXT
;

4231 
PFNGLUNIFORM1UIVEXTPROC
 
	gpglUnif‹m1uivEXT
=
_Lazy_glUnif‹m1uivEXT
;

4232 
PFNGLUNIFORM2UIVEXTPROC
 
	gpglUnif‹m2uivEXT
=
_Lazy_glUnif‹m2uivEXT
;

4233 
PFNGLUNIFORM3UIVEXTPROC
 
	gpglUnif‹m3uivEXT
=
_Lazy_glUnif‹m3uivEXT
;

4234 
PFNGLUNIFORM4UIVEXTPROC
 
	gpglUnif‹m4uivEXT
=
_Lazy_glUnif‹m4uivEXT
;

4235 
PFNGLVERTEXATTRIBI1IEXTPROC
 
	gpglVîãxAâribI1iEXT
=
_Lazy_glVîãxAâribI1iEXT
;

4236 
PFNGLVERTEXATTRIBI2IEXTPROC
 
	gpglVîãxAâribI2iEXT
=
_Lazy_glVîãxAâribI2iEXT
;

4237 
PFNGLVERTEXATTRIBI3IEXTPROC
 
	gpglVîãxAâribI3iEXT
=
_Lazy_glVîãxAâribI3iEXT
;

4238 
PFNGLVERTEXATTRIBI4IEXTPROC
 
	gpglVîãxAâribI4iEXT
=
_Lazy_glVîãxAâribI4iEXT
;

4239 
PFNGLVERTEXATTRIBI1UIEXTPROC
 
	gpglVîãxAâribI1uiEXT
=
_Lazy_glVîãxAâribI1uiEXT
;

4240 
PFNGLVERTEXATTRIBI2UIEXTPROC
 
	gpglVîãxAâribI2uiEXT
=
_Lazy_glVîãxAâribI2uiEXT
;

4241 
PFNGLVERTEXATTRIBI3UIEXTPROC
 
	gpglVîãxAâribI3uiEXT
=
_Lazy_glVîãxAâribI3uiEXT
;

4242 
PFNGLVERTEXATTRIBI4UIEXTPROC
 
	gpglVîãxAâribI4uiEXT
=
_Lazy_glVîãxAâribI4uiEXT
;

4243 
PFNGLVERTEXATTRIBI1IVEXTPROC
 
	gpglVîãxAâribI1ivEXT
=
_Lazy_glVîãxAâribI1ivEXT
;

4244 
PFNGLVERTEXATTRIBI2IVEXTPROC
 
	gpglVîãxAâribI2ivEXT
=
_Lazy_glVîãxAâribI2ivEXT
;

4245 
PFNGLVERTEXATTRIBI3IVEXTPROC
 
	gpglVîãxAâribI3ivEXT
=
_Lazy_glVîãxAâribI3ivEXT
;

4246 
PFNGLVERTEXATTRIBI4IVEXTPROC
 
	gpglVîãxAâribI4ivEXT
=
_Lazy_glVîãxAâribI4ivEXT
;

4247 
PFNGLVERTEXATTRIBI1UIVEXTPROC
 
	gpglVîãxAâribI1uivEXT
=
_Lazy_glVîãxAâribI1uivEXT
;

4248 
PFNGLVERTEXATTRIBI2UIVEXTPROC
 
	gpglVîãxAâribI2uivEXT
=
_Lazy_glVîãxAâribI2uivEXT
;

4249 
PFNGLVERTEXATTRIBI3UIVEXTPROC
 
	gpglVîãxAâribI3uivEXT
=
_Lazy_glVîãxAâribI3uivEXT
;

4250 
PFNGLVERTEXATTRIBI4UIVEXTPROC
 
	gpglVîãxAâribI4uivEXT
=
_Lazy_glVîãxAâribI4uivEXT
;

4251 
PFNGLVERTEXATTRIBI4BVEXTPROC
 
	gpglVîãxAâribI4bvEXT
=
_Lazy_glVîãxAâribI4bvEXT
;

4252 
PFNGLVERTEXATTRIBI4SVEXTPROC
 
	gpglVîãxAâribI4svEXT
=
_Lazy_glVîãxAâribI4svEXT
;

4253 
PFNGLVERTEXATTRIBI4UBVEXTPROC
 
	gpglVîãxAâribI4ubvEXT
=
_Lazy_glVîãxAâribI4ubvEXT
;

4254 
PFNGLVERTEXATTRIBI4USVEXTPROC
 
	gpglVîãxAâribI4usvEXT
=
_Lazy_glVîãxAâribI4usvEXT
;

4255 
PFNGLVERTEXATTRIBIPOINTEREXTPROC
 
	gpglVîãxAâribIPoöãrEXT
=
_Lazy_glVîãxAâribIPoöãrEXT
;

4256 
PFNGLGETVERTEXATTRIBIIVEXTPROC
 
	gpglGëVîãxAâribIivEXT
=
_Lazy_glGëVîãxAâribIivEXT
;

4257 
PFNGLGETVERTEXATTRIBIUIVEXTPROC
 
	gpglGëVîãxAâribIuivEXT
=
_Lazy_glGëVîãxAâribIuivEXT
;

4262 #ifde‡
__GLEE_GL_EXT_geomëry_shadî4


4263 
__°dˇŒ
 
	$_Lazy_glProgømP¨amëîiEXT
(
GLuöt
 
¥ogøm
, 
GLíum
 
≤ame
, 
GLöt
 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glProgømP¨amëîiEXT
’rogøm,Ö«me, vÆue);
	}
}

4264 
__°dˇŒ
 
	$_Lazy_glFømebuf„rTextuªEXT
(
GLíum
 
èrgë
, GLíum 
©èchmít
, 
GLuöt
 
ãxtuª
, 
GLöt
 
Àvñ
Ë{i‡(
	`GLìInô
()Ë
	`glFømebuf„rTextuªEXT
—¨gë,áâachmít,Åextuª,Üevñ);
	}
}

4265 
__°dˇŒ
 
	$_Lazy_glFømebuf„rTextuªLayîEXT
(
GLíum
 
èrgë
, GLíum 
©èchmít
, 
GLuöt
 
ãxtuª
, 
GLöt
 
Àvñ
, GLöà
œyî
Ë{i‡(
	`GLìInô
()Ë
	`glFømebuf„rTextuªLayîEXT
—¨gë,áâachmít,Åextuª,Üevñ,Üayî);
	}
}

4266 
__°dˇŒ
 
	$_Lazy_glFømebuf„rTextuªFa˚EXT
(
GLíum
 
èrgë
, GLíum 
©èchmít
, 
GLuöt
 
ãxtuª
, 
GLöt
 
Àvñ
, GLíum 
Á˚
Ë{i‡(
	`GLìInô
()Ë
	`glFømebuf„rTextuªFa˚EXT
—¨gë,áâachmít,Åextuª,Üevñ, fa˚);
	}
}

4267 
PFNGLPROGRAMPARAMETERIEXTPROC
 
	gpglProgømP¨amëîiEXT
=
_Lazy_glProgømP¨amëîiEXT
;

4268 
PFNGLFRAMEBUFFERTEXTUREEXTPROC
 
	gpglFømebuf„rTextuªEXT
=
_Lazy_glFømebuf„rTextuªEXT
;

4269 
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
 
	gpglFømebuf„rTextuªLayîEXT
=
_Lazy_glFømebuf„rTextuªLayîEXT
;

4270 
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC
 
	gpglFømebuf„rTextuªFa˚EXT
=
_Lazy_glFømebuf„rTextuªFa˚EXT
;

4275 #ifde‡
__GLEE_GL_EXT_bödabÀ_unif‹m


4276 
__°dˇŒ
 
	$_Lazy_glUnif‹mBuf„rEXT
(
GLuöt
 
¥ogøm
, 
GLöt
 
loˇti⁄
, GLuöà
buf„r
Ë{i‡(
	`GLìInô
()Ë
	`glUnif‹mBuf„rEXT
’rogøm,Üoˇti⁄, buf„r);
	}
}

4277 
GLöt
 
__°dˇŒ
 
	$_Lazy_glGëUnif‹mBuf„rSizeEXT
(
GLuöt
 
¥ogøm
, 
GLöt
 
loˇti⁄
Ë{i‡(
	`GLìInô
()Ë 
	`glGëUnif‹mBuf„rSizeEXT
’rogøm,Üoˇti⁄);  (GLöt)0;
	}
}

4278 
GLöçå
 
__°dˇŒ
 
	$_Lazy_glGëUnif‹mOff£tEXT
(
GLuöt
 
¥ogøm
, 
GLöt
 
loˇti⁄
Ë{i‡(
	`GLìInô
()Ë 
	`glGëUnif‹mOff£tEXT
’rogøm,Üoˇti⁄);  (
GLöçå
)0;
	}
}

4279 
PFNGLUNIFORMBUFFEREXTPROC
 
	gpglUnif‹mBuf„rEXT
=
_Lazy_glUnif‹mBuf„rEXT
;

4280 
PFNGLGETUNIFORMBUFFERSIZEEXTPROC
 
	gpglGëUnif‹mBuf„rSizeEXT
=
_Lazy_glGëUnif‹mBuf„rSizeEXT
;

4281 
PFNGLGETUNIFORMOFFSETEXTPROC
 
	gpglGëUnif‹mOff£tEXT
=
_Lazy_glGëUnif‹mOff£tEXT
;

4286 #ifde‡
__GLEE_GL_EXT_‰amebuf„r_sRGB


4291 #ifde‡
__GLEE_GL_EXT_ãxtuª_sh¨ed_exp⁄ít


4296 #ifde‡
__GLEE_GL_EXT_∑cked_Êﬂt


4301 #ifde‡
__GLEE_GL_EXT_ãxtuª_¨øy


4306 #ifde‡
__GLEE_GL_EXT_ãxtuª_öãgî


4307 
__°dˇŒ
 
	$_Lazy_glTexP¨amëîIivEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glTexP¨amëîIivEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

4308 
__°dˇŒ
 
	$_Lazy_glTexP¨amëîIuivEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLuöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glTexP¨amëîIuivEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

4309 
__°dˇŒ
 
	$_Lazy_glGëTexP¨amëîIivEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëTexP¨amëîIivEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

4310 
__°dˇŒ
 
	$_Lazy_glGëTexP¨amëîIuivEXT
(
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLuöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëTexP¨amëîIuivEXT
—¨gë,Ö«me,Ö¨ams);
	}
}

4311 
__°dˇŒ
 
	$_Lazy_glCÀ¨Cﬁ‹IiEXT
(
GLöt
 
ªd
, GLöà
gªí
, GLöà
blue
, GLöà
Æpha
Ë{i‡(
	`GLìInô
()Ë
	`glCÀ¨Cﬁ‹IiEXT
‘ed, gªí, blue,áÕha);
	}
}

4312 
__°dˇŒ
 
	$_Lazy_glCÀ¨Cﬁ‹IuiEXT
(
GLuöt
 
ªd
, GLuöà
gªí
, GLuöà
blue
, GLuöà
Æpha
Ë{i‡(
	`GLìInô
()Ë
	`glCÀ¨Cﬁ‹IuiEXT
‘ed, gªí, blue,áÕha);
	}
}

4313 
PFNGLTEXPARAMETERIIVEXTPROC
 
	gpglTexP¨amëîIivEXT
=
_Lazy_glTexP¨amëîIivEXT
;

4314 
PFNGLTEXPARAMETERIUIVEXTPROC
 
	gpglTexP¨amëîIuivEXT
=
_Lazy_glTexP¨amëîIuivEXT
;

4315 
PFNGLGETTEXPARAMETERIIVEXTPROC
 
	gpglGëTexP¨amëîIivEXT
=
_Lazy_glGëTexP¨amëîIivEXT
;

4316 
PFNGLGETTEXPARAMETERIUIVEXTPROC
 
	gpglGëTexP¨amëîIuivEXT
=
_Lazy_glGëTexP¨amëîIuivEXT
;

4317 
PFNGLCLEARCOLORIIEXTPROC
 
	gpglCÀ¨Cﬁ‹IiEXT
=
_Lazy_glCÀ¨Cﬁ‹IiEXT
;

4318 
PFNGLCLEARCOLORIUIEXTPROC
 
	gpglCÀ¨Cﬁ‹IuiEXT
=
_Lazy_glCÀ¨Cﬁ‹IuiEXT
;

4323 #ifde‡
__GLEE_GL_NV_dïth_buf„r_Êﬂt


4324 
__°dˇŒ
 
	$_Lazy_glDïthR™gedNV
(
GLdoubÀ
 
zNór
, GLdoubÀ 
zF¨
Ë{i‡(
	`GLìInô
()Ë
	`glDïthR™gedNV
(zNór, zF¨);
	}
}

4325 
__°dˇŒ
 
	$_Lazy_glCÀ¨DïthdNV
(
GLdoubÀ
 
dïth
Ë{i‡(
	`GLìInô
()Ë
	`glCÀ¨DïthdNV
(dïth);
	}
}

4326 
__°dˇŒ
 
	$_Lazy_glDïthBoundsdNV
(
GLdoubÀ
 
zmö
, GLdoubÀ 
zmax
Ë{i‡(
	`GLìInô
()Ë
	`glDïthBoundsdNV
(zmö, zmax);
	}
}

4327 
PFNGLDEPTHRANGEDNVPROC
 
	gpglDïthR™gedNV
=
_Lazy_glDïthR™gedNV
;

4328 
PFNGLCLEARDEPTHDNVPROC
 
	gpglCÀ¨DïthdNV
=
_Lazy_glCÀ¨DïthdNV
;

4329 
PFNGLDEPTHBOUNDSDNVPROC
 
	gpglDïthBoundsdNV
=
_Lazy_glDïthBoundsdNV
;

4334 #ifde‡
__GLEE_GL_EXT_ãxtuª_com¥essi⁄_œtc


4339 #ifde‡
__GLEE_GL_NV_å™sf‹m_„edback


4340 
__°dˇŒ
 
	$_Lazy_glBegöTønsf‹mFìdbackNV
(
GLíum
 
¥imôiveMode
Ë{i‡(
	`GLìInô
()Ë
	`glBegöTønsf‹mFìdbackNV
’rimôiveMode);
	}
}

4341 
__°dˇŒ
 
	$_Lazy_glEndTønsf‹mFìdbackNV
(Ë{i‡(
	`GLìInô
()Ë
	`glEndTønsf‹mFìdbackNV
();
	}
}

4342 
__°dˇŒ
 
	$_Lazy_glTønsf‹mFìdbackAâribsNV
(
GLuöt
 
cou¡
, c⁄° 
GLöt
 * 
©åibs
, 
GLíum
 
buf„rMode
Ë{i‡(
	`GLìInô
()Ë
	`glTønsf‹mFìdbackAâribsNV
(cou¡,áâribs, buf„rMode);
	}
}

4343 
__°dˇŒ
 
	$_Lazy_glBödBuf„rR™geNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, GLuöà
buf„r
, 
GLöçå
 
off£t
, 
GLsizeùå
 
size
Ë{i‡(
	`GLìInô
()Ë
	`glBödBuf„rR™geNV
—¨gë, index, buf„r, off£t, size);
	}
}

4344 
__°dˇŒ
 
	$_Lazy_glBödBuf„rOff£tNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, GLuöà
buf„r
, 
GLöçå
 
off£t
Ë{i‡(
	`GLìInô
()Ë
	`glBödBuf„rOff£tNV
—¨gë, index, buf„r, off£t);
	}
}

4345 
__°dˇŒ
 
	$_Lazy_glBödBuf„rBa£NV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, GLuöà
buf„r
Ë{i‡(
	`GLìInô
()Ë
	`glBödBuf„rBa£NV
—¨gë, index, buf„r);
	}
}

4346 
__°dˇŒ
 
	$_Lazy_glTønsf‹mFìdbackV¨yögsNV
(
GLuöt
 
¥ogøm
, 
GLsizei
 
cou¡
, c⁄° 
GLöt
 * 
loˇti⁄s
, 
GLíum
 
buf„rMode
Ë{i‡(
	`GLìInô
()Ë
	`glTønsf‹mFìdbackV¨yögsNV
’rogøm, cou¡,Üoˇti⁄s, buf„rMode);
	}
}

4347 
__°dˇŒ
 
	$_Lazy_glA˘iveV¨yögNV
(
GLuöt
 
¥ogøm
, c⁄° 
GLch¨
 * 
«me
Ë{i‡(
	`GLìInô
()Ë
	`glA˘iveV¨yögNV
’rogøm,Çame);
	}
}

4348 
GLöt
 
__°dˇŒ
 
	$_Lazy_glGëV¨yögLoˇti⁄NV
(
GLuöt
 
¥ogøm
, c⁄° 
GLch¨
 * 
«me
Ë{i‡(
	`GLìInô
()Ë 
	`glGëV¨yögLoˇti⁄NV
’rogøm,Çame);  (
GLöt
)0;
	}
}

4349 
__°dˇŒ
 
	$_Lazy_glGëA˘iveV¨yögNV
(
GLuöt
 
¥ogøm
, GLuöà
ödex
, 
GLsizei
 
bufSize
, GLsizeò* 
Àngth
, GLsizeò* 
size
, 
GLíum
 * 
ty≥
, 
GLch¨
 * 
«me
Ë{i‡(
	`GLìInô
()Ë
	`glGëA˘iveV¨yögNV
’rogøm, index, bufSize,Üígth, size,Åy≥,Çame);
	}
}

4350 
__°dˇŒ
 
	$_Lazy_glGëTønsf‹mFìdbackV¨yögNV
(
GLuöt
 
¥ogøm
, GLuöà
ödex
, 
GLöt
 * 
loˇti⁄
Ë{i‡(
	`GLìInô
()Ë
	`glGëTønsf‹mFìdbackV¨yögNV
’rogøm, index,Üoˇti⁄);
	}
}

4351 
PFNGLBEGINTRANSFORMFEEDBACKNVPROC
 
	gpglBegöTønsf‹mFìdbackNV
=
_Lazy_glBegöTønsf‹mFìdbackNV
;

4352 
PFNGLENDTRANSFORMFEEDBACKNVPROC
 
	gpglEndTønsf‹mFìdbackNV
=
_Lazy_glEndTønsf‹mFìdbackNV
;

4353 
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC
 
	gpglTønsf‹mFìdbackAâribsNV
=
_Lazy_glTønsf‹mFìdbackAâribsNV
;

4354 
PFNGLBINDBUFFERRANGENVPROC
 
	gpglBödBuf„rR™geNV
=
_Lazy_glBödBuf„rR™geNV
;

4355 
PFNGLBINDBUFFEROFFSETNVPROC
 
	gpglBödBuf„rOff£tNV
=
_Lazy_glBödBuf„rOff£tNV
;

4356 
PFNGLBINDBUFFERBASENVPROC
 
	gpglBödBuf„rBa£NV
=
_Lazy_glBödBuf„rBa£NV
;

4357 
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC
 
	gpglTønsf‹mFìdbackV¨yögsNV
=
_Lazy_glTønsf‹mFìdbackV¨yögsNV
;

4358 
PFNGLACTIVEVARYINGNVPROC
 
	gpglA˘iveV¨yögNV
=
_Lazy_glA˘iveV¨yögNV
;

4359 
PFNGLGETVARYINGLOCATIONNVPROC
 
	gpglGëV¨yögLoˇti⁄NV
=
_Lazy_glGëV¨yögLoˇti⁄NV
;

4360 
PFNGLGETACTIVEVARYINGNVPROC
 
	gpglGëA˘iveV¨yögNV
=
_Lazy_glGëA˘iveV¨yögNV
;

4361 
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC
 
	gpglGëTønsf‹mFìdbackV¨yögNV
=
_Lazy_glGëTønsf‹mFìdbackV¨yögNV
;

4366 #ifde‡
__GLEE_GL_NV_geomëry_¥ogøm4


4367 
__°dˇŒ
 
	$_Lazy_glProgømVîãxLimôNV
(
GLíum
 
èrgë
, 
GLöt
 
limô
Ë{i‡(
	`GLìInô
()Ë
	`glProgømVîãxLimôNV
—¨gë,Üimô);
	}
}

4368 
PFNGLPROGRAMVERTEXLIMITNVPROC
 
	gpglProgømVîãxLimôNV
=
_Lazy_glProgømVîãxLimôNV
;

4373 #ifde‡
__GLEE_GL_NV_gpu_¥ogøm4


4374 
__°dˇŒ
 
	$_Lazy_glProgømLoˇlP¨amëîI4iNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLöt
 
x
, GLöà
y
, GLöà
z
, GLöà
w
Ë{i‡(
	`GLìInô
()Ë
	`glProgømLoˇlP¨amëîI4iNV
—¨gë, index, x, y, z, w);
	}
}

4375 
__°dˇŒ
 
	$_Lazy_glProgømLoˇlP¨amëîI4ivNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glProgømLoˇlP¨amëîI4ivNV
—¨gë, index,Ö¨ams);
	}
}

4376 
__°dˇŒ
 
	$_Lazy_glProgømLoˇlP¨amëîsI4ivNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glProgømLoˇlP¨amëîsI4ivNV
—¨gë, index, cou¡,Ö¨ams);
	}
}

4377 
__°dˇŒ
 
	$_Lazy_glProgømLoˇlP¨amëîI4uiNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, GLuöà
x
, GLuöà
y
, GLuöà
z
, GLuöà
w
Ë{i‡(
	`GLìInô
()Ë
	`glProgømLoˇlP¨amëîI4uiNV
—¨gë, index, x, y, z, w);
	}
}

4378 
__°dˇŒ
 
	$_Lazy_glProgømLoˇlP¨amëîI4uivNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, c⁄° GLuöà* 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glProgømLoˇlP¨amëîI4uivNV
—¨gë, index,Ö¨ams);
	}
}

4379 
__°dˇŒ
 
	$_Lazy_glProgømLoˇlP¨amëîsI4uivNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° GLuöà* 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glProgømLoˇlP¨amëîsI4uivNV
—¨gë, index, cou¡,Ö¨ams);
	}
}

4380 
__°dˇŒ
 
	$_Lazy_glProgømEnvP¨amëîI4iNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLöt
 
x
, GLöà
y
, GLöà
z
, GLöà
w
Ë{i‡(
	`GLìInô
()Ë
	`glProgømEnvP¨amëîI4iNV
—¨gë, index, x, y, z, w);
	}
}

4381 
__°dˇŒ
 
	$_Lazy_glProgømEnvP¨amëîI4ivNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glProgømEnvP¨amëîI4ivNV
—¨gë, index,Ö¨ams);
	}
}

4382 
__°dˇŒ
 
	$_Lazy_glProgømEnvP¨amëîsI4ivNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glProgømEnvP¨amëîsI4ivNV
—¨gë, index, cou¡,Ö¨ams);
	}
}

4383 
__°dˇŒ
 
	$_Lazy_glProgømEnvP¨amëîI4uiNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, GLuöà
x
, GLuöà
y
, GLuöà
z
, GLuöà
w
Ë{i‡(
	`GLìInô
()Ë
	`glProgømEnvP¨amëîI4uiNV
—¨gë, index, x, y, z, w);
	}
}

4384 
__°dˇŒ
 
	$_Lazy_glProgømEnvP¨amëîI4uivNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, c⁄° GLuöà* 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glProgømEnvP¨amëîI4uivNV
—¨gë, index,Ö¨ams);
	}
}

4385 
__°dˇŒ
 
	$_Lazy_glProgømEnvP¨amëîsI4uivNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLsizei
 
cou¡
, c⁄° GLuöà* 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glProgømEnvP¨amëîsI4uivNV
—¨gë, index, cou¡,Ö¨ams);
	}
}

4386 
__°dˇŒ
 
	$_Lazy_glGëProgømLoˇlP¨amëîIivNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømLoˇlP¨amëîIivNV
—¨gë, index,Ö¨ams);
	}
}

4387 
__°dˇŒ
 
	$_Lazy_glGëProgømLoˇlP¨amëîIuivNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, GLuöà* 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømLoˇlP¨amëîIuivNV
—¨gë, index,Ö¨ams);
	}
}

4388 
__°dˇŒ
 
	$_Lazy_glGëProgømEnvP¨amëîIivNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømEnvP¨amëîIivNV
—¨gë, index,Ö¨ams);
	}
}

4389 
__°dˇŒ
 
	$_Lazy_glGëProgømEnvP¨amëîIuivNV
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, GLuöà* 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëProgømEnvP¨amëîIuivNV
—¨gë, index,Ö¨ams);
	}
}

4390 
PFNGLPROGRAMLOCALPARAMETERI4INVPROC
 
	gpglProgømLoˇlP¨amëîI4iNV
=
_Lazy_glProgømLoˇlP¨amëîI4iNV
;

4391 
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC
 
	gpglProgømLoˇlP¨amëîI4ivNV
=
_Lazy_glProgømLoˇlP¨amëîI4ivNV
;

4392 
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC
 
	gpglProgømLoˇlP¨amëîsI4ivNV
=
_Lazy_glProgømLoˇlP¨amëîsI4ivNV
;

4393 
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC
 
	gpglProgømLoˇlP¨amëîI4uiNV
=
_Lazy_glProgømLoˇlP¨amëîI4uiNV
;

4394 
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC
 
	gpglProgømLoˇlP¨amëîI4uivNV
=
_Lazy_glProgømLoˇlP¨amëîI4uivNV
;

4395 
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC
 
	gpglProgømLoˇlP¨amëîsI4uivNV
=
_Lazy_glProgømLoˇlP¨amëîsI4uivNV
;

4396 
PFNGLPROGRAMENVPARAMETERI4INVPROC
 
	gpglProgømEnvP¨amëîI4iNV
=
_Lazy_glProgømEnvP¨amëîI4iNV
;

4397 
PFNGLPROGRAMENVPARAMETERI4IVNVPROC
 
	gpglProgømEnvP¨amëîI4ivNV
=
_Lazy_glProgømEnvP¨amëîI4ivNV
;

4398 
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC
 
	gpglProgømEnvP¨amëîsI4ivNV
=
_Lazy_glProgømEnvP¨amëîsI4ivNV
;

4399 
PFNGLPROGRAMENVPARAMETERI4UINVPROC
 
	gpglProgømEnvP¨amëîI4uiNV
=
_Lazy_glProgømEnvP¨amëîI4uiNV
;

4400 
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC
 
	gpglProgømEnvP¨amëîI4uivNV
=
_Lazy_glProgømEnvP¨amëîI4uivNV
;

4401 
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC
 
	gpglProgømEnvP¨amëîsI4uivNV
=
_Lazy_glProgømEnvP¨amëîsI4uivNV
;

4402 
PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC
 
	gpglGëProgømLoˇlP¨amëîIivNV
=
_Lazy_glGëProgømLoˇlP¨amëîIivNV
;

4403 
PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC
 
	gpglGëProgømLoˇlP¨amëîIuivNV
=
_Lazy_glGëProgømLoˇlP¨amëîIuivNV
;

4404 
PFNGLGETPROGRAMENVPARAMETERIIVNVPROC
 
	gpglGëProgømEnvP¨amëîIivNV
=
_Lazy_glGëProgømEnvP¨amëîIivNV
;

4405 
PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC
 
	gpglGëProgømEnvP¨amëîIuivNV
=
_Lazy_glGëProgømEnvP¨amëîIuivNV
;

4410 #ifde‡
__GLEE_GL_NV_‰amebuf„r_mu…ißm∂e_covîage


4411 
__°dˇŒ
 
	$_Lazy_glRídîbuf„rSt‹ageMu…ißm∂eCovîageNV
(
GLíum
 
èrgë
, 
GLsizei
 
covîageSam∂es
, GLsizeò
cﬁ‹Sam∂es
, GLíum 
öã∫Æf‹m©
, GLsizeò
width
, GLsizeò
height
Ë{i‡(
	`GLìInô
()Ë
	`glRídîbuf„rSt‹ageMu…ißm∂eCovîageNV
—¨gë, covîageSam∂es, cﬁ‹Sam∂es, i¡î«lf‹m©, width, height);
	}
}

4412 
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC
 
	gpglRídîbuf„rSt‹ageMu…ißm∂eCovîageNV
=
_Lazy_glRídîbuf„rSt‹ageMu…ißm∂eCovîageNV
;

4417 #ifde‡
__GLEE_GL_EXT_‰amebuf„r_mu…ißm∂e


4418 
__°dˇŒ
 
	$_Lazy_glRídîbuf„rSt‹ageMu…ißm∂eEXT
(
GLíum
 
èrgë
, 
GLsizei
 
ßm∂es
, GLíum 
öã∫Æf‹m©
, GLsizeò
width
, GLsizeò
height
Ë{i‡(
	`GLìInô
()Ë
	`glRídîbuf„rSt‹ageMu…ißm∂eEXT
—¨gë, sam∂es, i¡î«lf‹m©, width, height);
	}
}

4419 
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
 
	gpglRídîbuf„rSt‹ageMu…ißm∂eEXT
=
_Lazy_glRídîbuf„rSt‹ageMu…ißm∂eEXT
;

4424 #ifde‡
__GLEE_GL_EXT_‰amebuf„r_blô


4425 
__°dˇŒ
 
	$_Lazy_glBlôFømebuf„rEXT
(
GLöt
 
§cX0
, GLöà
§cY0
, GLöà
§cX1
, GLöà
§cY1
, GLöà
d°X0
, GLöà
d°Y0
, GLöà
d°X1
, GLöà
d°Y1
, 
GLbôfõld
 
mask
, 
GLíum
 
fûãr
Ë{i‡(
	`GLìInô
()Ë
	`glBlôFømebuf„rEXT
(§cX0, srcY0, srcX1, srcY1, d°X0, d°Y0, d°X1, d°Y1, mask, fûãr);
	}
}

4426 
PFNGLBLITFRAMEBUFFEREXTPROC
 
	gpglBlôFømebuf„rEXT
=
_Lazy_glBlôFømebuf„rEXT
;

4431 #ifde‡
__GLEE_GL_EXT_ãxtuª_com¥essi⁄_rgtc


4436 #ifde‡
__GLEE_GL_EXT_cﬁ‹_m©rix


4441 #ifde‡
__GLEE_GL_SGIX_ãxtuª_£À˘


4446 #ifde‡
__GLEE_GL_INGR_bÀnd_func_£∑øã


4447 
__°dˇŒ
 
	$_Lazy_glBÀndFuncSï¨©eINGR
(
GLíum
 
sÁ˘‹RGB
, GLíum 
dÁ˘‹RGB
, GLíum 
sÁ˘‹AÕha
, GLíum 
dÁ˘‹AÕha
Ë{i‡(
	`GLìInô
()Ë
	`glBÀndFuncSï¨©eINGR
(sÁ˘‹RGB, dÁ˘‹RGB, sÁ˘‹AÕha, dÁ˘‹AÕha);
	}
}

4448 
PFNGLBLENDFUNCSEPARATEINGRPROC
 
	gpglBÀndFuncSï¨©eINGR
=
_Lazy_glBÀndFuncSï¨©eINGR
;

4453 #ifde‡
__GLEE_GL_SGIX_dïth_∑ss_ö°rumít


4458 #ifde‡
__GLEE_GL_SGIX_igloo_öãrÁ˚


4459 
__°dˇŒ
 
	$_Lazy_glIglooI¡îÁ˚SGIX
(
GLíum
 
≤ame
, c⁄° 
GLvoid
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glIglooI¡îÁ˚SGIX
’«me,Ö¨ams);
	}
}

4460 
PFNGLIGLOOINTERFACESGIXPROC
 
	gpglIglooI¡îÁ˚SGIX
=
_Lazy_glIglooI¡îÁ˚SGIX
;

4465 #ifde‡
__GLEE_GL_EXT_døw_buf„rs2


4466 
__°dˇŒ
 
	$_Lazy_glCﬁ‹MaskIndexedEXT
(
GLuöt
 
ödex
, 
GLboﬁón
 
r
, GLboﬁó¿
g
, GLboﬁó¿
b
, GLboﬁó¿
a
Ë{i‡(
	`GLìInô
()Ë
	`glCﬁ‹MaskIndexedEXT
(ödex,Ñ, g, b,á);
	}
}

4467 
__°dˇŒ
 
	$_Lazy_glGëBoﬁónIndexedvEXT
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLboﬁón
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glGëBoﬁónIndexedvEXT
—¨gë, index, d©a);
	}
}

4468 
__°dˇŒ
 
	$_Lazy_glGëI¡egîIndexedvEXT
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
, 
GLöt
 * 
d©a
Ë{i‡(
	`GLìInô
()Ë
	`glGëI¡egîIndexedvEXT
—¨gë, index, d©a);
	}
}

4469 
__°dˇŒ
 
	$_Lazy_glE«bÀIndexedEXT
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
Ë{i‡(
	`GLìInô
()Ë
	`glE«bÀIndexedEXT
—¨gë, index);
	}
}

4470 
__°dˇŒ
 
	$_Lazy_glDißbÀIndexedEXT
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
Ë{i‡(
	`GLìInô
()Ë
	`glDißbÀIndexedEXT
—¨gë, index);
	}
}

4471 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_glIsE«bÀdIndexedEXT
(
GLíum
 
èrgë
, 
GLuöt
 
ödex
Ë{i‡(
	`GLìInô
()Ë 
	`glIsE«bÀdIndexedEXT
—¨gë, index);  (
GLboﬁón
)0;
	}
}

4472 
PFNGLCOLORMASKINDEXEDEXTPROC
 
	gpglCﬁ‹MaskIndexedEXT
=
_Lazy_glCﬁ‹MaskIndexedEXT
;

4473 
PFNGLGETBOOLEANINDEXEDVEXTPROC
 
	gpglGëBoﬁónIndexedvEXT
=
_Lazy_glGëBoﬁónIndexedvEXT
;

4474 
PFNGLGETINTEGERINDEXEDVEXTPROC
 
	gpglGëI¡egîIndexedvEXT
=
_Lazy_glGëI¡egîIndexedvEXT
;

4475 
PFNGLENABLEINDEXEDEXTPROC
 
	gpglE«bÀIndexedEXT
=
_Lazy_glE«bÀIndexedEXT
;

4476 
PFNGLDISABLEINDEXEDEXTPROC
 
	gpglDißbÀIndexedEXT
=
_Lazy_glDißbÀIndexedEXT
;

4477 
PFNGLISENABLEDINDEXEDEXTPROC
 
	gpglIsE«bÀdIndexedEXT
=
_Lazy_glIsE«bÀdIndexedEXT
;

4482 #ifde‡
__GLEE_GL_NV_∑ømëî_buf„r_obje˘


4483 
__°dˇŒ
 
	$_Lazy_glProgømBuf„rP¨amëîsfvNV
(
GLíum
 
èrgë
, 
GLuöt
 
buf„r
, GLuöà
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glProgømBuf„rP¨amëîsfvNV
—¨gë, buf„r, index, cou¡,Ö¨ams);
	}
}

4484 
__°dˇŒ
 
	$_Lazy_glProgømBuf„rP¨amëîsIivNV
(
GLíum
 
èrgë
, 
GLuöt
 
buf„r
, GLuöà
ödex
, 
GLsizei
 
cou¡
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glProgømBuf„rP¨amëîsIivNV
—¨gë, buf„r, index, cou¡,Ö¨ams);
	}
}

4485 
__°dˇŒ
 
	$_Lazy_glProgømBuf„rP¨amëîsIuivNV
(
GLíum
 
èrgë
, 
GLuöt
 
buf„r
, GLuöà
ödex
, 
GLsizei
 
cou¡
, c⁄° GLuöà* 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glProgømBuf„rP¨amëîsIuivNV
—¨gë, buf„r, index, cou¡,Ö¨ams);
	}
}

4486 
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC
 
	gpglProgømBuf„rP¨amëîsfvNV
=
_Lazy_glProgømBuf„rP¨amëîsfvNV
;

4487 
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC
 
	gpglProgømBuf„rP¨amëîsIivNV
=
_Lazy_glProgømBuf„rP¨amëîsIivNV
;

4488 
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC
 
	gpglProgømBuf„rP¨amëîsIuivNV
=
_Lazy_glProgømBuf„rP¨amëîsIuivNV
;

4493 #ifde‡
__GLEE_GL_EXT_døw_ö°™˚d


4494 
__°dˇŒ
 
	$_Lazy_glDøwAºaysIn°™˚dEXT
(
GLíum
 
mode
, 
GLöt
 
°¨t
, 
GLsizei
 
cou¡
, GLsizeò
¥imcou¡
Ë{i‡(
	`GLìInô
()Ë
	`glDøwAºaysIn°™˚dEXT
(mode, sèπ, cou¡,Örimcou¡);
	}
}

4495 
__°dˇŒ
 
	$_Lazy_glDøwEÀmítsIn°™˚dEXT
(
GLíum
 
mode
, 
GLsizei
 
cou¡
, GLíum 
ty≥
, c⁄° 
GLvoid
 * 
ödi˚s
, GLsizeò
¥imcou¡
Ë{i‡(
	`GLìInô
()Ë
	`glDøwEÀmítsIn°™˚dEXT
(mode, cou¡,Åy≥, indi˚s,Örimcou¡);
	}
}

4496 
PFNGLDRAWARRAYSINSTANCEDEXTPROC
 
	gpglDøwAºaysIn°™˚dEXT
=
_Lazy_glDøwAºaysIn°™˚dEXT
;

4497 
PFNGLDRAWELEMENTSINSTANCEDEXTPROC
 
	gpglDøwEÀmítsIn°™˚dEXT
=
_Lazy_glDøwEÀmítsIn°™˚dEXT
;

4502 #ifde‡
__GLEE_GL_EXT_‰agmít_lightög


4503 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glFøgmítLightModñiEXT
(
GLíum
 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítLightModñiEXT
’«me,Ö¨am);
	}
}

4504 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glFøgmítLightModñfEXT
(
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítLightModñfEXT
’«me,Ö¨am);
	}
}

4505 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glFøgmítLightModñivEXT
(
GLíum
 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítLightModñivEXT
’«me,Ö¨ams);
	}
}

4506 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glFøgmítLightModñfvEXT
(
GLíum
 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítLightModñfvEXT
’«me,Ö¨ams);
	}
}

4507 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glFøgmítLightiEXT
(
GLíum
 
light
, GLíum 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítLightiEXT
÷ight,Ö«me,Ö¨am);
	}
}

4508 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glFøgmítLightfEXT
(
GLíum
 
light
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítLightfEXT
÷ight,Ö«me,Ö¨am);
	}
}

4509 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glFøgmítLightivEXT
(
GLíum
 
light
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítLightivEXT
÷ight,Ö«me,Ö¨ams);
	}
}

4510 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glFøgmítLightfvEXT
(
GLíum
 
light
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítLightfvEXT
÷ight,Ö«me,Ö¨ams);
	}
}

4511 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glGëFøgmítLightivEXT
(
GLíum
 
light
, GLíum 
≤ame
, 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëFøgmítLightivEXT
÷ight,Ö«me,Ö¨ams);
	}
}

4512 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glGëFøgmítLightfvEXT
(
GLíum
 
light
, GLíum 
≤ame
, 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëFøgmítLightfvEXT
÷ight,Ö«me,Ö¨ams);
	}
}

4513 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glFøgmítM©îülfEXT
(
GLíum
 
Á˚
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítM©îülfEXT
(Á˚,Ö«me,Ö¨am);
	}
}

4514 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glFøgmítM©îüliEXT
(
GLíum
 
Á˚
, GLíum 
≤ame
, c⁄° 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítM©îüliEXT
(Á˚,Ö«me,Ö¨am);
	}
}

4515 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glFøgmítM©îülfvEXT
(
GLíum
 
Á˚
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítM©îülfvEXT
(Á˚,Ö«me,Ö¨ams);
	}
}

4516 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glFøgmítM©îülivEXT
(
GLíum
 
Á˚
, GLíum 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítM©îülivEXT
(Á˚,Ö«me,Ö¨ams);
	}
}

4517 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glFøgmítCﬁ‹M©îülEXT
(
GLíum
 
Á˚
, GLíum 
mode
Ë{i‡(
	`GLìInô
()Ë
	`glFøgmítCﬁ‹M©îülEXT
(Á˚, mode);
	}
}

4518 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glGëFøgmítM©îülfvEXT
(
GLíum
 
Á˚
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëFøgmítM©îülfvEXT
(Á˚,Ö«me,Ö¨ams);
	}
}

4519 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glGëFøgmítM©îülivEXT
(
GLíum
 
Á˚
, GLíum 
≤ame
, c⁄° 
GLöt
 * 
∑øms
Ë{i‡(
	`GLìInô
()Ë
	`glGëFøgmítM©îülivEXT
(Á˚,Ö«me,Ö¨ams);
	}
}

4520 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glLightEnviEXT
(
GLíum
 
≤ame
, 
GLöt
 
∑øm
Ë{i‡(
	`GLìInô
()Ë
	`glLightEnviEXT
’«me,Ö¨am);
	}
}

4521 
PFNGLFRAGMENTLIGHTMODELIEXTPROC
 
	gpglFøgmítLightModñiEXT
=
_Lazy_glFøgmítLightModñiEXT
;

4522 
PFNGLFRAGMENTLIGHTMODELFEXTPROC
 
	gpglFøgmítLightModñfEXT
=
_Lazy_glFøgmítLightModñfEXT
;

4523 
PFNGLFRAGMENTLIGHTMODELIVEXTPROC
 
	gpglFøgmítLightModñivEXT
=
_Lazy_glFøgmítLightModñivEXT
;

4524 
PFNGLFRAGMENTLIGHTMODELFVEXTPROC
 
	gpglFøgmítLightModñfvEXT
=
_Lazy_glFøgmítLightModñfvEXT
;

4525 
PFNGLFRAGMENTLIGHTIEXTPROC
 
	gpglFøgmítLightiEXT
=
_Lazy_glFøgmítLightiEXT
;

4526 
PFNGLFRAGMENTLIGHTFEXTPROC
 
	gpglFøgmítLightfEXT
=
_Lazy_glFøgmítLightfEXT
;

4527 
PFNGLFRAGMENTLIGHTIVEXTPROC
 
	gpglFøgmítLightivEXT
=
_Lazy_glFøgmítLightivEXT
;

4528 
PFNGLFRAGMENTLIGHTFVEXTPROC
 
	gpglFøgmítLightfvEXT
=
_Lazy_glFøgmítLightfvEXT
;

4529 
PFNGLGETFRAGMENTLIGHTIVEXTPROC
 
	gpglGëFøgmítLightivEXT
=
_Lazy_glGëFøgmítLightivEXT
;

4530 
PFNGLGETFRAGMENTLIGHTFVEXTPROC
 
	gpglGëFøgmítLightfvEXT
=
_Lazy_glGëFøgmítLightfvEXT
;

4531 
PFNGLFRAGMENTMATERIALFEXTPROC
 
	gpglFøgmítM©îülfEXT
=
_Lazy_glFøgmítM©îülfEXT
;

4532 
PFNGLFRAGMENTMATERIALIEXTPROC
 
	gpglFøgmítM©îüliEXT
=
_Lazy_glFøgmítM©îüliEXT
;

4533 
PFNGLFRAGMENTMATERIALFVEXTPROC
 
	gpglFøgmítM©îülfvEXT
=
_Lazy_glFøgmítM©îülfvEXT
;

4534 
PFNGLFRAGMENTMATERIALIVEXTPROC
 
	gpglFøgmítM©îülivEXT
=
_Lazy_glFøgmítM©îülivEXT
;

4535 
PFNGLFRAGMENTCOLORMATERIALEXTPROC
 
	gpglFøgmítCﬁ‹M©îülEXT
=
_Lazy_glFøgmítCﬁ‹M©îülEXT
;

4536 
PFNGLGETFRAGMENTMATERIALFVEXTPROC
 
	gpglGëFøgmítM©îülfvEXT
=
_Lazy_glGëFøgmítM©îülfvEXT
;

4537 
PFNGLGETFRAGMENTMATERIALIVEXTPROC
 
	gpglGëFøgmítM©îülivEXT
=
_Lazy_glGëFøgmítM©îülivEXT
;

4538 
PFNGLLIGHTENVIEXTPROC
 
	gpglLightEnviEXT
=
_Lazy_glLightEnviEXT
;

4543 #ifde‡
__GLEE_GL_EXT_∑cked_dïth_°ícû


4548 #ifde‡
__GLEE_GL_EXT_s˚√_m¨kî


4549 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glBegöS˚√EXT
(Ë{i‡(
	`GLìInô
()Ë
	`glBegöS˚√EXT
();
	}
}

4550 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glEndS˚√EXT
(Ë{i‡(
	`GLìInô
()Ë
	`glEndS˚√EXT
();
	}
}

4551 
PFNGLBEGINSCENEEXTPROC
 
	gpglBegöS˚√EXT
=
_Lazy_glBegöS˚√EXT
;

4552 
PFNGLENDSCENEEXTPROC
 
	gpglEndS˚√EXT
=
_Lazy_glEndS˚√EXT
;

4557 #ifde‡
__GLEE_GL_EXT_°ícû_˛ór_èg


4562 #ifde‡
__GLEE_GL_EXT_ãxtuª_com¥essi⁄_dxt1


4567 #ifde‡
__GLEE_GL_EXT_ãxtuª_ív


4572 #ifde‡
__GLEE_GL_EXT_ãxtuª_sRGB


4577 #ifde‡
__GLEE_GL_IBM_°©ic_d©a


4582 #ifde‡
__GLEE_GL_MESAX_ãxtuª_°ack


4587 #ifde‡
__GLEE_GL_OES_byã_co‹dö©es


4592 #ifde‡
__GLEE_GL_OES_com¥es£d_∑Àâed_ãxtuª


4597 #ifde‡
__GLEE_GL_OES_sögÀ_¥ecisi⁄


4598 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glDïthR™gefOES
(
GL˛ampf
 
n
, GL˛amp‡
f
Ë{i‡(
	`GLìInô
()Ë
	`glDïthR™gefOES
“, f);
	}
}

4599 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glFru°umfOES
(
GLÊﬂt
 
l
, GLÊﬂà
r
, GLÊﬂà
b
, GLÊﬂà
t
, GLÊﬂà
n
, GLÊﬂà
f
Ë{i‡(
	`GLìInô
()Ë
	`glFru°umfOES
÷,Ñ, b,Å,Ç, f);
	}
}

4600 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glOπhofOES
(
GLÊﬂt
 
l
, GLÊﬂà
r
, GLÊﬂà
b
, GLÊﬂà
t
, GLÊﬂà
n
, GLÊﬂà
f
Ë{i‡(
	`GLìInô
()Ë
	`glOπhofOES
÷,Ñ, b,Å,Ç, f);
	}
}

4601 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glClùPœ√fOES
(
GLíum
 
∂™e
, c⁄° 
GLÊﬂt
* 
equ©i⁄
Ë{i‡(
	`GLìInô
()Ë
	`glClùPœ√fOES
’œ√,Équ©i⁄);
	}
}

4602 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glGëClùPœ√fOES
(
GLíum
 
∂™e
, 
GLÊﬂt
* 
equ©i⁄
Ë{i‡(
	`GLìInô
()Ë
	`glGëClùPœ√fOES
’œ√,Équ©i⁄);
	}
}

4603 
GLvoid
 
__°dˇŒ
 
	$_Lazy_glCÀ¨DïthfOES
(
GL˛ampd
 
dïth
Ë{i‡(
	`GLìInô
()Ë
	`glCÀ¨DïthfOES
(dïth);
	}
}

4604 
PFNGLDEPTHRANGEFOESPROC
 
	gpglDïthR™gefOES
=
_Lazy_glDïthR™gefOES
;

4605 
PFNGLFRUSTUMFOESPROC
 
	gpglFru°umfOES
=
_Lazy_glFru°umfOES
;

4606 
PFNGLORTHOFOESPROC
 
	gpglOπhofOES
=
_Lazy_glOπhofOES
;

4607 
PFNGLCLIPPLANEFOESPROC
 
	gpglClùPœ√fOES
=
_Lazy_glClùPœ√fOES
;

4608 
PFNGLGETCLIPPLANEFOESPROC
 
	gpglGëClùPœ√fOES
=
_Lazy_glGëClùPœ√fOES
;

4609 
PFNGLCLEARDEPTHFOESPROC
 
	gpglCÀ¨DïthfOES
=
_Lazy_glCÀ¨DïthfOES
;

4614 #ifde‡
__GLEE_GL_SGIX_pixñ_ãxtuª_bôs


4619 #ifde‡
__GLEE_GL_SGIX_ãxtuª_ønge


4624 #ifde‡
WIN32


4628 
GLboﬁón
 
	g_GLEE_WGL_ARB_buf„r_ªgi⁄
 = 
GL_FALSE
;

4629 
GLboﬁón
 
	g_GLEE_WGL_ARB_mu…ißm∂e
 = 
GL_FALSE
;

4630 
GLboﬁón
 
	g_GLEE_WGL_ARB_exãnsi⁄s_°rög
 = 
GL_FALSE
;

4631 
GLboﬁón
 
	g_GLEE_WGL_ARB_pixñ_f‹m©
 = 
GL_FALSE
;

4632 
GLboﬁón
 
	g_GLEE_WGL_ARB_make_cuºít_ªad
 = 
GL_FALSE
;

4633 
GLboﬁón
 
	g_GLEE_WGL_ARB_pbuf„r
 = 
GL_FALSE
;

4634 
GLboﬁón
 
	g_GLEE_WGL_ARB_ªndî_ãxtuª
 = 
GL_FALSE
;

4635 
GLboﬁón
 
	g_GLEE_WGL_ARB_pixñ_f‹m©_Êﬂt
 = 
GL_FALSE
;

4636 
GLboﬁón
 
	g_GLEE_WGL_EXT_make_cuºít_ªad
 = 
GL_FALSE
;

4637 
GLboﬁón
 
	g_GLEE_WGL_EXT_pixñ_f‹m©
 = 
GL_FALSE
;

4638 
GLboﬁón
 
	g_GLEE_WGL_EXT_pbuf„r
 = 
GL_FALSE
;

4639 
GLboﬁón
 
	g_GLEE_WGL_EXT_dïth_Êﬂt
 = 
GL_FALSE
;

4640 
GLboﬁón
 
	g_GLEE_WGL_3DFX_mu…ißm∂e
 = 
GL_FALSE
;

4641 
GLboﬁón
 
	g_GLEE_WGL_EXT_mu…ißm∂e
 = 
GL_FALSE
;

4642 
GLboﬁón
 
	g_GLEE_WGL_I3D_digôÆ_video_c⁄åﬁ
 = 
GL_FALSE
;

4643 
GLboﬁón
 
	g_GLEE_WGL_I3D_gamma
 = 
GL_FALSE
;

4644 
GLboﬁón
 
	g_GLEE_WGL_I3D_gílock
 = 
GL_FALSE
;

4645 
GLboﬁón
 
	g_GLEE_WGL_I3D_image_buf„r
 = 
GL_FALSE
;

4646 
GLboﬁón
 
	g_GLEE_WGL_I3D_sw≠_‰ame_lock
 = 
GL_FALSE
;

4647 
GLboﬁón
 
	g_GLEE_WGL_NV_ªndî_dïth_ãxtuª
 = 
GL_FALSE
;

4648 
GLboﬁón
 
	g_GLEE_WGL_NV_ªndî_ãxtuª_ª˘™gÀ
 = 
GL_FALSE
;

4649 
GLboﬁón
 
	g_GLEE_WGL_ATI_pixñ_f‹m©_Êﬂt
 = 
GL_FALSE
;

4650 
GLboﬁón
 
	g_GLEE_WGL_NV_Êﬂt_buf„r
 = 
GL_FALSE
;

4651 
GLboﬁón
 
	g_GLEE_WGL_EXT_di•œy_cﬁ‹_èbÀ
 = 
GL_FALSE
;

4652 
GLboﬁón
 
	g_GLEE_WGL_EXT_exãnsi⁄s_°rög
 = 
GL_FALSE
;

4653 
GLboﬁón
 
	g_GLEE_WGL_EXT_sw≠_c⁄åﬁ
 = 
GL_FALSE
;

4654 
GLboﬁón
 
	g_GLEE_WGL_NV_vîãx_¨øy_ønge
 = 
GL_FALSE
;

4655 
GLboﬁón
 
	g_GLEE_WGL_OML_sync_c⁄åﬁ
 = 
GL_FALSE
;

4656 
GLboﬁón
 
	g_GLEE_WGL_I3D_sw≠_‰ame_ußge
 = 
GL_FALSE
;

4657 
GLboﬁón
 
	g_GLEE_WGL_3DL_°îeo_c⁄åﬁ
 = 
GL_FALSE
;

4661 
	g__GLìWGLExãnsi⁄Names
[30][32]={

4693 
	g__GLìWGLNumExãnsi⁄s
=30;

4697 #ifde‡
__GLEE_WGL_ARB_buf„r_ªgi⁄


4698 
HANDLE
 
__°dˇŒ
 
	$_Lazy_wglCª©eBuf„rRegi⁄ARB
(
HDC
 
hDC
, 
iLayîPœ√
, 
UINT
 
uTy≥
Ë{i‡(
	`GLìInô
()Ë 
	`wglCª©eBuf„rRegi⁄ARB
(hDC, iLayîPœ√, uTy≥);  (
HANDLE
)0;
	}
}

4699 
VOID
 
__°dˇŒ
 
	$_Lazy_wglDñëeBuf„rRegi⁄ARB
(
HANDLE
 
hRegi⁄
Ë{i‡(
	`GLìInô
()Ë
	`wglDñëeBuf„rRegi⁄ARB
(hRegi⁄);
	}
}

4700 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglSaveBuf„rRegi⁄ARB
(
HANDLE
 
hRegi⁄
, 
x
, 
y
, 
width
, 
height
Ë{i‡(
	`GLìInô
()Ë 
	`wglSaveBuf„rRegi⁄ARB
(hRegi⁄, x, y, width, height);  (
BOOL
)0;
	}
}

4701 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglRe°‹eBuf„rRegi⁄ARB
(
HANDLE
 
hRegi⁄
, 
x
, 
y
, 
width
, 
height
, 
xSrc
, 
ySrc
Ë{i‡(
	`GLìInô
()Ë 
	`wglRe°‹eBuf„rRegi⁄ARB
(hRegi⁄, x, y, width, height, xSrc, ySrc);  (
BOOL
)0;
	}
}

4702 
PFNWGLCREATEBUFFERREGIONARBPROC
 
	gpwglCª©eBuf„rRegi⁄ARB
=
_Lazy_wglCª©eBuf„rRegi⁄ARB
;

4703 
PFNWGLDELETEBUFFERREGIONARBPROC
 
	gpwglDñëeBuf„rRegi⁄ARB
=
_Lazy_wglDñëeBuf„rRegi⁄ARB
;

4704 
PFNWGLSAVEBUFFERREGIONARBPROC
 
	gpwglSaveBuf„rRegi⁄ARB
=
_Lazy_wglSaveBuf„rRegi⁄ARB
;

4705 
PFNWGLRESTOREBUFFERREGIONARBPROC
 
	gpwglRe°‹eBuf„rRegi⁄ARB
=
_Lazy_wglRe°‹eBuf„rRegi⁄ARB
;

4710 #ifde‡
__GLEE_WGL_ARB_mu…ißm∂e


4715 #ifde‡
__GLEE_WGL_ARB_exãnsi⁄s_°rög


4716 c⁄° * 
__°dˇŒ
 
	$_Lazy_wglGëExãnsi⁄sSåögARB
(
HDC
 
hdc
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëExãnsi⁄sSåögARB
(hdc);  (c⁄° *)0;
	}
}

4717 
PFNWGLGETEXTENSIONSSTRINGARBPROC
 
	gpwglGëExãnsi⁄sSåögARB
=
_Lazy_wglGëExãnsi⁄sSåögARB
;

4722 #ifde‡
__GLEE_WGL_ARB_pixñ_f‹m©


4723 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGëPixñF‹m©AâribivARB
(
HDC
 
hdc
, 
iPixñF‹m©
, 
iLayîPœ√
, 
UINT
 
nAâribuãs
, c⁄° * 
piAâribuãs
, * 
piVÆues
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëPixñF‹m©AâribivARB
(hdc, iPixñF‹m©, iLayîPœ√,ÇAâribuãs,ÖiAâribuãs,ÖiVÆues);  (
BOOL
)0;
	}
}

4724 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGëPixñF‹m©AâribfvARB
(
HDC
 
hdc
, 
iPixñF‹m©
, 
iLayîPœ√
, 
UINT
 
nAâribuãs
, c⁄° * 
piAâribuãs
, 
FLOAT
 * 
pfVÆues
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëPixñF‹m©AâribfvARB
(hdc, iPixñF‹m©, iLayîPœ√,ÇAâribuãs,ÖiAâribuãs,ÖfVÆues);  (
BOOL
)0;
	}
}

4725 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglChoo£PixñF‹m©ARB
(
HDC
 
hdc
, c⁄° * 
piAâribILi°
, c⁄° 
FLOAT
 * 
pfAâribFLi°
, 
UINT
 
nMaxF‹m©s
, * 
piF‹m©s
, UINT * 
nNumF‹m©s
Ë{i‡(
	`GLìInô
()Ë 
	`wglChoo£PixñF‹m©ARB
(hdc,ÖiAâribILi°,ÖfAâribFLi°,ÇMaxF‹m©s,ÖiF‹m©s,ÇNumF‹m©s);  (
BOOL
)0;
	}
}

4726 
PFNWGLGETPIXELFORMATATTRIBIVARBPROC
 
	gpwglGëPixñF‹m©AâribivARB
=
_Lazy_wglGëPixñF‹m©AâribivARB
;

4727 
PFNWGLGETPIXELFORMATATTRIBFVARBPROC
 
	gpwglGëPixñF‹m©AâribfvARB
=
_Lazy_wglGëPixñF‹m©AâribfvARB
;

4728 
PFNWGLCHOOSEPIXELFORMATARBPROC
 
	gpwglChoo£PixñF‹m©ARB
=
_Lazy_wglChoo£PixñF‹m©ARB
;

4733 #ifde‡
__GLEE_WGL_ARB_make_cuºít_ªad


4734 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglMakeC⁄ãxtCuºítARB
(
HDC
 
hDøwDC
, HDC 
hRódDC
, 
HGLRC
 
hgÃc
Ë{i‡(
	`GLìInô
()Ë 
	`wglMakeC⁄ãxtCuºítARB
(hDøwDC, hRódDC, hgÃc);  (
BOOL
)0;
	}
}

4735 
HDC
 
__°dˇŒ
 
	$_Lazy_wglGëCuºítRódDCARB
(Ë{i‡(
	`GLìInô
()Ë 
	`wglGëCuºítRódDCARB
();  (
HDC
)0;
	}
}

4736 
PFNWGLMAKECONTEXTCURRENTARBPROC
 
	gpwglMakeC⁄ãxtCuºítARB
=
_Lazy_wglMakeC⁄ãxtCuºítARB
;

4737 
PFNWGLGETCURRENTREADDCARBPROC
 
	gpwglGëCuºítRódDCARB
=
_Lazy_wglGëCuºítRódDCARB
;

4742 #ifde‡
__GLEE_WGL_ARB_pbuf„r


4743 
HPBUFFERARB
 
__°dˇŒ
 
	$_Lazy_wglCª©ePbuf„rARB
(
HDC
 
hDC
, 
iPixñF‹m©
, 
iWidth
, 
iHeight
, c⁄° * 
piAâribLi°
Ë{i‡(
	`GLìInô
()Ë 
	`wglCª©ePbuf„rARB
(hDC, iPixñF‹m©, iWidth, iHeight,ÖiAâribLi°);  (
HPBUFFERARB
)0;
	}
}

4744 
HDC
 
__°dˇŒ
 
	$_Lazy_wglGëPbuf„rDCARB
(
HPBUFFERARB
 
hPbuf„r
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëPbuf„rDCARB
(hPbuf„r);  (
HDC
)0;
	}
}

4745 
__°dˇŒ
 
	$_Lazy_wglRñó£Pbuf„rDCARB
(
HPBUFFERARB
 
hPbuf„r
, 
HDC
 
hDC
Ë{i‡(
	`GLìInô
()Ë 
	`wglRñó£Pbuf„rDCARB
(hPbuf„r, hDC);  ()0;
	}
}

4746 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglDe°royPbuf„rARB
(
HPBUFFERARB
 
hPbuf„r
Ë{i‡(
	`GLìInô
()Ë 
	`wglDe°royPbuf„rARB
(hPbuf„r);  (
BOOL
)0;
	}
}

4747 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglQuîyPbuf„rARB
(
HPBUFFERARB
 
hPbuf„r
, 
iAâribuã
, * 
piVÆue
Ë{i‡(
	`GLìInô
()Ë 
	`wglQuîyPbuf„rARB
(hPbuf„r, iAâribuã,ÖiVÆue);  (
BOOL
)0;
	}
}

4748 
PFNWGLCREATEPBUFFERARBPROC
 
	gpwglCª©ePbuf„rARB
=
_Lazy_wglCª©ePbuf„rARB
;

4749 
PFNWGLGETPBUFFERDCARBPROC
 
	gpwglGëPbuf„rDCARB
=
_Lazy_wglGëPbuf„rDCARB
;

4750 
PFNWGLRELEASEPBUFFERDCARBPROC
 
	gpwglRñó£Pbuf„rDCARB
=
_Lazy_wglRñó£Pbuf„rDCARB
;

4751 
PFNWGLDESTROYPBUFFERARBPROC
 
	gpwglDe°royPbuf„rARB
=
_Lazy_wglDe°royPbuf„rARB
;

4752 
PFNWGLQUERYPBUFFERARBPROC
 
	gpwglQuîyPbuf„rARB
=
_Lazy_wglQuîyPbuf„rARB
;

4757 #ifde‡
__GLEE_WGL_ARB_ªndî_ãxtuª


4758 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglBödTexImageARB
(
HPBUFFERARB
 
hPbuf„r
, 
iBuf„r
Ë{i‡(
	`GLìInô
()Ë 
	`wglBödTexImageARB
(hPbuf„r, iBuf„r);  (
BOOL
)0;
	}
}

4759 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglRñó£TexImageARB
(
HPBUFFERARB
 
hPbuf„r
, 
iBuf„r
Ë{i‡(
	`GLìInô
()Ë 
	`wglRñó£TexImageARB
(hPbuf„r, iBuf„r);  (
BOOL
)0;
	}
}

4760 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglSëPbuf„rAâribARB
(
HPBUFFERARB
 
hPbuf„r
, c⁄° * 
piAâribLi°
Ë{i‡(
	`GLìInô
()Ë 
	`wglSëPbuf„rAâribARB
(hPbuf„r,ÖiAâribLi°);  (
BOOL
)0;
	}
}

4761 
PFNWGLBINDTEXIMAGEARBPROC
 
	gpwglBödTexImageARB
=
_Lazy_wglBödTexImageARB
;

4762 
PFNWGLRELEASETEXIMAGEARBPROC
 
	gpwglRñó£TexImageARB
=
_Lazy_wglRñó£TexImageARB
;

4763 
PFNWGLSETPBUFFERATTRIBARBPROC
 
	gpwglSëPbuf„rAâribARB
=
_Lazy_wglSëPbuf„rAâribARB
;

4768 #ifde‡
__GLEE_WGL_ARB_pixñ_f‹m©_Êﬂt


4773 #ifde‡
__GLEE_WGL_EXT_make_cuºít_ªad


4774 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglMakeC⁄ãxtCuºítEXT
(
HDC
 
hDøwDC
, HDC 
hRódDC
, 
HGLRC
 
hgÃc
Ë{i‡(
	`GLìInô
()Ë 
	`wglMakeC⁄ãxtCuºítEXT
(hDøwDC, hRódDC, hgÃc);  (
BOOL
)0;
	}
}

4775 
HDC
 
__°dˇŒ
 
	$_Lazy_wglGëCuºítRódDCEXT
(Ë{i‡(
	`GLìInô
()Ë 
	`wglGëCuºítRódDCEXT
();  (
HDC
)0;
	}
}

4776 
PFNWGLMAKECONTEXTCURRENTEXTPROC
 
	gpwglMakeC⁄ãxtCuºítEXT
=
_Lazy_wglMakeC⁄ãxtCuºítEXT
;

4777 
PFNWGLGETCURRENTREADDCEXTPROC
 
	gpwglGëCuºítRódDCEXT
=
_Lazy_wglGëCuºítRódDCEXT
;

4782 #ifde‡
__GLEE_WGL_EXT_pixñ_f‹m©


4783 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGëPixñF‹m©AâribivEXT
(
HDC
 
hdc
, 
iPixñF‹m©
, 
iLayîPœ√
, 
UINT
 
nAâribuãs
, * 
piAâribuãs
, * 
piVÆues
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëPixñF‹m©AâribivEXT
(hdc, iPixñF‹m©, iLayîPœ√,ÇAâribuãs,ÖiAâribuãs,ÖiVÆues);  (
BOOL
)0;
	}
}

4784 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGëPixñF‹m©AâribfvEXT
(
HDC
 
hdc
, 
iPixñF‹m©
, 
iLayîPœ√
, 
UINT
 
nAâribuãs
, * 
piAâribuãs
, 
FLOAT
 * 
pfVÆues
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëPixñF‹m©AâribfvEXT
(hdc, iPixñF‹m©, iLayîPœ√,ÇAâribuãs,ÖiAâribuãs,ÖfVÆues);  (
BOOL
)0;
	}
}

4785 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglChoo£PixñF‹m©EXT
(
HDC
 
hdc
, c⁄° * 
piAâribILi°
, c⁄° 
FLOAT
 * 
pfAâribFLi°
, 
UINT
 
nMaxF‹m©s
, * 
piF‹m©s
, UINT * 
nNumF‹m©s
Ë{i‡(
	`GLìInô
()Ë 
	`wglChoo£PixñF‹m©EXT
(hdc,ÖiAâribILi°,ÖfAâribFLi°,ÇMaxF‹m©s,ÖiF‹m©s,ÇNumF‹m©s);  (
BOOL
)0;
	}
}

4786 
PFNWGLGETPIXELFORMATATTRIBIVEXTPROC
 
	gpwglGëPixñF‹m©AâribivEXT
=
_Lazy_wglGëPixñF‹m©AâribivEXT
;

4787 
PFNWGLGETPIXELFORMATATTRIBFVEXTPROC
 
	gpwglGëPixñF‹m©AâribfvEXT
=
_Lazy_wglGëPixñF‹m©AâribfvEXT
;

4788 
PFNWGLCHOOSEPIXELFORMATEXTPROC
 
	gpwglChoo£PixñF‹m©EXT
=
_Lazy_wglChoo£PixñF‹m©EXT
;

4793 #ifde‡
__GLEE_WGL_EXT_pbuf„r


4794 
HPBUFFEREXT
 
__°dˇŒ
 
	$_Lazy_wglCª©ePbuf„rEXT
(
HDC
 
hDC
, 
iPixñF‹m©
, 
iWidth
, 
iHeight
, c⁄° * 
piAâribLi°
Ë{i‡(
	`GLìInô
()Ë 
	`wglCª©ePbuf„rEXT
(hDC, iPixñF‹m©, iWidth, iHeight,ÖiAâribLi°);  (
HPBUFFEREXT
)0;
	}
}

4795 
HDC
 
__°dˇŒ
 
	$_Lazy_wglGëPbuf„rDCEXT
(
HPBUFFEREXT
 
hPbuf„r
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëPbuf„rDCEXT
(hPbuf„r);  (
HDC
)0;
	}
}

4796 
__°dˇŒ
 
	$_Lazy_wglRñó£Pbuf„rDCEXT
(
HPBUFFEREXT
 
hPbuf„r
, 
HDC
 
hDC
Ë{i‡(
	`GLìInô
()Ë 
	`wglRñó£Pbuf„rDCEXT
(hPbuf„r, hDC);  ()0;
	}
}

4797 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglDe°royPbuf„rEXT
(
HPBUFFEREXT
 
hPbuf„r
Ë{i‡(
	`GLìInô
()Ë 
	`wglDe°royPbuf„rEXT
(hPbuf„r);  (
BOOL
)0;
	}
}

4798 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglQuîyPbuf„rEXT
(
HPBUFFEREXT
 
hPbuf„r
, 
iAâribuã
, * 
piVÆue
Ë{i‡(
	`GLìInô
()Ë 
	`wglQuîyPbuf„rEXT
(hPbuf„r, iAâribuã,ÖiVÆue);  (
BOOL
)0;
	}
}

4799 
PFNWGLCREATEPBUFFEREXTPROC
 
	gpwglCª©ePbuf„rEXT
=
_Lazy_wglCª©ePbuf„rEXT
;

4800 
PFNWGLGETPBUFFERDCEXTPROC
 
	gpwglGëPbuf„rDCEXT
=
_Lazy_wglGëPbuf„rDCEXT
;

4801 
PFNWGLRELEASEPBUFFERDCEXTPROC
 
	gpwglRñó£Pbuf„rDCEXT
=
_Lazy_wglRñó£Pbuf„rDCEXT
;

4802 
PFNWGLDESTROYPBUFFEREXTPROC
 
	gpwglDe°royPbuf„rEXT
=
_Lazy_wglDe°royPbuf„rEXT
;

4803 
PFNWGLQUERYPBUFFEREXTPROC
 
	gpwglQuîyPbuf„rEXT
=
_Lazy_wglQuîyPbuf„rEXT
;

4808 #ifde‡
__GLEE_WGL_EXT_dïth_Êﬂt


4813 #ifde‡
__GLEE_WGL_3DFX_mu…ißm∂e


4818 #ifde‡
__GLEE_WGL_EXT_mu…ißm∂e


4823 #ifde‡
__GLEE_WGL_I3D_digôÆ_video_c⁄åﬁ


4824 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGëDigôÆVideoP¨amëîsI3D
(
HDC
 
hDC
, 
iAâribuã
, * 
piVÆue
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëDigôÆVideoP¨amëîsI3D
(hDC, iAâribuã,ÖiVÆue);  (
BOOL
)0;
	}
}

4825 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglSëDigôÆVideoP¨amëîsI3D
(
HDC
 
hDC
, 
iAâribuã
, c⁄° * 
piVÆue
Ë{i‡(
	`GLìInô
()Ë 
	`wglSëDigôÆVideoP¨amëîsI3D
(hDC, iAâribuã,ÖiVÆue);  (
BOOL
)0;
	}
}

4826 
PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC
 
	gpwglGëDigôÆVideoP¨amëîsI3D
=
_Lazy_wglGëDigôÆVideoP¨amëîsI3D
;

4827 
PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC
 
	gpwglSëDigôÆVideoP¨amëîsI3D
=
_Lazy_wglSëDigôÆVideoP¨amëîsI3D
;

4832 #ifde‡
__GLEE_WGL_I3D_gamma


4833 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGëGammaTabÀP¨amëîsI3D
(
HDC
 
hDC
, 
iAâribuã
, * 
piVÆue
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëGammaTabÀP¨amëîsI3D
(hDC, iAâribuã,ÖiVÆue);  (
BOOL
)0;
	}
}

4834 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglSëGammaTabÀP¨amëîsI3D
(
HDC
 
hDC
, 
iAâribuã
, c⁄° * 
piVÆue
Ë{i‡(
	`GLìInô
()Ë 
	`wglSëGammaTabÀP¨amëîsI3D
(hDC, iAâribuã,ÖiVÆue);  (
BOOL
)0;
	}
}

4835 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGëGammaTabÀI3D
(
HDC
 
hDC
, 
iE¡rõs
, 
USHORT
 * 
puRed
, USHORT * 
puGªí
, USHORT * 
puBlue
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëGammaTabÀI3D
(hDC, iE¡rõs,ÖuRed,ÖuGªí,ÖuBlue);  (
BOOL
)0;
	}
}

4836 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglSëGammaTabÀI3D
(
HDC
 
hDC
, 
iE¡rõs
, c⁄° 
USHORT
 * 
puRed
, c⁄° USHORT * 
puGªí
, c⁄° USHORT * 
puBlue
Ë{i‡(
	`GLìInô
()Ë 
	`wglSëGammaTabÀI3D
(hDC, iE¡rõs,ÖuRed,ÖuGªí,ÖuBlue);  (
BOOL
)0;
	}
}

4837 
PFNWGLGETGAMMATABLEPARAMETERSI3DPROC
 
	gpwglGëGammaTabÀP¨amëîsI3D
=
_Lazy_wglGëGammaTabÀP¨amëîsI3D
;

4838 
PFNWGLSETGAMMATABLEPARAMETERSI3DPROC
 
	gpwglSëGammaTabÀP¨amëîsI3D
=
_Lazy_wglSëGammaTabÀP¨amëîsI3D
;

4839 
PFNWGLGETGAMMATABLEI3DPROC
 
	gpwglGëGammaTabÀI3D
=
_Lazy_wglGëGammaTabÀI3D
;

4840 
PFNWGLSETGAMMATABLEI3DPROC
 
	gpwglSëGammaTabÀI3D
=
_Lazy_wglSëGammaTabÀI3D
;

4845 #ifde‡
__GLEE_WGL_I3D_gílock


4846 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglE«bÀGílockI3D
(
HDC
 
hDC
Ë{i‡(
	`GLìInô
()Ë 
	`wglE«bÀGílockI3D
(hDC);  (
BOOL
)0;
	}
}

4847 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglDißbÀGílockI3D
(
HDC
 
hDC
Ë{i‡(
	`GLìInô
()Ë 
	`wglDißbÀGílockI3D
(hDC);  (
BOOL
)0;
	}
}

4848 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglIsE«bÀdGílockI3D
(
HDC
 
hDC
, 
BOOL
 * 
pFœg
Ë{i‡(
	`GLìInô
()Ë 
	`wglIsE«bÀdGílockI3D
(hDC,ÖFœg);  (BOOL)0;
	}
}

4849 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGílockSour˚I3D
(
HDC
 
hDC
, 
UINT
 
uSour˚
Ë{i‡(
	`GLìInô
()Ë 
	`wglGílockSour˚I3D
(hDC, uSour˚);  (
BOOL
)0;
	}
}

4850 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGëGílockSour˚I3D
(
HDC
 
hDC
, 
UINT
 * 
uSour˚
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëGílockSour˚I3D
(hDC, uSour˚);  (
BOOL
)0;
	}
}

4851 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGílockSour˚EdgeI3D
(
HDC
 
hDC
, 
UINT
 
uEdge
Ë{i‡(
	`GLìInô
()Ë 
	`wglGílockSour˚EdgeI3D
(hDC, uEdge);  (
BOOL
)0;
	}
}

4852 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGëGílockSour˚EdgeI3D
(
HDC
 
hDC
, 
UINT
 * 
uEdge
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëGílockSour˚EdgeI3D
(hDC, uEdge);  (
BOOL
)0;
	}
}

4853 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGílockSam∂eR©eI3D
(
HDC
 
hDC
, 
UINT
 
uR©e
Ë{i‡(
	`GLìInô
()Ë 
	`wglGílockSam∂eR©eI3D
(hDC, uR©e);  (
BOOL
)0;
	}
}

4854 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGëGílockSam∂eR©eI3D
(
HDC
 
hDC
, 
UINT
 * 
uR©e
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëGílockSam∂eR©eI3D
(hDC, uR©e);  (
BOOL
)0;
	}
}

4855 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGílockSour˚DñayI3D
(
HDC
 
hDC
, 
UINT
 
uDñay
Ë{i‡(
	`GLìInô
()Ë 
	`wglGílockSour˚DñayI3D
(hDC, uDñay);  (
BOOL
)0;
	}
}

4856 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGëGílockSour˚DñayI3D
(
HDC
 
hDC
, 
UINT
 * 
uDñay
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëGílockSour˚DñayI3D
(hDC, uDñay);  (
BOOL
)0;
	}
}

4857 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglQuîyGílockMaxSour˚DñayI3D
(
HDC
 
hDC
, 
UINT
 * 
uMaxLöeDñay
, UINT * 
uMaxPixñDñay
Ë{i‡(
	`GLìInô
()Ë 
	`wglQuîyGílockMaxSour˚DñayI3D
(hDC, uMaxLöeDñay, uMaxPixñDñay);  (
BOOL
)0;
	}
}

4858 
PFNWGLENABLEGENLOCKI3DPROC
 
	gpwglE«bÀGílockI3D
=
_Lazy_wglE«bÀGílockI3D
;

4859 
PFNWGLDISABLEGENLOCKI3DPROC
 
	gpwglDißbÀGílockI3D
=
_Lazy_wglDißbÀGílockI3D
;

4860 
PFNWGLISENABLEDGENLOCKI3DPROC
 
	gpwglIsE«bÀdGílockI3D
=
_Lazy_wglIsE«bÀdGílockI3D
;

4861 
PFNWGLGENLOCKSOURCEI3DPROC
 
	gpwglGílockSour˚I3D
=
_Lazy_wglGílockSour˚I3D
;

4862 
PFNWGLGETGENLOCKSOURCEI3DPROC
 
	gpwglGëGílockSour˚I3D
=
_Lazy_wglGëGílockSour˚I3D
;

4863 
PFNWGLGENLOCKSOURCEEDGEI3DPROC
 
	gpwglGílockSour˚EdgeI3D
=
_Lazy_wglGílockSour˚EdgeI3D
;

4864 
PFNWGLGETGENLOCKSOURCEEDGEI3DPROC
 
	gpwglGëGílockSour˚EdgeI3D
=
_Lazy_wglGëGílockSour˚EdgeI3D
;

4865 
PFNWGLGENLOCKSAMPLERATEI3DPROC
 
	gpwglGílockSam∂eR©eI3D
=
_Lazy_wglGílockSam∂eR©eI3D
;

4866 
PFNWGLGETGENLOCKSAMPLERATEI3DPROC
 
	gpwglGëGílockSam∂eR©eI3D
=
_Lazy_wglGëGílockSam∂eR©eI3D
;

4867 
PFNWGLGENLOCKSOURCEDELAYI3DPROC
 
	gpwglGílockSour˚DñayI3D
=
_Lazy_wglGílockSour˚DñayI3D
;

4868 
PFNWGLGETGENLOCKSOURCEDELAYI3DPROC
 
	gpwglGëGílockSour˚DñayI3D
=
_Lazy_wglGëGílockSour˚DñayI3D
;

4869 
PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC
 
	gpwglQuîyGílockMaxSour˚DñayI3D
=
_Lazy_wglQuîyGílockMaxSour˚DñayI3D
;

4874 #ifde‡
__GLEE_WGL_I3D_image_buf„r


4875 
LPVOID
 
__°dˇŒ
 
	$_Lazy_wglCª©eImageBuf„rI3D
(
HDC
 
hDC
, 
DWORD
 
dwSize
, 
UINT
 
uFœgs
Ë{i‡(
	`GLìInô
()Ë 
	`wglCª©eImageBuf„rI3D
(hDC, dwSize, uFœgs);  (
LPVOID
)0;
	}
}

4876 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglDe°royImageBuf„rI3D
(
HDC
 
hDC
, 
LPVOID
 
pAddªss
Ë{i‡(
	`GLìInô
()Ë 
	`wglDe°royImageBuf„rI3D
(hDC,ÖAddªss);  (
BOOL
)0;
	}
}

4877 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglAssocüãImageBuf„rEvítsI3D
(
HDC
 
hDC
, c⁄° 
HANDLE
 * 
pEvít
, c⁄° 
LPVOID
 * 
pAddªss
, c⁄° 
DWORD
 * 
pSize
, 
UINT
 
cou¡
Ë{i‡(
	`GLìInô
()Ë 
	`wglAssocüãImageBuf„rEvítsI3D
(hDC,ÖEvít,ÖAddªss,ÖSize, cou¡);  (
BOOL
)0;
	}
}

4878 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglRñó£ImageBuf„rEvítsI3D
(
HDC
 
hDC
, c⁄° 
LPVOID
 * 
pAddªss
, 
UINT
 
cou¡
Ë{i‡(
	`GLìInô
()Ë 
	`wglRñó£ImageBuf„rEvítsI3D
(hDC,ÖAddªss, cou¡);  (
BOOL
)0;
	}
}

4879 
PFNWGLCREATEIMAGEBUFFERI3DPROC
 
	gpwglCª©eImageBuf„rI3D
=
_Lazy_wglCª©eImageBuf„rI3D
;

4880 
PFNWGLDESTROYIMAGEBUFFERI3DPROC
 
	gpwglDe°royImageBuf„rI3D
=
_Lazy_wglDe°royImageBuf„rI3D
;

4881 
PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC
 
	gpwglAssocüãImageBuf„rEvítsI3D
=
_Lazy_wglAssocüãImageBuf„rEvítsI3D
;

4882 
PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC
 
	gpwglRñó£ImageBuf„rEvítsI3D
=
_Lazy_wglRñó£ImageBuf„rEvítsI3D
;

4887 #ifde‡
__GLEE_WGL_I3D_sw≠_‰ame_lock


4888 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglE«bÀFømeLockI3D
(Ë{i‡(
	`GLìInô
()Ë 
	`wglE«bÀFømeLockI3D
();  (
BOOL
)0;
	}
}

4889 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglDißbÀFømeLockI3D
(Ë{i‡(
	`GLìInô
()Ë 
	`wglDißbÀFømeLockI3D
();  (
BOOL
)0;
	}
}

4890 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglIsE«bÀdFømeLockI3D
(
BOOL
 * 
pFœg
Ë{i‡(
	`GLìInô
()Ë 
	`wglIsE«bÀdFømeLockI3D
’Fœg);  (BOOL)0;
	}
}

4891 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglQuîyFømeLockMa°îI3D
(
BOOL
 * 
pFœg
Ë{i‡(
	`GLìInô
()Ë 
	`wglQuîyFømeLockMa°îI3D
’Fœg);  (BOOL)0;
	}
}

4892 
PFNWGLENABLEFRAMELOCKI3DPROC
 
	gpwglE«bÀFømeLockI3D
=
_Lazy_wglE«bÀFømeLockI3D
;

4893 
PFNWGLDISABLEFRAMELOCKI3DPROC
 
	gpwglDißbÀFømeLockI3D
=
_Lazy_wglDißbÀFømeLockI3D
;

4894 
PFNWGLISENABLEDFRAMELOCKI3DPROC
 
	gpwglIsE«bÀdFømeLockI3D
=
_Lazy_wglIsE«bÀdFømeLockI3D
;

4895 
PFNWGLQUERYFRAMELOCKMASTERI3DPROC
 
	gpwglQuîyFømeLockMa°îI3D
=
_Lazy_wglQuîyFømeLockMa°îI3D
;

4900 #ifde‡
__GLEE_WGL_NV_ªndî_dïth_ãxtuª


4905 #ifde‡
__GLEE_WGL_NV_ªndî_ãxtuª_ª˘™gÀ


4910 #ifde‡
__GLEE_WGL_ATI_pixñ_f‹m©_Êﬂt


4915 #ifde‡
__GLEE_WGL_NV_Êﬂt_buf„r


4920 #ifde‡
__GLEE_WGL_EXT_di•œy_cﬁ‹_èbÀ


4921 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_wglCª©eDi•œyCﬁ‹TabÀEXT
(
GLush‹t
 
id
Ë{i‡(
	`GLìInô
()Ë 
	`wglCª©eDi•œyCﬁ‹TabÀEXT
(id);  (
GLboﬁón
)0;
	}
}

4922 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_wglLﬂdDi•œyCﬁ‹TabÀEXT
(c⁄° 
GLush‹t
 * 
èbÀ
, 
GLuöt
 
Àngth
Ë{i‡(
	`GLìInô
()Ë 
	`wglLﬂdDi•œyCﬁ‹TabÀEXT
—abÀ,Üígth);  (
GLboﬁón
)0;
	}
}

4923 
GLboﬁón
 
__°dˇŒ
 
	$_Lazy_wglBödDi•œyCﬁ‹TabÀEXT
(
GLush‹t
 
id
Ë{i‡(
	`GLìInô
()Ë 
	`wglBödDi•œyCﬁ‹TabÀEXT
(id);  (
GLboﬁón
)0;
	}
}

4924 
VOID
 
__°dˇŒ
 
	$_Lazy_wglDe°royDi•œyCﬁ‹TabÀEXT
(
GLush‹t
 
id
Ë{i‡(
	`GLìInô
()Ë
	`wglDe°royDi•œyCﬁ‹TabÀEXT
(id);
	}
}

4925 
PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC
 
	gpwglCª©eDi•œyCﬁ‹TabÀEXT
=
_Lazy_wglCª©eDi•œyCﬁ‹TabÀEXT
;

4926 
PFNWGLLOADDISPLAYCOLORTABLEEXTPROC
 
	gpwglLﬂdDi•œyCﬁ‹TabÀEXT
=
_Lazy_wglLﬂdDi•œyCﬁ‹TabÀEXT
;

4927 
PFNWGLBINDDISPLAYCOLORTABLEEXTPROC
 
	gpwglBödDi•œyCﬁ‹TabÀEXT
=
_Lazy_wglBödDi•œyCﬁ‹TabÀEXT
;

4928 
PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC
 
	gpwglDe°royDi•œyCﬁ‹TabÀEXT
=
_Lazy_wglDe°royDi•œyCﬁ‹TabÀEXT
;

4933 #ifde‡
__GLEE_WGL_EXT_exãnsi⁄s_°rög


4934 c⁄° * 
__°dˇŒ
 
	$_Lazy_wglGëExãnsi⁄sSåögEXT
(Ë{i‡(
	`GLìInô
()Ë 
	`wglGëExãnsi⁄sSåögEXT
();  (c⁄° *)0;
	}
}

4935 
PFNWGLGETEXTENSIONSSTRINGEXTPROC
 
	gpwglGëExãnsi⁄sSåögEXT
=
_Lazy_wglGëExãnsi⁄sSåögEXT
;

4940 #ifde‡
__GLEE_WGL_EXT_sw≠_c⁄åﬁ


4941 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglSw≠I¡îvÆEXT
(
öãrvÆ
Ë{i‡(
	`GLìInô
()Ë 
	`wglSw≠I¡îvÆEXT
(öãrvÆ);  (
BOOL
)0;
	}
}

4942 
__°dˇŒ
 
	$_Lazy_wglGëSw≠I¡îvÆEXT
(Ë{i‡(
	`GLìInô
()Ë 
	`wglGëSw≠I¡îvÆEXT
();  ()0;
	}
}

4943 
PFNWGLSWAPINTERVALEXTPROC
 
	gpwglSw≠I¡îvÆEXT
=
_Lazy_wglSw≠I¡îvÆEXT
;

4944 
PFNWGLGETSWAPINTERVALEXTPROC
 
	gpwglGëSw≠I¡îvÆEXT
=
_Lazy_wglGëSw≠I¡îvÆEXT
;

4949 #ifde‡
__GLEE_WGL_NV_vîãx_¨øy_ønge


4950 * 
__°dˇŒ
 
	$_Lazy_wglAŒoˇãMem‹yNV
(
GLsizei
 
size
, 
GLÊﬂt
 
ªad‰eq
, GLÊﬂà
wrôe‰eq
, GLÊﬂà
¥i‹ôy
Ë{i‡(
	`GLìInô
()Ë 
	`wglAŒoˇãMem‹yNV
(size,Ñód‰eq, wrôe‰eq,Öri‹ôy);  (*)0;
	}
}

4951 
__°dˇŒ
 
	$_Lazy_wglFªeMem‹yNV
(* 
poöãr
Ë{i‡(
	`GLìInô
()Ë
	`wglFªeMem‹yNV
’oöãr);
	}
}

4952 
PFNWGLALLOCATEMEMORYNVPROC
 
	gpwglAŒoˇãMem‹yNV
=
_Lazy_wglAŒoˇãMem‹yNV
;

4953 
PFNWGLFREEMEMORYNVPROC
 
	gpwglFªeMem‹yNV
=
_Lazy_wglFªeMem‹yNV
;

4958 #ifde‡
__GLEE_WGL_OML_sync_c⁄åﬁ


4959 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGëSyncVÆuesOML
(
HDC
 
hdc
, 
INT64
 * 
u°
, INT64 * 
msc
, INT64 * 
sbc
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëSyncVÆuesOML
(hdc, u°, msc, sbc);  (
BOOL
)0;
	}
}

4960 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGëMscR©eOML
(
HDC
 
hdc
, 
INT32
 * 
numî©‹
, INT32 * 
díomö©‹
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëMscR©eOML
(hdc,Çumî©‹, díomö©‹);  (
BOOL
)0;
	}
}

4961 
INT64
 
__°dˇŒ
 
	$_Lazy_wglSw≠Buf„rsMscOML
(
HDC
 
hdc
, 
INT64
 
èrgë_msc
, INT64 
divis‹
, INT64 
ªmaödî
Ë{i‡(
	`GLìInô
()Ë 
	`wglSw≠Buf„rsMscOML
(hdc,Å¨gë_msc, divis‹,Ñemaödî);  (INT64)0;
	}
}

4962 
INT64
 
__°dˇŒ
 
	$_Lazy_wglSw≠LayîBuf„rsMscOML
(
HDC
 
hdc
, 
fuPœ√s
, 
INT64
 
èrgë_msc
, INT64 
divis‹
, INT64 
ªmaödî
Ë{i‡(
	`GLìInô
()Ë 
	`wglSw≠LayîBuf„rsMscOML
(hdc, fuPœ√s,Å¨gë_msc, divis‹,Ñemaödî);  (INT64)0;
	}
}

4963 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglWaôF‹MscOML
(
HDC
 
hdc
, 
INT64
 
èrgë_msc
, INT64 
divis‹
, INT64 
ªmaödî
, INT64 * 
u°
, INT64 * 
msc
, INT64 * 
sbc
Ë{i‡(
	`GLìInô
()Ë 
	`wglWaôF‹MscOML
(hdc,Å¨gë_msc, divis‹,Ñemaödî, u°, msc, sbc);  (
BOOL
)0;
	}
}

4964 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglWaôF‹SbcOML
(
HDC
 
hdc
, 
INT64
 
èrgë_sbc
, INT64 * 
u°
, INT64 * 
msc
, INT64 * 
sbc
Ë{i‡(
	`GLìInô
()Ë 
	`wglWaôF‹SbcOML
(hdc,Å¨gë_sbc, u°, msc, sbc);  (
BOOL
)0;
	}
}

4965 
PFNWGLGETSYNCVALUESOMLPROC
 
	gpwglGëSyncVÆuesOML
=
_Lazy_wglGëSyncVÆuesOML
;

4966 
PFNWGLGETMSCRATEOMLPROC
 
	gpwglGëMscR©eOML
=
_Lazy_wglGëMscR©eOML
;

4967 
PFNWGLSWAPBUFFERSMSCOMLPROC
 
	gpwglSw≠Buf„rsMscOML
=
_Lazy_wglSw≠Buf„rsMscOML
;

4968 
PFNWGLSWAPLAYERBUFFERSMSCOMLPROC
 
	gpwglSw≠LayîBuf„rsMscOML
=
_Lazy_wglSw≠LayîBuf„rsMscOML
;

4969 
PFNWGLWAITFORMSCOMLPROC
 
	gpwglWaôF‹MscOML
=
_Lazy_wglWaôF‹MscOML
;

4970 
PFNWGLWAITFORSBCOMLPROC
 
	gpwglWaôF‹SbcOML
=
_Lazy_wglWaôF‹SbcOML
;

4975 #ifde‡
__GLEE_WGL_I3D_sw≠_‰ame_ußge


4976 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglGëFømeUßgeI3D
(* 
pUßge
Ë{i‡(
	`GLìInô
()Ë 
	`wglGëFømeUßgeI3D
’Ußge);  (
BOOL
)0;
	}
}

4977 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglBegöFømeTøckögI3D
(Ë{i‡(
	`GLìInô
()Ë 
	`wglBegöFømeTøckögI3D
();  (
BOOL
)0;
	}
}

4978 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglEndFømeTøckögI3D
(Ë{i‡(
	`GLìInô
()Ë 
	`wglEndFømeTøckögI3D
();  (
BOOL
)0;
	}
}

4979 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglQuîyFømeTøckögI3D
(
DWORD
 * 
pFømeCou¡
, DWORD * 
pMis£dFømes
, * 
pLa°Mis£dUßge
Ë{i‡(
	`GLìInô
()Ë 
	`wglQuîyFømeTøckögI3D
’FømeCou¡,ÖMis£dFømes,ÖLa°Mis£dUßge);  (
BOOL
)0;
	}
}

4980 
PFNWGLGETFRAMEUSAGEI3DPROC
 
	gpwglGëFømeUßgeI3D
=
_Lazy_wglGëFømeUßgeI3D
;

4981 
PFNWGLBEGINFRAMETRACKINGI3DPROC
 
	gpwglBegöFømeTøckögI3D
=
_Lazy_wglBegöFømeTøckögI3D
;

4982 
PFNWGLENDFRAMETRACKINGI3DPROC
 
	gpwglEndFømeTøckögI3D
=
_Lazy_wglEndFømeTøckögI3D
;

4983 
PFNWGLQUERYFRAMETRACKINGI3DPROC
 
	gpwglQuîyFømeTøckögI3D
=
_Lazy_wglQuîyFømeTøckögI3D
;

4988 #ifde‡
__GLEE_WGL_3DL_°îeo_c⁄åﬁ


4989 
BOOL
 
__°dˇŒ
 
	$_Lazy_wglSëSãªoEmôãrSèã3DL
(
HDC
 
hDC
, 
UINT
 
uSèã
Ë{i‡(
	`GLìInô
()Ë 
	`wglSëSãªoEmôãrSèã3DL
(hDC, uSèã);  (
BOOL
)0;
	}
}

4990 
PFNWGLSETSTEREOEMITTERSTATE3DLPROC
 
	gpwglSëSãªoEmôãrSèã3DL
=
_Lazy_wglSëSãªoEmôãrSèã3DL
;

4992 #ñi‡
deföed
(
__APPLE__
Ë|| deföed(
__APPLE_CC__
)

4997 
GLboﬁón
 
	g_GLEE_GLX_VERSION_1_3
 = 
GL_FALSE
;

4998 
GLboﬁón
 
	g_GLEE_GLX_VERSION_1_4
 = 
GL_FALSE
;

4999 
GLboﬁón
 
	g_GLEE_GLX_ARB_mu…ißm∂e
 = 
GL_FALSE
;

5000 
GLboﬁón
 
	g_GLEE_GLX_ARB_fbc⁄fig_Êﬂt
 = 
GL_FALSE
;

5001 
GLboﬁón
 
	g_GLEE_GLX_SGIS_mu…ißm∂e
 = 
GL_FALSE
;

5002 
GLboﬁón
 
	g_GLEE_GLX_EXT_visuÆ_öfo
 = 
GL_FALSE
;

5003 
GLboﬁón
 
	g_GLEE_GLX_SGI_sw≠_c⁄åﬁ
 = 
GL_FALSE
;

5004 
GLboﬁón
 
	g_GLEE_GLX_SGI_video_sync
 = 
GL_FALSE
;

5005 
GLboﬁón
 
	g_GLEE_GLX_SGI_make_cuºít_ªad
 = 
GL_FALSE
;

5006 
GLboﬁón
 
	g_GLEE_GLX_EXT_visuÆ_øtög
 = 
GL_FALSE
;

5007 
GLboﬁón
 
	g_GLEE_GLX_EXT_imp‹t_c⁄ãxt
 = 
GL_FALSE
;

5008 
GLboﬁón
 
	g_GLEE_GLX_SGIX_fbc⁄fig
 = 
GL_FALSE
;

5009 
GLboﬁón
 
	g_GLEE_GLX_SGIX_pbuf„r
 = 
GL_FALSE
;

5010 
GLboﬁón
 
	g_GLEE_GLX_SGI_cushi⁄
 = 
GL_FALSE
;

5011 
GLboﬁón
 
	g_GLEE_GLX_SGIX_video_ªsize
 = 
GL_FALSE
;

5012 
GLboﬁón
 
	g_GLEE_GLX_SGIX_sw≠_group
 = 
GL_FALSE
;

5013 
GLboﬁón
 
	g_GLEE_GLX_SGIX_sw≠_b¨rõr
 = 
GL_FALSE
;

5014 
GLboﬁón
 
	g_GLEE_GLX_SGIS_bÀnded_ovîœy
 = 
GL_FALSE
;

5015 
GLboﬁón
 
	g_GLEE_GLX_SGIS_sh¨ed_mu…ißm∂e
 = 
GL_FALSE
;

5016 
GLboﬁón
 
	g_GLEE_GLX_SUN_gë_å™•¨ít_ödex
 = 
GL_FALSE
;

5017 
GLboﬁón
 
	g_GLEE_GLX_3DFX_mu…ißm∂e
 = 
GL_FALSE
;

5018 
GLboﬁón
 
	g_GLEE_GLX_MESA_c›y_sub_buf„r
 = 
GL_FALSE
;

5019 
GLboﬁón
 
	g_GLEE_GLX_MESA_pixm≠_cﬁ‹m≠
 = 
GL_FALSE
;

5020 
GLboﬁón
 
	g_GLEE_GLX_MESA_ªÀa£_buf„rs
 = 
GL_FALSE
;

5021 
GLboﬁón
 
	g_GLEE_GLX_MESA_£t_3dfx_mode
 = 
GL_FALSE
;

5022 
GLboﬁón
 
	g_GLEE_GLX_SGIX_visuÆ_£À˘_group
 = 
GL_FALSE
;

5023 
GLboﬁón
 
	g_GLEE_GLX_OML_sw≠_mëhod
 = 
GL_FALSE
;

5024 
GLboﬁón
 
	g_GLEE_GLX_OML_sync_c⁄åﬁ
 = 
GL_FALSE
;

5025 
GLboﬁón
 
	g_GLEE_GLX_NV_Êﬂt_buf„r
 = 
GL_FALSE
;

5026 
GLboﬁón
 
	g_GLEE_GLX_SGIX_hy≥Ωùe
 = 
GL_FALSE
;

5027 
GLboﬁón
 
	g_GLEE_GLX_MESA_agp_off£t
 = 
GL_FALSE
;

5028 
GLboﬁón
 
	g_GLEE_GLX_EXT_s˚√_m¨kî
 = 
GL_FALSE
;

5032 
	g__GLìGLXExãnsi⁄Names
[32][30]={

5066 
	g__GLìGLXNumExãnsi⁄s
=32;

5070 #ifde‡
__GLEE_GLX_VERSION_1_3


5071 
GLXFBC⁄fig
 * 
__°dˇŒ
 
	$_Lazy_glXGëFBC⁄figs
(
Di•œy
 * 
dpy
, 
s¸ìn
, * 
√Àmíts
Ë{i‡(
	`GLìInô
()Ë 
	`glXGëFBC⁄figs
(dpy, s¸ìn,Çñemíts);  (
GLXFBC⁄fig
 *)0;
	}
}

5072 
GLXFBC⁄fig
 * 
__°dˇŒ
 
	$_Lazy_glXChoo£FBC⁄fig
(
Di•œy
 * 
dpy
, 
s¸ìn
, c⁄° * 
©åib_li°
, * 
√Àmíts
Ë{i‡(
	`GLìInô
()Ë 
	`glXChoo£FBC⁄fig
(dpy, s¸ìn,áârib_li°,Çñemíts);  (
GLXFBC⁄fig
 *)0;
	}
}

5073 
__°dˇŒ
 
	$_Lazy_glXGëFBC⁄figAârib
(
Di•œy
 * 
dpy
, 
GLXFBC⁄fig
 
c⁄fig
, 
©åibuã
, * 
vÆue
Ë{i‡(
	`GLìInô
()Ë 
	`glXGëFBC⁄figAârib
(dpy, c⁄fig,áâribuã, vÆue);  ()0;
	}
}

5074 
XVisuÆInfo
 * 
__°dˇŒ
 
	$_Lazy_glXGëVisuÆFromFBC⁄fig
(
Di•œy
 * 
dpy
, 
GLXFBC⁄fig
 
c⁄fig
Ë{i‡(
	`GLìInô
()Ë 
	`glXGëVisuÆFromFBC⁄fig
(dpy, c⁄fig);  (
XVisuÆInfo
 *)0;
	}
}

5075 
GLXWödow
 
__°dˇŒ
 
	$_Lazy_glXCª©eWödow
(
Di•œy
 * 
dpy
, 
GLXFBC⁄fig
 
c⁄fig
, 
Wödow
 
wö
, c⁄° * 
©åib_li°
Ë{i‡(
	`GLìInô
()Ë 
	`glXCª©eWödow
(dpy, c⁄fig, wö,áârib_li°);  (
GLXWödow
)0;
	}
}

5076 
__°dˇŒ
 
	$_Lazy_glXDe°royWödow
(
Di•œy
 * 
dpy
, 
GLXWödow
 
wö
Ë{i‡(
	`GLìInô
()Ë
	`glXDe°royWödow
(dpy, wö);
	}
}

5077 
GLXPixm≠
 
__°dˇŒ
 
	$_Lazy_glXCª©ePixm≠
(
Di•œy
 * 
dpy
, 
GLXFBC⁄fig
 
c⁄fig
, 
Pixm≠
 
pixm≠
, c⁄° * 
©åib_li°
Ë{i‡(
	`GLìInô
()Ë 
	`glXCª©ePixm≠
(dpy, c⁄fig,Öixm≠,áârib_li°);  (
GLXPixm≠
)0;
	}
}

5078 
__°dˇŒ
 
	$_Lazy_glXDe°royPixm≠
(
Di•œy
 * 
dpy
, 
GLXPixm≠
 
pixm≠
Ë{i‡(
	`GLìInô
()Ë
	`glXDe°royPixm≠
(dpy,Öixm≠);
	}
}

5079 
GLXPbuf„r
 
__°dˇŒ
 
	$_Lazy_glXCª©ePbuf„r
(
Di•œy
 * 
dpy
, 
GLXFBC⁄fig
 
c⁄fig
, c⁄° * 
©åib_li°
Ë{i‡(
	`GLìInô
()Ë 
	`glXCª©ePbuf„r
(dpy, c⁄fig,áârib_li°);  (
GLXPbuf„r
)0;
	}
}

5080 
__°dˇŒ
 
	$_Lazy_glXDe°royPbuf„r
(
Di•œy
 * 
dpy
, 
GLXPbuf„r
 
pbuf
Ë{i‡(
	`GLìInô
()Ë
	`glXDe°royPbuf„r
(dpy,Öbuf);
	}
}

5081 
__°dˇŒ
 
	$_Lazy_glXQuîyDøwabÀ
(
Di•œy
 * 
dpy
, 
GLXDøwabÀ
 
døw
, 
©åibuã
, * 
vÆue
Ë{i‡(
	`GLìInô
()Ë
	`glXQuîyDøwabÀ
(dpy, døw,áâribuã, vÆue);
	}
}

5082 
GLXC⁄ãxt
 
__°dˇŒ
 
	$_Lazy_glXCª©eNewC⁄ãxt
(
Di•œy
 * 
dpy
, 
GLXFBC⁄fig
 
c⁄fig
, 
ªndî_ty≥
, 
GLXC⁄ãxt
 
sh¨e_li°
, 
Boﬁ
 
dúe˘
Ë{i‡(
	`GLìInô
()Ë 
	`glXCª©eNewC⁄ãxt
(dpy, c⁄fig,Ñídî_ty≥, sh¨e_li°, dúe˘);  (GLXC⁄ãxt)0;
	}
}

5083 
Boﬁ
 
__°dˇŒ
 
	$_Lazy_glXMakeC⁄ãxtCuºít
(
Di•œy
 * 
dpy
, 
GLXDøwabÀ
 
døw
, GLXDøwabÀ 
ªad
, 
GLXC⁄ãxt
 
˘x
Ë{i‡(
	`GLìInô
()Ë 
	`glXMakeC⁄ãxtCuºít
(dpy, døw,Ñód, ctx);  (
Boﬁ
)0;
	}
}

5084 
GLXDøwabÀ
 
__°dˇŒ
 
	$_Lazy_glXGëCuºítRódDøwabÀ
(Ë{i‡(
	`GLìInô
()Ë 
	`glXGëCuºítRódDøwabÀ
();  (
GLXDøwabÀ
)0;
	}
}

5085 
Di•œy
 * 
__°dˇŒ
 
	$_Lazy_glXGëCuºítDi•œy
(Ë{i‡(
	`GLìInô
()Ë 
	`glXGëCuºítDi•œy
();  (
Di•œy
 *)0;
	}
}

5086 
__°dˇŒ
 
	$_Lazy_glXQuîyC⁄ãxt
(
Di•œy
 * 
dpy
, 
GLXC⁄ãxt
 
˘x
, 
©åibuã
, * 
vÆue
Ë{i‡(
	`GLìInô
()Ë 
	`glXQuîyC⁄ãxt
(dpy, ctx,áâribuã, vÆue);  ()0;
	}
}

5087 
__°dˇŒ
 
	$_Lazy_glXSñe˘Evít
(
Di•œy
 * 
dpy
, 
GLXDøwabÀ
 
døw
, 
evít_mask
Ë{i‡(
	`GLìInô
()Ë
	`glXSñe˘Evít
(dpy, døw,Évít_mask);
	}
}

5088 
__°dˇŒ
 
	$_Lazy_glXGëSñe˘edEvít
(
Di•œy
 * 
dpy
, 
GLXDøwabÀ
 
døw
, * 
evít_mask
Ë{i‡(
	`GLìInô
()Ë
	`glXGëSñe˘edEvít
(dpy, døw,Évít_mask);
	}
}

5089 
PFNGLXGETFBCONFIGSPROC
 
	gpglXGëFBC⁄figs
=
_Lazy_glXGëFBC⁄figs
;

5090 
PFNGLXCHOOSEFBCONFIGPROC
 
	gpglXChoo£FBC⁄fig
=
_Lazy_glXChoo£FBC⁄fig
;

5091 
PFNGLXGETFBCONFIGATTRIBPROC
 
	gpglXGëFBC⁄figAârib
=
_Lazy_glXGëFBC⁄figAârib
;

5092 
PFNGLXGETVISUALFROMFBCONFIGPROC
 
	gpglXGëVisuÆFromFBC⁄fig
=
_Lazy_glXGëVisuÆFromFBC⁄fig
;

5093 
PFNGLXCREATEWINDOWPROC
 
	gpglXCª©eWödow
=
_Lazy_glXCª©eWödow
;

5094 
PFNGLXDESTROYWINDOWPROC
 
	gpglXDe°royWödow
=
_Lazy_glXDe°royWödow
;

5095 
PFNGLXCREATEPIXMAPPROC
 
	gpglXCª©ePixm≠
=
_Lazy_glXCª©ePixm≠
;

5096 
PFNGLXDESTROYPIXMAPPROC
 
	gpglXDe°royPixm≠
=
_Lazy_glXDe°royPixm≠
;

5097 
PFNGLXCREATEPBUFFERPROC
 
	gpglXCª©ePbuf„r
=
_Lazy_glXCª©ePbuf„r
;

5098 
PFNGLXDESTROYPBUFFERPROC
 
	gpglXDe°royPbuf„r
=
_Lazy_glXDe°royPbuf„r
;

5099 
PFNGLXQUERYDRAWABLEPROC
 
	gpglXQuîyDøwabÀ
=
_Lazy_glXQuîyDøwabÀ
;

5100 
PFNGLXCREATENEWCONTEXTPROC
 
	gpglXCª©eNewC⁄ãxt
=
_Lazy_glXCª©eNewC⁄ãxt
;

5101 
PFNGLXMAKECONTEXTCURRENTPROC
 
	gpglXMakeC⁄ãxtCuºít
=
_Lazy_glXMakeC⁄ãxtCuºít
;

5102 
PFNGLXGETCURRENTREADDRAWABLEPROC
 
	gpglXGëCuºítRódDøwabÀ
=
_Lazy_glXGëCuºítRódDøwabÀ
;

5103 
PFNGLXGETCURRENTDISPLAYPROC
 
	gpglXGëCuºítDi•œy
=
_Lazy_glXGëCuºítDi•œy
;

5104 
PFNGLXQUERYCONTEXTPROC
 
	gpglXQuîyC⁄ãxt
=
_Lazy_glXQuîyC⁄ãxt
;

5105 
PFNGLXSELECTEVENTPROC
 
	gpglXSñe˘Evít
=
_Lazy_glXSñe˘Evít
;

5106 
PFNGLXGETSELECTEDEVENTPROC
 
	gpglXGëSñe˘edEvít
=
_Lazy_glXGëSñe˘edEvít
;

5111 #ifde‡
__GLEE_GLX_VERSION_1_4


5112 
__GLXextFuncPå
 
__°dˇŒ
 
	$_Lazy_glXGëProcAddªss
(c⁄° 
GLubyã
 * 
¥ocName
Ë{i‡(
	`GLìInô
()Ë 
	`glXGëProcAddªss
’rocName);  (
__GLXextFuncPå
)0;
	}
}

5113 
PFNGLXGETPROCADDRESSPROC
 
	gpglXGëProcAddªss
=
_Lazy_glXGëProcAddªss
;

5118 #ifde‡
__GLEE_GLX_ARB_mu…ißm∂e


5123 #ifde‡
__GLEE_GLX_ARB_fbc⁄fig_Êﬂt


5128 #ifde‡
__GLEE_GLX_SGIS_mu…ißm∂e


5133 #ifde‡
__GLEE_GLX_EXT_visuÆ_öfo


5138 #ifde‡
__GLEE_GLX_SGI_sw≠_c⁄åﬁ


5139 
__°dˇŒ
 
	$_Lazy_glXSw≠I¡îvÆSGI
(
öãrvÆ
Ë{i‡(
	`GLìInô
()Ë 
	`glXSw≠I¡îvÆSGI
(öãrvÆ);  ()0;
	}
}

5140 
PFNGLXSWAPINTERVALSGIPROC
 
	gpglXSw≠I¡îvÆSGI
=
_Lazy_glXSw≠I¡îvÆSGI
;

5145 #ifde‡
__GLEE_GLX_SGI_video_sync


5146 
__°dˇŒ
 
	$_Lazy_glXGëVideoSyncSGI
(* 
cou¡
Ë{i‡(
	`GLìInô
()Ë 
	`glXGëVideoSyncSGI
(cou¡);  ()0;
	}
}

5147 
__°dˇŒ
 
	$_Lazy_glXWaôVideoSyncSGI
(
divis‹
, 
ªmaödî
, * 
cou¡
Ë{i‡(
	`GLìInô
()Ë 
	`glXWaôVideoSyncSGI
(divis‹,Ñemaödî, cou¡);  ()0;
	}
}

5148 
PFNGLXGETVIDEOSYNCSGIPROC
 
	gpglXGëVideoSyncSGI
=
_Lazy_glXGëVideoSyncSGI
;

5149 
PFNGLXWAITVIDEOSYNCSGIPROC
 
	gpglXWaôVideoSyncSGI
=
_Lazy_glXWaôVideoSyncSGI
;

5154 #ifde‡
__GLEE_GLX_SGI_make_cuºít_ªad


5155 
Boﬁ
 
__°dˇŒ
 
	$_Lazy_glXMakeCuºítRódSGI
(
Di•œy
 * 
dpy
, 
GLXDøwabÀ
 
døw
, GLXDøwabÀ 
ªad
, 
GLXC⁄ãxt
 
˘x
Ë{i‡(
	`GLìInô
()Ë 
	`glXMakeCuºítRódSGI
(dpy, døw,Ñód, ctx);  (
Boﬁ
)0;
	}
}

5156 
GLXDøwabÀ
 
__°dˇŒ
 
	$_Lazy_glXGëCuºítRódDøwabÀSGI
(Ë{i‡(
	`GLìInô
()Ë 
	`glXGëCuºítRódDøwabÀSGI
();  (
GLXDøwabÀ
)0;
	}
}

5157 
PFNGLXMAKECURRENTREADSGIPROC
 
	gpglXMakeCuºítRódSGI
=
_Lazy_glXMakeCuºítRódSGI
;

5158 
PFNGLXGETCURRENTREADDRAWABLESGIPROC
 
	gpglXGëCuºítRódDøwabÀSGI
=
_Lazy_glXGëCuºítRódDøwabÀSGI
;

5163 #ifde‡
__GLEE_GLX_EXT_visuÆ_øtög


5168 #ifde‡
__GLEE_GLX_EXT_imp‹t_c⁄ãxt


5169 
Di•œy
 * 
__°dˇŒ
 
	$_Lazy_glXGëCuºítDi•œyEXT
(Ë{i‡(
	`GLìInô
()Ë 
	`glXGëCuºítDi•œyEXT
();  (
Di•œy
 *)0;
	}
}

5170 
__°dˇŒ
 
	$_Lazy_glXQuîyC⁄ãxtInfoEXT
(
Di•œy
 * 
dpy
, 
GLXC⁄ãxt
 
c⁄ãxt
, 
©åibuã
, * 
vÆue
Ë{i‡(
	`GLìInô
()Ë 
	`glXQuîyC⁄ãxtInfoEXT
(dpy, c⁄ãxt,áâribuã, vÆue);  ()0;
	}
}

5171 
GLXC⁄ãxtID
 
__°dˇŒ
 
	$_Lazy_glXGëC⁄ãxtIDEXT
(c⁄° 
GLXC⁄ãxt
 
c⁄ãxt
Ë{i‡(
	`GLìInô
()Ë 
	`glXGëC⁄ãxtIDEXT
(c⁄ãxt);  (
GLXC⁄ãxtID
)0;
	}
}

5172 
GLXC⁄ãxt
 
__°dˇŒ
 
	$_Lazy_glXImp‹tC⁄ãxtEXT
(
Di•œy
 * 
dpy
, 
GLXC⁄ãxtID
 
c⁄ãxtID
Ë{i‡(
	`GLìInô
()Ë 
	`glXImp‹tC⁄ãxtEXT
(dpy, c⁄ãxtID);  (
GLXC⁄ãxt
)0;
	}
}

5173 
__°dˇŒ
 
	$_Lazy_glXFªeC⁄ãxtEXT
(
Di•œy
 * 
dpy
, 
GLXC⁄ãxt
 
c⁄ãxt
Ë{i‡(
	`GLìInô
()Ë
	`glXFªeC⁄ãxtEXT
(dpy, c⁄ãxt);
	}
}

5174 
PFNGLXGETCURRENTDISPLAYEXTPROC
 
	gpglXGëCuºítDi•œyEXT
=
_Lazy_glXGëCuºítDi•œyEXT
;

5175 
PFNGLXQUERYCONTEXTINFOEXTPROC
 
	gpglXQuîyC⁄ãxtInfoEXT
=
_Lazy_glXQuîyC⁄ãxtInfoEXT
;

5176 
PFNGLXGETCONTEXTIDEXTPROC
 
	gpglXGëC⁄ãxtIDEXT
=
_Lazy_glXGëC⁄ãxtIDEXT
;

5177 
PFNGLXIMPORTCONTEXTEXTPROC
 
	gpglXImp‹tC⁄ãxtEXT
=
_Lazy_glXImp‹tC⁄ãxtEXT
;

5178 
PFNGLXFREECONTEXTEXTPROC
 
	gpglXFªeC⁄ãxtEXT
=
_Lazy_glXFªeC⁄ãxtEXT
;

5183 #ifde‡
__GLEE_GLX_SGIX_fbc⁄fig


5184 
__°dˇŒ
 
	$_Lazy_glXGëFBC⁄figAâribSGIX
(
Di•œy
 * 
dpy
, 
GLXFBC⁄figSGIX
 
c⁄fig
, 
©åibuã
, * 
vÆue
Ë{i‡(
	`GLìInô
()Ë 
	`glXGëFBC⁄figAâribSGIX
(dpy, c⁄fig,áâribuã, vÆue);  ()0;
	}
}

5185 
GLXFBC⁄figSGIX
 * 
__°dˇŒ
 
	$_Lazy_glXChoo£FBC⁄figSGIX
(
Di•œy
 * 
dpy
, 
s¸ìn
, * 
©åib_li°
, * 
√Àmíts
Ë{i‡(
	`GLìInô
()Ë 
	`glXChoo£FBC⁄figSGIX
(dpy, s¸ìn,áârib_li°,Çñemíts);  (
GLXFBC⁄figSGIX
 *)0;
	}
}

5186 
GLXPixm≠
 
__°dˇŒ
 
	$_Lazy_glXCª©eGLXPixm≠WôhC⁄figSGIX
(
Di•œy
 * 
dpy
, 
GLXFBC⁄figSGIX
 
c⁄fig
, 
Pixm≠
 
pixm≠
Ë{i‡(
	`GLìInô
()Ë 
	`glXCª©eGLXPixm≠WôhC⁄figSGIX
(dpy, c⁄fig,Öixm≠);  (
GLXPixm≠
)0;
	}
}

5187 
GLXC⁄ãxt
 
__°dˇŒ
 
	$_Lazy_glXCª©eC⁄ãxtWôhC⁄figSGIX
(
Di•œy
 * 
dpy
, 
GLXFBC⁄figSGIX
 
c⁄fig
, 
ªndî_ty≥
, 
GLXC⁄ãxt
 
sh¨e_li°
, 
Boﬁ
 
dúe˘
Ë{i‡(
	`GLìInô
()Ë 
	`glXCª©eC⁄ãxtWôhC⁄figSGIX
(dpy, c⁄fig,Ñídî_ty≥, sh¨e_li°, dúe˘);  (GLXC⁄ãxt)0;
	}
}

5188 
XVisuÆInfo
 * 
__°dˇŒ
 
	$_Lazy_glXGëVisuÆFromFBC⁄figSGIX
(
Di•œy
 * 
dpy
, 
GLXFBC⁄figSGIX
 
c⁄fig
Ë{i‡(
	`GLìInô
()Ë 
	`glXGëVisuÆFromFBC⁄figSGIX
(dpy, c⁄fig);  (
XVisuÆInfo
 *)0;
	}
}

5189 
GLXFBC⁄figSGIX
 
__°dˇŒ
 
	$_Lazy_glXGëFBC⁄figFromVisuÆSGIX
(
Di•œy
 * 
dpy
, 
XVisuÆInfo
 * 
vis
Ë{i‡(
	`GLìInô
()Ë 
	`glXGëFBC⁄figFromVisuÆSGIX
(dpy, vis);  (
GLXFBC⁄figSGIX
)0;
	}
}

5190 
PFNGLXGETFBCONFIGATTRIBSGIXPROC
 
	gpglXGëFBC⁄figAâribSGIX
=
_Lazy_glXGëFBC⁄figAâribSGIX
;

5191 
PFNGLXCHOOSEFBCONFIGSGIXPROC
 
	gpglXChoo£FBC⁄figSGIX
=
_Lazy_glXChoo£FBC⁄figSGIX
;

5192 
PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC
 
	gpglXCª©eGLXPixm≠WôhC⁄figSGIX
=
_Lazy_glXCª©eGLXPixm≠WôhC⁄figSGIX
;

5193 
PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC
 
	gpglXCª©eC⁄ãxtWôhC⁄figSGIX
=
_Lazy_glXCª©eC⁄ãxtWôhC⁄figSGIX
;

5194 
PFNGLXGETVISUALFROMFBCONFIGSGIXPROC
 
	gpglXGëVisuÆFromFBC⁄figSGIX
=
_Lazy_glXGëVisuÆFromFBC⁄figSGIX
;

5195 
PFNGLXGETFBCONFIGFROMVISUALSGIXPROC
 
	gpglXGëFBC⁄figFromVisuÆSGIX
=
_Lazy_glXGëFBC⁄figFromVisuÆSGIX
;

5200 #ifde‡
__GLEE_GLX_SGIX_pbuf„r


5201 
GLXPbuf„rSGIX
 
__°dˇŒ
 
	$_Lazy_glXCª©eGLXPbuf„rSGIX
(
Di•œy
 * 
dpy
, 
GLXFBC⁄figSGIX
 
c⁄fig
, 
width
, 
height
, * 
©åib_li°
Ë{i‡(
	`GLìInô
()Ë 
	`glXCª©eGLXPbuf„rSGIX
(dpy, c⁄fig, width, height,áârib_li°);  (
GLXPbuf„rSGIX
)0;
	}
}

5202 
__°dˇŒ
 
	$_Lazy_glXDe°royGLXPbuf„rSGIX
(
Di•œy
 * 
dpy
, 
GLXPbuf„rSGIX
 
pbuf
Ë{i‡(
	`GLìInô
()Ë
	`glXDe°royGLXPbuf„rSGIX
(dpy,Öbuf);
	}
}

5203 
__°dˇŒ
 
	$_Lazy_glXQuîyGLXPbuf„rSGIX
(
Di•œy
 * 
dpy
, 
GLXPbuf„rSGIX
 
pbuf
, 
©åibuã
, * 
vÆue
Ë{i‡(
	`GLìInô
()Ë 
	`glXQuîyGLXPbuf„rSGIX
(dpy,Öbuf,áâribuã, vÆue);  ()0;
	}
}

5204 
__°dˇŒ
 
	$_Lazy_glXSñe˘EvítSGIX
(
Di•œy
 * 
dpy
, 
GLXDøwabÀ
 
døwabÀ
, 
mask
Ë{i‡(
	`GLìInô
()Ë
	`glXSñe˘EvítSGIX
(dpy, døwabÀ, mask);
	}
}

5205 
__°dˇŒ
 
	$_Lazy_glXGëSñe˘edEvítSGIX
(
Di•œy
 * 
dpy
, 
GLXDøwabÀ
 
døwabÀ
, * 
mask
Ë{i‡(
	`GLìInô
()Ë
	`glXGëSñe˘edEvítSGIX
(dpy, døwabÀ, mask);
	}
}

5206 
PFNGLXCREATEGLXPBUFFERSGIXPROC
 
	gpglXCª©eGLXPbuf„rSGIX
=
_Lazy_glXCª©eGLXPbuf„rSGIX
;

5207 
PFNGLXDESTROYGLXPBUFFERSGIXPROC
 
	gpglXDe°royGLXPbuf„rSGIX
=
_Lazy_glXDe°royGLXPbuf„rSGIX
;

5208 
PFNGLXQUERYGLXPBUFFERSGIXPROC
 
	gpglXQuîyGLXPbuf„rSGIX
=
_Lazy_glXQuîyGLXPbuf„rSGIX
;

5209 
PFNGLXSELECTEVENTSGIXPROC
 
	gpglXSñe˘EvítSGIX
=
_Lazy_glXSñe˘EvítSGIX
;

5210 
PFNGLXGETSELECTEDEVENTSGIXPROC
 
	gpglXGëSñe˘edEvítSGIX
=
_Lazy_glXGëSñe˘edEvítSGIX
;

5215 #ifde‡
__GLEE_GLX_SGI_cushi⁄


5216 
__°dˇŒ
 
	$_Lazy_glXCushi⁄SGI
(
Di•œy
 * 
dpy
, 
Wödow
 
wödow
, 
cushi⁄
Ë{i‡(
	`GLìInô
()Ë
	`glXCushi⁄SGI
(dpy, wödow, cushi⁄);
	}
}

5217 
PFNGLXCUSHIONSGIPROC
 
	gpglXCushi⁄SGI
=
_Lazy_glXCushi⁄SGI
;

5222 #ifde‡
__GLEE_GLX_SGIX_video_ªsize


5223 
__°dˇŒ
 
	$_Lazy_glXBödCh™√lToWödowSGIX
(
Di•œy
 * 
di•œy
, 
s¸ìn
, 
ch™√l
, 
Wödow
 
wödow
Ë{i‡(
	`GLìInô
()Ë 
	`glXBödCh™√lToWödowSGIX
(di•œy, s¸ìn, ch™√l, wödow);  ()0;
	}
}

5224 
__°dˇŒ
 
	$_Lazy_glXCh™√lRe˘SGIX
(
Di•œy
 * 
di•œy
, 
s¸ìn
, 
ch™√l
, 
x
, 
y
, 
w
, 
h
Ë{i‡(
	`GLìInô
()Ë 
	`glXCh™√lRe˘SGIX
(di•œy, s¸ìn, ch™√l, x, y, w, h);  ()0;
	}
}

5225 
__°dˇŒ
 
	$_Lazy_glXQuîyCh™√lRe˘SGIX
(
Di•œy
 * 
di•œy
, 
s¸ìn
, 
ch™√l
, * 
dx
, * 
dy
, * 
dw
, * 
dh
Ë{i‡(
	`GLìInô
()Ë 
	`glXQuîyCh™√lRe˘SGIX
(di•œy, s¸ìn, ch™√l, dx, dy, dw, dh);  ()0;
	}
}

5226 
__°dˇŒ
 
	$_Lazy_glXQuîyCh™√lDñèsSGIX
(
Di•œy
 * 
di•œy
, 
s¸ìn
, 
ch™√l
, * 
x
, * 
y
, * 
w
, * 
h
Ë{i‡(
	`GLìInô
()Ë 
	`glXQuîyCh™√lDñèsSGIX
(di•œy, s¸ìn, ch™√l, x, y, w, h);  ()0;
	}
}

5227 
__°dˇŒ
 
	$_Lazy_glXCh™√lRe˘SyncSGIX
(
Di•œy
 * 
di•œy
, 
s¸ìn
, 
ch™√l
, 
GLíum
 
syn˘y≥
Ë{i‡(
	`GLìInô
()Ë 
	`glXCh™√lRe˘SyncSGIX
(di•œy, s¸ìn, ch™√l, syn˘y≥);  ()0;
	}
}

5228 
PFNGLXBINDCHANNELTOWINDOWSGIXPROC
 
	gpglXBödCh™√lToWödowSGIX
=
_Lazy_glXBödCh™√lToWödowSGIX
;

5229 
PFNGLXCHANNELRECTSGIXPROC
 
	gpglXCh™√lRe˘SGIX
=
_Lazy_glXCh™√lRe˘SGIX
;

5230 
PFNGLXQUERYCHANNELRECTSGIXPROC
 
	gpglXQuîyCh™√lRe˘SGIX
=
_Lazy_glXQuîyCh™√lRe˘SGIX
;

5231 
PFNGLXQUERYCHANNELDELTASSGIXPROC
 
	gpglXQuîyCh™√lDñèsSGIX
=
_Lazy_glXQuîyCh™√lDñèsSGIX
;

5232 
PFNGLXCHANNELRECTSYNCSGIXPROC
 
	gpglXCh™√lRe˘SyncSGIX
=
_Lazy_glXCh™√lRe˘SyncSGIX
;

5237 #ifde‡
__GLEE_GLX_SGIX_sw≠_group


5238 
__°dˇŒ
 
	$_Lazy_glXJoöSw≠GroupSGIX
(
Di•œy
 * 
dpy
, 
GLXDøwabÀ
 
døwabÀ
, GLXDøwabÀ 
membî
Ë{i‡(
	`GLìInô
()Ë
	`glXJoöSw≠GroupSGIX
(dpy, døwabÀ, membî);
	}
}

5239 
PFNGLXJOINSWAPGROUPSGIXPROC
 
	gpglXJoöSw≠GroupSGIX
=
_Lazy_glXJoöSw≠GroupSGIX
;

5244 #ifde‡
__GLEE_GLX_SGIX_sw≠_b¨rõr


5245 
__°dˇŒ
 
	$_Lazy_glXBödSw≠B¨rõrSGIX
(
Di•œy
 * 
dpy
, 
GLXDøwabÀ
 
døwabÀ
, 
b¨rõr
Ë{i‡(
	`GLìInô
()Ë
	`glXBödSw≠B¨rõrSGIX
(dpy, døwabÀ, b¨rõr);
	}
}

5246 
Boﬁ
 
__°dˇŒ
 
	$_Lazy_glXQuîyMaxSw≠B¨rõrsSGIX
(
Di•œy
 * 
dpy
, 
s¸ìn
, * 
max
Ë{i‡(
	`GLìInô
()Ë 
	`glXQuîyMaxSw≠B¨rõrsSGIX
(dpy, s¸ìn, max);  (
Boﬁ
)0;
	}
}

5247 
PFNGLXBINDSWAPBARRIERSGIXPROC
 
	gpglXBödSw≠B¨rõrSGIX
=
_Lazy_glXBödSw≠B¨rõrSGIX
;

5248 
PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC
 
	gpglXQuîyMaxSw≠B¨rõrsSGIX
=
_Lazy_glXQuîyMaxSw≠B¨rõrsSGIX
;

5253 #ifde‡
__GLEE_GLX_SGIS_bÀnded_ovîœy


5258 #ifde‡
__GLEE_GLX_SGIS_sh¨ed_mu…ißm∂e


5263 #ifde‡
__GLEE_GLX_SUN_gë_å™•¨ít_ödex


5264 
Sètus
 
__°dˇŒ
 
	$_Lazy_glXGëTøn•¨ítIndexSUN
(
Di•œy
 * 
dpy
, 
Wödow
 
ovîœy
, Wödow 
undîœy
, * 
pTøn•¨ítIndex
Ë{i‡(
	`GLìInô
()Ë 
	`glXGëTøn•¨ítIndexSUN
(dpy, ovîœy, undîœy,ÖTøn•¨ítIndex);  (
Sètus
)0;
	}
}

5265 
PFNGLXGETTRANSPARENTINDEXSUNPROC
 
	gpglXGëTøn•¨ítIndexSUN
=
_Lazy_glXGëTøn•¨ítIndexSUN
;

5270 #ifde‡
__GLEE_GLX_3DFX_mu…ißm∂e


5275 #ifde‡
__GLEE_GLX_MESA_c›y_sub_buf„r


5276 
__°dˇŒ
 
	$_Lazy_glXC›ySubBuf„rMESA
(
Di•œy
 * 
dpy
, 
GLXDøwabÀ
 
døwabÀ
, 
x
, 
y
, 
width
, 
height
Ë{i‡(
	`GLìInô
()Ë
	`glXC›ySubBuf„rMESA
(dpy, døwabÀ, x, y, width, height);
	}
}

5277 
PFNGLXCOPYSUBBUFFERMESAPROC
 
	gpglXC›ySubBuf„rMESA
=
_Lazy_glXC›ySubBuf„rMESA
;

5282 #ifde‡
__GLEE_GLX_MESA_pixm≠_cﬁ‹m≠


5283 
GLXPixm≠
 
__°dˇŒ
 
	$_Lazy_glXCª©eGLXPixm≠MESA
(
Di•œy
 * 
dpy
, 
XVisuÆInfo
 * 
visuÆ
, 
Pixm≠
 
pixm≠
, 
Cﬁ‹m≠
 
cm≠
Ë{i‡(
	`GLìInô
()Ë 
	`glXCª©eGLXPixm≠MESA
(dpy, visuÆ,Öixm≠, cm≠);  (
GLXPixm≠
)0;
	}
}

5284 
PFNGLXCREATEGLXPIXMAPMESAPROC
 
	gpglXCª©eGLXPixm≠MESA
=
_Lazy_glXCª©eGLXPixm≠MESA
;

5289 #ifde‡
__GLEE_GLX_MESA_ªÀa£_buf„rs


5290 
Boﬁ
 
__°dˇŒ
 
	$_Lazy_glXRñó£Buf„rsMESA
(
Di•œy
 * 
dpy
, 
GLXDøwabÀ
 
døwabÀ
Ë{i‡(
	`GLìInô
()Ë 
	`glXRñó£Buf„rsMESA
(dpy, døwabÀ);  (
Boﬁ
)0;
	}
}

5291 
PFNGLXRELEASEBUFFERSMESAPROC
 
	gpglXRñó£Buf„rsMESA
=
_Lazy_glXRñó£Buf„rsMESA
;

5296 #ifde‡
__GLEE_GLX_MESA_£t_3dfx_mode


5297 
Boﬁ
 
__°dˇŒ
 
	$_Lazy_glXSë3DfxModeMESA
(
mode
Ë{i‡(
	`GLìInô
()Ë 
	`glXSë3DfxModeMESA
(mode);  (
Boﬁ
)0;
	}
}

5298 
PFNGLXSET3DFXMODEMESAPROC
 
	gpglXSë3DfxModeMESA
=
_Lazy_glXSë3DfxModeMESA
;

5303 #ifde‡
__GLEE_GLX_SGIX_visuÆ_£À˘_group


5308 #ifde‡
__GLEE_GLX_OML_sw≠_mëhod


5313 #ifde‡
__GLEE_GLX_OML_sync_c⁄åﬁ


5314 
Boﬁ
 
__°dˇŒ
 
	$_Lazy_glXGëSyncVÆuesOML
(
Di•œy
 * 
dpy
, 
GLXDøwabÀ
 
døwabÀ
, 
öt64_t
 * 
u°
, i¡64_à* 
msc
, i¡64_à* 
sbc
Ë{i‡(
	`GLìInô
()Ë 
	`glXGëSyncVÆuesOML
(dpy, døwabÀ, u°, msc, sbc);  (
Boﬁ
)0;
	}
}

5315 
Boﬁ
 
__°dˇŒ
 
	$_Lazy_glXGëMscR©eOML
(
Di•œy
 * 
dpy
, 
GLXDøwabÀ
 
døwabÀ
, 
öt32_t
 * 
numî©‹
, i¡32_à* 
díomö©‹
Ë{i‡(
	`GLìInô
()Ë 
	`glXGëMscR©eOML
(dpy, døwabÀ,Çumî©‹, díomö©‹);  (
Boﬁ
)0;
	}
}

5316 
öt64_t
 
__°dˇŒ
 
	$_Lazy_glXSw≠Buf„rsMscOML
(
Di•œy
 * 
dpy
, 
GLXDøwabÀ
 
døwabÀ
, 
öt64_t
 
èrgë_msc
, i¡64_à
divis‹
, i¡64_à
ªmaödî
Ë{i‡(
	`GLìInô
()Ë 
	`glXSw≠Buf„rsMscOML
(dpy, døwabÀ,Å¨gë_msc, divis‹,Ñemaödî);  (öt64_t)0;
	}
}

5317 
Boﬁ
 
__°dˇŒ
 
	$_Lazy_glXWaôF‹MscOML
(
Di•œy
 * 
dpy
, 
GLXDøwabÀ
 
døwabÀ
, 
öt64_t
 
èrgë_msc
, i¡64_à
divis‹
, i¡64_à
ªmaödî
, i¡64_à* 
u°
, i¡64_à* 
msc
, i¡64_à* 
sbc
Ë{i‡(
	`GLìInô
()Ë 
	`glXWaôF‹MscOML
(dpy, døwabÀ,Å¨gë_msc, divis‹,Ñemaödî, u°, msc, sbc);  (
Boﬁ
)0;
	}
}

5318 
Boﬁ
 
__°dˇŒ
 
	$_Lazy_glXWaôF‹SbcOML
(
Di•œy
 * 
dpy
, 
GLXDøwabÀ
 
døwabÀ
, 
öt64_t
 
èrgë_sbc
, i¡64_à* 
u°
, i¡64_à* 
msc
, i¡64_à* 
sbc
Ë{i‡(
	`GLìInô
()Ë 
	`glXWaôF‹SbcOML
(dpy, døwabÀ,Å¨gë_sbc, u°, msc, sbc);  (
Boﬁ
)0;
	}
}

5319 
PFNGLXGETSYNCVALUESOMLPROC
 
	gpglXGëSyncVÆuesOML
=
_Lazy_glXGëSyncVÆuesOML
;

5320 
PFNGLXGETMSCRATEOMLPROC
 
	gpglXGëMscR©eOML
=
_Lazy_glXGëMscR©eOML
;

5321 
PFNGLXSWAPBUFFERSMSCOMLPROC
 
	gpglXSw≠Buf„rsMscOML
=
_Lazy_glXSw≠Buf„rsMscOML
;

5322 
PFNGLXWAITFORMSCOMLPROC
 
	gpglXWaôF‹MscOML
=
_Lazy_glXWaôF‹MscOML
;

5323 
PFNGLXWAITFORSBCOMLPROC
 
	gpglXWaôF‹SbcOML
=
_Lazy_glXWaôF‹SbcOML
;

5328 #ifde‡
__GLEE_GLX_NV_Êﬂt_buf„r


5333 #ifde‡
__GLEE_GLX_SGIX_hy≥Ωùe


5334 
GLXHy≥ΩùeNëw‹kSGIX
 * 
__°dˇŒ
 
	$_Lazy_glXQuîyHy≥ΩùeNëw‹kSGIX
(
Di•œy
 * 
dpy
, * 
≈ùes
Ë{i‡(
	`GLìInô
()Ë 
	`glXQuîyHy≥ΩùeNëw‹kSGIX
(dpy,Çpùes);  (
GLXHy≥ΩùeNëw‹kSGIX
 *)0;
	}
}

5335 
__°dˇŒ
 
	$_Lazy_glXHy≥ΩùeC⁄figSGIX
(
Di•œy
 * 
dpy
, 
√tw‹kId
, 
≈ùes
, 
GLXHy≥ΩùeC⁄figSGIX
 * 
cfg
, * 
hpId
Ë{i‡(
	`GLìInô
()Ë 
	`glXHy≥ΩùeC⁄figSGIX
(dpy,Çëw‹kId,Çpùes, cfg, hpId);  ()0;
	}
}

5336 
GLXHy≥ΩùeC⁄figSGIX
 * 
__°dˇŒ
 
	$_Lazy_glXQuîyHy≥ΩùeC⁄figSGIX
(
Di•œy
 * 
dpy
, 
hpId
, * 
≈ùes
Ë{i‡(
	`GLìInô
()Ë 
	`glXQuîyHy≥ΩùeC⁄figSGIX
(dpy, hpId,Çpùes);  (
GLXHy≥ΩùeC⁄figSGIX
 *)0;
	}
}

5337 
__°dˇŒ
 
	$_Lazy_glXDe°royHy≥ΩùeC⁄figSGIX
(
Di•œy
 * 
dpy
, 
hpId
Ë{i‡(
	`GLìInô
()Ë 
	`glXDe°royHy≥ΩùeC⁄figSGIX
(dpy, hpId);  ()0;
	}
}

5338 
__°dˇŒ
 
	$_Lazy_glXBödHy≥ΩùeSGIX
(
Di•œy
 * 
dpy
, 
hpId
Ë{i‡(
	`GLìInô
()Ë 
	`glXBödHy≥ΩùeSGIX
(dpy, hpId);  ()0;
	}
}

5339 
__°dˇŒ
 
	$_Lazy_glXQuîyHy≥ΩùeBe°AâribSGIX
(
Di•œy
 * 
dpy
, 
timeSli˚
, 
©åib
, 
size
, * 
©åibLi°
, * 
ªtu∫AâribLi°
Ë{i‡(
	`GLìInô
()Ë 
	`glXQuîyHy≥ΩùeBe°AâribSGIX
(dpy,ÅimeSli˚,áârib, size,áâribLi°,Ñëu∫AâribLi°);  ()0;
	}
}

5340 
__°dˇŒ
 
	$_Lazy_glXHy≥ΩùeAâribSGIX
(
Di•œy
 * 
dpy
, 
timeSli˚
, 
©åib
, 
size
, * 
©åibLi°
Ë{i‡(
	`GLìInô
()Ë 
	`glXHy≥ΩùeAâribSGIX
(dpy,ÅimeSli˚,áârib, size,áâribLi°);  ()0;
	}
}

5341 
__°dˇŒ
 
	$_Lazy_glXQuîyHy≥ΩùeAâribSGIX
(
Di•œy
 * 
dpy
, 
timeSli˚
, 
©åib
, 
size
, * 
ªtu∫AâribLi°
Ë{i‡(
	`GLìInô
()Ë 
	`glXQuîyHy≥ΩùeAâribSGIX
(dpy,ÅimeSli˚,áârib, size,Ñëu∫AâribLi°);  ()0;
	}
}

5342 
PFNGLXQUERYHYPERPIPENETWORKSGIXPROC
 
	gpglXQuîyHy≥ΩùeNëw‹kSGIX
=
_Lazy_glXQuîyHy≥ΩùeNëw‹kSGIX
;

5343 
PFNGLXHYPERPIPECONFIGSGIXPROC
 
	gpglXHy≥ΩùeC⁄figSGIX
=
_Lazy_glXHy≥ΩùeC⁄figSGIX
;

5344 
PFNGLXQUERYHYPERPIPECONFIGSGIXPROC
 
	gpglXQuîyHy≥ΩùeC⁄figSGIX
=
_Lazy_glXQuîyHy≥ΩùeC⁄figSGIX
;

5345 
PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC
 
	gpglXDe°royHy≥ΩùeC⁄figSGIX
=
_Lazy_glXDe°royHy≥ΩùeC⁄figSGIX
;

5346 
PFNGLXBINDHYPERPIPESGIXPROC
 
	gpglXBödHy≥ΩùeSGIX
=
_Lazy_glXBödHy≥ΩùeSGIX
;

5347 
PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC
 
	gpglXQuîyHy≥ΩùeBe°AâribSGIX
=
_Lazy_glXQuîyHy≥ΩùeBe°AâribSGIX
;

5348 
PFNGLXHYPERPIPEATTRIBSGIXPROC
 
	gpglXHy≥ΩùeAâribSGIX
=
_Lazy_glXHy≥ΩùeAâribSGIX
;

5349 
PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC
 
	gpglXQuîyHy≥ΩùeAâribSGIX
=
_Lazy_glXQuîyHy≥ΩùeAâribSGIX
;

5354 #ifde‡
__GLEE_GLX_MESA_agp_off£t


5355 
__°dˇŒ
 
	$_Lazy_glXGëAGPOff£tMESA
(c⁄° * 
poöãr
Ë{i‡(
	`GLìInô
()Ë 
	`glXGëAGPOff£tMESA
’oöãr);  ()0;
	}
}

5356 
PFNGLXGETAGPOFFSETMESAPROC
 
	gpglXGëAGPOff£tMESA
=
_Lazy_glXGëAGPOff£tMESA
;

5361 #ifde‡
__GLEE_GLX_EXT_s˚√_m¨kî


5368 
GLuöt
 
	$__GLìLök_GL_VERSION_1_2
()

5370 
GLöt
 
nLöked
=0;

5371 #ifde‡
__GLEE_GL_VERSION_1_2


5372 i‡((
pglBÀndCﬁ‹
 = (
PFNGLBLENDCOLORPROC
Ë
	`__GLìGëProcAddªss
("glBÀndCﬁ‹"))!=0Ë
nLöked
++;

5373 i‡((
pglBÀndEqu©i⁄
 = (
PFNGLBLENDEQUATIONPROC
Ë
	`__GLìGëProcAddªss
("glBÀndEqu©i⁄"))!=0Ë
nLöked
++;

5374 i‡((
pglDøwR™geEÀmíts
 = (
PFNGLDRAWRANGEELEMENTSPROC
Ë
	`__GLìGëProcAddªss
("glDøwR™geEÀmíts"))!=0Ë
nLöked
++;

5375 i‡((
pglCﬁ‹TabÀ
 = (
PFNGLCOLORTABLEPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹TabÀ"))!=0Ë
nLöked
++;

5376 i‡((
pglCﬁ‹TabÀP¨amëîfv
 = (
PFNGLCOLORTABLEPARAMETERFVPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹TabÀP¨amëîfv"))!=0Ë
nLöked
++;

5377 i‡((
pglCﬁ‹TabÀP¨amëîiv
 = (
PFNGLCOLORTABLEPARAMETERIVPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹TabÀP¨amëîiv"))!=0Ë
nLöked
++;

5378 i‡((
pglC›yCﬁ‹TabÀ
 = (
PFNGLCOPYCOLORTABLEPROC
Ë
	`__GLìGëProcAddªss
("glC›yCﬁ‹TabÀ"))!=0Ë
nLöked
++;

5379 i‡((
pglGëCﬁ‹TabÀ
 = (
PFNGLGETCOLORTABLEPROC
Ë
	`__GLìGëProcAddªss
("glGëCﬁ‹TabÀ"))!=0Ë
nLöked
++;

5380 i‡((
pglGëCﬁ‹TabÀP¨amëîfv
 = (
PFNGLGETCOLORTABLEPARAMETERFVPROC
Ë
	`__GLìGëProcAddªss
("glGëCﬁ‹TabÀP¨amëîfv"))!=0Ë
nLöked
++;

5381 i‡((
pglGëCﬁ‹TabÀP¨amëîiv
 = (
PFNGLGETCOLORTABLEPARAMETERIVPROC
Ë
	`__GLìGëProcAddªss
("glGëCﬁ‹TabÀP¨amëîiv"))!=0Ë
nLöked
++;

5382 i‡((
pglCﬁ‹SubTabÀ
 = (
PFNGLCOLORSUBTABLEPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹SubTabÀ"))!=0Ë
nLöked
++;

5383 i‡((
pglC›yCﬁ‹SubTabÀ
 = (
PFNGLCOPYCOLORSUBTABLEPROC
Ë
	`__GLìGëProcAddªss
("glC›yCﬁ‹SubTabÀ"))!=0Ë
nLöked
++;

5384 i‡((
pglC⁄vﬁuti⁄Fûãr1D
 = (
PFNGLCONVOLUTIONFILTER1DPROC
Ë
	`__GLìGëProcAddªss
("glC⁄vﬁuti⁄Fûãr1D"))!=0Ë
nLöked
++;

5385 i‡((
pglC⁄vﬁuti⁄Fûãr2D
 = (
PFNGLCONVOLUTIONFILTER2DPROC
Ë
	`__GLìGëProcAddªss
("glC⁄vﬁuti⁄Fûãr2D"))!=0Ë
nLöked
++;

5386 i‡((
pglC⁄vﬁuti⁄P¨amëîf
 = (
PFNGLCONVOLUTIONPARAMETERFPROC
Ë
	`__GLìGëProcAddªss
("glC⁄vﬁuti⁄P¨amëîf"))!=0Ë
nLöked
++;

5387 i‡((
pglC⁄vﬁuti⁄P¨amëîfv
 = (
PFNGLCONVOLUTIONPARAMETERFVPROC
Ë
	`__GLìGëProcAddªss
("glC⁄vﬁuti⁄P¨amëîfv"))!=0Ë
nLöked
++;

5388 i‡((
pglC⁄vﬁuti⁄P¨amëîi
 = (
PFNGLCONVOLUTIONPARAMETERIPROC
Ë
	`__GLìGëProcAddªss
("glC⁄vﬁuti⁄P¨amëîi"))!=0Ë
nLöked
++;

5389 i‡((
pglC⁄vﬁuti⁄P¨amëîiv
 = (
PFNGLCONVOLUTIONPARAMETERIVPROC
Ë
	`__GLìGëProcAddªss
("glC⁄vﬁuti⁄P¨amëîiv"))!=0Ë
nLöked
++;

5390 i‡((
pglC›yC⁄vﬁuti⁄Fûãr1D
 = (
PFNGLCOPYCONVOLUTIONFILTER1DPROC
Ë
	`__GLìGëProcAddªss
("glC›yC⁄vﬁuti⁄Fûãr1D"))!=0Ë
nLöked
++;

5391 i‡((
pglC›yC⁄vﬁuti⁄Fûãr2D
 = (
PFNGLCOPYCONVOLUTIONFILTER2DPROC
Ë
	`__GLìGëProcAddªss
("glC›yC⁄vﬁuti⁄Fûãr2D"))!=0Ë
nLöked
++;

5392 i‡((
pglGëC⁄vﬁuti⁄Fûãr
 = (
PFNGLGETCONVOLUTIONFILTERPROC
Ë
	`__GLìGëProcAddªss
("glGëC⁄vﬁuti⁄Fûãr"))!=0Ë
nLöked
++;

5393 i‡((
pglGëC⁄vﬁuti⁄P¨amëîfv
 = (
PFNGLGETCONVOLUTIONPARAMETERFVPROC
Ë
	`__GLìGëProcAddªss
("glGëC⁄vﬁuti⁄P¨amëîfv"))!=0Ë
nLöked
++;

5394 i‡((
pglGëC⁄vﬁuti⁄P¨amëîiv
 = (
PFNGLGETCONVOLUTIONPARAMETERIVPROC
Ë
	`__GLìGëProcAddªss
("glGëC⁄vﬁuti⁄P¨amëîiv"))!=0Ë
nLöked
++;

5395 i‡((
pglGëSï¨abÀFûãr
 = (
PFNGLGETSEPARABLEFILTERPROC
Ë
	`__GLìGëProcAddªss
("glGëSï¨abÀFûãr"))!=0Ë
nLöked
++;

5396 i‡((
pglSï¨abÀFûãr2D
 = (
PFNGLSEPARABLEFILTER2DPROC
Ë
	`__GLìGëProcAddªss
("glSï¨abÀFûãr2D"))!=0Ë
nLöked
++;

5397 i‡((
pglGëHi°ogøm
 = (
PFNGLGETHISTOGRAMPROC
Ë
	`__GLìGëProcAddªss
("glGëHi°ogøm"))!=0Ë
nLöked
++;

5398 i‡((
pglGëHi°ogømP¨amëîfv
 = (
PFNGLGETHISTOGRAMPARAMETERFVPROC
Ë
	`__GLìGëProcAddªss
("glGëHi°ogømP¨amëîfv"))!=0Ë
nLöked
++;

5399 i‡((
pglGëHi°ogømP¨amëîiv
 = (
PFNGLGETHISTOGRAMPARAMETERIVPROC
Ë
	`__GLìGëProcAddªss
("glGëHi°ogømP¨amëîiv"))!=0Ë
nLöked
++;

5400 i‡((
pglGëMömax
 = (
PFNGLGETMINMAXPROC
Ë
	`__GLìGëProcAddªss
("glGëMömax"))!=0Ë
nLöked
++;

5401 i‡((
pglGëMömaxP¨amëîfv
 = (
PFNGLGETMINMAXPARAMETERFVPROC
Ë
	`__GLìGëProcAddªss
("glGëMömaxP¨amëîfv"))!=0Ë
nLöked
++;

5402 i‡((
pglGëMömaxP¨amëîiv
 = (
PFNGLGETMINMAXPARAMETERIVPROC
Ë
	`__GLìGëProcAddªss
("glGëMömaxP¨amëîiv"))!=0Ë
nLöked
++;

5403 i‡((
pglHi°ogøm
 = (
PFNGLHISTOGRAMPROC
Ë
	`__GLìGëProcAddªss
("glHi°ogøm"))!=0Ë
nLöked
++;

5404 i‡((
pglMömax
 = (
PFNGLMINMAXPROC
Ë
	`__GLìGëProcAddªss
("glMömax"))!=0Ë
nLöked
++;

5405 i‡((
pglRe£tHi°ogøm
 = (
PFNGLRESETHISTOGRAMPROC
Ë
	`__GLìGëProcAddªss
("glRe£tHi°ogøm"))!=0Ë
nLöked
++;

5406 i‡((
pglRe£tMömax
 = (
PFNGLRESETMINMAXPROC
Ë
	`__GLìGëProcAddªss
("glRe£tMömax"))!=0Ë
nLöked
++;

5407 i‡((
pglTexImage3D
 = (
PFNGLTEXIMAGE3DPROC
Ë
	`__GLìGëProcAddªss
("glTexImage3D"))!=0Ë
nLöked
++;

5408 i‡((
pglTexSubImage3D
 = (
PFNGLTEXSUBIMAGE3DPROC
Ë
	`__GLìGëProcAddªss
("glTexSubImage3D"))!=0Ë
nLöked
++;

5409 i‡((
pglC›yTexSubImage3D
 = (
PFNGLCOPYTEXSUBIMAGE3DPROC
Ë
	`__GLìGëProcAddªss
("glC›yTexSubImage3D"))!=0Ë
nLöked
++;

5411 i‡(
nLöked
==38Ë 
GLEE_LINK_COMPLETE
;

5412 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5413  
GLEE_LINK_PARTIAL
;

5414 
	}
}

5416 
GLuöt
 
	$__GLìLök_GL_ARB_imagög
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

5418 
GLuöt
 
	$__GLìLök_GL_VERSION_1_3
()

5420 
GLöt
 
nLöked
=0;

5421 #ifde‡
__GLEE_GL_VERSION_1_3


5422 i‡((
pglA˘iveTextuª
 = (
PFNGLACTIVETEXTUREPROC
Ë
	`__GLìGëProcAddªss
("glA˘iveTextuª"))!=0Ë
nLöked
++;

5423 i‡((
pglClõ¡A˘iveTextuª
 = (
PFNGLCLIENTACTIVETEXTUREPROC
Ë
	`__GLìGëProcAddªss
("glClõ¡A˘iveTextuª"))!=0Ë
nLöked
++;

5424 i‡((
pglMu…iTexCo‹d1d
 = (
PFNGLMULTITEXCOORD1DPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1d"))!=0Ë
nLöked
++;

5425 i‡((
pglMu…iTexCo‹d1dv
 = (
PFNGLMULTITEXCOORD1DVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1dv"))!=0Ë
nLöked
++;

5426 i‡((
pglMu…iTexCo‹d1f
 = (
PFNGLMULTITEXCOORD1FPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1f"))!=0Ë
nLöked
++;

5427 i‡((
pglMu…iTexCo‹d1fv
 = (
PFNGLMULTITEXCOORD1FVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1fv"))!=0Ë
nLöked
++;

5428 i‡((
pglMu…iTexCo‹d1i
 = (
PFNGLMULTITEXCOORD1IPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1i"))!=0Ë
nLöked
++;

5429 i‡((
pglMu…iTexCo‹d1iv
 = (
PFNGLMULTITEXCOORD1IVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1iv"))!=0Ë
nLöked
++;

5430 i‡((
pglMu…iTexCo‹d1s
 = (
PFNGLMULTITEXCOORD1SPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1s"))!=0Ë
nLöked
++;

5431 i‡((
pglMu…iTexCo‹d1sv
 = (
PFNGLMULTITEXCOORD1SVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1sv"))!=0Ë
nLöked
++;

5432 i‡((
pglMu…iTexCo‹d2d
 = (
PFNGLMULTITEXCOORD2DPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2d"))!=0Ë
nLöked
++;

5433 i‡((
pglMu…iTexCo‹d2dv
 = (
PFNGLMULTITEXCOORD2DVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2dv"))!=0Ë
nLöked
++;

5434 i‡((
pglMu…iTexCo‹d2f
 = (
PFNGLMULTITEXCOORD2FPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2f"))!=0Ë
nLöked
++;

5435 i‡((
pglMu…iTexCo‹d2fv
 = (
PFNGLMULTITEXCOORD2FVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2fv"))!=0Ë
nLöked
++;

5436 i‡((
pglMu…iTexCo‹d2i
 = (
PFNGLMULTITEXCOORD2IPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2i"))!=0Ë
nLöked
++;

5437 i‡((
pglMu…iTexCo‹d2iv
 = (
PFNGLMULTITEXCOORD2IVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2iv"))!=0Ë
nLöked
++;

5438 i‡((
pglMu…iTexCo‹d2s
 = (
PFNGLMULTITEXCOORD2SPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2s"))!=0Ë
nLöked
++;

5439 i‡((
pglMu…iTexCo‹d2sv
 = (
PFNGLMULTITEXCOORD2SVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2sv"))!=0Ë
nLöked
++;

5440 i‡((
pglMu…iTexCo‹d3d
 = (
PFNGLMULTITEXCOORD3DPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3d"))!=0Ë
nLöked
++;

5441 i‡((
pglMu…iTexCo‹d3dv
 = (
PFNGLMULTITEXCOORD3DVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3dv"))!=0Ë
nLöked
++;

5442 i‡((
pglMu…iTexCo‹d3f
 = (
PFNGLMULTITEXCOORD3FPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3f"))!=0Ë
nLöked
++;

5443 i‡((
pglMu…iTexCo‹d3fv
 = (
PFNGLMULTITEXCOORD3FVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3fv"))!=0Ë
nLöked
++;

5444 i‡((
pglMu…iTexCo‹d3i
 = (
PFNGLMULTITEXCOORD3IPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3i"))!=0Ë
nLöked
++;

5445 i‡((
pglMu…iTexCo‹d3iv
 = (
PFNGLMULTITEXCOORD3IVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3iv"))!=0Ë
nLöked
++;

5446 i‡((
pglMu…iTexCo‹d3s
 = (
PFNGLMULTITEXCOORD3SPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3s"))!=0Ë
nLöked
++;

5447 i‡((
pglMu…iTexCo‹d3sv
 = (
PFNGLMULTITEXCOORD3SVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3sv"))!=0Ë
nLöked
++;

5448 i‡((
pglMu…iTexCo‹d4d
 = (
PFNGLMULTITEXCOORD4DPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4d"))!=0Ë
nLöked
++;

5449 i‡((
pglMu…iTexCo‹d4dv
 = (
PFNGLMULTITEXCOORD4DVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4dv"))!=0Ë
nLöked
++;

5450 i‡((
pglMu…iTexCo‹d4f
 = (
PFNGLMULTITEXCOORD4FPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4f"))!=0Ë
nLöked
++;

5451 i‡((
pglMu…iTexCo‹d4fv
 = (
PFNGLMULTITEXCOORD4FVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4fv"))!=0Ë
nLöked
++;

5452 i‡((
pglMu…iTexCo‹d4i
 = (
PFNGLMULTITEXCOORD4IPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4i"))!=0Ë
nLöked
++;

5453 i‡((
pglMu…iTexCo‹d4iv
 = (
PFNGLMULTITEXCOORD4IVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4iv"))!=0Ë
nLöked
++;

5454 i‡((
pglMu…iTexCo‹d4s
 = (
PFNGLMULTITEXCOORD4SPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4s"))!=0Ë
nLöked
++;

5455 i‡((
pglMu…iTexCo‹d4sv
 = (
PFNGLMULTITEXCOORD4SVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4sv"))!=0Ë
nLöked
++;

5456 i‡((
pglLﬂdTøn•o£M©rixf
 = (
PFNGLLOADTRANSPOSEMATRIXFPROC
Ë
	`__GLìGëProcAddªss
("glLﬂdTøn•o£M©rixf"))!=0Ë
nLöked
++;

5457 i‡((
pglLﬂdTøn•o£M©rixd
 = (
PFNGLLOADTRANSPOSEMATRIXDPROC
Ë
	`__GLìGëProcAddªss
("glLﬂdTøn•o£M©rixd"))!=0Ë
nLöked
++;

5458 i‡((
pglMu…Tøn•o£M©rixf
 = (
PFNGLMULTTRANSPOSEMATRIXFPROC
Ë
	`__GLìGëProcAddªss
("glMu…Tøn•o£M©rixf"))!=0Ë
nLöked
++;

5459 i‡((
pglMu…Tøn•o£M©rixd
 = (
PFNGLMULTTRANSPOSEMATRIXDPROC
Ë
	`__GLìGëProcAddªss
("glMu…Tøn•o£M©rixd"))!=0Ë
nLöked
++;

5460 i‡((
pglSam∂eCovîage
 = (
PFNGLSAMPLECOVERAGEPROC
Ë
	`__GLìGëProcAddªss
("glSam∂eCovîage"))!=0Ë
nLöked
++;

5461 i‡((
pglCom¥es£dTexImage3D
 = (
PFNGLCOMPRESSEDTEXIMAGE3DPROC
Ë
	`__GLìGëProcAddªss
("glCom¥es£dTexImage3D"))!=0Ë
nLöked
++;

5462 i‡((
pglCom¥es£dTexImage2D
 = (
PFNGLCOMPRESSEDTEXIMAGE2DPROC
Ë
	`__GLìGëProcAddªss
("glCom¥es£dTexImage2D"))!=0Ë
nLöked
++;

5463 i‡((
pglCom¥es£dTexImage1D
 = (
PFNGLCOMPRESSEDTEXIMAGE1DPROC
Ë
	`__GLìGëProcAddªss
("glCom¥es£dTexImage1D"))!=0Ë
nLöked
++;

5464 i‡((
pglCom¥es£dTexSubImage3D
 = (
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
Ë
	`__GLìGëProcAddªss
("glCom¥es£dTexSubImage3D"))!=0Ë
nLöked
++;

5465 i‡((
pglCom¥es£dTexSubImage2D
 = (
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
Ë
	`__GLìGëProcAddªss
("glCom¥es£dTexSubImage2D"))!=0Ë
nLöked
++;

5466 i‡((
pglCom¥es£dTexSubImage1D
 = (
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
Ë
	`__GLìGëProcAddªss
("glCom¥es£dTexSubImage1D"))!=0Ë
nLöked
++;

5467 i‡((
pglGëCom¥es£dTexImage
 = (
PFNGLGETCOMPRESSEDTEXIMAGEPROC
Ë
	`__GLìGëProcAddªss
("glGëCom¥es£dTexImage"))!=0Ë
nLöked
++;

5469 i‡(
nLöked
==46Ë 
GLEE_LINK_COMPLETE
;

5470 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5471  
GLEE_LINK_PARTIAL
;

5472 
	}
}

5474 
GLuöt
 
	$__GLìLök_GL_VERSION_1_4
()

5476 
GLöt
 
nLöked
=0;

5477 #ifde‡
__GLEE_GL_VERSION_1_4


5478 i‡((
pglBÀndFuncSï¨©e
 = (
PFNGLBLENDFUNCSEPARATEPROC
Ë
	`__GLìGëProcAddªss
("glBÀndFuncSï¨©e"))!=0Ë
nLöked
++;

5479 i‡((
pglFogCo‹df
 = (
PFNGLFOGCOORDFPROC
Ë
	`__GLìGëProcAddªss
("glFogCo‹df"))!=0Ë
nLöked
++;

5480 i‡((
pglFogCo‹dfv
 = (
PFNGLFOGCOORDFVPROC
Ë
	`__GLìGëProcAddªss
("glFogCo‹dfv"))!=0Ë
nLöked
++;

5481 i‡((
pglFogCo‹dd
 = (
PFNGLFOGCOORDDPROC
Ë
	`__GLìGëProcAddªss
("glFogCo‹dd"))!=0Ë
nLöked
++;

5482 i‡((
pglFogCo‹ddv
 = (
PFNGLFOGCOORDDVPROC
Ë
	`__GLìGëProcAddªss
("glFogCo‹ddv"))!=0Ë
nLöked
++;

5483 i‡((
pglFogCo‹dPoöãr
 = (
PFNGLFOGCOORDPOINTERPROC
Ë
	`__GLìGëProcAddªss
("glFogCo‹dPoöãr"))!=0Ë
nLöked
++;

5484 i‡((
pglMu…iDøwAºays
 = (
PFNGLMULTIDRAWARRAYSPROC
Ë
	`__GLìGëProcAddªss
("glMu…iDøwAºays"))!=0Ë
nLöked
++;

5485 i‡((
pglMu…iDøwEÀmíts
 = (
PFNGLMULTIDRAWELEMENTSPROC
Ë
	`__GLìGëProcAddªss
("glMu…iDøwEÀmíts"))!=0Ë
nLöked
++;

5486 i‡((
pglPoötP¨amëîf
 = (
PFNGLPOINTPARAMETERFPROC
Ë
	`__GLìGëProcAddªss
("glPoötP¨amëîf"))!=0Ë
nLöked
++;

5487 i‡((
pglPoötP¨amëîfv
 = (
PFNGLPOINTPARAMETERFVPROC
Ë
	`__GLìGëProcAddªss
("glPoötP¨amëîfv"))!=0Ë
nLöked
++;

5488 i‡((
pglPoötP¨amëîi
 = (
PFNGLPOINTPARAMETERIPROC
Ë
	`__GLìGëProcAddªss
("glPoötP¨amëîi"))!=0Ë
nLöked
++;

5489 i‡((
pglPoötP¨amëîiv
 = (
PFNGLPOINTPARAMETERIVPROC
Ë
	`__GLìGëProcAddªss
("glPoötP¨amëîiv"))!=0Ë
nLöked
++;

5490 i‡((
pglSec⁄d¨yCﬁ‹3b
 = (
PFNGLSECONDARYCOLOR3BPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3b"))!=0Ë
nLöked
++;

5491 i‡((
pglSec⁄d¨yCﬁ‹3bv
 = (
PFNGLSECONDARYCOLOR3BVPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3bv"))!=0Ë
nLöked
++;

5492 i‡((
pglSec⁄d¨yCﬁ‹3d
 = (
PFNGLSECONDARYCOLOR3DPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3d"))!=0Ë
nLöked
++;

5493 i‡((
pglSec⁄d¨yCﬁ‹3dv
 = (
PFNGLSECONDARYCOLOR3DVPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3dv"))!=0Ë
nLöked
++;

5494 i‡((
pglSec⁄d¨yCﬁ‹3f
 = (
PFNGLSECONDARYCOLOR3FPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3f"))!=0Ë
nLöked
++;

5495 i‡((
pglSec⁄d¨yCﬁ‹3fv
 = (
PFNGLSECONDARYCOLOR3FVPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3fv"))!=0Ë
nLöked
++;

5496 i‡((
pglSec⁄d¨yCﬁ‹3i
 = (
PFNGLSECONDARYCOLOR3IPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3i"))!=0Ë
nLöked
++;

5497 i‡((
pglSec⁄d¨yCﬁ‹3iv
 = (
PFNGLSECONDARYCOLOR3IVPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3iv"))!=0Ë
nLöked
++;

5498 i‡((
pglSec⁄d¨yCﬁ‹3s
 = (
PFNGLSECONDARYCOLOR3SPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3s"))!=0Ë
nLöked
++;

5499 i‡((
pglSec⁄d¨yCﬁ‹3sv
 = (
PFNGLSECONDARYCOLOR3SVPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3sv"))!=0Ë
nLöked
++;

5500 i‡((
pglSec⁄d¨yCﬁ‹3ub
 = (
PFNGLSECONDARYCOLOR3UBPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3ub"))!=0Ë
nLöked
++;

5501 i‡((
pglSec⁄d¨yCﬁ‹3ubv
 = (
PFNGLSECONDARYCOLOR3UBVPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3ubv"))!=0Ë
nLöked
++;

5502 i‡((
pglSec⁄d¨yCﬁ‹3ui
 = (
PFNGLSECONDARYCOLOR3UIPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3ui"))!=0Ë
nLöked
++;

5503 i‡((
pglSec⁄d¨yCﬁ‹3uiv
 = (
PFNGLSECONDARYCOLOR3UIVPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3uiv"))!=0Ë
nLöked
++;

5504 i‡((
pglSec⁄d¨yCﬁ‹3us
 = (
PFNGLSECONDARYCOLOR3USPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3us"))!=0Ë
nLöked
++;

5505 i‡((
pglSec⁄d¨yCﬁ‹3usv
 = (
PFNGLSECONDARYCOLOR3USVPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3usv"))!=0Ë
nLöked
++;

5506 i‡((
pglSec⁄d¨yCﬁ‹Poöãr
 = (
PFNGLSECONDARYCOLORPOINTERPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹Poöãr"))!=0Ë
nLöked
++;

5507 i‡((
pglWödowPos2d
 = (
PFNGLWINDOWPOS2DPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2d"))!=0Ë
nLöked
++;

5508 i‡((
pglWödowPos2dv
 = (
PFNGLWINDOWPOS2DVPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2dv"))!=0Ë
nLöked
++;

5509 i‡((
pglWödowPos2f
 = (
PFNGLWINDOWPOS2FPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2f"))!=0Ë
nLöked
++;

5510 i‡((
pglWödowPos2fv
 = (
PFNGLWINDOWPOS2FVPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2fv"))!=0Ë
nLöked
++;

5511 i‡((
pglWödowPos2i
 = (
PFNGLWINDOWPOS2IPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2i"))!=0Ë
nLöked
++;

5512 i‡((
pglWödowPos2iv
 = (
PFNGLWINDOWPOS2IVPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2iv"))!=0Ë
nLöked
++;

5513 i‡((
pglWödowPos2s
 = (
PFNGLWINDOWPOS2SPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2s"))!=0Ë
nLöked
++;

5514 i‡((
pglWödowPos2sv
 = (
PFNGLWINDOWPOS2SVPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2sv"))!=0Ë
nLöked
++;

5515 i‡((
pglWödowPos3d
 = (
PFNGLWINDOWPOS3DPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3d"))!=0Ë
nLöked
++;

5516 i‡((
pglWödowPos3dv
 = (
PFNGLWINDOWPOS3DVPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3dv"))!=0Ë
nLöked
++;

5517 i‡((
pglWödowPos3f
 = (
PFNGLWINDOWPOS3FPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3f"))!=0Ë
nLöked
++;

5518 i‡((
pglWödowPos3fv
 = (
PFNGLWINDOWPOS3FVPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3fv"))!=0Ë
nLöked
++;

5519 i‡((
pglWödowPos3i
 = (
PFNGLWINDOWPOS3IPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3i"))!=0Ë
nLöked
++;

5520 i‡((
pglWödowPos3iv
 = (
PFNGLWINDOWPOS3IVPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3iv"))!=0Ë
nLöked
++;

5521 i‡((
pglWödowPos3s
 = (
PFNGLWINDOWPOS3SPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3s"))!=0Ë
nLöked
++;

5522 i‡((
pglWödowPos3sv
 = (
PFNGLWINDOWPOS3SVPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3sv"))!=0Ë
nLöked
++;

5524 i‡(
nLöked
==45Ë 
GLEE_LINK_COMPLETE
;

5525 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5526  
GLEE_LINK_PARTIAL
;

5527 
	}
}

5529 
GLuöt
 
	$__GLìLök_GL_VERSION_1_5
()

5531 
GLöt
 
nLöked
=0;

5532 #ifde‡
__GLEE_GL_VERSION_1_5


5533 i‡((
pglGíQuîõs
 = (
PFNGLGENQUERIESPROC
Ë
	`__GLìGëProcAddªss
("glGíQuîõs"))!=0Ë
nLöked
++;

5534 i‡((
pglDñëeQuîõs
 = (
PFNGLDELETEQUERIESPROC
Ë
	`__GLìGëProcAddªss
("glDñëeQuîõs"))!=0Ë
nLöked
++;

5535 i‡((
pglIsQuîy
 = (
PFNGLISQUERYPROC
Ë
	`__GLìGëProcAddªss
("glIsQuîy"))!=0Ë
nLöked
++;

5536 i‡((
pglBegöQuîy
 = (
PFNGLBEGINQUERYPROC
Ë
	`__GLìGëProcAddªss
("glBegöQuîy"))!=0Ë
nLöked
++;

5537 i‡((
pglEndQuîy
 = (
PFNGLENDQUERYPROC
Ë
	`__GLìGëProcAddªss
("glEndQuîy"))!=0Ë
nLöked
++;

5538 i‡((
pglGëQuîyiv
 = (
PFNGLGETQUERYIVPROC
Ë
	`__GLìGëProcAddªss
("glGëQuîyiv"))!=0Ë
nLöked
++;

5539 i‡((
pglGëQuîyObje˘iv
 = (
PFNGLGETQUERYOBJECTIVPROC
Ë
	`__GLìGëProcAddªss
("glGëQuîyObje˘iv"))!=0Ë
nLöked
++;

5540 i‡((
pglGëQuîyObje˘uiv
 = (
PFNGLGETQUERYOBJECTUIVPROC
Ë
	`__GLìGëProcAddªss
("glGëQuîyObje˘uiv"))!=0Ë
nLöked
++;

5541 i‡((
pglBödBuf„r
 = (
PFNGLBINDBUFFERPROC
Ë
	`__GLìGëProcAddªss
("glBödBuf„r"))!=0Ë
nLöked
++;

5542 i‡((
pglDñëeBuf„rs
 = (
PFNGLDELETEBUFFERSPROC
Ë
	`__GLìGëProcAddªss
("glDñëeBuf„rs"))!=0Ë
nLöked
++;

5543 i‡((
pglGíBuf„rs
 = (
PFNGLGENBUFFERSPROC
Ë
	`__GLìGëProcAddªss
("glGíBuf„rs"))!=0Ë
nLöked
++;

5544 i‡((
pglIsBuf„r
 = (
PFNGLISBUFFERPROC
Ë
	`__GLìGëProcAddªss
("glIsBuf„r"))!=0Ë
nLöked
++;

5545 i‡((
pglBuf„rD©a
 = (
PFNGLBUFFERDATAPROC
Ë
	`__GLìGëProcAddªss
("glBuf„rD©a"))!=0Ë
nLöked
++;

5546 i‡((
pglBuf„rSubD©a
 = (
PFNGLBUFFERSUBDATAPROC
Ë
	`__GLìGëProcAddªss
("glBuf„rSubD©a"))!=0Ë
nLöked
++;

5547 i‡((
pglGëBuf„rSubD©a
 = (
PFNGLGETBUFFERSUBDATAPROC
Ë
	`__GLìGëProcAddªss
("glGëBuf„rSubD©a"))!=0Ë
nLöked
++;

5548 i‡((
pglM≠Buf„r
 = (
PFNGLMAPBUFFERPROC
Ë
	`__GLìGëProcAddªss
("glM≠Buf„r"))!=0Ë
nLöked
++;

5549 i‡((
pglUnm≠Buf„r
 = (
PFNGLUNMAPBUFFERPROC
Ë
	`__GLìGëProcAddªss
("glUnm≠Buf„r"))!=0Ë
nLöked
++;

5550 i‡((
pglGëBuf„rP¨amëîiv
 = (
PFNGLGETBUFFERPARAMETERIVPROC
Ë
	`__GLìGëProcAddªss
("glGëBuf„rP¨amëîiv"))!=0Ë
nLöked
++;

5551 i‡((
pglGëBuf„rPoöãrv
 = (
PFNGLGETBUFFERPOINTERVPROC
Ë
	`__GLìGëProcAddªss
("glGëBuf„rPoöãrv"))!=0Ë
nLöked
++;

5553 i‡(
nLöked
==19Ë 
GLEE_LINK_COMPLETE
;

5554 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5555  
GLEE_LINK_PARTIAL
;

5556 
	}
}

5558 
GLuöt
 
	$__GLìLök_GL_VERSION_2_0
()

5560 
GLöt
 
nLöked
=0;

5561 #ifde‡
__GLEE_GL_VERSION_2_0


5562 i‡((
pglBÀndEqu©i⁄Sï¨©e
 = (
PFNGLBLENDEQUATIONSEPARATEPROC
Ë
	`__GLìGëProcAddªss
("glBÀndEqu©i⁄Sï¨©e"))!=0Ë
nLöked
++;

5563 i‡((
pglDøwBuf„rs
 = (
PFNGLDRAWBUFFERSPROC
Ë
	`__GLìGëProcAddªss
("glDøwBuf„rs"))!=0Ë
nLöked
++;

5564 i‡((
pglSãncûOpSï¨©e
 = (
PFNGLSTENCILOPSEPARATEPROC
Ë
	`__GLìGëProcAddªss
("glSãncûOpSï¨©e"))!=0Ë
nLöked
++;

5565 i‡((
pglSãncûFuncSï¨©e
 = (
PFNGLSTENCILFUNCSEPARATEPROC
Ë
	`__GLìGëProcAddªss
("glSãncûFuncSï¨©e"))!=0Ë
nLöked
++;

5566 i‡((
pglSãncûMaskSï¨©e
 = (
PFNGLSTENCILMASKSEPARATEPROC
Ë
	`__GLìGëProcAddªss
("glSãncûMaskSï¨©e"))!=0Ë
nLöked
++;

5567 i‡((
pglAâachShadî
 = (
PFNGLATTACHSHADERPROC
Ë
	`__GLìGëProcAddªss
("glAâachShadî"))!=0Ë
nLöked
++;

5568 i‡((
pglBödAâribLoˇti⁄
 = (
PFNGLBINDATTRIBLOCATIONPROC
Ë
	`__GLìGëProcAddªss
("glBödAâribLoˇti⁄"))!=0Ë
nLöked
++;

5569 i‡((
pglCompûeShadî
 = (
PFNGLCOMPILESHADERPROC
Ë
	`__GLìGëProcAddªss
("glCompûeShadî"))!=0Ë
nLöked
++;

5570 i‡((
pglCª©eProgøm
 = (
PFNGLCREATEPROGRAMPROC
Ë
	`__GLìGëProcAddªss
("glCª©eProgøm"))!=0Ë
nLöked
++;

5571 i‡((
pglCª©eShadî
 = (
PFNGLCREATESHADERPROC
Ë
	`__GLìGëProcAddªss
("glCª©eShadî"))!=0Ë
nLöked
++;

5572 i‡((
pglDñëeProgøm
 = (
PFNGLDELETEPROGRAMPROC
Ë
	`__GLìGëProcAddªss
("glDñëeProgøm"))!=0Ë
nLöked
++;

5573 i‡((
pglDñëeShadî
 = (
PFNGLDELETESHADERPROC
Ë
	`__GLìGëProcAddªss
("glDñëeShadî"))!=0Ë
nLöked
++;

5574 i‡((
pglDëachShadî
 = (
PFNGLDETACHSHADERPROC
Ë
	`__GLìGëProcAddªss
("glDëachShadî"))!=0Ë
nLöked
++;

5575 i‡((
pglDißbÀVîãxAâribAºay
 = (
PFNGLDISABLEVERTEXATTRIBARRAYPROC
Ë
	`__GLìGëProcAddªss
("glDißbÀVîãxAâribAºay"))!=0Ë
nLöked
++;

5576 i‡((
pglE«bÀVîãxAâribAºay
 = (
PFNGLENABLEVERTEXATTRIBARRAYPROC
Ë
	`__GLìGëProcAddªss
("glE«bÀVîãxAâribAºay"))!=0Ë
nLöked
++;

5577 i‡((
pglGëA˘iveAârib
 = (
PFNGLGETACTIVEATTRIBPROC
Ë
	`__GLìGëProcAddªss
("glGëA˘iveAârib"))!=0Ë
nLöked
++;

5578 i‡((
pglGëA˘iveUnif‹m
 = (
PFNGLGETACTIVEUNIFORMPROC
Ë
	`__GLìGëProcAddªss
("glGëA˘iveUnif‹m"))!=0Ë
nLöked
++;

5579 i‡((
pglGëAâachedShadîs
 = (
PFNGLGETATTACHEDSHADERSPROC
Ë
	`__GLìGëProcAddªss
("glGëAâachedShadîs"))!=0Ë
nLöked
++;

5580 i‡((
pglGëAâribLoˇti⁄
 = (
PFNGLGETATTRIBLOCATIONPROC
Ë
	`__GLìGëProcAddªss
("glGëAâribLoˇti⁄"))!=0Ë
nLöked
++;

5581 i‡((
pglGëProgømiv
 = (
PFNGLGETPROGRAMIVPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømiv"))!=0Ë
nLöked
++;

5582 i‡((
pglGëProgømInfoLog
 = (
PFNGLGETPROGRAMINFOLOGPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømInfoLog"))!=0Ë
nLöked
++;

5583 i‡((
pglGëShadîiv
 = (
PFNGLGETSHADERIVPROC
Ë
	`__GLìGëProcAddªss
("glGëShadîiv"))!=0Ë
nLöked
++;

5584 i‡((
pglGëShadîInfoLog
 = (
PFNGLGETSHADERINFOLOGPROC
Ë
	`__GLìGëProcAddªss
("glGëShadîInfoLog"))!=0Ë
nLöked
++;

5585 i‡((
pglGëShadîSour˚
 = (
PFNGLGETSHADERSOURCEPROC
Ë
	`__GLìGëProcAddªss
("glGëShadîSour˚"))!=0Ë
nLöked
++;

5586 i‡((
pglGëUnif‹mLoˇti⁄
 = (
PFNGLGETUNIFORMLOCATIONPROC
Ë
	`__GLìGëProcAddªss
("glGëUnif‹mLoˇti⁄"))!=0Ë
nLöked
++;

5587 i‡((
pglGëUnif‹mfv
 = (
PFNGLGETUNIFORMFVPROC
Ë
	`__GLìGëProcAddªss
("glGëUnif‹mfv"))!=0Ë
nLöked
++;

5588 i‡((
pglGëUnif‹miv
 = (
PFNGLGETUNIFORMIVPROC
Ë
	`__GLìGëProcAddªss
("glGëUnif‹miv"))!=0Ë
nLöked
++;

5589 i‡((
pglGëVîãxAâribdv
 = (
PFNGLGETVERTEXATTRIBDVPROC
Ë
	`__GLìGëProcAddªss
("glGëVîãxAâribdv"))!=0Ë
nLöked
++;

5590 i‡((
pglGëVîãxAâribfv
 = (
PFNGLGETVERTEXATTRIBFVPROC
Ë
	`__GLìGëProcAddªss
("glGëVîãxAâribfv"))!=0Ë
nLöked
++;

5591 i‡((
pglGëVîãxAâribiv
 = (
PFNGLGETVERTEXATTRIBIVPROC
Ë
	`__GLìGëProcAddªss
("glGëVîãxAâribiv"))!=0Ë
nLöked
++;

5592 i‡((
pglGëVîãxAâribPoöãrv
 = (
PFNGLGETVERTEXATTRIBPOINTERVPROC
Ë
	`__GLìGëProcAddªss
("glGëVîãxAâribPoöãrv"))!=0Ë
nLöked
++;

5593 i‡((
pglIsProgøm
 = (
PFNGLISPROGRAMPROC
Ë
	`__GLìGëProcAddªss
("glIsProgøm"))!=0Ë
nLöked
++;

5594 i‡((
pglIsShadî
 = (
PFNGLISSHADERPROC
Ë
	`__GLìGëProcAddªss
("glIsShadî"))!=0Ë
nLöked
++;

5595 i‡((
pglLökProgøm
 = (
PFNGLLINKPROGRAMPROC
Ë
	`__GLìGëProcAddªss
("glLökProgøm"))!=0Ë
nLöked
++;

5596 i‡((
pglShadîSour˚
 = (
PFNGLSHADERSOURCEPROC
Ë
	`__GLìGëProcAddªss
("glShadîSour˚"))!=0Ë
nLöked
++;

5597 i‡((
pglU£Progøm
 = (
PFNGLUSEPROGRAMPROC
Ë
	`__GLìGëProcAddªss
("glU£Progøm"))!=0Ë
nLöked
++;

5598 i‡((
pglUnif‹m1f
 = (
PFNGLUNIFORM1FPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m1f"))!=0Ë
nLöked
++;

5599 i‡((
pglUnif‹m2f
 = (
PFNGLUNIFORM2FPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m2f"))!=0Ë
nLöked
++;

5600 i‡((
pglUnif‹m3f
 = (
PFNGLUNIFORM3FPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m3f"))!=0Ë
nLöked
++;

5601 i‡((
pglUnif‹m4f
 = (
PFNGLUNIFORM4FPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m4f"))!=0Ë
nLöked
++;

5602 i‡((
pglUnif‹m1i
 = (
PFNGLUNIFORM1IPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m1i"))!=0Ë
nLöked
++;

5603 i‡((
pglUnif‹m2i
 = (
PFNGLUNIFORM2IPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m2i"))!=0Ë
nLöked
++;

5604 i‡((
pglUnif‹m3i
 = (
PFNGLUNIFORM3IPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m3i"))!=0Ë
nLöked
++;

5605 i‡((
pglUnif‹m4i
 = (
PFNGLUNIFORM4IPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m4i"))!=0Ë
nLöked
++;

5606 i‡((
pglUnif‹m1fv
 = (
PFNGLUNIFORM1FVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m1fv"))!=0Ë
nLöked
++;

5607 i‡((
pglUnif‹m2fv
 = (
PFNGLUNIFORM2FVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m2fv"))!=0Ë
nLöked
++;

5608 i‡((
pglUnif‹m3fv
 = (
PFNGLUNIFORM3FVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m3fv"))!=0Ë
nLöked
++;

5609 i‡((
pglUnif‹m4fv
 = (
PFNGLUNIFORM4FVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m4fv"))!=0Ë
nLöked
++;

5610 i‡((
pglUnif‹m1iv
 = (
PFNGLUNIFORM1IVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m1iv"))!=0Ë
nLöked
++;

5611 i‡((
pglUnif‹m2iv
 = (
PFNGLUNIFORM2IVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m2iv"))!=0Ë
nLöked
++;

5612 i‡((
pglUnif‹m3iv
 = (
PFNGLUNIFORM3IVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m3iv"))!=0Ë
nLöked
++;

5613 i‡((
pglUnif‹m4iv
 = (
PFNGLUNIFORM4IVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m4iv"))!=0Ë
nLöked
++;

5614 i‡((
pglUnif‹mM©rix2fv
 = (
PFNGLUNIFORMMATRIX2FVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹mM©rix2fv"))!=0Ë
nLöked
++;

5615 i‡((
pglUnif‹mM©rix3fv
 = (
PFNGLUNIFORMMATRIX3FVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹mM©rix3fv"))!=0Ë
nLöked
++;

5616 i‡((
pglUnif‹mM©rix4fv
 = (
PFNGLUNIFORMMATRIX4FVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹mM©rix4fv"))!=0Ë
nLöked
++;

5617 i‡((
pglVÆid©eProgøm
 = (
PFNGLVALIDATEPROGRAMPROC
Ë
	`__GLìGëProcAddªss
("glVÆid©eProgøm"))!=0Ë
nLöked
++;

5618 i‡((
pglVîãxAârib1d
 = (
PFNGLVERTEXATTRIB1DPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1d"))!=0Ë
nLöked
++;

5619 i‡((
pglVîãxAârib1dv
 = (
PFNGLVERTEXATTRIB1DVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1dv"))!=0Ë
nLöked
++;

5620 i‡((
pglVîãxAârib1f
 = (
PFNGLVERTEXATTRIB1FPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1f"))!=0Ë
nLöked
++;

5621 i‡((
pglVîãxAârib1fv
 = (
PFNGLVERTEXATTRIB1FVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1fv"))!=0Ë
nLöked
++;

5622 i‡((
pglVîãxAârib1s
 = (
PFNGLVERTEXATTRIB1SPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1s"))!=0Ë
nLöked
++;

5623 i‡((
pglVîãxAârib1sv
 = (
PFNGLVERTEXATTRIB1SVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1sv"))!=0Ë
nLöked
++;

5624 i‡((
pglVîãxAârib2d
 = (
PFNGLVERTEXATTRIB2DPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2d"))!=0Ë
nLöked
++;

5625 i‡((
pglVîãxAârib2dv
 = (
PFNGLVERTEXATTRIB2DVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2dv"))!=0Ë
nLöked
++;

5626 i‡((
pglVîãxAârib2f
 = (
PFNGLVERTEXATTRIB2FPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2f"))!=0Ë
nLöked
++;

5627 i‡((
pglVîãxAârib2fv
 = (
PFNGLVERTEXATTRIB2FVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2fv"))!=0Ë
nLöked
++;

5628 i‡((
pglVîãxAârib2s
 = (
PFNGLVERTEXATTRIB2SPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2s"))!=0Ë
nLöked
++;

5629 i‡((
pglVîãxAârib2sv
 = (
PFNGLVERTEXATTRIB2SVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2sv"))!=0Ë
nLöked
++;

5630 i‡((
pglVîãxAârib3d
 = (
PFNGLVERTEXATTRIB3DPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3d"))!=0Ë
nLöked
++;

5631 i‡((
pglVîãxAârib3dv
 = (
PFNGLVERTEXATTRIB3DVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3dv"))!=0Ë
nLöked
++;

5632 i‡((
pglVîãxAârib3f
 = (
PFNGLVERTEXATTRIB3FPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3f"))!=0Ë
nLöked
++;

5633 i‡((
pglVîãxAârib3fv
 = (
PFNGLVERTEXATTRIB3FVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3fv"))!=0Ë
nLöked
++;

5634 i‡((
pglVîãxAârib3s
 = (
PFNGLVERTEXATTRIB3SPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3s"))!=0Ë
nLöked
++;

5635 i‡((
pglVîãxAârib3sv
 = (
PFNGLVERTEXATTRIB3SVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3sv"))!=0Ë
nLöked
++;

5636 i‡((
pglVîãxAârib4Nbv
 = (
PFNGLVERTEXATTRIB4NBVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4Nbv"))!=0Ë
nLöked
++;

5637 i‡((
pglVîãxAârib4Niv
 = (
PFNGLVERTEXATTRIB4NIVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4Niv"))!=0Ë
nLöked
++;

5638 i‡((
pglVîãxAârib4Nsv
 = (
PFNGLVERTEXATTRIB4NSVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4Nsv"))!=0Ë
nLöked
++;

5639 i‡((
pglVîãxAârib4Nub
 = (
PFNGLVERTEXATTRIB4NUBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4Nub"))!=0Ë
nLöked
++;

5640 i‡((
pglVîãxAârib4Nubv
 = (
PFNGLVERTEXATTRIB4NUBVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4Nubv"))!=0Ë
nLöked
++;

5641 i‡((
pglVîãxAârib4Nuiv
 = (
PFNGLVERTEXATTRIB4NUIVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4Nuiv"))!=0Ë
nLöked
++;

5642 i‡((
pglVîãxAârib4Nusv
 = (
PFNGLVERTEXATTRIB4NUSVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4Nusv"))!=0Ë
nLöked
++;

5643 i‡((
pglVîãxAârib4bv
 = (
PFNGLVERTEXATTRIB4BVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4bv"))!=0Ë
nLöked
++;

5644 i‡((
pglVîãxAârib4d
 = (
PFNGLVERTEXATTRIB4DPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4d"))!=0Ë
nLöked
++;

5645 i‡((
pglVîãxAârib4dv
 = (
PFNGLVERTEXATTRIB4DVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4dv"))!=0Ë
nLöked
++;

5646 i‡((
pglVîãxAârib4f
 = (
PFNGLVERTEXATTRIB4FPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4f"))!=0Ë
nLöked
++;

5647 i‡((
pglVîãxAârib4fv
 = (
PFNGLVERTEXATTRIB4FVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4fv"))!=0Ë
nLöked
++;

5648 i‡((
pglVîãxAârib4iv
 = (
PFNGLVERTEXATTRIB4IVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4iv"))!=0Ë
nLöked
++;

5649 i‡((
pglVîãxAârib4s
 = (
PFNGLVERTEXATTRIB4SPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4s"))!=0Ë
nLöked
++;

5650 i‡((
pglVîãxAârib4sv
 = (
PFNGLVERTEXATTRIB4SVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4sv"))!=0Ë
nLöked
++;

5651 i‡((
pglVîãxAârib4ubv
 = (
PFNGLVERTEXATTRIB4UBVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4ubv"))!=0Ë
nLöked
++;

5652 i‡((
pglVîãxAârib4uiv
 = (
PFNGLVERTEXATTRIB4UIVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4uiv"))!=0Ë
nLöked
++;

5653 i‡((
pglVîãxAârib4usv
 = (
PFNGLVERTEXATTRIB4USVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4usv"))!=0Ë
nLöked
++;

5654 i‡((
pglVîãxAâribPoöãr
 = (
PFNGLVERTEXATTRIBPOINTERPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribPoöãr"))!=0Ë
nLöked
++;

5656 i‡(
nLöked
==93Ë 
GLEE_LINK_COMPLETE
;

5657 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5658  
GLEE_LINK_PARTIAL
;

5659 
	}
}

5661 
GLuöt
 
	$__GLìLök_GL_VERSION_2_1
()

5663 
GLöt
 
nLöked
=0;

5664 #ifde‡
__GLEE_GL_VERSION_2_1


5665 i‡((
pglUnif‹mM©rix2x3fv
 = (
PFNGLUNIFORMMATRIX2X3FVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹mM©rix2x3fv"))!=0Ë
nLöked
++;

5666 i‡((
pglUnif‹mM©rix3x2fv
 = (
PFNGLUNIFORMMATRIX3X2FVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹mM©rix3x2fv"))!=0Ë
nLöked
++;

5667 i‡((
pglUnif‹mM©rix2x4fv
 = (
PFNGLUNIFORMMATRIX2X4FVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹mM©rix2x4fv"))!=0Ë
nLöked
++;

5668 i‡((
pglUnif‹mM©rix4x2fv
 = (
PFNGLUNIFORMMATRIX4X2FVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹mM©rix4x2fv"))!=0Ë
nLöked
++;

5669 i‡((
pglUnif‹mM©rix3x4fv
 = (
PFNGLUNIFORMMATRIX3X4FVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹mM©rix3x4fv"))!=0Ë
nLöked
++;

5670 i‡((
pglUnif‹mM©rix4x3fv
 = (
PFNGLUNIFORMMATRIX4X3FVPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹mM©rix4x3fv"))!=0Ë
nLöked
++;

5672 i‡(
nLöked
==6Ë 
GLEE_LINK_COMPLETE
;

5673 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5674  
GLEE_LINK_PARTIAL
;

5675 
	}
}

5677 
GLuöt
 
	$__GLìLök_GL_ARB_mu…ôextuª
()

5679 
GLöt
 
nLöked
=0;

5680 #ifde‡
__GLEE_GL_ARB_mu…ôextuª


5681 i‡((
pglA˘iveTextuªARB
 = (
PFNGLACTIVETEXTUREARBPROC
Ë
	`__GLìGëProcAddªss
("glA˘iveTextuªARB"))!=0Ë
nLöked
++;

5682 i‡((
pglClõ¡A˘iveTextuªARB
 = (
PFNGLCLIENTACTIVETEXTUREARBPROC
Ë
	`__GLìGëProcAddªss
("glClõ¡A˘iveTextuªARB"))!=0Ë
nLöked
++;

5683 i‡((
pglMu…iTexCo‹d1dARB
 = (
PFNGLMULTITEXCOORD1DARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1dARB"))!=0Ë
nLöked
++;

5684 i‡((
pglMu…iTexCo‹d1dvARB
 = (
PFNGLMULTITEXCOORD1DVARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1dvARB"))!=0Ë
nLöked
++;

5685 i‡((
pglMu…iTexCo‹d1fARB
 = (
PFNGLMULTITEXCOORD1FARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1fARB"))!=0Ë
nLöked
++;

5686 i‡((
pglMu…iTexCo‹d1fvARB
 = (
PFNGLMULTITEXCOORD1FVARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1fvARB"))!=0Ë
nLöked
++;

5687 i‡((
pglMu…iTexCo‹d1iARB
 = (
PFNGLMULTITEXCOORD1IARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1iARB"))!=0Ë
nLöked
++;

5688 i‡((
pglMu…iTexCo‹d1ivARB
 = (
PFNGLMULTITEXCOORD1IVARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1ivARB"))!=0Ë
nLöked
++;

5689 i‡((
pglMu…iTexCo‹d1sARB
 = (
PFNGLMULTITEXCOORD1SARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1sARB"))!=0Ë
nLöked
++;

5690 i‡((
pglMu…iTexCo‹d1svARB
 = (
PFNGLMULTITEXCOORD1SVARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1svARB"))!=0Ë
nLöked
++;

5691 i‡((
pglMu…iTexCo‹d2dARB
 = (
PFNGLMULTITEXCOORD2DARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2dARB"))!=0Ë
nLöked
++;

5692 i‡((
pglMu…iTexCo‹d2dvARB
 = (
PFNGLMULTITEXCOORD2DVARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2dvARB"))!=0Ë
nLöked
++;

5693 i‡((
pglMu…iTexCo‹d2fARB
 = (
PFNGLMULTITEXCOORD2FARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2fARB"))!=0Ë
nLöked
++;

5694 i‡((
pglMu…iTexCo‹d2fvARB
 = (
PFNGLMULTITEXCOORD2FVARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2fvARB"))!=0Ë
nLöked
++;

5695 i‡((
pglMu…iTexCo‹d2iARB
 = (
PFNGLMULTITEXCOORD2IARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2iARB"))!=0Ë
nLöked
++;

5696 i‡((
pglMu…iTexCo‹d2ivARB
 = (
PFNGLMULTITEXCOORD2IVARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2ivARB"))!=0Ë
nLöked
++;

5697 i‡((
pglMu…iTexCo‹d2sARB
 = (
PFNGLMULTITEXCOORD2SARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2sARB"))!=0Ë
nLöked
++;

5698 i‡((
pglMu…iTexCo‹d2svARB
 = (
PFNGLMULTITEXCOORD2SVARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2svARB"))!=0Ë
nLöked
++;

5699 i‡((
pglMu…iTexCo‹d3dARB
 = (
PFNGLMULTITEXCOORD3DARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3dARB"))!=0Ë
nLöked
++;

5700 i‡((
pglMu…iTexCo‹d3dvARB
 = (
PFNGLMULTITEXCOORD3DVARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3dvARB"))!=0Ë
nLöked
++;

5701 i‡((
pglMu…iTexCo‹d3fARB
 = (
PFNGLMULTITEXCOORD3FARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3fARB"))!=0Ë
nLöked
++;

5702 i‡((
pglMu…iTexCo‹d3fvARB
 = (
PFNGLMULTITEXCOORD3FVARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3fvARB"))!=0Ë
nLöked
++;

5703 i‡((
pglMu…iTexCo‹d3iARB
 = (
PFNGLMULTITEXCOORD3IARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3iARB"))!=0Ë
nLöked
++;

5704 i‡((
pglMu…iTexCo‹d3ivARB
 = (
PFNGLMULTITEXCOORD3IVARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3ivARB"))!=0Ë
nLöked
++;

5705 i‡((
pglMu…iTexCo‹d3sARB
 = (
PFNGLMULTITEXCOORD3SARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3sARB"))!=0Ë
nLöked
++;

5706 i‡((
pglMu…iTexCo‹d3svARB
 = (
PFNGLMULTITEXCOORD3SVARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3svARB"))!=0Ë
nLöked
++;

5707 i‡((
pglMu…iTexCo‹d4dARB
 = (
PFNGLMULTITEXCOORD4DARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4dARB"))!=0Ë
nLöked
++;

5708 i‡((
pglMu…iTexCo‹d4dvARB
 = (
PFNGLMULTITEXCOORD4DVARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4dvARB"))!=0Ë
nLöked
++;

5709 i‡((
pglMu…iTexCo‹d4fARB
 = (
PFNGLMULTITEXCOORD4FARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4fARB"))!=0Ë
nLöked
++;

5710 i‡((
pglMu…iTexCo‹d4fvARB
 = (
PFNGLMULTITEXCOORD4FVARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4fvARB"))!=0Ë
nLöked
++;

5711 i‡((
pglMu…iTexCo‹d4iARB
 = (
PFNGLMULTITEXCOORD4IARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4iARB"))!=0Ë
nLöked
++;

5712 i‡((
pglMu…iTexCo‹d4ivARB
 = (
PFNGLMULTITEXCOORD4IVARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4ivARB"))!=0Ë
nLöked
++;

5713 i‡((
pglMu…iTexCo‹d4sARB
 = (
PFNGLMULTITEXCOORD4SARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4sARB"))!=0Ë
nLöked
++;

5714 i‡((
pglMu…iTexCo‹d4svARB
 = (
PFNGLMULTITEXCOORD4SVARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4svARB"))!=0Ë
nLöked
++;

5716 i‡(
nLöked
==34Ë 
GLEE_LINK_COMPLETE
;

5717 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5718  
GLEE_LINK_PARTIAL
;

5719 
	}
}

5721 
GLuöt
 
	$__GLìLök_GL_ARB_å™•o£_m©rix
()

5723 
GLöt
 
nLöked
=0;

5724 #ifde‡
__GLEE_GL_ARB_å™•o£_m©rix


5725 i‡((
pglLﬂdTøn•o£M©rixfARB
 = (
PFNGLLOADTRANSPOSEMATRIXFARBPROC
Ë
	`__GLìGëProcAddªss
("glLﬂdTøn•o£M©rixfARB"))!=0Ë
nLöked
++;

5726 i‡((
pglLﬂdTøn•o£M©rixdARB
 = (
PFNGLLOADTRANSPOSEMATRIXDARBPROC
Ë
	`__GLìGëProcAddªss
("glLﬂdTøn•o£M©rixdARB"))!=0Ë
nLöked
++;

5727 i‡((
pglMu…Tøn•o£M©rixfARB
 = (
PFNGLMULTTRANSPOSEMATRIXFARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…Tøn•o£M©rixfARB"))!=0Ë
nLöked
++;

5728 i‡((
pglMu…Tøn•o£M©rixdARB
 = (
PFNGLMULTTRANSPOSEMATRIXDARBPROC
Ë
	`__GLìGëProcAddªss
("glMu…Tøn•o£M©rixdARB"))!=0Ë
nLöked
++;

5730 i‡(
nLöked
==4Ë 
GLEE_LINK_COMPLETE
;

5731 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5732  
GLEE_LINK_PARTIAL
;

5733 
	}
}

5735 
GLuöt
 
	$__GLìLök_GL_ARB_mu…ißm∂e
()

5737 
GLöt
 
nLöked
=0;

5738 #ifde‡
__GLEE_GL_ARB_mu…ißm∂e


5739 i‡((
pglSam∂eCovîageARB
 = (
PFNGLSAMPLECOVERAGEARBPROC
Ë
	`__GLìGëProcAddªss
("glSam∂eCovîageARB"))!=0Ë
nLöked
++;

5741 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

5742 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5743  
GLEE_LINK_PARTIAL
;

5744 
	}
}

5746 
GLuöt
 
	$__GLìLök_GL_ARB_ãxtuª_ív_add
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

5748 
GLuöt
 
	$__GLìLök_GL_ARB_ãxtuª_cube_m≠
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

5750 
GLuöt
 
	$__GLìLök_GL_ARB_ãxtuª_com¥essi⁄
()

5752 
GLöt
 
nLöked
=0;

5753 #ifde‡
__GLEE_GL_ARB_ãxtuª_com¥essi⁄


5754 i‡((
pglCom¥es£dTexImage3DARB
 = (
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC
Ë
	`__GLìGëProcAddªss
("glCom¥es£dTexImage3DARB"))!=0Ë
nLöked
++;

5755 i‡((
pglCom¥es£dTexImage2DARB
 = (
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC
Ë
	`__GLìGëProcAddªss
("glCom¥es£dTexImage2DARB"))!=0Ë
nLöked
++;

5756 i‡((
pglCom¥es£dTexImage1DARB
 = (
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC
Ë
	`__GLìGëProcAddªss
("glCom¥es£dTexImage1DARB"))!=0Ë
nLöked
++;

5757 i‡((
pglCom¥es£dTexSubImage3DARB
 = (
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC
Ë
	`__GLìGëProcAddªss
("glCom¥es£dTexSubImage3DARB"))!=0Ë
nLöked
++;

5758 i‡((
pglCom¥es£dTexSubImage2DARB
 = (
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC
Ë
	`__GLìGëProcAddªss
("glCom¥es£dTexSubImage2DARB"))!=0Ë
nLöked
++;

5759 i‡((
pglCom¥es£dTexSubImage1DARB
 = (
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC
Ë
	`__GLìGëProcAddªss
("glCom¥es£dTexSubImage1DARB"))!=0Ë
nLöked
++;

5760 i‡((
pglGëCom¥es£dTexImageARB
 = (
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC
Ë
	`__GLìGëProcAddªss
("glGëCom¥es£dTexImageARB"))!=0Ë
nLöked
++;

5762 i‡(
nLöked
==7Ë 
GLEE_LINK_COMPLETE
;

5763 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5764  
GLEE_LINK_PARTIAL
;

5765 
	}
}

5767 
GLuöt
 
	$__GLìLök_GL_ARB_ãxtuª_b‹dî_˛amp
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

5769 
GLuöt
 
	$__GLìLök_GL_ARB_poöt_∑ømëîs
()

5771 
GLöt
 
nLöked
=0;

5772 #ifde‡
__GLEE_GL_ARB_poöt_∑ømëîs


5773 i‡((
pglPoötP¨amëîfARB
 = (
PFNGLPOINTPARAMETERFARBPROC
Ë
	`__GLìGëProcAddªss
("glPoötP¨amëîfARB"))!=0Ë
nLöked
++;

5774 i‡((
pglPoötP¨amëîfvARB
 = (
PFNGLPOINTPARAMETERFVARBPROC
Ë
	`__GLìGëProcAddªss
("glPoötP¨amëîfvARB"))!=0Ë
nLöked
++;

5776 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

5777 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5778  
GLEE_LINK_PARTIAL
;

5779 
	}
}

5781 
GLuöt
 
	$__GLìLök_GL_ARB_vîãx_bÀnd
()

5783 
GLöt
 
nLöked
=0;

5784 #ifde‡
__GLEE_GL_ARB_vîãx_bÀnd


5785 i‡((
pglWeightbvARB
 = (
PFNGLWEIGHTBVARBPROC
Ë
	`__GLìGëProcAddªss
("glWeightbvARB"))!=0Ë
nLöked
++;

5786 i‡((
pglWeightsvARB
 = (
PFNGLWEIGHTSVARBPROC
Ë
	`__GLìGëProcAddªss
("glWeightsvARB"))!=0Ë
nLöked
++;

5787 i‡((
pglWeightivARB
 = (
PFNGLWEIGHTIVARBPROC
Ë
	`__GLìGëProcAddªss
("glWeightivARB"))!=0Ë
nLöked
++;

5788 i‡((
pglWeightfvARB
 = (
PFNGLWEIGHTFVARBPROC
Ë
	`__GLìGëProcAddªss
("glWeightfvARB"))!=0Ë
nLöked
++;

5789 i‡((
pglWeightdvARB
 = (
PFNGLWEIGHTDVARBPROC
Ë
	`__GLìGëProcAddªss
("glWeightdvARB"))!=0Ë
nLöked
++;

5790 i‡((
pglWeightubvARB
 = (
PFNGLWEIGHTUBVARBPROC
Ë
	`__GLìGëProcAddªss
("glWeightubvARB"))!=0Ë
nLöked
++;

5791 i‡((
pglWeightusvARB
 = (
PFNGLWEIGHTUSVARBPROC
Ë
	`__GLìGëProcAddªss
("glWeightusvARB"))!=0Ë
nLöked
++;

5792 i‡((
pglWeightuivARB
 = (
PFNGLWEIGHTUIVARBPROC
Ë
	`__GLìGëProcAddªss
("glWeightuivARB"))!=0Ë
nLöked
++;

5793 i‡((
pglWeightPoöãrARB
 = (
PFNGLWEIGHTPOINTERARBPROC
Ë
	`__GLìGëProcAddªss
("glWeightPoöãrARB"))!=0Ë
nLöked
++;

5794 i‡((
pglVîãxBÀndARB
 = (
PFNGLVERTEXBLENDARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxBÀndARB"))!=0Ë
nLöked
++;

5796 i‡(
nLöked
==10Ë 
GLEE_LINK_COMPLETE
;

5797 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5798  
GLEE_LINK_PARTIAL
;

5799 
	}
}

5801 
GLuöt
 
	$__GLìLök_GL_ARB_m©rix_∑Àâe
()

5803 
GLöt
 
nLöked
=0;

5804 #ifde‡
__GLEE_GL_ARB_m©rix_∑Àâe


5805 i‡((
pglCuºítPÆëãM©rixARB
 = (
PFNGLCURRENTPALETTEMATRIXARBPROC
Ë
	`__GLìGëProcAddªss
("glCuºítPÆëãM©rixARB"))!=0Ë
nLöked
++;

5806 i‡((
pglM©rixIndexubvARB
 = (
PFNGLMATRIXINDEXUBVARBPROC
Ë
	`__GLìGëProcAddªss
("glM©rixIndexubvARB"))!=0Ë
nLöked
++;

5807 i‡((
pglM©rixIndexusvARB
 = (
PFNGLMATRIXINDEXUSVARBPROC
Ë
	`__GLìGëProcAddªss
("glM©rixIndexusvARB"))!=0Ë
nLöked
++;

5808 i‡((
pglM©rixIndexuivARB
 = (
PFNGLMATRIXINDEXUIVARBPROC
Ë
	`__GLìGëProcAddªss
("glM©rixIndexuivARB"))!=0Ë
nLöked
++;

5809 i‡((
pglM©rixIndexPoöãrARB
 = (
PFNGLMATRIXINDEXPOINTERARBPROC
Ë
	`__GLìGëProcAddªss
("glM©rixIndexPoöãrARB"))!=0Ë
nLöked
++;

5811 i‡(
nLöked
==5Ë 
GLEE_LINK_COMPLETE
;

5812 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5813  
GLEE_LINK_PARTIAL
;

5814 
	}
}

5816 
GLuöt
 
	$__GLìLök_GL_ARB_ãxtuª_ív_comböe
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

5818 
GLuöt
 
	$__GLìLök_GL_ARB_ãxtuª_ív_¸ossb¨
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

5820 
GLuöt
 
	$__GLìLök_GL_ARB_ãxtuª_ív_dŸ3
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

5822 
GLuöt
 
	$__GLìLök_GL_ARB_ãxtuª_múr‹ed_ª≥©
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

5824 
GLuöt
 
	$__GLìLök_GL_ARB_dïth_ãxtuª
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

5826 
GLuöt
 
	$__GLìLök_GL_ARB_shadow
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

5828 
GLuöt
 
	$__GLìLök_GL_ARB_shadow_ambõ¡
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

5830 
GLuöt
 
	$__GLìLök_GL_ARB_wödow_pos
()

5832 
GLöt
 
nLöked
=0;

5833 #ifde‡
__GLEE_GL_ARB_wödow_pos


5834 i‡((
pglWödowPos2dARB
 = (
PFNGLWINDOWPOS2DARBPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2dARB"))!=0Ë
nLöked
++;

5835 i‡((
pglWödowPos2dvARB
 = (
PFNGLWINDOWPOS2DVARBPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2dvARB"))!=0Ë
nLöked
++;

5836 i‡((
pglWödowPos2fARB
 = (
PFNGLWINDOWPOS2FARBPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2fARB"))!=0Ë
nLöked
++;

5837 i‡((
pglWödowPos2fvARB
 = (
PFNGLWINDOWPOS2FVARBPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2fvARB"))!=0Ë
nLöked
++;

5838 i‡((
pglWödowPos2iARB
 = (
PFNGLWINDOWPOS2IARBPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2iARB"))!=0Ë
nLöked
++;

5839 i‡((
pglWödowPos2ivARB
 = (
PFNGLWINDOWPOS2IVARBPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2ivARB"))!=0Ë
nLöked
++;

5840 i‡((
pglWödowPos2sARB
 = (
PFNGLWINDOWPOS2SARBPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2sARB"))!=0Ë
nLöked
++;

5841 i‡((
pglWödowPos2svARB
 = (
PFNGLWINDOWPOS2SVARBPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2svARB"))!=0Ë
nLöked
++;

5842 i‡((
pglWödowPos3dARB
 = (
PFNGLWINDOWPOS3DARBPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3dARB"))!=0Ë
nLöked
++;

5843 i‡((
pglWödowPos3dvARB
 = (
PFNGLWINDOWPOS3DVARBPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3dvARB"))!=0Ë
nLöked
++;

5844 i‡((
pglWödowPos3fARB
 = (
PFNGLWINDOWPOS3FARBPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3fARB"))!=0Ë
nLöked
++;

5845 i‡((
pglWödowPos3fvARB
 = (
PFNGLWINDOWPOS3FVARBPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3fvARB"))!=0Ë
nLöked
++;

5846 i‡((
pglWödowPos3iARB
 = (
PFNGLWINDOWPOS3IARBPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3iARB"))!=0Ë
nLöked
++;

5847 i‡((
pglWödowPos3ivARB
 = (
PFNGLWINDOWPOS3IVARBPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3ivARB"))!=0Ë
nLöked
++;

5848 i‡((
pglWödowPos3sARB
 = (
PFNGLWINDOWPOS3SARBPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3sARB"))!=0Ë
nLöked
++;

5849 i‡((
pglWödowPos3svARB
 = (
PFNGLWINDOWPOS3SVARBPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3svARB"))!=0Ë
nLöked
++;

5851 i‡(
nLöked
==16Ë 
GLEE_LINK_COMPLETE
;

5852 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5853  
GLEE_LINK_PARTIAL
;

5854 
	}
}

5856 
GLuöt
 
	$__GLìLök_GL_ARB_vîãx_¥ogøm
()

5858 
GLöt
 
nLöked
=0;

5859 #ifde‡
__GLEE_GL_ARB_vîãx_¥ogøm


5860 i‡((
pglVîãxAârib1dARB
 = (
PFNGLVERTEXATTRIB1DARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1dARB"))!=0Ë
nLöked
++;

5861 i‡((
pglVîãxAârib1dvARB
 = (
PFNGLVERTEXATTRIB1DVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1dvARB"))!=0Ë
nLöked
++;

5862 i‡((
pglVîãxAârib1fARB
 = (
PFNGLVERTEXATTRIB1FARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1fARB"))!=0Ë
nLöked
++;

5863 i‡((
pglVîãxAârib1fvARB
 = (
PFNGLVERTEXATTRIB1FVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1fvARB"))!=0Ë
nLöked
++;

5864 i‡((
pglVîãxAârib1sARB
 = (
PFNGLVERTEXATTRIB1SARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1sARB"))!=0Ë
nLöked
++;

5865 i‡((
pglVîãxAârib1svARB
 = (
PFNGLVERTEXATTRIB1SVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1svARB"))!=0Ë
nLöked
++;

5866 i‡((
pglVîãxAârib2dARB
 = (
PFNGLVERTEXATTRIB2DARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2dARB"))!=0Ë
nLöked
++;

5867 i‡((
pglVîãxAârib2dvARB
 = (
PFNGLVERTEXATTRIB2DVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2dvARB"))!=0Ë
nLöked
++;

5868 i‡((
pglVîãxAârib2fARB
 = (
PFNGLVERTEXATTRIB2FARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2fARB"))!=0Ë
nLöked
++;

5869 i‡((
pglVîãxAârib2fvARB
 = (
PFNGLVERTEXATTRIB2FVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2fvARB"))!=0Ë
nLöked
++;

5870 i‡((
pglVîãxAârib2sARB
 = (
PFNGLVERTEXATTRIB2SARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2sARB"))!=0Ë
nLöked
++;

5871 i‡((
pglVîãxAârib2svARB
 = (
PFNGLVERTEXATTRIB2SVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2svARB"))!=0Ë
nLöked
++;

5872 i‡((
pglVîãxAârib3dARB
 = (
PFNGLVERTEXATTRIB3DARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3dARB"))!=0Ë
nLöked
++;

5873 i‡((
pglVîãxAârib3dvARB
 = (
PFNGLVERTEXATTRIB3DVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3dvARB"))!=0Ë
nLöked
++;

5874 i‡((
pglVîãxAârib3fARB
 = (
PFNGLVERTEXATTRIB3FARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3fARB"))!=0Ë
nLöked
++;

5875 i‡((
pglVîãxAârib3fvARB
 = (
PFNGLVERTEXATTRIB3FVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3fvARB"))!=0Ë
nLöked
++;

5876 i‡((
pglVîãxAârib3sARB
 = (
PFNGLVERTEXATTRIB3SARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3sARB"))!=0Ë
nLöked
++;

5877 i‡((
pglVîãxAârib3svARB
 = (
PFNGLVERTEXATTRIB3SVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3svARB"))!=0Ë
nLöked
++;

5878 i‡((
pglVîãxAârib4NbvARB
 = (
PFNGLVERTEXATTRIB4NBVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4NbvARB"))!=0Ë
nLöked
++;

5879 i‡((
pglVîãxAârib4NivARB
 = (
PFNGLVERTEXATTRIB4NIVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4NivARB"))!=0Ë
nLöked
++;

5880 i‡((
pglVîãxAârib4NsvARB
 = (
PFNGLVERTEXATTRIB4NSVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4NsvARB"))!=0Ë
nLöked
++;

5881 i‡((
pglVîãxAârib4NubARB
 = (
PFNGLVERTEXATTRIB4NUBARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4NubARB"))!=0Ë
nLöked
++;

5882 i‡((
pglVîãxAârib4NubvARB
 = (
PFNGLVERTEXATTRIB4NUBVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4NubvARB"))!=0Ë
nLöked
++;

5883 i‡((
pglVîãxAârib4NuivARB
 = (
PFNGLVERTEXATTRIB4NUIVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4NuivARB"))!=0Ë
nLöked
++;

5884 i‡((
pglVîãxAârib4NusvARB
 = (
PFNGLVERTEXATTRIB4NUSVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4NusvARB"))!=0Ë
nLöked
++;

5885 i‡((
pglVîãxAârib4bvARB
 = (
PFNGLVERTEXATTRIB4BVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4bvARB"))!=0Ë
nLöked
++;

5886 i‡((
pglVîãxAârib4dARB
 = (
PFNGLVERTEXATTRIB4DARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4dARB"))!=0Ë
nLöked
++;

5887 i‡((
pglVîãxAârib4dvARB
 = (
PFNGLVERTEXATTRIB4DVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4dvARB"))!=0Ë
nLöked
++;

5888 i‡((
pglVîãxAârib4fARB
 = (
PFNGLVERTEXATTRIB4FARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4fARB"))!=0Ë
nLöked
++;

5889 i‡((
pglVîãxAârib4fvARB
 = (
PFNGLVERTEXATTRIB4FVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4fvARB"))!=0Ë
nLöked
++;

5890 i‡((
pglVîãxAârib4ivARB
 = (
PFNGLVERTEXATTRIB4IVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4ivARB"))!=0Ë
nLöked
++;

5891 i‡((
pglVîãxAârib4sARB
 = (
PFNGLVERTEXATTRIB4SARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4sARB"))!=0Ë
nLöked
++;

5892 i‡((
pglVîãxAârib4svARB
 = (
PFNGLVERTEXATTRIB4SVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4svARB"))!=0Ë
nLöked
++;

5893 i‡((
pglVîãxAârib4ubvARB
 = (
PFNGLVERTEXATTRIB4UBVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4ubvARB"))!=0Ë
nLöked
++;

5894 i‡((
pglVîãxAârib4uivARB
 = (
PFNGLVERTEXATTRIB4UIVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4uivARB"))!=0Ë
nLöked
++;

5895 i‡((
pglVîãxAârib4usvARB
 = (
PFNGLVERTEXATTRIB4USVARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4usvARB"))!=0Ë
nLöked
++;

5896 i‡((
pglVîãxAâribPoöãrARB
 = (
PFNGLVERTEXATTRIBPOINTERARBPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribPoöãrARB"))!=0Ë
nLöked
++;

5897 i‡((
pglE«bÀVîãxAâribAºayARB
 = (
PFNGLENABLEVERTEXATTRIBARRAYARBPROC
Ë
	`__GLìGëProcAddªss
("glE«bÀVîãxAâribAºayARB"))!=0Ë
nLöked
++;

5898 i‡((
pglDißbÀVîãxAâribAºayARB
 = (
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC
Ë
	`__GLìGëProcAddªss
("glDißbÀVîãxAâribAºayARB"))!=0Ë
nLöked
++;

5899 i‡((
pglProgømSåögARB
 = (
PFNGLPROGRAMSTRINGARBPROC
Ë
	`__GLìGëProcAddªss
("glProgømSåögARB"))!=0Ë
nLöked
++;

5900 i‡((
pglBödProgømARB
 = (
PFNGLBINDPROGRAMARBPROC
Ë
	`__GLìGëProcAddªss
("glBödProgømARB"))!=0Ë
nLöked
++;

5901 i‡((
pglDñëeProgømsARB
 = (
PFNGLDELETEPROGRAMSARBPROC
Ë
	`__GLìGëProcAddªss
("glDñëeProgømsARB"))!=0Ë
nLöked
++;

5902 i‡((
pglGíProgømsARB
 = (
PFNGLGENPROGRAMSARBPROC
Ë
	`__GLìGëProcAddªss
("glGíProgømsARB"))!=0Ë
nLöked
++;

5903 i‡((
pglProgømEnvP¨amëî4dARB
 = (
PFNGLPROGRAMENVPARAMETER4DARBPROC
Ë
	`__GLìGëProcAddªss
("glProgømEnvP¨amëî4dARB"))!=0Ë
nLöked
++;

5904 i‡((
pglProgømEnvP¨amëî4dvARB
 = (
PFNGLPROGRAMENVPARAMETER4DVARBPROC
Ë
	`__GLìGëProcAddªss
("glProgømEnvP¨amëî4dvARB"))!=0Ë
nLöked
++;

5905 i‡((
pglProgømEnvP¨amëî4fARB
 = (
PFNGLPROGRAMENVPARAMETER4FARBPROC
Ë
	`__GLìGëProcAddªss
("glProgømEnvP¨amëî4fARB"))!=0Ë
nLöked
++;

5906 i‡((
pglProgømEnvP¨amëî4fvARB
 = (
PFNGLPROGRAMENVPARAMETER4FVARBPROC
Ë
	`__GLìGëProcAddªss
("glProgømEnvP¨amëî4fvARB"))!=0Ë
nLöked
++;

5907 i‡((
pglProgømLoˇlP¨amëî4dARB
 = (
PFNGLPROGRAMLOCALPARAMETER4DARBPROC
Ë
	`__GLìGëProcAddªss
("glProgømLoˇlP¨amëî4dARB"))!=0Ë
nLöked
++;

5908 i‡((
pglProgømLoˇlP¨amëî4dvARB
 = (
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC
Ë
	`__GLìGëProcAddªss
("glProgømLoˇlP¨amëî4dvARB"))!=0Ë
nLöked
++;

5909 i‡((
pglProgømLoˇlP¨amëî4fARB
 = (
PFNGLPROGRAMLOCALPARAMETER4FARBPROC
Ë
	`__GLìGëProcAddªss
("glProgømLoˇlP¨amëî4fARB"))!=0Ë
nLöked
++;

5910 i‡((
pglProgømLoˇlP¨amëî4fvARB
 = (
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC
Ë
	`__GLìGëProcAddªss
("glProgømLoˇlP¨amëî4fvARB"))!=0Ë
nLöked
++;

5911 i‡((
pglGëProgømEnvP¨amëîdvARB
 = (
PFNGLGETPROGRAMENVPARAMETERDVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømEnvP¨amëîdvARB"))!=0Ë
nLöked
++;

5912 i‡((
pglGëProgømEnvP¨amëîfvARB
 = (
PFNGLGETPROGRAMENVPARAMETERFVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømEnvP¨amëîfvARB"))!=0Ë
nLöked
++;

5913 i‡((
pglGëProgømLoˇlP¨amëîdvARB
 = (
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømLoˇlP¨amëîdvARB"))!=0Ë
nLöked
++;

5914 i‡((
pglGëProgømLoˇlP¨amëîfvARB
 = (
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømLoˇlP¨amëîfvARB"))!=0Ë
nLöked
++;

5915 i‡((
pglGëProgømivARB
 = (
PFNGLGETPROGRAMIVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømivARB"))!=0Ë
nLöked
++;

5916 i‡((
pglGëProgømSåögARB
 = (
PFNGLGETPROGRAMSTRINGARBPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømSåögARB"))!=0Ë
nLöked
++;

5917 i‡((
pglGëVîãxAâribdvARB
 = (
PFNGLGETVERTEXATTRIBDVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëVîãxAâribdvARB"))!=0Ë
nLöked
++;

5918 i‡((
pglGëVîãxAâribfvARB
 = (
PFNGLGETVERTEXATTRIBFVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëVîãxAâribfvARB"))!=0Ë
nLöked
++;

5919 i‡((
pglGëVîãxAâribivARB
 = (
PFNGLGETVERTEXATTRIBIVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëVîãxAâribivARB"))!=0Ë
nLöked
++;

5920 i‡((
pglGëVîãxAâribPoöãrvARB
 = (
PFNGLGETVERTEXATTRIBPOINTERVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëVîãxAâribPoöãrvARB"))!=0Ë
nLöked
++;

5921 i‡((
pglIsProgømARB
 = (
PFNGLISPROGRAMARBPROC
Ë
	`__GLìGëProcAddªss
("glIsProgømARB"))!=0Ë
nLöked
++;

5923 i‡(
nLöked
==62Ë 
GLEE_LINK_COMPLETE
;

5924 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5925  
GLEE_LINK_PARTIAL
;

5926 
	}
}

5928 
GLuöt
 
	$__GLìLök_GL_ARB_‰agmít_¥ogøm
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

5930 
GLuöt
 
	$__GLìLök_GL_ARB_vîãx_buf„r_obje˘
()

5932 
GLöt
 
nLöked
=0;

5933 #ifde‡
__GLEE_GL_ARB_vîãx_buf„r_obje˘


5934 i‡((
pglBödBuf„rARB
 = (
PFNGLBINDBUFFERARBPROC
Ë
	`__GLìGëProcAddªss
("glBödBuf„rARB"))!=0Ë
nLöked
++;

5935 i‡((
pglDñëeBuf„rsARB
 = (
PFNGLDELETEBUFFERSARBPROC
Ë
	`__GLìGëProcAddªss
("glDñëeBuf„rsARB"))!=0Ë
nLöked
++;

5936 i‡((
pglGíBuf„rsARB
 = (
PFNGLGENBUFFERSARBPROC
Ë
	`__GLìGëProcAddªss
("glGíBuf„rsARB"))!=0Ë
nLöked
++;

5937 i‡((
pglIsBuf„rARB
 = (
PFNGLISBUFFERARBPROC
Ë
	`__GLìGëProcAddªss
("glIsBuf„rARB"))!=0Ë
nLöked
++;

5938 i‡((
pglBuf„rD©aARB
 = (
PFNGLBUFFERDATAARBPROC
Ë
	`__GLìGëProcAddªss
("glBuf„rD©aARB"))!=0Ë
nLöked
++;

5939 i‡((
pglBuf„rSubD©aARB
 = (
PFNGLBUFFERSUBDATAARBPROC
Ë
	`__GLìGëProcAddªss
("glBuf„rSubD©aARB"))!=0Ë
nLöked
++;

5940 i‡((
pglGëBuf„rSubD©aARB
 = (
PFNGLGETBUFFERSUBDATAARBPROC
Ë
	`__GLìGëProcAddªss
("glGëBuf„rSubD©aARB"))!=0Ë
nLöked
++;

5941 i‡((
pglM≠Buf„rARB
 = (
PFNGLMAPBUFFERARBPROC
Ë
	`__GLìGëProcAddªss
("glM≠Buf„rARB"))!=0Ë
nLöked
++;

5942 i‡((
pglUnm≠Buf„rARB
 = (
PFNGLUNMAPBUFFERARBPROC
Ë
	`__GLìGëProcAddªss
("glUnm≠Buf„rARB"))!=0Ë
nLöked
++;

5943 i‡((
pglGëBuf„rP¨amëîivARB
 = (
PFNGLGETBUFFERPARAMETERIVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëBuf„rP¨amëîivARB"))!=0Ë
nLöked
++;

5944 i‡((
pglGëBuf„rPoöãrvARB
 = (
PFNGLGETBUFFERPOINTERVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëBuf„rPoöãrvARB"))!=0Ë
nLöked
++;

5946 i‡(
nLöked
==11Ë 
GLEE_LINK_COMPLETE
;

5947 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5948  
GLEE_LINK_PARTIAL
;

5949 
	}
}

5951 
GLuöt
 
	$__GLìLök_GL_ARB_oc˛usi⁄_quîy
()

5953 
GLöt
 
nLöked
=0;

5954 #ifde‡
__GLEE_GL_ARB_oc˛usi⁄_quîy


5955 i‡((
pglGíQuîõsARB
 = (
PFNGLGENQUERIESARBPROC
Ë
	`__GLìGëProcAddªss
("glGíQuîõsARB"))!=0Ë
nLöked
++;

5956 i‡((
pglDñëeQuîõsARB
 = (
PFNGLDELETEQUERIESARBPROC
Ë
	`__GLìGëProcAddªss
("glDñëeQuîõsARB"))!=0Ë
nLöked
++;

5957 i‡((
pglIsQuîyARB
 = (
PFNGLISQUERYARBPROC
Ë
	`__GLìGëProcAddªss
("glIsQuîyARB"))!=0Ë
nLöked
++;

5958 i‡((
pglBegöQuîyARB
 = (
PFNGLBEGINQUERYARBPROC
Ë
	`__GLìGëProcAddªss
("glBegöQuîyARB"))!=0Ë
nLöked
++;

5959 i‡((
pglEndQuîyARB
 = (
PFNGLENDQUERYARBPROC
Ë
	`__GLìGëProcAddªss
("glEndQuîyARB"))!=0Ë
nLöked
++;

5960 i‡((
pglGëQuîyivARB
 = (
PFNGLGETQUERYIVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëQuîyivARB"))!=0Ë
nLöked
++;

5961 i‡((
pglGëQuîyObje˘ivARB
 = (
PFNGLGETQUERYOBJECTIVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëQuîyObje˘ivARB"))!=0Ë
nLöked
++;

5962 i‡((
pglGëQuîyObje˘uivARB
 = (
PFNGLGETQUERYOBJECTUIVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëQuîyObje˘uivARB"))!=0Ë
nLöked
++;

5964 i‡(
nLöked
==8Ë 
GLEE_LINK_COMPLETE
;

5965 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

5966  
GLEE_LINK_PARTIAL
;

5967 
	}
}

5969 
GLuöt
 
	$__GLìLök_GL_ARB_shadî_obje˘s
()

5971 
GLöt
 
nLöked
=0;

5972 #ifde‡
__GLEE_GL_ARB_shadî_obje˘s


5973 i‡((
pglDñëeObje˘ARB
 = (
PFNGLDELETEOBJECTARBPROC
Ë
	`__GLìGëProcAddªss
("glDñëeObje˘ARB"))!=0Ë
nLöked
++;

5974 i‡((
pglGëH™dÀARB
 = (
PFNGLGETHANDLEARBPROC
Ë
	`__GLìGëProcAddªss
("glGëH™dÀARB"))!=0Ë
nLöked
++;

5975 i‡((
pglDëachObje˘ARB
 = (
PFNGLDETACHOBJECTARBPROC
Ë
	`__GLìGëProcAddªss
("glDëachObje˘ARB"))!=0Ë
nLöked
++;

5976 i‡((
pglCª©eShadîObje˘ARB
 = (
PFNGLCREATESHADEROBJECTARBPROC
Ë
	`__GLìGëProcAddªss
("glCª©eShadîObje˘ARB"))!=0Ë
nLöked
++;

5977 i‡((
pglShadîSour˚ARB
 = (
PFNGLSHADERSOURCEARBPROC
Ë
	`__GLìGëProcAddªss
("glShadîSour˚ARB"))!=0Ë
nLöked
++;

5978 i‡((
pglCompûeShadîARB
 = (
PFNGLCOMPILESHADERARBPROC
Ë
	`__GLìGëProcAddªss
("glCompûeShadîARB"))!=0Ë
nLöked
++;

5979 i‡((
pglCª©eProgømObje˘ARB
 = (
PFNGLCREATEPROGRAMOBJECTARBPROC
Ë
	`__GLìGëProcAddªss
("glCª©eProgømObje˘ARB"))!=0Ë
nLöked
++;

5980 i‡((
pglAâachObje˘ARB
 = (
PFNGLATTACHOBJECTARBPROC
Ë
	`__GLìGëProcAddªss
("glAâachObje˘ARB"))!=0Ë
nLöked
++;

5981 i‡((
pglLökProgømARB
 = (
PFNGLLINKPROGRAMARBPROC
Ë
	`__GLìGëProcAddªss
("glLökProgømARB"))!=0Ë
nLöked
++;

5982 i‡((
pglU£ProgømObje˘ARB
 = (
PFNGLUSEPROGRAMOBJECTARBPROC
Ë
	`__GLìGëProcAddªss
("glU£ProgømObje˘ARB"))!=0Ë
nLöked
++;

5983 i‡((
pglVÆid©eProgømARB
 = (
PFNGLVALIDATEPROGRAMARBPROC
Ë
	`__GLìGëProcAddªss
("glVÆid©eProgømARB"))!=0Ë
nLöked
++;

5984 i‡((
pglUnif‹m1fARB
 = (
PFNGLUNIFORM1FARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m1fARB"))!=0Ë
nLöked
++;

5985 i‡((
pglUnif‹m2fARB
 = (
PFNGLUNIFORM2FARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m2fARB"))!=0Ë
nLöked
++;

5986 i‡((
pglUnif‹m3fARB
 = (
PFNGLUNIFORM3FARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m3fARB"))!=0Ë
nLöked
++;

5987 i‡((
pglUnif‹m4fARB
 = (
PFNGLUNIFORM4FARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m4fARB"))!=0Ë
nLöked
++;

5988 i‡((
pglUnif‹m1iARB
 = (
PFNGLUNIFORM1IARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m1iARB"))!=0Ë
nLöked
++;

5989 i‡((
pglUnif‹m2iARB
 = (
PFNGLUNIFORM2IARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m2iARB"))!=0Ë
nLöked
++;

5990 i‡((
pglUnif‹m3iARB
 = (
PFNGLUNIFORM3IARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m3iARB"))!=0Ë
nLöked
++;

5991 i‡((
pglUnif‹m4iARB
 = (
PFNGLUNIFORM4IARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m4iARB"))!=0Ë
nLöked
++;

5992 i‡((
pglUnif‹m1fvARB
 = (
PFNGLUNIFORM1FVARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m1fvARB"))!=0Ë
nLöked
++;

5993 i‡((
pglUnif‹m2fvARB
 = (
PFNGLUNIFORM2FVARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m2fvARB"))!=0Ë
nLöked
++;

5994 i‡((
pglUnif‹m3fvARB
 = (
PFNGLUNIFORM3FVARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m3fvARB"))!=0Ë
nLöked
++;

5995 i‡((
pglUnif‹m4fvARB
 = (
PFNGLUNIFORM4FVARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m4fvARB"))!=0Ë
nLöked
++;

5996 i‡((
pglUnif‹m1ivARB
 = (
PFNGLUNIFORM1IVARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m1ivARB"))!=0Ë
nLöked
++;

5997 i‡((
pglUnif‹m2ivARB
 = (
PFNGLUNIFORM2IVARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m2ivARB"))!=0Ë
nLöked
++;

5998 i‡((
pglUnif‹m3ivARB
 = (
PFNGLUNIFORM3IVARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m3ivARB"))!=0Ë
nLöked
++;

5999 i‡((
pglUnif‹m4ivARB
 = (
PFNGLUNIFORM4IVARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m4ivARB"))!=0Ë
nLöked
++;

6000 i‡((
pglUnif‹mM©rix2fvARB
 = (
PFNGLUNIFORMMATRIX2FVARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹mM©rix2fvARB"))!=0Ë
nLöked
++;

6001 i‡((
pglUnif‹mM©rix3fvARB
 = (
PFNGLUNIFORMMATRIX3FVARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹mM©rix3fvARB"))!=0Ë
nLöked
++;

6002 i‡((
pglUnif‹mM©rix4fvARB
 = (
PFNGLUNIFORMMATRIX4FVARBPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹mM©rix4fvARB"))!=0Ë
nLöked
++;

6003 i‡((
pglGëObje˘P¨amëîfvARB
 = (
PFNGLGETOBJECTPARAMETERFVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëObje˘P¨amëîfvARB"))!=0Ë
nLöked
++;

6004 i‡((
pglGëObje˘P¨amëîivARB
 = (
PFNGLGETOBJECTPARAMETERIVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëObje˘P¨amëîivARB"))!=0Ë
nLöked
++;

6005 i‡((
pglGëInfoLogARB
 = (
PFNGLGETINFOLOGARBPROC
Ë
	`__GLìGëProcAddªss
("glGëInfoLogARB"))!=0Ë
nLöked
++;

6006 i‡((
pglGëAâachedObje˘sARB
 = (
PFNGLGETATTACHEDOBJECTSARBPROC
Ë
	`__GLìGëProcAddªss
("glGëAâachedObje˘sARB"))!=0Ë
nLöked
++;

6007 i‡((
pglGëUnif‹mLoˇti⁄ARB
 = (
PFNGLGETUNIFORMLOCATIONARBPROC
Ë
	`__GLìGëProcAddªss
("glGëUnif‹mLoˇti⁄ARB"))!=0Ë
nLöked
++;

6008 i‡((
pglGëA˘iveUnif‹mARB
 = (
PFNGLGETACTIVEUNIFORMARBPROC
Ë
	`__GLìGëProcAddªss
("glGëA˘iveUnif‹mARB"))!=0Ë
nLöked
++;

6009 i‡((
pglGëUnif‹mfvARB
 = (
PFNGLGETUNIFORMFVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëUnif‹mfvARB"))!=0Ë
nLöked
++;

6010 i‡((
pglGëUnif‹mivARB
 = (
PFNGLGETUNIFORMIVARBPROC
Ë
	`__GLìGëProcAddªss
("glGëUnif‹mivARB"))!=0Ë
nLöked
++;

6011 i‡((
pglGëShadîSour˚ARB
 = (
PFNGLGETSHADERSOURCEARBPROC
Ë
	`__GLìGëProcAddªss
("glGëShadîSour˚ARB"))!=0Ë
nLöked
++;

6013 i‡(
nLöked
==39Ë 
GLEE_LINK_COMPLETE
;

6014 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6015  
GLEE_LINK_PARTIAL
;

6016 
	}
}

6018 
GLuöt
 
	$__GLìLök_GL_ARB_vîãx_shadî
()

6020 
GLöt
 
nLöked
=0;

6021 #ifde‡
__GLEE_GL_ARB_vîãx_shadî


6022 i‡((
pglBödAâribLoˇti⁄ARB
 = (
PFNGLBINDATTRIBLOCATIONARBPROC
Ë
	`__GLìGëProcAddªss
("glBödAâribLoˇti⁄ARB"))!=0Ë
nLöked
++;

6023 i‡((
pglGëA˘iveAâribARB
 = (
PFNGLGETACTIVEATTRIBARBPROC
Ë
	`__GLìGëProcAddªss
("glGëA˘iveAâribARB"))!=0Ë
nLöked
++;

6024 i‡((
pglGëAâribLoˇti⁄ARB
 = (
PFNGLGETATTRIBLOCATIONARBPROC
Ë
	`__GLìGëProcAddªss
("glGëAâribLoˇti⁄ARB"))!=0Ë
nLöked
++;

6026 i‡(
nLöked
==3Ë 
GLEE_LINK_COMPLETE
;

6027 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6028  
GLEE_LINK_PARTIAL
;

6029 
	}
}

6031 
GLuöt
 
	$__GLìLök_GL_ARB_‰agmít_shadî
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6033 
GLuöt
 
	$__GLìLök_GL_ARB_shadög_œnguage_100
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6035 
GLuöt
 
	$__GLìLök_GL_ARB_ãxtuª_n⁄_powî_of_two
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6037 
GLuöt
 
	$__GLìLök_GL_ARB_poöt_•rôe
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6039 
GLuöt
 
	$__GLìLök_GL_ARB_‰agmít_¥ogøm_shadow
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6041 
GLuöt
 
	$__GLìLök_GL_ARB_døw_buf„rs
()

6043 
GLöt
 
nLöked
=0;

6044 #ifde‡
__GLEE_GL_ARB_døw_buf„rs


6045 i‡((
pglDøwBuf„rsARB
 = (
PFNGLDRAWBUFFERSARBPROC
Ë
	`__GLìGëProcAddªss
("glDøwBuf„rsARB"))!=0Ë
nLöked
++;

6047 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6048 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6049  
GLEE_LINK_PARTIAL
;

6050 
	}
}

6052 
GLuöt
 
	$__GLìLök_GL_ARB_ãxtuª_ª˘™gÀ
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6054 
GLuöt
 
	$__GLìLök_GL_ARB_cﬁ‹_buf„r_Êﬂt
()

6056 
GLöt
 
nLöked
=0;

6057 #ifde‡
__GLEE_GL_ARB_cﬁ‹_buf„r_Êﬂt


6058 i‡((
pglCœmpCﬁ‹ARB
 = (
PFNGLCLAMPCOLORARBPROC
Ë
	`__GLìGëProcAddªss
("glCœmpCﬁ‹ARB"))!=0Ë
nLöked
++;

6060 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6061 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6062  
GLEE_LINK_PARTIAL
;

6063 
	}
}

6065 
GLuöt
 
	$__GLìLök_GL_ARB_hÆf_Êﬂt_pixñ
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6067 
GLuöt
 
	$__GLìLök_GL_ARB_ãxtuª_Êﬂt
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6069 
GLuöt
 
	$__GLìLök_GL_ARB_pixñ_buf„r_obje˘
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6071 
GLuöt
 
	$__GLìLök_GL_EXT_abgr
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6073 
GLuöt
 
	$__GLìLök_GL_EXT_bÀnd_cﬁ‹
()

6075 
GLöt
 
nLöked
=0;

6076 #ifde‡
__GLEE_GL_EXT_bÀnd_cﬁ‹


6077 i‡((
pglBÀndCﬁ‹EXT
 = (
PFNGLBLENDCOLOREXTPROC
Ë
	`__GLìGëProcAddªss
("glBÀndCﬁ‹EXT"))!=0Ë
nLöked
++;

6079 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6080 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6081  
GLEE_LINK_PARTIAL
;

6082 
	}
}

6084 
GLuöt
 
	$__GLìLök_GL_EXT_pﬁyg⁄_off£t
()

6086 
GLöt
 
nLöked
=0;

6087 #ifde‡
__GLEE_GL_EXT_pﬁyg⁄_off£t


6088 i‡((
pglPﬁyg⁄Off£tEXT
 = (
PFNGLPOLYGONOFFSETEXTPROC
Ë
	`__GLìGëProcAddªss
("glPﬁyg⁄Off£tEXT"))!=0Ë
nLöked
++;

6090 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6091 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6092  
GLEE_LINK_PARTIAL
;

6093 
	}
}

6095 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6097 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª3D
()

6099 
GLöt
 
nLöked
=0;

6100 #ifde‡
__GLEE_GL_EXT_ãxtuª3D


6101 i‡((
pglTexImage3DEXT
 = (
PFNGLTEXIMAGE3DEXTPROC
Ë
	`__GLìGëProcAddªss
("glTexImage3DEXT"))!=0Ë
nLöked
++;

6102 i‡((
pglTexSubImage3DEXT
 = (
PFNGLTEXSUBIMAGE3DEXTPROC
Ë
	`__GLìGëProcAddªss
("glTexSubImage3DEXT"))!=0Ë
nLöked
++;

6104 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

6105 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6106  
GLEE_LINK_PARTIAL
;

6107 
	}
}

6109 
GLuöt
 
	$__GLìLök_GL_SGIS_ãxtuª_fûãr4
()

6111 
GLöt
 
nLöked
=0;

6112 #ifde‡
__GLEE_GL_SGIS_ãxtuª_fûãr4


6113 i‡((
pglGëTexFûãrFuncSGIS
 = (
PFNGLGETTEXFILTERFUNCSGISPROC
Ë
	`__GLìGëProcAddªss
("glGëTexFûãrFuncSGIS"))!=0Ë
nLöked
++;

6114 i‡((
pglTexFûãrFuncSGIS
 = (
PFNGLTEXFILTERFUNCSGISPROC
Ë
	`__GLìGëProcAddªss
("glTexFûãrFuncSGIS"))!=0Ë
nLöked
++;

6116 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

6117 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6118  
GLEE_LINK_PARTIAL
;

6119 
	}
}

6121 
GLuöt
 
	$__GLìLök_GL_EXT_subãxtuª
()

6123 
GLöt
 
nLöked
=0;

6124 #ifde‡
__GLEE_GL_EXT_subãxtuª


6125 i‡((
pglTexSubImage1DEXT
 = (
PFNGLTEXSUBIMAGE1DEXTPROC
Ë
	`__GLìGëProcAddªss
("glTexSubImage1DEXT"))!=0Ë
nLöked
++;

6126 i‡((
pglTexSubImage2DEXT
 = (
PFNGLTEXSUBIMAGE2DEXTPROC
Ë
	`__GLìGëProcAddªss
("glTexSubImage2DEXT"))!=0Ë
nLöked
++;

6128 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

6129 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6130  
GLEE_LINK_PARTIAL
;

6131 
	}
}

6133 
GLuöt
 
	$__GLìLök_GL_EXT_c›y_ãxtuª
()

6135 
GLöt
 
nLöked
=0;

6136 #ifde‡
__GLEE_GL_EXT_c›y_ãxtuª


6137 i‡((
pglC›yTexImage1DEXT
 = (
PFNGLCOPYTEXIMAGE1DEXTPROC
Ë
	`__GLìGëProcAddªss
("glC›yTexImage1DEXT"))!=0Ë
nLöked
++;

6138 i‡((
pglC›yTexImage2DEXT
 = (
PFNGLCOPYTEXIMAGE2DEXTPROC
Ë
	`__GLìGëProcAddªss
("glC›yTexImage2DEXT"))!=0Ë
nLöked
++;

6139 i‡((
pglC›yTexSubImage1DEXT
 = (
PFNGLCOPYTEXSUBIMAGE1DEXTPROC
Ë
	`__GLìGëProcAddªss
("glC›yTexSubImage1DEXT"))!=0Ë
nLöked
++;

6140 i‡((
pglC›yTexSubImage2DEXT
 = (
PFNGLCOPYTEXSUBIMAGE2DEXTPROC
Ë
	`__GLìGëProcAddªss
("glC›yTexSubImage2DEXT"))!=0Ë
nLöked
++;

6141 i‡((
pglC›yTexSubImage3DEXT
 = (
PFNGLCOPYTEXSUBIMAGE3DEXTPROC
Ë
	`__GLìGëProcAddªss
("glC›yTexSubImage3DEXT"))!=0Ë
nLöked
++;

6143 i‡(
nLöked
==5Ë 
GLEE_LINK_COMPLETE
;

6144 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6145  
GLEE_LINK_PARTIAL
;

6146 
	}
}

6148 
GLuöt
 
	$__GLìLök_GL_EXT_hi°ogøm
()

6150 
GLöt
 
nLöked
=0;

6151 #ifde‡
__GLEE_GL_EXT_hi°ogøm


6152 i‡((
pglGëHi°ogømEXT
 = (
PFNGLGETHISTOGRAMEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëHi°ogømEXT"))!=0Ë
nLöked
++;

6153 i‡((
pglGëHi°ogømP¨amëîfvEXT
 = (
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëHi°ogømP¨amëîfvEXT"))!=0Ë
nLöked
++;

6154 i‡((
pglGëHi°ogømP¨amëîivEXT
 = (
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëHi°ogømP¨amëîivEXT"))!=0Ë
nLöked
++;

6155 i‡((
pglGëMömaxEXT
 = (
PFNGLGETMINMAXEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëMömaxEXT"))!=0Ë
nLöked
++;

6156 i‡((
pglGëMömaxP¨amëîfvEXT
 = (
PFNGLGETMINMAXPARAMETERFVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëMömaxP¨amëîfvEXT"))!=0Ë
nLöked
++;

6157 i‡((
pglGëMömaxP¨amëîivEXT
 = (
PFNGLGETMINMAXPARAMETERIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëMömaxP¨amëîivEXT"))!=0Ë
nLöked
++;

6158 i‡((
pglHi°ogømEXT
 = (
PFNGLHISTOGRAMEXTPROC
Ë
	`__GLìGëProcAddªss
("glHi°ogømEXT"))!=0Ë
nLöked
++;

6159 i‡((
pglMömaxEXT
 = (
PFNGLMINMAXEXTPROC
Ë
	`__GLìGëProcAddªss
("glMömaxEXT"))!=0Ë
nLöked
++;

6160 i‡((
pglRe£tHi°ogømEXT
 = (
PFNGLRESETHISTOGRAMEXTPROC
Ë
	`__GLìGëProcAddªss
("glRe£tHi°ogømEXT"))!=0Ë
nLöked
++;

6161 i‡((
pglRe£tMömaxEXT
 = (
PFNGLRESETMINMAXEXTPROC
Ë
	`__GLìGëProcAddªss
("glRe£tMömaxEXT"))!=0Ë
nLöked
++;

6163 i‡(
nLöked
==10Ë 
GLEE_LINK_COMPLETE
;

6164 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6165  
GLEE_LINK_PARTIAL
;

6166 
	}
}

6168 
GLuöt
 
	$__GLìLök_GL_EXT_c⁄vﬁuti⁄
()

6170 
GLöt
 
nLöked
=0;

6171 #ifde‡
__GLEE_GL_EXT_c⁄vﬁuti⁄


6172 i‡((
pglC⁄vﬁuti⁄Fûãr1DEXT
 = (
PFNGLCONVOLUTIONFILTER1DEXTPROC
Ë
	`__GLìGëProcAddªss
("glC⁄vﬁuti⁄Fûãr1DEXT"))!=0Ë
nLöked
++;

6173 i‡((
pglC⁄vﬁuti⁄Fûãr2DEXT
 = (
PFNGLCONVOLUTIONFILTER2DEXTPROC
Ë
	`__GLìGëProcAddªss
("glC⁄vﬁuti⁄Fûãr2DEXT"))!=0Ë
nLöked
++;

6174 i‡((
pglC⁄vﬁuti⁄P¨amëîfEXT
 = (
PFNGLCONVOLUTIONPARAMETERFEXTPROC
Ë
	`__GLìGëProcAddªss
("glC⁄vﬁuti⁄P¨amëîfEXT"))!=0Ë
nLöked
++;

6175 i‡((
pglC⁄vﬁuti⁄P¨amëîfvEXT
 = (
PFNGLCONVOLUTIONPARAMETERFVEXTPROC
Ë
	`__GLìGëProcAddªss
("glC⁄vﬁuti⁄P¨amëîfvEXT"))!=0Ë
nLöked
++;

6176 i‡((
pglC⁄vﬁuti⁄P¨amëîiEXT
 = (
PFNGLCONVOLUTIONPARAMETERIEXTPROC
Ë
	`__GLìGëProcAddªss
("glC⁄vﬁuti⁄P¨amëîiEXT"))!=0Ë
nLöked
++;

6177 i‡((
pglC⁄vﬁuti⁄P¨amëîivEXT
 = (
PFNGLCONVOLUTIONPARAMETERIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glC⁄vﬁuti⁄P¨amëîivEXT"))!=0Ë
nLöked
++;

6178 i‡((
pglC›yC⁄vﬁuti⁄Fûãr1DEXT
 = (
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC
Ë
	`__GLìGëProcAddªss
("glC›yC⁄vﬁuti⁄Fûãr1DEXT"))!=0Ë
nLöked
++;

6179 i‡((
pglC›yC⁄vﬁuti⁄Fûãr2DEXT
 = (
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC
Ë
	`__GLìGëProcAddªss
("glC›yC⁄vﬁuti⁄Fûãr2DEXT"))!=0Ë
nLöked
++;

6180 i‡((
pglGëC⁄vﬁuti⁄FûãrEXT
 = (
PFNGLGETCONVOLUTIONFILTEREXTPROC
Ë
	`__GLìGëProcAddªss
("glGëC⁄vﬁuti⁄FûãrEXT"))!=0Ë
nLöked
++;

6181 i‡((
pglGëC⁄vﬁuti⁄P¨amëîfvEXT
 = (
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëC⁄vﬁuti⁄P¨amëîfvEXT"))!=0Ë
nLöked
++;

6182 i‡((
pglGëC⁄vﬁuti⁄P¨amëîivEXT
 = (
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëC⁄vﬁuti⁄P¨amëîivEXT"))!=0Ë
nLöked
++;

6183 i‡((
pglGëSï¨abÀFûãrEXT
 = (
PFNGLGETSEPARABLEFILTEREXTPROC
Ë
	`__GLìGëProcAddªss
("glGëSï¨abÀFûãrEXT"))!=0Ë
nLöked
++;

6184 i‡((
pglSï¨abÀFûãr2DEXT
 = (
PFNGLSEPARABLEFILTER2DEXTPROC
Ë
	`__GLìGëProcAddªss
("glSï¨abÀFûãr2DEXT"))!=0Ë
nLöked
++;

6186 i‡(
nLöked
==13Ë 
GLEE_LINK_COMPLETE
;

6187 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6188  
GLEE_LINK_PARTIAL
;

6189 
	}
}

6191 
GLuöt
 
	$__GLìLök_GL_SGI_cﬁ‹_m©rix
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6193 
GLuöt
 
	$__GLìLök_GL_SGI_cﬁ‹_èbÀ
()

6195 
GLöt
 
nLöked
=0;

6196 #ifde‡
__GLEE_GL_SGI_cﬁ‹_èbÀ


6197 i‡((
pglCﬁ‹TabÀSGI
 = (
PFNGLCOLORTABLESGIPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹TabÀSGI"))!=0Ë
nLöked
++;

6198 i‡((
pglCﬁ‹TabÀP¨amëîfvSGI
 = (
PFNGLCOLORTABLEPARAMETERFVSGIPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹TabÀP¨amëîfvSGI"))!=0Ë
nLöked
++;

6199 i‡((
pglCﬁ‹TabÀP¨amëîivSGI
 = (
PFNGLCOLORTABLEPARAMETERIVSGIPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹TabÀP¨amëîivSGI"))!=0Ë
nLöked
++;

6200 i‡((
pglC›yCﬁ‹TabÀSGI
 = (
PFNGLCOPYCOLORTABLESGIPROC
Ë
	`__GLìGëProcAddªss
("glC›yCﬁ‹TabÀSGI"))!=0Ë
nLöked
++;

6201 i‡((
pglGëCﬁ‹TabÀSGI
 = (
PFNGLGETCOLORTABLESGIPROC
Ë
	`__GLìGëProcAddªss
("glGëCﬁ‹TabÀSGI"))!=0Ë
nLöked
++;

6202 i‡((
pglGëCﬁ‹TabÀP¨amëîfvSGI
 = (
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC
Ë
	`__GLìGëProcAddªss
("glGëCﬁ‹TabÀP¨amëîfvSGI"))!=0Ë
nLöked
++;

6203 i‡((
pglGëCﬁ‹TabÀP¨amëîivSGI
 = (
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC
Ë
	`__GLìGëProcAddªss
("glGëCﬁ‹TabÀP¨amëîivSGI"))!=0Ë
nLöked
++;

6205 i‡(
nLöked
==7Ë 
GLEE_LINK_COMPLETE
;

6206 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6207  
GLEE_LINK_PARTIAL
;

6208 
	}
}

6210 
GLuöt
 
	$__GLìLök_GL_SGIS_pixñ_ãxtuª
()

6212 
GLöt
 
nLöked
=0;

6213 #ifde‡
__GLEE_GL_SGIS_pixñ_ãxtuª


6214 i‡((
pglPixñTexGíP¨amëîiSGIS
 = (
PFNGLPIXELTEXGENPARAMETERISGISPROC
Ë
	`__GLìGëProcAddªss
("glPixñTexGíP¨amëîiSGIS"))!=0Ë
nLöked
++;

6215 i‡((
pglPixñTexGíP¨amëîivSGIS
 = (
PFNGLPIXELTEXGENPARAMETERIVSGISPROC
Ë
	`__GLìGëProcAddªss
("glPixñTexGíP¨amëîivSGIS"))!=0Ë
nLöked
++;

6216 i‡((
pglPixñTexGíP¨amëîfSGIS
 = (
PFNGLPIXELTEXGENPARAMETERFSGISPROC
Ë
	`__GLìGëProcAddªss
("glPixñTexGíP¨amëîfSGIS"))!=0Ë
nLöked
++;

6217 i‡((
pglPixñTexGíP¨amëîfvSGIS
 = (
PFNGLPIXELTEXGENPARAMETERFVSGISPROC
Ë
	`__GLìGëProcAddªss
("glPixñTexGíP¨amëîfvSGIS"))!=0Ë
nLöked
++;

6218 i‡((
pglGëPixñTexGíP¨amëîivSGIS
 = (
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC
Ë
	`__GLìGëProcAddªss
("glGëPixñTexGíP¨amëîivSGIS"))!=0Ë
nLöked
++;

6219 i‡((
pglGëPixñTexGíP¨amëîfvSGIS
 = (
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC
Ë
	`__GLìGëProcAddªss
("glGëPixñTexGíP¨amëîfvSGIS"))!=0Ë
nLöked
++;

6221 i‡(
nLöked
==6Ë 
GLEE_LINK_COMPLETE
;

6222 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6223  
GLEE_LINK_PARTIAL
;

6224 
	}
}

6226 
GLuöt
 
	$__GLìLök_GL_SGIX_pixñ_ãxtuª
()

6228 
GLöt
 
nLöked
=0;

6229 #ifde‡
__GLEE_GL_SGIX_pixñ_ãxtuª


6230 i‡((
pglPixñTexGíSGIX
 = (
PFNGLPIXELTEXGENSGIXPROC
Ë
	`__GLìGëProcAddªss
("glPixñTexGíSGIX"))!=0Ë
nLöked
++;

6232 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6233 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6234  
GLEE_LINK_PARTIAL
;

6235 
	}
}

6237 
GLuöt
 
	$__GLìLök_GL_SGIS_ãxtuª4D
()

6239 
GLöt
 
nLöked
=0;

6240 #ifde‡
__GLEE_GL_SGIS_ãxtuª4D


6241 i‡((
pglTexImage4DSGIS
 = (
PFNGLTEXIMAGE4DSGISPROC
Ë
	`__GLìGëProcAddªss
("glTexImage4DSGIS"))!=0Ë
nLöked
++;

6242 i‡((
pglTexSubImage4DSGIS
 = (
PFNGLTEXSUBIMAGE4DSGISPROC
Ë
	`__GLìGëProcAddªss
("glTexSubImage4DSGIS"))!=0Ë
nLöked
++;

6244 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

6245 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6246  
GLEE_LINK_PARTIAL
;

6247 
	}
}

6249 
GLuöt
 
	$__GLìLök_GL_SGI_ãxtuª_cﬁ‹_èbÀ
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6251 
GLuöt
 
	$__GLìLök_GL_EXT_cmyka
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6253 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_obje˘
()

6255 
GLöt
 
nLöked
=0;

6256 #ifde‡
__GLEE_GL_EXT_ãxtuª_obje˘


6257 i‡((
pglAªTextuªsResidítEXT
 = (
PFNGLARETEXTURESRESIDENTEXTPROC
Ë
	`__GLìGëProcAddªss
("glAªTextuªsResidítEXT"))!=0Ë
nLöked
++;

6258 i‡((
pglBödTextuªEXT
 = (
PFNGLBINDTEXTUREEXTPROC
Ë
	`__GLìGëProcAddªss
("glBödTextuªEXT"))!=0Ë
nLöked
++;

6259 i‡((
pglDñëeTextuªsEXT
 = (
PFNGLDELETETEXTURESEXTPROC
Ë
	`__GLìGëProcAddªss
("glDñëeTextuªsEXT"))!=0Ë
nLöked
++;

6260 i‡((
pglGíTextuªsEXT
 = (
PFNGLGENTEXTURESEXTPROC
Ë
	`__GLìGëProcAddªss
("glGíTextuªsEXT"))!=0Ë
nLöked
++;

6261 i‡((
pglIsTextuªEXT
 = (
PFNGLISTEXTUREEXTPROC
Ë
	`__GLìGëProcAddªss
("glIsTextuªEXT"))!=0Ë
nLöked
++;

6262 i‡((
pglPri‹ôizeTextuªsEXT
 = (
PFNGLPRIORITIZETEXTURESEXTPROC
Ë
	`__GLìGëProcAddªss
("glPri‹ôizeTextuªsEXT"))!=0Ë
nLöked
++;

6264 i‡(
nLöked
==6Ë 
GLEE_LINK_COMPLETE
;

6265 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6266  
GLEE_LINK_PARTIAL
;

6267 
	}
}

6269 
GLuöt
 
	$__GLìLök_GL_SGIS_dëaû_ãxtuª
()

6271 
GLöt
 
nLöked
=0;

6272 #ifde‡
__GLEE_GL_SGIS_dëaû_ãxtuª


6273 i‡((
pglDëaûTexFuncSGIS
 = (
PFNGLDETAILTEXFUNCSGISPROC
Ë
	`__GLìGëProcAddªss
("glDëaûTexFuncSGIS"))!=0Ë
nLöked
++;

6274 i‡((
pglGëDëaûTexFuncSGIS
 = (
PFNGLGETDETAILTEXFUNCSGISPROC
Ë
	`__GLìGëProcAddªss
("glGëDëaûTexFuncSGIS"))!=0Ë
nLöked
++;

6276 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

6277 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6278  
GLEE_LINK_PARTIAL
;

6279 
	}
}

6281 
GLuöt
 
	$__GLìLök_GL_SGIS_sh¨≥n_ãxtuª
()

6283 
GLöt
 
nLöked
=0;

6284 #ifde‡
__GLEE_GL_SGIS_sh¨≥n_ãxtuª


6285 i‡((
pglSh¨≥nTexFuncSGIS
 = (
PFNGLSHARPENTEXFUNCSGISPROC
Ë
	`__GLìGëProcAddªss
("glSh¨≥nTexFuncSGIS"))!=0Ë
nLöked
++;

6286 i‡((
pglGëSh¨≥nTexFuncSGIS
 = (
PFNGLGETSHARPENTEXFUNCSGISPROC
Ë
	`__GLìGëProcAddªss
("glGëSh¨≥nTexFuncSGIS"))!=0Ë
nLöked
++;

6288 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

6289 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6290  
GLEE_LINK_PARTIAL
;

6291 
	}
}

6293 
GLuöt
 
	$__GLìLök_GL_EXT_∑cked_pixñs
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6295 
GLuöt
 
	$__GLìLök_GL_SGIS_ãxtuª_lod
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6297 
GLuöt
 
	$__GLìLök_GL_SGIS_mu…ißm∂e
()

6299 
GLöt
 
nLöked
=0;

6300 #ifde‡
__GLEE_GL_SGIS_mu…ißm∂e


6301 i‡((
pglSam∂eMaskSGIS
 = (
PFNGLSAMPLEMASKSGISPROC
Ë
	`__GLìGëProcAddªss
("glSam∂eMaskSGIS"))!=0Ë
nLöked
++;

6302 i‡((
pglSam∂eP©ã∫SGIS
 = (
PFNGLSAMPLEPATTERNSGISPROC
Ë
	`__GLìGëProcAddªss
("glSam∂eP©ã∫SGIS"))!=0Ë
nLöked
++;

6304 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

6305 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6306  
GLEE_LINK_PARTIAL
;

6307 
	}
}

6309 
GLuöt
 
	$__GLìLök_GL_EXT_ªsˇÀ_n‹mÆ
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6311 
GLuöt
 
	$__GLìLök_GL_EXT_vîãx_¨øy
()

6313 
GLöt
 
nLöked
=0;

6314 #ifde‡
__GLEE_GL_EXT_vîãx_¨øy


6315 i‡((
pglAºayEÀmítEXT
 = (
PFNGLARRAYELEMENTEXTPROC
Ë
	`__GLìGëProcAddªss
("glAºayEÀmítEXT"))!=0Ë
nLöked
++;

6316 i‡((
pglCﬁ‹PoöãrEXT
 = (
PFNGLCOLORPOINTEREXTPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹PoöãrEXT"))!=0Ë
nLöked
++;

6317 i‡((
pglDøwAºaysEXT
 = (
PFNGLDRAWARRAYSEXTPROC
Ë
	`__GLìGëProcAddªss
("glDøwAºaysEXT"))!=0Ë
nLöked
++;

6318 i‡((
pglEdgeFœgPoöãrEXT
 = (
PFNGLEDGEFLAGPOINTEREXTPROC
Ë
	`__GLìGëProcAddªss
("glEdgeFœgPoöãrEXT"))!=0Ë
nLöked
++;

6319 i‡((
pglGëPoöãrvEXT
 = (
PFNGLGETPOINTERVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëPoöãrvEXT"))!=0Ë
nLöked
++;

6320 i‡((
pglIndexPoöãrEXT
 = (
PFNGLINDEXPOINTEREXTPROC
Ë
	`__GLìGëProcAddªss
("glIndexPoöãrEXT"))!=0Ë
nLöked
++;

6321 i‡((
pglN‹mÆPoöãrEXT
 = (
PFNGLNORMALPOINTEREXTPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆPoöãrEXT"))!=0Ë
nLöked
++;

6322 i‡((
pglTexCo‹dPoöãrEXT
 = (
PFNGLTEXCOORDPOINTEREXTPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹dPoöãrEXT"))!=0Ë
nLöked
++;

6323 i‡((
pglVîãxPoöãrEXT
 = (
PFNGLVERTEXPOINTEREXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxPoöãrEXT"))!=0Ë
nLöked
++;

6325 i‡(
nLöked
==9Ë 
GLEE_LINK_COMPLETE
;

6326 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6327  
GLEE_LINK_PARTIAL
;

6328 
	}
}

6330 
GLuöt
 
	$__GLìLök_GL_EXT_misc_©åibuã
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6332 
GLuöt
 
	$__GLìLök_GL_SGIS_gíî©e_mùm≠
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6334 
GLuöt
 
	$__GLìLök_GL_SGIX_˛ùm≠
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6336 
GLuöt
 
	$__GLìLök_GL_SGIX_shadow
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6338 
GLuöt
 
	$__GLìLök_GL_SGIS_ãxtuª_edge_˛amp
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6340 
GLuöt
 
	$__GLìLök_GL_SGIS_ãxtuª_b‹dî_˛amp
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6342 
GLuöt
 
	$__GLìLök_GL_EXT_bÀnd_mömax
()

6344 
GLöt
 
nLöked
=0;

6345 #ifde‡
__GLEE_GL_EXT_bÀnd_mömax


6346 i‡((
pglBÀndEqu©i⁄EXT
 = (
PFNGLBLENDEQUATIONEXTPROC
Ë
	`__GLìGëProcAddªss
("glBÀndEqu©i⁄EXT"))!=0Ë
nLöked
++;

6348 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6349 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6350  
GLEE_LINK_PARTIAL
;

6351 
	}
}

6353 
GLuöt
 
	$__GLìLök_GL_EXT_bÀnd_subåa˘
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6355 
GLuöt
 
	$__GLìLök_GL_EXT_bÀnd_logic_›
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6357 
GLuöt
 
	$__GLìLök_GL_SGIX_öãæa˚
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6359 
GLuöt
 
	$__GLìLök_GL_SGIX_pixñ_tûes
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6361 
GLuöt
 
	$__GLìLök_GL_SGIS_ãxtuª_£À˘
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6363 
GLuöt
 
	$__GLìLök_GL_SGIX_•rôe
()

6365 
GLöt
 
nLöked
=0;

6366 #ifde‡
__GLEE_GL_SGIX_•rôe


6367 i‡((
pglS¥ôeP¨amëîfSGIX
 = (
PFNGLSPRITEPARAMETERFSGIXPROC
Ë
	`__GLìGëProcAddªss
("glS¥ôeP¨amëîfSGIX"))!=0Ë
nLöked
++;

6368 i‡((
pglS¥ôeP¨amëîfvSGIX
 = (
PFNGLSPRITEPARAMETERFVSGIXPROC
Ë
	`__GLìGëProcAddªss
("glS¥ôeP¨amëîfvSGIX"))!=0Ë
nLöked
++;

6369 i‡((
pglS¥ôeP¨amëîiSGIX
 = (
PFNGLSPRITEPARAMETERISGIXPROC
Ë
	`__GLìGëProcAddªss
("glS¥ôeP¨amëîiSGIX"))!=0Ë
nLöked
++;

6370 i‡((
pglS¥ôeP¨amëîivSGIX
 = (
PFNGLSPRITEPARAMETERIVSGIXPROC
Ë
	`__GLìGëProcAddªss
("glS¥ôeP¨amëîivSGIX"))!=0Ë
nLöked
++;

6372 i‡(
nLöked
==4Ë 
GLEE_LINK_COMPLETE
;

6373 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6374  
GLEE_LINK_PARTIAL
;

6375 
	}
}

6377 
GLuöt
 
	$__GLìLök_GL_SGIX_ãxtuª_mu…i_buf„r
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6379 
GLuöt
 
	$__GLìLök_GL_EXT_poöt_∑ømëîs
()

6381 
GLöt
 
nLöked
=0;

6382 #ifde‡
__GLEE_GL_EXT_poöt_∑ømëîs


6383 i‡((
pglPoötP¨amëîfEXT
 = (
PFNGLPOINTPARAMETERFEXTPROC
Ë
	`__GLìGëProcAddªss
("glPoötP¨amëîfEXT"))!=0Ë
nLöked
++;

6384 i‡((
pglPoötP¨amëîfvEXT
 = (
PFNGLPOINTPARAMETERFVEXTPROC
Ë
	`__GLìGëProcAddªss
("glPoötP¨amëîfvEXT"))!=0Ë
nLöked
++;

6386 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

6387 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6388  
GLEE_LINK_PARTIAL
;

6389 
	}
}

6391 
GLuöt
 
	$__GLìLök_GL_SGIS_poöt_∑ømëîs
()

6393 
GLöt
 
nLöked
=0;

6394 #ifde‡
__GLEE_GL_SGIS_poöt_∑ømëîs


6395 i‡((
pglPoötP¨amëîfSGIS
 = (
PFNGLPOINTPARAMETERFSGISPROC
Ë
	`__GLìGëProcAddªss
("glPoötP¨amëîfSGIS"))!=0Ë
nLöked
++;

6396 i‡((
pglPoötP¨amëîfvSGIS
 = (
PFNGLPOINTPARAMETERFVSGISPROC
Ë
	`__GLìGëProcAddªss
("glPoötP¨amëîfvSGIS"))!=0Ë
nLöked
++;

6398 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

6399 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6400  
GLEE_LINK_PARTIAL
;

6401 
	}
}

6403 
GLuöt
 
	$__GLìLök_GL_SGIX_ö°rumíts
()

6405 
GLöt
 
nLöked
=0;

6406 #ifde‡
__GLEE_GL_SGIX_ö°rumíts


6407 i‡((
pglGëIn°rumítsSGIX
 = (
PFNGLGETINSTRUMENTSSGIXPROC
Ë
	`__GLìGëProcAddªss
("glGëIn°rumítsSGIX"))!=0Ë
nLöked
++;

6408 i‡((
pglIn°rumítsBuf„rSGIX
 = (
PFNGLINSTRUMENTSBUFFERSGIXPROC
Ë
	`__GLìGëProcAddªss
("glIn°rumítsBuf„rSGIX"))!=0Ë
nLöked
++;

6409 i‡((
pglPﬁlIn°rumítsSGIX
 = (
PFNGLPOLLINSTRUMENTSSGIXPROC
Ë
	`__GLìGëProcAddªss
("glPﬁlIn°rumítsSGIX"))!=0Ë
nLöked
++;

6410 i‡((
pglRódIn°rumítsSGIX
 = (
PFNGLREADINSTRUMENTSSGIXPROC
Ë
	`__GLìGëProcAddªss
("glRódIn°rumítsSGIX"))!=0Ë
nLöked
++;

6411 i‡((
pglSèπIn°rumítsSGIX
 = (
PFNGLSTARTINSTRUMENTSSGIXPROC
Ë
	`__GLìGëProcAddªss
("glSèπIn°rumítsSGIX"))!=0Ë
nLöked
++;

6412 i‡((
pglSt›In°rumítsSGIX
 = (
PFNGLSTOPINSTRUMENTSSGIXPROC
Ë
	`__GLìGëProcAddªss
("glSt›In°rumítsSGIX"))!=0Ë
nLöked
++;

6414 i‡(
nLöked
==6Ë 
GLEE_LINK_COMPLETE
;

6415 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6416  
GLEE_LINK_PARTIAL
;

6417 
	}
}

6419 
GLuöt
 
	$__GLìLök_GL_SGIX_ãxtuª_sˇÀ_büs
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6421 
GLuöt
 
	$__GLìLök_GL_SGIX_‰amezoom
()

6423 
GLöt
 
nLöked
=0;

6424 #ifde‡
__GLEE_GL_SGIX_‰amezoom


6425 i‡((
pglFømeZoomSGIX
 = (
PFNGLFRAMEZOOMSGIXPROC
Ë
	`__GLìGëProcAddªss
("glFømeZoomSGIX"))!=0Ë
nLöked
++;

6427 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6428 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6429  
GLEE_LINK_PARTIAL
;

6430 
	}
}

6432 
GLuöt
 
	$__GLìLök_GL_SGIX_èg_ßm∂e_buf„r
()

6434 
GLöt
 
nLöked
=0;

6435 #ifde‡
__GLEE_GL_SGIX_èg_ßm∂e_buf„r


6436 i‡((
pglTagSam∂eBuf„rSGIX
 = (
PFNGLTAGSAMPLEBUFFERSGIXPROC
Ë
	`__GLìGëProcAddªss
("glTagSam∂eBuf„rSGIX"))!=0Ë
nLöked
++;

6438 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6439 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6440  
GLEE_LINK_PARTIAL
;

6441 
	}
}

6443 
GLuöt
 
	$__GLìLök_GL_FfdMaskSGIX
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6445 
GLuöt
 
	$__GLìLök_GL_SGIX_pﬁynomül_ffd
()

6447 
GLöt
 
nLöked
=0;

6448 #ifde‡
__GLEE_GL_SGIX_pﬁynomül_ffd


6449 i‡((
pglDef‹m©i⁄M≠3dSGIX
 = (
PFNGLDEFORMATIONMAP3DSGIXPROC
Ë
	`__GLìGëProcAddªss
("glDef‹m©i⁄M≠3dSGIX"))!=0Ë
nLöked
++;

6450 i‡((
pglDef‹m©i⁄M≠3fSGIX
 = (
PFNGLDEFORMATIONMAP3FSGIXPROC
Ë
	`__GLìGëProcAddªss
("glDef‹m©i⁄M≠3fSGIX"))!=0Ë
nLöked
++;

6451 i‡((
pglDef‹mSGIX
 = (
PFNGLDEFORMSGIXPROC
Ë
	`__GLìGëProcAddªss
("glDef‹mSGIX"))!=0Ë
nLöked
++;

6452 i‡((
pglLﬂdIdítôyDef‹m©i⁄M≠SGIX
 = (
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC
Ë
	`__GLìGëProcAddªss
("glLﬂdIdítôyDef‹m©i⁄M≠SGIX"))!=0Ë
nLöked
++;

6454 i‡(
nLöked
==4Ë 
GLEE_LINK_COMPLETE
;

6455 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6456  
GLEE_LINK_PARTIAL
;

6457 
	}
}

6459 
GLuöt
 
	$__GLìLök_GL_SGIX_ª„ªn˚_∂™e
()

6461 
GLöt
 
nLöked
=0;

6462 #ifde‡
__GLEE_GL_SGIX_ª„ªn˚_∂™e


6463 i‡((
pglRe„ªn˚Pœ√SGIX
 = (
PFNGLREFERENCEPLANESGIXPROC
Ë
	`__GLìGëProcAddªss
("glRe„ªn˚Pœ√SGIX"))!=0Ë
nLöked
++;

6465 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6466 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6467  
GLEE_LINK_PARTIAL
;

6468 
	}
}

6470 
GLuöt
 
	$__GLìLök_GL_SGIX_Êush_ø°î
()

6472 
GLöt
 
nLöked
=0;

6473 #ifde‡
__GLEE_GL_SGIX_Êush_ø°î


6474 i‡((
pglFlushRa°îSGIX
 = (
PFNGLFLUSHRASTERSGIXPROC
Ë
	`__GLìGëProcAddªss
("glFlushRa°îSGIX"))!=0Ë
nLöked
++;

6476 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6477 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6478  
GLEE_LINK_PARTIAL
;

6479 
	}
}

6481 
GLuöt
 
	$__GLìLök_GL_SGIX_dïth_ãxtuª
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6483 
GLuöt
 
	$__GLìLök_GL_SGIS_fog_fun˘i⁄
()

6485 
GLöt
 
nLöked
=0;

6486 #ifde‡
__GLEE_GL_SGIS_fog_fun˘i⁄


6487 i‡((
pglFogFuncSGIS
 = (
PFNGLFOGFUNCSGISPROC
Ë
	`__GLìGëProcAddªss
("glFogFuncSGIS"))!=0Ë
nLöked
++;

6488 i‡((
pglGëFogFuncSGIS
 = (
PFNGLGETFOGFUNCSGISPROC
Ë
	`__GLìGëProcAddªss
("glGëFogFuncSGIS"))!=0Ë
nLöked
++;

6490 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

6491 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6492  
GLEE_LINK_PARTIAL
;

6493 
	}
}

6495 
GLuöt
 
	$__GLìLök_GL_SGIX_fog_off£t
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6497 
GLuöt
 
	$__GLìLök_GL_HP_image_å™sf‹m
()

6499 
GLöt
 
nLöked
=0;

6500 #ifde‡
__GLEE_GL_HP_image_å™sf‹m


6501 i‡((
pglImageTønsf‹mP¨amëîiHP
 = (
PFNGLIMAGETRANSFORMPARAMETERIHPPROC
Ë
	`__GLìGëProcAddªss
("glImageTønsf‹mP¨amëîiHP"))!=0Ë
nLöked
++;

6502 i‡((
pglImageTønsf‹mP¨amëîfHP
 = (
PFNGLIMAGETRANSFORMPARAMETERFHPPROC
Ë
	`__GLìGëProcAddªss
("glImageTønsf‹mP¨amëîfHP"))!=0Ë
nLöked
++;

6503 i‡((
pglImageTønsf‹mP¨amëîivHP
 = (
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC
Ë
	`__GLìGëProcAddªss
("glImageTønsf‹mP¨amëîivHP"))!=0Ë
nLöked
++;

6504 i‡((
pglImageTønsf‹mP¨amëîfvHP
 = (
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC
Ë
	`__GLìGëProcAddªss
("glImageTønsf‹mP¨amëîfvHP"))!=0Ë
nLöked
++;

6505 i‡((
pglGëImageTønsf‹mP¨amëîivHP
 = (
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC
Ë
	`__GLìGëProcAddªss
("glGëImageTønsf‹mP¨amëîivHP"))!=0Ë
nLöked
++;

6506 i‡((
pglGëImageTønsf‹mP¨amëîfvHP
 = (
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC
Ë
	`__GLìGëProcAddªss
("glGëImageTønsf‹mP¨amëîfvHP"))!=0Ë
nLöked
++;

6508 i‡(
nLöked
==6Ë 
GLEE_LINK_COMPLETE
;

6509 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6510  
GLEE_LINK_PARTIAL
;

6511 
	}
}

6513 
GLuöt
 
	$__GLìLök_GL_HP_c⁄vﬁuti⁄_b‹dî_modes
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6515 
GLuöt
 
	$__GLìLök_GL_INGR_∑Àâe_buf„r
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6517 
GLuöt
 
	$__GLìLök_GL_SGIX_ãxtuª_add_ív
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6519 
GLuöt
 
	$__GLìLök_GL_EXT_cﬁ‹_subèbÀ
()

6521 
GLöt
 
nLöked
=0;

6522 #ifde‡
__GLEE_GL_EXT_cﬁ‹_subèbÀ


6523 i‡((
pglCﬁ‹SubTabÀEXT
 = (
PFNGLCOLORSUBTABLEEXTPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹SubTabÀEXT"))!=0Ë
nLöked
++;

6524 i‡((
pglC›yCﬁ‹SubTabÀEXT
 = (
PFNGLCOPYCOLORSUBTABLEEXTPROC
Ë
	`__GLìGëProcAddªss
("glC›yCﬁ‹SubTabÀEXT"))!=0Ë
nLöked
++;

6526 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

6527 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6528  
GLEE_LINK_PARTIAL
;

6529 
	}
}

6531 
GLuöt
 
	$__GLìLök_GL_PGI_vîãx_höts
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6533 
GLuöt
 
	$__GLìLök_GL_PGI_misc_höts
()

6535 
GLöt
 
nLöked
=0;

6536 #ifde‡
__GLEE_GL_PGI_misc_höts


6537 i‡((
pglHötPGI
 = (
PFNGLHINTPGIPROC
Ë
	`__GLìGëProcAddªss
("glHötPGI"))!=0Ë
nLöked
++;

6539 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6540 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6541  
GLEE_LINK_PARTIAL
;

6542 
	}
}

6544 
GLuöt
 
	$__GLìLök_GL_EXT_∑Àâed_ãxtuª
()

6546 
GLöt
 
nLöked
=0;

6547 #ifde‡
__GLEE_GL_EXT_∑Àâed_ãxtuª


6548 i‡((
pglCﬁ‹TabÀEXT
 = (
PFNGLCOLORTABLEEXTPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹TabÀEXT"))!=0Ë
nLöked
++;

6549 i‡((
pglGëCﬁ‹TabÀEXT
 = (
PFNGLGETCOLORTABLEEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëCﬁ‹TabÀEXT"))!=0Ë
nLöked
++;

6550 i‡((
pglGëCﬁ‹TabÀP¨amëîivEXT
 = (
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëCﬁ‹TabÀP¨amëîivEXT"))!=0Ë
nLöked
++;

6551 i‡((
pglGëCﬁ‹TabÀP¨amëîfvEXT
 = (
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëCﬁ‹TabÀP¨amëîfvEXT"))!=0Ë
nLöked
++;

6553 i‡(
nLöked
==4Ë 
GLEE_LINK_COMPLETE
;

6554 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6555  
GLEE_LINK_PARTIAL
;

6556 
	}
}

6558 
GLuöt
 
	$__GLìLök_GL_EXT_˛ù_vﬁume_höt
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6560 
GLuöt
 
	$__GLìLök_GL_SGIX_li°_¥i‹ôy
()

6562 
GLöt
 
nLöked
=0;

6563 #ifde‡
__GLEE_GL_SGIX_li°_¥i‹ôy


6564 i‡((
pglGëLi°P¨amëîfvSGIX
 = (
PFNGLGETLISTPARAMETERFVSGIXPROC
Ë
	`__GLìGëProcAddªss
("glGëLi°P¨amëîfvSGIX"))!=0Ë
nLöked
++;

6565 i‡((
pglGëLi°P¨amëîivSGIX
 = (
PFNGLGETLISTPARAMETERIVSGIXPROC
Ë
	`__GLìGëProcAddªss
("glGëLi°P¨amëîivSGIX"))!=0Ë
nLöked
++;

6566 i‡((
pglLi°P¨amëîfSGIX
 = (
PFNGLLISTPARAMETERFSGIXPROC
Ë
	`__GLìGëProcAddªss
("glLi°P¨amëîfSGIX"))!=0Ë
nLöked
++;

6567 i‡((
pglLi°P¨amëîfvSGIX
 = (
PFNGLLISTPARAMETERFVSGIXPROC
Ë
	`__GLìGëProcAddªss
("glLi°P¨amëîfvSGIX"))!=0Ë
nLöked
++;

6568 i‡((
pglLi°P¨amëîiSGIX
 = (
PFNGLLISTPARAMETERISGIXPROC
Ë
	`__GLìGëProcAddªss
("glLi°P¨amëîiSGIX"))!=0Ë
nLöked
++;

6569 i‡((
pglLi°P¨amëîivSGIX
 = (
PFNGLLISTPARAMETERIVSGIXPROC
Ë
	`__GLìGëProcAddªss
("glLi°P¨amëîivSGIX"))!=0Ë
nLöked
++;

6571 i‡(
nLöked
==6Ë 
GLEE_LINK_COMPLETE
;

6572 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6573  
GLEE_LINK_PARTIAL
;

6574 
	}
}

6576 
GLuöt
 
	$__GLìLök_GL_SGIX_ú_ö°rumít1
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6578 
GLuöt
 
	$__GLìLök_GL_SGIX_ˇŒigøphic_‰agmít
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6580 
GLuöt
 
	$__GLìLök_GL_SGIX_ãxtuª_lod_büs
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6582 
GLuöt
 
	$__GLìLök_GL_SGIX_shadow_ambõ¡
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6584 
GLuöt
 
	$__GLìLök_GL_EXT_ödex_ãxtuª
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6586 
GLuöt
 
	$__GLìLök_GL_EXT_ödex_m©îül
()

6588 
GLöt
 
nLöked
=0;

6589 #ifde‡
__GLEE_GL_EXT_ödex_m©îül


6590 i‡((
pglIndexM©îülEXT
 = (
PFNGLINDEXMATERIALEXTPROC
Ë
	`__GLìGëProcAddªss
("glIndexM©îülEXT"))!=0Ë
nLöked
++;

6592 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6593 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6594  
GLEE_LINK_PARTIAL
;

6595 
	}
}

6597 
GLuöt
 
	$__GLìLök_GL_EXT_ödex_func
()

6599 
GLöt
 
nLöked
=0;

6600 #ifde‡
__GLEE_GL_EXT_ödex_func


6601 i‡((
pglIndexFuncEXT
 = (
PFNGLINDEXFUNCEXTPROC
Ë
	`__GLìGëProcAddªss
("glIndexFuncEXT"))!=0Ë
nLöked
++;

6603 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6604 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6605  
GLEE_LINK_PARTIAL
;

6606 
	}
}

6608 
GLuöt
 
	$__GLìLök_GL_EXT_ödex_¨øy_f‹m©s
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6610 
GLuöt
 
	$__GLìLök_GL_EXT_compûed_vîãx_¨øy
()

6612 
GLöt
 
nLöked
=0;

6613 #ifde‡
__GLEE_GL_EXT_compûed_vîãx_¨øy


6614 i‡((
pglLockAºaysEXT
 = (
PFNGLLOCKARRAYSEXTPROC
Ë
	`__GLìGëProcAddªss
("glLockAºaysEXT"))!=0Ë
nLöked
++;

6615 i‡((
pglU∆ockAºaysEXT
 = (
PFNGLUNLOCKARRAYSEXTPROC
Ë
	`__GLìGëProcAddªss
("glU∆ockAºaysEXT"))!=0Ë
nLöked
++;

6617 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

6618 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6619  
GLEE_LINK_PARTIAL
;

6620 
	}
}

6622 
GLuöt
 
	$__GLìLök_GL_EXT_cuŒ_vîãx
()

6624 
GLöt
 
nLöked
=0;

6625 #ifde‡
__GLEE_GL_EXT_cuŒ_vîãx


6626 i‡((
pglCuŒP¨amëîdvEXT
 = (
PFNGLCULLPARAMETERDVEXTPROC
Ë
	`__GLìGëProcAddªss
("glCuŒP¨amëîdvEXT"))!=0Ë
nLöked
++;

6627 i‡((
pglCuŒP¨amëîfvEXT
 = (
PFNGLCULLPARAMETERFVEXTPROC
Ë
	`__GLìGëProcAddªss
("glCuŒP¨amëîfvEXT"))!=0Ë
nLöked
++;

6629 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

6630 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6631  
GLEE_LINK_PARTIAL
;

6632 
	}
}

6634 
GLuöt
 
	$__GLìLök_GL_SGIX_y¸cb
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6636 
GLuöt
 
	$__GLìLök_GL_SGIX_‰agmít_lightög
()

6638 
GLöt
 
nLöked
=0;

6639 #ifde‡
__GLEE_GL_SGIX_‰agmít_lightög


6640 i‡((
pglFøgmítCﬁ‹M©îülSGIX
 = (
PFNGLFRAGMENTCOLORMATERIALSGIXPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítCﬁ‹M©îülSGIX"))!=0Ë
nLöked
++;

6641 i‡((
pglFøgmítLightfSGIX
 = (
PFNGLFRAGMENTLIGHTFSGIXPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítLightfSGIX"))!=0Ë
nLöked
++;

6642 i‡((
pglFøgmítLightfvSGIX
 = (
PFNGLFRAGMENTLIGHTFVSGIXPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítLightfvSGIX"))!=0Ë
nLöked
++;

6643 i‡((
pglFøgmítLightiSGIX
 = (
PFNGLFRAGMENTLIGHTISGIXPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítLightiSGIX"))!=0Ë
nLöked
++;

6644 i‡((
pglFøgmítLightivSGIX
 = (
PFNGLFRAGMENTLIGHTIVSGIXPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítLightivSGIX"))!=0Ë
nLöked
++;

6645 i‡((
pglFøgmítLightModñfSGIX
 = (
PFNGLFRAGMENTLIGHTMODELFSGIXPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítLightModñfSGIX"))!=0Ë
nLöked
++;

6646 i‡((
pglFøgmítLightModñfvSGIX
 = (
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítLightModñfvSGIX"))!=0Ë
nLöked
++;

6647 i‡((
pglFøgmítLightModñiSGIX
 = (
PFNGLFRAGMENTLIGHTMODELISGIXPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítLightModñiSGIX"))!=0Ë
nLöked
++;

6648 i‡((
pglFøgmítLightModñivSGIX
 = (
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítLightModñivSGIX"))!=0Ë
nLöked
++;

6649 i‡((
pglFøgmítM©îülfSGIX
 = (
PFNGLFRAGMENTMATERIALFSGIXPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítM©îülfSGIX"))!=0Ë
nLöked
++;

6650 i‡((
pglFøgmítM©îülfvSGIX
 = (
PFNGLFRAGMENTMATERIALFVSGIXPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítM©îülfvSGIX"))!=0Ë
nLöked
++;

6651 i‡((
pglFøgmítM©îüliSGIX
 = (
PFNGLFRAGMENTMATERIALISGIXPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítM©îüliSGIX"))!=0Ë
nLöked
++;

6652 i‡((
pglFøgmítM©îülivSGIX
 = (
PFNGLFRAGMENTMATERIALIVSGIXPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítM©îülivSGIX"))!=0Ë
nLöked
++;

6653 i‡((
pglGëFøgmítLightfvSGIX
 = (
PFNGLGETFRAGMENTLIGHTFVSGIXPROC
Ë
	`__GLìGëProcAddªss
("glGëFøgmítLightfvSGIX"))!=0Ë
nLöked
++;

6654 i‡((
pglGëFøgmítLightivSGIX
 = (
PFNGLGETFRAGMENTLIGHTIVSGIXPROC
Ë
	`__GLìGëProcAddªss
("glGëFøgmítLightivSGIX"))!=0Ë
nLöked
++;

6655 i‡((
pglGëFøgmítM©îülfvSGIX
 = (
PFNGLGETFRAGMENTMATERIALFVSGIXPROC
Ë
	`__GLìGëProcAddªss
("glGëFøgmítM©îülfvSGIX"))!=0Ë
nLöked
++;

6656 i‡((
pglGëFøgmítM©îülivSGIX
 = (
PFNGLGETFRAGMENTMATERIALIVSGIXPROC
Ë
	`__GLìGëProcAddªss
("glGëFøgmítM©îülivSGIX"))!=0Ë
nLöked
++;

6657 i‡((
pglLightEnviSGIX
 = (
PFNGLLIGHTENVISGIXPROC
Ë
	`__GLìGëProcAddªss
("glLightEnviSGIX"))!=0Ë
nLöked
++;

6659 i‡(
nLöked
==18Ë 
GLEE_LINK_COMPLETE
;

6660 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6661  
GLEE_LINK_PARTIAL
;

6662 
	}
}

6664 
GLuöt
 
	$__GLìLök_GL_IBM_ø°îpos_˛ù
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6666 
GLuöt
 
	$__GLìLök_GL_HP_ãxtuª_lightög
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6668 
GLuöt
 
	$__GLìLök_GL_EXT_døw_ønge_ñemíts
()

6670 
GLöt
 
nLöked
=0;

6671 #ifde‡
__GLEE_GL_EXT_døw_ønge_ñemíts


6672 i‡((
pglDøwR™geEÀmítsEXT
 = (
PFNGLDRAWRANGEELEMENTSEXTPROC
Ë
	`__GLìGëProcAddªss
("glDøwR™geEÀmítsEXT"))!=0Ë
nLöked
++;

6674 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6675 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6676  
GLEE_LINK_PARTIAL
;

6677 
	}
}

6679 
GLuöt
 
	$__GLìLök_GL_WIN_ph⁄g_shadög
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6681 
GLuöt
 
	$__GLìLök_GL_WIN_•ecuœr_fog
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6683 
GLuöt
 
	$__GLìLök_GL_EXT_light_ãxtuª
()

6685 
GLöt
 
nLöked
=0;

6686 #ifde‡
__GLEE_GL_EXT_light_ãxtuª


6687 i‡((
pglAµlyTextuªEXT
 = (
PFNGLAPPLYTEXTUREEXTPROC
Ë
	`__GLìGëProcAddªss
("glAµlyTextuªEXT"))!=0Ë
nLöked
++;

6688 i‡((
pglTextuªLightEXT
 = (
PFNGLTEXTURELIGHTEXTPROC
Ë
	`__GLìGëProcAddªss
("glTextuªLightEXT"))!=0Ë
nLöked
++;

6689 i‡((
pglTextuªM©îülEXT
 = (
PFNGLTEXTUREMATERIALEXTPROC
Ë
	`__GLìGëProcAddªss
("glTextuªM©îülEXT"))!=0Ë
nLöked
++;

6691 i‡(
nLöked
==3Ë 
GLEE_LINK_COMPLETE
;

6692 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6693  
GLEE_LINK_PARTIAL
;

6694 
	}
}

6696 
GLuöt
 
	$__GLìLök_GL_SGIX_bÀnd_Æpha_mömax
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6698 
GLuöt
 
	$__GLìLök_GL_SGIX_im∑˘_pixñ_ãxtuª
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6700 
GLuöt
 
	$__GLìLök_GL_EXT_bgø
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6702 
GLuöt
 
	$__GLìLök_GL_SGIX_async
()

6704 
GLöt
 
nLöked
=0;

6705 #ifde‡
__GLEE_GL_SGIX_async


6706 i‡((
pglAsyncM¨kîSGIX
 = (
PFNGLASYNCMARKERSGIXPROC
Ë
	`__GLìGëProcAddªss
("glAsyncM¨kîSGIX"))!=0Ë
nLöked
++;

6707 i‡((
pglFöishAsyncSGIX
 = (
PFNGLFINISHASYNCSGIXPROC
Ë
	`__GLìGëProcAddªss
("glFöishAsyncSGIX"))!=0Ë
nLöked
++;

6708 i‡((
pglPﬁlAsyncSGIX
 = (
PFNGLPOLLASYNCSGIXPROC
Ë
	`__GLìGëProcAddªss
("glPﬁlAsyncSGIX"))!=0Ë
nLöked
++;

6709 i‡((
pglGíAsyncM¨kîsSGIX
 = (
PFNGLGENASYNCMARKERSSGIXPROC
Ë
	`__GLìGëProcAddªss
("glGíAsyncM¨kîsSGIX"))!=0Ë
nLöked
++;

6710 i‡((
pglDñëeAsyncM¨kîsSGIX
 = (
PFNGLDELETEASYNCMARKERSSGIXPROC
Ë
	`__GLìGëProcAddªss
("glDñëeAsyncM¨kîsSGIX"))!=0Ë
nLöked
++;

6711 i‡((
pglIsAsyncM¨kîSGIX
 = (
PFNGLISASYNCMARKERSGIXPROC
Ë
	`__GLìGëProcAddªss
("glIsAsyncM¨kîSGIX"))!=0Ë
nLöked
++;

6713 i‡(
nLöked
==6Ë 
GLEE_LINK_COMPLETE
;

6714 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6715  
GLEE_LINK_PARTIAL
;

6716 
	}
}

6718 
GLuöt
 
	$__GLìLök_GL_SGIX_async_pixñ
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6720 
GLuöt
 
	$__GLìLök_GL_SGIX_async_hi°ogøm
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6722 
GLuöt
 
	$__GLìLök_GL_INTEL_ãxtuª_sciss‹
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6724 
GLuöt
 
	$__GLìLök_GL_INTEL_∑øŒñ_¨øys
()

6726 
GLöt
 
nLöked
=0;

6727 #ifde‡
__GLEE_GL_INTEL_∑øŒñ_¨øys


6728 i‡((
pglVîãxPoöãrvINTEL
 = (
PFNGLVERTEXPOINTERVINTELPROC
Ë
	`__GLìGëProcAddªss
("glVîãxPoöãrvINTEL"))!=0Ë
nLöked
++;

6729 i‡((
pglN‹mÆPoöãrvINTEL
 = (
PFNGLNORMALPOINTERVINTELPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆPoöãrvINTEL"))!=0Ë
nLöked
++;

6730 i‡((
pglCﬁ‹PoöãrvINTEL
 = (
PFNGLCOLORPOINTERVINTELPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹PoöãrvINTEL"))!=0Ë
nLöked
++;

6731 i‡((
pglTexCo‹dPoöãrvINTEL
 = (
PFNGLTEXCOORDPOINTERVINTELPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹dPoöãrvINTEL"))!=0Ë
nLöked
++;

6733 i‡(
nLöked
==4Ë 
GLEE_LINK_COMPLETE
;

6734 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6735  
GLEE_LINK_PARTIAL
;

6736 
	}
}

6738 
GLuöt
 
	$__GLìLök_GL_HP_oc˛usi⁄_ã°
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6740 
GLuöt
 
	$__GLìLök_GL_EXT_pixñ_å™sf‹m
()

6742 
GLöt
 
nLöked
=0;

6743 #ifde‡
__GLEE_GL_EXT_pixñ_å™sf‹m


6744 i‡((
pglPixñTønsf‹mP¨amëîiEXT
 = (
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC
Ë
	`__GLìGëProcAddªss
("glPixñTønsf‹mP¨amëîiEXT"))!=0Ë
nLöked
++;

6745 i‡((
pglPixñTønsf‹mP¨amëîfEXT
 = (
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC
Ë
	`__GLìGëProcAddªss
("glPixñTønsf‹mP¨amëîfEXT"))!=0Ë
nLöked
++;

6746 i‡((
pglPixñTønsf‹mP¨amëîivEXT
 = (
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glPixñTønsf‹mP¨amëîivEXT"))!=0Ë
nLöked
++;

6747 i‡((
pglPixñTønsf‹mP¨amëîfvEXT
 = (
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC
Ë
	`__GLìGëProcAddªss
("glPixñTønsf‹mP¨amëîfvEXT"))!=0Ë
nLöked
++;

6749 i‡(
nLöked
==4Ë 
GLEE_LINK_COMPLETE
;

6750 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6751  
GLEE_LINK_PARTIAL
;

6752 
	}
}

6754 
GLuöt
 
	$__GLìLök_GL_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6756 
GLuöt
 
	$__GLìLök_GL_EXT_sh¨ed_ãxtuª_∑Àâe
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6758 
GLuöt
 
	$__GLìLök_GL_EXT_£∑øã_•ecuœr_cﬁ‹
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6760 
GLuöt
 
	$__GLìLök_GL_EXT_£c⁄d¨y_cﬁ‹
()

6762 
GLöt
 
nLöked
=0;

6763 #ifde‡
__GLEE_GL_EXT_£c⁄d¨y_cﬁ‹


6764 i‡((
pglSec⁄d¨yCﬁ‹3bEXT
 = (
PFNGLSECONDARYCOLOR3BEXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3bEXT"))!=0Ë
nLöked
++;

6765 i‡((
pglSec⁄d¨yCﬁ‹3bvEXT
 = (
PFNGLSECONDARYCOLOR3BVEXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3bvEXT"))!=0Ë
nLöked
++;

6766 i‡((
pglSec⁄d¨yCﬁ‹3dEXT
 = (
PFNGLSECONDARYCOLOR3DEXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3dEXT"))!=0Ë
nLöked
++;

6767 i‡((
pglSec⁄d¨yCﬁ‹3dvEXT
 = (
PFNGLSECONDARYCOLOR3DVEXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3dvEXT"))!=0Ë
nLöked
++;

6768 i‡((
pglSec⁄d¨yCﬁ‹3fEXT
 = (
PFNGLSECONDARYCOLOR3FEXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3fEXT"))!=0Ë
nLöked
++;

6769 i‡((
pglSec⁄d¨yCﬁ‹3fvEXT
 = (
PFNGLSECONDARYCOLOR3FVEXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3fvEXT"))!=0Ë
nLöked
++;

6770 i‡((
pglSec⁄d¨yCﬁ‹3iEXT
 = (
PFNGLSECONDARYCOLOR3IEXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3iEXT"))!=0Ë
nLöked
++;

6771 i‡((
pglSec⁄d¨yCﬁ‹3ivEXT
 = (
PFNGLSECONDARYCOLOR3IVEXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3ivEXT"))!=0Ë
nLöked
++;

6772 i‡((
pglSec⁄d¨yCﬁ‹3sEXT
 = (
PFNGLSECONDARYCOLOR3SEXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3sEXT"))!=0Ë
nLöked
++;

6773 i‡((
pglSec⁄d¨yCﬁ‹3svEXT
 = (
PFNGLSECONDARYCOLOR3SVEXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3svEXT"))!=0Ë
nLöked
++;

6774 i‡((
pglSec⁄d¨yCﬁ‹3ubEXT
 = (
PFNGLSECONDARYCOLOR3UBEXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3ubEXT"))!=0Ë
nLöked
++;

6775 i‡((
pglSec⁄d¨yCﬁ‹3ubvEXT
 = (
PFNGLSECONDARYCOLOR3UBVEXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3ubvEXT"))!=0Ë
nLöked
++;

6776 i‡((
pglSec⁄d¨yCﬁ‹3uiEXT
 = (
PFNGLSECONDARYCOLOR3UIEXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3uiEXT"))!=0Ë
nLöked
++;

6777 i‡((
pglSec⁄d¨yCﬁ‹3uivEXT
 = (
PFNGLSECONDARYCOLOR3UIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3uivEXT"))!=0Ë
nLöked
++;

6778 i‡((
pglSec⁄d¨yCﬁ‹3usEXT
 = (
PFNGLSECONDARYCOLOR3USEXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3usEXT"))!=0Ë
nLöked
++;

6779 i‡((
pglSec⁄d¨yCﬁ‹3usvEXT
 = (
PFNGLSECONDARYCOLOR3USVEXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3usvEXT"))!=0Ë
nLöked
++;

6780 i‡((
pglSec⁄d¨yCﬁ‹PoöãrEXT
 = (
PFNGLSECONDARYCOLORPOINTEREXTPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹PoöãrEXT"))!=0Ë
nLöked
++;

6782 i‡(
nLöked
==17Ë 
GLEE_LINK_COMPLETE
;

6783 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6784  
GLEE_LINK_PARTIAL
;

6785 
	}
}

6787 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_≥πurb_n‹mÆ
()

6789 
GLöt
 
nLöked
=0;

6790 #ifde‡
__GLEE_GL_EXT_ãxtuª_≥πurb_n‹mÆ


6791 i‡((
pglTextuªN‹mÆEXT
 = (
PFNGLTEXTURENORMALEXTPROC
Ë
	`__GLìGëProcAddªss
("glTextuªN‹mÆEXT"))!=0Ë
nLöked
++;

6793 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6794 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6795  
GLEE_LINK_PARTIAL
;

6796 
	}
}

6798 
GLuöt
 
	$__GLìLök_GL_EXT_mu…i_døw_¨øys
()

6800 
GLöt
 
nLöked
=0;

6801 #ifde‡
__GLEE_GL_EXT_mu…i_døw_¨øys


6802 i‡((
pglMu…iDøwAºaysEXT
 = (
PFNGLMULTIDRAWARRAYSEXTPROC
Ë
	`__GLìGëProcAddªss
("glMu…iDøwAºaysEXT"))!=0Ë
nLöked
++;

6803 i‡((
pglMu…iDøwEÀmítsEXT
 = (
PFNGLMULTIDRAWELEMENTSEXTPROC
Ë
	`__GLìGëProcAddªss
("glMu…iDøwEÀmítsEXT"))!=0Ë
nLöked
++;

6805 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

6806 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6807  
GLEE_LINK_PARTIAL
;

6808 
	}
}

6810 
GLuöt
 
	$__GLìLök_GL_EXT_fog_co‹d
()

6812 
GLöt
 
nLöked
=0;

6813 #ifde‡
__GLEE_GL_EXT_fog_co‹d


6814 i‡((
pglFogCo‹dfEXT
 = (
PFNGLFOGCOORDFEXTPROC
Ë
	`__GLìGëProcAddªss
("glFogCo‹dfEXT"))!=0Ë
nLöked
++;

6815 i‡((
pglFogCo‹dfvEXT
 = (
PFNGLFOGCOORDFVEXTPROC
Ë
	`__GLìGëProcAddªss
("glFogCo‹dfvEXT"))!=0Ë
nLöked
++;

6816 i‡((
pglFogCo‹ddEXT
 = (
PFNGLFOGCOORDDEXTPROC
Ë
	`__GLìGëProcAddªss
("glFogCo‹ddEXT"))!=0Ë
nLöked
++;

6817 i‡((
pglFogCo‹ddvEXT
 = (
PFNGLFOGCOORDDVEXTPROC
Ë
	`__GLìGëProcAddªss
("glFogCo‹ddvEXT"))!=0Ë
nLöked
++;

6818 i‡((
pglFogCo‹dPoöãrEXT
 = (
PFNGLFOGCOORDPOINTEREXTPROC
Ë
	`__GLìGëProcAddªss
("glFogCo‹dPoöãrEXT"))!=0Ë
nLöked
++;

6820 i‡(
nLöked
==5Ë 
GLEE_LINK_COMPLETE
;

6821 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6822  
GLEE_LINK_PARTIAL
;

6823 
	}
}

6825 
GLuöt
 
	$__GLìLök_GL_REND_s¸ìn_co‹dö©es
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6827 
GLuöt
 
	$__GLìLök_GL_EXT_co‹dö©e_‰ame
()

6829 
GLöt
 
nLöked
=0;

6830 #ifde‡
__GLEE_GL_EXT_co‹dö©e_‰ame


6831 i‡((
pglT™gít3bEXT
 = (
PFNGLTANGENT3BEXTPROC
Ë
	`__GLìGëProcAddªss
("glT™gít3bEXT"))!=0Ë
nLöked
++;

6832 i‡((
pglT™gít3bvEXT
 = (
PFNGLTANGENT3BVEXTPROC
Ë
	`__GLìGëProcAddªss
("glT™gít3bvEXT"))!=0Ë
nLöked
++;

6833 i‡((
pglT™gít3dEXT
 = (
PFNGLTANGENT3DEXTPROC
Ë
	`__GLìGëProcAddªss
("glT™gít3dEXT"))!=0Ë
nLöked
++;

6834 i‡((
pglT™gít3dvEXT
 = (
PFNGLTANGENT3DVEXTPROC
Ë
	`__GLìGëProcAddªss
("glT™gít3dvEXT"))!=0Ë
nLöked
++;

6835 i‡((
pglT™gít3fEXT
 = (
PFNGLTANGENT3FEXTPROC
Ë
	`__GLìGëProcAddªss
("glT™gít3fEXT"))!=0Ë
nLöked
++;

6836 i‡((
pglT™gít3fvEXT
 = (
PFNGLTANGENT3FVEXTPROC
Ë
	`__GLìGëProcAddªss
("glT™gít3fvEXT"))!=0Ë
nLöked
++;

6837 i‡((
pglT™gít3iEXT
 = (
PFNGLTANGENT3IEXTPROC
Ë
	`__GLìGëProcAddªss
("glT™gít3iEXT"))!=0Ë
nLöked
++;

6838 i‡((
pglT™gít3ivEXT
 = (
PFNGLTANGENT3IVEXTPROC
Ë
	`__GLìGëProcAddªss
("glT™gít3ivEXT"))!=0Ë
nLöked
++;

6839 i‡((
pglT™gít3sEXT
 = (
PFNGLTANGENT3SEXTPROC
Ë
	`__GLìGëProcAddªss
("glT™gít3sEXT"))!=0Ë
nLöked
++;

6840 i‡((
pglT™gít3svEXT
 = (
PFNGLTANGENT3SVEXTPROC
Ë
	`__GLìGëProcAddªss
("glT™gít3svEXT"))!=0Ë
nLöked
++;

6841 i‡((
pglBö‹mÆ3bEXT
 = (
PFNGLBINORMAL3BEXTPROC
Ë
	`__GLìGëProcAddªss
("glBö‹mÆ3bEXT"))!=0Ë
nLöked
++;

6842 i‡((
pglBö‹mÆ3bvEXT
 = (
PFNGLBINORMAL3BVEXTPROC
Ë
	`__GLìGëProcAddªss
("glBö‹mÆ3bvEXT"))!=0Ë
nLöked
++;

6843 i‡((
pglBö‹mÆ3dEXT
 = (
PFNGLBINORMAL3DEXTPROC
Ë
	`__GLìGëProcAddªss
("glBö‹mÆ3dEXT"))!=0Ë
nLöked
++;

6844 i‡((
pglBö‹mÆ3dvEXT
 = (
PFNGLBINORMAL3DVEXTPROC
Ë
	`__GLìGëProcAddªss
("glBö‹mÆ3dvEXT"))!=0Ë
nLöked
++;

6845 i‡((
pglBö‹mÆ3fEXT
 = (
PFNGLBINORMAL3FEXTPROC
Ë
	`__GLìGëProcAddªss
("glBö‹mÆ3fEXT"))!=0Ë
nLöked
++;

6846 i‡((
pglBö‹mÆ3fvEXT
 = (
PFNGLBINORMAL3FVEXTPROC
Ë
	`__GLìGëProcAddªss
("glBö‹mÆ3fvEXT"))!=0Ë
nLöked
++;

6847 i‡((
pglBö‹mÆ3iEXT
 = (
PFNGLBINORMAL3IEXTPROC
Ë
	`__GLìGëProcAddªss
("glBö‹mÆ3iEXT"))!=0Ë
nLöked
++;

6848 i‡((
pglBö‹mÆ3ivEXT
 = (
PFNGLBINORMAL3IVEXTPROC
Ë
	`__GLìGëProcAddªss
("glBö‹mÆ3ivEXT"))!=0Ë
nLöked
++;

6849 i‡((
pglBö‹mÆ3sEXT
 = (
PFNGLBINORMAL3SEXTPROC
Ë
	`__GLìGëProcAddªss
("glBö‹mÆ3sEXT"))!=0Ë
nLöked
++;

6850 i‡((
pglBö‹mÆ3svEXT
 = (
PFNGLBINORMAL3SVEXTPROC
Ë
	`__GLìGëProcAddªss
("glBö‹mÆ3svEXT"))!=0Ë
nLöked
++;

6851 i‡((
pglT™gítPoöãrEXT
 = (
PFNGLTANGENTPOINTEREXTPROC
Ë
	`__GLìGëProcAddªss
("glT™gítPoöãrEXT"))!=0Ë
nLöked
++;

6852 i‡((
pglBö‹mÆPoöãrEXT
 = (
PFNGLBINORMALPOINTEREXTPROC
Ë
	`__GLìGëProcAddªss
("glBö‹mÆPoöãrEXT"))!=0Ë
nLöked
++;

6854 i‡(
nLöked
==22Ë 
GLEE_LINK_COMPLETE
;

6855 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6856  
GLEE_LINK_PARTIAL
;

6857 
	}
}

6859 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_ív_comböe
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6861 
GLuöt
 
	$__GLìLök_GL_APPLE_•ecuœr_ve˘‹
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6863 
GLuöt
 
	$__GLìLök_GL_APPLE_å™sf‹m_höt
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6865 
GLuöt
 
	$__GLìLök_GL_SGIX_fog_sˇÀ
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6867 
GLuöt
 
	$__GLìLök_GL_SUNX_c⁄°™t_d©a
()

6869 
GLöt
 
nLöked
=0;

6870 #ifde‡
__GLEE_GL_SUNX_c⁄°™t_d©a


6871 i‡((
pglFöishTextuªSUNX
 = (
PFNGLFINISHTEXTURESUNXPROC
Ë
	`__GLìGëProcAddªss
("glFöishTextuªSUNX"))!=0Ë
nLöked
++;

6873 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6874 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6875  
GLEE_LINK_PARTIAL
;

6876 
	}
}

6878 
GLuöt
 
	$__GLìLök_GL_SUN_globÆ_Æpha
()

6880 
GLöt
 
nLöked
=0;

6881 #ifde‡
__GLEE_GL_SUN_globÆ_Æpha


6882 i‡((
pglGlobÆAÕhaFa˘‹bSUN
 = (
PFNGLGLOBALALPHAFACTORBSUNPROC
Ë
	`__GLìGëProcAddªss
("glGlobÆAÕhaFa˘‹bSUN"))!=0Ë
nLöked
++;

6883 i‡((
pglGlobÆAÕhaFa˘‹sSUN
 = (
PFNGLGLOBALALPHAFACTORSSUNPROC
Ë
	`__GLìGëProcAddªss
("glGlobÆAÕhaFa˘‹sSUN"))!=0Ë
nLöked
++;

6884 i‡((
pglGlobÆAÕhaFa˘‹iSUN
 = (
PFNGLGLOBALALPHAFACTORISUNPROC
Ë
	`__GLìGëProcAddªss
("glGlobÆAÕhaFa˘‹iSUN"))!=0Ë
nLöked
++;

6885 i‡((
pglGlobÆAÕhaFa˘‹fSUN
 = (
PFNGLGLOBALALPHAFACTORFSUNPROC
Ë
	`__GLìGëProcAddªss
("glGlobÆAÕhaFa˘‹fSUN"))!=0Ë
nLöked
++;

6886 i‡((
pglGlobÆAÕhaFa˘‹dSUN
 = (
PFNGLGLOBALALPHAFACTORDSUNPROC
Ë
	`__GLìGëProcAddªss
("glGlobÆAÕhaFa˘‹dSUN"))!=0Ë
nLöked
++;

6887 i‡((
pglGlobÆAÕhaFa˘‹ubSUN
 = (
PFNGLGLOBALALPHAFACTORUBSUNPROC
Ë
	`__GLìGëProcAddªss
("glGlobÆAÕhaFa˘‹ubSUN"))!=0Ë
nLöked
++;

6888 i‡((
pglGlobÆAÕhaFa˘‹usSUN
 = (
PFNGLGLOBALALPHAFACTORUSSUNPROC
Ë
	`__GLìGëProcAddªss
("glGlobÆAÕhaFa˘‹usSUN"))!=0Ë
nLöked
++;

6889 i‡((
pglGlobÆAÕhaFa˘‹uiSUN
 = (
PFNGLGLOBALALPHAFACTORUISUNPROC
Ë
	`__GLìGëProcAddªss
("glGlobÆAÕhaFa˘‹uiSUN"))!=0Ë
nLöked
++;

6891 i‡(
nLöked
==8Ë 
GLEE_LINK_COMPLETE
;

6892 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6893  
GLEE_LINK_PARTIAL
;

6894 
	}
}

6896 
GLuöt
 
	$__GLìLök_GL_SUN_åüngÀ_li°
()

6898 
GLöt
 
nLöked
=0;

6899 #ifde‡
__GLEE_GL_SUN_åüngÀ_li°


6900 i‡((
pglRïœ˚mítCodeuiSUN
 = (
PFNGLREPLACEMENTCODEUISUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiSUN"))!=0Ë
nLöked
++;

6901 i‡((
pglRïœ˚mítCodeusSUN
 = (
PFNGLREPLACEMENTCODEUSSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeusSUN"))!=0Ë
nLöked
++;

6902 i‡((
pglRïœ˚mítCodeubSUN
 = (
PFNGLREPLACEMENTCODEUBSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeubSUN"))!=0Ë
nLöked
++;

6903 i‡((
pglRïœ˚mítCodeuivSUN
 = (
PFNGLREPLACEMENTCODEUIVSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuivSUN"))!=0Ë
nLöked
++;

6904 i‡((
pglRïœ˚mítCodeusvSUN
 = (
PFNGLREPLACEMENTCODEUSVSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeusvSUN"))!=0Ë
nLöked
++;

6905 i‡((
pglRïœ˚mítCodeubvSUN
 = (
PFNGLREPLACEMENTCODEUBVSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeubvSUN"))!=0Ë
nLöked
++;

6906 i‡((
pglRïœ˚mítCodePoöãrSUN
 = (
PFNGLREPLACEMENTCODEPOINTERSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodePoöãrSUN"))!=0Ë
nLöked
++;

6908 i‡(
nLöked
==7Ë 
GLEE_LINK_COMPLETE
;

6909 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6910  
GLEE_LINK_PARTIAL
;

6911 
	}
}

6913 
GLuöt
 
	$__GLìLök_GL_SUN_vîãx
()

6915 
GLöt
 
nLöked
=0;

6916 #ifde‡
__GLEE_GL_SUN_vîãx


6917 i‡((
pglCﬁ‹4ubVîãx2fSUN
 = (
PFNGLCOLOR4UBVERTEX2FSUNPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹4ubVîãx2fSUN"))!=0Ë
nLöked
++;

6918 i‡((
pglCﬁ‹4ubVîãx2fvSUN
 = (
PFNGLCOLOR4UBVERTEX2FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹4ubVîãx2fvSUN"))!=0Ë
nLöked
++;

6919 i‡((
pglCﬁ‹4ubVîãx3fSUN
 = (
PFNGLCOLOR4UBVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹4ubVîãx3fSUN"))!=0Ë
nLöked
++;

6920 i‡((
pglCﬁ‹4ubVîãx3fvSUN
 = (
PFNGLCOLOR4UBVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹4ubVîãx3fvSUN"))!=0Ë
nLöked
++;

6921 i‡((
pglCﬁ‹3fVîãx3fSUN
 = (
PFNGLCOLOR3FVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹3fVîãx3fSUN"))!=0Ë
nLöked
++;

6922 i‡((
pglCﬁ‹3fVîãx3fvSUN
 = (
PFNGLCOLOR3FVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹3fVîãx3fvSUN"))!=0Ë
nLöked
++;

6923 i‡((
pglN‹mÆ3fVîãx3fSUN
 = (
PFNGLNORMAL3FVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆ3fVîãx3fSUN"))!=0Ë
nLöked
++;

6924 i‡((
pglN‹mÆ3fVîãx3fvSUN
 = (
PFNGLNORMAL3FVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆ3fVîãx3fvSUN"))!=0Ë
nLöked
++;

6925 i‡((
pglCﬁ‹4fN‹mÆ3fVîãx3fSUN
 = (
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹4fN‹mÆ3fVîãx3fSUN"))!=0Ë
nLöked
++;

6926 i‡((
pglCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 = (
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹4fN‹mÆ3fVîãx3fvSUN"))!=0Ë
nLöked
++;

6927 i‡((
pglTexCo‹d2fVîãx3fSUN
 = (
PFNGLTEXCOORD2FVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d2fVîãx3fSUN"))!=0Ë
nLöked
++;

6928 i‡((
pglTexCo‹d2fVîãx3fvSUN
 = (
PFNGLTEXCOORD2FVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d2fVîãx3fvSUN"))!=0Ë
nLöked
++;

6929 i‡((
pglTexCo‹d4fVîãx4fSUN
 = (
PFNGLTEXCOORD4FVERTEX4FSUNPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d4fVîãx4fSUN"))!=0Ë
nLöked
++;

6930 i‡((
pglTexCo‹d4fVîãx4fvSUN
 = (
PFNGLTEXCOORD4FVERTEX4FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d4fVîãx4fvSUN"))!=0Ë
nLöked
++;

6931 i‡((
pglTexCo‹d2fCﬁ‹4ubVîãx3fSUN
 = (
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d2fCﬁ‹4ubVîãx3fSUN"))!=0Ë
nLöked
++;

6932 i‡((
pglTexCo‹d2fCﬁ‹4ubVîãx3fvSUN
 = (
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d2fCﬁ‹4ubVîãx3fvSUN"))!=0Ë
nLöked
++;

6933 i‡((
pglTexCo‹d2fCﬁ‹3fVîãx3fSUN
 = (
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d2fCﬁ‹3fVîãx3fSUN"))!=0Ë
nLöked
++;

6934 i‡((
pglTexCo‹d2fCﬁ‹3fVîãx3fvSUN
 = (
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d2fCﬁ‹3fVîãx3fvSUN"))!=0Ë
nLöked
++;

6935 i‡((
pglTexCo‹d2fN‹mÆ3fVîãx3fSUN
 = (
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d2fN‹mÆ3fVîãx3fSUN"))!=0Ë
nLöked
++;

6936 i‡((
pglTexCo‹d2fN‹mÆ3fVîãx3fvSUN
 = (
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d2fN‹mÆ3fVîãx3fvSUN"))!=0Ë
nLöked
++;

6937 i‡((
pglTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
 = (
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN"))!=0Ë
nLöked
++;

6938 i‡((
pglTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 = (
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN"))!=0Ë
nLöked
++;

6939 i‡((
pglTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fSUN
 = (
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fSUN"))!=0Ë
nLöked
++;

6940 i‡((
pglTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fvSUN
 = (
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fvSUN"))!=0Ë
nLöked
++;

6941 i‡((
pglRïœ˚mítCodeuiVîãx3fSUN
 = (
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiVîãx3fSUN"))!=0Ë
nLöked
++;

6942 i‡((
pglRïœ˚mítCodeuiVîãx3fvSUN
 = (
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiVîãx3fvSUN"))!=0Ë
nLöked
++;

6943 i‡((
pglRïœ˚mítCodeuiCﬁ‹4ubVîãx3fSUN
 = (
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiCﬁ‹4ubVîãx3fSUN"))!=0Ë
nLöked
++;

6944 i‡((
pglRïœ˚mítCodeuiCﬁ‹4ubVîãx3fvSUN
 = (
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiCﬁ‹4ubVîãx3fvSUN"))!=0Ë
nLöked
++;

6945 i‡((
pglRïœ˚mítCodeuiCﬁ‹3fVîãx3fSUN
 = (
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiCﬁ‹3fVîãx3fSUN"))!=0Ë
nLöked
++;

6946 i‡((
pglRïœ˚mítCodeuiCﬁ‹3fVîãx3fvSUN
 = (
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiCﬁ‹3fVîãx3fvSUN"))!=0Ë
nLöked
++;

6947 i‡((
pglRïœ˚mítCodeuiN‹mÆ3fVîãx3fSUN
 = (
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiN‹mÆ3fVîãx3fSUN"))!=0Ë
nLöked
++;

6948 i‡((
pglRïœ˚mítCodeuiN‹mÆ3fVîãx3fvSUN
 = (
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiN‹mÆ3fVîãx3fvSUN"))!=0Ë
nLöked
++;

6949 i‡((
pglRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fSUN
 = (
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fSUN"))!=0Ë
nLöked
++;

6950 i‡((
pglRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 = (
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fvSUN"))!=0Ë
nLöked
++;

6951 i‡((
pglRïœ˚mítCodeuiTexCo‹d2fVîãx3fSUN
 = (
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiTexCo‹d2fVîãx3fSUN"))!=0Ë
nLöked
++;

6952 i‡((
pglRïœ˚mítCodeuiTexCo‹d2fVîãx3fvSUN
 = (
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiTexCo‹d2fVîãx3fvSUN"))!=0Ë
nLöked
++;

6953 i‡((
pglRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fSUN
 = (
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fSUN"))!=0Ë
nLöked
++;

6954 i‡((
pglRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fvSUN
 = (
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fvSUN"))!=0Ë
nLöked
++;

6955 i‡((
pglRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
 = (
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN"))!=0Ë
nLöked
++;

6956 i‡((
pglRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 = (
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
Ë
	`__GLìGëProcAddªss
("glRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN"))!=0Ë
nLöked
++;

6958 i‡(
nLöked
==40Ë 
GLEE_LINK_COMPLETE
;

6959 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6960  
GLEE_LINK_PARTIAL
;

6961 
	}
}

6963 
GLuöt
 
	$__GLìLök_GL_EXT_bÀnd_func_£∑øã
()

6965 
GLöt
 
nLöked
=0;

6966 #ifde‡
__GLEE_GL_EXT_bÀnd_func_£∑øã


6967 i‡((
pglBÀndFuncSï¨©eEXT
 = (
PFNGLBLENDFUNCSEPARATEEXTPROC
Ë
	`__GLìGëProcAddªss
("glBÀndFuncSï¨©eEXT"))!=0Ë
nLöked
++;

6969 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

6970 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

6971  
GLEE_LINK_PARTIAL
;

6972 
	}
}

6974 
GLuöt
 
	$__GLìLök_GL_INGR_cﬁ‹_˛amp
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6976 
GLuöt
 
	$__GLìLök_GL_INGR_öãæa˚_ªad
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6978 
GLuöt
 
	$__GLìLök_GL_EXT_°ícû_wøp
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6980 
GLuöt
 
	$__GLìLök_GL_EXT_422_pixñs
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6982 
GLuöt
 
	$__GLìLök_GL_NV_ãxgí_ªÊe˘i⁄
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6984 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_cube_m≠
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6986 
GLuöt
 
	$__GLìLök_GL_SUN_c⁄vﬁuti⁄_b‹dî_modes
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6988 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_ív_add
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6990 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_lod_büs
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6992 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_fûãr_™isŸr›ic
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

6994 
GLuöt
 
	$__GLìLök_GL_EXT_vîãx_weightög
()

6996 
GLöt
 
nLöked
=0;

6997 #ifde‡
__GLEE_GL_EXT_vîãx_weightög


6998 i‡((
pglVîãxWeightfEXT
 = (
PFNGLVERTEXWEIGHTFEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxWeightfEXT"))!=0Ë
nLöked
++;

6999 i‡((
pglVîãxWeightfvEXT
 = (
PFNGLVERTEXWEIGHTFVEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxWeightfvEXT"))!=0Ë
nLöked
++;

7000 i‡((
pglVîãxWeightPoöãrEXT
 = (
PFNGLVERTEXWEIGHTPOINTEREXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxWeightPoöãrEXT"))!=0Ë
nLöked
++;

7002 i‡(
nLöked
==3Ë 
GLEE_LINK_COMPLETE
;

7003 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7004  
GLEE_LINK_PARTIAL
;

7005 
	}
}

7007 
GLuöt
 
	$__GLìLök_GL_NV_light_max_exp⁄ít
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7009 
GLuöt
 
	$__GLìLök_GL_NV_vîãx_¨øy_ønge
()

7011 
GLöt
 
nLöked
=0;

7012 #ifde‡
__GLEE_GL_NV_vîãx_¨øy_ønge


7013 i‡((
pglFlushVîãxAºayR™geNV
 = (
PFNGLFLUSHVERTEXARRAYRANGENVPROC
Ë
	`__GLìGëProcAddªss
("glFlushVîãxAºayR™geNV"))!=0Ë
nLöked
++;

7014 i‡((
pglVîãxAºayR™geNV
 = (
PFNGLVERTEXARRAYRANGENVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAºayR™geNV"))!=0Ë
nLöked
++;

7016 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

7017 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7018  
GLEE_LINK_PARTIAL
;

7019 
	}
}

7021 
GLuöt
 
	$__GLìLök_GL_NV_ªgi°î_comböîs
()

7023 
GLöt
 
nLöked
=0;

7024 #ifde‡
__GLEE_GL_NV_ªgi°î_comböîs


7025 i‡((
pglComböîP¨amëîfvNV
 = (
PFNGLCOMBINERPARAMETERFVNVPROC
Ë
	`__GLìGëProcAddªss
("glComböîP¨amëîfvNV"))!=0Ë
nLöked
++;

7026 i‡((
pglComböîP¨amëîfNV
 = (
PFNGLCOMBINERPARAMETERFNVPROC
Ë
	`__GLìGëProcAddªss
("glComböîP¨amëîfNV"))!=0Ë
nLöked
++;

7027 i‡((
pglComböîP¨amëîivNV
 = (
PFNGLCOMBINERPARAMETERIVNVPROC
Ë
	`__GLìGëProcAddªss
("glComböîP¨amëîivNV"))!=0Ë
nLöked
++;

7028 i‡((
pglComböîP¨amëîiNV
 = (
PFNGLCOMBINERPARAMETERINVPROC
Ë
	`__GLìGëProcAddªss
("glComböîP¨amëîiNV"))!=0Ë
nLöked
++;

7029 i‡((
pglComböîI≈utNV
 = (
PFNGLCOMBINERINPUTNVPROC
Ë
	`__GLìGëProcAddªss
("glComböîI≈utNV"))!=0Ë
nLöked
++;

7030 i‡((
pglComböîOuçutNV
 = (
PFNGLCOMBINEROUTPUTNVPROC
Ë
	`__GLìGëProcAddªss
("glComböîOuçutNV"))!=0Ë
nLöked
++;

7031 i‡((
pglFöÆComböîI≈utNV
 = (
PFNGLFINALCOMBINERINPUTNVPROC
Ë
	`__GLìGëProcAddªss
("glFöÆComböîI≈utNV"))!=0Ë
nLöked
++;

7032 i‡((
pglGëComböîI≈utP¨amëîfvNV
 = (
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëComböîI≈utP¨amëîfvNV"))!=0Ë
nLöked
++;

7033 i‡((
pglGëComböîI≈utP¨amëîivNV
 = (
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëComböîI≈utP¨amëîivNV"))!=0Ë
nLöked
++;

7034 i‡((
pglGëComböîOuçutP¨amëîfvNV
 = (
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëComböîOuçutP¨amëîfvNV"))!=0Ë
nLöked
++;

7035 i‡((
pglGëComböîOuçutP¨amëîivNV
 = (
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëComböîOuçutP¨amëîivNV"))!=0Ë
nLöked
++;

7036 i‡((
pglGëFöÆComböîI≈utP¨amëîfvNV
 = (
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëFöÆComböîI≈utP¨amëîfvNV"))!=0Ë
nLöked
++;

7037 i‡((
pglGëFöÆComböîI≈utP¨amëîivNV
 = (
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëFöÆComböîI≈utP¨amëîivNV"))!=0Ë
nLöked
++;

7039 i‡(
nLöked
==13Ë 
GLEE_LINK_COMPLETE
;

7040 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7041  
GLEE_LINK_PARTIAL
;

7042 
	}
}

7044 
GLuöt
 
	$__GLìLök_GL_NV_fog_di°™˚
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7046 
GLuöt
 
	$__GLìLök_GL_NV_ãxgí_emboss
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7048 
GLuöt
 
	$__GLìLök_GL_NV_bÀnd_squ¨e
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7050 
GLuöt
 
	$__GLìLök_GL_NV_ãxtuª_ív_comböe4
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7052 
GLuöt
 
	$__GLìLök_GL_MESA_ªsize_buf„rs
()

7054 
GLöt
 
nLöked
=0;

7055 #ifde‡
__GLEE_GL_MESA_ªsize_buf„rs


7056 i‡((
pglResizeBuf„rsMESA
 = (
PFNGLRESIZEBUFFERSMESAPROC
Ë
	`__GLìGëProcAddªss
("glResizeBuf„rsMESA"))!=0Ë
nLöked
++;

7058 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

7059 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7060  
GLEE_LINK_PARTIAL
;

7061 
	}
}

7063 
GLuöt
 
	$__GLìLök_GL_MESA_wödow_pos
()

7065 
GLöt
 
nLöked
=0;

7066 #ifde‡
__GLEE_GL_MESA_wödow_pos


7067 i‡((
pglWödowPos2dMESA
 = (
PFNGLWINDOWPOS2DMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2dMESA"))!=0Ë
nLöked
++;

7068 i‡((
pglWödowPos2dvMESA
 = (
PFNGLWINDOWPOS2DVMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2dvMESA"))!=0Ë
nLöked
++;

7069 i‡((
pglWödowPos2fMESA
 = (
PFNGLWINDOWPOS2FMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2fMESA"))!=0Ë
nLöked
++;

7070 i‡((
pglWödowPos2fvMESA
 = (
PFNGLWINDOWPOS2FVMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2fvMESA"))!=0Ë
nLöked
++;

7071 i‡((
pglWödowPos2iMESA
 = (
PFNGLWINDOWPOS2IMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2iMESA"))!=0Ë
nLöked
++;

7072 i‡((
pglWödowPos2ivMESA
 = (
PFNGLWINDOWPOS2IVMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2ivMESA"))!=0Ë
nLöked
++;

7073 i‡((
pglWödowPos2sMESA
 = (
PFNGLWINDOWPOS2SMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2sMESA"))!=0Ë
nLöked
++;

7074 i‡((
pglWödowPos2svMESA
 = (
PFNGLWINDOWPOS2SVMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos2svMESA"))!=0Ë
nLöked
++;

7075 i‡((
pglWödowPos3dMESA
 = (
PFNGLWINDOWPOS3DMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3dMESA"))!=0Ë
nLöked
++;

7076 i‡((
pglWödowPos3dvMESA
 = (
PFNGLWINDOWPOS3DVMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3dvMESA"))!=0Ë
nLöked
++;

7077 i‡((
pglWödowPos3fMESA
 = (
PFNGLWINDOWPOS3FMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3fMESA"))!=0Ë
nLöked
++;

7078 i‡((
pglWödowPos3fvMESA
 = (
PFNGLWINDOWPOS3FVMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3fvMESA"))!=0Ë
nLöked
++;

7079 i‡((
pglWödowPos3iMESA
 = (
PFNGLWINDOWPOS3IMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3iMESA"))!=0Ë
nLöked
++;

7080 i‡((
pglWödowPos3ivMESA
 = (
PFNGLWINDOWPOS3IVMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3ivMESA"))!=0Ë
nLöked
++;

7081 i‡((
pglWödowPos3sMESA
 = (
PFNGLWINDOWPOS3SMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3sMESA"))!=0Ë
nLöked
++;

7082 i‡((
pglWödowPos3svMESA
 = (
PFNGLWINDOWPOS3SVMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos3svMESA"))!=0Ë
nLöked
++;

7083 i‡((
pglWödowPos4dMESA
 = (
PFNGLWINDOWPOS4DMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos4dMESA"))!=0Ë
nLöked
++;

7084 i‡((
pglWödowPos4dvMESA
 = (
PFNGLWINDOWPOS4DVMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos4dvMESA"))!=0Ë
nLöked
++;

7085 i‡((
pglWödowPos4fMESA
 = (
PFNGLWINDOWPOS4FMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos4fMESA"))!=0Ë
nLöked
++;

7086 i‡((
pglWödowPos4fvMESA
 = (
PFNGLWINDOWPOS4FVMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos4fvMESA"))!=0Ë
nLöked
++;

7087 i‡((
pglWödowPos4iMESA
 = (
PFNGLWINDOWPOS4IMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos4iMESA"))!=0Ë
nLöked
++;

7088 i‡((
pglWödowPos4ivMESA
 = (
PFNGLWINDOWPOS4IVMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos4ivMESA"))!=0Ë
nLöked
++;

7089 i‡((
pglWödowPos4sMESA
 = (
PFNGLWINDOWPOS4SMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos4sMESA"))!=0Ë
nLöked
++;

7090 i‡((
pglWödowPos4svMESA
 = (
PFNGLWINDOWPOS4SVMESAPROC
Ë
	`__GLìGëProcAddªss
("glWödowPos4svMESA"))!=0Ë
nLöked
++;

7092 i‡(
nLöked
==24Ë 
GLEE_LINK_COMPLETE
;

7093 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7094  
GLEE_LINK_PARTIAL
;

7095 
	}
}

7097 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_com¥essi⁄_s3tc
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7099 
GLuöt
 
	$__GLìLök_GL_IBM_cuŒ_vîãx
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7101 
GLuöt
 
	$__GLìLök_GL_IBM_mu…imode_døw_¨øys
()

7103 
GLöt
 
nLöked
=0;

7104 #ifde‡
__GLEE_GL_IBM_mu…imode_døw_¨øys


7105 i‡((
pglMu…iModeDøwAºaysIBM
 = (
PFNGLMULTIMODEDRAWARRAYSIBMPROC
Ë
	`__GLìGëProcAddªss
("glMu…iModeDøwAºaysIBM"))!=0Ë
nLöked
++;

7106 i‡((
pglMu…iModeDøwEÀmítsIBM
 = (
PFNGLMULTIMODEDRAWELEMENTSIBMPROC
Ë
	`__GLìGëProcAddªss
("glMu…iModeDøwEÀmítsIBM"))!=0Ë
nLöked
++;

7108 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

7109 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7110  
GLEE_LINK_PARTIAL
;

7111 
	}
}

7113 
GLuöt
 
	$__GLìLök_GL_IBM_vîãx_¨øy_li°s
()

7115 
GLöt
 
nLöked
=0;

7116 #ifde‡
__GLEE_GL_IBM_vîãx_¨øy_li°s


7117 i‡((
pglCﬁ‹PoöãrLi°IBM
 = (
PFNGLCOLORPOINTERLISTIBMPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹PoöãrLi°IBM"))!=0Ë
nLöked
++;

7118 i‡((
pglSec⁄d¨yCﬁ‹PoöãrLi°IBM
 = (
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹PoöãrLi°IBM"))!=0Ë
nLöked
++;

7119 i‡((
pglEdgeFœgPoöãrLi°IBM
 = (
PFNGLEDGEFLAGPOINTERLISTIBMPROC
Ë
	`__GLìGëProcAddªss
("glEdgeFœgPoöãrLi°IBM"))!=0Ë
nLöked
++;

7120 i‡((
pglFogCo‹dPoöãrLi°IBM
 = (
PFNGLFOGCOORDPOINTERLISTIBMPROC
Ë
	`__GLìGëProcAddªss
("glFogCo‹dPoöãrLi°IBM"))!=0Ë
nLöked
++;

7121 i‡((
pglIndexPoöãrLi°IBM
 = (
PFNGLINDEXPOINTERLISTIBMPROC
Ë
	`__GLìGëProcAddªss
("glIndexPoöãrLi°IBM"))!=0Ë
nLöked
++;

7122 i‡((
pglN‹mÆPoöãrLi°IBM
 = (
PFNGLNORMALPOINTERLISTIBMPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆPoöãrLi°IBM"))!=0Ë
nLöked
++;

7123 i‡((
pglTexCo‹dPoöãrLi°IBM
 = (
PFNGLTEXCOORDPOINTERLISTIBMPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹dPoöãrLi°IBM"))!=0Ë
nLöked
++;

7124 i‡((
pglVîãxPoöãrLi°IBM
 = (
PFNGLVERTEXPOINTERLISTIBMPROC
Ë
	`__GLìGëProcAddªss
("glVîãxPoöãrLi°IBM"))!=0Ë
nLöked
++;

7126 i‡(
nLöked
==8Ë 
GLEE_LINK_COMPLETE
;

7127 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7128  
GLEE_LINK_PARTIAL
;

7129 
	}
}

7131 
GLuöt
 
	$__GLìLök_GL_SGIX_subßm∂e
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7133 
GLuöt
 
	$__GLìLök_GL_SGIX_y¸cb_subßm∂e
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7135 
GLuöt
 
	$__GLìLök_GL_SGIX_y¸cba
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7137 
GLuöt
 
	$__GLìLök_GL_SGI_dïth_∑ss_ö°rumít
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7139 
GLuöt
 
	$__GLìLök_GL_3DFX_ãxtuª_com¥essi⁄_FXT1
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7141 
GLuöt
 
	$__GLìLök_GL_3DFX_mu…ißm∂e
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7143 
GLuöt
 
	$__GLìLök_GL_3DFX_tbuf„r
()

7145 
GLöt
 
nLöked
=0;

7146 #ifde‡
__GLEE_GL_3DFX_tbuf„r


7147 i‡((
pglTbuf„rMask3DFX
 = (
PFNGLTBUFFERMASK3DFXPROC
Ë
	`__GLìGëProcAddªss
("glTbuf„rMask3DFX"))!=0Ë
nLöked
++;

7149 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

7150 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7151  
GLEE_LINK_PARTIAL
;

7152 
	}
}

7154 
GLuöt
 
	$__GLìLök_GL_EXT_mu…ißm∂e
()

7156 
GLöt
 
nLöked
=0;

7157 #ifde‡
__GLEE_GL_EXT_mu…ißm∂e


7158 i‡((
pglSam∂eMaskEXT
 = (
PFNGLSAMPLEMASKEXTPROC
Ë
	`__GLìGëProcAddªss
("glSam∂eMaskEXT"))!=0Ë
nLöked
++;

7159 i‡((
pglSam∂eP©ã∫EXT
 = (
PFNGLSAMPLEPATTERNEXTPROC
Ë
	`__GLìGëProcAddªss
("glSam∂eP©ã∫EXT"))!=0Ë
nLöked
++;

7161 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

7162 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7163  
GLEE_LINK_PARTIAL
;

7164 
	}
}

7166 
GLuöt
 
	$__GLìLök_GL_SGIX_vîãx_¥e˛ù
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7168 
GLuöt
 
	$__GLìLök_GL_SGIX_c⁄vﬁuti⁄_accuøcy
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7170 
GLuöt
 
	$__GLìLök_GL_SGIX_ªßm∂e
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7172 
GLuöt
 
	$__GLìLök_GL_SGIS_poöt_löe_ãxgí
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7174 
GLuöt
 
	$__GLìLök_GL_SGIS_ãxtuª_cﬁ‹_mask
()

7176 
GLöt
 
nLöked
=0;

7177 #ifde‡
__GLEE_GL_SGIS_ãxtuª_cﬁ‹_mask


7178 i‡((
pglTextuªCﬁ‹MaskSGIS
 = (
PFNGLTEXTURECOLORMASKSGISPROC
Ë
	`__GLìGëProcAddªss
("glTextuªCﬁ‹MaskSGIS"))!=0Ë
nLöked
++;

7180 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

7181 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7182  
GLEE_LINK_PARTIAL
;

7183 
	}
}

7185 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_ív_dŸ3
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7187 
GLuöt
 
	$__GLìLök_GL_ATI_ãxtuª_múr‹_⁄˚
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7189 
GLuöt
 
	$__GLìLök_GL_NV_„n˚
()

7191 
GLöt
 
nLöked
=0;

7192 #ifde‡
__GLEE_GL_NV_„n˚


7193 i‡((
pglDñëeFí˚sNV
 = (
PFNGLDELETEFENCESNVPROC
Ë
	`__GLìGëProcAddªss
("glDñëeFí˚sNV"))!=0Ë
nLöked
++;

7194 i‡((
pglGíFí˚sNV
 = (
PFNGLGENFENCESNVPROC
Ë
	`__GLìGëProcAddªss
("glGíFí˚sNV"))!=0Ë
nLöked
++;

7195 i‡((
pglIsFí˚NV
 = (
PFNGLISFENCENVPROC
Ë
	`__GLìGëProcAddªss
("glIsFí˚NV"))!=0Ë
nLöked
++;

7196 i‡((
pglTe°Fí˚NV
 = (
PFNGLTESTFENCENVPROC
Ë
	`__GLìGëProcAddªss
("glTe°Fí˚NV"))!=0Ë
nLöked
++;

7197 i‡((
pglGëFí˚ivNV
 = (
PFNGLGETFENCEIVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëFí˚ivNV"))!=0Ë
nLöked
++;

7198 i‡((
pglFöishFí˚NV
 = (
PFNGLFINISHFENCENVPROC
Ë
	`__GLìGëProcAddªss
("glFöishFí˚NV"))!=0Ë
nLöked
++;

7199 i‡((
pglSëFí˚NV
 = (
PFNGLSETFENCENVPROC
Ë
	`__GLìGëProcAddªss
("glSëFí˚NV"))!=0Ë
nLöked
++;

7201 i‡(
nLöked
==7Ë 
GLEE_LINK_COMPLETE
;

7202 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7203  
GLEE_LINK_PARTIAL
;

7204 
	}
}

7206 
GLuöt
 
	$__GLìLök_GL_IBM_ãxtuª_múr‹ed_ª≥©
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7208 
GLuöt
 
	$__GLìLök_GL_NV_evÆu©‹s
()

7210 
GLöt
 
nLöked
=0;

7211 #ifde‡
__GLEE_GL_NV_evÆu©‹s


7212 i‡((
pglM≠C⁄åﬁPoötsNV
 = (
PFNGLMAPCONTROLPOINTSNVPROC
Ë
	`__GLìGëProcAddªss
("glM≠C⁄åﬁPoötsNV"))!=0Ë
nLöked
++;

7213 i‡((
pglM≠P¨amëîivNV
 = (
PFNGLMAPPARAMETERIVNVPROC
Ë
	`__GLìGëProcAddªss
("glM≠P¨amëîivNV"))!=0Ë
nLöked
++;

7214 i‡((
pglM≠P¨amëîfvNV
 = (
PFNGLMAPPARAMETERFVNVPROC
Ë
	`__GLìGëProcAddªss
("glM≠P¨amëîfvNV"))!=0Ë
nLöked
++;

7215 i‡((
pglGëM≠C⁄åﬁPoötsNV
 = (
PFNGLGETMAPCONTROLPOINTSNVPROC
Ë
	`__GLìGëProcAddªss
("glGëM≠C⁄åﬁPoötsNV"))!=0Ë
nLöked
++;

7216 i‡((
pglGëM≠P¨amëîivNV
 = (
PFNGLGETMAPPARAMETERIVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëM≠P¨amëîivNV"))!=0Ë
nLöked
++;

7217 i‡((
pglGëM≠P¨amëîfvNV
 = (
PFNGLGETMAPPARAMETERFVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëM≠P¨amëîfvNV"))!=0Ë
nLöked
++;

7218 i‡((
pglGëM≠AâribP¨amëîivNV
 = (
PFNGLGETMAPATTRIBPARAMETERIVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëM≠AâribP¨amëîivNV"))!=0Ë
nLöked
++;

7219 i‡((
pglGëM≠AâribP¨amëîfvNV
 = (
PFNGLGETMAPATTRIBPARAMETERFVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëM≠AâribP¨amëîfvNV"))!=0Ë
nLöked
++;

7220 i‡((
pglEvÆM≠sNV
 = (
PFNGLEVALMAPSNVPROC
Ë
	`__GLìGëProcAddªss
("glEvÆM≠sNV"))!=0Ë
nLöked
++;

7222 i‡(
nLöked
==9Ë 
GLEE_LINK_COMPLETE
;

7223 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7224  
GLEE_LINK_PARTIAL
;

7225 
	}
}

7227 
GLuöt
 
	$__GLìLök_GL_NV_∑cked_dïth_°ícû
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7229 
GLuöt
 
	$__GLìLök_GL_NV_ªgi°î_comböîs2
()

7231 
GLöt
 
nLöked
=0;

7232 #ifde‡
__GLEE_GL_NV_ªgi°î_comböîs2


7233 i‡((
pglComböîSègeP¨amëîfvNV
 = (
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC
Ë
	`__GLìGëProcAddªss
("glComböîSègeP¨amëîfvNV"))!=0Ë
nLöked
++;

7234 i‡((
pglGëComböîSègeP¨amëîfvNV
 = (
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëComböîSègeP¨amëîfvNV"))!=0Ë
nLöked
++;

7236 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

7237 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7238  
GLEE_LINK_PARTIAL
;

7239 
	}
}

7241 
GLuöt
 
	$__GLìLök_GL_NV_ãxtuª_com¥essi⁄_vtc
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7243 
GLuöt
 
	$__GLìLök_GL_NV_ãxtuª_ª˘™gÀ
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7245 
GLuöt
 
	$__GLìLök_GL_NV_ãxtuª_shadî
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7247 
GLuöt
 
	$__GLìLök_GL_NV_ãxtuª_shadî2
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7249 
GLuöt
 
	$__GLìLök_GL_NV_vîãx_¨øy_ønge2
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7251 
GLuöt
 
	$__GLìLök_GL_NV_vîãx_¥ogøm
()

7253 
GLöt
 
nLöked
=0;

7254 #ifde‡
__GLEE_GL_NV_vîãx_¥ogøm


7255 i‡((
pglAªProgømsResidítNV
 = (
PFNGLAREPROGRAMSRESIDENTNVPROC
Ë
	`__GLìGëProcAddªss
("glAªProgømsResidítNV"))!=0Ë
nLöked
++;

7256 i‡((
pglBödProgømNV
 = (
PFNGLBINDPROGRAMNVPROC
Ë
	`__GLìGëProcAddªss
("glBödProgømNV"))!=0Ë
nLöked
++;

7257 i‡((
pglDñëeProgømsNV
 = (
PFNGLDELETEPROGRAMSNVPROC
Ë
	`__GLìGëProcAddªss
("glDñëeProgømsNV"))!=0Ë
nLöked
++;

7258 i‡((
pglExecuãProgømNV
 = (
PFNGLEXECUTEPROGRAMNVPROC
Ë
	`__GLìGëProcAddªss
("glExecuãProgømNV"))!=0Ë
nLöked
++;

7259 i‡((
pglGíProgømsNV
 = (
PFNGLGENPROGRAMSNVPROC
Ë
	`__GLìGëProcAddªss
("glGíProgømsNV"))!=0Ë
nLöked
++;

7260 i‡((
pglGëProgømP¨amëîdvNV
 = (
PFNGLGETPROGRAMPARAMETERDVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømP¨amëîdvNV"))!=0Ë
nLöked
++;

7261 i‡((
pglGëProgømP¨amëîfvNV
 = (
PFNGLGETPROGRAMPARAMETERFVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømP¨amëîfvNV"))!=0Ë
nLöked
++;

7262 i‡((
pglGëProgømivNV
 = (
PFNGLGETPROGRAMIVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømivNV"))!=0Ë
nLöked
++;

7263 i‡((
pglGëProgømSåögNV
 = (
PFNGLGETPROGRAMSTRINGNVPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømSåögNV"))!=0Ë
nLöked
++;

7264 i‡((
pglGëTøckM©rixivNV
 = (
PFNGLGETTRACKMATRIXIVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëTøckM©rixivNV"))!=0Ë
nLöked
++;

7265 i‡((
pglGëVîãxAâribdvNV
 = (
PFNGLGETVERTEXATTRIBDVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëVîãxAâribdvNV"))!=0Ë
nLöked
++;

7266 i‡((
pglGëVîãxAâribfvNV
 = (
PFNGLGETVERTEXATTRIBFVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëVîãxAâribfvNV"))!=0Ë
nLöked
++;

7267 i‡((
pglGëVîãxAâribivNV
 = (
PFNGLGETVERTEXATTRIBIVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëVîãxAâribivNV"))!=0Ë
nLöked
++;

7268 i‡((
pglGëVîãxAâribPoöãrvNV
 = (
PFNGLGETVERTEXATTRIBPOINTERVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëVîãxAâribPoöãrvNV"))!=0Ë
nLöked
++;

7269 i‡((
pglIsProgømNV
 = (
PFNGLISPROGRAMNVPROC
Ë
	`__GLìGëProcAddªss
("glIsProgømNV"))!=0Ë
nLöked
++;

7270 i‡((
pglLﬂdProgømNV
 = (
PFNGLLOADPROGRAMNVPROC
Ë
	`__GLìGëProcAddªss
("glLﬂdProgømNV"))!=0Ë
nLöked
++;

7271 i‡((
pglProgømP¨amëî4dNV
 = (
PFNGLPROGRAMPARAMETER4DNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømP¨amëî4dNV"))!=0Ë
nLöked
++;

7272 i‡((
pglProgømP¨amëî4dvNV
 = (
PFNGLPROGRAMPARAMETER4DVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømP¨amëî4dvNV"))!=0Ë
nLöked
++;

7273 i‡((
pglProgømP¨amëî4fNV
 = (
PFNGLPROGRAMPARAMETER4FNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømP¨amëî4fNV"))!=0Ë
nLöked
++;

7274 i‡((
pglProgømP¨amëî4fvNV
 = (
PFNGLPROGRAMPARAMETER4FVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømP¨amëî4fvNV"))!=0Ë
nLöked
++;

7275 i‡((
pglProgømP¨amëîs4dvNV
 = (
PFNGLPROGRAMPARAMETERS4DVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømP¨amëîs4dvNV"))!=0Ë
nLöked
++;

7276 i‡((
pglProgømP¨amëîs4fvNV
 = (
PFNGLPROGRAMPARAMETERS4FVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømP¨amëîs4fvNV"))!=0Ë
nLöked
++;

7277 i‡((
pglReque°ResidítProgømsNV
 = (
PFNGLREQUESTRESIDENTPROGRAMSNVPROC
Ë
	`__GLìGëProcAddªss
("glReque°ResidítProgømsNV"))!=0Ë
nLöked
++;

7278 i‡((
pglTøckM©rixNV
 = (
PFNGLTRACKMATRIXNVPROC
Ë
	`__GLìGëProcAddªss
("glTøckM©rixNV"))!=0Ë
nLöked
++;

7279 i‡((
pglVîãxAâribPoöãrNV
 = (
PFNGLVERTEXATTRIBPOINTERNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribPoöãrNV"))!=0Ë
nLöked
++;

7280 i‡((
pglVîãxAârib1dNV
 = (
PFNGLVERTEXATTRIB1DNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1dNV"))!=0Ë
nLöked
++;

7281 i‡((
pglVîãxAârib1dvNV
 = (
PFNGLVERTEXATTRIB1DVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1dvNV"))!=0Ë
nLöked
++;

7282 i‡((
pglVîãxAârib1fNV
 = (
PFNGLVERTEXATTRIB1FNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1fNV"))!=0Ë
nLöked
++;

7283 i‡((
pglVîãxAârib1fvNV
 = (
PFNGLVERTEXATTRIB1FVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1fvNV"))!=0Ë
nLöked
++;

7284 i‡((
pglVîãxAârib1sNV
 = (
PFNGLVERTEXATTRIB1SNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1sNV"))!=0Ë
nLöked
++;

7285 i‡((
pglVîãxAârib1svNV
 = (
PFNGLVERTEXATTRIB1SVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1svNV"))!=0Ë
nLöked
++;

7286 i‡((
pglVîãxAârib2dNV
 = (
PFNGLVERTEXATTRIB2DNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2dNV"))!=0Ë
nLöked
++;

7287 i‡((
pglVîãxAârib2dvNV
 = (
PFNGLVERTEXATTRIB2DVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2dvNV"))!=0Ë
nLöked
++;

7288 i‡((
pglVîãxAârib2fNV
 = (
PFNGLVERTEXATTRIB2FNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2fNV"))!=0Ë
nLöked
++;

7289 i‡((
pglVîãxAârib2fvNV
 = (
PFNGLVERTEXATTRIB2FVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2fvNV"))!=0Ë
nLöked
++;

7290 i‡((
pglVîãxAârib2sNV
 = (
PFNGLVERTEXATTRIB2SNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2sNV"))!=0Ë
nLöked
++;

7291 i‡((
pglVîãxAârib2svNV
 = (
PFNGLVERTEXATTRIB2SVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2svNV"))!=0Ë
nLöked
++;

7292 i‡((
pglVîãxAârib3dNV
 = (
PFNGLVERTEXATTRIB3DNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3dNV"))!=0Ë
nLöked
++;

7293 i‡((
pglVîãxAârib3dvNV
 = (
PFNGLVERTEXATTRIB3DVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3dvNV"))!=0Ë
nLöked
++;

7294 i‡((
pglVîãxAârib3fNV
 = (
PFNGLVERTEXATTRIB3FNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3fNV"))!=0Ë
nLöked
++;

7295 i‡((
pglVîãxAârib3fvNV
 = (
PFNGLVERTEXATTRIB3FVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3fvNV"))!=0Ë
nLöked
++;

7296 i‡((
pglVîãxAârib3sNV
 = (
PFNGLVERTEXATTRIB3SNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3sNV"))!=0Ë
nLöked
++;

7297 i‡((
pglVîãxAârib3svNV
 = (
PFNGLVERTEXATTRIB3SVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3svNV"))!=0Ë
nLöked
++;

7298 i‡((
pglVîãxAârib4dNV
 = (
PFNGLVERTEXATTRIB4DNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4dNV"))!=0Ë
nLöked
++;

7299 i‡((
pglVîãxAârib4dvNV
 = (
PFNGLVERTEXATTRIB4DVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4dvNV"))!=0Ë
nLöked
++;

7300 i‡((
pglVîãxAârib4fNV
 = (
PFNGLVERTEXATTRIB4FNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4fNV"))!=0Ë
nLöked
++;

7301 i‡((
pglVîãxAârib4fvNV
 = (
PFNGLVERTEXATTRIB4FVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4fvNV"))!=0Ë
nLöked
++;

7302 i‡((
pglVîãxAârib4sNV
 = (
PFNGLVERTEXATTRIB4SNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4sNV"))!=0Ë
nLöked
++;

7303 i‡((
pglVîãxAârib4svNV
 = (
PFNGLVERTEXATTRIB4SVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4svNV"))!=0Ë
nLöked
++;

7304 i‡((
pglVîãxAârib4ubNV
 = (
PFNGLVERTEXATTRIB4UBNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4ubNV"))!=0Ë
nLöked
++;

7305 i‡((
pglVîãxAârib4ubvNV
 = (
PFNGLVERTEXATTRIB4UBVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4ubvNV"))!=0Ë
nLöked
++;

7306 i‡((
pglVîãxAâribs1dvNV
 = (
PFNGLVERTEXATTRIBS1DVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs1dvNV"))!=0Ë
nLöked
++;

7307 i‡((
pglVîãxAâribs1fvNV
 = (
PFNGLVERTEXATTRIBS1FVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs1fvNV"))!=0Ë
nLöked
++;

7308 i‡((
pglVîãxAâribs1svNV
 = (
PFNGLVERTEXATTRIBS1SVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs1svNV"))!=0Ë
nLöked
++;

7309 i‡((
pglVîãxAâribs2dvNV
 = (
PFNGLVERTEXATTRIBS2DVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs2dvNV"))!=0Ë
nLöked
++;

7310 i‡((
pglVîãxAâribs2fvNV
 = (
PFNGLVERTEXATTRIBS2FVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs2fvNV"))!=0Ë
nLöked
++;

7311 i‡((
pglVîãxAâribs2svNV
 = (
PFNGLVERTEXATTRIBS2SVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs2svNV"))!=0Ë
nLöked
++;

7312 i‡((
pglVîãxAâribs3dvNV
 = (
PFNGLVERTEXATTRIBS3DVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs3dvNV"))!=0Ë
nLöked
++;

7313 i‡((
pglVîãxAâribs3fvNV
 = (
PFNGLVERTEXATTRIBS3FVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs3fvNV"))!=0Ë
nLöked
++;

7314 i‡((
pglVîãxAâribs3svNV
 = (
PFNGLVERTEXATTRIBS3SVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs3svNV"))!=0Ë
nLöked
++;

7315 i‡((
pglVîãxAâribs4dvNV
 = (
PFNGLVERTEXATTRIBS4DVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs4dvNV"))!=0Ë
nLöked
++;

7316 i‡((
pglVîãxAâribs4fvNV
 = (
PFNGLVERTEXATTRIBS4FVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs4fvNV"))!=0Ë
nLöked
++;

7317 i‡((
pglVîãxAâribs4svNV
 = (
PFNGLVERTEXATTRIBS4SVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs4svNV"))!=0Ë
nLöked
++;

7318 i‡((
pglVîãxAâribs4ubvNV
 = (
PFNGLVERTEXATTRIBS4UBVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs4ubvNV"))!=0Ë
nLöked
++;

7320 i‡(
nLöked
==64Ë 
GLEE_LINK_COMPLETE
;

7321 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7322  
GLEE_LINK_PARTIAL
;

7323 
	}
}

7325 
GLuöt
 
	$__GLìLök_GL_SGIX_ãxtuª_co‹dö©e_˛amp
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7327 
GLuöt
 
	$__GLìLök_GL_SGIX_sˇÀbüs_höt
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7329 
GLuöt
 
	$__GLìLök_GL_OML_öãæa˚
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7331 
GLuöt
 
	$__GLìLök_GL_OML_subßm∂e
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7333 
GLuöt
 
	$__GLìLök_GL_OML_ªßm∂e
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7335 
GLuöt
 
	$__GLìLök_GL_NV_c›y_dïth_to_cﬁ‹
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7337 
GLuöt
 
	$__GLìLök_GL_ATI_ívm≠_bumpm≠
()

7339 
GLöt
 
nLöked
=0;

7340 #ifde‡
__GLEE_GL_ATI_ívm≠_bumpm≠


7341 i‡((
pglTexBumpP¨amëîivATI
 = (
PFNGLTEXBUMPPARAMETERIVATIPROC
Ë
	`__GLìGëProcAddªss
("glTexBumpP¨amëîivATI"))!=0Ë
nLöked
++;

7342 i‡((
pglTexBumpP¨amëîfvATI
 = (
PFNGLTEXBUMPPARAMETERFVATIPROC
Ë
	`__GLìGëProcAddªss
("glTexBumpP¨amëîfvATI"))!=0Ë
nLöked
++;

7343 i‡((
pglGëTexBumpP¨amëîivATI
 = (
PFNGLGETTEXBUMPPARAMETERIVATIPROC
Ë
	`__GLìGëProcAddªss
("glGëTexBumpP¨amëîivATI"))!=0Ë
nLöked
++;

7344 i‡((
pglGëTexBumpP¨amëîfvATI
 = (
PFNGLGETTEXBUMPPARAMETERFVATIPROC
Ë
	`__GLìGëProcAddªss
("glGëTexBumpP¨amëîfvATI"))!=0Ë
nLöked
++;

7346 i‡(
nLöked
==4Ë 
GLEE_LINK_COMPLETE
;

7347 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7348  
GLEE_LINK_PARTIAL
;

7349 
	}
}

7351 
GLuöt
 
	$__GLìLök_GL_ATI_‰agmít_shadî
()

7353 
GLöt
 
nLöked
=0;

7354 #ifde‡
__GLEE_GL_ATI_‰agmít_shadî


7355 i‡((
pglGíFøgmítShadîsATI
 = (
PFNGLGENFRAGMENTSHADERSATIPROC
Ë
	`__GLìGëProcAddªss
("glGíFøgmítShadîsATI"))!=0Ë
nLöked
++;

7356 i‡((
pglBödFøgmítShadîATI
 = (
PFNGLBINDFRAGMENTSHADERATIPROC
Ë
	`__GLìGëProcAddªss
("glBödFøgmítShadîATI"))!=0Ë
nLöked
++;

7357 i‡((
pglDñëeFøgmítShadîATI
 = (
PFNGLDELETEFRAGMENTSHADERATIPROC
Ë
	`__GLìGëProcAddªss
("glDñëeFøgmítShadîATI"))!=0Ë
nLöked
++;

7358 i‡((
pglBegöFøgmítShadîATI
 = (
PFNGLBEGINFRAGMENTSHADERATIPROC
Ë
	`__GLìGëProcAddªss
("glBegöFøgmítShadîATI"))!=0Ë
nLöked
++;

7359 i‡((
pglEndFøgmítShadîATI
 = (
PFNGLENDFRAGMENTSHADERATIPROC
Ë
	`__GLìGëProcAddªss
("glEndFøgmítShadîATI"))!=0Ë
nLöked
++;

7360 i‡((
pglPassTexCo‹dATI
 = (
PFNGLPASSTEXCOORDATIPROC
Ë
	`__GLìGëProcAddªss
("glPassTexCo‹dATI"))!=0Ë
nLöked
++;

7361 i‡((
pglSam∂eM≠ATI
 = (
PFNGLSAMPLEMAPATIPROC
Ë
	`__GLìGëProcAddªss
("glSam∂eM≠ATI"))!=0Ë
nLöked
++;

7362 i‡((
pglCﬁ‹FøgmítOp1ATI
 = (
PFNGLCOLORFRAGMENTOP1ATIPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹FøgmítOp1ATI"))!=0Ë
nLöked
++;

7363 i‡((
pglCﬁ‹FøgmítOp2ATI
 = (
PFNGLCOLORFRAGMENTOP2ATIPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹FøgmítOp2ATI"))!=0Ë
nLöked
++;

7364 i‡((
pglCﬁ‹FøgmítOp3ATI
 = (
PFNGLCOLORFRAGMENTOP3ATIPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹FøgmítOp3ATI"))!=0Ë
nLöked
++;

7365 i‡((
pglAÕhaFøgmítOp1ATI
 = (
PFNGLALPHAFRAGMENTOP1ATIPROC
Ë
	`__GLìGëProcAddªss
("glAÕhaFøgmítOp1ATI"))!=0Ë
nLöked
++;

7366 i‡((
pglAÕhaFøgmítOp2ATI
 = (
PFNGLALPHAFRAGMENTOP2ATIPROC
Ë
	`__GLìGëProcAddªss
("glAÕhaFøgmítOp2ATI"))!=0Ë
nLöked
++;

7367 i‡((
pglAÕhaFøgmítOp3ATI
 = (
PFNGLALPHAFRAGMENTOP3ATIPROC
Ë
	`__GLìGëProcAddªss
("glAÕhaFøgmítOp3ATI"))!=0Ë
nLöked
++;

7368 i‡((
pglSëFøgmítShadîC⁄°™tATI
 = (
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC
Ë
	`__GLìGëProcAddªss
("glSëFøgmítShadîC⁄°™tATI"))!=0Ë
nLöked
++;

7370 i‡(
nLöked
==14Ë 
GLEE_LINK_COMPLETE
;

7371 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7372  
GLEE_LINK_PARTIAL
;

7373 
	}
}

7375 
GLuöt
 
	$__GLìLök_GL_ATI_≤_åüngÀs
()

7377 
GLöt
 
nLöked
=0;

7378 #ifde‡
__GLEE_GL_ATI_≤_åüngÀs


7379 i‡((
pglPNTrüngÀsiATI
 = (
PFNGLPNTRIANGLESIATIPROC
Ë
	`__GLìGëProcAddªss
("glPNTrüngÀsiATI"))!=0Ë
nLöked
++;

7380 i‡((
pglPNTrüngÀsfATI
 = (
PFNGLPNTRIANGLESFATIPROC
Ë
	`__GLìGëProcAddªss
("glPNTrüngÀsfATI"))!=0Ë
nLöked
++;

7382 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

7383 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7384  
GLEE_LINK_PARTIAL
;

7385 
	}
}

7387 
GLuöt
 
	$__GLìLök_GL_ATI_vîãx_¨øy_obje˘
()

7389 
GLöt
 
nLöked
=0;

7390 #ifde‡
__GLEE_GL_ATI_vîãx_¨øy_obje˘


7391 i‡((
pglNewObje˘Buf„rATI
 = (
PFNGLNEWOBJECTBUFFERATIPROC
Ë
	`__GLìGëProcAddªss
("glNewObje˘Buf„rATI"))!=0Ë
nLöked
++;

7392 i‡((
pglIsObje˘Buf„rATI
 = (
PFNGLISOBJECTBUFFERATIPROC
Ë
	`__GLìGëProcAddªss
("glIsObje˘Buf„rATI"))!=0Ë
nLöked
++;

7393 i‡((
pglUpd©eObje˘Buf„rATI
 = (
PFNGLUPDATEOBJECTBUFFERATIPROC
Ë
	`__GLìGëProcAddªss
("glUpd©eObje˘Buf„rATI"))!=0Ë
nLöked
++;

7394 i‡((
pglGëObje˘Buf„rfvATI
 = (
PFNGLGETOBJECTBUFFERFVATIPROC
Ë
	`__GLìGëProcAddªss
("glGëObje˘Buf„rfvATI"))!=0Ë
nLöked
++;

7395 i‡((
pglGëObje˘Buf„rivATI
 = (
PFNGLGETOBJECTBUFFERIVATIPROC
Ë
	`__GLìGëProcAddªss
("glGëObje˘Buf„rivATI"))!=0Ë
nLöked
++;

7396 i‡((
pglFªeObje˘Buf„rATI
 = (
PFNGLFREEOBJECTBUFFERATIPROC
Ë
	`__GLìGëProcAddªss
("glFªeObje˘Buf„rATI"))!=0Ë
nLöked
++;

7397 i‡((
pglAºayObje˘ATI
 = (
PFNGLARRAYOBJECTATIPROC
Ë
	`__GLìGëProcAddªss
("glAºayObje˘ATI"))!=0Ë
nLöked
++;

7398 i‡((
pglGëAºayObje˘fvATI
 = (
PFNGLGETARRAYOBJECTFVATIPROC
Ë
	`__GLìGëProcAddªss
("glGëAºayObje˘fvATI"))!=0Ë
nLöked
++;

7399 i‡((
pglGëAºayObje˘ivATI
 = (
PFNGLGETARRAYOBJECTIVATIPROC
Ë
	`__GLìGëProcAddªss
("glGëAºayObje˘ivATI"))!=0Ë
nLöked
++;

7400 i‡((
pglV¨ü¡AºayObje˘ATI
 = (
PFNGLVARIANTARRAYOBJECTATIPROC
Ë
	`__GLìGëProcAddªss
("glV¨ü¡AºayObje˘ATI"))!=0Ë
nLöked
++;

7401 i‡((
pglGëV¨ü¡AºayObje˘fvATI
 = (
PFNGLGETVARIANTARRAYOBJECTFVATIPROC
Ë
	`__GLìGëProcAddªss
("glGëV¨ü¡AºayObje˘fvATI"))!=0Ë
nLöked
++;

7402 i‡((
pglGëV¨ü¡AºayObje˘ivATI
 = (
PFNGLGETVARIANTARRAYOBJECTIVATIPROC
Ë
	`__GLìGëProcAddªss
("glGëV¨ü¡AºayObje˘ivATI"))!=0Ë
nLöked
++;

7404 i‡(
nLöked
==12Ë 
GLEE_LINK_COMPLETE
;

7405 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7406  
GLEE_LINK_PARTIAL
;

7407 
	}
}

7409 
GLuöt
 
	$__GLìLök_GL_EXT_vîãx_shadî
()

7411 
GLöt
 
nLöked
=0;

7412 #ifde‡
__GLEE_GL_EXT_vîãx_shadî


7413 i‡((
pglBegöVîãxShadîEXT
 = (
PFNGLBEGINVERTEXSHADEREXTPROC
Ë
	`__GLìGëProcAddªss
("glBegöVîãxShadîEXT"))!=0Ë
nLöked
++;

7414 i‡((
pglEndVîãxShadîEXT
 = (
PFNGLENDVERTEXSHADEREXTPROC
Ë
	`__GLìGëProcAddªss
("glEndVîãxShadîEXT"))!=0Ë
nLöked
++;

7415 i‡((
pglBödVîãxShadîEXT
 = (
PFNGLBINDVERTEXSHADEREXTPROC
Ë
	`__GLìGëProcAddªss
("glBödVîãxShadîEXT"))!=0Ë
nLöked
++;

7416 i‡((
pglGíVîãxShadîsEXT
 = (
PFNGLGENVERTEXSHADERSEXTPROC
Ë
	`__GLìGëProcAddªss
("glGíVîãxShadîsEXT"))!=0Ë
nLöked
++;

7417 i‡((
pglDñëeVîãxShadîEXT
 = (
PFNGLDELETEVERTEXSHADEREXTPROC
Ë
	`__GLìGëProcAddªss
("glDñëeVîãxShadîEXT"))!=0Ë
nLöked
++;

7418 i‡((
pglShadîOp1EXT
 = (
PFNGLSHADEROP1EXTPROC
Ë
	`__GLìGëProcAddªss
("glShadîOp1EXT"))!=0Ë
nLöked
++;

7419 i‡((
pglShadîOp2EXT
 = (
PFNGLSHADEROP2EXTPROC
Ë
	`__GLìGëProcAddªss
("glShadîOp2EXT"))!=0Ë
nLöked
++;

7420 i‡((
pglShadîOp3EXT
 = (
PFNGLSHADEROP3EXTPROC
Ë
	`__GLìGëProcAddªss
("glShadîOp3EXT"))!=0Ë
nLöked
++;

7421 i‡((
pglSwizzÀEXT
 = (
PFNGLSWIZZLEEXTPROC
Ë
	`__GLìGëProcAddªss
("glSwizzÀEXT"))!=0Ë
nLöked
++;

7422 i‡((
pglWrôeMaskEXT
 = (
PFNGLWRITEMASKEXTPROC
Ë
	`__GLìGëProcAddªss
("glWrôeMaskEXT"))!=0Ë
nLöked
++;

7423 i‡((
pglIn£πComp⁄ítEXT
 = (
PFNGLINSERTCOMPONENTEXTPROC
Ë
	`__GLìGëProcAddªss
("glIn£πComp⁄ítEXT"))!=0Ë
nLöked
++;

7424 i‡((
pglExåa˘Comp⁄ítEXT
 = (
PFNGLEXTRACTCOMPONENTEXTPROC
Ë
	`__GLìGëProcAddªss
("glExåa˘Comp⁄ítEXT"))!=0Ë
nLöked
++;

7425 i‡((
pglGíSymbﬁsEXT
 = (
PFNGLGENSYMBOLSEXTPROC
Ë
	`__GLìGëProcAddªss
("glGíSymbﬁsEXT"))!=0Ë
nLöked
++;

7426 i‡((
pglSëInv¨ü¡EXT
 = (
PFNGLSETINVARIANTEXTPROC
Ë
	`__GLìGëProcAddªss
("glSëInv¨ü¡EXT"))!=0Ë
nLöked
++;

7427 i‡((
pglSëLoˇlC⁄°™tEXT
 = (
PFNGLSETLOCALCONSTANTEXTPROC
Ë
	`__GLìGëProcAddªss
("glSëLoˇlC⁄°™tEXT"))!=0Ë
nLöked
++;

7428 i‡((
pglV¨ü¡bvEXT
 = (
PFNGLVARIANTBVEXTPROC
Ë
	`__GLìGëProcAddªss
("glV¨ü¡bvEXT"))!=0Ë
nLöked
++;

7429 i‡((
pglV¨ü¡svEXT
 = (
PFNGLVARIANTSVEXTPROC
Ë
	`__GLìGëProcAddªss
("glV¨ü¡svEXT"))!=0Ë
nLöked
++;

7430 i‡((
pglV¨ü¡ivEXT
 = (
PFNGLVARIANTIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glV¨ü¡ivEXT"))!=0Ë
nLöked
++;

7431 i‡((
pglV¨ü¡fvEXT
 = (
PFNGLVARIANTFVEXTPROC
Ë
	`__GLìGëProcAddªss
("glV¨ü¡fvEXT"))!=0Ë
nLöked
++;

7432 i‡((
pglV¨ü¡dvEXT
 = (
PFNGLVARIANTDVEXTPROC
Ë
	`__GLìGëProcAddªss
("glV¨ü¡dvEXT"))!=0Ë
nLöked
++;

7433 i‡((
pglV¨ü¡ubvEXT
 = (
PFNGLVARIANTUBVEXTPROC
Ë
	`__GLìGëProcAddªss
("glV¨ü¡ubvEXT"))!=0Ë
nLöked
++;

7434 i‡((
pglV¨ü¡usvEXT
 = (
PFNGLVARIANTUSVEXTPROC
Ë
	`__GLìGëProcAddªss
("glV¨ü¡usvEXT"))!=0Ë
nLöked
++;

7435 i‡((
pglV¨ü¡uivEXT
 = (
PFNGLVARIANTUIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glV¨ü¡uivEXT"))!=0Ë
nLöked
++;

7436 i‡((
pglV¨ü¡PoöãrEXT
 = (
PFNGLVARIANTPOINTEREXTPROC
Ë
	`__GLìGëProcAddªss
("glV¨ü¡PoöãrEXT"))!=0Ë
nLöked
++;

7437 i‡((
pglE«bÀV¨ü¡Clõ¡SèãEXT
 = (
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC
Ë
	`__GLìGëProcAddªss
("glE«bÀV¨ü¡Clõ¡SèãEXT"))!=0Ë
nLöked
++;

7438 i‡((
pglDißbÀV¨ü¡Clõ¡SèãEXT
 = (
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC
Ë
	`__GLìGëProcAddªss
("glDißbÀV¨ü¡Clõ¡SèãEXT"))!=0Ë
nLöked
++;

7439 i‡((
pglBödLightP¨amëîEXT
 = (
PFNGLBINDLIGHTPARAMETEREXTPROC
Ë
	`__GLìGëProcAddªss
("glBödLightP¨amëîEXT"))!=0Ë
nLöked
++;

7440 i‡((
pglBödM©îülP¨amëîEXT
 = (
PFNGLBINDMATERIALPARAMETEREXTPROC
Ë
	`__GLìGëProcAddªss
("glBödM©îülP¨amëîEXT"))!=0Ë
nLöked
++;

7441 i‡((
pglBödTexGíP¨amëîEXT
 = (
PFNGLBINDTEXGENPARAMETEREXTPROC
Ë
	`__GLìGëProcAddªss
("glBödTexGíP¨amëîEXT"))!=0Ë
nLöked
++;

7442 i‡((
pglBödTextuªUnôP¨amëîEXT
 = (
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC
Ë
	`__GLìGëProcAddªss
("glBödTextuªUnôP¨amëîEXT"))!=0Ë
nLöked
++;

7443 i‡((
pglBödP¨amëîEXT
 = (
PFNGLBINDPARAMETEREXTPROC
Ë
	`__GLìGëProcAddªss
("glBödP¨amëîEXT"))!=0Ë
nLöked
++;

7444 i‡((
pglIsV¨ü¡E«bÀdEXT
 = (
PFNGLISVARIANTENABLEDEXTPROC
Ë
	`__GLìGëProcAddªss
("glIsV¨ü¡E«bÀdEXT"))!=0Ë
nLöked
++;

7445 i‡((
pglGëV¨ü¡BoﬁónvEXT
 = (
PFNGLGETVARIANTBOOLEANVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëV¨ü¡BoﬁónvEXT"))!=0Ë
nLöked
++;

7446 i‡((
pglGëV¨ü¡I¡egîvEXT
 = (
PFNGLGETVARIANTINTEGERVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëV¨ü¡I¡egîvEXT"))!=0Ë
nLöked
++;

7447 i‡((
pglGëV¨ü¡FlﬂtvEXT
 = (
PFNGLGETVARIANTFLOATVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëV¨ü¡FlﬂtvEXT"))!=0Ë
nLöked
++;

7448 i‡((
pglGëV¨ü¡PoöãrvEXT
 = (
PFNGLGETVARIANTPOINTERVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëV¨ü¡PoöãrvEXT"))!=0Ë
nLöked
++;

7449 i‡((
pglGëInv¨ü¡BoﬁónvEXT
 = (
PFNGLGETINVARIANTBOOLEANVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëInv¨ü¡BoﬁónvEXT"))!=0Ë
nLöked
++;

7450 i‡((
pglGëInv¨ü¡I¡egîvEXT
 = (
PFNGLGETINVARIANTINTEGERVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëInv¨ü¡I¡egîvEXT"))!=0Ë
nLöked
++;

7451 i‡((
pglGëInv¨ü¡FlﬂtvEXT
 = (
PFNGLGETINVARIANTFLOATVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëInv¨ü¡FlﬂtvEXT"))!=0Ë
nLöked
++;

7452 i‡((
pglGëLoˇlC⁄°™tBoﬁónvEXT
 = (
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëLoˇlC⁄°™tBoﬁónvEXT"))!=0Ë
nLöked
++;

7453 i‡((
pglGëLoˇlC⁄°™tI¡egîvEXT
 = (
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëLoˇlC⁄°™tI¡egîvEXT"))!=0Ë
nLöked
++;

7454 i‡((
pglGëLoˇlC⁄°™tFlﬂtvEXT
 = (
PFNGLGETLOCALCONSTANTFLOATVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëLoˇlC⁄°™tFlﬂtvEXT"))!=0Ë
nLöked
++;

7456 i‡(
nLöked
==42Ë 
GLEE_LINK_COMPLETE
;

7457 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7458  
GLEE_LINK_PARTIAL
;

7459 
	}
}

7461 
GLuöt
 
	$__GLìLök_GL_ATI_vîãx_°ªams
()

7463 
GLöt
 
nLöked
=0;

7464 #ifde‡
__GLEE_GL_ATI_vîãx_°ªams


7465 i‡((
pglVîãxSåóm1sATI
 = (
PFNGLVERTEXSTREAM1SATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm1sATI"))!=0Ë
nLöked
++;

7466 i‡((
pglVîãxSåóm1svATI
 = (
PFNGLVERTEXSTREAM1SVATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm1svATI"))!=0Ë
nLöked
++;

7467 i‡((
pglVîãxSåóm1iATI
 = (
PFNGLVERTEXSTREAM1IATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm1iATI"))!=0Ë
nLöked
++;

7468 i‡((
pglVîãxSåóm1ivATI
 = (
PFNGLVERTEXSTREAM1IVATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm1ivATI"))!=0Ë
nLöked
++;

7469 i‡((
pglVîãxSåóm1fATI
 = (
PFNGLVERTEXSTREAM1FATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm1fATI"))!=0Ë
nLöked
++;

7470 i‡((
pglVîãxSåóm1fvATI
 = (
PFNGLVERTEXSTREAM1FVATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm1fvATI"))!=0Ë
nLöked
++;

7471 i‡((
pglVîãxSåóm1dATI
 = (
PFNGLVERTEXSTREAM1DATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm1dATI"))!=0Ë
nLöked
++;

7472 i‡((
pglVîãxSåóm1dvATI
 = (
PFNGLVERTEXSTREAM1DVATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm1dvATI"))!=0Ë
nLöked
++;

7473 i‡((
pglVîãxSåóm2sATI
 = (
PFNGLVERTEXSTREAM2SATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm2sATI"))!=0Ë
nLöked
++;

7474 i‡((
pglVîãxSåóm2svATI
 = (
PFNGLVERTEXSTREAM2SVATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm2svATI"))!=0Ë
nLöked
++;

7475 i‡((
pglVîãxSåóm2iATI
 = (
PFNGLVERTEXSTREAM2IATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm2iATI"))!=0Ë
nLöked
++;

7476 i‡((
pglVîãxSåóm2ivATI
 = (
PFNGLVERTEXSTREAM2IVATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm2ivATI"))!=0Ë
nLöked
++;

7477 i‡((
pglVîãxSåóm2fATI
 = (
PFNGLVERTEXSTREAM2FATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm2fATI"))!=0Ë
nLöked
++;

7478 i‡((
pglVîãxSåóm2fvATI
 = (
PFNGLVERTEXSTREAM2FVATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm2fvATI"))!=0Ë
nLöked
++;

7479 i‡((
pglVîãxSåóm2dATI
 = (
PFNGLVERTEXSTREAM2DATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm2dATI"))!=0Ë
nLöked
++;

7480 i‡((
pglVîãxSåóm2dvATI
 = (
PFNGLVERTEXSTREAM2DVATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm2dvATI"))!=0Ë
nLöked
++;

7481 i‡((
pglVîãxSåóm3sATI
 = (
PFNGLVERTEXSTREAM3SATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm3sATI"))!=0Ë
nLöked
++;

7482 i‡((
pglVîãxSåóm3svATI
 = (
PFNGLVERTEXSTREAM3SVATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm3svATI"))!=0Ë
nLöked
++;

7483 i‡((
pglVîãxSåóm3iATI
 = (
PFNGLVERTEXSTREAM3IATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm3iATI"))!=0Ë
nLöked
++;

7484 i‡((
pglVîãxSåóm3ivATI
 = (
PFNGLVERTEXSTREAM3IVATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm3ivATI"))!=0Ë
nLöked
++;

7485 i‡((
pglVîãxSåóm3fATI
 = (
PFNGLVERTEXSTREAM3FATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm3fATI"))!=0Ë
nLöked
++;

7486 i‡((
pglVîãxSåóm3fvATI
 = (
PFNGLVERTEXSTREAM3FVATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm3fvATI"))!=0Ë
nLöked
++;

7487 i‡((
pglVîãxSåóm3dATI
 = (
PFNGLVERTEXSTREAM3DATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm3dATI"))!=0Ë
nLöked
++;

7488 i‡((
pglVîãxSåóm3dvATI
 = (
PFNGLVERTEXSTREAM3DVATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm3dvATI"))!=0Ë
nLöked
++;

7489 i‡((
pglVîãxSåóm4sATI
 = (
PFNGLVERTEXSTREAM4SATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm4sATI"))!=0Ë
nLöked
++;

7490 i‡((
pglVîãxSåóm4svATI
 = (
PFNGLVERTEXSTREAM4SVATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm4svATI"))!=0Ë
nLöked
++;

7491 i‡((
pglVîãxSåóm4iATI
 = (
PFNGLVERTEXSTREAM4IATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm4iATI"))!=0Ë
nLöked
++;

7492 i‡((
pglVîãxSåóm4ivATI
 = (
PFNGLVERTEXSTREAM4IVATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm4ivATI"))!=0Ë
nLöked
++;

7493 i‡((
pglVîãxSåóm4fATI
 = (
PFNGLVERTEXSTREAM4FATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm4fATI"))!=0Ë
nLöked
++;

7494 i‡((
pglVîãxSåóm4fvATI
 = (
PFNGLVERTEXSTREAM4FVATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm4fvATI"))!=0Ë
nLöked
++;

7495 i‡((
pglVîãxSåóm4dATI
 = (
PFNGLVERTEXSTREAM4DATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm4dATI"))!=0Ë
nLöked
++;

7496 i‡((
pglVîãxSåóm4dvATI
 = (
PFNGLVERTEXSTREAM4DVATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxSåóm4dvATI"))!=0Ë
nLöked
++;

7497 i‡((
pglN‹mÆSåóm3bATI
 = (
PFNGLNORMALSTREAM3BATIPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆSåóm3bATI"))!=0Ë
nLöked
++;

7498 i‡((
pglN‹mÆSåóm3bvATI
 = (
PFNGLNORMALSTREAM3BVATIPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆSåóm3bvATI"))!=0Ë
nLöked
++;

7499 i‡((
pglN‹mÆSåóm3sATI
 = (
PFNGLNORMALSTREAM3SATIPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆSåóm3sATI"))!=0Ë
nLöked
++;

7500 i‡((
pglN‹mÆSåóm3svATI
 = (
PFNGLNORMALSTREAM3SVATIPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆSåóm3svATI"))!=0Ë
nLöked
++;

7501 i‡((
pglN‹mÆSåóm3iATI
 = (
PFNGLNORMALSTREAM3IATIPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆSåóm3iATI"))!=0Ë
nLöked
++;

7502 i‡((
pglN‹mÆSåóm3ivATI
 = (
PFNGLNORMALSTREAM3IVATIPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆSåóm3ivATI"))!=0Ë
nLöked
++;

7503 i‡((
pglN‹mÆSåóm3fATI
 = (
PFNGLNORMALSTREAM3FATIPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆSåóm3fATI"))!=0Ë
nLöked
++;

7504 i‡((
pglN‹mÆSåóm3fvATI
 = (
PFNGLNORMALSTREAM3FVATIPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆSåóm3fvATI"))!=0Ë
nLöked
++;

7505 i‡((
pglN‹mÆSåóm3dATI
 = (
PFNGLNORMALSTREAM3DATIPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆSåóm3dATI"))!=0Ë
nLöked
++;

7506 i‡((
pglN‹mÆSåóm3dvATI
 = (
PFNGLNORMALSTREAM3DVATIPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆSåóm3dvATI"))!=0Ë
nLöked
++;

7507 i‡((
pglClõ¡A˘iveVîãxSåómATI
 = (
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC
Ë
	`__GLìGëProcAddªss
("glClõ¡A˘iveVîãxSåómATI"))!=0Ë
nLöked
++;

7508 i‡((
pglVîãxBÀndEnviATI
 = (
PFNGLVERTEXBLENDENVIATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxBÀndEnviATI"))!=0Ë
nLöked
++;

7509 i‡((
pglVîãxBÀndEnvfATI
 = (
PFNGLVERTEXBLENDENVFATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxBÀndEnvfATI"))!=0Ë
nLöked
++;

7511 i‡(
nLöked
==45Ë 
GLEE_LINK_COMPLETE
;

7512 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7513  
GLEE_LINK_PARTIAL
;

7514 
	}
}

7516 
GLuöt
 
	$__GLìLök_GL_ATI_ñemít_¨øy
()

7518 
GLöt
 
nLöked
=0;

7519 #ifde‡
__GLEE_GL_ATI_ñemít_¨øy


7520 i‡((
pglEÀmítPoöãrATI
 = (
PFNGLELEMENTPOINTERATIPROC
Ë
	`__GLìGëProcAddªss
("glEÀmítPoöãrATI"))!=0Ë
nLöked
++;

7521 i‡((
pglDøwEÀmítAºayATI
 = (
PFNGLDRAWELEMENTARRAYATIPROC
Ë
	`__GLìGëProcAddªss
("glDøwEÀmítAºayATI"))!=0Ë
nLöked
++;

7522 i‡((
pglDøwR™geEÀmítAºayATI
 = (
PFNGLDRAWRANGEELEMENTARRAYATIPROC
Ë
	`__GLìGëProcAddªss
("glDøwR™geEÀmítAºayATI"))!=0Ë
nLöked
++;

7524 i‡(
nLöked
==3Ë 
GLEE_LINK_COMPLETE
;

7525 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7526  
GLEE_LINK_PARTIAL
;

7527 
	}
}

7529 
GLuöt
 
	$__GLìLök_GL_SUN_mesh_¨øy
()

7531 
GLöt
 
nLöked
=0;

7532 #ifde‡
__GLEE_GL_SUN_mesh_¨øy


7533 i‡((
pglDøwMeshAºaysSUN
 = (
PFNGLDRAWMESHARRAYSSUNPROC
Ë
	`__GLìGëProcAddªss
("glDøwMeshAºaysSUN"))!=0Ë
nLöked
++;

7535 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

7536 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7537  
GLEE_LINK_PARTIAL
;

7538 
	}
}

7540 
GLuöt
 
	$__GLìLök_GL_SUN_¶i˚_accum
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7542 
GLuöt
 
	$__GLìLök_GL_NV_mu…ißm∂e_fûãr_höt
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7544 
GLuöt
 
	$__GLìLök_GL_NV_dïth_˛amp
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7546 
GLuöt
 
	$__GLìLök_GL_NV_oc˛usi⁄_quîy
()

7548 
GLöt
 
nLöked
=0;

7549 #ifde‡
__GLEE_GL_NV_oc˛usi⁄_quîy


7550 i‡((
pglGíOc˛usi⁄QuîõsNV
 = (
PFNGLGENOCCLUSIONQUERIESNVPROC
Ë
	`__GLìGëProcAddªss
("glGíOc˛usi⁄QuîõsNV"))!=0Ë
nLöked
++;

7551 i‡((
pglDñëeOc˛usi⁄QuîõsNV
 = (
PFNGLDELETEOCCLUSIONQUERIESNVPROC
Ë
	`__GLìGëProcAddªss
("glDñëeOc˛usi⁄QuîõsNV"))!=0Ë
nLöked
++;

7552 i‡((
pglIsOc˛usi⁄QuîyNV
 = (
PFNGLISOCCLUSIONQUERYNVPROC
Ë
	`__GLìGëProcAddªss
("glIsOc˛usi⁄QuîyNV"))!=0Ë
nLöked
++;

7553 i‡((
pglBegöOc˛usi⁄QuîyNV
 = (
PFNGLBEGINOCCLUSIONQUERYNVPROC
Ë
	`__GLìGëProcAddªss
("glBegöOc˛usi⁄QuîyNV"))!=0Ë
nLöked
++;

7554 i‡((
pglEndOc˛usi⁄QuîyNV
 = (
PFNGLENDOCCLUSIONQUERYNVPROC
Ë
	`__GLìGëProcAddªss
("glEndOc˛usi⁄QuîyNV"))!=0Ë
nLöked
++;

7555 i‡((
pglGëOc˛usi⁄QuîyivNV
 = (
PFNGLGETOCCLUSIONQUERYIVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëOc˛usi⁄QuîyivNV"))!=0Ë
nLöked
++;

7556 i‡((
pglGëOc˛usi⁄QuîyuivNV
 = (
PFNGLGETOCCLUSIONQUERYUIVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëOc˛usi⁄QuîyuivNV"))!=0Ë
nLöked
++;

7558 i‡(
nLöked
==7Ë 
GLEE_LINK_COMPLETE
;

7559 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7560  
GLEE_LINK_PARTIAL
;

7561 
	}
}

7563 
GLuöt
 
	$__GLìLök_GL_NV_poöt_•rôe
()

7565 
GLöt
 
nLöked
=0;

7566 #ifde‡
__GLEE_GL_NV_poöt_•rôe


7567 i‡((
pglPoötP¨amëîiNV
 = (
PFNGLPOINTPARAMETERINVPROC
Ë
	`__GLìGëProcAddªss
("glPoötP¨amëîiNV"))!=0Ë
nLöked
++;

7568 i‡((
pglPoötP¨amëîivNV
 = (
PFNGLPOINTPARAMETERIVNVPROC
Ë
	`__GLìGëProcAddªss
("glPoötP¨amëîivNV"))!=0Ë
nLöked
++;

7570 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

7571 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7572  
GLEE_LINK_PARTIAL
;

7573 
	}
}

7575 
GLuöt
 
	$__GLìLök_GL_NV_ãxtuª_shadî3
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7577 
GLuöt
 
	$__GLìLök_GL_NV_vîãx_¥ogøm1_1
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7579 
GLuöt
 
	$__GLìLök_GL_EXT_shadow_funcs
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7581 
GLuöt
 
	$__GLìLök_GL_EXT_°ícû_two_side
()

7583 
GLöt
 
nLöked
=0;

7584 #ifde‡
__GLEE_GL_EXT_°ícû_two_side


7585 i‡((
pglA˘iveSãncûFa˚EXT
 = (
PFNGLACTIVESTENCILFACEEXTPROC
Ë
	`__GLìGëProcAddªss
("glA˘iveSãncûFa˚EXT"))!=0Ë
nLöked
++;

7587 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

7588 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7589  
GLEE_LINK_PARTIAL
;

7590 
	}
}

7592 
GLuöt
 
	$__GLìLök_GL_ATI_ãxt_‰agmít_shadî
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7594 
GLuöt
 
	$__GLìLök_GL_APPLE_˛õ¡_°‹age
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7596 
GLuöt
 
	$__GLìLök_GL_APPLE_ñemít_¨øy
()

7598 
GLöt
 
nLöked
=0;

7599 #ifde‡
__GLEE_GL_APPLE_ñemít_¨øy


7600 i‡((
pglEÀmítPoöãrAPPLE
 = (
PFNGLELEMENTPOINTERAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glEÀmítPoöãrAPPLE"))!=0Ë
nLöked
++;

7601 i‡((
pglDøwEÀmítAºayAPPLE
 = (
PFNGLDRAWELEMENTARRAYAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glDøwEÀmítAºayAPPLE"))!=0Ë
nLöked
++;

7602 i‡((
pglDøwR™geEÀmítAºayAPPLE
 = (
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glDøwR™geEÀmítAºayAPPLE"))!=0Ë
nLöked
++;

7603 i‡((
pglMu…iDøwEÀmítAºayAPPLE
 = (
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glMu…iDøwEÀmítAºayAPPLE"))!=0Ë
nLöked
++;

7604 i‡((
pglMu…iDøwR™geEÀmítAºayAPPLE
 = (
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glMu…iDøwR™geEÀmítAºayAPPLE"))!=0Ë
nLöked
++;

7606 i‡(
nLöked
==5Ë 
GLEE_LINK_COMPLETE
;

7607 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7608  
GLEE_LINK_PARTIAL
;

7609 
	}
}

7611 
GLuöt
 
	$__GLìLök_GL_APPLE_„n˚
()

7613 
GLöt
 
nLöked
=0;

7614 #ifde‡
__GLEE_GL_APPLE_„n˚


7615 i‡((
pglGíFí˚sAPPLE
 = (
PFNGLGENFENCESAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glGíFí˚sAPPLE"))!=0Ë
nLöked
++;

7616 i‡((
pglDñëeFí˚sAPPLE
 = (
PFNGLDELETEFENCESAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glDñëeFí˚sAPPLE"))!=0Ë
nLöked
++;

7617 i‡((
pglSëFí˚APPLE
 = (
PFNGLSETFENCEAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glSëFí˚APPLE"))!=0Ë
nLöked
++;

7618 i‡((
pglIsFí˚APPLE
 = (
PFNGLISFENCEAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glIsFí˚APPLE"))!=0Ë
nLöked
++;

7619 i‡((
pglTe°Fí˚APPLE
 = (
PFNGLTESTFENCEAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glTe°Fí˚APPLE"))!=0Ë
nLöked
++;

7620 i‡((
pglFöishFí˚APPLE
 = (
PFNGLFINISHFENCEAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glFöishFí˚APPLE"))!=0Ë
nLöked
++;

7621 i‡((
pglTe°Obje˘APPLE
 = (
PFNGLTESTOBJECTAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glTe°Obje˘APPLE"))!=0Ë
nLöked
++;

7622 i‡((
pglFöishObje˘APPLE
 = (
PFNGLFINISHOBJECTAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glFöishObje˘APPLE"))!=0Ë
nLöked
++;

7624 i‡(
nLöked
==8Ë 
GLEE_LINK_COMPLETE
;

7625 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7626  
GLEE_LINK_PARTIAL
;

7627 
	}
}

7629 
GLuöt
 
	$__GLìLök_GL_APPLE_vîãx_¨øy_obje˘
()

7631 
GLöt
 
nLöked
=0;

7632 #ifde‡
__GLEE_GL_APPLE_vîãx_¨øy_obje˘


7633 i‡((
pglBödVîãxAºayAPPLE
 = (
PFNGLBINDVERTEXARRAYAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glBödVîãxAºayAPPLE"))!=0Ë
nLöked
++;

7634 i‡((
pglDñëeVîãxAºaysAPPLE
 = (
PFNGLDELETEVERTEXARRAYSAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glDñëeVîãxAºaysAPPLE"))!=0Ë
nLöked
++;

7635 i‡((
pglGíVîãxAºaysAPPLE
 = (
PFNGLGENVERTEXARRAYSAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glGíVîãxAºaysAPPLE"))!=0Ë
nLöked
++;

7636 i‡((
pglIsVîãxAºayAPPLE
 = (
PFNGLISVERTEXARRAYAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glIsVîãxAºayAPPLE"))!=0Ë
nLöked
++;

7638 i‡(
nLöked
==4Ë 
GLEE_LINK_COMPLETE
;

7639 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7640  
GLEE_LINK_PARTIAL
;

7641 
	}
}

7643 
GLuöt
 
	$__GLìLök_GL_APPLE_vîãx_¨øy_ønge
()

7645 
GLöt
 
nLöked
=0;

7646 #ifde‡
__GLEE_GL_APPLE_vîãx_¨øy_ønge


7647 i‡((
pglVîãxAºayR™geAPPLE
 = (
PFNGLVERTEXARRAYRANGEAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAºayR™geAPPLE"))!=0Ë
nLöked
++;

7648 i‡((
pglFlushVîãxAºayR™geAPPLE
 = (
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glFlushVîãxAºayR™geAPPLE"))!=0Ë
nLöked
++;

7649 i‡((
pglVîãxAºayP¨amëîiAPPLE
 = (
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAºayP¨amëîiAPPLE"))!=0Ë
nLöked
++;

7651 i‡(
nLöked
==3Ë 
GLEE_LINK_COMPLETE
;

7652 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7653  
GLEE_LINK_PARTIAL
;

7654 
	}
}

7656 
GLuöt
 
	$__GLìLök_GL_APPLE_ycb¸_422
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7658 
GLuöt
 
	$__GLìLök_GL_S3_s3tc
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7660 
GLuöt
 
	$__GLìLök_GL_ATI_døw_buf„rs
()

7662 
GLöt
 
nLöked
=0;

7663 #ifde‡
__GLEE_GL_ATI_døw_buf„rs


7664 i‡((
pglDøwBuf„rsATI
 = (
PFNGLDRAWBUFFERSATIPROC
Ë
	`__GLìGëProcAddªss
("glDøwBuf„rsATI"))!=0Ë
nLöked
++;

7666 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

7667 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7668  
GLEE_LINK_PARTIAL
;

7669 
	}
}

7671 
GLuöt
 
	$__GLìLök_GL_ATI_pixñ_f‹m©_Êﬂt
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7673 
GLuöt
 
	$__GLìLök_GL_ATI_ãxtuª_ív_comböe3
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7675 
GLuöt
 
	$__GLìLök_GL_ATI_ãxtuª_Êﬂt
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7677 
GLuöt
 
	$__GLìLök_GL_NV_Êﬂt_buf„r
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7679 
GLuöt
 
	$__GLìLök_GL_NV_‰agmít_¥ogøm
()

7681 
GLöt
 
nLöked
=0;

7682 #ifde‡
__GLEE_GL_NV_‰agmít_¥ogøm


7683 i‡((
pglProgømNamedP¨amëî4fNV
 = (
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømNamedP¨amëî4fNV"))!=0Ë
nLöked
++;

7684 i‡((
pglProgømNamedP¨amëî4dNV
 = (
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømNamedP¨amëî4dNV"))!=0Ë
nLöked
++;

7685 i‡((
pglProgømNamedP¨amëî4fvNV
 = (
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømNamedP¨amëî4fvNV"))!=0Ë
nLöked
++;

7686 i‡((
pglProgømNamedP¨amëî4dvNV
 = (
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømNamedP¨amëî4dvNV"))!=0Ë
nLöked
++;

7687 i‡((
pglGëProgømNamedP¨amëîfvNV
 = (
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømNamedP¨amëîfvNV"))!=0Ë
nLöked
++;

7688 i‡((
pglGëProgømNamedP¨amëîdvNV
 = (
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømNamedP¨amëîdvNV"))!=0Ë
nLöked
++;

7690 i‡(
nLöked
==6Ë 
GLEE_LINK_COMPLETE
;

7691 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7692  
GLEE_LINK_PARTIAL
;

7693 
	}
}

7695 
GLuöt
 
	$__GLìLök_GL_NV_hÆf_Êﬂt
()

7697 
GLöt
 
nLöked
=0;

7698 #ifde‡
__GLEE_GL_NV_hÆf_Êﬂt


7699 i‡((
pglVîãx2hNV
 = (
PFNGLVERTEX2HNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãx2hNV"))!=0Ë
nLöked
++;

7700 i‡((
pglVîãx2hvNV
 = (
PFNGLVERTEX2HVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãx2hvNV"))!=0Ë
nLöked
++;

7701 i‡((
pglVîãx3hNV
 = (
PFNGLVERTEX3HNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãx3hNV"))!=0Ë
nLöked
++;

7702 i‡((
pglVîãx3hvNV
 = (
PFNGLVERTEX3HVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãx3hvNV"))!=0Ë
nLöked
++;

7703 i‡((
pglVîãx4hNV
 = (
PFNGLVERTEX4HNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãx4hNV"))!=0Ë
nLöked
++;

7704 i‡((
pglVîãx4hvNV
 = (
PFNGLVERTEX4HVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãx4hvNV"))!=0Ë
nLöked
++;

7705 i‡((
pglN‹mÆ3hNV
 = (
PFNGLNORMAL3HNVPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆ3hNV"))!=0Ë
nLöked
++;

7706 i‡((
pglN‹mÆ3hvNV
 = (
PFNGLNORMAL3HVNVPROC
Ë
	`__GLìGëProcAddªss
("glN‹mÆ3hvNV"))!=0Ë
nLöked
++;

7707 i‡((
pglCﬁ‹3hNV
 = (
PFNGLCOLOR3HNVPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹3hNV"))!=0Ë
nLöked
++;

7708 i‡((
pglCﬁ‹3hvNV
 = (
PFNGLCOLOR3HVNVPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹3hvNV"))!=0Ë
nLöked
++;

7709 i‡((
pglCﬁ‹4hNV
 = (
PFNGLCOLOR4HNVPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹4hNV"))!=0Ë
nLöked
++;

7710 i‡((
pglCﬁ‹4hvNV
 = (
PFNGLCOLOR4HVNVPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹4hvNV"))!=0Ë
nLöked
++;

7711 i‡((
pglTexCo‹d1hNV
 = (
PFNGLTEXCOORD1HNVPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d1hNV"))!=0Ë
nLöked
++;

7712 i‡((
pglTexCo‹d1hvNV
 = (
PFNGLTEXCOORD1HVNVPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d1hvNV"))!=0Ë
nLöked
++;

7713 i‡((
pglTexCo‹d2hNV
 = (
PFNGLTEXCOORD2HNVPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d2hNV"))!=0Ë
nLöked
++;

7714 i‡((
pglTexCo‹d2hvNV
 = (
PFNGLTEXCOORD2HVNVPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d2hvNV"))!=0Ë
nLöked
++;

7715 i‡((
pglTexCo‹d3hNV
 = (
PFNGLTEXCOORD3HNVPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d3hNV"))!=0Ë
nLöked
++;

7716 i‡((
pglTexCo‹d3hvNV
 = (
PFNGLTEXCOORD3HVNVPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d3hvNV"))!=0Ë
nLöked
++;

7717 i‡((
pglTexCo‹d4hNV
 = (
PFNGLTEXCOORD4HNVPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d4hNV"))!=0Ë
nLöked
++;

7718 i‡((
pglTexCo‹d4hvNV
 = (
PFNGLTEXCOORD4HVNVPROC
Ë
	`__GLìGëProcAddªss
("glTexCo‹d4hvNV"))!=0Ë
nLöked
++;

7719 i‡((
pglMu…iTexCo‹d1hNV
 = (
PFNGLMULTITEXCOORD1HNVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1hNV"))!=0Ë
nLöked
++;

7720 i‡((
pglMu…iTexCo‹d1hvNV
 = (
PFNGLMULTITEXCOORD1HVNVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d1hvNV"))!=0Ë
nLöked
++;

7721 i‡((
pglMu…iTexCo‹d2hNV
 = (
PFNGLMULTITEXCOORD2HNVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2hNV"))!=0Ë
nLöked
++;

7722 i‡((
pglMu…iTexCo‹d2hvNV
 = (
PFNGLMULTITEXCOORD2HVNVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d2hvNV"))!=0Ë
nLöked
++;

7723 i‡((
pglMu…iTexCo‹d3hNV
 = (
PFNGLMULTITEXCOORD3HNVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3hNV"))!=0Ë
nLöked
++;

7724 i‡((
pglMu…iTexCo‹d3hvNV
 = (
PFNGLMULTITEXCOORD3HVNVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d3hvNV"))!=0Ë
nLöked
++;

7725 i‡((
pglMu…iTexCo‹d4hNV
 = (
PFNGLMULTITEXCOORD4HNVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4hNV"))!=0Ë
nLöked
++;

7726 i‡((
pglMu…iTexCo‹d4hvNV
 = (
PFNGLMULTITEXCOORD4HVNVPROC
Ë
	`__GLìGëProcAddªss
("glMu…iTexCo‹d4hvNV"))!=0Ë
nLöked
++;

7727 i‡((
pglFogCo‹dhNV
 = (
PFNGLFOGCOORDHNVPROC
Ë
	`__GLìGëProcAddªss
("glFogCo‹dhNV"))!=0Ë
nLöked
++;

7728 i‡((
pglFogCo‹dhvNV
 = (
PFNGLFOGCOORDHVNVPROC
Ë
	`__GLìGëProcAddªss
("glFogCo‹dhvNV"))!=0Ë
nLöked
++;

7729 i‡((
pglSec⁄d¨yCﬁ‹3hNV
 = (
PFNGLSECONDARYCOLOR3HNVPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3hNV"))!=0Ë
nLöked
++;

7730 i‡((
pglSec⁄d¨yCﬁ‹3hvNV
 = (
PFNGLSECONDARYCOLOR3HVNVPROC
Ë
	`__GLìGëProcAddªss
("glSec⁄d¨yCﬁ‹3hvNV"))!=0Ë
nLöked
++;

7731 i‡((
pglVîãxWeighthNV
 = (
PFNGLVERTEXWEIGHTHNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxWeighthNV"))!=0Ë
nLöked
++;

7732 i‡((
pglVîãxWeighthvNV
 = (
PFNGLVERTEXWEIGHTHVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxWeighthvNV"))!=0Ë
nLöked
++;

7733 i‡((
pglVîãxAârib1hNV
 = (
PFNGLVERTEXATTRIB1HNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1hNV"))!=0Ë
nLöked
++;

7734 i‡((
pglVîãxAârib1hvNV
 = (
PFNGLVERTEXATTRIB1HVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib1hvNV"))!=0Ë
nLöked
++;

7735 i‡((
pglVîãxAârib2hNV
 = (
PFNGLVERTEXATTRIB2HNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2hNV"))!=0Ë
nLöked
++;

7736 i‡((
pglVîãxAârib2hvNV
 = (
PFNGLVERTEXATTRIB2HVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib2hvNV"))!=0Ë
nLöked
++;

7737 i‡((
pglVîãxAârib3hNV
 = (
PFNGLVERTEXATTRIB3HNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3hNV"))!=0Ë
nLöked
++;

7738 i‡((
pglVîãxAârib3hvNV
 = (
PFNGLVERTEXATTRIB3HVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib3hvNV"))!=0Ë
nLöked
++;

7739 i‡((
pglVîãxAârib4hNV
 = (
PFNGLVERTEXATTRIB4HNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4hNV"))!=0Ë
nLöked
++;

7740 i‡((
pglVîãxAârib4hvNV
 = (
PFNGLVERTEXATTRIB4HVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAârib4hvNV"))!=0Ë
nLöked
++;

7741 i‡((
pglVîãxAâribs1hvNV
 = (
PFNGLVERTEXATTRIBS1HVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs1hvNV"))!=0Ë
nLöked
++;

7742 i‡((
pglVîãxAâribs2hvNV
 = (
PFNGLVERTEXATTRIBS2HVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs2hvNV"))!=0Ë
nLöked
++;

7743 i‡((
pglVîãxAâribs3hvNV
 = (
PFNGLVERTEXATTRIBS3HVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs3hvNV"))!=0Ë
nLöked
++;

7744 i‡((
pglVîãxAâribs4hvNV
 = (
PFNGLVERTEXATTRIBS4HVNVPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribs4hvNV"))!=0Ë
nLöked
++;

7746 i‡(
nLöked
==46Ë 
GLEE_LINK_COMPLETE
;

7747 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7748  
GLEE_LINK_PARTIAL
;

7749 
	}
}

7751 
GLuöt
 
	$__GLìLök_GL_NV_pixñ_d©a_ønge
()

7753 
GLöt
 
nLöked
=0;

7754 #ifde‡
__GLEE_GL_NV_pixñ_d©a_ønge


7755 i‡((
pglPixñD©aR™geNV
 = (
PFNGLPIXELDATARANGENVPROC
Ë
	`__GLìGëProcAddªss
("glPixñD©aR™geNV"))!=0Ë
nLöked
++;

7756 i‡((
pglFlushPixñD©aR™geNV
 = (
PFNGLFLUSHPIXELDATARANGENVPROC
Ë
	`__GLìGëProcAddªss
("glFlushPixñD©aR™geNV"))!=0Ë
nLöked
++;

7758 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

7759 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7760  
GLEE_LINK_PARTIAL
;

7761 
	}
}

7763 
GLuöt
 
	$__GLìLök_GL_NV_¥imôive_ª°¨t
()

7765 
GLöt
 
nLöked
=0;

7766 #ifde‡
__GLEE_GL_NV_¥imôive_ª°¨t


7767 i‡((
pglPrimôiveRe°¨tNV
 = (
PFNGLPRIMITIVERESTARTNVPROC
Ë
	`__GLìGëProcAddªss
("glPrimôiveRe°¨tNV"))!=0Ë
nLöked
++;

7768 i‡((
pglPrimôiveRe°¨tIndexNV
 = (
PFNGLPRIMITIVERESTARTINDEXNVPROC
Ë
	`__GLìGëProcAddªss
("glPrimôiveRe°¨tIndexNV"))!=0Ë
nLöked
++;

7770 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

7771 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7772  
GLEE_LINK_PARTIAL
;

7773 
	}
}

7775 
GLuöt
 
	$__GLìLök_GL_NV_ãxtuª_ex∑nd_n‹mÆ
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7777 
GLuöt
 
	$__GLìLök_GL_NV_vîãx_¥ogøm2
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7779 
GLuöt
 
	$__GLìLök_GL_ATI_m≠_obje˘_buf„r
()

7781 
GLöt
 
nLöked
=0;

7782 #ifde‡
__GLEE_GL_ATI_m≠_obje˘_buf„r


7783 i‡((
pglM≠Obje˘Buf„rATI
 = (
PFNGLMAPOBJECTBUFFERATIPROC
Ë
	`__GLìGëProcAddªss
("glM≠Obje˘Buf„rATI"))!=0Ë
nLöked
++;

7784 i‡((
pglUnm≠Obje˘Buf„rATI
 = (
PFNGLUNMAPOBJECTBUFFERATIPROC
Ë
	`__GLìGëProcAddªss
("glUnm≠Obje˘Buf„rATI"))!=0Ë
nLöked
++;

7786 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

7787 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7788  
GLEE_LINK_PARTIAL
;

7789 
	}
}

7791 
GLuöt
 
	$__GLìLök_GL_ATI_£∑øã_°ícû
()

7793 
GLöt
 
nLöked
=0;

7794 #ifde‡
__GLEE_GL_ATI_£∑øã_°ícû


7795 i‡((
pglSãncûOpSï¨©eATI
 = (
PFNGLSTENCILOPSEPARATEATIPROC
Ë
	`__GLìGëProcAddªss
("glSãncûOpSï¨©eATI"))!=0Ë
nLöked
++;

7796 i‡((
pglSãncûFuncSï¨©eATI
 = (
PFNGLSTENCILFUNCSEPARATEATIPROC
Ë
	`__GLìGëProcAddªss
("glSãncûFuncSï¨©eATI"))!=0Ë
nLöked
++;

7798 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

7799 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7800  
GLEE_LINK_PARTIAL
;

7801 
	}
}

7803 
GLuöt
 
	$__GLìLök_GL_ATI_vîãx_©åib_¨øy_obje˘
()

7805 
GLöt
 
nLöked
=0;

7806 #ifde‡
__GLEE_GL_ATI_vîãx_©åib_¨øy_obje˘


7807 i‡((
pglVîãxAâribAºayObje˘ATI
 = (
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribAºayObje˘ATI"))!=0Ë
nLöked
++;

7808 i‡((
pglGëVîãxAâribAºayObje˘fvATI
 = (
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC
Ë
	`__GLìGëProcAddªss
("glGëVîãxAâribAºayObje˘fvATI"))!=0Ë
nLöked
++;

7809 i‡((
pglGëVîãxAâribAºayObje˘ivATI
 = (
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC
Ë
	`__GLìGëProcAddªss
("glGëVîãxAâribAºayObje˘ivATI"))!=0Ë
nLöked
++;

7811 i‡(
nLöked
==3Ë 
GLEE_LINK_COMPLETE
;

7812 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7813  
GLEE_LINK_PARTIAL
;

7814 
	}
}

7816 
GLuöt
 
	$__GLìLök_GL_OES_ªad_f‹m©
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7818 
GLuöt
 
	$__GLìLök_GL_EXT_dïth_bounds_ã°
()

7820 
GLöt
 
nLöked
=0;

7821 #ifde‡
__GLEE_GL_EXT_dïth_bounds_ã°


7822 i‡((
pglDïthBoundsEXT
 = (
PFNGLDEPTHBOUNDSEXTPROC
Ë
	`__GLìGëProcAddªss
("glDïthBoundsEXT"))!=0Ë
nLöked
++;

7824 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

7825 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7826  
GLEE_LINK_PARTIAL
;

7827 
	}
}

7829 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_múr‹_˛amp
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7831 
GLuöt
 
	$__GLìLök_GL_EXT_bÀnd_equ©i⁄_£∑øã
()

7833 
GLöt
 
nLöked
=0;

7834 #ifde‡
__GLEE_GL_EXT_bÀnd_equ©i⁄_£∑øã


7835 i‡((
pglBÀndEqu©i⁄Sï¨©eEXT
 = (
PFNGLBLENDEQUATIONSEPARATEEXTPROC
Ë
	`__GLìGëProcAddªss
("glBÀndEqu©i⁄Sï¨©eEXT"))!=0Ë
nLöked
++;

7837 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

7838 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7839  
GLEE_LINK_PARTIAL
;

7840 
	}
}

7842 
GLuöt
 
	$__GLìLök_GL_MESA_∑ck_övît
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7844 
GLuöt
 
	$__GLìLök_GL_MESA_ycb¸_ãxtuª
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7846 
GLuöt
 
	$__GLìLök_GL_EXT_pixñ_buf„r_obje˘
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7848 
GLuöt
 
	$__GLìLök_GL_NV_‰agmít_¥ogøm_›ti⁄
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7850 
GLuöt
 
	$__GLìLök_GL_NV_‰agmít_¥ogøm2
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7852 
GLuöt
 
	$__GLìLök_GL_NV_vîãx_¥ogøm2_›ti⁄
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7854 
GLuöt
 
	$__GLìLök_GL_NV_vîãx_¥ogøm3
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7856 
GLuöt
 
	$__GLìLök_GL_EXT_‰amebuf„r_obje˘
()

7858 
GLöt
 
nLöked
=0;

7859 #ifde‡
__GLEE_GL_EXT_‰amebuf„r_obje˘


7860 i‡((
pglIsRídîbuf„rEXT
 = (
PFNGLISRENDERBUFFEREXTPROC
Ë
	`__GLìGëProcAddªss
("glIsRídîbuf„rEXT"))!=0Ë
nLöked
++;

7861 i‡((
pglBödRídîbuf„rEXT
 = (
PFNGLBINDRENDERBUFFEREXTPROC
Ë
	`__GLìGëProcAddªss
("glBödRídîbuf„rEXT"))!=0Ë
nLöked
++;

7862 i‡((
pglDñëeRídîbuf„rsEXT
 = (
PFNGLDELETERENDERBUFFERSEXTPROC
Ë
	`__GLìGëProcAddªss
("glDñëeRídîbuf„rsEXT"))!=0Ë
nLöked
++;

7863 i‡((
pglGíRídîbuf„rsEXT
 = (
PFNGLGENRENDERBUFFERSEXTPROC
Ë
	`__GLìGëProcAddªss
("glGíRídîbuf„rsEXT"))!=0Ë
nLöked
++;

7864 i‡((
pglRídîbuf„rSt‹ageEXT
 = (
PFNGLRENDERBUFFERSTORAGEEXTPROC
Ë
	`__GLìGëProcAddªss
("glRídîbuf„rSt‹ageEXT"))!=0Ë
nLöked
++;

7865 i‡((
pglGëRídîbuf„rP¨amëîivEXT
 = (
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëRídîbuf„rP¨amëîivEXT"))!=0Ë
nLöked
++;

7866 i‡((
pglIsFømebuf„rEXT
 = (
PFNGLISFRAMEBUFFEREXTPROC
Ë
	`__GLìGëProcAddªss
("glIsFømebuf„rEXT"))!=0Ë
nLöked
++;

7867 i‡((
pglBödFømebuf„rEXT
 = (
PFNGLBINDFRAMEBUFFEREXTPROC
Ë
	`__GLìGëProcAddªss
("glBödFømebuf„rEXT"))!=0Ë
nLöked
++;

7868 i‡((
pglDñëeFømebuf„rsEXT
 = (
PFNGLDELETEFRAMEBUFFERSEXTPROC
Ë
	`__GLìGëProcAddªss
("glDñëeFømebuf„rsEXT"))!=0Ë
nLöked
++;

7869 i‡((
pglGíFømebuf„rsEXT
 = (
PFNGLGENFRAMEBUFFERSEXTPROC
Ë
	`__GLìGëProcAddªss
("glGíFømebuf„rsEXT"))!=0Ë
nLöked
++;

7870 i‡((
pglCheckFømebuf„rSètusEXT
 = (
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC
Ë
	`__GLìGëProcAddªss
("glCheckFømebuf„rSètusEXT"))!=0Ë
nLöked
++;

7871 i‡((
pglFømebuf„rTextuª1DEXT
 = (
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC
Ë
	`__GLìGëProcAddªss
("glFømebuf„rTextuª1DEXT"))!=0Ë
nLöked
++;

7872 i‡((
pglFømebuf„rTextuª2DEXT
 = (
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC
Ë
	`__GLìGëProcAddªss
("glFømebuf„rTextuª2DEXT"))!=0Ë
nLöked
++;

7873 i‡((
pglFømebuf„rTextuª3DEXT
 = (
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC
Ë
	`__GLìGëProcAddªss
("glFømebuf„rTextuª3DEXT"))!=0Ë
nLöked
++;

7874 i‡((
pglFømebuf„rRídîbuf„rEXT
 = (
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC
Ë
	`__GLìGëProcAddªss
("glFømebuf„rRídîbuf„rEXT"))!=0Ë
nLöked
++;

7875 i‡((
pglGëFømebuf„rAâachmítP¨amëîivEXT
 = (
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëFømebuf„rAâachmítP¨amëîivEXT"))!=0Ë
nLöked
++;

7876 i‡((
pglGíî©eMùm≠EXT
 = (
PFNGLGENERATEMIPMAPEXTPROC
Ë
	`__GLìGëProcAddªss
("glGíî©eMùm≠EXT"))!=0Ë
nLöked
++;

7878 i‡(
nLöked
==17Ë 
GLEE_LINK_COMPLETE
;

7879 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7880  
GLEE_LINK_PARTIAL
;

7881 
	}
}

7883 
GLuöt
 
	$__GLìLök_GL_GREMEDY_°rög_m¨kî
()

7885 
GLöt
 
nLöked
=0;

7886 #ifde‡
__GLEE_GL_GREMEDY_°rög_m¨kî


7887 i‡((
pglSåögM¨kîGREMEDY
 = (
PFNGLSTRINGMARKERGREMEDYPROC
Ë
	`__GLìGëProcAddªss
("glSåögM¨kîGREMEDY"))!=0Ë
nLöked
++;

7889 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

7890 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7891  
GLEE_LINK_PARTIAL
;

7892 
	}
}

7894 
GLuöt
 
	$__GLìLök_GL_EXT_Cg_shadî
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7896 
GLuöt
 
	$__GLìLök_GL_EXT_timî_quîy
()

7898 
GLöt
 
nLöked
=0;

7899 #ifde‡
__GLEE_GL_EXT_timî_quîy


7900 i‡((
pglGëQuîyObje˘i64vEXT
 = (
PFNGLGETQUERYOBJECTI64VEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëQuîyObje˘i64vEXT"))!=0Ë
nLöked
++;

7901 i‡((
pglGëQuîyObje˘ui64vEXT
 = (
PFNGLGETQUERYOBJECTUI64VEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëQuîyObje˘ui64vEXT"))!=0Ë
nLöked
++;

7903 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

7904 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7905  
GLEE_LINK_PARTIAL
;

7906 
	}
}

7908 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_buf„r_obje˘
()

7910 
GLöt
 
nLöked
=0;

7911 #ifde‡
__GLEE_GL_EXT_ãxtuª_buf„r_obje˘


7912 i‡((
pglTexBuf„rEXT
 = (
PFNGLTEXBUFFEREXTPROC
Ë
	`__GLìGëProcAddªss
("glTexBuf„rEXT"))!=0Ë
nLöked
++;

7914 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

7915 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7916  
GLEE_LINK_PARTIAL
;

7917 
	}
}

7919 
GLuöt
 
	$__GLìLök_GL_EXT_gpu_shadî4
()

7921 
GLöt
 
nLöked
=0;

7922 #ifde‡
__GLEE_GL_EXT_gpu_shadî4


7923 i‡((
pglGëUnif‹muivEXT
 = (
PFNGLGETUNIFORMUIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëUnif‹muivEXT"))!=0Ë
nLöked
++;

7924 i‡((
pglBödFøgD©aLoˇti⁄EXT
 = (
PFNGLBINDFRAGDATALOCATIONEXTPROC
Ë
	`__GLìGëProcAddªss
("glBödFøgD©aLoˇti⁄EXT"))!=0Ë
nLöked
++;

7925 i‡((
pglGëFøgD©aLoˇti⁄EXT
 = (
PFNGLGETFRAGDATALOCATIONEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëFøgD©aLoˇti⁄EXT"))!=0Ë
nLöked
++;

7926 i‡((
pglUnif‹m1uiEXT
 = (
PFNGLUNIFORM1UIEXTPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m1uiEXT"))!=0Ë
nLöked
++;

7927 i‡((
pglUnif‹m2uiEXT
 = (
PFNGLUNIFORM2UIEXTPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m2uiEXT"))!=0Ë
nLöked
++;

7928 i‡((
pglUnif‹m3uiEXT
 = (
PFNGLUNIFORM3UIEXTPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m3uiEXT"))!=0Ë
nLöked
++;

7929 i‡((
pglUnif‹m4uiEXT
 = (
PFNGLUNIFORM4UIEXTPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m4uiEXT"))!=0Ë
nLöked
++;

7930 i‡((
pglUnif‹m1uivEXT
 = (
PFNGLUNIFORM1UIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m1uivEXT"))!=0Ë
nLöked
++;

7931 i‡((
pglUnif‹m2uivEXT
 = (
PFNGLUNIFORM2UIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m2uivEXT"))!=0Ë
nLöked
++;

7932 i‡((
pglUnif‹m3uivEXT
 = (
PFNGLUNIFORM3UIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m3uivEXT"))!=0Ë
nLöked
++;

7933 i‡((
pglUnif‹m4uivEXT
 = (
PFNGLUNIFORM4UIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹m4uivEXT"))!=0Ë
nLöked
++;

7934 i‡((
pglVîãxAâribI1iEXT
 = (
PFNGLVERTEXATTRIBI1IEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI1iEXT"))!=0Ë
nLöked
++;

7935 i‡((
pglVîãxAâribI2iEXT
 = (
PFNGLVERTEXATTRIBI2IEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI2iEXT"))!=0Ë
nLöked
++;

7936 i‡((
pglVîãxAâribI3iEXT
 = (
PFNGLVERTEXATTRIBI3IEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI3iEXT"))!=0Ë
nLöked
++;

7937 i‡((
pglVîãxAâribI4iEXT
 = (
PFNGLVERTEXATTRIBI4IEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI4iEXT"))!=0Ë
nLöked
++;

7938 i‡((
pglVîãxAâribI1uiEXT
 = (
PFNGLVERTEXATTRIBI1UIEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI1uiEXT"))!=0Ë
nLöked
++;

7939 i‡((
pglVîãxAâribI2uiEXT
 = (
PFNGLVERTEXATTRIBI2UIEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI2uiEXT"))!=0Ë
nLöked
++;

7940 i‡((
pglVîãxAâribI3uiEXT
 = (
PFNGLVERTEXATTRIBI3UIEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI3uiEXT"))!=0Ë
nLöked
++;

7941 i‡((
pglVîãxAâribI4uiEXT
 = (
PFNGLVERTEXATTRIBI4UIEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI4uiEXT"))!=0Ë
nLöked
++;

7942 i‡((
pglVîãxAâribI1ivEXT
 = (
PFNGLVERTEXATTRIBI1IVEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI1ivEXT"))!=0Ë
nLöked
++;

7943 i‡((
pglVîãxAâribI2ivEXT
 = (
PFNGLVERTEXATTRIBI2IVEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI2ivEXT"))!=0Ë
nLöked
++;

7944 i‡((
pglVîãxAâribI3ivEXT
 = (
PFNGLVERTEXATTRIBI3IVEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI3ivEXT"))!=0Ë
nLöked
++;

7945 i‡((
pglVîãxAâribI4ivEXT
 = (
PFNGLVERTEXATTRIBI4IVEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI4ivEXT"))!=0Ë
nLöked
++;

7946 i‡((
pglVîãxAâribI1uivEXT
 = (
PFNGLVERTEXATTRIBI1UIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI1uivEXT"))!=0Ë
nLöked
++;

7947 i‡((
pglVîãxAâribI2uivEXT
 = (
PFNGLVERTEXATTRIBI2UIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI2uivEXT"))!=0Ë
nLöked
++;

7948 i‡((
pglVîãxAâribI3uivEXT
 = (
PFNGLVERTEXATTRIBI3UIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI3uivEXT"))!=0Ë
nLöked
++;

7949 i‡((
pglVîãxAâribI4uivEXT
 = (
PFNGLVERTEXATTRIBI4UIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI4uivEXT"))!=0Ë
nLöked
++;

7950 i‡((
pglVîãxAâribI4bvEXT
 = (
PFNGLVERTEXATTRIBI4BVEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI4bvEXT"))!=0Ë
nLöked
++;

7951 i‡((
pglVîãxAâribI4svEXT
 = (
PFNGLVERTEXATTRIBI4SVEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI4svEXT"))!=0Ë
nLöked
++;

7952 i‡((
pglVîãxAâribI4ubvEXT
 = (
PFNGLVERTEXATTRIBI4UBVEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI4ubvEXT"))!=0Ë
nLöked
++;

7953 i‡((
pglVîãxAâribI4usvEXT
 = (
PFNGLVERTEXATTRIBI4USVEXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribI4usvEXT"))!=0Ë
nLöked
++;

7954 i‡((
pglVîãxAâribIPoöãrEXT
 = (
PFNGLVERTEXATTRIBIPOINTEREXTPROC
Ë
	`__GLìGëProcAddªss
("glVîãxAâribIPoöãrEXT"))!=0Ë
nLöked
++;

7955 i‡((
pglGëVîãxAâribIivEXT
 = (
PFNGLGETVERTEXATTRIBIIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëVîãxAâribIivEXT"))!=0Ë
nLöked
++;

7956 i‡((
pglGëVîãxAâribIuivEXT
 = (
PFNGLGETVERTEXATTRIBIUIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëVîãxAâribIuivEXT"))!=0Ë
nLöked
++;

7958 i‡(
nLöked
==34Ë 
GLEE_LINK_COMPLETE
;

7959 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7960  
GLEE_LINK_PARTIAL
;

7961 
	}
}

7963 
GLuöt
 
	$__GLìLök_GL_EXT_geomëry_shadî4
()

7965 
GLöt
 
nLöked
=0;

7966 #ifde‡
__GLEE_GL_EXT_geomëry_shadî4


7967 i‡((
pglProgømP¨amëîiEXT
 = (
PFNGLPROGRAMPARAMETERIEXTPROC
Ë
	`__GLìGëProcAddªss
("glProgømP¨amëîiEXT"))!=0Ë
nLöked
++;

7968 i‡((
pglFømebuf„rTextuªEXT
 = (
PFNGLFRAMEBUFFERTEXTUREEXTPROC
Ë
	`__GLìGëProcAddªss
("glFømebuf„rTextuªEXT"))!=0Ë
nLöked
++;

7969 i‡((
pglFømebuf„rTextuªLayîEXT
 = (
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
Ë
	`__GLìGëProcAddªss
("glFømebuf„rTextuªLayîEXT"))!=0Ë
nLöked
++;

7970 i‡((
pglFømebuf„rTextuªFa˚EXT
 = (
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC
Ë
	`__GLìGëProcAddªss
("glFømebuf„rTextuªFa˚EXT"))!=0Ë
nLöked
++;

7972 i‡(
nLöked
==4Ë 
GLEE_LINK_COMPLETE
;

7973 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7974  
GLEE_LINK_PARTIAL
;

7975 
	}
}

7977 
GLuöt
 
	$__GLìLök_GL_EXT_bödabÀ_unif‹m
()

7979 
GLöt
 
nLöked
=0;

7980 #ifde‡
__GLEE_GL_EXT_bödabÀ_unif‹m


7981 i‡((
pglUnif‹mBuf„rEXT
 = (
PFNGLUNIFORMBUFFEREXTPROC
Ë
	`__GLìGëProcAddªss
("glUnif‹mBuf„rEXT"))!=0Ë
nLöked
++;

7982 i‡((
pglGëUnif‹mBuf„rSizeEXT
 = (
PFNGLGETUNIFORMBUFFERSIZEEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëUnif‹mBuf„rSizeEXT"))!=0Ë
nLöked
++;

7983 i‡((
pglGëUnif‹mOff£tEXT
 = (
PFNGLGETUNIFORMOFFSETEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëUnif‹mOff£tEXT"))!=0Ë
nLöked
++;

7985 i‡(
nLöked
==3Ë 
GLEE_LINK_COMPLETE
;

7986 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

7987  
GLEE_LINK_PARTIAL
;

7988 
	}
}

7990 
GLuöt
 
	$__GLìLök_GL_EXT_‰amebuf„r_sRGB
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7992 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_sh¨ed_exp⁄ít
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7994 
GLuöt
 
	$__GLìLök_GL_EXT_∑cked_Êﬂt
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7996 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_¨øy
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

7998 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_öãgî
()

8000 
GLöt
 
nLöked
=0;

8001 #ifde‡
__GLEE_GL_EXT_ãxtuª_öãgî


8002 i‡((
pglTexP¨amëîIivEXT
 = (
PFNGLTEXPARAMETERIIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glTexP¨amëîIivEXT"))!=0Ë
nLöked
++;

8003 i‡((
pglTexP¨amëîIuivEXT
 = (
PFNGLTEXPARAMETERIUIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glTexP¨amëîIuivEXT"))!=0Ë
nLöked
++;

8004 i‡((
pglGëTexP¨amëîIivEXT
 = (
PFNGLGETTEXPARAMETERIIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëTexP¨amëîIivEXT"))!=0Ë
nLöked
++;

8005 i‡((
pglGëTexP¨amëîIuivEXT
 = (
PFNGLGETTEXPARAMETERIUIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëTexP¨amëîIuivEXT"))!=0Ë
nLöked
++;

8006 i‡((
pglCÀ¨Cﬁ‹IiEXT
 = (
PFNGLCLEARCOLORIIEXTPROC
Ë
	`__GLìGëProcAddªss
("glCÀ¨Cﬁ‹IiEXT"))!=0Ë
nLöked
++;

8007 i‡((
pglCÀ¨Cﬁ‹IuiEXT
 = (
PFNGLCLEARCOLORIUIEXTPROC
Ë
	`__GLìGëProcAddªss
("glCÀ¨Cﬁ‹IuiEXT"))!=0Ë
nLöked
++;

8009 i‡(
nLöked
==6Ë 
GLEE_LINK_COMPLETE
;

8010 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8011  
GLEE_LINK_PARTIAL
;

8012 
	}
}

8014 
GLuöt
 
	$__GLìLök_GL_NV_dïth_buf„r_Êﬂt
()

8016 
GLöt
 
nLöked
=0;

8017 #ifde‡
__GLEE_GL_NV_dïth_buf„r_Êﬂt


8018 i‡((
pglDïthR™gedNV
 = (
PFNGLDEPTHRANGEDNVPROC
Ë
	`__GLìGëProcAddªss
("glDïthR™gedNV"))!=0Ë
nLöked
++;

8019 i‡((
pglCÀ¨DïthdNV
 = (
PFNGLCLEARDEPTHDNVPROC
Ë
	`__GLìGëProcAddªss
("glCÀ¨DïthdNV"))!=0Ë
nLöked
++;

8020 i‡((
pglDïthBoundsdNV
 = (
PFNGLDEPTHBOUNDSDNVPROC
Ë
	`__GLìGëProcAddªss
("glDïthBoundsdNV"))!=0Ë
nLöked
++;

8022 i‡(
nLöked
==3Ë 
GLEE_LINK_COMPLETE
;

8023 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8024  
GLEE_LINK_PARTIAL
;

8025 
	}
}

8027 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_com¥essi⁄_œtc
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8029 
GLuöt
 
	$__GLìLök_GL_NV_å™sf‹m_„edback
()

8031 
GLöt
 
nLöked
=0;

8032 #ifde‡
__GLEE_GL_NV_å™sf‹m_„edback


8033 i‡((
pglBegöTønsf‹mFìdbackNV
 = (
PFNGLBEGINTRANSFORMFEEDBACKNVPROC
Ë
	`__GLìGëProcAddªss
("glBegöTønsf‹mFìdbackNV"))!=0Ë
nLöked
++;

8034 i‡((
pglEndTønsf‹mFìdbackNV
 = (
PFNGLENDTRANSFORMFEEDBACKNVPROC
Ë
	`__GLìGëProcAddªss
("glEndTønsf‹mFìdbackNV"))!=0Ë
nLöked
++;

8035 i‡((
pglTønsf‹mFìdbackAâribsNV
 = (
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC
Ë
	`__GLìGëProcAddªss
("glTønsf‹mFìdbackAâribsNV"))!=0Ë
nLöked
++;

8036 i‡((
pglBödBuf„rR™geNV
 = (
PFNGLBINDBUFFERRANGENVPROC
Ë
	`__GLìGëProcAddªss
("glBödBuf„rR™geNV"))!=0Ë
nLöked
++;

8037 i‡((
pglBödBuf„rOff£tNV
 = (
PFNGLBINDBUFFEROFFSETNVPROC
Ë
	`__GLìGëProcAddªss
("glBödBuf„rOff£tNV"))!=0Ë
nLöked
++;

8038 i‡((
pglBödBuf„rBa£NV
 = (
PFNGLBINDBUFFERBASENVPROC
Ë
	`__GLìGëProcAddªss
("glBödBuf„rBa£NV"))!=0Ë
nLöked
++;

8039 i‡((
pglTønsf‹mFìdbackV¨yögsNV
 = (
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC
Ë
	`__GLìGëProcAddªss
("glTønsf‹mFìdbackV¨yögsNV"))!=0Ë
nLöked
++;

8040 i‡((
pglA˘iveV¨yögNV
 = (
PFNGLACTIVEVARYINGNVPROC
Ë
	`__GLìGëProcAddªss
("glA˘iveV¨yögNV"))!=0Ë
nLöked
++;

8041 i‡((
pglGëV¨yögLoˇti⁄NV
 = (
PFNGLGETVARYINGLOCATIONNVPROC
Ë
	`__GLìGëProcAddªss
("glGëV¨yögLoˇti⁄NV"))!=0Ë
nLöked
++;

8042 i‡((
pglGëA˘iveV¨yögNV
 = (
PFNGLGETACTIVEVARYINGNVPROC
Ë
	`__GLìGëProcAddªss
("glGëA˘iveV¨yögNV"))!=0Ë
nLöked
++;

8043 i‡((
pglGëTønsf‹mFìdbackV¨yögNV
 = (
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC
Ë
	`__GLìGëProcAddªss
("glGëTønsf‹mFìdbackV¨yögNV"))!=0Ë
nLöked
++;

8045 i‡(
nLöked
==11Ë 
GLEE_LINK_COMPLETE
;

8046 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8047  
GLEE_LINK_PARTIAL
;

8048 
	}
}

8050 
GLuöt
 
	$__GLìLök_GL_NV_geomëry_¥ogøm4
()

8052 
GLöt
 
nLöked
=0;

8053 #ifde‡
__GLEE_GL_NV_geomëry_¥ogøm4


8054 i‡((
pglProgømVîãxLimôNV
 = (
PFNGLPROGRAMVERTEXLIMITNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømVîãxLimôNV"))!=0Ë
nLöked
++;

8056 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

8057 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8058  
GLEE_LINK_PARTIAL
;

8059 
	}
}

8061 
GLuöt
 
	$__GLìLök_GL_NV_gpu_¥ogøm4
()

8063 
GLöt
 
nLöked
=0;

8064 #ifde‡
__GLEE_GL_NV_gpu_¥ogøm4


8065 i‡((
pglProgømLoˇlP¨amëîI4iNV
 = (
PFNGLPROGRAMLOCALPARAMETERI4INVPROC
Ë
	`__GLìGëProcAddªss
("glProgømLoˇlP¨amëîI4iNV"))!=0Ë
nLöked
++;

8066 i‡((
pglProgømLoˇlP¨amëîI4ivNV
 = (
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømLoˇlP¨amëîI4ivNV"))!=0Ë
nLöked
++;

8067 i‡((
pglProgømLoˇlP¨amëîsI4ivNV
 = (
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømLoˇlP¨amëîsI4ivNV"))!=0Ë
nLöked
++;

8068 i‡((
pglProgømLoˇlP¨amëîI4uiNV
 = (
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC
Ë
	`__GLìGëProcAddªss
("glProgømLoˇlP¨amëîI4uiNV"))!=0Ë
nLöked
++;

8069 i‡((
pglProgømLoˇlP¨amëîI4uivNV
 = (
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømLoˇlP¨amëîI4uivNV"))!=0Ë
nLöked
++;

8070 i‡((
pglProgømLoˇlP¨amëîsI4uivNV
 = (
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømLoˇlP¨amëîsI4uivNV"))!=0Ë
nLöked
++;

8071 i‡((
pglProgømEnvP¨amëîI4iNV
 = (
PFNGLPROGRAMENVPARAMETERI4INVPROC
Ë
	`__GLìGëProcAddªss
("glProgømEnvP¨amëîI4iNV"))!=0Ë
nLöked
++;

8072 i‡((
pglProgømEnvP¨amëîI4ivNV
 = (
PFNGLPROGRAMENVPARAMETERI4IVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømEnvP¨amëîI4ivNV"))!=0Ë
nLöked
++;

8073 i‡((
pglProgømEnvP¨amëîsI4ivNV
 = (
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømEnvP¨amëîsI4ivNV"))!=0Ë
nLöked
++;

8074 i‡((
pglProgømEnvP¨amëîI4uiNV
 = (
PFNGLPROGRAMENVPARAMETERI4UINVPROC
Ë
	`__GLìGëProcAddªss
("glProgømEnvP¨amëîI4uiNV"))!=0Ë
nLöked
++;

8075 i‡((
pglProgømEnvP¨amëîI4uivNV
 = (
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømEnvP¨amëîI4uivNV"))!=0Ë
nLöked
++;

8076 i‡((
pglProgømEnvP¨amëîsI4uivNV
 = (
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømEnvP¨amëîsI4uivNV"))!=0Ë
nLöked
++;

8077 i‡((
pglGëProgømLoˇlP¨amëîIivNV
 = (
PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømLoˇlP¨amëîIivNV"))!=0Ë
nLöked
++;

8078 i‡((
pglGëProgømLoˇlP¨amëîIuivNV
 = (
PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømLoˇlP¨amëîIuivNV"))!=0Ë
nLöked
++;

8079 i‡((
pglGëProgømEnvP¨amëîIivNV
 = (
PFNGLGETPROGRAMENVPARAMETERIIVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømEnvP¨amëîIivNV"))!=0Ë
nLöked
++;

8080 i‡((
pglGëProgømEnvP¨amëîIuivNV
 = (
PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC
Ë
	`__GLìGëProcAddªss
("glGëProgømEnvP¨amëîIuivNV"))!=0Ë
nLöked
++;

8082 i‡(
nLöked
==16Ë 
GLEE_LINK_COMPLETE
;

8083 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8084  
GLEE_LINK_PARTIAL
;

8085 
	}
}

8087 
GLuöt
 
	$__GLìLök_GL_NV_‰amebuf„r_mu…ißm∂e_covîage
()

8089 
GLöt
 
nLöked
=0;

8090 #ifde‡
__GLEE_GL_NV_‰amebuf„r_mu…ißm∂e_covîage


8091 i‡((
pglRídîbuf„rSt‹ageMu…ißm∂eCovîageNV
 = (
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC
Ë
	`__GLìGëProcAddªss
("glRídîbuf„rSt‹ageMu…ißm∂eCovîageNV"))!=0Ë
nLöked
++;

8093 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

8094 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8095  
GLEE_LINK_PARTIAL
;

8096 
	}
}

8098 
GLuöt
 
	$__GLìLök_GL_EXT_‰amebuf„r_mu…ißm∂e
()

8100 
GLöt
 
nLöked
=0;

8101 #ifde‡
__GLEE_GL_EXT_‰amebuf„r_mu…ißm∂e


8102 i‡((
pglRídîbuf„rSt‹ageMu…ißm∂eEXT
 = (
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
Ë
	`__GLìGëProcAddªss
("glRídîbuf„rSt‹ageMu…ißm∂eEXT"))!=0Ë
nLöked
++;

8104 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

8105 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8106  
GLEE_LINK_PARTIAL
;

8107 
	}
}

8109 
GLuöt
 
	$__GLìLök_GL_EXT_‰amebuf„r_blô
()

8111 
GLöt
 
nLöked
=0;

8112 #ifde‡
__GLEE_GL_EXT_‰amebuf„r_blô


8113 i‡((
pglBlôFømebuf„rEXT
 = (
PFNGLBLITFRAMEBUFFEREXTPROC
Ë
	`__GLìGëProcAddªss
("glBlôFømebuf„rEXT"))!=0Ë
nLöked
++;

8115 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

8116 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8117  
GLEE_LINK_PARTIAL
;

8118 
	}
}

8120 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_com¥essi⁄_rgtc
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8122 
GLuöt
 
	$__GLìLök_GL_EXT_cﬁ‹_m©rix
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8124 
GLuöt
 
	$__GLìLök_GL_SGIX_ãxtuª_£À˘
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8126 
GLuöt
 
	$__GLìLök_GL_INGR_bÀnd_func_£∑øã
()

8128 
GLöt
 
nLöked
=0;

8129 #ifde‡
__GLEE_GL_INGR_bÀnd_func_£∑øã


8130 i‡((
pglBÀndFuncSï¨©eINGR
 = (
PFNGLBLENDFUNCSEPARATEINGRPROC
Ë
	`__GLìGëProcAddªss
("glBÀndFuncSï¨©eINGR"))!=0Ë
nLöked
++;

8132 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

8133 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8134  
GLEE_LINK_PARTIAL
;

8135 
	}
}

8137 
GLuöt
 
	$__GLìLök_GL_SGIX_dïth_∑ss_ö°rumít
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8139 
GLuöt
 
	$__GLìLök_GL_SGIX_igloo_öãrÁ˚
()

8141 
GLöt
 
nLöked
=0;

8142 #ifde‡
__GLEE_GL_SGIX_igloo_öãrÁ˚


8143 i‡((
pglIglooI¡îÁ˚SGIX
 = (
PFNGLIGLOOINTERFACESGIXPROC
Ë
	`__GLìGëProcAddªss
("glIglooI¡îÁ˚SGIX"))!=0Ë
nLöked
++;

8145 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

8146 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8147  
GLEE_LINK_PARTIAL
;

8148 
	}
}

8150 
GLuöt
 
	$__GLìLök_GL_EXT_døw_buf„rs2
()

8152 
GLöt
 
nLöked
=0;

8153 #ifde‡
__GLEE_GL_EXT_døw_buf„rs2


8154 i‡((
pglCﬁ‹MaskIndexedEXT
 = (
PFNGLCOLORMASKINDEXEDEXTPROC
Ë
	`__GLìGëProcAddªss
("glCﬁ‹MaskIndexedEXT"))!=0Ë
nLöked
++;

8155 i‡((
pglGëBoﬁónIndexedvEXT
 = (
PFNGLGETBOOLEANINDEXEDVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëBoﬁónIndexedvEXT"))!=0Ë
nLöked
++;

8156 i‡((
pglGëI¡egîIndexedvEXT
 = (
PFNGLGETINTEGERINDEXEDVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëI¡egîIndexedvEXT"))!=0Ë
nLöked
++;

8157 i‡((
pglE«bÀIndexedEXT
 = (
PFNGLENABLEINDEXEDEXTPROC
Ë
	`__GLìGëProcAddªss
("glE«bÀIndexedEXT"))!=0Ë
nLöked
++;

8158 i‡((
pglDißbÀIndexedEXT
 = (
PFNGLDISABLEINDEXEDEXTPROC
Ë
	`__GLìGëProcAddªss
("glDißbÀIndexedEXT"))!=0Ë
nLöked
++;

8159 i‡((
pglIsE«bÀdIndexedEXT
 = (
PFNGLISENABLEDINDEXEDEXTPROC
Ë
	`__GLìGëProcAddªss
("glIsE«bÀdIndexedEXT"))!=0Ë
nLöked
++;

8161 i‡(
nLöked
==6Ë 
GLEE_LINK_COMPLETE
;

8162 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8163  
GLEE_LINK_PARTIAL
;

8164 
	}
}

8166 
GLuöt
 
	$__GLìLök_GL_NV_∑ømëî_buf„r_obje˘
()

8168 
GLöt
 
nLöked
=0;

8169 #ifde‡
__GLEE_GL_NV_∑ømëî_buf„r_obje˘


8170 i‡((
pglProgømBuf„rP¨amëîsfvNV
 = (
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømBuf„rP¨amëîsfvNV"))!=0Ë
nLöked
++;

8171 i‡((
pglProgømBuf„rP¨amëîsIivNV
 = (
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømBuf„rP¨amëîsIivNV"))!=0Ë
nLöked
++;

8172 i‡((
pglProgømBuf„rP¨amëîsIuivNV
 = (
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC
Ë
	`__GLìGëProcAddªss
("glProgømBuf„rP¨amëîsIuivNV"))!=0Ë
nLöked
++;

8174 i‡(
nLöked
==3Ë 
GLEE_LINK_COMPLETE
;

8175 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8176  
GLEE_LINK_PARTIAL
;

8177 
	}
}

8179 
GLuöt
 
	$__GLìLök_GL_EXT_døw_ö°™˚d
()

8181 
GLöt
 
nLöked
=0;

8182 #ifde‡
__GLEE_GL_EXT_døw_ö°™˚d


8183 i‡((
pglDøwAºaysIn°™˚dEXT
 = (
PFNGLDRAWARRAYSINSTANCEDEXTPROC
Ë
	`__GLìGëProcAddªss
("glDøwAºaysIn°™˚dEXT"))!=0Ë
nLöked
++;

8184 i‡((
pglDøwEÀmítsIn°™˚dEXT
 = (
PFNGLDRAWELEMENTSINSTANCEDEXTPROC
Ë
	`__GLìGëProcAddªss
("glDøwEÀmítsIn°™˚dEXT"))!=0Ë
nLöked
++;

8186 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

8187 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8188  
GLEE_LINK_PARTIAL
;

8189 
	}
}

8191 
GLuöt
 
	$__GLìLök_GL_EXT_‰agmít_lightög
()

8193 
GLöt
 
nLöked
=0;

8194 #ifde‡
__GLEE_GL_EXT_‰agmít_lightög


8195 i‡((
pglFøgmítLightModñiEXT
 = (
PFNGLFRAGMENTLIGHTMODELIEXTPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítLightModñiEXT"))!=0Ë
nLöked
++;

8196 i‡((
pglFøgmítLightModñfEXT
 = (
PFNGLFRAGMENTLIGHTMODELFEXTPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítLightModñfEXT"))!=0Ë
nLöked
++;

8197 i‡((
pglFøgmítLightModñivEXT
 = (
PFNGLFRAGMENTLIGHTMODELIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítLightModñivEXT"))!=0Ë
nLöked
++;

8198 i‡((
pglFøgmítLightModñfvEXT
 = (
PFNGLFRAGMENTLIGHTMODELFVEXTPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítLightModñfvEXT"))!=0Ë
nLöked
++;

8199 i‡((
pglFøgmítLightiEXT
 = (
PFNGLFRAGMENTLIGHTIEXTPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítLightiEXT"))!=0Ë
nLöked
++;

8200 i‡((
pglFøgmítLightfEXT
 = (
PFNGLFRAGMENTLIGHTFEXTPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítLightfEXT"))!=0Ë
nLöked
++;

8201 i‡((
pglFøgmítLightivEXT
 = (
PFNGLFRAGMENTLIGHTIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítLightivEXT"))!=0Ë
nLöked
++;

8202 i‡((
pglFøgmítLightfvEXT
 = (
PFNGLFRAGMENTLIGHTFVEXTPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítLightfvEXT"))!=0Ë
nLöked
++;

8203 i‡((
pglGëFøgmítLightivEXT
 = (
PFNGLGETFRAGMENTLIGHTIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëFøgmítLightivEXT"))!=0Ë
nLöked
++;

8204 i‡((
pglGëFøgmítLightfvEXT
 = (
PFNGLGETFRAGMENTLIGHTFVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëFøgmítLightfvEXT"))!=0Ë
nLöked
++;

8205 i‡((
pglFøgmítM©îülfEXT
 = (
PFNGLFRAGMENTMATERIALFEXTPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítM©îülfEXT"))!=0Ë
nLöked
++;

8206 i‡((
pglFøgmítM©îüliEXT
 = (
PFNGLFRAGMENTMATERIALIEXTPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítM©îüliEXT"))!=0Ë
nLöked
++;

8207 i‡((
pglFøgmítM©îülfvEXT
 = (
PFNGLFRAGMENTMATERIALFVEXTPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítM©îülfvEXT"))!=0Ë
nLöked
++;

8208 i‡((
pglFøgmítM©îülivEXT
 = (
PFNGLFRAGMENTMATERIALIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítM©îülivEXT"))!=0Ë
nLöked
++;

8209 i‡((
pglFøgmítCﬁ‹M©îülEXT
 = (
PFNGLFRAGMENTCOLORMATERIALEXTPROC
Ë
	`__GLìGëProcAddªss
("glFøgmítCﬁ‹M©îülEXT"))!=0Ë
nLöked
++;

8210 i‡((
pglGëFøgmítM©îülfvEXT
 = (
PFNGLGETFRAGMENTMATERIALFVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëFøgmítM©îülfvEXT"))!=0Ë
nLöked
++;

8211 i‡((
pglGëFøgmítM©îülivEXT
 = (
PFNGLGETFRAGMENTMATERIALIVEXTPROC
Ë
	`__GLìGëProcAddªss
("glGëFøgmítM©îülivEXT"))!=0Ë
nLöked
++;

8212 i‡((
pglLightEnviEXT
 = (
PFNGLLIGHTENVIEXTPROC
Ë
	`__GLìGëProcAddªss
("glLightEnviEXT"))!=0Ë
nLöked
++;

8214 i‡(
nLöked
==18Ë 
GLEE_LINK_COMPLETE
;

8215 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8216  
GLEE_LINK_PARTIAL
;

8217 
	}
}

8219 
GLuöt
 
	$__GLìLök_GL_EXT_∑cked_dïth_°ícû
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8221 
GLuöt
 
	$__GLìLök_GL_EXT_s˚√_m¨kî
()

8223 
GLöt
 
nLöked
=0;

8224 #ifde‡
__GLEE_GL_EXT_s˚√_m¨kî


8225 i‡((
pglBegöS˚√EXT
 = (
PFNGLBEGINSCENEEXTPROC
Ë
	`__GLìGëProcAddªss
("glBegöS˚√EXT"))!=0Ë
nLöked
++;

8226 i‡((
pglEndS˚√EXT
 = (
PFNGLENDSCENEEXTPROC
Ë
	`__GLìGëProcAddªss
("glEndS˚√EXT"))!=0Ë
nLöked
++;

8228 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

8229 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8230  
GLEE_LINK_PARTIAL
;

8231 
	}
}

8233 
GLuöt
 
	$__GLìLök_GL_EXT_°ícû_˛ór_èg
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8235 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_com¥essi⁄_dxt1
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8237 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_ív
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8239 
GLuöt
 
	$__GLìLök_GL_EXT_ãxtuª_sRGB
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8241 
GLuöt
 
	$__GLìLök_GL_IBM_°©ic_d©a
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8243 
GLuöt
 
	$__GLìLök_GL_MESAX_ãxtuª_°ack
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8245 
GLuöt
 
	$__GLìLök_GL_OES_byã_co‹dö©es
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8247 
GLuöt
 
	$__GLìLök_GL_OES_com¥es£d_∑Àâed_ãxtuª
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8249 
GLuöt
 
	$__GLìLök_GL_OES_sögÀ_¥ecisi⁄
()

8251 
GLöt
 
nLöked
=0;

8252 #ifde‡
__GLEE_GL_OES_sögÀ_¥ecisi⁄


8253 i‡((
pglDïthR™gefOES
 = (
PFNGLDEPTHRANGEFOESPROC
Ë
	`__GLìGëProcAddªss
("glDïthR™gefOES"))!=0Ë
nLöked
++;

8254 i‡((
pglFru°umfOES
 = (
PFNGLFRUSTUMFOESPROC
Ë
	`__GLìGëProcAddªss
("glFru°umfOES"))!=0Ë
nLöked
++;

8255 i‡((
pglOπhofOES
 = (
PFNGLORTHOFOESPROC
Ë
	`__GLìGëProcAddªss
("glOπhofOES"))!=0Ë
nLöked
++;

8256 i‡((
pglClùPœ√fOES
 = (
PFNGLCLIPPLANEFOESPROC
Ë
	`__GLìGëProcAddªss
("glClùPœ√fOES"))!=0Ë
nLöked
++;

8257 i‡((
pglGëClùPœ√fOES
 = (
PFNGLGETCLIPPLANEFOESPROC
Ë
	`__GLìGëProcAddªss
("glGëClùPœ√fOES"))!=0Ë
nLöked
++;

8258 i‡((
pglCÀ¨DïthfOES
 = (
PFNGLCLEARDEPTHFOESPROC
Ë
	`__GLìGëProcAddªss
("glCÀ¨DïthfOES"))!=0Ë
nLöked
++;

8260 i‡(
nLöked
==6Ë 
GLEE_LINK_COMPLETE
;

8261 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8262  
GLEE_LINK_PARTIAL
;

8263 
	}
}

8265 
GLuöt
 
	$__GLìLök_GL_SGIX_pixñ_ãxtuª_bôs
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8267 
GLuöt
 
	$__GLìLök_GL_SGIX_ãxtuª_ønge
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8269 
GLEE_LINK_FUNCTION
 
	g__GLìGLLﬂdFun˘i⁄
[300];

8271 
	$öôGLLﬂdFun˘i⁄s
()

8273 
__GLìGLLﬂdFun˘i⁄
[0]=
__GLìLök_GL_VERSION_1_2
;

8274 
__GLìGLLﬂdFun˘i⁄
[1]=
__GLìLök_GL_ARB_imagög
;

8275 
__GLìGLLﬂdFun˘i⁄
[2]=
__GLìLök_GL_VERSION_1_3
;

8276 
__GLìGLLﬂdFun˘i⁄
[3]=
__GLìLök_GL_VERSION_1_4
;

8277 
__GLìGLLﬂdFun˘i⁄
[4]=
__GLìLök_GL_VERSION_1_5
;

8278 
__GLìGLLﬂdFun˘i⁄
[5]=
__GLìLök_GL_VERSION_2_0
;

8279 
__GLìGLLﬂdFun˘i⁄
[6]=
__GLìLök_GL_VERSION_2_1
;

8280 
__GLìGLLﬂdFun˘i⁄
[7]=
__GLìLök_GL_ARB_mu…ôextuª
;

8281 
__GLìGLLﬂdFun˘i⁄
[8]=
__GLìLök_GL_ARB_å™•o£_m©rix
;

8282 
__GLìGLLﬂdFun˘i⁄
[9]=
__GLìLök_GL_ARB_mu…ißm∂e
;

8283 
__GLìGLLﬂdFun˘i⁄
[10]=
__GLìLök_GL_ARB_ãxtuª_ív_add
;

8284 
__GLìGLLﬂdFun˘i⁄
[11]=
__GLìLök_GL_ARB_ãxtuª_cube_m≠
;

8285 
__GLìGLLﬂdFun˘i⁄
[12]=
__GLìLök_GL_ARB_ãxtuª_com¥essi⁄
;

8286 
__GLìGLLﬂdFun˘i⁄
[13]=
__GLìLök_GL_ARB_ãxtuª_b‹dî_˛amp
;

8287 
__GLìGLLﬂdFun˘i⁄
[14]=
__GLìLök_GL_ARB_poöt_∑ømëîs
;

8288 
__GLìGLLﬂdFun˘i⁄
[15]=
__GLìLök_GL_ARB_vîãx_bÀnd
;

8289 
__GLìGLLﬂdFun˘i⁄
[16]=
__GLìLök_GL_ARB_m©rix_∑Àâe
;

8290 
__GLìGLLﬂdFun˘i⁄
[17]=
__GLìLök_GL_ARB_ãxtuª_ív_comböe
;

8291 
__GLìGLLﬂdFun˘i⁄
[18]=
__GLìLök_GL_ARB_ãxtuª_ív_¸ossb¨
;

8292 
__GLìGLLﬂdFun˘i⁄
[19]=
__GLìLök_GL_ARB_ãxtuª_ív_dŸ3
;

8293 
__GLìGLLﬂdFun˘i⁄
[20]=
__GLìLök_GL_ARB_ãxtuª_múr‹ed_ª≥©
;

8294 
__GLìGLLﬂdFun˘i⁄
[21]=
__GLìLök_GL_ARB_dïth_ãxtuª
;

8295 
__GLìGLLﬂdFun˘i⁄
[22]=
__GLìLök_GL_ARB_shadow
;

8296 
__GLìGLLﬂdFun˘i⁄
[23]=
__GLìLök_GL_ARB_shadow_ambõ¡
;

8297 
__GLìGLLﬂdFun˘i⁄
[24]=
__GLìLök_GL_ARB_wödow_pos
;

8298 
__GLìGLLﬂdFun˘i⁄
[25]=
__GLìLök_GL_ARB_vîãx_¥ogøm
;

8299 
__GLìGLLﬂdFun˘i⁄
[26]=
__GLìLök_GL_ARB_‰agmít_¥ogøm
;

8300 
__GLìGLLﬂdFun˘i⁄
[27]=
__GLìLök_GL_ARB_vîãx_buf„r_obje˘
;

8301 
__GLìGLLﬂdFun˘i⁄
[28]=
__GLìLök_GL_ARB_oc˛usi⁄_quîy
;

8302 
__GLìGLLﬂdFun˘i⁄
[29]=
__GLìLök_GL_ARB_shadî_obje˘s
;

8303 
__GLìGLLﬂdFun˘i⁄
[30]=
__GLìLök_GL_ARB_vîãx_shadî
;

8304 
__GLìGLLﬂdFun˘i⁄
[31]=
__GLìLök_GL_ARB_‰agmít_shadî
;

8305 
__GLìGLLﬂdFun˘i⁄
[32]=
__GLìLök_GL_ARB_shadög_œnguage_100
;

8306 
__GLìGLLﬂdFun˘i⁄
[33]=
__GLìLök_GL_ARB_ãxtuª_n⁄_powî_of_two
;

8307 
__GLìGLLﬂdFun˘i⁄
[34]=
__GLìLök_GL_ARB_poöt_•rôe
;

8308 
__GLìGLLﬂdFun˘i⁄
[35]=
__GLìLök_GL_ARB_‰agmít_¥ogøm_shadow
;

8309 
__GLìGLLﬂdFun˘i⁄
[36]=
__GLìLök_GL_ARB_døw_buf„rs
;

8310 
__GLìGLLﬂdFun˘i⁄
[37]=
__GLìLök_GL_ARB_ãxtuª_ª˘™gÀ
;

8311 
__GLìGLLﬂdFun˘i⁄
[38]=
__GLìLök_GL_ARB_cﬁ‹_buf„r_Êﬂt
;

8312 
__GLìGLLﬂdFun˘i⁄
[39]=
__GLìLök_GL_ARB_hÆf_Êﬂt_pixñ
;

8313 
__GLìGLLﬂdFun˘i⁄
[40]=
__GLìLök_GL_ARB_ãxtuª_Êﬂt
;

8314 
__GLìGLLﬂdFun˘i⁄
[41]=
__GLìLök_GL_ARB_pixñ_buf„r_obje˘
;

8315 
__GLìGLLﬂdFun˘i⁄
[42]=
__GLìLök_GL_EXT_abgr
;

8316 
__GLìGLLﬂdFun˘i⁄
[43]=
__GLìLök_GL_EXT_bÀnd_cﬁ‹
;

8317 
__GLìGLLﬂdFun˘i⁄
[44]=
__GLìLök_GL_EXT_pﬁyg⁄_off£t
;

8318 
__GLìGLLﬂdFun˘i⁄
[45]=
__GLìLök_GL_EXT_ãxtuª
;

8319 
__GLìGLLﬂdFun˘i⁄
[46]=
__GLìLök_GL_EXT_ãxtuª3D
;

8320 
__GLìGLLﬂdFun˘i⁄
[47]=
__GLìLök_GL_SGIS_ãxtuª_fûãr4
;

8321 
__GLìGLLﬂdFun˘i⁄
[48]=
__GLìLök_GL_EXT_subãxtuª
;

8322 
__GLìGLLﬂdFun˘i⁄
[49]=
__GLìLök_GL_EXT_c›y_ãxtuª
;

8323 
__GLìGLLﬂdFun˘i⁄
[50]=
__GLìLök_GL_EXT_hi°ogøm
;

8324 
__GLìGLLﬂdFun˘i⁄
[51]=
__GLìLök_GL_EXT_c⁄vﬁuti⁄
;

8325 
__GLìGLLﬂdFun˘i⁄
[52]=
__GLìLök_GL_SGI_cﬁ‹_m©rix
;

8326 
__GLìGLLﬂdFun˘i⁄
[53]=
__GLìLök_GL_SGI_cﬁ‹_èbÀ
;

8327 
__GLìGLLﬂdFun˘i⁄
[54]=
__GLìLök_GL_SGIS_pixñ_ãxtuª
;

8328 
__GLìGLLﬂdFun˘i⁄
[55]=
__GLìLök_GL_SGIX_pixñ_ãxtuª
;

8329 
__GLìGLLﬂdFun˘i⁄
[56]=
__GLìLök_GL_SGIS_ãxtuª4D
;

8330 
__GLìGLLﬂdFun˘i⁄
[57]=
__GLìLök_GL_SGI_ãxtuª_cﬁ‹_èbÀ
;

8331 
__GLìGLLﬂdFun˘i⁄
[58]=
__GLìLök_GL_EXT_cmyka
;

8332 
__GLìGLLﬂdFun˘i⁄
[59]=
__GLìLök_GL_EXT_ãxtuª_obje˘
;

8333 
__GLìGLLﬂdFun˘i⁄
[60]=
__GLìLök_GL_SGIS_dëaû_ãxtuª
;

8334 
__GLìGLLﬂdFun˘i⁄
[61]=
__GLìLök_GL_SGIS_sh¨≥n_ãxtuª
;

8335 
__GLìGLLﬂdFun˘i⁄
[62]=
__GLìLök_GL_EXT_∑cked_pixñs
;

8336 
__GLìGLLﬂdFun˘i⁄
[63]=
__GLìLök_GL_SGIS_ãxtuª_lod
;

8337 
__GLìGLLﬂdFun˘i⁄
[64]=
__GLìLök_GL_SGIS_mu…ißm∂e
;

8338 
__GLìGLLﬂdFun˘i⁄
[65]=
__GLìLök_GL_EXT_ªsˇÀ_n‹mÆ
;

8339 
__GLìGLLﬂdFun˘i⁄
[66]=
__GLìLök_GL_EXT_vîãx_¨øy
;

8340 
__GLìGLLﬂdFun˘i⁄
[67]=
__GLìLök_GL_EXT_misc_©åibuã
;

8341 
__GLìGLLﬂdFun˘i⁄
[68]=
__GLìLök_GL_SGIS_gíî©e_mùm≠
;

8342 
__GLìGLLﬂdFun˘i⁄
[69]=
__GLìLök_GL_SGIX_˛ùm≠
;

8343 
__GLìGLLﬂdFun˘i⁄
[70]=
__GLìLök_GL_SGIX_shadow
;

8344 
__GLìGLLﬂdFun˘i⁄
[71]=
__GLìLök_GL_SGIS_ãxtuª_edge_˛amp
;

8345 
__GLìGLLﬂdFun˘i⁄
[72]=
__GLìLök_GL_SGIS_ãxtuª_b‹dî_˛amp
;

8346 
__GLìGLLﬂdFun˘i⁄
[73]=
__GLìLök_GL_EXT_bÀnd_mömax
;

8347 
__GLìGLLﬂdFun˘i⁄
[74]=
__GLìLök_GL_EXT_bÀnd_subåa˘
;

8348 
__GLìGLLﬂdFun˘i⁄
[75]=
__GLìLök_GL_EXT_bÀnd_logic_›
;

8349 
__GLìGLLﬂdFun˘i⁄
[76]=
__GLìLök_GL_SGIX_öãæa˚
;

8350 
__GLìGLLﬂdFun˘i⁄
[77]=
__GLìLök_GL_SGIX_pixñ_tûes
;

8351 
__GLìGLLﬂdFun˘i⁄
[78]=
__GLìLök_GL_SGIS_ãxtuª_£À˘
;

8352 
__GLìGLLﬂdFun˘i⁄
[79]=
__GLìLök_GL_SGIX_•rôe
;

8353 
__GLìGLLﬂdFun˘i⁄
[80]=
__GLìLök_GL_SGIX_ãxtuª_mu…i_buf„r
;

8354 
__GLìGLLﬂdFun˘i⁄
[81]=
__GLìLök_GL_EXT_poöt_∑ømëîs
;

8355 
__GLìGLLﬂdFun˘i⁄
[82]=
__GLìLök_GL_SGIS_poöt_∑ømëîs
;

8356 
__GLìGLLﬂdFun˘i⁄
[83]=
__GLìLök_GL_SGIX_ö°rumíts
;

8357 
__GLìGLLﬂdFun˘i⁄
[84]=
__GLìLök_GL_SGIX_ãxtuª_sˇÀ_büs
;

8358 
__GLìGLLﬂdFun˘i⁄
[85]=
__GLìLök_GL_SGIX_‰amezoom
;

8359 
__GLìGLLﬂdFun˘i⁄
[86]=
__GLìLök_GL_SGIX_èg_ßm∂e_buf„r
;

8360 
__GLìGLLﬂdFun˘i⁄
[87]=
__GLìLök_GL_FfdMaskSGIX
;

8361 
__GLìGLLﬂdFun˘i⁄
[88]=
__GLìLök_GL_SGIX_pﬁynomül_ffd
;

8362 
__GLìGLLﬂdFun˘i⁄
[89]=
__GLìLök_GL_SGIX_ª„ªn˚_∂™e
;

8363 
__GLìGLLﬂdFun˘i⁄
[90]=
__GLìLök_GL_SGIX_Êush_ø°î
;

8364 
__GLìGLLﬂdFun˘i⁄
[91]=
__GLìLök_GL_SGIX_dïth_ãxtuª
;

8365 
__GLìGLLﬂdFun˘i⁄
[92]=
__GLìLök_GL_SGIS_fog_fun˘i⁄
;

8366 
__GLìGLLﬂdFun˘i⁄
[93]=
__GLìLök_GL_SGIX_fog_off£t
;

8367 
__GLìGLLﬂdFun˘i⁄
[94]=
__GLìLök_GL_HP_image_å™sf‹m
;

8368 
__GLìGLLﬂdFun˘i⁄
[95]=
__GLìLök_GL_HP_c⁄vﬁuti⁄_b‹dî_modes
;

8369 
__GLìGLLﬂdFun˘i⁄
[96]=
__GLìLök_GL_INGR_∑Àâe_buf„r
;

8370 
__GLìGLLﬂdFun˘i⁄
[97]=
__GLìLök_GL_SGIX_ãxtuª_add_ív
;

8371 
__GLìGLLﬂdFun˘i⁄
[98]=
__GLìLök_GL_EXT_cﬁ‹_subèbÀ
;

8372 
__GLìGLLﬂdFun˘i⁄
[99]=
__GLìLök_GL_PGI_vîãx_höts
;

8373 
__GLìGLLﬂdFun˘i⁄
[100]=
__GLìLök_GL_PGI_misc_höts
;

8374 
__GLìGLLﬂdFun˘i⁄
[101]=
__GLìLök_GL_EXT_∑Àâed_ãxtuª
;

8375 
__GLìGLLﬂdFun˘i⁄
[102]=
__GLìLök_GL_EXT_˛ù_vﬁume_höt
;

8376 
__GLìGLLﬂdFun˘i⁄
[103]=
__GLìLök_GL_SGIX_li°_¥i‹ôy
;

8377 
__GLìGLLﬂdFun˘i⁄
[104]=
__GLìLök_GL_SGIX_ú_ö°rumít1
;

8378 
__GLìGLLﬂdFun˘i⁄
[105]=
__GLìLök_GL_SGIX_ˇŒigøphic_‰agmít
;

8379 
__GLìGLLﬂdFun˘i⁄
[106]=
__GLìLök_GL_SGIX_ãxtuª_lod_büs
;

8380 
__GLìGLLﬂdFun˘i⁄
[107]=
__GLìLök_GL_SGIX_shadow_ambõ¡
;

8381 
__GLìGLLﬂdFun˘i⁄
[108]=
__GLìLök_GL_EXT_ödex_ãxtuª
;

8382 
__GLìGLLﬂdFun˘i⁄
[109]=
__GLìLök_GL_EXT_ödex_m©îül
;

8383 
__GLìGLLﬂdFun˘i⁄
[110]=
__GLìLök_GL_EXT_ödex_func
;

8384 
__GLìGLLﬂdFun˘i⁄
[111]=
__GLìLök_GL_EXT_ödex_¨øy_f‹m©s
;

8385 
__GLìGLLﬂdFun˘i⁄
[112]=
__GLìLök_GL_EXT_compûed_vîãx_¨øy
;

8386 
__GLìGLLﬂdFun˘i⁄
[113]=
__GLìLök_GL_EXT_cuŒ_vîãx
;

8387 
__GLìGLLﬂdFun˘i⁄
[114]=
__GLìLök_GL_SGIX_y¸cb
;

8388 
__GLìGLLﬂdFun˘i⁄
[115]=
__GLìLök_GL_SGIX_‰agmít_lightög
;

8389 
__GLìGLLﬂdFun˘i⁄
[116]=
__GLìLök_GL_IBM_ø°îpos_˛ù
;

8390 
__GLìGLLﬂdFun˘i⁄
[117]=
__GLìLök_GL_HP_ãxtuª_lightög
;

8391 
__GLìGLLﬂdFun˘i⁄
[118]=
__GLìLök_GL_EXT_døw_ønge_ñemíts
;

8392 
__GLìGLLﬂdFun˘i⁄
[119]=
__GLìLök_GL_WIN_ph⁄g_shadög
;

8393 
__GLìGLLﬂdFun˘i⁄
[120]=
__GLìLök_GL_WIN_•ecuœr_fog
;

8394 
__GLìGLLﬂdFun˘i⁄
[121]=
__GLìLök_GL_EXT_light_ãxtuª
;

8395 
__GLìGLLﬂdFun˘i⁄
[122]=
__GLìLök_GL_SGIX_bÀnd_Æpha_mömax
;

8396 
__GLìGLLﬂdFun˘i⁄
[123]=
__GLìLök_GL_SGIX_im∑˘_pixñ_ãxtuª
;

8397 
__GLìGLLﬂdFun˘i⁄
[124]=
__GLìLök_GL_EXT_bgø
;

8398 
__GLìGLLﬂdFun˘i⁄
[125]=
__GLìLök_GL_SGIX_async
;

8399 
__GLìGLLﬂdFun˘i⁄
[126]=
__GLìLök_GL_SGIX_async_pixñ
;

8400 
__GLìGLLﬂdFun˘i⁄
[127]=
__GLìLök_GL_SGIX_async_hi°ogøm
;

8401 
__GLìGLLﬂdFun˘i⁄
[128]=
__GLìLök_GL_INTEL_ãxtuª_sciss‹
;

8402 
__GLìGLLﬂdFun˘i⁄
[129]=
__GLìLök_GL_INTEL_∑øŒñ_¨øys
;

8403 
__GLìGLLﬂdFun˘i⁄
[130]=
__GLìLök_GL_HP_oc˛usi⁄_ã°
;

8404 
__GLìGLLﬂdFun˘i⁄
[131]=
__GLìLök_GL_EXT_pixñ_å™sf‹m
;

8405 
__GLìGLLﬂdFun˘i⁄
[132]=
__GLìLök_GL_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ
;

8406 
__GLìGLLﬂdFun˘i⁄
[133]=
__GLìLök_GL_EXT_sh¨ed_ãxtuª_∑Àâe
;

8407 
__GLìGLLﬂdFun˘i⁄
[134]=
__GLìLök_GL_EXT_£∑øã_•ecuœr_cﬁ‹
;

8408 
__GLìGLLﬂdFun˘i⁄
[135]=
__GLìLök_GL_EXT_£c⁄d¨y_cﬁ‹
;

8409 
__GLìGLLﬂdFun˘i⁄
[136]=
__GLìLök_GL_EXT_ãxtuª_≥πurb_n‹mÆ
;

8410 
__GLìGLLﬂdFun˘i⁄
[137]=
__GLìLök_GL_EXT_mu…i_døw_¨øys
;

8411 
__GLìGLLﬂdFun˘i⁄
[138]=
__GLìLök_GL_EXT_fog_co‹d
;

8412 
__GLìGLLﬂdFun˘i⁄
[139]=
__GLìLök_GL_REND_s¸ìn_co‹dö©es
;

8413 
__GLìGLLﬂdFun˘i⁄
[140]=
__GLìLök_GL_EXT_co‹dö©e_‰ame
;

8414 
__GLìGLLﬂdFun˘i⁄
[141]=
__GLìLök_GL_EXT_ãxtuª_ív_comböe
;

8415 
__GLìGLLﬂdFun˘i⁄
[142]=
__GLìLök_GL_APPLE_•ecuœr_ve˘‹
;

8416 
__GLìGLLﬂdFun˘i⁄
[143]=
__GLìLök_GL_APPLE_å™sf‹m_höt
;

8417 
__GLìGLLﬂdFun˘i⁄
[144]=
__GLìLök_GL_SGIX_fog_sˇÀ
;

8418 
__GLìGLLﬂdFun˘i⁄
[145]=
__GLìLök_GL_SUNX_c⁄°™t_d©a
;

8419 
__GLìGLLﬂdFun˘i⁄
[146]=
__GLìLök_GL_SUN_globÆ_Æpha
;

8420 
__GLìGLLﬂdFun˘i⁄
[147]=
__GLìLök_GL_SUN_åüngÀ_li°
;

8421 
__GLìGLLﬂdFun˘i⁄
[148]=
__GLìLök_GL_SUN_vîãx
;

8422 
__GLìGLLﬂdFun˘i⁄
[149]=
__GLìLök_GL_EXT_bÀnd_func_£∑øã
;

8423 
__GLìGLLﬂdFun˘i⁄
[150]=
__GLìLök_GL_INGR_cﬁ‹_˛amp
;

8424 
__GLìGLLﬂdFun˘i⁄
[151]=
__GLìLök_GL_INGR_öãæa˚_ªad
;

8425 
__GLìGLLﬂdFun˘i⁄
[152]=
__GLìLök_GL_EXT_°ícû_wøp
;

8426 
__GLìGLLﬂdFun˘i⁄
[153]=
__GLìLök_GL_EXT_422_pixñs
;

8427 
__GLìGLLﬂdFun˘i⁄
[154]=
__GLìLök_GL_NV_ãxgí_ªÊe˘i⁄
;

8428 
__GLìGLLﬂdFun˘i⁄
[155]=
__GLìLök_GL_EXT_ãxtuª_cube_m≠
;

8429 
__GLìGLLﬂdFun˘i⁄
[156]=
__GLìLök_GL_SUN_c⁄vﬁuti⁄_b‹dî_modes
;

8430 
__GLìGLLﬂdFun˘i⁄
[157]=
__GLìLök_GL_EXT_ãxtuª_ív_add
;

8431 
__GLìGLLﬂdFun˘i⁄
[158]=
__GLìLök_GL_EXT_ãxtuª_lod_büs
;

8432 
__GLìGLLﬂdFun˘i⁄
[159]=
__GLìLök_GL_EXT_ãxtuª_fûãr_™isŸr›ic
;

8433 
__GLìGLLﬂdFun˘i⁄
[160]=
__GLìLök_GL_EXT_vîãx_weightög
;

8434 
__GLìGLLﬂdFun˘i⁄
[161]=
__GLìLök_GL_NV_light_max_exp⁄ít
;

8435 
__GLìGLLﬂdFun˘i⁄
[162]=
__GLìLök_GL_NV_vîãx_¨øy_ønge
;

8436 
__GLìGLLﬂdFun˘i⁄
[163]=
__GLìLök_GL_NV_ªgi°î_comböîs
;

8437 
__GLìGLLﬂdFun˘i⁄
[164]=
__GLìLök_GL_NV_fog_di°™˚
;

8438 
__GLìGLLﬂdFun˘i⁄
[165]=
__GLìLök_GL_NV_ãxgí_emboss
;

8439 
__GLìGLLﬂdFun˘i⁄
[166]=
__GLìLök_GL_NV_bÀnd_squ¨e
;

8440 
__GLìGLLﬂdFun˘i⁄
[167]=
__GLìLök_GL_NV_ãxtuª_ív_comböe4
;

8441 
__GLìGLLﬂdFun˘i⁄
[168]=
__GLìLök_GL_MESA_ªsize_buf„rs
;

8442 
__GLìGLLﬂdFun˘i⁄
[169]=
__GLìLök_GL_MESA_wödow_pos
;

8443 
__GLìGLLﬂdFun˘i⁄
[170]=
__GLìLök_GL_EXT_ãxtuª_com¥essi⁄_s3tc
;

8444 
__GLìGLLﬂdFun˘i⁄
[171]=
__GLìLök_GL_IBM_cuŒ_vîãx
;

8445 
__GLìGLLﬂdFun˘i⁄
[172]=
__GLìLök_GL_IBM_mu…imode_døw_¨øys
;

8446 
__GLìGLLﬂdFun˘i⁄
[173]=
__GLìLök_GL_IBM_vîãx_¨øy_li°s
;

8447 
__GLìGLLﬂdFun˘i⁄
[174]=
__GLìLök_GL_SGIX_subßm∂e
;

8448 
__GLìGLLﬂdFun˘i⁄
[175]=
__GLìLök_GL_SGIX_y¸cb_subßm∂e
;

8449 
__GLìGLLﬂdFun˘i⁄
[176]=
__GLìLök_GL_SGIX_y¸cba
;

8450 
__GLìGLLﬂdFun˘i⁄
[177]=
__GLìLök_GL_SGI_dïth_∑ss_ö°rumít
;

8451 
__GLìGLLﬂdFun˘i⁄
[178]=
__GLìLök_GL_3DFX_ãxtuª_com¥essi⁄_FXT1
;

8452 
__GLìGLLﬂdFun˘i⁄
[179]=
__GLìLök_GL_3DFX_mu…ißm∂e
;

8453 
__GLìGLLﬂdFun˘i⁄
[180]=
__GLìLök_GL_3DFX_tbuf„r
;

8454 
__GLìGLLﬂdFun˘i⁄
[181]=
__GLìLök_GL_EXT_mu…ißm∂e
;

8455 
__GLìGLLﬂdFun˘i⁄
[182]=
__GLìLök_GL_SGIX_vîãx_¥e˛ù
;

8456 
__GLìGLLﬂdFun˘i⁄
[183]=
__GLìLök_GL_SGIX_c⁄vﬁuti⁄_accuøcy
;

8457 
__GLìGLLﬂdFun˘i⁄
[184]=
__GLìLök_GL_SGIX_ªßm∂e
;

8458 
__GLìGLLﬂdFun˘i⁄
[185]=
__GLìLök_GL_SGIS_poöt_löe_ãxgí
;

8459 
__GLìGLLﬂdFun˘i⁄
[186]=
__GLìLök_GL_SGIS_ãxtuª_cﬁ‹_mask
;

8460 
__GLìGLLﬂdFun˘i⁄
[187]=
__GLìLök_GL_EXT_ãxtuª_ív_dŸ3
;

8461 
__GLìGLLﬂdFun˘i⁄
[188]=
__GLìLök_GL_ATI_ãxtuª_múr‹_⁄˚
;

8462 
__GLìGLLﬂdFun˘i⁄
[189]=
__GLìLök_GL_NV_„n˚
;

8463 
__GLìGLLﬂdFun˘i⁄
[190]=
__GLìLök_GL_IBM_ãxtuª_múr‹ed_ª≥©
;

8464 
__GLìGLLﬂdFun˘i⁄
[191]=
__GLìLök_GL_NV_evÆu©‹s
;

8465 
__GLìGLLﬂdFun˘i⁄
[192]=
__GLìLök_GL_NV_∑cked_dïth_°ícû
;

8466 
__GLìGLLﬂdFun˘i⁄
[193]=
__GLìLök_GL_NV_ªgi°î_comböîs2
;

8467 
__GLìGLLﬂdFun˘i⁄
[194]=
__GLìLök_GL_NV_ãxtuª_com¥essi⁄_vtc
;

8468 
__GLìGLLﬂdFun˘i⁄
[195]=
__GLìLök_GL_NV_ãxtuª_ª˘™gÀ
;

8469 
__GLìGLLﬂdFun˘i⁄
[196]=
__GLìLök_GL_NV_ãxtuª_shadî
;

8470 
__GLìGLLﬂdFun˘i⁄
[197]=
__GLìLök_GL_NV_ãxtuª_shadî2
;

8471 
__GLìGLLﬂdFun˘i⁄
[198]=
__GLìLök_GL_NV_vîãx_¨øy_ønge2
;

8472 
__GLìGLLﬂdFun˘i⁄
[199]=
__GLìLök_GL_NV_vîãx_¥ogøm
;

8473 
__GLìGLLﬂdFun˘i⁄
[200]=
__GLìLök_GL_SGIX_ãxtuª_co‹dö©e_˛amp
;

8474 
__GLìGLLﬂdFun˘i⁄
[201]=
__GLìLök_GL_SGIX_sˇÀbüs_höt
;

8475 
__GLìGLLﬂdFun˘i⁄
[202]=
__GLìLök_GL_OML_öãæa˚
;

8476 
__GLìGLLﬂdFun˘i⁄
[203]=
__GLìLök_GL_OML_subßm∂e
;

8477 
__GLìGLLﬂdFun˘i⁄
[204]=
__GLìLök_GL_OML_ªßm∂e
;

8478 
__GLìGLLﬂdFun˘i⁄
[205]=
__GLìLök_GL_NV_c›y_dïth_to_cﬁ‹
;

8479 
__GLìGLLﬂdFun˘i⁄
[206]=
__GLìLök_GL_ATI_ívm≠_bumpm≠
;

8480 
__GLìGLLﬂdFun˘i⁄
[207]=
__GLìLök_GL_ATI_‰agmít_shadî
;

8481 
__GLìGLLﬂdFun˘i⁄
[208]=
__GLìLök_GL_ATI_≤_åüngÀs
;

8482 
__GLìGLLﬂdFun˘i⁄
[209]=
__GLìLök_GL_ATI_vîãx_¨øy_obje˘
;

8483 
__GLìGLLﬂdFun˘i⁄
[210]=
__GLìLök_GL_EXT_vîãx_shadî
;

8484 
__GLìGLLﬂdFun˘i⁄
[211]=
__GLìLök_GL_ATI_vîãx_°ªams
;

8485 
__GLìGLLﬂdFun˘i⁄
[212]=
__GLìLök_GL_ATI_ñemít_¨øy
;

8486 
__GLìGLLﬂdFun˘i⁄
[213]=
__GLìLök_GL_SUN_mesh_¨øy
;

8487 
__GLìGLLﬂdFun˘i⁄
[214]=
__GLìLök_GL_SUN_¶i˚_accum
;

8488 
__GLìGLLﬂdFun˘i⁄
[215]=
__GLìLök_GL_NV_mu…ißm∂e_fûãr_höt
;

8489 
__GLìGLLﬂdFun˘i⁄
[216]=
__GLìLök_GL_NV_dïth_˛amp
;

8490 
__GLìGLLﬂdFun˘i⁄
[217]=
__GLìLök_GL_NV_oc˛usi⁄_quîy
;

8491 
__GLìGLLﬂdFun˘i⁄
[218]=
__GLìLök_GL_NV_poöt_•rôe
;

8492 
__GLìGLLﬂdFun˘i⁄
[219]=
__GLìLök_GL_NV_ãxtuª_shadî3
;

8493 
__GLìGLLﬂdFun˘i⁄
[220]=
__GLìLök_GL_NV_vîãx_¥ogøm1_1
;

8494 
__GLìGLLﬂdFun˘i⁄
[221]=
__GLìLök_GL_EXT_shadow_funcs
;

8495 
__GLìGLLﬂdFun˘i⁄
[222]=
__GLìLök_GL_EXT_°ícû_two_side
;

8496 
__GLìGLLﬂdFun˘i⁄
[223]=
__GLìLök_GL_ATI_ãxt_‰agmít_shadî
;

8497 
__GLìGLLﬂdFun˘i⁄
[224]=
__GLìLök_GL_APPLE_˛õ¡_°‹age
;

8498 
__GLìGLLﬂdFun˘i⁄
[225]=
__GLìLök_GL_APPLE_ñemít_¨øy
;

8499 
__GLìGLLﬂdFun˘i⁄
[226]=
__GLìLök_GL_APPLE_„n˚
;

8500 
__GLìGLLﬂdFun˘i⁄
[227]=
__GLìLök_GL_APPLE_vîãx_¨øy_obje˘
;

8501 
__GLìGLLﬂdFun˘i⁄
[228]=
__GLìLök_GL_APPLE_vîãx_¨øy_ønge
;

8502 
__GLìGLLﬂdFun˘i⁄
[229]=
__GLìLök_GL_APPLE_ycb¸_422
;

8503 
__GLìGLLﬂdFun˘i⁄
[230]=
__GLìLök_GL_S3_s3tc
;

8504 
__GLìGLLﬂdFun˘i⁄
[231]=
__GLìLök_GL_ATI_døw_buf„rs
;

8505 
__GLìGLLﬂdFun˘i⁄
[232]=
__GLìLök_GL_ATI_pixñ_f‹m©_Êﬂt
;

8506 
__GLìGLLﬂdFun˘i⁄
[233]=
__GLìLök_GL_ATI_ãxtuª_ív_comböe3
;

8507 
__GLìGLLﬂdFun˘i⁄
[234]=
__GLìLök_GL_ATI_ãxtuª_Êﬂt
;

8508 
__GLìGLLﬂdFun˘i⁄
[235]=
__GLìLök_GL_NV_Êﬂt_buf„r
;

8509 
__GLìGLLﬂdFun˘i⁄
[236]=
__GLìLök_GL_NV_‰agmít_¥ogøm
;

8510 
__GLìGLLﬂdFun˘i⁄
[237]=
__GLìLök_GL_NV_hÆf_Êﬂt
;

8511 
__GLìGLLﬂdFun˘i⁄
[238]=
__GLìLök_GL_NV_pixñ_d©a_ønge
;

8512 
__GLìGLLﬂdFun˘i⁄
[239]=
__GLìLök_GL_NV_¥imôive_ª°¨t
;

8513 
__GLìGLLﬂdFun˘i⁄
[240]=
__GLìLök_GL_NV_ãxtuª_ex∑nd_n‹mÆ
;

8514 
__GLìGLLﬂdFun˘i⁄
[241]=
__GLìLök_GL_NV_vîãx_¥ogøm2
;

8515 
__GLìGLLﬂdFun˘i⁄
[242]=
__GLìLök_GL_ATI_m≠_obje˘_buf„r
;

8516 
__GLìGLLﬂdFun˘i⁄
[243]=
__GLìLök_GL_ATI_£∑øã_°ícû
;

8517 
__GLìGLLﬂdFun˘i⁄
[244]=
__GLìLök_GL_ATI_vîãx_©åib_¨øy_obje˘
;

8518 
__GLìGLLﬂdFun˘i⁄
[245]=
__GLìLök_GL_OES_ªad_f‹m©
;

8519 
__GLìGLLﬂdFun˘i⁄
[246]=
__GLìLök_GL_EXT_dïth_bounds_ã°
;

8520 
__GLìGLLﬂdFun˘i⁄
[247]=
__GLìLök_GL_EXT_ãxtuª_múr‹_˛amp
;

8521 
__GLìGLLﬂdFun˘i⁄
[248]=
__GLìLök_GL_EXT_bÀnd_equ©i⁄_£∑øã
;

8522 
__GLìGLLﬂdFun˘i⁄
[249]=
__GLìLök_GL_MESA_∑ck_övît
;

8523 
__GLìGLLﬂdFun˘i⁄
[250]=
__GLìLök_GL_MESA_ycb¸_ãxtuª
;

8524 
__GLìGLLﬂdFun˘i⁄
[251]=
__GLìLök_GL_EXT_pixñ_buf„r_obje˘
;

8525 
__GLìGLLﬂdFun˘i⁄
[252]=
__GLìLök_GL_NV_‰agmít_¥ogøm_›ti⁄
;

8526 
__GLìGLLﬂdFun˘i⁄
[253]=
__GLìLök_GL_NV_‰agmít_¥ogøm2
;

8527 
__GLìGLLﬂdFun˘i⁄
[254]=
__GLìLök_GL_NV_vîãx_¥ogøm2_›ti⁄
;

8528 
__GLìGLLﬂdFun˘i⁄
[255]=
__GLìLök_GL_NV_vîãx_¥ogøm3
;

8529 
__GLìGLLﬂdFun˘i⁄
[256]=
__GLìLök_GL_EXT_‰amebuf„r_obje˘
;

8530 
__GLìGLLﬂdFun˘i⁄
[257]=
__GLìLök_GL_GREMEDY_°rög_m¨kî
;

8531 
__GLìGLLﬂdFun˘i⁄
[258]=
__GLìLök_GL_EXT_Cg_shadî
;

8532 
__GLìGLLﬂdFun˘i⁄
[259]=
__GLìLök_GL_EXT_timî_quîy
;

8533 
__GLìGLLﬂdFun˘i⁄
[260]=
__GLìLök_GL_EXT_ãxtuª_buf„r_obje˘
;

8534 
__GLìGLLﬂdFun˘i⁄
[261]=
__GLìLök_GL_EXT_gpu_shadî4
;

8535 
__GLìGLLﬂdFun˘i⁄
[262]=
__GLìLök_GL_EXT_geomëry_shadî4
;

8536 
__GLìGLLﬂdFun˘i⁄
[263]=
__GLìLök_GL_EXT_bödabÀ_unif‹m
;

8537 
__GLìGLLﬂdFun˘i⁄
[264]=
__GLìLök_GL_EXT_‰amebuf„r_sRGB
;

8538 
__GLìGLLﬂdFun˘i⁄
[265]=
__GLìLök_GL_EXT_ãxtuª_sh¨ed_exp⁄ít
;

8539 
__GLìGLLﬂdFun˘i⁄
[266]=
__GLìLök_GL_EXT_∑cked_Êﬂt
;

8540 
__GLìGLLﬂdFun˘i⁄
[267]=
__GLìLök_GL_EXT_ãxtuª_¨øy
;

8541 
__GLìGLLﬂdFun˘i⁄
[268]=
__GLìLök_GL_EXT_ãxtuª_öãgî
;

8542 
__GLìGLLﬂdFun˘i⁄
[269]=
__GLìLök_GL_NV_dïth_buf„r_Êﬂt
;

8543 
__GLìGLLﬂdFun˘i⁄
[270]=
__GLìLök_GL_EXT_ãxtuª_com¥essi⁄_œtc
;

8544 
__GLìGLLﬂdFun˘i⁄
[271]=
__GLìLök_GL_NV_å™sf‹m_„edback
;

8545 
__GLìGLLﬂdFun˘i⁄
[272]=
__GLìLök_GL_NV_geomëry_¥ogøm4
;

8546 
__GLìGLLﬂdFun˘i⁄
[273]=
__GLìLök_GL_NV_gpu_¥ogøm4
;

8547 
__GLìGLLﬂdFun˘i⁄
[274]=
__GLìLök_GL_NV_‰amebuf„r_mu…ißm∂e_covîage
;

8548 
__GLìGLLﬂdFun˘i⁄
[275]=
__GLìLök_GL_EXT_‰amebuf„r_mu…ißm∂e
;

8549 
__GLìGLLﬂdFun˘i⁄
[276]=
__GLìLök_GL_EXT_‰amebuf„r_blô
;

8550 
__GLìGLLﬂdFun˘i⁄
[277]=
__GLìLök_GL_EXT_ãxtuª_com¥essi⁄_rgtc
;

8551 
__GLìGLLﬂdFun˘i⁄
[278]=
__GLìLök_GL_EXT_cﬁ‹_m©rix
;

8552 
__GLìGLLﬂdFun˘i⁄
[279]=
__GLìLök_GL_SGIX_ãxtuª_£À˘
;

8553 
__GLìGLLﬂdFun˘i⁄
[280]=
__GLìLök_GL_INGR_bÀnd_func_£∑øã
;

8554 
__GLìGLLﬂdFun˘i⁄
[281]=
__GLìLök_GL_SGIX_dïth_∑ss_ö°rumít
;

8555 
__GLìGLLﬂdFun˘i⁄
[282]=
__GLìLök_GL_SGIX_igloo_öãrÁ˚
;

8556 
__GLìGLLﬂdFun˘i⁄
[283]=
__GLìLök_GL_EXT_døw_buf„rs2
;

8557 
__GLìGLLﬂdFun˘i⁄
[284]=
__GLìLök_GL_NV_∑ømëî_buf„r_obje˘
;

8558 
__GLìGLLﬂdFun˘i⁄
[285]=
__GLìLök_GL_EXT_døw_ö°™˚d
;

8559 
__GLìGLLﬂdFun˘i⁄
[286]=
__GLìLök_GL_EXT_‰agmít_lightög
;

8560 
__GLìGLLﬂdFun˘i⁄
[287]=
__GLìLök_GL_EXT_∑cked_dïth_°ícû
;

8561 
__GLìGLLﬂdFun˘i⁄
[288]=
__GLìLök_GL_EXT_s˚√_m¨kî
;

8562 
__GLìGLLﬂdFun˘i⁄
[289]=
__GLìLök_GL_EXT_°ícû_˛ór_èg
;

8563 
__GLìGLLﬂdFun˘i⁄
[290]=
__GLìLök_GL_EXT_ãxtuª_com¥essi⁄_dxt1
;

8564 
__GLìGLLﬂdFun˘i⁄
[291]=
__GLìLök_GL_EXT_ãxtuª_ív
;

8565 
__GLìGLLﬂdFun˘i⁄
[292]=
__GLìLök_GL_EXT_ãxtuª_sRGB
;

8566 
__GLìGLLﬂdFun˘i⁄
[293]=
__GLìLök_GL_IBM_°©ic_d©a
;

8567 
__GLìGLLﬂdFun˘i⁄
[294]=
__GLìLök_GL_MESAX_ãxtuª_°ack
;

8568 
__GLìGLLﬂdFun˘i⁄
[295]=
__GLìLök_GL_OES_byã_co‹dö©es
;

8569 
__GLìGLLﬂdFun˘i⁄
[296]=
__GLìLök_GL_OES_com¥es£d_∑Àâed_ãxtuª
;

8570 
__GLìGLLﬂdFun˘i⁄
[297]=
__GLìLök_GL_OES_sögÀ_¥ecisi⁄
;

8571 
__GLìGLLﬂdFun˘i⁄
[298]=
__GLìLök_GL_SGIX_pixñ_ãxtuª_bôs
;

8572 
__GLìGLLﬂdFun˘i⁄
[299]=
__GLìLök_GL_SGIX_ãxtuª_ønge
;

8573 
	}
}

8575 #ifde‡
WIN32


8576 
GLuöt
 
	$__GLìLök_WGL_ARB_buf„r_ªgi⁄
()

8578 
GLöt
 
nLöked
=0;

8579 #ifde‡
__GLEE_WGL_ARB_buf„r_ªgi⁄


8580 i‡((
pwglCª©eBuf„rRegi⁄ARB
 = (
PFNWGLCREATEBUFFERREGIONARBPROC
Ë
	`__GLìGëProcAddªss
("wglCª©eBuf„rRegi⁄ARB"))!=0Ë
nLöked
++;

8581 i‡((
pwglDñëeBuf„rRegi⁄ARB
 = (
PFNWGLDELETEBUFFERREGIONARBPROC
Ë
	`__GLìGëProcAddªss
("wglDñëeBuf„rRegi⁄ARB"))!=0Ë
nLöked
++;

8582 i‡((
pwglSaveBuf„rRegi⁄ARB
 = (
PFNWGLSAVEBUFFERREGIONARBPROC
Ë
	`__GLìGëProcAddªss
("wglSaveBuf„rRegi⁄ARB"))!=0Ë
nLöked
++;

8583 i‡((
pwglRe°‹eBuf„rRegi⁄ARB
 = (
PFNWGLRESTOREBUFFERREGIONARBPROC
Ë
	`__GLìGëProcAddªss
("wglRe°‹eBuf„rRegi⁄ARB"))!=0Ë
nLöked
++;

8585 i‡(
nLöked
==4Ë 
GLEE_LINK_COMPLETE
;

8586 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8587  
GLEE_LINK_PARTIAL
;

8588 
	}
}

8590 
GLuöt
 
	$__GLìLök_WGL_ARB_mu…ißm∂e
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8592 
GLuöt
 
	$__GLìLök_WGL_ARB_exãnsi⁄s_°rög
()

8594 
GLöt
 
nLöked
=0;

8595 #ifde‡
__GLEE_WGL_ARB_exãnsi⁄s_°rög


8596 i‡((
pwglGëExãnsi⁄sSåögARB
 = (
PFNWGLGETEXTENSIONSSTRINGARBPROC
Ë
	`__GLìGëProcAddªss
("wglGëExãnsi⁄sSåögARB"))!=0Ë
nLöked
++;

8598 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

8599 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8600  
GLEE_LINK_PARTIAL
;

8601 
	}
}

8603 
GLuöt
 
	$__GLìLök_WGL_ARB_pixñ_f‹m©
()

8605 
GLöt
 
nLöked
=0;

8606 #ifde‡
__GLEE_WGL_ARB_pixñ_f‹m©


8607 i‡((
pwglGëPixñF‹m©AâribivARB
 = (
PFNWGLGETPIXELFORMATATTRIBIVARBPROC
Ë
	`__GLìGëProcAddªss
("wglGëPixñF‹m©AâribivARB"))!=0Ë
nLöked
++;

8608 i‡((
pwglGëPixñF‹m©AâribfvARB
 = (
PFNWGLGETPIXELFORMATATTRIBFVARBPROC
Ë
	`__GLìGëProcAddªss
("wglGëPixñF‹m©AâribfvARB"))!=0Ë
nLöked
++;

8609 i‡((
pwglChoo£PixñF‹m©ARB
 = (
PFNWGLCHOOSEPIXELFORMATARBPROC
Ë
	`__GLìGëProcAddªss
("wglChoo£PixñF‹m©ARB"))!=0Ë
nLöked
++;

8611 i‡(
nLöked
==3Ë 
GLEE_LINK_COMPLETE
;

8612 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8613  
GLEE_LINK_PARTIAL
;

8614 
	}
}

8616 
GLuöt
 
	$__GLìLök_WGL_ARB_make_cuºít_ªad
()

8618 
GLöt
 
nLöked
=0;

8619 #ifde‡
__GLEE_WGL_ARB_make_cuºít_ªad


8620 i‡((
pwglMakeC⁄ãxtCuºítARB
 = (
PFNWGLMAKECONTEXTCURRENTARBPROC
Ë
	`__GLìGëProcAddªss
("wglMakeC⁄ãxtCuºítARB"))!=0Ë
nLöked
++;

8621 i‡((
pwglGëCuºítRódDCARB
 = (
PFNWGLGETCURRENTREADDCARBPROC
Ë
	`__GLìGëProcAddªss
("wglGëCuºítRódDCARB"))!=0Ë
nLöked
++;

8623 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

8624 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8625  
GLEE_LINK_PARTIAL
;

8626 
	}
}

8628 
GLuöt
 
	$__GLìLök_WGL_ARB_pbuf„r
()

8630 
GLöt
 
nLöked
=0;

8631 #ifde‡
__GLEE_WGL_ARB_pbuf„r


8632 i‡((
pwglCª©ePbuf„rARB
 = (
PFNWGLCREATEPBUFFERARBPROC
Ë
	`__GLìGëProcAddªss
("wglCª©ePbuf„rARB"))!=0Ë
nLöked
++;

8633 i‡((
pwglGëPbuf„rDCARB
 = (
PFNWGLGETPBUFFERDCARBPROC
Ë
	`__GLìGëProcAddªss
("wglGëPbuf„rDCARB"))!=0Ë
nLöked
++;

8634 i‡((
pwglRñó£Pbuf„rDCARB
 = (
PFNWGLRELEASEPBUFFERDCARBPROC
Ë
	`__GLìGëProcAddªss
("wglRñó£Pbuf„rDCARB"))!=0Ë
nLöked
++;

8635 i‡((
pwglDe°royPbuf„rARB
 = (
PFNWGLDESTROYPBUFFERARBPROC
Ë
	`__GLìGëProcAddªss
("wglDe°royPbuf„rARB"))!=0Ë
nLöked
++;

8636 i‡((
pwglQuîyPbuf„rARB
 = (
PFNWGLQUERYPBUFFERARBPROC
Ë
	`__GLìGëProcAddªss
("wglQuîyPbuf„rARB"))!=0Ë
nLöked
++;

8638 i‡(
nLöked
==5Ë 
GLEE_LINK_COMPLETE
;

8639 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8640  
GLEE_LINK_PARTIAL
;

8641 
	}
}

8643 
GLuöt
 
	$__GLìLök_WGL_ARB_ªndî_ãxtuª
()

8645 
GLöt
 
nLöked
=0;

8646 #ifde‡
__GLEE_WGL_ARB_ªndî_ãxtuª


8647 i‡((
pwglBödTexImageARB
 = (
PFNWGLBINDTEXIMAGEARBPROC
Ë
	`__GLìGëProcAddªss
("wglBödTexImageARB"))!=0Ë
nLöked
++;

8648 i‡((
pwglRñó£TexImageARB
 = (
PFNWGLRELEASETEXIMAGEARBPROC
Ë
	`__GLìGëProcAddªss
("wglRñó£TexImageARB"))!=0Ë
nLöked
++;

8649 i‡((
pwglSëPbuf„rAâribARB
 = (
PFNWGLSETPBUFFERATTRIBARBPROC
Ë
	`__GLìGëProcAddªss
("wglSëPbuf„rAâribARB"))!=0Ë
nLöked
++;

8651 i‡(
nLöked
==3Ë 
GLEE_LINK_COMPLETE
;

8652 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8653  
GLEE_LINK_PARTIAL
;

8654 
	}
}

8656 
GLuöt
 
	$__GLìLök_WGL_ARB_pixñ_f‹m©_Êﬂt
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8658 
GLuöt
 
	$__GLìLök_WGL_EXT_make_cuºít_ªad
()

8660 
GLöt
 
nLöked
=0;

8661 #ifde‡
__GLEE_WGL_EXT_make_cuºít_ªad


8662 i‡((
pwglMakeC⁄ãxtCuºítEXT
 = (
PFNWGLMAKECONTEXTCURRENTEXTPROC
Ë
	`__GLìGëProcAddªss
("wglMakeC⁄ãxtCuºítEXT"))!=0Ë
nLöked
++;

8663 i‡((
pwglGëCuºítRódDCEXT
 = (
PFNWGLGETCURRENTREADDCEXTPROC
Ë
	`__GLìGëProcAddªss
("wglGëCuºítRódDCEXT"))!=0Ë
nLöked
++;

8665 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

8666 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8667  
GLEE_LINK_PARTIAL
;

8668 
	}
}

8670 
GLuöt
 
	$__GLìLök_WGL_EXT_pixñ_f‹m©
()

8672 
GLöt
 
nLöked
=0;

8673 #ifde‡
__GLEE_WGL_EXT_pixñ_f‹m©


8674 i‡((
pwglGëPixñF‹m©AâribivEXT
 = (
PFNWGLGETPIXELFORMATATTRIBIVEXTPROC
Ë
	`__GLìGëProcAddªss
("wglGëPixñF‹m©AâribivEXT"))!=0Ë
nLöked
++;

8675 i‡((
pwglGëPixñF‹m©AâribfvEXT
 = (
PFNWGLGETPIXELFORMATATTRIBFVEXTPROC
Ë
	`__GLìGëProcAddªss
("wglGëPixñF‹m©AâribfvEXT"))!=0Ë
nLöked
++;

8676 i‡((
pwglChoo£PixñF‹m©EXT
 = (
PFNWGLCHOOSEPIXELFORMATEXTPROC
Ë
	`__GLìGëProcAddªss
("wglChoo£PixñF‹m©EXT"))!=0Ë
nLöked
++;

8678 i‡(
nLöked
==3Ë 
GLEE_LINK_COMPLETE
;

8679 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8680  
GLEE_LINK_PARTIAL
;

8681 
	}
}

8683 
GLuöt
 
	$__GLìLök_WGL_EXT_pbuf„r
()

8685 
GLöt
 
nLöked
=0;

8686 #ifde‡
__GLEE_WGL_EXT_pbuf„r


8687 i‡((
pwglCª©ePbuf„rEXT
 = (
PFNWGLCREATEPBUFFEREXTPROC
Ë
	`__GLìGëProcAddªss
("wglCª©ePbuf„rEXT"))!=0Ë
nLöked
++;

8688 i‡((
pwglGëPbuf„rDCEXT
 = (
PFNWGLGETPBUFFERDCEXTPROC
Ë
	`__GLìGëProcAddªss
("wglGëPbuf„rDCEXT"))!=0Ë
nLöked
++;

8689 i‡((
pwglRñó£Pbuf„rDCEXT
 = (
PFNWGLRELEASEPBUFFERDCEXTPROC
Ë
	`__GLìGëProcAddªss
("wglRñó£Pbuf„rDCEXT"))!=0Ë
nLöked
++;

8690 i‡((
pwglDe°royPbuf„rEXT
 = (
PFNWGLDESTROYPBUFFEREXTPROC
Ë
	`__GLìGëProcAddªss
("wglDe°royPbuf„rEXT"))!=0Ë
nLöked
++;

8691 i‡((
pwglQuîyPbuf„rEXT
 = (
PFNWGLQUERYPBUFFEREXTPROC
Ë
	`__GLìGëProcAddªss
("wglQuîyPbuf„rEXT"))!=0Ë
nLöked
++;

8693 i‡(
nLöked
==5Ë 
GLEE_LINK_COMPLETE
;

8694 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8695  
GLEE_LINK_PARTIAL
;

8696 
	}
}

8698 
GLuöt
 
	$__GLìLök_WGL_EXT_dïth_Êﬂt
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8700 
GLuöt
 
	$__GLìLök_WGL_3DFX_mu…ißm∂e
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8702 
GLuöt
 
	$__GLìLök_WGL_EXT_mu…ißm∂e
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8704 
GLuöt
 
	$__GLìLök_WGL_I3D_digôÆ_video_c⁄åﬁ
()

8706 
GLöt
 
nLöked
=0;

8707 #ifde‡
__GLEE_WGL_I3D_digôÆ_video_c⁄åﬁ


8708 i‡((
pwglGëDigôÆVideoP¨amëîsI3D
 = (
PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC
Ë
	`__GLìGëProcAddªss
("wglGëDigôÆVideoP¨amëîsI3D"))!=0Ë
nLöked
++;

8709 i‡((
pwglSëDigôÆVideoP¨amëîsI3D
 = (
PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC
Ë
	`__GLìGëProcAddªss
("wglSëDigôÆVideoP¨amëîsI3D"))!=0Ë
nLöked
++;

8711 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

8712 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8713  
GLEE_LINK_PARTIAL
;

8714 
	}
}

8716 
GLuöt
 
	$__GLìLök_WGL_I3D_gamma
()

8718 
GLöt
 
nLöked
=0;

8719 #ifde‡
__GLEE_WGL_I3D_gamma


8720 i‡((
pwglGëGammaTabÀP¨amëîsI3D
 = (
PFNWGLGETGAMMATABLEPARAMETERSI3DPROC
Ë
	`__GLìGëProcAddªss
("wglGëGammaTabÀP¨amëîsI3D"))!=0Ë
nLöked
++;

8721 i‡((
pwglSëGammaTabÀP¨amëîsI3D
 = (
PFNWGLSETGAMMATABLEPARAMETERSI3DPROC
Ë
	`__GLìGëProcAddªss
("wglSëGammaTabÀP¨amëîsI3D"))!=0Ë
nLöked
++;

8722 i‡((
pwglGëGammaTabÀI3D
 = (
PFNWGLGETGAMMATABLEI3DPROC
Ë
	`__GLìGëProcAddªss
("wglGëGammaTabÀI3D"))!=0Ë
nLöked
++;

8723 i‡((
pwglSëGammaTabÀI3D
 = (
PFNWGLSETGAMMATABLEI3DPROC
Ë
	`__GLìGëProcAddªss
("wglSëGammaTabÀI3D"))!=0Ë
nLöked
++;

8725 i‡(
nLöked
==4Ë 
GLEE_LINK_COMPLETE
;

8726 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8727  
GLEE_LINK_PARTIAL
;

8728 
	}
}

8730 
GLuöt
 
	$__GLìLök_WGL_I3D_gílock
()

8732 
GLöt
 
nLöked
=0;

8733 #ifde‡
__GLEE_WGL_I3D_gílock


8734 i‡((
pwglE«bÀGílockI3D
 = (
PFNWGLENABLEGENLOCKI3DPROC
Ë
	`__GLìGëProcAddªss
("wglE«bÀGílockI3D"))!=0Ë
nLöked
++;

8735 i‡((
pwglDißbÀGílockI3D
 = (
PFNWGLDISABLEGENLOCKI3DPROC
Ë
	`__GLìGëProcAddªss
("wglDißbÀGílockI3D"))!=0Ë
nLöked
++;

8736 i‡((
pwglIsE«bÀdGílockI3D
 = (
PFNWGLISENABLEDGENLOCKI3DPROC
Ë
	`__GLìGëProcAddªss
("wglIsE«bÀdGílockI3D"))!=0Ë
nLöked
++;

8737 i‡((
pwglGílockSour˚I3D
 = (
PFNWGLGENLOCKSOURCEI3DPROC
Ë
	`__GLìGëProcAddªss
("wglGílockSour˚I3D"))!=0Ë
nLöked
++;

8738 i‡((
pwglGëGílockSour˚I3D
 = (
PFNWGLGETGENLOCKSOURCEI3DPROC
Ë
	`__GLìGëProcAddªss
("wglGëGílockSour˚I3D"))!=0Ë
nLöked
++;

8739 i‡((
pwglGílockSour˚EdgeI3D
 = (
PFNWGLGENLOCKSOURCEEDGEI3DPROC
Ë
	`__GLìGëProcAddªss
("wglGílockSour˚EdgeI3D"))!=0Ë
nLöked
++;

8740 i‡((
pwglGëGílockSour˚EdgeI3D
 = (
PFNWGLGETGENLOCKSOURCEEDGEI3DPROC
Ë
	`__GLìGëProcAddªss
("wglGëGílockSour˚EdgeI3D"))!=0Ë
nLöked
++;

8741 i‡((
pwglGílockSam∂eR©eI3D
 = (
PFNWGLGENLOCKSAMPLERATEI3DPROC
Ë
	`__GLìGëProcAddªss
("wglGílockSam∂eR©eI3D"))!=0Ë
nLöked
++;

8742 i‡((
pwglGëGílockSam∂eR©eI3D
 = (
PFNWGLGETGENLOCKSAMPLERATEI3DPROC
Ë
	`__GLìGëProcAddªss
("wglGëGílockSam∂eR©eI3D"))!=0Ë
nLöked
++;

8743 i‡((
pwglGílockSour˚DñayI3D
 = (
PFNWGLGENLOCKSOURCEDELAYI3DPROC
Ë
	`__GLìGëProcAddªss
("wglGílockSour˚DñayI3D"))!=0Ë
nLöked
++;

8744 i‡((
pwglGëGílockSour˚DñayI3D
 = (
PFNWGLGETGENLOCKSOURCEDELAYI3DPROC
Ë
	`__GLìGëProcAddªss
("wglGëGílockSour˚DñayI3D"))!=0Ë
nLöked
++;

8745 i‡((
pwglQuîyGílockMaxSour˚DñayI3D
 = (
PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC
Ë
	`__GLìGëProcAddªss
("wglQuîyGílockMaxSour˚DñayI3D"))!=0Ë
nLöked
++;

8747 i‡(
nLöked
==12Ë 
GLEE_LINK_COMPLETE
;

8748 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8749  
GLEE_LINK_PARTIAL
;

8750 
	}
}

8752 
GLuöt
 
	$__GLìLök_WGL_I3D_image_buf„r
()

8754 
GLöt
 
nLöked
=0;

8755 #ifde‡
__GLEE_WGL_I3D_image_buf„r


8756 i‡((
pwglCª©eImageBuf„rI3D
 = (
PFNWGLCREATEIMAGEBUFFERI3DPROC
Ë
	`__GLìGëProcAddªss
("wglCª©eImageBuf„rI3D"))!=0Ë
nLöked
++;

8757 i‡((
pwglDe°royImageBuf„rI3D
 = (
PFNWGLDESTROYIMAGEBUFFERI3DPROC
Ë
	`__GLìGëProcAddªss
("wglDe°royImageBuf„rI3D"))!=0Ë
nLöked
++;

8758 i‡((
pwglAssocüãImageBuf„rEvítsI3D
 = (
PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC
Ë
	`__GLìGëProcAddªss
("wglAssocüãImageBuf„rEvítsI3D"))!=0Ë
nLöked
++;

8759 i‡((
pwglRñó£ImageBuf„rEvítsI3D
 = (
PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC
Ë
	`__GLìGëProcAddªss
("wglRñó£ImageBuf„rEvítsI3D"))!=0Ë
nLöked
++;

8761 i‡(
nLöked
==4Ë 
GLEE_LINK_COMPLETE
;

8762 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8763  
GLEE_LINK_PARTIAL
;

8764 
	}
}

8766 
GLuöt
 
	$__GLìLök_WGL_I3D_sw≠_‰ame_lock
()

8768 
GLöt
 
nLöked
=0;

8769 #ifde‡
__GLEE_WGL_I3D_sw≠_‰ame_lock


8770 i‡((
pwglE«bÀFømeLockI3D
 = (
PFNWGLENABLEFRAMELOCKI3DPROC
Ë
	`__GLìGëProcAddªss
("wglE«bÀFømeLockI3D"))!=0Ë
nLöked
++;

8771 i‡((
pwglDißbÀFømeLockI3D
 = (
PFNWGLDISABLEFRAMELOCKI3DPROC
Ë
	`__GLìGëProcAddªss
("wglDißbÀFømeLockI3D"))!=0Ë
nLöked
++;

8772 i‡((
pwglIsE«bÀdFømeLockI3D
 = (
PFNWGLISENABLEDFRAMELOCKI3DPROC
Ë
	`__GLìGëProcAddªss
("wglIsE«bÀdFømeLockI3D"))!=0Ë
nLöked
++;

8773 i‡((
pwglQuîyFømeLockMa°îI3D
 = (
PFNWGLQUERYFRAMELOCKMASTERI3DPROC
Ë
	`__GLìGëProcAddªss
("wglQuîyFømeLockMa°îI3D"))!=0Ë
nLöked
++;

8775 i‡(
nLöked
==4Ë 
GLEE_LINK_COMPLETE
;

8776 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8777  
GLEE_LINK_PARTIAL
;

8778 
	}
}

8780 
GLuöt
 
	$__GLìLök_WGL_NV_ªndî_dïth_ãxtuª
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8782 
GLuöt
 
	$__GLìLök_WGL_NV_ªndî_ãxtuª_ª˘™gÀ
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8784 
GLuöt
 
	$__GLìLök_WGL_ATI_pixñ_f‹m©_Êﬂt
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8786 
GLuöt
 
	$__GLìLök_WGL_NV_Êﬂt_buf„r
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8788 
GLuöt
 
	$__GLìLök_WGL_EXT_di•œy_cﬁ‹_èbÀ
()

8790 
GLöt
 
nLöked
=0;

8791 #ifde‡
__GLEE_WGL_EXT_di•œy_cﬁ‹_èbÀ


8792 i‡((
pwglCª©eDi•œyCﬁ‹TabÀEXT
 = (
PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC
Ë
	`__GLìGëProcAddªss
("wglCª©eDi•œyCﬁ‹TabÀEXT"))!=0Ë
nLöked
++;

8793 i‡((
pwglLﬂdDi•œyCﬁ‹TabÀEXT
 = (
PFNWGLLOADDISPLAYCOLORTABLEEXTPROC
Ë
	`__GLìGëProcAddªss
("wglLﬂdDi•œyCﬁ‹TabÀEXT"))!=0Ë
nLöked
++;

8794 i‡((
pwglBödDi•œyCﬁ‹TabÀEXT
 = (
PFNWGLBINDDISPLAYCOLORTABLEEXTPROC
Ë
	`__GLìGëProcAddªss
("wglBödDi•œyCﬁ‹TabÀEXT"))!=0Ë
nLöked
++;

8795 i‡((
pwglDe°royDi•œyCﬁ‹TabÀEXT
 = (
PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC
Ë
	`__GLìGëProcAddªss
("wglDe°royDi•œyCﬁ‹TabÀEXT"))!=0Ë
nLöked
++;

8797 i‡(
nLöked
==4Ë 
GLEE_LINK_COMPLETE
;

8798 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8799  
GLEE_LINK_PARTIAL
;

8800 
	}
}

8802 
GLuöt
 
	$__GLìLök_WGL_EXT_exãnsi⁄s_°rög
()

8804 
GLöt
 
nLöked
=0;

8805 #ifde‡
__GLEE_WGL_EXT_exãnsi⁄s_°rög


8806 i‡((
pwglGëExãnsi⁄sSåögEXT
 = (
PFNWGLGETEXTENSIONSSTRINGEXTPROC
Ë
	`__GLìGëProcAddªss
("wglGëExãnsi⁄sSåögEXT"))!=0Ë
nLöked
++;

8808 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

8809 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8810  
GLEE_LINK_PARTIAL
;

8811 
	}
}

8813 
GLuöt
 
	$__GLìLök_WGL_EXT_sw≠_c⁄åﬁ
()

8815 
GLöt
 
nLöked
=0;

8816 #ifde‡
__GLEE_WGL_EXT_sw≠_c⁄åﬁ


8817 i‡((
pwglSw≠I¡îvÆEXT
 = (
PFNWGLSWAPINTERVALEXTPROC
Ë
	`__GLìGëProcAddªss
("wglSw≠I¡îvÆEXT"))!=0Ë
nLöked
++;

8818 i‡((
pwglGëSw≠I¡îvÆEXT
 = (
PFNWGLGETSWAPINTERVALEXTPROC
Ë
	`__GLìGëProcAddªss
("wglGëSw≠I¡îvÆEXT"))!=0Ë
nLöked
++;

8820 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

8821 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8822  
GLEE_LINK_PARTIAL
;

8823 
	}
}

8825 
GLuöt
 
	$__GLìLök_WGL_NV_vîãx_¨øy_ønge
()

8827 
GLöt
 
nLöked
=0;

8828 #ifde‡
__GLEE_WGL_NV_vîãx_¨øy_ønge


8829 i‡((
pwglAŒoˇãMem‹yNV
 = (
PFNWGLALLOCATEMEMORYNVPROC
Ë
	`__GLìGëProcAddªss
("wglAŒoˇãMem‹yNV"))!=0Ë
nLöked
++;

8830 i‡((
pwglFªeMem‹yNV
 = (
PFNWGLFREEMEMORYNVPROC
Ë
	`__GLìGëProcAddªss
("wglFªeMem‹yNV"))!=0Ë
nLöked
++;

8832 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

8833 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8834  
GLEE_LINK_PARTIAL
;

8835 
	}
}

8837 
GLuöt
 
	$__GLìLök_WGL_OML_sync_c⁄åﬁ
()

8839 
GLöt
 
nLöked
=0;

8840 #ifde‡
__GLEE_WGL_OML_sync_c⁄åﬁ


8841 i‡((
pwglGëSyncVÆuesOML
 = (
PFNWGLGETSYNCVALUESOMLPROC
Ë
	`__GLìGëProcAddªss
("wglGëSyncVÆuesOML"))!=0Ë
nLöked
++;

8842 i‡((
pwglGëMscR©eOML
 = (
PFNWGLGETMSCRATEOMLPROC
Ë
	`__GLìGëProcAddªss
("wglGëMscR©eOML"))!=0Ë
nLöked
++;

8843 i‡((
pwglSw≠Buf„rsMscOML
 = (
PFNWGLSWAPBUFFERSMSCOMLPROC
Ë
	`__GLìGëProcAddªss
("wglSw≠Buf„rsMscOML"))!=0Ë
nLöked
++;

8844 i‡((
pwglSw≠LayîBuf„rsMscOML
 = (
PFNWGLSWAPLAYERBUFFERSMSCOMLPROC
Ë
	`__GLìGëProcAddªss
("wglSw≠LayîBuf„rsMscOML"))!=0Ë
nLöked
++;

8845 i‡((
pwglWaôF‹MscOML
 = (
PFNWGLWAITFORMSCOMLPROC
Ë
	`__GLìGëProcAddªss
("wglWaôF‹MscOML"))!=0Ë
nLöked
++;

8846 i‡((
pwglWaôF‹SbcOML
 = (
PFNWGLWAITFORSBCOMLPROC
Ë
	`__GLìGëProcAddªss
("wglWaôF‹SbcOML"))!=0Ë
nLöked
++;

8848 i‡(
nLöked
==6Ë 
GLEE_LINK_COMPLETE
;

8849 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8850  
GLEE_LINK_PARTIAL
;

8851 
	}
}

8853 
GLuöt
 
	$__GLìLök_WGL_I3D_sw≠_‰ame_ußge
()

8855 
GLöt
 
nLöked
=0;

8856 #ifde‡
__GLEE_WGL_I3D_sw≠_‰ame_ußge


8857 i‡((
pwglGëFømeUßgeI3D
 = (
PFNWGLGETFRAMEUSAGEI3DPROC
Ë
	`__GLìGëProcAddªss
("wglGëFømeUßgeI3D"))!=0Ë
nLöked
++;

8858 i‡((
pwglBegöFømeTøckögI3D
 = (
PFNWGLBEGINFRAMETRACKINGI3DPROC
Ë
	`__GLìGëProcAddªss
("wglBegöFømeTøckögI3D"))!=0Ë
nLöked
++;

8859 i‡((
pwglEndFømeTøckögI3D
 = (
PFNWGLENDFRAMETRACKINGI3DPROC
Ë
	`__GLìGëProcAddªss
("wglEndFømeTøckögI3D"))!=0Ë
nLöked
++;

8860 i‡((
pwglQuîyFømeTøckögI3D
 = (
PFNWGLQUERYFRAMETRACKINGI3DPROC
Ë
	`__GLìGëProcAddªss
("wglQuîyFømeTøckögI3D"))!=0Ë
nLöked
++;

8862 i‡(
nLöked
==4Ë 
GLEE_LINK_COMPLETE
;

8863 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8864  
GLEE_LINK_PARTIAL
;

8865 
	}
}

8867 
GLuöt
 
	$__GLìLök_WGL_3DL_°îeo_c⁄åﬁ
()

8869 
GLöt
 
nLöked
=0;

8870 #ifde‡
__GLEE_WGL_3DL_°îeo_c⁄åﬁ


8871 i‡((
pwglSëSãªoEmôãrSèã3DL
 = (
PFNWGLSETSTEREOEMITTERSTATE3DLPROC
Ë
	`__GLìGëProcAddªss
("wglSëSãªoEmôãrSèã3DL"))!=0Ë
nLöked
++;

8873 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

8874 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8875  
GLEE_LINK_PARTIAL
;

8876 
	}
}

8878 
GLEE_LINK_FUNCTION
 
	g__GLìWGLLﬂdFun˘i⁄
[30];

8880 
	$öôWGLLﬂdFun˘i⁄s
()

8882 
__GLìWGLLﬂdFun˘i⁄
[0]=
__GLìLök_WGL_ARB_buf„r_ªgi⁄
;

8883 
__GLìWGLLﬂdFun˘i⁄
[1]=
__GLìLök_WGL_ARB_mu…ißm∂e
;

8884 
__GLìWGLLﬂdFun˘i⁄
[2]=
__GLìLök_WGL_ARB_exãnsi⁄s_°rög
;

8885 
__GLìWGLLﬂdFun˘i⁄
[3]=
__GLìLök_WGL_ARB_pixñ_f‹m©
;

8886 
__GLìWGLLﬂdFun˘i⁄
[4]=
__GLìLök_WGL_ARB_make_cuºít_ªad
;

8887 
__GLìWGLLﬂdFun˘i⁄
[5]=
__GLìLök_WGL_ARB_pbuf„r
;

8888 
__GLìWGLLﬂdFun˘i⁄
[6]=
__GLìLök_WGL_ARB_ªndî_ãxtuª
;

8889 
__GLìWGLLﬂdFun˘i⁄
[7]=
__GLìLök_WGL_ARB_pixñ_f‹m©_Êﬂt
;

8890 
__GLìWGLLﬂdFun˘i⁄
[8]=
__GLìLök_WGL_EXT_make_cuºít_ªad
;

8891 
__GLìWGLLﬂdFun˘i⁄
[9]=
__GLìLök_WGL_EXT_pixñ_f‹m©
;

8892 
__GLìWGLLﬂdFun˘i⁄
[10]=
__GLìLök_WGL_EXT_pbuf„r
;

8893 
__GLìWGLLﬂdFun˘i⁄
[11]=
__GLìLök_WGL_EXT_dïth_Êﬂt
;

8894 
__GLìWGLLﬂdFun˘i⁄
[12]=
__GLìLök_WGL_3DFX_mu…ißm∂e
;

8895 
__GLìWGLLﬂdFun˘i⁄
[13]=
__GLìLök_WGL_EXT_mu…ißm∂e
;

8896 
__GLìWGLLﬂdFun˘i⁄
[14]=
__GLìLök_WGL_I3D_digôÆ_video_c⁄åﬁ
;

8897 
__GLìWGLLﬂdFun˘i⁄
[15]=
__GLìLök_WGL_I3D_gamma
;

8898 
__GLìWGLLﬂdFun˘i⁄
[16]=
__GLìLök_WGL_I3D_gílock
;

8899 
__GLìWGLLﬂdFun˘i⁄
[17]=
__GLìLök_WGL_I3D_image_buf„r
;

8900 
__GLìWGLLﬂdFun˘i⁄
[18]=
__GLìLök_WGL_I3D_sw≠_‰ame_lock
;

8901 
__GLìWGLLﬂdFun˘i⁄
[19]=
__GLìLök_WGL_NV_ªndî_dïth_ãxtuª
;

8902 
__GLìWGLLﬂdFun˘i⁄
[20]=
__GLìLök_WGL_NV_ªndî_ãxtuª_ª˘™gÀ
;

8903 
__GLìWGLLﬂdFun˘i⁄
[21]=
__GLìLök_WGL_ATI_pixñ_f‹m©_Êﬂt
;

8904 
__GLìWGLLﬂdFun˘i⁄
[22]=
__GLìLök_WGL_NV_Êﬂt_buf„r
;

8905 
__GLìWGLLﬂdFun˘i⁄
[23]=
__GLìLök_WGL_EXT_di•œy_cﬁ‹_èbÀ
;

8906 
__GLìWGLLﬂdFun˘i⁄
[24]=
__GLìLök_WGL_EXT_exãnsi⁄s_°rög
;

8907 
__GLìWGLLﬂdFun˘i⁄
[25]=
__GLìLök_WGL_EXT_sw≠_c⁄åﬁ
;

8908 
__GLìWGLLﬂdFun˘i⁄
[26]=
__GLìLök_WGL_NV_vîãx_¨øy_ønge
;

8909 
__GLìWGLLﬂdFun˘i⁄
[27]=
__GLìLök_WGL_OML_sync_c⁄åﬁ
;

8910 
__GLìWGLLﬂdFun˘i⁄
[28]=
__GLìLök_WGL_I3D_sw≠_‰ame_ußge
;

8911 
__GLìWGLLﬂdFun˘i⁄
[29]=
__GLìLök_WGL_3DL_°îeo_c⁄åﬁ
;

8912 
	}
}

8914 #ñi‡
deföed
(
__APPLE__
Ë|| deföed(
__APPLE_CC__
)

8916 
GLuöt
 
	$__GLìLök_GLX_VERSION_1_3
()

8918 
GLöt
 
nLöked
=0;

8919 #ifde‡
__GLEE_GLX_VERSION_1_3


8920 i‡((
pglXGëFBC⁄figs
 = (
PFNGLXGETFBCONFIGSPROC
Ë
	`__GLìGëProcAddªss
("glXGëFBC⁄figs"))!=0Ë
nLöked
++;

8921 i‡((
pglXChoo£FBC⁄fig
 = (
PFNGLXCHOOSEFBCONFIGPROC
Ë
	`__GLìGëProcAddªss
("glXChoo£FBC⁄fig"))!=0Ë
nLöked
++;

8922 i‡((
pglXGëFBC⁄figAârib
 = (
PFNGLXGETFBCONFIGATTRIBPROC
Ë
	`__GLìGëProcAddªss
("glXGëFBC⁄figAârib"))!=0Ë
nLöked
++;

8923 i‡((
pglXGëVisuÆFromFBC⁄fig
 = (
PFNGLXGETVISUALFROMFBCONFIGPROC
Ë
	`__GLìGëProcAddªss
("glXGëVisuÆFromFBC⁄fig"))!=0Ë
nLöked
++;

8924 i‡((
pglXCª©eWödow
 = (
PFNGLXCREATEWINDOWPROC
Ë
	`__GLìGëProcAddªss
("glXCª©eWödow"))!=0Ë
nLöked
++;

8925 i‡((
pglXDe°royWödow
 = (
PFNGLXDESTROYWINDOWPROC
Ë
	`__GLìGëProcAddªss
("glXDe°royWödow"))!=0Ë
nLöked
++;

8926 i‡((
pglXCª©ePixm≠
 = (
PFNGLXCREATEPIXMAPPROC
Ë
	`__GLìGëProcAddªss
("glXCª©ePixm≠"))!=0Ë
nLöked
++;

8927 i‡((
pglXDe°royPixm≠
 = (
PFNGLXDESTROYPIXMAPPROC
Ë
	`__GLìGëProcAddªss
("glXDe°royPixm≠"))!=0Ë
nLöked
++;

8928 i‡((
pglXCª©ePbuf„r
 = (
PFNGLXCREATEPBUFFERPROC
Ë
	`__GLìGëProcAddªss
("glXCª©ePbuf„r"))!=0Ë
nLöked
++;

8929 i‡((
pglXDe°royPbuf„r
 = (
PFNGLXDESTROYPBUFFERPROC
Ë
	`__GLìGëProcAddªss
("glXDe°royPbuf„r"))!=0Ë
nLöked
++;

8930 i‡((
pglXQuîyDøwabÀ
 = (
PFNGLXQUERYDRAWABLEPROC
Ë
	`__GLìGëProcAddªss
("glXQuîyDøwabÀ"))!=0Ë
nLöked
++;

8931 i‡((
pglXCª©eNewC⁄ãxt
 = (
PFNGLXCREATENEWCONTEXTPROC
Ë
	`__GLìGëProcAddªss
("glXCª©eNewC⁄ãxt"))!=0Ë
nLöked
++;

8932 i‡((
pglXMakeC⁄ãxtCuºít
 = (
PFNGLXMAKECONTEXTCURRENTPROC
Ë
	`__GLìGëProcAddªss
("glXMakeC⁄ãxtCuºít"))!=0Ë
nLöked
++;

8933 i‡((
pglXGëCuºítRódDøwabÀ
 = (
PFNGLXGETCURRENTREADDRAWABLEPROC
Ë
	`__GLìGëProcAddªss
("glXGëCuºítRódDøwabÀ"))!=0Ë
nLöked
++;

8934 i‡((
pglXGëCuºítDi•œy
 = (
PFNGLXGETCURRENTDISPLAYPROC
Ë
	`__GLìGëProcAddªss
("glXGëCuºítDi•œy"))!=0Ë
nLöked
++;

8935 i‡((
pglXQuîyC⁄ãxt
 = (
PFNGLXQUERYCONTEXTPROC
Ë
	`__GLìGëProcAddªss
("glXQuîyC⁄ãxt"))!=0Ë
nLöked
++;

8936 i‡((
pglXSñe˘Evít
 = (
PFNGLXSELECTEVENTPROC
Ë
	`__GLìGëProcAddªss
("glXSñe˘Evít"))!=0Ë
nLöked
++;

8937 i‡((
pglXGëSñe˘edEvít
 = (
PFNGLXGETSELECTEDEVENTPROC
Ë
	`__GLìGëProcAddªss
("glXGëSñe˘edEvít"))!=0Ë
nLöked
++;

8939 i‡(
nLöked
==18Ë 
GLEE_LINK_COMPLETE
;

8940 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8941  
GLEE_LINK_PARTIAL
;

8942 
	}
}

8944 
GLuöt
 
	$__GLìLök_GLX_VERSION_1_4
()

8946 
GLöt
 
nLöked
=0;

8947 #ifde‡
__GLEE_GLX_VERSION_1_4


8948 i‡((
pglXGëProcAddªss
 = (
PFNGLXGETPROCADDRESSPROC
Ë
	`__GLìGëProcAddªss
("glXGëProcAddªss"))!=0Ë
nLöked
++;

8950 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

8951 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8952  
GLEE_LINK_PARTIAL
;

8953 
	}
}

8955 
GLuöt
 
	$__GLìLök_GLX_ARB_mu…ißm∂e
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8957 
GLuöt
 
	$__GLìLök_GLX_ARB_fbc⁄fig_Êﬂt
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8959 
GLuöt
 
	$__GLìLök_GLX_SGIS_mu…ißm∂e
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8961 
GLuöt
 
	$__GLìLök_GLX_EXT_visuÆ_öfo
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

8963 
GLuöt
 
	$__GLìLök_GLX_SGI_sw≠_c⁄åﬁ
()

8965 
GLöt
 
nLöked
=0;

8966 #ifde‡
__GLEE_GLX_SGI_sw≠_c⁄åﬁ


8967 i‡((
pglXSw≠I¡îvÆSGI
 = (
PFNGLXSWAPINTERVALSGIPROC
Ë
	`__GLìGëProcAddªss
("glXSw≠I¡îvÆSGI"))!=0Ë
nLöked
++;

8969 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

8970 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8971  
GLEE_LINK_PARTIAL
;

8972 
	}
}

8974 
GLuöt
 
	$__GLìLök_GLX_SGI_video_sync
()

8976 
GLöt
 
nLöked
=0;

8977 #ifde‡
__GLEE_GLX_SGI_video_sync


8978 i‡((
pglXGëVideoSyncSGI
 = (
PFNGLXGETVIDEOSYNCSGIPROC
Ë
	`__GLìGëProcAddªss
("glXGëVideoSyncSGI"))!=0Ë
nLöked
++;

8979 i‡((
pglXWaôVideoSyncSGI
 = (
PFNGLXWAITVIDEOSYNCSGIPROC
Ë
	`__GLìGëProcAddªss
("glXWaôVideoSyncSGI"))!=0Ë
nLöked
++;

8981 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

8982 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8983  
GLEE_LINK_PARTIAL
;

8984 
	}
}

8986 
GLuöt
 
	$__GLìLök_GLX_SGI_make_cuºít_ªad
()

8988 
GLöt
 
nLöked
=0;

8989 #ifde‡
__GLEE_GLX_SGI_make_cuºít_ªad


8990 i‡((
pglXMakeCuºítRódSGI
 = (
PFNGLXMAKECURRENTREADSGIPROC
Ë
	`__GLìGëProcAddªss
("glXMakeCuºítRódSGI"))!=0Ë
nLöked
++;

8991 i‡((
pglXGëCuºítRódDøwabÀSGI
 = (
PFNGLXGETCURRENTREADDRAWABLESGIPROC
Ë
	`__GLìGëProcAddªss
("glXGëCuºítRódDøwabÀSGI"))!=0Ë
nLöked
++;

8993 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

8994 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

8995  
GLEE_LINK_PARTIAL
;

8996 
	}
}

8998 
GLuöt
 
	$__GLìLök_GLX_EXT_visuÆ_øtög
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

9000 
GLuöt
 
	$__GLìLök_GLX_EXT_imp‹t_c⁄ãxt
()

9002 
GLöt
 
nLöked
=0;

9003 #ifde‡
__GLEE_GLX_EXT_imp‹t_c⁄ãxt


9004 i‡((
pglXGëCuºítDi•œyEXT
 = (
PFNGLXGETCURRENTDISPLAYEXTPROC
Ë
	`__GLìGëProcAddªss
("glXGëCuºítDi•œyEXT"))!=0Ë
nLöked
++;

9005 i‡((
pglXQuîyC⁄ãxtInfoEXT
 = (
PFNGLXQUERYCONTEXTINFOEXTPROC
Ë
	`__GLìGëProcAddªss
("glXQuîyC⁄ãxtInfoEXT"))!=0Ë
nLöked
++;

9006 i‡((
pglXGëC⁄ãxtIDEXT
 = (
PFNGLXGETCONTEXTIDEXTPROC
Ë
	`__GLìGëProcAddªss
("glXGëC⁄ãxtIDEXT"))!=0Ë
nLöked
++;

9007 i‡((
pglXImp‹tC⁄ãxtEXT
 = (
PFNGLXIMPORTCONTEXTEXTPROC
Ë
	`__GLìGëProcAddªss
("glXImp‹tC⁄ãxtEXT"))!=0Ë
nLöked
++;

9008 i‡((
pglXFªeC⁄ãxtEXT
 = (
PFNGLXFREECONTEXTEXTPROC
Ë
	`__GLìGëProcAddªss
("glXFªeC⁄ãxtEXT"))!=0Ë
nLöked
++;

9010 i‡(
nLöked
==5Ë 
GLEE_LINK_COMPLETE
;

9011 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

9012  
GLEE_LINK_PARTIAL
;

9013 
	}
}

9015 
GLuöt
 
	$__GLìLök_GLX_SGIX_fbc⁄fig
()

9017 
GLöt
 
nLöked
=0;

9018 #ifde‡
__GLEE_GLX_SGIX_fbc⁄fig


9019 i‡((
pglXGëFBC⁄figAâribSGIX
 = (
PFNGLXGETFBCONFIGATTRIBSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXGëFBC⁄figAâribSGIX"))!=0Ë
nLöked
++;

9020 i‡((
pglXChoo£FBC⁄figSGIX
 = (
PFNGLXCHOOSEFBCONFIGSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXChoo£FBC⁄figSGIX"))!=0Ë
nLöked
++;

9021 i‡((
pglXCª©eGLXPixm≠WôhC⁄figSGIX
 = (
PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXCª©eGLXPixm≠WôhC⁄figSGIX"))!=0Ë
nLöked
++;

9022 i‡((
pglXCª©eC⁄ãxtWôhC⁄figSGIX
 = (
PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXCª©eC⁄ãxtWôhC⁄figSGIX"))!=0Ë
nLöked
++;

9023 i‡((
pglXGëVisuÆFromFBC⁄figSGIX
 = (
PFNGLXGETVISUALFROMFBCONFIGSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXGëVisuÆFromFBC⁄figSGIX"))!=0Ë
nLöked
++;

9024 i‡((
pglXGëFBC⁄figFromVisuÆSGIX
 = (
PFNGLXGETFBCONFIGFROMVISUALSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXGëFBC⁄figFromVisuÆSGIX"))!=0Ë
nLöked
++;

9026 i‡(
nLöked
==6Ë 
GLEE_LINK_COMPLETE
;

9027 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

9028  
GLEE_LINK_PARTIAL
;

9029 
	}
}

9031 
GLuöt
 
	$__GLìLök_GLX_SGIX_pbuf„r
()

9033 
GLöt
 
nLöked
=0;

9034 #ifde‡
__GLEE_GLX_SGIX_pbuf„r


9035 i‡((
pglXCª©eGLXPbuf„rSGIX
 = (
PFNGLXCREATEGLXPBUFFERSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXCª©eGLXPbuf„rSGIX"))!=0Ë
nLöked
++;

9036 i‡((
pglXDe°royGLXPbuf„rSGIX
 = (
PFNGLXDESTROYGLXPBUFFERSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXDe°royGLXPbuf„rSGIX"))!=0Ë
nLöked
++;

9037 i‡((
pglXQuîyGLXPbuf„rSGIX
 = (
PFNGLXQUERYGLXPBUFFERSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXQuîyGLXPbuf„rSGIX"))!=0Ë
nLöked
++;

9038 i‡((
pglXSñe˘EvítSGIX
 = (
PFNGLXSELECTEVENTSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXSñe˘EvítSGIX"))!=0Ë
nLöked
++;

9039 i‡((
pglXGëSñe˘edEvítSGIX
 = (
PFNGLXGETSELECTEDEVENTSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXGëSñe˘edEvítSGIX"))!=0Ë
nLöked
++;

9041 i‡(
nLöked
==5Ë 
GLEE_LINK_COMPLETE
;

9042 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

9043  
GLEE_LINK_PARTIAL
;

9044 
	}
}

9046 
GLuöt
 
	$__GLìLök_GLX_SGI_cushi⁄
()

9048 
GLöt
 
nLöked
=0;

9049 #ifde‡
__GLEE_GLX_SGI_cushi⁄


9050 i‡((
pglXCushi⁄SGI
 = (
PFNGLXCUSHIONSGIPROC
Ë
	`__GLìGëProcAddªss
("glXCushi⁄SGI"))!=0Ë
nLöked
++;

9052 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

9053 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

9054  
GLEE_LINK_PARTIAL
;

9055 
	}
}

9057 
GLuöt
 
	$__GLìLök_GLX_SGIX_video_ªsize
()

9059 
GLöt
 
nLöked
=0;

9060 #ifde‡
__GLEE_GLX_SGIX_video_ªsize


9061 i‡((
pglXBödCh™√lToWödowSGIX
 = (
PFNGLXBINDCHANNELTOWINDOWSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXBödCh™√lToWödowSGIX"))!=0Ë
nLöked
++;

9062 i‡((
pglXCh™√lRe˘SGIX
 = (
PFNGLXCHANNELRECTSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXCh™√lRe˘SGIX"))!=0Ë
nLöked
++;

9063 i‡((
pglXQuîyCh™√lRe˘SGIX
 = (
PFNGLXQUERYCHANNELRECTSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXQuîyCh™√lRe˘SGIX"))!=0Ë
nLöked
++;

9064 i‡((
pglXQuîyCh™√lDñèsSGIX
 = (
PFNGLXQUERYCHANNELDELTASSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXQuîyCh™√lDñèsSGIX"))!=0Ë
nLöked
++;

9065 i‡((
pglXCh™√lRe˘SyncSGIX
 = (
PFNGLXCHANNELRECTSYNCSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXCh™√lRe˘SyncSGIX"))!=0Ë
nLöked
++;

9067 i‡(
nLöked
==5Ë 
GLEE_LINK_COMPLETE
;

9068 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

9069  
GLEE_LINK_PARTIAL
;

9070 
	}
}

9072 
GLuöt
 
	$__GLìLök_GLX_SGIX_sw≠_group
()

9074 
GLöt
 
nLöked
=0;

9075 #ifde‡
__GLEE_GLX_SGIX_sw≠_group


9076 i‡((
pglXJoöSw≠GroupSGIX
 = (
PFNGLXJOINSWAPGROUPSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXJoöSw≠GroupSGIX"))!=0Ë
nLöked
++;

9078 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

9079 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

9080  
GLEE_LINK_PARTIAL
;

9081 
	}
}

9083 
GLuöt
 
	$__GLìLök_GLX_SGIX_sw≠_b¨rõr
()

9085 
GLöt
 
nLöked
=0;

9086 #ifde‡
__GLEE_GLX_SGIX_sw≠_b¨rõr


9087 i‡((
pglXBödSw≠B¨rõrSGIX
 = (
PFNGLXBINDSWAPBARRIERSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXBödSw≠B¨rõrSGIX"))!=0Ë
nLöked
++;

9088 i‡((
pglXQuîyMaxSw≠B¨rõrsSGIX
 = (
PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXQuîyMaxSw≠B¨rõrsSGIX"))!=0Ë
nLöked
++;

9090 i‡(
nLöked
==2Ë 
GLEE_LINK_COMPLETE
;

9091 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

9092  
GLEE_LINK_PARTIAL
;

9093 
	}
}

9095 
GLuöt
 
	$__GLìLök_GLX_SGIS_bÀnded_ovîœy
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

9097 
GLuöt
 
	$__GLìLök_GLX_SGIS_sh¨ed_mu…ißm∂e
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

9099 
GLuöt
 
	$__GLìLök_GLX_SUN_gë_å™•¨ít_ödex
()

9101 
GLöt
 
nLöked
=0;

9102 #ifde‡
__GLEE_GLX_SUN_gë_å™•¨ít_ödex


9103 i‡((
pglXGëTøn•¨ítIndexSUN
 = (
PFNGLXGETTRANSPARENTINDEXSUNPROC
Ë
	`__GLìGëProcAddªss
("glXGëTøn•¨ítIndexSUN"))!=0Ë
nLöked
++;

9105 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

9106 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

9107  
GLEE_LINK_PARTIAL
;

9108 
	}
}

9110 
GLuöt
 
	$__GLìLök_GLX_3DFX_mu…ißm∂e
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

9112 
GLuöt
 
	$__GLìLök_GLX_MESA_c›y_sub_buf„r
()

9114 
GLöt
 
nLöked
=0;

9115 #ifde‡
__GLEE_GLX_MESA_c›y_sub_buf„r


9116 i‡((
pglXC›ySubBuf„rMESA
 = (
PFNGLXCOPYSUBBUFFERMESAPROC
Ë
	`__GLìGëProcAddªss
("glXC›ySubBuf„rMESA"))!=0Ë
nLöked
++;

9118 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

9119 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

9120  
GLEE_LINK_PARTIAL
;

9121 
	}
}

9123 
GLuöt
 
	$__GLìLök_GLX_MESA_pixm≠_cﬁ‹m≠
()

9125 
GLöt
 
nLöked
=0;

9126 #ifde‡
__GLEE_GLX_MESA_pixm≠_cﬁ‹m≠


9127 i‡((
pglXCª©eGLXPixm≠MESA
 = (
PFNGLXCREATEGLXPIXMAPMESAPROC
Ë
	`__GLìGëProcAddªss
("glXCª©eGLXPixm≠MESA"))!=0Ë
nLöked
++;

9129 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

9130 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

9131  
GLEE_LINK_PARTIAL
;

9132 
	}
}

9134 
GLuöt
 
	$__GLìLök_GLX_MESA_ªÀa£_buf„rs
()

9136 
GLöt
 
nLöked
=0;

9137 #ifde‡
__GLEE_GLX_MESA_ªÀa£_buf„rs


9138 i‡((
pglXRñó£Buf„rsMESA
 = (
PFNGLXRELEASEBUFFERSMESAPROC
Ë
	`__GLìGëProcAddªss
("glXRñó£Buf„rsMESA"))!=0Ë
nLöked
++;

9140 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

9141 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

9142  
GLEE_LINK_PARTIAL
;

9143 
	}
}

9145 
GLuöt
 
	$__GLìLök_GLX_MESA_£t_3dfx_mode
()

9147 
GLöt
 
nLöked
=0;

9148 #ifde‡
__GLEE_GLX_MESA_£t_3dfx_mode


9149 i‡((
pglXSë3DfxModeMESA
 = (
PFNGLXSET3DFXMODEMESAPROC
Ë
	`__GLìGëProcAddªss
("glXSë3DfxModeMESA"))!=0Ë
nLöked
++;

9151 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

9152 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

9153  
GLEE_LINK_PARTIAL
;

9154 
	}
}

9156 
GLuöt
 
	$__GLìLök_GLX_SGIX_visuÆ_£À˘_group
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

9158 
GLuöt
 
	$__GLìLök_GLX_OML_sw≠_mëhod
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

9160 
GLuöt
 
	$__GLìLök_GLX_OML_sync_c⁄åﬁ
()

9162 
GLöt
 
nLöked
=0;

9163 #ifde‡
__GLEE_GLX_OML_sync_c⁄åﬁ


9164 i‡((
pglXGëSyncVÆuesOML
 = (
PFNGLXGETSYNCVALUESOMLPROC
Ë
	`__GLìGëProcAddªss
("glXGëSyncVÆuesOML"))!=0Ë
nLöked
++;

9165 i‡((
pglXGëMscR©eOML
 = (
PFNGLXGETMSCRATEOMLPROC
Ë
	`__GLìGëProcAddªss
("glXGëMscR©eOML"))!=0Ë
nLöked
++;

9166 i‡((
pglXSw≠Buf„rsMscOML
 = (
PFNGLXSWAPBUFFERSMSCOMLPROC
Ë
	`__GLìGëProcAddªss
("glXSw≠Buf„rsMscOML"))!=0Ë
nLöked
++;

9167 i‡((
pglXWaôF‹MscOML
 = (
PFNGLXWAITFORMSCOMLPROC
Ë
	`__GLìGëProcAddªss
("glXWaôF‹MscOML"))!=0Ë
nLöked
++;

9168 i‡((
pglXWaôF‹SbcOML
 = (
PFNGLXWAITFORSBCOMLPROC
Ë
	`__GLìGëProcAddªss
("glXWaôF‹SbcOML"))!=0Ë
nLöked
++;

9170 i‡(
nLöked
==5Ë 
GLEE_LINK_COMPLETE
;

9171 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

9172  
GLEE_LINK_PARTIAL
;

9173 
	}
}

9175 
GLuöt
 
	$__GLìLök_GLX_NV_Êﬂt_buf„r
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

9177 
GLuöt
 
	$__GLìLök_GLX_SGIX_hy≥Ωùe
()

9179 
GLöt
 
nLöked
=0;

9180 #ifde‡
__GLEE_GLX_SGIX_hy≥Ωùe


9181 i‡((
pglXQuîyHy≥ΩùeNëw‹kSGIX
 = (
PFNGLXQUERYHYPERPIPENETWORKSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXQuîyHy≥ΩùeNëw‹kSGIX"))!=0Ë
nLöked
++;

9182 i‡((
pglXHy≥ΩùeC⁄figSGIX
 = (
PFNGLXHYPERPIPECONFIGSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXHy≥ΩùeC⁄figSGIX"))!=0Ë
nLöked
++;

9183 i‡((
pglXQuîyHy≥ΩùeC⁄figSGIX
 = (
PFNGLXQUERYHYPERPIPECONFIGSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXQuîyHy≥ΩùeC⁄figSGIX"))!=0Ë
nLöked
++;

9184 i‡((
pglXDe°royHy≥ΩùeC⁄figSGIX
 = (
PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXDe°royHy≥ΩùeC⁄figSGIX"))!=0Ë
nLöked
++;

9185 i‡((
pglXBödHy≥ΩùeSGIX
 = (
PFNGLXBINDHYPERPIPESGIXPROC
Ë
	`__GLìGëProcAddªss
("glXBödHy≥ΩùeSGIX"))!=0Ë
nLöked
++;

9186 i‡((
pglXQuîyHy≥ΩùeBe°AâribSGIX
 = (
PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXQuîyHy≥ΩùeBe°AâribSGIX"))!=0Ë
nLöked
++;

9187 i‡((
pglXHy≥ΩùeAâribSGIX
 = (
PFNGLXHYPERPIPEATTRIBSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXHy≥ΩùeAâribSGIX"))!=0Ë
nLöked
++;

9188 i‡((
pglXQuîyHy≥ΩùeAâribSGIX
 = (
PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC
Ë
	`__GLìGëProcAddªss
("glXQuîyHy≥ΩùeAâribSGIX"))!=0Ë
nLöked
++;

9190 i‡(
nLöked
==8Ë 
GLEE_LINK_COMPLETE
;

9191 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

9192  
GLEE_LINK_PARTIAL
;

9193 
	}
}

9195 
GLuöt
 
	$__GLìLök_GLX_MESA_agp_off£t
()

9197 
GLöt
 
nLöked
=0;

9198 #ifde‡
__GLEE_GLX_MESA_agp_off£t


9199 i‡((
pglXGëAGPOff£tMESA
 = (
PFNGLXGETAGPOFFSETMESAPROC
Ë
	`__GLìGëProcAddªss
("glXGëAGPOff£tMESA"))!=0Ë
nLöked
++;

9201 i‡(
nLöked
==1Ë 
GLEE_LINK_COMPLETE
;

9202 i‡(
nLöked
==0Ë 
GLEE_LINK_FAIL
;

9203  
GLEE_LINK_PARTIAL
;

9204 
	}
}

9206 
GLuöt
 
	$__GLìLök_GLX_EXT_s˚√_m¨kî
(Ë{ 
GLEE_LINK_COMPLETE
;
	}
}

9208 
GLEE_LINK_FUNCTION
 
	g__GLìGLXLﬂdFun˘i⁄
[32];

9210 
	$öôGLXLﬂdFun˘i⁄s
()

9212 
__GLìGLXLﬂdFun˘i⁄
[0]=
__GLìLök_GLX_VERSION_1_3
;

9213 
__GLìGLXLﬂdFun˘i⁄
[1]=
__GLìLök_GLX_VERSION_1_4
;

9214 
__GLìGLXLﬂdFun˘i⁄
[2]=
__GLìLök_GLX_ARB_mu…ißm∂e
;

9215 
__GLìGLXLﬂdFun˘i⁄
[3]=
__GLìLök_GLX_ARB_fbc⁄fig_Êﬂt
;

9216 
__GLìGLXLﬂdFun˘i⁄
[4]=
__GLìLök_GLX_SGIS_mu…ißm∂e
;

9217 
__GLìGLXLﬂdFun˘i⁄
[5]=
__GLìLök_GLX_EXT_visuÆ_öfo
;

9218 
__GLìGLXLﬂdFun˘i⁄
[6]=
__GLìLök_GLX_SGI_sw≠_c⁄åﬁ
;

9219 
__GLìGLXLﬂdFun˘i⁄
[7]=
__GLìLök_GLX_SGI_video_sync
;

9220 
__GLìGLXLﬂdFun˘i⁄
[8]=
__GLìLök_GLX_SGI_make_cuºít_ªad
;

9221 
__GLìGLXLﬂdFun˘i⁄
[9]=
__GLìLök_GLX_EXT_visuÆ_øtög
;

9222 
__GLìGLXLﬂdFun˘i⁄
[10]=
__GLìLök_GLX_EXT_imp‹t_c⁄ãxt
;

9223 
__GLìGLXLﬂdFun˘i⁄
[11]=
__GLìLök_GLX_SGIX_fbc⁄fig
;

9224 
__GLìGLXLﬂdFun˘i⁄
[12]=
__GLìLök_GLX_SGIX_pbuf„r
;

9225 
__GLìGLXLﬂdFun˘i⁄
[13]=
__GLìLök_GLX_SGI_cushi⁄
;

9226 
__GLìGLXLﬂdFun˘i⁄
[14]=
__GLìLök_GLX_SGIX_video_ªsize
;

9227 
__GLìGLXLﬂdFun˘i⁄
[15]=
__GLìLök_GLX_SGIX_sw≠_group
;

9228 
__GLìGLXLﬂdFun˘i⁄
[16]=
__GLìLök_GLX_SGIX_sw≠_b¨rõr
;

9229 
__GLìGLXLﬂdFun˘i⁄
[17]=
__GLìLök_GLX_SGIS_bÀnded_ovîœy
;

9230 
__GLìGLXLﬂdFun˘i⁄
[18]=
__GLìLök_GLX_SGIS_sh¨ed_mu…ißm∂e
;

9231 
__GLìGLXLﬂdFun˘i⁄
[19]=
__GLìLök_GLX_SUN_gë_å™•¨ít_ödex
;

9232 
__GLìGLXLﬂdFun˘i⁄
[20]=
__GLìLök_GLX_3DFX_mu…ißm∂e
;

9233 
__GLìGLXLﬂdFun˘i⁄
[21]=
__GLìLök_GLX_MESA_c›y_sub_buf„r
;

9234 
__GLìGLXLﬂdFun˘i⁄
[22]=
__GLìLök_GLX_MESA_pixm≠_cﬁ‹m≠
;

9235 
__GLìGLXLﬂdFun˘i⁄
[23]=
__GLìLök_GLX_MESA_ªÀa£_buf„rs
;

9236 
__GLìGLXLﬂdFun˘i⁄
[24]=
__GLìLök_GLX_MESA_£t_3dfx_mode
;

9237 
__GLìGLXLﬂdFun˘i⁄
[25]=
__GLìLök_GLX_SGIX_visuÆ_£À˘_group
;

9238 
__GLìGLXLﬂdFun˘i⁄
[26]=
__GLìLök_GLX_OML_sw≠_mëhod
;

9239 
__GLìGLXLﬂdFun˘i⁄
[27]=
__GLìLök_GLX_OML_sync_c⁄åﬁ
;

9240 
__GLìGLXLﬂdFun˘i⁄
[28]=
__GLìLök_GLX_NV_Êﬂt_buf„r
;

9241 
__GLìGLXLﬂdFun˘i⁄
[29]=
__GLìLök_GLX_SGIX_hy≥Ωùe
;

9242 
__GLìGLXLﬂdFun˘i⁄
[30]=
__GLìLök_GLX_MESA_agp_off£t
;

9243 
__GLìGLXLﬂdFun˘i⁄
[31]=
__GLìLök_GLX_EXT_s˚√_m¨kî
;

9244 
	}
}

9254 ** 
	m«mes
;

9255 * 
	mÀngths
;

9256 
	mnumNames
;

9257 }
	tExãnsi⁄Li°
;

9263 
	gGLìEº‹Såög
[256]="";

9270 
	$__GLìExtLi°_öô
(
Exãnsi⁄Li°
 *
extLi°
)

9272 
extLi°
->
«mes
=0;

9273 
extLi°
->
Àngths
=0;

9274 
extLi°
->
numNames
=0;

9275 
	}
}

9277 
	$__GLìExtLi°_˛ón
(
Exãnsi⁄Li°
 *
extLi°
)

9279 
a
;

9280 
a
=0;a<
extLi°
->
numNames
;a++)

9282 i‡(
extLi°
->
«mes
[
a
]!=0Ë
	`‰ì
((*)extList->names[a]);

9284 i‡(
extLi°
->
«mes
!=0Ë
	`‰ì
((*)extList->names);

9285 i‡(
extLi°
->
Àngths
!=0Ë
	`‰ì
((*)extList->lengths);

9286 
extLi°
->
«mes
=0;

9287 
extLi°
->
Àngths
=0;

9288 
extLi°
->
numNames
=0;

9289 
	}
}

9291 
	$__GLìExtLi°_add
(
Exãnsi⁄Li°
 *
extLi°
, c⁄° * 
extName
)

9293 
Àngth
=()
	`°æí
(
extName
)+1;

9294 
i
=
extLi°
->
numNames
;

9295 
n
=
i
+1;

9296 i‡(
i
==0)

9298 
extLi°
->
Àngths
=(*)
	`mÆloc
(());

9299 
extLi°
->
«mes
=(**)
	`mÆloc
((*));

9302 
extLi°
->
Àngths
=(*)
	`ªÆloc
((*ÎxtLi°->Àngths, 
n
*());

9303 
extLi°
->
«mes
=(**)
	`ªÆloc
((*ÎxtLi°->«mes, 
n
*(*));

9305 
extLi°
->
«mes
[
i
]=(*)
	`mÆloc
(
Àngth
*());

9306 
	`°r˝y
(
extLi°
->
«mes
[
i
],
extName
);

9307 
extLi°
->
Àngths
[
i
]=
Àngth
;

9308 
extLi°
->
numNames
++;

9309 
	}
}

9311 c⁄° *
	$__GLìGëExtSåPœt
()

9313 #ifde‡
WIN32


9314 i‡(!
_GLEE_WGL_ARB_exãnsi⁄s_°rög
)

9315 
pwglGëExãnsi⁄sSåögARB
 = (
PFNWGLGETEXTENSIONSSTRINGARBPROC
Ë
	`wglGëProcAddªss
("wglGetExtensionsStringARB");

9317 i‡(
pwglGëExãnsi⁄sSåögARB
)

9318  (c⁄° *)
	`pwglGëExãnsi⁄sSåögARB
(
	`wglGëCuºítDC
());

9319 #ñi‡
	`deföed
(
__APPLE__
Ë|| deföed(
__APPLE_CC__
)

9321 
Di•œy
 *
dpy
=
	`glXGëCuºítDi•œy
();

9322 if(
dpy
)

9324 
dpyƒ
=
	`DeÁu…S¸ìn
(
dpy
);

9325  (c⁄° *)
	`glXQuîyExãnsi⁄sSåög
(
dpy
,
dpyƒ
);

9329 
	}
}

9331 
	$__GLìWrôeEº‹
(c⁄° * 
îr‹Så
)

9333 
a
=0;

9334 
a
=0;a<256;a++)

9336 
GLìEº‹Såög
[
a
]=
îr‹Så
[a];

9338 
GLìEº‹Såög
[255]='\0';

9339 
	}
}

9341 
	$__GLìGëVîsi⁄Numbî
(*
vîsi⁄Så
)

9343 
maj‹
=()
vîsi⁄Så
[0]-()'0';

9344 
mö‹
=()
vîsi⁄Så
[2]-()'0';

9345  
maj‹
<<8 | 
mö‹
;

9346 
	}
}

9348 
GLboﬁón
 
	$__GLìGëExãnsi⁄s
(
Exãnsi⁄Li°
* 
extLi°
)

9350 c⁄° * 
∂©ExtSå
;

9351 c⁄° * 
glExtSå
;

9352 * 
extSå
;

9353 
em±ySåög
[1]="";

9354 
exãnsi⁄Name
[1024];

9355 
a
,
b
;

9356 
numExãnsi⁄s
;

9357 
eNum
;

9360 
∂©ExtSå
=
	`__GLìGëExtSåPœt
();

9361 i‡(!
∂©ExtSå
Ë∂©ExtSå=
em±ySåög
;

9363 
glExtSå
=(c⁄° *)
	`glGëSåög
(
GL_EXTENSIONS
);

9364 i‡(
glExtSå
==0)

9366 
	`__GLìWrôeEº‹
("glGetString(GL_EXTENSIONS) failed.");

9367  
GL_FALSE
;

9371 
extSå
=(*)
	`mÆloc
–(
	`°æí
(
∂©ExtSå
)+°æí(
glExtSå
)+1) * () );

9374 
	`•rötf
(
extSå
,"%s%s",
∂©ExtSå
,
glExtSå
);

9377 
numExãnsi⁄s
=0;

9378 
a
=0;
extSå
[a]!='\0';++a)

9380 i‡(
extSå
[
a
]==' 'Ë++
numExãnsi⁄s
;

9384 
eNum
=0;

9385 
a
=0;

9386 
extSå
[
a
]!='\0')

9388 
b
=0;

9389 
extSå
[
a
]!=' ' &&ÉxtSå[a]!='\0' && 
b
<1022)

9391 
exãnsi⁄Name
[
b
]=
extSå
[
a
];

9392 
b
++; 
a
++;

9394 i‡(
b
==1023)

9396 
	`__GLìWrôeEº‹
("ExtensionÇameÉxceeds 1023 characters.");

9397 
	`‰ì
((*)
extSå
);

9398  
GL_FALSE
;

9401 
exãnsi⁄Name
[
b
]='\0';

9404 
	`__GLìExtLi°_add
(
extLi°
,
exãnsi⁄Name
);

9406 
eNum
++; 
a
++;

9408 
	`‰ì
((*)
extSå
);

9409  
GL_TRUE
;

9410 
	}
}

9412 
GLboﬁón
 
	$__GLìCheckExãnsi⁄
(c⁄° * 
«me
, 
Exãnsi⁄Li°
 *
exãnsi⁄Names
)

9414 
n
=
exãnsi⁄Names
->
numNames
;

9415 
a
;

9416 
a
=0;a<
n
;a++)

9418 i‡(
	`°rcmp
(
exãnsi⁄Names
->
«mes
[
a
],
«me
)==0)

9419  
GL_TRUE
;

9421  
GL_FALSE
;

9422 
	}
}

9424 
GLEE_EXTERN
 
GLöt
 
	$__GLìGëExãnsi⁄Numbî
(c⁄° *
exãnsi⁄Name
, 
ty≥
)

9426 
a
;

9427 
ty≥
)

9430 
a
=0;a<
__GLìGLNumExãnsi⁄s
;a++)

9431 i‡(
	`°rcmp
(
exãnsi⁄Name
,
__GLìGLExãnsi⁄Names
[
a
])==0) á;

9433 #ifde‡
WIN32


9435 
a
=0;a<
__GLìWGLNumExãnsi⁄s
;a++)

9436 i‡(
	`°rcmp
(
exãnsi⁄Name
,
__GLìWGLExãnsi⁄Names
[
a
])==0) á;

9438 #ñi‡
	`deföed
(
__APPLE__
Ë|| deföed(
__APPLE_CC__
)

9441 
a
=0;a<
__GLìGLXNumExãnsi⁄s
;a++)

9442 i‡(
	`°rcmp
(
exãnsi⁄Name
,
__GLìGLXExãnsi⁄Names
[
a
])==0) á;

9447 
	}
}

9453 #ifde‡
WIN32


9454 
GLEE_EXTERN
 c⁄° * 
	$GLìGëExtSåWGL
()

9456  
	`__GLìGëExtSåPœt
();

9457 
	}
}

9458 #ñi‡
deföed
(
__APPLE__
Ë|| deföed(
__APPLE_CC__
)

9460 
GLEE_EXTERN
 c⁄° * 
	$GLìGëExtSåGLX
()

9462  
	`__GLìGëExtSåPœt
();

9463 
	}
}

9466 
GLEE_EXTERN
 c⁄° * 
	$GLìGëExtSåGL
()

9468  (c⁄° *)
	`glGëSåög
(
GL_EXTENSIONS
);

9469 
	}
}

9471 
GLEE_EXTERN
 c⁄° * 
	$GLìGëEº‹Såög
()

9473  
GLìEº‹Såög
;

9474 
	}
}

9476 
GLboﬁón
 
	g__GLìInôedLﬂdFun˘i⁄s
=
GL_FALSE
;

9478 
GLEE_EXTERN
 
GLöt
 
	$GLìF‹˚Lök
(c⁄° * 
exãnsi⁄Name
)

9480 
ty≥
=0;

9481 
extNum
;

9482 
Àn
=()
	`°æí
(
exãnsi⁄Name
);

9483 i‡(
Àn
<5Ë 
GLEE_LINK_FAIL
;

9484 i‡(!
__GLìInôedLﬂdFun˘i⁄s
)

9486 i‡(!
__GLìInôed
Ë
	`GLìInô
();

9487 
	`öôGLLﬂdFun˘i⁄s
();

9488 #ifde‡
WIN32


9489 
	`öôWGLLﬂdFun˘i⁄s
();

9490 #ñi‡
	`deföed
(
__APPLE__
Ë|| deföed(
__APPLE_CC__
)

9492 
	`öôGLXLﬂdFun˘i⁄s
();

9494 
__GLìInôedLﬂdFun˘i⁄s
=
GL_TRUE
;

9496 i‡(
exãnsi⁄Name
[0]=='W'Ë
ty≥
=1;

9497 i‡(
exãnsi⁄Name
[2]=='X'Ë
ty≥
=2;

9498 
extNum
=
	`__GLìGëExãnsi⁄Numbî
(
exãnsi⁄Name
,
ty≥
);

9499 i‡(
extNum
==-1Ë 
GLEE_LINK_FAIL
;

9500 i‡(
ty≥
==0Ë 
__GLìGLLﬂdFun˘i⁄
[
extNum
]();

9501 #ifde‡
WIN32


9502 i‡(
ty≥
==1Ë 
__GLìWGLLﬂdFun˘i⁄
[
extNum
]();

9503 #ñi‡
	`deföed
(
__APPLE__
Ë|| deföed(
__APPLE_CC__
)

9505 i‡(
ty≥
==2Ë 
__GLìGLXLﬂdFun˘i⁄
[
extNum
]();

9507  
GLEE_LINK_FAIL
;

9508 
	}
}

9510 
GLEE_EXTERN
 
GLboﬁón
 
	$GLìE«bÀd
(
GLboﬁón
 * 
exãnsi⁄QuîyögV¨übÀ
)

9512 i‡(!
__GLìInôed
Ë
	`GLìInô
();

9513  *
exãnsi⁄QuîyögV¨übÀ
;

9514 
	}
}

9516 
GLEE_EXTERN
 
GLboﬁón
 
	$GLìInô
()

9518 
vîsi⁄
;

9519 
Exãnsi⁄Li°
 
exãnsi⁄Names
;

9521 i‡(
__GLìInôed
)

9523  
GL_FALSE
;

9526 
	`__GLìExtLi°_öô
(&
exãnsi⁄Names
);

9527 i‡(!
	`__GLìGëExãnsi⁄s
(&
exãnsi⁄Names
))

9529 
	`__GLìWrôeEº‹
("GLÉxtension querying failed.");

9530 
	`__GLìExtLi°_˛ón
(&
exãnsi⁄Names
);

9531  
GL_FALSE
;

9534 
vîsi⁄
=
	`__GLìGëVîsi⁄Numbî
((*)
	`glGëSåög
(
GL_VERSION
));

9536 
__GLìInôed
 = 
GL_TRUE
;

9542 i‡(
vîsi⁄
>=258)

9544 
_GLEE_VERSION_1_2
 = 
GL_TRUE
;

9545 
	`__GLìLök_GL_VERSION_1_2
();

9547 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_imagög", &
exãnsi⁄Names
) )

9549 
_GLEE_ARB_imagög
 = 
GL_TRUE
;

9550 
	`__GLìLök_GL_ARB_imagög
();

9552 i‡(
vîsi⁄
>=259)

9554 
_GLEE_VERSION_1_3
 = 
GL_TRUE
;

9555 
	`__GLìLök_GL_VERSION_1_3
();

9557 i‡(
vîsi⁄
>=260)

9559 
_GLEE_VERSION_1_4
 = 
GL_TRUE
;

9560 
	`__GLìLök_GL_VERSION_1_4
();

9562 i‡(
vîsi⁄
>=261)

9564 
_GLEE_VERSION_1_5
 = 
GL_TRUE
;

9565 
	`__GLìLök_GL_VERSION_1_5
();

9567 i‡(
vîsi⁄
>=512)

9569 
_GLEE_VERSION_2_0
 = 
GL_TRUE
;

9570 
	`__GLìLök_GL_VERSION_2_0
();

9572 i‡(
vîsi⁄
>=513)

9574 
_GLEE_VERSION_2_1
 = 
GL_TRUE
;

9575 
	`__GLìLök_GL_VERSION_2_1
();

9577 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_mu…ôextuª", &
exãnsi⁄Names
) )

9579 
_GLEE_ARB_mu…ôextuª
 = 
GL_TRUE
;

9580 
	`__GLìLök_GL_ARB_mu…ôextuª
();

9582 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_å™•o£_m©rix", &
exãnsi⁄Names
) )

9584 
_GLEE_ARB_å™•o£_m©rix
 = 
GL_TRUE
;

9585 
	`__GLìLök_GL_ARB_å™•o£_m©rix
();

9587 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_mu…ißm∂e", &
exãnsi⁄Names
) )

9589 
_GLEE_ARB_mu…ißm∂e
 = 
GL_TRUE
;

9590 
	`__GLìLök_GL_ARB_mu…ißm∂e
();

9592 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_ãxtuª_ív_add", &
exãnsi⁄Names
) )

9594 
_GLEE_ARB_ãxtuª_ív_add
 = 
GL_TRUE
;

9595 
	`__GLìLök_GL_ARB_ãxtuª_ív_add
();

9597 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_ãxtuª_cube_m≠", &
exãnsi⁄Names
) )

9599 
_GLEE_ARB_ãxtuª_cube_m≠
 = 
GL_TRUE
;

9600 
	`__GLìLök_GL_ARB_ãxtuª_cube_m≠
();

9602 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_ãxtuª_com¥essi⁄", &
exãnsi⁄Names
) )

9604 
_GLEE_ARB_ãxtuª_com¥essi⁄
 = 
GL_TRUE
;

9605 
	`__GLìLök_GL_ARB_ãxtuª_com¥essi⁄
();

9607 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_ãxtuª_b‹dî_˛amp", &
exãnsi⁄Names
) )

9609 
_GLEE_ARB_ãxtuª_b‹dî_˛amp
 = 
GL_TRUE
;

9610 
	`__GLìLök_GL_ARB_ãxtuª_b‹dî_˛amp
();

9612 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_poöt_∑ømëîs", &
exãnsi⁄Names
) )

9614 
_GLEE_ARB_poöt_∑ømëîs
 = 
GL_TRUE
;

9615 
	`__GLìLök_GL_ARB_poöt_∑ømëîs
();

9617 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_vîãx_bÀnd", &
exãnsi⁄Names
) )

9619 
_GLEE_ARB_vîãx_bÀnd
 = 
GL_TRUE
;

9620 
	`__GLìLök_GL_ARB_vîãx_bÀnd
();

9622 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_m©rix_∑Àâe", &
exãnsi⁄Names
) )

9624 
_GLEE_ARB_m©rix_∑Àâe
 = 
GL_TRUE
;

9625 
	`__GLìLök_GL_ARB_m©rix_∑Àâe
();

9627 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_ãxtuª_ív_comböe", &
exãnsi⁄Names
) )

9629 
_GLEE_ARB_ãxtuª_ív_comböe
 = 
GL_TRUE
;

9630 
	`__GLìLök_GL_ARB_ãxtuª_ív_comböe
();

9632 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_ãxtuª_ív_¸ossb¨", &
exãnsi⁄Names
) )

9634 
_GLEE_ARB_ãxtuª_ív_¸ossb¨
 = 
GL_TRUE
;

9635 
	`__GLìLök_GL_ARB_ãxtuª_ív_¸ossb¨
();

9637 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_ãxtuª_ív_dŸ3", &
exãnsi⁄Names
) )

9639 
_GLEE_ARB_ãxtuª_ív_dŸ3
 = 
GL_TRUE
;

9640 
	`__GLìLök_GL_ARB_ãxtuª_ív_dŸ3
();

9642 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_ãxtuª_múr‹ed_ª≥©", &
exãnsi⁄Names
) )

9644 
_GLEE_ARB_ãxtuª_múr‹ed_ª≥©
 = 
GL_TRUE
;

9645 
	`__GLìLök_GL_ARB_ãxtuª_múr‹ed_ª≥©
();

9647 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_dïth_ãxtuª", &
exãnsi⁄Names
) )

9649 
_GLEE_ARB_dïth_ãxtuª
 = 
GL_TRUE
;

9650 
	`__GLìLök_GL_ARB_dïth_ãxtuª
();

9652 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_shadow", &
exãnsi⁄Names
) )

9654 
_GLEE_ARB_shadow
 = 
GL_TRUE
;

9655 
	`__GLìLök_GL_ARB_shadow
();

9657 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_shadow_ambõ¡", &
exãnsi⁄Names
) )

9659 
_GLEE_ARB_shadow_ambõ¡
 = 
GL_TRUE
;

9660 
	`__GLìLök_GL_ARB_shadow_ambõ¡
();

9662 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_wödow_pos", &
exãnsi⁄Names
) )

9664 
_GLEE_ARB_wödow_pos
 = 
GL_TRUE
;

9665 
	`__GLìLök_GL_ARB_wödow_pos
();

9667 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_vîãx_¥ogøm", &
exãnsi⁄Names
) )

9669 
_GLEE_ARB_vîãx_¥ogøm
 = 
GL_TRUE
;

9670 
	`__GLìLök_GL_ARB_vîãx_¥ogøm
();

9672 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_‰agmít_¥ogøm", &
exãnsi⁄Names
) )

9674 
_GLEE_ARB_‰agmít_¥ogøm
 = 
GL_TRUE
;

9675 
	`__GLìLök_GL_ARB_‰agmít_¥ogøm
();

9677 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_vîãx_buf„r_obje˘", &
exãnsi⁄Names
) )

9679 
_GLEE_ARB_vîãx_buf„r_obje˘
 = 
GL_TRUE
;

9680 
	`__GLìLök_GL_ARB_vîãx_buf„r_obje˘
();

9682 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_oc˛usi⁄_quîy", &
exãnsi⁄Names
) )

9684 
_GLEE_ARB_oc˛usi⁄_quîy
 = 
GL_TRUE
;

9685 
	`__GLìLök_GL_ARB_oc˛usi⁄_quîy
();

9687 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_shadî_obje˘s", &
exãnsi⁄Names
) )

9689 
_GLEE_ARB_shadî_obje˘s
 = 
GL_TRUE
;

9690 
	`__GLìLök_GL_ARB_shadî_obje˘s
();

9692 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_vîãx_shadî", &
exãnsi⁄Names
) )

9694 
_GLEE_ARB_vîãx_shadî
 = 
GL_TRUE
;

9695 
	`__GLìLök_GL_ARB_vîãx_shadî
();

9697 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_‰agmít_shadî", &
exãnsi⁄Names
) )

9699 
_GLEE_ARB_‰agmít_shadî
 = 
GL_TRUE
;

9700 
	`__GLìLök_GL_ARB_‰agmít_shadî
();

9702 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_shadög_œnguage_100", &
exãnsi⁄Names
) )

9704 
_GLEE_ARB_shadög_œnguage_100
 = 
GL_TRUE
;

9705 
	`__GLìLök_GL_ARB_shadög_œnguage_100
();

9707 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_ãxtuª_n⁄_powî_of_two", &
exãnsi⁄Names
) )

9709 
_GLEE_ARB_ãxtuª_n⁄_powî_of_two
 = 
GL_TRUE
;

9710 
	`__GLìLök_GL_ARB_ãxtuª_n⁄_powî_of_two
();

9712 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_poöt_•rôe", &
exãnsi⁄Names
) )

9714 
_GLEE_ARB_poöt_•rôe
 = 
GL_TRUE
;

9715 
	`__GLìLök_GL_ARB_poöt_•rôe
();

9717 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_‰agmít_¥ogøm_shadow", &
exãnsi⁄Names
) )

9719 
_GLEE_ARB_‰agmít_¥ogøm_shadow
 = 
GL_TRUE
;

9720 
	`__GLìLök_GL_ARB_‰agmít_¥ogøm_shadow
();

9722 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_døw_buf„rs", &
exãnsi⁄Names
) )

9724 
_GLEE_ARB_døw_buf„rs
 = 
GL_TRUE
;

9725 
	`__GLìLök_GL_ARB_døw_buf„rs
();

9727 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_ãxtuª_ª˘™gÀ", &
exãnsi⁄Names
) )

9729 
_GLEE_ARB_ãxtuª_ª˘™gÀ
 = 
GL_TRUE
;

9730 
	`__GLìLök_GL_ARB_ãxtuª_ª˘™gÀ
();

9732 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_cﬁ‹_buf„r_Êﬂt", &
exãnsi⁄Names
) )

9734 
_GLEE_ARB_cﬁ‹_buf„r_Êﬂt
 = 
GL_TRUE
;

9735 
	`__GLìLök_GL_ARB_cﬁ‹_buf„r_Êﬂt
();

9737 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_hÆf_Êﬂt_pixñ", &
exãnsi⁄Names
) )

9739 
_GLEE_ARB_hÆf_Êﬂt_pixñ
 = 
GL_TRUE
;

9740 
	`__GLìLök_GL_ARB_hÆf_Êﬂt_pixñ
();

9742 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_ãxtuª_Êﬂt", &
exãnsi⁄Names
) )

9744 
_GLEE_ARB_ãxtuª_Êﬂt
 = 
GL_TRUE
;

9745 
	`__GLìLök_GL_ARB_ãxtuª_Êﬂt
();

9747 i‡(
	`__GLìCheckExãnsi⁄
("GL_ARB_pixñ_buf„r_obje˘", &
exãnsi⁄Names
) )

9749 
_GLEE_ARB_pixñ_buf„r_obje˘
 = 
GL_TRUE
;

9750 
	`__GLìLök_GL_ARB_pixñ_buf„r_obje˘
();

9752 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_abgr", &
exãnsi⁄Names
) )

9754 
_GLEE_EXT_abgr
 = 
GL_TRUE
;

9755 
	`__GLìLök_GL_EXT_abgr
();

9757 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_bÀnd_cﬁ‹", &
exãnsi⁄Names
) )

9759 
_GLEE_EXT_bÀnd_cﬁ‹
 = 
GL_TRUE
;

9760 
	`__GLìLök_GL_EXT_bÀnd_cﬁ‹
();

9762 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_pﬁyg⁄_off£t", &
exãnsi⁄Names
) )

9764 
_GLEE_EXT_pﬁyg⁄_off£t
 = 
GL_TRUE
;

9765 
	`__GLìLök_GL_EXT_pﬁyg⁄_off£t
();

9767 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª", &
exãnsi⁄Names
) )

9769 
_GLEE_EXT_ãxtuª
 = 
GL_TRUE
;

9770 
	`__GLìLök_GL_EXT_ãxtuª
();

9772 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª3D", &
exãnsi⁄Names
) )

9774 
_GLEE_EXT_ãxtuª3D
 = 
GL_TRUE
;

9775 
	`__GLìLök_GL_EXT_ãxtuª3D
();

9777 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIS_ãxtuª_fûãr4", &
exãnsi⁄Names
) )

9779 
_GLEE_SGIS_ãxtuª_fûãr4
 = 
GL_TRUE
;

9780 
	`__GLìLök_GL_SGIS_ãxtuª_fûãr4
();

9782 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_subãxtuª", &
exãnsi⁄Names
) )

9784 
_GLEE_EXT_subãxtuª
 = 
GL_TRUE
;

9785 
	`__GLìLök_GL_EXT_subãxtuª
();

9787 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_c›y_ãxtuª", &
exãnsi⁄Names
) )

9789 
_GLEE_EXT_c›y_ãxtuª
 = 
GL_TRUE
;

9790 
	`__GLìLök_GL_EXT_c›y_ãxtuª
();

9792 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_hi°ogøm", &
exãnsi⁄Names
) )

9794 
_GLEE_EXT_hi°ogøm
 = 
GL_TRUE
;

9795 
	`__GLìLök_GL_EXT_hi°ogøm
();

9797 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_c⁄vﬁuti⁄", &
exãnsi⁄Names
) )

9799 
_GLEE_EXT_c⁄vﬁuti⁄
 = 
GL_TRUE
;

9800 
	`__GLìLök_GL_EXT_c⁄vﬁuti⁄
();

9802 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGI_cﬁ‹_m©rix", &
exãnsi⁄Names
) )

9804 
_GLEE_SGI_cﬁ‹_m©rix
 = 
GL_TRUE
;

9805 
	`__GLìLök_GL_SGI_cﬁ‹_m©rix
();

9807 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGI_cﬁ‹_èbÀ", &
exãnsi⁄Names
) )

9809 
_GLEE_SGI_cﬁ‹_èbÀ
 = 
GL_TRUE
;

9810 
	`__GLìLök_GL_SGI_cﬁ‹_èbÀ
();

9812 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIS_pixñ_ãxtuª", &
exãnsi⁄Names
) )

9814 
_GLEE_SGIS_pixñ_ãxtuª
 = 
GL_TRUE
;

9815 
	`__GLìLök_GL_SGIS_pixñ_ãxtuª
();

9817 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_pixñ_ãxtuª", &
exãnsi⁄Names
) )

9819 
_GLEE_SGIX_pixñ_ãxtuª
 = 
GL_TRUE
;

9820 
	`__GLìLök_GL_SGIX_pixñ_ãxtuª
();

9822 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIS_ãxtuª4D", &
exãnsi⁄Names
) )

9824 
_GLEE_SGIS_ãxtuª4D
 = 
GL_TRUE
;

9825 
	`__GLìLök_GL_SGIS_ãxtuª4D
();

9827 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGI_ãxtuª_cﬁ‹_èbÀ", &
exãnsi⁄Names
) )

9829 
_GLEE_SGI_ãxtuª_cﬁ‹_èbÀ
 = 
GL_TRUE
;

9830 
	`__GLìLök_GL_SGI_ãxtuª_cﬁ‹_èbÀ
();

9832 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_cmyka", &
exãnsi⁄Names
) )

9834 
_GLEE_EXT_cmyka
 = 
GL_TRUE
;

9835 
	`__GLìLök_GL_EXT_cmyka
();

9837 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_obje˘", &
exãnsi⁄Names
) )

9839 
_GLEE_EXT_ãxtuª_obje˘
 = 
GL_TRUE
;

9840 
	`__GLìLök_GL_EXT_ãxtuª_obje˘
();

9842 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIS_dëaû_ãxtuª", &
exãnsi⁄Names
) )

9844 
_GLEE_SGIS_dëaû_ãxtuª
 = 
GL_TRUE
;

9845 
	`__GLìLök_GL_SGIS_dëaû_ãxtuª
();

9847 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIS_sh¨≥n_ãxtuª", &
exãnsi⁄Names
) )

9849 
_GLEE_SGIS_sh¨≥n_ãxtuª
 = 
GL_TRUE
;

9850 
	`__GLìLök_GL_SGIS_sh¨≥n_ãxtuª
();

9852 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_∑cked_pixñs", &
exãnsi⁄Names
) )

9854 
_GLEE_EXT_∑cked_pixñs
 = 
GL_TRUE
;

9855 
	`__GLìLök_GL_EXT_∑cked_pixñs
();

9857 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIS_ãxtuª_lod", &
exãnsi⁄Names
) )

9859 
_GLEE_SGIS_ãxtuª_lod
 = 
GL_TRUE
;

9860 
	`__GLìLök_GL_SGIS_ãxtuª_lod
();

9862 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIS_mu…ißm∂e", &
exãnsi⁄Names
) )

9864 
_GLEE_SGIS_mu…ißm∂e
 = 
GL_TRUE
;

9865 
	`__GLìLök_GL_SGIS_mu…ißm∂e
();

9867 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ªsˇÀ_n‹mÆ", &
exãnsi⁄Names
) )

9869 
_GLEE_EXT_ªsˇÀ_n‹mÆ
 = 
GL_TRUE
;

9870 
	`__GLìLök_GL_EXT_ªsˇÀ_n‹mÆ
();

9872 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_vîãx_¨øy", &
exãnsi⁄Names
) )

9874 
_GLEE_EXT_vîãx_¨øy
 = 
GL_TRUE
;

9875 
	`__GLìLök_GL_EXT_vîãx_¨øy
();

9877 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_misc_©åibuã", &
exãnsi⁄Names
) )

9879 
_GLEE_EXT_misc_©åibuã
 = 
GL_TRUE
;

9880 
	`__GLìLök_GL_EXT_misc_©åibuã
();

9882 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIS_gíî©e_mùm≠", &
exãnsi⁄Names
) )

9884 
_GLEE_SGIS_gíî©e_mùm≠
 = 
GL_TRUE
;

9885 
	`__GLìLök_GL_SGIS_gíî©e_mùm≠
();

9887 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_˛ùm≠", &
exãnsi⁄Names
) )

9889 
_GLEE_SGIX_˛ùm≠
 = 
GL_TRUE
;

9890 
	`__GLìLök_GL_SGIX_˛ùm≠
();

9892 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_shadow", &
exãnsi⁄Names
) )

9894 
_GLEE_SGIX_shadow
 = 
GL_TRUE
;

9895 
	`__GLìLök_GL_SGIX_shadow
();

9897 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIS_ãxtuª_edge_˛amp", &
exãnsi⁄Names
) )

9899 
_GLEE_SGIS_ãxtuª_edge_˛amp
 = 
GL_TRUE
;

9900 
	`__GLìLök_GL_SGIS_ãxtuª_edge_˛amp
();

9902 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIS_ãxtuª_b‹dî_˛amp", &
exãnsi⁄Names
) )

9904 
_GLEE_SGIS_ãxtuª_b‹dî_˛amp
 = 
GL_TRUE
;

9905 
	`__GLìLök_GL_SGIS_ãxtuª_b‹dî_˛amp
();

9907 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_bÀnd_mömax", &
exãnsi⁄Names
) )

9909 
_GLEE_EXT_bÀnd_mömax
 = 
GL_TRUE
;

9910 
	`__GLìLök_GL_EXT_bÀnd_mömax
();

9912 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_bÀnd_subåa˘", &
exãnsi⁄Names
) )

9914 
_GLEE_EXT_bÀnd_subåa˘
 = 
GL_TRUE
;

9915 
	`__GLìLök_GL_EXT_bÀnd_subåa˘
();

9917 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_bÀnd_logic_›", &
exãnsi⁄Names
) )

9919 
_GLEE_EXT_bÀnd_logic_›
 = 
GL_TRUE
;

9920 
	`__GLìLök_GL_EXT_bÀnd_logic_›
();

9922 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_öãæa˚", &
exãnsi⁄Names
) )

9924 
_GLEE_SGIX_öãæa˚
 = 
GL_TRUE
;

9925 
	`__GLìLök_GL_SGIX_öãæa˚
();

9927 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_pixñ_tûes", &
exãnsi⁄Names
) )

9929 
_GLEE_SGIX_pixñ_tûes
 = 
GL_TRUE
;

9930 
	`__GLìLök_GL_SGIX_pixñ_tûes
();

9932 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIS_ãxtuª_£À˘", &
exãnsi⁄Names
) )

9934 
_GLEE_SGIS_ãxtuª_£À˘
 = 
GL_TRUE
;

9935 
	`__GLìLök_GL_SGIS_ãxtuª_£À˘
();

9937 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_•rôe", &
exãnsi⁄Names
) )

9939 
_GLEE_SGIX_•rôe
 = 
GL_TRUE
;

9940 
	`__GLìLök_GL_SGIX_•rôe
();

9942 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_ãxtuª_mu…i_buf„r", &
exãnsi⁄Names
) )

9944 
_GLEE_SGIX_ãxtuª_mu…i_buf„r
 = 
GL_TRUE
;

9945 
	`__GLìLök_GL_SGIX_ãxtuª_mu…i_buf„r
();

9947 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_poöt_∑ømëîs", &
exãnsi⁄Names
) )

9949 
_GLEE_EXT_poöt_∑ømëîs
 = 
GL_TRUE
;

9950 
	`__GLìLök_GL_EXT_poöt_∑ømëîs
();

9952 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIS_poöt_∑ømëîs", &
exãnsi⁄Names
) )

9954 
_GLEE_SGIS_poöt_∑ømëîs
 = 
GL_TRUE
;

9955 
	`__GLìLök_GL_SGIS_poöt_∑ømëîs
();

9957 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_ö°rumíts", &
exãnsi⁄Names
) )

9959 
_GLEE_SGIX_ö°rumíts
 = 
GL_TRUE
;

9960 
	`__GLìLök_GL_SGIX_ö°rumíts
();

9962 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_ãxtuª_sˇÀ_büs", &
exãnsi⁄Names
) )

9964 
_GLEE_SGIX_ãxtuª_sˇÀ_büs
 = 
GL_TRUE
;

9965 
	`__GLìLök_GL_SGIX_ãxtuª_sˇÀ_büs
();

9967 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_‰amezoom", &
exãnsi⁄Names
) )

9969 
_GLEE_SGIX_‰amezoom
 = 
GL_TRUE
;

9970 
	`__GLìLök_GL_SGIX_‰amezoom
();

9972 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_èg_ßm∂e_buf„r", &
exãnsi⁄Names
) )

9974 
_GLEE_SGIX_èg_ßm∂e_buf„r
 = 
GL_TRUE
;

9975 
	`__GLìLök_GL_SGIX_èg_ßm∂e_buf„r
();

9977 i‡(
	`__GLìCheckExãnsi⁄
("GL_FfdMaskSGIX", &
exãnsi⁄Names
) )

9979 
_GLEE_FfdMaskSGIX
 = 
GL_TRUE
;

9980 
	`__GLìLök_GL_FfdMaskSGIX
();

9982 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_pﬁynomül_ffd", &
exãnsi⁄Names
) )

9984 
_GLEE_SGIX_pﬁynomül_ffd
 = 
GL_TRUE
;

9985 
	`__GLìLök_GL_SGIX_pﬁynomül_ffd
();

9987 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_ª„ªn˚_∂™e", &
exãnsi⁄Names
) )

9989 
_GLEE_SGIX_ª„ªn˚_∂™e
 = 
GL_TRUE
;

9990 
	`__GLìLök_GL_SGIX_ª„ªn˚_∂™e
();

9992 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_Êush_ø°î", &
exãnsi⁄Names
) )

9994 
_GLEE_SGIX_Êush_ø°î
 = 
GL_TRUE
;

9995 
	`__GLìLök_GL_SGIX_Êush_ø°î
();

9997 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_dïth_ãxtuª", &
exãnsi⁄Names
) )

9999 
_GLEE_SGIX_dïth_ãxtuª
 = 
GL_TRUE
;

10000 
	`__GLìLök_GL_SGIX_dïth_ãxtuª
();

10002 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIS_fog_fun˘i⁄", &
exãnsi⁄Names
) )

10004 
_GLEE_SGIS_fog_fun˘i⁄
 = 
GL_TRUE
;

10005 
	`__GLìLök_GL_SGIS_fog_fun˘i⁄
();

10007 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_fog_off£t", &
exãnsi⁄Names
) )

10009 
_GLEE_SGIX_fog_off£t
 = 
GL_TRUE
;

10010 
	`__GLìLök_GL_SGIX_fog_off£t
();

10012 i‡(
	`__GLìCheckExãnsi⁄
("GL_HP_image_å™sf‹m", &
exãnsi⁄Names
) )

10014 
_GLEE_HP_image_å™sf‹m
 = 
GL_TRUE
;

10015 
	`__GLìLök_GL_HP_image_å™sf‹m
();

10017 i‡(
	`__GLìCheckExãnsi⁄
("GL_HP_c⁄vﬁuti⁄_b‹dî_modes", &
exãnsi⁄Names
) )

10019 
_GLEE_HP_c⁄vﬁuti⁄_b‹dî_modes
 = 
GL_TRUE
;

10020 
	`__GLìLök_GL_HP_c⁄vﬁuti⁄_b‹dî_modes
();

10022 i‡(
	`__GLìCheckExãnsi⁄
("GL_INGR_∑Àâe_buf„r", &
exãnsi⁄Names
) )

10024 
_GLEE_INGR_∑Àâe_buf„r
 = 
GL_TRUE
;

10025 
	`__GLìLök_GL_INGR_∑Àâe_buf„r
();

10027 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_ãxtuª_add_ív", &
exãnsi⁄Names
) )

10029 
_GLEE_SGIX_ãxtuª_add_ív
 = 
GL_TRUE
;

10030 
	`__GLìLök_GL_SGIX_ãxtuª_add_ív
();

10032 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_cﬁ‹_subèbÀ", &
exãnsi⁄Names
) )

10034 
_GLEE_EXT_cﬁ‹_subèbÀ
 = 
GL_TRUE
;

10035 
	`__GLìLök_GL_EXT_cﬁ‹_subèbÀ
();

10037 i‡(
	`__GLìCheckExãnsi⁄
("GL_PGI_vîãx_höts", &
exãnsi⁄Names
) )

10039 
_GLEE_PGI_vîãx_höts
 = 
GL_TRUE
;

10040 
	`__GLìLök_GL_PGI_vîãx_höts
();

10042 i‡(
	`__GLìCheckExãnsi⁄
("GL_PGI_misc_höts", &
exãnsi⁄Names
) )

10044 
_GLEE_PGI_misc_höts
 = 
GL_TRUE
;

10045 
	`__GLìLök_GL_PGI_misc_höts
();

10047 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_∑Àâed_ãxtuª", &
exãnsi⁄Names
) )

10049 
_GLEE_EXT_∑Àâed_ãxtuª
 = 
GL_TRUE
;

10050 
	`__GLìLök_GL_EXT_∑Àâed_ãxtuª
();

10052 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_˛ù_vﬁume_höt", &
exãnsi⁄Names
) )

10054 
_GLEE_EXT_˛ù_vﬁume_höt
 = 
GL_TRUE
;

10055 
	`__GLìLök_GL_EXT_˛ù_vﬁume_höt
();

10057 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_li°_¥i‹ôy", &
exãnsi⁄Names
) )

10059 
_GLEE_SGIX_li°_¥i‹ôy
 = 
GL_TRUE
;

10060 
	`__GLìLök_GL_SGIX_li°_¥i‹ôy
();

10062 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_ú_ö°rumít1", &
exãnsi⁄Names
) )

10064 
_GLEE_SGIX_ú_ö°rumít1
 = 
GL_TRUE
;

10065 
	`__GLìLök_GL_SGIX_ú_ö°rumít1
();

10067 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_ˇŒigøphic_‰agmít", &
exãnsi⁄Names
) )

10069 
_GLEE_SGIX_ˇŒigøphic_‰agmít
 = 
GL_TRUE
;

10070 
	`__GLìLök_GL_SGIX_ˇŒigøphic_‰agmít
();

10072 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_ãxtuª_lod_büs", &
exãnsi⁄Names
) )

10074 
_GLEE_SGIX_ãxtuª_lod_büs
 = 
GL_TRUE
;

10075 
	`__GLìLök_GL_SGIX_ãxtuª_lod_büs
();

10077 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_shadow_ambõ¡", &
exãnsi⁄Names
) )

10079 
_GLEE_SGIX_shadow_ambõ¡
 = 
GL_TRUE
;

10080 
	`__GLìLök_GL_SGIX_shadow_ambõ¡
();

10082 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ödex_ãxtuª", &
exãnsi⁄Names
) )

10084 
_GLEE_EXT_ödex_ãxtuª
 = 
GL_TRUE
;

10085 
	`__GLìLök_GL_EXT_ödex_ãxtuª
();

10087 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ödex_m©îül", &
exãnsi⁄Names
) )

10089 
_GLEE_EXT_ödex_m©îül
 = 
GL_TRUE
;

10090 
	`__GLìLök_GL_EXT_ödex_m©îül
();

10092 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ödex_func", &
exãnsi⁄Names
) )

10094 
_GLEE_EXT_ödex_func
 = 
GL_TRUE
;

10095 
	`__GLìLök_GL_EXT_ödex_func
();

10097 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ödex_¨øy_f‹m©s", &
exãnsi⁄Names
) )

10099 
_GLEE_EXT_ödex_¨øy_f‹m©s
 = 
GL_TRUE
;

10100 
	`__GLìLök_GL_EXT_ödex_¨øy_f‹m©s
();

10102 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_compûed_vîãx_¨øy", &
exãnsi⁄Names
) )

10104 
_GLEE_EXT_compûed_vîãx_¨øy
 = 
GL_TRUE
;

10105 
	`__GLìLök_GL_EXT_compûed_vîãx_¨øy
();

10107 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_cuŒ_vîãx", &
exãnsi⁄Names
) )

10109 
_GLEE_EXT_cuŒ_vîãx
 = 
GL_TRUE
;

10110 
	`__GLìLök_GL_EXT_cuŒ_vîãx
();

10112 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_y¸cb", &
exãnsi⁄Names
) )

10114 
_GLEE_SGIX_y¸cb
 = 
GL_TRUE
;

10115 
	`__GLìLök_GL_SGIX_y¸cb
();

10117 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_‰agmít_lightög", &
exãnsi⁄Names
) )

10119 
_GLEE_SGIX_‰agmít_lightög
 = 
GL_TRUE
;

10120 
	`__GLìLök_GL_SGIX_‰agmít_lightög
();

10122 i‡(
	`__GLìCheckExãnsi⁄
("GL_IBM_ø°îpos_˛ù", &
exãnsi⁄Names
) )

10124 
_GLEE_IBM_ø°îpos_˛ù
 = 
GL_TRUE
;

10125 
	`__GLìLök_GL_IBM_ø°îpos_˛ù
();

10127 i‡(
	`__GLìCheckExãnsi⁄
("GL_HP_ãxtuª_lightög", &
exãnsi⁄Names
) )

10129 
_GLEE_HP_ãxtuª_lightög
 = 
GL_TRUE
;

10130 
	`__GLìLök_GL_HP_ãxtuª_lightög
();

10132 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_døw_ønge_ñemíts", &
exãnsi⁄Names
) )

10134 
_GLEE_EXT_døw_ønge_ñemíts
 = 
GL_TRUE
;

10135 
	`__GLìLök_GL_EXT_døw_ønge_ñemíts
();

10137 i‡(
	`__GLìCheckExãnsi⁄
("GL_WIN_ph⁄g_shadög", &
exãnsi⁄Names
) )

10139 
_GLEE_WIN_ph⁄g_shadög
 = 
GL_TRUE
;

10140 
	`__GLìLök_GL_WIN_ph⁄g_shadög
();

10142 i‡(
	`__GLìCheckExãnsi⁄
("GL_WIN_•ecuœr_fog", &
exãnsi⁄Names
) )

10144 
_GLEE_WIN_•ecuœr_fog
 = 
GL_TRUE
;

10145 
	`__GLìLök_GL_WIN_•ecuœr_fog
();

10147 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_light_ãxtuª", &
exãnsi⁄Names
) )

10149 
_GLEE_EXT_light_ãxtuª
 = 
GL_TRUE
;

10150 
	`__GLìLök_GL_EXT_light_ãxtuª
();

10152 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_bÀnd_Æpha_mömax", &
exãnsi⁄Names
) )

10154 
_GLEE_SGIX_bÀnd_Æpha_mömax
 = 
GL_TRUE
;

10155 
	`__GLìLök_GL_SGIX_bÀnd_Æpha_mömax
();

10157 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_im∑˘_pixñ_ãxtuª", &
exãnsi⁄Names
) )

10159 
_GLEE_SGIX_im∑˘_pixñ_ãxtuª
 = 
GL_TRUE
;

10160 
	`__GLìLök_GL_SGIX_im∑˘_pixñ_ãxtuª
();

10162 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_bgø", &
exãnsi⁄Names
) )

10164 
_GLEE_EXT_bgø
 = 
GL_TRUE
;

10165 
	`__GLìLök_GL_EXT_bgø
();

10167 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_async", &
exãnsi⁄Names
) )

10169 
_GLEE_SGIX_async
 = 
GL_TRUE
;

10170 
	`__GLìLök_GL_SGIX_async
();

10172 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_async_pixñ", &
exãnsi⁄Names
) )

10174 
_GLEE_SGIX_async_pixñ
 = 
GL_TRUE
;

10175 
	`__GLìLök_GL_SGIX_async_pixñ
();

10177 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_async_hi°ogøm", &
exãnsi⁄Names
) )

10179 
_GLEE_SGIX_async_hi°ogøm
 = 
GL_TRUE
;

10180 
	`__GLìLök_GL_SGIX_async_hi°ogøm
();

10182 i‡(
	`__GLìCheckExãnsi⁄
("GL_INTEL_ãxtuª_sciss‹", &
exãnsi⁄Names
) )

10184 
_GLEE_INTEL_ãxtuª_sciss‹
 = 
GL_TRUE
;

10185 
	`__GLìLök_GL_INTEL_ãxtuª_sciss‹
();

10187 i‡(
	`__GLìCheckExãnsi⁄
("GL_INTEL_∑øŒñ_¨øys", &
exãnsi⁄Names
) )

10189 
_GLEE_INTEL_∑øŒñ_¨øys
 = 
GL_TRUE
;

10190 
	`__GLìLök_GL_INTEL_∑øŒñ_¨øys
();

10192 i‡(
	`__GLìCheckExãnsi⁄
("GL_HP_oc˛usi⁄_ã°", &
exãnsi⁄Names
) )

10194 
_GLEE_HP_oc˛usi⁄_ã°
 = 
GL_TRUE
;

10195 
	`__GLìLök_GL_HP_oc˛usi⁄_ã°
();

10197 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_pixñ_å™sf‹m", &
exãnsi⁄Names
) )

10199 
_GLEE_EXT_pixñ_å™sf‹m
 = 
GL_TRUE
;

10200 
	`__GLìLök_GL_EXT_pixñ_å™sf‹m
();

10202 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ", &
exãnsi⁄Names
) )

10204 
_GLEE_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ
 = 
GL_TRUE
;

10205 
	`__GLìLök_GL_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ
();

10207 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_sh¨ed_ãxtuª_∑Àâe", &
exãnsi⁄Names
) )

10209 
_GLEE_EXT_sh¨ed_ãxtuª_∑Àâe
 = 
GL_TRUE
;

10210 
	`__GLìLök_GL_EXT_sh¨ed_ãxtuª_∑Àâe
();

10212 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_£∑øã_•ecuœr_cﬁ‹", &
exãnsi⁄Names
) )

10214 
_GLEE_EXT_£∑øã_•ecuœr_cﬁ‹
 = 
GL_TRUE
;

10215 
	`__GLìLök_GL_EXT_£∑øã_•ecuœr_cﬁ‹
();

10217 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_£c⁄d¨y_cﬁ‹", &
exãnsi⁄Names
) )

10219 
_GLEE_EXT_£c⁄d¨y_cﬁ‹
 = 
GL_TRUE
;

10220 
	`__GLìLök_GL_EXT_£c⁄d¨y_cﬁ‹
();

10222 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_≥πurb_n‹mÆ", &
exãnsi⁄Names
) )

10224 
_GLEE_EXT_ãxtuª_≥πurb_n‹mÆ
 = 
GL_TRUE
;

10225 
	`__GLìLök_GL_EXT_ãxtuª_≥πurb_n‹mÆ
();

10227 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_mu…i_døw_¨øys", &
exãnsi⁄Names
) )

10229 
_GLEE_EXT_mu…i_døw_¨øys
 = 
GL_TRUE
;

10230 
	`__GLìLök_GL_EXT_mu…i_døw_¨øys
();

10232 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_fog_co‹d", &
exãnsi⁄Names
) )

10234 
_GLEE_EXT_fog_co‹d
 = 
GL_TRUE
;

10235 
	`__GLìLök_GL_EXT_fog_co‹d
();

10237 i‡(
	`__GLìCheckExãnsi⁄
("GL_REND_s¸ìn_co‹dö©es", &
exãnsi⁄Names
) )

10239 
_GLEE_REND_s¸ìn_co‹dö©es
 = 
GL_TRUE
;

10240 
	`__GLìLök_GL_REND_s¸ìn_co‹dö©es
();

10242 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_co‹dö©e_‰ame", &
exãnsi⁄Names
) )

10244 
_GLEE_EXT_co‹dö©e_‰ame
 = 
GL_TRUE
;

10245 
	`__GLìLök_GL_EXT_co‹dö©e_‰ame
();

10247 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_ív_comböe", &
exãnsi⁄Names
) )

10249 
_GLEE_EXT_ãxtuª_ív_comböe
 = 
GL_TRUE
;

10250 
	`__GLìLök_GL_EXT_ãxtuª_ív_comböe
();

10252 i‡(
	`__GLìCheckExãnsi⁄
("GL_APPLE_•ecuœr_ve˘‹", &
exãnsi⁄Names
) )

10254 
_GLEE_APPLE_•ecuœr_ve˘‹
 = 
GL_TRUE
;

10255 
	`__GLìLök_GL_APPLE_•ecuœr_ve˘‹
();

10257 i‡(
	`__GLìCheckExãnsi⁄
("GL_APPLE_å™sf‹m_höt", &
exãnsi⁄Names
) )

10259 
_GLEE_APPLE_å™sf‹m_höt
 = 
GL_TRUE
;

10260 
	`__GLìLök_GL_APPLE_å™sf‹m_höt
();

10262 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_fog_sˇÀ", &
exãnsi⁄Names
) )

10264 
_GLEE_SGIX_fog_sˇÀ
 = 
GL_TRUE
;

10265 
	`__GLìLök_GL_SGIX_fog_sˇÀ
();

10267 i‡(
	`__GLìCheckExãnsi⁄
("GL_SUNX_c⁄°™t_d©a", &
exãnsi⁄Names
) )

10269 
_GLEE_SUNX_c⁄°™t_d©a
 = 
GL_TRUE
;

10270 
	`__GLìLök_GL_SUNX_c⁄°™t_d©a
();

10272 i‡(
	`__GLìCheckExãnsi⁄
("GL_SUN_globÆ_Æpha", &
exãnsi⁄Names
) )

10274 
_GLEE_SUN_globÆ_Æpha
 = 
GL_TRUE
;

10275 
	`__GLìLök_GL_SUN_globÆ_Æpha
();

10277 i‡(
	`__GLìCheckExãnsi⁄
("GL_SUN_åüngÀ_li°", &
exãnsi⁄Names
) )

10279 
_GLEE_SUN_åüngÀ_li°
 = 
GL_TRUE
;

10280 
	`__GLìLök_GL_SUN_åüngÀ_li°
();

10282 i‡(
	`__GLìCheckExãnsi⁄
("GL_SUN_vîãx", &
exãnsi⁄Names
) )

10284 
_GLEE_SUN_vîãx
 = 
GL_TRUE
;

10285 
	`__GLìLök_GL_SUN_vîãx
();

10287 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_bÀnd_func_£∑øã", &
exãnsi⁄Names
) )

10289 
_GLEE_EXT_bÀnd_func_£∑øã
 = 
GL_TRUE
;

10290 
	`__GLìLök_GL_EXT_bÀnd_func_£∑øã
();

10292 i‡(
	`__GLìCheckExãnsi⁄
("GL_INGR_cﬁ‹_˛amp", &
exãnsi⁄Names
) )

10294 
_GLEE_INGR_cﬁ‹_˛amp
 = 
GL_TRUE
;

10295 
	`__GLìLök_GL_INGR_cﬁ‹_˛amp
();

10297 i‡(
	`__GLìCheckExãnsi⁄
("GL_INGR_öãæa˚_ªad", &
exãnsi⁄Names
) )

10299 
_GLEE_INGR_öãæa˚_ªad
 = 
GL_TRUE
;

10300 
	`__GLìLök_GL_INGR_öãæa˚_ªad
();

10302 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_°ícû_wøp", &
exãnsi⁄Names
) )

10304 
_GLEE_EXT_°ícû_wøp
 = 
GL_TRUE
;

10305 
	`__GLìLök_GL_EXT_°ícû_wøp
();

10307 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_422_pixñs", &
exãnsi⁄Names
) )

10309 
_GLEE_EXT_422_pixñs
 = 
GL_TRUE
;

10310 
	`__GLìLök_GL_EXT_422_pixñs
();

10312 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_ãxgí_ªÊe˘i⁄", &
exãnsi⁄Names
) )

10314 
_GLEE_NV_ãxgí_ªÊe˘i⁄
 = 
GL_TRUE
;

10315 
	`__GLìLök_GL_NV_ãxgí_ªÊe˘i⁄
();

10317 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_cube_m≠", &
exãnsi⁄Names
) )

10319 
_GLEE_EXT_ãxtuª_cube_m≠
 = 
GL_TRUE
;

10320 
	`__GLìLök_GL_EXT_ãxtuª_cube_m≠
();

10322 i‡(
	`__GLìCheckExãnsi⁄
("GL_SUN_c⁄vﬁuti⁄_b‹dî_modes", &
exãnsi⁄Names
) )

10324 
_GLEE_SUN_c⁄vﬁuti⁄_b‹dî_modes
 = 
GL_TRUE
;

10325 
	`__GLìLök_GL_SUN_c⁄vﬁuti⁄_b‹dî_modes
();

10327 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_ív_add", &
exãnsi⁄Names
) )

10329 
_GLEE_EXT_ãxtuª_ív_add
 = 
GL_TRUE
;

10330 
	`__GLìLök_GL_EXT_ãxtuª_ív_add
();

10332 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_lod_büs", &
exãnsi⁄Names
) )

10334 
_GLEE_EXT_ãxtuª_lod_büs
 = 
GL_TRUE
;

10335 
	`__GLìLök_GL_EXT_ãxtuª_lod_büs
();

10337 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_fûãr_™isŸr›ic", &
exãnsi⁄Names
) )

10339 
_GLEE_EXT_ãxtuª_fûãr_™isŸr›ic
 = 
GL_TRUE
;

10340 
	`__GLìLök_GL_EXT_ãxtuª_fûãr_™isŸr›ic
();

10342 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_vîãx_weightög", &
exãnsi⁄Names
) )

10344 
_GLEE_EXT_vîãx_weightög
 = 
GL_TRUE
;

10345 
	`__GLìLök_GL_EXT_vîãx_weightög
();

10347 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_light_max_exp⁄ít", &
exãnsi⁄Names
) )

10349 
_GLEE_NV_light_max_exp⁄ít
 = 
GL_TRUE
;

10350 
	`__GLìLök_GL_NV_light_max_exp⁄ít
();

10352 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_vîãx_¨øy_ønge", &
exãnsi⁄Names
) )

10354 
_GLEE_NV_vîãx_¨øy_ønge
 = 
GL_TRUE
;

10355 
	`__GLìLök_GL_NV_vîãx_¨øy_ønge
();

10357 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_ªgi°î_comböîs", &
exãnsi⁄Names
) )

10359 
_GLEE_NV_ªgi°î_comböîs
 = 
GL_TRUE
;

10360 
	`__GLìLök_GL_NV_ªgi°î_comböîs
();

10362 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_fog_di°™˚", &
exãnsi⁄Names
) )

10364 
_GLEE_NV_fog_di°™˚
 = 
GL_TRUE
;

10365 
	`__GLìLök_GL_NV_fog_di°™˚
();

10367 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_ãxgí_emboss", &
exãnsi⁄Names
) )

10369 
_GLEE_NV_ãxgí_emboss
 = 
GL_TRUE
;

10370 
	`__GLìLök_GL_NV_ãxgí_emboss
();

10372 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_bÀnd_squ¨e", &
exãnsi⁄Names
) )

10374 
_GLEE_NV_bÀnd_squ¨e
 = 
GL_TRUE
;

10375 
	`__GLìLök_GL_NV_bÀnd_squ¨e
();

10377 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_ãxtuª_ív_comböe4", &
exãnsi⁄Names
) )

10379 
_GLEE_NV_ãxtuª_ív_comböe4
 = 
GL_TRUE
;

10380 
	`__GLìLök_GL_NV_ãxtuª_ív_comböe4
();

10382 i‡(
	`__GLìCheckExãnsi⁄
("GL_MESA_ªsize_buf„rs", &
exãnsi⁄Names
) )

10384 
_GLEE_MESA_ªsize_buf„rs
 = 
GL_TRUE
;

10385 
	`__GLìLök_GL_MESA_ªsize_buf„rs
();

10387 i‡(
	`__GLìCheckExãnsi⁄
("GL_MESA_wödow_pos", &
exãnsi⁄Names
) )

10389 
_GLEE_MESA_wödow_pos
 = 
GL_TRUE
;

10390 
	`__GLìLök_GL_MESA_wödow_pos
();

10392 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_com¥essi⁄_s3tc", &
exãnsi⁄Names
) )

10394 
_GLEE_EXT_ãxtuª_com¥essi⁄_s3tc
 = 
GL_TRUE
;

10395 
	`__GLìLök_GL_EXT_ãxtuª_com¥essi⁄_s3tc
();

10397 i‡(
	`__GLìCheckExãnsi⁄
("GL_IBM_cuŒ_vîãx", &
exãnsi⁄Names
) )

10399 
_GLEE_IBM_cuŒ_vîãx
 = 
GL_TRUE
;

10400 
	`__GLìLök_GL_IBM_cuŒ_vîãx
();

10402 i‡(
	`__GLìCheckExãnsi⁄
("GL_IBM_mu…imode_døw_¨øys", &
exãnsi⁄Names
) )

10404 
_GLEE_IBM_mu…imode_døw_¨øys
 = 
GL_TRUE
;

10405 
	`__GLìLök_GL_IBM_mu…imode_døw_¨øys
();

10407 i‡(
	`__GLìCheckExãnsi⁄
("GL_IBM_vîãx_¨øy_li°s", &
exãnsi⁄Names
) )

10409 
_GLEE_IBM_vîãx_¨øy_li°s
 = 
GL_TRUE
;

10410 
	`__GLìLök_GL_IBM_vîãx_¨øy_li°s
();

10412 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_subßm∂e", &
exãnsi⁄Names
) )

10414 
_GLEE_SGIX_subßm∂e
 = 
GL_TRUE
;

10415 
	`__GLìLök_GL_SGIX_subßm∂e
();

10417 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_y¸cb_subßm∂e", &
exãnsi⁄Names
) )

10419 
_GLEE_SGIX_y¸cb_subßm∂e
 = 
GL_TRUE
;

10420 
	`__GLìLök_GL_SGIX_y¸cb_subßm∂e
();

10422 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_y¸cba", &
exãnsi⁄Names
) )

10424 
_GLEE_SGIX_y¸cba
 = 
GL_TRUE
;

10425 
	`__GLìLök_GL_SGIX_y¸cba
();

10427 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGI_dïth_∑ss_ö°rumít", &
exãnsi⁄Names
) )

10429 
_GLEE_SGI_dïth_∑ss_ö°rumít
 = 
GL_TRUE
;

10430 
	`__GLìLök_GL_SGI_dïth_∑ss_ö°rumít
();

10432 i‡(
	`__GLìCheckExãnsi⁄
("GL_3DFX_ãxtuª_com¥essi⁄_FXT1", &
exãnsi⁄Names
) )

10434 
_GLEE_3DFX_ãxtuª_com¥essi⁄_FXT1
 = 
GL_TRUE
;

10435 
	`__GLìLök_GL_3DFX_ãxtuª_com¥essi⁄_FXT1
();

10437 i‡(
	`__GLìCheckExãnsi⁄
("GL_3DFX_mu…ißm∂e", &
exãnsi⁄Names
) )

10439 
_GLEE_3DFX_mu…ißm∂e
 = 
GL_TRUE
;

10440 
	`__GLìLök_GL_3DFX_mu…ißm∂e
();

10442 i‡(
	`__GLìCheckExãnsi⁄
("GL_3DFX_tbuf„r", &
exãnsi⁄Names
) )

10444 
_GLEE_3DFX_tbuf„r
 = 
GL_TRUE
;

10445 
	`__GLìLök_GL_3DFX_tbuf„r
();

10447 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_mu…ißm∂e", &
exãnsi⁄Names
) )

10449 
_GLEE_EXT_mu…ißm∂e
 = 
GL_TRUE
;

10450 
	`__GLìLök_GL_EXT_mu…ißm∂e
();

10452 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_vîãx_¥e˛ù", &
exãnsi⁄Names
) )

10454 
_GLEE_SGIX_vîãx_¥e˛ù
 = 
GL_TRUE
;

10455 
	`__GLìLök_GL_SGIX_vîãx_¥e˛ù
();

10457 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_c⁄vﬁuti⁄_accuøcy", &
exãnsi⁄Names
) )

10459 
_GLEE_SGIX_c⁄vﬁuti⁄_accuøcy
 = 
GL_TRUE
;

10460 
	`__GLìLök_GL_SGIX_c⁄vﬁuti⁄_accuøcy
();

10462 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_ªßm∂e", &
exãnsi⁄Names
) )

10464 
_GLEE_SGIX_ªßm∂e
 = 
GL_TRUE
;

10465 
	`__GLìLök_GL_SGIX_ªßm∂e
();

10467 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIS_poöt_löe_ãxgí", &
exãnsi⁄Names
) )

10469 
_GLEE_SGIS_poöt_löe_ãxgí
 = 
GL_TRUE
;

10470 
	`__GLìLök_GL_SGIS_poöt_löe_ãxgí
();

10472 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIS_ãxtuª_cﬁ‹_mask", &
exãnsi⁄Names
) )

10474 
_GLEE_SGIS_ãxtuª_cﬁ‹_mask
 = 
GL_TRUE
;

10475 
	`__GLìLök_GL_SGIS_ãxtuª_cﬁ‹_mask
();

10477 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_ív_dŸ3", &
exãnsi⁄Names
) )

10479 
_GLEE_EXT_ãxtuª_ív_dŸ3
 = 
GL_TRUE
;

10480 
	`__GLìLök_GL_EXT_ãxtuª_ív_dŸ3
();

10482 i‡(
	`__GLìCheckExãnsi⁄
("GL_ATI_ãxtuª_múr‹_⁄˚", &
exãnsi⁄Names
) )

10484 
_GLEE_ATI_ãxtuª_múr‹_⁄˚
 = 
GL_TRUE
;

10485 
	`__GLìLök_GL_ATI_ãxtuª_múr‹_⁄˚
();

10487 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_„n˚", &
exãnsi⁄Names
) )

10489 
_GLEE_NV_„n˚
 = 
GL_TRUE
;

10490 
	`__GLìLök_GL_NV_„n˚
();

10492 i‡(
	`__GLìCheckExãnsi⁄
("GL_IBM_ãxtuª_múr‹ed_ª≥©", &
exãnsi⁄Names
) )

10494 
_GLEE_IBM_ãxtuª_múr‹ed_ª≥©
 = 
GL_TRUE
;

10495 
	`__GLìLök_GL_IBM_ãxtuª_múr‹ed_ª≥©
();

10497 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_evÆu©‹s", &
exãnsi⁄Names
) )

10499 
_GLEE_NV_evÆu©‹s
 = 
GL_TRUE
;

10500 
	`__GLìLök_GL_NV_evÆu©‹s
();

10502 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_∑cked_dïth_°ícû", &
exãnsi⁄Names
) )

10504 
_GLEE_NV_∑cked_dïth_°ícû
 = 
GL_TRUE
;

10505 
	`__GLìLök_GL_NV_∑cked_dïth_°ícû
();

10507 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_ªgi°î_comböîs2", &
exãnsi⁄Names
) )

10509 
_GLEE_NV_ªgi°î_comböîs2
 = 
GL_TRUE
;

10510 
	`__GLìLök_GL_NV_ªgi°î_comböîs2
();

10512 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_ãxtuª_com¥essi⁄_vtc", &
exãnsi⁄Names
) )

10514 
_GLEE_NV_ãxtuª_com¥essi⁄_vtc
 = 
GL_TRUE
;

10515 
	`__GLìLök_GL_NV_ãxtuª_com¥essi⁄_vtc
();

10517 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_ãxtuª_ª˘™gÀ", &
exãnsi⁄Names
) )

10519 
_GLEE_NV_ãxtuª_ª˘™gÀ
 = 
GL_TRUE
;

10520 
	`__GLìLök_GL_NV_ãxtuª_ª˘™gÀ
();

10522 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_ãxtuª_shadî", &
exãnsi⁄Names
) )

10524 
_GLEE_NV_ãxtuª_shadî
 = 
GL_TRUE
;

10525 
	`__GLìLök_GL_NV_ãxtuª_shadî
();

10527 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_ãxtuª_shadî2", &
exãnsi⁄Names
) )

10529 
_GLEE_NV_ãxtuª_shadî2
 = 
GL_TRUE
;

10530 
	`__GLìLök_GL_NV_ãxtuª_shadî2
();

10532 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_vîãx_¨øy_ønge2", &
exãnsi⁄Names
) )

10534 
_GLEE_NV_vîãx_¨øy_ønge2
 = 
GL_TRUE
;

10535 
	`__GLìLök_GL_NV_vîãx_¨øy_ønge2
();

10537 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_vîãx_¥ogøm", &
exãnsi⁄Names
) )

10539 
_GLEE_NV_vîãx_¥ogøm
 = 
GL_TRUE
;

10540 
	`__GLìLök_GL_NV_vîãx_¥ogøm
();

10542 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_ãxtuª_co‹dö©e_˛amp", &
exãnsi⁄Names
) )

10544 
_GLEE_SGIX_ãxtuª_co‹dö©e_˛amp
 = 
GL_TRUE
;

10545 
	`__GLìLök_GL_SGIX_ãxtuª_co‹dö©e_˛amp
();

10547 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_sˇÀbüs_höt", &
exãnsi⁄Names
) )

10549 
_GLEE_SGIX_sˇÀbüs_höt
 = 
GL_TRUE
;

10550 
	`__GLìLök_GL_SGIX_sˇÀbüs_höt
();

10552 i‡(
	`__GLìCheckExãnsi⁄
("GL_OML_öãæa˚", &
exãnsi⁄Names
) )

10554 
_GLEE_OML_öãæa˚
 = 
GL_TRUE
;

10555 
	`__GLìLök_GL_OML_öãæa˚
();

10557 i‡(
	`__GLìCheckExãnsi⁄
("GL_OML_subßm∂e", &
exãnsi⁄Names
) )

10559 
_GLEE_OML_subßm∂e
 = 
GL_TRUE
;

10560 
	`__GLìLök_GL_OML_subßm∂e
();

10562 i‡(
	`__GLìCheckExãnsi⁄
("GL_OML_ªßm∂e", &
exãnsi⁄Names
) )

10564 
_GLEE_OML_ªßm∂e
 = 
GL_TRUE
;

10565 
	`__GLìLök_GL_OML_ªßm∂e
();

10567 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_c›y_dïth_to_cﬁ‹", &
exãnsi⁄Names
) )

10569 
_GLEE_NV_c›y_dïth_to_cﬁ‹
 = 
GL_TRUE
;

10570 
	`__GLìLök_GL_NV_c›y_dïth_to_cﬁ‹
();

10572 i‡(
	`__GLìCheckExãnsi⁄
("GL_ATI_ívm≠_bumpm≠", &
exãnsi⁄Names
) )

10574 
_GLEE_ATI_ívm≠_bumpm≠
 = 
GL_TRUE
;

10575 
	`__GLìLök_GL_ATI_ívm≠_bumpm≠
();

10577 i‡(
	`__GLìCheckExãnsi⁄
("GL_ATI_‰agmít_shadî", &
exãnsi⁄Names
) )

10579 
_GLEE_ATI_‰agmít_shadî
 = 
GL_TRUE
;

10580 
	`__GLìLök_GL_ATI_‰agmít_shadî
();

10582 i‡(
	`__GLìCheckExãnsi⁄
("GL_ATI_≤_åüngÀs", &
exãnsi⁄Names
) )

10584 
_GLEE_ATI_≤_åüngÀs
 = 
GL_TRUE
;

10585 
	`__GLìLök_GL_ATI_≤_åüngÀs
();

10587 i‡(
	`__GLìCheckExãnsi⁄
("GL_ATI_vîãx_¨øy_obje˘", &
exãnsi⁄Names
) )

10589 
_GLEE_ATI_vîãx_¨øy_obje˘
 = 
GL_TRUE
;

10590 
	`__GLìLök_GL_ATI_vîãx_¨øy_obje˘
();

10592 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_vîãx_shadî", &
exãnsi⁄Names
) )

10594 
_GLEE_EXT_vîãx_shadî
 = 
GL_TRUE
;

10595 
	`__GLìLök_GL_EXT_vîãx_shadî
();

10597 i‡(
	`__GLìCheckExãnsi⁄
("GL_ATI_vîãx_°ªams", &
exãnsi⁄Names
) )

10599 
_GLEE_ATI_vîãx_°ªams
 = 
GL_TRUE
;

10600 
	`__GLìLök_GL_ATI_vîãx_°ªams
();

10602 i‡(
	`__GLìCheckExãnsi⁄
("GL_ATI_ñemít_¨øy", &
exãnsi⁄Names
) )

10604 
_GLEE_ATI_ñemít_¨øy
 = 
GL_TRUE
;

10605 
	`__GLìLök_GL_ATI_ñemít_¨øy
();

10607 i‡(
	`__GLìCheckExãnsi⁄
("GL_SUN_mesh_¨øy", &
exãnsi⁄Names
) )

10609 
_GLEE_SUN_mesh_¨øy
 = 
GL_TRUE
;

10610 
	`__GLìLök_GL_SUN_mesh_¨øy
();

10612 i‡(
	`__GLìCheckExãnsi⁄
("GL_SUN_¶i˚_accum", &
exãnsi⁄Names
) )

10614 
_GLEE_SUN_¶i˚_accum
 = 
GL_TRUE
;

10615 
	`__GLìLök_GL_SUN_¶i˚_accum
();

10617 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_mu…ißm∂e_fûãr_höt", &
exãnsi⁄Names
) )

10619 
_GLEE_NV_mu…ißm∂e_fûãr_höt
 = 
GL_TRUE
;

10620 
	`__GLìLök_GL_NV_mu…ißm∂e_fûãr_höt
();

10622 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_dïth_˛amp", &
exãnsi⁄Names
) )

10624 
_GLEE_NV_dïth_˛amp
 = 
GL_TRUE
;

10625 
	`__GLìLök_GL_NV_dïth_˛amp
();

10627 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_oc˛usi⁄_quîy", &
exãnsi⁄Names
) )

10629 
_GLEE_NV_oc˛usi⁄_quîy
 = 
GL_TRUE
;

10630 
	`__GLìLök_GL_NV_oc˛usi⁄_quîy
();

10632 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_poöt_•rôe", &
exãnsi⁄Names
) )

10634 
_GLEE_NV_poöt_•rôe
 = 
GL_TRUE
;

10635 
	`__GLìLök_GL_NV_poöt_•rôe
();

10637 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_ãxtuª_shadî3", &
exãnsi⁄Names
) )

10639 
_GLEE_NV_ãxtuª_shadî3
 = 
GL_TRUE
;

10640 
	`__GLìLök_GL_NV_ãxtuª_shadî3
();

10642 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_vîãx_¥ogøm1_1", &
exãnsi⁄Names
) )

10644 
_GLEE_NV_vîãx_¥ogøm1_1
 = 
GL_TRUE
;

10645 
	`__GLìLök_GL_NV_vîãx_¥ogøm1_1
();

10647 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_shadow_funcs", &
exãnsi⁄Names
) )

10649 
_GLEE_EXT_shadow_funcs
 = 
GL_TRUE
;

10650 
	`__GLìLök_GL_EXT_shadow_funcs
();

10652 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_°ícû_two_side", &
exãnsi⁄Names
) )

10654 
_GLEE_EXT_°ícû_two_side
 = 
GL_TRUE
;

10655 
	`__GLìLök_GL_EXT_°ícû_two_side
();

10657 i‡(
	`__GLìCheckExãnsi⁄
("GL_ATI_ãxt_‰agmít_shadî", &
exãnsi⁄Names
) )

10659 
_GLEE_ATI_ãxt_‰agmít_shadî
 = 
GL_TRUE
;

10660 
	`__GLìLök_GL_ATI_ãxt_‰agmít_shadî
();

10662 i‡(
	`__GLìCheckExãnsi⁄
("GL_APPLE_˛õ¡_°‹age", &
exãnsi⁄Names
) )

10664 
_GLEE_APPLE_˛õ¡_°‹age
 = 
GL_TRUE
;

10665 
	`__GLìLök_GL_APPLE_˛õ¡_°‹age
();

10667 i‡(
	`__GLìCheckExãnsi⁄
("GL_APPLE_ñemít_¨øy", &
exãnsi⁄Names
) )

10669 
_GLEE_APPLE_ñemít_¨øy
 = 
GL_TRUE
;

10670 
	`__GLìLök_GL_APPLE_ñemít_¨øy
();

10672 i‡(
	`__GLìCheckExãnsi⁄
("GL_APPLE_„n˚", &
exãnsi⁄Names
) )

10674 
_GLEE_APPLE_„n˚
 = 
GL_TRUE
;

10675 
	`__GLìLök_GL_APPLE_„n˚
();

10677 i‡(
	`__GLìCheckExãnsi⁄
("GL_APPLE_vîãx_¨øy_obje˘", &
exãnsi⁄Names
) )

10679 
_GLEE_APPLE_vîãx_¨øy_obje˘
 = 
GL_TRUE
;

10680 
	`__GLìLök_GL_APPLE_vîãx_¨øy_obje˘
();

10682 i‡(
	`__GLìCheckExãnsi⁄
("GL_APPLE_vîãx_¨øy_ønge", &
exãnsi⁄Names
) )

10684 
_GLEE_APPLE_vîãx_¨øy_ønge
 = 
GL_TRUE
;

10685 
	`__GLìLök_GL_APPLE_vîãx_¨øy_ønge
();

10687 i‡(
	`__GLìCheckExãnsi⁄
("GL_APPLE_ycb¸_422", &
exãnsi⁄Names
) )

10689 
_GLEE_APPLE_ycb¸_422
 = 
GL_TRUE
;

10690 
	`__GLìLök_GL_APPLE_ycb¸_422
();

10692 i‡(
	`__GLìCheckExãnsi⁄
("GL_S3_s3tc", &
exãnsi⁄Names
) )

10694 
_GLEE_S3_s3tc
 = 
GL_TRUE
;

10695 
	`__GLìLök_GL_S3_s3tc
();

10697 i‡(
	`__GLìCheckExãnsi⁄
("GL_ATI_døw_buf„rs", &
exãnsi⁄Names
) )

10699 
_GLEE_ATI_døw_buf„rs
 = 
GL_TRUE
;

10700 
	`__GLìLök_GL_ATI_døw_buf„rs
();

10702 i‡(
	`__GLìCheckExãnsi⁄
("GL_ATI_pixñ_f‹m©_Êﬂt", &
exãnsi⁄Names
) )

10704 
_GLEE_ATI_pixñ_f‹m©_Êﬂt
 = 
GL_TRUE
;

10705 
	`__GLìLök_GL_ATI_pixñ_f‹m©_Êﬂt
();

10707 i‡(
	`__GLìCheckExãnsi⁄
("GL_ATI_ãxtuª_ív_comböe3", &
exãnsi⁄Names
) )

10709 
_GLEE_ATI_ãxtuª_ív_comböe3
 = 
GL_TRUE
;

10710 
	`__GLìLök_GL_ATI_ãxtuª_ív_comböe3
();

10712 i‡(
	`__GLìCheckExãnsi⁄
("GL_ATI_ãxtuª_Êﬂt", &
exãnsi⁄Names
) )

10714 
_GLEE_ATI_ãxtuª_Êﬂt
 = 
GL_TRUE
;

10715 
	`__GLìLök_GL_ATI_ãxtuª_Êﬂt
();

10717 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_Êﬂt_buf„r", &
exãnsi⁄Names
) )

10719 
_GLEE_NV_Êﬂt_buf„r
 = 
GL_TRUE
;

10720 
	`__GLìLök_GL_NV_Êﬂt_buf„r
();

10722 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_‰agmít_¥ogøm", &
exãnsi⁄Names
) )

10724 
_GLEE_NV_‰agmít_¥ogøm
 = 
GL_TRUE
;

10725 
	`__GLìLök_GL_NV_‰agmít_¥ogøm
();

10727 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_hÆf_Êﬂt", &
exãnsi⁄Names
) )

10729 
_GLEE_NV_hÆf_Êﬂt
 = 
GL_TRUE
;

10730 
	`__GLìLök_GL_NV_hÆf_Êﬂt
();

10732 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_pixñ_d©a_ønge", &
exãnsi⁄Names
) )

10734 
_GLEE_NV_pixñ_d©a_ønge
 = 
GL_TRUE
;

10735 
	`__GLìLök_GL_NV_pixñ_d©a_ønge
();

10737 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_¥imôive_ª°¨t", &
exãnsi⁄Names
) )

10739 
_GLEE_NV_¥imôive_ª°¨t
 = 
GL_TRUE
;

10740 
	`__GLìLök_GL_NV_¥imôive_ª°¨t
();

10742 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_ãxtuª_ex∑nd_n‹mÆ", &
exãnsi⁄Names
) )

10744 
_GLEE_NV_ãxtuª_ex∑nd_n‹mÆ
 = 
GL_TRUE
;

10745 
	`__GLìLök_GL_NV_ãxtuª_ex∑nd_n‹mÆ
();

10747 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_vîãx_¥ogøm2", &
exãnsi⁄Names
) )

10749 
_GLEE_NV_vîãx_¥ogøm2
 = 
GL_TRUE
;

10750 
	`__GLìLök_GL_NV_vîãx_¥ogøm2
();

10752 i‡(
	`__GLìCheckExãnsi⁄
("GL_ATI_m≠_obje˘_buf„r", &
exãnsi⁄Names
) )

10754 
_GLEE_ATI_m≠_obje˘_buf„r
 = 
GL_TRUE
;

10755 
	`__GLìLök_GL_ATI_m≠_obje˘_buf„r
();

10757 i‡(
	`__GLìCheckExãnsi⁄
("GL_ATI_£∑øã_°ícû", &
exãnsi⁄Names
) )

10759 
_GLEE_ATI_£∑øã_°ícû
 = 
GL_TRUE
;

10760 
	`__GLìLök_GL_ATI_£∑øã_°ícû
();

10762 i‡(
	`__GLìCheckExãnsi⁄
("GL_ATI_vîãx_©åib_¨øy_obje˘", &
exãnsi⁄Names
) )

10764 
_GLEE_ATI_vîãx_©åib_¨øy_obje˘
 = 
GL_TRUE
;

10765 
	`__GLìLök_GL_ATI_vîãx_©åib_¨øy_obje˘
();

10767 i‡(
	`__GLìCheckExãnsi⁄
("GL_OES_ªad_f‹m©", &
exãnsi⁄Names
) )

10769 
_GLEE_OES_ªad_f‹m©
 = 
GL_TRUE
;

10770 
	`__GLìLök_GL_OES_ªad_f‹m©
();

10772 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_dïth_bounds_ã°", &
exãnsi⁄Names
) )

10774 
_GLEE_EXT_dïth_bounds_ã°
 = 
GL_TRUE
;

10775 
	`__GLìLök_GL_EXT_dïth_bounds_ã°
();

10777 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_múr‹_˛amp", &
exãnsi⁄Names
) )

10779 
_GLEE_EXT_ãxtuª_múr‹_˛amp
 = 
GL_TRUE
;

10780 
	`__GLìLök_GL_EXT_ãxtuª_múr‹_˛amp
();

10782 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_bÀnd_equ©i⁄_£∑øã", &
exãnsi⁄Names
) )

10784 
_GLEE_EXT_bÀnd_equ©i⁄_£∑øã
 = 
GL_TRUE
;

10785 
	`__GLìLök_GL_EXT_bÀnd_equ©i⁄_£∑øã
();

10787 i‡(
	`__GLìCheckExãnsi⁄
("GL_MESA_∑ck_övît", &
exãnsi⁄Names
) )

10789 
_GLEE_MESA_∑ck_övît
 = 
GL_TRUE
;

10790 
	`__GLìLök_GL_MESA_∑ck_övît
();

10792 i‡(
	`__GLìCheckExãnsi⁄
("GL_MESA_ycb¸_ãxtuª", &
exãnsi⁄Names
) )

10794 
_GLEE_MESA_ycb¸_ãxtuª
 = 
GL_TRUE
;

10795 
	`__GLìLök_GL_MESA_ycb¸_ãxtuª
();

10797 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_pixñ_buf„r_obje˘", &
exãnsi⁄Names
) )

10799 
_GLEE_EXT_pixñ_buf„r_obje˘
 = 
GL_TRUE
;

10800 
	`__GLìLök_GL_EXT_pixñ_buf„r_obje˘
();

10802 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_‰agmít_¥ogøm_›ti⁄", &
exãnsi⁄Names
) )

10804 
_GLEE_NV_‰agmít_¥ogøm_›ti⁄
 = 
GL_TRUE
;

10805 
	`__GLìLök_GL_NV_‰agmít_¥ogøm_›ti⁄
();

10807 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_‰agmít_¥ogøm2", &
exãnsi⁄Names
) )

10809 
_GLEE_NV_‰agmít_¥ogøm2
 = 
GL_TRUE
;

10810 
	`__GLìLök_GL_NV_‰agmít_¥ogøm2
();

10812 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_vîãx_¥ogøm2_›ti⁄", &
exãnsi⁄Names
) )

10814 
_GLEE_NV_vîãx_¥ogøm2_›ti⁄
 = 
GL_TRUE
;

10815 
	`__GLìLök_GL_NV_vîãx_¥ogøm2_›ti⁄
();

10817 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_vîãx_¥ogøm3", &
exãnsi⁄Names
) )

10819 
_GLEE_NV_vîãx_¥ogøm3
 = 
GL_TRUE
;

10820 
	`__GLìLök_GL_NV_vîãx_¥ogøm3
();

10822 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_‰amebuf„r_obje˘", &
exãnsi⁄Names
) )

10824 
_GLEE_EXT_‰amebuf„r_obje˘
 = 
GL_TRUE
;

10825 
	`__GLìLök_GL_EXT_‰amebuf„r_obje˘
();

10827 i‡(
	`__GLìCheckExãnsi⁄
("GL_GREMEDY_°rög_m¨kî", &
exãnsi⁄Names
) )

10829 
_GLEE_GREMEDY_°rög_m¨kî
 = 
GL_TRUE
;

10830 
	`__GLìLök_GL_GREMEDY_°rög_m¨kî
();

10832 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_Cg_shadî", &
exãnsi⁄Names
) )

10834 
_GLEE_EXT_Cg_shadî
 = 
GL_TRUE
;

10835 
	`__GLìLök_GL_EXT_Cg_shadî
();

10837 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_timî_quîy", &
exãnsi⁄Names
) )

10839 
_GLEE_EXT_timî_quîy
 = 
GL_TRUE
;

10840 
	`__GLìLök_GL_EXT_timî_quîy
();

10842 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_buf„r_obje˘", &
exãnsi⁄Names
) )

10844 
_GLEE_EXT_ãxtuª_buf„r_obje˘
 = 
GL_TRUE
;

10845 
	`__GLìLök_GL_EXT_ãxtuª_buf„r_obje˘
();

10847 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_gpu_shadî4", &
exãnsi⁄Names
) )

10849 
_GLEE_EXT_gpu_shadî4
 = 
GL_TRUE
;

10850 
	`__GLìLök_GL_EXT_gpu_shadî4
();

10852 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_geomëry_shadî4", &
exãnsi⁄Names
) )

10854 
_GLEE_EXT_geomëry_shadî4
 = 
GL_TRUE
;

10855 
	`__GLìLök_GL_EXT_geomëry_shadî4
();

10857 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_bödabÀ_unif‹m", &
exãnsi⁄Names
) )

10859 
_GLEE_EXT_bödabÀ_unif‹m
 = 
GL_TRUE
;

10860 
	`__GLìLök_GL_EXT_bödabÀ_unif‹m
();

10862 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_‰amebuf„r_sRGB", &
exãnsi⁄Names
) )

10864 
_GLEE_EXT_‰amebuf„r_sRGB
 = 
GL_TRUE
;

10865 
	`__GLìLök_GL_EXT_‰amebuf„r_sRGB
();

10867 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_sh¨ed_exp⁄ít", &
exãnsi⁄Names
) )

10869 
_GLEE_EXT_ãxtuª_sh¨ed_exp⁄ít
 = 
GL_TRUE
;

10870 
	`__GLìLök_GL_EXT_ãxtuª_sh¨ed_exp⁄ít
();

10872 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_∑cked_Êﬂt", &
exãnsi⁄Names
) )

10874 
_GLEE_EXT_∑cked_Êﬂt
 = 
GL_TRUE
;

10875 
	`__GLìLök_GL_EXT_∑cked_Êﬂt
();

10877 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_¨øy", &
exãnsi⁄Names
) )

10879 
_GLEE_EXT_ãxtuª_¨øy
 = 
GL_TRUE
;

10880 
	`__GLìLök_GL_EXT_ãxtuª_¨øy
();

10882 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_öãgî", &
exãnsi⁄Names
) )

10884 
_GLEE_EXT_ãxtuª_öãgî
 = 
GL_TRUE
;

10885 
	`__GLìLök_GL_EXT_ãxtuª_öãgî
();

10887 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_dïth_buf„r_Êﬂt", &
exãnsi⁄Names
) )

10889 
_GLEE_NV_dïth_buf„r_Êﬂt
 = 
GL_TRUE
;

10890 
	`__GLìLök_GL_NV_dïth_buf„r_Êﬂt
();

10892 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_com¥essi⁄_œtc", &
exãnsi⁄Names
) )

10894 
_GLEE_EXT_ãxtuª_com¥essi⁄_œtc
 = 
GL_TRUE
;

10895 
	`__GLìLök_GL_EXT_ãxtuª_com¥essi⁄_œtc
();

10897 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_å™sf‹m_„edback", &
exãnsi⁄Names
) )

10899 
_GLEE_NV_å™sf‹m_„edback
 = 
GL_TRUE
;

10900 
	`__GLìLök_GL_NV_å™sf‹m_„edback
();

10902 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_geomëry_¥ogøm4", &
exãnsi⁄Names
) )

10904 
_GLEE_NV_geomëry_¥ogøm4
 = 
GL_TRUE
;

10905 
	`__GLìLök_GL_NV_geomëry_¥ogøm4
();

10907 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_gpu_¥ogøm4", &
exãnsi⁄Names
) )

10909 
_GLEE_NV_gpu_¥ogøm4
 = 
GL_TRUE
;

10910 
	`__GLìLök_GL_NV_gpu_¥ogøm4
();

10912 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_‰amebuf„r_mu…ißm∂e_covîage", &
exãnsi⁄Names
) )

10914 
_GLEE_NV_‰amebuf„r_mu…ißm∂e_covîage
 = 
GL_TRUE
;

10915 
	`__GLìLök_GL_NV_‰amebuf„r_mu…ißm∂e_covîage
();

10917 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_‰amebuf„r_mu…ißm∂e", &
exãnsi⁄Names
) )

10919 
_GLEE_EXT_‰amebuf„r_mu…ißm∂e
 = 
GL_TRUE
;

10920 
	`__GLìLök_GL_EXT_‰amebuf„r_mu…ißm∂e
();

10922 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_‰amebuf„r_blô", &
exãnsi⁄Names
) )

10924 
_GLEE_EXT_‰amebuf„r_blô
 = 
GL_TRUE
;

10925 
	`__GLìLök_GL_EXT_‰amebuf„r_blô
();

10927 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_com¥essi⁄_rgtc", &
exãnsi⁄Names
) )

10929 
_GLEE_EXT_ãxtuª_com¥essi⁄_rgtc
 = 
GL_TRUE
;

10930 
	`__GLìLök_GL_EXT_ãxtuª_com¥essi⁄_rgtc
();

10932 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_cﬁ‹_m©rix", &
exãnsi⁄Names
) )

10934 
_GLEE_EXT_cﬁ‹_m©rix
 = 
GL_TRUE
;

10935 
	`__GLìLök_GL_EXT_cﬁ‹_m©rix
();

10937 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_ãxtuª_£À˘", &
exãnsi⁄Names
) )

10939 
_GLEE_SGIX_ãxtuª_£À˘
 = 
GL_TRUE
;

10940 
	`__GLìLök_GL_SGIX_ãxtuª_£À˘
();

10942 i‡(
	`__GLìCheckExãnsi⁄
("GL_INGR_bÀnd_func_£∑øã", &
exãnsi⁄Names
) )

10944 
_GLEE_INGR_bÀnd_func_£∑øã
 = 
GL_TRUE
;

10945 
	`__GLìLök_GL_INGR_bÀnd_func_£∑øã
();

10947 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_dïth_∑ss_ö°rumít", &
exãnsi⁄Names
) )

10949 
_GLEE_SGIX_dïth_∑ss_ö°rumít
 = 
GL_TRUE
;

10950 
	`__GLìLök_GL_SGIX_dïth_∑ss_ö°rumít
();

10952 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_igloo_öãrÁ˚", &
exãnsi⁄Names
) )

10954 
_GLEE_SGIX_igloo_öãrÁ˚
 = 
GL_TRUE
;

10955 
	`__GLìLök_GL_SGIX_igloo_öãrÁ˚
();

10957 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_døw_buf„rs2", &
exãnsi⁄Names
) )

10959 
_GLEE_EXT_døw_buf„rs2
 = 
GL_TRUE
;

10960 
	`__GLìLök_GL_EXT_døw_buf„rs2
();

10962 i‡(
	`__GLìCheckExãnsi⁄
("GL_NV_∑ømëî_buf„r_obje˘", &
exãnsi⁄Names
) )

10964 
_GLEE_NV_∑ømëî_buf„r_obje˘
 = 
GL_TRUE
;

10965 
	`__GLìLök_GL_NV_∑ømëî_buf„r_obje˘
();

10967 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_døw_ö°™˚d", &
exãnsi⁄Names
) )

10969 
_GLEE_EXT_døw_ö°™˚d
 = 
GL_TRUE
;

10970 
	`__GLìLök_GL_EXT_døw_ö°™˚d
();

10972 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_‰agmít_lightög", &
exãnsi⁄Names
) )

10974 
_GLEE_EXT_‰agmít_lightög
 = 
GL_TRUE
;

10975 
	`__GLìLök_GL_EXT_‰agmít_lightög
();

10977 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_∑cked_dïth_°ícû", &
exãnsi⁄Names
) )

10979 
_GLEE_EXT_∑cked_dïth_°ícû
 = 
GL_TRUE
;

10980 
	`__GLìLök_GL_EXT_∑cked_dïth_°ícû
();

10982 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_s˚√_m¨kî", &
exãnsi⁄Names
) )

10984 
_GLEE_EXT_s˚√_m¨kî
 = 
GL_TRUE
;

10985 
	`__GLìLök_GL_EXT_s˚√_m¨kî
();

10987 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_°ícû_˛ór_èg", &
exãnsi⁄Names
) )

10989 
_GLEE_EXT_°ícû_˛ór_èg
 = 
GL_TRUE
;

10990 
	`__GLìLök_GL_EXT_°ícû_˛ór_èg
();

10992 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_com¥essi⁄_dxt1", &
exãnsi⁄Names
) )

10994 
_GLEE_EXT_ãxtuª_com¥essi⁄_dxt1
 = 
GL_TRUE
;

10995 
	`__GLìLök_GL_EXT_ãxtuª_com¥essi⁄_dxt1
();

10997 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_ív", &
exãnsi⁄Names
) )

10999 
_GLEE_EXT_ãxtuª_ív
 = 
GL_TRUE
;

11000 
	`__GLìLök_GL_EXT_ãxtuª_ív
();

11002 i‡(
	`__GLìCheckExãnsi⁄
("GL_EXT_ãxtuª_sRGB", &
exãnsi⁄Names
) )

11004 
_GLEE_EXT_ãxtuª_sRGB
 = 
GL_TRUE
;

11005 
	`__GLìLök_GL_EXT_ãxtuª_sRGB
();

11007 i‡(
	`__GLìCheckExãnsi⁄
("GL_IBM_°©ic_d©a", &
exãnsi⁄Names
) )

11009 
_GLEE_IBM_°©ic_d©a
 = 
GL_TRUE
;

11010 
	`__GLìLök_GL_IBM_°©ic_d©a
();

11012 i‡(
	`__GLìCheckExãnsi⁄
("GL_MESAX_ãxtuª_°ack", &
exãnsi⁄Names
) )

11014 
_GLEE_MESAX_ãxtuª_°ack
 = 
GL_TRUE
;

11015 
	`__GLìLök_GL_MESAX_ãxtuª_°ack
();

11017 i‡(
	`__GLìCheckExãnsi⁄
("GL_OES_byã_co‹dö©es", &
exãnsi⁄Names
) )

11019 
_GLEE_OES_byã_co‹dö©es
 = 
GL_TRUE
;

11020 
	`__GLìLök_GL_OES_byã_co‹dö©es
();

11022 i‡(
	`__GLìCheckExãnsi⁄
("GL_OES_com¥es£d_∑Àâed_ãxtuª", &
exãnsi⁄Names
) )

11024 
_GLEE_OES_com¥es£d_∑Àâed_ãxtuª
 = 
GL_TRUE
;

11025 
	`__GLìLök_GL_OES_com¥es£d_∑Àâed_ãxtuª
();

11027 i‡(
	`__GLìCheckExãnsi⁄
("GL_OES_sögÀ_¥ecisi⁄", &
exãnsi⁄Names
) )

11029 
_GLEE_OES_sögÀ_¥ecisi⁄
 = 
GL_TRUE
;

11030 
	`__GLìLök_GL_OES_sögÀ_¥ecisi⁄
();

11032 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_pixñ_ãxtuª_bôs", &
exãnsi⁄Names
) )

11034 
_GLEE_SGIX_pixñ_ãxtuª_bôs
 = 
GL_TRUE
;

11035 
	`__GLìLök_GL_SGIX_pixñ_ãxtuª_bôs
();

11037 i‡(
	`__GLìCheckExãnsi⁄
("GL_SGIX_ãxtuª_ønge", &
exãnsi⁄Names
) )

11039 
_GLEE_SGIX_ãxtuª_ønge
 = 
GL_TRUE
;

11040 
	`__GLìLök_GL_SGIX_ãxtuª_ønge
();

11042 #ifde‡
WIN32


11043 i‡(
	`__GLìCheckExãnsi⁄
("WGL_ARB_buf„r_ªgi⁄", &
exãnsi⁄Names
) )

11045 
_GLEE_WGL_ARB_buf„r_ªgi⁄
 = 
GL_TRUE
;

11046 
	`__GLìLök_WGL_ARB_buf„r_ªgi⁄
();

11048 i‡(
	`__GLìCheckExãnsi⁄
("WGL_ARB_mu…ißm∂e", &
exãnsi⁄Names
) )

11050 
_GLEE_WGL_ARB_mu…ißm∂e
 = 
GL_TRUE
;

11051 
	`__GLìLök_WGL_ARB_mu…ißm∂e
();

11053 i‡(
	`__GLìCheckExãnsi⁄
("WGL_ARB_exãnsi⁄s_°rög", &
exãnsi⁄Names
) )

11055 
_GLEE_WGL_ARB_exãnsi⁄s_°rög
 = 
GL_TRUE
;

11056 
	`__GLìLök_WGL_ARB_exãnsi⁄s_°rög
();

11058 i‡(
	`__GLìCheckExãnsi⁄
("WGL_ARB_pixñ_f‹m©", &
exãnsi⁄Names
) )

11060 
_GLEE_WGL_ARB_pixñ_f‹m©
 = 
GL_TRUE
;

11061 
	`__GLìLök_WGL_ARB_pixñ_f‹m©
();

11063 i‡(
	`__GLìCheckExãnsi⁄
("WGL_ARB_make_cuºít_ªad", &
exãnsi⁄Names
) )

11065 
_GLEE_WGL_ARB_make_cuºít_ªad
 = 
GL_TRUE
;

11066 
	`__GLìLök_WGL_ARB_make_cuºít_ªad
();

11068 i‡(
	`__GLìCheckExãnsi⁄
("WGL_ARB_pbuf„r", &
exãnsi⁄Names
) )

11070 
_GLEE_WGL_ARB_pbuf„r
 = 
GL_TRUE
;

11071 
	`__GLìLök_WGL_ARB_pbuf„r
();

11073 i‡(
	`__GLìCheckExãnsi⁄
("WGL_ARB_ªndî_ãxtuª", &
exãnsi⁄Names
) )

11075 
_GLEE_WGL_ARB_ªndî_ãxtuª
 = 
GL_TRUE
;

11076 
	`__GLìLök_WGL_ARB_ªndî_ãxtuª
();

11078 i‡(
	`__GLìCheckExãnsi⁄
("WGL_ARB_pixñ_f‹m©_Êﬂt", &
exãnsi⁄Names
) )

11080 
_GLEE_WGL_ARB_pixñ_f‹m©_Êﬂt
 = 
GL_TRUE
;

11081 
	`__GLìLök_WGL_ARB_pixñ_f‹m©_Êﬂt
();

11083 i‡(
	`__GLìCheckExãnsi⁄
("WGL_EXT_make_cuºít_ªad", &
exãnsi⁄Names
) )

11085 
_GLEE_WGL_EXT_make_cuºít_ªad
 = 
GL_TRUE
;

11086 
	`__GLìLök_WGL_EXT_make_cuºít_ªad
();

11088 i‡(
	`__GLìCheckExãnsi⁄
("WGL_EXT_pixñ_f‹m©", &
exãnsi⁄Names
) )

11090 
_GLEE_WGL_EXT_pixñ_f‹m©
 = 
GL_TRUE
;

11091 
	`__GLìLök_WGL_EXT_pixñ_f‹m©
();

11093 i‡(
	`__GLìCheckExãnsi⁄
("WGL_EXT_pbuf„r", &
exãnsi⁄Names
) )

11095 
_GLEE_WGL_EXT_pbuf„r
 = 
GL_TRUE
;

11096 
	`__GLìLök_WGL_EXT_pbuf„r
();

11098 i‡(
	`__GLìCheckExãnsi⁄
("WGL_EXT_dïth_Êﬂt", &
exãnsi⁄Names
) )

11100 
_GLEE_WGL_EXT_dïth_Êﬂt
 = 
GL_TRUE
;

11101 
	`__GLìLök_WGL_EXT_dïth_Êﬂt
();

11103 i‡(
	`__GLìCheckExãnsi⁄
("WGL_3DFX_mu…ißm∂e", &
exãnsi⁄Names
) )

11105 
_GLEE_WGL_3DFX_mu…ißm∂e
 = 
GL_TRUE
;

11106 
	`__GLìLök_WGL_3DFX_mu…ißm∂e
();

11108 i‡(
	`__GLìCheckExãnsi⁄
("WGL_EXT_mu…ißm∂e", &
exãnsi⁄Names
) )

11110 
_GLEE_WGL_EXT_mu…ißm∂e
 = 
GL_TRUE
;

11111 
	`__GLìLök_WGL_EXT_mu…ißm∂e
();

11113 i‡(
	`__GLìCheckExãnsi⁄
("WGL_I3D_digôÆ_video_c⁄åﬁ", &
exãnsi⁄Names
) )

11115 
_GLEE_WGL_I3D_digôÆ_video_c⁄åﬁ
 = 
GL_TRUE
;

11116 
	`__GLìLök_WGL_I3D_digôÆ_video_c⁄åﬁ
();

11118 i‡(
	`__GLìCheckExãnsi⁄
("WGL_I3D_gamma", &
exãnsi⁄Names
) )

11120 
_GLEE_WGL_I3D_gamma
 = 
GL_TRUE
;

11121 
	`__GLìLök_WGL_I3D_gamma
();

11123 i‡(
	`__GLìCheckExãnsi⁄
("WGL_I3D_gílock", &
exãnsi⁄Names
) )

11125 
_GLEE_WGL_I3D_gílock
 = 
GL_TRUE
;

11126 
	`__GLìLök_WGL_I3D_gílock
();

11128 i‡(
	`__GLìCheckExãnsi⁄
("WGL_I3D_image_buf„r", &
exãnsi⁄Names
) )

11130 
_GLEE_WGL_I3D_image_buf„r
 = 
GL_TRUE
;

11131 
	`__GLìLök_WGL_I3D_image_buf„r
();

11133 i‡(
	`__GLìCheckExãnsi⁄
("WGL_I3D_sw≠_‰ame_lock", &
exãnsi⁄Names
) )

11135 
_GLEE_WGL_I3D_sw≠_‰ame_lock
 = 
GL_TRUE
;

11136 
	`__GLìLök_WGL_I3D_sw≠_‰ame_lock
();

11138 i‡(
	`__GLìCheckExãnsi⁄
("WGL_NV_ªndî_dïth_ãxtuª", &
exãnsi⁄Names
) )

11140 
_GLEE_WGL_NV_ªndî_dïth_ãxtuª
 = 
GL_TRUE
;

11141 
	`__GLìLök_WGL_NV_ªndî_dïth_ãxtuª
();

11143 i‡(
	`__GLìCheckExãnsi⁄
("WGL_NV_ªndî_ãxtuª_ª˘™gÀ", &
exãnsi⁄Names
) )

11145 
_GLEE_WGL_NV_ªndî_ãxtuª_ª˘™gÀ
 = 
GL_TRUE
;

11146 
	`__GLìLök_WGL_NV_ªndî_ãxtuª_ª˘™gÀ
();

11148 i‡(
	`__GLìCheckExãnsi⁄
("WGL_ATI_pixñ_f‹m©_Êﬂt", &
exãnsi⁄Names
) )

11150 
_GLEE_WGL_ATI_pixñ_f‹m©_Êﬂt
 = 
GL_TRUE
;

11151 
	`__GLìLök_WGL_ATI_pixñ_f‹m©_Êﬂt
();

11153 i‡(
	`__GLìCheckExãnsi⁄
("WGL_NV_Êﬂt_buf„r", &
exãnsi⁄Names
) )

11155 
_GLEE_WGL_NV_Êﬂt_buf„r
 = 
GL_TRUE
;

11156 
	`__GLìLök_WGL_NV_Êﬂt_buf„r
();

11158 i‡(
	`__GLìCheckExãnsi⁄
("WGL_EXT_di•œy_cﬁ‹_èbÀ", &
exãnsi⁄Names
) )

11160 
_GLEE_WGL_EXT_di•œy_cﬁ‹_èbÀ
 = 
GL_TRUE
;

11161 
	`__GLìLök_WGL_EXT_di•œy_cﬁ‹_èbÀ
();

11163 i‡(
	`__GLìCheckExãnsi⁄
("WGL_EXT_exãnsi⁄s_°rög", &
exãnsi⁄Names
) )

11165 
_GLEE_WGL_EXT_exãnsi⁄s_°rög
 = 
GL_TRUE
;

11166 
	`__GLìLök_WGL_EXT_exãnsi⁄s_°rög
();

11168 i‡(
	`__GLìCheckExãnsi⁄
("WGL_EXT_sw≠_c⁄åﬁ", &
exãnsi⁄Names
) )

11170 
_GLEE_WGL_EXT_sw≠_c⁄åﬁ
 = 
GL_TRUE
;

11171 
	`__GLìLök_WGL_EXT_sw≠_c⁄åﬁ
();

11173 i‡(
	`__GLìCheckExãnsi⁄
("WGL_NV_vîãx_¨øy_ønge", &
exãnsi⁄Names
) )

11175 
_GLEE_WGL_NV_vîãx_¨øy_ønge
 = 
GL_TRUE
;

11176 
	`__GLìLök_WGL_NV_vîãx_¨øy_ønge
();

11178 i‡(
	`__GLìCheckExãnsi⁄
("WGL_OML_sync_c⁄åﬁ", &
exãnsi⁄Names
) )

11180 
_GLEE_WGL_OML_sync_c⁄åﬁ
 = 
GL_TRUE
;

11181 
	`__GLìLök_WGL_OML_sync_c⁄åﬁ
();

11183 i‡(
	`__GLìCheckExãnsi⁄
("WGL_I3D_sw≠_‰ame_ußge", &
exãnsi⁄Names
) )

11185 
_GLEE_WGL_I3D_sw≠_‰ame_ußge
 = 
GL_TRUE
;

11186 
	`__GLìLök_WGL_I3D_sw≠_‰ame_ußge
();

11188 i‡(
	`__GLìCheckExãnsi⁄
("WGL_3DL_°îeo_c⁄åﬁ", &
exãnsi⁄Names
) )

11190 
_GLEE_WGL_3DL_°îeo_c⁄åﬁ
 = 
GL_TRUE
;

11191 
	`__GLìLök_WGL_3DL_°îeo_c⁄åﬁ
();

11193 #ñi‡
	`deföed
(
__APPLE__
Ë|| deföed(
__APPLE_CC__
)

11195 i‡(
	`__GLìCheckExãnsi⁄
("GLX_VERSION_1_3", &
exãnsi⁄Names
) )

11197 
_GLEE_GLX_VERSION_1_3
 = 
GL_TRUE
;

11198 
	`__GLìLök_GLX_VERSION_1_3
();

11200 i‡(
	`__GLìCheckExãnsi⁄
("GLX_VERSION_1_4", &
exãnsi⁄Names
) )

11202 
_GLEE_GLX_VERSION_1_4
 = 
GL_TRUE
;

11203 
	`__GLìLök_GLX_VERSION_1_4
();

11205 i‡(
	`__GLìCheckExãnsi⁄
("GLX_ARB_mu…ißm∂e", &
exãnsi⁄Names
) )

11207 
_GLEE_GLX_ARB_mu…ißm∂e
 = 
GL_TRUE
;

11208 
	`__GLìLök_GLX_ARB_mu…ißm∂e
();

11210 i‡(
	`__GLìCheckExãnsi⁄
("GLX_ARB_fbc⁄fig_Êﬂt", &
exãnsi⁄Names
) )

11212 
_GLEE_GLX_ARB_fbc⁄fig_Êﬂt
 = 
GL_TRUE
;

11213 
	`__GLìLök_GLX_ARB_fbc⁄fig_Êﬂt
();

11215 i‡(
	`__GLìCheckExãnsi⁄
("GLX_SGIS_mu…ißm∂e", &
exãnsi⁄Names
) )

11217 
_GLEE_GLX_SGIS_mu…ißm∂e
 = 
GL_TRUE
;

11218 
	`__GLìLök_GLX_SGIS_mu…ißm∂e
();

11220 i‡(
	`__GLìCheckExãnsi⁄
("GLX_EXT_visuÆ_öfo", &
exãnsi⁄Names
) )

11222 
_GLEE_GLX_EXT_visuÆ_öfo
 = 
GL_TRUE
;

11223 
	`__GLìLök_GLX_EXT_visuÆ_öfo
();

11225 i‡(
	`__GLìCheckExãnsi⁄
("GLX_SGI_sw≠_c⁄åﬁ", &
exãnsi⁄Names
) )

11227 
_GLEE_GLX_SGI_sw≠_c⁄åﬁ
 = 
GL_TRUE
;

11228 
	`__GLìLök_GLX_SGI_sw≠_c⁄åﬁ
();

11230 i‡(
	`__GLìCheckExãnsi⁄
("GLX_SGI_video_sync", &
exãnsi⁄Names
) )

11232 
_GLEE_GLX_SGI_video_sync
 = 
GL_TRUE
;

11233 
	`__GLìLök_GLX_SGI_video_sync
();

11235 i‡(
	`__GLìCheckExãnsi⁄
("GLX_SGI_make_cuºít_ªad", &
exãnsi⁄Names
) )

11237 
_GLEE_GLX_SGI_make_cuºít_ªad
 = 
GL_TRUE
;

11238 
	`__GLìLök_GLX_SGI_make_cuºít_ªad
();

11240 i‡(
	`__GLìCheckExãnsi⁄
("GLX_EXT_visuÆ_øtög", &
exãnsi⁄Names
) )

11242 
_GLEE_GLX_EXT_visuÆ_øtög
 = 
GL_TRUE
;

11243 
	`__GLìLök_GLX_EXT_visuÆ_øtög
();

11245 i‡(
	`__GLìCheckExãnsi⁄
("GLX_EXT_imp‹t_c⁄ãxt", &
exãnsi⁄Names
) )

11247 
_GLEE_GLX_EXT_imp‹t_c⁄ãxt
 = 
GL_TRUE
;

11248 
	`__GLìLök_GLX_EXT_imp‹t_c⁄ãxt
();

11250 i‡(
	`__GLìCheckExãnsi⁄
("GLX_SGIX_fbc⁄fig", &
exãnsi⁄Names
) )

11252 
_GLEE_GLX_SGIX_fbc⁄fig
 = 
GL_TRUE
;

11253 
	`__GLìLök_GLX_SGIX_fbc⁄fig
();

11255 i‡(
	`__GLìCheckExãnsi⁄
("GLX_SGIX_pbuf„r", &
exãnsi⁄Names
) )

11257 
_GLEE_GLX_SGIX_pbuf„r
 = 
GL_TRUE
;

11258 
	`__GLìLök_GLX_SGIX_pbuf„r
();

11260 i‡(
	`__GLìCheckExãnsi⁄
("GLX_SGI_cushi⁄", &
exãnsi⁄Names
) )

11262 
_GLEE_GLX_SGI_cushi⁄
 = 
GL_TRUE
;

11263 
	`__GLìLök_GLX_SGI_cushi⁄
();

11265 i‡(
	`__GLìCheckExãnsi⁄
("GLX_SGIX_video_ªsize", &
exãnsi⁄Names
) )

11267 
_GLEE_GLX_SGIX_video_ªsize
 = 
GL_TRUE
;

11268 
	`__GLìLök_GLX_SGIX_video_ªsize
();

11270 i‡(
	`__GLìCheckExãnsi⁄
("GLX_SGIX_sw≠_group", &
exãnsi⁄Names
) )

11272 
_GLEE_GLX_SGIX_sw≠_group
 = 
GL_TRUE
;

11273 
	`__GLìLök_GLX_SGIX_sw≠_group
();

11275 i‡(
	`__GLìCheckExãnsi⁄
("GLX_SGIX_sw≠_b¨rõr", &
exãnsi⁄Names
) )

11277 
_GLEE_GLX_SGIX_sw≠_b¨rõr
 = 
GL_TRUE
;

11278 
	`__GLìLök_GLX_SGIX_sw≠_b¨rõr
();

11280 i‡(
	`__GLìCheckExãnsi⁄
("GLX_SGIS_bÀnded_ovîœy", &
exãnsi⁄Names
) )

11282 
_GLEE_GLX_SGIS_bÀnded_ovîœy
 = 
GL_TRUE
;

11283 
	`__GLìLök_GLX_SGIS_bÀnded_ovîœy
();

11285 i‡(
	`__GLìCheckExãnsi⁄
("GLX_SGIS_sh¨ed_mu…ißm∂e", &
exãnsi⁄Names
) )

11287 
_GLEE_GLX_SGIS_sh¨ed_mu…ißm∂e
 = 
GL_TRUE
;

11288 
	`__GLìLök_GLX_SGIS_sh¨ed_mu…ißm∂e
();

11290 i‡(
	`__GLìCheckExãnsi⁄
("GLX_SUN_gë_å™•¨ít_ödex", &
exãnsi⁄Names
) )

11292 
_GLEE_GLX_SUN_gë_å™•¨ít_ödex
 = 
GL_TRUE
;

11293 
	`__GLìLök_GLX_SUN_gë_å™•¨ít_ödex
();

11295 i‡(
	`__GLìCheckExãnsi⁄
("GLX_3DFX_mu…ißm∂e", &
exãnsi⁄Names
) )

11297 
_GLEE_GLX_3DFX_mu…ißm∂e
 = 
GL_TRUE
;

11298 
	`__GLìLök_GLX_3DFX_mu…ißm∂e
();

11300 i‡(
	`__GLìCheckExãnsi⁄
("GLX_MESA_c›y_sub_buf„r", &
exãnsi⁄Names
) )

11302 
_GLEE_GLX_MESA_c›y_sub_buf„r
 = 
GL_TRUE
;

11303 
	`__GLìLök_GLX_MESA_c›y_sub_buf„r
();

11305 i‡(
	`__GLìCheckExãnsi⁄
("GLX_MESA_pixm≠_cﬁ‹m≠", &
exãnsi⁄Names
) )

11307 
_GLEE_GLX_MESA_pixm≠_cﬁ‹m≠
 = 
GL_TRUE
;

11308 
	`__GLìLök_GLX_MESA_pixm≠_cﬁ‹m≠
();

11310 i‡(
	`__GLìCheckExãnsi⁄
("GLX_MESA_ªÀa£_buf„rs", &
exãnsi⁄Names
) )

11312 
_GLEE_GLX_MESA_ªÀa£_buf„rs
 = 
GL_TRUE
;

11313 
	`__GLìLök_GLX_MESA_ªÀa£_buf„rs
();

11315 i‡(
	`__GLìCheckExãnsi⁄
("GLX_MESA_£t_3dfx_mode", &
exãnsi⁄Names
) )

11317 
_GLEE_GLX_MESA_£t_3dfx_mode
 = 
GL_TRUE
;

11318 
	`__GLìLök_GLX_MESA_£t_3dfx_mode
();

11320 i‡(
	`__GLìCheckExãnsi⁄
("GLX_SGIX_visuÆ_£À˘_group", &
exãnsi⁄Names
) )

11322 
_GLEE_GLX_SGIX_visuÆ_£À˘_group
 = 
GL_TRUE
;

11323 
	`__GLìLök_GLX_SGIX_visuÆ_£À˘_group
();

11325 i‡(
	`__GLìCheckExãnsi⁄
("GLX_OML_sw≠_mëhod", &
exãnsi⁄Names
) )

11327 
_GLEE_GLX_OML_sw≠_mëhod
 = 
GL_TRUE
;

11328 
	`__GLìLök_GLX_OML_sw≠_mëhod
();

11330 i‡(
	`__GLìCheckExãnsi⁄
("GLX_OML_sync_c⁄åﬁ", &
exãnsi⁄Names
) )

11332 
_GLEE_GLX_OML_sync_c⁄åﬁ
 = 
GL_TRUE
;

11333 
	`__GLìLök_GLX_OML_sync_c⁄åﬁ
();

11335 i‡(
	`__GLìCheckExãnsi⁄
("GLX_NV_Êﬂt_buf„r", &
exãnsi⁄Names
) )

11337 
_GLEE_GLX_NV_Êﬂt_buf„r
 = 
GL_TRUE
;

11338 
	`__GLìLök_GLX_NV_Êﬂt_buf„r
();

11340 i‡(
	`__GLìCheckExãnsi⁄
("GLX_SGIX_hy≥Ωùe", &
exãnsi⁄Names
) )

11342 
_GLEE_GLX_SGIX_hy≥Ωùe
 = 
GL_TRUE
;

11343 
	`__GLìLök_GLX_SGIX_hy≥Ωùe
();

11345 i‡(
	`__GLìCheckExãnsi⁄
("GLX_MESA_agp_off£t", &
exãnsi⁄Names
) )

11347 
_GLEE_GLX_MESA_agp_off£t
 = 
GL_TRUE
;

11348 
	`__GLìLök_GLX_MESA_agp_off£t
();

11350 i‡(
	`__GLìCheckExãnsi⁄
("GLX_EXT_s˚√_m¨kî", &
exãnsi⁄Names
) )

11352 
_GLEE_GLX_EXT_s˚√_m¨kî
 = 
GL_TRUE
;

11353 
	`__GLìLök_GLX_EXT_s˚√_m¨kî
();

11357 
	`__GLìExtLi°_˛ón
(&
exãnsi⁄Names
);

11358  
GL_TRUE
;

11359 
	}
}

	@shared/GLee.h

36 #i‚de‡
__gÀe_h_


37 
	#__gÀe_h_


	)

39 #ifde‡
__gl_h_


40 #îr‹ 
gl
.
h
 
ö˛uded
 
bef‹e
 
gÀe
.h

43 #ifde‡
__gÀxt_h_


44 #îr‹ 
gÀxt
.
h
 
ö˛uded
 
bef‹e
 
gÀe
.h

47 #ifde‡
__wgÀxt_h_


48 #îr‹ 
wgÀxt
.
h
 
ö˛uded
 
bef‹e
 
gÀe
.h

51 #ifde‡
__glxext_h_


52 #îr‹ 
glxext
.
h
 
ö˛uded
 
bef‹e
 
gÀe
.h

55 #ifde‡
WIN32


56 
	#WIN32_LEAN_AND_MEAN


	)

57 
	~<wödows.h
>

58 
	~<GL/gl.h
>

59 #ñi‡
deföed
(
__APPLE__
Ë|| deföed(
__APPLE_CC__
)

60 
	~<O≥nGL/gl.h
>

62 
	#__gÀxt_h_


	)

63 
	#__glxext_h_


	)

64 
	#GLX_GLXEXT_PROTOTYPES


	)

65 
	~<GL/gl.h
>

66 
	~<GL/glx.h
>

69 #i‚de‡
APIENTRY


70 
	#APIENTRY


	)

73 #i‚de‡
APIENTRYP


74 
	#APIENTRYP
 
APIENTRY
 *

	)

77 
	#GLEE_EXTERN
 

	)

79 #ifde‡
__˝lu•lus


83 
	#GLEE_LINK_FAIL
 0

	)

84 
	#GLEE_LINK_PARTIAL
 1

	)

85 
	#GLEE_LINK_COMPLETE
 2

	)

89 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_VERSION_1_2
;

90 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_imagög
;

91 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_VERSION_1_3
;

92 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_VERSION_1_4
;

93 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_VERSION_1_5
;

94 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_VERSION_2_0
;

95 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_VERSION_2_1
;

96 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_mu…ôextuª
;

97 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_å™•o£_m©rix
;

98 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_mu…ißm∂e
;

99 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_ãxtuª_ív_add
;

100 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_ãxtuª_cube_m≠
;

101 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_ãxtuª_com¥essi⁄
;

102 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_ãxtuª_b‹dî_˛amp
;

103 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_poöt_∑ømëîs
;

104 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_vîãx_bÀnd
;

105 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_m©rix_∑Àâe
;

106 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_ãxtuª_ív_comböe
;

107 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_ãxtuª_ív_¸ossb¨
;

108 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_ãxtuª_ív_dŸ3
;

109 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_ãxtuª_múr‹ed_ª≥©
;

110 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_dïth_ãxtuª
;

111 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_shadow
;

112 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_shadow_ambõ¡
;

113 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_wödow_pos
;

114 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_vîãx_¥ogøm
;

115 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_‰agmít_¥ogøm
;

116 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_vîãx_buf„r_obje˘
;

117 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_oc˛usi⁄_quîy
;

118 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_shadî_obje˘s
;

119 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_vîãx_shadî
;

120 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_‰agmít_shadî
;

121 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_shadög_œnguage_100
;

122 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_ãxtuª_n⁄_powî_of_two
;

123 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_poöt_•rôe
;

124 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_‰agmít_¥ogøm_shadow
;

125 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_døw_buf„rs
;

126 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_ãxtuª_ª˘™gÀ
;

127 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_cﬁ‹_buf„r_Êﬂt
;

128 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_hÆf_Êﬂt_pixñ
;

129 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_ãxtuª_Êﬂt
;

130 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ARB_pixñ_buf„r_obje˘
;

131 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_abgr
;

132 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_bÀnd_cﬁ‹
;

133 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_pﬁyg⁄_off£t
;

134 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª
;

135 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª3D
;

136 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIS_ãxtuª_fûãr4
;

137 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_subãxtuª
;

138 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_c›y_ãxtuª
;

139 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_hi°ogøm
;

140 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_c⁄vﬁuti⁄
;

141 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGI_cﬁ‹_m©rix
;

142 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGI_cﬁ‹_èbÀ
;

143 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIS_pixñ_ãxtuª
;

144 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_pixñ_ãxtuª
;

145 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIS_ãxtuª4D
;

146 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGI_ãxtuª_cﬁ‹_èbÀ
;

147 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_cmyka
;

148 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_obje˘
;

149 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIS_dëaû_ãxtuª
;

150 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIS_sh¨≥n_ãxtuª
;

151 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_∑cked_pixñs
;

152 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIS_ãxtuª_lod
;

153 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIS_mu…ißm∂e
;

154 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ªsˇÀ_n‹mÆ
;

155 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_vîãx_¨øy
;

156 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_misc_©åibuã
;

157 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIS_gíî©e_mùm≠
;

158 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_˛ùm≠
;

159 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_shadow
;

160 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIS_ãxtuª_edge_˛amp
;

161 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIS_ãxtuª_b‹dî_˛amp
;

162 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_bÀnd_mömax
;

163 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_bÀnd_subåa˘
;

164 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_bÀnd_logic_›
;

165 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_öãæa˚
;

166 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_pixñ_tûes
;

167 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIS_ãxtuª_£À˘
;

168 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_•rôe
;

169 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_ãxtuª_mu…i_buf„r
;

170 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_poöt_∑ømëîs
;

171 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIS_poöt_∑ømëîs
;

172 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_ö°rumíts
;

173 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_ãxtuª_sˇÀ_büs
;

174 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_‰amezoom
;

175 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_èg_ßm∂e_buf„r
;

176 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_FfdMaskSGIX
;

177 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_pﬁynomül_ffd
;

178 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_ª„ªn˚_∂™e
;

179 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_Êush_ø°î
;

180 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_dïth_ãxtuª
;

181 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIS_fog_fun˘i⁄
;

182 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_fog_off£t
;

183 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_HP_image_å™sf‹m
;

184 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_HP_c⁄vﬁuti⁄_b‹dî_modes
;

185 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_INGR_∑Àâe_buf„r
;

186 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_ãxtuª_add_ív
;

187 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_cﬁ‹_subèbÀ
;

188 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_PGI_vîãx_höts
;

189 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_PGI_misc_höts
;

190 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_∑Àâed_ãxtuª
;

191 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_˛ù_vﬁume_höt
;

192 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_li°_¥i‹ôy
;

193 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_ú_ö°rumít1
;

194 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_ˇŒigøphic_‰agmít
;

195 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_ãxtuª_lod_büs
;

196 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_shadow_ambõ¡
;

197 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ödex_ãxtuª
;

198 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ödex_m©îül
;

199 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ödex_func
;

200 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ödex_¨øy_f‹m©s
;

201 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_compûed_vîãx_¨øy
;

202 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_cuŒ_vîãx
;

203 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_y¸cb
;

204 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_‰agmít_lightög
;

205 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_IBM_ø°îpos_˛ù
;

206 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_HP_ãxtuª_lightög
;

207 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_døw_ønge_ñemíts
;

208 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_WIN_ph⁄g_shadög
;

209 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_WIN_•ecuœr_fog
;

210 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_light_ãxtuª
;

211 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_bÀnd_Æpha_mömax
;

212 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_im∑˘_pixñ_ãxtuª
;

213 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_bgø
;

214 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_async
;

215 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_async_pixñ
;

216 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_async_hi°ogøm
;

217 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_INTEL_ãxtuª_sciss‹
;

218 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_INTEL_∑øŒñ_¨øys
;

219 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_HP_oc˛usi⁄_ã°
;

220 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_pixñ_å™sf‹m
;

221 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ
;

222 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_sh¨ed_ãxtuª_∑Àâe
;

223 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_£∑øã_•ecuœr_cﬁ‹
;

224 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_£c⁄d¨y_cﬁ‹
;

225 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_≥πurb_n‹mÆ
;

226 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_mu…i_døw_¨øys
;

227 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_fog_co‹d
;

228 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_REND_s¸ìn_co‹dö©es
;

229 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_co‹dö©e_‰ame
;

230 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_ív_comböe
;

231 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_APPLE_•ecuœr_ve˘‹
;

232 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_APPLE_å™sf‹m_höt
;

233 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_fog_sˇÀ
;

234 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SUNX_c⁄°™t_d©a
;

235 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SUN_globÆ_Æpha
;

236 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SUN_åüngÀ_li°
;

237 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SUN_vîãx
;

238 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_bÀnd_func_£∑øã
;

239 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_INGR_cﬁ‹_˛amp
;

240 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_INGR_öãæa˚_ªad
;

241 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_°ícû_wøp
;

242 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_422_pixñs
;

243 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_ãxgí_ªÊe˘i⁄
;

244 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_cube_m≠
;

245 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SUN_c⁄vﬁuti⁄_b‹dî_modes
;

246 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_ív_add
;

247 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_lod_büs
;

248 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_fûãr_™isŸr›ic
;

249 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_vîãx_weightög
;

250 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_light_max_exp⁄ít
;

251 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_vîãx_¨øy_ønge
;

252 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_ªgi°î_comböîs
;

253 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_fog_di°™˚
;

254 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_ãxgí_emboss
;

255 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_bÀnd_squ¨e
;

256 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_ãxtuª_ív_comböe4
;

257 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_MESA_ªsize_buf„rs
;

258 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_MESA_wödow_pos
;

259 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_com¥essi⁄_s3tc
;

260 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_IBM_cuŒ_vîãx
;

261 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_IBM_mu…imode_døw_¨øys
;

262 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_IBM_vîãx_¨øy_li°s
;

263 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_subßm∂e
;

264 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_y¸cb_subßm∂e
;

265 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_y¸cba
;

266 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGI_dïth_∑ss_ö°rumít
;

267 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_3DFX_ãxtuª_com¥essi⁄_FXT1
;

268 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_3DFX_mu…ißm∂e
;

269 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_3DFX_tbuf„r
;

270 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_mu…ißm∂e
;

271 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_vîãx_¥e˛ù
;

272 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_c⁄vﬁuti⁄_accuøcy
;

273 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_ªßm∂e
;

274 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIS_poöt_löe_ãxgí
;

275 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIS_ãxtuª_cﬁ‹_mask
;

276 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_ív_dŸ3
;

277 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ATI_ãxtuª_múr‹_⁄˚
;

278 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_„n˚
;

279 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_IBM_ãxtuª_múr‹ed_ª≥©
;

280 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_evÆu©‹s
;

281 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_∑cked_dïth_°ícû
;

282 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_ªgi°î_comböîs2
;

283 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_ãxtuª_com¥essi⁄_vtc
;

284 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_ãxtuª_ª˘™gÀ
;

285 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_ãxtuª_shadî
;

286 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_ãxtuª_shadî2
;

287 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_vîãx_¨øy_ønge2
;

288 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_vîãx_¥ogøm
;

289 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_ãxtuª_co‹dö©e_˛amp
;

290 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_sˇÀbüs_höt
;

291 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_OML_öãæa˚
;

292 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_OML_subßm∂e
;

293 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_OML_ªßm∂e
;

294 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_c›y_dïth_to_cﬁ‹
;

295 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ATI_ívm≠_bumpm≠
;

296 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ATI_‰agmít_shadî
;

297 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ATI_≤_åüngÀs
;

298 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ATI_vîãx_¨øy_obje˘
;

299 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_vîãx_shadî
;

300 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ATI_vîãx_°ªams
;

301 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ATI_ñemít_¨øy
;

302 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SUN_mesh_¨øy
;

303 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SUN_¶i˚_accum
;

304 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_mu…ißm∂e_fûãr_höt
;

305 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_dïth_˛amp
;

306 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_oc˛usi⁄_quîy
;

307 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_poöt_•rôe
;

308 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_ãxtuª_shadî3
;

309 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_vîãx_¥ogøm1_1
;

310 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_shadow_funcs
;

311 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_°ícû_two_side
;

312 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ATI_ãxt_‰agmít_shadî
;

313 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_APPLE_˛õ¡_°‹age
;

314 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_APPLE_ñemít_¨øy
;

315 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_APPLE_„n˚
;

316 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_APPLE_vîãx_¨øy_obje˘
;

317 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_APPLE_vîãx_¨øy_ønge
;

318 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_APPLE_ycb¸_422
;

319 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_S3_s3tc
;

320 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ATI_døw_buf„rs
;

321 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ATI_pixñ_f‹m©_Êﬂt
;

322 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ATI_ãxtuª_ív_comböe3
;

323 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ATI_ãxtuª_Êﬂt
;

324 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_Êﬂt_buf„r
;

325 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_‰agmít_¥ogøm
;

326 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_hÆf_Êﬂt
;

327 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_pixñ_d©a_ønge
;

328 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_¥imôive_ª°¨t
;

329 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_ãxtuª_ex∑nd_n‹mÆ
;

330 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_vîãx_¥ogøm2
;

331 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ATI_m≠_obje˘_buf„r
;

332 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ATI_£∑øã_°ícû
;

333 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_ATI_vîãx_©åib_¨øy_obje˘
;

334 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_OES_ªad_f‹m©
;

335 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_dïth_bounds_ã°
;

336 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_múr‹_˛amp
;

337 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_bÀnd_equ©i⁄_£∑øã
;

338 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_MESA_∑ck_övît
;

339 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_MESA_ycb¸_ãxtuª
;

340 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_pixñ_buf„r_obje˘
;

341 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_‰agmít_¥ogøm_›ti⁄
;

342 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_‰agmít_¥ogøm2
;

343 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_vîãx_¥ogøm2_›ti⁄
;

344 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_vîãx_¥ogøm3
;

345 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_‰amebuf„r_obje˘
;

346 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_GREMEDY_°rög_m¨kî
;

347 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_Cg_shadî
;

348 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_timî_quîy
;

349 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_buf„r_obje˘
;

350 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_gpu_shadî4
;

351 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_geomëry_shadî4
;

352 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_bödabÀ_unif‹m
;

353 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_‰amebuf„r_sRGB
;

354 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_sh¨ed_exp⁄ít
;

355 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_∑cked_Êﬂt
;

356 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_¨øy
;

357 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_öãgî
;

358 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_dïth_buf„r_Êﬂt
;

359 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_com¥essi⁄_œtc
;

360 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_å™sf‹m_„edback
;

361 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_geomëry_¥ogøm4
;

362 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_gpu_¥ogøm4
;

363 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_‰amebuf„r_mu…ißm∂e_covîage
;

364 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_‰amebuf„r_mu…ißm∂e
;

365 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_‰amebuf„r_blô
;

366 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_com¥essi⁄_rgtc
;

367 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_cﬁ‹_m©rix
;

368 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_ãxtuª_£À˘
;

369 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_INGR_bÀnd_func_£∑øã
;

370 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_dïth_∑ss_ö°rumít
;

371 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_igloo_öãrÁ˚
;

372 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_døw_buf„rs2
;

373 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_NV_∑ømëî_buf„r_obje˘
;

374 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_døw_ö°™˚d
;

375 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_‰agmít_lightög
;

376 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_∑cked_dïth_°ícû
;

377 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_s˚√_m¨kî
;

378 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_°ícû_˛ór_èg
;

379 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_com¥essi⁄_dxt1
;

380 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_ív
;

381 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_EXT_ãxtuª_sRGB
;

382 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_IBM_°©ic_d©a
;

383 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_MESAX_ãxtuª_°ack
;

384 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_OES_byã_co‹dö©es
;

385 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_OES_com¥es£d_∑Àâed_ãxtuª
;

386 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_OES_sögÀ_¥ecisi⁄
;

387 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_pixñ_ãxtuª_bôs
;

388 
GLEE_EXTERN
 
GLboﬁón
 
_GLEE_SGIX_ãxtuª_ønge
;

392 
	#GLEE_VERSION_1_2
 
	`GLìE«bÀd
(&
_GLEE_VERSION_1_2
)

	)

393 
	#GLEE_ARB_imagög
 
	`GLìE«bÀd
(&
_GLEE_ARB_imagög
)

	)

394 
	#GLEE_VERSION_1_3
 
	`GLìE«bÀd
(&
_GLEE_VERSION_1_3
)

	)

395 
	#GLEE_VERSION_1_4
 
	`GLìE«bÀd
(&
_GLEE_VERSION_1_4
)

	)

396 
	#GLEE_VERSION_1_5
 
	`GLìE«bÀd
(&
_GLEE_VERSION_1_5
)

	)

397 
	#GLEE_VERSION_2_0
 
	`GLìE«bÀd
(&
_GLEE_VERSION_2_0
)

	)

398 
	#GLEE_VERSION_2_1
 
	`GLìE«bÀd
(&
_GLEE_VERSION_2_1
)

	)

399 
	#GLEE_ARB_mu…ôextuª
 
	`GLìE«bÀd
(&
_GLEE_ARB_mu…ôextuª
)

	)

400 
	#GLEE_ARB_å™•o£_m©rix
 
	`GLìE«bÀd
(&
_GLEE_ARB_å™•o£_m©rix
)

	)

401 
	#GLEE_ARB_mu…ißm∂e
 
	`GLìE«bÀd
(&
_GLEE_ARB_mu…ißm∂e
)

	)

402 
	#GLEE_ARB_ãxtuª_ív_add
 
	`GLìE«bÀd
(&
_GLEE_ARB_ãxtuª_ív_add
)

	)

403 
	#GLEE_ARB_ãxtuª_cube_m≠
 
	`GLìE«bÀd
(&
_GLEE_ARB_ãxtuª_cube_m≠
)

	)

404 
	#GLEE_ARB_ãxtuª_com¥essi⁄
 
	`GLìE«bÀd
(&
_GLEE_ARB_ãxtuª_com¥essi⁄
)

	)

405 
	#GLEE_ARB_ãxtuª_b‹dî_˛amp
 
	`GLìE«bÀd
(&
_GLEE_ARB_ãxtuª_b‹dî_˛amp
)

	)

406 
	#GLEE_ARB_poöt_∑ømëîs
 
	`GLìE«bÀd
(&
_GLEE_ARB_poöt_∑ømëîs
)

	)

407 
	#GLEE_ARB_vîãx_bÀnd
 
	`GLìE«bÀd
(&
_GLEE_ARB_vîãx_bÀnd
)

	)

408 
	#GLEE_ARB_m©rix_∑Àâe
 
	`GLìE«bÀd
(&
_GLEE_ARB_m©rix_∑Àâe
)

	)

409 
	#GLEE_ARB_ãxtuª_ív_comböe
 
	`GLìE«bÀd
(&
_GLEE_ARB_ãxtuª_ív_comböe
)

	)

410 
	#GLEE_ARB_ãxtuª_ív_¸ossb¨
 
	`GLìE«bÀd
(&
_GLEE_ARB_ãxtuª_ív_¸ossb¨
)

	)

411 
	#GLEE_ARB_ãxtuª_ív_dŸ3
 
	`GLìE«bÀd
(&
_GLEE_ARB_ãxtuª_ív_dŸ3
)

	)

412 
	#GLEE_ARB_ãxtuª_múr‹ed_ª≥©
 
	`GLìE«bÀd
(&
_GLEE_ARB_ãxtuª_múr‹ed_ª≥©
)

	)

413 
	#GLEE_ARB_dïth_ãxtuª
 
	`GLìE«bÀd
(&
_GLEE_ARB_dïth_ãxtuª
)

	)

414 
	#GLEE_ARB_shadow
 
	`GLìE«bÀd
(&
_GLEE_ARB_shadow
)

	)

415 
	#GLEE_ARB_shadow_ambõ¡
 
	`GLìE«bÀd
(&
_GLEE_ARB_shadow_ambõ¡
)

	)

416 
	#GLEE_ARB_wödow_pos
 
	`GLìE«bÀd
(&
_GLEE_ARB_wödow_pos
)

	)

417 
	#GLEE_ARB_vîãx_¥ogøm
 
	`GLìE«bÀd
(&
_GLEE_ARB_vîãx_¥ogøm
)

	)

418 
	#GLEE_ARB_‰agmít_¥ogøm
 
	`GLìE«bÀd
(&
_GLEE_ARB_‰agmít_¥ogøm
)

	)

419 
	#GLEE_ARB_vîãx_buf„r_obje˘
 
	`GLìE«bÀd
(&
_GLEE_ARB_vîãx_buf„r_obje˘
)

	)

420 
	#GLEE_ARB_oc˛usi⁄_quîy
 
	`GLìE«bÀd
(&
_GLEE_ARB_oc˛usi⁄_quîy
)

	)

421 
	#GLEE_ARB_shadî_obje˘s
 
	`GLìE«bÀd
(&
_GLEE_ARB_shadî_obje˘s
)

	)

422 
	#GLEE_ARB_vîãx_shadî
 
	`GLìE«bÀd
(&
_GLEE_ARB_vîãx_shadî
)

	)

423 
	#GLEE_ARB_‰agmít_shadî
 
	`GLìE«bÀd
(&
_GLEE_ARB_‰agmít_shadî
)

	)

424 
	#GLEE_ARB_shadög_œnguage_100
 
	`GLìE«bÀd
(&
_GLEE_ARB_shadög_œnguage_100
)

	)

425 
	#GLEE_ARB_ãxtuª_n⁄_powî_of_two
 
	`GLìE«bÀd
(&
_GLEE_ARB_ãxtuª_n⁄_powî_of_two
)

	)

426 
	#GLEE_ARB_poöt_•rôe
 
	`GLìE«bÀd
(&
_GLEE_ARB_poöt_•rôe
)

	)

427 
	#GLEE_ARB_‰agmít_¥ogøm_shadow
 
	`GLìE«bÀd
(&
_GLEE_ARB_‰agmít_¥ogøm_shadow
)

	)

428 
	#GLEE_ARB_døw_buf„rs
 
	`GLìE«bÀd
(&
_GLEE_ARB_døw_buf„rs
)

	)

429 
	#GLEE_ARB_ãxtuª_ª˘™gÀ
 
	`GLìE«bÀd
(&
_GLEE_ARB_ãxtuª_ª˘™gÀ
)

	)

430 
	#GLEE_ARB_cﬁ‹_buf„r_Êﬂt
 
	`GLìE«bÀd
(&
_GLEE_ARB_cﬁ‹_buf„r_Êﬂt
)

	)

431 
	#GLEE_ARB_hÆf_Êﬂt_pixñ
 
	`GLìE«bÀd
(&
_GLEE_ARB_hÆf_Êﬂt_pixñ
)

	)

432 
	#GLEE_ARB_ãxtuª_Êﬂt
 
	`GLìE«bÀd
(&
_GLEE_ARB_ãxtuª_Êﬂt
)

	)

433 
	#GLEE_ARB_pixñ_buf„r_obje˘
 
	`GLìE«bÀd
(&
_GLEE_ARB_pixñ_buf„r_obje˘
)

	)

434 
	#GLEE_EXT_abgr
 
	`GLìE«bÀd
(&
_GLEE_EXT_abgr
)

	)

435 
	#GLEE_EXT_bÀnd_cﬁ‹
 
	`GLìE«bÀd
(&
_GLEE_EXT_bÀnd_cﬁ‹
)

	)

436 
	#GLEE_EXT_pﬁyg⁄_off£t
 
	`GLìE«bÀd
(&
_GLEE_EXT_pﬁyg⁄_off£t
)

	)

437 
	#GLEE_EXT_ãxtuª
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª
)

	)

438 
	#GLEE_EXT_ãxtuª3D
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª3D
)

	)

439 
	#GLEE_SGIS_ãxtuª_fûãr4
 
	`GLìE«bÀd
(&
_GLEE_SGIS_ãxtuª_fûãr4
)

	)

440 
	#GLEE_EXT_subãxtuª
 
	`GLìE«bÀd
(&
_GLEE_EXT_subãxtuª
)

	)

441 
	#GLEE_EXT_c›y_ãxtuª
 
	`GLìE«bÀd
(&
_GLEE_EXT_c›y_ãxtuª
)

	)

442 
	#GLEE_EXT_hi°ogøm
 
	`GLìE«bÀd
(&
_GLEE_EXT_hi°ogøm
)

	)

443 
	#GLEE_EXT_c⁄vﬁuti⁄
 
	`GLìE«bÀd
(&
_GLEE_EXT_c⁄vﬁuti⁄
)

	)

444 
	#GLEE_SGI_cﬁ‹_m©rix
 
	`GLìE«bÀd
(&
_GLEE_SGI_cﬁ‹_m©rix
)

	)

445 
	#GLEE_SGI_cﬁ‹_èbÀ
 
	`GLìE«bÀd
(&
_GLEE_SGI_cﬁ‹_èbÀ
)

	)

446 
	#GLEE_SGIS_pixñ_ãxtuª
 
	`GLìE«bÀd
(&
_GLEE_SGIS_pixñ_ãxtuª
)

	)

447 
	#GLEE_SGIX_pixñ_ãxtuª
 
	`GLìE«bÀd
(&
_GLEE_SGIX_pixñ_ãxtuª
)

	)

448 
	#GLEE_SGIS_ãxtuª4D
 
	`GLìE«bÀd
(&
_GLEE_SGIS_ãxtuª4D
)

	)

449 
	#GLEE_SGI_ãxtuª_cﬁ‹_èbÀ
 
	`GLìE«bÀd
(&
_GLEE_SGI_ãxtuª_cﬁ‹_èbÀ
)

	)

450 
	#GLEE_EXT_cmyka
 
	`GLìE«bÀd
(&
_GLEE_EXT_cmyka
)

	)

451 
	#GLEE_EXT_ãxtuª_obje˘
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_obje˘
)

	)

452 
	#GLEE_SGIS_dëaû_ãxtuª
 
	`GLìE«bÀd
(&
_GLEE_SGIS_dëaû_ãxtuª
)

	)

453 
	#GLEE_SGIS_sh¨≥n_ãxtuª
 
	`GLìE«bÀd
(&
_GLEE_SGIS_sh¨≥n_ãxtuª
)

	)

454 
	#GLEE_EXT_∑cked_pixñs
 
	`GLìE«bÀd
(&
_GLEE_EXT_∑cked_pixñs
)

	)

455 
	#GLEE_SGIS_ãxtuª_lod
 
	`GLìE«bÀd
(&
_GLEE_SGIS_ãxtuª_lod
)

	)

456 
	#GLEE_SGIS_mu…ißm∂e
 
	`GLìE«bÀd
(&
_GLEE_SGIS_mu…ißm∂e
)

	)

457 
	#GLEE_EXT_ªsˇÀ_n‹mÆ
 
	`GLìE«bÀd
(&
_GLEE_EXT_ªsˇÀ_n‹mÆ
)

	)

458 
	#GLEE_EXT_vîãx_¨øy
 
	`GLìE«bÀd
(&
_GLEE_EXT_vîãx_¨øy
)

	)

459 
	#GLEE_EXT_misc_©åibuã
 
	`GLìE«bÀd
(&
_GLEE_EXT_misc_©åibuã
)

	)

460 
	#GLEE_SGIS_gíî©e_mùm≠
 
	`GLìE«bÀd
(&
_GLEE_SGIS_gíî©e_mùm≠
)

	)

461 
	#GLEE_SGIX_˛ùm≠
 
	`GLìE«bÀd
(&
_GLEE_SGIX_˛ùm≠
)

	)

462 
	#GLEE_SGIX_shadow
 
	`GLìE«bÀd
(&
_GLEE_SGIX_shadow
)

	)

463 
	#GLEE_SGIS_ãxtuª_edge_˛amp
 
	`GLìE«bÀd
(&
_GLEE_SGIS_ãxtuª_edge_˛amp
)

	)

464 
	#GLEE_SGIS_ãxtuª_b‹dî_˛amp
 
	`GLìE«bÀd
(&
_GLEE_SGIS_ãxtuª_b‹dî_˛amp
)

	)

465 
	#GLEE_EXT_bÀnd_mömax
 
	`GLìE«bÀd
(&
_GLEE_EXT_bÀnd_mömax
)

	)

466 
	#GLEE_EXT_bÀnd_subåa˘
 
	`GLìE«bÀd
(&
_GLEE_EXT_bÀnd_subåa˘
)

	)

467 
	#GLEE_EXT_bÀnd_logic_›
 
	`GLìE«bÀd
(&
_GLEE_EXT_bÀnd_logic_›
)

	)

468 
	#GLEE_SGIX_öãæa˚
 
	`GLìE«bÀd
(&
_GLEE_SGIX_öãæa˚
)

	)

469 
	#GLEE_SGIX_pixñ_tûes
 
	`GLìE«bÀd
(&
_GLEE_SGIX_pixñ_tûes
)

	)

470 
	#GLEE_SGIS_ãxtuª_£À˘
 
	`GLìE«bÀd
(&
_GLEE_SGIS_ãxtuª_£À˘
)

	)

471 
	#GLEE_SGIX_•rôe
 
	`GLìE«bÀd
(&
_GLEE_SGIX_•rôe
)

	)

472 
	#GLEE_SGIX_ãxtuª_mu…i_buf„r
 
	`GLìE«bÀd
(&
_GLEE_SGIX_ãxtuª_mu…i_buf„r
)

	)

473 
	#GLEE_EXT_poöt_∑ømëîs
 
	`GLìE«bÀd
(&
_GLEE_EXT_poöt_∑ømëîs
)

	)

474 
	#GLEE_SGIS_poöt_∑ømëîs
 
	`GLìE«bÀd
(&
_GLEE_SGIS_poöt_∑ømëîs
)

	)

475 
	#GLEE_SGIX_ö°rumíts
 
	`GLìE«bÀd
(&
_GLEE_SGIX_ö°rumíts
)

	)

476 
	#GLEE_SGIX_ãxtuª_sˇÀ_büs
 
	`GLìE«bÀd
(&
_GLEE_SGIX_ãxtuª_sˇÀ_büs
)

	)

477 
	#GLEE_SGIX_‰amezoom
 
	`GLìE«bÀd
(&
_GLEE_SGIX_‰amezoom
)

	)

478 
	#GLEE_SGIX_èg_ßm∂e_buf„r
 
	`GLìE«bÀd
(&
_GLEE_SGIX_èg_ßm∂e_buf„r
)

	)

479 
	#GLEE_FfdMaskSGIX
 
	`GLìE«bÀd
(&
_GLEE_FfdMaskSGIX
)

	)

480 
	#GLEE_SGIX_pﬁynomül_ffd
 
	`GLìE«bÀd
(&
_GLEE_SGIX_pﬁynomül_ffd
)

	)

481 
	#GLEE_SGIX_ª„ªn˚_∂™e
 
	`GLìE«bÀd
(&
_GLEE_SGIX_ª„ªn˚_∂™e
)

	)

482 
	#GLEE_SGIX_Êush_ø°î
 
	`GLìE«bÀd
(&
_GLEE_SGIX_Êush_ø°î
)

	)

483 
	#GLEE_SGIX_dïth_ãxtuª
 
	`GLìE«bÀd
(&
_GLEE_SGIX_dïth_ãxtuª
)

	)

484 
	#GLEE_SGIS_fog_fun˘i⁄
 
	`GLìE«bÀd
(&
_GLEE_SGIS_fog_fun˘i⁄
)

	)

485 
	#GLEE_SGIX_fog_off£t
 
	`GLìE«bÀd
(&
_GLEE_SGIX_fog_off£t
)

	)

486 
	#GLEE_HP_image_å™sf‹m
 
	`GLìE«bÀd
(&
_GLEE_HP_image_å™sf‹m
)

	)

487 
	#GLEE_HP_c⁄vﬁuti⁄_b‹dî_modes
 
	`GLìE«bÀd
(&
_GLEE_HP_c⁄vﬁuti⁄_b‹dî_modes
)

	)

488 
	#GLEE_INGR_∑Àâe_buf„r
 
	`GLìE«bÀd
(&
_GLEE_INGR_∑Àâe_buf„r
)

	)

489 
	#GLEE_SGIX_ãxtuª_add_ív
 
	`GLìE«bÀd
(&
_GLEE_SGIX_ãxtuª_add_ív
)

	)

490 
	#GLEE_EXT_cﬁ‹_subèbÀ
 
	`GLìE«bÀd
(&
_GLEE_EXT_cﬁ‹_subèbÀ
)

	)

491 
	#GLEE_PGI_vîãx_höts
 
	`GLìE«bÀd
(&
_GLEE_PGI_vîãx_höts
)

	)

492 
	#GLEE_PGI_misc_höts
 
	`GLìE«bÀd
(&
_GLEE_PGI_misc_höts
)

	)

493 
	#GLEE_EXT_∑Àâed_ãxtuª
 
	`GLìE«bÀd
(&
_GLEE_EXT_∑Àâed_ãxtuª
)

	)

494 
	#GLEE_EXT_˛ù_vﬁume_höt
 
	`GLìE«bÀd
(&
_GLEE_EXT_˛ù_vﬁume_höt
)

	)

495 
	#GLEE_SGIX_li°_¥i‹ôy
 
	`GLìE«bÀd
(&
_GLEE_SGIX_li°_¥i‹ôy
)

	)

496 
	#GLEE_SGIX_ú_ö°rumít1
 
	`GLìE«bÀd
(&
_GLEE_SGIX_ú_ö°rumít1
)

	)

497 
	#GLEE_SGIX_ˇŒigøphic_‰agmít
 
	`GLìE«bÀd
(&
_GLEE_SGIX_ˇŒigøphic_‰agmít
)

	)

498 
	#GLEE_SGIX_ãxtuª_lod_büs
 
	`GLìE«bÀd
(&
_GLEE_SGIX_ãxtuª_lod_büs
)

	)

499 
	#GLEE_SGIX_shadow_ambõ¡
 
	`GLìE«bÀd
(&
_GLEE_SGIX_shadow_ambõ¡
)

	)

500 
	#GLEE_EXT_ödex_ãxtuª
 
	`GLìE«bÀd
(&
_GLEE_EXT_ödex_ãxtuª
)

	)

501 
	#GLEE_EXT_ödex_m©îül
 
	`GLìE«bÀd
(&
_GLEE_EXT_ödex_m©îül
)

	)

502 
	#GLEE_EXT_ödex_func
 
	`GLìE«bÀd
(&
_GLEE_EXT_ödex_func
)

	)

503 
	#GLEE_EXT_ödex_¨øy_f‹m©s
 
	`GLìE«bÀd
(&
_GLEE_EXT_ödex_¨øy_f‹m©s
)

	)

504 
	#GLEE_EXT_compûed_vîãx_¨øy
 
	`GLìE«bÀd
(&
_GLEE_EXT_compûed_vîãx_¨øy
)

	)

505 
	#GLEE_EXT_cuŒ_vîãx
 
	`GLìE«bÀd
(&
_GLEE_EXT_cuŒ_vîãx
)

	)

506 
	#GLEE_SGIX_y¸cb
 
	`GLìE«bÀd
(&
_GLEE_SGIX_y¸cb
)

	)

507 
	#GLEE_SGIX_‰agmít_lightög
 
	`GLìE«bÀd
(&
_GLEE_SGIX_‰agmít_lightög
)

	)

508 
	#GLEE_IBM_ø°îpos_˛ù
 
	`GLìE«bÀd
(&
_GLEE_IBM_ø°îpos_˛ù
)

	)

509 
	#GLEE_HP_ãxtuª_lightög
 
	`GLìE«bÀd
(&
_GLEE_HP_ãxtuª_lightög
)

	)

510 
	#GLEE_EXT_døw_ønge_ñemíts
 
	`GLìE«bÀd
(&
_GLEE_EXT_døw_ønge_ñemíts
)

	)

511 
	#GLEE_WIN_ph⁄g_shadög
 
	`GLìE«bÀd
(&
_GLEE_WIN_ph⁄g_shadög
)

	)

512 
	#GLEE_WIN_•ecuœr_fog
 
	`GLìE«bÀd
(&
_GLEE_WIN_•ecuœr_fog
)

	)

513 
	#GLEE_EXT_light_ãxtuª
 
	`GLìE«bÀd
(&
_GLEE_EXT_light_ãxtuª
)

	)

514 
	#GLEE_SGIX_bÀnd_Æpha_mömax
 
	`GLìE«bÀd
(&
_GLEE_SGIX_bÀnd_Æpha_mömax
)

	)

515 
	#GLEE_SGIX_im∑˘_pixñ_ãxtuª
 
	`GLìE«bÀd
(&
_GLEE_SGIX_im∑˘_pixñ_ãxtuª
)

	)

516 
	#GLEE_EXT_bgø
 
	`GLìE«bÀd
(&
_GLEE_EXT_bgø
)

	)

517 
	#GLEE_SGIX_async
 
	`GLìE«bÀd
(&
_GLEE_SGIX_async
)

	)

518 
	#GLEE_SGIX_async_pixñ
 
	`GLìE«bÀd
(&
_GLEE_SGIX_async_pixñ
)

	)

519 
	#GLEE_SGIX_async_hi°ogøm
 
	`GLìE«bÀd
(&
_GLEE_SGIX_async_hi°ogøm
)

	)

520 
	#GLEE_INTEL_ãxtuª_sciss‹
 
	`GLìE«bÀd
(&
_GLEE_INTEL_ãxtuª_sciss‹
)

	)

521 
	#GLEE_INTEL_∑øŒñ_¨øys
 
	`GLìE«bÀd
(&
_GLEE_INTEL_∑øŒñ_¨øys
)

	)

522 
	#GLEE_HP_oc˛usi⁄_ã°
 
	`GLìE«bÀd
(&
_GLEE_HP_oc˛usi⁄_ã°
)

	)

523 
	#GLEE_EXT_pixñ_å™sf‹m
 
	`GLìE«bÀd
(&
_GLEE_EXT_pixñ_å™sf‹m
)

	)

524 
	#GLEE_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ
 
	`GLìE«bÀd
(&
_GLEE_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ
)

	)

525 
	#GLEE_EXT_sh¨ed_ãxtuª_∑Àâe
 
	`GLìE«bÀd
(&
_GLEE_EXT_sh¨ed_ãxtuª_∑Àâe
)

	)

526 
	#GLEE_EXT_£∑øã_•ecuœr_cﬁ‹
 
	`GLìE«bÀd
(&
_GLEE_EXT_£∑øã_•ecuœr_cﬁ‹
)

	)

527 
	#GLEE_EXT_£c⁄d¨y_cﬁ‹
 
	`GLìE«bÀd
(&
_GLEE_EXT_£c⁄d¨y_cﬁ‹
)

	)

528 
	#GLEE_EXT_ãxtuª_≥πurb_n‹mÆ
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_≥πurb_n‹mÆ
)

	)

529 
	#GLEE_EXT_mu…i_døw_¨øys
 
	`GLìE«bÀd
(&
_GLEE_EXT_mu…i_døw_¨øys
)

	)

530 
	#GLEE_EXT_fog_co‹d
 
	`GLìE«bÀd
(&
_GLEE_EXT_fog_co‹d
)

	)

531 
	#GLEE_REND_s¸ìn_co‹dö©es
 
	`GLìE«bÀd
(&
_GLEE_REND_s¸ìn_co‹dö©es
)

	)

532 
	#GLEE_EXT_co‹dö©e_‰ame
 
	`GLìE«bÀd
(&
_GLEE_EXT_co‹dö©e_‰ame
)

	)

533 
	#GLEE_EXT_ãxtuª_ív_comböe
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_ív_comböe
)

	)

534 
	#GLEE_APPLE_•ecuœr_ve˘‹
 
	`GLìE«bÀd
(&
_GLEE_APPLE_•ecuœr_ve˘‹
)

	)

535 
	#GLEE_APPLE_å™sf‹m_höt
 
	`GLìE«bÀd
(&
_GLEE_APPLE_å™sf‹m_höt
)

	)

536 
	#GLEE_SGIX_fog_sˇÀ
 
	`GLìE«bÀd
(&
_GLEE_SGIX_fog_sˇÀ
)

	)

537 
	#GLEE_SUNX_c⁄°™t_d©a
 
	`GLìE«bÀd
(&
_GLEE_SUNX_c⁄°™t_d©a
)

	)

538 
	#GLEE_SUN_globÆ_Æpha
 
	`GLìE«bÀd
(&
_GLEE_SUN_globÆ_Æpha
)

	)

539 
	#GLEE_SUN_åüngÀ_li°
 
	`GLìE«bÀd
(&
_GLEE_SUN_åüngÀ_li°
)

	)

540 
	#GLEE_SUN_vîãx
 
	`GLìE«bÀd
(&
_GLEE_SUN_vîãx
)

	)

541 
	#GLEE_EXT_bÀnd_func_£∑øã
 
	`GLìE«bÀd
(&
_GLEE_EXT_bÀnd_func_£∑øã
)

	)

542 
	#GLEE_INGR_cﬁ‹_˛amp
 
	`GLìE«bÀd
(&
_GLEE_INGR_cﬁ‹_˛amp
)

	)

543 
	#GLEE_INGR_öãæa˚_ªad
 
	`GLìE«bÀd
(&
_GLEE_INGR_öãæa˚_ªad
)

	)

544 
	#GLEE_EXT_°ícû_wøp
 
	`GLìE«bÀd
(&
_GLEE_EXT_°ícû_wøp
)

	)

545 
	#GLEE_EXT_422_pixñs
 
	`GLìE«bÀd
(&
_GLEE_EXT_422_pixñs
)

	)

546 
	#GLEE_NV_ãxgí_ªÊe˘i⁄
 
	`GLìE«bÀd
(&
_GLEE_NV_ãxgí_ªÊe˘i⁄
)

	)

547 
	#GLEE_EXT_ãxtuª_cube_m≠
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_cube_m≠
)

	)

548 
	#GLEE_SUN_c⁄vﬁuti⁄_b‹dî_modes
 
	`GLìE«bÀd
(&
_GLEE_SUN_c⁄vﬁuti⁄_b‹dî_modes
)

	)

549 
	#GLEE_EXT_ãxtuª_ív_add
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_ív_add
)

	)

550 
	#GLEE_EXT_ãxtuª_lod_büs
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_lod_büs
)

	)

551 
	#GLEE_EXT_ãxtuª_fûãr_™isŸr›ic
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_fûãr_™isŸr›ic
)

	)

552 
	#GLEE_EXT_vîãx_weightög
 
	`GLìE«bÀd
(&
_GLEE_EXT_vîãx_weightög
)

	)

553 
	#GLEE_NV_light_max_exp⁄ít
 
	`GLìE«bÀd
(&
_GLEE_NV_light_max_exp⁄ít
)

	)

554 
	#GLEE_NV_vîãx_¨øy_ønge
 
	`GLìE«bÀd
(&
_GLEE_NV_vîãx_¨øy_ønge
)

	)

555 
	#GLEE_NV_ªgi°î_comböîs
 
	`GLìE«bÀd
(&
_GLEE_NV_ªgi°î_comböîs
)

	)

556 
	#GLEE_NV_fog_di°™˚
 
	`GLìE«bÀd
(&
_GLEE_NV_fog_di°™˚
)

	)

557 
	#GLEE_NV_ãxgí_emboss
 
	`GLìE«bÀd
(&
_GLEE_NV_ãxgí_emboss
)

	)

558 
	#GLEE_NV_bÀnd_squ¨e
 
	`GLìE«bÀd
(&
_GLEE_NV_bÀnd_squ¨e
)

	)

559 
	#GLEE_NV_ãxtuª_ív_comböe4
 
	`GLìE«bÀd
(&
_GLEE_NV_ãxtuª_ív_comböe4
)

	)

560 
	#GLEE_MESA_ªsize_buf„rs
 
	`GLìE«bÀd
(&
_GLEE_MESA_ªsize_buf„rs
)

	)

561 
	#GLEE_MESA_wödow_pos
 
	`GLìE«bÀd
(&
_GLEE_MESA_wödow_pos
)

	)

562 
	#GLEE_EXT_ãxtuª_com¥essi⁄_s3tc
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_com¥essi⁄_s3tc
)

	)

563 
	#GLEE_IBM_cuŒ_vîãx
 
	`GLìE«bÀd
(&
_GLEE_IBM_cuŒ_vîãx
)

	)

564 
	#GLEE_IBM_mu…imode_døw_¨øys
 
	`GLìE«bÀd
(&
_GLEE_IBM_mu…imode_døw_¨øys
)

	)

565 
	#GLEE_IBM_vîãx_¨øy_li°s
 
	`GLìE«bÀd
(&
_GLEE_IBM_vîãx_¨øy_li°s
)

	)

566 
	#GLEE_SGIX_subßm∂e
 
	`GLìE«bÀd
(&
_GLEE_SGIX_subßm∂e
)

	)

567 
	#GLEE_SGIX_y¸cb_subßm∂e
 
	`GLìE«bÀd
(&
_GLEE_SGIX_y¸cb_subßm∂e
)

	)

568 
	#GLEE_SGIX_y¸cba
 
	`GLìE«bÀd
(&
_GLEE_SGIX_y¸cba
)

	)

569 
	#GLEE_SGI_dïth_∑ss_ö°rumít
 
	`GLìE«bÀd
(&
_GLEE_SGI_dïth_∑ss_ö°rumít
)

	)

570 
	#GLEE_3DFX_ãxtuª_com¥essi⁄_FXT1
 
	`GLìE«bÀd
(&
_GLEE_3DFX_ãxtuª_com¥essi⁄_FXT1
)

	)

571 
	#GLEE_3DFX_mu…ißm∂e
 
	`GLìE«bÀd
(&
_GLEE_3DFX_mu…ißm∂e
)

	)

572 
	#GLEE_3DFX_tbuf„r
 
	`GLìE«bÀd
(&
_GLEE_3DFX_tbuf„r
)

	)

573 
	#GLEE_EXT_mu…ißm∂e
 
	`GLìE«bÀd
(&
_GLEE_EXT_mu…ißm∂e
)

	)

574 
	#GLEE_SGIX_vîãx_¥e˛ù
 
	`GLìE«bÀd
(&
_GLEE_SGIX_vîãx_¥e˛ù
)

	)

575 
	#GLEE_SGIX_c⁄vﬁuti⁄_accuøcy
 
	`GLìE«bÀd
(&
_GLEE_SGIX_c⁄vﬁuti⁄_accuøcy
)

	)

576 
	#GLEE_SGIX_ªßm∂e
 
	`GLìE«bÀd
(&
_GLEE_SGIX_ªßm∂e
)

	)

577 
	#GLEE_SGIS_poöt_löe_ãxgí
 
	`GLìE«bÀd
(&
_GLEE_SGIS_poöt_löe_ãxgí
)

	)

578 
	#GLEE_SGIS_ãxtuª_cﬁ‹_mask
 
	`GLìE«bÀd
(&
_GLEE_SGIS_ãxtuª_cﬁ‹_mask
)

	)

579 
	#GLEE_EXT_ãxtuª_ív_dŸ3
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_ív_dŸ3
)

	)

580 
	#GLEE_ATI_ãxtuª_múr‹_⁄˚
 
	`GLìE«bÀd
(&
_GLEE_ATI_ãxtuª_múr‹_⁄˚
)

	)

581 
	#GLEE_NV_„n˚
 
	`GLìE«bÀd
(&
_GLEE_NV_„n˚
)

	)

582 
	#GLEE_IBM_ãxtuª_múr‹ed_ª≥©
 
	`GLìE«bÀd
(&
_GLEE_IBM_ãxtuª_múr‹ed_ª≥©
)

	)

583 
	#GLEE_NV_evÆu©‹s
 
	`GLìE«bÀd
(&
_GLEE_NV_evÆu©‹s
)

	)

584 
	#GLEE_NV_∑cked_dïth_°ícû
 
	`GLìE«bÀd
(&
_GLEE_NV_∑cked_dïth_°ícû
)

	)

585 
	#GLEE_NV_ªgi°î_comböîs2
 
	`GLìE«bÀd
(&
_GLEE_NV_ªgi°î_comböîs2
)

	)

586 
	#GLEE_NV_ãxtuª_com¥essi⁄_vtc
 
	`GLìE«bÀd
(&
_GLEE_NV_ãxtuª_com¥essi⁄_vtc
)

	)

587 
	#GLEE_NV_ãxtuª_ª˘™gÀ
 
	`GLìE«bÀd
(&
_GLEE_NV_ãxtuª_ª˘™gÀ
)

	)

588 
	#GLEE_NV_ãxtuª_shadî
 
	`GLìE«bÀd
(&
_GLEE_NV_ãxtuª_shadî
)

	)

589 
	#GLEE_NV_ãxtuª_shadî2
 
	`GLìE«bÀd
(&
_GLEE_NV_ãxtuª_shadî2
)

	)

590 
	#GLEE_NV_vîãx_¨øy_ønge2
 
	`GLìE«bÀd
(&
_GLEE_NV_vîãx_¨øy_ønge2
)

	)

591 
	#GLEE_NV_vîãx_¥ogøm
 
	`GLìE«bÀd
(&
_GLEE_NV_vîãx_¥ogøm
)

	)

592 
	#GLEE_SGIX_ãxtuª_co‹dö©e_˛amp
 
	`GLìE«bÀd
(&
_GLEE_SGIX_ãxtuª_co‹dö©e_˛amp
)

	)

593 
	#GLEE_SGIX_sˇÀbüs_höt
 
	`GLìE«bÀd
(&
_GLEE_SGIX_sˇÀbüs_höt
)

	)

594 
	#GLEE_OML_öãæa˚
 
	`GLìE«bÀd
(&
_GLEE_OML_öãæa˚
)

	)

595 
	#GLEE_OML_subßm∂e
 
	`GLìE«bÀd
(&
_GLEE_OML_subßm∂e
)

	)

596 
	#GLEE_OML_ªßm∂e
 
	`GLìE«bÀd
(&
_GLEE_OML_ªßm∂e
)

	)

597 
	#GLEE_NV_c›y_dïth_to_cﬁ‹
 
	`GLìE«bÀd
(&
_GLEE_NV_c›y_dïth_to_cﬁ‹
)

	)

598 
	#GLEE_ATI_ívm≠_bumpm≠
 
	`GLìE«bÀd
(&
_GLEE_ATI_ívm≠_bumpm≠
)

	)

599 
	#GLEE_ATI_‰agmít_shadî
 
	`GLìE«bÀd
(&
_GLEE_ATI_‰agmít_shadî
)

	)

600 
	#GLEE_ATI_≤_åüngÀs
 
	`GLìE«bÀd
(&
_GLEE_ATI_≤_åüngÀs
)

	)

601 
	#GLEE_ATI_vîãx_¨øy_obje˘
 
	`GLìE«bÀd
(&
_GLEE_ATI_vîãx_¨øy_obje˘
)

	)

602 
	#GLEE_EXT_vîãx_shadî
 
	`GLìE«bÀd
(&
_GLEE_EXT_vîãx_shadî
)

	)

603 
	#GLEE_ATI_vîãx_°ªams
 
	`GLìE«bÀd
(&
_GLEE_ATI_vîãx_°ªams
)

	)

604 
	#GLEE_ATI_ñemít_¨øy
 
	`GLìE«bÀd
(&
_GLEE_ATI_ñemít_¨øy
)

	)

605 
	#GLEE_SUN_mesh_¨øy
 
	`GLìE«bÀd
(&
_GLEE_SUN_mesh_¨øy
)

	)

606 
	#GLEE_SUN_¶i˚_accum
 
	`GLìE«bÀd
(&
_GLEE_SUN_¶i˚_accum
)

	)

607 
	#GLEE_NV_mu…ißm∂e_fûãr_höt
 
	`GLìE«bÀd
(&
_GLEE_NV_mu…ißm∂e_fûãr_höt
)

	)

608 
	#GLEE_NV_dïth_˛amp
 
	`GLìE«bÀd
(&
_GLEE_NV_dïth_˛amp
)

	)

609 
	#GLEE_NV_oc˛usi⁄_quîy
 
	`GLìE«bÀd
(&
_GLEE_NV_oc˛usi⁄_quîy
)

	)

610 
	#GLEE_NV_poöt_•rôe
 
	`GLìE«bÀd
(&
_GLEE_NV_poöt_•rôe
)

	)

611 
	#GLEE_NV_ãxtuª_shadî3
 
	`GLìE«bÀd
(&
_GLEE_NV_ãxtuª_shadî3
)

	)

612 
	#GLEE_NV_vîãx_¥ogøm1_1
 
	`GLìE«bÀd
(&
_GLEE_NV_vîãx_¥ogøm1_1
)

	)

613 
	#GLEE_EXT_shadow_funcs
 
	`GLìE«bÀd
(&
_GLEE_EXT_shadow_funcs
)

	)

614 
	#GLEE_EXT_°ícû_two_side
 
	`GLìE«bÀd
(&
_GLEE_EXT_°ícû_two_side
)

	)

615 
	#GLEE_ATI_ãxt_‰agmít_shadî
 
	`GLìE«bÀd
(&
_GLEE_ATI_ãxt_‰agmít_shadî
)

	)

616 
	#GLEE_APPLE_˛õ¡_°‹age
 
	`GLìE«bÀd
(&
_GLEE_APPLE_˛õ¡_°‹age
)

	)

617 
	#GLEE_APPLE_ñemít_¨øy
 
	`GLìE«bÀd
(&
_GLEE_APPLE_ñemít_¨øy
)

	)

618 
	#GLEE_APPLE_„n˚
 
	`GLìE«bÀd
(&
_GLEE_APPLE_„n˚
)

	)

619 
	#GLEE_APPLE_vîãx_¨øy_obje˘
 
	`GLìE«bÀd
(&
_GLEE_APPLE_vîãx_¨øy_obje˘
)

	)

620 
	#GLEE_APPLE_vîãx_¨øy_ønge
 
	`GLìE«bÀd
(&
_GLEE_APPLE_vîãx_¨øy_ønge
)

	)

621 
	#GLEE_APPLE_ycb¸_422
 
	`GLìE«bÀd
(&
_GLEE_APPLE_ycb¸_422
)

	)

622 
	#GLEE_S3_s3tc
 
	`GLìE«bÀd
(&
_GLEE_S3_s3tc
)

	)

623 
	#GLEE_ATI_døw_buf„rs
 
	`GLìE«bÀd
(&
_GLEE_ATI_døw_buf„rs
)

	)

624 
	#GLEE_ATI_pixñ_f‹m©_Êﬂt
 
	`GLìE«bÀd
(&
_GLEE_ATI_pixñ_f‹m©_Êﬂt
)

	)

625 
	#GLEE_ATI_ãxtuª_ív_comböe3
 
	`GLìE«bÀd
(&
_GLEE_ATI_ãxtuª_ív_comböe3
)

	)

626 
	#GLEE_ATI_ãxtuª_Êﬂt
 
	`GLìE«bÀd
(&
_GLEE_ATI_ãxtuª_Êﬂt
)

	)

627 
	#GLEE_NV_Êﬂt_buf„r
 
	`GLìE«bÀd
(&
_GLEE_NV_Êﬂt_buf„r
)

	)

628 
	#GLEE_NV_‰agmít_¥ogøm
 
	`GLìE«bÀd
(&
_GLEE_NV_‰agmít_¥ogøm
)

	)

629 
	#GLEE_NV_hÆf_Êﬂt
 
	`GLìE«bÀd
(&
_GLEE_NV_hÆf_Êﬂt
)

	)

630 
	#GLEE_NV_pixñ_d©a_ønge
 
	`GLìE«bÀd
(&
_GLEE_NV_pixñ_d©a_ønge
)

	)

631 
	#GLEE_NV_¥imôive_ª°¨t
 
	`GLìE«bÀd
(&
_GLEE_NV_¥imôive_ª°¨t
)

	)

632 
	#GLEE_NV_ãxtuª_ex∑nd_n‹mÆ
 
	`GLìE«bÀd
(&
_GLEE_NV_ãxtuª_ex∑nd_n‹mÆ
)

	)

633 
	#GLEE_NV_vîãx_¥ogøm2
 
	`GLìE«bÀd
(&
_GLEE_NV_vîãx_¥ogøm2
)

	)

634 
	#GLEE_ATI_m≠_obje˘_buf„r
 
	`GLìE«bÀd
(&
_GLEE_ATI_m≠_obje˘_buf„r
)

	)

635 
	#GLEE_ATI_£∑øã_°ícû
 
	`GLìE«bÀd
(&
_GLEE_ATI_£∑øã_°ícû
)

	)

636 
	#GLEE_ATI_vîãx_©åib_¨øy_obje˘
 
	`GLìE«bÀd
(&
_GLEE_ATI_vîãx_©åib_¨øy_obje˘
)

	)

637 
	#GLEE_OES_ªad_f‹m©
 
	`GLìE«bÀd
(&
_GLEE_OES_ªad_f‹m©
)

	)

638 
	#GLEE_EXT_dïth_bounds_ã°
 
	`GLìE«bÀd
(&
_GLEE_EXT_dïth_bounds_ã°
)

	)

639 
	#GLEE_EXT_ãxtuª_múr‹_˛amp
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_múr‹_˛amp
)

	)

640 
	#GLEE_EXT_bÀnd_equ©i⁄_£∑øã
 
	`GLìE«bÀd
(&
_GLEE_EXT_bÀnd_equ©i⁄_£∑øã
)

	)

641 
	#GLEE_MESA_∑ck_övît
 
	`GLìE«bÀd
(&
_GLEE_MESA_∑ck_övît
)

	)

642 
	#GLEE_MESA_ycb¸_ãxtuª
 
	`GLìE«bÀd
(&
_GLEE_MESA_ycb¸_ãxtuª
)

	)

643 
	#GLEE_EXT_pixñ_buf„r_obje˘
 
	`GLìE«bÀd
(&
_GLEE_EXT_pixñ_buf„r_obje˘
)

	)

644 
	#GLEE_NV_‰agmít_¥ogøm_›ti⁄
 
	`GLìE«bÀd
(&
_GLEE_NV_‰agmít_¥ogøm_›ti⁄
)

	)

645 
	#GLEE_NV_‰agmít_¥ogøm2
 
	`GLìE«bÀd
(&
_GLEE_NV_‰agmít_¥ogøm2
)

	)

646 
	#GLEE_NV_vîãx_¥ogøm2_›ti⁄
 
	`GLìE«bÀd
(&
_GLEE_NV_vîãx_¥ogøm2_›ti⁄
)

	)

647 
	#GLEE_NV_vîãx_¥ogøm3
 
	`GLìE«bÀd
(&
_GLEE_NV_vîãx_¥ogøm3
)

	)

648 
	#GLEE_EXT_‰amebuf„r_obje˘
 
	`GLìE«bÀd
(&
_GLEE_EXT_‰amebuf„r_obje˘
)

	)

649 
	#GLEE_GREMEDY_°rög_m¨kî
 
	`GLìE«bÀd
(&
_GLEE_GREMEDY_°rög_m¨kî
)

	)

650 
	#GLEE_EXT_Cg_shadî
 
	`GLìE«bÀd
(&
_GLEE_EXT_Cg_shadî
)

	)

651 
	#GLEE_EXT_timî_quîy
 
	`GLìE«bÀd
(&
_GLEE_EXT_timî_quîy
)

	)

652 
	#GLEE_EXT_ãxtuª_buf„r_obje˘
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_buf„r_obje˘
)

	)

653 
	#GLEE_EXT_gpu_shadî4
 
	`GLìE«bÀd
(&
_GLEE_EXT_gpu_shadî4
)

	)

654 
	#GLEE_EXT_geomëry_shadî4
 
	`GLìE«bÀd
(&
_GLEE_EXT_geomëry_shadî4
)

	)

655 
	#GLEE_EXT_bödabÀ_unif‹m
 
	`GLìE«bÀd
(&
_GLEE_EXT_bödabÀ_unif‹m
)

	)

656 
	#GLEE_EXT_‰amebuf„r_sRGB
 
	`GLìE«bÀd
(&
_GLEE_EXT_‰amebuf„r_sRGB
)

	)

657 
	#GLEE_EXT_ãxtuª_sh¨ed_exp⁄ít
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_sh¨ed_exp⁄ít
)

	)

658 
	#GLEE_EXT_∑cked_Êﬂt
 
	`GLìE«bÀd
(&
_GLEE_EXT_∑cked_Êﬂt
)

	)

659 
	#GLEE_EXT_ãxtuª_¨øy
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_¨øy
)

	)

660 
	#GLEE_EXT_ãxtuª_öãgî
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_öãgî
)

	)

661 
	#GLEE_NV_dïth_buf„r_Êﬂt
 
	`GLìE«bÀd
(&
_GLEE_NV_dïth_buf„r_Êﬂt
)

	)

662 
	#GLEE_EXT_ãxtuª_com¥essi⁄_œtc
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_com¥essi⁄_œtc
)

	)

663 
	#GLEE_NV_å™sf‹m_„edback
 
	`GLìE«bÀd
(&
_GLEE_NV_å™sf‹m_„edback
)

	)

664 
	#GLEE_NV_geomëry_¥ogøm4
 
	`GLìE«bÀd
(&
_GLEE_NV_geomëry_¥ogøm4
)

	)

665 
	#GLEE_NV_gpu_¥ogøm4
 
	`GLìE«bÀd
(&
_GLEE_NV_gpu_¥ogøm4
)

	)

666 
	#GLEE_NV_‰amebuf„r_mu…ißm∂e_covîage
 
	`GLìE«bÀd
(&
_GLEE_NV_‰amebuf„r_mu…ißm∂e_covîage
)

	)

667 
	#GLEE_EXT_‰amebuf„r_mu…ißm∂e
 
	`GLìE«bÀd
(&
_GLEE_EXT_‰amebuf„r_mu…ißm∂e
)

	)

668 
	#GLEE_EXT_‰amebuf„r_blô
 
	`GLìE«bÀd
(&
_GLEE_EXT_‰amebuf„r_blô
)

	)

669 
	#GLEE_EXT_ãxtuª_com¥essi⁄_rgtc
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_com¥essi⁄_rgtc
)

	)

670 
	#GLEE_EXT_cﬁ‹_m©rix
 
	`GLìE«bÀd
(&
_GLEE_EXT_cﬁ‹_m©rix
)

	)

671 
	#GLEE_SGIX_ãxtuª_£À˘
 
	`GLìE«bÀd
(&
_GLEE_SGIX_ãxtuª_£À˘
)

	)

672 
	#GLEE_INGR_bÀnd_func_£∑øã
 
	`GLìE«bÀd
(&
_GLEE_INGR_bÀnd_func_£∑øã
)

	)

673 
	#GLEE_SGIX_dïth_∑ss_ö°rumít
 
	`GLìE«bÀd
(&
_GLEE_SGIX_dïth_∑ss_ö°rumít
)

	)

674 
	#GLEE_SGIX_igloo_öãrÁ˚
 
	`GLìE«bÀd
(&
_GLEE_SGIX_igloo_öãrÁ˚
)

	)

675 
	#GLEE_EXT_døw_buf„rs2
 
	`GLìE«bÀd
(&
_GLEE_EXT_døw_buf„rs2
)

	)

676 
	#GLEE_NV_∑ømëî_buf„r_obje˘
 
	`GLìE«bÀd
(&
_GLEE_NV_∑ømëî_buf„r_obje˘
)

	)

677 
	#GLEE_EXT_døw_ö°™˚d
 
	`GLìE«bÀd
(&
_GLEE_EXT_døw_ö°™˚d
)

	)

678 
	#GLEE_EXT_‰agmít_lightög
 
	`GLìE«bÀd
(&
_GLEE_EXT_‰agmít_lightög
)

	)

679 
	#GLEE_EXT_∑cked_dïth_°ícû
 
	`GLìE«bÀd
(&
_GLEE_EXT_∑cked_dïth_°ícû
)

	)

680 
	#GLEE_EXT_s˚√_m¨kî
 
	`GLìE«bÀd
(&
_GLEE_EXT_s˚√_m¨kî
)

	)

681 
	#GLEE_EXT_°ícû_˛ór_èg
 
	`GLìE«bÀd
(&
_GLEE_EXT_°ícû_˛ór_èg
)

	)

682 
	#GLEE_EXT_ãxtuª_com¥essi⁄_dxt1
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_com¥essi⁄_dxt1
)

	)

683 
	#GLEE_EXT_ãxtuª_ív
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_ív
)

	)

684 
	#GLEE_EXT_ãxtuª_sRGB
 
	`GLìE«bÀd
(&
_GLEE_EXT_ãxtuª_sRGB
)

	)

685 
	#GLEE_IBM_°©ic_d©a
 
	`GLìE«bÀd
(&
_GLEE_IBM_°©ic_d©a
)

	)

686 
	#GLEE_MESAX_ãxtuª_°ack
 
	`GLìE«bÀd
(&
_GLEE_MESAX_ãxtuª_°ack
)

	)

687 
	#GLEE_OES_byã_co‹dö©es
 
	`GLìE«bÀd
(&
_GLEE_OES_byã_co‹dö©es
)

	)

688 
	#GLEE_OES_com¥es£d_∑Àâed_ãxtuª
 
	`GLìE«bÀd
(&
_GLEE_OES_com¥es£d_∑Àâed_ãxtuª
)

	)

689 
	#GLEE_OES_sögÀ_¥ecisi⁄
 
	`GLìE«bÀd
(&
_GLEE_OES_sögÀ_¥ecisi⁄
)

	)

690 
	#GLEE_SGIX_pixñ_ãxtuª_bôs
 
	`GLìE«bÀd
(&
_GLEE_SGIX_pixñ_ãxtuª_bôs
)

	)

691 
	#GLEE_SGIX_ãxtuª_ønge
 
	`GLìE«bÀd
(&
_GLEE_SGIX_ãxtuª_ønge
)

	)

699 #i‚de‡
GL_VERSION_2_0


700 
	tGLch¨
;

703 
	~<°ddef.h
>

705 #i‚de‡
GL_VERSION_1_5


706 
±rdiff_t
 
	tGLöçå
;

707 
±rdiff_t
 
	tGLsizeùå
;

710 #i‚de‡
GL_NV_hÆf_Êﬂt


711 
	tGLhÆfNV
;

714 #i‚de‡
GL_ARB_vîãx_buf„r_obje˘


715 
±rdiff_t
 
	tGLöçåARB
;

716 
±rdiff_t
 
	tGLsizeùåARB
;

719 #i‚de‡
GL_ARB_shadî_obje˘s


720 
	tGLh™dÀARB
;

721 
	tGLch¨ARB
;

724 #i‚de‡
GL_EXT_timî_quîy


725 sig√d 
	tGLöt64EXT
;

726 
	tGLuöt64EXT
;

731 #ifde‡
WIN32


735 #i‚de‡
WGL_ARB_pbuf„r


736 
DECLARE_HANDLE
(
HPBUFFERARB
);

738 #i‚de‡
WGL_EXT_pbuf„r


739 
DECLARE_HANDLE
(
HPBUFFEREXT
);

742 #ñi‡
deföed
(
__APPLE__
Ë|| deföed(
__APPLE_CC__
)

750 (*
__GLXextFuncPå
)();

752 #i‚de‡
GLX_ARB_gë_¥oc_addªss


753 
	#GLX_ARB_gë_¥oc_addªss
 1

	)

754 
__GLXextFuncPå
 
glXGëProcAddªssARB
 (c⁄° 
GLubyã
 *);

755 –* 
glXGëProcAddªssARB
 (c⁄° 
GLubyã
 *
¥ocName
))();

756 
__GLXextFuncPå
 ( * 
	tPFNGLXGETPROCADDRESSARBPROC
Ë(c⁄° 
	tGLubyã
 *
	t¥ocName
);

759 #i‚de‡
GLX_SGIX_fbc⁄fig


760 
XID
 
	tGLXFBC⁄figIDSGIX
;

761 
__GLXFBC⁄figRec
 *
	tGLXFBC⁄figSGIX
;

764 #i‚de‡
GLX_SGIX_pbuf„r


765 
XID
 
	tGLXPbuf„rSGIX
;

767 
	gty≥
;

768 
	g£rül
;

769 
Boﬁ
 
	g£nd_evít
;

770 
Di•œy
 *
	gdi•œy
;

771 
GLXDøwabÀ
 
	gdøwabÀ
;

772 
	gevít_ty≥
;

773 
	gdøw_ty≥
;

774 
	gmask
;

775 
	gx
, 
	gy
;

776 
	gwidth
, 
	gheight
;

777 
	gcou¡
;

778 } 
	tGLXBuf„rClobbîEvítSGIX
;

781 #i‚de‡
GLX_SGIX_hy≥Ωùe


782 
	#_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
 80

	)

785 
	gpùeName
[
_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
];

786 
	g√tw‹kId
;

787 } 
	tGLXHy≥ΩùeNëw‹kSGIX
;

791 
	gpùeName
[
_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
];

792 
	gch™√l
;

793 
	g∑πicù©i⁄Ty≥
;

794 
	gtimeSli˚
;

795 } 
	tGLXHy≥ΩùeC⁄figSGIX
;

799 
	gpùeName
[
_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
];

800 
	g§cXOrigö
;

801 
	g§cYOrigö
;

802 
	g§cWidth
;

803 
	g§cHeight
;

804 
	gde°XOrigö
;

805 
	gde°YOrigö
;

806 
	gde°Width
;

807 
	gde°Height
;

808 } 
	tGLXPùeRe˘
;

812 
	gpùeName
[
_GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
];

813 
	gXOrigö
;

814 
	gYOrigö
;

815 
	gmaxHeight
;

816 
	gmaxWidth
;

817 } 
	tGLXPùeRe˘Limôs
;

825 #i‚de‡
GL_VERSION_1_2


826 
	#GL_VERSION_1_2
 1

	)

827 
	#__GLEE_GL_VERSION_1_2
 1

	)

829 
	#GL_UNSIGNED_BYTE_3_3_2
 0x8032

	)

830 
	#GL_UNSIGNED_SHORT_4_4_4_4
 0x8033

	)

831 
	#GL_UNSIGNED_SHORT_5_5_5_1
 0x8034

	)

832 
	#GL_UNSIGNED_INT_8_8_8_8
 0x8035

	)

833 
	#GL_UNSIGNED_INT_10_10_10_2
 0x8036

	)

834 
	#GL_RESCALE_NORMAL
 0x803A

	)

835 
	#GL_TEXTURE_BINDING_3D
 0x806A

	)

836 
	#GL_PACK_SKIP_IMAGES
 0x806B

	)

837 
	#GL_PACK_IMAGE_HEIGHT
 0x806C

	)

838 
	#GL_UNPACK_SKIP_IMAGES
 0x806D

	)

839 
	#GL_UNPACK_IMAGE_HEIGHT
 0x806E

	)

840 
	#GL_TEXTURE_3D
 0x806F

	)

841 
	#GL_PROXY_TEXTURE_3D
 0x8070

	)

842 
	#GL_TEXTURE_DEPTH
 0x8071

	)

843 
	#GL_TEXTURE_WRAP_R
 0x8072

	)

844 
	#GL_MAX_3D_TEXTURE_SIZE
 0x8073

	)

845 
	#GL_UNSIGNED_BYTE_2_3_3_REV
 0x8362

	)

846 
	#GL_UNSIGNED_SHORT_5_6_5
 0x8363

	)

847 
	#GL_UNSIGNED_SHORT_5_6_5_REV
 0x8364

	)

848 
	#GL_UNSIGNED_SHORT_4_4_4_4_REV
 0x8365

	)

849 
	#GL_UNSIGNED_SHORT_1_5_5_5_REV
 0x8366

	)

850 
	#GL_UNSIGNED_INT_8_8_8_8_REV
 0x8367

	)

851 
	#GL_UNSIGNED_INT_2_10_10_10_REV
 0x8368

	)

852 
	#GL_BGR
 0x80E0

	)

853 
	#GL_BGRA
 0x80E1

	)

854 
	#GL_MAX_ELEMENTS_VERTICES
 0x80E8

	)

855 
	#GL_MAX_ELEMENTS_INDICES
 0x80E9

	)

856 
	#GL_CLAMP_TO_EDGE
 0x812F

	)

857 
	#GL_TEXTURE_MIN_LOD
 0x813A

	)

858 
	#GL_TEXTURE_MAX_LOD
 0x813B

	)

859 
	#GL_TEXTURE_BASE_LEVEL
 0x813C

	)

860 
	#GL_TEXTURE_MAX_LEVEL
 0x813D

	)

861 
	#GL_LIGHT_MODEL_COLOR_CONTROL
 0x81F8

	)

862 
	#GL_SINGLE_COLOR
 0x81F9

	)

863 
	#GL_SEPARATE_SPECULAR_COLOR
 0x81FA

	)

864 
	#GL_SMOOTH_POINT_SIZE_RANGE
 0x0B12

	)

865 
	#GL_SMOOTH_POINT_SIZE_GRANULARITY
 0x0B13

	)

866 
	#GL_SMOOTH_LINE_WIDTH_RANGE
 0x0B22

	)

867 
	#GL_SMOOTH_LINE_WIDTH_GRANULARITY
 0x0B23

	)

868 
	#GL_ALIASED_POINT_SIZE_RANGE
 0x846D

	)

869 
	#GL_ALIASED_LINE_WIDTH_RANGE
 0x846E

	)

870 (
APIENTRYP
 
	tPFNGLBLENDCOLORPROC
Ë(
	tGL˛ampf
 
	tªd
, GL˛amp‡
	tgªí
, GL˛amp‡
	tblue
, GL˛amp‡
	tÆpha
);

871 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONPROC
Ë(
	tGLíum
 
	tmode
);

872 (
APIENTRYP
 
	tPFNGLDRAWRANGEELEMENTSPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	tödi˚s
);

873 (
APIENTRYP
 
	tPFNGLCOLORTABLEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	tèbÀ
);

874 (
APIENTRYP
 
	tPFNGLCOLORTABLEPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

875 (
APIENTRYP
 
	tPFNGLCOLORTABLEPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

876 (
APIENTRYP
 
	tPFNGLCOPYCOLORTABLEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

877 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 * 
	tèbÀ
);

878 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

879 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

880 (
APIENTRYP
 
	tPFNGLCOLORSUBTABLEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	t°¨t
, GLsizeò
	tcou¡
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	td©a
);

881 (
APIENTRYP
 
	tPFNGLCOPYCOLORSUBTABLEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	t°¨t
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLsizeò
	twidth
);

882 (
APIENTRYP
 
	tPFNGLCONVOLUTIONFILTER1DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	timage
);

883 (
APIENTRYP
 
	tPFNGLCONVOLUTIONFILTER2DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	timage
);

884 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERFPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øms
);

885 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

886 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øms
);

887 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

888 (
APIENTRYP
 
	tPFNGLCOPYCONVOLUTIONFILTER1DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

889 (
APIENTRYP
 
	tPFNGLCOPYCONVOLUTIONFILTER2DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

890 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONFILTERPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 * 
	timage
);

891 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

892 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

893 (
APIENTRYP
 
	tPFNGLGETSEPARABLEFILTERPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 * 
	trow
, GLvoid * 
	tcﬁumn
, GLvoid * 
	t•™
);

894 (
APIENTRYP
 
	tPFNGLSEPARABLEFILTER2DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	trow
, c⁄° GLvoid * 
	tcﬁumn
);

895 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLboﬁón
 
	tª£t
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 * 
	tvÆues
);

896 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

897 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

898 (
APIENTRYP
 
	tPFNGLGETMINMAXPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLboﬁón
 
	tª£t
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 * 
	tvÆues
);

899 (
APIENTRYP
 
	tPFNGLGETMINMAXPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

900 (
APIENTRYP
 
	tPFNGLGETMINMAXPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

901 (
APIENTRYP
 
	tPFNGLHISTOGRAMPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	twidth
, GLíum 
	töã∫Æf‹m©
, 
	tGLboﬁón
 
	tsök
);

902 (
APIENTRYP
 
	tPFNGLMINMAXPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLboﬁón
 
	tsök
);

903 (
APIENTRYP
 
	tPFNGLRESETHISTOGRAMPROC
Ë(
	tGLíum
 
	tèrgë
);

904 (
APIENTRYP
 
	tPFNGLRESETMINMAXPROC
Ë(
	tGLíum
 
	tèrgë
);

905 (
APIENTRYP
 
	tPFNGLTEXIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	tpixñs
);

906 (
APIENTRYP
 
	tPFNGLTEXSUBIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	tpixñs
);

907 (
APIENTRYP
 
	tPFNGLCOPYTEXSUBIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

908 
GLEE_EXTERN
 
PFNGLBLENDCOLORPROC
 
	gpglBÀndCﬁ‹
;

909 
GLEE_EXTERN
 
PFNGLBLENDEQUATIONPROC
 
	gpglBÀndEqu©i⁄
;

910 
GLEE_EXTERN
 
PFNGLDRAWRANGEELEMENTSPROC
 
	gpglDøwR™geEÀmíts
;

911 
GLEE_EXTERN
 
PFNGLCOLORTABLEPROC
 
	gpglCﬁ‹TabÀ
;

912 
GLEE_EXTERN
 
PFNGLCOLORTABLEPARAMETERFVPROC
 
	gpglCﬁ‹TabÀP¨amëîfv
;

913 
GLEE_EXTERN
 
PFNGLCOLORTABLEPARAMETERIVPROC
 
	gpglCﬁ‹TabÀP¨amëîiv
;

914 
GLEE_EXTERN
 
PFNGLCOPYCOLORTABLEPROC
 
	gpglC›yCﬁ‹TabÀ
;

915 
GLEE_EXTERN
 
PFNGLGETCOLORTABLEPROC
 
	gpglGëCﬁ‹TabÀ
;

916 
GLEE_EXTERN
 
PFNGLGETCOLORTABLEPARAMETERFVPROC
 
	gpglGëCﬁ‹TabÀP¨amëîfv
;

917 
GLEE_EXTERN
 
PFNGLGETCOLORTABLEPARAMETERIVPROC
 
	gpglGëCﬁ‹TabÀP¨amëîiv
;

918 
GLEE_EXTERN
 
PFNGLCOLORSUBTABLEPROC
 
	gpglCﬁ‹SubTabÀ
;

919 
GLEE_EXTERN
 
PFNGLCOPYCOLORSUBTABLEPROC
 
	gpglC›yCﬁ‹SubTabÀ
;

920 
GLEE_EXTERN
 
PFNGLCONVOLUTIONFILTER1DPROC
 
	gpglC⁄vﬁuti⁄Fûãr1D
;

921 
GLEE_EXTERN
 
PFNGLCONVOLUTIONFILTER2DPROC
 
	gpglC⁄vﬁuti⁄Fûãr2D
;

922 
GLEE_EXTERN
 
PFNGLCONVOLUTIONPARAMETERFPROC
 
	gpglC⁄vﬁuti⁄P¨amëîf
;

923 
GLEE_EXTERN
 
PFNGLCONVOLUTIONPARAMETERFVPROC
 
	gpglC⁄vﬁuti⁄P¨amëîfv
;

924 
GLEE_EXTERN
 
PFNGLCONVOLUTIONPARAMETERIPROC
 
	gpglC⁄vﬁuti⁄P¨amëîi
;

925 
GLEE_EXTERN
 
PFNGLCONVOLUTIONPARAMETERIVPROC
 
	gpglC⁄vﬁuti⁄P¨amëîiv
;

926 
GLEE_EXTERN
 
PFNGLCOPYCONVOLUTIONFILTER1DPROC
 
	gpglC›yC⁄vﬁuti⁄Fûãr1D
;

927 
GLEE_EXTERN
 
PFNGLCOPYCONVOLUTIONFILTER2DPROC
 
	gpglC›yC⁄vﬁuti⁄Fûãr2D
;

928 
GLEE_EXTERN
 
PFNGLGETCONVOLUTIONFILTERPROC
 
	gpglGëC⁄vﬁuti⁄Fûãr
;

929 
GLEE_EXTERN
 
PFNGLGETCONVOLUTIONPARAMETERFVPROC
 
	gpglGëC⁄vﬁuti⁄P¨amëîfv
;

930 
GLEE_EXTERN
 
PFNGLGETCONVOLUTIONPARAMETERIVPROC
 
	gpglGëC⁄vﬁuti⁄P¨amëîiv
;

931 
GLEE_EXTERN
 
PFNGLGETSEPARABLEFILTERPROC
 
	gpglGëSï¨abÀFûãr
;

932 
GLEE_EXTERN
 
PFNGLSEPARABLEFILTER2DPROC
 
	gpglSï¨abÀFûãr2D
;

933 
GLEE_EXTERN
 
PFNGLGETHISTOGRAMPROC
 
	gpglGëHi°ogøm
;

934 
GLEE_EXTERN
 
PFNGLGETHISTOGRAMPARAMETERFVPROC
 
	gpglGëHi°ogømP¨amëîfv
;

935 
GLEE_EXTERN
 
PFNGLGETHISTOGRAMPARAMETERIVPROC
 
	gpglGëHi°ogømP¨amëîiv
;

936 
GLEE_EXTERN
 
PFNGLGETMINMAXPROC
 
	gpglGëMömax
;

937 
GLEE_EXTERN
 
PFNGLGETMINMAXPARAMETERFVPROC
 
	gpglGëMömaxP¨amëîfv
;

938 
GLEE_EXTERN
 
PFNGLGETMINMAXPARAMETERIVPROC
 
	gpglGëMömaxP¨amëîiv
;

939 
GLEE_EXTERN
 
PFNGLHISTOGRAMPROC
 
	gpglHi°ogøm
;

940 
GLEE_EXTERN
 
PFNGLMINMAXPROC
 
	gpglMömax
;

941 
GLEE_EXTERN
 
PFNGLRESETHISTOGRAMPROC
 
	gpglRe£tHi°ogøm
;

942 
GLEE_EXTERN
 
PFNGLRESETMINMAXPROC
 
	gpglRe£tMömax
;

943 
GLEE_EXTERN
 
PFNGLTEXIMAGE3DPROC
 
	gpglTexImage3D
;

944 
GLEE_EXTERN
 
PFNGLTEXSUBIMAGE3DPROC
 
	gpglTexSubImage3D
;

945 
GLEE_EXTERN
 
PFNGLCOPYTEXSUBIMAGE3DPROC
 
	gpglC›yTexSubImage3D
;

946 
	#glBÀndCﬁ‹
 
pglBÀndCﬁ‹


	)

947 
	#glBÀndEqu©i⁄
 
pglBÀndEqu©i⁄


	)

948 
	#glDøwR™geEÀmíts
 
pglDøwR™geEÀmíts


	)

949 
	#glCﬁ‹TabÀ
 
pglCﬁ‹TabÀ


	)

950 
	#glCﬁ‹TabÀP¨amëîfv
 
pglCﬁ‹TabÀP¨amëîfv


	)

951 
	#glCﬁ‹TabÀP¨amëîiv
 
pglCﬁ‹TabÀP¨amëîiv


	)

952 
	#glC›yCﬁ‹TabÀ
 
pglC›yCﬁ‹TabÀ


	)

953 
	#glGëCﬁ‹TabÀ
 
pglGëCﬁ‹TabÀ


	)

954 
	#glGëCﬁ‹TabÀP¨amëîfv
 
pglGëCﬁ‹TabÀP¨amëîfv


	)

955 
	#glGëCﬁ‹TabÀP¨amëîiv
 
pglGëCﬁ‹TabÀP¨amëîiv


	)

956 
	#glCﬁ‹SubTabÀ
 
pglCﬁ‹SubTabÀ


	)

957 
	#glC›yCﬁ‹SubTabÀ
 
pglC›yCﬁ‹SubTabÀ


	)

958 
	#glC⁄vﬁuti⁄Fûãr1D
 
pglC⁄vﬁuti⁄Fûãr1D


	)

959 
	#glC⁄vﬁuti⁄Fûãr2D
 
pglC⁄vﬁuti⁄Fûãr2D


	)

960 
	#glC⁄vﬁuti⁄P¨amëîf
 
pglC⁄vﬁuti⁄P¨amëîf


	)

961 
	#glC⁄vﬁuti⁄P¨amëîfv
 
pglC⁄vﬁuti⁄P¨amëîfv


	)

962 
	#glC⁄vﬁuti⁄P¨amëîi
 
pglC⁄vﬁuti⁄P¨amëîi


	)

963 
	#glC⁄vﬁuti⁄P¨amëîiv
 
pglC⁄vﬁuti⁄P¨amëîiv


	)

964 
	#glC›yC⁄vﬁuti⁄Fûãr1D
 
pglC›yC⁄vﬁuti⁄Fûãr1D


	)

965 
	#glC›yC⁄vﬁuti⁄Fûãr2D
 
pglC›yC⁄vﬁuti⁄Fûãr2D


	)

966 
	#glGëC⁄vﬁuti⁄Fûãr
 
pglGëC⁄vﬁuti⁄Fûãr


	)

967 
	#glGëC⁄vﬁuti⁄P¨amëîfv
 
pglGëC⁄vﬁuti⁄P¨amëîfv


	)

968 
	#glGëC⁄vﬁuti⁄P¨amëîiv
 
pglGëC⁄vﬁuti⁄P¨amëîiv


	)

969 
	#glGëSï¨abÀFûãr
 
pglGëSï¨abÀFûãr


	)

970 
	#glSï¨abÀFûãr2D
 
pglSï¨abÀFûãr2D


	)

971 
	#glGëHi°ogøm
 
pglGëHi°ogøm


	)

972 
	#glGëHi°ogømP¨amëîfv
 
pglGëHi°ogømP¨amëîfv


	)

973 
	#glGëHi°ogømP¨amëîiv
 
pglGëHi°ogømP¨amëîiv


	)

974 
	#glGëMömax
 
pglGëMömax


	)

975 
	#glGëMömaxP¨amëîfv
 
pglGëMömaxP¨amëîfv


	)

976 
	#glGëMömaxP¨amëîiv
 
pglGëMömaxP¨amëîiv


	)

977 
	#glHi°ogøm
 
pglHi°ogøm


	)

978 
	#glMömax
 
pglMömax


	)

979 
	#glRe£tHi°ogøm
 
pglRe£tHi°ogøm


	)

980 
	#glRe£tMömax
 
pglRe£tMömax


	)

981 
	#glTexImage3D
 
pglTexImage3D


	)

982 
	#glTexSubImage3D
 
pglTexSubImage3D


	)

983 
	#glC›yTexSubImage3D
 
pglC›yTexSubImage3D


	)

988 #i‚de‡
GL_ARB_imagög


989 
	#GL_ARB_imagög
 1

	)

990 
	#__GLEE_GL_ARB_imagög
 1

	)

992 
	#GL_CONSTANT_COLOR
 0x8001

	)

993 
	#GL_ONE_MINUS_CONSTANT_COLOR
 0x8002

	)

994 
	#GL_CONSTANT_ALPHA
 0x8003

	)

995 
	#GL_ONE_MINUS_CONSTANT_ALPHA
 0x8004

	)

996 
	#GL_BLEND_COLOR
 0x8005

	)

997 
	#GL_FUNC_ADD
 0x8006

	)

998 
	#GL_MIN
 0x8007

	)

999 
	#GL_MAX
 0x8008

	)

1000 
	#GL_BLEND_EQUATION
 0x8009

	)

1001 
	#GL_FUNC_SUBTRACT
 0x800A

	)

1002 
	#GL_FUNC_REVERSE_SUBTRACT
 0x800B

	)

1003 
	#GL_CONVOLUTION_1D
 0x8010

	)

1004 
	#GL_CONVOLUTION_2D
 0x8011

	)

1005 
	#GL_SEPARABLE_2D
 0x8012

	)

1006 
	#GL_CONVOLUTION_BORDER_MODE
 0x8013

	)

1007 
	#GL_CONVOLUTION_FILTER_SCALE
 0x8014

	)

1008 
	#GL_CONVOLUTION_FILTER_BIAS
 0x8015

	)

1009 
	#GL_REDUCE
 0x8016

	)

1010 
	#GL_CONVOLUTION_FORMAT
 0x8017

	)

1011 
	#GL_CONVOLUTION_WIDTH
 0x8018

	)

1012 
	#GL_CONVOLUTION_HEIGHT
 0x8019

	)

1013 
	#GL_MAX_CONVOLUTION_WIDTH
 0x801A

	)

1014 
	#GL_MAX_CONVOLUTION_HEIGHT
 0x801B

	)

1015 
	#GL_POST_CONVOLUTION_RED_SCALE
 0x801C

	)

1016 
	#GL_POST_CONVOLUTION_GREEN_SCALE
 0x801D

	)

1017 
	#GL_POST_CONVOLUTION_BLUE_SCALE
 0x801E

	)

1018 
	#GL_POST_CONVOLUTION_ALPHA_SCALE
 0x801F

	)

1019 
	#GL_POST_CONVOLUTION_RED_BIAS
 0x8020

	)

1020 
	#GL_POST_CONVOLUTION_GREEN_BIAS
 0x8021

	)

1021 
	#GL_POST_CONVOLUTION_BLUE_BIAS
 0x8022

	)

1022 
	#GL_POST_CONVOLUTION_ALPHA_BIAS
 0x8023

	)

1023 
	#GL_HISTOGRAM
 0x8024

	)

1024 
	#GL_PROXY_HISTOGRAM
 0x8025

	)

1025 
	#GL_HISTOGRAM_WIDTH
 0x8026

	)

1026 
	#GL_HISTOGRAM_FORMAT
 0x8027

	)

1027 
	#GL_HISTOGRAM_RED_SIZE
 0x8028

	)

1028 
	#GL_HISTOGRAM_GREEN_SIZE
 0x8029

	)

1029 
	#GL_HISTOGRAM_BLUE_SIZE
 0x802A

	)

1030 
	#GL_HISTOGRAM_ALPHA_SIZE
 0x802B

	)

1031 
	#GL_HISTOGRAM_LUMINANCE_SIZE
 0x802C

	)

1032 
	#GL_HISTOGRAM_SINK
 0x802D

	)

1033 
	#GL_MINMAX
 0x802E

	)

1034 
	#GL_MINMAX_FORMAT
 0x802F

	)

1035 
	#GL_MINMAX_SINK
 0x8030

	)

1036 
	#GL_TABLE_TOO_LARGE
 0x8031

	)

1037 
	#GL_COLOR_MATRIX
 0x80B1

	)

1038 
	#GL_COLOR_MATRIX_STACK_DEPTH
 0x80B2

	)

1039 
	#GL_MAX_COLOR_MATRIX_STACK_DEPTH
 0x80B3

	)

1040 
	#GL_POST_COLOR_MATRIX_RED_SCALE
 0x80B4

	)

1041 
	#GL_POST_COLOR_MATRIX_GREEN_SCALE
 0x80B5

	)

1042 
	#GL_POST_COLOR_MATRIX_BLUE_SCALE
 0x80B6

	)

1043 
	#GL_POST_COLOR_MATRIX_ALPHA_SCALE
 0x80B7

	)

1044 
	#GL_POST_COLOR_MATRIX_RED_BIAS
 0x80B8

	)

1045 
	#GL_POST_COLOR_MATRIX_GREEN_BIAS
 0x80B9

	)

1046 
	#GL_POST_COLOR_MATRIX_BLUE_BIAS
 0x80BA

	)

1047 
	#GL_POST_COLOR_MATRIX_ALPHA_BIAS
 0x80BB

	)

1048 
	#GL_COLOR_TABLE
 0x80D0

	)

1049 
	#GL_POST_CONVOLUTION_COLOR_TABLE
 0x80D1

	)

1050 
	#GL_POST_COLOR_MATRIX_COLOR_TABLE
 0x80D2

	)

1051 
	#GL_PROXY_COLOR_TABLE
 0x80D3

	)

1052 
	#GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
 0x80D4

	)

1053 
	#GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
 0x80D5

	)

1054 
	#GL_COLOR_TABLE_SCALE
 0x80D6

	)

1055 
	#GL_COLOR_TABLE_BIAS
 0x80D7

	)

1056 
	#GL_COLOR_TABLE_FORMAT
 0x80D8

	)

1057 
	#GL_COLOR_TABLE_WIDTH
 0x80D9

	)

1058 
	#GL_COLOR_TABLE_RED_SIZE
 0x80DA

	)

1059 
	#GL_COLOR_TABLE_GREEN_SIZE
 0x80DB

	)

1060 
	#GL_COLOR_TABLE_BLUE_SIZE
 0x80DC

	)

1061 
	#GL_COLOR_TABLE_ALPHA_SIZE
 0x80DD

	)

1062 
	#GL_COLOR_TABLE_LUMINANCE_SIZE
 0x80DE

	)

1063 
	#GL_COLOR_TABLE_INTENSITY_SIZE
 0x80DF

	)

1064 
	#GL_CONSTANT_BORDER
 0x8151

	)

1065 
	#GL_REPLICATE_BORDER
 0x8153

	)

1066 
	#GL_CONVOLUTION_BORDER_COLOR
 0x8154

	)

1071 #i‚de‡
GL_VERSION_1_3


1072 
	#GL_VERSION_1_3
 1

	)

1073 
	#__GLEE_GL_VERSION_1_3
 1

	)

1075 
	#GL_TEXTURE0
 0x84C0

	)

1076 
	#GL_TEXTURE1
 0x84C1

	)

1077 
	#GL_TEXTURE2
 0x84C2

	)

1078 
	#GL_TEXTURE3
 0x84C3

	)

1079 
	#GL_TEXTURE4
 0x84C4

	)

1080 
	#GL_TEXTURE5
 0x84C5

	)

1081 
	#GL_TEXTURE6
 0x84C6

	)

1082 
	#GL_TEXTURE7
 0x84C7

	)

1083 
	#GL_TEXTURE8
 0x84C8

	)

1084 
	#GL_TEXTURE9
 0x84C9

	)

1085 
	#GL_TEXTURE10
 0x84CA

	)

1086 
	#GL_TEXTURE11
 0x84CB

	)

1087 
	#GL_TEXTURE12
 0x84CC

	)

1088 
	#GL_TEXTURE13
 0x84CD

	)

1089 
	#GL_TEXTURE14
 0x84CE

	)

1090 
	#GL_TEXTURE15
 0x84CF

	)

1091 
	#GL_TEXTURE16
 0x84D0

	)

1092 
	#GL_TEXTURE17
 0x84D1

	)

1093 
	#GL_TEXTURE18
 0x84D2

	)

1094 
	#GL_TEXTURE19
 0x84D3

	)

1095 
	#GL_TEXTURE20
 0x84D4

	)

1096 
	#GL_TEXTURE21
 0x84D5

	)

1097 
	#GL_TEXTURE22
 0x84D6

	)

1098 
	#GL_TEXTURE23
 0x84D7

	)

1099 
	#GL_TEXTURE24
 0x84D8

	)

1100 
	#GL_TEXTURE25
 0x84D9

	)

1101 
	#GL_TEXTURE26
 0x84DA

	)

1102 
	#GL_TEXTURE27
 0x84DB

	)

1103 
	#GL_TEXTURE28
 0x84DC

	)

1104 
	#GL_TEXTURE29
 0x84DD

	)

1105 
	#GL_TEXTURE30
 0x84DE

	)

1106 
	#GL_TEXTURE31
 0x84DF

	)

1107 
	#GL_ACTIVE_TEXTURE
 0x84E0

	)

1108 
	#GL_CLIENT_ACTIVE_TEXTURE
 0x84E1

	)

1109 
	#GL_MAX_TEXTURE_UNITS
 0x84E2

	)

1110 
	#GL_TRANSPOSE_MODELVIEW_MATRIX
 0x84E3

	)

1111 
	#GL_TRANSPOSE_PROJECTION_MATRIX
 0x84E4

	)

1112 
	#GL_TRANSPOSE_TEXTURE_MATRIX
 0x84E5

	)

1113 
	#GL_TRANSPOSE_COLOR_MATRIX
 0x84E6

	)

1114 
	#GL_MULTISAMPLE
 0x809D

	)

1115 
	#GL_SAMPLE_ALPHA_TO_COVERAGE
 0x809E

	)

1116 
	#GL_SAMPLE_ALPHA_TO_ONE
 0x809F

	)

1117 
	#GL_SAMPLE_COVERAGE
 0x80A0

	)

1118 
	#GL_SAMPLE_BUFFERS
 0x80A8

	)

1119 
	#GL_SAMPLES
 0x80A9

	)

1120 
	#GL_SAMPLE_COVERAGE_VALUE
 0x80AA

	)

1121 
	#GL_SAMPLE_COVERAGE_INVERT
 0x80AB

	)

1122 
	#GL_MULTISAMPLE_BIT
 0x20000000

	)

1123 
	#GL_NORMAL_MAP
 0x8511

	)

1124 
	#GL_REFLECTION_MAP
 0x8512

	)

1125 
	#GL_TEXTURE_CUBE_MAP
 0x8513

	)

1126 
	#GL_TEXTURE_BINDING_CUBE_MAP
 0x8514

	)

1127 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_X
 0x8515

	)

1128 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_X
 0x8516

	)

1129 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Y
 0x8517

	)

1130 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
 0x8518

	)

1131 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Z
 0x8519

	)

1132 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
 0x851A

	)

1133 
	#GL_PROXY_TEXTURE_CUBE_MAP
 0x851B

	)

1134 
	#GL_MAX_CUBE_MAP_TEXTURE_SIZE
 0x851C

	)

1135 
	#GL_COMPRESSED_ALPHA
 0x84E9

	)

1136 
	#GL_COMPRESSED_LUMINANCE
 0x84EA

	)

1137 
	#GL_COMPRESSED_LUMINANCE_ALPHA
 0x84EB

	)

1138 
	#GL_COMPRESSED_INTENSITY
 0x84EC

	)

1139 
	#GL_COMPRESSED_RGB
 0x84ED

	)

1140 
	#GL_COMPRESSED_RGBA
 0x84EE

	)

1141 
	#GL_TEXTURE_COMPRESSION_HINT
 0x84EF

	)

1142 
	#GL_TEXTURE_COMPRESSED_IMAGE_SIZE
 0x86A0

	)

1143 
	#GL_TEXTURE_COMPRESSED
 0x86A1

	)

1144 
	#GL_NUM_COMPRESSED_TEXTURE_FORMATS
 0x86A2

	)

1145 
	#GL_COMPRESSED_TEXTURE_FORMATS
 0x86A3

	)

1146 
	#GL_CLAMP_TO_BORDER
 0x812D

	)

1147 
	#GL_COMBINE
 0x8570

	)

1148 
	#GL_COMBINE_RGB
 0x8571

	)

1149 
	#GL_COMBINE_ALPHA
 0x8572

	)

1150 
	#GL_SOURCE0_RGB
 0x8580

	)

1151 
	#GL_SOURCE1_RGB
 0x8581

	)

1152 
	#GL_SOURCE2_RGB
 0x8582

	)

1153 
	#GL_SOURCE0_ALPHA
 0x8588

	)

1154 
	#GL_SOURCE1_ALPHA
 0x8589

	)

1155 
	#GL_SOURCE2_ALPHA
 0x858A

	)

1156 
	#GL_OPERAND0_RGB
 0x8590

	)

1157 
	#GL_OPERAND1_RGB
 0x8591

	)

1158 
	#GL_OPERAND2_RGB
 0x8592

	)

1159 
	#GL_OPERAND0_ALPHA
 0x8598

	)

1160 
	#GL_OPERAND1_ALPHA
 0x8599

	)

1161 
	#GL_OPERAND2_ALPHA
 0x859A

	)

1162 
	#GL_RGB_SCALE
 0x8573

	)

1163 
	#GL_ADD_SIGNED
 0x8574

	)

1164 
	#GL_INTERPOLATE
 0x8575

	)

1165 
	#GL_SUBTRACT
 0x84E7

	)

1166 
	#GL_CONSTANT
 0x8576

	)

1167 
	#GL_PRIMARY_COLOR
 0x8577

	)

1168 
	#GL_PREVIOUS
 0x8578

	)

1169 
	#GL_DOT3_RGB
 0x86AE

	)

1170 
	#GL_DOT3_RGBA
 0x86AF

	)

1171 (
APIENTRYP
 
	tPFNGLACTIVETEXTUREPROC
Ë(
	tGLíum
 
	tãxtuª
);

1172 (
APIENTRYP
 
	tPFNGLCLIENTACTIVETEXTUREPROC
Ë(
	tGLíum
 
	tãxtuª
);

1173 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
);

1174 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1DVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

1175 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1FPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
);

1176 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1FVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

1177 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1IPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
);

1178 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1IVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 * 
	tv
);

1179 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1SPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
);

1180 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1SVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 * 
	tv
);

1181 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
);

1182 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2DVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

1183 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2FPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
);

1184 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2FVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

1185 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2IPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
);

1186 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2IVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 * 
	tv
);

1187 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2SPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
);

1188 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2SVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 * 
	tv
);

1189 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
, GLdoubÀ 
	tr
);

1190 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3DVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

1191 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3FPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
);

1192 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3FVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

1193 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3IPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
, GLöà
	tr
);

1194 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3IVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 * 
	tv
);

1195 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3SPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
, GLsh‹à
	tr
);

1196 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3SVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 * 
	tv
);

1197 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
, GLdoubÀ 
	tr
, GLdoubÀ 
	tq
);

1198 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4DVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

1199 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4FPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tq
);

1200 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4FVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

1201 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4IPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
, GLöà
	tr
, GLöà
	tq
);

1202 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4IVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 * 
	tv
);

1203 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4SPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
, GLsh‹à
	tr
, GLsh‹à
	tq
);

1204 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4SVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 * 
	tv
);

1205 (
APIENTRYP
 
	tPFNGLLOADTRANSPOSEMATRIXFPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tm
);

1206 (
APIENTRYP
 
	tPFNGLLOADTRANSPOSEMATRIXDPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tm
);

1207 (
APIENTRYP
 
	tPFNGLMULTTRANSPOSEMATRIXFPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tm
);

1208 (
APIENTRYP
 
	tPFNGLMULTTRANSPOSEMATRIXDPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tm
);

1209 (
APIENTRYP
 
	tPFNGLSAMPLECOVERAGEPROC
Ë(
	tGL˛ampf
 
	tvÆue
, 
	tGLboﬁón
 
	tövît
);

1210 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 * 
	td©a
);

1211 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE2DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 * 
	td©a
);

1212 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE1DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 * 
	td©a
);

1213 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 * 
	td©a
);

1214 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 * 
	td©a
);

1215 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 * 
	td©a
);

1216 (
APIENTRYP
 
	tPFNGLGETCOMPRESSEDTEXIMAGEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, 
	tGLvoid
 * 
	timg
);

1217 
GLEE_EXTERN
 
PFNGLACTIVETEXTUREPROC
 
	gpglA˘iveTextuª
;

1218 
GLEE_EXTERN
 
PFNGLCLIENTACTIVETEXTUREPROC
 
	gpglClõ¡A˘iveTextuª
;

1219 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1DPROC
 
	gpglMu…iTexCo‹d1d
;

1220 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1DVPROC
 
	gpglMu…iTexCo‹d1dv
;

1221 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1FPROC
 
	gpglMu…iTexCo‹d1f
;

1222 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1FVPROC
 
	gpglMu…iTexCo‹d1fv
;

1223 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1IPROC
 
	gpglMu…iTexCo‹d1i
;

1224 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1IVPROC
 
	gpglMu…iTexCo‹d1iv
;

1225 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1SPROC
 
	gpglMu…iTexCo‹d1s
;

1226 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1SVPROC
 
	gpglMu…iTexCo‹d1sv
;

1227 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2DPROC
 
	gpglMu…iTexCo‹d2d
;

1228 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2DVPROC
 
	gpglMu…iTexCo‹d2dv
;

1229 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2FPROC
 
	gpglMu…iTexCo‹d2f
;

1230 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2FVPROC
 
	gpglMu…iTexCo‹d2fv
;

1231 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2IPROC
 
	gpglMu…iTexCo‹d2i
;

1232 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2IVPROC
 
	gpglMu…iTexCo‹d2iv
;

1233 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2SPROC
 
	gpglMu…iTexCo‹d2s
;

1234 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2SVPROC
 
	gpglMu…iTexCo‹d2sv
;

1235 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3DPROC
 
	gpglMu…iTexCo‹d3d
;

1236 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3DVPROC
 
	gpglMu…iTexCo‹d3dv
;

1237 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3FPROC
 
	gpglMu…iTexCo‹d3f
;

1238 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3FVPROC
 
	gpglMu…iTexCo‹d3fv
;

1239 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3IPROC
 
	gpglMu…iTexCo‹d3i
;

1240 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3IVPROC
 
	gpglMu…iTexCo‹d3iv
;

1241 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3SPROC
 
	gpglMu…iTexCo‹d3s
;

1242 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3SVPROC
 
	gpglMu…iTexCo‹d3sv
;

1243 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4DPROC
 
	gpglMu…iTexCo‹d4d
;

1244 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4DVPROC
 
	gpglMu…iTexCo‹d4dv
;

1245 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4FPROC
 
	gpglMu…iTexCo‹d4f
;

1246 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4FVPROC
 
	gpglMu…iTexCo‹d4fv
;

1247 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4IPROC
 
	gpglMu…iTexCo‹d4i
;

1248 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4IVPROC
 
	gpglMu…iTexCo‹d4iv
;

1249 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4SPROC
 
	gpglMu…iTexCo‹d4s
;

1250 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4SVPROC
 
	gpglMu…iTexCo‹d4sv
;

1251 
GLEE_EXTERN
 
PFNGLLOADTRANSPOSEMATRIXFPROC
 
	gpglLﬂdTøn•o£M©rixf
;

1252 
GLEE_EXTERN
 
PFNGLLOADTRANSPOSEMATRIXDPROC
 
	gpglLﬂdTøn•o£M©rixd
;

1253 
GLEE_EXTERN
 
PFNGLMULTTRANSPOSEMATRIXFPROC
 
	gpglMu…Tøn•o£M©rixf
;

1254 
GLEE_EXTERN
 
PFNGLMULTTRANSPOSEMATRIXDPROC
 
	gpglMu…Tøn•o£M©rixd
;

1255 
GLEE_EXTERN
 
PFNGLSAMPLECOVERAGEPROC
 
	gpglSam∂eCovîage
;

1256 
GLEE_EXTERN
 
PFNGLCOMPRESSEDTEXIMAGE3DPROC
 
	gpglCom¥es£dTexImage3D
;

1257 
GLEE_EXTERN
 
PFNGLCOMPRESSEDTEXIMAGE2DPROC
 
	gpglCom¥es£dTexImage2D
;

1258 
GLEE_EXTERN
 
PFNGLCOMPRESSEDTEXIMAGE1DPROC
 
	gpglCom¥es£dTexImage1D
;

1259 
GLEE_EXTERN
 
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
 
	gpglCom¥es£dTexSubImage3D
;

1260 
GLEE_EXTERN
 
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
 
	gpglCom¥es£dTexSubImage2D
;

1261 
GLEE_EXTERN
 
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
 
	gpglCom¥es£dTexSubImage1D
;

1262 
GLEE_EXTERN
 
PFNGLGETCOMPRESSEDTEXIMAGEPROC
 
	gpglGëCom¥es£dTexImage
;

1263 
	#glA˘iveTextuª
 
pglA˘iveTextuª


	)

1264 
	#glClõ¡A˘iveTextuª
 
pglClõ¡A˘iveTextuª


	)

1265 
	#glMu…iTexCo‹d1d
 
pglMu…iTexCo‹d1d


	)

1266 
	#glMu…iTexCo‹d1dv
 
pglMu…iTexCo‹d1dv


	)

1267 
	#glMu…iTexCo‹d1f
 
pglMu…iTexCo‹d1f


	)

1268 
	#glMu…iTexCo‹d1fv
 
pglMu…iTexCo‹d1fv


	)

1269 
	#glMu…iTexCo‹d1i
 
pglMu…iTexCo‹d1i


	)

1270 
	#glMu…iTexCo‹d1iv
 
pglMu…iTexCo‹d1iv


	)

1271 
	#glMu…iTexCo‹d1s
 
pglMu…iTexCo‹d1s


	)

1272 
	#glMu…iTexCo‹d1sv
 
pglMu…iTexCo‹d1sv


	)

1273 
	#glMu…iTexCo‹d2d
 
pglMu…iTexCo‹d2d


	)

1274 
	#glMu…iTexCo‹d2dv
 
pglMu…iTexCo‹d2dv


	)

1275 
	#glMu…iTexCo‹d2f
 
pglMu…iTexCo‹d2f


	)

1276 
	#glMu…iTexCo‹d2fv
 
pglMu…iTexCo‹d2fv


	)

1277 
	#glMu…iTexCo‹d2i
 
pglMu…iTexCo‹d2i


	)

1278 
	#glMu…iTexCo‹d2iv
 
pglMu…iTexCo‹d2iv


	)

1279 
	#glMu…iTexCo‹d2s
 
pglMu…iTexCo‹d2s


	)

1280 
	#glMu…iTexCo‹d2sv
 
pglMu…iTexCo‹d2sv


	)

1281 
	#glMu…iTexCo‹d3d
 
pglMu…iTexCo‹d3d


	)

1282 
	#glMu…iTexCo‹d3dv
 
pglMu…iTexCo‹d3dv


	)

1283 
	#glMu…iTexCo‹d3f
 
pglMu…iTexCo‹d3f


	)

1284 
	#glMu…iTexCo‹d3fv
 
pglMu…iTexCo‹d3fv


	)

1285 
	#glMu…iTexCo‹d3i
 
pglMu…iTexCo‹d3i


	)

1286 
	#glMu…iTexCo‹d3iv
 
pglMu…iTexCo‹d3iv


	)

1287 
	#glMu…iTexCo‹d3s
 
pglMu…iTexCo‹d3s


	)

1288 
	#glMu…iTexCo‹d3sv
 
pglMu…iTexCo‹d3sv


	)

1289 
	#glMu…iTexCo‹d4d
 
pglMu…iTexCo‹d4d


	)

1290 
	#glMu…iTexCo‹d4dv
 
pglMu…iTexCo‹d4dv


	)

1291 
	#glMu…iTexCo‹d4f
 
pglMu…iTexCo‹d4f


	)

1292 
	#glMu…iTexCo‹d4fv
 
pglMu…iTexCo‹d4fv


	)

1293 
	#glMu…iTexCo‹d4i
 
pglMu…iTexCo‹d4i


	)

1294 
	#glMu…iTexCo‹d4iv
 
pglMu…iTexCo‹d4iv


	)

1295 
	#glMu…iTexCo‹d4s
 
pglMu…iTexCo‹d4s


	)

1296 
	#glMu…iTexCo‹d4sv
 
pglMu…iTexCo‹d4sv


	)

1297 
	#glLﬂdTøn•o£M©rixf
 
pglLﬂdTøn•o£M©rixf


	)

1298 
	#glLﬂdTøn•o£M©rixd
 
pglLﬂdTøn•o£M©rixd


	)

1299 
	#glMu…Tøn•o£M©rixf
 
pglMu…Tøn•o£M©rixf


	)

1300 
	#glMu…Tøn•o£M©rixd
 
pglMu…Tøn•o£M©rixd


	)

1301 
	#glSam∂eCovîage
 
pglSam∂eCovîage


	)

1302 
	#glCom¥es£dTexImage3D
 
pglCom¥es£dTexImage3D


	)

1303 
	#glCom¥es£dTexImage2D
 
pglCom¥es£dTexImage2D


	)

1304 
	#glCom¥es£dTexImage1D
 
pglCom¥es£dTexImage1D


	)

1305 
	#glCom¥es£dTexSubImage3D
 
pglCom¥es£dTexSubImage3D


	)

1306 
	#glCom¥es£dTexSubImage2D
 
pglCom¥es£dTexSubImage2D


	)

1307 
	#glCom¥es£dTexSubImage1D
 
pglCom¥es£dTexSubImage1D


	)

1308 
	#glGëCom¥es£dTexImage
 
pglGëCom¥es£dTexImage


	)

1313 #i‚de‡
GL_VERSION_1_4


1314 
	#GL_VERSION_1_4
 1

	)

1315 
	#__GLEE_GL_VERSION_1_4
 1

	)

1317 
	#GL_BLEND_DST_RGB
 0x80C8

	)

1318 
	#GL_BLEND_SRC_RGB
 0x80C9

	)

1319 
	#GL_BLEND_DST_ALPHA
 0x80CA

	)

1320 
	#GL_BLEND_SRC_ALPHA
 0x80CB

	)

1321 
	#GL_POINT_SIZE_MIN
 0x8126

	)

1322 
	#GL_POINT_SIZE_MAX
 0x8127

	)

1323 
	#GL_POINT_FADE_THRESHOLD_SIZE
 0x8128

	)

1324 
	#GL_POINT_DISTANCE_ATTENUATION
 0x8129

	)

1325 
	#GL_GENERATE_MIPMAP
 0x8191

	)

1326 
	#GL_GENERATE_MIPMAP_HINT
 0x8192

	)

1327 
	#GL_DEPTH_COMPONENT16
 0x81A5

	)

1328 
	#GL_DEPTH_COMPONENT24
 0x81A6

	)

1329 
	#GL_DEPTH_COMPONENT32
 0x81A7

	)

1330 
	#GL_MIRRORED_REPEAT
 0x8370

	)

1331 
	#GL_FOG_COORDINATE_SOURCE
 0x8450

	)

1332 
	#GL_FOG_COORDINATE
 0x8451

	)

1333 
	#GL_FRAGMENT_DEPTH
 0x8452

	)

1334 
	#GL_CURRENT_FOG_COORDINATE
 0x8453

	)

1335 
	#GL_FOG_COORDINATE_ARRAY_TYPE
 0x8454

	)

1336 
	#GL_FOG_COORDINATE_ARRAY_STRIDE
 0x8455

	)

1337 
	#GL_FOG_COORDINATE_ARRAY_POINTER
 0x8456

	)

1338 
	#GL_FOG_COORDINATE_ARRAY
 0x8457

	)

1339 
	#GL_COLOR_SUM
 0x8458

	)

1340 
	#GL_CURRENT_SECONDARY_COLOR
 0x8459

	)

1341 
	#GL_SECONDARY_COLOR_ARRAY_SIZE
 0x845A

	)

1342 
	#GL_SECONDARY_COLOR_ARRAY_TYPE
 0x845B

	)

1343 
	#GL_SECONDARY_COLOR_ARRAY_STRIDE
 0x845C

	)

1344 
	#GL_SECONDARY_COLOR_ARRAY_POINTER
 0x845D

	)

1345 
	#GL_SECONDARY_COLOR_ARRAY
 0x845E

	)

1346 
	#GL_MAX_TEXTURE_LOD_BIAS
 0x84FD

	)

1347 
	#GL_TEXTURE_FILTER_CONTROL
 0x8500

	)

1348 
	#GL_TEXTURE_LOD_BIAS
 0x8501

	)

1349 
	#GL_INCR_WRAP
 0x8507

	)

1350 
	#GL_DECR_WRAP
 0x8508

	)

1351 
	#GL_TEXTURE_DEPTH_SIZE
 0x884A

	)

1352 
	#GL_DEPTH_TEXTURE_MODE
 0x884B

	)

1353 
	#GL_TEXTURE_COMPARE_MODE
 0x884C

	)

1354 
	#GL_TEXTURE_COMPARE_FUNC
 0x884D

	)

1355 
	#GL_COMPARE_R_TO_TEXTURE
 0x884E

	)

1356 (
APIENTRYP
 
	tPFNGLBLENDFUNCSEPARATEPROC
Ë(
	tGLíum
 
	tsÁ˘‹RGB
, GLíum 
	tdÁ˘‹RGB
, GLíum 
	tsÁ˘‹AÕha
, GLíum 
	tdÁ˘‹AÕha
);

1357 (
APIENTRYP
 
	tPFNGLFOGCOORDFPROC
Ë(
	tGLÊﬂt
 
	tco‹d
);

1358 (
APIENTRYP
 
	tPFNGLFOGCOORDFVPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tco‹d
);

1359 (
APIENTRYP
 
	tPFNGLFOGCOORDDPROC
Ë(
	tGLdoubÀ
 
	tco‹d
);

1360 (
APIENTRYP
 
	tPFNGLFOGCOORDDVPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tco‹d
);

1361 (
APIENTRYP
 
	tPFNGLFOGCOORDPOINTERPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

1362 (
APIENTRYP
 
	tPFNGLMULTIDRAWARRAYSPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 * 
	tfú°
, 
	tGLsizei
 * 
	tcou¡
, GLsizeò
	t¥imcou¡
);

1363 (
APIENTRYP
 
	tPFNGLMULTIDRAWELEMENTSPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLsizei
 * 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
* * 
	tödi˚s
, GLsizeò
	t¥imcou¡
);

1364 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

1365 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFVPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

1366 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

1367 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERIVPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

1368 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3BPROC
Ë(
	tGLbyã
 
	tªd
, GLbyã 
	tgªí
, GLbyã 
	tblue
);

1369 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3BVPROC
Ë(c⁄° 
	tGLbyã
 * 
	tv
);

1370 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3DPROC
Ë(
	tGLdoubÀ
 
	tªd
, GLdoubÀ 
	tgªí
, GLdoubÀ 
	tblue
);

1371 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3DVPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tv
);

1372 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3FPROC
Ë(
	tGLÊﬂt
 
	tªd
, GLÊﬂà
	tgªí
, GLÊﬂà
	tblue
);

1373 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3FVPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tv
);

1374 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3IPROC
Ë(
	tGLöt
 
	tªd
, GLöà
	tgªí
, GLöà
	tblue
);

1375 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3IVPROC
Ë(c⁄° 
	tGLöt
 * 
	tv
);

1376 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3SPROC
Ë(
	tGLsh‹t
 
	tªd
, GLsh‹à
	tgªí
, GLsh‹à
	tblue
);

1377 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3SVPROC
Ë(c⁄° 
	tGLsh‹t
 * 
	tv
);

1378 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UBPROC
Ë(
	tGLubyã
 
	tªd
, GLubyã 
	tgªí
, GLubyã 
	tblue
);

1379 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UBVPROC
Ë(c⁄° 
	tGLubyã
 * 
	tv
);

1380 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UIPROC
Ë(
	tGLuöt
 
	tªd
, GLuöà
	tgªí
, GLuöà
	tblue
);

1381 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UIVPROC
Ë(c⁄° 
	tGLuöt
 * 
	tv
);

1382 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3USPROC
Ë(
	tGLush‹t
 
	tªd
, GLush‹à
	tgªí
, GLush‹à
	tblue
);

1383 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3USVPROC
Ë(c⁄° 
	tGLush‹t
 * 
	tv
);

1384 (
APIENTRYP
 
	tPFNGLSECONDARYCOLORPOINTERPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

1385 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

1386 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DVPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tv
);

1387 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

1388 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FVPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tv
);

1389 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
);

1390 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IVPROC
Ë(c⁄° 
	tGLöt
 * 
	tv
);

1391 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

1392 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SVPROC
Ë(c⁄° 
	tGLsh‹t
 * 
	tv
);

1393 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

1394 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DVPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tv
);

1395 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

1396 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FVPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tv
);

1397 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

1398 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IVPROC
Ë(c⁄° 
	tGLöt
 * 
	tv
);

1399 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

1400 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SVPROC
Ë(c⁄° 
	tGLsh‹t
 * 
	tv
);

1401 
GLEE_EXTERN
 
PFNGLBLENDFUNCSEPARATEPROC
 
	gpglBÀndFuncSï¨©e
;

1402 
GLEE_EXTERN
 
PFNGLFOGCOORDFPROC
 
	gpglFogCo‹df
;

1403 
GLEE_EXTERN
 
PFNGLFOGCOORDFVPROC
 
	gpglFogCo‹dfv
;

1404 
GLEE_EXTERN
 
PFNGLFOGCOORDDPROC
 
	gpglFogCo‹dd
;

1405 
GLEE_EXTERN
 
PFNGLFOGCOORDDVPROC
 
	gpglFogCo‹ddv
;

1406 
GLEE_EXTERN
 
PFNGLFOGCOORDPOINTERPROC
 
	gpglFogCo‹dPoöãr
;

1407 
GLEE_EXTERN
 
PFNGLMULTIDRAWARRAYSPROC
 
	gpglMu…iDøwAºays
;

1408 
GLEE_EXTERN
 
PFNGLMULTIDRAWELEMENTSPROC
 
	gpglMu…iDøwEÀmíts
;

1409 
GLEE_EXTERN
 
PFNGLPOINTPARAMETERFPROC
 
	gpglPoötP¨amëîf
;

1410 
GLEE_EXTERN
 
PFNGLPOINTPARAMETERFVPROC
 
	gpglPoötP¨amëîfv
;

1411 
GLEE_EXTERN
 
PFNGLPOINTPARAMETERIPROC
 
	gpglPoötP¨amëîi
;

1412 
GLEE_EXTERN
 
PFNGLPOINTPARAMETERIVPROC
 
	gpglPoötP¨amëîiv
;

1413 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3BPROC
 
	gpglSec⁄d¨yCﬁ‹3b
;

1414 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3BVPROC
 
	gpglSec⁄d¨yCﬁ‹3bv
;

1415 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3DPROC
 
	gpglSec⁄d¨yCﬁ‹3d
;

1416 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3DVPROC
 
	gpglSec⁄d¨yCﬁ‹3dv
;

1417 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3FPROC
 
	gpglSec⁄d¨yCﬁ‹3f
;

1418 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3FVPROC
 
	gpglSec⁄d¨yCﬁ‹3fv
;

1419 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3IPROC
 
	gpglSec⁄d¨yCﬁ‹3i
;

1420 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3IVPROC
 
	gpglSec⁄d¨yCﬁ‹3iv
;

1421 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3SPROC
 
	gpglSec⁄d¨yCﬁ‹3s
;

1422 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3SVPROC
 
	gpglSec⁄d¨yCﬁ‹3sv
;

1423 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3UBPROC
 
	gpglSec⁄d¨yCﬁ‹3ub
;

1424 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3UBVPROC
 
	gpglSec⁄d¨yCﬁ‹3ubv
;

1425 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3UIPROC
 
	gpglSec⁄d¨yCﬁ‹3ui
;

1426 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3UIVPROC
 
	gpglSec⁄d¨yCﬁ‹3uiv
;

1427 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3USPROC
 
	gpglSec⁄d¨yCﬁ‹3us
;

1428 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3USVPROC
 
	gpglSec⁄d¨yCﬁ‹3usv
;

1429 
GLEE_EXTERN
 
PFNGLSECONDARYCOLORPOINTERPROC
 
	gpglSec⁄d¨yCﬁ‹Poöãr
;

1430 
GLEE_EXTERN
 
PFNGLWINDOWPOS2DPROC
 
	gpglWödowPos2d
;

1431 
GLEE_EXTERN
 
PFNGLWINDOWPOS2DVPROC
 
	gpglWödowPos2dv
;

1432 
GLEE_EXTERN
 
PFNGLWINDOWPOS2FPROC
 
	gpglWödowPos2f
;

1433 
GLEE_EXTERN
 
PFNGLWINDOWPOS2FVPROC
 
	gpglWödowPos2fv
;

1434 
GLEE_EXTERN
 
PFNGLWINDOWPOS2IPROC
 
	gpglWödowPos2i
;

1435 
GLEE_EXTERN
 
PFNGLWINDOWPOS2IVPROC
 
	gpglWödowPos2iv
;

1436 
GLEE_EXTERN
 
PFNGLWINDOWPOS2SPROC
 
	gpglWödowPos2s
;

1437 
GLEE_EXTERN
 
PFNGLWINDOWPOS2SVPROC
 
	gpglWödowPos2sv
;

1438 
GLEE_EXTERN
 
PFNGLWINDOWPOS3DPROC
 
	gpglWödowPos3d
;

1439 
GLEE_EXTERN
 
PFNGLWINDOWPOS3DVPROC
 
	gpglWödowPos3dv
;

1440 
GLEE_EXTERN
 
PFNGLWINDOWPOS3FPROC
 
	gpglWödowPos3f
;

1441 
GLEE_EXTERN
 
PFNGLWINDOWPOS3FVPROC
 
	gpglWödowPos3fv
;

1442 
GLEE_EXTERN
 
PFNGLWINDOWPOS3IPROC
 
	gpglWödowPos3i
;

1443 
GLEE_EXTERN
 
PFNGLWINDOWPOS3IVPROC
 
	gpglWödowPos3iv
;

1444 
GLEE_EXTERN
 
PFNGLWINDOWPOS3SPROC
 
	gpglWödowPos3s
;

1445 
GLEE_EXTERN
 
PFNGLWINDOWPOS3SVPROC
 
	gpglWödowPos3sv
;

1446 
	#glBÀndFuncSï¨©e
 
pglBÀndFuncSï¨©e


	)

1447 
	#glFogCo‹df
 
pglFogCo‹df


	)

1448 
	#glFogCo‹dfv
 
pglFogCo‹dfv


	)

1449 
	#glFogCo‹dd
 
pglFogCo‹dd


	)

1450 
	#glFogCo‹ddv
 
pglFogCo‹ddv


	)

1451 
	#glFogCo‹dPoöãr
 
pglFogCo‹dPoöãr


	)

1452 
	#glMu…iDøwAºays
 
pglMu…iDøwAºays


	)

1453 
	#glMu…iDøwEÀmíts
 
pglMu…iDøwEÀmíts


	)

1454 
	#glPoötP¨amëîf
 
pglPoötP¨amëîf


	)

1455 
	#glPoötP¨amëîfv
 
pglPoötP¨amëîfv


	)

1456 
	#glPoötP¨amëîi
 
pglPoötP¨amëîi


	)

1457 
	#glPoötP¨amëîiv
 
pglPoötP¨amëîiv


	)

1458 
	#glSec⁄d¨yCﬁ‹3b
 
pglSec⁄d¨yCﬁ‹3b


	)

1459 
	#glSec⁄d¨yCﬁ‹3bv
 
pglSec⁄d¨yCﬁ‹3bv


	)

1460 
	#glSec⁄d¨yCﬁ‹3d
 
pglSec⁄d¨yCﬁ‹3d


	)

1461 
	#glSec⁄d¨yCﬁ‹3dv
 
pglSec⁄d¨yCﬁ‹3dv


	)

1462 
	#glSec⁄d¨yCﬁ‹3f
 
pglSec⁄d¨yCﬁ‹3f


	)

1463 
	#glSec⁄d¨yCﬁ‹3fv
 
pglSec⁄d¨yCﬁ‹3fv


	)

1464 
	#glSec⁄d¨yCﬁ‹3i
 
pglSec⁄d¨yCﬁ‹3i


	)

1465 
	#glSec⁄d¨yCﬁ‹3iv
 
pglSec⁄d¨yCﬁ‹3iv


	)

1466 
	#glSec⁄d¨yCﬁ‹3s
 
pglSec⁄d¨yCﬁ‹3s


	)

1467 
	#glSec⁄d¨yCﬁ‹3sv
 
pglSec⁄d¨yCﬁ‹3sv


	)

1468 
	#glSec⁄d¨yCﬁ‹3ub
 
pglSec⁄d¨yCﬁ‹3ub


	)

1469 
	#glSec⁄d¨yCﬁ‹3ubv
 
pglSec⁄d¨yCﬁ‹3ubv


	)

1470 
	#glSec⁄d¨yCﬁ‹3ui
 
pglSec⁄d¨yCﬁ‹3ui


	)

1471 
	#glSec⁄d¨yCﬁ‹3uiv
 
pglSec⁄d¨yCﬁ‹3uiv


	)

1472 
	#glSec⁄d¨yCﬁ‹3us
 
pglSec⁄d¨yCﬁ‹3us


	)

1473 
	#glSec⁄d¨yCﬁ‹3usv
 
pglSec⁄d¨yCﬁ‹3usv


	)

1474 
	#glSec⁄d¨yCﬁ‹Poöãr
 
pglSec⁄d¨yCﬁ‹Poöãr


	)

1475 
	#glWödowPos2d
 
pglWödowPos2d


	)

1476 
	#glWödowPos2dv
 
pglWödowPos2dv


	)

1477 
	#glWödowPos2f
 
pglWödowPos2f


	)

1478 
	#glWödowPos2fv
 
pglWödowPos2fv


	)

1479 
	#glWödowPos2i
 
pglWödowPos2i


	)

1480 
	#glWödowPos2iv
 
pglWödowPos2iv


	)

1481 
	#glWödowPos2s
 
pglWödowPos2s


	)

1482 
	#glWödowPos2sv
 
pglWödowPos2sv


	)

1483 
	#glWödowPos3d
 
pglWödowPos3d


	)

1484 
	#glWödowPos3dv
 
pglWödowPos3dv


	)

1485 
	#glWödowPos3f
 
pglWödowPos3f


	)

1486 
	#glWödowPos3fv
 
pglWödowPos3fv


	)

1487 
	#glWödowPos3i
 
pglWödowPos3i


	)

1488 
	#glWödowPos3iv
 
pglWödowPos3iv


	)

1489 
	#glWödowPos3s
 
pglWödowPos3s


	)

1490 
	#glWödowPos3sv
 
pglWödowPos3sv


	)

1495 #i‚de‡
GL_VERSION_1_5


1496 
	#GL_VERSION_1_5
 1

	)

1497 
	#__GLEE_GL_VERSION_1_5
 1

	)

1499 
	#GL_BUFFER_SIZE
 0x8764

	)

1500 
	#GL_BUFFER_USAGE
 0x8765

	)

1501 
	#GL_QUERY_COUNTER_BITS
 0x8864

	)

1502 
	#GL_CURRENT_QUERY
 0x8865

	)

1503 
	#GL_QUERY_RESULT
 0x8866

	)

1504 
	#GL_QUERY_RESULT_AVAILABLE
 0x8867

	)

1505 
	#GL_ARRAY_BUFFER
 0x8892

	)

1506 
	#GL_ELEMENT_ARRAY_BUFFER
 0x8893

	)

1507 
	#GL_ARRAY_BUFFER_BINDING
 0x8894

	)

1508 
	#GL_ELEMENT_ARRAY_BUFFER_BINDING
 0x8895

	)

1509 
	#GL_VERTEX_ARRAY_BUFFER_BINDING
 0x8896

	)

1510 
	#GL_NORMAL_ARRAY_BUFFER_BINDING
 0x8897

	)

1511 
	#GL_COLOR_ARRAY_BUFFER_BINDING
 0x8898

	)

1512 
	#GL_INDEX_ARRAY_BUFFER_BINDING
 0x8899

	)

1513 
	#GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
 0x889A

	)

1514 
	#GL_EDGE_FLAG_ARRAY_BUFFER_BINDING
 0x889B

	)

1515 
	#GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING
 0x889C

	)

1516 
	#GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING
 0x889D

	)

1517 
	#GL_WEIGHT_ARRAY_BUFFER_BINDING
 0x889E

	)

1518 
	#GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
 0x889F

	)

1519 
	#GL_READ_ONLY
 0x88B8

	)

1520 
	#GL_WRITE_ONLY
 0x88B9

	)

1521 
	#GL_READ_WRITE
 0x88BA

	)

1522 
	#GL_BUFFER_ACCESS
 0x88BB

	)

1523 
	#GL_BUFFER_MAPPED
 0x88BC

	)

1524 
	#GL_BUFFER_MAP_POINTER
 0x88BD

	)

1525 
	#GL_STREAM_DRAW
 0x88E0

	)

1526 
	#GL_STREAM_READ
 0x88E1

	)

1527 
	#GL_STREAM_COPY
 0x88E2

	)

1528 
	#GL_STATIC_DRAW
 0x88E4

	)

1529 
	#GL_STATIC_READ
 0x88E5

	)

1530 
	#GL_STATIC_COPY
 0x88E6

	)

1531 
	#GL_DYNAMIC_DRAW
 0x88E8

	)

1532 
	#GL_DYNAMIC_READ
 0x88E9

	)

1533 
	#GL_DYNAMIC_COPY
 0x88EA

	)

1534 
	#GL_SAMPLES_PASSED
 0x8914

	)

1535 
	#GL_FOG_COORD_SRC
 
GL_FOG_COORDINATE_SOURCE


	)

1536 
	#GL_FOG_COORD
 
GL_FOG_COORDINATE


	)

1537 
	#GL_CURRENT_FOG_COORD
 
GL_CURRENT_FOG_COORDINATE


	)

1538 
	#GL_FOG_COORD_ARRAY_TYPE
 
GL_FOG_COORDINATE_ARRAY_TYPE


	)

1539 
	#GL_FOG_COORD_ARRAY_STRIDE
 
GL_FOG_COORDINATE_ARRAY_STRIDE


	)

1540 
	#GL_FOG_COORD_ARRAY_POINTER
 
GL_FOG_COORDINATE_ARRAY_POINTER


	)

1541 
	#GL_FOG_COORD_ARRAY
 
GL_FOG_COORDINATE_ARRAY


	)

1542 
	#GL_FOG_COORD_ARRAY_BUFFER_BINDING
 
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING


	)

1543 
	#GL_SRC0_RGB
 
GL_SOURCE0_RGB


	)

1544 
	#GL_SRC1_RGB
 
GL_SOURCE1_RGB


	)

1545 
	#GL_SRC2_RGB
 
GL_SOURCE2_RGB


	)

1546 
	#GL_SRC0_ALPHA
 
GL_SOURCE0_ALPHA


	)

1547 
	#GL_SRC1_ALPHA
 
GL_SOURCE1_ALPHA


	)

1548 
	#GL_SRC2_ALPHA
 
GL_SOURCE2_ALPHA


	)

1549 (
APIENTRYP
 
	tPFNGLGENQUERIESPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 * 
	tids
);

1550 (
APIENTRYP
 
	tPFNGLDELETEQUERIESPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	tids
);

1551 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISQUERYPROC
Ë(
	tGLuöt
 
	tid
);

1552 (
APIENTRYP
 
	tPFNGLBEGINQUERYPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
);

1553 (
APIENTRYP
 
	tPFNGLENDQUERYPROC
Ë(
	tGLíum
 
	tèrgë
);

1554 (
APIENTRYP
 
	tPFNGLGETQUERYIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

1555 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTIVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

1556 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTUIVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, GLuöà* 
	t∑øms
);

1557 (
APIENTRYP
 
	tPFNGLBINDBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tbuf„r
);

1558 (
APIENTRYP
 
	tPFNGLDELETEBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	tbuf„rs
);

1559 (
APIENTRYP
 
	tPFNGLGENBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 * 
	tbuf„rs
);

1560 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISBUFFERPROC
Ë(
	tGLuöt
 
	tbuf„r
);

1561 (
APIENTRYP
 
	tPFNGLBUFFERDATAPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizeùå
 
	tsize
, c⁄° 
	tGLvoid
 * 
	td©a
, GLíum 
	tußge
);

1562 (
APIENTRYP
 
	tPFNGLBUFFERSUBDATAPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
, c⁄° 
	tGLvoid
 * 
	td©a
);

1563 (
APIENTRYP
 
	tPFNGLGETBUFFERSUBDATAPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
, 
	tGLvoid
 * 
	td©a
);

1564 
	gGLvoid
* (
	tAPIENTRYP
 
	tPFNGLMAPBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tac˚ss
);

1565 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLUNMAPBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
);

1566 (
APIENTRYP
 
	tPFNGLGETBUFFERPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

1567 (
APIENTRYP
 
	tPFNGLGETBUFFERPOINTERVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLvoid
* * 
	t∑øms
);

1568 
GLEE_EXTERN
 
PFNGLGENQUERIESPROC
 
	gpglGíQuîõs
;

1569 
GLEE_EXTERN
 
PFNGLDELETEQUERIESPROC
 
	gpglDñëeQuîõs
;

1570 
GLEE_EXTERN
 
PFNGLISQUERYPROC
 
	gpglIsQuîy
;

1571 
GLEE_EXTERN
 
PFNGLBEGINQUERYPROC
 
	gpglBegöQuîy
;

1572 
GLEE_EXTERN
 
PFNGLENDQUERYPROC
 
	gpglEndQuîy
;

1573 
GLEE_EXTERN
 
PFNGLGETQUERYIVPROC
 
	gpglGëQuîyiv
;

1574 
GLEE_EXTERN
 
PFNGLGETQUERYOBJECTIVPROC
 
	gpglGëQuîyObje˘iv
;

1575 
GLEE_EXTERN
 
PFNGLGETQUERYOBJECTUIVPROC
 
	gpglGëQuîyObje˘uiv
;

1576 
GLEE_EXTERN
 
PFNGLBINDBUFFERPROC
 
	gpglBödBuf„r
;

1577 
GLEE_EXTERN
 
PFNGLDELETEBUFFERSPROC
 
	gpglDñëeBuf„rs
;

1578 
GLEE_EXTERN
 
PFNGLGENBUFFERSPROC
 
	gpglGíBuf„rs
;

1579 
GLEE_EXTERN
 
PFNGLISBUFFERPROC
 
	gpglIsBuf„r
;

1580 
GLEE_EXTERN
 
PFNGLBUFFERDATAPROC
 
	gpglBuf„rD©a
;

1581 
GLEE_EXTERN
 
PFNGLBUFFERSUBDATAPROC
 
	gpglBuf„rSubD©a
;

1582 
GLEE_EXTERN
 
PFNGLGETBUFFERSUBDATAPROC
 
	gpglGëBuf„rSubD©a
;

1583 
GLEE_EXTERN
 
PFNGLMAPBUFFERPROC
 
	gpglM≠Buf„r
;

1584 
GLEE_EXTERN
 
PFNGLUNMAPBUFFERPROC
 
	gpglUnm≠Buf„r
;

1585 
GLEE_EXTERN
 
PFNGLGETBUFFERPARAMETERIVPROC
 
	gpglGëBuf„rP¨amëîiv
;

1586 
GLEE_EXTERN
 
PFNGLGETBUFFERPOINTERVPROC
 
	gpglGëBuf„rPoöãrv
;

1587 
	#glGíQuîõs
 
pglGíQuîõs


	)

1588 
	#glDñëeQuîõs
 
pglDñëeQuîõs


	)

1589 
	#glIsQuîy
 
pglIsQuîy


	)

1590 
	#glBegöQuîy
 
pglBegöQuîy


	)

1591 
	#glEndQuîy
 
pglEndQuîy


	)

1592 
	#glGëQuîyiv
 
pglGëQuîyiv


	)

1593 
	#glGëQuîyObje˘iv
 
pglGëQuîyObje˘iv


	)

1594 
	#glGëQuîyObje˘uiv
 
pglGëQuîyObje˘uiv


	)

1595 
	#glBödBuf„r
 
pglBödBuf„r


	)

1596 
	#glDñëeBuf„rs
 
pglDñëeBuf„rs


	)

1597 
	#glGíBuf„rs
 
pglGíBuf„rs


	)

1598 
	#glIsBuf„r
 
pglIsBuf„r


	)

1599 
	#glBuf„rD©a
 
pglBuf„rD©a


	)

1600 
	#glBuf„rSubD©a
 
pglBuf„rSubD©a


	)

1601 
	#glGëBuf„rSubD©a
 
pglGëBuf„rSubD©a


	)

1602 
	#glM≠Buf„r
 
pglM≠Buf„r


	)

1603 
	#glUnm≠Buf„r
 
pglUnm≠Buf„r


	)

1604 
	#glGëBuf„rP¨amëîiv
 
pglGëBuf„rP¨amëîiv


	)

1605 
	#glGëBuf„rPoöãrv
 
pglGëBuf„rPoöãrv


	)

1610 #i‚de‡
GL_VERSION_2_0


1611 
	#GL_VERSION_2_0
 1

	)

1612 
	#__GLEE_GL_VERSION_2_0
 1

	)

1614 
	#GL_BLEND_EQUATION_RGB
 
GL_BLEND_EQUATION


	)

1615 
	#GL_VERTEX_ATTRIB_ARRAY_ENABLED
 0x8622

	)

1616 
	#GL_VERTEX_ATTRIB_ARRAY_SIZE
 0x8623

	)

1617 
	#GL_VERTEX_ATTRIB_ARRAY_STRIDE
 0x8624

	)

1618 
	#GL_VERTEX_ATTRIB_ARRAY_TYPE
 0x8625

	)

1619 
	#GL_CURRENT_VERTEX_ATTRIB
 0x8626

	)

1620 
	#GL_VERTEX_PROGRAM_POINT_SIZE
 0x8642

	)

1621 
	#GL_VERTEX_PROGRAM_TWO_SIDE
 0x8643

	)

1622 
	#GL_VERTEX_ATTRIB_ARRAY_POINTER
 0x8645

	)

1623 
	#GL_STENCIL_BACK_FUNC
 0x8800

	)

1624 
	#GL_STENCIL_BACK_FAIL
 0x8801

	)

1625 
	#GL_STENCIL_BACK_PASS_DEPTH_FAIL
 0x8802

	)

1626 
	#GL_STENCIL_BACK_PASS_DEPTH_PASS
 0x8803

	)

1627 
	#GL_MAX_DRAW_BUFFERS
 0x8824

	)

1628 
	#GL_DRAW_BUFFER0
 0x8825

	)

1629 
	#GL_DRAW_BUFFER1
 0x8826

	)

1630 
	#GL_DRAW_BUFFER2
 0x8827

	)

1631 
	#GL_DRAW_BUFFER3
 0x8828

	)

1632 
	#GL_DRAW_BUFFER4
 0x8829

	)

1633 
	#GL_DRAW_BUFFER5
 0x882A

	)

1634 
	#GL_DRAW_BUFFER6
 0x882B

	)

1635 
	#GL_DRAW_BUFFER7
 0x882C

	)

1636 
	#GL_DRAW_BUFFER8
 0x882D

	)

1637 
	#GL_DRAW_BUFFER9
 0x882E

	)

1638 
	#GL_DRAW_BUFFER10
 0x882F

	)

1639 
	#GL_DRAW_BUFFER11
 0x8830

	)

1640 
	#GL_DRAW_BUFFER12
 0x8831

	)

1641 
	#GL_DRAW_BUFFER13
 0x8832

	)

1642 
	#GL_DRAW_BUFFER14
 0x8833

	)

1643 
	#GL_DRAW_BUFFER15
 0x8834

	)

1644 
	#GL_BLEND_EQUATION_ALPHA
 0x883D

	)

1645 
	#GL_POINT_SPRITE
 0x8861

	)

1646 
	#GL_COORD_REPLACE
 0x8862

	)

1647 
	#GL_MAX_VERTEX_ATTRIBS
 0x8869

	)

1648 
	#GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
 0x886A

	)

1649 
	#GL_MAX_TEXTURE_COORDS
 0x8871

	)

1650 
	#GL_MAX_TEXTURE_IMAGE_UNITS
 0x8872

	)

1651 
	#GL_FRAGMENT_SHADER
 0x8B30

	)

1652 
	#GL_VERTEX_SHADER
 0x8B31

	)

1653 
	#GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
 0x8B49

	)

1654 
	#GL_MAX_VERTEX_UNIFORM_COMPONENTS
 0x8B4A

	)

1655 
	#GL_MAX_VARYING_FLOATS
 0x8B4B

	)

1656 
	#GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
 0x8B4C

	)

1657 
	#GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
 0x8B4D

	)

1658 
	#GL_SHADER_TYPE
 0x8B4F

	)

1659 
	#GL_FLOAT_VEC2
 0x8B50

	)

1660 
	#GL_FLOAT_VEC3
 0x8B51

	)

1661 
	#GL_FLOAT_VEC4
 0x8B52

	)

1662 
	#GL_INT_VEC2
 0x8B53

	)

1663 
	#GL_INT_VEC3
 0x8B54

	)

1664 
	#GL_INT_VEC4
 0x8B55

	)

1665 
	#GL_BOOL
 0x8B56

	)

1666 
	#GL_BOOL_VEC2
 0x8B57

	)

1667 
	#GL_BOOL_VEC3
 0x8B58

	)

1668 
	#GL_BOOL_VEC4
 0x8B59

	)

1669 
	#GL_FLOAT_MAT2
 0x8B5A

	)

1670 
	#GL_FLOAT_MAT3
 0x8B5B

	)

1671 
	#GL_FLOAT_MAT4
 0x8B5C

	)

1672 
	#GL_SAMPLER_1D
 0x8B5D

	)

1673 
	#GL_SAMPLER_2D
 0x8B5E

	)

1674 
	#GL_SAMPLER_3D
 0x8B5F

	)

1675 
	#GL_SAMPLER_CUBE
 0x8B60

	)

1676 
	#GL_SAMPLER_1D_SHADOW
 0x8B61

	)

1677 
	#GL_SAMPLER_2D_SHADOW
 0x8B62

	)

1678 
	#GL_DELETE_STATUS
 0x8B80

	)

1679 
	#GL_COMPILE_STATUS
 0x8B81

	)

1680 
	#GL_LINK_STATUS
 0x8B82

	)

1681 
	#GL_VALIDATE_STATUS
 0x8B83

	)

1682 
	#GL_INFO_LOG_LENGTH
 0x8B84

	)

1683 
	#GL_ATTACHED_SHADERS
 0x8B85

	)

1684 
	#GL_ACTIVE_UNIFORMS
 0x8B86

	)

1685 
	#GL_ACTIVE_UNIFORM_MAX_LENGTH
 0x8B87

	)

1686 
	#GL_SHADER_SOURCE_LENGTH
 0x8B88

	)

1687 
	#GL_ACTIVE_ATTRIBUTES
 0x8B89

	)

1688 
	#GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
 0x8B8A

	)

1689 
	#GL_FRAGMENT_SHADER_DERIVATIVE_HINT
 0x8B8B

	)

1690 
	#GL_SHADING_LANGUAGE_VERSION
 0x8B8C

	)

1691 
	#GL_CURRENT_PROGRAM
 0x8B8D

	)

1692 
	#GL_POINT_SPRITE_COORD_ORIGIN
 0x8CA0

	)

1693 
	#GL_LOWER_LEFT
 0x8CA1

	)

1694 
	#GL_UPPER_LEFT
 0x8CA2

	)

1695 
	#GL_STENCIL_BACK_REF
 0x8CA3

	)

1696 
	#GL_STENCIL_BACK_VALUE_MASK
 0x8CA4

	)

1697 
	#GL_STENCIL_BACK_WRITEMASK
 0x8CA5

	)

1698 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONSEPARATEPROC
Ë(
	tGLíum
 
	tmodeRGB
, GLíum 
	tmodeAÕha
);

1699 (
APIENTRYP
 
	tPFNGLDRAWBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLíum
 * 
	tbufs
);

1700 (
APIENTRYP
 
	tPFNGLSTENCILOPSEPARATEPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tsÁû
, GLíum 
	tdpÁû
, GLíum 
	tdµass
);

1701 (
APIENTRYP
 
	tPFNGLSTENCILFUNCSEPARATEPROC
Ë(
	tGLíum
 
	t‰⁄tfunc
, GLíum 
	tbackfunc
, 
	tGLöt
 
	tªf
, 
	tGLuöt
 
	tmask
);

1702 (
APIENTRYP
 
	tPFNGLSTENCILMASKSEPARATEPROC
Ë(
	tGLíum
 
	tÁ˚
, 
	tGLuöt
 
	tmask
);

1703 (
APIENTRYP
 
	tPFNGLATTACHSHADERPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tshadî
);

1704 (
APIENTRYP
 
	tPFNGLBINDATTRIBLOCATIONPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, c⁄° 
	tGLch¨
 * 
	t«me
);

1705 (
APIENTRYP
 
	tPFNGLCOMPILESHADERPROC
Ë(
	tGLuöt
 
	tshadî
);

1706 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLCREATEPROGRAMPROC
) ();

1707 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLCREATESHADERPROC
Ë(
	tGLíum
 
	tty≥
);

1708 (
APIENTRYP
 
	tPFNGLDELETEPROGRAMPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

1709 (
APIENTRYP
 
	tPFNGLDELETESHADERPROC
Ë(
	tGLuöt
 
	tshadî
);

1710 (
APIENTRYP
 
	tPFNGLDETACHSHADERPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tshadî
);

1711 (
APIENTRYP
 
	tPFNGLDISABLEVERTEXATTRIBARRAYPROC
Ë(
	tGLuöt
 
	tödex
);

1712 (
APIENTRYP
 
	tPFNGLENABLEVERTEXATTRIBARRAYPROC
Ë(
	tGLuöt
 
	tödex
);

1713 (
APIENTRYP
 
	tPFNGLGETACTIVEATTRIBPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, 
	tGLsizei
 
	tbufSize
, GLsizeò* 
	tÀngth
, 
	tGLöt
 * 
	tsize
, 
	tGLíum
 * 
	tty≥
, 
	tGLch¨
 * 
	t«me
);

1714 (
APIENTRYP
 
	tPFNGLGETACTIVEUNIFORMPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, 
	tGLsizei
 
	tbufSize
, GLsizeò* 
	tÀngth
, 
	tGLöt
 * 
	tsize
, 
	tGLíum
 * 
	tty≥
, 
	tGLch¨
 * 
	t«me
);

1715 (
APIENTRYP
 
	tPFNGLGETATTACHEDSHADERSPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tmaxCou¡
, GLsizeò* 
	tcou¡
, GLuöà* 
	tobj
);

1716 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETATTRIBLOCATIONPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 * 
	t«me
);

1717 (
APIENTRYP
 
	tPFNGLGETPROGRAMIVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

1718 (
APIENTRYP
 
	tPFNGLGETPROGRAMINFOLOGPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tbufSize
, GLsizeò* 
	tÀngth
, 
	tGLch¨
 * 
	töfoLog
);

1719 (
APIENTRYP
 
	tPFNGLGETSHADERIVPROC
Ë(
	tGLuöt
 
	tshadî
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

1720 (
APIENTRYP
 
	tPFNGLGETSHADERINFOLOGPROC
Ë(
	tGLuöt
 
	tshadî
, 
	tGLsizei
 
	tbufSize
, GLsizeò* 
	tÀngth
, 
	tGLch¨
 * 
	töfoLog
);

1721 (
APIENTRYP
 
	tPFNGLGETSHADERSOURCEPROC
Ë(
	tGLuöt
 
	tshadî
, 
	tGLsizei
 
	tbufSize
, GLsizeò* 
	tÀngth
, 
	tGLch¨
 * 
	tsour˚
);

1722 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETUNIFORMLOCATIONPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 * 
	t«me
);

1723 (
APIENTRYP
 
	tPFNGLGETUNIFORMFVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 * 
	t∑øms
);

1724 (
APIENTRYP
 
	tPFNGLGETUNIFORMIVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLöà* 
	t∑øms
);

1725 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBDVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLdoubÀ
 * 
	t∑øms
);

1726 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBFVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

1727 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

1728 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBPOINTERVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLvoid
* * 
	tpoöãr
);

1729 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISPROGRAMPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

1730 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISSHADERPROC
Ë(
	tGLuöt
 
	tshadî
);

1731 (
APIENTRYP
 
	tPFNGLLINKPROGRAMPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

1732 (
APIENTRYP
 
	tPFNGLSHADERSOURCEPROC
Ë(
	tGLuöt
 
	tshadî
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLch¨
* * 
	t°rög
, c⁄° 
	tGLöt
 * 
	tÀngth
);

1733 (
APIENTRYP
 
	tPFNGLUSEPROGRAMPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

1734 (
APIENTRYP
 
	tPFNGLUNIFORM1FPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
);

1735 (
APIENTRYP
 
	tPFNGLUNIFORM2FPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
);

1736 (
APIENTRYP
 
	tPFNGLUNIFORM3FPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
);

1737 (
APIENTRYP
 
	tPFNGLUNIFORM4FPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
, GLÊﬂà
	tv3
);

1738 (
APIENTRYP
 
	tPFNGLUNIFORM1IPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
);

1739 (
APIENTRYP
 
	tPFNGLUNIFORM2IPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
);

1740 (
APIENTRYP
 
	tPFNGLUNIFORM3IPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
, GLöà
	tv2
);

1741 (
APIENTRYP
 
	tPFNGLUNIFORM4IPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
, GLöà
	tv2
, GLöà
	tv3
);

1742 (
APIENTRYP
 
	tPFNGLUNIFORM1FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

1743 (
APIENTRYP
 
	tPFNGLUNIFORM2FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

1744 (
APIENTRYP
 
	tPFNGLUNIFORM3FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

1745 (
APIENTRYP
 
	tPFNGLUNIFORM4FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

1746 (
APIENTRYP
 
	tPFNGLUNIFORM1IVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà* 
	tvÆue
);

1747 (
APIENTRYP
 
	tPFNGLUNIFORM2IVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà* 
	tvÆue
);

1748 (
APIENTRYP
 
	tPFNGLUNIFORM3IVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà* 
	tvÆue
);

1749 (
APIENTRYP
 
	tPFNGLUNIFORM4IVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà* 
	tvÆue
);

1750 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX2FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

1751 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX3FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

1752 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX4FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

1753 (
APIENTRYP
 
	tPFNGLVALIDATEPROGRAMPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

1754 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
);

1755 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

1756 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
);

1757 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

1758 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
);

1759 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 * 
	tv
);

1760 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

1761 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

1762 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

1763 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

1764 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

1765 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 * 
	tv
);

1766 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

1767 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

1768 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

1769 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

1770 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

1771 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 * 
	tv
);

1772 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NBVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 * 
	tv
);

1773 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 * 
	tv
);

1774 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NSVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 * 
	tv
);

1775 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLubyã
 
	tx
, GLubyã 
	ty
, GLubyã 
	tz
, GLubyã 
	tw
);

1776 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUBVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 * 
	tv
);

1777 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà* 
	tv
);

1778 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUSVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 * 
	tv
);

1779 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4BVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 * 
	tv
);

1780 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

1781 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

1782 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

1783 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

1784 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4IVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 * 
	tv
);

1785 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
, GLsh‹à
	tw
);

1786 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 * 
	tv
);

1787 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UBVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 * 
	tv
);

1788 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà* 
	tv
);

1789 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4USVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 * 
	tv
);

1790 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBPOINTERPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLboﬁón
 
	tn‹mÆized
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

1791 
GLEE_EXTERN
 
PFNGLBLENDEQUATIONSEPARATEPROC
 
	gpglBÀndEqu©i⁄Sï¨©e
;

1792 
GLEE_EXTERN
 
PFNGLDRAWBUFFERSPROC
 
	gpglDøwBuf„rs
;

1793 
GLEE_EXTERN
 
PFNGLSTENCILOPSEPARATEPROC
 
	gpglSãncûOpSï¨©e
;

1794 
GLEE_EXTERN
 
PFNGLSTENCILFUNCSEPARATEPROC
 
	gpglSãncûFuncSï¨©e
;

1795 
GLEE_EXTERN
 
PFNGLSTENCILMASKSEPARATEPROC
 
	gpglSãncûMaskSï¨©e
;

1796 
GLEE_EXTERN
 
PFNGLATTACHSHADERPROC
 
	gpglAâachShadî
;

1797 
GLEE_EXTERN
 
PFNGLBINDATTRIBLOCATIONPROC
 
	gpglBödAâribLoˇti⁄
;

1798 
GLEE_EXTERN
 
PFNGLCOMPILESHADERPROC
 
	gpglCompûeShadî
;

1799 
GLEE_EXTERN
 
PFNGLCREATEPROGRAMPROC
 
	gpglCª©eProgøm
;

1800 
GLEE_EXTERN
 
PFNGLCREATESHADERPROC
 
	gpglCª©eShadî
;

1801 
GLEE_EXTERN
 
PFNGLDELETEPROGRAMPROC
 
	gpglDñëeProgøm
;

1802 
GLEE_EXTERN
 
PFNGLDELETESHADERPROC
 
	gpglDñëeShadî
;

1803 
GLEE_EXTERN
 
PFNGLDETACHSHADERPROC
 
	gpglDëachShadî
;

1804 
GLEE_EXTERN
 
PFNGLDISABLEVERTEXATTRIBARRAYPROC
 
	gpglDißbÀVîãxAâribAºay
;

1805 
GLEE_EXTERN
 
PFNGLENABLEVERTEXATTRIBARRAYPROC
 
	gpglE«bÀVîãxAâribAºay
;

1806 
GLEE_EXTERN
 
PFNGLGETACTIVEATTRIBPROC
 
	gpglGëA˘iveAârib
;

1807 
GLEE_EXTERN
 
PFNGLGETACTIVEUNIFORMPROC
 
	gpglGëA˘iveUnif‹m
;

1808 
GLEE_EXTERN
 
PFNGLGETATTACHEDSHADERSPROC
 
	gpglGëAâachedShadîs
;

1809 
GLEE_EXTERN
 
PFNGLGETATTRIBLOCATIONPROC
 
	gpglGëAâribLoˇti⁄
;

1810 
GLEE_EXTERN
 
PFNGLGETPROGRAMIVPROC
 
	gpglGëProgømiv
;

1811 
GLEE_EXTERN
 
PFNGLGETPROGRAMINFOLOGPROC
 
	gpglGëProgømInfoLog
;

1812 
GLEE_EXTERN
 
PFNGLGETSHADERIVPROC
 
	gpglGëShadîiv
;

1813 
GLEE_EXTERN
 
PFNGLGETSHADERINFOLOGPROC
 
	gpglGëShadîInfoLog
;

1814 
GLEE_EXTERN
 
PFNGLGETSHADERSOURCEPROC
 
	gpglGëShadîSour˚
;

1815 
GLEE_EXTERN
 
PFNGLGETUNIFORMLOCATIONPROC
 
	gpglGëUnif‹mLoˇti⁄
;

1816 
GLEE_EXTERN
 
PFNGLGETUNIFORMFVPROC
 
	gpglGëUnif‹mfv
;

1817 
GLEE_EXTERN
 
PFNGLGETUNIFORMIVPROC
 
	gpglGëUnif‹miv
;

1818 
GLEE_EXTERN
 
PFNGLGETVERTEXATTRIBDVPROC
 
	gpglGëVîãxAâribdv
;

1819 
GLEE_EXTERN
 
PFNGLGETVERTEXATTRIBFVPROC
 
	gpglGëVîãxAâribfv
;

1820 
GLEE_EXTERN
 
PFNGLGETVERTEXATTRIBIVPROC
 
	gpglGëVîãxAâribiv
;

1821 
GLEE_EXTERN
 
PFNGLGETVERTEXATTRIBPOINTERVPROC
 
	gpglGëVîãxAâribPoöãrv
;

1822 
GLEE_EXTERN
 
PFNGLISPROGRAMPROC
 
	gpglIsProgøm
;

1823 
GLEE_EXTERN
 
PFNGLISSHADERPROC
 
	gpglIsShadî
;

1824 
GLEE_EXTERN
 
PFNGLLINKPROGRAMPROC
 
	gpglLökProgøm
;

1825 
GLEE_EXTERN
 
PFNGLSHADERSOURCEPROC
 
	gpglShadîSour˚
;

1826 
GLEE_EXTERN
 
PFNGLUSEPROGRAMPROC
 
	gpglU£Progøm
;

1827 
GLEE_EXTERN
 
PFNGLUNIFORM1FPROC
 
	gpglUnif‹m1f
;

1828 
GLEE_EXTERN
 
PFNGLUNIFORM2FPROC
 
	gpglUnif‹m2f
;

1829 
GLEE_EXTERN
 
PFNGLUNIFORM3FPROC
 
	gpglUnif‹m3f
;

1830 
GLEE_EXTERN
 
PFNGLUNIFORM4FPROC
 
	gpglUnif‹m4f
;

1831 
GLEE_EXTERN
 
PFNGLUNIFORM1IPROC
 
	gpglUnif‹m1i
;

1832 
GLEE_EXTERN
 
PFNGLUNIFORM2IPROC
 
	gpglUnif‹m2i
;

1833 
GLEE_EXTERN
 
PFNGLUNIFORM3IPROC
 
	gpglUnif‹m3i
;

1834 
GLEE_EXTERN
 
PFNGLUNIFORM4IPROC
 
	gpglUnif‹m4i
;

1835 
GLEE_EXTERN
 
PFNGLUNIFORM1FVPROC
 
	gpglUnif‹m1fv
;

1836 
GLEE_EXTERN
 
PFNGLUNIFORM2FVPROC
 
	gpglUnif‹m2fv
;

1837 
GLEE_EXTERN
 
PFNGLUNIFORM3FVPROC
 
	gpglUnif‹m3fv
;

1838 
GLEE_EXTERN
 
PFNGLUNIFORM4FVPROC
 
	gpglUnif‹m4fv
;

1839 
GLEE_EXTERN
 
PFNGLUNIFORM1IVPROC
 
	gpglUnif‹m1iv
;

1840 
GLEE_EXTERN
 
PFNGLUNIFORM2IVPROC
 
	gpglUnif‹m2iv
;

1841 
GLEE_EXTERN
 
PFNGLUNIFORM3IVPROC
 
	gpglUnif‹m3iv
;

1842 
GLEE_EXTERN
 
PFNGLUNIFORM4IVPROC
 
	gpglUnif‹m4iv
;

1843 
GLEE_EXTERN
 
PFNGLUNIFORMMATRIX2FVPROC
 
	gpglUnif‹mM©rix2fv
;

1844 
GLEE_EXTERN
 
PFNGLUNIFORMMATRIX3FVPROC
 
	gpglUnif‹mM©rix3fv
;

1845 
GLEE_EXTERN
 
PFNGLUNIFORMMATRIX4FVPROC
 
	gpglUnif‹mM©rix4fv
;

1846 
GLEE_EXTERN
 
PFNGLVALIDATEPROGRAMPROC
 
	gpglVÆid©eProgøm
;

1847 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1DPROC
 
	gpglVîãxAârib1d
;

1848 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1DVPROC
 
	gpglVîãxAârib1dv
;

1849 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1FPROC
 
	gpglVîãxAârib1f
;

1850 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1FVPROC
 
	gpglVîãxAârib1fv
;

1851 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1SPROC
 
	gpglVîãxAârib1s
;

1852 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1SVPROC
 
	gpglVîãxAârib1sv
;

1853 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2DPROC
 
	gpglVîãxAârib2d
;

1854 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2DVPROC
 
	gpglVîãxAârib2dv
;

1855 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2FPROC
 
	gpglVîãxAârib2f
;

1856 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2FVPROC
 
	gpglVîãxAârib2fv
;

1857 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2SPROC
 
	gpglVîãxAârib2s
;

1858 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2SVPROC
 
	gpglVîãxAârib2sv
;

1859 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3DPROC
 
	gpglVîãxAârib3d
;

1860 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3DVPROC
 
	gpglVîãxAârib3dv
;

1861 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3FPROC
 
	gpglVîãxAârib3f
;

1862 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3FVPROC
 
	gpglVîãxAârib3fv
;

1863 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3SPROC
 
	gpglVîãxAârib3s
;

1864 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3SVPROC
 
	gpglVîãxAârib3sv
;

1865 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4NBVPROC
 
	gpglVîãxAârib4Nbv
;

1866 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4NIVPROC
 
	gpglVîãxAârib4Niv
;

1867 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4NSVPROC
 
	gpglVîãxAârib4Nsv
;

1868 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4NUBPROC
 
	gpglVîãxAârib4Nub
;

1869 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4NUBVPROC
 
	gpglVîãxAârib4Nubv
;

1870 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4NUIVPROC
 
	gpglVîãxAârib4Nuiv
;

1871 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4NUSVPROC
 
	gpglVîãxAârib4Nusv
;

1872 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4BVPROC
 
	gpglVîãxAârib4bv
;

1873 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4DPROC
 
	gpglVîãxAârib4d
;

1874 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4DVPROC
 
	gpglVîãxAârib4dv
;

1875 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4FPROC
 
	gpglVîãxAârib4f
;

1876 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4FVPROC
 
	gpglVîãxAârib4fv
;

1877 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4IVPROC
 
	gpglVîãxAârib4iv
;

1878 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4SPROC
 
	gpglVîãxAârib4s
;

1879 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4SVPROC
 
	gpglVîãxAârib4sv
;

1880 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4UBVPROC
 
	gpglVîãxAârib4ubv
;

1881 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4UIVPROC
 
	gpglVîãxAârib4uiv
;

1882 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4USVPROC
 
	gpglVîãxAârib4usv
;

1883 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBPOINTERPROC
 
	gpglVîãxAâribPoöãr
;

1884 
	#glBÀndEqu©i⁄Sï¨©e
 
pglBÀndEqu©i⁄Sï¨©e


	)

1885 
	#glDøwBuf„rs
 
pglDøwBuf„rs


	)

1886 
	#glSãncûOpSï¨©e
 
pglSãncûOpSï¨©e


	)

1887 
	#glSãncûFuncSï¨©e
 
pglSãncûFuncSï¨©e


	)

1888 
	#glSãncûMaskSï¨©e
 
pglSãncûMaskSï¨©e


	)

1889 
	#glAâachShadî
 
pglAâachShadî


	)

1890 
	#glBödAâribLoˇti⁄
 
pglBödAâribLoˇti⁄


	)

1891 
	#glCompûeShadî
 
pglCompûeShadî


	)

1892 
	#glCª©eProgøm
 
pglCª©eProgøm


	)

1893 
	#glCª©eShadî
 
pglCª©eShadî


	)

1894 
	#glDñëeProgøm
 
pglDñëeProgøm


	)

1895 
	#glDñëeShadî
 
pglDñëeShadî


	)

1896 
	#glDëachShadî
 
pglDëachShadî


	)

1897 
	#glDißbÀVîãxAâribAºay
 
pglDißbÀVîãxAâribAºay


	)

1898 
	#glE«bÀVîãxAâribAºay
 
pglE«bÀVîãxAâribAºay


	)

1899 
	#glGëA˘iveAârib
 
pglGëA˘iveAârib


	)

1900 
	#glGëA˘iveUnif‹m
 
pglGëA˘iveUnif‹m


	)

1901 
	#glGëAâachedShadîs
 
pglGëAâachedShadîs


	)

1902 
	#glGëAâribLoˇti⁄
 
pglGëAâribLoˇti⁄


	)

1903 
	#glGëProgømiv
 
pglGëProgømiv


	)

1904 
	#glGëProgømInfoLog
 
pglGëProgømInfoLog


	)

1905 
	#glGëShadîiv
 
pglGëShadîiv


	)

1906 
	#glGëShadîInfoLog
 
pglGëShadîInfoLog


	)

1907 
	#glGëShadîSour˚
 
pglGëShadîSour˚


	)

1908 
	#glGëUnif‹mLoˇti⁄
 
pglGëUnif‹mLoˇti⁄


	)

1909 
	#glGëUnif‹mfv
 
pglGëUnif‹mfv


	)

1910 
	#glGëUnif‹miv
 
pglGëUnif‹miv


	)

1911 
	#glGëVîãxAâribdv
 
pglGëVîãxAâribdv


	)

1912 
	#glGëVîãxAâribfv
 
pglGëVîãxAâribfv


	)

1913 
	#glGëVîãxAâribiv
 
pglGëVîãxAâribiv


	)

1914 
	#glGëVîãxAâribPoöãrv
 
pglGëVîãxAâribPoöãrv


	)

1915 
	#glIsProgøm
 
pglIsProgøm


	)

1916 
	#glIsShadî
 
pglIsShadî


	)

1917 
	#glLökProgøm
 
pglLökProgøm


	)

1918 
	#glShadîSour˚
 
pglShadîSour˚


	)

1919 
	#glU£Progøm
 
pglU£Progøm


	)

1920 
	#glUnif‹m1f
 
pglUnif‹m1f


	)

1921 
	#glUnif‹m2f
 
pglUnif‹m2f


	)

1922 
	#glUnif‹m3f
 
pglUnif‹m3f


	)

1923 
	#glUnif‹m4f
 
pglUnif‹m4f


	)

1924 
	#glUnif‹m1i
 
pglUnif‹m1i


	)

1925 
	#glUnif‹m2i
 
pglUnif‹m2i


	)

1926 
	#glUnif‹m3i
 
pglUnif‹m3i


	)

1927 
	#glUnif‹m4i
 
pglUnif‹m4i


	)

1928 
	#glUnif‹m1fv
 
pglUnif‹m1fv


	)

1929 
	#glUnif‹m2fv
 
pglUnif‹m2fv


	)

1930 
	#glUnif‹m3fv
 
pglUnif‹m3fv


	)

1931 
	#glUnif‹m4fv
 
pglUnif‹m4fv


	)

1932 
	#glUnif‹m1iv
 
pglUnif‹m1iv


	)

1933 
	#glUnif‹m2iv
 
pglUnif‹m2iv


	)

1934 
	#glUnif‹m3iv
 
pglUnif‹m3iv


	)

1935 
	#glUnif‹m4iv
 
pglUnif‹m4iv


	)

1936 
	#glUnif‹mM©rix2fv
 
pglUnif‹mM©rix2fv


	)

1937 
	#glUnif‹mM©rix3fv
 
pglUnif‹mM©rix3fv


	)

1938 
	#glUnif‹mM©rix4fv
 
pglUnif‹mM©rix4fv


	)

1939 
	#glVÆid©eProgøm
 
pglVÆid©eProgøm


	)

1940 
	#glVîãxAârib1d
 
pglVîãxAârib1d


	)

1941 
	#glVîãxAârib1dv
 
pglVîãxAârib1dv


	)

1942 
	#glVîãxAârib1f
 
pglVîãxAârib1f


	)

1943 
	#glVîãxAârib1fv
 
pglVîãxAârib1fv


	)

1944 
	#glVîãxAârib1s
 
pglVîãxAârib1s


	)

1945 
	#glVîãxAârib1sv
 
pglVîãxAârib1sv


	)

1946 
	#glVîãxAârib2d
 
pglVîãxAârib2d


	)

1947 
	#glVîãxAârib2dv
 
pglVîãxAârib2dv


	)

1948 
	#glVîãxAârib2f
 
pglVîãxAârib2f


	)

1949 
	#glVîãxAârib2fv
 
pglVîãxAârib2fv


	)

1950 
	#glVîãxAârib2s
 
pglVîãxAârib2s


	)

1951 
	#glVîãxAârib2sv
 
pglVîãxAârib2sv


	)

1952 
	#glVîãxAârib3d
 
pglVîãxAârib3d


	)

1953 
	#glVîãxAârib3dv
 
pglVîãxAârib3dv


	)

1954 
	#glVîãxAârib3f
 
pglVîãxAârib3f


	)

1955 
	#glVîãxAârib3fv
 
pglVîãxAârib3fv


	)

1956 
	#glVîãxAârib3s
 
pglVîãxAârib3s


	)

1957 
	#glVîãxAârib3sv
 
pglVîãxAârib3sv


	)

1958 
	#glVîãxAârib4Nbv
 
pglVîãxAârib4Nbv


	)

1959 
	#glVîãxAârib4Niv
 
pglVîãxAârib4Niv


	)

1960 
	#glVîãxAârib4Nsv
 
pglVîãxAârib4Nsv


	)

1961 
	#glVîãxAârib4Nub
 
pglVîãxAârib4Nub


	)

1962 
	#glVîãxAârib4Nubv
 
pglVîãxAârib4Nubv


	)

1963 
	#glVîãxAârib4Nuiv
 
pglVîãxAârib4Nuiv


	)

1964 
	#glVîãxAârib4Nusv
 
pglVîãxAârib4Nusv


	)

1965 
	#glVîãxAârib4bv
 
pglVîãxAârib4bv


	)

1966 
	#glVîãxAârib4d
 
pglVîãxAârib4d


	)

1967 
	#glVîãxAârib4dv
 
pglVîãxAârib4dv


	)

1968 
	#glVîãxAârib4f
 
pglVîãxAârib4f


	)

1969 
	#glVîãxAârib4fv
 
pglVîãxAârib4fv


	)

1970 
	#glVîãxAârib4iv
 
pglVîãxAârib4iv


	)

1971 
	#glVîãxAârib4s
 
pglVîãxAârib4s


	)

1972 
	#glVîãxAârib4sv
 
pglVîãxAârib4sv


	)

1973 
	#glVîãxAârib4ubv
 
pglVîãxAârib4ubv


	)

1974 
	#glVîãxAârib4uiv
 
pglVîãxAârib4uiv


	)

1975 
	#glVîãxAârib4usv
 
pglVîãxAârib4usv


	)

1976 
	#glVîãxAâribPoöãr
 
pglVîãxAâribPoöãr


	)

1981 #i‚de‡
GL_VERSION_2_1


1982 
	#GL_VERSION_2_1
 1

	)

1983 
	#__GLEE_GL_VERSION_2_1
 1

	)

1985 
	#GL_PIXEL_PACK_BUFFER
 0x88EB

	)

1986 
	#GL_PIXEL_UNPACK_BUFFER
 0x88EC

	)

1987 
	#GL_PIXEL_PACK_BUFFER_BINDING
 0x88ED

	)

1988 
	#GL_PIXEL_UNPACK_BUFFER_BINDING
 0x88EF

	)

1989 
	#GL_SRGB
 0x8C40

	)

1990 
	#GL_SRGB8
 0x8C41

	)

1991 
	#GL_SRGB_ALPHA
 0x8C42

	)

1992 
	#GL_SRGB8_ALPHA8
 0x8C43

	)

1993 
	#GL_SLUMINANCE_ALPHA
 0x8C44

	)

1994 
	#GL_SLUMINANCE8_ALPHA8
 0x8C45

	)

1995 
	#GL_SLUMINANCE
 0x8C46

	)

1996 
	#GL_SLUMINANCE8
 0x8C47

	)

1997 
	#GL_COMPRESSED_SRGB
 0x8C48

	)

1998 
	#GL_COMPRESSED_SRGB_ALPHA
 0x8C49

	)

1999 
	#GL_COMPRESSED_SLUMINANCE
 0x8C4A

	)

2000 
	#GL_COMPRESSED_SLUMINANCE_ALPHA
 0x8C4B

	)

2001 
	#GL_FLOAT_MAT2x3
 0x8B65

	)

2002 
	#GL_FLOAT_MAT2x4
 0x8B66

	)

2003 
	#GL_FLOAT_MAT3x2
 0x8B67

	)

2004 
	#GL_FLOAT_MAT3x4
 0x8B68

	)

2005 
	#GL_FLOAT_MAT4x2
 0x8B69

	)

2006 
	#GL_FLOAT_MAT4x3
 0x8B6A

	)

2007 
	#GL_CURRENT_RASTER_SECONDARY_COLOR
 0x845F

	)

2008 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX2X3FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

2009 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX3X2FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

2010 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX2X4FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

2011 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX4X2FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

2012 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX3X4FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

2013 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX4X3FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

2014 
GLEE_EXTERN
 
PFNGLUNIFORMMATRIX2X3FVPROC
 
	gpglUnif‹mM©rix2x3fv
;

2015 
GLEE_EXTERN
 
PFNGLUNIFORMMATRIX3X2FVPROC
 
	gpglUnif‹mM©rix3x2fv
;

2016 
GLEE_EXTERN
 
PFNGLUNIFORMMATRIX2X4FVPROC
 
	gpglUnif‹mM©rix2x4fv
;

2017 
GLEE_EXTERN
 
PFNGLUNIFORMMATRIX4X2FVPROC
 
	gpglUnif‹mM©rix4x2fv
;

2018 
GLEE_EXTERN
 
PFNGLUNIFORMMATRIX3X4FVPROC
 
	gpglUnif‹mM©rix3x4fv
;

2019 
GLEE_EXTERN
 
PFNGLUNIFORMMATRIX4X3FVPROC
 
	gpglUnif‹mM©rix4x3fv
;

2020 
	#glUnif‹mM©rix2x3fv
 
pglUnif‹mM©rix2x3fv


	)

2021 
	#glUnif‹mM©rix3x2fv
 
pglUnif‹mM©rix3x2fv


	)

2022 
	#glUnif‹mM©rix2x4fv
 
pglUnif‹mM©rix2x4fv


	)

2023 
	#glUnif‹mM©rix4x2fv
 
pglUnif‹mM©rix4x2fv


	)

2024 
	#glUnif‹mM©rix3x4fv
 
pglUnif‹mM©rix3x4fv


	)

2025 
	#glUnif‹mM©rix4x3fv
 
pglUnif‹mM©rix4x3fv


	)

2030 #i‚de‡
GL_ARB_mu…ôextuª


2031 
	#GL_ARB_mu…ôextuª
 1

	)

2032 
	#__GLEE_GL_ARB_mu…ôextuª
 1

	)

2034 
	#GL_TEXTURE0_ARB
 0x84C0

	)

2035 
	#GL_TEXTURE1_ARB
 0x84C1

	)

2036 
	#GL_TEXTURE2_ARB
 0x84C2

	)

2037 
	#GL_TEXTURE3_ARB
 0x84C3

	)

2038 
	#GL_TEXTURE4_ARB
 0x84C4

	)

2039 
	#GL_TEXTURE5_ARB
 0x84C5

	)

2040 
	#GL_TEXTURE6_ARB
 0x84C6

	)

2041 
	#GL_TEXTURE7_ARB
 0x84C7

	)

2042 
	#GL_TEXTURE8_ARB
 0x84C8

	)

2043 
	#GL_TEXTURE9_ARB
 0x84C9

	)

2044 
	#GL_TEXTURE10_ARB
 0x84CA

	)

2045 
	#GL_TEXTURE11_ARB
 0x84CB

	)

2046 
	#GL_TEXTURE12_ARB
 0x84CC

	)

2047 
	#GL_TEXTURE13_ARB
 0x84CD

	)

2048 
	#GL_TEXTURE14_ARB
 0x84CE

	)

2049 
	#GL_TEXTURE15_ARB
 0x84CF

	)

2050 
	#GL_TEXTURE16_ARB
 0x84D0

	)

2051 
	#GL_TEXTURE17_ARB
 0x84D1

	)

2052 
	#GL_TEXTURE18_ARB
 0x84D2

	)

2053 
	#GL_TEXTURE19_ARB
 0x84D3

	)

2054 
	#GL_TEXTURE20_ARB
 0x84D4

	)

2055 
	#GL_TEXTURE21_ARB
 0x84D5

	)

2056 
	#GL_TEXTURE22_ARB
 0x84D6

	)

2057 
	#GL_TEXTURE23_ARB
 0x84D7

	)

2058 
	#GL_TEXTURE24_ARB
 0x84D8

	)

2059 
	#GL_TEXTURE25_ARB
 0x84D9

	)

2060 
	#GL_TEXTURE26_ARB
 0x84DA

	)

2061 
	#GL_TEXTURE27_ARB
 0x84DB

	)

2062 
	#GL_TEXTURE28_ARB
 0x84DC

	)

2063 
	#GL_TEXTURE29_ARB
 0x84DD

	)

2064 
	#GL_TEXTURE30_ARB
 0x84DE

	)

2065 
	#GL_TEXTURE31_ARB
 0x84DF

	)

2066 
	#GL_ACTIVE_TEXTURE_ARB
 0x84E0

	)

2067 
	#GL_CLIENT_ACTIVE_TEXTURE_ARB
 0x84E1

	)

2068 
	#GL_MAX_TEXTURE_UNITS_ARB
 0x84E2

	)

2069 (
APIENTRYP
 
	tPFNGLACTIVETEXTUREARBPROC
Ë(
	tGLíum
 
	tãxtuª
);

2070 (
APIENTRYP
 
	tPFNGLCLIENTACTIVETEXTUREARBPROC
Ë(
	tGLíum
 
	tãxtuª
);

2071 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
);

2072 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

2073 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
);

2074 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

2075 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
);

2076 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 * 
	tv
);

2077 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
);

2078 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 * 
	tv
);

2079 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
);

2080 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

2081 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
);

2082 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

2083 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
);

2084 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 * 
	tv
);

2085 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
);

2086 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 * 
	tv
);

2087 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
, GLdoubÀ 
	tr
);

2088 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

2089 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
);

2090 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

2091 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
, GLöà
	tr
);

2092 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 * 
	tv
);

2093 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
, GLsh‹à
	tr
);

2094 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 * 
	tv
);

2095 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
, GLdoubÀ 
	tr
, GLdoubÀ 
	tq
);

2096 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

2097 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tq
);

2098 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

2099 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
, GLöà
	tr
, GLöà
	tq
);

2100 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 * 
	tv
);

2101 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
, GLsh‹à
	tr
, GLsh‹à
	tq
);

2102 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 * 
	tv
);

2103 
GLEE_EXTERN
 
PFNGLACTIVETEXTUREARBPROC
 
	gpglA˘iveTextuªARB
;

2104 
GLEE_EXTERN
 
PFNGLCLIENTACTIVETEXTUREARBPROC
 
	gpglClõ¡A˘iveTextuªARB
;

2105 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1DARBPROC
 
	gpglMu…iTexCo‹d1dARB
;

2106 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1DVARBPROC
 
	gpglMu…iTexCo‹d1dvARB
;

2107 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1FARBPROC
 
	gpglMu…iTexCo‹d1fARB
;

2108 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1FVARBPROC
 
	gpglMu…iTexCo‹d1fvARB
;

2109 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1IARBPROC
 
	gpglMu…iTexCo‹d1iARB
;

2110 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1IVARBPROC
 
	gpglMu…iTexCo‹d1ivARB
;

2111 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1SARBPROC
 
	gpglMu…iTexCo‹d1sARB
;

2112 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1SVARBPROC
 
	gpglMu…iTexCo‹d1svARB
;

2113 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2DARBPROC
 
	gpglMu…iTexCo‹d2dARB
;

2114 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2DVARBPROC
 
	gpglMu…iTexCo‹d2dvARB
;

2115 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2FARBPROC
 
	gpglMu…iTexCo‹d2fARB
;

2116 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2FVARBPROC
 
	gpglMu…iTexCo‹d2fvARB
;

2117 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2IARBPROC
 
	gpglMu…iTexCo‹d2iARB
;

2118 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2IVARBPROC
 
	gpglMu…iTexCo‹d2ivARB
;

2119 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2SARBPROC
 
	gpglMu…iTexCo‹d2sARB
;

2120 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2SVARBPROC
 
	gpglMu…iTexCo‹d2svARB
;

2121 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3DARBPROC
 
	gpglMu…iTexCo‹d3dARB
;

2122 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3DVARBPROC
 
	gpglMu…iTexCo‹d3dvARB
;

2123 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3FARBPROC
 
	gpglMu…iTexCo‹d3fARB
;

2124 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3FVARBPROC
 
	gpglMu…iTexCo‹d3fvARB
;

2125 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3IARBPROC
 
	gpglMu…iTexCo‹d3iARB
;

2126 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3IVARBPROC
 
	gpglMu…iTexCo‹d3ivARB
;

2127 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3SARBPROC
 
	gpglMu…iTexCo‹d3sARB
;

2128 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3SVARBPROC
 
	gpglMu…iTexCo‹d3svARB
;

2129 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4DARBPROC
 
	gpglMu…iTexCo‹d4dARB
;

2130 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4DVARBPROC
 
	gpglMu…iTexCo‹d4dvARB
;

2131 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4FARBPROC
 
	gpglMu…iTexCo‹d4fARB
;

2132 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4FVARBPROC
 
	gpglMu…iTexCo‹d4fvARB
;

2133 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4IARBPROC
 
	gpglMu…iTexCo‹d4iARB
;

2134 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4IVARBPROC
 
	gpglMu…iTexCo‹d4ivARB
;

2135 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4SARBPROC
 
	gpglMu…iTexCo‹d4sARB
;

2136 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4SVARBPROC
 
	gpglMu…iTexCo‹d4svARB
;

2137 
	#glA˘iveTextuªARB
 
pglA˘iveTextuªARB


	)

2138 
	#glClõ¡A˘iveTextuªARB
 
pglClõ¡A˘iveTextuªARB


	)

2139 
	#glMu…iTexCo‹d1dARB
 
pglMu…iTexCo‹d1dARB


	)

2140 
	#glMu…iTexCo‹d1dvARB
 
pglMu…iTexCo‹d1dvARB


	)

2141 
	#glMu…iTexCo‹d1fARB
 
pglMu…iTexCo‹d1fARB


	)

2142 
	#glMu…iTexCo‹d1fvARB
 
pglMu…iTexCo‹d1fvARB


	)

2143 
	#glMu…iTexCo‹d1iARB
 
pglMu…iTexCo‹d1iARB


	)

2144 
	#glMu…iTexCo‹d1ivARB
 
pglMu…iTexCo‹d1ivARB


	)

2145 
	#glMu…iTexCo‹d1sARB
 
pglMu…iTexCo‹d1sARB


	)

2146 
	#glMu…iTexCo‹d1svARB
 
pglMu…iTexCo‹d1svARB


	)

2147 
	#glMu…iTexCo‹d2dARB
 
pglMu…iTexCo‹d2dARB


	)

2148 
	#glMu…iTexCo‹d2dvARB
 
pglMu…iTexCo‹d2dvARB


	)

2149 
	#glMu…iTexCo‹d2fARB
 
pglMu…iTexCo‹d2fARB


	)

2150 
	#glMu…iTexCo‹d2fvARB
 
pglMu…iTexCo‹d2fvARB


	)

2151 
	#glMu…iTexCo‹d2iARB
 
pglMu…iTexCo‹d2iARB


	)

2152 
	#glMu…iTexCo‹d2ivARB
 
pglMu…iTexCo‹d2ivARB


	)

2153 
	#glMu…iTexCo‹d2sARB
 
pglMu…iTexCo‹d2sARB


	)

2154 
	#glMu…iTexCo‹d2svARB
 
pglMu…iTexCo‹d2svARB


	)

2155 
	#glMu…iTexCo‹d3dARB
 
pglMu…iTexCo‹d3dARB


	)

2156 
	#glMu…iTexCo‹d3dvARB
 
pglMu…iTexCo‹d3dvARB


	)

2157 
	#glMu…iTexCo‹d3fARB
 
pglMu…iTexCo‹d3fARB


	)

2158 
	#glMu…iTexCo‹d3fvARB
 
pglMu…iTexCo‹d3fvARB


	)

2159 
	#glMu…iTexCo‹d3iARB
 
pglMu…iTexCo‹d3iARB


	)

2160 
	#glMu…iTexCo‹d3ivARB
 
pglMu…iTexCo‹d3ivARB


	)

2161 
	#glMu…iTexCo‹d3sARB
 
pglMu…iTexCo‹d3sARB


	)

2162 
	#glMu…iTexCo‹d3svARB
 
pglMu…iTexCo‹d3svARB


	)

2163 
	#glMu…iTexCo‹d4dARB
 
pglMu…iTexCo‹d4dARB


	)

2164 
	#glMu…iTexCo‹d4dvARB
 
pglMu…iTexCo‹d4dvARB


	)

2165 
	#glMu…iTexCo‹d4fARB
 
pglMu…iTexCo‹d4fARB


	)

2166 
	#glMu…iTexCo‹d4fvARB
 
pglMu…iTexCo‹d4fvARB


	)

2167 
	#glMu…iTexCo‹d4iARB
 
pglMu…iTexCo‹d4iARB


	)

2168 
	#glMu…iTexCo‹d4ivARB
 
pglMu…iTexCo‹d4ivARB


	)

2169 
	#glMu…iTexCo‹d4sARB
 
pglMu…iTexCo‹d4sARB


	)

2170 
	#glMu…iTexCo‹d4svARB
 
pglMu…iTexCo‹d4svARB


	)

2175 #i‚de‡
GL_ARB_å™•o£_m©rix


2176 
	#GL_ARB_å™•o£_m©rix
 1

	)

2177 
	#__GLEE_GL_ARB_å™•o£_m©rix
 1

	)

2179 
	#GL_TRANSPOSE_MODELVIEW_MATRIX_ARB
 0x84E3

	)

2180 
	#GL_TRANSPOSE_PROJECTION_MATRIX_ARB
 0x84E4

	)

2181 
	#GL_TRANSPOSE_TEXTURE_MATRIX_ARB
 0x84E5

	)

2182 
	#GL_TRANSPOSE_COLOR_MATRIX_ARB
 0x84E6

	)

2183 (
APIENTRYP
 
	tPFNGLLOADTRANSPOSEMATRIXFARBPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tm
);

2184 (
APIENTRYP
 
	tPFNGLLOADTRANSPOSEMATRIXDARBPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tm
);

2185 (
APIENTRYP
 
	tPFNGLMULTTRANSPOSEMATRIXFARBPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tm
);

2186 (
APIENTRYP
 
	tPFNGLMULTTRANSPOSEMATRIXDARBPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tm
);

2187 
GLEE_EXTERN
 
PFNGLLOADTRANSPOSEMATRIXFARBPROC
 
	gpglLﬂdTøn•o£M©rixfARB
;

2188 
GLEE_EXTERN
 
PFNGLLOADTRANSPOSEMATRIXDARBPROC
 
	gpglLﬂdTøn•o£M©rixdARB
;

2189 
GLEE_EXTERN
 
PFNGLMULTTRANSPOSEMATRIXFARBPROC
 
	gpglMu…Tøn•o£M©rixfARB
;

2190 
GLEE_EXTERN
 
PFNGLMULTTRANSPOSEMATRIXDARBPROC
 
	gpglMu…Tøn•o£M©rixdARB
;

2191 
	#glLﬂdTøn•o£M©rixfARB
 
pglLﬂdTøn•o£M©rixfARB


	)

2192 
	#glLﬂdTøn•o£M©rixdARB
 
pglLﬂdTøn•o£M©rixdARB


	)

2193 
	#glMu…Tøn•o£M©rixfARB
 
pglMu…Tøn•o£M©rixfARB


	)

2194 
	#glMu…Tøn•o£M©rixdARB
 
pglMu…Tøn•o£M©rixdARB


	)

2199 #i‚de‡
GL_ARB_mu…ißm∂e


2200 
	#GL_ARB_mu…ißm∂e
 1

	)

2201 
	#__GLEE_GL_ARB_mu…ißm∂e
 1

	)

2203 
	#GL_MULTISAMPLE_ARB
 0x809D

	)

2204 
	#GL_SAMPLE_ALPHA_TO_COVERAGE_ARB
 0x809E

	)

2205 
	#GL_SAMPLE_ALPHA_TO_ONE_ARB
 0x809F

	)

2206 
	#GL_SAMPLE_COVERAGE_ARB
 0x80A0

	)

2207 
	#GL_SAMPLE_BUFFERS_ARB
 0x80A8

	)

2208 
	#GL_SAMPLES_ARB
 0x80A9

	)

2209 
	#GL_SAMPLE_COVERAGE_VALUE_ARB
 0x80AA

	)

2210 
	#GL_SAMPLE_COVERAGE_INVERT_ARB
 0x80AB

	)

2211 
	#GL_MULTISAMPLE_BIT_ARB
 0x20000000

	)

2212 (
APIENTRYP
 
	tPFNGLSAMPLECOVERAGEARBPROC
Ë(
	tGL˛ampf
 
	tvÆue
, 
	tGLboﬁón
 
	tövît
);

2213 
GLEE_EXTERN
 
PFNGLSAMPLECOVERAGEARBPROC
 
	gpglSam∂eCovîageARB
;

2214 
	#glSam∂eCovîageARB
 
pglSam∂eCovîageARB


	)

2219 #i‚de‡
GL_ARB_ãxtuª_ív_add


2220 
	#GL_ARB_ãxtuª_ív_add
 1

	)

2221 
	#__GLEE_GL_ARB_ãxtuª_ív_add
 1

	)

2227 #i‚de‡
GL_ARB_ãxtuª_cube_m≠


2228 
	#GL_ARB_ãxtuª_cube_m≠
 1

	)

2229 
	#__GLEE_GL_ARB_ãxtuª_cube_m≠
 1

	)

2231 
	#GL_NORMAL_MAP_ARB
 0x8511

	)

2232 
	#GL_REFLECTION_MAP_ARB
 0x8512

	)

2233 
	#GL_TEXTURE_CUBE_MAP_ARB
 0x8513

	)

2234 
	#GL_TEXTURE_BINDING_CUBE_MAP_ARB
 0x8514

	)

2235 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
 0x8515

	)

2236 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
 0x8516

	)

2237 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
 0x8517

	)

2238 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
 0x8518

	)

2239 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
 0x8519

	)

2240 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
 0x851A

	)

2241 
	#GL_PROXY_TEXTURE_CUBE_MAP_ARB
 0x851B

	)

2242 
	#GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB
 0x851C

	)

2247 #i‚de‡
GL_ARB_ãxtuª_com¥essi⁄


2248 
	#GL_ARB_ãxtuª_com¥essi⁄
 1

	)

2249 
	#__GLEE_GL_ARB_ãxtuª_com¥essi⁄
 1

	)

2251 
	#GL_COMPRESSED_ALPHA_ARB
 0x84E9

	)

2252 
	#GL_COMPRESSED_LUMINANCE_ARB
 0x84EA

	)

2253 
	#GL_COMPRESSED_LUMINANCE_ALPHA_ARB
 0x84EB

	)

2254 
	#GL_COMPRESSED_INTENSITY_ARB
 0x84EC

	)

2255 
	#GL_COMPRESSED_RGB_ARB
 0x84ED

	)

2256 
	#GL_COMPRESSED_RGBA_ARB
 0x84EE

	)

2257 
	#GL_TEXTURE_COMPRESSION_HINT_ARB
 0x84EF

	)

2258 
	#GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
 0x86A0

	)

2259 
	#GL_TEXTURE_COMPRESSED_ARB
 0x86A1

	)

2260 
	#GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
 0x86A2

	)

2261 
	#GL_COMPRESSED_TEXTURE_FORMATS_ARB
 0x86A3

	)

2262 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE3DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 * 
	td©a
);

2263 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE2DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 * 
	td©a
);

2264 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE1DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 * 
	td©a
);

2265 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 * 
	td©a
);

2266 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 * 
	td©a
);

2267 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 * 
	td©a
);

2268 (
APIENTRYP
 
	tPFNGLGETCOMPRESSEDTEXIMAGEARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, 
	tGLvoid
 * 
	timg
);

2269 
GLEE_EXTERN
 
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC
 
	gpglCom¥es£dTexImage3DARB
;

2270 
GLEE_EXTERN
 
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC
 
	gpglCom¥es£dTexImage2DARB
;

2271 
GLEE_EXTERN
 
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC
 
	gpglCom¥es£dTexImage1DARB
;

2272 
GLEE_EXTERN
 
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC
 
	gpglCom¥es£dTexSubImage3DARB
;

2273 
GLEE_EXTERN
 
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC
 
	gpglCom¥es£dTexSubImage2DARB
;

2274 
GLEE_EXTERN
 
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC
 
	gpglCom¥es£dTexSubImage1DARB
;

2275 
GLEE_EXTERN
 
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC
 
	gpglGëCom¥es£dTexImageARB
;

2276 
	#glCom¥es£dTexImage3DARB
 
pglCom¥es£dTexImage3DARB


	)

2277 
	#glCom¥es£dTexImage2DARB
 
pglCom¥es£dTexImage2DARB


	)

2278 
	#glCom¥es£dTexImage1DARB
 
pglCom¥es£dTexImage1DARB


	)

2279 
	#glCom¥es£dTexSubImage3DARB
 
pglCom¥es£dTexSubImage3DARB


	)

2280 
	#glCom¥es£dTexSubImage2DARB
 
pglCom¥es£dTexSubImage2DARB


	)

2281 
	#glCom¥es£dTexSubImage1DARB
 
pglCom¥es£dTexSubImage1DARB


	)

2282 
	#glGëCom¥es£dTexImageARB
 
pglGëCom¥es£dTexImageARB


	)

2287 #i‚de‡
GL_ARB_ãxtuª_b‹dî_˛amp


2288 
	#GL_ARB_ãxtuª_b‹dî_˛amp
 1

	)

2289 
	#__GLEE_GL_ARB_ãxtuª_b‹dî_˛amp
 1

	)

2291 
	#GL_CLAMP_TO_BORDER_ARB
 0x812D

	)

2296 #i‚de‡
GL_ARB_poöt_∑ømëîs


2297 
	#GL_ARB_poöt_∑ømëîs
 1

	)

2298 
	#__GLEE_GL_ARB_poöt_∑ømëîs
 1

	)

2300 
	#GL_POINT_SIZE_MIN_ARB
 0x8126

	)

2301 
	#GL_POINT_SIZE_MAX_ARB
 0x8127

	)

2302 
	#GL_POINT_FADE_THRESHOLD_SIZE_ARB
 0x8128

	)

2303 
	#GL_POINT_DISTANCE_ATTENUATION_ARB
 0x8129

	)

2304 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFARBPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

2305 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFVARBPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

2306 
GLEE_EXTERN
 
PFNGLPOINTPARAMETERFARBPROC
 
	gpglPoötP¨amëîfARB
;

2307 
GLEE_EXTERN
 
PFNGLPOINTPARAMETERFVARBPROC
 
	gpglPoötP¨amëîfvARB
;

2308 
	#glPoötP¨amëîfARB
 
pglPoötP¨amëîfARB


	)

2309 
	#glPoötP¨amëîfvARB
 
pglPoötP¨amëîfvARB


	)

2314 #i‚de‡
GL_ARB_vîãx_bÀnd


2315 
	#GL_ARB_vîãx_bÀnd
 1

	)

2316 
	#__GLEE_GL_ARB_vîãx_bÀnd
 1

	)

2318 
	#GL_MAX_VERTEX_UNITS_ARB
 0x86A4

	)

2319 
	#GL_ACTIVE_VERTEX_UNITS_ARB
 0x86A5

	)

2320 
	#GL_WEIGHT_SUM_UNITY_ARB
 0x86A6

	)

2321 
	#GL_VERTEX_BLEND_ARB
 0x86A7

	)

2322 
	#GL_CURRENT_WEIGHT_ARB
 0x86A8

	)

2323 
	#GL_WEIGHT_ARRAY_TYPE_ARB
 0x86A9

	)

2324 
	#GL_WEIGHT_ARRAY_STRIDE_ARB
 0x86AA

	)

2325 
	#GL_WEIGHT_ARRAY_SIZE_ARB
 0x86AB

	)

2326 
	#GL_WEIGHT_ARRAY_POINTER_ARB
 0x86AC

	)

2327 
	#GL_WEIGHT_ARRAY_ARB
 0x86AD

	)

2328 
	#GL_MODELVIEW0_ARB
 0x1700

	)

2329 
	#GL_MODELVIEW1_ARB
 0x850A

	)

2330 
	#GL_MODELVIEW2_ARB
 0x8722

	)

2331 
	#GL_MODELVIEW3_ARB
 0x8723

	)

2332 
	#GL_MODELVIEW4_ARB
 0x8724

	)

2333 
	#GL_MODELVIEW5_ARB
 0x8725

	)

2334 
	#GL_MODELVIEW6_ARB
 0x8726

	)

2335 
	#GL_MODELVIEW7_ARB
 0x8727

	)

2336 
	#GL_MODELVIEW8_ARB
 0x8728

	)

2337 
	#GL_MODELVIEW9_ARB
 0x8729

	)

2338 
	#GL_MODELVIEW10_ARB
 0x872A

	)

2339 
	#GL_MODELVIEW11_ARB
 0x872B

	)

2340 
	#GL_MODELVIEW12_ARB
 0x872C

	)

2341 
	#GL_MODELVIEW13_ARB
 0x872D

	)

2342 
	#GL_MODELVIEW14_ARB
 0x872E

	)

2343 
	#GL_MODELVIEW15_ARB
 0x872F

	)

2344 
	#GL_MODELVIEW16_ARB
 0x8730

	)

2345 
	#GL_MODELVIEW17_ARB
 0x8731

	)

2346 
	#GL_MODELVIEW18_ARB
 0x8732

	)

2347 
	#GL_MODELVIEW19_ARB
 0x8733

	)

2348 
	#GL_MODELVIEW20_ARB
 0x8734

	)

2349 
	#GL_MODELVIEW21_ARB
 0x8735

	)

2350 
	#GL_MODELVIEW22_ARB
 0x8736

	)

2351 
	#GL_MODELVIEW23_ARB
 0x8737

	)

2352 
	#GL_MODELVIEW24_ARB
 0x8738

	)

2353 
	#GL_MODELVIEW25_ARB
 0x8739

	)

2354 
	#GL_MODELVIEW26_ARB
 0x873A

	)

2355 
	#GL_MODELVIEW27_ARB
 0x873B

	)

2356 
	#GL_MODELVIEW28_ARB
 0x873C

	)

2357 
	#GL_MODELVIEW29_ARB
 0x873D

	)

2358 
	#GL_MODELVIEW30_ARB
 0x873E

	)

2359 
	#GL_MODELVIEW31_ARB
 0x873F

	)

2360 (
APIENTRYP
 
	tPFNGLWEIGHTBVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLbyã
 * 
	tweights
);

2361 (
APIENTRYP
 
	tPFNGLWEIGHTSVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLsh‹t
 * 
	tweights
);

2362 (
APIENTRYP
 
	tPFNGLWEIGHTIVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° GLöà* 
	tweights
);

2363 (
APIENTRYP
 
	tPFNGLWEIGHTFVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLÊﬂt
 * 
	tweights
);

2364 (
APIENTRYP
 
	tPFNGLWEIGHTDVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLdoubÀ
 * 
	tweights
);

2365 (
APIENTRYP
 
	tPFNGLWEIGHTUBVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLubyã
 * 
	tweights
);

2366 (
APIENTRYP
 
	tPFNGLWEIGHTUSVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLush‹t
 * 
	tweights
);

2367 (
APIENTRYP
 
	tPFNGLWEIGHTUIVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLuöt
 * 
	tweights
);

2368 (
APIENTRYP
 
	tPFNGLWEIGHTPOINTERARBPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

2369 (
APIENTRYP
 
	tPFNGLVERTEXBLENDARBPROC
Ë(
	tGLöt
 
	tcou¡
);

2370 
GLEE_EXTERN
 
PFNGLWEIGHTBVARBPROC
 
	gpglWeightbvARB
;

2371 
GLEE_EXTERN
 
PFNGLWEIGHTSVARBPROC
 
	gpglWeightsvARB
;

2372 
GLEE_EXTERN
 
PFNGLWEIGHTIVARBPROC
 
	gpglWeightivARB
;

2373 
GLEE_EXTERN
 
PFNGLWEIGHTFVARBPROC
 
	gpglWeightfvARB
;

2374 
GLEE_EXTERN
 
PFNGLWEIGHTDVARBPROC
 
	gpglWeightdvARB
;

2375 
GLEE_EXTERN
 
PFNGLWEIGHTUBVARBPROC
 
	gpglWeightubvARB
;

2376 
GLEE_EXTERN
 
PFNGLWEIGHTUSVARBPROC
 
	gpglWeightusvARB
;

2377 
GLEE_EXTERN
 
PFNGLWEIGHTUIVARBPROC
 
	gpglWeightuivARB
;

2378 
GLEE_EXTERN
 
PFNGLWEIGHTPOINTERARBPROC
 
	gpglWeightPoöãrARB
;

2379 
GLEE_EXTERN
 
PFNGLVERTEXBLENDARBPROC
 
	gpglVîãxBÀndARB
;

2380 
	#glWeightbvARB
 
pglWeightbvARB


	)

2381 
	#glWeightsvARB
 
pglWeightsvARB


	)

2382 
	#glWeightivARB
 
pglWeightivARB


	)

2383 
	#glWeightfvARB
 
pglWeightfvARB


	)

2384 
	#glWeightdvARB
 
pglWeightdvARB


	)

2385 
	#glWeightubvARB
 
pglWeightubvARB


	)

2386 
	#glWeightusvARB
 
pglWeightusvARB


	)

2387 
	#glWeightuivARB
 
pglWeightuivARB


	)

2388 
	#glWeightPoöãrARB
 
pglWeightPoöãrARB


	)

2389 
	#glVîãxBÀndARB
 
pglVîãxBÀndARB


	)

2394 #i‚de‡
GL_ARB_m©rix_∑Àâe


2395 
	#GL_ARB_m©rix_∑Àâe
 1

	)

2396 
	#__GLEE_GL_ARB_m©rix_∑Àâe
 1

	)

2398 
	#GL_MATRIX_PALETTE_ARB
 0x8840

	)

2399 
	#GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
 0x8841

	)

2400 
	#GL_MAX_PALETTE_MATRICES_ARB
 0x8842

	)

2401 
	#GL_CURRENT_PALETTE_MATRIX_ARB
 0x8843

	)

2402 
	#GL_MATRIX_INDEX_ARRAY_ARB
 0x8844

	)

2403 
	#GL_CURRENT_MATRIX_INDEX_ARB
 0x8845

	)

2404 
	#GL_MATRIX_INDEX_ARRAY_SIZE_ARB
 0x8846

	)

2405 
	#GL_MATRIX_INDEX_ARRAY_TYPE_ARB
 0x8847

	)

2406 
	#GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
 0x8848

	)

2407 
	#GL_MATRIX_INDEX_ARRAY_POINTER_ARB
 0x8849

	)

2408 (
APIENTRYP
 
	tPFNGLCURRENTPALETTEMATRIXARBPROC
Ë(
	tGLöt
 
	tödex
);

2409 (
APIENTRYP
 
	tPFNGLMATRIXINDEXUBVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLubyã
 * 
	tödi˚s
);

2410 (
APIENTRYP
 
	tPFNGLMATRIXINDEXUSVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLush‹t
 * 
	tödi˚s
);

2411 (
APIENTRYP
 
	tPFNGLMATRIXINDEXUIVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLuöt
 * 
	tödi˚s
);

2412 (
APIENTRYP
 
	tPFNGLMATRIXINDEXPOINTERARBPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

2413 
GLEE_EXTERN
 
PFNGLCURRENTPALETTEMATRIXARBPROC
 
	gpglCuºítPÆëãM©rixARB
;

2414 
GLEE_EXTERN
 
PFNGLMATRIXINDEXUBVARBPROC
 
	gpglM©rixIndexubvARB
;

2415 
GLEE_EXTERN
 
PFNGLMATRIXINDEXUSVARBPROC
 
	gpglM©rixIndexusvARB
;

2416 
GLEE_EXTERN
 
PFNGLMATRIXINDEXUIVARBPROC
 
	gpglM©rixIndexuivARB
;

2417 
GLEE_EXTERN
 
PFNGLMATRIXINDEXPOINTERARBPROC
 
	gpglM©rixIndexPoöãrARB
;

2418 
	#glCuºítPÆëãM©rixARB
 
pglCuºítPÆëãM©rixARB


	)

2419 
	#glM©rixIndexubvARB
 
pglM©rixIndexubvARB


	)

2420 
	#glM©rixIndexusvARB
 
pglM©rixIndexusvARB


	)

2421 
	#glM©rixIndexuivARB
 
pglM©rixIndexuivARB


	)

2422 
	#glM©rixIndexPoöãrARB
 
pglM©rixIndexPoöãrARB


	)

2427 #i‚de‡
GL_ARB_ãxtuª_ív_comböe


2428 
	#GL_ARB_ãxtuª_ív_comböe
 1

	)

2429 
	#__GLEE_GL_ARB_ãxtuª_ív_comböe
 1

	)

2431 
	#GL_COMBINE_ARB
 0x8570

	)

2432 
	#GL_COMBINE_RGB_ARB
 0x8571

	)

2433 
	#GL_COMBINE_ALPHA_ARB
 0x8572

	)

2434 
	#GL_SOURCE0_RGB_ARB
 0x8580

	)

2435 
	#GL_SOURCE1_RGB_ARB
 0x8581

	)

2436 
	#GL_SOURCE2_RGB_ARB
 0x8582

	)

2437 
	#GL_SOURCE0_ALPHA_ARB
 0x8588

	)

2438 
	#GL_SOURCE1_ALPHA_ARB
 0x8589

	)

2439 
	#GL_SOURCE2_ALPHA_ARB
 0x858A

	)

2440 
	#GL_OPERAND0_RGB_ARB
 0x8590

	)

2441 
	#GL_OPERAND1_RGB_ARB
 0x8591

	)

2442 
	#GL_OPERAND2_RGB_ARB
 0x8592

	)

2443 
	#GL_OPERAND0_ALPHA_ARB
 0x8598

	)

2444 
	#GL_OPERAND1_ALPHA_ARB
 0x8599

	)

2445 
	#GL_OPERAND2_ALPHA_ARB
 0x859A

	)

2446 
	#GL_RGB_SCALE_ARB
 0x8573

	)

2447 
	#GL_ADD_SIGNED_ARB
 0x8574

	)

2448 
	#GL_INTERPOLATE_ARB
 0x8575

	)

2449 
	#GL_SUBTRACT_ARB
 0x84E7

	)

2450 
	#GL_CONSTANT_ARB
 0x8576

	)

2451 
	#GL_PRIMARY_COLOR_ARB
 0x8577

	)

2452 
	#GL_PREVIOUS_ARB
 0x8578

	)

2457 #i‚de‡
GL_ARB_ãxtuª_ív_¸ossb¨


2458 
	#GL_ARB_ãxtuª_ív_¸ossb¨
 1

	)

2459 
	#__GLEE_GL_ARB_ãxtuª_ív_¸ossb¨
 1

	)

2465 #i‚de‡
GL_ARB_ãxtuª_ív_dŸ3


2466 
	#GL_ARB_ãxtuª_ív_dŸ3
 1

	)

2467 
	#__GLEE_GL_ARB_ãxtuª_ív_dŸ3
 1

	)

2469 
	#GL_DOT3_RGB_ARB
 0x86AE

	)

2470 
	#GL_DOT3_RGBA_ARB
 0x86AF

	)

2475 #i‚de‡
GL_ARB_ãxtuª_múr‹ed_ª≥©


2476 
	#GL_ARB_ãxtuª_múr‹ed_ª≥©
 1

	)

2477 
	#__GLEE_GL_ARB_ãxtuª_múr‹ed_ª≥©
 1

	)

2479 
	#GL_MIRRORED_REPEAT_ARB
 0x8370

	)

2484 #i‚de‡
GL_ARB_dïth_ãxtuª


2485 
	#GL_ARB_dïth_ãxtuª
 1

	)

2486 
	#__GLEE_GL_ARB_dïth_ãxtuª
 1

	)

2488 
	#GL_DEPTH_COMPONENT16_ARB
 0x81A5

	)

2489 
	#GL_DEPTH_COMPONENT24_ARB
 0x81A6

	)

2490 
	#GL_DEPTH_COMPONENT32_ARB
 0x81A7

	)

2491 
	#GL_TEXTURE_DEPTH_SIZE_ARB
 0x884A

	)

2492 
	#GL_DEPTH_TEXTURE_MODE_ARB
 0x884B

	)

2497 #i‚de‡
GL_ARB_shadow


2498 
	#GL_ARB_shadow
 1

	)

2499 
	#__GLEE_GL_ARB_shadow
 1

	)

2501 
	#GL_TEXTURE_COMPARE_MODE_ARB
 0x884C

	)

2502 
	#GL_TEXTURE_COMPARE_FUNC_ARB
 0x884D

	)

2503 
	#GL_COMPARE_R_TO_TEXTURE_ARB
 0x884E

	)

2508 #i‚de‡
GL_ARB_shadow_ambõ¡


2509 
	#GL_ARB_shadow_ambõ¡
 1

	)

2510 
	#__GLEE_GL_ARB_shadow_ambõ¡
 1

	)

2512 
	#GL_TEXTURE_COMPARE_FAIL_VALUE_ARB
 0x80BF

	)

2517 #i‚de‡
GL_ARB_wödow_pos


2518 
	#GL_ARB_wödow_pos
 1

	)

2519 
	#__GLEE_GL_ARB_wödow_pos
 1

	)

2521 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DARBPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

2522 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DVARBPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tv
);

2523 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FARBPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

2524 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FVARBPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tv
);

2525 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IARBPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
);

2526 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IVARBPROC
Ë(c⁄° 
	tGLöt
 * 
	tv
);

2527 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SARBPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

2528 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SVARBPROC
Ë(c⁄° 
	tGLsh‹t
 * 
	tv
);

2529 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DARBPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

2530 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DVARBPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tv
);

2531 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FARBPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

2532 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FVARBPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tv
);

2533 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IARBPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

2534 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IVARBPROC
Ë(c⁄° 
	tGLöt
 * 
	tv
);

2535 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SARBPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

2536 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SVARBPROC
Ë(c⁄° 
	tGLsh‹t
 * 
	tv
);

2537 
GLEE_EXTERN
 
PFNGLWINDOWPOS2DARBPROC
 
	gpglWödowPos2dARB
;

2538 
GLEE_EXTERN
 
PFNGLWINDOWPOS2DVARBPROC
 
	gpglWödowPos2dvARB
;

2539 
GLEE_EXTERN
 
PFNGLWINDOWPOS2FARBPROC
 
	gpglWödowPos2fARB
;

2540 
GLEE_EXTERN
 
PFNGLWINDOWPOS2FVARBPROC
 
	gpglWödowPos2fvARB
;

2541 
GLEE_EXTERN
 
PFNGLWINDOWPOS2IARBPROC
 
	gpglWödowPos2iARB
;

2542 
GLEE_EXTERN
 
PFNGLWINDOWPOS2IVARBPROC
 
	gpglWödowPos2ivARB
;

2543 
GLEE_EXTERN
 
PFNGLWINDOWPOS2SARBPROC
 
	gpglWödowPos2sARB
;

2544 
GLEE_EXTERN
 
PFNGLWINDOWPOS2SVARBPROC
 
	gpglWödowPos2svARB
;

2545 
GLEE_EXTERN
 
PFNGLWINDOWPOS3DARBPROC
 
	gpglWödowPos3dARB
;

2546 
GLEE_EXTERN
 
PFNGLWINDOWPOS3DVARBPROC
 
	gpglWödowPos3dvARB
;

2547 
GLEE_EXTERN
 
PFNGLWINDOWPOS3FARBPROC
 
	gpglWödowPos3fARB
;

2548 
GLEE_EXTERN
 
PFNGLWINDOWPOS3FVARBPROC
 
	gpglWödowPos3fvARB
;

2549 
GLEE_EXTERN
 
PFNGLWINDOWPOS3IARBPROC
 
	gpglWödowPos3iARB
;

2550 
GLEE_EXTERN
 
PFNGLWINDOWPOS3IVARBPROC
 
	gpglWödowPos3ivARB
;

2551 
GLEE_EXTERN
 
PFNGLWINDOWPOS3SARBPROC
 
	gpglWödowPos3sARB
;

2552 
GLEE_EXTERN
 
PFNGLWINDOWPOS3SVARBPROC
 
	gpglWödowPos3svARB
;

2553 
	#glWödowPos2dARB
 
pglWödowPos2dARB


	)

2554 
	#glWödowPos2dvARB
 
pglWödowPos2dvARB


	)

2555 
	#glWödowPos2fARB
 
pglWödowPos2fARB


	)

2556 
	#glWödowPos2fvARB
 
pglWödowPos2fvARB


	)

2557 
	#glWödowPos2iARB
 
pglWödowPos2iARB


	)

2558 
	#glWödowPos2ivARB
 
pglWödowPos2ivARB


	)

2559 
	#glWödowPos2sARB
 
pglWödowPos2sARB


	)

2560 
	#glWödowPos2svARB
 
pglWödowPos2svARB


	)

2561 
	#glWödowPos3dARB
 
pglWödowPos3dARB


	)

2562 
	#glWödowPos3dvARB
 
pglWödowPos3dvARB


	)

2563 
	#glWödowPos3fARB
 
pglWödowPos3fARB


	)

2564 
	#glWödowPos3fvARB
 
pglWödowPos3fvARB


	)

2565 
	#glWödowPos3iARB
 
pglWödowPos3iARB


	)

2566 
	#glWödowPos3ivARB
 
pglWödowPos3ivARB


	)

2567 
	#glWödowPos3sARB
 
pglWödowPos3sARB


	)

2568 
	#glWödowPos3svARB
 
pglWödowPos3svARB


	)

2573 #i‚de‡
GL_ARB_vîãx_¥ogøm


2574 
	#GL_ARB_vîãx_¥ogøm
 1

	)

2575 
	#__GLEE_GL_ARB_vîãx_¥ogøm
 1

	)

2577 
	#GL_COLOR_SUM_ARB
 0x8458

	)

2578 
	#GL_VERTEX_PROGRAM_ARB
 0x8620

	)

2579 
	#GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB
 0x8622

	)

2580 
	#GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB
 0x8623

	)

2581 
	#GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB
 0x8624

	)

2582 
	#GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB
 0x8625

	)

2583 
	#GL_CURRENT_VERTEX_ATTRIB_ARB
 0x8626

	)

2584 
	#GL_PROGRAM_LENGTH_ARB
 0x8627

	)

2585 
	#GL_PROGRAM_STRING_ARB
 0x8628

	)

2586 
	#GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB
 0x862E

	)

2587 
	#GL_MAX_PROGRAM_MATRICES_ARB
 0x862F

	)

2588 
	#GL_CURRENT_MATRIX_STACK_DEPTH_ARB
 0x8640

	)

2589 
	#GL_CURRENT_MATRIX_ARB
 0x8641

	)

2590 
	#GL_VERTEX_PROGRAM_POINT_SIZE_ARB
 0x8642

	)

2591 
	#GL_VERTEX_PROGRAM_TWO_SIDE_ARB
 0x8643

	)

2592 
	#GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB
 0x8645

	)

2593 
	#GL_PROGRAM_ERROR_POSITION_ARB
 0x864B

	)

2594 
	#GL_PROGRAM_BINDING_ARB
 0x8677

	)

2595 
	#GL_MAX_VERTEX_ATTRIBS_ARB
 0x8869

	)

2596 
	#GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB
 0x886A

	)

2597 
	#GL_PROGRAM_ERROR_STRING_ARB
 0x8874

	)

2598 
	#GL_PROGRAM_FORMAT_ASCII_ARB
 0x8875

	)

2599 
	#GL_PROGRAM_FORMAT_ARB
 0x8876

	)

2600 
	#GL_PROGRAM_INSTRUCTIONS_ARB
 0x88A0

	)

2601 
	#GL_MAX_PROGRAM_INSTRUCTIONS_ARB
 0x88A1

	)

2602 
	#GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB
 0x88A2

	)

2603 
	#GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB
 0x88A3

	)

2604 
	#GL_PROGRAM_TEMPORARIES_ARB
 0x88A4

	)

2605 
	#GL_MAX_PROGRAM_TEMPORARIES_ARB
 0x88A5

	)

2606 
	#GL_PROGRAM_NATIVE_TEMPORARIES_ARB
 0x88A6

	)

2607 
	#GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB
 0x88A7

	)

2608 
	#GL_PROGRAM_PARAMETERS_ARB
 0x88A8

	)

2609 
	#GL_MAX_PROGRAM_PARAMETERS_ARB
 0x88A9

	)

2610 
	#GL_PROGRAM_NATIVE_PARAMETERS_ARB
 0x88AA

	)

2611 
	#GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB
 0x88AB

	)

2612 
	#GL_PROGRAM_ATTRIBS_ARB
 0x88AC

	)

2613 
	#GL_MAX_PROGRAM_ATTRIBS_ARB
 0x88AD

	)

2614 
	#GL_PROGRAM_NATIVE_ATTRIBS_ARB
 0x88AE

	)

2615 
	#GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB
 0x88AF

	)

2616 
	#GL_PROGRAM_ADDRESS_REGISTERS_ARB
 0x88B0

	)

2617 
	#GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB
 0x88B1

	)

2618 
	#GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
 0x88B2

	)

2619 
	#GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
 0x88B3

	)

2620 
	#GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB
 0x88B4

	)

2621 
	#GL_MAX_PROGRAM_ENV_PARAMETERS_ARB
 0x88B5

	)

2622 
	#GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB
 0x88B6

	)

2623 
	#GL_TRANSPOSE_CURRENT_MATRIX_ARB
 0x88B7

	)

2624 
	#GL_MATRIX0_ARB
 0x88C0

	)

2625 
	#GL_MATRIX1_ARB
 0x88C1

	)

2626 
	#GL_MATRIX2_ARB
 0x88C2

	)

2627 
	#GL_MATRIX3_ARB
 0x88C3

	)

2628 
	#GL_MATRIX4_ARB
 0x88C4

	)

2629 
	#GL_MATRIX5_ARB
 0x88C5

	)

2630 
	#GL_MATRIX6_ARB
 0x88C6

	)

2631 
	#GL_MATRIX7_ARB
 0x88C7

	)

2632 
	#GL_MATRIX8_ARB
 0x88C8

	)

2633 
	#GL_MATRIX9_ARB
 0x88C9

	)

2634 
	#GL_MATRIX10_ARB
 0x88CA

	)

2635 
	#GL_MATRIX11_ARB
 0x88CB

	)

2636 
	#GL_MATRIX12_ARB
 0x88CC

	)

2637 
	#GL_MATRIX13_ARB
 0x88CD

	)

2638 
	#GL_MATRIX14_ARB
 0x88CE

	)

2639 
	#GL_MATRIX15_ARB
 0x88CF

	)

2640 
	#GL_MATRIX16_ARB
 0x88D0

	)

2641 
	#GL_MATRIX17_ARB
 0x88D1

	)

2642 
	#GL_MATRIX18_ARB
 0x88D2

	)

2643 
	#GL_MATRIX19_ARB
 0x88D3

	)

2644 
	#GL_MATRIX20_ARB
 0x88D4

	)

2645 
	#GL_MATRIX21_ARB
 0x88D5

	)

2646 
	#GL_MATRIX22_ARB
 0x88D6

	)

2647 
	#GL_MATRIX23_ARB
 0x88D7

	)

2648 
	#GL_MATRIX24_ARB
 0x88D8

	)

2649 
	#GL_MATRIX25_ARB
 0x88D9

	)

2650 
	#GL_MATRIX26_ARB
 0x88DA

	)

2651 
	#GL_MATRIX27_ARB
 0x88DB

	)

2652 
	#GL_MATRIX28_ARB
 0x88DC

	)

2653 
	#GL_MATRIX29_ARB
 0x88DD

	)

2654 
	#GL_MATRIX30_ARB
 0x88DE

	)

2655 
	#GL_MATRIX31_ARB
 0x88DF

	)

2656 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
);

2657 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

2658 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
);

2659 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

2660 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
);

2661 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 * 
	tv
);

2662 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

2663 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

2664 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

2665 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

2666 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

2667 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 * 
	tv
);

2668 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

2669 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

2670 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

2671 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

2672 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

2673 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 * 
	tv
);

2674 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NBVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 * 
	tv
);

2675 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NIVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 * 
	tv
);

2676 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NSVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 * 
	tv
);

2677 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUBARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLubyã
 
	tx
, GLubyã 
	ty
, GLubyã 
	tz
, GLubyã 
	tw
);

2678 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUBVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 * 
	tv
);

2679 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUIVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà* 
	tv
);

2680 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUSVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 * 
	tv
);

2681 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4BVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 * 
	tv
);

2682 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

2683 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

2684 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

2685 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

2686 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4IVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 * 
	tv
);

2687 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
, GLsh‹à
	tw
);

2688 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 * 
	tv
);

2689 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UBVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 * 
	tv
);

2690 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UIVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà* 
	tv
);

2691 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4USVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 * 
	tv
);

2692 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBPOINTERARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLboﬁón
 
	tn‹mÆized
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

2693 (
APIENTRYP
 
	tPFNGLENABLEVERTEXATTRIBARRAYARBPROC
Ë(
	tGLuöt
 
	tödex
);

2694 (
APIENTRYP
 
	tPFNGLDISABLEVERTEXATTRIBARRAYARBPROC
Ë(
	tGLuöt
 
	tödex
);

2695 (
APIENTRYP
 
	tPFNGLPROGRAMSTRINGARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLvoid
 * 
	t°rög
);

2696 (
APIENTRYP
 
	tPFNGLBINDPROGRAMARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	t¥ogøm
);

2697 (
APIENTRYP
 
	tPFNGLDELETEPROGRAMSARBPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	t¥ogøms
);

2698 (
APIENTRYP
 
	tPFNGLGENPROGRAMSARBPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 * 
	t¥ogøms
);

2699 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETER4DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

2700 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETER4DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 * 
	t∑øms
);

2701 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETER4FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

2702 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETER4FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

2703 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETER4DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

2704 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETER4DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 * 
	t∑øms
);

2705 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETER4FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

2706 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETER4FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

2707 (
APIENTRYP
 
	tPFNGLGETPROGRAMENVPARAMETERDVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 * 
	t∑øms
);

2708 (
APIENTRYP
 
	tPFNGLGETPROGRAMENVPARAMETERFVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 * 
	t∑øms
);

2709 (
APIENTRYP
 
	tPFNGLGETPROGRAMLOCALPARAMETERDVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 * 
	t∑øms
);

2710 (
APIENTRYP
 
	tPFNGLGETPROGRAMLOCALPARAMETERFVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 * 
	t∑øms
);

2711 (
APIENTRYP
 
	tPFNGLGETPROGRAMIVARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

2712 (
APIENTRYP
 
	tPFNGLGETPROGRAMSTRINGARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLvoid
 * 
	t°rög
);

2713 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBDVARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLdoubÀ
 * 
	t∑øms
);

2714 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBFVARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

2715 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIVARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

2716 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBPOINTERVARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLvoid
* * 
	tpoöãr
);

2717 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISPROGRAMARBPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

2718 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1DARBPROC
 
	gpglVîãxAârib1dARB
;

2719 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1DVARBPROC
 
	gpglVîãxAârib1dvARB
;

2720 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1FARBPROC
 
	gpglVîãxAârib1fARB
;

2721 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1FVARBPROC
 
	gpglVîãxAârib1fvARB
;

2722 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1SARBPROC
 
	gpglVîãxAârib1sARB
;

2723 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1SVARBPROC
 
	gpglVîãxAârib1svARB
;

2724 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2DARBPROC
 
	gpglVîãxAârib2dARB
;

2725 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2DVARBPROC
 
	gpglVîãxAârib2dvARB
;

2726 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2FARBPROC
 
	gpglVîãxAârib2fARB
;

2727 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2FVARBPROC
 
	gpglVîãxAârib2fvARB
;

2728 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2SARBPROC
 
	gpglVîãxAârib2sARB
;

2729 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2SVARBPROC
 
	gpglVîãxAârib2svARB
;

2730 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3DARBPROC
 
	gpglVîãxAârib3dARB
;

2731 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3DVARBPROC
 
	gpglVîãxAârib3dvARB
;

2732 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3FARBPROC
 
	gpglVîãxAârib3fARB
;

2733 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3FVARBPROC
 
	gpglVîãxAârib3fvARB
;

2734 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3SARBPROC
 
	gpglVîãxAârib3sARB
;

2735 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3SVARBPROC
 
	gpglVîãxAârib3svARB
;

2736 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4NBVARBPROC
 
	gpglVîãxAârib4NbvARB
;

2737 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4NIVARBPROC
 
	gpglVîãxAârib4NivARB
;

2738 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4NSVARBPROC
 
	gpglVîãxAârib4NsvARB
;

2739 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4NUBARBPROC
 
	gpglVîãxAârib4NubARB
;

2740 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4NUBVARBPROC
 
	gpglVîãxAârib4NubvARB
;

2741 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4NUIVARBPROC
 
	gpglVîãxAârib4NuivARB
;

2742 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4NUSVARBPROC
 
	gpglVîãxAârib4NusvARB
;

2743 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4BVARBPROC
 
	gpglVîãxAârib4bvARB
;

2744 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4DARBPROC
 
	gpglVîãxAârib4dARB
;

2745 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4DVARBPROC
 
	gpglVîãxAârib4dvARB
;

2746 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4FARBPROC
 
	gpglVîãxAârib4fARB
;

2747 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4FVARBPROC
 
	gpglVîãxAârib4fvARB
;

2748 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4IVARBPROC
 
	gpglVîãxAârib4ivARB
;

2749 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4SARBPROC
 
	gpglVîãxAârib4sARB
;

2750 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4SVARBPROC
 
	gpglVîãxAârib4svARB
;

2751 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4UBVARBPROC
 
	gpglVîãxAârib4ubvARB
;

2752 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4UIVARBPROC
 
	gpglVîãxAârib4uivARB
;

2753 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4USVARBPROC
 
	gpglVîãxAârib4usvARB
;

2754 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBPOINTERARBPROC
 
	gpglVîãxAâribPoöãrARB
;

2755 
GLEE_EXTERN
 
PFNGLENABLEVERTEXATTRIBARRAYARBPROC
 
	gpglE«bÀVîãxAâribAºayARB
;

2756 
GLEE_EXTERN
 
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC
 
	gpglDißbÀVîãxAâribAºayARB
;

2757 
GLEE_EXTERN
 
PFNGLPROGRAMSTRINGARBPROC
 
	gpglProgømSåögARB
;

2758 
GLEE_EXTERN
 
PFNGLBINDPROGRAMARBPROC
 
	gpglBödProgømARB
;

2759 
GLEE_EXTERN
 
PFNGLDELETEPROGRAMSARBPROC
 
	gpglDñëeProgømsARB
;

2760 
GLEE_EXTERN
 
PFNGLGENPROGRAMSARBPROC
 
	gpglGíProgømsARB
;

2761 
GLEE_EXTERN
 
PFNGLPROGRAMENVPARAMETER4DARBPROC
 
	gpglProgømEnvP¨amëî4dARB
;

2762 
GLEE_EXTERN
 
PFNGLPROGRAMENVPARAMETER4DVARBPROC
 
	gpglProgømEnvP¨amëî4dvARB
;

2763 
GLEE_EXTERN
 
PFNGLPROGRAMENVPARAMETER4FARBPROC
 
	gpglProgømEnvP¨amëî4fARB
;

2764 
GLEE_EXTERN
 
PFNGLPROGRAMENVPARAMETER4FVARBPROC
 
	gpglProgømEnvP¨amëî4fvARB
;

2765 
GLEE_EXTERN
 
PFNGLPROGRAMLOCALPARAMETER4DARBPROC
 
	gpglProgømLoˇlP¨amëî4dARB
;

2766 
GLEE_EXTERN
 
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC
 
	gpglProgømLoˇlP¨amëî4dvARB
;

2767 
GLEE_EXTERN
 
PFNGLPROGRAMLOCALPARAMETER4FARBPROC
 
	gpglProgømLoˇlP¨amëî4fARB
;

2768 
GLEE_EXTERN
 
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC
 
	gpglProgømLoˇlP¨amëî4fvARB
;

2769 
GLEE_EXTERN
 
PFNGLGETPROGRAMENVPARAMETERDVARBPROC
 
	gpglGëProgømEnvP¨amëîdvARB
;

2770 
GLEE_EXTERN
 
PFNGLGETPROGRAMENVPARAMETERFVARBPROC
 
	gpglGëProgømEnvP¨amëîfvARB
;

2771 
GLEE_EXTERN
 
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC
 
	gpglGëProgømLoˇlP¨amëîdvARB
;

2772 
GLEE_EXTERN
 
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC
 
	gpglGëProgømLoˇlP¨amëîfvARB
;

2773 
GLEE_EXTERN
 
PFNGLGETPROGRAMIVARBPROC
 
	gpglGëProgømivARB
;

2774 
GLEE_EXTERN
 
PFNGLGETPROGRAMSTRINGARBPROC
 
	gpglGëProgømSåögARB
;

2775 
GLEE_EXTERN
 
PFNGLGETVERTEXATTRIBDVARBPROC
 
	gpglGëVîãxAâribdvARB
;

2776 
GLEE_EXTERN
 
PFNGLGETVERTEXATTRIBFVARBPROC
 
	gpglGëVîãxAâribfvARB
;

2777 
GLEE_EXTERN
 
PFNGLGETVERTEXATTRIBIVARBPROC
 
	gpglGëVîãxAâribivARB
;

2778 
GLEE_EXTERN
 
PFNGLGETVERTEXATTRIBPOINTERVARBPROC
 
	gpglGëVîãxAâribPoöãrvARB
;

2779 
GLEE_EXTERN
 
PFNGLISPROGRAMARBPROC
 
	gpglIsProgømARB
;

2780 
	#glVîãxAârib1dARB
 
pglVîãxAârib1dARB


	)

2781 
	#glVîãxAârib1dvARB
 
pglVîãxAârib1dvARB


	)

2782 
	#glVîãxAârib1fARB
 
pglVîãxAârib1fARB


	)

2783 
	#glVîãxAârib1fvARB
 
pglVîãxAârib1fvARB


	)

2784 
	#glVîãxAârib1sARB
 
pglVîãxAârib1sARB


	)

2785 
	#glVîãxAârib1svARB
 
pglVîãxAârib1svARB


	)

2786 
	#glVîãxAârib2dARB
 
pglVîãxAârib2dARB


	)

2787 
	#glVîãxAârib2dvARB
 
pglVîãxAârib2dvARB


	)

2788 
	#glVîãxAârib2fARB
 
pglVîãxAârib2fARB


	)

2789 
	#glVîãxAârib2fvARB
 
pglVîãxAârib2fvARB


	)

2790 
	#glVîãxAârib2sARB
 
pglVîãxAârib2sARB


	)

2791 
	#glVîãxAârib2svARB
 
pglVîãxAârib2svARB


	)

2792 
	#glVîãxAârib3dARB
 
pglVîãxAârib3dARB


	)

2793 
	#glVîãxAârib3dvARB
 
pglVîãxAârib3dvARB


	)

2794 
	#glVîãxAârib3fARB
 
pglVîãxAârib3fARB


	)

2795 
	#glVîãxAârib3fvARB
 
pglVîãxAârib3fvARB


	)

2796 
	#glVîãxAârib3sARB
 
pglVîãxAârib3sARB


	)

2797 
	#glVîãxAârib3svARB
 
pglVîãxAârib3svARB


	)

2798 
	#glVîãxAârib4NbvARB
 
pglVîãxAârib4NbvARB


	)

2799 
	#glVîãxAârib4NivARB
 
pglVîãxAârib4NivARB


	)

2800 
	#glVîãxAârib4NsvARB
 
pglVîãxAârib4NsvARB


	)

2801 
	#glVîãxAârib4NubARB
 
pglVîãxAârib4NubARB


	)

2802 
	#glVîãxAârib4NubvARB
 
pglVîãxAârib4NubvARB


	)

2803 
	#glVîãxAârib4NuivARB
 
pglVîãxAârib4NuivARB


	)

2804 
	#glVîãxAârib4NusvARB
 
pglVîãxAârib4NusvARB


	)

2805 
	#glVîãxAârib4bvARB
 
pglVîãxAârib4bvARB


	)

2806 
	#glVîãxAârib4dARB
 
pglVîãxAârib4dARB


	)

2807 
	#glVîãxAârib4dvARB
 
pglVîãxAârib4dvARB


	)

2808 
	#glVîãxAârib4fARB
 
pglVîãxAârib4fARB


	)

2809 
	#glVîãxAârib4fvARB
 
pglVîãxAârib4fvARB


	)

2810 
	#glVîãxAârib4ivARB
 
pglVîãxAârib4ivARB


	)

2811 
	#glVîãxAârib4sARB
 
pglVîãxAârib4sARB


	)

2812 
	#glVîãxAârib4svARB
 
pglVîãxAârib4svARB


	)

2813 
	#glVîãxAârib4ubvARB
 
pglVîãxAârib4ubvARB


	)

2814 
	#glVîãxAârib4uivARB
 
pglVîãxAârib4uivARB


	)

2815 
	#glVîãxAârib4usvARB
 
pglVîãxAârib4usvARB


	)

2816 
	#glVîãxAâribPoöãrARB
 
pglVîãxAâribPoöãrARB


	)

2817 
	#glE«bÀVîãxAâribAºayARB
 
pglE«bÀVîãxAâribAºayARB


	)

2818 
	#glDißbÀVîãxAâribAºayARB
 
pglDißbÀVîãxAâribAºayARB


	)

2819 
	#glProgømSåögARB
 
pglProgømSåögARB


	)

2820 
	#glBödProgømARB
 
pglBödProgømARB


	)

2821 
	#glDñëeProgømsARB
 
pglDñëeProgømsARB


	)

2822 
	#glGíProgømsARB
 
pglGíProgømsARB


	)

2823 
	#glProgømEnvP¨amëî4dARB
 
pglProgømEnvP¨amëî4dARB


	)

2824 
	#glProgømEnvP¨amëî4dvARB
 
pglProgømEnvP¨amëî4dvARB


	)

2825 
	#glProgømEnvP¨amëî4fARB
 
pglProgømEnvP¨amëî4fARB


	)

2826 
	#glProgømEnvP¨amëî4fvARB
 
pglProgømEnvP¨amëî4fvARB


	)

2827 
	#glProgømLoˇlP¨amëî4dARB
 
pglProgømLoˇlP¨amëî4dARB


	)

2828 
	#glProgømLoˇlP¨amëî4dvARB
 
pglProgømLoˇlP¨amëî4dvARB


	)

2829 
	#glProgømLoˇlP¨amëî4fARB
 
pglProgømLoˇlP¨amëî4fARB


	)

2830 
	#glProgømLoˇlP¨amëî4fvARB
 
pglProgømLoˇlP¨amëî4fvARB


	)

2831 
	#glGëProgømEnvP¨amëîdvARB
 
pglGëProgømEnvP¨amëîdvARB


	)

2832 
	#glGëProgømEnvP¨amëîfvARB
 
pglGëProgømEnvP¨amëîfvARB


	)

2833 
	#glGëProgømLoˇlP¨amëîdvARB
 
pglGëProgømLoˇlP¨amëîdvARB


	)

2834 
	#glGëProgømLoˇlP¨amëîfvARB
 
pglGëProgømLoˇlP¨amëîfvARB


	)

2835 
	#glGëProgømivARB
 
pglGëProgømivARB


	)

2836 
	#glGëProgømSåögARB
 
pglGëProgømSåögARB


	)

2837 
	#glGëVîãxAâribdvARB
 
pglGëVîãxAâribdvARB


	)

2838 
	#glGëVîãxAâribfvARB
 
pglGëVîãxAâribfvARB


	)

2839 
	#glGëVîãxAâribivARB
 
pglGëVîãxAâribivARB


	)

2840 
	#glGëVîãxAâribPoöãrvARB
 
pglGëVîãxAâribPoöãrvARB


	)

2841 
	#glIsProgømARB
 
pglIsProgømARB


	)

2846 #i‚de‡
GL_ARB_‰agmít_¥ogøm


2847 
	#GL_ARB_‰agmít_¥ogøm
 1

	)

2848 
	#__GLEE_GL_ARB_‰agmít_¥ogøm
 1

	)

2850 
	#GL_FRAGMENT_PROGRAM_ARB
 0x8804

	)

2851 
	#GL_PROGRAM_ALU_INSTRUCTIONS_ARB
 0x8805

	)

2852 
	#GL_PROGRAM_TEX_INSTRUCTIONS_ARB
 0x8806

	)

2853 
	#GL_PROGRAM_TEX_INDIRECTIONS_ARB
 0x8807

	)

2854 
	#GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
 0x8808

	)

2855 
	#GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
 0x8809

	)

2856 
	#GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
 0x880A

	)

2857 
	#GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB
 0x880B

	)

2858 
	#GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB
 0x880C

	)

2859 
	#GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB
 0x880D

	)

2860 
	#GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
 0x880E

	)

2861 
	#GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
 0x880F

	)

2862 
	#GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
 0x8810

	)

2863 
	#GL_MAX_TEXTURE_COORDS_ARB
 0x8871

	)

2864 
	#GL_MAX_TEXTURE_IMAGE_UNITS_ARB
 0x8872

	)

2869 #i‚de‡
GL_ARB_vîãx_buf„r_obje˘


2870 
	#GL_ARB_vîãx_buf„r_obje˘
 1

	)

2871 
	#__GLEE_GL_ARB_vîãx_buf„r_obje˘
 1

	)

2873 
	#GL_BUFFER_SIZE_ARB
 0x8764

	)

2874 
	#GL_BUFFER_USAGE_ARB
 0x8765

	)

2875 
	#GL_ARRAY_BUFFER_ARB
 0x8892

	)

2876 
	#GL_ELEMENT_ARRAY_BUFFER_ARB
 0x8893

	)

2877 
	#GL_ARRAY_BUFFER_BINDING_ARB
 0x8894

	)

2878 
	#GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB
 0x8895

	)

2879 
	#GL_VERTEX_ARRAY_BUFFER_BINDING_ARB
 0x8896

	)

2880 
	#GL_NORMAL_ARRAY_BUFFER_BINDING_ARB
 0x8897

	)

2881 
	#GL_COLOR_ARRAY_BUFFER_BINDING_ARB
 0x8898

	)

2882 
	#GL_INDEX_ARRAY_BUFFER_BINDING_ARB
 0x8899

	)

2883 
	#GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB
 0x889A

	)

2884 
	#GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB
 0x889B

	)

2885 
	#GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB
 0x889C

	)

2886 
	#GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB
 0x889D

	)

2887 
	#GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB
 0x889E

	)

2888 
	#GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB
 0x889F

	)

2889 
	#GL_READ_ONLY_ARB
 0x88B8

	)

2890 
	#GL_WRITE_ONLY_ARB
 0x88B9

	)

2891 
	#GL_READ_WRITE_ARB
 0x88BA

	)

2892 
	#GL_BUFFER_ACCESS_ARB
 0x88BB

	)

2893 
	#GL_BUFFER_MAPPED_ARB
 0x88BC

	)

2894 
	#GL_BUFFER_MAP_POINTER_ARB
 0x88BD

	)

2895 
	#GL_STREAM_DRAW_ARB
 0x88E0

	)

2896 
	#GL_STREAM_READ_ARB
 0x88E1

	)

2897 
	#GL_STREAM_COPY_ARB
 0x88E2

	)

2898 
	#GL_STATIC_DRAW_ARB
 0x88E4

	)

2899 
	#GL_STATIC_READ_ARB
 0x88E5

	)

2900 
	#GL_STATIC_COPY_ARB
 0x88E6

	)

2901 
	#GL_DYNAMIC_DRAW_ARB
 0x88E8

	)

2902 
	#GL_DYNAMIC_READ_ARB
 0x88E9

	)

2903 
	#GL_DYNAMIC_COPY_ARB
 0x88EA

	)

2904 (
APIENTRYP
 
	tPFNGLBINDBUFFERARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tbuf„r
);

2905 (
APIENTRYP
 
	tPFNGLDELETEBUFFERSARBPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	tbuf„rs
);

2906 (
APIENTRYP
 
	tPFNGLGENBUFFERSARBPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 * 
	tbuf„rs
);

2907 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISBUFFERARBPROC
Ë(
	tGLuöt
 
	tbuf„r
);

2908 (
APIENTRYP
 
	tPFNGLBUFFERDATAARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizeùåARB
 
	tsize
, c⁄° 
	tGLvoid
 * 
	td©a
, GLíum 
	tußge
);

2909 (
APIENTRYP
 
	tPFNGLBUFFERSUBDATAARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçåARB
 
	toff£t
, 
	tGLsizeùåARB
 
	tsize
, c⁄° 
	tGLvoid
 * 
	td©a
);

2910 (
APIENTRYP
 
	tPFNGLGETBUFFERSUBDATAARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçåARB
 
	toff£t
, 
	tGLsizeùåARB
 
	tsize
, 
	tGLvoid
 * 
	td©a
);

2911 
	gGLvoid
* (
	tAPIENTRYP
 
	tPFNGLMAPBUFFERARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tac˚ss
);

2912 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLUNMAPBUFFERARBPROC
Ë(
	tGLíum
 
	tèrgë
);

2913 (
APIENTRYP
 
	tPFNGLGETBUFFERPARAMETERIVARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

2914 (
APIENTRYP
 
	tPFNGLGETBUFFERPOINTERVARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLvoid
* * 
	t∑øms
);

2915 
GLEE_EXTERN
 
PFNGLBINDBUFFERARBPROC
 
	gpglBödBuf„rARB
;

2916 
GLEE_EXTERN
 
PFNGLDELETEBUFFERSARBPROC
 
	gpglDñëeBuf„rsARB
;

2917 
GLEE_EXTERN
 
PFNGLGENBUFFERSARBPROC
 
	gpglGíBuf„rsARB
;

2918 
GLEE_EXTERN
 
PFNGLISBUFFERARBPROC
 
	gpglIsBuf„rARB
;

2919 
GLEE_EXTERN
 
PFNGLBUFFERDATAARBPROC
 
	gpglBuf„rD©aARB
;

2920 
GLEE_EXTERN
 
PFNGLBUFFERSUBDATAARBPROC
 
	gpglBuf„rSubD©aARB
;

2921 
GLEE_EXTERN
 
PFNGLGETBUFFERSUBDATAARBPROC
 
	gpglGëBuf„rSubD©aARB
;

2922 
GLEE_EXTERN
 
PFNGLMAPBUFFERARBPROC
 
	gpglM≠Buf„rARB
;

2923 
GLEE_EXTERN
 
PFNGLUNMAPBUFFERARBPROC
 
	gpglUnm≠Buf„rARB
;

2924 
GLEE_EXTERN
 
PFNGLGETBUFFERPARAMETERIVARBPROC
 
	gpglGëBuf„rP¨amëîivARB
;

2925 
GLEE_EXTERN
 
PFNGLGETBUFFERPOINTERVARBPROC
 
	gpglGëBuf„rPoöãrvARB
;

2926 
	#glBödBuf„rARB
 
pglBödBuf„rARB


	)

2927 
	#glDñëeBuf„rsARB
 
pglDñëeBuf„rsARB


	)

2928 
	#glGíBuf„rsARB
 
pglGíBuf„rsARB


	)

2929 
	#glIsBuf„rARB
 
pglIsBuf„rARB


	)

2930 
	#glBuf„rD©aARB
 
pglBuf„rD©aARB


	)

2931 
	#glBuf„rSubD©aARB
 
pglBuf„rSubD©aARB


	)

2932 
	#glGëBuf„rSubD©aARB
 
pglGëBuf„rSubD©aARB


	)

2933 
	#glM≠Buf„rARB
 
pglM≠Buf„rARB


	)

2934 
	#glUnm≠Buf„rARB
 
pglUnm≠Buf„rARB


	)

2935 
	#glGëBuf„rP¨amëîivARB
 
pglGëBuf„rP¨amëîivARB


	)

2936 
	#glGëBuf„rPoöãrvARB
 
pglGëBuf„rPoöãrvARB


	)

2941 #i‚de‡
GL_ARB_oc˛usi⁄_quîy


2942 
	#GL_ARB_oc˛usi⁄_quîy
 1

	)

2943 
	#__GLEE_GL_ARB_oc˛usi⁄_quîy
 1

	)

2945 
	#GL_QUERY_COUNTER_BITS_ARB
 0x8864

	)

2946 
	#GL_CURRENT_QUERY_ARB
 0x8865

	)

2947 
	#GL_QUERY_RESULT_ARB
 0x8866

	)

2948 
	#GL_QUERY_RESULT_AVAILABLE_ARB
 0x8867

	)

2949 
	#GL_SAMPLES_PASSED_ARB
 0x8914

	)

2950 (
APIENTRYP
 
	tPFNGLGENQUERIESARBPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 * 
	tids
);

2951 (
APIENTRYP
 
	tPFNGLDELETEQUERIESARBPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	tids
);

2952 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISQUERYARBPROC
Ë(
	tGLuöt
 
	tid
);

2953 (
APIENTRYP
 
	tPFNGLBEGINQUERYARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
);

2954 (
APIENTRYP
 
	tPFNGLENDQUERYARBPROC
Ë(
	tGLíum
 
	tèrgë
);

2955 (
APIENTRYP
 
	tPFNGLGETQUERYIVARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

2956 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTIVARBPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

2957 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTUIVARBPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, GLuöà* 
	t∑øms
);

2958 
GLEE_EXTERN
 
PFNGLGENQUERIESARBPROC
 
	gpglGíQuîõsARB
;

2959 
GLEE_EXTERN
 
PFNGLDELETEQUERIESARBPROC
 
	gpglDñëeQuîõsARB
;

2960 
GLEE_EXTERN
 
PFNGLISQUERYARBPROC
 
	gpglIsQuîyARB
;

2961 
GLEE_EXTERN
 
PFNGLBEGINQUERYARBPROC
 
	gpglBegöQuîyARB
;

2962 
GLEE_EXTERN
 
PFNGLENDQUERYARBPROC
 
	gpglEndQuîyARB
;

2963 
GLEE_EXTERN
 
PFNGLGETQUERYIVARBPROC
 
	gpglGëQuîyivARB
;

2964 
GLEE_EXTERN
 
PFNGLGETQUERYOBJECTIVARBPROC
 
	gpglGëQuîyObje˘ivARB
;

2965 
GLEE_EXTERN
 
PFNGLGETQUERYOBJECTUIVARBPROC
 
	gpglGëQuîyObje˘uivARB
;

2966 
	#glGíQuîõsARB
 
pglGíQuîõsARB


	)

2967 
	#glDñëeQuîõsARB
 
pglDñëeQuîõsARB


	)

2968 
	#glIsQuîyARB
 
pglIsQuîyARB


	)

2969 
	#glBegöQuîyARB
 
pglBegöQuîyARB


	)

2970 
	#glEndQuîyARB
 
pglEndQuîyARB


	)

2971 
	#glGëQuîyivARB
 
pglGëQuîyivARB


	)

2972 
	#glGëQuîyObje˘ivARB
 
pglGëQuîyObje˘ivARB


	)

2973 
	#glGëQuîyObje˘uivARB
 
pglGëQuîyObje˘uivARB


	)

2978 #i‚de‡
GL_ARB_shadî_obje˘s


2979 
	#GL_ARB_shadî_obje˘s
 1

	)

2980 
	#__GLEE_GL_ARB_shadî_obje˘s
 1

	)

2982 
	#GL_PROGRAM_OBJECT_ARB
 0x8B40

	)

2983 
	#GL_SHADER_OBJECT_ARB
 0x8B48

	)

2984 
	#GL_OBJECT_TYPE_ARB
 0x8B4E

	)

2985 
	#GL_OBJECT_SUBTYPE_ARB
 0x8B4F

	)

2986 
	#GL_FLOAT_VEC2_ARB
 0x8B50

	)

2987 
	#GL_FLOAT_VEC3_ARB
 0x8B51

	)

2988 
	#GL_FLOAT_VEC4_ARB
 0x8B52

	)

2989 
	#GL_INT_VEC2_ARB
 0x8B53

	)

2990 
	#GL_INT_VEC3_ARB
 0x8B54

	)

2991 
	#GL_INT_VEC4_ARB
 0x8B55

	)

2992 
	#GL_BOOL_ARB
 0x8B56

	)

2993 
	#GL_BOOL_VEC2_ARB
 0x8B57

	)

2994 
	#GL_BOOL_VEC3_ARB
 0x8B58

	)

2995 
	#GL_BOOL_VEC4_ARB
 0x8B59

	)

2996 
	#GL_FLOAT_MAT2_ARB
 0x8B5A

	)

2997 
	#GL_FLOAT_MAT3_ARB
 0x8B5B

	)

2998 
	#GL_FLOAT_MAT4_ARB
 0x8B5C

	)

2999 
	#GL_SAMPLER_1D_ARB
 0x8B5D

	)

3000 
	#GL_SAMPLER_2D_ARB
 0x8B5E

	)

3001 
	#GL_SAMPLER_3D_ARB
 0x8B5F

	)

3002 
	#GL_SAMPLER_CUBE_ARB
 0x8B60

	)

3003 
	#GL_SAMPLER_1D_SHADOW_ARB
 0x8B61

	)

3004 
	#GL_SAMPLER_2D_SHADOW_ARB
 0x8B62

	)

3005 
	#GL_SAMPLER_2D_RECT_ARB
 0x8B63

	)

3006 
	#GL_SAMPLER_2D_RECT_SHADOW_ARB
 0x8B64

	)

3007 
	#GL_OBJECT_DELETE_STATUS_ARB
 0x8B80

	)

3008 
	#GL_OBJECT_COMPILE_STATUS_ARB
 0x8B81

	)

3009 
	#GL_OBJECT_LINK_STATUS_ARB
 0x8B82

	)

3010 
	#GL_OBJECT_VALIDATE_STATUS_ARB
 0x8B83

	)

3011 
	#GL_OBJECT_INFO_LOG_LENGTH_ARB
 0x8B84

	)

3012 
	#GL_OBJECT_ATTACHED_OBJECTS_ARB
 0x8B85

	)

3013 
	#GL_OBJECT_ACTIVE_UNIFORMS_ARB
 0x8B86

	)

3014 
	#GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB
 0x8B87

	)

3015 
	#GL_OBJECT_SHADER_SOURCE_LENGTH_ARB
 0x8B88

	)

3016 (
APIENTRYP
 
	tPFNGLDELETEOBJECTARBPROC
Ë(
	tGLh™dÀARB
 
	tobj
);

3017 
GLh™dÀARB
 (
	tAPIENTRYP
 
	tPFNGLGETHANDLEARBPROC
Ë(
	tGLíum
 
	t≤ame
);

3018 (
APIENTRYP
 
	tPFNGLDETACHOBJECTARBPROC
Ë(
	tGLh™dÀARB
 
	tc⁄èöîObj
, GLh™dÀARB 
	t©èchedObj
);

3019 
GLh™dÀARB
 (
	tAPIENTRYP
 
	tPFNGLCREATESHADEROBJECTARBPROC
Ë(
	tGLíum
 
	tshadîTy≥
);

3020 (
APIENTRYP
 
	tPFNGLSHADERSOURCEARBPROC
Ë(
	tGLh™dÀARB
 
	tshadîObj
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLch¨ARB
* * 
	t°rög
, c⁄° 
	tGLöt
 * 
	tÀngth
);

3021 (
APIENTRYP
 
	tPFNGLCOMPILESHADERARBPROC
Ë(
	tGLh™dÀARB
 
	tshadîObj
);

3022 
GLh™dÀARB
 (
	tAPIENTRYP
 
	tPFNGLCREATEPROGRAMOBJECTARBPROC
) ();

3023 (
APIENTRYP
 
	tPFNGLATTACHOBJECTARBPROC
Ë(
	tGLh™dÀARB
 
	tc⁄èöîObj
, GLh™dÀARB 
	tobj
);

3024 (
APIENTRYP
 
	tPFNGLLINKPROGRAMARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
);

3025 (
APIENTRYP
 
	tPFNGLUSEPROGRAMOBJECTARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
);

3026 (
APIENTRYP
 
	tPFNGLVALIDATEPROGRAMARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
);

3027 (
APIENTRYP
 
	tPFNGLUNIFORM1FARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
);

3028 (
APIENTRYP
 
	tPFNGLUNIFORM2FARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
);

3029 (
APIENTRYP
 
	tPFNGLUNIFORM3FARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
);

3030 (
APIENTRYP
 
	tPFNGLUNIFORM4FARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
, GLÊﬂà
	tv3
);

3031 (
APIENTRYP
 
	tPFNGLUNIFORM1IARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
);

3032 (
APIENTRYP
 
	tPFNGLUNIFORM2IARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
);

3033 (
APIENTRYP
 
	tPFNGLUNIFORM3IARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
, GLöà
	tv2
);

3034 (
APIENTRYP
 
	tPFNGLUNIFORM4IARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
, GLöà
	tv2
, GLöà
	tv3
);

3035 (
APIENTRYP
 
	tPFNGLUNIFORM1FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

3036 (
APIENTRYP
 
	tPFNGLUNIFORM2FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

3037 (
APIENTRYP
 
	tPFNGLUNIFORM3FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

3038 (
APIENTRYP
 
	tPFNGLUNIFORM4FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

3039 (
APIENTRYP
 
	tPFNGLUNIFORM1IVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà* 
	tvÆue
);

3040 (
APIENTRYP
 
	tPFNGLUNIFORM2IVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà* 
	tvÆue
);

3041 (
APIENTRYP
 
	tPFNGLUNIFORM3IVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà* 
	tvÆue
);

3042 (
APIENTRYP
 
	tPFNGLUNIFORM4IVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà* 
	tvÆue
);

3043 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX2FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

3044 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX3FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

3045 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX4FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

3046 (
APIENTRYP
 
	tPFNGLGETOBJECTPARAMETERFVARBPROC
Ë(
	tGLh™dÀARB
 
	tobj
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

3047 (
APIENTRYP
 
	tPFNGLGETOBJECTPARAMETERIVARBPROC
Ë(
	tGLh™dÀARB
 
	tobj
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

3048 (
APIENTRYP
 
	tPFNGLGETINFOLOGARBPROC
Ë(
	tGLh™dÀARB
 
	tobj
, 
	tGLsizei
 
	tmaxLígth
, GLsizeò* 
	tÀngth
, 
	tGLch¨ARB
 * 
	töfoLog
);

3049 (
APIENTRYP
 
	tPFNGLGETATTACHEDOBJECTSARBPROC
Ë(
	tGLh™dÀARB
 
	tc⁄èöîObj
, 
	tGLsizei
 
	tmaxCou¡
, GLsizeò* 
	tcou¡
, GLh™dÀARB * 
	tobj
);

3050 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETUNIFORMLOCATIONARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, c⁄° 
	tGLch¨ARB
 * 
	t«me
);

3051 (
APIENTRYP
 
	tPFNGLGETACTIVEUNIFORMARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tmaxLígth
, GLsizeò* 
	tÀngth
, 
	tGLöt
 * 
	tsize
, 
	tGLíum
 * 
	tty≥
, 
	tGLch¨ARB
 * 
	t«me
);

3052 (
APIENTRYP
 
	tPFNGLGETUNIFORMFVARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 * 
	t∑øms
);

3053 (
APIENTRYP
 
	tPFNGLGETUNIFORMIVARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, 
	tGLöt
 
	tloˇti⁄
, GLöà* 
	t∑øms
);

3054 (
APIENTRYP
 
	tPFNGLGETSHADERSOURCEARBPROC
Ë(
	tGLh™dÀARB
 
	tobj
, 
	tGLsizei
 
	tmaxLígth
, GLsizeò* 
	tÀngth
, 
	tGLch¨ARB
 * 
	tsour˚
);

3055 
GLEE_EXTERN
 
PFNGLDELETEOBJECTARBPROC
 
	gpglDñëeObje˘ARB
;

3056 
GLEE_EXTERN
 
PFNGLGETHANDLEARBPROC
 
	gpglGëH™dÀARB
;

3057 
GLEE_EXTERN
 
PFNGLDETACHOBJECTARBPROC
 
	gpglDëachObje˘ARB
;

3058 
GLEE_EXTERN
 
PFNGLCREATESHADEROBJECTARBPROC
 
	gpglCª©eShadîObje˘ARB
;

3059 
GLEE_EXTERN
 
PFNGLSHADERSOURCEARBPROC
 
	gpglShadîSour˚ARB
;

3060 
GLEE_EXTERN
 
PFNGLCOMPILESHADERARBPROC
 
	gpglCompûeShadîARB
;

3061 
GLEE_EXTERN
 
PFNGLCREATEPROGRAMOBJECTARBPROC
 
	gpglCª©eProgømObje˘ARB
;

3062 
GLEE_EXTERN
 
PFNGLATTACHOBJECTARBPROC
 
	gpglAâachObje˘ARB
;

3063 
GLEE_EXTERN
 
PFNGLLINKPROGRAMARBPROC
 
	gpglLökProgømARB
;

3064 
GLEE_EXTERN
 
PFNGLUSEPROGRAMOBJECTARBPROC
 
	gpglU£ProgømObje˘ARB
;

3065 
GLEE_EXTERN
 
PFNGLVALIDATEPROGRAMARBPROC
 
	gpglVÆid©eProgømARB
;

3066 
GLEE_EXTERN
 
PFNGLUNIFORM1FARBPROC
 
	gpglUnif‹m1fARB
;

3067 
GLEE_EXTERN
 
PFNGLUNIFORM2FARBPROC
 
	gpglUnif‹m2fARB
;

3068 
GLEE_EXTERN
 
PFNGLUNIFORM3FARBPROC
 
	gpglUnif‹m3fARB
;

3069 
GLEE_EXTERN
 
PFNGLUNIFORM4FARBPROC
 
	gpglUnif‹m4fARB
;

3070 
GLEE_EXTERN
 
PFNGLUNIFORM1IARBPROC
 
	gpglUnif‹m1iARB
;

3071 
GLEE_EXTERN
 
PFNGLUNIFORM2IARBPROC
 
	gpglUnif‹m2iARB
;

3072 
GLEE_EXTERN
 
PFNGLUNIFORM3IARBPROC
 
	gpglUnif‹m3iARB
;

3073 
GLEE_EXTERN
 
PFNGLUNIFORM4IARBPROC
 
	gpglUnif‹m4iARB
;

3074 
GLEE_EXTERN
 
PFNGLUNIFORM1FVARBPROC
 
	gpglUnif‹m1fvARB
;

3075 
GLEE_EXTERN
 
PFNGLUNIFORM2FVARBPROC
 
	gpglUnif‹m2fvARB
;

3076 
GLEE_EXTERN
 
PFNGLUNIFORM3FVARBPROC
 
	gpglUnif‹m3fvARB
;

3077 
GLEE_EXTERN
 
PFNGLUNIFORM4FVARBPROC
 
	gpglUnif‹m4fvARB
;

3078 
GLEE_EXTERN
 
PFNGLUNIFORM1IVARBPROC
 
	gpglUnif‹m1ivARB
;

3079 
GLEE_EXTERN
 
PFNGLUNIFORM2IVARBPROC
 
	gpglUnif‹m2ivARB
;

3080 
GLEE_EXTERN
 
PFNGLUNIFORM3IVARBPROC
 
	gpglUnif‹m3ivARB
;

3081 
GLEE_EXTERN
 
PFNGLUNIFORM4IVARBPROC
 
	gpglUnif‹m4ivARB
;

3082 
GLEE_EXTERN
 
PFNGLUNIFORMMATRIX2FVARBPROC
 
	gpglUnif‹mM©rix2fvARB
;

3083 
GLEE_EXTERN
 
PFNGLUNIFORMMATRIX3FVARBPROC
 
	gpglUnif‹mM©rix3fvARB
;

3084 
GLEE_EXTERN
 
PFNGLUNIFORMMATRIX4FVARBPROC
 
	gpglUnif‹mM©rix4fvARB
;

3085 
GLEE_EXTERN
 
PFNGLGETOBJECTPARAMETERFVARBPROC
 
	gpglGëObje˘P¨amëîfvARB
;

3086 
GLEE_EXTERN
 
PFNGLGETOBJECTPARAMETERIVARBPROC
 
	gpglGëObje˘P¨amëîivARB
;

3087 
GLEE_EXTERN
 
PFNGLGETINFOLOGARBPROC
 
	gpglGëInfoLogARB
;

3088 
GLEE_EXTERN
 
PFNGLGETATTACHEDOBJECTSARBPROC
 
	gpglGëAâachedObje˘sARB
;

3089 
GLEE_EXTERN
 
PFNGLGETUNIFORMLOCATIONARBPROC
 
	gpglGëUnif‹mLoˇti⁄ARB
;

3090 
GLEE_EXTERN
 
PFNGLGETACTIVEUNIFORMARBPROC
 
	gpglGëA˘iveUnif‹mARB
;

3091 
GLEE_EXTERN
 
PFNGLGETUNIFORMFVARBPROC
 
	gpglGëUnif‹mfvARB
;

3092 
GLEE_EXTERN
 
PFNGLGETUNIFORMIVARBPROC
 
	gpglGëUnif‹mivARB
;

3093 
GLEE_EXTERN
 
PFNGLGETSHADERSOURCEARBPROC
 
	gpglGëShadîSour˚ARB
;

3094 
	#glDñëeObje˘ARB
 
pglDñëeObje˘ARB


	)

3095 
	#glGëH™dÀARB
 
pglGëH™dÀARB


	)

3096 
	#glDëachObje˘ARB
 
pglDëachObje˘ARB


	)

3097 
	#glCª©eShadîObje˘ARB
 
pglCª©eShadîObje˘ARB


	)

3098 
	#glShadîSour˚ARB
 
pglShadîSour˚ARB


	)

3099 
	#glCompûeShadîARB
 
pglCompûeShadîARB


	)

3100 
	#glCª©eProgømObje˘ARB
 
pglCª©eProgømObje˘ARB


	)

3101 
	#glAâachObje˘ARB
 
pglAâachObje˘ARB


	)

3102 
	#glLökProgømARB
 
pglLökProgømARB


	)

3103 
	#glU£ProgømObje˘ARB
 
pglU£ProgømObje˘ARB


	)

3104 
	#glVÆid©eProgømARB
 
pglVÆid©eProgømARB


	)

3105 
	#glUnif‹m1fARB
 
pglUnif‹m1fARB


	)

3106 
	#glUnif‹m2fARB
 
pglUnif‹m2fARB


	)

3107 
	#glUnif‹m3fARB
 
pglUnif‹m3fARB


	)

3108 
	#glUnif‹m4fARB
 
pglUnif‹m4fARB


	)

3109 
	#glUnif‹m1iARB
 
pglUnif‹m1iARB


	)

3110 
	#glUnif‹m2iARB
 
pglUnif‹m2iARB


	)

3111 
	#glUnif‹m3iARB
 
pglUnif‹m3iARB


	)

3112 
	#glUnif‹m4iARB
 
pglUnif‹m4iARB


	)

3113 
	#glUnif‹m1fvARB
 
pglUnif‹m1fvARB


	)

3114 
	#glUnif‹m2fvARB
 
pglUnif‹m2fvARB


	)

3115 
	#glUnif‹m3fvARB
 
pglUnif‹m3fvARB


	)

3116 
	#glUnif‹m4fvARB
 
pglUnif‹m4fvARB


	)

3117 
	#glUnif‹m1ivARB
 
pglUnif‹m1ivARB


	)

3118 
	#glUnif‹m2ivARB
 
pglUnif‹m2ivARB


	)

3119 
	#glUnif‹m3ivARB
 
pglUnif‹m3ivARB


	)

3120 
	#glUnif‹m4ivARB
 
pglUnif‹m4ivARB


	)

3121 
	#glUnif‹mM©rix2fvARB
 
pglUnif‹mM©rix2fvARB


	)

3122 
	#glUnif‹mM©rix3fvARB
 
pglUnif‹mM©rix3fvARB


	)

3123 
	#glUnif‹mM©rix4fvARB
 
pglUnif‹mM©rix4fvARB


	)

3124 
	#glGëObje˘P¨amëîfvARB
 
pglGëObje˘P¨amëîfvARB


	)

3125 
	#glGëObje˘P¨amëîivARB
 
pglGëObje˘P¨amëîivARB


	)

3126 
	#glGëInfoLogARB
 
pglGëInfoLogARB


	)

3127 
	#glGëAâachedObje˘sARB
 
pglGëAâachedObje˘sARB


	)

3128 
	#glGëUnif‹mLoˇti⁄ARB
 
pglGëUnif‹mLoˇti⁄ARB


	)

3129 
	#glGëA˘iveUnif‹mARB
 
pglGëA˘iveUnif‹mARB


	)

3130 
	#glGëUnif‹mfvARB
 
pglGëUnif‹mfvARB


	)

3131 
	#glGëUnif‹mivARB
 
pglGëUnif‹mivARB


	)

3132 
	#glGëShadîSour˚ARB
 
pglGëShadîSour˚ARB


	)

3137 #i‚de‡
GL_ARB_vîãx_shadî


3138 
	#GL_ARB_vîãx_shadî
 1

	)

3139 
	#__GLEE_GL_ARB_vîãx_shadî
 1

	)

3141 
	#GL_VERTEX_SHADER_ARB
 0x8B31

	)

3142 
	#GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB
 0x8B4A

	)

3143 
	#GL_MAX_VARYING_FLOATS_ARB
 0x8B4B

	)

3144 
	#GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB
 0x8B4C

	)

3145 
	#GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB
 0x8B4D

	)

3146 
	#GL_OBJECT_ACTIVE_ATTRIBUTES_ARB
 0x8B89

	)

3147 
	#GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB
 0x8B8A

	)

3148 (
APIENTRYP
 
	tPFNGLBINDATTRIBLOCATIONARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLch¨ARB
 * 
	t«me
);

3149 (
APIENTRYP
 
	tPFNGLGETACTIVEATTRIBARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tmaxLígth
, GLsizeò* 
	tÀngth
, 
	tGLöt
 * 
	tsize
, 
	tGLíum
 * 
	tty≥
, 
	tGLch¨ARB
 * 
	t«me
);

3150 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETATTRIBLOCATIONARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, c⁄° 
	tGLch¨ARB
 * 
	t«me
);

3151 
GLEE_EXTERN
 
PFNGLBINDATTRIBLOCATIONARBPROC
 
	gpglBödAâribLoˇti⁄ARB
;

3152 
GLEE_EXTERN
 
PFNGLGETACTIVEATTRIBARBPROC
 
	gpglGëA˘iveAâribARB
;

3153 
GLEE_EXTERN
 
PFNGLGETATTRIBLOCATIONARBPROC
 
	gpglGëAâribLoˇti⁄ARB
;

3154 
	#glBödAâribLoˇti⁄ARB
 
pglBödAâribLoˇti⁄ARB


	)

3155 
	#glGëA˘iveAâribARB
 
pglGëA˘iveAâribARB


	)

3156 
	#glGëAâribLoˇti⁄ARB
 
pglGëAâribLoˇti⁄ARB


	)

3161 #i‚de‡
GL_ARB_‰agmít_shadî


3162 
	#GL_ARB_‰agmít_shadî
 1

	)

3163 
	#__GLEE_GL_ARB_‰agmít_shadî
 1

	)

3165 
	#GL_FRAGMENT_SHADER_ARB
 0x8B30

	)

3166 
	#GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB
 0x8B49

	)

3167 
	#GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB
 0x8B8B

	)

3172 #i‚de‡
GL_ARB_shadög_œnguage_100


3173 
	#GL_ARB_shadög_œnguage_100
 1

	)

3174 
	#__GLEE_GL_ARB_shadög_œnguage_100
 1

	)

3176 
	#GL_SHADING_LANGUAGE_VERSION_ARB
 0x8B8C

	)

3181 #i‚de‡
GL_ARB_ãxtuª_n⁄_powî_of_two


3182 
	#GL_ARB_ãxtuª_n⁄_powî_of_two
 1

	)

3183 
	#__GLEE_GL_ARB_ãxtuª_n⁄_powî_of_two
 1

	)

3189 #i‚de‡
GL_ARB_poöt_•rôe


3190 
	#GL_ARB_poöt_•rôe
 1

	)

3191 
	#__GLEE_GL_ARB_poöt_•rôe
 1

	)

3193 
	#GL_POINT_SPRITE_ARB
 0x8861

	)

3194 
	#GL_COORD_REPLACE_ARB
 0x8862

	)

3199 #i‚de‡
GL_ARB_‰agmít_¥ogøm_shadow


3200 
	#GL_ARB_‰agmít_¥ogøm_shadow
 1

	)

3201 
	#__GLEE_GL_ARB_‰agmít_¥ogøm_shadow
 1

	)

3207 #i‚de‡
GL_ARB_døw_buf„rs


3208 
	#GL_ARB_døw_buf„rs
 1

	)

3209 
	#__GLEE_GL_ARB_døw_buf„rs
 1

	)

3211 
	#GL_MAX_DRAW_BUFFERS_ARB
 0x8824

	)

3212 
	#GL_DRAW_BUFFER0_ARB
 0x8825

	)

3213 
	#GL_DRAW_BUFFER1_ARB
 0x8826

	)

3214 
	#GL_DRAW_BUFFER2_ARB
 0x8827

	)

3215 
	#GL_DRAW_BUFFER3_ARB
 0x8828

	)

3216 
	#GL_DRAW_BUFFER4_ARB
 0x8829

	)

3217 
	#GL_DRAW_BUFFER5_ARB
 0x882A

	)

3218 
	#GL_DRAW_BUFFER6_ARB
 0x882B

	)

3219 
	#GL_DRAW_BUFFER7_ARB
 0x882C

	)

3220 
	#GL_DRAW_BUFFER8_ARB
 0x882D

	)

3221 
	#GL_DRAW_BUFFER9_ARB
 0x882E

	)

3222 
	#GL_DRAW_BUFFER10_ARB
 0x882F

	)

3223 
	#GL_DRAW_BUFFER11_ARB
 0x8830

	)

3224 
	#GL_DRAW_BUFFER12_ARB
 0x8831

	)

3225 
	#GL_DRAW_BUFFER13_ARB
 0x8832

	)

3226 
	#GL_DRAW_BUFFER14_ARB
 0x8833

	)

3227 
	#GL_DRAW_BUFFER15_ARB
 0x8834

	)

3228 (
APIENTRYP
 
	tPFNGLDRAWBUFFERSARBPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLíum
 * 
	tbufs
);

3229 
GLEE_EXTERN
 
PFNGLDRAWBUFFERSARBPROC
 
	gpglDøwBuf„rsARB
;

3230 
	#glDøwBuf„rsARB
 
pglDøwBuf„rsARB


	)

3235 #i‚de‡
GL_ARB_ãxtuª_ª˘™gÀ


3236 
	#GL_ARB_ãxtuª_ª˘™gÀ
 1

	)

3237 
	#__GLEE_GL_ARB_ãxtuª_ª˘™gÀ
 1

	)

3239 
	#GL_TEXTURE_RECTANGLE_ARB
 0x84F5

	)

3240 
	#GL_TEXTURE_BINDING_RECTANGLE_ARB
 0x84F6

	)

3241 
	#GL_PROXY_TEXTURE_RECTANGLE_ARB
 0x84F7

	)

3242 
	#GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB
 0x84F8

	)

3247 #i‚de‡
GL_ARB_cﬁ‹_buf„r_Êﬂt


3248 
	#GL_ARB_cﬁ‹_buf„r_Êﬂt
 1

	)

3249 
	#__GLEE_GL_ARB_cﬁ‹_buf„r_Êﬂt
 1

	)

3251 
	#GL_RGBA_FLOAT_MODE_ARB
 0x8820

	)

3252 
	#GL_CLAMP_VERTEX_COLOR_ARB
 0x891A

	)

3253 
	#GL_CLAMP_FRAGMENT_COLOR_ARB
 0x891B

	)

3254 
	#GL_CLAMP_READ_COLOR_ARB
 0x891C

	)

3255 
	#GL_FIXED_ONLY_ARB
 0x891D

	)

3256 (
APIENTRYP
 
	tPFNGLCLAMPCOLORARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t˛amp
);

3257 
GLEE_EXTERN
 
PFNGLCLAMPCOLORARBPROC
 
	gpglCœmpCﬁ‹ARB
;

3258 
	#glCœmpCﬁ‹ARB
 
pglCœmpCﬁ‹ARB


	)

3263 #i‚de‡
GL_ARB_hÆf_Êﬂt_pixñ


3264 
	#GL_ARB_hÆf_Êﬂt_pixñ
 1

	)

3265 
	#__GLEE_GL_ARB_hÆf_Êﬂt_pixñ
 1

	)

3267 
	#GL_HALF_FLOAT_ARB
 0x140B

	)

3272 #i‚de‡
GL_ARB_ãxtuª_Êﬂt


3273 
	#GL_ARB_ãxtuª_Êﬂt
 1

	)

3274 
	#__GLEE_GL_ARB_ãxtuª_Êﬂt
 1

	)

3276 
	#GL_TEXTURE_RED_TYPE_ARB
 0x8C10

	)

3277 
	#GL_TEXTURE_GREEN_TYPE_ARB
 0x8C11

	)

3278 
	#GL_TEXTURE_BLUE_TYPE_ARB
 0x8C12

	)

3279 
	#GL_TEXTURE_ALPHA_TYPE_ARB
 0x8C13

	)

3280 
	#GL_TEXTURE_LUMINANCE_TYPE_ARB
 0x8C14

	)

3281 
	#GL_TEXTURE_INTENSITY_TYPE_ARB
 0x8C15

	)

3282 
	#GL_TEXTURE_DEPTH_TYPE_ARB
 0x8C16

	)

3283 
	#GL_UNSIGNED_NORMALIZED_ARB
 0x8C17

	)

3284 
	#GL_RGBA32F_ARB
 0x8814

	)

3285 
	#GL_RGB32F_ARB
 0x8815

	)

3286 
	#GL_ALPHA32F_ARB
 0x8816

	)

3287 
	#GL_INTENSITY32F_ARB
 0x8817

	)

3288 
	#GL_LUMINANCE32F_ARB
 0x8818

	)

3289 
	#GL_LUMINANCE_ALPHA32F_ARB
 0x8819

	)

3290 
	#GL_RGBA16F_ARB
 0x881A

	)

3291 
	#GL_RGB16F_ARB
 0x881B

	)

3292 
	#GL_ALPHA16F_ARB
 0x881C

	)

3293 
	#GL_INTENSITY16F_ARB
 0x881D

	)

3294 
	#GL_LUMINANCE16F_ARB
 0x881E

	)

3295 
	#GL_LUMINANCE_ALPHA16F_ARB
 0x881F

	)

3300 #i‚de‡
GL_ARB_pixñ_buf„r_obje˘


3301 
	#GL_ARB_pixñ_buf„r_obje˘
 1

	)

3302 
	#__GLEE_GL_ARB_pixñ_buf„r_obje˘
 1

	)

3304 
	#GL_PIXEL_PACK_BUFFER_ARB
 0x88EB

	)

3305 
	#GL_PIXEL_UNPACK_BUFFER_ARB
 0x88EC

	)

3306 
	#GL_PIXEL_PACK_BUFFER_BINDING_ARB
 0x88ED

	)

3307 
	#GL_PIXEL_UNPACK_BUFFER_BINDING_ARB
 0x88EF

	)

3312 #i‚de‡
GL_EXT_abgr


3313 
	#GL_EXT_abgr
 1

	)

3314 
	#__GLEE_GL_EXT_abgr
 1

	)

3316 
	#GL_ABGR_EXT
 0x8000

	)

3321 #i‚de‡
GL_EXT_bÀnd_cﬁ‹


3322 
	#GL_EXT_bÀnd_cﬁ‹
 1

	)

3323 
	#__GLEE_GL_EXT_bÀnd_cﬁ‹
 1

	)

3325 
	#GL_CONSTANT_COLOR_EXT
 0x8001

	)

3326 
	#GL_ONE_MINUS_CONSTANT_COLOR_EXT
 0x8002

	)

3327 
	#GL_CONSTANT_ALPHA_EXT
 0x8003

	)

3328 
	#GL_ONE_MINUS_CONSTANT_ALPHA_EXT
 0x8004

	)

3329 
	#GL_BLEND_COLOR_EXT
 0x8005

	)

3330 (
APIENTRYP
 
	tPFNGLBLENDCOLOREXTPROC
Ë(
	tGL˛ampf
 
	tªd
, GL˛amp‡
	tgªí
, GL˛amp‡
	tblue
, GL˛amp‡
	tÆpha
);

3331 
GLEE_EXTERN
 
PFNGLBLENDCOLOREXTPROC
 
	gpglBÀndCﬁ‹EXT
;

3332 
	#glBÀndCﬁ‹EXT
 
pglBÀndCﬁ‹EXT


	)

3337 #i‚de‡
GL_EXT_pﬁyg⁄_off£t


3338 
	#GL_EXT_pﬁyg⁄_off£t
 1

	)

3339 
	#__GLEE_GL_EXT_pﬁyg⁄_off£t
 1

	)

3341 
	#GL_POLYGON_OFFSET_EXT
 0x8037

	)

3342 
	#GL_POLYGON_OFFSET_FACTOR_EXT
 0x8038

	)

3343 
	#GL_POLYGON_OFFSET_BIAS_EXT
 0x8039

	)

3344 (
APIENTRYP
 
	tPFNGLPOLYGONOFFSETEXTPROC
Ë(
	tGLÊﬂt
 
	tÁ˘‹
, GLÊﬂà
	tbüs
);

3345 
GLEE_EXTERN
 
PFNGLPOLYGONOFFSETEXTPROC
 
	gpglPﬁyg⁄Off£tEXT
;

3346 
	#glPﬁyg⁄Off£tEXT
 
pglPﬁyg⁄Off£tEXT


	)

3351 #i‚de‡
GL_EXT_ãxtuª


3352 
	#GL_EXT_ãxtuª
 1

	)

3353 
	#__GLEE_GL_EXT_ãxtuª
 1

	)

3355 
	#GL_ALPHA4_EXT
 0x803B

	)

3356 
	#GL_ALPHA8_EXT
 0x803C

	)

3357 
	#GL_ALPHA12_EXT
 0x803D

	)

3358 
	#GL_ALPHA16_EXT
 0x803E

	)

3359 
	#GL_LUMINANCE4_EXT
 0x803F

	)

3360 
	#GL_LUMINANCE8_EXT
 0x8040

	)

3361 
	#GL_LUMINANCE12_EXT
 0x8041

	)

3362 
	#GL_LUMINANCE16_EXT
 0x8042

	)

3363 
	#GL_LUMINANCE4_ALPHA4_EXT
 0x8043

	)

3364 
	#GL_LUMINANCE6_ALPHA2_EXT
 0x8044

	)

3365 
	#GL_LUMINANCE8_ALPHA8_EXT
 0x8045

	)

3366 
	#GL_LUMINANCE12_ALPHA4_EXT
 0x8046

	)

3367 
	#GL_LUMINANCE12_ALPHA12_EXT
 0x8047

	)

3368 
	#GL_LUMINANCE16_ALPHA16_EXT
 0x8048

	)

3369 
	#GL_INTENSITY_EXT
 0x8049

	)

3370 
	#GL_INTENSITY4_EXT
 0x804A

	)

3371 
	#GL_INTENSITY8_EXT
 0x804B

	)

3372 
	#GL_INTENSITY12_EXT
 0x804C

	)

3373 
	#GL_INTENSITY16_EXT
 0x804D

	)

3374 
	#GL_RGB2_EXT
 0x804E

	)

3375 
	#GL_RGB4_EXT
 0x804F

	)

3376 
	#GL_RGB5_EXT
 0x8050

	)

3377 
	#GL_RGB8_EXT
 0x8051

	)

3378 
	#GL_RGB10_EXT
 0x8052

	)

3379 
	#GL_RGB12_EXT
 0x8053

	)

3380 
	#GL_RGB16_EXT
 0x8054

	)

3381 
	#GL_RGBA2_EXT
 0x8055

	)

3382 
	#GL_RGBA4_EXT
 0x8056

	)

3383 
	#GL_RGB5_A1_EXT
 0x8057

	)

3384 
	#GL_RGBA8_EXT
 0x8058

	)

3385 
	#GL_RGB10_A2_EXT
 0x8059

	)

3386 
	#GL_RGBA12_EXT
 0x805A

	)

3387 
	#GL_RGBA16_EXT
 0x805B

	)

3388 
	#GL_TEXTURE_RED_SIZE_EXT
 0x805C

	)

3389 
	#GL_TEXTURE_GREEN_SIZE_EXT
 0x805D

	)

3390 
	#GL_TEXTURE_BLUE_SIZE_EXT
 0x805E

	)

3391 
	#GL_TEXTURE_ALPHA_SIZE_EXT
 0x805F

	)

3392 
	#GL_TEXTURE_LUMINANCE_SIZE_EXT
 0x8060

	)

3393 
	#GL_TEXTURE_INTENSITY_SIZE_EXT
 0x8061

	)

3394 
	#GL_REPLACE_EXT
 0x8062

	)

3395 
	#GL_PROXY_TEXTURE_1D_EXT
 0x8063

	)

3396 
	#GL_PROXY_TEXTURE_2D_EXT
 0x8064

	)

3397 
	#GL_TEXTURE_TOO_LARGE_EXT
 0x8065

	)

3402 #i‚de‡
GL_EXT_ãxtuª3D


3403 
	#GL_EXT_ãxtuª3D
 1

	)

3404 
	#__GLEE_GL_EXT_ãxtuª3D
 1

	)

3406 
	#GL_PACK_SKIP_IMAGES_EXT
 0x806B

	)

3407 
	#GL_PACK_IMAGE_HEIGHT_EXT
 0x806C

	)

3408 
	#GL_UNPACK_SKIP_IMAGES_EXT
 0x806D

	)

3409 
	#GL_UNPACK_IMAGE_HEIGHT_EXT
 0x806E

	)

3410 
	#GL_TEXTURE_3D_EXT
 0x806F

	)

3411 
	#GL_PROXY_TEXTURE_3D_EXT
 0x8070

	)

3412 
	#GL_TEXTURE_DEPTH_EXT
 0x8071

	)

3413 
	#GL_TEXTURE_WRAP_R_EXT
 0x8072

	)

3414 
	#GL_MAX_3D_TEXTURE_SIZE_EXT
 0x8073

	)

3415 (
APIENTRYP
 
	tPFNGLTEXIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	tpixñs
);

3416 (
APIENTRYP
 
	tPFNGLTEXSUBIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	tpixñs
);

3417 
GLEE_EXTERN
 
PFNGLTEXIMAGE3DEXTPROC
 
	gpglTexImage3DEXT
;

3418 
GLEE_EXTERN
 
PFNGLTEXSUBIMAGE3DEXTPROC
 
	gpglTexSubImage3DEXT
;

3419 
	#glTexImage3DEXT
 
pglTexImage3DEXT


	)

3420 
	#glTexSubImage3DEXT
 
pglTexSubImage3DEXT


	)

3425 #i‚de‡
GL_SGIS_ãxtuª_fûãr4


3426 
	#GL_SGIS_ãxtuª_fûãr4
 1

	)

3427 
	#__GLEE_GL_SGIS_ãxtuª_fûãr4
 1

	)

3429 
	#GL_FILTER4_SGIS
 0x8146

	)

3430 
	#GL_TEXTURE_FILTER4_SIZE_SGIS
 0x8147

	)

3431 (
APIENTRYP
 
	tPFNGLGETTEXFILTERFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tfûãr
, 
	tGLÊﬂt
 * 
	tweights
);

3432 (
APIENTRYP
 
	tPFNGLTEXFILTERFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tfûãr
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLÊﬂt
 * 
	tweights
);

3433 
GLEE_EXTERN
 
PFNGLGETTEXFILTERFUNCSGISPROC
 
	gpglGëTexFûãrFuncSGIS
;

3434 
GLEE_EXTERN
 
PFNGLTEXFILTERFUNCSGISPROC
 
	gpglTexFûãrFuncSGIS
;

3435 
	#glGëTexFûãrFuncSGIS
 
pglGëTexFûãrFuncSGIS


	)

3436 
	#glTexFûãrFuncSGIS
 
pglTexFûãrFuncSGIS


	)

3441 #i‚de‡
GL_EXT_subãxtuª


3442 
	#GL_EXT_subãxtuª
 1

	)

3443 
	#__GLEE_GL_EXT_subãxtuª
 1

	)

3445 (
APIENTRYP
 
	tPFNGLTEXSUBIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	tpixñs
);

3446 (
APIENTRYP
 
	tPFNGLTEXSUBIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	tpixñs
);

3447 
GLEE_EXTERN
 
PFNGLTEXSUBIMAGE1DEXTPROC
 
	gpglTexSubImage1DEXT
;

3448 
GLEE_EXTERN
 
PFNGLTEXSUBIMAGE2DEXTPROC
 
	gpglTexSubImage2DEXT
;

3449 
	#glTexSubImage1DEXT
 
pglTexSubImage1DEXT


	)

3450 
	#glTexSubImage2DEXT
 
pglTexSubImage2DEXT


	)

3455 #i‚de‡
GL_EXT_c›y_ãxtuª


3456 
	#GL_EXT_c›y_ãxtuª
 1

	)

3457 
	#__GLEE_GL_EXT_c›y_ãxtuª
 1

	)

3459 (
APIENTRYP
 
	tPFNGLCOPYTEXIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
);

3460 (
APIENTRYP
 
	tPFNGLCOPYTEXIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
);

3461 (
APIENTRYP
 
	tPFNGLCOPYTEXSUBIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

3462 (
APIENTRYP
 
	tPFNGLCOPYTEXSUBIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

3463 (
APIENTRYP
 
	tPFNGLCOPYTEXSUBIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

3464 
GLEE_EXTERN
 
PFNGLCOPYTEXIMAGE1DEXTPROC
 
	gpglC›yTexImage1DEXT
;

3465 
GLEE_EXTERN
 
PFNGLCOPYTEXIMAGE2DEXTPROC
 
	gpglC›yTexImage2DEXT
;

3466 
GLEE_EXTERN
 
PFNGLCOPYTEXSUBIMAGE1DEXTPROC
 
	gpglC›yTexSubImage1DEXT
;

3467 
GLEE_EXTERN
 
PFNGLCOPYTEXSUBIMAGE2DEXTPROC
 
	gpglC›yTexSubImage2DEXT
;

3468 
GLEE_EXTERN
 
PFNGLCOPYTEXSUBIMAGE3DEXTPROC
 
	gpglC›yTexSubImage3DEXT
;

3469 
	#glC›yTexImage1DEXT
 
pglC›yTexImage1DEXT


	)

3470 
	#glC›yTexImage2DEXT
 
pglC›yTexImage2DEXT


	)

3471 
	#glC›yTexSubImage1DEXT
 
pglC›yTexSubImage1DEXT


	)

3472 
	#glC›yTexSubImage2DEXT
 
pglC›yTexSubImage2DEXT


	)

3473 
	#glC›yTexSubImage3DEXT
 
pglC›yTexSubImage3DEXT


	)

3478 #i‚de‡
GL_EXT_hi°ogøm


3479 
	#GL_EXT_hi°ogøm
 1

	)

3480 
	#__GLEE_GL_EXT_hi°ogøm
 1

	)

3482 
	#GL_HISTOGRAM_EXT
 0x8024

	)

3483 
	#GL_PROXY_HISTOGRAM_EXT
 0x8025

	)

3484 
	#GL_HISTOGRAM_WIDTH_EXT
 0x8026

	)

3485 
	#GL_HISTOGRAM_FORMAT_EXT
 0x8027

	)

3486 
	#GL_HISTOGRAM_RED_SIZE_EXT
 0x8028

	)

3487 
	#GL_HISTOGRAM_GREEN_SIZE_EXT
 0x8029

	)

3488 
	#GL_HISTOGRAM_BLUE_SIZE_EXT
 0x802A

	)

3489 
	#GL_HISTOGRAM_ALPHA_SIZE_EXT
 0x802B

	)

3490 
	#GL_HISTOGRAM_LUMINANCE_SIZE_EXT
 0x802C

	)

3491 
	#GL_HISTOGRAM_SINK_EXT
 0x802D

	)

3492 
	#GL_MINMAX_EXT
 0x802E

	)

3493 
	#GL_MINMAX_FORMAT_EXT
 0x802F

	)

3494 
	#GL_MINMAX_SINK_EXT
 0x8030

	)

3495 
	#GL_TABLE_TOO_LARGE_EXT
 0x8031

	)

3496 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLboﬁón
 
	tª£t
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 * 
	tvÆues
);

3497 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

3498 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

3499 (
APIENTRYP
 
	tPFNGLGETMINMAXEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLboﬁón
 
	tª£t
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 * 
	tvÆues
);

3500 (
APIENTRYP
 
	tPFNGLGETMINMAXPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

3501 (
APIENTRYP
 
	tPFNGLGETMINMAXPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

3502 (
APIENTRYP
 
	tPFNGLHISTOGRAMEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	twidth
, GLíum 
	töã∫Æf‹m©
, 
	tGLboﬁón
 
	tsök
);

3503 (
APIENTRYP
 
	tPFNGLMINMAXEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLboﬁón
 
	tsök
);

3504 (
APIENTRYP
 
	tPFNGLRESETHISTOGRAMEXTPROC
Ë(
	tGLíum
 
	tèrgë
);

3505 (
APIENTRYP
 
	tPFNGLRESETMINMAXEXTPROC
Ë(
	tGLíum
 
	tèrgë
);

3506 
GLEE_EXTERN
 
PFNGLGETHISTOGRAMEXTPROC
 
	gpglGëHi°ogømEXT
;

3507 
GLEE_EXTERN
 
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC
 
	gpglGëHi°ogømP¨amëîfvEXT
;

3508 
GLEE_EXTERN
 
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC
 
	gpglGëHi°ogømP¨amëîivEXT
;

3509 
GLEE_EXTERN
 
PFNGLGETMINMAXEXTPROC
 
	gpglGëMömaxEXT
;

3510 
GLEE_EXTERN
 
PFNGLGETMINMAXPARAMETERFVEXTPROC
 
	gpglGëMömaxP¨amëîfvEXT
;

3511 
GLEE_EXTERN
 
PFNGLGETMINMAXPARAMETERIVEXTPROC
 
	gpglGëMömaxP¨amëîivEXT
;

3512 
GLEE_EXTERN
 
PFNGLHISTOGRAMEXTPROC
 
	gpglHi°ogømEXT
;

3513 
GLEE_EXTERN
 
PFNGLMINMAXEXTPROC
 
	gpglMömaxEXT
;

3514 
GLEE_EXTERN
 
PFNGLRESETHISTOGRAMEXTPROC
 
	gpglRe£tHi°ogømEXT
;

3515 
GLEE_EXTERN
 
PFNGLRESETMINMAXEXTPROC
 
	gpglRe£tMömaxEXT
;

3516 
	#glGëHi°ogømEXT
 
pglGëHi°ogømEXT


	)

3517 
	#glGëHi°ogømP¨amëîfvEXT
 
pglGëHi°ogømP¨amëîfvEXT


	)

3518 
	#glGëHi°ogømP¨amëîivEXT
 
pglGëHi°ogømP¨amëîivEXT


	)

3519 
	#glGëMömaxEXT
 
pglGëMömaxEXT


	)

3520 
	#glGëMömaxP¨amëîfvEXT
 
pglGëMömaxP¨amëîfvEXT


	)

3521 
	#glGëMömaxP¨amëîivEXT
 
pglGëMömaxP¨amëîivEXT


	)

3522 
	#glHi°ogømEXT
 
pglHi°ogømEXT


	)

3523 
	#glMömaxEXT
 
pglMömaxEXT


	)

3524 
	#glRe£tHi°ogømEXT
 
pglRe£tHi°ogømEXT


	)

3525 
	#glRe£tMömaxEXT
 
pglRe£tMömaxEXT


	)

3530 #i‚de‡
GL_EXT_c⁄vﬁuti⁄


3531 
	#GL_EXT_c⁄vﬁuti⁄
 1

	)

3532 
	#__GLEE_GL_EXT_c⁄vﬁuti⁄
 1

	)

3534 
	#GL_CONVOLUTION_1D_EXT
 0x8010

	)

3535 
	#GL_CONVOLUTION_2D_EXT
 0x8011

	)

3536 
	#GL_SEPARABLE_2D_EXT
 0x8012

	)

3537 
	#GL_CONVOLUTION_BORDER_MODE_EXT
 0x8013

	)

3538 
	#GL_CONVOLUTION_FILTER_SCALE_EXT
 0x8014

	)

3539 
	#GL_CONVOLUTION_FILTER_BIAS_EXT
 0x8015

	)

3540 
	#GL_REDUCE_EXT
 0x8016

	)

3541 
	#GL_CONVOLUTION_FORMAT_EXT
 0x8017

	)

3542 
	#GL_CONVOLUTION_WIDTH_EXT
 0x8018

	)

3543 
	#GL_CONVOLUTION_HEIGHT_EXT
 0x8019

	)

3544 
	#GL_MAX_CONVOLUTION_WIDTH_EXT
 0x801A

	)

3545 
	#GL_MAX_CONVOLUTION_HEIGHT_EXT
 0x801B

	)

3546 
	#GL_POST_CONVOLUTION_RED_SCALE_EXT
 0x801C

	)

3547 
	#GL_POST_CONVOLUTION_GREEN_SCALE_EXT
 0x801D

	)

3548 
	#GL_POST_CONVOLUTION_BLUE_SCALE_EXT
 0x801E

	)

3549 
	#GL_POST_CONVOLUTION_ALPHA_SCALE_EXT
 0x801F

	)

3550 
	#GL_POST_CONVOLUTION_RED_BIAS_EXT
 0x8020

	)

3551 
	#GL_POST_CONVOLUTION_GREEN_BIAS_EXT
 0x8021

	)

3552 
	#GL_POST_CONVOLUTION_BLUE_BIAS_EXT
 0x8022

	)

3553 
	#GL_POST_CONVOLUTION_ALPHA_BIAS_EXT
 0x8023

	)

3554 (
APIENTRYP
 
	tPFNGLCONVOLUTIONFILTER1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	timage
);

3555 (
APIENTRYP
 
	tPFNGLCONVOLUTIONFILTER2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	timage
);

3556 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERFEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øms
);

3557 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

3558 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERIEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øms
);

3559 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

3560 (
APIENTRYP
 
	tPFNGLCOPYCONVOLUTIONFILTER1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

3561 (
APIENTRYP
 
	tPFNGLCOPYCONVOLUTIONFILTER2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

3562 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONFILTEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 * 
	timage
);

3563 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

3564 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

3565 (
APIENTRYP
 
	tPFNGLGETSEPARABLEFILTEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 * 
	trow
, GLvoid * 
	tcﬁumn
, GLvoid * 
	t•™
);

3566 (
APIENTRYP
 
	tPFNGLSEPARABLEFILTER2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	trow
, c⁄° GLvoid * 
	tcﬁumn
);

3567 
GLEE_EXTERN
 
PFNGLCONVOLUTIONFILTER1DEXTPROC
 
	gpglC⁄vﬁuti⁄Fûãr1DEXT
;

3568 
GLEE_EXTERN
 
PFNGLCONVOLUTIONFILTER2DEXTPROC
 
	gpglC⁄vﬁuti⁄Fûãr2DEXT
;

3569 
GLEE_EXTERN
 
PFNGLCONVOLUTIONPARAMETERFEXTPROC
 
	gpglC⁄vﬁuti⁄P¨amëîfEXT
;

3570 
GLEE_EXTERN
 
PFNGLCONVOLUTIONPARAMETERFVEXTPROC
 
	gpglC⁄vﬁuti⁄P¨amëîfvEXT
;

3571 
GLEE_EXTERN
 
PFNGLCONVOLUTIONPARAMETERIEXTPROC
 
	gpglC⁄vﬁuti⁄P¨amëîiEXT
;

3572 
GLEE_EXTERN
 
PFNGLCONVOLUTIONPARAMETERIVEXTPROC
 
	gpglC⁄vﬁuti⁄P¨amëîivEXT
;

3573 
GLEE_EXTERN
 
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC
 
	gpglC›yC⁄vﬁuti⁄Fûãr1DEXT
;

3574 
GLEE_EXTERN
 
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC
 
	gpglC›yC⁄vﬁuti⁄Fûãr2DEXT
;

3575 
GLEE_EXTERN
 
PFNGLGETCONVOLUTIONFILTEREXTPROC
 
	gpglGëC⁄vﬁuti⁄FûãrEXT
;

3576 
GLEE_EXTERN
 
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC
 
	gpglGëC⁄vﬁuti⁄P¨amëîfvEXT
;

3577 
GLEE_EXTERN
 
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC
 
	gpglGëC⁄vﬁuti⁄P¨amëîivEXT
;

3578 
GLEE_EXTERN
 
PFNGLGETSEPARABLEFILTEREXTPROC
 
	gpglGëSï¨abÀFûãrEXT
;

3579 
GLEE_EXTERN
 
PFNGLSEPARABLEFILTER2DEXTPROC
 
	gpglSï¨abÀFûãr2DEXT
;

3580 
	#glC⁄vﬁuti⁄Fûãr1DEXT
 
pglC⁄vﬁuti⁄Fûãr1DEXT


	)

3581 
	#glC⁄vﬁuti⁄Fûãr2DEXT
 
pglC⁄vﬁuti⁄Fûãr2DEXT


	)

3582 
	#glC⁄vﬁuti⁄P¨amëîfEXT
 
pglC⁄vﬁuti⁄P¨amëîfEXT


	)

3583 
	#glC⁄vﬁuti⁄P¨amëîfvEXT
 
pglC⁄vﬁuti⁄P¨amëîfvEXT


	)

3584 
	#glC⁄vﬁuti⁄P¨amëîiEXT
 
pglC⁄vﬁuti⁄P¨amëîiEXT


	)

3585 
	#glC⁄vﬁuti⁄P¨amëîivEXT
 
pglC⁄vﬁuti⁄P¨amëîivEXT


	)

3586 
	#glC›yC⁄vﬁuti⁄Fûãr1DEXT
 
pglC›yC⁄vﬁuti⁄Fûãr1DEXT


	)

3587 
	#glC›yC⁄vﬁuti⁄Fûãr2DEXT
 
pglC›yC⁄vﬁuti⁄Fûãr2DEXT


	)

3588 
	#glGëC⁄vﬁuti⁄FûãrEXT
 
pglGëC⁄vﬁuti⁄FûãrEXT


	)

3589 
	#glGëC⁄vﬁuti⁄P¨amëîfvEXT
 
pglGëC⁄vﬁuti⁄P¨amëîfvEXT


	)

3590 
	#glGëC⁄vﬁuti⁄P¨amëîivEXT
 
pglGëC⁄vﬁuti⁄P¨amëîivEXT


	)

3591 
	#glGëSï¨abÀFûãrEXT
 
pglGëSï¨abÀFûãrEXT


	)

3592 
	#glSï¨abÀFûãr2DEXT
 
pglSï¨abÀFûãr2DEXT


	)

3597 #i‚de‡
GL_SGI_cﬁ‹_m©rix


3598 
	#GL_SGI_cﬁ‹_m©rix
 1

	)

3599 
	#__GLEE_GL_SGI_cﬁ‹_m©rix
 1

	)

3601 
	#GL_COLOR_MATRIX_SGI
 0x80B1

	)

3602 
	#GL_COLOR_MATRIX_STACK_DEPTH_SGI
 0x80B2

	)

3603 
	#GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI
 0x80B3

	)

3604 
	#GL_POST_COLOR_MATRIX_RED_SCALE_SGI
 0x80B4

	)

3605 
	#GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI
 0x80B5

	)

3606 
	#GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI
 0x80B6

	)

3607 
	#GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI
 0x80B7

	)

3608 
	#GL_POST_COLOR_MATRIX_RED_BIAS_SGI
 0x80B8

	)

3609 
	#GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI
 0x80B9

	)

3610 
	#GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI
 0x80BA

	)

3611 
	#GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI
 0x80BB

	)

3616 #i‚de‡
GL_SGI_cﬁ‹_èbÀ


3617 
	#GL_SGI_cﬁ‹_èbÀ
 1

	)

3618 
	#__GLEE_GL_SGI_cﬁ‹_èbÀ
 1

	)

3620 
	#GL_COLOR_TABLE_SGI
 0x80D0

	)

3621 
	#GL_POST_CONVOLUTION_COLOR_TABLE_SGI
 0x80D1

	)

3622 
	#GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI
 0x80D2

	)

3623 
	#GL_PROXY_COLOR_TABLE_SGI
 0x80D3

	)

3624 
	#GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI
 0x80D4

	)

3625 
	#GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI
 0x80D5

	)

3626 
	#GL_COLOR_TABLE_SCALE_SGI
 0x80D6

	)

3627 
	#GL_COLOR_TABLE_BIAS_SGI
 0x80D7

	)

3628 
	#GL_COLOR_TABLE_FORMAT_SGI
 0x80D8

	)

3629 
	#GL_COLOR_TABLE_WIDTH_SGI
 0x80D9

	)

3630 
	#GL_COLOR_TABLE_RED_SIZE_SGI
 0x80DA

	)

3631 
	#GL_COLOR_TABLE_GREEN_SIZE_SGI
 0x80DB

	)

3632 
	#GL_COLOR_TABLE_BLUE_SIZE_SGI
 0x80DC

	)

3633 
	#GL_COLOR_TABLE_ALPHA_SIZE_SGI
 0x80DD

	)

3634 
	#GL_COLOR_TABLE_LUMINANCE_SIZE_SGI
 0x80DE

	)

3635 
	#GL_COLOR_TABLE_INTENSITY_SIZE_SGI
 0x80DF

	)

3636 (
APIENTRYP
 
	tPFNGLCOLORTABLESGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	tèbÀ
);

3637 (
APIENTRYP
 
	tPFNGLCOLORTABLEPARAMETERFVSGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

3638 (
APIENTRYP
 
	tPFNGLCOLORTABLEPARAMETERIVSGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

3639 (
APIENTRYP
 
	tPFNGLCOPYCOLORTABLESGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

3640 (
APIENTRYP
 
	tPFNGLGETCOLORTABLESGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 * 
	tèbÀ
);

3641 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERFVSGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

3642 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERIVSGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

3643 
GLEE_EXTERN
 
PFNGLCOLORTABLESGIPROC
 
	gpglCﬁ‹TabÀSGI
;

3644 
GLEE_EXTERN
 
PFNGLCOLORTABLEPARAMETERFVSGIPROC
 
	gpglCﬁ‹TabÀP¨amëîfvSGI
;

3645 
GLEE_EXTERN
 
PFNGLCOLORTABLEPARAMETERIVSGIPROC
 
	gpglCﬁ‹TabÀP¨amëîivSGI
;

3646 
GLEE_EXTERN
 
PFNGLCOPYCOLORTABLESGIPROC
 
	gpglC›yCﬁ‹TabÀSGI
;

3647 
GLEE_EXTERN
 
PFNGLGETCOLORTABLESGIPROC
 
	gpglGëCﬁ‹TabÀSGI
;

3648 
GLEE_EXTERN
 
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC
 
	gpglGëCﬁ‹TabÀP¨amëîfvSGI
;

3649 
GLEE_EXTERN
 
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC
 
	gpglGëCﬁ‹TabÀP¨amëîivSGI
;

3650 
	#glCﬁ‹TabÀSGI
 
pglCﬁ‹TabÀSGI


	)

3651 
	#glCﬁ‹TabÀP¨amëîfvSGI
 
pglCﬁ‹TabÀP¨amëîfvSGI


	)

3652 
	#glCﬁ‹TabÀP¨amëîivSGI
 
pglCﬁ‹TabÀP¨amëîivSGI


	)

3653 
	#glC›yCﬁ‹TabÀSGI
 
pglC›yCﬁ‹TabÀSGI


	)

3654 
	#glGëCﬁ‹TabÀSGI
 
pglGëCﬁ‹TabÀSGI


	)

3655 
	#glGëCﬁ‹TabÀP¨amëîfvSGI
 
pglGëCﬁ‹TabÀP¨amëîfvSGI


	)

3656 
	#glGëCﬁ‹TabÀP¨amëîivSGI
 
pglGëCﬁ‹TabÀP¨amëîivSGI


	)

3661 #i‚de‡
GL_SGIS_pixñ_ãxtuª


3662 
	#GL_SGIS_pixñ_ãxtuª
 1

	)

3663 
	#__GLEE_GL_SGIS_pixñ_ãxtuª
 1

	)

3665 
	#GL_PIXEL_TEXTURE_SGIS
 0x8353

	)

3666 
	#GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS
 0x8354

	)

3667 
	#GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS
 0x8355

	)

3668 
	#GL_PIXEL_GROUP_COLOR_SGIS
 0x8356

	)

3669 (
APIENTRYP
 
	tPFNGLPIXELTEXGENPARAMETERISGISPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

3670 (
APIENTRYP
 
	tPFNGLPIXELTEXGENPARAMETERIVSGISPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

3671 (
APIENTRYP
 
	tPFNGLPIXELTEXGENPARAMETERFSGISPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

3672 (
APIENTRYP
 
	tPFNGLPIXELTEXGENPARAMETERFVSGISPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

3673 (
APIENTRYP
 
	tPFNGLGETPIXELTEXGENPARAMETERIVSGISPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

3674 (
APIENTRYP
 
	tPFNGLGETPIXELTEXGENPARAMETERFVSGISPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

3675 
GLEE_EXTERN
 
PFNGLPIXELTEXGENPARAMETERISGISPROC
 
	gpglPixñTexGíP¨amëîiSGIS
;

3676 
GLEE_EXTERN
 
PFNGLPIXELTEXGENPARAMETERIVSGISPROC
 
	gpglPixñTexGíP¨amëîivSGIS
;

3677 
GLEE_EXTERN
 
PFNGLPIXELTEXGENPARAMETERFSGISPROC
 
	gpglPixñTexGíP¨amëîfSGIS
;

3678 
GLEE_EXTERN
 
PFNGLPIXELTEXGENPARAMETERFVSGISPROC
 
	gpglPixñTexGíP¨amëîfvSGIS
;

3679 
GLEE_EXTERN
 
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC
 
	gpglGëPixñTexGíP¨amëîivSGIS
;

3680 
GLEE_EXTERN
 
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC
 
	gpglGëPixñTexGíP¨amëîfvSGIS
;

3681 
	#glPixñTexGíP¨amëîiSGIS
 
pglPixñTexGíP¨amëîiSGIS


	)

3682 
	#glPixñTexGíP¨amëîivSGIS
 
pglPixñTexGíP¨amëîivSGIS


	)

3683 
	#glPixñTexGíP¨amëîfSGIS
 
pglPixñTexGíP¨amëîfSGIS


	)

3684 
	#glPixñTexGíP¨amëîfvSGIS
 
pglPixñTexGíP¨amëîfvSGIS


	)

3685 
	#glGëPixñTexGíP¨amëîivSGIS
 
pglGëPixñTexGíP¨amëîivSGIS


	)

3686 
	#glGëPixñTexGíP¨amëîfvSGIS
 
pglGëPixñTexGíP¨amëîfvSGIS


	)

3691 #i‚de‡
GL_SGIX_pixñ_ãxtuª


3692 
	#GL_SGIX_pixñ_ãxtuª
 1

	)

3693 
	#__GLEE_GL_SGIX_pixñ_ãxtuª
 1

	)

3695 
	#GL_PIXEL_TEX_GEN_SGIX
 0x8139

	)

3696 
	#GL_PIXEL_TEX_GEN_MODE_SGIX
 0x832B

	)

3697 (
APIENTRYP
 
	tPFNGLPIXELTEXGENSGIXPROC
Ë(
	tGLíum
 
	tmode
);

3698 
GLEE_EXTERN
 
PFNGLPIXELTEXGENSGIXPROC
 
	gpglPixñTexGíSGIX
;

3699 
	#glPixñTexGíSGIX
 
pglPixñTexGíSGIX


	)

3704 #i‚de‡
GL_SGIS_ãxtuª4D


3705 
	#GL_SGIS_ãxtuª4D
 1

	)

3706 
	#__GLEE_GL_SGIS_ãxtuª4D
 1

	)

3708 
	#GL_PACK_SKIP_VOLUMES_SGIS
 0x8130

	)

3709 
	#GL_PACK_IMAGE_DEPTH_SGIS
 0x8131

	)

3710 
	#GL_UNPACK_SKIP_VOLUMES_SGIS
 0x8132

	)

3711 
	#GL_UNPACK_IMAGE_DEPTH_SGIS
 0x8133

	)

3712 
	#GL_TEXTURE_4D_SGIS
 0x8134

	)

3713 
	#GL_PROXY_TEXTURE_4D_SGIS
 0x8135

	)

3714 
	#GL_TEXTURE_4DSIZE_SGIS
 0x8136

	)

3715 
	#GL_TEXTURE_WRAP_Q_SGIS
 0x8137

	)

3716 
	#GL_MAX_4D_TEXTURE_SIZE_SGIS
 0x8138

	)

3717 
	#GL_TEXTURE_4D_BINDING_SGIS
 0x814F

	)

3718 (
APIENTRYP
 
	tPFNGLTEXIMAGE4DSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLsizeò
	tsize4d
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	tpixñs
);

3719 (
APIENTRYP
 
	tPFNGLTEXSUBIMAGE4DSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, GLöà
	twoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLsizeò
	tsize4d
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	tpixñs
);

3720 
GLEE_EXTERN
 
PFNGLTEXIMAGE4DSGISPROC
 
	gpglTexImage4DSGIS
;

3721 
GLEE_EXTERN
 
PFNGLTEXSUBIMAGE4DSGISPROC
 
	gpglTexSubImage4DSGIS
;

3722 
	#glTexImage4DSGIS
 
pglTexImage4DSGIS


	)

3723 
	#glTexSubImage4DSGIS
 
pglTexSubImage4DSGIS


	)

3728 #i‚de‡
GL_SGI_ãxtuª_cﬁ‹_èbÀ


3729 
	#GL_SGI_ãxtuª_cﬁ‹_èbÀ
 1

	)

3730 
	#__GLEE_GL_SGI_ãxtuª_cﬁ‹_èbÀ
 1

	)

3732 
	#GL_TEXTURE_COLOR_TABLE_SGI
 0x80BC

	)

3733 
	#GL_PROXY_TEXTURE_COLOR_TABLE_SGI
 0x80BD

	)

3738 #i‚de‡
GL_EXT_cmyka


3739 
	#GL_EXT_cmyka
 1

	)

3740 
	#__GLEE_GL_EXT_cmyka
 1

	)

3742 
	#GL_CMYK_EXT
 0x800C

	)

3743 
	#GL_CMYKA_EXT
 0x800D

	)

3744 
	#GL_PACK_CMYK_HINT_EXT
 0x800E

	)

3745 
	#GL_UNPACK_CMYK_HINT_EXT
 0x800F

	)

3750 #i‚de‡
GL_EXT_ãxtuª_obje˘


3751 
	#GL_EXT_ãxtuª_obje˘
 1

	)

3752 
	#__GLEE_GL_EXT_ãxtuª_obje˘
 1

	)

3754 
	#GL_TEXTURE_PRIORITY_EXT
 0x8066

	)

3755 
	#GL_TEXTURE_RESIDENT_EXT
 0x8067

	)

3756 
	#GL_TEXTURE_1D_BINDING_EXT
 0x8068

	)

3757 
	#GL_TEXTURE_2D_BINDING_EXT
 0x8069

	)

3758 
	#GL_TEXTURE_3D_BINDING_EXT
 0x806A

	)

3759 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLARETEXTURESRESIDENTEXTPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	tãxtuªs
, 
	tGLboﬁón
 * 
	tªsidí˚s
);

3760 (
APIENTRYP
 
	tPFNGLBINDTEXTUREEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tãxtuª
);

3761 (
APIENTRYP
 
	tPFNGLDELETETEXTURESEXTPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	tãxtuªs
);

3762 (
APIENTRYP
 
	tPFNGLGENTEXTURESEXTPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 * 
	tãxtuªs
);

3763 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISTEXTUREEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
);

3764 (
APIENTRYP
 
	tPFNGLPRIORITIZETEXTURESEXTPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	tãxtuªs
, c⁄° 
	tGL˛ampf
 * 
	t¥i‹ôõs
);

3765 
GLEE_EXTERN
 
PFNGLARETEXTURESRESIDENTEXTPROC
 
	gpglAªTextuªsResidítEXT
;

3766 
GLEE_EXTERN
 
PFNGLBINDTEXTUREEXTPROC
 
	gpglBödTextuªEXT
;

3767 
GLEE_EXTERN
 
PFNGLDELETETEXTURESEXTPROC
 
	gpglDñëeTextuªsEXT
;

3768 
GLEE_EXTERN
 
PFNGLGENTEXTURESEXTPROC
 
	gpglGíTextuªsEXT
;

3769 
GLEE_EXTERN
 
PFNGLISTEXTUREEXTPROC
 
	gpglIsTextuªEXT
;

3770 
GLEE_EXTERN
 
PFNGLPRIORITIZETEXTURESEXTPROC
 
	gpglPri‹ôizeTextuªsEXT
;

3771 
	#glAªTextuªsResidítEXT
 
pglAªTextuªsResidítEXT


	)

3772 
	#glBödTextuªEXT
 
pglBödTextuªEXT


	)

3773 
	#glDñëeTextuªsEXT
 
pglDñëeTextuªsEXT


	)

3774 
	#glGíTextuªsEXT
 
pglGíTextuªsEXT


	)

3775 
	#glIsTextuªEXT
 
pglIsTextuªEXT


	)

3776 
	#glPri‹ôizeTextuªsEXT
 
pglPri‹ôizeTextuªsEXT


	)

3781 #i‚de‡
GL_SGIS_dëaû_ãxtuª


3782 
	#GL_SGIS_dëaû_ãxtuª
 1

	)

3783 
	#__GLEE_GL_SGIS_dëaû_ãxtuª
 1

	)

3785 
	#GL_DETAIL_TEXTURE_2D_SGIS
 0x8095

	)

3786 
	#GL_DETAIL_TEXTURE_2D_BINDING_SGIS
 0x8096

	)

3787 
	#GL_LINEAR_DETAIL_SGIS
 0x8097

	)

3788 
	#GL_LINEAR_DETAIL_ALPHA_SGIS
 0x8098

	)

3789 
	#GL_LINEAR_DETAIL_COLOR_SGIS
 0x8099

	)

3790 
	#GL_DETAIL_TEXTURE_LEVEL_SGIS
 0x809A

	)

3791 
	#GL_DETAIL_TEXTURE_MODE_SGIS
 0x809B

	)

3792 
	#GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS
 0x809C

	)

3793 (
APIENTRYP
 
	tPFNGLDETAILTEXFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLÊﬂt
 * 
	tpoöts
);

3794 (
APIENTRYP
 
	tPFNGLGETDETAILTEXFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 * 
	tpoöts
);

3795 
GLEE_EXTERN
 
PFNGLDETAILTEXFUNCSGISPROC
 
	gpglDëaûTexFuncSGIS
;

3796 
GLEE_EXTERN
 
PFNGLGETDETAILTEXFUNCSGISPROC
 
	gpglGëDëaûTexFuncSGIS
;

3797 
	#glDëaûTexFuncSGIS
 
pglDëaûTexFuncSGIS


	)

3798 
	#glGëDëaûTexFuncSGIS
 
pglGëDëaûTexFuncSGIS


	)

3803 #i‚de‡
GL_SGIS_sh¨≥n_ãxtuª


3804 
	#GL_SGIS_sh¨≥n_ãxtuª
 1

	)

3805 
	#__GLEE_GL_SGIS_sh¨≥n_ãxtuª
 1

	)

3807 
	#GL_LINEAR_SHARPEN_SGIS
 0x80AD

	)

3808 
	#GL_LINEAR_SHARPEN_ALPHA_SGIS
 0x80AE

	)

3809 
	#GL_LINEAR_SHARPEN_COLOR_SGIS
 0x80AF

	)

3810 
	#GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS
 0x80B0

	)

3811 (
APIENTRYP
 
	tPFNGLSHARPENTEXFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLÊﬂt
 * 
	tpoöts
);

3812 (
APIENTRYP
 
	tPFNGLGETSHARPENTEXFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 * 
	tpoöts
);

3813 
GLEE_EXTERN
 
PFNGLSHARPENTEXFUNCSGISPROC
 
	gpglSh¨≥nTexFuncSGIS
;

3814 
GLEE_EXTERN
 
PFNGLGETSHARPENTEXFUNCSGISPROC
 
	gpglGëSh¨≥nTexFuncSGIS
;

3815 
	#glSh¨≥nTexFuncSGIS
 
pglSh¨≥nTexFuncSGIS


	)

3816 
	#glGëSh¨≥nTexFuncSGIS
 
pglGëSh¨≥nTexFuncSGIS


	)

3821 #i‚de‡
GL_EXT_∑cked_pixñs


3822 
	#GL_EXT_∑cked_pixñs
 1

	)

3823 
	#__GLEE_GL_EXT_∑cked_pixñs
 1

	)

3825 
	#GL_UNSIGNED_BYTE_3_3_2_EXT
 0x8032

	)

3826 
	#GL_UNSIGNED_SHORT_4_4_4_4_EXT
 0x8033

	)

3827 
	#GL_UNSIGNED_SHORT_5_5_5_1_EXT
 0x8034

	)

3828 
	#GL_UNSIGNED_INT_8_8_8_8_EXT
 0x8035

	)

3829 
	#GL_UNSIGNED_INT_10_10_10_2_EXT
 0x8036

	)

3834 #i‚de‡
GL_SGIS_ãxtuª_lod


3835 
	#GL_SGIS_ãxtuª_lod
 1

	)

3836 
	#__GLEE_GL_SGIS_ãxtuª_lod
 1

	)

3838 
	#GL_TEXTURE_MIN_LOD_SGIS
 0x813A

	)

3839 
	#GL_TEXTURE_MAX_LOD_SGIS
 0x813B

	)

3840 
	#GL_TEXTURE_BASE_LEVEL_SGIS
 0x813C

	)

3841 
	#GL_TEXTURE_MAX_LEVEL_SGIS
 0x813D

	)

3846 #i‚de‡
GL_SGIS_mu…ißm∂e


3847 
	#GL_SGIS_mu…ißm∂e
 1

	)

3848 
	#__GLEE_GL_SGIS_mu…ißm∂e
 1

	)

3850 
	#GL_MULTISAMPLE_SGIS
 0x809D

	)

3851 
	#GL_SAMPLE_ALPHA_TO_MASK_SGIS
 0x809E

	)

3852 
	#GL_SAMPLE_ALPHA_TO_ONE_SGIS
 0x809F

	)

3853 
	#GL_SAMPLE_MASK_SGIS
 0x80A0

	)

3854 
	#GL_1PASS_SGIS
 0x80A1

	)

3855 
	#GL_2PASS_0_SGIS
 0x80A2

	)

3856 
	#GL_2PASS_1_SGIS
 0x80A3

	)

3857 
	#GL_4PASS_0_SGIS
 0x80A4

	)

3858 
	#GL_4PASS_1_SGIS
 0x80A5

	)

3859 
	#GL_4PASS_2_SGIS
 0x80A6

	)

3860 
	#GL_4PASS_3_SGIS
 0x80A7

	)

3861 
	#GL_SAMPLE_BUFFERS_SGIS
 0x80A8

	)

3862 
	#GL_SAMPLES_SGIS
 0x80A9

	)

3863 
	#GL_SAMPLE_MASK_VALUE_SGIS
 0x80AA

	)

3864 
	#GL_SAMPLE_MASK_INVERT_SGIS
 0x80AB

	)

3865 
	#GL_SAMPLE_PATTERN_SGIS
 0x80AC

	)

3866 (
APIENTRYP
 
	tPFNGLSAMPLEMASKSGISPROC
Ë(
	tGL˛ampf
 
	tvÆue
, 
	tGLboﬁón
 
	tövît
);

3867 (
APIENTRYP
 
	tPFNGLSAMPLEPATTERNSGISPROC
Ë(
	tGLíum
 
	t∑âîn
);

3868 
GLEE_EXTERN
 
PFNGLSAMPLEMASKSGISPROC
 
	gpglSam∂eMaskSGIS
;

3869 
GLEE_EXTERN
 
PFNGLSAMPLEPATTERNSGISPROC
 
	gpglSam∂eP©ã∫SGIS
;

3870 
	#glSam∂eMaskSGIS
 
pglSam∂eMaskSGIS


	)

3871 
	#glSam∂eP©ã∫SGIS
 
pglSam∂eP©ã∫SGIS


	)

3876 #i‚de‡
GL_EXT_ªsˇÀ_n‹mÆ


3877 
	#GL_EXT_ªsˇÀ_n‹mÆ
 1

	)

3878 
	#__GLEE_GL_EXT_ªsˇÀ_n‹mÆ
 1

	)

3880 
	#GL_RESCALE_NORMAL_EXT
 0x803A

	)

3885 #i‚de‡
GL_EXT_vîãx_¨øy


3886 
	#GL_EXT_vîãx_¨øy
 1

	)

3887 
	#__GLEE_GL_EXT_vîãx_¨øy
 1

	)

3889 
	#GL_VERTEX_ARRAY_EXT
 0x8074

	)

3890 
	#GL_NORMAL_ARRAY_EXT
 0x8075

	)

3891 
	#GL_COLOR_ARRAY_EXT
 0x8076

	)

3892 
	#GL_INDEX_ARRAY_EXT
 0x8077

	)

3893 
	#GL_TEXTURE_COORD_ARRAY_EXT
 0x8078

	)

3894 
	#GL_EDGE_FLAG_ARRAY_EXT
 0x8079

	)

3895 
	#GL_VERTEX_ARRAY_SIZE_EXT
 0x807A

	)

3896 
	#GL_VERTEX_ARRAY_TYPE_EXT
 0x807B

	)

3897 
	#GL_VERTEX_ARRAY_STRIDE_EXT
 0x807C

	)

3898 
	#GL_VERTEX_ARRAY_COUNT_EXT
 0x807D

	)

3899 
	#GL_NORMAL_ARRAY_TYPE_EXT
 0x807E

	)

3900 
	#GL_NORMAL_ARRAY_STRIDE_EXT
 0x807F

	)

3901 
	#GL_NORMAL_ARRAY_COUNT_EXT
 0x8080

	)

3902 
	#GL_COLOR_ARRAY_SIZE_EXT
 0x8081

	)

3903 
	#GL_COLOR_ARRAY_TYPE_EXT
 0x8082

	)

3904 
	#GL_COLOR_ARRAY_STRIDE_EXT
 0x8083

	)

3905 
	#GL_COLOR_ARRAY_COUNT_EXT
 0x8084

	)

3906 
	#GL_INDEX_ARRAY_TYPE_EXT
 0x8085

	)

3907 
	#GL_INDEX_ARRAY_STRIDE_EXT
 0x8086

	)

3908 
	#GL_INDEX_ARRAY_COUNT_EXT
 0x8087

	)

3909 
	#GL_TEXTURE_COORD_ARRAY_SIZE_EXT
 0x8088

	)

3910 
	#GL_TEXTURE_COORD_ARRAY_TYPE_EXT
 0x8089

	)

3911 
	#GL_TEXTURE_COORD_ARRAY_STRIDE_EXT
 0x808A

	)

3912 
	#GL_TEXTURE_COORD_ARRAY_COUNT_EXT
 0x808B

	)

3913 
	#GL_EDGE_FLAG_ARRAY_STRIDE_EXT
 0x808C

	)

3914 
	#GL_EDGE_FLAG_ARRAY_COUNT_EXT
 0x808D

	)

3915 
	#GL_VERTEX_ARRAY_POINTER_EXT
 0x808E

	)

3916 
	#GL_NORMAL_ARRAY_POINTER_EXT
 0x808F

	)

3917 
	#GL_COLOR_ARRAY_POINTER_EXT
 0x8090

	)

3918 
	#GL_INDEX_ARRAY_POINTER_EXT
 0x8091

	)

3919 
	#GL_TEXTURE_COORD_ARRAY_POINTER_EXT
 0x8092

	)

3920 
	#GL_EDGE_FLAG_ARRAY_POINTER_EXT
 0x8093

	)

3921 (
APIENTRYP
 
	tPFNGLARRAYELEMENTEXTPROC
Ë(
	tGLöt
 
	ti
);

3922 (
APIENTRYP
 
	tPFNGLCOLORPOINTEREXTPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

3923 (
APIENTRYP
 
	tPFNGLDRAWARRAYSEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
);

3924 (
APIENTRYP
 
	tPFNGLEDGEFLAGPOINTEREXTPROC
Ë(
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLboﬁón
 * 
	tpoöãr
);

3925 (
APIENTRYP
 
	tPFNGLGETPOINTERVEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLvoid
* * 
	t∑øms
);

3926 (
APIENTRYP
 
	tPFNGLINDEXPOINTEREXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

3927 (
APIENTRYP
 
	tPFNGLNORMALPOINTEREXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

3928 (
APIENTRYP
 
	tPFNGLTEXCOORDPOINTEREXTPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

3929 (
APIENTRYP
 
	tPFNGLVERTEXPOINTEREXTPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

3930 
GLEE_EXTERN
 
PFNGLARRAYELEMENTEXTPROC
 
	gpglAºayEÀmítEXT
;

3931 
GLEE_EXTERN
 
PFNGLCOLORPOINTEREXTPROC
 
	gpglCﬁ‹PoöãrEXT
;

3932 
GLEE_EXTERN
 
PFNGLDRAWARRAYSEXTPROC
 
	gpglDøwAºaysEXT
;

3933 
GLEE_EXTERN
 
PFNGLEDGEFLAGPOINTEREXTPROC
 
	gpglEdgeFœgPoöãrEXT
;

3934 
GLEE_EXTERN
 
PFNGLGETPOINTERVEXTPROC
 
	gpglGëPoöãrvEXT
;

3935 
GLEE_EXTERN
 
PFNGLINDEXPOINTEREXTPROC
 
	gpglIndexPoöãrEXT
;

3936 
GLEE_EXTERN
 
PFNGLNORMALPOINTEREXTPROC
 
	gpglN‹mÆPoöãrEXT
;

3937 
GLEE_EXTERN
 
PFNGLTEXCOORDPOINTEREXTPROC
 
	gpglTexCo‹dPoöãrEXT
;

3938 
GLEE_EXTERN
 
PFNGLVERTEXPOINTEREXTPROC
 
	gpglVîãxPoöãrEXT
;

3939 
	#glAºayEÀmítEXT
 
pglAºayEÀmítEXT


	)

3940 
	#glCﬁ‹PoöãrEXT
 
pglCﬁ‹PoöãrEXT


	)

3941 
	#glDøwAºaysEXT
 
pglDøwAºaysEXT


	)

3942 
	#glEdgeFœgPoöãrEXT
 
pglEdgeFœgPoöãrEXT


	)

3943 
	#glGëPoöãrvEXT
 
pglGëPoöãrvEXT


	)

3944 
	#glIndexPoöãrEXT
 
pglIndexPoöãrEXT


	)

3945 
	#glN‹mÆPoöãrEXT
 
pglN‹mÆPoöãrEXT


	)

3946 
	#glTexCo‹dPoöãrEXT
 
pglTexCo‹dPoöãrEXT


	)

3947 
	#glVîãxPoöãrEXT
 
pglVîãxPoöãrEXT


	)

3952 #i‚de‡
GL_EXT_misc_©åibuã


3953 
	#GL_EXT_misc_©åibuã
 1

	)

3954 
	#__GLEE_GL_EXT_misc_©åibuã
 1

	)

3960 #i‚de‡
GL_SGIS_gíî©e_mùm≠


3961 
	#GL_SGIS_gíî©e_mùm≠
 1

	)

3962 
	#__GLEE_GL_SGIS_gíî©e_mùm≠
 1

	)

3964 
	#GL_GENERATE_MIPMAP_SGIS
 0x8191

	)

3965 
	#GL_GENERATE_MIPMAP_HINT_SGIS
 0x8192

	)

3970 #i‚de‡
GL_SGIX_˛ùm≠


3971 
	#GL_SGIX_˛ùm≠
 1

	)

3972 
	#__GLEE_GL_SGIX_˛ùm≠
 1

	)

3974 
	#GL_LINEAR_CLIPMAP_LINEAR_SGIX
 0x8170

	)

3975 
	#GL_TEXTURE_CLIPMAP_CENTER_SGIX
 0x8171

	)

3976 
	#GL_TEXTURE_CLIPMAP_FRAME_SGIX
 0x8172

	)

3977 
	#GL_TEXTURE_CLIPMAP_OFFSET_SGIX
 0x8173

	)

3978 
	#GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX
 0x8174

	)

3979 
	#GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX
 0x8175

	)

3980 
	#GL_TEXTURE_CLIPMAP_DEPTH_SGIX
 0x8176

	)

3981 
	#GL_MAX_CLIPMAP_DEPTH_SGIX
 0x8177

	)

3982 
	#GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX
 0x8178

	)

3983 
	#GL_NEAREST_CLIPMAP_NEAREST_SGIX
 0x844D

	)

3984 
	#GL_NEAREST_CLIPMAP_LINEAR_SGIX
 0x844E

	)

3985 
	#GL_LINEAR_CLIPMAP_NEAREST_SGIX
 0x844F

	)

3990 #i‚de‡
GL_SGIX_shadow


3991 
	#GL_SGIX_shadow
 1

	)

3992 
	#__GLEE_GL_SGIX_shadow
 1

	)

3994 
	#GL_TEXTURE_COMPARE_SGIX
 0x819A

	)

3995 
	#GL_TEXTURE_COMPARE_OPERATOR_SGIX
 0x819B

	)

3996 
	#GL_TEXTURE_LEQUAL_R_SGIX
 0x819C

	)

3997 
	#GL_TEXTURE_GEQUAL_R_SGIX
 0x819D

	)

4002 #i‚de‡
GL_SGIS_ãxtuª_edge_˛amp


4003 
	#GL_SGIS_ãxtuª_edge_˛amp
 1

	)

4004 
	#__GLEE_GL_SGIS_ãxtuª_edge_˛amp
 1

	)

4006 
	#GL_CLAMP_TO_EDGE_SGIS
 0x812F

	)

4011 #i‚de‡
GL_SGIS_ãxtuª_b‹dî_˛amp


4012 
	#GL_SGIS_ãxtuª_b‹dî_˛amp
 1

	)

4013 
	#__GLEE_GL_SGIS_ãxtuª_b‹dî_˛amp
 1

	)

4015 
	#GL_CLAMP_TO_BORDER_SGIS
 0x812D

	)

4020 #i‚de‡
GL_EXT_bÀnd_mömax


4021 
	#GL_EXT_bÀnd_mömax
 1

	)

4022 
	#__GLEE_GL_EXT_bÀnd_mömax
 1

	)

4024 
	#GL_FUNC_ADD_EXT
 0x8006

	)

4025 
	#GL_MIN_EXT
 0x8007

	)

4026 
	#GL_MAX_EXT
 0x8008

	)

4027 
	#GL_BLEND_EQUATION_EXT
 0x8009

	)

4028 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONEXTPROC
Ë(
	tGLíum
 
	tmode
);

4029 
GLEE_EXTERN
 
PFNGLBLENDEQUATIONEXTPROC
 
	gpglBÀndEqu©i⁄EXT
;

4030 
	#glBÀndEqu©i⁄EXT
 
pglBÀndEqu©i⁄EXT


	)

4035 #i‚de‡
GL_EXT_bÀnd_subåa˘


4036 
	#GL_EXT_bÀnd_subåa˘
 1

	)

4037 
	#__GLEE_GL_EXT_bÀnd_subåa˘
 1

	)

4039 
	#GL_FUNC_SUBTRACT_EXT
 0x800A

	)

4040 
	#GL_FUNC_REVERSE_SUBTRACT_EXT
 0x800B

	)

4045 #i‚de‡
GL_EXT_bÀnd_logic_›


4046 
	#GL_EXT_bÀnd_logic_›
 1

	)

4047 
	#__GLEE_GL_EXT_bÀnd_logic_›
 1

	)

4053 #i‚de‡
GL_SGIX_öãæa˚


4054 
	#GL_SGIX_öãæa˚
 1

	)

4055 
	#__GLEE_GL_SGIX_öãæa˚
 1

	)

4057 
	#GL_INTERLACE_SGIX
 0x8094

	)

4062 #i‚de‡
GL_SGIX_pixñ_tûes


4063 
	#GL_SGIX_pixñ_tûes
 1

	)

4064 
	#__GLEE_GL_SGIX_pixñ_tûes
 1

	)

4066 
	#GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX
 0x813E

	)

4067 
	#GL_PIXEL_TILE_CACHE_INCREMENT_SGIX
 0x813F

	)

4068 
	#GL_PIXEL_TILE_WIDTH_SGIX
 0x8140

	)

4069 
	#GL_PIXEL_TILE_HEIGHT_SGIX
 0x8141

	)

4070 
	#GL_PIXEL_TILE_GRID_WIDTH_SGIX
 0x8142

	)

4071 
	#GL_PIXEL_TILE_GRID_HEIGHT_SGIX
 0x8143

	)

4072 
	#GL_PIXEL_TILE_GRID_DEPTH_SGIX
 0x8144

	)

4073 
	#GL_PIXEL_TILE_CACHE_SIZE_SGIX
 0x8145

	)

4078 #i‚de‡
GL_SGIS_ãxtuª_£À˘


4079 
	#GL_SGIS_ãxtuª_£À˘
 1

	)

4080 
	#__GLEE_GL_SGIS_ãxtuª_£À˘
 1

	)

4082 
	#GL_DUAL_ALPHA4_SGIS
 0x8110

	)

4083 
	#GL_DUAL_ALPHA8_SGIS
 0x8111

	)

4084 
	#GL_DUAL_ALPHA12_SGIS
 0x8112

	)

4085 
	#GL_DUAL_ALPHA16_SGIS
 0x8113

	)

4086 
	#GL_DUAL_LUMINANCE4_SGIS
 0x8114

	)

4087 
	#GL_DUAL_LUMINANCE8_SGIS
 0x8115

	)

4088 
	#GL_DUAL_LUMINANCE12_SGIS
 0x8116

	)

4089 
	#GL_DUAL_LUMINANCE16_SGIS
 0x8117

	)

4090 
	#GL_DUAL_INTENSITY4_SGIS
 0x8118

	)

4091 
	#GL_DUAL_INTENSITY8_SGIS
 0x8119

	)

4092 
	#GL_DUAL_INTENSITY12_SGIS
 0x811A

	)

4093 
	#GL_DUAL_INTENSITY16_SGIS
 0x811B

	)

4094 
	#GL_DUAL_LUMINANCE_ALPHA4_SGIS
 0x811C

	)

4095 
	#GL_DUAL_LUMINANCE_ALPHA8_SGIS
 0x811D

	)

4096 
	#GL_QUAD_ALPHA4_SGIS
 0x811E

	)

4097 
	#GL_QUAD_ALPHA8_SGIS
 0x811F

	)

4098 
	#GL_QUAD_LUMINANCE4_SGIS
 0x8120

	)

4099 
	#GL_QUAD_LUMINANCE8_SGIS
 0x8121

	)

4100 
	#GL_QUAD_INTENSITY4_SGIS
 0x8122

	)

4101 
	#GL_QUAD_INTENSITY8_SGIS
 0x8123

	)

4102 
	#GL_DUAL_TEXTURE_SELECT_SGIS
 0x8124

	)

4103 
	#GL_QUAD_TEXTURE_SELECT_SGIS
 0x8125

	)

4108 #i‚de‡
GL_SGIX_•rôe


4109 
	#GL_SGIX_•rôe
 1

	)

4110 
	#__GLEE_GL_SGIX_•rôe
 1

	)

4112 
	#GL_SPRITE_SGIX
 0x8148

	)

4113 
	#GL_SPRITE_MODE_SGIX
 0x8149

	)

4114 
	#GL_SPRITE_AXIS_SGIX
 0x814A

	)

4115 
	#GL_SPRITE_TRANSLATION_SGIX
 0x814B

	)

4116 
	#GL_SPRITE_AXIAL_SGIX
 0x814C

	)

4117 
	#GL_SPRITE_OBJECT_ALIGNED_SGIX
 0x814D

	)

4118 
	#GL_SPRITE_EYE_ALIGNED_SGIX
 0x814E

	)

4119 (
APIENTRYP
 
	tPFNGLSPRITEPARAMETERFSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

4120 (
APIENTRYP
 
	tPFNGLSPRITEPARAMETERFVSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

4121 (
APIENTRYP
 
	tPFNGLSPRITEPARAMETERISGIXPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

4122 (
APIENTRYP
 
	tPFNGLSPRITEPARAMETERIVSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

4123 
GLEE_EXTERN
 
PFNGLSPRITEPARAMETERFSGIXPROC
 
	gpglS¥ôeP¨amëîfSGIX
;

4124 
GLEE_EXTERN
 
PFNGLSPRITEPARAMETERFVSGIXPROC
 
	gpglS¥ôeP¨amëîfvSGIX
;

4125 
GLEE_EXTERN
 
PFNGLSPRITEPARAMETERISGIXPROC
 
	gpglS¥ôeP¨amëîiSGIX
;

4126 
GLEE_EXTERN
 
PFNGLSPRITEPARAMETERIVSGIXPROC
 
	gpglS¥ôeP¨amëîivSGIX
;

4127 
	#glS¥ôeP¨amëîfSGIX
 
pglS¥ôeP¨amëîfSGIX


	)

4128 
	#glS¥ôeP¨amëîfvSGIX
 
pglS¥ôeP¨amëîfvSGIX


	)

4129 
	#glS¥ôeP¨amëîiSGIX
 
pglS¥ôeP¨amëîiSGIX


	)

4130 
	#glS¥ôeP¨amëîivSGIX
 
pglS¥ôeP¨amëîivSGIX


	)

4135 #i‚de‡
GL_SGIX_ãxtuª_mu…i_buf„r


4136 
	#GL_SGIX_ãxtuª_mu…i_buf„r
 1

	)

4137 
	#__GLEE_GL_SGIX_ãxtuª_mu…i_buf„r
 1

	)

4139 
	#GL_TEXTURE_MULTI_BUFFER_HINT_SGIX
 0x812E

	)

4144 #i‚de‡
GL_EXT_poöt_∑ømëîs


4145 
	#GL_EXT_poöt_∑ømëîs
 1

	)

4146 
	#__GLEE_GL_EXT_poöt_∑ømëîs
 1

	)

4148 
	#GL_POINT_SIZE_MIN_EXT
 0x8126

	)

4149 
	#GL_POINT_SIZE_MAX_EXT
 0x8127

	)

4150 
	#GL_POINT_FADE_THRESHOLD_SIZE_EXT
 0x8128

	)

4151 
	#GL_DISTANCE_ATTENUATION_EXT
 0x8129

	)

4152 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

4153 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

4154 
GLEE_EXTERN
 
PFNGLPOINTPARAMETERFEXTPROC
 
	gpglPoötP¨amëîfEXT
;

4155 
GLEE_EXTERN
 
PFNGLPOINTPARAMETERFVEXTPROC
 
	gpglPoötP¨amëîfvEXT
;

4156 
	#glPoötP¨amëîfEXT
 
pglPoötP¨amëîfEXT


	)

4157 
	#glPoötP¨amëîfvEXT
 
pglPoötP¨amëîfvEXT


	)

4162 #i‚de‡
GL_SGIS_poöt_∑ømëîs


4163 
	#GL_SGIS_poöt_∑ømëîs
 1

	)

4164 
	#__GLEE_GL_SGIS_poöt_∑ømëîs
 1

	)

4166 
	#GL_POINT_SIZE_MIN_SGIS
 0x8126

	)

4167 
	#GL_POINT_SIZE_MAX_SGIS
 0x8127

	)

4168 
	#GL_POINT_FADE_THRESHOLD_SIZE_SGIS
 0x8128

	)

4169 
	#GL_DISTANCE_ATTENUATION_SGIS
 0x8129

	)

4170 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFSGISPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

4171 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFVSGISPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

4172 
GLEE_EXTERN
 
PFNGLPOINTPARAMETERFSGISPROC
 
	gpglPoötP¨amëîfSGIS
;

4173 
GLEE_EXTERN
 
PFNGLPOINTPARAMETERFVSGISPROC
 
	gpglPoötP¨amëîfvSGIS
;

4174 
	#glPoötP¨amëîfSGIS
 
pglPoötP¨amëîfSGIS


	)

4175 
	#glPoötP¨amëîfvSGIS
 
pglPoötP¨amëîfvSGIS


	)

4180 #i‚de‡
GL_SGIX_ö°rumíts


4181 
	#GL_SGIX_ö°rumíts
 1

	)

4182 
	#__GLEE_GL_SGIX_ö°rumíts
 1

	)

4184 
	#GL_INSTRUMENT_BUFFER_POINTER_SGIX
 0x8180

	)

4185 
	#GL_INSTRUMENT_MEASUREMENTS_SGIX
 0x8181

	)

4186 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETINSTRUMENTSSGIXPROC
) ();

4187 (
APIENTRYP
 
	tPFNGLINSTRUMENTSBUFFERSGIXPROC
Ë(
	tGLsizei
 
	tsize
, 
	tGLöt
 * 
	tbuf„r
);

4188 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLPOLLINSTRUMENTSSGIXPROC
Ë(
	tGLöt
 * 
	tm¨kî_p
);

4189 (
APIENTRYP
 
	tPFNGLREADINSTRUMENTSSGIXPROC
Ë(
	tGLöt
 
	tm¨kî
);

4190 (
APIENTRYP
 
	tPFNGLSTARTINSTRUMENTSSGIXPROC
) ();

4191 (
APIENTRYP
 
	tPFNGLSTOPINSTRUMENTSSGIXPROC
Ë(
	tGLöt
 
	tm¨kî
);

4192 
GLEE_EXTERN
 
PFNGLGETINSTRUMENTSSGIXPROC
 
	gpglGëIn°rumítsSGIX
;

4193 
GLEE_EXTERN
 
PFNGLINSTRUMENTSBUFFERSGIXPROC
 
	gpglIn°rumítsBuf„rSGIX
;

4194 
GLEE_EXTERN
 
PFNGLPOLLINSTRUMENTSSGIXPROC
 
	gpglPﬁlIn°rumítsSGIX
;

4195 
GLEE_EXTERN
 
PFNGLREADINSTRUMENTSSGIXPROC
 
	gpglRódIn°rumítsSGIX
;

4196 
GLEE_EXTERN
 
PFNGLSTARTINSTRUMENTSSGIXPROC
 
	gpglSèπIn°rumítsSGIX
;

4197 
GLEE_EXTERN
 
PFNGLSTOPINSTRUMENTSSGIXPROC
 
	gpglSt›In°rumítsSGIX
;

4198 
	#glGëIn°rumítsSGIX
 
pglGëIn°rumítsSGIX


	)

4199 
	#glIn°rumítsBuf„rSGIX
 
pglIn°rumítsBuf„rSGIX


	)

4200 
	#glPﬁlIn°rumítsSGIX
 
pglPﬁlIn°rumítsSGIX


	)

4201 
	#glRódIn°rumítsSGIX
 
pglRódIn°rumítsSGIX


	)

4202 
	#glSèπIn°rumítsSGIX
 
pglSèπIn°rumítsSGIX


	)

4203 
	#glSt›In°rumítsSGIX
 
pglSt›In°rumítsSGIX


	)

4208 #i‚de‡
GL_SGIX_ãxtuª_sˇÀ_büs


4209 
	#GL_SGIX_ãxtuª_sˇÀ_büs
 1

	)

4210 
	#__GLEE_GL_SGIX_ãxtuª_sˇÀ_büs
 1

	)

4212 
	#GL_POST_TEXTURE_FILTER_BIAS_SGIX
 0x8179

	)

4213 
	#GL_POST_TEXTURE_FILTER_SCALE_SGIX
 0x817A

	)

4214 
	#GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX
 0x817B

	)

4215 
	#GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX
 0x817C

	)

4220 #i‚de‡
GL_SGIX_‰amezoom


4221 
	#GL_SGIX_‰amezoom
 1

	)

4222 
	#__GLEE_GL_SGIX_‰amezoom
 1

	)

4224 
	#GL_FRAMEZOOM_SGIX
 0x818B

	)

4225 
	#GL_FRAMEZOOM_FACTOR_SGIX
 0x818C

	)

4226 
	#GL_MAX_FRAMEZOOM_FACTOR_SGIX
 0x818D

	)

4227 (
APIENTRYP
 
	tPFNGLFRAMEZOOMSGIXPROC
Ë(
	tGLöt
 
	tÁ˘‹
);

4228 
GLEE_EXTERN
 
PFNGLFRAMEZOOMSGIXPROC
 
	gpglFømeZoomSGIX
;

4229 
	#glFømeZoomSGIX
 
pglFømeZoomSGIX


	)

4234 #i‚de‡
GL_SGIX_èg_ßm∂e_buf„r


4235 
	#GL_SGIX_èg_ßm∂e_buf„r
 1

	)

4236 
	#__GLEE_GL_SGIX_èg_ßm∂e_buf„r
 1

	)

4238 (
APIENTRYP
 
	tPFNGLTAGSAMPLEBUFFERSGIXPROC
) ();

4239 
GLEE_EXTERN
 
PFNGLTAGSAMPLEBUFFERSGIXPROC
 
	gpglTagSam∂eBuf„rSGIX
;

4240 
	#glTagSam∂eBuf„rSGIX
 
pglTagSam∂eBuf„rSGIX


	)

4245 #i‚de‡
GL_FfdMaskSGIX


4246 
	#GL_FfdMaskSGIX
 1

	)

4247 
	#__GLEE_GL_FfdMaskSGIX
 1

	)

4249 
	#GL_TEXTURE_DEFORMATION_BIT_SGIX
 0x00000001

	)

4250 
	#GL_GEOMETRY_DEFORMATION_BIT_SGIX
 0x00000002

	)

4255 #i‚de‡
GL_SGIX_pﬁynomül_ffd


4256 
	#GL_SGIX_pﬁynomül_ffd
 1

	)

4257 
	#__GLEE_GL_SGIX_pﬁynomül_ffd
 1

	)

4259 
	#GL_GEOMETRY_DEFORMATION_SGIX
 0x8194

	)

4260 
	#GL_TEXTURE_DEFORMATION_SGIX
 0x8195

	)

4261 
	#GL_DEFORMATIONS_MASK_SGIX
 0x8196

	)

4262 
	#GL_MAX_DEFORMATION_ORDER_SGIX
 0x8197

	)

4263 (
APIENTRYP
 
	tPFNGLDEFORMATIONMAP3DSGIXPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	tu1
, GLdoubÀ 
	tu2
, 
	tGLöt
 
	tu°ride
, GLöà
	tu‹dî
, GLdoubÀ 
	tv1
, GLdoubÀ 
	tv2
, GLöà
	tv°ride
, GLöà
	tv‹dî
, GLdoubÀ 
	tw1
, GLdoubÀ 
	tw2
, GLöà
	tw°ride
, GLöà
	tw‹dî
, c⁄° GLdoubÀ * 
	tpoöts
);

4264 (
APIENTRYP
 
	tPFNGLDEFORMATIONMAP3FSGIXPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	tu1
, GLÊﬂà
	tu2
, 
	tGLöt
 
	tu°ride
, GLöà
	tu‹dî
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
, GLöà
	tv°ride
, GLöà
	tv‹dî
, GLÊﬂà
	tw1
, GLÊﬂà
	tw2
, GLöà
	tw°ride
, GLöà
	tw‹dî
, c⁄° GLÊﬂà* 
	tpoöts
);

4265 (
APIENTRYP
 
	tPFNGLDEFORMSGIXPROC
Ë(
	tGLbôfõld
 
	tmask
);

4266 (
APIENTRYP
 
	tPFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC
Ë(
	tGLbôfõld
 
	tmask
);

4267 
GLEE_EXTERN
 
PFNGLDEFORMATIONMAP3DSGIXPROC
 
	gpglDef‹m©i⁄M≠3dSGIX
;

4268 
GLEE_EXTERN
 
PFNGLDEFORMATIONMAP3FSGIXPROC
 
	gpglDef‹m©i⁄M≠3fSGIX
;

4269 
GLEE_EXTERN
 
PFNGLDEFORMSGIXPROC
 
	gpglDef‹mSGIX
;

4270 
GLEE_EXTERN
 
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC
 
	gpglLﬂdIdítôyDef‹m©i⁄M≠SGIX
;

4271 
	#glDef‹m©i⁄M≠3dSGIX
 
pglDef‹m©i⁄M≠3dSGIX


	)

4272 
	#glDef‹m©i⁄M≠3fSGIX
 
pglDef‹m©i⁄M≠3fSGIX


	)

4273 
	#glDef‹mSGIX
 
pglDef‹mSGIX


	)

4274 
	#glLﬂdIdítôyDef‹m©i⁄M≠SGIX
 
pglLﬂdIdítôyDef‹m©i⁄M≠SGIX


	)

4279 #i‚de‡
GL_SGIX_ª„ªn˚_∂™e


4280 
	#GL_SGIX_ª„ªn˚_∂™e
 1

	)

4281 
	#__GLEE_GL_SGIX_ª„ªn˚_∂™e
 1

	)

4283 
	#GL_REFERENCE_PLANE_SGIX
 0x817D

	)

4284 
	#GL_REFERENCE_PLANE_EQUATION_SGIX
 0x817E

	)

4285 (
APIENTRYP
 
	tPFNGLREFERENCEPLANESGIXPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tequ©i⁄
);

4286 
GLEE_EXTERN
 
PFNGLREFERENCEPLANESGIXPROC
 
	gpglRe„ªn˚Pœ√SGIX
;

4287 
	#glRe„ªn˚Pœ√SGIX
 
pglRe„ªn˚Pœ√SGIX


	)

4292 #i‚de‡
GL_SGIX_Êush_ø°î


4293 
	#GL_SGIX_Êush_ø°î
 1

	)

4294 
	#__GLEE_GL_SGIX_Êush_ø°î
 1

	)

4296 (
APIENTRYP
 
	tPFNGLFLUSHRASTERSGIXPROC
) ();

4297 
GLEE_EXTERN
 
PFNGLFLUSHRASTERSGIXPROC
 
	gpglFlushRa°îSGIX
;

4298 
	#glFlushRa°îSGIX
 
pglFlushRa°îSGIX


	)

4303 #i‚de‡
GL_SGIX_dïth_ãxtuª


4304 
	#GL_SGIX_dïth_ãxtuª
 1

	)

4305 
	#__GLEE_GL_SGIX_dïth_ãxtuª
 1

	)

4307 
	#GL_DEPTH_COMPONENT16_SGIX
 0x81A5

	)

4308 
	#GL_DEPTH_COMPONENT24_SGIX
 0x81A6

	)

4309 
	#GL_DEPTH_COMPONENT32_SGIX
 0x81A7

	)

4314 #i‚de‡
GL_SGIS_fog_fun˘i⁄


4315 
	#GL_SGIS_fog_fun˘i⁄
 1

	)

4316 
	#__GLEE_GL_SGIS_fog_fun˘i⁄
 1

	)

4318 
	#GL_FOG_FUNC_SGIS
 0x812A

	)

4319 
	#GL_FOG_FUNC_POINTS_SGIS
 0x812B

	)

4320 
	#GL_MAX_FOG_FUNC_POINTS_SGIS
 0x812C

	)

4321 (
APIENTRYP
 
	tPFNGLFOGFUNCSGISPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLÊﬂt
 * 
	tpoöts
);

4322 (
APIENTRYP
 
	tPFNGLGETFOGFUNCSGISPROC
Ë(
	tGLÊﬂt
 * 
	tpoöts
);

4323 
GLEE_EXTERN
 
PFNGLFOGFUNCSGISPROC
 
	gpglFogFuncSGIS
;

4324 
GLEE_EXTERN
 
PFNGLGETFOGFUNCSGISPROC
 
	gpglGëFogFuncSGIS
;

4325 
	#glFogFuncSGIS
 
pglFogFuncSGIS


	)

4326 
	#glGëFogFuncSGIS
 
pglGëFogFuncSGIS


	)

4331 #i‚de‡
GL_SGIX_fog_off£t


4332 
	#GL_SGIX_fog_off£t
 1

	)

4333 
	#__GLEE_GL_SGIX_fog_off£t
 1

	)

4335 
	#GL_FOG_OFFSET_SGIX
 0x8198

	)

4336 
	#GL_FOG_OFFSET_VALUE_SGIX
 0x8199

	)

4341 #i‚de‡
GL_HP_image_å™sf‹m


4342 
	#GL_HP_image_å™sf‹m
 1

	)

4343 
	#__GLEE_GL_HP_image_å™sf‹m
 1

	)

4345 
	#GL_IMAGE_SCALE_X_HP
 0x8155

	)

4346 
	#GL_IMAGE_SCALE_Y_HP
 0x8156

	)

4347 
	#GL_IMAGE_TRANSLATE_X_HP
 0x8157

	)

4348 
	#GL_IMAGE_TRANSLATE_Y_HP
 0x8158

	)

4349 
	#GL_IMAGE_ROTATE_ANGLE_HP
 0x8159

	)

4350 
	#GL_IMAGE_ROTATE_ORIGIN_X_HP
 0x815A

	)

4351 
	#GL_IMAGE_ROTATE_ORIGIN_Y_HP
 0x815B

	)

4352 
	#GL_IMAGE_MAG_FILTER_HP
 0x815C

	)

4353 
	#GL_IMAGE_MIN_FILTER_HP
 0x815D

	)

4354 
	#GL_IMAGE_CUBIC_WEIGHT_HP
 0x815E

	)

4355 
	#GL_CUBIC_HP
 0x815F

	)

4356 
	#GL_AVERAGE_HP
 0x8160

	)

4357 
	#GL_IMAGE_TRANSFORM_2D_HP
 0x8161

	)

4358 
	#GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
 0x8162

	)

4359 
	#GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
 0x8163

	)

4360 (
APIENTRYP
 
	tPFNGLIMAGETRANSFORMPARAMETERIHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

4361 (
APIENTRYP
 
	tPFNGLIMAGETRANSFORMPARAMETERFHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

4362 (
APIENTRYP
 
	tPFNGLIMAGETRANSFORMPARAMETERIVHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

4363 (
APIENTRYP
 
	tPFNGLIMAGETRANSFORMPARAMETERFVHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

4364 (
APIENTRYP
 
	tPFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

4365 (
APIENTRYP
 
	tPFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

4366 
GLEE_EXTERN
 
PFNGLIMAGETRANSFORMPARAMETERIHPPROC
 
	gpglImageTønsf‹mP¨amëîiHP
;

4367 
GLEE_EXTERN
 
PFNGLIMAGETRANSFORMPARAMETERFHPPROC
 
	gpglImageTønsf‹mP¨amëîfHP
;

4368 
GLEE_EXTERN
 
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC
 
	gpglImageTønsf‹mP¨amëîivHP
;

4369 
GLEE_EXTERN
 
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC
 
	gpglImageTønsf‹mP¨amëîfvHP
;

4370 
GLEE_EXTERN
 
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC
 
	gpglGëImageTønsf‹mP¨amëîivHP
;

4371 
GLEE_EXTERN
 
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC
 
	gpglGëImageTønsf‹mP¨amëîfvHP
;

4372 
	#glImageTønsf‹mP¨amëîiHP
 
pglImageTønsf‹mP¨amëîiHP


	)

4373 
	#glImageTønsf‹mP¨amëîfHP
 
pglImageTønsf‹mP¨amëîfHP


	)

4374 
	#glImageTønsf‹mP¨amëîivHP
 
pglImageTønsf‹mP¨amëîivHP


	)

4375 
	#glImageTønsf‹mP¨amëîfvHP
 
pglImageTønsf‹mP¨amëîfvHP


	)

4376 
	#glGëImageTønsf‹mP¨amëîivHP
 
pglGëImageTønsf‹mP¨amëîivHP


	)

4377 
	#glGëImageTønsf‹mP¨amëîfvHP
 
pglGëImageTønsf‹mP¨amëîfvHP


	)

4382 #i‚de‡
GL_HP_c⁄vﬁuti⁄_b‹dî_modes


4383 
	#GL_HP_c⁄vﬁuti⁄_b‹dî_modes
 1

	)

4384 
	#__GLEE_GL_HP_c⁄vﬁuti⁄_b‹dî_modes
 1

	)

4386 
	#GL_IGNORE_BORDER_HP
 0x8150

	)

4387 
	#GL_CONSTANT_BORDER_HP
 0x8151

	)

4388 
	#GL_REPLICATE_BORDER_HP
 0x8153

	)

4389 
	#GL_CONVOLUTION_BORDER_COLOR_HP
 0x8154

	)

4394 #i‚de‡
GL_INGR_∑Àâe_buf„r


4395 
	#GL_INGR_∑Àâe_buf„r
 1

	)

4396 
	#__GLEE_GL_INGR_∑Àâe_buf„r
 1

	)

4402 #i‚de‡
GL_SGIX_ãxtuª_add_ív


4403 
	#GL_SGIX_ãxtuª_add_ív
 1

	)

4404 
	#__GLEE_GL_SGIX_ãxtuª_add_ív
 1

	)

4406 
	#GL_TEXTURE_ENV_BIAS_SGIX
 0x80BE

	)

4411 #i‚de‡
GL_EXT_cﬁ‹_subèbÀ


4412 
	#GL_EXT_cﬁ‹_subèbÀ
 1

	)

4413 
	#__GLEE_GL_EXT_cﬁ‹_subèbÀ
 1

	)

4415 (
APIENTRYP
 
	tPFNGLCOLORSUBTABLEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	t°¨t
, GLsizeò
	tcou¡
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	td©a
);

4416 (
APIENTRYP
 
	tPFNGLCOPYCOLORSUBTABLEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	t°¨t
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLsizeò
	twidth
);

4417 
GLEE_EXTERN
 
PFNGLCOLORSUBTABLEEXTPROC
 
	gpglCﬁ‹SubTabÀEXT
;

4418 
GLEE_EXTERN
 
PFNGLCOPYCOLORSUBTABLEEXTPROC
 
	gpglC›yCﬁ‹SubTabÀEXT
;

4419 
	#glCﬁ‹SubTabÀEXT
 
pglCﬁ‹SubTabÀEXT


	)

4420 
	#glC›yCﬁ‹SubTabÀEXT
 
pglC›yCﬁ‹SubTabÀEXT


	)

4425 #i‚de‡
GL_PGI_vîãx_höts


4426 
	#GL_PGI_vîãx_höts
 1

	)

4427 
	#__GLEE_GL_PGI_vîãx_höts
 1

	)

4429 
	#GL_VERTEX_DATA_HINT_PGI
 0x1A22A

	)

4430 
	#GL_VERTEX_CONSISTENT_HINT_PGI
 0x1A22B

	)

4431 
	#GL_MATERIAL_SIDE_HINT_PGI
 0x1A22C

	)

4432 
	#GL_MAX_VERTEX_HINT_PGI
 0x1A22D

	)

4433 
	#GL_COLOR3_BIT_PGI
 0x00010000

	)

4434 
	#GL_COLOR4_BIT_PGI
 0x00020000

	)

4435 
	#GL_EDGEFLAG_BIT_PGI
 0x00040000

	)

4436 
	#GL_INDEX_BIT_PGI
 0x00080000

	)

4437 
	#GL_MAT_AMBIENT_BIT_PGI
 0x00100000

	)

4438 
	#GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI
 0x00200000

	)

4439 
	#GL_MAT_DIFFUSE_BIT_PGI
 0x00400000

	)

4440 
	#GL_MAT_EMISSION_BIT_PGI
 0x00800000

	)

4441 
	#GL_MAT_COLOR_INDEXES_BIT_PGI
 0x01000000

	)

4442 
	#GL_MAT_SHININESS_BIT_PGI
 0x02000000

	)

4443 
	#GL_MAT_SPECULAR_BIT_PGI
 0x04000000

	)

4444 
	#GL_NORMAL_BIT_PGI
 0x08000000

	)

4445 
	#GL_TEXCOORD1_BIT_PGI
 0x10000000

	)

4446 
	#GL_TEXCOORD2_BIT_PGI
 0x20000000

	)

4447 
	#GL_TEXCOORD3_BIT_PGI
 0x40000000

	)

4448 
	#GL_TEXCOORD4_BIT_PGI
 0x80000000

	)

4449 
	#GL_VERTEX23_BIT_PGI
 0x00000004

	)

4450 
	#GL_VERTEX4_BIT_PGI
 0x00000008

	)

4455 #i‚de‡
GL_PGI_misc_höts


4456 
	#GL_PGI_misc_höts
 1

	)

4457 
	#__GLEE_GL_PGI_misc_höts
 1

	)

4459 
	#GL_PREFER_DOUBLEBUFFER_HINT_PGI
 0x1A1F8

	)

4460 
	#GL_CONSERVE_MEMORY_HINT_PGI
 0x1A1FD

	)

4461 
	#GL_RECLAIM_MEMORY_HINT_PGI
 0x1A1FE

	)

4462 
	#GL_NATIVE_GRAPHICS_HANDLE_PGI
 0x1A202

	)

4463 
	#GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI
 0x1A203

	)

4464 
	#GL_NATIVE_GRAPHICS_END_HINT_PGI
 0x1A204

	)

4465 
	#GL_ALWAYS_FAST_HINT_PGI
 0x1A20C

	)

4466 
	#GL_ALWAYS_SOFT_HINT_PGI
 0x1A20D

	)

4467 
	#GL_ALLOW_DRAW_OBJ_HINT_PGI
 0x1A20E

	)

4468 
	#GL_ALLOW_DRAW_WIN_HINT_PGI
 0x1A20F

	)

4469 
	#GL_ALLOW_DRAW_FRG_HINT_PGI
 0x1A210

	)

4470 
	#GL_ALLOW_DRAW_MEM_HINT_PGI
 0x1A211

	)

4471 
	#GL_STRICT_DEPTHFUNC_HINT_PGI
 0x1A216

	)

4472 
	#GL_STRICT_LIGHTING_HINT_PGI
 0x1A217

	)

4473 
	#GL_STRICT_SCISSOR_HINT_PGI
 0x1A218

	)

4474 
	#GL_FULL_STIPPLE_HINT_PGI
 0x1A219

	)

4475 
	#GL_CLIP_NEAR_HINT_PGI
 0x1A220

	)

4476 
	#GL_CLIP_FAR_HINT_PGI
 0x1A221

	)

4477 
	#GL_WIDE_LINE_HINT_PGI
 0x1A222

	)

4478 
	#GL_BACK_NORMALS_HINT_PGI
 0x1A223

	)

4479 (
APIENTRYP
 
	tPFNGLHINTPGIPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tmode
);

4480 
GLEE_EXTERN
 
PFNGLHINTPGIPROC
 
	gpglHötPGI
;

4481 
	#glHötPGI
 
pglHötPGI


	)

4486 #i‚de‡
GL_EXT_∑Àâed_ãxtuª


4487 
	#GL_EXT_∑Àâed_ãxtuª
 1

	)

4488 
	#__GLEE_GL_EXT_∑Àâed_ãxtuª
 1

	)

4490 
	#GL_COLOR_INDEX1_EXT
 0x80E2

	)

4491 
	#GL_COLOR_INDEX2_EXT
 0x80E3

	)

4492 
	#GL_COLOR_INDEX4_EXT
 0x80E4

	)

4493 
	#GL_COLOR_INDEX8_EXT
 0x80E5

	)

4494 
	#GL_COLOR_INDEX12_EXT
 0x80E6

	)

4495 
	#GL_COLOR_INDEX16_EXT
 0x80E7

	)

4496 
	#GL_TEXTURE_INDEX_SIZE_EXT
 0x80ED

	)

4497 (
APIENTRYP
 
	tPFNGLCOLORTABLEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫ÆF‹m©
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	tèbÀ
);

4498 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 * 
	td©a
);

4499 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

4500 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

4501 
GLEE_EXTERN
 
PFNGLCOLORTABLEEXTPROC
 
	gpglCﬁ‹TabÀEXT
;

4502 
GLEE_EXTERN
 
PFNGLGETCOLORTABLEEXTPROC
 
	gpglGëCﬁ‹TabÀEXT
;

4503 
GLEE_EXTERN
 
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC
 
	gpglGëCﬁ‹TabÀP¨amëîivEXT
;

4504 
GLEE_EXTERN
 
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC
 
	gpglGëCﬁ‹TabÀP¨amëîfvEXT
;

4505 
	#glCﬁ‹TabÀEXT
 
pglCﬁ‹TabÀEXT


	)

4506 
	#glGëCﬁ‹TabÀEXT
 
pglGëCﬁ‹TabÀEXT


	)

4507 
	#glGëCﬁ‹TabÀP¨amëîivEXT
 
pglGëCﬁ‹TabÀP¨amëîivEXT


	)

4508 
	#glGëCﬁ‹TabÀP¨amëîfvEXT
 
pglGëCﬁ‹TabÀP¨amëîfvEXT


	)

4513 #i‚de‡
GL_EXT_˛ù_vﬁume_höt


4514 
	#GL_EXT_˛ù_vﬁume_höt
 1

	)

4515 
	#__GLEE_GL_EXT_˛ù_vﬁume_höt
 1

	)

4517 
	#GL_CLIP_VOLUME_CLIPPING_HINT_EXT
 0x80F0

	)

4522 #i‚de‡
GL_SGIX_li°_¥i‹ôy


4523 
	#GL_SGIX_li°_¥i‹ôy
 1

	)

4524 
	#__GLEE_GL_SGIX_li°_¥i‹ôy
 1

	)

4526 
	#GL_LIST_PRIORITY_SGIX
 0x8182

	)

4527 (
APIENTRYP
 
	tPFNGLGETLISTPARAMETERFVSGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

4528 (
APIENTRYP
 
	tPFNGLGETLISTPARAMETERIVSGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

4529 (
APIENTRYP
 
	tPFNGLLISTPARAMETERFSGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

4530 (
APIENTRYP
 
	tPFNGLLISTPARAMETERFVSGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

4531 (
APIENTRYP
 
	tPFNGLLISTPARAMETERISGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

4532 (
APIENTRYP
 
	tPFNGLLISTPARAMETERIVSGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

4533 
GLEE_EXTERN
 
PFNGLGETLISTPARAMETERFVSGIXPROC
 
	gpglGëLi°P¨amëîfvSGIX
;

4534 
GLEE_EXTERN
 
PFNGLGETLISTPARAMETERIVSGIXPROC
 
	gpglGëLi°P¨amëîivSGIX
;

4535 
GLEE_EXTERN
 
PFNGLLISTPARAMETERFSGIXPROC
 
	gpglLi°P¨amëîfSGIX
;

4536 
GLEE_EXTERN
 
PFNGLLISTPARAMETERFVSGIXPROC
 
	gpglLi°P¨amëîfvSGIX
;

4537 
GLEE_EXTERN
 
PFNGLLISTPARAMETERISGIXPROC
 
	gpglLi°P¨amëîiSGIX
;

4538 
GLEE_EXTERN
 
PFNGLLISTPARAMETERIVSGIXPROC
 
	gpglLi°P¨amëîivSGIX
;

4539 
	#glGëLi°P¨amëîfvSGIX
 
pglGëLi°P¨amëîfvSGIX


	)

4540 
	#glGëLi°P¨amëîivSGIX
 
pglGëLi°P¨amëîivSGIX


	)

4541 
	#glLi°P¨amëîfSGIX
 
pglLi°P¨amëîfSGIX


	)

4542 
	#glLi°P¨amëîfvSGIX
 
pglLi°P¨amëîfvSGIX


	)

4543 
	#glLi°P¨amëîiSGIX
 
pglLi°P¨amëîiSGIX


	)

4544 
	#glLi°P¨amëîivSGIX
 
pglLi°P¨amëîivSGIX


	)

4549 #i‚de‡
GL_SGIX_ú_ö°rumít1


4550 
	#GL_SGIX_ú_ö°rumít1
 1

	)

4551 
	#__GLEE_GL_SGIX_ú_ö°rumít1
 1

	)

4553 
	#GL_IR_INSTRUMENT1_SGIX
 0x817F

	)

4558 #i‚de‡
GL_SGIX_ˇŒigøphic_‰agmít


4559 
	#GL_SGIX_ˇŒigøphic_‰agmít
 1

	)

4560 
	#__GLEE_GL_SGIX_ˇŒigøphic_‰agmít
 1

	)

4562 
	#GL_CALLIGRAPHIC_FRAGMENT_SGIX
 0x8183

	)

4567 #i‚de‡
GL_SGIX_ãxtuª_lod_büs


4568 
	#GL_SGIX_ãxtuª_lod_büs
 1

	)

4569 
	#__GLEE_GL_SGIX_ãxtuª_lod_büs
 1

	)

4571 
	#GL_TEXTURE_LOD_BIAS_S_SGIX
 0x818E

	)

4572 
	#GL_TEXTURE_LOD_BIAS_T_SGIX
 0x818F

	)

4573 
	#GL_TEXTURE_LOD_BIAS_R_SGIX
 0x8190

	)

4578 #i‚de‡
GL_SGIX_shadow_ambõ¡


4579 
	#GL_SGIX_shadow_ambõ¡
 1

	)

4580 
	#__GLEE_GL_SGIX_shadow_ambõ¡
 1

	)

4582 
	#GL_SHADOW_AMBIENT_SGIX
 0x80BF

	)

4587 #i‚de‡
GL_EXT_ödex_ãxtuª


4588 
	#GL_EXT_ödex_ãxtuª
 1

	)

4589 
	#__GLEE_GL_EXT_ödex_ãxtuª
 1

	)

4595 #i‚de‡
GL_EXT_ödex_m©îül


4596 
	#GL_EXT_ödex_m©îül
 1

	)

4597 
	#__GLEE_GL_EXT_ödex_m©îül
 1

	)

4599 
	#GL_INDEX_MATERIAL_EXT
 0x81B8

	)

4600 
	#GL_INDEX_MATERIAL_PARAMETER_EXT
 0x81B9

	)

4601 
	#GL_INDEX_MATERIAL_FACE_EXT
 0x81BA

	)

4602 (
APIENTRYP
 
	tPFNGLINDEXMATERIALEXTPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tmode
);

4603 
GLEE_EXTERN
 
PFNGLINDEXMATERIALEXTPROC
 
	gpglIndexM©îülEXT
;

4604 
	#glIndexM©îülEXT
 
pglIndexM©îülEXT


	)

4609 #i‚de‡
GL_EXT_ödex_func


4610 
	#GL_EXT_ödex_func
 1

	)

4611 
	#__GLEE_GL_EXT_ödex_func
 1

	)

4613 
	#GL_INDEX_TEST_EXT
 0x81B5

	)

4614 
	#GL_INDEX_TEST_FUNC_EXT
 0x81B6

	)

4615 
	#GL_INDEX_TEST_REF_EXT
 0x81B7

	)

4616 (
APIENTRYP
 
	tPFNGLINDEXFUNCEXTPROC
Ë(
	tGLíum
 
	tfunc
, 
	tGL˛ampf
 
	tªf
);

4617 
GLEE_EXTERN
 
PFNGLINDEXFUNCEXTPROC
 
	gpglIndexFuncEXT
;

4618 
	#glIndexFuncEXT
 
pglIndexFuncEXT


	)

4623 #i‚de‡
GL_EXT_ödex_¨øy_f‹m©s


4624 
	#GL_EXT_ödex_¨øy_f‹m©s
 1

	)

4625 
	#__GLEE_GL_EXT_ödex_¨øy_f‹m©s
 1

	)

4627 
	#GL_IUI_V2F_EXT
 0x81AD

	)

4628 
	#GL_IUI_V3F_EXT
 0x81AE

	)

4629 
	#GL_IUI_N3F_V2F_EXT
 0x81AF

	)

4630 
	#GL_IUI_N3F_V3F_EXT
 0x81B0

	)

4631 
	#GL_T2F_IUI_V2F_EXT
 0x81B1

	)

4632 
	#GL_T2F_IUI_V3F_EXT
 0x81B2

	)

4633 
	#GL_T2F_IUI_N3F_V2F_EXT
 0x81B3

	)

4634 
	#GL_T2F_IUI_N3F_V3F_EXT
 0x81B4

	)

4639 #i‚de‡
GL_EXT_compûed_vîãx_¨øy


4640 
	#GL_EXT_compûed_vîãx_¨øy
 1

	)

4641 
	#__GLEE_GL_EXT_compûed_vîãx_¨øy
 1

	)

4643 
	#GL_ARRAY_ELEMENT_LOCK_FIRST_EXT
 0x81A8

	)

4644 
	#GL_ARRAY_ELEMENT_LOCK_COUNT_EXT
 0x81A9

	)

4645 (
APIENTRYP
 
	tPFNGLLOCKARRAYSEXTPROC
Ë(
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
);

4646 (
APIENTRYP
 
	tPFNGLUNLOCKARRAYSEXTPROC
) ();

4647 
GLEE_EXTERN
 
PFNGLLOCKARRAYSEXTPROC
 
	gpglLockAºaysEXT
;

4648 
GLEE_EXTERN
 
PFNGLUNLOCKARRAYSEXTPROC
 
	gpglU∆ockAºaysEXT
;

4649 
	#glLockAºaysEXT
 
pglLockAºaysEXT


	)

4650 
	#glU∆ockAºaysEXT
 
pglU∆ockAºaysEXT


	)

4655 #i‚de‡
GL_EXT_cuŒ_vîãx


4656 
	#GL_EXT_cuŒ_vîãx
 1

	)

4657 
	#__GLEE_GL_EXT_cuŒ_vîãx
 1

	)

4659 
	#GL_CULL_VERTEX_EXT
 0x81AA

	)

4660 
	#GL_CULL_VERTEX_EYE_POSITION_EXT
 0x81AB

	)

4661 
	#GL_CULL_VERTEX_OBJECT_POSITION_EXT
 0x81AC

	)

4662 (
APIENTRYP
 
	tPFNGLCULLPARAMETERDVEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLdoubÀ
 * 
	t∑øms
);

4663 (
APIENTRYP
 
	tPFNGLCULLPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

4664 
GLEE_EXTERN
 
PFNGLCULLPARAMETERDVEXTPROC
 
	gpglCuŒP¨amëîdvEXT
;

4665 
GLEE_EXTERN
 
PFNGLCULLPARAMETERFVEXTPROC
 
	gpglCuŒP¨amëîfvEXT
;

4666 
	#glCuŒP¨amëîdvEXT
 
pglCuŒP¨amëîdvEXT


	)

4667 
	#glCuŒP¨amëîfvEXT
 
pglCuŒP¨amëîfvEXT


	)

4672 #i‚de‡
GL_SGIX_y¸cb


4673 
	#GL_SGIX_y¸cb
 1

	)

4674 
	#__GLEE_GL_SGIX_y¸cb
 1

	)

4676 
	#GL_YCRCB_422_SGIX
 0x81BB

	)

4677 
	#GL_YCRCB_444_SGIX
 0x81BC

	)

4682 #i‚de‡
GL_SGIX_‰agmít_lightög


4683 
	#GL_SGIX_‰agmít_lightög
 1

	)

4684 
	#__GLEE_GL_SGIX_‰agmít_lightög
 1

	)

4686 
	#GL_FRAGMENT_LIGHTING_SGIX
 0x8400

	)

4687 
	#GL_FRAGMENT_COLOR_MATERIAL_SGIX
 0x8401

	)

4688 
	#GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX
 0x8402

	)

4689 
	#GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX
 0x8403

	)

4690 
	#GL_MAX_FRAGMENT_LIGHTS_SGIX
 0x8404

	)

4691 
	#GL_MAX_ACTIVE_LIGHTS_SGIX
 0x8405

	)

4692 
	#GL_CURRENT_RASTER_NORMAL_SGIX
 0x8406

	)

4693 
	#GL_LIGHT_ENV_MODE_SGIX
 0x8407

	)

4694 
	#GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX
 0x8408

	)

4695 
	#GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX
 0x8409

	)

4696 
	#GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX
 0x840A

	)

4697 
	#GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX
 0x840B

	)

4698 
	#GL_FRAGMENT_LIGHT0_SGIX
 0x840C

	)

4699 
	#GL_FRAGMENT_LIGHT1_SGIX
 0x840D

	)

4700 
	#GL_FRAGMENT_LIGHT2_SGIX
 0x840E

	)

4701 
	#GL_FRAGMENT_LIGHT3_SGIX
 0x840F

	)

4702 
	#GL_FRAGMENT_LIGHT4_SGIX
 0x8410

	)

4703 
	#GL_FRAGMENT_LIGHT5_SGIX
 0x8411

	)

4704 
	#GL_FRAGMENT_LIGHT6_SGIX
 0x8412

	)

4705 
	#GL_FRAGMENT_LIGHT7_SGIX
 0x8413

	)

4706 (
APIENTRYP
 
	tPFNGLFRAGMENTCOLORMATERIALSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tmode
);

4707 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTFSGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

4708 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTFVSGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

4709 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTISGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

4710 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTIVSGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

4711 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTMODELFSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

4712 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTMODELFVSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

4713 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTMODELISGIXPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

4714 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTMODELIVSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

4715 (
APIENTRYP
 
	tPFNGLFRAGMENTMATERIALFSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

4716 (
APIENTRYP
 
	tPFNGLFRAGMENTMATERIALFVSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

4717 (
APIENTRYP
 
	tPFNGLFRAGMENTMATERIALISGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

4718 (
APIENTRYP
 
	tPFNGLFRAGMENTMATERIALIVSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

4719 (
APIENTRYP
 
	tPFNGLGETFRAGMENTLIGHTFVSGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

4720 (
APIENTRYP
 
	tPFNGLGETFRAGMENTLIGHTIVSGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

4721 (
APIENTRYP
 
	tPFNGLGETFRAGMENTMATERIALFVSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

4722 (
APIENTRYP
 
	tPFNGLGETFRAGMENTMATERIALIVSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

4723 (
APIENTRYP
 
	tPFNGLLIGHTENVISGIXPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

4724 
GLEE_EXTERN
 
PFNGLFRAGMENTCOLORMATERIALSGIXPROC
 
	gpglFøgmítCﬁ‹M©îülSGIX
;

4725 
GLEE_EXTERN
 
PFNGLFRAGMENTLIGHTFSGIXPROC
 
	gpglFøgmítLightfSGIX
;

4726 
GLEE_EXTERN
 
PFNGLFRAGMENTLIGHTFVSGIXPROC
 
	gpglFøgmítLightfvSGIX
;

4727 
GLEE_EXTERN
 
PFNGLFRAGMENTLIGHTISGIXPROC
 
	gpglFøgmítLightiSGIX
;

4728 
GLEE_EXTERN
 
PFNGLFRAGMENTLIGHTIVSGIXPROC
 
	gpglFøgmítLightivSGIX
;

4729 
GLEE_EXTERN
 
PFNGLFRAGMENTLIGHTMODELFSGIXPROC
 
	gpglFøgmítLightModñfSGIX
;

4730 
GLEE_EXTERN
 
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC
 
	gpglFøgmítLightModñfvSGIX
;

4731 
GLEE_EXTERN
 
PFNGLFRAGMENTLIGHTMODELISGIXPROC
 
	gpglFøgmítLightModñiSGIX
;

4732 
GLEE_EXTERN
 
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC
 
	gpglFøgmítLightModñivSGIX
;

4733 
GLEE_EXTERN
 
PFNGLFRAGMENTMATERIALFSGIXPROC
 
	gpglFøgmítM©îülfSGIX
;

4734 
GLEE_EXTERN
 
PFNGLFRAGMENTMATERIALFVSGIXPROC
 
	gpglFøgmítM©îülfvSGIX
;

4735 
GLEE_EXTERN
 
PFNGLFRAGMENTMATERIALISGIXPROC
 
	gpglFøgmítM©îüliSGIX
;

4736 
GLEE_EXTERN
 
PFNGLFRAGMENTMATERIALIVSGIXPROC
 
	gpglFøgmítM©îülivSGIX
;

4737 
GLEE_EXTERN
 
PFNGLGETFRAGMENTLIGHTFVSGIXPROC
 
	gpglGëFøgmítLightfvSGIX
;

4738 
GLEE_EXTERN
 
PFNGLGETFRAGMENTLIGHTIVSGIXPROC
 
	gpglGëFøgmítLightivSGIX
;

4739 
GLEE_EXTERN
 
PFNGLGETFRAGMENTMATERIALFVSGIXPROC
 
	gpglGëFøgmítM©îülfvSGIX
;

4740 
GLEE_EXTERN
 
PFNGLGETFRAGMENTMATERIALIVSGIXPROC
 
	gpglGëFøgmítM©îülivSGIX
;

4741 
GLEE_EXTERN
 
PFNGLLIGHTENVISGIXPROC
 
	gpglLightEnviSGIX
;

4742 
	#glFøgmítCﬁ‹M©îülSGIX
 
pglFøgmítCﬁ‹M©îülSGIX


	)

4743 
	#glFøgmítLightfSGIX
 
pglFøgmítLightfSGIX


	)

4744 
	#glFøgmítLightfvSGIX
 
pglFøgmítLightfvSGIX


	)

4745 
	#glFøgmítLightiSGIX
 
pglFøgmítLightiSGIX


	)

4746 
	#glFøgmítLightivSGIX
 
pglFøgmítLightivSGIX


	)

4747 
	#glFøgmítLightModñfSGIX
 
pglFøgmítLightModñfSGIX


	)

4748 
	#glFøgmítLightModñfvSGIX
 
pglFøgmítLightModñfvSGIX


	)

4749 
	#glFøgmítLightModñiSGIX
 
pglFøgmítLightModñiSGIX


	)

4750 
	#glFøgmítLightModñivSGIX
 
pglFøgmítLightModñivSGIX


	)

4751 
	#glFøgmítM©îülfSGIX
 
pglFøgmítM©îülfSGIX


	)

4752 
	#glFøgmítM©îülfvSGIX
 
pglFøgmítM©îülfvSGIX


	)

4753 
	#glFøgmítM©îüliSGIX
 
pglFøgmítM©îüliSGIX


	)

4754 
	#glFøgmítM©îülivSGIX
 
pglFøgmítM©îülivSGIX


	)

4755 
	#glGëFøgmítLightfvSGIX
 
pglGëFøgmítLightfvSGIX


	)

4756 
	#glGëFøgmítLightivSGIX
 
pglGëFøgmítLightivSGIX


	)

4757 
	#glGëFøgmítM©îülfvSGIX
 
pglGëFøgmítM©îülfvSGIX


	)

4758 
	#glGëFøgmítM©îülivSGIX
 
pglGëFøgmítM©îülivSGIX


	)

4759 
	#glLightEnviSGIX
 
pglLightEnviSGIX


	)

4764 #i‚de‡
GL_IBM_ø°îpos_˛ù


4765 
	#GL_IBM_ø°îpos_˛ù
 1

	)

4766 
	#__GLEE_GL_IBM_ø°îpos_˛ù
 1

	)

4768 
	#GL_RASTER_POSITION_UNCLIPPED_IBM
 0x19262

	)

4773 #i‚de‡
GL_HP_ãxtuª_lightög


4774 
	#GL_HP_ãxtuª_lightög
 1

	)

4775 
	#__GLEE_GL_HP_ãxtuª_lightög
 1

	)

4777 
	#GL_TEXTURE_LIGHTING_MODE_HP
 0x8167

	)

4778 
	#GL_TEXTURE_POST_SPECULAR_HP
 0x8168

	)

4779 
	#GL_TEXTURE_PRE_SPECULAR_HP
 0x8169

	)

4784 #i‚de‡
GL_EXT_døw_ønge_ñemíts


4785 
	#GL_EXT_døw_ønge_ñemíts
 1

	)

4786 
	#__GLEE_GL_EXT_døw_ønge_ñemíts
 1

	)

4788 
	#GL_MAX_ELEMENTS_VERTICES_EXT
 0x80E8

	)

4789 
	#GL_MAX_ELEMENTS_INDICES_EXT
 0x80E9

	)

4790 (
APIENTRYP
 
	tPFNGLDRAWRANGEELEMENTSEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	tödi˚s
);

4791 
GLEE_EXTERN
 
PFNGLDRAWRANGEELEMENTSEXTPROC
 
	gpglDøwR™geEÀmítsEXT
;

4792 
	#glDøwR™geEÀmítsEXT
 
pglDøwR™geEÀmítsEXT


	)

4797 #i‚de‡
GL_WIN_ph⁄g_shadög


4798 
	#GL_WIN_ph⁄g_shadög
 1

	)

4799 
	#__GLEE_GL_WIN_ph⁄g_shadög
 1

	)

4801 
	#GL_PHONG_WIN
 0x80EA

	)

4802 
	#GL_PHONG_HINT_WIN
 0x80EB

	)

4807 #i‚de‡
GL_WIN_•ecuœr_fog


4808 
	#GL_WIN_•ecuœr_fog
 1

	)

4809 
	#__GLEE_GL_WIN_•ecuœr_fog
 1

	)

4811 
	#GL_FOG_SPECULAR_TEXTURE_WIN
 0x80EC

	)

4816 #i‚de‡
GL_EXT_light_ãxtuª


4817 
	#GL_EXT_light_ãxtuª
 1

	)

4818 
	#__GLEE_GL_EXT_light_ãxtuª
 1

	)

4820 
	#GL_FRAGMENT_MATERIAL_EXT
 0x8349

	)

4821 
	#GL_FRAGMENT_NORMAL_EXT
 0x834A

	)

4822 
	#GL_FRAGMENT_COLOR_EXT
 0x834C

	)

4823 
	#GL_ATTENUATION_EXT
 0x834D

	)

4824 
	#GL_SHADOW_ATTENUATION_EXT
 0x834E

	)

4825 
	#GL_TEXTURE_APPLICATION_MODE_EXT
 0x834F

	)

4826 
	#GL_TEXTURE_LIGHT_EXT
 0x8350

	)

4827 
	#GL_TEXTURE_MATERIAL_FACE_EXT
 0x8351

	)

4828 
	#GL_TEXTURE_MATERIAL_PARAMETER_EXT
 0x8352

	)

4829 (
APIENTRYP
 
	tPFNGLAPPLYTEXTUREEXTPROC
Ë(
	tGLíum
 
	tmode
);

4830 (
APIENTRYP
 
	tPFNGLTEXTURELIGHTEXTPROC
Ë(
	tGLíum
 
	t≤ame
);

4831 (
APIENTRYP
 
	tPFNGLTEXTUREMATERIALEXTPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tmode
);

4832 
GLEE_EXTERN
 
PFNGLAPPLYTEXTUREEXTPROC
 
	gpglAµlyTextuªEXT
;

4833 
GLEE_EXTERN
 
PFNGLTEXTURELIGHTEXTPROC
 
	gpglTextuªLightEXT
;

4834 
GLEE_EXTERN
 
PFNGLTEXTUREMATERIALEXTPROC
 
	gpglTextuªM©îülEXT
;

4835 
	#glAµlyTextuªEXT
 
pglAµlyTextuªEXT


	)

4836 
	#glTextuªLightEXT
 
pglTextuªLightEXT


	)

4837 
	#glTextuªM©îülEXT
 
pglTextuªM©îülEXT


	)

4842 #i‚de‡
GL_SGIX_bÀnd_Æpha_mömax


4843 
	#GL_SGIX_bÀnd_Æpha_mömax
 1

	)

4844 
	#__GLEE_GL_SGIX_bÀnd_Æpha_mömax
 1

	)

4846 
	#GL_ALPHA_MIN_SGIX
 0x8320

	)

4847 
	#GL_ALPHA_MAX_SGIX
 0x8321

	)

4852 #i‚de‡
GL_SGIX_im∑˘_pixñ_ãxtuª


4853 
	#GL_SGIX_im∑˘_pixñ_ãxtuª
 1

	)

4854 
	#__GLEE_GL_SGIX_im∑˘_pixñ_ãxtuª
 1

	)

4856 
	#GL_PIXEL_TEX_GEN_Q_CEILING_SGIX
 0x8184

	)

4857 
	#GL_PIXEL_TEX_GEN_Q_ROUND_SGIX
 0x8185

	)

4858 
	#GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX
 0x8186

	)

4859 
	#GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX
 0x8187

	)

4860 
	#GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX
 0x8188

	)

4861 
	#GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX
 0x8189

	)

4862 
	#GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX
 0x818A

	)

4867 #i‚de‡
GL_EXT_bgø


4868 
	#GL_EXT_bgø
 1

	)

4869 
	#__GLEE_GL_EXT_bgø
 1

	)

4871 
	#GL_BGR_EXT
 0x80E0

	)

4872 
	#GL_BGRA_EXT
 0x80E1

	)

4877 #i‚de‡
GL_SGIX_async


4878 
	#GL_SGIX_async
 1

	)

4879 
	#__GLEE_GL_SGIX_async
 1

	)

4881 
	#GL_ASYNC_MARKER_SGIX
 0x8329

	)

4882 (
APIENTRYP
 
	tPFNGLASYNCMARKERSGIXPROC
Ë(
	tGLuöt
 
	tm¨kî
);

4883 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLFINISHASYNCSGIXPROC
Ë(
	tGLuöt
 * 
	tm¨kîp
);

4884 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLPOLLASYNCSGIXPROC
Ë(
	tGLuöt
 * 
	tm¨kîp
);

4885 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLGENASYNCMARKERSSGIXPROC
Ë(
	tGLsizei
 
	tønge
);

4886 (
APIENTRYP
 
	tPFNGLDELETEASYNCMARKERSSGIXPROC
Ë(
	tGLuöt
 
	tm¨kî
, 
	tGLsizei
 
	tønge
);

4887 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISASYNCMARKERSGIXPROC
Ë(
	tGLuöt
 
	tm¨kî
);

4888 
GLEE_EXTERN
 
PFNGLASYNCMARKERSGIXPROC
 
	gpglAsyncM¨kîSGIX
;

4889 
GLEE_EXTERN
 
PFNGLFINISHASYNCSGIXPROC
 
	gpglFöishAsyncSGIX
;

4890 
GLEE_EXTERN
 
PFNGLPOLLASYNCSGIXPROC
 
	gpglPﬁlAsyncSGIX
;

4891 
GLEE_EXTERN
 
PFNGLGENASYNCMARKERSSGIXPROC
 
	gpglGíAsyncM¨kîsSGIX
;

4892 
GLEE_EXTERN
 
PFNGLDELETEASYNCMARKERSSGIXPROC
 
	gpglDñëeAsyncM¨kîsSGIX
;

4893 
GLEE_EXTERN
 
PFNGLISASYNCMARKERSGIXPROC
 
	gpglIsAsyncM¨kîSGIX
;

4894 
	#glAsyncM¨kîSGIX
 
pglAsyncM¨kîSGIX


	)

4895 
	#glFöishAsyncSGIX
 
pglFöishAsyncSGIX


	)

4896 
	#glPﬁlAsyncSGIX
 
pglPﬁlAsyncSGIX


	)

4897 
	#glGíAsyncM¨kîsSGIX
 
pglGíAsyncM¨kîsSGIX


	)

4898 
	#glDñëeAsyncM¨kîsSGIX
 
pglDñëeAsyncM¨kîsSGIX


	)

4899 
	#glIsAsyncM¨kîSGIX
 
pglIsAsyncM¨kîSGIX


	)

4904 #i‚de‡
GL_SGIX_async_pixñ


4905 
	#GL_SGIX_async_pixñ
 1

	)

4906 
	#__GLEE_GL_SGIX_async_pixñ
 1

	)

4908 
	#GL_ASYNC_TEX_IMAGE_SGIX
 0x835C

	)

4909 
	#GL_ASYNC_DRAW_PIXELS_SGIX
 0x835D

	)

4910 
	#GL_ASYNC_READ_PIXELS_SGIX
 0x835E

	)

4911 
	#GL_MAX_ASYNC_TEX_IMAGE_SGIX
 0x835F

	)

4912 
	#GL_MAX_ASYNC_DRAW_PIXELS_SGIX
 0x8360

	)

4913 
	#GL_MAX_ASYNC_READ_PIXELS_SGIX
 0x8361

	)

4918 #i‚de‡
GL_SGIX_async_hi°ogøm


4919 
	#GL_SGIX_async_hi°ogøm
 1

	)

4920 
	#__GLEE_GL_SGIX_async_hi°ogøm
 1

	)

4922 
	#GL_ASYNC_HISTOGRAM_SGIX
 0x832C

	)

4923 
	#GL_MAX_ASYNC_HISTOGRAM_SGIX
 0x832D

	)

4928 #i‚de‡
GL_INTEL_ãxtuª_sciss‹


4929 
	#GL_INTEL_ãxtuª_sciss‹
 1

	)

4930 
	#__GLEE_GL_INTEL_ãxtuª_sciss‹
 1

	)

4936 #i‚de‡
GL_INTEL_∑øŒñ_¨øys


4937 
	#GL_INTEL_∑øŒñ_¨øys
 1

	)

4938 
	#__GLEE_GL_INTEL_∑øŒñ_¨øys
 1

	)

4940 
	#GL_PARALLEL_ARRAYS_INTEL
 0x83F4

	)

4941 
	#GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL
 0x83F5

	)

4942 
	#GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL
 0x83F6

	)

4943 
	#GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL
 0x83F7

	)

4944 
	#GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL
 0x83F8

	)

4945 (
APIENTRYP
 
	tPFNGLVERTEXPOINTERVINTELPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
* * 
	tpoöãr
);

4946 (
APIENTRYP
 
	tPFNGLNORMALPOINTERVINTELPROC
Ë(
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
* * 
	tpoöãr
);

4947 (
APIENTRYP
 
	tPFNGLCOLORPOINTERVINTELPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
* * 
	tpoöãr
);

4948 (
APIENTRYP
 
	tPFNGLTEXCOORDPOINTERVINTELPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
* * 
	tpoöãr
);

4949 
GLEE_EXTERN
 
PFNGLVERTEXPOINTERVINTELPROC
 
	gpglVîãxPoöãrvINTEL
;

4950 
GLEE_EXTERN
 
PFNGLNORMALPOINTERVINTELPROC
 
	gpglN‹mÆPoöãrvINTEL
;

4951 
GLEE_EXTERN
 
PFNGLCOLORPOINTERVINTELPROC
 
	gpglCﬁ‹PoöãrvINTEL
;

4952 
GLEE_EXTERN
 
PFNGLTEXCOORDPOINTERVINTELPROC
 
	gpglTexCo‹dPoöãrvINTEL
;

4953 
	#glVîãxPoöãrvINTEL
 
pglVîãxPoöãrvINTEL


	)

4954 
	#glN‹mÆPoöãrvINTEL
 
pglN‹mÆPoöãrvINTEL


	)

4955 
	#glCﬁ‹PoöãrvINTEL
 
pglCﬁ‹PoöãrvINTEL


	)

4956 
	#glTexCo‹dPoöãrvINTEL
 
pglTexCo‹dPoöãrvINTEL


	)

4961 #i‚de‡
GL_HP_oc˛usi⁄_ã°


4962 
	#GL_HP_oc˛usi⁄_ã°
 1

	)

4963 
	#__GLEE_GL_HP_oc˛usi⁄_ã°
 1

	)

4965 
	#GL_OCCLUSION_TEST_HP
 0x8165

	)

4966 
	#GL_OCCLUSION_TEST_RESULT_HP
 0x8166

	)

4971 #i‚de‡
GL_EXT_pixñ_å™sf‹m


4972 
	#GL_EXT_pixñ_å™sf‹m
 1

	)

4973 
	#__GLEE_GL_EXT_pixñ_å™sf‹m
 1

	)

4975 
	#GL_PIXEL_TRANSFORM_2D_EXT
 0x8330

	)

4976 
	#GL_PIXEL_MAG_FILTER_EXT
 0x8331

	)

4977 
	#GL_PIXEL_MIN_FILTER_EXT
 0x8332

	)

4978 
	#GL_PIXEL_CUBIC_WEIGHT_EXT
 0x8333

	)

4979 
	#GL_CUBIC_EXT
 0x8334

	)

4980 
	#GL_AVERAGE_EXT
 0x8335

	)

4981 
	#GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
 0x8336

	)

4982 
	#GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
 0x8337

	)

4983 
	#GL_PIXEL_TRANSFORM_2D_MATRIX_EXT
 0x8338

	)

4984 (
APIENTRYP
 
	tPFNGLPIXELTRANSFORMPARAMETERIEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

4985 (
APIENTRYP
 
	tPFNGLPIXELTRANSFORMPARAMETERFEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

4986 (
APIENTRYP
 
	tPFNGLPIXELTRANSFORMPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

4987 (
APIENTRYP
 
	tPFNGLPIXELTRANSFORMPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

4988 
GLEE_EXTERN
 
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC
 
	gpglPixñTønsf‹mP¨amëîiEXT
;

4989 
GLEE_EXTERN
 
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC
 
	gpglPixñTønsf‹mP¨amëîfEXT
;

4990 
GLEE_EXTERN
 
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC
 
	gpglPixñTønsf‹mP¨amëîivEXT
;

4991 
GLEE_EXTERN
 
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC
 
	gpglPixñTønsf‹mP¨amëîfvEXT
;

4992 
	#glPixñTønsf‹mP¨amëîiEXT
 
pglPixñTønsf‹mP¨amëîiEXT


	)

4993 
	#glPixñTønsf‹mP¨amëîfEXT
 
pglPixñTønsf‹mP¨amëîfEXT


	)

4994 
	#glPixñTønsf‹mP¨amëîivEXT
 
pglPixñTønsf‹mP¨amëîivEXT


	)

4995 
	#glPixñTønsf‹mP¨amëîfvEXT
 
pglPixñTønsf‹mP¨amëîfvEXT


	)

5000 #i‚de‡
GL_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ


5001 
	#GL_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ
 1

	)

5002 
	#__GLEE_GL_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ
 1

	)

5008 #i‚de‡
GL_EXT_sh¨ed_ãxtuª_∑Àâe


5009 
	#GL_EXT_sh¨ed_ãxtuª_∑Àâe
 1

	)

5010 
	#__GLEE_GL_EXT_sh¨ed_ãxtuª_∑Àâe
 1

	)

5012 
	#GL_SHARED_TEXTURE_PALETTE_EXT
 0x81FB

	)

5017 #i‚de‡
GL_EXT_£∑øã_•ecuœr_cﬁ‹


5018 
	#GL_EXT_£∑øã_•ecuœr_cﬁ‹
 1

	)

5019 
	#__GLEE_GL_EXT_£∑øã_•ecuœr_cﬁ‹
 1

	)

5021 
	#GL_LIGHT_MODEL_COLOR_CONTROL_EXT
 0x81F8

	)

5022 
	#GL_SINGLE_COLOR_EXT
 0x81F9

	)

5023 
	#GL_SEPARATE_SPECULAR_COLOR_EXT
 0x81FA

	)

5028 #i‚de‡
GL_EXT_£c⁄d¨y_cﬁ‹


5029 
	#GL_EXT_£c⁄d¨y_cﬁ‹
 1

	)

5030 
	#__GLEE_GL_EXT_£c⁄d¨y_cﬁ‹
 1

	)

5032 
	#GL_COLOR_SUM_EXT
 0x8458

	)

5033 
	#GL_CURRENT_SECONDARY_COLOR_EXT
 0x8459

	)

5034 
	#GL_SECONDARY_COLOR_ARRAY_SIZE_EXT
 0x845A

	)

5035 
	#GL_SECONDARY_COLOR_ARRAY_TYPE_EXT
 0x845B

	)

5036 
	#GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT
 0x845C

	)

5037 
	#GL_SECONDARY_COLOR_ARRAY_POINTER_EXT
 0x845D

	)

5038 
	#GL_SECONDARY_COLOR_ARRAY_EXT
 0x845E

	)

5039 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3BEXTPROC
Ë(
	tGLbyã
 
	tªd
, GLbyã 
	tgªí
, GLbyã 
	tblue
);

5040 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3BVEXTPROC
Ë(c⁄° 
	tGLbyã
 * 
	tv
);

5041 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3DEXTPROC
Ë(
	tGLdoubÀ
 
	tªd
, GLdoubÀ 
	tgªí
, GLdoubÀ 
	tblue
);

5042 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3DVEXTPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tv
);

5043 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3FEXTPROC
Ë(
	tGLÊﬂt
 
	tªd
, GLÊﬂà
	tgªí
, GLÊﬂà
	tblue
);

5044 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3FVEXTPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tv
);

5045 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3IEXTPROC
Ë(
	tGLöt
 
	tªd
, GLöà
	tgªí
, GLöà
	tblue
);

5046 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3IVEXTPROC
Ë(c⁄° 
	tGLöt
 * 
	tv
);

5047 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3SEXTPROC
Ë(
	tGLsh‹t
 
	tªd
, GLsh‹à
	tgªí
, GLsh‹à
	tblue
);

5048 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3SVEXTPROC
Ë(c⁄° 
	tGLsh‹t
 * 
	tv
);

5049 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UBEXTPROC
Ë(
	tGLubyã
 
	tªd
, GLubyã 
	tgªí
, GLubyã 
	tblue
);

5050 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UBVEXTPROC
Ë(c⁄° 
	tGLubyã
 * 
	tv
);

5051 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UIEXTPROC
Ë(
	tGLuöt
 
	tªd
, GLuöà
	tgªí
, GLuöà
	tblue
);

5052 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UIVEXTPROC
Ë(c⁄° 
	tGLuöt
 * 
	tv
);

5053 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3USEXTPROC
Ë(
	tGLush‹t
 
	tªd
, GLush‹à
	tgªí
, GLush‹à
	tblue
);

5054 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3USVEXTPROC
Ë(c⁄° 
	tGLush‹t
 * 
	tv
);

5055 (
APIENTRYP
 
	tPFNGLSECONDARYCOLORPOINTEREXTPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

5056 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3BEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3bEXT
;

5057 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3BVEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3bvEXT
;

5058 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3DEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3dEXT
;

5059 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3DVEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3dvEXT
;

5060 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3FEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3fEXT
;

5061 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3FVEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3fvEXT
;

5062 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3IEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3iEXT
;

5063 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3IVEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3ivEXT
;

5064 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3SEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3sEXT
;

5065 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3SVEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3svEXT
;

5066 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3UBEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3ubEXT
;

5067 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3UBVEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3ubvEXT
;

5068 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3UIEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3uiEXT
;

5069 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3UIVEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3uivEXT
;

5070 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3USEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3usEXT
;

5071 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3USVEXTPROC
 
	gpglSec⁄d¨yCﬁ‹3usvEXT
;

5072 
GLEE_EXTERN
 
PFNGLSECONDARYCOLORPOINTEREXTPROC
 
	gpglSec⁄d¨yCﬁ‹PoöãrEXT
;

5073 
	#glSec⁄d¨yCﬁ‹3bEXT
 
pglSec⁄d¨yCﬁ‹3bEXT


	)

5074 
	#glSec⁄d¨yCﬁ‹3bvEXT
 
pglSec⁄d¨yCﬁ‹3bvEXT


	)

5075 
	#glSec⁄d¨yCﬁ‹3dEXT
 
pglSec⁄d¨yCﬁ‹3dEXT


	)

5076 
	#glSec⁄d¨yCﬁ‹3dvEXT
 
pglSec⁄d¨yCﬁ‹3dvEXT


	)

5077 
	#glSec⁄d¨yCﬁ‹3fEXT
 
pglSec⁄d¨yCﬁ‹3fEXT


	)

5078 
	#glSec⁄d¨yCﬁ‹3fvEXT
 
pglSec⁄d¨yCﬁ‹3fvEXT


	)

5079 
	#glSec⁄d¨yCﬁ‹3iEXT
 
pglSec⁄d¨yCﬁ‹3iEXT


	)

5080 
	#glSec⁄d¨yCﬁ‹3ivEXT
 
pglSec⁄d¨yCﬁ‹3ivEXT


	)

5081 
	#glSec⁄d¨yCﬁ‹3sEXT
 
pglSec⁄d¨yCﬁ‹3sEXT


	)

5082 
	#glSec⁄d¨yCﬁ‹3svEXT
 
pglSec⁄d¨yCﬁ‹3svEXT


	)

5083 
	#glSec⁄d¨yCﬁ‹3ubEXT
 
pglSec⁄d¨yCﬁ‹3ubEXT


	)

5084 
	#glSec⁄d¨yCﬁ‹3ubvEXT
 
pglSec⁄d¨yCﬁ‹3ubvEXT


	)

5085 
	#glSec⁄d¨yCﬁ‹3uiEXT
 
pglSec⁄d¨yCﬁ‹3uiEXT


	)

5086 
	#glSec⁄d¨yCﬁ‹3uivEXT
 
pglSec⁄d¨yCﬁ‹3uivEXT


	)

5087 
	#glSec⁄d¨yCﬁ‹3usEXT
 
pglSec⁄d¨yCﬁ‹3usEXT


	)

5088 
	#glSec⁄d¨yCﬁ‹3usvEXT
 
pglSec⁄d¨yCﬁ‹3usvEXT


	)

5089 
	#glSec⁄d¨yCﬁ‹PoöãrEXT
 
pglSec⁄d¨yCﬁ‹PoöãrEXT


	)

5094 #i‚de‡
GL_EXT_ãxtuª_≥πurb_n‹mÆ


5095 
	#GL_EXT_ãxtuª_≥πurb_n‹mÆ
 1

	)

5096 
	#__GLEE_GL_EXT_ãxtuª_≥πurb_n‹mÆ
 1

	)

5098 
	#GL_PERTURB_EXT
 0x85AE

	)

5099 
	#GL_TEXTURE_NORMAL_EXT
 0x85AF

	)

5100 (
APIENTRYP
 
	tPFNGLTEXTURENORMALEXTPROC
Ë(
	tGLíum
 
	tmode
);

5101 
GLEE_EXTERN
 
PFNGLTEXTURENORMALEXTPROC
 
	gpglTextuªN‹mÆEXT
;

5102 
	#glTextuªN‹mÆEXT
 
pglTextuªN‹mÆEXT


	)

5107 #i‚de‡
GL_EXT_mu…i_døw_¨øys


5108 
	#GL_EXT_mu…i_døw_¨øys
 1

	)

5109 
	#__GLEE_GL_EXT_mu…i_døw_¨øys
 1

	)

5111 (
APIENTRYP
 
	tPFNGLMULTIDRAWARRAYSEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 * 
	tfú°
, 
	tGLsizei
 * 
	tcou¡
, GLsizeò
	t¥imcou¡
);

5112 (
APIENTRYP
 
	tPFNGLMULTIDRAWELEMENTSEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLsizei
 * 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
* * 
	tödi˚s
, GLsizeò
	t¥imcou¡
);

5113 
GLEE_EXTERN
 
PFNGLMULTIDRAWARRAYSEXTPROC
 
	gpglMu…iDøwAºaysEXT
;

5114 
GLEE_EXTERN
 
PFNGLMULTIDRAWELEMENTSEXTPROC
 
	gpglMu…iDøwEÀmítsEXT
;

5115 
	#glMu…iDøwAºaysEXT
 
pglMu…iDøwAºaysEXT


	)

5116 
	#glMu…iDøwEÀmítsEXT
 
pglMu…iDøwEÀmítsEXT


	)

5121 #i‚de‡
GL_EXT_fog_co‹d


5122 
	#GL_EXT_fog_co‹d
 1

	)

5123 
	#__GLEE_GL_EXT_fog_co‹d
 1

	)

5125 
	#GL_FOG_COORDINATE_SOURCE_EXT
 0x8450

	)

5126 
	#GL_FOG_COORDINATE_EXT
 0x8451

	)

5127 
	#GL_FRAGMENT_DEPTH_EXT
 0x8452

	)

5128 
	#GL_CURRENT_FOG_COORDINATE_EXT
 0x8453

	)

5129 
	#GL_FOG_COORDINATE_ARRAY_TYPE_EXT
 0x8454

	)

5130 
	#GL_FOG_COORDINATE_ARRAY_STRIDE_EXT
 0x8455

	)

5131 
	#GL_FOG_COORDINATE_ARRAY_POINTER_EXT
 0x8456

	)

5132 
	#GL_FOG_COORDINATE_ARRAY_EXT
 0x8457

	)

5133 (
APIENTRYP
 
	tPFNGLFOGCOORDFEXTPROC
Ë(
	tGLÊﬂt
 
	tco‹d
);

5134 (
APIENTRYP
 
	tPFNGLFOGCOORDFVEXTPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tco‹d
);

5135 (
APIENTRYP
 
	tPFNGLFOGCOORDDEXTPROC
Ë(
	tGLdoubÀ
 
	tco‹d
);

5136 (
APIENTRYP
 
	tPFNGLFOGCOORDDVEXTPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tco‹d
);

5137 (
APIENTRYP
 
	tPFNGLFOGCOORDPOINTEREXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

5138 
GLEE_EXTERN
 
PFNGLFOGCOORDFEXTPROC
 
	gpglFogCo‹dfEXT
;

5139 
GLEE_EXTERN
 
PFNGLFOGCOORDFVEXTPROC
 
	gpglFogCo‹dfvEXT
;

5140 
GLEE_EXTERN
 
PFNGLFOGCOORDDEXTPROC
 
	gpglFogCo‹ddEXT
;

5141 
GLEE_EXTERN
 
PFNGLFOGCOORDDVEXTPROC
 
	gpglFogCo‹ddvEXT
;

5142 
GLEE_EXTERN
 
PFNGLFOGCOORDPOINTEREXTPROC
 
	gpglFogCo‹dPoöãrEXT
;

5143 
	#glFogCo‹dfEXT
 
pglFogCo‹dfEXT


	)

5144 
	#glFogCo‹dfvEXT
 
pglFogCo‹dfvEXT


	)

5145 
	#glFogCo‹ddEXT
 
pglFogCo‹ddEXT


	)

5146 
	#glFogCo‹ddvEXT
 
pglFogCo‹ddvEXT


	)

5147 
	#glFogCo‹dPoöãrEXT
 
pglFogCo‹dPoöãrEXT


	)

5152 #i‚de‡
GL_REND_s¸ìn_co‹dö©es


5153 
	#GL_REND_s¸ìn_co‹dö©es
 1

	)

5154 
	#__GLEE_GL_REND_s¸ìn_co‹dö©es
 1

	)

5156 
	#GL_SCREEN_COORDINATES_REND
 0x8490

	)

5157 
	#GL_INVERTED_SCREEN_W_REND
 0x8491

	)

5162 #i‚de‡
GL_EXT_co‹dö©e_‰ame


5163 
	#GL_EXT_co‹dö©e_‰ame
 1

	)

5164 
	#__GLEE_GL_EXT_co‹dö©e_‰ame
 1

	)

5166 
	#GL_TANGENT_ARRAY_EXT
 0x8439

	)

5167 
	#GL_BINORMAL_ARRAY_EXT
 0x843A

	)

5168 
	#GL_CURRENT_TANGENT_EXT
 0x843B

	)

5169 
	#GL_CURRENT_BINORMAL_EXT
 0x843C

	)

5170 
	#GL_TANGENT_ARRAY_TYPE_EXT
 0x843E

	)

5171 
	#GL_TANGENT_ARRAY_STRIDE_EXT
 0x843F

	)

5172 
	#GL_BINORMAL_ARRAY_TYPE_EXT
 0x8440

	)

5173 
	#GL_BINORMAL_ARRAY_STRIDE_EXT
 0x8441

	)

5174 
	#GL_TANGENT_ARRAY_POINTER_EXT
 0x8442

	)

5175 
	#GL_BINORMAL_ARRAY_POINTER_EXT
 0x8443

	)

5176 
	#GL_MAP1_TANGENT_EXT
 0x8444

	)

5177 
	#GL_MAP2_TANGENT_EXT
 0x8445

	)

5178 
	#GL_MAP1_BINORMAL_EXT
 0x8446

	)

5179 
	#GL_MAP2_BINORMAL_EXT
 0x8447

	)

5180 (
APIENTRYP
 
	tPFNGLTANGENT3BEXTPROC
Ë(
	tGLbyã
 
	ttx
, GLbyã 
	tty
, GLbyã 
	ttz
);

5181 (
APIENTRYP
 
	tPFNGLTANGENT3BVEXTPROC
Ë(c⁄° 
	tGLbyã
 * 
	tv
);

5182 (
APIENTRYP
 
	tPFNGLTANGENT3DEXTPROC
Ë(
	tGLdoubÀ
 
	ttx
, GLdoubÀ 
	tty
, GLdoubÀ 
	ttz
);

5183 (
APIENTRYP
 
	tPFNGLTANGENT3DVEXTPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tv
);

5184 (
APIENTRYP
 
	tPFNGLTANGENT3FEXTPROC
Ë(
	tGLÊﬂt
 
	ttx
, GLÊﬂà
	tty
, GLÊﬂà
	ttz
);

5185 (
APIENTRYP
 
	tPFNGLTANGENT3FVEXTPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tv
);

5186 (
APIENTRYP
 
	tPFNGLTANGENT3IEXTPROC
Ë(
	tGLöt
 
	ttx
, GLöà
	tty
, GLöà
	ttz
);

5187 (
APIENTRYP
 
	tPFNGLTANGENT3IVEXTPROC
Ë(c⁄° 
	tGLöt
 * 
	tv
);

5188 (
APIENTRYP
 
	tPFNGLTANGENT3SEXTPROC
Ë(
	tGLsh‹t
 
	ttx
, GLsh‹à
	tty
, GLsh‹à
	ttz
);

5189 (
APIENTRYP
 
	tPFNGLTANGENT3SVEXTPROC
Ë(c⁄° 
	tGLsh‹t
 * 
	tv
);

5190 (
APIENTRYP
 
	tPFNGLBINORMAL3BEXTPROC
Ë(
	tGLbyã
 
	tbx
, GLbyã 
	tby
, GLbyã 
	tbz
);

5191 (
APIENTRYP
 
	tPFNGLBINORMAL3BVEXTPROC
Ë(c⁄° 
	tGLbyã
 * 
	tv
);

5192 (
APIENTRYP
 
	tPFNGLBINORMAL3DEXTPROC
Ë(
	tGLdoubÀ
 
	tbx
, GLdoubÀ 
	tby
, GLdoubÀ 
	tbz
);

5193 (
APIENTRYP
 
	tPFNGLBINORMAL3DVEXTPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tv
);

5194 (
APIENTRYP
 
	tPFNGLBINORMAL3FEXTPROC
Ë(
	tGLÊﬂt
 
	tbx
, GLÊﬂà
	tby
, GLÊﬂà
	tbz
);

5195 (
APIENTRYP
 
	tPFNGLBINORMAL3FVEXTPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tv
);

5196 (
APIENTRYP
 
	tPFNGLBINORMAL3IEXTPROC
Ë(
	tGLöt
 
	tbx
, GLöà
	tby
, GLöà
	tbz
);

5197 (
APIENTRYP
 
	tPFNGLBINORMAL3IVEXTPROC
Ë(c⁄° 
	tGLöt
 * 
	tv
);

5198 (
APIENTRYP
 
	tPFNGLBINORMAL3SEXTPROC
Ë(
	tGLsh‹t
 
	tbx
, GLsh‹à
	tby
, GLsh‹à
	tbz
);

5199 (
APIENTRYP
 
	tPFNGLBINORMAL3SVEXTPROC
Ë(c⁄° 
	tGLsh‹t
 * 
	tv
);

5200 (
APIENTRYP
 
	tPFNGLTANGENTPOINTEREXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

5201 (
APIENTRYP
 
	tPFNGLBINORMALPOINTEREXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

5202 
GLEE_EXTERN
 
PFNGLTANGENT3BEXTPROC
 
	gpglT™gít3bEXT
;

5203 
GLEE_EXTERN
 
PFNGLTANGENT3BVEXTPROC
 
	gpglT™gít3bvEXT
;

5204 
GLEE_EXTERN
 
PFNGLTANGENT3DEXTPROC
 
	gpglT™gít3dEXT
;

5205 
GLEE_EXTERN
 
PFNGLTANGENT3DVEXTPROC
 
	gpglT™gít3dvEXT
;

5206 
GLEE_EXTERN
 
PFNGLTANGENT3FEXTPROC
 
	gpglT™gít3fEXT
;

5207 
GLEE_EXTERN
 
PFNGLTANGENT3FVEXTPROC
 
	gpglT™gít3fvEXT
;

5208 
GLEE_EXTERN
 
PFNGLTANGENT3IEXTPROC
 
	gpglT™gít3iEXT
;

5209 
GLEE_EXTERN
 
PFNGLTANGENT3IVEXTPROC
 
	gpglT™gít3ivEXT
;

5210 
GLEE_EXTERN
 
PFNGLTANGENT3SEXTPROC
 
	gpglT™gít3sEXT
;

5211 
GLEE_EXTERN
 
PFNGLTANGENT3SVEXTPROC
 
	gpglT™gít3svEXT
;

5212 
GLEE_EXTERN
 
PFNGLBINORMAL3BEXTPROC
 
	gpglBö‹mÆ3bEXT
;

5213 
GLEE_EXTERN
 
PFNGLBINORMAL3BVEXTPROC
 
	gpglBö‹mÆ3bvEXT
;

5214 
GLEE_EXTERN
 
PFNGLBINORMAL3DEXTPROC
 
	gpglBö‹mÆ3dEXT
;

5215 
GLEE_EXTERN
 
PFNGLBINORMAL3DVEXTPROC
 
	gpglBö‹mÆ3dvEXT
;

5216 
GLEE_EXTERN
 
PFNGLBINORMAL3FEXTPROC
 
	gpglBö‹mÆ3fEXT
;

5217 
GLEE_EXTERN
 
PFNGLBINORMAL3FVEXTPROC
 
	gpglBö‹mÆ3fvEXT
;

5218 
GLEE_EXTERN
 
PFNGLBINORMAL3IEXTPROC
 
	gpglBö‹mÆ3iEXT
;

5219 
GLEE_EXTERN
 
PFNGLBINORMAL3IVEXTPROC
 
	gpglBö‹mÆ3ivEXT
;

5220 
GLEE_EXTERN
 
PFNGLBINORMAL3SEXTPROC
 
	gpglBö‹mÆ3sEXT
;

5221 
GLEE_EXTERN
 
PFNGLBINORMAL3SVEXTPROC
 
	gpglBö‹mÆ3svEXT
;

5222 
GLEE_EXTERN
 
PFNGLTANGENTPOINTEREXTPROC
 
	gpglT™gítPoöãrEXT
;

5223 
GLEE_EXTERN
 
PFNGLBINORMALPOINTEREXTPROC
 
	gpglBö‹mÆPoöãrEXT
;

5224 
	#glT™gít3bEXT
 
pglT™gít3bEXT


	)

5225 
	#glT™gít3bvEXT
 
pglT™gít3bvEXT


	)

5226 
	#glT™gít3dEXT
 
pglT™gít3dEXT


	)

5227 
	#glT™gít3dvEXT
 
pglT™gít3dvEXT


	)

5228 
	#glT™gít3fEXT
 
pglT™gít3fEXT


	)

5229 
	#glT™gít3fvEXT
 
pglT™gít3fvEXT


	)

5230 
	#glT™gít3iEXT
 
pglT™gít3iEXT


	)

5231 
	#glT™gít3ivEXT
 
pglT™gít3ivEXT


	)

5232 
	#glT™gít3sEXT
 
pglT™gít3sEXT


	)

5233 
	#glT™gít3svEXT
 
pglT™gít3svEXT


	)

5234 
	#glBö‹mÆ3bEXT
 
pglBö‹mÆ3bEXT


	)

5235 
	#glBö‹mÆ3bvEXT
 
pglBö‹mÆ3bvEXT


	)

5236 
	#glBö‹mÆ3dEXT
 
pglBö‹mÆ3dEXT


	)

5237 
	#glBö‹mÆ3dvEXT
 
pglBö‹mÆ3dvEXT


	)

5238 
	#glBö‹mÆ3fEXT
 
pglBö‹mÆ3fEXT


	)

5239 
	#glBö‹mÆ3fvEXT
 
pglBö‹mÆ3fvEXT


	)

5240 
	#glBö‹mÆ3iEXT
 
pglBö‹mÆ3iEXT


	)

5241 
	#glBö‹mÆ3ivEXT
 
pglBö‹mÆ3ivEXT


	)

5242 
	#glBö‹mÆ3sEXT
 
pglBö‹mÆ3sEXT


	)

5243 
	#glBö‹mÆ3svEXT
 
pglBö‹mÆ3svEXT


	)

5244 
	#glT™gítPoöãrEXT
 
pglT™gítPoöãrEXT


	)

5245 
	#glBö‹mÆPoöãrEXT
 
pglBö‹mÆPoöãrEXT


	)

5250 #i‚de‡
GL_EXT_ãxtuª_ív_comböe


5251 
	#GL_EXT_ãxtuª_ív_comböe
 1

	)

5252 
	#__GLEE_GL_EXT_ãxtuª_ív_comböe
 1

	)

5254 
	#GL_COMBINE_EXT
 0x8570

	)

5255 
	#GL_COMBINE_RGB_EXT
 0x8571

	)

5256 
	#GL_COMBINE_ALPHA_EXT
 0x8572

	)

5257 
	#GL_RGB_SCALE_EXT
 0x8573

	)

5258 
	#GL_ADD_SIGNED_EXT
 0x8574

	)

5259 
	#GL_INTERPOLATE_EXT
 0x8575

	)

5260 
	#GL_CONSTANT_EXT
 0x8576

	)

5261 
	#GL_PRIMARY_COLOR_EXT
 0x8577

	)

5262 
	#GL_PREVIOUS_EXT
 0x8578

	)

5263 
	#GL_SOURCE0_RGB_EXT
 0x8580

	)

5264 
	#GL_SOURCE1_RGB_EXT
 0x8581

	)

5265 
	#GL_SOURCE2_RGB_EXT
 0x8582

	)

5266 
	#GL_SOURCE0_ALPHA_EXT
 0x8588

	)

5267 
	#GL_SOURCE1_ALPHA_EXT
 0x8589

	)

5268 
	#GL_SOURCE2_ALPHA_EXT
 0x858A

	)

5269 
	#GL_OPERAND0_RGB_EXT
 0x8590

	)

5270 
	#GL_OPERAND1_RGB_EXT
 0x8591

	)

5271 
	#GL_OPERAND2_RGB_EXT
 0x8592

	)

5272 
	#GL_OPERAND0_ALPHA_EXT
 0x8598

	)

5273 
	#GL_OPERAND1_ALPHA_EXT
 0x8599

	)

5274 
	#GL_OPERAND2_ALPHA_EXT
 0x859A

	)

5279 #i‚de‡
GL_APPLE_•ecuœr_ve˘‹


5280 
	#GL_APPLE_•ecuœr_ve˘‹
 1

	)

5281 
	#__GLEE_GL_APPLE_•ecuœr_ve˘‹
 1

	)

5283 
	#GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE
 0x85B0

	)

5288 #i‚de‡
GL_APPLE_å™sf‹m_höt


5289 
	#GL_APPLE_å™sf‹m_höt
 1

	)

5290 
	#__GLEE_GL_APPLE_å™sf‹m_höt
 1

	)

5292 
	#GL_TRANSFORM_HINT_APPLE
 0x85B1

	)

5297 #i‚de‡
GL_SGIX_fog_sˇÀ


5298 
	#GL_SGIX_fog_sˇÀ
 1

	)

5299 
	#__GLEE_GL_SGIX_fog_sˇÀ
 1

	)

5301 
	#GL_FOG_SCALE_SGIX
 0x81FC

	)

5302 
	#GL_FOG_SCALE_VALUE_SGIX
 0x81FD

	)

5307 #i‚de‡
GL_SUNX_c⁄°™t_d©a


5308 
	#GL_SUNX_c⁄°™t_d©a
 1

	)

5309 
	#__GLEE_GL_SUNX_c⁄°™t_d©a
 1

	)

5311 
	#GL_UNPACK_CONSTANT_DATA_SUNX
 0x81D5

	)

5312 
	#GL_TEXTURE_CONSTANT_DATA_SUNX
 0x81D6

	)

5313 (
APIENTRYP
 
	tPFNGLFINISHTEXTURESUNXPROC
) ();

5314 
GLEE_EXTERN
 
PFNGLFINISHTEXTURESUNXPROC
 
	gpglFöishTextuªSUNX
;

5315 
	#glFöishTextuªSUNX
 
pglFöishTextuªSUNX


	)

5320 #i‚de‡
GL_SUN_globÆ_Æpha


5321 
	#GL_SUN_globÆ_Æpha
 1

	)

5322 
	#__GLEE_GL_SUN_globÆ_Æpha
 1

	)

5324 
	#GL_GLOBAL_ALPHA_SUN
 0x81D9

	)

5325 
	#GL_GLOBAL_ALPHA_FACTOR_SUN
 0x81DA

	)

5326 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORBSUNPROC
Ë(
	tGLbyã
 
	tÁ˘‹
);

5327 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORSSUNPROC
Ë(
	tGLsh‹t
 
	tÁ˘‹
);

5328 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORISUNPROC
Ë(
	tGLöt
 
	tÁ˘‹
);

5329 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORFSUNPROC
Ë(
	tGLÊﬂt
 
	tÁ˘‹
);

5330 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORDSUNPROC
Ë(
	tGLdoubÀ
 
	tÁ˘‹
);

5331 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORUBSUNPROC
Ë(
	tGLubyã
 
	tÁ˘‹
);

5332 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORUSSUNPROC
Ë(
	tGLush‹t
 
	tÁ˘‹
);

5333 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORUISUNPROC
Ë(
	tGLuöt
 
	tÁ˘‹
);

5334 
GLEE_EXTERN
 
PFNGLGLOBALALPHAFACTORBSUNPROC
 
	gpglGlobÆAÕhaFa˘‹bSUN
;

5335 
GLEE_EXTERN
 
PFNGLGLOBALALPHAFACTORSSUNPROC
 
	gpglGlobÆAÕhaFa˘‹sSUN
;

5336 
GLEE_EXTERN
 
PFNGLGLOBALALPHAFACTORISUNPROC
 
	gpglGlobÆAÕhaFa˘‹iSUN
;

5337 
GLEE_EXTERN
 
PFNGLGLOBALALPHAFACTORFSUNPROC
 
	gpglGlobÆAÕhaFa˘‹fSUN
;

5338 
GLEE_EXTERN
 
PFNGLGLOBALALPHAFACTORDSUNPROC
 
	gpglGlobÆAÕhaFa˘‹dSUN
;

5339 
GLEE_EXTERN
 
PFNGLGLOBALALPHAFACTORUBSUNPROC
 
	gpglGlobÆAÕhaFa˘‹ubSUN
;

5340 
GLEE_EXTERN
 
PFNGLGLOBALALPHAFACTORUSSUNPROC
 
	gpglGlobÆAÕhaFa˘‹usSUN
;

5341 
GLEE_EXTERN
 
PFNGLGLOBALALPHAFACTORUISUNPROC
 
	gpglGlobÆAÕhaFa˘‹uiSUN
;

5342 
	#glGlobÆAÕhaFa˘‹bSUN
 
pglGlobÆAÕhaFa˘‹bSUN


	)

5343 
	#glGlobÆAÕhaFa˘‹sSUN
 
pglGlobÆAÕhaFa˘‹sSUN


	)

5344 
	#glGlobÆAÕhaFa˘‹iSUN
 
pglGlobÆAÕhaFa˘‹iSUN


	)

5345 
	#glGlobÆAÕhaFa˘‹fSUN
 
pglGlobÆAÕhaFa˘‹fSUN


	)

5346 
	#glGlobÆAÕhaFa˘‹dSUN
 
pglGlobÆAÕhaFa˘‹dSUN


	)

5347 
	#glGlobÆAÕhaFa˘‹ubSUN
 
pglGlobÆAÕhaFa˘‹ubSUN


	)

5348 
	#glGlobÆAÕhaFa˘‹usSUN
 
pglGlobÆAÕhaFa˘‹usSUN


	)

5349 
	#glGlobÆAÕhaFa˘‹uiSUN
 
pglGlobÆAÕhaFa˘‹uiSUN


	)

5354 #i‚de‡
GL_SUN_åüngÀ_li°


5355 
	#GL_SUN_åüngÀ_li°
 1

	)

5356 
	#__GLEE_GL_SUN_åüngÀ_li°
 1

	)

5358 
	#GL_RESTART_SUN
 0x0001

	)

5359 
	#GL_REPLACE_MIDDLE_SUN
 0x0002

	)

5360 
	#GL_REPLACE_OLDEST_SUN
 0x0003

	)

5361 
	#GL_TRIANGLE_LIST_SUN
 0x81D7

	)

5362 
	#GL_REPLACEMENT_CODE_SUN
 0x81D8

	)

5363 
	#GL_REPLACEMENT_CODE_ARRAY_SUN
 0x85C0

	)

5364 
	#GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN
 0x85C1

	)

5365 
	#GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN
 0x85C2

	)

5366 
	#GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN
 0x85C3

	)

5367 
	#GL_R1UI_V3F_SUN
 0x85C4

	)

5368 
	#GL_R1UI_C4UB_V3F_SUN
 0x85C5

	)

5369 
	#GL_R1UI_C3F_V3F_SUN
 0x85C6

	)

5370 
	#GL_R1UI_N3F_V3F_SUN
 0x85C7

	)

5371 
	#GL_R1UI_C4F_N3F_V3F_SUN
 0x85C8

	)

5372 
	#GL_R1UI_T2F_V3F_SUN
 0x85C9

	)

5373 
	#GL_R1UI_T2F_N3F_V3F_SUN
 0x85CA

	)

5374 
	#GL_R1UI_T2F_C4F_N3F_V3F_SUN
 0x85CB

	)

5375 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUISUNPROC
Ë(
	tGLuöt
 
	tcode
);

5376 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUSSUNPROC
Ë(
	tGLush‹t
 
	tcode
);

5377 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUBSUNPROC
Ë(
	tGLubyã
 
	tcode
);

5378 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUIVSUNPROC
Ë(c⁄° 
	tGLuöt
 * 
	tcode
);

5379 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUSVSUNPROC
Ë(c⁄° 
	tGLush‹t
 * 
	tcode
);

5380 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUBVSUNPROC
Ë(c⁄° 
	tGLubyã
 * 
	tcode
);

5381 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEPOINTERSUNPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
* * 
	tpoöãr
);

5382 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUISUNPROC
 
	gpglRïœ˚mítCodeuiSUN
;

5383 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUSSUNPROC
 
	gpglRïœ˚mítCodeusSUN
;

5384 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUBSUNPROC
 
	gpglRïœ˚mítCodeubSUN
;

5385 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUIVSUNPROC
 
	gpglRïœ˚mítCodeuivSUN
;

5386 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUSVSUNPROC
 
	gpglRïœ˚mítCodeusvSUN
;

5387 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUBVSUNPROC
 
	gpglRïœ˚mítCodeubvSUN
;

5388 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEPOINTERSUNPROC
 
	gpglRïœ˚mítCodePoöãrSUN
;

5389 
	#glRïœ˚mítCodeuiSUN
 
pglRïœ˚mítCodeuiSUN


	)

5390 
	#glRïœ˚mítCodeusSUN
 
pglRïœ˚mítCodeusSUN


	)

5391 
	#glRïœ˚mítCodeubSUN
 
pglRïœ˚mítCodeubSUN


	)

5392 
	#glRïœ˚mítCodeuivSUN
 
pglRïœ˚mítCodeuivSUN


	)

5393 
	#glRïœ˚mítCodeusvSUN
 
pglRïœ˚mítCodeusvSUN


	)

5394 
	#glRïœ˚mítCodeubvSUN
 
pglRïœ˚mítCodeubvSUN


	)

5395 
	#glRïœ˚mítCodePoöãrSUN
 
pglRïœ˚mítCodePoöãrSUN


	)

5400 #i‚de‡
GL_SUN_vîãx


5401 
	#GL_SUN_vîãx
 1

	)

5402 
	#__GLEE_GL_SUN_vîãx
 1

	)

5404 (
APIENTRYP
 
	tPFNGLCOLOR4UBVERTEX2FSUNPROC
Ë(
	tGLubyã
 
	tr
, GLubyã 
	tg
, GLubyã 
	tb
, GLubyã 
	ta
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

5405 (
APIENTRYP
 
	tPFNGLCOLOR4UBVERTEX2FVSUNPROC
Ë(c⁄° 
	tGLubyã
 * 
	tc
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

5406 (
APIENTRYP
 
	tPFNGLCOLOR4UBVERTEX3FSUNPROC
Ë(
	tGLubyã
 
	tr
, GLubyã 
	tg
, GLubyã 
	tb
, GLubyã 
	ta
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5407 (
APIENTRYP
 
	tPFNGLCOLOR4UBVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLubyã
 * 
	tc
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

5408 (
APIENTRYP
 
	tPFNGLCOLOR3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5409 (
APIENTRYP
 
	tPFNGLCOLOR3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tc
, c⁄° GLÊﬂà* 
	tv
);

5410 (
APIENTRYP
 
	tPFNGLNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5411 (
APIENTRYP
 
	tPFNGLNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tn
, c⁄° GLÊﬂà* 
	tv
);

5412 (
APIENTRYP
 
	tPFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	ta
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5413 (
APIENTRYP
 
	tPFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tc
, c⁄° GLÊﬂà* 
	tn
, c⁄° GLÊﬂà* 
	tv
);

5414 (
APIENTRYP
 
	tPFNGLTEXCOORD2FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5415 (
APIENTRYP
 
	tPFNGLTEXCOORD2FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	ttc
, c⁄° GLÊﬂà* 
	tv
);

5416 (
APIENTRYP
 
	tPFNGLTEXCOORD4FVERTEX4FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tp
, GLÊﬂà
	tq
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

5417 (
APIENTRYP
 
	tPFNGLTEXCOORD4FVERTEX4FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	ttc
, c⁄° GLÊﬂà* 
	tv
);

5418 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, 
	tGLubyã
 
	tr
, GLubyã 
	tg
, GLubyã 
	tb
, GLubyã 
	ta
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5419 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	ttc
, c⁄° 
	tGLubyã
 * 
	tc
, c⁄° GLÊﬂà* 
	tv
);

5420 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5421 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	ttc
, c⁄° GLÊﬂà* 
	tc
, c⁄° GLÊﬂà* 
	tv
);

5422 (
APIENTRYP
 
	tPFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5423 (
APIENTRYP
 
	tPFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	ttc
, c⁄° GLÊﬂà* 
	tn
, c⁄° GLÊﬂà* 
	tv
);

5424 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	ta
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5425 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	ttc
, c⁄° GLÊﬂà* 
	tc
, c⁄° GLÊﬂà* 
	tn
, c⁄° GLÊﬂà* 
	tv
);

5426 (
APIENTRYP
 
	tPFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tp
, GLÊﬂà
	tq
, GLÊﬂà
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	ta
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

5427 (
APIENTRYP
 
	tPFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	ttc
, c⁄° GLÊﬂà* 
	tc
, c⁄° GLÊﬂà* 
	tn
, c⁄° GLÊﬂà* 
	tv
);

5428 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5429 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 * 
	trc
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

5430 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLubyã
 
	tr
, GLubyã 
	tg
, GLubyã 
	tb
, GLubyã 
	ta
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5431 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 * 
	trc
, c⁄° 
	tGLubyã
 * 
	tc
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

5432 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5433 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 * 
	trc
, c⁄° 
	tGLÊﬂt
 * 
	tc
, c⁄° GLÊﬂà* 
	tv
);

5434 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5435 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 * 
	trc
, c⁄° 
	tGLÊﬂt
 * 
	tn
, c⁄° GLÊﬂà* 
	tv
);

5436 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	ta
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5437 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 * 
	trc
, c⁄° 
	tGLÊﬂt
 * 
	tc
, c⁄° GLÊﬂà* 
	tn
, c⁄° GLÊﬂà* 
	tv
);

5438 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5439 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 * 
	trc
, c⁄° 
	tGLÊﬂt
 * 
	ttc
, c⁄° GLÊﬂà* 
	tv
);

5440 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5441 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 * 
	trc
, c⁄° 
	tGLÊﬂt
 * 
	ttc
, c⁄° GLÊﬂà* 
	tn
, c⁄° GLÊﬂà* 
	tv
);

5442 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	ta
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5443 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 * 
	trc
, c⁄° 
	tGLÊﬂt
 * 
	ttc
, c⁄° GLÊﬂà* 
	tc
, c⁄° GLÊﬂà* 
	tn
, c⁄° GLÊﬂà* 
	tv
);

5444 
GLEE_EXTERN
 
PFNGLCOLOR4UBVERTEX2FSUNPROC
 
	gpglCﬁ‹4ubVîãx2fSUN
;

5445 
GLEE_EXTERN
 
PFNGLCOLOR4UBVERTEX2FVSUNPROC
 
	gpglCﬁ‹4ubVîãx2fvSUN
;

5446 
GLEE_EXTERN
 
PFNGLCOLOR4UBVERTEX3FSUNPROC
 
	gpglCﬁ‹4ubVîãx3fSUN
;

5447 
GLEE_EXTERN
 
PFNGLCOLOR4UBVERTEX3FVSUNPROC
 
	gpglCﬁ‹4ubVîãx3fvSUN
;

5448 
GLEE_EXTERN
 
PFNGLCOLOR3FVERTEX3FSUNPROC
 
	gpglCﬁ‹3fVîãx3fSUN
;

5449 
GLEE_EXTERN
 
PFNGLCOLOR3FVERTEX3FVSUNPROC
 
	gpglCﬁ‹3fVîãx3fvSUN
;

5450 
GLEE_EXTERN
 
PFNGLNORMAL3FVERTEX3FSUNPROC
 
	gpglN‹mÆ3fVîãx3fSUN
;

5451 
GLEE_EXTERN
 
PFNGLNORMAL3FVERTEX3FVSUNPROC
 
	gpglN‹mÆ3fVîãx3fvSUN
;

5452 
GLEE_EXTERN
 
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC
 
	gpglCﬁ‹4fN‹mÆ3fVîãx3fSUN
;

5453 
GLEE_EXTERN
 
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC
 
	gpglCﬁ‹4fN‹mÆ3fVîãx3fvSUN
;

5454 
GLEE_EXTERN
 
PFNGLTEXCOORD2FVERTEX3FSUNPROC
 
	gpglTexCo‹d2fVîãx3fSUN
;

5455 
GLEE_EXTERN
 
PFNGLTEXCOORD2FVERTEX3FVSUNPROC
 
	gpglTexCo‹d2fVîãx3fvSUN
;

5456 
GLEE_EXTERN
 
PFNGLTEXCOORD4FVERTEX4FSUNPROC
 
	gpglTexCo‹d4fVîãx4fSUN
;

5457 
GLEE_EXTERN
 
PFNGLTEXCOORD4FVERTEX4FVSUNPROC
 
	gpglTexCo‹d4fVîãx4fvSUN
;

5458 
GLEE_EXTERN
 
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC
 
	gpglTexCo‹d2fCﬁ‹4ubVîãx3fSUN
;

5459 
GLEE_EXTERN
 
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC
 
	gpglTexCo‹d2fCﬁ‹4ubVîãx3fvSUN
;

5460 
GLEE_EXTERN
 
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC
 
	gpglTexCo‹d2fCﬁ‹3fVîãx3fSUN
;

5461 
GLEE_EXTERN
 
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC
 
	gpglTexCo‹d2fCﬁ‹3fVîãx3fvSUN
;

5462 
GLEE_EXTERN
 
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC
 
	gpglTexCo‹d2fN‹mÆ3fVîãx3fSUN
;

5463 
GLEE_EXTERN
 
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
 
	gpglTexCo‹d2fN‹mÆ3fVîãx3fvSUN
;

5464 
GLEE_EXTERN
 
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
 
	gpglTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
;

5465 
GLEE_EXTERN
 
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
 
	gpglTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
;

5466 
GLEE_EXTERN
 
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC
 
	gpglTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fSUN
;

5467 
GLEE_EXTERN
 
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC
 
	gpglTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fvSUN
;

5468 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC
 
	gpglRïœ˚mítCodeuiVîãx3fSUN
;

5469 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC
 
	gpglRïœ˚mítCodeuiVîãx3fvSUN
;

5470 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC
 
	gpglRïœ˚mítCodeuiCﬁ‹4ubVîãx3fSUN
;

5471 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC
 
	gpglRïœ˚mítCodeuiCﬁ‹4ubVîãx3fvSUN
;

5472 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC
 
	gpglRïœ˚mítCodeuiCﬁ‹3fVîãx3fSUN
;

5473 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC
 
	gpglRïœ˚mítCodeuiCﬁ‹3fVîãx3fvSUN
;

5474 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC
 
	gpglRïœ˚mítCodeuiN‹mÆ3fVîãx3fSUN
;

5475 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC
 
	gpglRïœ˚mítCodeuiN‹mÆ3fVîãx3fvSUN
;

5476 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC
 
	gpglRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fSUN
;

5477 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC
 
	gpglRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fvSUN
;

5478 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC
 
	gpglRïœ˚mítCodeuiTexCo‹d2fVîãx3fSUN
;

5479 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC
 
	gpglRïœ˚mítCodeuiTexCo‹d2fVîãx3fvSUN
;

5480 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC
 
	gpglRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fSUN
;

5481 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
 
	gpglRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fvSUN
;

5482 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
 
	gpglRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
;

5483 
GLEE_EXTERN
 
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
 
	gpglRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
;

5484 
	#glCﬁ‹4ubVîãx2fSUN
 
pglCﬁ‹4ubVîãx2fSUN


	)

5485 
	#glCﬁ‹4ubVîãx2fvSUN
 
pglCﬁ‹4ubVîãx2fvSUN


	)

5486 
	#glCﬁ‹4ubVîãx3fSUN
 
pglCﬁ‹4ubVîãx3fSUN


	)

5487 
	#glCﬁ‹4ubVîãx3fvSUN
 
pglCﬁ‹4ubVîãx3fvSUN


	)

5488 
	#glCﬁ‹3fVîãx3fSUN
 
pglCﬁ‹3fVîãx3fSUN


	)

5489 
	#glCﬁ‹3fVîãx3fvSUN
 
pglCﬁ‹3fVîãx3fvSUN


	)

5490 
	#glN‹mÆ3fVîãx3fSUN
 
pglN‹mÆ3fVîãx3fSUN


	)

5491 
	#glN‹mÆ3fVîãx3fvSUN
 
pglN‹mÆ3fVîãx3fvSUN


	)

5492 
	#glCﬁ‹4fN‹mÆ3fVîãx3fSUN
 
pglCﬁ‹4fN‹mÆ3fVîãx3fSUN


	)

5493 
	#glCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 
pglCﬁ‹4fN‹mÆ3fVîãx3fvSUN


	)

5494 
	#glTexCo‹d2fVîãx3fSUN
 
pglTexCo‹d2fVîãx3fSUN


	)

5495 
	#glTexCo‹d2fVîãx3fvSUN
 
pglTexCo‹d2fVîãx3fvSUN


	)

5496 
	#glTexCo‹d4fVîãx4fSUN
 
pglTexCo‹d4fVîãx4fSUN


	)

5497 
	#glTexCo‹d4fVîãx4fvSUN
 
pglTexCo‹d4fVîãx4fvSUN


	)

5498 
	#glTexCo‹d2fCﬁ‹4ubVîãx3fSUN
 
pglTexCo‹d2fCﬁ‹4ubVîãx3fSUN


	)

5499 
	#glTexCo‹d2fCﬁ‹4ubVîãx3fvSUN
 
pglTexCo‹d2fCﬁ‹4ubVîãx3fvSUN


	)

5500 
	#glTexCo‹d2fCﬁ‹3fVîãx3fSUN
 
pglTexCo‹d2fCﬁ‹3fVîãx3fSUN


	)

5501 
	#glTexCo‹d2fCﬁ‹3fVîãx3fvSUN
 
pglTexCo‹d2fCﬁ‹3fVîãx3fvSUN


	)

5502 
	#glTexCo‹d2fN‹mÆ3fVîãx3fSUN
 
pglTexCo‹d2fN‹mÆ3fVîãx3fSUN


	)

5503 
	#glTexCo‹d2fN‹mÆ3fVîãx3fvSUN
 
pglTexCo‹d2fN‹mÆ3fVîãx3fvSUN


	)

5504 
	#glTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
 
pglTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN


	)

5505 
	#glTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 
pglTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN


	)

5506 
	#glTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fSUN
 
pglTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fSUN


	)

5507 
	#glTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fvSUN
 
pglTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fvSUN


	)

5508 
	#glRïœ˚mítCodeuiVîãx3fSUN
 
pglRïœ˚mítCodeuiVîãx3fSUN


	)

5509 
	#glRïœ˚mítCodeuiVîãx3fvSUN
 
pglRïœ˚mítCodeuiVîãx3fvSUN


	)

5510 
	#glRïœ˚mítCodeuiCﬁ‹4ubVîãx3fSUN
 
pglRïœ˚mítCodeuiCﬁ‹4ubVîãx3fSUN


	)

5511 
	#glRïœ˚mítCodeuiCﬁ‹4ubVîãx3fvSUN
 
pglRïœ˚mítCodeuiCﬁ‹4ubVîãx3fvSUN


	)

5512 
	#glRïœ˚mítCodeuiCﬁ‹3fVîãx3fSUN
 
pglRïœ˚mítCodeuiCﬁ‹3fVîãx3fSUN


	)

5513 
	#glRïœ˚mítCodeuiCﬁ‹3fVîãx3fvSUN
 
pglRïœ˚mítCodeuiCﬁ‹3fVîãx3fvSUN


	)

5514 
	#glRïœ˚mítCodeuiN‹mÆ3fVîãx3fSUN
 
pglRïœ˚mítCodeuiN‹mÆ3fVîãx3fSUN


	)

5515 
	#glRïœ˚mítCodeuiN‹mÆ3fVîãx3fvSUN
 
pglRïœ˚mítCodeuiN‹mÆ3fVîãx3fvSUN


	)

5516 
	#glRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fSUN
 
pglRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fSUN


	)

5517 
	#glRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 
pglRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fvSUN


	)

5518 
	#glRïœ˚mítCodeuiTexCo‹d2fVîãx3fSUN
 
pglRïœ˚mítCodeuiTexCo‹d2fVîãx3fSUN


	)

5519 
	#glRïœ˚mítCodeuiTexCo‹d2fVîãx3fvSUN
 
pglRïœ˚mítCodeuiTexCo‹d2fVîãx3fvSUN


	)

5520 
	#glRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fSUN
 
pglRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fSUN


	)

5521 
	#glRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fvSUN
 
pglRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fvSUN


	)

5522 
	#glRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
 
pglRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN


	)

5523 
	#glRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 
pglRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN


	)

5528 #i‚de‡
GL_EXT_bÀnd_func_£∑øã


5529 
	#GL_EXT_bÀnd_func_£∑øã
 1

	)

5530 
	#__GLEE_GL_EXT_bÀnd_func_£∑øã
 1

	)

5532 
	#GL_BLEND_DST_RGB_EXT
 0x80C8

	)

5533 
	#GL_BLEND_SRC_RGB_EXT
 0x80C9

	)

5534 
	#GL_BLEND_DST_ALPHA_EXT
 0x80CA

	)

5535 
	#GL_BLEND_SRC_ALPHA_EXT
 0x80CB

	)

5536 (
APIENTRYP
 
	tPFNGLBLENDFUNCSEPARATEEXTPROC
Ë(
	tGLíum
 
	tsÁ˘‹RGB
, GLíum 
	tdÁ˘‹RGB
, GLíum 
	tsÁ˘‹AÕha
, GLíum 
	tdÁ˘‹AÕha
);

5537 
GLEE_EXTERN
 
PFNGLBLENDFUNCSEPARATEEXTPROC
 
	gpglBÀndFuncSï¨©eEXT
;

5538 
	#glBÀndFuncSï¨©eEXT
 
pglBÀndFuncSï¨©eEXT


	)

5543 #i‚de‡
GL_INGR_cﬁ‹_˛amp


5544 
	#GL_INGR_cﬁ‹_˛amp
 1

	)

5545 
	#__GLEE_GL_INGR_cﬁ‹_˛amp
 1

	)

5547 
	#GL_RED_MIN_CLAMP_INGR
 0x8560

	)

5548 
	#GL_GREEN_MIN_CLAMP_INGR
 0x8561

	)

5549 
	#GL_BLUE_MIN_CLAMP_INGR
 0x8562

	)

5550 
	#GL_ALPHA_MIN_CLAMP_INGR
 0x8563

	)

5551 
	#GL_RED_MAX_CLAMP_INGR
 0x8564

	)

5552 
	#GL_GREEN_MAX_CLAMP_INGR
 0x8565

	)

5553 
	#GL_BLUE_MAX_CLAMP_INGR
 0x8566

	)

5554 
	#GL_ALPHA_MAX_CLAMP_INGR
 0x8567

	)

5559 #i‚de‡
GL_INGR_öãæa˚_ªad


5560 
	#GL_INGR_öãæa˚_ªad
 1

	)

5561 
	#__GLEE_GL_INGR_öãæa˚_ªad
 1

	)

5563 
	#GL_INTERLACE_READ_INGR
 0x8568

	)

5568 #i‚de‡
GL_EXT_°ícû_wøp


5569 
	#GL_EXT_°ícû_wøp
 1

	)

5570 
	#__GLEE_GL_EXT_°ícû_wøp
 1

	)

5572 
	#GL_INCR_WRAP_EXT
 0x8507

	)

5573 
	#GL_DECR_WRAP_EXT
 0x8508

	)

5578 #i‚de‡
GL_EXT_422_pixñs


5579 
	#GL_EXT_422_pixñs
 1

	)

5580 
	#__GLEE_GL_EXT_422_pixñs
 1

	)

5582 
	#GL_422_EXT
 0x80CC

	)

5583 
	#GL_422_REV_EXT
 0x80CD

	)

5584 
	#GL_422_AVERAGE_EXT
 0x80CE

	)

5585 
	#GL_422_REV_AVERAGE_EXT
 0x80CF

	)

5590 #i‚de‡
GL_NV_ãxgí_ªÊe˘i⁄


5591 
	#GL_NV_ãxgí_ªÊe˘i⁄
 1

	)

5592 
	#__GLEE_GL_NV_ãxgí_ªÊe˘i⁄
 1

	)

5594 
	#GL_NORMAL_MAP_NV
 0x8511

	)

5595 
	#GL_REFLECTION_MAP_NV
 0x8512

	)

5600 #i‚de‡
GL_EXT_ãxtuª_cube_m≠


5601 
	#GL_EXT_ãxtuª_cube_m≠
 1

	)

5602 
	#__GLEE_GL_EXT_ãxtuª_cube_m≠
 1

	)

5604 
	#GL_NORMAL_MAP_EXT
 0x8511

	)

5605 
	#GL_REFLECTION_MAP_EXT
 0x8512

	)

5606 
	#GL_TEXTURE_CUBE_MAP_EXT
 0x8513

	)

5607 
	#GL_TEXTURE_BINDING_CUBE_MAP_EXT
 0x8514

	)

5608 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT
 0x8515

	)

5609 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT
 0x8516

	)

5610 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT
 0x8517

	)

5611 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT
 0x8518

	)

5612 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT
 0x8519

	)

5613 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT
 0x851A

	)

5614 
	#GL_PROXY_TEXTURE_CUBE_MAP_EXT
 0x851B

	)

5615 
	#GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT
 0x851C

	)

5620 #i‚de‡
GL_SUN_c⁄vﬁuti⁄_b‹dî_modes


5621 
	#GL_SUN_c⁄vﬁuti⁄_b‹dî_modes
 1

	)

5622 
	#__GLEE_GL_SUN_c⁄vﬁuti⁄_b‹dî_modes
 1

	)

5624 
	#GL_WRAP_BORDER_SUN
 0x81D4

	)

5629 #i‚de‡
GL_EXT_ãxtuª_ív_add


5630 
	#GL_EXT_ãxtuª_ív_add
 1

	)

5631 
	#__GLEE_GL_EXT_ãxtuª_ív_add
 1

	)

5637 #i‚de‡
GL_EXT_ãxtuª_lod_büs


5638 
	#GL_EXT_ãxtuª_lod_büs
 1

	)

5639 
	#__GLEE_GL_EXT_ãxtuª_lod_büs
 1

	)

5641 
	#GL_MAX_TEXTURE_LOD_BIAS_EXT
 0x84FD

	)

5642 
	#GL_TEXTURE_FILTER_CONTROL_EXT
 0x8500

	)

5643 
	#GL_TEXTURE_LOD_BIAS_EXT
 0x8501

	)

5648 #i‚de‡
GL_EXT_ãxtuª_fûãr_™isŸr›ic


5649 
	#GL_EXT_ãxtuª_fûãr_™isŸr›ic
 1

	)

5650 
	#__GLEE_GL_EXT_ãxtuª_fûãr_™isŸr›ic
 1

	)

5652 
	#GL_TEXTURE_MAX_ANISOTROPY_EXT
 0x84FE

	)

5653 
	#GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
 0x84FF

	)

5658 #i‚de‡
GL_EXT_vîãx_weightög


5659 
	#GL_EXT_vîãx_weightög
 1

	)

5660 
	#__GLEE_GL_EXT_vîãx_weightög
 1

	)

5662 
	#GL_MODELVIEW0_STACK_DEPTH_EXT
 
GL_MODELVIEW_STACK_DEPTH


	)

5663 
	#GL_MODELVIEW1_STACK_DEPTH_EXT
 0x8502

	)

5664 
	#GL_MODELVIEW0_MATRIX_EXT
 
GL_MODELVIEW_MATRIX


	)

5665 
	#GL_MODELVIEW1_MATRIX_EXT
 0x8506

	)

5666 
	#GL_VERTEX_WEIGHTING_EXT
 0x8509

	)

5667 
	#GL_MODELVIEW0_EXT
 
GL_MODELVIEW


	)

5668 
	#GL_MODELVIEW1_EXT
 0x850A

	)

5669 
	#GL_CURRENT_VERTEX_WEIGHT_EXT
 0x850B

	)

5670 
	#GL_VERTEX_WEIGHT_ARRAY_EXT
 0x850C

	)

5671 
	#GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT
 0x850D

	)

5672 
	#GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT
 0x850E

	)

5673 
	#GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT
 0x850F

	)

5674 
	#GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT
 0x8510

	)

5675 (
APIENTRYP
 
	tPFNGLVERTEXWEIGHTFEXTPROC
Ë(
	tGLÊﬂt
 
	tweight
);

5676 (
APIENTRYP
 
	tPFNGLVERTEXWEIGHTFVEXTPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tweight
);

5677 (
APIENTRYP
 
	tPFNGLVERTEXWEIGHTPOINTEREXTPROC
Ë(
	tGLsizei
 
	tsize
, 
	tGLíum
 
	tty≥
, GLsizeò
	t°ride
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

5678 
GLEE_EXTERN
 
PFNGLVERTEXWEIGHTFEXTPROC
 
	gpglVîãxWeightfEXT
;

5679 
GLEE_EXTERN
 
PFNGLVERTEXWEIGHTFVEXTPROC
 
	gpglVîãxWeightfvEXT
;

5680 
GLEE_EXTERN
 
PFNGLVERTEXWEIGHTPOINTEREXTPROC
 
	gpglVîãxWeightPoöãrEXT
;

5681 
	#glVîãxWeightfEXT
 
pglVîãxWeightfEXT


	)

5682 
	#glVîãxWeightfvEXT
 
pglVîãxWeightfvEXT


	)

5683 
	#glVîãxWeightPoöãrEXT
 
pglVîãxWeightPoöãrEXT


	)

5688 #i‚de‡
GL_NV_light_max_exp⁄ít


5689 
	#GL_NV_light_max_exp⁄ít
 1

	)

5690 
	#__GLEE_GL_NV_light_max_exp⁄ít
 1

	)

5692 
	#GL_MAX_SHININESS_NV
 0x8504

	)

5693 
	#GL_MAX_SPOT_EXPONENT_NV
 0x8505

	)

5698 #i‚de‡
GL_NV_vîãx_¨øy_ønge


5699 
	#GL_NV_vîãx_¨øy_ønge
 1

	)

5700 
	#__GLEE_GL_NV_vîãx_¨øy_ønge
 1

	)

5702 
	#GL_VERTEX_ARRAY_RANGE_NV
 0x851D

	)

5703 
	#GL_VERTEX_ARRAY_RANGE_LENGTH_NV
 0x851E

	)

5704 
	#GL_VERTEX_ARRAY_RANGE_VALID_NV
 0x851F

	)

5705 
	#GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV
 0x8520

	)

5706 
	#GL_VERTEX_ARRAY_RANGE_POINTER_NV
 0x8521

	)

5707 (
APIENTRYP
 
	tPFNGLFLUSHVERTEXARRAYRANGENVPROC
) ();

5708 (
APIENTRYP
 
	tPFNGLVERTEXARRAYRANGENVPROC
Ë(
	tGLsizei
 
	tÀngth
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

5709 
GLEE_EXTERN
 
PFNGLFLUSHVERTEXARRAYRANGENVPROC
 
	gpglFlushVîãxAºayR™geNV
;

5710 
GLEE_EXTERN
 
PFNGLVERTEXARRAYRANGENVPROC
 
	gpglVîãxAºayR™geNV
;

5711 
	#glFlushVîãxAºayR™geNV
 
pglFlushVîãxAºayR™geNV


	)

5712 
	#glVîãxAºayR™geNV
 
pglVîãxAºayR™geNV


	)

5717 #i‚de‡
GL_NV_ªgi°î_comböîs


5718 
	#GL_NV_ªgi°î_comböîs
 1

	)

5719 
	#__GLEE_GL_NV_ªgi°î_comböîs
 1

	)

5721 
	#GL_REGISTER_COMBINERS_NV
 0x8522

	)

5722 
	#GL_VARIABLE_A_NV
 0x8523

	)

5723 
	#GL_VARIABLE_B_NV
 0x8524

	)

5724 
	#GL_VARIABLE_C_NV
 0x8525

	)

5725 
	#GL_VARIABLE_D_NV
 0x8526

	)

5726 
	#GL_VARIABLE_E_NV
 0x8527

	)

5727 
	#GL_VARIABLE_F_NV
 0x8528

	)

5728 
	#GL_VARIABLE_G_NV
 0x8529

	)

5729 
	#GL_CONSTANT_COLOR0_NV
 0x852A

	)

5730 
	#GL_CONSTANT_COLOR1_NV
 0x852B

	)

5731 
	#GL_PRIMARY_COLOR_NV
 0x852C

	)

5732 
	#GL_SECONDARY_COLOR_NV
 0x852D

	)

5733 
	#GL_SPARE0_NV
 0x852E

	)

5734 
	#GL_SPARE1_NV
 0x852F

	)

5735 
	#GL_DISCARD_NV
 0x8530

	)

5736 
	#GL_E_TIMES_F_NV
 0x8531

	)

5737 
	#GL_SPARE0_PLUS_SECONDARY_COLOR_NV
 0x8532

	)

5738 
	#GL_UNSIGNED_IDENTITY_NV
 0x8536

	)

5739 
	#GL_UNSIGNED_INVERT_NV
 0x8537

	)

5740 
	#GL_EXPAND_NORMAL_NV
 0x8538

	)

5741 
	#GL_EXPAND_NEGATE_NV
 0x8539

	)

5742 
	#GL_HALF_BIAS_NORMAL_NV
 0x853A

	)

5743 
	#GL_HALF_BIAS_NEGATE_NV
 0x853B

	)

5744 
	#GL_SIGNED_IDENTITY_NV
 0x853C

	)

5745 
	#GL_SIGNED_NEGATE_NV
 0x853D

	)

5746 
	#GL_SCALE_BY_TWO_NV
 0x853E

	)

5747 
	#GL_SCALE_BY_FOUR_NV
 0x853F

	)

5748 
	#GL_SCALE_BY_ONE_HALF_NV
 0x8540

	)

5749 
	#GL_BIAS_BY_NEGATIVE_ONE_HALF_NV
 0x8541

	)

5750 
	#GL_COMBINER_INPUT_NV
 0x8542

	)

5751 
	#GL_COMBINER_MAPPING_NV
 0x8543

	)

5752 
	#GL_COMBINER_COMPONENT_USAGE_NV
 0x8544

	)

5753 
	#GL_COMBINER_AB_DOT_PRODUCT_NV
 0x8545

	)

5754 
	#GL_COMBINER_CD_DOT_PRODUCT_NV
 0x8546

	)

5755 
	#GL_COMBINER_MUX_SUM_NV
 0x8547

	)

5756 
	#GL_COMBINER_SCALE_NV
 0x8548

	)

5757 
	#GL_COMBINER_BIAS_NV
 0x8549

	)

5758 
	#GL_COMBINER_AB_OUTPUT_NV
 0x854A

	)

5759 
	#GL_COMBINER_CD_OUTPUT_NV
 0x854B

	)

5760 
	#GL_COMBINER_SUM_OUTPUT_NV
 0x854C

	)

5761 
	#GL_MAX_GENERAL_COMBINERS_NV
 0x854D

	)

5762 
	#GL_NUM_GENERAL_COMBINERS_NV
 0x854E

	)

5763 
	#GL_COLOR_SUM_CLAMP_NV
 0x854F

	)

5764 
	#GL_COMBINER0_NV
 0x8550

	)

5765 
	#GL_COMBINER1_NV
 0x8551

	)

5766 
	#GL_COMBINER2_NV
 0x8552

	)

5767 
	#GL_COMBINER3_NV
 0x8553

	)

5768 
	#GL_COMBINER4_NV
 0x8554

	)

5769 
	#GL_COMBINER5_NV
 0x8555

	)

5770 
	#GL_COMBINER6_NV
 0x8556

	)

5771 
	#GL_COMBINER7_NV
 0x8557

	)

5772 (
APIENTRYP
 
	tPFNGLCOMBINERPARAMETERFVNVPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

5773 (
APIENTRYP
 
	tPFNGLCOMBINERPARAMETERFNVPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

5774 (
APIENTRYP
 
	tPFNGLCOMBINERPARAMETERIVNVPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

5775 (
APIENTRYP
 
	tPFNGLCOMBINERPARAMETERINVPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

5776 (
APIENTRYP
 
	tPFNGLCOMBINERINPUTNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	tv¨übÀ
, GLíum 
	töput
, GLíum 
	tm≠pög
, GLíum 
	tcomp⁄ítUßge
);

5777 (
APIENTRYP
 
	tPFNGLCOMBINEROUTPUTNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	tabOuçut
, GLíum 
	tcdOuçut
, GLíum 
	tsumOuçut
, GLíum 
	tsˇÀ
, GLíum 
	tbüs
, 
	tGLboﬁón
 
	tabDŸProdu˘
, GLboﬁó¿
	tcdDŸProdu˘
, GLboﬁó¿
	tmuxSum
);

5778 (
APIENTRYP
 
	tPFNGLFINALCOMBINERINPUTNVPROC
Ë(
	tGLíum
 
	tv¨übÀ
, GLíum 
	töput
, GLíum 
	tm≠pög
, GLíum 
	tcomp⁄ítUßge
);

5779 (
APIENTRYP
 
	tPFNGLGETCOMBINERINPUTPARAMETERFVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	tv¨übÀ
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

5780 (
APIENTRYP
 
	tPFNGLGETCOMBINERINPUTPARAMETERIVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	tv¨übÀ
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

5781 (
APIENTRYP
 
	tPFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

5782 (
APIENTRYP
 
	tPFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

5783 (
APIENTRYP
 
	tPFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC
Ë(
	tGLíum
 
	tv¨übÀ
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

5784 (
APIENTRYP
 
	tPFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC
Ë(
	tGLíum
 
	tv¨übÀ
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

5785 
GLEE_EXTERN
 
PFNGLCOMBINERPARAMETERFVNVPROC
 
	gpglComböîP¨amëîfvNV
;

5786 
GLEE_EXTERN
 
PFNGLCOMBINERPARAMETERFNVPROC
 
	gpglComböîP¨amëîfNV
;

5787 
GLEE_EXTERN
 
PFNGLCOMBINERPARAMETERIVNVPROC
 
	gpglComböîP¨amëîivNV
;

5788 
GLEE_EXTERN
 
PFNGLCOMBINERPARAMETERINVPROC
 
	gpglComböîP¨amëîiNV
;

5789 
GLEE_EXTERN
 
PFNGLCOMBINERINPUTNVPROC
 
	gpglComböîI≈utNV
;

5790 
GLEE_EXTERN
 
PFNGLCOMBINEROUTPUTNVPROC
 
	gpglComböîOuçutNV
;

5791 
GLEE_EXTERN
 
PFNGLFINALCOMBINERINPUTNVPROC
 
	gpglFöÆComböîI≈utNV
;

5792 
GLEE_EXTERN
 
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC
 
	gpglGëComböîI≈utP¨amëîfvNV
;

5793 
GLEE_EXTERN
 
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC
 
	gpglGëComböîI≈utP¨amëîivNV
;

5794 
GLEE_EXTERN
 
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC
 
	gpglGëComböîOuçutP¨amëîfvNV
;

5795 
GLEE_EXTERN
 
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC
 
	gpglGëComböîOuçutP¨amëîivNV
;

5796 
GLEE_EXTERN
 
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC
 
	gpglGëFöÆComböîI≈utP¨amëîfvNV
;

5797 
GLEE_EXTERN
 
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC
 
	gpglGëFöÆComböîI≈utP¨amëîivNV
;

5798 
	#glComböîP¨amëîfvNV
 
pglComböîP¨amëîfvNV


	)

5799 
	#glComböîP¨amëîfNV
 
pglComböîP¨amëîfNV


	)

5800 
	#glComböîP¨amëîivNV
 
pglComböîP¨amëîivNV


	)

5801 
	#glComböîP¨amëîiNV
 
pglComböîP¨amëîiNV


	)

5802 
	#glComböîI≈utNV
 
pglComböîI≈utNV


	)

5803 
	#glComböîOuçutNV
 
pglComböîOuçutNV


	)

5804 
	#glFöÆComböîI≈utNV
 
pglFöÆComböîI≈utNV


	)

5805 
	#glGëComböîI≈utP¨amëîfvNV
 
pglGëComböîI≈utP¨amëîfvNV


	)

5806 
	#glGëComböîI≈utP¨amëîivNV
 
pglGëComböîI≈utP¨amëîivNV


	)

5807 
	#glGëComböîOuçutP¨amëîfvNV
 
pglGëComböîOuçutP¨amëîfvNV


	)

5808 
	#glGëComböîOuçutP¨amëîivNV
 
pglGëComböîOuçutP¨amëîivNV


	)

5809 
	#glGëFöÆComböîI≈utP¨amëîfvNV
 
pglGëFöÆComböîI≈utP¨amëîfvNV


	)

5810 
	#glGëFöÆComböîI≈utP¨amëîivNV
 
pglGëFöÆComböîI≈utP¨amëîivNV


	)

5815 #i‚de‡
GL_NV_fog_di°™˚


5816 
	#GL_NV_fog_di°™˚
 1

	)

5817 
	#__GLEE_GL_NV_fog_di°™˚
 1

	)

5819 
	#GL_FOG_DISTANCE_MODE_NV
 0x855A

	)

5820 
	#GL_EYE_RADIAL_NV
 0x855B

	)

5821 
	#GL_EYE_PLANE_ABSOLUTE_NV
 0x855C

	)

5826 #i‚de‡
GL_NV_ãxgí_emboss


5827 
	#GL_NV_ãxgí_emboss
 1

	)

5828 
	#__GLEE_GL_NV_ãxgí_emboss
 1

	)

5830 
	#GL_EMBOSS_LIGHT_NV
 0x855D

	)

5831 
	#GL_EMBOSS_CONSTANT_NV
 0x855E

	)

5832 
	#GL_EMBOSS_MAP_NV
 0x855F

	)

5837 #i‚de‡
GL_NV_bÀnd_squ¨e


5838 
	#GL_NV_bÀnd_squ¨e
 1

	)

5839 
	#__GLEE_GL_NV_bÀnd_squ¨e
 1

	)

5845 #i‚de‡
GL_NV_ãxtuª_ív_comböe4


5846 
	#GL_NV_ãxtuª_ív_comböe4
 1

	)

5847 
	#__GLEE_GL_NV_ãxtuª_ív_comböe4
 1

	)

5849 
	#GL_COMBINE4_NV
 0x8503

	)

5850 
	#GL_SOURCE3_RGB_NV
 0x8583

	)

5851 
	#GL_SOURCE3_ALPHA_NV
 0x858B

	)

5852 
	#GL_OPERAND3_RGB_NV
 0x8593

	)

5853 
	#GL_OPERAND3_ALPHA_NV
 0x859B

	)

5858 #i‚de‡
GL_MESA_ªsize_buf„rs


5859 
	#GL_MESA_ªsize_buf„rs
 1

	)

5860 
	#__GLEE_GL_MESA_ªsize_buf„rs
 1

	)

5862 (
APIENTRYP
 
	tPFNGLRESIZEBUFFERSMESAPROC
) ();

5863 
GLEE_EXTERN
 
PFNGLRESIZEBUFFERSMESAPROC
 
	gpglResizeBuf„rsMESA
;

5864 
	#glResizeBuf„rsMESA
 
pglResizeBuf„rsMESA


	)

5869 #i‚de‡
GL_MESA_wödow_pos


5870 
	#GL_MESA_wödow_pos
 1

	)

5871 
	#__GLEE_GL_MESA_wödow_pos
 1

	)

5873 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DMESAPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

5874 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DVMESAPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tv
);

5875 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FMESAPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

5876 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FVMESAPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tv
);

5877 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IMESAPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
);

5878 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IVMESAPROC
Ë(c⁄° 
	tGLöt
 * 
	tv
);

5879 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SMESAPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

5880 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SVMESAPROC
Ë(c⁄° 
	tGLsh‹t
 * 
	tv
);

5881 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DMESAPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

5882 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DVMESAPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tv
);

5883 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FMESAPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5884 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FVMESAPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tv
);

5885 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IMESAPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

5886 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IVMESAPROC
Ë(c⁄° 
	tGLöt
 * 
	tv
);

5887 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SMESAPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

5888 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SVMESAPROC
Ë(c⁄° 
	tGLsh‹t
 * 
	tv
);

5889 (
APIENTRYP
 
	tPFNGLWINDOWPOS4DMESAPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

5890 (
APIENTRYP
 
	tPFNGLWINDOWPOS4DVMESAPROC
Ë(c⁄° 
	tGLdoubÀ
 * 
	tv
);

5891 (
APIENTRYP
 
	tPFNGLWINDOWPOS4FMESAPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

5892 (
APIENTRYP
 
	tPFNGLWINDOWPOS4FVMESAPROC
Ë(c⁄° 
	tGLÊﬂt
 * 
	tv
);

5893 (
APIENTRYP
 
	tPFNGLWINDOWPOS4IMESAPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

5894 (
APIENTRYP
 
	tPFNGLWINDOWPOS4IVMESAPROC
Ë(c⁄° 
	tGLöt
 * 
	tv
);

5895 (
APIENTRYP
 
	tPFNGLWINDOWPOS4SMESAPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
, GLsh‹à
	tw
);

5896 (
APIENTRYP
 
	tPFNGLWINDOWPOS4SVMESAPROC
Ë(c⁄° 
	tGLsh‹t
 * 
	tv
);

5897 
GLEE_EXTERN
 
PFNGLWINDOWPOS2DMESAPROC
 
	gpglWödowPos2dMESA
;

5898 
GLEE_EXTERN
 
PFNGLWINDOWPOS2DVMESAPROC
 
	gpglWödowPos2dvMESA
;

5899 
GLEE_EXTERN
 
PFNGLWINDOWPOS2FMESAPROC
 
	gpglWödowPos2fMESA
;

5900 
GLEE_EXTERN
 
PFNGLWINDOWPOS2FVMESAPROC
 
	gpglWödowPos2fvMESA
;

5901 
GLEE_EXTERN
 
PFNGLWINDOWPOS2IMESAPROC
 
	gpglWödowPos2iMESA
;

5902 
GLEE_EXTERN
 
PFNGLWINDOWPOS2IVMESAPROC
 
	gpglWödowPos2ivMESA
;

5903 
GLEE_EXTERN
 
PFNGLWINDOWPOS2SMESAPROC
 
	gpglWödowPos2sMESA
;

5904 
GLEE_EXTERN
 
PFNGLWINDOWPOS2SVMESAPROC
 
	gpglWödowPos2svMESA
;

5905 
GLEE_EXTERN
 
PFNGLWINDOWPOS3DMESAPROC
 
	gpglWödowPos3dMESA
;

5906 
GLEE_EXTERN
 
PFNGLWINDOWPOS3DVMESAPROC
 
	gpglWödowPos3dvMESA
;

5907 
GLEE_EXTERN
 
PFNGLWINDOWPOS3FMESAPROC
 
	gpglWödowPos3fMESA
;

5908 
GLEE_EXTERN
 
PFNGLWINDOWPOS3FVMESAPROC
 
	gpglWödowPos3fvMESA
;

5909 
GLEE_EXTERN
 
PFNGLWINDOWPOS3IMESAPROC
 
	gpglWödowPos3iMESA
;

5910 
GLEE_EXTERN
 
PFNGLWINDOWPOS3IVMESAPROC
 
	gpglWödowPos3ivMESA
;

5911 
GLEE_EXTERN
 
PFNGLWINDOWPOS3SMESAPROC
 
	gpglWödowPos3sMESA
;

5912 
GLEE_EXTERN
 
PFNGLWINDOWPOS3SVMESAPROC
 
	gpglWödowPos3svMESA
;

5913 
GLEE_EXTERN
 
PFNGLWINDOWPOS4DMESAPROC
 
	gpglWödowPos4dMESA
;

5914 
GLEE_EXTERN
 
PFNGLWINDOWPOS4DVMESAPROC
 
	gpglWödowPos4dvMESA
;

5915 
GLEE_EXTERN
 
PFNGLWINDOWPOS4FMESAPROC
 
	gpglWödowPos4fMESA
;

5916 
GLEE_EXTERN
 
PFNGLWINDOWPOS4FVMESAPROC
 
	gpglWödowPos4fvMESA
;

5917 
GLEE_EXTERN
 
PFNGLWINDOWPOS4IMESAPROC
 
	gpglWödowPos4iMESA
;

5918 
GLEE_EXTERN
 
PFNGLWINDOWPOS4IVMESAPROC
 
	gpglWödowPos4ivMESA
;

5919 
GLEE_EXTERN
 
PFNGLWINDOWPOS4SMESAPROC
 
	gpglWödowPos4sMESA
;

5920 
GLEE_EXTERN
 
PFNGLWINDOWPOS4SVMESAPROC
 
	gpglWödowPos4svMESA
;

5921 
	#glWödowPos2dMESA
 
pglWödowPos2dMESA


	)

5922 
	#glWödowPos2dvMESA
 
pglWödowPos2dvMESA


	)

5923 
	#glWödowPos2fMESA
 
pglWödowPos2fMESA


	)

5924 
	#glWödowPos2fvMESA
 
pglWödowPos2fvMESA


	)

5925 
	#glWödowPos2iMESA
 
pglWödowPos2iMESA


	)

5926 
	#glWödowPos2ivMESA
 
pglWödowPos2ivMESA


	)

5927 
	#glWödowPos2sMESA
 
pglWödowPos2sMESA


	)

5928 
	#glWödowPos2svMESA
 
pglWödowPos2svMESA


	)

5929 
	#glWödowPos3dMESA
 
pglWödowPos3dMESA


	)

5930 
	#glWödowPos3dvMESA
 
pglWödowPos3dvMESA


	)

5931 
	#glWödowPos3fMESA
 
pglWödowPos3fMESA


	)

5932 
	#glWödowPos3fvMESA
 
pglWödowPos3fvMESA


	)

5933 
	#glWödowPos3iMESA
 
pglWödowPos3iMESA


	)

5934 
	#glWödowPos3ivMESA
 
pglWödowPos3ivMESA


	)

5935 
	#glWödowPos3sMESA
 
pglWödowPos3sMESA


	)

5936 
	#glWödowPos3svMESA
 
pglWödowPos3svMESA


	)

5937 
	#glWödowPos4dMESA
 
pglWödowPos4dMESA


	)

5938 
	#glWödowPos4dvMESA
 
pglWödowPos4dvMESA


	)

5939 
	#glWödowPos4fMESA
 
pglWödowPos4fMESA


	)

5940 
	#glWödowPos4fvMESA
 
pglWödowPos4fvMESA


	)

5941 
	#glWödowPos4iMESA
 
pglWödowPos4iMESA


	)

5942 
	#glWödowPos4ivMESA
 
pglWödowPos4ivMESA


	)

5943 
	#glWödowPos4sMESA
 
pglWödowPos4sMESA


	)

5944 
	#glWödowPos4svMESA
 
pglWödowPos4svMESA


	)

5949 #i‚de‡
GL_EXT_ãxtuª_com¥essi⁄_s3tc


5950 
	#GL_EXT_ãxtuª_com¥essi⁄_s3tc
 1

	)

5951 
	#__GLEE_GL_EXT_ãxtuª_com¥essi⁄_s3tc
 1

	)

5953 
	#GL_COMPRESSED_RGB_S3TC_DXT1_EXT
 0x83F0

	)

5954 
	#GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
 0x83F1

	)

5955 
	#GL_COMPRESSED_RGBA_S3TC_DXT3_EXT
 0x83F2

	)

5956 
	#GL_COMPRESSED_RGBA_S3TC_DXT5_EXT
 0x83F3

	)

5961 #i‚de‡
GL_IBM_cuŒ_vîãx


5962 
	#GL_IBM_cuŒ_vîãx
 1

	)

5963 
	#__GLEE_GL_IBM_cuŒ_vîãx
 1

	)

5965 
	#GL_CULL_VERTEX_IBM
 103050

	)

5970 #i‚de‡
GL_IBM_mu…imode_døw_¨øys


5971 
	#GL_IBM_mu…imode_døw_¨øys
 1

	)

5972 
	#__GLEE_GL_IBM_mu…imode_døw_¨øys
 1

	)

5974 (
APIENTRYP
 
	tPFNGLMULTIMODEDRAWARRAYSIBMPROC
Ë(c⁄° 
	tGLíum
 * 
	tmode
, c⁄° 
	tGLöt
 * 
	tfú°
, c⁄° 
	tGLsizei
 * 
	tcou¡
, GLsizeò
	t¥imcou¡
, GLöà
	tmode°ride
);

5975 (
APIENTRYP
 
	tPFNGLMULTIMODEDRAWELEMENTSIBMPROC
Ë(c⁄° 
	tGLíum
 * 
	tmode
, c⁄° 
	tGLsizei
 * 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
* c⁄° * 
	tödi˚s
, GLsizeò
	t¥imcou¡
, 
	tGLöt
 
	tmode°ride
);

5976 
GLEE_EXTERN
 
PFNGLMULTIMODEDRAWARRAYSIBMPROC
 
	gpglMu…iModeDøwAºaysIBM
;

5977 
GLEE_EXTERN
 
PFNGLMULTIMODEDRAWELEMENTSIBMPROC
 
	gpglMu…iModeDøwEÀmítsIBM
;

5978 
	#glMu…iModeDøwAºaysIBM
 
pglMu…iModeDøwAºaysIBM


	)

5979 
	#glMu…iModeDøwEÀmítsIBM
 
pglMu…iModeDøwEÀmítsIBM


	)

5984 #i‚de‡
GL_IBM_vîãx_¨øy_li°s


5985 
	#GL_IBM_vîãx_¨øy_li°s
 1

	)

5986 
	#__GLEE_GL_IBM_vîãx_¨øy_li°s
 1

	)

5988 
	#GL_VERTEX_ARRAY_LIST_IBM
 103070

	)

5989 
	#GL_NORMAL_ARRAY_LIST_IBM
 103071

	)

5990 
	#GL_COLOR_ARRAY_LIST_IBM
 103072

	)

5991 
	#GL_INDEX_ARRAY_LIST_IBM
 103073

	)

5992 
	#GL_TEXTURE_COORD_ARRAY_LIST_IBM
 103074

	)

5993 
	#GL_EDGE_FLAG_ARRAY_LIST_IBM
 103075

	)

5994 
	#GL_FOG_COORDINATE_ARRAY_LIST_IBM
 103076

	)

5995 
	#GL_SECONDARY_COLOR_ARRAY_LIST_IBM
 103077

	)

5996 
	#GL_VERTEX_ARRAY_LIST_STRIDE_IBM
 103080

	)

5997 
	#GL_NORMAL_ARRAY_LIST_STRIDE_IBM
 103081

	)

5998 
	#GL_COLOR_ARRAY_LIST_STRIDE_IBM
 103082

	)

5999 
	#GL_INDEX_ARRAY_LIST_STRIDE_IBM
 103083

	)

6000 
	#GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
 103084

	)

6001 
	#GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
 103085

	)

6002 
	#GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
 103086

	)

6003 
	#GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
 103087

	)

6004 (
APIENTRYP
 
	tPFNGLCOLORPOINTERLISTIBMPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, GLöà
	t°ride
, c⁄° 
	tGLvoid
* * 
	tpoöãr
, GLöà
	t±r°ride
);

6005 (
APIENTRYP
 
	tPFNGLSECONDARYCOLORPOINTERLISTIBMPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, GLöà
	t°ride
, c⁄° 
	tGLvoid
* * 
	tpoöãr
, GLöà
	t±r°ride
);

6006 (
APIENTRYP
 
	tPFNGLEDGEFLAGPOINTERLISTIBMPROC
Ë(
	tGLöt
 
	t°ride
, c⁄° 
	tGLboﬁón
* * 
	tpoöãr
, GLöà
	t±r°ride
);

6007 (
APIENTRYP
 
	tPFNGLFOGCOORDPOINTERLISTIBMPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLöt
 
	t°ride
, c⁄° 
	tGLvoid
* * 
	tpoöãr
, GLöà
	t±r°ride
);

6008 (
APIENTRYP
 
	tPFNGLINDEXPOINTERLISTIBMPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLöt
 
	t°ride
, c⁄° 
	tGLvoid
* * 
	tpoöãr
, GLöà
	t±r°ride
);

6009 (
APIENTRYP
 
	tPFNGLNORMALPOINTERLISTIBMPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLöt
 
	t°ride
, c⁄° 
	tGLvoid
* * 
	tpoöãr
, GLöà
	t±r°ride
);

6010 (
APIENTRYP
 
	tPFNGLTEXCOORDPOINTERLISTIBMPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, GLöà
	t°ride
, c⁄° 
	tGLvoid
* * 
	tpoöãr
, GLöà
	t±r°ride
);

6011 (
APIENTRYP
 
	tPFNGLVERTEXPOINTERLISTIBMPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, GLöà
	t°ride
, c⁄° 
	tGLvoid
* * 
	tpoöãr
, GLöà
	t±r°ride
);

6012 
GLEE_EXTERN
 
PFNGLCOLORPOINTERLISTIBMPROC
 
	gpglCﬁ‹PoöãrLi°IBM
;

6013 
GLEE_EXTERN
 
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC
 
	gpglSec⁄d¨yCﬁ‹PoöãrLi°IBM
;

6014 
GLEE_EXTERN
 
PFNGLEDGEFLAGPOINTERLISTIBMPROC
 
	gpglEdgeFœgPoöãrLi°IBM
;

6015 
GLEE_EXTERN
 
PFNGLFOGCOORDPOINTERLISTIBMPROC
 
	gpglFogCo‹dPoöãrLi°IBM
;

6016 
GLEE_EXTERN
 
PFNGLINDEXPOINTERLISTIBMPROC
 
	gpglIndexPoöãrLi°IBM
;

6017 
GLEE_EXTERN
 
PFNGLNORMALPOINTERLISTIBMPROC
 
	gpglN‹mÆPoöãrLi°IBM
;

6018 
GLEE_EXTERN
 
PFNGLTEXCOORDPOINTERLISTIBMPROC
 
	gpglTexCo‹dPoöãrLi°IBM
;

6019 
GLEE_EXTERN
 
PFNGLVERTEXPOINTERLISTIBMPROC
 
	gpglVîãxPoöãrLi°IBM
;

6020 
	#glCﬁ‹PoöãrLi°IBM
 
pglCﬁ‹PoöãrLi°IBM


	)

6021 
	#glSec⁄d¨yCﬁ‹PoöãrLi°IBM
 
pglSec⁄d¨yCﬁ‹PoöãrLi°IBM


	)

6022 
	#glEdgeFœgPoöãrLi°IBM
 
pglEdgeFœgPoöãrLi°IBM


	)

6023 
	#glFogCo‹dPoöãrLi°IBM
 
pglFogCo‹dPoöãrLi°IBM


	)

6024 
	#glIndexPoöãrLi°IBM
 
pglIndexPoöãrLi°IBM


	)

6025 
	#glN‹mÆPoöãrLi°IBM
 
pglN‹mÆPoöãrLi°IBM


	)

6026 
	#glTexCo‹dPoöãrLi°IBM
 
pglTexCo‹dPoöãrLi°IBM


	)

6027 
	#glVîãxPoöãrLi°IBM
 
pglVîãxPoöãrLi°IBM


	)

6032 #i‚de‡
GL_SGIX_subßm∂e


6033 
	#GL_SGIX_subßm∂e
 1

	)

6034 
	#__GLEE_GL_SGIX_subßm∂e
 1

	)

6036 
	#GL_PACK_SUBSAMPLE_RATE_SGIX
 0x85A0

	)

6037 
	#GL_UNPACK_SUBSAMPLE_RATE_SGIX
 0x85A1

	)

6038 
	#GL_PIXEL_SUBSAMPLE_4444_SGIX
 0x85A2

	)

6039 
	#GL_PIXEL_SUBSAMPLE_2424_SGIX
 0x85A3

	)

6040 
	#GL_PIXEL_SUBSAMPLE_4242_SGIX
 0x85A4

	)

6045 #i‚de‡
GL_SGIX_y¸cb_subßm∂e


6046 
	#GL_SGIX_y¸cb_subßm∂e
 1

	)

6047 
	#__GLEE_GL_SGIX_y¸cb_subßm∂e
 1

	)

6053 #i‚de‡
GL_SGIX_y¸cba


6054 
	#GL_SGIX_y¸cba
 1

	)

6055 
	#__GLEE_GL_SGIX_y¸cba
 1

	)

6057 
	#GL_YCRCB_SGIX
 0x8318

	)

6058 
	#GL_YCRCBA_SGIX
 0x8319

	)

6063 #i‚de‡
GL_SGI_dïth_∑ss_ö°rumít


6064 
	#GL_SGI_dïth_∑ss_ö°rumít
 1

	)

6065 
	#__GLEE_GL_SGI_dïth_∑ss_ö°rumít
 1

	)

6067 
	#GL_DEPTH_PASS_INSTRUMENT_SGIX
 0x8310

	)

6068 
	#GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX
 0x8311

	)

6069 
	#GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX
 0x8312

	)

6074 #i‚de‡
GL_3DFX_ãxtuª_com¥essi⁄_FXT1


6075 
	#GL_3DFX_ãxtuª_com¥essi⁄_FXT1
 1

	)

6076 
	#__GLEE_GL_3DFX_ãxtuª_com¥essi⁄_FXT1
 1

	)

6078 
	#GL_COMPRESSED_RGB_FXT1_3DFX
 0x86B0

	)

6079 
	#GL_COMPRESSED_RGBA_FXT1_3DFX
 0x86B1

	)

6084 #i‚de‡
GL_3DFX_mu…ißm∂e


6085 
	#GL_3DFX_mu…ißm∂e
 1

	)

6086 
	#__GLEE_GL_3DFX_mu…ißm∂e
 1

	)

6088 
	#GL_MULTISAMPLE_3DFX
 0x86B2

	)

6089 
	#GL_SAMPLE_BUFFERS_3DFX
 0x86B3

	)

6090 
	#GL_SAMPLES_3DFX
 0x86B4

	)

6091 
	#GL_MULTISAMPLE_BIT_3DFX
 0x20000000

	)

6096 #i‚de‡
GL_3DFX_tbuf„r


6097 
	#GL_3DFX_tbuf„r
 1

	)

6098 
	#__GLEE_GL_3DFX_tbuf„r
 1

	)

6100 (
APIENTRYP
 
	tPFNGLTBUFFERMASK3DFXPROC
Ë(
	tGLuöt
 
	tmask
);

6101 
GLEE_EXTERN
 
PFNGLTBUFFERMASK3DFXPROC
 
	gpglTbuf„rMask3DFX
;

6102 
	#glTbuf„rMask3DFX
 
pglTbuf„rMask3DFX


	)

6107 #i‚de‡
GL_EXT_mu…ißm∂e


6108 
	#GL_EXT_mu…ißm∂e
 1

	)

6109 
	#__GLEE_GL_EXT_mu…ißm∂e
 1

	)

6111 
	#GL_MULTISAMPLE_EXT
 0x809D

	)

6112 
	#GL_SAMPLE_ALPHA_TO_MASK_EXT
 0x809E

	)

6113 
	#GL_SAMPLE_ALPHA_TO_ONE_EXT
 0x809F

	)

6114 
	#GL_SAMPLE_MASK_EXT
 0x80A0

	)

6115 
	#GL_1PASS_EXT
 0x80A1

	)

6116 
	#GL_2PASS_0_EXT
 0x80A2

	)

6117 
	#GL_2PASS_1_EXT
 0x80A3

	)

6118 
	#GL_4PASS_0_EXT
 0x80A4

	)

6119 
	#GL_4PASS_1_EXT
 0x80A5

	)

6120 
	#GL_4PASS_2_EXT
 0x80A6

	)

6121 
	#GL_4PASS_3_EXT
 0x80A7

	)

6122 
	#GL_SAMPLE_BUFFERS_EXT
 0x80A8

	)

6123 
	#GL_SAMPLES_EXT
 0x80A9

	)

6124 
	#GL_SAMPLE_MASK_VALUE_EXT
 0x80AA

	)

6125 
	#GL_SAMPLE_MASK_INVERT_EXT
 0x80AB

	)

6126 
	#GL_SAMPLE_PATTERN_EXT
 0x80AC

	)

6127 
	#GL_MULTISAMPLE_BIT_EXT
 0x20000000

	)

6128 (
APIENTRYP
 
	tPFNGLSAMPLEMASKEXTPROC
Ë(
	tGL˛ampf
 
	tvÆue
, 
	tGLboﬁón
 
	tövît
);

6129 (
APIENTRYP
 
	tPFNGLSAMPLEPATTERNEXTPROC
Ë(
	tGLíum
 
	t∑âîn
);

6130 
GLEE_EXTERN
 
PFNGLSAMPLEMASKEXTPROC
 
	gpglSam∂eMaskEXT
;

6131 
GLEE_EXTERN
 
PFNGLSAMPLEPATTERNEXTPROC
 
	gpglSam∂eP©ã∫EXT
;

6132 
	#glSam∂eMaskEXT
 
pglSam∂eMaskEXT


	)

6133 
	#glSam∂eP©ã∫EXT
 
pglSam∂eP©ã∫EXT


	)

6138 #i‚de‡
GL_SGIX_vîãx_¥e˛ù


6139 
	#GL_SGIX_vîãx_¥e˛ù
 1

	)

6140 
	#__GLEE_GL_SGIX_vîãx_¥e˛ù
 1

	)

6142 
	#GL_VERTEX_PRECLIP_SGIX
 0x83EE

	)

6143 
	#GL_VERTEX_PRECLIP_HINT_SGIX
 0x83EF

	)

6148 #i‚de‡
GL_SGIX_c⁄vﬁuti⁄_accuøcy


6149 
	#GL_SGIX_c⁄vﬁuti⁄_accuøcy
 1

	)

6150 
	#__GLEE_GL_SGIX_c⁄vﬁuti⁄_accuøcy
 1

	)

6152 
	#GL_CONVOLUTION_HINT_SGIX
 0x8316

	)

6157 #i‚de‡
GL_SGIX_ªßm∂e


6158 
	#GL_SGIX_ªßm∂e
 1

	)

6159 
	#__GLEE_GL_SGIX_ªßm∂e
 1

	)

6161 
	#GL_PACK_RESAMPLE_SGIX
 0x842C

	)

6162 
	#GL_UNPACK_RESAMPLE_SGIX
 0x842D

	)

6163 
	#GL_RESAMPLE_REPLICATE_SGIX
 0x842E

	)

6164 
	#GL_RESAMPLE_ZERO_FILL_SGIX
 0x842F

	)

6165 
	#GL_RESAMPLE_DECIMATE_SGIX
 0x8430

	)

6170 #i‚de‡
GL_SGIS_poöt_löe_ãxgí


6171 
	#GL_SGIS_poöt_löe_ãxgí
 1

	)

6172 
	#__GLEE_GL_SGIS_poöt_löe_ãxgí
 1

	)

6174 
	#GL_EYE_DISTANCE_TO_POINT_SGIS
 0x81F0

	)

6175 
	#GL_OBJECT_DISTANCE_TO_POINT_SGIS
 0x81F1

	)

6176 
	#GL_EYE_DISTANCE_TO_LINE_SGIS
 0x81F2

	)

6177 
	#GL_OBJECT_DISTANCE_TO_LINE_SGIS
 0x81F3

	)

6178 
	#GL_EYE_POINT_SGIS
 0x81F4

	)

6179 
	#GL_OBJECT_POINT_SGIS
 0x81F5

	)

6180 
	#GL_EYE_LINE_SGIS
 0x81F6

	)

6181 
	#GL_OBJECT_LINE_SGIS
 0x81F7

	)

6186 #i‚de‡
GL_SGIS_ãxtuª_cﬁ‹_mask


6187 
	#GL_SGIS_ãxtuª_cﬁ‹_mask
 1

	)

6188 
	#__GLEE_GL_SGIS_ãxtuª_cﬁ‹_mask
 1

	)

6190 
	#GL_TEXTURE_COLOR_WRITEMASK_SGIS
 0x81EF

	)

6191 (
APIENTRYP
 
	tPFNGLTEXTURECOLORMASKSGISPROC
Ë(
	tGLboﬁón
 
	tªd
, GLboﬁó¿
	tgªí
, GLboﬁó¿
	tblue
, GLboﬁó¿
	tÆpha
);

6192 
GLEE_EXTERN
 
PFNGLTEXTURECOLORMASKSGISPROC
 
	gpglTextuªCﬁ‹MaskSGIS
;

6193 
	#glTextuªCﬁ‹MaskSGIS
 
pglTextuªCﬁ‹MaskSGIS


	)

6198 #i‚de‡
GL_EXT_ãxtuª_ív_dŸ3


6199 
	#GL_EXT_ãxtuª_ív_dŸ3
 1

	)

6200 
	#__GLEE_GL_EXT_ãxtuª_ív_dŸ3
 1

	)

6202 
	#GL_DOT3_RGB_EXT
 0x8740

	)

6203 
	#GL_DOT3_RGBA_EXT
 0x8741

	)

6208 #i‚de‡
GL_ATI_ãxtuª_múr‹_⁄˚


6209 
	#GL_ATI_ãxtuª_múr‹_⁄˚
 1

	)

6210 
	#__GLEE_GL_ATI_ãxtuª_múr‹_⁄˚
 1

	)

6212 
	#GL_MIRROR_CLAMP_ATI
 0x8742

	)

6213 
	#GL_MIRROR_CLAMP_TO_EDGE_ATI
 0x8743

	)

6218 #i‚de‡
GL_NV_„n˚


6219 
	#GL_NV_„n˚
 1

	)

6220 
	#__GLEE_GL_NV_„n˚
 1

	)

6222 
	#GL_ALL_COMPLETED_NV
 0x84F2

	)

6223 
	#GL_FENCE_STATUS_NV
 0x84F3

	)

6224 
	#GL_FENCE_CONDITION_NV
 0x84F4

	)

6225 (
APIENTRYP
 
	tPFNGLDELETEFENCESNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	t„n˚s
);

6226 (
APIENTRYP
 
	tPFNGLGENFENCESNVPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 * 
	t„n˚s
);

6227 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISFENCENVPROC
Ë(
	tGLuöt
 
	t„n˚
);

6228 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLTESTFENCENVPROC
Ë(
	tGLuöt
 
	t„n˚
);

6229 (
APIENTRYP
 
	tPFNGLGETFENCEIVNVPROC
Ë(
	tGLuöt
 
	t„n˚
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

6230 (
APIENTRYP
 
	tPFNGLFINISHFENCENVPROC
Ë(
	tGLuöt
 
	t„n˚
);

6231 (
APIENTRYP
 
	tPFNGLSETFENCENVPROC
Ë(
	tGLuöt
 
	t„n˚
, 
	tGLíum
 
	tc⁄dôi⁄
);

6232 
GLEE_EXTERN
 
PFNGLDELETEFENCESNVPROC
 
	gpglDñëeFí˚sNV
;

6233 
GLEE_EXTERN
 
PFNGLGENFENCESNVPROC
 
	gpglGíFí˚sNV
;

6234 
GLEE_EXTERN
 
PFNGLISFENCENVPROC
 
	gpglIsFí˚NV
;

6235 
GLEE_EXTERN
 
PFNGLTESTFENCENVPROC
 
	gpglTe°Fí˚NV
;

6236 
GLEE_EXTERN
 
PFNGLGETFENCEIVNVPROC
 
	gpglGëFí˚ivNV
;

6237 
GLEE_EXTERN
 
PFNGLFINISHFENCENVPROC
 
	gpglFöishFí˚NV
;

6238 
GLEE_EXTERN
 
PFNGLSETFENCENVPROC
 
	gpglSëFí˚NV
;

6239 
	#glDñëeFí˚sNV
 
pglDñëeFí˚sNV


	)

6240 
	#glGíFí˚sNV
 
pglGíFí˚sNV


	)

6241 
	#glIsFí˚NV
 
pglIsFí˚NV


	)

6242 
	#glTe°Fí˚NV
 
pglTe°Fí˚NV


	)

6243 
	#glGëFí˚ivNV
 
pglGëFí˚ivNV


	)

6244 
	#glFöishFí˚NV
 
pglFöishFí˚NV


	)

6245 
	#glSëFí˚NV
 
pglSëFí˚NV


	)

6250 #i‚de‡
GL_IBM_ãxtuª_múr‹ed_ª≥©


6251 
	#GL_IBM_ãxtuª_múr‹ed_ª≥©
 1

	)

6252 
	#__GLEE_GL_IBM_ãxtuª_múr‹ed_ª≥©
 1

	)

6254 
	#GL_MIRRORED_REPEAT_IBM
 0x8370

	)

6259 #i‚de‡
GL_NV_evÆu©‹s


6260 
	#GL_NV_evÆu©‹s
 1

	)

6261 
	#__GLEE_GL_NV_evÆu©‹s
 1

	)

6263 
	#GL_EVAL_2D_NV
 0x86C0

	)

6264 
	#GL_EVAL_TRIANGULAR_2D_NV
 0x86C1

	)

6265 
	#GL_MAP_TESSELLATION_NV
 0x86C2

	)

6266 
	#GL_MAP_ATTRIB_U_ORDER_NV
 0x86C3

	)

6267 
	#GL_MAP_ATTRIB_V_ORDER_NV
 0x86C4

	)

6268 
	#GL_EVAL_FRACTIONAL_TESSELLATION_NV
 0x86C5

	)

6269 
	#GL_EVAL_VERTEX_ATTRIB0_NV
 0x86C6

	)

6270 
	#GL_EVAL_VERTEX_ATTRIB1_NV
 0x86C7

	)

6271 
	#GL_EVAL_VERTEX_ATTRIB2_NV
 0x86C8

	)

6272 
	#GL_EVAL_VERTEX_ATTRIB3_NV
 0x86C9

	)

6273 
	#GL_EVAL_VERTEX_ATTRIB4_NV
 0x86CA

	)

6274 
	#GL_EVAL_VERTEX_ATTRIB5_NV
 0x86CB

	)

6275 
	#GL_EVAL_VERTEX_ATTRIB6_NV
 0x86CC

	)

6276 
	#GL_EVAL_VERTEX_ATTRIB7_NV
 0x86CD

	)

6277 
	#GL_EVAL_VERTEX_ATTRIB8_NV
 0x86CE

	)

6278 
	#GL_EVAL_VERTEX_ATTRIB9_NV
 0x86CF

	)

6279 
	#GL_EVAL_VERTEX_ATTRIB10_NV
 0x86D0

	)

6280 
	#GL_EVAL_VERTEX_ATTRIB11_NV
 0x86D1

	)

6281 
	#GL_EVAL_VERTEX_ATTRIB12_NV
 0x86D2

	)

6282 
	#GL_EVAL_VERTEX_ATTRIB13_NV
 0x86D3

	)

6283 
	#GL_EVAL_VERTEX_ATTRIB14_NV
 0x86D4

	)

6284 
	#GL_EVAL_VERTEX_ATTRIB15_NV
 0x86D5

	)

6285 
	#GL_MAX_MAP_TESSELLATION_NV
 0x86D6

	)

6286 
	#GL_MAX_RATIONAL_EVAL_ORDER_NV
 0x86D7

	)

6287 (
APIENTRYP
 
	tPFNGLMAPCONTROLPOINTSNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	tty≥
, 
	tGLsizei
 
	tu°ride
, GLsizeò
	tv°ride
, 
	tGLöt
 
	tu‹dî
, GLöà
	tv‹dî
, 
	tGLboﬁón
 
	t∑cked
, c⁄° 
	tGLvoid
 * 
	tpoöts
);

6288 (
APIENTRYP
 
	tPFNGLMAPPARAMETERIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

6289 (
APIENTRYP
 
	tPFNGLMAPPARAMETERFVNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

6290 (
APIENTRYP
 
	tPFNGLGETMAPCONTROLPOINTSNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	tty≥
, 
	tGLsizei
 
	tu°ride
, GLsizeò
	tv°ride
, 
	tGLboﬁón
 
	t∑cked
, 
	tGLvoid
 * 
	tpoöts
);

6291 (
APIENTRYP
 
	tPFNGLGETMAPPARAMETERIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

6292 (
APIENTRYP
 
	tPFNGLGETMAPPARAMETERFVNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

6293 (
APIENTRYP
 
	tPFNGLGETMAPATTRIBPARAMETERIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

6294 (
APIENTRYP
 
	tPFNGLGETMAPATTRIBPARAMETERFVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

6295 (
APIENTRYP
 
	tPFNGLEVALMAPSNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tmode
);

6296 
GLEE_EXTERN
 
PFNGLMAPCONTROLPOINTSNVPROC
 
	gpglM≠C⁄åﬁPoötsNV
;

6297 
GLEE_EXTERN
 
PFNGLMAPPARAMETERIVNVPROC
 
	gpglM≠P¨amëîivNV
;

6298 
GLEE_EXTERN
 
PFNGLMAPPARAMETERFVNVPROC
 
	gpglM≠P¨amëîfvNV
;

6299 
GLEE_EXTERN
 
PFNGLGETMAPCONTROLPOINTSNVPROC
 
	gpglGëM≠C⁄åﬁPoötsNV
;

6300 
GLEE_EXTERN
 
PFNGLGETMAPPARAMETERIVNVPROC
 
	gpglGëM≠P¨amëîivNV
;

6301 
GLEE_EXTERN
 
PFNGLGETMAPPARAMETERFVNVPROC
 
	gpglGëM≠P¨amëîfvNV
;

6302 
GLEE_EXTERN
 
PFNGLGETMAPATTRIBPARAMETERIVNVPROC
 
	gpglGëM≠AâribP¨amëîivNV
;

6303 
GLEE_EXTERN
 
PFNGLGETMAPATTRIBPARAMETERFVNVPROC
 
	gpglGëM≠AâribP¨amëîfvNV
;

6304 
GLEE_EXTERN
 
PFNGLEVALMAPSNVPROC
 
	gpglEvÆM≠sNV
;

6305 
	#glM≠C⁄åﬁPoötsNV
 
pglM≠C⁄åﬁPoötsNV


	)

6306 
	#glM≠P¨amëîivNV
 
pglM≠P¨amëîivNV


	)

6307 
	#glM≠P¨amëîfvNV
 
pglM≠P¨amëîfvNV


	)

6308 
	#glGëM≠C⁄åﬁPoötsNV
 
pglGëM≠C⁄åﬁPoötsNV


	)

6309 
	#glGëM≠P¨amëîivNV
 
pglGëM≠P¨amëîivNV


	)

6310 
	#glGëM≠P¨amëîfvNV
 
pglGëM≠P¨amëîfvNV


	)

6311 
	#glGëM≠AâribP¨amëîivNV
 
pglGëM≠AâribP¨amëîivNV


	)

6312 
	#glGëM≠AâribP¨amëîfvNV
 
pglGëM≠AâribP¨amëîfvNV


	)

6313 
	#glEvÆM≠sNV
 
pglEvÆM≠sNV


	)

6318 #i‚de‡
GL_NV_∑cked_dïth_°ícû


6319 
	#GL_NV_∑cked_dïth_°ícû
 1

	)

6320 
	#__GLEE_GL_NV_∑cked_dïth_°ícû
 1

	)

6322 
	#GL_DEPTH_STENCIL_NV
 0x84F9

	)

6323 
	#GL_UNSIGNED_INT_24_8_NV
 0x84FA

	)

6328 #i‚de‡
GL_NV_ªgi°î_comböîs2


6329 
	#GL_NV_ªgi°î_comböîs2
 1

	)

6330 
	#__GLEE_GL_NV_ªgi°î_comböîs2
 1

	)

6332 
	#GL_PER_STAGE_CONSTANTS_NV
 0x8535

	)

6333 (
APIENTRYP
 
	tPFNGLCOMBINERSTAGEPARAMETERFVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

6334 (
APIENTRYP
 
	tPFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

6335 
GLEE_EXTERN
 
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC
 
	gpglComböîSègeP¨amëîfvNV
;

6336 
GLEE_EXTERN
 
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC
 
	gpglGëComböîSègeP¨amëîfvNV
;

6337 
	#glComböîSègeP¨amëîfvNV
 
pglComböîSègeP¨amëîfvNV


	)

6338 
	#glGëComböîSègeP¨amëîfvNV
 
pglGëComböîSègeP¨amëîfvNV


	)

6343 #i‚de‡
GL_NV_ãxtuª_com¥essi⁄_vtc


6344 
	#GL_NV_ãxtuª_com¥essi⁄_vtc
 1

	)

6345 
	#__GLEE_GL_NV_ãxtuª_com¥essi⁄_vtc
 1

	)

6351 #i‚de‡
GL_NV_ãxtuª_ª˘™gÀ


6352 
	#GL_NV_ãxtuª_ª˘™gÀ
 1

	)

6353 
	#__GLEE_GL_NV_ãxtuª_ª˘™gÀ
 1

	)

6355 
	#GL_TEXTURE_RECTANGLE_NV
 0x84F5

	)

6356 
	#GL_TEXTURE_BINDING_RECTANGLE_NV
 0x84F6

	)

6357 
	#GL_PROXY_TEXTURE_RECTANGLE_NV
 0x84F7

	)

6358 
	#GL_MAX_RECTANGLE_TEXTURE_SIZE_NV
 0x84F8

	)

6363 #i‚de‡
GL_NV_ãxtuª_shadî


6364 
	#GL_NV_ãxtuª_shadî
 1

	)

6365 
	#__GLEE_GL_NV_ãxtuª_shadî
 1

	)

6367 
	#GL_OFFSET_TEXTURE_RECTANGLE_NV
 0x864C

	)

6368 
	#GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV
 0x864D

	)

6369 
	#GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV
 0x864E

	)

6370 
	#GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV
 0x86D9

	)

6371 
	#GL_UNSIGNED_INT_S8_S8_8_8_NV
 0x86DA

	)

6372 
	#GL_UNSIGNED_INT_8_8_S8_S8_REV_NV
 0x86DB

	)

6373 
	#GL_DSDT_MAG_INTENSITY_NV
 0x86DC

	)

6374 
	#GL_SHADER_CONSISTENT_NV
 0x86DD

	)

6375 
	#GL_TEXTURE_SHADER_NV
 0x86DE

	)

6376 
	#GL_SHADER_OPERATION_NV
 0x86DF

	)

6377 
	#GL_CULL_MODES_NV
 0x86E0

	)

6378 
	#GL_OFFSET_TEXTURE_MATRIX_NV
 0x86E1

	)

6379 
	#GL_OFFSET_TEXTURE_SCALE_NV
 0x86E2

	)

6380 
	#GL_OFFSET_TEXTURE_BIAS_NV
 0x86E3

	)

6381 
	#GL_OFFSET_TEXTURE_2D_MATRIX_NV
 
GL_OFFSET_TEXTURE_MATRIX_NV


	)

6382 
	#GL_OFFSET_TEXTURE_2D_SCALE_NV
 
GL_OFFSET_TEXTURE_SCALE_NV


	)

6383 
	#GL_OFFSET_TEXTURE_2D_BIAS_NV
 
GL_OFFSET_TEXTURE_BIAS_NV


	)

6384 
	#GL_PREVIOUS_TEXTURE_INPUT_NV
 0x86E4

	)

6385 
	#GL_CONST_EYE_NV
 0x86E5

	)

6386 
	#GL_PASS_THROUGH_NV
 0x86E6

	)

6387 
	#GL_CULL_FRAGMENT_NV
 0x86E7

	)

6388 
	#GL_OFFSET_TEXTURE_2D_NV
 0x86E8

	)

6389 
	#GL_DEPENDENT_AR_TEXTURE_2D_NV
 0x86E9

	)

6390 
	#GL_DEPENDENT_GB_TEXTURE_2D_NV
 0x86EA

	)

6391 
	#GL_DOT_PRODUCT_NV
 0x86EC

	)

6392 
	#GL_DOT_PRODUCT_DEPTH_REPLACE_NV
 0x86ED

	)

6393 
	#GL_DOT_PRODUCT_TEXTURE_2D_NV
 0x86EE

	)

6394 
	#GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV
 0x86F0

	)

6395 
	#GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV
 0x86F1

	)

6396 
	#GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV
 0x86F2

	)

6397 
	#GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV
 0x86F3

	)

6398 
	#GL_HILO_NV
 0x86F4

	)

6399 
	#GL_DSDT_NV
 0x86F5

	)

6400 
	#GL_DSDT_MAG_NV
 0x86F6

	)

6401 
	#GL_DSDT_MAG_VIB_NV
 0x86F7

	)

6402 
	#GL_HILO16_NV
 0x86F8

	)

6403 
	#GL_SIGNED_HILO_NV
 0x86F9

	)

6404 
	#GL_SIGNED_HILO16_NV
 0x86FA

	)

6405 
	#GL_SIGNED_RGBA_NV
 0x86FB

	)

6406 
	#GL_SIGNED_RGBA8_NV
 0x86FC

	)

6407 
	#GL_SIGNED_RGB_NV
 0x86FE

	)

6408 
	#GL_SIGNED_RGB8_NV
 0x86FF

	)

6409 
	#GL_SIGNED_LUMINANCE_NV
 0x8701

	)

6410 
	#GL_SIGNED_LUMINANCE8_NV
 0x8702

	)

6411 
	#GL_SIGNED_LUMINANCE_ALPHA_NV
 0x8703

	)

6412 
	#GL_SIGNED_LUMINANCE8_ALPHA8_NV
 0x8704

	)

6413 
	#GL_SIGNED_ALPHA_NV
 0x8705

	)

6414 
	#GL_SIGNED_ALPHA8_NV
 0x8706

	)

6415 
	#GL_SIGNED_INTENSITY_NV
 0x8707

	)

6416 
	#GL_SIGNED_INTENSITY8_NV
 0x8708

	)

6417 
	#GL_DSDT8_NV
 0x8709

	)

6418 
	#GL_DSDT8_MAG8_NV
 0x870A

	)

6419 
	#GL_DSDT8_MAG8_INTENSITY8_NV
 0x870B

	)

6420 
	#GL_SIGNED_RGB_UNSIGNED_ALPHA_NV
 0x870C

	)

6421 
	#GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV
 0x870D

	)

6422 
	#GL_HI_SCALE_NV
 0x870E

	)

6423 
	#GL_LO_SCALE_NV
 0x870F

	)

6424 
	#GL_DS_SCALE_NV
 0x8710

	)

6425 
	#GL_DT_SCALE_NV
 0x8711

	)

6426 
	#GL_MAGNITUDE_SCALE_NV
 0x8712

	)

6427 
	#GL_VIBRANCE_SCALE_NV
 0x8713

	)

6428 
	#GL_HI_BIAS_NV
 0x8714

	)

6429 
	#GL_LO_BIAS_NV
 0x8715

	)

6430 
	#GL_DS_BIAS_NV
 0x8716

	)

6431 
	#GL_DT_BIAS_NV
 0x8717

	)

6432 
	#GL_MAGNITUDE_BIAS_NV
 0x8718

	)

6433 
	#GL_VIBRANCE_BIAS_NV
 0x8719

	)

6434 
	#GL_TEXTURE_BORDER_VALUES_NV
 0x871A

	)

6435 
	#GL_TEXTURE_HI_SIZE_NV
 0x871B

	)

6436 
	#GL_TEXTURE_LO_SIZE_NV
 0x871C

	)

6437 
	#GL_TEXTURE_DS_SIZE_NV
 0x871D

	)

6438 
	#GL_TEXTURE_DT_SIZE_NV
 0x871E

	)

6439 
	#GL_TEXTURE_MAG_SIZE_NV
 0x871F

	)

6444 #i‚de‡
GL_NV_ãxtuª_shadî2


6445 
	#GL_NV_ãxtuª_shadî2
 1

	)

6446 
	#__GLEE_GL_NV_ãxtuª_shadî2
 1

	)

6448 
	#GL_DOT_PRODUCT_TEXTURE_3D_NV
 0x86EF

	)

6453 #i‚de‡
GL_NV_vîãx_¨øy_ønge2


6454 
	#GL_NV_vîãx_¨øy_ønge2
 1

	)

6455 
	#__GLEE_GL_NV_vîãx_¨øy_ønge2
 1

	)

6457 
	#GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV
 0x8533

	)

6462 #i‚de‡
GL_NV_vîãx_¥ogøm


6463 
	#GL_NV_vîãx_¥ogøm
 1

	)

6464 
	#__GLEE_GL_NV_vîãx_¥ogøm
 1

	)

6466 
	#GL_VERTEX_PROGRAM_NV
 0x8620

	)

6467 
	#GL_VERTEX_STATE_PROGRAM_NV
 0x8621

	)

6468 
	#GL_ATTRIB_ARRAY_SIZE_NV
 0x8623

	)

6469 
	#GL_ATTRIB_ARRAY_STRIDE_NV
 0x8624

	)

6470 
	#GL_ATTRIB_ARRAY_TYPE_NV
 0x8625

	)

6471 
	#GL_CURRENT_ATTRIB_NV
 0x8626

	)

6472 
	#GL_PROGRAM_LENGTH_NV
 0x8627

	)

6473 
	#GL_PROGRAM_STRING_NV
 0x8628

	)

6474 
	#GL_MODELVIEW_PROJECTION_NV
 0x8629

	)

6475 
	#GL_IDENTITY_NV
 0x862A

	)

6476 
	#GL_INVERSE_NV
 0x862B

	)

6477 
	#GL_TRANSPOSE_NV
 0x862C

	)

6478 
	#GL_INVERSE_TRANSPOSE_NV
 0x862D

	)

6479 
	#GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV
 0x862E

	)

6480 
	#GL_MAX_TRACK_MATRICES_NV
 0x862F

	)

6481 
	#GL_MATRIX0_NV
 0x8630

	)

6482 
	#GL_MATRIX1_NV
 0x8631

	)

6483 
	#GL_MATRIX2_NV
 0x8632

	)

6484 
	#GL_MATRIX3_NV
 0x8633

	)

6485 
	#GL_MATRIX4_NV
 0x8634

	)

6486 
	#GL_MATRIX5_NV
 0x8635

	)

6487 
	#GL_MATRIX6_NV
 0x8636

	)

6488 
	#GL_MATRIX7_NV
 0x8637

	)

6489 
	#GL_CURRENT_MATRIX_STACK_DEPTH_NV
 0x8640

	)

6490 
	#GL_CURRENT_MATRIX_NV
 0x8641

	)

6491 
	#GL_VERTEX_PROGRAM_POINT_SIZE_NV
 0x8642

	)

6492 
	#GL_VERTEX_PROGRAM_TWO_SIDE_NV
 0x8643

	)

6493 
	#GL_PROGRAM_PARAMETER_NV
 0x8644

	)

6494 
	#GL_ATTRIB_ARRAY_POINTER_NV
 0x8645

	)

6495 
	#GL_PROGRAM_TARGET_NV
 0x8646

	)

6496 
	#GL_PROGRAM_RESIDENT_NV
 0x8647

	)

6497 
	#GL_TRACK_MATRIX_NV
 0x8648

	)

6498 
	#GL_TRACK_MATRIX_TRANSFORM_NV
 0x8649

	)

6499 
	#GL_VERTEX_PROGRAM_BINDING_NV
 0x864A

	)

6500 
	#GL_PROGRAM_ERROR_POSITION_NV
 0x864B

	)

6501 
	#GL_VERTEX_ATTRIB_ARRAY0_NV
 0x8650

	)

6502 
	#GL_VERTEX_ATTRIB_ARRAY1_NV
 0x8651

	)

6503 
	#GL_VERTEX_ATTRIB_ARRAY2_NV
 0x8652

	)

6504 
	#GL_VERTEX_ATTRIB_ARRAY3_NV
 0x8653

	)

6505 
	#GL_VERTEX_ATTRIB_ARRAY4_NV
 0x8654

	)

6506 
	#GL_VERTEX_ATTRIB_ARRAY5_NV
 0x8655

	)

6507 
	#GL_VERTEX_ATTRIB_ARRAY6_NV
 0x8656

	)

6508 
	#GL_VERTEX_ATTRIB_ARRAY7_NV
 0x8657

	)

6509 
	#GL_VERTEX_ATTRIB_ARRAY8_NV
 0x8658

	)

6510 
	#GL_VERTEX_ATTRIB_ARRAY9_NV
 0x8659

	)

6511 
	#GL_VERTEX_ATTRIB_ARRAY10_NV
 0x865A

	)

6512 
	#GL_VERTEX_ATTRIB_ARRAY11_NV
 0x865B

	)

6513 
	#GL_VERTEX_ATTRIB_ARRAY12_NV
 0x865C

	)

6514 
	#GL_VERTEX_ATTRIB_ARRAY13_NV
 0x865D

	)

6515 
	#GL_VERTEX_ATTRIB_ARRAY14_NV
 0x865E

	)

6516 
	#GL_VERTEX_ATTRIB_ARRAY15_NV
 0x865F

	)

6517 
	#GL_MAP1_VERTEX_ATTRIB0_4_NV
 0x8660

	)

6518 
	#GL_MAP1_VERTEX_ATTRIB1_4_NV
 0x8661

	)

6519 
	#GL_MAP1_VERTEX_ATTRIB2_4_NV
 0x8662

	)

6520 
	#GL_MAP1_VERTEX_ATTRIB3_4_NV
 0x8663

	)

6521 
	#GL_MAP1_VERTEX_ATTRIB4_4_NV
 0x8664

	)

6522 
	#GL_MAP1_VERTEX_ATTRIB5_4_NV
 0x8665

	)

6523 
	#GL_MAP1_VERTEX_ATTRIB6_4_NV
 0x8666

	)

6524 
	#GL_MAP1_VERTEX_ATTRIB7_4_NV
 0x8667

	)

6525 
	#GL_MAP1_VERTEX_ATTRIB8_4_NV
 0x8668

	)

6526 
	#GL_MAP1_VERTEX_ATTRIB9_4_NV
 0x8669

	)

6527 
	#GL_MAP1_VERTEX_ATTRIB10_4_NV
 0x866A

	)

6528 
	#GL_MAP1_VERTEX_ATTRIB11_4_NV
 0x866B

	)

6529 
	#GL_MAP1_VERTEX_ATTRIB12_4_NV
 0x866C

	)

6530 
	#GL_MAP1_VERTEX_ATTRIB13_4_NV
 0x866D

	)

6531 
	#GL_MAP1_VERTEX_ATTRIB14_4_NV
 0x866E

	)

6532 
	#GL_MAP1_VERTEX_ATTRIB15_4_NV
 0x866F

	)

6533 
	#GL_MAP2_VERTEX_ATTRIB0_4_NV
 0x8670

	)

6534 
	#GL_MAP2_VERTEX_ATTRIB1_4_NV
 0x8671

	)

6535 
	#GL_MAP2_VERTEX_ATTRIB2_4_NV
 0x8672

	)

6536 
	#GL_MAP2_VERTEX_ATTRIB3_4_NV
 0x8673

	)

6537 
	#GL_MAP2_VERTEX_ATTRIB4_4_NV
 0x8674

	)

6538 
	#GL_MAP2_VERTEX_ATTRIB5_4_NV
 0x8675

	)

6539 
	#GL_MAP2_VERTEX_ATTRIB6_4_NV
 0x8676

	)

6540 
	#GL_MAP2_VERTEX_ATTRIB7_4_NV
 0x8677

	)

6541 
	#GL_MAP2_VERTEX_ATTRIB8_4_NV
 0x8678

	)

6542 
	#GL_MAP2_VERTEX_ATTRIB9_4_NV
 0x8679

	)

6543 
	#GL_MAP2_VERTEX_ATTRIB10_4_NV
 0x867A

	)

6544 
	#GL_MAP2_VERTEX_ATTRIB11_4_NV
 0x867B

	)

6545 
	#GL_MAP2_VERTEX_ATTRIB12_4_NV
 0x867C

	)

6546 
	#GL_MAP2_VERTEX_ATTRIB13_4_NV
 0x867D

	)

6547 
	#GL_MAP2_VERTEX_ATTRIB14_4_NV
 0x867E

	)

6548 
	#GL_MAP2_VERTEX_ATTRIB15_4_NV
 0x867F

	)

6549 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLAREPROGRAMSRESIDENTNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	t¥ogøms
, 
	tGLboﬁón
 * 
	tªsidí˚s
);

6550 (
APIENTRYP
 
	tPFNGLBINDPROGRAMNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
);

6551 (
APIENTRYP
 
	tPFNGLDELETEPROGRAMSNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	t¥ogøms
);

6552 (
APIENTRYP
 
	tPFNGLEXECUTEPROGRAMNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

6553 (
APIENTRYP
 
	tPFNGLGENPROGRAMSNVPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 * 
	t¥ogøms
);

6554 (
APIENTRYP
 
	tPFNGLGETPROGRAMPARAMETERDVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	t≤ame
, 
	tGLdoubÀ
 * 
	t∑øms
);

6555 (
APIENTRYP
 
	tPFNGLGETPROGRAMPARAMETERFVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

6556 (
APIENTRYP
 
	tPFNGLGETPROGRAMIVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

6557 (
APIENTRYP
 
	tPFNGLGETPROGRAMSTRINGNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLubyã
 * 
	t¥ogøm
);

6558 (
APIENTRYP
 
	tPFNGLGETTRACKMATRIXIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	taddªss
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

6559 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBDVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLdoubÀ
 * 
	t∑øms
);

6560 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBFVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

6561 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

6562 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBPOINTERVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLvoid
* * 
	tpoöãr
);

6563 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISPROGRAMNVPROC
Ë(
	tGLuöt
 
	tid
);

6564 (
APIENTRYP
 
	tPFNGLLOADPROGRAMNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 * 
	t¥ogøm
);

6565 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETER4DNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

6566 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETER4DVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

6567 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETER4FNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

6568 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETER4FVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

6569 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETERS4DVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tcou¡
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

6570 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETERS4FVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tcou¡
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

6571 (
APIENTRYP
 
	tPFNGLREQUESTRESIDENTPROGRAMSNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	t¥ogøms
);

6572 (
APIENTRYP
 
	tPFNGLTRACKMATRIXNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	taddªss
, GLíum 
	tm©rix
, GLíum 
	tå™sf‹m
);

6573 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBPOINTERNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tfsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

6574 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
);

6575 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

6576 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
);

6577 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

6578 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
);

6579 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 * 
	tv
);

6580 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

6581 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

6582 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

6583 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

6584 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

6585 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 * 
	tv
);

6586 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

6587 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

6588 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

6589 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

6590 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

6591 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 * 
	tv
);

6592 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

6593 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

6594 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

6595 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

6596 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
, GLsh‹à
	tw
);

6597 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 * 
	tv
);

6598 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UBNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLubyã
 
	tx
, GLubyã 
	ty
, GLubyã 
	tz
, GLubyã 
	tw
);

6599 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UBVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 * 
	tv
);

6600 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS1DVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

6601 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS1FVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

6602 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS1SVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLsh‹t
 * 
	tv
);

6603 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS2DVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

6604 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS2FVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

6605 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS2SVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLsh‹t
 * 
	tv
);

6606 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS3DVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

6607 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS3FVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

6608 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS3SVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLsh‹t
 * 
	tv
);

6609 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS4DVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

6610 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS4FVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

6611 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS4SVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLsh‹t
 * 
	tv
);

6612 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS4UBVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLubyã
 * 
	tv
);

6613 
GLEE_EXTERN
 
PFNGLAREPROGRAMSRESIDENTNVPROC
 
	gpglAªProgømsResidítNV
;

6614 
GLEE_EXTERN
 
PFNGLBINDPROGRAMNVPROC
 
	gpglBödProgømNV
;

6615 
GLEE_EXTERN
 
PFNGLDELETEPROGRAMSNVPROC
 
	gpglDñëeProgømsNV
;

6616 
GLEE_EXTERN
 
PFNGLEXECUTEPROGRAMNVPROC
 
	gpglExecuãProgømNV
;

6617 
GLEE_EXTERN
 
PFNGLGENPROGRAMSNVPROC
 
	gpglGíProgømsNV
;

6618 
GLEE_EXTERN
 
PFNGLGETPROGRAMPARAMETERDVNVPROC
 
	gpglGëProgømP¨amëîdvNV
;

6619 
GLEE_EXTERN
 
PFNGLGETPROGRAMPARAMETERFVNVPROC
 
	gpglGëProgømP¨amëîfvNV
;

6620 
GLEE_EXTERN
 
PFNGLGETPROGRAMIVNVPROC
 
	gpglGëProgømivNV
;

6621 
GLEE_EXTERN
 
PFNGLGETPROGRAMSTRINGNVPROC
 
	gpglGëProgømSåögNV
;

6622 
GLEE_EXTERN
 
PFNGLGETTRACKMATRIXIVNVPROC
 
	gpglGëTøckM©rixivNV
;

6623 
GLEE_EXTERN
 
PFNGLGETVERTEXATTRIBDVNVPROC
 
	gpglGëVîãxAâribdvNV
;

6624 
GLEE_EXTERN
 
PFNGLGETVERTEXATTRIBFVNVPROC
 
	gpglGëVîãxAâribfvNV
;

6625 
GLEE_EXTERN
 
PFNGLGETVERTEXATTRIBIVNVPROC
 
	gpglGëVîãxAâribivNV
;

6626 
GLEE_EXTERN
 
PFNGLGETVERTEXATTRIBPOINTERVNVPROC
 
	gpglGëVîãxAâribPoöãrvNV
;

6627 
GLEE_EXTERN
 
PFNGLISPROGRAMNVPROC
 
	gpglIsProgømNV
;

6628 
GLEE_EXTERN
 
PFNGLLOADPROGRAMNVPROC
 
	gpglLﬂdProgømNV
;

6629 
GLEE_EXTERN
 
PFNGLPROGRAMPARAMETER4DNVPROC
 
	gpglProgømP¨amëî4dNV
;

6630 
GLEE_EXTERN
 
PFNGLPROGRAMPARAMETER4DVNVPROC
 
	gpglProgømP¨amëî4dvNV
;

6631 
GLEE_EXTERN
 
PFNGLPROGRAMPARAMETER4FNVPROC
 
	gpglProgømP¨amëî4fNV
;

6632 
GLEE_EXTERN
 
PFNGLPROGRAMPARAMETER4FVNVPROC
 
	gpglProgømP¨amëî4fvNV
;

6633 
GLEE_EXTERN
 
PFNGLPROGRAMPARAMETERS4DVNVPROC
 
	gpglProgømP¨amëîs4dvNV
;

6634 
GLEE_EXTERN
 
PFNGLPROGRAMPARAMETERS4FVNVPROC
 
	gpglProgømP¨amëîs4fvNV
;

6635 
GLEE_EXTERN
 
PFNGLREQUESTRESIDENTPROGRAMSNVPROC
 
	gpglReque°ResidítProgømsNV
;

6636 
GLEE_EXTERN
 
PFNGLTRACKMATRIXNVPROC
 
	gpglTøckM©rixNV
;

6637 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBPOINTERNVPROC
 
	gpglVîãxAâribPoöãrNV
;

6638 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1DNVPROC
 
	gpglVîãxAârib1dNV
;

6639 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1DVNVPROC
 
	gpglVîãxAârib1dvNV
;

6640 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1FNVPROC
 
	gpglVîãxAârib1fNV
;

6641 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1FVNVPROC
 
	gpglVîãxAârib1fvNV
;

6642 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1SNVPROC
 
	gpglVîãxAârib1sNV
;

6643 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1SVNVPROC
 
	gpglVîãxAârib1svNV
;

6644 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2DNVPROC
 
	gpglVîãxAârib2dNV
;

6645 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2DVNVPROC
 
	gpglVîãxAârib2dvNV
;

6646 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2FNVPROC
 
	gpglVîãxAârib2fNV
;

6647 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2FVNVPROC
 
	gpglVîãxAârib2fvNV
;

6648 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2SNVPROC
 
	gpglVîãxAârib2sNV
;

6649 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2SVNVPROC
 
	gpglVîãxAârib2svNV
;

6650 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3DNVPROC
 
	gpglVîãxAârib3dNV
;

6651 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3DVNVPROC
 
	gpglVîãxAârib3dvNV
;

6652 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3FNVPROC
 
	gpglVîãxAârib3fNV
;

6653 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3FVNVPROC
 
	gpglVîãxAârib3fvNV
;

6654 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3SNVPROC
 
	gpglVîãxAârib3sNV
;

6655 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3SVNVPROC
 
	gpglVîãxAârib3svNV
;

6656 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4DNVPROC
 
	gpglVîãxAârib4dNV
;

6657 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4DVNVPROC
 
	gpglVîãxAârib4dvNV
;

6658 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4FNVPROC
 
	gpglVîãxAârib4fNV
;

6659 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4FVNVPROC
 
	gpglVîãxAârib4fvNV
;

6660 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4SNVPROC
 
	gpglVîãxAârib4sNV
;

6661 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4SVNVPROC
 
	gpglVîãxAârib4svNV
;

6662 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4UBNVPROC
 
	gpglVîãxAârib4ubNV
;

6663 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4UBVNVPROC
 
	gpglVîãxAârib4ubvNV
;

6664 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS1DVNVPROC
 
	gpglVîãxAâribs1dvNV
;

6665 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS1FVNVPROC
 
	gpglVîãxAâribs1fvNV
;

6666 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS1SVNVPROC
 
	gpglVîãxAâribs1svNV
;

6667 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS2DVNVPROC
 
	gpglVîãxAâribs2dvNV
;

6668 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS2FVNVPROC
 
	gpglVîãxAâribs2fvNV
;

6669 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS2SVNVPROC
 
	gpglVîãxAâribs2svNV
;

6670 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS3DVNVPROC
 
	gpglVîãxAâribs3dvNV
;

6671 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS3FVNVPROC
 
	gpglVîãxAâribs3fvNV
;

6672 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS3SVNVPROC
 
	gpglVîãxAâribs3svNV
;

6673 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS4DVNVPROC
 
	gpglVîãxAâribs4dvNV
;

6674 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS4FVNVPROC
 
	gpglVîãxAâribs4fvNV
;

6675 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS4SVNVPROC
 
	gpglVîãxAâribs4svNV
;

6676 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS4UBVNVPROC
 
	gpglVîãxAâribs4ubvNV
;

6677 
	#glAªProgømsResidítNV
 
pglAªProgømsResidítNV


	)

6678 
	#glBödProgømNV
 
pglBödProgømNV


	)

6679 
	#glDñëeProgømsNV
 
pglDñëeProgømsNV


	)

6680 
	#glExecuãProgømNV
 
pglExecuãProgømNV


	)

6681 
	#glGíProgømsNV
 
pglGíProgømsNV


	)

6682 
	#glGëProgømP¨amëîdvNV
 
pglGëProgømP¨amëîdvNV


	)

6683 
	#glGëProgømP¨amëîfvNV
 
pglGëProgømP¨amëîfvNV


	)

6684 
	#glGëProgømivNV
 
pglGëProgømivNV


	)

6685 
	#glGëProgømSåögNV
 
pglGëProgømSåögNV


	)

6686 
	#glGëTøckM©rixivNV
 
pglGëTøckM©rixivNV


	)

6687 
	#glGëVîãxAâribdvNV
 
pglGëVîãxAâribdvNV


	)

6688 
	#glGëVîãxAâribfvNV
 
pglGëVîãxAâribfvNV


	)

6689 
	#glGëVîãxAâribivNV
 
pglGëVîãxAâribivNV


	)

6690 
	#glGëVîãxAâribPoöãrvNV
 
pglGëVîãxAâribPoöãrvNV


	)

6691 
	#glIsProgømNV
 
pglIsProgømNV


	)

6692 
	#glLﬂdProgømNV
 
pglLﬂdProgømNV


	)

6693 
	#glProgømP¨amëî4dNV
 
pglProgømP¨amëî4dNV


	)

6694 
	#glProgømP¨amëî4dvNV
 
pglProgømP¨amëî4dvNV


	)

6695 
	#glProgømP¨amëî4fNV
 
pglProgømP¨amëî4fNV


	)

6696 
	#glProgømP¨amëî4fvNV
 
pglProgømP¨amëî4fvNV


	)

6697 
	#glProgømP¨amëîs4dvNV
 
pglProgømP¨amëîs4dvNV


	)

6698 
	#glProgømP¨amëîs4fvNV
 
pglProgømP¨amëîs4fvNV


	)

6699 
	#glReque°ResidítProgømsNV
 
pglReque°ResidítProgømsNV


	)

6700 
	#glTøckM©rixNV
 
pglTøckM©rixNV


	)

6701 
	#glVîãxAâribPoöãrNV
 
pglVîãxAâribPoöãrNV


	)

6702 
	#glVîãxAârib1dNV
 
pglVîãxAârib1dNV


	)

6703 
	#glVîãxAârib1dvNV
 
pglVîãxAârib1dvNV


	)

6704 
	#glVîãxAârib1fNV
 
pglVîãxAârib1fNV


	)

6705 
	#glVîãxAârib1fvNV
 
pglVîãxAârib1fvNV


	)

6706 
	#glVîãxAârib1sNV
 
pglVîãxAârib1sNV


	)

6707 
	#glVîãxAârib1svNV
 
pglVîãxAârib1svNV


	)

6708 
	#glVîãxAârib2dNV
 
pglVîãxAârib2dNV


	)

6709 
	#glVîãxAârib2dvNV
 
pglVîãxAârib2dvNV


	)

6710 
	#glVîãxAârib2fNV
 
pglVîãxAârib2fNV


	)

6711 
	#glVîãxAârib2fvNV
 
pglVîãxAârib2fvNV


	)

6712 
	#glVîãxAârib2sNV
 
pglVîãxAârib2sNV


	)

6713 
	#glVîãxAârib2svNV
 
pglVîãxAârib2svNV


	)

6714 
	#glVîãxAârib3dNV
 
pglVîãxAârib3dNV


	)

6715 
	#glVîãxAârib3dvNV
 
pglVîãxAârib3dvNV


	)

6716 
	#glVîãxAârib3fNV
 
pglVîãxAârib3fNV


	)

6717 
	#glVîãxAârib3fvNV
 
pglVîãxAârib3fvNV


	)

6718 
	#glVîãxAârib3sNV
 
pglVîãxAârib3sNV


	)

6719 
	#glVîãxAârib3svNV
 
pglVîãxAârib3svNV


	)

6720 
	#glVîãxAârib4dNV
 
pglVîãxAârib4dNV


	)

6721 
	#glVîãxAârib4dvNV
 
pglVîãxAârib4dvNV


	)

6722 
	#glVîãxAârib4fNV
 
pglVîãxAârib4fNV


	)

6723 
	#glVîãxAârib4fvNV
 
pglVîãxAârib4fvNV


	)

6724 
	#glVîãxAârib4sNV
 
pglVîãxAârib4sNV


	)

6725 
	#glVîãxAârib4svNV
 
pglVîãxAârib4svNV


	)

6726 
	#glVîãxAârib4ubNV
 
pglVîãxAârib4ubNV


	)

6727 
	#glVîãxAârib4ubvNV
 
pglVîãxAârib4ubvNV


	)

6728 
	#glVîãxAâribs1dvNV
 
pglVîãxAâribs1dvNV


	)

6729 
	#glVîãxAâribs1fvNV
 
pglVîãxAâribs1fvNV


	)

6730 
	#glVîãxAâribs1svNV
 
pglVîãxAâribs1svNV


	)

6731 
	#glVîãxAâribs2dvNV
 
pglVîãxAâribs2dvNV


	)

6732 
	#glVîãxAâribs2fvNV
 
pglVîãxAâribs2fvNV


	)

6733 
	#glVîãxAâribs2svNV
 
pglVîãxAâribs2svNV


	)

6734 
	#glVîãxAâribs3dvNV
 
pglVîãxAâribs3dvNV


	)

6735 
	#glVîãxAâribs3fvNV
 
pglVîãxAâribs3fvNV


	)

6736 
	#glVîãxAâribs3svNV
 
pglVîãxAâribs3svNV


	)

6737 
	#glVîãxAâribs4dvNV
 
pglVîãxAâribs4dvNV


	)

6738 
	#glVîãxAâribs4fvNV
 
pglVîãxAâribs4fvNV


	)

6739 
	#glVîãxAâribs4svNV
 
pglVîãxAâribs4svNV


	)

6740 
	#glVîãxAâribs4ubvNV
 
pglVîãxAâribs4ubvNV


	)

6745 #i‚de‡
GL_SGIX_ãxtuª_co‹dö©e_˛amp


6746 
	#GL_SGIX_ãxtuª_co‹dö©e_˛amp
 1

	)

6747 
	#__GLEE_GL_SGIX_ãxtuª_co‹dö©e_˛amp
 1

	)

6749 
	#GL_TEXTURE_MAX_CLAMP_S_SGIX
 0x8369

	)

6750 
	#GL_TEXTURE_MAX_CLAMP_T_SGIX
 0x836A

	)

6751 
	#GL_TEXTURE_MAX_CLAMP_R_SGIX
 0x836B

	)

6756 #i‚de‡
GL_SGIX_sˇÀbüs_höt


6757 
	#GL_SGIX_sˇÀbüs_höt
 1

	)

6758 
	#__GLEE_GL_SGIX_sˇÀbüs_höt
 1

	)

6760 
	#GL_SCALEBIAS_HINT_SGIX
 0x8322

	)

6765 #i‚de‡
GL_OML_öãæa˚


6766 
	#GL_OML_öãæa˚
 1

	)

6767 
	#__GLEE_GL_OML_öãæa˚
 1

	)

6769 
	#GL_INTERLACE_OML
 0x8980

	)

6770 
	#GL_INTERLACE_READ_OML
 0x8981

	)

6775 #i‚de‡
GL_OML_subßm∂e


6776 
	#GL_OML_subßm∂e
 1

	)

6777 
	#__GLEE_GL_OML_subßm∂e
 1

	)

6779 
	#GL_FORMAT_SUBSAMPLE_24_24_OML
 0x8982

	)

6780 
	#GL_FORMAT_SUBSAMPLE_244_244_OML
 0x8983

	)

6785 #i‚de‡
GL_OML_ªßm∂e


6786 
	#GL_OML_ªßm∂e
 1

	)

6787 
	#__GLEE_GL_OML_ªßm∂e
 1

	)

6789 
	#GL_PACK_RESAMPLE_OML
 0x8984

	)

6790 
	#GL_UNPACK_RESAMPLE_OML
 0x8985

	)

6791 
	#GL_RESAMPLE_REPLICATE_OML
 0x8986

	)

6792 
	#GL_RESAMPLE_ZERO_FILL_OML
 0x8987

	)

6793 
	#GL_RESAMPLE_AVERAGE_OML
 0x8988

	)

6794 
	#GL_RESAMPLE_DECIMATE_OML
 0x8989

	)

6799 #i‚de‡
GL_NV_c›y_dïth_to_cﬁ‹


6800 
	#GL_NV_c›y_dïth_to_cﬁ‹
 1

	)

6801 
	#__GLEE_GL_NV_c›y_dïth_to_cﬁ‹
 1

	)

6803 
	#GL_DEPTH_STENCIL_TO_RGBA_NV
 0x886E

	)

6804 
	#GL_DEPTH_STENCIL_TO_BGRA_NV
 0x886F

	)

6809 #i‚de‡
GL_ATI_ívm≠_bumpm≠


6810 
	#GL_ATI_ívm≠_bumpm≠
 1

	)

6811 
	#__GLEE_GL_ATI_ívm≠_bumpm≠
 1

	)

6813 
	#GL_BUMP_ROT_MATRIX_ATI
 0x8775

	)

6814 
	#GL_BUMP_ROT_MATRIX_SIZE_ATI
 0x8776

	)

6815 
	#GL_BUMP_NUM_TEX_UNITS_ATI
 0x8777

	)

6816 
	#GL_BUMP_TEX_UNITS_ATI
 0x8778

	)

6817 
	#GL_DUDV_ATI
 0x8779

	)

6818 
	#GL_DU8DV8_ATI
 0x877A

	)

6819 
	#GL_BUMP_ENVMAP_ATI
 0x877B

	)

6820 
	#GL_BUMP_TARGET_ATI
 0x877C

	)

6821 (
APIENTRYP
 
	tPFNGLTEXBUMPPARAMETERIVATIPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øm
);

6822 (
APIENTRYP
 
	tPFNGLTEXBUMPPARAMETERFVATIPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øm
);

6823 (
APIENTRYP
 
	tPFNGLGETTEXBUMPPARAMETERIVATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øm
);

6824 (
APIENTRYP
 
	tPFNGLGETTEXBUMPPARAMETERFVATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øm
);

6825 
GLEE_EXTERN
 
PFNGLTEXBUMPPARAMETERIVATIPROC
 
	gpglTexBumpP¨amëîivATI
;

6826 
GLEE_EXTERN
 
PFNGLTEXBUMPPARAMETERFVATIPROC
 
	gpglTexBumpP¨amëîfvATI
;

6827 
GLEE_EXTERN
 
PFNGLGETTEXBUMPPARAMETERIVATIPROC
 
	gpglGëTexBumpP¨amëîivATI
;

6828 
GLEE_EXTERN
 
PFNGLGETTEXBUMPPARAMETERFVATIPROC
 
	gpglGëTexBumpP¨amëîfvATI
;

6829 
	#glTexBumpP¨amëîivATI
 
pglTexBumpP¨amëîivATI


	)

6830 
	#glTexBumpP¨amëîfvATI
 
pglTexBumpP¨amëîfvATI


	)

6831 
	#glGëTexBumpP¨amëîivATI
 
pglGëTexBumpP¨amëîivATI


	)

6832 
	#glGëTexBumpP¨amëîfvATI
 
pglGëTexBumpP¨amëîfvATI


	)

6837 #i‚de‡
GL_ATI_‰agmít_shadî


6838 
	#GL_ATI_‰agmít_shadî
 1

	)

6839 
	#__GLEE_GL_ATI_‰agmít_shadî
 1

	)

6841 
	#GL_FRAGMENT_SHADER_ATI
 0x8920

	)

6842 
	#GL_REG_0_ATI
 0x8921

	)

6843 
	#GL_REG_1_ATI
 0x8922

	)

6844 
	#GL_REG_2_ATI
 0x8923

	)

6845 
	#GL_REG_3_ATI
 0x8924

	)

6846 
	#GL_REG_4_ATI
 0x8925

	)

6847 
	#GL_REG_5_ATI
 0x8926

	)

6848 
	#GL_REG_6_ATI
 0x8927

	)

6849 
	#GL_REG_7_ATI
 0x8928

	)

6850 
	#GL_REG_8_ATI
 0x8929

	)

6851 
	#GL_REG_9_ATI
 0x892A

	)

6852 
	#GL_REG_10_ATI
 0x892B

	)

6853 
	#GL_REG_11_ATI
 0x892C

	)

6854 
	#GL_REG_12_ATI
 0x892D

	)

6855 
	#GL_REG_13_ATI
 0x892E

	)

6856 
	#GL_REG_14_ATI
 0x892F

	)

6857 
	#GL_REG_15_ATI
 0x8930

	)

6858 
	#GL_REG_16_ATI
 0x8931

	)

6859 
	#GL_REG_17_ATI
 0x8932

	)

6860 
	#GL_REG_18_ATI
 0x8933

	)

6861 
	#GL_REG_19_ATI
 0x8934

	)

6862 
	#GL_REG_20_ATI
 0x8935

	)

6863 
	#GL_REG_21_ATI
 0x8936

	)

6864 
	#GL_REG_22_ATI
 0x8937

	)

6865 
	#GL_REG_23_ATI
 0x8938

	)

6866 
	#GL_REG_24_ATI
 0x8939

	)

6867 
	#GL_REG_25_ATI
 0x893A

	)

6868 
	#GL_REG_26_ATI
 0x893B

	)

6869 
	#GL_REG_27_ATI
 0x893C

	)

6870 
	#GL_REG_28_ATI
 0x893D

	)

6871 
	#GL_REG_29_ATI
 0x893E

	)

6872 
	#GL_REG_30_ATI
 0x893F

	)

6873 
	#GL_REG_31_ATI
 0x8940

	)

6874 
	#GL_CON_0_ATI
 0x8941

	)

6875 
	#GL_CON_1_ATI
 0x8942

	)

6876 
	#GL_CON_2_ATI
 0x8943

	)

6877 
	#GL_CON_3_ATI
 0x8944

	)

6878 
	#GL_CON_4_ATI
 0x8945

	)

6879 
	#GL_CON_5_ATI
 0x8946

	)

6880 
	#GL_CON_6_ATI
 0x8947

	)

6881 
	#GL_CON_7_ATI
 0x8948

	)

6882 
	#GL_CON_8_ATI
 0x8949

	)

6883 
	#GL_CON_9_ATI
 0x894A

	)

6884 
	#GL_CON_10_ATI
 0x894B

	)

6885 
	#GL_CON_11_ATI
 0x894C

	)

6886 
	#GL_CON_12_ATI
 0x894D

	)

6887 
	#GL_CON_13_ATI
 0x894E

	)

6888 
	#GL_CON_14_ATI
 0x894F

	)

6889 
	#GL_CON_15_ATI
 0x8950

	)

6890 
	#GL_CON_16_ATI
 0x8951

	)

6891 
	#GL_CON_17_ATI
 0x8952

	)

6892 
	#GL_CON_18_ATI
 0x8953

	)

6893 
	#GL_CON_19_ATI
 0x8954

	)

6894 
	#GL_CON_20_ATI
 0x8955

	)

6895 
	#GL_CON_21_ATI
 0x8956

	)

6896 
	#GL_CON_22_ATI
 0x8957

	)

6897 
	#GL_CON_23_ATI
 0x8958

	)

6898 
	#GL_CON_24_ATI
 0x8959

	)

6899 
	#GL_CON_25_ATI
 0x895A

	)

6900 
	#GL_CON_26_ATI
 0x895B

	)

6901 
	#GL_CON_27_ATI
 0x895C

	)

6902 
	#GL_CON_28_ATI
 0x895D

	)

6903 
	#GL_CON_29_ATI
 0x895E

	)

6904 
	#GL_CON_30_ATI
 0x895F

	)

6905 
	#GL_CON_31_ATI
 0x8960

	)

6906 
	#GL_MOV_ATI
 0x8961

	)

6907 
	#GL_ADD_ATI
 0x8963

	)

6908 
	#GL_MUL_ATI
 0x8964

	)

6909 
	#GL_SUB_ATI
 0x8965

	)

6910 
	#GL_DOT3_ATI
 0x8966

	)

6911 
	#GL_DOT4_ATI
 0x8967

	)

6912 
	#GL_MAD_ATI
 0x8968

	)

6913 
	#GL_LERP_ATI
 0x8969

	)

6914 
	#GL_CND_ATI
 0x896A

	)

6915 
	#GL_CND0_ATI
 0x896B

	)

6916 
	#GL_DOT2_ADD_ATI
 0x896C

	)

6917 
	#GL_SECONDARY_INTERPOLATOR_ATI
 0x896D

	)

6918 
	#GL_NUM_FRAGMENT_REGISTERS_ATI
 0x896E

	)

6919 
	#GL_NUM_FRAGMENT_CONSTANTS_ATI
 0x896F

	)

6920 
	#GL_NUM_PASSES_ATI
 0x8970

	)

6921 
	#GL_NUM_INSTRUCTIONS_PER_PASS_ATI
 0x8971

	)

6922 
	#GL_NUM_INSTRUCTIONS_TOTAL_ATI
 0x8972

	)

6923 
	#GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI
 0x8973

	)

6924 
	#GL_NUM_LOOPBACK_COMPONENTS_ATI
 0x8974

	)

6925 
	#GL_COLOR_ALPHA_PAIRING_ATI
 0x8975

	)

6926 
	#GL_SWIZZLE_STR_ATI
 0x8976

	)

6927 
	#GL_SWIZZLE_STQ_ATI
 0x8977

	)

6928 
	#GL_SWIZZLE_STR_DR_ATI
 0x8978

	)

6929 
	#GL_SWIZZLE_STQ_DQ_ATI
 0x8979

	)

6930 
	#GL_SWIZZLE_STRQ_ATI
 0x897A

	)

6931 
	#GL_SWIZZLE_STRQ_DQ_ATI
 0x897B

	)

6932 
	#GL_RED_BIT_ATI
 0x00000001

	)

6933 
	#GL_GREEN_BIT_ATI
 0x00000002

	)

6934 
	#GL_BLUE_BIT_ATI
 0x00000004

	)

6935 
	#GL_2X_BIT_ATI
 0x00000001

	)

6936 
	#GL_4X_BIT_ATI
 0x00000002

	)

6937 
	#GL_8X_BIT_ATI
 0x00000004

	)

6938 
	#GL_HALF_BIT_ATI
 0x00000008

	)

6939 
	#GL_QUARTER_BIT_ATI
 0x00000010

	)

6940 
	#GL_EIGHTH_BIT_ATI
 0x00000020

	)

6941 
	#GL_SATURATE_BIT_ATI
 0x00000040

	)

6942 
	#GL_COMP_BIT_ATI
 0x00000002

	)

6943 
	#GL_NEGATE_BIT_ATI
 0x00000004

	)

6944 
	#GL_BIAS_BIT_ATI
 0x00000008

	)

6945 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLGENFRAGMENTSHADERSATIPROC
Ë(
	tGLuöt
 
	tønge
);

6946 (
APIENTRYP
 
	tPFNGLBINDFRAGMENTSHADERATIPROC
Ë(
	tGLuöt
 
	tid
);

6947 (
APIENTRYP
 
	tPFNGLDELETEFRAGMENTSHADERATIPROC
Ë(
	tGLuöt
 
	tid
);

6948 (
APIENTRYP
 
	tPFNGLBEGINFRAGMENTSHADERATIPROC
) ();

6949 (
APIENTRYP
 
	tPFNGLENDFRAGMENTSHADERATIPROC
) ();

6950 (
APIENTRYP
 
	tPFNGLPASSTEXCOORDATIPROC
Ë(
	tGLuöt
 
	td°
, GLuöà
	tco‹d
, 
	tGLíum
 
	tswizzÀ
);

6951 (
APIENTRYP
 
	tPFNGLSAMPLEMAPATIPROC
Ë(
	tGLuöt
 
	td°
, GLuöà
	töãΩ
, 
	tGLíum
 
	tswizzÀ
);

6952 (
APIENTRYP
 
	tPFNGLCOLORFRAGMENTOP1ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mask
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
);

6953 (
APIENTRYP
 
	tPFNGLCOLORFRAGMENTOP2ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mask
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
, GLuöà
	t¨g2
, GLuöà
	t¨g2Rï
, GLuöà
	t¨g2Mod
);

6954 (
APIENTRYP
 
	tPFNGLCOLORFRAGMENTOP3ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mask
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
, GLuöà
	t¨g2
, GLuöà
	t¨g2Rï
, GLuöà
	t¨g2Mod
, GLuöà
	t¨g3
, GLuöà
	t¨g3Rï
, GLuöà
	t¨g3Mod
);

6955 (
APIENTRYP
 
	tPFNGLALPHAFRAGMENTOP1ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
);

6956 (
APIENTRYP
 
	tPFNGLALPHAFRAGMENTOP2ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
, GLuöà
	t¨g2
, GLuöà
	t¨g2Rï
, GLuöà
	t¨g2Mod
);

6957 (
APIENTRYP
 
	tPFNGLALPHAFRAGMENTOP3ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
, GLuöà
	t¨g2
, GLuöà
	t¨g2Rï
, GLuöà
	t¨g2Mod
, GLuöà
	t¨g3
, GLuöà
	t¨g3Rï
, GLuöà
	t¨g3Mod
);

6958 (
APIENTRYP
 
	tPFNGLSETFRAGMENTSHADERCONSTANTATIPROC
Ë(
	tGLuöt
 
	td°
, c⁄° 
	tGLÊﬂt
 * 
	tvÆue
);

6959 
GLEE_EXTERN
 
PFNGLGENFRAGMENTSHADERSATIPROC
 
	gpglGíFøgmítShadîsATI
;

6960 
GLEE_EXTERN
 
PFNGLBINDFRAGMENTSHADERATIPROC
 
	gpglBödFøgmítShadîATI
;

6961 
GLEE_EXTERN
 
PFNGLDELETEFRAGMENTSHADERATIPROC
 
	gpglDñëeFøgmítShadîATI
;

6962 
GLEE_EXTERN
 
PFNGLBEGINFRAGMENTSHADERATIPROC
 
	gpglBegöFøgmítShadîATI
;

6963 
GLEE_EXTERN
 
PFNGLENDFRAGMENTSHADERATIPROC
 
	gpglEndFøgmítShadîATI
;

6964 
GLEE_EXTERN
 
PFNGLPASSTEXCOORDATIPROC
 
	gpglPassTexCo‹dATI
;

6965 
GLEE_EXTERN
 
PFNGLSAMPLEMAPATIPROC
 
	gpglSam∂eM≠ATI
;

6966 
GLEE_EXTERN
 
PFNGLCOLORFRAGMENTOP1ATIPROC
 
	gpglCﬁ‹FøgmítOp1ATI
;

6967 
GLEE_EXTERN
 
PFNGLCOLORFRAGMENTOP2ATIPROC
 
	gpglCﬁ‹FøgmítOp2ATI
;

6968 
GLEE_EXTERN
 
PFNGLCOLORFRAGMENTOP3ATIPROC
 
	gpglCﬁ‹FøgmítOp3ATI
;

6969 
GLEE_EXTERN
 
PFNGLALPHAFRAGMENTOP1ATIPROC
 
	gpglAÕhaFøgmítOp1ATI
;

6970 
GLEE_EXTERN
 
PFNGLALPHAFRAGMENTOP2ATIPROC
 
	gpglAÕhaFøgmítOp2ATI
;

6971 
GLEE_EXTERN
 
PFNGLALPHAFRAGMENTOP3ATIPROC
 
	gpglAÕhaFøgmítOp3ATI
;

6972 
GLEE_EXTERN
 
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC
 
	gpglSëFøgmítShadîC⁄°™tATI
;

6973 
	#glGíFøgmítShadîsATI
 
pglGíFøgmítShadîsATI


	)

6974 
	#glBödFøgmítShadîATI
 
pglBödFøgmítShadîATI


	)

6975 
	#glDñëeFøgmítShadîATI
 
pglDñëeFøgmítShadîATI


	)

6976 
	#glBegöFøgmítShadîATI
 
pglBegöFøgmítShadîATI


	)

6977 
	#glEndFøgmítShadîATI
 
pglEndFøgmítShadîATI


	)

6978 
	#glPassTexCo‹dATI
 
pglPassTexCo‹dATI


	)

6979 
	#glSam∂eM≠ATI
 
pglSam∂eM≠ATI


	)

6980 
	#glCﬁ‹FøgmítOp1ATI
 
pglCﬁ‹FøgmítOp1ATI


	)

6981 
	#glCﬁ‹FøgmítOp2ATI
 
pglCﬁ‹FøgmítOp2ATI


	)

6982 
	#glCﬁ‹FøgmítOp3ATI
 
pglCﬁ‹FøgmítOp3ATI


	)

6983 
	#glAÕhaFøgmítOp1ATI
 
pglAÕhaFøgmítOp1ATI


	)

6984 
	#glAÕhaFøgmítOp2ATI
 
pglAÕhaFøgmítOp2ATI


	)

6985 
	#glAÕhaFøgmítOp3ATI
 
pglAÕhaFøgmítOp3ATI


	)

6986 
	#glSëFøgmítShadîC⁄°™tATI
 
pglSëFøgmítShadîC⁄°™tATI


	)

6991 #i‚de‡
GL_ATI_≤_åüngÀs


6992 
	#GL_ATI_≤_åüngÀs
 1

	)

6993 
	#__GLEE_GL_ATI_≤_åüngÀs
 1

	)

6995 
	#GL_PN_TRIANGLES_ATI
 0x87F0

	)

6996 
	#GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI
 0x87F1

	)

6997 
	#GL_PN_TRIANGLES_POINT_MODE_ATI
 0x87F2

	)

6998 
	#GL_PN_TRIANGLES_NORMAL_MODE_ATI
 0x87F3

	)

6999 
	#GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI
 0x87F4

	)

7000 
	#GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI
 0x87F5

	)

7001 
	#GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI
 0x87F6

	)

7002 
	#GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI
 0x87F7

	)

7003 
	#GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI
 0x87F8

	)

7004 (
APIENTRYP
 
	tPFNGLPNTRIANGLESIATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

7005 (
APIENTRYP
 
	tPFNGLPNTRIANGLESFATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

7006 
GLEE_EXTERN
 
PFNGLPNTRIANGLESIATIPROC
 
	gpglPNTrüngÀsiATI
;

7007 
GLEE_EXTERN
 
PFNGLPNTRIANGLESFATIPROC
 
	gpglPNTrüngÀsfATI
;

7008 
	#glPNTrüngÀsiATI
 
pglPNTrüngÀsiATI


	)

7009 
	#glPNTrüngÀsfATI
 
pglPNTrüngÀsfATI


	)

7014 #i‚de‡
GL_ATI_vîãx_¨øy_obje˘


7015 
	#GL_ATI_vîãx_¨øy_obje˘
 1

	)

7016 
	#__GLEE_GL_ATI_vîãx_¨øy_obje˘
 1

	)

7018 
	#GL_STATIC_ATI
 0x8760

	)

7019 
	#GL_DYNAMIC_ATI
 0x8761

	)

7020 
	#GL_PRESERVE_ATI
 0x8762

	)

7021 
	#GL_DISCARD_ATI
 0x8763

	)

7022 
	#GL_OBJECT_BUFFER_SIZE_ATI
 0x8764

	)

7023 
	#GL_OBJECT_BUFFER_USAGE_ATI
 0x8765

	)

7024 
	#GL_ARRAY_OBJECT_BUFFER_ATI
 0x8766

	)

7025 
	#GL_ARRAY_OBJECT_OFFSET_ATI
 0x8767

	)

7026 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLNEWOBJECTBUFFERATIPROC
Ë(
	tGLsizei
 
	tsize
, c⁄° 
	tGLvoid
 * 
	tpoöãr
, 
	tGLíum
 
	tußge
);

7027 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISOBJECTBUFFERATIPROC
Ë(
	tGLuöt
 
	tbuf„r
);

7028 (
APIENTRYP
 
	tPFNGLUPDATEOBJECTBUFFERATIPROC
Ë(
	tGLuöt
 
	tbuf„r
, GLuöà
	toff£t
, 
	tGLsizei
 
	tsize
, c⁄° 
	tGLvoid
 * 
	tpoöãr
, 
	tGLíum
 
	t¥e£rve
);

7029 (
APIENTRYP
 
	tPFNGLGETOBJECTBUFFERFVATIPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

7030 (
APIENTRYP
 
	tPFNGLGETOBJECTBUFFERIVATIPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

7031 (
APIENTRYP
 
	tPFNGLFREEOBJECTBUFFERATIPROC
Ë(
	tGLuöt
 
	tbuf„r
);

7032 (
APIENTRYP
 
	tPFNGLARRAYOBJECTATIPROC
Ë(
	tGLíum
 
	t¨øy
, 
	tGLöt
 
	tsize
, GLíum 
	tty≥
, 
	tGLsizei
 
	t°ride
, 
	tGLuöt
 
	tbuf„r
, GLuöà
	toff£t
);

7033 (
APIENTRYP
 
	tPFNGLGETARRAYOBJECTFVATIPROC
Ë(
	tGLíum
 
	t¨øy
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

7034 (
APIENTRYP
 
	tPFNGLGETARRAYOBJECTIVATIPROC
Ë(
	tGLíum
 
	t¨øy
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

7035 (
APIENTRYP
 
	tPFNGLVARIANTARRAYOBJECTATIPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLuöà
	tbuf„r
, GLuöà
	toff£t
);

7036 (
APIENTRYP
 
	tPFNGLGETVARIANTARRAYOBJECTFVATIPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

7037 (
APIENTRYP
 
	tPFNGLGETVARIANTARRAYOBJECTIVATIPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

7038 
GLEE_EXTERN
 
PFNGLNEWOBJECTBUFFERATIPROC
 
	gpglNewObje˘Buf„rATI
;

7039 
GLEE_EXTERN
 
PFNGLISOBJECTBUFFERATIPROC
 
	gpglIsObje˘Buf„rATI
;

7040 
GLEE_EXTERN
 
PFNGLUPDATEOBJECTBUFFERATIPROC
 
	gpglUpd©eObje˘Buf„rATI
;

7041 
GLEE_EXTERN
 
PFNGLGETOBJECTBUFFERFVATIPROC
 
	gpglGëObje˘Buf„rfvATI
;

7042 
GLEE_EXTERN
 
PFNGLGETOBJECTBUFFERIVATIPROC
 
	gpglGëObje˘Buf„rivATI
;

7043 
GLEE_EXTERN
 
PFNGLFREEOBJECTBUFFERATIPROC
 
	gpglFªeObje˘Buf„rATI
;

7044 
GLEE_EXTERN
 
PFNGLARRAYOBJECTATIPROC
 
	gpglAºayObje˘ATI
;

7045 
GLEE_EXTERN
 
PFNGLGETARRAYOBJECTFVATIPROC
 
	gpglGëAºayObje˘fvATI
;

7046 
GLEE_EXTERN
 
PFNGLGETARRAYOBJECTIVATIPROC
 
	gpglGëAºayObje˘ivATI
;

7047 
GLEE_EXTERN
 
PFNGLVARIANTARRAYOBJECTATIPROC
 
	gpglV¨ü¡AºayObje˘ATI
;

7048 
GLEE_EXTERN
 
PFNGLGETVARIANTARRAYOBJECTFVATIPROC
 
	gpglGëV¨ü¡AºayObje˘fvATI
;

7049 
GLEE_EXTERN
 
PFNGLGETVARIANTARRAYOBJECTIVATIPROC
 
	gpglGëV¨ü¡AºayObje˘ivATI
;

7050 
	#glNewObje˘Buf„rATI
 
pglNewObje˘Buf„rATI


	)

7051 
	#glIsObje˘Buf„rATI
 
pglIsObje˘Buf„rATI


	)

7052 
	#glUpd©eObje˘Buf„rATI
 
pglUpd©eObje˘Buf„rATI


	)

7053 
	#glGëObje˘Buf„rfvATI
 
pglGëObje˘Buf„rfvATI


	)

7054 
	#glGëObje˘Buf„rivATI
 
pglGëObje˘Buf„rivATI


	)

7055 
	#glFªeObje˘Buf„rATI
 
pglFªeObje˘Buf„rATI


	)

7056 
	#glAºayObje˘ATI
 
pglAºayObje˘ATI


	)

7057 
	#glGëAºayObje˘fvATI
 
pglGëAºayObje˘fvATI


	)

7058 
	#glGëAºayObje˘ivATI
 
pglGëAºayObje˘ivATI


	)

7059 
	#glV¨ü¡AºayObje˘ATI
 
pglV¨ü¡AºayObje˘ATI


	)

7060 
	#glGëV¨ü¡AºayObje˘fvATI
 
pglGëV¨ü¡AºayObje˘fvATI


	)

7061 
	#glGëV¨ü¡AºayObje˘ivATI
 
pglGëV¨ü¡AºayObje˘ivATI


	)

7066 #i‚de‡
GL_EXT_vîãx_shadî


7067 
	#GL_EXT_vîãx_shadî
 1

	)

7068 
	#__GLEE_GL_EXT_vîãx_shadî
 1

	)

7070 
	#GL_VERTEX_SHADER_EXT
 0x8780

	)

7071 
	#GL_VERTEX_SHADER_BINDING_EXT
 0x8781

	)

7072 
	#GL_OP_INDEX_EXT
 0x8782

	)

7073 
	#GL_OP_NEGATE_EXT
 0x8783

	)

7074 
	#GL_OP_DOT3_EXT
 0x8784

	)

7075 
	#GL_OP_DOT4_EXT
 0x8785

	)

7076 
	#GL_OP_MUL_EXT
 0x8786

	)

7077 
	#GL_OP_ADD_EXT
 0x8787

	)

7078 
	#GL_OP_MADD_EXT
 0x8788

	)

7079 
	#GL_OP_FRAC_EXT
 0x8789

	)

7080 
	#GL_OP_MAX_EXT
 0x878A

	)

7081 
	#GL_OP_MIN_EXT
 0x878B

	)

7082 
	#GL_OP_SET_GE_EXT
 0x878C

	)

7083 
	#GL_OP_SET_LT_EXT
 0x878D

	)

7084 
	#GL_OP_CLAMP_EXT
 0x878E

	)

7085 
	#GL_OP_FLOOR_EXT
 0x878F

	)

7086 
	#GL_OP_ROUND_EXT
 0x8790

	)

7087 
	#GL_OP_EXP_BASE_2_EXT
 0x8791

	)

7088 
	#GL_OP_LOG_BASE_2_EXT
 0x8792

	)

7089 
	#GL_OP_POWER_EXT
 0x8793

	)

7090 
	#GL_OP_RECIP_EXT
 0x8794

	)

7091 
	#GL_OP_RECIP_SQRT_EXT
 0x8795

	)

7092 
	#GL_OP_SUB_EXT
 0x8796

	)

7093 
	#GL_OP_CROSS_PRODUCT_EXT
 0x8797

	)

7094 
	#GL_OP_MULTIPLY_MATRIX_EXT
 0x8798

	)

7095 
	#GL_OP_MOV_EXT
 0x8799

	)

7096 
	#GL_OUTPUT_VERTEX_EXT
 0x879A

	)

7097 
	#GL_OUTPUT_COLOR0_EXT
 0x879B

	)

7098 
	#GL_OUTPUT_COLOR1_EXT
 0x879C

	)

7099 
	#GL_OUTPUT_TEXTURE_COORD0_EXT
 0x879D

	)

7100 
	#GL_OUTPUT_TEXTURE_COORD1_EXT
 0x879E

	)

7101 
	#GL_OUTPUT_TEXTURE_COORD2_EXT
 0x879F

	)

7102 
	#GL_OUTPUT_TEXTURE_COORD3_EXT
 0x87A0

	)

7103 
	#GL_OUTPUT_TEXTURE_COORD4_EXT
 0x87A1

	)

7104 
	#GL_OUTPUT_TEXTURE_COORD5_EXT
 0x87A2

	)

7105 
	#GL_OUTPUT_TEXTURE_COORD6_EXT
 0x87A3

	)

7106 
	#GL_OUTPUT_TEXTURE_COORD7_EXT
 0x87A4

	)

7107 
	#GL_OUTPUT_TEXTURE_COORD8_EXT
 0x87A5

	)

7108 
	#GL_OUTPUT_TEXTURE_COORD9_EXT
 0x87A6

	)

7109 
	#GL_OUTPUT_TEXTURE_COORD10_EXT
 0x87A7

	)

7110 
	#GL_OUTPUT_TEXTURE_COORD11_EXT
 0x87A8

	)

7111 
	#GL_OUTPUT_TEXTURE_COORD12_EXT
 0x87A9

	)

7112 
	#GL_OUTPUT_TEXTURE_COORD13_EXT
 0x87AA

	)

7113 
	#GL_OUTPUT_TEXTURE_COORD14_EXT
 0x87AB

	)

7114 
	#GL_OUTPUT_TEXTURE_COORD15_EXT
 0x87AC

	)

7115 
	#GL_OUTPUT_TEXTURE_COORD16_EXT
 0x87AD

	)

7116 
	#GL_OUTPUT_TEXTURE_COORD17_EXT
 0x87AE

	)

7117 
	#GL_OUTPUT_TEXTURE_COORD18_EXT
 0x87AF

	)

7118 
	#GL_OUTPUT_TEXTURE_COORD19_EXT
 0x87B0

	)

7119 
	#GL_OUTPUT_TEXTURE_COORD20_EXT
 0x87B1

	)

7120 
	#GL_OUTPUT_TEXTURE_COORD21_EXT
 0x87B2

	)

7121 
	#GL_OUTPUT_TEXTURE_COORD22_EXT
 0x87B3

	)

7122 
	#GL_OUTPUT_TEXTURE_COORD23_EXT
 0x87B4

	)

7123 
	#GL_OUTPUT_TEXTURE_COORD24_EXT
 0x87B5

	)

7124 
	#GL_OUTPUT_TEXTURE_COORD25_EXT
 0x87B6

	)

7125 
	#GL_OUTPUT_TEXTURE_COORD26_EXT
 0x87B7

	)

7126 
	#GL_OUTPUT_TEXTURE_COORD27_EXT
 0x87B8

	)

7127 
	#GL_OUTPUT_TEXTURE_COORD28_EXT
 0x87B9

	)

7128 
	#GL_OUTPUT_TEXTURE_COORD29_EXT
 0x87BA

	)

7129 
	#GL_OUTPUT_TEXTURE_COORD30_EXT
 0x87BB

	)

7130 
	#GL_OUTPUT_TEXTURE_COORD31_EXT
 0x87BC

	)

7131 
	#GL_OUTPUT_FOG_EXT
 0x87BD

	)

7132 
	#GL_SCALAR_EXT
 0x87BE

	)

7133 
	#GL_VECTOR_EXT
 0x87BF

	)

7134 
	#GL_MATRIX_EXT
 0x87C0

	)

7135 
	#GL_VARIANT_EXT
 0x87C1

	)

7136 
	#GL_INVARIANT_EXT
 0x87C2

	)

7137 
	#GL_LOCAL_CONSTANT_EXT
 0x87C3

	)

7138 
	#GL_LOCAL_EXT
 0x87C4

	)

7139 
	#GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT
 0x87C5

	)

7140 
	#GL_MAX_VERTEX_SHADER_VARIANTS_EXT
 0x87C6

	)

7141 
	#GL_MAX_VERTEX_SHADER_INVARIANTS_EXT
 0x87C7

	)

7142 
	#GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
 0x87C8

	)

7143 
	#GL_MAX_VERTEX_SHADER_LOCALS_EXT
 0x87C9

	)

7144 
	#GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT
 0x87CA

	)

7145 
	#GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT
 0x87CB

	)

7146 
	#GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
 0x87CC

	)

7147 
	#GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT
 0x87CD

	)

7148 
	#GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT
 0x87CE

	)

7149 
	#GL_VERTEX_SHADER_INSTRUCTIONS_EXT
 0x87CF

	)

7150 
	#GL_VERTEX_SHADER_VARIANTS_EXT
 0x87D0

	)

7151 
	#GL_VERTEX_SHADER_INVARIANTS_EXT
 0x87D1

	)

7152 
	#GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
 0x87D2

	)

7153 
	#GL_VERTEX_SHADER_LOCALS_EXT
 0x87D3

	)

7154 
	#GL_VERTEX_SHADER_OPTIMIZED_EXT
 0x87D4

	)

7155 
	#GL_X_EXT
 0x87D5

	)

7156 
	#GL_Y_EXT
 0x87D6

	)

7157 
	#GL_Z_EXT
 0x87D7

	)

7158 
	#GL_W_EXT
 0x87D8

	)

7159 
	#GL_NEGATIVE_X_EXT
 0x87D9

	)

7160 
	#GL_NEGATIVE_Y_EXT
 0x87DA

	)

7161 
	#GL_NEGATIVE_Z_EXT
 0x87DB

	)

7162 
	#GL_NEGATIVE_W_EXT
 0x87DC

	)

7163 
	#GL_ZERO_EXT
 0x87DD

	)

7164 
	#GL_ONE_EXT
 0x87DE

	)

7165 
	#GL_NEGATIVE_ONE_EXT
 0x87DF

	)

7166 
	#GL_NORMALIZED_RANGE_EXT
 0x87E0

	)

7167 
	#GL_FULL_RANGE_EXT
 0x87E1

	)

7168 
	#GL_CURRENT_VERTEX_EXT
 0x87E2

	)

7169 
	#GL_MVP_MATRIX_EXT
 0x87E3

	)

7170 
	#GL_VARIANT_VALUE_EXT
 0x87E4

	)

7171 
	#GL_VARIANT_DATATYPE_EXT
 0x87E5

	)

7172 
	#GL_VARIANT_ARRAY_STRIDE_EXT
 0x87E6

	)

7173 
	#GL_VARIANT_ARRAY_TYPE_EXT
 0x87E7

	)

7174 
	#GL_VARIANT_ARRAY_EXT
 0x87E8

	)

7175 
	#GL_VARIANT_ARRAY_POINTER_EXT
 0x87E9

	)

7176 
	#GL_INVARIANT_VALUE_EXT
 0x87EA

	)

7177 
	#GL_INVARIANT_DATATYPE_EXT
 0x87EB

	)

7178 
	#GL_LOCAL_CONSTANT_VALUE_EXT
 0x87EC

	)

7179 
	#GL_LOCAL_CONSTANT_DATATYPE_EXT
 0x87ED

	)

7180 (
APIENTRYP
 
	tPFNGLBEGINVERTEXSHADEREXTPROC
) ();

7181 (
APIENTRYP
 
	tPFNGLENDVERTEXSHADEREXTPROC
) ();

7182 (
APIENTRYP
 
	tPFNGLBINDVERTEXSHADEREXTPROC
Ë(
	tGLuöt
 
	tid
);

7183 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLGENVERTEXSHADERSEXTPROC
Ë(
	tGLuöt
 
	tønge
);

7184 (
APIENTRYP
 
	tPFNGLDELETEVERTEXSHADEREXTPROC
Ë(
	tGLuöt
 
	tid
);

7185 (
APIENTRYP
 
	tPFNGLSHADEROP1EXTPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	tªs
, GLuöà
	t¨g1
);

7186 (
APIENTRYP
 
	tPFNGLSHADEROP2EXTPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	tªs
, GLuöà
	t¨g1
, GLuöà
	t¨g2
);

7187 (
APIENTRYP
 
	tPFNGLSHADEROP3EXTPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	tªs
, GLuöà
	t¨g1
, GLuöà
	t¨g2
, GLuöà
	t¨g3
);

7188 (
APIENTRYP
 
	tPFNGLSWIZZLEEXTPROC
Ë(
	tGLuöt
 
	tªs
, GLuöà
	tö
, 
	tGLíum
 
	toutX
, GLíum 
	toutY
, GLíum 
	toutZ
, GLíum 
	toutW
);

7189 (
APIENTRYP
 
	tPFNGLWRITEMASKEXTPROC
Ë(
	tGLuöt
 
	tªs
, GLuöà
	tö
, 
	tGLíum
 
	toutX
, GLíum 
	toutY
, GLíum 
	toutZ
, GLíum 
	toutW
);

7190 (
APIENTRYP
 
	tPFNGLINSERTCOMPONENTEXTPROC
Ë(
	tGLuöt
 
	tªs
, GLuöà
	t§c
, GLuöà
	tnum
);

7191 (
APIENTRYP
 
	tPFNGLEXTRACTCOMPONENTEXTPROC
Ë(
	tGLuöt
 
	tªs
, GLuöà
	t§c
, GLuöà
	tnum
);

7192 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLGENSYMBOLSEXTPROC
Ë(
	tGLíum
 
	td©©y≥
, GLíum 
	t°‹agëy≥
, GLíum 
	tønge
, 
	tGLuöt
 
	tcomp⁄íts
);

7193 (
APIENTRYP
 
	tPFNGLSETINVARIANTEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
 * 
	taddr
);

7194 (
APIENTRYP
 
	tPFNGLSETLOCALCONSTANTEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
 * 
	taddr
);

7195 (
APIENTRYP
 
	tPFNGLVARIANTBVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLbyã
 * 
	taddr
);

7196 (
APIENTRYP
 
	tPFNGLVARIANTSVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLsh‹t
 * 
	taddr
);

7197 (
APIENTRYP
 
	tPFNGLVARIANTIVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLöt
 * 
	taddr
);

7198 (
APIENTRYP
 
	tPFNGLVARIANTFVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLÊﬂt
 * 
	taddr
);

7199 (
APIENTRYP
 
	tPFNGLVARIANTDVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLdoubÀ
 * 
	taddr
);

7200 (
APIENTRYP
 
	tPFNGLVARIANTUBVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLubyã
 * 
	taddr
);

7201 (
APIENTRYP
 
	tPFNGLVARIANTUSVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLush‹t
 * 
	taddr
);

7202 (
APIENTRYP
 
	tPFNGLVARIANTUIVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° GLuöà* 
	taddr
);

7203 (
APIENTRYP
 
	tPFNGLVARIANTPOINTEREXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tty≥
, GLuöà
	t°ride
, c⁄° 
	tGLvoid
 * 
	taddr
);

7204 (
APIENTRYP
 
	tPFNGLENABLEVARIANTCLIENTSTATEEXTPROC
Ë(
	tGLuöt
 
	tid
);

7205 (
APIENTRYP
 
	tPFNGLDISABLEVARIANTCLIENTSTATEEXTPROC
Ë(
	tGLuöt
 
	tid
);

7206 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLBINDLIGHTPARAMETEREXTPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	tvÆue
);

7207 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLBINDMATERIALPARAMETEREXTPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tvÆue
);

7208 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLBINDTEXGENPARAMETEREXTPROC
Ë(
	tGLíum
 
	tunô
, GLíum 
	tco‹d
, GLíum 
	tvÆue
);

7209 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLBINDTEXTUREUNITPARAMETEREXTPROC
Ë(
	tGLíum
 
	tunô
, GLíum 
	tvÆue
);

7210 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLBINDPARAMETEREXTPROC
Ë(
	tGLíum
 
	tvÆue
);

7211 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISVARIANTENABLEDEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tˇp
);

7212 (
APIENTRYP
 
	tPFNGLGETVARIANTBOOLEANVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLboﬁón
 * 
	td©a
);

7213 (
APIENTRYP
 
	tPFNGLGETVARIANTINTEGERVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLöt
 * 
	td©a
);

7214 (
APIENTRYP
 
	tPFNGLGETVARIANTFLOATVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLÊﬂt
 * 
	td©a
);

7215 (
APIENTRYP
 
	tPFNGLGETVARIANTPOINTERVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLvoid
* * 
	td©a
);

7216 (
APIENTRYP
 
	tPFNGLGETINVARIANTBOOLEANVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLboﬁón
 * 
	td©a
);

7217 (
APIENTRYP
 
	tPFNGLGETINVARIANTINTEGERVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLöt
 * 
	td©a
);

7218 (
APIENTRYP
 
	tPFNGLGETINVARIANTFLOATVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLÊﬂt
 * 
	td©a
);

7219 (
APIENTRYP
 
	tPFNGLGETLOCALCONSTANTBOOLEANVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLboﬁón
 * 
	td©a
);

7220 (
APIENTRYP
 
	tPFNGLGETLOCALCONSTANTINTEGERVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLöt
 * 
	td©a
);

7221 (
APIENTRYP
 
	tPFNGLGETLOCALCONSTANTFLOATVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLÊﬂt
 * 
	td©a
);

7222 
GLEE_EXTERN
 
PFNGLBEGINVERTEXSHADEREXTPROC
 
	gpglBegöVîãxShadîEXT
;

7223 
GLEE_EXTERN
 
PFNGLENDVERTEXSHADEREXTPROC
 
	gpglEndVîãxShadîEXT
;

7224 
GLEE_EXTERN
 
PFNGLBINDVERTEXSHADEREXTPROC
 
	gpglBödVîãxShadîEXT
;

7225 
GLEE_EXTERN
 
PFNGLGENVERTEXSHADERSEXTPROC
 
	gpglGíVîãxShadîsEXT
;

7226 
GLEE_EXTERN
 
PFNGLDELETEVERTEXSHADEREXTPROC
 
	gpglDñëeVîãxShadîEXT
;

7227 
GLEE_EXTERN
 
PFNGLSHADEROP1EXTPROC
 
	gpglShadîOp1EXT
;

7228 
GLEE_EXTERN
 
PFNGLSHADEROP2EXTPROC
 
	gpglShadîOp2EXT
;

7229 
GLEE_EXTERN
 
PFNGLSHADEROP3EXTPROC
 
	gpglShadîOp3EXT
;

7230 
GLEE_EXTERN
 
PFNGLSWIZZLEEXTPROC
 
	gpglSwizzÀEXT
;

7231 
GLEE_EXTERN
 
PFNGLWRITEMASKEXTPROC
 
	gpglWrôeMaskEXT
;

7232 
GLEE_EXTERN
 
PFNGLINSERTCOMPONENTEXTPROC
 
	gpglIn£πComp⁄ítEXT
;

7233 
GLEE_EXTERN
 
PFNGLEXTRACTCOMPONENTEXTPROC
 
	gpglExåa˘Comp⁄ítEXT
;

7234 
GLEE_EXTERN
 
PFNGLGENSYMBOLSEXTPROC
 
	gpglGíSymbﬁsEXT
;

7235 
GLEE_EXTERN
 
PFNGLSETINVARIANTEXTPROC
 
	gpglSëInv¨ü¡EXT
;

7236 
GLEE_EXTERN
 
PFNGLSETLOCALCONSTANTEXTPROC
 
	gpglSëLoˇlC⁄°™tEXT
;

7237 
GLEE_EXTERN
 
PFNGLVARIANTBVEXTPROC
 
	gpglV¨ü¡bvEXT
;

7238 
GLEE_EXTERN
 
PFNGLVARIANTSVEXTPROC
 
	gpglV¨ü¡svEXT
;

7239 
GLEE_EXTERN
 
PFNGLVARIANTIVEXTPROC
 
	gpglV¨ü¡ivEXT
;

7240 
GLEE_EXTERN
 
PFNGLVARIANTFVEXTPROC
 
	gpglV¨ü¡fvEXT
;

7241 
GLEE_EXTERN
 
PFNGLVARIANTDVEXTPROC
 
	gpglV¨ü¡dvEXT
;

7242 
GLEE_EXTERN
 
PFNGLVARIANTUBVEXTPROC
 
	gpglV¨ü¡ubvEXT
;

7243 
GLEE_EXTERN
 
PFNGLVARIANTUSVEXTPROC
 
	gpglV¨ü¡usvEXT
;

7244 
GLEE_EXTERN
 
PFNGLVARIANTUIVEXTPROC
 
	gpglV¨ü¡uivEXT
;

7245 
GLEE_EXTERN
 
PFNGLVARIANTPOINTEREXTPROC
 
	gpglV¨ü¡PoöãrEXT
;

7246 
GLEE_EXTERN
 
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC
 
	gpglE«bÀV¨ü¡Clõ¡SèãEXT
;

7247 
GLEE_EXTERN
 
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC
 
	gpglDißbÀV¨ü¡Clõ¡SèãEXT
;

7248 
GLEE_EXTERN
 
PFNGLBINDLIGHTPARAMETEREXTPROC
 
	gpglBödLightP¨amëîEXT
;

7249 
GLEE_EXTERN
 
PFNGLBINDMATERIALPARAMETEREXTPROC
 
	gpglBödM©îülP¨amëîEXT
;

7250 
GLEE_EXTERN
 
PFNGLBINDTEXGENPARAMETEREXTPROC
 
	gpglBödTexGíP¨amëîEXT
;

7251 
GLEE_EXTERN
 
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC
 
	gpglBödTextuªUnôP¨amëîEXT
;

7252 
GLEE_EXTERN
 
PFNGLBINDPARAMETEREXTPROC
 
	gpglBödP¨amëîEXT
;

7253 
GLEE_EXTERN
 
PFNGLISVARIANTENABLEDEXTPROC
 
	gpglIsV¨ü¡E«bÀdEXT
;

7254 
GLEE_EXTERN
 
PFNGLGETVARIANTBOOLEANVEXTPROC
 
	gpglGëV¨ü¡BoﬁónvEXT
;

7255 
GLEE_EXTERN
 
PFNGLGETVARIANTINTEGERVEXTPROC
 
	gpglGëV¨ü¡I¡egîvEXT
;

7256 
GLEE_EXTERN
 
PFNGLGETVARIANTFLOATVEXTPROC
 
	gpglGëV¨ü¡FlﬂtvEXT
;

7257 
GLEE_EXTERN
 
PFNGLGETVARIANTPOINTERVEXTPROC
 
	gpglGëV¨ü¡PoöãrvEXT
;

7258 
GLEE_EXTERN
 
PFNGLGETINVARIANTBOOLEANVEXTPROC
 
	gpglGëInv¨ü¡BoﬁónvEXT
;

7259 
GLEE_EXTERN
 
PFNGLGETINVARIANTINTEGERVEXTPROC
 
	gpglGëInv¨ü¡I¡egîvEXT
;

7260 
GLEE_EXTERN
 
PFNGLGETINVARIANTFLOATVEXTPROC
 
	gpglGëInv¨ü¡FlﬂtvEXT
;

7261 
GLEE_EXTERN
 
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC
 
	gpglGëLoˇlC⁄°™tBoﬁónvEXT
;

7262 
GLEE_EXTERN
 
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC
 
	gpglGëLoˇlC⁄°™tI¡egîvEXT
;

7263 
GLEE_EXTERN
 
PFNGLGETLOCALCONSTANTFLOATVEXTPROC
 
	gpglGëLoˇlC⁄°™tFlﬂtvEXT
;

7264 
	#glBegöVîãxShadîEXT
 
pglBegöVîãxShadîEXT


	)

7265 
	#glEndVîãxShadîEXT
 
pglEndVîãxShadîEXT


	)

7266 
	#glBödVîãxShadîEXT
 
pglBödVîãxShadîEXT


	)

7267 
	#glGíVîãxShadîsEXT
 
pglGíVîãxShadîsEXT


	)

7268 
	#glDñëeVîãxShadîEXT
 
pglDñëeVîãxShadîEXT


	)

7269 
	#glShadîOp1EXT
 
pglShadîOp1EXT


	)

7270 
	#glShadîOp2EXT
 
pglShadîOp2EXT


	)

7271 
	#glShadîOp3EXT
 
pglShadîOp3EXT


	)

7272 
	#glSwizzÀEXT
 
pglSwizzÀEXT


	)

7273 
	#glWrôeMaskEXT
 
pglWrôeMaskEXT


	)

7274 
	#glIn£πComp⁄ítEXT
 
pglIn£πComp⁄ítEXT


	)

7275 
	#glExåa˘Comp⁄ítEXT
 
pglExåa˘Comp⁄ítEXT


	)

7276 
	#glGíSymbﬁsEXT
 
pglGíSymbﬁsEXT


	)

7277 
	#glSëInv¨ü¡EXT
 
pglSëInv¨ü¡EXT


	)

7278 
	#glSëLoˇlC⁄°™tEXT
 
pglSëLoˇlC⁄°™tEXT


	)

7279 
	#glV¨ü¡bvEXT
 
pglV¨ü¡bvEXT


	)

7280 
	#glV¨ü¡svEXT
 
pglV¨ü¡svEXT


	)

7281 
	#glV¨ü¡ivEXT
 
pglV¨ü¡ivEXT


	)

7282 
	#glV¨ü¡fvEXT
 
pglV¨ü¡fvEXT


	)

7283 
	#glV¨ü¡dvEXT
 
pglV¨ü¡dvEXT


	)

7284 
	#glV¨ü¡ubvEXT
 
pglV¨ü¡ubvEXT


	)

7285 
	#glV¨ü¡usvEXT
 
pglV¨ü¡usvEXT


	)

7286 
	#glV¨ü¡uivEXT
 
pglV¨ü¡uivEXT


	)

7287 
	#glV¨ü¡PoöãrEXT
 
pglV¨ü¡PoöãrEXT


	)

7288 
	#glE«bÀV¨ü¡Clõ¡SèãEXT
 
pglE«bÀV¨ü¡Clõ¡SèãEXT


	)

7289 
	#glDißbÀV¨ü¡Clõ¡SèãEXT
 
pglDißbÀV¨ü¡Clõ¡SèãEXT


	)

7290 
	#glBödLightP¨amëîEXT
 
pglBödLightP¨amëîEXT


	)

7291 
	#glBödM©îülP¨amëîEXT
 
pglBödM©îülP¨amëîEXT


	)

7292 
	#glBödTexGíP¨amëîEXT
 
pglBödTexGíP¨amëîEXT


	)

7293 
	#glBödTextuªUnôP¨amëîEXT
 
pglBödTextuªUnôP¨amëîEXT


	)

7294 
	#glBödP¨amëîEXT
 
pglBödP¨amëîEXT


	)

7295 
	#glIsV¨ü¡E«bÀdEXT
 
pglIsV¨ü¡E«bÀdEXT


	)

7296 
	#glGëV¨ü¡BoﬁónvEXT
 
pglGëV¨ü¡BoﬁónvEXT


	)

7297 
	#glGëV¨ü¡I¡egîvEXT
 
pglGëV¨ü¡I¡egîvEXT


	)

7298 
	#glGëV¨ü¡FlﬂtvEXT
 
pglGëV¨ü¡FlﬂtvEXT


	)

7299 
	#glGëV¨ü¡PoöãrvEXT
 
pglGëV¨ü¡PoöãrvEXT


	)

7300 
	#glGëInv¨ü¡BoﬁónvEXT
 
pglGëInv¨ü¡BoﬁónvEXT


	)

7301 
	#glGëInv¨ü¡I¡egîvEXT
 
pglGëInv¨ü¡I¡egîvEXT


	)

7302 
	#glGëInv¨ü¡FlﬂtvEXT
 
pglGëInv¨ü¡FlﬂtvEXT


	)

7303 
	#glGëLoˇlC⁄°™tBoﬁónvEXT
 
pglGëLoˇlC⁄°™tBoﬁónvEXT


	)

7304 
	#glGëLoˇlC⁄°™tI¡egîvEXT
 
pglGëLoˇlC⁄°™tI¡egîvEXT


	)

7305 
	#glGëLoˇlC⁄°™tFlﬂtvEXT
 
pglGëLoˇlC⁄°™tFlﬂtvEXT


	)

7310 #i‚de‡
GL_ATI_vîãx_°ªams


7311 
	#GL_ATI_vîãx_°ªams
 1

	)

7312 
	#__GLEE_GL_ATI_vîãx_°ªams
 1

	)

7314 
	#GL_MAX_VERTEX_STREAMS_ATI
 0x876B

	)

7315 
	#GL_VERTEX_STREAM0_ATI
 0x876C

	)

7316 
	#GL_VERTEX_STREAM1_ATI
 0x876D

	)

7317 
	#GL_VERTEX_STREAM2_ATI
 0x876E

	)

7318 
	#GL_VERTEX_STREAM3_ATI
 0x876F

	)

7319 
	#GL_VERTEX_STREAM4_ATI
 0x8770

	)

7320 
	#GL_VERTEX_STREAM5_ATI
 0x8771

	)

7321 
	#GL_VERTEX_STREAM6_ATI
 0x8772

	)

7322 
	#GL_VERTEX_STREAM7_ATI
 0x8773

	)

7323 
	#GL_VERTEX_SOURCE_ATI
 0x8774

	)

7324 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1SATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLsh‹t
 
	tx
);

7325 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1SVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLsh‹t
 * 
	tco‹ds
);

7326 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1IATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLöt
 
	tx
);

7327 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1IVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLöt
 * 
	tco‹ds
);

7328 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1FATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLÊﬂt
 
	tx
);

7329 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1FVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLÊﬂt
 * 
	tco‹ds
);

7330 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1DATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLdoubÀ
 
	tx
);

7331 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1DVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLdoubÀ
 * 
	tco‹ds
);

7332 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2SATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

7333 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2SVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLsh‹t
 * 
	tco‹ds
);

7334 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2IATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLöt
 
	tx
, GLöà
	ty
);

7335 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2IVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLöt
 * 
	tco‹ds
);

7336 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2FATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

7337 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2FVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLÊﬂt
 * 
	tco‹ds
);

7338 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2DATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

7339 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2DVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLdoubÀ
 * 
	tco‹ds
);

7340 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3SATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

7341 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3SVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLsh‹t
 * 
	tco‹ds
);

7342 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3IATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

7343 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3IVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLöt
 * 
	tco‹ds
);

7344 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3FATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7345 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3FVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLÊﬂt
 * 
	tco‹ds
);

7346 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3DATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

7347 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3DVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLdoubÀ
 * 
	tco‹ds
);

7348 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4SATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
, GLsh‹à
	tw
);

7349 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4SVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLsh‹t
 * 
	tco‹ds
);

7350 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4IATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

7351 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4IVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLöt
 * 
	tco‹ds
);

7352 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4FATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

7353 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4FVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLÊﬂt
 * 
	tco‹ds
);

7354 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4DATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

7355 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4DVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLdoubÀ
 * 
	tco‹ds
);

7356 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3BATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLbyã
 
	tnx
, GLbyã 
	tny
, GLbyã 
	tnz
);

7357 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3BVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLbyã
 * 
	tco‹ds
);

7358 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3SATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLsh‹t
 
	tnx
, GLsh‹à
	tny
, GLsh‹à
	tnz
);

7359 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3SVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLsh‹t
 * 
	tco‹ds
);

7360 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3IATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLöt
 
	tnx
, GLöà
	tny
, GLöà
	tnz
);

7361 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3IVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLöt
 * 
	tco‹ds
);

7362 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3FATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLÊﬂt
 
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
);

7363 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3FVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLÊﬂt
 * 
	tco‹ds
);

7364 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3DATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLdoubÀ
 
	tnx
, GLdoubÀ 
	tny
, GLdoubÀ 
	tnz
);

7365 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3DVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLdoubÀ
 * 
	tco‹ds
);

7366 (
APIENTRYP
 
	tPFNGLCLIENTACTIVEVERTEXSTREAMATIPROC
Ë(
	tGLíum
 
	t°ªam
);

7367 (
APIENTRYP
 
	tPFNGLVERTEXBLENDENVIATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

7368 (
APIENTRYP
 
	tPFNGLVERTEXBLENDENVFATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

7369 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM1SATIPROC
 
	gpglVîãxSåóm1sATI
;

7370 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM1SVATIPROC
 
	gpglVîãxSåóm1svATI
;

7371 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM1IATIPROC
 
	gpglVîãxSåóm1iATI
;

7372 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM1IVATIPROC
 
	gpglVîãxSåóm1ivATI
;

7373 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM1FATIPROC
 
	gpglVîãxSåóm1fATI
;

7374 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM1FVATIPROC
 
	gpglVîãxSåóm1fvATI
;

7375 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM1DATIPROC
 
	gpglVîãxSåóm1dATI
;

7376 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM1DVATIPROC
 
	gpglVîãxSåóm1dvATI
;

7377 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM2SATIPROC
 
	gpglVîãxSåóm2sATI
;

7378 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM2SVATIPROC
 
	gpglVîãxSåóm2svATI
;

7379 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM2IATIPROC
 
	gpglVîãxSåóm2iATI
;

7380 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM2IVATIPROC
 
	gpglVîãxSåóm2ivATI
;

7381 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM2FATIPROC
 
	gpglVîãxSåóm2fATI
;

7382 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM2FVATIPROC
 
	gpglVîãxSåóm2fvATI
;

7383 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM2DATIPROC
 
	gpglVîãxSåóm2dATI
;

7384 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM2DVATIPROC
 
	gpglVîãxSåóm2dvATI
;

7385 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM3SATIPROC
 
	gpglVîãxSåóm3sATI
;

7386 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM3SVATIPROC
 
	gpglVîãxSåóm3svATI
;

7387 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM3IATIPROC
 
	gpglVîãxSåóm3iATI
;

7388 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM3IVATIPROC
 
	gpglVîãxSåóm3ivATI
;

7389 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM3FATIPROC
 
	gpglVîãxSåóm3fATI
;

7390 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM3FVATIPROC
 
	gpglVîãxSåóm3fvATI
;

7391 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM3DATIPROC
 
	gpglVîãxSåóm3dATI
;

7392 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM3DVATIPROC
 
	gpglVîãxSåóm3dvATI
;

7393 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM4SATIPROC
 
	gpglVîãxSåóm4sATI
;

7394 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM4SVATIPROC
 
	gpglVîãxSåóm4svATI
;

7395 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM4IATIPROC
 
	gpglVîãxSåóm4iATI
;

7396 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM4IVATIPROC
 
	gpglVîãxSåóm4ivATI
;

7397 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM4FATIPROC
 
	gpglVîãxSåóm4fATI
;

7398 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM4FVATIPROC
 
	gpglVîãxSåóm4fvATI
;

7399 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM4DATIPROC
 
	gpglVîãxSåóm4dATI
;

7400 
GLEE_EXTERN
 
PFNGLVERTEXSTREAM4DVATIPROC
 
	gpglVîãxSåóm4dvATI
;

7401 
GLEE_EXTERN
 
PFNGLNORMALSTREAM3BATIPROC
 
	gpglN‹mÆSåóm3bATI
;

7402 
GLEE_EXTERN
 
PFNGLNORMALSTREAM3BVATIPROC
 
	gpglN‹mÆSåóm3bvATI
;

7403 
GLEE_EXTERN
 
PFNGLNORMALSTREAM3SATIPROC
 
	gpglN‹mÆSåóm3sATI
;

7404 
GLEE_EXTERN
 
PFNGLNORMALSTREAM3SVATIPROC
 
	gpglN‹mÆSåóm3svATI
;

7405 
GLEE_EXTERN
 
PFNGLNORMALSTREAM3IATIPROC
 
	gpglN‹mÆSåóm3iATI
;

7406 
GLEE_EXTERN
 
PFNGLNORMALSTREAM3IVATIPROC
 
	gpglN‹mÆSåóm3ivATI
;

7407 
GLEE_EXTERN
 
PFNGLNORMALSTREAM3FATIPROC
 
	gpglN‹mÆSåóm3fATI
;

7408 
GLEE_EXTERN
 
PFNGLNORMALSTREAM3FVATIPROC
 
	gpglN‹mÆSåóm3fvATI
;

7409 
GLEE_EXTERN
 
PFNGLNORMALSTREAM3DATIPROC
 
	gpglN‹mÆSåóm3dATI
;

7410 
GLEE_EXTERN
 
PFNGLNORMALSTREAM3DVATIPROC
 
	gpglN‹mÆSåóm3dvATI
;

7411 
GLEE_EXTERN
 
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC
 
	gpglClõ¡A˘iveVîãxSåómATI
;

7412 
GLEE_EXTERN
 
PFNGLVERTEXBLENDENVIATIPROC
 
	gpglVîãxBÀndEnviATI
;

7413 
GLEE_EXTERN
 
PFNGLVERTEXBLENDENVFATIPROC
 
	gpglVîãxBÀndEnvfATI
;

7414 
	#glVîãxSåóm1sATI
 
pglVîãxSåóm1sATI


	)

7415 
	#glVîãxSåóm1svATI
 
pglVîãxSåóm1svATI


	)

7416 
	#glVîãxSåóm1iATI
 
pglVîãxSåóm1iATI


	)

7417 
	#glVîãxSåóm1ivATI
 
pglVîãxSåóm1ivATI


	)

7418 
	#glVîãxSåóm1fATI
 
pglVîãxSåóm1fATI


	)

7419 
	#glVîãxSåóm1fvATI
 
pglVîãxSåóm1fvATI


	)

7420 
	#glVîãxSåóm1dATI
 
pglVîãxSåóm1dATI


	)

7421 
	#glVîãxSåóm1dvATI
 
pglVîãxSåóm1dvATI


	)

7422 
	#glVîãxSåóm2sATI
 
pglVîãxSåóm2sATI


	)

7423 
	#glVîãxSåóm2svATI
 
pglVîãxSåóm2svATI


	)

7424 
	#glVîãxSåóm2iATI
 
pglVîãxSåóm2iATI


	)

7425 
	#glVîãxSåóm2ivATI
 
pglVîãxSåóm2ivATI


	)

7426 
	#glVîãxSåóm2fATI
 
pglVîãxSåóm2fATI


	)

7427 
	#glVîãxSåóm2fvATI
 
pglVîãxSåóm2fvATI


	)

7428 
	#glVîãxSåóm2dATI
 
pglVîãxSåóm2dATI


	)

7429 
	#glVîãxSåóm2dvATI
 
pglVîãxSåóm2dvATI


	)

7430 
	#glVîãxSåóm3sATI
 
pglVîãxSåóm3sATI


	)

7431 
	#glVîãxSåóm3svATI
 
pglVîãxSåóm3svATI


	)

7432 
	#glVîãxSåóm3iATI
 
pglVîãxSåóm3iATI


	)

7433 
	#glVîãxSåóm3ivATI
 
pglVîãxSåóm3ivATI


	)

7434 
	#glVîãxSåóm3fATI
 
pglVîãxSåóm3fATI


	)

7435 
	#glVîãxSåóm3fvATI
 
pglVîãxSåóm3fvATI


	)

7436 
	#glVîãxSåóm3dATI
 
pglVîãxSåóm3dATI


	)

7437 
	#glVîãxSåóm3dvATI
 
pglVîãxSåóm3dvATI


	)

7438 
	#glVîãxSåóm4sATI
 
pglVîãxSåóm4sATI


	)

7439 
	#glVîãxSåóm4svATI
 
pglVîãxSåóm4svATI


	)

7440 
	#glVîãxSåóm4iATI
 
pglVîãxSåóm4iATI


	)

7441 
	#glVîãxSåóm4ivATI
 
pglVîãxSåóm4ivATI


	)

7442 
	#glVîãxSåóm4fATI
 
pglVîãxSåóm4fATI


	)

7443 
	#glVîãxSåóm4fvATI
 
pglVîãxSåóm4fvATI


	)

7444 
	#glVîãxSåóm4dATI
 
pglVîãxSåóm4dATI


	)

7445 
	#glVîãxSåóm4dvATI
 
pglVîãxSåóm4dvATI


	)

7446 
	#glN‹mÆSåóm3bATI
 
pglN‹mÆSåóm3bATI


	)

7447 
	#glN‹mÆSåóm3bvATI
 
pglN‹mÆSåóm3bvATI


	)

7448 
	#glN‹mÆSåóm3sATI
 
pglN‹mÆSåóm3sATI


	)

7449 
	#glN‹mÆSåóm3svATI
 
pglN‹mÆSåóm3svATI


	)

7450 
	#glN‹mÆSåóm3iATI
 
pglN‹mÆSåóm3iATI


	)

7451 
	#glN‹mÆSåóm3ivATI
 
pglN‹mÆSåóm3ivATI


	)

7452 
	#glN‹mÆSåóm3fATI
 
pglN‹mÆSåóm3fATI


	)

7453 
	#glN‹mÆSåóm3fvATI
 
pglN‹mÆSåóm3fvATI


	)

7454 
	#glN‹mÆSåóm3dATI
 
pglN‹mÆSåóm3dATI


	)

7455 
	#glN‹mÆSåóm3dvATI
 
pglN‹mÆSåóm3dvATI


	)

7456 
	#glClõ¡A˘iveVîãxSåómATI
 
pglClõ¡A˘iveVîãxSåómATI


	)

7457 
	#glVîãxBÀndEnviATI
 
pglVîãxBÀndEnviATI


	)

7458 
	#glVîãxBÀndEnvfATI
 
pglVîãxBÀndEnvfATI


	)

7463 #i‚de‡
GL_ATI_ñemít_¨øy


7464 
	#GL_ATI_ñemít_¨øy
 1

	)

7465 
	#__GLEE_GL_ATI_ñemít_¨øy
 1

	)

7467 
	#GL_ELEMENT_ARRAY_ATI
 0x8768

	)

7468 
	#GL_ELEMENT_ARRAY_TYPE_ATI
 0x8769

	)

7469 
	#GL_ELEMENT_ARRAY_POINTER_ATI
 0x876A

	)

7470 (
APIENTRYP
 
	tPFNGLELEMENTPOINTERATIPROC
Ë(
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

7471 (
APIENTRYP
 
	tPFNGLDRAWELEMENTARRAYATIPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLsizei
 
	tcou¡
);

7472 (
APIENTRYP
 
	tPFNGLDRAWRANGEELEMENTARRAYATIPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, 
	tGLsizei
 
	tcou¡
);

7473 
GLEE_EXTERN
 
PFNGLELEMENTPOINTERATIPROC
 
	gpglEÀmítPoöãrATI
;

7474 
GLEE_EXTERN
 
PFNGLDRAWELEMENTARRAYATIPROC
 
	gpglDøwEÀmítAºayATI
;

7475 
GLEE_EXTERN
 
PFNGLDRAWRANGEELEMENTARRAYATIPROC
 
	gpglDøwR™geEÀmítAºayATI
;

7476 
	#glEÀmítPoöãrATI
 
pglEÀmítPoöãrATI


	)

7477 
	#glDøwEÀmítAºayATI
 
pglDøwEÀmítAºayATI


	)

7478 
	#glDøwR™geEÀmítAºayATI
 
pglDøwR™geEÀmítAºayATI


	)

7483 #i‚de‡
GL_SUN_mesh_¨øy


7484 
	#GL_SUN_mesh_¨øy
 1

	)

7485 
	#__GLEE_GL_SUN_mesh_¨øy
 1

	)

7487 
	#GL_QUAD_MESH_SUN
 0x8614

	)

7488 
	#GL_TRIANGLE_MESH_SUN
 0x8615

	)

7489 (
APIENTRYP
 
	tPFNGLDRAWMESHARRAYSSUNPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
, GLsizeò
	twidth
);

7490 
GLEE_EXTERN
 
PFNGLDRAWMESHARRAYSSUNPROC
 
	gpglDøwMeshAºaysSUN
;

7491 
	#glDøwMeshAºaysSUN
 
pglDøwMeshAºaysSUN


	)

7496 #i‚de‡
GL_SUN_¶i˚_accum


7497 
	#GL_SUN_¶i˚_accum
 1

	)

7498 
	#__GLEE_GL_SUN_¶i˚_accum
 1

	)

7500 
	#GL_SLICE_ACCUM_SUN
 0x85CC

	)

7505 #i‚de‡
GL_NV_mu…ißm∂e_fûãr_höt


7506 
	#GL_NV_mu…ißm∂e_fûãr_höt
 1

	)

7507 
	#__GLEE_GL_NV_mu…ißm∂e_fûãr_höt
 1

	)

7509 
	#GL_MULTISAMPLE_FILTER_HINT_NV
 0x8534

	)

7514 #i‚de‡
GL_NV_dïth_˛amp


7515 
	#GL_NV_dïth_˛amp
 1

	)

7516 
	#__GLEE_GL_NV_dïth_˛amp
 1

	)

7518 
	#GL_DEPTH_CLAMP_NV
 0x864F

	)

7523 #i‚de‡
GL_NV_oc˛usi⁄_quîy


7524 
	#GL_NV_oc˛usi⁄_quîy
 1

	)

7525 
	#__GLEE_GL_NV_oc˛usi⁄_quîy
 1

	)

7527 
	#GL_PIXEL_COUNTER_BITS_NV
 0x8864

	)

7528 
	#GL_CURRENT_OCCLUSION_QUERY_ID_NV
 0x8865

	)

7529 
	#GL_PIXEL_COUNT_NV
 0x8866

	)

7530 
	#GL_PIXEL_COUNT_AVAILABLE_NV
 0x8867

	)

7531 (
APIENTRYP
 
	tPFNGLGENOCCLUSIONQUERIESNVPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 * 
	tids
);

7532 (
APIENTRYP
 
	tPFNGLDELETEOCCLUSIONQUERIESNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	tids
);

7533 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISOCCLUSIONQUERYNVPROC
Ë(
	tGLuöt
 
	tid
);

7534 (
APIENTRYP
 
	tPFNGLBEGINOCCLUSIONQUERYNVPROC
Ë(
	tGLuöt
 
	tid
);

7535 (
APIENTRYP
 
	tPFNGLENDOCCLUSIONQUERYNVPROC
) ();

7536 (
APIENTRYP
 
	tPFNGLGETOCCLUSIONQUERYIVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

7537 (
APIENTRYP
 
	tPFNGLGETOCCLUSIONQUERYUIVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, GLuöà* 
	t∑øms
);

7538 
GLEE_EXTERN
 
PFNGLGENOCCLUSIONQUERIESNVPROC
 
	gpglGíOc˛usi⁄QuîõsNV
;

7539 
GLEE_EXTERN
 
PFNGLDELETEOCCLUSIONQUERIESNVPROC
 
	gpglDñëeOc˛usi⁄QuîõsNV
;

7540 
GLEE_EXTERN
 
PFNGLISOCCLUSIONQUERYNVPROC
 
	gpglIsOc˛usi⁄QuîyNV
;

7541 
GLEE_EXTERN
 
PFNGLBEGINOCCLUSIONQUERYNVPROC
 
	gpglBegöOc˛usi⁄QuîyNV
;

7542 
GLEE_EXTERN
 
PFNGLENDOCCLUSIONQUERYNVPROC
 
	gpglEndOc˛usi⁄QuîyNV
;

7543 
GLEE_EXTERN
 
PFNGLGETOCCLUSIONQUERYIVNVPROC
 
	gpglGëOc˛usi⁄QuîyivNV
;

7544 
GLEE_EXTERN
 
PFNGLGETOCCLUSIONQUERYUIVNVPROC
 
	gpglGëOc˛usi⁄QuîyuivNV
;

7545 
	#glGíOc˛usi⁄QuîõsNV
 
pglGíOc˛usi⁄QuîõsNV


	)

7546 
	#glDñëeOc˛usi⁄QuîõsNV
 
pglDñëeOc˛usi⁄QuîõsNV


	)

7547 
	#glIsOc˛usi⁄QuîyNV
 
pglIsOc˛usi⁄QuîyNV


	)

7548 
	#glBegöOc˛usi⁄QuîyNV
 
pglBegöOc˛usi⁄QuîyNV


	)

7549 
	#glEndOc˛usi⁄QuîyNV
 
pglEndOc˛usi⁄QuîyNV


	)

7550 
	#glGëOc˛usi⁄QuîyivNV
 
pglGëOc˛usi⁄QuîyivNV


	)

7551 
	#glGëOc˛usi⁄QuîyuivNV
 
pglGëOc˛usi⁄QuîyuivNV


	)

7556 #i‚de‡
GL_NV_poöt_•rôe


7557 
	#GL_NV_poöt_•rôe
 1

	)

7558 
	#__GLEE_GL_NV_poöt_•rôe
 1

	)

7560 
	#GL_POINT_SPRITE_NV
 0x8861

	)

7561 
	#GL_COORD_REPLACE_NV
 0x8862

	)

7562 
	#GL_POINT_SPRITE_R_MODE_NV
 0x8863

	)

7563 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERINVPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

7564 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERIVNVPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

7565 
GLEE_EXTERN
 
PFNGLPOINTPARAMETERINVPROC
 
	gpglPoötP¨amëîiNV
;

7566 
GLEE_EXTERN
 
PFNGLPOINTPARAMETERIVNVPROC
 
	gpglPoötP¨amëîivNV
;

7567 
	#glPoötP¨amëîiNV
 
pglPoötP¨amëîiNV


	)

7568 
	#glPoötP¨amëîivNV
 
pglPoötP¨amëîivNV


	)

7573 #i‚de‡
GL_NV_ãxtuª_shadî3


7574 
	#GL_NV_ãxtuª_shadî3
 1

	)

7575 
	#__GLEE_GL_NV_ãxtuª_shadî3
 1

	)

7577 
	#GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV
 0x8850

	)

7578 
	#GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV
 0x8851

	)

7579 
	#GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV
 0x8852

	)

7580 
	#GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV
 0x8853

	)

7581 
	#GL_OFFSET_HILO_TEXTURE_2D_NV
 0x8854

	)

7582 
	#GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV
 0x8855

	)

7583 
	#GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV
 0x8856

	)

7584 
	#GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV
 0x8857

	)

7585 
	#GL_DEPENDENT_HILO_TEXTURE_2D_NV
 0x8858

	)

7586 
	#GL_DEPENDENT_RGB_TEXTURE_3D_NV
 0x8859

	)

7587 
	#GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV
 0x885A

	)

7588 
	#GL_DOT_PRODUCT_PASS_THROUGH_NV
 0x885B

	)

7589 
	#GL_DOT_PRODUCT_TEXTURE_1D_NV
 0x885C

	)

7590 
	#GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV
 0x885D

	)

7591 
	#GL_HILO8_NV
 0x885E

	)

7592 
	#GL_SIGNED_HILO8_NV
 0x885F

	)

7593 
	#GL_FORCE_BLUE_TO_ONE_NV
 0x8860

	)

7598 #i‚de‡
GL_NV_vîãx_¥ogøm1_1


7599 
	#GL_NV_vîãx_¥ogøm1_1
 1

	)

7600 
	#__GLEE_GL_NV_vîãx_¥ogøm1_1
 1

	)

7606 #i‚de‡
GL_EXT_shadow_funcs


7607 
	#GL_EXT_shadow_funcs
 1

	)

7608 
	#__GLEE_GL_EXT_shadow_funcs
 1

	)

7614 #i‚de‡
GL_EXT_°ícû_two_side


7615 
	#GL_EXT_°ícû_two_side
 1

	)

7616 
	#__GLEE_GL_EXT_°ícû_two_side
 1

	)

7618 
	#GL_STENCIL_TEST_TWO_SIDE_EXT
 0x8910

	)

7619 
	#GL_ACTIVE_STENCIL_FACE_EXT
 0x8911

	)

7620 (
APIENTRYP
 
	tPFNGLACTIVESTENCILFACEEXTPROC
Ë(
	tGLíum
 
	tÁ˚
);

7621 
GLEE_EXTERN
 
PFNGLACTIVESTENCILFACEEXTPROC
 
	gpglA˘iveSãncûFa˚EXT
;

7622 
	#glA˘iveSãncûFa˚EXT
 
pglA˘iveSãncûFa˚EXT


	)

7627 #i‚de‡
GL_ATI_ãxt_‰agmít_shadî


7628 
	#GL_ATI_ãxt_‰agmít_shadî
 1

	)

7629 
	#__GLEE_GL_ATI_ãxt_‰agmít_shadî
 1

	)

7631 
	#GL_TEXT_FRAGMENT_SHADER_ATI
 0x8200

	)

7636 #i‚de‡
GL_APPLE_˛õ¡_°‹age


7637 
	#GL_APPLE_˛õ¡_°‹age
 1

	)

7638 
	#__GLEE_GL_APPLE_˛õ¡_°‹age
 1

	)

7640 
	#GL_UNPACK_CLIENT_STORAGE_APPLE
 0x85B2

	)

7645 #i‚de‡
GL_APPLE_ñemít_¨øy


7646 
	#GL_APPLE_ñemít_¨øy
 1

	)

7647 
	#__GLEE_GL_APPLE_ñemít_¨øy
 1

	)

7649 
	#GL_ELEMENT_ARRAY_APPLE
 0x8768

	)

7650 
	#GL_ELEMENT_ARRAY_TYPE_APPLE
 0x8769

	)

7651 
	#GL_ELEMENT_ARRAY_POINTER_APPLE
 0x876A

	)

7652 (
APIENTRYP
 
	tPFNGLELEMENTPOINTERAPPLEPROC
Ë(
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

7653 (
APIENTRYP
 
	tPFNGLDRAWELEMENTARRAYAPPLEPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
);

7654 (
APIENTRYP
 
	tPFNGLDRAWRANGEELEMENTARRAYAPPLEPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, 
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
);

7655 (
APIENTRYP
 
	tPFNGLMULTIDRAWELEMENTARRAYAPPLEPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLöt
 * 
	tfú°
, c⁄° 
	tGLsizei
 * 
	tcou¡
, GLsizeò
	t¥imcou¡
);

7656 (
APIENTRYP
 
	tPFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, c⁄° 
	tGLöt
 * 
	tfú°
, c⁄° 
	tGLsizei
 * 
	tcou¡
, GLsizeò
	t¥imcou¡
);

7657 
GLEE_EXTERN
 
PFNGLELEMENTPOINTERAPPLEPROC
 
	gpglEÀmítPoöãrAPPLE
;

7658 
GLEE_EXTERN
 
PFNGLDRAWELEMENTARRAYAPPLEPROC
 
	gpglDøwEÀmítAºayAPPLE
;

7659 
GLEE_EXTERN
 
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC
 
	gpglDøwR™geEÀmítAºayAPPLE
;

7660 
GLEE_EXTERN
 
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC
 
	gpglMu…iDøwEÀmítAºayAPPLE
;

7661 
GLEE_EXTERN
 
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC
 
	gpglMu…iDøwR™geEÀmítAºayAPPLE
;

7662 
	#glEÀmítPoöãrAPPLE
 
pglEÀmítPoöãrAPPLE


	)

7663 
	#glDøwEÀmítAºayAPPLE
 
pglDøwEÀmítAºayAPPLE


	)

7664 
	#glDøwR™geEÀmítAºayAPPLE
 
pglDøwR™geEÀmítAºayAPPLE


	)

7665 
	#glMu…iDøwEÀmítAºayAPPLE
 
pglMu…iDøwEÀmítAºayAPPLE


	)

7666 
	#glMu…iDøwR™geEÀmítAºayAPPLE
 
pglMu…iDøwR™geEÀmítAºayAPPLE


	)

7671 #i‚de‡
GL_APPLE_„n˚


7672 
	#GL_APPLE_„n˚
 1

	)

7673 
	#__GLEE_GL_APPLE_„n˚
 1

	)

7675 
	#GL_DRAW_PIXELS_APPLE
 0x8A0A

	)

7676 
	#GL_FENCE_APPLE
 0x8A0B

	)

7677 (
APIENTRYP
 
	tPFNGLGENFENCESAPPLEPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 * 
	t„n˚s
);

7678 (
APIENTRYP
 
	tPFNGLDELETEFENCESAPPLEPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	t„n˚s
);

7679 (
APIENTRYP
 
	tPFNGLSETFENCEAPPLEPROC
Ë(
	tGLuöt
 
	t„n˚
);

7680 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISFENCEAPPLEPROC
Ë(
	tGLuöt
 
	t„n˚
);

7681 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLTESTFENCEAPPLEPROC
Ë(
	tGLuöt
 
	t„n˚
);

7682 (
APIENTRYP
 
	tPFNGLFINISHFENCEAPPLEPROC
Ë(
	tGLuöt
 
	t„n˚
);

7683 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLTESTOBJECTAPPLEPROC
Ë(
	tGLíum
 
	tobje˘
, 
	tGLuöt
 
	t«me
);

7684 (
APIENTRYP
 
	tPFNGLFINISHOBJECTAPPLEPROC
Ë(
	tGLíum
 
	tobje˘
, 
	tGLöt
 
	t«me
);

7685 
GLEE_EXTERN
 
PFNGLGENFENCESAPPLEPROC
 
	gpglGíFí˚sAPPLE
;

7686 
GLEE_EXTERN
 
PFNGLDELETEFENCESAPPLEPROC
 
	gpglDñëeFí˚sAPPLE
;

7687 
GLEE_EXTERN
 
PFNGLSETFENCEAPPLEPROC
 
	gpglSëFí˚APPLE
;

7688 
GLEE_EXTERN
 
PFNGLISFENCEAPPLEPROC
 
	gpglIsFí˚APPLE
;

7689 
GLEE_EXTERN
 
PFNGLTESTFENCEAPPLEPROC
 
	gpglTe°Fí˚APPLE
;

7690 
GLEE_EXTERN
 
PFNGLFINISHFENCEAPPLEPROC
 
	gpglFöishFí˚APPLE
;

7691 
GLEE_EXTERN
 
PFNGLTESTOBJECTAPPLEPROC
 
	gpglTe°Obje˘APPLE
;

7692 
GLEE_EXTERN
 
PFNGLFINISHOBJECTAPPLEPROC
 
	gpglFöishObje˘APPLE
;

7693 
	#glGíFí˚sAPPLE
 
pglGíFí˚sAPPLE


	)

7694 
	#glDñëeFí˚sAPPLE
 
pglDñëeFí˚sAPPLE


	)

7695 
	#glSëFí˚APPLE
 
pglSëFí˚APPLE


	)

7696 
	#glIsFí˚APPLE
 
pglIsFí˚APPLE


	)

7697 
	#glTe°Fí˚APPLE
 
pglTe°Fí˚APPLE


	)

7698 
	#glFöishFí˚APPLE
 
pglFöishFí˚APPLE


	)

7699 
	#glTe°Obje˘APPLE
 
pglTe°Obje˘APPLE


	)

7700 
	#glFöishObje˘APPLE
 
pglFöishObje˘APPLE


	)

7705 #i‚de‡
GL_APPLE_vîãx_¨øy_obje˘


7706 
	#GL_APPLE_vîãx_¨øy_obje˘
 1

	)

7707 
	#__GLEE_GL_APPLE_vîãx_¨øy_obje˘
 1

	)

7709 
	#GL_VERTEX_ARRAY_BINDING_APPLE
 0x85B5

	)

7710 (
APIENTRYP
 
	tPFNGLBINDVERTEXARRAYAPPLEPROC
Ë(
	tGLuöt
 
	t¨øy
);

7711 (
APIENTRYP
 
	tPFNGLDELETEVERTEXARRAYSAPPLEPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	t¨øys
);

7712 (
APIENTRYP
 
	tPFNGLGENVERTEXARRAYSAPPLEPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	t¨øys
);

7713 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISVERTEXARRAYAPPLEPROC
Ë(
	tGLuöt
 
	t¨øy
);

7714 
GLEE_EXTERN
 
PFNGLBINDVERTEXARRAYAPPLEPROC
 
	gpglBödVîãxAºayAPPLE
;

7715 
GLEE_EXTERN
 
PFNGLDELETEVERTEXARRAYSAPPLEPROC
 
	gpglDñëeVîãxAºaysAPPLE
;

7716 
GLEE_EXTERN
 
PFNGLGENVERTEXARRAYSAPPLEPROC
 
	gpglGíVîãxAºaysAPPLE
;

7717 
GLEE_EXTERN
 
PFNGLISVERTEXARRAYAPPLEPROC
 
	gpglIsVîãxAºayAPPLE
;

7718 
	#glBödVîãxAºayAPPLE
 
pglBödVîãxAºayAPPLE


	)

7719 
	#glDñëeVîãxAºaysAPPLE
 
pglDñëeVîãxAºaysAPPLE


	)

7720 
	#glGíVîãxAºaysAPPLE
 
pglGíVîãxAºaysAPPLE


	)

7721 
	#glIsVîãxAºayAPPLE
 
pglIsVîãxAºayAPPLE


	)

7726 #i‚de‡
GL_APPLE_vîãx_¨øy_ønge


7727 
	#GL_APPLE_vîãx_¨øy_ønge
 1

	)

7728 
	#__GLEE_GL_APPLE_vîãx_¨øy_ønge
 1

	)

7730 
	#GL_VERTEX_ARRAY_RANGE_APPLE
 0x851D

	)

7731 
	#GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE
 0x851E

	)

7732 
	#GL_VERTEX_ARRAY_STORAGE_HINT_APPLE
 0x851F

	)

7733 
	#GL_VERTEX_ARRAY_RANGE_POINTER_APPLE
 0x8521

	)

7734 
	#GL_STORAGE_CACHED_APPLE
 0x85BE

	)

7735 
	#GL_STORAGE_SHARED_APPLE
 0x85BF

	)

7736 (
APIENTRYP
 
	tPFNGLVERTEXARRAYRANGEAPPLEPROC
Ë(
	tGLsizei
 
	tÀngth
, 
	tGLvoid
 * 
	tpoöãr
);

7737 (
APIENTRYP
 
	tPFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC
Ë(
	tGLsizei
 
	tÀngth
, 
	tGLvoid
 * 
	tpoöãr
);

7738 (
APIENTRYP
 
	tPFNGLVERTEXARRAYPARAMETERIAPPLEPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

7739 
GLEE_EXTERN
 
PFNGLVERTEXARRAYRANGEAPPLEPROC
 
	gpglVîãxAºayR™geAPPLE
;

7740 
GLEE_EXTERN
 
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC
 
	gpglFlushVîãxAºayR™geAPPLE
;

7741 
GLEE_EXTERN
 
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC
 
	gpglVîãxAºayP¨amëîiAPPLE
;

7742 
	#glVîãxAºayR™geAPPLE
 
pglVîãxAºayR™geAPPLE


	)

7743 
	#glFlushVîãxAºayR™geAPPLE
 
pglFlushVîãxAºayR™geAPPLE


	)

7744 
	#glVîãxAºayP¨amëîiAPPLE
 
pglVîãxAºayP¨amëîiAPPLE


	)

7749 #i‚de‡
GL_APPLE_ycb¸_422


7750 
	#GL_APPLE_ycb¸_422
 1

	)

7751 
	#__GLEE_GL_APPLE_ycb¸_422
 1

	)

7753 
	#GL_YCBCR_422_APPLE
 0x85B9

	)

7754 
	#GL_UNSIGNED_SHORT_8_8_APPLE
 0x85BA

	)

7755 
	#GL_UNSIGNED_SHORT_8_8_REV_APPLE
 0x85BB

	)

7760 #i‚de‡
GL_S3_s3tc


7761 
	#GL_S3_s3tc
 1

	)

7762 
	#__GLEE_GL_S3_s3tc
 1

	)

7764 
	#GL_RGB_S3TC
 0x83A0

	)

7765 
	#GL_RGB4_S3TC
 0x83A1

	)

7766 
	#GL_RGBA_S3TC
 0x83A2

	)

7767 
	#GL_RGBA4_S3TC
 0x83A3

	)

7772 #i‚de‡
GL_ATI_døw_buf„rs


7773 
	#GL_ATI_døw_buf„rs
 1

	)

7774 
	#__GLEE_GL_ATI_døw_buf„rs
 1

	)

7776 
	#GL_MAX_DRAW_BUFFERS_ATI
 0x8824

	)

7777 
	#GL_DRAW_BUFFER0_ATI
 0x8825

	)

7778 
	#GL_DRAW_BUFFER1_ATI
 0x8826

	)

7779 
	#GL_DRAW_BUFFER2_ATI
 0x8827

	)

7780 
	#GL_DRAW_BUFFER3_ATI
 0x8828

	)

7781 
	#GL_DRAW_BUFFER4_ATI
 0x8829

	)

7782 
	#GL_DRAW_BUFFER5_ATI
 0x882A

	)

7783 
	#GL_DRAW_BUFFER6_ATI
 0x882B

	)

7784 
	#GL_DRAW_BUFFER7_ATI
 0x882C

	)

7785 
	#GL_DRAW_BUFFER8_ATI
 0x882D

	)

7786 
	#GL_DRAW_BUFFER9_ATI
 0x882E

	)

7787 
	#GL_DRAW_BUFFER10_ATI
 0x882F

	)

7788 
	#GL_DRAW_BUFFER11_ATI
 0x8830

	)

7789 
	#GL_DRAW_BUFFER12_ATI
 0x8831

	)

7790 
	#GL_DRAW_BUFFER13_ATI
 0x8832

	)

7791 
	#GL_DRAW_BUFFER14_ATI
 0x8833

	)

7792 
	#GL_DRAW_BUFFER15_ATI
 0x8834

	)

7793 (
APIENTRYP
 
	tPFNGLDRAWBUFFERSATIPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLíum
 * 
	tbufs
);

7794 
GLEE_EXTERN
 
PFNGLDRAWBUFFERSATIPROC
 
	gpglDøwBuf„rsATI
;

7795 
	#glDøwBuf„rsATI
 
pglDøwBuf„rsATI


	)

7800 #i‚de‡
GL_ATI_pixñ_f‹m©_Êﬂt


7801 
	#GL_ATI_pixñ_f‹m©_Êﬂt
 1

	)

7802 
	#__GLEE_GL_ATI_pixñ_f‹m©_Êﬂt
 1

	)

7804 
	#GL_TYPE_RGBA_FLOAT_ATI
 0x8820

	)

7805 
	#GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI
 0x8835

	)

7810 #i‚de‡
GL_ATI_ãxtuª_ív_comböe3


7811 
	#GL_ATI_ãxtuª_ív_comböe3
 1

	)

7812 
	#__GLEE_GL_ATI_ãxtuª_ív_comböe3
 1

	)

7814 
	#GL_MODULATE_ADD_ATI
 0x8744

	)

7815 
	#GL_MODULATE_SIGNED_ADD_ATI
 0x8745

	)

7816 
	#GL_MODULATE_SUBTRACT_ATI
 0x8746

	)

7821 #i‚de‡
GL_ATI_ãxtuª_Êﬂt


7822 
	#GL_ATI_ãxtuª_Êﬂt
 1

	)

7823 
	#__GLEE_GL_ATI_ãxtuª_Êﬂt
 1

	)

7825 
	#GL_RGBA_FLOAT32_ATI
 0x8814

	)

7826 
	#GL_RGB_FLOAT32_ATI
 0x8815

	)

7827 
	#GL_ALPHA_FLOAT32_ATI
 0x8816

	)

7828 
	#GL_INTENSITY_FLOAT32_ATI
 0x8817

	)

7829 
	#GL_LUMINANCE_FLOAT32_ATI
 0x8818

	)

7830 
	#GL_LUMINANCE_ALPHA_FLOAT32_ATI
 0x8819

	)

7831 
	#GL_RGBA_FLOAT16_ATI
 0x881A

	)

7832 
	#GL_RGB_FLOAT16_ATI
 0x881B

	)

7833 
	#GL_ALPHA_FLOAT16_ATI
 0x881C

	)

7834 
	#GL_INTENSITY_FLOAT16_ATI
 0x881D

	)

7835 
	#GL_LUMINANCE_FLOAT16_ATI
 0x881E

	)

7836 
	#GL_LUMINANCE_ALPHA_FLOAT16_ATI
 0x881F

	)

7841 #i‚de‡
GL_NV_Êﬂt_buf„r


7842 
	#GL_NV_Êﬂt_buf„r
 1

	)

7843 
	#__GLEE_GL_NV_Êﬂt_buf„r
 1

	)

7845 
	#GL_FLOAT_R_NV
 0x8880

	)

7846 
	#GL_FLOAT_RG_NV
 0x8881

	)

7847 
	#GL_FLOAT_RGB_NV
 0x8882

	)

7848 
	#GL_FLOAT_RGBA_NV
 0x8883

	)

7849 
	#GL_FLOAT_R16_NV
 0x8884

	)

7850 
	#GL_FLOAT_R32_NV
 0x8885

	)

7851 
	#GL_FLOAT_RG16_NV
 0x8886

	)

7852 
	#GL_FLOAT_RG32_NV
 0x8887

	)

7853 
	#GL_FLOAT_RGB16_NV
 0x8888

	)

7854 
	#GL_FLOAT_RGB32_NV
 0x8889

	)

7855 
	#GL_FLOAT_RGBA16_NV
 0x888A

	)

7856 
	#GL_FLOAT_RGBA32_NV
 0x888B

	)

7857 
	#GL_TEXTURE_FLOAT_COMPONENTS_NV
 0x888C

	)

7858 
	#GL_FLOAT_CLEAR_COLOR_VALUE_NV
 0x888D

	)

7859 
	#GL_FLOAT_RGBA_MODE_NV
 0x888E

	)

7864 #i‚de‡
GL_NV_‰agmít_¥ogøm


7865 
	#GL_NV_‰agmít_¥ogøm
 1

	)

7866 
	#__GLEE_GL_NV_‰agmít_¥ogøm
 1

	)

7868 
	#GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV
 0x8868

	)

7869 
	#GL_FRAGMENT_PROGRAM_NV
 0x8870

	)

7870 
	#GL_MAX_TEXTURE_COORDS_NV
 0x8871

	)

7871 
	#GL_MAX_TEXTURE_IMAGE_UNITS_NV
 0x8872

	)

7872 
	#GL_FRAGMENT_PROGRAM_BINDING_NV
 0x8873

	)

7873 
	#GL_PROGRAM_ERROR_STRING_NV
 0x8874

	)

7874 (
APIENTRYP
 
	tPFNGLPROGRAMNAMEDPARAMETER4FNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 * 
	t«me
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

7875 (
APIENTRYP
 
	tPFNGLPROGRAMNAMEDPARAMETER4DNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 * 
	t«me
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

7876 (
APIENTRYP
 
	tPFNGLPROGRAMNAMEDPARAMETER4FVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 * 
	t«me
, c⁄° 
	tGLÊﬂt
 * 
	tv
);

7877 (
APIENTRYP
 
	tPFNGLPROGRAMNAMEDPARAMETER4DVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 * 
	t«me
, c⁄° 
	tGLdoubÀ
 * 
	tv
);

7878 (
APIENTRYP
 
	tPFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 * 
	t«me
, 
	tGLÊﬂt
 * 
	t∑øms
);

7879 (
APIENTRYP
 
	tPFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 * 
	t«me
, 
	tGLdoubÀ
 * 
	t∑øms
);

7880 
GLEE_EXTERN
 
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC
 
	gpglProgømNamedP¨amëî4fNV
;

7881 
GLEE_EXTERN
 
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC
 
	gpglProgømNamedP¨amëî4dNV
;

7882 
GLEE_EXTERN
 
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC
 
	gpglProgømNamedP¨amëî4fvNV
;

7883 
GLEE_EXTERN
 
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC
 
	gpglProgømNamedP¨amëî4dvNV
;

7884 
GLEE_EXTERN
 
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC
 
	gpglGëProgømNamedP¨amëîfvNV
;

7885 
GLEE_EXTERN
 
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC
 
	gpglGëProgømNamedP¨amëîdvNV
;

7886 
	#glProgømNamedP¨amëî4fNV
 
pglProgømNamedP¨amëî4fNV


	)

7887 
	#glProgømNamedP¨amëî4dNV
 
pglProgømNamedP¨amëî4dNV


	)

7888 
	#glProgømNamedP¨amëî4fvNV
 
pglProgømNamedP¨amëî4fvNV


	)

7889 
	#glProgømNamedP¨amëî4dvNV
 
pglProgømNamedP¨amëî4dvNV


	)

7890 
	#glGëProgømNamedP¨amëîfvNV
 
pglGëProgømNamedP¨amëîfvNV


	)

7891 
	#glGëProgømNamedP¨amëîdvNV
 
pglGëProgømNamedP¨amëîdvNV


	)

7896 #i‚de‡
GL_NV_hÆf_Êﬂt


7897 
	#GL_NV_hÆf_Êﬂt
 1

	)

7898 
	#__GLEE_GL_NV_hÆf_Êﬂt
 1

	)

7900 
	#GL_HALF_FLOAT_NV
 0x140B

	)

7901 (
APIENTRYP
 
	tPFNGLVERTEX2HNVPROC
Ë(
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
);

7902 (
APIENTRYP
 
	tPFNGLVERTEX2HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 * 
	tv
);

7903 (
APIENTRYP
 
	tPFNGLVERTEX3HNVPROC
Ë(
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
, GLhÆfNV 
	tz
);

7904 (
APIENTRYP
 
	tPFNGLVERTEX3HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 * 
	tv
);

7905 (
APIENTRYP
 
	tPFNGLVERTEX4HNVPROC
Ë(
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
, GLhÆfNV 
	tz
, GLhÆfNV 
	tw
);

7906 (
APIENTRYP
 
	tPFNGLVERTEX4HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 * 
	tv
);

7907 (
APIENTRYP
 
	tPFNGLNORMAL3HNVPROC
Ë(
	tGLhÆfNV
 
	tnx
, GLhÆfNV 
	tny
, GLhÆfNV 
	tnz
);

7908 (
APIENTRYP
 
	tPFNGLNORMAL3HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 * 
	tv
);

7909 (
APIENTRYP
 
	tPFNGLCOLOR3HNVPROC
Ë(
	tGLhÆfNV
 
	tªd
, GLhÆfNV 
	tgªí
, GLhÆfNV 
	tblue
);

7910 (
APIENTRYP
 
	tPFNGLCOLOR3HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 * 
	tv
);

7911 (
APIENTRYP
 
	tPFNGLCOLOR4HNVPROC
Ë(
	tGLhÆfNV
 
	tªd
, GLhÆfNV 
	tgªí
, GLhÆfNV 
	tblue
, GLhÆfNV 
	tÆpha
);

7912 (
APIENTRYP
 
	tPFNGLCOLOR4HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 * 
	tv
);

7913 (
APIENTRYP
 
	tPFNGLTEXCOORD1HNVPROC
Ë(
	tGLhÆfNV
 
	ts
);

7914 (
APIENTRYP
 
	tPFNGLTEXCOORD1HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 * 
	tv
);

7915 (
APIENTRYP
 
	tPFNGLTEXCOORD2HNVPROC
Ë(
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
);

7916 (
APIENTRYP
 
	tPFNGLTEXCOORD2HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 * 
	tv
);

7917 (
APIENTRYP
 
	tPFNGLTEXCOORD3HNVPROC
Ë(
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
, GLhÆfNV 
	tr
);

7918 (
APIENTRYP
 
	tPFNGLTEXCOORD3HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 * 
	tv
);

7919 (
APIENTRYP
 
	tPFNGLTEXCOORD4HNVPROC
Ë(
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
, GLhÆfNV 
	tr
, GLhÆfNV 
	tq
);

7920 (
APIENTRYP
 
	tPFNGLTEXCOORD4HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 * 
	tv
);

7921 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1HNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLhÆfNV
 
	ts
);

7922 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1HVNVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLhÆfNV
 * 
	tv
);

7923 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2HNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
);

7924 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2HVNVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLhÆfNV
 * 
	tv
);

7925 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3HNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
, GLhÆfNV 
	tr
);

7926 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3HVNVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLhÆfNV
 * 
	tv
);

7927 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4HNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
, GLhÆfNV 
	tr
, GLhÆfNV 
	tq
);

7928 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4HVNVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLhÆfNV
 * 
	tv
);

7929 (
APIENTRYP
 
	tPFNGLFOGCOORDHNVPROC
Ë(
	tGLhÆfNV
 
	tfog
);

7930 (
APIENTRYP
 
	tPFNGLFOGCOORDHVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 * 
	tfog
);

7931 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3HNVPROC
Ë(
	tGLhÆfNV
 
	tªd
, GLhÆfNV 
	tgªí
, GLhÆfNV 
	tblue
);

7932 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 * 
	tv
);

7933 (
APIENTRYP
 
	tPFNGLVERTEXWEIGHTHNVPROC
Ë(
	tGLhÆfNV
 
	tweight
);

7934 (
APIENTRYP
 
	tPFNGLVERTEXWEIGHTHVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 * 
	tweight
);

7935 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1HNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLhÆfNV
 
	tx
);

7936 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1HVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLhÆfNV
 * 
	tv
);

7937 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2HNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
);

7938 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2HVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLhÆfNV
 * 
	tv
);

7939 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3HNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
, GLhÆfNV 
	tz
);

7940 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3HVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLhÆfNV
 * 
	tv
);

7941 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4HNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
, GLhÆfNV 
	tz
, GLhÆfNV 
	tw
);

7942 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4HVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLhÆfNV
 * 
	tv
);

7943 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS1HVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLhÆfNV
 * 
	tv
);

7944 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS2HVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLhÆfNV
 * 
	tv
);

7945 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS3HVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLhÆfNV
 * 
	tv
);

7946 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS4HVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLhÆfNV
 * 
	tv
);

7947 
GLEE_EXTERN
 
PFNGLVERTEX2HNVPROC
 
	gpglVîãx2hNV
;

7948 
GLEE_EXTERN
 
PFNGLVERTEX2HVNVPROC
 
	gpglVîãx2hvNV
;

7949 
GLEE_EXTERN
 
PFNGLVERTEX3HNVPROC
 
	gpglVîãx3hNV
;

7950 
GLEE_EXTERN
 
PFNGLVERTEX3HVNVPROC
 
	gpglVîãx3hvNV
;

7951 
GLEE_EXTERN
 
PFNGLVERTEX4HNVPROC
 
	gpglVîãx4hNV
;

7952 
GLEE_EXTERN
 
PFNGLVERTEX4HVNVPROC
 
	gpglVîãx4hvNV
;

7953 
GLEE_EXTERN
 
PFNGLNORMAL3HNVPROC
 
	gpglN‹mÆ3hNV
;

7954 
GLEE_EXTERN
 
PFNGLNORMAL3HVNVPROC
 
	gpglN‹mÆ3hvNV
;

7955 
GLEE_EXTERN
 
PFNGLCOLOR3HNVPROC
 
	gpglCﬁ‹3hNV
;

7956 
GLEE_EXTERN
 
PFNGLCOLOR3HVNVPROC
 
	gpglCﬁ‹3hvNV
;

7957 
GLEE_EXTERN
 
PFNGLCOLOR4HNVPROC
 
	gpglCﬁ‹4hNV
;

7958 
GLEE_EXTERN
 
PFNGLCOLOR4HVNVPROC
 
	gpglCﬁ‹4hvNV
;

7959 
GLEE_EXTERN
 
PFNGLTEXCOORD1HNVPROC
 
	gpglTexCo‹d1hNV
;

7960 
GLEE_EXTERN
 
PFNGLTEXCOORD1HVNVPROC
 
	gpglTexCo‹d1hvNV
;

7961 
GLEE_EXTERN
 
PFNGLTEXCOORD2HNVPROC
 
	gpglTexCo‹d2hNV
;

7962 
GLEE_EXTERN
 
PFNGLTEXCOORD2HVNVPROC
 
	gpglTexCo‹d2hvNV
;

7963 
GLEE_EXTERN
 
PFNGLTEXCOORD3HNVPROC
 
	gpglTexCo‹d3hNV
;

7964 
GLEE_EXTERN
 
PFNGLTEXCOORD3HVNVPROC
 
	gpglTexCo‹d3hvNV
;

7965 
GLEE_EXTERN
 
PFNGLTEXCOORD4HNVPROC
 
	gpglTexCo‹d4hNV
;

7966 
GLEE_EXTERN
 
PFNGLTEXCOORD4HVNVPROC
 
	gpglTexCo‹d4hvNV
;

7967 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1HNVPROC
 
	gpglMu…iTexCo‹d1hNV
;

7968 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD1HVNVPROC
 
	gpglMu…iTexCo‹d1hvNV
;

7969 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2HNVPROC
 
	gpglMu…iTexCo‹d2hNV
;

7970 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD2HVNVPROC
 
	gpglMu…iTexCo‹d2hvNV
;

7971 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3HNVPROC
 
	gpglMu…iTexCo‹d3hNV
;

7972 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD3HVNVPROC
 
	gpglMu…iTexCo‹d3hvNV
;

7973 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4HNVPROC
 
	gpglMu…iTexCo‹d4hNV
;

7974 
GLEE_EXTERN
 
PFNGLMULTITEXCOORD4HVNVPROC
 
	gpglMu…iTexCo‹d4hvNV
;

7975 
GLEE_EXTERN
 
PFNGLFOGCOORDHNVPROC
 
	gpglFogCo‹dhNV
;

7976 
GLEE_EXTERN
 
PFNGLFOGCOORDHVNVPROC
 
	gpglFogCo‹dhvNV
;

7977 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3HNVPROC
 
	gpglSec⁄d¨yCﬁ‹3hNV
;

7978 
GLEE_EXTERN
 
PFNGLSECONDARYCOLOR3HVNVPROC
 
	gpglSec⁄d¨yCﬁ‹3hvNV
;

7979 
GLEE_EXTERN
 
PFNGLVERTEXWEIGHTHNVPROC
 
	gpglVîãxWeighthNV
;

7980 
GLEE_EXTERN
 
PFNGLVERTEXWEIGHTHVNVPROC
 
	gpglVîãxWeighthvNV
;

7981 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1HNVPROC
 
	gpglVîãxAârib1hNV
;

7982 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB1HVNVPROC
 
	gpglVîãxAârib1hvNV
;

7983 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2HNVPROC
 
	gpglVîãxAârib2hNV
;

7984 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB2HVNVPROC
 
	gpglVîãxAârib2hvNV
;

7985 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3HNVPROC
 
	gpglVîãxAârib3hNV
;

7986 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB3HVNVPROC
 
	gpglVîãxAârib3hvNV
;

7987 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4HNVPROC
 
	gpglVîãxAârib4hNV
;

7988 
GLEE_EXTERN
 
PFNGLVERTEXATTRIB4HVNVPROC
 
	gpglVîãxAârib4hvNV
;

7989 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS1HVNVPROC
 
	gpglVîãxAâribs1hvNV
;

7990 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS2HVNVPROC
 
	gpglVîãxAâribs2hvNV
;

7991 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS3HVNVPROC
 
	gpglVîãxAâribs3hvNV
;

7992 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBS4HVNVPROC
 
	gpglVîãxAâribs4hvNV
;

7993 
	#glVîãx2hNV
 
pglVîãx2hNV


	)

7994 
	#glVîãx2hvNV
 
pglVîãx2hvNV


	)

7995 
	#glVîãx3hNV
 
pglVîãx3hNV


	)

7996 
	#glVîãx3hvNV
 
pglVîãx3hvNV


	)

7997 
	#glVîãx4hNV
 
pglVîãx4hNV


	)

7998 
	#glVîãx4hvNV
 
pglVîãx4hvNV


	)

7999 
	#glN‹mÆ3hNV
 
pglN‹mÆ3hNV


	)

8000 
	#glN‹mÆ3hvNV
 
pglN‹mÆ3hvNV


	)

8001 
	#glCﬁ‹3hNV
 
pglCﬁ‹3hNV


	)

8002 
	#glCﬁ‹3hvNV
 
pglCﬁ‹3hvNV


	)

8003 
	#glCﬁ‹4hNV
 
pglCﬁ‹4hNV


	)

8004 
	#glCﬁ‹4hvNV
 
pglCﬁ‹4hvNV


	)

8005 
	#glTexCo‹d1hNV
 
pglTexCo‹d1hNV


	)

8006 
	#glTexCo‹d1hvNV
 
pglTexCo‹d1hvNV


	)

8007 
	#glTexCo‹d2hNV
 
pglTexCo‹d2hNV


	)

8008 
	#glTexCo‹d2hvNV
 
pglTexCo‹d2hvNV


	)

8009 
	#glTexCo‹d3hNV
 
pglTexCo‹d3hNV


	)

8010 
	#glTexCo‹d3hvNV
 
pglTexCo‹d3hvNV


	)

8011 
	#glTexCo‹d4hNV
 
pglTexCo‹d4hNV


	)

8012 
	#glTexCo‹d4hvNV
 
pglTexCo‹d4hvNV


	)

8013 
	#glMu…iTexCo‹d1hNV
 
pglMu…iTexCo‹d1hNV


	)

8014 
	#glMu…iTexCo‹d1hvNV
 
pglMu…iTexCo‹d1hvNV


	)

8015 
	#glMu…iTexCo‹d2hNV
 
pglMu…iTexCo‹d2hNV


	)

8016 
	#glMu…iTexCo‹d2hvNV
 
pglMu…iTexCo‹d2hvNV


	)

8017 
	#glMu…iTexCo‹d3hNV
 
pglMu…iTexCo‹d3hNV


	)

8018 
	#glMu…iTexCo‹d3hvNV
 
pglMu…iTexCo‹d3hvNV


	)

8019 
	#glMu…iTexCo‹d4hNV
 
pglMu…iTexCo‹d4hNV


	)

8020 
	#glMu…iTexCo‹d4hvNV
 
pglMu…iTexCo‹d4hvNV


	)

8021 
	#glFogCo‹dhNV
 
pglFogCo‹dhNV


	)

8022 
	#glFogCo‹dhvNV
 
pglFogCo‹dhvNV


	)

8023 
	#glSec⁄d¨yCﬁ‹3hNV
 
pglSec⁄d¨yCﬁ‹3hNV


	)

8024 
	#glSec⁄d¨yCﬁ‹3hvNV
 
pglSec⁄d¨yCﬁ‹3hvNV


	)

8025 
	#glVîãxWeighthNV
 
pglVîãxWeighthNV


	)

8026 
	#glVîãxWeighthvNV
 
pglVîãxWeighthvNV


	)

8027 
	#glVîãxAârib1hNV
 
pglVîãxAârib1hNV


	)

8028 
	#glVîãxAârib1hvNV
 
pglVîãxAârib1hvNV


	)

8029 
	#glVîãxAârib2hNV
 
pglVîãxAârib2hNV


	)

8030 
	#glVîãxAârib2hvNV
 
pglVîãxAârib2hvNV


	)

8031 
	#glVîãxAârib3hNV
 
pglVîãxAârib3hNV


	)

8032 
	#glVîãxAârib3hvNV
 
pglVîãxAârib3hvNV


	)

8033 
	#glVîãxAârib4hNV
 
pglVîãxAârib4hNV


	)

8034 
	#glVîãxAârib4hvNV
 
pglVîãxAârib4hvNV


	)

8035 
	#glVîãxAâribs1hvNV
 
pglVîãxAâribs1hvNV


	)

8036 
	#glVîãxAâribs2hvNV
 
pglVîãxAâribs2hvNV


	)

8037 
	#glVîãxAâribs3hvNV
 
pglVîãxAâribs3hvNV


	)

8038 
	#glVîãxAâribs4hvNV
 
pglVîãxAâribs4hvNV


	)

8043 #i‚de‡
GL_NV_pixñ_d©a_ønge


8044 
	#GL_NV_pixñ_d©a_ønge
 1

	)

8045 
	#__GLEE_GL_NV_pixñ_d©a_ønge
 1

	)

8047 
	#GL_WRITE_PIXEL_DATA_RANGE_NV
 0x8878

	)

8048 
	#GL_READ_PIXEL_DATA_RANGE_NV
 0x8879

	)

8049 
	#GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV
 0x887A

	)

8050 
	#GL_READ_PIXEL_DATA_RANGE_LENGTH_NV
 0x887B

	)

8051 
	#GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV
 0x887C

	)

8052 
	#GL_READ_PIXEL_DATA_RANGE_POINTER_NV
 0x887D

	)

8053 (
APIENTRYP
 
	tPFNGLPIXELDATARANGENVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tÀngth
, 
	tGLvoid
 * 
	tpoöãr
);

8054 (
APIENTRYP
 
	tPFNGLFLUSHPIXELDATARANGENVPROC
Ë(
	tGLíum
 
	tèrgë
);

8055 
GLEE_EXTERN
 
PFNGLPIXELDATARANGENVPROC
 
	gpglPixñD©aR™geNV
;

8056 
GLEE_EXTERN
 
PFNGLFLUSHPIXELDATARANGENVPROC
 
	gpglFlushPixñD©aR™geNV
;

8057 
	#glPixñD©aR™geNV
 
pglPixñD©aR™geNV


	)

8058 
	#glFlushPixñD©aR™geNV
 
pglFlushPixñD©aR™geNV


	)

8063 #i‚de‡
GL_NV_¥imôive_ª°¨t


8064 
	#GL_NV_¥imôive_ª°¨t
 1

	)

8065 
	#__GLEE_GL_NV_¥imôive_ª°¨t
 1

	)

8067 
	#GL_PRIMITIVE_RESTART_NV
 0x8558

	)

8068 
	#GL_PRIMITIVE_RESTART_INDEX_NV
 0x8559

	)

8069 (
APIENTRYP
 
	tPFNGLPRIMITIVERESTARTNVPROC
) ();

8070 (
APIENTRYP
 
	tPFNGLPRIMITIVERESTARTINDEXNVPROC
Ë(
	tGLuöt
 
	tödex
);

8071 
GLEE_EXTERN
 
PFNGLPRIMITIVERESTARTNVPROC
 
	gpglPrimôiveRe°¨tNV
;

8072 
GLEE_EXTERN
 
PFNGLPRIMITIVERESTARTINDEXNVPROC
 
	gpglPrimôiveRe°¨tIndexNV
;

8073 
	#glPrimôiveRe°¨tNV
 
pglPrimôiveRe°¨tNV


	)

8074 
	#glPrimôiveRe°¨tIndexNV
 
pglPrimôiveRe°¨tIndexNV


	)

8079 #i‚de‡
GL_NV_ãxtuª_ex∑nd_n‹mÆ


8080 
	#GL_NV_ãxtuª_ex∑nd_n‹mÆ
 1

	)

8081 
	#__GLEE_GL_NV_ãxtuª_ex∑nd_n‹mÆ
 1

	)

8083 
	#GL_TEXTURE_UNSIGNED_REMAP_MODE_NV
 0x888F

	)

8088 #i‚de‡
GL_NV_vîãx_¥ogøm2


8089 
	#GL_NV_vîãx_¥ogøm2
 1

	)

8090 
	#__GLEE_GL_NV_vîãx_¥ogøm2
 1

	)

8096 #i‚de‡
GL_ATI_m≠_obje˘_buf„r


8097 
	#GL_ATI_m≠_obje˘_buf„r
 1

	)

8098 
	#__GLEE_GL_ATI_m≠_obje˘_buf„r
 1

	)

8100 
	gGLvoid
* (
	tAPIENTRYP
 
	tPFNGLMAPOBJECTBUFFERATIPROC
Ë(
	tGLuöt
 
	tbuf„r
);

8101 (
APIENTRYP
 
	tPFNGLUNMAPOBJECTBUFFERATIPROC
Ë(
	tGLuöt
 
	tbuf„r
);

8102 
GLEE_EXTERN
 
PFNGLMAPOBJECTBUFFERATIPROC
 
	gpglM≠Obje˘Buf„rATI
;

8103 
GLEE_EXTERN
 
PFNGLUNMAPOBJECTBUFFERATIPROC
 
	gpglUnm≠Obje˘Buf„rATI
;

8104 
	#glM≠Obje˘Buf„rATI
 
pglM≠Obje˘Buf„rATI


	)

8105 
	#glUnm≠Obje˘Buf„rATI
 
pglUnm≠Obje˘Buf„rATI


	)

8110 #i‚de‡
GL_ATI_£∑øã_°ícû


8111 
	#GL_ATI_£∑øã_°ícû
 1

	)

8112 
	#__GLEE_GL_ATI_£∑øã_°ícû
 1

	)

8114 
	#GL_STENCIL_BACK_FUNC_ATI
 0x8800

	)

8115 
	#GL_STENCIL_BACK_FAIL_ATI
 0x8801

	)

8116 
	#GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI
 0x8802

	)

8117 
	#GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI
 0x8803

	)

8118 (
APIENTRYP
 
	tPFNGLSTENCILOPSEPARATEATIPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tsÁû
, GLíum 
	tdpÁû
, GLíum 
	tdµass
);

8119 (
APIENTRYP
 
	tPFNGLSTENCILFUNCSEPARATEATIPROC
Ë(
	tGLíum
 
	t‰⁄tfunc
, GLíum 
	tbackfunc
, 
	tGLöt
 
	tªf
, 
	tGLuöt
 
	tmask
);

8120 
GLEE_EXTERN
 
PFNGLSTENCILOPSEPARATEATIPROC
 
	gpglSãncûOpSï¨©eATI
;

8121 
GLEE_EXTERN
 
PFNGLSTENCILFUNCSEPARATEATIPROC
 
	gpglSãncûFuncSï¨©eATI
;

8122 
	#glSãncûOpSï¨©eATI
 
pglSãncûOpSï¨©eATI


	)

8123 
	#glSãncûFuncSï¨©eATI
 
pglSãncûFuncSï¨©eATI


	)

8128 #i‚de‡
GL_ATI_vîãx_©åib_¨øy_obje˘


8129 
	#GL_ATI_vîãx_©åib_¨øy_obje˘
 1

	)

8130 
	#__GLEE_GL_ATI_vîãx_©åib_¨øy_obje˘
 1

	)

8132 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBARRAYOBJECTATIPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLboﬁón
 
	tn‹mÆized
, 
	tGLsizei
 
	t°ride
, GLuöà
	tbuf„r
, GLuöà
	toff£t
);

8133 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

8134 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

8135 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC
 
	gpglVîãxAâribAºayObje˘ATI
;

8136 
GLEE_EXTERN
 
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC
 
	gpglGëVîãxAâribAºayObje˘fvATI
;

8137 
GLEE_EXTERN
 
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC
 
	gpglGëVîãxAâribAºayObje˘ivATI
;

8138 
	#glVîãxAâribAºayObje˘ATI
 
pglVîãxAâribAºayObje˘ATI


	)

8139 
	#glGëVîãxAâribAºayObje˘fvATI
 
pglGëVîãxAâribAºayObje˘fvATI


	)

8140 
	#glGëVîãxAâribAºayObje˘ivATI
 
pglGëVîãxAâribAºayObje˘ivATI


	)

8145 #i‚de‡
GL_OES_ªad_f‹m©


8146 
	#GL_OES_ªad_f‹m©
 1

	)

8147 
	#__GLEE_GL_OES_ªad_f‹m©
 1

	)

8149 
	#GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
 0x8B9A

	)

8150 
	#GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
 0x8B9B

	)

8155 #i‚de‡
GL_EXT_dïth_bounds_ã°


8156 
	#GL_EXT_dïth_bounds_ã°
 1

	)

8157 
	#__GLEE_GL_EXT_dïth_bounds_ã°
 1

	)

8159 
	#GL_DEPTH_BOUNDS_TEST_EXT
 0x8890

	)

8160 
	#GL_DEPTH_BOUNDS_EXT
 0x8891

	)

8161 (
APIENTRYP
 
	tPFNGLDEPTHBOUNDSEXTPROC
Ë(
	tGL˛ampd
 
	tzmö
, GL˛ampd 
	tzmax
);

8162 
GLEE_EXTERN
 
PFNGLDEPTHBOUNDSEXTPROC
 
	gpglDïthBoundsEXT
;

8163 
	#glDïthBoundsEXT
 
pglDïthBoundsEXT


	)

8168 #i‚de‡
GL_EXT_ãxtuª_múr‹_˛amp


8169 
	#GL_EXT_ãxtuª_múr‹_˛amp
 1

	)

8170 
	#__GLEE_GL_EXT_ãxtuª_múr‹_˛amp
 1

	)

8172 
	#GL_MIRROR_CLAMP_EXT
 0x8742

	)

8173 
	#GL_MIRROR_CLAMP_TO_EDGE_EXT
 0x8743

	)

8174 
	#GL_MIRROR_CLAMP_TO_BORDER_EXT
 0x8912

	)

8179 #i‚de‡
GL_EXT_bÀnd_equ©i⁄_£∑øã


8180 
	#GL_EXT_bÀnd_equ©i⁄_£∑øã
 1

	)

8181 
	#__GLEE_GL_EXT_bÀnd_equ©i⁄_£∑øã
 1

	)

8183 
	#GL_BLEND_EQUATION_RGB_EXT
 
GL_BLEND_EQUATION


	)

8184 
	#GL_BLEND_EQUATION_ALPHA_EXT
 0x883D

	)

8185 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONSEPARATEEXTPROC
Ë(
	tGLíum
 
	tmodeRGB
, GLíum 
	tmodeAÕha
);

8186 
GLEE_EXTERN
 
PFNGLBLENDEQUATIONSEPARATEEXTPROC
 
	gpglBÀndEqu©i⁄Sï¨©eEXT
;

8187 
	#glBÀndEqu©i⁄Sï¨©eEXT
 
pglBÀndEqu©i⁄Sï¨©eEXT


	)

8192 #i‚de‡
GL_MESA_∑ck_övît


8193 
	#GL_MESA_∑ck_övît
 1

	)

8194 
	#__GLEE_GL_MESA_∑ck_övît
 1

	)

8196 
	#GL_PACK_INVERT_MESA
 0x8758

	)

8201 #i‚de‡
GL_MESA_ycb¸_ãxtuª


8202 
	#GL_MESA_ycb¸_ãxtuª
 1

	)

8203 
	#__GLEE_GL_MESA_ycb¸_ãxtuª
 1

	)

8205 
	#GL_UNSIGNED_SHORT_8_8_MESA
 0x85BA

	)

8206 
	#GL_UNSIGNED_SHORT_8_8_REV_MESA
 0x85BB

	)

8207 
	#GL_YCBCR_MESA
 0x8757

	)

8212 #i‚de‡
GL_EXT_pixñ_buf„r_obje˘


8213 
	#GL_EXT_pixñ_buf„r_obje˘
 1

	)

8214 
	#__GLEE_GL_EXT_pixñ_buf„r_obje˘
 1

	)

8216 
	#GL_PIXEL_PACK_BUFFER_EXT
 0x88EB

	)

8217 
	#GL_PIXEL_UNPACK_BUFFER_EXT
 0x88EC

	)

8218 
	#GL_PIXEL_PACK_BUFFER_BINDING_EXT
 0x88ED

	)

8219 
	#GL_PIXEL_UNPACK_BUFFER_BINDING_EXT
 0x88EF

	)

8224 #i‚de‡
GL_NV_‰agmít_¥ogøm_›ti⁄


8225 
	#GL_NV_‰agmít_¥ogøm_›ti⁄
 1

	)

8226 
	#__GLEE_GL_NV_‰agmít_¥ogøm_›ti⁄
 1

	)

8232 #i‚de‡
GL_NV_‰agmít_¥ogøm2


8233 
	#GL_NV_‰agmít_¥ogøm2
 1

	)

8234 
	#__GLEE_GL_NV_‰agmít_¥ogøm2
 1

	)

8236 
	#GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV
 0x88F4

	)

8237 
	#GL_MAX_PROGRAM_CALL_DEPTH_NV
 0x88F5

	)

8238 
	#GL_MAX_PROGRAM_IF_DEPTH_NV
 0x88F6

	)

8239 
	#GL_MAX_PROGRAM_LOOP_DEPTH_NV
 0x88F7

	)

8240 
	#GL_MAX_PROGRAM_LOOP_COUNT_NV
 0x88F8

	)

8245 #i‚de‡
GL_NV_vîãx_¥ogøm2_›ti⁄


8246 
	#GL_NV_vîãx_¥ogøm2_›ti⁄
 1

	)

8247 
	#__GLEE_GL_NV_vîãx_¥ogøm2_›ti⁄
 1

	)

8253 #i‚de‡
GL_NV_vîãx_¥ogøm3


8254 
	#GL_NV_vîãx_¥ogøm3
 1

	)

8255 
	#__GLEE_GL_NV_vîãx_¥ogøm3
 1

	)

8261 #i‚de‡
GL_EXT_‰amebuf„r_obje˘


8262 
	#GL_EXT_‰amebuf„r_obje˘
 1

	)

8263 
	#__GLEE_GL_EXT_‰amebuf„r_obje˘
 1

	)

8265 
	#GL_INVALID_FRAMEBUFFER_OPERATION_EXT
 0x0506

	)

8266 
	#GL_MAX_RENDERBUFFER_SIZE_EXT
 0x84E8

	)

8267 
	#GL_FRAMEBUFFER_BINDING_EXT
 0x8CA6

	)

8268 
	#GL_RENDERBUFFER_BINDING_EXT
 0x8CA7

	)

8269 
	#GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
 0x8CD0

	)

8270 
	#GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
 0x8CD1

	)

8271 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
 0x8CD2

	)

8272 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
 0x8CD3

	)

8273 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
 0x8CD4

	)

8274 
	#GL_FRAMEBUFFER_COMPLETE_EXT
 0x8CD5

	)

8275 
	#GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
 0x8CD6

	)

8276 
	#GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
 0x8CD7

	)

8277 
	#GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT_EXT
 0x8CD8

	)

8278 
	#GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
 0x8CD9

	)

8279 
	#GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
 0x8CDA

	)

8280 
	#GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
 0x8CDB

	)

8281 
	#GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
 0x8CDC

	)

8282 
	#GL_FRAMEBUFFER_UNSUPPORTED_EXT
 0x8CDD

	)

8283 
	#GL_MAX_COLOR_ATTACHMENTS_EXT
 0x8CDF

	)

8284 
	#GL_COLOR_ATTACHMENT0_EXT
 0x8CE0

	)

8285 
	#GL_COLOR_ATTACHMENT1_EXT
 0x8CE1

	)

8286 
	#GL_COLOR_ATTACHMENT2_EXT
 0x8CE2

	)

8287 
	#GL_COLOR_ATTACHMENT3_EXT
 0x8CE3

	)

8288 
	#GL_COLOR_ATTACHMENT4_EXT
 0x8CE4

	)

8289 
	#GL_COLOR_ATTACHMENT5_EXT
 0x8CE5

	)

8290 
	#GL_COLOR_ATTACHMENT6_EXT
 0x8CE6

	)

8291 
	#GL_COLOR_ATTACHMENT7_EXT
 0x8CE7

	)

8292 
	#GL_COLOR_ATTACHMENT8_EXT
 0x8CE8

	)

8293 
	#GL_COLOR_ATTACHMENT9_EXT
 0x8CE9

	)

8294 
	#GL_COLOR_ATTACHMENT10_EXT
 0x8CEA

	)

8295 
	#GL_COLOR_ATTACHMENT11_EXT
 0x8CEB

	)

8296 
	#GL_COLOR_ATTACHMENT12_EXT
 0x8CEC

	)

8297 
	#GL_COLOR_ATTACHMENT13_EXT
 0x8CED

	)

8298 
	#GL_COLOR_ATTACHMENT14_EXT
 0x8CEE

	)

8299 
	#GL_COLOR_ATTACHMENT15_EXT
 0x8CEF

	)

8300 
	#GL_DEPTH_ATTACHMENT_EXT
 0x8D00

	)

8301 
	#GL_STENCIL_ATTACHMENT_EXT
 0x8D20

	)

8302 
	#GL_FRAMEBUFFER_EXT
 0x8D40

	)

8303 
	#GL_RENDERBUFFER_EXT
 0x8D41

	)

8304 
	#GL_RENDERBUFFER_WIDTH_EXT
 0x8D42

	)

8305 
	#GL_RENDERBUFFER_HEIGHT_EXT
 0x8D43

	)

8306 
	#GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
 0x8D44

	)

8307 
	#GL_STENCIL_INDEX_EXT
 0x8D45

	)

8308 
	#GL_STENCIL_INDEX1_EXT
 0x8D46

	)

8309 
	#GL_STENCIL_INDEX4_EXT
 0x8D47

	)

8310 
	#GL_STENCIL_INDEX8_EXT
 0x8D48

	)

8311 
	#GL_STENCIL_INDEX16_EXT
 0x8D49

	)

8312 
	#GL_RENDERBUFFER_RED_SIZE_EXT
 0x8D50

	)

8313 
	#GL_RENDERBUFFER_GREEN_SIZE_EXT
 0x8D51

	)

8314 
	#GL_RENDERBUFFER_BLUE_SIZE_EXT
 0x8D52

	)

8315 
	#GL_RENDERBUFFER_ALPHA_SIZE_EXT
 0x8D53

	)

8316 
	#GL_RENDERBUFFER_DEPTH_SIZE_EXT
 0x8D54

	)

8317 
	#GL_RENDERBUFFER_STENCIL_SIZE_EXT
 0x8D55

	)

8318 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISRENDERBUFFEREXTPROC
Ë(
	tGLuöt
 
	tªndîbuf„r
);

8319 (
APIENTRYP
 
	tPFNGLBINDRENDERBUFFEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tªndîbuf„r
);

8320 (
APIENTRYP
 
	tPFNGLDELETERENDERBUFFERSEXTPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	tªndîbuf„rs
);

8321 (
APIENTRYP
 
	tPFNGLGENRENDERBUFFERSEXTPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 * 
	tªndîbuf„rs
);

8322 (
APIENTRYP
 
	tPFNGLRENDERBUFFERSTORAGEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

8323 (
APIENTRYP
 
	tPFNGLGETRENDERBUFFERPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

8324 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISFRAMEBUFFEREXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
);

8325 (
APIENTRYP
 
	tPFNGLBINDFRAMEBUFFEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	t‰amebuf„r
);

8326 (
APIENTRYP
 
	tPFNGLDELETEFRAMEBUFFERSEXTPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 * 
	t‰amebuf„rs
);

8327 (
APIENTRYP
 
	tPFNGLGENFRAMEBUFFERSEXTPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 * 
	t‰amebuf„rs
);

8328 
GLíum
 (
	tAPIENTRYP
 
	tPFNGLCHECKFRAMEBUFFERSTATUSEXTPROC
Ë(
	tGLíum
 
	tèrgë
);

8329 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURE1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tãxèrgë
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

8330 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURE2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tãxèrgë
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

8331 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURE3DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tãxèrgë
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tzoff£t
);

8332 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERRENDERBUFFEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tªndîbuf„π¨gë
, 
	tGLuöt
 
	tªndîbuf„r
);

8333 (
APIENTRYP
 
	tPFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

8334 (
APIENTRYP
 
	tPFNGLGENERATEMIPMAPEXTPROC
Ë(
	tGLíum
 
	tèrgë
);

8335 
GLEE_EXTERN
 
PFNGLISRENDERBUFFEREXTPROC
 
	gpglIsRídîbuf„rEXT
;

8336 
GLEE_EXTERN
 
PFNGLBINDRENDERBUFFEREXTPROC
 
	gpglBödRídîbuf„rEXT
;

8337 
GLEE_EXTERN
 
PFNGLDELETERENDERBUFFERSEXTPROC
 
	gpglDñëeRídîbuf„rsEXT
;

8338 
GLEE_EXTERN
 
PFNGLGENRENDERBUFFERSEXTPROC
 
	gpglGíRídîbuf„rsEXT
;

8339 
GLEE_EXTERN
 
PFNGLRENDERBUFFERSTORAGEEXTPROC
 
	gpglRídîbuf„rSt‹ageEXT
;

8340 
GLEE_EXTERN
 
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC
 
	gpglGëRídîbuf„rP¨amëîivEXT
;

8341 
GLEE_EXTERN
 
PFNGLISFRAMEBUFFEREXTPROC
 
	gpglIsFømebuf„rEXT
;

8342 
GLEE_EXTERN
 
PFNGLBINDFRAMEBUFFEREXTPROC
 
	gpglBödFømebuf„rEXT
;

8343 
GLEE_EXTERN
 
PFNGLDELETEFRAMEBUFFERSEXTPROC
 
	gpglDñëeFømebuf„rsEXT
;

8344 
GLEE_EXTERN
 
PFNGLGENFRAMEBUFFERSEXTPROC
 
	gpglGíFømebuf„rsEXT
;

8345 
GLEE_EXTERN
 
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC
 
	gpglCheckFømebuf„rSètusEXT
;

8346 
GLEE_EXTERN
 
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC
 
	gpglFømebuf„rTextuª1DEXT
;

8347 
GLEE_EXTERN
 
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC
 
	gpglFømebuf„rTextuª2DEXT
;

8348 
GLEE_EXTERN
 
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC
 
	gpglFømebuf„rTextuª3DEXT
;

8349 
GLEE_EXTERN
 
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC
 
	gpglFømebuf„rRídîbuf„rEXT
;

8350 
GLEE_EXTERN
 
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
 
	gpglGëFømebuf„rAâachmítP¨amëîivEXT
;

8351 
GLEE_EXTERN
 
PFNGLGENERATEMIPMAPEXTPROC
 
	gpglGíî©eMùm≠EXT
;

8352 
	#glIsRídîbuf„rEXT
 
pglIsRídîbuf„rEXT


	)

8353 
	#glBödRídîbuf„rEXT
 
pglBödRídîbuf„rEXT


	)

8354 
	#glDñëeRídîbuf„rsEXT
 
pglDñëeRídîbuf„rsEXT


	)

8355 
	#glGíRídîbuf„rsEXT
 
pglGíRídîbuf„rsEXT


	)

8356 
	#glRídîbuf„rSt‹ageEXT
 
pglRídîbuf„rSt‹ageEXT


	)

8357 
	#glGëRídîbuf„rP¨amëîivEXT
 
pglGëRídîbuf„rP¨amëîivEXT


	)

8358 
	#glIsFømebuf„rEXT
 
pglIsFømebuf„rEXT


	)

8359 
	#glBödFømebuf„rEXT
 
pglBödFømebuf„rEXT


	)

8360 
	#glDñëeFømebuf„rsEXT
 
pglDñëeFømebuf„rsEXT


	)

8361 
	#glGíFømebuf„rsEXT
 
pglGíFømebuf„rsEXT


	)

8362 
	#glCheckFømebuf„rSètusEXT
 
pglCheckFømebuf„rSètusEXT


	)

8363 
	#glFømebuf„rTextuª1DEXT
 
pglFømebuf„rTextuª1DEXT


	)

8364 
	#glFømebuf„rTextuª2DEXT
 
pglFømebuf„rTextuª2DEXT


	)

8365 
	#glFømebuf„rTextuª3DEXT
 
pglFømebuf„rTextuª3DEXT


	)

8366 
	#glFømebuf„rRídîbuf„rEXT
 
pglFømebuf„rRídîbuf„rEXT


	)

8367 
	#glGëFømebuf„rAâachmítP¨amëîivEXT
 
pglGëFømebuf„rAâachmítP¨amëîivEXT


	)

8368 
	#glGíî©eMùm≠EXT
 
pglGíî©eMùm≠EXT


	)

8373 #i‚de‡
GL_GREMEDY_°rög_m¨kî


8374 
	#GL_GREMEDY_°rög_m¨kî
 1

	)

8375 
	#__GLEE_GL_GREMEDY_°rög_m¨kî
 1

	)

8377 (
APIENTRYP
 
	tPFNGLSTRINGMARKERGREMEDYPROC
Ë(
	tGLsizei
 
	tÀn
, c⁄° 
	tGLvoid
 * 
	t°rög
);

8378 
GLEE_EXTERN
 
PFNGLSTRINGMARKERGREMEDYPROC
 
	gpglSåögM¨kîGREMEDY
;

8379 
	#glSåögM¨kîGREMEDY
 
pglSåögM¨kîGREMEDY


	)

8384 #i‚de‡
GL_EXT_Cg_shadî


8385 
	#GL_EXT_Cg_shadî
 1

	)

8386 
	#__GLEE_GL_EXT_Cg_shadî
 1

	)

8388 
	#GL_CG_VERTEX_SHADER_EXT
 0x890E

	)

8389 
	#GL_CG_FRAGMENT_SHADER_EXT
 0x890F

	)

8394 #i‚de‡
GL_EXT_timî_quîy


8395 
	#GL_EXT_timî_quîy
 1

	)

8396 
	#__GLEE_GL_EXT_timî_quîy
 1

	)

8398 
	#GL_TIME_ELAPSED_EXT
 0x88BF

	)

8399 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTI64VEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt64EXT
 * 
	t∑øms
);

8400 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTUI64VEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLuöt64EXT
 * 
	t∑øms
);

8401 
GLEE_EXTERN
 
PFNGLGETQUERYOBJECTI64VEXTPROC
 
	gpglGëQuîyObje˘i64vEXT
;

8402 
GLEE_EXTERN
 
PFNGLGETQUERYOBJECTUI64VEXTPROC
 
	gpglGëQuîyObje˘ui64vEXT
;

8403 
	#glGëQuîyObje˘i64vEXT
 
pglGëQuîyObje˘i64vEXT


	)

8404 
	#glGëQuîyObje˘ui64vEXT
 
pglGëQuîyObje˘ui64vEXT


	)

8409 #i‚de‡
GL_EXT_ãxtuª_buf„r_obje˘


8410 
	#GL_EXT_ãxtuª_buf„r_obje˘
 1

	)

8411 
	#__GLEE_GL_EXT_ãxtuª_buf„r_obje˘
 1

	)

8413 
	#GL_TEXTURE_BUFFER_EXT
 0x8C2A

	)

8414 
	#GL_MAX_TEXTURE_BUFFER_SIZE_EXT
 0x8C2B

	)

8415 
	#GL_TEXTURE_BINDING_BUFFER_EXT
 0x8C2C

	)

8416 
	#GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT
 0x8C2D

	)

8417 
	#GL_TEXTURE_BUFFER_FORMAT_EXT
 0x8C2E

	)

8418 (
APIENTRYP
 
	tPFNGLTEXBUFFEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLuöt
 
	tbuf„r
);

8419 
GLEE_EXTERN
 
PFNGLTEXBUFFEREXTPROC
 
	gpglTexBuf„rEXT
;

8420 
	#glTexBuf„rEXT
 
pglTexBuf„rEXT


	)

8425 #i‚de‡
GL_EXT_gpu_shadî4


8426 
	#GL_EXT_gpu_shadî4
 1

	)

8427 
	#__GLEE_GL_EXT_gpu_shadî4
 1

	)

8429 
	#GL_SAMPLER_1D_ARRAY_EXT
 0x8DC0

	)

8430 
	#GL_SAMPLER_2D_ARRAY_EXT
 0x8DC1

	)

8431 
	#GL_SAMPLER_BUFFER_EXT
 0x8DC2

	)

8432 
	#GL_SAMPLER_1D_ARRAY_SHADOW_EXT
 0x8DC3

	)

8433 
	#GL_SAMPLER_2D_ARRAY_SHADOW_EXT
 0x8DC4

	)

8434 
	#GL_SAMPLER_CUBE_SHADOW_EXT
 0x8DC5

	)

8435 
	#GL_UNSIGNED_INT_VEC2_EXT
 0x8DC6

	)

8436 
	#GL_UNSIGNED_INT_VEC3_EXT
 0x8DC7

	)

8437 
	#GL_UNSIGNED_INT_VEC4_EXT
 0x8DC8

	)

8438 
	#GL_INT_SAMPLER_1D_EXT
 0x8DC9

	)

8439 
	#GL_INT_SAMPLER_2D_EXT
 0x8DCA

	)

8440 
	#GL_INT_SAMPLER_3D_EXT
 0x8DCB

	)

8441 
	#GL_INT_SAMPLER_CUBE_EXT
 0x8DCC

	)

8442 
	#GL_INT_SAMPLER_2D_RECT_EXT
 0x8DCD

	)

8443 
	#GL_INT_SAMPLER_1D_ARRAY_EXT
 0x8DCE

	)

8444 
	#GL_INT_SAMPLER_2D_ARRAY_EXT
 0x8DCF

	)

8445 
	#GL_INT_SAMPLER_BUFFER_EXT
 0x8DD0

	)

8446 
	#GL_UNSIGNED_INT_SAMPLER_1D_EXT
 0x8DD1

	)

8447 
	#GL_UNSIGNED_INT_SAMPLER_2D_EXT
 0x8DD2

	)

8448 
	#GL_UNSIGNED_INT_SAMPLER_3D_EXT
 0x8DD3

	)

8449 
	#GL_UNSIGNED_INT_SAMPLER_CUBE_EXT
 0x8DD4

	)

8450 
	#GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT
 0x8DD5

	)

8451 
	#GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT
 0x8DD6

	)

8452 
	#GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT
 0x8DD7

	)

8453 
	#GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT
 0x8DD8

	)

8454 
	#GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT
 0x88FD

	)

8455 (
APIENTRYP
 
	tPFNGLGETUNIFORMUIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLuöà* 
	t∑øms
);

8456 (
APIENTRYP
 
	tPFNGLBINDFRAGDATALOCATIONEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tcﬁ‹
, c⁄° 
	tGLch¨
 * 
	t«me
);

8457 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETFRAGDATALOCATIONEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 * 
	t«me
);

8458 (
APIENTRYP
 
	tPFNGLUNIFORM1UIEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
);

8459 (
APIENTRYP
 
	tPFNGLUNIFORM2UIEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
, GLuöà
	tv1
);

8460 (
APIENTRYP
 
	tPFNGLUNIFORM3UIEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
, GLuöà
	tv1
, GLuöà
	tv2
);

8461 (
APIENTRYP
 
	tPFNGLUNIFORM4UIEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
, GLuöà
	tv1
, GLuöà
	tv2
, GLuöà
	tv3
);

8462 (
APIENTRYP
 
	tPFNGLUNIFORM1UIVEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 * 
	tvÆue
);

8463 (
APIENTRYP
 
	tPFNGLUNIFORM2UIVEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 * 
	tvÆue
);

8464 (
APIENTRYP
 
	tPFNGLUNIFORM3UIVEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 * 
	tvÆue
);

8465 (
APIENTRYP
 
	tPFNGLUNIFORM4UIVEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 * 
	tvÆue
);

8466 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1IEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
);

8467 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2IEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
);

8468 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3IEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

8469 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4IEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

8470 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1UIEXTPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
);

8471 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2UIEXTPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
);

8472 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3UIEXTPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
);

8473 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4UIEXTPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
, GLuöà
	tw
);

8474 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1IVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 * 
	tv
);

8475 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2IVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 * 
	tv
);

8476 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3IVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 * 
	tv
);

8477 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4IVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 * 
	tv
);

8478 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1UIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà* 
	tv
);

8479 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2UIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà* 
	tv
);

8480 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3UIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà* 
	tv
);

8481 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4UIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà* 
	tv
);

8482 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4BVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 * 
	tv
);

8483 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4SVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 * 
	tv
);

8484 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4UBVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 * 
	tv
);

8485 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4USVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 * 
	tv
);

8486 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBIPOINTEREXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 * 
	tpoöãr
);

8487 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

8488 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIUIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, GLuöà* 
	t∑øms
);

8489 
GLEE_EXTERN
 
PFNGLGETUNIFORMUIVEXTPROC
 
	gpglGëUnif‹muivEXT
;

8490 
GLEE_EXTERN
 
PFNGLBINDFRAGDATALOCATIONEXTPROC
 
	gpglBödFøgD©aLoˇti⁄EXT
;

8491 
GLEE_EXTERN
 
PFNGLGETFRAGDATALOCATIONEXTPROC
 
	gpglGëFøgD©aLoˇti⁄EXT
;

8492 
GLEE_EXTERN
 
PFNGLUNIFORM1UIEXTPROC
 
	gpglUnif‹m1uiEXT
;

8493 
GLEE_EXTERN
 
PFNGLUNIFORM2UIEXTPROC
 
	gpglUnif‹m2uiEXT
;

8494 
GLEE_EXTERN
 
PFNGLUNIFORM3UIEXTPROC
 
	gpglUnif‹m3uiEXT
;

8495 
GLEE_EXTERN
 
PFNGLUNIFORM4UIEXTPROC
 
	gpglUnif‹m4uiEXT
;

8496 
GLEE_EXTERN
 
PFNGLUNIFORM1UIVEXTPROC
 
	gpglUnif‹m1uivEXT
;

8497 
GLEE_EXTERN
 
PFNGLUNIFORM2UIVEXTPROC
 
	gpglUnif‹m2uivEXT
;

8498 
GLEE_EXTERN
 
PFNGLUNIFORM3UIVEXTPROC
 
	gpglUnif‹m3uivEXT
;

8499 
GLEE_EXTERN
 
PFNGLUNIFORM4UIVEXTPROC
 
	gpglUnif‹m4uivEXT
;

8500 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI1IEXTPROC
 
	gpglVîãxAâribI1iEXT
;

8501 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI2IEXTPROC
 
	gpglVîãxAâribI2iEXT
;

8502 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI3IEXTPROC
 
	gpglVîãxAâribI3iEXT
;

8503 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI4IEXTPROC
 
	gpglVîãxAâribI4iEXT
;

8504 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI1UIEXTPROC
 
	gpglVîãxAâribI1uiEXT
;

8505 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI2UIEXTPROC
 
	gpglVîãxAâribI2uiEXT
;

8506 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI3UIEXTPROC
 
	gpglVîãxAâribI3uiEXT
;

8507 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI4UIEXTPROC
 
	gpglVîãxAâribI4uiEXT
;

8508 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI1IVEXTPROC
 
	gpglVîãxAâribI1ivEXT
;

8509 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI2IVEXTPROC
 
	gpglVîãxAâribI2ivEXT
;

8510 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI3IVEXTPROC
 
	gpglVîãxAâribI3ivEXT
;

8511 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI4IVEXTPROC
 
	gpglVîãxAâribI4ivEXT
;

8512 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI1UIVEXTPROC
 
	gpglVîãxAâribI1uivEXT
;

8513 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI2UIVEXTPROC
 
	gpglVîãxAâribI2uivEXT
;

8514 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI3UIVEXTPROC
 
	gpglVîãxAâribI3uivEXT
;

8515 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI4UIVEXTPROC
 
	gpglVîãxAâribI4uivEXT
;

8516 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI4BVEXTPROC
 
	gpglVîãxAâribI4bvEXT
;

8517 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI4SVEXTPROC
 
	gpglVîãxAâribI4svEXT
;

8518 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI4UBVEXTPROC
 
	gpglVîãxAâribI4ubvEXT
;

8519 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBI4USVEXTPROC
 
	gpglVîãxAâribI4usvEXT
;

8520 
GLEE_EXTERN
 
PFNGLVERTEXATTRIBIPOINTEREXTPROC
 
	gpglVîãxAâribIPoöãrEXT
;

8521 
GLEE_EXTERN
 
PFNGLGETVERTEXATTRIBIIVEXTPROC
 
	gpglGëVîãxAâribIivEXT
;

8522 
GLEE_EXTERN
 
PFNGLGETVERTEXATTRIBIUIVEXTPROC
 
	gpglGëVîãxAâribIuivEXT
;

8523 
	#glGëUnif‹muivEXT
 
pglGëUnif‹muivEXT


	)

8524 
	#glBödFøgD©aLoˇti⁄EXT
 
pglBödFøgD©aLoˇti⁄EXT


	)

8525 
	#glGëFøgD©aLoˇti⁄EXT
 
pglGëFøgD©aLoˇti⁄EXT


	)

8526 
	#glUnif‹m1uiEXT
 
pglUnif‹m1uiEXT


	)

8527 
	#glUnif‹m2uiEXT
 
pglUnif‹m2uiEXT


	)

8528 
	#glUnif‹m3uiEXT
 
pglUnif‹m3uiEXT


	)

8529 
	#glUnif‹m4uiEXT
 
pglUnif‹m4uiEXT


	)

8530 
	#glUnif‹m1uivEXT
 
pglUnif‹m1uivEXT


	)

8531 
	#glUnif‹m2uivEXT
 
pglUnif‹m2uivEXT


	)

8532 
	#glUnif‹m3uivEXT
 
pglUnif‹m3uivEXT


	)

8533 
	#glUnif‹m4uivEXT
 
pglUnif‹m4uivEXT


	)

8534 
	#glVîãxAâribI1iEXT
 
pglVîãxAâribI1iEXT


	)

8535 
	#glVîãxAâribI2iEXT
 
pglVîãxAâribI2iEXT


	)

8536 
	#glVîãxAâribI3iEXT
 
pglVîãxAâribI3iEXT


	)

8537 
	#glVîãxAâribI4iEXT
 
pglVîãxAâribI4iEXT


	)

8538 
	#glVîãxAâribI1uiEXT
 
pglVîãxAâribI1uiEXT


	)

8539 
	#glVîãxAâribI2uiEXT
 
pglVîãxAâribI2uiEXT


	)

8540 
	#glVîãxAâribI3uiEXT
 
pglVîãxAâribI3uiEXT


	)

8541 
	#glVîãxAâribI4uiEXT
 
pglVîãxAâribI4uiEXT


	)

8542 
	#glVîãxAâribI1ivEXT
 
pglVîãxAâribI1ivEXT


	)

8543 
	#glVîãxAâribI2ivEXT
 
pglVîãxAâribI2ivEXT


	)

8544 
	#glVîãxAâribI3ivEXT
 
pglVîãxAâribI3ivEXT


	)

8545 
	#glVîãxAâribI4ivEXT
 
pglVîãxAâribI4ivEXT


	)

8546 
	#glVîãxAâribI1uivEXT
 
pglVîãxAâribI1uivEXT


	)

8547 
	#glVîãxAâribI2uivEXT
 
pglVîãxAâribI2uivEXT


	)

8548 
	#glVîãxAâribI3uivEXT
 
pglVîãxAâribI3uivEXT


	)

8549 
	#glVîãxAâribI4uivEXT
 
pglVîãxAâribI4uivEXT


	)

8550 
	#glVîãxAâribI4bvEXT
 
pglVîãxAâribI4bvEXT


	)

8551 
	#glVîãxAâribI4svEXT
 
pglVîãxAâribI4svEXT


	)

8552 
	#glVîãxAâribI4ubvEXT
 
pglVîãxAâribI4ubvEXT


	)

8553 
	#glVîãxAâribI4usvEXT
 
pglVîãxAâribI4usvEXT


	)

8554 
	#glVîãxAâribIPoöãrEXT
 
pglVîãxAâribIPoöãrEXT


	)

8555 
	#glGëVîãxAâribIivEXT
 
pglGëVîãxAâribIivEXT


	)

8556 
	#glGëVîãxAâribIuivEXT
 
pglGëVîãxAâribIuivEXT


	)

8561 #i‚de‡
GL_EXT_geomëry_shadî4


8562 
	#GL_EXT_geomëry_shadî4
 1

	)

8563 
	#__GLEE_GL_EXT_geomëry_shadî4
 1

	)

8565 
	#GL_GEOMETRY_SHADER_EXT
 0x8DD9

	)

8566 
	#GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT
 0x8DDD

	)

8567 
	#GL_MAX_VERTEX_VARYING_COMPONENTS_EXT
 0x8DDE

	)

8568 
	#GL_MAX_VARYING_COMPONENTS_EXT
 0x8B4B

	)

8569 
	#GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT
 0x8DDF

	)

8570 
	#GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT
 0x8DE0

	)

8571 
	#GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT
 0x8DE1

	)

8572 
	#GL_GEOMETRY_VERTICES_OUT_EXT
 0x8DDA

	)

8573 
	#GL_GEOMETRY_INPUT_TYPE_EXT
 0x8DDB

	)

8574 
	#GL_GEOMETRY_OUTPUT_TYPE_EXT
 0x8DDC

	)

8575 
	#GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
 0x8C29

	)

8576 
	#GL_LINES_ADJACENCY_EXT
 0xA

	)

8577 
	#GL_LINE_STRIP_ADJACENCY_EXT
 0xB

	)

8578 
	#GL_TRIANGLES_ADJACENCY_EXT
 0xC

	)

8579 
	#GL_TRIANGLE_STRIP_ADJACENCY_EXT
 0xD

	)

8580 
	#GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
 0x8DA7

	)

8581 
	#GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
 0x8DA8

	)

8582 
	#GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT
 0x8DA9

	)

8583 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
 0x8CD4

	)

8584 
	#GL_PROGRAM_POINT_SIZE_EXT
 0x8642

	)

8585 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETERIEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	tvÆue
);

8586 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTUREEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

8587 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tœyî
);

8588 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTUREFACEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLíum 
	tÁ˚
);

8589 
GLEE_EXTERN
 
PFNGLPROGRAMPARAMETERIEXTPROC
 
	gpglProgømP¨amëîiEXT
;

8590 
GLEE_EXTERN
 
PFNGLFRAMEBUFFERTEXTUREEXTPROC
 
	gpglFømebuf„rTextuªEXT
;

8591 
GLEE_EXTERN
 
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
 
	gpglFømebuf„rTextuªLayîEXT
;

8592 
GLEE_EXTERN
 
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC
 
	gpglFømebuf„rTextuªFa˚EXT
;

8593 
	#glProgømP¨amëîiEXT
 
pglProgømP¨amëîiEXT


	)

8594 
	#glFømebuf„rTextuªEXT
 
pglFømebuf„rTextuªEXT


	)

8595 
	#glFømebuf„rTextuªLayîEXT
 
pglFømebuf„rTextuªLayîEXT


	)

8596 
	#glFømebuf„rTextuªFa˚EXT
 
pglFømebuf„rTextuªFa˚EXT


	)

8601 #i‚de‡
GL_EXT_bödabÀ_unif‹m


8602 
	#GL_EXT_bödabÀ_unif‹m
 1

	)

8603 
	#__GLEE_GL_EXT_bödabÀ_unif‹m
 1

	)

8605 
	#GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
 0x8DE2

	)

8606 
	#GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
 0x8DE3

	)

8607 
	#GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
 0x8DE4

	)

8608 
	#GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
 0x8DED

	)

8609 
	#GL_UNIFORM_BUFFER_EXT
 0x8DEE

	)

8610 
	#GL_UNIFORM_BUFFER_BINDING_EXT
 0x8DEF

	)

8611 (
APIENTRYP
 
	tPFNGLUNIFORMBUFFEREXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLuöà
	tbuf„r
);

8612 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETUNIFORMBUFFERSIZEEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
);

8613 
GLöçå
 (
	tAPIENTRYP
 
	tPFNGLGETUNIFORMOFFSETEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
);

8614 
GLEE_EXTERN
 
PFNGLUNIFORMBUFFEREXTPROC
 
	gpglUnif‹mBuf„rEXT
;

8615 
GLEE_EXTERN
 
PFNGLGETUNIFORMBUFFERSIZEEXTPROC
 
	gpglGëUnif‹mBuf„rSizeEXT
;

8616 
GLEE_EXTERN
 
PFNGLGETUNIFORMOFFSETEXTPROC
 
	gpglGëUnif‹mOff£tEXT
;

8617 
	#glUnif‹mBuf„rEXT
 
pglUnif‹mBuf„rEXT


	)

8618 
	#glGëUnif‹mBuf„rSizeEXT
 
pglGëUnif‹mBuf„rSizeEXT


	)

8619 
	#glGëUnif‹mOff£tEXT
 
pglGëUnif‹mOff£tEXT


	)

8624 #i‚de‡
GL_EXT_‰amebuf„r_sRGB


8625 
	#GL_EXT_‰amebuf„r_sRGB
 1

	)

8626 
	#__GLEE_GL_EXT_‰amebuf„r_sRGB
 1

	)

8628 
	#GL_FRAMEBUFFER_SRGB_EXT
 0x8DB9

	)

8629 
	#GL_FRAMEBUFFER_SRGB_CAPABLE_EXT
 0x8DBA

	)

8634 #i‚de‡
GL_EXT_ãxtuª_sh¨ed_exp⁄ít


8635 
	#GL_EXT_ãxtuª_sh¨ed_exp⁄ít
 1

	)

8636 
	#__GLEE_GL_EXT_ãxtuª_sh¨ed_exp⁄ít
 1

	)

8638 
	#GL_RGB9_E5_EXT
 0x8C3D

	)

8639 
	#GL_UNSIGNED_INT_5_9_9_9_REV_EXT
 0x8C3E

	)

8640 
	#GL_TEXTURE_SHARED_SIZE_EXT
 0x8C3F

	)

8645 #i‚de‡
GL_EXT_∑cked_Êﬂt


8646 
	#GL_EXT_∑cked_Êﬂt
 1

	)

8647 
	#__GLEE_GL_EXT_∑cked_Êﬂt
 1

	)

8649 
	#GL_R11F_G11F_B10F_EXT
 0x8C3A

	)

8650 
	#GL_UNSIGNED_INT_10F_11F_11F_REV_EXT
 0x8C3B

	)

8651 
	#GL_RGBA_SIGNED_COMPONENTS_EXT
 0x8C3C

	)

8656 #i‚de‡
GL_EXT_ãxtuª_¨øy


8657 
	#GL_EXT_ãxtuª_¨øy
 1

	)

8658 
	#__GLEE_GL_EXT_ãxtuª_¨øy
 1

	)

8660 
	#GL_TEXTURE_1D_ARRAY_EXT
 0x8C18

	)

8661 
	#GL_PROXY_TEXTURE_1D_ARRAY_EXT
 0x8C19

	)

8662 
	#GL_TEXTURE_2D_ARRAY_EXT
 0x8C1A

	)

8663 
	#GL_PROXY_TEXTURE_2D_ARRAY_EXT
 0x8C1B

	)

8664 
	#GL_TEXTURE_BINDING_1D_ARRAY_EXT
 0x8C1C

	)

8665 
	#GL_TEXTURE_BINDING_2D_ARRAY_EXT
 0x8C1D

	)

8666 
	#GL_MAX_ARRAY_TEXTURE_LAYERS_EXT
 0x88FF

	)

8667 
	#GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT
 0x884E

	)

8672 #i‚de‡
GL_EXT_ãxtuª_öãgî


8673 
	#GL_EXT_ãxtuª_öãgî
 1

	)

8674 
	#__GLEE_GL_EXT_ãxtuª_öãgî
 1

	)

8676 
	#GL_RGBA32UI_EXT
 0x8D70

	)

8677 
	#GL_RGB32UI_EXT
 0x8D71

	)

8678 
	#GL_ALPHA32UI_EXT
 0x8D72

	)

8679 
	#GL_INTENSITY32UI_EXT
 0x8D73

	)

8680 
	#GL_LUMINANCE32UI_EXT
 0x8D74

	)

8681 
	#GL_LUMINANCE_ALPHA32UI_EXT
 0x8D75

	)

8682 
	#GL_RGBA16UI_EXT
 0x8D76

	)

8683 
	#GL_RGB16UI_EXT
 0x8D77

	)

8684 
	#GL_ALPHA16UI_EXT
 0x8D78

	)

8685 
	#GL_INTENSITY16UI_EXT
 0x8D79

	)

8686 
	#GL_LUMINANCE16UI_EXT
 0x8D7A

	)

8687 
	#GL_LUMINANCE_ALPHA16UI_EXT
 0x8D7B

	)

8688 
	#GL_RGBA8UI_EXT
 0x8D7C

	)

8689 
	#GL_RGB8UI_EXT
 0x8D7D

	)

8690 
	#GL_ALPHA8UI_EXT
 0x8D7E

	)

8691 
	#GL_INTENSITY8UI_EXT
 0x8D7F

	)

8692 
	#GL_LUMINANCE8UI_EXT
 0x8D80

	)

8693 
	#GL_LUMINANCE_ALPHA8UI_EXT
 0x8D81

	)

8694 
	#GL_RGBA32I_EXT
 0x8D82

	)

8695 
	#GL_RGB32I_EXT
 0x8D83

	)

8696 
	#GL_ALPHA32I_EXT
 0x8D84

	)

8697 
	#GL_INTENSITY32I_EXT
 0x8D85

	)

8698 
	#GL_LUMINANCE32I_EXT
 0x8D86

	)

8699 
	#GL_LUMINANCE_ALPHA32I_EXT
 0x8D87

	)

8700 
	#GL_RGBA16I_EXT
 0x8D88

	)

8701 
	#GL_RGB16I_EXT
 0x8D89

	)

8702 
	#GL_ALPHA16I_EXT
 0x8D8A

	)

8703 
	#GL_INTENSITY16I_EXT
 0x8D8B

	)

8704 
	#GL_LUMINANCE16I_EXT
 0x8D8C

	)

8705 
	#GL_LUMINANCE_ALPHA16I_EXT
 0x8D8D

	)

8706 
	#GL_RGBA8I_EXT
 0x8D8E

	)

8707 
	#GL_RGB8I_EXT
 0x8D8F

	)

8708 
	#GL_ALPHA8I_EXT
 0x8D90

	)

8709 
	#GL_INTENSITY8I_EXT
 0x8D91

	)

8710 
	#GL_LUMINANCE8I_EXT
 0x8D92

	)

8711 
	#GL_LUMINANCE_ALPHA8I_EXT
 0x8D93

	)

8712 
	#GL_RED_INTEGER_EXT
 0x8D94

	)

8713 
	#GL_GREEN_INTEGER_EXT
 0x8D95

	)

8714 
	#GL_BLUE_INTEGER_EXT
 0x8D96

	)

8715 
	#GL_ALPHA_INTEGER_EXT
 0x8D97

	)

8716 
	#GL_RGB_INTEGER_EXT
 0x8D98

	)

8717 
	#GL_RGBA_INTEGER_EXT
 0x8D99

	)

8718 
	#GL_BGR_INTEGER_EXT
 0x8D9A

	)

8719 
	#GL_BGRA_INTEGER_EXT
 0x8D9B

	)

8720 
	#GL_LUMINANCE_INTEGER_EXT
 0x8D9C

	)

8721 
	#GL_LUMINANCE_ALPHA_INTEGER_EXT
 0x8D9D

	)

8722 
	#GL_RGBA_INTEGER_MODE_EXT
 0x8D9E

	)

8723 (
APIENTRYP
 
	tPFNGLTEXPARAMETERIIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

8724 (
APIENTRYP
 
	tPFNGLTEXPARAMETERIUIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLuöt
 * 
	t∑øms
);

8725 (
APIENTRYP
 
	tPFNGLGETTEXPARAMETERIIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

8726 (
APIENTRYP
 
	tPFNGLGETTEXPARAMETERIUIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLuöt
 * 
	t∑øms
);

8727 (
APIENTRYP
 
	tPFNGLCLEARCOLORIIEXTPROC
Ë(
	tGLöt
 
	tªd
, GLöà
	tgªí
, GLöà
	tblue
, GLöà
	tÆpha
);

8728 (
APIENTRYP
 
	tPFNGLCLEARCOLORIUIEXTPROC
Ë(
	tGLuöt
 
	tªd
, GLuöà
	tgªí
, GLuöà
	tblue
, GLuöà
	tÆpha
);

8729 
GLEE_EXTERN
 
PFNGLTEXPARAMETERIIVEXTPROC
 
	gpglTexP¨amëîIivEXT
;

8730 
GLEE_EXTERN
 
PFNGLTEXPARAMETERIUIVEXTPROC
 
	gpglTexP¨amëîIuivEXT
;

8731 
GLEE_EXTERN
 
PFNGLGETTEXPARAMETERIIVEXTPROC
 
	gpglGëTexP¨amëîIivEXT
;

8732 
GLEE_EXTERN
 
PFNGLGETTEXPARAMETERIUIVEXTPROC
 
	gpglGëTexP¨amëîIuivEXT
;

8733 
GLEE_EXTERN
 
PFNGLCLEARCOLORIIEXTPROC
 
	gpglCÀ¨Cﬁ‹IiEXT
;

8734 
GLEE_EXTERN
 
PFNGLCLEARCOLORIUIEXTPROC
 
	gpglCÀ¨Cﬁ‹IuiEXT
;

8735 
	#glTexP¨amëîIivEXT
 
pglTexP¨amëîIivEXT


	)

8736 
	#glTexP¨amëîIuivEXT
 
pglTexP¨amëîIuivEXT


	)

8737 
	#glGëTexP¨amëîIivEXT
 
pglGëTexP¨amëîIivEXT


	)

8738 
	#glGëTexP¨amëîIuivEXT
 
pglGëTexP¨amëîIuivEXT


	)

8739 
	#glCÀ¨Cﬁ‹IiEXT
 
pglCÀ¨Cﬁ‹IiEXT


	)

8740 
	#glCÀ¨Cﬁ‹IuiEXT
 
pglCÀ¨Cﬁ‹IuiEXT


	)

8745 #i‚de‡
GL_NV_dïth_buf„r_Êﬂt


8746 
	#GL_NV_dïth_buf„r_Êﬂt
 1

	)

8747 
	#__GLEE_GL_NV_dïth_buf„r_Êﬂt
 1

	)

8749 
	#GL_DEPTH_COMPONENT32F_NV
 0x8DAB

	)

8750 
	#GL_DEPTH32F_STENCIL8_NV
 0x8DAC

	)

8751 
	#GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV
 0x8DAD

	)

8752 
	#GL_DEPTH_BUFFER_FLOAT_MODE_NV
 0x8DAF

	)

8753 (
APIENTRYP
 
	tPFNGLDEPTHRANGEDNVPROC
Ë(
	tGLdoubÀ
 
	tzNór
, GLdoubÀ 
	tzF¨
);

8754 (
APIENTRYP
 
	tPFNGLCLEARDEPTHDNVPROC
Ë(
	tGLdoubÀ
 
	tdïth
);

8755 (
APIENTRYP
 
	tPFNGLDEPTHBOUNDSDNVPROC
Ë(
	tGLdoubÀ
 
	tzmö
, GLdoubÀ 
	tzmax
);

8756 
GLEE_EXTERN
 
PFNGLDEPTHRANGEDNVPROC
 
	gpglDïthR™gedNV
;

8757 
GLEE_EXTERN
 
PFNGLCLEARDEPTHDNVPROC
 
	gpglCÀ¨DïthdNV
;

8758 
GLEE_EXTERN
 
PFNGLDEPTHBOUNDSDNVPROC
 
	gpglDïthBoundsdNV
;

8759 
	#glDïthR™gedNV
 
pglDïthR™gedNV


	)

8760 
	#glCÀ¨DïthdNV
 
pglCÀ¨DïthdNV


	)

8761 
	#glDïthBoundsdNV
 
pglDïthBoundsdNV


	)

8766 #i‚de‡
GL_EXT_ãxtuª_com¥essi⁄_œtc


8767 
	#GL_EXT_ãxtuª_com¥essi⁄_œtc
 1

	)

8768 
	#__GLEE_GL_EXT_ãxtuª_com¥essi⁄_œtc
 1

	)

8770 
	#GL_COMPRESSED_LUMINANCE_LATC1_EXT
 0x8C70

	)

8771 
	#GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT
 0x8C71

	)

8772 
	#GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT
 0x8C72

	)

8773 
	#GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT
 0x8C73

	)

8778 #i‚de‡
GL_NV_å™sf‹m_„edback


8779 
	#GL_NV_å™sf‹m_„edback
 1

	)

8780 
	#__GLEE_GL_NV_å™sf‹m_„edback
 1

	)

8782 
	#GL_BACK_PRIMARY_COLOR_NV
 0x8C77

	)

8783 
	#GL_BACK_SECONDARY_COLOR_NV
 0x8C78

	)

8784 
	#GL_TEXTURE_COORD_NV
 0x8C79

	)

8785 
	#GL_CLIP_DISTANCE_NV
 0x8C7A

	)

8786 
	#GL_VERTEX_ID_NV
 0x8C7B

	)

8787 
	#GL_PRIMITIVE_ID_NV
 0x8C7C

	)

8788 
	#GL_GENERIC_ATTRIB_NV
 0x8C7D

	)

8789 
	#GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
 0x8C7E

	)

8790 
	#GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
 0x8C7F

	)

8791 
	#GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
 0x8C80

	)

8792 
	#GL_ACTIVE_VARYINGS_NV
 0x8C81

	)

8793 
	#GL_ACTIVE_VARYING_MAX_LENGTH_NV
 0x8C82

	)

8794 
	#GL_TRANSFORM_FEEDBACK_VARYINGS_NV
 0x8C83

	)

8795 
	#GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
 0x8C84

	)

8796 
	#GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
 0x8C85

	)

8797 
	#GL_TRANSFORM_FEEDBACK_RECORD_NV
 0x8C86

	)

8798 
	#GL_PRIMITIVES_GENERATED_NV
 0x8C87

	)

8799 
	#GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
 0x8C88

	)

8800 
	#GL_RASTERIZER_DISCARD_NV
 0x8C89

	)

8801 
	#GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_ATTRIBS_NV
 0x8C8A

	)

8802 
	#GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
 0x8C8B

	)

8803 
	#GL_INTERLEAVED_ATTRIBS_NV
 0x8C8C

	)

8804 
	#GL_SEPARATE_ATTRIBS_NV
 0x8C8D

	)

8805 
	#GL_TRANSFORM_FEEDBACK_BUFFER_NV
 0x8C8E

	)

8806 
	#GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
 0x8C8F

	)

8807 (
APIENTRYP
 
	tPFNGLBEGINTRANSFORMFEEDBACKNVPROC
Ë(
	tGLíum
 
	t¥imôiveMode
);

8808 (
APIENTRYP
 
	tPFNGLENDTRANSFORMFEEDBACKNVPROC
) ();

8809 (
APIENTRYP
 
	tPFNGLTRANSFORMFEEDBACKATTRIBSNVPROC
Ë(
	tGLuöt
 
	tcou¡
, c⁄° 
	tGLöt
 * 
	t©åibs
, 
	tGLíum
 
	tbuf„rMode
);

8810 (
APIENTRYP
 
	tPFNGLBINDBUFFERRANGENVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
);

8811 (
APIENTRYP
 
	tPFNGLBINDBUFFEROFFSETNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
, 
	tGLöçå
 
	toff£t
);

8812 (
APIENTRYP
 
	tPFNGLBINDBUFFERBASENVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
);

8813 (
APIENTRYP
 
	tPFNGLTRANSFORMFEEDBACKVARYINGSNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLöt
 * 
	tloˇti⁄s
, 
	tGLíum
 
	tbuf„rMode
);

8814 (
APIENTRYP
 
	tPFNGLACTIVEVARYINGNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 * 
	t«me
);

8815 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETVARYINGLOCATIONNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 * 
	t«me
);

8816 (
APIENTRYP
 
	tPFNGLGETACTIVEVARYINGNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, 
	tGLsizei
 
	tbufSize
, GLsizeò* 
	tÀngth
, GLsizeò* 
	tsize
, 
	tGLíum
 * 
	tty≥
, 
	tGLch¨
 * 
	t«me
);

8817 (
APIENTRYP
 
	tPFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, 
	tGLöt
 * 
	tloˇti⁄
);

8818 
GLEE_EXTERN
 
PFNGLBEGINTRANSFORMFEEDBACKNVPROC
 
	gpglBegöTønsf‹mFìdbackNV
;

8819 
GLEE_EXTERN
 
PFNGLENDTRANSFORMFEEDBACKNVPROC
 
	gpglEndTønsf‹mFìdbackNV
;

8820 
GLEE_EXTERN
 
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC
 
	gpglTønsf‹mFìdbackAâribsNV
;

8821 
GLEE_EXTERN
 
PFNGLBINDBUFFERRANGENVPROC
 
	gpglBödBuf„rR™geNV
;

8822 
GLEE_EXTERN
 
PFNGLBINDBUFFEROFFSETNVPROC
 
	gpglBödBuf„rOff£tNV
;

8823 
GLEE_EXTERN
 
PFNGLBINDBUFFERBASENVPROC
 
	gpglBödBuf„rBa£NV
;

8824 
GLEE_EXTERN
 
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC
 
	gpglTønsf‹mFìdbackV¨yögsNV
;

8825 
GLEE_EXTERN
 
PFNGLACTIVEVARYINGNVPROC
 
	gpglA˘iveV¨yögNV
;

8826 
GLEE_EXTERN
 
PFNGLGETVARYINGLOCATIONNVPROC
 
	gpglGëV¨yögLoˇti⁄NV
;

8827 
GLEE_EXTERN
 
PFNGLGETACTIVEVARYINGNVPROC
 
	gpglGëA˘iveV¨yögNV
;

8828 
GLEE_EXTERN
 
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC
 
	gpglGëTønsf‹mFìdbackV¨yögNV
;

8829 
	#glBegöTønsf‹mFìdbackNV
 
pglBegöTønsf‹mFìdbackNV


	)

8830 
	#glEndTønsf‹mFìdbackNV
 
pglEndTønsf‹mFìdbackNV


	)

8831 
	#glTønsf‹mFìdbackAâribsNV
 
pglTønsf‹mFìdbackAâribsNV


	)

8832 
	#glBödBuf„rR™geNV
 
pglBödBuf„rR™geNV


	)

8833 
	#glBödBuf„rOff£tNV
 
pglBödBuf„rOff£tNV


	)

8834 
	#glBödBuf„rBa£NV
 
pglBödBuf„rBa£NV


	)

8835 
	#glTønsf‹mFìdbackV¨yögsNV
 
pglTønsf‹mFìdbackV¨yögsNV


	)

8836 
	#glA˘iveV¨yögNV
 
pglA˘iveV¨yögNV


	)

8837 
	#glGëV¨yögLoˇti⁄NV
 
pglGëV¨yögLoˇti⁄NV


	)

8838 
	#glGëA˘iveV¨yögNV
 
pglGëA˘iveV¨yögNV


	)

8839 
	#glGëTønsf‹mFìdbackV¨yögNV
 
pglGëTønsf‹mFìdbackV¨yögNV


	)

8844 #i‚de‡
GL_NV_geomëry_¥ogøm4


8845 
	#GL_NV_geomëry_¥ogøm4
 1

	)

8846 
	#__GLEE_GL_NV_geomëry_¥ogøm4
 1

	)

8848 
	#GL_GEOMETRY_PROGRAM_NV
 0x8C26

	)

8849 
	#GL_MAX_PROGRAM_OUTPUT_VERTICES_NV
 0x8C27

	)

8850 
	#GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV
 0x8C28

	)

8851 (
APIENTRYP
 
	tPFNGLPROGRAMVERTEXLIMITNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tlimô
);

8852 
GLEE_EXTERN
 
PFNGLPROGRAMVERTEXLIMITNVPROC
 
	gpglProgømVîãxLimôNV
;

8853 
	#glProgømVîãxLimôNV
 
pglProgømVîãxLimôNV


	)

8858 #i‚de‡
GL_NV_gpu_¥ogøm4


8859 
	#GL_NV_gpu_¥ogøm4
 1

	)

8860 
	#__GLEE_GL_NV_gpu_¥ogøm4
 1

	)

8862 
	#GL_MIN_PROGRAM_TEXEL_OFFSET_NV
 0x8904

	)

8863 
	#GL_MAX_PROGRAM_TEXEL_OFFSET_NV
 0x8905

	)

8864 
	#GL_PROGRAM_ATTRIB_COMPONENTS_NV
 0x8906

	)

8865 
	#GL_PROGRAM_RESULT_COMPONENTS_NV
 0x8907

	)

8866 
	#GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV
 0x8908

	)

8867 
	#GL_MAX_PROGRAM_RESULT_COMPONENTS_NV
 0x8909

	)

8868 
	#GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV
 0x8DA5

	)

8869 
	#GL_MAX_PROGRAM_GENERIC_RESULTS_NV
 0x8DA6

	)

8870 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERI4INVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

8871 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERI4IVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 * 
	t∑øms
);

8872 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLöt
 * 
	t∑øms
);

8873 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERI4UINVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
, GLuöà
	tw
);

8874 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° GLuöà* 
	t∑øms
);

8875 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà* 
	t∑øms
);

8876 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERI4INVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

8877 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERI4IVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 * 
	t∑øms
);

8878 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERSI4IVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLöt
 * 
	t∑øms
);

8879 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERI4UINVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
, GLuöà
	tw
);

8880 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERI4UIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° GLuöà* 
	t∑øms
);

8881 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERSI4UIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà* 
	t∑øms
);

8882 (
APIENTRYP
 
	tPFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 * 
	t∑øms
);

8883 (
APIENTRYP
 
	tPFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà* 
	t∑øms
);

8884 (
APIENTRYP
 
	tPFNGLGETPROGRAMENVPARAMETERIIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 * 
	t∑øms
);

8885 (
APIENTRYP
 
	tPFNGLGETPROGRAMENVPARAMETERIUIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà* 
	t∑øms
);

8886 
GLEE_EXTERN
 
PFNGLPROGRAMLOCALPARAMETERI4INVPROC
 
	gpglProgømLoˇlP¨amëîI4iNV
;

8887 
GLEE_EXTERN
 
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC
 
	gpglProgømLoˇlP¨amëîI4ivNV
;

8888 
GLEE_EXTERN
 
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC
 
	gpglProgømLoˇlP¨amëîsI4ivNV
;

8889 
GLEE_EXTERN
 
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC
 
	gpglProgømLoˇlP¨amëîI4uiNV
;

8890 
GLEE_EXTERN
 
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC
 
	gpglProgømLoˇlP¨amëîI4uivNV
;

8891 
GLEE_EXTERN
 
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC
 
	gpglProgømLoˇlP¨amëîsI4uivNV
;

8892 
GLEE_EXTERN
 
PFNGLPROGRAMENVPARAMETERI4INVPROC
 
	gpglProgømEnvP¨amëîI4iNV
;

8893 
GLEE_EXTERN
 
PFNGLPROGRAMENVPARAMETERI4IVNVPROC
 
	gpglProgømEnvP¨amëîI4ivNV
;

8894 
GLEE_EXTERN
 
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC
 
	gpglProgømEnvP¨amëîsI4ivNV
;

8895 
GLEE_EXTERN
 
PFNGLPROGRAMENVPARAMETERI4UINVPROC
 
	gpglProgømEnvP¨amëîI4uiNV
;

8896 
GLEE_EXTERN
 
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC
 
	gpglProgømEnvP¨amëîI4uivNV
;

8897 
GLEE_EXTERN
 
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC
 
	gpglProgømEnvP¨amëîsI4uivNV
;

8898 
GLEE_EXTERN
 
PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC
 
	gpglGëProgømLoˇlP¨amëîIivNV
;

8899 
GLEE_EXTERN
 
PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC
 
	gpglGëProgømLoˇlP¨amëîIuivNV
;

8900 
GLEE_EXTERN
 
PFNGLGETPROGRAMENVPARAMETERIIVNVPROC
 
	gpglGëProgømEnvP¨amëîIivNV
;

8901 
GLEE_EXTERN
 
PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC
 
	gpglGëProgømEnvP¨amëîIuivNV
;

8902 
	#glProgømLoˇlP¨amëîI4iNV
 
pglProgømLoˇlP¨amëîI4iNV


	)

8903 
	#glProgømLoˇlP¨amëîI4ivNV
 
pglProgømLoˇlP¨amëîI4ivNV


	)

8904 
	#glProgømLoˇlP¨amëîsI4ivNV
 
pglProgømLoˇlP¨amëîsI4ivNV


	)

8905 
	#glProgømLoˇlP¨amëîI4uiNV
 
pglProgømLoˇlP¨amëîI4uiNV


	)

8906 
	#glProgømLoˇlP¨amëîI4uivNV
 
pglProgømLoˇlP¨amëîI4uivNV


	)

8907 
	#glProgømLoˇlP¨amëîsI4uivNV
 
pglProgømLoˇlP¨amëîsI4uivNV


	)

8908 
	#glProgømEnvP¨amëîI4iNV
 
pglProgømEnvP¨amëîI4iNV


	)

8909 
	#glProgømEnvP¨amëîI4ivNV
 
pglProgømEnvP¨amëîI4ivNV


	)

8910 
	#glProgømEnvP¨amëîsI4ivNV
 
pglProgømEnvP¨amëîsI4ivNV


	)

8911 
	#glProgømEnvP¨amëîI4uiNV
 
pglProgømEnvP¨amëîI4uiNV


	)

8912 
	#glProgømEnvP¨amëîI4uivNV
 
pglProgømEnvP¨amëîI4uivNV


	)

8913 
	#glProgømEnvP¨amëîsI4uivNV
 
pglProgømEnvP¨amëîsI4uivNV


	)

8914 
	#glGëProgømLoˇlP¨amëîIivNV
 
pglGëProgømLoˇlP¨amëîIivNV


	)

8915 
	#glGëProgømLoˇlP¨amëîIuivNV
 
pglGëProgømLoˇlP¨amëîIuivNV


	)

8916 
	#glGëProgømEnvP¨amëîIivNV
 
pglGëProgømEnvP¨amëîIivNV


	)

8917 
	#glGëProgømEnvP¨amëîIuivNV
 
pglGëProgømEnvP¨amëîIuivNV


	)

8922 #i‚de‡
GL_NV_‰amebuf„r_mu…ißm∂e_covîage


8923 
	#GL_NV_‰amebuf„r_mu…ißm∂e_covîage
 1

	)

8924 
	#__GLEE_GL_NV_‰amebuf„r_mu…ißm∂e_covîage
 1

	)

8926 
	#GL_RENDERBUFFER_COVERAGE_SAMPLES_NV
 0x8CAB

	)

8927 
	#GL_RENDERBUFFER_COLOR_SAMPLES_NV
 0x8E10

	)

8928 
	#GL_MAX_RENDERBUFFER_COVERAGE_SAMPLES_NV
 0x8D57

	)

8929 
	#GL_MAX_RENDERBUFFER_COLOR_SAMPLES_NV
 0x8E11

	)

8930 
	#GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV
 0x8E12

	)

8931 
	#GL_MULTISAMPLE_COVERAGE_MODES_NV
 0x8E13

	)

8932 (
APIENTRYP
 
	tPFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tcovîageSam∂es
, GLsizeò
	tcﬁ‹Sam∂es
, GLíum 
	töã∫Æf‹m©
, GLsizeò
	twidth
, GLsizeò
	theight
);

8933 
GLEE_EXTERN
 
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC
 
	gpglRídîbuf„rSt‹ageMu…ißm∂eCovîageNV
;

8934 
	#glRídîbuf„rSt‹ageMu…ißm∂eCovîageNV
 
pglRídîbuf„rSt‹ageMu…ißm∂eCovîageNV


	)

8939 #i‚de‡
GL_EXT_‰amebuf„r_mu…ißm∂e


8940 
	#GL_EXT_‰amebuf„r_mu…ißm∂e
 1

	)

8941 
	#__GLEE_GL_EXT_‰amebuf„r_mu…ißm∂e
 1

	)

8943 
	#GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
 0x8D56

	)

8944 
	#GL_MAX_SAMPLES_EXT
 0x8D57

	)

8945 
	#GL_RENDERBUFFER_SAMPLES_EXT
 0x8CAB

	)

8946 (
APIENTRYP
 
	tPFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tßm∂es
, GLíum 
	töã∫Æf‹m©
, GLsizeò
	twidth
, GLsizeò
	theight
);

8947 
GLEE_EXTERN
 
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
 
	gpglRídîbuf„rSt‹ageMu…ißm∂eEXT
;

8948 
	#glRídîbuf„rSt‹ageMu…ißm∂eEXT
 
pglRídîbuf„rSt‹ageMu…ißm∂eEXT


	)

8953 #i‚de‡
GL_EXT_‰amebuf„r_blô


8954 
	#GL_EXT_‰amebuf„r_blô
 1

	)

8955 
	#__GLEE_GL_EXT_‰amebuf„r_blô
 1

	)

8957 
	#GL_READ_FRAMEBUFFER_EXT
 0x8CA8

	)

8958 
	#GL_DRAW_FRAMEBUFFER_EXT
 0x8CA9

	)

8959 
	#GL_DRAW_FRAMEBUFFER_BINDING_EXT
 0x8CA6

	)

8960 
	#GL_READ_FRAMEBUFFER_BINDING_EXT
 0x8CAA

	)

8961 (
APIENTRYP
 
	tPFNGLBLITFRAMEBUFFEREXTPROC
Ë(
	tGLöt
 
	t§cX0
, GLöà
	t§cY0
, GLöà
	t§cX1
, GLöà
	t§cY1
, GLöà
	td°X0
, GLöà
	td°Y0
, GLöà
	td°X1
, GLöà
	td°Y1
, 
	tGLbôfõld
 
	tmask
, 
	tGLíum
 
	tfûãr
);

8962 
GLEE_EXTERN
 
PFNGLBLITFRAMEBUFFEREXTPROC
 
	gpglBlôFømebuf„rEXT
;

8963 
	#glBlôFømebuf„rEXT
 
pglBlôFømebuf„rEXT


	)

8968 #i‚de‡
GL_EXT_ãxtuª_com¥essi⁄_rgtc


8969 
	#GL_EXT_ãxtuª_com¥essi⁄_rgtc
 1

	)

8970 
	#__GLEE_GL_EXT_ãxtuª_com¥essi⁄_rgtc
 1

	)

8972 
	#GL_COMPRESSED_RED_RGTC1_EXT
 0x8DBB

	)

8973 
	#GL_COMPRESSED_SIGNED_RED_RGTC1_EXT
 0x8DBC

	)

8974 
	#GL_COMPRESSED_RED_GREEN_RGTC2_EXT
 0x8DBD

	)

8975 
	#GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT
 0x8DBE

	)

8980 #i‚de‡
GL_EXT_cﬁ‹_m©rix


8981 
	#GL_EXT_cﬁ‹_m©rix
 1

	)

8982 
	#__GLEE_GL_EXT_cﬁ‹_m©rix
 1

	)

8988 #i‚de‡
GL_SGIX_ãxtuª_£À˘


8989 
	#GL_SGIX_ãxtuª_£À˘
 1

	)

8990 
	#__GLEE_GL_SGIX_ãxtuª_£À˘
 1

	)

8996 #i‚de‡
GL_INGR_bÀnd_func_£∑øã


8997 
	#GL_INGR_bÀnd_func_£∑øã
 1

	)

8998 
	#__GLEE_GL_INGR_bÀnd_func_£∑øã
 1

	)

9000 (
APIENTRYP
 
	tPFNGLBLENDFUNCSEPARATEINGRPROC
Ë(
	tGLíum
 
	tsÁ˘‹RGB
, GLíum 
	tdÁ˘‹RGB
, GLíum 
	tsÁ˘‹AÕha
, GLíum 
	tdÁ˘‹AÕha
);

9001 
GLEE_EXTERN
 
PFNGLBLENDFUNCSEPARATEINGRPROC
 
	gpglBÀndFuncSï¨©eINGR
;

9002 
	#glBÀndFuncSï¨©eINGR
 
pglBÀndFuncSï¨©eINGR


	)

9007 #i‚de‡
GL_SGIX_dïth_∑ss_ö°rumít


9008 
	#GL_SGIX_dïth_∑ss_ö°rumít
 1

	)

9009 
	#__GLEE_GL_SGIX_dïth_∑ss_ö°rumít
 1

	)

9015 #i‚de‡
GL_SGIX_igloo_öãrÁ˚


9016 
	#GL_SGIX_igloo_öãrÁ˚
 1

	)

9017 
	#__GLEE_GL_SGIX_igloo_öãrÁ˚
 1

	)

9019 (
APIENTRYP
 
	tPFNGLIGLOOINTERFACESGIXPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLvoid
 * 
	t∑øms
);

9020 
GLEE_EXTERN
 
PFNGLIGLOOINTERFACESGIXPROC
 
	gpglIglooI¡îÁ˚SGIX
;

9021 
	#glIglooI¡îÁ˚SGIX
 
pglIglooI¡îÁ˚SGIX


	)

9026 #i‚de‡
GL_EXT_døw_buf„rs2


9027 
	#GL_EXT_døw_buf„rs2
 1

	)

9028 
	#__GLEE_GL_EXT_døw_buf„rs2
 1

	)

9030 (
APIENTRYP
 
	tPFNGLCOLORMASKINDEXEDEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLboﬁón
 
	tr
, GLboﬁó¿
	tg
, GLboﬁó¿
	tb
, GLboﬁó¿
	ta
);

9031 (
APIENTRYP
 
	tPFNGLGETBOOLEANINDEXEDVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLboﬁón
 * 
	td©a
);

9032 (
APIENTRYP
 
	tPFNGLGETINTEGERINDEXEDVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 * 
	td©a
);

9033 (
APIENTRYP
 
	tPFNGLENABLEINDEXEDEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
);

9034 (
APIENTRYP
 
	tPFNGLDISABLEINDEXEDEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
);

9035 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISENABLEDINDEXEDEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
);

9036 
GLEE_EXTERN
 
PFNGLCOLORMASKINDEXEDEXTPROC
 
	gpglCﬁ‹MaskIndexedEXT
;

9037 
GLEE_EXTERN
 
PFNGLGETBOOLEANINDEXEDVEXTPROC
 
	gpglGëBoﬁónIndexedvEXT
;

9038 
GLEE_EXTERN
 
PFNGLGETINTEGERINDEXEDVEXTPROC
 
	gpglGëI¡egîIndexedvEXT
;

9039 
GLEE_EXTERN
 
PFNGLENABLEINDEXEDEXTPROC
 
	gpglE«bÀIndexedEXT
;

9040 
GLEE_EXTERN
 
PFNGLDISABLEINDEXEDEXTPROC
 
	gpglDißbÀIndexedEXT
;

9041 
GLEE_EXTERN
 
PFNGLISENABLEDINDEXEDEXTPROC
 
	gpglIsE«bÀdIndexedEXT
;

9042 
	#glCﬁ‹MaskIndexedEXT
 
pglCﬁ‹MaskIndexedEXT


	)

9043 
	#glGëBoﬁónIndexedvEXT
 
pglGëBoﬁónIndexedvEXT


	)

9044 
	#glGëI¡egîIndexedvEXT
 
pglGëI¡egîIndexedvEXT


	)

9045 
	#glE«bÀIndexedEXT
 
pglE«bÀIndexedEXT


	)

9046 
	#glDißbÀIndexedEXT
 
pglDißbÀIndexedEXT


	)

9047 
	#glIsE«bÀdIndexedEXT
 
pglIsE«bÀdIndexedEXT


	)

9052 #i‚de‡
GL_NV_∑ømëî_buf„r_obje˘


9053 
	#GL_NV_∑ømëî_buf„r_obje˘
 1

	)

9054 
	#__GLEE_GL_NV_∑ømëî_buf„r_obje˘
 1

	)

9056 (
APIENTRYP
 
	tPFNGLPROGRAMBUFFERPARAMETERSFVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tbuf„r
, GLuöà
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

9057 (
APIENTRYP
 
	tPFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tbuf„r
, GLuöà
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLöt
 * 
	t∑øms
);

9058 (
APIENTRYP
 
	tPFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tbuf„r
, GLuöà
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà* 
	t∑øms
);

9059 
GLEE_EXTERN
 
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC
 
	gpglProgømBuf„rP¨amëîsfvNV
;

9060 
GLEE_EXTERN
 
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC
 
	gpglProgømBuf„rP¨amëîsIivNV
;

9061 
GLEE_EXTERN
 
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC
 
	gpglProgømBuf„rP¨amëîsIuivNV
;

9062 
	#glProgømBuf„rP¨amëîsfvNV
 
pglProgømBuf„rP¨amëîsfvNV


	)

9063 
	#glProgømBuf„rP¨amëîsIivNV
 
pglProgømBuf„rP¨amëîsIivNV


	)

9064 
	#glProgømBuf„rP¨amëîsIuivNV
 
pglProgømBuf„rP¨amëîsIuivNV


	)

9069 #i‚de‡
GL_EXT_døw_ö°™˚d


9070 
	#GL_EXT_døw_ö°™˚d
 1

	)

9071 
	#__GLEE_GL_EXT_døw_ö°™˚d
 1

	)

9073 (
APIENTRYP
 
	tPFNGLDRAWARRAYSINSTANCEDEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 
	t°¨t
, 
	tGLsizei
 
	tcou¡
, GLsizeò
	t¥imcou¡
);

9074 (
APIENTRYP
 
	tPFNGLDRAWELEMENTSINSTANCEDEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 * 
	tödi˚s
, GLsizeò
	t¥imcou¡
);

9075 
GLEE_EXTERN
 
PFNGLDRAWARRAYSINSTANCEDEXTPROC
 
	gpglDøwAºaysIn°™˚dEXT
;

9076 
GLEE_EXTERN
 
PFNGLDRAWELEMENTSINSTANCEDEXTPROC
 
	gpglDøwEÀmítsIn°™˚dEXT
;

9077 
	#glDøwAºaysIn°™˚dEXT
 
pglDøwAºaysIn°™˚dEXT


	)

9078 
	#glDøwEÀmítsIn°™˚dEXT
 
pglDøwEÀmítsIn°™˚dEXT


	)

9083 #i‚de‡
GL_EXT_‰agmít_lightög


9084 
	#GL_EXT_‰agmít_lightög
 1

	)

9085 
	#__GLEE_GL_EXT_‰agmít_lightög
 1

	)

9087 
	#GL_FRAGMENT_LIGHTING_EXT
 0x8400

	)

9088 
	#GL_FRAGMENT_COLOR_MATERIAL_EXT
 0x8401

	)

9089 
	#GL_FRAGMENT_COLOR_MATERIAL_FACE_EXT
 0x8402

	)

9090 
	#GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_EXT
 0x8403

	)

9091 
	#GL_MAX_FRAGMENT_LIGHTS_EXT
 0x8404

	)

9092 
	#GL_MAX_ACTIVE_LIGHTS_EXT
 0x8405

	)

9093 
	#GL_CURRENT_RASTER_NORMAL_EXT
 0x8406

	)

9094 
	#GL_LIGHT_ENV_MODE_EXT
 0x8407

	)

9095 
	#GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_EXT
 0x8408

	)

9096 
	#GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_EXT
 0x8409

	)

9097 
	#GL_FRAGMENT_LIGHT_MODEL_AMBIENT_EXT
 0x840A

	)

9098 
	#GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_EXT
 0x840B

	)

9099 
	#GL_FRAGMENT_LIGHT0_EXT
 0x840C

	)

9100 
	#GL_FRAGMENT_LIGHT7_EXT
 0x8413

	)

9101 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLFRAGMENTLIGHTMODELIEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

9102 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLFRAGMENTLIGHTMODELFEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

9103 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLFRAGMENTLIGHTMODELIVEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

9104 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLFRAGMENTLIGHTMODELFVEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

9105 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLFRAGMENTLIGHTIEXTPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

9106 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLFRAGMENTLIGHTFEXTPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

9107 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLFRAGMENTLIGHTIVEXTPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

9108 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLFRAGMENTLIGHTFVEXTPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

9109 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLGETFRAGMENTLIGHTIVEXTPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLöt
 * 
	t∑øms
);

9110 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLGETFRAGMENTLIGHTFVEXTPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 * 
	t∑øms
);

9111 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLFRAGMENTMATERIALFEXTPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 
	t∑øm
);

9112 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLFRAGMENTMATERIALIEXTPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 
	t∑øm
);

9113 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLFRAGMENTMATERIALFVEXTPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

9114 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLFRAGMENTMATERIALIVEXTPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

9115 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLFRAGMENTCOLORMATERIALEXTPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tmode
);

9116 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLGETFRAGMENTMATERIALFVEXTPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 * 
	t∑øms
);

9117 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLGETFRAGMENTMATERIALIVEXTPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 * 
	t∑øms
);

9118 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLLIGHTENVIEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

9119 
GLEE_EXTERN
 
PFNGLFRAGMENTLIGHTMODELIEXTPROC
 
	gpglFøgmítLightModñiEXT
;

9120 
GLEE_EXTERN
 
PFNGLFRAGMENTLIGHTMODELFEXTPROC
 
	gpglFøgmítLightModñfEXT
;

9121 
GLEE_EXTERN
 
PFNGLFRAGMENTLIGHTMODELIVEXTPROC
 
	gpglFøgmítLightModñivEXT
;

9122 
GLEE_EXTERN
 
PFNGLFRAGMENTLIGHTMODELFVEXTPROC
 
	gpglFøgmítLightModñfvEXT
;

9123 
GLEE_EXTERN
 
PFNGLFRAGMENTLIGHTIEXTPROC
 
	gpglFøgmítLightiEXT
;

9124 
GLEE_EXTERN
 
PFNGLFRAGMENTLIGHTFEXTPROC
 
	gpglFøgmítLightfEXT
;

9125 
GLEE_EXTERN
 
PFNGLFRAGMENTLIGHTIVEXTPROC
 
	gpglFøgmítLightivEXT
;

9126 
GLEE_EXTERN
 
PFNGLFRAGMENTLIGHTFVEXTPROC
 
	gpglFøgmítLightfvEXT
;

9127 
GLEE_EXTERN
 
PFNGLGETFRAGMENTLIGHTIVEXTPROC
 
	gpglGëFøgmítLightivEXT
;

9128 
GLEE_EXTERN
 
PFNGLGETFRAGMENTLIGHTFVEXTPROC
 
	gpglGëFøgmítLightfvEXT
;

9129 
GLEE_EXTERN
 
PFNGLFRAGMENTMATERIALFEXTPROC
 
	gpglFøgmítM©îülfEXT
;

9130 
GLEE_EXTERN
 
PFNGLFRAGMENTMATERIALIEXTPROC
 
	gpglFøgmítM©îüliEXT
;

9131 
GLEE_EXTERN
 
PFNGLFRAGMENTMATERIALFVEXTPROC
 
	gpglFøgmítM©îülfvEXT
;

9132 
GLEE_EXTERN
 
PFNGLFRAGMENTMATERIALIVEXTPROC
 
	gpglFøgmítM©îülivEXT
;

9133 
GLEE_EXTERN
 
PFNGLFRAGMENTCOLORMATERIALEXTPROC
 
	gpglFøgmítCﬁ‹M©îülEXT
;

9134 
GLEE_EXTERN
 
PFNGLGETFRAGMENTMATERIALFVEXTPROC
 
	gpglGëFøgmítM©îülfvEXT
;

9135 
GLEE_EXTERN
 
PFNGLGETFRAGMENTMATERIALIVEXTPROC
 
	gpglGëFøgmítM©îülivEXT
;

9136 
GLEE_EXTERN
 
PFNGLLIGHTENVIEXTPROC
 
	gpglLightEnviEXT
;

9137 
	#glFøgmítLightModñiEXT
 
pglFøgmítLightModñiEXT


	)

9138 
	#glFøgmítLightModñfEXT
 
pglFøgmítLightModñfEXT


	)

9139 
	#glFøgmítLightModñivEXT
 
pglFøgmítLightModñivEXT


	)

9140 
	#glFøgmítLightModñfvEXT
 
pglFøgmítLightModñfvEXT


	)

9141 
	#glFøgmítLightiEXT
 
pglFøgmítLightiEXT


	)

9142 
	#glFøgmítLightfEXT
 
pglFøgmítLightfEXT


	)

9143 
	#glFøgmítLightivEXT
 
pglFøgmítLightivEXT


	)

9144 
	#glFøgmítLightfvEXT
 
pglFøgmítLightfvEXT


	)

9145 
	#glGëFøgmítLightivEXT
 
pglGëFøgmítLightivEXT


	)

9146 
	#glGëFøgmítLightfvEXT
 
pglGëFøgmítLightfvEXT


	)

9147 
	#glFøgmítM©îülfEXT
 
pglFøgmítM©îülfEXT


	)

9148 
	#glFøgmítM©îüliEXT
 
pglFøgmítM©îüliEXT


	)

9149 
	#glFøgmítM©îülfvEXT
 
pglFøgmítM©îülfvEXT


	)

9150 
	#glFøgmítM©îülivEXT
 
pglFøgmítM©îülivEXT


	)

9151 
	#glFøgmítCﬁ‹M©îülEXT
 
pglFøgmítCﬁ‹M©îülEXT


	)

9152 
	#glGëFøgmítM©îülfvEXT
 
pglGëFøgmítM©îülfvEXT


	)

9153 
	#glGëFøgmítM©îülivEXT
 
pglGëFøgmítM©îülivEXT


	)

9154 
	#glLightEnviEXT
 
pglLightEnviEXT


	)

9159 #i‚de‡
GL_EXT_∑cked_dïth_°ícû


9160 
	#GL_EXT_∑cked_dïth_°ícû
 1

	)

9161 
	#__GLEE_GL_EXT_∑cked_dïth_°ícû
 1

	)

9163 
	#GL_DEPTH_STENCIL_EXT
 0x84F9

	)

9164 
	#GL_UNSIGNED_INT_24_8_EXT
 0x84FA

	)

9165 
	#GL_DEPTH24_STENCIL8_EXT
 0x88F0

	)

9166 
	#GL_TEXTURE_STENCIL_SIZE_EXT
 0x88F1

	)

9171 #i‚de‡
GL_EXT_s˚√_m¨kî


9172 
	#GL_EXT_s˚√_m¨kî
 1

	)

9173 
	#__GLEE_GL_EXT_s˚√_m¨kî
 1

	)

9175 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLBEGINSCENEEXTPROC
) ();

9176 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLENDSCENEEXTPROC
) ();

9177 
GLEE_EXTERN
 
PFNGLBEGINSCENEEXTPROC
 
	gpglBegöS˚√EXT
;

9178 
GLEE_EXTERN
 
PFNGLENDSCENEEXTPROC
 
	gpglEndS˚√EXT
;

9179 
	#glBegöS˚√EXT
 
pglBegöS˚√EXT


	)

9180 
	#glEndS˚√EXT
 
pglEndS˚√EXT


	)

9185 #i‚de‡
GL_EXT_°ícû_˛ór_èg


9186 
	#GL_EXT_°ícû_˛ór_èg
 1

	)

9187 
	#__GLEE_GL_EXT_°ícû_˛ór_èg
 1

	)

9189 
	#GL_STENCIL_TAG_BITS_EXT
 0x88F2

	)

9190 
	#GL_STENCIL_CLEAR_TAG_VALUE_EXT
 0x88F3

	)

9195 #i‚de‡
GL_EXT_ãxtuª_com¥essi⁄_dxt1


9196 
	#GL_EXT_ãxtuª_com¥essi⁄_dxt1
 1

	)

9197 
	#__GLEE_GL_EXT_ãxtuª_com¥essi⁄_dxt1
 1

	)

9199 
	#GL_COMPRESSED_RGB_S3TC_DXT1_EXT
 0x83F0

	)

9200 
	#GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
 0x83F1

	)

9205 #i‚de‡
GL_EXT_ãxtuª_ív


9206 
	#GL_EXT_ãxtuª_ív
 1

	)

9207 
	#__GLEE_GL_EXT_ãxtuª_ív
 1

	)

9209 
	#GL_TEXTURE_ENV0_EXT
 0

	)

9210 
	#GL_TEXTURE_ENV_MODE_ALPHA_EXT
 0

	)

9211 
	#GL_ENV_COPY_EXT
 0

	)

9212 
	#GL_ENV_REPLACE_EXT
 0

	)

9213 
	#GL_ENV_MODULATE_EXT
 0

	)

9214 
	#GL_ENV_ADD_EXT
 0

	)

9215 
	#GL_ENV_SUBTRACT_EXT
 0

	)

9216 
	#GL_ENV_REVERSE_SUBTRACT_EXT
 0

	)

9217 
	#GL_ENV_BLEND_EXT
 0

	)

9218 
	#GL_ENV_REVERSE_BLEND_EXT
 0

	)

9219 
	#GL_TEXTURE_ENV_SHIFT_EXT
 0

	)

9224 #i‚de‡
GL_EXT_ãxtuª_sRGB


9225 
	#GL_EXT_ãxtuª_sRGB
 1

	)

9226 
	#__GLEE_GL_EXT_ãxtuª_sRGB
 1

	)

9228 
	#GL_SRGB_EXT
 0x8C40

	)

9229 
	#GL_SRGB8_EXT
 0x8C41

	)

9230 
	#GL_SRGB_ALPHA_EXT
 0x8C42

	)

9231 
	#GL_SRGB8_ALPHA8_EXT
 0x8C43

	)

9232 
	#GL_SLUMINANCE_ALPHA_EXT
 0x8C44

	)

9233 
	#GL_SLUMINANCE8_ALPHA8_EXT
 0x8C45

	)

9234 
	#GL_SLUMINANCE_EXT
 0x8C46

	)

9235 
	#GL_SLUMINANCE8_EXT
 0x8C47

	)

9236 
	#GL_COMPRESSED_SRGB_EXT
 0x8C48

	)

9237 
	#GL_COMPRESSED_SRGB_ALPHA_EXT
 0x8C49

	)

9238 
	#GL_COMPRESSED_SLUMINANCE_EXT
 0x8C4A

	)

9239 
	#GL_COMPRESSED_SLUMINANCE_ALPHA_EXT
 0x8C4B

	)

9240 
	#GL_COMPRESSED_SRGB_S3TC_DXT1_EXT
 0x8C4C

	)

9241 
	#GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT
 0x8C4D

	)

9242 
	#GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT
 0x8C4E

	)

9243 
	#GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT
 0x8C4F

	)

9248 #i‚de‡
GL_IBM_°©ic_d©a


9249 
	#GL_IBM_°©ic_d©a
 1

	)

9250 
	#__GLEE_GL_IBM_°©ic_d©a
 1

	)

9252 
	#GL_ALL_STATIC_DATA_IBM
 103060

	)

9253 
	#GL_STATIC_VERTEX_ARRAY_IBM
 103061

	)

9258 #i‚de‡
GL_MESAX_ãxtuª_°ack


9259 
	#GL_MESAX_ãxtuª_°ack
 1

	)

9260 
	#__GLEE_GL_MESAX_ãxtuª_°ack
 1

	)

9262 
	#GL_TEXTURE_1D_STACK_MESAX
 0x8759

	)

9263 
	#GL_TEXTURE_2D_STACK_MESAX
 0x875A

	)

9264 
	#GL_PROXY_TEXTURE_1D_STACK_MESAX
 0x875B

	)

9265 
	#GL_PROXY_TEXTURE_2D_STACK_MESAX
 0x875C

	)

9266 
	#GL_TEXTURE_1D_STACK_BINDING_MESAX
 0x875D

	)

9267 
	#GL_TEXTURE_2D_STACK_BINDING_MESAX
 0x875E

	)

9272 #i‚de‡
GL_OES_byã_co‹dö©es


9273 
	#GL_OES_byã_co‹dö©es
 1

	)

9274 
	#__GLEE_GL_OES_byã_co‹dö©es
 1

	)

9276 
	#GL_BYTE
 0x1400

	)

9281 #i‚de‡
GL_OES_com¥es£d_∑Àâed_ãxtuª


9282 
	#GL_OES_com¥es£d_∑Àâed_ãxtuª
 1

	)

9283 
	#__GLEE_GL_OES_com¥es£d_∑Àâed_ãxtuª
 1

	)

9285 
	#GL_PALETTE4_RGB8_OES
 0x8B90

	)

9286 
	#GL_PALETTE4_RGBA8_OES
 0x8B91

	)

9287 
	#GL_PALETTE4_R5_G6_B5_OES
 0x8B92

	)

9288 
	#GL_PALETTE4_RGBA4_OES
 0x8B93

	)

9289 
	#GL_PALETTE4_RGB5_A1_OES
 0x8B94

	)

9290 
	#GL_PALETTE8_RGB8_OES
 0x8B95

	)

9291 
	#GL_PALETTE8_RGBA8_OES
 0x8B96

	)

9292 
	#GL_PALETTE8_R5_G6_B5_OES
 0x8B97

	)

9293 
	#GL_PALETTE8_RGBA4_OES
 0x8B98

	)

9294 
	#GL_PALETTE8_RGB5_A1_OES
 0x8B99

	)

9299 #i‚de‡
GL_OES_sögÀ_¥ecisi⁄


9300 
	#GL_OES_sögÀ_¥ecisi⁄
 1

	)

9301 
	#__GLEE_GL_OES_sögÀ_¥ecisi⁄
 1

	)

9303 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLDEPTHRANGEFOESPROC
Ë(
	tGL˛ampf
 
	tn
, GL˛amp‡
	tf
);

9304 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLFRUSTUMFOESPROC
Ë(
	tGLÊﬂt
 
	tl
, GLÊﬂà
	tr
, GLÊﬂà
	tb
, GLÊﬂà
	tt
, GLÊﬂà
	tn
, GLÊﬂà
	tf
);

9305 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLORTHOFOESPROC
Ë(
	tGLÊﬂt
 
	tl
, GLÊﬂà
	tr
, GLÊﬂà
	tb
, GLÊﬂà
	tt
, GLÊﬂà
	tn
, GLÊﬂà
	tf
);

9306 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLCLIPPLANEFOESPROC
Ë(
	tGLíum
 
	t∂™e
, c⁄° 
	tGLÊﬂt
* 
	tequ©i⁄
);

9307 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLGETCLIPPLANEFOESPROC
Ë(
	tGLíum
 
	t∂™e
, 
	tGLÊﬂt
* 
	tequ©i⁄
);

9308 
GLvoid
 (
	tAPIENTRYP
 
	tPFNGLCLEARDEPTHFOESPROC
Ë(
	tGL˛ampd
 
	tdïth
);

9309 
GLEE_EXTERN
 
PFNGLDEPTHRANGEFOESPROC
 
	gpglDïthR™gefOES
;

9310 
GLEE_EXTERN
 
PFNGLFRUSTUMFOESPROC
 
	gpglFru°umfOES
;

9311 
GLEE_EXTERN
 
PFNGLORTHOFOESPROC
 
	gpglOπhofOES
;

9312 
GLEE_EXTERN
 
PFNGLCLIPPLANEFOESPROC
 
	gpglClùPœ√fOES
;

9313 
GLEE_EXTERN
 
PFNGLGETCLIPPLANEFOESPROC
 
	gpglGëClùPœ√fOES
;

9314 
GLEE_EXTERN
 
PFNGLCLEARDEPTHFOESPROC
 
	gpglCÀ¨DïthfOES
;

9315 
	#glDïthR™gefOES
 
pglDïthR™gefOES


	)

9316 
	#glFru°umfOES
 
pglFru°umfOES


	)

9317 
	#glOπhofOES
 
pglOπhofOES


	)

9318 
	#glClùPœ√fOES
 
pglClùPœ√fOES


	)

9319 
	#glGëClùPœ√fOES
 
pglGëClùPœ√fOES


	)

9320 
	#glCÀ¨DïthfOES
 
pglCÀ¨DïthfOES


	)

9325 #i‚de‡
GL_SGIX_pixñ_ãxtuª_bôs


9326 
	#GL_SGIX_pixñ_ãxtuª_bôs
 1

	)

9327 
	#__GLEE_GL_SGIX_pixñ_ãxtuª_bôs
 1

	)

9333 #i‚de‡
GL_SGIX_ãxtuª_ønge


9334 
	#GL_SGIX_ãxtuª_ønge
 1

	)

9335 
	#__GLEE_GL_SGIX_ãxtuª_ønge
 1

	)

9337 
	#GL_RGB_SIGNED_SGIX
 0x85E0

	)

9338 
	#GL_RGBA_SIGNED_SGIX
 0x85E1

	)

9339 
	#GL_ALPHA_SIGNED_SGIX
 0x85E2

	)

9340 
	#GL_LUMINANCE_SIGNED_SGIX
 0x85E3

	)

9341 
	#GL_INTENSITY_SIGNED_SGIX
 0x85E4

	)

9342 
	#GL_LUMINANCE_ALPHA_SIGNED_SGIX
 0x85E5

	)

9343 
	#GL_RGB16_SIGNED_SGIX
 0x85E6

	)

9344 
	#GL_RGBA16_SIGNED_SGIX
 0x85E7

	)

9345 
	#GL_ALPHA16_SIGNED_SGIX
 0x85E8

	)

9346 
	#GL_LUMINANCE16_SIGNED_SGIX
 0x85E9

	)

9347 
	#GL_INTENSITY16_SIGNED_SGIX
 0x85EA

	)

9348 
	#GL_LUMINANCE16_ALPHA16_SIGNED_SGIX
 0x85EB

	)

9349 
	#GL_RGB_EXTENDED_RANGE_SGIX
 0x85EC

	)

9350 
	#GL_RGBA_EXTENDED_RANGE_SGIX
 0x85ED

	)

9351 
	#GL_ALPHA_EXTENDED_RANGE_SGIX
 0x85EE

	)

9352 
	#GL_LUMINANCE_EXTENDED_RANGE_SGIX
 0x85EF

	)

9353 
	#GL_INTENSITY_EXTENDED_RANGE_SGIX
 0x85F0

	)

9354 
	#GL_LUMINANCE_ALPHA_EXTENDED_RANGE_SGIX
 0x85F1

	)

9355 
	#GL_RGB16_EXTENDED_RANGE_SGIX
 0x85F2

	)

9356 
	#GL_RGBA16_EXTENDED_RANGE_SGIX
 0x85F3

	)

9357 
	#GL_ALPHA16_EXTENDED_RANGE_SGIX
 0x85F4

	)

9358 
	#GL_LUMINANCE16_EXTENDED_RANGE_SGIX
 0x85F5

	)

9359 
	#GL_INTENSITY16_EXTENDED_RANGE_SGIX
 0x85F6

	)

9360 
	#GL_LUMINANCE16_ALPHA16_EXTENDED_RANGE_SGIX
 0x85F7

	)

9361 
	#GL_MIN_LUMINANCE_SGIS
 0x85F8

	)

9362 
	#GL_MAX_LUMINANCE_SGIS
 0x85F9

	)

9363 
	#GL_MIN_INTENSITY_SGIS
 0x85FA

	)

9364 
	#GL_MAX_INTENSITY_SGIS
 0x85FB

	)

9369 #ifde‡
WIN32


9373 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_ARB_buf„r_ªgi⁄
;

9374 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_ARB_mu…ißm∂e
;

9375 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_ARB_exãnsi⁄s_°rög
;

9376 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_ARB_pixñ_f‹m©
;

9377 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_ARB_make_cuºít_ªad
;

9378 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_ARB_pbuf„r
;

9379 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_ARB_ªndî_ãxtuª
;

9380 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_ARB_pixñ_f‹m©_Êﬂt
;

9381 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_EXT_make_cuºít_ªad
;

9382 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_EXT_pixñ_f‹m©
;

9383 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_EXT_pbuf„r
;

9384 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_EXT_dïth_Êﬂt
;

9385 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_3DFX_mu…ißm∂e
;

9386 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_EXT_mu…ißm∂e
;

9387 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_I3D_digôÆ_video_c⁄åﬁ
;

9388 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_I3D_gamma
;

9389 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_I3D_gílock
;

9390 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_I3D_image_buf„r
;

9391 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_I3D_sw≠_‰ame_lock
;

9392 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_NV_ªndî_dïth_ãxtuª
;

9393 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_NV_ªndî_ãxtuª_ª˘™gÀ
;

9394 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_ATI_pixñ_f‹m©_Êﬂt
;

9395 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_NV_Êﬂt_buf„r
;

9396 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_EXT_di•œy_cﬁ‹_èbÀ
;

9397 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_EXT_exãnsi⁄s_°rög
;

9398 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_EXT_sw≠_c⁄åﬁ
;

9399 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_NV_vîãx_¨øy_ønge
;

9400 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_OML_sync_c⁄åﬁ
;

9401 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_I3D_sw≠_‰ame_ußge
;

9402 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_WGL_3DL_°îeo_c⁄åﬁ
;

9406 
	#GLEE_WGL_ARB_buf„r_ªgi⁄
 
	`GLìE«bÀd
(&
_GLEE_WGL_ARB_buf„r_ªgi⁄
)

	)

9407 
	#GLEE_WGL_ARB_mu…ißm∂e
 
	`GLìE«bÀd
(&
_GLEE_WGL_ARB_mu…ißm∂e
)

	)

9408 
	#GLEE_WGL_ARB_exãnsi⁄s_°rög
 
	`GLìE«bÀd
(&
_GLEE_WGL_ARB_exãnsi⁄s_°rög
)

	)

9409 
	#GLEE_WGL_ARB_pixñ_f‹m©
 
	`GLìE«bÀd
(&
_GLEE_WGL_ARB_pixñ_f‹m©
)

	)

9410 
	#GLEE_WGL_ARB_make_cuºít_ªad
 
	`GLìE«bÀd
(&
_GLEE_WGL_ARB_make_cuºít_ªad
)

	)

9411 
	#GLEE_WGL_ARB_pbuf„r
 
	`GLìE«bÀd
(&
_GLEE_WGL_ARB_pbuf„r
)

	)

9412 
	#GLEE_WGL_ARB_ªndî_ãxtuª
 
	`GLìE«bÀd
(&
_GLEE_WGL_ARB_ªndî_ãxtuª
)

	)

9413 
	#GLEE_WGL_ARB_pixñ_f‹m©_Êﬂt
 
	`GLìE«bÀd
(&
_GLEE_WGL_ARB_pixñ_f‹m©_Êﬂt
)

	)

9414 
	#GLEE_WGL_EXT_make_cuºít_ªad
 
	`GLìE«bÀd
(&
_GLEE_WGL_EXT_make_cuºít_ªad
)

	)

9415 
	#GLEE_WGL_EXT_pixñ_f‹m©
 
	`GLìE«bÀd
(&
_GLEE_WGL_EXT_pixñ_f‹m©
)

	)

9416 
	#GLEE_WGL_EXT_pbuf„r
 
	`GLìE«bÀd
(&
_GLEE_WGL_EXT_pbuf„r
)

	)

9417 
	#GLEE_WGL_EXT_dïth_Êﬂt
 
	`GLìE«bÀd
(&
_GLEE_WGL_EXT_dïth_Êﬂt
)

	)

9418 
	#GLEE_WGL_3DFX_mu…ißm∂e
 
	`GLìE«bÀd
(&
_GLEE_WGL_3DFX_mu…ißm∂e
)

	)

9419 
	#GLEE_WGL_EXT_mu…ißm∂e
 
	`GLìE«bÀd
(&
_GLEE_WGL_EXT_mu…ißm∂e
)

	)

9420 
	#GLEE_WGL_I3D_digôÆ_video_c⁄åﬁ
 
	`GLìE«bÀd
(&
_GLEE_WGL_I3D_digôÆ_video_c⁄åﬁ
)

	)

9421 
	#GLEE_WGL_I3D_gamma
 
	`GLìE«bÀd
(&
_GLEE_WGL_I3D_gamma
)

	)

9422 
	#GLEE_WGL_I3D_gílock
 
	`GLìE«bÀd
(&
_GLEE_WGL_I3D_gílock
)

	)

9423 
	#GLEE_WGL_I3D_image_buf„r
 
	`GLìE«bÀd
(&
_GLEE_WGL_I3D_image_buf„r
)

	)

9424 
	#GLEE_WGL_I3D_sw≠_‰ame_lock
 
	`GLìE«bÀd
(&
_GLEE_WGL_I3D_sw≠_‰ame_lock
)

	)

9425 
	#GLEE_WGL_NV_ªndî_dïth_ãxtuª
 
	`GLìE«bÀd
(&
_GLEE_WGL_NV_ªndî_dïth_ãxtuª
)

	)

9426 
	#GLEE_WGL_NV_ªndî_ãxtuª_ª˘™gÀ
 
	`GLìE«bÀd
(&
_GLEE_WGL_NV_ªndî_ãxtuª_ª˘™gÀ
)

	)

9427 
	#GLEE_WGL_ATI_pixñ_f‹m©_Êﬂt
 
	`GLìE«bÀd
(&
_GLEE_WGL_ATI_pixñ_f‹m©_Êﬂt
)

	)

9428 
	#GLEE_WGL_NV_Êﬂt_buf„r
 
	`GLìE«bÀd
(&
_GLEE_WGL_NV_Êﬂt_buf„r
)

	)

9429 
	#GLEE_WGL_EXT_di•œy_cﬁ‹_èbÀ
 
	`GLìE«bÀd
(&
_GLEE_WGL_EXT_di•œy_cﬁ‹_èbÀ
)

	)

9430 
	#GLEE_WGL_EXT_exãnsi⁄s_°rög
 
	`GLìE«bÀd
(&
_GLEE_WGL_EXT_exãnsi⁄s_°rög
)

	)

9431 
	#GLEE_WGL_EXT_sw≠_c⁄åﬁ
 
	`GLìE«bÀd
(&
_GLEE_WGL_EXT_sw≠_c⁄åﬁ
)

	)

9432 
	#GLEE_WGL_NV_vîãx_¨øy_ønge
 
	`GLìE«bÀd
(&
_GLEE_WGL_NV_vîãx_¨øy_ønge
)

	)

9433 
	#GLEE_WGL_OML_sync_c⁄åﬁ
 
	`GLìE«bÀd
(&
_GLEE_WGL_OML_sync_c⁄åﬁ
)

	)

9434 
	#GLEE_WGL_I3D_sw≠_‰ame_ußge
 
	`GLìE«bÀd
(&
_GLEE_WGL_I3D_sw≠_‰ame_ußge
)

	)

9435 
	#GLEE_WGL_3DL_°îeo_c⁄åﬁ
 
	`GLìE«bÀd
(&
_GLEE_WGL_3DL_°îeo_c⁄åﬁ
)

	)

9439 #i‚de‡
WGL_ARB_buf„r_ªgi⁄


9440 
	#WGL_ARB_buf„r_ªgi⁄
 1

	)

9441 
	#__GLEE_WGL_ARB_buf„r_ªgi⁄
 1

	)

9443 
	#WGL_FRONT_COLOR_BUFFER_BIT_ARB
 0x00000001

	)

9444 
	#WGL_BACK_COLOR_BUFFER_BIT_ARB
 0x00000002

	)

9445 
	#WGL_DEPTH_BUFFER_BIT_ARB
 0x00000004

	)

9446 
	#WGL_STENCIL_BUFFER_BIT_ARB
 0x00000008

	)

9447 
HANDLE
 (
	tAPIENTRYP
 
	tPFNWGLCREATEBUFFERREGIONARBPROC
Ë(
	tHDC
 
	thDC
, 
	tiLayîPœ√
, 
	tUINT
 
	tuTy≥
);

9448 
VOID
 (
	tAPIENTRYP
 
	tPFNWGLDELETEBUFFERREGIONARBPROC
Ë(
	tHANDLE
 
	thRegi⁄
);

9449 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLSAVEBUFFERREGIONARBPROC
Ë(
	tHANDLE
 
	thRegi⁄
, 
	tx
, 
	ty
, 
	twidth
, 
	theight
);

9450 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLRESTOREBUFFERREGIONARBPROC
Ë(
	tHANDLE
 
	thRegi⁄
, 
	tx
, 
	ty
, 
	twidth
, 
	theight
, 
	txSrc
, 
	tySrc
);

9451 
GLEE_EXTERN
 
PFNWGLCREATEBUFFERREGIONARBPROC
 
	gpwglCª©eBuf„rRegi⁄ARB
;

9452 
GLEE_EXTERN
 
PFNWGLDELETEBUFFERREGIONARBPROC
 
	gpwglDñëeBuf„rRegi⁄ARB
;

9453 
GLEE_EXTERN
 
PFNWGLSAVEBUFFERREGIONARBPROC
 
	gpwglSaveBuf„rRegi⁄ARB
;

9454 
GLEE_EXTERN
 
PFNWGLRESTOREBUFFERREGIONARBPROC
 
	gpwglRe°‹eBuf„rRegi⁄ARB
;

9455 
	#wglCª©eBuf„rRegi⁄ARB
 
pwglCª©eBuf„rRegi⁄ARB


	)

9456 
	#wglDñëeBuf„rRegi⁄ARB
 
pwglDñëeBuf„rRegi⁄ARB


	)

9457 
	#wglSaveBuf„rRegi⁄ARB
 
pwglSaveBuf„rRegi⁄ARB


	)

9458 
	#wglRe°‹eBuf„rRegi⁄ARB
 
pwglRe°‹eBuf„rRegi⁄ARB


	)

9463 #i‚de‡
WGL_ARB_mu…ißm∂e


9464 
	#WGL_ARB_mu…ißm∂e
 1

	)

9465 
	#__GLEE_WGL_ARB_mu…ißm∂e
 1

	)

9467 
	#WGL_SAMPLE_BUFFERS_ARB
 0x2041

	)

9468 
	#WGL_SAMPLES_ARB
 0x2042

	)

9473 #i‚de‡
WGL_ARB_exãnsi⁄s_°rög


9474 
	#WGL_ARB_exãnsi⁄s_°rög
 1

	)

9475 
	#__GLEE_WGL_ARB_exãnsi⁄s_°rög
 1

	)

9477 c⁄° * (
	tAPIENTRYP
 
	tPFNWGLGETEXTENSIONSSTRINGARBPROC
Ë(
	tHDC
 
	thdc
);

9478 
GLEE_EXTERN
 
PFNWGLGETEXTENSIONSSTRINGARBPROC
 
	gpwglGëExãnsi⁄sSåögARB
;

9479 
	#wglGëExãnsi⁄sSåögARB
 
pwglGëExãnsi⁄sSåögARB


	)

9484 #i‚de‡
WGL_ARB_pixñ_f‹m©


9485 
	#WGL_ARB_pixñ_f‹m©
 1

	)

9486 
	#__GLEE_WGL_ARB_pixñ_f‹m©
 1

	)

9488 
	#WGL_NUMBER_PIXEL_FORMATS_ARB
 0x2000

	)

9489 
	#WGL_DRAW_TO_WINDOW_ARB
 0x2001

	)

9490 
	#WGL_DRAW_TO_BITMAP_ARB
 0x2002

	)

9491 
	#WGL_ACCELERATION_ARB
 0x2003

	)

9492 
	#WGL_NEED_PALETTE_ARB
 0x2004

	)

9493 
	#WGL_NEED_SYSTEM_PALETTE_ARB
 0x2005

	)

9494 
	#WGL_SWAP_LAYER_BUFFERS_ARB
 0x2006

	)

9495 
	#WGL_SWAP_METHOD_ARB
 0x2007

	)

9496 
	#WGL_NUMBER_OVERLAYS_ARB
 0x2008

	)

9497 
	#WGL_NUMBER_UNDERLAYS_ARB
 0x2009

	)

9498 
	#WGL_TRANSPARENT_ARB
 0x200A

	)

9499 
	#WGL_TRANSPARENT_RED_VALUE_ARB
 0x2037

	)

9500 
	#WGL_TRANSPARENT_GREEN_VALUE_ARB
 0x2038

	)

9501 
	#WGL_TRANSPARENT_BLUE_VALUE_ARB
 0x2039

	)

9502 
	#WGL_TRANSPARENT_ALPHA_VALUE_ARB
 0x203A

	)

9503 
	#WGL_TRANSPARENT_INDEX_VALUE_ARB
 0x203B

	)

9504 
	#WGL_SHARE_DEPTH_ARB
 0x200C

	)

9505 
	#WGL_SHARE_STENCIL_ARB
 0x200D

	)

9506 
	#WGL_SHARE_ACCUM_ARB
 0x200E

	)

9507 
	#WGL_SUPPORT_GDI_ARB
 0x200F

	)

9508 
	#WGL_SUPPORT_OPENGL_ARB
 0x2010

	)

9509 
	#WGL_DOUBLE_BUFFER_ARB
 0x2011

	)

9510 
	#WGL_STEREO_ARB
 0x2012

	)

9511 
	#WGL_PIXEL_TYPE_ARB
 0x2013

	)

9512 
	#WGL_COLOR_BITS_ARB
 0x2014

	)

9513 
	#WGL_RED_BITS_ARB
 0x2015

	)

9514 
	#WGL_RED_SHIFT_ARB
 0x2016

	)

9515 
	#WGL_GREEN_BITS_ARB
 0x2017

	)

9516 
	#WGL_GREEN_SHIFT_ARB
 0x2018

	)

9517 
	#WGL_BLUE_BITS_ARB
 0x2019

	)

9518 
	#WGL_BLUE_SHIFT_ARB
 0x201A

	)

9519 
	#WGL_ALPHA_BITS_ARB
 0x201B

	)

9520 
	#WGL_ALPHA_SHIFT_ARB
 0x201C

	)

9521 
	#WGL_ACCUM_BITS_ARB
 0x201D

	)

9522 
	#WGL_ACCUM_RED_BITS_ARB
 0x201E

	)

9523 
	#WGL_ACCUM_GREEN_BITS_ARB
 0x201F

	)

9524 
	#WGL_ACCUM_BLUE_BITS_ARB
 0x2020

	)

9525 
	#WGL_ACCUM_ALPHA_BITS_ARB
 0x2021

	)

9526 
	#WGL_DEPTH_BITS_ARB
 0x2022

	)

9527 
	#WGL_STENCIL_BITS_ARB
 0x2023

	)

9528 
	#WGL_AUX_BUFFERS_ARB
 0x2024

	)

9529 
	#WGL_NO_ACCELERATION_ARB
 0x2025

	)

9530 
	#WGL_GENERIC_ACCELERATION_ARB
 0x2026

	)

9531 
	#WGL_FULL_ACCELERATION_ARB
 0x2027

	)

9532 
	#WGL_SWAP_EXCHANGE_ARB
 0x2028

	)

9533 
	#WGL_SWAP_COPY_ARB
 0x2029

	)

9534 
	#WGL_SWAP_UNDEFINED_ARB
 0x202A

	)

9535 
	#WGL_TYPE_RGBA_ARB
 0x202B

	)

9536 
	#WGL_TYPE_COLORINDEX_ARB
 0x202C

	)

9537 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGETPIXELFORMATATTRIBIVARBPROC
Ë(
	tHDC
 
	thdc
, 
	tiPixñF‹m©
, 
	tiLayîPœ√
, 
	tUINT
 
	tnAâribuãs
, c⁄° * 
	tpiAâribuãs
, * 
	tpiVÆues
);

9538 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGETPIXELFORMATATTRIBFVARBPROC
Ë(
	tHDC
 
	thdc
, 
	tiPixñF‹m©
, 
	tiLayîPœ√
, 
	tUINT
 
	tnAâribuãs
, c⁄° * 
	tpiAâribuãs
, 
	tFLOAT
 * 
	tpfVÆues
);

9539 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLCHOOSEPIXELFORMATARBPROC
Ë(
	tHDC
 
	thdc
, c⁄° * 
	tpiAâribILi°
, c⁄° 
	tFLOAT
 * 
	tpfAâribFLi°
, 
	tUINT
 
	tnMaxF‹m©s
, * 
	tpiF‹m©s
, UINT * 
	tnNumF‹m©s
);

9540 
GLEE_EXTERN
 
PFNWGLGETPIXELFORMATATTRIBIVARBPROC
 
	gpwglGëPixñF‹m©AâribivARB
;

9541 
GLEE_EXTERN
 
PFNWGLGETPIXELFORMATATTRIBFVARBPROC
 
	gpwglGëPixñF‹m©AâribfvARB
;

9542 
GLEE_EXTERN
 
PFNWGLCHOOSEPIXELFORMATARBPROC
 
	gpwglChoo£PixñF‹m©ARB
;

9543 
	#wglGëPixñF‹m©AâribivARB
 
pwglGëPixñF‹m©AâribivARB


	)

9544 
	#wglGëPixñF‹m©AâribfvARB
 
pwglGëPixñF‹m©AâribfvARB


	)

9545 
	#wglChoo£PixñF‹m©ARB
 
pwglChoo£PixñF‹m©ARB


	)

9550 #i‚de‡
WGL_ARB_make_cuºít_ªad


9551 
	#WGL_ARB_make_cuºít_ªad
 1

	)

9552 
	#__GLEE_WGL_ARB_make_cuºít_ªad
 1

	)

9554 
	#ERROR_INVALID_PIXEL_TYPE_ARB
 0x2043

	)

9555 
	#ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB
 0x2054

	)

9556 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLMAKECONTEXTCURRENTARBPROC
Ë(
	tHDC
 
	thDøwDC
, HDC 
	thRódDC
, 
	tHGLRC
 
	thgÃc
);

9557 
HDC
 (
	tAPIENTRYP
 
	tPFNWGLGETCURRENTREADDCARBPROC
) ();

9558 
GLEE_EXTERN
 
PFNWGLMAKECONTEXTCURRENTARBPROC
 
	gpwglMakeC⁄ãxtCuºítARB
;

9559 
GLEE_EXTERN
 
PFNWGLGETCURRENTREADDCARBPROC
 
	gpwglGëCuºítRódDCARB
;

9560 
	#wglMakeC⁄ãxtCuºítARB
 
pwglMakeC⁄ãxtCuºítARB


	)

9561 
	#wglGëCuºítRódDCARB
 
pwglGëCuºítRódDCARB


	)

9566 #i‚de‡
WGL_ARB_pbuf„r


9567 
	#WGL_ARB_pbuf„r
 1

	)

9568 
	#__GLEE_WGL_ARB_pbuf„r
 1

	)

9570 
	#WGL_DRAW_TO_PBUFFER_ARB
 0x202D

	)

9571 
	#WGL_MAX_PBUFFER_PIXELS_ARB
 0x202E

	)

9572 
	#WGL_MAX_PBUFFER_WIDTH_ARB
 0x202F

	)

9573 
	#WGL_MAX_PBUFFER_HEIGHT_ARB
 0x2030

	)

9574 
	#WGL_PBUFFER_LARGEST_ARB
 0x2033

	)

9575 
	#WGL_PBUFFER_WIDTH_ARB
 0x2034

	)

9576 
	#WGL_PBUFFER_HEIGHT_ARB
 0x2035

	)

9577 
	#WGL_PBUFFER_LOST_ARB
 0x2036

	)

9578 
HPBUFFERARB
 (
	tAPIENTRYP
 
	tPFNWGLCREATEPBUFFERARBPROC
Ë(
	tHDC
 
	thDC
, 
	tiPixñF‹m©
, 
	tiWidth
, 
	tiHeight
, c⁄° * 
	tpiAâribLi°
);

9579 
HDC
 (
	tAPIENTRYP
 
	tPFNWGLGETPBUFFERDCARBPROC
Ë(
	tHPBUFFERARB
 
	thPbuf„r
);

9580 (
APIENTRYP
 
	tPFNWGLRELEASEPBUFFERDCARBPROC
Ë(
	tHPBUFFERARB
 
	thPbuf„r
, 
	tHDC
 
	thDC
);

9581 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLDESTROYPBUFFERARBPROC
Ë(
	tHPBUFFERARB
 
	thPbuf„r
);

9582 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLQUERYPBUFFERARBPROC
Ë(
	tHPBUFFERARB
 
	thPbuf„r
, 
	tiAâribuã
, * 
	tpiVÆue
);

9583 
GLEE_EXTERN
 
PFNWGLCREATEPBUFFERARBPROC
 
	gpwglCª©ePbuf„rARB
;

9584 
GLEE_EXTERN
 
PFNWGLGETPBUFFERDCARBPROC
 
	gpwglGëPbuf„rDCARB
;

9585 
GLEE_EXTERN
 
PFNWGLRELEASEPBUFFERDCARBPROC
 
	gpwglRñó£Pbuf„rDCARB
;

9586 
GLEE_EXTERN
 
PFNWGLDESTROYPBUFFERARBPROC
 
	gpwglDe°royPbuf„rARB
;

9587 
GLEE_EXTERN
 
PFNWGLQUERYPBUFFERARBPROC
 
	gpwglQuîyPbuf„rARB
;

9588 
	#wglCª©ePbuf„rARB
 
pwglCª©ePbuf„rARB


	)

9589 
	#wglGëPbuf„rDCARB
 
pwglGëPbuf„rDCARB


	)

9590 
	#wglRñó£Pbuf„rDCARB
 
pwglRñó£Pbuf„rDCARB


	)

9591 
	#wglDe°royPbuf„rARB
 
pwglDe°royPbuf„rARB


	)

9592 
	#wglQuîyPbuf„rARB
 
pwglQuîyPbuf„rARB


	)

9597 #i‚de‡
WGL_ARB_ªndî_ãxtuª


9598 
	#WGL_ARB_ªndî_ãxtuª
 1

	)

9599 
	#__GLEE_WGL_ARB_ªndî_ãxtuª
 1

	)

9601 
	#WGL_BIND_TO_TEXTURE_RGB_ARB
 0x2070

	)

9602 
	#WGL_BIND_TO_TEXTURE_RGBA_ARB
 0x2071

	)

9603 
	#WGL_TEXTURE_FORMAT_ARB
 0x2072

	)

9604 
	#WGL_TEXTURE_TARGET_ARB
 0x2073

	)

9605 
	#WGL_MIPMAP_TEXTURE_ARB
 0x2074

	)

9606 
	#WGL_TEXTURE_RGB_ARB
 0x2075

	)

9607 
	#WGL_TEXTURE_RGBA_ARB
 0x2076

	)

9608 
	#WGL_NO_TEXTURE_ARB
 0x2077

	)

9609 
	#WGL_TEXTURE_CUBE_MAP_ARB
 0x2078

	)

9610 
	#WGL_TEXTURE_1D_ARB
 0x2079

	)

9611 
	#WGL_TEXTURE_2D_ARB
 0x207A

	)

9612 
	#WGL_MIPMAP_LEVEL_ARB
 0x207B

	)

9613 
	#WGL_CUBE_MAP_FACE_ARB
 0x207C

	)

9614 
	#WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
 0x207D

	)

9615 
	#WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
 0x207E

	)

9616 
	#WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
 0x207F

	)

9617 
	#WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
 0x2080

	)

9618 
	#WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
 0x2081

	)

9619 
	#WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
 0x2082

	)

9620 
	#WGL_FRONT_LEFT_ARB
 0x2083

	)

9621 
	#WGL_FRONT_RIGHT_ARB
 0x2084

	)

9622 
	#WGL_BACK_LEFT_ARB
 0x2085

	)

9623 
	#WGL_BACK_RIGHT_ARB
 0x2086

	)

9624 
	#WGL_AUX0_ARB
 0x2087

	)

9625 
	#WGL_AUX1_ARB
 0x2088

	)

9626 
	#WGL_AUX2_ARB
 0x2089

	)

9627 
	#WGL_AUX3_ARB
 0x208A

	)

9628 
	#WGL_AUX4_ARB
 0x208B

	)

9629 
	#WGL_AUX5_ARB
 0x208C

	)

9630 
	#WGL_AUX6_ARB
 0x208D

	)

9631 
	#WGL_AUX7_ARB
 0x208E

	)

9632 
	#WGL_AUX8_ARB
 0x208F

	)

9633 
	#WGL_AUX9_ARB
 0x2090

	)

9634 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLBINDTEXIMAGEARBPROC
Ë(
	tHPBUFFERARB
 
	thPbuf„r
, 
	tiBuf„r
);

9635 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLRELEASETEXIMAGEARBPROC
Ë(
	tHPBUFFERARB
 
	thPbuf„r
, 
	tiBuf„r
);

9636 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLSETPBUFFERATTRIBARBPROC
Ë(
	tHPBUFFERARB
 
	thPbuf„r
, c⁄° * 
	tpiAâribLi°
);

9637 
GLEE_EXTERN
 
PFNWGLBINDTEXIMAGEARBPROC
 
	gpwglBödTexImageARB
;

9638 
GLEE_EXTERN
 
PFNWGLRELEASETEXIMAGEARBPROC
 
	gpwglRñó£TexImageARB
;

9639 
GLEE_EXTERN
 
PFNWGLSETPBUFFERATTRIBARBPROC
 
	gpwglSëPbuf„rAâribARB
;

9640 
	#wglBödTexImageARB
 
pwglBödTexImageARB


	)

9641 
	#wglRñó£TexImageARB
 
pwglRñó£TexImageARB


	)

9642 
	#wglSëPbuf„rAâribARB
 
pwglSëPbuf„rAâribARB


	)

9647 #i‚de‡
WGL_ARB_pixñ_f‹m©_Êﬂt


9648 
	#WGL_ARB_pixñ_f‹m©_Êﬂt
 1

	)

9649 
	#__GLEE_WGL_ARB_pixñ_f‹m©_Êﬂt
 1

	)

9651 
	#WGL_TYPE_RGBA_FLOAT_ARB
 0x21A0

	)

9656 #i‚de‡
WGL_EXT_make_cuºít_ªad


9657 
	#WGL_EXT_make_cuºít_ªad
 1

	)

9658 
	#__GLEE_WGL_EXT_make_cuºít_ªad
 1

	)

9660 
	#ERROR_INVALID_PIXEL_TYPE_EXT
 0x2043

	)

9661 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLMAKECONTEXTCURRENTEXTPROC
Ë(
	tHDC
 
	thDøwDC
, HDC 
	thRódDC
, 
	tHGLRC
 
	thgÃc
);

9662 
HDC
 (
	tAPIENTRYP
 
	tPFNWGLGETCURRENTREADDCEXTPROC
) ();

9663 
GLEE_EXTERN
 
PFNWGLMAKECONTEXTCURRENTEXTPROC
 
	gpwglMakeC⁄ãxtCuºítEXT
;

9664 
GLEE_EXTERN
 
PFNWGLGETCURRENTREADDCEXTPROC
 
	gpwglGëCuºítRódDCEXT
;

9665 
	#wglMakeC⁄ãxtCuºítEXT
 
pwglMakeC⁄ãxtCuºítEXT


	)

9666 
	#wglGëCuºítRódDCEXT
 
pwglGëCuºítRódDCEXT


	)

9671 #i‚de‡
WGL_EXT_pixñ_f‹m©


9672 
	#WGL_EXT_pixñ_f‹m©
 1

	)

9673 
	#__GLEE_WGL_EXT_pixñ_f‹m©
 1

	)

9675 
	#WGL_NUMBER_PIXEL_FORMATS_EXT
 0x2000

	)

9676 
	#WGL_DRAW_TO_WINDOW_EXT
 0x2001

	)

9677 
	#WGL_DRAW_TO_BITMAP_EXT
 0x2002

	)

9678 
	#WGL_ACCELERATION_EXT
 0x2003

	)

9679 
	#WGL_NEED_PALETTE_EXT
 0x2004

	)

9680 
	#WGL_NEED_SYSTEM_PALETTE_EXT
 0x2005

	)

9681 
	#WGL_SWAP_LAYER_BUFFERS_EXT
 0x2006

	)

9682 
	#WGL_SWAP_METHOD_EXT
 0x2007

	)

9683 
	#WGL_NUMBER_OVERLAYS_EXT
 0x2008

	)

9684 
	#WGL_NUMBER_UNDERLAYS_EXT
 0x2009

	)

9685 
	#WGL_TRANSPARENT_EXT
 0x200A

	)

9686 
	#WGL_TRANSPARENT_VALUE_EXT
 0x200B

	)

9687 
	#WGL_SHARE_DEPTH_EXT
 0x200C

	)

9688 
	#WGL_SHARE_STENCIL_EXT
 0x200D

	)

9689 
	#WGL_SHARE_ACCUM_EXT
 0x200E

	)

9690 
	#WGL_SUPPORT_GDI_EXT
 0x200F

	)

9691 
	#WGL_SUPPORT_OPENGL_EXT
 0x2010

	)

9692 
	#WGL_DOUBLE_BUFFER_EXT
 0x2011

	)

9693 
	#WGL_STEREO_EXT
 0x2012

	)

9694 
	#WGL_PIXEL_TYPE_EXT
 0x2013

	)

9695 
	#WGL_COLOR_BITS_EXT
 0x2014

	)

9696 
	#WGL_RED_BITS_EXT
 0x2015

	)

9697 
	#WGL_RED_SHIFT_EXT
 0x2016

	)

9698 
	#WGL_GREEN_BITS_EXT
 0x2017

	)

9699 
	#WGL_GREEN_SHIFT_EXT
 0x2018

	)

9700 
	#WGL_BLUE_BITS_EXT
 0x2019

	)

9701 
	#WGL_BLUE_SHIFT_EXT
 0x201A

	)

9702 
	#WGL_ALPHA_BITS_EXT
 0x201B

	)

9703 
	#WGL_ALPHA_SHIFT_EXT
 0x201C

	)

9704 
	#WGL_ACCUM_BITS_EXT
 0x201D

	)

9705 
	#WGL_ACCUM_RED_BITS_EXT
 0x201E

	)

9706 
	#WGL_ACCUM_GREEN_BITS_EXT
 0x201F

	)

9707 
	#WGL_ACCUM_BLUE_BITS_EXT
 0x2020

	)

9708 
	#WGL_ACCUM_ALPHA_BITS_EXT
 0x2021

	)

9709 
	#WGL_DEPTH_BITS_EXT
 0x2022

	)

9710 
	#WGL_STENCIL_BITS_EXT
 0x2023

	)

9711 
	#WGL_AUX_BUFFERS_EXT
 0x2024

	)

9712 
	#WGL_NO_ACCELERATION_EXT
 0x2025

	)

9713 
	#WGL_GENERIC_ACCELERATION_EXT
 0x2026

	)

9714 
	#WGL_FULL_ACCELERATION_EXT
 0x2027

	)

9715 
	#WGL_SWAP_EXCHANGE_EXT
 0x2028

	)

9716 
	#WGL_SWAP_COPY_EXT
 0x2029

	)

9717 
	#WGL_SWAP_UNDEFINED_EXT
 0x202A

	)

9718 
	#WGL_TYPE_RGBA_EXT
 0x202B

	)

9719 
	#WGL_TYPE_COLORINDEX_EXT
 0x202C

	)

9720 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGETPIXELFORMATATTRIBIVEXTPROC
Ë(
	tHDC
 
	thdc
, 
	tiPixñF‹m©
, 
	tiLayîPœ√
, 
	tUINT
 
	tnAâribuãs
, * 
	tpiAâribuãs
, * 
	tpiVÆues
);

9721 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGETPIXELFORMATATTRIBFVEXTPROC
Ë(
	tHDC
 
	thdc
, 
	tiPixñF‹m©
, 
	tiLayîPœ√
, 
	tUINT
 
	tnAâribuãs
, * 
	tpiAâribuãs
, 
	tFLOAT
 * 
	tpfVÆues
);

9722 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLCHOOSEPIXELFORMATEXTPROC
Ë(
	tHDC
 
	thdc
, c⁄° * 
	tpiAâribILi°
, c⁄° 
	tFLOAT
 * 
	tpfAâribFLi°
, 
	tUINT
 
	tnMaxF‹m©s
, * 
	tpiF‹m©s
, UINT * 
	tnNumF‹m©s
);

9723 
GLEE_EXTERN
 
PFNWGLGETPIXELFORMATATTRIBIVEXTPROC
 
	gpwglGëPixñF‹m©AâribivEXT
;

9724 
GLEE_EXTERN
 
PFNWGLGETPIXELFORMATATTRIBFVEXTPROC
 
	gpwglGëPixñF‹m©AâribfvEXT
;

9725 
GLEE_EXTERN
 
PFNWGLCHOOSEPIXELFORMATEXTPROC
 
	gpwglChoo£PixñF‹m©EXT
;

9726 
	#wglGëPixñF‹m©AâribivEXT
 
pwglGëPixñF‹m©AâribivEXT


	)

9727 
	#wglGëPixñF‹m©AâribfvEXT
 
pwglGëPixñF‹m©AâribfvEXT


	)

9728 
	#wglChoo£PixñF‹m©EXT
 
pwglChoo£PixñF‹m©EXT


	)

9733 #i‚de‡
WGL_EXT_pbuf„r


9734 
	#WGL_EXT_pbuf„r
 1

	)

9735 
	#__GLEE_WGL_EXT_pbuf„r
 1

	)

9737 
	#WGL_DRAW_TO_PBUFFER_EXT
 0x202D

	)

9738 
	#WGL_MAX_PBUFFER_PIXELS_EXT
 0x202E

	)

9739 
	#WGL_MAX_PBUFFER_WIDTH_EXT
 0x202F

	)

9740 
	#WGL_MAX_PBUFFER_HEIGHT_EXT
 0x2030

	)

9741 
	#WGL_OPTIMAL_PBUFFER_WIDTH_EXT
 0x2031

	)

9742 
	#WGL_OPTIMAL_PBUFFER_HEIGHT_EXT
 0x2032

	)

9743 
	#WGL_PBUFFER_LARGEST_EXT
 0x2033

	)

9744 
	#WGL_PBUFFER_WIDTH_EXT
 0x2034

	)

9745 
	#WGL_PBUFFER_HEIGHT_EXT
 0x2035

	)

9746 
HPBUFFEREXT
 (
	tAPIENTRYP
 
	tPFNWGLCREATEPBUFFEREXTPROC
Ë(
	tHDC
 
	thDC
, 
	tiPixñF‹m©
, 
	tiWidth
, 
	tiHeight
, c⁄° * 
	tpiAâribLi°
);

9747 
HDC
 (
	tAPIENTRYP
 
	tPFNWGLGETPBUFFERDCEXTPROC
Ë(
	tHPBUFFEREXT
 
	thPbuf„r
);

9748 (
APIENTRYP
 
	tPFNWGLRELEASEPBUFFERDCEXTPROC
Ë(
	tHPBUFFEREXT
 
	thPbuf„r
, 
	tHDC
 
	thDC
);

9749 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLDESTROYPBUFFEREXTPROC
Ë(
	tHPBUFFEREXT
 
	thPbuf„r
);

9750 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLQUERYPBUFFEREXTPROC
Ë(
	tHPBUFFEREXT
 
	thPbuf„r
, 
	tiAâribuã
, * 
	tpiVÆue
);

9751 
GLEE_EXTERN
 
PFNWGLCREATEPBUFFEREXTPROC
 
	gpwglCª©ePbuf„rEXT
;

9752 
GLEE_EXTERN
 
PFNWGLGETPBUFFERDCEXTPROC
 
	gpwglGëPbuf„rDCEXT
;

9753 
GLEE_EXTERN
 
PFNWGLRELEASEPBUFFERDCEXTPROC
 
	gpwglRñó£Pbuf„rDCEXT
;

9754 
GLEE_EXTERN
 
PFNWGLDESTROYPBUFFEREXTPROC
 
	gpwglDe°royPbuf„rEXT
;

9755 
GLEE_EXTERN
 
PFNWGLQUERYPBUFFEREXTPROC
 
	gpwglQuîyPbuf„rEXT
;

9756 
	#wglCª©ePbuf„rEXT
 
pwglCª©ePbuf„rEXT


	)

9757 
	#wglGëPbuf„rDCEXT
 
pwglGëPbuf„rDCEXT


	)

9758 
	#wglRñó£Pbuf„rDCEXT
 
pwglRñó£Pbuf„rDCEXT


	)

9759 
	#wglDe°royPbuf„rEXT
 
pwglDe°royPbuf„rEXT


	)

9760 
	#wglQuîyPbuf„rEXT
 
pwglQuîyPbuf„rEXT


	)

9765 #i‚de‡
WGL_EXT_dïth_Êﬂt


9766 
	#WGL_EXT_dïth_Êﬂt
 1

	)

9767 
	#__GLEE_WGL_EXT_dïth_Êﬂt
 1

	)

9769 
	#WGL_DEPTH_FLOAT_EXT
 0x2040

	)

9774 #i‚de‡
WGL_3DFX_mu…ißm∂e


9775 
	#WGL_3DFX_mu…ißm∂e
 1

	)

9776 
	#__GLEE_WGL_3DFX_mu…ißm∂e
 1

	)

9778 
	#WGL_SAMPLE_BUFFERS_3DFX
 0x2060

	)

9779 
	#WGL_SAMPLES_3DFX
 0x2061

	)

9784 #i‚de‡
WGL_EXT_mu…ißm∂e


9785 
	#WGL_EXT_mu…ißm∂e
 1

	)

9786 
	#__GLEE_WGL_EXT_mu…ißm∂e
 1

	)

9788 
	#WGL_SAMPLE_BUFFERS_EXT
 0x2041

	)

9789 
	#WGL_SAMPLES_EXT
 0x2042

	)

9794 #i‚de‡
WGL_I3D_digôÆ_video_c⁄åﬁ


9795 
	#WGL_I3D_digôÆ_video_c⁄åﬁ
 1

	)

9796 
	#__GLEE_WGL_I3D_digôÆ_video_c⁄åﬁ
 1

	)

9798 
	#WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D
 0x2050

	)

9799 
	#WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D
 0x2051

	)

9800 
	#WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D
 0x2052

	)

9801 
	#WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D
 0x2053

	)

9802 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tiAâribuã
, * 
	tpiVÆue
);

9803 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tiAâribuã
, c⁄° * 
	tpiVÆue
);

9804 
GLEE_EXTERN
 
PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC
 
	gpwglGëDigôÆVideoP¨amëîsI3D
;

9805 
GLEE_EXTERN
 
PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC
 
	gpwglSëDigôÆVideoP¨amëîsI3D
;

9806 
	#wglGëDigôÆVideoP¨amëîsI3D
 
pwglGëDigôÆVideoP¨amëîsI3D


	)

9807 
	#wglSëDigôÆVideoP¨amëîsI3D
 
pwglSëDigôÆVideoP¨amëîsI3D


	)

9812 #i‚de‡
WGL_I3D_gamma


9813 
	#WGL_I3D_gamma
 1

	)

9814 
	#__GLEE_WGL_I3D_gamma
 1

	)

9816 
	#WGL_GAMMA_TABLE_SIZE_I3D
 0x204E

	)

9817 
	#WGL_GAMMA_EXCLUDE_DESKTOP_I3D
 0x204F

	)

9818 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGETGAMMATABLEPARAMETERSI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tiAâribuã
, * 
	tpiVÆue
);

9819 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLSETGAMMATABLEPARAMETERSI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tiAâribuã
, c⁄° * 
	tpiVÆue
);

9820 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGETGAMMATABLEI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tiE¡rõs
, 
	tUSHORT
 * 
	tpuRed
, USHORT * 
	tpuGªí
, USHORT * 
	tpuBlue
);

9821 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLSETGAMMATABLEI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tiE¡rõs
, c⁄° 
	tUSHORT
 * 
	tpuRed
, c⁄° USHORT * 
	tpuGªí
, c⁄° USHORT * 
	tpuBlue
);

9822 
GLEE_EXTERN
 
PFNWGLGETGAMMATABLEPARAMETERSI3DPROC
 
	gpwglGëGammaTabÀP¨amëîsI3D
;

9823 
GLEE_EXTERN
 
PFNWGLSETGAMMATABLEPARAMETERSI3DPROC
 
	gpwglSëGammaTabÀP¨amëîsI3D
;

9824 
GLEE_EXTERN
 
PFNWGLGETGAMMATABLEI3DPROC
 
	gpwglGëGammaTabÀI3D
;

9825 
GLEE_EXTERN
 
PFNWGLSETGAMMATABLEI3DPROC
 
	gpwglSëGammaTabÀI3D
;

9826 
	#wglGëGammaTabÀP¨amëîsI3D
 
pwglGëGammaTabÀP¨amëîsI3D


	)

9827 
	#wglSëGammaTabÀP¨amëîsI3D
 
pwglSëGammaTabÀP¨amëîsI3D


	)

9828 
	#wglGëGammaTabÀI3D
 
pwglGëGammaTabÀI3D


	)

9829 
	#wglSëGammaTabÀI3D
 
pwglSëGammaTabÀI3D


	)

9834 #i‚de‡
WGL_I3D_gílock


9835 
	#WGL_I3D_gílock
 1

	)

9836 
	#__GLEE_WGL_I3D_gílock
 1

	)

9838 
	#WGL_GENLOCK_SOURCE_MULTIVIEW_I3D
 0x2044

	)

9839 
	#WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D
 0x2045

	)

9840 
	#WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D
 0x2046

	)

9841 
	#WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D
 0x2047

	)

9842 
	#WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D
 0x2048

	)

9843 
	#WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D
 0x2049

	)

9844 
	#WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D
 0x204A

	)

9845 
	#WGL_GENLOCK_SOURCE_EDGE_RISING_I3D
 0x204B

	)

9846 
	#WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D
 0x204C

	)

9847 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLENABLEGENLOCKI3DPROC
Ë(
	tHDC
 
	thDC
);

9848 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLDISABLEGENLOCKI3DPROC
Ë(
	tHDC
 
	thDC
);

9849 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLISENABLEDGENLOCKI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tBOOL
 * 
	tpFœg
);

9850 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGENLOCKSOURCEI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 
	tuSour˚
);

9851 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGETGENLOCKSOURCEI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 * 
	tuSour˚
);

9852 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGENLOCKSOURCEEDGEI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 
	tuEdge
);

9853 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGETGENLOCKSOURCEEDGEI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 * 
	tuEdge
);

9854 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGENLOCKSAMPLERATEI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 
	tuR©e
);

9855 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGETGENLOCKSAMPLERATEI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 * 
	tuR©e
);

9856 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGENLOCKSOURCEDELAYI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 
	tuDñay
);

9857 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGETGENLOCKSOURCEDELAYI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 * 
	tuDñay
);

9858 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 * 
	tuMaxLöeDñay
, UINT * 
	tuMaxPixñDñay
);

9859 
GLEE_EXTERN
 
PFNWGLENABLEGENLOCKI3DPROC
 
	gpwglE«bÀGílockI3D
;

9860 
GLEE_EXTERN
 
PFNWGLDISABLEGENLOCKI3DPROC
 
	gpwglDißbÀGílockI3D
;

9861 
GLEE_EXTERN
 
PFNWGLISENABLEDGENLOCKI3DPROC
 
	gpwglIsE«bÀdGílockI3D
;

9862 
GLEE_EXTERN
 
PFNWGLGENLOCKSOURCEI3DPROC
 
	gpwglGílockSour˚I3D
;

9863 
GLEE_EXTERN
 
PFNWGLGETGENLOCKSOURCEI3DPROC
 
	gpwglGëGílockSour˚I3D
;

9864 
GLEE_EXTERN
 
PFNWGLGENLOCKSOURCEEDGEI3DPROC
 
	gpwglGílockSour˚EdgeI3D
;

9865 
GLEE_EXTERN
 
PFNWGLGETGENLOCKSOURCEEDGEI3DPROC
 
	gpwglGëGílockSour˚EdgeI3D
;

9866 
GLEE_EXTERN
 
PFNWGLGENLOCKSAMPLERATEI3DPROC
 
	gpwglGílockSam∂eR©eI3D
;

9867 
GLEE_EXTERN
 
PFNWGLGETGENLOCKSAMPLERATEI3DPROC
 
	gpwglGëGílockSam∂eR©eI3D
;

9868 
GLEE_EXTERN
 
PFNWGLGENLOCKSOURCEDELAYI3DPROC
 
	gpwglGílockSour˚DñayI3D
;

9869 
GLEE_EXTERN
 
PFNWGLGETGENLOCKSOURCEDELAYI3DPROC
 
	gpwglGëGílockSour˚DñayI3D
;

9870 
GLEE_EXTERN
 
PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC
 
	gpwglQuîyGílockMaxSour˚DñayI3D
;

9871 
	#wglE«bÀGílockI3D
 
pwglE«bÀGílockI3D


	)

9872 
	#wglDißbÀGílockI3D
 
pwglDißbÀGílockI3D


	)

9873 
	#wglIsE«bÀdGílockI3D
 
pwglIsE«bÀdGílockI3D


	)

9874 
	#wglGílockSour˚I3D
 
pwglGílockSour˚I3D


	)

9875 
	#wglGëGílockSour˚I3D
 
pwglGëGílockSour˚I3D


	)

9876 
	#wglGílockSour˚EdgeI3D
 
pwglGílockSour˚EdgeI3D


	)

9877 
	#wglGëGílockSour˚EdgeI3D
 
pwglGëGílockSour˚EdgeI3D


	)

9878 
	#wglGílockSam∂eR©eI3D
 
pwglGílockSam∂eR©eI3D


	)

9879 
	#wglGëGílockSam∂eR©eI3D
 
pwglGëGílockSam∂eR©eI3D


	)

9880 
	#wglGílockSour˚DñayI3D
 
pwglGílockSour˚DñayI3D


	)

9881 
	#wglGëGílockSour˚DñayI3D
 
pwglGëGílockSour˚DñayI3D


	)

9882 
	#wglQuîyGílockMaxSour˚DñayI3D
 
pwglQuîyGílockMaxSour˚DñayI3D


	)

9887 #i‚de‡
WGL_I3D_image_buf„r


9888 
	#WGL_I3D_image_buf„r
 1

	)

9889 
	#__GLEE_WGL_I3D_image_buf„r
 1

	)

9891 
	#WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
 0x00000001

	)

9892 
	#WGL_IMAGE_BUFFER_LOCK_I3D
 0x00000002

	)

9893 
LPVOID
 (
	tAPIENTRYP
 
	tPFNWGLCREATEIMAGEBUFFERI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tDWORD
 
	tdwSize
, 
	tUINT
 
	tuFœgs
);

9894 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLDESTROYIMAGEBUFFERI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tLPVOID
 
	tpAddªss
);

9895 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC
Ë(
	tHDC
 
	thDC
, c⁄° 
	tHANDLE
 * 
	tpEvít
, c⁄° 
	tLPVOID
 * 
	tpAddªss
, c⁄° 
	tDWORD
 * 
	tpSize
, 
	tUINT
 
	tcou¡
);

9896 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC
Ë(
	tHDC
 
	thDC
, c⁄° 
	tLPVOID
 * 
	tpAddªss
, 
	tUINT
 
	tcou¡
);

9897 
GLEE_EXTERN
 
PFNWGLCREATEIMAGEBUFFERI3DPROC
 
	gpwglCª©eImageBuf„rI3D
;

9898 
GLEE_EXTERN
 
PFNWGLDESTROYIMAGEBUFFERI3DPROC
 
	gpwglDe°royImageBuf„rI3D
;

9899 
GLEE_EXTERN
 
PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC
 
	gpwglAssocüãImageBuf„rEvítsI3D
;

9900 
GLEE_EXTERN
 
PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC
 
	gpwglRñó£ImageBuf„rEvítsI3D
;

9901 
	#wglCª©eImageBuf„rI3D
 
pwglCª©eImageBuf„rI3D


	)

9902 
	#wglDe°royImageBuf„rI3D
 
pwglDe°royImageBuf„rI3D


	)

9903 
	#wglAssocüãImageBuf„rEvítsI3D
 
pwglAssocüãImageBuf„rEvítsI3D


	)

9904 
	#wglRñó£ImageBuf„rEvítsI3D
 
pwglRñó£ImageBuf„rEvítsI3D


	)

9909 #i‚de‡
WGL_I3D_sw≠_‰ame_lock


9910 
	#WGL_I3D_sw≠_‰ame_lock
 1

	)

9911 
	#__GLEE_WGL_I3D_sw≠_‰ame_lock
 1

	)

9913 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLENABLEFRAMELOCKI3DPROC
) ();

9914 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLDISABLEFRAMELOCKI3DPROC
) ();

9915 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLISENABLEDFRAMELOCKI3DPROC
Ë(
	tBOOL
 * 
	tpFœg
);

9916 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLQUERYFRAMELOCKMASTERI3DPROC
Ë(
	tBOOL
 * 
	tpFœg
);

9917 
GLEE_EXTERN
 
PFNWGLENABLEFRAMELOCKI3DPROC
 
	gpwglE«bÀFømeLockI3D
;

9918 
GLEE_EXTERN
 
PFNWGLDISABLEFRAMELOCKI3DPROC
 
	gpwglDißbÀFømeLockI3D
;

9919 
GLEE_EXTERN
 
PFNWGLISENABLEDFRAMELOCKI3DPROC
 
	gpwglIsE«bÀdFømeLockI3D
;

9920 
GLEE_EXTERN
 
PFNWGLQUERYFRAMELOCKMASTERI3DPROC
 
	gpwglQuîyFømeLockMa°îI3D
;

9921 
	#wglE«bÀFømeLockI3D
 
pwglE«bÀFømeLockI3D


	)

9922 
	#wglDißbÀFømeLockI3D
 
pwglDißbÀFømeLockI3D


	)

9923 
	#wglIsE«bÀdFømeLockI3D
 
pwglIsE«bÀdFømeLockI3D


	)

9924 
	#wglQuîyFømeLockMa°îI3D
 
pwglQuîyFømeLockMa°îI3D


	)

9929 #i‚de‡
WGL_NV_ªndî_dïth_ãxtuª


9930 
	#WGL_NV_ªndî_dïth_ãxtuª
 1

	)

9931 
	#__GLEE_WGL_NV_ªndî_dïth_ãxtuª
 1

	)

9933 
	#WGL_BIND_TO_TEXTURE_DEPTH_NV
 0x20A3

	)

9934 
	#WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV
 0x20A4

	)

9935 
	#WGL_DEPTH_TEXTURE_FORMAT_NV
 0x20A5

	)

9936 
	#WGL_TEXTURE_DEPTH_COMPONENT_NV
 0x20A6

	)

9937 
	#WGL_DEPTH_COMPONENT_NV
 0x20A7

	)

9942 #i‚de‡
WGL_NV_ªndî_ãxtuª_ª˘™gÀ


9943 
	#WGL_NV_ªndî_ãxtuª_ª˘™gÀ
 1

	)

9944 
	#__GLEE_WGL_NV_ªndî_ãxtuª_ª˘™gÀ
 1

	)

9946 
	#WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV
 0x20A0

	)

9947 
	#WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV
 0x20A1

	)

9948 
	#WGL_TEXTURE_RECTANGLE_NV
 0x20A2

	)

9953 #i‚de‡
WGL_ATI_pixñ_f‹m©_Êﬂt


9954 
	#WGL_ATI_pixñ_f‹m©_Êﬂt
 1

	)

9955 
	#__GLEE_WGL_ATI_pixñ_f‹m©_Êﬂt
 1

	)

9957 
	#WGL_TYPE_RGBA_FLOAT_ATI
 0x21A0

	)

9962 #i‚de‡
WGL_NV_Êﬂt_buf„r


9963 
	#WGL_NV_Êﬂt_buf„r
 1

	)

9964 
	#__GLEE_WGL_NV_Êﬂt_buf„r
 1

	)

9966 
	#WGL_FLOAT_COMPONENTS_NV
 0x20B0

	)

9967 
	#WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV
 0x20B1

	)

9968 
	#WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV
 0x20B2

	)

9969 
	#WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV
 0x20B3

	)

9970 
	#WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV
 0x20B4

	)

9971 
	#WGL_TEXTURE_FLOAT_R_NV
 0x20B5

	)

9972 
	#WGL_TEXTURE_FLOAT_RG_NV
 0x20B6

	)

9973 
	#WGL_TEXTURE_FLOAT_RGB_NV
 0x20B7

	)

9974 
	#WGL_TEXTURE_FLOAT_RGBA_NV
 0x20B8

	)

9979 #i‚de‡
WGL_EXT_di•œy_cﬁ‹_èbÀ


9980 
	#WGL_EXT_di•œy_cﬁ‹_èbÀ
 1

	)

9981 
	#__GLEE_WGL_EXT_di•œy_cﬁ‹_èbÀ
 1

	)

9983 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNWGLCREATEDISPLAYCOLORTABLEEXTPROC
Ë(
	tGLush‹t
 
	tid
);

9984 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNWGLLOADDISPLAYCOLORTABLEEXTPROC
Ë(c⁄° 
	tGLush‹t
 * 
	tèbÀ
, 
	tGLuöt
 
	tÀngth
);

9985 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNWGLBINDDISPLAYCOLORTABLEEXTPROC
Ë(
	tGLush‹t
 
	tid
);

9986 
VOID
 (
	tAPIENTRYP
 
	tPFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC
Ë(
	tGLush‹t
 
	tid
);

9987 
GLEE_EXTERN
 
PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC
 
	gpwglCª©eDi•œyCﬁ‹TabÀEXT
;

9988 
GLEE_EXTERN
 
PFNWGLLOADDISPLAYCOLORTABLEEXTPROC
 
	gpwglLﬂdDi•œyCﬁ‹TabÀEXT
;

9989 
GLEE_EXTERN
 
PFNWGLBINDDISPLAYCOLORTABLEEXTPROC
 
	gpwglBödDi•œyCﬁ‹TabÀEXT
;

9990 
GLEE_EXTERN
 
PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC
 
	gpwglDe°royDi•œyCﬁ‹TabÀEXT
;

9991 
	#wglCª©eDi•œyCﬁ‹TabÀEXT
 
pwglCª©eDi•œyCﬁ‹TabÀEXT


	)

9992 
	#wglLﬂdDi•œyCﬁ‹TabÀEXT
 
pwglLﬂdDi•œyCﬁ‹TabÀEXT


	)

9993 
	#wglBödDi•œyCﬁ‹TabÀEXT
 
pwglBödDi•œyCﬁ‹TabÀEXT


	)

9994 
	#wglDe°royDi•œyCﬁ‹TabÀEXT
 
pwglDe°royDi•œyCﬁ‹TabÀEXT


	)

9999 #i‚de‡
WGL_EXT_exãnsi⁄s_°rög


10000 
	#WGL_EXT_exãnsi⁄s_°rög
 1

	)

10001 
	#__GLEE_WGL_EXT_exãnsi⁄s_°rög
 1

	)

10003 c⁄° * (
	tAPIENTRYP
 
	tPFNWGLGETEXTENSIONSSTRINGEXTPROC
) ();

10004 
GLEE_EXTERN
 
PFNWGLGETEXTENSIONSSTRINGEXTPROC
 
	gpwglGëExãnsi⁄sSåögEXT
;

10005 
	#wglGëExãnsi⁄sSåögEXT
 
pwglGëExãnsi⁄sSåögEXT


	)

10010 #i‚de‡
WGL_EXT_sw≠_c⁄åﬁ


10011 
	#WGL_EXT_sw≠_c⁄åﬁ
 1

	)

10012 
	#__GLEE_WGL_EXT_sw≠_c⁄åﬁ
 1

	)

10014 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLSWAPINTERVALEXTPROC
Ë(
	töãrvÆ
);

10015 (
APIENTRYP
 
	tPFNWGLGETSWAPINTERVALEXTPROC
) ();

10016 
GLEE_EXTERN
 
PFNWGLSWAPINTERVALEXTPROC
 
	gpwglSw≠I¡îvÆEXT
;

10017 
GLEE_EXTERN
 
PFNWGLGETSWAPINTERVALEXTPROC
 
	gpwglGëSw≠I¡îvÆEXT
;

10018 
	#wglSw≠I¡îvÆEXT
 
pwglSw≠I¡îvÆEXT


	)

10019 
	#wglGëSw≠I¡îvÆEXT
 
pwglGëSw≠I¡îvÆEXT


	)

10024 #i‚de‡
WGL_NV_vîãx_¨øy_ønge


10025 
	#WGL_NV_vîãx_¨øy_ønge
 1

	)

10026 
	#__GLEE_WGL_NV_vîãx_¨øy_ønge
 1

	)

10028 * (
	tAPIENTRYP
 
	tPFNWGLALLOCATEMEMORYNVPROC
Ë(
	tGLsizei
 
	tsize
, 
	tGLÊﬂt
 
	tªad‰eq
, GLÊﬂà
	twrôe‰eq
, GLÊﬂà
	t¥i‹ôy
);

10029 (
APIENTRYP
 
	tPFNWGLFREEMEMORYNVPROC
Ë(* 
	tpoöãr
);

10030 
GLEE_EXTERN
 
PFNWGLALLOCATEMEMORYNVPROC
 
	gpwglAŒoˇãMem‹yNV
;

10031 
GLEE_EXTERN
 
PFNWGLFREEMEMORYNVPROC
 
	gpwglFªeMem‹yNV
;

10032 
	#wglAŒoˇãMem‹yNV
 
pwglAŒoˇãMem‹yNV


	)

10033 
	#wglFªeMem‹yNV
 
pwglFªeMem‹yNV


	)

10038 #i‚de‡
WGL_OML_sync_c⁄åﬁ


10039 
	#WGL_OML_sync_c⁄åﬁ
 1

	)

10040 
	#__GLEE_WGL_OML_sync_c⁄åﬁ
 1

	)

10042 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGETSYNCVALUESOMLPROC
Ë(
	tHDC
 
	thdc
, 
	tINT64
 * 
	tu°
, INT64 * 
	tmsc
, INT64 * 
	tsbc
);

10043 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGETMSCRATEOMLPROC
Ë(
	tHDC
 
	thdc
, 
	tINT32
 * 
	tnumî©‹
, INT32 * 
	tdíomö©‹
);

10044 
INT64
 (
	tAPIENTRYP
 
	tPFNWGLSWAPBUFFERSMSCOMLPROC
Ë(
	tHDC
 
	thdc
, 
	tINT64
 
	tèrgë_msc
, INT64 
	tdivis‹
, INT64 
	tªmaödî
);

10045 
INT64
 (
	tAPIENTRYP
 
	tPFNWGLSWAPLAYERBUFFERSMSCOMLPROC
Ë(
	tHDC
 
	thdc
, 
	tfuPœ√s
, 
	tINT64
 
	tèrgë_msc
, INT64 
	tdivis‹
, INT64 
	tªmaödî
);

10046 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLWAITFORMSCOMLPROC
Ë(
	tHDC
 
	thdc
, 
	tINT64
 
	tèrgë_msc
, INT64 
	tdivis‹
, INT64 
	tªmaödî
, INT64 * 
	tu°
, INT64 * 
	tmsc
, INT64 * 
	tsbc
);

10047 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLWAITFORSBCOMLPROC
Ë(
	tHDC
 
	thdc
, 
	tINT64
 
	tèrgë_sbc
, INT64 * 
	tu°
, INT64 * 
	tmsc
, INT64 * 
	tsbc
);

10048 
GLEE_EXTERN
 
PFNWGLGETSYNCVALUESOMLPROC
 
	gpwglGëSyncVÆuesOML
;

10049 
GLEE_EXTERN
 
PFNWGLGETMSCRATEOMLPROC
 
	gpwglGëMscR©eOML
;

10050 
GLEE_EXTERN
 
PFNWGLSWAPBUFFERSMSCOMLPROC
 
	gpwglSw≠Buf„rsMscOML
;

10051 
GLEE_EXTERN
 
PFNWGLSWAPLAYERBUFFERSMSCOMLPROC
 
	gpwglSw≠LayîBuf„rsMscOML
;

10052 
GLEE_EXTERN
 
PFNWGLWAITFORMSCOMLPROC
 
	gpwglWaôF‹MscOML
;

10053 
GLEE_EXTERN
 
PFNWGLWAITFORSBCOMLPROC
 
	gpwglWaôF‹SbcOML
;

10054 
	#wglGëSyncVÆuesOML
 
pwglGëSyncVÆuesOML


	)

10055 
	#wglGëMscR©eOML
 
pwglGëMscR©eOML


	)

10056 
	#wglSw≠Buf„rsMscOML
 
pwglSw≠Buf„rsMscOML


	)

10057 
	#wglSw≠LayîBuf„rsMscOML
 
pwglSw≠LayîBuf„rsMscOML


	)

10058 
	#wglWaôF‹MscOML
 
pwglWaôF‹MscOML


	)

10059 
	#wglWaôF‹SbcOML
 
pwglWaôF‹SbcOML


	)

10064 #i‚de‡
WGL_I3D_sw≠_‰ame_ußge


10065 
	#WGL_I3D_sw≠_‰ame_ußge
 1

	)

10066 
	#__GLEE_WGL_I3D_sw≠_‰ame_ußge
 1

	)

10068 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLGETFRAMEUSAGEI3DPROC
Ë(* 
	tpUßge
);

10069 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLBEGINFRAMETRACKINGI3DPROC
) ();

10070 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLENDFRAMETRACKINGI3DPROC
) ();

10071 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLQUERYFRAMETRACKINGI3DPROC
Ë(
	tDWORD
 * 
	tpFømeCou¡
, DWORD * 
	tpMis£dFømes
, * 
	tpLa°Mis£dUßge
);

10072 
GLEE_EXTERN
 
PFNWGLGETFRAMEUSAGEI3DPROC
 
	gpwglGëFømeUßgeI3D
;

10073 
GLEE_EXTERN
 
PFNWGLBEGINFRAMETRACKINGI3DPROC
 
	gpwglBegöFømeTøckögI3D
;

10074 
GLEE_EXTERN
 
PFNWGLENDFRAMETRACKINGI3DPROC
 
	gpwglEndFømeTøckögI3D
;

10075 
GLEE_EXTERN
 
PFNWGLQUERYFRAMETRACKINGI3DPROC
 
	gpwglQuîyFømeTøckögI3D
;

10076 
	#wglGëFømeUßgeI3D
 
pwglGëFømeUßgeI3D


	)

10077 
	#wglBegöFømeTøckögI3D
 
pwglBegöFømeTøckögI3D


	)

10078 
	#wglEndFømeTøckögI3D
 
pwglEndFømeTøckögI3D


	)

10079 
	#wglQuîyFømeTøckögI3D
 
pwglQuîyFømeTøckögI3D


	)

10084 #i‚de‡
WGL_3DL_°îeo_c⁄åﬁ


10085 
	#WGL_3DL_°îeo_c⁄åﬁ
 1

	)

10086 
	#__GLEE_WGL_3DL_°îeo_c⁄åﬁ
 1

	)

10088 
	#WGL_STEREO_EMITTER_ENABLE_3DL
 0x2055

	)

10089 
	#WGL_STEREO_EMITTER_DISABLE_3DL
 0x2056

	)

10090 
	#WGL_STEREO_POLARITY_NORMAL_3DL
 0x2057

	)

10091 
	#WGL_STEREO_POLARITY_INVERT_3DL
 0x2058

	)

10092 
BOOL
 (
	tAPIENTRYP
 
	tPFNWGLSETSTEREOEMITTERSTATE3DLPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 
	tuSèã
);

10093 
GLEE_EXTERN
 
PFNWGLSETSTEREOEMITTERSTATE3DLPROC
 
	gpwglSëSãªoEmôãrSèã3DL
;

10094 
	#wglSëSãªoEmôãrSèã3DL
 
pwglSëSãªoEmôãrSèã3DL


	)

10096 #ñi‡
deföed
(
__APPLE__
Ë|| deföed(
__APPLE_CC__
)

10101 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_VERSION_1_3
;

10102 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_VERSION_1_4
;

10103 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_ARB_mu…ißm∂e
;

10104 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_ARB_fbc⁄fig_Êﬂt
;

10105 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_SGIS_mu…ißm∂e
;

10106 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_EXT_visuÆ_öfo
;

10107 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_SGI_sw≠_c⁄åﬁ
;

10108 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_SGI_video_sync
;

10109 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_SGI_make_cuºít_ªad
;

10110 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_EXT_visuÆ_øtög
;

10111 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_EXT_imp‹t_c⁄ãxt
;

10112 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_SGIX_fbc⁄fig
;

10113 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_SGIX_pbuf„r
;

10114 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_SGI_cushi⁄
;

10115 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_SGIX_video_ªsize
;

10116 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_SGIX_sw≠_group
;

10117 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_SGIX_sw≠_b¨rõr
;

10118 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_SGIS_bÀnded_ovîœy
;

10119 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_SGIS_sh¨ed_mu…ißm∂e
;

10120 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_SUN_gë_å™•¨ít_ödex
;

10121 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_3DFX_mu…ißm∂e
;

10122 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_MESA_c›y_sub_buf„r
;

10123 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_MESA_pixm≠_cﬁ‹m≠
;

10124 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_MESA_ªÀa£_buf„rs
;

10125 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_MESA_£t_3dfx_mode
;

10126 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_SGIX_visuÆ_£À˘_group
;

10127 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_OML_sw≠_mëhod
;

10128 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_OML_sync_c⁄åﬁ
;

10129 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_NV_Êﬂt_buf„r
;

10130 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_SGIX_hy≥Ωùe
;

10131 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_MESA_agp_off£t
;

10132 
GLEE_EXTERN
 
GLboﬁón
 
	g_GLEE_GLX_EXT_s˚√_m¨kî
;

10136 
	#GLEE_GLX_VERSION_1_3
 
	`GLìE«bÀd
(&
_GLEE_GLX_VERSION_1_3
)

	)

10137 
	#GLEE_GLX_VERSION_1_4
 
	`GLìE«bÀd
(&
_GLEE_GLX_VERSION_1_4
)

	)

10138 
	#GLEE_GLX_ARB_mu…ißm∂e
 
	`GLìE«bÀd
(&
_GLEE_GLX_ARB_mu…ißm∂e
)

	)

10139 
	#GLEE_GLX_ARB_fbc⁄fig_Êﬂt
 
	`GLìE«bÀd
(&
_GLEE_GLX_ARB_fbc⁄fig_Êﬂt
)

	)

10140 
	#GLEE_GLX_SGIS_mu…ißm∂e
 
	`GLìE«bÀd
(&
_GLEE_GLX_SGIS_mu…ißm∂e
)

	)

10141 
	#GLEE_GLX_EXT_visuÆ_öfo
 
	`GLìE«bÀd
(&
_GLEE_GLX_EXT_visuÆ_öfo
)

	)

10142 
	#GLEE_GLX_SGI_sw≠_c⁄åﬁ
 
	`GLìE«bÀd
(&
_GLEE_GLX_SGI_sw≠_c⁄åﬁ
)

	)

10143 
	#GLEE_GLX_SGI_video_sync
 
	`GLìE«bÀd
(&
_GLEE_GLX_SGI_video_sync
)

	)

10144 
	#GLEE_GLX_SGI_make_cuºít_ªad
 
	`GLìE«bÀd
(&
_GLEE_GLX_SGI_make_cuºít_ªad
)

	)

10145 
	#GLEE_GLX_EXT_visuÆ_øtög
 
	`GLìE«bÀd
(&
_GLEE_GLX_EXT_visuÆ_øtög
)

	)

10146 
	#GLEE_GLX_EXT_imp‹t_c⁄ãxt
 
	`GLìE«bÀd
(&
_GLEE_GLX_EXT_imp‹t_c⁄ãxt
)

	)

10147 
	#GLEE_GLX_SGIX_fbc⁄fig
 
	`GLìE«bÀd
(&
_GLEE_GLX_SGIX_fbc⁄fig
)

	)

10148 
	#GLEE_GLX_SGIX_pbuf„r
 
	`GLìE«bÀd
(&
_GLEE_GLX_SGIX_pbuf„r
)

	)

10149 
	#GLEE_GLX_SGI_cushi⁄
 
	`GLìE«bÀd
(&
_GLEE_GLX_SGI_cushi⁄
)

	)

10150 
	#GLEE_GLX_SGIX_video_ªsize
 
	`GLìE«bÀd
(&
_GLEE_GLX_SGIX_video_ªsize
)

	)

10151 
	#GLEE_GLX_SGIX_sw≠_group
 
	`GLìE«bÀd
(&
_GLEE_GLX_SGIX_sw≠_group
)

	)

10152 
	#GLEE_GLX_SGIX_sw≠_b¨rõr
 
	`GLìE«bÀd
(&
_GLEE_GLX_SGIX_sw≠_b¨rõr
)

	)

10153 
	#GLEE_GLX_SGIS_bÀnded_ovîœy
 
	`GLìE«bÀd
(&
_GLEE_GLX_SGIS_bÀnded_ovîœy
)

	)

10154 
	#GLEE_GLX_SGIS_sh¨ed_mu…ißm∂e
 
	`GLìE«bÀd
(&
_GLEE_GLX_SGIS_sh¨ed_mu…ißm∂e
)

	)

10155 
	#GLEE_GLX_SUN_gë_å™•¨ít_ödex
 
	`GLìE«bÀd
(&
_GLEE_GLX_SUN_gë_å™•¨ít_ödex
)

	)

10156 
	#GLEE_GLX_3DFX_mu…ißm∂e
 
	`GLìE«bÀd
(&
_GLEE_GLX_3DFX_mu…ißm∂e
)

	)

10157 
	#GLEE_GLX_MESA_c›y_sub_buf„r
 
	`GLìE«bÀd
(&
_GLEE_GLX_MESA_c›y_sub_buf„r
)

	)

10158 
	#GLEE_GLX_MESA_pixm≠_cﬁ‹m≠
 
	`GLìE«bÀd
(&
_GLEE_GLX_MESA_pixm≠_cﬁ‹m≠
)

	)

10159 
	#GLEE_GLX_MESA_ªÀa£_buf„rs
 
	`GLìE«bÀd
(&
_GLEE_GLX_MESA_ªÀa£_buf„rs
)

	)

10160 
	#GLEE_GLX_MESA_£t_3dfx_mode
 
	`GLìE«bÀd
(&
_GLEE_GLX_MESA_£t_3dfx_mode
)

	)

10161 
	#GLEE_GLX_SGIX_visuÆ_£À˘_group
 
	`GLìE«bÀd
(&
_GLEE_GLX_SGIX_visuÆ_£À˘_group
)

	)

10162 
	#GLEE_GLX_OML_sw≠_mëhod
 
	`GLìE«bÀd
(&
_GLEE_GLX_OML_sw≠_mëhod
)

	)

10163 
	#GLEE_GLX_OML_sync_c⁄åﬁ
 
	`GLìE«bÀd
(&
_GLEE_GLX_OML_sync_c⁄åﬁ
)

	)

10164 
	#GLEE_GLX_NV_Êﬂt_buf„r
 
	`GLìE«bÀd
(&
_GLEE_GLX_NV_Êﬂt_buf„r
)

	)

10165 
	#GLEE_GLX_SGIX_hy≥Ωùe
 
	`GLìE«bÀd
(&
_GLEE_GLX_SGIX_hy≥Ωùe
)

	)

10166 
	#GLEE_GLX_MESA_agp_off£t
 
	`GLìE«bÀd
(&
_GLEE_GLX_MESA_agp_off£t
)

	)

10167 
	#GLEE_GLX_EXT_s˚√_m¨kî
 
	`GLìE«bÀd
(&
_GLEE_GLX_EXT_s˚√_m¨kî
)

	)

10171 #i‚de‡
GLX_VERSION_1_3


10172 
	#GLX_VERSION_1_3
 1

	)

10173 
	#__GLEE_GLX_VERSION_1_3
 1

	)

10175 
	#GLX_WINDOW_BIT
 0x00000001

	)

10176 
	#GLX_PIXMAP_BIT
 0x00000002

	)

10177 
	#GLX_PBUFFER_BIT
 0x00000004

	)

10178 
	#GLX_RGBA_BIT
 0x00000001

	)

10179 
	#GLX_COLOR_INDEX_BIT
 0x00000002

	)

10180 
	#GLX_PBUFFER_CLOBBER_MASK
 0x08000000

	)

10181 
	#GLX_FRONT_LEFT_BUFFER_BIT
 0x00000001

	)

10182 
	#GLX_FRONT_RIGHT_BUFFER_BIT
 0x00000002

	)

10183 
	#GLX_BACK_LEFT_BUFFER_BIT
 0x00000004

	)

10184 
	#GLX_BACK_RIGHT_BUFFER_BIT
 0x00000008

	)

10185 
	#GLX_AUX_BUFFERS_BIT
 0x00000010

	)

10186 
	#GLX_DEPTH_BUFFER_BIT
 0x00000020

	)

10187 
	#GLX_STENCIL_BUFFER_BIT
 0x00000040

	)

10188 
	#GLX_ACCUM_BUFFER_BIT
 0x00000080

	)

10189 
	#GLX_CONFIG_CAVEAT
 0x20

	)

10190 
	#GLX_X_VISUAL_TYPE
 0x22

	)

10191 
	#GLX_TRANSPARENT_TYPE
 0x23

	)

10192 
	#GLX_TRANSPARENT_INDEX_VALUE
 0x24

	)

10193 
	#GLX_TRANSPARENT_RED_VALUE
 0x25

	)

10194 
	#GLX_TRANSPARENT_GREEN_VALUE
 0x26

	)

10195 
	#GLX_TRANSPARENT_BLUE_VALUE
 0x27

	)

10196 
	#GLX_TRANSPARENT_ALPHA_VALUE
 0x28

	)

10197 
	#GLX_DONT_CARE
 0xFFFFFFFF

	)

10198 
	#GLX_NONE
 0x8000

	)

10199 
	#GLX_SLOW_CONFIG
 0x8001

	)

10200 
	#GLX_TRUE_COLOR
 0x8002

	)

10201 
	#GLX_DIRECT_COLOR
 0x8003

	)

10202 
	#GLX_PSEUDO_COLOR
 0x8004

	)

10203 
	#GLX_STATIC_COLOR
 0x8005

	)

10204 
	#GLX_GRAY_SCALE
 0x8006

	)

10205 
	#GLX_STATIC_GRAY
 0x8007

	)

10206 
	#GLX_TRANSPARENT_RGB
 0x8008

	)

10207 
	#GLX_TRANSPARENT_INDEX
 0x8009

	)

10208 
	#GLX_VISUAL_ID
 0x800B

	)

10209 
	#GLX_SCREEN
 0x800C

	)

10210 
	#GLX_NON_CONFORMANT_CONFIG
 0x800D

	)

10211 
	#GLX_DRAWABLE_TYPE
 0x8010

	)

10212 
	#GLX_RENDER_TYPE
 0x8011

	)

10213 
	#GLX_X_RENDERABLE
 0x8012

	)

10214 
	#GLX_FBCONFIG_ID
 0x8013

	)

10215 
	#GLX_RGBA_TYPE
 0x8014

	)

10216 
	#GLX_COLOR_INDEX_TYPE
 0x8015

	)

10217 
	#GLX_MAX_PBUFFER_WIDTH
 0x8016

	)

10218 
	#GLX_MAX_PBUFFER_HEIGHT
 0x8017

	)

10219 
	#GLX_MAX_PBUFFER_PIXELS
 0x8018

	)

10220 
	#GLX_PRESERVED_CONTENTS
 0x801B

	)

10221 
	#GLX_LARGEST_PBUFFER
 0x801C

	)

10222 
	#GLX_WIDTH
 0x801D

	)

10223 
	#GLX_HEIGHT
 0x801E

	)

10224 
	#GLX_EVENT_MASK
 0x801F

	)

10225 
	#GLX_DAMAGED
 0x8020

	)

10226 
	#GLX_SAVED
 0x8021

	)

10227 
	#GLX_WINDOW
 0x8022

	)

10228 
	#GLX_PBUFFER
 0x8023

	)

10229 
	#GLX_PBUFFER_HEIGHT
 0x8040

	)

10230 
	#GLX_PBUFFER_WIDTH
 0x8041

	)

10231 
	gGLXFBC⁄fig
 * (
	tAPIENTRYP
 
	tPFNGLXGETFBCONFIGSPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	ts¸ìn
, * 
	t√Àmíts
);

10232 
	gGLXFBC⁄fig
 * (
	tAPIENTRYP
 
	tPFNGLXCHOOSEFBCONFIGPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	ts¸ìn
, c⁄° * 
	t©åib_li°
, * 
	t√Àmíts
);

10233 (
APIENTRYP
 
	tPFNGLXGETFBCONFIGATTRIBPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	t©åibuã
, * 
	tvÆue
);

10234 
	gXVisuÆInfo
 * (
	tAPIENTRYP
 
	tPFNGLXGETVISUALFROMFBCONFIGPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
);

10235 
GLXWödow
 (
	tAPIENTRYP
 
	tPFNGLXCREATEWINDOWPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tWödow
 
	twö
, c⁄° * 
	t©åib_li°
);

10236 (
APIENTRYP
 
	tPFNGLXDESTROYWINDOWPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXWödow
 
	twö
);

10237 
GLXPixm≠
 (
	tAPIENTRYP
 
	tPFNGLXCREATEPIXMAPPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tPixm≠
 
	tpixm≠
, c⁄° * 
	t©åib_li°
);

10238 (
APIENTRYP
 
	tPFNGLXDESTROYPIXMAPPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXPixm≠
 
	tpixm≠
);

10239 
GLXPbuf„r
 (
	tAPIENTRYP
 
	tPFNGLXCREATEPBUFFERPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, c⁄° * 
	t©åib_li°
);

10240 (
APIENTRYP
 
	tPFNGLXDESTROYPBUFFERPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXPbuf„r
 
	tpbuf
);

10241 (
APIENTRYP
 
	tPFNGLXQUERYDRAWABLEPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, 
	t©åibuã
, * 
	tvÆue
);

10242 
GLXC⁄ãxt
 (
	tAPIENTRYP
 
	tPFNGLXCREATENEWCONTEXTPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tªndî_ty≥
, 
	tGLXC⁄ãxt
 
	tsh¨e_li°
, 
	tBoﬁ
 
	tdúe˘
);

10243 
Boﬁ
 (
	tAPIENTRYP
 
	tPFNGLXMAKECONTEXTCURRENTPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, GLXDøwabÀ 
	tªad
, 
	tGLXC⁄ãxt
 
	t˘x
);

10244 
GLXDøwabÀ
 (
	tAPIENTRYP
 
	tPFNGLXGETCURRENTREADDRAWABLEPROC
) ();

10245 
	gDi•œy
 * (
	tAPIENTRYP
 
	tPFNGLXGETCURRENTDISPLAYPROC
) ();

10246 (
APIENTRYP
 
	tPFNGLXQUERYCONTEXTPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXC⁄ãxt
 
	t˘x
, 
	t©åibuã
, * 
	tvÆue
);

10247 (
APIENTRYP
 
	tPFNGLXSELECTEVENTPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, 
	tevít_mask
);

10248 (
APIENTRYP
 
	tPFNGLXGETSELECTEDEVENTPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, * 
	tevít_mask
);

10249 
GLEE_EXTERN
 
PFNGLXGETFBCONFIGSPROC
 
	gpglXGëFBC⁄figs
;

10250 
GLEE_EXTERN
 
PFNGLXCHOOSEFBCONFIGPROC
 
	gpglXChoo£FBC⁄fig
;

10251 
GLEE_EXTERN
 
PFNGLXGETFBCONFIGATTRIBPROC
 
	gpglXGëFBC⁄figAârib
;

10252 
GLEE_EXTERN
 
PFNGLXGETVISUALFROMFBCONFIGPROC
 
	gpglXGëVisuÆFromFBC⁄fig
;

10253 
GLEE_EXTERN
 
PFNGLXCREATEWINDOWPROC
 
	gpglXCª©eWödow
;

10254 
GLEE_EXTERN
 
PFNGLXDESTROYWINDOWPROC
 
	gpglXDe°royWödow
;

10255 
GLEE_EXTERN
 
PFNGLXCREATEPIXMAPPROC
 
	gpglXCª©ePixm≠
;

10256 
GLEE_EXTERN
 
PFNGLXDESTROYPIXMAPPROC
 
	gpglXDe°royPixm≠
;

10257 
GLEE_EXTERN
 
PFNGLXCREATEPBUFFERPROC
 
	gpglXCª©ePbuf„r
;

10258 
GLEE_EXTERN
 
PFNGLXDESTROYPBUFFERPROC
 
	gpglXDe°royPbuf„r
;

10259 
GLEE_EXTERN
 
PFNGLXQUERYDRAWABLEPROC
 
	gpglXQuîyDøwabÀ
;

10260 
GLEE_EXTERN
 
PFNGLXCREATENEWCONTEXTPROC
 
	gpglXCª©eNewC⁄ãxt
;

10261 
GLEE_EXTERN
 
PFNGLXMAKECONTEXTCURRENTPROC
 
	gpglXMakeC⁄ãxtCuºít
;

10262 
GLEE_EXTERN
 
PFNGLXGETCURRENTREADDRAWABLEPROC
 
	gpglXGëCuºítRódDøwabÀ
;

10263 
GLEE_EXTERN
 
PFNGLXGETCURRENTDISPLAYPROC
 
	gpglXGëCuºítDi•œy
;

10264 
GLEE_EXTERN
 
PFNGLXQUERYCONTEXTPROC
 
	gpglXQuîyC⁄ãxt
;

10265 
GLEE_EXTERN
 
PFNGLXSELECTEVENTPROC
 
	gpglXSñe˘Evít
;

10266 
GLEE_EXTERN
 
PFNGLXGETSELECTEDEVENTPROC
 
	gpglXGëSñe˘edEvít
;

10267 
	#glXGëFBC⁄figs
 
pglXGëFBC⁄figs


	)

10268 
	#glXChoo£FBC⁄fig
 
pglXChoo£FBC⁄fig


	)

10269 
	#glXGëFBC⁄figAârib
 
pglXGëFBC⁄figAârib


	)

10270 
	#glXGëVisuÆFromFBC⁄fig
 
pglXGëVisuÆFromFBC⁄fig


	)

10271 
	#glXCª©eWödow
 
pglXCª©eWödow


	)

10272 
	#glXDe°royWödow
 
pglXDe°royWödow


	)

10273 
	#glXCª©ePixm≠
 
pglXCª©ePixm≠


	)

10274 
	#glXDe°royPixm≠
 
pglXDe°royPixm≠


	)

10275 
	#glXCª©ePbuf„r
 
pglXCª©ePbuf„r


	)

10276 
	#glXDe°royPbuf„r
 
pglXDe°royPbuf„r


	)

10277 
	#glXQuîyDøwabÀ
 
pglXQuîyDøwabÀ


	)

10278 
	#glXCª©eNewC⁄ãxt
 
pglXCª©eNewC⁄ãxt


	)

10279 
	#glXMakeC⁄ãxtCuºít
 
pglXMakeC⁄ãxtCuºít


	)

10280 
	#glXGëCuºítRódDøwabÀ
 
pglXGëCuºítRódDøwabÀ


	)

10281 
	#glXGëCuºítDi•œy
 
pglXGëCuºítDi•œy


	)

10282 
	#glXQuîyC⁄ãxt
 
pglXQuîyC⁄ãxt


	)

10283 
	#glXSñe˘Evít
 
pglXSñe˘Evít


	)

10284 
	#glXGëSñe˘edEvít
 
pglXGëSñe˘edEvít


	)

10289 #i‚de‡
GLX_VERSION_1_4


10290 
	#GLX_VERSION_1_4
 1

	)

10291 
	#__GLEE_GLX_VERSION_1_4
 1

	)

10293 
	#GLX_SAMPLE_BUFFERS
 100000

	)

10294 
	#GLX_SAMPLES
 100001

	)

10295 
__GLXextFuncPå
 (
	tAPIENTRYP
 
	tPFNGLXGETPROCADDRESSPROC
Ë(c⁄° 
	tGLubyã
 * 
	t¥ocName
);

10296 
GLEE_EXTERN
 
PFNGLXGETPROCADDRESSPROC
 
	gpglXGëProcAddªss
;

10297 
	#glXGëProcAddªss
 
pglXGëProcAddªss


	)

10302 #i‚de‡
GLX_ARB_mu…ißm∂e


10303 
	#GLX_ARB_mu…ißm∂e
 1

	)

10304 
	#__GLEE_GLX_ARB_mu…ißm∂e
 1

	)

10306 
	#GLX_SAMPLE_BUFFERS_ARB
 100000

	)

10307 
	#GLX_SAMPLES_ARB
 100001

	)

10312 #i‚de‡
GLX_ARB_fbc⁄fig_Êﬂt


10313 
	#GLX_ARB_fbc⁄fig_Êﬂt
 1

	)

10314 
	#__GLEE_GLX_ARB_fbc⁄fig_Êﬂt
 1

	)

10316 
	#GLX_RGBA_FLOAT_TYPE_ARB
 0x20B9

	)

10317 
	#GLX_RGBA_FLOAT_BIT_ARB
 0x00000004

	)

10322 #i‚de‡
GLX_SGIS_mu…ißm∂e


10323 
	#GLX_SGIS_mu…ißm∂e
 1

	)

10324 
	#__GLEE_GLX_SGIS_mu…ißm∂e
 1

	)

10326 
	#GLX_SAMPLE_BUFFERS_SGIS
 100000

	)

10327 
	#GLX_SAMPLES_SGIS
 100001

	)

10332 #i‚de‡
GLX_EXT_visuÆ_öfo


10333 
	#GLX_EXT_visuÆ_öfo
 1

	)

10334 
	#__GLEE_GLX_EXT_visuÆ_öfo
 1

	)

10336 
	#GLX_X_VISUAL_TYPE_EXT
 0x22

	)

10337 
	#GLX_TRANSPARENT_TYPE_EXT
 0x23

	)

10338 
	#GLX_TRANSPARENT_INDEX_VALUE_EXT
 0x24

	)

10339 
	#GLX_TRANSPARENT_RED_VALUE_EXT
 0x25

	)

10340 
	#GLX_TRANSPARENT_GREEN_VALUE_EXT
 0x26

	)

10341 
	#GLX_TRANSPARENT_BLUE_VALUE_EXT
 0x27

	)

10342 
	#GLX_TRANSPARENT_ALPHA_VALUE_EXT
 0x28

	)

10343 
	#GLX_NONE_EXT
 0x8000

	)

10344 
	#GLX_TRUE_COLOR_EXT
 0x8002

	)

10345 
	#GLX_DIRECT_COLOR_EXT
 0x8003

	)

10346 
	#GLX_PSEUDO_COLOR_EXT
 0x8004

	)

10347 
	#GLX_STATIC_COLOR_EXT
 0x8005

	)

10348 
	#GLX_GRAY_SCALE_EXT
 0x8006

	)

10349 
	#GLX_STATIC_GRAY_EXT
 0x8007

	)

10350 
	#GLX_TRANSPARENT_RGB_EXT
 0x8008

	)

10351 
	#GLX_TRANSPARENT_INDEX_EXT
 0x8009

	)

10356 #i‚de‡
GLX_SGI_sw≠_c⁄åﬁ


10357 
	#GLX_SGI_sw≠_c⁄åﬁ
 1

	)

10358 
	#__GLEE_GLX_SGI_sw≠_c⁄åﬁ
 1

	)

10360 (
APIENTRYP
 
	tPFNGLXSWAPINTERVALSGIPROC
Ë(
	töãrvÆ
);

10361 
GLEE_EXTERN
 
PFNGLXSWAPINTERVALSGIPROC
 
	gpglXSw≠I¡îvÆSGI
;

10362 
	#glXSw≠I¡îvÆSGI
 
pglXSw≠I¡îvÆSGI


	)

10367 #i‚de‡
GLX_SGI_video_sync


10368 
	#GLX_SGI_video_sync
 1

	)

10369 
	#__GLEE_GLX_SGI_video_sync
 1

	)

10371 (
APIENTRYP
 
	tPFNGLXGETVIDEOSYNCSGIPROC
Ë(* 
	tcou¡
);

10372 (
APIENTRYP
 
	tPFNGLXWAITVIDEOSYNCSGIPROC
Ë(
	tdivis‹
, 
	tªmaödî
, * 
	tcou¡
);

10373 
GLEE_EXTERN
 
PFNGLXGETVIDEOSYNCSGIPROC
 
	gpglXGëVideoSyncSGI
;

10374 
GLEE_EXTERN
 
PFNGLXWAITVIDEOSYNCSGIPROC
 
	gpglXWaôVideoSyncSGI
;

10375 
	#glXGëVideoSyncSGI
 
pglXGëVideoSyncSGI


	)

10376 
	#glXWaôVideoSyncSGI
 
pglXWaôVideoSyncSGI


	)

10381 #i‚de‡
GLX_SGI_make_cuºít_ªad


10382 
	#GLX_SGI_make_cuºít_ªad
 1

	)

10383 
	#__GLEE_GLX_SGI_make_cuºít_ªad
 1

	)

10385 
Boﬁ
 (
	tAPIENTRYP
 
	tPFNGLXMAKECURRENTREADSGIPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, GLXDøwabÀ 
	tªad
, 
	tGLXC⁄ãxt
 
	t˘x
);

10386 
GLXDøwabÀ
 (
	tAPIENTRYP
 
	tPFNGLXGETCURRENTREADDRAWABLESGIPROC
) ();

10387 
GLEE_EXTERN
 
PFNGLXMAKECURRENTREADSGIPROC
 
	gpglXMakeCuºítRódSGI
;

10388 
GLEE_EXTERN
 
PFNGLXGETCURRENTREADDRAWABLESGIPROC
 
	gpglXGëCuºítRódDøwabÀSGI
;

10389 
	#glXMakeCuºítRódSGI
 
pglXMakeCuºítRódSGI


	)

10390 
	#glXGëCuºítRódDøwabÀSGI
 
pglXGëCuºítRódDøwabÀSGI


	)

10395 #i‚de‡
GLX_EXT_visuÆ_øtög


10396 
	#GLX_EXT_visuÆ_øtög
 1

	)

10397 
	#__GLEE_GLX_EXT_visuÆ_øtög
 1

	)

10399 
	#GLX_VISUAL_CAVEAT_EXT
 0x20

	)

10400 
	#GLX_SLOW_VISUAL_EXT
 0x8001

	)

10401 
	#GLX_NON_CONFORMANT_VISUAL_EXT
 0x800D

	)

10406 #i‚de‡
GLX_EXT_imp‹t_c⁄ãxt


10407 
	#GLX_EXT_imp‹t_c⁄ãxt
 1

	)

10408 
	#__GLEE_GLX_EXT_imp‹t_c⁄ãxt
 1

	)

10410 
	#GLX_SHARE_CONTEXT_EXT
 0x800A

	)

10411 
	#GLX_VISUAL_ID_EXT
 0x800B

	)

10412 
	#GLX_SCREEN_EXT
 0x800C

	)

10413 
	gDi•œy
 * (
	tAPIENTRYP
 
	tPFNGLXGETCURRENTDISPLAYEXTPROC
) ();

10414 (
APIENTRYP
 
	tPFNGLXQUERYCONTEXTINFOEXTPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXC⁄ãxt
 
	tc⁄ãxt
, 
	t©åibuã
, * 
	tvÆue
);

10415 
GLXC⁄ãxtID
 (
	tAPIENTRYP
 
	tPFNGLXGETCONTEXTIDEXTPROC
Ë(c⁄° 
	tGLXC⁄ãxt
 
	tc⁄ãxt
);

10416 
GLXC⁄ãxt
 (
	tAPIENTRYP
 
	tPFNGLXIMPORTCONTEXTEXTPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXC⁄ãxtID
 
	tc⁄ãxtID
);

10417 (
APIENTRYP
 
	tPFNGLXFREECONTEXTEXTPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXC⁄ãxt
 
	tc⁄ãxt
);

10418 
GLEE_EXTERN
 
PFNGLXGETCURRENTDISPLAYEXTPROC
 
	gpglXGëCuºítDi•œyEXT
;

10419 
GLEE_EXTERN
 
PFNGLXQUERYCONTEXTINFOEXTPROC
 
	gpglXQuîyC⁄ãxtInfoEXT
;

10420 
GLEE_EXTERN
 
PFNGLXGETCONTEXTIDEXTPROC
 
	gpglXGëC⁄ãxtIDEXT
;

10421 
GLEE_EXTERN
 
PFNGLXIMPORTCONTEXTEXTPROC
 
	gpglXImp‹tC⁄ãxtEXT
;

10422 
GLEE_EXTERN
 
PFNGLXFREECONTEXTEXTPROC
 
	gpglXFªeC⁄ãxtEXT
;

10423 
	#glXGëCuºítDi•œyEXT
 
pglXGëCuºítDi•œyEXT


	)

10424 
	#glXQuîyC⁄ãxtInfoEXT
 
pglXQuîyC⁄ãxtInfoEXT


	)

10425 
	#glXGëC⁄ãxtIDEXT
 
pglXGëC⁄ãxtIDEXT


	)

10426 
	#glXImp‹tC⁄ãxtEXT
 
pglXImp‹tC⁄ãxtEXT


	)

10427 
	#glXFªeC⁄ãxtEXT
 
pglXFªeC⁄ãxtEXT


	)

10432 #i‚de‡
GLX_SGIX_fbc⁄fig


10433 
	#GLX_SGIX_fbc⁄fig
 1

	)

10434 
	#__GLEE_GLX_SGIX_fbc⁄fig
 1

	)

10436 
	#GLX_WINDOW_BIT_SGIX
 0x00000001

	)

10437 
	#GLX_PIXMAP_BIT_SGIX
 0x00000002

	)

10438 
	#GLX_RGBA_BIT_SGIX
 0x00000001

	)

10439 
	#GLX_COLOR_INDEX_BIT_SGIX
 0x00000002

	)

10440 
	#GLX_DRAWABLE_TYPE_SGIX
 0x8010

	)

10441 
	#GLX_RENDER_TYPE_SGIX
 0x8011

	)

10442 
	#GLX_X_RENDERABLE_SGIX
 0x8012

	)

10443 
	#GLX_FBCONFIG_ID_SGIX
 0x8013

	)

10444 
	#GLX_RGBA_TYPE_SGIX
 0x8014

	)

10445 
	#GLX_COLOR_INDEX_TYPE_SGIX
 0x8015

	)

10446 (
APIENTRYP
 
	tPFNGLXGETFBCONFIGATTRIBSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXFBC⁄figSGIX
 
	tc⁄fig
, 
	t©åibuã
, * 
	tvÆue
);

10447 
	gGLXFBC⁄figSGIX
 * (
	tAPIENTRYP
 
	tPFNGLXCHOOSEFBCONFIGSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	ts¸ìn
, * 
	t©åib_li°
, * 
	t√Àmíts
);

10448 
GLXPixm≠
 (
	tAPIENTRYP
 
	tPFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXFBC⁄figSGIX
 
	tc⁄fig
, 
	tPixm≠
 
	tpixm≠
);

10449 
GLXC⁄ãxt
 (
	tAPIENTRYP
 
	tPFNGLXCREATECONTEXTWITHCONFIGSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXFBC⁄figSGIX
 
	tc⁄fig
, 
	tªndî_ty≥
, 
	tGLXC⁄ãxt
 
	tsh¨e_li°
, 
	tBoﬁ
 
	tdúe˘
);

10450 
	gXVisuÆInfo
 * (
	tAPIENTRYP
 
	tPFNGLXGETVISUALFROMFBCONFIGSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXFBC⁄figSGIX
 
	tc⁄fig
);

10451 
GLXFBC⁄figSGIX
 (
	tAPIENTRYP
 
	tPFNGLXGETFBCONFIGFROMVISUALSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tXVisuÆInfo
 * 
	tvis
);

10452 
GLEE_EXTERN
 
PFNGLXGETFBCONFIGATTRIBSGIXPROC
 
	gpglXGëFBC⁄figAâribSGIX
;

10453 
GLEE_EXTERN
 
PFNGLXCHOOSEFBCONFIGSGIXPROC
 
	gpglXChoo£FBC⁄figSGIX
;

10454 
GLEE_EXTERN
 
PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC
 
	gpglXCª©eGLXPixm≠WôhC⁄figSGIX
;

10455 
GLEE_EXTERN
 
PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC
 
	gpglXCª©eC⁄ãxtWôhC⁄figSGIX
;

10456 
GLEE_EXTERN
 
PFNGLXGETVISUALFROMFBCONFIGSGIXPROC
 
	gpglXGëVisuÆFromFBC⁄figSGIX
;

10457 
GLEE_EXTERN
 
PFNGLXGETFBCONFIGFROMVISUALSGIXPROC
 
	gpglXGëFBC⁄figFromVisuÆSGIX
;

10458 
	#glXGëFBC⁄figAâribSGIX
 
pglXGëFBC⁄figAâribSGIX


	)

10459 
	#glXChoo£FBC⁄figSGIX
 
pglXChoo£FBC⁄figSGIX


	)

10460 
	#glXCª©eGLXPixm≠WôhC⁄figSGIX
 
pglXCª©eGLXPixm≠WôhC⁄figSGIX


	)

10461 
	#glXCª©eC⁄ãxtWôhC⁄figSGIX
 
pglXCª©eC⁄ãxtWôhC⁄figSGIX


	)

10462 
	#glXGëVisuÆFromFBC⁄figSGIX
 
pglXGëVisuÆFromFBC⁄figSGIX


	)

10463 
	#glXGëFBC⁄figFromVisuÆSGIX
 
pglXGëFBC⁄figFromVisuÆSGIX


	)

10468 #i‚de‡
GLX_SGIX_pbuf„r


10469 
	#GLX_SGIX_pbuf„r
 1

	)

10470 
	#__GLEE_GLX_SGIX_pbuf„r
 1

	)

10472 
	#GLX_PBUFFER_BIT_SGIX
 0x00000004

	)

10473 
	#GLX_BUFFER_CLOBBER_MASK_SGIX
 0x08000000

	)

10474 
	#GLX_FRONT_LEFT_BUFFER_BIT_SGIX
 0x00000001

	)

10475 
	#GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
 0x00000002

	)

10476 
	#GLX_BACK_LEFT_BUFFER_BIT_SGIX
 0x00000004

	)

10477 
	#GLX_BACK_RIGHT_BUFFER_BIT_SGIX
 0x00000008

	)

10478 
	#GLX_AUX_BUFFERS_BIT_SGIX
 0x00000010

	)

10479 
	#GLX_DEPTH_BUFFER_BIT_SGIX
 0x00000020

	)

10480 
	#GLX_STENCIL_BUFFER_BIT_SGIX
 0x00000040

	)

10481 
	#GLX_ACCUM_BUFFER_BIT_SGIX
 0x00000080

	)

10482 
	#GLX_SAMPLE_BUFFERS_BIT_SGIX
 0x00000100

	)

10483 
	#GLX_MAX_PBUFFER_WIDTH_SGIX
 0x8016

	)

10484 
	#GLX_MAX_PBUFFER_HEIGHT_SGIX
 0x8017

	)

10485 
	#GLX_MAX_PBUFFER_PIXELS_SGIX
 0x8018

	)

10486 
	#GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
 0x8019

	)

10487 
	#GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
 0x801A

	)

10488 
	#GLX_PRESERVED_CONTENTS_SGIX
 0x801B

	)

10489 
	#GLX_LARGEST_PBUFFER_SGIX
 0x801C

	)

10490 
	#GLX_WIDTH_SGIX
 0x801D

	)

10491 
	#GLX_HEIGHT_SGIX
 0x801E

	)

10492 
	#GLX_EVENT_MASK_SGIX
 0x801F

	)

10493 
	#GLX_DAMAGED_SGIX
 0x8020

	)

10494 
	#GLX_SAVED_SGIX
 0x8021

	)

10495 
	#GLX_WINDOW_SGIX
 0x8022

	)

10496 
	#GLX_PBUFFER_SGIX
 0x8023

	)

10497 
GLXPbuf„rSGIX
 (
	tAPIENTRYP
 
	tPFNGLXCREATEGLXPBUFFERSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXFBC⁄figSGIX
 
	tc⁄fig
, 
	twidth
, 
	theight
, * 
	t©åib_li°
);

10498 (
APIENTRYP
 
	tPFNGLXDESTROYGLXPBUFFERSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXPbuf„rSGIX
 
	tpbuf
);

10499 (
APIENTRYP
 
	tPFNGLXQUERYGLXPBUFFERSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXPbuf„rSGIX
 
	tpbuf
, 
	t©åibuã
, * 
	tvÆue
);

10500 (
APIENTRYP
 
	tPFNGLXSELECTEVENTSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tmask
);

10501 (
APIENTRYP
 
	tPFNGLXGETSELECTEDEVENTSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, * 
	tmask
);

10502 
GLEE_EXTERN
 
PFNGLXCREATEGLXPBUFFERSGIXPROC
 
	gpglXCª©eGLXPbuf„rSGIX
;

10503 
GLEE_EXTERN
 
PFNGLXDESTROYGLXPBUFFERSGIXPROC
 
	gpglXDe°royGLXPbuf„rSGIX
;

10504 
GLEE_EXTERN
 
PFNGLXQUERYGLXPBUFFERSGIXPROC
 
	gpglXQuîyGLXPbuf„rSGIX
;

10505 
GLEE_EXTERN
 
PFNGLXSELECTEVENTSGIXPROC
 
	gpglXSñe˘EvítSGIX
;

10506 
GLEE_EXTERN
 
PFNGLXGETSELECTEDEVENTSGIXPROC
 
	gpglXGëSñe˘edEvítSGIX
;

10507 
	#glXCª©eGLXPbuf„rSGIX
 
pglXCª©eGLXPbuf„rSGIX


	)

10508 
	#glXDe°royGLXPbuf„rSGIX
 
pglXDe°royGLXPbuf„rSGIX


	)

10509 
	#glXQuîyGLXPbuf„rSGIX
 
pglXQuîyGLXPbuf„rSGIX


	)

10510 
	#glXSñe˘EvítSGIX
 
pglXSñe˘EvítSGIX


	)

10511 
	#glXGëSñe˘edEvítSGIX
 
pglXGëSñe˘edEvítSGIX


	)

10516 #i‚de‡
GLX_SGI_cushi⁄


10517 
	#GLX_SGI_cushi⁄
 1

	)

10518 
	#__GLEE_GLX_SGI_cushi⁄
 1

	)

10520 (
APIENTRYP
 
	tPFNGLXCUSHIONSGIPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tWödow
 
	twödow
, 
	tcushi⁄
);

10521 
GLEE_EXTERN
 
PFNGLXCUSHIONSGIPROC
 
	gpglXCushi⁄SGI
;

10522 
	#glXCushi⁄SGI
 
pglXCushi⁄SGI


	)

10527 #i‚de‡
GLX_SGIX_video_ªsize


10528 
	#GLX_SGIX_video_ªsize
 1

	)

10529 
	#__GLEE_GLX_SGIX_video_ªsize
 1

	)

10531 
	#GLX_SYNC_FRAME_SGIX
 0x00000000

	)

10532 
	#GLX_SYNC_SWAP_SGIX
 0x00000001

	)

10533 (
APIENTRYP
 
	tPFNGLXBINDCHANNELTOWINDOWSGIXPROC
Ë(
	tDi•œy
 * 
	tdi•œy
, 
	ts¸ìn
, 
	tch™√l
, 
	tWödow
 
	twödow
);

10534 (
APIENTRYP
 
	tPFNGLXCHANNELRECTSGIXPROC
Ë(
	tDi•œy
 * 
	tdi•œy
, 
	ts¸ìn
, 
	tch™√l
, 
	tx
, 
	ty
, 
	tw
, 
	th
);

10535 (
APIENTRYP
 
	tPFNGLXQUERYCHANNELRECTSGIXPROC
Ë(
	tDi•œy
 * 
	tdi•œy
, 
	ts¸ìn
, 
	tch™√l
, * 
	tdx
, * 
	tdy
, * 
	tdw
, * 
	tdh
);

10536 (
APIENTRYP
 
	tPFNGLXQUERYCHANNELDELTASSGIXPROC
Ë(
	tDi•œy
 * 
	tdi•œy
, 
	ts¸ìn
, 
	tch™√l
, * 
	tx
, * 
	ty
, * 
	tw
, * 
	th
);

10537 (
APIENTRYP
 
	tPFNGLXCHANNELRECTSYNCSGIXPROC
Ë(
	tDi•œy
 * 
	tdi•œy
, 
	ts¸ìn
, 
	tch™√l
, 
	tGLíum
 
	tsyn˘y≥
);

10538 
GLEE_EXTERN
 
PFNGLXBINDCHANNELTOWINDOWSGIXPROC
 
	gpglXBödCh™√lToWödowSGIX
;

10539 
GLEE_EXTERN
 
PFNGLXCHANNELRECTSGIXPROC
 
	gpglXCh™√lRe˘SGIX
;

10540 
GLEE_EXTERN
 
PFNGLXQUERYCHANNELRECTSGIXPROC
 
	gpglXQuîyCh™√lRe˘SGIX
;

10541 
GLEE_EXTERN
 
PFNGLXQUERYCHANNELDELTASSGIXPROC
 
	gpglXQuîyCh™√lDñèsSGIX
;

10542 
GLEE_EXTERN
 
PFNGLXCHANNELRECTSYNCSGIXPROC
 
	gpglXCh™√lRe˘SyncSGIX
;

10543 
	#glXBödCh™√lToWödowSGIX
 
pglXBödCh™√lToWödowSGIX


	)

10544 
	#glXCh™√lRe˘SGIX
 
pglXCh™√lRe˘SGIX


	)

10545 
	#glXQuîyCh™√lRe˘SGIX
 
pglXQuîyCh™√lRe˘SGIX


	)

10546 
	#glXQuîyCh™√lDñèsSGIX
 
pglXQuîyCh™√lDñèsSGIX


	)

10547 
	#glXCh™√lRe˘SyncSGIX
 
pglXCh™√lRe˘SyncSGIX


	)

10552 #i‚de‡
GLX_SGIX_sw≠_group


10553 
	#GLX_SGIX_sw≠_group
 1

	)

10554 
	#__GLEE_GLX_SGIX_sw≠_group
 1

	)

10556 (
APIENTRYP
 
	tPFNGLXJOINSWAPGROUPSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, GLXDøwabÀ 
	tmembî
);

10557 
GLEE_EXTERN
 
PFNGLXJOINSWAPGROUPSGIXPROC
 
	gpglXJoöSw≠GroupSGIX
;

10558 
	#glXJoöSw≠GroupSGIX
 
pglXJoöSw≠GroupSGIX


	)

10563 #i‚de‡
GLX_SGIX_sw≠_b¨rõr


10564 
	#GLX_SGIX_sw≠_b¨rõr
 1

	)

10565 
	#__GLEE_GLX_SGIX_sw≠_b¨rõr
 1

	)

10567 (
APIENTRYP
 
	tPFNGLXBINDSWAPBARRIERSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tb¨rõr
);

10568 
Boﬁ
 (
	tAPIENTRYP
 
	tPFNGLXQUERYMAXSWAPBARRIERSSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	ts¸ìn
, * 
	tmax
);

10569 
GLEE_EXTERN
 
PFNGLXBINDSWAPBARRIERSGIXPROC
 
	gpglXBödSw≠B¨rõrSGIX
;

10570 
GLEE_EXTERN
 
PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC
 
	gpglXQuîyMaxSw≠B¨rõrsSGIX
;

10571 
	#glXBödSw≠B¨rõrSGIX
 
pglXBödSw≠B¨rõrSGIX


	)

10572 
	#glXQuîyMaxSw≠B¨rõrsSGIX
 
pglXQuîyMaxSw≠B¨rõrsSGIX


	)

10577 #i‚de‡
GLX_SGIS_bÀnded_ovîœy


10578 
	#GLX_SGIS_bÀnded_ovîœy
 1

	)

10579 
	#__GLEE_GLX_SGIS_bÀnded_ovîœy
 1

	)

10581 
	#GLX_BLENDED_RGBA_SGIS
 0x8025

	)

10586 #i‚de‡
GLX_SGIS_sh¨ed_mu…ißm∂e


10587 
	#GLX_SGIS_sh¨ed_mu…ißm∂e
 1

	)

10588 
	#__GLEE_GLX_SGIS_sh¨ed_mu…ißm∂e
 1

	)

10590 
	#GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS
 0x8026

	)

10591 
	#GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS
 0x8027

	)

10596 #i‚de‡
GLX_SUN_gë_å™•¨ít_ödex


10597 
	#GLX_SUN_gë_å™•¨ít_ödex
 1

	)

10598 
	#__GLEE_GLX_SUN_gë_å™•¨ít_ödex
 1

	)

10600 
Sètus
 (
	tAPIENTRYP
 
	tPFNGLXGETTRANSPARENTINDEXSUNPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tWödow
 
	tovîœy
, Wödow 
	tundîœy
, * 
	tpTøn•¨ítIndex
);

10601 
GLEE_EXTERN
 
PFNGLXGETTRANSPARENTINDEXSUNPROC
 
	gpglXGëTøn•¨ítIndexSUN
;

10602 
	#glXGëTøn•¨ítIndexSUN
 
pglXGëTøn•¨ítIndexSUN


	)

10607 #i‚de‡
GLX_3DFX_mu…ißm∂e


10608 
	#GLX_3DFX_mu…ißm∂e
 1

	)

10609 
	#__GLEE_GLX_3DFX_mu…ißm∂e
 1

	)

10611 
	#GLX_SAMPLE_BUFFERS_3DFX
 0x8050

	)

10612 
	#GLX_SAMPLES_3DFX
 0x8051

	)

10617 #i‚de‡
GLX_MESA_c›y_sub_buf„r


10618 
	#GLX_MESA_c›y_sub_buf„r
 1

	)

10619 
	#__GLEE_GLX_MESA_c›y_sub_buf„r
 1

	)

10621 (
APIENTRYP
 
	tPFNGLXCOPYSUBBUFFERMESAPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tx
, 
	ty
, 
	twidth
, 
	theight
);

10622 
GLEE_EXTERN
 
PFNGLXCOPYSUBBUFFERMESAPROC
 
	gpglXC›ySubBuf„rMESA
;

10623 
	#glXC›ySubBuf„rMESA
 
pglXC›ySubBuf„rMESA


	)

10628 #i‚de‡
GLX_MESA_pixm≠_cﬁ‹m≠


10629 
	#GLX_MESA_pixm≠_cﬁ‹m≠
 1

	)

10630 
	#__GLEE_GLX_MESA_pixm≠_cﬁ‹m≠
 1

	)

10632 
GLXPixm≠
 (
	tAPIENTRYP
 
	tPFNGLXCREATEGLXPIXMAPMESAPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tXVisuÆInfo
 * 
	tvisuÆ
, 
	tPixm≠
 
	tpixm≠
, 
	tCﬁ‹m≠
 
	tcm≠
);

10633 
GLEE_EXTERN
 
PFNGLXCREATEGLXPIXMAPMESAPROC
 
	gpglXCª©eGLXPixm≠MESA
;

10634 
	#glXCª©eGLXPixm≠MESA
 
pglXCª©eGLXPixm≠MESA


	)

10639 #i‚de‡
GLX_MESA_ªÀa£_buf„rs


10640 
	#GLX_MESA_ªÀa£_buf„rs
 1

	)

10641 
	#__GLEE_GLX_MESA_ªÀa£_buf„rs
 1

	)

10643 
Boﬁ
 (
	tAPIENTRYP
 
	tPFNGLXRELEASEBUFFERSMESAPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
);

10644 
GLEE_EXTERN
 
PFNGLXRELEASEBUFFERSMESAPROC
 
	gpglXRñó£Buf„rsMESA
;

10645 
	#glXRñó£Buf„rsMESA
 
pglXRñó£Buf„rsMESA


	)

10650 #i‚de‡
GLX_MESA_£t_3dfx_mode


10651 
	#GLX_MESA_£t_3dfx_mode
 1

	)

10652 
	#__GLEE_GLX_MESA_£t_3dfx_mode
 1

	)

10654 
	#GLX_3DFX_WINDOW_MODE_MESA
 0x1

	)

10655 
	#GLX_3DFX_FULLSCREEN_MODE_MESA
 0x2

	)

10656 
Boﬁ
 (
	tAPIENTRYP
 
	tPFNGLXSET3DFXMODEMESAPROC
Ë(
	tmode
);

10657 
GLEE_EXTERN
 
PFNGLXSET3DFXMODEMESAPROC
 
	gpglXSë3DfxModeMESA
;

10658 
	#glXSë3DfxModeMESA
 
pglXSë3DfxModeMESA


	)

10663 #i‚de‡
GLX_SGIX_visuÆ_£À˘_group


10664 
	#GLX_SGIX_visuÆ_£À˘_group
 1

	)

10665 
	#__GLEE_GLX_SGIX_visuÆ_£À˘_group
 1

	)

10667 
	#GLX_VISUAL_SELECT_GROUP_SGIX
 0x8028

	)

10672 #i‚de‡
GLX_OML_sw≠_mëhod


10673 
	#GLX_OML_sw≠_mëhod
 1

	)

10674 
	#__GLEE_GLX_OML_sw≠_mëhod
 1

	)

10676 
	#GLX_SWAP_METHOD_OML
 0x8060

	)

10677 
	#GLX_SWAP_EXCHANGE_OML
 0x8061

	)

10678 
	#GLX_SWAP_COPY_OML
 0x8062

	)

10679 
	#GLX_SWAP_UNDEFINED_OML
 0x8063

	)

10684 #i‚de‡
GLX_OML_sync_c⁄åﬁ


10685 
	#GLX_OML_sync_c⁄åﬁ
 1

	)

10686 
	#__GLEE_GLX_OML_sync_c⁄åﬁ
 1

	)

10688 
Boﬁ
 (
	tAPIENTRYP
 
	tPFNGLXGETSYNCVALUESOMLPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt64_t
 * 
	tu°
, i¡64_à* 
	tmsc
, i¡64_à* 
	tsbc
);

10689 
Boﬁ
 (
	tAPIENTRYP
 
	tPFNGLXGETMSCRATEOMLPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt32_t
 * 
	tnumî©‹
, i¡32_à* 
	tdíomö©‹
);

10690 
öt64_t
 (
	tAPIENTRYP
 
	tPFNGLXSWAPBUFFERSMSCOMLPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt64_t
 
	tèrgë_msc
, i¡64_à
	tdivis‹
, i¡64_à
	tªmaödî
);

10691 
Boﬁ
 (
	tAPIENTRYP
 
	tPFNGLXWAITFORMSCOMLPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt64_t
 
	tèrgë_msc
, i¡64_à
	tdivis‹
, i¡64_à
	tªmaödî
, i¡64_à* 
	tu°
, i¡64_à* 
	tmsc
, i¡64_à* 
	tsbc
);

10692 
Boﬁ
 (
	tAPIENTRYP
 
	tPFNGLXWAITFORSBCOMLPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt64_t
 
	tèrgë_sbc
, i¡64_à* 
	tu°
, i¡64_à* 
	tmsc
, i¡64_à* 
	tsbc
);

10693 
GLEE_EXTERN
 
PFNGLXGETSYNCVALUESOMLPROC
 
	gpglXGëSyncVÆuesOML
;

10694 
GLEE_EXTERN
 
PFNGLXGETMSCRATEOMLPROC
 
	gpglXGëMscR©eOML
;

10695 
GLEE_EXTERN
 
PFNGLXSWAPBUFFERSMSCOMLPROC
 
	gpglXSw≠Buf„rsMscOML
;

10696 
GLEE_EXTERN
 
PFNGLXWAITFORMSCOMLPROC
 
	gpglXWaôF‹MscOML
;

10697 
GLEE_EXTERN
 
PFNGLXWAITFORSBCOMLPROC
 
	gpglXWaôF‹SbcOML
;

10698 
	#glXGëSyncVÆuesOML
 
pglXGëSyncVÆuesOML


	)

10699 
	#glXGëMscR©eOML
 
pglXGëMscR©eOML


	)

10700 
	#glXSw≠Buf„rsMscOML
 
pglXSw≠Buf„rsMscOML


	)

10701 
	#glXWaôF‹MscOML
 
pglXWaôF‹MscOML


	)

10702 
	#glXWaôF‹SbcOML
 
pglXWaôF‹SbcOML


	)

10707 #i‚de‡
GLX_NV_Êﬂt_buf„r


10708 
	#GLX_NV_Êﬂt_buf„r
 1

	)

10709 
	#__GLEE_GLX_NV_Êﬂt_buf„r
 1

	)

10711 
	#GLX_FLOAT_COMPONENTS_NV
 0x20B0

	)

10716 #i‚de‡
GLX_SGIX_hy≥Ωùe


10717 
	#GLX_SGIX_hy≥Ωùe
 1

	)

10718 
	#__GLEE_GLX_SGIX_hy≥Ωùe
 1

	)

10720 
	#GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
 80

	)

10721 
	#GLX_BAD_HYPERPIPE_CONFIG_SGIX
 91

	)

10722 
	#GLX_BAD_HYPERPIPE_SGIX
 92

	)

10723 
	#GLX_HYPERPIPE_DISPLAY_PIPE_SGIX
 0x00000001

	)

10724 
	#GLX_HYPERPIPE_RENDER_PIPE_SGIX
 0x00000002

	)

10725 
	#GLX_PIPE_RECT_SGIX
 0x00000001

	)

10726 
	#GLX_PIPE_RECT_LIMITS_SGIX
 0x00000002

	)

10727 
	#GLX_HYPERPIPE_STEREO_SGIX
 0x00000003

	)

10728 
	#GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX
 0x00000004

	)

10729 
	#GLX_HYPERPIPE_ID_SGIX
 0x8030

	)

10730 
	gGLXHy≥ΩùeNëw‹kSGIX
 * (
	tAPIENTRYP
 
	tPFNGLXQUERYHYPERPIPENETWORKSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, * 
	t≈ùes
);

10731 (
APIENTRYP
 
	tPFNGLXHYPERPIPECONFIGSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	t√tw‹kId
, 
	t≈ùes
, 
	tGLXHy≥ΩùeC⁄figSGIX
 * 
	tcfg
, * 
	thpId
);

10732 
	gGLXHy≥ΩùeC⁄figSGIX
 * (
	tAPIENTRYP
 
	tPFNGLXQUERYHYPERPIPECONFIGSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	thpId
, * 
	t≈ùes
);

10733 (
APIENTRYP
 
	tPFNGLXDESTROYHYPERPIPECONFIGSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	thpId
);

10734 (
APIENTRYP
 
	tPFNGLXBINDHYPERPIPESGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	thpId
);

10735 (
APIENTRYP
 
	tPFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	ttimeSli˚
, 
	t©åib
, 
	tsize
, * 
	t©åibLi°
, * 
	tªtu∫AâribLi°
);

10736 (
APIENTRYP
 
	tPFNGLXHYPERPIPEATTRIBSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	ttimeSli˚
, 
	t©åib
, 
	tsize
, * 
	t©åibLi°
);

10737 (
APIENTRYP
 
	tPFNGLXQUERYHYPERPIPEATTRIBSGIXPROC
Ë(
	tDi•œy
 * 
	tdpy
, 
	ttimeSli˚
, 
	t©åib
, 
	tsize
, * 
	tªtu∫AâribLi°
);

10738 
GLEE_EXTERN
 
PFNGLXQUERYHYPERPIPENETWORKSGIXPROC
 
	gpglXQuîyHy≥ΩùeNëw‹kSGIX
;

10739 
GLEE_EXTERN
 
PFNGLXHYPERPIPECONFIGSGIXPROC
 
	gpglXHy≥ΩùeC⁄figSGIX
;

10740 
GLEE_EXTERN
 
PFNGLXQUERYHYPERPIPECONFIGSGIXPROC
 
	gpglXQuîyHy≥ΩùeC⁄figSGIX
;

10741 
GLEE_EXTERN
 
PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC
 
	gpglXDe°royHy≥ΩùeC⁄figSGIX
;

10742 
GLEE_EXTERN
 
PFNGLXBINDHYPERPIPESGIXPROC
 
	gpglXBödHy≥ΩùeSGIX
;

10743 
GLEE_EXTERN
 
PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC
 
	gpglXQuîyHy≥ΩùeBe°AâribSGIX
;

10744 
GLEE_EXTERN
 
PFNGLXHYPERPIPEATTRIBSGIXPROC
 
	gpglXHy≥ΩùeAâribSGIX
;

10745 
GLEE_EXTERN
 
PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC
 
	gpglXQuîyHy≥ΩùeAâribSGIX
;

10746 
	#glXQuîyHy≥ΩùeNëw‹kSGIX
 
pglXQuîyHy≥ΩùeNëw‹kSGIX


	)

10747 
	#glXHy≥ΩùeC⁄figSGIX
 
pglXHy≥ΩùeC⁄figSGIX


	)

10748 
	#glXQuîyHy≥ΩùeC⁄figSGIX
 
pglXQuîyHy≥ΩùeC⁄figSGIX


	)

10749 
	#glXDe°royHy≥ΩùeC⁄figSGIX
 
pglXDe°royHy≥ΩùeC⁄figSGIX


	)

10750 
	#glXBödHy≥ΩùeSGIX
 
pglXBödHy≥ΩùeSGIX


	)

10751 
	#glXQuîyHy≥ΩùeBe°AâribSGIX
 
pglXQuîyHy≥ΩùeBe°AâribSGIX


	)

10752 
	#glXHy≥ΩùeAâribSGIX
 
pglXHy≥ΩùeAâribSGIX


	)

10753 
	#glXQuîyHy≥ΩùeAâribSGIX
 
pglXQuîyHy≥ΩùeAâribSGIX


	)

10758 #i‚de‡
GLX_MESA_agp_off£t


10759 
	#GLX_MESA_agp_off£t
 1

	)

10760 
	#__GLEE_GLX_MESA_agp_off£t
 1

	)

10762 (
	tAPIENTRYP
 
	tPFNGLXGETAGPOFFSETMESAPROC
Ë(c⁄° * 
	tpoöãr
);

10763 
GLEE_EXTERN
 
PFNGLXGETAGPOFFSETMESAPROC
 
	gpglXGëAGPOff£tMESA
;

10764 
	#glXGëAGPOff£tMESA
 
pglXGëAGPOff£tMESA


	)

10769 #i‚de‡
GLX_EXT_s˚√_m¨kî


10770 
	#GLX_EXT_s˚√_m¨kî
 1

	)

10771 
	#__GLEE_GLX_EXT_s˚√_m¨kî
 1

	)

10780 
GLEE_EXTERN
 
GLboﬁón
 
GLìInô
();

10781 
GLEE_EXTERN
 
GLöt
 
GLìF‹˚Lök
(c⁄° * 
exãnsi⁄Name
);

10782 
GLEE_EXTERN
 c⁄° * 
GLìGëEº‹Såög
();

10783 
GLEE_EXTERN
 c⁄° * 
GLìGëExtSåGL
();

10784 
GLEE_EXTERN
 
GLboﬁón
 
GLìE«bÀd
(GLboﬁó¿* 
exãnsi⁄QuîyögV¨übÀ
);

10786 #ifde‡
WIN32


10787 
GLEE_EXTERN
 c⁄° * 
GLìGëExtSåWGL
();

10788 #ñi‡
deföed
(
__APPLE__
Ë|| deföed(
__APPLE_CC__
)

10790 
GLEE_EXTERN
 c⁄° * 
GLìGëExtSåGLX
();

10793 #ifde‡
__˝lu•lus


	@shared/TriangleMesh.cpp

17 
	~"TrüngÀMesh.h
"

22 
	gCTrüngÀMesh
::
	$CTrüngÀMesh
()

24 
pIndexes
 = 
NULL
;

25 
pVîts
 = 
NULL
;

26 
pN‹ms
 = 
NULL
;

27 
pTexCo‹ds
 = 
NULL
;

29 
nMaxIndexes
 = 0;

30 
nNumIndexes
 = 0;

31 
nNumVîts
 = 0;

32 
	}
}

37 
	gCTrüngÀMesh
::~
	$CTrüngÀMesh
()

39 
dñëe
 [] 
pIndexes
;

40 
dñëe
 [] 
pVîts
;

41 
dñëe
 [] 
pN‹ms
;

42 
dñëe
 [] 
pTexCo‹ds
;

43 
	}
}

50 
	gCTrüngÀMesh
::
	$BegöMesh
(
GLuöt
 
nMaxVîts
)

53 
dñëe
 [] 
pIndexes
;

54 
dñëe
 [] 
pVîts
;

55 
dñëe
 [] 
pN‹ms
;

56 
dñëe
 [] 
pTexCo‹ds
;

58 
nMaxIndexes
 = 
nMaxVîts
;

59 
nNumIndexes
 = 0;

60 
nNumVîts
 = 0;

63 
pIndexes
 = 
√w
 
GLush‹t
[
nMaxIndexes
];

64 
pVîts
 = 
√w
 
M3DVe˘‹3f
[
nMaxIndexes
];

65 
pN‹ms
 = 
√w
 
M3DVe˘‹3f
[
nMaxIndexes
];

66 
pTexCo‹ds
 = 
√w
 
M3DVe˘‹2f
[
nMaxIndexes
];

67 
	}
}

74 
	gCTrüngÀMesh
::
	$AddTrüngÀ
(
M3DVe˘‹3f
 
vîts
[3], M3DVe˘‹3‡
vN‹ms
[3], 
M3DVe˘‹2f
 
vTexCo‹ds
[3])

76 c⁄° 
e
 = 0.000001;

80 
	`m3dN‹mÆizeVe˘‹
(
vN‹ms
[0]);

81 
	`m3dN‹mÆizeVe˘‹
(
vN‹ms
[1]);

82 
	`m3dN‹mÆizeVe˘‹
(
vN‹ms
[2]);

86 
GLuöt
 
iVîãx
 = 0; iVertex < 3; iVertex++)

88 
GLuöt
 
iM©ch
 = 0;

89 
iM©ch
 = 0; iM©ch < 
nNumVîts
; iMatch++)

92 if(
	`m3dClo£Enough
(
pVîts
[
iM©ch
][0], 
vîts
[
iVîãx
][0], 
e
) &&

93 
	`m3dClo£Enough
(
pVîts
[
iM©ch
][1], 
vîts
[
iVîãx
][1], 
e
) &&

94 
	`m3dClo£Enough
(
pVîts
[
iM©ch
][2], 
vîts
[
iVîãx
][2], 
e
) &&

97 
	`m3dClo£Enough
(
pN‹ms
[
iM©ch
][0], 
vN‹ms
[
iVîãx
][0], 
e
) &&

98 
	`m3dClo£Enough
(
pN‹ms
[
iM©ch
][1], 
vN‹ms
[
iVîãx
][1], 
e
) &&

99 
	`m3dClo£Enough
(
pN‹ms
[
iM©ch
][2], 
vN‹ms
[
iVîãx
][2], 
e
) &&

102 
	`m3dClo£Enough
(
pTexCo‹ds
[
iM©ch
][0], 
vTexCo‹ds
[
iVîãx
][0], 
e
) &&

103 
	`m3dClo£Enough
(
pTexCo‹ds
[
iM©ch
][1], 
vTexCo‹ds
[
iVîãx
][1], 
e
))

106 
pIndexes
[
nNumIndexes
] = 
iM©ch
;

107 
nNumIndexes
++;

113 if(
iM©ch
 =
nNumVîts
)

115 
	`mem˝y
(
pVîts
[
nNumVîts
], 
vîts
[
iVîãx
], (
M3DVe˘‹3f
));

116 
	`mem˝y
(
pN‹ms
[
nNumVîts
], 
vN‹ms
[
iVîãx
], (
M3DVe˘‹3f
));

117 
	`mem˝y
(
pTexCo‹ds
[
nNumVîts
], &
vTexCo‹ds
[
iVîãx
], (
M3DVe˘‹2f
));

118 
pIndexes
[
nNumIndexes
] = 
nNumVîts
;

119 
nNumIndexes
++;

120 
nNumVîts
++;

123 
	}
}

131 
	gCTrüngÀMesh
::
	$EndMesh
()

134 
GLush‹t
 *
pPackedIndexes
 = 
√w
 GLush‹t[
nNumIndexes
];

135 
M3DVe˘‹3f
 *
pPackedVîts
 = 
√w
 M3DVe˘‹3f[
nNumVîts
];

136 
M3DVe˘‹3f
 *
pPackedN‹ms
 = 
√w
 M3DVe˘‹3f[
nNumVîts
];

137 
M3DVe˘‹2f
 *
pPackedTex
 = 
√w
 M3DVe˘‹2f[
nNumVîts
];

140 
	`mem˝y
(
pPackedIndexes
, 
pIndexes
, (
GLush‹t
)*
nNumIndexes
);

141 
	`mem˝y
(
pPackedVîts
, 
pVîts
, (
M3DVe˘‹3f
)*
nNumVîts
);

142 
	`mem˝y
(
pPackedN‹ms
, 
pN‹ms
, (
M3DVe˘‹3f
)*
nNumVîts
);

143 
	`mem˝y
(
pPackedTex
, 
pTexCo‹ds
, (
M3DVe˘‹2f
)*
nNumVîts
);

146 
dñëe
 [] 
pIndexes
;

147 
dñëe
 [] 
pVîts
;

148 
dñëe
 [] 
pN‹ms
;

149 
dñëe
 [] 
pTexCo‹ds
;

152 
pIndexes
 = 
pPackedIndexes
;

153 
pVîts
 = 
pPackedVîts
;

154 
pN‹ms
 = 
pPackedN‹ms
;

155 
pTexCo‹ds
 = 
pPackedTex
;

156 
	}
}

	@shared/TriangleMesh.h

18 
	~"g…oﬁs.h
"

19 
	~"m©h3d.h
"

22 ˛as†
	cCTrüngÀMesh


24 
	mpublic
:

25 
CTrüngÀMesh
();

26 ~
CTrüngÀMesh
();

29 
BegöMesh
(
GLuöt
 
nMaxVîts
);

30 
AddTrüngÀ
(
M3DVe˘‹3f
 
vîts
[3], M3DVe˘‹3‡
vN‹ms
[3], 
M3DVe˘‹2f
 
vTexCo‹ds
[3]);

31 
EndMesh
();

34 
ölöe
 
GLuöt
 
	$GëIndexCou¡
(Ë{  
nNumIndexes
; }

35 
ölöe
 
GLuöt
 
	$GëVîãxCou¡
(Ë{  
nNumVîts
; 
	}
}

38 
	$SˇÀ
(
GLÊﬂt
 
fSˇÀVÆue
) {

39 
i
 = 0; i < 
nNumVîts
; i++)

40 
	`m3dSˇÀVe˘‹3
(
pVîts
[
i
], 
fSˇÀVÆue
);

41 
	}
}

44 
	$Døw
() {

46 
	`glVîãxPoöãr
(3, 
GL_FLOAT
,0, 
pVîts
);

47 
	`glN‹mÆPoöãr
(
GL_FLOAT
, 0, 
pN‹ms
);

48 
	`glTexCo‹dPoöãr
(2, 
GL_FLOAT
, 0, 
pTexCo‹ds
);

51 
	`glDøwEÀmíts
(
GL_TRIANGLES
, 
nNumIndexes
, 
GL_UNSIGNED_SHORT
, 
pIndexes
);

52 
	}
}

54 
	g¥Ÿe˘ed
:

55 
GLush‹t
 *
pIndexes
;

56 
M3DVe˘‹3f
 *
	gpVîts
;

57 
M3DVe˘‹3f
 *
	gpN‹ms
;

58 
M3DVe˘‹2f
 *
	gpTexCo‹ds
;

60 
GLuöt
 
	gnMaxIndexes
;

61 
GLuöt
 
	gnNumIndexes
;

62 
GLuöt
 
	gnNumVîts
;

	@shared/VBOMesh.cpp

22 #ifde‡
löux


25 
	~<GLì.h
>

28 
	~"VBOMesh.h
"

33 
	gCVBOMesh
::
	$CVBOMesh
()

35 
pIndexes
 = 
NULL
;

36 
pVîts
 = 
NULL
;

37 
pN‹ms
 = 
NULL
;

38 
pTexCo‹ds
 = 
NULL
;

40 
nMaxIndexes
 = 0;

41 
nNumIndexes
 = 0;

42 
nNumVîts
 = 0;

43 
	}
}

48 
	gCVBOMesh
::~
	$CVBOMesh
()

51 
dñëe
 [] 
pIndexes
;

52 
dñëe
 [] 
pVîts
;

53 
dñëe
 [] 
pN‹ms
;

54 
dñëe
 [] 
pTexCo‹ds
;

57 
	`glDñëeBuf„rs
(4, 
buf„rObje˘s
);

58 
	}
}

65 
	gCVBOMesh
::
	$BegöMesh
(
GLuöt
 
nMaxVîts
)

68 
dñëe
 [] 
pIndexes
;

69 
dñëe
 [] 
pVîts
;

70 
dñëe
 [] 
pN‹ms
;

71 
dñëe
 [] 
pTexCo‹ds
;

73 
nMaxIndexes
 = 
nMaxVîts
;

74 
nNumIndexes
 = 0;

75 
nNumVîts
 = 0;

78 
pIndexes
 = 
√w
 
GLush‹t
[
nMaxIndexes
];

79 
pVîts
 = 
√w
 
M3DVe˘‹3f
[
nMaxIndexes
];

80 
pN‹ms
 = 
√w
 
M3DVe˘‹3f
[
nMaxIndexes
];

81 
pTexCo‹ds
 = 
√w
 
M3DVe˘‹2f
[
nMaxIndexes
];

82 
	}
}

89 
	gCVBOMesh
::
	$AddTrüngÀ
(
M3DVe˘‹3f
 
vîts
[3], M3DVe˘‹3‡
vN‹ms
[3], 
M3DVe˘‹2f
 
vTexCo‹ds
[3])

91 c⁄° 
e
 = 0.000001;

95 
	`m3dN‹mÆizeVe˘‹
(
vN‹ms
[0]);

96 
	`m3dN‹mÆizeVe˘‹
(
vN‹ms
[1]);

97 
	`m3dN‹mÆizeVe˘‹
(
vN‹ms
[2]);

101 
GLuöt
 
iVîãx
 = 0; iVertex < 3; iVertex++)

103 
GLuöt
 
iM©ch
 = 0;

104 
iM©ch
 = 0; iM©ch < 
nNumVîts
; iMatch++)

107 if(
	`m3dClo£Enough
(
pVîts
[
iM©ch
][0], 
vîts
[
iVîãx
][0], 
e
) &&

108 
	`m3dClo£Enough
(
pVîts
[
iM©ch
][1], 
vîts
[
iVîãx
][1], 
e
) &&

109 
	`m3dClo£Enough
(
pVîts
[
iM©ch
][2], 
vîts
[
iVîãx
][2], 
e
) &&

112 
	`m3dClo£Enough
(
pN‹ms
[
iM©ch
][0], 
vN‹ms
[
iVîãx
][0], 
e
) &&

113 
	`m3dClo£Enough
(
pN‹ms
[
iM©ch
][1], 
vN‹ms
[
iVîãx
][1], 
e
) &&

114 
	`m3dClo£Enough
(
pN‹ms
[
iM©ch
][2], 
vN‹ms
[
iVîãx
][2], 
e
) &&

117 
	`m3dClo£Enough
(
pTexCo‹ds
[
iM©ch
][0], 
vTexCo‹ds
[
iVîãx
][0], 
e
) &&

118 
	`m3dClo£Enough
(
pTexCo‹ds
[
iM©ch
][1], 
vTexCo‹ds
[
iVîãx
][1], 
e
))

121 
pIndexes
[
nNumIndexes
] = 
iM©ch
;

122 
nNumIndexes
++;

128 if(
iM©ch
 =
nNumVîts
)

130 
	`mem˝y
(
pVîts
[
nNumVîts
], 
vîts
[
iVîãx
], (
M3DVe˘‹3f
));

131 
	`mem˝y
(
pN‹ms
[
nNumVîts
], 
vN‹ms
[
iVîãx
], (
M3DVe˘‹3f
));

132 
	`mem˝y
(
pTexCo‹ds
[
nNumVîts
], &
vTexCo‹ds
[
iVîãx
], (
M3DVe˘‹2f
));

133 
pIndexes
[
nNumIndexes
] = 
nNumVîts
;

134 
nNumIndexes
++;

135 
nNumVîts
++;

138 
	}
}

146 
	gCVBOMesh
::
	$EndMesh
()

149 
	`glGíBuf„rs
(4, 
buf„rObje˘s
);

153 
	`glBödBuf„r
(
GL_ARRAY_BUFFER
, 
buf„rObje˘s
[
VERTEX_DATA
]);

154 
	`glBuf„rD©a
(
GL_ARRAY_BUFFER
, (
GLÊﬂt
)*
nNumVîts
*3, 
pVîts
, 
GL_STATIC_DRAW
);

157 
	`glBödBuf„r
(
GL_ARRAY_BUFFER
, 
buf„rObje˘s
[
NORMAL_DATA
]);

158 
	`glBuf„rD©a
(
GL_ARRAY_BUFFER
, (
GLÊﬂt
)*
nNumVîts
*3, 
pN‹ms
, 
GL_STATIC_DRAW
);

161 
	`glBödBuf„r
(
GL_ARRAY_BUFFER
, 
buf„rObje˘s
[
TEXTURE_DATA
]);

162 
	`glBuf„rD©a
(
GL_ARRAY_BUFFER
, (
GLÊﬂt
)*
nNumVîts
*2, 
pTexCo‹ds
, 
GL_STATIC_DRAW
);

165 
	`glBödBuf„r
(
GL_ELEMENT_ARRAY_BUFFER
, 
buf„rObje˘s
[
INDEX_DATA
]);

166 
	`glBuf„rD©a
(
GL_ELEMENT_ARRAY_BUFFER
, (
GLush‹t
)*
nNumIndexes
, 
pIndexes
, 
GL_STATIC_DRAW
);

169 
dñëe
 [] 
pIndexes
;

170 
dñëe
 [] 
pVîts
;

171 
dñëe
 [] 
pN‹ms
;

172 
dñëe
 [] 
pTexCo‹ds
;

175 
pIndexes
 = 
NULL
;

176 
pVîts
 = 
NULL
;

177 
pN‹ms
 = 
NULL
;

178 
pTexCo‹ds
 = 
NULL
;

179 
	}
}

183 
	gCVBOMesh
::
	$Døw
() {

185 
	`glBödBuf„r
(
GL_ARRAY_BUFFER
, 
buf„rObje˘s
[
VERTEX_DATA
]);

186 
	`glVîãxPoöãr
(3, 
GL_FLOAT
,0, 0);

189 
	`glBödBuf„r
(
GL_ARRAY_BUFFER
, 
buf„rObje˘s
[
NORMAL_DATA
]);

190 
	`glN‹mÆPoöãr
(
GL_FLOAT
, 0, 0);

193 
	`glBödBuf„r
(
GL_ARRAY_BUFFER
, 
buf„rObje˘s
[
TEXTURE_DATA
]);

194 
	`glTexCo‹dPoöãr
(2, 
GL_FLOAT
, 0, 0);

197 
	`glBödBuf„r
(
GL_ELEMENT_ARRAY_BUFFER
, 
buf„rObje˘s
[
INDEX_DATA
]);

198 
	`glDøwEÀmíts
(
GL_TRIANGLES
, 
nNumIndexes
, 
GL_UNSIGNED_SHORT
, 0);

199 
	}
}

204 
	gCVBOMesh
::
	$SˇÀ
(
GLÊﬂt
 
fSˇÀVÆue
)

206 
	`glBödBuf„r
(
GL_ARRAY_BUFFER
, 
buf„rObje˘s
[
VERTEX_DATA
]);

207 
M3DVe˘‹3f
 *
pVîãxD©a
 = (M3DVe˘‹3‡*)
	`glM≠Buf„r
(
GL_ARRAY_BUFFER
, 
GL_READ_WRITE
);

209 if(
pVîãxD©a
 !
NULL
)

211 
i
 = 0; i < 
nNumVîts
; i++)

212 
	`m3dSˇÀVe˘‹3
(
pVîãxD©a
[
i
], 
fSˇÀVÆue
);

214 
	`glUnm≠Buf„r
(
GL_ARRAY_BUFFER
);

216 
	}
}

	@shared/VBOMesh.h

23 
	~"g…oﬁs.h
"

24 
	~"m©h3d.h
"

26 
	#VERTEX_DATA
 0

	)

27 
	#NORMAL_DATA
 1

	)

28 
	#TEXTURE_DATA
 2

	)

29 
	#INDEX_DATA
 3

	)

31 ˛as†
	cCVBOMesh


33 
	mpublic
:

34 
CVBOMesh
();

35 ~
CVBOMesh
();

38 
BegöMesh
(
GLuöt
 
nMaxVîts
);

39 
AddTrüngÀ
(
M3DVe˘‹3f
 
vîts
[3], M3DVe˘‹3‡
vN‹ms
[3], 
M3DVe˘‹2f
 
vTexCo‹ds
[3]);

40 
EndMesh
();

43 
ölöe
 
GLuöt
 
	$GëIndexCou¡
(Ë{  
nNumIndexes
; }

44 
ölöe
 
GLuöt
 
	$GëVîãxCou¡
(Ë{  
nNumVîts
; 
	}
}

47 
SˇÀ
(
GLÊﬂt
 
fSˇÀVÆue
);

50 
Døw
();

52 
	g¥Ÿe˘ed
:

53 
GLush‹t
 *
pIndexes
;

54 
M3DVe˘‹3f
 *
	gpVîts
;

55 
M3DVe˘‹3f
 *
	gpN‹ms
;

56 
M3DVe˘‹2f
 *
	gpTexCo‹ds
;

58 
GLuöt
 
	gnMaxIndexes
;

59 
GLuöt
 
	gnNumIndexes
;

60 
GLuöt
 
	gnNumVîts
;

62 
GLuöt
 
	gbuf„rObje˘s
[4];

	@shared/freeglut.h

1 #i‚de‡ 
__FREEGLUT_H__


2 
	#__FREEGLUT_H__


	)

17 
	~"‰ìglut_°d.h
"

18 
	~"‰ìglut_ext.h
"

	@shared/freeglut_ext.h

1 #i‚de‡ 
__FREEGLUT_EXT_H__


2 
	#__FREEGLUT_EXT_H__


	)

31 #ifde‡
__˝lu•lus


38 
	#GLUT_ACTION_EXIT
 0

	)

39 
	#GLUT_ACTION_GLUTMAINLOOP_RETURNS
 1

	)

40 
	#GLUT_ACTION_CONTINUE_EXECUTION
 2

	)

45 
	#GLUT_CREATE_NEW_CONTEXT
 0

	)

46 
	#GLUT_USE_CURRENT_CONTEXT
 1

	)

51 
	#GLUT_FORCE_INDIRECT_CONTEXT
 0

	)

52 
	#GLUT_ALLOW_DIRECT_CONTEXT
 1

	)

53 
	#GLUT_TRY_DIRECT_CONTEXT
 2

	)

54 
	#GLUT_FORCE_DIRECT_CONTEXT
 3

	)

59 
	#GLUT_INIT_STATE
 0x007C

	)

61 
	#GLUT_ACTION_ON_WINDOW_CLOSE
 0x01F9

	)

63 
	#GLUT_WINDOW_BORDER_WIDTH
 0x01FA

	)

64 
	#GLUT_WINDOW_HEADER_HEIGHT
 0x01FB

	)

66 
	#GLUT_VERSION
 0x01FC

	)

68 
	#GLUT_RENDERING_CONTEXT
 0x01FD

	)

69 
	#GLUT_DIRECT_RENDERING
 0x01FE

	)

76 
	#GLUT_AUX1
 0x1000

	)

77 
	#GLUT_AUX2
 0x2000

	)

78 
	#GLUT_AUX3
 0x4000

	)

79 
	#GLUT_AUX4
 0x8000

	)

84 
FGAPI
 
FGAPIENTRY
 
glutMaöLo›Evít
( );

85 
FGAPI
 
FGAPIENTRY
 
glutLóveMaöLo›
( );

90 
FGAPI
 
FGAPIENTRY
 
glutMou£WhìlFunc
–(* 
ˇŒback
)( , , , ) );

91 
FGAPI
 
FGAPIENTRY
 
glutClo£Func
–(* 
ˇŒback
)( ) );

92 
FGAPI
 
FGAPIENTRY
 
glutWMClo£Func
–(* 
ˇŒback
)( ) );

94 
FGAPI
 
FGAPIENTRY
 
glutMíuDe°royFunc
–(* 
ˇŒback
)( ) );

99 
FGAPI
 
FGAPIENTRY
 
glutSëO±i⁄
 ( 
GLíum
 
›ti⁄_Êag
, 
vÆue
 );

101 
FGAPI
 * 
FGAPIENTRY
 
glutGëWödowD©a
( );

102 
FGAPI
 
FGAPIENTRY
 
glutSëWödowD©a
(* 
d©a
);

103 
FGAPI
 * 
FGAPIENTRY
 
glutGëMíuD©a
( );

104 
FGAPI
 
FGAPIENTRY
 
glutSëMíuD©a
(* 
d©a
);

109 
FGAPI
 
FGAPIENTRY
 
glutBôm≠Height
–* 
f⁄t
 );

110 
FGAPI
 
GLÊﬂt
 
FGAPIENTRY
 
glutSåokeHeight
–* 
f⁄t
 );

111 
FGAPI
 
FGAPIENTRY
 
glutBôm≠Såög
–* 
f⁄t
, c⁄° *
°rög
 );

112 
FGAPI
 
FGAPIENTRY
 
glutSåokeSåög
–* 
f⁄t
, c⁄° *
°rög
 );

117 
FGAPI
 
FGAPIENTRY
 
glutWúeRhombicDodeˇhedr⁄
( );

118 
FGAPI
 
FGAPIENTRY
 
glutSﬁidRhombicDodeˇhedr⁄
( );

119 
FGAPI
 
FGAPIENTRY
 
glutWúeSõΩöskiSp⁄ge
 ( 
num_Àvñs
, 
GLdoubÀ
 
off£t
[3], GLdoubÀ 
sˇÀ
 );

120 
FGAPI
 
FGAPIENTRY
 
glutSﬁidSõΩöskiSp⁄ge
 ( 
num_Àvñs
, 
GLdoubÀ
 
off£t
[3], GLdoubÀ 
sˇÀ
 );

121 
FGAPI
 
FGAPIENTRY
 
glutWúeCylödî
–
GLdoubÀ
 
ødius
, GLdoubÀ 
height
, 
GLöt
 
¶i˚s
, GLöà
°acks
);

122 
FGAPI
 
FGAPIENTRY
 
glutSﬁidCylödî
–
GLdoubÀ
 
ødius
, GLdoubÀ 
height
, 
GLöt
 
¶i˚s
, GLöà
°acks
);

127 (*
GLUT¥oc
)();

128 
FGAPI
 
GLUT¥oc
 
FGAPIENTRY
 
glutGëProcAddªss
–c⁄° *
¥ocName
 );

139 
glutJoy°ickGëNumAxes
–
idít
 );

140 
glutJoy°ickGëNumBuâ⁄s
–
idít
 );

141 
glutJoy°ickNŸW‹kög
–
idít
 );

142 
glutJoy°ickGëDódB™d
–
idít
, 
axis
 );

143 
glutJoy°ickSëDódB™d
–
idít
, 
axis
, 
db
 );

144 
glutJoy°ickGëS©uøti⁄
–
idít
, 
axis
 );

145 
glutJoy°ickSëS©uøti⁄
–
idít
, 
axis
, 
°
 );

146 
glutJoy°ickSëMöR™ge
–
idít
, *
axes
 );

147 
glutJoy°ickSëMaxR™ge
–
idít
, *
axes
 );

148 
glutJoy°ickSëCíãr
–
idít
, *
axes
 );

149 
glutJoy°ickGëMöR™ge
–
idít
, *
axes
 );

150 
glutJoy°ickGëMaxR™ge
–
idít
, *
axes
 );

151 
glutJoy°ickGëCíãr
–
idít
, *
axes
 );

153 #ifde‡
__˝lu•lus


	@shared/freeglut_std.h

1 #i‚de‡ 
__FREEGLUT_STD_H__


2 
	#__FREEGLUT_STD_H__


	)

31 #ifde‡
__˝lu•lus


38 #ifde‡
_WIN32


49 #i‚de‡
FREEGLUT_LIB_PRAGMAS


50 #i‡–
deföed
(
_MSC_VER
Ë|| deföed(
__WATCOMC__
ËË&& !deföed(
_WIN32_WCE
)

51 
	#FREEGLUT_LIB_PRAGMAS
 1

	)

53 
	#FREEGLUT_LIB_PRAGMAS
 0

	)

57 
	#WIN32_LEAN_AND_MEAN


	)

58 
	#NOMINMAX


	)

59 
	~<Wödows.h
>

62 #ifde‡
FREEGLUT_STATIC


64 
	#FGAPI


	)

65 
	#FGAPIENTRY


	)

68 #i‡
FREEGLUT_LIB_PRAGMAS


69 #¥agm®
commít
 (
lib
, "freeglut_static.lib")

75 
	#FGAPIENTRY
 
__°dˇŒ


	)

76 #i‡
deföed
(
FREEGLUT_EXPORTS
)

77 
	#FGAPI
 
	`__de˛•ec
(
dŒexp‹t
)

	)

79 
	#FGAPI
 
	`__de˛•ec
(
dŒimp‹t
)

	)

82 #i‡
FREEGLUT_LIB_PRAGMAS


83 #¥agm®
commít
 (
lib
, "freeglut.lib")

91 #i‡
FREEGLUT_LIB_PRAGMAS


92 #¥agm®
commít
 (
lib
, "glu32.lib")

93 #¥agm®
commít
 (
lib
, "opengl32.lib")

94 #¥agm®
commít
 (
lib
, "gdi32.lib")

95 #¥agm®
commít
 (
lib
, "winmm.lib")

96 #¥agm®
commít
 (
lib
, "user32.lib")

102 
	#FGAPI


	)

103 
	#FGAPIENTRY


	)

110 
	#FREEGLUT
 1

	)

111 
	#GLUT_API_VERSION
 4

	)

112 
	#FREEGLUT_VERSION_2_0
 1

	)

113 
	#GLUT_XLIB_IMPLEMENTATION
 13

	)

118 
	~<GL/gl.h
>

119 
	~<GL/glu.h
>

124 
	#GLUT_KEY_F1
 0x0001

	)

125 
	#GLUT_KEY_F2
 0x0002

	)

126 
	#GLUT_KEY_F3
 0x0003

	)

127 
	#GLUT_KEY_F4
 0x0004

	)

128 
	#GLUT_KEY_F5
 0x0005

	)

129 
	#GLUT_KEY_F6
 0x0006

	)

130 
	#GLUT_KEY_F7
 0x0007

	)

131 
	#GLUT_KEY_F8
 0x0008

	)

132 
	#GLUT_KEY_F9
 0x0009

	)

133 
	#GLUT_KEY_F10
 0x000A

	)

134 
	#GLUT_KEY_F11
 0x000B

	)

135 
	#GLUT_KEY_F12
 0x000C

	)

136 
	#GLUT_KEY_LEFT
 0x0064

	)

137 
	#GLUT_KEY_UP
 0x0065

	)

138 
	#GLUT_KEY_RIGHT
 0x0066

	)

139 
	#GLUT_KEY_DOWN
 0x0067

	)

140 
	#GLUT_KEY_PAGE_UP
 0x0068

	)

141 
	#GLUT_KEY_PAGE_DOWN
 0x0069

	)

142 
	#GLUT_KEY_HOME
 0x006A

	)

143 
	#GLUT_KEY_END
 0x006B

	)

144 
	#GLUT_KEY_INSERT
 0x006C

	)

149 
	#GLUT_LEFT_BUTTON
 0x0000

	)

150 
	#GLUT_MIDDLE_BUTTON
 0x0001

	)

151 
	#GLUT_RIGHT_BUTTON
 0x0002

	)

152 
	#GLUT_DOWN
 0x0000

	)

153 
	#GLUT_UP
 0x0001

	)

154 
	#GLUT_LEFT
 0x0000

	)

155 
	#GLUT_ENTERED
 0x0001

	)

160 
	#GLUT_RGB
 0x0000

	)

161 
	#GLUT_RGBA
 0x0000

	)

162 
	#GLUT_INDEX
 0x0001

	)

163 
	#GLUT_SINGLE
 0x0000

	)

164 
	#GLUT_DOUBLE
 0x0002

	)

165 
	#GLUT_ACCUM
 0x0004

	)

166 
	#GLUT_ALPHA
 0x0008

	)

167 
	#GLUT_DEPTH
 0x0010

	)

168 
	#GLUT_STENCIL
 0x0020

	)

169 
	#GLUT_MULTISAMPLE
 0x0080

	)

170 
	#GLUT_STEREO
 0x0100

	)

171 
	#GLUT_LUMINANCE
 0x0200

	)

176 
	#GLUT_MENU_NOT_IN_USE
 0x0000

	)

177 
	#GLUT_MENU_IN_USE
 0x0001

	)

178 
	#GLUT_NOT_VISIBLE
 0x0000

	)

179 
	#GLUT_VISIBLE
 0x0001

	)

180 
	#GLUT_HIDDEN
 0x0000

	)

181 
	#GLUT_FULLY_RETAINED
 0x0001

	)

182 
	#GLUT_PARTIALLY_RETAINED
 0x0002

	)

183 
	#GLUT_FULLY_COVERED
 0x0003

	)

190 #i‡
deföed
(
_MSC_VER
Ë|| deföed(
__CYGWIN__
Ë|| deföed(
__MINGW32__
Ë|| deföed(
__WATCOMC__
)

191 
	#GLUT_STROKE_ROMAN
 ((*)0x0000)

	)

192 
	#GLUT_STROKE_MONO_ROMAN
 ((*)0x0001)

	)

193 
	#GLUT_BITMAP_9_BY_15
 ((*)0x0002)

	)

194 
	#GLUT_BITMAP_8_BY_13
 ((*)0x0003)

	)

195 
	#GLUT_BITMAP_TIMES_ROMAN_10
 ((*)0x0004)

	)

196 
	#GLUT_BITMAP_TIMES_ROMAN_24
 ((*)0x0005)

	)

197 
	#GLUT_BITMAP_HELVETICA_10
 ((*)0x0006)

	)

198 
	#GLUT_BITMAP_HELVETICA_12
 ((*)0x0007)

	)

199 
	#GLUT_BITMAP_HELVETICA_18
 ((*)0x0008)

	)

204 * 
glutSåokeRom™
;

205 * 
glutSåokeM⁄oRom™
;

206 * 
glutBôm≠9By15
;

207 * 
glutBôm≠8By13
;

208 * 
glutBôm≠TimesRom™10
;

209 * 
glutBôm≠TimesRom™24
;

210 * 
glutBôm≠Hñvëiˇ10
;

211 * 
glutBôm≠Hñvëiˇ12
;

212 * 
glutBôm≠Hñvëiˇ18
;

217 
	#GLUT_STROKE_ROMAN
 ((*Ë&
glutSåokeRom™
)

	)

218 
	#GLUT_STROKE_MONO_ROMAN
 ((*Ë&
glutSåokeM⁄oRom™
)

	)

219 
	#GLUT_BITMAP_9_BY_15
 ((*Ë&
glutBôm≠9By15
)

	)

220 
	#GLUT_BITMAP_8_BY_13
 ((*Ë&
glutBôm≠8By13
)

	)

221 
	#GLUT_BITMAP_TIMES_ROMAN_10
 ((*Ë&
glutBôm≠TimesRom™10
)

	)

222 
	#GLUT_BITMAP_TIMES_ROMAN_24
 ((*Ë&
glutBôm≠TimesRom™24
)

	)

223 
	#GLUT_BITMAP_HELVETICA_10
 ((*Ë&
glutBôm≠Hñvëiˇ10
)

	)

224 
	#GLUT_BITMAP_HELVETICA_12
 ((*Ë&
glutBôm≠Hñvëiˇ12
)

	)

225 
	#GLUT_BITMAP_HELVETICA_18
 ((*Ë&
glutBôm≠Hñvëiˇ18
)

	)

231 
	#GLUT_WINDOW_X
 0x0064

	)

232 
	#GLUT_WINDOW_Y
 0x0065

	)

233 
	#GLUT_WINDOW_WIDTH
 0x0066

	)

234 
	#GLUT_WINDOW_HEIGHT
 0x0067

	)

235 
	#GLUT_WINDOW_BUFFER_SIZE
 0x0068

	)

236 
	#GLUT_WINDOW_STENCIL_SIZE
 0x0069

	)

237 
	#GLUT_WINDOW_DEPTH_SIZE
 0x006A

	)

238 
	#GLUT_WINDOW_RED_SIZE
 0x006B

	)

239 
	#GLUT_WINDOW_GREEN_SIZE
 0x006C

	)

240 
	#GLUT_WINDOW_BLUE_SIZE
 0x006D

	)

241 
	#GLUT_WINDOW_ALPHA_SIZE
 0x006E

	)

242 
	#GLUT_WINDOW_ACCUM_RED_SIZE
 0x006F

	)

243 
	#GLUT_WINDOW_ACCUM_GREEN_SIZE
 0x0070

	)

244 
	#GLUT_WINDOW_ACCUM_BLUE_SIZE
 0x0071

	)

245 
	#GLUT_WINDOW_ACCUM_ALPHA_SIZE
 0x0072

	)

246 
	#GLUT_WINDOW_DOUBLEBUFFER
 0x0073

	)

247 
	#GLUT_WINDOW_RGBA
 0x0074

	)

248 
	#GLUT_WINDOW_PARENT
 0x0075

	)

249 
	#GLUT_WINDOW_NUM_CHILDREN
 0x0076

	)

250 
	#GLUT_WINDOW_COLORMAP_SIZE
 0x0077

	)

251 
	#GLUT_WINDOW_NUM_SAMPLES
 0x0078

	)

252 
	#GLUT_WINDOW_STEREO
 0x0079

	)

253 
	#GLUT_WINDOW_CURSOR
 0x007A

	)

255 
	#GLUT_SCREEN_WIDTH
 0x00C8

	)

256 
	#GLUT_SCREEN_HEIGHT
 0x00C9

	)

257 
	#GLUT_SCREEN_WIDTH_MM
 0x00CA

	)

258 
	#GLUT_SCREEN_HEIGHT_MM
 0x00CB

	)

259 
	#GLUT_MENU_NUM_ITEMS
 0x012C

	)

260 
	#GLUT_DISPLAY_MODE_POSSIBLE
 0x0190

	)

261 
	#GLUT_INIT_WINDOW_X
 0x01F4

	)

262 
	#GLUT_INIT_WINDOW_Y
 0x01F5

	)

263 
	#GLUT_INIT_WINDOW_WIDTH
 0x01F6

	)

264 
	#GLUT_INIT_WINDOW_HEIGHT
 0x01F7

	)

265 
	#GLUT_INIT_DISPLAY_MODE
 0x01F8

	)

266 
	#GLUT_ELAPSED_TIME
 0x02BC

	)

267 
	#GLUT_WINDOW_FORMAT_ID
 0x007B

	)

272 
	#GLUT_HAS_KEYBOARD
 0x0258

	)

273 
	#GLUT_HAS_MOUSE
 0x0259

	)

274 
	#GLUT_HAS_SPACEBALL
 0x025A

	)

275 
	#GLUT_HAS_DIAL_AND_BUTTON_BOX
 0x025B

	)

276 
	#GLUT_HAS_TABLET
 0x025C

	)

277 
	#GLUT_NUM_MOUSE_BUTTONS
 0x025D

	)

278 
	#GLUT_NUM_SPACEBALL_BUTTONS
 0x025E

	)

279 
	#GLUT_NUM_BUTTON_BOX_BUTTONS
 0x025F

	)

280 
	#GLUT_NUM_DIALS
 0x0260

	)

281 
	#GLUT_NUM_TABLET_BUTTONS
 0x0261

	)

282 
	#GLUT_DEVICE_IGNORE_KEY_REPEAT
 0x0262

	)

283 
	#GLUT_DEVICE_KEY_REPEAT
 0x0263

	)

284 
	#GLUT_HAS_JOYSTICK
 0x0264

	)

285 
	#GLUT_OWNS_JOYSTICK
 0x0265

	)

286 
	#GLUT_JOYSTICK_BUTTONS
 0x0266

	)

287 
	#GLUT_JOYSTICK_AXES
 0x0267

	)

288 
	#GLUT_JOYSTICK_POLL_RATE
 0x0268

	)

293 
	#GLUT_OVERLAY_POSSIBLE
 0x0320

	)

294 
	#GLUT_LAYER_IN_USE
 0x0321

	)

295 
	#GLUT_HAS_OVERLAY
 0x0322

	)

296 
	#GLUT_TRANSPARENT_INDEX
 0x0323

	)

297 
	#GLUT_NORMAL_DAMAGED
 0x0324

	)

298 
	#GLUT_OVERLAY_DAMAGED
 0x0325

	)

303 
	#GLUT_VIDEO_RESIZE_POSSIBLE
 0x0384

	)

304 
	#GLUT_VIDEO_RESIZE_IN_USE
 0x0385

	)

305 
	#GLUT_VIDEO_RESIZE_X_DELTA
 0x0386

	)

306 
	#GLUT_VIDEO_RESIZE_Y_DELTA
 0x0387

	)

307 
	#GLUT_VIDEO_RESIZE_WIDTH_DELTA
 0x0388

	)

308 
	#GLUT_VIDEO_RESIZE_HEIGHT_DELTA
 0x0389

	)

309 
	#GLUT_VIDEO_RESIZE_X
 0x038A

	)

310 
	#GLUT_VIDEO_RESIZE_Y
 0x038B

	)

311 
	#GLUT_VIDEO_RESIZE_WIDTH
 0x038C

	)

312 
	#GLUT_VIDEO_RESIZE_HEIGHT
 0x038D

	)

317 
	#GLUT_NORMAL
 0x0000

	)

318 
	#GLUT_OVERLAY
 0x0001

	)

323 
	#GLUT_ACTIVE_SHIFT
 0x0001

	)

324 
	#GLUT_ACTIVE_CTRL
 0x0002

	)

325 
	#GLUT_ACTIVE_ALT
 0x0004

	)

330 
	#GLUT_CURSOR_RIGHT_ARROW
 0x0000

	)

331 
	#GLUT_CURSOR_LEFT_ARROW
 0x0001

	)

332 
	#GLUT_CURSOR_INFO
 0x0002

	)

333 
	#GLUT_CURSOR_DESTROY
 0x0003

	)

334 
	#GLUT_CURSOR_HELP
 0x0004

	)

335 
	#GLUT_CURSOR_CYCLE
 0x0005

	)

336 
	#GLUT_CURSOR_SPRAY
 0x0006

	)

337 
	#GLUT_CURSOR_WAIT
 0x0007

	)

338 
	#GLUT_CURSOR_TEXT
 0x0008

	)

339 
	#GLUT_CURSOR_CROSSHAIR
 0x0009

	)

340 
	#GLUT_CURSOR_UP_DOWN
 0x000A

	)

341 
	#GLUT_CURSOR_LEFT_RIGHT
 0x000B

	)

342 
	#GLUT_CURSOR_TOP_SIDE
 0x000C

	)

343 
	#GLUT_CURSOR_BOTTOM_SIDE
 0x000D

	)

344 
	#GLUT_CURSOR_LEFT_SIDE
 0x000E

	)

345 
	#GLUT_CURSOR_RIGHT_SIDE
 0x000F

	)

346 
	#GLUT_CURSOR_TOP_LEFT_CORNER
 0x0010

	)

347 
	#GLUT_CURSOR_TOP_RIGHT_CORNER
 0x0011

	)

348 
	#GLUT_CURSOR_BOTTOM_RIGHT_CORNER
 0x0012

	)

349 
	#GLUT_CURSOR_BOTTOM_LEFT_CORNER
 0x0013

	)

350 
	#GLUT_CURSOR_INHERIT
 0x0064

	)

351 
	#GLUT_CURSOR_NONE
 0x0065

	)

352 
	#GLUT_CURSOR_FULL_CROSSHAIR
 0x0066

	)

357 
	#GLUT_RED
 0x0000

	)

358 
	#GLUT_GREEN
 0x0001

	)

359 
	#GLUT_BLUE
 0x0002

	)

364 
	#GLUT_KEY_REPEAT_OFF
 0x0000

	)

365 
	#GLUT_KEY_REPEAT_ON
 0x0001

	)

366 
	#GLUT_KEY_REPEAT_DEFAULT
 0x0002

	)

368 
	#GLUT_JOYSTICK_BUTTON_A
 0x0001

	)

369 
	#GLUT_JOYSTICK_BUTTON_B
 0x0002

	)

370 
	#GLUT_JOYSTICK_BUTTON_C
 0x0004

	)

371 
	#GLUT_JOYSTICK_BUTTON_D
 0x0008

	)

376 
	#GLUT_GAME_MODE_ACTIVE
 0x0000

	)

377 
	#GLUT_GAME_MODE_POSSIBLE
 0x0001

	)

378 
	#GLUT_GAME_MODE_WIDTH
 0x0002

	)

379 
	#GLUT_GAME_MODE_HEIGHT
 0x0003

	)

380 
	#GLUT_GAME_MODE_PIXEL_DEPTH
 0x0004

	)

381 
	#GLUT_GAME_MODE_REFRESH_RATE
 0x0005

	)

382 
	#GLUT_GAME_MODE_DISPLAY_CHANGED
 0x0006

	)

387 
FGAPI
 
FGAPIENTRY
 
glutInô
–* 
∑rgc
, ** 
¨gv
 );

388 
FGAPI
 
FGAPIENTRY
 
glutInôWödowPosôi⁄
–
x
, 
y
 );

389 
FGAPI
 
FGAPIENTRY
 
glutInôWödowSize
–
width
, 
height
 );

390 
FGAPI
 
FGAPIENTRY
 
glutInôDi•œyMode
–
di•œyMode
 );

391 
FGAPI
 
FGAPIENTRY
 
glutInôDi•œySåög
–c⁄° * 
di•œyMode
 );

396 
FGAPI
 
FGAPIENTRY
 
glutMaöLo›
( );

401 
FGAPI
 
FGAPIENTRY
 
glutCª©eWödow
–c⁄° * 
tôÀ
 );

402 
FGAPI
 
FGAPIENTRY
 
glutCª©eSubWödow
–
wödow
, 
x
, 
y
, 
width
, 
height
 );

403 
FGAPI
 
FGAPIENTRY
 
glutDe°royWödow
–
wödow
 );

404 
FGAPI
 
FGAPIENTRY
 
glutSëWödow
–
wödow
 );

405 
FGAPI
 
FGAPIENTRY
 
glutGëWödow
( );

406 
FGAPI
 
FGAPIENTRY
 
glutSëWödowTôÀ
–c⁄° * 
tôÀ
 );

407 
FGAPI
 
FGAPIENTRY
 
glutSëIc⁄TôÀ
–c⁄° * 
tôÀ
 );

408 
FGAPI
 
FGAPIENTRY
 
glutResh≠eWödow
–
width
, 
height
 );

409 
FGAPI
 
FGAPIENTRY
 
glutPosôi⁄Wödow
–
x
, 
y
 );

410 
FGAPI
 
FGAPIENTRY
 
glutShowWödow
( );

411 
FGAPI
 
FGAPIENTRY
 
glutHideWödow
( );

412 
FGAPI
 
FGAPIENTRY
 
glutIc⁄ifyWödow
( );

413 
FGAPI
 
FGAPIENTRY
 
glutPushWödow
( );

414 
FGAPI
 
FGAPIENTRY
 
glutP›Wödow
( );

415 
FGAPI
 
FGAPIENTRY
 
glutFuŒS¸ìn
( );

420 
FGAPI
 
FGAPIENTRY
 
glutPo°WödowRedi•œy
–
wödow
 );

421 
FGAPI
 
FGAPIENTRY
 
glutPo°Redi•œy
( );

422 
FGAPI
 
FGAPIENTRY
 
glutSw≠Buf„rs
( );

427 
FGAPI
 
FGAPIENTRY
 
glutW¨pPoöãr
–
x
, 
y
 );

428 
FGAPI
 
FGAPIENTRY
 
glutSëCurs‹
–
curs‹
 );

433 
FGAPI
 
FGAPIENTRY
 
glutE°ablishOvîœy
( );

434 
FGAPI
 
FGAPIENTRY
 
glutRemoveOvîœy
( );

435 
FGAPI
 
FGAPIENTRY
 
glutU£Layî
–
GLíum
 
œyî
 );

436 
FGAPI
 
FGAPIENTRY
 
glutPo°OvîœyRedi•œy
( );

437 
FGAPI
 
FGAPIENTRY
 
glutPo°WödowOvîœyRedi•œy
–
wödow
 );

438 
FGAPI
 
FGAPIENTRY
 
glutShowOvîœy
( );

439 
FGAPI
 
FGAPIENTRY
 
glutHideOvîœy
( );

444 
FGAPI
 
FGAPIENTRY
 
glutCª©eMíu
–(* 
ˇŒback
)–
míu
 ) );

445 
FGAPI
 
FGAPIENTRY
 
glutDe°royMíu
–
míu
 );

446 
FGAPI
 
FGAPIENTRY
 
glutGëMíu
( );

447 
FGAPI
 
FGAPIENTRY
 
glutSëMíu
–
míu
 );

448 
FGAPI
 
FGAPIENTRY
 
glutAddMíuE¡ry
–c⁄° * 
œbñ
, 
vÆue
 );

449 
FGAPI
 
FGAPIENTRY
 
glutAddSubMíu
–c⁄° * 
œbñ
, 
subMíu
 );

450 
FGAPI
 
FGAPIENTRY
 
glutCh™geToMíuE¡ry
–
ôem
, c⁄° * 
œbñ
, 
vÆue
 );

451 
FGAPI
 
FGAPIENTRY
 
glutCh™geToSubMíu
–
ôem
, c⁄° * 
œbñ
, 
vÆue
 );

452 
FGAPI
 
FGAPIENTRY
 
glutRemoveMíuIãm
–
ôem
 );

453 
FGAPI
 
FGAPIENTRY
 
glutAâachMíu
–
buâ⁄
 );

454 
FGAPI
 
FGAPIENTRY
 
glutDëachMíu
–
buâ⁄
 );

459 
FGAPI
 
FGAPIENTRY
 
glutTimîFunc
–
time
, (* 
ˇŒback
)–), 
vÆue
 );

460 
FGAPI
 
FGAPIENTRY
 
glutIdÀFunc
–(* 
ˇŒback
)( ) );

465 
FGAPI
 
FGAPIENTRY
 
glutKeybﬂrdFunc
–(* 
ˇŒback
)( , , ) );

466 
FGAPI
 
FGAPIENTRY
 
glutS≥cülFunc
–(* 
ˇŒback
)( , , ) );

467 
FGAPI
 
FGAPIENTRY
 
glutResh≠eFunc
–(* 
ˇŒback
)( , ) );

468 
FGAPI
 
FGAPIENTRY
 
glutVisibûôyFunc
–(* 
ˇŒback
)( ) );

469 
FGAPI
 
FGAPIENTRY
 
glutDi•œyFunc
–(* 
ˇŒback
)( ) );

470 
FGAPI
 
FGAPIENTRY
 
glutMou£Func
–(* 
ˇŒback
)( , , , ) );

471 
FGAPI
 
FGAPIENTRY
 
glutMŸi⁄Func
–(* 
ˇŒback
)( , ) );

472 
FGAPI
 
FGAPIENTRY
 
glutPassiveMŸi⁄Func
–(* 
ˇŒback
)( , ) );

473 
FGAPI
 
FGAPIENTRY
 
glutE¡ryFunc
–(* 
ˇŒback
)( ) );

475 
FGAPI
 
FGAPIENTRY
 
glutKeybﬂrdUpFunc
–(* 
ˇŒback
)( , , ) );

476 
FGAPI
 
FGAPIENTRY
 
glutS≥cülUpFunc
–(* 
ˇŒback
)( , , ) );

477 
FGAPI
 
FGAPIENTRY
 
glutJoy°ickFunc
–(* 
ˇŒback
)–, , , ), 
pﬁlI¡îvÆ
 );

478 
FGAPI
 
FGAPIENTRY
 
glutMíuSèãFunc
–(* 
ˇŒback
)( ) );

479 
FGAPI
 
FGAPIENTRY
 
glutMíuSètusFunc
–(* 
ˇŒback
)( , , ) );

480 
FGAPI
 
FGAPIENTRY
 
glutOvîœyDi•œyFunc
–(* 
ˇŒback
)( ) );

481 
FGAPI
 
FGAPIENTRY
 
glutWödowSètusFunc
–(* 
ˇŒback
)( ) );

483 
FGAPI
 
FGAPIENTRY
 
glutS∑˚bÆlMŸi⁄Func
–(* 
ˇŒback
)( , , ) );

484 
FGAPI
 
FGAPIENTRY
 
glutS∑˚bÆlRŸ©eFunc
–(* 
ˇŒback
)( , , ) );

485 
FGAPI
 
FGAPIENTRY
 
glutS∑˚bÆlBuâ⁄Func
–(* 
ˇŒback
)( , ) );

486 
FGAPI
 
FGAPIENTRY
 
glutBuâ⁄BoxFunc
–(* 
ˇŒback
)( , ) );

487 
FGAPI
 
FGAPIENTRY
 
glutDülsFunc
–(* 
ˇŒback
)( , ) );

488 
FGAPI
 
FGAPIENTRY
 
glutTabÀtMŸi⁄Func
–(* 
ˇŒback
)( , ) );

489 
FGAPI
 
FGAPIENTRY
 
glutTabÀtBuâ⁄Func
–(* 
ˇŒback
)( , , , ) );

494 
FGAPI
 
FGAPIENTRY
 
glutGë
–
GLíum
 
quîy
 );

495 
FGAPI
 
FGAPIENTRY
 
glutDevi˚Gë
–
GLíum
 
quîy
 );

496 
FGAPI
 
FGAPIENTRY
 
glutGëModifõrs
( );

497 
FGAPI
 
FGAPIENTRY
 
glutLayîGë
–
GLíum
 
quîy
 );

502 
FGAPI
 
FGAPIENTRY
 
glutBôm≠Ch¨a˘î
–* 
f⁄t
, 
ch¨a˘î
 );

503 
FGAPI
 
FGAPIENTRY
 
glutBôm≠Width
–* 
f⁄t
, 
ch¨a˘î
 );

504 
FGAPI
 
FGAPIENTRY
 
glutSåokeCh¨a˘î
–* 
f⁄t
, 
ch¨a˘î
 );

505 
FGAPI
 
FGAPIENTRY
 
glutSåokeWidth
–* 
f⁄t
, 
ch¨a˘î
 );

506 
FGAPI
 
FGAPIENTRY
 
glutBôm≠Lígth
–* 
f⁄t
, c⁄° * 
°rög
 );

507 
FGAPI
 
FGAPIENTRY
 
glutSåokeLígth
–* 
f⁄t
, c⁄° * 
°rög
 );

512 
FGAPI
 
FGAPIENTRY
 
glutWúeCube
–
GLdoubÀ
 
size
 );

513 
FGAPI
 
FGAPIENTRY
 
glutSﬁidCube
–
GLdoubÀ
 
size
 );

514 
FGAPI
 
FGAPIENTRY
 
glutWúeSphîe
–
GLdoubÀ
 
ødius
, 
GLöt
 
¶i˚s
, GLöà
°acks
 );

515 
FGAPI
 
FGAPIENTRY
 
glutSﬁidSphîe
–
GLdoubÀ
 
ødius
, 
GLöt
 
¶i˚s
, GLöà
°acks
 );

516 
FGAPI
 
FGAPIENTRY
 
glutWúeC⁄e
–
GLdoubÀ
 
ba£
, GLdoubÀ 
height
, 
GLöt
 
¶i˚s
, GLöà
°acks
 );

517 
FGAPI
 
FGAPIENTRY
 
glutSﬁidC⁄e
–
GLdoubÀ
 
ba£
, GLdoubÀ 
height
, 
GLöt
 
¶i˚s
, GLöà
°acks
 );

519 
FGAPI
 
FGAPIENTRY
 
glutWúeT‹us
–
GLdoubÀ
 
ö√rRadius
, GLdoubÀ 
ouãrRadius
, 
GLöt
 
sides
, GLöà
rögs
 );

520 
FGAPI
 
FGAPIENTRY
 
glutSﬁidT‹us
–
GLdoubÀ
 
ö√rRadius
, GLdoubÀ 
ouãrRadius
, 
GLöt
 
sides
, GLöà
rögs
 );

521 
FGAPI
 
FGAPIENTRY
 
glutWúeDodeˇhedr⁄
( );

522 
FGAPI
 
FGAPIENTRY
 
glutSﬁidDodeˇhedr⁄
( );

523 
FGAPI
 
FGAPIENTRY
 
glutWúeO˘ahedr⁄
( );

524 
FGAPI
 
FGAPIENTRY
 
glutSﬁidO˘ahedr⁄
( );

525 
FGAPI
 
FGAPIENTRY
 
glutWúeTëøhedr⁄
( );

526 
FGAPI
 
FGAPIENTRY
 
glutSﬁidTëøhedr⁄
( );

527 
FGAPI
 
FGAPIENTRY
 
glutWúeIcoßhedr⁄
( );

528 
FGAPI
 
FGAPIENTRY
 
glutSﬁidIcoßhedr⁄
( );

533 
FGAPI
 
FGAPIENTRY
 
glutWúeTópŸ
–
GLdoubÀ
 
size
 );

534 
FGAPI
 
FGAPIENTRY
 
glutSﬁidTópŸ
–
GLdoubÀ
 
size
 );

539 
FGAPI
 
FGAPIENTRY
 
glutGameModeSåög
–c⁄° * 
°rög
 );

540 
FGAPI
 
FGAPIENTRY
 
glutE¡îGameMode
( );

541 
FGAPI
 
FGAPIENTRY
 
glutLóveGameMode
( );

542 
FGAPI
 
FGAPIENTRY
 
glutGameModeGë
–
GLíum
 
quîy
 );

547 
FGAPI
 
FGAPIENTRY
 
glutVideoResizeGë
–
GLíum
 
quîy
 );

548 
FGAPI
 
FGAPIENTRY
 
glutSëupVideoResizög
( );

549 
FGAPI
 
FGAPIENTRY
 
glutSt›VideoResizög
( );

550 
FGAPI
 
FGAPIENTRY
 
glutVideoResize
–
x
, 
y
, 
width
, 
height
 );

551 
FGAPI
 
FGAPIENTRY
 
glutVideoP™
–
x
, 
y
, 
width
, 
height
 );

556 
FGAPI
 
FGAPIENTRY
 
glutSëCﬁ‹
–
cﬁ‹
, 
GLÊﬂt
 
ªd
, GLÊﬂà
gªí
, GLÊﬂà
blue
 );

557 
FGAPI
 
GLÊﬂt
 
FGAPIENTRY
 
glutGëCﬁ‹
–
cﬁ‹
, 
comp⁄ít
 );

558 
FGAPI
 
FGAPIENTRY
 
glutC›yCﬁ‹m≠
–
wödow
 );

563 
FGAPI
 
FGAPIENTRY
 
glutIgn‹eKeyRïót
–
ign‹e
 );

564 
FGAPI
 
FGAPIENTRY
 
glutSëKeyRïót
–
ª≥©Mode
 );

565 
FGAPI
 
FGAPIENTRY
 
glutF‹˚Joy°ickFunc
( );

570 
FGAPI
 
FGAPIENTRY
 
glutExãnsi⁄Suµ‹ãd
–c⁄° * 
exãnsi⁄
 );

571 
FGAPI
 
FGAPIENTRY
 
glutRï‹tEº‹s
( );

573 #ifde‡
__˝lu•lus


	@shared/glFrame.h

6 
	~"m©h3d.h
"

8 #i‚de‡
_ORTHO_FRAME_


9 
	#_ORTHO_FRAME_


	)

14 ˛as†
	cGLFøme


16 
	m¥Ÿe˘ed
:

17 
M3DVe˘‹3f
 
vOrigö
;

18 
M3DVe˘‹3f
 
	mvF‹w¨d
;

19 
M3DVe˘‹3f
 
	mvUp
;

21 
	mpublic
:

24 
	$GLFøme
() {

26 
vOrigö
[0] = 0.0f; vOrigin[1] = 0.0f; vOrigin[2] = 0.0f;

29 
vUp
[0] = 0.0f; vUp[1] = 1.0f; vUp[2] = 0.0f;

32 
vF‹w¨d
[0] = 0.0f; vForward[1] = 0.0f; vForward[2] = -1.0f;

38 
ölöe
 
	$SëOrigö
(c⁄° 
M3DVe˘‹3f
 
vPoöt
) {

39 
	`m3dC›yVe˘‹3
(
vOrigö
, 
vPoöt
); 
	}
}

41 
ölöe
 
	$SëOrigö
(
x
, 
y
, 
z
) {

42 
vOrigö
[0] = 
x
; vOrigö[1] = 
y
; vOrigö[2] = 
z
; 
	}
}

44 
ölöe
 
	$GëOrigö
(
M3DVe˘‹3f
 
vPoöt
) {

45 
	`m3dC›yVe˘‹3
(
vPoöt
, 
vOrigö
); 
	}
}

47 
ölöe
 
	$GëOrigöX
(Ë{  
vOrigö
[0]; 
	}
}

48 
ölöe
 
	$GëOrigöY
(Ë{  
vOrigö
[1]; 
	}
}

49 
ölöe
 
	$GëOrigöZ
(Ë{  
vOrigö
[2]; 
	}
}

53 
ölöe
 
	$SëF‹w¨dVe˘‹
(c⁄° 
M3DVe˘‹3f
 
vDúe˘i⁄
) {

54 
	`m3dC›yVe˘‹3
(
vF‹w¨d
, 
vDúe˘i⁄
); 
	}
}

56 
ölöe
 
	$SëF‹w¨dVe˘‹
(
x
, 
y
, 
z
)

57 { 
vF‹w¨d
[0] = 
x
; vF‹w¨d[1] = 
y
; vF‹w¨d[2] = 
z
; 
	}
}

59 
ölöe
 
	$GëF‹w¨dVe˘‹
(
M3DVe˘‹3f
 
vVe˘‹
Ë{ 
	`m3dC›yVe˘‹3
(vVe˘‹, 
vF‹w¨d
); 
	}
}

63 
ölöe
 
	$SëUpVe˘‹
(c⁄° 
M3DVe˘‹3f
 
vDúe˘i⁄
) {

64 
	`m3dC›yVe˘‹3
(
vUp
, 
vDúe˘i⁄
); 
	}
}

66 
ölöe
 
	$SëUpVe˘‹
(
x
, 
y
, 
z
)

67 { 
vUp
[0] = 
x
; vUp[1] = 
y
; vUp[2] = 
z
; 
	}
}

69 
ölöe
 
	$GëUpVe˘‹
(
M3DVe˘‹3f
 
vVe˘‹
Ë{ 
	`m3dC›yVe˘‹3
(vVe˘‹, 
vUp
); 
	}
}

74 
ölöe
 
	$GëZAxis
(
M3DVe˘‹3f
 
vVe˘‹
Ë{ 
	`GëF‹w¨dVe˘‹
(vVe˘‹); 
	}
}

75 
ölöe
 
	$GëYAxis
(
M3DVe˘‹3f
 
vVe˘‹
Ë{ 
	`GëUpVe˘‹
(vVe˘‹); 
	}
}

76 
ölöe
 
	$GëXAxis
(
M3DVe˘‹3f
 
vVe˘‹
Ë{ 
	`m3dCrossProdu˘
(vVe˘‹, 
vUp
, 
vF‹w¨d
); 
	}
}

81 
ölöe
 
	$Tøn¶©eW‹ld
(
x
, 
y
, 
z
)

82 { 
vOrigö
[0] +
x
; vOrigö[1] +
y
; vOrigö[2] +
z
; 
	}
}

84 
ölöe
 
	$Tøn¶©eLoˇl
(
x
, 
y
, 
z
)

85 { 
	`MoveF‹w¨d
(
z
); 
	`MoveUp
(
y
); 
	`MoveRight
(
x
); 
	}
}

90 
ölöe
 
	$MoveF‹w¨d
(
fDñè
)

93 
vOrigö
[0] +
vF‹w¨d
[0] * 
fDñè
;

94 
vOrigö
[1] +
vF‹w¨d
[1] * 
fDñè
;

95 
vOrigö
[2] +
vF‹w¨d
[2] * 
fDñè
;

96 
	}
}

99 
ölöe
 
	$MoveUp
(
fDñè
)

102 
vOrigö
[0] +
vUp
[0] * 
fDñè
;

103 
vOrigö
[1] +
vUp
[1] * 
fDñè
;

104 
vOrigö
[2] +
vUp
[2] * 
fDñè
;

105 
	}
}

108 
ölöe
 
	$MoveRight
(
fDñè
)

111 
M3DVe˘‹3f
 
vCross
;

112 
	`m3dCrossProdu˘
(
vCross
, 
vUp
, 
vF‹w¨d
);

114 
vOrigö
[0] +
vCross
[0] * 
fDñè
;

115 
vOrigö
[1] +
vCross
[1] * 
fDñè
;

116 
vOrigö
[2] +
vCross
[2] * 
fDñè
;

117 
	}
}

120 
	$GëM©rix
(
M3DM©rix44f
 
m©rix
, 
boﬁ
 
bRŸ©i⁄O∆y
 = 
Ál£
)

123 
M3DVe˘‹3f
 
vXAxis
;

124 
	`m3dCrossProdu˘
(
vXAxis
, 
vUp
, 
vF‹w¨d
);

127 
	`m3dSëM©rixCﬁumn44
(
m©rix
, 
vXAxis
, 0);

128 
m©rix
[3] = 0.0f;

131 
	`m3dSëM©rixCﬁumn44
(
m©rix
, 
vUp
, 1);

132 
m©rix
[7] = 0.0f;

135 
	`m3dSëM©rixCﬁumn44
(
m©rix
, 
vF‹w¨d
, 2);

136 
m©rix
[11] = 0.0f;

139 if(
bRŸ©i⁄O∆y
 =
åue
)

141 
m©rix
[12] = 0.0f;

142 
m©rix
[13] = 0.0f;

143 
m©rix
[14] = 0.0f;

146 
	`m3dSëM©rixCﬁumn44
(
m©rix
, 
vOrigö
, 3);

148 
m©rix
[15] = 1.0f;

149 
	}
}

155 
ölöe
 
	$GëCamîaOrõ¡©i⁄
(
M3DM©rix44f
 
m
)

157 
M3DVe˘‹3f
 
x
, 
z
;

161 
z
[0] = -
vF‹w¨d
[0];

162 
z
[1] = -
vF‹w¨d
[1];

163 
z
[2] = -
vF‹w¨d
[2];

166 
	`m3dCrossProdu˘
(
x
, 
vUp
, 
z
);

170 
	#M
(
row
,
cﬁ
Ë
m
[cﬁ*4+row]

	)

171 
	`M
(0, 0Ë
x
[0];

172 
	`M
(0, 1Ë
x
[1];

173 
	`M
(0, 2Ë
x
[2];

174 
	`M
(0, 3) = 0.0;

175 
	`M
(1, 0Ë
vUp
[0];

176 
	`M
(1, 1Ë
vUp
[1];

177 
	`M
(1, 2Ë
vUp
[2];

178 
	`M
(1, 3) = 0.0;

179 
	`M
(2, 0Ë
z
[0];

180 
	`M
(2, 1Ë
z
[1];

181 
	`M
(2, 2Ë
z
[2];

182 
	`M
(2, 3) = 0.0;

183 
	`M
(3, 0) = 0.0;

184 
	`M
(3, 1) = 0.0;

185 
	`M
(3, 2) = 0.0;

186 
	`M
(3, 3) = 1.0;

187 #unde‡
M


188 
	}
}

200 
ölöe
 
	$AµlyCamîaTønsf‹m
(
boﬁ
 
bRŸO∆y
 = 
Ál£
)

202 
M3DM©rix44f
 
m
;

204 
	`GëCamîaOrõ¡©i⁄
(
m
);

207 
	`glMu…M©rixf
(
m
);

210 if(!
bRŸO∆y
)

211 
	`glTøn¶©ef
(-
vOrigö
[0], -vOrigin[1], -vOrigin[2]);

219 
	}
}

227 
	$AµlyA˘‹Tønsf‹m
(
boﬁ
 
bRŸ©i⁄O∆y
 = 
Ál£
)

229 
M3DM©rix44f
 
rŸM©
;

231 
	`GëM©rix
(
rŸM©
, 
bRŸ©i⁄O∆y
);

234 
	`glMu…M©rixf
(
rŸM©
);

235 
	}
}

239 
	$RŸ©eLoˇlX
(
fAngÀ
)

241 
M3DM©rix44f
 
rŸM©
;

242 
M3DVe˘‹3f
 
vCross
;

243 
	`m3dCrossProdu˘
(
vCross
, 
vUp
, 
vF‹w¨d
);

244 
	`m3dRŸ©i⁄M©rix44
(
rŸM©
, 
fAngÀ
,

245 
vCross
[0], vCross[1], vCross[2]);

247 
M3DVe˘‹3f
 
√wVe˘
;

249 
√wVe˘
[0] = 
rŸM©
[0] * 
vF‹w¨d
[0] +ÑotMat[4] * vForward[1] +ÑotMat[8] * vForward[2];

250 
√wVe˘
[1] = 
rŸM©
[1] * 
vF‹w¨d
[0] +ÑotMat[5] * vForward[1] +ÑotMat[9] * vForward[2];

251 
√wVe˘
[2] = 
rŸM©
[2] * 
vF‹w¨d
[0] +ÑotMat[6] * vForward[1] +ÑotMat[10] * vForward[2];

252 
	`m3dC›yVe˘‹3
(
vF‹w¨d
, 
√wVe˘
);

255 
√wVe˘
[0] = 
rŸM©
[0] * 
vUp
[0] +ÑotMat[4] * vUp[1] +ÑotMat[8] * vUp[2];

256 
√wVe˘
[1] = 
rŸM©
[1] * 
vUp
[0] +ÑotMat[5] * vUp[1] +ÑotMat[9] * vUp[2];

257 
√wVe˘
[2] = 
rŸM©
[2] * 
vUp
[0] +ÑotMat[6] * vUp[1] +ÑotMat[10] * vUp[2];

258 
	`m3dC›yVe˘‹3
(
vUp
, 
√wVe˘
);

259 
	}
}

262 
	$RŸ©eLoˇlY
(
fAngÀ
)

264 
M3DM©rix44f
 
rŸM©
;

268 
	`m3dRŸ©i⁄M©rix44
(
rŸM©
, 
fAngÀ
,

269 
vUp
[0], vUp[1], vUp[2]);

271 
M3DVe˘‹3f
 
√wVe˘
;

274 
√wVe˘
[0] = 
rŸM©
[0] * 
vF‹w¨d
[0] +ÑotMat[4] * vForward[1] +ÑotMat[8] * vForward[2];

275 
√wVe˘
[1] = 
rŸM©
[1] * 
vF‹w¨d
[0] +ÑotMat[5] * vForward[1] +ÑotMat[9] * vForward[2];

276 
√wVe˘
[2] = 
rŸM©
[2] * 
vF‹w¨d
[0] +ÑotMat[6] * vForward[1] +ÑotMat[10] * vForward[2];

277 
	`m3dC›yVe˘‹3
(
vF‹w¨d
, 
√wVe˘
);

278 
	}
}

282 
	$RŸ©eLoˇlZ
(
fAngÀ
)

284 
M3DM©rix44f
 
rŸM©
;

287 
	`m3dRŸ©i⁄M©rix44
(
rŸM©
, 
fAngÀ
,

288 
vF‹w¨d
[0], vForward[1], vForward[2]);

290 
M3DVe˘‹3f
 
√wVe˘
;

291 
√wVe˘
[0] = 
rŸM©
[0] * 
vUp
[0] +ÑotMat[4] * vUp[1] +ÑotMat[8] * vUp[2];

292 
√wVe˘
[1] = 
rŸM©
[1] * 
vUp
[0] +ÑotMat[5] * vUp[1] +ÑotMat[9] * vUp[2];

293 
√wVe˘
[2] = 
rŸM©
[2] * 
vUp
[0] +ÑotMat[6] * vUp[1] +ÑotMat[10] * vUp[2];

294 
	`m3dC›yVe˘‹3
(
vUp
, 
√wVe˘
);

295 
	}
}

300 
	$N‹mÆize
()

302 
M3DVe˘‹3f
 
vCross
;

305 
	`m3dCrossProdu˘
(
vCross
, 
vUp
, 
vF‹w¨d
);

308 
	`m3dCrossProdu˘
(
vF‹w¨d
, 
vCross
, 
vUp
);

311 
	`m3dN‹mÆizeVe˘‹
(
vUp
);

312 
	`m3dN‹mÆizeVe˘‹
(
vF‹w¨d
);

313 
	}
}

317 
	$RŸ©eW‹ld
(
fAngÀ
, 
x
, 
y
, 
z
)

319 
M3DM©rix44f
 
rŸM©
;

322 
	`m3dRŸ©i⁄M©rix44
(
rŸM©
, 
fAngÀ
, 
x
, 
y
, 
z
);

324 
M3DVe˘‹3f
 
√wVe˘
;

327 
√wVe˘
[0] = 
rŸM©
[0] * 
vUp
[0] +ÑotMat[4] * vUp[1] +ÑotMat[8] * vUp[2];

328 
√wVe˘
[1] = 
rŸM©
[1] * 
vUp
[0] +ÑotMat[5] * vUp[1] +ÑotMat[9] * vUp[2];

329 
√wVe˘
[2] = 
rŸM©
[2] * 
vUp
[0] +ÑotMat[6] * vUp[1] +ÑotMat[10] * vUp[2];

330 
	`m3dC›yVe˘‹3
(
vUp
, 
√wVe˘
);

333 
√wVe˘
[0] = 
rŸM©
[0] * 
vF‹w¨d
[0] +ÑotMat[4] * vForward[1] +ÑotMat[8] * vForward[2];

334 
√wVe˘
[1] = 
rŸM©
[1] * 
vF‹w¨d
[0] +ÑotMat[5] * vForward[1] +ÑotMat[9] * vForward[2];

335 
√wVe˘
[2] = 
rŸM©
[2] * 
vF‹w¨d
[0] +ÑotMat[6] * vForward[1] +ÑotMat[10] * vForward[2];

336 
	`m3dC›yVe˘‹3
(
vF‹w¨d
, 
√wVe˘
);

337 
	}
}

341 
	$RŸ©eLoˇl
(
fAngÀ
, 
x
, 
y
, 
z
)

343 
M3DVe˘‹3f
 
vW‹ldVe˘
;

344 
M3DVe˘‹3f
 
vLoˇlVe˘
;

345 
	`m3dLﬂdVe˘‹3
(
vLoˇlVe˘
, 
x
, 
y
, 
z
);

347 
	`LoˇlToW‹ld
(
vLoˇlVe˘
, 
vW‹ldVe˘
);

348 
	`RŸ©eW‹ld
(
fAngÀ
, 
vW‹ldVe˘
[0], vWorldVect[1], vWorldVect[2]);

349 
	}
}

357 
	$LoˇlToW‹ld
(c⁄° 
M3DVe˘‹3f
 
vLoˇl
, M3DVe˘‹3‡
vW‹ld
)

360 
M3DM©rix44f
 
rŸM©
;

362 
	`GëM©rix
(
rŸM©
, 
åue
);

365 
vW‹ld
[0] = 
rŸM©
[0] * 
vLoˇl
[0] +ÑotMat[4] * vLocal[1] +ÑotMat[8] * vLocal[2];

366 
vW‹ld
[1] = 
rŸM©
[1] * 
vLoˇl
[0] +ÑotMat[5] * vLocal[1] +ÑotMat[9] * vLocal[2];

367 
vW‹ld
[2] = 
rŸM©
[2] * 
vLoˇl
[0] +ÑotMat[6] * vLocal[1] +ÑotMat[10] * vLocal[2];

370 
vW‹ld
[0] +
vOrigö
[0];

371 
vW‹ld
[1] +
vOrigö
[1];

372 
vW‹ld
[2] +
vOrigö
[2];

373 
	}
}

376 
	$W‹ldToLoˇl
(c⁄° 
M3DVe˘‹3f
 
vW‹ld
, M3DVe˘‹3‡
vLoˇl
)

380 
M3DVe˘‹3f
 
vNewW‹ld
;

381 
vNewW‹ld
[0] = 
vW‹ld
[0] - 
vOrigö
[0];

382 
vNewW‹ld
[1] = 
vW‹ld
[1] - 
vOrigö
[1];

383 
vNewW‹ld
[2] = 
vW‹ld
[2] - 
vOrigö
[2];

386 
M3DM©rix44f
 
rŸM©
;

387 
M3DM©rix44f
 
övM©
;

388 
	`GëM©rix
(
rŸM©
, 
åue
);

391 
	`m3dInvîtM©rix44
(
övM©
, 
rŸM©
);

393 
vLoˇl
[0] = 
övM©
[0] * 
vNewW‹ld
[0] + invMat[4] * vNewWorld[1] + invMat[8] * vNewWorld[2];

394 
vLoˇl
[1] = 
övM©
[1] * 
vNewW‹ld
[0] + invMat[5] * vNewWorld[1] + invMat[9] * vNewWorld[2];

395 
vLoˇl
[2] = 
övM©
[2] * 
vNewW‹ld
[0] + invMat[6] * vNewWorld[1] + invMat[10] * vNewWorld[2];

396 
	}
}

400 
	$Tønsf‹mPoöt
(
M3DVe˘‹3f
 
vPoötSrc
, M3DVe˘‹3‡
vPoötD°
)

402 
M3DM©rix44f
 
m
;

403 
	`GëM©rix
(
m
, 
Ál£
);

404 
vPoötD°
[0] = 
m
[0] * 
vPoötSrc
[0] + m[4] * vPointSrc[1] + m[8] * vPointSrc[2] + m[12];

405 
vPoötD°
[1] = 
m
[1] * 
vPoötSrc
[0] + m[5] * vPointSrc[1] + m[9] * vPointSrc[2] + m[13];

406 
vPoötD°
[2] = 
m
[2] * 
vPoötSrc
[0] + m[6] * vPointSrc[1] + m[10] * vPointSrc[2] + m[14];

407 
	}
}

411 
	$RŸ©eVe˘‹
(
M3DVe˘‹3f
 
vVe˘‹Src
, M3DVe˘‹3‡
vVe˘‹D°
)

413 
M3DM©rix44f
 
m
;

414 
	`GëM©rix
(
m
, 
åue
);

416 
vVe˘‹D°
[0] = 
m
[0] * 
vVe˘‹Src
[0] + m[4] * vVectorSrc[1] + m[8] * vVectorSrc[2];

417 
vVe˘‹D°
[1] = 
m
[1] * 
vVe˘‹Src
[0] + m[5] * vVectorSrc[1] + m[9] * vVectorSrc[2];

418 
vVe˘‹D°
[2] = 
m
[2] * 
vVe˘‹Src
[0] + m[6] * vVectorSrc[1] + m[10] * vVectorSrc[2];

419 
	}
}

	@shared/glfrustum.h

6 
	~<m©h3d.h
>

7 
	~<GLFøme.h
>

9 #i‚de‡
__GL_FRAME_CLASS


10 
	#__GL_FRAME_CLASS


	)

16 ˛as†
	cGLFru°um


18 
	mpublic
:

19 
	$GLFru°um
()

20 { 
	`Së
(30.0f, 1.0, 1.0, 10.0); }

23 
	$GLFru°um
(
fFov
, 
fA•e˘
, 
fNór
, 
fF¨
)

24 { 
	`Së
(
fFov
, 
fA•e˘
, 
fNór
, 
fF¨
); 
	}
}

28 
	$Së
(
fFov
, 
fA•e˘
, 
fNór
, 
fF¨
)

30 
xmö
, 
xmax
, 
ymö
, 
ymax
;

31 
xFmö
, 
xFmax
, 
yFmö
, 
yFmax
;

34 
ymax
 = 
fNór
 * (
	`èn
–
fFov
 * 
M3D_PI
 / 360.0 ));

35 
ymö
 = -
ymax
;

36 
xmö
 = 
ymö
 * 
fA•e˘
;

37 
xmax
 = -
xmö
;

40 
yFmax
 = 
fF¨
 * (
	`èn
(
fFov
 * 
M3D_PI
 / 360.0));

41 
yFmö
 = -
yFmax
;

42 
xFmö
 = 
yFmö
 * 
fA•e˘
;

43 
xFmax
 = -
xFmö
;

46 
	`glM©rixMode
(
GL_PROJECTION
);

47 
	`glLﬂdIdítôy
();

48 
	`glFru°um
–
xmö
, 
xmax
, 
ymö
, 
ymax
, 
fNór
, 
fF¨
 );

49 
	`glM©rixMode
(
GL_MODELVIEW
);

54 
√¨UL
[0] = 
xmö
;ÇórUL[1] = 
ymax
;ÇórUL[2] = -
fNór
;ÇearUL[3] = 1.0f;

57 
√¨LL
[0] = 
xmö
;ÇórLL[1] = 
ymö
;ÇórLL[2] = -
fNór
;ÇearLL[3] = 1.0f;

60 
√¨UR
[0] = 
xmax
;ÇórUR[1] = 
ymax
;ÇórUR[2] = -
fNór
;ÇearUR[3] = 1.0f;

63 
√¨LR
[0] = 
xmax
;ÇórLR[1] = 
ymö
;ÇórLR[2] = -
fNór
;ÇearLR[3] = 1.0f;

66 
ÁrUL
[0] = 
xFmö
; f¨UL[1] = 
yFmax
; f¨UL[2] = -
fF¨
; farUL[3] = 1.0f;

69 
ÁrLL
[0] = 
xFmö
; f¨LL[1] = 
yFmö
; f¨LL[2] = -
fF¨
; farLL[3] = 1.0f;

72 
ÁrUR
[0] = 
xFmax
; f¨UR[1] = 
yFmax
; f¨UR[2] = -
fF¨
; farUR[3] = 1.0f;

75 
ÁrLR
[0] = 
xFmax
; f¨LR[1] = 
yFmö
; f¨LR[2] = -
fF¨
; farLR[3] = 1.0f;

76 
	}
}

81 
	$Tønsf‹m
(
GLFøme
& 
Camîa
)

84 
M3DM©rix44f
 
rŸM©
;

85 
M3DVe˘‹3f
 
vF‹w¨d
, 
vUp
, 
vCross
;

86 
M3DVe˘‹3f
 
vOrigö
;

97 
Camîa
.
	`GëF‹w¨dVe˘‹
(
vF‹w¨d
);

98 
vF‹w¨d
[0] = -vForward[0];

99 
vF‹w¨d
[1] = -vForward[1];

100 
vF‹w¨d
[2] = -vForward[2];

102 
Camîa
.
	`GëUpVe˘‹
(
vUp
);

103 
Camîa
.
	`GëOrigö
(
vOrigö
);

106 
	`m3dCrossProdu˘f
(
vCross
, 
vUp
, 
vF‹w¨d
);

110 
	`mem˝y
(
rŸM©
, 
vCross
, ()*3);

111 
rŸM©
[3] = 0.0f;

114 
	`mem˝y
(&
rŸM©
[4], 
vUp
, ()*3);

115 
rŸM©
[7] = 0.0f;

118 
	`mem˝y
(&
rŸM©
[8], 
vF‹w¨d
, ()*3);

119 
rŸM©
[11] = 0.0f;

122 
rŸM©
[12] = 
vOrigö
[0];

123 
rŸM©
[13] = 
vOrigö
[1];

124 
rŸM©
[14] = 
vOrigö
[2];

125 
rŸM©
[15] = 1.0f;

129 
	`m3dTønsf‹mVe˘‹4f
(
√¨ULT
, 
rŸM©
, 
√¨UL
);

130 
	`m3dTønsf‹mVe˘‹4f
(
√¨LLT
, 
rŸM©
, 
√¨LL
);

131 
	`m3dTønsf‹mVe˘‹4f
(
√¨URT
, 
rŸM©
, 
√¨UR
);

132 
	`m3dTønsf‹mVe˘‹4f
(
√¨LRT
, 
rŸM©
, 
√¨LR
);

133 
	`m3dTønsf‹mVe˘‹4f
(
ÁrULT
, 
rŸM©
, 
ÁrUL
);

134 
	`m3dTønsf‹mVe˘‹4f
(
ÁrLLT
, 
rŸM©
, 
ÁrLL
);

135 
	`m3dTønsf‹mVe˘‹4f
(
ÁrURT
, 
rŸM©
, 
ÁrUR
);

136 
	`m3dTønsf‹mVe˘‹4f
(
ÁrLRT
, 
rŸM©
, 
ÁrLR
);

143 
	`m3dGëPœ√Equ©i⁄f
(
√¨Pœ√
, 
√¨ULT
, 
√¨LLT
, 
√¨LRT
);

144 
	`m3dGëPœ√Equ©i⁄f
(
ÁrPœ√
, 
ÁrULT
, 
ÁrURT
, 
ÁrLRT
);

147 
	`m3dGëPœ√Equ©i⁄f
(
t›Pœ√
, 
√¨ULT
, 
√¨URT
, 
ÁrURT
);

148 
	`m3dGëPœ√Equ©i⁄f
(
bŸtomPœ√
, 
√¨LLT
, 
ÁrLLT
, 
ÁrLRT
);

151 
	`m3dGëPœ√Equ©i⁄f
(
À·Pœ√
, 
√¨LLT
, 
√¨ULT
, 
ÁrULT
);

152 
	`m3dGëPœ√Equ©i⁄f
(
rightPœ√
, 
√¨LRT
, 
ÁrLRT
, 
ÁrURT
);

153 
	}
}

158 
boﬁ
 
	$Te°Sphîe
(
x
, 
y
, 
z
, 
fRadius
)

160 
M3DVe˘‹3f
 
vPoöt
;

161 
vPoöt
[0] = 
x
;

162 
vPoöt
[1] = 
y
;

163 
vPoöt
[2] = 
z
;

165  
	`Te°Sphîe
(
vPoöt
, 
fRadius
);

166 
	}
}

175 
boﬁ
 
	$Te°Sphîe
(
M3DVe˘‹3f
 
vPoöt
, 
fRadius
)

177 
fDi°
;

180 
fDi°
 = 
	`m3dGëDi°™˚ToPœ√f
(
vPoöt
, 
√¨Pœ√
);

181 if(
fDi°
 + 
fRadius
 <= 0.0)

182  
Ál£
;

185 
fDi°
 = 
	`m3dGëDi°™˚ToPœ√f
(
vPoöt
, 
ÁrPœ√
);

186 if(
fDi°
 + 
fRadius
 <= 0.0)

187  
Ál£
;

189 
fDi°
 = 
	`m3dGëDi°™˚ToPœ√f
(
vPoöt
, 
À·Pœ√
);

190 if(
fDi°
 + 
fRadius
 <= 0.0)

191  
Ál£
;

193 
fDi°
 = 
	`m3dGëDi°™˚ToPœ√f
(
vPoöt
, 
rightPœ√
);

194 if(
fDi°
 + 
fRadius
 <= 0.0)

195  
Ál£
;

197 
fDi°
 = 
	`m3dGëDi°™˚ToPœ√f
(
vPoöt
, 
bŸtomPœ√
);

198 if(
fDi°
 + 
fRadius
 <= 0.0)

199  
Ál£
;

201 
fDi°
 = 
	`m3dGëDi°™˚ToPœ√f
(
vPoöt
, 
t›Pœ√
);

202 if(
fDi°
 + 
fRadius
 <= 0.0)

203  
Ál£
;

205  
åue
;

206 
	}
}

208 
	g¥Ÿe˘ed
:

210 
M3DVe˘‹4f
 
√¨UL
, 
	g√¨LL
, 
	g√¨UR
, 
	g√¨LR
;

211 
M3DVe˘‹4f
 
	gÁrUL
, 
	gÁrLL
, 
	gÁrUR
, 
	gÁrLR
;

214 
M3DVe˘‹4f
 
	g√¨ULT
, 
	g√¨LLT
, 
	g√¨URT
, 
	g√¨LRT
;

215 
M3DVe˘‹4f
 
	gÁrULT
, 
	gÁrLLT
, 
	gÁrURT
, 
	gÁrLRT
;

219 
M3DVe˘‹4f
 
	g√¨Pœ√
, 
	gÁrPœ√
, 
	gÀ·Pœ√
, 
	grightPœ√
;

220 
M3DVe˘‹4f
 
	gt›Pœ√
, 
	gbŸtomPœ√
;

	@shared/gltools.cpp

10 #ifde‡
löux


13 
	~<GLì.h
>

16 
	~"g…oﬁs.h
"

17 
	~"m©h3d.h
"

18 
	~<°dio.h
>

19 
	~<as£π.h
>

23 
boﬁ
 
	$g…GëO≥nGLVîsi⁄
(&
nMaj‹
, &
nMö‹
)

25 c⁄° *
szVîsi⁄Såög
 = (c⁄° *)
	`glGëSåög
(
GL_VERSION
);

26 if(
szVîsi⁄Såög
 =
NULL
)

28 
nMaj‹
 = 0;

29 
nMö‹
 = 0;

30  
Ál£
;

34 
nMaj‹
 = 
	`©oi
(
szVîsi⁄Såög
);

37 
nMö‹
 = 
	`©oi
(
	`°r°r
(
szVîsi⁄Såög
, ".")+1);

39  
åue
;

40 
	}
}

45 
	$g…IsExtSuµ‹ãd
(c⁄° *
exãnsi⁄
)

47 
GLubyã
 *
exãnsi⁄s
 = 
NULL
;

48 c⁄° 
GLubyã
 *
°¨t
;

49 
GLubyã
 *
whîe
, *
ãrmö©‹
;

51 
whîe
 = (
GLubyã
 *Ë
	`°rchr
(
exãnsi⁄
, ' ');

52 i‡(
whîe
 || *
exãnsi⁄
 == '\0')

55 
exãnsi⁄s
 = (
GLubyã
 *)
	`glGëSåög
(
GL_EXTENSIONS
);

57 
°¨t
 = 
exãnsi⁄s
;

60 
whîe
 = (
GLubyã
 *Ë
	`°r°r
((c⁄° *Ë
°¨t
, 
exãnsi⁄
);

62 i‡(!
whîe
)

65 
ãrmö©‹
 = 
whîe
 + 
	`°æí
(
exãnsi⁄
);

67 i‡(
whîe
 =
°¨t
 || *(where - 1) == ' ')

69 i‡(*
ãrmö©‹
 == ' ' || *terminator == '\0')

72 
°¨t
 = 
ãrmö©‹
;

75 
	}
}

77 #ifde‡
_WIN32


80 
	~"wgÀxt.h
"

81 
	$g…IsWGLExtSuµ‹ãd
(
HDC
 
hDC
, c⁄° *
szExãnsi⁄
)

83 
GLubyã
 *
exãnsi⁄s
 = 
NULL
;

84 c⁄° 
GLubyã
 *
°¨t
;

85 
GLubyã
 *
whîe
, *
ãrmö©‹
;

86 
PFNWGLGETEXTENSIONSSTRINGARBPROC
 
wglGëExãnsi⁄sSåögARB
;

89 
wglGëExãnsi⁄sSåögARB
 = (
PFNWGLGETEXTENSIONSSTRINGARBPROC
)
	`wglGëProcAddªss
("wglGetExtensionsStringARB");

90 if(
wglGëExãnsi⁄sSåögARB
 =
NULL
)

93 
whîe
 = (
GLubyã
 *Ë
	`°rchr
(
szExãnsi⁄
, ' ');

94 i‡(
whîe
 || *
szExãnsi⁄
 == '\0')

97 
exãnsi⁄s
 = (
GLubyã
 *)
	`wglGëExãnsi⁄sSåögARB
(
hDC
);

99 
°¨t
 = 
exãnsi⁄s
;

102 
whîe
 = (
GLubyã
 *Ë
	`°r°r
((c⁄° *Ë
°¨t
, 
szExãnsi⁄
);

104 i‡(!
whîe
)

107 
ãrmö©‹
 = 
whîe
 + 
	`°æí
(
szExãnsi⁄
);

109 i‡(
whîe
 =
°¨t
 || *(where - 1) == ' ')

111 i‡(*
ãrmö©‹
 == ' ' || *terminator == '\0')

114 
°¨t
 = 
ãrmö©‹
;

117 
	}
}

127 *
	$g…GëExãnsi⁄Poöãr
(c⁄° *
szExãnsi⁄Name
)

129 #ifde‡
WIN32


132  (*)
	`wglGëProcAddªss
(
szExãnsi⁄Name
);

135 #ifde‡
löux


137  (*)
	`glXGëProcAddªss
((c⁄° 
GLubyã
*)
szExãnsi⁄Name
);

141 #ifde‡
__APPLE__


144 
CFBundÀRef
 
›íGL
 = 0;

145 
SI¡16
 
fwVîsi⁄
 = 0;

146 
SI¡32
 
fwDú
 = 0;

148 if(
	`FödFﬁdî
(
kSy°emDomaö
, 
kFømew‹ksFﬁdîTy≥
, 
kD⁄tCª©eFﬁdî
, &
fwVîsi⁄
, &
fwDú
Ë!
noEº
)

149  
NULL
;

151 
FSS≥c
 
fS≥c
;

152 
FSRef
 
fRef
;

153 if(
	`FSMakeFSS≥c
(
fwVîsi⁄
, 
fwDú
, "\pO≥nGL.‰amew‹k", &
fS≥c
Ë!
noEº
)

154  
NULL
;

156 
	`FSpMakeFSRef
(&
fS≥c
, &
fRef
);

157 
CFURLRef
 
uæ
 = 
	`CFURLCª©eFromFSRef
(
kCFAŒoˇt‹DeÁu…
, &
fRef
);

158 if(!
uæ
)

159  
NULL
;

161 
›íGL
 = 
	`CFBundÀCª©e
(
kCFAŒoˇt‹DeÁu…
, 
uæ
);

162 
	`CFRñó£
(
uæ
);

165 
CFSåögRef
 
°rög
 = 
	`CFSåögCª©eWôhCSåög
(
kCFAŒoˇt‹DeÁu…
, 
szExãnsi⁄Name
, 
kCFSåögEncodögMacRom™
);

166 *
pFunc
 = 
	`CFBundÀGëFun˘i⁄PoöãrF‹Name
(
›íGL
, 
°rög
);

169 
	`CFRñó£
(
°rög
);

170 
	`CFRñó£
(
›íGL
);

173  
pFunc
;

175 
	}
}

185 
	$g…DøwUnôAxes
()

187 
GLUquadricObj
 *
pObj
;

190 
fAxisRadius
 = 0.025f;

191 
fAxisHeight
 = 1.0f;

192 
fAºowRadius
 = 0.06f;

193 
fAºowHeight
 = 0.1f;

196 
pObj
 = 
	`gluNewQuadric
();

197 
	`gluQuadricDøwStyÀ
(
pObj
, 
GLU_FILL
);

198 
	`gluQuadricN‹mÆs
(
pObj
, 
GLU_SMOOTH
);

199 
	`gluQuadricOrõ¡©i⁄
(
pObj
, 
GLU_OUTSIDE
);

200 
	`gluQuadricTextuª
(
pObj
, 
GLU_FALSE
);

204 
	`glCﬁ‹3f
(0.0f, 0.0f, 1.0f);

205 
	`gluCylödî
(
pObj
, 
fAxisRadius
, fAxisRadius, 
fAxisHeight
, 10, 1);

206 
	`glPushM©rix
();

207 
	`glTøn¶©ef
(0.0f, 0.0f, 1.0f);

208 
	`gluCylödî
(
pObj
, 
fAºowRadius
, 0.0f, 
fAºowHeight
, 10, 1);

209 
	`glRŸ©ef
(180.0f, 1.0f, 0.0f, 0.0f);

210 
	`gluDisk
(
pObj
, 
fAxisRadius
, 
fAºowRadius
, 10, 1);

211 
	`glP›M©rix
();

215 
	`glCﬁ‹3f
(1.0f, 0.0f, 0.0f);

216 
	`glPushM©rix
();

217 
	`glRŸ©ef
(90.0f, 0.0f, 1.0f, 0.0f);

218 
	`gluCylödî
(
pObj
, 
fAxisRadius
, fAxisRadius, 
fAxisHeight
, 10, 1);

219 
	`glPushM©rix
();

220 
	`glTøn¶©ef
(0.0f, 0.0f, 1.0f);

221 
	`gluCylödî
(
pObj
, 
fAºowRadius
, 0.0f, 
fAºowHeight
, 10, 1);

222 
	`glRŸ©ef
(180.0f, 0.0f, 1.0f, 0.0f);

223 
	`gluDisk
(
pObj
, 
fAxisRadius
, 
fAºowRadius
, 10, 1);

224 
	`glP›M©rix
();

225 
	`glP›M©rix
();

229 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

230 
	`glPushM©rix
();

231 
	`glRŸ©ef
(-90.0f, 1.0f, 0.0f, 0.0f);

232 
	`gluCylödî
(
pObj
, 
fAxisRadius
, fAxisRadius, 
fAxisHeight
, 10, 1);

233 
	`glPushM©rix
();

234 
	`glTøn¶©ef
(0.0f, 0.0f, 1.0f);

235 
	`gluCylödî
(
pObj
, 
fAºowRadius
, 0.0f, 
fAºowHeight
, 10, 1);

236 
	`glRŸ©ef
(180.0f, 1.0f, 0.0f, 0.0f);

237 
	`gluDisk
(
pObj
, 
fAxisRadius
, 
fAºowRadius
, 10, 1);

238 
	`glP›M©rix
();

239 
	`glP›M©rix
();

243 
	`glCﬁ‹3f
(1.0f, 1.0f, 1.0f);

244 
	`gluSphîe
(
pObj
, 0.05f, 15, 15);

247 
	`gluDñëeQuadric
(
pObj
);

248 
	}
}

253 
	$g…DøwT‹us
(
GLÊﬂt
 
maj‹Radius
, GLÊﬂà
mö‹Radius
, 
GLöt
 
numMaj‹
, GLöà
numMö‹
)

255 
M3DVe˘‹3f
 
vN‹mÆ
;

256 
maj‹Sãp
 = 2.0f*
M3D_PI
 / 
numMaj‹
;

257 
mö‹Sãp
 = 2.0f*
M3D_PI
 / 
numMö‹
;

258 
i
, 
j
;

260 
i
=0; i<
numMaj‹
; ++i)

262 
a0
 = 
i
 * 
maj‹Sãp
;

263 
a1
 = 
a0
 + 
maj‹Sãp
;

264 
GLÊﬂt
 
x0
 = (GLÊﬂtË
	`cos
(
a0
);

265 
GLÊﬂt
 
y0
 = (GLÊﬂtË
	`sö
(
a0
);

266 
GLÊﬂt
 
x1
 = (GLÊﬂtË
	`cos
(
a1
);

267 
GLÊﬂt
 
y1
 = (GLÊﬂtË
	`sö
(
a1
);

269 
	`glBegö
(
GL_TRIANGLE_STRIP
);

270 
j
=0; j<=
numMö‹
; ++j)

272 
b
 = 
j
 * 
mö‹Sãp
;

273 
GLÊﬂt
 
c
 = (GLÊﬂtË
	`cos
(
b
);

274 
GLÊﬂt
 
r
 = 
mö‹Radius
 * 
c
 + 
maj‹Radius
;

275 
GLÊﬂt
 
z
 = 
mö‹Radius
 * (GLÊﬂtË
	`sö
(
b
);

278 
	`glTexCo‹d2f
(()(
i
)/()(
numMaj‹
), ()(
j
)/()(
numMö‹
));

279 
vN‹mÆ
[0] = 
x0
*
c
;

280 
vN‹mÆ
[1] = 
y0
*
c
;

281 
vN‹mÆ
[2] = 
z
/
mö‹Radius
;

282 
	`m3dN‹mÆizeVe˘‹
(
vN‹mÆ
);

283 
	`glN‹mÆ3fv
(
vN‹mÆ
);

284 
	`glVîãx3f
(
x0
*
r
, 
y0
*r, 
z
);

286 
	`glTexCo‹d2f
(()(
i
+1)/()(
numMaj‹
), ()(
j
)/()(
numMö‹
));

287 
vN‹mÆ
[0] = 
x1
*
c
;

288 
vN‹mÆ
[1] = 
y1
*
c
;

289 
vN‹mÆ
[2] = 
z
/
mö‹Radius
;

290 
	`m3dN‹mÆizeVe˘‹
(
vN‹mÆ
);

291 
	`glN‹mÆ3fv
(
vN‹mÆ
);

292 
	`glVîãx3f
(
x1
*
r
, 
y1
*r, 
z
);

294 
	`glEnd
();

296 
	}
}

300 
	$g…DøwSphîe
(
GLÊﬂt
 
fRadius
, 
GLöt
 
iSli˚s
, GLöà
iSècks
)

302 
GLÊﬂt
 
drho
 = (GLÊﬂt)(3.141592653589Ë/ (GLÊﬂtË
iSècks
;

303 
GLÊﬂt
 
dthëa
 = 2.0‡* (GLÊﬂt)(3.141592653589Ë/ (GLÊﬂtË
iSli˚s
;

304 
GLÊﬂt
 
ds
 = 1.0‡/ (GLÊﬂtË
iSli˚s
;

305 
GLÊﬂt
 
dt
 = 1.0‡/ (GLÊﬂtË
iSècks
;

306 
GLÊﬂt
 
t
 = 1.0f;

307 
GLÊﬂt
 
s
 = 0.0f;

308 
GLöt
 
i
, 
j
;

310 
i
 = 0; i < 
iSècks
; i++)

312 
GLÊﬂt
 
rho
 = (GLÊﬂt)
i
 * 
drho
;

313 
GLÊﬂt
 
§ho
 = (GLÊﬂt)(
	`sö
(
rho
));

314 
GLÊﬂt
 
¸ho
 = (GLÊﬂt)(
	`cos
(
rho
));

315 
GLÊﬂt
 
§hodrho
 = (GLÊﬂt)(
	`sö
(
rho
 + 
drho
));

316 
GLÊﬂt
 
¸hodrho
 = (GLÊﬂt)(
	`cos
(
rho
 + 
drho
));

321 
	`glBegö
(
GL_TRIANGLE_STRIP
);

322 
s
 = 0.0f;

323  
j
 = 0; j <
iSli˚s
; j++)

325 
GLÊﬂt
 
thëa
 = (
j
 =
iSli˚s
Ë? 0.0‡: j * 
dthëa
;

326 
GLÊﬂt
 
°hëa
 = (GLÊﬂt)(-
	`sö
(
thëa
));

327 
GLÊﬂt
 
˘hëa
 = (GLÊﬂt)(
	`cos
(
thëa
));

329 
GLÊﬂt
 
x
 = 
°hëa
 * 
§ho
;

330 
GLÊﬂt
 
y
 = 
˘hëa
 * 
§ho
;

331 
GLÊﬂt
 
z
 = 
¸ho
;

333 
	`glTexCo‹d2f
(
s
, 
t
);

334 
	`glN‹mÆ3f
(
x
, 
y
, 
z
);

335 
	`glVîãx3f
(
x
 * 
fRadius
, 
y
 * fRadius, 
z
 * fRadius);

337 
x
 = 
°hëa
 * 
§hodrho
;

338 
y
 = 
˘hëa
 * 
§hodrho
;

339 
z
 = 
¸hodrho
;

340 
	`glTexCo‹d2f
(
s
, 
t
 - 
dt
);

341 
s
 +
ds
;

342 
	`glN‹mÆ3f
(
x
, 
y
, 
z
);

343 
	`glVîãx3f
(
x
 * 
fRadius
, 
y
 * fRadius, 
z
 * fRadius);

345 
	`glEnd
();

347 
t
 -
dt
;

349 
	}
}

353 #¥agm®
∑ck
(1)

356 
GLbyã
 
	midítsize
;

357 
GLbyã
 
	mcﬁ‹M≠Ty≥
;

358 
GLbyã
 
	mimageTy≥
;

359 
	mcﬁ‹M≠Sèπ
;

360 
	mcﬁ‹M≠Lígth
;

361 
	mcﬁ‹M≠Bôs
;

362 
	mx°¨t
;

363 
	my°¨t
;

364 
	mwidth
;

365 
	mheight
;

366 
GLbyã
 
	mbôs
;

367 
GLbyã
 
	mdes¸ùt‹
;

368 } 
	tTGAHEADER
;

369 #¥agm®
∑ck
(8)

377 
GLöt
 
	$g…WrôeTGA
(c⁄° *
szFûeName
)

379 
FILE
 *
pFûe
;

380 
TGAHEADER
 
tgaHódî
;

381 
lImageSize
;

382 
GLbyã
 *
pBôs
 = 
NULL
;

383 
GLöt
 
iVõwp‹t
[4];

384 
GLíum
 
œ°Buf„r
;

387 
	`glGëI¡egîv
(
GL_VIEWPORT
, 
iVõwp‹t
);

390 
lImageSize
 = 
iVõwp‹t
[2] * 3 * iViewport[3];

393 
pBôs
 = (
GLbyã
 *)
	`mÆloc
(
lImageSize
);

394 if(
pBôs
 =
NULL
)

398 
	`glPixñSt‹ei
(
GL_PACK_ALIGNMENT
, 1);

399 
	`glPixñSt‹ei
(
GL_PACK_ROW_LENGTH
, 0);

400 
	`glPixñSt‹ei
(
GL_PACK_SKIP_ROWS
, 0);

401 
	`glPixñSt‹ei
(
GL_PACK_SKIP_PIXELS
, 0);

406 
	`glGëI¡egîv
(
GL_READ_BUFFER
, (
GLöt
 *)&
œ°Buf„r
);

407 
	`glRódBuf„r
(
GL_FRONT
);

408 
	`glRódPixñs
(0, 0, 
iVõwp‹t
[2], iVõwp‹t[3], 
GL_BGR_EXT
, 
GL_UNSIGNED_BYTE
, 
pBôs
);

409 
	`glRódBuf„r
(
œ°Buf„r
);

412 
tgaHódî
.
idítsize
 = 0;

413 
tgaHódî
.
cﬁ‹M≠Ty≥
 = 0;

414 
tgaHódî
.
imageTy≥
 = 2;

415 
tgaHódî
.
cﬁ‹M≠Sèπ
 = 0;

416 
tgaHódî
.
cﬁ‹M≠Lígth
 = 0;

417 
tgaHódî
.
cﬁ‹M≠Bôs
 = 0;

418 
tgaHódî
.
x°¨t
 = 0;

419 
tgaHódî
.
y°¨t
 = 0;

420 
tgaHódî
.
width
 = 
iVõwp‹t
[2];

421 
tgaHódî
.
height
 = 
iVõwp‹t
[3];

422 
tgaHódî
.
bôs
 = 24;

423 
tgaHódî
.
des¸ùt‹
 = 0;

426 #ifde‡
__APPLE__


427 
	`LITTLE_ENDIAN_WORD
(&
tgaHódî
.
cﬁ‹M≠Sèπ
);

428 
	`LITTLE_ENDIAN_WORD
(&
tgaHódî
.
cﬁ‹M≠Lígth
);

429 
	`LITTLE_ENDIAN_WORD
(&
tgaHódî
.
x°¨t
);

430 
	`LITTLE_ENDIAN_WORD
(&
tgaHódî
.
y°¨t
);

431 
	`LITTLE_ENDIAN_WORD
(&
tgaHódî
.
width
);

432 
	`LITTLE_ENDIAN_WORD
(&
tgaHódî
.
height
);

436 
pFûe
 = 
	`f›í
(
szFûeName
, "wb");

437 if(
pFûe
 =
NULL
)

439 
	`‰ì
(
pBôs
);

444 
	`fwrôe
(&
tgaHódî
, (
TGAHEADER
), 1, 
pFûe
);

447 
	`fwrôe
(
pBôs
, 
lImageSize
, 1, 
pFûe
);

450 
	`‰ì
(
pBôs
);

451 
	`f˛o£
(
pFûe
);

455 
	}
}

464 
GLbyã
 *
	$g…LﬂdTGA
(c⁄° *
szFûeName
, 
GLöt
 *
iWidth
, GLöà*
iHeight
, GLöà*
iComp⁄íts
, 
GLíum
 *
eF‹m©
)

466 
FILE
 *
pFûe
;

467 
TGAHEADER
 
tgaHódî
;

468 
lImageSize
;

469 
sDïth
;

470 
GLbyã
 *
pBôs
 = 
NULL
;

473 *
iWidth
 = 0;

474 *
iHeight
 = 0;

475 *
eF‹m©
 = 
GL_BGR_EXT
;

476 *
iComp⁄íts
 = 
GL_RGB8
;

479 
pFûe
 = 
	`f›í
(
szFûeName
, "rb");

480 if(
pFûe
 =
NULL
)

481  
NULL
;

484 
	`‰ód
(&
tgaHódî
, 18 , 1, 
pFûe
);

487 #ifde‡
__APPLE__


488 
	`LITTLE_ENDIAN_WORD
(&
tgaHódî
.
cﬁ‹M≠Sèπ
);

489 
	`LITTLE_ENDIAN_WORD
(&
tgaHódî
.
cﬁ‹M≠Lígth
);

490 
	`LITTLE_ENDIAN_WORD
(&
tgaHódî
.
x°¨t
);

491 
	`LITTLE_ENDIAN_WORD
(&
tgaHódî
.
y°¨t
);

492 
	`LITTLE_ENDIAN_WORD
(&
tgaHódî
.
width
);

493 
	`LITTLE_ENDIAN_WORD
(&
tgaHódî
.
height
);

498 *
iWidth
 = 
tgaHódî
.
width
;

499 *
iHeight
 = 
tgaHódî
.
height
;

500 
sDïth
 = 
tgaHódî
.
bôs
 / 8;

504 if(
tgaHódî
.
bôs
 != 8 &&ÅgaHeader.bits != 24 &&ÅgaHeader.bits != 32)

505  
NULL
;

508 
lImageSize
 = 
tgaHódî
.
width
 *ÅgaHódî.
height
 * 
sDïth
;

511 
pBôs
 = (
GLbyã
*)
	`mÆloc
(
lImageSize
 * (GLbyte));

512 if(
pBôs
 =
NULL
)

513  
NULL
;

518 if(
	`‰ód
(
pBôs
, 
lImageSize
, 1, 
pFûe
) != 1)

520 
	`‰ì
(
pBôs
);

521  
NULL
;

525 
sDïth
)

528 *
eF‹m©
 = 
GL_BGR_EXT
;

529 *
iComp⁄íts
 = 
GL_RGB8
;

532 *
eF‹m©
 = 
GL_BGRA_EXT
;

533 *
iComp⁄íts
 = 
GL_RGBA8
;

536 *
eF‹m©
 = 
GL_LUMINANCE
;

537 *
iComp⁄íts
 = 
GL_LUMINANCE8
;

543 
	`f˛o£
(
pFûe
);

546  
pBôs
;

547 
	}
}

558 
GLubyã
 
	gshadîText
[
MAX_SHADER_LENGTH
];

563 
boﬁ
 
	$bLﬂdShadîFûe
(c⁄° *
szFûe
, 
GLh™dÀARB
 
shadî
)

565 
GLöt
 
shadîLígth
 = 0;

566 
FILE
 *
Â
;

567 
GLch¨ARB
 *
fsSåögPå
[1];

570 
Â
 = 
	`f›í
(
szFûe
, "r");

571 if(
Â
 !
NULL
)

574 
	`fgëc
(
Â
Ë!
EOF
)

575 
shadîLígth
++;

578 
	`as£π
(
shadîLígth
 < 
MAX_SHADER_LENGTH
);

579 if(
shadîLígth
 > 
MAX_SHADER_LENGTH
)

581 
	`f˛o£
(
Â
);

582  
Ál£
;

586 
	`ªwöd
(
Â
);

589 i‡(
shadîText
 !
NULL
)

590 
	`‰ód
(
shadîText
, 1, 
shadîLígth
, 
Â
);

593 
shadîText
[
shadîLígth
] = '\0';

594 
	`f˛o£
(
Â
);

597  
Ál£
;

601 
fsSåögPå
[0] = (
GLch¨ARB
 *)
shadîText
;

602 
	`glShadîSour˚ARB
(
shadî
, 1, (c⁄° 
GLch¨ARB
 **)
fsSåögPå
, 
NULL
);

604  
åue
;

605 
	}
}

612 
GLh™dÀARB
 
	$g…LﬂdShadîPaú
(c⁄° *
szVîãxProg
, c⁄° *
szFøgmítProg
)

615 
GLh™dÀARB
 
hVîãxShadî
;

616 
GLh™dÀARB
 
hFøgmítShadî
;

617 
GLh™dÀARB
 
hRëu∫
 = 0;

618 
GLöt
 
ã°VÆ
;

621 
hVîãxShadî
 = 
	`glCª©eShadîObje˘ARB
(
GL_VERTEX_SHADER_ARB
);

622 
hFøgmítShadî
 = 
	`glCª©eShadîObje˘ARB
(
GL_FRAGMENT_SHADER_ARB
);

625 if(
	`bLﬂdShadîFûe
(
szVîãxProg
, 
hVîãxShadî
Ë=
Ál£
)

627 
	`glDñëeObje˘ARB
(
hVîãxShadî
);

628 
	`glDñëeObje˘ARB
(
hFøgmítShadî
);

629  
NULL
;

632 if(
	`bLﬂdShadîFûe
(
szFøgmítProg
, 
hFøgmítShadî
Ë=
Ál£
)

634 
	`glDñëeObje˘ARB
(
hVîãxShadî
);

635 
	`glDñëeObje˘ARB
(
hFøgmítShadî
);

636  
NULL
;

640 
	`glCompûeShadîARB
(
hVîãxShadî
);

641 
	`glCompûeShadîARB
(
hFøgmítShadî
);

644 
	`glGëObje˘P¨amëîivARB
(
hVîãxShadî
, 
GL_OBJECT_COMPILE_STATUS_ARB
, &
ã°VÆ
);

645 if(
ã°VÆ
 =
GL_FALSE
)

647 
	`glDñëeObje˘ARB
(
hVîãxShadî
);

648 
	`glDñëeObje˘ARB
(
hFøgmítShadî
);

649  
NULL
;

652 
	`glGëObje˘P¨amëîivARB
(
hFøgmítShadî
, 
GL_OBJECT_COMPILE_STATUS_ARB
, &
ã°VÆ
);

653 if(
ã°VÆ
 =
GL_FALSE
)

655 
	`glDñëeObje˘ARB
(
hVîãxShadî
);

656 
	`glDñëeObje˘ARB
(
hFøgmítShadî
);

657  
NULL
;

661 
hRëu∫
 = 
	`glCª©eProgømObje˘ARB
();

662 
	`glAâachObje˘ARB
(
hRëu∫
, 
hVîãxShadî
);

663 
	`glAâachObje˘ARB
(
hRëu∫
, 
hFøgmítShadî
);

664 
	`glLökProgømARB
(
hRëu∫
);

667 
	`glDñëeObje˘ARB
(
hVîãxShadî
);

668 
	`glDñëeObje˘ARB
(
hFøgmítShadî
);

670  
hRëu∫
;

671 
	}
}

	@shared/gltools.h

10 #i‚de‡
__GLTOOLS__LIBRARY


11 
	#__GLTOOLS__LIBRARY


	)

13 
	#FREEGLUT_STATIC


	)

17 #ifde‡
WIN32


18 
	~<wödows.h
>

19 
	~"gÀe.h
"

20 
	~<gl\gl.h
>

21 
	~<gl\glu.h
>

22 
	~"glut.h
"

26 #ifde‡
__APPLE__


27 
	~<C¨b⁄/C¨b⁄.h
>

28 
	~"gÀe.h
"

29 
	~<O≥nGL/gl.h
>

30 
	~<O≥nGL/glu.h
>

31 
	~<Glut/glut.h
>

34 
	#SÀï
(
x
)

	)

38 #i‚de‡
löux


40 #i‚de‡
WIN32


41 
GLvoid
 (*
	tCÆlBack
)(...);

43 
GLvoid
 (
	t_°dˇŒ
 *
	tCÆlBack
)();

56 #ifde‡
löux


57 
	~<GL/glut.h
>

61 
	~<m©h.h
>

66 
	#MAX_SHADER_LENGTH
 8192

	)

73 #ifde‡
__BIG_ENDIAN__


78 
ölöe
 
	$LITTLE_ENDIAN_WORD
(*
pW‹d
)

80 *
pByãs
 = (*)
pW‹d
;

81 
ãmp
;

83 
ãmp
 = 
pByãs
[0];

84 
pByãs
[0] =ÖBytes[1];

85 
pByãs
[1] = 
ãmp
;

86 
	}
}

92 
ölöe
 
	$LITTLE_ENDIAN_DWORD
(*
pW‹d
)

94 *
pByãs
 = (*)
pW‹d
;

95 
ãmp
;

98 
ãmp
 = 
pByãs
[3];

99 
pByãs
[3] =ÖBytes[0];

100 
pByãs
[0] = 
ãmp
;

103 
ãmp
 = 
pByãs
[1];

104 
pByãs
[1] =ÖBytes[2];

105 
pByãs
[2] = 
ãmp
;

106 
	}
}

110 
	#LITTLE_ENDIAN_WORD


	)

111 
	#LITTLE_ENDIAN_DWORD


	)

121 
GLbyã
 *
g…LﬂdTGA
(c⁄° *
szFûeName
, 
GLöt
 *
iWidth
, GLöà*
iHeight
, GLöà*
iComp⁄íts
, 
GLíum
 *
eF‹m©
);

124 
GLöt
 
g…WrôeTGA
(c⁄° *
szFûeName
);

127 
g…DøwT‹us
(
GLÊﬂt
 
maj‹Radius
, GLÊﬂà
mö‹Radius
, 
GLöt
 
numMaj‹
, GLöà
numMö‹
);

130 
g…DøwSphîe
(
GLÊﬂt
 
fRadius
, 
GLöt
 
iSli˚s
, GLöà
iSècks
);

133 
g…DøwUnôAxes
();

136 
boﬁ
 
bLﬂdShadîFûe
(c⁄° *
szFûe
, 
GLh™dÀARB
 
shadî
);

137 
GLh™dÀARB
 
g…LﬂdShadîPaú
(c⁄° *
szVîãxProg
, c⁄° *
szFøgmítProg
);

140 
boﬁ
 
g…GëO≥nGLVîsi⁄
(&
nMaj‹
, &
nMö‹
);

143 
g…IsExtSuµ‹ãd
(c⁄° *
szExãnsi⁄
);

146 *
g…GëExãnsi⁄Poöãr
(c⁄° *
szFun˘i⁄Name
);

150 #ifde‡
WIN32


151 
g…IsWGLExtSuµ‹ãd
(
HDC
 
hDC
, c⁄° *
szExãnsi⁄
);

	@shared/glut.h

1 #i‚de‡ 
__GLUT_H__


2 
	#__GLUT_H__


	)

17 
	~"‰ìglut_°d.h
"

	@shared/math3d.cpp

6 
	~<m©h.h
>

7 
	~"m©h3d.h
"

14 
	$m3dLﬂdIdítôy33
(
M3DM©rix33f
 
m
)

17 
M3DM©rix33f
 
idítôy
 = { 1.0f, 0.0f, 0.0f ,

21 
	`mem˝y
(
m
, 
idítôy
, (
M3DM©rix33f
));

22 
	}
}

25 
	$m3dLﬂdIdítôy33
(
M3DM©rix33d
 
m
)

28 
M3DM©rix33d
 
idítôy
 = { 1.0, 0.0, 0.0 ,

32 
	`mem˝y
(
m
, 
idítôy
, (
M3DM©rix33d
));

33 
	}
}

36 
	$m3dLﬂdIdítôy44
(
M3DM©rix44f
 
m
)

39 
M3DM©rix44f
 
idítôy
 = { 1.0f, 0.0f, 0.0f, 0.0f,

44 
	`mem˝y
(
m
, 
idítôy
, (
M3DM©rix44f
));

45 
	}
}

48 
	$m3dLﬂdIdítôy44
(
M3DM©rix44d
 
m
)

50 
M3DM©rix44d
 
idítôy
 = { 1.0, 0.0, 0.0, 0.0,

55 
	`mem˝y
(
m
, 
idítôy
, (
M3DM©rix44d
));

56 
	}
}

62 
	$m3dGëDi°™˚Squ¨ed
(c⁄° 
M3DVe˘‹3f
 
u
, c⁄° M3DVe˘‹3‡
v
)

64 
x
 = 
u
[0] - 
v
[0];

65 
x
 = x*x;

67 
y
 = 
u
[1] - 
v
[1];

68 
y
 = y*y;

70 
z
 = 
u
[2] - 
v
[2];

71 
z
 = z*z;

73  (
x
 + 
y
 + 
z
);

74 
	}
}

77 
	$m3dGëDi°™˚Squ¨ed
(c⁄° 
M3DVe˘‹3d
 
u
, c⁄° M3DVe˘‹3d 
v
)

79 
x
 = 
u
[0] - 
v
[0];

80 
x
 = x*x;

82 
y
 = 
u
[1] - 
v
[1];

83 
y
 = y*y;

85 
z
 = 
u
[2] - 
v
[2];

86 
z
 = z*z;

88  (
x
 + 
y
 + 
z
);

89 
	}
}

91 
	#A
(
row
,
cﬁ
Ë
a
[(cﬁ<<2)+row]

	)

92 
	#B
(
row
,
cﬁ
Ë
b
[(cﬁ<<2)+row]

	)

93 
	#P
(
row
,
cﬁ
Ë
¥odu˘
[(cﬁ<<2)+row]

	)

97 
	$m3dM©rixMu…ùly44
(
M3DM©rix44f
 
¥odu˘
, c⁄° M3DM©rix44‡
a
, c⁄° M3DM©rix44‡
b
 )

99 
i
 = 0; i < 4; i++) {

100 
ai0
=
	`A
(
i
,0), 
ai1
=A(i,1), 
ai2
=A(i,2), 
ai3
=A(i,3);

101 
	`P
(
i
,0Ë
ai0
 * 
	`B
(0,0Ë+ 
ai1
 * B(1,0Ë+ 
ai2
 * B(2,0Ë+ 
ai3
 * B(3,0);

102 
	`P
(
i
,1Ë
ai0
 * 
	`B
(0,1Ë+ 
ai1
 * B(1,1Ë+ 
ai2
 * B(2,1Ë+ 
ai3
 * B(3,1);

103 
	`P
(
i
,2Ë
ai0
 * 
	`B
(0,2Ë+ 
ai1
 * B(1,2Ë+ 
ai2
 * B(2,2Ë+ 
ai3
 * B(3,2);

104 
	`P
(
i
,3Ë
ai0
 * 
	`B
(0,3Ë+ 
ai1
 * B(1,3Ë+ 
ai2
 * B(2,3Ë+ 
ai3
 * B(3,3);

106 
	}
}

109 
	$m3dM©rixMu…ùly
(
M3DM©rix44d
 
¥odu˘
, c⁄° M3DM©rix44d 
a
, c⁄° M3DM©rix44d 
b
 )

111 
i
 = 0; i < 4; i++) {

112 
ai0
=
	`A
(
i
,0), 
ai1
=A(i,1), 
ai2
=A(i,2), 
ai3
=A(i,3);

113 
	`P
(
i
,0Ë
ai0
 * 
	`B
(0,0Ë+ 
ai1
 * B(1,0Ë+ 
ai2
 * B(2,0Ë+ 
ai3
 * B(3,0);

114 
	`P
(
i
,1Ë
ai0
 * 
	`B
(0,1Ë+ 
ai1
 * B(1,1Ë+ 
ai2
 * B(2,1Ë+ 
ai3
 * B(3,1);

115 
	`P
(
i
,2Ë
ai0
 * 
	`B
(0,2Ë+ 
ai1
 * B(1,2Ë+ 
ai2
 * B(2,2Ë+ 
ai3
 * B(3,2);

116 
	`P
(
i
,3Ë
ai0
 * 
	`B
(0,3Ë+ 
ai1
 * B(1,3Ë+ 
ai2
 * B(2,3Ë+ 
ai3
 * B(3,3);

118 
	}
}

119 #unde‡
A


120 #unde‡
B


121 #unde‡
P


124 
	#A33
(
row
,
cﬁ
Ë
a
[(cﬁ*3)+row]

	)

125 
	#B33
(
row
,
cﬁ
Ë
b
[(cﬁ*3)+row]

	)

126 
	#P33
(
row
,
cﬁ
Ë
¥odu˘
[(cﬁ*3)+row]

	)

130 
	$m3dM©rixMu…ùly33
(
M3DM©rix33f
 
¥odu˘
, c⁄° M3DM©rix33‡
a
, c⁄° M3DM©rix33‡
b
 )

132 
i
 = 0; i < 3; i++) {

133 
ai0
=
	`A33
(
i
,0), 
ai1
=A33(i,1), 
ai2
=A33(i,2);

134 
	`P33
(
i
,0Ë
ai0
 * 
	`B33
(0,0Ë+ 
ai1
 * B33(1,0Ë+ 
ai2
 * B33(2,0);

135 
	`P33
(
i
,1Ë
ai0
 * 
	`B33
(0,1Ë+ 
ai1
 * B33(1,1Ë+ 
ai2
 * B33(2,1);

136 
	`P33
(
i
,2Ë
ai0
 * 
	`B33
(0,2Ë+ 
ai1
 * B33(1,2Ë+ 
ai2
 * B33(2,2);

138 
	}
}

141 
	$m3dM©rixMu…ùly44
(
M3DM©rix33d
 
¥odu˘
, c⁄° M3DM©rix33d 
a
, c⁄° M3DM©rix33d 
b
 )

143 
i
 = 0; i < 3; i++) {

144 
ai0
=
	`A33
(
i
,0), 
ai1
=A33(i,1), 
ai2
=A33(i,2);

145 
	`P33
(
i
,0Ë
ai0
 * 
	`B33
(0,0Ë+ 
ai1
 * B33(1,0Ë+ 
ai2
 * B33(2,0);

146 
	`P33
(
i
,1Ë
ai0
 * 
	`B33
(0,1Ë+ 
ai1
 * B33(1,1Ë+ 
ai2
 * B33(2,1);

147 
	`P33
(
i
,2Ë
ai0
 * 
	`B33
(0,2Ë+ 
ai1
 * B33(1,2Ë+ 
ai2
 * B33(2,2);

149 
	}
}

151 #unde‡
A33


152 #unde‡
B33


153 #unde‡
P33


155 
	#M33
(
row
,
cﬁ
Ë
m
[cﬁ*3+row]

	)

159 
	$m3dRŸ©i⁄M©rix33
(
M3DM©rix33f
 
m
, 
™gÀ
, 
x
, 
y
, 
z
)

162 
mag
, 
s
, 
c
;

163 
xx
, 
yy
, 
zz
, 
xy
, 
yz
, 
zx
, 
xs
, 
ys
, 
zs
, 
⁄e_c
;

165 
s
 = (
	`sö
(
™gÀ
));

166 
c
 = (
	`cos
(
™gÀ
));

168 
mag
 = (
	`sqπ
–
x
*x + 
y
*y + 
z
*z ));

171 i‡(
mag
 == 0.0f) {

172 
	`m3dLﬂdIdítôy33
(
m
);

177 
x
 /
mag
;

178 
y
 /
mag
;

179 
z
 /
mag
;

183 
xx
 = 
x
 * x;

184 
yy
 = 
y
 * y;

185 
zz
 = 
z
 * z;

186 
xy
 = 
x
 * 
y
;

187 
yz
 = 
y
 * 
z
;

188 
zx
 = 
z
 * 
x
;

189 
xs
 = 
x
 * 
s
;

190 
ys
 = 
y
 * 
s
;

191 
zs
 = 
z
 * 
s
;

192 
⁄e_c
 = 1.0‡- 
c
;

194 
	`M33
(0,0Ë(
⁄e_c
 * 
xx
Ë+ 
c
;

195 
	`M33
(0,1Ë(
⁄e_c
 * 
xy
Ë- 
zs
;

196 
	`M33
(0,2Ë(
⁄e_c
 * 
zx
Ë+ 
ys
;

198 
	`M33
(1,0Ë(
⁄e_c
 * 
xy
Ë+ 
zs
;

199 
	`M33
(1,1Ë(
⁄e_c
 * 
yy
Ë+ 
c
;

200 
	`M33
(1,2Ë(
⁄e_c
 * 
yz
Ë- 
xs
;

202 
	`M33
(2,0Ë(
⁄e_c
 * 
zx
Ë- 
ys
;

203 
	`M33
(2,1Ë(
⁄e_c
 * 
yz
Ë+ 
xs
;

204 
	`M33
(2,2Ë(
⁄e_c
 * 
zz
Ë+ 
c
;

205 
	}
}

207 #unde‡
M33


211 
	$m3dRŸ©i⁄M©rix44
(
M3DM©rix44f
 
m
, 
™gÀ
, 
x
, 
y
, 
z
)

213 
mag
, 
s
, 
c
;

214 
xx
, 
yy
, 
zz
, 
xy
, 
yz
, 
zx
, 
xs
, 
ys
, 
zs
, 
⁄e_c
;

216 
s
 = (
	`sö
(
™gÀ
));

217 
c
 = (
	`cos
(
™gÀ
));

219 
mag
 = (
	`sqπ
–
x
*x + 
y
*y + 
z
*z ));

222 i‡(
mag
 == 0.0f) {

223 
	`m3dLﬂdIdítôy44
(
m
);

228 
x
 /
mag
;

229 
y
 /
mag
;

230 
z
 /
mag
;

232 
	#M
(
row
,
cﬁ
Ë
m
[cﬁ*4+row]

	)

234 
xx
 = 
x
 * x;

235 
yy
 = 
y
 * y;

236 
zz
 = 
z
 * z;

237 
xy
 = 
x
 * 
y
;

238 
yz
 = 
y
 * 
z
;

239 
zx
 = 
z
 * 
x
;

240 
xs
 = 
x
 * 
s
;

241 
ys
 = 
y
 * 
s
;

242 
zs
 = 
z
 * 
s
;

243 
⁄e_c
 = 1.0‡- 
c
;

245 
	`M
(0,0Ë(
⁄e_c
 * 
xx
Ë+ 
c
;

246 
	`M
(0,1Ë(
⁄e_c
 * 
xy
Ë- 
zs
;

247 
	`M
(0,2Ë(
⁄e_c
 * 
zx
Ë+ 
ys
;

248 
	`M
(0,3) = 0.0f;

250 
	`M
(1,0Ë(
⁄e_c
 * 
xy
Ë+ 
zs
;

251 
	`M
(1,1Ë(
⁄e_c
 * 
yy
Ë+ 
c
;

252 
	`M
(1,2Ë(
⁄e_c
 * 
yz
Ë- 
xs
;

253 
	`M
(1,3) = 0.0f;

255 
	`M
(2,0Ë(
⁄e_c
 * 
zx
Ë- 
ys
;

256 
	`M
(2,1Ë(
⁄e_c
 * 
yz
Ë+ 
xs
;

257 
	`M
(2,2Ë(
⁄e_c
 * 
zz
Ë+ 
c
;

258 
	`M
(2,3) = 0.0f;

260 
	`M
(3,0) = 0.0f;

261 
	`M
(3,1) = 0.0f;

262 
	`M
(3,2) = 0.0f;

263 
	`M
(3,3) = 1.0f;

265 #unde‡
M


266 
	}
}

272 
	$m3dRŸ©i⁄M©rix33
(
M3DM©rix33d
 
m
, 
™gÀ
, 
x
, 
y
, 
z
)

274 
mag
, 
s
, 
c
;

275 
xx
, 
yy
, 
zz
, 
xy
, 
yz
, 
zx
, 
xs
, 
ys
, 
zs
, 
⁄e_c
;

277 
s
 = 
	`sö
(
™gÀ
);

278 
c
 = 
	`cos
(
™gÀ
);

280 
mag
 = 
	`sqπ
–
x
*x + 
y
*y + 
z
*z );

283 i‡(
mag
 == 0.0) {

284 
	`m3dLﬂdIdítôy33
(
m
);

289 
x
 /
mag
;

290 
y
 /
mag
;

291 
z
 /
mag
;

293 
	#M
(
row
,
cﬁ
Ë
m
[cﬁ*3+row]

	)

295 
xx
 = 
x
 * x;

296 
yy
 = 
y
 * y;

297 
zz
 = 
z
 * z;

298 
xy
 = 
x
 * 
y
;

299 
yz
 = 
y
 * 
z
;

300 
zx
 = 
z
 * 
x
;

301 
xs
 = 
x
 * 
s
;

302 
ys
 = 
y
 * 
s
;

303 
zs
 = 
z
 * 
s
;

304 
⁄e_c
 = 1.0 - 
c
;

306 
	`M
(0,0Ë(
⁄e_c
 * 
xx
Ë+ 
c
;

307 
	`M
(0,1Ë(
⁄e_c
 * 
xy
Ë- 
zs
;

308 
	`M
(0,2Ë(
⁄e_c
 * 
zx
Ë+ 
ys
;

310 
	`M
(1,0Ë(
⁄e_c
 * 
xy
Ë+ 
zs
;

311 
	`M
(1,1Ë(
⁄e_c
 * 
yy
Ë+ 
c
;

312 
	`M
(1,2Ë(
⁄e_c
 * 
yz
Ë- 
xs
;

314 
	`M
(2,0Ë(
⁄e_c
 * 
zx
Ë- 
ys
;

315 
	`M
(2,1Ë(
⁄e_c
 * 
yz
Ë+ 
xs
;

316 
	`M
(2,2Ë(
⁄e_c
 * 
zz
Ë+ 
c
;

318 #unde‡
M


319 
	}
}

324 
	$m3dRŸ©i⁄M©rix44
(
M3DM©rix44d
 
m
, 
™gÀ
, 
x
, 
y
, 
z
)

326 
mag
, 
s
, 
c
;

327 
xx
, 
yy
, 
zz
, 
xy
, 
yz
, 
zx
, 
xs
, 
ys
, 
zs
, 
⁄e_c
;

329 
s
 = 
	`sö
(
™gÀ
);

330 
c
 = 
	`cos
(
™gÀ
);

332 
mag
 = 
	`sqπ
–
x
*x + 
y
*y + 
z
*z );

335 i‡(
mag
 == 0.0) {

336 
	`m3dLﬂdIdítôy44
(
m
);

341 
x
 /
mag
;

342 
y
 /
mag
;

343 
z
 /
mag
;

345 
	#M
(
row
,
cﬁ
Ë
m
[cﬁ*4+row]

	)

347 
xx
 = 
x
 * x;

348 
yy
 = 
y
 * y;

349 
zz
 = 
z
 * z;

350 
xy
 = 
x
 * 
y
;

351 
yz
 = 
y
 * 
z
;

352 
zx
 = 
z
 * 
x
;

353 
xs
 = 
x
 * 
s
;

354 
ys
 = 
y
 * 
s
;

355 
zs
 = 
z
 * 
s
;

356 
⁄e_c
 = 1.0‡- 
c
;

358 
	`M
(0,0Ë(
⁄e_c
 * 
xx
Ë+ 
c
;

359 
	`M
(0,1Ë(
⁄e_c
 * 
xy
Ë- 
zs
;

360 
	`M
(0,2Ë(
⁄e_c
 * 
zx
Ë+ 
ys
;

361 
	`M
(0,3) = 0.0;

363 
	`M
(1,0Ë(
⁄e_c
 * 
xy
Ë+ 
zs
;

364 
	`M
(1,1Ë(
⁄e_c
 * 
yy
Ë+ 
c
;

365 
	`M
(1,2Ë(
⁄e_c
 * 
yz
Ë- 
xs
;

366 
	`M
(1,3) = 0.0;

368 
	`M
(2,0Ë(
⁄e_c
 * 
zx
Ë- 
ys
;

369 
	`M
(2,1Ë(
⁄e_c
 * 
yz
Ë+ 
xs
;

370 
	`M
(2,2Ë(
⁄e_c
 * 
zz
Ë+ 
c
;

371 
	`M
(2,3) = 0.0;

373 
	`M
(3,0) = 0.0;

374 
	`M
(3,1) = 0.0;

375 
	`M
(3,2) = 0.0;

376 
	`M
(3,3) = 1.0;

378 #unde‡
M


379 
	}
}

387 
boﬁ
 
	$m3dInvîtM©rix44
(
M3DM©rix44f
 
d°
, c⁄° M3DM©rix44‡
§c
 )

389 
	#SWAP_ROWS
(
a
, 
b
Ë{ *
_tmp
 =á; (a)=(b); (b)=_tmp; }

	)

390 
	#MAT
(
m
,
r
,
c
Ë(m)[(c)*4+‘)]

	)

392 
wtmp
[4][8];

393 
m0
, 
m1
, 
m2
, 
m3
, 
s
;

394 *
r0
, *
r1
, *
r2
, *
r3
;

396 
r0
 = 
wtmp
[0], 
r1
 = wtmp[1], 
r2
 = wtmp[2], 
r3
 = wtmp[3];

398 
r0
[0] = 
	`MAT
(
§c
,0,0),Ñ0[1] = MAT(src,0,1),

399 
r0
[2] = 
	`MAT
(
§c
,0,2),Ñ0[3] = MAT(src,0,3),

400 
r0
[4] = 1.0,Ñ0[5] =Ñ0[6] =Ñ0[7] = 0.0,

402 
r1
[0] = 
	`MAT
(
§c
,1,0),Ñ1[1] = MAT(src,1,1),

403 
r1
[2] = 
	`MAT
(
§c
,1,2),Ñ1[3] = MAT(src,1,3),

404 
r1
[5] = 1.0,Ñ1[4] =Ñ1[6] =Ñ1[7] = 0.0,

406 
r2
[0] = 
	`MAT
(
§c
,2,0),Ñ2[1] = MAT(src,2,1),

407 
r2
[2] = 
	`MAT
(
§c
,2,2),Ñ2[3] = MAT(src,2,3),

408 
r2
[6] = 1.0,Ñ2[4] =Ñ2[5] =Ñ2[7] = 0.0,

410 
r3
[0] = 
	`MAT
(
§c
,3,0),Ñ3[1] = MAT(src,3,1),

411 
r3
[2] = 
	`MAT
(
§c
,3,2),Ñ3[3] = MAT(src,3,3),

412 
r3
[7] = 1.0,Ñ3[4] =Ñ3[5] =Ñ3[6] = 0.0;

415 i‡(
	`Ábs
(
r3
[0])>Ábs(
r2
[0])Ë
	`SWAP_ROWS
(r3,Ñ2);

416 i‡(
	`Ábs
(
r2
[0])>Ábs(
r1
[0])Ë
	`SWAP_ROWS
(r2,Ñ1);

417 i‡(
	`Ábs
(
r1
[0])>Ábs(
r0
[0])Ë
	`SWAP_ROWS
(r1,Ñ0);

418 i‡(0.0 =
r0
[0]Ë 
Ál£
;

421 
m1
 = 
r1
[0]/
r0
[0]; 
m2
 = 
r2
[0]/r0[0]; 
m3
 = 
r3
[0]/r0[0];

422 
s
 = 
r0
[1]; 
r1
[1] -
m1
 * s; 
r2
[1] -
m2
 * s; 
r3
[1] -
m3
 * s;

423 
s
 = 
r0
[2]; 
r1
[2] -
m1
 * s; 
r2
[2] -
m2
 * s; 
r3
[2] -
m3
 * s;

424 
s
 = 
r0
[3]; 
r1
[3] -
m1
 * s; 
r2
[3] -
m2
 * s; 
r3
[3] -
m3
 * s;

425 
s
 = 
r0
[4];

426 i‡(
s
 !0.0Ë{ 
r1
[4] -
m1
 * s; 
r2
[4] -
m2
 * s; 
r3
[4] -
m3
 * s; }

427 
s
 = 
r0
[5];

428 i‡(
s
 !0.0Ë{ 
r1
[5] -
m1
 * s; 
r2
[5] -
m2
 * s; 
r3
[5] -
m3
 * s; }

429 
s
 = 
r0
[6];

430 i‡(
s
 !0.0Ë{ 
r1
[6] -
m1
 * s; 
r2
[6] -
m2
 * s; 
r3
[6] -
m3
 * s; }

431 
s
 = 
r0
[7];

432 i‡(
s
 !0.0Ë{ 
r1
[7] -
m1
 * s; 
r2
[7] -
m2
 * s; 
r3
[7] -
m3
 * s; }

435 i‡(
	`Ábs
(
r3
[1])>Ábs(
r2
[1])Ë
	`SWAP_ROWS
(r3,Ñ2);

436 i‡(
	`Ábs
(
r2
[1])>Ábs(
r1
[1])Ë
	`SWAP_ROWS
(r2,Ñ1);

437 i‡(0.0 =
r1
[1]Ë 
Ál£
;

440 
m2
 = 
r2
[1]/
r1
[1]; 
m3
 = 
r3
[1]/r1[1];

441 
r2
[2] -
m2
 * 
r1
[2]; 
r3
[2] -
m3
 *Ñ1[2];

442 
r2
[3] -
m2
 * 
r1
[3]; 
r3
[3] -
m3
 *Ñ1[3];

443 
s
 = 
r1
[4]; i‡(0.0 !sË{ 
r2
[4] -
m2
 * s; 
r3
[4] -
m3
 * s; }

444 
s
 = 
r1
[5]; i‡(0.0 !sË{ 
r2
[5] -
m2
 * s; 
r3
[5] -
m3
 * s; }

445 
s
 = 
r1
[6]; i‡(0.0 !sË{ 
r2
[6] -
m2
 * s; 
r3
[6] -
m3
 * s; }

446 
s
 = 
r1
[7]; i‡(0.0 !sË{ 
r2
[7] -
m2
 * s; 
r3
[7] -
m3
 * s; }

449 i‡(
	`Ábs
(
r3
[2])>Ábs(
r2
[2])Ë
	`SWAP_ROWS
(r3,Ñ2);

450 i‡(0.0 =
r2
[2]Ë 
Ál£
;

453 
m3
 = 
r3
[2]/
r2
[2];

454 
r3
[3] -
m3
 * 
r2
[3],Ñ3[4] -= m3 *Ñ2[4],

455 
r3
[5] -
m3
 * 
r2
[5],Ñ3[6] -= m3 *Ñ2[6],

456 
r3
[7] -
m3
 * 
r2
[7];

459 i‡(0.0 =
r3
[3]Ë 
Ál£
;

461 
s
 = 1.0f/
r3
[3];

462 
r3
[4] *
s
;Ñ3[5] *= s;Ñ3[6] *= s;Ñ3[7] *= s;

464 
m2
 = 
r2
[3];

465 
s
 = 1.0f/
r2
[2];

466 
r2
[4] = 
s
 * (r2[4] - 
r3
[4] * 
m2
),Ñ2[5] = s * (r2[5] -Ñ3[5] * m2),

467 
r2
[6] = 
s
 * (r2[6] - 
r3
[6] * 
m2
),Ñ2[7] = s * (r2[7] -Ñ3[7] * m2);

468 
m1
 = 
r1
[3];

469 
r1
[4] -
r3
[4] * 
m1
,Ñ1[5] -=Ñ3[5] * m1,

470 
r1
[6] -
r3
[6] * 
m1
,Ñ1[7] -=Ñ3[7] * m1;

471 
m0
 = 
r0
[3];

472 
r0
[4] -
r3
[4] * 
m0
,Ñ0[5] -=Ñ3[5] * m0,

473 
r0
[6] -
r3
[6] * 
m0
,Ñ0[7] -=Ñ3[7] * m0;

475 
m1
 = 
r1
[2];

476 
s
 = 1.0f/
r1
[1];

477 
r1
[4] = 
s
 * (r1[4] - 
r2
[4] * 
m1
),Ñ1[5] = s * (r1[5] -Ñ2[5] * m1),

478 
r1
[6] = 
s
 * (r1[6] - 
r2
[6] * 
m1
),Ñ1[7] = s * (r1[7] -Ñ2[7] * m1);

479 
m0
 = 
r0
[2];

480 
r0
[4] -
r2
[4] * 
m0
,Ñ0[5] -=Ñ2[5] * m0,

481 
r0
[6] -
r2
[6] * 
m0
,Ñ0[7] -=Ñ2[7] * m0;

483 
m0
 = 
r0
[1];

484 
s
 = 1.0f/
r0
[0];

485 
r0
[4] = 
s
 * (r0[4] - 
r1
[4] * 
m0
),Ñ0[5] = s * (r0[5] -Ñ1[5] * m0),

486 
r0
[6] = 
s
 * (r0[6] - 
r1
[6] * 
m0
),Ñ0[7] = s * (r0[7] -Ñ1[7] * m0);

488 
	`MAT
(
d°
,0,0Ë
r0
[4]; MAT(dst,0,1) =Ñ0[5],

489 
	`MAT
(
d°
,0,2Ë
r0
[6]; MAT(dst,0,3) =Ñ0[7],

490 
	`MAT
(
d°
,1,0Ë
r1
[4]; MAT(dst,1,1) =Ñ1[5],

491 
	`MAT
(
d°
,1,2Ë
r1
[6]; MAT(dst,1,3) =Ñ1[7],

492 
	`MAT
(
d°
,2,0Ë
r2
[4]; MAT(dst,2,1) =Ñ2[5],

493 
	`MAT
(
d°
,2,2Ë
r2
[6]; MAT(dst,2,3) =Ñ2[7],

494 
	`MAT
(
d°
,3,0Ë
r3
[4]; MAT(dst,3,1) =Ñ3[5],

495 
	`MAT
(
d°
,3,2Ë
r3
[6]; MAT(dst,3,3) =Ñ3[7];

497  
åue
;

499 #unde‡
MAT


500 #unde‡
SWAP_ROWS


501 
	}
}

505 
boﬁ
 
	$m3dInvîtM©rix44
(
M3DM©rix44d
 
d°
, c⁄° M3DM©rix44d 
§c
)

507 
	#SWAP_ROWS
(
a
, 
b
Ë{ *
_tmp
 =á; (a)=(b); (b)=_tmp; }

	)

508 
	#MAT
(
m
,
r
,
c
Ë(m)[(c)*4+‘)]

	)

510 
wtmp
[4][8];

511 
m0
, 
m1
, 
m2
, 
m3
, 
s
;

512 *
r0
, *
r1
, *
r2
, *
r3
;

514 
r0
 = 
wtmp
[0], 
r1
 = wtmp[1], 
r2
 = wtmp[2], 
r3
 = wtmp[3];

516 
r0
[0] = 
	`MAT
(
§c
,0,0),Ñ0[1] = MAT(src,0,1),

517 
r0
[2] = 
	`MAT
(
§c
,0,2),Ñ0[3] = MAT(src,0,3),

518 
r0
[4] = 1.0,Ñ0[5] =Ñ0[6] =Ñ0[7] = 0.0,

520 
r1
[0] = 
	`MAT
(
§c
,1,0),Ñ1[1] = MAT(src,1,1),

521 
r1
[2] = 
	`MAT
(
§c
,1,2),Ñ1[3] = MAT(src,1,3),

522 
r1
[5] = 1.0,Ñ1[4] =Ñ1[6] =Ñ1[7] = 0.0,

524 
r2
[0] = 
	`MAT
(
§c
,2,0),Ñ2[1] = MAT(src,2,1),

525 
r2
[2] = 
	`MAT
(
§c
,2,2),Ñ2[3] = MAT(src,2,3),

526 
r2
[6] = 1.0,Ñ2[4] =Ñ2[5] =Ñ2[7] = 0.0,

528 
r3
[0] = 
	`MAT
(
§c
,3,0),Ñ3[1] = MAT(src,3,1),

529 
r3
[2] = 
	`MAT
(
§c
,3,2),Ñ3[3] = MAT(src,3,3),

530 
r3
[7] = 1.0,Ñ3[4] =Ñ3[5] =Ñ3[6] = 0.0;

533 i‡(
	`Ábs
(
r3
[0])>Ábs(
r2
[0])Ë
	`SWAP_ROWS
(r3,Ñ2);

534 i‡(
	`Ábs
(
r2
[0])>Ábs(
r1
[0])Ë
	`SWAP_ROWS
(r2,Ñ1);

535 i‡(
	`Ábs
(
r1
[0])>Ábs(
r0
[0])Ë
	`SWAP_ROWS
(r1,Ñ0);

536 i‡(0.0 =
r0
[0]Ë 
Ál£
;

539 
m1
 = 
r1
[0]/
r0
[0]; 
m2
 = 
r2
[0]/r0[0]; 
m3
 = 
r3
[0]/r0[0];

540 
s
 = 
r0
[1]; 
r1
[1] -
m1
 * s; 
r2
[1] -
m2
 * s; 
r3
[1] -
m3
 * s;

541 
s
 = 
r0
[2]; 
r1
[2] -
m1
 * s; 
r2
[2] -
m2
 * s; 
r3
[2] -
m3
 * s;

542 
s
 = 
r0
[3]; 
r1
[3] -
m1
 * s; 
r2
[3] -
m2
 * s; 
r3
[3] -
m3
 * s;

543 
s
 = 
r0
[4];

544 i‡(
s
 !0.0Ë{ 
r1
[4] -
m1
 * s; 
r2
[4] -
m2
 * s; 
r3
[4] -
m3
 * s; }

545 
s
 = 
r0
[5];

546 i‡(
s
 !0.0Ë{ 
r1
[5] -
m1
 * s; 
r2
[5] -
m2
 * s; 
r3
[5] -
m3
 * s; }

547 
s
 = 
r0
[6];

548 i‡(
s
 !0.0Ë{ 
r1
[6] -
m1
 * s; 
r2
[6] -
m2
 * s; 
r3
[6] -
m3
 * s; }

549 
s
 = 
r0
[7];

550 i‡(
s
 !0.0Ë{ 
r1
[7] -
m1
 * s; 
r2
[7] -
m2
 * s; 
r3
[7] -
m3
 * s; }

553 i‡(
	`Ábs
(
r3
[1])>Ábs(
r2
[1])Ë
	`SWAP_ROWS
(r3,Ñ2);

554 i‡(
	`Ábs
(
r2
[1])>Ábs(
r1
[1])Ë
	`SWAP_ROWS
(r2,Ñ1);

555 i‡(0.0 =
r1
[1]Ë 
Ál£
;

558 
m2
 = 
r2
[1]/
r1
[1]; 
m3
 = 
r3
[1]/r1[1];

559 
r2
[2] -
m2
 * 
r1
[2]; 
r3
[2] -
m3
 *Ñ1[2];

560 
r2
[3] -
m2
 * 
r1
[3]; 
r3
[3] -
m3
 *Ñ1[3];

561 
s
 = 
r1
[4]; i‡(0.0 !sË{ 
r2
[4] -
m2
 * s; 
r3
[4] -
m3
 * s; }

562 
s
 = 
r1
[5]; i‡(0.0 !sË{ 
r2
[5] -
m2
 * s; 
r3
[5] -
m3
 * s; }

563 
s
 = 
r1
[6]; i‡(0.0 !sË{ 
r2
[6] -
m2
 * s; 
r3
[6] -
m3
 * s; }

564 
s
 = 
r1
[7]; i‡(0.0 !sË{ 
r2
[7] -
m2
 * s; 
r3
[7] -
m3
 * s; }

567 i‡(
	`Ábs
(
r3
[2])>Ábs(
r2
[2])Ë
	`SWAP_ROWS
(r3,Ñ2);

568 i‡(0.0 =
r2
[2]Ë 
Ál£
;

571 
m3
 = 
r3
[2]/
r2
[2];

572 
r3
[3] -
m3
 * 
r2
[3],Ñ3[4] -= m3 *Ñ2[4],

573 
r3
[5] -
m3
 * 
r2
[5],Ñ3[6] -= m3 *Ñ2[6],

574 
r3
[7] -
m3
 * 
r2
[7];

577 i‡(0.0 =
r3
[3]Ë 
Ál£
;

579 
s
 = 1.0f/
r3
[3];

580 
r3
[4] *
s
;Ñ3[5] *= s;Ñ3[6] *= s;Ñ3[7] *= s;

582 
m2
 = 
r2
[3];

583 
s
 = 1.0f/
r2
[2];

584 
r2
[4] = 
s
 * (r2[4] - 
r3
[4] * 
m2
),Ñ2[5] = s * (r2[5] -Ñ3[5] * m2),

585 
r2
[6] = 
s
 * (r2[6] - 
r3
[6] * 
m2
),Ñ2[7] = s * (r2[7] -Ñ3[7] * m2);

586 
m1
 = 
r1
[3];

587 
r1
[4] -
r3
[4] * 
m1
,Ñ1[5] -=Ñ3[5] * m1,

588 
r1
[6] -
r3
[6] * 
m1
,Ñ1[7] -=Ñ3[7] * m1;

589 
m0
 = 
r0
[3];

590 
r0
[4] -
r3
[4] * 
m0
,Ñ0[5] -=Ñ3[5] * m0,

591 
r0
[6] -
r3
[6] * 
m0
,Ñ0[7] -=Ñ3[7] * m0;

593 
m1
 = 
r1
[2];

594 
s
 = 1.0f/
r1
[1];

595 
r1
[4] = 
s
 * (r1[4] - 
r2
[4] * 
m1
),Ñ1[5] = s * (r1[5] -Ñ2[5] * m1),

596 
r1
[6] = 
s
 * (r1[6] - 
r2
[6] * 
m1
),Ñ1[7] = s * (r1[7] -Ñ2[7] * m1);

597 
m0
 = 
r0
[2];

598 
r0
[4] -
r2
[4] * 
m0
,Ñ0[5] -=Ñ2[5] * m0,

599 
r0
[6] -
r2
[6] * 
m0
,Ñ0[7] -=Ñ2[7] * m0;

601 
m0
 = 
r0
[1];

602 
s
 = 1.0f/
r0
[0];

603 
r0
[4] = 
s
 * (r0[4] - 
r1
[4] * 
m0
),Ñ0[5] = s * (r0[5] -Ñ1[5] * m0),

604 
r0
[6] = 
s
 * (r0[6] - 
r1
[6] * 
m0
),Ñ0[7] = s * (r0[7] -Ñ1[7] * m0);

606 
	`MAT
(
d°
,0,0Ë
r0
[4]; MAT(dst,0,1) =Ñ0[5],

607 
	`MAT
(
d°
,0,2Ë
r0
[6]; MAT(dst,0,3) =Ñ0[7],

608 
	`MAT
(
d°
,1,0Ë
r1
[4]; MAT(dst,1,1) =Ñ1[5],

609 
	`MAT
(
d°
,1,2Ë
r1
[6]; MAT(dst,1,3) =Ñ1[7],

610 
	`MAT
(
d°
,2,0Ë
r2
[4]; MAT(dst,2,1) =Ñ2[5],

611 
	`MAT
(
d°
,2,2Ë
r2
[6]; MAT(dst,2,3) =Ñ2[7],

612 
	`MAT
(
d°
,3,0Ë
r3
[4]; MAT(dst,3,1) =Ñ3[5],

613 
	`MAT
(
d°
,3,2Ë
r3
[6]; MAT(dst,3,3) =Ñ3[7];

615  
åue
;

617 #unde‡
MAT


618 #unde‡
SWAP_ROWS


620  
åue
;

621 
	}
}

627 
	$m3dProje˘XY
(c⁄° 
M3DM©rix44f
 
mModñVõw
, c⁄° M3DM©rix44‡
mProje˘i⁄
, c⁄° 
iVõwP‹t
[4], c⁄° 
M3DVe˘‹3f
 
vPoötIn
, 
M3DVe˘‹2f
 
vPoötOut
)

629 
M3DVe˘‹4f
 
vBack
, 
vF‹th
;

631 
	`mem˝y
(
vBack
, 
vPoötIn
, ()*3);

632 
vBack
[3] = 1.0f;

634 
	`m3dTønsf‹mVe˘‹4
(
vF‹th
, 
vBack
, 
mModñVõw
);

635 
	`m3dTønsf‹mVe˘‹4
(
vBack
, 
vF‹th
, 
mProje˘i⁄
);

637 if(!
	`m3dClo£Enough
(
vBack
[3], 0.0f, 0.000001f)) {

638 
div
 = 1.0‡/ 
vBack
[3];

639 
vBack
[0] *
div
;

640 
vBack
[1] *
div
;

644 
vPoötOut
[0] = 
vBack
[0] * 0.5f + 0.5f;

645 
vPoötOut
[1] = 
vBack
[1] * 0.5f + 0.5f;

648 
vPoötOut
[0] = (vPoötOut[0] * 
iVõwP‹t
[2]) + iViewPort[0];

649 
vPoötOut
[1] = (vPoötOut[1] * 
iVõwP‹t
[3]) + iViewPort[1];

650 
	}
}

654 
	$m3dProje˘XYZ
(c⁄° 
M3DM©rix44f
 
mModñVõw
, c⁄° M3DM©rix44‡
mProje˘i⁄
, c⁄° 
iVõwP‹t
[4], c⁄° 
M3DVe˘‹3f
 
vPoötIn
, M3DVe˘‹3‡
vPoötOut
)

656 
M3DVe˘‹4f
 
vBack
, 
vF‹th
;

658 
	`mem˝y
(
vBack
, 
vPoötIn
, ()*3);

659 
vBack
[3] = 1.0f;

661 
	`m3dTønsf‹mVe˘‹4
(
vF‹th
, 
vBack
, 
mModñVõw
);

662 
	`m3dTønsf‹mVe˘‹4
(
vBack
, 
vF‹th
, 
mProje˘i⁄
);

664 if(!
	`m3dClo£Enough
(
vBack
[3], 0.0f, 0.000001f)) {

665 
div
 = 1.0‡/ 
vBack
[3];

666 
vBack
[0] *
div
;

667 
vBack
[1] *
div
;

668 
vBack
[2] *
div
;

671 
vPoötOut
[0] = 
vBack
[0] * 0.5f + 0.5f;

672 
vPoötOut
[1] = 
vBack
[1] * 0.5f + 0.5f;

673 
vPoötOut
[2] = 
vBack
[2] * 0.5f + 0.5f;

676 
vPoötOut
[0] = (vPoötOut[0] * 
iVõwP‹t
[2]) + iViewPort[0];

677 
vPoötOut
[1] = (vPoötOut[1] * 
iVõwP‹t
[3]) + iViewPort[1];

678 
	}
}

689 
	$m3dFödN‹mÆ
(
M3DVe˘‹3f
 
ªsu…
, c⁄° M3DVe˘‹3‡
poöt1
, c⁄° M3DVe˘‹3‡
poöt2
,

690 c⁄° 
M3DVe˘‹3f
 
poöt3
)

692 
M3DVe˘‹3f
 
v1
,
v2
;

696 
v1
[0] = 
poöt1
[0] - 
poöt2
[0];

697 
v1
[1] = 
poöt1
[1] - 
poöt2
[1];

698 
v1
[2] = 
poöt1
[2] - 
poöt2
[2];

700 
v2
[0] = 
poöt2
[0] - 
poöt3
[0];

701 
v2
[1] = 
poöt2
[1] - 
poöt3
[1];

702 
v2
[2] = 
poöt2
[2] - 
poöt3
[2];

706 
	`m3dCrossProdu˘
(
ªsu…
, 
v1
, 
v2
);

707 
	}
}

712 
	$m3dFödN‹mÆ
(
M3DVe˘‹3d
 
ªsu…
, c⁄° M3DVe˘‹3d 
poöt1
, c⁄° M3DVe˘‹3d 
poöt2
,

713 c⁄° 
M3DVe˘‹3d
 
poöt3
)

715 
M3DVe˘‹3d
 
v1
,
v2
;

719 
v1
[0] = 
poöt1
[0] - 
poöt2
[0];

720 
v1
[1] = 
poöt1
[1] - 
poöt2
[1];

721 
v1
[2] = 
poöt1
[2] - 
poöt2
[2];

723 
v2
[0] = 
poöt2
[0] - 
poöt3
[0];

724 
v2
[1] = 
poöt2
[1] - 
poöt3
[1];

725 
v2
[2] = 
poöt2
[2] - 
poöt3
[2];

729 
	`m3dCrossProdu˘
(
ªsu…
, 
v1
, 
v2
);

730 
	}
}

738 
	$m3dGëPœ√Equ©i⁄
(
M3DVe˘‹4f
 
∂™eEq
, c⁄° 
M3DVe˘‹3f
 
p1
, c⁄° M3DVe˘‹3‡
p2
, c⁄° M3DVe˘‹3‡
p3
)

741 
M3DVe˘‹3f
 
v1
, 
v2
;

744 
v1
[0] = 
p3
[0] - 
p1
[0];

745 
v1
[1] = 
p3
[1] - 
p1
[1];

746 
v1
[2] = 
p3
[2] - 
p1
[2];

749 
v2
[0] = 
p2
[0] - 
p1
[0];

750 
v2
[1] = 
p2
[1] - 
p1
[1];

751 
v2
[2] = 
p2
[2] - 
p1
[2];

754 
	`m3dCrossProdu˘
(
∂™eEq
, 
v1
, 
v2
);

755 
	`m3dN‹mÆizeVe˘‹
(
∂™eEq
);

757 
∂™eEq
[3] = -’œ√Eq[0] * 
p3
[0] +ÖlaneEq[1] *Ö3[1] +ÖlaneEq[2] *Ö3[2]);

758 
	}
}

762 
	$m3dGëPœ√Equ©i⁄
(
M3DVe˘‹4d
 
∂™eEq
, c⁄° 
M3DVe˘‹3d
 
p1
, c⁄° M3DVe˘‹3d 
p2
, c⁄° M3DVe˘‹3d 
p3
)

765 
M3DVe˘‹3d
 
v1
, 
v2
;

768 
v1
[0] = 
p3
[0] - 
p1
[0];

769 
v1
[1] = 
p3
[1] - 
p1
[1];

770 
v1
[2] = 
p3
[2] - 
p1
[2];

773 
v2
[0] = 
p2
[0] - 
p1
[0];

774 
v2
[1] = 
p2
[1] - 
p1
[1];

775 
v2
[2] = 
p2
[2] - 
p1
[2];

778 
	`m3dCrossProdu˘
(
∂™eEq
, 
v1
, 
v2
);

779 
	`m3dN‹mÆizeVe˘‹
(
∂™eEq
);

781 
∂™eEq
[3] = -’œ√Eq[0] * 
p3
[0] +ÖlaneEq[1] *Ö3[1] +ÖlaneEq[2] *Ö3[2]);

782 
	}
}

790 
	$m3dC©muŒRom3
(
M3DVe˘‹3f
 
vOut
, M3DVe˘‹3‡
vP0
, M3DVe˘‹3‡
vP1
, M3DVe˘‹3‡
vP2
, M3DVe˘‹3‡
vP3
, 
t
)

793 
t2
 = 
t
 *Å;

794 
t3
 = 
t2
 * 
t
;

797 
vOut
[0] = 0.5‡* ( ( 2.0‡* 
vP1
[0]) +

798 (-
vP0
[0] + 
vP2
[0]Ë* 
t
 +

799 (2.0‡* 
vP0
[0] - 5.0‡*
vP1
[0] + 4.0‡* 
vP2
[0] - 
vP3
[0]Ë* 
t2
 +

800 (-
vP0
[0] + 3.0f*
vP1
[0] - 3.0‡*
vP2
[0] + 
vP3
[0]Ë* 
t3
);

802 
vOut
[1] = 0.5‡* ( ( 2.0‡* 
vP1
[1]) +

803 (-
vP0
[1] + 
vP2
[1]Ë* 
t
 +

804 (2.0‡* 
vP0
[1] - 5.0‡*
vP1
[1] + 4.0‡* 
vP2
[1] - 
vP3
[1]Ë* 
t2
 +

805 (-
vP0
[1] + 3.0f*
vP1
[1] - 3.0‡*
vP2
[1] + 
vP3
[1]Ë* 
t3
);

808 
vOut
[2] = 0.5‡* ( ( 2.0‡* 
vP1
[2]) +

809 (-
vP0
[2] + 
vP2
[2]Ë* 
t
 +

810 (2.0‡* 
vP0
[2] - 5.0‡*
vP1
[2] + 4.0‡* 
vP2
[2] - 
vP3
[2]Ë* 
t2
 +

811 (-
vP0
[2] + 3.0f*
vP1
[2] - 3.0‡*
vP2
[2] + 
vP3
[2]Ë* 
t3
);

812 
	}
}

820 
	$m3dC©muŒRom3
(
M3DVe˘‹3d
 
vOut
, M3DVe˘‹3d 
vP0
, M3DVe˘‹3d 
vP1
, M3DVe˘‹3d 
vP2
, M3DVe˘‹3d 
vP3
, 
t
)

823 
t2
 = 
t
 *Å;

824 
t3
 = 
t2
 * 
t
;

827 
vOut
[0] = 0.5 * ( ( 2.0 * 
vP1
[0]) +

828 (-
vP0
[0] + 
vP2
[0]Ë* 
t
 +

829 (2.0 * 
vP0
[0] - 5.0 *
vP1
[0] + 4.0 * 
vP2
[0] - 
vP3
[0]Ë* 
t2
 +

830 (-
vP0
[0] + 3.0*
vP1
[0] - 3.0 *
vP2
[0] + 
vP3
[0]Ë* 
t3
);

832 
vOut
[1] = 0.5 * ( ( 2.0 * 
vP1
[1]) +

833 (-
vP0
[1] + 
vP2
[1]Ë* 
t
 +

834 (2.0 * 
vP0
[1] - 5.0 *
vP1
[1] + 4.0 * 
vP2
[1] - 
vP3
[1]Ë* 
t2
 +

835 (-
vP0
[1] + 3*
vP1
[1] - 3.0 *
vP2
[1] + 
vP3
[1]Ë* 
t3
);

838 
vOut
[2] = 0.5 * ( ( 2.0 * 
vP1
[2]) +

839 (-
vP0
[2] + 
vP2
[2]Ë* 
t
 +

840 (2.0 * 
vP0
[2] - 5.0 *
vP1
[2] + 4.0 * 
vP2
[2] - 
vP3
[2]Ë* 
t2
 +

841 (-
vP0
[2] + 3.0*
vP1
[2] - 3.0 *
vP2
[2] + 
vP3
[2]Ë* 
t3
);

842 
	}
}

852 
	$m3dRaySphîeTe°
(c⁄° 
M3DVe˘‹3d
 
poöt
, c⁄° M3DVe˘‹3d 
øy
, c⁄° M3DVe˘‹3d 
•hîeCíãr
, 
•hîeRadius
)

856 
M3DVe˘‹3d
 
øyToCíãr
;

857 
øyToCíãr
[0] = 
•hîeCíãr
[0] - 
poöt
[0];

858 
øyToCíãr
[1] = 
•hîeCíãr
[1] - 
poöt
[1];

859 
øyToCíãr
[2] = 
•hîeCíãr
[2] - 
poöt
[2];

862 
a
 = 
	`m3dDŸProdu˘
(
øyToCíãr
, 
øy
);

865 
di°™˚2
 = 
	`m3dDŸProdu˘
(
øyToCíãr
,ÑayToCenter);

868 
dRë
 = (
•hîeRadius
 * sphîeRadiusË- 
di°™˚2
 + (
a
*a);

870 if(
dRë
 > 0.0)

871 
dRë
 = 
a
 - 
	`sqπ
(dRet);

873  
dRë
;

874 
	}
}

879 
	$m3dRaySphîeTe°
(c⁄° 
M3DVe˘‹3f
 
poöt
, c⁄° M3DVe˘‹3‡
øy
, c⁄° M3DVe˘‹3‡
•hîeCíãr
, 
•hîeRadius
)

883 
M3DVe˘‹3f
 
øyToCíãr
;

884 
øyToCíãr
[0] = 
•hîeCíãr
[0] - 
poöt
[0];

885 
øyToCíãr
[1] = 
•hîeCíãr
[1] - 
poöt
[1];

886 
øyToCíãr
[2] = 
•hîeCíãr
[2] - 
poöt
[2];

889 
a
 = 
	`m3dDŸProdu˘
(
øyToCíãr
, 
øy
);

892 
di°™˚2
 = 
	`m3dDŸProdu˘
(
øyToCíãr
,ÑayToCenter);

894 
dRë
 = (
•hîeRadius
 * sphîeRadiusË- 
di°™˚2
 + (
a
*a);

896 if(
dRë
 > 0.0)

897 
dRë
 = 
a
 - 
	`sqπf
(dRet);

899  
dRë
;

900 
	}
}

906 
	$m3dCÆcuœãT™gítBasis
(c⁄° 
M3DVe˘‹3f
 
vTrüngÀ
[3], c⁄° 
M3DVe˘‹2f
 
vTexCo‹ds
[3], c⁄° M3DVe˘‹3‡
N
, M3DVe˘‹3‡
vT™gít
)

908 
M3DVe˘‹3f
 
dv2v1
, 
dv3v1
;

909 
dc2c1t
, 
dc2c1b
, 
dc3c1t
, 
dc3c1b
;

910 
M
;

912 
	`m3dSubåa˘Ve˘‹s3
(
dv2v1
, 
vTrüngÀ
[1], vTriangle[0]);

913 
	`m3dSubåa˘Ve˘‹s3
(
dv3v1
, 
vTrüngÀ
[2], vTriangle[0]);

915 
dc2c1t
 = 
vTexCo‹ds
[1][0] - vTexCoords[0][0];

916 
dc2c1b
 = 
vTexCo‹ds
[1][1] - vTexCoords[0][1];

917 
dc3c1t
 = 
vTexCo‹ds
[2][0] - vTexCoords[0][0];

918 
dc3c1b
 = 
vTexCo‹ds
[2][1] - vTexCoords[0][1];

920 
M
 = (
dc2c1t
 * 
dc3c1b
Ë- (
dc3c1t
 * 
dc2c1b
);

921 
M
 = 1.0f / M;

923 
	`m3dSˇÀVe˘‹3
(
dv2v1
, 
dc3c1b
);

924 
	`m3dSˇÀVe˘‹3
(
dv3v1
, 
dc2c1b
);

926 
	`m3dSubåa˘Ve˘‹s3
(
vT™gít
, 
dv2v1
, 
dv3v1
);

927 
	`m3dSˇÀVe˘‹3
(
vT™gít
, 
M
);

928 
	`m3dN‹mÆizeVe˘‹
(
vT™gít
);

930 
M3DVe˘‹3f
 
B
;

931 
	`m3dCrossProdu˘
(
B
, 
N
, 
vT™gít
);

932 
	`m3dCrossProdu˘
(
vT™gít
, 
B
, 
N
);

933 
	`m3dN‹mÆizeVe˘‹
(
vT™gít
);

934 
	}
}

939 
	$m3dSmoŸhSãp
(
edge1
, 
edge2
, 
x
)

941 
t
;

942 
t
 = (
x
 - 
edge1
Ë/ (
edge2
 -Édge1);

943 if(
t
 > 1.0)

944 
t
 = 1.0;

946 if(
t
 < 0.0)

947 
t
 = 0.0f;

949  
t
 *Å * ( 3.0 - 2.0 *Å);

950 
	}
}

954 
	$m3dSmoŸhSãp
(
edge1
, 
edge2
, 
x
)

956 
t
;

957 
t
 = (
x
 - 
edge1
Ë/ (
edge2
 -Édge1);

958 if(
t
 > 1.0f)

959 
t
 = 1.0f;

961 if(
t
 < 0.0)

962 
t
 = 0.0f;

964  
t
 *Å * ( 3.0f - 2.0f *Å);

965 
	}
}

973 
	$m3dMakePœ«rShadowM©rix
(
M3DM©rix44f
 
¥oj
, c⁄° 
M3DVe˘‹4f
 
∂™eEq
, c⁄° 
M3DVe˘‹3f
 
vLightPos
)

977 
a
 = 
∂™eEq
[0];

978 
b
 = 
∂™eEq
[1];

979 
c
 = 
∂™eEq
[2];

980 
d
 = 
∂™eEq
[3];

982 
dx
 = -
vLightPos
[0];

983 
dy
 = -
vLightPos
[1];

984 
dz
 = -
vLightPos
[2];

987 
¥oj
[0] = 
b
 * 
dy
 + 
c
 * 
dz
;

988 
¥oj
[1] = -
a
 * 
dy
;

989 
¥oj
[2] = -
a
 * 
dz
;

990 
¥oj
[3] = 0.0;

992 
¥oj
[4] = -
b
 * 
dx
;

993 
¥oj
[5] = 
a
 * 
dx
 + 
c
 * 
dz
;

994 
¥oj
[6] = -
b
 * 
dz
;

995 
¥oj
[7] = 0.0;

997 
¥oj
[8] = -
c
 * 
dx
;

998 
¥oj
[9] = -
c
 * 
dy
;

999 
¥oj
[10] = 
a
 * 
dx
 + 
b
 * 
dy
;

1000 
¥oj
[11] = 0.0;

1002 
¥oj
[12] = -
d
 * 
dx
;

1003 
¥oj
[13] = -
d
 * 
dy
;

1004 
¥oj
[14] = -
d
 * 
dz
;

1005 
¥oj
[15] = 
a
 * 
dx
 + 
b
 * 
dy
 + 
c
 * 
dz
;

1007 
	}
}

1014 
	$m3dMakePœ«rShadowM©rix
(
M3DM©rix44d
 
¥oj
, c⁄° 
M3DVe˘‹4d
 
∂™eEq
, c⁄° 
M3DVe˘‹3f
 
vLightPos
)

1018 
a
 = 
∂™eEq
[0];

1019 
b
 = 
∂™eEq
[1];

1020 
c
 = 
∂™eEq
[2];

1021 
d
 = 
∂™eEq
[3];

1023 
dx
 = -
vLightPos
[0];

1024 
dy
 = -
vLightPos
[1];

1025 
dz
 = -
vLightPos
[2];

1028 
¥oj
[0] = 
b
 * 
dy
 + 
c
 * 
dz
;

1029 
¥oj
[1] = -
a
 * 
dy
;

1030 
¥oj
[2] = -
a
 * 
dz
;

1031 
¥oj
[3] = 0.0;

1033 
¥oj
[4] = -
b
 * 
dx
;

1034 
¥oj
[5] = 
a
 * 
dx
 + 
c
 * 
dz
;

1035 
¥oj
[6] = -
b
 * 
dz
;

1036 
¥oj
[7] = 0.0;

1038 
¥oj
[8] = -
c
 * 
dx
;

1039 
¥oj
[9] = -
c
 * 
dy
;

1040 
¥oj
[10] = 
a
 * 
dx
 + 
b
 * 
dy
;

1041 
¥oj
[11] = 0.0;

1043 
¥oj
[12] = -
d
 * 
dx
;

1044 
¥oj
[13] = -
d
 * 
dy
;

1045 
¥oj
[14] = -
d
 * 
dz
;

1046 
¥oj
[15] = 
a
 * 
dx
 + 
b
 * 
dy
 + 
c
 * 
dz
;

1048 
	}
}

1059 
	$m3dClo£°PoötOnRay
(
M3DVe˘‹3d
 
vPoötOnRay
, c⁄° M3DVe˘‹3d 
vRayOrigö
, c⁄° M3DVe˘‹3d 
vUnôRayDú
,

1060 c⁄° 
M3DVe˘‹3d
 
vPoötInS∑˚
)

1062 
M3DVe˘‹3d
 
v
;

1063 
	`m3dSubåa˘Ve˘‹s3
(
v
, 
vPoötInS∑˚
, 
vRayOrigö
);

1065 
t
 = 
	`m3dDŸProdu˘
(
vUnôRayDú
, 
v
);

1068 
vPoötOnRay
[0] = 
vRayOrigö
[0] + (
t
 * 
vUnôRayDú
[0]);

1069 
vPoötOnRay
[1] = 
vRayOrigö
[1] + (
t
 * 
vUnôRayDú
[1]);

1070 
vPoötOnRay
[2] = 
vRayOrigö
[2] + (
t
 * 
vUnôRayDú
[2]);

1072  
	`m3dGëDi°™˚Squ¨ed
(
vPoötOnRay
, 
vPoötInS∑˚
);

1073 
	}
}

1076 
	$m3dClo£°PoötOnRay
(
M3DVe˘‹3f
 
vPoötOnRay
, c⁄° M3DVe˘‹3‡
vRayOrigö
, c⁄° M3DVe˘‹3‡
vUnôRayDú
,

1077 c⁄° 
M3DVe˘‹3f
 
vPoötInS∑˚
)

1079 
M3DVe˘‹3f
 
v
;

1080 
	`m3dSubåa˘Ve˘‹s3
(
v
, 
vPoötInS∑˚
, 
vRayOrigö
);

1082 
t
 = 
	`m3dDŸProdu˘
(
vUnôRayDú
, 
v
);

1085 
vPoötOnRay
[0] = 
vRayOrigö
[0] + (
t
 * 
vUnôRayDú
[0]);

1086 
vPoötOnRay
[1] = 
vRayOrigö
[1] + (
t
 * 
vUnôRayDú
[1]);

1087 
vPoötOnRay
[2] = 
vRayOrigö
[2] + (
t
 * 
vUnôRayDú
[2]);

1089  
	`m3dGëDi°™˚Squ¨ed
(
vPoötOnRay
, 
vPoötInS∑˚
);

1090 
	}
}

	@shared/math3d.h

6 #i‚de‡
_MATH3D_LIBRARY__


7 
	#_MATH3D_LIBRARY__


	)

9 
	~<m©h.h
>

10 
	~<mem‹y.h
>

20 
	tM3DVe˘‹3f
[3];

21 
	tM3DVe˘‹3d
[3];

23 
	tM3DVe˘‹4f
[4];

24 
	tM3DVe˘‹4d
[4];

26 
	tM3DVe˘‹2f
[2];

27 
	tM3DVe˘‹2d
[2];

35 
	tM3DM©rix33f
[9];

36 
	tM3DM©rix33d
[9];

44 
	tM3DM©rix44f
[16];

45 
	tM3DM©rix44d
[16];

50 
	#M3D_PI
 (3.14159265358979323846)

	)

51 
	#M3D_2PI
 (2.0 * 
M3D_PI
)

	)

52 
	#M3D_PI_DIV_180
 (0.017453292519943296)

	)

53 
	#M3D_INV_PI_DIV_180
 (57.2957795130823229)

	)

59 
	#m3dDegToRad
(
x
Ë((x)*
M3D_PI_DIV_180
)

	)

60 
	#m3dRadToDeg
(
x
Ë((x)*
M3D_INV_PI_DIV_180
)

	)

63 
	#m3dHrToDeg
(
x
Ë((xË* (1.0 / 15.0))

	)

64 
	#m3dHrToRad
(
x
Ë
	`m3dDegToRad
(
	`m3dHrToDeg
(x))

	)

66 
	#m3dDegToHr
(
x
Ë((xË* 15.0))

	)

67 
	#m3dRadToHr
(
x
Ë
	`m3dDegToHr
(
	`m3dRadToDeg
(x))

	)

74 
ölöe
 
	$m3dIsPOW2
(
iVÆue
)

76 
nPow2
 = 1;

78 
iVÆue
 > 
nPow2
)

79 
nPow2
 = (nPow2 << 1);

81  
nPow2
;

82 
	}
}

87 
	#m3dGëVe˘‹X
(
v
Ë(v[0])

	)

88 
	#m3dGëVe˘‹Y
(
v
Ë(v[1])

	)

89 
	#m3dGëVe˘‹Z
(
v
Ë(v[2])

	)

90 
	#m3dGëVe˘‹W
(
v
Ë(v[3])

	)

92 
	#m3dSëVe˘‹X
(
v
, 
x
Ë((v)[0] = (x))

	)

93 
	#m3dSëVe˘‹Y
(
v
, 
y
Ë((v)[1] = (y))

	)

94 
	#m3dSëVe˘‹Z
(
v
, 
z
Ë((v)[2] = (z))

	)

95 
	#m3dSëVe˘‹W
(
v
, 
w
Ë((v)[3] = (w))

	)

100 
ölöe
 
	$m3dLﬂdVe˘‹2
(
M3DVe˘‹2f
 
v
, 
x
, 
y
)

101 { 
v
[0] = 
x
; v[1] = 
y
; 
	}
}

102 
ölöe
 
	$m3dLﬂdVe˘‹2
(
M3DVe˘‹2d
 
v
, 
x
, 
y
)

103 { 
v
[0] = 
x
; v[1] = 
y
; 
	}
}

104 
ölöe
 
	$m3dLﬂdVe˘‹3
(
M3DVe˘‹3f
 
v
, 
x
, 
y
, 
z
)

105 { 
v
[0] = 
x
; v[1] = 
y
; v[2] = 
z
; 
	}
}

106 
ölöe
 
	$m3dLﬂdVe˘‹3
(
M3DVe˘‹3d
 
v
, 
x
, 
y
, 
z
)

107 { 
v
[0] = 
x
; v[1] = 
y
; v[2] = 
z
; 
	}
}

108 
ölöe
 
	$m3dLﬂdVe˘‹4
(
M3DVe˘‹4f
 
v
, 
x
, 
y
, 
z
, 
w
)

109 { 
v
[0] = 
x
; v[1] = 
y
; v[2] = 
z
; v[3] = 
w
;
	}
}

110 
ölöe
 
	$m3dLﬂdVe˘‹4
(
M3DVe˘‹4d
 
v
, 
x
, 
y
, 
z
, 
w
)

111 { 
v
[0] = 
x
; v[1] = 
y
; v[2] = 
z
; v[3] = 
w
;
	}
}

116 
ölöe
 
	$m3dC›yVe˘‹2
(
M3DVe˘‹2f
 
d°
, c⁄° M3DVe˘‹2‡
§c
Ë{ 
	`mem˝y
(d°, src, (M3DVe˘‹2f)); 
	}
}

117 
ölöe
 
	$m3dC›yVe˘‹2
(
M3DVe˘‹2d
 
d°
, c⁄° M3DVe˘‹2d 
§c
Ë{ 
	`mem˝y
(d°, src, (M3DVe˘‹2d)); 
	}
}

119 
ölöe
 
	$m3dC›yVe˘‹3
(
M3DVe˘‹3f
 
d°
, c⁄° M3DVe˘‹3‡
§c
Ë{ 
	`mem˝y
(d°, src, (M3DVe˘‹3f)); 
	}
}

120 
ölöe
 
	$m3dC›yVe˘‹3
(
M3DVe˘‹3d
 
d°
, c⁄° M3DVe˘‹3d 
§c
Ë{ 
	`mem˝y
(d°, src, (M3DVe˘‹3d)); 
	}
}

122 
ölöe
 
	$m3dC›yVe˘‹4
(
M3DVe˘‹4f
 
d°
, c⁄° M3DVe˘‹4‡
§c
Ë{ 
	`mem˝y
(d°, src, (M3DVe˘‹4f)); 
	}
}

123 
ölöe
 
	$m3dC›yVe˘‹4
(
M3DVe˘‹4d
 
d°
, c⁄° M3DVe˘‹4d 
§c
Ë{ 
	`mem˝y
(d°, src, (M3DVe˘‹4d)); 
	}
}

128 
ölöe
 
	$m3dAddVe˘‹s2
(
M3DVe˘‹2f
 
r
, c⁄° M3DVe˘‹2‡
a
, c⁄° M3DVe˘‹2‡
b
)

129 { 
r
[0] = 
a
[0] + 
b
[0];Ñ[1] =á[1] + b[1]; 
	}
}

130 
ölöe
 
	$m3dAddVe˘‹s2
(
M3DVe˘‹2d
 
r
, c⁄° M3DVe˘‹2d 
a
, c⁄° M3DVe˘‹2d 
b
)

131 { 
r
[0] = 
a
[0] + 
b
[0];Ñ[1] =á[1] + b[1]; 
	}
}

133 
ölöe
 
	$m3dAddVe˘‹s3
(
M3DVe˘‹3f
 
r
, c⁄° M3DVe˘‹3‡
a
, c⁄° M3DVe˘‹3‡
b
)

134 { 
r
[0] = 
a
[0] + 
b
[0];Ñ[1] =á[1] + b[1];Ñ[2] =á[2] + b[2]; 
	}
}

135 
ölöe
 
	$m3dAddVe˘‹s3
(
M3DVe˘‹3d
 
r
, c⁄° M3DVe˘‹3d 
a
, c⁄° M3DVe˘‹3d 
b
)

136 { 
r
[0] = 
a
[0] + 
b
[0];Ñ[1] =á[1] + b[1];Ñ[2] =á[2] + b[2]; 
	}
}

138 
ölöe
 
	$m3dAddVe˘‹s4
(
M3DVe˘‹4f
 
r
, c⁄° M3DVe˘‹4‡
a
, c⁄° M3DVe˘‹4‡
b
)

139 { 
r
[0] = 
a
[0] + 
b
[0];Ñ[1] =á[1] + b[1];Ñ[2] =á[2] + b[2];Ñ[3] =á[3] + b[3]; 
	}
}

140 
ölöe
 
	$m3dAddVe˘‹s4
(
M3DVe˘‹4d
 
r
, c⁄° M3DVe˘‹4d 
a
, c⁄° M3DVe˘‹4d 
b
)

141 { 
r
[0] = 
a
[0] + 
b
[0];Ñ[1] =á[1] + b[1];Ñ[2] =á[2] + b[2];Ñ[3] =á[3] + b[3]; 
	}
}

145 
ölöe
 
	$m3dSubåa˘Ve˘‹s2
(
M3DVe˘‹2f
 
r
, c⁄° M3DVe˘‹2‡
a
, c⁄° M3DVe˘‹2‡
b
)

146 { 
r
[0] = 
a
[0] - 
b
[0];Ñ[1] =á[1] - b[1]; 
	}
}

147 
ölöe
 
	$m3dSubåa˘Ve˘‹s2
(
M3DVe˘‹2d
 
r
, c⁄° M3DVe˘‹2d 
a
, c⁄° M3DVe˘‹2d 
b
)

148 { 
r
[0] = 
a
[0] - 
b
[0];Ñ[1] =á[1] - b[1]; 
	}
}

150 
ölöe
 
	$m3dSubåa˘Ve˘‹s3
(
M3DVe˘‹3f
 
r
, c⁄° M3DVe˘‹3‡
a
, c⁄° M3DVe˘‹3‡
b
)

151 { 
r
[0] = 
a
[0] - 
b
[0];Ñ[1] =á[1] - b[1];Ñ[2] =á[2] - b[2]; 
	}
}

152 
ölöe
 
	$m3dSubåa˘Ve˘‹s3
(
M3DVe˘‹3d
 
r
, c⁄° M3DVe˘‹3d 
a
, c⁄° M3DVe˘‹3d 
b
)

153 { 
r
[0] = 
a
[0] - 
b
[0];Ñ[1] =á[1] - b[1];Ñ[2] =á[2] - b[2]; 
	}
}

155 
ölöe
 
	$m3dSubåa˘Ve˘‹s4
(
M3DVe˘‹4f
 
r
, c⁄° M3DVe˘‹4‡
a
, c⁄° M3DVe˘‹4‡
b
)

156 { 
r
[0] = 
a
[0] - 
b
[0];Ñ[1] =á[1] - b[1];Ñ[2] =á[2] - b[2];Ñ[3] =á[3] - b[3]; 
	}
}

157 
ölöe
 
	$m3dSubåa˘Ve˘‹s4
(
M3DVe˘‹4d
 
r
, c⁄° M3DVe˘‹4d 
a
, c⁄° M3DVe˘‹4d 
b
)

158 { 
r
[0] = 
a
[0] - 
b
[0];Ñ[1] =á[1] - b[1];Ñ[2] =á[2] - b[2];Ñ[3] =á[3] - b[3]; 
	}
}

164 
ölöe
 
	$m3dSˇÀVe˘‹2
(
M3DVe˘‹2f
 
v
, 
sˇÀ
)

165 { 
v
[0] *
sˇÀ
; v[1] *sˇÀ; 
	}
}

166 
ölöe
 
	$m3dSˇÀVe˘‹2
(
M3DVe˘‹2d
 
v
, 
sˇÀ
)

167 { 
v
[0] *
sˇÀ
; v[1] *sˇÀ; 
	}
}

169 
ölöe
 
	$m3dSˇÀVe˘‹3
(
M3DVe˘‹3f
 
v
, 
sˇÀ
)

170 { 
v
[0] *
sˇÀ
; v[1] *sˇÀ; v[2] *sˇÀ; 
	}
}

171 
ölöe
 
	$m3dSˇÀVe˘‹3
(
M3DVe˘‹3d
 
v
, 
sˇÀ
)

172 { 
v
[0] *
sˇÀ
; v[1] *sˇÀ; v[2] *sˇÀ; 
	}
}

174 
ölöe
 
	$m3dSˇÀVe˘‹4
(
M3DVe˘‹4f
 
v
, 
sˇÀ
)

175 { 
v
[0] *
sˇÀ
; v[1] *sˇÀ; v[2] *sˇÀ; v[3] *sˇÀ; 
	}
}

176 
ölöe
 
	$m3dSˇÀVe˘‹4
(
M3DVe˘‹4d
 
v
, 
sˇÀ
)

177 { 
v
[0] *
sˇÀ
; v[1] *sˇÀ; v[2] *sˇÀ; v[3] *sˇÀ; 
	}
}

186 
ölöe
 
	$m3dCrossProdu˘
(
M3DVe˘‹3f
 
ªsu…
, c⁄° M3DVe˘‹3‡
u
, c⁄° M3DVe˘‹3‡
v
)

188 
ªsu…
[0] = 
u
[1]*
v
[2] - v[1]*u[2];

189 
ªsu…
[1] = -
u
[0]*
v
[2] + v[0]*u[2];

190 
ªsu…
[2] = 
u
[0]*
v
[1] - v[0]*u[1];

191 
	}
}

193 
ölöe
 
	$m3dCrossProdu˘
(
M3DVe˘‹3d
 
ªsu…
, c⁄° M3DVe˘‹3d 
u
, c⁄° M3DVe˘‹3d 
v
)

195 
ªsu…
[0] = 
u
[1]*
v
[2] - v[1]*u[2];

196 
ªsu…
[1] = -
u
[0]*
v
[2] + v[0]*u[2];

197 
ªsu…
[2] = 
u
[0]*
v
[1] - v[0]*u[1];

198 
	}
}

203 
ölöe
 
	$m3dDŸProdu˘
(c⁄° 
M3DVe˘‹3f
 
u
, c⁄° M3DVe˘‹3‡
v
)

204 {  
u
[0]*
v
[0] + u[1]*v[1] + u[2]*v[2]; 
	}
}

206 
ölöe
 
	$m3dDŸProdu˘
(c⁄° 
M3DVe˘‹3d
 
u
, c⁄° M3DVe˘‹3d 
v
)

207 {  
u
[0]*
v
[0] + u[1]*v[1] + u[2]*v[2]; 
	}
}

211 
ölöe
 
	$m3dGëAngÀBëwìnVe˘‹s
(c⁄° 
M3DVe˘‹3f
 
u
, c⁄° M3DVe˘‹3‡
v
)

213 
dTemp
 = 
	`m3dDŸProdu˘
(
u
, 
v
);

214  (
	`acos
((
dTemp
)));

215 
	}
}

217 
ölöe
 
	$m3dGëAngÀBëwìnVe˘‹s
(c⁄° 
M3DVe˘‹3d
 
u
, c⁄° M3DVe˘‹3d 
v
)

219 
dTemp
 = 
	`m3dDŸProdu˘
(
u
, 
v
);

220  
	`acos
(
dTemp
);

221 
	}
}

226 
ölöe
 
	$m3dGëVe˘‹LígthSqu¨ed
(c⁄° 
M3DVe˘‹3f
 
u
)

227 {  (
u
[0] * u[0]Ë+ (u[1] * u[1]Ë+ (u[2] * u[2]); 
	}
}

229 
ölöe
 
	$m3dGëVe˘‹LígthSqu¨ed
(c⁄° 
M3DVe˘‹3d
 
u
)

230 {  (
u
[0] * u[0]Ë+ (u[1] * u[1]Ë+ (u[2] * u[2]); 
	}
}

235 
ölöe
 
	$m3dGëVe˘‹Lígth
(c⁄° 
M3DVe˘‹3f
 
u
)

236 {  (
	`sqπ
((
	`m3dGëVe˘‹LígthSqu¨ed
(
u
)))); 
	}
}

238 
ölöe
 
	$m3dGëVe˘‹Lígth
(c⁄° 
M3DVe˘‹3d
 
u
)

239 {  
	`sqπ
(
	`m3dGëVe˘‹LígthSqu¨ed
(
u
)); 
	}
}

244 
ölöe
 
	$m3dN‹mÆizeVe˘‹
(
M3DVe˘‹3f
 
u
)

245 { 
	`m3dSˇÀVe˘‹3
(
u
, 1.0‡/ 
	`m3dGëVe˘‹Lígth
(u)); 
	}
}

247 
ölöe
 
	$m3dN‹mÆizeVe˘‹
(
M3DVe˘‹3d
 
u
)

248 { 
	`m3dSˇÀVe˘‹3
(
u
, 1.0 / 
	`m3dGëVe˘‹Lígth
(u)); 
	}
}

255 
m3dGëDi°™˚Squ¨ed
(c⁄° 
M3DVe˘‹3f
 
u
, c⁄° M3DVe˘‹3‡
v
);

256 
m3dGëDi°™˚Squ¨ed
(c⁄° 
M3DVe˘‹3d
 
u
, c⁄° M3DVe˘‹3d 
v
);

258 
ölöe
 
	$m3dGëDi°™˚
(c⁄° 
M3DVe˘‹3d
 
u
, c⁄° M3DVe˘‹3d 
v
)

259 {  
	`sqπ
(
	`m3dGëDi°™˚Squ¨ed
(
u
, 
v
)); 
	}
}

261 
ölöe
 
	$m3dGëDi°™˚
(c⁄° 
M3DVe˘‹3f
 
u
, c⁄° M3DVe˘‹3‡
v
)

262 {  (
	`sqπ
(
	`m3dGëDi°™˚Squ¨ed
(
u
, 
v
))); 
	}
}

264 
ölöe
 
	$m3dGëMagnôudeSqu¨ed
(c⁄° 
M3DVe˘‹3f
 
u
Ë{  u[0]*u[0] + u[1]*u[1] + u[2]*u[2]; 
	}
}

265 
ölöe
 
	$m3dGëMagnôudeSqu¨ed
(c⁄° 
M3DVe˘‹3d
 
u
Ë{  u[0]*u[0] + u[1]*u[1] + u[2]*u[2]; 
	}
}

267 
ölöe
 
	$m3dGëMagnôude
(c⁄° 
M3DVe˘‹3f
 
u
Ë{  (
	`sqπ
(
	`m3dGëMagnôudeSqu¨ed
(u))); 
	}
}

268 
ölöe
 
	$m3dGëMagnôude
(c⁄° 
M3DVe˘‹3d
 
u
Ë{  
	`sqπ
(
	`m3dGëMagnôudeSqu¨ed
(u)); 
	}
}

284 
ölöe
 
	$m3dC›yM©rix33
(
M3DM©rix33f
 
d°
, c⁄° M3DM©rix33‡
§c
)

285 { 
	`mem˝y
(
d°
, 
§c
, (
M3DM©rix33f
)); 
	}
}

287 
ölöe
 
	$m3dC›yM©rix33
(
M3DM©rix33d
 
d°
, c⁄° M3DM©rix33d 
§c
)

288 { 
	`mem˝y
(
d°
, 
§c
, (
M3DM©rix33d
)); 
	}
}

290 
ölöe
 
	$m3dC›yM©rix44
(
M3DM©rix44f
 
d°
, c⁄° M3DM©rix44‡
§c
)

291 { 
	`mem˝y
(
d°
, 
§c
, (
M3DM©rix44f
)); 
	}
}

293 
ölöe
 
	$m3dC›yM©rix44
(
M3DM©rix44d
 
d°
, c⁄° M3DM©rix44d 
§c
)

294 { 
	`mem˝y
(
d°
, 
§c
, (
M3DM©rix44d
)); 
	}
}

298 
m3dLﬂdIdítôy33
(
M3DM©rix33f
 
m
);

299 
m3dLﬂdIdítôy33
(
M3DM©rix33d
 
m
);

300 
m3dLﬂdIdítôy44
(
M3DM©rix44f
 
m
);

301 
m3dLﬂdIdítôy44
(
M3DM©rix44d
 
m
);

305 
ölöe
 
	$m3dGëM©rixCﬁumn33
(
M3DVe˘‹3f
 
d°
, c⁄° 
M3DM©rix33f
 
§c
, 
cﬁumn
)

306 { 
	`mem˝y
(
d°
, 
§c
 + (3 * 
cﬁumn
), (Ë* 3); 
	}
}

308 
ölöe
 
	$m3dGëM©rixCﬁumn33
(
M3DVe˘‹3d
 
d°
, c⁄° 
M3DM©rix33d
 
§c
, 
cﬁumn
)

309 { 
	`mem˝y
(
d°
, 
§c
 + (3 * 
cﬁumn
), (Ë* 3); 
	}
}

311 
ölöe
 
	$m3dSëM©rixCﬁumn33
(
M3DM©rix33f
 
d°
, c⁄° 
M3DVe˘‹3f
 
§c
, 
cﬁumn
)

312 { 
	`mem˝y
(
d°
 + (3 * 
cﬁumn
), 
§c
, (Ë* 3); 
	}
}

314 
ölöe
 
	$m3dSëM©rixCﬁumn33
(
M3DM©rix33d
 
d°
, c⁄° 
M3DVe˘‹3d
 
§c
, 
cﬁumn
)

315 { 
	`mem˝y
(
d°
 + (3 * 
cﬁumn
), 
§c
, (Ë* 3); 
	}
}

317 
ölöe
 
	$m3dGëM©rixCﬁumn44
(
M3DVe˘‹4f
 
d°
, c⁄° 
M3DM©rix44f
 
§c
, 
cﬁumn
)

318 { 
	`mem˝y
(
d°
, 
§c
 + (4 * 
cﬁumn
), (Ë* 4); 
	}
}

320 
ölöe
 
	$m3dGëM©rixCﬁumn44
(
M3DVe˘‹4d
 
d°
, c⁄° 
M3DM©rix44d
 
§c
, 
cﬁumn
)

321 { 
	`mem˝y
(
d°
, 
§c
 + (4 * 
cﬁumn
), (Ë* 4); 
	}
}

323 
ölöe
 
	$m3dSëM©rixCﬁumn44
(
M3DM©rix44f
 
d°
, c⁄° 
M3DVe˘‹4f
 
§c
, 
cﬁumn
)

324 { 
	`mem˝y
(
d°
 + (4 * 
cﬁumn
), 
§c
, (Ë* 4); 
	}
}

326 
ölöe
 
	$m3dSëM©rixCﬁumn44
(
M3DM©rix44d
 
d°
, c⁄° 
M3DVe˘‹4d
 
§c
, 
cﬁumn
)

327 { 
	`mem˝y
(
d°
 + (4 * 
cﬁumn
), 
§c
, (Ë* 4); 
	}
}

338 
ölöe
 
	$m3dSëM©rixRowCﬁ33
(
M3DM©rix33f
 
m
, 
row
, 
cﬁ
, 
vÆue
)

339 { 
m
[(
cﬁ
 * 3Ë+ 
row
] = 
vÆue
; 
	}
}

341 
ölöe
 
	$m3dGëM©rixRowCﬁ33
(c⁄° 
M3DM©rix33f
 
m
, 
row
, 
cﬁ
)

342 {  
m
[(
cﬁ
 * 3Ë+ 
row
]; 
	}
}

344 
ölöe
 
	$m3dSëM©rixRowCﬁ33
(
M3DM©rix33d
 
m
, 
row
, 
cﬁ
, 
vÆue
)

345 { 
m
[(
cﬁ
 * 3Ë+ 
row
] = 
vÆue
; 
	}
}

347 
ölöe
 
	$m3dGëM©rixRowCﬁ33
(c⁄° 
M3DM©rix33d
 
m
, 
row
, 
cﬁ
)

348 {  
m
[(
cﬁ
 * 3Ë+ 
row
]; 
	}
}

350 
ölöe
 
	$m3dSëM©rixRowCﬁ44
(
M3DM©rix44f
 
m
, 
row
, 
cﬁ
, 
vÆue
)

351 { 
m
[(
cﬁ
 * 4Ë+ 
row
] = 
vÆue
; 
	}
}

353 
ölöe
 
	$m3dGëM©rixRowCﬁ44
(c⁄° 
M3DM©rix44f
 
m
, 
row
, 
cﬁ
)

354 {  
m
[(
cﬁ
 * 4Ë+ 
row
]; 
	}
}

356 
ölöe
 
	$m3dSëM©rixRowCﬁ44
(
M3DM©rix44d
 
m
, 
row
, 
cﬁ
, 
vÆue
)

357 { 
m
[(
cﬁ
 * 4Ë+ 
row
] = 
vÆue
; 
	}
}

359 
ölöe
 
	$m3dGëM©rixRowCﬁ44
(c⁄° 
M3DM©rix44d
 
m
, 
row
, 
cﬁ
)

360 {  
m
[(
cﬁ
 * 4Ë+ 
row
]; 
	}
}

366 
ölöe
 
	$m3dExåa˘RŸ©i⁄
(
M3DM©rix33f
 
d°
, c⁄° 
M3DM©rix44f
 
§c
)

368 
	`mem˝y
(
d°
, 
§c
, () * 3);

369 
	`mem˝y
(
d°
 + 3, 
§c
 + 4, () * 3);

370 
	`mem˝y
(
d°
 + 6, 
§c
 + 8, () * 3);

371 
	}
}

374 
ölöe
 
	$m3dExåa˘RŸ©i⁄
(
M3DM©rix33d
 
d°
, c⁄° 
M3DM©rix44d
 
§c
)

376 
	`mem˝y
(
d°
, 
§c
, () * 3);

377 
	`mem˝y
(
d°
 + 3, 
§c
 + 4, () * 3);

378 
	`mem˝y
(
d°
 + 6, 
§c
 + 8, () * 3);

379 
	}
}

382 
ölöe
 
	$m3dInje˘RŸ©i⁄
(
M3DM©rix44f
 
d°
, c⁄° 
M3DM©rix33f
 
§c
)

384 
	`mem˝y
(
d°
, 
§c
, () * 4);

385 
	`mem˝y
(
d°
 + 4, 
§c
 + 4, () * 4);

386 
	`mem˝y
(
d°
 + 8, 
§c
 + 8, () * 4);

387 
	}
}

390 
ölöe
 
	$m3dInje˘RŸ©i⁄
(
M3DM©rix44d
 
d°
, c⁄° 
M3DM©rix33d
 
§c
)

392 
	`mem˝y
(
d°
, 
§c
, () * 4);

393 
	`mem˝y
(
d°
 + 4, 
§c
 + 4, () * 4);

394 
	`mem˝y
(
d°
 + 8, 
§c
 + 8, () * 4);

395 
	}
}

401 
m3dM©rixMu…ùly44
(
M3DM©rix44f
 
¥odu˘
, c⁄° M3DM©rix44‡
a
, c⁄° M3DM©rix44‡
b
);

402 
m3dM©rixMu…ùly44
(
M3DM©rix44d
 
¥odu˘
, c⁄° M3DM©rix44d 
a
, c⁄° M3DM©rix44d 
b
);

403 
m3dM©rixMu…ùly33
(
M3DM©rix33f
 
¥odu˘
, c⁄° M3DM©rix33‡
a
, c⁄° M3DM©rix33‡
b
);

404 
m3dM©rixMu…ùly33
(
M3DM©rix33d
 
¥odu˘
, c⁄° M3DM©rix33d 
a
, c⁄° M3DM©rix33d 
b
);

412 
__ölöe
 
	$m3dTønsf‹mVe˘‹3
(
M3DVe˘‹3f
 
vOut
, c⁄° M3DVe˘‹3‡
v
, c⁄° 
M3DM©rix44f
 
m
)

414 
vOut
[0] = 
m
[0] * 
v
[0] + m[4] * v[1] + m[8] * v[2] + m[12];

415 
vOut
[1] = 
m
[1] * 
v
[0] + m[5] * v[1] + m[9] * v[2] + m[13];

416 
vOut
[2] = 
m
[2] * 
v
[0] + m[6] * v[1] + m[10] * v[2] + m[14];

418 
	}
}

421 
__ölöe
 
	$m3dTønsf‹mVe˘‹3
(
M3DVe˘‹3d
 
vOut
, c⁄° M3DVe˘‹3d 
v
, c⁄° 
M3DM©rix44d
 
m
)

423 
vOut
[0] = 
m
[0] * 
v
[0] + m[4] * v[1] + m[8] * v[2] + m[12];

424 
vOut
[1] = 
m
[1] * 
v
[0] + m[5] * v[1] + m[9] * v[2] + m[13];

425 
vOut
[2] = 
m
[2] * 
v
[0] + m[6] * v[1] + m[10] * v[2] + m[14];

427 
	}
}

429 
__ölöe
 
	$m3dTønsf‹mVe˘‹4
(
M3DVe˘‹4f
 
vOut
, c⁄° M3DVe˘‹4‡
v
, c⁄° 
M3DM©rix44f
 
m
)

431 
vOut
[0] = 
m
[0] * 
v
[0] + m[4] * v[1] + m[8] * v[2] + m[12] * v[3];

432 
vOut
[1] = 
m
[1] * 
v
[0] + m[5] * v[1] + m[9] * v[2] + m[13] * v[3];

433 
vOut
[2] = 
m
[2] * 
v
[0] + m[6] * v[1] + m[10] * v[2] + m[14] * v[3];

434 
vOut
[3] = 
m
[3] * 
v
[0] + m[7] * v[1] + m[11] * v[2] + m[15] * v[3];

435 
	}
}

438 
__ölöe
 
	$m3dTønsf‹mVe˘‹4
(
M3DVe˘‹4d
 
vOut
, c⁄° M3DVe˘‹4d 
v
, c⁄° 
M3DM©rix44d
 
m
)

440 
vOut
[0] = 
m
[0] * 
v
[0] + m[4] * v[1] + m[8] * v[2] + m[12] * v[3];

441 
vOut
[1] = 
m
[1] * 
v
[0] + m[5] * v[1] + m[9] * v[2] + m[13] * v[3];

442 
vOut
[2] = 
m
[2] * 
v
[0] + m[6] * v[1] + m[10] * v[2] + m[14] * v[3];

443 
vOut
[3] = 
m
[3] * 
v
[0] + m[7] * v[1] + m[11] * v[2] + m[15] * v[3];

444 
	}
}

450 
__ölöe
 
	$m3dRŸ©eVe˘‹
(
M3DVe˘‹3f
 
vOut
, c⁄° M3DVe˘‹3‡
p
, c⁄° 
M3DM©rix33f
 
m
)

452 
vOut
[0] = 
m
[0] * 
p
[0] + m[3] *Ö[1] + m[6] *Ö[2];

453 
vOut
[1] = 
m
[1] * 
p
[0] + m[4] *Ö[1] + m[7] *Ö[2];

454 
vOut
[2] = 
m
[2] * 
p
[0] + m[5] *Ö[1] + m[8] *Ö[2];

455 
	}
}

458 
__ölöe
 
	$m3dRŸ©eVe˘‹
(
M3DVe˘‹3d
 
vOut
, c⁄° M3DVe˘‹3d 
p
, c⁄° 
M3DM©rix33d
 
m
)

460 
vOut
[0] = 
m
[0] * 
p
[0] + m[3] *Ö[1] + m[6] *Ö[2];

461 
vOut
[1] = 
m
[1] * 
p
[0] + m[4] *Ö[1] + m[7] *Ö[2];

462 
vOut
[2] = 
m
[2] * 
p
[0] + m[5] *Ö[1] + m[8] *Ö[2];

463 
	}
}

470 
ölöe
 
	$m3dSˇÀM©rix33
(
M3DM©rix33f
 
m
, 
sˇÀ
)

471 { 
i
 = 8; i >=0; i--Ë
m
[i] *
sˇÀ
; 
	}
}

473 
ölöe
 
	$m3dSˇÀM©rix33
(
M3DM©rix33d
 
m
, 
sˇÀ
)

474 { 
i
 = 8; i >=0; i--Ë
m
[i] *
sˇÀ
; 
	}
}

476 
ölöe
 
	$m3dSˇÀM©rix44
(
M3DM©rix44f
 
m
, 
sˇÀ
)

477 { 
i
 = 15; i >=0; i--Ë
m
[i] *
sˇÀ
; 
	}
}

479 
ölöe
 
	$m3dSˇÀM©rix44
(
M3DM©rix44d
 
m
, 
sˇÀ
)

480 { 
i
 = 15; i >=0; i--Ë
m
[i] *
sˇÀ
; 
	}
}

485 
m3dRŸ©i⁄M©rix33
(
M3DM©rix33f
 
m
, 
™gÀ
, 
x
, 
y
, 
z
);

486 
m3dRŸ©i⁄M©rix33
(
M3DM©rix33d
 
m
, 
™gÀ
, 
x
, 
y
, 
z
);

487 
m3dRŸ©i⁄M©rix44
(
M3DM©rix44f
 
m
, 
™gÀ
, 
x
, 
y
, 
z
);

488 
m3dRŸ©i⁄M©rix44
(
M3DM©rix44d
 
m
, 
™gÀ
, 
x
, 
y
, 
z
);

491 
ölöe
 
	$m3dTøn¶©i⁄M©rix44
(
M3DM©rix44f
 
m
, 
x
, 
y
, 
z
)

492 { 
	`m3dLﬂdIdítôy44
(
m
); m[12] = 
x
; m[13] = 
y
; m[14] = 
z
; 
	}
}

494 
ölöe
 
	$m3dTøn¶©i⁄M©rix44
(
M3DM©rix44d
 
m
, 
x
, 
y
, 
z
)

495 { 
	`m3dLﬂdIdítôy44
(
m
); m[12] = 
x
; m[13] = 
y
; m[14] = 
z
; 
	}
}

499 
ölöe
 
	$m3dTøn¶©eM©rix44
(
M3DM©rix44f
 
m
, 
x
, 
y
, 
z
)

500 { 
m
[12] +
x
; m[13] +
y
; m[14] +
z
; 
	}
}

502 
ölöe
 
	$m3dTøn¶©eM©rix44
(
M3DM©rix44d
 
m
, 
x
, 
y
, 
z
)

503 { 
m
[12] +
x
; m[13] +
y
; m[14] +
z
; 
	}
}

507 
ölöe
 
	$m3dSˇÀM©rix44
(
M3DM©rix44f
 
m
, 
x
, 
y
, 
z
)

508 { 
m
[0] *
x
; m[5] *
y
; m[10] *
z
; 
	}
}

510 
ölöe
 
	$m3dSˇÀM©rix44
(
M3DM©rix44d
 
m
, 
x
, 
y
, 
z
)

511 { 
m
[0] *
x
; m[5] *
y
; m[10] *
z
; 
	}
}

515 
	#TRANSPOSE44
(
d°
, 
§c
Ë\

	)

517 
	gj
 = 0; j < 4; j++) \

519 
	gi
 = 0; i < 4; i++) \

521 
	gd°
[(
j
*4)+
i
] = 
§c
[(i*4)+j]; \

525 
ölöe
 
	$m3dTøn•o£M©rix44
(
M3DM©rix44f
 
d°
, c⁄° M3DM©rix44‡
§c
)

526 { 
	`TRANSPOSE44
(
d°
, 
§c
); 
	}
}

527 
ölöe
 
	$m3dTøn•o£M©rix44
(
M3DM©rix44d
 
d°
, c⁄° M3DM©rix44d 
§c
)

528 { 
	`TRANSPOSE44
(
d°
, 
§c
); 
	}
}

529 
boﬁ
 
m3dInvîtM©rix44
(
M3DM©rix44f
 
d°
, c⁄° M3DM©rix44‡
§c
);

530 
boﬁ
 
m3dInvîtM©rix44
(
M3DM©rix44d
 
d°
, c⁄° M3DM©rix44d 
§c
);

539 
m3dFödN‹mÆ
(
M3DVe˘‹3f
 
ªsu…
, c⁄° M3DVe˘‹3‡
poöt1
, c⁄° M3DVe˘‹3‡
poöt2
,

540 c⁄° 
M3DVe˘‹3f
 
poöt3
);

541 
m3dFödN‹mÆ
(
M3DVe˘‹3d
 
ªsu…
, c⁄° M3DVe˘‹3d 
poöt1
, c⁄° M3DVe˘‹3d 
poöt2
,

542 c⁄° 
M3DVe˘‹3d
 
poöt3
);

547 
ölöe
 
	$m3dGëDi°™˚ToPœ√
(c⁄° 
M3DVe˘‹3f
 
poöt
, c⁄° 
M3DVe˘‹4f
 
∂™e
)

548 {  
poöt
[0]*
∂™e
[0] +Öoöt[1]*∂™e[1] +Öoöt[2]*∂™e[2] +Öœ√[3]; 
	}
}

550 
ölöe
 
	$m3dGëDi°™˚ToPœ√
(c⁄° 
M3DVe˘‹3d
 
poöt
, c⁄° 
M3DVe˘‹4d
 
∂™e
)

551 {  
poöt
[0]*
∂™e
[0] +Öoöt[1]*∂™e[1] +Öoöt[2]*∂™e[2] +Öœ√[3]; 
	}
}

555 
m3dGëPœ√Equ©i⁄
(
M3DVe˘‹4f
 
∂™eEq
, c⁄° 
M3DVe˘‹3f
 
p1
, c⁄° M3DVe˘‹3‡
p2
, c⁄° M3DVe˘‹3‡
p3
);

556 
m3dGëPœ√Equ©i⁄
(
M3DVe˘‹4d
 
∂™eEq
, c⁄° 
M3DVe˘‹3d
 
p1
, c⁄° M3DVe˘‹3d 
p2
, c⁄° M3DVe˘‹3d 
p3
);

559 
m3dRaySphîeTe°
(c⁄° 
M3DVe˘‹3d
 
poöt
, c⁄° M3DVe˘‹3d 
øy
, c⁄° M3DVe˘‹3d 
•hîeCíãr
, 
•hîeRadius
);

560 
m3dRaySphîeTe°
(c⁄° 
M3DVe˘‹3f
 
poöt
, c⁄° M3DVe˘‹3‡
øy
, c⁄° M3DVe˘‹3‡
•hîeCíãr
, 
•hîeRadius
);

566 
m3dProje˘XY
–
M3DVe˘‹2f
 
vPoötOut
, c⁄° 
M3DM©rix44f
 
mModñVõw
, c⁄° M3DM©rix44‡
mProje˘i⁄
, c⁄° 
iVõwP‹t
[4], c⁄° 
M3DVe˘‹3f
 
vPoötIn
);

567 
m3dProje˘XYZ
(
M3DVe˘‹3f
 
vPoötOut
, c⁄° 
M3DM©rix44f
 
mModñVõw
, c⁄° M3DM©rix44‡
mProje˘i⁄
, c⁄° 
iVõwP‹t
[4], c⁄° M3DVe˘‹3‡
vPoötIn
);

573 
m3dC©muŒRom
(
M3DVe˘‹3f
 
vOut
, M3DVe˘‹3‡
vP0
, M3DVe˘‹3‡
vP1
, M3DVe˘‹3‡
vP2
, M3DVe˘‹3‡
vP3
, 
t
);

574 
m3dC©muŒRom
(
M3DVe˘‹3d
 
vOut
, M3DVe˘‹3d 
vP0
, M3DVe˘‹3d 
vP1
, M3DVe˘‹3d 
vP2
, M3DVe˘‹3d 
vP3
, 
t
);

578 
ölöe
 
boﬁ
 
	$m3dClo£Enough
(
fC™did©e
, 
fCom∑ª
, 
fEpsû⁄
)

580  (
	`Ábs
(
fC™did©e
 - 
fCom∑ª
Ë< 
fEpsû⁄
);

581 
	}
}

583 
ölöe
 
boﬁ
 
	$m3dClo£Enough
(
dC™did©e
, 
dCom∑ª
, 
dEpsû⁄
)

585  (
	`Ábs
(
dC™did©e
 - 
dCom∑ª
Ë< 
dEpsû⁄
);

586 
	}
}

591 
m3dCÆcuœãT™gítBasis
(c⁄° 
M3DVe˘‹3f
 
pvTrüngÀ
[3], c⁄° 
M3DVe˘‹2f
 
pvTexCo‹ds
[3], c⁄° M3DVe˘‹3‡
N
, M3DVe˘‹3‡
vT™gít
);

595 
m3dSmoŸhSãp
(
edge1
, 
edge2
, 
x
);

596 
m3dSmoŸhSãp
(
edge1
, 
edge2
, 
x
);

600 
m3dMakePœ«rShadowM©rix
(
M3DM©rix44d
 
¥oj
, c⁄° 
M3DVe˘‹4d
 
∂™eEq
, c⁄° 
M3DVe˘‹3d
 
vLightPos
);

601 
m3dMakePœ«rShadowM©rix
(
M3DM©rix44f
 
¥oj
, c⁄° 
M3DVe˘‹4f
 
∂™eEq
, c⁄° 
M3DVe˘‹3f
 
vLightPos
);

603 
m3dClo£°PoötOnRay
(
M3DVe˘‹3d
 
vPoötOnRay
, c⁄° M3DVe˘‹3d 
vRayOrigö
, c⁄° M3DVe˘‹3d 
vUnôRayDú
,

604 c⁄° 
M3DVe˘‹3d
 
vPoötInS∑˚
);

606 
m3dClo£°PoötOnRay
(
M3DVe˘‹3f
 
vPoötOnRay
, c⁄° M3DVe˘‹3‡
vRayOrigö
, c⁄° M3DVe˘‹3‡
vUnôRayDú
,

607 c⁄° 
M3DVe˘‹3f
 
vPoötInS∑˚
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/Iex.h

37 #i‚de‡
INCLUDED_IEX_H


38 
	#INCLUDED_IEX_H


	)

48 
	~"IexMa¸os.h
"

49 
	~"IexBa£Exc.h
"

50 
	~"IexM©hExc.h
"

51 
	~"IexThrowEºnoExc.h
"

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexBaseExc.h

37 #i‚de‡
INCLUDED_IEXBASEEXC_H


38 
	#INCLUDED_IEXBASEEXC_H


	)

48 
	~<°rög
>

49 
	~<ex˚±i⁄
>

50 
	~<s°ªam
>

52 
«me•a˚
 
	gIex
 {

54 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


56 #¥agm®
w¨nög
(
dißbÀ
:4290)

63 
˛ass
 
	gBa£Exc
: 
public
 
°d
::
°rög
,Öubli¯
	g°d
::
ex˚±i⁄


65 
public
:

71 
Ba£Exc
 (c⁄° *
s
 = 0Ë
throw
();

72 
Ba£Exc
 (c⁄° 
°d
::
°rög
 &
s
Ë
throw
();

73 
Ba£Exc
 (
°d
::
°rög°ªam
 &
s
Ë
throw
();

75 
Ba£Exc
 (c⁄° Ba£Ex¯&
be
Ë
throw
();

76 
	gvútuÆ
 ~
Ba£Exc
 (Ë
throw
 ();

82 
vútuÆ
 c⁄° * 
wh©
 (Ëc⁄° 
throw
 ();

89 
	gBa£Exc
 & 
assign
 (
°d
::
°rög°ªam
 &
s
);

90 
	gBa£Exc
 & 
	g›î©‹
 = (
°d
::
°rög°ªam
 &
s
);

92 
	gBa£Exc
 & 
≠≥nd
 (
°d
::
°rög°ªam
 &
s
);

93 
	gBa£Exc
 & 
	g›î©‹
 +(
°d
::
°rög°ªam
 &
s
);

101 
	gBa£Exc
 & 
assign
 (c⁄° *
s
);

102 
	gBa£Exc
 & 
	g›î©‹
 = (c⁄° *
s
);

104 
	gBa£Exc
 & 
≠≥nd
 (c⁄° *
s
);

105 
	gBa£Exc
 & 
	g›î©‹
 +(c⁄° *
s
);

115 c⁄° 
	g°d
::
°rög
 & 
°ackTø˚
 () const;

117 
	g¥iv©e
:

119 
°d
::
°rög
 
_°ackTø˚
;

128 
	#DEFINE_EXC
(
«me
, 
ba£
Ë\

	)

129 
˛ass
 
	g«me
: 
public
 
ba£
 \

131 
public
: \

132 
«me
 (c⁄° * 
ãxt
=0Ë
throw
(): 
ba£
 (text) {} \

133 
«me
 (c⁄° 
°d
::
°rög
 &
ãxt
Ë
throw
(): 
ba£
 (text) {} \

134 
«me
 (
°d
::
°rög°ªam
 &
ãxt
Ë
throw
(): 
ba£
 (text) {} \

142 
DEFINE_EXC
 (
ArgExc
, 
Ba£Exc
)

144 
DEFINE_EXC
 (
LogicExc
, 
Ba£Exc
)

149 
DEFINE_EXC
 (
I≈utExc
, 
Ba£Exc
)

151 
DEFINE_EXC
 (
IoExc
, 
Ba£Exc
)

153 
DEFINE_EXC
 (
M©hExc
, 
Ba£Exc
)

157 
DEFINE_EXC
 (
EºnoExc
, 
Ba£Exc
)

162 
DEFINE_EXC
 (
NoIm∂Exc
, 
Ba£Exc
)

168 
DEFINE_EXC
 (
NuŒExc
, 
Ba£Exc
)

170 
DEFINE_EXC
 (
Ty≥Exc
, 
Ba£Exc
)

200 
	g°d
::
	t°rög
 (* 
	tSèckTø˚r
) ();

202 
£tSèckTø˚r
 (
SèckTø˚r
 
°ackTø˚r
);

203 
SèckTø˚r
 
°ackTø˚r
 ();

210 
ölöe
 
	gBa£Exc
 &

211 
	gBa£Exc
::
›î©‹
 = (
°d
::
°rög°ªam
 &
s
)

213  
assign
 (
s
);

217 
ölöe
 
	gBa£Exc
 &

218 
	gBa£Exc
::
›î©‹
 +(
°d
::
°rög°ªam
 &
s
)

220  
≠≥nd
 (
s
);

224 
ölöe
 
	gBa£Exc
 &

225 
	gBa£Exc
::
assign
 (c⁄° *
s
)

227 
°d
::
°rög
::
assign
(
s
);

228  *
	gthis
;

232 
ölöe
 
	gBa£Exc
 &

233 
	gBa£Exc
::
›î©‹
 = (c⁄° *
s
)

235  
assign
(
s
);

239 
ölöe
 
	gBa£Exc
 &

240 
	gBa£Exc
::
≠≥nd
 (c⁄° *
s
)

242 
°d
::
°rög
::
≠≥nd
(
s
);

243  *
	gthis
;

247 
ölöe
 
	gBa£Exc
 &

248 
	gBa£Exc
::
›î©‹
 +(c⁄° *
s
)

250  
≠≥nd
(
s
);

254 
ölöe
 c⁄° 
	g°d
::
°rög
 &

255 
Ba£Exc
::
°ackTø˚
 () const

257  
_°ackTø˚
;

260 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


261 #¥agm®
w¨nög
(:4290)

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexErrnoExc.h

37 #i‚de‡
INCLUDED_IEXERRNOEXC_H


38 
	#INCLUDED_IEXERRNOEXC_H


	)

46 
	~"IexBa£Exc.h
"

48 
«me•a˚
 
	gIex
 {

51 
DEFINE_EXC
 (
E≥rmExc
, 
EºnoExc
)

52 
DEFINE_EXC
 (
En€¡Exc
, 
EºnoExc
)

53 
DEFINE_EXC
 (
E§chExc
, 
EºnoExc
)

54 
DEFINE_EXC
 (
EöåExc
, 
EºnoExc
)

55 
DEFINE_EXC
 (
EioExc
, 
EºnoExc
)

56 
DEFINE_EXC
 (
EnxioExc
, 
EºnoExc
)

57 
DEFINE_EXC
 (
E2bigExc
, 
EºnoExc
)

58 
DEFINE_EXC
 (
En€xecExc
, 
EºnoExc
)

59 
DEFINE_EXC
 (
EbadfExc
, 
EºnoExc
)

60 
DEFINE_EXC
 (
EchûdExc
, 
EºnoExc
)

61 
DEFINE_EXC
 (
EagaöExc
, 
EºnoExc
)

62 
DEFINE_EXC
 (
EnomemExc
, 
EºnoExc
)

63 
DEFINE_EXC
 (
Eac˚sExc
, 
EºnoExc
)

64 
DEFINE_EXC
 (
EÁu…Exc
, 
EºnoExc
)

65 
DEFINE_EXC
 (
EnŸblkExc
, 
EºnoExc
)

66 
DEFINE_EXC
 (
EbusyExc
, 
EºnoExc
)

67 
DEFINE_EXC
 (
Eexi°Exc
, 
EºnoExc
)

68 
DEFINE_EXC
 (
ExdevExc
, 
EºnoExc
)

69 
DEFINE_EXC
 (
EnodevExc
, 
EºnoExc
)

70 
DEFINE_EXC
 (
EnŸdúExc
, 
EºnoExc
)

71 
DEFINE_EXC
 (
EisdúExc
, 
EºnoExc
)

72 
DEFINE_EXC
 (
EövÆExc
, 
EºnoExc
)

73 
DEFINE_EXC
 (
EnfûeExc
, 
EºnoExc
)

74 
DEFINE_EXC
 (
EmfûeExc
, 
EºnoExc
)

75 
DEFINE_EXC
 (
EnŸtyExc
, 
EºnoExc
)

76 
DEFINE_EXC
 (
EtxtbsyExc
, 
EºnoExc
)

77 
DEFINE_EXC
 (
EfbigExc
, 
EºnoExc
)

78 
DEFINE_EXC
 (
Eno•cExc
, 
EºnoExc
)

79 
DEFINE_EXC
 (
E•ùeExc
, 
EºnoExc
)

80 
DEFINE_EXC
 (
ErofsExc
, 
EºnoExc
)

81 
DEFINE_EXC
 (
EmlökExc
, 
EºnoExc
)

82 
DEFINE_EXC
 (
EpùeExc
, 
EºnoExc
)

83 
DEFINE_EXC
 (
EdomExc
, 
EºnoExc
)

84 
DEFINE_EXC
 (
EøngeExc
, 
EºnoExc
)

85 
DEFINE_EXC
 (
EnomsgExc
, 
EºnoExc
)

86 
DEFINE_EXC
 (
EidrmExc
, 
EºnoExc
)

87 
DEFINE_EXC
 (
Ech∫gExc
, 
EºnoExc
)

88 
DEFINE_EXC
 (
El2nsyncExc
, 
EºnoExc
)

89 
DEFINE_EXC
 (
El3h…Exc
, 
EºnoExc
)

90 
DEFINE_EXC
 (
El3r°Exc
, 
EºnoExc
)

91 
DEFINE_EXC
 (
E ∫gExc
, 
EºnoExc
)

92 
DEFINE_EXC
 (
Eu«tchExc
, 
EºnoExc
)

93 
DEFINE_EXC
 (
EnocsiExc
, 
EºnoExc
)

94 
DEFINE_EXC
 (
El2h…Exc
, 
EºnoExc
)

95 
DEFINE_EXC
 (
EdódlkExc
, 
EºnoExc
)

96 
DEFINE_EXC
 (
EnﬁckExc
, 
EºnoExc
)

97 
DEFINE_EXC
 (
EbadeExc
, 
EºnoExc
)

98 
DEFINE_EXC
 (
EbadrExc
, 
EºnoExc
)

99 
DEFINE_EXC
 (
ExfuŒExc
, 
EºnoExc
)

100 
DEFINE_EXC
 (
EnﬂnoExc
, 
EºnoExc
)

101 
DEFINE_EXC
 (
EbadrqcExc
, 
EºnoExc
)

102 
DEFINE_EXC
 (
Ebad¶tExc
, 
EºnoExc
)

103 
DEFINE_EXC
 (
EdódlockExc
, 
EºnoExc
)

104 
DEFINE_EXC
 (
Ebf⁄tExc
, 
EºnoExc
)

105 
DEFINE_EXC
 (
Eno°rExc
, 
EºnoExc
)

106 
DEFINE_EXC
 (
Enod©aExc
, 
EºnoExc
)

107 
DEFINE_EXC
 (
EtimeExc
, 
EºnoExc
)

108 
DEFINE_EXC
 (
Eno§Exc
, 
EºnoExc
)

109 
DEFINE_EXC
 (
En⁄ëExc
, 
EºnoExc
)

110 
DEFINE_EXC
 (
En›kgExc
, 
EºnoExc
)

111 
DEFINE_EXC
 (
EªmŸeExc
, 
EºnoExc
)

112 
DEFINE_EXC
 (
EnﬁökExc
, 
EºnoExc
)

113 
DEFINE_EXC
 (
EadvExc
, 
EºnoExc
)

114 
DEFINE_EXC
 (
E§m¡Exc
, 
EºnoExc
)

115 
DEFINE_EXC
 (
EcommExc
, 
EºnoExc
)

116 
DEFINE_EXC
 (
E¥ŸoExc
, 
EºnoExc
)

117 
DEFINE_EXC
 (
Emu…ih›Exc
, 
EºnoExc
)

118 
DEFINE_EXC
 (
EbadmsgExc
, 
EºnoExc
)

119 
DEFINE_EXC
 (
E«mëoﬁ⁄gExc
, 
EºnoExc
)

120 
DEFINE_EXC
 (
EovîÊowExc
, 
EºnoExc
)

121 
DEFINE_EXC
 (
EnŸuniqExc
, 
EºnoExc
)

122 
DEFINE_EXC
 (
EbadfdExc
, 
EºnoExc
)

123 
DEFINE_EXC
 (
EªmchgExc
, 
EºnoExc
)

124 
DEFINE_EXC
 (
ElibaccExc
, 
EºnoExc
)

125 
DEFINE_EXC
 (
ElibbadExc
, 
EºnoExc
)

126 
DEFINE_EXC
 (
Elibs˙Exc
, 
EºnoExc
)

127 
DEFINE_EXC
 (
ElibmaxExc
, 
EºnoExc
)

128 
DEFINE_EXC
 (
ElibexecExc
, 
EºnoExc
)

129 
DEFINE_EXC
 (
Eû£qExc
, 
EºnoExc
)

130 
DEFINE_EXC
 (
EnosysExc
, 
EºnoExc
)

131 
DEFINE_EXC
 (
Elo›Exc
, 
EºnoExc
)

132 
DEFINE_EXC
 (
Eª°¨tExc
, 
EºnoExc
)

133 
DEFINE_EXC
 (
E°ΩùeExc
, 
EºnoExc
)

134 
DEFINE_EXC
 (
EnŸem±yExc
, 
EºnoExc
)

135 
DEFINE_EXC
 (
Eu£rsExc
, 
EºnoExc
)

136 
DEFINE_EXC
 (
EnŸsockExc
, 
EºnoExc
)

137 
DEFINE_EXC
 (
Ede°addºeqExc
, 
EºnoExc
)

138 
DEFINE_EXC
 (
EmsgsizeExc
, 
EºnoExc
)

139 
DEFINE_EXC
 (
E¥ŸŸy≥Exc
, 
EºnoExc
)

140 
DEFINE_EXC
 (
En›rŸo›tExc
, 
EºnoExc
)

141 
DEFINE_EXC
 (
E¥Ÿ⁄osuµ‹tExc
, 
EºnoExc
)

142 
DEFINE_EXC
 (
Esockäosuµ‹tExc
, 
EºnoExc
)

143 
DEFINE_EXC
 (
E›nŸsuµExc
, 
EºnoExc
)

144 
DEFINE_EXC
 (
Ep‚osuµ‹tExc
, 
EºnoExc
)

145 
DEFINE_EXC
 (
Ea‚osuµ‹tExc
, 
EºnoExc
)

146 
DEFINE_EXC
 (
Eaddröu£Exc
, 
EºnoExc
)

147 
DEFINE_EXC
 (
Eadd∫ŸavaûExc
, 
EºnoExc
)

148 
DEFINE_EXC
 (
E√tdownExc
, 
EºnoExc
)

149 
DEFINE_EXC
 (
E√tuƒóchExc
, 
EºnoExc
)

150 
DEFINE_EXC
 (
E√åe£tExc
, 
EºnoExc
)

151 
DEFINE_EXC
 (
Ec⁄«b‹ãdExc
, 
EºnoExc
)

152 
DEFINE_EXC
 (
Ec⁄ƒe£tExc
, 
EºnoExc
)

153 
DEFINE_EXC
 (
EnobufsExc
, 
EºnoExc
)

154 
DEFINE_EXC
 (
Eisc⁄nExc
, 
EºnoExc
)

155 
DEFINE_EXC
 (
EnŸc⁄nExc
, 
EºnoExc
)

156 
DEFINE_EXC
 (
EshutdownExc
, 
EºnoExc
)

157 
DEFINE_EXC
 (
Etoom™yªfsExc
, 
EºnoExc
)

158 
DEFINE_EXC
 (
EtimedoutExc
, 
EºnoExc
)

159 
DEFINE_EXC
 (
Ec⁄ƒefu£dExc
, 
EºnoExc
)

160 
DEFINE_EXC
 (
Eho°downExc
, 
EºnoExc
)

161 
DEFINE_EXC
 (
Eho°uƒóchExc
, 
EºnoExc
)

162 
DEFINE_EXC
 (
EÆªadyExc
, 
EºnoExc
)

163 
DEFINE_EXC
 (
Eö¥ogªssExc
, 
EºnoExc
)

164 
DEFINE_EXC
 (
E°ÆeExc
, 
EºnoExc
)

165 
DEFINE_EXC
 (
Ei‹esidExc
, 
EºnoExc
)

166 
DEFINE_EXC
 (
Eu˛ónExc
, 
EºnoExc
)

167 
DEFINE_EXC
 (
EnŸ«mExc
, 
EºnoExc
)

168 
DEFINE_EXC
 (
E«vaûExc
, 
EºnoExc
)

169 
DEFINE_EXC
 (
Ei¢amExc
, 
EºnoExc
)

170 
DEFINE_EXC
 (
EªmŸeioExc
, 
EºnoExc
)

171 
DEFINE_EXC
 (
EöôExc
, 
EºnoExc
)

172 
DEFINE_EXC
 (
EªmdevExc
, 
EºnoExc
)

173 
DEFINE_EXC
 (
Eˇn˚ÀdExc
, 
EºnoExc
)

174 
DEFINE_EXC
 (
EnﬁimfûeExc
, 
EºnoExc
)

175 
DEFINE_EXC
 (
E¥o˛imExc
, 
EºnoExc
)

176 
DEFINE_EXC
 (
EdisjoötExc
, 
EºnoExc
)

177 
DEFINE_EXC
 (
EnﬁogöExc
, 
EºnoExc
)

178 
DEFINE_EXC
 (
ElogölimExc
, 
EºnoExc
)

179 
DEFINE_EXC
 (
Egrou∂o›Exc
, 
EºnoExc
)

180 
DEFINE_EXC
 (
EnﬂâachExc
, 
EºnoExc
)

181 
DEFINE_EXC
 (
EnŸsupExc
, 
EºnoExc
)

182 
DEFINE_EXC
 (
EnﬂârExc
, 
EºnoExc
)

183 
DEFINE_EXC
 (
Edúc‹ru±edExc
, 
EºnoExc
)

184 
DEFINE_EXC
 (
EdquŸExc
, 
EºnoExc
)

185 
DEFINE_EXC
 (
Enf§emŸeExc
, 
EºnoExc
)

186 
DEFINE_EXC
 (
Ec⁄åﬁÀrExc
, 
EºnoExc
)

187 
DEFINE_EXC
 (
EnŸc⁄åﬁÀrExc
, 
EºnoExc
)

188 
DEFINE_EXC
 (
EíqueuedExc
, 
EºnoExc
)

189 
DEFINE_EXC
 (
EnŸíqueuedExc
, 
EºnoExc
)

190 
DEFINE_EXC
 (
EjoöedExc
, 
EºnoExc
)

191 
DEFINE_EXC
 (
EnŸjoöedExc
, 
EºnoExc
)

192 
DEFINE_EXC
 (
En›rocExc
, 
EºnoExc
)

193 
DEFINE_EXC
 (
Emu°runExc
, 
EºnoExc
)

194 
DEFINE_EXC
 (
EnŸ°›≥dExc
, 
EºnoExc
)

195 
DEFINE_EXC
 (
E˛ock˝uExc
, 
EºnoExc
)

196 
DEFINE_EXC
 (
EövÆ°©eExc
, 
EºnoExc
)

197 
DEFINE_EXC
 (
En€xi°Exc
, 
EºnoExc
)

198 
DEFINE_EXC
 (
Eídofmö‹Exc
, 
EºnoExc
)

199 
DEFINE_EXC
 (
EbufsizeExc
, 
EºnoExc
)

200 
DEFINE_EXC
 (
Eem±yExc
, 
EºnoExc
)

201 
DEFINE_EXC
 (
EnoöågroupExc
, 
EºnoExc
)

202 
DEFINE_EXC
 (
EövÆmodeExc
, 
EºnoExc
)

203 
DEFINE_EXC
 (
Eˇ¡exã¡Exc
, 
EºnoExc
)

204 
DEFINE_EXC
 (
EövÆtimeExc
, 
EºnoExc
)

205 
DEFINE_EXC
 (
Ede°royedExc
, 
EºnoExc
)

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexMacros.h

37 #i‚de‡
INCLUDED_IEXMACROS_H


38 
	#INCLUDED_IEXMACROS_H


	)

46 
	~<s°ªam
>

58 
	#THROW
(
ty≥
, 
ãxt
Ë\

	)

61 
	g°d
::
°rög°ªam
 
s
; \

62 
	gs
 << 
	gãxt
; \

63 
throw
 
ty≥
 (
s
); \

91 
	#APPEND_EXC
(
exc
, 
ãxt
Ë\

	)

94 
°d
::
°rög°ªam
 
s
; \

95 
s
 << 
ãxt
; \

96 
exc
.
	`≠≥nd
 (
s
); \

97 
	}
} \

100 
	#REPLACE_EXC
(
exc
, 
ãxt
Ë\

	)

103 
°d
::
°rög°ªam
 
s
; \

104 
s
 << 
ãxt
; \

105 
exc
.
	`assign
 (
s
); \

106 
	}
} \

120 
	#THROW_ERRNO
(
ãxt
Ë\

	)

123 
°d
::
°rög°ªam
 
s
; \

124 
s
 << 
ãxt
; \

125 ::
Iex
::
	`throwEºnoExc
 (
s
.
	`°r
()); \

126 
	}
} \

139 
	#ASSERT
(
as£πi⁄
, 
ty≥
, 
ãxt
Ë\

	)

142 if–(
as£πi⁄
Ë=
Ál£
 ) \

143 
	`THROW
–
ty≥
, 
ãxt
 ); \

144 
	}
} \

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexMathExc.h

37 #i‚de‡
INCLUDED_IEXMATHEXC_H


38 
	#INCLUDED_IEXMATHEXC_H


	)

40 
	~"IexBa£Exc.h
"

42 
«me•a˚
 
	gIex
 {

49 
DEFINE_EXC
 (
OvîÊowExc
, 
M©hExc
)

50 
DEFINE_EXC
 (
UndîÊowExc
, 
M©hExc
)

51 
DEFINE_EXC
 (
DivzîoExc
, 
M©hExc
)

52 
DEFINE_EXC
 (
I√xa˘Exc
, 
M©hExc
)

53 
DEFINE_EXC
 (
InvÆidFpOpExc
, 
M©hExc
)

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexThrowErrnoExc.h

37 #i‚de‡
INCLUDED_IEXTHROWERRNOEXC_H


38 
	#INCLUDED_IEXTHROWERRNOEXC_H


	)

46 
	~"IexBa£Exc.h
"

48 
«me•a˚
 
	gIex
 {

90 
throwEºnoExc
 (c⁄° 
°d
::
°rög
 &
txt
, 
î∫um
);

91 
throwEºnoExc
 (c⁄° 
°d
::
°rög
 &
txt
 = "%T." );

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThread.h

35 #i‚de‡
INCLUDED_ILM_THREAD_H


36 
	#INCLUDED_ILM_THREAD_H


	)

93 
	~"O≥nEXRC⁄fig.h
"

95 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


96 #ifde‡
NOMINMAX


97 #unde‡
NOMINMAX


99 
	#NOMINMAX


	)

100 
	~<wödows.h
>

101 
	~<¥o˚ss.h
>

102 #ñi‡
HAVE_PTHREAD


103 
	~<±hªad.h
>

106 
«me•a˚
 
	gIlmThªad
 {

113 
boﬁ
 
suµ‹tsThªads
 ();

116 ˛as†
	cThªad


118 
	gpublic
:

120 
Thªad
 ();

121 
	gvútuÆ
 ~
Thªad
 ();

123 
°¨t
 ();

124 
vútuÆ
 
run
 () = 0;

126 
	g¥iv©e
:

128 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


129 
HANDLE
 
_thªad
;

130 #ñi‡
HAVE_PTHREAD


131 
±hªad_t
 
	g_thªad
;

134 
	g›î©‹
 = (c⁄° 
Thªad
& 
t
);

135 
Thªad
 (c⁄° Thªad& 
t
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h

35 #i‚de‡
INCLUDED_ILM_THREAD_MUTEX_H


36 
	#INCLUDED_ILM_THREAD_MUTEX_H


	)

69 
	~"O≥nEXRC⁄fig.h
"

71 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


72 #ifde‡
NOMINMAX


73 #unde‡
NOMINMAX


75 
	#NOMINMAX


	)

76 
	~<wödows.h
>

77 #ñi‡
HAVE_PTHREAD


78 
	~<±hªad.h
>

81 
«me•a˚
 
	gIlmThªad
 {

83 
˛ass
 
	gLock
;

86 ˛as†
	cMuãx


88 
	gpublic
:

90 
Muãx
 ();

91 
	gvútuÆ
 ~
Muãx
 ();

93 
	g¥iv©e
:

95 
lock
 () const;

96 
u∆ock
 () const;

98 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


99 
muèbÀ
 
CRITICAL_SECTION
 
	g_muãx
;

100 #ñi‡
HAVE_PTHREAD


101 
muèbÀ
 
±hªad_muãx_t
 
	g_muãx
;

104 
	g›î©‹
 = (c⁄° 
Muãx
& 
M
);

105 
Muãx
 (c⁄° Muãx& 
M
);

107 
‰õnd
 
˛ass
 
	gLock
;

111 ˛as†
	cLock


113 
	gpublic
:

115 
Lock
 (c⁄° 
Muãx
& 
m
, 
boﬁ
 
autoLock
 = 
åue
):

116 
_muãx
 (
m
),

117 
_locked
 (
Ál£
)

119 i‡(
	gautoLock
)

121 
	g_muãx
.
lock
();

122 
	g_locked
 = 
åue
;

126 ~
Lock
 ()

128 i‡(
	g_locked
)

129 
	g_muãx
.
u∆ock
();

132 
acquúe
 ()

134 
	g_muãx
.
lock
();

135 
	g_locked
 = 
åue
;

138 
ªÀa£
 ()

140 
	g_muãx
.
u∆ock
();

141 
	g_locked
 = 
Ál£
;

144 
boﬁ
 
locked
 ()

146  
	g_locked
;

149 
	g¥iv©e
:

151 c⁄° 
Muãx
 & 
_muãx
;

152 
boﬁ
 
	g_locked
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadPool.h

35 #i‚de‡
INCLUDED_ILM_THREAD_POOL_H


36 
	#INCLUDED_ILM_THREAD_POOL_H


	)

63 
«me•a˚
 
	gIlmThªad
 {

65 
˛ass
 
	gTaskGroup
;

66 
˛ass
 
	gTask
;

69 ˛as†
	cThªadPoﬁ


71 
	gpublic
:

78 
ThªadPoﬁ
 (
numThªads
 = 0);

86 
	gvútuÆ
 ~
ThªadPoﬁ
 ();

97 
numThªads
 () const;

98 
£tNumThªads
 (
cou¡
);

108 
addTask
 (
Task
* 
èsk
);

115 
	gThªadPoﬁ
& 
globÆThªadPoﬁ
 ();

116 
addGlobÆTask
 (
Task
* 
èsk
);

118 
	gD©a
;

120 
	g¥Ÿe˘ed
:

122 
D©a
 * 
_d©a
;

126 ˛as†
	cTask


128 
	gpublic
:

130 
Task
 (
TaskGroup
* 
g
);

131 
	gvútuÆ
 ~
Task
 ();

133 
vútuÆ
 
execuã
 () = 0;

134 
TaskGroup
 * 
group
();

136 
	g¥Ÿe˘ed
:

138 
TaskGroup
 * 
_group
;

142 ˛as†
	cTaskGroup


144 
	gpublic
:

146 
TaskGroup
();

147 ~
TaskGroup
();

149 
	gD©a
;

150 
D©a
* c⁄° 
	g_d©a
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadSemaphore.h

35 #i‚de‡
INCLUDED_ILM_THREAD_SEMAPHORE_H


36 
	#INCLUDED_ILM_THREAD_SEMAPHORE_H


	)

45 
	~"O≥nEXRC⁄fig.h
"

47 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


48 #ifde‡
NOMINMAX


49 #unde‡
NOMINMAX


51 
	#NOMINMAX


	)

52 
	~<wödows.h
>

53 #ñi‡
HAVE_PTHREAD
 && !
HAVE_POSIX_SEMAPHORES


54 
	~<±hªad.h
>

55 #ñi‡
HAVE_PTHREAD
 && 
HAVE_POSIX_SEMAPHORES


56 
	~<£m≠h‹e.h
>

59 
«me•a˚
 
	gIlmThªad
 {

62 ˛as†
	cSem≠h‹e


64 
	gpublic
:

66 
Sem≠h‹e
 (
vÆue
 = 0);

67 
	gvútuÆ
 ~
Sem≠h‹e
();

69 
waô
();

70 
po°
();

71 
vÆue
() const;

73 
	g¥iv©e
:

75 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


77 
muèbÀ
 
HANDLE
 
_£m≠h‹e
;

79 #ñi‡
HAVE_PTHREAD
 && !
HAVE_POSIX_SEMAPHORES


86 
	s£ma_t


88 
	gcou¡
;

89 
	gnumWaôög
;

90 
±hªad_muãx_t
 
	gmuãx
;

91 
±hªad_c⁄d_t
 
	gn⁄Zîo
;

94 
muèbÀ
 
£ma_t
 
	g_£m≠h‹e
;

96 #ñi‡
HAVE_PTHREAD
 && 
HAVE_POSIX_SEMAPHORES


98 
muèbÀ
 
£m_t
 
	g_£m≠h‹e
;

102 
	g›î©‹
 = (c⁄° 
Sem≠h‹e
& 
s
);

103 
Sem≠h‹e
 (c⁄° Sem≠h‹e& 
s
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h

36 #i‚de‡
INCLUDED_IMATHBOX_H


37 
	#INCLUDED_IMATHBOX_H


	)

65 
	~"Im©hVec.h
"

67 
«me•a˚
 
	gIm©h
 {

70 
	gãm∂©e
 <
˛ass
 
	gT
>

71 ˛as†
	cBox


73 
	gpublic
:

79 
T
 
mö
;

80 
T
 
	gmax
;

86 
Box
();

87 
Box
(c⁄° 
T
& 
poöt
);

88 
Box
(c⁄° 
T
& 
möT
, c⁄° T& 
maxT
);

94 
boﬁ
 
	g›î©‹
 =(c⁄° 
Box
<
T
> &
§c
) const;

95 
boﬁ
 
	g›î©‹
 !(c⁄° 
Box
<
T
> &
§c
) const;

101 
makeEm±y
();

102 
exãndBy
(c⁄° 
T
& 
poöt
);

103 
exãndBy
(c⁄° 
Box
<
T
>& 
box
);

109 
T
 
size
() const;

110 
T
 
˚¡î
() const;

111 
boﬁ
 
öãr£˘s
(c⁄° 
T
 &
poöt
) const;

112 
boﬁ
 
öãr£˘s
(c⁄° 
Box
<
T
> &
box
) const;

114 
maj‹Axis
() const;

120 
boﬁ
 
isEm±y
() const;

121 
boﬁ
 
hasVﬁume
() const;

130 
	gBox
 <
	tV2s
> 
	tBox2s
;

131 
	gBox
 <
	tV2i
> 
	tBox2i
;

132 
	gBox
 <
	tV2f
> 
	tBox2f
;

133 
	gBox
 <
	tV2d
> 
	tBox2d
;

134 
	gBox
 <
	tV3s
> 
	tBox3s
;

135 
	gBox
 <
	tV3i
> 
	tBox3i
;

136 
	gBox
 <
	tV3f
> 
	tBox3f
;

137 
	gBox
 <
	tV3d
> 
	tBox3d
;

145 
	gãm∂©e
 <
˛ass
 
	gT
>

146 
ölöe
 
	gBox
<
	gT
>::
	$Box
()

148 
	`makeEm±y
();

149 
	}
}

151 
	gãm∂©e
 <
˛ass
 
	gT
>

152 
ölöe
 
	gBox
<
	gT
>::
	$Box
(c⁄° 
T
& 
poöt
)

154 
mö
 = 
poöt
;

155 
max
 = 
poöt
;

156 
	}
}

158 
	gãm∂©e
 <
˛ass
 
	gT
>

159 
ölöe
 
	gBox
<
	gT
>::
	$Box
(c⁄° 
T
& 
möV
, c⁄° T& 
maxV
)

161 
mö
 = 
möV
;

162 
max
 = 
maxV
;

163 
	}
}

165 
	gãm∂©e
 <
˛ass
 
	gT
>

166 
ölöe
 
boﬁ


167 
	gBox
<
	gT
>::
›î©‹
 =(c⁄° 
Box
<
T
> &
§c
) const

169  (
mö
 =
§c
.mö && 
max
 == src.max);

172 
	gãm∂©e
 <
˛ass
 
	gT
>

173 
ölöe
 
boﬁ


174 
	gBox
<
	gT
>::
›î©‹
 !(c⁄° 
Box
<
T
> &
§c
) const

176  (
mö
 !
§c
.mö || 
max
 != src.max);

179 
	gãm∂©e
 <
˛ass
 
	gT
>

180 
ölöe
 
	gBox
<
	gT
>::
	$makeEm±y
()

182 
mö
 = 
	`T
(
T
::
	`ba£Ty≥Max
());

183 
max
 = 
	`T
(
T
::
	`ba£Ty≥Mö
());

184 
	}
}

186 
	gãm∂©e
 <
˛ass
 
	gT
>

187 
ölöe
 
	gBox
<
	gT
>::
	$exãndBy
(c⁄° 
T
& 
poöt
)

189 
i
=0; i<
mö
.
	`dimísi⁄s
(); i++)

191 i‡–
poöt
[
i
] < 
mö
[i] ) min[i] =Öoint[i];

192 i‡–
poöt
[
i
] > 
max
[i] ) max[i] =Öoint[i];

194 
	}
}

196 
	gãm∂©e
 <
˛ass
 
	gT
>

197 
ölöe
 
	gBox
<
	gT
>::
exãndBy
(c⁄° 
Box
<
T
>& 
box
)

199 
i
=0; 
	gi
<
	gmö
.
dimísi⁄s
(); i++)

201 i‡–
	gbox
.
	gmö
[
i
] < mö[i] ) mö[i] = 
box
.
mö
[i];

202 i‡–
	gbox
.
	gmax
[
i
] > max[i] ) max[i] = 
box
.
max
[i];

206 
	gãm∂©e
 <
˛ass
 
	gT
>

207 
ölöe
 
boﬁ
 
	gBox
<
	gT
>::
	$öãr£˘s
(c⁄° 
T
& 
poöt
) const

209 
i
=0; i<
mö
.
	`dimísi⁄s
(); i++)

211 i‡(
poöt
[
i
] < 
mö
[i] ||Öoöt[i] > 
max
[i]Ë 
Ál£
;

213  
åue
;

214 
	}
}

216 
	gãm∂©e
 <
˛ass
 
	gT
>

217 
ölöe
 
boﬁ
 
	gBox
<
	gT
>::
öãr£˘s
(c⁄° 
Box
<
T
>& 
box
) const

219 
i
=0; 
	gi
<
	gmö
.
dimísi⁄s
(); i++)

221 i‡(
	gbox
.
	gmax
[
i
] < 
	gmö
[i] || box.mö[i] > max[i]Ë 
	gÁl£
;

223  
	gåue
;

226 
	gãm∂©e
 <
˛ass
 
	gT
>

227 
ölöe
 
T
 
	gBox
<
	gT
>::
	$size
() const

229 i‡(
	`isEm±y
())

230  
	`T
 (0);

232  
max
-
mö
;

233 
	}
}

235 
	gãm∂©e
 <
˛ass
 
	gT
>

236 
ölöe
 
T
 
	gBox
<
	gT
>::
	$˚¡î
() const

238  (
max
+
mö
)/2;

239 
	}
}

241 
	gãm∂©e
 <
˛ass
 
	gT
>

242 
ölöe
 
boﬁ
 
	gBox
<
	gT
>::
	$isEm±y
() const

244 
i
=0; i<
mö
.
	`dimísi⁄s
(); i++)

246 i‡(
max
[
i
] < 
mö
[i]Ë 
åue
;

248  
Ál£
;

249 
	}
}

251 
	gãm∂©e
 <
˛ass
 
	gT
>

252 
ölöe
 
boﬁ
 
	gBox
<
	gT
>::
	$hasVﬁume
() const

254 
i
=0; i<
mö
.
	`dimísi⁄s
(); i++)

256 i‡(
max
[
i
] <
mö
[i]Ë 
Ál£
;

258  
åue
;

259 
	}
}

261 
	gãm∂©e
<
˛ass
 
	gT
>

262 
ölöe
 
	gBox
<
	gT
>::
	$maj‹Axis
() const

264 
maj‹
 = 0;

265 
T
 
s
 = 
	`size
();

267 
i
=1; i<
mö
.
	`dimísi⁄s
(); i++)

269 i‡–
s
[
i
] > s[
maj‹
] ) major = i;

272  
maj‹
;

273 
	}
}

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBoxAlgo.h

37 #i‚de‡
INCLUDED_IMATHBOXALGO_H


38 
	#INCLUDED_IMATHBOXALGO_H


	)

72 
	~"Im©hBox.h
"

73 
	~"Im©hM©rix.h
"

74 
	~"Im©hLöeAlgo.h
"

75 
	~"Im©hPœ√.h
"

77 
«me•a˚
 
	gIm©h
 {

80 
	gãm∂©e
 <
˛ass
 
	gT
>

81 
ölöe
 
T
 
˛ù
(c⁄° T& 
ö
, c⁄° 
Box
<T>& 
box
)

87 
T
 
	gout
;

89 
	gi
=0; i<()
	gbox
.
	gmö
.
dimísi⁄s
(); i++)

91 i‡(
	gö
[
i
] < 
	gbox
.
	gmö
[i]Ë
	gout
[i] = 
box
.
mö
[i];

92 i‡(
	gö
[
i
] > 
	gbox
.
	gmax
[i]Ë
	gout
[i] = 
box
.
max
[i];

93 
	gout
[
i
] = 
ö
[i];

96  
	gout
;

104 
	gãm∂©e
 <
˛ass
 
	gT
>

105 
	gVec3
<
	gT
>

106 
˛o£°PoötInBox
(c⁄° 
Vec3
<
T
>& 
p
, c⁄° 
Box
< Vec3<T> >& 
box
 )

108 
	gIm©h
::
V3f
 
b
;

110 i‡(
	gp
.
	gx
 < 
	gbox
.
	gmö
.x)

111 
	gb
.
	gx
 = 
box
.
mö
.
x
;

112 i‡(
	gp
.
	gx
 > 
	gbox
.
	gmax
.x)

113 
	gb
.
	gx
 = 
box
.
max
.
x
;

115 
	gb
.
	gx
 = 
p
.
x
;

117 i‡(
	gp
.
	gy
 < 
	gbox
.
	gmö
.y)

118 
	gb
.
	gy
 = 
box
.
mö
.
y
;

119 i‡(
	gp
.
	gy
 > 
	gbox
.
	gmax
.y)

120 
	gb
.
	gy
 = 
box
.
max
.
y
;

122 
	gb
.
	gy
 = 
p
.
y
;

124 i‡(
	gp
.
	gz
 < 
	gbox
.
	gmö
.z)

125 
	gb
.
	gz
 = 
box
.
mö
.
z
;

126 i‡(
	gp
.
	gz
 > 
	gbox
.
	gmax
.z)

127 
	gb
.
	gz
 = 
box
.
max
.
z
;

129 
	gb
.
	gz
 = 
p
.
z
;

131  
	gb
;

134 
	gãm∂©e
 <
˛ass
 
	gT
>

135 
	gVec3
<
	gT
> 
˛o£°PoötOnBox
(c⁄° 
Vec3
<
T
>& 
±
, c⁄° 
Box
< Vec3<T> >& 
box
 )

142 
	gVec3
<
	gT
> 
	gªsu…
;

145 i‡(
	gbox
.
isEm±y
())

146  
	g±
;

147 i‡(
	g±
 =
box
.
˚¡î
())

150 
ªsu…
[0] = (
box
.
max
[0] + box.
mö
[0])/2.0;

151 
	gªsu…
[1] = (
box
.
max
[1] + box.
mö
[1])/2.0;

152 
	gªsu…
[2] = 
box
.
max
[2];

161 
	gVec3
<
	gT
> 
	gvec
 = 
±
 - 
box
.
˚¡î
();

162 
T
 
	gsizeX
 = 
box
.
max
[0]-box.
mö
[0];

163 
T
 
	gsizeY
 = 
box
.
max
[1]-box.
mö
[1];

164 
T
 
	gsizeZ
 = 
box
.
max
[2]-box.
mö
[2];

166 
T
 
	ghÆfX
 = 
sizeX
/2.0;

167 
T
 
	ghÆfY
 = 
sizeY
/2.0;

168 
T
 
	ghÆfZ
 = 
sizeZ
/2.0;

169 i‡(
	ghÆfX
 > 0.0)

170 
	gvec
[0] /
hÆfX
;

171 i‡(
	ghÆfY
 > 0.0)

172 
	gvec
[1] /
hÆfY
;

173 i‡(
	ghÆfZ
 > 0.0)

174 
	gvec
[2] /
hÆfZ
;

177 
	gVec3
<
	gT
> 
	gmag
;

178 
	gmag
[0] = 
Ábs
(
vec
[0]);

179 
	gmag
[1] = 
Ábs
(
vec
[1]);

180 
	gmag
[2] = 
Ábs
(
vec
[2]);

182 
	gªsu…
 = 
mag
;

185 i‡(
	gªsu…
[0] > 1.0)

186 
	gªsu…
[0] = 1.0;

187 i‡(
	gªsu…
[1] > 1.0)

188 
	gªsu…
[1] = 1.0;

189 i‡(
	gªsu…
[2] > 1.0)

190 
	gªsu…
[2] = 1.0;

193 i‡((
	gmag
[0] > mag[1]) && (mag[0] > mag[2]))

195 
	gªsu…
[0] = 1.0;

197 i‡((
	gmag
[1] > mag[0]) && (mag[1] > mag[2]))

199 
	gªsu…
[1] = 1.0;

201 i‡((
	gmag
[2] > mag[0]) && (mag[2] > mag[1]))

203 
	gªsu…
[2] = 1.0;

205 i‡((
	gmag
[0] =
mag
[1]) && (mag[0] == mag[2]))

208 
ªsu…
 = 
Vec3
<
T
>(1,1,1);

210 i‡(
	gmag
[0] =
mag
[1])

213 
ªsu…
[0] = 1.0;

214 
	gªsu…
[1] = 1.0;

216 i‡(
	gmag
[0] =
mag
[2])

219 
ªsu…
[0] = 1.0;

220 
	gªsu…
[2] = 1.0;

222 i‡(
	gmag
[1] =
mag
[2])

225 
ªsu…
[1] = 1.0;

226 
	gªsu…
[2] = 1.0;

230 
	gi
=0; i < 3; i++)

232 i‡(
	gvec
[
i
] < 0.0)

233 
	gªsu…
[
i
] = -
ªsu…
[i];

237 
	gªsu…
[0] *
hÆfX
;

238 
	gªsu…
[1] *
hÆfY
;

239 
	gªsu…
[2] *
hÆfZ
;

241 
	gªsu…
 +
box
.
˚¡î
();

243  
	gªsu…
;

246 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

247 
	gBox
< 
	gVec3
<
	gS
> >

248 
å™sf‹m
(c⁄° 
Box
< 
Vec3
<
S
> >& 
box
, c⁄° 
M©rix44
<
T
>& 
m
)

258 i‡(
	gbox
.
isEm±y
())

259  
	gbox
;

266 i‡(
	gm
[0][3] * m[0][3] + m[1][3] * m[1][3] + m[2][3] * m[2][3]

267 + (1.0 - 
	gm
[3][3]) * (1.0 - m[3][3]) < 0.00001)

270 
	gi
, 
	gj
;

271 
	gBox
< 
	gVec3
<
	gS
> > 
	g√wBox
;

273 
	gi
 = 0; i < 3; i++)

275 
	g√wBox
.
	gmö
[
i
] = 
√wBox
.
max
[i] = (
S
Ë
m
[3][i];

277 
	gj
 = 0; j < 3; j++)

279 
	ga
, 
	gb
;

281 
	ga
 = (
S
Ë
m
[
j
][
i
] * 
box
.
mö
[j];

282 
	gb
 = (
S
Ë
m
[
j
][
i
] * 
box
.
max
[j];

284 i‡(
	ga
 < 
	gb
)

286 
	g√wBox
.
	gmö
[
i
] +
a
;

287 
	g√wBox
.
	gmax
[
i
] +
b
;

291 
	g√wBox
.
	gmö
[
i
] +
b
;

292 
	g√wBox
.
	gmax
[
i
] +
a
;

297  
	g√wBox
;

301 
	gVec3
<
	gS
> 
	gpoöts
[8];

304 
	gpoöts
[0][0] = 
poöts
[1][0] =Öoöts[2][0] =Öoöts[3][0] = 
box
.
mö
[0];

305 
	gpoöts
[4][0] = 
poöts
[5][0] =Öoöts[6][0] =Öoöts[7][0] = 
box
.
max
[0];

307 
	gpoöts
[0][1] = 
poöts
[1][1] =Öoöts[4][1] =Öoöts[5][1] = 
box
.
mö
[1];

308 
	gpoöts
[2][1] = 
poöts
[3][1] =Öoöts[6][1] =Öoöts[7][1] = 
box
.
max
[1];

310 
	gpoöts
[0][2] = 
poöts
[2][2] =Öoöts[4][2] =Öoöts[6][2] = 
box
.
mö
[2];

311 
	gpoöts
[1][2] = 
poöts
[3][2] =Öoöts[5][2] =Öoöts[7][2] = 
box
.
max
[2];

313 
	gBox
< 
	gVec3
<
	gS
> > 
	g√wBox
;

314 
	gi
 = 0; i < 8; i++)

315 
	g√wBox
.
exãndBy
(
poöts
[
i
] * 
m
);

317  
	g√wBox
;

320 
	gãm∂©e
 <
˛ass
 
	gT
>

321 
	gBox
< 
	gVec3
<
	gT
> >

322 
afföeTønsf‹m
(c⁄° 
Box
< 
Vec3
<
T
> > &
bbox
, c⁄° 
M©rix44
<T> &
M
)

324 
	gmö0
, 
	gmax0
, 
	gmö1
, 
	gmax1
, 
	gmö2
, 
	gmax2
, 
	ga
, 
	gb
;

325 
	gmö0√w
, 
	gmax0√w
, 
	gmö1√w
, 
	gmax1√w
, 
	gmö2√w
, 
	gmax2√w
;

327 
	gmö0
 = 
bbox
.
mö
[0];

328 
	gmax0
 = 
bbox
.
max
[0];

329 
	gmö1
 = 
bbox
.
mö
[1];

330 
	gmax1
 = 
bbox
.
max
[1];

331 
	gmö2
 = 
bbox
.
mö
[2];

332 
	gmax2
 = 
bbox
.
max
[2];

334 
	gmö0√w
 = 
max0√w
 = 
M
[3][0];

335 
	ga
 = 
M
[0][0] * 
mö0
;

336 
	gb
 = 
M
[0][0] * 
max0
;

337 i‡(
	ga
 < 
	gb
) {

338 
	gmö0√w
 +
a
;

339 
	gmax0√w
 +
b
;

341 
	gmö0√w
 +
b
;

342 
	gmax0√w
 +
a
;

344 
	ga
 = 
M
[1][0] * 
mö1
;

345 
	gb
 = 
M
[1][0] * 
max1
;

346 i‡(
	ga
 < 
	gb
) {

347 
	gmö0√w
 +
a
;

348 
	gmax0√w
 +
b
;

350 
	gmö0√w
 +
b
;

351 
	gmax0√w
 +
a
;

353 
	ga
 = 
M
[2][0] * 
mö2
;

354 
	gb
 = 
M
[2][0] * 
max2
;

355 i‡(
	ga
 < 
	gb
) {

356 
	gmö0√w
 +
a
;

357 
	gmax0√w
 +
b
;

359 
	gmö0√w
 +
b
;

360 
	gmax0√w
 +
a
;

363 
	gmö1√w
 = 
max1√w
 = 
M
[3][1];

364 
	ga
 = 
M
[0][1] * 
mö0
;

365 
	gb
 = 
M
[0][1] * 
max0
;

366 i‡(
	ga
 < 
	gb
) {

367 
	gmö1√w
 +
a
;

368 
	gmax1√w
 +
b
;

370 
	gmö1√w
 +
b
;

371 
	gmax1√w
 +
a
;

373 
	ga
 = 
M
[1][1] * 
mö1
;

374 
	gb
 = 
M
[1][1] * 
max1
;

375 i‡(
	ga
 < 
	gb
) {

376 
	gmö1√w
 +
a
;

377 
	gmax1√w
 +
b
;

379 
	gmö1√w
 +
b
;

380 
	gmax1√w
 +
a
;

382 
	ga
 = 
M
[2][1] * 
mö2
;

383 
	gb
 = 
M
[2][1] * 
max2
;

384 i‡(
	ga
 < 
	gb
) {

385 
	gmö1√w
 +
a
;

386 
	gmax1√w
 +
b
;

388 
	gmö1√w
 +
b
;

389 
	gmax1√w
 +
a
;

392 
	gmö2√w
 = 
max2√w
 = 
M
[3][2];

393 
	ga
 = 
M
[0][2] * 
mö0
;

394 
	gb
 = 
M
[0][2] * 
max0
;

395 i‡(
	ga
 < 
	gb
) {

396 
	gmö2√w
 +
a
;

397 
	gmax2√w
 +
b
;

399 
	gmö2√w
 +
b
;

400 
	gmax2√w
 +
a
;

402 
	ga
 = 
M
[1][2] * 
mö1
;

403 
	gb
 = 
M
[1][2] * 
max1
;

404 i‡(
	ga
 < 
	gb
) {

405 
	gmö2√w
 +
a
;

406 
	gmax2√w
 +
b
;

408 
	gmö2√w
 +
b
;

409 
	gmax2√w
 +
a
;

411 
	ga
 = 
M
[2][2] * 
mö2
;

412 
	gb
 = 
M
[2][2] * 
max2
;

413 i‡(
	ga
 < 
	gb
) {

414 
	gmö2√w
 +
a
;

415 
	gmax2√w
 +
b
;

417 
	gmö2√w
 +
b
;

418 
	gmax2√w
 +
a
;

421 
	gBox
< 
	gVec3
<
	gT
> > 
	gxbbox
;

423 
	gxbbox
.
	gmö
[0] = 
mö0√w
;

424 
	gxbbox
.
	gmax
[0] = 
max0√w
;

425 
	gxbbox
.
	gmö
[1] = 
mö1√w
;

426 
	gxbbox
.
	gmax
[1] = 
max1√w
;

427 
	gxbbox
.
	gmö
[2] = 
mö2√w
;

428 
	gxbbox
.
	gmax
[2] = 
max2√w
;

430  
	gxbbox
;

434 
	gãm∂©e
 <
˛ass
 
	gT
>

435 
boﬁ
 
födE¡ryAndExôPoöts
(c⁄° 
Löe3
<
T
>& 
löe
,

436 c⁄° 
Box
<
Vec3
<
T
> >& 
box
,

437 
Vec3
<
T
> &
íãrPoöt
,

438 
Vec3
<
T
> &
exôPoöt
)

440 i‡–
	gbox
.
isEm±y
(ËË 
	gÁl£
;

441 i‡–
	glöe
.
di°™˚To
(
box
.
˚¡î
()Ë> 
	gbox
.
size
().
Àngth
()/2. )  
	gÁl£
;

443 
	gVec3
<
	gT
> 
	gpoöts
[8], 
	göãr
, 
	gb¨y
;

444 
	gPœ√3
<
	gT
> 
	g∂™e
;

445 
	gi
, 
	gv0
, 
	gv1
, 
	gv2
;

446 
boﬁ
 
	g‰⁄t
 = 
Ál£
, 
	gvÆid
, 
	gvÆidI¡î£˘i⁄
 = false;

449 
	gi
 = 0; i < 8; i++)

451 
	gpoöts
[
i
].
£tVÆue
–ò& 01 ? 
box
.
mö
[0] : box.
max
[0],

452 
i
 & 02 ? 
box
.
mö
[1] : box.
max
[1],

453 
i
 & 04 ? 
box
.
mö
[2] : box.
max
[2]);

457 
	gi
 = 0; i < 12; i++)

459 
	gi
)

461 0: 
v0
 = 2; 
	gv1
 = 1; 
	gv2
 = 0; ;

462 1: 
v0
 = 2; 
	gv1
 = 3; 
	gv2
 = 1; ;

464 2: 
v0
 = 4; 
	gv1
 = 5; 
	gv2
 = 6; ;

465 3: 
v0
 = 6; 
	gv1
 = 5; 
	gv2
 = 7; ;

467 4: 
v0
 = 0; 
	gv1
 = 6; 
	gv2
 = 2; ;

468 5: 
v0
 = 0; 
	gv1
 = 4; 
	gv2
 = 6; ;

470 6: 
v0
 = 1; 
	gv1
 = 3; 
	gv2
 = 7; ;

471 7: 
v0
 = 1; 
	gv1
 = 7; 
	gv2
 = 5; ;

473 8: 
v0
 = 1; 
	gv1
 = 4; 
	gv2
 = 0; ;

474 9: 
v0
 = 1; 
	gv1
 = 5; 
	gv2
 = 4; ;

476 10: 
v0
 = 2; 
	gv1
 = 7; 
	gv2
 = 3; ;

477 11: 
v0
 = 2; 
	gv1
 = 6; 
	gv2
 = 7; ;

479 if((
	gvÆid
=
öãr£˘
 (
löe
, 
poöts
[
v0
],Öoöts[
v1
],Öoöts[
v2
],

480 
öãr
, 
b¨y
, 
‰⁄t
)Ë=
åue
)

482 if(
‰⁄t
 =
åue
)

484 
íãrPoöt
 = 
öãr
;

485 
	gvÆidI¡î£˘i⁄
 = 
vÆid
;

489 
	gexôPoöt
 = 
öãr
;

490 
	gvÆidI¡î£˘i⁄
 = 
vÆid
;

494  
	gvÆidI¡î£˘i⁄
;

497 
	gãm∂©e
<
˛ass
 
	gT
>

498 
boﬁ
 
öãr£˘s
(c⁄° 
Box
< 
Vec3
<
T
> > &
box
,

499 c⁄° 
Löe3
<
T
> &
löe
,

500 
Vec3
<
T
> &
ªsu…
)

508 c⁄° 
	gright
 = 0;

509 c⁄° 
	gÀ·
 = 1;

510 c⁄° 
	gmiddÀ
 = 2;

512 c⁄° 
	gVec3
<
	gT
> &
	gmöB
 = 
box
.
mö
;

513 c⁄° 
	gVec3
<
	gT
> &
	gmaxB
 = 
box
.
max
;

514 c⁄° 
	gVec3
<
	gT
> &
	g‹igö
 = 
löe
.
pos
;

515 c⁄° 
	gVec3
<
	gT
> &
	gdú
 = 
löe
.
dú
;

517 
boﬁ
 
	göside
 = 
åue
;

518 
	gquadø¡
[3];

519 
	gwhichPœ√
;

520 
	gmaxT
[3];

521 
	gˇndid©ePœ√
[3];

525 
	gi
=0; i<3; i++)

527 if(
	g‹igö
[
i
] < 
	gmöB
[i])

529 
	gquadø¡
[
i
] = 
À·
;

530 
	gˇndid©ePœ√
[
i
] = 
möB
[i];

531 
	göside
 = 
Ál£
;

533 i‡(
	g‹igö
[
i
] > 
	gmaxB
[i])

535 
	gquadø¡
[
i
] = 
right
;

536 
	gˇndid©ePœ√
[
i
] = 
maxB
[i];

537 
	göside
 = 
Ál£
;

541 
	gquadø¡
[
i
] = 
middÀ
;

546 i‡–
	göside
 )

548 
	gªsu…
 = 
‹igö
;

549  
	gåue
;

554 
	gi
 = 0; i < 3; i++)

556 i‡(
	gquadø¡
[
i
] !
middÀ
 && 
dú
[i] !=0.)

558 
maxT
[
i
] = (
ˇndid©ePœ√
[i]-
‹igö
[i]Ë/ 
dú
[i];

562 
	gmaxT
[
i
] = -1.;

567 
	gwhichPœ√
 = 0;

569 
	gi
 = 1; i < 3; i++)

571 i‡(
	gmaxT
[
whichPœ√
] < maxT[
i
])

573 
	gwhichPœ√
 = 
i
;

578 i‡(
	gmaxT
[
whichPœ√
] < 0.Ë 
	gÁl£
;

580 
	gi
 = 0; i < 3; i++)

582 i‡(
	gwhichPœ√
 !
i
)

584 
ªsu…
[
i
] = 
‹igö
[i] + 
maxT
[
whichPœ√
] *
dú
[i];

586 i‡((
	gquadø¡
[
i
] =
right
 && 
ªsu…
[i] < 
möB
[i]) ||

587 (
quadø¡
[
i
] =
À·
 && 
ªsu…
[i] > 
maxB
[i]))

589  
Ál£
;

594 
	gªsu…
[
i
] = 
ˇndid©ePœ√
[i];

598  
	gåue
;

601 
	gãm∂©e
<
˛ass
 
	gT
>

602 
boﬁ
 
öãr£˘s
(c⁄° 
Box
< 
Vec3
<
T
> > &
box
, c⁄° 
Löe3
<T> &
löe
)

604 
	gVec3
<
	gT
> 
	gign‹ed
;

605  
öãr£˘s
(
box
,
löe
,
ign‹ed
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h

37 #i‚de‡
INCLUDED_IMATHCOLOR_H


38 
	#INCLUDED_IMATHCOLOR_H


	)

46 
	~"Im©hVec.h
"

47 
	~"hÆf.h
"

49 
«me•a˚
 
	gIm©h
 {

52 
	gãm∂©e
 <
˛ass
 
	gT
>

53 
˛ass
 
	gCﬁ‹3
: 
public
 
Vec3
 <
T
>

55 
public
:

61 
Cﬁ‹3
 ();

62 
ex∂icô
 
Cﬁ‹3
 (
T
 
a
);

63 
Cﬁ‹3
 (
T
 
a
, T 
b
, T 
c
);

70 
Cﬁ‹3
 (c⁄° Cﬁ‹3 &
c
);

71 
	gãm∂©e
 <
˛ass
 
	gS
> 
Cﬁ‹3
 (c⁄° 
Vec3
<
S
> &
v
);

73 c⁄° 
	gCﬁ‹3
 & 
	g›î©‹
 = (c⁄° 
Cﬁ‹3
 &
c
);

80 c⁄° 
	gCﬁ‹3
 & 
	g›î©‹
 +(c⁄° 
Cﬁ‹3
 &
c
);

81 
Cﬁ‹3
 
	g›î©‹
 + (c⁄° 
	gCﬁ‹3
 &
	gc
) const;

88 c⁄° 
	gCﬁ‹3
 & 
	g›î©‹
 -(c⁄° 
Cﬁ‹3
 &
c
);

89 
Cﬁ‹3
 
	g›î©‹
 - (c⁄° 
	gCﬁ‹3
 &
	gc
) const;

96 
Cﬁ‹3
 
	g›î©‹
 - () const;

97 c⁄° 
	gCﬁ‹3
 & 
√g©e
 ();

104 c⁄° 
	gCﬁ‹3
 & 
	g›î©‹
 *(c⁄° 
Cﬁ‹3
 &
c
);

105 c⁄° 
	gCﬁ‹3
 & 
	g›î©‹
 *(
T
 
a
);

106 
Cﬁ‹3
 
	g›î©‹
 * (c⁄° 
	gCﬁ‹3
 &
	gc
) const;

107 
Cﬁ‹3
 
	g›î©‹
 * (
T
 
	ga
) const;

114 c⁄° 
	gCﬁ‹3
 & 
	g›î©‹
 /(c⁄° 
Cﬁ‹3
 &
c
);

115 c⁄° 
	gCﬁ‹3
 & 
	g›î©‹
 /(
T
 
a
);

116 
Cﬁ‹3
 
	g›î©‹
 / (c⁄° 
	gCﬁ‹3
 &
	gc
) const;

117 
Cﬁ‹3
 
	g›î©‹
 / (
T
 
	ga
) const;

120 
	gãm∂©e
 <
˛ass
 
	gT
> cœs†
	cCﬁ‹4


122 
	gpublic
:

128 
T
 
r
, 
	gg
, 
	gb
, 
	ga
;

130 
	gT
 & 
	g›î©‹
 [] (
	gi
);

131 c⁄° 
	gT
 & 
	g›î©‹
 [] (
	gi
) const;

138 
Cﬁ‹4
 ();

139 
ex∂icô
 
Cﬁ‹4
 (
T
 
a
);

140 
Cﬁ‹4
 (
T
 
a
, T 
b
, T 
c
, T 
d
);

147 
Cﬁ‹4
 (c⁄° Cﬁ‹4 &
v
);

148 
	gãm∂©e
 <
˛ass
 
	gS
> 
Cﬁ‹4
 (c⁄° Cﬁ‹4<
S
> &
v
);

150 c⁄° 
	gCﬁ‹4
 & 
	g›î©‹
 = (c⁄° 
Cﬁ‹4
 &
v
);

157 
	gãm∂©e
 <
˛ass
 
	gS
>

158 
£tVÆue
 (
S
 
a
, S 
b
, S 
c
, S 
d
);

160 
	gãm∂©e
 <
˛ass
 
	gS
>

161 
£tVÆue
 (c⁄° 
Cﬁ‹4
<
S
> &
v
);

163 
	gãm∂©e
 <
˛ass
 
	gS
>

164 
gëVÆue
 (
S
 &
a
, S &
b
, S &
c
, S &
d
) const;

166 
	gãm∂©e
 <
˛ass
 
	gS
>

167 
gëVÆue
 (
Cﬁ‹4
<
S
> &
v
) const;

169 
T
 * 
gëVÆue
();

170 c⁄° 
T
 * 
gëVÆue
() const;

177 
	gãm∂©e
 <
˛ass
 
	gS
>

178 
boﬁ
 
	g›î©‹
 =(c⁄° 
Cﬁ‹4
<
S
> &
v
) const;

180 
	gãm∂©e
 <
˛ass
 
	gS
>

181 
boﬁ
 
	g›î©‹
 !(c⁄° 
Cﬁ‹4
<
S
> &
v
) const;

188 c⁄° 
	gCﬁ‹4
 & 
	g›î©‹
 +(c⁄° 
Cﬁ‹4
 &
v
);

189 
Cﬁ‹4
 
	g›î©‹
 + (c⁄° 
	gCﬁ‹4
 &
	gv
) const;

196 c⁄° 
	gCﬁ‹4
 & 
	g›î©‹
 -(c⁄° 
Cﬁ‹4
 &
v
);

197 
Cﬁ‹4
 
	g›î©‹
 - (c⁄° 
	gCﬁ‹4
 &
	gv
) const;

204 
Cﬁ‹4
 
	g›î©‹
 - () const;

205 c⁄° 
	gCﬁ‹4
 & 
√g©e
 ();

212 c⁄° 
	gCﬁ‹4
 & 
	g›î©‹
 *(c⁄° 
Cﬁ‹4
 &
v
);

213 c⁄° 
	gCﬁ‹4
 & 
	g›î©‹
 *(
T
 
a
);

214 
Cﬁ‹4
 
	g›î©‹
 * (c⁄° 
	gCﬁ‹4
 &
	gv
) const;

215 
Cﬁ‹4
 
	g›î©‹
 * (
T
 
	ga
) const;

222 c⁄° 
	gCﬁ‹4
 & 
	g›î©‹
 /(c⁄° 
Cﬁ‹4
 &
v
);

223 c⁄° 
	gCﬁ‹4
 & 
	g›î©‹
 /(
T
 
a
);

224 
Cﬁ‹4
 
	g›î©‹
 / (c⁄° 
	gCﬁ‹4
 &
	gv
) const;

225 
Cﬁ‹4
 
	g›î©‹
 / (
T
 
	ga
) const;

232 
dimísi⁄s
() { 4;}

239 
T
 
ba£Ty≥Mö
(Ë{ 
	glimôs
<
	gT
>::
mö
();}

240 
T
 
ba£Ty≥Max
(Ë{ 
	glimôs
<
	gT
>::
max
();}

241 
T
 
ba£Ty≥SmÆÀ°
(Ë{ 
	glimôs
<
	gT
>::
smÆÀ°
();}

242 
T
 
ba£Ty≥Epsû⁄
(Ë{ 
	glimôs
<
	gT
>::
ïsû⁄
();}

251 
T
 
	tBa£Ty≥
;

258 
	gãm∂©e
 <
˛ass
 
	gT
>

259 
	g°d
::
o°ªam
 & 
›î©‹
 << (
°d
::o°ªam &
s
, c⁄° 
	gCﬁ‹4
<
	gT
> &
	gv
);

265 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
> 
	gCﬁ‹4
<T> 
	g›î©‹
 * (
S
 
	ga
, c⁄° Cﬁ‹4<T> &
	gv
);

271 
	gCﬁ‹3
<> 
	tCﬁ‹3f
;

272 
	gCﬁ‹3
<
	thÆf
> 
	tCﬁ‹3h
;

273 
	gCﬁ‹3
<> 
	tCﬁ‹3c
;

274 
	gCﬁ‹3
<
	thÆf
> 
	tC3h
;

275 
	gCﬁ‹3
<> 
	tC3f
;

276 
	gCﬁ‹3
<> 
	tC3c
;

277 
	gCﬁ‹4
<> 
	tCﬁ‹4f
;

278 
	gCﬁ‹4
<
	thÆf
> 
	tCﬁ‹4h
;

279 
	gCﬁ‹4
<> 
	tCﬁ‹4c
;

280 
	gCﬁ‹4
<> 
	tC4f
;

281 
	gCﬁ‹4
<
	thÆf
> 
	tC4h
;

282 
	gCﬁ‹4
<> 
	tC4c
;

283 
	tPackedCﬁ‹
;

290 
	gãm∂©e
 <
˛ass
 
	gT
>

291 
ölöe


292 
	gCﬁ‹3
<
	gT
>::
	$Cﬁ‹3
 (): 
Vec3
 <
T
> ()

295 
	}
}

297 
ãm∂©e
 <
˛ass
 
T
>

298 
ölöe


299 
Cﬁ‹3
<
T
>::
	$Cﬁ‹3
 (
T
 
a
): 
Vec3
 <T> (a)

302 
	}
}

304 
ãm∂©e
 <
˛ass
 
T
>

305 
ölöe


306 
Cﬁ‹3
<
T
>::
	$Cﬁ‹3
 (
T
 
a
, T 
b
, T 
c
): 
Vec3
 <T> (a, b, c)

309 
	}
}

311 
	gãm∂©e
 <
˛ass
 
	gT
>

312 
ölöe


313 
	gCﬁ‹3
<
	gT
>::
	$Cﬁ‹3
 (c⁄° 
Cﬁ‹3
 &
c
): 
Vec3
 <
T
> (c)

316 
	}
}

318 
ãm∂©e
 <
˛ass
 
T
>

319 
ãm∂©e
 <
˛ass
 
S
>

320 
ölöe


321 
Cﬁ‹3
<
T
>::Cﬁ‹3 (c⁄° 
Vec3
<
S
> &
v
): Vec3 <T> (v)

326 
ãm∂©e
 <
˛ass
 
T
>

327 
ölöe
 c⁄° 
Cﬁ‹3
<
T
> &

328 
Cﬁ‹3
<
T
>::
›î©‹
 = (c⁄° Cﬁ‹3 &
c
)

330 *((
Vec3
<
T
> *Ë
this
Ë
c
;

331  *
	gthis
;

334 
	gãm∂©e
 <
˛ass
 
	gT
>

335 
ölöe
 c⁄° 
	gCﬁ‹3
<
	gT
> &

336 
	gCﬁ‹3
<
	gT
>::
›î©‹
 +(c⁄° 
Cﬁ‹3
 &
c
)

338 *((
Vec3
<
T
> *Ë
this
Ë+
c
;

339  *
	gthis
;

342 
	gãm∂©e
 <
˛ass
 
	gT
>

343 
ölöe
 
	gCﬁ‹3
<
	gT
>

344 
	gCﬁ‹3
<
	gT
>::
›î©‹
 + (c⁄° 
Cﬁ‹3
 &
c
) const

346  
Cﬁ‹3
 (*(
Vec3
<
T
> *)
this
 + (c⁄° Vec3<T> &)
c
);

349 
	gãm∂©e
 <
˛ass
 
	gT
>

350 
ölöe
 c⁄° 
	gCﬁ‹3
<
	gT
> &

351 
	gCﬁ‹3
<
	gT
>::
›î©‹
 -(c⁄° 
Cﬁ‹3
 &
c
)

353 *((
Vec3
<
T
> *Ë
this
Ë-
c
;

354  *
	gthis
;

357 
	gãm∂©e
 <
˛ass
 
	gT
>

358 
ölöe
 
	gCﬁ‹3
<
	gT
>

359 
	gCﬁ‹3
<
	gT
>::
›î©‹
 - (c⁄° 
Cﬁ‹3
 &
c
) const

361  
Cﬁ‹3
 (*(
Vec3
<
T
> *)
this
 - (c⁄° Vec3<T> &)
c
);

364 
	gãm∂©e
 <
˛ass
 
	gT
>

365 
ölöe
 
	gCﬁ‹3
<
	gT
>

366 
	gCﬁ‹3
<
	gT
>::
›î©‹
 - () const

368  
Cﬁ‹3
 (-(*(
Vec3
<
T
> *)
this
));

371 
	gãm∂©e
 <
˛ass
 
	gT
>

372 
ölöe
 c⁄° 
	gCﬁ‹3
<
	gT
> &

373 
	gCﬁ‹3
<
	gT
>::
	$√g©e
 ()

375 ((
Vec3
<
T
> *Ë
this
)->
	`√g©e
();

376  *
this
;

377 
	}
}

379 
	gãm∂©e
 <
˛ass
 
	gT
>

380 
ölöe
 c⁄° 
	gCﬁ‹3
<
	gT
> &

381 
	gCﬁ‹3
<
	gT
>::
›î©‹
 *(c⁄° 
Cﬁ‹3
 &
c
)

383 *((
Vec3
<
T
> *Ë
this
Ë*
c
;

384  *
	gthis
;

387 
	gãm∂©e
 <
˛ass
 
	gT
>

388 
ölöe
 c⁄° 
	gCﬁ‹3
<
	gT
> &

389 
	gCﬁ‹3
<
	gT
>::
›î©‹
 *(
T
 
a
)

391 *((
Vec3
<
T
> *Ë
this
Ë*
a
;

392  *
	gthis
;

395 
	gãm∂©e
 <
˛ass
 
	gT
>

396 
ölöe
 
	gCﬁ‹3
<
	gT
>

397 
	gCﬁ‹3
<
	gT
>::
›î©‹
 * (c⁄° 
Cﬁ‹3
 &
c
) const

399  
Cﬁ‹3
 (*(
Vec3
<
T
> *)
this
 * (c⁄° Vec3<T> &)
c
);

402 
	gãm∂©e
 <
˛ass
 
	gT
>

403 
ölöe
 
	gCﬁ‹3
<
	gT
>

404 
	gCﬁ‹3
<
	gT
>::
›î©‹
 * (
T
 
a
) const

406  
Cﬁ‹3
 (*(
Vec3
<
T
> *)
this
 * 
a
);

409 
	gãm∂©e
 <
˛ass
 
	gT
>

410 
ölöe
 c⁄° 
	gCﬁ‹3
<
	gT
> &

411 
	gCﬁ‹3
<
	gT
>::
›î©‹
 /(c⁄° 
Cﬁ‹3
 &
c
)

413 *((
Vec3
<
T
> *Ë
this
Ë/
c
;

414  *
	gthis
;

417 
	gãm∂©e
 <
˛ass
 
	gT
>

418 
ölöe
 c⁄° 
	gCﬁ‹3
<
	gT
> &

419 
	gCﬁ‹3
<
	gT
>::
›î©‹
 /(
T
 
a
)

421 *((
Vec3
<
T
> *Ë
this
Ë/
a
;

422  *
	gthis
;

425 
	gãm∂©e
 <
˛ass
 
	gT
>

426 
ölöe
 
	gCﬁ‹3
<
	gT
>

427 
	gCﬁ‹3
<
	gT
>::
›î©‹
 / (c⁄° 
Cﬁ‹3
 &
c
) const

429  
Cﬁ‹3
 (*(
Vec3
<
T
> *)
this
 / (c⁄° Vec3<T> &)
c
);

432 
	gãm∂©e
 <
˛ass
 
	gT
>

433 
ölöe
 
	gCﬁ‹3
<
	gT
>

434 
	gCﬁ‹3
<
	gT
>::
›î©‹
 / (
T
 
a
) const

436  
Cﬁ‹3
 (*(
Vec3
<
T
> *)
this
 / 
a
);

443 
	gãm∂©e
 <
˛ass
 
	gT
>

444 
ölöe
 
	gT
 &

445 
	gCﬁ‹4
<
	gT
>::
›î©‹
 [] (
i
)

447  (&
r
)[
i
];

450 
	gãm∂©e
 <
˛ass
 
	gT
>

451 
ölöe
 c⁄° 
	gT
 &

452 
	gCﬁ‹4
<
	gT
>::
›î©‹
 [] (
i
) const

454  (&
r
)[
i
];

457 
	gãm∂©e
 <
˛ass
 
	gT
>

458 
ölöe


459 
	gCﬁ‹4
<
	gT
>::
	$Cﬁ‹4
 ()

462 
	}
}

464 
ãm∂©e
 <
˛ass
 
T
>

465 
ölöe


466 
Cﬁ‹4
<
T
>::
	$Cﬁ‹4
 (
T
 
x
)

468 
r
 = 
g
 = 
b
 = 
a
 = 
x
;

469 
	}
}

471 
	gãm∂©e
 <
˛ass
 
	gT
>

472 
ölöe


473 
	gCﬁ‹4
<
	gT
>::
	$Cﬁ‹4
 (
T
 
x
, T 
y
, T 
z
, T 
w
)

475 
r
 = 
x
;

476 
g
 = 
y
;

477 
b
 = 
z
;

478 
a
 = 
w
;

479 
	}
}

481 
	gãm∂©e
 <
˛ass
 
	gT
>

482 
ölöe


483 
	gCﬁ‹4
<
	gT
>::
	$Cﬁ‹4
 (c⁄° 
Cﬁ‹4
 &
v
)

485 
r
 = 
v
.r;

486 
g
 = 
v
.g;

487 
b
 = 
v
.b;

488 
a
 = 
v
.a;

489 
	}
}

491 
	gãm∂©e
 <
˛ass
 
	gT
>

492 
	gãm∂©e
 <
˛ass
 
	gS
>

493 
ölöe


494 
	gCﬁ‹4
<
	gT
>::
Cﬁ‹4
 (c⁄° Cﬁ‹4<
S
> &
v
)

496 
r
 = 
T
 (
v
.r);

497 
	gg
 = 
T
 (
v
.
g
);

498 
	gb
 = 
T
 (
v
.
b
);

499 
	ga
 = 
T
 (
v
.
a
);

502 
	gãm∂©e
 <
˛ass
 
	gT
>

503 
ölöe
 c⁄° 
	gCﬁ‹4
<
	gT
> &

504 
	gCﬁ‹4
<
	gT
>::
›î©‹
 = (c⁄° 
Cﬁ‹4
 &
v
)

506 
r
 = 
v
.r;

507 
	gg
 = 
v
.
g
;

508 
	gb
 = 
v
.
b
;

509 
	ga
 = 
v
.
a
;

510  *
	gthis
;

513 
	gãm∂©e
 <
˛ass
 
	gT
>

514 
	gãm∂©e
 <
˛ass
 
	gS
>

515 
ölöe
 

516 
	gCﬁ‹4
<
	gT
>::
	$£tVÆue
 (
S
 
x
, S 
y
, S 
z
, S 
w
)

518 
r
 = 
	`T
 (
x
);

519 
g
 = 
	`T
 (
y
);

520 
b
 = 
	`T
 (
z
);

521 
a
 = 
	`T
 (
w
);

522 
	}
}

524 
	gãm∂©e
 <
˛ass
 
	gT
>

525 
	gãm∂©e
 <
˛ass
 
	gS
>

526 
ölöe
 

527 
	gCﬁ‹4
<
	gT
>::
£tVÆue
 (c⁄° 
Cﬁ‹4
<
S
> &
v
)

529 
r
 = 
T
 (
v
.r);

530 
	gg
 = 
T
 (
v
.
g
);

531 
	gb
 = 
T
 (
v
.
b
);

532 
	ga
 = 
T
 (
v
.
a
);

535 
	gãm∂©e
 <
˛ass
 
	gT
>

536 
	gãm∂©e
 <
˛ass
 
	gS
>

537 
ölöe
 

538 
	gCﬁ‹4
<
	gT
>::
	$gëVÆue
 (
S
 &
x
, S &
y
, S &
z
, S &
w
) const

540 
x
 = 
	`S
 (
r
);

541 
y
 = 
	`S
 (
g
);

542 
z
 = 
	`S
 (
b
);

543 
w
 = 
	`S
 (
a
);

544 
	}
}

546 
	gãm∂©e
 <
˛ass
 
	gT
>

547 
	gãm∂©e
 <
˛ass
 
	gS
>

548 
ölöe
 

549 
	gCﬁ‹4
<
	gT
>::
gëVÆue
 (
Cﬁ‹4
<
S
> &
v
) const

551 
v
.
r
 = 
S
 (r);

552 
	gv
.
	gg
 = 
S
 (
g
);

553 
	gv
.
	gb
 = 
S
 (
b
);

554 
	gv
.
	ga
 = 
S
 (
a
);

557 
	gãm∂©e
 <
˛ass
 
	gT
>

558 
ölöe
 
T
 *

559 
	gCﬁ‹4
<
	gT
>::
	$gëVÆue
()

561  (
T
 *Ë&
r
;

562 
	}
}

564 
	gãm∂©e
 <
˛ass
 
	gT
>

565 
ölöe
 c⁄° 
T
 *

566 
	gCﬁ‹4
<
	gT
>::
	$gëVÆue
() const

568  (c⁄° 
T
 *Ë&
r
;

569 
	}
}

571 
	gãm∂©e
 <
˛ass
 
	gT
>

572 
	gãm∂©e
 <
˛ass
 
	gS
>

573 
ölöe
 
boﬁ


574 
	gCﬁ‹4
<
	gT
>::
›î©‹
 =(c⁄° 
Cﬁ‹4
<
S
> &
v
) const

576  
r
 =
v
.∏&& 
g
 =v.g && 
b
 =v.b && 
a
 == v.a;

579 
	gãm∂©e
 <
˛ass
 
	gT
>

580 
	gãm∂©e
 <
˛ass
 
	gS
>

581 
ölöe
 
boﬁ


582 
	gCﬁ‹4
<
	gT
>::
›î©‹
 !(c⁄° 
Cﬁ‹4
<
S
> &
v
) const

584  
r
 !
v
.∏|| 
g
 !v.g || 
b
 !v.b || 
a
 != v.a;

587 
	gãm∂©e
 <
˛ass
 
	gT
>

588 
ölöe
 c⁄° 
	gCﬁ‹4
<
	gT
> &

589 
	gCﬁ‹4
<
	gT
>::
›î©‹
 +(c⁄° 
Cﬁ‹4
 &
v
)

591 
r
 +
v
.r;

592 
	gg
 +
v
.
g
;

593 
	gb
 +
v
.
b
;

594 
	ga
 +
v
.
a
;

595  *
	gthis
;

598 
	gãm∂©e
 <
˛ass
 
	gT
>

599 
ölöe
 
	gCﬁ‹4
<
	gT
>

600 
	gCﬁ‹4
<
	gT
>::
›î©‹
 + (c⁄° 
Cﬁ‹4
 &
v
) const

602  
Cﬁ‹4
 (
r
 + 
v
.r, 
g
 + v.g, 
b
 + v.b, 
a
 + v.a);

605 
	gãm∂©e
 <
˛ass
 
	gT
>

606 
ölöe
 c⁄° 
	gCﬁ‹4
<
	gT
> &

607 
	gCﬁ‹4
<
	gT
>::
›î©‹
 -(c⁄° 
Cﬁ‹4
 &
v
)

609 
r
 -
v
.r;

610 
	gg
 -
v
.
g
;

611 
	gb
 -
v
.
b
;

612 
	ga
 -
v
.
a
;

613  *
	gthis
;

616 
	gãm∂©e
 <
˛ass
 
	gT
>

617 
ölöe
 
	gCﬁ‹4
<
	gT
>

618 
	gCﬁ‹4
<
	gT
>::
›î©‹
 - (c⁄° 
Cﬁ‹4
 &
v
) const

620  
Cﬁ‹4
 (
r
 - 
v
.r, 
g
 - v.g, 
b
 - v.b, 
a
 - v.a);

623 
	gãm∂©e
 <
˛ass
 
	gT
>

624 
ölöe
 
	gCﬁ‹4
<
	gT
>

625 
	gCﬁ‹4
<
	gT
>::
›î©‹
 - () const

627  
Cﬁ‹4
 (-
r
, -
g
, -
b
, -
a
);

630 
	gãm∂©e
 <
˛ass
 
	gT
>

631 
ölöe
 c⁄° 
	gCﬁ‹4
<
	gT
> &

632 
	gCﬁ‹4
<
	gT
>::
	$√g©e
 ()

634 
r
 = -r;

635 
g
 = -g;

636 
b
 = -b;

637 
a
 = -a;

638  *
this
;

639 
	}
}

641 
	gãm∂©e
 <
˛ass
 
	gT
>

642 
ölöe
 c⁄° 
	gCﬁ‹4
<
	gT
> &

643 
	gCﬁ‹4
<
	gT
>::
›î©‹
 *(c⁄° 
Cﬁ‹4
 &
v
)

645 
r
 *
v
.r;

646 
	gg
 *
v
.
g
;

647 
	gb
 *
v
.
b
;

648 
	ga
 *
v
.
a
;

649  *
	gthis
;

652 
	gãm∂©e
 <
˛ass
 
	gT
>

653 
ölöe
 c⁄° 
	gCﬁ‹4
<
	gT
> &

654 
	gCﬁ‹4
<
	gT
>::
›î©‹
 *(
T
 
x
)

656 
r
 *
x
;

657 
	gg
 *
x
;

658 
	gb
 *
x
;

659 
	ga
 *
x
;

660  *
	gthis
;

663 
	gãm∂©e
 <
˛ass
 
	gT
>

664 
ölöe
 
	gCﬁ‹4
<
	gT
>

665 
	gCﬁ‹4
<
	gT
>::
›î©‹
 * (c⁄° 
Cﬁ‹4
 &
v
) const

667  
Cﬁ‹4
 (
r
 * 
v
.r, 
g
 * v.g, 
b
 * v.b, 
a
 * v.a);

670 
	gãm∂©e
 <
˛ass
 
	gT
>

671 
ölöe
 
	gCﬁ‹4
<
	gT
>

672 
	gCﬁ‹4
<
	gT
>::
›î©‹
 * (
T
 
x
) const

674  
Cﬁ‹4
 (
r
 * 
x
, 
g
 * x, 
b
 * x, 
a
 * x);

677 
	gãm∂©e
 <
˛ass
 
	gT
>

678 
ölöe
 c⁄° 
	gCﬁ‹4
<
	gT
> &

679 
	gCﬁ‹4
<
	gT
>::
›î©‹
 /(c⁄° 
Cﬁ‹4
 &
v
)

681 
r
 /
v
.r;

682 
	gg
 /
v
.
g
;

683 
	gb
 /
v
.
b
;

684 
	ga
 /
v
.
a
;

685  *
	gthis
;

688 
	gãm∂©e
 <
˛ass
 
	gT
>

689 
ölöe
 c⁄° 
	gCﬁ‹4
<
	gT
> &

690 
	gCﬁ‹4
<
	gT
>::
›î©‹
 /(
T
 
x
)

692 
r
 /
x
;

693 
	gg
 /
x
;

694 
	gb
 /
x
;

695 
	ga
 /
x
;

696  *
	gthis
;

699 
	gãm∂©e
 <
˛ass
 
	gT
>

700 
ölöe
 
	gCﬁ‹4
<
	gT
>

701 
	gCﬁ‹4
<
	gT
>::
›î©‹
 / (c⁄° 
Cﬁ‹4
 &
v
) const

703  
Cﬁ‹4
 (
r
 / 
v
.r, 
g
 / v.g, 
b
 / v.b, 
a
 / v.a);

706 
	gãm∂©e
 <
˛ass
 
	gT
>

707 
ölöe
 
	gCﬁ‹4
<
	gT
>

708 
	gCﬁ‹4
<
	gT
>::
›î©‹
 / (
T
 
x
) const

710  
Cﬁ‹4
 (
r
 / 
x
, 
g
 / x, 
b
 / x, 
a
 / x);

714 
	gãm∂©e
 <
˛ass
 
	gT
>

715 
	g°d
::
o°ªam
 &

716 
›î©‹
 << (
°d
::
o°ªam
 &
s
, c⁄° 
	gCﬁ‹4
<
	gT
> &
	gv
)

718  
	gs
 << '(' << 
	gv
.
	gr
 << ' ' << v.
	gg
 << ' ' << v.
	gb
 << ' ' << v.
	ga
 << ')';

725 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

726 
ölöe
 
	gCﬁ‹4
<
	gT
>

727 
	g›î©‹
 * (
S
 
	gx
, c⁄° 
	gCﬁ‹4
<
	gT
> &
	gv
)

729  
	gCﬁ‹4
<
	gT
> (
x
 * 
	gv
.
	gr
, x * v.
	gg
, x * v.
	gb
, x * v.
	ga
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColorAlgo.h

37 #i‚de‡
INCLUDED_IMATHCOLORALGO_H


38 
	#INCLUDED_IMATHCOLORALGO_H


	)

41 
	~"Im©hCﬁ‹.h
"

42 
	~"Im©hM©h.h
"

43 
	~"Im©hLimôs.h
"

45 
«me•a˚
 
	gIm©h
 {

53 
	gVec3
<> 
hsv2rgb_d
(c⁄° 
Vec3
<> &
hsv
);

55 
	gCﬁ‹4
<> 
hsv2rgb_d
(c⁄° 
Cﬁ‹4
<> &
hsv
);

58 
	gVec3
<> 
rgb2hsv_d
(c⁄° 
Vec3
<> &
rgb
);

60 
	gCﬁ‹4
<> 
rgb2hsv_d
(c⁄° 
Cﬁ‹4
<> &
rgb
);

70 
	gãm∂©e
<
˛ass
 
	gT
>

71 
	gVec3
<
	gT
>

72 
hsv2rgb
(c⁄° 
Vec3
<
T
> &
hsv
)

74 i‡–
	glimôs
<
	gT
>::
isI¡egøl
() )

76 
Vec3
<> 
v
 = Vec3<>(
hsv
.
x
 / (
limôs
<
T
>::
max
()),

77 
	ghsv
.
	gy
 / (
	glimôs
<
	gT
>::
max
()),

78 
	ghsv
.
	gz
 / (
	glimôs
<
	gT
>::
max
()));

79 
	gVec3
<> 
	gc
 = 
hsv2rgb_d
(
v
);

80  
	gVec3
<
	gT
>((TË(
	gc
.
x
 * 
	glimôs
<T>::
max
()),

81 (
	gT
Ë(
	gc
.
y
 * 
	glimôs
<T>::
max
()),

82 (
	gT
Ë(
	gc
.
z
 * 
	glimôs
<T>::
max
()));

86 
	gVec3
<> 
	gv
 = 
Vec3
<>(
hsv
.
x
, 
	ghsv
.
	gy
, hsv.
	gz
);

87 
	gVec3
<> 
	gc
 = 
hsv2rgb_d
(
v
);

88  
	gVec3
<
	gT
>((TË
	gc
.
	gx
, (TËc.
	gy
, (TËc.
	gz
);

93 
	gãm∂©e
<
˛ass
 
	gT
>

94 
	gCﬁ‹4
<
	gT
>

95 
hsv2rgb
(c⁄° 
Cﬁ‹4
<
T
> &
hsv
)

97 i‡–
	glimôs
<
	gT
>::
isI¡egøl
() )

99 
Cﬁ‹4
<> 
v
 = Cﬁ‹4<>(
hsv
.
r
 / (
limôs
<
T
>::
max
()),

100 
	ghsv
.
	gg
 / (
	glimôs
<
	gT
>::
max
()),

101 
	ghsv
.
	gb
 / (
	glimôs
<
	gT
>::
max
()),

102 
	ghsv
.
	ga
 / (
	glimôs
<
	gT
>::
max
()));

103 
	gCﬁ‹4
<> 
	gc
 = 
hsv2rgb_d
(
v
);

104  
	gCﬁ‹4
<
	gT
>((TË(
	gc
.
r
 * 
	glimôs
<T>::
max
()),

105 (
	gT
Ë(
	gc
.
g
 * 
	glimôs
<T>::
max
()),

106 (
	gT
Ë(
	gc
.
b
 * 
	glimôs
<T>::
max
()),

107 (
	gT
Ë(
	gc
.
a
 * 
	glimôs
<T>::
max
()));

111 
	gCﬁ‹4
<> 
	gv
 = 
Cﬁ‹4
<>(
hsv
.
r
, 
	ghsv
.
	gg
, hsv.g, hsv.
	ga
);

112 
	gCﬁ‹4
<> 
	gc
 = 
hsv2rgb_d
(
v
);

113  
	gCﬁ‹4
<
	gT
>((TË
	gc
.
	gr
, (TËc.
	gg
, (TËc.
	gb
, (TËc.
	ga
);

118 
	gãm∂©e
<
˛ass
 
	gT
>

119 
	gVec3
<
	gT
>

120 
rgb2hsv
(c⁄° 
Vec3
<
T
> &
rgb
)

122 i‡–
	glimôs
<
	gT
>::
isI¡egøl
() )

124 
Vec3
<> 
v
 = Vec3<>(
rgb
.
x
 / (
limôs
<
T
>::
max
()),

125 
	grgb
.
	gy
 / (
	glimôs
<
	gT
>::
max
()),

126 
	grgb
.
	gz
 / (
	glimôs
<
	gT
>::
max
()));

127 
	gVec3
<> 
	gc
 = 
rgb2hsv_d
(
v
);

128  
	gVec3
<
	gT
>((TË(
	gc
.
x
 * 
	glimôs
<T>::
max
()),

129 (
	gT
Ë(
	gc
.
y
 * 
	glimôs
<T>::
max
()),

130 (
	gT
Ë(
	gc
.
z
 * 
	glimôs
<T>::
max
()));

134 
	gVec3
<> 
	gv
 = 
Vec3
<>(
rgb
.
x
, 
	grgb
.
	gy
,Ñgb.
	gz
);

135 
	gVec3
<> 
	gc
 = 
rgb2hsv_d
(
v
);

136  
	gVec3
<
	gT
>((TË
	gc
.
	gx
, (TËc.
	gy
, (TËc.
	gz
);

141 
	gãm∂©e
<
˛ass
 
	gT
>

142 
	gCﬁ‹4
<
	gT
>

143 
rgb2hsv
(c⁄° 
Cﬁ‹4
<
T
> &
rgb
)

145 i‡–
	glimôs
<
	gT
>::
isI¡egøl
() )

147 
Cﬁ‹4
<> 
v
 = Cﬁ‹4<>(
rgb
.
r
 / (
limôs
<
T
>::
max
()),

148 
	grgb
.
	gg
 / (
	glimôs
<
	gT
>::
max
()),

149 
	grgb
.
	gb
 / (
	glimôs
<
	gT
>::
max
()),

150 
	grgb
.
	ga
 / (
	glimôs
<
	gT
>::
max
()));

151 
	gCﬁ‹4
<> 
	gc
 = 
rgb2hsv_d
(
v
);

152  
	gCﬁ‹4
<
	gT
>((TË(
	gc
.
r
 * 
	glimôs
<T>::
max
()),

153 (
	gT
Ë(
	gc
.
g
 * 
	glimôs
<T>::
max
()),

154 (
	gT
Ë(
	gc
.
b
 * 
	glimôs
<T>::
max
()),

155 (
	gT
Ë(
	gc
.
a
 * 
	glimôs
<T>::
max
()));

159 
	gCﬁ‹4
<> 
	gv
 = 
Cﬁ‹4
<>(
rgb
.
r
, 
	grgb
.
	gg
,Ñgb.g,Ñgb.
	ga
);

160 
	gCﬁ‹4
<> 
	gc
 = 
rgb2hsv_d
(
v
);

161  
	gCﬁ‹4
<
	gT
>((TË
	gc
.
	gr
, (TËc.
	gg
, (TËc.
	gb
, (TËc.
	ga
);

165 
	gãm∂©e
 <
˛ass
 
	gT
>

166 
PackedCﬁ‹


167 
rgb2∑cked
(c⁄° 
Vec3
<
T
> &
c
)

169 i‡–
	glimôs
<
	gT
>::
isI¡egøl
() )

171 
x
 = 
c
.x / (
limôs
<
T
>::
max
());

172 
	gy
 = 
c
.
y
 / (
limôs
<
T
>::
max
());

173 
	gz
 = 
c
.
z
 / (
limôs
<
T
>::
max
());

174  
rgb2∑cked
–
V3f
(
x
,
y
,
z
) );

178  ( (
	gPackedCﬁ‹
Ë(
	gc
.
	gx
 * 255) |

179 (((
	gPackedCﬁ‹
Ë(
	gc
.
	gy
 * 255)) << 8) |

180 (((
	gPackedCﬁ‹
Ë(
	gc
.
	gz
 * 255)) << 16) | 0xFF000000 );

184 
	gãm∂©e
 <
˛ass
 
	gT
>

185 
PackedCﬁ‹


186 
rgb2∑cked
(c⁄° 
Cﬁ‹4
<
T
> &
c
)

188 i‡–
	glimôs
<
	gT
>::
isI¡egøl
() )

190 
r
 = 
c
.∏/ (
limôs
<
T
>::
max
());

191 
	gg
 = 
c
.
g
 / (
limôs
<
T
>::
max
());

192 
	gb
 = 
c
.
b
 / (
limôs
<
T
>::
max
());

193 
	ga
 = 
c
.
a
 / (
limôs
<
T
>::
max
());

194  
rgb2∑cked
–
C4f
(
r
,
g
,
b
,
a
) );

198  ( (
	gPackedCﬁ‹
Ë(
	gc
.
	gr
 * 255) |

199 (((
	gPackedCﬁ‹
Ë(
	gc
.
	gg
 * 255)) << 8) |

200 (((
	gPackedCﬁ‹
Ë(
	gc
.
	gb
 * 255)) << 16) |

201 (((
	gPackedCﬁ‹
Ë(
	gc
.
	ga
 * 255)) << 24));

211 
	gãm∂©e
 <
˛ass
 
	gT
>

213 
∑cked2rgb
(
PackedCﬁ‹
 
∑cked
, 
Vec3
<
T
> &
out
)

215 i‡–
	glimôs
<
	gT
>::
isI¡egøl
() )

217 
T
 
f
 = 
limôs
<T>::
max
(Ë/ ((
PackedCﬁ‹
)0xFF);

218 
	gout
.
	gx
 = (
∑cked
 & 0xFFË* 
f
;

219 
	gout
.
	gy
 = ((
∑cked
 & 0xFF00Ë>> 8Ë* 
f
;

220 
	gout
.
	gz
 = ((
∑cked
 & 0xFF0000Ë>> 16Ë* 
f
;

224 
T
 
	gf
 = T(1) / T(255);

225 
	gout
.
	gx
 = (
∑cked
 & 0xFFË* 
f
;

226 
	gout
.
	gy
 = ((
∑cked
 & 0xFF00Ë>> 8Ë* 
f
;

227 
	gout
.
	gz
 = ((
∑cked
 & 0xFF0000Ë>> 16Ë* 
f
;

231 
	gãm∂©e
 <
˛ass
 
	gT
>

233 
∑cked2rgb
(
PackedCﬁ‹
 
∑cked
, 
Cﬁ‹4
<
T
> &
out
)

235 i‡–
	glimôs
<
	gT
>::
isI¡egøl
() )

237 
T
 
f
 = 
limôs
<T>::
max
(Ë/ ((
PackedCﬁ‹
)0xFF);

238 
	gout
.
	gr
 = (
∑cked
 & 0xFFË* 
f
;

239 
	gout
.
	gg
 = ((
∑cked
 & 0xFF00Ë>> 8Ë* 
f
;

240 
	gout
.
	gb
 = ((
∑cked
 & 0xFF0000Ë>> 16Ë* 
f
;

241 
	gout
.
	ga
 = ((
∑cked
 & 0xFF000000Ë>> 24Ë* 
f
;

245 
T
 
	gf
 = T(1) / T(255);

246 
	gout
.
	gr
 = (
∑cked
 & 0xFFË* 
f
;

247 
	gout
.
	gg
 = ((
∑cked
 & 0xFF00Ë>> 8Ë* 
f
;

248 
	gout
.
	gb
 = ((
∑cked
 & 0xFF0000Ë>> 16Ë* 
f
;

249 
	gout
.
	ga
 = ((
∑cked
 & 0xFF000000Ë>> 24Ë* 
f
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h

37 #i‚de‡
INCLUDED_IMATHEULER_H


38 
	#INCLUDED_IMATHEULER_H


	)

128 
	~"Im©hM©h.h
"

129 
	~"Im©hVec.h
"

130 
	~"Im©hQu©.h
"

131 
	~"Im©hM©rix.h
"

132 
	~"Im©hLimôs.h
"

133 
	~<io°ªam
>

135 
«me•a˚
 
	gIm©h
 {

137 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


139 #¥agm®
w¨nög
(
dißbÀ
:4244)

142 
	gãm∂©e
 <
˛ass
 
	gT
>

143 
˛ass
 
	gEuÀr
 : 
public
 
Vec3
<
T
>

145 
public
:

147 
usög
 
Vec3
<
T
>::
x
;

148 
usög
 
	gVec3
<
	gT
>::
y
;

149 
usög
 
	gVec3
<
	gT
>::
z
;

151 
	eOrdî


157 
	gXYZ
 = 0x0101,

158 
	gXZY
 = 0x0001,

159 
	gYZX
 = 0x1101,

160 
	gYXZ
 = 0x1001,

161 
	gZXY
 = 0x2101,

162 
	gZYX
 = 0x2001,

164 
	gXZX
 = 0x0011,

165 
	gXYX
 = 0x0111,

166 
	gYXY
 = 0x1011,

167 
	gYZY
 = 0x1111,

168 
	gZYZ
 = 0x2011,

169 
	gZXZ
 = 0x2111,

171 
	gXYZr
 = 0x2000,

172 
	gXZYr
 = 0x2100,

173 
	gYZXr
 = 0x1000,

174 
	gYXZr
 = 0x1100,

175 
	gZXYr
 = 0x0000,

176 
	gZYXr
 = 0x0100,

178 
	gXZXr
 = 0x2110,

179 
	gXYXr
 = 0x2010,

180 
	gYXYr
 = 0x1110,

181 
	gYZYr
 = 0x1010,

182 
	gZYZr
 = 0x0110,

183 
	gZXZr
 = 0x0010,

193 
	gLegÆ
 = 
XYZ
 | 
XZY
 | 
YZX
 | 
YXZ
 | 
ZXY
 | 
ZYX
 |

194 
XZX
 | 
XYX
 | 
YXY
 | 
YZY
 | 
ZYZ
 | 
ZXZ
 |

195 
XYZr
| 
XZYr
| 
YZXr
| 
YXZr
| 
ZXYr
| 
ZYXr
|

196 
XZXr
| 
XYXr
| 
YXYr
| 
YZYr
| 
ZYZr
| 
ZXZr
,

198 
	gMö
 = 0x0000,

199 
	gMax
 = 0x2111,

200 
	gDeÁu…
 = 
XYZ


203 
	eAxis
 { 
	gX
 = 0, 
	gY
 = 1, 
	gZ
 = 2 };

205 
	eI≈utLayout
 { 
	gXYZLayout
, 
	gIJKLayout
 };

212 
EuÀr
();

213 
EuÀr
(const Euler&);

214 
EuÀr
(
Ordî
 
p
);

215 
EuÀr
(c⁄° 
Vec3
<
T
> &
v
, 
Ordî
 
o
 = 
DeÁu…
, 
I≈utLayout
 
l
 = 
IJKLayout
);

216 
EuÀr
(
T
 
i
, T 
j
, T 
k
, 
Ordî
 
o
 = 
DeÁu…
, 
I≈utLayout
 
l
 = 
IJKLayout
);

217 
EuÀr
(c⁄° EuÀr<
T
> &
euÀr
, 
Ordî
 
√wp
);

218 
EuÀr
(c⁄° 
M©rix33
<
T
> &, 
Ordî
 
o
 = 
DeÁu…
);

219 
EuÀr
(c⁄° 
M©rix44
<
T
> &, 
Ordî
 
o
 = 
DeÁu…
);

225 c⁄° 
	gEuÀr
<
	gT
>& 
	g›î©‹
(c⁄° 
EuÀr
<
T
>&);

226 c⁄° 
	gEuÀr
<
	gT
>& 
	g›î©‹
(c⁄° 
Vec3
<
T
>&);

234 
boﬁ
 
ÀgÆ
(
Ordî
);

236 
£tXYZVe˘‹
(c⁄° 
Vec3
<
T
> &);

238 
Ordî
 
‹dî
() const;

239 
£tOrdî
(
Ordî
);

241 
£t
(
Axis
 
öôül
,

242 
boﬁ
 
ªœtive
,

243 
boﬁ
 
∑rôyEví
,

244 
boﬁ
 
fú°Rïóts
);

253 
exåa˘
(c⁄° 
M©rix33
<
T
>&);

254 
exåa˘
(c⁄° 
M©rix44
<
T
>&);

255 
exåa˘
(c⁄° 
Qu©
<
T
>&);

257 
	gM©rix33
<
	gT
> 
toM©rix33
() const;

258 
	gM©rix44
<
	gT
> 
toM©rix44
() const;

259 
	gQu©
<
	gT
> 
toQu©
() const;

260 
	gVec3
<
	gT
> 
toXYZVe˘‹
() const;

266 
™gÀOrdî
(&
i
, &
j
, &
k
) const;

273 
™gÀM≠pög
(&
i
, &
j
, &
k
) const;

299 
™gÀMod
 (
T
 
™gÀ
);

300 
sim∂eXYZRŸ©i⁄
 (
Vec3
<
T
> &
xyzRŸ
,

301 c⁄° 
Vec3
<
T
> &
èrgëXyzRŸ
);

302 
√¨e°RŸ©i⁄
 (
Vec3
<
T
> &
xyzRŸ
,

303 c⁄° 
Vec3
<
T
> &
èrgëXyzRŸ
,

304 
Ordî
 
‹dî
 = 
XYZ
);

306 
makeNór
 (c⁄° 
EuÀr
<
T
> &
èrgë
);

308 
boﬁ
 
‰ameSètic
(Ëc⁄° {  
	g_‰ameSètic
; }

309 
boﬁ
 
öôülRïóãd
(Ëc⁄° {  
	g_öôülRïóãd
; }

310 
boﬁ
 
∑rôyEví
(Ëc⁄° {  
	g_∑rôyEví
; }

311 
Axis
 
öôülAxis
(Ëc⁄° {  
	g_öôülAxis
; }

313 
	g¥Ÿe˘ed
:

315 
boﬁ
 
_‰ameSètic
 : 1;

316 
boﬁ
 
	g_öôülRïóãd
 : 1;

317 
boﬁ
 
	g_∑rôyEví
 : 1;

318 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


319 
Axis
 
	g_öôülAxis
 ;

321 
Axis
 
	g_öôülAxis
 : 2;

330 
	gEuÀr
<> 
	tEuÀrf
;

331 
	gEuÀr
<> 
	tEuÀrd
;

338 
	gãm∂©e
<
˛ass
 
	gT
>

339 
ölöe
 

340 
	gEuÀr
<
	gT
>::
™gÀOrdî
(&
i
, &
j
, &
k
) const

342 
	gi
 = 
_öôülAxis
;

343 
	gj
 = 
_∑rôyEví
 ? (
i
+1)%3 : (i > 0 ? i-1 : 2);

344 
	gk
 = 
_∑rôyEví
 ? (
i
 > 0 ? i-1 : 2) : (i+1)%3;

347 
	gãm∂©e
<
˛ass
 
	gT
>

348 
ölöe
 

349 
	gEuÀr
<
	gT
>::
™gÀM≠pög
(&
i
, &
j
, &
k
) const

351 
	gm
[3];

353 
	gm
[
_öôülAxis
] = 0;

354 
	gm
[(
_öôülAxis
+1Ë% 3] = 
_∑rôyEví
 ? 1 : 2;

355 
	gm
[(
_öôülAxis
+2Ë% 3] = 
_∑rôyEví
 ? 2 : 1;

356 
	gi
 = 
m
[0];

357 
	gj
 = 
m
[1];

358 
	gk
 = 
m
[2];

361 
	gãm∂©e
<
˛ass
 
	gT
>

362 
ölöe
 

363 
	gEuÀr
<
	gT
>::
£tXYZVe˘‹
(c⁄° 
Vec3
<
T
> &
v
)

365 
i
,
	gj
,
	gk
;

366 
™gÀM≠pög
(
i
,
j
,
k
);

367 (*
	gthis
)[
i
] = 
v
.
x
;

368 (*
	gthis
)[
j
] = 
v
.
y
;

369 (*
	gthis
)[
k
] = 
v
.
z
;

372 
	gãm∂©e
<
˛ass
 
	gT
>

373 
ölöe
 
	gVec3
<
	gT
>

374 
	gEuÀr
<
	gT
>::
toXYZVe˘‹
() const

376 
i
,
	gj
,
	gk
;

377 
™gÀM≠pög
(
i
,
j
,
k
);

378  
	gVec3
<
	gT
>((*
	gthis
)[
i
],(*this)[
j
],(*this)[
k
]);

382 
	gãm∂©e
<
˛ass
 
	gT
>

383 
	gEuÀr
<
	gT
>::
EuÀr
() :

384 
Vec3
<
T
>(0,0,0),

385 
_‰ameSètic
(
åue
),

386 
_öôülRïóãd
(
Ál£
),

387 
_∑rôyEví
(
åue
),

388 
_öôülAxis
(
X
)

391 
	gãm∂©e
<
˛ass
 
	gT
>

392 
	gEuÀr
<
	gT
>::
EuÀr
(
ty≥«me
 EuÀr<
T
>::
Ordî
 
p
) :

393 
Vec3
<
T
>(0,0,0),

394 
_‰ameSètic
(
åue
),

395 
_öôülRïóãd
(
Ál£
),

396 
_∑rôyEví
(
åue
),

397 
_öôülAxis
(
X
)

399 
£tOrdî
(
p
);

402 
	gãm∂©e
<
˛ass
 
	gT
>

403 
ölöe
 
	gEuÀr
<
	gT
>::
EuÀr
–c⁄° 
Vec3
<
T
> &
v
,

404 
ty≥«me
 
EuÀr
<
T
>::
Ordî
 
p
,

405 
ty≥«me
 
EuÀr
<
T
>::
I≈utLayout
 
l
 )

407 
£tOrdî
(
p
);

408 i‡–
	gl
 =
XYZLayout
 ) 
£tXYZVe˘‹
(
v
);

409 { 
	gx
 = 
v
.
x
; 
	gy
 = v.
y
; 
	gz
 = v.
z
; }

412 
	gãm∂©e
<
˛ass
 
	gT
>

413 
ölöe
 
	gEuÀr
<
	gT
>::
EuÀr
(c⁄° EuÀr<
T
> &
euÀr
)

415 
›î©‹
=(
euÀr
);

418 
	gãm∂©e
<
˛ass
 
	gT
>

419 
ölöe
 
	gEuÀr
<
	gT
>::
EuÀr
(c⁄° EuÀr<
T
> &
euÀr
,
Ordî
 
p
)

421 
£tOrdî
(
p
);

422 
	gM©rix33
<
	gT
> 
	gM
 = 
euÀr
.
toM©rix33
();

423 
exåa˘
(
M
);

426 
	gãm∂©e
<
˛ass
 
	gT
>

427 
ölöe
 
	gEuÀr
<
	gT
>::
EuÀr
–
T
 
xi
, T 
yi
, T 
zi
,

428 
ty≥«me
 
EuÀr
<
T
>::
Ordî
 
p
,

429 
ty≥«me
 
EuÀr
<
T
>::
I≈utLayout
 
l
)

431 
£tOrdî
(
p
);

432 i‡–
	gl
 =
XYZLayout
 ) 
£tXYZVe˘‹
(
Vec3
<
T
>(
xi
,
yi
,
zi
));

433 { 
	gx
 = 
xi
; 
	gy
 = 
yi
; 
	gz
 = 
zi
; }

436 
	gãm∂©e
<
˛ass
 
	gT
>

437 
ölöe
 
	gEuÀr
<
	gT
>::
EuÀr
–c⁄° 
M©rix33
<
T
> &
M
, 
ty≥«me
 EuÀr::
Ordî
 
p
 )

439 
£tOrdî
(
p
);

440 
exåa˘
(
M
);

443 
	gãm∂©e
<
˛ass
 
	gT
>

444 
ölöe
 
	gEuÀr
<
	gT
>::
EuÀr
–c⁄° 
M©rix44
<
T
> &
M
, 
ty≥«me
 EuÀr::
Ordî
 
p
 )

446 
£tOrdî
(
p
);

447 
exåa˘
(
M
);

450 
	gãm∂©e
<
˛ass
 
	gT
>

451 
ölöe
 
	gEuÀr
<
	gT
>::
exåa˘
(c⁄° 
Qu©
<
T
> &
q
)

453 
exåa˘
(
q
.
toM©rix33
());

456 
	gãm∂©e
<
˛ass
 
	gT
>

457 
	gEuÀr
<
	gT
>::
exåa˘
(c⁄° 
M©rix33
<
T
> &
M
)

459 
i
,
	gj
,
	gk
;

460 
™gÀOrdî
(
i
,
j
,
k
);

462 i‡(
	g_öôülRïóãd
)

468 
	gx
 = 
M©h
<
T
>::
©™2
 (
M
[
j
][
i
], M[
k
][i]);

476 
	gVec3
<
	gT
> 
r
 (0, 0, 0);

477 
	gr
[
i
] = (
_∑rôyEví
? -
x
: x);

479 
	gM©rix44
<
	gT
> 
	gN
;

480 
	gN
.
rŸ©e
 (
r
);

482 
	gN
 = 
N
 * 
M©rix44
<
T
> (
M
[0][0], 
	gM
[0][1], M[0][2], 0,

483 
	gM
[1][0], M[1][1], M[1][2], 0,

484 
	gM
[2][0], M[2][1], M[2][2], 0,

490 
T
 
	gsy
 = 
M©h
<T>::
sqπ
 (
N
[
j
][
i
]*N[j][i] + N[
k
][i]*N[k][i]);

491 
	gy
 = 
M©h
<
T
>::
©™2
 (
sy
, 
N
[
i
][i]);

492 
	gz
 = 
M©h
<
T
>::
©™2
 (
N
[
j
][
k
], N[j][j]);

500 
	gx
 = 
M©h
<
T
>::
©™2
 (
M
[
j
][
k
], M[k][k]);

508 
	gVec3
<
	gT
> 
r
 (0, 0, 0);

509 
	gr
[
i
] = (
_∑rôyEví
? -
x
: x);

511 
	gM©rix44
<
	gT
> 
	gN
;

512 
	gN
.
rŸ©e
 (
r
);

514 
	gN
 = 
N
 * 
M©rix44
<
T
> (
M
[0][0], 
	gM
[0][1], M[0][2], 0,

515 
	gM
[1][0], M[1][1], M[1][2], 0,

516 
	gM
[2][0], M[2][1], M[2][2], 0,

522 
T
 
	gcy
 = 
M©h
<T>::
sqπ
 (
N
[
i
][i]*N[i][i] + N[i][
j
]*N[i][j]);

523 
	gy
 = 
M©h
<
T
>::
©™2
 (-
N
[
i
][
k
], 
cy
);

524 
	gz
 = 
M©h
<
T
>::
©™2
 (-
N
[
j
][
i
], N[j][j]);

527 i‡(!
	g_∑rôyEví
)

528 *
	gthis
 *= -1;

530 i‡(!
	g_‰ameSètic
)

532 
T
 
	gt
 = 
x
;

533 
	gx
 = 
z
;

534 
	gz
 = 
t
;

538 
	gãm∂©e
<
˛ass
 
	gT
>

539 
	gEuÀr
<
	gT
>::
exåa˘
(c⁄° 
M©rix44
<
T
> &
M
)

541 
i
,
	gj
,
	gk
;

542 
™gÀOrdî
(
i
,
j
,
k
);

544 i‡(
	g_öôülRïóãd
)

550 
	gx
 = 
M©h
<
T
>::
©™2
 (
M
[
j
][
i
], M[
k
][i]);

558 
	gVec3
<
	gT
> 
r
 (0, 0, 0);

559 
	gr
[
i
] = (
_∑rôyEví
? -
x
: x);

561 
	gM©rix44
<
	gT
> 
	gN
;

562 
	gN
.
rŸ©e
 (
r
);

563 
	gN
 = 
N
 * 
M
;

569 
T
 
	gsy
 = 
M©h
<T>::
sqπ
 (
N
[
j
][
i
]*N[j][i] + N[
k
][i]*N[k][i]);

570 
	gy
 = 
M©h
<
T
>::
©™2
 (
sy
, 
N
[
i
][i]);

571 
	gz
 = 
M©h
<
T
>::
©™2
 (
N
[
j
][
k
], N[j][j]);

579 
	gx
 = 
M©h
<
T
>::
©™2
 (
M
[
j
][
k
], M[k][k]);

587 
	gVec3
<
	gT
> 
r
 (0, 0, 0);

588 
	gr
[
i
] = (
_∑rôyEví
? -
x
: x);

590 
	gM©rix44
<
	gT
> 
	gN
;

591 
	gN
.
rŸ©e
 (
r
);

592 
	gN
 = 
N
 * 
M
;

598 
T
 
	gcy
 = 
M©h
<T>::
sqπ
 (
N
[
i
][i]*N[i][i] + N[i][
j
]*N[i][j]);

599 
	gy
 = 
M©h
<
T
>::
©™2
 (-
N
[
i
][
k
], 
cy
);

600 
	gz
 = 
M©h
<
T
>::
©™2
 (-
N
[
j
][
i
], N[j][j]);

603 i‡(!
	g_∑rôyEví
)

604 *
	gthis
 *= -1;

606 i‡(!
	g_‰ameSètic
)

608 
T
 
	gt
 = 
x
;

609 
	gx
 = 
z
;

610 
	gz
 = 
t
;

614 
	gãm∂©e
<
˛ass
 
	gT
>

615 
	gM©rix33
<
	gT
> 
	gEuÀr
<T>::
toM©rix33
() const

617 
i
,
	gj
,
	gk
;

618 
™gÀOrdî
(
i
,
j
,
k
);

620 
	gVec3
<
	gT
> 
	g™gÀs
;

622 i‡–
	g_‰ameSètic
 ) 
	g™gÀs
 = (*
this
);

623 
	g™gÀs
 = 
Vec3
<
T
>(
z
,
	gy
,
	gx
);

625 i‡–!
	g_∑rôyEví
 ) 
	g™gÀs
 *= -1.0;

627 
T
 
	gci
 = 
M©h
<T>::
cos
(
™gÀs
.
x
);

628 
T
 
	gcj
 = 
M©h
<T>::
cos
(
™gÀs
.
y
);

629 
T
 
	gch
 = 
M©h
<T>::
cos
(
™gÀs
.
z
);

630 
T
 
	gsi
 = 
M©h
<T>::
sö
(
™gÀs
.
x
);

631 
T
 
	gsj
 = 
M©h
<T>::
sö
(
™gÀs
.
y
);

632 
T
 
	gsh
 = 
M©h
<T>::
sö
(
™gÀs
.
z
);

634 
T
 
	gcc
 = 
ci
*
ch
;

635 
T
 
	gcs
 = 
ci
*
sh
;

636 
T
 
	gsc
 = 
si
*
ch
;

637 
T
 
	gss
 = 
si
*
sh
;

639 
	gM©rix33
<
	gT
> 
	gM
;

641 i‡–
	g_öôülRïóãd
 )

643 
	gM
[
i
][i] = 
cj
; M[
j
][i] = 
sj
*
si
; M[
k
][i] = sj*
ci
;

644 
	gM
[
i
][
j
] = 
sj
*
sh
; M[j][j] = -
cj
*
ss
+
cc
; M[
k
][j] = -cj*
cs
-
sc
;

645 
	gM
[
i
][
k
] = -
sj
*
ch
; M[
j
][k] = 
cj
*
sc
+
cs
; M[k][k] = cj*
cc
-
ss
;

649 
	gM
[
i
][i] = 
cj
*
ch
; M[
j
][i] = 
sj
*
sc
-
cs
; M[
k
][i] = sj*
cc
+
ss
;

650 
	gM
[
i
][
j
] = 
cj
*
sh
; M[j][j] = 
sj
*
ss
+
cc
; M[
k
][j] = sj*
cs
-
sc
;

651 
	gM
[
i
][
k
] = -
sj
; M[
j
][k] = 
cj
*
si
; M[k][k] = cj*
ci
;

654  
	gM
;

657 
	gãm∂©e
<
˛ass
 
	gT
>

658 
	gM©rix44
<
	gT
> 
	gEuÀr
<T>::
toM©rix44
() const

660 
i
,
	gj
,
	gk
;

661 
™gÀOrdî
(
i
,
j
,
k
);

663 
	gVec3
<
	gT
> 
	g™gÀs
;

665 i‡–
	g_‰ameSètic
 ) 
	g™gÀs
 = (*
this
);

666 
	g™gÀs
 = 
Vec3
<
T
>(
z
,
	gy
,
	gx
);

668 i‡–!
	g_∑rôyEví
 ) 
	g™gÀs
 *= -1.0;

670 
T
 
	gci
 = 
M©h
<T>::
cos
(
™gÀs
.
x
);

671 
T
 
	gcj
 = 
M©h
<T>::
cos
(
™gÀs
.
y
);

672 
T
 
	gch
 = 
M©h
<T>::
cos
(
™gÀs
.
z
);

673 
T
 
	gsi
 = 
M©h
<T>::
sö
(
™gÀs
.
x
);

674 
T
 
	gsj
 = 
M©h
<T>::
sö
(
™gÀs
.
y
);

675 
T
 
	gsh
 = 
M©h
<T>::
sö
(
™gÀs
.
z
);

677 
T
 
	gcc
 = 
ci
*
ch
;

678 
T
 
	gcs
 = 
ci
*
sh
;

679 
T
 
	gsc
 = 
si
*
ch
;

680 
T
 
	gss
 = 
si
*
sh
;

682 
	gM©rix44
<
	gT
> 
	gM
;

684 i‡–
	g_öôülRïóãd
 )

686 
	gM
[
i
][i] = 
cj
; M[
j
][i] = 
sj
*
si
; M[
k
][i] = sj*
ci
;

687 
	gM
[
i
][
j
] = 
sj
*
sh
; M[j][j] = -
cj
*
ss
+
cc
; M[
k
][j] = -cj*
cs
-
sc
;

688 
	gM
[
i
][
k
] = -
sj
*
ch
; M[
j
][k] = 
cj
*
sc
+
cs
; M[k][k] = cj*
cc
-
ss
;

692 
	gM
[
i
][i] = 
cj
*
ch
; M[
j
][i] = 
sj
*
sc
-
cs
; M[
k
][i] = sj*
cc
+
ss
;

693 
	gM
[
i
][
j
] = 
cj
*
sh
; M[j][j] = 
sj
*
ss
+
cc
; M[
k
][j] = sj*
cs
-
sc
;

694 
	gM
[
i
][
k
] = -
sj
; M[
j
][k] = 
cj
*
si
; M[k][k] = cj*
ci
;

697  
	gM
;

700 
	gãm∂©e
<
˛ass
 
	gT
>

701 
	gQu©
<
	gT
> 
	gEuÀr
<T>::
toQu©
() const

703 
Vec3
<
T
> 
™gÀs
;

704 
	gi
,
	gj
,
	gk
;

705 
™gÀOrdî
(
i
,
j
,
k
);

707 i‡–
	g_‰ameSètic
 ) 
	g™gÀs
 = (*
this
);

708 
	g™gÀs
 = 
Vec3
<
T
>(
z
,
	gy
,
	gx
);

710 i‡–!
	g_∑rôyEví
 ) 
	g™gÀs
.
	gy
 = -
™gÀs
.
y
;

712 
T
 
	gti
 = 
™gÀs
.
x
*0.5;

713 
T
 
	gtj
 = 
™gÀs
.
y
*0.5;

714 
T
 
	gth
 = 
™gÀs
.
z
*0.5;

715 
T
 
	gci
 = 
M©h
<T>::
cos
(
ti
);

716 
T
 
	gcj
 = 
M©h
<T>::
cos
(
tj
);

717 
T
 
	gch
 = 
M©h
<T>::
cos
(
th
);

718 
T
 
	gsi
 = 
M©h
<T>::
sö
(
ti
);

719 
T
 
	gsj
 = 
M©h
<T>::
sö
(
tj
);

720 
T
 
	gsh
 = 
M©h
<T>::
sö
(
th
);

721 
T
 
	gcc
 = 
ci
*
ch
;

722 
T
 
	gcs
 = 
ci
*
sh
;

723 
T
 
	gsc
 = 
si
*
ch
;

724 
T
 
	gss
 = 
si
*
sh
;

726 
T
 
	g∑rôy
 = 
_∑rôyEví
 ? 1.0 : -1.0;

728 
	gQu©
<
	gT
> 
	gq
;

729 
	gVec3
<
	gT
> 
	ga
;

731 i‡–
	g_öôülRïóãd
 )

733 
	ga
[
i
] = 
cj
*(
cs
 + 
sc
);

734 
	ga
[
j
] = 
sj
*(
cc
 + 
ss
Ë* 
∑rôy
,

735 
	ga
[
k
] = 
sj
*(
cs
 - 
sc
);

736 
	gq
.
	gr
 = 
cj
*(
cc
 - 
ss
);

740 
	ga
[
i
] = 
cj
*
sc
 - 
sj
*
cs
,

741 
	ga
[
j
] = (
cj
*
ss
 + 
sj
*
cc
Ë* 
∑rôy
,

742 
	ga
[
k
] = 
cj
*
cs
 - 
sj
*
sc
;

743 
	gq
.
	gr
 = 
cj
*
cc
 + 
sj
*
ss
;

746 
	gq
.
	gv
 = 
a
;

748  
	gq
;

751 
	gãm∂©e
<
˛ass
 
	gT
>

752 
ölöe
 
boﬁ


753 
	gEuÀr
<
	gT
>::
ÀgÆ
(
ty≥«me
 
EuÀr
<
T
>::
Ordî
 
‹dî
)

755  (
‹dî
 & ~
LegÆ
Ë? 
Ál£
 : 
åue
;

758 
	gãm∂©e
<
˛ass
 
	gT
>

759 
ty≥«me
 
	gEuÀr
<
	gT
>::
Ordî


760 
EuÀr
<
T
>::
‹dî
() const

762 
foo
 = (
_öôülAxis
 =
Z
 ? 0x2000 : (_öôülAxi†=
Y
 ? 0x1000 : 0));

764 i‡(
	g_∑rôyEví
Ë
	gfoo
 |= 0x0100;

765 i‡(
	g_öôülRïóãd
Ë
	gfoo
 |= 0x0010;

766 i‡(
	g_‰ameSètic
Ë
	gfoo
++;

768  (
	gOrdî
)
	gfoo
;

771 
	gãm∂©e
<
˛ass
 
	gT
>

772 
ölöe
 
	gEuÀr
<
	gT
>::
£tOrdî
(
ty≥«me
 
EuÀr
<
T
>::
Ordî
 
p
)

774 
£t
–
p
 & 0x2000 ? 
Z
 : (∞& 0x1000 ? 
Y
 : 
X
),

775 !(
p
 & 0x1),

776 !!(
p
 & 0x100),

777 !!(
p
 & 0x10));

780 
	gãm∂©e
<
˛ass
 
	gT
>

781 
	gEuÀr
<
	gT
>::
£t
(
ty≥«me
 
EuÀr
<
T
>::
Axis
 
axis
,

782 
boﬁ
 
ªœtive
,

783 
boﬁ
 
∑rôyEví
,

784 
boﬁ
 
fú°Rïóts
)

786 
	g_öôülAxis
 = 
axis
;

787 
	g_‰ameSètic
 = !
ªœtive
;

788 
	g_∑rôyEví
 = 
∑rôyEví
;

789 
	g_öôülRïóãd
 = 
fú°Rïóts
;

792 
	gãm∂©e
<
˛ass
 
	gT
>

793 c⁄° 
	gEuÀr
<
	gT
>& EuÀr<T>::
›î©‹
(c⁄° 
EuÀr
<
T
> &
euÀr
)

795 
x
 = 
euÀr
.x;

796 
	gy
 = 
euÀr
.
y
;

797 
	gz
 = 
euÀr
.
z
;

798 
	g_öôülAxis
 = 
euÀr
.
_öôülAxis
;

799 
	g_‰ameSètic
 = 
euÀr
.
_‰ameSètic
;

800 
	g_∑rôyEví
 = 
euÀr
.
_∑rôyEví
;

801 
	g_öôülRïóãd
 = 
euÀr
.
_öôülRïóãd
;

802  *
	gthis
;

805 
	gãm∂©e
<
˛ass
 
	gT
>

806 c⁄° 
	gEuÀr
<
	gT
>& EuÀr<T>::
›î©‹
(c⁄° 
Vec3
<
T
> &
v
)

808 
x
 = 
v
.x;

809 
	gy
 = 
v
.
y
;

810 
	gz
 = 
v
.
z
;

811  *
	gthis
;

814 
	gãm∂©e
<
˛ass
 
	gT
>

815 
	g°d
::
o°ªam
& 
›î©‹
 << (
°d
::o°ªam &
o
, c⁄° 
	gEuÀr
<
	gT
> &
	geuÀr
)

817 
	ga
[3] = { 'X', 'Y', 'Z' };

819 c⁄° * 
	gr
 = 
euÀr
.
‰ameSètic
() ? "" : "r";

820 
	gi
,
	gj
,
	gk
;

821 
	geuÀr
.
™gÀOrdî
(
i
,
j
,
k
);

823 i‡–
	geuÀr
.
öôülRïóãd
(ËË
	gk
 = 
i
;

825  
	go
 << "("

826 << 
	geuÀr
.
	gx
 << " "

827 << 
	geuÀr
.
	gy
 << " "

828 << 
	geuÀr
.
	gz
 << " "

829 << 
	ga
[
i
] <<á[
j
] <<á[
k
] << 
	gr
 << ")";

832 
	gãm∂©e
 <
˛ass
 
	gT
>

834 
	gEuÀr
<
	gT
>::
™gÀMod
 (
T
 
™gÀ
)

836 
™gÀ
 = 
fmod
(
T
 (™gÀ), T (2 * 
M_PI
));

838 i‡(
	g™gÀ
 < -
	gM_PI
Ë™gÀ +2 * 
M_PI
;

839 i‡(
	g™gÀ
 > +
	gM_PI
Ë™gÀ -2 * 
M_PI
;

841  
	g™gÀ
;

844 
	gãm∂©e
 <
˛ass
 
	gT
>

846 
	gEuÀr
<
	gT
>::
sim∂eXYZRŸ©i⁄
 (
Vec3
<
T
> &
xyzRŸ
, c⁄° Vec3<T> &
èrgëXyzRŸ
)

848 
	gVec3
<
	gT
> 
	gd
 = 
xyzRŸ
 - 
èrgëXyzRŸ
;

849 
	gxyzRŸ
[0] = 
èrgëXyzRŸ
[0] + 
™gÀMod
(
d
[0]);

850 
	gxyzRŸ
[1] = 
èrgëXyzRŸ
[1] + 
™gÀMod
(
d
[1]);

851 
	gxyzRŸ
[2] = 
èrgëXyzRŸ
[2] + 
™gÀMod
(
d
[2]);

854 
	gãm∂©e
 <
˛ass
 
	gT
>

856 
	gEuÀr
<
	gT
>::
√¨e°RŸ©i⁄
 (
Vec3
<
T
> &
xyzRŸ
, c⁄° Vec3<T> &
èrgëXyzRŸ
,

857 
Ordî
 
‹dî
)

859 
	gi
,
	gj
,
	gk
;

860 
	gEuÀr
<
	gT
> 
e
 (0,0,0, 
‹dî
);

861 
	ge
.
™gÀOrdî
(
i
,
j
,
k
);

863 
sim∂eXYZRŸ©i⁄
(
xyzRŸ
, 
èrgëXyzRŸ
);

865 
	gVec3
<
	gT
> 
	gŸhîXyzRŸ
;

866 
	gŸhîXyzRŸ
[
i
] = 
M_PI
+
xyzRŸ
[i];

867 
	gŸhîXyzRŸ
[
j
] = 
M_PI
-
xyzRŸ
[j];

868 
	gŸhîXyzRŸ
[
k
] = 
M_PI
+
xyzRŸ
[k];

870 
sim∂eXYZRŸ©i⁄
(
ŸhîXyzRŸ
, 
èrgëXyzRŸ
);

872 
	gVec3
<
	gT
> 
	gd
 = 
xyzRŸ
 - 
èrgëXyzRŸ
;

873 
	gVec3
<
	gT
> 
	god
 = 
ŸhîXyzRŸ
 - 
èrgëXyzRŸ
;

874 
T
 
	gdMag
 = 
d
.
dŸ
(d);

875 
T
 
	godMag
 = 
od
.
dŸ
(od);

877 i‡(
	godMag
 < 
	gdMag
)

879 
	gxyzRŸ
 = 
ŸhîXyzRŸ
;

883 
	gãm∂©e
 <
˛ass
 
	gT
>

885 
	gEuÀr
<
	gT
>::
makeNór
 (c⁄° 
EuÀr
<
T
> &
èrgë
)

887 
Vec3
<
T
> 
xyzRŸ
 = 
toXYZVe˘‹
();

888 
	gEuÀr
<
	gT
> 
	gèrgëSameOrdî
 = 
EuÀr
<
T
>(
èrgë
, 
‹dî
());

889 
	gVec3
<
	gT
> 
	gèrgëXyz
 = 
èrgëSameOrdî
.
toXYZVe˘‹
();

891 
√¨e°RŸ©i⁄
(
xyzRŸ
, 
èrgëXyz
, 
‹dî
());

893 
£tXYZVe˘‹
(
xyzRŸ
);

896 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


897 #¥agm®
w¨nög
(:4244)

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathExc.h

37 #i‚de‡
INCLUDED_IMATHEXC_H


38 
	#INCLUDED_IMATHEXC_H


	)

47 
	~"IexBa£Exc.h
"

49 
«me•a˚
 
	gIm©h
 {

52 
DEFINE_EXC
 (
NuŒVecExc
, ::
Iex
::
M©hExc
)

55 
DEFINE_EXC
 (
NuŒQu©Exc
, ::
Iex
::
M©hExc
)

58 
DEFINE_EXC
 (
SögM©rixExc
, ::
Iex
::
M©hExc
)

61 
DEFINE_EXC
 (
ZîoSˇÀExc
, ::
Iex
::
M©hExc
)

64 
DEFINE_EXC
 (
I¡VecN‹mÆizeExc
, ::
Iex
::
M©hExc
)

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrame.h

37 #i‚de‡
INCLUDED_IMATHFRAME_H


38 
	#INCLUDED_IMATHFRAME_H


	)

40 
«me•a˚
 
	gIm©h
 {

42 
	gãm∂©e
<
˛ass
 
	gT
> cœs†
	gVec3
;

43 
	gãm∂©e
<
˛ass
 
	gT
> cœs†
	gM©rix44
;

63 
	gãm∂©e
<
˛ass
 
	gT
> 
	gM©rix44
<T> 
fú°Føme
–c⁄° 
Vec3
<
T
>&,

64 c⁄° 
Vec3
<
T
>&,

65 c⁄° 
Vec3
<
T
>& );

67 
	gãm∂©e
<
˛ass
 
	gT
> 
	gM©rix44
<T> 
√xtFøme
–c⁄° 
M©rix44
<
T
>&,

68 c⁄° 
Vec3
<
T
>&,

69 c⁄° 
Vec3
<
T
>&,

70 
Vec3
<
T
>&,

71 
Vec3
<
T
>& );

73 
	gãm∂©e
<
˛ass
 
	gT
> 
	gM©rix44
<T> 
œ°Føme
–c⁄° 
M©rix44
<
T
>&,

74 c⁄° 
Vec3
<
T
>&,

75 c⁄° 
Vec3
<
T
>& );

88 
	gãm∂©e
<
˛ass
 
	gT
> 
	gM©rix44
<T> 
	gfú°Føme


90 c⁄° 
	gVec3
<
	gT
>& 
	gpi
,

91 c⁄° 
	gVec3
<
	gT
>& 
	gpj
,

92 c⁄° 
	gVec3
<
	gT
>& 
	gpk
 )

94 
	gVec3
<
	gT
> 
	gt
 = 
pj
 - 
pi
;Å.
n‹mÆizeExc
();

96 
	gVec3
<
	gT
> 
	gn
 = 
t
.
¸oss
–
pk
 - 
pi
 );Ç.
n‹mÆize
();

97 if–
	gn
.
Àngth
() == 0.0f )

99 
i
 = 
Ábs
–
t
[0] ) < fabs(Å[1] ) ? 0 : 1;

100 if–
Ábs
–
t
[2] ) < fabs–t[
i
] )Ë
	gi
 = 2;

102 
	gVec3
<
	gT
> 
v
–0.0, 0.0, 0.0 ); 
	gv
[
i
] = 1.0;

103 
	gn
 = 
t
.
¸oss
–
v
 );Ç.
n‹mÆize
();

106 
	gVec3
<
	gT
> 
	gb
 = 
t
.
¸oss
–
n
 );

108 
	gM©rix44
<
	gT
> 
	gM
;

110 
	gM
[0][0] = 
t
[0]; M[0][1] =Å[1]; M[0][2] =Å[2]; M[0][3] = 0.0,

111 
	gM
[1][0] = 
n
[0]; M[1][1] =Ç[1]; M[1][2] =Ç[2]; M[1][3] = 0.0,

112 
	gM
[2][0] = 
b
[0]; M[2][1] = b[1]; M[2][2] = b[2]; M[2][3] = 0.0,

113 
	gM
[3][0] = 
pi
[0]; M[3][1] =Öi[1]; M[3][2] =Öi[2]; M[3][3] = 1.0;

115  
	gM
;

126 
	gãm∂©e
<
˛ass
 
	gT
> 
	gM©rix44
<T> 
	g√xtFøme


128 c⁄° 
	gM©rix44
<
	gT
>& 
	gMi
,

129 c⁄° 
	gVec3
<
	gT
>& 
	gpi
,

130 c⁄° 
	gVec3
<
	gT
>& 
	gpj
,

131 
	gVec3
<
	gT
>& 
	gti
,

132 
	gVec3
<
	gT
>& 
	gtj
 )

134 
	gVec3
<
	gT
> 
a
(0.0, 0.0, 0.0);

135 
T
 
	gr
 = 0.0;

137 if–
	gti
.
Àngth
(Ë!0.0 && 
tj
.length() != 0.0 )

139 
ti
.
n‹mÆize
(); 
	gtj
.normalize();

140 
T
 
	gdŸ
 = 
ti
.
dŸ
–
tj
 );

146 if–
	gdŸ
 > 1.0 ) dot = 1.0;

147 if–
	gdŸ
 < -1.0 ) dot = -1.0;

149 
	gr
 = 
acosf
–
dŸ
 );

150 
	ga
 = 
ti
.
¸oss
–
tj
 );

153 if–
	ga
.
Àngth
(Ë!0.0 && 
r
 != 0.0 )

155 
M©rix44
<
T
> 
R
; 
	gR
.
£tAxisAngÀ
–
a
, 
r
 );

156 
	gM©rix44
<
	gT
> 
	gTj
; Tj.
å™¶©e
–
pj
 );

157 
	gM©rix44
<
	gT
> 
	gTi
; Ti.
å™¶©e
–-
pi
 );

159  
Mi
 * 
Ti
 * 
R
 * 
	gTj
;

163 
	gM©rix44
<
	gT
> 
	gTr
; Tr.
å™¶©e
–
pj
 - 
pi
 );

165  
Mi
 * 
	gTr
;

177 
	gãm∂©e
<
˛ass
 
	gT
> 
	gM©rix44
<T> 
	gœ°Føme


179 c⁄° 
	gM©rix44
<
	gT
>& 
	gMi
,

180 c⁄° 
	gVec3
<
	gT
>& 
	gpi
,

181 c⁄° 
	gVec3
<
	gT
>& 
	gpj
 )

183 
	gM©rix44
<
	gT
> 
	gTr
; Tr.
å™¶©e
–
pj
 - 
pi
 );

185  
Mi
 * 
	gTr
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h

37 #i‚de‡
INCLUDED_IMATHFRUSTUM_H


38 
	#INCLUDED_IMATHFRUSTUM_H


	)

41 
	~"Im©hVec.h
"

42 
	~"Im©hPœ√.h
"

43 
	~"Im©hLöe.h
"

44 
	~"Im©hM©rix.h
"

45 
	~"Im©hLimôs.h
"

46 
	~"Im©hFun.h
"

47 
	~"IexM©hExc.h
"

49 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


50 #ifde‡
√¨


51 #unde‡
√¨


53 #ifde‡
Ár


54 #unde‡
Ár


58 
«me•a˚
 
	gIm©h
 {

73 
	gãm∂©e
<
˛ass
 
	gT
>

74 ˛as†
	cFru°um


76 
	gpublic
:

77 
Fru°um
();

78 
Fru°um
(const Frustum &);

79 
Fru°um
(
T
 
√¨
, T 
Ár
, T 
À·
, T 
right
, T 
t›
, T 
bŸtom
, 
boﬁ
 
‹tho
=
Ál£
);

80 
Fru°um
(
T
 
√¨
, T 
Ár
, T 
fovx
, T 
fovy
, T 
a•e˘
);

81 
	gvútuÆ
 ~
Fru°um
();

87 c⁄° 
	gFru°um
 &
	g›î©‹
 = (c⁄° 
Fru°um
 &);

93 
boﬁ
 
	g›î©‹
 =(c⁄° 
Fru°um
<
T
> &
§c
) const;

94 
boﬁ
 
	g›î©‹
 !(c⁄° 
Fru°um
<
T
> &
§c
) const;

100 
£t
(
T
 
√¨
, T 
Ár
,

101 
T
 
À·
, T 
right
,

102 
T
 
t›
, T 
bŸtom
,

103 
boﬁ
 
‹tho
=
Ál£
);

105 
£t
(
T
 
√¨
, T 
Ár
, T 
fovx
, T 
fovy
, T 
a•e˘
);

111 
modifyNórAndF¨
(
T
 
√¨
, T 
Ár
);

112 
£tOπhogøphic
(
boﬁ
);

118 
boﬁ
 
‹thogøphic
(Ëc⁄° {  
	g_‹thogøphic
; }

119 
T
 
√¨
(Ëc⁄° {  
	g_√¨
; }

120 
T
 
Ár
(Ëc⁄° {  
	g_Ár
; }

121 
T
 
À·
(Ëc⁄° {  
	g_À·
; }

122 
T
 
right
(Ëc⁄° {  
	g_right
; }

123 
T
 
bŸtom
(Ëc⁄° {  
	g_bŸtom
; }

124 
T
 
t›
(Ëc⁄° {  
	g_t›
; }

134 
∂™es
(
Pœ√3
<
T
> 
p
[6]);

135 
∂™es
(
Pœ√3
<
T
> 
p
[6], c⁄° 
M©rix44
<T> &
M
);

141 
T
 
fovx
() const;

142 
T
 
fovy
() const;

143 
T
 
a•e˘
() const;

144 
	gM©rix44
<
	gT
> 
¥oje˘i⁄M©rix
() const;

153 
	gFru°um
<
	gT
> 
wödow
(
T
 
À·
, T 
right
, T 
t›
, T 
bŸtom
) const;

159 
	gLöe3
<
	gT
> 
¥oje˘S¸ìnToRay
–c⁄° 
Vec2
<
T
> & ) const;

160 
	gVec2
<
	gT
> 
¥oje˘PoötToS¸ìn
–c⁄° 
Vec3
<
T
> & ) const;

162 
T
 
ZToDïth
(
zvÆ
, 
mö
, 
max
) const;

163 
T
 
n‹mÆizedZToDïth
(T 
zvÆ
) const;

164 
DïthToZ
(
T
 
dïth
, 
zmö
, 
zmax
) const;

166 
T
 
w‹ldRadius
(c⁄° 
Vec3
<T> &
p
, T 
ødius
) const;

167 
T
 
s¸ìnRadius
(c⁄° 
Vec3
<T> &
p
, T 
ødius
) const;

170 
	g¥Ÿe˘ed
:

172 
Vec2
<
T
> 
s¸ìnToLoˇl
( const Vec2<T> & ) const;

173 
	gVec2
<
	gT
> 
loˇlToS¸ìn
–c⁄° 
Vec2
<
T
> & ) const;

175 
	g¥Ÿe˘ed
:

176 
T
 
_√¨
;

177 
T
 
	g_Ár
;

178 
T
 
	g_À·
;

179 
T
 
	g_right
;

180 
T
 
	g_t›
;

181 
T
 
	g_bŸtom
;

182 
boﬁ
 
	g_‹thogøphic
;

186 
	gãm∂©e
<
˛ass
 
	gT
>

187 
ölöe
 
	gFru°um
<
	gT
>::
	$Fru°um
()

189 
	`£t
(
	`T
 (0.1),

190 
	`T
 (1000.0),

191 
	`T
 (-1.0),

192 
	`T
 (1.0),

193 
	`T
 (1.0),

194 
	`T
 (-1.0),

195 
Ál£
);

196 
	}
}

198 
	gãm∂©e
<
˛ass
 
	gT
>

199 
ölöe
 
	gFru°um
<
	gT
>::
	$Fru°um
(c⁄° 
Fru°um
 &
f
)

201 *
this
 = 
f
;

202 
	}
}

204 
	gãm∂©e
<
˛ass
 
	gT
>

205 
ölöe
 
	gFru°um
<
	gT
>::
	$Fru°um
(
T
 
n
, T 
f
, T 
l
, T 
r
, T 
t
, T 
b
, 
boﬁ
 
o
)

207 
	`£t
(
n
,
f
,
l
,
r
,
t
,
b
,
o
);

208 
	}
}

210 
	gãm∂©e
<
˛ass
 
	gT
>

211 
ölöe
 
	gFru°um
<
	gT
>::
	$Fru°um
(
T
 
√¨
, T 
Ár
, T 
fovx
, T 
fovy
, T 
a•e˘
)

213 
	`£t
(
√¨
,
Ár
,
fovx
,
fovy
,
a•e˘
);

214 
	}
}

216 
	gãm∂©e
<
˛ass
 
	gT
>

217 
	gFru°um
<
	gT
>::~
	$Fru°um
()

219 
	}
}

221 
ãm∂©e
<
˛ass
 
T
>

222 c⁄° 
Fru°um
<
T
> &

223 
Fru°um
<
T
>::
›î©‹
 = (c⁄° Fru°um &
f
)

225 
_√¨
 = 
f
._near;

226 
	g_Ár
 = 
f
.
_Ár
;

227 
	g_À·
 = 
f
.
_À·
;

228 
	g_right
 = 
f
.
_right
;

229 
	g_t›
 = 
f
.
_t›
;

230 
	g_bŸtom
 = 
f
.
_bŸtom
;

231 
	g_‹thogøphic
 = 
f
.
_‹thogøphic
;

233  *
	gthis
;

236 
	gãm∂©e
 <
˛ass
 
	gT
>

237 
boﬁ


238 
	gFru°um
<
	gT
>::
›î©‹
 =(c⁄° 
Fru°um
<
T
> &
§c
) const

241 
_√¨
 =
§c
._near &&

242 
_Ár
 =
§c
._far &&

243 
_À·
 =
§c
._left &&

244 
_right
 =
§c
._right &&

245 
_t›
 =
§c
._top &&

246 
_bŸtom
 =
§c
._bottom &&

247 
_‹thogøphic
 =
§c
._orthographic;

250 
	gãm∂©e
 <
˛ass
 
	gT
>

251 
ölöe
 
boﬁ


252 
	gFru°um
<
	gT
>::
›î©‹
 !(c⁄° 
Fru°um
<
T
> &
§c
) const

254  !
›î©‹
=(
§c
);

257 
	gãm∂©e
<
˛ass
 
	gT
>

258 
	gFru°um
<
	gT
>::
	$£t
(
T
 
n
, T 
f
, T 
l
, T 
r
, T 
t
, T 
b
, 
boﬁ
 
o
)

260 
_√¨
 = 
n
;

261 
_Ár
 = 
f
;

262 
_À·
 = 
l
;

263 
_right
 = 
r
;

264 
_bŸtom
 = 
b
;

265 
_t›
 = 
t
;

266 
_‹thogøphic
 = 
o
;

267 
	}
}

269 
	gãm∂©e
<
˛ass
 
	gT
>

270 
	gFru°um
<
	gT
>::
	$modifyNórAndF¨
(
T
 
n
, T 
f
)

272 i‡–
_‹thogøphic
 )

274 
_√¨
 = 
n
;

278 
Löe3
<
T
> 
	`lowîLe·
–
Vec3
<T>(0,0,0), Vec3<T>(
_À·
,
_bŸtom
,-
_√¨
) );

279 
Löe3
<
T
> 
	`uµîRight
–
Vec3
<T>(0,0,0), Vec3<T>(
_right
,
_t›
,-
_√¨
) );

280 
Pœ√3
<
T
> 
	`√¨Pœ√
–
Vec3
<T>(0,0,-1), 
n
 );

282 
Vec3
<
T
> 
Œ
,
ur
;

283 
√¨Pœ√
.
	`öãr£˘
(
lowîLe·
,
Œ
);

284 
√¨Pœ√
.
	`öãr£˘
(
uµîRight
,
ur
);

286 
_À·
 = 
Œ
.
x
;

287 
_right
 = 
ur
.
x
;

288 
_t›
 = 
ur
.
y
;

289 
_bŸtom
 = 
Œ
.
y
;

290 
_√¨
 = 
n
;

291 
_Ár
 = 
f
;

294 
_Ár
 = 
f
;

295 
	}
}

297 
	gãm∂©e
<
˛ass
 
	gT
>

298 
	gFru°um
<
	gT
>::
	$£tOπhogøphic
(
boﬁ
 
‹tho
)

300 
_‹thogøphic
 = 
‹tho
;

301 
	}
}

303 
	gãm∂©e
<
˛ass
 
	gT
>

304 
	gFru°um
<
	gT
>::
	$£t
(
T
 
√¨
, T 
Ár
, T 
fovx
, T 
fovy
, T 
a•e˘
)

306 i‡(
fovx
 !0 && 
fovy
 != 0)

307 
throw
 
Iex
::
	`ArgExc
 ("fovxánd fovy cannot both beÇon-zero.");

309 i‡(
fovx
 != 0)

311 
_right
 = 
√¨
 * 
M©h
<
T
>::
	`èn
(
fovx
/2.0);

312 
_À·
 = -
_right
;

313 
_t›
 = ((
_right
 - 
_À·
)/
a•e˘
)/2.0;

314 
_bŸtom
 = -
_t›
;

318 
_t›
 = 
√¨
 * 
M©h
<
T
>::
	`èn
(
fovy
/2.0);

319 
_bŸtom
 = -
_t›
;

320 
_right
 = (
_t›
 - 
_bŸtom
Ë* 
a•e˘
 / 2.0;

321 
_À·
 = -
_right
;

323 
_√¨
 = 
√¨
;

324 
_Ár
 = 
Ár
;

325 
_‹thogøphic
 = 
Ál£
;

326 
	}
}

328 
	gãm∂©e
<
˛ass
 
	gT
>

329 
T
 
	gFru°um
<
	gT
>::
	$fovx
() const

331  
M©h
<
T
>::
	`©™2
(
_right
,
_√¨
Ë- M©h<T>::©™2(
_À·
,_near);

332 
	}
}

334 
	gãm∂©e
<
˛ass
 
	gT
>

335 
T
 
	gFru°um
<
	gT
>::
	$fovy
() const

337  
M©h
<
T
>::
	`©™2
(
_t›
,
_√¨
Ë- M©h<T>::©™2(
_bŸtom
,_near);

338 
	}
}

340 
	gãm∂©e
<
˛ass
 
	gT
>

341 
T
 
	gFru°um
<
	gT
>::
	$a•e˘
() const

343 
T
 
rightMöusLe·
 = 
_right
-
_À·
;

344 
T
 
t›MöusBŸtom
 = 
_t›
-
_bŸtom
;

346 i‡(
	`abs
(
t›MöusBŸtom
) < 1 &&

347 
	`abs
(
rightMöusLe·
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
t›MöusBŸtom
))

349 
throw
 
Iex
::
	`DivzîoExc
 ("Bad viewing frustum: "

353  
rightMöusLe·
 / 
t›MöusBŸtom
;

354 
	}
}

356 
	gãm∂©e
<
˛ass
 
	gT
>

357 
	gM©rix44
<
	gT
> 
	gFru°um
<T>::
	$¥oje˘i⁄M©rix
() const

359 
T
 
rightPlusLe·
 = 
_right
+
_À·
;

360 
T
 
rightMöusLe·
 = 
_right
-
_À·
;

362 
T
 
t›PlusBŸtom
 = 
_t›
+
_bŸtom
;

363 
T
 
t›MöusBŸtom
 = 
_t›
-
_bŸtom
;

365 
T
 
ÁrPlusNór
 = 
_Ár
+
_√¨
;

366 
T
 
ÁrMöusNór
 = 
_Ár
-
_√¨
;

368 i‡((
	`abs
(
rightMöusLe·
) < 1 &&

369 
	`abs
(
rightPlusLe·
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
rightMöusLe·
)) ||

370 (
	`abs
(
t›MöusBŸtom
) < 1 &&

371 
	`abs
(
t›PlusBŸtom
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
t›MöusBŸtom
)) ||

372 (
	`abs
(
ÁrMöusNór
) < 1 &&

373 
	`abs
(
ÁrPlusNór
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
ÁrMöusNór
)))

375 
throw
 
Iex
::
	`DivzîoExc
 ("Bad viewing frustum: "

379 i‡–
_‹thogøphic
 )

381 
T
 
tx
 = -
rightPlusLe·
 / 
rightMöusLe·
;

382 
T
 
ty
 = -
t›PlusBŸtom
 / 
t›MöusBŸtom
;

383 
T
 
tz
 = -
ÁrPlusNór
 / 
ÁrMöusNór
;

385 i‡((
	`abs
(
rightMöusLe·
) < 1 &&

386 2 > 
limôs
<
T
>::
	`max
(Ë* 
	`abs
(
rightMöusLe·
)) ||

387 (
	`abs
(
t›MöusBŸtom
) < 1 &&

388 2 > 
limôs
<
T
>::
	`max
(Ë* 
	`abs
(
t›MöusBŸtom
)) ||

389 (
	`abs
(
ÁrMöusNór
) < 1 &&

390 2 > 
limôs
<
T
>::
	`max
(Ë* 
	`abs
(
ÁrMöusNór
)))

392 
throw
 
Iex
::
	`DivzîoExc
 ("Bad viewing frustum: "

396 
T
 
A
 = 2 / 
rightMöusLe·
;

397 
T
 
B
 = 2 / 
t›MöusBŸtom
;

398 
T
 
C
 = -2 / 
ÁrMöusNór
;

400  
M©rix44
<
T
>–
A
, 0, 0, 0,

401 0, 
B
, 0, 0,

402 0, 0, 
C
, 0,

403 
tx
, 
ty
, 
tz
, 1.f );

407 
T
 
A
 = 
rightPlusLe·
 / 
rightMöusLe·
;

408 
T
 
B
 = 
t›PlusBŸtom
 / 
t›MöusBŸtom
;

409 
T
 
C
 = -
ÁrPlusNór
 / 
ÁrMöusNór
;

411 
T
 
ÁrTimesNór
 = -2 * 
_Ár
 * 
_√¨
;

412 i‡(
	`abs
(
ÁrMöusNór
) < 1 &&

413 
	`abs
(
ÁrTimesNór
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
ÁrMöusNór
))

415 
throw
 
Iex
::
	`DivzîoExc
 ("Bad viewing frustum: "

419 
T
 
D
 = 
ÁrTimesNór
 / 
ÁrMöusNór
;

421 
T
 
twoTimesNór
 = 2 * 
_√¨
;

423 i‡((
	`abs
(
rightMöusLe·
) < 1 &&

424 
	`abs
(
twoTimesNór
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
rightMöusLe·
)) ||

425 (
	`abs
(
t›MöusBŸtom
) < 1 &&

426 
	`abs
(
twoTimesNór
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
t›MöusBŸtom
)))

428 
throw
 
Iex
::
	`DivzîoExc
 ("Bad viewing frustum: "

432 
T
 
E
 = 
twoTimesNór
 / 
rightMöusLe·
;

433 
T
 
F
 = 
twoTimesNór
 / 
t›MöusBŸtom
;

435  
M©rix44
<
T
>–
E
, 0, 0, 0,

436 0, 
F
, 0, 0,

437 
A
, 
B
, 
C
, -1,

438 0, 0, 
D
, 0 );

440 
	}
}

442 
	gãm∂©e
<
˛ass
 
	gT
>

443 
	gFru°um
<
	gT
> Fru°um<T>::
	$wödow
(
T
 
l
, T 
r
, T 
t
, T 
b
) const

447 
Vec2
<
T
> 
bl
 = 
	`s¸ìnToLoˇl
–Vec2<T>(
l
,
b
) );

448 
Vec2
<
T
> 
å
 = 
	`s¸ìnToLoˇl
–Vec2<T>(
r
,
t
) );

450  
Fru°um
<
T
>(
_√¨
, 
_Ár
, 
bl
.
x
, 
å
.x,År.
y
, bl.y, 
_‹thogøphic
);

451 
	}
}

454 
	gãm∂©e
<
˛ass
 
	gT
>

455 
	gVec2
<
	gT
> 
	gFru°um
<T>::
s¸ìnToLoˇl
(c⁄° 
Vec2
<
T
> &
s
) const

457  
Vec2
<
T
>–
_À·
 + (
_right
-_À·Ë* (1.f+
s
.
x
) / 2.f,

458 
	g_bŸtom
 + (
	g_t›
-_bŸtomË* (1.f+
	gs
.
	gy
) / 2.f );

461 
	gãm∂©e
<
˛ass
 
	gT
>

462 
	gVec2
<
	gT
> 
	gFru°um
<T>::
loˇlToS¸ìn
(c⁄° 
Vec2
<
T
> &
p
) const

464 
T
 
À·PlusRight
 = 
_À·
 - 2 * 
p
.
x
 + 
_right
;

465 
T
 
	gÀ·MöusRight
 = 
_À·
-
_right
;

466 
T
 
	gbŸtomPlusT›
 = 
_bŸtom
 - 2 * 
p
.
y
 + 
_t›
;

467 
T
 
	gbŸtomMöusT›
 = 
_bŸtom
-
_t›
;

469 i‡((
abs
(
À·MöusRight
) < 1 &&

470 
abs
(
À·PlusRight
Ë> 
	glimôs
<
	gT
>::
max
(Ë*ábs(
À·MöusRight
)) ||

471 (
abs
(
bŸtomMöusT›
) < 1 &&

472 
abs
(
bŸtomPlusT›
Ë> 
limôs
<
T
>::
max
(Ë*ábs(
bŸtomMöusT›
)))

474 
throw
 
Iex
::
DivzîoExc


479  
	gVec2
<
	gT
>–
	gÀ·PlusRight
 / 
	gÀ·MöusRight
,

480 
	gbŸtomPlusT›
 / 
	gbŸtomMöusT›
 );

483 
	gãm∂©e
<
˛ass
 
	gT
>

484 
	gLöe3
<
	gT
> 
	gFru°um
<T>::
¥oje˘S¸ìnToRay
(c⁄° 
Vec2
<
T
> &
p
) const

486 
Vec2
<
T
> 
poöt
 = 
s¸ìnToLoˇl
(
p
);

487 i‡(
‹thogøphic
())

488  
	gLöe3
<
	gT
>–
	gVec3
<T>(
	gpoöt
.
	gx
,poöt.
	gy
, 0.0),

489 
	gVec3
<
	gT
>(
	gpoöt
.
	gx
,poöt.
	gy
,-
	g_√¨
));

491  
	gLöe3
<
	gT
>–
	gVec3
<T>(0, 0, 0), Vec3<T>(
	gpoöt
.
	gx
,poöt.
	gy
,-
	g_√¨
));

494 
	gãm∂©e
<
˛ass
 
	gT
>

495 
	gVec2
<
	gT
> 
	gFru°um
<T>::
¥oje˘PoötToS¸ìn
(c⁄° 
Vec3
<
T
> &
poöt
) const

497 i‡(
‹thogøphic
(Ë|| 
poöt
.
z
 == 0)

498  
loˇlToS¸ìn
–
Vec2
<
T
>–
poöt
.
x
,Öoöt.
y
 ) );

500  
loˇlToS¸ìn
–
Vec2
<
T
>–
poöt
.
x
 * 
_√¨
 / -poöt.
z
,

501 
poöt
.
y
 * 
_√¨
 / -poöt.
z
 ) );

504 
	gãm∂©e
<
˛ass
 
	gT
>

505 
T
 
	gFru°um
<
	gT
>::
	$ZToDïth
(
zvÆ
,
zmö
,
zmax
) const

507 
zdiff
 = 
zmax
 - 
zmö
;

509 i‡(
zdiff
 == 0)

511 
throw
 
Iex
::
DivzîoExc


515 i‡–
zvÆ
 > 
zmax
+1 ) zvÆ -
zdiff
;

517 
T
 
fzvÆ
 = (
	`T
(
zvÆ
Ë- T(
zmö
)Ë/ T(
zdiff
);

518  
	`n‹mÆizedZToDïth
(
fzvÆ
);

519 
	}
}

521 
	gãm∂©e
<
˛ass
 
	gT
>

522 
T
 
	gFru°um
<
	gT
>::
	$n‹mÆizedZToDïth
(
T
 
zvÆ
) const

524 
T
 
Zp
 = 
zvÆ
 * 2.0 - 1;

526 i‡–
_‹thogøphic
 )

528  -(
Zp
*(
_Ár
-
_√¨
) + (_far+_near))/2;

532 
T
 
ÁrTimesNór
 = 2 * 
_Ár
 * 
_√¨
;

533 
T
 
ÁrMöusNór
 = 
Zp
 * (
_Ár
 - 
_√¨
) - _far - _near;

535 i‡(
	`abs
(
ÁrMöusNór
) < 1 &&

536 
	`abs
(
ÁrTimesNór
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
ÁrMöusNór
))

538 
throw
 
Iex
::
DivzîoExc


544  
ÁrTimesNór
 / 
ÁrMöusNór
;

546 
	}
}

548 
	gãm∂©e
<
˛ass
 
	gT
>

549 
	gFru°um
<
	gT
>::
	$DïthToZ
(
T
 
dïth
,
zmö
,
zmax
) const

551 
zdiff
 = 
zmax
 - 
zmö
;

552 
T
 
ÁrMöusNór
 = 
_Ár
-
_√¨
;

554 i‡–
_‹thogøphic
 )

556 
T
 
ÁrPlusNór
 = 2*
dïth
 + 
_Ár
 + 
_√¨
;

558 i‡(
	`abs
(
ÁrMöusNór
) < 1 &&

559 
	`abs
(
ÁrPlusNór
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
ÁrMöusNór
))

561 
throw
 
Iex
::
DivzîoExc


566 
T
 
Zp
 = -
ÁrPlusNór
/
ÁrMöusNór
;

567  (0.5*(
Zp
+1)*
zdiff
Ë+ 
zmö
;

573 
T
 
ÁrTimesNór
 = 2*
_Ár
*
_√¨
;

574 i‡(
	`abs
(
dïth
) < 1 &&

575 
	`abs
(
ÁrTimesNór
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
dïth
))

577 
throw
 
Iex
::
DivzîoExc


582 
T
 
ÁrPlusNór
 = 
ÁrTimesNór
/
dïth
 + 
_Ár
 + 
_√¨
;

583 i‡(
	`abs
(
ÁrMöusNór
) < 1 &&

584 
	`abs
(
ÁrPlusNór
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
ÁrMöusNór
))

586 
throw
 
Iex
::
DivzîoExc


591 
T
 
Zp
 = 
ÁrPlusNór
/
ÁrMöusNór
;

592  (0.5*(
Zp
+1)*
zdiff
Ë+ 
zmö
;

594 
	}
}

596 
	gãm∂©e
<
˛ass
 
	gT
>

597 
T
 
	gFru°um
<
	gT
>::
s¸ìnRadius
(c⁄° 
Vec3
<T> &
p
, T 
ødius
) const

609 i‡(
abs
(
p
.
z
Ë> 1 ||ábs(-
_√¨
Ë< 
	glimôs
<
	gT
>::
max
() *ábs(p.z))

611  
ødius
 * (-
_√¨
 / 
p
.
z
);

615 
throw
 
	gIex
::
DivzîoExc


620  
	gødius
 * (-
	g_√¨
 / 
	gp
.
	gz
);

623 
	gãm∂©e
<
˛ass
 
	gT
>

624 
T
 
	gFru°um
<
	gT
>::
w‹ldRadius
(c⁄° 
Vec3
<T> &
p
, T 
ødius
) const

626 i‡(
abs
(-
_√¨
Ë> 1 ||ábs(
p
.
z
Ë< 
	glimôs
<
	gT
>::
max
() *ábs(-_near))

628  
ødius
 * (
p
.
z
 / -
_√¨
);

632 
throw
 
	gIex
::
DivzîoExc


638 
	gãm∂©e
<
˛ass
 
	gT
>

639 
	gFru°um
<
	gT
>::
∂™es
(
Pœ√3
<
T
> 
p
[6])

646 
Vec3
<
T
> 
a
–
_À·
, 
_bŸtom
, -
_√¨
);

647 
	gVec3
<
	gT
> 
b
–
_À·
, 
_t›
, -
_√¨
);

648 
	gVec3
<
	gT
> 
c
–
_right
, 
_t›
, -
_√¨
);

649 
	gVec3
<
	gT
> 
d
–
_right
, 
_bŸtom
, -
_√¨
);

650 
	gVec3
<
	gT
> 
o
(0,0,0);

652 
	gp
[0].
£t
–
o
, 
c
, 
b
 );

653 
	gp
[1].
£t
–
o
, 
d
, 
c
 );

654 
	gp
[2].
£t
–
o
, 
a
, 
d
 );

655 
	gp
[3].
£t
–
o
, 
b
, 
a
 );

656 
	gp
[4].
£t
–
Vec3
<
T
>(0, 0, 1), -
_√¨
 );

657 
	gp
[5].
£t
–
Vec3
<
T
>(0, 0,-1), 
_Ár
 );

661 
	gãm∂©e
<
˛ass
 
	gT
>

662 
	gFru°um
<
	gT
>::
∂™es
(
Pœ√3
<
T
> 
p
[6], c⁄° 
M©rix44
<T> &
M
)

669 
	gVec3
<
	gT
> 
	ga
 = 
Vec3
<
T
>–
_À·
, 
	g_bŸtom
, -
	g_√¨
Ë* 
	gM
;

670 
	gVec3
<
	gT
> 
	gb
 = 
Vec3
<
T
>–
_À·
, 
	g_t›
, -
	g_√¨
Ë* 
	gM
;

671 
	gVec3
<
	gT
> 
	gc
 = 
Vec3
<
T
>–
_right
, 
	g_t›
, -
	g_√¨
Ë* 
	gM
;

672 
	gVec3
<
	gT
> 
	gd
 = 
Vec3
<
T
>–
_right
, 
	g_bŸtom
, -
	g_√¨
Ë* 
	gM
;

673 
	gs
 = 
_Ár
 / (
_√¨
);

674 
T
 
	gÁrLe·
 = (TË(
s
 * 
_À·
);

675 
T
 
	gÁrRight
 = (TË(
s
 * 
_right
);

676 
T
 
	gÁrT›
 = (TË(
s
 * 
_t›
);

677 
T
 
	gÁrBŸtom
 = (TË(
s
 * 
_bŸtom
);

678 
	gVec3
<
	gT
> 
	ge
 = 
Vec3
<
T
>–
ÁrLe·
, 
	gÁrBŸtom
, -
	g_Ár
Ë* 
	gM
;

679 
	gVec3
<
	gT
> 
	gf
 = 
Vec3
<
T
>–
ÁrLe·
, 
	gÁrT›
, -
	g_Ár
Ë* 
	gM
;

680 
	gVec3
<
	gT
> 
	gg
 = 
Vec3
<
T
>–
ÁrRight
, 
	gÁrT›
, -
	g_Ár
Ë* 
	gM
;

681 
	gVec3
<
	gT
> 
	go
 = 
Vec3
<
T
>(0,0,0Ë* 
	gM
;

683 
	gp
[0].
£t
–
o
, 
c
, 
b
 );

684 
	gp
[1].
£t
–
o
, 
d
, 
c
 );

685 
	gp
[2].
£t
–
o
, 
a
, 
d
 );

686 
	gp
[3].
£t
–
o
, 
b
, 
a
 );

687 
	gp
[4].
£t
–
a
, 
d
, 
c
 );

688 
	gp
[5].
£t
–
e
, 
f
, 
g
 );

691 
	gFru°um
<> 
	tFru°umf
;

692 
	gFru°um
<> 
	tFru°umd
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h

37 #i‚de‡
INCLUDED_IMATHFUN_H


38 
	#INCLUDED_IMATHFUN_H


	)

46 
	~"Im©hLimôs.h
"

48 
«me•a˚
 
	gIm©h
 {

50 
	gãm∂©e
 <
˛ass
 
	gT
>

51 
ölöe
 
T


52 
abs
 (
T
 
a
)

54  (
	ga
 > 0Ë?á : -
a
;

58 
	gãm∂©e
 <
˛ass
 
	gT
>

59 
ölöe
 

60 
sign
 (
T
 
a
)

62  (
	ga
 > 0)? 1 : ((
a
 < 0) ? -1 : 0);

66 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gQ
>

67 
ölöe
 
T


68 
ÀΩ
 (
T
 
a
, T 
b
, 
Q
 
t
)

70  (
	gT
Ë(
	ga
 + (
	gb
 -áË* 
	gt
);

74 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gQ
>

75 
ölöe
 
T


76 
uÀΩ
 (
T
 
a
, T 
b
, 
Q
 
t
)

78  (
	gT
Ë((
	ga
 > 
	gb
)? (®- (®- bË* 
	gt
): (
a
 + (
b
 -áË* 
t
));

82 
	gãm∂©e
 <
˛ass
 
	gT
>

83 
ölöe
 
T


84 
ÀΩÁ˘‹
(
T
 
m
, T 
a
, T 
b
)

96 
T
 
	gd
 = 
b
 - 
a
;

97 
T
 
	gn
 = 
m
 - 
a
;

99 i‡(
abs
(
d
Ë> 
T
(1Ë||ábs(
n
Ë< 
	glimôs
<
	gT
>::
max
() *ábs(d))

100  
n
 / 
d
;

102  
T
(0);

106 
	gãm∂©e
 <
˛ass
 
	gT
>

107 
ölöe
 
T


108 
˛amp
 (
T
 
a
, T 
l
, T 
h
)

110  (
	ga
 < 
	gl
)?Ü : ((
a
 > 
h
)? h :á);

114 
	gãm∂©e
 <
˛ass
 
	gT
>

115 
ölöe
 

116 
cmp
 (
T
 
a
, T 
b
)

118  
	gIm©h
::
sign
 (
a
 - 
b
);

122 
	gãm∂©e
 <
˛ass
 
	gT
>

123 
ölöe
 

124 
cm±
 (
T
 
a
, T 
b
, T 
t
)

126  (
	gIm©h
::
abs
 (
a
 - 
b
Ë<
t
)? 0 : 
cmp
 (a, b);

130 
	gãm∂©e
 <
˛ass
 
	gT
>

131 
ölöe
 
boﬁ


132 
iszîo
 (
T
 
a
, T 
t
)

134  (
	gIm©h
::
abs
 (
a
Ë<
t
) ? 1 : 0;

138 
	gãm∂©e
 <
˛ass
 
	gT1
, cœs†
	gT2
, cœs†
	gT3
>

139 
ölöe
 
boﬁ


140 
equÆ
 (
T1
 
a
, 
T2
 
b
, 
T3
 
t
)

142  
	gIm©h
::
abs
 (
a
 - 
b
Ë<
t
;

145 
	gãm∂©e
 <
˛ass
 
	gT
>

146 
ölöe
 

147 
Êo‹
 (
T
 
x
)

149  (
	gx
 >0)? (
x
): -((-x) + (-x > (-x)));

153 
	gãm∂©e
 <
˛ass
 
	gT
>

154 
ölöe
 

155 
˚û
 (
T
 
x
)

157  -
Êo‹
 (-
x
);

160 
	gãm∂©e
 <
˛ass
 
	gT
>

161 
ölöe
 

162 
åunc
 (
T
 
x
)

164  (
	gx
 >0Ë? (
x
) : -(-x);

176 
ölöe
 

177 
divs
 (
x
, 
y
)

179  (
	gx
 >0)? ((
y
 >0)? ( 
x
 / y): -( x / -y)):

180 ((
y
 >0)? -(-
x
 / y): (-x / -y));

184 
ölöe
 

185 
mods
 (
x
, 
y
)

187  (
	gx
 >0)? ((
y
 >0)? ( 
x
 % y): ( x % -y)):

188 ((
y
 >0)? -(-
x
 % y): -(-x % -y));

200 
ölöe
 

201 
divp
 (
x
, 
y
)

203  (
	gx
 >0)? ((
y
 >0)? ( 
x
 / y): -( x / -y)):

204 ((
y
 >0)? -((y-1-
x
) / y): ((-y-1-x) / -y));

208 
ölöe
 

209 
modp
 (
x
, 
y
)

211  
	gx
 - 
y
 * 
divp
 (
x
, y);

235 
succf
 (
f
);

236 
¥edf
 (
f
);

238 
succd
 (
d
);

239 
¥edd
 (
d
);

245 
ölöe
 
boﬁ


246 
föôef
 (
f
)

248 uni⁄ {
	gf
; 
	gi
;} 
	gu
;

249 
	gu
.
	gf
 = 
f
;

251  (
	gu
.
	gi
 & 0x7f800000) != 0x7f800000;

254 
ölöe
 
boﬁ


255 
föôed
 (
d
)

257 #i‡
ULONG_MAX
 == 18446744073709551615LU

258 
	tI¡64
;

260 
	tI¡64
;

263 uni⁄ {
	gd
; 
I¡64
 
	gi
;} 
	gu
;

264 
	gu
.
	gd
 = 
d
;

266  (
	gu
.
	gi
 & 0x7ff0000000000000LL) != 0x7ff0000000000000LL;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h

36 #i‚de‡
INCLUDED_IMATHGL_H


37 
	#INCLUDED_IMATHGL_H


	)

39 
	~<GL/gl.h
>

41 
	~"Im©hVec.h
"

42 
	~"Im©hM©rix.h
"

43 
	~"IexM©hExc.h
"

44 
	~"Im©hFun.h
"

46 
ölöe
 
glVîãx
 ( c⁄° 
Im©h
::
V3f
 &
v
 ) { 
glVîãx3f
(v.
x
,v.
y
,v.
z
); }

47 
ölöe
 
glVîãx
 ( c⁄° 
Im©h
::
V2f
 &
v
 ) { 
glVîãx2f
(v.
x
,v.
y
); }

48 
ölöe
 
glN‹mÆ
 ( c⁄° 
Im©h
::
V3f
 &
n
 ) { 
glN‹mÆ3f
“.
x
,n.
y
,n.
z
); }

49 
ölöe
 
glCﬁ‹
 ( c⁄° 
Im©h
::
V3f
 &
c
 ) { 
glCﬁ‹3f
(c.
x
,c.
y
,c.
z
); }

50 
ölöe
 
glTøn¶©e
 ( c⁄° 
Im©h
::
V3f
 &
t
 ) { 
glTøn¶©ef
—.
x
,t.
y
,t.
z
); }

52 
ölöe
 
glTexCo‹d
–c⁄° 
Im©h
::
V2f
 &
t
 )

54 
glTexCo‹d2f
(
t
.
x
,t.
y
);

57 
ölöe
 
	$glDißbÀTextuª
()

59 
	`glA˘iveTextuª
(
GL_TEXTURE1
);

60 
	`glBödTextuª
(
GL_TEXTURE_2D
, 0);

61 
	`glDißbÀ
(
GL_TEXTURE_2D
);

63 
	`glA˘iveTextuª
(
GL_TEXTURE0
);

64 
	}
}

66 
	g«me•a˚
 {

68 c⁄° 
	gGL_FLOAT_MAX
 = 1.8e+19;

70 
ölöe
 
boﬁ


71 
badFlﬂt
 (
f
)

73  !
	gIm©h
::
föôef
 (
f
Ë|| f < - 
GL_FLOAT_MAX
 || f > GL_FLOAT_MAX;

78 
ölöe
 

79 
throwBadM©rix
 (c⁄° 
Im©h
::
M44f
& 
m
)

81 i‡(
badFlﬂt
 (
m
[0][0]) ||

82 
badFlﬂt
 (
m
[0][1]) ||

83 
badFlﬂt
 (
m
[0][2]) ||

84 
badFlﬂt
 (
m
[0][3]) ||

85 
badFlﬂt
 (
m
[1][0]) ||

86 
badFlﬂt
 (
m
[1][1]) ||

87 
badFlﬂt
 (
m
[1][2]) ||

88 
badFlﬂt
 (
m
[1][3]) ||

89 
badFlﬂt
 (
m
[2][0]) ||

90 
badFlﬂt
 (
m
[2][1]) ||

91 
badFlﬂt
 (
m
[2][2]) ||

92 
badFlﬂt
 (
m
[2][3]) ||

93 
badFlﬂt
 (
m
[3][0]) ||

94 
badFlﬂt
 (
m
[3][1]) ||

95 
badFlﬂt
 (
m
[3][2]) ||

96 
badFlﬂt
 (
m
[3][3]))

97 
throw
 
Iex
::
OvîÊowExc
 ("GL matrix overflow");

100 
ölöe
 

101 
glMu…M©rix
–c⁄° 
Im©h
::
M44f
& 
m
 )

103 
throwBadM©rix
 (
m
);

104 
glMu…M©rixf
–(
GLÊﬂt
*)
m
[0] );

107 
ölöe
 

108 
glMu…M©rix
–c⁄° 
Im©h
::
M44f
* 
m
 )

110 
throwBadM©rix
 (*
m
);

111 
glMu…M©rixf
–(
GLÊﬂt
*)(*
m
)[0] );

114 
ölöe
 

115 
glLﬂdM©rix
–c⁄° 
Im©h
::
M44f
& 
m
 )

117 
throwBadM©rix
 (
m
);

118 
glLﬂdM©rixf
–(
GLÊﬂt
*)
m
[0] );

121 
ölöe
 

122 
glLﬂdM©rix
–c⁄° 
Im©h
::
M44f
* 
m
 )

124 
throwBadM©rix
 (*
m
);

125 
glLﬂdM©rixf
–(
GLÊﬂt
*)(*
m
)[0] );

129 
«me•a˚
 
	gIm©h
 {

136 ˛as†
	cGLPushM©rix
 {

137 
	gpublic
:

139 
GLPushM©rix
 (Ë{ 
glPushM©rix
(); }

140 ~
GLPushM©rix
(Ë{ 
glP›M©rix
(); }

143 ˛as†
	cGLPushAârib
 {

144 
	gpublic
:

146 
GLPushAârib
 (
GLbôfõld
 
mask
Ë{ 
glPushAârib
 (mask); }

147 ~
GLPushAârib
(Ë{ 
glP›Aârib
(); }

150 ˛as†
	cGLBegö
 {

151 
	gpublic
:

153 
GLBegö
 (
GLíum
 
mode
Ë{ 
glBegö
 (mode); }

154 ~
GLBegö
(Ë{ 
glEnd
(); }

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGLU.h

37 #i‚de‡
INCLUDED_IMATHGLU_H


38 
	#INCLUDED_IMATHGLU_H


	)

40 
	~<GL/gl.h
>

41 
	~<GL/glu.h
>

43 
	~"Im©hVec.h
"

45 
ölöe


47 
gluLookAt
(c⁄° 
Im©h
::
V3f
 &
pos
, c⁄° Im©h::V3‡&
öãª°
, c⁄° Im©h::V3‡&
up
)

49 
gluLookAt
(
pos
.
x
,Öos.
y
,Öos.
z
,

50 
öãª°
.
x
, i¡îe°.
y
, i¡îe°.
z
,

51 
up
.
x
, up.
y
, up.
z
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathHalfLimits.h

37 #i‚de‡
INCLUDED_IMATHHALFLIMITS_H


38 
	#INCLUDED_IMATHHALFLIMITS_H


	)

46 
	~"Im©hLimôs.h
"

47 
	~"hÆf.h
"

49 
«me•a˚
 
	gIm©h
 {

52 
	gãm∂©e
 <>

53 
	glimôs
 <
	ghÆf
>

55 
mö
(Ë{ -
	gHALF_MAX
;}

56 
max
(Ë{ 
	gHALF_MAX
;}

57 
smÆÀ°
(Ë{ 
	gHALF_MIN
;}

58 
ïsû⁄
(Ë{ 
	gHALF_EPSILON
;}

59 
boﬁ
 
isI¡egøl
(Ë{ 
	gÁl£
;}

60 
boﬁ
 
isSig√d
(Ë{ 
	gåue
;}

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h

37 #i‚de‡
INCLUDED_IMATHINTERVAL_H


38 
	#INCLUDED_IMATHINTERVAL_H


	)

52 
	~"Im©hVec.h
"

54 
«me•a˚
 
	gIm©h
 {

57 
	gãm∂©e
 <
˛ass
 
	gT
>

58 ˛as†
	cI¡îvÆ


60 
	gpublic
:

66 
T
 
mö
;

67 
T
 
	gmax
;

73 
I¡îvÆ
();

74 
I¡îvÆ
(c⁄° 
T
& 
poöt
);

75 
I¡îvÆ
(c⁄° 
T
& 
möT
, c⁄° T& 
maxT
);

81 
boﬁ
 
	g›î©‹
 =(c⁄° 
I¡îvÆ
<
T
> &
§c
) const;

87 
makeEm±y
();

88 
exãndBy
(c⁄° 
T
& 
poöt
);

89 
exãndBy
(c⁄° 
I¡îvÆ
<
T
>& 
öãrvÆ
);

95 
T
 
size
() const;

96 
T
 
˚¡î
() const;

97 
boﬁ
 
öãr£˘s
(c⁄° 
T
 &
poöt
) const;

98 
boﬁ
 
öãr£˘s
(c⁄° 
I¡îvÆ
<
T
> &
öãrvÆ
) const;

104 
boﬁ
 
hasVﬁume
() const;

105 
boﬁ
 
isEm±y
() const;

114 
	gI¡îvÆ
 <> 
	tI¡îvÆf
;

115 
	gI¡îvÆ
 <> 
	tI¡îvÆd
;

116 
	gI¡îvÆ
 <> 
	tI¡îvÆs
;

117 
	gI¡îvÆ
 <> 
	tI¡îvÆi
;

124 
	gãm∂©e
 <
˛ass
 
	gT
>

125 
ölöe
 
	gI¡îvÆ
<
	gT
>::
	$I¡îvÆ
()

127 
	`makeEm±y
();

128 
	}
}

130 
	gãm∂©e
 <
˛ass
 
	gT
>

131 
ölöe
 
	gI¡îvÆ
<
	gT
>::
	$I¡îvÆ
(c⁄° 
T
& 
poöt
)

133 
mö
 = 
poöt
;

134 
max
 = 
poöt
;

135 
	}
}

137 
	gãm∂©e
 <
˛ass
 
	gT
>

138 
ölöe
 
	gI¡îvÆ
<
	gT
>::
	$I¡îvÆ
(c⁄° 
T
& 
möV
, c⁄° T& 
maxV
)

140 
mö
 = 
möV
;

141 
max
 = 
maxV
;

142 
	}
}

144 
	gãm∂©e
 <
˛ass
 
	gT
>

145 
ölöe
 
boﬁ


146 
	gI¡îvÆ
<
	gT
>::
›î©‹
 =(c⁄° 
I¡îvÆ
<
T
> &
§c
) const

148  (
mö
 =
§c
.mö && 
max
 == src.max);

151 
	gãm∂©e
 <
˛ass
 
	gT
>

152 
ölöe
 

153 
	gI¡îvÆ
<
	gT
>::
	$makeEm±y
()

155 
mö
 = 
limôs
<
T
>::
	`max
();

156 
max
 = 
limôs
<
T
>::
	`mö
();

157 
	}
}

159 
	gãm∂©e
 <
˛ass
 
	gT
>

160 
ölöe
 

161 
	gI¡îvÆ
<
	gT
>::
	$exãndBy
(c⁄° 
T
& 
poöt
)

163 i‡–
poöt
 < 
mö
 )

164 
mö
 = 
poöt
;

166 i‡–
poöt
 > 
max
 )

167 
max
 = 
poöt
;

168 
	}
}

170 
	gãm∂©e
 <
˛ass
 
	gT
>

171 
ölöe
 

172 
	gI¡îvÆ
<
	gT
>::
exãndBy
(c⁄° 
I¡îvÆ
<
T
>& 
öãrvÆ
)

174 i‡–
öãrvÆ
.
mö
 < min )

175 
mö
 = 
öãrvÆ
.min;

177 i‡–
	göãrvÆ
.
	gmax
 > max )

178 
	gmax
 = 
öãrvÆ
.
max
;

181 
	gãm∂©e
 <
˛ass
 
	gT
>

182 
ölöe
 
boﬁ


183 
	gI¡îvÆ
<
	gT
>::
	$öãr£˘s
(c⁄° 
T
& 
poöt
) const

185  
poöt
 >
mö
 &&Öoöà<
max
;

186 
	}
}

188 
	gãm∂©e
 <
˛ass
 
	gT
>

189 
ölöe
 
boﬁ


190 
	gI¡îvÆ
<
	gT
>::
öãr£˘s
(c⁄° 
I¡îvÆ
<
T
>& 
öãrvÆ
) const

192  
öãrvÆ
.
max
 >
mö
 && interval.min <= max;

195 
	gãm∂©e
 <
˛ass
 
	gT
>

196 
ölöe
 
T


197 
	gI¡îvÆ
<
	gT
>::
	$size
() const

199  
max
-
mö
;

200 
	}
}

202 
	gãm∂©e
 <
˛ass
 
	gT
>

203 
ölöe
 
T


204 
	gI¡îvÆ
<
	gT
>::
	$˚¡î
() const

206  (
max
+
mö
)/2;

207 
	}
}

209 
	gãm∂©e
 <
˛ass
 
	gT
>

210 
ölöe
 
boﬁ


211 
	gI¡îvÆ
<
	gT
>::
	$isEm±y
() const

213  
max
 < 
mö
;

214 
	}
}

216 
	gãm∂©e
 <
˛ass
 
	gT
>

217 
ölöe
 
boﬁ
 
	gI¡îvÆ
<
	gT
>::
	$hasVﬁume
() const

219  
max
 > 
mö
;

220 
	}
}

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h

37 #i‚de‡
INCLUDED_IMATHLIMITS_H


38 
	#INCLUDED_IMATHLIMITS_H


	)

46 
	~<Êﬂt.h
>

47 
	~<limôs.h
>

53 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


54 #ifde‡
mö


55 #unde‡
mö


57 #ifde‡
max


58 #unde‡
max


62 
«me•a˚
 
	gIm©h
 {

115 
	gãm∂©e
 <
˛ass
 
	gT
> 
	slimôs


117 
T
 
mö
();

118 
T
 
max
();

119 
T
 
smÆÀ°
();

120 
T
 
ïsû⁄
();

121 
boﬁ
 
isI¡egøl
();

122 
boﬁ
 
isSig√d
();

130 
	gãm∂©e
 <>

131 
	glimôs
 <>

133 
mö
(Ë{ 
	gCHAR_MIN
;}

134 
max
(Ë{ 
	gCHAR_MAX
;}

135 
smÆÀ°
() { 1;}

136 
ïsû⁄
() { 1;}

137 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

138 
boﬁ
 
isSig√d
() { () ~0 < 0;}

141 
	gãm∂©e
 <>

142 
	glimôs
 <signed >

144 sig√d 
mö
(Ë{ 
	gSCHAR_MIN
;}

145 sig√d 
max
(Ë{ 
	gSCHAR_MAX
;}

146 sig√d 
smÆÀ°
() { 1;}

147 sig√d 
ïsû⁄
() { 1;}

148 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

149 
boﬁ
 
isSig√d
(Ë{ 
	gåue
;}

152 
	gãm∂©e
 <>

153 
	glimôs
 <>

155 
mö
() { 0;}

156 
max
(Ë{ 
	gUCHAR_MAX
;}

157 
smÆÀ°
() { 1;}

158 
ïsû⁄
() { 1;}

159 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

160 
boﬁ
 
isSig√d
(Ë{ 
	gÁl£
;}

163 
	gãm∂©e
 <>

164 
	glimôs
 <>

166 
mö
(Ë{ 
	gSHRT_MIN
;}

167 
max
(Ë{ 
	gSHRT_MAX
;}

168 
smÆÀ°
() { 1;}

169 
ïsû⁄
() { 1;}

170 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

171 
boﬁ
 
isSig√d
(Ë{ 
	gåue
;}

174 
	gãm∂©e
 <>

175 
	glimôs
 <>

177 
mö
() { 0;}

178 
max
(Ë{ 
	gUSHRT_MAX
;}

179 
smÆÀ°
() { 1;}

180 
ïsû⁄
() { 1;}

181 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

182 
boﬁ
 
isSig√d
(Ë{ 
	gÁl£
;}

185 
	gãm∂©e
 <>

186 
	glimôs
 <>

188 
mö
(Ë{ 
	gINT_MIN
;}

189 
max
(Ë{ 
	gINT_MAX
;}

190 
smÆÀ°
() { 1;}

191 
ïsû⁄
() { 1;}

192 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

193 
boﬁ
 
isSig√d
(Ë{ 
	gåue
;}

196 
	gãm∂©e
 <>

197 
	glimôs
 <>

199 
mö
() { 0;}

200 
max
(Ë{ 
	gUINT_MAX
;}

201 
smÆÀ°
() { 1;}

202 
ïsû⁄
() { 1;}

203 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

204 
boﬁ
 
isSig√d
(Ë{ 
	gÁl£
;}

207 
	gãm∂©e
 <>

208 
	glimôs
 <>

210 
mö
(Ë{ 
	gLONG_MIN
;}

211 
max
(Ë{ 
	gLONG_MAX
;}

212 
smÆÀ°
() { 1;}

213 
ïsû⁄
() { 1;}

214 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

215 
boﬁ
 
isSig√d
(Ë{ 
	gåue
;}

218 
	gãm∂©e
 <>

219 
	glimôs
 <>

221 
mö
() { 0;}

222 
max
(Ë{ 
	gULONG_MAX
;}

223 
smÆÀ°
() { 1;}

224 
ïsû⁄
() { 1;}

225 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

226 
boﬁ
 
isSig√d
(Ë{ 
	gÁl£
;}

229 
	gãm∂©e
 <>

230 
	glimôs
 <>

232 
mö
(Ë{ -
	gFLT_MAX
;}

233 
max
(Ë{ 
	gFLT_MAX
;}

234 
smÆÀ°
(Ë{ 
	gFLT_MIN
;}

235 
ïsû⁄
(Ë{ 
	gFLT_EPSILON
;}

236 
boﬁ
 
isI¡egøl
(Ë{ 
	gÁl£
;}

237 
boﬁ
 
isSig√d
(Ë{ 
	gåue
;}

240 
	gãm∂©e
 <>

241 
	glimôs
 <>

243 
mö
(Ë{ -
	gDBL_MAX
;}

244 
max
(Ë{ 
	gDBL_MAX
;}

245 
smÆÀ°
(Ë{ 
	gDBL_MIN
;}

246 
ïsû⁄
(Ë{ 
	gDBL_EPSILON
;}

247 
boﬁ
 
isI¡egøl
(Ë{ 
	gÁl£
;}

248 
boﬁ
 
isSig√d
(Ë{ 
	gåue
;}

251 
	gãm∂©e
 <>

252 
	glimôs
 <>

254 
mö
(Ë{ -
	gLDBL_MAX
;}

255 
max
(Ë{ 
	gLDBL_MAX
;}

256 
smÆÀ°
(Ë{ 
	gLDBL_MIN
;}

257 
ïsû⁄
(Ë{ 
	gLDBL_EPSILON
;}

258 
boﬁ
 
isI¡egøl
(Ë{ 
	gÁl£
;}

259 
boﬁ
 
isSig√d
(Ë{ 
	gåue
;}

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h

37 #i‚de‡
INCLUDED_IMATHLINE_H


38 
	#INCLUDED_IMATHLINE_H


	)

46 
	~"Im©hVec.h
"

47 
	~"Im©hLimôs.h
"

48 
	~"Im©hM©rix.h
"

50 
«me•a˚
 
	gIm©h
 {

53 
	gãm∂©e
 <
˛ass
 
	gT
>

54 ˛as†
	cLöe3


56 
	gpublic
:

58 
Vec3
<
T
> 
pos
;

59 
	gVec3
<
	gT
> 
	gdú
;

65 
Löe3
() {}

66 
Löe3
(c⁄° 
Vec3
<
T
>& 
poöt1
, c⁄° Vec3<T>& 
poöt2
);

72 
£t
(c⁄° 
Vec3
<
T
>& 
poöt1
,

73 c⁄° 
Vec3
<
T
>& 
poöt2
);

79 
	gVec3
<
	gT
> 
›î©‹
(Ë(
T
 
	g∑ømëî
) const;

85 
T
 
di°™˚To
(c⁄° 
Vec3
<T>& 
poöt
) const;

86 
T
 
di°™˚To
(c⁄° 
Löe3
<T>& 
löe
) const;

87 
	gVec3
<
	gT
> 
˛o£°PoötTo
(c⁄° 
Vec3
<
T
>& 
poöt
) const;

88 
	gVec3
<
	gT
> 
˛o£°PoötTo
(c⁄° 
Löe3
<
T
>& 
löe
) const;

96 
	gLöe3
<> 
	tLöe3f
;

97 
	gLöe3
<> 
	tLöe3d
;

104 
	gãm∂©e
 <
˛ass
 
	gT
>

105 
ölöe
 
	gLöe3
<
	gT
>::
Löe3
(c⁄° 
Vec3
<
T
> &
p0
, c⁄° Vec3<T> &
p1
)

107 
£t
(
p0
,
p1
);

110 
	gãm∂©e
 <
˛ass
 
	gT
>

111 
ölöe
 
	gLöe3
<
	gT
>::
£t
(c⁄° 
Vec3
<
T
> &
p0
, c⁄° Vec3<T> &
p1
)

113 
	gpos
 = 
p0
; 
	gdú
 = 
p1
-p0;

114 
	gdú
.
n‹mÆize
();

117 
	gãm∂©e
 <
˛ass
 
	gT
>

118 
ölöe
 
	gVec3
<
	gT
> 
	gLöe3
<T>::
	$›î©‹
()(
T
 
∑ømëî
) const

120  
pos
 + 
dú
 * 
∑ømëî
;

121 
	}
}

123 
	gãm∂©e
 <
˛ass
 
	gT
>

124 
ölöe
 
T
 
	gLöe3
<
	gT
>::
di°™˚To
(c⁄° 
Vec3
<T>& 
poöt
) const

126  (
˛o£°PoötTo
(
poöt
)-poöt).
Àngth
();

129 
	gãm∂©e
 <
˛ass
 
	gT
>

130 
ölöe
 
	gVec3
<
	gT
> 
	gLöe3
<T>::
˛o£°PoötTo
(c⁄° 
Vec3
<
T
>& 
poöt
) const

132  ((
poöt
 - 
pos
Ë^ 
dú
) * dir +Öos;

135 
	gãm∂©e
 <
˛ass
 
	gT
>

136 
ölöe
 
T
 
	gLöe3
<
	gT
>::
di°™˚To
(c⁄° 
Löe3
<T>& 
löe
) const

138 
T
 
d
 = (
dú
 % 
löe
.dúË^ (löe.
pos
 -Öos);

139  (
	gd
 >0)? 
d
: -d;

142 
	gãm∂©e
 <
˛ass
 
	gT
>

143 
ölöe
 
	gVec3
<
	gT
>

144 
	gLöe3
<
	gT
>::
˛o£°PoötTo
(c⁄° 
Löe3
<
T
>& 
löe
) const

148 
Vec3
<
T
> 
posLpos
 = 
pos
 - 
löe
.pos ;

149 
T
 
	gc
 = 
dú
 ^ 
posLpos
;

150 
T
 
	ga
 = 
löe
.
dú
 ^ dir;

151 
T
 
	gf
 = 
löe
.
dú
 ^ 
posLpos
 ;

152 
T
 
	gnum
 = 
c
 - 
a
 * 
f
;

154 
T
 
	gdíom
 = 
a
*a - 1;

156 
T
 
	gabsDíom
 = ((
díom
 >= 0)? denom: -denom);

158 i‡(
	gabsDíom
 < 1)

160 
T
 
	gabsNum
 = ((
num
 >= 0)?Çum: -num);

162 i‡(
	gabsNum
 >
absDíom
 * 
limôs
<
T
>::
max
())

163  
pos
;

166  
	gpos
 + 
	gdú
 * (
	gnum
 / 
	gdíom
);

169 
	gãm∂©e
<
˛ass
 
	gT
>

170 
	g°d
::
o°ªam
& 
›î©‹
<< (
°d
::o°ªam &
o
, c⁄° 
	gLöe3
<
	gT
> &
	glöe
)

172  
	go
 << "(" << 
	glöe
.
	gpos
 << ", " <<Üöe.
	gdú
 << ")";

175 
	gãm∂©e
<
˛ass
 
	gS
, cœs†
	gT
>

176 
ölöe
 
	gLöe3
<
	gS
> 
	g›î©‹
 * (c⁄° Löe3<S> &
	glöe
, c⁄° 
	gM©rix44
<
	gT
> &
	gM
)

178  
	gLöe3
<
	gS
>–
	glöe
.
pos
 * 
	gM
, (löe.
	gpos
 +Üöe.
	gdú
) * M );

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLineAlgo.h

37 #i‚de‡
INCLUDED_IMATHLINEALGO_H


38 
	#INCLUDED_IMATHLINEALGO_H


	)

80 
	~"Im©hLöe.h
"

81 
	~"Im©hVecAlgo.h
"

83 
«me•a˚
 
	gIm©h
 {

86 
	gãm∂©e
 <
˛ass
 
	gT
>

87 
boﬁ
 
˛o£°Poöts
(c⁄° 
Löe3
<
T
>& 
löe1
,

88 c⁄° 
Löe3
<
T
>& 
löe2
,

89 
Vec3
<
T
>& 
poöt1
,

90 
Vec3
<
T
>& 
poöt2
)

98 
T
 
	gA
 = 
löe1
.
dú
 ^ 
löe2
.dir;

100 i‡–
	gA
 =1 )  
Ál£
;

102 
T
 
	gdíom
 = 
A
 * A - 1;

104 
T
 
	gB
 = (
löe1
.
dú
 ^Üöe1.
pos
Ë- (löe1.dú ^ 
löe2
.pos);

105 
T
 
	gC
 = (
löe2
.
dú
 ^ 
löe1
.
pos
) - (line2.dir ^Üine2.pos);

107 
	gpoöt1
 = 
löe1
(–
B
 - 
A
 * 
C
 ) / 
díom
);

108 
	gpoöt2
 = 
löe2
(–
B
 * 
A
 - 
C
 ) / 
díom
);

110  
	gåue
;

115 
	gãm∂©e
 <
˛ass
 
	gT
>

116 
boﬁ
 
öãr£˘
–c⁄° 
Löe3
<
T
> &
löe
,

117 c⁄° 
Vec3
<
T
> &
v0
,

118 c⁄° 
Vec3
<
T
> &
v1
,

119 c⁄° 
Vec3
<
T
> &
v2
,

120 
Vec3
<
T
> &
±
,

121 
Vec3
<
T
> &
b¨y˚¡ric
,

122 
boﬁ
 &
‰⁄t
)

138 c⁄° 
	gEPSILON
 = 1e-6;

140 
T
 
	gd
, 
	gt
, 
	gd01
, 
	gd12
, 
	gd20
, 
	gvd0
, 
	gvd1
, 
	gvd2
, 
	gax
, 
	gay
, 
	gaz
, 
	g£n£
;

141 
	gVec3
<
	gT
> 
	gv01
, 
	gv12
, 
	gv20
, 
	gc
;

142 
	gaxis0
, 
	gaxis1
;

145 
	gv01
 = 
v1
 - 
v0
;

146 
	gv12
 = 
v2
 - 
v1
;

149 
	gc
 = 
v12
.
¸oss
(
v01
);

151 
	gd
 = 
c
.
Àngth
();

152 if(
	gd
 < 
	gEPSILON
)

153  
	gÁl£
;

154 
	gc
 = 
c
 * (1. / 
d
);

158 
	gd
 = 
löe
.
dú
.
dŸ
(
c
);

159 i‡(
	gd
 < 
	gEPSILON
 && d > -EPSILON)

160  
	gÁl£
;

162 
	gt
 = (
v0
 - 
löe
.
pos
).
dŸ
(
c
Ë/ 
d
;

164 if(
	gt
 < 0)

165  
	gÁl£
;

168 
	g±
 = 
löe
.
pos
 + 
t
 *Üöe.
dú
;

173 
	gax
 = 
c
[0] < 0 ? -c[0] : c[0];

174 
	gay
 = 
c
[1] < 0 ? -c[1] : c[1];

175 
	gaz
 = 
c
[2] < 0 ? -c[2] : c[2];

177 if(
	gax
 > 
	gay
 &&áx > 
	gaz
)

181 
	gaxis0
 = 1;

182 
	gaxis1
 = 2;

183 
	g£n£
 = 
c
[0] < 0 ? -1 : 1;

185 if(
	gay
 > 
	gaz
)

187 
	gaxis0
 = 2;

188 
	gaxis1
 = 0;

189 
	g£n£
 = 
c
[1] < 0 ? -1 : 1;

193 
	gaxis0
 = 0;

194 
	gaxis1
 = 1;

195 
	g£n£
 = 
c
[2] < 0 ? -1 : 1;

199 
	gd01
 = 
£n£
 * ((
±
[
axis0
] - 
v0
[axis0]Ë* 
v01
[
axis1
]

200 - (
±
[
axis1
] - 
v0
[axis1]Ë* 
v01
[
axis0
]);

202 if(
	gd01
 < 0Ë 
	gÁl£
;

204 
	gvd2
 = 
£n£
 * ((
v2
[
axis0
] - 
v0
[axis0]Ë* 
v01
[
axis1
]

205 - (
v2
[
axis1
] - 
v0
[axis1]Ë* 
v01
[
axis0
]);

207 if(
	gd01
 > 
	gvd2
Ë 
	gÁl£
;

210 
	gd12
 = 
£n£
 * ((
±
[
axis0
] - 
v1
[axis0]Ë* 
v12
[
axis1
]

211 - (
±
[
axis1
] - 
v1
[axis1]Ë* 
v12
[
axis0
]);

213 if(
	gd12
 < 0Ë 
	gÁl£
;

215 
	gvd0
 = 
£n£
 * ((
v0
[
axis0
] - 
v1
[axis0]Ë* 
v12
[
axis1
]

216 - (
v0
[
axis1
] - 
v1
[axis1]Ë* 
v12
[
axis0
]);

218 if(
	gd12
 > 
	gvd0
Ë 
	gÁl£
;

221 
	gv20
 = 
v0
 - 
v2
;

222 
	gd20
 = 
£n£
 * ((
±
[
axis0
] - 
v2
[axis0]Ë* 
v20
[
axis1
]

223 - (
±
[
axis1
] - 
v2
[axis1]Ë* 
v20
[
axis0
]);

225 if(
	gd20
 < 0Ë 
	gÁl£
;

227 
	gvd1
 = 
£n£
 * ((
v1
[
axis0
] - 
v2
[axis0]Ë* 
v20
[
axis1
]

228 - (
v1
[
axis1
] - 
v2
[axis1]Ë* 
v20
[
axis0
]);

230 if(
	gd20
 > 
	gvd1
Ë 
	gÁl£
;

235 
	gb¨y˚¡ric
 = 
Vec3
<
T
>(
d12
 / 
vd0
, 
	gd20
 / 
	gvd1
, 
	gd01
 / 
	gvd2
);

236 
	g‰⁄t
 = 
löe
.
dú
.
dŸ
(
c
) < 0;

238  
	gåue
;

241 
	gãm∂©e
 <
˛ass
 
	gT
>

242 
	gVec3
<
	gT
>

243 
˛o£°Vîãx
(c⁄° 
Vec3
<
T
> &
v0
,

244 c⁄° 
Vec3
<
T
> &
v1
,

245 c⁄° 
Vec3
<
T
> &
v2
,

246 c⁄° 
Löe3
<
T
> &
l
)

248 
	gVec3
<
	gT
> 
	g√¨e°
 = 
v0
;

249 
T
 
	g√¨dŸ
 = (
v0
 - 
l
.
˛o£°PoötTo
(v0)).
Àngth2
();

251 
T
 
	gtmp
 = (
v1
 - 
l
.
˛o£°PoötTo
(v1)).
Àngth2
();

253 i‡(
	gtmp
 < 
	g√¨dŸ
)

255 
	g√¨dŸ
 = 
tmp
;

256 
	g√¨e°
 = 
v1
;

259 
	gtmp
 = (
v2
 - 
l
.
˛o£°PoötTo
(v2)).
Àngth2
();

260 i‡(
	gtmp
 < 
	g√¨dŸ
)

262 
	g√¨dŸ
 = 
tmp
;

263 
	g√¨e°
 = 
v2
;

266  
	g√¨e°
;

269 
	gãm∂©e
 <
˛ass
 
	gT
>

270 
	gVec3
<
	gT
>

271 
√¨e°PoötOnTrüngÀ
(c⁄° 
Vec3
<
T
> &
v0
,

272 c⁄° 
Vec3
<
T
> &
v1
,

273 c⁄° 
Vec3
<
T
> &
v2
,

274 c⁄° 
Löe3
<
T
> &
l
)

276 
	gVec3
<
	gT
> 
	g±
, 
	gb¨y˚¡ric
;

277 
boﬁ
 
	g‰⁄t
;

279 i‡(
öãr£˘
 (
l
, 
v0
, 
v1
, 
v2
, 
±
, 
b¨y˚¡ric
, 
‰⁄t
))

280  
	g±
;

299  
˛o£°Vîãx
(
v0
, 
v1
, 
v2
, 
l
);

302 
	gãm∂©e
 <
˛ass
 
	gT
>

303 
	gVec3
<
	gT
>

304 
rŸ©ePoöt
(c⁄° 
Vec3
<
T
> 
p
, 
Löe3
<T> 
l
, T 
™gÀ
)

315 
	gVec3
<
	gT
> 
	gq
 = 
l
.
˛o£°PoötTo
(
p
);

316 
	gVec3
<
	gT
> 
	gx
 = 
p
 - 
q
;

317 
T
 
	gødius
 = 
x
.
Àngth
();

319 
	gx
.
n‹mÆize
();

320 
	gVec3
<
	gT
> 
	gy
 = (
x
 % 
l
.
dú
).
n‹mÆize
();

322 
T
 
	gcoßngÀ
 = 
M©h
<T>::
cos
(
™gÀ
);

323 
T
 
	gsö™gÀ
 = 
M©h
<T>::
sö
(
™gÀ
);

325 
	gVec3
<
	gT
> 
	gr
 = 
q
 + 
x
 * 
ødius
 * 
coßngÀ
 + 
y
 *Ñadiu†* 
sö™gÀ
;

327  
	gr
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h

37 #i‚de‡
INCLUDED_IMATHMATH_H


38 
	#INCLUDED_IMATHMATH_H


	)

83 
	~"Im©hPœtf‹m.h
"

84 
	~<m©h.h
>

86 
«me•a˚
 
	gIm©h
 {

89 
	gãm∂©e
 <
˛ass
 
	gT
>

90 
	sM©h


92 
T
 
acos
 (T 
x
) { ::acos ((x));}

93 
T
 
asö
 (T 
x
) { ::asin ((x));}

94 
T
 
©™
 (T 
x
) { ::atan ((x));}

95 
T
 
©™2
 (T 
x
, T 
y
) { ::atan2 ((x), (y));}

96 
T
 
cos
 (T 
x
) { ::cos ((x));}

97 
T
 
sö
 (T 
x
) { ::sin ((x));}

98 
T
 
èn
 (T 
x
) { ::tan ((x));}

99 
T
 
cosh
 (T 
x
) { ::cosh ((x));}

100 
T
 
söh
 (T 
x
) { ::sinh ((x));}

101 
T
 
ènh
 (T 
x
) { ::tanh ((x));}

102 
T
 
exp
 (T 
x
) { ::exp ((x));}

103 
T
 
log
 (T 
x
) { ::log ((x));}

104 
T
 
log10
 (T 
x
) { ::log10 ((x));}

105 
T
 
modf
 (T 
x
, T *
ùå
)

107 
	givÆ
;

108 
T
 
rvÆ
–::
modf
 ((
x
),&
ivÆ
));

109 *
	gùå
 = 
ivÆ
;

110  
	grvÆ
;

112 
T
 
pow
 (T 
x
, T 
y
) { ::pow ((x), (y));}

113 
T
 
sqπ
 (T 
x
) { ::sqrt ((x));}

114 
T
 
˚û
 (T 
x
) { ::ceil ((x));}

115 
T
 
Ábs
 (T 
x
) { ::fabs ((x));}

116 
T
 
Êo‹
 (T 
x
) { ::floor ((x));}

117 
T
 
fmod
 (T 
x
, T 
y
) { ::fmod ((x), (y));}

118 
T
 
hypŸ
 (T 
x
, T 
y
) { ::hypot ((x), (y));}

122 
	gãm∂©e
 <>

123 
	gM©h
<>

125 
acos
 (
x
Ë{ ::
acosf
 (x);}

126 
asö
 (
x
Ë{ ::
asöf
 (x);}

127 
©™
 (
x
Ë{ ::
©™f
 (x);}

128 
©™2
 (
x
, 
y
Ë{ ::
©™2f
 (x, y);}

129 
cos
 (
x
Ë{ ::
cosf
 (x);}

130 
sö
 (
x
Ë{ ::
söf
 (x);}

131 
èn
 (
x
Ë{ ::
ènf
 (x);}

132 
cosh
 (
x
Ë{ ::
coshf
 (x);}

133 
söh
 (
x
Ë{ ::
söhf
 (x);}

134 
ènh
 (
x
Ë{ ::
ènhf
 (x);}

135 
exp
 (
x
Ë{ ::
expf
 (x);}

136 
log
 (
x
Ë{ ::
logf
 (x);}

137 
log10
 (
x
Ë{ ::
log10f
 (x);}

138 
modf
 (
x
, *
y
Ë{ ::
modff
 (x, y);}

139 
pow
 (
x
, 
y
Ë{ ::
powf
 (x, y);}

140 
sqπ
 (
x
Ë{ ::
sqπf
 (x);}

141 
˚û
 (
x
Ë{ ::
˚ûf
 (x);}

142 
Ábs
 (
x
Ë{ ::
Ábsf
 (x);}

143 
Êo‹
 (
x
Ë{ ::
Êo‹f
 (x);}

144 
fmod
 (
x
, 
y
Ë{ ::
fmodf
 (x, y);}

145 #i‡!
deföed
(
_MSC_VER
)

146 
hypŸ
 (
x
, 
y
Ë{ ::
hypŸf
 (x, y);}

148 
hypŸ
 (
x
, 
y
Ë{ ::
sqπf
(x*x + y*y);}

172 
	gãm∂©e
 <
˛ass
 
	gT
>

173 
ölöe
 
boﬁ


174 
equÆWôhAbsEº‹
 (
T
 
x1
, T 
x2
, T 
e
)

176  ((
	gx1
 > 
	gx2
)? x1 - x2: 
x2
 - 
x1
Ë<
e
;

180 
	gãm∂©e
 <
˛ass
 
	gT
>

181 
ölöe
 
boﬁ


182 
equÆWôhRñEº‹
 (
T
 
x1
, T 
x2
, T 
e
)

184  ((
	gx1
 > 
	gx2
)? x1 - x2: 
x2
 - 
x1
Ë<
e
 * ((x1 > 0)? x1: -x1);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h

37 #i‚de‡
INCLUDED_IMATHMATRIX_H


38 
	#INCLUDED_IMATHMATRIX_H


	)

46 
	~"Im©hPœtf‹m.h
"

47 
	~"Im©hFun.h
"

48 
	~"Im©hExc.h
"

49 
	~"Im©hVec.h
"

50 
	~"Im©hShór.h
"

52 
	~<io°ªam
>

53 
	~<iom™ù
>

56 
«me•a˚
 
	gIm©h
 {

59 
	gãm∂©e
 <
˛ass
 
	gT
> cœs†
	cM©rix33


61 
	gpublic
:

67 
T
 
x
[3][3];

69 
T
 * 
	g›î©‹
 [] (
	gi
);

70 c⁄° 
T
 * 
	g›î©‹
 [] (
	gi
) const;

77 
M©rix33
 ();

82 
M©rix33
 (
T
 
a
);

87 
M©rix33
 (c⁄° 
T
 
a
[3][3]);

92 
M©rix33
 (
T
 
a
, T 
b
, T 
c
, T 
d
, T 
e
, T 
f
, T 
g
, T 
h
, T 
i
);

103 
M©rix33
 (c⁄° M©rix33 &
v
);

105 c⁄° 
	gM©rix33
 & 
	g›î©‹
 = (c⁄° 
M©rix33
 &
v
);

106 c⁄° 
	gM©rix33
 & 
	g›î©‹
 = (
T
 
a
);

113 
T
 * 
gëVÆue
 ();

114 c⁄° 
T
 * 
gëVÆue
 () const;

116 
	gãm∂©e
 <
˛ass
 
	gS
>

117 
gëVÆue
 (
M©rix33
<
S
> &
v
) const;

118 
	gãm∂©e
 <
˛ass
 
	gS
>

119 
	gM©rix33
 & 
£tVÆue
 (c⁄° 
M©rix33
<
S
> &
v
);

121 
	gãm∂©e
 <
˛ass
 
	gS
>

122 
	gM©rix33
 & 
£tTheM©rix
 (c⁄° 
M©rix33
<
S
> &
v
);

129 
makeIdítôy
();

136 
boﬁ
 
	g›î©‹
 =(c⁄° 
M©rix33
 &
v
) const;

137 
boﬁ
 
	g›î©‹
 !(c⁄° 
M©rix33
 &
v
) const;

157 
boﬁ
 
equÆWôhAbsEº‹
 (c⁄° 
M©rix33
<
T
> &
v
, T 
e
) const;

158 
boﬁ
 
equÆWôhRñEº‹
 (c⁄° 
M©rix33
<
T
> &
v
, T 
e
) const;

165 c⁄° 
	gM©rix33
 & 
	g›î©‹
 +(c⁄° 
M©rix33
 &
v
);

166 c⁄° 
	gM©rix33
 & 
	g›î©‹
 +(
T
 
a
);

167 
M©rix33
 
	g›î©‹
 + (c⁄° 
	gM©rix33
 &
	gv
) const;

174 c⁄° 
	gM©rix33
 & 
	g›î©‹
 -(c⁄° 
M©rix33
 &
v
);

175 c⁄° 
	gM©rix33
 & 
	g›î©‹
 -(
T
 
a
);

176 
M©rix33
 
	g›î©‹
 - (c⁄° 
	gM©rix33
 &
	gv
) const;

183 
M©rix33
 
	g›î©‹
 - () const;

184 c⁄° 
	gM©rix33
 & 
√g©e
 ();

191 c⁄° 
	gM©rix33
 & 
	g›î©‹
 *(
T
 
a
);

192 
M©rix33
 
	g›î©‹
 * (
T
 
	ga
) const;

199 c⁄° 
	gM©rix33
 & 
	g›î©‹
 *(c⁄° 
M©rix33
 &
v
);

200 
M©rix33
 
	g›î©‹
 * (c⁄° 
	gM©rix33
 &
	gv
) const;

208 
	gãm∂©e
 <
˛ass
 
	gS
>

209 
mu…VecM©rix
(c⁄° 
Vec2
<
S
> &
§c
, Vec2<S> &
d°
) const;

211 
	gãm∂©e
 <
˛ass
 
	gS
>

212 
mu…DúM©rix
(c⁄° 
Vec2
<
S
> &
§c
, Vec2<S> &
d°
) const;

219 c⁄° 
	gM©rix33
 & 
	g›î©‹
 /(
T
 
a
);

220 
M©rix33
 
	g›î©‹
 / (
T
 
	ga
) const;

227 c⁄° 
	gM©rix33
 & 
å™•o£
 ();

228 
M©rix33
 
å™•o£d
 () const;

245 c⁄° 
	gM©rix33
 & 
övît
 (
boﬁ
 
sögExc
 = 
Ál£
)

246 
throw
 (
Iex
::
M©hExc
);

248 
	gM©rix33
<
	gT
> 
övî£
 (
boﬁ
 
sögExc
 = 
Ál£
) const

249 
throw
 (
Iex
::
M©hExc
);

251 c⁄° 
	gM©rix33
 & 
gjInvît
 (
boﬁ
 
sögExc
 = 
Ál£
)

252 
throw
 (
Iex
::
M©hExc
);

254 
	gM©rix33
<
	gT
> 
gjInvî£
 (
boﬁ
 
sögExc
 = 
Ál£
) const

255 
throw
 (
Iex
::
M©hExc
);

262 
	gãm∂©e
 <
˛ass
 
	gS
>

263 c⁄° 
	gM©rix33
 & 
£tRŸ©i⁄
 (
S
 
r
);

270 
	gãm∂©e
 <
˛ass
 
	gS
>

271 c⁄° 
	gM©rix33
 & 
rŸ©e
 (
S
 
r
);

278 c⁄° 
	gM©rix33
 & 
£tSˇÀ
 (
T
 
s
);

285 
	gãm∂©e
 <
˛ass
 
	gS
>

286 c⁄° 
	gM©rix33
 & 
£tSˇÀ
 (c⁄° 
Vec2
<
S
> &
s
);

293 
	gãm∂©e
 <
˛ass
 
	gS
>

294 c⁄° 
	gM©rix33
 & 
sˇÀ
 (c⁄° 
Vec2
<
S
> &
s
);

301 
	gãm∂©e
 <
˛ass
 
	gS
>

302 c⁄° 
	gM©rix33
 & 
£tTøn¶©i⁄
 (c⁄° 
Vec2
<
S
> &
t
);

309 
	gVec2
<
	gT
> 
å™¶©i⁄
 () const;

316 
	gãm∂©e
 <
˛ass
 
	gS
>

317 c⁄° 
	gM©rix33
 & 
å™¶©e
 (c⁄° 
Vec2
<
S
> &
t
);

324 
	gãm∂©e
 <
˛ass
 
	gS
>

325 c⁄° 
	gM©rix33
 & 
£tShór
 (c⁄° 
S
 &
h
);

333 
	gãm∂©e
 <
˛ass
 
	gS
>

334 c⁄° 
	gM©rix33
 & 
£tShór
 (c⁄° 
Vec2
<
S
> &
h
);

341 
	gãm∂©e
 <
˛ass
 
	gS
>

342 c⁄° 
	gM©rix33
 & 
shór
 (c⁄° 
S
 &
xy
);

350 
	gãm∂©e
 <
˛ass
 
	gS
>

351 c⁄° 
	gM©rix33
 & 
shór
 (c⁄° 
Vec2
<
S
> &
h
);

358 
T
 
ba£Ty≥Mö
(Ë{ 
	glimôs
<
	gT
>::
mö
();}

359 
T
 
ba£Ty≥Max
(Ë{ 
	glimôs
<
	gT
>::
max
();}

360 
T
 
ba£Ty≥SmÆÀ°
(Ë{ 
	glimôs
<
	gT
>::
smÆÀ°
();}

361 
T
 
ba£Ty≥Epsû⁄
(Ë{ 
	glimôs
<
	gT
>::
ïsû⁄
();}

365 
	gãm∂©e
 <
˛ass
 
	gT
> cœs†
	cM©rix44


367 
	gpublic
:

373 
T
 
x
[4][4];

375 
T
 * 
	g›î©‹
 [] (
	gi
);

376 c⁄° 
T
 * 
	g›î©‹
 [] (
	gi
) const;

383 
M©rix44
 ();

389 
M©rix44
 (
T
 
a
);

395 
M©rix44
 (c⁄° 
T
 
a
[4][4]) ;

401 
M©rix44
 (
T
 
a
, T 
b
, T 
c
, T 
d
, T 
e
, T 
f
, T 
g
, T 
h
,

402 
T
 
i
, T 
j
, T 
k
, T 
l
, T 
m
, T 
n
, T 
o
, T 
p
);

409 
M©rix44
 (
M©rix33
<
T
> 
r
, 
Vec3
<T> 
t
);

420 
M©rix44
 (c⁄° M©rix44 &
v
);

422 c⁄° 
	gM©rix44
 & 
	g›î©‹
 = (c⁄° 
M©rix44
 &
v
);

423 c⁄° 
	gM©rix44
 & 
	g›î©‹
 = (
T
 
a
);

430 
T
 * 
gëVÆue
 ();

431 c⁄° 
T
 * 
gëVÆue
 () const;

433 
	gãm∂©e
 <
˛ass
 
	gS
>

434 
gëVÆue
 (
M©rix44
<
S
> &
v
) const;

435 
	gãm∂©e
 <
˛ass
 
	gS
>

436 
	gM©rix44
 & 
£tVÆue
 (c⁄° 
M©rix44
<
S
> &
v
);

438 
	gãm∂©e
 <
˛ass
 
	gS
>

439 
	gM©rix44
 & 
£tTheM©rix
 (c⁄° 
M©rix44
<
S
> &
v
);

445 
makeIdítôy
();

452 
boﬁ
 
	g›î©‹
 =(c⁄° 
M©rix44
 &
v
) const;

453 
boﬁ
 
	g›î©‹
 !(c⁄° 
M©rix44
 &
v
) const;

473 
boﬁ
 
equÆWôhAbsEº‹
 (c⁄° 
M©rix44
<
T
> &
v
, T 
e
) const;

474 
boﬁ
 
equÆWôhRñEº‹
 (c⁄° 
M©rix44
<
T
> &
v
, T 
e
) const;

481 c⁄° 
	gM©rix44
 & 
	g›î©‹
 +(c⁄° 
M©rix44
 &
v
);

482 c⁄° 
	gM©rix44
 & 
	g›î©‹
 +(
T
 
a
);

483 
M©rix44
 
	g›î©‹
 + (c⁄° 
	gM©rix44
 &
	gv
) const;

490 c⁄° 
	gM©rix44
 & 
	g›î©‹
 -(c⁄° 
M©rix44
 &
v
);

491 c⁄° 
	gM©rix44
 & 
	g›î©‹
 -(
T
 
a
);

492 
M©rix44
 
	g›î©‹
 - (c⁄° 
	gM©rix44
 &
	gv
) const;

499 
M©rix44
 
	g›î©‹
 - () const;

500 c⁄° 
	gM©rix44
 & 
√g©e
 ();

507 c⁄° 
	gM©rix44
 & 
	g›î©‹
 *(
T
 
a
);

508 
M©rix44
 
	g›î©‹
 * (
T
 
	ga
) const;

515 c⁄° 
	gM©rix44
 & 
	g›î©‹
 *(c⁄° 
M©rix44
 &
v
);

516 
M©rix44
 
	g›î©‹
 * (c⁄° 
	gM©rix44
 &
	gv
) const;

518 
mu…ùly
 (c⁄° 
M©rix44
 &
a
,

519 c⁄° 
M©rix44
 &
b
,

520 
M©rix44
 &
c
);

528 
	gãm∂©e
 <
˛ass
 
	gS
>

529 
mu…VecM©rix
(c⁄° 
Vec3
<
S
> &
§c
, Vec3<S> &
d°
) const;

531 
	gãm∂©e
 <
˛ass
 
	gS
>

532 
mu…DúM©rix
(c⁄° 
Vec3
<
S
> &
§c
, Vec3<S> &
d°
) const;

539 c⁄° 
	gM©rix44
 & 
	g›î©‹
 /(
T
 
a
);

540 
M©rix44
 
	g›î©‹
 / (
T
 
	ga
) const;

547 c⁄° 
	gM©rix44
 & 
å™•o£
 ();

548 
M©rix44
 
å™•o£d
 () const;

565 c⁄° 
	gM©rix44
 & 
övît
 (
boﬁ
 
sögExc
 = 
Ál£
)

566 
throw
 (
Iex
::
M©hExc
);

568 
	gM©rix44
<
	gT
> 
övî£
 (
boﬁ
 
sögExc
 = 
Ál£
) const

569 
throw
 (
Iex
::
M©hExc
);

571 c⁄° 
	gM©rix44
 & 
gjInvît
 (
boﬁ
 
sögExc
 = 
Ál£
)

572 
throw
 (
Iex
::
M©hExc
);

574 
	gM©rix44
<
	gT
> 
gjInvî£
 (
boﬁ
 
sögExc
 = 
Ál£
) const

575 
throw
 (
Iex
::
M©hExc
);

582 
	gãm∂©e
 <
˛ass
 
	gS
>

583 c⁄° 
	gM©rix44
 & 
£tEuÀrAngÀs
 (c⁄° 
Vec3
<
S
>& 
r
);

590 
	gãm∂©e
 <
˛ass
 
	gS
>

591 c⁄° 
	gM©rix44
 & 
£tAxisAngÀ
 (c⁄° 
Vec3
<
S
>& 
ax
, S 
™g
);

598 
	gãm∂©e
 <
˛ass
 
	gS
>

599 c⁄° 
	gM©rix44
 & 
rŸ©e
 (c⁄° 
Vec3
<
S
> &
r
);

606 c⁄° 
	gM©rix44
 & 
£tSˇÀ
 (
T
 
s
);

613 
	gãm∂©e
 <
˛ass
 
	gS
>

614 c⁄° 
	gM©rix44
 & 
£tSˇÀ
 (c⁄° 
Vec3
<
S
> &
s
);

621 
	gãm∂©e
 <
˛ass
 
	gS
>

622 c⁄° 
	gM©rix44
 & 
sˇÀ
 (c⁄° 
Vec3
<
S
> &
s
);

629 
	gãm∂©e
 <
˛ass
 
	gS
>

630 c⁄° 
	gM©rix44
 & 
£tTøn¶©i⁄
 (c⁄° 
Vec3
<
S
> &
t
);

637 c⁄° 
	gVec3
<
	gT
> 
å™¶©i⁄
 () const;

644 
	gãm∂©e
 <
˛ass
 
	gS
>

645 c⁄° 
	gM©rix44
 & 
å™¶©e
 (c⁄° 
Vec3
<
S
> &
t
);

655 
	gãm∂©e
 <
˛ass
 
	gS
>

656 c⁄° 
	gM©rix44
 & 
£tShór
 (c⁄° 
Vec3
<
S
> &
h
);

669 
	gãm∂©e
 <
˛ass
 
	gS
>

670 c⁄° 
	gM©rix44
 & 
£tShór
 (c⁄° 
Shór6
<
S
> &
h
);

681 
	gãm∂©e
 <
˛ass
 
	gS
>

682 c⁄° 
	gM©rix44
 & 
shór
 (c⁄° 
Vec3
<
S
> &
h
);

696 
	gãm∂©e
 <
˛ass
 
	gS
>

697 c⁄° 
	gM©rix44
 & 
shór
 (c⁄° 
Shór6
<
S
> &
h
);

704 
T
 
ba£Ty≥Mö
(Ë{ 
	glimôs
<
	gT
>::
mö
();}

705 
T
 
ba£Ty≥Max
(Ë{ 
	glimôs
<
	gT
>::
max
();}

706 
T
 
ba£Ty≥SmÆÀ°
(Ë{ 
	glimôs
<
	gT
>::
smÆÀ°
();}

707 
T
 
ba£Ty≥Epsû⁄
(Ë{ 
	glimôs
<
	gT
>::
ïsû⁄
();}

715 
	gãm∂©e
 <
˛ass
 
	gT
>

716 
	g°d
::
o°ªam
 & 
›î©‹
 << (
°d
::o°ªam & 
s
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
);

718 
	gãm∂©e
 <
˛ass
 
	gT
>

719 
	g°d
::
o°ªam
 & 
›î©‹
 << (
°d
::o°ªam & 
s
, c⁄° 
	gM©rix44
<
	gT
> &
	gm
);

726 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

727 c⁄° 
	gVec2
<
	gS
> & 
	g›î©‹
 *(
Vec2
<
S
> &
v
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
);

729 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

730 
	gVec2
<
	gS
> 
	g›î©‹
 * (c⁄° Vec2<S> &
	gv
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
);

732 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

733 c⁄° 
	gVec3
<
	gS
> & 
	g›î©‹
 *(
Vec3
<
S
> &
v
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
);

735 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

736 
	gVec3
<
	gS
> 
	g›î©‹
 * (c⁄° Vec3<S> &
	gv
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
);

738 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

739 c⁄° 
	gVec3
<
	gS
> & 
	g›î©‹
 *(
Vec3
<
S
> &
v
, c⁄° 
	gM©rix44
<
	gT
> &
	gm
);

741 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

742 
	gVec3
<
	gS
> 
	g›î©‹
 * (c⁄° Vec3<S> &
	gv
, c⁄° 
	gM©rix44
<
	gT
> &
	gm
);

749 
	gM©rix33
 <> 
	tM33f
;

750 
	gM©rix33
 <> 
	tM33d
;

751 
	gM©rix44
 <> 
	tM44f
;

752 
	gM©rix44
 <> 
	tM44d
;

759 
	gãm∂©e
 <
˛ass
 
	gT
>

760 
ölöe
 
T
 *

761 
	gM©rix33
<
	gT
>::
›î©‹
 [] (
i
)

763  
x
[
i
];

766 
	gãm∂©e
 <
˛ass
 
	gT
>

767 
ölöe
 c⁄° 
T
 *

768 
	gM©rix33
<
	gT
>::
›î©‹
 [] (
i
) const

770  
x
[
i
];

773 
	gãm∂©e
 <
˛ass
 
	gT
>

774 
ölöe


775 
	gM©rix33
<
	gT
>::
	$M©rix33
 ()

777 
x
[0][0] = 1;

778 
x
[0][1] = 0;

779 
x
[0][2] = 0;

780 
x
[1][0] = 0;

781 
x
[1][1] = 1;

782 
x
[1][2] = 0;

783 
x
[2][0] = 0;

784 
x
[2][1] = 0;

785 
x
[2][2] = 1;

786 
	}
}

788 
	gãm∂©e
 <
˛ass
 
	gT
>

789 
ölöe


790 
	gM©rix33
<
	gT
>::
	$M©rix33
 (
T
 
a
)

792 
x
[0][0] = 
a
;

793 
x
[0][1] = 
a
;

794 
x
[0][2] = 
a
;

795 
x
[1][0] = 
a
;

796 
x
[1][1] = 
a
;

797 
x
[1][2] = 
a
;

798 
x
[2][0] = 
a
;

799 
x
[2][1] = 
a
;

800 
x
[2][2] = 
a
;

801 
	}
}

803 
	gãm∂©e
 <
˛ass
 
	gT
>

804 
ölöe


805 
	gM©rix33
<
	gT
>::
	$M©rix33
 (c⁄° 
T
 
a
[3][3])

807 
x
[0][0] = 
a
[0][0];

808 
x
[0][1] = 
a
[0][1];

809 
x
[0][2] = 
a
[0][2];

810 
x
[1][0] = 
a
[1][0];

811 
x
[1][1] = 
a
[1][1];

812 
x
[1][2] = 
a
[1][2];

813 
x
[2][0] = 
a
[2][0];

814 
x
[2][1] = 
a
[2][1];

815 
x
[2][2] = 
a
[2][2];

816 
	}
}

818 
	gãm∂©e
 <
˛ass
 
	gT
>

819 
ölöe


820 
	gM©rix33
<
	gT
>::
	$M©rix33
 (
T
 
a
, T 
b
, T 
c
, T 
d
, T 
e
, T 
f
, T 
g
, T 
h
, T 
i
)

822 
x
[0][0] = 
a
;

823 
x
[0][1] = 
b
;

824 
x
[0][2] = 
c
;

825 
x
[1][0] = 
d
;

826 
x
[1][1] = 
e
;

827 
x
[1][2] = 
f
;

828 
x
[2][0] = 
g
;

829 
x
[2][1] = 
h
;

830 
x
[2][2] = 
i
;

831 
	}
}

833 
	gãm∂©e
 <
˛ass
 
	gT
>

834 
ölöe


835 
	gM©rix33
<
	gT
>::
	$M©rix33
 (c⁄° 
M©rix33
 &
v
)

837 
x
[0][0] = 
v
.x[0][0];

838 
x
[0][1] = 
v
.x[0][1];

839 
x
[0][2] = 
v
.x[0][2];

840 
x
[1][0] = 
v
.x[1][0];

841 
x
[1][1] = 
v
.x[1][1];

842 
x
[1][2] = 
v
.x[1][2];

843 
x
[2][0] = 
v
.x[2][0];

844 
x
[2][1] = 
v
.x[2][1];

845 
x
[2][2] = 
v
.x[2][2];

846 
	}
}

848 
	gãm∂©e
 <
˛ass
 
	gT
>

849 
ölöe
 c⁄° 
	gM©rix33
<
	gT
> &

850 
	gM©rix33
<
	gT
>::
›î©‹
 = (c⁄° 
M©rix33
 &
v
)

852 
x
[0][0] = 
v
.x[0][0];

853 
	gx
[0][1] = 
v
.
x
[0][1];

854 
	gx
[0][2] = 
v
.
x
[0][2];

855 
	gx
[1][0] = 
v
.
x
[1][0];

856 
	gx
[1][1] = 
v
.
x
[1][1];

857 
	gx
[1][2] = 
v
.
x
[1][2];

858 
	gx
[2][0] = 
v
.
x
[2][0];

859 
	gx
[2][1] = 
v
.
x
[2][1];

860 
	gx
[2][2] = 
v
.
x
[2][2];

861  *
	gthis
;

864 
	gãm∂©e
 <
˛ass
 
	gT
>

865 
ölöe
 c⁄° 
	gM©rix33
<
	gT
> &

866 
	gM©rix33
<
	gT
>::
›î©‹
 = (
T
 
a
)

868 
x
[0][0] = 
a
;

869 
	gx
[0][1] = 
a
;

870 
	gx
[0][2] = 
a
;

871 
	gx
[1][0] = 
a
;

872 
	gx
[1][1] = 
a
;

873 
	gx
[1][2] = 
a
;

874 
	gx
[2][0] = 
a
;

875 
	gx
[2][1] = 
a
;

876 
	gx
[2][2] = 
a
;

877  *
	gthis
;

880 
	gãm∂©e
 <
˛ass
 
	gT
>

881 
ölöe
 
T
 *

882 
	gM©rix33
<
	gT
>::
	$gëVÆue
 ()

884  (
T
 *Ë&
x
[0][0];

885 
	}
}

887 
	gãm∂©e
 <
˛ass
 
	gT
>

888 
ölöe
 c⁄° 
T
 *

889 
	gM©rix33
<
	gT
>::
	$gëVÆue
 () const

891  (c⁄° 
T
 *Ë&
x
[0][0];

892 
	}
}

894 
	gãm∂©e
 <
˛ass
 
	gT
>

895 
	gãm∂©e
 <
˛ass
 
	gS
>

896 
ölöe
 

897 
	gM©rix33
<
	gT
>::
gëVÆue
 (
M©rix33
<
S
> &
v
) const

899 
v
.
x
[0][0] = x[0][0];

900 
	gv
.
	gx
[0][1] = 
x
[0][1];

901 
	gv
.
	gx
[0][2] = 
x
[0][2];

902 
	gv
.
	gx
[1][0] = 
x
[1][0];

903 
	gv
.
	gx
[1][1] = 
x
[1][1];

904 
	gv
.
	gx
[1][2] = 
x
[1][2];

905 
	gv
.
	gx
[2][0] = 
x
[2][0];

906 
	gv
.
	gx
[2][1] = 
x
[2][1];

907 
	gv
.
	gx
[2][2] = 
x
[2][2];

910 
	gãm∂©e
 <
˛ass
 
	gT
>

911 
	gãm∂©e
 <
˛ass
 
	gS
>

912 
ölöe
 
	gM©rix33
<
	gT
> &

913 
	gM©rix33
<
	gT
>::
£tVÆue
 (c⁄° 
M©rix33
<
S
> &
v
)

915 
x
[0][0] = 
v
.x[0][0];

916 
	gx
[0][1] = 
v
.
x
[0][1];

917 
	gx
[0][2] = 
v
.
x
[0][2];

918 
	gx
[1][0] = 
v
.
x
[1][0];

919 
	gx
[1][1] = 
v
.
x
[1][1];

920 
	gx
[1][2] = 
v
.
x
[1][2];

921 
	gx
[2][0] = 
v
.
x
[2][0];

922 
	gx
[2][1] = 
v
.
x
[2][1];

923 
	gx
[2][2] = 
v
.
x
[2][2];

924  *
	gthis
;

927 
	gãm∂©e
 <
˛ass
 
	gT
>

928 
	gãm∂©e
 <
˛ass
 
	gS
>

929 
ölöe
 
	gM©rix33
<
	gT
> &

930 
	gM©rix33
<
	gT
>::
£tTheM©rix
 (c⁄° 
M©rix33
<
S
> &
v
)

932 
x
[0][0] = 
v
.x[0][0];

933 
	gx
[0][1] = 
v
.
x
[0][1];

934 
	gx
[0][2] = 
v
.
x
[0][2];

935 
	gx
[1][0] = 
v
.
x
[1][0];

936 
	gx
[1][1] = 
v
.
x
[1][1];

937 
	gx
[1][2] = 
v
.
x
[1][2];

938 
	gx
[2][0] = 
v
.
x
[2][0];

939 
	gx
[2][1] = 
v
.
x
[2][1];

940 
	gx
[2][2] = 
v
.
x
[2][2];

941  *
	gthis
;

944 
	gãm∂©e
 <
˛ass
 
	gT
>

945 
ölöe
 

946 
	gM©rix33
<
	gT
>::
	$makeIdítôy
()

948 
x
[0][0] = 1;

949 
x
[0][1] = 0;

950 
x
[0][2] = 0;

951 
x
[1][0] = 0;

952 
x
[1][1] = 1;

953 
x
[1][2] = 0;

954 
x
[2][0] = 0;

955 
x
[2][1] = 0;

956 
x
[2][2] = 1;

957 
	}
}

959 
	gãm∂©e
 <
˛ass
 
	gT
>

960 
boﬁ


961 
	gM©rix33
<
	gT
>::
›î©‹
 =(c⁄° 
M©rix33
 &
v
) const

963  
x
[0][0] =
v
.x[0][0] &&

964 
x
[0][1] =
v
.x[0][1] &&

965 
x
[0][2] =
v
.x[0][2] &&

966 
x
[1][0] =
v
.x[1][0] &&

967 
x
[1][1] =
v
.x[1][1] &&

968 
x
[1][2] =
v
.x[1][2] &&

969 
x
[2][0] =
v
.x[2][0] &&

970 
x
[2][1] =
v
.x[2][1] &&

971 
x
[2][2] =
v
.x[2][2];

974 
	gãm∂©e
 <
˛ass
 
	gT
>

975 
boﬁ


976 
	gM©rix33
<
	gT
>::
›î©‹
 !(c⁄° 
M©rix33
 &
v
) const

978  
x
[0][0] !
v
.x[0][0] ||

979 
x
[0][1] !
v
.x[0][1] ||

980 
x
[0][2] !
v
.x[0][2] ||

981 
x
[1][0] !
v
.x[1][0] ||

982 
x
[1][1] !
v
.x[1][1] ||

983 
x
[1][2] !
v
.x[1][2] ||

984 
x
[2][0] !
v
.x[2][0] ||

985 
x
[2][1] !
v
.x[2][1] ||

986 
x
[2][2] !
v
.x[2][2];

989 
	gãm∂©e
 <
˛ass
 
	gT
>

990 
boﬁ


991 
	gM©rix33
<
	gT
>::
equÆWôhAbsEº‹
 (c⁄° 
M©rix33
<
T
> &
m
, T 
e
) const

993 
	gi
 = 0; i < 3; i++)

994 
	gj
 = 0; j < 3; j++)

995 i‡(!
	gIm©h
::
equÆWôhAbsEº‹
 ((*
this
)[
i
][
j
], 
m
[i][j], 
e
))

996  
	gÁl£
;

998  
	gåue
;

1001 
	gãm∂©e
 <
˛ass
 
	gT
>

1002 
boﬁ


1003 
	gM©rix33
<
	gT
>::
equÆWôhRñEº‹
 (c⁄° 
M©rix33
<
T
> &
m
, T 
e
) const

1005 
	gi
 = 0; i < 3; i++)

1006 
	gj
 = 0; j < 3; j++)

1007 i‡(!
	gIm©h
::
equÆWôhRñEº‹
 ((*
this
)[
i
][
j
], 
m
[i][j], 
e
))

1008  
	gÁl£
;

1010  
	gåue
;

1013 
	gãm∂©e
 <
˛ass
 
	gT
>

1014 c⁄° 
	gM©rix33
<
	gT
> &

1015 
	gM©rix33
<
	gT
>::
›î©‹
 +(c⁄° 
M©rix33
<
T
> &
v
)

1017 
x
[0][0] +
v
.x[0][0];

1018 
	gx
[0][1] +
v
.
x
[0][1];

1019 
	gx
[0][2] +
v
.
x
[0][2];

1020 
	gx
[1][0] +
v
.
x
[1][0];

1021 
	gx
[1][1] +
v
.
x
[1][1];

1022 
	gx
[1][2] +
v
.
x
[1][2];

1023 
	gx
[2][0] +
v
.
x
[2][0];

1024 
	gx
[2][1] +
v
.
x
[2][1];

1025 
	gx
[2][2] +
v
.
x
[2][2];

1027  *
	gthis
;

1030 
	gãm∂©e
 <
˛ass
 
	gT
>

1031 c⁄° 
	gM©rix33
<
	gT
> &

1032 
	gM©rix33
<
	gT
>::
›î©‹
 +(
T
 
a
)

1034 
x
[0][0] +
a
;

1035 
	gx
[0][1] +
a
;

1036 
	gx
[0][2] +
a
;

1037 
	gx
[1][0] +
a
;

1038 
	gx
[1][1] +
a
;

1039 
	gx
[1][2] +
a
;

1040 
	gx
[2][0] +
a
;

1041 
	gx
[2][1] +
a
;

1042 
	gx
[2][2] +
a
;

1044  *
	gthis
;

1047 
	gãm∂©e
 <
˛ass
 
	gT
>

1048 
	gM©rix33
<
	gT
>

1049 
	gM©rix33
<
	gT
>::
›î©‹
 + (c⁄° 
M©rix33
<
T
> &
v
) const

1051  
M©rix33
 (
x
[0][0] + 
v
.x[0][0],

1052 
x
[0][1] + 
v
.x[0][1],

1053 
x
[0][2] + 
v
.x[0][2],

1054 
x
[1][0] + 
v
.x[1][0],

1055 
x
[1][1] + 
v
.x[1][1],

1056 
x
[1][2] + 
v
.x[1][2],

1057 
x
[2][0] + 
v
.x[2][0],

1058 
x
[2][1] + 
v
.x[2][1],

1059 
x
[2][2] + 
v
.x[2][2]);

1062 
	gãm∂©e
 <
˛ass
 
	gT
>

1063 c⁄° 
	gM©rix33
<
	gT
> &

1064 
	gM©rix33
<
	gT
>::
›î©‹
 -(c⁄° 
M©rix33
<
T
> &
v
)

1066 
x
[0][0] -
v
.x[0][0];

1067 
	gx
[0][1] -
v
.
x
[0][1];

1068 
	gx
[0][2] -
v
.
x
[0][2];

1069 
	gx
[1][0] -
v
.
x
[1][0];

1070 
	gx
[1][1] -
v
.
x
[1][1];

1071 
	gx
[1][2] -
v
.
x
[1][2];

1072 
	gx
[2][0] -
v
.
x
[2][0];

1073 
	gx
[2][1] -
v
.
x
[2][1];

1074 
	gx
[2][2] -
v
.
x
[2][2];

1076  *
	gthis
;

1079 
	gãm∂©e
 <
˛ass
 
	gT
>

1080 c⁄° 
	gM©rix33
<
	gT
> &

1081 
	gM©rix33
<
	gT
>::
›î©‹
 -(
T
 
a
)

1083 
x
[0][0] -
a
;

1084 
	gx
[0][1] -
a
;

1085 
	gx
[0][2] -
a
;

1086 
	gx
[1][0] -
a
;

1087 
	gx
[1][1] -
a
;

1088 
	gx
[1][2] -
a
;

1089 
	gx
[2][0] -
a
;

1090 
	gx
[2][1] -
a
;

1091 
	gx
[2][2] -
a
;

1093  *
	gthis
;

1096 
	gãm∂©e
 <
˛ass
 
	gT
>

1097 
	gM©rix33
<
	gT
>

1098 
	gM©rix33
<
	gT
>::
›î©‹
 - (c⁄° 
M©rix33
<
T
> &
v
) const

1100  
M©rix33
 (
x
[0][0] - 
v
.x[0][0],

1101 
x
[0][1] - 
v
.x[0][1],

1102 
x
[0][2] - 
v
.x[0][2],

1103 
x
[1][0] - 
v
.x[1][0],

1104 
x
[1][1] - 
v
.x[1][1],

1105 
x
[1][2] - 
v
.x[1][2],

1106 
x
[2][0] - 
v
.x[2][0],

1107 
x
[2][1] - 
v
.x[2][1],

1108 
x
[2][2] - 
v
.x[2][2]);

1111 
	gãm∂©e
 <
˛ass
 
	gT
>

1112 
	gM©rix33
<
	gT
>

1113 
	gM©rix33
<
	gT
>::
›î©‹
 - () const

1115  
M©rix33
 (-
x
[0][0],

1116 -
x
[0][1],

1117 -
x
[0][2],

1118 -
x
[1][0],

1119 -
x
[1][1],

1120 -
x
[1][2],

1121 -
x
[2][0],

1122 -
x
[2][1],

1123 -
x
[2][2]);

1126 
	gãm∂©e
 <
˛ass
 
	gT
>

1127 c⁄° 
	gM©rix33
<
	gT
> &

1128 
	gM©rix33
<
	gT
>::
	$√g©e
 ()

1130 
x
[0][0] = -x[0][0];

1131 
x
[0][1] = -x[0][1];

1132 
x
[0][2] = -x[0][2];

1133 
x
[1][0] = -x[1][0];

1134 
x
[1][1] = -x[1][1];

1135 
x
[1][2] = -x[1][2];

1136 
x
[2][0] = -x[2][0];

1137 
x
[2][1] = -x[2][1];

1138 
x
[2][2] = -x[2][2];

1140  *
this
;

1141 
	}
}

1143 
	gãm∂©e
 <
˛ass
 
	gT
>

1144 c⁄° 
	gM©rix33
<
	gT
> &

1145 
	gM©rix33
<
	gT
>::
›î©‹
 *(
T
 
a
)

1147 
x
[0][0] *
a
;

1148 
	gx
[0][1] *
a
;

1149 
	gx
[0][2] *
a
;

1150 
	gx
[1][0] *
a
;

1151 
	gx
[1][1] *
a
;

1152 
	gx
[1][2] *
a
;

1153 
	gx
[2][0] *
a
;

1154 
	gx
[2][1] *
a
;

1155 
	gx
[2][2] *
a
;

1157  *
	gthis
;

1160 
	gãm∂©e
 <
˛ass
 
	gT
>

1161 
	gM©rix33
<
	gT
>

1162 
	gM©rix33
<
	gT
>::
›î©‹
 * (
T
 
a
) const

1164  
M©rix33
 (
x
[0][0] * 
a
,

1165 
x
[0][1] * 
a
,

1166 
x
[0][2] * 
a
,

1167 
x
[1][0] * 
a
,

1168 
x
[1][1] * 
a
,

1169 
x
[1][2] * 
a
,

1170 
x
[2][0] * 
a
,

1171 
x
[2][1] * 
a
,

1172 
x
[2][2] * 
a
);

1175 
	gãm∂©e
 <
˛ass
 
	gT
>

1176 
ölöe
 
	gM©rix33
<
	gT
>

1177 
	g›î©‹
 * (
T
 
	ga
, c⁄° 
	gM©rix33
<
	gT
> &
	gv
)

1179  
v
 * 
	ga
;

1182 
	gãm∂©e
 <
˛ass
 
	gT
>

1183 c⁄° 
	gM©rix33
<
	gT
> &

1184 
	gM©rix33
<
	gT
>::
›î©‹
 *(c⁄° 
M©rix33
<
T
> &
v
)

1186 
M©rix33
 
tmp
 (
T
 (0));

1188 
	gi
 = 0; i < 3; i++)

1189 
	gj
 = 0; j < 3; j++)

1190 
	gk
 = 0; k < 3; k++)

1191 
	gtmp
.
	gx
[
i
][
j
] +
x
[i][
k
] * 
v
.x[k][j];

1193 *
	gthis
 = 
tmp
;

1194  *
	gthis
;

1197 
	gãm∂©e
 <
˛ass
 
	gT
>

1198 
	gM©rix33
<
	gT
>

1199 
	gM©rix33
<
	gT
>::
›î©‹
 * (c⁄° 
M©rix33
<
T
> &
v
) const

1201 
M©rix33
 
tmp
 (
T
 (0));

1203 
	gi
 = 0; i < 3; i++)

1204 
	gj
 = 0; j < 3; j++)

1205 
	gk
 = 0; k < 3; k++)

1206 
	gtmp
.
	gx
[
i
][
j
] +
x
[i][
k
] * 
v
.x[k][j];

1208  
	gtmp
;

1211 
	gãm∂©e
 <
˛ass
 
	gT
>

1212 
	gãm∂©e
 <
˛ass
 
	gS
>

1214 
	gM©rix33
<
	gT
>::
mu…VecM©rix
(c⁄° 
Vec2
<
S
> &
§c
, Vec2<S> &
d°
) const

1216 
S
 
	ga
, 
	gb
, 
	gw
;

1218 
	ga
 = 
§c
[0] * 
x
[0][0] + src[1] * x[1][0] + x[2][0];

1219 
	gb
 = 
§c
[0] * 
x
[0][1] + src[1] * x[1][1] + x[2][1];

1220 
	gw
 = 
§c
[0] * 
x
[0][2] + src[1] * x[1][2] + x[2][2];

1222 
	gd°
.
	gx
 = 
a
 / 
w
;

1223 
	gd°
.
	gy
 = 
b
 / 
w
;

1226 
	gãm∂©e
 <
˛ass
 
	gT
>

1227 
	gãm∂©e
 <
˛ass
 
	gS
>

1229 
	gM©rix33
<
	gT
>::
mu…DúM©rix
(c⁄° 
Vec2
<
S
> &
§c
, Vec2<S> &
d°
) const

1231 
S
 
	ga
, 
	gb
;

1233 
	ga
 = 
§c
[0] * 
x
[0][0] + src[1] * x[1][0];

1234 
	gb
 = 
§c
[0] * 
x
[0][1] + src[1] * x[1][1];

1236 
	gd°
.
	gx
 = 
a
;

1237 
	gd°
.
	gy
 = 
b
;

1240 
	gãm∂©e
 <
˛ass
 
	gT
>

1241 c⁄° 
	gM©rix33
<
	gT
> &

1242 
	gM©rix33
<
	gT
>::
›î©‹
 /(
T
 
a
)

1244 
x
[0][0] /
a
;

1245 
	gx
[0][1] /
a
;

1246 
	gx
[0][2] /
a
;

1247 
	gx
[1][0] /
a
;

1248 
	gx
[1][1] /
a
;

1249 
	gx
[1][2] /
a
;

1250 
	gx
[2][0] /
a
;

1251 
	gx
[2][1] /
a
;

1252 
	gx
[2][2] /
a
;

1254  *
	gthis
;

1257 
	gãm∂©e
 <
˛ass
 
	gT
>

1258 
	gM©rix33
<
	gT
>

1259 
	gM©rix33
<
	gT
>::
›î©‹
 / (
T
 
a
) const

1261  
M©rix33
 (
x
[0][0] / 
a
,

1262 
x
[0][1] / 
a
,

1263 
x
[0][2] / 
a
,

1264 
x
[1][0] / 
a
,

1265 
x
[1][1] / 
a
,

1266 
x
[1][2] / 
a
,

1267 
x
[2][0] / 
a
,

1268 
x
[2][1] / 
a
,

1269 
x
[2][2] / 
a
);

1272 
	gãm∂©e
 <
˛ass
 
	gT
>

1273 c⁄° 
	gM©rix33
<
	gT
> &

1274 
	gM©rix33
<
	gT
>::
	$å™•o£
 ()

1276 
M©rix33
 
	`tmp
 (
x
[0][0],

1277 
x
[1][0],

1278 
x
[2][0],

1279 
x
[0][1],

1280 
x
[1][1],

1281 
x
[2][1],

1282 
x
[0][2],

1283 
x
[1][2],

1284 
x
[2][2]);

1285 *
this
 = 
tmp
;

1286  *
this
;

1287 
	}
}

1289 
	gãm∂©e
 <
˛ass
 
	gT
>

1290 
	gM©rix33
<
	gT
>

1291 
	gM©rix33
<
	gT
>::
	$å™•o£d
 () const

1293  
	`M©rix33
 (
x
[0][0],

1294 
x
[1][0],

1295 
x
[2][0],

1296 
x
[0][1],

1297 
x
[1][1],

1298 
x
[2][1],

1299 
x
[0][2],

1300 
x
[1][2],

1301 
x
[2][2]);

1302 
	}
}

1304 
	gãm∂©e
 <
˛ass
 
	gT
>

1305 c⁄° 
	gM©rix33
<
	gT
> &

1306 
	gM©rix33
<
	gT
>::
	$gjInvît
 (
boﬁ
 
sögExc
Ë
	`throw
 (
Iex
::
M©hExc
)

1308 *
this
 = 
	`gjInvî£
 (
sögExc
);

1309  *
this
;

1310 
	}
}

1312 
	gãm∂©e
 <
˛ass
 
	gT
>

1313 
	gM©rix33
<
	gT
>

1314 
	gM©rix33
<
	gT
>::
	$gjInvî£
 (
boﬁ
 
sögExc
Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
)

1316 
i
, 
j
, 
k
;

1317 
M©rix33
 
s
;

1318 
M©rix33
 
	`t
 (*
this
);

1322 
i
 = 0; i < 2 ; i++)

1324 
pivŸ
 = 
i
;

1326 
T
 
pivŸsize
 = 
t
[
i
][i];

1328 i‡(
pivŸsize
 < 0)

1329 
pivŸsize
 = -pivotsize;

1331 
j
 = 
i
 + 1; j < 3; j++)

1333 
T
 
tmp
 = 
t
[
j
][
i
];

1335 i‡(
tmp
 < 0)

1336 
tmp
 = -tmp;

1338 i‡(
tmp
 > 
pivŸsize
)

1340 
pivŸ
 = 
j
;

1341 
pivŸsize
 = 
tmp
;

1345 i‡(
pivŸsize
 == 0)

1347 i‡(
sögExc
)

1348 
throw
 ::
Im©h
::
	`SögM©rixExc
 ("Cannot invert singular matrix.");

1350  
	`M©rix33
();

1353 i‡(
pivŸ
 !
i
)

1355 
j
 = 0; j < 3; j++)

1357 
T
 
tmp
;

1359 
tmp
 = 
t
[
i
][
j
];

1360 
t
[
i
][
j
] =Å[
pivŸ
][j];

1361 
t
[
pivŸ
][
j
] = 
tmp
;

1363 
tmp
 = 
s
[
i
][
j
];

1364 
s
[
i
][
j
] = s[
pivŸ
][j];

1365 
s
[
pivŸ
][
j
] = 
tmp
;

1369 
j
 = 
i
 + 1; j < 3; j++)

1371 
T
 
f
 = 
t
[
j
][
i
] /Å[i][i];

1373 
k
 = 0; k < 3; k++)

1375 
t
[
j
][
k
] -
f
 *Å[
i
][k];

1376 
s
[
j
][
k
] -
f
 * s[
i
][k];

1383 
i
 = 2; i >= 0; --i)

1385 
T
 
f
;

1387 i‡((
f
 = 
t
[
i
][i]) == 0)

1389 i‡(
sögExc
)

1390 
throw
 ::
Im©h
::
	`SögM©rixExc
 ("Cannot invert singular matrix.");

1392  
	`M©rix33
();

1395 
j
 = 0; j < 3; j++)

1397 
t
[
i
][
j
] /
f
;

1398 
s
[
i
][
j
] /
f
;

1401 
j
 = 0; j < 
i
; j++)

1403 
f
 = 
t
[
j
][
i
];

1405 
k
 = 0; k < 3; k++)

1407 
t
[
j
][
k
] -
f
 *Å[
i
][k];

1408 
s
[
j
][
k
] -
f
 * s[
i
][k];

1413  
s
;

1414 
	}
}

1416 
	gãm∂©e
 <
˛ass
 
	gT
>

1417 c⁄° 
	gM©rix33
<
	gT
> &

1418 
	gM©rix33
<
	gT
>::
	$övît
 (
boﬁ
 
sögExc
Ë
	`throw
 (
Iex
::
M©hExc
)

1420 *
this
 = 
	`övî£
 (
sögExc
);

1421  *
this
;

1422 
	}
}

1424 
	gãm∂©e
 <
˛ass
 
	gT
>

1425 
	gM©rix33
<
	gT
>

1426 
	gM©rix33
<
	gT
>::
	$övî£
 (
boﬁ
 
sögExc
Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
)

1428 i‡(
x
[0][2] != 0 || x[1][2] != 0 || x[2][2] != 1)

1430 
M©rix33
 
	`s
 (
x
[1][1] * x[2][2] - x[2][1] * x[1][2],

1431 
x
[2][1] * x[0][2] - x[0][1] * x[2][2],

1432 
x
[0][1] * x[1][2] - x[1][1] * x[0][2],

1434 
x
[2][0] * x[1][2] - x[1][0] * x[2][2],

1435 
x
[0][0] * x[2][2] - x[2][0] * x[0][2],

1436 
x
[1][0] * x[0][2] - x[0][0] * x[1][2],

1438 
x
[1][0] * x[2][1] - x[2][0] * x[1][1],

1439 
x
[2][0] * x[0][1] - x[0][0] * x[2][1],

1440 
x
[0][0] * x[1][1] - x[1][0] * x[0][1]);

1442 
T
 
r
 = 
x
[0][0] * 
s
[0][0] + x[0][1] * s[1][0] + x[0][2] * s[2][0];

1444 i‡(
Im©h
::
	`abs
 (
r
) >= 1)

1446 
i
 = 0; i < 3; ++i)

1448 
j
 = 0; j < 3; ++j)

1450 
s
[
i
][
j
] /
r
;

1456 
T
 
mr
 = 
Im©h
::
	`abs
 (
r
Ë/ 
limôs
<T>::
	`smÆÀ°
();

1458 
i
 = 0; i < 3; ++i)

1460 
j
 = 0; j < 3; ++j)

1462 i‡(
mr
 > 
Im©h
::
	`abs
 (
s
[
i
][
j
]))

1464 
s
[
i
][
j
] /
r
;

1468 i‡(
sögExc
)

1469 
throw
 
	`SögM©rixExc
 ("Cannot invert "

1471  
	`M©rix33
();

1477  
s
;

1481 
M©rix33
 
	`s
 ( 
x
[1][1],

1482 -
x
[0][1],

1485 -
x
[1][0],

1486 
x
[0][0],

1493 
T
 
r
 = 
x
[0][0] * x[1][1] - x[1][0] * x[0][1];

1495 i‡(
Im©h
::
	`abs
 (
r
) >= 1)

1497 
i
 = 0; i < 2; ++i)

1499 
j
 = 0; j < 2; ++j)

1501 
s
[
i
][
j
] /
r
;

1507 
T
 
mr
 = 
Im©h
::
	`abs
 (
r
Ë/ 
limôs
<T>::
	`smÆÀ°
();

1509 
i
 = 0; i < 2; ++i)

1511 
j
 = 0; j < 2; ++j)

1513 i‡(
mr
 > 
Im©h
::
	`abs
 (
s
[
i
][
j
]))

1515 
s
[
i
][
j
] /
r
;

1519 i‡(
sögExc
)

1520 
throw
 
	`SögM©rixExc
 ("Cannot invert "

1522  
	`M©rix33
();

1528 
s
[2][0] = -
x
[2][0] * s[0][0] - x[2][1] * s[1][0];

1529 
s
[2][1] = -
x
[2][0] * s[0][1] - x[2][1] * s[1][1];

1531  
s
;

1533 
	}
}

1535 
	gãm∂©e
 <
˛ass
 
	gT
>

1536 
	gãm∂©e
 <
˛ass
 
	gS
>

1537 c⁄° 
	gM©rix33
<
	gT
> &

1538 
	gM©rix33
<
	gT
>::
	$£tRŸ©i⁄
 (
S
 
r
)

1540 
S
 
cos_r
, 
sö_r
;

1542 
cos_r
 = 
M©h
<
T
>::
	`cos
 (
r
);

1543 
sö_r
 = 
M©h
<
T
>::
	`sö
 (
r
);

1545 
x
[0][0] = 
cos_r
;

1546 
x
[0][1] = 
sö_r
;

1547 
x
[0][2] = 0;

1549 
x
[1][0] = -
sö_r
;

1550 
x
[1][1] = 
cos_r
;

1551 
x
[1][2] = 0;

1553 
x
[2][0] = 0;

1554 
x
[2][1] = 0;

1555 
x
[2][2] = 1;

1557  *
this
;

1558 
	}
}

1560 
	gãm∂©e
 <
˛ass
 
	gT
>

1561 
	gãm∂©e
 <
˛ass
 
	gS
>

1562 c⁄° 
	gM©rix33
<
	gT
> &

1563 
	gM©rix33
<
	gT
>::
	$rŸ©e
 (
S
 
r
)

1565 *
this
 *
M©rix33
<
T
>().
	`£tRŸ©i⁄
 (
r
);

1566  *
this
;

1567 
	}
}

1569 
	gãm∂©e
 <
˛ass
 
	gT
>

1570 c⁄° 
	gM©rix33
<
	gT
> &

1571 
	gM©rix33
<
	gT
>::
	$£tSˇÀ
 (
T
 
s
)

1573 
x
[0][0] = 
s
;

1574 
x
[0][1] = 0;

1575 
x
[0][2] = 0;

1577 
x
[1][0] = 0;

1578 
x
[1][1] = 
s
;

1579 
x
[1][2] = 0;

1581 
x
[2][0] = 0;

1582 
x
[2][1] = 0;

1583 
x
[2][2] = 1;

1585  *
this
;

1586 
	}
}

1588 
	gãm∂©e
 <
˛ass
 
	gT
>

1589 
	gãm∂©e
 <
˛ass
 
	gS
>

1590 c⁄° 
	gM©rix33
<
	gT
> &

1591 
	gM©rix33
<
	gT
>::
£tSˇÀ
 (c⁄° 
Vec2
<
S
> &
s
)

1593 
x
[0][0] = 
s
[0];

1594 
	gx
[0][1] = 0;

1595 
	gx
[0][2] = 0;

1597 
	gx
[1][0] = 0;

1598 
	gx
[1][1] = 
s
[1];

1599 
	gx
[1][2] = 0;

1601 
	gx
[2][0] = 0;

1602 
	gx
[2][1] = 0;

1603 
	gx
[2][2] = 1;

1605  *
	gthis
;

1608 
	gãm∂©e
 <
˛ass
 
	gT
>

1609 
	gãm∂©e
 <
˛ass
 
	gS
>

1610 c⁄° 
	gM©rix33
<
	gT
> &

1611 
	gM©rix33
<
	gT
>::
sˇÀ
 (c⁄° 
Vec2
<
S
> &
s
)

1613 
x
[0][0] *
s
[0];

1614 
	gx
[0][1] *
s
[0];

1615 
	gx
[0][2] *
s
[0];

1617 
	gx
[1][0] *
s
[1];

1618 
	gx
[1][1] *
s
[1];

1619 
	gx
[1][2] *
s
[1];

1621  *
	gthis
;

1624 
	gãm∂©e
 <
˛ass
 
	gT
>

1625 
	gãm∂©e
 <
˛ass
 
	gS
>

1626 c⁄° 
	gM©rix33
<
	gT
> &

1627 
	gM©rix33
<
	gT
>::
£tTøn¶©i⁄
 (c⁄° 
Vec2
<
S
> &
t
)

1629 
x
[0][0] = 1;

1630 
	gx
[0][1] = 0;

1631 
	gx
[0][2] = 0;

1633 
	gx
[1][0] = 0;

1634 
	gx
[1][1] = 1;

1635 
	gx
[1][2] = 0;

1637 
	gx
[2][0] = 
t
[0];

1638 
	gx
[2][1] = 
t
[1];

1639 
	gx
[2][2] = 1;

1641  *
	gthis
;

1644 
	gãm∂©e
 <
˛ass
 
	gT
>

1645 
ölöe
 
	gVec2
<
	gT
>

1646 
	gM©rix33
<
	gT
>::
	$å™¶©i⁄
 () const

1648  
Vec2
<
T
> (
x
[2][0], x[2][1]);

1649 
	}
}

1651 
	gãm∂©e
 <
˛ass
 
	gT
>

1652 
	gãm∂©e
 <
˛ass
 
	gS
>

1653 c⁄° 
	gM©rix33
<
	gT
> &

1654 
	gM©rix33
<
	gT
>::
å™¶©e
 (c⁄° 
Vec2
<
S
> &
t
)

1656 
x
[2][0] +
t
[0] * x[0][0] +Å[1] * x[1][0];

1657 
	gx
[2][1] +
t
[0] * 
x
[0][1] +Å[1] * x[1][1];

1658 
	gx
[2][2] +
t
[0] * 
x
[0][2] +Å[1] * x[1][2];

1660  *
	gthis
;

1663 
	gãm∂©e
 <
˛ass
 
	gT
>

1664 
	gãm∂©e
 <
˛ass
 
	gS
>

1665 c⁄° 
	gM©rix33
<
	gT
> &

1666 
	gM©rix33
<
	gT
>::
	$£tShór
 (c⁄° 
S
 &
xy
)

1668 
x
[0][0] = 1;

1669 
x
[0][1] = 0;

1670 
x
[0][2] = 0;

1672 
x
[1][0] = 
xy
;

1673 
x
[1][1] = 1;

1674 
x
[1][2] = 0;

1676 
x
[2][0] = 0;

1677 
x
[2][1] = 0;

1678 
x
[2][2] = 1;

1680  *
this
;

1681 
	}
}

1683 
	gãm∂©e
 <
˛ass
 
	gT
>

1684 
	gãm∂©e
 <
˛ass
 
	gS
>

1685 c⁄° 
	gM©rix33
<
	gT
> &

1686 
	gM©rix33
<
	gT
>::
£tShór
 (c⁄° 
Vec2
<
S
> &
h
)

1688 
x
[0][0] = 1;

1689 
	gx
[0][1] = 
h
[1];

1690 
	gx
[0][2] = 0;

1692 
	gx
[1][0] = 
h
[0];

1693 
	gx
[1][1] = 1;

1694 
	gx
[1][2] = 0;

1696 
	gx
[2][0] = 0;

1697 
	gx
[2][1] = 0;

1698 
	gx
[2][2] = 1;

1700  *
	gthis
;

1703 
	gãm∂©e
 <
˛ass
 
	gT
>

1704 
	gãm∂©e
 <
˛ass
 
	gS
>

1705 c⁄° 
	gM©rix33
<
	gT
> &

1706 
	gM©rix33
<
	gT
>::
	$shór
 (c⁄° 
S
 &
xy
)

1714 
x
[1][0] +
xy
 * x[0][0];

1715 
x
[1][1] +
xy
 * x[0][1];

1716 
x
[1][2] +
xy
 * x[0][2];

1718  *
this
;

1719 
	}
}

1721 
	gãm∂©e
 <
˛ass
 
	gT
>

1722 
	gãm∂©e
 <
˛ass
 
	gS
>

1723 c⁄° 
	gM©rix33
<
	gT
> &

1724 
	gM©rix33
<
	gT
>::
shór
 (c⁄° 
Vec2
<
S
> &
h
)

1726 
M©rix33
<
T
> 
P
 (*
this
);

1728 
	gx
[0][0] = 
P
[0][0] + 
h
[1] * P[1][0];

1729 
	gx
[0][1] = 
P
[0][1] + 
h
[1] * P[1][1];

1730 
	gx
[0][2] = 
P
[0][2] + 
h
[1] * P[1][2];

1732 
	gx
[1][0] = 
P
[1][0] + 
h
[0] * P[0][0];

1733 
	gx
[1][1] = 
P
[1][1] + 
h
[0] * P[0][1];

1734 
	gx
[1][2] = 
P
[1][2] + 
h
[0] * P[0][2];

1736  *
	gthis
;

1744 
	gãm∂©e
 <
˛ass
 
	gT
>

1745 
ölöe
 
T
 *

1746 
	gM©rix44
<
	gT
>::
›î©‹
 [] (
i
)

1748  
x
[
i
];

1751 
	gãm∂©e
 <
˛ass
 
	gT
>

1752 
ölöe
 c⁄° 
T
 *

1753 
	gM©rix44
<
	gT
>::
›î©‹
 [] (
i
) const

1755  
x
[
i
];

1758 
	gãm∂©e
 <
˛ass
 
	gT
>

1759 
ölöe


1760 
	gM©rix44
<
	gT
>::
	$M©rix44
 ()

1762 
x
[0][0] = 1;

1763 
x
[0][1] = 0;

1764 
x
[0][2] = 0;

1765 
x
[0][3] = 0;

1766 
x
[1][0] = 0;

1767 
x
[1][1] = 1;

1768 
x
[1][2] = 0;

1769 
x
[1][3] = 0;

1770 
x
[2][0] = 0;

1771 
x
[2][1] = 0;

1772 
x
[2][2] = 1;

1773 
x
[2][3] = 0;

1774 
x
[3][0] = 0;

1775 
x
[3][1] = 0;

1776 
x
[3][2] = 0;

1777 
x
[3][3] = 1;

1778 
	}
}

1780 
	gãm∂©e
 <
˛ass
 
	gT
>

1781 
ölöe


1782 
	gM©rix44
<
	gT
>::
	$M©rix44
 (
T
 
a
)

1784 
x
[0][0] = 
a
;

1785 
x
[0][1] = 
a
;

1786 
x
[0][2] = 
a
;

1787 
x
[0][3] = 
a
;

1788 
x
[1][0] = 
a
;

1789 
x
[1][1] = 
a
;

1790 
x
[1][2] = 
a
;

1791 
x
[1][3] = 
a
;

1792 
x
[2][0] = 
a
;

1793 
x
[2][1] = 
a
;

1794 
x
[2][2] = 
a
;

1795 
x
[2][3] = 
a
;

1796 
x
[3][0] = 
a
;

1797 
x
[3][1] = 
a
;

1798 
x
[3][2] = 
a
;

1799 
x
[3][3] = 
a
;

1800 
	}
}

1802 
	gãm∂©e
 <
˛ass
 
	gT
>

1803 
ölöe


1804 
	gM©rix44
<
	gT
>::
	$M©rix44
 (c⁄° 
T
 
a
[4][4])

1806 
x
[0][0] = 
a
[0][0];

1807 
x
[0][1] = 
a
[0][1];

1808 
x
[0][2] = 
a
[0][2];

1809 
x
[0][3] = 
a
[0][3];

1810 
x
[1][0] = 
a
[1][0];

1811 
x
[1][1] = 
a
[1][1];

1812 
x
[1][2] = 
a
[1][2];

1813 
x
[1][3] = 
a
[1][3];

1814 
x
[2][0] = 
a
[2][0];

1815 
x
[2][1] = 
a
[2][1];

1816 
x
[2][2] = 
a
[2][2];

1817 
x
[2][3] = 
a
[2][3];

1818 
x
[3][0] = 
a
[3][0];

1819 
x
[3][1] = 
a
[3][1];

1820 
x
[3][2] = 
a
[3][2];

1821 
x
[3][3] = 
a
[3][3];

1822 
	}
}

1824 
	gãm∂©e
 <
˛ass
 
	gT
>

1825 
ölöe


1826 
	gM©rix44
<
	gT
>::
	$M©rix44
 (
T
 
a
, T 
b
, T 
c
, T 
d
, T 
e
, T 
f
, T 
g
, T 
h
,

1827 
T
 
i
, T 
j
, T 
k
, T 
l
, T 
m
, T 
n
, T 
o
, T 
p
)

1829 
x
[0][0] = 
a
;

1830 
x
[0][1] = 
b
;

1831 
x
[0][2] = 
c
;

1832 
x
[0][3] = 
d
;

1833 
x
[1][0] = 
e
;

1834 
x
[1][1] = 
f
;

1835 
x
[1][2] = 
g
;

1836 
x
[1][3] = 
h
;

1837 
x
[2][0] = 
i
;

1838 
x
[2][1] = 
j
;

1839 
x
[2][2] = 
k
;

1840 
x
[2][3] = 
l
;

1841 
x
[3][0] = 
m
;

1842 
x
[3][1] = 
n
;

1843 
x
[3][2] = 
o
;

1844 
x
[3][3] = 
p
;

1845 
	}
}

1848 
	gãm∂©e
 <
˛ass
 
	gT
>

1849 
ölöe


1850 
	gM©rix44
<
	gT
>::
M©rix44
 (
M©rix33
<
T
> 
r
, 
Vec3
<T> 
t
)

1852 
	gx
[0][0] = 
r
[0][0];

1853 
	gx
[0][1] = 
r
[0][1];

1854 
	gx
[0][2] = 
r
[0][2];

1855 
	gx
[0][3] = 0;

1856 
	gx
[1][0] = 
r
[1][0];

1857 
	gx
[1][1] = 
r
[1][1];

1858 
	gx
[1][2] = 
r
[1][2];

1859 
	gx
[1][3] = 0;

1860 
	gx
[2][0] = 
r
[2][0];

1861 
	gx
[2][1] = 
r
[2][1];

1862 
	gx
[2][2] = 
r
[2][2];

1863 
	gx
[2][3] = 0;

1864 
	gx
[3][0] = 
t
[0];

1865 
	gx
[3][1] = 
t
[1];

1866 
	gx
[3][2] = 
t
[2];

1867 
	gx
[3][3] = 1;

1870 
	gãm∂©e
 <
˛ass
 
	gT
>

1871 
ölöe


1872 
	gM©rix44
<
	gT
>::
	$M©rix44
 (c⁄° 
M©rix44
 &
v
)

1874 
x
[0][0] = 
v
.x[0][0];

1875 
x
[0][1] = 
v
.x[0][1];

1876 
x
[0][2] = 
v
.x[0][2];

1877 
x
[0][3] = 
v
.x[0][3];

1878 
x
[1][0] = 
v
.x[1][0];

1879 
x
[1][1] = 
v
.x[1][1];

1880 
x
[1][2] = 
v
.x[1][2];

1881 
x
[1][3] = 
v
.x[1][3];

1882 
x
[2][0] = 
v
.x[2][0];

1883 
x
[2][1] = 
v
.x[2][1];

1884 
x
[2][2] = 
v
.x[2][2];

1885 
x
[2][3] = 
v
.x[2][3];

1886 
x
[3][0] = 
v
.x[3][0];

1887 
x
[3][1] = 
v
.x[3][1];

1888 
x
[3][2] = 
v
.x[3][2];

1889 
x
[3][3] = 
v
.x[3][3];

1890 
	}
}

1892 
	gãm∂©e
 <
˛ass
 
	gT
>

1893 
ölöe
 c⁄° 
	gM©rix44
<
	gT
> &

1894 
	gM©rix44
<
	gT
>::
›î©‹
 = (c⁄° 
M©rix44
 &
v
)

1896 
x
[0][0] = 
v
.x[0][0];

1897 
	gx
[0][1] = 
v
.
x
[0][1];

1898 
	gx
[0][2] = 
v
.
x
[0][2];

1899 
	gx
[0][3] = 
v
.
x
[0][3];

1900 
	gx
[1][0] = 
v
.
x
[1][0];

1901 
	gx
[1][1] = 
v
.
x
[1][1];

1902 
	gx
[1][2] = 
v
.
x
[1][2];

1903 
	gx
[1][3] = 
v
.
x
[1][3];

1904 
	gx
[2][0] = 
v
.
x
[2][0];

1905 
	gx
[2][1] = 
v
.
x
[2][1];

1906 
	gx
[2][2] = 
v
.
x
[2][2];

1907 
	gx
[2][3] = 
v
.
x
[2][3];

1908 
	gx
[3][0] = 
v
.
x
[3][0];

1909 
	gx
[3][1] = 
v
.
x
[3][1];

1910 
	gx
[3][2] = 
v
.
x
[3][2];

1911 
	gx
[3][3] = 
v
.
x
[3][3];

1912  *
	gthis
;

1915 
	gãm∂©e
 <
˛ass
 
	gT
>

1916 
ölöe
 c⁄° 
	gM©rix44
<
	gT
> &

1917 
	gM©rix44
<
	gT
>::
›î©‹
 = (
T
 
a
)

1919 
x
[0][0] = 
a
;

1920 
	gx
[0][1] = 
a
;

1921 
	gx
[0][2] = 
a
;

1922 
	gx
[0][3] = 
a
;

1923 
	gx
[1][0] = 
a
;

1924 
	gx
[1][1] = 
a
;

1925 
	gx
[1][2] = 
a
;

1926 
	gx
[1][3] = 
a
;

1927 
	gx
[2][0] = 
a
;

1928 
	gx
[2][1] = 
a
;

1929 
	gx
[2][2] = 
a
;

1930 
	gx
[2][3] = 
a
;

1931 
	gx
[3][0] = 
a
;

1932 
	gx
[3][1] = 
a
;

1933 
	gx
[3][2] = 
a
;

1934 
	gx
[3][3] = 
a
;

1935  *
	gthis
;

1938 
	gãm∂©e
 <
˛ass
 
	gT
>

1939 
ölöe
 
T
 *

1940 
	gM©rix44
<
	gT
>::
	$gëVÆue
 ()

1942  (
T
 *Ë&
x
[0][0];

1943 
	}
}

1945 
	gãm∂©e
 <
˛ass
 
	gT
>

1946 
ölöe
 c⁄° 
T
 *

1947 
	gM©rix44
<
	gT
>::
	$gëVÆue
 () const

1949  (c⁄° 
T
 *Ë&
x
[0][0];

1950 
	}
}

1952 
	gãm∂©e
 <
˛ass
 
	gT
>

1953 
	gãm∂©e
 <
˛ass
 
	gS
>

1954 
ölöe
 

1955 
	gM©rix44
<
	gT
>::
gëVÆue
 (
M©rix44
<
S
> &
v
) const

1957 
v
.
x
[0][0] = x[0][0];

1958 
	gv
.
	gx
[0][1] = 
x
[0][1];

1959 
	gv
.
	gx
[0][2] = 
x
[0][2];

1960 
	gv
.
	gx
[0][3] = 
x
[0][3];

1961 
	gv
.
	gx
[1][0] = 
x
[1][0];

1962 
	gv
.
	gx
[1][1] = 
x
[1][1];

1963 
	gv
.
	gx
[1][2] = 
x
[1][2];

1964 
	gv
.
	gx
[1][3] = 
x
[1][3];

1965 
	gv
.
	gx
[2][0] = 
x
[2][0];

1966 
	gv
.
	gx
[2][1] = 
x
[2][1];

1967 
	gv
.
	gx
[2][2] = 
x
[2][2];

1968 
	gv
.
	gx
[2][3] = 
x
[2][3];

1969 
	gv
.
	gx
[3][0] = 
x
[3][0];

1970 
	gv
.
	gx
[3][1] = 
x
[3][1];

1971 
	gv
.
	gx
[3][2] = 
x
[3][2];

1972 
	gv
.
	gx
[3][3] = 
x
[3][3];

1975 
	gãm∂©e
 <
˛ass
 
	gT
>

1976 
	gãm∂©e
 <
˛ass
 
	gS
>

1977 
ölöe
 
	gM©rix44
<
	gT
> &

1978 
	gM©rix44
<
	gT
>::
£tVÆue
 (c⁄° 
M©rix44
<
S
> &
v
)

1980 
x
[0][0] = 
v
.x[0][0];

1981 
	gx
[0][1] = 
v
.
x
[0][1];

1982 
	gx
[0][2] = 
v
.
x
[0][2];

1983 
	gx
[0][3] = 
v
.
x
[0][3];

1984 
	gx
[1][0] = 
v
.
x
[1][0];

1985 
	gx
[1][1] = 
v
.
x
[1][1];

1986 
	gx
[1][2] = 
v
.
x
[1][2];

1987 
	gx
[1][3] = 
v
.
x
[1][3];

1988 
	gx
[2][0] = 
v
.
x
[2][0];

1989 
	gx
[2][1] = 
v
.
x
[2][1];

1990 
	gx
[2][2] = 
v
.
x
[2][2];

1991 
	gx
[2][3] = 
v
.
x
[2][3];

1992 
	gx
[3][0] = 
v
.
x
[3][0];

1993 
	gx
[3][1] = 
v
.
x
[3][1];

1994 
	gx
[3][2] = 
v
.
x
[3][2];

1995 
	gx
[3][3] = 
v
.
x
[3][3];

1996  *
	gthis
;

1999 
	gãm∂©e
 <
˛ass
 
	gT
>

2000 
	gãm∂©e
 <
˛ass
 
	gS
>

2001 
ölöe
 
	gM©rix44
<
	gT
> &

2002 
	gM©rix44
<
	gT
>::
£tTheM©rix
 (c⁄° 
M©rix44
<
S
> &
v
)

2004 
x
[0][0] = 
v
.x[0][0];

2005 
	gx
[0][1] = 
v
.
x
[0][1];

2006 
	gx
[0][2] = 
v
.
x
[0][2];

2007 
	gx
[0][3] = 
v
.
x
[0][3];

2008 
	gx
[1][0] = 
v
.
x
[1][0];

2009 
	gx
[1][1] = 
v
.
x
[1][1];

2010 
	gx
[1][2] = 
v
.
x
[1][2];

2011 
	gx
[1][3] = 
v
.
x
[1][3];

2012 
	gx
[2][0] = 
v
.
x
[2][0];

2013 
	gx
[2][1] = 
v
.
x
[2][1];

2014 
	gx
[2][2] = 
v
.
x
[2][2];

2015 
	gx
[2][3] = 
v
.
x
[2][3];

2016 
	gx
[3][0] = 
v
.
x
[3][0];

2017 
	gx
[3][1] = 
v
.
x
[3][1];

2018 
	gx
[3][2] = 
v
.
x
[3][2];

2019 
	gx
[3][3] = 
v
.
x
[3][3];

2020  *
	gthis
;

2023 
	gãm∂©e
 <
˛ass
 
	gT
>

2024 
ölöe
 

2025 
	gM©rix44
<
	gT
>::
	$makeIdítôy
()

2027 
x
[0][0] = 1;

2028 
x
[0][1] = 0;

2029 
x
[0][2] = 0;

2030 
x
[0][3] = 0;

2031 
x
[1][0] = 0;

2032 
x
[1][1] = 1;

2033 
x
[1][2] = 0;

2034 
x
[1][3] = 0;

2035 
x
[2][0] = 0;

2036 
x
[2][1] = 0;

2037 
x
[2][2] = 1;

2038 
x
[2][3] = 0;

2039 
x
[3][0] = 0;

2040 
x
[3][1] = 0;

2041 
x
[3][2] = 0;

2042 
x
[3][3] = 1;

2043 
	}
}

2045 
	gãm∂©e
 <
˛ass
 
	gT
>

2046 
boﬁ


2047 
	gM©rix44
<
	gT
>::
›î©‹
 =(c⁄° 
M©rix44
 &
v
) const

2049  
x
[0][0] =
v
.x[0][0] &&

2050 
x
[0][1] =
v
.x[0][1] &&

2051 
x
[0][2] =
v
.x[0][2] &&

2052 
x
[0][3] =
v
.x[0][3] &&

2053 
x
[1][0] =
v
.x[1][0] &&

2054 
x
[1][1] =
v
.x[1][1] &&

2055 
x
[1][2] =
v
.x[1][2] &&

2056 
x
[1][3] =
v
.x[1][3] &&

2057 
x
[2][0] =
v
.x[2][0] &&

2058 
x
[2][1] =
v
.x[2][1] &&

2059 
x
[2][2] =
v
.x[2][2] &&

2060 
x
[2][3] =
v
.x[2][3] &&

2061 
x
[3][0] =
v
.x[3][0] &&

2062 
x
[3][1] =
v
.x[3][1] &&

2063 
x
[3][2] =
v
.x[3][2] &&

2064 
x
[3][3] =
v
.x[3][3];

2067 
	gãm∂©e
 <
˛ass
 
	gT
>

2068 
boﬁ


2069 
	gM©rix44
<
	gT
>::
›î©‹
 !(c⁄° 
M©rix44
 &
v
) const

2071  
x
[0][0] !
v
.x[0][0] ||

2072 
x
[0][1] !
v
.x[0][1] ||

2073 
x
[0][2] !
v
.x[0][2] ||

2074 
x
[0][3] !
v
.x[0][3] ||

2075 
x
[1][0] !
v
.x[1][0] ||

2076 
x
[1][1] !
v
.x[1][1] ||

2077 
x
[1][2] !
v
.x[1][2] ||

2078 
x
[1][3] !
v
.x[1][3] ||

2079 
x
[2][0] !
v
.x[2][0] ||

2080 
x
[2][1] !
v
.x[2][1] ||

2081 
x
[2][2] !
v
.x[2][2] ||

2082 
x
[2][3] !
v
.x[2][3] ||

2083 
x
[3][0] !
v
.x[3][0] ||

2084 
x
[3][1] !
v
.x[3][1] ||

2085 
x
[3][2] !
v
.x[3][2] ||

2086 
x
[3][3] !
v
.x[3][3];

2089 
	gãm∂©e
 <
˛ass
 
	gT
>

2090 
boﬁ


2091 
	gM©rix44
<
	gT
>::
equÆWôhAbsEº‹
 (c⁄° 
M©rix44
<
T
> &
m
, T 
e
) const

2093 
	gi
 = 0; i < 4; i++)

2094 
	gj
 = 0; j < 4; j++)

2095 i‡(!
	gIm©h
::
equÆWôhAbsEº‹
 ((*
this
)[
i
][
j
], 
m
[i][j], 
e
))

2096  
	gÁl£
;

2098  
	gåue
;

2101 
	gãm∂©e
 <
˛ass
 
	gT
>

2102 
boﬁ


2103 
	gM©rix44
<
	gT
>::
equÆWôhRñEº‹
 (c⁄° 
M©rix44
<
T
> &
m
, T 
e
) const

2105 
	gi
 = 0; i < 4; i++)

2106 
	gj
 = 0; j < 4; j++)

2107 i‡(!
	gIm©h
::
equÆWôhRñEº‹
 ((*
this
)[
i
][
j
], 
m
[i][j], 
e
))

2108  
	gÁl£
;

2110  
	gåue
;

2113 
	gãm∂©e
 <
˛ass
 
	gT
>

2114 c⁄° 
	gM©rix44
<
	gT
> &

2115 
	gM©rix44
<
	gT
>::
›î©‹
 +(c⁄° 
M©rix44
<
T
> &
v
)

2117 
x
[0][0] +
v
.x[0][0];

2118 
	gx
[0][1] +
v
.
x
[0][1];

2119 
	gx
[0][2] +
v
.
x
[0][2];

2120 
	gx
[0][3] +
v
.
x
[0][3];

2121 
	gx
[1][0] +
v
.
x
[1][0];

2122 
	gx
[1][1] +
v
.
x
[1][1];

2123 
	gx
[1][2] +
v
.
x
[1][2];

2124 
	gx
[1][3] +
v
.
x
[1][3];

2125 
	gx
[2][0] +
v
.
x
[2][0];

2126 
	gx
[2][1] +
v
.
x
[2][1];

2127 
	gx
[2][2] +
v
.
x
[2][2];

2128 
	gx
[2][3] +
v
.
x
[2][3];

2129 
	gx
[3][0] +
v
.
x
[3][0];

2130 
	gx
[3][1] +
v
.
x
[3][1];

2131 
	gx
[3][2] +
v
.
x
[3][2];

2132 
	gx
[3][3] +
v
.
x
[3][3];

2134  *
	gthis
;

2137 
	gãm∂©e
 <
˛ass
 
	gT
>

2138 c⁄° 
	gM©rix44
<
	gT
> &

2139 
	gM©rix44
<
	gT
>::
›î©‹
 +(
T
 
a
)

2141 
x
[0][0] +
a
;

2142 
	gx
[0][1] +
a
;

2143 
	gx
[0][2] +
a
;

2144 
	gx
[0][3] +
a
;

2145 
	gx
[1][0] +
a
;

2146 
	gx
[1][1] +
a
;

2147 
	gx
[1][2] +
a
;

2148 
	gx
[1][3] +
a
;

2149 
	gx
[2][0] +
a
;

2150 
	gx
[2][1] +
a
;

2151 
	gx
[2][2] +
a
;

2152 
	gx
[2][3] +
a
;

2153 
	gx
[3][0] +
a
;

2154 
	gx
[3][1] +
a
;

2155 
	gx
[3][2] +
a
;

2156 
	gx
[3][3] +
a
;

2158  *
	gthis
;

2161 
	gãm∂©e
 <
˛ass
 
	gT
>

2162 
	gM©rix44
<
	gT
>

2163 
	gM©rix44
<
	gT
>::
›î©‹
 + (c⁄° 
M©rix44
<
T
> &
v
) const

2165  
M©rix44
 (
x
[0][0] + 
v
.x[0][0],

2166 
x
[0][1] + 
v
.x[0][1],

2167 
x
[0][2] + 
v
.x[0][2],

2168 
x
[0][3] + 
v
.x[0][3],

2169 
x
[1][0] + 
v
.x[1][0],

2170 
x
[1][1] + 
v
.x[1][1],

2171 
x
[1][2] + 
v
.x[1][2],

2172 
x
[1][3] + 
v
.x[1][3],

2173 
x
[2][0] + 
v
.x[2][0],

2174 
x
[2][1] + 
v
.x[2][1],

2175 
x
[2][2] + 
v
.x[2][2],

2176 
x
[2][3] + 
v
.x[2][3],

2177 
x
[3][0] + 
v
.x[3][0],

2178 
x
[3][1] + 
v
.x[3][1],

2179 
x
[3][2] + 
v
.x[3][2],

2180 
x
[3][3] + 
v
.x[3][3]);

2183 
	gãm∂©e
 <
˛ass
 
	gT
>

2184 c⁄° 
	gM©rix44
<
	gT
> &

2185 
	gM©rix44
<
	gT
>::
›î©‹
 -(c⁄° 
M©rix44
<
T
> &
v
)

2187 
x
[0][0] -
v
.x[0][0];

2188 
	gx
[0][1] -
v
.
x
[0][1];

2189 
	gx
[0][2] -
v
.
x
[0][2];

2190 
	gx
[0][3] -
v
.
x
[0][3];

2191 
	gx
[1][0] -
v
.
x
[1][0];

2192 
	gx
[1][1] -
v
.
x
[1][1];

2193 
	gx
[1][2] -
v
.
x
[1][2];

2194 
	gx
[1][3] -
v
.
x
[1][3];

2195 
	gx
[2][0] -
v
.
x
[2][0];

2196 
	gx
[2][1] -
v
.
x
[2][1];

2197 
	gx
[2][2] -
v
.
x
[2][2];

2198 
	gx
[2][3] -
v
.
x
[2][3];

2199 
	gx
[3][0] -
v
.
x
[3][0];

2200 
	gx
[3][1] -
v
.
x
[3][1];

2201 
	gx
[3][2] -
v
.
x
[3][2];

2202 
	gx
[3][3] -
v
.
x
[3][3];

2204  *
	gthis
;

2207 
	gãm∂©e
 <
˛ass
 
	gT
>

2208 c⁄° 
	gM©rix44
<
	gT
> &

2209 
	gM©rix44
<
	gT
>::
›î©‹
 -(
T
 
a
)

2211 
x
[0][0] -
a
;

2212 
	gx
[0][1] -
a
;

2213 
	gx
[0][2] -
a
;

2214 
	gx
[0][3] -
a
;

2215 
	gx
[1][0] -
a
;

2216 
	gx
[1][1] -
a
;

2217 
	gx
[1][2] -
a
;

2218 
	gx
[1][3] -
a
;

2219 
	gx
[2][0] -
a
;

2220 
	gx
[2][1] -
a
;

2221 
	gx
[2][2] -
a
;

2222 
	gx
[2][3] -
a
;

2223 
	gx
[3][0] -
a
;

2224 
	gx
[3][1] -
a
;

2225 
	gx
[3][2] -
a
;

2226 
	gx
[3][3] -
a
;

2228  *
	gthis
;

2231 
	gãm∂©e
 <
˛ass
 
	gT
>

2232 
	gM©rix44
<
	gT
>

2233 
	gM©rix44
<
	gT
>::
›î©‹
 - (c⁄° 
M©rix44
<
T
> &
v
) const

2235  
M©rix44
 (
x
[0][0] - 
v
.x[0][0],

2236 
x
[0][1] - 
v
.x[0][1],

2237 
x
[0][2] - 
v
.x[0][2],

2238 
x
[0][3] - 
v
.x[0][3],

2239 
x
[1][0] - 
v
.x[1][0],

2240 
x
[1][1] - 
v
.x[1][1],

2241 
x
[1][2] - 
v
.x[1][2],

2242 
x
[1][3] - 
v
.x[1][3],

2243 
x
[2][0] - 
v
.x[2][0],

2244 
x
[2][1] - 
v
.x[2][1],

2245 
x
[2][2] - 
v
.x[2][2],

2246 
x
[2][3] - 
v
.x[2][3],

2247 
x
[3][0] - 
v
.x[3][0],

2248 
x
[3][1] - 
v
.x[3][1],

2249 
x
[3][2] - 
v
.x[3][2],

2250 
x
[3][3] - 
v
.x[3][3]);

2253 
	gãm∂©e
 <
˛ass
 
	gT
>

2254 
	gM©rix44
<
	gT
>

2255 
	gM©rix44
<
	gT
>::
›î©‹
 - () const

2257  
M©rix44
 (-
x
[0][0],

2258 -
x
[0][1],

2259 -
x
[0][2],

2260 -
x
[0][3],

2261 -
x
[1][0],

2262 -
x
[1][1],

2263 -
x
[1][2],

2264 -
x
[1][3],

2265 -
x
[2][0],

2266 -
x
[2][1],

2267 -
x
[2][2],

2268 -
x
[2][3],

2269 -
x
[3][0],

2270 -
x
[3][1],

2271 -
x
[3][2],

2272 -
x
[3][3]);

2275 
	gãm∂©e
 <
˛ass
 
	gT
>

2276 c⁄° 
	gM©rix44
<
	gT
> &

2277 
	gM©rix44
<
	gT
>::
	$√g©e
 ()

2279 
x
[0][0] = -x[0][0];

2280 
x
[0][1] = -x[0][1];

2281 
x
[0][2] = -x[0][2];

2282 
x
[0][3] = -x[0][3];

2283 
x
[1][0] = -x[1][0];

2284 
x
[1][1] = -x[1][1];

2285 
x
[1][2] = -x[1][2];

2286 
x
[1][3] = -x[1][3];

2287 
x
[2][0] = -x[2][0];

2288 
x
[2][1] = -x[2][1];

2289 
x
[2][2] = -x[2][2];

2290 
x
[2][3] = -x[2][3];

2291 
x
[3][0] = -x[3][0];

2292 
x
[3][1] = -x[3][1];

2293 
x
[3][2] = -x[3][2];

2294 
x
[3][3] = -x[3][3];

2296  *
this
;

2297 
	}
}

2299 
	gãm∂©e
 <
˛ass
 
	gT
>

2300 c⁄° 
	gM©rix44
<
	gT
> &

2301 
	gM©rix44
<
	gT
>::
›î©‹
 *(
T
 
a
)

2303 
x
[0][0] *
a
;

2304 
	gx
[0][1] *
a
;

2305 
	gx
[0][2] *
a
;

2306 
	gx
[0][3] *
a
;

2307 
	gx
[1][0] *
a
;

2308 
	gx
[1][1] *
a
;

2309 
	gx
[1][2] *
a
;

2310 
	gx
[1][3] *
a
;

2311 
	gx
[2][0] *
a
;

2312 
	gx
[2][1] *
a
;

2313 
	gx
[2][2] *
a
;

2314 
	gx
[2][3] *
a
;

2315 
	gx
[3][0] *
a
;

2316 
	gx
[3][1] *
a
;

2317 
	gx
[3][2] *
a
;

2318 
	gx
[3][3] *
a
;

2320  *
	gthis
;

2323 
	gãm∂©e
 <
˛ass
 
	gT
>

2324 
	gM©rix44
<
	gT
>

2325 
	gM©rix44
<
	gT
>::
›î©‹
 * (
T
 
a
) const

2327  
M©rix44
 (
x
[0][0] * 
a
,

2328 
x
[0][1] * 
a
,

2329 
x
[0][2] * 
a
,

2330 
x
[0][3] * 
a
,

2331 
x
[1][0] * 
a
,

2332 
x
[1][1] * 
a
,

2333 
x
[1][2] * 
a
,

2334 
x
[1][3] * 
a
,

2335 
x
[2][0] * 
a
,

2336 
x
[2][1] * 
a
,

2337 
x
[2][2] * 
a
,

2338 
x
[2][3] * 
a
,

2339 
x
[3][0] * 
a
,

2340 
x
[3][1] * 
a
,

2341 
x
[3][2] * 
a
,

2342 
x
[3][3] * 
a
);

2345 
	gãm∂©e
 <
˛ass
 
	gT
>

2346 
ölöe
 
	gM©rix44
<
	gT
>

2347 
	g›î©‹
 * (
T
 
	ga
, c⁄° 
	gM©rix44
<
	gT
> &
	gv
)

2349  
v
 * 
	ga
;

2352 
	gãm∂©e
 <
˛ass
 
	gT
>

2353 
ölöe
 c⁄° 
	gM©rix44
<
	gT
> &

2354 
	gM©rix44
<
	gT
>::
›î©‹
 *(c⁄° 
M©rix44
<
T
> &
v
)

2356 
M©rix44
 
tmp
 (
T
 (0));

2358 
mu…ùly
 (*
this
, 
v
, 
tmp
);

2359 *
	gthis
 = 
tmp
;

2360  *
	gthis
;

2363 
	gãm∂©e
 <
˛ass
 
	gT
>

2364 
ölöe
 
	gM©rix44
<
	gT
>

2365 
	gM©rix44
<
	gT
>::
›î©‹
 * (c⁄° 
M©rix44
<
T
> &
v
) const

2367 
M©rix44
 
tmp
 (
T
 (0));

2369 
mu…ùly
 (*
this
, 
v
, 
tmp
);

2370  
	gtmp
;

2373 
	gãm∂©e
 <
˛ass
 
	gT
>

2375 
	gM©rix44
<
	gT
>::
mu…ùly
 (c⁄° 
M©rix44
<
T
> &
a
,

2376 c⁄° 
M©rix44
<
T
> &
b
,

2377 
M©rix44
<
T
> &
c
)

2379 c⁄° 
T
 * 
ª°ri˘
 
	g≠
 = &
a
.
x
[0][0];

2380 c⁄° 
T
 * 
ª°ri˘
 
	gbp
 = &
b
.
x
[0][0];

2381 
T
 * 
ª°ri˘
 
	g˝
 = &
c
.
x
[0][0];

2383 
T
 
	ga0
, 
	ga1
, 
	ga2
, 
	ga3
;

2385 
	ga0
 = 
≠
[0];

2386 
	ga1
 = 
≠
[1];

2387 
	ga2
 = 
≠
[2];

2388 
	ga3
 = 
≠
[3];

2390 
	g˝
[0] = 
a0
 * 
bp
[0] + 
a1
 * bp[4] + 
a2
 * bp[8] + 
a3
 * bp[12];

2391 
	g˝
[1] = 
a0
 * 
bp
[1] + 
a1
 * bp[5] + 
a2
 * bp[9] + 
a3
 * bp[13];

2392 
	g˝
[2] = 
a0
 * 
bp
[2] + 
a1
 * bp[6] + 
a2
 * bp[10] + 
a3
 * bp[14];

2393 
	g˝
[3] = 
a0
 * 
bp
[3] + 
a1
 * bp[7] + 
a2
 * bp[11] + 
a3
 * bp[15];

2395 
	ga0
 = 
≠
[4];

2396 
	ga1
 = 
≠
[5];

2397 
	ga2
 = 
≠
[6];

2398 
	ga3
 = 
≠
[7];

2400 
	g˝
[4] = 
a0
 * 
bp
[0] + 
a1
 * bp[4] + 
a2
 * bp[8] + 
a3
 * bp[12];

2401 
	g˝
[5] = 
a0
 * 
bp
[1] + 
a1
 * bp[5] + 
a2
 * bp[9] + 
a3
 * bp[13];

2402 
	g˝
[6] = 
a0
 * 
bp
[2] + 
a1
 * bp[6] + 
a2
 * bp[10] + 
a3
 * bp[14];

2403 
	g˝
[7] = 
a0
 * 
bp
[3] + 
a1
 * bp[7] + 
a2
 * bp[11] + 
a3
 * bp[15];

2405 
	ga0
 = 
≠
[8];

2406 
	ga1
 = 
≠
[9];

2407 
	ga2
 = 
≠
[10];

2408 
	ga3
 = 
≠
[11];

2410 
	g˝
[8] = 
a0
 * 
bp
[0] + 
a1
 * bp[4] + 
a2
 * bp[8] + 
a3
 * bp[12];

2411 
	g˝
[9] = 
a0
 * 
bp
[1] + 
a1
 * bp[5] + 
a2
 * bp[9] + 
a3
 * bp[13];

2412 
	g˝
[10] = 
a0
 * 
bp
[2] + 
a1
 * bp[6] + 
a2
 * bp[10] + 
a3
 * bp[14];

2413 
	g˝
[11] = 
a0
 * 
bp
[3] + 
a1
 * bp[7] + 
a2
 * bp[11] + 
a3
 * bp[15];

2415 
	ga0
 = 
≠
[12];

2416 
	ga1
 = 
≠
[13];

2417 
	ga2
 = 
≠
[14];

2418 
	ga3
 = 
≠
[15];

2420 
	g˝
[12] = 
a0
 * 
bp
[0] + 
a1
 * bp[4] + 
a2
 * bp[8] + 
a3
 * bp[12];

2421 
	g˝
[13] = 
a0
 * 
bp
[1] + 
a1
 * bp[5] + 
a2
 * bp[9] + 
a3
 * bp[13];

2422 
	g˝
[14] = 
a0
 * 
bp
[2] + 
a1
 * bp[6] + 
a2
 * bp[10] + 
a3
 * bp[14];

2423 
	g˝
[15] = 
a0
 * 
bp
[3] + 
a1
 * bp[7] + 
a2
 * bp[11] + 
a3
 * bp[15];

2426 
	gãm∂©e
 <
˛ass
 
	gT
>Åem∂©ê<˛as†
	gS
>

2428 
	gM©rix44
<
	gT
>::
mu…VecM©rix
(c⁄° 
Vec3
<
S
> &
§c
, Vec3<S> &
d°
) const

2430 
S
 
	ga
, 
	gb
, 
	gc
, 
	gw
;

2432 
	ga
 = 
§c
[0] * 
x
[0][0] + src[1] * x[1][0] + src[2] * x[2][0] + x[3][0];

2433 
	gb
 = 
§c
[0] * 
x
[0][1] + src[1] * x[1][1] + src[2] * x[2][1] + x[3][1];

2434 
	gc
 = 
§c
[0] * 
x
[0][2] + src[1] * x[1][2] + src[2] * x[2][2] + x[3][2];

2435 
	gw
 = 
§c
[0] * 
x
[0][3] + src[1] * x[1][3] + src[2] * x[2][3] + x[3][3];

2437 
	gd°
.
	gx
 = 
a
 / 
w
;

2438 
	gd°
.
	gy
 = 
b
 / 
w
;

2439 
	gd°
.
	gz
 = 
c
 / 
w
;

2442 
	gãm∂©e
 <
˛ass
 
	gT
>Åem∂©ê<˛as†
	gS
>

2444 
	gM©rix44
<
	gT
>::
mu…DúM©rix
(c⁄° 
Vec3
<
S
> &
§c
, Vec3<S> &
d°
) const

2446 
S
 
	ga
, 
	gb
, 
	gc
;

2448 
	ga
 = 
§c
[0] * 
x
[0][0] + src[1] * x[1][0] + src[2] * x[2][0];

2449 
	gb
 = 
§c
[0] * 
x
[0][1] + src[1] * x[1][1] + src[2] * x[2][1];

2450 
	gc
 = 
§c
[0] * 
x
[0][2] + src[1] * x[1][2] + src[2] * x[2][2];

2452 
	gd°
.
	gx
 = 
a
;

2453 
	gd°
.
	gy
 = 
b
;

2454 
	gd°
.
	gz
 = 
c
;

2457 
	gãm∂©e
 <
˛ass
 
	gT
>

2458 c⁄° 
	gM©rix44
<
	gT
> &

2459 
	gM©rix44
<
	gT
>::
›î©‹
 /(
T
 
a
)

2461 
x
[0][0] /
a
;

2462 
	gx
[0][1] /
a
;

2463 
	gx
[0][2] /
a
;

2464 
	gx
[0][3] /
a
;

2465 
	gx
[1][0] /
a
;

2466 
	gx
[1][1] /
a
;

2467 
	gx
[1][2] /
a
;

2468 
	gx
[1][3] /
a
;

2469 
	gx
[2][0] /
a
;

2470 
	gx
[2][1] /
a
;

2471 
	gx
[2][2] /
a
;

2472 
	gx
[2][3] /
a
;

2473 
	gx
[3][0] /
a
;

2474 
	gx
[3][1] /
a
;

2475 
	gx
[3][2] /
a
;

2476 
	gx
[3][3] /
a
;

2478  *
	gthis
;

2481 
	gãm∂©e
 <
˛ass
 
	gT
>

2482 
	gM©rix44
<
	gT
>

2483 
	gM©rix44
<
	gT
>::
›î©‹
 / (
T
 
a
) const

2485  
M©rix44
 (
x
[0][0] / 
a
,

2486 
x
[0][1] / 
a
,

2487 
x
[0][2] / 
a
,

2488 
x
[0][3] / 
a
,

2489 
x
[1][0] / 
a
,

2490 
x
[1][1] / 
a
,

2491 
x
[1][2] / 
a
,

2492 
x
[1][3] / 
a
,

2493 
x
[2][0] / 
a
,

2494 
x
[2][1] / 
a
,

2495 
x
[2][2] / 
a
,

2496 
x
[2][3] / 
a
,

2497 
x
[3][0] / 
a
,

2498 
x
[3][1] / 
a
,

2499 
x
[3][2] / 
a
,

2500 
x
[3][3] / 
a
);

2503 
	gãm∂©e
 <
˛ass
 
	gT
>

2504 c⁄° 
	gM©rix44
<
	gT
> &

2505 
	gM©rix44
<
	gT
>::
	$å™•o£
 ()

2507 
M©rix44
 
	`tmp
 (
x
[0][0],

2508 
x
[1][0],

2509 
x
[2][0],

2510 
x
[3][0],

2511 
x
[0][1],

2512 
x
[1][1],

2513 
x
[2][1],

2514 
x
[3][1],

2515 
x
[0][2],

2516 
x
[1][2],

2517 
x
[2][2],

2518 
x
[3][2],

2519 
x
[0][3],

2520 
x
[1][3],

2521 
x
[2][3],

2522 
x
[3][3]);

2523 *
this
 = 
tmp
;

2524  *
this
;

2525 
	}
}

2527 
	gãm∂©e
 <
˛ass
 
	gT
>

2528 
	gM©rix44
<
	gT
>

2529 
	gM©rix44
<
	gT
>::
	$å™•o£d
 () const

2531  
	`M©rix44
 (
x
[0][0],

2532 
x
[1][0],

2533 
x
[2][0],

2534 
x
[3][0],

2535 
x
[0][1],

2536 
x
[1][1],

2537 
x
[2][1],

2538 
x
[3][1],

2539 
x
[0][2],

2540 
x
[1][2],

2541 
x
[2][2],

2542 
x
[3][2],

2543 
x
[0][3],

2544 
x
[1][3],

2545 
x
[2][3],

2546 
x
[3][3]);

2547 
	}
}

2549 
	gãm∂©e
 <
˛ass
 
	gT
>

2550 c⁄° 
	gM©rix44
<
	gT
> &

2551 
	gM©rix44
<
	gT
>::
	$gjInvît
 (
boﬁ
 
sögExc
Ë
	`throw
 (
Iex
::
M©hExc
)

2553 *
this
 = 
	`gjInvî£
 (
sögExc
);

2554  *
this
;

2555 
	}
}

2557 
	gãm∂©e
 <
˛ass
 
	gT
>

2558 
	gM©rix44
<
	gT
>

2559 
	gM©rix44
<
	gT
>::
	$gjInvî£
 (
boﬁ
 
sögExc
Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
)

2561 
i
, 
j
, 
k
;

2562 
M©rix44
 
s
;

2563 
M©rix44
 
	`t
 (*
this
);

2567 
i
 = 0; i < 3 ; i++)

2569 
pivŸ
 = 
i
;

2571 
T
 
pivŸsize
 = 
t
[
i
][i];

2573 i‡(
pivŸsize
 < 0)

2574 
pivŸsize
 = -pivotsize;

2576 
j
 = 
i
 + 1; j < 4; j++)

2578 
T
 
tmp
 = 
t
[
j
][
i
];

2580 i‡(
tmp
 < 0)

2581 
tmp
 = -tmp;

2583 i‡(
tmp
 > 
pivŸsize
)

2585 
pivŸ
 = 
j
;

2586 
pivŸsize
 = 
tmp
;

2590 i‡(
pivŸsize
 == 0)

2592 i‡(
sögExc
)

2593 
throw
 ::
Im©h
::
	`SögM©rixExc
 ("Cannot invert singular matrix.");

2595  
	`M©rix44
();

2598 i‡(
pivŸ
 !
i
)

2600 
j
 = 0; j < 4; j++)

2602 
T
 
tmp
;

2604 
tmp
 = 
t
[
i
][
j
];

2605 
t
[
i
][
j
] =Å[
pivŸ
][j];

2606 
t
[
pivŸ
][
j
] = 
tmp
;

2608 
tmp
 = 
s
[
i
][
j
];

2609 
s
[
i
][
j
] = s[
pivŸ
][j];

2610 
s
[
pivŸ
][
j
] = 
tmp
;

2614 
j
 = 
i
 + 1; j < 4; j++)

2616 
T
 
f
 = 
t
[
j
][
i
] /Å[i][i];

2618 
k
 = 0; k < 4; k++)

2620 
t
[
j
][
k
] -
f
 *Å[
i
][k];

2621 
s
[
j
][
k
] -
f
 * s[
i
][k];

2628 
i
 = 3; i >= 0; --i)

2630 
T
 
f
;

2632 i‡((
f
 = 
t
[
i
][i]) == 0)

2634 i‡(
sögExc
)

2635 
throw
 ::
Im©h
::
	`SögM©rixExc
 ("Cannot invert singular matrix.");

2637  
	`M©rix44
();

2640 
j
 = 0; j < 4; j++)

2642 
t
[
i
][
j
] /
f
;

2643 
s
[
i
][
j
] /
f
;

2646 
j
 = 0; j < 
i
; j++)

2648 
f
 = 
t
[
j
][
i
];

2650 
k
 = 0; k < 4; k++)

2652 
t
[
j
][
k
] -
f
 *Å[
i
][k];

2653 
s
[
j
][
k
] -
f
 * s[
i
][k];

2658  
s
;

2659 
	}
}

2661 
	gãm∂©e
 <
˛ass
 
	gT
>

2662 c⁄° 
	gM©rix44
<
	gT
> &

2663 
	gM©rix44
<
	gT
>::
	$övît
 (
boﬁ
 
sögExc
Ë
	`throw
 (
Iex
::
M©hExc
)

2665 *
this
 = 
	`övî£
 (
sögExc
);

2666  *
this
;

2667 
	}
}

2669 
	gãm∂©e
 <
˛ass
 
	gT
>

2670 
	gM©rix44
<
	gT
>

2671 
	gM©rix44
<
	gT
>::
	$övî£
 (
boﬁ
 
sögExc
Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
)

2673 i‡(
x
[0][3] != 0 || x[1][3] != 0 || x[2][3] != 0 || x[3][3] != 1)

2674  
	`gjInvî£
(
sögExc
);

2676 
M©rix44
 
	`s
 (
x
[1][1] * x[2][2] - x[2][1] * x[1][2],

2677 
x
[2][1] * x[0][2] - x[0][1] * x[2][2],

2678 
x
[0][1] * x[1][2] - x[1][1] * x[0][2],

2681 
x
[2][0] * x[1][2] - x[1][0] * x[2][2],

2682 
x
[0][0] * x[2][2] - x[2][0] * x[0][2],

2683 
x
[1][0] * x[0][2] - x[0][0] * x[1][2],

2686 
x
[1][0] * x[2][1] - x[2][0] * x[1][1],

2687 
x
[2][0] * x[0][1] - x[0][0] * x[2][1],

2688 
x
[0][0] * x[1][1] - x[1][0] * x[0][1],

2696 
T
 
r
 = 
x
[0][0] * 
s
[0][0] + x[0][1] * s[1][0] + x[0][2] * s[2][0];

2698 i‡(
Im©h
::
	`abs
 (
r
) >= 1)

2700 
i
 = 0; i < 3; ++i)

2702 
j
 = 0; j < 3; ++j)

2704 
s
[
i
][
j
] /
r
;

2710 
T
 
mr
 = 
Im©h
::
	`abs
 (
r
Ë/ 
limôs
<T>::
	`smÆÀ°
();

2712 
i
 = 0; i < 3; ++i)

2714 
j
 = 0; j < 3; ++j)

2716 i‡(
mr
 > 
Im©h
::
	`abs
 (
s
[
i
][
j
]))

2718 
s
[
i
][
j
] /
r
;

2722 i‡(
sögExc
)

2723 
throw
 
	`SögM©rixExc
 ("Cannot invert singular matrix.");

2725  
	`M©rix44
();

2731 
s
[3][0] = -
x
[3][0] * s[0][0] - x[3][1] * s[1][0] - x[3][2] * s[2][0];

2732 
s
[3][1] = -
x
[3][0] * s[0][1] - x[3][1] * s[1][1] - x[3][2] * s[2][1];

2733 
s
[3][2] = -
x
[3][0] * s[0][2] - x[3][1] * s[1][2] - x[3][2] * s[2][2];

2735  
s
;

2736 
	}
}

2738 
	gãm∂©e
 <
˛ass
 
	gT
>

2739 
	gãm∂©e
 <
˛ass
 
	gS
>

2740 c⁄° 
	gM©rix44
<
	gT
> &

2741 
	gM©rix44
<
	gT
>::
£tEuÀrAngÀs
 (c⁄° 
Vec3
<
S
>& 
r
)

2743 
S
 
cos_rz
, 
	gsö_rz
, 
	gcos_ry
, 
	gsö_ry
, 
	gcos_rx
, 
	gsö_rx
;

2745 
	gcos_rz
 = 
M©h
<
T
>::
cos
 (
r
[2]);

2746 
	gcos_ry
 = 
M©h
<
T
>::
cos
 (
r
[1]);

2747 
	gcos_rx
 = 
M©h
<
T
>::
cos
 (
r
[0]);

2749 
	gsö_rz
 = 
M©h
<
T
>::
sö
 (
r
[2]);

2750 
	gsö_ry
 = 
M©h
<
T
>::
sö
 (
r
[1]);

2751 
	gsö_rx
 = 
M©h
<
T
>::
sö
 (
r
[0]);

2753 
	gx
[0][0] = 
cos_rz
 * 
cos_ry
;

2754 
	gx
[0][1] = 
sö_rz
 * 
cos_ry
;

2755 
	gx
[0][2] = -
sö_ry
;

2756 
	gx
[0][3] = 0;

2758 
	gx
[1][0] = -
sö_rz
 * 
cos_rx
 + 
cos_rz
 * 
sö_ry
 * 
sö_rx
;

2759 
	gx
[1][1] = 
cos_rz
 * 
cos_rx
 + 
sö_rz
 * 
sö_ry
 * 
sö_rx
;

2760 
	gx
[1][2] = 
cos_ry
 * 
sö_rx
;

2761 
	gx
[1][3] = 0;

2763 
	gx
[2][0] = 
sö_rz
 * 
sö_rx
 + 
cos_rz
 * 
sö_ry
 * 
cos_rx
;

2764 
	gx
[2][1] = -
cos_rz
 * 
sö_rx
 + 
sö_rz
 * 
sö_ry
 * 
cos_rx
;

2765 
	gx
[2][2] = 
cos_ry
 * 
cos_rx
;

2766 
	gx
[2][3] = 0;

2768 
	gx
[3][0] = 0;

2769 
	gx
[3][1] = 0;

2770 
	gx
[3][2] = 0;

2771 
	gx
[3][3] = 1;

2773  *
	gthis
;

2776 
	gãm∂©e
 <
˛ass
 
	gT
>

2777 
	gãm∂©e
 <
˛ass
 
	gS
>

2778 c⁄° 
	gM©rix44
<
	gT
> &

2779 
	gM©rix44
<
	gT
>::
£tAxisAngÀ
 (c⁄° 
Vec3
<
S
>& 
axis
, S 
™gÀ
)

2781 
	gVec3
<
	gS
> 
unô
 (
axis
.
n‹mÆized
());

2782 
S
 
	gsöe
 = 
M©h
<
T
>::
sö
 (
™gÀ
);

2783 
S
 
	gcosöe
 = 
M©h
<
T
>::
cos
 (
™gÀ
);

2785 
	gx
[0][0] = 
unô
[0] * unô[0] * (1 - 
cosöe
) + cosine;

2786 
	gx
[0][1] = 
unô
[0] * unô[1] * (1 - 
cosöe
Ë+ unô[2] * 
söe
;

2787 
	gx
[0][2] = 
unô
[0] * unô[2] * (1 - 
cosöe
Ë- unô[1] * 
söe
;

2788 
	gx
[0][3] = 0;

2790 
	gx
[1][0] = 
unô
[0] * unô[1] * (1 - 
cosöe
Ë- unô[2] * 
söe
;

2791 
	gx
[1][1] = 
unô
[1] * unô[1] * (1 - 
cosöe
) + cosine;

2792 
	gx
[1][2] = 
unô
[1] * unô[2] * (1 - 
cosöe
Ë+ unô[0] * 
söe
;

2793 
	gx
[1][3] = 0;

2795 
	gx
[2][0] = 
unô
[0] * unô[2] * (1 - 
cosöe
Ë+ unô[1] * 
söe
;

2796 
	gx
[2][1] = 
unô
[1] * unô[2] * (1 - 
cosöe
Ë- unô[0] * 
söe
;

2797 
	gx
[2][2] = 
unô
[2] * unô[2] * (1 - 
cosöe
) + cosine;

2798 
	gx
[2][3] = 0;

2800 
	gx
[3][0] = 0;

2801 
	gx
[3][1] = 0;

2802 
	gx
[3][2] = 0;

2803 
	gx
[3][3] = 1;

2805  *
	gthis
;

2808 
	gãm∂©e
 <
˛ass
 
	gT
>

2809 
	gãm∂©e
 <
˛ass
 
	gS
>

2810 c⁄° 
	gM©rix44
<
	gT
> &

2811 
	gM©rix44
<
	gT
>::
rŸ©e
 (c⁄° 
Vec3
<
S
> &
r
)

2813 
S
 
cos_rz
, 
	gsö_rz
, 
	gcos_ry
, 
	gsö_ry
, 
	gcos_rx
, 
	gsö_rx
;

2814 
S
 
	gm00
, 
	gm01
, 
	gm02
;

2815 
S
 
	gm10
, 
	gm11
, 
	gm12
;

2816 
S
 
	gm20
, 
	gm21
, 
	gm22
;

2818 
	gcos_rz
 = 
M©h
<
S
>::
cos
 (
r
[2]);

2819 
	gcos_ry
 = 
M©h
<
S
>::
cos
 (
r
[1]);

2820 
	gcos_rx
 = 
M©h
<
S
>::
cos
 (
r
[0]);

2822 
	gsö_rz
 = 
M©h
<
S
>::
sö
 (
r
[2]);

2823 
	gsö_ry
 = 
M©h
<
S
>::
sö
 (
r
[1]);

2824 
	gsö_rx
 = 
M©h
<
S
>::
sö
 (
r
[0]);

2826 
	gm00
 = 
cos_rz
 * 
cos_ry
;

2827 
	gm01
 = 
sö_rz
 * 
cos_ry
;

2828 
	gm02
 = -
sö_ry
;

2829 
	gm10
 = -
sö_rz
 * 
cos_rx
 + 
cos_rz
 * 
sö_ry
 * 
sö_rx
;

2830 
	gm11
 = 
cos_rz
 * 
cos_rx
 + 
sö_rz
 * 
sö_ry
 * 
sö_rx
;

2831 
	gm12
 = 
cos_ry
 * 
sö_rx
;

2832 
	gm20
 = -
sö_rz
 * -
sö_rx
 + 
cos_rz
 * 
sö_ry
 * 
cos_rx
;

2833 
	gm21
 = 
cos_rz
 * -
sö_rx
 + 
sö_rz
 * 
sö_ry
 * 
cos_rx
;

2834 
	gm22
 = 
cos_ry
 * 
cos_rx
;

2836 
	gM©rix44
<
	gT
> 
P
 (*
this
);

2838 
	gx
[0][0] = 
P
[0][0] * 
m00
 + P[1][0] * 
m01
 + P[2][0] * 
m02
;

2839 
	gx
[0][1] = 
P
[0][1] * 
m00
 + P[1][1] * 
m01
 + P[2][1] * 
m02
;

2840 
	gx
[0][2] = 
P
[0][2] * 
m00
 + P[1][2] * 
m01
 + P[2][2] * 
m02
;

2841 
	gx
[0][3] = 
P
[0][3] * 
m00
 + P[1][3] * 
m01
 + P[2][3] * 
m02
;

2843 
	gx
[1][0] = 
P
[0][0] * 
m10
 + P[1][0] * 
m11
 + P[2][0] * 
m12
;

2844 
	gx
[1][1] = 
P
[0][1] * 
m10
 + P[1][1] * 
m11
 + P[2][1] * 
m12
;

2845 
	gx
[1][2] = 
P
[0][2] * 
m10
 + P[1][2] * 
m11
 + P[2][2] * 
m12
;

2846 
	gx
[1][3] = 
P
[0][3] * 
m10
 + P[1][3] * 
m11
 + P[2][3] * 
m12
;

2848 
	gx
[2][0] = 
P
[0][0] * 
m20
 + P[1][0] * 
m21
 + P[2][0] * 
m22
;

2849 
	gx
[2][1] = 
P
[0][1] * 
m20
 + P[1][1] * 
m21
 + P[2][1] * 
m22
;

2850 
	gx
[2][2] = 
P
[0][2] * 
m20
 + P[1][2] * 
m21
 + P[2][2] * 
m22
;

2851 
	gx
[2][3] = 
P
[0][3] * 
m20
 + P[1][3] * 
m21
 + P[2][3] * 
m22
;

2853  *
	gthis
;

2856 
	gãm∂©e
 <
˛ass
 
	gT
>

2857 c⁄° 
	gM©rix44
<
	gT
> &

2858 
	gM©rix44
<
	gT
>::
	$£tSˇÀ
 (
T
 
s
)

2860 
x
[0][0] = 
s
;

2861 
x
[0][1] = 0;

2862 
x
[0][2] = 0;

2863 
x
[0][3] = 0;

2865 
x
[1][0] = 0;

2866 
x
[1][1] = 
s
;

2867 
x
[1][2] = 0;

2868 
x
[1][3] = 0;

2870 
x
[2][0] = 0;

2871 
x
[2][1] = 0;

2872 
x
[2][2] = 
s
;

2873 
x
[2][3] = 0;

2875 
x
[3][0] = 0;

2876 
x
[3][1] = 0;

2877 
x
[3][2] = 0;

2878 
x
[3][3] = 1;

2880  *
this
;

2881 
	}
}

2883 
	gãm∂©e
 <
˛ass
 
	gT
>

2884 
	gãm∂©e
 <
˛ass
 
	gS
>

2885 c⁄° 
	gM©rix44
<
	gT
> &

2886 
	gM©rix44
<
	gT
>::
£tSˇÀ
 (c⁄° 
Vec3
<
S
> &
s
)

2888 
x
[0][0] = 
s
[0];

2889 
	gx
[0][1] = 0;

2890 
	gx
[0][2] = 0;

2891 
	gx
[0][3] = 0;

2893 
	gx
[1][0] = 0;

2894 
	gx
[1][1] = 
s
[1];

2895 
	gx
[1][2] = 0;

2896 
	gx
[1][3] = 0;

2898 
	gx
[2][0] = 0;

2899 
	gx
[2][1] = 0;

2900 
	gx
[2][2] = 
s
[2];

2901 
	gx
[2][3] = 0;

2903 
	gx
[3][0] = 0;

2904 
	gx
[3][1] = 0;

2905 
	gx
[3][2] = 0;

2906 
	gx
[3][3] = 1;

2908  *
	gthis
;

2911 
	gãm∂©e
 <
˛ass
 
	gT
>

2912 
	gãm∂©e
 <
˛ass
 
	gS
>

2913 c⁄° 
	gM©rix44
<
	gT
> &

2914 
	gM©rix44
<
	gT
>::
sˇÀ
 (c⁄° 
Vec3
<
S
> &
s
)

2916 
x
[0][0] *
s
[0];

2917 
	gx
[0][1] *
s
[0];

2918 
	gx
[0][2] *
s
[0];

2919 
	gx
[0][3] *
s
[0];

2921 
	gx
[1][0] *
s
[1];

2922 
	gx
[1][1] *
s
[1];

2923 
	gx
[1][2] *
s
[1];

2924 
	gx
[1][3] *
s
[1];

2926 
	gx
[2][0] *
s
[2];

2927 
	gx
[2][1] *
s
[2];

2928 
	gx
[2][2] *
s
[2];

2929 
	gx
[2][3] *
s
[2];

2931  *
	gthis
;

2934 
	gãm∂©e
 <
˛ass
 
	gT
>

2935 
	gãm∂©e
 <
˛ass
 
	gS
>

2936 c⁄° 
	gM©rix44
<
	gT
> &

2937 
	gM©rix44
<
	gT
>::
£tTøn¶©i⁄
 (c⁄° 
Vec3
<
S
> &
t
)

2939 
x
[0][0] = 1;

2940 
	gx
[0][1] = 0;

2941 
	gx
[0][2] = 0;

2942 
	gx
[0][3] = 0;

2944 
	gx
[1][0] = 0;

2945 
	gx
[1][1] = 1;

2946 
	gx
[1][2] = 0;

2947 
	gx
[1][3] = 0;

2949 
	gx
[2][0] = 0;

2950 
	gx
[2][1] = 0;

2951 
	gx
[2][2] = 1;

2952 
	gx
[2][3] = 0;

2954 
	gx
[3][0] = 
t
[0];

2955 
	gx
[3][1] = 
t
[1];

2956 
	gx
[3][2] = 
t
[2];

2957 
	gx
[3][3] = 1;

2959  *
	gthis
;

2962 
	gãm∂©e
 <
˛ass
 
	gT
>

2963 
ölöe
 c⁄° 
	gVec3
<
	gT
>

2964 
	gM©rix44
<
	gT
>::
	$å™¶©i⁄
 () const

2966  
Vec3
<
T
> (
x
[3][0], x[3][1], x[3][2]);

2967 
	}
}

2969 
	gãm∂©e
 <
˛ass
 
	gT
>

2970 
	gãm∂©e
 <
˛ass
 
	gS
>

2971 c⁄° 
	gM©rix44
<
	gT
> &

2972 
	gM©rix44
<
	gT
>::
å™¶©e
 (c⁄° 
Vec3
<
S
> &
t
)

2974 
x
[3][0] +
t
[0] * x[0][0] +Å[1] * x[1][0] +Å[2] * x[2][0];

2975 
	gx
[3][1] +
t
[0] * 
x
[0][1] +Å[1] * x[1][1] +Å[2] * x[2][1];

2976 
	gx
[3][2] +
t
[0] * 
x
[0][2] +Å[1] * x[1][2] +Å[2] * x[2][2];

2977 
	gx
[3][3] +
t
[0] * 
x
[0][3] +Å[1] * x[1][3] +Å[2] * x[2][3];

2979  *
	gthis
;

2982 
	gãm∂©e
 <
˛ass
 
	gT
>

2983 
	gãm∂©e
 <
˛ass
 
	gS
>

2984 c⁄° 
	gM©rix44
<
	gT
> &

2985 
	gM©rix44
<
	gT
>::
£tShór
 (c⁄° 
Vec3
<
S
> &
h
)

2987 
x
[0][0] = 1;

2988 
	gx
[0][1] = 0;

2989 
	gx
[0][2] = 0;

2990 
	gx
[0][3] = 0;

2992 
	gx
[1][0] = 
h
[0];

2993 
	gx
[1][1] = 1;

2994 
	gx
[1][2] = 0;

2995 
	gx
[1][3] = 0;

2997 
	gx
[2][0] = 
h
[1];

2998 
	gx
[2][1] = 
h
[2];

2999 
	gx
[2][2] = 1;

3000 
	gx
[2][3] = 0;

3002 
	gx
[3][0] = 0;

3003 
	gx
[3][1] = 0;

3004 
	gx
[3][2] = 0;

3005 
	gx
[3][3] = 1;

3007  *
	gthis
;

3010 
	gãm∂©e
 <
˛ass
 
	gT
>

3011 
	gãm∂©e
 <
˛ass
 
	gS
>

3012 c⁄° 
	gM©rix44
<
	gT
> &

3013 
	gM©rix44
<
	gT
>::
£tShór
 (c⁄° 
Shór6
<
S
> &
h
)

3015 
x
[0][0] = 1;

3016 
	gx
[0][1] = 
h
.
yx
;

3017 
	gx
[0][2] = 
h
.
zx
;

3018 
	gx
[0][3] = 0;

3020 
	gx
[1][0] = 
h
.
xy
;

3021 
	gx
[1][1] = 1;

3022 
	gx
[1][2] = 
h
.
zy
;

3023 
	gx
[1][3] = 0;

3025 
	gx
[2][0] = 
h
.
xz
;

3026 
	gx
[2][1] = 
h
.
yz
;

3027 
	gx
[2][2] = 1;

3028 
	gx
[2][3] = 0;

3030 
	gx
[3][0] = 0;

3031 
	gx
[3][1] = 0;

3032 
	gx
[3][2] = 0;

3033 
	gx
[3][3] = 1;

3035  *
	gthis
;

3038 
	gãm∂©e
 <
˛ass
 
	gT
>

3039 
	gãm∂©e
 <
˛ass
 
	gS
>

3040 c⁄° 
	gM©rix44
<
	gT
> &

3041 
	gM©rix44
<
	gT
>::
shór
 (c⁄° 
Vec3
<
S
> &
h
)

3049 
i
=0; 
	gi
 < 4; i++)

3051 
	gx
[2][
i
] +
h
[1] * 
x
[0][i] + h[2] * x[1][i];

3052 
	gx
[1][
i
] +
h
[0] * 
x
[0][i];

3055  *
	gthis
;

3058 
	gãm∂©e
 <
˛ass
 
	gT
>

3059 
	gãm∂©e
 <
˛ass
 
	gS
>

3060 c⁄° 
	gM©rix44
<
	gT
> &

3061 
	gM©rix44
<
	gT
>::
shór
 (c⁄° 
Shór6
<
S
> &
h
)

3063 
M©rix44
<
T
> 
P
 (*
this
);

3065 
	gi
=0; i < 4; i++)

3067 
	gx
[0][
i
] = 
P
[0][i] + 
h
.
yx
 * P[1][i] + h.
zx
 * P[2][i];

3068 
	gx
[1][
i
] = 
h
.
xy
 * 
P
[0][i] + P[1][i] + h.
zy
 * P[2][i];

3069 
	gx
[2][
i
] = 
h
.
xz
 * 
P
[0][i] + h.
yz
 * P[1][i] + P[2][i];

3072  *
	gthis
;

3080 
	gãm∂©e
 <
˛ass
 
	gT
>

3081 
	g°d
::
o°ªam
 &

3082 
›î©‹
 << (
°d
::
o°ªam
 &
s
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
)

3084 
	g°d
::
ios_ba£
::
fmtÊags
 
ﬁdFœgs
 = 
s
.
Êags
();

3085 
	gwidth
;

3087 i‡(
	gs
.
Êags
(Ë& 
	g°d
::
ios_ba£
::
fixed
)

3089 
s
.
£tf
 (
°d
::
ios_ba£
::
showpoöt
);

3090 
	gwidth
 = 
s
.
¥ecisi⁄
() + 5;

3094 
	gs
.
£tf
 (
°d
::
ios_ba£
::
scõ¡ific
);

3095 
	gs
.
£tf
 (
°d
::
ios_ba£
::
showpoöt
);

3096 
	gwidth
 = 
s
.
¥ecisi⁄
() + 8;

3099 
	gs
 << "(" << 
	g°d
::
£tw
 (
width
Ë<< 
m
[0][0] <<

3100 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[0][1] <<

3101 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[0][2] << "\n" <<

3103 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[1][0] <<

3104 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[1][1] <<

3105 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[1][2] << "\n" <<

3107 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[2][0] <<

3108 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[2][1] <<

3109 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[2][2] << ")\n";

3111 
	gs
.
Êags
 (
ﬁdFœgs
);

3112  
	gs
;

3115 
	gãm∂©e
 <
˛ass
 
	gT
>

3116 
	g°d
::
o°ªam
 &

3117 
›î©‹
 << (
°d
::
o°ªam
 &
s
, c⁄° 
	gM©rix44
<
	gT
> &
	gm
)

3119 
	g°d
::
ios_ba£
::
fmtÊags
 
ﬁdFœgs
 = 
s
.
Êags
();

3120 
	gwidth
;

3122 i‡(
	gs
.
Êags
(Ë& 
	g°d
::
ios_ba£
::
fixed
)

3124 
s
.
£tf
 (
°d
::
ios_ba£
::
showpoöt
);

3125 
	gwidth
 = 
s
.
¥ecisi⁄
() + 5;

3129 
	gs
.
£tf
 (
°d
::
ios_ba£
::
scõ¡ific
);

3130 
	gs
.
£tf
 (
°d
::
ios_ba£
::
showpoöt
);

3131 
	gwidth
 = 
s
.
¥ecisi⁄
() + 8;

3134 
	gs
 << "(" << 
	g°d
::
£tw
 (
width
Ë<< 
m
[0][0] <<

3135 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[0][1] <<

3136 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[0][2] <<

3137 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[0][3] << "\n" <<

3139 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[1][0] <<

3140 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[1][1] <<

3141 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[1][2] <<

3142 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[1][3] << "\n" <<

3144 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[2][0] <<

3145 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[2][1] <<

3146 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[2][2] <<

3147 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[2][3] << "\n" <<

3149 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[3][0] <<

3150 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[3][1] <<

3151 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[3][2] <<

3152 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[3][3] << ")\n";

3154 
	gs
.
Êags
 (
ﬁdFœgs
);

3155  
	gs
;

3163 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

3164 
ölöe
 c⁄° 
	gVec2
<
	gS
> &

3165 
	g›î©‹
 *(
Vec2
<
S
> &
v
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
)

3167 
S
 
	gx
 = S(
v
.
x
 * 
m
[0][0] + v.
y
 * m[1][0] + m[2][0]);

3168 
S
 
	gy
 = S(
v
.
x
 * 
m
[0][1] + v.
y
 * m[1][1] + m[2][1]);

3169 
S
 
	gw
 = S(
v
.
x
 * 
m
[0][2] + v.
y
 * m[1][2] + m[2][2]);

3171 
	gv
.
	gx
 = 
x
 / 
w
;

3172 
	gv
.
	gy
 = 
y
 / 
w
;

3174  
	gv
;

3177 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

3178 
ölöe
 
	gVec2
<
	gS
>

3179 
	g›î©‹
 * (c⁄° 
	gVec2
<
	gS
> &
	gv
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
)

3181 
S
 
	gx
 = S(
v
.
x
 * 
m
[0][0] + v.
y
 * m[1][0] + m[2][0]);

3182 
S
 
	gy
 = S(
v
.
x
 * 
m
[0][1] + v.
y
 * m[1][1] + m[2][1]);

3183 
S
 
	gw
 = S(
v
.
x
 * 
m
[0][2] + v.
y
 * m[1][2] + m[2][2]);

3185  
	gVec2
<
	gS
> (
	gx
 / 
	gw
, 
	gy
 / w);

3189 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

3190 
ölöe
 c⁄° 
	gVec3
<
	gS
> &

3191 
	g›î©‹
 *(
Vec3
<
S
> &
v
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
)

3193 
S
 
	gx
 = S(
v
.
x
 * 
m
[0][0] + v.
y
 * m[1][0] + v.
z
 * m[2][0]);

3194 
S
 
	gy
 = S(
v
.
x
 * 
m
[0][1] + v.
y
 * m[1][1] + v.
z
 * m[2][1]);

3195 
S
 
	gz
 = S(
v
.
x
 * 
m
[0][2] + v.
y
 * m[1][2] + v.
z
 * m[2][2]);

3197 
	gv
.
	gx
 = 
x
;

3198 
	gv
.
	gy
 = 
y
;

3199 
	gv
.
	gz
 = 
z
;

3201  
	gv
;

3205 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

3206 
ölöe
 
	gVec3
<
	gS
>

3207 
	g›î©‹
 * (c⁄° 
	gVec3
<
	gS
> &
	gv
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
)

3209 
S
 
	gx
 = S(
v
.
x
 * 
m
[0][0] + v.
y
 * m[1][0] + v.
z
 * m[2][0]);

3210 
S
 
	gy
 = S(
v
.
x
 * 
m
[0][1] + v.
y
 * m[1][1] + v.
z
 * m[2][1]);

3211 
S
 
	gz
 = S(
v
.
x
 * 
m
[0][2] + v.
y
 * m[1][2] + v.
z
 * m[2][2]);

3213  
	gVec3
<
	gS
> (
	gx
, 
	gy
, 
	gz
);

3217 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

3218 
ölöe
 c⁄° 
	gVec3
<
	gS
> &

3219 
	g›î©‹
 *(
Vec3
<
S
> &
v
, c⁄° 
	gM©rix44
<
	gT
> &
	gm
)

3221 
S
 
	gx
 = S(
v
.
x
 * 
m
[0][0] + v.
y
 * m[1][0] + v.
z
 * m[2][0] + m[3][0]);

3222 
S
 
	gy
 = S(
v
.
x
 * 
m
[0][1] + v.
y
 * m[1][1] + v.
z
 * m[2][1] + m[3][1]);

3223 
S
 
	gz
 = S(
v
.
x
 * 
m
[0][2] + v.
y
 * m[1][2] + v.
z
 * m[2][2] + m[3][2]);

3224 
S
 
	gw
 = S(
v
.
x
 * 
m
[0][3] + v.
y
 * m[1][3] + v.
z
 * m[2][3] + m[3][3]);

3226 
	gv
.
	gx
 = 
x
 / 
w
;

3227 
	gv
.
	gy
 = 
y
 / 
w
;

3228 
	gv
.
	gz
 = 
z
 / 
w
;

3230  
	gv
;

3233 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

3234 
ölöe
 
	gVec3
<
	gS
>

3235 
	g›î©‹
 * (c⁄° 
	gVec3
<
	gS
> &
	gv
, c⁄° 
	gM©rix44
<
	gT
> &
	gm
)

3237 
S
 
	gx
 = S(
v
.
x
 * 
m
[0][0] + v.
y
 * m[1][0] + v.
z
 * m[2][0] + m[3][0]);

3238 
S
 
	gy
 = S(
v
.
x
 * 
m
[0][1] + v.
y
 * m[1][1] + v.
z
 * m[2][1] + m[3][1]);

3239 
S
 
	gz
 = S(
v
.
x
 * 
m
[0][2] + v.
y
 * m[1][2] + v.
z
 * m[2][2] + m[3][2]);

3240 
S
 
	gw
 = S(
v
.
x
 * 
m
[0][3] + v.
y
 * m[1][3] + v.
z
 * m[2][3] + m[3][3]);

3242  
	gVec3
<
	gS
> (
	gx
 / 
	gw
, 
	gy
 / w, 
	gz
 / w);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h

36 #i‚de‡
INCLUDED_IMATHMATRIXALGO_H


37 
	#INCLUDED_IMATHMATRIXALGO_H


	)

51 
	~"Im©hM©rix.h
"

52 
	~"Im©hQu©.h
"

53 
	~"Im©hEuÀr.h
"

54 
	~"Im©hExc.h
"

55 
	~"Im©hVec.h
"

56 
	~<m©h.h
>

59 #ifde‡
OPENEXR_DLL


60 #ifde‡
IMATH_EXPORTS


61 
	#IMATH_EXPORT_CONST
 
	`__de˛•ec
(
dŒexp‹t
)

	)

63 
	#IMATH_EXPORT_CONST
 
	`__de˛•ec
(
dŒimp‹t
)

	)

66 
	#IMATH_EXPORT_CONST
 c⁄°

	)

70 
«me•a˚
 
Im©h
 {

76 
IMATH_EXPORT_CONST
 
M33f
 
idítôy33f
;

77 
IMATH_EXPORT_CONST
 
M44f
 
idítôy44f
;

78 
IMATH_EXPORT_CONST
 
M33d
 
idítôy33d
;

79 
IMATH_EXPORT_CONST
 
M44d
 
idítôy44d
;

129 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘Sˇlög


130 (c⁄° 
M©rix44
<
T
> &
m©
,

131 
Vec3
<
T
> &
s˛
,

132 
boﬁ
 
exc
 = 
åue
);

134 
ãm∂©e
 <
˛ass
 
T
> 
M©rix44
<T> 
ßnsSˇlög
 (c⁄° M©rix44<T> &
m©
,

135 
boﬁ
 
exc
 = 
åue
);

137 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
ªmoveSˇlög


138 (
M©rix44
<
T
> &
m©
,

139 
boﬁ
 
exc
 = 
åue
);

141 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘SˇlögAndShór


142 (c⁄° 
M©rix44
<
T
> &
m©
,

143 
Vec3
<
T
> &
s˛
,

144 
Vec3
<
T
> &
shr
,

145 
boﬁ
 
exc
 = 
åue
);

147 
ãm∂©e
 <
˛ass
 
T
> 
M©rix44
<T> 
ßnsSˇlögAndShór


148 (c⁄° 
M©rix44
<
T
> &
m©
,

149 
boﬁ
 
exc
 = 
åue
);

151 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
ªmoveSˇlögAndShór


152 (
M©rix44
<
T
> &
m©
,

153 
boﬁ
 
exc
 = 
åue
);

155 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘AndRemoveSˇlögAndShór


156 (
M©rix44
<
T
> &
m©
,

157 
Vec3
<
T
> &
s˛
,

158 
Vec3
<
T
> &
shr
,

159 
boﬁ
 
exc
 = 
åue
);

161 
ãm∂©e
 <
˛ass
 
T
> 
exåa˘EuÀrXYZ


162 (c⁄° 
M©rix44
<
T
> &
m©
,

163 
Vec3
<
T
> &
rŸ
);

165 
ãm∂©e
 <
˛ass
 
T
> 
exåa˘EuÀrZYX


166 (c⁄° 
M©rix44
<
T
> &
m©
,

167 
Vec3
<
T
> &
rŸ
);

169 
ãm∂©e
 <
˛ass
 
T
> 
Qu©
<T> 
exåa˘Qu©
 (c⁄° 
M©rix44
<T> &
m©
);

171 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘SHRT


172 (c⁄° 
M©rix44
<
T
> &
m©
,

173 
Vec3
<
T
> &
s
,

174 
Vec3
<
T
> &
h
,

175 
Vec3
<
T
> &
r
,

176 
Vec3
<
T
> &
t
,

177 
boﬁ
 
exc
 ,

178 
ty≥«me
 
EuÀr
<
T
>::
Ordî
 
rOrdî
);

180 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘SHRT


181 (c⁄° 
M©rix44
<
T
> &
m©
,

182 
Vec3
<
T
> &
s
,

183 
Vec3
<
T
> &
h
,

184 
Vec3
<
T
> &
r
,

185 
Vec3
<
T
> &
t
,

186 
boﬁ
 
exc
 = 
åue
);

188 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘SHRT


189 (c⁄° 
M©rix44
<
T
> &
m©
,

190 
Vec3
<
T
> &
s
,

191 
Vec3
<
T
> &
h
,

192 
EuÀr
<
T
> &
r
,

193 
Vec3
<
T
> &
t
,

194 
boﬁ
 
exc
 = 
åue
);

200 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
checkF‹ZîoSˇÀInRow


201 (c⁄° 
T
 &
s˛
,

202 c⁄° 
Vec3
<
T
> &
row
,

203 
boﬁ
 
exc
 = 
åue
);

210 
ãm∂©e
 <
˛ass
 
T
> 
M©rix44
<T> 
rŸ©i⁄M©rix
 (c⁄° 
Vec3
<T> &
‰omDúe˘i⁄
,

211 c⁄° 
Vec3
<
T
> &
toDúe˘i⁄
);

222 
ãm∂©e
 <
˛ass
 
T
> 
M©rix44
<T> 
rŸ©i⁄M©rixWôhUpDú


223 (c⁄° 
Vec3
<
T
> &
‰omDú
,

224 c⁄° 
Vec3
<
T
> &
toDú
,

225 c⁄° 
Vec3
<
T
> &
upDú
);

241 
ãm∂©e
 <
˛ass
 
T
> 
M©rix44
<T> 
ÆignZAxisWôhT¨gëDú


242 (
Vec3
<
T
> 
èrgëDú
,

243 
Vec3
<
T
> 
upDú
);

254 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘Sˇlög


255 (c⁄° 
M©rix33
<
T
> &
m©
,

256 
Vec2
<
T
> &
s˛
,

257 
boﬁ
 
exc
 = 
åue
);

259 
ãm∂©e
 <
˛ass
 
T
> 
M©rix33
<T> 
ßnsSˇlög
 (c⁄° M©rix33<T> &
m©
,

260 
boﬁ
 
exc
 = 
åue
);

262 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
ªmoveSˇlög


263 (
M©rix33
<
T
> &
m©
,

264 
boﬁ
 
exc
 = 
åue
);

266 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘SˇlögAndShór


267 (c⁄° 
M©rix33
<
T
> &
m©
,

268 
Vec2
<
T
> &
s˛
,

269 
T
 &
h
,

270 
boﬁ
 
exc
 = 
åue
);

272 
ãm∂©e
 <
˛ass
 
T
> 
M©rix33
<T> 
ßnsSˇlögAndShór


273 (c⁄° 
M©rix33
<
T
> &
m©
,

274 
boﬁ
 
exc
 = 
åue
);

276 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
ªmoveSˇlögAndShór


277 (
M©rix33
<
T
> &
m©
,

278 
boﬁ
 
exc
 = 
åue
);

280 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘AndRemoveSˇlögAndShór


281 (
M©rix33
<
T
> &
m©
,

282 
Vec2
<
T
> &
s˛
,

283 
T
 &
shr
,

284 
boﬁ
 
exc
 = 
åue
);

286 
ãm∂©e
 <
˛ass
 
T
> 
exåa˘EuÀr


287 (c⁄° 
M©rix33
<
T
> &
m©
,

288 
T
 &
rŸ
);

290 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘SHRT
 (c⁄° 
M©rix33
<T> &
m©
,

291 
Vec2
<
T
> &
s
,

292 
T
 &
h
,

293 
T
 &
r
,

294 
Vec2
<
T
> &
t
,

295 
boﬁ
 
exc
 = 
åue
);

297 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
checkF‹ZîoSˇÀInRow


298 (c⁄° 
T
 &
s˛
,

299 c⁄° 
Vec2
<
T
> &
row
,

300 
boﬁ
 
exc
 = 
åue
);

310 
ãm∂©e
 <
˛ass
 
T
>

311 
boﬁ


312 
exåa˘Sˇlög
 (c⁄° 
M©rix44
<
T
> &
m©
, 
Vec3
<T> &
s˛
, 
boﬁ
 
exc
)

314 
Vec3
<
T
> 
shr
;

315 
M©rix44
<
T
> 
M
 (
m©
);

317 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
M
, 
s˛
, 
shr
, 
exc
))

318  
Ál£
;

320  
åue
;

324 
ãm∂©e
 <
˛ass
 
T
>

325 
M©rix44
<
T
>

326 
ßnsSˇlög
 (c⁄° 
M©rix44
<
T
> &
m©
, 
boﬁ
 
exc
)

328 
Vec3
<
T
> 
s˛
;

329 
Vec3
<
T
> 
shr
;

330 
Vec3
<
T
> 
rŸ
;

331 
Vec3
<
T
> 
å™
;

333 i‡(! 
exåa˘SHRT
 (
m©
, 
s˛
, 
shr
, 
rŸ
, 
å™
, 
exc
))

334  
m©
;

336 
M©rix44
<
T
> 
M
;

338 
M
.
å™¶©e
 (
å™
);

339 
M
.
rŸ©e
 (
rŸ
);

340 
M
.
shór
 (
shr
);

342  
M
;

346 
ãm∂©e
 <
˛ass
 
T
>

347 
boﬁ


348 
ªmoveSˇlög
 (
M©rix44
<
T
> &
m©
, 
boﬁ
 
exc
)

350 
Vec3
<
T
> 
s˛
;

351 
Vec3
<
T
> 
shr
;

352 
Vec3
<
T
> 
rŸ
;

353 
Vec3
<
T
> 
å™
;

355 i‡(! 
exåa˘SHRT
 (
m©
, 
s˛
, 
shr
, 
rŸ
, 
å™
, 
exc
))

356  
Ál£
;

358 
m©
.
makeIdítôy
 ();

359 
m©
.
å™¶©e
 (
å™
);

360 
m©
.
rŸ©e
 (
rŸ
);

361 
m©
.
shór
 (
shr
);

363  
åue
;

367 
ãm∂©e
 <
˛ass
 
T
>

368 
boﬁ


369 
exåa˘SˇlögAndShór
 (c⁄° 
M©rix44
<
T
> &
m©
,

370 
Vec3
<
T
> &
s˛
, Vec3<T> &
shr
, 
boﬁ
 
exc
)

372 
M©rix44
<
T
> 
M
 (
m©
);

374 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
M
, 
s˛
, 
shr
, 
exc
))

375  
Ál£
;

377  
åue
;

381 
ãm∂©e
 <
˛ass
 
T
>

382 
M©rix44
<
T
>

383 
ßnsSˇlögAndShór
 (c⁄° 
M©rix44
<
T
> &
m©
, 
boﬁ
 
exc
)

385 
Vec3
<
T
> 
s˛
;

386 
Vec3
<
T
> 
shr
;

387 
M©rix44
<
T
> 
M
 (
m©
);

389 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
M
, 
s˛
, 
shr
, 
exc
))

390  
m©
;

392  
M
;

396 
ãm∂©e
 <
˛ass
 
T
>

397 
boﬁ


398 
ªmoveSˇlögAndShór
 (
M©rix44
<
T
> &
m©
, 
boﬁ
 
exc
)

400 
Vec3
<
T
> 
s˛
;

401 
Vec3
<
T
> 
shr
;

403 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
m©
, 
s˛
, 
shr
, 
exc
))

404  
Ál£
;

406  
åue
;

410 
ãm∂©e
 <
˛ass
 
T
>

411 
boﬁ


412 
exåa˘AndRemoveSˇlögAndShór
 (
M©rix44
<
T
> &
m©
,

413 
Vec3
<
T
> &
s˛
, Vec3<T> &
shr
, 
boﬁ
 
exc
)

421 
Vec3
<
T
> 
row
[3];

423 
row
[0] = 
Vec3
<
T
> (
m©
[0][0], mat[0][1], mat[0][2]);

424 
row
[1] = 
Vec3
<
T
> (
m©
[1][0], mat[1][1], mat[1][2]);

425 
row
[2] = 
Vec3
<
T
> (
m©
[2][0], mat[2][1], mat[2][2]);

427 
T
 
maxVÆ
 = 0;

428 
i
=0; i < 3; i++)

429 
j
=0; j < 3; j++)

430 i‡(
Im©h
::
abs
 (
row
[
i
][
j
]Ë> 
maxVÆ
)

431 
maxVÆ
 = 
Im©h
::
abs
 (
row
[
i
][
j
]);

441 i‡(
maxVÆ
 != 0)

443 
i
=0; i < 3; i++)

444 i‡(! 
checkF‹ZîoSˇÀInRow
 (
maxVÆ
, 
row
[
i
], 
exc
))

445  
Ál£
;

447 
row
[
i
] /
maxVÆ
;

451 
s˛
.
x
 = 
row
[0].
Àngth
 ();

452 i‡(! 
checkF‹ZîoSˇÀInRow
 (
s˛
.
x
, 
row
[0], 
exc
))

453  
Ál£
;

456 
row
[0] /
s˛
.
x
;

469 
shr
[0] = 
row
[0].
dŸ
 (row[1]);

470 
row
[1] -
shr
[0] *Ñow[0];

473 
s˛
.
y
 = 
row
[1].
Àngth
 ();

474 i‡(! 
checkF‹ZîoSˇÀInRow
 (
s˛
.
y
, 
row
[1], 
exc
))

475  
Ál£
;

478 
row
[1] /
s˛
.
y
;

479 
shr
[0] /
s˛
.
y
;

482 
shr
[1] = 
row
[0].
dŸ
 (row[2]);

483 
row
[2] -
shr
[1] *Ñow[0];

484 
shr
[2] = 
row
[1].
dŸ
 (row[2]);

485 
row
[2] -
shr
[2] *Ñow[1];

488 
s˛
.
z
 = 
row
[2].
Àngth
 ();

489 i‡(! 
checkF‹ZîoSˇÀInRow
 (
s˛
.
z
, 
row
[2], 
exc
))

490  
Ál£
;

493 
row
[2] /
s˛
.
z
;

494 
shr
[1] /
s˛
.
z
;

495 
shr
[2] /
s˛
.
z
;

500 i‡(
row
[0].
dŸ
 (row[1].
¸oss
 (row[2])) < 0)

501 
i
=0; i < 3; i++)

503 
s˛
[
i
] *= -1;

504 
row
[
i
] *= -1;

509 
i
=0; i < 3; i++)

511 
m©
[
i
][0] = 
row
[i][0];

512 
m©
[
i
][1] = 
row
[i][1];

513 
m©
[
i
][2] = 
row
[i][2];

519 
s˛
 *
maxVÆ
;

521  
åue
;

525 
ãm∂©e
 <
˛ass
 
T
>

527 
exåa˘EuÀrXYZ
 (c⁄° 
M©rix44
<
T
> &
m©
, 
Vec3
<T> &
rŸ
)

533 
Vec3
<
T
> 
i
 (
m©
[0][0], mat[0][1], mat[0][2]);

534 
Vec3
<
T
> 
j
 (
m©
[1][0], mat[1][1], mat[1][2]);

535 
Vec3
<
T
> 
k
 (
m©
[2][0], mat[2][1], mat[2][2]);

537 
i
.
n‹mÆize
();

538 
j
.
n‹mÆize
();

539 
k
.
n‹mÆize
();

541 
M©rix44
<
T
> 
M
 (
i
[0], i[1], i[2], 0,

542 
j
[0], j[1], j[2], 0,

543 
k
[0], k[1], k[2], 0,

550 
rŸ
.
x
 = 
M©h
<
T
>::
©™2
 (
M
[1][2], M[2][2]);

558 
M©rix44
<
T
> 
N
;

559 
N
.
rŸ©e
 (
Vec3
<
T
> (-
rŸ
.
x
, 0, 0));

560 
N
 = N * 
M
;

566 
T
 
cy
 = 
M©h
<T>::
sqπ
 (
N
[0][0]*N[0][0] + N[0][1]*N[0][1]);

567 
rŸ
.
y
 = 
M©h
<
T
>::
©™2
 (-
N
[0][2], 
cy
);

568 
rŸ
.
z
 = 
M©h
<
T
>::
©™2
 (-
N
[1][0], N[1][1]);

572 
ãm∂©e
 <
˛ass
 
T
>

574 
exåa˘EuÀrZYX
 (c⁄° 
M©rix44
<
T
> &
m©
, 
Vec3
<T> &
rŸ
)

580 
Vec3
<
T
> 
i
 (
m©
[0][0], mat[0][1], mat[0][2]);

581 
Vec3
<
T
> 
j
 (
m©
[1][0], mat[1][1], mat[1][2]);

582 
Vec3
<
T
> 
k
 (
m©
[2][0], mat[2][1], mat[2][2]);

584 
i
.
n‹mÆize
();

585 
j
.
n‹mÆize
();

586 
k
.
n‹mÆize
();

588 
M©rix44
<
T
> 
M
 (
i
[0], i[1], i[2], 0,

589 
j
[0], j[1], j[2], 0,

590 
k
[0], k[1], k[2], 0,

597 
rŸ
.
x
 = -
M©h
<
T
>::
©™2
 (
M
[1][0], M[0][0]);

605 
M©rix44
<
T
> 
N
;

606 
N
.
rŸ©e
 (
Vec3
<
T
> (0, 0, -
rŸ
.
x
));

607 
N
 = N * 
M
;

613 
T
 
cy
 = 
M©h
<T>::
sqπ
 (
N
[2][2]*N[2][2] + N[2][1]*N[2][1]);

614 
rŸ
.
y
 = -
M©h
<
T
>::
©™2
 (-
N
[2][0], 
cy
);

615 
rŸ
.
z
 = -
M©h
<
T
>::
©™2
 (-
N
[1][2], N[1][1]);

619 
ãm∂©e
 <
˛ass
 
T
>

620 
Qu©
<
T
>

621 
exåa˘Qu©
 (c⁄° 
M©rix44
<
T
> &
m©
)

623 
M©rix44
<
T
> 
rŸ
;

625 
T
 
å
, 
s
;

626 
T
 
q
[4];

627 
i
, 
j
, 
k
;

628 
Qu©
<
T
> 
qu©
;

630 
nxt
[3] = {1, 2, 0};

631 
å
 = 
m©
[0][0] + mat[1][1] + mat[2][2];

634 i‡(
å
 > 0.0) {

635 
s
 = 
M©h
<
T
>::
sqπ
 (
å
 + 1.0);

636 
qu©
.
r
 = 
s
 / 2.0;

637 
s
 = 0.5 / s;

639 
qu©
.
v
.
x
 = (
m©
[1][2] - m©[2][1]Ë* 
s
;

640 
qu©
.
v
.
y
 = (
m©
[2][0] - m©[0][2]Ë* 
s
;

641 
qu©
.
v
.
z
 = (
m©
[0][1] - m©[1][0]Ë* 
s
;

645 
i
 = 0;

646 i‡(
m©
[1][1] > mat[0][0])

647 
i
=1;

648 i‡(
m©
[2][2] > m©[
i
][i])

649 
i
=2;

651 
j
 = 
nxt
[
i
];

652 
k
 = 
nxt
[
j
];

653 
s
 = 
M©h
<
T
>::
sqπ
 ((
m©
[
i
][i] - (m©[
j
][j] + m©[
k
][k])) + 1.0);

655 
q
[
i
] = 
s
 * 0.5;

656 i‡(
s
 != 0.0)

657 
s
 = 0.5 / s;

659 
q
[3] = (
m©
[
j
][
k
] - m©[k][j]Ë* 
s
;

660 
q
[
j
] = (
m©
[
i
][j] + m©[j][i]Ë* 
s
;

661 
q
[
k
] = (
m©
[
i
][k] + m©[k][i]Ë* 
s
;

663 
qu©
.
v
.
x
 = 
q
[0];

664 
qu©
.
v
.
y
 = 
q
[1];

665 
qu©
.
v
.
z
 = 
q
[2];

666 
qu©
.
r
 = 
q
[3];

669  
qu©
;

672 
ãm∂©e
 <
˛ass
 
T
>

673 
boﬁ


674 
exåa˘SHRT
 (c⁄° 
M©rix44
<
T
> &
m©
,

675 
Vec3
<
T
> &
s
,

676 
Vec3
<
T
> &
h
,

677 
Vec3
<
T
> &
r
,

678 
Vec3
<
T
> &
t
,

679 
boﬁ
 
exc
 ,

680 
ty≥«me
 
EuÀr
<
T
>::
Ordî
 
rOrdî
 )

682 
M©rix44
<
T
> 
rŸ
;

684 
rŸ
 = 
m©
;

685 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
rŸ
, 
s
, 
h
, 
exc
))

686  
Ál£
;

688 
exåa˘EuÀrXYZ
 (
rŸ
, 
r
);

690 
t
.
x
 = 
m©
[3][0];

691 
t
.
y
 = 
m©
[3][1];

692 
t
.
z
 = 
m©
[3][2];

694 i‡(
rOrdî
 !
EuÀr
<
T
>::
XYZ
)

696 
Im©h
::
EuÀr
<
T
> 
eXYZ
 (
r
, Im©h::EuÀr<T>::
XYZ
);

697 
Im©h
::
EuÀr
<
T
> 
e
 (
eXYZ
, 
rOrdî
);

698 
r
 = 
e
.
toXYZVe˘‹
 ();

701  
åue
;

704 
ãm∂©e
 <
˛ass
 
T
>

705 
boﬁ


706 
exåa˘SHRT
 (c⁄° 
M©rix44
<
T
> &
m©
,

707 
Vec3
<
T
> &
s
,

708 
Vec3
<
T
> &
h
,

709 
Vec3
<
T
> &
r
,

710 
Vec3
<
T
> &
t
,

711 
boﬁ
 
exc
)

713  
exåa˘SHRT
(
m©
, 
s
, 
h
, 
r
, 
t
, 
exc
, 
Im©h
::
EuÀr
<
T
>::
XYZ
);

716 
ãm∂©e
 <
˛ass
 
T
>

717 
boﬁ


718 
exåa˘SHRT
 (c⁄° 
M©rix44
<
T
> &
m©
,

719 
Vec3
<
T
> &
s
,

720 
Vec3
<
T
> &
h
,

721 
EuÀr
<
T
> &
r
,

722 
Vec3
<
T
> &
t
,

723 
boﬁ
 
exc
 )

725  
exåa˘SHRT
 (
m©
, 
s
, 
h
, 
r
, 
t
, 
exc
,Ñ.
‹dî
 ());

729 
ãm∂©e
 <
˛ass
 
T
>

730 
boﬁ


731 
checkF‹ZîoSˇÀInRow
 (c⁄° 
T
& 
s˛
,

732 c⁄° 
Vec3
<
T
> &
row
,

733 
boﬁ
 
exc
 )

735 
i
 = 0; i < 3; i++)

737 i‡((
abs
 (
s˛
Ë< 1 &&áb†(
row
[
i
]Ë>
limôs
<
T
>::
max
() *ábs (scl)))

739 i‡(
exc
)

740 
throw
 
Im©h
::
ZîoSˇÀExc
 ("CannotÑemove zero scaling "

743  
Ál£
;

747  
åue
;

751 
ãm∂©e
 <
˛ass
 
T
>

752 
M©rix44
<
T
>

753 
rŸ©i⁄M©rix
 (c⁄° 
Vec3
<
T
> &
‰om
, c⁄° Vec3<T> &
to
)

755 
Qu©
<
T
> 
q
;

756 
q
.
£tRŸ©i⁄
(
‰om
, 
to
);

757  
q
.
toM©rix44
();

761 
ãm∂©e
 <
˛ass
 
T
>

762 
M©rix44
<
T
>

763 
rŸ©i⁄M©rixWôhUpDú
 (c⁄° 
Vec3
<
T
> &
‰omDú
,

764 c⁄° 
Vec3
<
T
> &
toDú
,

765 c⁄° 
Vec3
<
T
> &
upDú
)

776 i‡(
‰omDú
.
Àngth
 () == 0)

777  
M©rix44
<
T
> ();

781 
M©rix44
<
T
> 
zAxis2FromDú
 = 
ÆignZAxisWôhT¨gëDú


782 (
‰omDú
, 
Vec3
<
T
> (0, 1, 0));

784 
M©rix44
<
T
> 
‰omDú2zAxis
 = 
zAxis2FromDú
.
å™•o£d
 ();

786 
M©rix44
<
T
> 
zAxis2ToDú
 = 
ÆignZAxisWôhT¨gëDú
 (
toDú
, 
upDú
);

788  
‰omDú2zAxis
 * 
zAxis2ToDú
;

793 
ãm∂©e
 <
˛ass
 
T
>

794 
M©rix44
<
T
>

795 
ÆignZAxisWôhT¨gëDú
 (
Vec3
<
T
> 
èrgëDú
, Vec3<T> 
upDú
)

801 i‡–
èrgëDú
.
Àngth
 () == 0 )

802 
èrgëDú
 = 
Vec3
<
T
> (0, 0, 1);

808 i‡–
upDú
.
Àngth
 () == 0 )

809 
upDú
 = 
Vec3
<
T
> (0, 1, 0);

817 i‡(
upDú
.
¸oss
 (
èrgëDú
).
Àngth
 () == 0)

819 
upDú
 = 
èrgëDú
.
¸oss
 (
Vec3
<
T
> (1, 0, 0));

820 i‡(
upDú
.
Àngth
() == 0)

821 
upDú
 = 
èrgëDú
.
¸oss
(
Vec3
<
T
> (0, 0, 1));

828 
Vec3
<
T
> 
èrgëPîpDú
 = 
upDú
.
¸oss
 (
èrgëDú
);

829 
Vec3
<
T
> 
èrgëUpDú
 = 
èrgëDú
.
¸oss
 (
èrgëPîpDú
);

837 
Vec3
<
T
> 
row
[3];

838 
row
[0] = 
èrgëPîpDú
.
n‹mÆized
 ();

839 
row
[1] = 
èrgëUpDú
 .
n‹mÆized
 ();

840 
row
[2] = 
èrgëDú
 .
n‹mÆized
 ();

842 
M©rix44
<
T
> 
m©
 ( 
row
[0][0],Ñow[0][1],Ñow[0][2], 0,

843 
row
[1][0],Ñow[1][1],Ñow[1][2], 0,

844 
row
[2][0],Ñow[2][1],Ñow[2][2], 0,

847  
m©
;

857 
ãm∂©e
 <
˛ass
 
T
>

858 
boﬁ


859 
exåa˘Sˇlög
 (c⁄° 
M©rix33
<
T
> &
m©
, 
Vec2
<T> &
s˛
, 
boﬁ
 
exc
)

861 
T
 
shr
;

862 
M©rix33
<
T
> 
M
 (
m©
);

864 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
M
, 
s˛
, 
shr
, 
exc
))

865  
Ál£
;

867  
åue
;

871 
ãm∂©e
 <
˛ass
 
T
>

872 
M©rix33
<
T
>

873 
ßnsSˇlög
 (c⁄° 
M©rix33
<
T
> &
m©
, 
boﬁ
 
exc
)

875 
Vec2
<
T
> 
s˛
;

876 
T
 
shr
;

877 
T
 
rŸ
;

878 
Vec2
<
T
> 
å™
;

880 i‡(! 
exåa˘SHRT
 (
m©
, 
s˛
, 
shr
, 
rŸ
, 
å™
, 
exc
))

881  
m©
;

883 
M©rix33
<
T
> 
M
;

885 
M
.
å™¶©e
 (
å™
);

886 
M
.
rŸ©e
 (
rŸ
);

887 
M
.
shór
 (
shr
);

889  
M
;

893 
ãm∂©e
 <
˛ass
 
T
>

894 
boﬁ


895 
ªmoveSˇlög
 (
M©rix33
<
T
> &
m©
, 
boﬁ
 
exc
)

897 
Vec2
<
T
> 
s˛
;

898 
T
 
shr
;

899 
T
 
rŸ
;

900 
Vec2
<
T
> 
å™
;

902 i‡(! 
exåa˘SHRT
 (
m©
, 
s˛
, 
shr
, 
rŸ
, 
å™
, 
exc
))

903  
Ál£
;

905 
m©
.
makeIdítôy
 ();

906 
m©
.
å™¶©e
 (
å™
);

907 
m©
.
rŸ©e
 (
rŸ
);

908 
m©
.
shór
 (
shr
);

910  
åue
;

914 
ãm∂©e
 <
˛ass
 
T
>

915 
boﬁ


916 
exåa˘SˇlögAndShór
 (c⁄° 
M©rix33
<
T
> &
m©
, 
Vec2
<T> &
s˛
, T &
shr
, 
boﬁ
 
exc
)

918 
M©rix33
<
T
> 
M
 (
m©
);

920 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
M
, 
s˛
, 
shr
, 
exc
))

921  
Ál£
;

923  
åue
;

927 
ãm∂©e
 <
˛ass
 
T
>

928 
M©rix33
<
T
>

929 
ßnsSˇlögAndShór
 (c⁄° 
M©rix33
<
T
> &
m©
, 
boﬁ
 
exc
)

931 
Vec2
<
T
> 
s˛
;

932 
T
 
shr
;

933 
M©rix33
<
T
> 
M
 (
m©
);

935 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
M
, 
s˛
, 
shr
, 
exc
))

936  
m©
;

938  
M
;

942 
ãm∂©e
 <
˛ass
 
T
>

943 
boﬁ


944 
ªmoveSˇlögAndShór
 (
M©rix33
<
T
> &
m©
, 
boﬁ
 
exc
)

946 
Vec2
<
T
> 
s˛
;

947 
T
 
shr
;

949 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
m©
, 
s˛
, 
shr
, 
exc
))

950  
Ál£
;

952  
åue
;

955 
ãm∂©e
 <
˛ass
 
T
>

956 
boﬁ


957 
exåa˘AndRemoveSˇlögAndShór
 (
M©rix33
<
T
> &
m©
,

958 
Vec2
<
T
> &
s˛
, T &
shr
, 
boﬁ
 
exc
)

960 
Vec2
<
T
> 
row
[2];

962 
row
[0] = 
Vec2
<
T
> (
m©
[0][0], mat[0][1]);

963 
row
[1] = 
Vec2
<
T
> (
m©
[1][0], mat[1][1]);

965 
T
 
maxVÆ
 = 0;

966 
i
=0; i < 2; i++)

967 
j
=0; j < 2; j++)

968 i‡(
Im©h
::
abs
 (
row
[
i
][
j
]Ë> 
maxVÆ
)

969 
maxVÆ
 = 
Im©h
::
abs
 (
row
[
i
][
j
]);

979 i‡(
maxVÆ
 != 0)

981 
i
=0; i < 2; i++)

982 i‡(! 
checkF‹ZîoSˇÀInRow
 (
maxVÆ
, 
row
[
i
], 
exc
))

983  
Ál£
;

985 
row
[
i
] /
maxVÆ
;

989 
s˛
.
x
 = 
row
[0].
Àngth
 ();

990 i‡(! 
checkF‹ZîoSˇÀInRow
 (
s˛
.
x
, 
row
[0], 
exc
))

991  
Ál£
;

994 
row
[0] /
s˛
.
x
;

1006 
shr
 = 
row
[0].
dŸ
 (row[1]);

1007 
row
[1] -
shr
 *Ñow[0];

1010 
s˛
.
y
 = 
row
[1].
Àngth
 ();

1011 i‡(! 
checkF‹ZîoSˇÀInRow
 (
s˛
.
y
, 
row
[1], 
exc
))

1012  
Ál£
;

1015 
row
[1] /
s˛
.
y
;

1016 
shr
 /
s˛
.
y
;

1022 i‡(
row
[0][0] *Ñow[1][1] -Ñow[0][1] *Ñow[1][0] < 0)

1024 
row
[1][0] *= -1;

1025 
row
[1][1] *= -1;

1026 
s˛
[1] *= -1;

1027 
shr
 *= -1;

1032 
i
=0; i < 2; i++)

1034 
m©
[
i
][0] = 
row
[i][0];

1035 
m©
[
i
][1] = 
row
[i][1];

1038 
s˛
 *
maxVÆ
;

1040  
åue
;

1044 
ãm∂©e
 <
˛ass
 
T
>

1046 
exåa˘EuÀr
 (c⁄° 
M©rix33
<
T
> &
m©
, T &
rŸ
)

1052 
Vec2
<
T
> 
i
 (
m©
[0][0], mat[0][1]);

1053 
Vec2
<
T
> 
j
 (
m©
[1][0], mat[1][1]);

1055 
i
.
n‹mÆize
();

1056 
j
.
n‹mÆize
();

1062 
rŸ
 = - 
M©h
<
T
>::
©™2
 (
j
[0], 
i
[0]);

1066 
ãm∂©e
 <
˛ass
 
T
>

1067 
boﬁ


1068 
exåa˘SHRT
 (c⁄° 
M©rix33
<
T
> &
m©
,

1069 
Vec2
<
T
> &
s
,

1070 
T
 &
h
,

1071 
T
 &
r
,

1072 
Vec2
<
T
> &
t
,

1073 
boﬁ
 
exc
)

1075 
M©rix33
<
T
> 
rŸ
;

1077 
rŸ
 = 
m©
;

1078 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
rŸ
, 
s
, 
h
, 
exc
))

1079  
Ál£
;

1081 
exåa˘EuÀr
 (
rŸ
, 
r
);

1083 
t
.
x
 = 
m©
[2][0];

1084 
t
.
y
 = 
m©
[2][1];

1086  
åue
;

1090 
ãm∂©e
 <
˛ass
 
T
>

1091 
boﬁ


1092 
checkF‹ZîoSˇÀInRow
 (c⁄° 
T
& 
s˛
,

1093 c⁄° 
Vec2
<
T
> &
row
,

1094 
boﬁ
 
exc
 )

1096 
i
 = 0; i < 2; i++)

1098 i‡((
abs
 (
s˛
Ë< 1 &&áb†(
row
[
i
]Ë>
limôs
<
T
>::
max
() *ábs (scl)))

1100 i‡(
exc
)

1101 
throw
 
Im©h
::
ZîoSˇÀExc
 ("CannotÑemove zero scaling "

1104  
Ál£
;

1108  
åue
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h

37 #i‚de‡
INCLUDED_IMATHPLANE_H


38 
	#INCLUDED_IMATHPLANE_H


	)

55 
	~"Im©hVec.h
"

56 
	~"Im©hLöe.h
"

58 
«me•a˚
 
	gIm©h
 {

61 
	gãm∂©e
 <
˛ass
 
	gT
>

62 ˛as†
	cPœ√3


64 
	gpublic
:

66 
Vec3
<
T
> 
n‹mÆ
;

67 
T
 
	gdi°™˚
;

69 
Pœ√3
() {}

70 
Pœ√3
(c⁄° 
Vec3
<
T
> &
n‹mÆ
, T 
di°™˚
);

71 
Pœ√3
(c⁄° 
Vec3
<
T
> &
poöt
, c⁄° Vec3<T> &
n‹mÆ
);

72 
Pœ√3
(c⁄° 
Vec3
<
T
> &
poöt1
,

73 c⁄° 
Vec3
<
T
> &
poöt2
,

74 c⁄° 
Vec3
<
T
> &
poöt3
);

80 
£t
(c⁄° 
Vec3
<
T
> &
n‹mÆ
,

81 
T
 
di°™˚
);

83 
£t
(c⁄° 
Vec3
<
T
> &
poöt
,

84 c⁄° 
Vec3
<
T
> &
n‹mÆ
);

86 
£t
(c⁄° 
Vec3
<
T
> &
poöt1
,

87 c⁄° 
Vec3
<
T
> &
poöt2
,

88 c⁄° 
Vec3
<
T
> &
poöt3
 );

94 
boﬁ
 
öãr£˘
(c⁄° 
Löe3
<
T
> &
löe
,

95 
Vec3
<
T
> &
öãr£˘i⁄
) const;

97 
boﬁ
 
öãr£˘T
(c⁄° 
Löe3
<
T
> &
löe
,

98 
T
 &
∑ømëî
) const;

100 
T
 
di°™˚To
(c⁄° 
Vec3
<T> &) const;

102 
	gVec3
<
	gT
> 
ªÊe˘Poöt
(c⁄° 
Vec3
<
T
> &) const;

103 
	gVec3
<
	gT
> 
ªÊe˘Ve˘‹
(c⁄° 
Vec3
<
T
> &) const;

111 
	gPœ√3
<> 
	tPœ√3f
;

112 
	gPœ√3
<> 
	tPœ√3d
;

119 
	gãm∂©e
 <
˛ass
 
	gT
>

120 
ölöe
 
	gPœ√3
<
	gT
>::
Pœ√3
(c⁄° 
Vec3
<
T
> &
p0
,

121 c⁄° 
Vec3
<
T
> &
p1
,

122 c⁄° 
Vec3
<
T
> &
p2
)

124 
£t
(
p0
,
p1
,
p2
);

127 
	gãm∂©e
 <
˛ass
 
	gT
>

128 
ölöe
 
	gPœ√3
<
	gT
>::
Pœ√3
(c⁄° 
Vec3
<
T
> &
n
, T 
d
)

130 
£t
(
n
, 
d
);

133 
	gãm∂©e
 <
˛ass
 
	gT
>

134 
ölöe
 
	gPœ√3
<
	gT
>::
Pœ√3
(c⁄° 
Vec3
<
T
> &
p
, c⁄° Vec3<T> &
n
)

136 
£t
(
p
, 
n
);

139 
	gãm∂©e
 <
˛ass
 
	gT
>

140 
ölöe
 
	gPœ√3
<
	gT
>::
£t
(c⁄° 
Vec3
<
T
>& 
poöt1
,

141 c⁄° 
Vec3
<
T
>& 
poöt2
,

142 c⁄° 
Vec3
<
T
>& 
poöt3
)

144 
	gn‹mÆ
 = (
poöt2
 - 
poöt1
Ë% (
poöt3
 -Öoint1);

145 
	gn‹mÆ
.
n‹mÆize
();

146 
	gdi°™˚
 = 
n‹mÆ
 ^ 
poöt1
;

149 
	gãm∂©e
 <
˛ass
 
	gT
>

150 
ölöe
 
	gPœ√3
<
	gT
>::
£t
(c⁄° 
Vec3
<
T
>& 
poöt
, c⁄° Vec3<T>& 
n
)

152 
	gn‹mÆ
 = 
n
;

153 
	gn‹mÆ
.
n‹mÆize
();

154 
	gdi°™˚
 = 
n‹mÆ
 ^ 
poöt
;

157 
	gãm∂©e
 <
˛ass
 
	gT
>

158 
ölöe
 
	gPœ√3
<
	gT
>::
£t
(c⁄° 
Vec3
<
T
>& 
n
, T 
d
)

160 
	gn‹mÆ
 = 
n
;

161 
	gn‹mÆ
.
n‹mÆize
();

162 
	gdi°™˚
 = 
d
;

165 
	gãm∂©e
 <
˛ass
 
	gT
>

166 
ölöe
 
T
 
	gPœ√3
<
	gT
>::
di°™˚To
(c⁄° 
Vec3
<T> &
poöt
) const

168  (
poöt
 ^ 
n‹mÆ
Ë- 
di°™˚
;

171 
	gãm∂©e
 <
˛ass
 
	gT
>

172 
ölöe
 
	gVec3
<
	gT
> 
	gPœ√3
<T>::
ªÊe˘Poöt
(c⁄° 
Vec3
<
T
> &
poöt
) const

174  
n‹mÆ
 * 
di°™˚To
(
poöt
) * -2.0 +Öoint;

178 
	gãm∂©e
 <
˛ass
 
	gT
>

179 
ölöe
 
	gVec3
<
	gT
> 
	gPœ√3
<T>::
ªÊe˘Ve˘‹
(c⁄° 
Vec3
<
T
> &
v
) const

181  
n‹mÆ
 * (n‹mÆ ^ 
v
) * 2.0 - v;

185 
	gãm∂©e
 <
˛ass
 
	gT
>

186 
ölöe
 
boﬁ
 
	gPœ√3
<
	gT
>::
öãr£˘
(c⁄° 
Löe3
<
T
>& 
löe
, 
Vec3
<T>& 
poöt
) const

188 
T
 
	gd
 = 
n‹mÆ
 ^ 
löe
.
dú
;

189 i‡–
	gd
 =0.0 )  
Ál£
;

190 
T
 
	gt
 = - ((
n‹mÆ
 ^ 
löe
.
pos
Ë- 
di°™˚
Ë/ 
d
;

191 
	gpoöt
 = 
löe
(
t
);

192  
	gåue
;

195 
	gãm∂©e
 <
˛ass
 
	gT
>

196 
ölöe
 
boﬁ
 
	gPœ√3
<
	gT
>::
öãr£˘T
(c⁄° 
Löe3
<
T
>& 
löe
, T &
t
) const

198 
T
 
	gd
 = 
n‹mÆ
 ^ 
löe
.
dú
;

199 i‡–
	gd
 =0.0 )  
Ál£
;

200 
	gt
 = - ((
n‹mÆ
 ^ 
löe
.
pos
Ë- 
di°™˚
Ë/ 
d
;

201  
	gåue
;

204 
	gãm∂©e
<
˛ass
 
	gT
>

205 
	g°d
::
o°ªam
 &
›î©‹
<< (
°d
::o°ªam &
o
, c⁄° 
	gPœ√3
<
	gT
> &
	g∂™e
)

207  
	go
 << "(" << 
	g∂™e
.
	gn‹mÆ
 << ", " <<Öœ√.
	gdi°™˚


211 
	gãm∂©e
<
˛ass
 
	gT
>

212 
	gPœ√3
<
	gT
> 
	g›î©‹
* (c⁄° Pœ√3<T> &
	g∂™e
, c⁄° 
	gM©rix44
<T> &
	gM
)

219 
	gVec3
<
	gT
> 
	gdú1
 = 
Vec3
<
T
> (1, 0, 0Ë% 
	g∂™e
.
	gn‹mÆ
;

220 
T
 
	gdú1Lí
 = 
dú1
 ^ dir1;

222 
	gVec3
<
	gT
> 
	gtmp
 = 
Vec3
<
T
> (0, 1, 0Ë% 
	g∂™e
.
	gn‹mÆ
;

223 
T
 
	gtmpLí
 = 
tmp
 ^Åmp;

225 i‡(
	gtmpLí
 > 
	gdú1Lí
)

227 
	gdú1
 = 
tmp
;

228 
	gdú1Lí
 = 
tmpLí
;

231 
	gtmp
 = 
Vec3
<
T
> (0, 0, 1Ë% 
	g∂™e
.
	gn‹mÆ
;

232 
	gtmpLí
 = 
tmp
 ^Åmp;

234 i‡(
	gtmpLí
 > 
	gdú1Lí
)

236 
	gdú1
 = 
tmp
;

239 
	gVec3
<
	gT
> 
	gdú2
 = 
dú1
 % 
∂™e
.
n‹mÆ
;

240 
	gVec3
<
	gT
> 
	gpoöt
 = 
∂™e
.
di°™˚
 *Öœ√.
n‹mÆ
;

242  
	gPœ√3
<
	gT
> ( 
poöt
 * 
	gM
,

243 (
	gpoöt
 + 
	gdú2
Ë* 
	gM
,

244 (
	gpoöt
 + 
	gdú1
Ë* 
	gM
 );

247 
	gãm∂©e
<
˛ass
 
	gT
>

248 
	gPœ√3
<
	gT
> 
	g›î©‹
- (c⁄° Pœ√3<T> &
	g∂™e
)

250  
	gPœ√3
<
	gT
>(-
	g∂™e
.
	gn‹mÆ
,-∂™e.
	gdi°™˚
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlatform.h

37 #i‚de‡
INCLUDED_IMATHPLATFORM_H


38 
	#INCLUDED_IMATHPLATFORM_H


	)

49 
	~<m©h.h
>

51 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


52 #i‚de‡
M_PI


53 
	#M_PI
 3.14159265358979323846

	)

76 #i‡
deföed
 
__GNUC__


77 #i‡!
deföed
(
ª°ri˘
)

78 
	#ª°ri˘
 
__ª°ri˘


	)

81 #ñi‡
deföed
(
__INTEL_COMPILER
Ë|| deföed(
__ICL
Ë|| deföed(
__ICC
Ë|| deföed(
__ECC
)

84 #ñi‡
deföed
 
__sgi


88 
	#ª°ri˘


	)

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h

37 #i‚de‡
INCLUDED_IMATHQUAT_H


38 
	#INCLUDED_IMATHQUAT_H


	)

58 
	~"Im©hExc.h
"

59 
	~"Im©hM©rix.h
"

61 
	~<io°ªam
>

63 
«me•a˚
 
	gIm©h
 {

65 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


67 #¥agm®
w¨nög
(
dißbÀ
:4244)

70 
	gãm∂©e
 <
˛ass
 
	gT
>

71 
˛ass
 
	gQu©
;

73 
	gãm∂©e
<
˛ass
 
	gT
>

74 
	gQu©
<
	gT
> 
¶îp
 (c⁄° 
Qu©
<
T
> &
q1
,c⁄° Qu©<T> &
q2
, T 
t
);

76 
	gãm∂©e
<
˛ass
 
	gT
>

77 
	gQu©
<
	gT
> 
squad
 (c⁄° 
Qu©
<
T
> &
q1
,c⁄° Qu©<T> &
q2
,

78 c⁄° 
Qu©
<
T
> &
qa
,c⁄° Qu©<T> &
qb
, T 
t
);

80 
	gãm∂©e
<
˛ass
 
	gT
>

81 
öãrmedüã
 (c⁄° 
Qu©
<
T
> &
q0
, c⁄° Qu©<T> &
q1
,

82 c⁄° 
Qu©
<
T
> &
q2
, c⁄° Qu©<T> &
q3
,

83 
Qu©
<
T
> &
qa
, Qu©<T> &
qb
);

85 
	gãm∂©e
 <
˛ass
 
	gT
>

86 ˛as†
	cQu©


88 
	gpublic
:

90 
T
 
r
;

91 
	gVec3
<
	gT
> 
	gv
;

97 
Qu©
(Ë: 
r
(1), 
v
(0,0,0) {}

99 
	gãm∂©e
 <
˛ass
 
	gS
>

100 
Qu©
–c⁄° Qu©<
S
>& 
q
Ë: 
r
(q.r), 
v
(q.v) {}

102 
Qu©
–
T
 
s
, T 
i
, T 
j
, T 
k
 ) : 
r
(s), 
v
(i,j,k) {}

104 
Qu©
–
T
 
s
, 
Vec3
<T> 
d
 ) : 
r
(s), 
v
(d) {}

106 
	gQu©
<
	gT
> 
idítôy
() {  Quat<T>(); }

121 c⁄° 
	gQu©
<
	gT
>& 
	g›î©‹
(c⁄° 
Qu©
<
T
>&);

122 c⁄° 
	gQu©
<
	gT
>& 
	g›î©‹
*(c⁄° 
Qu©
<
T
>&);

123 c⁄° 
	gQu©
<
	gT
>& 
	g›î©‹
*(
T
);

124 c⁄° 
	gQu©
<
	gT
>& 
	g›î©‹
/(c⁄° 
Qu©
<
T
>&);

125 c⁄° 
	gQu©
<
	gT
>& 
	g›î©‹
/(
T
);

126 c⁄° 
	gQu©
<
	gT
>& 
	g›î©‹
+(c⁄° 
Qu©
<
T
>&);

127 c⁄° 
	gQu©
<
	gT
>& 
	g›î©‹
-(c⁄° 
Qu©
<
T
>&);

128 
	gT
& 
	g›î©‹
[] (
	gödex
);

129 
T
 
	g›î©‹
[] (
	gödex
) const;

131 
	gãm∂©e
 <
˛ass
 
	gS
> 
boﬁ
 
	g›î©‹
 =(c⁄° 
Qu©
<
S
> &
q
) const;

132 
	gãm∂©e
 <
˛ass
 
	gS
> 
boﬁ
 
	g›î©‹
 !(c⁄° 
Qu©
<
S
> &
q
) const;

134 
	gQu©
<
	gT
>& 
övît
();

135 
	gQu©
<
	gT
> 
övî£
() const;

136 
	gQu©
<
	gT
>& 
n‹mÆize
();

137 
	gQu©
<
	gT
> 
n‹mÆized
() const;

138 
T
 
Àngth
() const;

144 
	gQu©
<
	gT
>& 
£tAxisAngÀ
(c⁄° 
Vec3
<
T
>& 
axis
, T 
ødüns
);

145 
	gQu©
<
	gT
>& 
£tRŸ©i⁄
(c⁄° 
Vec3
<
T
>& 
‰omDúe˘i⁄
,

146 c⁄° 
Vec3
<
T
>& 
toDúe˘i⁄
);

148 
T
 
™gÀ
() const;

149 
	gVec3
<
	gT
> 
axis
() const;

151 
	gM©rix33
<
	gT
> 
toM©rix33
() const;

152 
	gM©rix44
<
	gT
> 
toM©rix44
() const;

154 
	gQu©
<
	gT
> 
log
() const;

155 
	gQu©
<
	gT
> 
exp
() const;

163 
	gQu©
<> 
	tQu©f
;

164 
	gQu©
<> 
	tQu©d
;

171 
	gãm∂©e
<
˛ass
 
	gT
>

172 
ölöe
 c⁄° 
	gQu©
<
	gT
>& Qu©<T>::
›î©‹
(c⁄° 
Qu©
<
T
>& 
q
)

174 
r
 = 
q
.r;

175 
	gv
 = 
q
.
v
;

176  *
	gthis
;

179 
	gãm∂©e
<
˛ass
 
	gT
>

180 
ölöe
 c⁄° 
	gQu©
<
	gT
>& Qu©<T>::
›î©‹
*(c⁄° 
Qu©
<
T
>& 
q
)

182 
T
 
πmp
 = 
r
 * 
q
.∏- (
v
 ^ q.v);

183 
	gv
 = 
r
 * 
q
.
v
 + v * q.r + v % q.v;

184 
	gr
 = 
πmp
;

185  *
	gthis
;

188 
	gãm∂©e
<
˛ass
 
	gT
>

189 
ölöe
 c⁄° 
	gQu©
<
	gT
>& Qu©<T>::
›î©‹
*(
T
 
t
)

191 
r
 *
t
;

192 
	gv
 *
t
;

193  *
	gthis
;

196 
	gãm∂©e
<
˛ass
 
	gT
>

197 
ölöe
 c⁄° 
	gQu©
<
	gT
>& Qu©<T>::
›î©‹
/(c⁄° 
Qu©
<
T
>& 
q
)

199 *
this
 = *thi†* 
q
.
övî£
();

200  *
	gthis
;

203 
	gãm∂©e
<
˛ass
 
	gT
>

204 
ölöe
 c⁄° 
	gQu©
<
	gT
>& Qu©<T>::
›î©‹
/(
T
 
t
)

206 
r
 /
t
;

207 
	gv
 /
t
;

208  *
	gthis
;

211 
	gãm∂©e
<
˛ass
 
	gT
>

212 
ölöe
 c⁄° 
	gQu©
<
	gT
>& Qu©<T>::
›î©‹
+(c⁄° 
Qu©
<
T
>& 
q
)

214 
r
 +
q
.r;

215 
	gv
 +
q
.
v
;

216  *
	gthis
;

219 
	gãm∂©e
<
˛ass
 
	gT
>

220 
ölöe
 c⁄° 
	gQu©
<
	gT
>& Qu©<T>::
›î©‹
-(c⁄° 
Qu©
<
T
>& 
q
)

222 
r
 -
q
.r;

223 
	gv
 -
q
.
v
;

224  *
	gthis
;

226 
	gãm∂©e
<
˛ass
 
	gT
>

227 
ölöe
 
	gT
& 
	gQu©
<T>::
›î©‹
[] (
ödex
)

229  
ödex
 ? 
v
[ödex-1] : 
r
;

232 
	gãm∂©e
<
˛ass
 
	gT
>

233 
ölöe
 
T
 
	gQu©
<
	gT
>::
›î©‹
[] (
ödex
) const

235  
ödex
 ? 
v
[ödex-1] : 
r
;

238 
	gãm∂©e
 <
˛ass
 
	gT
>

239 
	gãm∂©e
 <
˛ass
 
	gS
>

240 
ölöe
 
boﬁ


241 
	gQu©
<
	gT
>::
›î©‹
 =(c⁄° 
Qu©
<
S
> &
q
) const

243  
r
 =
q
.∏&& 
v
 == q.v;

246 
	gãm∂©e
 <
˛ass
 
	gT
>

247 
	gãm∂©e
 <
˛ass
 
	gS
>

248 
ölöe
 
boﬁ


249 
	gQu©
<
	gT
>::
›î©‹
 !(c⁄° 
Qu©
<
S
> &
q
) const

251  
r
 !
q
.∏|| 
v
 != q.v;

254 
	gãm∂©e
<
˛ass
 
	gT
>

255 
ölöe
 
T
 
	g›î©‹
^ (c⁄° 
	gQu©
<
	gT
>& 
	gq1
,c⁄° Qu©<T>& 
	gq2
)

257  
	gq1
.
r
 * 
	gq2
.
	gr
 + (q1.
	gv
 ^ q2.v);

260 
	gãm∂©e
 <
˛ass
 
	gT
>

261 
ölöe
 
T
 
	gQu©
<
	gT
>::
	$Àngth
() const

263  
M©h
<
T
>::
	`sqπ
–
r
 *Ñ + (
v
 ^ v) );

264 
	}
}

266 
	gãm∂©e
 <
˛ass
 
	gT
>

267 
ölöe
 
	gQu©
<
	gT
>& Qu©<T>::
	$n‹mÆize
()

269 i‡–
T
 
l
 = 
	`Àngth
(ËË{ 
r
 /l; 
v
 /=Ü; }

270 { 
r
 = 1; 
v
 = 
Vec3
<
T
>(0); }

271  *
this
;

272 
	}
}

274 
	gãm∂©e
 <
˛ass
 
	gT
>

275 
ölöe
 
	gQu©
<
	gT
> Qu©<T>::
	$n‹mÆized
() const

277 i‡–
T
 
l
 = 
	`Àngth
(ËË 
	`Qu©
–
r
 /Ü, 
v
 /Ü );

278  
	`Qu©
();

279 
	}
}

281 
	gãm∂©e
<
˛ass
 
	gT
>

282 
ölöe
 
	gQu©
<
	gT
> Qu©<T>::
	$övî£
() const

288 
T
 
qdŸ
 = *
this
 ^ *this;

289  
	`Qu©
–
r
 / 
qdŸ
, -
v
 / qdot );

290 
	}
}

292 
	gãm∂©e
<
˛ass
 
	gT
>

293 
ölöe
 
	gQu©
<
	gT
>& Qu©<T>::
	$övît
()

295 
T
 
qdŸ
 = (*
this
) ^ (*this);

296 
r
 /
qdŸ
;

297 
v
 = -v / 
qdŸ
;

298  *
this
;

299 
	}
}

301 
	gãm∂©e
<
˛ass
 
	gT
>

302 
	gQu©
<
	gT
>

303 
¶îp
(c⁄° 
Qu©
<
T
> &
q1
,c⁄° Qu©<T> &
q2
, T 
t
)

318 
T
 
	gcosomega
 = 
q1
 ^ 
q2
;

319 i‡(
	gcosomega
 >(
T
) 1.0)

326  
q1
;

329 
T
 
	gsöomega
 = 
M©h
<T>::
sqπ
 (1 - 
cosomega
 * cosomega);

331 
	gQu©
<
	gT
> 
	gªsu…
;

333 i‡(
söomega
 * 
	glimôs
<
	gT
>::
max
() > 1)

335 
T
 
omega
 = 
M©h
<T>::
acos
 (
cosomega
);

336 
T
 
	gs1
 = 
M©h
<T>::
sö
 ((1.0 - 
t
Ë* 
omega
Ë/ 
söomega
;

337 
T
 
	gs2
 = 
M©h
<T>::
sö
 (
t
 * 
omega
Ë/ 
söomega
;

339 
	gªsu…
 = 
s1
 * 
q1
 + 
s2
 * 
q2
;

341 i‡(
	gcosomega
 > 0)

347 
T
 
	gs1
 = 1.0 - 
t
;

348 
T
 
	gs2
 = 
t
;

350 
	gªsu…
 = 
s1
 * 
q1
 + 
s2
 * 
q2
;

358 
	gªsu…
.
	gv
.
	gx
 = - 
q1
.
v
.
y
;

359 
	gªsu…
.
	gv
.
	gy
 = 
q1
.
v
.
x
;

360 
	gªsu…
.
	gv
.
	gz
 = - 
q1
.
r
;

361 
	gªsu…
.
	gr
 = 
q1
.
v
.
z
;

363 
T
 
	gs1
 = 
M©h
<T>::
sö
 ((0.5 - 
t
Ë* 
M_PI
);

364 
T
 
	gs2
 = 
M©h
<T>::
sö
 (
t
 * 
M_PI
);

366 
	gªsu…
 = 
s1
 * 
q1
 + 
s2
 * 
ªsu…
;

369  
	gªsu…
;

372 
	gãm∂©e
<
˛ass
 
	gT
>

373 
	gQu©
<
	gT
> 
•löe
(c⁄° 
Qu©
<
T
> &
q0
, c⁄° Qu©<T> &
q1
,

374 c⁄° 
Qu©
<
T
> &
q2
, c⁄° Qu©<T> &
q3
,

375 
T
 
t
)

398 
	gQu©
<
	gT
> 
	gqa
 = 
öãrmedüã
 (
q0
, 
q1
, 
q2
);

399 
	gQu©
<
	gT
> 
	gqb
 = 
öãrmedüã
 (
q1
, 
q2
, 
q3
);

400 
	gQu©
<
	gT
> 
	gªsu…
 = 
squad
(
q1
, 
qa
, 
qb
, 
q2
, 
t
);

402  
	gªsu…
;

405 
	gãm∂©e
<
˛ass
 
	gT
>

406 
	gQu©
<
	gT
> 
squad
(c⁄° 
Qu©
<
T
> &
q1
, c⁄° Qu©<T> &
qa
,

407 c⁄° 
Qu©
<
T
> &
qb
, c⁄° Qu©<T> &
q2
,

408 
T
 
t
)

418 
	gQu©
<
	gT
> 
	gr1
 = 
¶îp
(
q1
, 
q2
, 
t
);

419 
	gQu©
<
	gT
> 
	gr2
 = 
¶îp
(
qa
, 
qb
, 
t
);

420 
	gQu©
<
	gT
> 
	gªsu…
 = 
¶îp
(
r1
, 
r2
, 2*
t
*(1-t));

422  
	gªsu…
;

425 
	gãm∂©e
<
˛ass
 
	gT
>

426 
	gQu©
<
	gT
> 
öãrmedüã
(c⁄° 
Qu©
<
T
> &
q0
, c⁄° Qu©<T> &
q1
, c⁄° Qu©<T> &
q2
)

434 
	gQu©
<
	gT
> 
	gq1öv
 = 
q1
.
övî£
();

435 
	gQu©
<
	gT
> 
	gc1
 = 
q1öv
*
q2
;

436 
	gQu©
<
	gT
> 
	gc2
 = 
q1öv
*
q0
;

437 
	gQu©
<
	gT
> 
	gc3
 = (
T
Ë(-0.25Ë* (
c2
.
log
(Ë+ 
c1
.log());

438 
	gQu©
<
	gT
> 
	gqa
 = 
q1
 * 
c3
.
exp
();

439 
	gqa
.
n‹mÆize
();

440  
	gqa
;

443 
	gãm∂©e
 <
˛ass
 
	gT
>

444 
ölöe
 
	gQu©
<
	gT
> Qu©<T>::
	$log
() const

451 
T
 
thëa
 = 
M©h
<T>::
	`acos
 (
°d
::
	`mö
 (
r
, (T) 1.0));

452 i‡(
thëa
 == 0)

453  
Qu©
<
T
> (0, 
v
);

455 
T
 
söthëa
 = 
M©h
<T>::
	`sö
 (
thëa
);

457 
T
 
k
;

458 i‡(
	`abs
 (
söthëa
Ë< 1 &&áb†(
thëa
Ë>
limôs
<
T
>::
	`max
() *ábs (sintheta))

459 
k
 = 0;

461 
k
 = 
thëa
 / 
söthëa
;

463  
Qu©
<
T
> ((TË0, 
v
.
x
 * 
k
, v.
y
 * k, v.
z
 * k);

464 
	}
}

466 
	gãm∂©e
 <
˛ass
 
	gT
>

467 
ölöe
 
	gQu©
<
	gT
> Qu©<T>::
	$exp
() const

475 
T
 
thëa
 = 
v
.
	`Àngth
();

476 
T
 
söthëa
 = 
M©h
<T>::
	`sö
 (
thëa
);

478 
T
 
k
;

479 i‡(
	`abs
 (
thëa
Ë< 1 &&áb†(
söthëa
Ë>
limôs
<
T
>::
	`max
() *ábs (theta))

480 
k
 = 0;

482 
k
 = 
söthëa
 / 
thëa
;

484 
T
 
co°hëa
 = 
M©h
<T>::
	`cos
 (
thëa
);

486  
Qu©
<
T
> (
co°hëa
, 
v
.
x
 * 
k
, v.
y
 * k, v.
z
 * k);

487 
	}
}

489 
	gãm∂©e
 <
˛ass
 
	gT
>

490 
ölöe
 
T
 
	gQu©
<
	gT
>::
	$™gÀ
() const

492  2.0*
M©h
<
T
>::
	`acos
(
r
);

493 
	}
}

495 
	gãm∂©e
 <
˛ass
 
	gT
>

496 
ölöe
 
	gVec3
<
	gT
> 
	gQu©
<T>::
	$axis
() const

498  
v
.
	`n‹mÆized
();

499 
	}
}

501 
	gãm∂©e
 <
˛ass
 
	gT
>

502 
ölöe
 
	gQu©
<
	gT
>& Qu©<T>::
£tAxisAngÀ
(c⁄° 
Vec3
<
T
>& 
axis
, T 
ødüns
)

504 
	gr
 = 
M©h
<
T
>::
cos
(
ødüns
/2);

505 
	gv
 = 
axis
.
n‹mÆized
(Ë* 
M©h
<
T
>::
sö
(
ødüns
/2);

506  *
	gthis
;

510 
	gãm∂©e
 <
˛ass
 
	gT
>

511 
	gQu©
<
	gT
>&

512 
	gQu©
<
	gT
>::
£tRŸ©i⁄
(c⁄° 
Vec3
<
T
>& 
‰om
, c⁄° Vec3<T>& 
to
)

518 
T
 
	gco°
 = 
‰om
.
dŸ
(
to
Ë/ 
M©h
<T>::
sqπ
(from.dot(from) *Åo.dot(to));

521 i‡(
	gco°
 > 0.99999)

527 
	gr
 = 1.0;

528 
	gv
 = 
Vec3
<
T
>(0);

530 i‡(
	gco°
 < -0.99999)

537 
	gVec3
<
	gT
> 
	g‰m
 = 
‰om
.
n‹mÆized
();

538 
	gv
 = 
‰m
.
¸oss
(
Vec3
<
T
>(1, 0, 0));

539 i‡(
	gv
.
Àngth
() < 0.00001)

540 
	gv
 = 
‰m
.
¸oss
(
Vec3
<
T
>(0, 1, 0));

541 
	gr
 = 0;

542 
	gv
.
n‹mÆize
();

552 
	gr
 = 
M©h
<
T
>::
sqπ
(0.5 * (1.0 + 
co°
));

560 
	gv
 = 
‰om
.
¸oss
(
to
);

561 
	gv
 *
M©h
<
T
>::
sqπ
((0.5 * (1.0 - 
co°
))/(
v
.
dŸ
(v)));

564  *
	gthis
;

567 
	gãm∂©e
<
˛ass
 
	gT
>

568 
	gM©rix33
<
	gT
> 
	gQu©
<T>::
	$toM©rix33
() const

570  
M©rix33
<
T
>(1. - 2.0 * (
v
.
y
 * v.y + v.
z
 * v.z),

571 2.0 * (
v
.
x
 * v.
y
 + v.
z
 * 
r
),

572 2.0 * (
v
.
z
 * v.
x
 - v.
y
 * 
r
),

574 2.0 * (
v
.
x
 * v.
y
 - v.
z
 * 
r
),

575 1. - 2.0 * (
v
.
z
 * v.z + v.
x
 * v.x),

576 2.0 * (
v
.
y
 * v.
z
 + v.
x
 * 
r
),

578 2.0 * (
v
.
z
 * v.
x
 + v.
y
 * 
r
),

579 2.0 * (
v
.
y
 * v.
z
 - v.
x
 * 
r
),

580 1. - 2.0 * (
v
.
y
 * v.y + v.
x
 * v.x));

581 
	}
}

583 
	gãm∂©e
<
˛ass
 
	gT
>

584 
	gM©rix44
<
	gT
> 
	gQu©
<T>::
	$toM©rix44
() const

586  
M©rix44
<
T
>(1. - 2.0 * (
v
.
y
 * v.y + v.
z
 * v.z),

587 2.0 * (
v
.
x
 * v.
y
 + v.
z
 * 
r
),

588 2.0 * (
v
.
z
 * v.
x
 - v.
y
 * 
r
),

590 2.0 * (
v
.
x
 * v.
y
 - v.
z
 * 
r
),

591 1. - 2.0 * (
v
.
z
 * v.z + v.
x
 * v.x),

592 2.0 * (
v
.
y
 * v.
z
 + v.
x
 * 
r
),

594 2.0 * (
v
.
z
 * v.
x
 + v.
y
 * 
r
),

595 2.0 * (
v
.
y
 * v.
z
 - v.
x
 * 
r
),

596 1. - 2.0 * (
v
.
y
 * v.y + v.
x
 * v.x),

602 
	}
}

605 
	gãm∂©e
<
˛ass
 
	gT
>

606 
ölöe
 
	gM©rix33
<
	gT
> 
	g›î©‹
* (c⁄° M©rix33<T> &
	gM
, c⁄° 
	gQu©
<T> &
	gq
)

608  
M
 * 
	gq
.
toM©rix33
();

611 
	gãm∂©e
<
˛ass
 
	gT
>

612 
ölöe
 
	gM©rix33
<
	gT
> 
	g›î©‹
* (c⁄° 
	gQu©
<T> &
	gq
, c⁄° M©rix33<T> &
	gM
)

614  
	gq
.
toM©rix33
(Ë* 
	gM
;

617 
	gãm∂©e
<
˛ass
 
	gT
>

618 
	g°d
::
o°ªam
& 
›î©‹
<< (
°d
::o°ªam &
o
, c⁄° 
	gQu©
<
	gT
> &
	gq
)

620  
	go
 << "(" << 
	gq
.
	gr


621 << " " << 
	gq
.
	gv
.
	gx


622 << " " << 
	gq
.
	gv
.
	gy


623 << " " << 
	gq
.
	gv
.
	gz


628 
	gãm∂©e
<
˛ass
 
	gT
>

629 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
* (c⁄° Qu©<T>& 
	gq1
, c⁄° Qu©<T>& 
	gq2
)

632  
	gQu©
<
	gT
>–
	gq1
.
r
 * 
	gq2
.
	gr
 - (q1.
	gv
 ^ q2.v),

633 
	gq1
.
r
 * 
	gq2
.
	gv
 + q1.
v
 * q2.
	gr
 + q1.v % q2.v );

636 
	gãm∂©e
<
˛ass
 
	gT
>

637 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
/ (c⁄° Qu©<T>& 
	gq1
, c⁄° Qu©<T>& 
	gq2
)

639  
q1
 * 
	gq2
.
övî£
();

642 
	gãm∂©e
<
˛ass
 
	gT
>

643 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
/ (c⁄° Qu©<T>& 
	gq
,
T
 
	gt
)

645  
	gQu©
<
	gT
>(
	gq
.
	gr
/
	gt
,q.
	gv
/t);

648 
	gãm∂©e
<
˛ass
 
	gT
>

649 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
* (c⁄° Qu©<T>& 
	gq
,
T
 
	gt
)

651  
	gQu©
<
	gT
>(
	gq
.
r
*
	gt
,q.
v
*t);

654 
	gãm∂©e
<
˛ass
 
	gT
>

655 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
* (
T
 
	gt
, c⁄° Qu©<T>& 
	gq
)

657  
	gQu©
<
	gT
>(
	gq
.
r
*
	gt
,q.
v
*t);

660 
	gãm∂©e
<
˛ass
 
	gT
>

661 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
+ (c⁄° Qu©<T>& 
	gq1
, c⁄° Qu©<T>& 
	gq2
)

663  
	gQu©
<
	gT
>–
	gq1
.
	gr
 + 
	gq2
.r, q1.
	gv
 + q2.v );

666 
	gãm∂©e
<
˛ass
 
	gT
>

667 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
- (c⁄° Qu©<T>& 
	gq1
, c⁄° Qu©<T>& 
	gq2
)

669  
	gQu©
<
	gT
>–
	gq1
.
	gr
 - 
	gq2
.r, q1.
	gv
 - q2.v );

672 
	gãm∂©e
<
˛ass
 
	gT
>

673 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
~ (c⁄° Qu©<T>& 
	gq
)

675  
	gQu©
<
	gT
>–
	gq
.
	gr
, -q.
	gv
 );

678 
	gãm∂©e
<
˛ass
 
	gT
>

679 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
- (c⁄° Qu©<T>& 
	gq
)

681  
	gQu©
<
	gT
>–-
	gq
.
	gr
, -q.
	gv
 );

684 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


685 #¥agm®
w¨nög
(:4244)

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h

36 #i‚de‡
INCLUDED_IMATHRANDOM_H


37 
	#INCLUDED_IMATHRANDOM_H


	)

72 
	~<°dlib.h
>

73 
	~<m©h.h
>

75 
«me•a˚
 
	gIm©h
 {

84 ˛as†
	cR™d32


86 
	gpublic
:

92 
R™d32
 (
£ed
 = 0);

99 
öô
 (
£ed
);

106 
boﬁ
 
√xtb
 ();

113 
√xti
 ();

120 
√xtf
 ();

127 
√xtf
 (
øngeMö
, 
øngeMax
);

130 
	g¥iv©e
:

132 
√xt
 ();

134 
	g_°©e
;

144 ˛as†
	cR™d48


146 
	gpublic
:

152 
R™d48
 (
£ed
 = 0);

159 
öô
 (
£ed
);

166 
boﬁ
 
√xtb
 ();

173 
√xti
 ();

180 
√xtf
 ();

187 
√xtf
 (
øngeMö
, 
øngeMax
);

190 
	g¥iv©e
:

192 
_°©e
[3];

194 #i‡
deföed
 ( 
_WIN32
 ) || deföed ( 
_WIN64
 ) || deföed ( 
__MWERKS__
 )

195 
shi·Sèã
();

205 
	gãm∂©e
 <
˛ass
 
	gVec
, cœs†
	gR™d
>

206 
Vec


207 
sﬁidSphîeR™d
 (
R™d
 &
ønd
);

215 
	gãm∂©e
 <
˛ass
 
	gVec
, cœs†
	gR™d
>

216 
Vec


217 
hﬁlowSphîeR™d
 (
R™d
 &
ønd
);

225 
	gãm∂©e
 <
˛ass
 
	gR™d
>

227 
gaussR™d
 (
R™d
 &
ønd
);

236 
	gãm∂©e
 <
˛ass
 
	gVec
, cœs†
	gR™d
>

237 
Vec


238 
gaussSphîeR™d
 (
R™d
 &
ønd
);

246 
ölöe
 

247 
	gR™d32
::
	$öô
 (
£ed
)

249 
_°©e
 = (
£ed
 * 0xa5a573a5L) ^ 0x5a5a5a5aL;

250 
	}
}

253 
ölöe


254 
	gR™d32
::
	$R™d32
 (
£ed
)

256 
	`öô
 (
£ed
);

257 
	}
}

260 
ölöe
 

261 
	gR™d32
::
	$√xt
 ()

263 
_°©e
 = 1664525L * _state + 1013904223L;

264 
	}
}

267 
ölöe
 
boﬁ


268 
	gR™d32
::
	$√xtb
 ()

270 
	`√xt
 ();

272  !!(
_°©e
 & 2147483648UL);

273 
	}
}

276 
ölöe
 

277 
	gR™d32
::
	$√xti
 ()

279 
	`√xt
 ();

280  
_°©e
 & 0xffffffff;

281 
	}
}

284 
ölöe
 

285 
	gR™d32
::
	$√xtf
 ()

287 
	`√xt
 ();

288  ((Ë(
_°©e
 & 0xffffff)) * (() (1.0F / 0x1000000));

289 
	}
}

292 
ölöe
 

293 
	gR™d32
::
	$√xtf
 (
øngeMö
, 
øngeMax
)

295  
øngeMö
 + 
	`√xtf
(Ë* (
øngeMax
 -ÑangeMin);

296 
	}
}

299 
ölöe
 

300 
	gR™d48
::
	$öô
 (
£ed
)

302 
£ed
 = (seed * 0xa5a573a5L) ^ 0x5a5a5a5aL;

304 
_°©e
[0] = (Ë(
£ed
);

305 
_°©e
[1] = (Ë(
£ed
 >> 16);

306 
_°©e
[2] = (Ë(
£ed
);

307 
	}
}

310 
ölöe


311 
	gR™d48
::
	$R™d48
 (
£ed
)

313 
	`öô
 (
£ed
);

314 
	}
}

317 #i‡
deföed
 ( 
_WIN32
 ) || deföed ( 
_WIN64
 ) || 
	$deföed
 ( 
__MWERKS__
 )

319 
ölöe
 

320 
R™d48
::
	$shi·Sèã
()

322 
accu
;

323 
ãmp
[2];

325 
accu
 = 0xe66dUL * ( )
_°©e
[0] + 0x000bUL;

327 
ãmp
[0] = ( )
accu
;

328 
accu
 >>= ( ) * 8;

330 
accu
 +0xe66dUL * ( )
_°©e
[1] +

331 0xdìcUL * ( )
_°©e
[0];

333 
ãmp
[1] = ( )
accu
;

334 
accu
 >>= ( ) * 8;

336 
accu
 +0xe66dUL * 
_°©e
[2] +

337 0xdìcUL * 
_°©e
[1] +

338 0x0005UL * 
_°©e
[0];

340 
_°©e
[0] = 
ãmp
[0];

341 
_°©e
[1] = 
ãmp
[1];

342 
_°©e
[2] = ( )
accu
;

343 
	}
}

347 
ölöe
 
boﬁ


348 
	gR™d48
::
	$√xtb
 ()

350 #i‡
	`deföed
 ( 
_WIN32
 ) || deföed ( 
_WIN64
 ) || deföed ( 
__MWERKS__
 )

351 
	`shi·Sèã
();

352  ( ( –
_°©e
[2] ) << 15 ) + ( ( _state[1] ) >> 1 ) ) & 0x1;

354  
	`ƒ™d48
 (
_°©e
) & 1;

356 
	}
}

359 
ölöe
 

360 
	gR™d48
::
	$√xti
 ()

362 #i‡
	`deföed
 ( 
_WIN32
 ) || deföed ( 
_WIN64
 ) || deföed ( 
__MWERKS__
 )

363 
	`shi·Sèã
();

364  ( –
_°©e
[2] ) << 15 ) + ( ( _state[1] ) >> 1 );

366  
	`ƒ™d48
 (
_°©e
);

368 
	}
}

371 
ölöe
 

372 
	gR™d48
::
	$√xtf
 ()

374 #i‡
	`deföed
 ( 
_WIN32
 ) || deföed ( 
_WIN64
 ) || deföed ( 
__MWERKS__
 )

375 
	`shi·Sèã
();

376  
	`ldexp
––
_°©e
[0] ), -48 ) +

377 
	`ldexp
––
_°©e
[1] ), -32 ) +

378 
	`ldexp
––
_°©e
[2] ), -16 );

380  
	`î™d48
 (
_°©e
);

382 
	}
}

385 
ölöe
 

386 
	gR™d48
::
	$√xtf
 (
øngeMö
, 
øngeMax
)

388  
øngeMö
 + 
	`√xtf
(Ë* (
øngeMax
 -ÑangeMin);

389 
	}
}

392 
	gãm∂©e
 <
˛ass
 
	gVec
, cœs†
	gR™d
>

393 
Vec


394 
	$sﬁidSphîeR™d
 (
R™d
 &
ønd
)

396 
Vec
 
v
;

400 
i
 = 0; i < 
Vec
::
	`dimísi⁄s
(); i++)

401 
v
[
i
] = (
ty≥«me
 
Vec
::
Ba£Ty≥
Ë
ønd
.
	`√xtf
 (-1, 1);

403 
v
.
	`Àngth2
() > 1);

405  
v
;

406 
	}
}

409 
	gãm∂©e
 <
˛ass
 
	gVec
, cœs†
	gR™d
>

410 
Vec


411 
	$hﬁlowSphîeR™d
 (
R™d
 &
ønd
)

413 
Vec
 
v
;

414 
ty≥«me
 
Vec
::
Ba£Ty≥
 
Àngth
;

418 
i
 = 0; i < 
Vec
::
	`dimísi⁄s
(); i++)

419 
v
[
i
] = (
ty≥«me
 
Vec
::
Ba£Ty≥
Ë
ønd
.
	`√xtf
 (-1, 1);

421 
Àngth
 = 
v
.
	`Àngth
();

423 
Àngth
 > 1 ||Üength == 0);

425  
v
 / 
Àngth
;

426 
	}
}

429 
	gãm∂©e
 <
˛ass
 
	gR™d
>

431 
	$gaussR™d
 (
R™d
 &
ønd
)

433 
x
;

434 
y
;

435 
Àngth2
;

439 
x
 = (
ønd
.
	`√xtf
 (-1, 1));

440 
y
 = (
ønd
.
	`√xtf
 (-1, 1));

441 
Àngth2
 = 
x
 * x + 
y
 * y;

443 
Àngth2
 >= 1 ||Üength2 == 0);

445  
x
 * 
	`sqπ
 (-2 * 
	`log
 (
Àngth2
) /Üength2);

446 
	}
}

449 
	gãm∂©e
 <
˛ass
 
	gVec
, cœs†
	gR™d
>

450 
Vec


451 
	$gaussSphîeR™d
 (
R™d
 &
ønd
)

453  
hﬁlowSphîeR™d
 <
Vec
> (
ønd
Ë* 
	`gaussR™d
 (rand);

454 
	}
}

456 
dønd48
();

457 
Ã™d48
();

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRoots.h

37 #i‚de‡
INCLUDED_IMATHROOTS_H


38 
	#INCLUDED_IMATHROOTS_H


	)

46 
	~<com∂ex
>

48 
«me•a˚
 
	gIm©h
 {

83 
	gãm∂©e
 <
˛ass
 
	gT
> 
sﬁveLöór
 (
T
 
a
, T 
b
, T &
x
);

84 
	gãm∂©e
 <
˛ass
 
	gT
> 
sﬁveQuadøtic
 (
T
 
a
, T 
b
, T 
c
, T 
x
[2]);

85 
	gãm∂©e
 <
˛ass
 
	gT
> 
sﬁveN‹mÆizedCubic
 (
T
 
r
, T 
s
, T 
t
, T 
x
[3]);

86 
	gãm∂©e
 <
˛ass
 
	gT
> 
sﬁveCubic
 (
T
 
a
, T 
b
, T 
c
, T 
d
, T 
x
[3]);

93 
	gãm∂©e
 <
˛ass
 
	gT
>

95 
sﬁveLöór
 (
T
 
a
, T 
b
, T &
x
)

97 i‡(
	ga
 != 0)

99 
x
 = -
b
 / 
a
;

102 i‡(
	gb
 != 0)

113 
	gãm∂©e
 <
˛ass
 
	gT
>

115 
sﬁveQuadøtic
 (
T
 
a
, T 
b
, T 
c
, T 
x
[2])

117 i‡(
	ga
 == 0)

119  
sﬁveLöór
 (
b
, 
c
, 
x
[0]);

123 
T
 
	gD
 = 
b
 * b - 4 * 
a
 * 
c
;

125 i‡(
	gD
 > 0)

127 
T
 
	gs
 = 
sqπ
 (
D
);

129 
	gx
[0] = (-
b
 + 
s
Ë/ (2 * 
a
);

130 
	gx
[1] = (-
b
 - 
s
Ë/ (2 * 
a
);

133 i‡(
	gD
 == 0)

135 
x
[0] = -
b
 / (2 * 
a
);

146 
	gãm∂©e
 <
˛ass
 
	gT
>

148 
sﬁveN‹mÆizedCubic
 (
T
 
r
, T 
s
, T 
t
, T 
x
[3])

150 
T
 
	gp
 = (3 * 
s
 - 
r
 *Ñ) / 3;

151 
T
 
	gq
 = 2 * 
r
 *Ñ *Ñ / 27 -Ñ * 
s
 / 3 + 
t
;

152 
T
 
	gp3
 = 
p
 / 3;

153 
T
 
	gq2
 = 
q
 / 2;

154 
T
 
	gD
 = 
p3
 *Ö3 *Ö3 + 
q2
 * q2;

156 i‡(
	gD
 =0 && 
p3
 == 0)

158 
x
[0] = -
r
 / 3;

159 
	gx
[1] = -
r
 / 3;

160 
	gx
[2] = -
r
 / 3;

164 
	g°d
::
com∂ex
<
T
> 
u
 = 
°d
::
pow
 (-
q
 / 2 + std::
sqπ
 (°d::com∂ex<T> (
D
)),

165 
T
 (1) / T (3));

167 
	g°d
::
com∂ex
<
T
> 
v
 = -
p
 / (T (3Ë* 
u
);

169 c⁄° 
T
 
	gsqπ3
 = T (1.73205080756887729352744634150587);

171 
	g°d
::
com∂ex
<
T
> 
y0
 (
u
 + 
v
);

173 
	g°d
::
com∂ex
<
T
> 
y1
 (-(
u
 + 
v
) / T (2) +

174 (
u
 - 
v
Ë/ 
T
 (2Ë* 
°d
::
com∂ex
<T> (0, 
sqπ3
));

176 
	g°d
::
com∂ex
<
T
> 
y2
 (-(
u
 + 
v
) / T (2) -

177 (
u
 - 
v
Ë/ 
T
 (2Ë* 
°d
::
com∂ex
<T> (0, 
sqπ3
));

179 i‡(
	gD
 > 0)

181 
	gx
[0] = 
y0
.
ªÆ
(Ë- 
r
 / 3;

184 i‡(
	gD
 == 0)

186 
x
[0] = 
y0
.
ªÆ
(Ë- 
r
 / 3;

187 
	gx
[1] = 
y1
.
ªÆ
(Ë- 
r
 / 3;

192 
	gx
[0] = 
y0
.
ªÆ
(Ë- 
r
 / 3;

193 
	gx
[1] = 
y1
.
ªÆ
(Ë- 
r
 / 3;

194 
	gx
[2] = 
y2
.
ªÆ
(Ë- 
r
 / 3;

200 
	gãm∂©e
 <
˛ass
 
	gT
>

202 
sﬁveCubic
 (
T
 
a
, T 
b
, T 
c
, T 
d
, T 
x
[3])

204 i‡(
	ga
 == 0)

206  
sﬁveQuadøtic
 (
b
, 
c
, 
d
, 
x
);

210  
sﬁveN‹mÆizedCubic
 (
b
 / 
a
, 
c
 /á, 
d
 /á, 
x
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h

37 #i‚de‡
INCLUDED_IMATHSHEAR_H


38 
	#INCLUDED_IMATHSHEAR_H


	)

46 
	~"Im©hExc.h
"

47 
	~"Im©hLimôs.h
"

48 
	~"Im©hM©h.h
"

49 
	~"Im©hVec.h
"

51 
	~<io°ªam
>

54 
«me•a˚
 
	gIm©h
 {

59 
	gãm∂©e
 <
˛ass
 
	gT
> cœs†
	cShór6


61 
	gpublic
:

67 
T
 
xy
, 
	gxz
, 
	gyz
, 
	gyx
, 
	gzx
, 
	gzy
;

69 
	gT
 & 
	g›î©‹
 [] (
	gi
);

70 c⁄° 
	gT
 & 
	g›î©‹
 [] (
	gi
) const;

77 
Shór6
 ();

78 
Shór6
 (
T
 
XY
, T 
XZ
, T 
YZ
);

79 
Shór6
 (c⁄° 
Vec3
<
T
> &
v
);

80 
	gãm∂©e
 <
˛ass
 
	gS
>

81 
Shór6
 (c⁄° 
Vec3
<
S
> &
v
);

82 
Shór6
 (
T
 
XY
, T 
XZ
, T 
YZ
,

83 
T
 
YX
, T 
ZX
, T 
ZY
);

90 
Shór6
 (c⁄° Shór6 &
h
);

91 
	gãm∂©e
 <
˛ass
 
	gS
> 
Shór6
 (c⁄° Shór6<
S
> &
h
);

93 c⁄° 
	gShór6
 & 
	g›î©‹
 = (c⁄° 
Shór6
 &
h
);

94 
	gãm∂©e
 <
˛ass
 
	gS
>

95 c⁄° 
	gShór6
 & 
	g›î©‹
 = (c⁄° 
Vec3
<
S
> &
v
);

102 
	gãm∂©e
 <
˛ass
 
	gS
>

103 
£tVÆue
 (
S
 
XY
, S 
XZ
, S 
YZ
, S 
YX
, S 
ZX
, S 
ZY
);

105 
	gãm∂©e
 <
˛ass
 
	gS
>

106 
£tVÆue
 (c⁄° 
Shór6
<
S
> &
h
);

108 
	gãm∂©e
 <
˛ass
 
	gS
>

109 
gëVÆue
 (
S
 &
XY
, S &
XZ
, S &
YZ
,

110 
S
 &
YX
, S &
ZX
, S &
ZY
) const;

112 
	gãm∂©e
 <
˛ass
 
	gS
>

113 
gëVÆue
 (
Shór6
<
S
> &
h
) const;

115 
T
 * 
gëVÆue
();

116 c⁄° 
T
 * 
gëVÆue
() const;

123 
	gãm∂©e
 <
˛ass
 
	gS
>

124 
boﬁ
 
	g›î©‹
 =(c⁄° 
Shór6
<
S
> &
h
) const;

126 
	gãm∂©e
 <
˛ass
 
	gS
>

127 
boﬁ
 
	g›î©‹
 !(c⁄° 
Shór6
<
S
> &
h
) const;

147 
boﬁ
 
equÆWôhAbsEº‹
 (c⁄° 
Shór6
<
T
> &
h
, T 
e
) const;

148 
boﬁ
 
equÆWôhRñEº‹
 (c⁄° 
Shór6
<
T
> &
h
, T 
e
) const;

155 c⁄° 
	gShór6
 & 
	g›î©‹
 +(c⁄° 
Shór6
 &
h
);

156 
Shór6
 
	g›î©‹
 + (c⁄° 
	gShór6
 &
	gh
) const;

163 c⁄° 
	gShór6
 & 
	g›î©‹
 -(c⁄° 
Shór6
 &
h
);

164 
Shór6
 
	g›î©‹
 - (c⁄° 
	gShór6
 &
	gh
) const;

171 
Shór6
 
	g›î©‹
 - () const;

172 c⁄° 
	gShór6
 & 
√g©e
 ();

179 c⁄° 
	gShór6
 & 
	g›î©‹
 *(c⁄° 
Shór6
 &
h
);

180 c⁄° 
	gShór6
 & 
	g›î©‹
 *(
T
 
a
);

181 
Shór6
 
	g›î©‹
 * (c⁄° 
	gShór6
 &
	gh
) const;

182 
Shór6
 
	g›î©‹
 * (
T
 
	ga
) const;

189 c⁄° 
	gShór6
 & 
	g›î©‹
 /(c⁄° 
Shór6
 &
h
);

190 c⁄° 
	gShór6
 & 
	g›î©‹
 /(
T
 
a
);

191 
Shór6
 
	g›î©‹
 / (c⁄° 
	gShór6
 &
	gh
) const;

192 
Shór6
 
	g›î©‹
 / (
T
 
	ga
) const;

199 
dimísi⁄s
() { 6;}

206 
T
 
ba£Ty≥Mö
(Ë{ 
	glimôs
<
	gT
>::
mö
();}

207 
T
 
ba£Ty≥Max
(Ë{ 
	glimôs
<
	gT
>::
max
();}

208 
T
 
ba£Ty≥SmÆÀ°
(Ë{ 
	glimôs
<
	gT
>::
smÆÀ°
();}

209 
T
 
ba£Ty≥Epsû⁄
(Ë{ 
	glimôs
<
	gT
>::
ïsû⁄
();}

218 
T
 
	tBa£Ty≥
;

226 
	gãm∂©e
 <
˛ass
 
	gT
>

227 
	g°d
::
o°ªam
 & 
›î©‹
 << (
°d
::o°ªam &
s
, c⁄° 
	gShór6
<
	gT
> &
	gh
);

234 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
> 
	gShór6
<T> 
	g›î©‹
 * (
S
 
	ga
, c⁄° Shór6<T> &
	gh
);

241 
	gVec3
 <> 
	tShór3f
;

242 
	gVec3
 <> 
	tShór3d
;

243 
	gShór6
 <> 
	tShór6f
;

244 
	gShór6
 <> 
	tShór6d
;

253 
	gãm∂©e
 <
˛ass
 
	gT
>

254 
ölöe
 
	gT
 &

255 
	gShór6
<
	gT
>::
›î©‹
 [] (
i
)

257  (&
xy
)[
i
];

260 
	gãm∂©e
 <
˛ass
 
	gT
>

261 
ölöe
 c⁄° 
	gT
 &

262 
	gShór6
<
	gT
>::
›î©‹
 [] (
i
) const

264  (&
xy
)[
i
];

267 
	gãm∂©e
 <
˛ass
 
	gT
>

268 
ölöe


269 
	gShór6
<
	gT
>::
	$Shór6
 ()

271 
xy
 = 
xz
 = 
yz
 = 
yx
 = 
zx
 = 
zy
 = 0;

272 
	}
}

274 
	gãm∂©e
 <
˛ass
 
	gT
>

275 
ölöe


276 
	gShór6
<
	gT
>::
	$Shór6
 (
T
 
XY
, T 
XZ
, T 
YZ
)

278 
xy
 = 
XY
;

279 
xz
 = 
XZ
;

280 
yz
 = 
YZ
;

281 
yx
 = 0;

282 
zx
 = 0;

283 
zy
 = 0;

284 
	}
}

286 
	gãm∂©e
 <
˛ass
 
	gT
>

287 
ölöe


288 
	gShór6
<
	gT
>::
Shór6
 (c⁄° 
Vec3
<
T
> &
v
)

290 
xy
 = 
v
.
x
;

291 
	gxz
 = 
v
.
y
;

292 
	gyz
 = 
v
.
z
;

293 
	gyx
 = 0;

294 
	gzx
 = 0;

295 
	gzy
 = 0;

298 
	gãm∂©e
 <
˛ass
 
	gT
>

299 
	gãm∂©e
 <
˛ass
 
	gS
>

300 
ölöe


301 
	gShór6
<
	gT
>::
Shór6
 (c⁄° 
Vec3
<
S
> &
v
)

303 
xy
 = 
T
 (
v
.
x
);

304 
	gxz
 = 
T
 (
v
.
y
);

305 
	gyz
 = 
T
 (
v
.
z
);

306 
	gyx
 = 0;

307 
	gzx
 = 0;

308 
	gzy
 = 0;

311 
	gãm∂©e
 <
˛ass
 
	gT
>

312 
ölöe


313 
	gShór6
<
	gT
>::
	$Shór6
 (
T
 
XY
, T 
XZ
, T 
YZ
, T 
YX
, T 
ZX
, T 
ZY
)

315 
xy
 = 
XY
;

316 
xz
 = 
XZ
;

317 
yz
 = 
YZ
;

318 
yx
 = 
YX
;

319 
zx
 = 
ZX
;

320 
zy
 = 
ZY
;

321 
	}
}

323 
	gãm∂©e
 <
˛ass
 
	gT
>

324 
ölöe


325 
	gShór6
<
	gT
>::
	$Shór6
 (c⁄° 
Shór6
 &
h
)

327 
xy
 = 
h
.xy;

328 
xz
 = 
h
.xz;

329 
yz
 = 
h
.yz;

330 
yx
 = 
h
.yx;

331 
zx
 = 
h
.zx;

332 
zy
 = 
h
.zy;

333 
	}
}

335 
	gãm∂©e
 <
˛ass
 
	gT
>

336 
	gãm∂©e
 <
˛ass
 
	gS
>

337 
ölöe


338 
	gShór6
<
	gT
>::
Shór6
 (c⁄° Shór6<
S
> &
h
)

340 
xy
 = 
T
 (
h
.xy);

341 
	gxz
 = 
T
 (
h
.
xz
);

342 
	gyz
 = 
T
 (
h
.
yz
);

343 
	gyx
 = 
T
 (
h
.
yx
);

344 
	gzx
 = 
T
 (
h
.
zx
);

345 
	gzy
 = 
T
 (
h
.
zy
);

348 
	gãm∂©e
 <
˛ass
 
	gT
>

349 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

350 
	gShór6
<
	gT
>::
›î©‹
 = (c⁄° 
Shór6
 &
h
)

352 
xy
 = 
h
.xy;

353 
	gxz
 = 
h
.
xz
;

354 
	gyz
 = 
h
.
yz
;

355 
	gyx
 = 
h
.
yx
;

356 
	gzx
 = 
h
.
zx
;

357 
	gzy
 = 
h
.
zy
;

358  *
	gthis
;

361 
	gãm∂©e
 <
˛ass
 
	gT
>

362 
	gãm∂©e
 <
˛ass
 
	gS
>

363 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

364 
	gShór6
<
	gT
>::
›î©‹
 = (c⁄° 
Vec3
<
S
> &
v
)

366 
xy
 = 
T
 (
v
.
x
);

367 
	gxz
 = 
T
 (
v
.
y
);

368 
	gyz
 = 
T
 (
v
.
z
);

369 
	gyx
 = 0;

370 
	gzx
 = 0;

371 
	gzy
 = 0;

372  *
	gthis
;

375 
	gãm∂©e
 <
˛ass
 
	gT
>

376 
	gãm∂©e
 <
˛ass
 
	gS
>

377 
ölöe
 

378 
	gShór6
<
	gT
>::
	$£tVÆue
 (
S
 
XY
, S 
XZ
, S 
YZ
, S 
YX
, S 
ZX
, S 
ZY
)

380 
xy
 = 
	`T
 (
XY
);

381 
xz
 = 
	`T
 (
XZ
);

382 
yz
 = 
	`T
 (
YZ
);

383 
yx
 = 
	`T
 (
YX
);

384 
zx
 = 
	`T
 (
ZX
);

385 
zy
 = 
	`T
 (
ZY
);

386 
	}
}

388 
	gãm∂©e
 <
˛ass
 
	gT
>

389 
	gãm∂©e
 <
˛ass
 
	gS
>

390 
ölöe
 

391 
	gShór6
<
	gT
>::
£tVÆue
 (c⁄° 
Shór6
<
S
> &
h
)

393 
xy
 = 
T
 (
h
.xy);

394 
	gxz
 = 
T
 (
h
.
xz
);

395 
	gyz
 = 
T
 (
h
.
yz
);

396 
	gyx
 = 
T
 (
h
.
yx
);

397 
	gzx
 = 
T
 (
h
.
zx
);

398 
	gzy
 = 
T
 (
h
.
zy
);

401 
	gãm∂©e
 <
˛ass
 
	gT
>

402 
	gãm∂©e
 <
˛ass
 
	gS
>

403 
ölöe
 

404 
	gShór6
<
	gT
>::
	$gëVÆue
 (
S
 &
XY
, S &
XZ
, S &
YZ
, S &
YX
, S &
ZX
, S &
ZY
) const

406 
XY
 = 
	`S
 (
xy
);

407 
XZ
 = 
	`S
 (
xz
);

408 
YZ
 = 
	`S
 (
yz
);

409 
YX
 = 
	`S
 (
yx
);

410 
ZX
 = 
	`S
 (
zx
);

411 
ZY
 = 
	`S
 (
zy
);

412 
	}
}

414 
	gãm∂©e
 <
˛ass
 
	gT
>

415 
	gãm∂©e
 <
˛ass
 
	gS
>

416 
ölöe
 

417 
	gShór6
<
	gT
>::
gëVÆue
 (
Shór6
<
S
> &
h
) const

419 
h
.
xy
 = 
S
 (xy);

420 
	gh
.
	gxz
 = 
S
 (
xz
);

421 
	gh
.
	gyz
 = 
S
 (
yz
);

422 
	gh
.
	gyx
 = 
S
 (
yx
);

423 
	gh
.
	gzx
 = 
S
 (
zx
);

424 
	gh
.
	gzy
 = 
S
 (
zy
);

427 
	gãm∂©e
 <
˛ass
 
	gT
>

428 
ölöe
 
T
 *

429 
	gShór6
<
	gT
>::
	$gëVÆue
()

431  (
T
 *Ë&
xy
;

432 
	}
}

434 
	gãm∂©e
 <
˛ass
 
	gT
>

435 
ölöe
 c⁄° 
T
 *

436 
	gShór6
<
	gT
>::
	$gëVÆue
() const

438  (c⁄° 
T
 *Ë&
xy
;

439 
	}
}

441 
	gãm∂©e
 <
˛ass
 
	gT
>

442 
	gãm∂©e
 <
˛ass
 
	gS
>

443 
ölöe
 
boﬁ


444 
	gShór6
<
	gT
>::
›î©‹
 =(c⁄° 
Shór6
<
S
> &
h
) const

446  
xy
 =
h
.xy && 
xz
 =h.xz && 
yz
 == h.yz &&

447 
yx
 =
h
.yx && 
zx
 =h.zx && 
zy
 == h.zy;

450 
	gãm∂©e
 <
˛ass
 
	gT
>

451 
	gãm∂©e
 <
˛ass
 
	gS
>

452 
ölöe
 
boﬁ


453 
	gShór6
<
	gT
>::
›î©‹
 !(c⁄° 
Shór6
<
S
> &
h
) const

455  
xy
 !
h
.xy || 
xz
 !h.xz || 
yz
 != h.yz ||

456 
yx
 !
h
.yx || 
zx
 !h.zx || 
zy
 != h.zy;

459 
	gãm∂©e
 <
˛ass
 
	gT
>

460 
boﬁ


461 
	gShór6
<
	gT
>::
equÆWôhAbsEº‹
 (c⁄° 
Shór6
<
T
> &
h
, T 
e
) const

463 
	gi
 = 0; i < 6; i++)

464 i‡(!
	gIm©h
::
equÆWôhAbsEº‹
 ((*
this
)[
i
], 
h
[i], 
e
))

465  
	gÁl£
;

467  
	gåue
;

470 
	gãm∂©e
 <
˛ass
 
	gT
>

471 
boﬁ


472 
	gShór6
<
	gT
>::
equÆWôhRñEº‹
 (c⁄° 
Shór6
<
T
> &
h
, T 
e
) const

474 
	gi
 = 0; i < 6; i++)

475 i‡(!
	gIm©h
::
equÆWôhRñEº‹
 ((*
this
)[
i
], 
h
[i], 
e
))

476  
	gÁl£
;

478  
	gåue
;

482 
	gãm∂©e
 <
˛ass
 
	gT
>

483 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

484 
	gShór6
<
	gT
>::
›î©‹
 +(c⁄° 
Shór6
 &
h
)

486 
xy
 +
h
.xy;

487 
	gxz
 +
h
.
xz
;

488 
	gyz
 +
h
.
yz
;

489 
	gyx
 +
h
.
yx
;

490 
	gzx
 +
h
.
zx
;

491 
	gzy
 +
h
.
zy
;

492  *
	gthis
;

495 
	gãm∂©e
 <
˛ass
 
	gT
>

496 
ölöe
 
	gShór6
<
	gT
>

497 
	gShór6
<
	gT
>::
›î©‹
 + (c⁄° 
Shór6
 &
h
) const

499  
Shór6
 (
xy
 + 
h
.xy, 
xz
 + h.xz, 
yz
 + h.yz,

500 
yx
 + 
h
.yx, 
zx
 + h.zx, 
zy
 + h.zy);

503 
	gãm∂©e
 <
˛ass
 
	gT
>

504 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

505 
	gShór6
<
	gT
>::
›î©‹
 -(c⁄° 
Shór6
 &
h
)

507 
xy
 -
h
.xy;

508 
	gxz
 -
h
.
xz
;

509 
	gyz
 -
h
.
yz
;

510 
	gyx
 -
h
.
yx
;

511 
	gzx
 -
h
.
zx
;

512 
	gzy
 -
h
.
zy
;

513  *
	gthis
;

516 
	gãm∂©e
 <
˛ass
 
	gT
>

517 
ölöe
 
	gShór6
<
	gT
>

518 
	gShór6
<
	gT
>::
›î©‹
 - (c⁄° 
Shór6
 &
h
) const

520  
Shór6
 (
xy
 - 
h
.xy, 
xz
 - h.xz, 
yz
 - h.yz,

521 
yx
 - 
h
.yx, 
zx
 - h.zx, 
zy
 - h.zy);

524 
	gãm∂©e
 <
˛ass
 
	gT
>

525 
ölöe
 
	gShór6
<
	gT
>

526 
	gShór6
<
	gT
>::
›î©‹
 - () const

528  
Shór6
 (-
xy
, -
xz
, -
yz
, -
yx
, -
zx
, -
zy
);

531 
	gãm∂©e
 <
˛ass
 
	gT
>

532 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

533 
	gShór6
<
	gT
>::
	$√g©e
 ()

535 
xy
 = -xy;

536 
xz
 = -xz;

537 
yz
 = -yz;

538 
yx
 = -yx;

539 
zx
 = -zx;

540 
zy
 = -zy;

541  *
this
;

542 
	}
}

544 
	gãm∂©e
 <
˛ass
 
	gT
>

545 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

546 
	gShór6
<
	gT
>::
›î©‹
 *(c⁄° 
Shór6
 &
h
)

548 
xy
 *
h
.xy;

549 
	gxz
 *
h
.
xz
;

550 
	gyz
 *
h
.
yz
;

551 
	gyx
 *
h
.
yx
;

552 
	gzx
 *
h
.
zx
;

553 
	gzy
 *
h
.
zy
;

554  *
	gthis
;

557 
	gãm∂©e
 <
˛ass
 
	gT
>

558 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

559 
	gShór6
<
	gT
>::
›î©‹
 *(
T
 
a
)

561 
xy
 *
a
;

562 
	gxz
 *
a
;

563 
	gyz
 *
a
;

564 
	gyx
 *
a
;

565 
	gzx
 *
a
;

566 
	gzy
 *
a
;

567  *
	gthis
;

570 
	gãm∂©e
 <
˛ass
 
	gT
>

571 
ölöe
 
	gShór6
<
	gT
>

572 
	gShór6
<
	gT
>::
›î©‹
 * (c⁄° 
Shór6
 &
h
) const

574  
Shór6
 (
xy
 * 
h
.xy, 
xz
 * h.xz, 
yz
 * h.yz,

575 
yx
 * 
h
.yx, 
zx
 * h.zx, 
zy
 * h.zy);

578 
	gãm∂©e
 <
˛ass
 
	gT
>

579 
ölöe
 
	gShór6
<
	gT
>

580 
	gShór6
<
	gT
>::
›î©‹
 * (
T
 
a
) const

582  
Shór6
 (
xy
 * 
a
, 
xz
 *á, 
yz
 *á,

583 
yx
 * 
a
, 
zx
 *á, 
zy
 *á);

586 
	gãm∂©e
 <
˛ass
 
	gT
>

587 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

588 
	gShór6
<
	gT
>::
›î©‹
 /(c⁄° 
Shór6
 &
h
)

590 
xy
 /
h
.xy;

591 
	gxz
 /
h
.
xz
;

592 
	gyz
 /
h
.
yz
;

593 
	gyx
 /
h
.
yx
;

594 
	gzx
 /
h
.
zx
;

595 
	gzy
 /
h
.
zy
;

596  *
	gthis
;

599 
	gãm∂©e
 <
˛ass
 
	gT
>

600 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

601 
	gShór6
<
	gT
>::
›î©‹
 /(
T
 
a
)

603 
xy
 /
a
;

604 
	gxz
 /
a
;

605 
	gyz
 /
a
;

606 
	gyx
 /
a
;

607 
	gzx
 /
a
;

608 
	gzy
 /
a
;

609  *
	gthis
;

612 
	gãm∂©e
 <
˛ass
 
	gT
>

613 
ölöe
 
	gShór6
<
	gT
>

614 
	gShór6
<
	gT
>::
›î©‹
 / (c⁄° 
Shór6
 &
h
) const

616  
Shór6
 (
xy
 / 
h
.xy, 
xz
 / h.xz, 
yz
 / h.yz,

617 
yx
 / 
h
.yx, 
zx
 / h.zx, 
zy
 / h.zy);

620 
	gãm∂©e
 <
˛ass
 
	gT
>

621 
ölöe
 
	gShór6
<
	gT
>

622 
	gShór6
<
	gT
>::
›î©‹
 / (
T
 
a
) const

624  
Shór6
 (
xy
 / 
a
, 
xz
 /á, 
yz
 /á,

625 
yx
 / 
a
, 
zx
 /á, 
zy
 /á);

633 
	gãm∂©e
 <
˛ass
 
	gT
>

634 
	g°d
::
o°ªam
 &

635 
›î©‹
 << (
°d
::
o°ªam
 &
s
, c⁄° 
	gShór6
<
	gT
> &
	gh
)

637  
	gs
 << '('

638 << 
	gh
.
	gxy
 << ' ' << h.
	gxz
 << ' ' << h.
	gyz


639 << 
	gh
.
	gyx
 << ' ' << h.
	gzx
 << ' ' << h.
	gzy


648 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

649 
ölöe
 
	gShór6
<
	gT
>

650 
	g›î©‹
 * (
S
 
	ga
, c⁄° 
	gShór6
<
	gT
> &
	gh
)

652  
	gShór6
<
	gT
> (
a
 * 
	gh
.
	gxy
,á * h.
	gxz
,á * h.
	gyz
,

653 
a
 * 
	gh
.
	gyx
,á * h.
	gzx
,á * h.
	gzy
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathSphere.h

37 #i‚de‡
INCLUDED_IMATHSPHERE_H


38 
	#INCLUDED_IMATHSPHERE_H


	)

46 
	~"Im©hVec.h
"

47 
	~"Im©hBox.h
"

48 
	~"Im©hLöe.h
"

50 
«me•a˚
 
	gIm©h
 {

52 
	gãm∂©e
 <
˛ass
 
	gT
>

53 ˛as†
	cSphîe3


55 
	gpublic
:

57 
Vec3
<
T
> 
˚¡î
;

58 
T
 
	gødius
;

64 
Sphîe3
(Ë: 
˚¡î
(0,0,0), 
ødius
(0) {}

65 
Sphîe3
(c⁄° 
Vec3
<
T
> &
c
, T 
r
Ë: 
˚¡î
(c), 
ødius
(r) {}

90 
cúcums¸ibe
(c⁄° 
Box
<
Vec3
<
T
> > &
box
);

91 
boﬁ
 
öãr£˘
(c⁄° 
Löe3
<
T
> &
l
, 
Vec3
<T> &
öãr£˘i⁄
) const;

92 
boﬁ
 
öãr£˘T
(c⁄° 
Löe3
<
T
> &
l
, T &
t
) const;

100 
	gSphîe3
<> 
	tSphîe3f
;

101 
	gSphîe3
<> 
	tSphîe3d
;

108 
	gãm∂©e
 <
˛ass
 
	gT
>

109 
	gSphîe3
<
	gT
>::
cúcums¸ibe
(c⁄° 
Box
<
Vec3
<
T
> > &
box
)

111 
˚¡î
 = 
T
(0.5Ë* (
box
.
mö
 + box.
max
);

112 
	gødius
 = (
box
.
max
 - 
˚¡î
).
Àngth
();

116 
	gãm∂©e
 <
˛ass
 
	gT
>

117 
boﬁ
 
	gSphîe3
<
	gT
>::
öãr£˘T
(c⁄° 
Löe3
<
T
> &
löe
, T &
t
) const

119 
boﬁ
 
	gd€sI¡î£˘
 = 
åue
;

121 
	gVec3
<
	gT
> 
	gv
 = 
löe
.
pos
 - 
˚¡î
;

122 
T
 
	gB
 = 2.0 * (
löe
.
dú
 ^ 
v
);

123 
T
 
	gC
 = (
v
 ^ vË- (
ødius
 *Ñadius);

128 
T
 
	gdis¸
 = 
B
*B - 4.0*
C
;

130 i‡(
	gdis¸
 < 0.0)

134 
	gd€sI¡î£˘
 = 
Ál£
;

140 
T
 
	gsqroŸ
 = 
M©h
<T>::
sqπ
(
dis¸
);

141 
	gt
 = (-
B
 - 
sqroŸ
) * 0.5;

143 i‡(
	gt
 < 0.0)

147 
	gt
 = (-
B
 + 
sqroŸ
) * 0.5;

150 i‡(
	gt
 < 0.0)

151 
	gd€sI¡î£˘
 = 
Ál£
;

154  
	gd€sI¡î£˘
;

158 
	gãm∂©e
 <
˛ass
 
	gT
>

159 
boﬁ
 
	gSphîe3
<
	gT
>::
öãr£˘
(c⁄° 
Löe3
<
T
> &
löe
, 
Vec3
<T> &
öãr£˘i⁄
) const

161 
T
 
	gt
;

163 i‡(
öãr£˘T
 (
löe
, 
t
))

165 
	göãr£˘i⁄
 = 
löe
(
t
);

166  
	gåue
;

170  
	gÁl£
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h

37 #i‚de‡
INCLUDED_IMATHVEC_H


38 
	#INCLUDED_IMATHVEC_H


	)

46 
	~"Im©hExc.h
"

47 
	~"Im©hLimôs.h
"

48 
	~"Im©hM©h.h
"

50 
	~<io°ªam
>

52 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


54 #¥agm®
w¨nög
(
dißbÀ
:4290)

58 
«me•a˚
 
	gIm©h
 {

61 
	gãm∂©e
 <
˛ass
 
	gT
> cœs†
	cVec2


63 
	gpublic
:

69 
T
 
x
, 
	gy
;

71 
	gT
 & 
	g›î©‹
 [] (
	gi
);

72 c⁄° 
	gT
 & 
	g›î©‹
 [] (
	gi
) const;

79 
Vec2
 ();

80 
ex∂icô
 
Vec2
 (
T
 
a
);

81 
Vec2
 (
T
 
a
, T 
b
);

88 
Vec2
 (c⁄° Vec2 &
v
);

89 
	gãm∂©e
 <
˛ass
 
	gS
> 
Vec2
 (c⁄° Vec2<
S
> &
v
);

91 c⁄° 
	gVec2
 & 
	g›î©‹
 = (c⁄° 
Vec2
 &
v
);

98 
	gãm∂©e
 <
˛ass
 
	gS
>

99 
£tVÆue
 (
S
 
a
, S 
b
);

101 
	gãm∂©e
 <
˛ass
 
	gS
>

102 
£tVÆue
 (c⁄° 
Vec2
<
S
> &
v
);

104 
	gãm∂©e
 <
˛ass
 
	gS
>

105 
gëVÆue
 (
S
 &
a
, S &
b
) const;

107 
	gãm∂©e
 <
˛ass
 
	gS
>

108 
gëVÆue
 (
Vec2
<
S
> &
v
) const;

110 
T
 * 
gëVÆue
 ();

111 c⁄° 
T
 * 
gëVÆue
 () const;

118 
	gãm∂©e
 <
˛ass
 
	gS
>

119 
boﬁ
 
	g›î©‹
 =(c⁄° 
Vec2
<
S
> &
v
) const;

121 
	gãm∂©e
 <
˛ass
 
	gS
>

122 
boﬁ
 
	g›î©‹
 !(c⁄° 
Vec2
<
S
> &
v
) const;

143 
boﬁ
 
equÆWôhAbsEº‹
 (c⁄° 
Vec2
<
T
> &
v
, T 
e
) const;

144 
boﬁ
 
equÆWôhRñEº‹
 (c⁄° 
Vec2
<
T
> &
v
, T 
e
) const;

150 
T
 
dŸ
 (c⁄° 
Vec2
 &
v
) const;

151 
T
 
	g›î©‹
 ^ (c⁄° 
	gVec2
 &
	gv
) const;

159 
T
 
¸oss
 (c⁄° 
Vec2
 &
v
) const;

160 
T
 
	g›î©‹
 % (c⁄° 
	gVec2
 &
	gv
) const;

167 c⁄° 
	gVec2
 & 
	g›î©‹
 +(c⁄° 
Vec2
 &
v
);

168 
Vec2
 
	g›î©‹
 + (c⁄° 
	gVec2
 &
	gv
) const;

175 c⁄° 
	gVec2
 & 
	g›î©‹
 -(c⁄° 
Vec2
 &
v
);

176 
Vec2
 
	g›î©‹
 - (c⁄° 
	gVec2
 &
	gv
) const;

183 
Vec2
 
	g›î©‹
 - () const;

184 c⁄° 
	gVec2
 & 
√g©e
 ();

191 c⁄° 
	gVec2
 & 
	g›î©‹
 *(c⁄° 
Vec2
 &
v
);

192 c⁄° 
	gVec2
 & 
	g›î©‹
 *(
T
 
a
);

193 
Vec2
 
	g›î©‹
 * (c⁄° 
	gVec2
 &
	gv
) const;

194 
Vec2
 
	g›î©‹
 * (
T
 
	ga
) const;

201 c⁄° 
	gVec2
 & 
	g›î©‹
 /(c⁄° 
Vec2
 &
v
);

202 c⁄° 
	gVec2
 & 
	g›î©‹
 /(
T
 
a
);

203 
Vec2
 
	g›î©‹
 / (c⁄° 
	gVec2
 &
	gv
) const;

204 
Vec2
 
	g›î©‹
 / (
T
 
	ga
) const;

216 
T
 
Àngth
 () const;

217 
T
 
Àngth2
 () const;

219 c⁄° 
	gVec2
 & 
n‹mÆize
 ();

220 c⁄° 
	gVec2
 & 
n‹mÆizeExc
 (Ë
throw
 (
Iex
::
M©hExc
);

221 c⁄° 
	gVec2
 & 
n‹mÆizeN⁄NuŒ
 ();

223 
	gVec2
<
	gT
> 
n‹mÆized
 () const;

224 
	gVec2
<
	gT
> 
n‹mÆizedExc
 (Ëc⁄° 
throw
 (
Iex
::
M©hExc
);

225 
	gVec2
<
	gT
> 
n‹mÆizedN⁄NuŒ
 () const;

232 
dimísi⁄s
() { 2;}

239 
T
 
ba£Ty≥Mö
(Ë{ 
	glimôs
<
	gT
>::
mö
();}

240 
T
 
ba£Ty≥Max
(Ë{ 
	glimôs
<
	gT
>::
max
();}

241 
T
 
ba£Ty≥SmÆÀ°
(Ë{ 
	glimôs
<
	gT
>::
smÆÀ°
();}

242 
T
 
ba£Ty≥Epsû⁄
(Ë{ 
	glimôs
<
	gT
>::
ïsû⁄
();}

251 
T
 
	tBa£Ty≥
;

255 
	gãm∂©e
 <
˛ass
 
	gT
> cœs†
	cVec3


257 
	gpublic
:

263 
T
 
x
, 
	gy
, 
	gz
;

265 
	gT
 & 
	g›î©‹
 [] (
	gi
);

266 c⁄° 
	gT
 & 
	g›î©‹
 [] (
	gi
) const;

273 
Vec3
 ();

274 
ex∂icô
 
Vec3
 (
T
 
a
);

275 
Vec3
 (
T
 
a
, T 
b
, T 
c
);

282 
Vec3
 (c⁄° Vec3 &
v
);

283 
	gãm∂©e
 <
˛ass
 
	gS
> 
Vec3
 (c⁄° Vec3<
S
> &
v
);

285 c⁄° 
	gVec3
 & 
	g›î©‹
 = (c⁄° 
Vec3
 &
v
);

292 
	gãm∂©e
 <
˛ass
 
	gS
>

293 
£tVÆue
 (
S
 
a
, S 
b
, S 
c
);

295 
	gãm∂©e
 <
˛ass
 
	gS
>

296 
£tVÆue
 (c⁄° 
Vec3
<
S
> &
v
);

298 
	gãm∂©e
 <
˛ass
 
	gS
>

299 
gëVÆue
 (
S
 &
a
, S &
b
, S &
c
) const;

301 
	gãm∂©e
 <
˛ass
 
	gS
>

302 
gëVÆue
 (
Vec3
<
S
> &
v
) const;

304 
T
 * 
gëVÆue
();

305 c⁄° 
T
 * 
gëVÆue
() const;

312 
	gãm∂©e
 <
˛ass
 
	gS
>

313 
boﬁ
 
	g›î©‹
 =(c⁄° 
Vec3
<
S
> &
v
) const;

315 
	gãm∂©e
 <
˛ass
 
	gS
>

316 
boﬁ
 
	g›î©‹
 !(c⁄° 
Vec3
<
S
> &
v
) const;

336 
boﬁ
 
equÆWôhAbsEº‹
 (c⁄° 
Vec3
<
T
> &
v
, T 
e
) const;

337 
boﬁ
 
equÆWôhRñEº‹
 (c⁄° 
Vec3
<
T
> &
v
, T 
e
) const;

343 
T
 
dŸ
 (c⁄° 
Vec3
 &
v
) const;

344 
T
 
	g›î©‹
 ^ (c⁄° 
	gVec3
 &
	gv
) const;

351 
Vec3
 
¸oss
 (c⁄° Vec3 &
v
) const;

352 c⁄° 
	gVec3
 & 
	g›î©‹
 %(c⁄° 
Vec3
 &
v
);

353 
Vec3
 
	g›î©‹
 % (c⁄° 
	gVec3
 &
	gv
) const;

360 c⁄° 
	gVec3
 & 
	g›î©‹
 +(c⁄° 
Vec3
 &
v
);

361 
Vec3
 
	g›î©‹
 + (c⁄° 
	gVec3
 &
	gv
) const;

368 c⁄° 
	gVec3
 & 
	g›î©‹
 -(c⁄° 
Vec3
 &
v
);

369 
Vec3
 
	g›î©‹
 - (c⁄° 
	gVec3
 &
	gv
) const;

376 
Vec3
 
	g›î©‹
 - () const;

377 c⁄° 
	gVec3
 & 
√g©e
 ();

384 c⁄° 
	gVec3
 & 
	g›î©‹
 *(c⁄° 
Vec3
 &
v
);

385 c⁄° 
	gVec3
 & 
	g›î©‹
 *(
T
 
a
);

386 
Vec3
 
	g›î©‹
 * (c⁄° 
	gVec3
 &
	gv
) const;

387 
Vec3
 
	g›î©‹
 * (
T
 
	ga
) const;

394 c⁄° 
	gVec3
 & 
	g›î©‹
 /(c⁄° 
Vec3
 &
v
);

395 c⁄° 
	gVec3
 & 
	g›î©‹
 /(
T
 
a
);

396 
Vec3
 
	g›î©‹
 / (c⁄° 
	gVec3
 &
	gv
) const;

397 
Vec3
 
	g›î©‹
 / (
T
 
	ga
) const;

409 
T
 
Àngth
 () const;

410 
T
 
Àngth2
 () const;

412 c⁄° 
	gVec3
 & 
n‹mÆize
 ();

413 c⁄° 
	gVec3
 & 
n‹mÆizeExc
 (Ë
throw
 (
Iex
::
M©hExc
);

414 c⁄° 
	gVec3
 & 
n‹mÆizeN⁄NuŒ
 ();

416 
	gVec3
<
	gT
> 
n‹mÆized
 () const;

417 
	gVec3
<
	gT
> 
n‹mÆizedExc
 (Ëc⁄° 
throw
 (
Iex
::
M©hExc
);

418 
	gVec3
<
	gT
> 
n‹mÆizedN⁄NuŒ
 () const;

425 
dimísi⁄s
() { 3;}

432 
T
 
ba£Ty≥Mö
(Ë{ 
	glimôs
<
	gT
>::
mö
();}

433 
T
 
ba£Ty≥Max
(Ë{ 
	glimôs
<
	gT
>::
max
();}

434 
T
 
ba£Ty≥SmÆÀ°
(Ë{ 
	glimôs
<
	gT
>::
smÆÀ°
();}

435 
T
 
ba£Ty≥Epsû⁄
(Ë{ 
	glimôs
<
	gT
>::
ïsû⁄
();}

444 
T
 
	tBa£Ty≥
;

452 
	gãm∂©e
 <
˛ass
 
	gT
>

453 
	g°d
::
o°ªam
 & 
›î©‹
 << (
°d
::o°ªam &
s
, c⁄° 
	gVec2
<
	gT
> &
	gv
);

455 
	gãm∂©e
 <
˛ass
 
	gT
>

456 
	g°d
::
o°ªam
 & 
›î©‹
 << (
°d
::o°ªam &
s
, c⁄° 
	gVec3
<
	gT
> &
	gv
);

463 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gVec2
<T> 
	g›î©‹
 * (
T
 
	ga
, c⁄° Vec2<T> &
	gv
);

464 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gVec3
<T> 
	g›î©‹
 * (
T
 
	ga
, c⁄° Vec3<T> &
	gv
);

471 
	gVec2
 <> 
	tV2s
;

472 
	gVec2
 <> 
	tV2i
;

473 
	gVec2
 <> 
	tV2f
;

474 
	gVec2
 <> 
	tV2d
;

475 
	gVec3
 <> 
	tV3s
;

476 
	gVec3
 <> 
	tV3i
;

477 
	gVec3
 <> 
	tV3f
;

478 
	gVec3
 <> 
	tV3d
;

487 
	gãm∂©e
 <> 

488 
	gVec2
<>::
	$Àngth
 () const;

490 
ãm∂©e
 <> c⁄° 
Vec2
<> &

491 
Vec2
<>::
	`n‹mÆize
 ();

493 
ãm∂©e
 <> c⁄° 
Vec2
<> &

494 
Vec2
<>::
	$n‹mÆizeExc
 (Ë
	`throw
 (
Iex
::
M©hExc
);

496 
ãm∂©e
 <> c⁄° 
Vec2
<> &

497 
Vec2
<>::
	`n‹mÆizeN⁄NuŒ
 ();

499 
ãm∂©e
 <> 
Vec2
<>

500 
Vec2
<>::
	$n‹mÆized
 () const;

502 
ãm∂©e
 <> 
Vec2
<>

503 
Vec2
<>::
	$n‹mÆizedExc
 (Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
);

505 
ãm∂©e
 <> 
Vec2
<>

506 
Vec2
<>::
	$n‹mÆizedN⁄NuŒ
 () const;

511 
ãm∂©e
 <> 

512 
Vec2
<>::
	$Àngth
 () const;

514 
ãm∂©e
 <> c⁄° 
Vec2
<> &

515 
Vec2
<>::
	`n‹mÆize
 ();

517 
ãm∂©e
 <> c⁄° 
Vec2
<> &

518 
Vec2
<>::
	$n‹mÆizeExc
 (Ë
	`throw
 (
Iex
::
M©hExc
);

520 
ãm∂©e
 <> c⁄° 
Vec2
<> &

521 
Vec2
<>::
	`n‹mÆizeN⁄NuŒ
 ();

523 
ãm∂©e
 <> 
Vec2
<>

524 
Vec2
<>::
	$n‹mÆized
 () const;

526 
ãm∂©e
 <> 
Vec2
<>

527 
Vec2
<>::
	$n‹mÆizedExc
 (Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
);

529 
ãm∂©e
 <> 
Vec2
<>

530 
Vec2
<>::
	$n‹mÆizedN⁄NuŒ
 () const;

535 
ãm∂©e
 <> 

536 
Vec3
<>::
	$Àngth
 () const;

538 
ãm∂©e
 <> c⁄° 
Vec3
<> &

539 
Vec3
<>::
	`n‹mÆize
 ();

541 
ãm∂©e
 <> c⁄° 
Vec3
<> &

542 
Vec3
<>::
	$n‹mÆizeExc
 (Ë
	`throw
 (
Iex
::
M©hExc
);

544 
ãm∂©e
 <> c⁄° 
Vec3
<> &

545 
Vec3
<>::
	`n‹mÆizeN⁄NuŒ
 ();

547 
ãm∂©e
 <> 
Vec3
<>

548 
Vec3
<>::
	$n‹mÆized
 () const;

550 
ãm∂©e
 <> 
Vec3
<>

551 
Vec3
<>::
	$n‹mÆizedExc
 (Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
);

553 
ãm∂©e
 <> 
Vec3
<>

554 
Vec3
<>::
	$n‹mÆizedN⁄NuŒ
 () const;

559 
ãm∂©e
 <> 

560 
Vec3
<>::
	$Àngth
 () const;

562 
ãm∂©e
 <> c⁄° 
Vec3
<> &

563 
Vec3
<>::
	`n‹mÆize
 ();

565 
ãm∂©e
 <> c⁄° 
Vec3
<> &

566 
Vec3
<>::
	$n‹mÆizeExc
 (Ë
	`throw
 (
Iex
::
M©hExc
);

568 
ãm∂©e
 <> c⁄° 
Vec3
<> &

569 
Vec3
<>::
	`n‹mÆizeN⁄NuŒ
 ();

571 
ãm∂©e
 <> 
Vec3
<>

572 
Vec3
<>::
	$n‹mÆized
 () const;

574 
ãm∂©e
 <> 
Vec3
<>

575 
Vec3
<>::
	$n‹mÆizedExc
 (Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
);

577 
ãm∂©e
 <> 
Vec3
<>

578 
Vec3
<>::
	$n‹mÆizedN⁄NuŒ
 () const;

585 
ãm∂©e
 <
˛ass
 
T
>

586 
ölöe
 
T
 &

587 
Vec2
<
T
>::
›î©‹
 [] (
i
)

589  (&
x
)[
i
];

590 
	}
}

592 
	gãm∂©e
 <
˛ass
 
	gT
>

593 
ölöe
 c⁄° 
	gT
 &

594 
	gVec2
<
	gT
>::
›î©‹
 [] (
i
) const

596  (&
x
)[
i
];

599 
	gãm∂©e
 <
˛ass
 
	gT
>

600 
ölöe


601 
	gVec2
<
	gT
>::
	$Vec2
 ()

604 
	}
}

606 
ãm∂©e
 <
˛ass
 
T
>

607 
ölöe


608 
Vec2
<
T
>::
	$Vec2
 (
T
 
a
)

610 
x
 = 
y
 = 
a
;

611 
	}
}

613 
	gãm∂©e
 <
˛ass
 
	gT
>

614 
ölöe


615 
	gVec2
<
	gT
>::
	$Vec2
 (
T
 
a
, T 
b
)

617 
x
 = 
a
;

618 
y
 = 
b
;

619 
	}
}

621 
	gãm∂©e
 <
˛ass
 
	gT
>

622 
ölöe


623 
	gVec2
<
	gT
>::
	$Vec2
 (c⁄° 
Vec2
 &
v
)

625 
x
 = 
v
.x;

626 
y
 = 
v
.y;

627 
	}
}

629 
	gãm∂©e
 <
˛ass
 
	gT
>

630 
	gãm∂©e
 <
˛ass
 
	gS
>

631 
ölöe


632 
	gVec2
<
	gT
>::
Vec2
 (c⁄° Vec2<
S
> &
v
)

634 
x
 = 
T
 (
v
.x);

635 
	gy
 = 
T
 (
v
.
y
);

638 
	gãm∂©e
 <
˛ass
 
	gT
>

639 
ölöe
 c⁄° 
	gVec2
<
	gT
> &

640 
	gVec2
<
	gT
>::
›î©‹
 = (c⁄° 
Vec2
 &
v
)

642 
x
 = 
v
.x;

643 
	gy
 = 
v
.
y
;

644  *
	gthis
;

647 
	gãm∂©e
 <
˛ass
 
	gT
>

648 
	gãm∂©e
 <
˛ass
 
	gS
>

649 
ölöe
 

650 
	gVec2
<
	gT
>::
	$£tVÆue
 (
S
 
a
, S 
b
)

652 
x
 = 
	`T
 (
a
);

653 
y
 = 
	`T
 (
b
);

654 
	}
}

656 
	gãm∂©e
 <
˛ass
 
	gT
>

657 
	gãm∂©e
 <
˛ass
 
	gS
>

658 
ölöe
 

659 
	gVec2
<
	gT
>::
£tVÆue
 (c⁄° 
Vec2
<
S
> &
v
)

661 
x
 = 
T
 (
v
.x);

662 
	gy
 = 
T
 (
v
.
y
);

665 
	gãm∂©e
 <
˛ass
 
	gT
>

666 
	gãm∂©e
 <
˛ass
 
	gS
>

667 
ölöe
 

668 
	gVec2
<
	gT
>::
	$gëVÆue
 (
S
 &
a
, S &
b
) const

670 
a
 = 
	`S
 (
x
);

671 
b
 = 
	`S
 (
y
);

672 
	}
}

674 
	gãm∂©e
 <
˛ass
 
	gT
>

675 
	gãm∂©e
 <
˛ass
 
	gS
>

676 
ölöe
 

677 
	gVec2
<
	gT
>::
gëVÆue
 (
Vec2
<
S
> &
v
) const

679 
v
.
x
 = 
S
 (x);

680 
	gv
.
	gy
 = 
S
 (
y
);

683 
	gãm∂©e
 <
˛ass
 
	gT
>

684 
ölöe
 
T
 *

685 
	gVec2
<
	gT
>::
	$gëVÆue
()

687  (
T
 *Ë&
x
;

688 
	}
}

690 
	gãm∂©e
 <
˛ass
 
	gT
>

691 
ölöe
 c⁄° 
T
 *

692 
	gVec2
<
	gT
>::
	$gëVÆue
() const

694  (c⁄° 
T
 *Ë&
x
;

695 
	}
}

697 
	gãm∂©e
 <
˛ass
 
	gT
>

698 
	gãm∂©e
 <
˛ass
 
	gS
>

699 
ölöe
 
boﬁ


700 
	gVec2
<
	gT
>::
›î©‹
 =(c⁄° 
Vec2
<
S
> &
v
) const

702  
x
 =
v
.x && 
y
 == v.y;

705 
	gãm∂©e
 <
˛ass
 
	gT
>

706 
	gãm∂©e
 <
˛ass
 
	gS
>

707 
ölöe
 
boﬁ


708 
	gVec2
<
	gT
>::
›î©‹
 !(c⁄° 
Vec2
<
S
> &
v
) const

710  
x
 !
v
.x || 
y
 != v.y;

713 
	gãm∂©e
 <
˛ass
 
	gT
>

714 
boﬁ


715 
	gVec2
<
	gT
>::
equÆWôhAbsEº‹
 (c⁄° 
Vec2
<
T
> &
v
, T 
e
) const

717 
	gi
 = 0; i < 2; i++)

718 i‡(!
	gIm©h
::
equÆWôhAbsEº‹
 ((*
this
)[
i
], 
v
[i], 
e
))

719  
	gÁl£
;

721  
	gåue
;

724 
	gãm∂©e
 <
˛ass
 
	gT
>

725 
boﬁ


726 
	gVec2
<
	gT
>::
equÆWôhRñEº‹
 (c⁄° 
Vec2
<
T
> &
v
, T 
e
) const

728 
	gi
 = 0; i < 2; i++)

729 i‡(!
	gIm©h
::
equÆWôhRñEº‹
 ((*
this
)[
i
], 
v
[i], 
e
))

730  
	gÁl£
;

732  
	gåue
;

735 
	gãm∂©e
 <
˛ass
 
	gT
>

736 
ölöe
 
T


737 
	gVec2
<
	gT
>::
	$dŸ
 (c⁄° 
Vec2
 &
v
) const

739  
x
 * 
v
.x + 
y
 * v.y;

740 
	}
}

742 
	gãm∂©e
 <
˛ass
 
	gT
>

743 
ölöe
 
T


744 
	gVec2
<
	gT
>::
›î©‹
 ^ (c⁄° 
Vec2
 &
v
) const

746  
dŸ
 (
v
);

749 
	gãm∂©e
 <
˛ass
 
	gT
>

750 
ölöe
 
T


751 
	gVec2
<
	gT
>::
	$¸oss
 (c⁄° 
Vec2
 &
v
) const

753  
x
 * 
v
.
y
 - y * v.x;

755 
	}
}

757 
	gãm∂©e
 <
˛ass
 
	gT
>

758 
ölöe
 
T


759 
	gVec2
<
	gT
>::
›î©‹
 % (c⁄° 
Vec2
 &
v
) const

761  
x
 * 
v
.
y
 - y * v.x;

764 
	gãm∂©e
 <
˛ass
 
	gT
>

765 
ölöe
 c⁄° 
	gVec2
<
	gT
> &

766 
	gVec2
<
	gT
>::
›î©‹
 +(c⁄° 
Vec2
 &
v
)

768 
x
 +
v
.x;

769 
	gy
 +
v
.
y
;

770  *
	gthis
;

773 
	gãm∂©e
 <
˛ass
 
	gT
>

774 
ölöe
 
	gVec2
<
	gT
>

775 
	gVec2
<
	gT
>::
›î©‹
 + (c⁄° 
Vec2
 &
v
) const

777  
Vec2
 (
x
 + 
v
.x, 
y
 + v.y);

780 
	gãm∂©e
 <
˛ass
 
	gT
>

781 
ölöe
 c⁄° 
	gVec2
<
	gT
> &

782 
	gVec2
<
	gT
>::
›î©‹
 -(c⁄° 
Vec2
 &
v
)

784 
x
 -
v
.x;

785 
	gy
 -
v
.
y
;

786  *
	gthis
;

789 
	gãm∂©e
 <
˛ass
 
	gT
>

790 
ölöe
 
	gVec2
<
	gT
>

791 
	gVec2
<
	gT
>::
›î©‹
 - (c⁄° 
Vec2
 &
v
) const

793  
Vec2
 (
x
 - 
v
.x, 
y
 - v.y);

796 
	gãm∂©e
 <
˛ass
 
	gT
>

797 
ölöe
 
	gVec2
<
	gT
>

798 
	gVec2
<
	gT
>::
›î©‹
 - () const

800  
Vec2
 (-
x
, -
y
);

803 
	gãm∂©e
 <
˛ass
 
	gT
>

804 
ölöe
 c⁄° 
	gVec2
<
	gT
> &

805 
	gVec2
<
	gT
>::
	$√g©e
 ()

807 
x
 = -x;

808 
y
 = -y;

809  *
this
;

810 
	}
}

812 
	gãm∂©e
 <
˛ass
 
	gT
>

813 
ölöe
 c⁄° 
	gVec2
<
	gT
> &

814 
	gVec2
<
	gT
>::
›î©‹
 *(c⁄° 
Vec2
 &
v
)

816 
x
 *
v
.x;

817 
	gy
 *
v
.
y
;

818  *
	gthis
;

821 
	gãm∂©e
 <
˛ass
 
	gT
>

822 
ölöe
 c⁄° 
	gVec2
<
	gT
> &

823 
	gVec2
<
	gT
>::
›î©‹
 *(
T
 
a
)

825 
x
 *
a
;

826 
	gy
 *
a
;

827  *
	gthis
;

830 
	gãm∂©e
 <
˛ass
 
	gT
>

831 
ölöe
 
	gVec2
<
	gT
>

832 
	gVec2
<
	gT
>::
›î©‹
 * (c⁄° 
Vec2
 &
v
) const

834  
Vec2
 (
x
 * 
v
.x, 
y
 * v.y);

837 
	gãm∂©e
 <
˛ass
 
	gT
>

838 
ölöe
 
	gVec2
<
	gT
>

839 
	gVec2
<
	gT
>::
›î©‹
 * (
T
 
a
) const

841  
Vec2
 (
x
 * 
a
, 
y
 *á);

844 
	gãm∂©e
 <
˛ass
 
	gT
>

845 
ölöe
 c⁄° 
	gVec2
<
	gT
> &

846 
	gVec2
<
	gT
>::
›î©‹
 /(c⁄° 
Vec2
 &
v
)

848 
x
 /
v
.x;

849 
	gy
 /
v
.
y
;

850  *
	gthis
;

853 
	gãm∂©e
 <
˛ass
 
	gT
>

854 
ölöe
 c⁄° 
	gVec2
<
	gT
> &

855 
	gVec2
<
	gT
>::
›î©‹
 /(
T
 
a
)

857 
x
 /
a
;

858 
	gy
 /
a
;

859  *
	gthis
;

862 
	gãm∂©e
 <
˛ass
 
	gT
>

863 
ölöe
 
	gVec2
<
	gT
>

864 
	gVec2
<
	gT
>::
›î©‹
 / (c⁄° 
Vec2
 &
v
) const

866  
Vec2
 (
x
 / 
v
.x, 
y
 / v.y);

869 
	gãm∂©e
 <
˛ass
 
	gT
>

870 
ölöe
 
	gVec2
<
	gT
>

871 
	gVec2
<
	gT
>::
›î©‹
 / (
T
 
a
) const

873  
Vec2
 (
x
 / 
a
, 
y
 /á);

876 
	gãm∂©e
 <
˛ass
 
	gT
>

877 
ölöe
 
T


878 
	gVec2
<
	gT
>::
	$Àngth
 () const

880  
M©h
<
T
>::
	`sqπ
 (
	`dŸ
 (*
this
));

881 
	}
}

883 
	gãm∂©e
 <
˛ass
 
	gT
>

884 
ölöe
 
T


885 
	gVec2
<
	gT
>::
	$Àngth2
 () const

887  
	`dŸ
 (*
this
);

888 
	}
}

890 
	gãm∂©e
 <
˛ass
 
	gT
>

891 c⁄° 
	gVec2
<
	gT
> &

892 
	gVec2
<
	gT
>::
	$n‹mÆize
 ()

894 
T
 
l
 = 
	`Àngth
();

896 i‡(
l
 != 0)

898 
x
 /
l
;

899 
y
 /
l
;

902  *
this
;

903 
	}
}

905 
	gãm∂©e
 <
˛ass
 
	gT
>

906 c⁄° 
	gVec2
<
	gT
> &

907 
	gVec2
<
	gT
>::
	$n‹mÆizeExc
 (Ë
	`throw
 (
Iex
::
M©hExc
)

909 
T
 
l
 = 
	`Àngth
();

911 i‡(
l
 == 0)

912 
throw
 
	`NuŒVecExc
 ("CannotÇormalizeÇull vector.");

914 
x
 /
l
;

915 
y
 /
l
;

916  *
this
;

917 
	}
}

919 
	gãm∂©e
 <
˛ass
 
	gT
>

920 
ölöe


921 c⁄° 
	gVec2
<
	gT
> &

922 
	gVec2
<
	gT
>::
	$n‹mÆizeN⁄NuŒ
 ()

924 
T
 
l
 = 
	`Àngth
();

925 
x
 /
l
;

926 
y
 /
l
;

927  *
this
;

928 
	}
}

930 
	gãm∂©e
 <
˛ass
 
	gT
>

931 
	gVec2
<
	gT
>

932 
	gVec2
<
	gT
>::
	$n‹mÆized
 () const

934 
T
 
l
 = 
	`Àngth
();

936 i‡(
l
 == 0)

937  
	`Vec2
 (
	`T
 (0));

939  
	`Vec2
 (
x
 / 
l
, 
y
 /Ü);

940 
	}
}

942 
	gãm∂©e
 <
˛ass
 
	gT
>

943 
	gVec2
<
	gT
>

944 
	gVec2
<
	gT
>::
	$n‹mÆizedExc
 (Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
)

946 
T
 
l
 = 
	`Àngth
();

948 i‡(
l
 == 0)

949 
throw
 
	`NuŒVecExc
 ("CannotÇormalizeÇull vector.");

951  
	`Vec2
 (
x
 / 
l
, 
y
 /Ü);

952 
	}
}

954 
	gãm∂©e
 <
˛ass
 
	gT
>

955 
ölöe


956 
	gVec2
<
	gT
>

957 
	gVec2
<
	gT
>::
	$n‹mÆizedN⁄NuŒ
 () const

959 
T
 
l
 = 
	`Àngth
();

960  
	`Vec2
 (
x
 / 
l
, 
y
 /Ü);

961 
	}
}

968 
	gãm∂©e
 <
˛ass
 
	gT
>

969 
ölöe
 
	gT
 &

970 
	gVec3
<
	gT
>::
›î©‹
 [] (
i
)

972  (&
x
)[
i
];

975 
	gãm∂©e
 <
˛ass
 
	gT
>

976 
ölöe
 c⁄° 
	gT
 &

977 
	gVec3
<
	gT
>::
›î©‹
 [] (
i
) const

979  (&
x
)[
i
];

982 
	gãm∂©e
 <
˛ass
 
	gT
>

983 
ölöe


984 
	gVec3
<
	gT
>::
	$Vec3
 ()

987 
	}
}

989 
ãm∂©e
 <
˛ass
 
T
>

990 
ölöe


991 
Vec3
<
T
>::
	$Vec3
 (
T
 
a
)

993 
x
 = 
y
 = 
z
 = 
a
;

994 
	}
}

996 
	gãm∂©e
 <
˛ass
 
	gT
>

997 
ölöe


998 
	gVec3
<
	gT
>::
	$Vec3
 (
T
 
a
, T 
b
, T 
c
)

1000 
x
 = 
a
;

1001 
y
 = 
b
;

1002 
z
 = 
c
;

1003 
	}
}

1005 
	gãm∂©e
 <
˛ass
 
	gT
>

1006 
ölöe


1007 
	gVec3
<
	gT
>::
	$Vec3
 (c⁄° 
Vec3
 &
v
)

1009 
x
 = 
v
.x;

1010 
y
 = 
v
.y;

1011 
z
 = 
v
.z;

1012 
	}
}

1014 
	gãm∂©e
 <
˛ass
 
	gT
>

1015 
	gãm∂©e
 <
˛ass
 
	gS
>

1016 
ölöe


1017 
	gVec3
<
	gT
>::
Vec3
 (c⁄° Vec3<
S
> &
v
)

1019 
x
 = 
T
 (
v
.x);

1020 
	gy
 = 
T
 (
v
.
y
);

1021 
	gz
 = 
T
 (
v
.
z
);

1024 
	gãm∂©e
 <
˛ass
 
	gT
>

1025 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1026 
	gVec3
<
	gT
>::
›î©‹
 = (c⁄° 
Vec3
 &
v
)

1028 
x
 = 
v
.x;

1029 
	gy
 = 
v
.
y
;

1030 
	gz
 = 
v
.
z
;

1031  *
	gthis
;

1034 
	gãm∂©e
 <
˛ass
 
	gT
>

1035 
	gãm∂©e
 <
˛ass
 
	gS
>

1036 
ölöe
 

1037 
	gVec3
<
	gT
>::
	$£tVÆue
 (
S
 
a
, S 
b
, S 
c
)

1039 
x
 = 
	`T
 (
a
);

1040 
y
 = 
	`T
 (
b
);

1041 
z
 = 
	`T
 (
c
);

1042 
	}
}

1044 
	gãm∂©e
 <
˛ass
 
	gT
>

1045 
	gãm∂©e
 <
˛ass
 
	gS
>

1046 
ölöe
 

1047 
	gVec3
<
	gT
>::
£tVÆue
 (c⁄° 
Vec3
<
S
> &
v
)

1049 
x
 = 
T
 (
v
.x);

1050 
	gy
 = 
T
 (
v
.
y
);

1051 
	gz
 = 
T
 (
v
.
z
);

1054 
	gãm∂©e
 <
˛ass
 
	gT
>

1055 
	gãm∂©e
 <
˛ass
 
	gS
>

1056 
ölöe
 

1057 
	gVec3
<
	gT
>::
	$gëVÆue
 (
S
 &
a
, S &
b
, S &
c
) const

1059 
a
 = 
	`S
 (
x
);

1060 
b
 = 
	`S
 (
y
);

1061 
c
 = 
	`S
 (
z
);

1062 
	}
}

1064 
	gãm∂©e
 <
˛ass
 
	gT
>

1065 
	gãm∂©e
 <
˛ass
 
	gS
>

1066 
ölöe
 

1067 
	gVec3
<
	gT
>::
gëVÆue
 (
Vec3
<
S
> &
v
) const

1069 
v
.
x
 = 
S
 (x);

1070 
	gv
.
	gy
 = 
S
 (
y
);

1071 
	gv
.
	gz
 = 
S
 (
z
);

1074 
	gãm∂©e
 <
˛ass
 
	gT
>

1075 
ölöe
 
T
 *

1076 
	gVec3
<
	gT
>::
	$gëVÆue
()

1078  (
T
 *Ë&
x
;

1079 
	}
}

1081 
	gãm∂©e
 <
˛ass
 
	gT
>

1082 
ölöe
 c⁄° 
T
 *

1083 
	gVec3
<
	gT
>::
	$gëVÆue
() const

1085  (c⁄° 
T
 *Ë&
x
;

1086 
	}
}

1088 
	gãm∂©e
 <
˛ass
 
	gT
>

1089 
	gãm∂©e
 <
˛ass
 
	gS
>

1090 
ölöe
 
boﬁ


1091 
	gVec3
<
	gT
>::
›î©‹
 =(c⁄° 
Vec3
<
S
> &
v
) const

1093  
x
 =
v
.x && 
y
 =v.y && 
z
 == v.z;

1096 
	gãm∂©e
 <
˛ass
 
	gT
>

1097 
	gãm∂©e
 <
˛ass
 
	gS
>

1098 
ölöe
 
boﬁ


1099 
	gVec3
<
	gT
>::
›î©‹
 !(c⁄° 
Vec3
<
S
> &
v
) const

1101  
x
 !
v
.x || 
y
 !v.y || 
z
 != v.z;

1104 
	gãm∂©e
 <
˛ass
 
	gT
>

1105 
boﬁ


1106 
	gVec3
<
	gT
>::
equÆWôhAbsEº‹
 (c⁄° 
Vec3
<
T
> &
v
, T 
e
) const

1108 
	gi
 = 0; i < 3; i++)

1109 i‡(!
	gIm©h
::
equÆWôhAbsEº‹
 ((*
this
)[
i
], 
v
[i], 
e
))

1110  
	gÁl£
;

1112  
	gåue
;

1115 
	gãm∂©e
 <
˛ass
 
	gT
>

1116 
boﬁ


1117 
	gVec3
<
	gT
>::
equÆWôhRñEº‹
 (c⁄° 
Vec3
<
T
> &
v
, T 
e
) const

1119 
	gi
 = 0; i < 3; i++)

1120 i‡(!
	gIm©h
::
equÆWôhRñEº‹
 ((*
this
)[
i
], 
v
[i], 
e
))

1121  
	gÁl£
;

1123  
	gåue
;

1126 
	gãm∂©e
 <
˛ass
 
	gT
>

1127 
ölöe
 
T


1128 
	gVec3
<
	gT
>::
	$dŸ
 (c⁄° 
Vec3
 &
v
) const

1130  
x
 * 
v
.x + 
y
 * v.y + 
z
 * v.z;

1131 
	}
}

1133 
	gãm∂©e
 <
˛ass
 
	gT
>

1134 
ölöe
 
T


1135 
	gVec3
<
	gT
>::
›î©‹
 ^ (c⁄° 
Vec3
 &
v
) const

1137  
dŸ
 (
v
);

1140 
	gãm∂©e
 <
˛ass
 
	gT
>

1141 
ölöe
 
	gVec3
<
	gT
>

1142 
	gVec3
<
	gT
>::
	$¸oss
 (c⁄° 
Vec3
 &
v
) const

1144  
	`Vec3
 (
y
 * 
v
.
z
 - z * v.y,

1145 
z
 * 
v
.
x
 - x * v.z,

1146 
x
 * 
v
.
y
 - y * v.x);

1147 
	}
}

1149 
	gãm∂©e
 <
˛ass
 
	gT
>

1150 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1151 
	gVec3
<
	gT
>::
›î©‹
 %(c⁄° 
Vec3
 &
v
)

1153 
T
 
a
 = 
y
 * 
v
.
z
 - z * v.y;

1154 
T
 
	gb
 = 
z
 * 
v
.
x
 - x * v.z;

1155 
T
 
	gc
 = 
x
 * 
v
.
y
 - y * v.x;

1156 
	gx
 = 
a
;

1157 
	gy
 = 
b
;

1158 
	gz
 = 
c
;

1159  *
	gthis
;

1162 
	gãm∂©e
 <
˛ass
 
	gT
>

1163 
ölöe
 
	gVec3
<
	gT
>

1164 
	gVec3
<
	gT
>::
›î©‹
 % (c⁄° 
Vec3
 &
v
) const

1166  
Vec3
 (
y
 * 
v
.
z
 - z * v.y,

1167 
z
 * 
v
.
x
 - x * v.z,

1168 
x
 * 
v
.
y
 - y * v.x);

1171 
	gãm∂©e
 <
˛ass
 
	gT
>

1172 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1173 
	gVec3
<
	gT
>::
›î©‹
 +(c⁄° 
Vec3
 &
v
)

1175 
x
 +
v
.x;

1176 
	gy
 +
v
.
y
;

1177 
	gz
 +
v
.
z
;

1178  *
	gthis
;

1181 
	gãm∂©e
 <
˛ass
 
	gT
>

1182 
ölöe
 
	gVec3
<
	gT
>

1183 
	gVec3
<
	gT
>::
›î©‹
 + (c⁄° 
Vec3
 &
v
) const

1185  
Vec3
 (
x
 + 
v
.x, 
y
 + v.y, 
z
 + v.z);

1188 
	gãm∂©e
 <
˛ass
 
	gT
>

1189 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1190 
	gVec3
<
	gT
>::
›î©‹
 -(c⁄° 
Vec3
 &
v
)

1192 
x
 -
v
.x;

1193 
	gy
 -
v
.
y
;

1194 
	gz
 -
v
.
z
;

1195  *
	gthis
;

1198 
	gãm∂©e
 <
˛ass
 
	gT
>

1199 
ölöe
 
	gVec3
<
	gT
>

1200 
	gVec3
<
	gT
>::
›î©‹
 - (c⁄° 
Vec3
 &
v
) const

1202  
Vec3
 (
x
 - 
v
.x, 
y
 - v.y, 
z
 - v.z);

1205 
	gãm∂©e
 <
˛ass
 
	gT
>

1206 
ölöe
 
	gVec3
<
	gT
>

1207 
	gVec3
<
	gT
>::
›î©‹
 - () const

1209  
Vec3
 (-
x
, -
y
, -
z
);

1212 
	gãm∂©e
 <
˛ass
 
	gT
>

1213 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1214 
	gVec3
<
	gT
>::
	$√g©e
 ()

1216 
x
 = -x;

1217 
y
 = -y;

1218 
z
 = -z;

1219  *
this
;

1220 
	}
}

1222 
	gãm∂©e
 <
˛ass
 
	gT
>

1223 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1224 
	gVec3
<
	gT
>::
›î©‹
 *(c⁄° 
Vec3
 &
v
)

1226 
x
 *
v
.x;

1227 
	gy
 *
v
.
y
;

1228 
	gz
 *
v
.
z
;

1229  *
	gthis
;

1232 
	gãm∂©e
 <
˛ass
 
	gT
>

1233 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1234 
	gVec3
<
	gT
>::
›î©‹
 *(
T
 
a
)

1236 
x
 *
a
;

1237 
	gy
 *
a
;

1238 
	gz
 *
a
;

1239  *
	gthis
;

1242 
	gãm∂©e
 <
˛ass
 
	gT
>

1243 
ölöe
 
	gVec3
<
	gT
>

1244 
	gVec3
<
	gT
>::
›î©‹
 * (c⁄° 
Vec3
 &
v
) const

1246  
Vec3
 (
x
 * 
v
.x, 
y
 * v.y, 
z
 * v.z);

1249 
	gãm∂©e
 <
˛ass
 
	gT
>

1250 
ölöe
 
	gVec3
<
	gT
>

1251 
	gVec3
<
	gT
>::
›î©‹
 * (
T
 
a
) const

1253  
Vec3
 (
x
 * 
a
, 
y
 *á, 
z
 *á);

1256 
	gãm∂©e
 <
˛ass
 
	gT
>

1257 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1258 
	gVec3
<
	gT
>::
›î©‹
 /(c⁄° 
Vec3
 &
v
)

1260 
x
 /
v
.x;

1261 
	gy
 /
v
.
y
;

1262 
	gz
 /
v
.
z
;

1263  *
	gthis
;

1266 
	gãm∂©e
 <
˛ass
 
	gT
>

1267 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1268 
	gVec3
<
	gT
>::
›î©‹
 /(
T
 
a
)

1270 
x
 /
a
;

1271 
	gy
 /
a
;

1272 
	gz
 /
a
;

1273  *
	gthis
;

1276 
	gãm∂©e
 <
˛ass
 
	gT
>

1277 
ölöe
 
	gVec3
<
	gT
>

1278 
	gVec3
<
	gT
>::
›î©‹
 / (c⁄° 
Vec3
 &
v
) const

1280  
Vec3
 (
x
 / 
v
.x, 
y
 / v.y, 
z
 / v.z);

1283 
	gãm∂©e
 <
˛ass
 
	gT
>

1284 
ölöe
 
	gVec3
<
	gT
>

1285 
	gVec3
<
	gT
>::
›î©‹
 / (
T
 
a
) const

1287  
Vec3
 (
x
 / 
a
, 
y
 /á, 
z
 /á);

1291 
	gãm∂©e
 <
˛ass
 
	gT
>

1292 
ölöe
 
T


1293 
	gVec3
<
	gT
>::
	$Àngth
 () const

1295  
M©h
<
T
>::
	`sqπ
 (
	`dŸ
 (*
this
));

1296 
	}
}

1298 
	gãm∂©e
 <
˛ass
 
	gT
>

1299 
ölöe
 
T


1300 
	gVec3
<
	gT
>::
	$Àngth2
 () const

1302  
	`dŸ
 (*
this
);

1303 
	}
}

1305 
	gãm∂©e
 <
˛ass
 
	gT
>

1306 c⁄° 
	gVec3
<
	gT
> &

1307 
	gVec3
<
	gT
>::
	$n‹mÆize
 ()

1309 
T
 
l
 = 
	`Àngth
();

1311 i‡(
l
 != 0)

1313 
x
 /
l
;

1314 
y
 /
l
;

1315 
z
 /
l
;

1318  *
this
;

1319 
	}
}

1321 
	gãm∂©e
 <
˛ass
 
	gT
>

1322 c⁄° 
	gVec3
<
	gT
> &

1323 
	gVec3
<
	gT
>::
	$n‹mÆizeExc
 (Ë
	`throw
 (
Iex
::
M©hExc
)

1325 
T
 
l
 = 
	`Àngth
();

1327 i‡(
l
 == 0)

1328 
throw
 
	`NuŒVecExc
 ("CannotÇormalizeÇull vector.");

1330 
x
 /
l
;

1331 
y
 /
l
;

1332 
z
 /
l
;

1333  *
this
;

1334 
	}
}

1336 
	gãm∂©e
 <
˛ass
 
	gT
>

1337 
ölöe


1338 c⁄° 
	gVec3
<
	gT
> &

1339 
	gVec3
<
	gT
>::
	$n‹mÆizeN⁄NuŒ
 ()

1341 
T
 
l
 = 
	`Àngth
();

1342 
x
 /
l
;

1343 
y
 /
l
;

1344 
z
 /
l
;

1345  *
this
;

1346 
	}
}

1348 
	gãm∂©e
 <
˛ass
 
	gT
>

1349 
	gVec3
<
	gT
>

1350 
	gVec3
<
	gT
>::
	$n‹mÆized
 () const

1352 
T
 
l
 = 
	`Àngth
();

1354 i‡(
l
 == 0)

1355  
	`Vec3
 (
	`T
 (0));

1357  
	`Vec3
 (
x
 / 
l
, 
y
 /Ü, 
z
 /Ü);

1358 
	}
}

1360 
	gãm∂©e
 <
˛ass
 
	gT
>

1361 
	gVec3
<
	gT
>

1362 
	gVec3
<
	gT
>::
	$n‹mÆizedExc
 (Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
)

1364 
T
 
l
 = 
	`Àngth
();

1366 i‡(
l
 == 0)

1367 
throw
 
	`NuŒVecExc
 ("CannotÇormalizeÇull vector.");

1369  
	`Vec3
 (
x
 / 
l
, 
y
 /Ü, 
z
 /Ü);

1370 
	}
}

1372 
	gãm∂©e
 <
˛ass
 
	gT
>

1373 
ölöe


1374 
	gVec3
<
	gT
>

1375 
	gVec3
<
	gT
>::
	$n‹mÆizedN⁄NuŒ
 () const

1377 
T
 
l
 = 
	`Àngth
();

1378  
	`Vec3
 (
x
 / 
l
, 
y
 /Ü, 
z
 /Ü);

1379 
	}
}

1386 
	gãm∂©e
 <
˛ass
 
	gT
>

1387 
	g°d
::
o°ªam
 &

1388 
›î©‹
 << (
°d
::
o°ªam
 &
s
, c⁄° 
	gVec2
<
	gT
> &
	gv
)

1390  
	gs
 << '(' << 
	gv
.
	gx
 << ' ' << v.
	gy
 << ')';

1393 
	gãm∂©e
 <
˛ass
 
	gT
>

1394 
	g°d
::
o°ªam
 &

1395 
›î©‹
 << (
°d
::
o°ªam
 &
s
, c⁄° 
	gVec3
<
	gT
> &
	gv
)

1397  
	gs
 << '(' << 
	gv
.
	gx
 << ' ' << v.
	gy
 << ' ' << v.
	gz
 << ')';

1405 
	gãm∂©e
 <
˛ass
 
	gT
>

1406 
ölöe
 
	gVec2
<
	gT
>

1407 
	g›î©‹
 * (
T
 
	ga
, c⁄° 
	gVec2
<
	gT
> &
	gv
)

1409  
	gVec2
<
	gT
> (
a
 * 
	gv
.
	gx
,á * v.
	gy
);

1412 
	gãm∂©e
 <
˛ass
 
	gT
>

1413 
ölöe
 
	gVec3
<
	gT
>

1414 
	g›î©‹
 * (
T
 
	ga
, c⁄° 
	gVec3
<
	gT
> &
	gv
)

1416  
	gVec3
<
	gT
> (
a
 * 
	gv
.
	gx
,á * v.
	gy
,á * v.
	gz
);

1420 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


1421 #¥agm®
w¨nög
(:4290)

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVecAlgo.h

37 #i‚de‡
INCLUDED_IMATHVECALGO_H


38 
	#INCLUDED_IMATHVECALGO_H


	)

50 
	~"Im©hVec.h
"

51 
	~"Im©hLimôs.h
"

53 
«me•a˚
 
	gIm©h
 {

60 
	gãm∂©e
 <
˛ass
 
	gVec
> 
Vec
 
¥oje˘
 (c⁄° Ve¯&
s
, c⁄° Ve¯&
t
);

68 
	gãm∂©e
 <
˛ass
 
	gVec
> 
Vec
 
‹thog⁄Æ
 (c⁄° Ve¯&
s
, c⁄° Ve¯&
t
);

76 
	gãm∂©e
 <
˛ass
 
	gVec
> 
Vec
 
ªÊe˘
 (c⁄° Ve¯&
s
, c⁄° Ve¯&
t
);

84 
	gãm∂©e
 <
˛ass
 
	gVec
> 
Vec
 
˛o£°Vîãx
 (c⁄° Ve¯&
v0
,

85 c⁄° 
Vec
 &
v1
,

86 c⁄° 
Vec
 &
v2
,

87 c⁄° 
Vec
 &
p
);

93 
	gãm∂©e
 <
˛ass
 
	gVec
>

94 
Vec


95 
¥oje˘
 (c⁄° 
Vec
 &
s
, c⁄° Ve¯&
t
)

97 
Vec
 
	gsN‹mÆized
 = 
s
.
n‹mÆized
();

98  
	gsN‹mÆized
 * (sN‹mÆized ^ 
	gt
);

101 
	gãm∂©e
 <
˛ass
 
	gVec
>

102 
Vec


103 
‹thog⁄Æ
 (c⁄° 
Vec
 &
s
, c⁄° Ve¯&
t
)

105  
	gt
 - 
¥oje˘
 (
s
, 
t
);

108 
	gãm∂©e
 <
˛ass
 
	gVec
>

109 
Vec


110 
ªÊe˘
 (c⁄° 
Vec
 &
s
, c⁄° Ve¯&
t
)

112  
	gs
 - 
ty≥«me
 
	gVec
::
Ba£Ty≥
(2Ë* (
s
 - 
¥oje˘
(
t
, s));

115 
	gãm∂©e
 <
˛ass
 
	gVec
>

116 
Vec


117 
˛o£°Vîãx
(c⁄° 
Vec
 &
v0
,

118 c⁄° 
Vec
 &
v1
,

119 c⁄° 
Vec
 &
v2
,

120 c⁄° 
Vec
 &
p
)

122 
Vec
 
	g√¨e°
 = 
v0
;

123 
ty≥«me
 
	gVec
::
Ba£Ty≥
 
√¨dŸ
 = (
v0
 - 
p
).
Àngth2
();

124 
ty≥«me
 
	gVec
::
Ba£Ty≥
 
tmp
 = (
v1
 - 
p
).
Àngth2
();

126 i‡(
	gtmp
 < 
	g√¨dŸ
)

128 
	g√¨dŸ
 = 
tmp
;

129 
	g√¨e°
 = 
v1
;

132 
	gtmp
 = (
v2
 - 
p
).
Àngth2
();

134 i‡(
	gtmp
 < 
	g√¨dŸ
)

136 
	g√¨dŸ
 = 
tmp
;

137 
	g√¨e°
 = 
v2
;

140  
	g√¨e°
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h

37 #i‚de‡
INCLUDED_IMF_ARRAY_H


38 
	#INCLUDED_IMF_ARRAY_H


	)

72 
«me•a˚
 
	gImf
 {

75 
	gãm∂©e
 <
˛ass
 
	gT
>

76 ˛as†
	cAºay


78 
	gpublic
:

84 
Aºay
 (Ë{
_d©a
 = 0;}

85 
Aºay
 (
size
Ë{
	g_d©a
 = 
√w
 
T
[size];}

86 ~
Aºay
 (Ë{
	gdñëe
 [] 
	g_d©a
;}

93 
›î©‹
 
	gT
 * (Ë{ 
	g_d©a
;}

94 
›î©‹
 c⁄° 
	gT
 * (Ëc⁄° { 
	g_d©a
;}

109 
ªsizeEø£
 (
size
);

110 
ªsizeEø£Unß„
 (
size
);

113 
	g¥iv©e
:

115 
Aºay
 (const Array &);

116 
	gAºay
 & 
	g›î©‹
 = (c⁄° 
Aºay
 &);

118 
T
 * 
	g_d©a
;

122 
	gãm∂©e
 <
˛ass
 
	gT
>

123 ˛as†
	cAºay2D


125 
	gpublic
:

131 
Aºay2D
 ();

132 
Aºay2D
 (
sizeX
, 
sizeY
);

133 ~
Aºay2D
 ();

140 
T
 * 
	g›î©‹
 [] (
	gx
);

141 c⁄° 
T
 * 
	g›î©‹
 [] (
	gx
) const;

156 
ªsizeEø£
 (
sizeX
, 
sizeY
);

157 
ªsizeEø£Unß„
 (
sizeX
, 
sizeY
);

160 
	g¥iv©e
:

162 
Aºay2D
 (const Array2D &);

163 
	gAºay2D
 & 
	g›î©‹
 = (c⁄° 
Aºay2D
 &);

165 
	g_sizeY
;

166 
T
 * 
	g_d©a
;

174 
	gãm∂©e
 <
˛ass
 
	gT
>

175 
ölöe
 

176 
	gAºay
<
	gT
>::
	$ªsizeEø£
 (
size
)

178 
T
 *
tmp
 = 
√w
 T[
size
];

179 
dñëe
 [] 
_d©a
;

180 
_d©a
 = 
tmp
;

181 
	}
}

184 
	gãm∂©e
 <
˛ass
 
	gT
>

185 
ölöe
 

186 
	gAºay
<
	gT
>::
	$ªsizeEø£Unß„
 (
size
)

188 
dñëe
 [] 
_d©a
;

189 
_d©a
 = 0;

190 
_d©a
 = 
√w
 
T
[
size
];

191 
	}
}

194 
	gãm∂©e
 <
˛ass
 
	gT
>

195 
ölöe


196 
	gAºay2D
<
	gT
>::
	$Aºay2D
 ():

197 
	`_sizeY
 (0), 
	$_d©a
 (0)

200 
	}
}

203 
	gãm∂©e
 <
˛ass
 
	gT
>

204 
ölöe


205 
	gAºay2D
<
	gT
>::
	$Aºay2D
 (
sizeX
, 
sizeY
):

206 
	`_sizeY
 (
sizeY
), 
	$_d©a
 (
√w
 
T
[
sizeX
 * 
sizeY
])

209 
	}
}

212 
	gãm∂©e
 <
˛ass
 
	gT
>

213 
ölöe


214 
	gAºay2D
<
	gT
>::~
	$Aºay2D
 ()

216 
dñëe
 [] 
_d©a
;

217 
	}
}

220 
	gãm∂©e
 <
˛ass
 
	gT
>

221 
ölöe
 
T
 *

222 
	gAºay2D
<
	gT
>::
›î©‹
 [] (
x
)

224  
_d©a
 + 
x
 * 
_sizeY
;

228 
	gãm∂©e
 <
˛ass
 
	gT
>

229 
ölöe
 c⁄° 
T
 *

230 
	gAºay2D
<
	gT
>::
›î©‹
 [] (
x
) const

232  
_d©a
 + 
x
 * 
_sizeY
;

236 
	gãm∂©e
 <
˛ass
 
	gT
>

237 
ölöe
 

238 
	gAºay2D
<
	gT
>::
	$ªsizeEø£
 (
sizeX
, 
sizeY
)

240 
T
 *
tmp
 = 
√w
 T[
sizeX
 * 
sizeY
];

241 
dñëe
 [] 
_d©a
;

242 
_sizeY
 = 
sizeY
;

243 
_d©a
 = 
tmp
;

244 
	}
}

247 
	gãm∂©e
 <
˛ass
 
	gT
>

248 
ölöe
 

249 
	gAºay2D
<
	gT
>::
	$ªsizeEø£Unß„
 (
sizeX
, 
sizeY
)

251 
dñëe
 [] 
_d©a
;

252 
_d©a
 = 0;

253 
_sizeY
 = 0;

254 
_d©a
 = 
√w
 
T
[
sizeX
 * 
sizeY
];

255 
_sizeY
 = 
sizeY
;

256 
	}
}

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h

37 #i‚de‡
INCLUDED_IMF_ATTRIBUTE_H


38 
	#INCLUDED_IMF_ATTRIBUTE_H


	)

46 
	~"IexBa£Exc.h
"

47 
	~<ImfIO.h
>

48 
	~<ImfXdr.h
>

51 
«me•a˚
 
	gImf
 {

54 ˛as†
	cAâribuã


56 
	gpublic
:

62 
Aâribuã
 ();

63 
	gvútuÆ
 ~
Aâribuã
 ();

70 
vútuÆ
 c⁄° * 
ty≥Name
 () const = 0;

77 
vútuÆ
 
Aâribuã
 * 
c›y
 () const = 0;

84 
vútuÆ
 
wrôeVÆueTo
 (
OSåóm
 &
os
,

85 
vîsi⁄
) const = 0;

87 
vútuÆ
 
ªadVÆueFrom
 (
ISåóm
 &
is
,

88 
size
,

89 
vîsi⁄
) = 0;

91 
vútuÆ
 
c›yVÆueFrom
 (c⁄° 
Aâribuã
 &
Ÿhî
) = 0;

98 
Aâribuã
 * 
√wAâribuã
 (c⁄° 
ty≥Name
[]);

105 
boﬁ
 
knownTy≥
 (c⁄° 
ty≥Name
[]);

108 
	g¥Ÿe˘ed
:

115 
ªgi°îAâribuãTy≥
 (c⁄° 
ty≥Name
[],

116 
Aâribuã
 *(*
√wAâribuã
)());

124 
unRegi°îAâribuãTy≥
 (c⁄° 
ty≥Name
[]);

132 
	gãm∂©e
 <
˛ass
 
	gT
>

133 ˛as†
	cTy≥dAâribuã
: 
public
 
Aâribuã


135 
public
:

141 
Ty≥dAâribuã
 ();

142 
Ty≥dAâribuã
 (c⁄° 
T
 &
vÆue
);

143 
Ty≥dAâribuã
 (c⁄° Ty≥dAâribuã<
T
> &
Ÿhî
);

144 
	gvútuÆ
 ~
Ty≥dAâribuã
 ();

151 
	gT
 & 
vÆue
 ();

152 c⁄° 
	gT
 & 
vÆue
 () const;

159 
vútuÆ
 c⁄° * 
ty≥Name
 () const;

167 c⁄° * 
°©icTy≥Name
 ();

174 
Aâribuã
 * 
makeNewAâribuã
 ();

181 
vútuÆ
 
Aâribuã
 * 
c›y
 () const;

189 
vútuÆ
 
wrôeVÆueTo
 (
OSåóm
 &
os
,

190 
vîsi⁄
) const;

192 
vútuÆ
 
ªadVÆueFrom
 (
ISåóm
 &
is
,

193 
size
,

194 
vîsi⁄
);

196 
vútuÆ
 
c›yVÆueFrom
 (c⁄° 
Aâribuã
 &
Ÿhî
);

203 
Ty≥dAâribuã
 * 
ˇ°
 (
Aâribuã
 *
©åibuã
);

204 c⁄° 
Ty≥dAâribuã
 * 
ˇ°
 (c⁄° 
Aâribuã
 *
©åibuã
);

205 
	gTy≥dAâribuã
 & 
ˇ°
 (
Aâribuã
 &
©åibuã
);

206 c⁄° 
	gTy≥dAâribuã
 & 
ˇ°
 (c⁄° 
Aâribuã
 &
©åibuã
);

221 
ªgi°îAâribuãTy≥
 ();

228 
unRegi°îAâribuãTy≥
 ();

231 
	g¥iv©e
:

233 
T
 
_vÆue
;

241 
	gãm∂©e
 <
˛ass
 
	gT
>

242 
	gTy≥dAâribuã
<
	gT
>::
	$Ty≥dAâribuã
 (): 
	`_vÆue
 (
	$T
())

245 
	}
}

248 
ãm∂©e
 <
˛ass
 
T
>

249 
Ty≥dAâribuã
<
T
>::
	$Ty≥dAâribuã
 (c⁄° 
T
 &
vÆue
): 
	$_vÆue
 (
vÆue
)

252 
	}
}

255 
ãm∂©e
 <
˛ass
 
T
>

256 
Ty≥dAâribuã
<
T
>::Ty≥dAâribuã (c⁄° Ty≥dAâribuã<T> &
Ÿhî
):

257 
	$_vÆue
 ()

259 
	`c›yVÆueFrom
 (
Ÿhî
);

260 
	}
}

263 
	gãm∂©e
 <
˛ass
 
	gT
>

264 
	gTy≥dAâribuã
<
	gT
>::~
	$Ty≥dAâribuã
 ()

267 
	}
}

270 
ãm∂©e
 <
˛ass
 
T
>

271 
ölöe
 
T
 &

272 
Ty≥dAâribuã
<
T
>::
	$vÆue
 ()

274  
_vÆue
;

275 
	}
}

278 
	gãm∂©e
 <
˛ass
 
	gT
>

279 
ölöe
 c⁄° 
	gT
 &

280 
	gTy≥dAâribuã
<
	gT
>::
	$vÆue
 () const

282  
_vÆue
;

283 
	}
}

286 
	gãm∂©e
 <
˛ass
 
	gT
>

288 
	gTy≥dAâribuã
<
	gT
>::
	$ty≥Name
 () const

290  
	`°©icTy≥Name
();

291 
	}
}

294 
	gãm∂©e
 <
˛ass
 
	gT
>

295 
Aâribuã
 *

296 
	gTy≥dAâribuã
<
	gT
>::
	$makeNewAâribuã
 ()

298  
√w
 
Ty≥dAâribuã
<
T
>();

299 
	}
}

302 
	gãm∂©e
 <
˛ass
 
	gT
>

303 
Aâribuã
 *

304 
	gTy≥dAâribuã
<
	gT
>::
	$c›y
 () const

306 
Aâribuã
 * 
©åibuã
 = 
√w
 
Ty≥dAâribuã
<
T
>();

307 
©åibuã
->
	`c›yVÆueFrom
 (*
this
);

308  
©åibuã
;

309 
	}
}

312 
	gãm∂©e
 <
˛ass
 
	gT
>

314 
	gTy≥dAâribuã
<
	gT
>::
	$wrôeVÆueTo
 (
OSåóm
 &
os
, 
vîsi⁄
) const

316 
Xdr
::
wrôe
 <
SåómIO
> (
os
, 
_vÆue
);

317 
	}
}

320 
	gãm∂©e
 <
˛ass
 
	gT
>

322 
	gTy≥dAâribuã
<
	gT
>::
	$ªadVÆueFrom
 (
ISåóm
 &
is
, 
size
, 
vîsi⁄
)

324 
Xdr
::
ªad
 <
SåómIO
> (
is
, 
_vÆue
);

325 
	}
}

328 
	gãm∂©e
 <
˛ass
 
	gT
>

330 
	gTy≥dAâribuã
<
	gT
>::
	$c›yVÆueFrom
 (c⁄° 
Aâribuã
 &
Ÿhî
)

332 
_vÆue
 = 
	`ˇ°
(
Ÿhî
)._value;

333 
	}
}

336 
	gãm∂©e
 <
˛ass
 
	gT
>

337 
	gTy≥dAâribuã
<
	gT
> *

338 
	gTy≥dAâribuã
<
	gT
>::
	$ˇ°
 (
Aâribuã
 *
©åibuã
)

340 
Ty≥dAâribuã
<
T
> *
t
 =

341 
dy«mic_ˇ°
 <
Ty≥dAâribuã
<
T
> *> (
©åibuã
);

343 i‡(
t
 == 0)

344 
throw
 
Iex
::
	`Ty≥Exc
 ("UnexpectedáttributeÅype.");

346  
t
;

347 
	}
}

350 
	gãm∂©e
 <
˛ass
 
	gT
>

351 c⁄° 
	gTy≥dAâribuã
<
	gT
> *

352 
	gTy≥dAâribuã
<
	gT
>::
	$ˇ°
 (c⁄° 
Aâribuã
 *
©åibuã
)

354 c⁄° 
Ty≥dAâribuã
<
T
> *
t
 =

355 
dy«mic_ˇ°
 <c⁄° 
Ty≥dAâribuã
<
T
> *> (
©åibuã
);

357 i‡(
t
 == 0)

358 
throw
 
Iex
::
	`Ty≥Exc
 ("UnexpectedáttributeÅype.");

360  
t
;

361 
	}
}

364 
	gãm∂©e
 <
˛ass
 
	gT
>

365 
ölöe
 
	gTy≥dAâribuã
<
	gT
> &

366 
	gTy≥dAâribuã
<
	gT
>::
	$ˇ°
 (
Aâribuã
 &
©åibuã
)

368  *
	`ˇ°
 (&
©åibuã
);

369 
	}
}

372 
	gãm∂©e
 <
˛ass
 
	gT
>

373 
ölöe
 c⁄° 
	gTy≥dAâribuã
<
	gT
> &

374 
	gTy≥dAâribuã
<
	gT
>::
	$ˇ°
 (c⁄° 
Aâribuã
 &
©åibuã
)

376  *
	`ˇ°
 (&
©åibuã
);

377 
	}
}

380 
	gãm∂©e
 <
˛ass
 
	gT
>

381 
ölöe
 

382 
	gTy≥dAâribuã
<
	gT
>::
	$ªgi°îAâribuãTy≥
 ()

384 
Aâribuã
::
	`ªgi°îAâribuãTy≥
 (
	`°©icTy≥Name
(), 
makeNewAâribuã
);

385 
	}
}

388 
	gãm∂©e
 <
˛ass
 
	gT
>

389 
ölöe
 

390 
	gTy≥dAâribuã
<
	gT
>::
	$unRegi°îAâribuãTy≥
 ()

392 
Aâribuã
::
	`unRegi°îAâribuãTy≥
 (
	`°©icTy≥Name
());

393 
	}
}

398 #i‡
deföed
(
OPENEXR_DLL
Ë&& deföed(
_MSC_VER
)

402 #¥agm®
w¨nög
 (
dißbÀ
 : 4275 4661)

404 #i‡
deföed
 (
ILMIMF_EXPORTS
)

405 
	#IMF_EXPIMP_TEMPLATE


	)

407 
	#IMF_EXPIMP_TEMPLATE
 

	)

410 
IMF_EXPIMP_TEMPLATE
 
ãm∂©e
 
˛ass
 
Imf
::
Ty≥dAâribuã
<>;

411 
IMF_EXPIMP_TEMPLATE
 
ãm∂©e
 
˛ass
 
	gImf
::
Ty≥dAâribuã
<>;

413 #¥agm®
w¨nög
( : 4251)

414 #unde‡
EXTERN_TEMPLATE


418 #ifde‡
__MWERKS__


419 
	~<ImfAâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfBoxAttribute.h

37 #i‚de‡
INCLUDED_IMF_BOX_ATTRIBUTE_H


38 
	#INCLUDED_IMF_BOX_ATTRIBUTE_H


	)

47 
	~<ImfAâribuã.h
>

48 
	~"Im©hBox.h
"

51 
«me•a˚
 
	gImf
 {

54 
	gTy≥dAâribuã
<
	tIm©h
::
	tBox2i
> 
	tBox2iAâribuã
;

55 
	gãm∂©e
 <> c⁄° *
	gBox2iAâribuã
::
°©icTy≥Name
 ();

56 
	gãm∂©e
 <> 
	gBox2iAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

57 
	gãm∂©e
 <> 
	gBox2iAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

60 
	gTy≥dAâribuã
<
	tIm©h
::
	tBox2f
> 
	tBox2fAâribuã
;

61 
	gãm∂©e
 <> c⁄° *
	gBox2fAâribuã
::
°©icTy≥Name
 ();

62 
	gãm∂©e
 <> 
	gBox2fAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

63 
	gãm∂©e
 <> 
	gBox2fAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

69 #ifde‡
__MWERKS__


70 
	~<ImfBoxAâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h

35 #i‚de‡
INCLUDED_IMF_C_RGBA_FILE_H


36 
	#INCLUDED_IMF_C_RGBA_FILE_H


	)

39 
	~<°dlib.h
>

41 #ifde‡
__˝lu•lus


49 
	tImfHÆf
;

51 
ImfFlﬂtToHÆf
 (
f
,

52 
ImfHÆf
 *
h
);

54 
ImfFlﬂtToHÆfAºay
 (
n
,

55 c⁄° 
f
[ ],

56 
ImfHÆf
 
h
[ ]);

58 
ImfHÆfToFlﬂt
 (
ImfHÆf
 
h
);

60 
ImfHÆfToFlﬂtAºay
 (
n
,

61 c⁄° 
ImfHÆf
 
h
[ ],

62 
f
[ ]);

68 
	sImfRgba


70 
ImfHÆf
 
r
;

71 
ImfHÆf
 
g
;

72 
ImfHÆf
 
b
;

73 
ImfHÆf
 
a
;

76 
ImfRgba
 
	tImfRgba
;

82 
	#IMF_MAGIC
 20000630

	)

88 
	#IMF_VERSION_NUMBER
 2

	)

94 
	#IMF_INCREASING_Y
 0

	)

95 
	#IMF_DECREASING_Y
 1

	)

96 
	#IMF_RAMDOM_Y
 2

	)

103 
	#IMF_NO_COMPRESSION
 0

	)

104 
	#IMF_RLE_COMPRESSION
 1

	)

105 
	#IMF_ZIPS_COMPRESSION
 2

	)

106 
	#IMF_ZIP_COMPRESSION
 3

	)

107 
	#IMF_PIZ_COMPRESSION
 4

	)

108 
	#IMF_PXR24_COMPRESSION
 5

	)

115 
	#IMF_WRITE_R
 0x01

	)

116 
	#IMF_WRITE_G
 0x02

	)

117 
	#IMF_WRITE_B
 0x04

	)

118 
	#IMF_WRITE_A
 0x08

	)

119 
	#IMF_WRITE_Y
 0x10

	)

120 
	#IMF_WRITE_C
 0x20

	)

121 
	#IMF_WRITE_RGB
 0x07

	)

122 
	#IMF_WRITE_RGBA
 0x0f

	)

123 
	#IMF_WRITE_YC
 0x30

	)

124 
	#IMF_WRITE_YA
 0x18

	)

125 
	#IMF_WRITE_YCA
 0x38

	)

132 
	#IMF_ONE_LEVEL
 0

	)

133 
	#IMF_MIPMAP_LEVELS
 1

	)

134 
	#IMF_RIPMAP_LEVELS
 2

	)

141 
	#IMF_ROUND_DOWN
 0

	)

142 
	#IMF_ROUND_UP
 1

	)

149 
ImfHódî
;

150 
ImfHódî
 
	tImfHódî
;

152 
ImfHódî
 * 
ImfNewHódî
 ();

154 
ImfDñëeHódî
 (
ImfHódî
 *
hdr
);

156 
ImfHódî
 * 
ImfC›yHódî
 (c⁄° ImfHódî *
hdr
);

158 
ImfHódîSëDi•œyWödow
 (
ImfHódî
 *
hdr
,

159 
xMö
, 
yMö
,

160 
xMax
, 
yMax
);

162 
ImfHódîDi•œyWödow
 (c⁄° 
ImfHódî
 *
hdr
,

163 *
xMö
, *
yMö
,

164 *
xMax
, *
yMax
);

166 
ImfHódîSëD©aWödow
 (
ImfHódî
 *
hdr
,

167 
xMö
, 
yMö
,

168 
xMax
, 
yMax
);

170 
ImfHódîD©aWödow
 (c⁄° 
ImfHódî
 *
hdr
,

171 *
xMö
, *
yMö
,

172 *
xMax
, *
yMax
);

174 
ImfHódîSëPixñA•e˘R©io
 (
ImfHódî
 *
hdr
,

175 
pixñA•e˘R©io
);

177 
ImfHódîPixñA•e˘R©io
 (c⁄° 
ImfHódî
 *
hdr
);

179 
ImfHódîSëS¸ìnWödowCíãr
 (
ImfHódî
 *
hdr
,

180 
x
, 
y
);

182 
ImfHódîS¸ìnWödowCíãr
 (c⁄° 
ImfHódî
 *
hdr
,

183 *
x
, *
y
);

185 
ImfHódîSëS¸ìnWödowWidth
 (
ImfHódî
 *
hdr
,

186 
width
);

188 
ImfHódîS¸ìnWödowWidth
 (c⁄° 
ImfHódî
 *
hdr
);

190 
ImfHódîSëLöeOrdî
 (
ImfHódî
 *
hdr
,

191 
löeOrdî
);

193 
ImfHódîLöeOrdî
 (c⁄° 
ImfHódî
 *
hdr
);

195 
ImfHódîSëCom¥essi⁄
 (
ImfHódî
 *
hdr
,

196 
com¥essi⁄
);

198 
ImfHódîCom¥essi⁄
 (c⁄° 
ImfHódî
 *
hdr
);

200 
ImfHódîSëI¡Aâribuã
 (
ImfHódî
 *
hdr
,

201 c⁄° 
«me
[],

202 
vÆue
);

204 
ImfHódîI¡Aâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

205 c⁄° 
«me
[],

206 *
vÆue
);

208 
ImfHódîSëFlﬂtAâribuã
 (
ImfHódî
 *
hdr
,

209 c⁄° 
«me
[],

210 
vÆue
);

212 
ImfHódîSëDoubÀAâribuã
 (
ImfHódî
 *
hdr
,

213 c⁄° 
«me
[],

214 
vÆue
);

216 
ImfHódîFlﬂtAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

217 c⁄° 
«me
[],

218 *
vÆue
);

220 
ImfHódîDoubÀAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

221 c⁄° 
«me
[],

222 *
vÆue
);

224 
ImfHódîSëSåögAâribuã
 (
ImfHódî
 *
hdr
,

225 c⁄° 
«me
[],

226 c⁄° 
vÆue
[]);

228 
ImfHódîSåögAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

229 c⁄° 
«me
[],

230 c⁄° **
vÆue
);

232 
ImfHódîSëBox2iAâribuã
 (
ImfHódî
 *
hdr
,

233 c⁄° 
«me
[],

234 
xMö
, 
yMö
,

235 
xMax
, 
yMax
);

237 
ImfHódîBox2iAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

238 c⁄° 
«me
[],

239 *
xMö
, *
yMö
,

240 *
xMax
, *
yMax
);

242 
ImfHódîSëBox2fAâribuã
 (
ImfHódî
 *
hdr
,

243 c⁄° 
«me
[],

244 
xMö
, 
yMö
,

245 
xMax
, 
yMax
);

247 
ImfHódîBox2fAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

248 c⁄° 
«me
[],

249 *
xMö
, *
yMö
,

250 *
xMax
, *
yMax
);

252 
ImfHódîSëV2iAâribuã
 (
ImfHódî
 *
hdr
,

253 c⁄° 
«me
[],

254 
x
, 
y
);

256 
ImfHódîV2iAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

257 c⁄° 
«me
[],

258 *
x
, *
y
);

260 
ImfHódîSëV2fAâribuã
 (
ImfHódî
 *
hdr
,

261 c⁄° 
«me
[],

262 
x
, 
y
);

264 
ImfHódîV2fAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

265 c⁄° 
«me
[],

266 *
x
, *
y
);

268 
ImfHódîSëV3iAâribuã
 (
ImfHódî
 *
hdr
,

269 c⁄° 
«me
[],

270 
x
, 
y
, 
z
);

272 
ImfHódîV3iAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

273 c⁄° 
«me
[],

274 *
x
, *
y
, *
z
);

276 
ImfHódîSëV3fAâribuã
 (
ImfHódî
 *
hdr
,

277 c⁄° 
«me
[],

278 
x
, 
y
, 
z
);

280 
ImfHódîV3fAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

281 c⁄° 
«me
[],

282 *
x
, *
y
, *
z
);

284 
ImfHódîSëM33fAâribuã
 (
ImfHódî
 *
hdr
,

285 c⁄° 
«me
[],

286 c⁄° 
m
[3][3]);

288 
ImfHódîM33fAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

289 c⁄° 
«me
[],

290 
m
[3][3]);

292 
ImfHódîSëM44fAâribuã
 (
ImfHódî
 *
hdr
,

293 c⁄° 
«me
[],

294 c⁄° 
m
[4][4]);

296 
ImfHódîM44fAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

297 c⁄° 
«me
[],

298 
m
[4][4]);

304 
ImfOuçutFûe
;

305 
ImfOuçutFûe
 
	tImfOuçutFûe
;

307 
ImfOuçutFûe
 * 
ImfO≥nOuçutFûe
 (c⁄° 
«me
[],

308 c⁄° 
ImfHódî
 *
hdr
,

309 
ch™√ls
);

311 
ImfClo£OuçutFûe
 (
ImfOuçutFûe
 *
out
);

313 
ImfOuçutSëFømeBuf„r
 (
ImfOuçutFûe
 *
out
,

314 c⁄° 
ImfRgba
 *
ba£
,

315 
size_t
 
xSåide
,

316 
size_t
 
ySåide
);

318 
ImfOuçutWrôePixñs
 (
ImfOuçutFûe
 *
out
,

319 
numSˇnLöes
);

321 
ImfOuçutCuºítSˇnLöe
 (c⁄° 
ImfOuçutFûe
 *
out
);

323 c⁄° 
ImfHódî
 * 
ImfOuçutHódî
 (c⁄° 
ImfOuçutFûe
 *
out
);

325 
ImfOuçutCh™√ls
 (c⁄° 
ImfOuçutFûe
 *
out
);

332 
ImfTûedOuçutFûe
;

333 
ImfTûedOuçutFûe
 
	tImfTûedOuçutFûe
;

335 
ImfTûedOuçutFûe
 * 
ImfO≥nTûedOuçutFûe
 (c⁄° 
«me
[],

336 c⁄° 
ImfHódî
 *
hdr
,

337 
ch™√ls
,

338 
xSize
, 
ySize
,

339 
mode
, 
rmode
);

341 
ImfClo£TûedOuçutFûe
 (
ImfTûedOuçutFûe
 *
out
);

343 
ImfTûedOuçutSëFømeBuf„r
 (
ImfTûedOuçutFûe
 *
out
,

344 c⁄° 
ImfRgba
 *
ba£
,

345 
size_t
 
xSåide
,

346 
size_t
 
ySåide
);

348 
ImfTûedOuçutWrôeTûe
 (
ImfTûedOuçutFûe
 *
out
,

349 
dx
, 
dy
,

350 
lx
, 
ly
);

352 
ImfTûedOuçutWrôeTûes
 (
ImfTûedOuçutFûe
 *
out
,

353 
dxMö
, 
dxMax
,

354 
dyMö
, 
dyMax
,

355 
lx
, 
ly
);

357 c⁄° 
ImfHódî
 * 
ImfTûedOuçutHódî
 (c⁄° 
ImfTûedOuçutFûe
 *
out
);

359 
ImfTûedOuçutCh™√ls
 (c⁄° 
ImfTûedOuçutFûe
 *
out
);

361 
ImfTûedOuçutTûeXSize
 (c⁄° 
ImfTûedOuçutFûe
 *
out
);

363 
ImfTûedOuçutTûeYSize
 (c⁄° 
ImfTûedOuçutFûe
 *
out
);

365 
ImfTûedOuçutLevñMode
 (c⁄° 
ImfTûedOuçutFûe
 *
out
);

366 
ImfTûedOuçutLevñRoundögMode


367 (c⁄° 
ImfTûedOuçutFûe
 *
out
);

374 
ImfI≈utFûe
;

375 
ImfI≈utFûe
 
	tImfI≈utFûe
;

377 
ImfI≈utFûe
 * 
ImfO≥nI≈utFûe
 (c⁄° 
«me
[]);

379 
ImfClo£I≈utFûe
 (
ImfI≈utFûe
 *
ö
);

381 
ImfI≈utSëFømeBuf„r
 (
ImfI≈utFûe
 *
ö
,

382 
ImfRgba
 *
ba£
,

383 
size_t
 
xSåide
,

384 
size_t
 
ySåide
);

386 
ImfI≈utRódPixñs
 (
ImfI≈utFûe
 *
ö
,

387 
sˇnLöe1
,

388 
sˇnLöe2
);

390 c⁄° 
ImfHódî
 * 
ImfI≈utHódî
 (c⁄° 
ImfI≈utFûe
 *
ö
);

392 
ImfI≈utCh™√ls
 (c⁄° 
ImfI≈utFûe
 *
ö
);

394 c⁄° * 
ImfI≈utFûeName
 (c⁄° 
ImfI≈utFûe
 *
ö
);

401 
ImfTûedI≈utFûe
;

402 
ImfTûedI≈utFûe
 
	tImfTûedI≈utFûe
;

404 
ImfTûedI≈utFûe
 * 
ImfO≥nTûedI≈utFûe
 (c⁄° 
«me
[]);

406 
ImfClo£TûedI≈utFûe
 (
ImfTûedI≈utFûe
 *
ö
);

408 
ImfTûedI≈utSëFømeBuf„r
 (
ImfTûedI≈utFûe
 *
ö
,

409 
ImfRgba
 *
ba£
,

410 
size_t
 
xSåide
,

411 
size_t
 
ySåide
);

413 
ImfTûedI≈utRódTûe
 (
ImfTûedI≈utFûe
 *
ö
,

414 
dx
, 
dy
,

415 
lx
, 
ly
);

417 
ImfTûedI≈utRódTûes
 (
ImfTûedI≈utFûe
 *
ö
,

418 
dxMö
, 
dxMax
,

419 
dyMö
, 
dyMax
,

420 
lx
, 
ly
);

422 c⁄° 
ImfHódî
 * 
ImfTûedI≈utHódî
 (c⁄° 
ImfTûedI≈utFûe
 *
ö
);

424 
ImfTûedI≈utCh™√ls
 (c⁄° 
ImfTûedI≈utFûe
 *
ö
);

426 c⁄° * 
ImfTûedI≈utFûeName
 (c⁄° 
ImfTûedI≈utFûe
 *
ö
);

428 
ImfTûedI≈utTûeXSize
 (c⁄° 
ImfTûedI≈utFûe
 *
ö
);

430 
ImfTûedI≈utTûeYSize
 (c⁄° 
ImfTûedI≈utFûe
 *
ö
);

432 
ImfTûedI≈utLevñMode
 (c⁄° 
ImfTûedI≈utFûe
 *
ö
);

434 
ImfTûedI≈utLevñRoundögMode


435 (c⁄° 
ImfTûedI≈utFûe
 *
ö
);

441 
ImfLut
;

442 
ImfLut
 
	tImfLut
;

444 
ImfLut
 * 
ImfNewRound12logLut
 (
ch™√ls
);

446 
ImfLut
 * 
ImfNewRoundNBôLut
 (
n
, 
ch™√ls
);

448 
ImfDñëeLut
 (
ImfLut
 *
lut
);

450 
ImfAµlyLut
 (
ImfLut
 *
lut
,

451 
ImfRgba
 *
d©a
,

452 
nD©a
,

453 
°ride
);

458 c⁄° * 
ImfEº‹Mesßge
 ();

461 #ifde‡
__˝lu•lus


	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h

37 #i‚de‡
INCLUDED_IMF_CHANNEL_LIST_H


38 
	#INCLUDED_IMF_CHANNEL_LIST_H


	)

47 
	~<ImfName.h
>

48 
	~<ImfPixñTy≥.h
>

49 
	~<m≠
>

50 
	~<£t
>

51 
	~<°rög
>

54 
«me•a˚
 
	gImf
 {

57 
	sCh™√l


63 
PixñTy≥
 
	gty≥
;

74 
	gxSam∂ög
;

75 
	gySam∂ög
;

82 
Ch™√l
 (
PixñTy≥
 
ty≥
 = 
HALF
,

83 
xSam∂ög
 = 1,

84 
ySam∂ög
 = 1);

91 
boﬁ
 
	g›î©‹
 =(c⁄° 
Ch™√l
 &
Ÿhî
) const;

95 ˛as†
	cCh™√lLi°


97 
	gpublic
:

103 
ö£π
 (c⁄° 
«me
[],

104 c⁄° 
Ch™√l
 &
ch™√l
);

118 
	gCh™√l
 & 
	g›î©‹
 [] (c⁄° 
	g«me
[]);

119 c⁄° 
	gCh™√l
 & 
	g›î©‹
 [] (c⁄° 
	g«me
[]) const;

121 
Ch™√l
 * 
födCh™√l
 (c⁄° 
«me
[]);

122 c⁄° 
Ch™√l
 * 
födCh™√l
 (c⁄° 
«me
[]) const;

129 
	g°d
::
	tm≠
 <
	tName
, 
	tCh™√l
> 
	tCh™√lM≠
;

131 
˛ass
 
	gIãøt‹
;

132 
˛ass
 
	gC⁄°Iãøt‹
;

134 
Iãøt‹
 
begö
 ();

135 
C⁄°Iãøt‹
 
begö
 () const;

136 
Iãøt‹
 
íd
 ();

137 
C⁄°Iãøt‹
 
íd
 () const;

138 
Iãøt‹
 
föd
 (c⁄° 
«me
[]);

139 
C⁄°Iãøt‹
 
föd
 (c⁄° 
«me
[]) const;

182 
œyîs
 (
°d
::
£t
 <°d::
°rög
> &
œyîNames
) const;

184 
ch™√lsInLayî
 (c⁄° 
°d
::
°rög
 &
œyîName
,

185 
Iãøt‹
 &
fú°
,

186 
Iãøt‹
 &
œ°
);

188 
ch™√lsInLayî
 (c⁄° 
°d
::
°rög
 &
œyîName
,

189 
C⁄°Iãøt‹
 &
fú°
,

190 
C⁄°Iãøt‹
 &
œ°
) const;

205 
ch™√lsWôhPªfix
 (c⁄° 
¥efix
[],

206 
Iãøt‹
 &
fú°
,

207 
Iãøt‹
 &
œ°
);

209 
ch™√lsWôhPªfix
 (c⁄° 
¥efix
[],

210 
C⁄°Iãøt‹
 &
fú°
,

211 
C⁄°Iãøt‹
 &
œ°
) const;

217 
boﬁ
 
	g›î©‹
 =(c⁄° 
Ch™√lLi°
 &
Ÿhî
) const;

219 
	g¥iv©e
:

221 
Ch™√lM≠
 
_m≠
;

229 ˛as†
	cCh™√lLi°
::
Iãøt‹


231 
public
:

233 
Iãøt‹
 ();

234 
Iãøt‹
 (c⁄° 
Ch™√lLi°
::
Ch™√lM≠
::
ôî©‹
 &
i
);

236 
	gIãøt‹
 & 
	g›î©‹
 ++ ();

237 
Iãøt‹
 
	g›î©‹
 ++ ();

239 c⁄° * 
«me
 () const;

240 
	gCh™√l
 & 
ch™√l
 () const;

242 
	g¥iv©e
:

244 
‰õnd
 
˛ass
 
Ch™√lLi°
::
C⁄°Iãøt‹
;

246 
	gCh™√lLi°
::
Ch™√lM≠
::
ôî©‹
 
_i
;

250 ˛as†
	cCh™√lLi°
::
C⁄°Iãøt‹


252 
public
:

254 
C⁄°Iãøt‹
 ();

255 
C⁄°Iãøt‹
 (c⁄° 
Ch™√lLi°
::
Ch™√lM≠
::
c⁄°_ôî©‹
 &
i
);

256 
C⁄°Iãøt‹
 (c⁄° 
Ch™√lLi°
::
Iãøt‹
 &
Ÿhî
);

258 
	gC⁄°Iãøt‹
 & 
	g›î©‹
 ++ ();

259 
C⁄°Iãøt‹
 
	g›î©‹
 ++ ();

261 c⁄° * 
«me
 () const;

262 c⁄° 
	gCh™√l
 & 
ch™√l
 () const;

264 
	g¥iv©e
:

266 
‰õnd
 
boﬁ
 
›î©‹
 =(c⁄° 
C⁄°Iãøt‹
 &, c⁄° 
	gC⁄°Iãøt‹
 &);

267 
‰õnd
 
boﬁ
 
	g›î©‹
 !(c⁄° 
C⁄°Iãøt‹
 &, c⁄° 
	gC⁄°Iãøt‹
 &);

269 
	gCh™√lLi°
::
Ch™√lM≠
::
c⁄°_ôî©‹
 
_i
;

277 
ölöe


278 
	gCh™√lLi°
::
Iãøt‹
::
	$Iãøt‹
 (): 
	$_i
()

281 
	}
}

284 
ölöe


285 
Ch™√lLi°
::
Iãøt‹
::Iãøt‹ (c⁄° Ch™√lLi°::
Ch™√lM≠
::
ôî©‹
 &
i
):

286 
	$_i
 (
i
)

289 
	}
}

292 
ölöe
 
Ch™√lLi°
::
Iãøt‹
 &

293 
Ch™√lLi°
::
Iãøt‹
::
›î©‹
 ++ ()

295 ++
_i
;

296  *
	gthis
;

300 
ölöe
 
	gCh™√lLi°
::
Iãøt‹


301 
Ch™√lLi°
::
Iãøt‹
::
›î©‹
 ++ ()

303 
Iãøt‹
 
tmp
 = *
this
;

304 ++
	g_i
;

305  
	gtmp
;

309 
ölöe
 const *

310 
	gCh™√lLi°
::
Iãøt‹
::
	$«me
 () const

312  *
_i
->
fú°
;

313 
	}
}

316 
ölöe
 
	gCh™√l
 &

317 
	gCh™√lLi°
::
Iãøt‹
::
	$ch™√l
 () const

319  
_i
->
£c⁄d
;

320 
	}
}

323 
ölöe


324 
	gCh™√lLi°
::
C⁄°Iãøt‹
::
	$C⁄°Iãøt‹
 (): 
	$_i
()

327 
	}
}

329 
ölöe


330 
Ch™√lLi°
::
C⁄°Iãøt‹
::ConstIterator

331 (c⁄° 
Ch™√lLi°
::
Ch™√lM≠
::
c⁄°_ôî©‹
 &
i
): 
	$_i
 (
i
)

334 
	}
}

337 
ölöe


338 
Ch™√lLi°
::
C⁄°Iãøt‹
::C⁄°Iãøt‹ (c⁄° Ch™√lLi°::
Iãøt‹
 &
Ÿhî
):

339 
	$_i
 (
Ÿhî
.
_i
)

342 
	}
}

344 
ölöe
 
Ch™√lLi°
::
C⁄°Iãøt‹
 &

345 
Ch™√lLi°
::
C⁄°Iãøt‹
::
›î©‹
 ++ ()

347 ++
_i
;

348  *
	gthis
;

352 
ölöe
 
	gCh™√lLi°
::
C⁄°Iãøt‹


353 
Ch™√lLi°
::
C⁄°Iãøt‹
::
›î©‹
 ++ ()

355 
C⁄°Iãøt‹
 
tmp
 = *
this
;

356 ++
	g_i
;

357  
	gtmp
;

361 
ölöe
 const *

362 
	gCh™√lLi°
::
C⁄°Iãøt‹
::
	$«me
 () const

364  *
_i
->
fú°
;

365 
	}
}

367 
ölöe
 c⁄° 
	gCh™√l
 &

368 
	gCh™√lLi°
::
C⁄°Iãøt‹
::
	$ch™√l
 () const

370  
_i
->
£c⁄d
;

371 
	}
}

374 
ölöe
 
boﬁ


375 
	g›î©‹
 =(c⁄° 
Ch™√lLi°
::
C⁄°Iãøt‹
 &
x
,

376 c⁄° 
	gCh™√lLi°
::
C⁄°Iãøt‹
 &
y
)

378  
x
.
_i
 =
y
._i;

382 
ölöe
 
boﬁ


383 
	g›î©‹
 !(c⁄° 
Ch™√lLi°
::
C⁄°Iãøt‹
 &
x
,

384 c⁄° 
	gCh™√lLi°
::
C⁄°Iãøt‹
 &
y
)

386  !(
x
 =
y
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelListAttribute.h

37 #i‚de‡
INCLUDED_IMF_CHANNEL_LIST_ATTRIBUTE_H


38 
	#INCLUDED_IMF_CHANNEL_LIST_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

47 
	~<ImfCh™√lLi°.h
>

50 
«me•a˚
 
	gImf
 {

53 
	gTy≥dAâribuã
<
	tCh™√lLi°
> 
	tCh™√lLi°Aâribuã
;

54 
	gãm∂©e
 <> c⁄° *
	gCh™√lLi°Aâribuã
::
°©icTy≥Name
 ();

55 
	gãm∂©e
 <> 
	gCh™√lLi°Aâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

56 
	gãm∂©e
 <> 
	gCh™√lLi°Aâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

62 #ifde‡
__MWERKS__


63 
	~<ImfCh™√lLi°Aâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChromaticities.h

36 #i‚de‡
INCLUDED_IMF_CHROMATICITIES_H


37 
	#INCLUDED_IMF_CHROMATICITIES_H


	)

46 
	~"Im©hVec.h
"

47 
	~"Im©hM©rix.h
"

49 
«me•a˚
 
	gImf
 {

52 
	sChrom©icôõs


54 
	gIm©h
::
V2f
 
ªd
;

55 
	gIm©h
::
V2f
 
gªí
;

56 
	gIm©h
::
V2f
 
blue
;

57 
	gIm©h
::
V2f
 
whôe
;

59 
Chrom©icôõs
 (c⁄° 
Im©h
::
V2f
 &
ªd
 = Imath::V2f (0.6400f, 0.3300f),

60 c⁄° 
Im©h
::
V2f
 &
gªí
 = Imath::V2f (0.3000f, 0.6000f),

61 c⁄° 
Im©h
::
V2f
 &
blue
 = Imath::V2f (0.1500f, 0.0600f),

62 c⁄° 
Im©h
::
V2f
 &
whôe
 = Imath::V2f (0.3127f, 0.3290f));

121 
	gIm©h
::
M44f
 
RGBtoXYZ
 (c⁄° 
Chrom©icôõs
 
chroma
, 
Y
);

122 
	gIm©h
::
M44f
 
XYZtoRGB
 (c⁄° 
Chrom©icôõs
 
chroma
, 
Y
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChromaticitiesAttribute.h

36 #i‚de‡
INCLUDED_IMF_CHROMATICITIES_ATTRIBUTE_H


37 
	#INCLUDED_IMF_CHROMATICITIES_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

47 
	~<ImfChrom©icôõs.h
>

50 
«me•a˚
 
	gImf
 {

53 
	gTy≥dAâribuã
<
	tChrom©icôõs
> 
	tChrom©icôõsAâribuã
;

55 
	gãm∂©e
 <>

56 c⁄° *
	gChrom©icôõsAâribuã
::
°©icTy≥Name
 ();

58 
	gãm∂©e
 <>

59 
	gChrom©icôõsAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

61 
	gãm∂©e
 <>

62 
	gChrom©icôõsAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

68 #ifde‡
__MWERKS__


69 
	~<ImfChrom©icôõsAâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompression.h

37 #i‚de‡
INCLUDED_IMF_COMPRESSION_H


38 
	#INCLUDED_IMF_COMPRESSION_H


	)

46 
«me•a˚
 
	gImf
 {

49 
	eCom¥essi⁄


51 
	gNO_COMPRESSION
 = 0,

52 
	gRLE_COMPRESSION
 = 1,

53 
	gZIPS_COMPRESSION
 = 2,

54 
	gZIP_COMPRESSION
 = 3,

55 
	gPIZ_COMPRESSION
 = 4,

56 
	gPXR24_COMPRESSION
 = 5,

58 
	gNUM_COMPRESSION_METHODS


	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompressionAttribute.h

37 #i‚de‡
INCLUDED_IMF_COMPRESSION_ATTRIBUTE_H


38 
	#INCLUDED_IMF_COMPRESSION_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

47 
	~<ImfCom¥essi⁄.h
>

50 
«me•a˚
 
	gImf
 {

53 
	gTy≥dAâribuã
<
	tCom¥essi⁄
> 
	tCom¥essi⁄Aâribuã
;

54 
	gãm∂©e
 <> c⁄° *
	gCom¥essi⁄Aâribuã
::
°©icTy≥Name
 ();

55 
	gãm∂©e
 <> 
	gCom¥essi⁄Aâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

56 
	gãm∂©e
 <> 
	gCom¥essi⁄Aâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

62 #ifde‡
__MWERKS__


63 
	~<ImfCom¥essi⁄Aâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfConvert.h

36 #i‚de‡
INCLUDED_IMF_CONVERT_H


37 
	#INCLUDED_IMF_CONVERT_H


	)

49 
	~"hÆf.h
"

52 
«me•a˚
 
	gImf
 {

73 
hÆfToUöt
 (
hÆf
 
h
);

74 
ÊﬂtToUöt
 (
f
);

98 
hÆf
 
uötToHÆf
 (
ui
);

99 
hÆf
 
ÊﬂtToHÆf
 (
f
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfDoubleAttribute.h

37 #i‚de‡
INCLUDED_IMF_DOUBLE_ATTRIBUTE_H


38 
	#INCLUDED_IMF_DOUBLE_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

49 
«me•a˚
 
	gImf
 {

52 
	gTy≥dAâribuã
<> 
	tDoubÀAâribuã
;

53 
	gãm∂©e
 <> c⁄° *
	gDoubÀAâribuã
::
°©icTy≥Name
 ();

59 #ifde‡
__MWERKS__


60 
	~<ImfDoubÀAâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h

36 #i‚de‡
INCLUDED_IMF_ENVMAP_H


37 
	#INCLUDED_IMF_ENVMAP_H


	)

75 
	~"Im©hBox.h
"

77 
«me•a˚
 
	gImf
 {

83 
	eEnvm≠


85 
	gENVMAP_LATLONG
 = 0,

86 
	gENVMAP_CUBE
 = 1,

88 
	gNUM_ENVMAPTYPES


111 
«me•a˚
 
	gL©L⁄gM≠


119 
	gIm©h
::
V2f
 
œtL⁄g
 (c⁄° 
Im©h
::
V3f
 &
dúe˘i⁄
);

128 
	gIm©h
::
V2f
 
œtL⁄g
 (c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

129 c⁄° 
Im©h
::
V2f
 &
pixñPosôi⁄
);

137 
	gIm©h
::
V2f
 
pixñPosôi⁄
 (c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

138 c⁄° 
Im©h
::
V2f
 &
œtL⁄g
);

147 
	gIm©h
::
V2f
 
pixñPosôi⁄
 (c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

148 c⁄° 
Im©h
::
V3f
 &
dúe˘i⁄
);

156 
	gIm©h
::
V3f
 
dúe˘i⁄
 (c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

157 c⁄° 
Im©h
::
V2f
 &
pixñPosôi⁄
);

247 
	eCubeM≠Fa˚


249 
	gCUBEFACE_POS_X
,

250 
	gCUBEFACE_NEG_X
,

251 
	gCUBEFACE_POS_Y
,

252 
	gCUBEFACE_NEG_Y
,

253 
	gCUBEFACE_POS_Z
,

254 
	gCUBEFACE_NEG_Z
,

257 
«me•a˚
 
	gCubeM≠


263 
sizeOfFa˚
 (c⁄° 
Im©h
::
Box2i
 &
d©aWödow
);

271 
	gIm©h
::
Box2i
 
d©aWödowF‹Fa˚
 (
CubeM≠Fa˚
 
Á˚
,

272 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
);

282 
	gIm©h
::
V2f
 
pixñPosôi⁄
 (
CubeM≠Fa˚
 
Á˚
,

283 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

284 
Im©h
::
V2f
 
posôi⁄InFa˚
);

303 
Á˚AndPixñPosôi⁄
 (c⁄° 
Im©h
::
V3f
 &
dúe˘i⁄
,

304 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

305 
CubeM≠Fa˚
 &
Á˚
,

306 
Im©h
::
V2f
 &
posôi⁄InFa˚
);

314 
	gIm©h
::
V3f
 
dúe˘i⁄
 (
CubeM≠Fa˚
 
Á˚
,

315 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

316 c⁄° 
Im©h
::
V2f
 &
posôi⁄InFa˚
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmapAttribute.h

35 #i‚de‡
INCLUDED_IMF_ENVMAP_ATTRIBUTE_H


36 
	#INCLUDED_IMF_ENVMAP_ATTRIBUTE_H


	)

45 
	~<ImfAâribuã.h
>

46 
	~<ImfEnvm≠.h
>

49 
«me•a˚
 
	gImf
 {

52 
	gTy≥dAâribuã
<
	tEnvm≠
> 
	tEnvm≠Aâribuã
;

53 
	gãm∂©e
 <> c⁄° *
	gEnvm≠Aâribuã
::
°©icTy≥Name
 ();

54 
	gãm∂©e
 <> 
	gEnvm≠Aâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

55 
	gãm∂©e
 <> 
	gEnvm≠Aâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

61 #ifde‡
__MWERKS__


62 
	~<ImfEnvm≠Aâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFloatAttribute.h

37 #i‚de‡
INCLUDED_IMF_FLOAT_ATTRIBUTE_H


38 
	#INCLUDED_IMF_FLOAT_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

49 
«me•a˚
 
	gImf
 {

52 
	gTy≥dAâribuã
<> 
	tFlﬂtAâribuã
;

53 
	gãm∂©e
 <> c⁄° *
	gFlﬂtAâribuã
::
°©icTy≥Name
 ();

59 #ifde‡
__MWERKS__


60 
	~<ImfFlﬂtAâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h

37 #i‚de‡
INCLUDED_IMF_FRAME_BUFFER_H


38 
	#INCLUDED_IMF_FRAME_BUFFER_H


	)

47 
	~<ImfName.h
>

48 
	~<ImfPixñTy≥.h
>

49 
	~<m≠
>

52 
«me•a˚
 
	gImf
 {

64 
	sSli˚


70 
PixñTy≥
 
	gty≥
;

92 * 
	gba£
;

93 
size_t
 
	gxSåide
;

94 
size_t
 
	gySåide
;

105 
	gxSam∂ög
;

106 
	gySam∂ög
;

114 
	gfûlVÆue
;

129 
boﬁ
 
	gxTûeCo‹ds
;

130 
boﬁ
 
	gyTûeCo‹ds
;

137 
Sli˚
 (
PixñTy≥
 
ty≥
 = 
HALF
,

138 * 
ba£
 = 0,

139 
size_t
 
xSåide
 = 0,

140 
size_t
 
ySåide
 = 0,

141 
xSam∂ög
 = 1,

142 
ySam∂ög
 = 1,

143 
fûlVÆue
 = 0.0,

144 
boﬁ
 
xTûeCo‹ds
 = 
Ál£
,

145 
boﬁ
 
yTûeCo‹ds
 = 
Ál£
);

149 ˛as†
	cFømeBuf„r


151 
	gpublic
:

157 
ö£π
 (c⁄° 
«me
[],

158 c⁄° 
Sli˚
 &
¶i˚
);

172 
	gSli˚
 & 
	g›î©‹
 [] (c⁄° 
	g«me
[]);

173 c⁄° 
	gSli˚
 & 
	g›î©‹
 [] (c⁄° 
	g«me
[]) const;

175 
Sli˚
 * 
födSli˚
 (c⁄° 
«me
[]);

176 c⁄° 
Sli˚
 * 
födSli˚
 (c⁄° 
«me
[]) const;

183 
	g°d
::
	tm≠
 <
	tName
, 
	tSli˚
> 
	tSli˚M≠
;

185 
˛ass
 
	gIãøt‹
;

186 
˛ass
 
	gC⁄°Iãøt‹
;

188 
Iãøt‹
 
begö
 ();

189 
C⁄°Iãøt‹
 
begö
 () const;

190 
Iãøt‹
 
íd
 ();

191 
C⁄°Iãøt‹
 
íd
 () const;

192 
Iãøt‹
 
föd
 (c⁄° 
«me
[]);

193 
C⁄°Iãøt‹
 
föd
 (c⁄° 
«me
[]) const;

195 
	g¥iv©e
:

197 
Sli˚M≠
 
_m≠
;

205 ˛as†
	cFømeBuf„r
::
Iãøt‹


207 
public
:

209 
Iãøt‹
 ();

210 
Iãøt‹
 (c⁄° 
FømeBuf„r
::
Sli˚M≠
::
ôî©‹
 &
i
);

212 
	gIãøt‹
 & 
	g›î©‹
 ++ ();

213 
Iãøt‹
 
	g›î©‹
 ++ ();

215 c⁄° * 
«me
 () const;

216 
	gSli˚
 & 
¶i˚
 () const;

218 
	g¥iv©e
:

220 
‰õnd
 
˛ass
 
FømeBuf„r
::
C⁄°Iãøt‹
;

222 
	gFømeBuf„r
::
Sli˚M≠
::
ôî©‹
 
_i
;

226 ˛as†
	cFømeBuf„r
::
C⁄°Iãøt‹


228 
public
:

230 
C⁄°Iãøt‹
 ();

231 
C⁄°Iãøt‹
 (c⁄° 
FømeBuf„r
::
Sli˚M≠
::
c⁄°_ôî©‹
 &
i
);

232 
C⁄°Iãøt‹
 (c⁄° 
FømeBuf„r
::
Iãøt‹
 &
Ÿhî
);

234 
	gC⁄°Iãøt‹
 & 
	g›î©‹
 ++ ();

235 
C⁄°Iãøt‹
 
	g›î©‹
 ++ ();

237 c⁄° * 
«me
 () const;

238 c⁄° 
	gSli˚
 & 
¶i˚
 () const;

240 
	g¥iv©e
:

242 
‰õnd
 
boﬁ
 
›î©‹
 =(c⁄° 
C⁄°Iãøt‹
 &, c⁄° 
	gC⁄°Iãøt‹
 &);

243 
‰õnd
 
boﬁ
 
	g›î©‹
 !(c⁄° 
C⁄°Iãøt‹
 &, c⁄° 
	gC⁄°Iãøt‹
 &);

245 
	gFømeBuf„r
::
Sli˚M≠
::
c⁄°_ôî©‹
 
_i
;

253 
ölöe


254 
	gFømeBuf„r
::
Iãøt‹
::
	$Iãøt‹
 (): 
	$_i
()

257 
	}
}

260 
ölöe


261 
FømeBuf„r
::
Iãøt‹
::Iãøt‹ (c⁄° FømeBuf„r::
Sli˚M≠
::
ôî©‹
 &
i
):

262 
	$_i
 (
i
)

265 
	}
}

268 
ölöe
 
FømeBuf„r
::
Iãøt‹
 &

269 
FømeBuf„r
::
Iãøt‹
::
›î©‹
 ++ ()

271 ++
_i
;

272  *
	gthis
;

276 
ölöe
 
	gFømeBuf„r
::
Iãøt‹


277 
FømeBuf„r
::
Iãøt‹
::
›î©‹
 ++ ()

279 
Iãøt‹
 
tmp
 = *
this
;

280 ++
	g_i
;

281  
	gtmp
;

285 
ölöe
 const *

286 
	gFømeBuf„r
::
Iãøt‹
::
	$«me
 () const

288  *
_i
->
fú°
;

289 
	}
}

292 
ölöe
 
	gSli˚
 &

293 
	gFømeBuf„r
::
Iãøt‹
::
	$¶i˚
 () const

295  
_i
->
£c⁄d
;

296 
	}
}

299 
ölöe


300 
	gFømeBuf„r
::
C⁄°Iãøt‹
::
	$C⁄°Iãøt‹
 (): 
	$_i
()

303 
	}
}

305 
ölöe


306 
FømeBuf„r
::
C⁄°Iãøt‹
::ConstIterator

307 (c⁄° 
FømeBuf„r
::
Sli˚M≠
::
c⁄°_ôî©‹
 &
i
): 
	$_i
 (
i
)

310 
	}
}

313 
ölöe


314 
FømeBuf„r
::
C⁄°Iãøt‹
::C⁄°Iãøt‹ (c⁄° FømeBuf„r::
Iãøt‹
 &
Ÿhî
):

315 
	$_i
 (
Ÿhî
.
_i
)

318 
	}
}

320 
ölöe
 
FømeBuf„r
::
C⁄°Iãøt‹
 &

321 
FømeBuf„r
::
C⁄°Iãøt‹
::
›î©‹
 ++ ()

323 ++
_i
;

324  *
	gthis
;

328 
ölöe
 
	gFømeBuf„r
::
C⁄°Iãøt‹


329 
FømeBuf„r
::
C⁄°Iãøt‹
::
›î©‹
 ++ ()

331 
C⁄°Iãøt‹
 
tmp
 = *
this
;

332 ++
	g_i
;

333  
	gtmp
;

337 
ölöe
 const *

338 
	gFømeBuf„r
::
C⁄°Iãøt‹
::
	$«me
 () const

340  *
_i
->
fú°
;

341 
	}
}

343 
ölöe
 c⁄° 
	gSli˚
 &

344 
	gFømeBuf„r
::
C⁄°Iãøt‹
::
	$¶i˚
 () const

346  
_i
->
£c⁄d
;

347 
	}
}

350 
ölöe
 
boﬁ


351 
	g›î©‹
 =(c⁄° 
FømeBuf„r
::
C⁄°Iãøt‹
 &
x
,

352 c⁄° 
	gFømeBuf„r
::
C⁄°Iãøt‹
 &
y
)

354  
x
.
_i
 =
y
._i;

358 
ölöe
 
boﬁ


359 
	g›î©‹
 !(c⁄° 
FømeBuf„r
::
C⁄°Iãøt‹
 &
x
,

360 c⁄° 
	gFømeBuf„r
::
C⁄°Iãøt‹
 &
y
)

362  !(
x
 =
y
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h

37 #i‚de‡
INCLUDED_IMF_HEADER_H


38 
	#INCLUDED_IMF_HEADER_H


	)

46 
	~<ImfLöeOrdî.h
>

47 
	~<ImfCom¥essi⁄.h
>

48 
	~<ImfName.h
>

49 
	~<ImfTûeDes¸ùti⁄.h
>

50 
	~<ImfI¡64.h
>

51 
	~"Im©hVec.h
"

52 
	~"Im©hBox.h
"

53 
	~"IexBa£Exc.h
"

54 
	~<m≠
>

55 
	~<iosfwd
>

57 
«me•a˚
 
	gImf
 {

60 
˛ass
 
	gAâribuã
;

61 
˛ass
 
	gCh™√lLi°
;

62 
˛ass
 
	gISåóm
;

63 
˛ass
 
	gOSåóm
;

64 
˛ass
 
	gPªvõwImage
;

67 ˛as†
	cHódî


69 
	gpublic
:

76 
Hódî
 (
width
 = 64,

77 
height
 = 64,

78 
pixñA•e˘R©io
 = 1,

79 c⁄° 
Im©h
::
V2f
 &
s¸ìnWödowCíãr
 = Imath::V2f (0, 0),

80 
s¸ìnWödowWidth
 = 1,

81 
LöeOrdî
 
löeOrdî
 = 
INCREASING_Y
,

82 
Com¥essi⁄
 = 
ZIP_COMPRESSION
);

90 
Hódî
 (
width
,

91 
height
,

92 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

93 
pixñA•e˘R©io
 = 1,

94 c⁄° 
Im©h
::
V2f
 &
s¸ìnWödowCíãr
 = Imath::V2f (0, 0),

95 
s¸ìnWödowWidth
 = 1,

96 
LöeOrdî
 
löeOrdî
 = 
INCREASING_Y
,

97 
Com¥essi⁄
 = 
ZIP_COMPRESSION
);

105 
Hódî
 (c⁄° 
Im©h
::
Box2i
 &
di•œyWödow
,

106 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

107 
pixñA•e˘R©io
 = 1,

108 c⁄° 
Im©h
::
V2f
 &
s¸ìnWödowCíãr
 = Imath::V2f (0, 0),

109 
s¸ìnWödowWidth
 = 1,

110 
LöeOrdî
 
löeOrdî
 = 
INCREASING_Y
,

111 
Com¥essi⁄
 = 
ZIP_COMPRESSION
);

118 
Hódî
 (c⁄° Hódî &
Ÿhî
);

125 ~
Hódî
 ();

132 
	gHódî
 & 
	g›î©‹
 = (c⁄° 
Hódî
 &
Ÿhî
);

153 
ö£π
 (c⁄° 
«me
[],

154 c⁄° 
Aâribuã
 &
©åibuã
);

176 
	gAâribuã
 & 
	g›î©‹
 [] (c⁄° 
	g«me
[]);

177 c⁄° 
	gAâribuã
 & 
	g›î©‹
 [] (c⁄° 
	g«me
[]) const;

179 
	gãm∂©e
 <
˛ass
 
	gT
> T& 
ty≥dAâribuã
 (c⁄° 
«me
[]);

180 
	gãm∂©e
 <
˛ass
 
	gT
> c⁄° T& 
ty≥dAâribuã
 (c⁄° 
«me
[]) const;

182 
	gãm∂©e
 <
˛ass
 
	gT
> 
T
* 
födTy≥dAâribuã
 (c⁄° 
«me
[]);

183 
	gãm∂©e
 <
˛ass
 
	gT
> c⁄° 
T
* 
födTy≥dAâribuã
 (c⁄° 
«me
[]) const;

190 
	g°d
::
	tm≠
 <
	tName
, 
	tAâribuã
 *> 
	tAâribuãM≠
;

192 
˛ass
 
	gIãøt‹
;

193 
˛ass
 
	gC⁄°Iãøt‹
;

195 
Iãøt‹
 
begö
 ();

196 
C⁄°Iãøt‹
 
begö
 () const;

197 
Iãøt‹
 
íd
 ();

198 
C⁄°Iãøt‹
 
íd
 () const;

199 
Iãøt‹
 
föd
 (c⁄° 
«me
[]);

200 
C⁄°Iãøt‹
 
föd
 (c⁄° 
«me
[]) const;

207 
	gIm©h
::
Box2i
 & 
di•œyWödow
 ();

208 c⁄° 
	gIm©h
::
Box2i
 & 
di•œyWödow
 () const;

210 
	gIm©h
::
Box2i
 & 
d©aWödow
 ();

211 c⁄° 
	gIm©h
::
Box2i
 & 
d©aWödow
 () const;

213 & 
pixñA•e˘R©io
 ();

214 c⁄° & 
pixñA•e˘R©io
 () const;

216 
	gIm©h
::
V2f
 & 
s¸ìnWödowCíãr
 ();

217 c⁄° 
	gIm©h
::
V2f
 & 
s¸ìnWödowCíãr
 () const;

219 & 
s¸ìnWödowWidth
 ();

220 c⁄° & 
s¸ìnWödowWidth
 () const;

222 
	gCh™√lLi°
 & 
ch™√ls
 ();

223 c⁄° 
	gCh™√lLi°
 & 
ch™√ls
 () const;

225 
	gLöeOrdî
 & 
löeOrdî
 ();

226 c⁄° 
	gLöeOrdî
 & 
löeOrdî
 () const;

228 
	gCom¥essi⁄
 & 
com¥essi⁄
 ();

229 c⁄° 
	gCom¥essi⁄
 & 
com¥essi⁄
 () const;

253 
£tTûeDes¸ùti⁄
 (c⁄° 
TûeDes¸ùti⁄
 & 
td
);

255 
	gTûeDes¸ùti⁄
 & 
tûeDes¸ùti⁄
 ();

256 c⁄° 
	gTûeDes¸ùti⁄
 & 
tûeDes¸ùti⁄
 () const;

258 
boﬁ
 
hasTûeDes¸ùti⁄
() const;

282 
£tPªvõwImage
 (c⁄° 
PªvõwImage
 &
p
);

284 
	gPªvõwImage
 & 
¥evõwImage
 ();

285 c⁄° 
	gPªvõwImage
 & 
¥evõwImage
 () const;

287 
boﬁ
 
hasPªvõwImage
 () const;

299 
ßnôyCheck
 (
boﬁ
 
isTûed
 = 
Ál£
) const;

313 
I¡64
 
wrôeTo
 (
OSåóm
 &
os
,

314 
boﬁ
 
isTûed
 = 
Ál£
) const;

316 
ªadFrom
 (
ISåóm
 &
is
, &
vîsi⁄
);

318 
	g¥iv©e
:

320 
AâribuãM≠
 
_m≠
;

328 ˛as†
	cHódî
::
Iãøt‹


330 
public
:

332 
Iãøt‹
 ();

333 
Iãøt‹
 (c⁄° 
Hódî
::
AâribuãM≠
::
ôî©‹
 &
i
);

335 
	gIãøt‹
 & 
	g›î©‹
 ++ ();

336 
Iãøt‹
 
	g›î©‹
 ++ ();

338 c⁄° * 
«me
 () const;

339 
	gAâribuã
 & 
©åibuã
 () const;

341 
	g¥iv©e
:

343 
‰õnd
 
˛ass
 
Hódî
::
C⁄°Iãøt‹
;

345 
	gHódî
::
AâribuãM≠
::
ôî©‹
 
_i
;

349 ˛as†
	cHódî
::
C⁄°Iãøt‹


351 
public
:

353 
C⁄°Iãøt‹
 ();

354 
C⁄°Iãøt‹
 (c⁄° 
Hódî
::
AâribuãM≠
::
c⁄°_ôî©‹
 &
i
);

355 
C⁄°Iãøt‹
 (c⁄° 
Hódî
::
Iãøt‹
 &
Ÿhî
);

357 
	gC⁄°Iãøt‹
 & 
	g›î©‹
 ++ ();

358 
C⁄°Iãøt‹
 
	g›î©‹
 ++ ();

360 c⁄° * 
«me
 () const;

361 c⁄° 
	gAâribuã
 & 
©åibuã
 () const;

363 
	g¥iv©e
:

365 
‰õnd
 
boﬁ
 
›î©‹
 =(c⁄° 
C⁄°Iãøt‹
 &, c⁄° 
	gC⁄°Iãøt‹
 &);

366 
‰õnd
 
boﬁ
 
	g›î©‹
 !(c⁄° 
C⁄°Iãøt‹
 &, c⁄° 
	gC⁄°Iãøt‹
 &);

368 
	gHódî
::
AâribuãM≠
::
c⁄°_ôî©‹
 
_i
;

386 
°©icInôülize
 ();

394 
ölöe


395 
	gHódî
::
Iãøt‹
::
	$Iãøt‹
 (): 
	$_i
()

398 
	}
}

401 
ölöe


402 
Hódî
::
Iãøt‹
::Iãøt‹ (c⁄° Hódî::
AâribuãM≠
::
ôî©‹
 &
i
): 
	$_i
 (
i
)

405 
	}
}

408 
ölöe
 
Hódî
::
Iãøt‹
 &

409 
Hódî
::
Iãøt‹
::
›î©‹
 ++ ()

411 ++
_i
;

412  *
	gthis
;

416 
ölöe
 
	gHódî
::
Iãøt‹


417 
Hódî
::
Iãøt‹
::
›î©‹
 ++ ()

419 
Iãøt‹
 
tmp
 = *
this
;

420 ++
	g_i
;

421  
	gtmp
;

425 
ölöe
 const *

426 
	gHódî
::
Iãøt‹
::
	$«me
 () const

428  *
_i
->
fú°
;

429 
	}
}

432 
ölöe
 
	gAâribuã
 &

433 
	gHódî
::
Iãøt‹
::
	$©åibuã
 () const

435  *
_i
->
£c⁄d
;

436 
	}
}

439 
ölöe


440 
	gHódî
::
C⁄°Iãøt‹
::
	$C⁄°Iãøt‹
 (): 
	$_i
()

443 
	}
}

445 
ölöe


446 
Hódî
::
C⁄°Iãøt‹
::ConstIterator

447 (c⁄° 
Hódî
::
AâribuãM≠
::
c⁄°_ôî©‹
 &
i
): 
	$_i
 (
i
)

450 
	}
}

453 
ölöe


454 
Hódî
::
C⁄°Iãøt‹
::C⁄°Iãøt‹ (c⁄° Hódî::
Iãøt‹
 &
Ÿhî
):

455 
	$_i
 (
Ÿhî
.
_i
)

458 
	}
}

460 
ölöe
 
Hódî
::
C⁄°Iãøt‹
 &

461 
Hódî
::
C⁄°Iãøt‹
::
›î©‹
 ++ ()

463 ++
_i
;

464  *
	gthis
;

468 
ölöe
 
	gHódî
::
C⁄°Iãøt‹


469 
Hódî
::
C⁄°Iãøt‹
::
›î©‹
 ++ ()

471 
C⁄°Iãøt‹
 
tmp
 = *
this
;

472 ++
	g_i
;

473  
	gtmp
;

477 
ölöe
 const *

478 
	gHódî
::
C⁄°Iãøt‹
::
	$«me
 () const

480  *
_i
->
fú°
;

481 
	}
}

484 
ölöe
 c⁄° 
	gAâribuã
 &

485 
	gHódî
::
C⁄°Iãøt‹
::
	$©åibuã
 () const

487  *
_i
->
£c⁄d
;

488 
	}
}

491 
ölöe
 
boﬁ


492 
	g›î©‹
 =(c⁄° 
Hódî
::
C⁄°Iãøt‹
 &
x
, c⁄° 
	gHódî
::C⁄°Iãøt‹ &
y
)

494  
x
.
_i
 =
y
._i;

498 
ölöe
 
boﬁ


499 
	g›î©‹
 !(c⁄° 
Hódî
::
C⁄°Iãøt‹
 &
x
, c⁄° 
	gHódî
::C⁄°Iãøt‹ &
y
)

501  !(
x
 =
y
);

509 
	gãm∂©e
 <
˛ass
 
	gT
>

510 
	gT
 &

511 
	gHódî
::
	$ty≥dAâribuã
 (c⁄° 
«me
[])

513 
Aâribuã
 *
©å
 = &(*
this
)[
«me
];

514 
T
 *
èâr
 = 
dy«mic_ˇ°
 <T*> (
©å
);

516 i‡(
èâr
 == 0)

517 
throw
 
Iex
::
	`Ty≥Exc
 ("UnexpectedáttributeÅype.");

519  *
èâr
;

520 
	}
}

523 
	gãm∂©e
 <
˛ass
 
	gT
>

524 c⁄° 
	gT
 &

525 
	gHódî
::
	$ty≥dAâribuã
 (c⁄° 
«me
[]) const

527 c⁄° 
Aâribuã
 *
©å
 = &(*
this
)[
«me
];

528 c⁄° 
T
 *
èâr
 = 
dy«mic_ˇ°
 <c⁄° T*> (
©å
);

530 i‡(
èâr
 == 0)

531 
throw
 
Iex
::
	`Ty≥Exc
 ("UnexpectedáttributeÅype.");

533  *
èâr
;

534 
	}
}

537 
	gãm∂©e
 <
˛ass
 
	gT
>

538 
T
 *

539 
	gHódî
::
	$födTy≥dAâribuã
 (c⁄° 
«me
[])

541 
AâribuãM≠
::
ôî©‹
 
i
 = 
_m≠
.
	`föd
 (
«me
);

542  (
i
 =
_m≠
.
	`íd
())? 0: 
dy«mic_ˇ°
 <
T
*> (i->
£c⁄d
);

543 
	}
}

546 
	gãm∂©e
 <
˛ass
 
	gT
>

547 c⁄° 
T
 *

548 
	gHódî
::
	$födTy≥dAâribuã
 (c⁄° 
«me
[]) const

550 
AâribuãM≠
::
c⁄°_ôî©‹
 
i
 = 
_m≠
.
	`föd
 (
«me
);

551  (
i
 =
_m≠
.
	`íd
())? 0: 
dy«mic_ˇ°
 <c⁄° 
T
*> (i->
£c⁄d
);

552 
	}
}

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHuf.h

37 #i‚de‡
INCLUDED_IMF_HUF_H


38 
	#INCLUDED_IMF_HUF_H


	)

61 
«me•a˚
 
	gImf
 {

65 
hufCom¥ess
 (c⁄° 
øw
[ ],

66 
nRaw
,

67 
com¥es£d
[ ]);

71 
hufUncom¥ess
 (c⁄° 
com¥es£d
[ ],

72 
nCom¥es£d
,

73 
øw
[ ],

74 
nRaw
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIO.h

36 #i‚de‡
INCLUDED_IMF_IO_H


37 
	#INCLUDED_IMF_IO_H


	)

45 
	~<ImfI¡64.h
>

46 
	~<°rög
>

48 
«me•a˚
 
	gImf
 {

54 ˛as†
	cISåóm


56 
	gpublic
:

62 
vútuÆ
 ~
ISåóm
 ();

74 
vútuÆ
 
boﬁ
 
isMem‹yM≠≥d
 () const;

87 
vútuÆ
 
boﬁ
 
ªad
 (
c
[ ], 
n
) = 0;

101 
vútuÆ
 * 
ªadMem‹yM≠≥d
 (
n
);

110 
vútuÆ
 
I¡64
 
ãŒg
 () = 0;

118 
vútuÆ
 
£ekg
 (
I¡64
 
pos
) = 0;

125 
vútuÆ
 
˛ór
 ();

132 c⁄° * 
fûeName
 () const;

134 
	g¥Ÿe˘ed
:

136 
ISåóm
 (c⁄° 
fûeName
[]);

138 
	g¥iv©e
:

140 
ISåóm
 (const IStream &);

141 
	gISåóm
 & 
	g›î©‹
 = (c⁄° 
ISåóm
 &);

143 
	g°d
::
°rög
 
_fûeName
;

151 ˛as†
	cOSåóm


153 
	gpublic
:

159 
vútuÆ
 ~
OSåóm
 ();

170 
vútuÆ
 
wrôe
 (c⁄° 
c
[ ], 
n
) = 0;

180 
vútuÆ
 
I¡64
 
ãŒp
 () = 0;

188 
vútuÆ
 
£ekp
 (
I¡64
 
pos
) = 0;

195 c⁄° * 
fûeName
 () const;

197 
	g¥Ÿe˘ed
:

199 
OSåóm
 (c⁄° 
fûeName
[]);

201 
	g¥iv©e
:

203 
OSåóm
 (const OStream &);

204 
	gOSåóm
 & 
	g›î©‹
 = (c⁄° 
OSåóm
 &);

206 
	g°d
::
°rög
 
_fûeName
;

214 
	sSåómIO


217 
wrôeCh¨s
 (
OSåóm
 &
os
, c⁄° 
c
[ ], 
n
)

219 
	gos
.
wrôe
 (
c
, 
n
);

222 
boﬁ


223 
ªadCh¨s
 (
ISåóm
 &
is
, 
c
[ ], 
n
)

225  
	gis
.
ªad
 (
c
, 
n
);

230 
	sCh¨PåIO


233 
wrôeCh¨s
 (*&
›
, c⁄° 
c
[ ], 
n
)

235 
	gn
--)

236 *
	g›
++ = *
c
++;

239 
boﬁ


240 
ªadCh¨s
 (c⁄° *&
ù
, 
c
[ ], 
n
)

242 
	gn
--)

243 *
	gc
++ = *
ù
++;

245  
	gåue
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfInputFile.h

36 #i‚de‡
INCLUDED_IMF_INPUT_FILE_H


37 
	#INCLUDED_IMF_INPUT_FILE_H


	)

46 
	~<ImfHódî.h
>

47 
	~<ImfFømeBuf„r.h
>

48 
	~<ImfTûedOuçutFûe.h
>

49 
	~<°rög
>

50 
	~<f°ªam
>

51 
	~<ImfThªadög.h
>

53 
«me•a˚
 
	gImf
 {

55 
˛ass
 
	gTûedI≈utFûe
;

56 
˛ass
 
	gSˇnLöeI≈utFûe
;

59 ˛as†
	cI≈utFûe


61 
	gpublic
:

71 
I≈utFûe
 (c⁄° 
fûeName
[], 
numThªads
 = 
globÆThªadCou¡
());

83 
I≈utFûe
 (
ISåóm
 &
is
, 
numThªads
 = 
globÆThªadCou¡
());

90 
	gvútuÆ
 ~
I≈utFûe
 ();

97 c⁄° * 
fûeName
 () const;

104 c⁄° 
	gHódî
 & 
hódî
 () const;

111 
vîsi⁄
 () const;

125 
£tFømeBuf„r
 (c⁄° 
FømeBuf„r
 &
‰ameBuf„r
);

132 c⁄° 
	gFømeBuf„r
 & 
‰ameBuf„r
 () const;

144 
boﬁ
 
isCom∂ëe
 () const;

166 
ªadPixñs
 (
sˇnLöe1
, 
sˇnLöe2
);

167 
ªadPixñs
 (
sˇnLöe
);

176 
øwPixñD©a
 (
fú°SˇnLöe
,

177 c⁄° *&
pixñD©a
,

178 &
pixñD©aSize
);

186 
øwTûeD©a
 (&
dx
, &
dy
,

187 &
lx
, &
ly
,

188 c⁄° *&
pixñD©a
,

189 &
pixñD©aSize
);

191 
	gD©a
;

193 
	g¥iv©e
:

195 
I≈utFûe
 (const InputFile &);

196 
	gI≈utFûe
 & 
	g›î©‹
 = (c⁄° 
I≈utFûe
 &);

198 
öôülize
 ();

199 
TûedI≈utFûe
 * 
tFûe
 ();

201 
‰õnd
 
	gTûedOuçutFûe
::
c›yPixñs
 (
I≈utFûe
 &);

203 
D©a
 * 
	g_d©a
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfInt64.h

36 #i‚de‡
INCLUDED_IMF_INT64_H


37 
	#INCLUDED_IMF_INT64_H


	)

45 
	~<limôs.h
>

47 
«me•a˚
 
	gImf
 {

50 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& 
_MSC_VER
 >= 1300

51 
	t__öt64
 
	tI¡64
;

52 #ñi‡
ULONG_MAX
 == 18446744073709551615LU

53 
	tI¡64
;

55 
	tI¡64
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIntAttribute.h

37 #i‚de‡
INCLUDED_IMF_INT_ATTRIBUTE_H


38 
	#INCLUDED_IMF_INT_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

49 
«me•a˚
 
	gImf
 {

52 
	gTy≥dAâribuã
<> 
	tI¡Aâribuã
;

53 
	gãm∂©e
 <> c⁄° *
	gI¡Aâribuã
::
°©icTy≥Name
 ();

59 #ifde‡
__MWERKS__


60 
	~<ImfI¡Aâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCode.h

36 #i‚de‡
INCLUDED_IMF_KEY_CODE_H


37 
	#INCLUDED_IMF_KEY_CODE_H


	)

99 
«me•a˚
 
	gImf
 {

102 ˛as†
	cKeyCode


104 
	gpublic
:

110 
KeyCode
 (
fûmMfcCode
 = 0,

111 
fûmTy≥
 = 0,

112 
¥efix
 = 0,

113 
cou¡
 = 0,

114 
≥rfOff£t
 = 0,

115 
≥rfsPîFøme
 = 4,

116 
≥rfsPîCou¡
 = 64);

118 
KeyCode
 (c⁄° KeyCodê&
Ÿhî
);

119 
	gKeyCode
 & 
	g›î©‹
 = (c⁄° 
KeyCode
 &
Ÿhî
);

126 
fûmMfcCode
 () const;

127 
£tFûmMfcCode
 (
fûmMfcCode
);

129 
fûmTy≥
 () const;

130 
£tFûmTy≥
 (
fûmTy≥
);

132 
¥efix
 () const;

133 
£tPªfix
 (
¥efix
);

135 
cou¡
 () const;

136 
£tCou¡
 (
cou¡
);

138 
≥rfOff£t
 () const;

139 
£tPîfOff£t
 (
≥rfOff£t
);

141 
≥rfsPîFøme
 () const;

142 
£tPîfsPîFøme
 (
≥rfsPîFøme
);

144 
≥rfsPîCou¡
 () const;

145 
£tPîfsPîCou¡
 (
≥rfsPîCou¡
);

147 
	g¥iv©e
:

149 
_fûmMfcCode
;

150 
	g_fûmTy≥
;

151 
	g_¥efix
;

152 
	g_cou¡
;

153 
	g_≥rfOff£t
;

154 
	g_≥rfsPîFøme
;

155 
	g_≥rfsPîCou¡
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCodeAttribute.h

36 #i‚de‡
INCLUDED_IMF_KEY_CODE_ATTRIBUTE_H


37 
	#INCLUDED_IMF_KEY_CODE_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

47 
	~<ImfKeyCode.h
>

50 
«me•a˚
 
	gImf
 {

53 
	gTy≥dAâribuã
<
	tKeyCode
> 
	tKeyCodeAâribuã
;

55 
	gãm∂©e
 <>

56 c⁄° *
	gKeyCodeAâribuã
::
°©icTy≥Name
 ();

58 
	gãm∂©e
 <>

59 
	gKeyCodeAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

61 
	gãm∂©e
 <>

62 
	gKeyCodeAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

68 #ifde‡
__MWERKS__


69 
	~<ImfKeyCodeAâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLineOrder.h

37 #i‚de‡
INCLUDED_IMF_LINE_ORDER_H


38 
	#INCLUDED_IMF_LINE_ORDER_H


	)

46 
«me•a˚
 
	gImf
 {

49 
	eLöeOrdî


51 
	gINCREASING_Y
 = 0,

53 
	gDECREASING_Y
 = 1,

55 
	gRANDOM_Y
 = 2,

58 
	gNUM_LINEORDERS


	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLineOrderAttribute.h

37 #i‚de‡
INCLUDED_IMF_LINE_ORDER_ATTRIBUTE_H


38 
	#INCLUDED_IMF_LINE_ORDER_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

47 
	~<ImfLöeOrdî.h
>

50 
«me•a˚
 
	gImf
 {

53 
	gTy≥dAâribuã
<
	tLöeOrdî
> 
	tLöeOrdîAâribuã
;

54 
	gãm∂©e
 <> c⁄° *
	gLöeOrdîAâribuã
::
°©icTy≥Name
 ();

55 
	gãm∂©e
 <> 
	gLöeOrdîAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

56 
	gãm∂©e
 <> 
	gLöeOrdîAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

62 #ifde‡
__MWERKS__


63 
	~<ImfLöeOrdîAâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLut.h

37 #i‚de‡
INCLUDED_IMF_LUT_H


38 
	#INCLUDED_IMF_LUT_H


	)

48 
	~<ImfRgbaFûe.h
>

49 
	~<ImfFømeBuf„r.h
>

50 
	~"Im©hBox.h
"

51 
	~"hÆfFun˘i⁄.h
"

53 
«me•a˚
 
	gImf
 {

59 ˛as†
	cHÆfLut


61 
	gpublic
:

67 
ãm∂©e
 <
˛ass
 
Fun˘i⁄
>

68 
HÆfLut
 (
Fun˘i⁄
 
f
);

75 
≠∂y
 (
hÆf
 *
d©a
,

76 
nD©a
,

77 
°ride
 = 1) const;

84 
≠∂y
 (c⁄° 
Sli˚
 &
d©a
,

85 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
) const;

87 
	g¥iv©e
:

89 
hÆfFun˘i⁄
 <
hÆf
> 
_lut
;

97 ˛as†
	cRgbaLut


99 
	gpublic
:

105 
ãm∂©e
 <
˛ass
 
Fun˘i⁄
>

106 
RgbaLut
 (
Fun˘i⁄
 
f
, 
RgbaCh™√ls
 
chn
 = 
WRITE_RGB
);

113 
≠∂y
 (
Rgba
 *
d©a
,

114 
nD©a
,

115 
°ride
 = 1) const;

122 
≠∂y
 (
Rgba
 *
ba£
,

123 
xSåide
,

124 
ySåide
,

125 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
) const;

127 
	g¥iv©e
:

129 
hÆfFun˘i⁄
 <
hÆf
> 
_lut
;

130 
RgbaCh™√ls
 
	g_chn
;

142 
hÆf
 
round12log
 (hÆ‡
x
);

151 
	sroundNBô


153 
roundNBô
 (
n
):Ç(n) {}

154 
hÆf
 
›î©‹
 (Ë(hÆ‡
x
Ë{ x.
round
(
n
);}

155 
	gn
;

164 
	gãm∂©e
 <
˛ass
 
	gFun˘i⁄
>

165 
	gHÆfLut
::
	$HÆfLut
 (
Fun˘i⁄
 
f
):

166 
	`_lut
(
f
, -
HALF_MAX
, HALF_MAX, 
	`hÆf
 (0),

167 
hÆf
::
	`posInf
(), hÆf::
	`√gInf
(), hÆf::
	$qN™
())

170 
	}
}

173 
ãm∂©e
 <
˛ass
 
Fun˘i⁄
>

174 
RgbaLut
::
	$RgbaLut
 (
Fun˘i⁄
 
f
, 
RgbaCh™√ls
 
chn
):

175 
	`_lut
(
f
, -
HALF_MAX
, HALF_MAX, 
	`hÆf
 (0),

176 
hÆf
::
	`posInf
(), hÆf::
	`√gInf
(), hÆf::
	`qN™
()),

177 
	$_chn
(
chn
)

180 
	}
}

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfMatrixAttribute.h

37 #i‚de‡
INCLUDED_IMF_MATRIX_ATTRIBUTE_H


38 
	#INCLUDED_IMF_MATRIX_ATTRIBUTE_H


	)

47 
	~<ImfAâribuã.h
>

48 
	~"Im©hM©rix.h
"

51 
«me•a˚
 
	gImf
 {

54 
	gTy≥dAâribuã
<
	tIm©h
::
	tM33f
> 
	tM33fAâribuã
;

55 
	gãm∂©e
 <> c⁄° *
	gM33fAâribuã
::
°©icTy≥Name
 ();

56 
	gãm∂©e
 <> 
	gM33fAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

57 
	gãm∂©e
 <> 
	gM33fAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

60 
	gTy≥dAâribuã
<
	tIm©h
::
	tM44f
> 
	tM44fAâribuã
;

61 
	gãm∂©e
 <> c⁄° *
	gM44fAâribuã
::
°©icTy≥Name
 ();

62 
	gãm∂©e
 <> 
	gM44fAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

63 
	gãm∂©e
 <> 
	gM44fAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

69 #ifde‡
__MWERKS__


70 
	~<ImfM©rixAâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h

37 #i‚de‡
INCLUDED_IMF_NAME_H


38 
	#INCLUDED_IMF_NAME_H


	)

47 
	~<°rög.h
>

49 
«me•a˚
 
	gImf
 {

52 ˛as†
	cName


54 
	gpublic
:

60 
Name
 ();

61 
Name
 (c⁄° 
ãxt
[]);

68 
	gName
 & 
	g›î©‹
 = (c⁄° 
ãxt
[]);

75 c⁄° * 
ãxt
 (Ëc⁄° { 
	g_ãxt
;}

76 c⁄° * 
	g›î©‹
 * (Ëc⁄° { 
	g_ãxt
;}

82 c⁄° 
	gSIZE
 = 32;

83 c⁄° 
	gMAX_LENGTH
 = 
SIZE
 - 1;

85 
	g¥iv©e
:

87 
_ãxt
[
SIZE
];

91 
boﬁ
 
	g›î©‹
 =(c⁄° 
Name
 &
x
, c⁄° 
	gName
 &
	gy
);

92 
boﬁ
 
	g›î©‹
 !(c⁄° 
Name
 &
x
, c⁄° 
	gName
 &
	gy
);

93 
boﬁ
 
	g›î©‹
 < (c⁄° 
	gName
 &
	gx
, c⁄° Namê&
	gy
);

100 
ölöe
 
	gName
 &

101 
	gName
::
›î©‹
 = (c⁄° 
ãxt
[])

103 
°∫˝y
 (
_ãxt
, 
ãxt
, 
MAX_LENGTH
);

104  *
	gthis
;

108 
ölöe


109 
	gName
::
	$Name
 ()

111 
_ãxt
[0] = 0;

112 
	}
}

115 
ölöe


116 
	gName
::
	$Name
 (c⁄° 
ãxt
[])

118 *
this
 = 
ãxt
;

119 
_ãxt
 [
MAX_LENGTH
] = 0;

120 
	}
}

123 
ölöe
 
boﬁ


124 
	g›î©‹
 =(c⁄° 
Name
 &
x
, c⁄° 
	gName
 &
	gy
)

126  
°rcmp
 (*
x
, *
y
) == 0;

130 
ölöe
 
boﬁ


131 
	g›î©‹
 !(c⁄° 
Name
 &
x
, c⁄° 
	gName
 &
	gy
)

133  !(
	gx
 =
y
);

137 
ölöe
 
boﬁ


138 
	g›î©‹
 < (c⁄° 
	gName
 &
	gx
, c⁄° Namê&
	gy
)

140  
°rcmp
 (*
x
, *
y
) < 0;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfOpaqueAttribute.h

37 #i‚de‡
INCLUDED_IMF_OPAQUE_ATTRIBUTE_H


38 
	#INCLUDED_IMF_OPAQUE_ATTRIBUTE_H


	)

52 
	~<ImfAâribuã.h
>

53 
	~<ImfAºay.h
>

55 
«me•a˚
 
	gImf
 {

58 ˛as†
	cO∑queAâribuã
: 
public
 
Aâribuã


60 
public
:

66 
O∑queAâribuã
 (c⁄° 
ty≥Name
[]);

67 
O∑queAâribuã
 (c⁄° O∑queAâribuã &
Ÿhî
);

68 
	gvútuÆ
 ~
O∑queAâribuã
 ();

75 
vútuÆ
 c⁄° * 
ty≥Name
 () const;

82 
vútuÆ
 
Aâribuã
 * 
c›y
 () const;

89 
vútuÆ
 
wrôeVÆueTo
 (
OSåóm
 &
os
,

90 
vîsi⁄
) const;

92 
vútuÆ
 
ªadVÆueFrom
 (
ISåóm
 &
is
,

93 
size
,

94 
vîsi⁄
);

96 
vútuÆ
 
c›yVÆueFrom
 (c⁄° 
Aâribuã
 &
Ÿhî
);

99 
	g¥iv©e
:

101 
Aºay
<> 
_ty≥Name
;

102 
	g_d©aSize
;

103 
	gAºay
<> 
	g_d©a
;

110 #ifde‡
__MWERKS__


111 
	~<ImfO∑queAâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfOutputFile.h

37 #i‚de‡
INCLUDED_IMF_OUTPUT_FILE_H


38 
	#INCLUDED_IMF_OUTPUT_FILE_H


	)

46 
	~<ImfHódî.h
>

47 
	~<ImfFømeBuf„r.h
>

48 
	~<ImfThªadög.h
>

50 
«me•a˚
 
	gImf
 {

52 
˛ass
 
	gI≈utFûe
;

53 
	gPªvõwRgba
;

56 ˛as†
	cOuçutFûe


58 
	gpublic
:

71 
OuçutFûe
 (c⁄° 
fûeName
[], c⁄° 
Hódî
 &
hódî
,

72 
numThªads
 = 
globÆThªadCou¡
());

87 
OuçutFûe
 (
OSåóm
 &
os
, c⁄° 
Hódî
 &
hódî
,

88 
numThªads
 = 
globÆThªadCou¡
());

99 
	gvútuÆ
 ~
OuçutFûe
 ();

106 c⁄° * 
fûeName
 () const;

113 c⁄° 
	gHódî
 & 
hódî
 () const;

127 
£tFømeBuf„r
 (c⁄° 
FømeBuf„r
 &
‰ameBuf„r
);

134 c⁄° 
	gFømeBuf„r
 & 
‰ameBuf„r
 () const;

150 
wrôePixñs
 (
numSˇnLöes
 = 1);

174 
cuºítSˇnLöe
 () const;

185 
c›yPixñs
 (
I≈utFûe
 &
ö
);

206 
upd©ePªvõwImage
 (c⁄° 
PªvõwRgba
 
√wPixñs
[]);

223 
bªakSˇnLöe
 (
y
, 
off£t
, 
Àngth
, 
c
);

226 
	gD©a
;

228 
	g¥iv©e
:

230 
OuçutFûe
 (const OutputFile &);

231 
	gOuçutFûe
 & 
	g›î©‹
 = (c⁄° 
OuçutFûe
 &);

233 
öôülize
 (c⁄° 
Hódî
 &
hódî
);

235 
D©a
 * 
	g_d©a
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPixelType.h

37 #i‚de‡
INCLUDED_IMF_PIXEL_TYPE_H


38 
	#INCLUDED_IMF_PIXEL_TYPE_H


	)

46 
«me•a˚
 
	gImf
 {

49 
	ePixñTy≥


51 
	gUINT
 = 0,

52 
	gHALF
 = 1,

53 
	gFLOAT
 = 2,

55 
	gNUM_PIXELTYPES


	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h

36 #i‚de‡
INCLUDED_IMF_PREVIEW_IMAGE_H


37 
	#INCLUDED_IMF_PREVIEW_IMAGE_H


	)

48 
«me•a˚
 
	gImf
 {

51 
	sPªvõwRgba


53 
	gr
;

54 
	gg
;

55 
	gb
;

58 
	ga
;

61 
PªvõwRgba
 (
r
 = 0,

62 
g
 = 0,

63 
b
 = 0,

64 
a
 = 255)

65 : 
r
‘), 
g
(g), 
b
(b), 
a
(a) {}

69 ˛as†
	cPªvõwImage


71 
	gpublic
:

86 
PªvõwImage
 (
width
 = 0,

87 
height
 = 0,

88 c⁄° 
PªvõwRgba
 
pixñs
[] = 0);

94 
PªvõwImage
 (c⁄° PªvõwImagê&
Ÿhî
);

95 ~
PªvõwImage
 ();

97 
	gPªvõwImage
 & 
	g›î©‹
 = (c⁄° 
PªvõwImage
 &
Ÿhî
);

104 
width
 (Ëc⁄° { 
	g_width
;}

105 
height
 (Ëc⁄° { 
	g_height
;}

107 
PªvõwRgba
 * 
pixñs
 (Ë{ 
	g_pixñs
;}

108 c⁄° 
PªvõwRgba
 * 
pixñs
 (Ëc⁄° { 
	g_pixñs
;}

115 
	gPªvõwRgba
 & 
pixñ
 (
x
, 
y
)

116 { 
	g_pixñs
[
y
 * 
_width
 + 
x
];}

118 c⁄° 
	gPªvõwRgba
 & 
pixñ
 (
x
, 
y
) const

119 { 
	g_pixñs
[
y
 * 
_width
 + 
x
];}

121 
	g¥iv©e
:

123 
_width
;

124 
	g_height
;

125 
PªvõwRgba
 * 
	g_pixñs
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImageAttribute.h

36 #i‚de‡
INCLUDED_IMF_PREVIEW_IMAGE_ATTRIBUTE_H


37 
	#INCLUDED_IMF_PREVIEW_IMAGE_ATTRIBUTE_H


	)

45 
	~<ImfAâribuã.h
>

46 
	~<ImfPªvõwImage.h
>

49 
«me•a˚
 
	gImf
 {

52 
	gTy≥dAâribuã
<
	tPªvõwImage
> 
	tPªvõwImageAâribuã
;

54 
	gãm∂©e
 <>

55 c⁄° *
	gPªvõwImageAâribuã
::
°©icTy≥Name
 ();

57 
	gãm∂©e
 <>

58 
	gPªvõwImageAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

60 
	gãm∂©e
 <>

61 
	gPªvõwImageAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

67 #ifde‡
__MWERKS__


68 
	~<ImfPªvõwImageAâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h

36 #i‚de‡
INCLUDED_IMF_RGBA_H


37 
	#INCLUDED_IMF_RGBA_H


	)

45 
	~"hÆf.h
"

47 
«me•a˚
 
	gImf
 {

54 
	sRgba


56 
hÆf
 
	gr
;

57 
hÆf
 
	gg
;

58 
hÆf
 
	gb
;

59 
hÆf
 
	ga
;

61 
Rgba
 () {}

62 
Rgba
 (
hÆf
 
r
, hÆ‡
g
, hÆ‡
b
, hÆ‡
a
 = 1.f):Ñ (r), g (g), b (b),á (a) {}

64 
	gRgba
 & 
	g›î©‹
 = (c⁄° 
Rgba
 &
Ÿhî
)

66 
r
 = 
Ÿhî
.r;

67 
	gg
 = 
Ÿhî
.
g
;

68 
	gb
 = 
Ÿhî
.
b
;

69 
	ga
 = 
Ÿhî
.
a
;

71  *
	gthis
;

80 
	eRgbaCh™√ls


82 
	gWRITE_R
 = 0x01,

83 
	gWRITE_G
 = 0x02,

84 
	gWRITE_B
 = 0x04,

85 
	gWRITE_A
 = 0x08,

87 
	gWRITE_Y
 = 0x10,

90 
	gWRITE_C
 = 0x20,

93 
	gWRITE_RGB
 = 0x07,

94 
	gWRITE_RGBA
 = 0x0f,

96 
	gWRITE_YC
 = 0x30,

97 
	gWRITE_YA
 = 0x18,

98 
	gWRITE_YCA
 = 0x38

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaFile.h

37 #i‚de‡
INCLUDED_IMF_RGBA_FILE_H


38 
	#INCLUDED_IMF_RGBA_FILE_H


	)

50 
	~<ImfHódî.h
>

51 
	~<ImfFømeBuf„r.h
>

52 
	~<ImfRgba.h
>

53 
	~"Im©hVec.h
"

54 
	~"Im©hBox.h
"

55 
	~"hÆf.h
"

56 
	~<ImfThªadög.h
>

58 
«me•a˚
 
	gImf
 {

61 
˛ass
 
	gOuçutFûe
;

62 
˛ass
 
	gI≈utFûe
;

63 
	gPªvõwRgba
;

69 ˛as†
	cRgbaOuçutFûe


71 
	gpublic
:

77 
RgbaOuçutFûe
 (c⁄° 
«me
[],

78 c⁄° 
Hódî
 &
hódî
,

79 
RgbaCh™√ls
 
rgbaCh™√ls
 = 
WRITE_RGBA
,

80 
numThªads
 = 
globÆThªadCou¡
());

89 
RgbaOuçutFûe
 (
OSåóm
 &
os
,

90 c⁄° 
Hódî
 &
hódî
,

91 
RgbaCh™√ls
 
rgbaCh™√ls
 = 
WRITE_RGBA
,

92 
numThªads
 = 
globÆThªadCou¡
());

100 
RgbaOuçutFûe
 (c⁄° 
«me
[],

101 c⁄° 
Im©h
::
Box2i
 &
di•œyWödow
,

102 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
 = Imath::Box2i(),

103 
RgbaCh™√ls
 
rgbaCh™√ls
 = 
WRITE_RGBA
,

104 
pixñA•e˘R©io
 = 1,

105 c⁄° 
Im©h
::
V2f
 
s¸ìnWödowCíãr
 = Imath::V2f (0, 0),

106 
s¸ìnWödowWidth
 = 1,

107 
LöeOrdî
 
löeOrdî
 = 
INCREASING_Y
,

108 
Com¥essi⁄
 
com¥essi⁄
 = 
PIZ_COMPRESSION
,

109 
numThªads
 = 
globÆThªadCou¡
());

118 
RgbaOuçutFûe
 (c⁄° 
«me
[],

119 
width
,

120 
height
,

121 
RgbaCh™√ls
 
rgbaCh™√ls
 = 
WRITE_RGBA
,

122 
pixñA•e˘R©io
 = 1,

123 c⁄° 
Im©h
::
V2f
 
s¸ìnWödowCíãr
 = Imath::V2f (0, 0),

124 
s¸ìnWödowWidth
 = 1,

125 
LöeOrdî
 
löeOrdî
 = 
INCREASING_Y
,

126 
Com¥essi⁄
 
com¥essi⁄
 = 
PIZ_COMPRESSION
,

127 
numThªads
 = 
globÆThªadCou¡
());

134 
	gvútuÆ
 ~
RgbaOuçutFûe
 ();

145 
£tFømeBuf„r
 (c⁄° 
Rgba
 *
ba£
,

146 
size_t
 
xSåide
,

147 
size_t
 
ySåide
);

154 
wrôePixñs
 (
numSˇnLöes
 = 1);

155 
cuºítSˇnLöe
 () const;

162 c⁄° 
	gHódî
 & 
hódî
 () const;

163 c⁄° 
	gFømeBuf„r
 & 
‰ameBuf„r
 () const;

164 c⁄° 
	gIm©h
::
Box2i
 & 
di•œyWödow
 () const;

165 c⁄° 
	gIm©h
::
Box2i
 & 
d©aWödow
 () const;

166 
pixñA•e˘R©io
 () const;

167 c⁄° 
	gIm©h
::
V2f
 
s¸ìnWödowCíãr
 () const;

168 
s¸ìnWödowWidth
 () const;

169 
LöeOrdî
 
löeOrdî
 () const;

170 
Com¥essi⁄
 
com¥essi⁄
 () const;

171 
RgbaCh™√ls
 
ch™√ls
 () const;

178 
upd©ePªvõwImage
 (c⁄° 
PªvõwRgba
[]);

195 
£tYCRoundög
 (
roundY
,

196 
roundC
);

209 
bªakSˇnLöe
 (
y
,

210 
off£t
,

211 
Àngth
,

212 
c
);

213 
	g¥iv©e
:

215 
RgbaOuçutFûe
 (const RgbaOutputFile &);

216 
	gRgbaOuçutFûe
 & 
	g›î©‹
 = (c⁄° 
RgbaOuçutFûe
 &);

218 
˛ass
 
	gToYˇ
;

220 
OuçutFûe
 * 
	g_ouçutFûe
;

221 
ToYˇ
 * 
	g_toYˇ
;

229 ˛as†
	cRgbaI≈utFûe


231 
	gpublic
:

238 
RgbaI≈utFûe
 (c⁄° 
«me
[], 
numThªads
 = 
globÆThªadCou¡
());

248 
RgbaI≈utFûe
 (
ISåóm
 &
is
, 
numThªads
 = 
globÆThªadCou¡
());

255 
	gvútuÆ
 ~
RgbaI≈utFûe
 ();

265 
£tFømeBuf„r
 (
Rgba
 *
ba£
,

266 
size_t
 
xSåide
,

267 
size_t
 
ySåide
);

274 
ªadPixñs
 (
sˇnLöe1
, 
sˇnLöe2
);

275 
ªadPixñs
 (
sˇnLöe
);

282 c⁄° 
	gHódî
 & 
hódî
 () const;

283 c⁄° 
	gFømeBuf„r
 & 
‰ameBuf„r
 () const;

284 c⁄° 
	gIm©h
::
Box2i
 & 
di•œyWödow
 () const;

285 c⁄° 
	gIm©h
::
Box2i
 & 
d©aWödow
 () const;

286 
pixñA•e˘R©io
 () const;

287 c⁄° 
	gIm©h
::
V2f
 
s¸ìnWödowCíãr
 () const;

288 
s¸ìnWödowWidth
 () const;

289 
LöeOrdî
 
löeOrdî
 () const;

290 
Com¥essi⁄
 
com¥essi⁄
 () const;

291 
RgbaCh™√ls
 
ch™√ls
 () const;

292 c⁄° * 
fûeName
 () const;

293 
boﬁ
 
isCom∂ëe
 () const;

299 
vîsi⁄
 () const;

301 
	g¥iv©e
:

303 
RgbaI≈utFûe
 (const RgbaInputFile &);

304 
	gRgbaI≈utFûe
 & 
	g›î©‹
 = (c⁄° 
RgbaI≈utFûe
 &);

306 
˛ass
 
	gFromYˇ
;

308 
I≈utFûe
 * 
	g_öputFûe
;

309 
FromYˇ
 * 
	g_‰omYˇ
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaYca.h

1 #i‚de‡
INCLUDED_IMF_RGBA_YCA_H


2 
	#INCLUDED_IMF_RGBA_YCA_H


	)

117 
	~<ImfRgba.h
>

118 
	~<ImfChrom©icôõs.h
>

120 
«me•a˚
 
	gImf
 {

121 
«me•a˚
 
	gRgbaYˇ
 {

128 c⁄° 
	gN
 = 27;

129 c⁄° 
	gN2
 = 
N
 / 2;

137 
	gIm©h
::
V3f
 
compuãYw
 (c⁄° 
Chrom©icôõs
 &
¸
);

151 
RGBAtoYCA
 (c⁄° 
Im©h
::
V3f
 &
yw
,

152 
n
,

153 
boﬁ
 
aIsVÆid
,

154 c⁄° 
Rgba
 
rgbaIn
[ ],

155 
Rgba
 
yˇOut
[ ]);

167 
decim©eChromaH‹iz
 (
n
,

168 c⁄° 
Rgba
 
yˇIn
[ ],

169 
Rgba
 
yˇOut
[ ]);

177 
decim©eChromaVît
 (
n
,

178 c⁄° 
Rgba
 * c⁄° 
yˇIn
[
N
],

179 
Rgba
 
yˇOut
[ ]);

188 
roundYCA
 (
n
,

189 
roundY
,

190 
roundC
,

191 c⁄° 
Rgba
 
yˇIn
[ ],

192 
Rgba
 
yˇOut
[ ]);

199 
ªc⁄°ru˘ChromaH‹iz
 (
n
,

200 c⁄° 
Rgba
 
yˇIn
[ ],

201 
Rgba
 
yˇOut
[ ]);

208 
ªc⁄°ru˘ChromaVît
 (
n
,

209 c⁄° 
Rgba
 * c⁄° 
yˇIn
[
N
],

210 
Rgba
 
yˇOut
[ ]);

218 
YCAtoRGBA
 (c⁄° 
Im©h
::
V3f
 &
yw
,

219 
n
,

220 c⁄° 
Rgba
 
yˇIn
[ ],

221 
Rgba
 
rgbaOut
[ ]);

240 
fixS©uøti⁄
 (c⁄° 
Im©h
::
V3f
 &
yw
,

241 
n
,

242 c⁄° 
Rgba
 * c⁄° 
rgbaIn
[3],

243 
Rgba
 
rgbaOut
[ ]);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStandardAttributes.h

36 #i‚de‡
INCLUDED_IMF_STANDARD_ATTRIBUTES_H


37 
	#INCLUDED_IMF_STANDARD_ATTRIBUTES_H


	)

57 
	~<ImfHódî.h
>

58 
	~<ImfFlﬂtAâribuã.h
>

59 
	~<ImfSåögAâribuã.h
>

60 
	~<ImfChrom©icôõsAâribuã.h
>

61 
	~<ImfEnvm≠Aâribuã.h
>

62 
	~<ImfKeyCodeAâribuã.h
>

63 
	~<ImfTimeCodeAâribuã.h
>

66 
	#IMF_STD_ATTRIBUTE_DEF
(
«me
,
suffix
,
ty≥
Ë\

	)

68 
	gadd
##
suffix
 (
Hódî
 &
hódî
, c⁄° 
ty≥
 &
v
); \

69 
boﬁ
 
	ghas
##
suffix
 (c⁄° 
Hódî
 &
hódî
); \

70 c⁄° 
	gTy≥dAâribuã
<
	gty≥
> & 
	g«me
##
Aâribuã
 (c⁄° 
Hódî
 &
hódî
); \

71 
	gTy≥dAâribuã
<
	gty≥
> & 
	g«me
##
Aâribuã
 (
Hódî
 &
hódî
); \

72 c⁄° 
	gty≥
 & 
«me
 (c⁄° 
Hódî
 &
hódî
); \

73 
	gty≥
 & 
«me
 (
Hódî
 &
hódî
);

76 
«me•a˚
 
	gImf
 {

83 
IMF_STD_ATTRIBUTE_DEF
 (
chrom©icôõs
, 
Chrom©icôõs
, Chromaticities)

97 
IMF_STD_ATTRIBUTE_DEF
 (
whôeLumö™˚
, 
WhôeLumö™˚
, )

105 
IMF_STD_ATTRIBUTE_DEF
 (
xDísôy
, 
XDísôy
, )

112 
IMF_STD_ATTRIBUTE_DEF
 (
ow√r
, 
Ow√r
, 
°d
::
°rög
)

120 
IMF_STD_ATTRIBUTE_DEF
 (
commíts
, 
Commíts
, 
°d
::
°rög
)

136 
IMF_STD_ATTRIBUTE_DEF
 (
ˇpD©e
, 
C≠D©e
, 
°d
::
°rög
)

146 
IMF_STD_ATTRIBUTE_DEF
 (
utcOff£t
, utcOffset, )

157 
IMF_STD_ATTRIBUTE_DEF
 (
l⁄gôude
, 
L⁄gôude
, )

158 
IMF_STD_ATTRIBUTE_DEF
 (
œtôude
, 
L©ôude
, )

159 
IMF_STD_ATTRIBUTE_DEF
 (
Ætôude
, 
A…ôude
, )

166 
IMF_STD_ATTRIBUTE_DEF
 (
focus
, 
Focus
, )

173 
IMF_STD_ATTRIBUTE_DEF
 (
expTime
, 
ExpTime
, )

181 
IMF_STD_ATTRIBUTE_DEF
 (
≠îtuª
, 
A≥πuª
, )

189 
IMF_STD_ATTRIBUTE_DEF
 (
isoS≥ed
, 
IsoS≥ed
, )

199 
IMF_STD_ATTRIBUTE_DEF
 (
ívm≠
, 
Envm≠
, Envmap)

208 
IMF_STD_ATTRIBUTE_DEF
 (
keyCode
, 
KeyCode
, KeyCode)

215 
IMF_STD_ATTRIBUTE_DEF
 (
timeCode
, 
TimeCode
, TimeCode)

246 
IMF_STD_ATTRIBUTE_DEF
 (
wøpmodes
, 
Wøpmodes
, 
°d
::
°rög
)

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStdIO.h

36 #i‚de‡
INCLUDED_IMF_STD_IO_H


37 
	#INCLUDED_IMF_STD_IO_H


	)

46 
	~<ImfIO.h
>

47 
	~<f°ªam
>

48 
	~<s°ªam
>

50 
«me•a˚
 
	gImf
 {

57 ˛as†
	cStdIFSåóm
: 
public
 
ISåóm


59 
public
:

66 
StdIFSåóm
 (c⁄° 
fûeName
[]);

75 
StdIFSåóm
 (
°d
::
if°ªam
 &
is
, c⁄° 
fûeName
[]);

78 
	gvútuÆ
 ~
StdIFSåóm
 ();

80 
vútuÆ
 
boﬁ
 
ªad
 (
c
[ ], 
n
);

81 
vútuÆ
 
I¡64
 
ãŒg
 ();

82 
vútuÆ
 
£ekg
 (
I¡64
 
pos
);

83 
vútuÆ
 
˛ór
 ();

85 
	g¥iv©e
:

87 
°d
::
if°ªam
 * 
_is
;

88 
boﬁ
 
	g_dñëeSåóm
;

97 ˛as†
	cStdOFSåóm
: 
public
 
OSåóm


99 
public
:

106 
StdOFSåóm
 (c⁄° 
fûeName
[]);

115 
StdOFSåóm
 (
°d
::
of°ªam
 &
os
, c⁄° 
fûeName
[]);

118 
	gvútuÆ
 ~
StdOFSåóm
 ();

120 
vútuÆ
 
wrôe
 (c⁄° 
c
[ ], 
n
);

121 
vútuÆ
 
I¡64
 
ãŒp
 ();

122 
vútuÆ
 
£ekp
 (
I¡64
 
pos
);

124 
	g¥iv©e
:

126 
°d
::
of°ªam
 * 
_os
;

127 
boﬁ
 
	g_dñëeSåóm
;

136 ˛as†
	cStdOSSåóm
: 
public
 
OSåóm


138 
public
:

140 
StdOSSåóm
 ();

142 
vútuÆ
 
wrôe
 (c⁄° 
c
[ ], 
n
);

143 
vútuÆ
 
I¡64
 
ãŒp
 ();

144 
vútuÆ
 
£ekp
 (
I¡64
 
pos
);

146 
	g°d
::
°rög
 
°r
 (Ëc⁄° { 
_os
.str();}

148 
	g¥iv©e
:

150 
°d
::
o°rög°ªam
 
_os
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStringAttribute.h

37 #i‚de‡
INCLUDED_IMF_STRING_ATTRIBUTE_H


38 
	#INCLUDED_IMF_STRING_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

47 
	~<°rög
>

50 
«me•a˚
 
	gImf
 {

53 
	gTy≥dAâribuã
<
	t°d
::
	t°rög
> 
	tSåögAâribuã
;

54 
	gãm∂©e
 <> c⁄° *
	gSåögAâribuã
::
°©icTy≥Name
 ();

55 
	gãm∂©e
 <> 
	gSåögAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

56 
	gãm∂©e
 <> 
	gSåögAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

62 #ifde‡
__MWERKS__


63 
	~<ImfSåögAâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTestFile.h

36 #i‚de‡
INCLUDED_IMF_TEST_FILE_H


37 
	#INCLUDED_IMF_TEST_FILE_H


	)

48 
«me•a˚
 
	gImf
 {

50 
˛ass
 
	gISåóm
;

53 
boﬁ
 
isO≥nExrFûe
 (c⁄° 
fûeName
[], boﬁ &
isTûed
);

54 
boﬁ
 
isO≥nExrFûe
 (c⁄° 
fûeName
[]);

55 
boﬁ
 
isTûedO≥nExrFûe
 (c⁄° 
fûeName
[]);

56 
boﬁ
 
isO≥nExrFûe
 (
ISåóm
 &
is
, boﬁ &
isTûed
);

57 
boﬁ
 
isO≥nExrFûe
 (
ISåóm
 &
is
);

58 
boﬁ
 
isTûedO≥nExrFûe
 (
ISåóm
 &
is
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfThreading.h

35 #i‚de‡
INCLUDED_IMF_THREADING_H


36 
	#INCLUDED_IMF_THREADING_H


	)

72 
«me•a˚
 
	gImf
 {

80 
globÆThªadCou¡
 ();

87 
£tGlobÆThªadCou¡
 (
cou¡
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h

36 #i‚de‡
INCLUDED_IMF_TILE_DESCRIPTION_H


37 
	#INCLUDED_IMF_TILE_DESCRIPTION_H


	)

45 
«me•a˚
 
	gImf
 {

48 
	eLevñMode


50 
	gONE_LEVEL
 = 0,

51 
	gMIPMAP_LEVELS
 = 1,

52 
	gRIPMAP_LEVELS
 = 2,

54 
	gNUM_LEVELMODES


58 
	eLevñRoundögMode


60 
	gROUND_DOWN
 = 0,

61 
	gROUND_UP
 = 1,

63 
	gNUM_ROUNDINGMODES


67 ˛as†
	cTûeDes¸ùti⁄


69 
	gpublic
:

71 
xSize
;

72 
	gySize
;

73 
LevñMode
 
	gmode
;

74 
LevñRoundögMode
 
	groundögMode
;

76 
TûeDes¸ùti⁄
 (
xs
 = 32,

77 
ys
 = 32,

78 
LevñMode
 
m
 = 
ONE_LEVEL
,

79 
LevñRoundögMode
 
r
 = 
ROUND_DOWN
)

81 
xSize
 (
xs
),

82 
ySize
 (
ys
),

83 
mode
 (
m
),

84 
roundögMode
 (
r
)

89 
boﬁ


90 
	g›î©‹
 =(c⁄° 
TûeDes¸ùti⁄
 &
Ÿhî
) const

92  
xSize
 =
Ÿhî
.xSize &&

93 
ySize
 =
Ÿhî
.ySize &&

94 
mode
 =
Ÿhî
.mode &&

95 
roundögMode
 =
Ÿhî
.roundingMode;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescriptionAttribute.h

36 #i‚de‡
INCLUDED_IMF_TILE_DESCRIPTION_ATTRIBUTE_H


37 
	#INCLUDED_IMF_TILE_DESCRIPTION_ATTRIBUTE_H


	)

45 
	~<ImfAâribuã.h
>

46 
	~<ImfTûeDes¸ùti⁄.h
>

48 
«me•a˚
 
	gImf
 {

51 
	gTy≥dAâribuã
<
	tTûeDes¸ùti⁄
> 
	tTûeDes¸ùti⁄Aâribuã
;

53 
	gãm∂©e
 <>

55 
	gTûeDes¸ùti⁄Aâribuã
::
°©icTy≥Name
 ();

57 
	gãm∂©e
 <>

59 
	gTûeDes¸ùti⁄Aâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

61 
	gãm∂©e
 <>

63 
	gTûeDes¸ùti⁄Aâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

69 #ifde‡
__MWERKS__


70 
	~<ImfTûeDes¸ùti⁄Aâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledInputFile.h

36 #i‚de‡
INCLUDED_IMF_TILED_INPUT_FILE_H


37 
	#INCLUDED_IMF_TILED_INPUT_FILE_H


	)

45 
	~<ImfHódî.h
>

46 
	~<ImfFømeBuf„r.h
>

47 
	~"Im©hBox.h
"

48 
	~<ImfTûeDes¸ùti⁄.h
>

49 
	~<ImfThªadög.h
>

51 
«me•a˚
 
	gImf
 {

54 ˛as†
	cTûedI≈utFûe


56 
	gpublic
:

68 
TûedI≈utFûe
 (c⁄° 
fûeName
[],

69 
numThªads
 = 
globÆThªadCou¡
 ());

80 
TûedI≈utFûe
 (
ISåóm
 &
is
, 
numThªads
 = 
globÆThªadCou¡
 ());

87 
	gvútuÆ
 ~
TûedI≈utFûe
 ();

94 c⁄° * 
fûeName
 () const;

101 c⁄° 
	gHódî
 & 
hódî
 () const;

108 
vîsi⁄
 () const;

122 
£tFømeBuf„r
 (c⁄° 
FømeBuf„r
 &
‰ameBuf„r
);

129 c⁄° 
	gFømeBuf„r
 & 
‰ameBuf„r
 () const;

142 
boﬁ
 
isCom∂ëe
 () const;

155 
tûeXSize
 () const;

156 
tûeYSize
 () const;

157 
LevñMode
 
ÀvñMode
 () const;

158 
LevñRoundögMode
 
ÀvñRoundögMode
 () const;

204 
numLevñs
 () const;

205 
numXLevñs
 () const;

206 
numYLevñs
 () const;

207 
boﬁ
 
isVÆidLevñ
 (
lx
, 
ly
) const;

228 
ÀvñWidth
 (
lx
) const;

229 
ÀvñHeight
 (
ly
) const;

252 
numXTûes
 (
lx
 = 0) const;

253 
numYTûes
 (
ly
 = 0) const;

275 
	gIm©h
::
Box2i
 
d©aWödowF‹Levñ
 (
l
 = 0) const;

276 
	gIm©h
::
Box2i
 
d©aWödowF‹Levñ
 (
lx
, 
ly
) const;

300 
	gIm©h
::
Box2i
 
d©aWödowF‹Tûe
 (
dx
, 
dy
, 
l
 = 0) const;

302 
	gIm©h
::
Box2i
 
d©aWödowF‹Tûe
 (
dx
, 
dy
,

303 
lx
, 
ly
) const;

334 
ªadTûe
 (
dx
, 
dy
, 
l
 = 0);

335 
ªadTûe
 (
dx
, 
dy
, 
lx
, 
ly
);

337 
ªadTûes
 (
dx1
, 
dx2
, 
dy1
, 
dy2
,

338 
lx
, 
ly
);

340 
ªadTûes
 (
dx1
, 
dx2
, 
dy1
, 
dy2
,

341 
l
 = 0);

350 
øwTûeD©a
 (&
dx
, &
dy
,

351 &
lx
, &
ly
,

352 c⁄° *&
pixñD©a
,

353 &
pixñD©aSize
);

355 
	gD©a
;

357 
	g¥iv©e
:

359 
‰õnd
 
˛ass
 
I≈utFûe
;

361 
TûedI≈utFûe
 (const TiledInputFile &);

362 
	gTûedI≈utFûe
 & 
	g›î©‹
 = (c⁄° 
TûedI≈utFûe
 &);

364 
TûedI≈utFûe
 (c⁄° 
Hódî
 &
hódî
, 
ISåóm
 *
is
, 
vîsi⁄
,

365 
numThªads
);

367 
öôülize
 ();

369 
boﬁ
 
isVÆidTûe
 (
dx
, 
dy
,

370 
lx
, 
ly
) const;

372 
size_t
 
byãsPîLöeF‹Tûe
 (
dx
, 
dy
,

373 
lx
, 
ly
) const;

375 
D©a
 * 
	g_d©a
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledOutputFile.h

36 #i‚de‡
INCLUDED_IMF_TILED_OUTPUT_FILE_H


37 
	#INCLUDED_IMF_TILED_OUTPUT_FILE_H


	)

45 
	~<ImfHódî.h
>

46 
	~<ImfFømeBuf„r.h
>

47 
	~"Im©hBox.h
"

48 
	~<ImfTûeDes¸ùti⁄.h
>

49 
	~<ImfThªadög.h
>

51 
«me•a˚
 
	gImf
 {

53 
˛ass
 
	gTûedI≈utFûe
;

54 
˛ass
 
	gI≈utFûe
;

55 
	gPªvõwRgba
;

58 ˛as†
	cTûedOuçutFûe


60 
	gpublic
:

84 
TûedOuçutFûe
 (c⁄° 
fûeName
[],

85 c⁄° 
Hódî
 &
hódî
,

86 
numThªads
 = 
globÆThªadCou¡
 ());

96 
TûedOuçutFûe
 (
OSåóm
 &
os
,

97 c⁄° 
Hódî
 &
hódî
,

98 
numThªads
 = 
globÆThªadCou¡
 ());

108 
	gvútuÆ
 ~
TûedOuçutFûe
 ();

115 c⁄° * 
fûeName
 () const;

122 c⁄° 
	gHódî
 & 
hódî
 () const;

136 
£tFømeBuf„r
 (c⁄° 
FømeBuf„r
 &
‰ameBuf„r
);

143 c⁄° 
	gFømeBuf„r
 & 
‰ameBuf„r
 () const;

156 
tûeXSize
 () const;

157 
tûeYSize
 () const;

158 
LevñMode
 
ÀvñMode
 () const;

159 
LevñRoundögMode
 
ÀvñRoundögMode
 () const;

205 
numLevñs
 () const;

206 
numXLevñs
 () const;

207 
numYLevñs
 () const;

208 
boﬁ
 
isVÆidLevñ
 (
lx
, 
ly
) const;

229 
ÀvñWidth
 (
lx
) const;

230 
ÀvñHeight
 (
ly
) const;

253 
numXTûes
 (
lx
 = 0) const;

254 
numYTûes
 (
ly
 = 0) const;

277 
	gIm©h
::
Box2i
 
d©aWödowF‹Levñ
 (
l
 = 0) const;

278 
	gIm©h
::
Box2i
 
d©aWödowF‹Levñ
 (
lx
, 
ly
) const;

302 
	gIm©h
::
Box2i
 
d©aWödowF‹Tûe
 (
dx
, 
dy
,

303 
l
 = 0) const;

305 
	gIm©h
::
Box2i
 
d©aWödowF‹Tûe
 (
dx
, 
dy
,

306 
lx
, 
ly
) const;

380 
wrôeTûe
 (
dx
, 
dy
, 
l
 = 0);

381 
wrôeTûe
 (
dx
, 
dy
, 
lx
, 
ly
);

383 
wrôeTûes
 (
dx1
, 
dx2
, 
dy1
, 
dy2
,

384 
lx
, 
ly
);

386 
wrôeTûes
 (
dx1
, 
dx2
, 
dy1
, 
dy2
,

387 
l
 = 0);

398 
c›yPixñs
 (
TûedI≈utFûe
 &
ö
);

411 
c›yPixñs
 (
I≈utFûe
 &
ö
);

432 
upd©ePªvõwImage
 (c⁄° 
PªvõwRgba
 
√wPixñs
[]);

449 
bªakTûe
 (
dx
, 
dy
,

450 
lx
, 
ly
,

451 
off£t
,

452 
Àngth
,

453 
c
);

454 
	gD©a
;

456 
	g¥iv©e
:

458 
TûedOuçutFûe
 (const TiledOutputFile &);

459 
	gTûedOuçutFûe
 & 
	g›î©‹
 = (c⁄° 
TûedOuçutFûe
 &);

461 
öôülize
 (c⁄° 
Hódî
 &
hódî
);

463 
boﬁ
 
isVÆidTûe
 (
dx
, 
dy
,

464 
lx
, 
ly
) const;

466 
size_t
 
byãsPîLöeF‹Tûe
 (
dx
, 
dy
,

467 
lx
, 
ly
) const;

469 
D©a
 * 
	g_d©a
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledRgbaFile.h

36 #i‚de‡
INCLUDED_IMF_TILED_RGBA_FILE_H


37 
	#INCLUDED_IMF_TILED_RGBA_FILE_H


	)

48 
	~<ImfHódî.h
>

49 
	~<ImfFømeBuf„r.h
>

50 
	~"Im©hVec.h
"

51 
	~"Im©hBox.h
"

52 
	~"hÆf.h
"

53 
	~<ImfTûeDes¸ùti⁄.h
>

54 
	~<ImfRgba.h
>

55 
	~<ImfThªadög.h
>

57 
«me•a˚
 
	gImf
 {

59 
˛ass
 
	gTûedOuçutFûe
;

60 
˛ass
 
	gTûedI≈utFûe
;

61 
	gPªvõwRgba
;

68 ˛as†
	cTûedRgbaOuçutFûe


70 
	gpublic
:

80 
TûedRgbaOuçutFûe
 (c⁄° 
«me
[],

81 c⁄° 
Hódî
 &
hódî
,

82 
RgbaCh™√ls
 
rgbaCh™√ls
,

83 
tûeXSize
,

84 
tûeYSize
,

85 
LevñMode
 
mode
,

86 
LevñRoundögMode
 
rmode
 = 
ROUND_DOWN
,

87 
numThªads
 = 
globÆThªadCou¡
 ());

99 
TûedRgbaOuçutFûe
 (
OSåóm
 &
os
,

100 c⁄° 
Hódî
 &
hódî
,

101 
RgbaCh™√ls
 
rgbaCh™√ls
,

102 
tûeXSize
,

103 
tûeYSize
,

104 
LevñMode
 
mode
,

105 
LevñRoundögMode
 
rmode
 = 
ROUND_DOWN
,

106 
numThªads
 = 
globÆThªadCou¡
 ());

115 
TûedRgbaOuçutFûe
 (c⁄° 
«me
[],

116 
tûeXSize
,

117 
tûeYSize
,

118 
LevñMode
 
mode
,

119 
LevñRoundögMode
 
rmode
,

120 c⁄° 
Im©h
::
Box2i
 &
di•œyWödow
,

121 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
 = Imath::Box2i(),

122 
RgbaCh™√ls
 
rgbaCh™√ls
 = 
WRITE_RGBA
,

123 
pixñA•e˘R©io
 = 1,

124 c⁄° 
Im©h
::
V2f
 
s¸ìnWödowCíãr
 =

125 
Im©h
::
V2f
 (0, 0),

126 
s¸ìnWödowWidth
 = 1,

127 
LöeOrdî
 
löeOrdî
 = 
INCREASING_Y
,

128 
Com¥essi⁄
 
com¥essi⁄
 = 
ZIP_COMPRESSION
,

129 
numThªads
 = 
globÆThªadCou¡
 ());

138 
TûedRgbaOuçutFûe
 (c⁄° 
«me
[],

139 
width
,

140 
height
,

141 
tûeXSize
,

142 
tûeYSize
,

143 
LevñMode
 
mode
,

144 
LevñRoundögMode
 
rmode
 = 
ROUND_DOWN
,

145 
RgbaCh™√ls
 
rgbaCh™√ls
 = 
WRITE_RGBA
,

146 
pixñA•e˘R©io
 = 1,

147 c⁄° 
Im©h
::
V2f
 
s¸ìnWödowCíãr
 =

148 
Im©h
::
V2f
 (0, 0),

149 
s¸ìnWödowWidth
 = 1,

150 
LöeOrdî
 
löeOrdî
 = 
INCREASING_Y
,

151 
Com¥essi⁄
 
com¥essi⁄
 = 
ZIP_COMPRESSION
,

152 
numThªads
 = 
globÆThªadCou¡
 ());

155 
	gvútuÆ
 ~
TûedRgbaOuçutFûe
 ();

166 
£tFømeBuf„r
 (c⁄° 
Rgba
 *
ba£
,

167 
size_t
 
xSåide
,

168 
size_t
 
ySåide
);

174 c⁄° 
	gHódî
 & 
hódî
 () const;

175 c⁄° 
	gFømeBuf„r
 & 
‰ameBuf„r
 () const;

176 c⁄° 
	gIm©h
::
Box2i
 & 
di•œyWödow
 () const;

177 c⁄° 
	gIm©h
::
Box2i
 & 
d©aWödow
 () const;

178 
pixñA•e˘R©io
 () const;

179 c⁄° 
	gIm©h
::
V2f
 
s¸ìnWödowCíãr
 () const;

180 
s¸ìnWödowWidth
 () const;

181 
LöeOrdî
 
löeOrdî
 () const;

182 
Com¥essi⁄
 
com¥essi⁄
 () const;

183 
RgbaCh™√ls
 
ch™√ls
 () const;

190 
tûeXSize
 () const;

191 
tûeYSize
 () const;

192 
LevñMode
 
ÀvñMode
 () const;

193 
LevñRoundögMode
 
ÀvñRoundögMode
 () const;

195 
numLevñs
 () const;

196 
numXLevñs
 () const;

197 
numYLevñs
 () const;

198 
boﬁ
 
isVÆidLevñ
 (
lx
, 
ly
) const;

200 
ÀvñWidth
 (
lx
) const;

201 
ÀvñHeight
 (
ly
) const;

203 
numXTûes
 (
lx
 = 0) const;

204 
numYTûes
 (
ly
 = 0) const;

206 
	gIm©h
::
Box2i
 
d©aWödowF‹Levñ
 (
l
 = 0) const;

207 
	gIm©h
::
Box2i
 
d©aWödowF‹Levñ
 (
lx
, 
ly
) const;

209 
	gIm©h
::
Box2i
 
d©aWödowF‹Tûe
 (
dx
, 
dy
,

210 
l
 = 0) const;

212 
	gIm©h
::
Box2i
 
d©aWödowF‹Tûe
 (
dx
, 
dy
,

213 
lx
, 
ly
) const;

243 
wrôeTûe
 (
dx
, 
dy
, 
l
 = 0);

244 
wrôeTûe
 (
dx
, 
dy
, 
lx
, 
ly
);

246 
wrôeTûes
 (
dxMö
, 
dxMax
, 
dyMö
, 
dyMax
,

247 
lx
, 
ly
);

249 
wrôeTûes
 (
dxMö
, 
dxMax
, 
dyMö
, 
dyMax
,

250 
l
 = 0);

257 
upd©ePªvõwImage
 (c⁄° 
PªvõwRgba
[]);

271 
bªakTûe
 (
dx
, 
dy
,

272 
lx
, 
ly
,

273 
off£t
,

274 
Àngth
,

275 
c
);

276 
	g¥iv©e
:

282 
TûedRgbaOuçutFûe
 (const TiledRgbaOutputFile &);

283 
	gTûedRgbaOuçutFûe
 & 
	g›î©‹
 = (c⁄° 
TûedRgbaOuçutFûe
 &);

285 
˛ass
 
	gToYa
;

287 
TûedOuçutFûe
 * 
	g_ouçutFûe
;

288 
ToYa
 * 
	g_toYa
;

297 ˛as†
	cTûedRgbaI≈utFûe


299 
	gpublic
:

308 
TûedRgbaI≈utFûe
 (c⁄° 
«me
[],

309 
numThªads
 = 
globÆThªadCou¡
 ());

321 
TûedRgbaI≈utFûe
 (
ISåóm
 &
is
, 
numThªads
 = 
globÆThªadCou¡
 ());

328 
	gvútuÆ
 ~
TûedRgbaI≈utFûe
 ();

339 
£tFømeBuf„r
 (
Rgba
 *
ba£
,

340 
size_t
 
xSåide
,

341 
size_t
 
ySåide
);

347 c⁄° 
	gHódî
 & 
hódî
 () const;

348 c⁄° 
	gFømeBuf„r
 & 
‰ameBuf„r
 () const;

349 c⁄° 
	gIm©h
::
Box2i
 & 
di•œyWödow
 () const;

350 c⁄° 
	gIm©h
::
Box2i
 & 
d©aWödow
 () const;

351 
pixñA•e˘R©io
 () const;

352 c⁄° 
	gIm©h
::
V2f
 
s¸ìnWödowCíãr
 () const;

353 
s¸ìnWödowWidth
 () const;

354 
LöeOrdî
 
löeOrdî
 () const;

355 
Com¥essi⁄
 
com¥essi⁄
 () const;

356 
RgbaCh™√ls
 
ch™√ls
 () const;

357 c⁄° * 
fûeName
 () const;

358 
boﬁ
 
isCom∂ëe
 () const;

364 
vîsi⁄
 () const;

371 
tûeXSize
 () const;

372 
tûeYSize
 () const;

373 
LevñMode
 
ÀvñMode
 () const;

374 
LevñRoundögMode
 
ÀvñRoundögMode
 () const;

376 
numLevñs
 () const;

377 
numXLevñs
 () const;

378 
numYLevñs
 () const;

379 
boﬁ
 
isVÆidLevñ
 (
lx
, 
ly
) const;

381 
ÀvñWidth
 (
lx
) const;

382 
ÀvñHeight
 (
ly
) const;

384 
numXTûes
 (
lx
 = 0) const;

385 
numYTûes
 (
ly
 = 0) const;

387 
	gIm©h
::
Box2i
 
d©aWödowF‹Levñ
 (
l
 = 0) const;

388 
	gIm©h
::
Box2i
 
d©aWödowF‹Levñ
 (
lx
, 
ly
) const;

390 
	gIm©h
::
Box2i
 
d©aWödowF‹Tûe
 (
dx
, 
dy
,

391 
l
 = 0) const;

393 
	gIm©h
::
Box2i
 
d©aWödowF‹Tûe
 (
dx
, 
dy
,

394 
lx
, 
ly
) const;

426 
ªadTûe
 (
dx
, 
dy
, 
l
 = 0);

427 
ªadTûe
 (
dx
, 
dy
, 
lx
, 
ly
);

429 
ªadTûes
 (
dxMö
, 
dxMax
,

430 
dyMö
, 
dyMax
, 
lx
, 
ly
);

432 
ªadTûes
 (
dxMö
, 
dxMax
,

433 
dyMö
, 
dyMax
, 
l
 = 0);

435 
	g¥iv©e
:

441 
TûedRgbaI≈utFûe
 (const TiledRgbaInputFile &);

442 
	gTûedRgbaI≈utFûe
 & 
	g›î©‹
 = (c⁄° 
TûedRgbaI≈utFûe
 &);

444 
˛ass
 
	gFromYa
;

446 
TûedI≈utFûe
 * 
	g_öputFûe
;

447 
FromYa
 * 
	g_‰omYa
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCode.h

36 #i‚de‡
INCLUDED_IMF_TIME_CODE_H


37 
	#INCLUDED_IMF_TIME_CODE_H


	)

113 
«me•a˚
 
	gImf
 {

116 ˛as†
	cTimeCode


118 
	gpublic
:

124 
	ePackög


126 
TV60_PACKING
,

127 
	gTV50_PACKING
,

128 
	gFILM24_PACKING


136 
TimeCode
 ();

138 
TimeCode
 (
hours
,

139 
möuãs
,

140 
£c⁄ds
,

141 
‰ame
,

142 
boﬁ
 
dr›Føme
 = 
Ál£
,

143 
boﬁ
 
cﬁ‹Føme
 = 
Ál£
,

144 
boﬁ
 
fõldPha£
 = 
Ál£
,

145 
boﬁ
 
bgf0
 = 
Ál£
,

146 
boﬁ
 
bgf1
 = 
Ál£
,

147 
boﬁ
 
bgf2
 = 
Ál£
,

148 
bö¨yGroup1
 = 0,

149 
bö¨yGroup2
 = 0,

150 
bö¨yGroup3
 = 0,

151 
bö¨yGroup4
 = 0,

152 
bö¨yGroup5
 = 0,

153 
bö¨yGroup6
 = 0,

154 
bö¨yGroup7
 = 0,

155 
bö¨yGroup8
 = 0);

157 
TimeCode
 (
timeAndFœgs
,

158 
u£rD©a
 = 0,

159 
Packög
 
∑ckög
 = 
TV60_PACKING
);

161 
TimeCode
 (c⁄° TimeCodê&
Ÿhî
);

163 
	gTimeCode
 & 
	g›î©‹
 = (c⁄° 
TimeCode
 &
Ÿhî
);

170 
hours
 () const;

171 
£tHours
 (
vÆue
);

173 
möuãs
 () const;

174 
£tMöuãs
 (
vÆue
);

176 
£c⁄ds
 () const;

177 
£tSec⁄ds
 (
vÆue
);

179 
‰ame
 () const;

180 
£tFøme
 (
vÆue
);

182 
boﬁ
 
dr›Føme
 () const;

183 
£tDr›Føme
 (
boﬁ
 
vÆue
);

185 
boﬁ
 
cﬁ‹Føme
 () const;

186 
£tCﬁ‹Føme
 (
boﬁ
 
vÆue
);

188 
boﬁ
 
fõldPha£
 () const;

189 
£tFõldPha£
 (
boﬁ
 
vÆue
);

191 
boﬁ
 
bgf0
 () const;

192 
£tBgf0
 (
boﬁ
 
vÆue
);

194 
boﬁ
 
bgf1
 () const;

195 
£tBgf1
 (
boﬁ
 
vÆue
);

197 
boﬁ
 
bgf2
 () const;

198 
£tBgf2
 (
boﬁ
 
vÆue
);

200 
bö¨yGroup
 (
group
) const;

201 
£tBö¨yGroup
 (
group
, 
vÆue
);

208 
timeAndFœgs
 (
Packög
 
∑ckög
 = 
TV60_PACKING
) const;

210 
£tTimeAndFœgs
 (
vÆue
,

211 
Packög
 
∑ckög
 = 
TV60_PACKING
);

213 
u£rD©a
 () const;

215 
£tU£rD©a
 (
vÆue
);

217 
	g¥iv©e
:

219 
_time
;

220 
	g_u£r
;

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCodeAttribute.h

36 #i‚de‡
INCLUDED_IMF_TIME_CODE_ATTRIBUTE_H


37 
	#INCLUDED_IMF_TIME_CODE_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

47 
	~<ImfTimeCode.h
>

50 
«me•a˚
 
	gImf
 {

53 
	gTy≥dAâribuã
<
	tTimeCode
> 
	tTimeCodeAâribuã
;

55 
	gãm∂©e
 <>

56 c⁄° *
	gTimeCodeAâribuã
::
°©icTy≥Name
 ();

58 
	gãm∂©e
 <>

59 
	gTimeCodeAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

61 
	gãm∂©e
 <>

62 
	gTimeCodeAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

68 #ifde‡
__MWERKS__


69 
	~<ImfTimeCodeAâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVecAttribute.h

37 #i‚de‡
INCLUDED_IMF_VEC_ATTRIBUTE_H


38 
	#INCLUDED_IMF_VEC_ATTRIBUTE_H


	)

49 
	~<ImfAâribuã.h
>

50 
	~"Im©hVec.h
"

53 
«me•a˚
 
	gImf
 {

56 
	gTy≥dAâribuã
<
	tIm©h
::
	tV2i
> 
	tV2iAâribuã
;

57 
	gãm∂©e
 <> c⁄° *
	gV2iAâribuã
::
°©icTy≥Name
 ();

58 
	gãm∂©e
 <> 
	gV2iAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

59 
	gãm∂©e
 <> 
	gV2iAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

62 
	gTy≥dAâribuã
<
	tIm©h
::
	tV2f
> 
	tV2fAâribuã
;

63 
	gãm∂©e
 <> c⁄° *
	gV2fAâribuã
::
°©icTy≥Name
 ();

64 
	gãm∂©e
 <> 
	gV2fAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

65 
	gãm∂©e
 <> 
	gV2fAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

68 
	gTy≥dAâribuã
<
	tIm©h
::
	tV3i
> 
	tV3iAâribuã
;

69 
	gãm∂©e
 <> c⁄° *
	gV3iAâribuã
::
°©icTy≥Name
 ();

70 
	gãm∂©e
 <> 
	gV3iAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

71 
	gãm∂©e
 <> 
	gV3iAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

74 
	gTy≥dAâribuã
<
	tIm©h
::
	tV3f
> 
	tV3fAâribuã
;

75 
	gãm∂©e
 <> c⁄° *
	gV3fAâribuã
::
°©icTy≥Name
 ();

76 
	gãm∂©e
 <> 
	gV3fAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

77 
	gãm∂©e
 <> 
	gV3fAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

83 #ifde‡
__MWERKS__


84 
	~<ImfVecAâribuã.˝p
>

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h

36 #i‚de‡
INCLUDED_IMF_VERSION_H


37 
	#INCLUDED_IMF_VERSION_H


	)

46 
«me•a˚
 
	gImf
 {

55 c⁄° 
	gMAGIC
 = 20000630;

69 c⁄° 
	gVERSION_NUMBER_FIELD
 = 0x000000ff;

70 c⁄° 
	gVERSION_FLAGS_FIELD
 = 0xffffff00;

77 c⁄° 
	gEXR_VERSION
 = 2;

85 c⁄° 
	gTILED_FLAG
 = 0x00000200;

92 c⁄° 
	gALL_FLAGS
 = 
TILED_FLAG
;

99 
ölöe
 
boﬁ
 
isTûed
 (
vîsi⁄
Ë{ !!(
	gvîsi⁄
 & 
	gTILED_FLAG
);}

100 
ölöe
 
makeTûed
 (
vîsi⁄
Ë{ 
	gvîsi⁄
 | 
	gTILED_FLAG
;}

101 
ölöe
 
makeNŸTûed
 (
vîsi⁄
Ë{ 
	gvîsi⁄
 & ~
	gTILED_FLAG
;}

102 
ölöe
 
gëVîsi⁄
 (
vîsi⁄
Ë{ 
	gvîsi⁄
 & 
	gVERSION_NUMBER_FIELD
;}

103 
ölöe
 
gëFœgs
 (
vîsi⁄
Ë{ 
	gvîsi⁄
 & 
	gVERSION_FLAGS_FIELD
;}

104 
ölöe
 
boﬁ
 
suµ‹tsFœgs
 (
Êags
Ë{ !(
	gÊags
 & ~
	gALL_FLAGS
);}

112 
boﬁ
 
isImfMagic
 (c⁄° 
byãs
[4]);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfWav.h

37 #i‚de‡
INCLUDED_IMF_WAV_H


38 
	#INCLUDED_IMF_WAV_H


	)

46 
«me•a˚
 
	gImf
 {

50 
	gwav2Encode


51 (*
	gö
,

52 
	gnx
,

53 
	gox
,

54 
	gny
,

55 
	goy
,

56 
	gmx
);

59 
	gwav2Decode


60 (*
	gö
,

61 
	gnx
,

62 
	gox
,

63 
	gny
,

64 
	goy
,

65 
	gmx
);

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h

36 #i‚de‡
INCLUDED_IMF_XDR_H


37 
	#INCLUDED_IMF_XDR_H


	)

105 
	~<ImfI¡64.h
>

106 
	~"IexM©hExc.h
"

107 
	~"hÆf.h
"

108 
	~<limôs.h
>

110 
«me•a˚
 
	gImf
 {

111 
«me•a˚
 
	gXdr
 {

118 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

120 
wrôe
 (
T
 &
out
, 
boﬁ
 
v
);

122 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

124 
wrôe
 (
T
 &
out
, 
v
);

126 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

128 
wrôe
 (
T
 &
out
, sig√d 
v
);

130 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

132 
wrôe
 (
T
 &
out
, 
v
);

134 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

136 
wrôe
 (
T
 &
out
, sig√d 
v
);

138 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

140 
wrôe
 (
T
 &
out
, 
v
);

142 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

144 
wrôe
 (
T
 &
out
, sig√d 
v
);

146 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

148 
wrôe
 (
T
 &
out
, 
v
);

150 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

152 
wrôe
 (
T
 &
out
, sig√d 
v
);

154 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

156 
wrôe
 (
T
 &
out
, 
v
);

158 #i‡
ULONG_MAX
 != 18446744073709551615LU

160 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

162 
wrôe
 (
T
 &
out
, 
I¡64
 
v
);

166 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

168 
wrôe
 (
T
 &
out
, 
v
);

170 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

172 
wrôe
 (
T
 &
out
, 
v
);

174 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

176 
wrôe
 (
T
 &
out
, 
hÆf
 
v
);

178 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

180 
wrôe
 (
T
 &
out
, c⁄° 
v
[ ], 
n
);

182 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

184 
wrôe
 (
T
 &
out
, c⁄° 
v
[]);

191 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

193 
∑d
 (
T
 &
out
, 
n
);

201 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

203 
ªad
 (
T
 &
ö
, 
boﬁ
 &
v
);

205 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

207 
ªad
 (
T
 &
ö
, &
v
);

209 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

211 
ªad
 (
T
 &
ö
, sig√d &
v
);

213 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

215 
ªad
 (
T
 &
ö
, &
v
);

217 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

219 
ªad
 (
T
 &
ö
, sig√d &
v
);

221 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

223 
ªad
 (
T
 &
ö
, &
v
);

225 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

227 
ªad
 (
T
 &
ö
, sig√d &
v
);

229 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

231 
ªad
 (
T
 &
ö
, &
v
);

233 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

235 
ªad
 (
T
 &
ö
, sig√d &
v
);

237 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

239 
ªad
 (
T
 &
ö
, &
v
);

241 #i‡
ULONG_MAX
 != 18446744073709551615LU

243 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

245 
ªad
 (
T
 &
ö
, 
I¡64
 &
v
);

249 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

251 
ªad
 (
T
 &
ö
, &
v
);

253 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

255 
ªad
 (
T
 &
ö
, &
v
);

257 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

259 
ªad
 (
T
 &
ö
, 
hÆf
 &
v
);

261 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

263 
ªad
 (
T
 &
ö
, 
v
[ ], 
n
);

265 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

267 
ªad
 (
T
 &
ö
, 
n
, 
v
[ ]);

274 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

276 
skù
 (
T
 &
ö
, 
n
);

285 
	gãm∂©e
 <
˛ass
 
	gS
>

287 
size
 ();

294 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

295 
ölöe
 

296 
wrôeSig√dCh¨s
 (
T
 &
out
, c⁄° sig√d 
c
[], 
n
)

298 
	gS
::
wrôeCh¨s
 (
out
, (c⁄° *Ë
c
, 
n
);

302 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

303 
ölöe
 

304 
wrôeUnsig√dCh¨s
 (
T
 &
out
, c⁄° 
c
[], 
n
)

306 
	gS
::
wrôeCh¨s
 (
out
, (c⁄° *Ë
c
, 
n
);

310 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

311 
ölöe
 

312 
ªadSig√dCh¨s
 (
T
 &
ö
, sig√d 
c
[], 
n
)

314 
	gS
::
ªadCh¨s
 (
ö
, (*Ë
c
, 
n
);

318 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

319 
ölöe
 

320 
ªadUnsig√dCh¨s
 (
T
 &
ö
, 
c
[], 
n
)

322 
	gS
::
ªadCh¨s
 (
ö
, (*Ë
c
, 
n
);

326 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

327 
ölöe
 

328 
wrôe
 (
T
 &
out
, 
boﬁ
 
v
)

330 
	gc
 = !!
v
;

331 
	gS
::
wrôeCh¨s
 (
out
, &
c
, 1);

335 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

336 
ölöe
 

337 
wrôe
 (
T
 &
out
, 
v
)

339 
	gS
::
wrôeCh¨s
 (
out
, &
v
, 1);

343 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

344 
ölöe
 

345 
wrôe
 (
T
 &
out
, sig√d 
v
)

347 
	gwrôeSig√dCh¨s
<
	gS
> (
	gout
, &
	gv
, 1);

351 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

352 
ölöe
 

353 
wrôe
 (
T
 &
out
, 
v
)

355 
	gwrôeUnsig√dCh¨s
<
	gS
> (
	gout
, &
	gv
, 1);

359 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

361 
wrôe
 (
T
 &
out
, sig√d 
v
)

363 sig√d 
	gb
[2];

365 
	gb
[0] = (sig√d Ë(
v
);

366 
	gb
[1] = (sig√d Ë(
v
 >> 8);

368 
	gwrôeSig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 2);

372 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

374 
wrôe
 (
T
 &
out
, 
v
)

376 
	gb
[2];

378 
	gb
[0] = (Ë(
v
);

379 
	gb
[1] = (Ë(
v
 >> 8);

381 
	gwrôeUnsig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 2);

385 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

387 
wrôe
 (
T
 &
out
, sig√d 
v
)

389 sig√d 
	gb
[4];

391 
	gb
[0] = (sig√d Ë(
v
);

392 
	gb
[1] = (sig√d Ë(
v
 >> 8);

393 
	gb
[2] = (sig√d Ë(
v
 >> 16);

394 
	gb
[3] = (sig√d Ë(
v
 >> 24);

396 
	gwrôeSig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 4);

400 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

402 
wrôe
 (
T
 &
out
, 
v
)

404 
	gb
[4];

406 
	gb
[0] = (Ë(
v
);

407 
	gb
[1] = (Ë(
v
 >> 8);

408 
	gb
[2] = (Ë(
v
 >> 16);

409 
	gb
[3] = (Ë(
v
 >> 24);

411 
	gwrôeUnsig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 4);

415 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

417 
wrôe
 (
T
 &
out
, sig√d 
v
)

419 sig√d 
	gb
[8];

421 
	gb
[0] = (sig√d Ë(
v
);

422 
	gb
[1] = (sig√d Ë(
v
 >> 8);

423 
	gb
[2] = (sig√d Ë(
v
 >> 16);

424 
	gb
[3] = (sig√d Ë(
v
 >> 24);

426 #i‡
LONG_MAX
 == 2147483647

428 i‡(
	gv
 >= 0)

430 
b
[4] = 0;

431 
	gb
[5] = 0;

432 
	gb
[6] = 0;

433 
	gb
[7] = 0;

437 
	gb
[4] = ~0;

438 
	gb
[5] = ~0;

439 
	gb
[6] = ~0;

440 
	gb
[7] = ~0;

443 #ñi‡
LONG_MAX
 == 9223372036854775807L

445 
	gb
[4] = (sig√d Ë(
v
 >> 32);

446 
	gb
[5] = (sig√d Ë(
v
 >> 40);

447 
	gb
[6] = (sig√d Ë(
v
 >> 48);

448 
	gb
[7] = (sig√d Ë(
v
 >> 56);

452 #îr‹ 
wrôe
<
T
> (T &
out
, sig√d 
v
Ë
nŸ
 
im∂emíãd


456 
	gwrôeSig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 8);

460 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

462 
wrôe
 (
T
 &
out
, 
v
)

464 
	gb
[8];

466 
	gb
[0] = (Ë(
v
);

467 
	gb
[1] = (Ë(
v
 >> 8);

468 
	gb
[2] = (Ë(
v
 >> 16);

469 
	gb
[3] = (Ë(
v
 >> 24);

471 #i‡
ULONG_MAX
 == 4294967295U

473 
	gb
[4] = 0;

474 
	gb
[5] = 0;

475 
	gb
[6] = 0;

476 
	gb
[7] = 0;

478 #ñi‡
ULONG_MAX
 == 18446744073709551615LU

480 
	gb
[4] = (Ë(
v
 >> 32);

481 
	gb
[5] = (Ë(
v
 >> 40);

482 
	gb
[6] = (Ë(
v
 >> 48);

483 
	gb
[7] = (Ë(
v
 >> 56);

487 #îr‹ 
wrôe
<
T
> (T &
out
, 
v
Ë
nŸ
 
im∂emíãd


491 
	gwrôeUnsig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 8);

495 #i‡
ULONG_MAX
 != 18446744073709551615LU

497 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

499 
wrôe
 (
T
 &
out
, 
I¡64
 
v
)

501 
	gb
[8];

503 
	gb
[0] = (Ë(
v
);

504 
	gb
[1] = (Ë(
v
 >> 8);

505 
	gb
[2] = (Ë(
v
 >> 16);

506 
	gb
[3] = (Ë(
v
 >> 24);

507 
	gb
[4] = (Ë(
v
 >> 32);

508 
	gb
[5] = (Ë(
v
 >> 40);

509 
	gb
[6] = (Ë(
v
 >> 48);

510 
	gb
[7] = (Ë(
v
 >> 56);

512 
	gwrôeUnsig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 8);

518 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

520 
wrôe
 (
T
 &
out
, 
v
)

522 uni⁄ {
	gi
; 
	gf
;} 
	gu
;

523 
	gu
.
	gf
 = 
v
;

525 
	gb
[4];

527 
	gb
[0] = (Ë(
u
.
i
);

528 
	gb
[1] = (Ë(
u
.
i
 >> 8);

529 
	gb
[2] = (Ë(
u
.
i
 >> 16);

530 
	gb
[3] = (Ë(
u
.
i
 >> 24);

532 
	gwrôeUnsig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 4);

536 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

538 
wrôe
 (
T
 &
out
, 
v
)

540 uni⁄ {
I¡64
 
	gi
; 
	gd
;} 
	gu
;

541 
	gu
.
	gd
 = 
v
;

543 
	gb
[8];

545 
	gb
[0] = (Ë(
u
.
i
);

546 
	gb
[1] = (Ë(
u
.
i
 >> 8);

547 
	gb
[2] = (Ë(
u
.
i
 >> 16);

548 
	gb
[3] = (Ë(
u
.
i
 >> 24);

549 
	gb
[4] = (Ë(
u
.
i
 >> 32);

550 
	gb
[5] = (Ë(
u
.
i
 >> 40);

551 
	gb
[6] = (Ë(
u
.
i
 >> 48);

552 
	gb
[7] = (Ë(
u
.
i
 >> 56);

554 
	gwrôeUnsig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 8);

558 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

559 
ölöe
 

560 
wrôe
 (
T
 &
out
, 
hÆf
 
v
)

562 
	gb
[2];

564 
	gb
[0] = (Ë(
v
.
bôs
());

565 
	gb
[1] = (Ë(
v
.
bôs
() >> 8);

567 
	gwrôeUnsig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 2);

571 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

572 
ölöe
 

573 
wrôe
 (
T
 &
out
, c⁄° 
v
[], 
n
)

575 
	gS
::
wrôeCh¨s
 (
out
, 
v
, 
n
);

579 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

581 
wrôe
 (
T
 &
out
, c⁄° 
v
[])

583 *
	gv
)

585 
	gS
::
wrôeCh¨s
 (
out
, 
v
, 1);

586 ++
	gv
;

589 
	gS
::
wrôeCh¨s
 (
out
, 
v
, 1);

593 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

595 
∑d
 (
T
 &
out
, 
n
)

597 
	gi
 = 0; i < 
	gn
; i++)

599 c⁄° 
	gc
 = 0;

600 
	gS
::
wrôeCh¨s
 (
out
, &
c
, 1);

605 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

606 
ölöe
 

607 
ªad
 (
T
 &
ö
, 
boﬁ
 &
v
)

609 
	gc
;

611 
	gS
::
ªadCh¨s
 (
ö
, &
c
, 1);

612 
	gv
 = !!
c
;

616 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

617 
ölöe
 

618 
ªad
 (
T
 &
ö
, &
v
)

620 
	gS
::
ªadCh¨s
 (
ö
, &
v
, 1);

624 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

625 
ölöe
 

626 
ªad
 (
T
 &
ö
, sig√d &
v
)

628 
	gªadSig√dCh¨s
<
	gS
> (
	gö
, &
	gv
, 1);

632 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

633 
ölöe
 

634 
ªad
 (
T
 &
ö
, &
v
)

636 
	gªadUnsig√dCh¨s
<
	gS
> (
	gö
, &
	gv
, 1);

640 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

642 
ªad
 (
T
 &
ö
, sig√d &
v
)

644 sig√d 
	gb
[2];

646 
	gªadSig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 2);

648 
	gv
 = (
b
[0] & 0x00ff) |

649 (
b
[1] << 8);

653 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

655 
ªad
 (
T
 &
ö
, &
v
)

657 
	gb
[2];

659 
	gªadUnsig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 2);

661 
	gv
 = (
b
[0] & 0x00ff) |

662 (
b
[1] << 8);

666 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

668 
ªad
 (
T
 &
ö
, sig√d &
v
)

670 sig√d 
	gb
[4];

672 
	gªadSig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 4);

674 
	gv
 = (
b
[0] & 0x000000ff) |

675 ((
b
[1] << 8) & 0x0000ff00) |

676 ((
b
[2] << 16) & 0x00ff0000) |

677 (
b
[3] << 24);

681 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

683 
ªad
 (
T
 &
ö
, &
v
)

685 
	gb
[4];

687 
	gªadUnsig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 4);

689 
	gv
 = (
b
[0] & 0x000000ff) |

690 ((
b
[1] << 8) & 0x0000ff00) |

691 ((
b
[2] << 16) & 0x00ff0000) |

692 (
b
[3] << 24);

696 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

698 
ªad
 (
T
 &
ö
, sig√d &
v
)

700 sig√d 
	gb
[8];

702 
	gªadSig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 8);

704 #i‡
LONG_MAX
 == 2147483647

706 
	gv
 = (
b
[0] & 0x000000ff) |

707 ((
b
[1] << 8) & 0x0000ff00) |

708 ((
b
[2] << 16) & 0x00ff0000) |

709 (
b
[3] << 24);

711 i‡(–
	gb
[4] || b[5] || b[6] || b[7]) &&

712 (~
	gb
[4] || ~b[5] || ~b[6] || ~b[7]))

714 
throw
 
	gIex
::
OvîÊowExc
 ("Long int overflow -ÑeadáÜarge "

718 #ñi‡
LONG_MAX
 == 9223372036854775807L

720 
	gv
 = ((Ë
b
[0] & 0x00000000000000ff) |

721 (((Ë
b
[1] << 8) & 0x000000000000ff00) |

722 (((Ë
b
[2] << 16) & 0x0000000000ff0000) |

723 (((Ë
b
[3] << 24) & 0x00000000ff000000) |

724 (((Ë
b
[4] << 32) & 0x000000ff00000000) |

725 (((Ë
b
[5] << 40) & 0x0000ff0000000000) |

726 (((Ë
b
[6] << 48) & 0x00ff000000000000) |

727 ((Ë
b
[7] << 56);

731 #îr‹ 
ªad
<
T
> (T &
ö
, sig√d &
v
Ë
nŸ
 
im∂emíãd


737 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

739 
ªad
 (
T
 &
ö
, &
v
)

741 
	gb
[8];

743 
	gªadUnsig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 8);

745 #i‡
ULONG_MAX
 == 4294967295U

747 
	gv
 = (
b
[0] & 0x000000ff) |

748 ((
b
[1] << 8) & 0x0000ff00) |

749 ((
b
[2] << 16) & 0x00ff0000) |

750 (
b
[3] << 24);

752 i‡(
	gb
[4] || b[5] || b[6] || b[7])

754 
throw
 
	gIex
::
OvîÊowExc
 ("Long int overflow -ÑeadáÜarge "

758 #ñi‡
ULONG_MAX
 == 18446744073709551615LU

760 
	gv
 = ((Ë
b
[0] & 0x00000000000000ff) |

761 (((Ë
b
[1] << 8) & 0x000000000000ff00) |

762 (((Ë
b
[2] << 16) & 0x0000000000ff0000) |

763 (((Ë
b
[3] << 24) & 0x00000000ff000000) |

764 (((Ë
b
[4] << 32) & 0x000000ff00000000) |

765 (((Ë
b
[5] << 40) & 0x0000ff0000000000) |

766 (((Ë
b
[6] << 48) & 0x00ff000000000000) |

767 ((Ë
b
[7] << 56);

771 #îr‹ 
ªad
<
T
> (T &
ö
, &
v
Ë
nŸ
 
im∂emíãd


777 #i‡
ULONG_MAX
 != 18446744073709551615LU

779 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

781 
ªad
 (
T
 &
ö
, 
I¡64
 &
v
)

783 
	gb
[8];

785 
	gªadUnsig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 8);

787 
	gv
 = ((
I¡64
Ë
b
[0] & 0x00000000000000ffLL) |

788 (((
I¡64
Ë
b
[1] << 8) & 0x000000000000ff00LL) |

789 (((
I¡64
Ë
b
[2] << 16) & 0x0000000000ff0000LL) |

790 (((
I¡64
Ë
b
[3] << 24) & 0x00000000ff000000LL) |

791 (((
I¡64
Ë
b
[4] << 32) & 0x000000ff00000000LL) |

792 (((
I¡64
Ë
b
[5] << 40) & 0x0000ff0000000000LL) |

793 (((
I¡64
Ë
b
[6] << 48) & 0x00ff000000000000LL) |

794 ((
I¡64
Ë
b
[7] << 56);

800 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

802 
ªad
 (
T
 &
ö
, &
v
)

804 
	gb
[4];

806 
	gªadUnsig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 4);

808 uni⁄ {
	gi
; 
	gf
;} 
	gu
;

810 
	gu
.
	gi
 = (
b
[0] & 0x000000ff) |

811 ((
b
[1] << 8) & 0x0000ff00) |

812 ((
b
[2] << 16) & 0x00ff0000) |

813 (
b
[3] << 24);

815 
	gv
 = 
u
.
f
;

819 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

821 
ªad
 (
T
 &
ö
, &
v
)

823 
	gb
[8];

825 
	gªadUnsig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 8);

827 uni⁄ {
I¡64
 
	gi
; 
	gd
;} 
	gu
;

829 
	gu
.
	gi
 = ((
I¡64
Ë
b
[0] & 0x00000000000000ffULL) |

830 (((
I¡64
Ë
b
[1] << 8) & 0x000000000000ff00ULL) |

831 (((
I¡64
Ë
b
[2] << 16) & 0x0000000000ff0000ULL) |

832 (((
I¡64
Ë
b
[3] << 24) & 0x00000000ff000000ULL) |

833 (((
I¡64
Ë
b
[4] << 32) & 0x000000ff00000000ULL) |

834 (((
I¡64
Ë
b
[5] << 40) & 0x0000ff0000000000ULL) |

835 (((
I¡64
Ë
b
[6] << 48) & 0x00ff000000000000ULL) |

836 ((
I¡64
Ë
b
[7] << 56);

838 
	gv
 = 
u
.
d
;

842 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

843 
ölöe
 

844 
ªad
 (
T
 &
ö
, 
hÆf
 &
v
)

846 
	gb
[2];

848 
	gªadUnsig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 2);

850 
	gv
.
£tBôs
 ((
b
[0] & 0x00ff) | (b[1] << 8));

854 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

855 
ölöe
 

856 
ªad
 (
T
 &
ö
, 
v
[], 
n
)

858 
	gS
::
ªadCh¨s
 (
ö
, 
v
, 
n
);

862 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

864 
ªad
 (
T
 &
ö
, 
n
, 
v
[])

866 
	gn
 >= 0)

868 
S
::
ªadCh¨s
 (
ö
, 
v
, 1);

870 i‡(*
	gv
 == 0)

873 --
	gn
;

874 ++
	gv
;

879 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

881 
skù
 (
T
 &
ö
, 
n
)

883 
	gc
[1024];

885 
	gn
 >(Ë (
c
))

887 i‡(!
S
::
ªadCh¨s
 (
ö
, 
c
,  (c)))

890 
	gn
 - (
c
);

893 i‡(
	gn
 >= 1)

894 
S
::
ªadCh¨s
 (
ö
, 
c
, 
n
);

898 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <
	gboﬁ
> () { 1;}

899 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <> () { 1;}

900 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <signed > () { 1;}

901 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <> () { 1;}

902 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <signed > () { 2;}

903 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <> () { 2;}

904 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <signed > () { 4;}

905 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <> () { 4;}

906 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <signed > () { 8;}

907 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <> () { 8;}

908 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <> () { 4;}

909 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <> () { 8;}

910 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <
	ghÆf
> () { 2;}

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/OpenEXRConfig.h

43 
	#HAVE_COMPLETE_IOMANIP
 1

	)

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h

85 #i‚de‡
_HALF_H_


86 
	#_HALF_H_


	)

88 
	~<io°ªam
>

90 ˛as†
	chÆf


92 
	mpublic
:

98 
hÆf
 ();

99 
hÆf
 (
f
);

106 
›î©‹
 () const;

113 
hÆf
 
›î©‹
 - () const;

120 
hÆf
 & 
›î©‹
 = (hÆ‡
h
);

121 
hÆf
 & 
›î©‹
 = (
f
);

123 
hÆf
 & 
›î©‹
 +(hÆ‡
h
);

124 
hÆf
 & 
›î©‹
 +(
f
);

126 
hÆf
 & 
›î©‹
 -(hÆ‡
h
);

127 
hÆf
 & 
›î©‹
 -(
f
);

129 
hÆf
 & 
›î©‹
 *(hÆ‡
h
);

130 
hÆf
 & 
›î©‹
 *(
f
);

132 
hÆf
 & 
›î©‹
 /(hÆ‡
h
);

133 
hÆf
 & 
›î©‹
 /(
f
);

142 
hÆf
 
	$round
 (
n
) const;

166 
boﬁ
 
	$isFöôe
 () const;

167 
boﬁ
 
	$isN‹mÆized
 () const;

168 
boﬁ
 
	$isDí‹mÆized
 () const;

169 
boﬁ
 
	$isZîo
 () const;

170 
boﬁ
 
	$isN™
 () const;

171 
boﬁ
 
	$isInföôy
 () const;

172 
boﬁ
 
	$isNeg©ive
 () const;

189 
hÆf
 
	`posInf
 ();

190 
hÆf
 
	`√gInf
 ();

191 
hÆf
 
	`qN™
 ();

192 
hÆf
 
	`sN™
 ();

199 
	$bôs
 () const;

200 
	`£tBôs
 (
bôs
);

203 
public
:

205 
	uuif


207 
i
;

208 
f
;

211 
¥iv©e
:

213 
	`c⁄vît
 (
i
);

214 
	`ovîÊow
 ();

216 
_h
;

222 #i‚de‡
OPENEXR_DLL


223 c⁄° 
uif
 
_toFlﬂt
[1 << 16];

224 c⁄° 
_eLut
[1 << 9];

226 
	}
};

228 #i‡
deföed
(
OPENEXR_DLL
)

232 #i‡
deföed
(
HALF_EXPORTS
)

233 
	$__de˛•ec
(
dŒexp‹t
Ë
hÆf
::
uif
 
_toFlﬂt
[1 << 16];

234 
	$__de˛•ec
(
dŒexp‹t
Ë
_eLut
[1 << 9];

236 
	$__de˛•ec
(
dŒimp‹t
Ë
hÆf
::
uif
 
_toFlﬂt
[1 << 16];

237 
	$__de˛•ec
(
dŒimp‹t
Ë
_eLut
[1 << 9];

246 
°d
::
o°ªam
 & 
›î©‹
 << (°d::o°ªam &
os
, 
hÆf
 
h
);

247 
°d
::
i°ªam
 & 
›î©‹
 >> (°d::i°ªam &
is
, 
hÆf
 &
h
);

254 
	`¥ötBôs
 (
°d
::
o°ªam
 &
os
, 
hÆf
 
h
);

255 
	`¥ötBôs
 (
°d
::
o°ªam
 &
os
, 
f
);

256 
	`¥ötBôs
 (
c
[19], 
hÆf
 
h
);

257 
	`¥ötBôs
 (
c
[35], 
f
);

268 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


270 
	#HALF_MIN
 5.96046448e-08f

271 

	)

272 
	#HALF_NRM_MIN
 6.10351562e-05f

273 

	)

274 
	#HALF_MAX
 65504.0f

275 

	)

276 
	#HALF_EPSILON
 0.00097656f

278 #ñ£

	)

280 
	#HALF_MIN
 5.96046448e-08

281 

	)

282 
	#HALF_NRM_MIN
 6.10351562e-05

283 

	)

284 
	#HALF_MAX
 65504.0

285 

	)

286 
	#HALF_EPSILON
 0.00097656

289 

	)

291 
	#HALF_MANT_DIG
 11

293 

	)

294 
	#HALF_DIG
 2

296 

	)

297 
	#HALF_RADIX
 2

298 

	)

299 
	#HALF_MIN_EXP
 -13

303 

	)

304 
	#HALF_MAX_EXP
 16

308 

	)

309 
	#HALF_MIN_10_EXP
 -4

312 

	)

313 
	#HALF_MAX_10_EXP
 4

316 

	)

434 
ölöe


435 
hÆf
::
	$hÆf
 ()

438 
	}
}

445 
ölöe


446 
hÆf
::
	$hÆf
 (
f
)

448 i‡(
f
 == 0)

455 
_h
 = 0;

475 
uif
 
x
;

477 
x
.
f
 = f;

479 
e
 = (
x
.
i
 >> 23) & 0x000001ff;

481 
e
 = 
_eLut
[e];

483 i‡(
e
)

490 
_h
 = 
e
 + (((
x
.
i
 & 0x007fffff) + 0x00001000) >> 13);

498 
_h
 = 
	`c⁄vît
 (
x
.
i
);

501 
	}
}

508 
ölöe


509 
	ghÆf
::
›î©‹
 () const

511  
_toFlﬂt
[
_h
].
f
;

512 
	}
}

519 
ölöe
 
hÆf


520 
	ghÆf
::
	$round
 (
n
) const

526 i‡(
n
 >= 10)

527  *
this
;

534 
s
 = 
_h
 & 0x8000;

535 
e
 = 
_h
 & 0x7fff;

544 
e
 >>9 - 
n
;

545 
e
 +=É & 1;

546 
e
 <<9 - 
n
;

552 i‡(
e
 >= 0x7c00)

558 
e
 = 
_h
;

559 
e
 >>10 - 
n
;

560 
e
 <<10 - 
n
;

567 
hÆf
 
h
;

568 
h
.
_h
 = 
s
 | 
e
;

570  
h
;

571 
	}
}

578 
ölöe
 
hÆf


579 
	ghÆf
::
›î©‹
 - () const

581 
hÆf
 
h
;

582 
	gh
.
	g_h
 = 
_h
 ^ 0x8000;

583  
	gh
;

587 
ölöe
 
	ghÆf
 &

588 
	ghÆf
::
›î©‹
 = (
hÆf
 
h
)

590 
_h
 = 
h
._h;

591  *
	gthis
;

595 
ölöe
 
	ghÆf
 &

596 
	ghÆf
::
›î©‹
 = (
f
)

598 *
this
 = 
hÆf
 (
f
);

599  *
	gthis
;

603 
ölöe
 
	ghÆf
 &

604 
	ghÆf
::
›î©‹
 +(
hÆf
 
h
)

606 *
this
 = 
hÆf
 ((*thisË+ (
h
));

607  *
	gthis
;

611 
ölöe
 
	ghÆf
 &

612 
	ghÆf
::
›î©‹
 +(
f
)

614 *
this
 = 
hÆf
 ((*thisË+ 
f
);

615  *
	gthis
;

619 
ölöe
 
	ghÆf
 &

620 
	ghÆf
::
›î©‹
 -(
hÆf
 
h
)

622 *
this
 = 
hÆf
 ((*thisË- (
h
));

623  *
	gthis
;

627 
ölöe
 
	ghÆf
 &

628 
	ghÆf
::
›î©‹
 -(
f
)

630 *
this
 = 
hÆf
 ((*thisË- 
f
);

631  *
	gthis
;

635 
ölöe
 
	ghÆf
 &

636 
	ghÆf
::
›î©‹
 *(
hÆf
 
h
)

638 *
this
 = 
hÆf
 ((*thisË* (
h
));

639  *
	gthis
;

643 
ölöe
 
	ghÆf
 &

644 
	ghÆf
::
›î©‹
 *(
f
)

646 *
this
 = 
hÆf
 ((*thisË* 
f
);

647  *
	gthis
;

651 
ölöe
 
	ghÆf
 &

652 
	ghÆf
::
›î©‹
 /(
hÆf
 
h
)

654 *
this
 = 
hÆf
 ((*thisË/ (
h
));

655  *
	gthis
;

659 
ölöe
 
	ghÆf
 &

660 
	ghÆf
::
›î©‹
 /(
f
)

662 *
this
 = 
hÆf
 ((*thisË/ 
f
);

663  *
	gthis
;

667 
ölöe
 
boﬁ


668 
	ghÆf
::
	$isFöôe
 () const

670 
e
 = (
_h
 >> 10) & 0x001f;

671  
e
 < 31;

672 
	}
}

675 
ölöe
 
boﬁ


676 
	ghÆf
::
	$isN‹mÆized
 () const

678 
e
 = (
_h
 >> 10) & 0x001f;

679  
e
 > 0 &&É < 31;

680 
	}
}

683 
ölöe
 
boﬁ


684 
	ghÆf
::
	$isDí‹mÆized
 () const

686 
e
 = (
_h
 >> 10) & 0x001f;

687 
m
 = 
_h
 & 0x3ff;

688  
e
 =0 && 
m
 != 0;

689 
	}
}

692 
ölöe
 
boﬁ


693 
	ghÆf
::
	$isZîo
 () const

695  (
_h
 & 0x7fff) == 0;

696 
	}
}

699 
ölöe
 
boﬁ


700 
	ghÆf
::
	$isN™
 () const

702 
e
 = (
_h
 >> 10) & 0x001f;

703 
m
 = 
_h
 & 0x3ff;

704  
e
 =31 && 
m
 != 0;

705 
	}
}

708 
ölöe
 
boﬁ


709 
	ghÆf
::
	$isInföôy
 () const

711 
e
 = (
_h
 >> 10) & 0x001f;

712 
m
 = 
_h
 & 0x3ff;

713  
e
 =31 && 
m
 == 0;

714 
	}
}

717 
ölöe
 
boﬁ


718 
	ghÆf
::
	$isNeg©ive
 () const

720  (
_h
 & 0x8000) != 0;

721 
	}
}

724 
ölöe
 
hÆf


725 
	ghÆf
::
	$posInf
 ()

727 
hÆf
 
h
;

728 
h
.
_h
 = 0x7c00;

729  
h
;

730 
	}
}

733 
ölöe
 
hÆf


734 
	ghÆf
::
	$√gInf
 ()

736 
hÆf
 
h
;

737 
h
.
_h
 = 0xfc00;

738  
h
;

739 
	}
}

742 
ölöe
 
hÆf


743 
	ghÆf
::
	$qN™
 ()

745 
hÆf
 
h
;

746 
h
.
_h
 = 0x7fff;

747  
h
;

748 
	}
}

751 
ölöe
 
hÆf


752 
	ghÆf
::
	$sN™
 ()

754 
hÆf
 
h
;

755 
h
.
_h
 = 0x7dff;

756  
h
;

757 
	}
}

760 
ölöe
 

761 
	ghÆf
::
	$bôs
 () const

763  
_h
;

764 
	}
}

767 
ölöe
 

768 
	ghÆf
::
	$£tBôs
 (
bôs
)

770 
_h
 = 
bôs
;

771 
	}
}

773 #unde‡
HALF_EXPORT_CONST


	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfFunction.h

83 #i‚de‡
_HALF_FUNCTION_H_


84 
	#_HALF_FUNCTION_H_


	)

86 
	~<Êﬂt.h
>

87 
	~"hÆf.h
"

90 
	gãm∂©e
 <
˛ass
 
	gT
>

91 ˛as†
	chÆfFun˘i⁄


93 
	mpublic
:

99 
ãm∂©e
 <
˛ass
 
Fun˘i⁄
>

100 
hÆfFun˘i⁄
 (
Fun˘i⁄
 
f
,

101 
hÆf
 
domaöMö
 = -
HALF_MAX
,

102 
hÆf
 
domaöMax
 = 
HALF_MAX
,

103 
T
 
deÁu…VÆue
 = 0,

104 
T
 
posInfVÆue
 = 0,

105 
T
 
√gInfVÆue
 = 0,

106 
T
 
«nVÆue
 = 0);

112 
T
 
	$›î©‹
 (Ë(
hÆf
 
x
) const;

114 
¥iv©e
:

116 
T
 
_lut
[1 << 16];

124 
ãm∂©e
 <
˛ass
 
T
>

125 
ãm∂©e
 <
˛ass
 
Fun˘i⁄
>

126 
hÆfFun˘i⁄
<
T
>::
	$hÆfFun˘i⁄
 (
Fun˘i⁄
 
f
,

127 
hÆf
 
domaöMö
,

128 
hÆf
 
domaöMax
,

129 
T
 
deÁu…VÆue
,

130 
T
 
posInfVÆue
,

131 
T
 
√gInfVÆue
,

132 
T
 
«nVÆue
)

134 
i
 = 0; i < (1 << 16); i++)

136 
hÆf
 
x
;

137 
x
.
	`£tBôs
 (
i
);

139 i‡(
x
.
	`isN™
())

140 
_lut
[
i
] = 
«nVÆue
;

141 i‡(
x
.
	`isInföôy
())

142 
_lut
[
i
] = 
x
.
	`isNeg©ive
()? 
√gInfVÆue
: 
posInfVÆue
;

143 i‡(
x
 < 
domaöMö
 || x > 
domaöMax
)

144 
_lut
[
i
] = 
deÁu…VÆue
;

146 
_lut
[
i
] = 
	`f
 (
x
);

148 
	}
}

151 
	gãm∂©e
 <
˛ass
 
	gT
>

152 
ölöe
 
T


153 
	ghÆfFun˘i⁄
<
	gT
>::
	$›î©‹
 (Ë(
hÆf
 
x
) const

155  
_lut
[
x
.
	`bôs
()];

156 
	}
}

	@shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h

41 #i‚de‡
INCLUDED_HALF_LIMITS_H


42 
	#INCLUDED_HALF_LIMITS_H


	)

51 
	~<limôs
>

52 
	~"hÆf.h
"

54 
«me•a˚
 
	g°d
 {

56 
	gãm∂©e
 <>

57 
˛ass
 
	gnumîic_limôs
 <
	ghÆf
>

59 
	gpublic
:

61 c⁄° 
boﬁ
 
is_•ecülized
 = 
åue
;

63 
hÆf
 
mö
 (Ë
throw
 (Ë{ 
	gHALF_NRM_MIN
;}

64 
hÆf
 
max
 (Ë
throw
 (Ë{ 
	gHALF_MAX
;}

66 c⁄° 
	gdigôs
 = 
HALF_MANT_DIG
;

67 c⁄° 
	gdigôs10
 = 
HALF_DIG
;

68 c⁄° 
boﬁ
 
	gis_sig√d
 = 
åue
;

69 c⁄° 
boﬁ
 
	gis_öãgî
 = 
Ál£
;

70 c⁄° 
boﬁ
 
	gis_exa˘
 = 
Ál£
;

71 c⁄° 
	gødix
 = 
HALF_RADIX
;

72 
hÆf
 
ïsû⁄
 (Ë
throw
 (Ë{ 
	gHALF_EPSILON
;}

73 
hÆf
 
round_îr‹
 (Ë
throw
 (Ë{ 
	gHALF_EPSILON
 / 2;}

75 c⁄° 
	gmö_exp⁄ít
 = 
HALF_MIN_EXP
;

76 c⁄° 
	gmö_exp⁄ít10
 = 
HALF_MIN_10_EXP
;

77 c⁄° 
	gmax_exp⁄ít
 = 
HALF_MAX_EXP
;

78 c⁄° 
	gmax_exp⁄ít10
 = 
HALF_MAX_10_EXP
;

80 c⁄° 
boﬁ
 
	ghas_öföôy
 = 
åue
;

81 c⁄° 
boﬁ
 
	ghas_quõt_NaN
 = 
åue
;

82 c⁄° 
boﬁ
 
	ghas_sig«lög_NaN
 = 
åue
;

83 c⁄° 
Êﬂt_dí‹m_°yÀ
 
	ghas_dí‹m
 = 
dí‹m_¥e£¡
;

84 c⁄° 
boﬁ
 
	ghas_dí‹m_loss
 = 
Ál£
;

85 
hÆf
 
öföôy
 (Ë
throw
 (Ë{ 
	ghÆf
::
posInf
();}

86 
hÆf
 
quõt_NaN
 (Ë
throw
 (Ë{ 
	ghÆf
::
qN™
();}

87 
hÆf
 
sig«lög_NaN
 (Ë
throw
 (Ë{ 
	ghÆf
::
sN™
();}

88 
hÆf
 
dí‹m_mö
 (Ë
throw
 (Ë{ 
	gHALF_MIN
;}

90 c⁄° 
boﬁ
 
	gis_õc559
 = 
Ál£
;

91 c⁄° 
boﬁ
 
	gis_bounded
 = 
Ál£
;

92 c⁄° 
boﬁ
 
	gis_modulo
 = 
Ál£
;

94 c⁄° 
boﬁ
 
	gå≠s
 = 
åue
;

95 c⁄° 
boﬁ
 
	gtöy√ss_bef‹e
 = 
Ál£
;

96 c⁄° 
Êﬂt_round_°yÀ
 
	ground_°yÀ
 = 
round_to_√¨e°
;

	@shared/openexr-mac/include/OpenEXR/Iex.h

37 #i‚de‡
INCLUDED_IEX_H


38 
	#INCLUDED_IEX_H


	)

48 
	~"IexMa¸os.h
"

49 
	~"IexBa£Exc.h
"

50 
	~"IexM©hExc.h
"

51 
	~"IexThrowEºnoExc.h
"

	@shared/openexr-mac/include/OpenEXR/IexBaseExc.h

37 #i‚de‡
INCLUDED_IEXBASEEXC_H


38 
	#INCLUDED_IEXBASEEXC_H


	)

48 
	~<°rög
>

49 
	~<ex˚±i⁄
>

50 
	~<s°ªam
>

52 
«me•a˚
 
	gIex
 {

54 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


56 #¥agm®
w¨nög
(
dißbÀ
:4290)

63 
˛ass
 
	gBa£Exc
: 
public
 
°d
::
°rög
,Öubli¯
	g°d
::
ex˚±i⁄


65 
public
:

71 
Ba£Exc
 (c⁄° *
s
 = 0Ë
throw
();

72 
Ba£Exc
 (c⁄° 
°d
::
°rög
 &
s
Ë
throw
();

73 
Ba£Exc
 (
°d
::
°rög°ªam
 &
s
Ë
throw
();

75 
Ba£Exc
 (c⁄° Ba£Ex¯&
be
Ë
throw
();

76 
	gvútuÆ
 ~
Ba£Exc
 (Ë
throw
 ();

82 
vútuÆ
 c⁄° * 
wh©
 (Ëc⁄° 
throw
 ();

89 
	gBa£Exc
 & 
assign
 (
°d
::
°rög°ªam
 &
s
);

90 
	gBa£Exc
 & 
	g›î©‹
 = (
°d
::
°rög°ªam
 &
s
);

92 
	gBa£Exc
 & 
≠≥nd
 (
°d
::
°rög°ªam
 &
s
);

93 
	gBa£Exc
 & 
	g›î©‹
 +(
°d
::
°rög°ªam
 &
s
);

101 
	gBa£Exc
 & 
assign
 (c⁄° *
s
);

102 
	gBa£Exc
 & 
	g›î©‹
 = (c⁄° *
s
);

104 
	gBa£Exc
 & 
≠≥nd
 (c⁄° *
s
);

105 
	gBa£Exc
 & 
	g›î©‹
 +(c⁄° *
s
);

115 c⁄° 
	g°d
::
°rög
 & 
°ackTø˚
 () const;

117 
	g¥iv©e
:

119 
°d
::
°rög
 
_°ackTø˚
;

128 
	#DEFINE_EXC
(
«me
, 
ba£
) \

129 
˛ass
 
«me
: 
public
 
ba£
 \

131 
public
: \

132 
	`«me
 (c⁄° * 
ãxt
=0Ë
	`throw
(): 
	`ba£
 (text) {} \

133 
	`«me
 (c⁄° 
°d
::
°rög
 &
ãxt
Ë
	`throw
(): 
	`ba£
 (text) {} \

134 
	`«me
 (
°d
::
°rög°ªam
 &
ãxt
Ë
	`throw
(): 
	`ba£
 (text) {} \

135 };

	)

142 
DEFINE_EXC
 (
ArgExc
, 
Ba£Exc
)

144 
DEFINE_EXC
 (
LogicExc
, 
Ba£Exc
)

149 
DEFINE_EXC
 (
I≈utExc
, 
Ba£Exc
)

151 
DEFINE_EXC
 (
IoExc
, 
Ba£Exc
)

153 
DEFINE_EXC
 (
M©hExc
, 
Ba£Exc
)

157 
DEFINE_EXC
 (
EºnoExc
, 
Ba£Exc
)

162 
DEFINE_EXC
 (
NoIm∂Exc
, 
Ba£Exc
)

168 
DEFINE_EXC
 (
NuŒExc
, 
Ba£Exc
)

170 
DEFINE_EXC
 (
Ty≥Exc
, 
Ba£Exc
)

200 
	g°d
::
	t°rög
 (* 
	tSèckTø˚r
) ();

202 
£tSèckTø˚r
 (
SèckTø˚r
 
°ackTø˚r
);

203 
SèckTø˚r
 
°ackTø˚r
 ();

210 
ölöe
 
	gBa£Exc
 &

211 
	gBa£Exc
::
›î©‹
 = (
°d
::
°rög°ªam
 &
s
)

213  
assign
 (
s
);

217 
ölöe
 
	gBa£Exc
 &

218 
	gBa£Exc
::
›î©‹
 +(
°d
::
°rög°ªam
 &
s
)

220  
≠≥nd
 (
s
);

224 
ölöe
 
	gBa£Exc
 &

225 
	gBa£Exc
::
assign
 (c⁄° *
s
)

227 
°d
::
°rög
::
assign
(
s
);

228  *
	gthis
;

232 
ölöe
 
	gBa£Exc
 &

233 
	gBa£Exc
::
›î©‹
 = (c⁄° *
s
)

235  
assign
(
s
);

239 
ölöe
 
	gBa£Exc
 &

240 
	gBa£Exc
::
≠≥nd
 (c⁄° *
s
)

242 
°d
::
°rög
::
≠≥nd
(
s
);

243  *
	gthis
;

247 
ölöe
 
	gBa£Exc
 &

248 
	gBa£Exc
::
›î©‹
 +(c⁄° *
s
)

250  
≠≥nd
(
s
);

254 
ölöe
 c⁄° 
	g°d
::
°rög
 &

255 
Ba£Exc
::
°ackTø˚
 () const

257  
_°ackTø˚
;

260 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


261 #¥agm®
w¨nög
(:4290)

	@shared/openexr-mac/include/OpenEXR/IexErrnoExc.h

37 #i‚de‡
INCLUDED_IEXERRNOEXC_H


38 
	#INCLUDED_IEXERRNOEXC_H


	)

46 
	~"IexBa£Exc.h
"

48 
«me•a˚
 
	gIex
 {

51 
DEFINE_EXC
 (
E≥rmExc
, 
EºnoExc
)

52 
DEFINE_EXC
 (
En€¡Exc
, 
EºnoExc
)

53 
DEFINE_EXC
 (
E§chExc
, 
EºnoExc
)

54 
DEFINE_EXC
 (
EöåExc
, 
EºnoExc
)

55 
DEFINE_EXC
 (
EioExc
, 
EºnoExc
)

56 
DEFINE_EXC
 (
EnxioExc
, 
EºnoExc
)

57 
DEFINE_EXC
 (
E2bigExc
, 
EºnoExc
)

58 
DEFINE_EXC
 (
En€xecExc
, 
EºnoExc
)

59 
DEFINE_EXC
 (
EbadfExc
, 
EºnoExc
)

60 
DEFINE_EXC
 (
EchûdExc
, 
EºnoExc
)

61 
DEFINE_EXC
 (
EagaöExc
, 
EºnoExc
)

62 
DEFINE_EXC
 (
EnomemExc
, 
EºnoExc
)

63 
DEFINE_EXC
 (
Eac˚sExc
, 
EºnoExc
)

64 
DEFINE_EXC
 (
EÁu…Exc
, 
EºnoExc
)

65 
DEFINE_EXC
 (
EnŸblkExc
, 
EºnoExc
)

66 
DEFINE_EXC
 (
EbusyExc
, 
EºnoExc
)

67 
DEFINE_EXC
 (
Eexi°Exc
, 
EºnoExc
)

68 
DEFINE_EXC
 (
ExdevExc
, 
EºnoExc
)

69 
DEFINE_EXC
 (
EnodevExc
, 
EºnoExc
)

70 
DEFINE_EXC
 (
EnŸdúExc
, 
EºnoExc
)

71 
DEFINE_EXC
 (
EisdúExc
, 
EºnoExc
)

72 
DEFINE_EXC
 (
EövÆExc
, 
EºnoExc
)

73 
DEFINE_EXC
 (
EnfûeExc
, 
EºnoExc
)

74 
DEFINE_EXC
 (
EmfûeExc
, 
EºnoExc
)

75 
DEFINE_EXC
 (
EnŸtyExc
, 
EºnoExc
)

76 
DEFINE_EXC
 (
EtxtbsyExc
, 
EºnoExc
)

77 
DEFINE_EXC
 (
EfbigExc
, 
EºnoExc
)

78 
DEFINE_EXC
 (
Eno•cExc
, 
EºnoExc
)

79 
DEFINE_EXC
 (
E•ùeExc
, 
EºnoExc
)

80 
DEFINE_EXC
 (
ErofsExc
, 
EºnoExc
)

81 
DEFINE_EXC
 (
EmlökExc
, 
EºnoExc
)

82 
DEFINE_EXC
 (
EpùeExc
, 
EºnoExc
)

83 
DEFINE_EXC
 (
EdomExc
, 
EºnoExc
)

84 
DEFINE_EXC
 (
EøngeExc
, 
EºnoExc
)

85 
DEFINE_EXC
 (
EnomsgExc
, 
EºnoExc
)

86 
DEFINE_EXC
 (
EidrmExc
, 
EºnoExc
)

87 
DEFINE_EXC
 (
Ech∫gExc
, 
EºnoExc
)

88 
DEFINE_EXC
 (
El2nsyncExc
, 
EºnoExc
)

89 
DEFINE_EXC
 (
El3h…Exc
, 
EºnoExc
)

90 
DEFINE_EXC
 (
El3r°Exc
, 
EºnoExc
)

91 
DEFINE_EXC
 (
E ∫gExc
, 
EºnoExc
)

92 
DEFINE_EXC
 (
Eu«tchExc
, 
EºnoExc
)

93 
DEFINE_EXC
 (
EnocsiExc
, 
EºnoExc
)

94 
DEFINE_EXC
 (
El2h…Exc
, 
EºnoExc
)

95 
DEFINE_EXC
 (
EdódlkExc
, 
EºnoExc
)

96 
DEFINE_EXC
 (
EnﬁckExc
, 
EºnoExc
)

97 
DEFINE_EXC
 (
EbadeExc
, 
EºnoExc
)

98 
DEFINE_EXC
 (
EbadrExc
, 
EºnoExc
)

99 
DEFINE_EXC
 (
ExfuŒExc
, 
EºnoExc
)

100 
DEFINE_EXC
 (
EnﬂnoExc
, 
EºnoExc
)

101 
DEFINE_EXC
 (
EbadrqcExc
, 
EºnoExc
)

102 
DEFINE_EXC
 (
Ebad¶tExc
, 
EºnoExc
)

103 
DEFINE_EXC
 (
EdódlockExc
, 
EºnoExc
)

104 
DEFINE_EXC
 (
Ebf⁄tExc
, 
EºnoExc
)

105 
DEFINE_EXC
 (
Eno°rExc
, 
EºnoExc
)

106 
DEFINE_EXC
 (
Enod©aExc
, 
EºnoExc
)

107 
DEFINE_EXC
 (
EtimeExc
, 
EºnoExc
)

108 
DEFINE_EXC
 (
Eno§Exc
, 
EºnoExc
)

109 
DEFINE_EXC
 (
En⁄ëExc
, 
EºnoExc
)

110 
DEFINE_EXC
 (
En›kgExc
, 
EºnoExc
)

111 
DEFINE_EXC
 (
EªmŸeExc
, 
EºnoExc
)

112 
DEFINE_EXC
 (
EnﬁökExc
, 
EºnoExc
)

113 
DEFINE_EXC
 (
EadvExc
, 
EºnoExc
)

114 
DEFINE_EXC
 (
E§m¡Exc
, 
EºnoExc
)

115 
DEFINE_EXC
 (
EcommExc
, 
EºnoExc
)

116 
DEFINE_EXC
 (
E¥ŸoExc
, 
EºnoExc
)

117 
DEFINE_EXC
 (
Emu…ih›Exc
, 
EºnoExc
)

118 
DEFINE_EXC
 (
EbadmsgExc
, 
EºnoExc
)

119 
DEFINE_EXC
 (
E«mëoﬁ⁄gExc
, 
EºnoExc
)

120 
DEFINE_EXC
 (
EovîÊowExc
, 
EºnoExc
)

121 
DEFINE_EXC
 (
EnŸuniqExc
, 
EºnoExc
)

122 
DEFINE_EXC
 (
EbadfdExc
, 
EºnoExc
)

123 
DEFINE_EXC
 (
EªmchgExc
, 
EºnoExc
)

124 
DEFINE_EXC
 (
ElibaccExc
, 
EºnoExc
)

125 
DEFINE_EXC
 (
ElibbadExc
, 
EºnoExc
)

126 
DEFINE_EXC
 (
Elibs˙Exc
, 
EºnoExc
)

127 
DEFINE_EXC
 (
ElibmaxExc
, 
EºnoExc
)

128 
DEFINE_EXC
 (
ElibexecExc
, 
EºnoExc
)

129 
DEFINE_EXC
 (
Eû£qExc
, 
EºnoExc
)

130 
DEFINE_EXC
 (
EnosysExc
, 
EºnoExc
)

131 
DEFINE_EXC
 (
Elo›Exc
, 
EºnoExc
)

132 
DEFINE_EXC
 (
Eª°¨tExc
, 
EºnoExc
)

133 
DEFINE_EXC
 (
E°ΩùeExc
, 
EºnoExc
)

134 
DEFINE_EXC
 (
EnŸem±yExc
, 
EºnoExc
)

135 
DEFINE_EXC
 (
Eu£rsExc
, 
EºnoExc
)

136 
DEFINE_EXC
 (
EnŸsockExc
, 
EºnoExc
)

137 
DEFINE_EXC
 (
Ede°addºeqExc
, 
EºnoExc
)

138 
DEFINE_EXC
 (
EmsgsizeExc
, 
EºnoExc
)

139 
DEFINE_EXC
 (
E¥ŸŸy≥Exc
, 
EºnoExc
)

140 
DEFINE_EXC
 (
En›rŸo›tExc
, 
EºnoExc
)

141 
DEFINE_EXC
 (
E¥Ÿ⁄osuµ‹tExc
, 
EºnoExc
)

142 
DEFINE_EXC
 (
Esockäosuµ‹tExc
, 
EºnoExc
)

143 
DEFINE_EXC
 (
E›nŸsuµExc
, 
EºnoExc
)

144 
DEFINE_EXC
 (
Ep‚osuµ‹tExc
, 
EºnoExc
)

145 
DEFINE_EXC
 (
Ea‚osuµ‹tExc
, 
EºnoExc
)

146 
DEFINE_EXC
 (
Eaddröu£Exc
, 
EºnoExc
)

147 
DEFINE_EXC
 (
Eadd∫ŸavaûExc
, 
EºnoExc
)

148 
DEFINE_EXC
 (
E√tdownExc
, 
EºnoExc
)

149 
DEFINE_EXC
 (
E√tuƒóchExc
, 
EºnoExc
)

150 
DEFINE_EXC
 (
E√åe£tExc
, 
EºnoExc
)

151 
DEFINE_EXC
 (
Ec⁄«b‹ãdExc
, 
EºnoExc
)

152 
DEFINE_EXC
 (
Ec⁄ƒe£tExc
, 
EºnoExc
)

153 
DEFINE_EXC
 (
EnobufsExc
, 
EºnoExc
)

154 
DEFINE_EXC
 (
Eisc⁄nExc
, 
EºnoExc
)

155 
DEFINE_EXC
 (
EnŸc⁄nExc
, 
EºnoExc
)

156 
DEFINE_EXC
 (
EshutdownExc
, 
EºnoExc
)

157 
DEFINE_EXC
 (
Etoom™yªfsExc
, 
EºnoExc
)

158 
DEFINE_EXC
 (
EtimedoutExc
, 
EºnoExc
)

159 
DEFINE_EXC
 (
Ec⁄ƒefu£dExc
, 
EºnoExc
)

160 
DEFINE_EXC
 (
Eho°downExc
, 
EºnoExc
)

161 
DEFINE_EXC
 (
Eho°uƒóchExc
, 
EºnoExc
)

162 
DEFINE_EXC
 (
EÆªadyExc
, 
EºnoExc
)

163 
DEFINE_EXC
 (
Eö¥ogªssExc
, 
EºnoExc
)

164 
DEFINE_EXC
 (
E°ÆeExc
, 
EºnoExc
)

165 
DEFINE_EXC
 (
Ei‹esidExc
, 
EºnoExc
)

166 
DEFINE_EXC
 (
Eu˛ónExc
, 
EºnoExc
)

167 
DEFINE_EXC
 (
EnŸ«mExc
, 
EºnoExc
)

168 
DEFINE_EXC
 (
E«vaûExc
, 
EºnoExc
)

169 
DEFINE_EXC
 (
Ei¢amExc
, 
EºnoExc
)

170 
DEFINE_EXC
 (
EªmŸeioExc
, 
EºnoExc
)

171 
DEFINE_EXC
 (
EöôExc
, 
EºnoExc
)

172 
DEFINE_EXC
 (
EªmdevExc
, 
EºnoExc
)

173 
DEFINE_EXC
 (
Eˇn˚ÀdExc
, 
EºnoExc
)

174 
DEFINE_EXC
 (
EnﬁimfûeExc
, 
EºnoExc
)

175 
DEFINE_EXC
 (
E¥o˛imExc
, 
EºnoExc
)

176 
DEFINE_EXC
 (
EdisjoötExc
, 
EºnoExc
)

177 
DEFINE_EXC
 (
EnﬁogöExc
, 
EºnoExc
)

178 
DEFINE_EXC
 (
ElogölimExc
, 
EºnoExc
)

179 
DEFINE_EXC
 (
Egrou∂o›Exc
, 
EºnoExc
)

180 
DEFINE_EXC
 (
EnﬂâachExc
, 
EºnoExc
)

181 
DEFINE_EXC
 (
EnŸsupExc
, 
EºnoExc
)

182 
DEFINE_EXC
 (
EnﬂârExc
, 
EºnoExc
)

183 
DEFINE_EXC
 (
Edúc‹ru±edExc
, 
EºnoExc
)

184 
DEFINE_EXC
 (
EdquŸExc
, 
EºnoExc
)

185 
DEFINE_EXC
 (
Enf§emŸeExc
, 
EºnoExc
)

186 
DEFINE_EXC
 (
Ec⁄åﬁÀrExc
, 
EºnoExc
)

187 
DEFINE_EXC
 (
EnŸc⁄åﬁÀrExc
, 
EºnoExc
)

188 
DEFINE_EXC
 (
EíqueuedExc
, 
EºnoExc
)

189 
DEFINE_EXC
 (
EnŸíqueuedExc
, 
EºnoExc
)

190 
DEFINE_EXC
 (
EjoöedExc
, 
EºnoExc
)

191 
DEFINE_EXC
 (
EnŸjoöedExc
, 
EºnoExc
)

192 
DEFINE_EXC
 (
En›rocExc
, 
EºnoExc
)

193 
DEFINE_EXC
 (
Emu°runExc
, 
EºnoExc
)

194 
DEFINE_EXC
 (
EnŸ°›≥dExc
, 
EºnoExc
)

195 
DEFINE_EXC
 (
E˛ock˝uExc
, 
EºnoExc
)

196 
DEFINE_EXC
 (
EövÆ°©eExc
, 
EºnoExc
)

197 
DEFINE_EXC
 (
En€xi°Exc
, 
EºnoExc
)

198 
DEFINE_EXC
 (
Eídofmö‹Exc
, 
EºnoExc
)

199 
DEFINE_EXC
 (
EbufsizeExc
, 
EºnoExc
)

200 
DEFINE_EXC
 (
Eem±yExc
, 
EºnoExc
)

201 
DEFINE_EXC
 (
EnoöågroupExc
, 
EºnoExc
)

202 
DEFINE_EXC
 (
EövÆmodeExc
, 
EºnoExc
)

203 
DEFINE_EXC
 (
Eˇ¡exã¡Exc
, 
EºnoExc
)

204 
DEFINE_EXC
 (
EövÆtimeExc
, 
EºnoExc
)

205 
DEFINE_EXC
 (
Ede°royedExc
, 
EºnoExc
)

	@shared/openexr-mac/include/OpenEXR/IexMacros.h

37 #i‚de‡
INCLUDED_IEXMACROS_H


38 
	#INCLUDED_IEXMACROS_H


	)

46 
	~<s°ªam
>

58 
	#THROW
(
ty≥
, 
ãxt
) \

61 
°d
::
°rög°ªam
 
s
; \

62 
s
 << 
ãxt
; \

63 
throw
 
	`ty≥
 (
s
); \

65 0)

	)

91 
	#APPEND_EXC
(
exc
, 
ãxt
) \

94 
°d
::
°rög°ªam
 
s
; \

95 
s
 << 
ãxt
; \

96 
exc
.
	`≠≥nd
 (
s
); \

98 0)

	)

100 
	#REPLACE_EXC
(
exc
, 
ãxt
) \

103 
°d
::
°rög°ªam
 
s
; \

104 
s
 << 
ãxt
; \

105 
exc
.
	`assign
 (
s
); \

107 0)

	)

120 
	#THROW_ERRNO
(
ãxt
) \

123 
°d
::
°rög°ªam
 
s
; \

124 
s
 << 
ãxt
; \

125 ::
Iex
::
	`throwEºnoExc
 (
s
.
	`°r
()); \

127 0)

	)

139 
	#ASSERT
(
as£πi⁄
, 
ty≥
, 
ãxt
) \

142 if–(
as£πi⁄
Ë=
Ál£
 ) \

143 
	`THROW
–
ty≥
, 
ãxt
 ); \

145 0)

	)

	@shared/openexr-mac/include/OpenEXR/IexMathExc.h

37 #i‚de‡
INCLUDED_IEXMATHEXC_H


38 
	#INCLUDED_IEXMATHEXC_H


	)

40 
	~"IexBa£Exc.h
"

42 
«me•a˚
 
	gIex
 {

49 
DEFINE_EXC
 (
OvîÊowExc
, 
M©hExc
)

50 
DEFINE_EXC
 (
UndîÊowExc
, 
M©hExc
)

51 
DEFINE_EXC
 (
DivzîoExc
, 
M©hExc
)

52 
DEFINE_EXC
 (
I√xa˘Exc
, 
M©hExc
)

53 
DEFINE_EXC
 (
InvÆidFpOpExc
, 
M©hExc
)

	@shared/openexr-mac/include/OpenEXR/IexThrowErrnoExc.h

37 #i‚de‡
INCLUDED_IEXTHROWERRNOEXC_H


38 
	#INCLUDED_IEXTHROWERRNOEXC_H


	)

46 
	~"IexBa£Exc.h
"

48 
«me•a˚
 
	gIex
 {

90 
throwEºnoExc
 (c⁄° 
°d
::
°rög
 &
txt
, 
î∫um
);

91 
throwEºnoExc
 (c⁄° 
°d
::
°rög
 &
txt
 = "%T." );

	@shared/openexr-mac/include/OpenEXR/IlmThread.h

35 #i‚de‡
INCLUDED_ILM_THREAD_H


36 
	#INCLUDED_ILM_THREAD_H


	)

93 
	~"O≥nEXRC⁄fig.h
"

95 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


96 #ifde‡
NOMINMAX


97 #unde‡
NOMINMAX


99 
	#NOMINMAX


	)

100 
	~<wödows.h
>

101 
	~<¥o˚ss.h
>

102 #ñi‡
HAVE_PTHREAD


103 
	~<±hªad.h
>

106 
«me•a˚
 
	gIlmThªad
 {

113 
boﬁ
 
suµ‹tsThªads
 ();

116 ˛as†
	cThªad


118 
	gpublic
:

120 
Thªad
 ();

121 
	gvútuÆ
 ~
Thªad
 ();

123 
°¨t
 ();

124 
vútuÆ
 
run
 () = 0;

126 
	g¥iv©e
:

128 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


129 
HANDLE
 
_thªad
;

130 #ñi‡
HAVE_PTHREAD


131 
±hªad_t
 
	g_thªad
;

134 
	g›î©‹
 = (c⁄° 
Thªad
& 
t
);

135 
Thªad
 (c⁄° Thªad& 
t
);

	@shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h

35 #i‚de‡
INCLUDED_ILM_THREAD_MUTEX_H


36 
	#INCLUDED_ILM_THREAD_MUTEX_H


	)

69 
	~"O≥nEXRC⁄fig.h
"

71 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


72 #ifde‡
NOMINMAX


73 #unde‡
NOMINMAX


75 
	#NOMINMAX


	)

76 
	~<wödows.h
>

77 #ñi‡
HAVE_PTHREAD


78 
	~<±hªad.h
>

81 
«me•a˚
 
	gIlmThªad
 {

83 
˛ass
 
	gLock
;

86 ˛as†
	cMuãx


88 
	gpublic
:

90 
Muãx
 ();

91 
	gvútuÆ
 ~
Muãx
 ();

93 
	g¥iv©e
:

95 
lock
 () const;

96 
u∆ock
 () const;

98 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


99 
muèbÀ
 
CRITICAL_SECTION
 
	g_muãx
;

100 #ñi‡
HAVE_PTHREAD


101 
muèbÀ
 
±hªad_muãx_t
 
	g_muãx
;

104 
	g›î©‹
 = (c⁄° 
Muãx
& 
M
);

105 
Muãx
 (c⁄° Muãx& 
M
);

107 
‰õnd
 
˛ass
 
	gLock
;

111 ˛as†
	cLock


113 
	gpublic
:

115 
Lock
 (c⁄° 
Muãx
& 
m
, 
boﬁ
 
autoLock
 = 
åue
):

116 
_muãx
 (
m
),

117 
_locked
 (
Ál£
)

119 i‡(
	gautoLock
)

121 
	g_muãx
.
lock
();

122 
	g_locked
 = 
åue
;

126 ~
Lock
 ()

128 i‡(
	g_locked
)

129 
	g_muãx
.
u∆ock
();

132 
acquúe
 ()

134 
	g_muãx
.
lock
();

135 
	g_locked
 = 
åue
;

138 
ªÀa£
 ()

140 
	g_muãx
.
u∆ock
();

141 
	g_locked
 = 
Ál£
;

144 
boﬁ
 
locked
 ()

146  
	g_locked
;

149 
	g¥iv©e
:

151 c⁄° 
Muãx
 & 
_muãx
;

152 
boﬁ
 
	g_locked
;

	@shared/openexr-mac/include/OpenEXR/IlmThreadPool.h

35 #i‚de‡
INCLUDED_ILM_THREAD_POOL_H


36 
	#INCLUDED_ILM_THREAD_POOL_H


	)

63 
«me•a˚
 
	gIlmThªad
 {

65 
˛ass
 
	gTaskGroup
;

66 
˛ass
 
	gTask
;

69 ˛as†
	cThªadPoﬁ


71 
	gpublic
:

78 
ThªadPoﬁ
 (
numThªads
 = 0);

86 
	gvútuÆ
 ~
ThªadPoﬁ
 ();

97 
numThªads
 () const;

98 
£tNumThªads
 (
cou¡
);

108 
addTask
 (
Task
* 
èsk
);

115 
	gThªadPoﬁ
& 
globÆThªadPoﬁ
 ();

116 
addGlobÆTask
 (
Task
* 
èsk
);

118 
	gD©a
;

120 
	g¥Ÿe˘ed
:

122 
D©a
 * 
_d©a
;

126 ˛as†
	cTask


128 
	gpublic
:

130 
Task
 (
TaskGroup
* 
g
);

131 
	gvútuÆ
 ~
Task
 ();

133 
vútuÆ
 
execuã
 () = 0;

134 
TaskGroup
 * 
group
();

136 
	g¥Ÿe˘ed
:

138 
TaskGroup
 * 
_group
;

142 ˛as†
	cTaskGroup


144 
	gpublic
:

146 
TaskGroup
();

147 ~
TaskGroup
();

149 
	gD©a
;

150 
D©a
* c⁄° 
	g_d©a
;

	@shared/openexr-mac/include/OpenEXR/IlmThreadSemaphore.h

35 #i‚de‡
INCLUDED_ILM_THREAD_SEMAPHORE_H


36 
	#INCLUDED_ILM_THREAD_SEMAPHORE_H


	)

45 
	~"O≥nEXRC⁄fig.h
"

47 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


48 #ifde‡
NOMINMAX


49 #unde‡
NOMINMAX


51 
	#NOMINMAX


	)

52 
	~<wödows.h
>

53 #ñi‡
HAVE_PTHREAD
 && !
HAVE_POSIX_SEMAPHORES


54 
	~<±hªad.h
>

55 #ñi‡
HAVE_PTHREAD
 && 
HAVE_POSIX_SEMAPHORES


56 
	~<£m≠h‹e.h
>

59 
«me•a˚
 
	gIlmThªad
 {

62 ˛as†
	cSem≠h‹e


64 
	gpublic
:

66 
Sem≠h‹e
 (
vÆue
 = 0);

67 
	gvútuÆ
 ~
Sem≠h‹e
();

69 
waô
();

70 
po°
();

71 
vÆue
() const;

73 
	g¥iv©e
:

75 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


77 
muèbÀ
 
HANDLE
 
_£m≠h‹e
;

79 #ñi‡
HAVE_PTHREAD
 && !
HAVE_POSIX_SEMAPHORES


86 
	s£ma_t


88 
	gcou¡
;

89 
	gnumWaôög
;

90 
±hªad_muãx_t
 
	gmuãx
;

91 
±hªad_c⁄d_t
 
	gn⁄Zîo
;

94 
muèbÀ
 
£ma_t
 
	g_£m≠h‹e
;

96 #ñi‡
HAVE_PTHREAD
 && 
HAVE_POSIX_SEMAPHORES


98 
muèbÀ
 
£m_t
 
	g_£m≠h‹e
;

102 
	g›î©‹
 = (c⁄° 
Sem≠h‹e
& 
s
);

103 
Sem≠h‹e
 (c⁄° Sem≠h‹e& 
s
);

	@shared/openexr-mac/include/OpenEXR/ImathBox.h

36 #i‚de‡
INCLUDED_IMATHBOX_H


37 
	#INCLUDED_IMATHBOX_H


	)

65 
	~"Im©hVec.h
"

67 
«me•a˚
 
	gIm©h
 {

70 
	gãm∂©e
 <
˛ass
 
	gT
>

71 ˛as†
	cBox


73 
	gpublic
:

79 
T
 
mö
;

80 
T
 
	gmax
;

86 
Box
();

87 
Box
(c⁄° 
T
& 
poöt
);

88 
Box
(c⁄° 
T
& 
möT
, c⁄° T& 
maxT
);

94 
boﬁ
 
	g›î©‹
 =(c⁄° 
Box
<
T
> &
§c
) const;

95 
boﬁ
 
	g›î©‹
 !(c⁄° 
Box
<
T
> &
§c
) const;

101 
makeEm±y
();

102 
exãndBy
(c⁄° 
T
& 
poöt
);

103 
exãndBy
(c⁄° 
Box
<
T
>& 
box
);

109 
T
 
size
() const;

110 
T
 
˚¡î
() const;

111 
boﬁ
 
öãr£˘s
(c⁄° 
T
 &
poöt
) const;

112 
boﬁ
 
öãr£˘s
(c⁄° 
Box
<
T
> &
box
) const;

114 
maj‹Axis
() const;

120 
boﬁ
 
isEm±y
() const;

121 
boﬁ
 
hasVﬁume
() const;

130 
	gBox
 <
	tV2s
> 
	tBox2s
;

131 
	gBox
 <
	tV2i
> 
	tBox2i
;

132 
	gBox
 <
	tV2f
> 
	tBox2f
;

133 
	gBox
 <
	tV2d
> 
	tBox2d
;

134 
	gBox
 <
	tV3s
> 
	tBox3s
;

135 
	gBox
 <
	tV3i
> 
	tBox3i
;

136 
	gBox
 <
	tV3f
> 
	tBox3f
;

137 
	gBox
 <
	tV3d
> 
	tBox3d
;

145 
	gãm∂©e
 <
˛ass
 
	gT
>

146 
ölöe
 
	gBox
<
	gT
>::
	$Box
()

148 
	`makeEm±y
();

149 
	}
}

151 
	gãm∂©e
 <
˛ass
 
	gT
>

152 
ölöe
 
	gBox
<
	gT
>::
	$Box
(c⁄° 
T
& 
poöt
)

154 
mö
 = 
poöt
;

155 
max
 = 
poöt
;

156 
	}
}

158 
	gãm∂©e
 <
˛ass
 
	gT
>

159 
ölöe
 
	gBox
<
	gT
>::
	$Box
(c⁄° 
T
& 
möV
, c⁄° T& 
maxV
)

161 
mö
 = 
möV
;

162 
max
 = 
maxV
;

163 
	}
}

165 
	gãm∂©e
 <
˛ass
 
	gT
>

166 
ölöe
 
boﬁ


167 
	gBox
<
	gT
>::
›î©‹
 =(c⁄° 
Box
<
T
> &
§c
) const

169  (
mö
 =
§c
.mö && 
max
 == src.max);

172 
	gãm∂©e
 <
˛ass
 
	gT
>

173 
ölöe
 
boﬁ


174 
	gBox
<
	gT
>::
›î©‹
 !(c⁄° 
Box
<
T
> &
§c
) const

176  (
mö
 !
§c
.mö || 
max
 != src.max);

179 
	gãm∂©e
 <
˛ass
 
	gT
>

180 
ölöe
 
	gBox
<
	gT
>::
	$makeEm±y
()

182 
mö
 = 
	`T
(
T
::
	`ba£Ty≥Max
());

183 
max
 = 
	`T
(
T
::
	`ba£Ty≥Mö
());

184 
	}
}

186 
	gãm∂©e
 <
˛ass
 
	gT
>

187 
ölöe
 
	gBox
<
	gT
>::
	$exãndBy
(c⁄° 
T
& 
poöt
)

189 
i
=0; i<
mö
.
	`dimísi⁄s
(); i++)

191 i‡–
poöt
[
i
] < 
mö
[i] ) min[i] =Öoint[i];

192 i‡–
poöt
[
i
] > 
max
[i] ) max[i] =Öoint[i];

194 
	}
}

196 
	gãm∂©e
 <
˛ass
 
	gT
>

197 
ölöe
 
	gBox
<
	gT
>::
exãndBy
(c⁄° 
Box
<
T
>& 
box
)

199 
i
=0; 
	gi
<
	gmö
.
dimísi⁄s
(); i++)

201 i‡–
	gbox
.
	gmö
[
i
] < mö[i] ) mö[i] = 
box
.
mö
[i];

202 i‡–
	gbox
.
	gmax
[
i
] > max[i] ) max[i] = 
box
.
max
[i];

206 
	gãm∂©e
 <
˛ass
 
	gT
>

207 
ölöe
 
boﬁ
 
	gBox
<
	gT
>::
	$öãr£˘s
(c⁄° 
T
& 
poöt
) const

209 
i
=0; i<
mö
.
	`dimísi⁄s
(); i++)

211 i‡(
poöt
[
i
] < 
mö
[i] ||Öoöt[i] > 
max
[i]Ë 
Ál£
;

213  
åue
;

214 
	}
}

216 
	gãm∂©e
 <
˛ass
 
	gT
>

217 
ölöe
 
boﬁ
 
	gBox
<
	gT
>::
öãr£˘s
(c⁄° 
Box
<
T
>& 
box
) const

219 
i
=0; 
	gi
<
	gmö
.
dimísi⁄s
(); i++)

221 i‡(
	gbox
.
	gmax
[
i
] < 
	gmö
[i] || box.mö[i] > max[i]Ë 
	gÁl£
;

223  
	gåue
;

226 
	gãm∂©e
 <
˛ass
 
	gT
>

227 
ölöe
 
T
 
	gBox
<
	gT
>::
	$size
() const

229 i‡(
	`isEm±y
())

230  
	`T
 (0);

232  
max
-
mö
;

233 
	}
}

235 
	gãm∂©e
 <
˛ass
 
	gT
>

236 
ölöe
 
T
 
	gBox
<
	gT
>::
	$˚¡î
() const

238  (
max
+
mö
)/2;

239 
	}
}

241 
	gãm∂©e
 <
˛ass
 
	gT
>

242 
ölöe
 
boﬁ
 
	gBox
<
	gT
>::
	$isEm±y
() const

244 
i
=0; i<
mö
.
	`dimísi⁄s
(); i++)

246 i‡(
max
[
i
] < 
mö
[i]Ë 
åue
;

248  
Ál£
;

249 
	}
}

251 
	gãm∂©e
 <
˛ass
 
	gT
>

252 
ölöe
 
boﬁ
 
	gBox
<
	gT
>::
	$hasVﬁume
() const

254 
i
=0; i<
mö
.
	`dimísi⁄s
(); i++)

256 i‡(
max
[
i
] <
mö
[i]Ë 
Ál£
;

258  
åue
;

259 
	}
}

261 
	gãm∂©e
<
˛ass
 
	gT
>

262 
ölöe
 
	gBox
<
	gT
>::
	$maj‹Axis
() const

264 
maj‹
 = 0;

265 
T
 
s
 = 
	`size
();

267 
i
=1; i<
mö
.
	`dimísi⁄s
(); i++)

269 i‡–
s
[
i
] > s[
maj‹
] ) major = i;

272  
maj‹
;

273 
	}
}

	@shared/openexr-mac/include/OpenEXR/ImathBoxAlgo.h

37 #i‚de‡
INCLUDED_IMATHBOXALGO_H


38 
	#INCLUDED_IMATHBOXALGO_H


	)

72 
	~"Im©hBox.h
"

73 
	~"Im©hM©rix.h
"

74 
	~"Im©hLöeAlgo.h
"

75 
	~"Im©hPœ√.h
"

77 
«me•a˚
 
	gIm©h
 {

80 
	gãm∂©e
 <
˛ass
 
	gT
>

81 
ölöe
 
T
 
˛ù
(c⁄° T& 
ö
, c⁄° 
Box
<T>& 
box
)

87 
T
 
	gout
;

89 
	gi
=0; i<()
	gbox
.
	gmö
.
dimísi⁄s
(); i++)

91 i‡(
	gö
[
i
] < 
	gbox
.
	gmö
[i]Ë
	gout
[i] = 
box
.
mö
[i];

92 i‡(
	gö
[
i
] > 
	gbox
.
	gmax
[i]Ë
	gout
[i] = 
box
.
max
[i];

93 
	gout
[
i
] = 
ö
[i];

96  
	gout
;

104 
	gãm∂©e
 <
˛ass
 
	gT
>

105 
	gVec3
<
	gT
>

106 
˛o£°PoötInBox
(c⁄° 
Vec3
<
T
>& 
p
, c⁄° 
Box
< Vec3<T> >& 
box
 )

108 
	gIm©h
::
V3f
 
b
;

110 i‡(
	gp
.
	gx
 < 
	gbox
.
	gmö
.x)

111 
	gb
.
	gx
 = 
box
.
mö
.
x
;

112 i‡(
	gp
.
	gx
 > 
	gbox
.
	gmax
.x)

113 
	gb
.
	gx
 = 
box
.
max
.
x
;

115 
	gb
.
	gx
 = 
p
.
x
;

117 i‡(
	gp
.
	gy
 < 
	gbox
.
	gmö
.y)

118 
	gb
.
	gy
 = 
box
.
mö
.
y
;

119 i‡(
	gp
.
	gy
 > 
	gbox
.
	gmax
.y)

120 
	gb
.
	gy
 = 
box
.
max
.
y
;

122 
	gb
.
	gy
 = 
p
.
y
;

124 i‡(
	gp
.
	gz
 < 
	gbox
.
	gmö
.z)

125 
	gb
.
	gz
 = 
box
.
mö
.
z
;

126 i‡(
	gp
.
	gz
 > 
	gbox
.
	gmax
.z)

127 
	gb
.
	gz
 = 
box
.
max
.
z
;

129 
	gb
.
	gz
 = 
p
.
z
;

131  
	gb
;

134 
	gãm∂©e
 <
˛ass
 
	gT
>

135 
	gVec3
<
	gT
> 
˛o£°PoötOnBox
(c⁄° 
Vec3
<
T
>& 
±
, c⁄° 
Box
< Vec3<T> >& 
box
 )

142 
	gVec3
<
	gT
> 
	gªsu…
;

145 i‡(
	gbox
.
isEm±y
())

146  
	g±
;

147 i‡(
	g±
 =
box
.
˚¡î
())

150 
ªsu…
[0] = (
box
.
max
[0] + box.
mö
[0])/2.0;

151 
	gªsu…
[1] = (
box
.
max
[1] + box.
mö
[1])/2.0;

152 
	gªsu…
[2] = 
box
.
max
[2];

161 
	gVec3
<
	gT
> 
	gvec
 = 
±
 - 
box
.
˚¡î
();

162 
T
 
	gsizeX
 = 
box
.
max
[0]-box.
mö
[0];

163 
T
 
	gsizeY
 = 
box
.
max
[1]-box.
mö
[1];

164 
T
 
	gsizeZ
 = 
box
.
max
[2]-box.
mö
[2];

166 
T
 
	ghÆfX
 = 
sizeX
/2.0;

167 
T
 
	ghÆfY
 = 
sizeY
/2.0;

168 
T
 
	ghÆfZ
 = 
sizeZ
/2.0;

169 i‡(
	ghÆfX
 > 0.0)

170 
	gvec
[0] /
hÆfX
;

171 i‡(
	ghÆfY
 > 0.0)

172 
	gvec
[1] /
hÆfY
;

173 i‡(
	ghÆfZ
 > 0.0)

174 
	gvec
[2] /
hÆfZ
;

177 
	gVec3
<
	gT
> 
	gmag
;

178 
	gmag
[0] = 
Ábs
(
vec
[0]);

179 
	gmag
[1] = 
Ábs
(
vec
[1]);

180 
	gmag
[2] = 
Ábs
(
vec
[2]);

182 
	gªsu…
 = 
mag
;

185 i‡(
	gªsu…
[0] > 1.0)

186 
	gªsu…
[0] = 1.0;

187 i‡(
	gªsu…
[1] > 1.0)

188 
	gªsu…
[1] = 1.0;

189 i‡(
	gªsu…
[2] > 1.0)

190 
	gªsu…
[2] = 1.0;

193 i‡((
	gmag
[0] > mag[1]) && (mag[0] > mag[2]))

195 
	gªsu…
[0] = 1.0;

197 i‡((
	gmag
[1] > mag[0]) && (mag[1] > mag[2]))

199 
	gªsu…
[1] = 1.0;

201 i‡((
	gmag
[2] > mag[0]) && (mag[2] > mag[1]))

203 
	gªsu…
[2] = 1.0;

205 i‡((
	gmag
[0] =
mag
[1]) && (mag[0] == mag[2]))

208 
ªsu…
 = 
Vec3
<
T
>(1,1,1);

210 i‡(
	gmag
[0] =
mag
[1])

213 
ªsu…
[0] = 1.0;

214 
	gªsu…
[1] = 1.0;

216 i‡(
	gmag
[0] =
mag
[2])

219 
ªsu…
[0] = 1.0;

220 
	gªsu…
[2] = 1.0;

222 i‡(
	gmag
[1] =
mag
[2])

225 
ªsu…
[1] = 1.0;

226 
	gªsu…
[2] = 1.0;

230 
	gi
=0; i < 3; i++)

232 i‡(
	gvec
[
i
] < 0.0)

233 
	gªsu…
[
i
] = -
ªsu…
[i];

237 
	gªsu…
[0] *
hÆfX
;

238 
	gªsu…
[1] *
hÆfY
;

239 
	gªsu…
[2] *
hÆfZ
;

241 
	gªsu…
 +
box
.
˚¡î
();

243  
	gªsu…
;

246 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

247 
	gBox
< 
	gVec3
<
	gS
> >

248 
å™sf‹m
(c⁄° 
Box
< 
Vec3
<
S
> >& 
box
, c⁄° 
M©rix44
<
T
>& 
m
)

258 i‡(
	gbox
.
isEm±y
())

259  
	gbox
;

266 i‡(
	gm
[0][3] * m[0][3] + m[1][3] * m[1][3] + m[2][3] * m[2][3]

267 + (1.0 - 
	gm
[3][3]) * (1.0 - m[3][3]) < 0.00001)

270 
	gi
, 
	gj
;

271 
	gBox
< 
	gVec3
<
	gS
> > 
	g√wBox
;

273 
	gi
 = 0; i < 3; i++)

275 
	g√wBox
.
	gmö
[
i
] = 
√wBox
.
max
[i] = (
S
Ë
m
[3][i];

277 
	gj
 = 0; j < 3; j++)

279 
	ga
, 
	gb
;

281 
	ga
 = (
S
Ë
m
[
j
][
i
] * 
box
.
mö
[j];

282 
	gb
 = (
S
Ë
m
[
j
][
i
] * 
box
.
max
[j];

284 i‡(
	ga
 < 
	gb
)

286 
	g√wBox
.
	gmö
[
i
] +
a
;

287 
	g√wBox
.
	gmax
[
i
] +
b
;

291 
	g√wBox
.
	gmö
[
i
] +
b
;

292 
	g√wBox
.
	gmax
[
i
] +
a
;

297  
	g√wBox
;

301 
	gVec3
<
	gS
> 
	gpoöts
[8];

304 
	gpoöts
[0][0] = 
poöts
[1][0] =Öoöts[2][0] =Öoöts[3][0] = 
box
.
mö
[0];

305 
	gpoöts
[4][0] = 
poöts
[5][0] =Öoöts[6][0] =Öoöts[7][0] = 
box
.
max
[0];

307 
	gpoöts
[0][1] = 
poöts
[1][1] =Öoöts[4][1] =Öoöts[5][1] = 
box
.
mö
[1];

308 
	gpoöts
[2][1] = 
poöts
[3][1] =Öoöts[6][1] =Öoöts[7][1] = 
box
.
max
[1];

310 
	gpoöts
[0][2] = 
poöts
[2][2] =Öoöts[4][2] =Öoöts[6][2] = 
box
.
mö
[2];

311 
	gpoöts
[1][2] = 
poöts
[3][2] =Öoöts[5][2] =Öoöts[7][2] = 
box
.
max
[2];

313 
	gBox
< 
	gVec3
<
	gS
> > 
	g√wBox
;

314 
	gi
 = 0; i < 8; i++)

315 
	g√wBox
.
exãndBy
(
poöts
[
i
] * 
m
);

317  
	g√wBox
;

320 
	gãm∂©e
 <
˛ass
 
	gT
>

321 
	gBox
< 
	gVec3
<
	gT
> >

322 
afföeTønsf‹m
(c⁄° 
Box
< 
Vec3
<
T
> > &
bbox
, c⁄° 
M©rix44
<T> &
M
)

324 
	gmö0
, 
	gmax0
, 
	gmö1
, 
	gmax1
, 
	gmö2
, 
	gmax2
, 
	ga
, 
	gb
;

325 
	gmö0√w
, 
	gmax0√w
, 
	gmö1√w
, 
	gmax1√w
, 
	gmö2√w
, 
	gmax2√w
;

327 
	gmö0
 = 
bbox
.
mö
[0];

328 
	gmax0
 = 
bbox
.
max
[0];

329 
	gmö1
 = 
bbox
.
mö
[1];

330 
	gmax1
 = 
bbox
.
max
[1];

331 
	gmö2
 = 
bbox
.
mö
[2];

332 
	gmax2
 = 
bbox
.
max
[2];

334 
	gmö0√w
 = 
max0√w
 = 
M
[3][0];

335 
	ga
 = 
M
[0][0] * 
mö0
;

336 
	gb
 = 
M
[0][0] * 
max0
;

337 i‡(
	ga
 < 
	gb
) {

338 
	gmö0√w
 +
a
;

339 
	gmax0√w
 +
b
;

341 
	gmö0√w
 +
b
;

342 
	gmax0√w
 +
a
;

344 
	ga
 = 
M
[1][0] * 
mö1
;

345 
	gb
 = 
M
[1][0] * 
max1
;

346 i‡(
	ga
 < 
	gb
) {

347 
	gmö0√w
 +
a
;

348 
	gmax0√w
 +
b
;

350 
	gmö0√w
 +
b
;

351 
	gmax0√w
 +
a
;

353 
	ga
 = 
M
[2][0] * 
mö2
;

354 
	gb
 = 
M
[2][0] * 
max2
;

355 i‡(
	ga
 < 
	gb
) {

356 
	gmö0√w
 +
a
;

357 
	gmax0√w
 +
b
;

359 
	gmö0√w
 +
b
;

360 
	gmax0√w
 +
a
;

363 
	gmö1√w
 = 
max1√w
 = 
M
[3][1];

364 
	ga
 = 
M
[0][1] * 
mö0
;

365 
	gb
 = 
M
[0][1] * 
max0
;

366 i‡(
	ga
 < 
	gb
) {

367 
	gmö1√w
 +
a
;

368 
	gmax1√w
 +
b
;

370 
	gmö1√w
 +
b
;

371 
	gmax1√w
 +
a
;

373 
	ga
 = 
M
[1][1] * 
mö1
;

374 
	gb
 = 
M
[1][1] * 
max1
;

375 i‡(
	ga
 < 
	gb
) {

376 
	gmö1√w
 +
a
;

377 
	gmax1√w
 +
b
;

379 
	gmö1√w
 +
b
;

380 
	gmax1√w
 +
a
;

382 
	ga
 = 
M
[2][1] * 
mö2
;

383 
	gb
 = 
M
[2][1] * 
max2
;

384 i‡(
	ga
 < 
	gb
) {

385 
	gmö1√w
 +
a
;

386 
	gmax1√w
 +
b
;

388 
	gmö1√w
 +
b
;

389 
	gmax1√w
 +
a
;

392 
	gmö2√w
 = 
max2√w
 = 
M
[3][2];

393 
	ga
 = 
M
[0][2] * 
mö0
;

394 
	gb
 = 
M
[0][2] * 
max0
;

395 i‡(
	ga
 < 
	gb
) {

396 
	gmö2√w
 +
a
;

397 
	gmax2√w
 +
b
;

399 
	gmö2√w
 +
b
;

400 
	gmax2√w
 +
a
;

402 
	ga
 = 
M
[1][2] * 
mö1
;

403 
	gb
 = 
M
[1][2] * 
max1
;

404 i‡(
	ga
 < 
	gb
) {

405 
	gmö2√w
 +
a
;

406 
	gmax2√w
 +
b
;

408 
	gmö2√w
 +
b
;

409 
	gmax2√w
 +
a
;

411 
	ga
 = 
M
[2][2] * 
mö2
;

412 
	gb
 = 
M
[2][2] * 
max2
;

413 i‡(
	ga
 < 
	gb
) {

414 
	gmö2√w
 +
a
;

415 
	gmax2√w
 +
b
;

417 
	gmö2√w
 +
b
;

418 
	gmax2√w
 +
a
;

421 
	gBox
< 
	gVec3
<
	gT
> > 
	gxbbox
;

423 
	gxbbox
.
	gmö
[0] = 
mö0√w
;

424 
	gxbbox
.
	gmax
[0] = 
max0√w
;

425 
	gxbbox
.
	gmö
[1] = 
mö1√w
;

426 
	gxbbox
.
	gmax
[1] = 
max1√w
;

427 
	gxbbox
.
	gmö
[2] = 
mö2√w
;

428 
	gxbbox
.
	gmax
[2] = 
max2√w
;

430  
	gxbbox
;

434 
	gãm∂©e
 <
˛ass
 
	gT
>

435 
boﬁ
 
födE¡ryAndExôPoöts
(c⁄° 
Löe3
<
T
>& 
löe
,

436 c⁄° 
Box
<
Vec3
<
T
> >& 
box
,

437 
Vec3
<
T
> &
íãrPoöt
,

438 
Vec3
<
T
> &
exôPoöt
)

440 i‡–
	gbox
.
isEm±y
(ËË 
	gÁl£
;

441 i‡–
	glöe
.
di°™˚To
(
box
.
˚¡î
()Ë> 
	gbox
.
size
().
Àngth
()/2. )  
	gÁl£
;

443 
	gVec3
<
	gT
> 
	gpoöts
[8], 
	göãr
, 
	gb¨y
;

444 
	gPœ√3
<
	gT
> 
	g∂™e
;

445 
	gi
, 
	gv0
, 
	gv1
, 
	gv2
;

446 
boﬁ
 
	g‰⁄t
 = 
Ál£
, 
	gvÆid
, 
	gvÆidI¡î£˘i⁄
 = false;

449 
	gi
 = 0; i < 8; i++)

451 
	gpoöts
[
i
].
£tVÆue
–ò& 01 ? 
box
.
mö
[0] : box.
max
[0],

452 
i
 & 02 ? 
box
.
mö
[1] : box.
max
[1],

453 
i
 & 04 ? 
box
.
mö
[2] : box.
max
[2]);

457 
	gi
 = 0; i < 12; i++)

459 
	gi
)

461 0: 
v0
 = 2; 
	gv1
 = 1; 
	gv2
 = 0; ;

462 1: 
v0
 = 2; 
	gv1
 = 3; 
	gv2
 = 1; ;

464 2: 
v0
 = 4; 
	gv1
 = 5; 
	gv2
 = 6; ;

465 3: 
v0
 = 6; 
	gv1
 = 5; 
	gv2
 = 7; ;

467 4: 
v0
 = 0; 
	gv1
 = 6; 
	gv2
 = 2; ;

468 5: 
v0
 = 0; 
	gv1
 = 4; 
	gv2
 = 6; ;

470 6: 
v0
 = 1; 
	gv1
 = 3; 
	gv2
 = 7; ;

471 7: 
v0
 = 1; 
	gv1
 = 7; 
	gv2
 = 5; ;

473 8: 
v0
 = 1; 
	gv1
 = 4; 
	gv2
 = 0; ;

474 9: 
v0
 = 1; 
	gv1
 = 5; 
	gv2
 = 4; ;

476 10: 
v0
 = 2; 
	gv1
 = 7; 
	gv2
 = 3; ;

477 11: 
v0
 = 2; 
	gv1
 = 6; 
	gv2
 = 7; ;

479 if((
	gvÆid
=
öãr£˘
 (
löe
, 
poöts
[
v0
],Öoöts[
v1
],Öoöts[
v2
],

480 
öãr
, 
b¨y
, 
‰⁄t
)Ë=
åue
)

482 if(
‰⁄t
 =
åue
)

484 
íãrPoöt
 = 
öãr
;

485 
	gvÆidI¡î£˘i⁄
 = 
vÆid
;

489 
	gexôPoöt
 = 
öãr
;

490 
	gvÆidI¡î£˘i⁄
 = 
vÆid
;

494  
	gvÆidI¡î£˘i⁄
;

497 
	gãm∂©e
<
˛ass
 
	gT
>

498 
boﬁ
 
öãr£˘s
(c⁄° 
Box
< 
Vec3
<
T
> > &
box
,

499 c⁄° 
Löe3
<
T
> &
löe
,

500 
Vec3
<
T
> &
ªsu…
)

508 c⁄° 
	gright
 = 0;

509 c⁄° 
	gÀ·
 = 1;

510 c⁄° 
	gmiddÀ
 = 2;

512 c⁄° 
	gVec3
<
	gT
> &
	gmöB
 = 
box
.
mö
;

513 c⁄° 
	gVec3
<
	gT
> &
	gmaxB
 = 
box
.
max
;

514 c⁄° 
	gVec3
<
	gT
> &
	g‹igö
 = 
löe
.
pos
;

515 c⁄° 
	gVec3
<
	gT
> &
	gdú
 = 
löe
.
dú
;

517 
boﬁ
 
	göside
 = 
åue
;

518 
	gquadø¡
[3];

519 
	gwhichPœ√
;

520 
	gmaxT
[3];

521 
	gˇndid©ePœ√
[3];

525 
	gi
=0; i<3; i++)

527 if(
	g‹igö
[
i
] < 
	gmöB
[i])

529 
	gquadø¡
[
i
] = 
À·
;

530 
	gˇndid©ePœ√
[
i
] = 
möB
[i];

531 
	göside
 = 
Ál£
;

533 i‡(
	g‹igö
[
i
] > 
	gmaxB
[i])

535 
	gquadø¡
[
i
] = 
right
;

536 
	gˇndid©ePœ√
[
i
] = 
maxB
[i];

537 
	göside
 = 
Ál£
;

541 
	gquadø¡
[
i
] = 
middÀ
;

546 i‡–
	göside
 )

548 
	gªsu…
 = 
‹igö
;

549  
	gåue
;

554 
	gi
 = 0; i < 3; i++)

556 i‡(
	gquadø¡
[
i
] !
middÀ
 && 
dú
[i] !=0.)

558 
maxT
[
i
] = (
ˇndid©ePœ√
[i]-
‹igö
[i]Ë/ 
dú
[i];

562 
	gmaxT
[
i
] = -1.;

567 
	gwhichPœ√
 = 0;

569 
	gi
 = 1; i < 3; i++)

571 i‡(
	gmaxT
[
whichPœ√
] < maxT[
i
])

573 
	gwhichPœ√
 = 
i
;

578 i‡(
	gmaxT
[
whichPœ√
] < 0.Ë 
	gÁl£
;

580 
	gi
 = 0; i < 3; i++)

582 i‡(
	gwhichPœ√
 !
i
)

584 
ªsu…
[
i
] = 
‹igö
[i] + 
maxT
[
whichPœ√
] *
dú
[i];

586 i‡((
	gquadø¡
[
i
] =
right
 && 
ªsu…
[i] < 
möB
[i]) ||

587 (
quadø¡
[
i
] =
À·
 && 
ªsu…
[i] > 
maxB
[i]))

589  
Ál£
;

594 
	gªsu…
[
i
] = 
ˇndid©ePœ√
[i];

598  
	gåue
;

601 
	gãm∂©e
<
˛ass
 
	gT
>

602 
boﬁ
 
öãr£˘s
(c⁄° 
Box
< 
Vec3
<
T
> > &
box
, c⁄° 
Löe3
<T> &
löe
)

604 
	gVec3
<
	gT
> 
	gign‹ed
;

605  
öãr£˘s
(
box
,
löe
,
ign‹ed
);

	@shared/openexr-mac/include/OpenEXR/ImathColor.h

37 #i‚de‡
INCLUDED_IMATHCOLOR_H


38 
	#INCLUDED_IMATHCOLOR_H


	)

46 
	~"Im©hVec.h
"

47 
	~"hÆf.h
"

49 
«me•a˚
 
	gIm©h
 {

52 
	gãm∂©e
 <
˛ass
 
	gT
>

53 
˛ass
 
	gCﬁ‹3
: 
public
 
Vec3
 <
T
>

55 
public
:

61 
Cﬁ‹3
 ();

62 
ex∂icô
 
Cﬁ‹3
 (
T
 
a
);

63 
Cﬁ‹3
 (
T
 
a
, T 
b
, T 
c
);

70 
Cﬁ‹3
 (c⁄° Cﬁ‹3 &
c
);

71 
	gãm∂©e
 <
˛ass
 
	gS
> 
Cﬁ‹3
 (c⁄° 
Vec3
<
S
> &
v
);

73 c⁄° 
	gCﬁ‹3
 & 
	g›î©‹
 = (c⁄° 
Cﬁ‹3
 &
c
);

80 c⁄° 
	gCﬁ‹3
 & 
	g›î©‹
 +(c⁄° 
Cﬁ‹3
 &
c
);

81 
Cﬁ‹3
 
	g›î©‹
 + (c⁄° 
	gCﬁ‹3
 &
	gc
) const;

88 c⁄° 
	gCﬁ‹3
 & 
	g›î©‹
 -(c⁄° 
Cﬁ‹3
 &
c
);

89 
Cﬁ‹3
 
	g›î©‹
 - (c⁄° 
	gCﬁ‹3
 &
	gc
) const;

96 
Cﬁ‹3
 
	g›î©‹
 - () const;

97 c⁄° 
	gCﬁ‹3
 & 
√g©e
 ();

104 c⁄° 
	gCﬁ‹3
 & 
	g›î©‹
 *(c⁄° 
Cﬁ‹3
 &
c
);

105 c⁄° 
	gCﬁ‹3
 & 
	g›î©‹
 *(
T
 
a
);

106 
Cﬁ‹3
 
	g›î©‹
 * (c⁄° 
	gCﬁ‹3
 &
	gc
) const;

107 
Cﬁ‹3
 
	g›î©‹
 * (
T
 
	ga
) const;

114 c⁄° 
	gCﬁ‹3
 & 
	g›î©‹
 /(c⁄° 
Cﬁ‹3
 &
c
);

115 c⁄° 
	gCﬁ‹3
 & 
	g›î©‹
 /(
T
 
a
);

116 
Cﬁ‹3
 
	g›î©‹
 / (c⁄° 
	gCﬁ‹3
 &
	gc
) const;

117 
Cﬁ‹3
 
	g›î©‹
 / (
T
 
	ga
) const;

120 
	gãm∂©e
 <
˛ass
 
	gT
> cœs†
	cCﬁ‹4


122 
	gpublic
:

128 
T
 
r
, 
	gg
, 
	gb
, 
	ga
;

130 
	gT
 & 
	g›î©‹
 [] (
	gi
);

131 c⁄° 
	gT
 & 
	g›î©‹
 [] (
	gi
) const;

138 
Cﬁ‹4
 ();

139 
ex∂icô
 
Cﬁ‹4
 (
T
 
a
);

140 
Cﬁ‹4
 (
T
 
a
, T 
b
, T 
c
, T 
d
);

147 
Cﬁ‹4
 (c⁄° Cﬁ‹4 &
v
);

148 
	gãm∂©e
 <
˛ass
 
	gS
> 
Cﬁ‹4
 (c⁄° Cﬁ‹4<
S
> &
v
);

150 c⁄° 
	gCﬁ‹4
 & 
	g›î©‹
 = (c⁄° 
Cﬁ‹4
 &
v
);

157 
	gãm∂©e
 <
˛ass
 
	gS
>

158 
£tVÆue
 (
S
 
a
, S 
b
, S 
c
, S 
d
);

160 
	gãm∂©e
 <
˛ass
 
	gS
>

161 
£tVÆue
 (c⁄° 
Cﬁ‹4
<
S
> &
v
);

163 
	gãm∂©e
 <
˛ass
 
	gS
>

164 
gëVÆue
 (
S
 &
a
, S &
b
, S &
c
, S &
d
) const;

166 
	gãm∂©e
 <
˛ass
 
	gS
>

167 
gëVÆue
 (
Cﬁ‹4
<
S
> &
v
) const;

169 
T
 * 
gëVÆue
();

170 c⁄° 
T
 * 
gëVÆue
() const;

177 
	gãm∂©e
 <
˛ass
 
	gS
>

178 
boﬁ
 
	g›î©‹
 =(c⁄° 
Cﬁ‹4
<
S
> &
v
) const;

180 
	gãm∂©e
 <
˛ass
 
	gS
>

181 
boﬁ
 
	g›î©‹
 !(c⁄° 
Cﬁ‹4
<
S
> &
v
) const;

188 c⁄° 
	gCﬁ‹4
 & 
	g›î©‹
 +(c⁄° 
Cﬁ‹4
 &
v
);

189 
Cﬁ‹4
 
	g›î©‹
 + (c⁄° 
	gCﬁ‹4
 &
	gv
) const;

196 c⁄° 
	gCﬁ‹4
 & 
	g›î©‹
 -(c⁄° 
Cﬁ‹4
 &
v
);

197 
Cﬁ‹4
 
	g›î©‹
 - (c⁄° 
	gCﬁ‹4
 &
	gv
) const;

204 
Cﬁ‹4
 
	g›î©‹
 - () const;

205 c⁄° 
	gCﬁ‹4
 & 
√g©e
 ();

212 c⁄° 
	gCﬁ‹4
 & 
	g›î©‹
 *(c⁄° 
Cﬁ‹4
 &
v
);

213 c⁄° 
	gCﬁ‹4
 & 
	g›î©‹
 *(
T
 
a
);

214 
Cﬁ‹4
 
	g›î©‹
 * (c⁄° 
	gCﬁ‹4
 &
	gv
) const;

215 
Cﬁ‹4
 
	g›î©‹
 * (
T
 
	ga
) const;

222 c⁄° 
	gCﬁ‹4
 & 
	g›î©‹
 /(c⁄° 
Cﬁ‹4
 &
v
);

223 c⁄° 
	gCﬁ‹4
 & 
	g›î©‹
 /(
T
 
a
);

224 
Cﬁ‹4
 
	g›î©‹
 / (c⁄° 
	gCﬁ‹4
 &
	gv
) const;

225 
Cﬁ‹4
 
	g›î©‹
 / (
T
 
	ga
) const;

232 
dimísi⁄s
() { 4;}

239 
T
 
ba£Ty≥Mö
(Ë{ 
	glimôs
<
	gT
>::
mö
();}

240 
T
 
ba£Ty≥Max
(Ë{ 
	glimôs
<
	gT
>::
max
();}

241 
T
 
ba£Ty≥SmÆÀ°
(Ë{ 
	glimôs
<
	gT
>::
smÆÀ°
();}

242 
T
 
ba£Ty≥Epsû⁄
(Ë{ 
	glimôs
<
	gT
>::
ïsû⁄
();}

251 
T
 
	tBa£Ty≥
;

258 
	gãm∂©e
 <
˛ass
 
	gT
>

259 
	g°d
::
o°ªam
 & 
›î©‹
 << (
°d
::o°ªam &
s
, c⁄° 
	gCﬁ‹4
<
	gT
> &
	gv
);

265 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
> 
	gCﬁ‹4
<T> 
	g›î©‹
 * (
S
 
	ga
, c⁄° Cﬁ‹4<T> &
	gv
);

271 
	gCﬁ‹3
<> 
	tCﬁ‹3f
;

272 
	gCﬁ‹3
<
	thÆf
> 
	tCﬁ‹3h
;

273 
	gCﬁ‹3
<> 
	tCﬁ‹3c
;

274 
	gCﬁ‹3
<
	thÆf
> 
	tC3h
;

275 
	gCﬁ‹3
<> 
	tC3f
;

276 
	gCﬁ‹3
<> 
	tC3c
;

277 
	gCﬁ‹4
<> 
	tCﬁ‹4f
;

278 
	gCﬁ‹4
<
	thÆf
> 
	tCﬁ‹4h
;

279 
	gCﬁ‹4
<> 
	tCﬁ‹4c
;

280 
	gCﬁ‹4
<> 
	tC4f
;

281 
	gCﬁ‹4
<
	thÆf
> 
	tC4h
;

282 
	gCﬁ‹4
<> 
	tC4c
;

283 
	tPackedCﬁ‹
;

290 
	gãm∂©e
 <
˛ass
 
	gT
>

291 
ölöe


292 
	gCﬁ‹3
<
	gT
>::
	$Cﬁ‹3
 (): 
Vec3
 <
T
> ()

295 
	}
}

297 
ãm∂©e
 <
˛ass
 
T
>

298 
ölöe


299 
Cﬁ‹3
<
T
>::
	$Cﬁ‹3
 (
T
 
a
): 
Vec3
 <T> (a)

302 
	}
}

304 
ãm∂©e
 <
˛ass
 
T
>

305 
ölöe


306 
Cﬁ‹3
<
T
>::
	$Cﬁ‹3
 (
T
 
a
, T 
b
, T 
c
): 
Vec3
 <T> (a, b, c)

309 
	}
}

311 
	gãm∂©e
 <
˛ass
 
	gT
>

312 
ölöe


313 
	gCﬁ‹3
<
	gT
>::
	$Cﬁ‹3
 (c⁄° 
Cﬁ‹3
 &
c
): 
Vec3
 <
T
> (c)

316 
	}
}

318 
ãm∂©e
 <
˛ass
 
T
>

319 
ãm∂©e
 <
˛ass
 
S
>

320 
ölöe


321 
Cﬁ‹3
<
T
>::Cﬁ‹3 (c⁄° 
Vec3
<
S
> &
v
): Vec3 <T> (v)

326 
ãm∂©e
 <
˛ass
 
T
>

327 
ölöe
 c⁄° 
Cﬁ‹3
<
T
> &

328 
Cﬁ‹3
<
T
>::
›î©‹
 = (c⁄° Cﬁ‹3 &
c
)

330 *((
Vec3
<
T
> *Ë
this
Ë
c
;

331  *
	gthis
;

334 
	gãm∂©e
 <
˛ass
 
	gT
>

335 
ölöe
 c⁄° 
	gCﬁ‹3
<
	gT
> &

336 
	gCﬁ‹3
<
	gT
>::
›î©‹
 +(c⁄° 
Cﬁ‹3
 &
c
)

338 *((
Vec3
<
T
> *Ë
this
Ë+
c
;

339  *
	gthis
;

342 
	gãm∂©e
 <
˛ass
 
	gT
>

343 
ölöe
 
	gCﬁ‹3
<
	gT
>

344 
	gCﬁ‹3
<
	gT
>::
›î©‹
 + (c⁄° 
Cﬁ‹3
 &
c
) const

346  
Cﬁ‹3
 (*(
Vec3
<
T
> *)
this
 + (c⁄° Vec3<T> &)
c
);

349 
	gãm∂©e
 <
˛ass
 
	gT
>

350 
ölöe
 c⁄° 
	gCﬁ‹3
<
	gT
> &

351 
	gCﬁ‹3
<
	gT
>::
›î©‹
 -(c⁄° 
Cﬁ‹3
 &
c
)

353 *((
Vec3
<
T
> *Ë
this
Ë-
c
;

354  *
	gthis
;

357 
	gãm∂©e
 <
˛ass
 
	gT
>

358 
ölöe
 
	gCﬁ‹3
<
	gT
>

359 
	gCﬁ‹3
<
	gT
>::
›î©‹
 - (c⁄° 
Cﬁ‹3
 &
c
) const

361  
Cﬁ‹3
 (*(
Vec3
<
T
> *)
this
 - (c⁄° Vec3<T> &)
c
);

364 
	gãm∂©e
 <
˛ass
 
	gT
>

365 
ölöe
 
	gCﬁ‹3
<
	gT
>

366 
	gCﬁ‹3
<
	gT
>::
›î©‹
 - () const

368  
Cﬁ‹3
 (-(*(
Vec3
<
T
> *)
this
));

371 
	gãm∂©e
 <
˛ass
 
	gT
>

372 
ölöe
 c⁄° 
	gCﬁ‹3
<
	gT
> &

373 
	gCﬁ‹3
<
	gT
>::
	$√g©e
 ()

375 ((
Vec3
<
T
> *Ë
this
)->
	`√g©e
();

376  *
this
;

377 
	}
}

379 
	gãm∂©e
 <
˛ass
 
	gT
>

380 
ölöe
 c⁄° 
	gCﬁ‹3
<
	gT
> &

381 
	gCﬁ‹3
<
	gT
>::
›î©‹
 *(c⁄° 
Cﬁ‹3
 &
c
)

383 *((
Vec3
<
T
> *Ë
this
Ë*
c
;

384  *
	gthis
;

387 
	gãm∂©e
 <
˛ass
 
	gT
>

388 
ölöe
 c⁄° 
	gCﬁ‹3
<
	gT
> &

389 
	gCﬁ‹3
<
	gT
>::
›î©‹
 *(
T
 
a
)

391 *((
Vec3
<
T
> *Ë
this
Ë*
a
;

392  *
	gthis
;

395 
	gãm∂©e
 <
˛ass
 
	gT
>

396 
ölöe
 
	gCﬁ‹3
<
	gT
>

397 
	gCﬁ‹3
<
	gT
>::
›î©‹
 * (c⁄° 
Cﬁ‹3
 &
c
) const

399  
Cﬁ‹3
 (*(
Vec3
<
T
> *)
this
 * (c⁄° Vec3<T> &)
c
);

402 
	gãm∂©e
 <
˛ass
 
	gT
>

403 
ölöe
 
	gCﬁ‹3
<
	gT
>

404 
	gCﬁ‹3
<
	gT
>::
›î©‹
 * (
T
 
a
) const

406  
Cﬁ‹3
 (*(
Vec3
<
T
> *)
this
 * 
a
);

409 
	gãm∂©e
 <
˛ass
 
	gT
>

410 
ölöe
 c⁄° 
	gCﬁ‹3
<
	gT
> &

411 
	gCﬁ‹3
<
	gT
>::
›î©‹
 /(c⁄° 
Cﬁ‹3
 &
c
)

413 *((
Vec3
<
T
> *Ë
this
Ë/
c
;

414  *
	gthis
;

417 
	gãm∂©e
 <
˛ass
 
	gT
>

418 
ölöe
 c⁄° 
	gCﬁ‹3
<
	gT
> &

419 
	gCﬁ‹3
<
	gT
>::
›î©‹
 /(
T
 
a
)

421 *((
Vec3
<
T
> *Ë
this
Ë/
a
;

422  *
	gthis
;

425 
	gãm∂©e
 <
˛ass
 
	gT
>

426 
ölöe
 
	gCﬁ‹3
<
	gT
>

427 
	gCﬁ‹3
<
	gT
>::
›î©‹
 / (c⁄° 
Cﬁ‹3
 &
c
) const

429  
Cﬁ‹3
 (*(
Vec3
<
T
> *)
this
 / (c⁄° Vec3<T> &)
c
);

432 
	gãm∂©e
 <
˛ass
 
	gT
>

433 
ölöe
 
	gCﬁ‹3
<
	gT
>

434 
	gCﬁ‹3
<
	gT
>::
›î©‹
 / (
T
 
a
) const

436  
Cﬁ‹3
 (*(
Vec3
<
T
> *)
this
 / 
a
);

443 
	gãm∂©e
 <
˛ass
 
	gT
>

444 
ölöe
 
	gT
 &

445 
	gCﬁ‹4
<
	gT
>::
›î©‹
 [] (
i
)

447  (&
r
)[
i
];

450 
	gãm∂©e
 <
˛ass
 
	gT
>

451 
ölöe
 c⁄° 
	gT
 &

452 
	gCﬁ‹4
<
	gT
>::
›î©‹
 [] (
i
) const

454  (&
r
)[
i
];

457 
	gãm∂©e
 <
˛ass
 
	gT
>

458 
ölöe


459 
	gCﬁ‹4
<
	gT
>::
	$Cﬁ‹4
 ()

462 
	}
}

464 
ãm∂©e
 <
˛ass
 
T
>

465 
ölöe


466 
Cﬁ‹4
<
T
>::
	$Cﬁ‹4
 (
T
 
x
)

468 
r
 = 
g
 = 
b
 = 
a
 = 
x
;

469 
	}
}

471 
	gãm∂©e
 <
˛ass
 
	gT
>

472 
ölöe


473 
	gCﬁ‹4
<
	gT
>::
	$Cﬁ‹4
 (
T
 
x
, T 
y
, T 
z
, T 
w
)

475 
r
 = 
x
;

476 
g
 = 
y
;

477 
b
 = 
z
;

478 
a
 = 
w
;

479 
	}
}

481 
	gãm∂©e
 <
˛ass
 
	gT
>

482 
ölöe


483 
	gCﬁ‹4
<
	gT
>::
	$Cﬁ‹4
 (c⁄° 
Cﬁ‹4
 &
v
)

485 
r
 = 
v
.r;

486 
g
 = 
v
.g;

487 
b
 = 
v
.b;

488 
a
 = 
v
.a;

489 
	}
}

491 
	gãm∂©e
 <
˛ass
 
	gT
>

492 
	gãm∂©e
 <
˛ass
 
	gS
>

493 
ölöe


494 
	gCﬁ‹4
<
	gT
>::
Cﬁ‹4
 (c⁄° Cﬁ‹4<
S
> &
v
)

496 
r
 = 
T
 (
v
.r);

497 
	gg
 = 
T
 (
v
.
g
);

498 
	gb
 = 
T
 (
v
.
b
);

499 
	ga
 = 
T
 (
v
.
a
);

502 
	gãm∂©e
 <
˛ass
 
	gT
>

503 
ölöe
 c⁄° 
	gCﬁ‹4
<
	gT
> &

504 
	gCﬁ‹4
<
	gT
>::
›î©‹
 = (c⁄° 
Cﬁ‹4
 &
v
)

506 
r
 = 
v
.r;

507 
	gg
 = 
v
.
g
;

508 
	gb
 = 
v
.
b
;

509 
	ga
 = 
v
.
a
;

510  *
	gthis
;

513 
	gãm∂©e
 <
˛ass
 
	gT
>

514 
	gãm∂©e
 <
˛ass
 
	gS
>

515 
ölöe
 

516 
	gCﬁ‹4
<
	gT
>::
	$£tVÆue
 (
S
 
x
, S 
y
, S 
z
, S 
w
)

518 
r
 = 
	`T
 (
x
);

519 
g
 = 
	`T
 (
y
);

520 
b
 = 
	`T
 (
z
);

521 
a
 = 
	`T
 (
w
);

522 
	}
}

524 
	gãm∂©e
 <
˛ass
 
	gT
>

525 
	gãm∂©e
 <
˛ass
 
	gS
>

526 
ölöe
 

527 
	gCﬁ‹4
<
	gT
>::
£tVÆue
 (c⁄° 
Cﬁ‹4
<
S
> &
v
)

529 
r
 = 
T
 (
v
.r);

530 
	gg
 = 
T
 (
v
.
g
);

531 
	gb
 = 
T
 (
v
.
b
);

532 
	ga
 = 
T
 (
v
.
a
);

535 
	gãm∂©e
 <
˛ass
 
	gT
>

536 
	gãm∂©e
 <
˛ass
 
	gS
>

537 
ölöe
 

538 
	gCﬁ‹4
<
	gT
>::
	$gëVÆue
 (
S
 &
x
, S &
y
, S &
z
, S &
w
) const

540 
x
 = 
	`S
 (
r
);

541 
y
 = 
	`S
 (
g
);

542 
z
 = 
	`S
 (
b
);

543 
w
 = 
	`S
 (
a
);

544 
	}
}

546 
	gãm∂©e
 <
˛ass
 
	gT
>

547 
	gãm∂©e
 <
˛ass
 
	gS
>

548 
ölöe
 

549 
	gCﬁ‹4
<
	gT
>::
gëVÆue
 (
Cﬁ‹4
<
S
> &
v
) const

551 
v
.
r
 = 
S
 (r);

552 
	gv
.
	gg
 = 
S
 (
g
);

553 
	gv
.
	gb
 = 
S
 (
b
);

554 
	gv
.
	ga
 = 
S
 (
a
);

557 
	gãm∂©e
 <
˛ass
 
	gT
>

558 
ölöe
 
T
 *

559 
	gCﬁ‹4
<
	gT
>::
	$gëVÆue
()

561  (
T
 *Ë&
r
;

562 
	}
}

564 
	gãm∂©e
 <
˛ass
 
	gT
>

565 
ölöe
 c⁄° 
T
 *

566 
	gCﬁ‹4
<
	gT
>::
	$gëVÆue
() const

568  (c⁄° 
T
 *Ë&
r
;

569 
	}
}

571 
	gãm∂©e
 <
˛ass
 
	gT
>

572 
	gãm∂©e
 <
˛ass
 
	gS
>

573 
ölöe
 
boﬁ


574 
	gCﬁ‹4
<
	gT
>::
›î©‹
 =(c⁄° 
Cﬁ‹4
<
S
> &
v
) const

576  
r
 =
v
.∏&& 
g
 =v.g && 
b
 =v.b && 
a
 == v.a;

579 
	gãm∂©e
 <
˛ass
 
	gT
>

580 
	gãm∂©e
 <
˛ass
 
	gS
>

581 
ölöe
 
boﬁ


582 
	gCﬁ‹4
<
	gT
>::
›î©‹
 !(c⁄° 
Cﬁ‹4
<
S
> &
v
) const

584  
r
 !
v
.∏|| 
g
 !v.g || 
b
 !v.b || 
a
 != v.a;

587 
	gãm∂©e
 <
˛ass
 
	gT
>

588 
ölöe
 c⁄° 
	gCﬁ‹4
<
	gT
> &

589 
	gCﬁ‹4
<
	gT
>::
›î©‹
 +(c⁄° 
Cﬁ‹4
 &
v
)

591 
r
 +
v
.r;

592 
	gg
 +
v
.
g
;

593 
	gb
 +
v
.
b
;

594 
	ga
 +
v
.
a
;

595  *
	gthis
;

598 
	gãm∂©e
 <
˛ass
 
	gT
>

599 
ölöe
 
	gCﬁ‹4
<
	gT
>

600 
	gCﬁ‹4
<
	gT
>::
›î©‹
 + (c⁄° 
Cﬁ‹4
 &
v
) const

602  
Cﬁ‹4
 (
r
 + 
v
.r, 
g
 + v.g, 
b
 + v.b, 
a
 + v.a);

605 
	gãm∂©e
 <
˛ass
 
	gT
>

606 
ölöe
 c⁄° 
	gCﬁ‹4
<
	gT
> &

607 
	gCﬁ‹4
<
	gT
>::
›î©‹
 -(c⁄° 
Cﬁ‹4
 &
v
)

609 
r
 -
v
.r;

610 
	gg
 -
v
.
g
;

611 
	gb
 -
v
.
b
;

612 
	ga
 -
v
.
a
;

613  *
	gthis
;

616 
	gãm∂©e
 <
˛ass
 
	gT
>

617 
ölöe
 
	gCﬁ‹4
<
	gT
>

618 
	gCﬁ‹4
<
	gT
>::
›î©‹
 - (c⁄° 
Cﬁ‹4
 &
v
) const

620  
Cﬁ‹4
 (
r
 - 
v
.r, 
g
 - v.g, 
b
 - v.b, 
a
 - v.a);

623 
	gãm∂©e
 <
˛ass
 
	gT
>

624 
ölöe
 
	gCﬁ‹4
<
	gT
>

625 
	gCﬁ‹4
<
	gT
>::
›î©‹
 - () const

627  
Cﬁ‹4
 (-
r
, -
g
, -
b
, -
a
);

630 
	gãm∂©e
 <
˛ass
 
	gT
>

631 
ölöe
 c⁄° 
	gCﬁ‹4
<
	gT
> &

632 
	gCﬁ‹4
<
	gT
>::
	$√g©e
 ()

634 
r
 = -r;

635 
g
 = -g;

636 
b
 = -b;

637 
a
 = -a;

638  *
this
;

639 
	}
}

641 
	gãm∂©e
 <
˛ass
 
	gT
>

642 
ölöe
 c⁄° 
	gCﬁ‹4
<
	gT
> &

643 
	gCﬁ‹4
<
	gT
>::
›î©‹
 *(c⁄° 
Cﬁ‹4
 &
v
)

645 
r
 *
v
.r;

646 
	gg
 *
v
.
g
;

647 
	gb
 *
v
.
b
;

648 
	ga
 *
v
.
a
;

649  *
	gthis
;

652 
	gãm∂©e
 <
˛ass
 
	gT
>

653 
ölöe
 c⁄° 
	gCﬁ‹4
<
	gT
> &

654 
	gCﬁ‹4
<
	gT
>::
›î©‹
 *(
T
 
x
)

656 
r
 *
x
;

657 
	gg
 *
x
;

658 
	gb
 *
x
;

659 
	ga
 *
x
;

660  *
	gthis
;

663 
	gãm∂©e
 <
˛ass
 
	gT
>

664 
ölöe
 
	gCﬁ‹4
<
	gT
>

665 
	gCﬁ‹4
<
	gT
>::
›î©‹
 * (c⁄° 
Cﬁ‹4
 &
v
) const

667  
Cﬁ‹4
 (
r
 * 
v
.r, 
g
 * v.g, 
b
 * v.b, 
a
 * v.a);

670 
	gãm∂©e
 <
˛ass
 
	gT
>

671 
ölöe
 
	gCﬁ‹4
<
	gT
>

672 
	gCﬁ‹4
<
	gT
>::
›î©‹
 * (
T
 
x
) const

674  
Cﬁ‹4
 (
r
 * 
x
, 
g
 * x, 
b
 * x, 
a
 * x);

677 
	gãm∂©e
 <
˛ass
 
	gT
>

678 
ölöe
 c⁄° 
	gCﬁ‹4
<
	gT
> &

679 
	gCﬁ‹4
<
	gT
>::
›î©‹
 /(c⁄° 
Cﬁ‹4
 &
v
)

681 
r
 /
v
.r;

682 
	gg
 /
v
.
g
;

683 
	gb
 /
v
.
b
;

684 
	ga
 /
v
.
a
;

685  *
	gthis
;

688 
	gãm∂©e
 <
˛ass
 
	gT
>

689 
ölöe
 c⁄° 
	gCﬁ‹4
<
	gT
> &

690 
	gCﬁ‹4
<
	gT
>::
›î©‹
 /(
T
 
x
)

692 
r
 /
x
;

693 
	gg
 /
x
;

694 
	gb
 /
x
;

695 
	ga
 /
x
;

696  *
	gthis
;

699 
	gãm∂©e
 <
˛ass
 
	gT
>

700 
ölöe
 
	gCﬁ‹4
<
	gT
>

701 
	gCﬁ‹4
<
	gT
>::
›î©‹
 / (c⁄° 
Cﬁ‹4
 &
v
) const

703  
Cﬁ‹4
 (
r
 / 
v
.r, 
g
 / v.g, 
b
 / v.b, 
a
 / v.a);

706 
	gãm∂©e
 <
˛ass
 
	gT
>

707 
ölöe
 
	gCﬁ‹4
<
	gT
>

708 
	gCﬁ‹4
<
	gT
>::
›î©‹
 / (
T
 
x
) const

710  
Cﬁ‹4
 (
r
 / 
x
, 
g
 / x, 
b
 / x, 
a
 / x);

714 
	gãm∂©e
 <
˛ass
 
	gT
>

715 
	g°d
::
o°ªam
 &

716 
›î©‹
 << (
°d
::
o°ªam
 &
s
, c⁄° 
	gCﬁ‹4
<
	gT
> &
	gv
)

718  
	gs
 << '(' << 
	gv
.
	gr
 << ' ' << v.
	gg
 << ' ' << v.
	gb
 << ' ' << v.
	ga
 << ')';

725 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

726 
ölöe
 
	gCﬁ‹4
<
	gT
>

727 
	g›î©‹
 * (
S
 
	gx
, c⁄° 
	gCﬁ‹4
<
	gT
> &
	gv
)

729  
	gCﬁ‹4
<
	gT
> (
x
 * 
	gv
.
	gr
, x * v.
	gg
, x * v.
	gb
, x * v.
	ga
);

	@shared/openexr-mac/include/OpenEXR/ImathColorAlgo.h

37 #i‚de‡
INCLUDED_IMATHCOLORALGO_H


38 
	#INCLUDED_IMATHCOLORALGO_H


	)

41 
	~"Im©hCﬁ‹.h
"

42 
	~"Im©hM©h.h
"

43 
	~"Im©hLimôs.h
"

45 
«me•a˚
 
	gIm©h
 {

53 
	gVec3
<> 
hsv2rgb_d
(c⁄° 
Vec3
<> &
hsv
);

55 
	gCﬁ‹4
<> 
hsv2rgb_d
(c⁄° 
Cﬁ‹4
<> &
hsv
);

58 
	gVec3
<> 
rgb2hsv_d
(c⁄° 
Vec3
<> &
rgb
);

60 
	gCﬁ‹4
<> 
rgb2hsv_d
(c⁄° 
Cﬁ‹4
<> &
rgb
);

70 
	gãm∂©e
<
˛ass
 
	gT
>

71 
	gVec3
<
	gT
>

72 
hsv2rgb
(c⁄° 
Vec3
<
T
> &
hsv
)

74 i‡–
	glimôs
<
	gT
>::
isI¡egøl
() )

76 
Vec3
<> 
v
 = Vec3<>(
hsv
.
x
 / (
limôs
<
T
>::
max
()),

77 
	ghsv
.
	gy
 / (
	glimôs
<
	gT
>::
max
()),

78 
	ghsv
.
	gz
 / (
	glimôs
<
	gT
>::
max
()));

79 
	gVec3
<> 
	gc
 = 
hsv2rgb_d
(
v
);

80  
	gVec3
<
	gT
>((TË(
	gc
.
x
 * 
	glimôs
<T>::
max
()),

81 (
	gT
Ë(
	gc
.
y
 * 
	glimôs
<T>::
max
()),

82 (
	gT
Ë(
	gc
.
z
 * 
	glimôs
<T>::
max
()));

86 
	gVec3
<> 
	gv
 = 
Vec3
<>(
hsv
.
x
, 
	ghsv
.
	gy
, hsv.
	gz
);

87 
	gVec3
<> 
	gc
 = 
hsv2rgb_d
(
v
);

88  
	gVec3
<
	gT
>((TË
	gc
.
	gx
, (TËc.
	gy
, (TËc.
	gz
);

93 
	gãm∂©e
<
˛ass
 
	gT
>

94 
	gCﬁ‹4
<
	gT
>

95 
hsv2rgb
(c⁄° 
Cﬁ‹4
<
T
> &
hsv
)

97 i‡–
	glimôs
<
	gT
>::
isI¡egøl
() )

99 
Cﬁ‹4
<> 
v
 = Cﬁ‹4<>(
hsv
.
r
 / (
limôs
<
T
>::
max
()),

100 
	ghsv
.
	gg
 / (
	glimôs
<
	gT
>::
max
()),

101 
	ghsv
.
	gb
 / (
	glimôs
<
	gT
>::
max
()),

102 
	ghsv
.
	ga
 / (
	glimôs
<
	gT
>::
max
()));

103 
	gCﬁ‹4
<> 
	gc
 = 
hsv2rgb_d
(
v
);

104  
	gCﬁ‹4
<
	gT
>((TË(
	gc
.
r
 * 
	glimôs
<T>::
max
()),

105 (
	gT
Ë(
	gc
.
g
 * 
	glimôs
<T>::
max
()),

106 (
	gT
Ë(
	gc
.
b
 * 
	glimôs
<T>::
max
()),

107 (
	gT
Ë(
	gc
.
a
 * 
	glimôs
<T>::
max
()));

111 
	gCﬁ‹4
<> 
	gv
 = 
Cﬁ‹4
<>(
hsv
.
r
, 
	ghsv
.
	gg
, hsv.g, hsv.
	ga
);

112 
	gCﬁ‹4
<> 
	gc
 = 
hsv2rgb_d
(
v
);

113  
	gCﬁ‹4
<
	gT
>((TË
	gc
.
	gr
, (TËc.
	gg
, (TËc.
	gb
, (TËc.
	ga
);

118 
	gãm∂©e
<
˛ass
 
	gT
>

119 
	gVec3
<
	gT
>

120 
rgb2hsv
(c⁄° 
Vec3
<
T
> &
rgb
)

122 i‡–
	glimôs
<
	gT
>::
isI¡egøl
() )

124 
Vec3
<> 
v
 = Vec3<>(
rgb
.
x
 / (
limôs
<
T
>::
max
()),

125 
	grgb
.
	gy
 / (
	glimôs
<
	gT
>::
max
()),

126 
	grgb
.
	gz
 / (
	glimôs
<
	gT
>::
max
()));

127 
	gVec3
<> 
	gc
 = 
rgb2hsv_d
(
v
);

128  
	gVec3
<
	gT
>((TË(
	gc
.
x
 * 
	glimôs
<T>::
max
()),

129 (
	gT
Ë(
	gc
.
y
 * 
	glimôs
<T>::
max
()),

130 (
	gT
Ë(
	gc
.
z
 * 
	glimôs
<T>::
max
()));

134 
	gVec3
<> 
	gv
 = 
Vec3
<>(
rgb
.
x
, 
	grgb
.
	gy
,Ñgb.
	gz
);

135 
	gVec3
<> 
	gc
 = 
rgb2hsv_d
(
v
);

136  
	gVec3
<
	gT
>((TË
	gc
.
	gx
, (TËc.
	gy
, (TËc.
	gz
);

141 
	gãm∂©e
<
˛ass
 
	gT
>

142 
	gCﬁ‹4
<
	gT
>

143 
rgb2hsv
(c⁄° 
Cﬁ‹4
<
T
> &
rgb
)

145 i‡–
	glimôs
<
	gT
>::
isI¡egøl
() )

147 
Cﬁ‹4
<> 
v
 = Cﬁ‹4<>(
rgb
.
r
 / (
limôs
<
T
>::
max
()),

148 
	grgb
.
	gg
 / (
	glimôs
<
	gT
>::
max
()),

149 
	grgb
.
	gb
 / (
	glimôs
<
	gT
>::
max
()),

150 
	grgb
.
	ga
 / (
	glimôs
<
	gT
>::
max
()));

151 
	gCﬁ‹4
<> 
	gc
 = 
rgb2hsv_d
(
v
);

152  
	gCﬁ‹4
<
	gT
>((TË(
	gc
.
r
 * 
	glimôs
<T>::
max
()),

153 (
	gT
Ë(
	gc
.
g
 * 
	glimôs
<T>::
max
()),

154 (
	gT
Ë(
	gc
.
b
 * 
	glimôs
<T>::
max
()),

155 (
	gT
Ë(
	gc
.
a
 * 
	glimôs
<T>::
max
()));

159 
	gCﬁ‹4
<> 
	gv
 = 
Cﬁ‹4
<>(
rgb
.
r
, 
	grgb
.
	gg
,Ñgb.g,Ñgb.
	ga
);

160 
	gCﬁ‹4
<> 
	gc
 = 
rgb2hsv_d
(
v
);

161  
	gCﬁ‹4
<
	gT
>((TË
	gc
.
	gr
, (TËc.
	gg
, (TËc.
	gb
, (TËc.
	ga
);

165 
	gãm∂©e
 <
˛ass
 
	gT
>

166 
PackedCﬁ‹


167 
rgb2∑cked
(c⁄° 
Vec3
<
T
> &
c
)

169 i‡–
	glimôs
<
	gT
>::
isI¡egøl
() )

171 
x
 = 
c
.x / (
limôs
<
T
>::
max
());

172 
	gy
 = 
c
.
y
 / (
limôs
<
T
>::
max
());

173 
	gz
 = 
c
.
z
 / (
limôs
<
T
>::
max
());

174  
rgb2∑cked
–
V3f
(
x
,
y
,
z
) );

178  ( (
	gPackedCﬁ‹
Ë(
	gc
.
	gx
 * 255) |

179 (((
	gPackedCﬁ‹
Ë(
	gc
.
	gy
 * 255)) << 8) |

180 (((
	gPackedCﬁ‹
Ë(
	gc
.
	gz
 * 255)) << 16) | 0xFF000000 );

184 
	gãm∂©e
 <
˛ass
 
	gT
>

185 
PackedCﬁ‹


186 
rgb2∑cked
(c⁄° 
Cﬁ‹4
<
T
> &
c
)

188 i‡–
	glimôs
<
	gT
>::
isI¡egøl
() )

190 
r
 = 
c
.∏/ (
limôs
<
T
>::
max
());

191 
	gg
 = 
c
.
g
 / (
limôs
<
T
>::
max
());

192 
	gb
 = 
c
.
b
 / (
limôs
<
T
>::
max
());

193 
	ga
 = 
c
.
a
 / (
limôs
<
T
>::
max
());

194  
rgb2∑cked
–
C4f
(
r
,
g
,
b
,
a
) );

198  ( (
	gPackedCﬁ‹
Ë(
	gc
.
	gr
 * 255) |

199 (((
	gPackedCﬁ‹
Ë(
	gc
.
	gg
 * 255)) << 8) |

200 (((
	gPackedCﬁ‹
Ë(
	gc
.
	gb
 * 255)) << 16) |

201 (((
	gPackedCﬁ‹
Ë(
	gc
.
	ga
 * 255)) << 24));

211 
	gãm∂©e
 <
˛ass
 
	gT
>

213 
∑cked2rgb
(
PackedCﬁ‹
 
∑cked
, 
Vec3
<
T
> &
out
)

215 i‡–
	glimôs
<
	gT
>::
isI¡egøl
() )

217 
T
 
f
 = 
limôs
<T>::
max
(Ë/ ((
PackedCﬁ‹
)0xFF);

218 
	gout
.
	gx
 = (
∑cked
 & 0xFFË* 
f
;

219 
	gout
.
	gy
 = ((
∑cked
 & 0xFF00Ë>> 8Ë* 
f
;

220 
	gout
.
	gz
 = ((
∑cked
 & 0xFF0000Ë>> 16Ë* 
f
;

224 
T
 
	gf
 = T(1) / T(255);

225 
	gout
.
	gx
 = (
∑cked
 & 0xFFË* 
f
;

226 
	gout
.
	gy
 = ((
∑cked
 & 0xFF00Ë>> 8Ë* 
f
;

227 
	gout
.
	gz
 = ((
∑cked
 & 0xFF0000Ë>> 16Ë* 
f
;

231 
	gãm∂©e
 <
˛ass
 
	gT
>

233 
∑cked2rgb
(
PackedCﬁ‹
 
∑cked
, 
Cﬁ‹4
<
T
> &
out
)

235 i‡–
	glimôs
<
	gT
>::
isI¡egøl
() )

237 
T
 
f
 = 
limôs
<T>::
max
(Ë/ ((
PackedCﬁ‹
)0xFF);

238 
	gout
.
	gr
 = (
∑cked
 & 0xFFË* 
f
;

239 
	gout
.
	gg
 = ((
∑cked
 & 0xFF00Ë>> 8Ë* 
f
;

240 
	gout
.
	gb
 = ((
∑cked
 & 0xFF0000Ë>> 16Ë* 
f
;

241 
	gout
.
	ga
 = ((
∑cked
 & 0xFF000000Ë>> 24Ë* 
f
;

245 
T
 
	gf
 = T(1) / T(255);

246 
	gout
.
	gr
 = (
∑cked
 & 0xFFË* 
f
;

247 
	gout
.
	gg
 = ((
∑cked
 & 0xFF00Ë>> 8Ë* 
f
;

248 
	gout
.
	gb
 = ((
∑cked
 & 0xFF0000Ë>> 16Ë* 
f
;

249 
	gout
.
	ga
 = ((
∑cked
 & 0xFF000000Ë>> 24Ë* 
f
;

	@shared/openexr-mac/include/OpenEXR/ImathEuler.h

37 #i‚de‡
INCLUDED_IMATHEULER_H


38 
	#INCLUDED_IMATHEULER_H


	)

128 
	~"Im©hM©h.h
"

129 
	~"Im©hVec.h
"

130 
	~"Im©hQu©.h
"

131 
	~"Im©hM©rix.h
"

132 
	~"Im©hLimôs.h
"

133 
	~<io°ªam
>

135 
«me•a˚
 
	gIm©h
 {

137 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


139 #¥agm®
w¨nög
(
dißbÀ
:4244)

142 
	gãm∂©e
 <
˛ass
 
	gT
>

143 
˛ass
 
	gEuÀr
 : 
public
 
Vec3
<
T
>

145 
public
:

147 
usög
 
Vec3
<
T
>::
x
;

148 
usög
 
	gVec3
<
	gT
>::
y
;

149 
usög
 
	gVec3
<
	gT
>::
z
;

151 
	eOrdî


157 
	gXYZ
 = 0x0101,

158 
	gXZY
 = 0x0001,

159 
	gYZX
 = 0x1101,

160 
	gYXZ
 = 0x1001,

161 
	gZXY
 = 0x2101,

162 
	gZYX
 = 0x2001,

164 
	gXZX
 = 0x0011,

165 
	gXYX
 = 0x0111,

166 
	gYXY
 = 0x1011,

167 
	gYZY
 = 0x1111,

168 
	gZYZ
 = 0x2011,

169 
	gZXZ
 = 0x2111,

171 
	gXYZr
 = 0x2000,

172 
	gXZYr
 = 0x2100,

173 
	gYZXr
 = 0x1000,

174 
	gYXZr
 = 0x1100,

175 
	gZXYr
 = 0x0000,

176 
	gZYXr
 = 0x0100,

178 
	gXZXr
 = 0x2110,

179 
	gXYXr
 = 0x2010,

180 
	gYXYr
 = 0x1110,

181 
	gYZYr
 = 0x1010,

182 
	gZYZr
 = 0x0110,

183 
	gZXZr
 = 0x0010,

193 
	gLegÆ
 = 
XYZ
 | 
XZY
 | 
YZX
 | 
YXZ
 | 
ZXY
 | 
ZYX
 |

194 
XZX
 | 
XYX
 | 
YXY
 | 
YZY
 | 
ZYZ
 | 
ZXZ
 |

195 
XYZr
| 
XZYr
| 
YZXr
| 
YXZr
| 
ZXYr
| 
ZYXr
|

196 
XZXr
| 
XYXr
| 
YXYr
| 
YZYr
| 
ZYZr
| 
ZXZr
,

198 
	gMö
 = 0x0000,

199 
	gMax
 = 0x2111,

200 
	gDeÁu…
 = 
XYZ


203 
	eAxis
 { 
	gX
 = 0, 
	gY
 = 1, 
	gZ
 = 2 };

205 
	eI≈utLayout
 { 
	gXYZLayout
, 
	gIJKLayout
 };

212 
EuÀr
();

213 
EuÀr
(const Euler&);

214 
EuÀr
(
Ordî
 
p
);

215 
EuÀr
(c⁄° 
Vec3
<
T
> &
v
, 
Ordî
 
o
 = 
DeÁu…
, 
I≈utLayout
 
l
 = 
IJKLayout
);

216 
EuÀr
(
T
 
i
, T 
j
, T 
k
, 
Ordî
 
o
 = 
DeÁu…
, 
I≈utLayout
 
l
 = 
IJKLayout
);

217 
EuÀr
(c⁄° EuÀr<
T
> &
euÀr
, 
Ordî
 
√wp
);

218 
EuÀr
(c⁄° 
M©rix33
<
T
> &, 
Ordî
 
o
 = 
DeÁu…
);

219 
EuÀr
(c⁄° 
M©rix44
<
T
> &, 
Ordî
 
o
 = 
DeÁu…
);

225 c⁄° 
	gEuÀr
<
	gT
>& 
	g›î©‹
(c⁄° 
EuÀr
<
T
>&);

226 c⁄° 
	gEuÀr
<
	gT
>& 
	g›î©‹
(c⁄° 
Vec3
<
T
>&);

234 
boﬁ
 
ÀgÆ
(
Ordî
);

236 
£tXYZVe˘‹
(c⁄° 
Vec3
<
T
> &);

238 
Ordî
 
‹dî
() const;

239 
£tOrdî
(
Ordî
);

241 
£t
(
Axis
 
öôül
,

242 
boﬁ
 
ªœtive
,

243 
boﬁ
 
∑rôyEví
,

244 
boﬁ
 
fú°Rïóts
);

253 
exåa˘
(c⁄° 
M©rix33
<
T
>&);

254 
exåa˘
(c⁄° 
M©rix44
<
T
>&);

255 
exåa˘
(c⁄° 
Qu©
<
T
>&);

257 
	gM©rix33
<
	gT
> 
toM©rix33
() const;

258 
	gM©rix44
<
	gT
> 
toM©rix44
() const;

259 
	gQu©
<
	gT
> 
toQu©
() const;

260 
	gVec3
<
	gT
> 
toXYZVe˘‹
() const;

266 
™gÀOrdî
(&
i
, &
j
, &
k
) const;

273 
™gÀM≠pög
(&
i
, &
j
, &
k
) const;

299 
™gÀMod
 (
T
 
™gÀ
);

300 
sim∂eXYZRŸ©i⁄
 (
Vec3
<
T
> &
xyzRŸ
,

301 c⁄° 
Vec3
<
T
> &
èrgëXyzRŸ
);

302 
√¨e°RŸ©i⁄
 (
Vec3
<
T
> &
xyzRŸ
,

303 c⁄° 
Vec3
<
T
> &
èrgëXyzRŸ
,

304 
Ordî
 
‹dî
 = 
XYZ
);

306 
makeNór
 (c⁄° 
EuÀr
<
T
> &
èrgë
);

308 
boﬁ
 
‰ameSètic
(Ëc⁄° {  
	g_‰ameSètic
; }

309 
boﬁ
 
öôülRïóãd
(Ëc⁄° {  
	g_öôülRïóãd
; }

310 
boﬁ
 
∑rôyEví
(Ëc⁄° {  
	g_∑rôyEví
; }

311 
Axis
 
öôülAxis
(Ëc⁄° {  
	g_öôülAxis
; }

313 
	g¥Ÿe˘ed
:

315 
boﬁ
 
_‰ameSètic
 : 1;

316 
boﬁ
 
	g_öôülRïóãd
 : 1;

317 
boﬁ
 
	g_∑rôyEví
 : 1;

318 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


319 
Axis
 
	g_öôülAxis
 ;

321 
Axis
 
	g_öôülAxis
 : 2;

330 
	gEuÀr
<> 
	tEuÀrf
;

331 
	gEuÀr
<> 
	tEuÀrd
;

338 
	gãm∂©e
<
˛ass
 
	gT
>

339 
ölöe
 

340 
	gEuÀr
<
	gT
>::
™gÀOrdî
(&
i
, &
j
, &
k
) const

342 
	gi
 = 
_öôülAxis
;

343 
	gj
 = 
_∑rôyEví
 ? (
i
+1)%3 : (i > 0 ? i-1 : 2);

344 
	gk
 = 
_∑rôyEví
 ? (
i
 > 0 ? i-1 : 2) : (i+1)%3;

347 
	gãm∂©e
<
˛ass
 
	gT
>

348 
ölöe
 

349 
	gEuÀr
<
	gT
>::
™gÀM≠pög
(&
i
, &
j
, &
k
) const

351 
	gm
[3];

353 
	gm
[
_öôülAxis
] = 0;

354 
	gm
[(
_öôülAxis
+1Ë% 3] = 
_∑rôyEví
 ? 1 : 2;

355 
	gm
[(
_öôülAxis
+2Ë% 3] = 
_∑rôyEví
 ? 2 : 1;

356 
	gi
 = 
m
[0];

357 
	gj
 = 
m
[1];

358 
	gk
 = 
m
[2];

361 
	gãm∂©e
<
˛ass
 
	gT
>

362 
ölöe
 

363 
	gEuÀr
<
	gT
>::
£tXYZVe˘‹
(c⁄° 
Vec3
<
T
> &
v
)

365 
i
,
	gj
,
	gk
;

366 
™gÀM≠pög
(
i
,
j
,
k
);

367 (*
	gthis
)[
i
] = 
v
.
x
;

368 (*
	gthis
)[
j
] = 
v
.
y
;

369 (*
	gthis
)[
k
] = 
v
.
z
;

372 
	gãm∂©e
<
˛ass
 
	gT
>

373 
ölöe
 
	gVec3
<
	gT
>

374 
	gEuÀr
<
	gT
>::
toXYZVe˘‹
() const

376 
i
,
	gj
,
	gk
;

377 
™gÀM≠pög
(
i
,
j
,
k
);

378  
	gVec3
<
	gT
>((*
	gthis
)[
i
],(*this)[
j
],(*this)[
k
]);

382 
	gãm∂©e
<
˛ass
 
	gT
>

383 
	gEuÀr
<
	gT
>::
EuÀr
() :

384 
Vec3
<
T
>(0,0,0),

385 
_‰ameSètic
(
åue
),

386 
_öôülRïóãd
(
Ál£
),

387 
_∑rôyEví
(
åue
),

388 
_öôülAxis
(
X
)

391 
	gãm∂©e
<
˛ass
 
	gT
>

392 
	gEuÀr
<
	gT
>::
EuÀr
(
ty≥«me
 EuÀr<
T
>::
Ordî
 
p
) :

393 
Vec3
<
T
>(0,0,0),

394 
_‰ameSètic
(
åue
),

395 
_öôülRïóãd
(
Ál£
),

396 
_∑rôyEví
(
åue
),

397 
_öôülAxis
(
X
)

399 
£tOrdî
(
p
);

402 
	gãm∂©e
<
˛ass
 
	gT
>

403 
ölöe
 
	gEuÀr
<
	gT
>::
EuÀr
–c⁄° 
Vec3
<
T
> &
v
,

404 
ty≥«me
 
EuÀr
<
T
>::
Ordî
 
p
,

405 
ty≥«me
 
EuÀr
<
T
>::
I≈utLayout
 
l
 )

407 
£tOrdî
(
p
);

408 i‡–
	gl
 =
XYZLayout
 ) 
£tXYZVe˘‹
(
v
);

409 { 
	gx
 = 
v
.
x
; 
	gy
 = v.
y
; 
	gz
 = v.
z
; }

412 
	gãm∂©e
<
˛ass
 
	gT
>

413 
ölöe
 
	gEuÀr
<
	gT
>::
EuÀr
(c⁄° EuÀr<
T
> &
euÀr
)

415 
›î©‹
=(
euÀr
);

418 
	gãm∂©e
<
˛ass
 
	gT
>

419 
ölöe
 
	gEuÀr
<
	gT
>::
EuÀr
(c⁄° EuÀr<
T
> &
euÀr
,
Ordî
 
p
)

421 
£tOrdî
(
p
);

422 
	gM©rix33
<
	gT
> 
	gM
 = 
euÀr
.
toM©rix33
();

423 
exåa˘
(
M
);

426 
	gãm∂©e
<
˛ass
 
	gT
>

427 
ölöe
 
	gEuÀr
<
	gT
>::
EuÀr
–
T
 
xi
, T 
yi
, T 
zi
,

428 
ty≥«me
 
EuÀr
<
T
>::
Ordî
 
p
,

429 
ty≥«me
 
EuÀr
<
T
>::
I≈utLayout
 
l
)

431 
£tOrdî
(
p
);

432 i‡–
	gl
 =
XYZLayout
 ) 
£tXYZVe˘‹
(
Vec3
<
T
>(
xi
,
yi
,
zi
));

433 { 
	gx
 = 
xi
; 
	gy
 = 
yi
; 
	gz
 = 
zi
; }

436 
	gãm∂©e
<
˛ass
 
	gT
>

437 
ölöe
 
	gEuÀr
<
	gT
>::
EuÀr
–c⁄° 
M©rix33
<
T
> &
M
, 
ty≥«me
 EuÀr::
Ordî
 
p
 )

439 
£tOrdî
(
p
);

440 
exåa˘
(
M
);

443 
	gãm∂©e
<
˛ass
 
	gT
>

444 
ölöe
 
	gEuÀr
<
	gT
>::
EuÀr
–c⁄° 
M©rix44
<
T
> &
M
, 
ty≥«me
 EuÀr::
Ordî
 
p
 )

446 
£tOrdî
(
p
);

447 
exåa˘
(
M
);

450 
	gãm∂©e
<
˛ass
 
	gT
>

451 
ölöe
 
	gEuÀr
<
	gT
>::
exåa˘
(c⁄° 
Qu©
<
T
> &
q
)

453 
exåa˘
(
q
.
toM©rix33
());

456 
	gãm∂©e
<
˛ass
 
	gT
>

457 
	gEuÀr
<
	gT
>::
exåa˘
(c⁄° 
M©rix33
<
T
> &
M
)

459 
i
,
	gj
,
	gk
;

460 
™gÀOrdî
(
i
,
j
,
k
);

462 i‡(
	g_öôülRïóãd
)

468 
	gx
 = 
M©h
<
T
>::
©™2
 (
M
[
j
][
i
], M[
k
][i]);

476 
	gVec3
<
	gT
> 
r
 (0, 0, 0);

477 
	gr
[
i
] = (
_∑rôyEví
? -
x
: x);

479 
	gM©rix44
<
	gT
> 
	gN
;

480 
	gN
.
rŸ©e
 (
r
);

482 
	gN
 = 
N
 * 
M©rix44
<
T
> (
M
[0][0], 
	gM
[0][1], M[0][2], 0,

483 
	gM
[1][0], M[1][1], M[1][2], 0,

484 
	gM
[2][0], M[2][1], M[2][2], 0,

490 
T
 
	gsy
 = 
M©h
<T>::
sqπ
 (
N
[
j
][
i
]*N[j][i] + N[
k
][i]*N[k][i]);

491 
	gy
 = 
M©h
<
T
>::
©™2
 (
sy
, 
N
[
i
][i]);

492 
	gz
 = 
M©h
<
T
>::
©™2
 (
N
[
j
][
k
], N[j][j]);

500 
	gx
 = 
M©h
<
T
>::
©™2
 (
M
[
j
][
k
], M[k][k]);

508 
	gVec3
<
	gT
> 
r
 (0, 0, 0);

509 
	gr
[
i
] = (
_∑rôyEví
? -
x
: x);

511 
	gM©rix44
<
	gT
> 
	gN
;

512 
	gN
.
rŸ©e
 (
r
);

514 
	gN
 = 
N
 * 
M©rix44
<
T
> (
M
[0][0], 
	gM
[0][1], M[0][2], 0,

515 
	gM
[1][0], M[1][1], M[1][2], 0,

516 
	gM
[2][0], M[2][1], M[2][2], 0,

522 
T
 
	gcy
 = 
M©h
<T>::
sqπ
 (
N
[
i
][i]*N[i][i] + N[i][
j
]*N[i][j]);

523 
	gy
 = 
M©h
<
T
>::
©™2
 (-
N
[
i
][
k
], 
cy
);

524 
	gz
 = 
M©h
<
T
>::
©™2
 (-
N
[
j
][
i
], N[j][j]);

527 i‡(!
	g_∑rôyEví
)

528 *
	gthis
 *= -1;

530 i‡(!
	g_‰ameSètic
)

532 
T
 
	gt
 = 
x
;

533 
	gx
 = 
z
;

534 
	gz
 = 
t
;

538 
	gãm∂©e
<
˛ass
 
	gT
>

539 
	gEuÀr
<
	gT
>::
exåa˘
(c⁄° 
M©rix44
<
T
> &
M
)

541 
i
,
	gj
,
	gk
;

542 
™gÀOrdî
(
i
,
j
,
k
);

544 i‡(
	g_öôülRïóãd
)

550 
	gx
 = 
M©h
<
T
>::
©™2
 (
M
[
j
][
i
], M[
k
][i]);

558 
	gVec3
<
	gT
> 
r
 (0, 0, 0);

559 
	gr
[
i
] = (
_∑rôyEví
? -
x
: x);

561 
	gM©rix44
<
	gT
> 
	gN
;

562 
	gN
.
rŸ©e
 (
r
);

563 
	gN
 = 
N
 * 
M
;

569 
T
 
	gsy
 = 
M©h
<T>::
sqπ
 (
N
[
j
][
i
]*N[j][i] + N[
k
][i]*N[k][i]);

570 
	gy
 = 
M©h
<
T
>::
©™2
 (
sy
, 
N
[
i
][i]);

571 
	gz
 = 
M©h
<
T
>::
©™2
 (
N
[
j
][
k
], N[j][j]);

579 
	gx
 = 
M©h
<
T
>::
©™2
 (
M
[
j
][
k
], M[k][k]);

587 
	gVec3
<
	gT
> 
r
 (0, 0, 0);

588 
	gr
[
i
] = (
_∑rôyEví
? -
x
: x);

590 
	gM©rix44
<
	gT
> 
	gN
;

591 
	gN
.
rŸ©e
 (
r
);

592 
	gN
 = 
N
 * 
M
;

598 
T
 
	gcy
 = 
M©h
<T>::
sqπ
 (
N
[
i
][i]*N[i][i] + N[i][
j
]*N[i][j]);

599 
	gy
 = 
M©h
<
T
>::
©™2
 (-
N
[
i
][
k
], 
cy
);

600 
	gz
 = 
M©h
<
T
>::
©™2
 (-
N
[
j
][
i
], N[j][j]);

603 i‡(!
	g_∑rôyEví
)

604 *
	gthis
 *= -1;

606 i‡(!
	g_‰ameSètic
)

608 
T
 
	gt
 = 
x
;

609 
	gx
 = 
z
;

610 
	gz
 = 
t
;

614 
	gãm∂©e
<
˛ass
 
	gT
>

615 
	gM©rix33
<
	gT
> 
	gEuÀr
<T>::
toM©rix33
() const

617 
i
,
	gj
,
	gk
;

618 
™gÀOrdî
(
i
,
j
,
k
);

620 
	gVec3
<
	gT
> 
	g™gÀs
;

622 i‡–
	g_‰ameSètic
 ) 
	g™gÀs
 = (*
this
);

623 
	g™gÀs
 = 
Vec3
<
T
>(
z
,
	gy
,
	gx
);

625 i‡–!
	g_∑rôyEví
 ) 
	g™gÀs
 *= -1.0;

627 
T
 
	gci
 = 
M©h
<T>::
cos
(
™gÀs
.
x
);

628 
T
 
	gcj
 = 
M©h
<T>::
cos
(
™gÀs
.
y
);

629 
T
 
	gch
 = 
M©h
<T>::
cos
(
™gÀs
.
z
);

630 
T
 
	gsi
 = 
M©h
<T>::
sö
(
™gÀs
.
x
);

631 
T
 
	gsj
 = 
M©h
<T>::
sö
(
™gÀs
.
y
);

632 
T
 
	gsh
 = 
M©h
<T>::
sö
(
™gÀs
.
z
);

634 
T
 
	gcc
 = 
ci
*
ch
;

635 
T
 
	gcs
 = 
ci
*
sh
;

636 
T
 
	gsc
 = 
si
*
ch
;

637 
T
 
	gss
 = 
si
*
sh
;

639 
	gM©rix33
<
	gT
> 
	gM
;

641 i‡–
	g_öôülRïóãd
 )

643 
	gM
[
i
][i] = 
cj
; M[
j
][i] = 
sj
*
si
; M[
k
][i] = sj*
ci
;

644 
	gM
[
i
][
j
] = 
sj
*
sh
; M[j][j] = -
cj
*
ss
+
cc
; M[
k
][j] = -cj*
cs
-
sc
;

645 
	gM
[
i
][
k
] = -
sj
*
ch
; M[
j
][k] = 
cj
*
sc
+
cs
; M[k][k] = cj*
cc
-
ss
;

649 
	gM
[
i
][i] = 
cj
*
ch
; M[
j
][i] = 
sj
*
sc
-
cs
; M[
k
][i] = sj*
cc
+
ss
;

650 
	gM
[
i
][
j
] = 
cj
*
sh
; M[j][j] = 
sj
*
ss
+
cc
; M[
k
][j] = sj*
cs
-
sc
;

651 
	gM
[
i
][
k
] = -
sj
; M[
j
][k] = 
cj
*
si
; M[k][k] = cj*
ci
;

654  
	gM
;

657 
	gãm∂©e
<
˛ass
 
	gT
>

658 
	gM©rix44
<
	gT
> 
	gEuÀr
<T>::
toM©rix44
() const

660 
i
,
	gj
,
	gk
;

661 
™gÀOrdî
(
i
,
j
,
k
);

663 
	gVec3
<
	gT
> 
	g™gÀs
;

665 i‡–
	g_‰ameSètic
 ) 
	g™gÀs
 = (*
this
);

666 
	g™gÀs
 = 
Vec3
<
T
>(
z
,
	gy
,
	gx
);

668 i‡–!
	g_∑rôyEví
 ) 
	g™gÀs
 *= -1.0;

670 
T
 
	gci
 = 
M©h
<T>::
cos
(
™gÀs
.
x
);

671 
T
 
	gcj
 = 
M©h
<T>::
cos
(
™gÀs
.
y
);

672 
T
 
	gch
 = 
M©h
<T>::
cos
(
™gÀs
.
z
);

673 
T
 
	gsi
 = 
M©h
<T>::
sö
(
™gÀs
.
x
);

674 
T
 
	gsj
 = 
M©h
<T>::
sö
(
™gÀs
.
y
);

675 
T
 
	gsh
 = 
M©h
<T>::
sö
(
™gÀs
.
z
);

677 
T
 
	gcc
 = 
ci
*
ch
;

678 
T
 
	gcs
 = 
ci
*
sh
;

679 
T
 
	gsc
 = 
si
*
ch
;

680 
T
 
	gss
 = 
si
*
sh
;

682 
	gM©rix44
<
	gT
> 
	gM
;

684 i‡–
	g_öôülRïóãd
 )

686 
	gM
[
i
][i] = 
cj
; M[
j
][i] = 
sj
*
si
; M[
k
][i] = sj*
ci
;

687 
	gM
[
i
][
j
] = 
sj
*
sh
; M[j][j] = -
cj
*
ss
+
cc
; M[
k
][j] = -cj*
cs
-
sc
;

688 
	gM
[
i
][
k
] = -
sj
*
ch
; M[
j
][k] = 
cj
*
sc
+
cs
; M[k][k] = cj*
cc
-
ss
;

692 
	gM
[
i
][i] = 
cj
*
ch
; M[
j
][i] = 
sj
*
sc
-
cs
; M[
k
][i] = sj*
cc
+
ss
;

693 
	gM
[
i
][
j
] = 
cj
*
sh
; M[j][j] = 
sj
*
ss
+
cc
; M[
k
][j] = sj*
cs
-
sc
;

694 
	gM
[
i
][
k
] = -
sj
; M[
j
][k] = 
cj
*
si
; M[k][k] = cj*
ci
;

697  
	gM
;

700 
	gãm∂©e
<
˛ass
 
	gT
>

701 
	gQu©
<
	gT
> 
	gEuÀr
<T>::
toQu©
() const

703 
Vec3
<
T
> 
™gÀs
;

704 
	gi
,
	gj
,
	gk
;

705 
™gÀOrdî
(
i
,
j
,
k
);

707 i‡–
	g_‰ameSètic
 ) 
	g™gÀs
 = (*
this
);

708 
	g™gÀs
 = 
Vec3
<
T
>(
z
,
	gy
,
	gx
);

710 i‡–!
	g_∑rôyEví
 ) 
	g™gÀs
.
	gy
 = -
™gÀs
.
y
;

712 
T
 
	gti
 = 
™gÀs
.
x
*0.5;

713 
T
 
	gtj
 = 
™gÀs
.
y
*0.5;

714 
T
 
	gth
 = 
™gÀs
.
z
*0.5;

715 
T
 
	gci
 = 
M©h
<T>::
cos
(
ti
);

716 
T
 
	gcj
 = 
M©h
<T>::
cos
(
tj
);

717 
T
 
	gch
 = 
M©h
<T>::
cos
(
th
);

718 
T
 
	gsi
 = 
M©h
<T>::
sö
(
ti
);

719 
T
 
	gsj
 = 
M©h
<T>::
sö
(
tj
);

720 
T
 
	gsh
 = 
M©h
<T>::
sö
(
th
);

721 
T
 
	gcc
 = 
ci
*
ch
;

722 
T
 
	gcs
 = 
ci
*
sh
;

723 
T
 
	gsc
 = 
si
*
ch
;

724 
T
 
	gss
 = 
si
*
sh
;

726 
T
 
	g∑rôy
 = 
_∑rôyEví
 ? 1.0 : -1.0;

728 
	gQu©
<
	gT
> 
	gq
;

729 
	gVec3
<
	gT
> 
	ga
;

731 i‡–
	g_öôülRïóãd
 )

733 
	ga
[
i
] = 
cj
*(
cs
 + 
sc
);

734 
	ga
[
j
] = 
sj
*(
cc
 + 
ss
Ë* 
∑rôy
,

735 
	ga
[
k
] = 
sj
*(
cs
 - 
sc
);

736 
	gq
.
	gr
 = 
cj
*(
cc
 - 
ss
);

740 
	ga
[
i
] = 
cj
*
sc
 - 
sj
*
cs
,

741 
	ga
[
j
] = (
cj
*
ss
 + 
sj
*
cc
Ë* 
∑rôy
,

742 
	ga
[
k
] = 
cj
*
cs
 - 
sj
*
sc
;

743 
	gq
.
	gr
 = 
cj
*
cc
 + 
sj
*
ss
;

746 
	gq
.
	gv
 = 
a
;

748  
	gq
;

751 
	gãm∂©e
<
˛ass
 
	gT
>

752 
ölöe
 
boﬁ


753 
	gEuÀr
<
	gT
>::
ÀgÆ
(
ty≥«me
 
EuÀr
<
T
>::
Ordî
 
‹dî
)

755  (
‹dî
 & ~
LegÆ
Ë? 
Ál£
 : 
åue
;

758 
	gãm∂©e
<
˛ass
 
	gT
>

759 
ty≥«me
 
	gEuÀr
<
	gT
>::
Ordî


760 
EuÀr
<
T
>::
‹dî
() const

762 
foo
 = (
_öôülAxis
 =
Z
 ? 0x2000 : (_öôülAxi†=
Y
 ? 0x1000 : 0));

764 i‡(
	g_∑rôyEví
Ë
	gfoo
 |= 0x0100;

765 i‡(
	g_öôülRïóãd
Ë
	gfoo
 |= 0x0010;

766 i‡(
	g_‰ameSètic
Ë
	gfoo
++;

768  (
	gOrdî
)
	gfoo
;

771 
	gãm∂©e
<
˛ass
 
	gT
>

772 
ölöe
 
	gEuÀr
<
	gT
>::
£tOrdî
(
ty≥«me
 
EuÀr
<
T
>::
Ordî
 
p
)

774 
£t
–
p
 & 0x2000 ? 
Z
 : (∞& 0x1000 ? 
Y
 : 
X
),

775 !(
p
 & 0x1),

776 !!(
p
 & 0x100),

777 !!(
p
 & 0x10));

780 
	gãm∂©e
<
˛ass
 
	gT
>

781 
	gEuÀr
<
	gT
>::
£t
(
ty≥«me
 
EuÀr
<
T
>::
Axis
 
axis
,

782 
boﬁ
 
ªœtive
,

783 
boﬁ
 
∑rôyEví
,

784 
boﬁ
 
fú°Rïóts
)

786 
	g_öôülAxis
 = 
axis
;

787 
	g_‰ameSètic
 = !
ªœtive
;

788 
	g_∑rôyEví
 = 
∑rôyEví
;

789 
	g_öôülRïóãd
 = 
fú°Rïóts
;

792 
	gãm∂©e
<
˛ass
 
	gT
>

793 c⁄° 
	gEuÀr
<
	gT
>& EuÀr<T>::
›î©‹
(c⁄° 
EuÀr
<
T
> &
euÀr
)

795 
x
 = 
euÀr
.x;

796 
	gy
 = 
euÀr
.
y
;

797 
	gz
 = 
euÀr
.
z
;

798 
	g_öôülAxis
 = 
euÀr
.
_öôülAxis
;

799 
	g_‰ameSètic
 = 
euÀr
.
_‰ameSètic
;

800 
	g_∑rôyEví
 = 
euÀr
.
_∑rôyEví
;

801 
	g_öôülRïóãd
 = 
euÀr
.
_öôülRïóãd
;

802  *
	gthis
;

805 
	gãm∂©e
<
˛ass
 
	gT
>

806 c⁄° 
	gEuÀr
<
	gT
>& EuÀr<T>::
›î©‹
(c⁄° 
Vec3
<
T
> &
v
)

808 
x
 = 
v
.x;

809 
	gy
 = 
v
.
y
;

810 
	gz
 = 
v
.
z
;

811  *
	gthis
;

814 
	gãm∂©e
<
˛ass
 
	gT
>

815 
	g°d
::
o°ªam
& 
›î©‹
 << (
°d
::o°ªam &
o
, c⁄° 
	gEuÀr
<
	gT
> &
	geuÀr
)

817 
	ga
[3] = { 'X', 'Y', 'Z' };

819 c⁄° * 
	gr
 = 
euÀr
.
‰ameSètic
() ? "" : "r";

820 
	gi
,
	gj
,
	gk
;

821 
	geuÀr
.
™gÀOrdî
(
i
,
j
,
k
);

823 i‡–
	geuÀr
.
öôülRïóãd
(ËË
	gk
 = 
i
;

825  
	go
 << "("

826 << 
	geuÀr
.
	gx
 << " "

827 << 
	geuÀr
.
	gy
 << " "

828 << 
	geuÀr
.
	gz
 << " "

829 << 
	ga
[
i
] <<á[
j
] <<á[
k
] << 
	gr
 << ")";

832 
	gãm∂©e
 <
˛ass
 
	gT
>

834 
	gEuÀr
<
	gT
>::
™gÀMod
 (
T
 
™gÀ
)

836 
™gÀ
 = 
fmod
(
T
 (™gÀ), T (2 * 
M_PI
));

838 i‡(
	g™gÀ
 < -
	gM_PI
Ë™gÀ +2 * 
M_PI
;

839 i‡(
	g™gÀ
 > +
	gM_PI
Ë™gÀ -2 * 
M_PI
;

841  
	g™gÀ
;

844 
	gãm∂©e
 <
˛ass
 
	gT
>

846 
	gEuÀr
<
	gT
>::
sim∂eXYZRŸ©i⁄
 (
Vec3
<
T
> &
xyzRŸ
, c⁄° Vec3<T> &
èrgëXyzRŸ
)

848 
	gVec3
<
	gT
> 
	gd
 = 
xyzRŸ
 - 
èrgëXyzRŸ
;

849 
	gxyzRŸ
[0] = 
èrgëXyzRŸ
[0] + 
™gÀMod
(
d
[0]);

850 
	gxyzRŸ
[1] = 
èrgëXyzRŸ
[1] + 
™gÀMod
(
d
[1]);

851 
	gxyzRŸ
[2] = 
èrgëXyzRŸ
[2] + 
™gÀMod
(
d
[2]);

854 
	gãm∂©e
 <
˛ass
 
	gT
>

856 
	gEuÀr
<
	gT
>::
√¨e°RŸ©i⁄
 (
Vec3
<
T
> &
xyzRŸ
, c⁄° Vec3<T> &
èrgëXyzRŸ
,

857 
Ordî
 
‹dî
)

859 
	gi
,
	gj
,
	gk
;

860 
	gEuÀr
<
	gT
> 
e
 (0,0,0, 
‹dî
);

861 
	ge
.
™gÀOrdî
(
i
,
j
,
k
);

863 
sim∂eXYZRŸ©i⁄
(
xyzRŸ
, 
èrgëXyzRŸ
);

865 
	gVec3
<
	gT
> 
	gŸhîXyzRŸ
;

866 
	gŸhîXyzRŸ
[
i
] = 
M_PI
+
xyzRŸ
[i];

867 
	gŸhîXyzRŸ
[
j
] = 
M_PI
-
xyzRŸ
[j];

868 
	gŸhîXyzRŸ
[
k
] = 
M_PI
+
xyzRŸ
[k];

870 
sim∂eXYZRŸ©i⁄
(
ŸhîXyzRŸ
, 
èrgëXyzRŸ
);

872 
	gVec3
<
	gT
> 
	gd
 = 
xyzRŸ
 - 
èrgëXyzRŸ
;

873 
	gVec3
<
	gT
> 
	god
 = 
ŸhîXyzRŸ
 - 
èrgëXyzRŸ
;

874 
T
 
	gdMag
 = 
d
.
dŸ
(d);

875 
T
 
	godMag
 = 
od
.
dŸ
(od);

877 i‡(
	godMag
 < 
	gdMag
)

879 
	gxyzRŸ
 = 
ŸhîXyzRŸ
;

883 
	gãm∂©e
 <
˛ass
 
	gT
>

885 
	gEuÀr
<
	gT
>::
makeNór
 (c⁄° 
EuÀr
<
T
> &
èrgë
)

887 
Vec3
<
T
> 
xyzRŸ
 = 
toXYZVe˘‹
();

888 
	gEuÀr
<
	gT
> 
	gèrgëSameOrdî
 = 
EuÀr
<
T
>(
èrgë
, 
‹dî
());

889 
	gVec3
<
	gT
> 
	gèrgëXyz
 = 
èrgëSameOrdî
.
toXYZVe˘‹
();

891 
√¨e°RŸ©i⁄
(
xyzRŸ
, 
èrgëXyz
, 
‹dî
());

893 
£tXYZVe˘‹
(
xyzRŸ
);

896 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


897 #¥agm®
w¨nög
(:4244)

	@shared/openexr-mac/include/OpenEXR/ImathExc.h

37 #i‚de‡
INCLUDED_IMATHEXC_H


38 
	#INCLUDED_IMATHEXC_H


	)

47 
	~"IexBa£Exc.h
"

49 
«me•a˚
 
	gIm©h
 {

52 
DEFINE_EXC
 (
NuŒVecExc
, ::
Iex
::
M©hExc
)

55 
DEFINE_EXC
 (
NuŒQu©Exc
, ::
Iex
::
M©hExc
)

58 
DEFINE_EXC
 (
SögM©rixExc
, ::
Iex
::
M©hExc
)

61 
DEFINE_EXC
 (
ZîoSˇÀExc
, ::
Iex
::
M©hExc
)

64 
DEFINE_EXC
 (
I¡VecN‹mÆizeExc
, ::
Iex
::
M©hExc
)

	@shared/openexr-mac/include/OpenEXR/ImathFrame.h

37 #i‚de‡
INCLUDED_IMATHFRAME_H


38 
	#INCLUDED_IMATHFRAME_H


	)

40 
«me•a˚
 
	gIm©h
 {

42 
	gãm∂©e
<
˛ass
 
	gT
> cœs†
	gVec3
;

43 
	gãm∂©e
<
˛ass
 
	gT
> cœs†
	gM©rix44
;

63 
	gãm∂©e
<
˛ass
 
	gT
> 
	gM©rix44
<T> 
fú°Føme
–c⁄° 
Vec3
<
T
>&,

64 c⁄° 
Vec3
<
T
>&,

65 c⁄° 
Vec3
<
T
>& );

67 
	gãm∂©e
<
˛ass
 
	gT
> 
	gM©rix44
<T> 
√xtFøme
–c⁄° 
M©rix44
<
T
>&,

68 c⁄° 
Vec3
<
T
>&,

69 c⁄° 
Vec3
<
T
>&,

70 
Vec3
<
T
>&,

71 
Vec3
<
T
>& );

73 
	gãm∂©e
<
˛ass
 
	gT
> 
	gM©rix44
<T> 
œ°Føme
–c⁄° 
M©rix44
<
T
>&,

74 c⁄° 
Vec3
<
T
>&,

75 c⁄° 
Vec3
<
T
>& );

88 
	gãm∂©e
<
˛ass
 
	gT
> 
	gM©rix44
<T> 
	gfú°Føme


90 c⁄° 
	gVec3
<
	gT
>& 
	gpi
,

91 c⁄° 
	gVec3
<
	gT
>& 
	gpj
,

92 c⁄° 
	gVec3
<
	gT
>& 
	gpk
 )

94 
	gVec3
<
	gT
> 
	gt
 = 
pj
 - 
pi
;Å.
n‹mÆizeExc
();

96 
	gVec3
<
	gT
> 
	gn
 = 
t
.
¸oss
–
pk
 - 
pi
 );Ç.
n‹mÆize
();

97 if–
	gn
.
Àngth
() == 0.0f )

99 
i
 = 
Ábs
–
t
[0] ) < fabs(Å[1] ) ? 0 : 1;

100 if–
Ábs
–
t
[2] ) < fabs–t[
i
] )Ë
	gi
 = 2;

102 
	gVec3
<
	gT
> 
v
–0.0, 0.0, 0.0 ); 
	gv
[
i
] = 1.0;

103 
	gn
 = 
t
.
¸oss
–
v
 );Ç.
n‹mÆize
();

106 
	gVec3
<
	gT
> 
	gb
 = 
t
.
¸oss
–
n
 );

108 
	gM©rix44
<
	gT
> 
	gM
;

110 
	gM
[0][0] = 
t
[0]; M[0][1] =Å[1]; M[0][2] =Å[2]; M[0][3] = 0.0,

111 
	gM
[1][0] = 
n
[0]; M[1][1] =Ç[1]; M[1][2] =Ç[2]; M[1][3] = 0.0,

112 
	gM
[2][0] = 
b
[0]; M[2][1] = b[1]; M[2][2] = b[2]; M[2][3] = 0.0,

113 
	gM
[3][0] = 
pi
[0]; M[3][1] =Öi[1]; M[3][2] =Öi[2]; M[3][3] = 1.0;

115  
	gM
;

126 
	gãm∂©e
<
˛ass
 
	gT
> 
	gM©rix44
<T> 
	g√xtFøme


128 c⁄° 
	gM©rix44
<
	gT
>& 
	gMi
,

129 c⁄° 
	gVec3
<
	gT
>& 
	gpi
,

130 c⁄° 
	gVec3
<
	gT
>& 
	gpj
,

131 
	gVec3
<
	gT
>& 
	gti
,

132 
	gVec3
<
	gT
>& 
	gtj
 )

134 
	gVec3
<
	gT
> 
a
(0.0, 0.0, 0.0);

135 
T
 
	gr
 = 0.0;

137 if–
	gti
.
Àngth
(Ë!0.0 && 
tj
.length() != 0.0 )

139 
ti
.
n‹mÆize
(); 
	gtj
.normalize();

140 
T
 
	gdŸ
 = 
ti
.
dŸ
–
tj
 );

146 if–
	gdŸ
 > 1.0 ) dot = 1.0;

147 if–
	gdŸ
 < -1.0 ) dot = -1.0;

149 
	gr
 = 
acosf
–
dŸ
 );

150 
	ga
 = 
ti
.
¸oss
–
tj
 );

153 if–
	ga
.
Àngth
(Ë!0.0 && 
r
 != 0.0 )

155 
M©rix44
<
T
> 
R
; 
	gR
.
£tAxisAngÀ
–
a
, 
r
 );

156 
	gM©rix44
<
	gT
> 
	gTj
; Tj.
å™¶©e
–
pj
 );

157 
	gM©rix44
<
	gT
> 
	gTi
; Ti.
å™¶©e
–-
pi
 );

159  
Mi
 * 
Ti
 * 
R
 * 
	gTj
;

163 
	gM©rix44
<
	gT
> 
	gTr
; Tr.
å™¶©e
–
pj
 - 
pi
 );

165  
Mi
 * 
	gTr
;

177 
	gãm∂©e
<
˛ass
 
	gT
> 
	gM©rix44
<T> 
	gœ°Føme


179 c⁄° 
	gM©rix44
<
	gT
>& 
	gMi
,

180 c⁄° 
	gVec3
<
	gT
>& 
	gpi
,

181 c⁄° 
	gVec3
<
	gT
>& 
	gpj
 )

183 
	gM©rix44
<
	gT
> 
	gTr
; Tr.
å™¶©e
–
pj
 - 
pi
 );

185  
Mi
 * 
	gTr
;

	@shared/openexr-mac/include/OpenEXR/ImathFrustum.h

37 #i‚de‡
INCLUDED_IMATHFRUSTUM_H


38 
	#INCLUDED_IMATHFRUSTUM_H


	)

41 
	~"Im©hVec.h
"

42 
	~"Im©hPœ√.h
"

43 
	~"Im©hLöe.h
"

44 
	~"Im©hM©rix.h
"

45 
	~"Im©hLimôs.h
"

46 
	~"Im©hFun.h
"

47 
	~"IexM©hExc.h
"

49 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


50 #ifde‡
√¨


51 #unde‡
√¨


53 #ifde‡
Ár


54 #unde‡
Ár


58 
«me•a˚
 
	gIm©h
 {

73 
	gãm∂©e
<
˛ass
 
	gT
>

74 ˛as†
	cFru°um


76 
	gpublic
:

77 
Fru°um
();

78 
Fru°um
(const Frustum &);

79 
Fru°um
(
T
 
√¨
, T 
Ár
, T 
À·
, T 
right
, T 
t›
, T 
bŸtom
, 
boﬁ
 
‹tho
=
Ál£
);

80 
Fru°um
(
T
 
√¨
, T 
Ár
, T 
fovx
, T 
fovy
, T 
a•e˘
);

81 
	gvútuÆ
 ~
Fru°um
();

87 c⁄° 
	gFru°um
 &
	g›î©‹
 = (c⁄° 
Fru°um
 &);

93 
boﬁ
 
	g›î©‹
 =(c⁄° 
Fru°um
<
T
> &
§c
) const;

94 
boﬁ
 
	g›î©‹
 !(c⁄° 
Fru°um
<
T
> &
§c
) const;

100 
£t
(
T
 
√¨
, T 
Ár
,

101 
T
 
À·
, T 
right
,

102 
T
 
t›
, T 
bŸtom
,

103 
boﬁ
 
‹tho
=
Ál£
);

105 
£t
(
T
 
√¨
, T 
Ár
, T 
fovx
, T 
fovy
, T 
a•e˘
);

111 
modifyNórAndF¨
(
T
 
√¨
, T 
Ár
);

112 
£tOπhogøphic
(
boﬁ
);

118 
boﬁ
 
‹thogøphic
(Ëc⁄° {  
	g_‹thogøphic
; }

119 
T
 
√¨
(Ëc⁄° {  
	g_√¨
; }

120 
T
 
Ár
(Ëc⁄° {  
	g_Ár
; }

121 
T
 
À·
(Ëc⁄° {  
	g_À·
; }

122 
T
 
right
(Ëc⁄° {  
	g_right
; }

123 
T
 
bŸtom
(Ëc⁄° {  
	g_bŸtom
; }

124 
T
 
t›
(Ëc⁄° {  
	g_t›
; }

134 
∂™es
(
Pœ√3
<
T
> 
p
[6]);

135 
∂™es
(
Pœ√3
<
T
> 
p
[6], c⁄° 
M©rix44
<T> &
M
);

141 
T
 
fovx
() const;

142 
T
 
fovy
() const;

143 
T
 
a•e˘
() const;

144 
	gM©rix44
<
	gT
> 
¥oje˘i⁄M©rix
() const;

153 
	gFru°um
<
	gT
> 
wödow
(
T
 
À·
, T 
right
, T 
t›
, T 
bŸtom
) const;

159 
	gLöe3
<
	gT
> 
¥oje˘S¸ìnToRay
–c⁄° 
Vec2
<
T
> & ) const;

160 
	gVec2
<
	gT
> 
¥oje˘PoötToS¸ìn
–c⁄° 
Vec3
<
T
> & ) const;

162 
T
 
ZToDïth
(
zvÆ
, 
mö
, 
max
) const;

163 
T
 
n‹mÆizedZToDïth
(T 
zvÆ
) const;

164 
DïthToZ
(
T
 
dïth
, 
zmö
, 
zmax
) const;

166 
T
 
w‹ldRadius
(c⁄° 
Vec3
<T> &
p
, T 
ødius
) const;

167 
T
 
s¸ìnRadius
(c⁄° 
Vec3
<T> &
p
, T 
ødius
) const;

170 
	g¥Ÿe˘ed
:

172 
Vec2
<
T
> 
s¸ìnToLoˇl
( const Vec2<T> & ) const;

173 
	gVec2
<
	gT
> 
loˇlToS¸ìn
–c⁄° 
Vec2
<
T
> & ) const;

175 
	g¥Ÿe˘ed
:

176 
T
 
_√¨
;

177 
T
 
	g_Ár
;

178 
T
 
	g_À·
;

179 
T
 
	g_right
;

180 
T
 
	g_t›
;

181 
T
 
	g_bŸtom
;

182 
boﬁ
 
	g_‹thogøphic
;

186 
	gãm∂©e
<
˛ass
 
	gT
>

187 
ölöe
 
	gFru°um
<
	gT
>::
	$Fru°um
()

189 
	`£t
(
	`T
 (0.1),

190 
	`T
 (1000.0),

191 
	`T
 (-1.0),

192 
	`T
 (1.0),

193 
	`T
 (1.0),

194 
	`T
 (-1.0),

195 
Ál£
);

196 
	}
}

198 
	gãm∂©e
<
˛ass
 
	gT
>

199 
ölöe
 
	gFru°um
<
	gT
>::
	$Fru°um
(c⁄° 
Fru°um
 &
f
)

201 *
this
 = 
f
;

202 
	}
}

204 
	gãm∂©e
<
˛ass
 
	gT
>

205 
ölöe
 
	gFru°um
<
	gT
>::
	$Fru°um
(
T
 
n
, T 
f
, T 
l
, T 
r
, T 
t
, T 
b
, 
boﬁ
 
o
)

207 
	`£t
(
n
,
f
,
l
,
r
,
t
,
b
,
o
);

208 
	}
}

210 
	gãm∂©e
<
˛ass
 
	gT
>

211 
ölöe
 
	gFru°um
<
	gT
>::
	$Fru°um
(
T
 
√¨
, T 
Ár
, T 
fovx
, T 
fovy
, T 
a•e˘
)

213 
	`£t
(
√¨
,
Ár
,
fovx
,
fovy
,
a•e˘
);

214 
	}
}

216 
	gãm∂©e
<
˛ass
 
	gT
>

217 
	gFru°um
<
	gT
>::~
	$Fru°um
()

219 
	}
}

221 
ãm∂©e
<
˛ass
 
T
>

222 c⁄° 
Fru°um
<
T
> &

223 
Fru°um
<
T
>::
›î©‹
 = (c⁄° Fru°um &
f
)

225 
_√¨
 = 
f
._near;

226 
	g_Ár
 = 
f
.
_Ár
;

227 
	g_À·
 = 
f
.
_À·
;

228 
	g_right
 = 
f
.
_right
;

229 
	g_t›
 = 
f
.
_t›
;

230 
	g_bŸtom
 = 
f
.
_bŸtom
;

231 
	g_‹thogøphic
 = 
f
.
_‹thogøphic
;

233  *
	gthis
;

236 
	gãm∂©e
 <
˛ass
 
	gT
>

237 
boﬁ


238 
	gFru°um
<
	gT
>::
›î©‹
 =(c⁄° 
Fru°um
<
T
> &
§c
) const

241 
_√¨
 =
§c
._near &&

242 
_Ár
 =
§c
._far &&

243 
_À·
 =
§c
._left &&

244 
_right
 =
§c
._right &&

245 
_t›
 =
§c
._top &&

246 
_bŸtom
 =
§c
._bottom &&

247 
_‹thogøphic
 =
§c
._orthographic;

250 
	gãm∂©e
 <
˛ass
 
	gT
>

251 
ölöe
 
boﬁ


252 
	gFru°um
<
	gT
>::
›î©‹
 !(c⁄° 
Fru°um
<
T
> &
§c
) const

254  !
›î©‹
=(
§c
);

257 
	gãm∂©e
<
˛ass
 
	gT
>

258 
	gFru°um
<
	gT
>::
	$£t
(
T
 
n
, T 
f
, T 
l
, T 
r
, T 
t
, T 
b
, 
boﬁ
 
o
)

260 
_√¨
 = 
n
;

261 
_Ár
 = 
f
;

262 
_À·
 = 
l
;

263 
_right
 = 
r
;

264 
_bŸtom
 = 
b
;

265 
_t›
 = 
t
;

266 
_‹thogøphic
 = 
o
;

267 
	}
}

269 
	gãm∂©e
<
˛ass
 
	gT
>

270 
	gFru°um
<
	gT
>::
	$modifyNórAndF¨
(
T
 
n
, T 
f
)

272 i‡–
_‹thogøphic
 )

274 
_√¨
 = 
n
;

278 
Löe3
<
T
> 
	`lowîLe·
–
Vec3
<T>(0,0,0), Vec3<T>(
_À·
,
_bŸtom
,-
_√¨
) );

279 
Löe3
<
T
> 
	`uµîRight
–
Vec3
<T>(0,0,0), Vec3<T>(
_right
,
_t›
,-
_√¨
) );

280 
Pœ√3
<
T
> 
	`√¨Pœ√
–
Vec3
<T>(0,0,-1), 
n
 );

282 
Vec3
<
T
> 
Œ
,
ur
;

283 
√¨Pœ√
.
	`öãr£˘
(
lowîLe·
,
Œ
);

284 
√¨Pœ√
.
	`öãr£˘
(
uµîRight
,
ur
);

286 
_À·
 = 
Œ
.
x
;

287 
_right
 = 
ur
.
x
;

288 
_t›
 = 
ur
.
y
;

289 
_bŸtom
 = 
Œ
.
y
;

290 
_√¨
 = 
n
;

291 
_Ár
 = 
f
;

294 
_Ár
 = 
f
;

295 
	}
}

297 
	gãm∂©e
<
˛ass
 
	gT
>

298 
	gFru°um
<
	gT
>::
	$£tOπhogøphic
(
boﬁ
 
‹tho
)

300 
_‹thogøphic
 = 
‹tho
;

301 
	}
}

303 
	gãm∂©e
<
˛ass
 
	gT
>

304 
	gFru°um
<
	gT
>::
	$£t
(
T
 
√¨
, T 
Ár
, T 
fovx
, T 
fovy
, T 
a•e˘
)

306 i‡(
fovx
 !0 && 
fovy
 != 0)

307 
throw
 
Iex
::
	`ArgExc
 ("fovxánd fovy cannot both beÇon-zero.");

309 i‡(
fovx
 != 0)

311 
_right
 = 
√¨
 * 
M©h
<
T
>::
	`èn
(
fovx
/2.0);

312 
_À·
 = -
_right
;

313 
_t›
 = ((
_right
 - 
_À·
)/
a•e˘
)/2.0;

314 
_bŸtom
 = -
_t›
;

318 
_t›
 = 
√¨
 * 
M©h
<
T
>::
	`èn
(
fovy
/2.0);

319 
_bŸtom
 = -
_t›
;

320 
_right
 = (
_t›
 - 
_bŸtom
Ë* 
a•e˘
 / 2.0;

321 
_À·
 = -
_right
;

323 
_√¨
 = 
√¨
;

324 
_Ár
 = 
Ár
;

325 
_‹thogøphic
 = 
Ál£
;

326 
	}
}

328 
	gãm∂©e
<
˛ass
 
	gT
>

329 
T
 
	gFru°um
<
	gT
>::
	$fovx
() const

331  
M©h
<
T
>::
	`©™2
(
_right
,
_√¨
Ë- M©h<T>::©™2(
_À·
,_near);

332 
	}
}

334 
	gãm∂©e
<
˛ass
 
	gT
>

335 
T
 
	gFru°um
<
	gT
>::
	$fovy
() const

337  
M©h
<
T
>::
	`©™2
(
_t›
,
_√¨
Ë- M©h<T>::©™2(
_bŸtom
,_near);

338 
	}
}

340 
	gãm∂©e
<
˛ass
 
	gT
>

341 
T
 
	gFru°um
<
	gT
>::
	$a•e˘
() const

343 
T
 
rightMöusLe·
 = 
_right
-
_À·
;

344 
T
 
t›MöusBŸtom
 = 
_t›
-
_bŸtom
;

346 i‡(
	`abs
(
t›MöusBŸtom
) < 1 &&

347 
	`abs
(
rightMöusLe·
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
t›MöusBŸtom
))

349 
throw
 
Iex
::
	`DivzîoExc
 ("Bad viewing frustum: "

353  
rightMöusLe·
 / 
t›MöusBŸtom
;

354 
	}
}

356 
	gãm∂©e
<
˛ass
 
	gT
>

357 
	gM©rix44
<
	gT
> 
	gFru°um
<T>::
	$¥oje˘i⁄M©rix
() const

359 
T
 
rightPlusLe·
 = 
_right
+
_À·
;

360 
T
 
rightMöusLe·
 = 
_right
-
_À·
;

362 
T
 
t›PlusBŸtom
 = 
_t›
+
_bŸtom
;

363 
T
 
t›MöusBŸtom
 = 
_t›
-
_bŸtom
;

365 
T
 
ÁrPlusNór
 = 
_Ár
+
_√¨
;

366 
T
 
ÁrMöusNór
 = 
_Ár
-
_√¨
;

368 i‡((
	`abs
(
rightMöusLe·
) < 1 &&

369 
	`abs
(
rightPlusLe·
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
rightMöusLe·
)) ||

370 (
	`abs
(
t›MöusBŸtom
) < 1 &&

371 
	`abs
(
t›PlusBŸtom
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
t›MöusBŸtom
)) ||

372 (
	`abs
(
ÁrMöusNór
) < 1 &&

373 
	`abs
(
ÁrPlusNór
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
ÁrMöusNór
)))

375 
throw
 
Iex
::
	`DivzîoExc
 ("Bad viewing frustum: "

379 i‡–
_‹thogøphic
 )

381 
T
 
tx
 = -
rightPlusLe·
 / 
rightMöusLe·
;

382 
T
 
ty
 = -
t›PlusBŸtom
 / 
t›MöusBŸtom
;

383 
T
 
tz
 = -
ÁrPlusNór
 / 
ÁrMöusNór
;

385 i‡((
	`abs
(
rightMöusLe·
) < 1 &&

386 2 > 
limôs
<
T
>::
	`max
(Ë* 
	`abs
(
rightMöusLe·
)) ||

387 (
	`abs
(
t›MöusBŸtom
) < 1 &&

388 2 > 
limôs
<
T
>::
	`max
(Ë* 
	`abs
(
t›MöusBŸtom
)) ||

389 (
	`abs
(
ÁrMöusNór
) < 1 &&

390 2 > 
limôs
<
T
>::
	`max
(Ë* 
	`abs
(
ÁrMöusNór
)))

392 
throw
 
Iex
::
	`DivzîoExc
 ("Bad viewing frustum: "

396 
T
 
A
 = 2 / 
rightMöusLe·
;

397 
T
 
B
 = 2 / 
t›MöusBŸtom
;

398 
T
 
C
 = -2 / 
ÁrMöusNór
;

400  
M©rix44
<
T
>–
A
, 0, 0, 0,

401 0, 
B
, 0, 0,

402 0, 0, 
C
, 0,

403 
tx
, 
ty
, 
tz
, 1.f );

407 
T
 
A
 = 
rightPlusLe·
 / 
rightMöusLe·
;

408 
T
 
B
 = 
t›PlusBŸtom
 / 
t›MöusBŸtom
;

409 
T
 
C
 = -
ÁrPlusNór
 / 
ÁrMöusNór
;

411 
T
 
ÁrTimesNór
 = -2 * 
_Ár
 * 
_√¨
;

412 i‡(
	`abs
(
ÁrMöusNór
) < 1 &&

413 
	`abs
(
ÁrTimesNór
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
ÁrMöusNór
))

415 
throw
 
Iex
::
	`DivzîoExc
 ("Bad viewing frustum: "

419 
T
 
D
 = 
ÁrTimesNór
 / 
ÁrMöusNór
;

421 
T
 
twoTimesNór
 = 2 * 
_√¨
;

423 i‡((
	`abs
(
rightMöusLe·
) < 1 &&

424 
	`abs
(
twoTimesNór
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
rightMöusLe·
)) ||

425 (
	`abs
(
t›MöusBŸtom
) < 1 &&

426 
	`abs
(
twoTimesNór
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
t›MöusBŸtom
)))

428 
throw
 
Iex
::
	`DivzîoExc
 ("Bad viewing frustum: "

432 
T
 
E
 = 
twoTimesNór
 / 
rightMöusLe·
;

433 
T
 
F
 = 
twoTimesNór
 / 
t›MöusBŸtom
;

435  
M©rix44
<
T
>–
E
, 0, 0, 0,

436 0, 
F
, 0, 0,

437 
A
, 
B
, 
C
, -1,

438 0, 0, 
D
, 0 );

440 
	}
}

442 
	gãm∂©e
<
˛ass
 
	gT
>

443 
	gFru°um
<
	gT
> Fru°um<T>::
	$wödow
(
T
 
l
, T 
r
, T 
t
, T 
b
) const

447 
Vec2
<
T
> 
bl
 = 
	`s¸ìnToLoˇl
–Vec2<T>(
l
,
b
) );

448 
Vec2
<
T
> 
å
 = 
	`s¸ìnToLoˇl
–Vec2<T>(
r
,
t
) );

450  
Fru°um
<
T
>(
_√¨
, 
_Ár
, 
bl
.
x
, 
å
.x,År.
y
, bl.y, 
_‹thogøphic
);

451 
	}
}

454 
	gãm∂©e
<
˛ass
 
	gT
>

455 
	gVec2
<
	gT
> 
	gFru°um
<T>::
s¸ìnToLoˇl
(c⁄° 
Vec2
<
T
> &
s
) const

457  
Vec2
<
T
>–
_À·
 + (
_right
-_À·Ë* (1.f+
s
.
x
) / 2.f,

458 
	g_bŸtom
 + (
	g_t›
-_bŸtomË* (1.f+
	gs
.
	gy
) / 2.f );

461 
	gãm∂©e
<
˛ass
 
	gT
>

462 
	gVec2
<
	gT
> 
	gFru°um
<T>::
loˇlToS¸ìn
(c⁄° 
Vec2
<
T
> &
p
) const

464 
T
 
À·PlusRight
 = 
_À·
 - 2 * 
p
.
x
 + 
_right
;

465 
T
 
	gÀ·MöusRight
 = 
_À·
-
_right
;

466 
T
 
	gbŸtomPlusT›
 = 
_bŸtom
 - 2 * 
p
.
y
 + 
_t›
;

467 
T
 
	gbŸtomMöusT›
 = 
_bŸtom
-
_t›
;

469 i‡((
abs
(
À·MöusRight
) < 1 &&

470 
abs
(
À·PlusRight
Ë> 
	glimôs
<
	gT
>::
max
(Ë*ábs(
À·MöusRight
)) ||

471 (
abs
(
bŸtomMöusT›
) < 1 &&

472 
abs
(
bŸtomPlusT›
Ë> 
limôs
<
T
>::
max
(Ë*ábs(
bŸtomMöusT›
)))

474 
throw
 
Iex
::
DivzîoExc


479  
	gVec2
<
	gT
>–
	gÀ·PlusRight
 / 
	gÀ·MöusRight
,

480 
	gbŸtomPlusT›
 / 
	gbŸtomMöusT›
 );

483 
	gãm∂©e
<
˛ass
 
	gT
>

484 
	gLöe3
<
	gT
> 
	gFru°um
<T>::
¥oje˘S¸ìnToRay
(c⁄° 
Vec2
<
T
> &
p
) const

486 
Vec2
<
T
> 
poöt
 = 
s¸ìnToLoˇl
(
p
);

487 i‡(
‹thogøphic
())

488  
	gLöe3
<
	gT
>–
	gVec3
<T>(
	gpoöt
.
	gx
,poöt.
	gy
, 0.0),

489 
	gVec3
<
	gT
>(
	gpoöt
.
	gx
,poöt.
	gy
,-
	g_√¨
));

491  
	gLöe3
<
	gT
>–
	gVec3
<T>(0, 0, 0), Vec3<T>(
	gpoöt
.
	gx
,poöt.
	gy
,-
	g_√¨
));

494 
	gãm∂©e
<
˛ass
 
	gT
>

495 
	gVec2
<
	gT
> 
	gFru°um
<T>::
¥oje˘PoötToS¸ìn
(c⁄° 
Vec3
<
T
> &
poöt
) const

497 i‡(
‹thogøphic
(Ë|| 
poöt
.
z
 == 0)

498  
loˇlToS¸ìn
–
Vec2
<
T
>–
poöt
.
x
,Öoöt.
y
 ) );

500  
loˇlToS¸ìn
–
Vec2
<
T
>–
poöt
.
x
 * 
_√¨
 / -poöt.
z
,

501 
poöt
.
y
 * 
_√¨
 / -poöt.
z
 ) );

504 
	gãm∂©e
<
˛ass
 
	gT
>

505 
T
 
	gFru°um
<
	gT
>::
	$ZToDïth
(
zvÆ
,
zmö
,
zmax
) const

507 
zdiff
 = 
zmax
 - 
zmö
;

509 i‡(
zdiff
 == 0)

511 
throw
 
Iex
::
DivzîoExc


515 i‡–
zvÆ
 > 
zmax
+1 ) zvÆ -
zdiff
;

517 
T
 
fzvÆ
 = (
	`T
(
zvÆ
Ë- T(
zmö
)Ë/ T(
zdiff
);

518  
	`n‹mÆizedZToDïth
(
fzvÆ
);

519 
	}
}

521 
	gãm∂©e
<
˛ass
 
	gT
>

522 
T
 
	gFru°um
<
	gT
>::
	$n‹mÆizedZToDïth
(
T
 
zvÆ
) const

524 
T
 
Zp
 = 
zvÆ
 * 2.0 - 1;

526 i‡–
_‹thogøphic
 )

528  -(
Zp
*(
_Ár
-
_√¨
) + (_far+_near))/2;

532 
T
 
ÁrTimesNór
 = 2 * 
_Ár
 * 
_√¨
;

533 
T
 
ÁrMöusNór
 = 
Zp
 * (
_Ár
 - 
_√¨
) - _far - _near;

535 i‡(
	`abs
(
ÁrMöusNór
) < 1 &&

536 
	`abs
(
ÁrTimesNór
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
ÁrMöusNór
))

538 
throw
 
Iex
::
DivzîoExc


544  
ÁrTimesNór
 / 
ÁrMöusNór
;

546 
	}
}

548 
	gãm∂©e
<
˛ass
 
	gT
>

549 
	gFru°um
<
	gT
>::
	$DïthToZ
(
T
 
dïth
,
zmö
,
zmax
) const

551 
zdiff
 = 
zmax
 - 
zmö
;

552 
T
 
ÁrMöusNór
 = 
_Ár
-
_√¨
;

554 i‡–
_‹thogøphic
 )

556 
T
 
ÁrPlusNór
 = 2*
dïth
 + 
_Ár
 + 
_√¨
;

558 i‡(
	`abs
(
ÁrMöusNór
) < 1 &&

559 
	`abs
(
ÁrPlusNór
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
ÁrMöusNór
))

561 
throw
 
Iex
::
DivzîoExc


566 
T
 
Zp
 = -
ÁrPlusNór
/
ÁrMöusNór
;

567  (0.5*(
Zp
+1)*
zdiff
Ë+ 
zmö
;

573 
T
 
ÁrTimesNór
 = 2*
_Ár
*
_√¨
;

574 i‡(
	`abs
(
dïth
) < 1 &&

575 
	`abs
(
ÁrTimesNór
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
dïth
))

577 
throw
 
Iex
::
DivzîoExc


582 
T
 
ÁrPlusNór
 = 
ÁrTimesNór
/
dïth
 + 
_Ár
 + 
_√¨
;

583 i‡(
	`abs
(
ÁrMöusNór
) < 1 &&

584 
	`abs
(
ÁrPlusNór
Ë> 
limôs
<
T
>::
	`max
(Ë*ábs(
ÁrMöusNór
))

586 
throw
 
Iex
::
DivzîoExc


591 
T
 
Zp
 = 
ÁrPlusNór
/
ÁrMöusNór
;

592  (0.5*(
Zp
+1)*
zdiff
Ë+ 
zmö
;

594 
	}
}

596 
	gãm∂©e
<
˛ass
 
	gT
>

597 
T
 
	gFru°um
<
	gT
>::
s¸ìnRadius
(c⁄° 
Vec3
<T> &
p
, T 
ødius
) const

609 i‡(
abs
(
p
.
z
Ë> 1 ||ábs(-
_√¨
Ë< 
	glimôs
<
	gT
>::
max
() *ábs(p.z))

611  
ødius
 * (-
_√¨
 / 
p
.
z
);

615 
throw
 
	gIex
::
DivzîoExc


620  
	gødius
 * (-
	g_√¨
 / 
	gp
.
	gz
);

623 
	gãm∂©e
<
˛ass
 
	gT
>

624 
T
 
	gFru°um
<
	gT
>::
w‹ldRadius
(c⁄° 
Vec3
<T> &
p
, T 
ødius
) const

626 i‡(
abs
(-
_√¨
Ë> 1 ||ábs(
p
.
z
Ë< 
	glimôs
<
	gT
>::
max
() *ábs(-_near))

628  
ødius
 * (
p
.
z
 / -
_√¨
);

632 
throw
 
	gIex
::
DivzîoExc


638 
	gãm∂©e
<
˛ass
 
	gT
>

639 
	gFru°um
<
	gT
>::
∂™es
(
Pœ√3
<
T
> 
p
[6])

646 
Vec3
<
T
> 
a
–
_À·
, 
_bŸtom
, -
_√¨
);

647 
	gVec3
<
	gT
> 
b
–
_À·
, 
_t›
, -
_√¨
);

648 
	gVec3
<
	gT
> 
c
–
_right
, 
_t›
, -
_√¨
);

649 
	gVec3
<
	gT
> 
d
–
_right
, 
_bŸtom
, -
_√¨
);

650 
	gVec3
<
	gT
> 
o
(0,0,0);

652 
	gp
[0].
£t
–
o
, 
c
, 
b
 );

653 
	gp
[1].
£t
–
o
, 
d
, 
c
 );

654 
	gp
[2].
£t
–
o
, 
a
, 
d
 );

655 
	gp
[3].
£t
–
o
, 
b
, 
a
 );

656 
	gp
[4].
£t
–
Vec3
<
T
>(0, 0, 1), -
_√¨
 );

657 
	gp
[5].
£t
–
Vec3
<
T
>(0, 0,-1), 
_Ár
 );

661 
	gãm∂©e
<
˛ass
 
	gT
>

662 
	gFru°um
<
	gT
>::
∂™es
(
Pœ√3
<
T
> 
p
[6], c⁄° 
M©rix44
<T> &
M
)

669 
	gVec3
<
	gT
> 
	ga
 = 
Vec3
<
T
>–
_À·
, 
	g_bŸtom
, -
	g_√¨
Ë* 
	gM
;

670 
	gVec3
<
	gT
> 
	gb
 = 
Vec3
<
T
>–
_À·
, 
	g_t›
, -
	g_√¨
Ë* 
	gM
;

671 
	gVec3
<
	gT
> 
	gc
 = 
Vec3
<
T
>–
_right
, 
	g_t›
, -
	g_√¨
Ë* 
	gM
;

672 
	gVec3
<
	gT
> 
	gd
 = 
Vec3
<
T
>–
_right
, 
	g_bŸtom
, -
	g_√¨
Ë* 
	gM
;

673 
	gs
 = 
_Ár
 / (
_√¨
);

674 
T
 
	gÁrLe·
 = (TË(
s
 * 
_À·
);

675 
T
 
	gÁrRight
 = (TË(
s
 * 
_right
);

676 
T
 
	gÁrT›
 = (TË(
s
 * 
_t›
);

677 
T
 
	gÁrBŸtom
 = (TË(
s
 * 
_bŸtom
);

678 
	gVec3
<
	gT
> 
	ge
 = 
Vec3
<
T
>–
ÁrLe·
, 
	gÁrBŸtom
, -
	g_Ár
Ë* 
	gM
;

679 
	gVec3
<
	gT
> 
	gf
 = 
Vec3
<
T
>–
ÁrLe·
, 
	gÁrT›
, -
	g_Ár
Ë* 
	gM
;

680 
	gVec3
<
	gT
> 
	gg
 = 
Vec3
<
T
>–
ÁrRight
, 
	gÁrT›
, -
	g_Ár
Ë* 
	gM
;

681 
	gVec3
<
	gT
> 
	go
 = 
Vec3
<
T
>(0,0,0Ë* 
	gM
;

683 
	gp
[0].
£t
–
o
, 
c
, 
b
 );

684 
	gp
[1].
£t
–
o
, 
d
, 
c
 );

685 
	gp
[2].
£t
–
o
, 
a
, 
d
 );

686 
	gp
[3].
£t
–
o
, 
b
, 
a
 );

687 
	gp
[4].
£t
–
a
, 
d
, 
c
 );

688 
	gp
[5].
£t
–
e
, 
f
, 
g
 );

691 
	gFru°um
<> 
	tFru°umf
;

692 
	gFru°um
<> 
	tFru°umd
;

	@shared/openexr-mac/include/OpenEXR/ImathFun.h

37 #i‚de‡
INCLUDED_IMATHFUN_H


38 
	#INCLUDED_IMATHFUN_H


	)

46 
	~"Im©hLimôs.h
"

48 
«me•a˚
 
	gIm©h
 {

50 
	gãm∂©e
 <
˛ass
 
	gT
>

51 
ölöe
 
T


52 
abs
 (
T
 
a
)

54  (
	ga
 > 0Ë?á : -
a
;

58 
	gãm∂©e
 <
˛ass
 
	gT
>

59 
ölöe
 

60 
sign
 (
T
 
a
)

62  (
	ga
 > 0)? 1 : ((
a
 < 0) ? -1 : 0);

66 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gQ
>

67 
ölöe
 
T


68 
ÀΩ
 (
T
 
a
, T 
b
, 
Q
 
t
)

70  (
	gT
Ë(
	ga
 + (
	gb
 -áË* 
	gt
);

74 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gQ
>

75 
ölöe
 
T


76 
uÀΩ
 (
T
 
a
, T 
b
, 
Q
 
t
)

78  (
	gT
Ë((
	ga
 > 
	gb
)? (®- (®- bË* 
	gt
): (
a
 + (
b
 -áË* 
t
));

82 
	gãm∂©e
 <
˛ass
 
	gT
>

83 
ölöe
 
T


84 
ÀΩÁ˘‹
(
T
 
m
, T 
a
, T 
b
)

96 
T
 
	gd
 = 
b
 - 
a
;

97 
T
 
	gn
 = 
m
 - 
a
;

99 i‡(
abs
(
d
Ë> 
T
(1Ë||ábs(
n
Ë< 
	glimôs
<
	gT
>::
max
() *ábs(d))

100  
n
 / 
d
;

102  
T
(0);

106 
	gãm∂©e
 <
˛ass
 
	gT
>

107 
ölöe
 
T


108 
˛amp
 (
T
 
a
, T 
l
, T 
h
)

110  (
	ga
 < 
	gl
)?Ü : ((
a
 > 
h
)? h :á);

114 
	gãm∂©e
 <
˛ass
 
	gT
>

115 
ölöe
 

116 
cmp
 (
T
 
a
, T 
b
)

118  
	gIm©h
::
sign
 (
a
 - 
b
);

122 
	gãm∂©e
 <
˛ass
 
	gT
>

123 
ölöe
 

124 
cm±
 (
T
 
a
, T 
b
, T 
t
)

126  (
	gIm©h
::
abs
 (
a
 - 
b
Ë<
t
)? 0 : 
cmp
 (a, b);

130 
	gãm∂©e
 <
˛ass
 
	gT
>

131 
ölöe
 
boﬁ


132 
iszîo
 (
T
 
a
, T 
t
)

134  (
	gIm©h
::
abs
 (
a
Ë<
t
) ? 1 : 0;

138 
	gãm∂©e
 <
˛ass
 
	gT1
, cœs†
	gT2
, cœs†
	gT3
>

139 
ölöe
 
boﬁ


140 
equÆ
 (
T1
 
a
, 
T2
 
b
, 
T3
 
t
)

142  
	gIm©h
::
abs
 (
a
 - 
b
Ë<
t
;

145 
	gãm∂©e
 <
˛ass
 
	gT
>

146 
ölöe
 

147 
Êo‹
 (
T
 
x
)

149  (
	gx
 >0)? (
x
): -((-x) + (-x > (-x)));

153 
	gãm∂©e
 <
˛ass
 
	gT
>

154 
ölöe
 

155 
˚û
 (
T
 
x
)

157  -
Êo‹
 (-
x
);

160 
	gãm∂©e
 <
˛ass
 
	gT
>

161 
ölöe
 

162 
åunc
 (
T
 
x
)

164  (
	gx
 >0Ë? (
x
) : -(-x);

176 
ölöe
 

177 
divs
 (
x
, 
y
)

179  (
	gx
 >0)? ((
y
 >0)? ( 
x
 / y): -( x / -y)):

180 ((
y
 >0)? -(-
x
 / y): (-x / -y));

184 
ölöe
 

185 
mods
 (
x
, 
y
)

187  (
	gx
 >0)? ((
y
 >0)? ( 
x
 % y): ( x % -y)):

188 ((
y
 >0)? -(-
x
 % y): -(-x % -y));

200 
ölöe
 

201 
divp
 (
x
, 
y
)

203  (
	gx
 >0)? ((
y
 >0)? ( 
x
 / y): -( x / -y)):

204 ((
y
 >0)? -((y-1-
x
) / y): ((-y-1-x) / -y));

208 
ölöe
 

209 
modp
 (
x
, 
y
)

211  
	gx
 - 
y
 * 
divp
 (
x
, y);

235 
succf
 (
f
);

236 
¥edf
 (
f
);

238 
succd
 (
d
);

239 
¥edd
 (
d
);

245 
ölöe
 
boﬁ


246 
föôef
 (
f
)

248 uni⁄ {
	gf
; 
	gi
;} 
	gu
;

249 
	gu
.
	gf
 = 
f
;

251  (
	gu
.
	gi
 & 0x7f800000) != 0x7f800000;

254 
ölöe
 
boﬁ


255 
föôed
 (
d
)

257 #i‡
ULONG_MAX
 == 18446744073709551615LU

258 
	tI¡64
;

260 
	tI¡64
;

263 uni⁄ {
	gd
; 
I¡64
 
	gi
;} 
	gu
;

264 
	gu
.
	gd
 = 
d
;

266  (
	gu
.
	gi
 & 0x7ff0000000000000LL) != 0x7ff0000000000000LL;

	@shared/openexr-mac/include/OpenEXR/ImathGL.h

36 #i‚de‡
INCLUDED_IMATHGL_H


37 
	#INCLUDED_IMATHGL_H


	)

39 
	~<GL/gl.h
>

41 
	~"Im©hVec.h
"

42 
	~"Im©hM©rix.h
"

43 
	~"IexM©hExc.h
"

44 
	~"Im©hFun.h
"

46 
ölöe
 
glVîãx
 ( c⁄° 
Im©h
::
V3f
 &
v
 ) { 
glVîãx3f
(v.
x
,v.
y
,v.
z
); }

47 
ölöe
 
glVîãx
 ( c⁄° 
Im©h
::
V2f
 &
v
 ) { 
glVîãx2f
(v.
x
,v.
y
); }

48 
ölöe
 
glN‹mÆ
 ( c⁄° 
Im©h
::
V3f
 &
n
 ) { 
glN‹mÆ3f
“.
x
,n.
y
,n.
z
); }

49 
ölöe
 
glCﬁ‹
 ( c⁄° 
Im©h
::
V3f
 &
c
 ) { 
glCﬁ‹3f
(c.
x
,c.
y
,c.
z
); }

50 
ölöe
 
glTøn¶©e
 ( c⁄° 
Im©h
::
V3f
 &
t
 ) { 
glTøn¶©ef
—.
x
,t.
y
,t.
z
); }

52 
ölöe
 
glTexCo‹d
–c⁄° 
Im©h
::
V2f
 &
t
 )

54 
glTexCo‹d2f
(
t
.
x
,t.
y
);

57 
ölöe
 
	$glDißbÀTextuª
()

59 
	`glA˘iveTextuª
(
GL_TEXTURE1
);

60 
	`glBödTextuª
(
GL_TEXTURE_2D
, 0);

61 
	`glDißbÀ
(
GL_TEXTURE_2D
);

63 
	`glA˘iveTextuª
(
GL_TEXTURE0
);

64 
	}
}

66 
	g«me•a˚
 {

68 c⁄° 
	gGL_FLOAT_MAX
 = 1.8e+19;

70 
ölöe
 
boﬁ


71 
badFlﬂt
 (
f
)

73  !
	gIm©h
::
föôef
 (
f
Ë|| f < - 
GL_FLOAT_MAX
 || f > GL_FLOAT_MAX;

78 
ölöe
 

79 
throwBadM©rix
 (c⁄° 
Im©h
::
M44f
& 
m
)

81 i‡(
badFlﬂt
 (
m
[0][0]) ||

82 
badFlﬂt
 (
m
[0][1]) ||

83 
badFlﬂt
 (
m
[0][2]) ||

84 
badFlﬂt
 (
m
[0][3]) ||

85 
badFlﬂt
 (
m
[1][0]) ||

86 
badFlﬂt
 (
m
[1][1]) ||

87 
badFlﬂt
 (
m
[1][2]) ||

88 
badFlﬂt
 (
m
[1][3]) ||

89 
badFlﬂt
 (
m
[2][0]) ||

90 
badFlﬂt
 (
m
[2][1]) ||

91 
badFlﬂt
 (
m
[2][2]) ||

92 
badFlﬂt
 (
m
[2][3]) ||

93 
badFlﬂt
 (
m
[3][0]) ||

94 
badFlﬂt
 (
m
[3][1]) ||

95 
badFlﬂt
 (
m
[3][2]) ||

96 
badFlﬂt
 (
m
[3][3]))

97 
throw
 
Iex
::
OvîÊowExc
 ("GL matrix overflow");

100 
ölöe
 

101 
glMu…M©rix
–c⁄° 
Im©h
::
M44f
& 
m
 )

103 
throwBadM©rix
 (
m
);

104 
glMu…M©rixf
–(
GLÊﬂt
*)
m
[0] );

107 
ölöe
 

108 
glMu…M©rix
–c⁄° 
Im©h
::
M44f
* 
m
 )

110 
throwBadM©rix
 (*
m
);

111 
glMu…M©rixf
–(
GLÊﬂt
*)(*
m
)[0] );

114 
ölöe
 

115 
glLﬂdM©rix
–c⁄° 
Im©h
::
M44f
& 
m
 )

117 
throwBadM©rix
 (
m
);

118 
glLﬂdM©rixf
–(
GLÊﬂt
*)
m
[0] );

121 
ölöe
 

122 
glLﬂdM©rix
–c⁄° 
Im©h
::
M44f
* 
m
 )

124 
throwBadM©rix
 (*
m
);

125 
glLﬂdM©rixf
–(
GLÊﬂt
*)(*
m
)[0] );

129 
«me•a˚
 
	gIm©h
 {

136 ˛as†
	cGLPushM©rix
 {

137 
	gpublic
:

139 
GLPushM©rix
 (Ë{ 
glPushM©rix
(); }

140 ~
GLPushM©rix
(Ë{ 
glP›M©rix
(); }

143 ˛as†
	cGLPushAârib
 {

144 
	gpublic
:

146 
GLPushAârib
 (
GLbôfõld
 
mask
Ë{ 
glPushAârib
 (mask); }

147 ~
GLPushAârib
(Ë{ 
glP›Aârib
(); }

150 ˛as†
	cGLBegö
 {

151 
	gpublic
:

153 
GLBegö
 (
GLíum
 
mode
Ë{ 
glBegö
 (mode); }

154 ~
GLBegö
(Ë{ 
glEnd
(); }

	@shared/openexr-mac/include/OpenEXR/ImathGLU.h

37 #i‚de‡
INCLUDED_IMATHGLU_H


38 
	#INCLUDED_IMATHGLU_H


	)

40 
	~<GL/gl.h
>

41 
	~<GL/glu.h
>

43 
	~"Im©hVec.h
"

45 
ölöe


47 
gluLookAt
(c⁄° 
Im©h
::
V3f
 &
pos
, c⁄° Im©h::V3‡&
öãª°
, c⁄° Im©h::V3‡&
up
)

49 
gluLookAt
(
pos
.
x
,Öos.
y
,Öos.
z
,

50 
öãª°
.
x
, i¡îe°.
y
, i¡îe°.
z
,

51 
up
.
x
, up.
y
, up.
z
);

	@shared/openexr-mac/include/OpenEXR/ImathHalfLimits.h

37 #i‚de‡
INCLUDED_IMATHHALFLIMITS_H


38 
	#INCLUDED_IMATHHALFLIMITS_H


	)

46 
	~"Im©hLimôs.h
"

47 
	~"hÆf.h
"

49 
«me•a˚
 
	gIm©h
 {

52 
	gãm∂©e
 <>

53 
	glimôs
 <
	ghÆf
>

55 
mö
(Ë{ -
	gHALF_MAX
;}

56 
max
(Ë{ 
	gHALF_MAX
;}

57 
smÆÀ°
(Ë{ 
	gHALF_MIN
;}

58 
ïsû⁄
(Ë{ 
	gHALF_EPSILON
;}

59 
boﬁ
 
isI¡egøl
(Ë{ 
	gÁl£
;}

60 
boﬁ
 
isSig√d
(Ë{ 
	gåue
;}

	@shared/openexr-mac/include/OpenEXR/ImathInterval.h

37 #i‚de‡
INCLUDED_IMATHINTERVAL_H


38 
	#INCLUDED_IMATHINTERVAL_H


	)

52 
	~"Im©hVec.h
"

54 
«me•a˚
 
	gIm©h
 {

57 
	gãm∂©e
 <
˛ass
 
	gT
>

58 ˛as†
	cI¡îvÆ


60 
	gpublic
:

66 
T
 
mö
;

67 
T
 
	gmax
;

73 
I¡îvÆ
();

74 
I¡îvÆ
(c⁄° 
T
& 
poöt
);

75 
I¡îvÆ
(c⁄° 
T
& 
möT
, c⁄° T& 
maxT
);

81 
boﬁ
 
	g›î©‹
 =(c⁄° 
I¡îvÆ
<
T
> &
§c
) const;

87 
makeEm±y
();

88 
exãndBy
(c⁄° 
T
& 
poöt
);

89 
exãndBy
(c⁄° 
I¡îvÆ
<
T
>& 
öãrvÆ
);

95 
T
 
size
() const;

96 
T
 
˚¡î
() const;

97 
boﬁ
 
öãr£˘s
(c⁄° 
T
 &
poöt
) const;

98 
boﬁ
 
öãr£˘s
(c⁄° 
I¡îvÆ
<
T
> &
öãrvÆ
) const;

104 
boﬁ
 
hasVﬁume
() const;

105 
boﬁ
 
isEm±y
() const;

114 
	gI¡îvÆ
 <> 
	tI¡îvÆf
;

115 
	gI¡îvÆ
 <> 
	tI¡îvÆd
;

116 
	gI¡îvÆ
 <> 
	tI¡îvÆs
;

117 
	gI¡îvÆ
 <> 
	tI¡îvÆi
;

124 
	gãm∂©e
 <
˛ass
 
	gT
>

125 
ölöe
 
	gI¡îvÆ
<
	gT
>::
	$I¡îvÆ
()

127 
	`makeEm±y
();

128 
	}
}

130 
	gãm∂©e
 <
˛ass
 
	gT
>

131 
ölöe
 
	gI¡îvÆ
<
	gT
>::
	$I¡îvÆ
(c⁄° 
T
& 
poöt
)

133 
mö
 = 
poöt
;

134 
max
 = 
poöt
;

135 
	}
}

137 
	gãm∂©e
 <
˛ass
 
	gT
>

138 
ölöe
 
	gI¡îvÆ
<
	gT
>::
	$I¡îvÆ
(c⁄° 
T
& 
möV
, c⁄° T& 
maxV
)

140 
mö
 = 
möV
;

141 
max
 = 
maxV
;

142 
	}
}

144 
	gãm∂©e
 <
˛ass
 
	gT
>

145 
ölöe
 
boﬁ


146 
	gI¡îvÆ
<
	gT
>::
›î©‹
 =(c⁄° 
I¡îvÆ
<
T
> &
§c
) const

148  (
mö
 =
§c
.mö && 
max
 == src.max);

151 
	gãm∂©e
 <
˛ass
 
	gT
>

152 
ölöe
 

153 
	gI¡îvÆ
<
	gT
>::
	$makeEm±y
()

155 
mö
 = 
limôs
<
T
>::
	`max
();

156 
max
 = 
limôs
<
T
>::
	`mö
();

157 
	}
}

159 
	gãm∂©e
 <
˛ass
 
	gT
>

160 
ölöe
 

161 
	gI¡îvÆ
<
	gT
>::
	$exãndBy
(c⁄° 
T
& 
poöt
)

163 i‡–
poöt
 < 
mö
 )

164 
mö
 = 
poöt
;

166 i‡–
poöt
 > 
max
 )

167 
max
 = 
poöt
;

168 
	}
}

170 
	gãm∂©e
 <
˛ass
 
	gT
>

171 
ölöe
 

172 
	gI¡îvÆ
<
	gT
>::
exãndBy
(c⁄° 
I¡îvÆ
<
T
>& 
öãrvÆ
)

174 i‡–
öãrvÆ
.
mö
 < min )

175 
mö
 = 
öãrvÆ
.min;

177 i‡–
	göãrvÆ
.
	gmax
 > max )

178 
	gmax
 = 
öãrvÆ
.
max
;

181 
	gãm∂©e
 <
˛ass
 
	gT
>

182 
ölöe
 
boﬁ


183 
	gI¡îvÆ
<
	gT
>::
	$öãr£˘s
(c⁄° 
T
& 
poöt
) const

185  
poöt
 >
mö
 &&Öoöà<
max
;

186 
	}
}

188 
	gãm∂©e
 <
˛ass
 
	gT
>

189 
ölöe
 
boﬁ


190 
	gI¡îvÆ
<
	gT
>::
öãr£˘s
(c⁄° 
I¡îvÆ
<
T
>& 
öãrvÆ
) const

192  
öãrvÆ
.
max
 >
mö
 && interval.min <= max;

195 
	gãm∂©e
 <
˛ass
 
	gT
>

196 
ölöe
 
T


197 
	gI¡îvÆ
<
	gT
>::
	$size
() const

199  
max
-
mö
;

200 
	}
}

202 
	gãm∂©e
 <
˛ass
 
	gT
>

203 
ölöe
 
T


204 
	gI¡îvÆ
<
	gT
>::
	$˚¡î
() const

206  (
max
+
mö
)/2;

207 
	}
}

209 
	gãm∂©e
 <
˛ass
 
	gT
>

210 
ölöe
 
boﬁ


211 
	gI¡îvÆ
<
	gT
>::
	$isEm±y
() const

213  
max
 < 
mö
;

214 
	}
}

216 
	gãm∂©e
 <
˛ass
 
	gT
>

217 
ölöe
 
boﬁ
 
	gI¡îvÆ
<
	gT
>::
	$hasVﬁume
() const

219  
max
 > 
mö
;

220 
	}
}

	@shared/openexr-mac/include/OpenEXR/ImathLimits.h

37 #i‚de‡
INCLUDED_IMATHLIMITS_H


38 
	#INCLUDED_IMATHLIMITS_H


	)

46 
	~<Êﬂt.h
>

47 
	~<limôs.h
>

53 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


54 #ifde‡
mö


55 #unde‡
mö


57 #ifde‡
max


58 #unde‡
max


62 
«me•a˚
 
	gIm©h
 {

115 
	gãm∂©e
 <
˛ass
 
	gT
> 
	slimôs


117 
T
 
mö
();

118 
T
 
max
();

119 
T
 
smÆÀ°
();

120 
T
 
ïsû⁄
();

121 
boﬁ
 
isI¡egøl
();

122 
boﬁ
 
isSig√d
();

130 
	gãm∂©e
 <>

131 
	glimôs
 <>

133 
mö
(Ë{ 
	gCHAR_MIN
;}

134 
max
(Ë{ 
	gCHAR_MAX
;}

135 
smÆÀ°
() { 1;}

136 
ïsû⁄
() { 1;}

137 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

138 
boﬁ
 
isSig√d
() { () ~0 < 0;}

141 
	gãm∂©e
 <>

142 
	glimôs
 <signed >

144 sig√d 
mö
(Ë{ 
	gSCHAR_MIN
;}

145 sig√d 
max
(Ë{ 
	gSCHAR_MAX
;}

146 sig√d 
smÆÀ°
() { 1;}

147 sig√d 
ïsû⁄
() { 1;}

148 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

149 
boﬁ
 
isSig√d
(Ë{ 
	gåue
;}

152 
	gãm∂©e
 <>

153 
	glimôs
 <>

155 
mö
() { 0;}

156 
max
(Ë{ 
	gUCHAR_MAX
;}

157 
smÆÀ°
() { 1;}

158 
ïsû⁄
() { 1;}

159 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

160 
boﬁ
 
isSig√d
(Ë{ 
	gÁl£
;}

163 
	gãm∂©e
 <>

164 
	glimôs
 <>

166 
mö
(Ë{ 
	gSHRT_MIN
;}

167 
max
(Ë{ 
	gSHRT_MAX
;}

168 
smÆÀ°
() { 1;}

169 
ïsû⁄
() { 1;}

170 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

171 
boﬁ
 
isSig√d
(Ë{ 
	gåue
;}

174 
	gãm∂©e
 <>

175 
	glimôs
 <>

177 
mö
() { 0;}

178 
max
(Ë{ 
	gUSHRT_MAX
;}

179 
smÆÀ°
() { 1;}

180 
ïsû⁄
() { 1;}

181 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

182 
boﬁ
 
isSig√d
(Ë{ 
	gÁl£
;}

185 
	gãm∂©e
 <>

186 
	glimôs
 <>

188 
mö
(Ë{ 
	gINT_MIN
;}

189 
max
(Ë{ 
	gINT_MAX
;}

190 
smÆÀ°
() { 1;}

191 
ïsû⁄
() { 1;}

192 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

193 
boﬁ
 
isSig√d
(Ë{ 
	gåue
;}

196 
	gãm∂©e
 <>

197 
	glimôs
 <>

199 
mö
() { 0;}

200 
max
(Ë{ 
	gUINT_MAX
;}

201 
smÆÀ°
() { 1;}

202 
ïsû⁄
() { 1;}

203 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

204 
boﬁ
 
isSig√d
(Ë{ 
	gÁl£
;}

207 
	gãm∂©e
 <>

208 
	glimôs
 <>

210 
mö
(Ë{ 
	gLONG_MIN
;}

211 
max
(Ë{ 
	gLONG_MAX
;}

212 
smÆÀ°
() { 1;}

213 
ïsû⁄
() { 1;}

214 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

215 
boﬁ
 
isSig√d
(Ë{ 
	gåue
;}

218 
	gãm∂©e
 <>

219 
	glimôs
 <>

221 
mö
() { 0;}

222 
max
(Ë{ 
	gULONG_MAX
;}

223 
smÆÀ°
() { 1;}

224 
ïsû⁄
() { 1;}

225 
boﬁ
 
isI¡egøl
(Ë{ 
	gåue
;}

226 
boﬁ
 
isSig√d
(Ë{ 
	gÁl£
;}

229 
	gãm∂©e
 <>

230 
	glimôs
 <>

232 
mö
(Ë{ -
	gFLT_MAX
;}

233 
max
(Ë{ 
	gFLT_MAX
;}

234 
smÆÀ°
(Ë{ 
	gFLT_MIN
;}

235 
ïsû⁄
(Ë{ 
	gFLT_EPSILON
;}

236 
boﬁ
 
isI¡egøl
(Ë{ 
	gÁl£
;}

237 
boﬁ
 
isSig√d
(Ë{ 
	gåue
;}

240 
	gãm∂©e
 <>

241 
	glimôs
 <>

243 
mö
(Ë{ -
	gDBL_MAX
;}

244 
max
(Ë{ 
	gDBL_MAX
;}

245 
smÆÀ°
(Ë{ 
	gDBL_MIN
;}

246 
ïsû⁄
(Ë{ 
	gDBL_EPSILON
;}

247 
boﬁ
 
isI¡egøl
(Ë{ 
	gÁl£
;}

248 
boﬁ
 
isSig√d
(Ë{ 
	gåue
;}

251 
	gãm∂©e
 <>

252 
	glimôs
 <>

254 
mö
(Ë{ -
	gLDBL_MAX
;}

255 
max
(Ë{ 
	gLDBL_MAX
;}

256 
smÆÀ°
(Ë{ 
	gLDBL_MIN
;}

257 
ïsû⁄
(Ë{ 
	gLDBL_EPSILON
;}

258 
boﬁ
 
isI¡egøl
(Ë{ 
	gÁl£
;}

259 
boﬁ
 
isSig√d
(Ë{ 
	gåue
;}

	@shared/openexr-mac/include/OpenEXR/ImathLine.h

37 #i‚de‡
INCLUDED_IMATHLINE_H


38 
	#INCLUDED_IMATHLINE_H


	)

46 
	~"Im©hVec.h
"

47 
	~"Im©hLimôs.h
"

48 
	~"Im©hM©rix.h
"

50 
«me•a˚
 
	gIm©h
 {

53 
	gãm∂©e
 <
˛ass
 
	gT
>

54 ˛as†
	cLöe3


56 
	gpublic
:

58 
Vec3
<
T
> 
pos
;

59 
	gVec3
<
	gT
> 
	gdú
;

65 
Löe3
() {}

66 
Löe3
(c⁄° 
Vec3
<
T
>& 
poöt1
, c⁄° Vec3<T>& 
poöt2
);

72 
£t
(c⁄° 
Vec3
<
T
>& 
poöt1
,

73 c⁄° 
Vec3
<
T
>& 
poöt2
);

79 
	gVec3
<
	gT
> 
›î©‹
(Ë(
T
 
	g∑ømëî
) const;

85 
T
 
di°™˚To
(c⁄° 
Vec3
<T>& 
poöt
) const;

86 
T
 
di°™˚To
(c⁄° 
Löe3
<T>& 
löe
) const;

87 
	gVec3
<
	gT
> 
˛o£°PoötTo
(c⁄° 
Vec3
<
T
>& 
poöt
) const;

88 
	gVec3
<
	gT
> 
˛o£°PoötTo
(c⁄° 
Löe3
<
T
>& 
löe
) const;

96 
	gLöe3
<> 
	tLöe3f
;

97 
	gLöe3
<> 
	tLöe3d
;

104 
	gãm∂©e
 <
˛ass
 
	gT
>

105 
ölöe
 
	gLöe3
<
	gT
>::
Löe3
(c⁄° 
Vec3
<
T
> &
p0
, c⁄° Vec3<T> &
p1
)

107 
£t
(
p0
,
p1
);

110 
	gãm∂©e
 <
˛ass
 
	gT
>

111 
ölöe
 
	gLöe3
<
	gT
>::
£t
(c⁄° 
Vec3
<
T
> &
p0
, c⁄° Vec3<T> &
p1
)

113 
	gpos
 = 
p0
; 
	gdú
 = 
p1
-p0;

114 
	gdú
.
n‹mÆize
();

117 
	gãm∂©e
 <
˛ass
 
	gT
>

118 
ölöe
 
	gVec3
<
	gT
> 
	gLöe3
<T>::
	$›î©‹
()(
T
 
∑ømëî
) const

120  
pos
 + 
dú
 * 
∑ømëî
;

121 
	}
}

123 
	gãm∂©e
 <
˛ass
 
	gT
>

124 
ölöe
 
T
 
	gLöe3
<
	gT
>::
di°™˚To
(c⁄° 
Vec3
<T>& 
poöt
) const

126  (
˛o£°PoötTo
(
poöt
)-poöt).
Àngth
();

129 
	gãm∂©e
 <
˛ass
 
	gT
>

130 
ölöe
 
	gVec3
<
	gT
> 
	gLöe3
<T>::
˛o£°PoötTo
(c⁄° 
Vec3
<
T
>& 
poöt
) const

132  ((
poöt
 - 
pos
Ë^ 
dú
) * dir +Öos;

135 
	gãm∂©e
 <
˛ass
 
	gT
>

136 
ölöe
 
T
 
	gLöe3
<
	gT
>::
di°™˚To
(c⁄° 
Löe3
<T>& 
löe
) const

138 
T
 
d
 = (
dú
 % 
löe
.dúË^ (löe.
pos
 -Öos);

139  (
	gd
 >0)? 
d
: -d;

142 
	gãm∂©e
 <
˛ass
 
	gT
>

143 
ölöe
 
	gVec3
<
	gT
>

144 
	gLöe3
<
	gT
>::
˛o£°PoötTo
(c⁄° 
Löe3
<
T
>& 
löe
) const

148 
Vec3
<
T
> 
posLpos
 = 
pos
 - 
löe
.pos ;

149 
T
 
	gc
 = 
dú
 ^ 
posLpos
;

150 
T
 
	ga
 = 
löe
.
dú
 ^ dir;

151 
T
 
	gf
 = 
löe
.
dú
 ^ 
posLpos
 ;

152 
T
 
	gnum
 = 
c
 - 
a
 * 
f
;

154 
T
 
	gdíom
 = 
a
*a - 1;

156 
T
 
	gabsDíom
 = ((
díom
 >= 0)? denom: -denom);

158 i‡(
	gabsDíom
 < 1)

160 
T
 
	gabsNum
 = ((
num
 >= 0)?Çum: -num);

162 i‡(
	gabsNum
 >
absDíom
 * 
limôs
<
T
>::
max
())

163  
pos
;

166  
	gpos
 + 
	gdú
 * (
	gnum
 / 
	gdíom
);

169 
	gãm∂©e
<
˛ass
 
	gT
>

170 
	g°d
::
o°ªam
& 
›î©‹
<< (
°d
::o°ªam &
o
, c⁄° 
	gLöe3
<
	gT
> &
	glöe
)

172  
	go
 << "(" << 
	glöe
.
	gpos
 << ", " <<Üöe.
	gdú
 << ")";

175 
	gãm∂©e
<
˛ass
 
	gS
, cœs†
	gT
>

176 
ölöe
 
	gLöe3
<
	gS
> 
	g›î©‹
 * (c⁄° Löe3<S> &
	glöe
, c⁄° 
	gM©rix44
<
	gT
> &
	gM
)

178  
	gLöe3
<
	gS
>–
	glöe
.
pos
 * 
	gM
, (löe.
	gpos
 +Üöe.
	gdú
) * M );

	@shared/openexr-mac/include/OpenEXR/ImathLineAlgo.h

37 #i‚de‡
INCLUDED_IMATHLINEALGO_H


38 
	#INCLUDED_IMATHLINEALGO_H


	)

80 
	~"Im©hLöe.h
"

81 
	~"Im©hVecAlgo.h
"

83 
«me•a˚
 
	gIm©h
 {

86 
	gãm∂©e
 <
˛ass
 
	gT
>

87 
boﬁ
 
˛o£°Poöts
(c⁄° 
Löe3
<
T
>& 
löe1
,

88 c⁄° 
Löe3
<
T
>& 
löe2
,

89 
Vec3
<
T
>& 
poöt1
,

90 
Vec3
<
T
>& 
poöt2
)

98 
T
 
	gA
 = 
löe1
.
dú
 ^ 
löe2
.dir;

100 i‡–
	gA
 =1 )  
Ál£
;

102 
T
 
	gdíom
 = 
A
 * A - 1;

104 
T
 
	gB
 = (
löe1
.
dú
 ^Üöe1.
pos
Ë- (löe1.dú ^ 
löe2
.pos);

105 
T
 
	gC
 = (
löe2
.
dú
 ^ 
löe1
.
pos
) - (line2.dir ^Üine2.pos);

107 
	gpoöt1
 = 
löe1
(–
B
 - 
A
 * 
C
 ) / 
díom
);

108 
	gpoöt2
 = 
löe2
(–
B
 * 
A
 - 
C
 ) / 
díom
);

110  
	gåue
;

115 
	gãm∂©e
 <
˛ass
 
	gT
>

116 
boﬁ
 
öãr£˘
–c⁄° 
Löe3
<
T
> &
löe
,

117 c⁄° 
Vec3
<
T
> &
v0
,

118 c⁄° 
Vec3
<
T
> &
v1
,

119 c⁄° 
Vec3
<
T
> &
v2
,

120 
Vec3
<
T
> &
±
,

121 
Vec3
<
T
> &
b¨y˚¡ric
,

122 
boﬁ
 &
‰⁄t
)

138 c⁄° 
	gEPSILON
 = 1e-6;

140 
T
 
	gd
, 
	gt
, 
	gd01
, 
	gd12
, 
	gd20
, 
	gvd0
, 
	gvd1
, 
	gvd2
, 
	gax
, 
	gay
, 
	gaz
, 
	g£n£
;

141 
	gVec3
<
	gT
> 
	gv01
, 
	gv12
, 
	gv20
, 
	gc
;

142 
	gaxis0
, 
	gaxis1
;

145 
	gv01
 = 
v1
 - 
v0
;

146 
	gv12
 = 
v2
 - 
v1
;

149 
	gc
 = 
v12
.
¸oss
(
v01
);

151 
	gd
 = 
c
.
Àngth
();

152 if(
	gd
 < 
	gEPSILON
)

153  
	gÁl£
;

154 
	gc
 = 
c
 * (1. / 
d
);

158 
	gd
 = 
löe
.
dú
.
dŸ
(
c
);

159 i‡(
	gd
 < 
	gEPSILON
 && d > -EPSILON)

160  
	gÁl£
;

162 
	gt
 = (
v0
 - 
löe
.
pos
).
dŸ
(
c
Ë/ 
d
;

164 if(
	gt
 < 0)

165  
	gÁl£
;

168 
	g±
 = 
löe
.
pos
 + 
t
 *Üöe.
dú
;

173 
	gax
 = 
c
[0] < 0 ? -c[0] : c[0];

174 
	gay
 = 
c
[1] < 0 ? -c[1] : c[1];

175 
	gaz
 = 
c
[2] < 0 ? -c[2] : c[2];

177 if(
	gax
 > 
	gay
 &&áx > 
	gaz
)

181 
	gaxis0
 = 1;

182 
	gaxis1
 = 2;

183 
	g£n£
 = 
c
[0] < 0 ? -1 : 1;

185 if(
	gay
 > 
	gaz
)

187 
	gaxis0
 = 2;

188 
	gaxis1
 = 0;

189 
	g£n£
 = 
c
[1] < 0 ? -1 : 1;

193 
	gaxis0
 = 0;

194 
	gaxis1
 = 1;

195 
	g£n£
 = 
c
[2] < 0 ? -1 : 1;

199 
	gd01
 = 
£n£
 * ((
±
[
axis0
] - 
v0
[axis0]Ë* 
v01
[
axis1
]

200 - (
±
[
axis1
] - 
v0
[axis1]Ë* 
v01
[
axis0
]);

202 if(
	gd01
 < 0Ë 
	gÁl£
;

204 
	gvd2
 = 
£n£
 * ((
v2
[
axis0
] - 
v0
[axis0]Ë* 
v01
[
axis1
]

205 - (
v2
[
axis1
] - 
v0
[axis1]Ë* 
v01
[
axis0
]);

207 if(
	gd01
 > 
	gvd2
Ë 
	gÁl£
;

210 
	gd12
 = 
£n£
 * ((
±
[
axis0
] - 
v1
[axis0]Ë* 
v12
[
axis1
]

211 - (
±
[
axis1
] - 
v1
[axis1]Ë* 
v12
[
axis0
]);

213 if(
	gd12
 < 0Ë 
	gÁl£
;

215 
	gvd0
 = 
£n£
 * ((
v0
[
axis0
] - 
v1
[axis0]Ë* 
v12
[
axis1
]

216 - (
v0
[
axis1
] - 
v1
[axis1]Ë* 
v12
[
axis0
]);

218 if(
	gd12
 > 
	gvd0
Ë 
	gÁl£
;

221 
	gv20
 = 
v0
 - 
v2
;

222 
	gd20
 = 
£n£
 * ((
±
[
axis0
] - 
v2
[axis0]Ë* 
v20
[
axis1
]

223 - (
±
[
axis1
] - 
v2
[axis1]Ë* 
v20
[
axis0
]);

225 if(
	gd20
 < 0Ë 
	gÁl£
;

227 
	gvd1
 = 
£n£
 * ((
v1
[
axis0
] - 
v2
[axis0]Ë* 
v20
[
axis1
]

228 - (
v1
[
axis1
] - 
v2
[axis1]Ë* 
v20
[
axis0
]);

230 if(
	gd20
 > 
	gvd1
Ë 
	gÁl£
;

235 
	gb¨y˚¡ric
 = 
Vec3
<
T
>(
d12
 / 
vd0
, 
	gd20
 / 
	gvd1
, 
	gd01
 / 
	gvd2
);

236 
	g‰⁄t
 = 
löe
.
dú
.
dŸ
(
c
) < 0;

238  
	gåue
;

241 
	gãm∂©e
 <
˛ass
 
	gT
>

242 
	gVec3
<
	gT
>

243 
˛o£°Vîãx
(c⁄° 
Vec3
<
T
> &
v0
,

244 c⁄° 
Vec3
<
T
> &
v1
,

245 c⁄° 
Vec3
<
T
> &
v2
,

246 c⁄° 
Löe3
<
T
> &
l
)

248 
	gVec3
<
	gT
> 
	g√¨e°
 = 
v0
;

249 
T
 
	g√¨dŸ
 = (
v0
 - 
l
.
˛o£°PoötTo
(v0)).
Àngth2
();

251 
T
 
	gtmp
 = (
v1
 - 
l
.
˛o£°PoötTo
(v1)).
Àngth2
();

253 i‡(
	gtmp
 < 
	g√¨dŸ
)

255 
	g√¨dŸ
 = 
tmp
;

256 
	g√¨e°
 = 
v1
;

259 
	gtmp
 = (
v2
 - 
l
.
˛o£°PoötTo
(v2)).
Àngth2
();

260 i‡(
	gtmp
 < 
	g√¨dŸ
)

262 
	g√¨dŸ
 = 
tmp
;

263 
	g√¨e°
 = 
v2
;

266  
	g√¨e°
;

269 
	gãm∂©e
 <
˛ass
 
	gT
>

270 
	gVec3
<
	gT
>

271 
√¨e°PoötOnTrüngÀ
(c⁄° 
Vec3
<
T
> &
v0
,

272 c⁄° 
Vec3
<
T
> &
v1
,

273 c⁄° 
Vec3
<
T
> &
v2
,

274 c⁄° 
Löe3
<
T
> &
l
)

276 
	gVec3
<
	gT
> 
	g±
, 
	gb¨y˚¡ric
;

277 
boﬁ
 
	g‰⁄t
;

279 i‡(
öãr£˘
 (
l
, 
v0
, 
v1
, 
v2
, 
±
, 
b¨y˚¡ric
, 
‰⁄t
))

280  
	g±
;

299  
˛o£°Vîãx
(
v0
, 
v1
, 
v2
, 
l
);

302 
	gãm∂©e
 <
˛ass
 
	gT
>

303 
	gVec3
<
	gT
>

304 
rŸ©ePoöt
(c⁄° 
Vec3
<
T
> 
p
, 
Löe3
<T> 
l
, T 
™gÀ
)

315 
	gVec3
<
	gT
> 
	gq
 = 
l
.
˛o£°PoötTo
(
p
);

316 
	gVec3
<
	gT
> 
	gx
 = 
p
 - 
q
;

317 
T
 
	gødius
 = 
x
.
Àngth
();

319 
	gx
.
n‹mÆize
();

320 
	gVec3
<
	gT
> 
	gy
 = (
x
 % 
l
.
dú
).
n‹mÆize
();

322 
T
 
	gcoßngÀ
 = 
M©h
<T>::
cos
(
™gÀ
);

323 
T
 
	gsö™gÀ
 = 
M©h
<T>::
sö
(
™gÀ
);

325 
	gVec3
<
	gT
> 
	gr
 = 
q
 + 
x
 * 
ødius
 * 
coßngÀ
 + 
y
 *Ñadiu†* 
sö™gÀ
;

327  
	gr
;

	@shared/openexr-mac/include/OpenEXR/ImathMath.h

37 #i‚de‡
INCLUDED_IMATHMATH_H


38 
	#INCLUDED_IMATHMATH_H


	)

83 
	~"Im©hPœtf‹m.h
"

84 
	~<m©h.h
>

86 
«me•a˚
 
	gIm©h
 {

89 
	gãm∂©e
 <
˛ass
 
	gT
>

90 
	sM©h


92 
T
 
acos
 (T 
x
) { ::acos ((x));}

93 
T
 
asö
 (T 
x
) { ::asin ((x));}

94 
T
 
©™
 (T 
x
) { ::atan ((x));}

95 
T
 
©™2
 (T 
x
, T 
y
) { ::atan2 ((x), (y));}

96 
T
 
cos
 (T 
x
) { ::cos ((x));}

97 
T
 
sö
 (T 
x
) { ::sin ((x));}

98 
T
 
èn
 (T 
x
) { ::tan ((x));}

99 
T
 
cosh
 (T 
x
) { ::cosh ((x));}

100 
T
 
söh
 (T 
x
) { ::sinh ((x));}

101 
T
 
ènh
 (T 
x
) { ::tanh ((x));}

102 
T
 
exp
 (T 
x
) { ::exp ((x));}

103 
T
 
log
 (T 
x
) { ::log ((x));}

104 
T
 
log10
 (T 
x
) { ::log10 ((x));}

105 
T
 
modf
 (T 
x
, T *
ùå
)

107 
	givÆ
;

108 
T
 
rvÆ
–::
modf
 ((
x
),&
ivÆ
));

109 *
	gùå
 = 
ivÆ
;

110  
	grvÆ
;

112 
T
 
pow
 (T 
x
, T 
y
) { ::pow ((x), (y));}

113 
T
 
sqπ
 (T 
x
) { ::sqrt ((x));}

114 
T
 
˚û
 (T 
x
) { ::ceil ((x));}

115 
T
 
Ábs
 (T 
x
) { ::fabs ((x));}

116 
T
 
Êo‹
 (T 
x
) { ::floor ((x));}

117 
T
 
fmod
 (T 
x
, T 
y
) { ::fmod ((x), (y));}

118 
T
 
hypŸ
 (T 
x
, T 
y
) { ::hypot ((x), (y));}

122 
	gãm∂©e
 <>

123 
	gM©h
<>

125 
acos
 (
x
Ë{ ::
acosf
 (x);}

126 
asö
 (
x
Ë{ ::
asöf
 (x);}

127 
©™
 (
x
Ë{ ::
©™f
 (x);}

128 
©™2
 (
x
, 
y
Ë{ ::
©™2f
 (x, y);}

129 
cos
 (
x
Ë{ ::
cosf
 (x);}

130 
sö
 (
x
Ë{ ::
söf
 (x);}

131 
èn
 (
x
Ë{ ::
ènf
 (x);}

132 
cosh
 (
x
Ë{ ::
coshf
 (x);}

133 
söh
 (
x
Ë{ ::
söhf
 (x);}

134 
ènh
 (
x
Ë{ ::
ènhf
 (x);}

135 
exp
 (
x
Ë{ ::
expf
 (x);}

136 
log
 (
x
Ë{ ::
logf
 (x);}

137 
log10
 (
x
Ë{ ::
log10f
 (x);}

138 
modf
 (
x
, *
y
Ë{ ::
modff
 (x, y);}

139 
pow
 (
x
, 
y
Ë{ ::
powf
 (x, y);}

140 
sqπ
 (
x
Ë{ ::
sqπf
 (x);}

141 
˚û
 (
x
Ë{ ::
˚ûf
 (x);}

142 
Ábs
 (
x
Ë{ ::
Ábsf
 (x);}

143 
Êo‹
 (
x
Ë{ ::
Êo‹f
 (x);}

144 
fmod
 (
x
, 
y
Ë{ ::
fmodf
 (x, y);}

145 #i‡!
deföed
(
_MSC_VER
)

146 
hypŸ
 (
x
, 
y
Ë{ ::
hypŸf
 (x, y);}

148 
hypŸ
 (
x
, 
y
Ë{ ::
sqπf
(x*x + y*y);}

172 
	gãm∂©e
 <
˛ass
 
	gT
>

173 
ölöe
 
boﬁ


174 
equÆWôhAbsEº‹
 (
T
 
x1
, T 
x2
, T 
e
)

176  ((
	gx1
 > 
	gx2
)? x1 - x2: 
x2
 - 
x1
Ë<
e
;

180 
	gãm∂©e
 <
˛ass
 
	gT
>

181 
ölöe
 
boﬁ


182 
equÆWôhRñEº‹
 (
T
 
x1
, T 
x2
, T 
e
)

184  ((
	gx1
 > 
	gx2
)? x1 - x2: 
x2
 - 
x1
Ë<
e
 * ((x1 > 0)? x1: -x1);

	@shared/openexr-mac/include/OpenEXR/ImathMatrix.h

37 #i‚de‡
INCLUDED_IMATHMATRIX_H


38 
	#INCLUDED_IMATHMATRIX_H


	)

46 
	~"Im©hPœtf‹m.h
"

47 
	~"Im©hFun.h
"

48 
	~"Im©hExc.h
"

49 
	~"Im©hVec.h
"

50 
	~"Im©hShór.h
"

52 
	~<io°ªam
>

53 
	~<iom™ù
>

56 
«me•a˚
 
	gIm©h
 {

59 
	gãm∂©e
 <
˛ass
 
	gT
> cœs†
	cM©rix33


61 
	gpublic
:

67 
T
 
x
[3][3];

69 
T
 * 
	g›î©‹
 [] (
	gi
);

70 c⁄° 
T
 * 
	g›î©‹
 [] (
	gi
) const;

77 
M©rix33
 ();

82 
M©rix33
 (
T
 
a
);

87 
M©rix33
 (c⁄° 
T
 
a
[3][3]);

92 
M©rix33
 (
T
 
a
, T 
b
, T 
c
, T 
d
, T 
e
, T 
f
, T 
g
, T 
h
, T 
i
);

103 
M©rix33
 (c⁄° M©rix33 &
v
);

105 c⁄° 
	gM©rix33
 & 
	g›î©‹
 = (c⁄° 
M©rix33
 &
v
);

106 c⁄° 
	gM©rix33
 & 
	g›î©‹
 = (
T
 
a
);

113 
T
 * 
gëVÆue
 ();

114 c⁄° 
T
 * 
gëVÆue
 () const;

116 
	gãm∂©e
 <
˛ass
 
	gS
>

117 
gëVÆue
 (
M©rix33
<
S
> &
v
) const;

118 
	gãm∂©e
 <
˛ass
 
	gS
>

119 
	gM©rix33
 & 
£tVÆue
 (c⁄° 
M©rix33
<
S
> &
v
);

121 
	gãm∂©e
 <
˛ass
 
	gS
>

122 
	gM©rix33
 & 
£tTheM©rix
 (c⁄° 
M©rix33
<
S
> &
v
);

129 
makeIdítôy
();

136 
boﬁ
 
	g›î©‹
 =(c⁄° 
M©rix33
 &
v
) const;

137 
boﬁ
 
	g›î©‹
 !(c⁄° 
M©rix33
 &
v
) const;

157 
boﬁ
 
equÆWôhAbsEº‹
 (c⁄° 
M©rix33
<
T
> &
v
, T 
e
) const;

158 
boﬁ
 
equÆWôhRñEº‹
 (c⁄° 
M©rix33
<
T
> &
v
, T 
e
) const;

165 c⁄° 
	gM©rix33
 & 
	g›î©‹
 +(c⁄° 
M©rix33
 &
v
);

166 c⁄° 
	gM©rix33
 & 
	g›î©‹
 +(
T
 
a
);

167 
M©rix33
 
	g›î©‹
 + (c⁄° 
	gM©rix33
 &
	gv
) const;

174 c⁄° 
	gM©rix33
 & 
	g›î©‹
 -(c⁄° 
M©rix33
 &
v
);

175 c⁄° 
	gM©rix33
 & 
	g›î©‹
 -(
T
 
a
);

176 
M©rix33
 
	g›î©‹
 - (c⁄° 
	gM©rix33
 &
	gv
) const;

183 
M©rix33
 
	g›î©‹
 - () const;

184 c⁄° 
	gM©rix33
 & 
√g©e
 ();

191 c⁄° 
	gM©rix33
 & 
	g›î©‹
 *(
T
 
a
);

192 
M©rix33
 
	g›î©‹
 * (
T
 
	ga
) const;

199 c⁄° 
	gM©rix33
 & 
	g›î©‹
 *(c⁄° 
M©rix33
 &
v
);

200 
M©rix33
 
	g›î©‹
 * (c⁄° 
	gM©rix33
 &
	gv
) const;

208 
	gãm∂©e
 <
˛ass
 
	gS
>

209 
mu…VecM©rix
(c⁄° 
Vec2
<
S
> &
§c
, Vec2<S> &
d°
) const;

211 
	gãm∂©e
 <
˛ass
 
	gS
>

212 
mu…DúM©rix
(c⁄° 
Vec2
<
S
> &
§c
, Vec2<S> &
d°
) const;

219 c⁄° 
	gM©rix33
 & 
	g›î©‹
 /(
T
 
a
);

220 
M©rix33
 
	g›î©‹
 / (
T
 
	ga
) const;

227 c⁄° 
	gM©rix33
 & 
å™•o£
 ();

228 
M©rix33
 
å™•o£d
 () const;

245 c⁄° 
	gM©rix33
 & 
övît
 (
boﬁ
 
sögExc
 = 
Ál£
)

246 
throw
 (
Iex
::
M©hExc
);

248 
	gM©rix33
<
	gT
> 
övî£
 (
boﬁ
 
sögExc
 = 
Ál£
) const

249 
throw
 (
Iex
::
M©hExc
);

251 c⁄° 
	gM©rix33
 & 
gjInvît
 (
boﬁ
 
sögExc
 = 
Ál£
)

252 
throw
 (
Iex
::
M©hExc
);

254 
	gM©rix33
<
	gT
> 
gjInvî£
 (
boﬁ
 
sögExc
 = 
Ál£
) const

255 
throw
 (
Iex
::
M©hExc
);

262 
	gãm∂©e
 <
˛ass
 
	gS
>

263 c⁄° 
	gM©rix33
 & 
£tRŸ©i⁄
 (
S
 
r
);

270 
	gãm∂©e
 <
˛ass
 
	gS
>

271 c⁄° 
	gM©rix33
 & 
rŸ©e
 (
S
 
r
);

278 c⁄° 
	gM©rix33
 & 
£tSˇÀ
 (
T
 
s
);

285 
	gãm∂©e
 <
˛ass
 
	gS
>

286 c⁄° 
	gM©rix33
 & 
£tSˇÀ
 (c⁄° 
Vec2
<
S
> &
s
);

293 
	gãm∂©e
 <
˛ass
 
	gS
>

294 c⁄° 
	gM©rix33
 & 
sˇÀ
 (c⁄° 
Vec2
<
S
> &
s
);

301 
	gãm∂©e
 <
˛ass
 
	gS
>

302 c⁄° 
	gM©rix33
 & 
£tTøn¶©i⁄
 (c⁄° 
Vec2
<
S
> &
t
);

309 
	gVec2
<
	gT
> 
å™¶©i⁄
 () const;

316 
	gãm∂©e
 <
˛ass
 
	gS
>

317 c⁄° 
	gM©rix33
 & 
å™¶©e
 (c⁄° 
Vec2
<
S
> &
t
);

324 
	gãm∂©e
 <
˛ass
 
	gS
>

325 c⁄° 
	gM©rix33
 & 
£tShór
 (c⁄° 
S
 &
h
);

333 
	gãm∂©e
 <
˛ass
 
	gS
>

334 c⁄° 
	gM©rix33
 & 
£tShór
 (c⁄° 
Vec2
<
S
> &
h
);

341 
	gãm∂©e
 <
˛ass
 
	gS
>

342 c⁄° 
	gM©rix33
 & 
shór
 (c⁄° 
S
 &
xy
);

350 
	gãm∂©e
 <
˛ass
 
	gS
>

351 c⁄° 
	gM©rix33
 & 
shór
 (c⁄° 
Vec2
<
S
> &
h
);

358 
T
 
ba£Ty≥Mö
(Ë{ 
	glimôs
<
	gT
>::
mö
();}

359 
T
 
ba£Ty≥Max
(Ë{ 
	glimôs
<
	gT
>::
max
();}

360 
T
 
ba£Ty≥SmÆÀ°
(Ë{ 
	glimôs
<
	gT
>::
smÆÀ°
();}

361 
T
 
ba£Ty≥Epsû⁄
(Ë{ 
	glimôs
<
	gT
>::
ïsû⁄
();}

365 
	gãm∂©e
 <
˛ass
 
	gT
> cœs†
	cM©rix44


367 
	gpublic
:

373 
T
 
x
[4][4];

375 
T
 * 
	g›î©‹
 [] (
	gi
);

376 c⁄° 
T
 * 
	g›î©‹
 [] (
	gi
) const;

383 
M©rix44
 ();

389 
M©rix44
 (
T
 
a
);

395 
M©rix44
 (c⁄° 
T
 
a
[4][4]) ;

401 
M©rix44
 (
T
 
a
, T 
b
, T 
c
, T 
d
, T 
e
, T 
f
, T 
g
, T 
h
,

402 
T
 
i
, T 
j
, T 
k
, T 
l
, T 
m
, T 
n
, T 
o
, T 
p
);

409 
M©rix44
 (
M©rix33
<
T
> 
r
, 
Vec3
<T> 
t
);

420 
M©rix44
 (c⁄° M©rix44 &
v
);

422 c⁄° 
	gM©rix44
 & 
	g›î©‹
 = (c⁄° 
M©rix44
 &
v
);

423 c⁄° 
	gM©rix44
 & 
	g›î©‹
 = (
T
 
a
);

430 
T
 * 
gëVÆue
 ();

431 c⁄° 
T
 * 
gëVÆue
 () const;

433 
	gãm∂©e
 <
˛ass
 
	gS
>

434 
gëVÆue
 (
M©rix44
<
S
> &
v
) const;

435 
	gãm∂©e
 <
˛ass
 
	gS
>

436 
	gM©rix44
 & 
£tVÆue
 (c⁄° 
M©rix44
<
S
> &
v
);

438 
	gãm∂©e
 <
˛ass
 
	gS
>

439 
	gM©rix44
 & 
£tTheM©rix
 (c⁄° 
M©rix44
<
S
> &
v
);

445 
makeIdítôy
();

452 
boﬁ
 
	g›î©‹
 =(c⁄° 
M©rix44
 &
v
) const;

453 
boﬁ
 
	g›î©‹
 !(c⁄° 
M©rix44
 &
v
) const;

473 
boﬁ
 
equÆWôhAbsEº‹
 (c⁄° 
M©rix44
<
T
> &
v
, T 
e
) const;

474 
boﬁ
 
equÆWôhRñEº‹
 (c⁄° 
M©rix44
<
T
> &
v
, T 
e
) const;

481 c⁄° 
	gM©rix44
 & 
	g›î©‹
 +(c⁄° 
M©rix44
 &
v
);

482 c⁄° 
	gM©rix44
 & 
	g›î©‹
 +(
T
 
a
);

483 
M©rix44
 
	g›î©‹
 + (c⁄° 
	gM©rix44
 &
	gv
) const;

490 c⁄° 
	gM©rix44
 & 
	g›î©‹
 -(c⁄° 
M©rix44
 &
v
);

491 c⁄° 
	gM©rix44
 & 
	g›î©‹
 -(
T
 
a
);

492 
M©rix44
 
	g›î©‹
 - (c⁄° 
	gM©rix44
 &
	gv
) const;

499 
M©rix44
 
	g›î©‹
 - () const;

500 c⁄° 
	gM©rix44
 & 
√g©e
 ();

507 c⁄° 
	gM©rix44
 & 
	g›î©‹
 *(
T
 
a
);

508 
M©rix44
 
	g›î©‹
 * (
T
 
	ga
) const;

515 c⁄° 
	gM©rix44
 & 
	g›î©‹
 *(c⁄° 
M©rix44
 &
v
);

516 
M©rix44
 
	g›î©‹
 * (c⁄° 
	gM©rix44
 &
	gv
) const;

518 
mu…ùly
 (c⁄° 
M©rix44
 &
a
,

519 c⁄° 
M©rix44
 &
b
,

520 
M©rix44
 &
c
);

528 
	gãm∂©e
 <
˛ass
 
	gS
>

529 
mu…VecM©rix
(c⁄° 
Vec3
<
S
> &
§c
, Vec3<S> &
d°
) const;

531 
	gãm∂©e
 <
˛ass
 
	gS
>

532 
mu…DúM©rix
(c⁄° 
Vec3
<
S
> &
§c
, Vec3<S> &
d°
) const;

539 c⁄° 
	gM©rix44
 & 
	g›î©‹
 /(
T
 
a
);

540 
M©rix44
 
	g›î©‹
 / (
T
 
	ga
) const;

547 c⁄° 
	gM©rix44
 & 
å™•o£
 ();

548 
M©rix44
 
å™•o£d
 () const;

565 c⁄° 
	gM©rix44
 & 
övît
 (
boﬁ
 
sögExc
 = 
Ál£
)

566 
throw
 (
Iex
::
M©hExc
);

568 
	gM©rix44
<
	gT
> 
övî£
 (
boﬁ
 
sögExc
 = 
Ál£
) const

569 
throw
 (
Iex
::
M©hExc
);

571 c⁄° 
	gM©rix44
 & 
gjInvît
 (
boﬁ
 
sögExc
 = 
Ál£
)

572 
throw
 (
Iex
::
M©hExc
);

574 
	gM©rix44
<
	gT
> 
gjInvî£
 (
boﬁ
 
sögExc
 = 
Ál£
) const

575 
throw
 (
Iex
::
M©hExc
);

582 
	gãm∂©e
 <
˛ass
 
	gS
>

583 c⁄° 
	gM©rix44
 & 
£tEuÀrAngÀs
 (c⁄° 
Vec3
<
S
>& 
r
);

590 
	gãm∂©e
 <
˛ass
 
	gS
>

591 c⁄° 
	gM©rix44
 & 
£tAxisAngÀ
 (c⁄° 
Vec3
<
S
>& 
ax
, S 
™g
);

598 
	gãm∂©e
 <
˛ass
 
	gS
>

599 c⁄° 
	gM©rix44
 & 
rŸ©e
 (c⁄° 
Vec3
<
S
> &
r
);

606 c⁄° 
	gM©rix44
 & 
£tSˇÀ
 (
T
 
s
);

613 
	gãm∂©e
 <
˛ass
 
	gS
>

614 c⁄° 
	gM©rix44
 & 
£tSˇÀ
 (c⁄° 
Vec3
<
S
> &
s
);

621 
	gãm∂©e
 <
˛ass
 
	gS
>

622 c⁄° 
	gM©rix44
 & 
sˇÀ
 (c⁄° 
Vec3
<
S
> &
s
);

629 
	gãm∂©e
 <
˛ass
 
	gS
>

630 c⁄° 
	gM©rix44
 & 
£tTøn¶©i⁄
 (c⁄° 
Vec3
<
S
> &
t
);

637 c⁄° 
	gVec3
<
	gT
> 
å™¶©i⁄
 () const;

644 
	gãm∂©e
 <
˛ass
 
	gS
>

645 c⁄° 
	gM©rix44
 & 
å™¶©e
 (c⁄° 
Vec3
<
S
> &
t
);

655 
	gãm∂©e
 <
˛ass
 
	gS
>

656 c⁄° 
	gM©rix44
 & 
£tShór
 (c⁄° 
Vec3
<
S
> &
h
);

669 
	gãm∂©e
 <
˛ass
 
	gS
>

670 c⁄° 
	gM©rix44
 & 
£tShór
 (c⁄° 
Shór6
<
S
> &
h
);

681 
	gãm∂©e
 <
˛ass
 
	gS
>

682 c⁄° 
	gM©rix44
 & 
shór
 (c⁄° 
Vec3
<
S
> &
h
);

696 
	gãm∂©e
 <
˛ass
 
	gS
>

697 c⁄° 
	gM©rix44
 & 
shór
 (c⁄° 
Shór6
<
S
> &
h
);

704 
T
 
ba£Ty≥Mö
(Ë{ 
	glimôs
<
	gT
>::
mö
();}

705 
T
 
ba£Ty≥Max
(Ë{ 
	glimôs
<
	gT
>::
max
();}

706 
T
 
ba£Ty≥SmÆÀ°
(Ë{ 
	glimôs
<
	gT
>::
smÆÀ°
();}

707 
T
 
ba£Ty≥Epsû⁄
(Ë{ 
	glimôs
<
	gT
>::
ïsû⁄
();}

715 
	gãm∂©e
 <
˛ass
 
	gT
>

716 
	g°d
::
o°ªam
 & 
›î©‹
 << (
°d
::o°ªam & 
s
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
);

718 
	gãm∂©e
 <
˛ass
 
	gT
>

719 
	g°d
::
o°ªam
 & 
›î©‹
 << (
°d
::o°ªam & 
s
, c⁄° 
	gM©rix44
<
	gT
> &
	gm
);

726 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

727 c⁄° 
	gVec2
<
	gS
> & 
	g›î©‹
 *(
Vec2
<
S
> &
v
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
);

729 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

730 
	gVec2
<
	gS
> 
	g›î©‹
 * (c⁄° Vec2<S> &
	gv
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
);

732 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

733 c⁄° 
	gVec3
<
	gS
> & 
	g›î©‹
 *(
Vec3
<
S
> &
v
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
);

735 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

736 
	gVec3
<
	gS
> 
	g›î©‹
 * (c⁄° Vec3<S> &
	gv
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
);

738 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

739 c⁄° 
	gVec3
<
	gS
> & 
	g›î©‹
 *(
Vec3
<
S
> &
v
, c⁄° 
	gM©rix44
<
	gT
> &
	gm
);

741 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

742 
	gVec3
<
	gS
> 
	g›î©‹
 * (c⁄° Vec3<S> &
	gv
, c⁄° 
	gM©rix44
<
	gT
> &
	gm
);

749 
	gM©rix33
 <> 
	tM33f
;

750 
	gM©rix33
 <> 
	tM33d
;

751 
	gM©rix44
 <> 
	tM44f
;

752 
	gM©rix44
 <> 
	tM44d
;

759 
	gãm∂©e
 <
˛ass
 
	gT
>

760 
ölöe
 
T
 *

761 
	gM©rix33
<
	gT
>::
›î©‹
 [] (
i
)

763  
x
[
i
];

766 
	gãm∂©e
 <
˛ass
 
	gT
>

767 
ölöe
 c⁄° 
T
 *

768 
	gM©rix33
<
	gT
>::
›î©‹
 [] (
i
) const

770  
x
[
i
];

773 
	gãm∂©e
 <
˛ass
 
	gT
>

774 
ölöe


775 
	gM©rix33
<
	gT
>::
	$M©rix33
 ()

777 
x
[0][0] = 1;

778 
x
[0][1] = 0;

779 
x
[0][2] = 0;

780 
x
[1][0] = 0;

781 
x
[1][1] = 1;

782 
x
[1][2] = 0;

783 
x
[2][0] = 0;

784 
x
[2][1] = 0;

785 
x
[2][2] = 1;

786 
	}
}

788 
	gãm∂©e
 <
˛ass
 
	gT
>

789 
ölöe


790 
	gM©rix33
<
	gT
>::
	$M©rix33
 (
T
 
a
)

792 
x
[0][0] = 
a
;

793 
x
[0][1] = 
a
;

794 
x
[0][2] = 
a
;

795 
x
[1][0] = 
a
;

796 
x
[1][1] = 
a
;

797 
x
[1][2] = 
a
;

798 
x
[2][0] = 
a
;

799 
x
[2][1] = 
a
;

800 
x
[2][2] = 
a
;

801 
	}
}

803 
	gãm∂©e
 <
˛ass
 
	gT
>

804 
ölöe


805 
	gM©rix33
<
	gT
>::
	$M©rix33
 (c⁄° 
T
 
a
[3][3])

807 
x
[0][0] = 
a
[0][0];

808 
x
[0][1] = 
a
[0][1];

809 
x
[0][2] = 
a
[0][2];

810 
x
[1][0] = 
a
[1][0];

811 
x
[1][1] = 
a
[1][1];

812 
x
[1][2] = 
a
[1][2];

813 
x
[2][0] = 
a
[2][0];

814 
x
[2][1] = 
a
[2][1];

815 
x
[2][2] = 
a
[2][2];

816 
	}
}

818 
	gãm∂©e
 <
˛ass
 
	gT
>

819 
ölöe


820 
	gM©rix33
<
	gT
>::
	$M©rix33
 (
T
 
a
, T 
b
, T 
c
, T 
d
, T 
e
, T 
f
, T 
g
, T 
h
, T 
i
)

822 
x
[0][0] = 
a
;

823 
x
[0][1] = 
b
;

824 
x
[0][2] = 
c
;

825 
x
[1][0] = 
d
;

826 
x
[1][1] = 
e
;

827 
x
[1][2] = 
f
;

828 
x
[2][0] = 
g
;

829 
x
[2][1] = 
h
;

830 
x
[2][2] = 
i
;

831 
	}
}

833 
	gãm∂©e
 <
˛ass
 
	gT
>

834 
ölöe


835 
	gM©rix33
<
	gT
>::
	$M©rix33
 (c⁄° 
M©rix33
 &
v
)

837 
x
[0][0] = 
v
.x[0][0];

838 
x
[0][1] = 
v
.x[0][1];

839 
x
[0][2] = 
v
.x[0][2];

840 
x
[1][0] = 
v
.x[1][0];

841 
x
[1][1] = 
v
.x[1][1];

842 
x
[1][2] = 
v
.x[1][2];

843 
x
[2][0] = 
v
.x[2][0];

844 
x
[2][1] = 
v
.x[2][1];

845 
x
[2][2] = 
v
.x[2][2];

846 
	}
}

848 
	gãm∂©e
 <
˛ass
 
	gT
>

849 
ölöe
 c⁄° 
	gM©rix33
<
	gT
> &

850 
	gM©rix33
<
	gT
>::
›î©‹
 = (c⁄° 
M©rix33
 &
v
)

852 
x
[0][0] = 
v
.x[0][0];

853 
	gx
[0][1] = 
v
.
x
[0][1];

854 
	gx
[0][2] = 
v
.
x
[0][2];

855 
	gx
[1][0] = 
v
.
x
[1][0];

856 
	gx
[1][1] = 
v
.
x
[1][1];

857 
	gx
[1][2] = 
v
.
x
[1][2];

858 
	gx
[2][0] = 
v
.
x
[2][0];

859 
	gx
[2][1] = 
v
.
x
[2][1];

860 
	gx
[2][2] = 
v
.
x
[2][2];

861  *
	gthis
;

864 
	gãm∂©e
 <
˛ass
 
	gT
>

865 
ölöe
 c⁄° 
	gM©rix33
<
	gT
> &

866 
	gM©rix33
<
	gT
>::
›î©‹
 = (
T
 
a
)

868 
x
[0][0] = 
a
;

869 
	gx
[0][1] = 
a
;

870 
	gx
[0][2] = 
a
;

871 
	gx
[1][0] = 
a
;

872 
	gx
[1][1] = 
a
;

873 
	gx
[1][2] = 
a
;

874 
	gx
[2][0] = 
a
;

875 
	gx
[2][1] = 
a
;

876 
	gx
[2][2] = 
a
;

877  *
	gthis
;

880 
	gãm∂©e
 <
˛ass
 
	gT
>

881 
ölöe
 
T
 *

882 
	gM©rix33
<
	gT
>::
	$gëVÆue
 ()

884  (
T
 *Ë&
x
[0][0];

885 
	}
}

887 
	gãm∂©e
 <
˛ass
 
	gT
>

888 
ölöe
 c⁄° 
T
 *

889 
	gM©rix33
<
	gT
>::
	$gëVÆue
 () const

891  (c⁄° 
T
 *Ë&
x
[0][0];

892 
	}
}

894 
	gãm∂©e
 <
˛ass
 
	gT
>

895 
	gãm∂©e
 <
˛ass
 
	gS
>

896 
ölöe
 

897 
	gM©rix33
<
	gT
>::
gëVÆue
 (
M©rix33
<
S
> &
v
) const

899 
v
.
x
[0][0] = x[0][0];

900 
	gv
.
	gx
[0][1] = 
x
[0][1];

901 
	gv
.
	gx
[0][2] = 
x
[0][2];

902 
	gv
.
	gx
[1][0] = 
x
[1][0];

903 
	gv
.
	gx
[1][1] = 
x
[1][1];

904 
	gv
.
	gx
[1][2] = 
x
[1][2];

905 
	gv
.
	gx
[2][0] = 
x
[2][0];

906 
	gv
.
	gx
[2][1] = 
x
[2][1];

907 
	gv
.
	gx
[2][2] = 
x
[2][2];

910 
	gãm∂©e
 <
˛ass
 
	gT
>

911 
	gãm∂©e
 <
˛ass
 
	gS
>

912 
ölöe
 
	gM©rix33
<
	gT
> &

913 
	gM©rix33
<
	gT
>::
£tVÆue
 (c⁄° 
M©rix33
<
S
> &
v
)

915 
x
[0][0] = 
v
.x[0][0];

916 
	gx
[0][1] = 
v
.
x
[0][1];

917 
	gx
[0][2] = 
v
.
x
[0][2];

918 
	gx
[1][0] = 
v
.
x
[1][0];

919 
	gx
[1][1] = 
v
.
x
[1][1];

920 
	gx
[1][2] = 
v
.
x
[1][2];

921 
	gx
[2][0] = 
v
.
x
[2][0];

922 
	gx
[2][1] = 
v
.
x
[2][1];

923 
	gx
[2][2] = 
v
.
x
[2][2];

924  *
	gthis
;

927 
	gãm∂©e
 <
˛ass
 
	gT
>

928 
	gãm∂©e
 <
˛ass
 
	gS
>

929 
ölöe
 
	gM©rix33
<
	gT
> &

930 
	gM©rix33
<
	gT
>::
£tTheM©rix
 (c⁄° 
M©rix33
<
S
> &
v
)

932 
x
[0][0] = 
v
.x[0][0];

933 
	gx
[0][1] = 
v
.
x
[0][1];

934 
	gx
[0][2] = 
v
.
x
[0][2];

935 
	gx
[1][0] = 
v
.
x
[1][0];

936 
	gx
[1][1] = 
v
.
x
[1][1];

937 
	gx
[1][2] = 
v
.
x
[1][2];

938 
	gx
[2][0] = 
v
.
x
[2][0];

939 
	gx
[2][1] = 
v
.
x
[2][1];

940 
	gx
[2][2] = 
v
.
x
[2][2];

941  *
	gthis
;

944 
	gãm∂©e
 <
˛ass
 
	gT
>

945 
ölöe
 

946 
	gM©rix33
<
	gT
>::
	$makeIdítôy
()

948 
x
[0][0] = 1;

949 
x
[0][1] = 0;

950 
x
[0][2] = 0;

951 
x
[1][0] = 0;

952 
x
[1][1] = 1;

953 
x
[1][2] = 0;

954 
x
[2][0] = 0;

955 
x
[2][1] = 0;

956 
x
[2][2] = 1;

957 
	}
}

959 
	gãm∂©e
 <
˛ass
 
	gT
>

960 
boﬁ


961 
	gM©rix33
<
	gT
>::
›î©‹
 =(c⁄° 
M©rix33
 &
v
) const

963  
x
[0][0] =
v
.x[0][0] &&

964 
x
[0][1] =
v
.x[0][1] &&

965 
x
[0][2] =
v
.x[0][2] &&

966 
x
[1][0] =
v
.x[1][0] &&

967 
x
[1][1] =
v
.x[1][1] &&

968 
x
[1][2] =
v
.x[1][2] &&

969 
x
[2][0] =
v
.x[2][0] &&

970 
x
[2][1] =
v
.x[2][1] &&

971 
x
[2][2] =
v
.x[2][2];

974 
	gãm∂©e
 <
˛ass
 
	gT
>

975 
boﬁ


976 
	gM©rix33
<
	gT
>::
›î©‹
 !(c⁄° 
M©rix33
 &
v
) const

978  
x
[0][0] !
v
.x[0][0] ||

979 
x
[0][1] !
v
.x[0][1] ||

980 
x
[0][2] !
v
.x[0][2] ||

981 
x
[1][0] !
v
.x[1][0] ||

982 
x
[1][1] !
v
.x[1][1] ||

983 
x
[1][2] !
v
.x[1][2] ||

984 
x
[2][0] !
v
.x[2][0] ||

985 
x
[2][1] !
v
.x[2][1] ||

986 
x
[2][2] !
v
.x[2][2];

989 
	gãm∂©e
 <
˛ass
 
	gT
>

990 
boﬁ


991 
	gM©rix33
<
	gT
>::
equÆWôhAbsEº‹
 (c⁄° 
M©rix33
<
T
> &
m
, T 
e
) const

993 
	gi
 = 0; i < 3; i++)

994 
	gj
 = 0; j < 3; j++)

995 i‡(!
	gIm©h
::
equÆWôhAbsEº‹
 ((*
this
)[
i
][
j
], 
m
[i][j], 
e
))

996  
	gÁl£
;

998  
	gåue
;

1001 
	gãm∂©e
 <
˛ass
 
	gT
>

1002 
boﬁ


1003 
	gM©rix33
<
	gT
>::
equÆWôhRñEº‹
 (c⁄° 
M©rix33
<
T
> &
m
, T 
e
) const

1005 
	gi
 = 0; i < 3; i++)

1006 
	gj
 = 0; j < 3; j++)

1007 i‡(!
	gIm©h
::
equÆWôhRñEº‹
 ((*
this
)[
i
][
j
], 
m
[i][j], 
e
))

1008  
	gÁl£
;

1010  
	gåue
;

1013 
	gãm∂©e
 <
˛ass
 
	gT
>

1014 c⁄° 
	gM©rix33
<
	gT
> &

1015 
	gM©rix33
<
	gT
>::
›î©‹
 +(c⁄° 
M©rix33
<
T
> &
v
)

1017 
x
[0][0] +
v
.x[0][0];

1018 
	gx
[0][1] +
v
.
x
[0][1];

1019 
	gx
[0][2] +
v
.
x
[0][2];

1020 
	gx
[1][0] +
v
.
x
[1][0];

1021 
	gx
[1][1] +
v
.
x
[1][1];

1022 
	gx
[1][2] +
v
.
x
[1][2];

1023 
	gx
[2][0] +
v
.
x
[2][0];

1024 
	gx
[2][1] +
v
.
x
[2][1];

1025 
	gx
[2][2] +
v
.
x
[2][2];

1027  *
	gthis
;

1030 
	gãm∂©e
 <
˛ass
 
	gT
>

1031 c⁄° 
	gM©rix33
<
	gT
> &

1032 
	gM©rix33
<
	gT
>::
›î©‹
 +(
T
 
a
)

1034 
x
[0][0] +
a
;

1035 
	gx
[0][1] +
a
;

1036 
	gx
[0][2] +
a
;

1037 
	gx
[1][0] +
a
;

1038 
	gx
[1][1] +
a
;

1039 
	gx
[1][2] +
a
;

1040 
	gx
[2][0] +
a
;

1041 
	gx
[2][1] +
a
;

1042 
	gx
[2][2] +
a
;

1044  *
	gthis
;

1047 
	gãm∂©e
 <
˛ass
 
	gT
>

1048 
	gM©rix33
<
	gT
>

1049 
	gM©rix33
<
	gT
>::
›î©‹
 + (c⁄° 
M©rix33
<
T
> &
v
) const

1051  
M©rix33
 (
x
[0][0] + 
v
.x[0][0],

1052 
x
[0][1] + 
v
.x[0][1],

1053 
x
[0][2] + 
v
.x[0][2],

1054 
x
[1][0] + 
v
.x[1][0],

1055 
x
[1][1] + 
v
.x[1][1],

1056 
x
[1][2] + 
v
.x[1][2],

1057 
x
[2][0] + 
v
.x[2][0],

1058 
x
[2][1] + 
v
.x[2][1],

1059 
x
[2][2] + 
v
.x[2][2]);

1062 
	gãm∂©e
 <
˛ass
 
	gT
>

1063 c⁄° 
	gM©rix33
<
	gT
> &

1064 
	gM©rix33
<
	gT
>::
›î©‹
 -(c⁄° 
M©rix33
<
T
> &
v
)

1066 
x
[0][0] -
v
.x[0][0];

1067 
	gx
[0][1] -
v
.
x
[0][1];

1068 
	gx
[0][2] -
v
.
x
[0][2];

1069 
	gx
[1][0] -
v
.
x
[1][0];

1070 
	gx
[1][1] -
v
.
x
[1][1];

1071 
	gx
[1][2] -
v
.
x
[1][2];

1072 
	gx
[2][0] -
v
.
x
[2][0];

1073 
	gx
[2][1] -
v
.
x
[2][1];

1074 
	gx
[2][2] -
v
.
x
[2][2];

1076  *
	gthis
;

1079 
	gãm∂©e
 <
˛ass
 
	gT
>

1080 c⁄° 
	gM©rix33
<
	gT
> &

1081 
	gM©rix33
<
	gT
>::
›î©‹
 -(
T
 
a
)

1083 
x
[0][0] -
a
;

1084 
	gx
[0][1] -
a
;

1085 
	gx
[0][2] -
a
;

1086 
	gx
[1][0] -
a
;

1087 
	gx
[1][1] -
a
;

1088 
	gx
[1][2] -
a
;

1089 
	gx
[2][0] -
a
;

1090 
	gx
[2][1] -
a
;

1091 
	gx
[2][2] -
a
;

1093  *
	gthis
;

1096 
	gãm∂©e
 <
˛ass
 
	gT
>

1097 
	gM©rix33
<
	gT
>

1098 
	gM©rix33
<
	gT
>::
›î©‹
 - (c⁄° 
M©rix33
<
T
> &
v
) const

1100  
M©rix33
 (
x
[0][0] - 
v
.x[0][0],

1101 
x
[0][1] - 
v
.x[0][1],

1102 
x
[0][2] - 
v
.x[0][2],

1103 
x
[1][0] - 
v
.x[1][0],

1104 
x
[1][1] - 
v
.x[1][1],

1105 
x
[1][2] - 
v
.x[1][2],

1106 
x
[2][0] - 
v
.x[2][0],

1107 
x
[2][1] - 
v
.x[2][1],

1108 
x
[2][2] - 
v
.x[2][2]);

1111 
	gãm∂©e
 <
˛ass
 
	gT
>

1112 
	gM©rix33
<
	gT
>

1113 
	gM©rix33
<
	gT
>::
›î©‹
 - () const

1115  
M©rix33
 (-
x
[0][0],

1116 -
x
[0][1],

1117 -
x
[0][2],

1118 -
x
[1][0],

1119 -
x
[1][1],

1120 -
x
[1][2],

1121 -
x
[2][0],

1122 -
x
[2][1],

1123 -
x
[2][2]);

1126 
	gãm∂©e
 <
˛ass
 
	gT
>

1127 c⁄° 
	gM©rix33
<
	gT
> &

1128 
	gM©rix33
<
	gT
>::
	$√g©e
 ()

1130 
x
[0][0] = -x[0][0];

1131 
x
[0][1] = -x[0][1];

1132 
x
[0][2] = -x[0][2];

1133 
x
[1][0] = -x[1][0];

1134 
x
[1][1] = -x[1][1];

1135 
x
[1][2] = -x[1][2];

1136 
x
[2][0] = -x[2][0];

1137 
x
[2][1] = -x[2][1];

1138 
x
[2][2] = -x[2][2];

1140  *
this
;

1141 
	}
}

1143 
	gãm∂©e
 <
˛ass
 
	gT
>

1144 c⁄° 
	gM©rix33
<
	gT
> &

1145 
	gM©rix33
<
	gT
>::
›î©‹
 *(
T
 
a
)

1147 
x
[0][0] *
a
;

1148 
	gx
[0][1] *
a
;

1149 
	gx
[0][2] *
a
;

1150 
	gx
[1][0] *
a
;

1151 
	gx
[1][1] *
a
;

1152 
	gx
[1][2] *
a
;

1153 
	gx
[2][0] *
a
;

1154 
	gx
[2][1] *
a
;

1155 
	gx
[2][2] *
a
;

1157  *
	gthis
;

1160 
	gãm∂©e
 <
˛ass
 
	gT
>

1161 
	gM©rix33
<
	gT
>

1162 
	gM©rix33
<
	gT
>::
›î©‹
 * (
T
 
a
) const

1164  
M©rix33
 (
x
[0][0] * 
a
,

1165 
x
[0][1] * 
a
,

1166 
x
[0][2] * 
a
,

1167 
x
[1][0] * 
a
,

1168 
x
[1][1] * 
a
,

1169 
x
[1][2] * 
a
,

1170 
x
[2][0] * 
a
,

1171 
x
[2][1] * 
a
,

1172 
x
[2][2] * 
a
);

1175 
	gãm∂©e
 <
˛ass
 
	gT
>

1176 
ölöe
 
	gM©rix33
<
	gT
>

1177 
	g›î©‹
 * (
T
 
	ga
, c⁄° 
	gM©rix33
<
	gT
> &
	gv
)

1179  
v
 * 
	ga
;

1182 
	gãm∂©e
 <
˛ass
 
	gT
>

1183 c⁄° 
	gM©rix33
<
	gT
> &

1184 
	gM©rix33
<
	gT
>::
›î©‹
 *(c⁄° 
M©rix33
<
T
> &
v
)

1186 
M©rix33
 
tmp
 (
T
 (0));

1188 
	gi
 = 0; i < 3; i++)

1189 
	gj
 = 0; j < 3; j++)

1190 
	gk
 = 0; k < 3; k++)

1191 
	gtmp
.
	gx
[
i
][
j
] +
x
[i][
k
] * 
v
.x[k][j];

1193 *
	gthis
 = 
tmp
;

1194  *
	gthis
;

1197 
	gãm∂©e
 <
˛ass
 
	gT
>

1198 
	gM©rix33
<
	gT
>

1199 
	gM©rix33
<
	gT
>::
›î©‹
 * (c⁄° 
M©rix33
<
T
> &
v
) const

1201 
M©rix33
 
tmp
 (
T
 (0));

1203 
	gi
 = 0; i < 3; i++)

1204 
	gj
 = 0; j < 3; j++)

1205 
	gk
 = 0; k < 3; k++)

1206 
	gtmp
.
	gx
[
i
][
j
] +
x
[i][
k
] * 
v
.x[k][j];

1208  
	gtmp
;

1211 
	gãm∂©e
 <
˛ass
 
	gT
>

1212 
	gãm∂©e
 <
˛ass
 
	gS
>

1214 
	gM©rix33
<
	gT
>::
mu…VecM©rix
(c⁄° 
Vec2
<
S
> &
§c
, Vec2<S> &
d°
) const

1216 
S
 
	ga
, 
	gb
, 
	gw
;

1218 
	ga
 = 
§c
[0] * 
x
[0][0] + src[1] * x[1][0] + x[2][0];

1219 
	gb
 = 
§c
[0] * 
x
[0][1] + src[1] * x[1][1] + x[2][1];

1220 
	gw
 = 
§c
[0] * 
x
[0][2] + src[1] * x[1][2] + x[2][2];

1222 
	gd°
.
	gx
 = 
a
 / 
w
;

1223 
	gd°
.
	gy
 = 
b
 / 
w
;

1226 
	gãm∂©e
 <
˛ass
 
	gT
>

1227 
	gãm∂©e
 <
˛ass
 
	gS
>

1229 
	gM©rix33
<
	gT
>::
mu…DúM©rix
(c⁄° 
Vec2
<
S
> &
§c
, Vec2<S> &
d°
) const

1231 
S
 
	ga
, 
	gb
;

1233 
	ga
 = 
§c
[0] * 
x
[0][0] + src[1] * x[1][0];

1234 
	gb
 = 
§c
[0] * 
x
[0][1] + src[1] * x[1][1];

1236 
	gd°
.
	gx
 = 
a
;

1237 
	gd°
.
	gy
 = 
b
;

1240 
	gãm∂©e
 <
˛ass
 
	gT
>

1241 c⁄° 
	gM©rix33
<
	gT
> &

1242 
	gM©rix33
<
	gT
>::
›î©‹
 /(
T
 
a
)

1244 
x
[0][0] /
a
;

1245 
	gx
[0][1] /
a
;

1246 
	gx
[0][2] /
a
;

1247 
	gx
[1][0] /
a
;

1248 
	gx
[1][1] /
a
;

1249 
	gx
[1][2] /
a
;

1250 
	gx
[2][0] /
a
;

1251 
	gx
[2][1] /
a
;

1252 
	gx
[2][2] /
a
;

1254  *
	gthis
;

1257 
	gãm∂©e
 <
˛ass
 
	gT
>

1258 
	gM©rix33
<
	gT
>

1259 
	gM©rix33
<
	gT
>::
›î©‹
 / (
T
 
a
) const

1261  
M©rix33
 (
x
[0][0] / 
a
,

1262 
x
[0][1] / 
a
,

1263 
x
[0][2] / 
a
,

1264 
x
[1][0] / 
a
,

1265 
x
[1][1] / 
a
,

1266 
x
[1][2] / 
a
,

1267 
x
[2][0] / 
a
,

1268 
x
[2][1] / 
a
,

1269 
x
[2][2] / 
a
);

1272 
	gãm∂©e
 <
˛ass
 
	gT
>

1273 c⁄° 
	gM©rix33
<
	gT
> &

1274 
	gM©rix33
<
	gT
>::
	$å™•o£
 ()

1276 
M©rix33
 
	`tmp
 (
x
[0][0],

1277 
x
[1][0],

1278 
x
[2][0],

1279 
x
[0][1],

1280 
x
[1][1],

1281 
x
[2][1],

1282 
x
[0][2],

1283 
x
[1][2],

1284 
x
[2][2]);

1285 *
this
 = 
tmp
;

1286  *
this
;

1287 
	}
}

1289 
	gãm∂©e
 <
˛ass
 
	gT
>

1290 
	gM©rix33
<
	gT
>

1291 
	gM©rix33
<
	gT
>::
	$å™•o£d
 () const

1293  
	`M©rix33
 (
x
[0][0],

1294 
x
[1][0],

1295 
x
[2][0],

1296 
x
[0][1],

1297 
x
[1][1],

1298 
x
[2][1],

1299 
x
[0][2],

1300 
x
[1][2],

1301 
x
[2][2]);

1302 
	}
}

1304 
	gãm∂©e
 <
˛ass
 
	gT
>

1305 c⁄° 
	gM©rix33
<
	gT
> &

1306 
	gM©rix33
<
	gT
>::
	$gjInvît
 (
boﬁ
 
sögExc
Ë
	`throw
 (
Iex
::
M©hExc
)

1308 *
this
 = 
	`gjInvî£
 (
sögExc
);

1309  *
this
;

1310 
	}
}

1312 
	gãm∂©e
 <
˛ass
 
	gT
>

1313 
	gM©rix33
<
	gT
>

1314 
	gM©rix33
<
	gT
>::
	$gjInvî£
 (
boﬁ
 
sögExc
Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
)

1316 
i
, 
j
, 
k
;

1317 
M©rix33
 
s
;

1318 
M©rix33
 
	`t
 (*
this
);

1322 
i
 = 0; i < 2 ; i++)

1324 
pivŸ
 = 
i
;

1326 
T
 
pivŸsize
 = 
t
[
i
][i];

1328 i‡(
pivŸsize
 < 0)

1329 
pivŸsize
 = -pivotsize;

1331 
j
 = 
i
 + 1; j < 3; j++)

1333 
T
 
tmp
 = 
t
[
j
][
i
];

1335 i‡(
tmp
 < 0)

1336 
tmp
 = -tmp;

1338 i‡(
tmp
 > 
pivŸsize
)

1340 
pivŸ
 = 
j
;

1341 
pivŸsize
 = 
tmp
;

1345 i‡(
pivŸsize
 == 0)

1347 i‡(
sögExc
)

1348 
throw
 ::
Im©h
::
	`SögM©rixExc
 ("Cannot invert singular matrix.");

1350  
	`M©rix33
();

1353 i‡(
pivŸ
 !
i
)

1355 
j
 = 0; j < 3; j++)

1357 
T
 
tmp
;

1359 
tmp
 = 
t
[
i
][
j
];

1360 
t
[
i
][
j
] =Å[
pivŸ
][j];

1361 
t
[
pivŸ
][
j
] = 
tmp
;

1363 
tmp
 = 
s
[
i
][
j
];

1364 
s
[
i
][
j
] = s[
pivŸ
][j];

1365 
s
[
pivŸ
][
j
] = 
tmp
;

1369 
j
 = 
i
 + 1; j < 3; j++)

1371 
T
 
f
 = 
t
[
j
][
i
] /Å[i][i];

1373 
k
 = 0; k < 3; k++)

1375 
t
[
j
][
k
] -
f
 *Å[
i
][k];

1376 
s
[
j
][
k
] -
f
 * s[
i
][k];

1383 
i
 = 2; i >= 0; --i)

1385 
T
 
f
;

1387 i‡((
f
 = 
t
[
i
][i]) == 0)

1389 i‡(
sögExc
)

1390 
throw
 ::
Im©h
::
	`SögM©rixExc
 ("Cannot invert singular matrix.");

1392  
	`M©rix33
();

1395 
j
 = 0; j < 3; j++)

1397 
t
[
i
][
j
] /
f
;

1398 
s
[
i
][
j
] /
f
;

1401 
j
 = 0; j < 
i
; j++)

1403 
f
 = 
t
[
j
][
i
];

1405 
k
 = 0; k < 3; k++)

1407 
t
[
j
][
k
] -
f
 *Å[
i
][k];

1408 
s
[
j
][
k
] -
f
 * s[
i
][k];

1413  
s
;

1414 
	}
}

1416 
	gãm∂©e
 <
˛ass
 
	gT
>

1417 c⁄° 
	gM©rix33
<
	gT
> &

1418 
	gM©rix33
<
	gT
>::
	$övît
 (
boﬁ
 
sögExc
Ë
	`throw
 (
Iex
::
M©hExc
)

1420 *
this
 = 
	`övî£
 (
sögExc
);

1421  *
this
;

1422 
	}
}

1424 
	gãm∂©e
 <
˛ass
 
	gT
>

1425 
	gM©rix33
<
	gT
>

1426 
	gM©rix33
<
	gT
>::
	$övî£
 (
boﬁ
 
sögExc
Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
)

1428 i‡(
x
[0][2] != 0 || x[1][2] != 0 || x[2][2] != 1)

1430 
M©rix33
 
	`s
 (
x
[1][1] * x[2][2] - x[2][1] * x[1][2],

1431 
x
[2][1] * x[0][2] - x[0][1] * x[2][2],

1432 
x
[0][1] * x[1][2] - x[1][1] * x[0][2],

1434 
x
[2][0] * x[1][2] - x[1][0] * x[2][2],

1435 
x
[0][0] * x[2][2] - x[2][0] * x[0][2],

1436 
x
[1][0] * x[0][2] - x[0][0] * x[1][2],

1438 
x
[1][0] * x[2][1] - x[2][0] * x[1][1],

1439 
x
[2][0] * x[0][1] - x[0][0] * x[2][1],

1440 
x
[0][0] * x[1][1] - x[1][0] * x[0][1]);

1442 
T
 
r
 = 
x
[0][0] * 
s
[0][0] + x[0][1] * s[1][0] + x[0][2] * s[2][0];

1444 i‡(
Im©h
::
	`abs
 (
r
) >= 1)

1446 
i
 = 0; i < 3; ++i)

1448 
j
 = 0; j < 3; ++j)

1450 
s
[
i
][
j
] /
r
;

1456 
T
 
mr
 = 
Im©h
::
	`abs
 (
r
Ë/ 
limôs
<T>::
	`smÆÀ°
();

1458 
i
 = 0; i < 3; ++i)

1460 
j
 = 0; j < 3; ++j)

1462 i‡(
mr
 > 
Im©h
::
	`abs
 (
s
[
i
][
j
]))

1464 
s
[
i
][
j
] /
r
;

1468 i‡(
sögExc
)

1469 
throw
 
	`SögM©rixExc
 ("Cannot invert "

1471  
	`M©rix33
();

1477  
s
;

1481 
M©rix33
 
	`s
 ( 
x
[1][1],

1482 -
x
[0][1],

1485 -
x
[1][0],

1486 
x
[0][0],

1493 
T
 
r
 = 
x
[0][0] * x[1][1] - x[1][0] * x[0][1];

1495 i‡(
Im©h
::
	`abs
 (
r
) >= 1)

1497 
i
 = 0; i < 2; ++i)

1499 
j
 = 0; j < 2; ++j)

1501 
s
[
i
][
j
] /
r
;

1507 
T
 
mr
 = 
Im©h
::
	`abs
 (
r
Ë/ 
limôs
<T>::
	`smÆÀ°
();

1509 
i
 = 0; i < 2; ++i)

1511 
j
 = 0; j < 2; ++j)

1513 i‡(
mr
 > 
Im©h
::
	`abs
 (
s
[
i
][
j
]))

1515 
s
[
i
][
j
] /
r
;

1519 i‡(
sögExc
)

1520 
throw
 
	`SögM©rixExc
 ("Cannot invert "

1522  
	`M©rix33
();

1528 
s
[2][0] = -
x
[2][0] * s[0][0] - x[2][1] * s[1][0];

1529 
s
[2][1] = -
x
[2][0] * s[0][1] - x[2][1] * s[1][1];

1531  
s
;

1533 
	}
}

1535 
	gãm∂©e
 <
˛ass
 
	gT
>

1536 
	gãm∂©e
 <
˛ass
 
	gS
>

1537 c⁄° 
	gM©rix33
<
	gT
> &

1538 
	gM©rix33
<
	gT
>::
	$£tRŸ©i⁄
 (
S
 
r
)

1540 
S
 
cos_r
, 
sö_r
;

1542 
cos_r
 = 
M©h
<
T
>::
	`cos
 (
r
);

1543 
sö_r
 = 
M©h
<
T
>::
	`sö
 (
r
);

1545 
x
[0][0] = 
cos_r
;

1546 
x
[0][1] = 
sö_r
;

1547 
x
[0][2] = 0;

1549 
x
[1][0] = -
sö_r
;

1550 
x
[1][1] = 
cos_r
;

1551 
x
[1][2] = 0;

1553 
x
[2][0] = 0;

1554 
x
[2][1] = 0;

1555 
x
[2][2] = 1;

1557  *
this
;

1558 
	}
}

1560 
	gãm∂©e
 <
˛ass
 
	gT
>

1561 
	gãm∂©e
 <
˛ass
 
	gS
>

1562 c⁄° 
	gM©rix33
<
	gT
> &

1563 
	gM©rix33
<
	gT
>::
	$rŸ©e
 (
S
 
r
)

1565 *
this
 *
M©rix33
<
T
>().
	`£tRŸ©i⁄
 (
r
);

1566  *
this
;

1567 
	}
}

1569 
	gãm∂©e
 <
˛ass
 
	gT
>

1570 c⁄° 
	gM©rix33
<
	gT
> &

1571 
	gM©rix33
<
	gT
>::
	$£tSˇÀ
 (
T
 
s
)

1573 
x
[0][0] = 
s
;

1574 
x
[0][1] = 0;

1575 
x
[0][2] = 0;

1577 
x
[1][0] = 0;

1578 
x
[1][1] = 
s
;

1579 
x
[1][2] = 0;

1581 
x
[2][0] = 0;

1582 
x
[2][1] = 0;

1583 
x
[2][2] = 1;

1585  *
this
;

1586 
	}
}

1588 
	gãm∂©e
 <
˛ass
 
	gT
>

1589 
	gãm∂©e
 <
˛ass
 
	gS
>

1590 c⁄° 
	gM©rix33
<
	gT
> &

1591 
	gM©rix33
<
	gT
>::
£tSˇÀ
 (c⁄° 
Vec2
<
S
> &
s
)

1593 
x
[0][0] = 
s
[0];

1594 
	gx
[0][1] = 0;

1595 
	gx
[0][2] = 0;

1597 
	gx
[1][0] = 0;

1598 
	gx
[1][1] = 
s
[1];

1599 
	gx
[1][2] = 0;

1601 
	gx
[2][0] = 0;

1602 
	gx
[2][1] = 0;

1603 
	gx
[2][2] = 1;

1605  *
	gthis
;

1608 
	gãm∂©e
 <
˛ass
 
	gT
>

1609 
	gãm∂©e
 <
˛ass
 
	gS
>

1610 c⁄° 
	gM©rix33
<
	gT
> &

1611 
	gM©rix33
<
	gT
>::
sˇÀ
 (c⁄° 
Vec2
<
S
> &
s
)

1613 
x
[0][0] *
s
[0];

1614 
	gx
[0][1] *
s
[0];

1615 
	gx
[0][2] *
s
[0];

1617 
	gx
[1][0] *
s
[1];

1618 
	gx
[1][1] *
s
[1];

1619 
	gx
[1][2] *
s
[1];

1621  *
	gthis
;

1624 
	gãm∂©e
 <
˛ass
 
	gT
>

1625 
	gãm∂©e
 <
˛ass
 
	gS
>

1626 c⁄° 
	gM©rix33
<
	gT
> &

1627 
	gM©rix33
<
	gT
>::
£tTøn¶©i⁄
 (c⁄° 
Vec2
<
S
> &
t
)

1629 
x
[0][0] = 1;

1630 
	gx
[0][1] = 0;

1631 
	gx
[0][2] = 0;

1633 
	gx
[1][0] = 0;

1634 
	gx
[1][1] = 1;

1635 
	gx
[1][2] = 0;

1637 
	gx
[2][0] = 
t
[0];

1638 
	gx
[2][1] = 
t
[1];

1639 
	gx
[2][2] = 1;

1641  *
	gthis
;

1644 
	gãm∂©e
 <
˛ass
 
	gT
>

1645 
ölöe
 
	gVec2
<
	gT
>

1646 
	gM©rix33
<
	gT
>::
	$å™¶©i⁄
 () const

1648  
Vec2
<
T
> (
x
[2][0], x[2][1]);

1649 
	}
}

1651 
	gãm∂©e
 <
˛ass
 
	gT
>

1652 
	gãm∂©e
 <
˛ass
 
	gS
>

1653 c⁄° 
	gM©rix33
<
	gT
> &

1654 
	gM©rix33
<
	gT
>::
å™¶©e
 (c⁄° 
Vec2
<
S
> &
t
)

1656 
x
[2][0] +
t
[0] * x[0][0] +Å[1] * x[1][0];

1657 
	gx
[2][1] +
t
[0] * 
x
[0][1] +Å[1] * x[1][1];

1658 
	gx
[2][2] +
t
[0] * 
x
[0][2] +Å[1] * x[1][2];

1660  *
	gthis
;

1663 
	gãm∂©e
 <
˛ass
 
	gT
>

1664 
	gãm∂©e
 <
˛ass
 
	gS
>

1665 c⁄° 
	gM©rix33
<
	gT
> &

1666 
	gM©rix33
<
	gT
>::
	$£tShór
 (c⁄° 
S
 &
xy
)

1668 
x
[0][0] = 1;

1669 
x
[0][1] = 0;

1670 
x
[0][2] = 0;

1672 
x
[1][0] = 
xy
;

1673 
x
[1][1] = 1;

1674 
x
[1][2] = 0;

1676 
x
[2][0] = 0;

1677 
x
[2][1] = 0;

1678 
x
[2][2] = 1;

1680  *
this
;

1681 
	}
}

1683 
	gãm∂©e
 <
˛ass
 
	gT
>

1684 
	gãm∂©e
 <
˛ass
 
	gS
>

1685 c⁄° 
	gM©rix33
<
	gT
> &

1686 
	gM©rix33
<
	gT
>::
£tShór
 (c⁄° 
Vec2
<
S
> &
h
)

1688 
x
[0][0] = 1;

1689 
	gx
[0][1] = 
h
[1];

1690 
	gx
[0][2] = 0;

1692 
	gx
[1][0] = 
h
[0];

1693 
	gx
[1][1] = 1;

1694 
	gx
[1][2] = 0;

1696 
	gx
[2][0] = 0;

1697 
	gx
[2][1] = 0;

1698 
	gx
[2][2] = 1;

1700  *
	gthis
;

1703 
	gãm∂©e
 <
˛ass
 
	gT
>

1704 
	gãm∂©e
 <
˛ass
 
	gS
>

1705 c⁄° 
	gM©rix33
<
	gT
> &

1706 
	gM©rix33
<
	gT
>::
	$shór
 (c⁄° 
S
 &
xy
)

1714 
x
[1][0] +
xy
 * x[0][0];

1715 
x
[1][1] +
xy
 * x[0][1];

1716 
x
[1][2] +
xy
 * x[0][2];

1718  *
this
;

1719 
	}
}

1721 
	gãm∂©e
 <
˛ass
 
	gT
>

1722 
	gãm∂©e
 <
˛ass
 
	gS
>

1723 c⁄° 
	gM©rix33
<
	gT
> &

1724 
	gM©rix33
<
	gT
>::
shór
 (c⁄° 
Vec2
<
S
> &
h
)

1726 
M©rix33
<
T
> 
P
 (*
this
);

1728 
	gx
[0][0] = 
P
[0][0] + 
h
[1] * P[1][0];

1729 
	gx
[0][1] = 
P
[0][1] + 
h
[1] * P[1][1];

1730 
	gx
[0][2] = 
P
[0][2] + 
h
[1] * P[1][2];

1732 
	gx
[1][0] = 
P
[1][0] + 
h
[0] * P[0][0];

1733 
	gx
[1][1] = 
P
[1][1] + 
h
[0] * P[0][1];

1734 
	gx
[1][2] = 
P
[1][2] + 
h
[0] * P[0][2];

1736  *
	gthis
;

1744 
	gãm∂©e
 <
˛ass
 
	gT
>

1745 
ölöe
 
T
 *

1746 
	gM©rix44
<
	gT
>::
›î©‹
 [] (
i
)

1748  
x
[
i
];

1751 
	gãm∂©e
 <
˛ass
 
	gT
>

1752 
ölöe
 c⁄° 
T
 *

1753 
	gM©rix44
<
	gT
>::
›î©‹
 [] (
i
) const

1755  
x
[
i
];

1758 
	gãm∂©e
 <
˛ass
 
	gT
>

1759 
ölöe


1760 
	gM©rix44
<
	gT
>::
	$M©rix44
 ()

1762 
x
[0][0] = 1;

1763 
x
[0][1] = 0;

1764 
x
[0][2] = 0;

1765 
x
[0][3] = 0;

1766 
x
[1][0] = 0;

1767 
x
[1][1] = 1;

1768 
x
[1][2] = 0;

1769 
x
[1][3] = 0;

1770 
x
[2][0] = 0;

1771 
x
[2][1] = 0;

1772 
x
[2][2] = 1;

1773 
x
[2][3] = 0;

1774 
x
[3][0] = 0;

1775 
x
[3][1] = 0;

1776 
x
[3][2] = 0;

1777 
x
[3][3] = 1;

1778 
	}
}

1780 
	gãm∂©e
 <
˛ass
 
	gT
>

1781 
ölöe


1782 
	gM©rix44
<
	gT
>::
	$M©rix44
 (
T
 
a
)

1784 
x
[0][0] = 
a
;

1785 
x
[0][1] = 
a
;

1786 
x
[0][2] = 
a
;

1787 
x
[0][3] = 
a
;

1788 
x
[1][0] = 
a
;

1789 
x
[1][1] = 
a
;

1790 
x
[1][2] = 
a
;

1791 
x
[1][3] = 
a
;

1792 
x
[2][0] = 
a
;

1793 
x
[2][1] = 
a
;

1794 
x
[2][2] = 
a
;

1795 
x
[2][3] = 
a
;

1796 
x
[3][0] = 
a
;

1797 
x
[3][1] = 
a
;

1798 
x
[3][2] = 
a
;

1799 
x
[3][3] = 
a
;

1800 
	}
}

1802 
	gãm∂©e
 <
˛ass
 
	gT
>

1803 
ölöe


1804 
	gM©rix44
<
	gT
>::
	$M©rix44
 (c⁄° 
T
 
a
[4][4])

1806 
x
[0][0] = 
a
[0][0];

1807 
x
[0][1] = 
a
[0][1];

1808 
x
[0][2] = 
a
[0][2];

1809 
x
[0][3] = 
a
[0][3];

1810 
x
[1][0] = 
a
[1][0];

1811 
x
[1][1] = 
a
[1][1];

1812 
x
[1][2] = 
a
[1][2];

1813 
x
[1][3] = 
a
[1][3];

1814 
x
[2][0] = 
a
[2][0];

1815 
x
[2][1] = 
a
[2][1];

1816 
x
[2][2] = 
a
[2][2];

1817 
x
[2][3] = 
a
[2][3];

1818 
x
[3][0] = 
a
[3][0];

1819 
x
[3][1] = 
a
[3][1];

1820 
x
[3][2] = 
a
[3][2];

1821 
x
[3][3] = 
a
[3][3];

1822 
	}
}

1824 
	gãm∂©e
 <
˛ass
 
	gT
>

1825 
ölöe


1826 
	gM©rix44
<
	gT
>::
	$M©rix44
 (
T
 
a
, T 
b
, T 
c
, T 
d
, T 
e
, T 
f
, T 
g
, T 
h
,

1827 
T
 
i
, T 
j
, T 
k
, T 
l
, T 
m
, T 
n
, T 
o
, T 
p
)

1829 
x
[0][0] = 
a
;

1830 
x
[0][1] = 
b
;

1831 
x
[0][2] = 
c
;

1832 
x
[0][3] = 
d
;

1833 
x
[1][0] = 
e
;

1834 
x
[1][1] = 
f
;

1835 
x
[1][2] = 
g
;

1836 
x
[1][3] = 
h
;

1837 
x
[2][0] = 
i
;

1838 
x
[2][1] = 
j
;

1839 
x
[2][2] = 
k
;

1840 
x
[2][3] = 
l
;

1841 
x
[3][0] = 
m
;

1842 
x
[3][1] = 
n
;

1843 
x
[3][2] = 
o
;

1844 
x
[3][3] = 
p
;

1845 
	}
}

1848 
	gãm∂©e
 <
˛ass
 
	gT
>

1849 
ölöe


1850 
	gM©rix44
<
	gT
>::
M©rix44
 (
M©rix33
<
T
> 
r
, 
Vec3
<T> 
t
)

1852 
	gx
[0][0] = 
r
[0][0];

1853 
	gx
[0][1] = 
r
[0][1];

1854 
	gx
[0][2] = 
r
[0][2];

1855 
	gx
[0][3] = 0;

1856 
	gx
[1][0] = 
r
[1][0];

1857 
	gx
[1][1] = 
r
[1][1];

1858 
	gx
[1][2] = 
r
[1][2];

1859 
	gx
[1][3] = 0;

1860 
	gx
[2][0] = 
r
[2][0];

1861 
	gx
[2][1] = 
r
[2][1];

1862 
	gx
[2][2] = 
r
[2][2];

1863 
	gx
[2][3] = 0;

1864 
	gx
[3][0] = 
t
[0];

1865 
	gx
[3][1] = 
t
[1];

1866 
	gx
[3][2] = 
t
[2];

1867 
	gx
[3][3] = 1;

1870 
	gãm∂©e
 <
˛ass
 
	gT
>

1871 
ölöe


1872 
	gM©rix44
<
	gT
>::
	$M©rix44
 (c⁄° 
M©rix44
 &
v
)

1874 
x
[0][0] = 
v
.x[0][0];

1875 
x
[0][1] = 
v
.x[0][1];

1876 
x
[0][2] = 
v
.x[0][2];

1877 
x
[0][3] = 
v
.x[0][3];

1878 
x
[1][0] = 
v
.x[1][0];

1879 
x
[1][1] = 
v
.x[1][1];

1880 
x
[1][2] = 
v
.x[1][2];

1881 
x
[1][3] = 
v
.x[1][3];

1882 
x
[2][0] = 
v
.x[2][0];

1883 
x
[2][1] = 
v
.x[2][1];

1884 
x
[2][2] = 
v
.x[2][2];

1885 
x
[2][3] = 
v
.x[2][3];

1886 
x
[3][0] = 
v
.x[3][0];

1887 
x
[3][1] = 
v
.x[3][1];

1888 
x
[3][2] = 
v
.x[3][2];

1889 
x
[3][3] = 
v
.x[3][3];

1890 
	}
}

1892 
	gãm∂©e
 <
˛ass
 
	gT
>

1893 
ölöe
 c⁄° 
	gM©rix44
<
	gT
> &

1894 
	gM©rix44
<
	gT
>::
›î©‹
 = (c⁄° 
M©rix44
 &
v
)

1896 
x
[0][0] = 
v
.x[0][0];

1897 
	gx
[0][1] = 
v
.
x
[0][1];

1898 
	gx
[0][2] = 
v
.
x
[0][2];

1899 
	gx
[0][3] = 
v
.
x
[0][3];

1900 
	gx
[1][0] = 
v
.
x
[1][0];

1901 
	gx
[1][1] = 
v
.
x
[1][1];

1902 
	gx
[1][2] = 
v
.
x
[1][2];

1903 
	gx
[1][3] = 
v
.
x
[1][3];

1904 
	gx
[2][0] = 
v
.
x
[2][0];

1905 
	gx
[2][1] = 
v
.
x
[2][1];

1906 
	gx
[2][2] = 
v
.
x
[2][2];

1907 
	gx
[2][3] = 
v
.
x
[2][3];

1908 
	gx
[3][0] = 
v
.
x
[3][0];

1909 
	gx
[3][1] = 
v
.
x
[3][1];

1910 
	gx
[3][2] = 
v
.
x
[3][2];

1911 
	gx
[3][3] = 
v
.
x
[3][3];

1912  *
	gthis
;

1915 
	gãm∂©e
 <
˛ass
 
	gT
>

1916 
ölöe
 c⁄° 
	gM©rix44
<
	gT
> &

1917 
	gM©rix44
<
	gT
>::
›î©‹
 = (
T
 
a
)

1919 
x
[0][0] = 
a
;

1920 
	gx
[0][1] = 
a
;

1921 
	gx
[0][2] = 
a
;

1922 
	gx
[0][3] = 
a
;

1923 
	gx
[1][0] = 
a
;

1924 
	gx
[1][1] = 
a
;

1925 
	gx
[1][2] = 
a
;

1926 
	gx
[1][3] = 
a
;

1927 
	gx
[2][0] = 
a
;

1928 
	gx
[2][1] = 
a
;

1929 
	gx
[2][2] = 
a
;

1930 
	gx
[2][3] = 
a
;

1931 
	gx
[3][0] = 
a
;

1932 
	gx
[3][1] = 
a
;

1933 
	gx
[3][2] = 
a
;

1934 
	gx
[3][3] = 
a
;

1935  *
	gthis
;

1938 
	gãm∂©e
 <
˛ass
 
	gT
>

1939 
ölöe
 
T
 *

1940 
	gM©rix44
<
	gT
>::
	$gëVÆue
 ()

1942  (
T
 *Ë&
x
[0][0];

1943 
	}
}

1945 
	gãm∂©e
 <
˛ass
 
	gT
>

1946 
ölöe
 c⁄° 
T
 *

1947 
	gM©rix44
<
	gT
>::
	$gëVÆue
 () const

1949  (c⁄° 
T
 *Ë&
x
[0][0];

1950 
	}
}

1952 
	gãm∂©e
 <
˛ass
 
	gT
>

1953 
	gãm∂©e
 <
˛ass
 
	gS
>

1954 
ölöe
 

1955 
	gM©rix44
<
	gT
>::
gëVÆue
 (
M©rix44
<
S
> &
v
) const

1957 
v
.
x
[0][0] = x[0][0];

1958 
	gv
.
	gx
[0][1] = 
x
[0][1];

1959 
	gv
.
	gx
[0][2] = 
x
[0][2];

1960 
	gv
.
	gx
[0][3] = 
x
[0][3];

1961 
	gv
.
	gx
[1][0] = 
x
[1][0];

1962 
	gv
.
	gx
[1][1] = 
x
[1][1];

1963 
	gv
.
	gx
[1][2] = 
x
[1][2];

1964 
	gv
.
	gx
[1][3] = 
x
[1][3];

1965 
	gv
.
	gx
[2][0] = 
x
[2][0];

1966 
	gv
.
	gx
[2][1] = 
x
[2][1];

1967 
	gv
.
	gx
[2][2] = 
x
[2][2];

1968 
	gv
.
	gx
[2][3] = 
x
[2][3];

1969 
	gv
.
	gx
[3][0] = 
x
[3][0];

1970 
	gv
.
	gx
[3][1] = 
x
[3][1];

1971 
	gv
.
	gx
[3][2] = 
x
[3][2];

1972 
	gv
.
	gx
[3][3] = 
x
[3][3];

1975 
	gãm∂©e
 <
˛ass
 
	gT
>

1976 
	gãm∂©e
 <
˛ass
 
	gS
>

1977 
ölöe
 
	gM©rix44
<
	gT
> &

1978 
	gM©rix44
<
	gT
>::
£tVÆue
 (c⁄° 
M©rix44
<
S
> &
v
)

1980 
x
[0][0] = 
v
.x[0][0];

1981 
	gx
[0][1] = 
v
.
x
[0][1];

1982 
	gx
[0][2] = 
v
.
x
[0][2];

1983 
	gx
[0][3] = 
v
.
x
[0][3];

1984 
	gx
[1][0] = 
v
.
x
[1][0];

1985 
	gx
[1][1] = 
v
.
x
[1][1];

1986 
	gx
[1][2] = 
v
.
x
[1][2];

1987 
	gx
[1][3] = 
v
.
x
[1][3];

1988 
	gx
[2][0] = 
v
.
x
[2][0];

1989 
	gx
[2][1] = 
v
.
x
[2][1];

1990 
	gx
[2][2] = 
v
.
x
[2][2];

1991 
	gx
[2][3] = 
v
.
x
[2][3];

1992 
	gx
[3][0] = 
v
.
x
[3][0];

1993 
	gx
[3][1] = 
v
.
x
[3][1];

1994 
	gx
[3][2] = 
v
.
x
[3][2];

1995 
	gx
[3][3] = 
v
.
x
[3][3];

1996  *
	gthis
;

1999 
	gãm∂©e
 <
˛ass
 
	gT
>

2000 
	gãm∂©e
 <
˛ass
 
	gS
>

2001 
ölöe
 
	gM©rix44
<
	gT
> &

2002 
	gM©rix44
<
	gT
>::
£tTheM©rix
 (c⁄° 
M©rix44
<
S
> &
v
)

2004 
x
[0][0] = 
v
.x[0][0];

2005 
	gx
[0][1] = 
v
.
x
[0][1];

2006 
	gx
[0][2] = 
v
.
x
[0][2];

2007 
	gx
[0][3] = 
v
.
x
[0][3];

2008 
	gx
[1][0] = 
v
.
x
[1][0];

2009 
	gx
[1][1] = 
v
.
x
[1][1];

2010 
	gx
[1][2] = 
v
.
x
[1][2];

2011 
	gx
[1][3] = 
v
.
x
[1][3];

2012 
	gx
[2][0] = 
v
.
x
[2][0];

2013 
	gx
[2][1] = 
v
.
x
[2][1];

2014 
	gx
[2][2] = 
v
.
x
[2][2];

2015 
	gx
[2][3] = 
v
.
x
[2][3];

2016 
	gx
[3][0] = 
v
.
x
[3][0];

2017 
	gx
[3][1] = 
v
.
x
[3][1];

2018 
	gx
[3][2] = 
v
.
x
[3][2];

2019 
	gx
[3][3] = 
v
.
x
[3][3];

2020  *
	gthis
;

2023 
	gãm∂©e
 <
˛ass
 
	gT
>

2024 
ölöe
 

2025 
	gM©rix44
<
	gT
>::
	$makeIdítôy
()

2027 
x
[0][0] = 1;

2028 
x
[0][1] = 0;

2029 
x
[0][2] = 0;

2030 
x
[0][3] = 0;

2031 
x
[1][0] = 0;

2032 
x
[1][1] = 1;

2033 
x
[1][2] = 0;

2034 
x
[1][3] = 0;

2035 
x
[2][0] = 0;

2036 
x
[2][1] = 0;

2037 
x
[2][2] = 1;

2038 
x
[2][3] = 0;

2039 
x
[3][0] = 0;

2040 
x
[3][1] = 0;

2041 
x
[3][2] = 0;

2042 
x
[3][3] = 1;

2043 
	}
}

2045 
	gãm∂©e
 <
˛ass
 
	gT
>

2046 
boﬁ


2047 
	gM©rix44
<
	gT
>::
›î©‹
 =(c⁄° 
M©rix44
 &
v
) const

2049  
x
[0][0] =
v
.x[0][0] &&

2050 
x
[0][1] =
v
.x[0][1] &&

2051 
x
[0][2] =
v
.x[0][2] &&

2052 
x
[0][3] =
v
.x[0][3] &&

2053 
x
[1][0] =
v
.x[1][0] &&

2054 
x
[1][1] =
v
.x[1][1] &&

2055 
x
[1][2] =
v
.x[1][2] &&

2056 
x
[1][3] =
v
.x[1][3] &&

2057 
x
[2][0] =
v
.x[2][0] &&

2058 
x
[2][1] =
v
.x[2][1] &&

2059 
x
[2][2] =
v
.x[2][2] &&

2060 
x
[2][3] =
v
.x[2][3] &&

2061 
x
[3][0] =
v
.x[3][0] &&

2062 
x
[3][1] =
v
.x[3][1] &&

2063 
x
[3][2] =
v
.x[3][2] &&

2064 
x
[3][3] =
v
.x[3][3];

2067 
	gãm∂©e
 <
˛ass
 
	gT
>

2068 
boﬁ


2069 
	gM©rix44
<
	gT
>::
›î©‹
 !(c⁄° 
M©rix44
 &
v
) const

2071  
x
[0][0] !
v
.x[0][0] ||

2072 
x
[0][1] !
v
.x[0][1] ||

2073 
x
[0][2] !
v
.x[0][2] ||

2074 
x
[0][3] !
v
.x[0][3] ||

2075 
x
[1][0] !
v
.x[1][0] ||

2076 
x
[1][1] !
v
.x[1][1] ||

2077 
x
[1][2] !
v
.x[1][2] ||

2078 
x
[1][3] !
v
.x[1][3] ||

2079 
x
[2][0] !
v
.x[2][0] ||

2080 
x
[2][1] !
v
.x[2][1] ||

2081 
x
[2][2] !
v
.x[2][2] ||

2082 
x
[2][3] !
v
.x[2][3] ||

2083 
x
[3][0] !
v
.x[3][0] ||

2084 
x
[3][1] !
v
.x[3][1] ||

2085 
x
[3][2] !
v
.x[3][2] ||

2086 
x
[3][3] !
v
.x[3][3];

2089 
	gãm∂©e
 <
˛ass
 
	gT
>

2090 
boﬁ


2091 
	gM©rix44
<
	gT
>::
equÆWôhAbsEº‹
 (c⁄° 
M©rix44
<
T
> &
m
, T 
e
) const

2093 
	gi
 = 0; i < 4; i++)

2094 
	gj
 = 0; j < 4; j++)

2095 i‡(!
	gIm©h
::
equÆWôhAbsEº‹
 ((*
this
)[
i
][
j
], 
m
[i][j], 
e
))

2096  
	gÁl£
;

2098  
	gåue
;

2101 
	gãm∂©e
 <
˛ass
 
	gT
>

2102 
boﬁ


2103 
	gM©rix44
<
	gT
>::
equÆWôhRñEº‹
 (c⁄° 
M©rix44
<
T
> &
m
, T 
e
) const

2105 
	gi
 = 0; i < 4; i++)

2106 
	gj
 = 0; j < 4; j++)

2107 i‡(!
	gIm©h
::
equÆWôhRñEº‹
 ((*
this
)[
i
][
j
], 
m
[i][j], 
e
))

2108  
	gÁl£
;

2110  
	gåue
;

2113 
	gãm∂©e
 <
˛ass
 
	gT
>

2114 c⁄° 
	gM©rix44
<
	gT
> &

2115 
	gM©rix44
<
	gT
>::
›î©‹
 +(c⁄° 
M©rix44
<
T
> &
v
)

2117 
x
[0][0] +
v
.x[0][0];

2118 
	gx
[0][1] +
v
.
x
[0][1];

2119 
	gx
[0][2] +
v
.
x
[0][2];

2120 
	gx
[0][3] +
v
.
x
[0][3];

2121 
	gx
[1][0] +
v
.
x
[1][0];

2122 
	gx
[1][1] +
v
.
x
[1][1];

2123 
	gx
[1][2] +
v
.
x
[1][2];

2124 
	gx
[1][3] +
v
.
x
[1][3];

2125 
	gx
[2][0] +
v
.
x
[2][0];

2126 
	gx
[2][1] +
v
.
x
[2][1];

2127 
	gx
[2][2] +
v
.
x
[2][2];

2128 
	gx
[2][3] +
v
.
x
[2][3];

2129 
	gx
[3][0] +
v
.
x
[3][0];

2130 
	gx
[3][1] +
v
.
x
[3][1];

2131 
	gx
[3][2] +
v
.
x
[3][2];

2132 
	gx
[3][3] +
v
.
x
[3][3];

2134  *
	gthis
;

2137 
	gãm∂©e
 <
˛ass
 
	gT
>

2138 c⁄° 
	gM©rix44
<
	gT
> &

2139 
	gM©rix44
<
	gT
>::
›î©‹
 +(
T
 
a
)

2141 
x
[0][0] +
a
;

2142 
	gx
[0][1] +
a
;

2143 
	gx
[0][2] +
a
;

2144 
	gx
[0][3] +
a
;

2145 
	gx
[1][0] +
a
;

2146 
	gx
[1][1] +
a
;

2147 
	gx
[1][2] +
a
;

2148 
	gx
[1][3] +
a
;

2149 
	gx
[2][0] +
a
;

2150 
	gx
[2][1] +
a
;

2151 
	gx
[2][2] +
a
;

2152 
	gx
[2][3] +
a
;

2153 
	gx
[3][0] +
a
;

2154 
	gx
[3][1] +
a
;

2155 
	gx
[3][2] +
a
;

2156 
	gx
[3][3] +
a
;

2158  *
	gthis
;

2161 
	gãm∂©e
 <
˛ass
 
	gT
>

2162 
	gM©rix44
<
	gT
>

2163 
	gM©rix44
<
	gT
>::
›î©‹
 + (c⁄° 
M©rix44
<
T
> &
v
) const

2165  
M©rix44
 (
x
[0][0] + 
v
.x[0][0],

2166 
x
[0][1] + 
v
.x[0][1],

2167 
x
[0][2] + 
v
.x[0][2],

2168 
x
[0][3] + 
v
.x[0][3],

2169 
x
[1][0] + 
v
.x[1][0],

2170 
x
[1][1] + 
v
.x[1][1],

2171 
x
[1][2] + 
v
.x[1][2],

2172 
x
[1][3] + 
v
.x[1][3],

2173 
x
[2][0] + 
v
.x[2][0],

2174 
x
[2][1] + 
v
.x[2][1],

2175 
x
[2][2] + 
v
.x[2][2],

2176 
x
[2][3] + 
v
.x[2][3],

2177 
x
[3][0] + 
v
.x[3][0],

2178 
x
[3][1] + 
v
.x[3][1],

2179 
x
[3][2] + 
v
.x[3][2],

2180 
x
[3][3] + 
v
.x[3][3]);

2183 
	gãm∂©e
 <
˛ass
 
	gT
>

2184 c⁄° 
	gM©rix44
<
	gT
> &

2185 
	gM©rix44
<
	gT
>::
›î©‹
 -(c⁄° 
M©rix44
<
T
> &
v
)

2187 
x
[0][0] -
v
.x[0][0];

2188 
	gx
[0][1] -
v
.
x
[0][1];

2189 
	gx
[0][2] -
v
.
x
[0][2];

2190 
	gx
[0][3] -
v
.
x
[0][3];

2191 
	gx
[1][0] -
v
.
x
[1][0];

2192 
	gx
[1][1] -
v
.
x
[1][1];

2193 
	gx
[1][2] -
v
.
x
[1][2];

2194 
	gx
[1][3] -
v
.
x
[1][3];

2195 
	gx
[2][0] -
v
.
x
[2][0];

2196 
	gx
[2][1] -
v
.
x
[2][1];

2197 
	gx
[2][2] -
v
.
x
[2][2];

2198 
	gx
[2][3] -
v
.
x
[2][3];

2199 
	gx
[3][0] -
v
.
x
[3][0];

2200 
	gx
[3][1] -
v
.
x
[3][1];

2201 
	gx
[3][2] -
v
.
x
[3][2];

2202 
	gx
[3][3] -
v
.
x
[3][3];

2204  *
	gthis
;

2207 
	gãm∂©e
 <
˛ass
 
	gT
>

2208 c⁄° 
	gM©rix44
<
	gT
> &

2209 
	gM©rix44
<
	gT
>::
›î©‹
 -(
T
 
a
)

2211 
x
[0][0] -
a
;

2212 
	gx
[0][1] -
a
;

2213 
	gx
[0][2] -
a
;

2214 
	gx
[0][3] -
a
;

2215 
	gx
[1][0] -
a
;

2216 
	gx
[1][1] -
a
;

2217 
	gx
[1][2] -
a
;

2218 
	gx
[1][3] -
a
;

2219 
	gx
[2][0] -
a
;

2220 
	gx
[2][1] -
a
;

2221 
	gx
[2][2] -
a
;

2222 
	gx
[2][3] -
a
;

2223 
	gx
[3][0] -
a
;

2224 
	gx
[3][1] -
a
;

2225 
	gx
[3][2] -
a
;

2226 
	gx
[3][3] -
a
;

2228  *
	gthis
;

2231 
	gãm∂©e
 <
˛ass
 
	gT
>

2232 
	gM©rix44
<
	gT
>

2233 
	gM©rix44
<
	gT
>::
›î©‹
 - (c⁄° 
M©rix44
<
T
> &
v
) const

2235  
M©rix44
 (
x
[0][0] - 
v
.x[0][0],

2236 
x
[0][1] - 
v
.x[0][1],

2237 
x
[0][2] - 
v
.x[0][2],

2238 
x
[0][3] - 
v
.x[0][3],

2239 
x
[1][0] - 
v
.x[1][0],

2240 
x
[1][1] - 
v
.x[1][1],

2241 
x
[1][2] - 
v
.x[1][2],

2242 
x
[1][3] - 
v
.x[1][3],

2243 
x
[2][0] - 
v
.x[2][0],

2244 
x
[2][1] - 
v
.x[2][1],

2245 
x
[2][2] - 
v
.x[2][2],

2246 
x
[2][3] - 
v
.x[2][3],

2247 
x
[3][0] - 
v
.x[3][0],

2248 
x
[3][1] - 
v
.x[3][1],

2249 
x
[3][2] - 
v
.x[3][2],

2250 
x
[3][3] - 
v
.x[3][3]);

2253 
	gãm∂©e
 <
˛ass
 
	gT
>

2254 
	gM©rix44
<
	gT
>

2255 
	gM©rix44
<
	gT
>::
›î©‹
 - () const

2257  
M©rix44
 (-
x
[0][0],

2258 -
x
[0][1],

2259 -
x
[0][2],

2260 -
x
[0][3],

2261 -
x
[1][0],

2262 -
x
[1][1],

2263 -
x
[1][2],

2264 -
x
[1][3],

2265 -
x
[2][0],

2266 -
x
[2][1],

2267 -
x
[2][2],

2268 -
x
[2][3],

2269 -
x
[3][0],

2270 -
x
[3][1],

2271 -
x
[3][2],

2272 -
x
[3][3]);

2275 
	gãm∂©e
 <
˛ass
 
	gT
>

2276 c⁄° 
	gM©rix44
<
	gT
> &

2277 
	gM©rix44
<
	gT
>::
	$√g©e
 ()

2279 
x
[0][0] = -x[0][0];

2280 
x
[0][1] = -x[0][1];

2281 
x
[0][2] = -x[0][2];

2282 
x
[0][3] = -x[0][3];

2283 
x
[1][0] = -x[1][0];

2284 
x
[1][1] = -x[1][1];

2285 
x
[1][2] = -x[1][2];

2286 
x
[1][3] = -x[1][3];

2287 
x
[2][0] = -x[2][0];

2288 
x
[2][1] = -x[2][1];

2289 
x
[2][2] = -x[2][2];

2290 
x
[2][3] = -x[2][3];

2291 
x
[3][0] = -x[3][0];

2292 
x
[3][1] = -x[3][1];

2293 
x
[3][2] = -x[3][2];

2294 
x
[3][3] = -x[3][3];

2296  *
this
;

2297 
	}
}

2299 
	gãm∂©e
 <
˛ass
 
	gT
>

2300 c⁄° 
	gM©rix44
<
	gT
> &

2301 
	gM©rix44
<
	gT
>::
›î©‹
 *(
T
 
a
)

2303 
x
[0][0] *
a
;

2304 
	gx
[0][1] *
a
;

2305 
	gx
[0][2] *
a
;

2306 
	gx
[0][3] *
a
;

2307 
	gx
[1][0] *
a
;

2308 
	gx
[1][1] *
a
;

2309 
	gx
[1][2] *
a
;

2310 
	gx
[1][3] *
a
;

2311 
	gx
[2][0] *
a
;

2312 
	gx
[2][1] *
a
;

2313 
	gx
[2][2] *
a
;

2314 
	gx
[2][3] *
a
;

2315 
	gx
[3][0] *
a
;

2316 
	gx
[3][1] *
a
;

2317 
	gx
[3][2] *
a
;

2318 
	gx
[3][3] *
a
;

2320  *
	gthis
;

2323 
	gãm∂©e
 <
˛ass
 
	gT
>

2324 
	gM©rix44
<
	gT
>

2325 
	gM©rix44
<
	gT
>::
›î©‹
 * (
T
 
a
) const

2327  
M©rix44
 (
x
[0][0] * 
a
,

2328 
x
[0][1] * 
a
,

2329 
x
[0][2] * 
a
,

2330 
x
[0][3] * 
a
,

2331 
x
[1][0] * 
a
,

2332 
x
[1][1] * 
a
,

2333 
x
[1][2] * 
a
,

2334 
x
[1][3] * 
a
,

2335 
x
[2][0] * 
a
,

2336 
x
[2][1] * 
a
,

2337 
x
[2][2] * 
a
,

2338 
x
[2][3] * 
a
,

2339 
x
[3][0] * 
a
,

2340 
x
[3][1] * 
a
,

2341 
x
[3][2] * 
a
,

2342 
x
[3][3] * 
a
);

2345 
	gãm∂©e
 <
˛ass
 
	gT
>

2346 
ölöe
 
	gM©rix44
<
	gT
>

2347 
	g›î©‹
 * (
T
 
	ga
, c⁄° 
	gM©rix44
<
	gT
> &
	gv
)

2349  
v
 * 
	ga
;

2352 
	gãm∂©e
 <
˛ass
 
	gT
>

2353 
ölöe
 c⁄° 
	gM©rix44
<
	gT
> &

2354 
	gM©rix44
<
	gT
>::
›î©‹
 *(c⁄° 
M©rix44
<
T
> &
v
)

2356 
M©rix44
 
tmp
 (
T
 (0));

2358 
mu…ùly
 (*
this
, 
v
, 
tmp
);

2359 *
	gthis
 = 
tmp
;

2360  *
	gthis
;

2363 
	gãm∂©e
 <
˛ass
 
	gT
>

2364 
ölöe
 
	gM©rix44
<
	gT
>

2365 
	gM©rix44
<
	gT
>::
›î©‹
 * (c⁄° 
M©rix44
<
T
> &
v
) const

2367 
M©rix44
 
tmp
 (
T
 (0));

2369 
mu…ùly
 (*
this
, 
v
, 
tmp
);

2370  
	gtmp
;

2373 
	gãm∂©e
 <
˛ass
 
	gT
>

2375 
	gM©rix44
<
	gT
>::
mu…ùly
 (c⁄° 
M©rix44
<
T
> &
a
,

2376 c⁄° 
M©rix44
<
T
> &
b
,

2377 
M©rix44
<
T
> &
c
)

2379 c⁄° 
T
 * 
ª°ri˘
 
	g≠
 = &
a
.
x
[0][0];

2380 c⁄° 
T
 * 
ª°ri˘
 
	gbp
 = &
b
.
x
[0][0];

2381 
T
 * 
ª°ri˘
 
	g˝
 = &
c
.
x
[0][0];

2383 
T
 
	ga0
, 
	ga1
, 
	ga2
, 
	ga3
;

2385 
	ga0
 = 
≠
[0];

2386 
	ga1
 = 
≠
[1];

2387 
	ga2
 = 
≠
[2];

2388 
	ga3
 = 
≠
[3];

2390 
	g˝
[0] = 
a0
 * 
bp
[0] + 
a1
 * bp[4] + 
a2
 * bp[8] + 
a3
 * bp[12];

2391 
	g˝
[1] = 
a0
 * 
bp
[1] + 
a1
 * bp[5] + 
a2
 * bp[9] + 
a3
 * bp[13];

2392 
	g˝
[2] = 
a0
 * 
bp
[2] + 
a1
 * bp[6] + 
a2
 * bp[10] + 
a3
 * bp[14];

2393 
	g˝
[3] = 
a0
 * 
bp
[3] + 
a1
 * bp[7] + 
a2
 * bp[11] + 
a3
 * bp[15];

2395 
	ga0
 = 
≠
[4];

2396 
	ga1
 = 
≠
[5];

2397 
	ga2
 = 
≠
[6];

2398 
	ga3
 = 
≠
[7];

2400 
	g˝
[4] = 
a0
 * 
bp
[0] + 
a1
 * bp[4] + 
a2
 * bp[8] + 
a3
 * bp[12];

2401 
	g˝
[5] = 
a0
 * 
bp
[1] + 
a1
 * bp[5] + 
a2
 * bp[9] + 
a3
 * bp[13];

2402 
	g˝
[6] = 
a0
 * 
bp
[2] + 
a1
 * bp[6] + 
a2
 * bp[10] + 
a3
 * bp[14];

2403 
	g˝
[7] = 
a0
 * 
bp
[3] + 
a1
 * bp[7] + 
a2
 * bp[11] + 
a3
 * bp[15];

2405 
	ga0
 = 
≠
[8];

2406 
	ga1
 = 
≠
[9];

2407 
	ga2
 = 
≠
[10];

2408 
	ga3
 = 
≠
[11];

2410 
	g˝
[8] = 
a0
 * 
bp
[0] + 
a1
 * bp[4] + 
a2
 * bp[8] + 
a3
 * bp[12];

2411 
	g˝
[9] = 
a0
 * 
bp
[1] + 
a1
 * bp[5] + 
a2
 * bp[9] + 
a3
 * bp[13];

2412 
	g˝
[10] = 
a0
 * 
bp
[2] + 
a1
 * bp[6] + 
a2
 * bp[10] + 
a3
 * bp[14];

2413 
	g˝
[11] = 
a0
 * 
bp
[3] + 
a1
 * bp[7] + 
a2
 * bp[11] + 
a3
 * bp[15];

2415 
	ga0
 = 
≠
[12];

2416 
	ga1
 = 
≠
[13];

2417 
	ga2
 = 
≠
[14];

2418 
	ga3
 = 
≠
[15];

2420 
	g˝
[12] = 
a0
 * 
bp
[0] + 
a1
 * bp[4] + 
a2
 * bp[8] + 
a3
 * bp[12];

2421 
	g˝
[13] = 
a0
 * 
bp
[1] + 
a1
 * bp[5] + 
a2
 * bp[9] + 
a3
 * bp[13];

2422 
	g˝
[14] = 
a0
 * 
bp
[2] + 
a1
 * bp[6] + 
a2
 * bp[10] + 
a3
 * bp[14];

2423 
	g˝
[15] = 
a0
 * 
bp
[3] + 
a1
 * bp[7] + 
a2
 * bp[11] + 
a3
 * bp[15];

2426 
	gãm∂©e
 <
˛ass
 
	gT
>Åem∂©ê<˛as†
	gS
>

2428 
	gM©rix44
<
	gT
>::
mu…VecM©rix
(c⁄° 
Vec3
<
S
> &
§c
, Vec3<S> &
d°
) const

2430 
S
 
	ga
, 
	gb
, 
	gc
, 
	gw
;

2432 
	ga
 = 
§c
[0] * 
x
[0][0] + src[1] * x[1][0] + src[2] * x[2][0] + x[3][0];

2433 
	gb
 = 
§c
[0] * 
x
[0][1] + src[1] * x[1][1] + src[2] * x[2][1] + x[3][1];

2434 
	gc
 = 
§c
[0] * 
x
[0][2] + src[1] * x[1][2] + src[2] * x[2][2] + x[3][2];

2435 
	gw
 = 
§c
[0] * 
x
[0][3] + src[1] * x[1][3] + src[2] * x[2][3] + x[3][3];

2437 
	gd°
.
	gx
 = 
a
 / 
w
;

2438 
	gd°
.
	gy
 = 
b
 / 
w
;

2439 
	gd°
.
	gz
 = 
c
 / 
w
;

2442 
	gãm∂©e
 <
˛ass
 
	gT
>Åem∂©ê<˛as†
	gS
>

2444 
	gM©rix44
<
	gT
>::
mu…DúM©rix
(c⁄° 
Vec3
<
S
> &
§c
, Vec3<S> &
d°
) const

2446 
S
 
	ga
, 
	gb
, 
	gc
;

2448 
	ga
 = 
§c
[0] * 
x
[0][0] + src[1] * x[1][0] + src[2] * x[2][0];

2449 
	gb
 = 
§c
[0] * 
x
[0][1] + src[1] * x[1][1] + src[2] * x[2][1];

2450 
	gc
 = 
§c
[0] * 
x
[0][2] + src[1] * x[1][2] + src[2] * x[2][2];

2452 
	gd°
.
	gx
 = 
a
;

2453 
	gd°
.
	gy
 = 
b
;

2454 
	gd°
.
	gz
 = 
c
;

2457 
	gãm∂©e
 <
˛ass
 
	gT
>

2458 c⁄° 
	gM©rix44
<
	gT
> &

2459 
	gM©rix44
<
	gT
>::
›î©‹
 /(
T
 
a
)

2461 
x
[0][0] /
a
;

2462 
	gx
[0][1] /
a
;

2463 
	gx
[0][2] /
a
;

2464 
	gx
[0][3] /
a
;

2465 
	gx
[1][0] /
a
;

2466 
	gx
[1][1] /
a
;

2467 
	gx
[1][2] /
a
;

2468 
	gx
[1][3] /
a
;

2469 
	gx
[2][0] /
a
;

2470 
	gx
[2][1] /
a
;

2471 
	gx
[2][2] /
a
;

2472 
	gx
[2][3] /
a
;

2473 
	gx
[3][0] /
a
;

2474 
	gx
[3][1] /
a
;

2475 
	gx
[3][2] /
a
;

2476 
	gx
[3][3] /
a
;

2478  *
	gthis
;

2481 
	gãm∂©e
 <
˛ass
 
	gT
>

2482 
	gM©rix44
<
	gT
>

2483 
	gM©rix44
<
	gT
>::
›î©‹
 / (
T
 
a
) const

2485  
M©rix44
 (
x
[0][0] / 
a
,

2486 
x
[0][1] / 
a
,

2487 
x
[0][2] / 
a
,

2488 
x
[0][3] / 
a
,

2489 
x
[1][0] / 
a
,

2490 
x
[1][1] / 
a
,

2491 
x
[1][2] / 
a
,

2492 
x
[1][3] / 
a
,

2493 
x
[2][0] / 
a
,

2494 
x
[2][1] / 
a
,

2495 
x
[2][2] / 
a
,

2496 
x
[2][3] / 
a
,

2497 
x
[3][0] / 
a
,

2498 
x
[3][1] / 
a
,

2499 
x
[3][2] / 
a
,

2500 
x
[3][3] / 
a
);

2503 
	gãm∂©e
 <
˛ass
 
	gT
>

2504 c⁄° 
	gM©rix44
<
	gT
> &

2505 
	gM©rix44
<
	gT
>::
	$å™•o£
 ()

2507 
M©rix44
 
	`tmp
 (
x
[0][0],

2508 
x
[1][0],

2509 
x
[2][0],

2510 
x
[3][0],

2511 
x
[0][1],

2512 
x
[1][1],

2513 
x
[2][1],

2514 
x
[3][1],

2515 
x
[0][2],

2516 
x
[1][2],

2517 
x
[2][2],

2518 
x
[3][2],

2519 
x
[0][3],

2520 
x
[1][3],

2521 
x
[2][3],

2522 
x
[3][3]);

2523 *
this
 = 
tmp
;

2524  *
this
;

2525 
	}
}

2527 
	gãm∂©e
 <
˛ass
 
	gT
>

2528 
	gM©rix44
<
	gT
>

2529 
	gM©rix44
<
	gT
>::
	$å™•o£d
 () const

2531  
	`M©rix44
 (
x
[0][0],

2532 
x
[1][0],

2533 
x
[2][0],

2534 
x
[3][0],

2535 
x
[0][1],

2536 
x
[1][1],

2537 
x
[2][1],

2538 
x
[3][1],

2539 
x
[0][2],

2540 
x
[1][2],

2541 
x
[2][2],

2542 
x
[3][2],

2543 
x
[0][3],

2544 
x
[1][3],

2545 
x
[2][3],

2546 
x
[3][3]);

2547 
	}
}

2549 
	gãm∂©e
 <
˛ass
 
	gT
>

2550 c⁄° 
	gM©rix44
<
	gT
> &

2551 
	gM©rix44
<
	gT
>::
	$gjInvît
 (
boﬁ
 
sögExc
Ë
	`throw
 (
Iex
::
M©hExc
)

2553 *
this
 = 
	`gjInvî£
 (
sögExc
);

2554  *
this
;

2555 
	}
}

2557 
	gãm∂©e
 <
˛ass
 
	gT
>

2558 
	gM©rix44
<
	gT
>

2559 
	gM©rix44
<
	gT
>::
	$gjInvî£
 (
boﬁ
 
sögExc
Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
)

2561 
i
, 
j
, 
k
;

2562 
M©rix44
 
s
;

2563 
M©rix44
 
	`t
 (*
this
);

2567 
i
 = 0; i < 3 ; i++)

2569 
pivŸ
 = 
i
;

2571 
T
 
pivŸsize
 = 
t
[
i
][i];

2573 i‡(
pivŸsize
 < 0)

2574 
pivŸsize
 = -pivotsize;

2576 
j
 = 
i
 + 1; j < 4; j++)

2578 
T
 
tmp
 = 
t
[
j
][
i
];

2580 i‡(
tmp
 < 0)

2581 
tmp
 = -tmp;

2583 i‡(
tmp
 > 
pivŸsize
)

2585 
pivŸ
 = 
j
;

2586 
pivŸsize
 = 
tmp
;

2590 i‡(
pivŸsize
 == 0)

2592 i‡(
sögExc
)

2593 
throw
 ::
Im©h
::
	`SögM©rixExc
 ("Cannot invert singular matrix.");

2595  
	`M©rix44
();

2598 i‡(
pivŸ
 !
i
)

2600 
j
 = 0; j < 4; j++)

2602 
T
 
tmp
;

2604 
tmp
 = 
t
[
i
][
j
];

2605 
t
[
i
][
j
] =Å[
pivŸ
][j];

2606 
t
[
pivŸ
][
j
] = 
tmp
;

2608 
tmp
 = 
s
[
i
][
j
];

2609 
s
[
i
][
j
] = s[
pivŸ
][j];

2610 
s
[
pivŸ
][
j
] = 
tmp
;

2614 
j
 = 
i
 + 1; j < 4; j++)

2616 
T
 
f
 = 
t
[
j
][
i
] /Å[i][i];

2618 
k
 = 0; k < 4; k++)

2620 
t
[
j
][
k
] -
f
 *Å[
i
][k];

2621 
s
[
j
][
k
] -
f
 * s[
i
][k];

2628 
i
 = 3; i >= 0; --i)

2630 
T
 
f
;

2632 i‡((
f
 = 
t
[
i
][i]) == 0)

2634 i‡(
sögExc
)

2635 
throw
 ::
Im©h
::
	`SögM©rixExc
 ("Cannot invert singular matrix.");

2637  
	`M©rix44
();

2640 
j
 = 0; j < 4; j++)

2642 
t
[
i
][
j
] /
f
;

2643 
s
[
i
][
j
] /
f
;

2646 
j
 = 0; j < 
i
; j++)

2648 
f
 = 
t
[
j
][
i
];

2650 
k
 = 0; k < 4; k++)

2652 
t
[
j
][
k
] -
f
 *Å[
i
][k];

2653 
s
[
j
][
k
] -
f
 * s[
i
][k];

2658  
s
;

2659 
	}
}

2661 
	gãm∂©e
 <
˛ass
 
	gT
>

2662 c⁄° 
	gM©rix44
<
	gT
> &

2663 
	gM©rix44
<
	gT
>::
	$övît
 (
boﬁ
 
sögExc
Ë
	`throw
 (
Iex
::
M©hExc
)

2665 *
this
 = 
	`övî£
 (
sögExc
);

2666  *
this
;

2667 
	}
}

2669 
	gãm∂©e
 <
˛ass
 
	gT
>

2670 
	gM©rix44
<
	gT
>

2671 
	gM©rix44
<
	gT
>::
	$övî£
 (
boﬁ
 
sögExc
Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
)

2673 i‡(
x
[0][3] != 0 || x[1][3] != 0 || x[2][3] != 0 || x[3][3] != 1)

2674  
	`gjInvî£
(
sögExc
);

2676 
M©rix44
 
	`s
 (
x
[1][1] * x[2][2] - x[2][1] * x[1][2],

2677 
x
[2][1] * x[0][2] - x[0][1] * x[2][2],

2678 
x
[0][1] * x[1][2] - x[1][1] * x[0][2],

2681 
x
[2][0] * x[1][2] - x[1][0] * x[2][2],

2682 
x
[0][0] * x[2][2] - x[2][0] * x[0][2],

2683 
x
[1][0] * x[0][2] - x[0][0] * x[1][2],

2686 
x
[1][0] * x[2][1] - x[2][0] * x[1][1],

2687 
x
[2][0] * x[0][1] - x[0][0] * x[2][1],

2688 
x
[0][0] * x[1][1] - x[1][0] * x[0][1],

2696 
T
 
r
 = 
x
[0][0] * 
s
[0][0] + x[0][1] * s[1][0] + x[0][2] * s[2][0];

2698 i‡(
Im©h
::
	`abs
 (
r
) >= 1)

2700 
i
 = 0; i < 3; ++i)

2702 
j
 = 0; j < 3; ++j)

2704 
s
[
i
][
j
] /
r
;

2710 
T
 
mr
 = 
Im©h
::
	`abs
 (
r
Ë/ 
limôs
<T>::
	`smÆÀ°
();

2712 
i
 = 0; i < 3; ++i)

2714 
j
 = 0; j < 3; ++j)

2716 i‡(
mr
 > 
Im©h
::
	`abs
 (
s
[
i
][
j
]))

2718 
s
[
i
][
j
] /
r
;

2722 i‡(
sögExc
)

2723 
throw
 
	`SögM©rixExc
 ("Cannot invert singular matrix.");

2725  
	`M©rix44
();

2731 
s
[3][0] = -
x
[3][0] * s[0][0] - x[3][1] * s[1][0] - x[3][2] * s[2][0];

2732 
s
[3][1] = -
x
[3][0] * s[0][1] - x[3][1] * s[1][1] - x[3][2] * s[2][1];

2733 
s
[3][2] = -
x
[3][0] * s[0][2] - x[3][1] * s[1][2] - x[3][2] * s[2][2];

2735  
s
;

2736 
	}
}

2738 
	gãm∂©e
 <
˛ass
 
	gT
>

2739 
	gãm∂©e
 <
˛ass
 
	gS
>

2740 c⁄° 
	gM©rix44
<
	gT
> &

2741 
	gM©rix44
<
	gT
>::
£tEuÀrAngÀs
 (c⁄° 
Vec3
<
S
>& 
r
)

2743 
S
 
cos_rz
, 
	gsö_rz
, 
	gcos_ry
, 
	gsö_ry
, 
	gcos_rx
, 
	gsö_rx
;

2745 
	gcos_rz
 = 
M©h
<
T
>::
cos
 (
r
[2]);

2746 
	gcos_ry
 = 
M©h
<
T
>::
cos
 (
r
[1]);

2747 
	gcos_rx
 = 
M©h
<
T
>::
cos
 (
r
[0]);

2749 
	gsö_rz
 = 
M©h
<
T
>::
sö
 (
r
[2]);

2750 
	gsö_ry
 = 
M©h
<
T
>::
sö
 (
r
[1]);

2751 
	gsö_rx
 = 
M©h
<
T
>::
sö
 (
r
[0]);

2753 
	gx
[0][0] = 
cos_rz
 * 
cos_ry
;

2754 
	gx
[0][1] = 
sö_rz
 * 
cos_ry
;

2755 
	gx
[0][2] = -
sö_ry
;

2756 
	gx
[0][3] = 0;

2758 
	gx
[1][0] = -
sö_rz
 * 
cos_rx
 + 
cos_rz
 * 
sö_ry
 * 
sö_rx
;

2759 
	gx
[1][1] = 
cos_rz
 * 
cos_rx
 + 
sö_rz
 * 
sö_ry
 * 
sö_rx
;

2760 
	gx
[1][2] = 
cos_ry
 * 
sö_rx
;

2761 
	gx
[1][3] = 0;

2763 
	gx
[2][0] = 
sö_rz
 * 
sö_rx
 + 
cos_rz
 * 
sö_ry
 * 
cos_rx
;

2764 
	gx
[2][1] = -
cos_rz
 * 
sö_rx
 + 
sö_rz
 * 
sö_ry
 * 
cos_rx
;

2765 
	gx
[2][2] = 
cos_ry
 * 
cos_rx
;

2766 
	gx
[2][3] = 0;

2768 
	gx
[3][0] = 0;

2769 
	gx
[3][1] = 0;

2770 
	gx
[3][2] = 0;

2771 
	gx
[3][3] = 1;

2773  *
	gthis
;

2776 
	gãm∂©e
 <
˛ass
 
	gT
>

2777 
	gãm∂©e
 <
˛ass
 
	gS
>

2778 c⁄° 
	gM©rix44
<
	gT
> &

2779 
	gM©rix44
<
	gT
>::
£tAxisAngÀ
 (c⁄° 
Vec3
<
S
>& 
axis
, S 
™gÀ
)

2781 
	gVec3
<
	gS
> 
unô
 (
axis
.
n‹mÆized
());

2782 
S
 
	gsöe
 = 
M©h
<
T
>::
sö
 (
™gÀ
);

2783 
S
 
	gcosöe
 = 
M©h
<
T
>::
cos
 (
™gÀ
);

2785 
	gx
[0][0] = 
unô
[0] * unô[0] * (1 - 
cosöe
) + cosine;

2786 
	gx
[0][1] = 
unô
[0] * unô[1] * (1 - 
cosöe
Ë+ unô[2] * 
söe
;

2787 
	gx
[0][2] = 
unô
[0] * unô[2] * (1 - 
cosöe
Ë- unô[1] * 
söe
;

2788 
	gx
[0][3] = 0;

2790 
	gx
[1][0] = 
unô
[0] * unô[1] * (1 - 
cosöe
Ë- unô[2] * 
söe
;

2791 
	gx
[1][1] = 
unô
[1] * unô[1] * (1 - 
cosöe
) + cosine;

2792 
	gx
[1][2] = 
unô
[1] * unô[2] * (1 - 
cosöe
Ë+ unô[0] * 
söe
;

2793 
	gx
[1][3] = 0;

2795 
	gx
[2][0] = 
unô
[0] * unô[2] * (1 - 
cosöe
Ë+ unô[1] * 
söe
;

2796 
	gx
[2][1] = 
unô
[1] * unô[2] * (1 - 
cosöe
Ë- unô[0] * 
söe
;

2797 
	gx
[2][2] = 
unô
[2] * unô[2] * (1 - 
cosöe
) + cosine;

2798 
	gx
[2][3] = 0;

2800 
	gx
[3][0] = 0;

2801 
	gx
[3][1] = 0;

2802 
	gx
[3][2] = 0;

2803 
	gx
[3][3] = 1;

2805  *
	gthis
;

2808 
	gãm∂©e
 <
˛ass
 
	gT
>

2809 
	gãm∂©e
 <
˛ass
 
	gS
>

2810 c⁄° 
	gM©rix44
<
	gT
> &

2811 
	gM©rix44
<
	gT
>::
rŸ©e
 (c⁄° 
Vec3
<
S
> &
r
)

2813 
S
 
cos_rz
, 
	gsö_rz
, 
	gcos_ry
, 
	gsö_ry
, 
	gcos_rx
, 
	gsö_rx
;

2814 
S
 
	gm00
, 
	gm01
, 
	gm02
;

2815 
S
 
	gm10
, 
	gm11
, 
	gm12
;

2816 
S
 
	gm20
, 
	gm21
, 
	gm22
;

2818 
	gcos_rz
 = 
M©h
<
S
>::
cos
 (
r
[2]);

2819 
	gcos_ry
 = 
M©h
<
S
>::
cos
 (
r
[1]);

2820 
	gcos_rx
 = 
M©h
<
S
>::
cos
 (
r
[0]);

2822 
	gsö_rz
 = 
M©h
<
S
>::
sö
 (
r
[2]);

2823 
	gsö_ry
 = 
M©h
<
S
>::
sö
 (
r
[1]);

2824 
	gsö_rx
 = 
M©h
<
S
>::
sö
 (
r
[0]);

2826 
	gm00
 = 
cos_rz
 * 
cos_ry
;

2827 
	gm01
 = 
sö_rz
 * 
cos_ry
;

2828 
	gm02
 = -
sö_ry
;

2829 
	gm10
 = -
sö_rz
 * 
cos_rx
 + 
cos_rz
 * 
sö_ry
 * 
sö_rx
;

2830 
	gm11
 = 
cos_rz
 * 
cos_rx
 + 
sö_rz
 * 
sö_ry
 * 
sö_rx
;

2831 
	gm12
 = 
cos_ry
 * 
sö_rx
;

2832 
	gm20
 = -
sö_rz
 * -
sö_rx
 + 
cos_rz
 * 
sö_ry
 * 
cos_rx
;

2833 
	gm21
 = 
cos_rz
 * -
sö_rx
 + 
sö_rz
 * 
sö_ry
 * 
cos_rx
;

2834 
	gm22
 = 
cos_ry
 * 
cos_rx
;

2836 
	gM©rix44
<
	gT
> 
P
 (*
this
);

2838 
	gx
[0][0] = 
P
[0][0] * 
m00
 + P[1][0] * 
m01
 + P[2][0] * 
m02
;

2839 
	gx
[0][1] = 
P
[0][1] * 
m00
 + P[1][1] * 
m01
 + P[2][1] * 
m02
;

2840 
	gx
[0][2] = 
P
[0][2] * 
m00
 + P[1][2] * 
m01
 + P[2][2] * 
m02
;

2841 
	gx
[0][3] = 
P
[0][3] * 
m00
 + P[1][3] * 
m01
 + P[2][3] * 
m02
;

2843 
	gx
[1][0] = 
P
[0][0] * 
m10
 + P[1][0] * 
m11
 + P[2][0] * 
m12
;

2844 
	gx
[1][1] = 
P
[0][1] * 
m10
 + P[1][1] * 
m11
 + P[2][1] * 
m12
;

2845 
	gx
[1][2] = 
P
[0][2] * 
m10
 + P[1][2] * 
m11
 + P[2][2] * 
m12
;

2846 
	gx
[1][3] = 
P
[0][3] * 
m10
 + P[1][3] * 
m11
 + P[2][3] * 
m12
;

2848 
	gx
[2][0] = 
P
[0][0] * 
m20
 + P[1][0] * 
m21
 + P[2][0] * 
m22
;

2849 
	gx
[2][1] = 
P
[0][1] * 
m20
 + P[1][1] * 
m21
 + P[2][1] * 
m22
;

2850 
	gx
[2][2] = 
P
[0][2] * 
m20
 + P[1][2] * 
m21
 + P[2][2] * 
m22
;

2851 
	gx
[2][3] = 
P
[0][3] * 
m20
 + P[1][3] * 
m21
 + P[2][3] * 
m22
;

2853  *
	gthis
;

2856 
	gãm∂©e
 <
˛ass
 
	gT
>

2857 c⁄° 
	gM©rix44
<
	gT
> &

2858 
	gM©rix44
<
	gT
>::
	$£tSˇÀ
 (
T
 
s
)

2860 
x
[0][0] = 
s
;

2861 
x
[0][1] = 0;

2862 
x
[0][2] = 0;

2863 
x
[0][3] = 0;

2865 
x
[1][0] = 0;

2866 
x
[1][1] = 
s
;

2867 
x
[1][2] = 0;

2868 
x
[1][3] = 0;

2870 
x
[2][0] = 0;

2871 
x
[2][1] = 0;

2872 
x
[2][2] = 
s
;

2873 
x
[2][3] = 0;

2875 
x
[3][0] = 0;

2876 
x
[3][1] = 0;

2877 
x
[3][2] = 0;

2878 
x
[3][3] = 1;

2880  *
this
;

2881 
	}
}

2883 
	gãm∂©e
 <
˛ass
 
	gT
>

2884 
	gãm∂©e
 <
˛ass
 
	gS
>

2885 c⁄° 
	gM©rix44
<
	gT
> &

2886 
	gM©rix44
<
	gT
>::
£tSˇÀ
 (c⁄° 
Vec3
<
S
> &
s
)

2888 
x
[0][0] = 
s
[0];

2889 
	gx
[0][1] = 0;

2890 
	gx
[0][2] = 0;

2891 
	gx
[0][3] = 0;

2893 
	gx
[1][0] = 0;

2894 
	gx
[1][1] = 
s
[1];

2895 
	gx
[1][2] = 0;

2896 
	gx
[1][3] = 0;

2898 
	gx
[2][0] = 0;

2899 
	gx
[2][1] = 0;

2900 
	gx
[2][2] = 
s
[2];

2901 
	gx
[2][3] = 0;

2903 
	gx
[3][0] = 0;

2904 
	gx
[3][1] = 0;

2905 
	gx
[3][2] = 0;

2906 
	gx
[3][3] = 1;

2908  *
	gthis
;

2911 
	gãm∂©e
 <
˛ass
 
	gT
>

2912 
	gãm∂©e
 <
˛ass
 
	gS
>

2913 c⁄° 
	gM©rix44
<
	gT
> &

2914 
	gM©rix44
<
	gT
>::
sˇÀ
 (c⁄° 
Vec3
<
S
> &
s
)

2916 
x
[0][0] *
s
[0];

2917 
	gx
[0][1] *
s
[0];

2918 
	gx
[0][2] *
s
[0];

2919 
	gx
[0][3] *
s
[0];

2921 
	gx
[1][0] *
s
[1];

2922 
	gx
[1][1] *
s
[1];

2923 
	gx
[1][2] *
s
[1];

2924 
	gx
[1][3] *
s
[1];

2926 
	gx
[2][0] *
s
[2];

2927 
	gx
[2][1] *
s
[2];

2928 
	gx
[2][2] *
s
[2];

2929 
	gx
[2][3] *
s
[2];

2931  *
	gthis
;

2934 
	gãm∂©e
 <
˛ass
 
	gT
>

2935 
	gãm∂©e
 <
˛ass
 
	gS
>

2936 c⁄° 
	gM©rix44
<
	gT
> &

2937 
	gM©rix44
<
	gT
>::
£tTøn¶©i⁄
 (c⁄° 
Vec3
<
S
> &
t
)

2939 
x
[0][0] = 1;

2940 
	gx
[0][1] = 0;

2941 
	gx
[0][2] = 0;

2942 
	gx
[0][3] = 0;

2944 
	gx
[1][0] = 0;

2945 
	gx
[1][1] = 1;

2946 
	gx
[1][2] = 0;

2947 
	gx
[1][3] = 0;

2949 
	gx
[2][0] = 0;

2950 
	gx
[2][1] = 0;

2951 
	gx
[2][2] = 1;

2952 
	gx
[2][3] = 0;

2954 
	gx
[3][0] = 
t
[0];

2955 
	gx
[3][1] = 
t
[1];

2956 
	gx
[3][2] = 
t
[2];

2957 
	gx
[3][3] = 1;

2959  *
	gthis
;

2962 
	gãm∂©e
 <
˛ass
 
	gT
>

2963 
ölöe
 c⁄° 
	gVec3
<
	gT
>

2964 
	gM©rix44
<
	gT
>::
	$å™¶©i⁄
 () const

2966  
Vec3
<
T
> (
x
[3][0], x[3][1], x[3][2]);

2967 
	}
}

2969 
	gãm∂©e
 <
˛ass
 
	gT
>

2970 
	gãm∂©e
 <
˛ass
 
	gS
>

2971 c⁄° 
	gM©rix44
<
	gT
> &

2972 
	gM©rix44
<
	gT
>::
å™¶©e
 (c⁄° 
Vec3
<
S
> &
t
)

2974 
x
[3][0] +
t
[0] * x[0][0] +Å[1] * x[1][0] +Å[2] * x[2][0];

2975 
	gx
[3][1] +
t
[0] * 
x
[0][1] +Å[1] * x[1][1] +Å[2] * x[2][1];

2976 
	gx
[3][2] +
t
[0] * 
x
[0][2] +Å[1] * x[1][2] +Å[2] * x[2][2];

2977 
	gx
[3][3] +
t
[0] * 
x
[0][3] +Å[1] * x[1][3] +Å[2] * x[2][3];

2979  *
	gthis
;

2982 
	gãm∂©e
 <
˛ass
 
	gT
>

2983 
	gãm∂©e
 <
˛ass
 
	gS
>

2984 c⁄° 
	gM©rix44
<
	gT
> &

2985 
	gM©rix44
<
	gT
>::
£tShór
 (c⁄° 
Vec3
<
S
> &
h
)

2987 
x
[0][0] = 1;

2988 
	gx
[0][1] = 0;

2989 
	gx
[0][2] = 0;

2990 
	gx
[0][3] = 0;

2992 
	gx
[1][0] = 
h
[0];

2993 
	gx
[1][1] = 1;

2994 
	gx
[1][2] = 0;

2995 
	gx
[1][3] = 0;

2997 
	gx
[2][0] = 
h
[1];

2998 
	gx
[2][1] = 
h
[2];

2999 
	gx
[2][2] = 1;

3000 
	gx
[2][3] = 0;

3002 
	gx
[3][0] = 0;

3003 
	gx
[3][1] = 0;

3004 
	gx
[3][2] = 0;

3005 
	gx
[3][3] = 1;

3007  *
	gthis
;

3010 
	gãm∂©e
 <
˛ass
 
	gT
>

3011 
	gãm∂©e
 <
˛ass
 
	gS
>

3012 c⁄° 
	gM©rix44
<
	gT
> &

3013 
	gM©rix44
<
	gT
>::
£tShór
 (c⁄° 
Shór6
<
S
> &
h
)

3015 
x
[0][0] = 1;

3016 
	gx
[0][1] = 
h
.
yx
;

3017 
	gx
[0][2] = 
h
.
zx
;

3018 
	gx
[0][3] = 0;

3020 
	gx
[1][0] = 
h
.
xy
;

3021 
	gx
[1][1] = 1;

3022 
	gx
[1][2] = 
h
.
zy
;

3023 
	gx
[1][3] = 0;

3025 
	gx
[2][0] = 
h
.
xz
;

3026 
	gx
[2][1] = 
h
.
yz
;

3027 
	gx
[2][2] = 1;

3028 
	gx
[2][3] = 0;

3030 
	gx
[3][0] = 0;

3031 
	gx
[3][1] = 0;

3032 
	gx
[3][2] = 0;

3033 
	gx
[3][3] = 1;

3035  *
	gthis
;

3038 
	gãm∂©e
 <
˛ass
 
	gT
>

3039 
	gãm∂©e
 <
˛ass
 
	gS
>

3040 c⁄° 
	gM©rix44
<
	gT
> &

3041 
	gM©rix44
<
	gT
>::
shór
 (c⁄° 
Vec3
<
S
> &
h
)

3049 
i
=0; 
	gi
 < 4; i++)

3051 
	gx
[2][
i
] +
h
[1] * 
x
[0][i] + h[2] * x[1][i];

3052 
	gx
[1][
i
] +
h
[0] * 
x
[0][i];

3055  *
	gthis
;

3058 
	gãm∂©e
 <
˛ass
 
	gT
>

3059 
	gãm∂©e
 <
˛ass
 
	gS
>

3060 c⁄° 
	gM©rix44
<
	gT
> &

3061 
	gM©rix44
<
	gT
>::
shór
 (c⁄° 
Shór6
<
S
> &
h
)

3063 
M©rix44
<
T
> 
P
 (*
this
);

3065 
	gi
=0; i < 4; i++)

3067 
	gx
[0][
i
] = 
P
[0][i] + 
h
.
yx
 * P[1][i] + h.
zx
 * P[2][i];

3068 
	gx
[1][
i
] = 
h
.
xy
 * 
P
[0][i] + P[1][i] + h.
zy
 * P[2][i];

3069 
	gx
[2][
i
] = 
h
.
xz
 * 
P
[0][i] + h.
yz
 * P[1][i] + P[2][i];

3072  *
	gthis
;

3080 
	gãm∂©e
 <
˛ass
 
	gT
>

3081 
	g°d
::
o°ªam
 &

3082 
›î©‹
 << (
°d
::
o°ªam
 &
s
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
)

3084 
	g°d
::
ios_ba£
::
fmtÊags
 
ﬁdFœgs
 = 
s
.
Êags
();

3085 
	gwidth
;

3087 i‡(
	gs
.
Êags
(Ë& 
	g°d
::
ios_ba£
::
fixed
)

3089 
s
.
£tf
 (
°d
::
ios_ba£
::
showpoöt
);

3090 
	gwidth
 = 
s
.
¥ecisi⁄
() + 5;

3094 
	gs
.
£tf
 (
°d
::
ios_ba£
::
scõ¡ific
);

3095 
	gs
.
£tf
 (
°d
::
ios_ba£
::
showpoöt
);

3096 
	gwidth
 = 
s
.
¥ecisi⁄
() + 8;

3099 
	gs
 << "(" << 
	g°d
::
£tw
 (
width
Ë<< 
m
[0][0] <<

3100 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[0][1] <<

3101 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[0][2] << "\n" <<

3103 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[1][0] <<

3104 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[1][1] <<

3105 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[1][2] << "\n" <<

3107 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[2][0] <<

3108 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[2][1] <<

3109 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[2][2] << ")\n";

3111 
	gs
.
Êags
 (
ﬁdFœgs
);

3112  
	gs
;

3115 
	gãm∂©e
 <
˛ass
 
	gT
>

3116 
	g°d
::
o°ªam
 &

3117 
›î©‹
 << (
°d
::
o°ªam
 &
s
, c⁄° 
	gM©rix44
<
	gT
> &
	gm
)

3119 
	g°d
::
ios_ba£
::
fmtÊags
 
ﬁdFœgs
 = 
s
.
Êags
();

3120 
	gwidth
;

3122 i‡(
	gs
.
Êags
(Ë& 
	g°d
::
ios_ba£
::
fixed
)

3124 
s
.
£tf
 (
°d
::
ios_ba£
::
showpoöt
);

3125 
	gwidth
 = 
s
.
¥ecisi⁄
() + 5;

3129 
	gs
.
£tf
 (
°d
::
ios_ba£
::
scõ¡ific
);

3130 
	gs
.
£tf
 (
°d
::
ios_ba£
::
showpoöt
);

3131 
	gwidth
 = 
s
.
¥ecisi⁄
() + 8;

3134 
	gs
 << "(" << 
	g°d
::
£tw
 (
width
Ë<< 
m
[0][0] <<

3135 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[0][1] <<

3136 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[0][2] <<

3137 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[0][3] << "\n" <<

3139 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[1][0] <<

3140 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[1][1] <<

3141 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[1][2] <<

3142 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[1][3] << "\n" <<

3144 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[2][0] <<

3145 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[2][1] <<

3146 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[2][2] <<

3147 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[2][3] << "\n" <<

3149 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[3][0] <<

3150 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[3][1] <<

3151 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[3][2] <<

3152 " " << 
°d
::
£tw
 (
width
Ë<< 
m
[3][3] << ")\n";

3154 
	gs
.
Êags
 (
ﬁdFœgs
);

3155  
	gs
;

3163 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

3164 
ölöe
 c⁄° 
	gVec2
<
	gS
> &

3165 
	g›î©‹
 *(
Vec2
<
S
> &
v
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
)

3167 
S
 
	gx
 = S(
v
.
x
 * 
m
[0][0] + v.
y
 * m[1][0] + m[2][0]);

3168 
S
 
	gy
 = S(
v
.
x
 * 
m
[0][1] + v.
y
 * m[1][1] + m[2][1]);

3169 
S
 
	gw
 = S(
v
.
x
 * 
m
[0][2] + v.
y
 * m[1][2] + m[2][2]);

3171 
	gv
.
	gx
 = 
x
 / 
w
;

3172 
	gv
.
	gy
 = 
y
 / 
w
;

3174  
	gv
;

3177 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

3178 
ölöe
 
	gVec2
<
	gS
>

3179 
	g›î©‹
 * (c⁄° 
	gVec2
<
	gS
> &
	gv
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
)

3181 
S
 
	gx
 = S(
v
.
x
 * 
m
[0][0] + v.
y
 * m[1][0] + m[2][0]);

3182 
S
 
	gy
 = S(
v
.
x
 * 
m
[0][1] + v.
y
 * m[1][1] + m[2][1]);

3183 
S
 
	gw
 = S(
v
.
x
 * 
m
[0][2] + v.
y
 * m[1][2] + m[2][2]);

3185  
	gVec2
<
	gS
> (
	gx
 / 
	gw
, 
	gy
 / w);

3189 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

3190 
ölöe
 c⁄° 
	gVec3
<
	gS
> &

3191 
	g›î©‹
 *(
Vec3
<
S
> &
v
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
)

3193 
S
 
	gx
 = S(
v
.
x
 * 
m
[0][0] + v.
y
 * m[1][0] + v.
z
 * m[2][0]);

3194 
S
 
	gy
 = S(
v
.
x
 * 
m
[0][1] + v.
y
 * m[1][1] + v.
z
 * m[2][1]);

3195 
S
 
	gz
 = S(
v
.
x
 * 
m
[0][2] + v.
y
 * m[1][2] + v.
z
 * m[2][2]);

3197 
	gv
.
	gx
 = 
x
;

3198 
	gv
.
	gy
 = 
y
;

3199 
	gv
.
	gz
 = 
z
;

3201  
	gv
;

3205 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

3206 
ölöe
 
	gVec3
<
	gS
>

3207 
	g›î©‹
 * (c⁄° 
	gVec3
<
	gS
> &
	gv
, c⁄° 
	gM©rix33
<
	gT
> &
	gm
)

3209 
S
 
	gx
 = S(
v
.
x
 * 
m
[0][0] + v.
y
 * m[1][0] + v.
z
 * m[2][0]);

3210 
S
 
	gy
 = S(
v
.
x
 * 
m
[0][1] + v.
y
 * m[1][1] + v.
z
 * m[2][1]);

3211 
S
 
	gz
 = S(
v
.
x
 * 
m
[0][2] + v.
y
 * m[1][2] + v.
z
 * m[2][2]);

3213  
	gVec3
<
	gS
> (
	gx
, 
	gy
, 
	gz
);

3217 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

3218 
ölöe
 c⁄° 
	gVec3
<
	gS
> &

3219 
	g›î©‹
 *(
Vec3
<
S
> &
v
, c⁄° 
	gM©rix44
<
	gT
> &
	gm
)

3221 
S
 
	gx
 = S(
v
.
x
 * 
m
[0][0] + v.
y
 * m[1][0] + v.
z
 * m[2][0] + m[3][0]);

3222 
S
 
	gy
 = S(
v
.
x
 * 
m
[0][1] + v.
y
 * m[1][1] + v.
z
 * m[2][1] + m[3][1]);

3223 
S
 
	gz
 = S(
v
.
x
 * 
m
[0][2] + v.
y
 * m[1][2] + v.
z
 * m[2][2] + m[3][2]);

3224 
S
 
	gw
 = S(
v
.
x
 * 
m
[0][3] + v.
y
 * m[1][3] + v.
z
 * m[2][3] + m[3][3]);

3226 
	gv
.
	gx
 = 
x
 / 
w
;

3227 
	gv
.
	gy
 = 
y
 / 
w
;

3228 
	gv
.
	gz
 = 
z
 / 
w
;

3230  
	gv
;

3233 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

3234 
ölöe
 
	gVec3
<
	gS
>

3235 
	g›î©‹
 * (c⁄° 
	gVec3
<
	gS
> &
	gv
, c⁄° 
	gM©rix44
<
	gT
> &
	gm
)

3237 
S
 
	gx
 = S(
v
.
x
 * 
m
[0][0] + v.
y
 * m[1][0] + v.
z
 * m[2][0] + m[3][0]);

3238 
S
 
	gy
 = S(
v
.
x
 * 
m
[0][1] + v.
y
 * m[1][1] + v.
z
 * m[2][1] + m[3][1]);

3239 
S
 
	gz
 = S(
v
.
x
 * 
m
[0][2] + v.
y
 * m[1][2] + v.
z
 * m[2][2] + m[3][2]);

3240 
S
 
	gw
 = S(
v
.
x
 * 
m
[0][3] + v.
y
 * m[1][3] + v.
z
 * m[2][3] + m[3][3]);

3242  
	gVec3
<
	gS
> (
	gx
 / 
	gw
, 
	gy
 / w, 
	gz
 / w);

	@shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h

36 #i‚de‡
INCLUDED_IMATHMATRIXALGO_H


37 
	#INCLUDED_IMATHMATRIXALGO_H


	)

51 
	~"Im©hM©rix.h
"

52 
	~"Im©hQu©.h
"

53 
	~"Im©hEuÀr.h
"

54 
	~"Im©hExc.h
"

55 
	~"Im©hVec.h
"

56 
	~<m©h.h
>

59 #ifde‡
OPENEXR_DLL


60 #ifde‡
IMATH_EXPORTS


61 
	#IMATH_EXPORT_CONST
 
	`__de˛•ec
(
dŒexp‹t
)

	)

63 
	#IMATH_EXPORT_CONST
 
	`__de˛•ec
(
dŒimp‹t
)

	)

66 
	#IMATH_EXPORT_CONST
 c⁄°

	)

70 
«me•a˚
 
Im©h
 {

76 
IMATH_EXPORT_CONST
 
M33f
 
idítôy33f
;

77 
IMATH_EXPORT_CONST
 
M44f
 
idítôy44f
;

78 
IMATH_EXPORT_CONST
 
M33d
 
idítôy33d
;

79 
IMATH_EXPORT_CONST
 
M44d
 
idítôy44d
;

129 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘Sˇlög


130 (c⁄° 
M©rix44
<
T
> &
m©
,

131 
Vec3
<
T
> &
s˛
,

132 
boﬁ
 
exc
 = 
åue
);

134 
ãm∂©e
 <
˛ass
 
T
> 
M©rix44
<T> 
ßnsSˇlög
 (c⁄° M©rix44<T> &
m©
,

135 
boﬁ
 
exc
 = 
åue
);

137 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
ªmoveSˇlög


138 (
M©rix44
<
T
> &
m©
,

139 
boﬁ
 
exc
 = 
åue
);

141 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘SˇlögAndShór


142 (c⁄° 
M©rix44
<
T
> &
m©
,

143 
Vec3
<
T
> &
s˛
,

144 
Vec3
<
T
> &
shr
,

145 
boﬁ
 
exc
 = 
åue
);

147 
ãm∂©e
 <
˛ass
 
T
> 
M©rix44
<T> 
ßnsSˇlögAndShór


148 (c⁄° 
M©rix44
<
T
> &
m©
,

149 
boﬁ
 
exc
 = 
åue
);

151 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
ªmoveSˇlögAndShór


152 (
M©rix44
<
T
> &
m©
,

153 
boﬁ
 
exc
 = 
åue
);

155 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘AndRemoveSˇlögAndShór


156 (
M©rix44
<
T
> &
m©
,

157 
Vec3
<
T
> &
s˛
,

158 
Vec3
<
T
> &
shr
,

159 
boﬁ
 
exc
 = 
åue
);

161 
ãm∂©e
 <
˛ass
 
T
> 
exåa˘EuÀrXYZ


162 (c⁄° 
M©rix44
<
T
> &
m©
,

163 
Vec3
<
T
> &
rŸ
);

165 
ãm∂©e
 <
˛ass
 
T
> 
exåa˘EuÀrZYX


166 (c⁄° 
M©rix44
<
T
> &
m©
,

167 
Vec3
<
T
> &
rŸ
);

169 
ãm∂©e
 <
˛ass
 
T
> 
Qu©
<T> 
exåa˘Qu©
 (c⁄° 
M©rix44
<T> &
m©
);

171 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘SHRT


172 (c⁄° 
M©rix44
<
T
> &
m©
,

173 
Vec3
<
T
> &
s
,

174 
Vec3
<
T
> &
h
,

175 
Vec3
<
T
> &
r
,

176 
Vec3
<
T
> &
t
,

177 
boﬁ
 
exc
 ,

178 
ty≥«me
 
EuÀr
<
T
>::
Ordî
 
rOrdî
);

180 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘SHRT


181 (c⁄° 
M©rix44
<
T
> &
m©
,

182 
Vec3
<
T
> &
s
,

183 
Vec3
<
T
> &
h
,

184 
Vec3
<
T
> &
r
,

185 
Vec3
<
T
> &
t
,

186 
boﬁ
 
exc
 = 
åue
);

188 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘SHRT


189 (c⁄° 
M©rix44
<
T
> &
m©
,

190 
Vec3
<
T
> &
s
,

191 
Vec3
<
T
> &
h
,

192 
EuÀr
<
T
> &
r
,

193 
Vec3
<
T
> &
t
,

194 
boﬁ
 
exc
 = 
åue
);

200 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
checkF‹ZîoSˇÀInRow


201 (c⁄° 
T
 &
s˛
,

202 c⁄° 
Vec3
<
T
> &
row
,

203 
boﬁ
 
exc
 = 
åue
);

210 
ãm∂©e
 <
˛ass
 
T
> 
M©rix44
<T> 
rŸ©i⁄M©rix
 (c⁄° 
Vec3
<T> &
‰omDúe˘i⁄
,

211 c⁄° 
Vec3
<
T
> &
toDúe˘i⁄
);

222 
ãm∂©e
 <
˛ass
 
T
> 
M©rix44
<T> 
rŸ©i⁄M©rixWôhUpDú


223 (c⁄° 
Vec3
<
T
> &
‰omDú
,

224 c⁄° 
Vec3
<
T
> &
toDú
,

225 c⁄° 
Vec3
<
T
> &
upDú
);

241 
ãm∂©e
 <
˛ass
 
T
> 
M©rix44
<T> 
ÆignZAxisWôhT¨gëDú


242 (
Vec3
<
T
> 
èrgëDú
,

243 
Vec3
<
T
> 
upDú
);

254 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘Sˇlög


255 (c⁄° 
M©rix33
<
T
> &
m©
,

256 
Vec2
<
T
> &
s˛
,

257 
boﬁ
 
exc
 = 
åue
);

259 
ãm∂©e
 <
˛ass
 
T
> 
M©rix33
<T> 
ßnsSˇlög
 (c⁄° M©rix33<T> &
m©
,

260 
boﬁ
 
exc
 = 
åue
);

262 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
ªmoveSˇlög


263 (
M©rix33
<
T
> &
m©
,

264 
boﬁ
 
exc
 = 
åue
);

266 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘SˇlögAndShór


267 (c⁄° 
M©rix33
<
T
> &
m©
,

268 
Vec2
<
T
> &
s˛
,

269 
T
 &
h
,

270 
boﬁ
 
exc
 = 
åue
);

272 
ãm∂©e
 <
˛ass
 
T
> 
M©rix33
<T> 
ßnsSˇlögAndShór


273 (c⁄° 
M©rix33
<
T
> &
m©
,

274 
boﬁ
 
exc
 = 
åue
);

276 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
ªmoveSˇlögAndShór


277 (
M©rix33
<
T
> &
m©
,

278 
boﬁ
 
exc
 = 
åue
);

280 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘AndRemoveSˇlögAndShór


281 (
M©rix33
<
T
> &
m©
,

282 
Vec2
<
T
> &
s˛
,

283 
T
 &
shr
,

284 
boﬁ
 
exc
 = 
åue
);

286 
ãm∂©e
 <
˛ass
 
T
> 
exåa˘EuÀr


287 (c⁄° 
M©rix33
<
T
> &
m©
,

288 
T
 &
rŸ
);

290 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
exåa˘SHRT
 (c⁄° 
M©rix33
<T> &
m©
,

291 
Vec2
<
T
> &
s
,

292 
T
 &
h
,

293 
T
 &
r
,

294 
Vec2
<
T
> &
t
,

295 
boﬁ
 
exc
 = 
åue
);

297 
ãm∂©e
 <
˛ass
 
T
> 
boﬁ
 
checkF‹ZîoSˇÀInRow


298 (c⁄° 
T
 &
s˛
,

299 c⁄° 
Vec2
<
T
> &
row
,

300 
boﬁ
 
exc
 = 
åue
);

310 
ãm∂©e
 <
˛ass
 
T
>

311 
boﬁ


312 
exåa˘Sˇlög
 (c⁄° 
M©rix44
<
T
> &
m©
, 
Vec3
<T> &
s˛
, 
boﬁ
 
exc
)

314 
Vec3
<
T
> 
shr
;

315 
M©rix44
<
T
> 
M
 (
m©
);

317 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
M
, 
s˛
, 
shr
, 
exc
))

318  
Ál£
;

320  
åue
;

324 
ãm∂©e
 <
˛ass
 
T
>

325 
M©rix44
<
T
>

326 
ßnsSˇlög
 (c⁄° 
M©rix44
<
T
> &
m©
, 
boﬁ
 
exc
)

328 
Vec3
<
T
> 
s˛
;

329 
Vec3
<
T
> 
shr
;

330 
Vec3
<
T
> 
rŸ
;

331 
Vec3
<
T
> 
å™
;

333 i‡(! 
exåa˘SHRT
 (
m©
, 
s˛
, 
shr
, 
rŸ
, 
å™
, 
exc
))

334  
m©
;

336 
M©rix44
<
T
> 
M
;

338 
M
.
å™¶©e
 (
å™
);

339 
M
.
rŸ©e
 (
rŸ
);

340 
M
.
shór
 (
shr
);

342  
M
;

346 
ãm∂©e
 <
˛ass
 
T
>

347 
boﬁ


348 
ªmoveSˇlög
 (
M©rix44
<
T
> &
m©
, 
boﬁ
 
exc
)

350 
Vec3
<
T
> 
s˛
;

351 
Vec3
<
T
> 
shr
;

352 
Vec3
<
T
> 
rŸ
;

353 
Vec3
<
T
> 
å™
;

355 i‡(! 
exåa˘SHRT
 (
m©
, 
s˛
, 
shr
, 
rŸ
, 
å™
, 
exc
))

356  
Ál£
;

358 
m©
.
makeIdítôy
 ();

359 
m©
.
å™¶©e
 (
å™
);

360 
m©
.
rŸ©e
 (
rŸ
);

361 
m©
.
shór
 (
shr
);

363  
åue
;

367 
ãm∂©e
 <
˛ass
 
T
>

368 
boﬁ


369 
exåa˘SˇlögAndShór
 (c⁄° 
M©rix44
<
T
> &
m©
,

370 
Vec3
<
T
> &
s˛
, Vec3<T> &
shr
, 
boﬁ
 
exc
)

372 
M©rix44
<
T
> 
M
 (
m©
);

374 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
M
, 
s˛
, 
shr
, 
exc
))

375  
Ál£
;

377  
åue
;

381 
ãm∂©e
 <
˛ass
 
T
>

382 
M©rix44
<
T
>

383 
ßnsSˇlögAndShór
 (c⁄° 
M©rix44
<
T
> &
m©
, 
boﬁ
 
exc
)

385 
Vec3
<
T
> 
s˛
;

386 
Vec3
<
T
> 
shr
;

387 
M©rix44
<
T
> 
M
 (
m©
);

389 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
M
, 
s˛
, 
shr
, 
exc
))

390  
m©
;

392  
M
;

396 
ãm∂©e
 <
˛ass
 
T
>

397 
boﬁ


398 
ªmoveSˇlögAndShór
 (
M©rix44
<
T
> &
m©
, 
boﬁ
 
exc
)

400 
Vec3
<
T
> 
s˛
;

401 
Vec3
<
T
> 
shr
;

403 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
m©
, 
s˛
, 
shr
, 
exc
))

404  
Ál£
;

406  
åue
;

410 
ãm∂©e
 <
˛ass
 
T
>

411 
boﬁ


412 
exåa˘AndRemoveSˇlögAndShór
 (
M©rix44
<
T
> &
m©
,

413 
Vec3
<
T
> &
s˛
, Vec3<T> &
shr
, 
boﬁ
 
exc
)

421 
Vec3
<
T
> 
row
[3];

423 
row
[0] = 
Vec3
<
T
> (
m©
[0][0], mat[0][1], mat[0][2]);

424 
row
[1] = 
Vec3
<
T
> (
m©
[1][0], mat[1][1], mat[1][2]);

425 
row
[2] = 
Vec3
<
T
> (
m©
[2][0], mat[2][1], mat[2][2]);

427 
T
 
maxVÆ
 = 0;

428 
i
=0; i < 3; i++)

429 
j
=0; j < 3; j++)

430 i‡(
Im©h
::
abs
 (
row
[
i
][
j
]Ë> 
maxVÆ
)

431 
maxVÆ
 = 
Im©h
::
abs
 (
row
[
i
][
j
]);

441 i‡(
maxVÆ
 != 0)

443 
i
=0; i < 3; i++)

444 i‡(! 
checkF‹ZîoSˇÀInRow
 (
maxVÆ
, 
row
[
i
], 
exc
))

445  
Ál£
;

447 
row
[
i
] /
maxVÆ
;

451 
s˛
.
x
 = 
row
[0].
Àngth
 ();

452 i‡(! 
checkF‹ZîoSˇÀInRow
 (
s˛
.
x
, 
row
[0], 
exc
))

453  
Ál£
;

456 
row
[0] /
s˛
.
x
;

469 
shr
[0] = 
row
[0].
dŸ
 (row[1]);

470 
row
[1] -
shr
[0] *Ñow[0];

473 
s˛
.
y
 = 
row
[1].
Àngth
 ();

474 i‡(! 
checkF‹ZîoSˇÀInRow
 (
s˛
.
y
, 
row
[1], 
exc
))

475  
Ál£
;

478 
row
[1] /
s˛
.
y
;

479 
shr
[0] /
s˛
.
y
;

482 
shr
[1] = 
row
[0].
dŸ
 (row[2]);

483 
row
[2] -
shr
[1] *Ñow[0];

484 
shr
[2] = 
row
[1].
dŸ
 (row[2]);

485 
row
[2] -
shr
[2] *Ñow[1];

488 
s˛
.
z
 = 
row
[2].
Àngth
 ();

489 i‡(! 
checkF‹ZîoSˇÀInRow
 (
s˛
.
z
, 
row
[2], 
exc
))

490  
Ál£
;

493 
row
[2] /
s˛
.
z
;

494 
shr
[1] /
s˛
.
z
;

495 
shr
[2] /
s˛
.
z
;

500 i‡(
row
[0].
dŸ
 (row[1].
¸oss
 (row[2])) < 0)

501 
i
=0; i < 3; i++)

503 
s˛
[
i
] *= -1;

504 
row
[
i
] *= -1;

509 
i
=0; i < 3; i++)

511 
m©
[
i
][0] = 
row
[i][0];

512 
m©
[
i
][1] = 
row
[i][1];

513 
m©
[
i
][2] = 
row
[i][2];

519 
s˛
 *
maxVÆ
;

521  
åue
;

525 
ãm∂©e
 <
˛ass
 
T
>

527 
exåa˘EuÀrXYZ
 (c⁄° 
M©rix44
<
T
> &
m©
, 
Vec3
<T> &
rŸ
)

533 
Vec3
<
T
> 
i
 (
m©
[0][0], mat[0][1], mat[0][2]);

534 
Vec3
<
T
> 
j
 (
m©
[1][0], mat[1][1], mat[1][2]);

535 
Vec3
<
T
> 
k
 (
m©
[2][0], mat[2][1], mat[2][2]);

537 
i
.
n‹mÆize
();

538 
j
.
n‹mÆize
();

539 
k
.
n‹mÆize
();

541 
M©rix44
<
T
> 
M
 (
i
[0], i[1], i[2], 0,

542 
j
[0], j[1], j[2], 0,

543 
k
[0], k[1], k[2], 0,

550 
rŸ
.
x
 = 
M©h
<
T
>::
©™2
 (
M
[1][2], M[2][2]);

558 
M©rix44
<
T
> 
N
;

559 
N
.
rŸ©e
 (
Vec3
<
T
> (-
rŸ
.
x
, 0, 0));

560 
N
 = N * 
M
;

566 
T
 
cy
 = 
M©h
<T>::
sqπ
 (
N
[0][0]*N[0][0] + N[0][1]*N[0][1]);

567 
rŸ
.
y
 = 
M©h
<
T
>::
©™2
 (-
N
[0][2], 
cy
);

568 
rŸ
.
z
 = 
M©h
<
T
>::
©™2
 (-
N
[1][0], N[1][1]);

572 
ãm∂©e
 <
˛ass
 
T
>

574 
exåa˘EuÀrZYX
 (c⁄° 
M©rix44
<
T
> &
m©
, 
Vec3
<T> &
rŸ
)

580 
Vec3
<
T
> 
i
 (
m©
[0][0], mat[0][1], mat[0][2]);

581 
Vec3
<
T
> 
j
 (
m©
[1][0], mat[1][1], mat[1][2]);

582 
Vec3
<
T
> 
k
 (
m©
[2][0], mat[2][1], mat[2][2]);

584 
i
.
n‹mÆize
();

585 
j
.
n‹mÆize
();

586 
k
.
n‹mÆize
();

588 
M©rix44
<
T
> 
M
 (
i
[0], i[1], i[2], 0,

589 
j
[0], j[1], j[2], 0,

590 
k
[0], k[1], k[2], 0,

597 
rŸ
.
x
 = -
M©h
<
T
>::
©™2
 (
M
[1][0], M[0][0]);

605 
M©rix44
<
T
> 
N
;

606 
N
.
rŸ©e
 (
Vec3
<
T
> (0, 0, -
rŸ
.
x
));

607 
N
 = N * 
M
;

613 
T
 
cy
 = 
M©h
<T>::
sqπ
 (
N
[2][2]*N[2][2] + N[2][1]*N[2][1]);

614 
rŸ
.
y
 = -
M©h
<
T
>::
©™2
 (-
N
[2][0], 
cy
);

615 
rŸ
.
z
 = -
M©h
<
T
>::
©™2
 (-
N
[1][2], N[1][1]);

619 
ãm∂©e
 <
˛ass
 
T
>

620 
Qu©
<
T
>

621 
exåa˘Qu©
 (c⁄° 
M©rix44
<
T
> &
m©
)

623 
M©rix44
<
T
> 
rŸ
;

625 
T
 
å
, 
s
;

626 
T
 
q
[4];

627 
i
, 
j
, 
k
;

628 
Qu©
<
T
> 
qu©
;

630 
nxt
[3] = {1, 2, 0};

631 
å
 = 
m©
[0][0] + mat[1][1] + mat[2][2];

634 i‡(
å
 > 0.0) {

635 
s
 = 
M©h
<
T
>::
sqπ
 (
å
 + 1.0);

636 
qu©
.
r
 = 
s
 / 2.0;

637 
s
 = 0.5 / s;

639 
qu©
.
v
.
x
 = (
m©
[1][2] - m©[2][1]Ë* 
s
;

640 
qu©
.
v
.
y
 = (
m©
[2][0] - m©[0][2]Ë* 
s
;

641 
qu©
.
v
.
z
 = (
m©
[0][1] - m©[1][0]Ë* 
s
;

645 
i
 = 0;

646 i‡(
m©
[1][1] > mat[0][0])

647 
i
=1;

648 i‡(
m©
[2][2] > m©[
i
][i])

649 
i
=2;

651 
j
 = 
nxt
[
i
];

652 
k
 = 
nxt
[
j
];

653 
s
 = 
M©h
<
T
>::
sqπ
 ((
m©
[
i
][i] - (m©[
j
][j] + m©[
k
][k])) + 1.0);

655 
q
[
i
] = 
s
 * 0.5;

656 i‡(
s
 != 0.0)

657 
s
 = 0.5 / s;

659 
q
[3] = (
m©
[
j
][
k
] - m©[k][j]Ë* 
s
;

660 
q
[
j
] = (
m©
[
i
][j] + m©[j][i]Ë* 
s
;

661 
q
[
k
] = (
m©
[
i
][k] + m©[k][i]Ë* 
s
;

663 
qu©
.
v
.
x
 = 
q
[0];

664 
qu©
.
v
.
y
 = 
q
[1];

665 
qu©
.
v
.
z
 = 
q
[2];

666 
qu©
.
r
 = 
q
[3];

669  
qu©
;

672 
ãm∂©e
 <
˛ass
 
T
>

673 
boﬁ


674 
exåa˘SHRT
 (c⁄° 
M©rix44
<
T
> &
m©
,

675 
Vec3
<
T
> &
s
,

676 
Vec3
<
T
> &
h
,

677 
Vec3
<
T
> &
r
,

678 
Vec3
<
T
> &
t
,

679 
boﬁ
 
exc
 ,

680 
ty≥«me
 
EuÀr
<
T
>::
Ordî
 
rOrdî
 )

682 
M©rix44
<
T
> 
rŸ
;

684 
rŸ
 = 
m©
;

685 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
rŸ
, 
s
, 
h
, 
exc
))

686  
Ál£
;

688 
exåa˘EuÀrXYZ
 (
rŸ
, 
r
);

690 
t
.
x
 = 
m©
[3][0];

691 
t
.
y
 = 
m©
[3][1];

692 
t
.
z
 = 
m©
[3][2];

694 i‡(
rOrdî
 !
EuÀr
<
T
>::
XYZ
)

696 
Im©h
::
EuÀr
<
T
> 
eXYZ
 (
r
, Im©h::EuÀr<T>::
XYZ
);

697 
Im©h
::
EuÀr
<
T
> 
e
 (
eXYZ
, 
rOrdî
);

698 
r
 = 
e
.
toXYZVe˘‹
 ();

701  
åue
;

704 
ãm∂©e
 <
˛ass
 
T
>

705 
boﬁ


706 
exåa˘SHRT
 (c⁄° 
M©rix44
<
T
> &
m©
,

707 
Vec3
<
T
> &
s
,

708 
Vec3
<
T
> &
h
,

709 
Vec3
<
T
> &
r
,

710 
Vec3
<
T
> &
t
,

711 
boﬁ
 
exc
)

713  
exåa˘SHRT
(
m©
, 
s
, 
h
, 
r
, 
t
, 
exc
, 
Im©h
::
EuÀr
<
T
>::
XYZ
);

716 
ãm∂©e
 <
˛ass
 
T
>

717 
boﬁ


718 
exåa˘SHRT
 (c⁄° 
M©rix44
<
T
> &
m©
,

719 
Vec3
<
T
> &
s
,

720 
Vec3
<
T
> &
h
,

721 
EuÀr
<
T
> &
r
,

722 
Vec3
<
T
> &
t
,

723 
boﬁ
 
exc
 )

725  
exåa˘SHRT
 (
m©
, 
s
, 
h
, 
r
, 
t
, 
exc
,Ñ.
‹dî
 ());

729 
ãm∂©e
 <
˛ass
 
T
>

730 
boﬁ


731 
checkF‹ZîoSˇÀInRow
 (c⁄° 
T
& 
s˛
,

732 c⁄° 
Vec3
<
T
> &
row
,

733 
boﬁ
 
exc
 )

735 
i
 = 0; i < 3; i++)

737 i‡((
abs
 (
s˛
Ë< 1 &&áb†(
row
[
i
]Ë>
limôs
<
T
>::
max
() *ábs (scl)))

739 i‡(
exc
)

740 
throw
 
Im©h
::
ZîoSˇÀExc
 ("CannotÑemove zero scaling "

743  
Ál£
;

747  
åue
;

751 
ãm∂©e
 <
˛ass
 
T
>

752 
M©rix44
<
T
>

753 
rŸ©i⁄M©rix
 (c⁄° 
Vec3
<
T
> &
‰om
, c⁄° Vec3<T> &
to
)

755 
Qu©
<
T
> 
q
;

756 
q
.
£tRŸ©i⁄
(
‰om
, 
to
);

757  
q
.
toM©rix44
();

761 
ãm∂©e
 <
˛ass
 
T
>

762 
M©rix44
<
T
>

763 
rŸ©i⁄M©rixWôhUpDú
 (c⁄° 
Vec3
<
T
> &
‰omDú
,

764 c⁄° 
Vec3
<
T
> &
toDú
,

765 c⁄° 
Vec3
<
T
> &
upDú
)

776 i‡(
‰omDú
.
Àngth
 () == 0)

777  
M©rix44
<
T
> ();

781 
M©rix44
<
T
> 
zAxis2FromDú
 = 
ÆignZAxisWôhT¨gëDú


782 (
‰omDú
, 
Vec3
<
T
> (0, 1, 0));

784 
M©rix44
<
T
> 
‰omDú2zAxis
 = 
zAxis2FromDú
.
å™•o£d
 ();

786 
M©rix44
<
T
> 
zAxis2ToDú
 = 
ÆignZAxisWôhT¨gëDú
 (
toDú
, 
upDú
);

788  
‰omDú2zAxis
 * 
zAxis2ToDú
;

793 
ãm∂©e
 <
˛ass
 
T
>

794 
M©rix44
<
T
>

795 
ÆignZAxisWôhT¨gëDú
 (
Vec3
<
T
> 
èrgëDú
, Vec3<T> 
upDú
)

801 i‡–
èrgëDú
.
Àngth
 () == 0 )

802 
èrgëDú
 = 
Vec3
<
T
> (0, 0, 1);

808 i‡–
upDú
.
Àngth
 () == 0 )

809 
upDú
 = 
Vec3
<
T
> (0, 1, 0);

817 i‡(
upDú
.
¸oss
 (
èrgëDú
).
Àngth
 () == 0)

819 
upDú
 = 
èrgëDú
.
¸oss
 (
Vec3
<
T
> (1, 0, 0));

820 i‡(
upDú
.
Àngth
() == 0)

821 
upDú
 = 
èrgëDú
.
¸oss
(
Vec3
<
T
> (0, 0, 1));

828 
Vec3
<
T
> 
èrgëPîpDú
 = 
upDú
.
¸oss
 (
èrgëDú
);

829 
Vec3
<
T
> 
èrgëUpDú
 = 
èrgëDú
.
¸oss
 (
èrgëPîpDú
);

837 
Vec3
<
T
> 
row
[3];

838 
row
[0] = 
èrgëPîpDú
.
n‹mÆized
 ();

839 
row
[1] = 
èrgëUpDú
 .
n‹mÆized
 ();

840 
row
[2] = 
èrgëDú
 .
n‹mÆized
 ();

842 
M©rix44
<
T
> 
m©
 ( 
row
[0][0],Ñow[0][1],Ñow[0][2], 0,

843 
row
[1][0],Ñow[1][1],Ñow[1][2], 0,

844 
row
[2][0],Ñow[2][1],Ñow[2][2], 0,

847  
m©
;

857 
ãm∂©e
 <
˛ass
 
T
>

858 
boﬁ


859 
exåa˘Sˇlög
 (c⁄° 
M©rix33
<
T
> &
m©
, 
Vec2
<T> &
s˛
, 
boﬁ
 
exc
)

861 
T
 
shr
;

862 
M©rix33
<
T
> 
M
 (
m©
);

864 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
M
, 
s˛
, 
shr
, 
exc
))

865  
Ál£
;

867  
åue
;

871 
ãm∂©e
 <
˛ass
 
T
>

872 
M©rix33
<
T
>

873 
ßnsSˇlög
 (c⁄° 
M©rix33
<
T
> &
m©
, 
boﬁ
 
exc
)

875 
Vec2
<
T
> 
s˛
;

876 
T
 
shr
;

877 
T
 
rŸ
;

878 
Vec2
<
T
> 
å™
;

880 i‡(! 
exåa˘SHRT
 (
m©
, 
s˛
, 
shr
, 
rŸ
, 
å™
, 
exc
))

881  
m©
;

883 
M©rix33
<
T
> 
M
;

885 
M
.
å™¶©e
 (
å™
);

886 
M
.
rŸ©e
 (
rŸ
);

887 
M
.
shór
 (
shr
);

889  
M
;

893 
ãm∂©e
 <
˛ass
 
T
>

894 
boﬁ


895 
ªmoveSˇlög
 (
M©rix33
<
T
> &
m©
, 
boﬁ
 
exc
)

897 
Vec2
<
T
> 
s˛
;

898 
T
 
shr
;

899 
T
 
rŸ
;

900 
Vec2
<
T
> 
å™
;

902 i‡(! 
exåa˘SHRT
 (
m©
, 
s˛
, 
shr
, 
rŸ
, 
å™
, 
exc
))

903  
Ál£
;

905 
m©
.
makeIdítôy
 ();

906 
m©
.
å™¶©e
 (
å™
);

907 
m©
.
rŸ©e
 (
rŸ
);

908 
m©
.
shór
 (
shr
);

910  
åue
;

914 
ãm∂©e
 <
˛ass
 
T
>

915 
boﬁ


916 
exåa˘SˇlögAndShór
 (c⁄° 
M©rix33
<
T
> &
m©
, 
Vec2
<T> &
s˛
, T &
shr
, 
boﬁ
 
exc
)

918 
M©rix33
<
T
> 
M
 (
m©
);

920 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
M
, 
s˛
, 
shr
, 
exc
))

921  
Ál£
;

923  
åue
;

927 
ãm∂©e
 <
˛ass
 
T
>

928 
M©rix33
<
T
>

929 
ßnsSˇlögAndShór
 (c⁄° 
M©rix33
<
T
> &
m©
, 
boﬁ
 
exc
)

931 
Vec2
<
T
> 
s˛
;

932 
T
 
shr
;

933 
M©rix33
<
T
> 
M
 (
m©
);

935 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
M
, 
s˛
, 
shr
, 
exc
))

936  
m©
;

938  
M
;

942 
ãm∂©e
 <
˛ass
 
T
>

943 
boﬁ


944 
ªmoveSˇlögAndShór
 (
M©rix33
<
T
> &
m©
, 
boﬁ
 
exc
)

946 
Vec2
<
T
> 
s˛
;

947 
T
 
shr
;

949 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
m©
, 
s˛
, 
shr
, 
exc
))

950  
Ál£
;

952  
åue
;

955 
ãm∂©e
 <
˛ass
 
T
>

956 
boﬁ


957 
exåa˘AndRemoveSˇlögAndShór
 (
M©rix33
<
T
> &
m©
,

958 
Vec2
<
T
> &
s˛
, T &
shr
, 
boﬁ
 
exc
)

960 
Vec2
<
T
> 
row
[2];

962 
row
[0] = 
Vec2
<
T
> (
m©
[0][0], mat[0][1]);

963 
row
[1] = 
Vec2
<
T
> (
m©
[1][0], mat[1][1]);

965 
T
 
maxVÆ
 = 0;

966 
i
=0; i < 2; i++)

967 
j
=0; j < 2; j++)

968 i‡(
Im©h
::
abs
 (
row
[
i
][
j
]Ë> 
maxVÆ
)

969 
maxVÆ
 = 
Im©h
::
abs
 (
row
[
i
][
j
]);

979 i‡(
maxVÆ
 != 0)

981 
i
=0; i < 2; i++)

982 i‡(! 
checkF‹ZîoSˇÀInRow
 (
maxVÆ
, 
row
[
i
], 
exc
))

983  
Ál£
;

985 
row
[
i
] /
maxVÆ
;

989 
s˛
.
x
 = 
row
[0].
Àngth
 ();

990 i‡(! 
checkF‹ZîoSˇÀInRow
 (
s˛
.
x
, 
row
[0], 
exc
))

991  
Ál£
;

994 
row
[0] /
s˛
.
x
;

1006 
shr
 = 
row
[0].
dŸ
 (row[1]);

1007 
row
[1] -
shr
 *Ñow[0];

1010 
s˛
.
y
 = 
row
[1].
Àngth
 ();

1011 i‡(! 
checkF‹ZîoSˇÀInRow
 (
s˛
.
y
, 
row
[1], 
exc
))

1012  
Ál£
;

1015 
row
[1] /
s˛
.
y
;

1016 
shr
 /
s˛
.
y
;

1022 i‡(
row
[0][0] *Ñow[1][1] -Ñow[0][1] *Ñow[1][0] < 0)

1024 
row
[1][0] *= -1;

1025 
row
[1][1] *= -1;

1026 
s˛
[1] *= -1;

1027 
shr
 *= -1;

1032 
i
=0; i < 2; i++)

1034 
m©
[
i
][0] = 
row
[i][0];

1035 
m©
[
i
][1] = 
row
[i][1];

1038 
s˛
 *
maxVÆ
;

1040  
åue
;

1044 
ãm∂©e
 <
˛ass
 
T
>

1046 
exåa˘EuÀr
 (c⁄° 
M©rix33
<
T
> &
m©
, T &
rŸ
)

1052 
Vec2
<
T
> 
i
 (
m©
[0][0], mat[0][1]);

1053 
Vec2
<
T
> 
j
 (
m©
[1][0], mat[1][1]);

1055 
i
.
n‹mÆize
();

1056 
j
.
n‹mÆize
();

1062 
rŸ
 = - 
M©h
<
T
>::
©™2
 (
j
[0], 
i
[0]);

1066 
ãm∂©e
 <
˛ass
 
T
>

1067 
boﬁ


1068 
exåa˘SHRT
 (c⁄° 
M©rix33
<
T
> &
m©
,

1069 
Vec2
<
T
> &
s
,

1070 
T
 &
h
,

1071 
T
 &
r
,

1072 
Vec2
<
T
> &
t
,

1073 
boﬁ
 
exc
)

1075 
M©rix33
<
T
> 
rŸ
;

1077 
rŸ
 = 
m©
;

1078 i‡(! 
exåa˘AndRemoveSˇlögAndShór
 (
rŸ
, 
s
, 
h
, 
exc
))

1079  
Ál£
;

1081 
exåa˘EuÀr
 (
rŸ
, 
r
);

1083 
t
.
x
 = 
m©
[2][0];

1084 
t
.
y
 = 
m©
[2][1];

1086  
åue
;

1090 
ãm∂©e
 <
˛ass
 
T
>

1091 
boﬁ


1092 
checkF‹ZîoSˇÀInRow
 (c⁄° 
T
& 
s˛
,

1093 c⁄° 
Vec2
<
T
> &
row
,

1094 
boﬁ
 
exc
 )

1096 
i
 = 0; i < 2; i++)

1098 i‡((
abs
 (
s˛
Ë< 1 &&áb†(
row
[
i
]Ë>
limôs
<
T
>::
max
() *ábs (scl)))

1100 i‡(
exc
)

1101 
throw
 
Im©h
::
ZîoSˇÀExc
 ("CannotÑemove zero scaling "

1104  
Ál£
;

1108  
åue
;

	@shared/openexr-mac/include/OpenEXR/ImathPlane.h

37 #i‚de‡
INCLUDED_IMATHPLANE_H


38 
	#INCLUDED_IMATHPLANE_H


	)

55 
	~"Im©hVec.h
"

56 
	~"Im©hLöe.h
"

58 
«me•a˚
 
	gIm©h
 {

61 
	gãm∂©e
 <
˛ass
 
	gT
>

62 ˛as†
	cPœ√3


64 
	gpublic
:

66 
Vec3
<
T
> 
n‹mÆ
;

67 
T
 
	gdi°™˚
;

69 
Pœ√3
() {}

70 
Pœ√3
(c⁄° 
Vec3
<
T
> &
n‹mÆ
, T 
di°™˚
);

71 
Pœ√3
(c⁄° 
Vec3
<
T
> &
poöt
, c⁄° Vec3<T> &
n‹mÆ
);

72 
Pœ√3
(c⁄° 
Vec3
<
T
> &
poöt1
,

73 c⁄° 
Vec3
<
T
> &
poöt2
,

74 c⁄° 
Vec3
<
T
> &
poöt3
);

80 
£t
(c⁄° 
Vec3
<
T
> &
n‹mÆ
,

81 
T
 
di°™˚
);

83 
£t
(c⁄° 
Vec3
<
T
> &
poöt
,

84 c⁄° 
Vec3
<
T
> &
n‹mÆ
);

86 
£t
(c⁄° 
Vec3
<
T
> &
poöt1
,

87 c⁄° 
Vec3
<
T
> &
poöt2
,

88 c⁄° 
Vec3
<
T
> &
poöt3
 );

94 
boﬁ
 
öãr£˘
(c⁄° 
Löe3
<
T
> &
löe
,

95 
Vec3
<
T
> &
öãr£˘i⁄
) const;

97 
boﬁ
 
öãr£˘T
(c⁄° 
Löe3
<
T
> &
löe
,

98 
T
 &
∑ømëî
) const;

100 
T
 
di°™˚To
(c⁄° 
Vec3
<T> &) const;

102 
	gVec3
<
	gT
> 
ªÊe˘Poöt
(c⁄° 
Vec3
<
T
> &) const;

103 
	gVec3
<
	gT
> 
ªÊe˘Ve˘‹
(c⁄° 
Vec3
<
T
> &) const;

111 
	gPœ√3
<> 
	tPœ√3f
;

112 
	gPœ√3
<> 
	tPœ√3d
;

119 
	gãm∂©e
 <
˛ass
 
	gT
>

120 
ölöe
 
	gPœ√3
<
	gT
>::
Pœ√3
(c⁄° 
Vec3
<
T
> &
p0
,

121 c⁄° 
Vec3
<
T
> &
p1
,

122 c⁄° 
Vec3
<
T
> &
p2
)

124 
£t
(
p0
,
p1
,
p2
);

127 
	gãm∂©e
 <
˛ass
 
	gT
>

128 
ölöe
 
	gPœ√3
<
	gT
>::
Pœ√3
(c⁄° 
Vec3
<
T
> &
n
, T 
d
)

130 
£t
(
n
, 
d
);

133 
	gãm∂©e
 <
˛ass
 
	gT
>

134 
ölöe
 
	gPœ√3
<
	gT
>::
Pœ√3
(c⁄° 
Vec3
<
T
> &
p
, c⁄° Vec3<T> &
n
)

136 
£t
(
p
, 
n
);

139 
	gãm∂©e
 <
˛ass
 
	gT
>

140 
ölöe
 
	gPœ√3
<
	gT
>::
£t
(c⁄° 
Vec3
<
T
>& 
poöt1
,

141 c⁄° 
Vec3
<
T
>& 
poöt2
,

142 c⁄° 
Vec3
<
T
>& 
poöt3
)

144 
	gn‹mÆ
 = (
poöt2
 - 
poöt1
Ë% (
poöt3
 -Öoint1);

145 
	gn‹mÆ
.
n‹mÆize
();

146 
	gdi°™˚
 = 
n‹mÆ
 ^ 
poöt1
;

149 
	gãm∂©e
 <
˛ass
 
	gT
>

150 
ölöe
 
	gPœ√3
<
	gT
>::
£t
(c⁄° 
Vec3
<
T
>& 
poöt
, c⁄° Vec3<T>& 
n
)

152 
	gn‹mÆ
 = 
n
;

153 
	gn‹mÆ
.
n‹mÆize
();

154 
	gdi°™˚
 = 
n‹mÆ
 ^ 
poöt
;

157 
	gãm∂©e
 <
˛ass
 
	gT
>

158 
ölöe
 
	gPœ√3
<
	gT
>::
£t
(c⁄° 
Vec3
<
T
>& 
n
, T 
d
)

160 
	gn‹mÆ
 = 
n
;

161 
	gn‹mÆ
.
n‹mÆize
();

162 
	gdi°™˚
 = 
d
;

165 
	gãm∂©e
 <
˛ass
 
	gT
>

166 
ölöe
 
T
 
	gPœ√3
<
	gT
>::
di°™˚To
(c⁄° 
Vec3
<T> &
poöt
) const

168  (
poöt
 ^ 
n‹mÆ
Ë- 
di°™˚
;

171 
	gãm∂©e
 <
˛ass
 
	gT
>

172 
ölöe
 
	gVec3
<
	gT
> 
	gPœ√3
<T>::
ªÊe˘Poöt
(c⁄° 
Vec3
<
T
> &
poöt
) const

174  
n‹mÆ
 * 
di°™˚To
(
poöt
) * -2.0 +Öoint;

178 
	gãm∂©e
 <
˛ass
 
	gT
>

179 
ölöe
 
	gVec3
<
	gT
> 
	gPœ√3
<T>::
ªÊe˘Ve˘‹
(c⁄° 
Vec3
<
T
> &
v
) const

181  
n‹mÆ
 * (n‹mÆ ^ 
v
) * 2.0 - v;

185 
	gãm∂©e
 <
˛ass
 
	gT
>

186 
ölöe
 
boﬁ
 
	gPœ√3
<
	gT
>::
öãr£˘
(c⁄° 
Löe3
<
T
>& 
löe
, 
Vec3
<T>& 
poöt
) const

188 
T
 
	gd
 = 
n‹mÆ
 ^ 
löe
.
dú
;

189 i‡–
	gd
 =0.0 )  
Ál£
;

190 
T
 
	gt
 = - ((
n‹mÆ
 ^ 
löe
.
pos
Ë- 
di°™˚
Ë/ 
d
;

191 
	gpoöt
 = 
löe
(
t
);

192  
	gåue
;

195 
	gãm∂©e
 <
˛ass
 
	gT
>

196 
ölöe
 
boﬁ
 
	gPœ√3
<
	gT
>::
öãr£˘T
(c⁄° 
Löe3
<
T
>& 
löe
, T &
t
) const

198 
T
 
	gd
 = 
n‹mÆ
 ^ 
löe
.
dú
;

199 i‡–
	gd
 =0.0 )  
Ál£
;

200 
	gt
 = - ((
n‹mÆ
 ^ 
löe
.
pos
Ë- 
di°™˚
Ë/ 
d
;

201  
	gåue
;

204 
	gãm∂©e
<
˛ass
 
	gT
>

205 
	g°d
::
o°ªam
 &
›î©‹
<< (
°d
::o°ªam &
o
, c⁄° 
	gPœ√3
<
	gT
> &
	g∂™e
)

207  
	go
 << "(" << 
	g∂™e
.
	gn‹mÆ
 << ", " <<Öœ√.
	gdi°™˚


211 
	gãm∂©e
<
˛ass
 
	gT
>

212 
	gPœ√3
<
	gT
> 
	g›î©‹
* (c⁄° Pœ√3<T> &
	g∂™e
, c⁄° 
	gM©rix44
<T> &
	gM
)

219 
	gVec3
<
	gT
> 
	gdú1
 = 
Vec3
<
T
> (1, 0, 0Ë% 
	g∂™e
.
	gn‹mÆ
;

220 
T
 
	gdú1Lí
 = 
dú1
 ^ dir1;

222 
	gVec3
<
	gT
> 
	gtmp
 = 
Vec3
<
T
> (0, 1, 0Ë% 
	g∂™e
.
	gn‹mÆ
;

223 
T
 
	gtmpLí
 = 
tmp
 ^Åmp;

225 i‡(
	gtmpLí
 > 
	gdú1Lí
)

227 
	gdú1
 = 
tmp
;

228 
	gdú1Lí
 = 
tmpLí
;

231 
	gtmp
 = 
Vec3
<
T
> (0, 0, 1Ë% 
	g∂™e
.
	gn‹mÆ
;

232 
	gtmpLí
 = 
tmp
 ^Åmp;

234 i‡(
	gtmpLí
 > 
	gdú1Lí
)

236 
	gdú1
 = 
tmp
;

239 
	gVec3
<
	gT
> 
	gdú2
 = 
dú1
 % 
∂™e
.
n‹mÆ
;

240 
	gVec3
<
	gT
> 
	gpoöt
 = 
∂™e
.
di°™˚
 *Öœ√.
n‹mÆ
;

242  
	gPœ√3
<
	gT
> ( 
poöt
 * 
	gM
,

243 (
	gpoöt
 + 
	gdú2
Ë* 
	gM
,

244 (
	gpoöt
 + 
	gdú1
Ë* 
	gM
 );

247 
	gãm∂©e
<
˛ass
 
	gT
>

248 
	gPœ√3
<
	gT
> 
	g›î©‹
- (c⁄° Pœ√3<T> &
	g∂™e
)

250  
	gPœ√3
<
	gT
>(-
	g∂™e
.
	gn‹mÆ
,-∂™e.
	gdi°™˚
);

	@shared/openexr-mac/include/OpenEXR/ImathPlatform.h

37 #i‚de‡
INCLUDED_IMATHPLATFORM_H


38 
	#INCLUDED_IMATHPLATFORM_H


	)

49 
	~<m©h.h
>

51 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64


52 #i‚de‡
M_PI


53 
	#M_PI
 3.14159265358979323846

	)

76 #i‡
deföed
 
__GNUC__


77 #i‡!
deföed
(
ª°ri˘
)

78 
	#ª°ri˘
 
__ª°ri˘


	)

81 #ñi‡
deföed
(
__INTEL_COMPILER
Ë|| deföed(
__ICL
Ë|| deföed(
__ICC
Ë|| deföed(
__ECC
)

84 #ñi‡
deföed
 
__sgi


88 
	#ª°ri˘


	)

	@shared/openexr-mac/include/OpenEXR/ImathQuat.h

37 #i‚de‡
INCLUDED_IMATHQUAT_H


38 
	#INCLUDED_IMATHQUAT_H


	)

58 
	~"Im©hExc.h
"

59 
	~"Im©hM©rix.h
"

61 
	~<io°ªam
>

63 
«me•a˚
 
	gIm©h
 {

65 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


67 #¥agm®
w¨nög
(
dißbÀ
:4244)

70 
	gãm∂©e
 <
˛ass
 
	gT
>

71 
˛ass
 
	gQu©
;

73 
	gãm∂©e
<
˛ass
 
	gT
>

74 
	gQu©
<
	gT
> 
¶îp
 (c⁄° 
Qu©
<
T
> &
q1
,c⁄° Qu©<T> &
q2
, T 
t
);

76 
	gãm∂©e
<
˛ass
 
	gT
>

77 
	gQu©
<
	gT
> 
squad
 (c⁄° 
Qu©
<
T
> &
q1
,c⁄° Qu©<T> &
q2
,

78 c⁄° 
Qu©
<
T
> &
qa
,c⁄° Qu©<T> &
qb
, T 
t
);

80 
	gãm∂©e
<
˛ass
 
	gT
>

81 
öãrmedüã
 (c⁄° 
Qu©
<
T
> &
q0
, c⁄° Qu©<T> &
q1
,

82 c⁄° 
Qu©
<
T
> &
q2
, c⁄° Qu©<T> &
q3
,

83 
Qu©
<
T
> &
qa
, Qu©<T> &
qb
);

85 
	gãm∂©e
 <
˛ass
 
	gT
>

86 ˛as†
	cQu©


88 
	gpublic
:

90 
T
 
r
;

91 
	gVec3
<
	gT
> 
	gv
;

97 
Qu©
(Ë: 
r
(1), 
v
(0,0,0) {}

99 
	gãm∂©e
 <
˛ass
 
	gS
>

100 
Qu©
–c⁄° Qu©<
S
>& 
q
Ë: 
r
(q.r), 
v
(q.v) {}

102 
Qu©
–
T
 
s
, T 
i
, T 
j
, T 
k
 ) : 
r
(s), 
v
(i,j,k) {}

104 
Qu©
–
T
 
s
, 
Vec3
<T> 
d
 ) : 
r
(s), 
v
(d) {}

106 
	gQu©
<
	gT
> 
idítôy
() {  Quat<T>(); }

121 c⁄° 
	gQu©
<
	gT
>& 
	g›î©‹
(c⁄° 
Qu©
<
T
>&);

122 c⁄° 
	gQu©
<
	gT
>& 
	g›î©‹
*(c⁄° 
Qu©
<
T
>&);

123 c⁄° 
	gQu©
<
	gT
>& 
	g›î©‹
*(
T
);

124 c⁄° 
	gQu©
<
	gT
>& 
	g›î©‹
/(c⁄° 
Qu©
<
T
>&);

125 c⁄° 
	gQu©
<
	gT
>& 
	g›î©‹
/(
T
);

126 c⁄° 
	gQu©
<
	gT
>& 
	g›î©‹
+(c⁄° 
Qu©
<
T
>&);

127 c⁄° 
	gQu©
<
	gT
>& 
	g›î©‹
-(c⁄° 
Qu©
<
T
>&);

128 
	gT
& 
	g›î©‹
[] (
	gödex
);

129 
T
 
	g›î©‹
[] (
	gödex
) const;

131 
	gãm∂©e
 <
˛ass
 
	gS
> 
boﬁ
 
	g›î©‹
 =(c⁄° 
Qu©
<
S
> &
q
) const;

132 
	gãm∂©e
 <
˛ass
 
	gS
> 
boﬁ
 
	g›î©‹
 !(c⁄° 
Qu©
<
S
> &
q
) const;

134 
	gQu©
<
	gT
>& 
övît
();

135 
	gQu©
<
	gT
> 
övî£
() const;

136 
	gQu©
<
	gT
>& 
n‹mÆize
();

137 
	gQu©
<
	gT
> 
n‹mÆized
() const;

138 
T
 
Àngth
() const;

144 
	gQu©
<
	gT
>& 
£tAxisAngÀ
(c⁄° 
Vec3
<
T
>& 
axis
, T 
ødüns
);

145 
	gQu©
<
	gT
>& 
£tRŸ©i⁄
(c⁄° 
Vec3
<
T
>& 
‰omDúe˘i⁄
,

146 c⁄° 
Vec3
<
T
>& 
toDúe˘i⁄
);

148 
T
 
™gÀ
() const;

149 
	gVec3
<
	gT
> 
axis
() const;

151 
	gM©rix33
<
	gT
> 
toM©rix33
() const;

152 
	gM©rix44
<
	gT
> 
toM©rix44
() const;

154 
	gQu©
<
	gT
> 
log
() const;

155 
	gQu©
<
	gT
> 
exp
() const;

163 
	gQu©
<> 
	tQu©f
;

164 
	gQu©
<> 
	tQu©d
;

171 
	gãm∂©e
<
˛ass
 
	gT
>

172 
ölöe
 c⁄° 
	gQu©
<
	gT
>& Qu©<T>::
›î©‹
(c⁄° 
Qu©
<
T
>& 
q
)

174 
r
 = 
q
.r;

175 
	gv
 = 
q
.
v
;

176  *
	gthis
;

179 
	gãm∂©e
<
˛ass
 
	gT
>

180 
ölöe
 c⁄° 
	gQu©
<
	gT
>& Qu©<T>::
›î©‹
*(c⁄° 
Qu©
<
T
>& 
q
)

182 
T
 
πmp
 = 
r
 * 
q
.∏- (
v
 ^ q.v);

183 
	gv
 = 
r
 * 
q
.
v
 + v * q.r + v % q.v;

184 
	gr
 = 
πmp
;

185  *
	gthis
;

188 
	gãm∂©e
<
˛ass
 
	gT
>

189 
ölöe
 c⁄° 
	gQu©
<
	gT
>& Qu©<T>::
›î©‹
*(
T
 
t
)

191 
r
 *
t
;

192 
	gv
 *
t
;

193  *
	gthis
;

196 
	gãm∂©e
<
˛ass
 
	gT
>

197 
ölöe
 c⁄° 
	gQu©
<
	gT
>& Qu©<T>::
›î©‹
/(c⁄° 
Qu©
<
T
>& 
q
)

199 *
this
 = *thi†* 
q
.
övî£
();

200  *
	gthis
;

203 
	gãm∂©e
<
˛ass
 
	gT
>

204 
ölöe
 c⁄° 
	gQu©
<
	gT
>& Qu©<T>::
›î©‹
/(
T
 
t
)

206 
r
 /
t
;

207 
	gv
 /
t
;

208  *
	gthis
;

211 
	gãm∂©e
<
˛ass
 
	gT
>

212 
ölöe
 c⁄° 
	gQu©
<
	gT
>& Qu©<T>::
›î©‹
+(c⁄° 
Qu©
<
T
>& 
q
)

214 
r
 +
q
.r;

215 
	gv
 +
q
.
v
;

216  *
	gthis
;

219 
	gãm∂©e
<
˛ass
 
	gT
>

220 
ölöe
 c⁄° 
	gQu©
<
	gT
>& Qu©<T>::
›î©‹
-(c⁄° 
Qu©
<
T
>& 
q
)

222 
r
 -
q
.r;

223 
	gv
 -
q
.
v
;

224  *
	gthis
;

226 
	gãm∂©e
<
˛ass
 
	gT
>

227 
ölöe
 
	gT
& 
	gQu©
<T>::
›î©‹
[] (
ödex
)

229  
ödex
 ? 
v
[ödex-1] : 
r
;

232 
	gãm∂©e
<
˛ass
 
	gT
>

233 
ölöe
 
T
 
	gQu©
<
	gT
>::
›î©‹
[] (
ödex
) const

235  
ödex
 ? 
v
[ödex-1] : 
r
;

238 
	gãm∂©e
 <
˛ass
 
	gT
>

239 
	gãm∂©e
 <
˛ass
 
	gS
>

240 
ölöe
 
boﬁ


241 
	gQu©
<
	gT
>::
›î©‹
 =(c⁄° 
Qu©
<
S
> &
q
) const

243  
r
 =
q
.∏&& 
v
 == q.v;

246 
	gãm∂©e
 <
˛ass
 
	gT
>

247 
	gãm∂©e
 <
˛ass
 
	gS
>

248 
ölöe
 
boﬁ


249 
	gQu©
<
	gT
>::
›î©‹
 !(c⁄° 
Qu©
<
S
> &
q
) const

251  
r
 !
q
.∏|| 
v
 != q.v;

254 
	gãm∂©e
<
˛ass
 
	gT
>

255 
ölöe
 
T
 
	g›î©‹
^ (c⁄° 
	gQu©
<
	gT
>& 
	gq1
,c⁄° Qu©<T>& 
	gq2
)

257  
	gq1
.
r
 * 
	gq2
.
	gr
 + (q1.
	gv
 ^ q2.v);

260 
	gãm∂©e
 <
˛ass
 
	gT
>

261 
ölöe
 
T
 
	gQu©
<
	gT
>::
	$Àngth
() const

263  
M©h
<
T
>::
	`sqπ
–
r
 *Ñ + (
v
 ^ v) );

264 
	}
}

266 
	gãm∂©e
 <
˛ass
 
	gT
>

267 
ölöe
 
	gQu©
<
	gT
>& Qu©<T>::
	$n‹mÆize
()

269 i‡–
T
 
l
 = 
	`Àngth
(ËË{ 
r
 /l; 
v
 /=Ü; }

270 { 
r
 = 1; 
v
 = 
Vec3
<
T
>(0); }

271  *
this
;

272 
	}
}

274 
	gãm∂©e
 <
˛ass
 
	gT
>

275 
ölöe
 
	gQu©
<
	gT
> Qu©<T>::
	$n‹mÆized
() const

277 i‡–
T
 
l
 = 
	`Àngth
(ËË 
	`Qu©
–
r
 /Ü, 
v
 /Ü );

278  
	`Qu©
();

279 
	}
}

281 
	gãm∂©e
<
˛ass
 
	gT
>

282 
ölöe
 
	gQu©
<
	gT
> Qu©<T>::
	$övî£
() const

288 
T
 
qdŸ
 = *
this
 ^ *this;

289  
	`Qu©
–
r
 / 
qdŸ
, -
v
 / qdot );

290 
	}
}

292 
	gãm∂©e
<
˛ass
 
	gT
>

293 
ölöe
 
	gQu©
<
	gT
>& Qu©<T>::
	$övît
()

295 
T
 
qdŸ
 = (*
this
) ^ (*this);

296 
r
 /
qdŸ
;

297 
v
 = -v / 
qdŸ
;

298  *
this
;

299 
	}
}

301 
	gãm∂©e
<
˛ass
 
	gT
>

302 
	gQu©
<
	gT
>

303 
¶îp
(c⁄° 
Qu©
<
T
> &
q1
,c⁄° Qu©<T> &
q2
, T 
t
)

318 
T
 
	gcosomega
 = 
q1
 ^ 
q2
;

319 i‡(
	gcosomega
 >(
T
) 1.0)

326  
q1
;

329 
T
 
	gsöomega
 = 
M©h
<T>::
sqπ
 (1 - 
cosomega
 * cosomega);

331 
	gQu©
<
	gT
> 
	gªsu…
;

333 i‡(
söomega
 * 
	glimôs
<
	gT
>::
max
() > 1)

335 
T
 
omega
 = 
M©h
<T>::
acos
 (
cosomega
);

336 
T
 
	gs1
 = 
M©h
<T>::
sö
 ((1.0 - 
t
Ë* 
omega
Ë/ 
söomega
;

337 
T
 
	gs2
 = 
M©h
<T>::
sö
 (
t
 * 
omega
Ë/ 
söomega
;

339 
	gªsu…
 = 
s1
 * 
q1
 + 
s2
 * 
q2
;

341 i‡(
	gcosomega
 > 0)

347 
T
 
	gs1
 = 1.0 - 
t
;

348 
T
 
	gs2
 = 
t
;

350 
	gªsu…
 = 
s1
 * 
q1
 + 
s2
 * 
q2
;

358 
	gªsu…
.
	gv
.
	gx
 = - 
q1
.
v
.
y
;

359 
	gªsu…
.
	gv
.
	gy
 = 
q1
.
v
.
x
;

360 
	gªsu…
.
	gv
.
	gz
 = - 
q1
.
r
;

361 
	gªsu…
.
	gr
 = 
q1
.
v
.
z
;

363 
T
 
	gs1
 = 
M©h
<T>::
sö
 ((0.5 - 
t
Ë* 
M_PI
);

364 
T
 
	gs2
 = 
M©h
<T>::
sö
 (
t
 * 
M_PI
);

366 
	gªsu…
 = 
s1
 * 
q1
 + 
s2
 * 
ªsu…
;

369  
	gªsu…
;

372 
	gãm∂©e
<
˛ass
 
	gT
>

373 
	gQu©
<
	gT
> 
•löe
(c⁄° 
Qu©
<
T
> &
q0
, c⁄° Qu©<T> &
q1
,

374 c⁄° 
Qu©
<
T
> &
q2
, c⁄° Qu©<T> &
q3
,

375 
T
 
t
)

398 
	gQu©
<
	gT
> 
	gqa
 = 
öãrmedüã
 (
q0
, 
q1
, 
q2
);

399 
	gQu©
<
	gT
> 
	gqb
 = 
öãrmedüã
 (
q1
, 
q2
, 
q3
);

400 
	gQu©
<
	gT
> 
	gªsu…
 = 
squad
(
q1
, 
qa
, 
qb
, 
q2
, 
t
);

402  
	gªsu…
;

405 
	gãm∂©e
<
˛ass
 
	gT
>

406 
	gQu©
<
	gT
> 
squad
(c⁄° 
Qu©
<
T
> &
q1
, c⁄° Qu©<T> &
qa
,

407 c⁄° 
Qu©
<
T
> &
qb
, c⁄° Qu©<T> &
q2
,

408 
T
 
t
)

418 
	gQu©
<
	gT
> 
	gr1
 = 
¶îp
(
q1
, 
q2
, 
t
);

419 
	gQu©
<
	gT
> 
	gr2
 = 
¶îp
(
qa
, 
qb
, 
t
);

420 
	gQu©
<
	gT
> 
	gªsu…
 = 
¶îp
(
r1
, 
r2
, 2*
t
*(1-t));

422  
	gªsu…
;

425 
	gãm∂©e
<
˛ass
 
	gT
>

426 
	gQu©
<
	gT
> 
öãrmedüã
(c⁄° 
Qu©
<
T
> &
q0
, c⁄° Qu©<T> &
q1
, c⁄° Qu©<T> &
q2
)

434 
	gQu©
<
	gT
> 
	gq1öv
 = 
q1
.
övî£
();

435 
	gQu©
<
	gT
> 
	gc1
 = 
q1öv
*
q2
;

436 
	gQu©
<
	gT
> 
	gc2
 = 
q1öv
*
q0
;

437 
	gQu©
<
	gT
> 
	gc3
 = (
T
Ë(-0.25Ë* (
c2
.
log
(Ë+ 
c1
.log());

438 
	gQu©
<
	gT
> 
	gqa
 = 
q1
 * 
c3
.
exp
();

439 
	gqa
.
n‹mÆize
();

440  
	gqa
;

443 
	gãm∂©e
 <
˛ass
 
	gT
>

444 
ölöe
 
	gQu©
<
	gT
> Qu©<T>::
	$log
() const

451 
T
 
thëa
 = 
M©h
<T>::
	`acos
 (
°d
::
	`mö
 (
r
, (T) 1.0));

452 i‡(
thëa
 == 0)

453  
Qu©
<
T
> (0, 
v
);

455 
T
 
söthëa
 = 
M©h
<T>::
	`sö
 (
thëa
);

457 
T
 
k
;

458 i‡(
	`abs
 (
söthëa
Ë< 1 &&áb†(
thëa
Ë>
limôs
<
T
>::
	`max
() *ábs (sintheta))

459 
k
 = 0;

461 
k
 = 
thëa
 / 
söthëa
;

463  
Qu©
<
T
> ((TË0, 
v
.
x
 * 
k
, v.
y
 * k, v.
z
 * k);

464 
	}
}

466 
	gãm∂©e
 <
˛ass
 
	gT
>

467 
ölöe
 
	gQu©
<
	gT
> Qu©<T>::
	$exp
() const

475 
T
 
thëa
 = 
v
.
	`Àngth
();

476 
T
 
söthëa
 = 
M©h
<T>::
	`sö
 (
thëa
);

478 
T
 
k
;

479 i‡(
	`abs
 (
thëa
Ë< 1 &&áb†(
söthëa
Ë>
limôs
<
T
>::
	`max
() *ábs (theta))

480 
k
 = 0;

482 
k
 = 
söthëa
 / 
thëa
;

484 
T
 
co°hëa
 = 
M©h
<T>::
	`cos
 (
thëa
);

486  
Qu©
<
T
> (
co°hëa
, 
v
.
x
 * 
k
, v.
y
 * k, v.
z
 * k);

487 
	}
}

489 
	gãm∂©e
 <
˛ass
 
	gT
>

490 
ölöe
 
T
 
	gQu©
<
	gT
>::
	$™gÀ
() const

492  2.0*
M©h
<
T
>::
	`acos
(
r
);

493 
	}
}

495 
	gãm∂©e
 <
˛ass
 
	gT
>

496 
ölöe
 
	gVec3
<
	gT
> 
	gQu©
<T>::
	$axis
() const

498  
v
.
	`n‹mÆized
();

499 
	}
}

501 
	gãm∂©e
 <
˛ass
 
	gT
>

502 
ölöe
 
	gQu©
<
	gT
>& Qu©<T>::
£tAxisAngÀ
(c⁄° 
Vec3
<
T
>& 
axis
, T 
ødüns
)

504 
	gr
 = 
M©h
<
T
>::
cos
(
ødüns
/2);

505 
	gv
 = 
axis
.
n‹mÆized
(Ë* 
M©h
<
T
>::
sö
(
ødüns
/2);

506  *
	gthis
;

510 
	gãm∂©e
 <
˛ass
 
	gT
>

511 
	gQu©
<
	gT
>&

512 
	gQu©
<
	gT
>::
£tRŸ©i⁄
(c⁄° 
Vec3
<
T
>& 
‰om
, c⁄° Vec3<T>& 
to
)

518 
T
 
	gco°
 = 
‰om
.
dŸ
(
to
Ë/ 
M©h
<T>::
sqπ
(from.dot(from) *Åo.dot(to));

521 i‡(
	gco°
 > 0.99999)

527 
	gr
 = 1.0;

528 
	gv
 = 
Vec3
<
T
>(0);

530 i‡(
	gco°
 < -0.99999)

537 
	gVec3
<
	gT
> 
	g‰m
 = 
‰om
.
n‹mÆized
();

538 
	gv
 = 
‰m
.
¸oss
(
Vec3
<
T
>(1, 0, 0));

539 i‡(
	gv
.
Àngth
() < 0.00001)

540 
	gv
 = 
‰m
.
¸oss
(
Vec3
<
T
>(0, 1, 0));

541 
	gr
 = 0;

542 
	gv
.
n‹mÆize
();

552 
	gr
 = 
M©h
<
T
>::
sqπ
(0.5 * (1.0 + 
co°
));

560 
	gv
 = 
‰om
.
¸oss
(
to
);

561 
	gv
 *
M©h
<
T
>::
sqπ
((0.5 * (1.0 - 
co°
))/(
v
.
dŸ
(v)));

564  *
	gthis
;

567 
	gãm∂©e
<
˛ass
 
	gT
>

568 
	gM©rix33
<
	gT
> 
	gQu©
<T>::
	$toM©rix33
() const

570  
M©rix33
<
T
>(1. - 2.0 * (
v
.
y
 * v.y + v.
z
 * v.z),

571 2.0 * (
v
.
x
 * v.
y
 + v.
z
 * 
r
),

572 2.0 * (
v
.
z
 * v.
x
 - v.
y
 * 
r
),

574 2.0 * (
v
.
x
 * v.
y
 - v.
z
 * 
r
),

575 1. - 2.0 * (
v
.
z
 * v.z + v.
x
 * v.x),

576 2.0 * (
v
.
y
 * v.
z
 + v.
x
 * 
r
),

578 2.0 * (
v
.
z
 * v.
x
 + v.
y
 * 
r
),

579 2.0 * (
v
.
y
 * v.
z
 - v.
x
 * 
r
),

580 1. - 2.0 * (
v
.
y
 * v.y + v.
x
 * v.x));

581 
	}
}

583 
	gãm∂©e
<
˛ass
 
	gT
>

584 
	gM©rix44
<
	gT
> 
	gQu©
<T>::
	$toM©rix44
() const

586  
M©rix44
<
T
>(1. - 2.0 * (
v
.
y
 * v.y + v.
z
 * v.z),

587 2.0 * (
v
.
x
 * v.
y
 + v.
z
 * 
r
),

588 2.0 * (
v
.
z
 * v.
x
 - v.
y
 * 
r
),

590 2.0 * (
v
.
x
 * v.
y
 - v.
z
 * 
r
),

591 1. - 2.0 * (
v
.
z
 * v.z + v.
x
 * v.x),

592 2.0 * (
v
.
y
 * v.
z
 + v.
x
 * 
r
),

594 2.0 * (
v
.
z
 * v.
x
 + v.
y
 * 
r
),

595 2.0 * (
v
.
y
 * v.
z
 - v.
x
 * 
r
),

596 1. - 2.0 * (
v
.
y
 * v.y + v.
x
 * v.x),

602 
	}
}

605 
	gãm∂©e
<
˛ass
 
	gT
>

606 
ölöe
 
	gM©rix33
<
	gT
> 
	g›î©‹
* (c⁄° M©rix33<T> &
	gM
, c⁄° 
	gQu©
<T> &
	gq
)

608  
M
 * 
	gq
.
toM©rix33
();

611 
	gãm∂©e
<
˛ass
 
	gT
>

612 
ölöe
 
	gM©rix33
<
	gT
> 
	g›î©‹
* (c⁄° 
	gQu©
<T> &
	gq
, c⁄° M©rix33<T> &
	gM
)

614  
	gq
.
toM©rix33
(Ë* 
	gM
;

617 
	gãm∂©e
<
˛ass
 
	gT
>

618 
	g°d
::
o°ªam
& 
›î©‹
<< (
°d
::o°ªam &
o
, c⁄° 
	gQu©
<
	gT
> &
	gq
)

620  
	go
 << "(" << 
	gq
.
	gr


621 << " " << 
	gq
.
	gv
.
	gx


622 << " " << 
	gq
.
	gv
.
	gy


623 << " " << 
	gq
.
	gv
.
	gz


628 
	gãm∂©e
<
˛ass
 
	gT
>

629 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
* (c⁄° Qu©<T>& 
	gq1
, c⁄° Qu©<T>& 
	gq2
)

632  
	gQu©
<
	gT
>–
	gq1
.
r
 * 
	gq2
.
	gr
 - (q1.
	gv
 ^ q2.v),

633 
	gq1
.
r
 * 
	gq2
.
	gv
 + q1.
v
 * q2.
	gr
 + q1.v % q2.v );

636 
	gãm∂©e
<
˛ass
 
	gT
>

637 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
/ (c⁄° Qu©<T>& 
	gq1
, c⁄° Qu©<T>& 
	gq2
)

639  
q1
 * 
	gq2
.
övî£
();

642 
	gãm∂©e
<
˛ass
 
	gT
>

643 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
/ (c⁄° Qu©<T>& 
	gq
,
T
 
	gt
)

645  
	gQu©
<
	gT
>(
	gq
.
	gr
/
	gt
,q.
	gv
/t);

648 
	gãm∂©e
<
˛ass
 
	gT
>

649 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
* (c⁄° Qu©<T>& 
	gq
,
T
 
	gt
)

651  
	gQu©
<
	gT
>(
	gq
.
r
*
	gt
,q.
v
*t);

654 
	gãm∂©e
<
˛ass
 
	gT
>

655 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
* (
T
 
	gt
, c⁄° Qu©<T>& 
	gq
)

657  
	gQu©
<
	gT
>(
	gq
.
r
*
	gt
,q.
v
*t);

660 
	gãm∂©e
<
˛ass
 
	gT
>

661 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
+ (c⁄° Qu©<T>& 
	gq1
, c⁄° Qu©<T>& 
	gq2
)

663  
	gQu©
<
	gT
>–
	gq1
.
	gr
 + 
	gq2
.r, q1.
	gv
 + q2.v );

666 
	gãm∂©e
<
˛ass
 
	gT
>

667 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
- (c⁄° Qu©<T>& 
	gq1
, c⁄° Qu©<T>& 
	gq2
)

669  
	gQu©
<
	gT
>–
	gq1
.
	gr
 - 
	gq2
.r, q1.
	gv
 - q2.v );

672 
	gãm∂©e
<
˛ass
 
	gT
>

673 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
~ (c⁄° Qu©<T>& 
	gq
)

675  
	gQu©
<
	gT
>–
	gq
.
	gr
, -q.
	gv
 );

678 
	gãm∂©e
<
˛ass
 
	gT
>

679 
ölöe
 
	gQu©
<
	gT
> 
	g›î©‹
- (c⁄° Qu©<T>& 
	gq
)

681  
	gQu©
<
	gT
>–-
	gq
.
	gr
, -q.
	gv
 );

684 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


685 #¥agm®
w¨nög
(:4244)

	@shared/openexr-mac/include/OpenEXR/ImathRandom.h

36 #i‚de‡
INCLUDED_IMATHRANDOM_H


37 
	#INCLUDED_IMATHRANDOM_H


	)

72 
	~<°dlib.h
>

73 
	~<m©h.h
>

75 
«me•a˚
 
	gIm©h
 {

84 ˛as†
	cR™d32


86 
	gpublic
:

92 
R™d32
 (
£ed
 = 0);

99 
öô
 (
£ed
);

106 
boﬁ
 
√xtb
 ();

113 
√xti
 ();

120 
√xtf
 ();

127 
√xtf
 (
øngeMö
, 
øngeMax
);

130 
	g¥iv©e
:

132 
√xt
 ();

134 
	g_°©e
;

144 ˛as†
	cR™d48


146 
	gpublic
:

152 
R™d48
 (
£ed
 = 0);

159 
öô
 (
£ed
);

166 
boﬁ
 
√xtb
 ();

173 
√xti
 ();

180 
√xtf
 ();

187 
√xtf
 (
øngeMö
, 
øngeMax
);

190 
	g¥iv©e
:

192 
_°©e
[3];

194 #i‡
deföed
 ( 
_WIN32
 ) || deföed ( 
_WIN64
 ) || deföed ( 
__MWERKS__
 )

195 
shi·Sèã
();

205 
	gãm∂©e
 <
˛ass
 
	gVec
, cœs†
	gR™d
>

206 
Vec


207 
sﬁidSphîeR™d
 (
R™d
 &
ønd
);

215 
	gãm∂©e
 <
˛ass
 
	gVec
, cœs†
	gR™d
>

216 
Vec


217 
hﬁlowSphîeR™d
 (
R™d
 &
ønd
);

225 
	gãm∂©e
 <
˛ass
 
	gR™d
>

227 
gaussR™d
 (
R™d
 &
ønd
);

236 
	gãm∂©e
 <
˛ass
 
	gVec
, cœs†
	gR™d
>

237 
Vec


238 
gaussSphîeR™d
 (
R™d
 &
ønd
);

246 
ölöe
 

247 
	gR™d32
::
	$öô
 (
£ed
)

249 
_°©e
 = (
£ed
 * 0xa5a573a5L) ^ 0x5a5a5a5aL;

250 
	}
}

253 
ölöe


254 
	gR™d32
::
	$R™d32
 (
£ed
)

256 
	`öô
 (
£ed
);

257 
	}
}

260 
ölöe
 

261 
	gR™d32
::
	$√xt
 ()

263 
_°©e
 = 1664525L * _state + 1013904223L;

264 
	}
}

267 
ölöe
 
boﬁ


268 
	gR™d32
::
	$√xtb
 ()

270 
	`√xt
 ();

272  !!(
_°©e
 & 2147483648UL);

273 
	}
}

276 
ölöe
 

277 
	gR™d32
::
	$√xti
 ()

279 
	`√xt
 ();

280  
_°©e
 & 0xffffffff;

281 
	}
}

284 
ölöe
 

285 
	gR™d32
::
	$√xtf
 ()

287 
	`√xt
 ();

288  ((Ë(
_°©e
 & 0xffffff)) * (() (1.0F / 0x1000000));

289 
	}
}

292 
ölöe
 

293 
	gR™d32
::
	$√xtf
 (
øngeMö
, 
øngeMax
)

295  
øngeMö
 + 
	`√xtf
(Ë* (
øngeMax
 -ÑangeMin);

296 
	}
}

299 
ölöe
 

300 
	gR™d48
::
	$öô
 (
£ed
)

302 
£ed
 = (seed * 0xa5a573a5L) ^ 0x5a5a5a5aL;

304 
_°©e
[0] = (Ë(
£ed
);

305 
_°©e
[1] = (Ë(
£ed
 >> 16);

306 
_°©e
[2] = (Ë(
£ed
);

307 
	}
}

310 
ölöe


311 
	gR™d48
::
	$R™d48
 (
£ed
)

313 
	`öô
 (
£ed
);

314 
	}
}

317 #i‡
deföed
 ( 
_WIN32
 ) || deföed ( 
_WIN64
 ) || 
	$deföed
 ( 
__MWERKS__
 )

319 
ölöe
 

320 
R™d48
::
	$shi·Sèã
()

322 
accu
;

323 
ãmp
[2];

325 
accu
 = 0xe66dUL * ( )
_°©e
[0] + 0x000bUL;

327 
ãmp
[0] = ( )
accu
;

328 
accu
 >>= ( ) * 8;

330 
accu
 +0xe66dUL * ( )
_°©e
[1] +

331 0xdìcUL * ( )
_°©e
[0];

333 
ãmp
[1] = ( )
accu
;

334 
accu
 >>= ( ) * 8;

336 
accu
 +0xe66dUL * 
_°©e
[2] +

337 0xdìcUL * 
_°©e
[1] +

338 0x0005UL * 
_°©e
[0];

340 
_°©e
[0] = 
ãmp
[0];

341 
_°©e
[1] = 
ãmp
[1];

342 
_°©e
[2] = ( )
accu
;

343 
	}
}

347 
ölöe
 
boﬁ


348 
	gR™d48
::
	$√xtb
 ()

350 #i‡
	`deföed
 ( 
_WIN32
 ) || deföed ( 
_WIN64
 ) || deföed ( 
__MWERKS__
 )

351 
	`shi·Sèã
();

352  ( ( –
_°©e
[2] ) << 15 ) + ( ( _state[1] ) >> 1 ) ) & 0x1;

354  
	`ƒ™d48
 (
_°©e
) & 1;

356 
	}
}

359 
ölöe
 

360 
	gR™d48
::
	$√xti
 ()

362 #i‡
	`deföed
 ( 
_WIN32
 ) || deföed ( 
_WIN64
 ) || deföed ( 
__MWERKS__
 )

363 
	`shi·Sèã
();

364  ( –
_°©e
[2] ) << 15 ) + ( ( _state[1] ) >> 1 );

366  
	`ƒ™d48
 (
_°©e
);

368 
	}
}

371 
ölöe
 

372 
	gR™d48
::
	$√xtf
 ()

374 #i‡
	`deföed
 ( 
_WIN32
 ) || deföed ( 
_WIN64
 ) || deföed ( 
__MWERKS__
 )

375 
	`shi·Sèã
();

376  
	`ldexp
––
_°©e
[0] ), -48 ) +

377 
	`ldexp
––
_°©e
[1] ), -32 ) +

378 
	`ldexp
––
_°©e
[2] ), -16 );

380  
	`î™d48
 (
_°©e
);

382 
	}
}

385 
ölöe
 

386 
	gR™d48
::
	$√xtf
 (
øngeMö
, 
øngeMax
)

388  
øngeMö
 + 
	`√xtf
(Ë* (
øngeMax
 -ÑangeMin);

389 
	}
}

392 
	gãm∂©e
 <
˛ass
 
	gVec
, cœs†
	gR™d
>

393 
Vec


394 
	$sﬁidSphîeR™d
 (
R™d
 &
ønd
)

396 
Vec
 
v
;

400 
i
 = 0; i < 
Vec
::
	`dimísi⁄s
(); i++)

401 
v
[
i
] = (
ty≥«me
 
Vec
::
Ba£Ty≥
Ë
ønd
.
	`√xtf
 (-1, 1);

403 
v
.
	`Àngth2
() > 1);

405  
v
;

406 
	}
}

409 
	gãm∂©e
 <
˛ass
 
	gVec
, cœs†
	gR™d
>

410 
Vec


411 
	$hﬁlowSphîeR™d
 (
R™d
 &
ønd
)

413 
Vec
 
v
;

414 
ty≥«me
 
Vec
::
Ba£Ty≥
 
Àngth
;

418 
i
 = 0; i < 
Vec
::
	`dimísi⁄s
(); i++)

419 
v
[
i
] = (
ty≥«me
 
Vec
::
Ba£Ty≥
Ë
ønd
.
	`√xtf
 (-1, 1);

421 
Àngth
 = 
v
.
	`Àngth
();

423 
Àngth
 > 1 ||Üength == 0);

425  
v
 / 
Àngth
;

426 
	}
}

429 
	gãm∂©e
 <
˛ass
 
	gR™d
>

431 
	$gaussR™d
 (
R™d
 &
ønd
)

433 
x
;

434 
y
;

435 
Àngth2
;

439 
x
 = (
ønd
.
	`√xtf
 (-1, 1));

440 
y
 = (
ønd
.
	`√xtf
 (-1, 1));

441 
Àngth2
 = 
x
 * x + 
y
 * y;

443 
Àngth2
 >= 1 ||Üength2 == 0);

445  
x
 * 
	`sqπ
 (-2 * 
	`log
 (
Àngth2
) /Üength2);

446 
	}
}

449 
	gãm∂©e
 <
˛ass
 
	gVec
, cœs†
	gR™d
>

450 
Vec


451 
	$gaussSphîeR™d
 (
R™d
 &
ønd
)

453  
hﬁlowSphîeR™d
 <
Vec
> (
ønd
Ë* 
	`gaussR™d
 (rand);

454 
	}
}

456 
dønd48
();

457 
Ã™d48
();

	@shared/openexr-mac/include/OpenEXR/ImathRoots.h

37 #i‚de‡
INCLUDED_IMATHROOTS_H


38 
	#INCLUDED_IMATHROOTS_H


	)

46 
	~<com∂ex
>

48 
«me•a˚
 
	gIm©h
 {

83 
	gãm∂©e
 <
˛ass
 
	gT
> 
sﬁveLöór
 (
T
 
a
, T 
b
, T &
x
);

84 
	gãm∂©e
 <
˛ass
 
	gT
> 
sﬁveQuadøtic
 (
T
 
a
, T 
b
, T 
c
, T 
x
[2]);

85 
	gãm∂©e
 <
˛ass
 
	gT
> 
sﬁveN‹mÆizedCubic
 (
T
 
r
, T 
s
, T 
t
, T 
x
[3]);

86 
	gãm∂©e
 <
˛ass
 
	gT
> 
sﬁveCubic
 (
T
 
a
, T 
b
, T 
c
, T 
d
, T 
x
[3]);

93 
	gãm∂©e
 <
˛ass
 
	gT
>

95 
sﬁveLöór
 (
T
 
a
, T 
b
, T &
x
)

97 i‡(
	ga
 != 0)

99 
x
 = -
b
 / 
a
;

102 i‡(
	gb
 != 0)

113 
	gãm∂©e
 <
˛ass
 
	gT
>

115 
sﬁveQuadøtic
 (
T
 
a
, T 
b
, T 
c
, T 
x
[2])

117 i‡(
	ga
 == 0)

119  
sﬁveLöór
 (
b
, 
c
, 
x
[0]);

123 
T
 
	gD
 = 
b
 * b - 4 * 
a
 * 
c
;

125 i‡(
	gD
 > 0)

127 
T
 
	gs
 = 
sqπ
 (
D
);

129 
	gx
[0] = (-
b
 + 
s
Ë/ (2 * 
a
);

130 
	gx
[1] = (-
b
 - 
s
Ë/ (2 * 
a
);

133 i‡(
	gD
 == 0)

135 
x
[0] = -
b
 / (2 * 
a
);

146 
	gãm∂©e
 <
˛ass
 
	gT
>

148 
sﬁveN‹mÆizedCubic
 (
T
 
r
, T 
s
, T 
t
, T 
x
[3])

150 
T
 
	gp
 = (3 * 
s
 - 
r
 *Ñ) / 3;

151 
T
 
	gq
 = 2 * 
r
 *Ñ *Ñ / 27 -Ñ * 
s
 / 3 + 
t
;

152 
T
 
	gp3
 = 
p
 / 3;

153 
T
 
	gq2
 = 
q
 / 2;

154 
T
 
	gD
 = 
p3
 *Ö3 *Ö3 + 
q2
 * q2;

156 i‡(
	gD
 =0 && 
p3
 == 0)

158 
x
[0] = -
r
 / 3;

159 
	gx
[1] = -
r
 / 3;

160 
	gx
[2] = -
r
 / 3;

164 
	g°d
::
com∂ex
<
T
> 
u
 = 
°d
::
pow
 (-
q
 / 2 + std::
sqπ
 (°d::com∂ex<T> (
D
)),

165 
T
 (1) / T (3));

167 
	g°d
::
com∂ex
<
T
> 
v
 = -
p
 / (T (3Ë* 
u
);

169 c⁄° 
T
 
	gsqπ3
 = T (1.73205080756887729352744634150587);

171 
	g°d
::
com∂ex
<
T
> 
y0
 (
u
 + 
v
);

173 
	g°d
::
com∂ex
<
T
> 
y1
 (-(
u
 + 
v
) / T (2) +

174 (
u
 - 
v
Ë/ 
T
 (2Ë* 
°d
::
com∂ex
<T> (0, 
sqπ3
));

176 
	g°d
::
com∂ex
<
T
> 
y2
 (-(
u
 + 
v
) / T (2) -

177 (
u
 - 
v
Ë/ 
T
 (2Ë* 
°d
::
com∂ex
<T> (0, 
sqπ3
));

179 i‡(
	gD
 > 0)

181 
	gx
[0] = 
y0
.
ªÆ
(Ë- 
r
 / 3;

184 i‡(
	gD
 == 0)

186 
x
[0] = 
y0
.
ªÆ
(Ë- 
r
 / 3;

187 
	gx
[1] = 
y1
.
ªÆ
(Ë- 
r
 / 3;

192 
	gx
[0] = 
y0
.
ªÆ
(Ë- 
r
 / 3;

193 
	gx
[1] = 
y1
.
ªÆ
(Ë- 
r
 / 3;

194 
	gx
[2] = 
y2
.
ªÆ
(Ë- 
r
 / 3;

200 
	gãm∂©e
 <
˛ass
 
	gT
>

202 
sﬁveCubic
 (
T
 
a
, T 
b
, T 
c
, T 
d
, T 
x
[3])

204 i‡(
	ga
 == 0)

206  
sﬁveQuadøtic
 (
b
, 
c
, 
d
, 
x
);

210  
sﬁveN‹mÆizedCubic
 (
b
 / 
a
, 
c
 /á, 
d
 /á, 
x
);

	@shared/openexr-mac/include/OpenEXR/ImathShear.h

37 #i‚de‡
INCLUDED_IMATHSHEAR_H


38 
	#INCLUDED_IMATHSHEAR_H


	)

46 
	~"Im©hExc.h
"

47 
	~"Im©hLimôs.h
"

48 
	~"Im©hM©h.h
"

49 
	~"Im©hVec.h
"

51 
	~<io°ªam
>

54 
«me•a˚
 
	gIm©h
 {

59 
	gãm∂©e
 <
˛ass
 
	gT
> cœs†
	cShór6


61 
	gpublic
:

67 
T
 
xy
, 
	gxz
, 
	gyz
, 
	gyx
, 
	gzx
, 
	gzy
;

69 
	gT
 & 
	g›î©‹
 [] (
	gi
);

70 c⁄° 
	gT
 & 
	g›î©‹
 [] (
	gi
) const;

77 
Shór6
 ();

78 
Shór6
 (
T
 
XY
, T 
XZ
, T 
YZ
);

79 
Shór6
 (c⁄° 
Vec3
<
T
> &
v
);

80 
	gãm∂©e
 <
˛ass
 
	gS
>

81 
Shór6
 (c⁄° 
Vec3
<
S
> &
v
);

82 
Shór6
 (
T
 
XY
, T 
XZ
, T 
YZ
,

83 
T
 
YX
, T 
ZX
, T 
ZY
);

90 
Shór6
 (c⁄° Shór6 &
h
);

91 
	gãm∂©e
 <
˛ass
 
	gS
> 
Shór6
 (c⁄° Shór6<
S
> &
h
);

93 c⁄° 
	gShór6
 & 
	g›î©‹
 = (c⁄° 
Shór6
 &
h
);

94 
	gãm∂©e
 <
˛ass
 
	gS
>

95 c⁄° 
	gShór6
 & 
	g›î©‹
 = (c⁄° 
Vec3
<
S
> &
v
);

102 
	gãm∂©e
 <
˛ass
 
	gS
>

103 
£tVÆue
 (
S
 
XY
, S 
XZ
, S 
YZ
, S 
YX
, S 
ZX
, S 
ZY
);

105 
	gãm∂©e
 <
˛ass
 
	gS
>

106 
£tVÆue
 (c⁄° 
Shór6
<
S
> &
h
);

108 
	gãm∂©e
 <
˛ass
 
	gS
>

109 
gëVÆue
 (
S
 &
XY
, S &
XZ
, S &
YZ
,

110 
S
 &
YX
, S &
ZX
, S &
ZY
) const;

112 
	gãm∂©e
 <
˛ass
 
	gS
>

113 
gëVÆue
 (
Shór6
<
S
> &
h
) const;

115 
T
 * 
gëVÆue
();

116 c⁄° 
T
 * 
gëVÆue
() const;

123 
	gãm∂©e
 <
˛ass
 
	gS
>

124 
boﬁ
 
	g›î©‹
 =(c⁄° 
Shór6
<
S
> &
h
) const;

126 
	gãm∂©e
 <
˛ass
 
	gS
>

127 
boﬁ
 
	g›î©‹
 !(c⁄° 
Shór6
<
S
> &
h
) const;

147 
boﬁ
 
equÆWôhAbsEº‹
 (c⁄° 
Shór6
<
T
> &
h
, T 
e
) const;

148 
boﬁ
 
equÆWôhRñEº‹
 (c⁄° 
Shór6
<
T
> &
h
, T 
e
) const;

155 c⁄° 
	gShór6
 & 
	g›î©‹
 +(c⁄° 
Shór6
 &
h
);

156 
Shór6
 
	g›î©‹
 + (c⁄° 
	gShór6
 &
	gh
) const;

163 c⁄° 
	gShór6
 & 
	g›î©‹
 -(c⁄° 
Shór6
 &
h
);

164 
Shór6
 
	g›î©‹
 - (c⁄° 
	gShór6
 &
	gh
) const;

171 
Shór6
 
	g›î©‹
 - () const;

172 c⁄° 
	gShór6
 & 
√g©e
 ();

179 c⁄° 
	gShór6
 & 
	g›î©‹
 *(c⁄° 
Shór6
 &
h
);

180 c⁄° 
	gShór6
 & 
	g›î©‹
 *(
T
 
a
);

181 
Shór6
 
	g›î©‹
 * (c⁄° 
	gShór6
 &
	gh
) const;

182 
Shór6
 
	g›î©‹
 * (
T
 
	ga
) const;

189 c⁄° 
	gShór6
 & 
	g›î©‹
 /(c⁄° 
Shór6
 &
h
);

190 c⁄° 
	gShór6
 & 
	g›î©‹
 /(
T
 
a
);

191 
Shór6
 
	g›î©‹
 / (c⁄° 
	gShór6
 &
	gh
) const;

192 
Shór6
 
	g›î©‹
 / (
T
 
	ga
) const;

199 
dimísi⁄s
() { 6;}

206 
T
 
ba£Ty≥Mö
(Ë{ 
	glimôs
<
	gT
>::
mö
();}

207 
T
 
ba£Ty≥Max
(Ë{ 
	glimôs
<
	gT
>::
max
();}

208 
T
 
ba£Ty≥SmÆÀ°
(Ë{ 
	glimôs
<
	gT
>::
smÆÀ°
();}

209 
T
 
ba£Ty≥Epsû⁄
(Ë{ 
	glimôs
<
	gT
>::
ïsû⁄
();}

218 
T
 
	tBa£Ty≥
;

226 
	gãm∂©e
 <
˛ass
 
	gT
>

227 
	g°d
::
o°ªam
 & 
›î©‹
 << (
°d
::o°ªam &
s
, c⁄° 
	gShór6
<
	gT
> &
	gh
);

234 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
> 
	gShór6
<T> 
	g›î©‹
 * (
S
 
	ga
, c⁄° Shór6<T> &
	gh
);

241 
	gVec3
 <> 
	tShór3f
;

242 
	gVec3
 <> 
	tShór3d
;

243 
	gShór6
 <> 
	tShór6f
;

244 
	gShór6
 <> 
	tShór6d
;

253 
	gãm∂©e
 <
˛ass
 
	gT
>

254 
ölöe
 
	gT
 &

255 
	gShór6
<
	gT
>::
›î©‹
 [] (
i
)

257  (&
xy
)[
i
];

260 
	gãm∂©e
 <
˛ass
 
	gT
>

261 
ölöe
 c⁄° 
	gT
 &

262 
	gShór6
<
	gT
>::
›î©‹
 [] (
i
) const

264  (&
xy
)[
i
];

267 
	gãm∂©e
 <
˛ass
 
	gT
>

268 
ölöe


269 
	gShór6
<
	gT
>::
	$Shór6
 ()

271 
xy
 = 
xz
 = 
yz
 = 
yx
 = 
zx
 = 
zy
 = 0;

272 
	}
}

274 
	gãm∂©e
 <
˛ass
 
	gT
>

275 
ölöe


276 
	gShór6
<
	gT
>::
	$Shór6
 (
T
 
XY
, T 
XZ
, T 
YZ
)

278 
xy
 = 
XY
;

279 
xz
 = 
XZ
;

280 
yz
 = 
YZ
;

281 
yx
 = 0;

282 
zx
 = 0;

283 
zy
 = 0;

284 
	}
}

286 
	gãm∂©e
 <
˛ass
 
	gT
>

287 
ölöe


288 
	gShór6
<
	gT
>::
Shór6
 (c⁄° 
Vec3
<
T
> &
v
)

290 
xy
 = 
v
.
x
;

291 
	gxz
 = 
v
.
y
;

292 
	gyz
 = 
v
.
z
;

293 
	gyx
 = 0;

294 
	gzx
 = 0;

295 
	gzy
 = 0;

298 
	gãm∂©e
 <
˛ass
 
	gT
>

299 
	gãm∂©e
 <
˛ass
 
	gS
>

300 
ölöe


301 
	gShór6
<
	gT
>::
Shór6
 (c⁄° 
Vec3
<
S
> &
v
)

303 
xy
 = 
T
 (
v
.
x
);

304 
	gxz
 = 
T
 (
v
.
y
);

305 
	gyz
 = 
T
 (
v
.
z
);

306 
	gyx
 = 0;

307 
	gzx
 = 0;

308 
	gzy
 = 0;

311 
	gãm∂©e
 <
˛ass
 
	gT
>

312 
ölöe


313 
	gShór6
<
	gT
>::
	$Shór6
 (
T
 
XY
, T 
XZ
, T 
YZ
, T 
YX
, T 
ZX
, T 
ZY
)

315 
xy
 = 
XY
;

316 
xz
 = 
XZ
;

317 
yz
 = 
YZ
;

318 
yx
 = 
YX
;

319 
zx
 = 
ZX
;

320 
zy
 = 
ZY
;

321 
	}
}

323 
	gãm∂©e
 <
˛ass
 
	gT
>

324 
ölöe


325 
	gShór6
<
	gT
>::
	$Shór6
 (c⁄° 
Shór6
 &
h
)

327 
xy
 = 
h
.xy;

328 
xz
 = 
h
.xz;

329 
yz
 = 
h
.yz;

330 
yx
 = 
h
.yx;

331 
zx
 = 
h
.zx;

332 
zy
 = 
h
.zy;

333 
	}
}

335 
	gãm∂©e
 <
˛ass
 
	gT
>

336 
	gãm∂©e
 <
˛ass
 
	gS
>

337 
ölöe


338 
	gShór6
<
	gT
>::
Shór6
 (c⁄° Shór6<
S
> &
h
)

340 
xy
 = 
T
 (
h
.xy);

341 
	gxz
 = 
T
 (
h
.
xz
);

342 
	gyz
 = 
T
 (
h
.
yz
);

343 
	gyx
 = 
T
 (
h
.
yx
);

344 
	gzx
 = 
T
 (
h
.
zx
);

345 
	gzy
 = 
T
 (
h
.
zy
);

348 
	gãm∂©e
 <
˛ass
 
	gT
>

349 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

350 
	gShór6
<
	gT
>::
›î©‹
 = (c⁄° 
Shór6
 &
h
)

352 
xy
 = 
h
.xy;

353 
	gxz
 = 
h
.
xz
;

354 
	gyz
 = 
h
.
yz
;

355 
	gyx
 = 
h
.
yx
;

356 
	gzx
 = 
h
.
zx
;

357 
	gzy
 = 
h
.
zy
;

358  *
	gthis
;

361 
	gãm∂©e
 <
˛ass
 
	gT
>

362 
	gãm∂©e
 <
˛ass
 
	gS
>

363 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

364 
	gShór6
<
	gT
>::
›î©‹
 = (c⁄° 
Vec3
<
S
> &
v
)

366 
xy
 = 
T
 (
v
.
x
);

367 
	gxz
 = 
T
 (
v
.
y
);

368 
	gyz
 = 
T
 (
v
.
z
);

369 
	gyx
 = 0;

370 
	gzx
 = 0;

371 
	gzy
 = 0;

372  *
	gthis
;

375 
	gãm∂©e
 <
˛ass
 
	gT
>

376 
	gãm∂©e
 <
˛ass
 
	gS
>

377 
ölöe
 

378 
	gShór6
<
	gT
>::
	$£tVÆue
 (
S
 
XY
, S 
XZ
, S 
YZ
, S 
YX
, S 
ZX
, S 
ZY
)

380 
xy
 = 
	`T
 (
XY
);

381 
xz
 = 
	`T
 (
XZ
);

382 
yz
 = 
	`T
 (
YZ
);

383 
yx
 = 
	`T
 (
YX
);

384 
zx
 = 
	`T
 (
ZX
);

385 
zy
 = 
	`T
 (
ZY
);

386 
	}
}

388 
	gãm∂©e
 <
˛ass
 
	gT
>

389 
	gãm∂©e
 <
˛ass
 
	gS
>

390 
ölöe
 

391 
	gShór6
<
	gT
>::
£tVÆue
 (c⁄° 
Shór6
<
S
> &
h
)

393 
xy
 = 
T
 (
h
.xy);

394 
	gxz
 = 
T
 (
h
.
xz
);

395 
	gyz
 = 
T
 (
h
.
yz
);

396 
	gyx
 = 
T
 (
h
.
yx
);

397 
	gzx
 = 
T
 (
h
.
zx
);

398 
	gzy
 = 
T
 (
h
.
zy
);

401 
	gãm∂©e
 <
˛ass
 
	gT
>

402 
	gãm∂©e
 <
˛ass
 
	gS
>

403 
ölöe
 

404 
	gShór6
<
	gT
>::
	$gëVÆue
 (
S
 &
XY
, S &
XZ
, S &
YZ
, S &
YX
, S &
ZX
, S &
ZY
) const

406 
XY
 = 
	`S
 (
xy
);

407 
XZ
 = 
	`S
 (
xz
);

408 
YZ
 = 
	`S
 (
yz
);

409 
YX
 = 
	`S
 (
yx
);

410 
ZX
 = 
	`S
 (
zx
);

411 
ZY
 = 
	`S
 (
zy
);

412 
	}
}

414 
	gãm∂©e
 <
˛ass
 
	gT
>

415 
	gãm∂©e
 <
˛ass
 
	gS
>

416 
ölöe
 

417 
	gShór6
<
	gT
>::
gëVÆue
 (
Shór6
<
S
> &
h
) const

419 
h
.
xy
 = 
S
 (xy);

420 
	gh
.
	gxz
 = 
S
 (
xz
);

421 
	gh
.
	gyz
 = 
S
 (
yz
);

422 
	gh
.
	gyx
 = 
S
 (
yx
);

423 
	gh
.
	gzx
 = 
S
 (
zx
);

424 
	gh
.
	gzy
 = 
S
 (
zy
);

427 
	gãm∂©e
 <
˛ass
 
	gT
>

428 
ölöe
 
T
 *

429 
	gShór6
<
	gT
>::
	$gëVÆue
()

431  (
T
 *Ë&
xy
;

432 
	}
}

434 
	gãm∂©e
 <
˛ass
 
	gT
>

435 
ölöe
 c⁄° 
T
 *

436 
	gShór6
<
	gT
>::
	$gëVÆue
() const

438  (c⁄° 
T
 *Ë&
xy
;

439 
	}
}

441 
	gãm∂©e
 <
˛ass
 
	gT
>

442 
	gãm∂©e
 <
˛ass
 
	gS
>

443 
ölöe
 
boﬁ


444 
	gShór6
<
	gT
>::
›î©‹
 =(c⁄° 
Shór6
<
S
> &
h
) const

446  
xy
 =
h
.xy && 
xz
 =h.xz && 
yz
 == h.yz &&

447 
yx
 =
h
.yx && 
zx
 =h.zx && 
zy
 == h.zy;

450 
	gãm∂©e
 <
˛ass
 
	gT
>

451 
	gãm∂©e
 <
˛ass
 
	gS
>

452 
ölöe
 
boﬁ


453 
	gShór6
<
	gT
>::
›î©‹
 !(c⁄° 
Shór6
<
S
> &
h
) const

455  
xy
 !
h
.xy || 
xz
 !h.xz || 
yz
 != h.yz ||

456 
yx
 !
h
.yx || 
zx
 !h.zx || 
zy
 != h.zy;

459 
	gãm∂©e
 <
˛ass
 
	gT
>

460 
boﬁ


461 
	gShór6
<
	gT
>::
equÆWôhAbsEº‹
 (c⁄° 
Shór6
<
T
> &
h
, T 
e
) const

463 
	gi
 = 0; i < 6; i++)

464 i‡(!
	gIm©h
::
equÆWôhAbsEº‹
 ((*
this
)[
i
], 
h
[i], 
e
))

465  
	gÁl£
;

467  
	gåue
;

470 
	gãm∂©e
 <
˛ass
 
	gT
>

471 
boﬁ


472 
	gShór6
<
	gT
>::
equÆWôhRñEº‹
 (c⁄° 
Shór6
<
T
> &
h
, T 
e
) const

474 
	gi
 = 0; i < 6; i++)

475 i‡(!
	gIm©h
::
equÆWôhRñEº‹
 ((*
this
)[
i
], 
h
[i], 
e
))

476  
	gÁl£
;

478  
	gåue
;

482 
	gãm∂©e
 <
˛ass
 
	gT
>

483 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

484 
	gShór6
<
	gT
>::
›î©‹
 +(c⁄° 
Shór6
 &
h
)

486 
xy
 +
h
.xy;

487 
	gxz
 +
h
.
xz
;

488 
	gyz
 +
h
.
yz
;

489 
	gyx
 +
h
.
yx
;

490 
	gzx
 +
h
.
zx
;

491 
	gzy
 +
h
.
zy
;

492  *
	gthis
;

495 
	gãm∂©e
 <
˛ass
 
	gT
>

496 
ölöe
 
	gShór6
<
	gT
>

497 
	gShór6
<
	gT
>::
›î©‹
 + (c⁄° 
Shór6
 &
h
) const

499  
Shór6
 (
xy
 + 
h
.xy, 
xz
 + h.xz, 
yz
 + h.yz,

500 
yx
 + 
h
.yx, 
zx
 + h.zx, 
zy
 + h.zy);

503 
	gãm∂©e
 <
˛ass
 
	gT
>

504 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

505 
	gShór6
<
	gT
>::
›î©‹
 -(c⁄° 
Shór6
 &
h
)

507 
xy
 -
h
.xy;

508 
	gxz
 -
h
.
xz
;

509 
	gyz
 -
h
.
yz
;

510 
	gyx
 -
h
.
yx
;

511 
	gzx
 -
h
.
zx
;

512 
	gzy
 -
h
.
zy
;

513  *
	gthis
;

516 
	gãm∂©e
 <
˛ass
 
	gT
>

517 
ölöe
 
	gShór6
<
	gT
>

518 
	gShór6
<
	gT
>::
›î©‹
 - (c⁄° 
Shór6
 &
h
) const

520  
Shór6
 (
xy
 - 
h
.xy, 
xz
 - h.xz, 
yz
 - h.yz,

521 
yx
 - 
h
.yx, 
zx
 - h.zx, 
zy
 - h.zy);

524 
	gãm∂©e
 <
˛ass
 
	gT
>

525 
ölöe
 
	gShór6
<
	gT
>

526 
	gShór6
<
	gT
>::
›î©‹
 - () const

528  
Shór6
 (-
xy
, -
xz
, -
yz
, -
yx
, -
zx
, -
zy
);

531 
	gãm∂©e
 <
˛ass
 
	gT
>

532 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

533 
	gShór6
<
	gT
>::
	$√g©e
 ()

535 
xy
 = -xy;

536 
xz
 = -xz;

537 
yz
 = -yz;

538 
yx
 = -yx;

539 
zx
 = -zx;

540 
zy
 = -zy;

541  *
this
;

542 
	}
}

544 
	gãm∂©e
 <
˛ass
 
	gT
>

545 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

546 
	gShór6
<
	gT
>::
›î©‹
 *(c⁄° 
Shór6
 &
h
)

548 
xy
 *
h
.xy;

549 
	gxz
 *
h
.
xz
;

550 
	gyz
 *
h
.
yz
;

551 
	gyx
 *
h
.
yx
;

552 
	gzx
 *
h
.
zx
;

553 
	gzy
 *
h
.
zy
;

554  *
	gthis
;

557 
	gãm∂©e
 <
˛ass
 
	gT
>

558 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

559 
	gShór6
<
	gT
>::
›î©‹
 *(
T
 
a
)

561 
xy
 *
a
;

562 
	gxz
 *
a
;

563 
	gyz
 *
a
;

564 
	gyx
 *
a
;

565 
	gzx
 *
a
;

566 
	gzy
 *
a
;

567  *
	gthis
;

570 
	gãm∂©e
 <
˛ass
 
	gT
>

571 
ölöe
 
	gShór6
<
	gT
>

572 
	gShór6
<
	gT
>::
›î©‹
 * (c⁄° 
Shór6
 &
h
) const

574  
Shór6
 (
xy
 * 
h
.xy, 
xz
 * h.xz, 
yz
 * h.yz,

575 
yx
 * 
h
.yx, 
zx
 * h.zx, 
zy
 * h.zy);

578 
	gãm∂©e
 <
˛ass
 
	gT
>

579 
ölöe
 
	gShór6
<
	gT
>

580 
	gShór6
<
	gT
>::
›î©‹
 * (
T
 
a
) const

582  
Shór6
 (
xy
 * 
a
, 
xz
 *á, 
yz
 *á,

583 
yx
 * 
a
, 
zx
 *á, 
zy
 *á);

586 
	gãm∂©e
 <
˛ass
 
	gT
>

587 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

588 
	gShór6
<
	gT
>::
›î©‹
 /(c⁄° 
Shór6
 &
h
)

590 
xy
 /
h
.xy;

591 
	gxz
 /
h
.
xz
;

592 
	gyz
 /
h
.
yz
;

593 
	gyx
 /
h
.
yx
;

594 
	gzx
 /
h
.
zx
;

595 
	gzy
 /
h
.
zy
;

596  *
	gthis
;

599 
	gãm∂©e
 <
˛ass
 
	gT
>

600 
ölöe
 c⁄° 
	gShór6
<
	gT
> &

601 
	gShór6
<
	gT
>::
›î©‹
 /(
T
 
a
)

603 
xy
 /
a
;

604 
	gxz
 /
a
;

605 
	gyz
 /
a
;

606 
	gyx
 /
a
;

607 
	gzx
 /
a
;

608 
	gzy
 /
a
;

609  *
	gthis
;

612 
	gãm∂©e
 <
˛ass
 
	gT
>

613 
ölöe
 
	gShór6
<
	gT
>

614 
	gShór6
<
	gT
>::
›î©‹
 / (c⁄° 
Shór6
 &
h
) const

616  
Shór6
 (
xy
 / 
h
.xy, 
xz
 / h.xz, 
yz
 / h.yz,

617 
yx
 / 
h
.yx, 
zx
 / h.zx, 
zy
 / h.zy);

620 
	gãm∂©e
 <
˛ass
 
	gT
>

621 
ölöe
 
	gShór6
<
	gT
>

622 
	gShór6
<
	gT
>::
›î©‹
 / (
T
 
a
) const

624  
Shór6
 (
xy
 / 
a
, 
xz
 /á, 
yz
 /á,

625 
yx
 / 
a
, 
zx
 /á, 
zy
 /á);

633 
	gãm∂©e
 <
˛ass
 
	gT
>

634 
	g°d
::
o°ªam
 &

635 
›î©‹
 << (
°d
::
o°ªam
 &
s
, c⁄° 
	gShór6
<
	gT
> &
	gh
)

637  
	gs
 << '('

638 << 
	gh
.
	gxy
 << ' ' << h.
	gxz
 << ' ' << h.
	gyz


639 << 
	gh
.
	gyx
 << ' ' << h.
	gzx
 << ' ' << h.
	gzy


648 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

649 
ölöe
 
	gShór6
<
	gT
>

650 
	g›î©‹
 * (
S
 
	ga
, c⁄° 
	gShór6
<
	gT
> &
	gh
)

652  
	gShór6
<
	gT
> (
a
 * 
	gh
.
	gxy
,á * h.
	gxz
,á * h.
	gyz
,

653 
a
 * 
	gh
.
	gyx
,á * h.
	gzx
,á * h.
	gzy
);

	@shared/openexr-mac/include/OpenEXR/ImathSphere.h

37 #i‚de‡
INCLUDED_IMATHSPHERE_H


38 
	#INCLUDED_IMATHSPHERE_H


	)

46 
	~"Im©hVec.h
"

47 
	~"Im©hBox.h
"

48 
	~"Im©hLöe.h
"

50 
«me•a˚
 
	gIm©h
 {

52 
	gãm∂©e
 <
˛ass
 
	gT
>

53 ˛as†
	cSphîe3


55 
	gpublic
:

57 
Vec3
<
T
> 
˚¡î
;

58 
T
 
	gødius
;

64 
Sphîe3
(Ë: 
˚¡î
(0,0,0), 
ødius
(0) {}

65 
Sphîe3
(c⁄° 
Vec3
<
T
> &
c
, T 
r
Ë: 
˚¡î
(c), 
ødius
(r) {}

90 
cúcums¸ibe
(c⁄° 
Box
<
Vec3
<
T
> > &
box
);

91 
boﬁ
 
öãr£˘
(c⁄° 
Löe3
<
T
> &
l
, 
Vec3
<T> &
öãr£˘i⁄
) const;

92 
boﬁ
 
öãr£˘T
(c⁄° 
Löe3
<
T
> &
l
, T &
t
) const;

100 
	gSphîe3
<> 
	tSphîe3f
;

101 
	gSphîe3
<> 
	tSphîe3d
;

108 
	gãm∂©e
 <
˛ass
 
	gT
>

109 
	gSphîe3
<
	gT
>::
cúcums¸ibe
(c⁄° 
Box
<
Vec3
<
T
> > &
box
)

111 
˚¡î
 = 
T
(0.5Ë* (
box
.
mö
 + box.
max
);

112 
	gødius
 = (
box
.
max
 - 
˚¡î
).
Àngth
();

116 
	gãm∂©e
 <
˛ass
 
	gT
>

117 
boﬁ
 
	gSphîe3
<
	gT
>::
öãr£˘T
(c⁄° 
Löe3
<
T
> &
löe
, T &
t
) const

119 
boﬁ
 
	gd€sI¡î£˘
 = 
åue
;

121 
	gVec3
<
	gT
> 
	gv
 = 
löe
.
pos
 - 
˚¡î
;

122 
T
 
	gB
 = 2.0 * (
löe
.
dú
 ^ 
v
);

123 
T
 
	gC
 = (
v
 ^ vË- (
ødius
 *Ñadius);

128 
T
 
	gdis¸
 = 
B
*B - 4.0*
C
;

130 i‡(
	gdis¸
 < 0.0)

134 
	gd€sI¡î£˘
 = 
Ál£
;

140 
T
 
	gsqroŸ
 = 
M©h
<T>::
sqπ
(
dis¸
);

141 
	gt
 = (-
B
 - 
sqroŸ
) * 0.5;

143 i‡(
	gt
 < 0.0)

147 
	gt
 = (-
B
 + 
sqroŸ
) * 0.5;

150 i‡(
	gt
 < 0.0)

151 
	gd€sI¡î£˘
 = 
Ál£
;

154  
	gd€sI¡î£˘
;

158 
	gãm∂©e
 <
˛ass
 
	gT
>

159 
boﬁ
 
	gSphîe3
<
	gT
>::
öãr£˘
(c⁄° 
Löe3
<
T
> &
löe
, 
Vec3
<T> &
öãr£˘i⁄
) const

161 
T
 
	gt
;

163 i‡(
öãr£˘T
 (
löe
, 
t
))

165 
	göãr£˘i⁄
 = 
löe
(
t
);

166  
	gåue
;

170  
	gÁl£
;

	@shared/openexr-mac/include/OpenEXR/ImathVec.h

37 #i‚de‡
INCLUDED_IMATHVEC_H


38 
	#INCLUDED_IMATHVEC_H


	)

46 
	~"Im©hExc.h
"

47 
	~"Im©hLimôs.h
"

48 
	~"Im©hM©h.h
"

50 
	~<io°ªam
>

52 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


54 #¥agm®
w¨nög
(
dißbÀ
:4290)

58 
«me•a˚
 
	gIm©h
 {

61 
	gãm∂©e
 <
˛ass
 
	gT
> cœs†
	cVec2


63 
	gpublic
:

69 
T
 
x
, 
	gy
;

71 
	gT
 & 
	g›î©‹
 [] (
	gi
);

72 c⁄° 
	gT
 & 
	g›î©‹
 [] (
	gi
) const;

79 
Vec2
 ();

80 
ex∂icô
 
Vec2
 (
T
 
a
);

81 
Vec2
 (
T
 
a
, T 
b
);

88 
Vec2
 (c⁄° Vec2 &
v
);

89 
	gãm∂©e
 <
˛ass
 
	gS
> 
Vec2
 (c⁄° Vec2<
S
> &
v
);

91 c⁄° 
	gVec2
 & 
	g›î©‹
 = (c⁄° 
Vec2
 &
v
);

98 
	gãm∂©e
 <
˛ass
 
	gS
>

99 
£tVÆue
 (
S
 
a
, S 
b
);

101 
	gãm∂©e
 <
˛ass
 
	gS
>

102 
£tVÆue
 (c⁄° 
Vec2
<
S
> &
v
);

104 
	gãm∂©e
 <
˛ass
 
	gS
>

105 
gëVÆue
 (
S
 &
a
, S &
b
) const;

107 
	gãm∂©e
 <
˛ass
 
	gS
>

108 
gëVÆue
 (
Vec2
<
S
> &
v
) const;

110 
T
 * 
gëVÆue
 ();

111 c⁄° 
T
 * 
gëVÆue
 () const;

118 
	gãm∂©e
 <
˛ass
 
	gS
>

119 
boﬁ
 
	g›î©‹
 =(c⁄° 
Vec2
<
S
> &
v
) const;

121 
	gãm∂©e
 <
˛ass
 
	gS
>

122 
boﬁ
 
	g›î©‹
 !(c⁄° 
Vec2
<
S
> &
v
) const;

143 
boﬁ
 
equÆWôhAbsEº‹
 (c⁄° 
Vec2
<
T
> &
v
, T 
e
) const;

144 
boﬁ
 
equÆWôhRñEº‹
 (c⁄° 
Vec2
<
T
> &
v
, T 
e
) const;

150 
T
 
dŸ
 (c⁄° 
Vec2
 &
v
) const;

151 
T
 
	g›î©‹
 ^ (c⁄° 
	gVec2
 &
	gv
) const;

159 
T
 
¸oss
 (c⁄° 
Vec2
 &
v
) const;

160 
T
 
	g›î©‹
 % (c⁄° 
	gVec2
 &
	gv
) const;

167 c⁄° 
	gVec2
 & 
	g›î©‹
 +(c⁄° 
Vec2
 &
v
);

168 
Vec2
 
	g›î©‹
 + (c⁄° 
	gVec2
 &
	gv
) const;

175 c⁄° 
	gVec2
 & 
	g›î©‹
 -(c⁄° 
Vec2
 &
v
);

176 
Vec2
 
	g›î©‹
 - (c⁄° 
	gVec2
 &
	gv
) const;

183 
Vec2
 
	g›î©‹
 - () const;

184 c⁄° 
	gVec2
 & 
√g©e
 ();

191 c⁄° 
	gVec2
 & 
	g›î©‹
 *(c⁄° 
Vec2
 &
v
);

192 c⁄° 
	gVec2
 & 
	g›î©‹
 *(
T
 
a
);

193 
Vec2
 
	g›î©‹
 * (c⁄° 
	gVec2
 &
	gv
) const;

194 
Vec2
 
	g›î©‹
 * (
T
 
	ga
) const;

201 c⁄° 
	gVec2
 & 
	g›î©‹
 /(c⁄° 
Vec2
 &
v
);

202 c⁄° 
	gVec2
 & 
	g›î©‹
 /(
T
 
a
);

203 
Vec2
 
	g›î©‹
 / (c⁄° 
	gVec2
 &
	gv
) const;

204 
Vec2
 
	g›î©‹
 / (
T
 
	ga
) const;

216 
T
 
Àngth
 () const;

217 
T
 
Àngth2
 () const;

219 c⁄° 
	gVec2
 & 
n‹mÆize
 ();

220 c⁄° 
	gVec2
 & 
n‹mÆizeExc
 (Ë
throw
 (
Iex
::
M©hExc
);

221 c⁄° 
	gVec2
 & 
n‹mÆizeN⁄NuŒ
 ();

223 
	gVec2
<
	gT
> 
n‹mÆized
 () const;

224 
	gVec2
<
	gT
> 
n‹mÆizedExc
 (Ëc⁄° 
throw
 (
Iex
::
M©hExc
);

225 
	gVec2
<
	gT
> 
n‹mÆizedN⁄NuŒ
 () const;

232 
dimísi⁄s
() { 2;}

239 
T
 
ba£Ty≥Mö
(Ë{ 
	glimôs
<
	gT
>::
mö
();}

240 
T
 
ba£Ty≥Max
(Ë{ 
	glimôs
<
	gT
>::
max
();}

241 
T
 
ba£Ty≥SmÆÀ°
(Ë{ 
	glimôs
<
	gT
>::
smÆÀ°
();}

242 
T
 
ba£Ty≥Epsû⁄
(Ë{ 
	glimôs
<
	gT
>::
ïsû⁄
();}

251 
T
 
	tBa£Ty≥
;

255 
	gãm∂©e
 <
˛ass
 
	gT
> cœs†
	cVec3


257 
	gpublic
:

263 
T
 
x
, 
	gy
, 
	gz
;

265 
	gT
 & 
	g›î©‹
 [] (
	gi
);

266 c⁄° 
	gT
 & 
	g›î©‹
 [] (
	gi
) const;

273 
Vec3
 ();

274 
ex∂icô
 
Vec3
 (
T
 
a
);

275 
Vec3
 (
T
 
a
, T 
b
, T 
c
);

282 
Vec3
 (c⁄° Vec3 &
v
);

283 
	gãm∂©e
 <
˛ass
 
	gS
> 
Vec3
 (c⁄° Vec3<
S
> &
v
);

285 c⁄° 
	gVec3
 & 
	g›î©‹
 = (c⁄° 
Vec3
 &
v
);

292 
	gãm∂©e
 <
˛ass
 
	gS
>

293 
£tVÆue
 (
S
 
a
, S 
b
, S 
c
);

295 
	gãm∂©e
 <
˛ass
 
	gS
>

296 
£tVÆue
 (c⁄° 
Vec3
<
S
> &
v
);

298 
	gãm∂©e
 <
˛ass
 
	gS
>

299 
gëVÆue
 (
S
 &
a
, S &
b
, S &
c
) const;

301 
	gãm∂©e
 <
˛ass
 
	gS
>

302 
gëVÆue
 (
Vec3
<
S
> &
v
) const;

304 
T
 * 
gëVÆue
();

305 c⁄° 
T
 * 
gëVÆue
() const;

312 
	gãm∂©e
 <
˛ass
 
	gS
>

313 
boﬁ
 
	g›î©‹
 =(c⁄° 
Vec3
<
S
> &
v
) const;

315 
	gãm∂©e
 <
˛ass
 
	gS
>

316 
boﬁ
 
	g›î©‹
 !(c⁄° 
Vec3
<
S
> &
v
) const;

336 
boﬁ
 
equÆWôhAbsEº‹
 (c⁄° 
Vec3
<
T
> &
v
, T 
e
) const;

337 
boﬁ
 
equÆWôhRñEº‹
 (c⁄° 
Vec3
<
T
> &
v
, T 
e
) const;

343 
T
 
dŸ
 (c⁄° 
Vec3
 &
v
) const;

344 
T
 
	g›î©‹
 ^ (c⁄° 
	gVec3
 &
	gv
) const;

351 
Vec3
 
¸oss
 (c⁄° Vec3 &
v
) const;

352 c⁄° 
	gVec3
 & 
	g›î©‹
 %(c⁄° 
Vec3
 &
v
);

353 
Vec3
 
	g›î©‹
 % (c⁄° 
	gVec3
 &
	gv
) const;

360 c⁄° 
	gVec3
 & 
	g›î©‹
 +(c⁄° 
Vec3
 &
v
);

361 
Vec3
 
	g›î©‹
 + (c⁄° 
	gVec3
 &
	gv
) const;

368 c⁄° 
	gVec3
 & 
	g›î©‹
 -(c⁄° 
Vec3
 &
v
);

369 
Vec3
 
	g›î©‹
 - (c⁄° 
	gVec3
 &
	gv
) const;

376 
Vec3
 
	g›î©‹
 - () const;

377 c⁄° 
	gVec3
 & 
√g©e
 ();

384 c⁄° 
	gVec3
 & 
	g›î©‹
 *(c⁄° 
Vec3
 &
v
);

385 c⁄° 
	gVec3
 & 
	g›î©‹
 *(
T
 
a
);

386 
Vec3
 
	g›î©‹
 * (c⁄° 
	gVec3
 &
	gv
) const;

387 
Vec3
 
	g›î©‹
 * (
T
 
	ga
) const;

394 c⁄° 
	gVec3
 & 
	g›î©‹
 /(c⁄° 
Vec3
 &
v
);

395 c⁄° 
	gVec3
 & 
	g›î©‹
 /(
T
 
a
);

396 
Vec3
 
	g›î©‹
 / (c⁄° 
	gVec3
 &
	gv
) const;

397 
Vec3
 
	g›î©‹
 / (
T
 
	ga
) const;

409 
T
 
Àngth
 () const;

410 
T
 
Àngth2
 () const;

412 c⁄° 
	gVec3
 & 
n‹mÆize
 ();

413 c⁄° 
	gVec3
 & 
n‹mÆizeExc
 (Ë
throw
 (
Iex
::
M©hExc
);

414 c⁄° 
	gVec3
 & 
n‹mÆizeN⁄NuŒ
 ();

416 
	gVec3
<
	gT
> 
n‹mÆized
 () const;

417 
	gVec3
<
	gT
> 
n‹mÆizedExc
 (Ëc⁄° 
throw
 (
Iex
::
M©hExc
);

418 
	gVec3
<
	gT
> 
n‹mÆizedN⁄NuŒ
 () const;

425 
dimísi⁄s
() { 3;}

432 
T
 
ba£Ty≥Mö
(Ë{ 
	glimôs
<
	gT
>::
mö
();}

433 
T
 
ba£Ty≥Max
(Ë{ 
	glimôs
<
	gT
>::
max
();}

434 
T
 
ba£Ty≥SmÆÀ°
(Ë{ 
	glimôs
<
	gT
>::
smÆÀ°
();}

435 
T
 
ba£Ty≥Epsû⁄
(Ë{ 
	glimôs
<
	gT
>::
ïsû⁄
();}

444 
T
 
	tBa£Ty≥
;

452 
	gãm∂©e
 <
˛ass
 
	gT
>

453 
	g°d
::
o°ªam
 & 
›î©‹
 << (
°d
::o°ªam &
s
, c⁄° 
	gVec2
<
	gT
> &
	gv
);

455 
	gãm∂©e
 <
˛ass
 
	gT
>

456 
	g°d
::
o°ªam
 & 
›î©‹
 << (
°d
::o°ªam &
s
, c⁄° 
	gVec3
<
	gT
> &
	gv
);

463 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gVec2
<T> 
	g›î©‹
 * (
T
 
	ga
, c⁄° Vec2<T> &
	gv
);

464 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gVec3
<T> 
	g›î©‹
 * (
T
 
	ga
, c⁄° Vec3<T> &
	gv
);

471 
	gVec2
 <> 
	tV2s
;

472 
	gVec2
 <> 
	tV2i
;

473 
	gVec2
 <> 
	tV2f
;

474 
	gVec2
 <> 
	tV2d
;

475 
	gVec3
 <> 
	tV3s
;

476 
	gVec3
 <> 
	tV3i
;

477 
	gVec3
 <> 
	tV3f
;

478 
	gVec3
 <> 
	tV3d
;

487 
	gãm∂©e
 <> 

488 
	gVec2
<>::
	$Àngth
 () const;

490 
ãm∂©e
 <> c⁄° 
Vec2
<> &

491 
Vec2
<>::
	`n‹mÆize
 ();

493 
ãm∂©e
 <> c⁄° 
Vec2
<> &

494 
Vec2
<>::
	$n‹mÆizeExc
 (Ë
	`throw
 (
Iex
::
M©hExc
);

496 
ãm∂©e
 <> c⁄° 
Vec2
<> &

497 
Vec2
<>::
	`n‹mÆizeN⁄NuŒ
 ();

499 
ãm∂©e
 <> 
Vec2
<>

500 
Vec2
<>::
	$n‹mÆized
 () const;

502 
ãm∂©e
 <> 
Vec2
<>

503 
Vec2
<>::
	$n‹mÆizedExc
 (Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
);

505 
ãm∂©e
 <> 
Vec2
<>

506 
Vec2
<>::
	$n‹mÆizedN⁄NuŒ
 () const;

511 
ãm∂©e
 <> 

512 
Vec2
<>::
	$Àngth
 () const;

514 
ãm∂©e
 <> c⁄° 
Vec2
<> &

515 
Vec2
<>::
	`n‹mÆize
 ();

517 
ãm∂©e
 <> c⁄° 
Vec2
<> &

518 
Vec2
<>::
	$n‹mÆizeExc
 (Ë
	`throw
 (
Iex
::
M©hExc
);

520 
ãm∂©e
 <> c⁄° 
Vec2
<> &

521 
Vec2
<>::
	`n‹mÆizeN⁄NuŒ
 ();

523 
ãm∂©e
 <> 
Vec2
<>

524 
Vec2
<>::
	$n‹mÆized
 () const;

526 
ãm∂©e
 <> 
Vec2
<>

527 
Vec2
<>::
	$n‹mÆizedExc
 (Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
);

529 
ãm∂©e
 <> 
Vec2
<>

530 
Vec2
<>::
	$n‹mÆizedN⁄NuŒ
 () const;

535 
ãm∂©e
 <> 

536 
Vec3
<>::
	$Àngth
 () const;

538 
ãm∂©e
 <> c⁄° 
Vec3
<> &

539 
Vec3
<>::
	`n‹mÆize
 ();

541 
ãm∂©e
 <> c⁄° 
Vec3
<> &

542 
Vec3
<>::
	$n‹mÆizeExc
 (Ë
	`throw
 (
Iex
::
M©hExc
);

544 
ãm∂©e
 <> c⁄° 
Vec3
<> &

545 
Vec3
<>::
	`n‹mÆizeN⁄NuŒ
 ();

547 
ãm∂©e
 <> 
Vec3
<>

548 
Vec3
<>::
	$n‹mÆized
 () const;

550 
ãm∂©e
 <> 
Vec3
<>

551 
Vec3
<>::
	$n‹mÆizedExc
 (Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
);

553 
ãm∂©e
 <> 
Vec3
<>

554 
Vec3
<>::
	$n‹mÆizedN⁄NuŒ
 () const;

559 
ãm∂©e
 <> 

560 
Vec3
<>::
	$Àngth
 () const;

562 
ãm∂©e
 <> c⁄° 
Vec3
<> &

563 
Vec3
<>::
	`n‹mÆize
 ();

565 
ãm∂©e
 <> c⁄° 
Vec3
<> &

566 
Vec3
<>::
	$n‹mÆizeExc
 (Ë
	`throw
 (
Iex
::
M©hExc
);

568 
ãm∂©e
 <> c⁄° 
Vec3
<> &

569 
Vec3
<>::
	`n‹mÆizeN⁄NuŒ
 ();

571 
ãm∂©e
 <> 
Vec3
<>

572 
Vec3
<>::
	$n‹mÆized
 () const;

574 
ãm∂©e
 <> 
Vec3
<>

575 
Vec3
<>::
	$n‹mÆizedExc
 (Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
);

577 
ãm∂©e
 <> 
Vec3
<>

578 
Vec3
<>::
	$n‹mÆizedN⁄NuŒ
 () const;

585 
ãm∂©e
 <
˛ass
 
T
>

586 
ölöe
 
T
 &

587 
Vec2
<
T
>::
›î©‹
 [] (
i
)

589  (&
x
)[
i
];

590 
	}
}

592 
	gãm∂©e
 <
˛ass
 
	gT
>

593 
ölöe
 c⁄° 
	gT
 &

594 
	gVec2
<
	gT
>::
›î©‹
 [] (
i
) const

596  (&
x
)[
i
];

599 
	gãm∂©e
 <
˛ass
 
	gT
>

600 
ölöe


601 
	gVec2
<
	gT
>::
	$Vec2
 ()

604 
	}
}

606 
ãm∂©e
 <
˛ass
 
T
>

607 
ölöe


608 
Vec2
<
T
>::
	$Vec2
 (
T
 
a
)

610 
x
 = 
y
 = 
a
;

611 
	}
}

613 
	gãm∂©e
 <
˛ass
 
	gT
>

614 
ölöe


615 
	gVec2
<
	gT
>::
	$Vec2
 (
T
 
a
, T 
b
)

617 
x
 = 
a
;

618 
y
 = 
b
;

619 
	}
}

621 
	gãm∂©e
 <
˛ass
 
	gT
>

622 
ölöe


623 
	gVec2
<
	gT
>::
	$Vec2
 (c⁄° 
Vec2
 &
v
)

625 
x
 = 
v
.x;

626 
y
 = 
v
.y;

627 
	}
}

629 
	gãm∂©e
 <
˛ass
 
	gT
>

630 
	gãm∂©e
 <
˛ass
 
	gS
>

631 
ölöe


632 
	gVec2
<
	gT
>::
Vec2
 (c⁄° Vec2<
S
> &
v
)

634 
x
 = 
T
 (
v
.x);

635 
	gy
 = 
T
 (
v
.
y
);

638 
	gãm∂©e
 <
˛ass
 
	gT
>

639 
ölöe
 c⁄° 
	gVec2
<
	gT
> &

640 
	gVec2
<
	gT
>::
›î©‹
 = (c⁄° 
Vec2
 &
v
)

642 
x
 = 
v
.x;

643 
	gy
 = 
v
.
y
;

644  *
	gthis
;

647 
	gãm∂©e
 <
˛ass
 
	gT
>

648 
	gãm∂©e
 <
˛ass
 
	gS
>

649 
ölöe
 

650 
	gVec2
<
	gT
>::
	$£tVÆue
 (
S
 
a
, S 
b
)

652 
x
 = 
	`T
 (
a
);

653 
y
 = 
	`T
 (
b
);

654 
	}
}

656 
	gãm∂©e
 <
˛ass
 
	gT
>

657 
	gãm∂©e
 <
˛ass
 
	gS
>

658 
ölöe
 

659 
	gVec2
<
	gT
>::
£tVÆue
 (c⁄° 
Vec2
<
S
> &
v
)

661 
x
 = 
T
 (
v
.x);

662 
	gy
 = 
T
 (
v
.
y
);

665 
	gãm∂©e
 <
˛ass
 
	gT
>

666 
	gãm∂©e
 <
˛ass
 
	gS
>

667 
ölöe
 

668 
	gVec2
<
	gT
>::
	$gëVÆue
 (
S
 &
a
, S &
b
) const

670 
a
 = 
	`S
 (
x
);

671 
b
 = 
	`S
 (
y
);

672 
	}
}

674 
	gãm∂©e
 <
˛ass
 
	gT
>

675 
	gãm∂©e
 <
˛ass
 
	gS
>

676 
ölöe
 

677 
	gVec2
<
	gT
>::
gëVÆue
 (
Vec2
<
S
> &
v
) const

679 
v
.
x
 = 
S
 (x);

680 
	gv
.
	gy
 = 
S
 (
y
);

683 
	gãm∂©e
 <
˛ass
 
	gT
>

684 
ölöe
 
T
 *

685 
	gVec2
<
	gT
>::
	$gëVÆue
()

687  (
T
 *Ë&
x
;

688 
	}
}

690 
	gãm∂©e
 <
˛ass
 
	gT
>

691 
ölöe
 c⁄° 
T
 *

692 
	gVec2
<
	gT
>::
	$gëVÆue
() const

694  (c⁄° 
T
 *Ë&
x
;

695 
	}
}

697 
	gãm∂©e
 <
˛ass
 
	gT
>

698 
	gãm∂©e
 <
˛ass
 
	gS
>

699 
ölöe
 
boﬁ


700 
	gVec2
<
	gT
>::
›î©‹
 =(c⁄° 
Vec2
<
S
> &
v
) const

702  
x
 =
v
.x && 
y
 == v.y;

705 
	gãm∂©e
 <
˛ass
 
	gT
>

706 
	gãm∂©e
 <
˛ass
 
	gS
>

707 
ölöe
 
boﬁ


708 
	gVec2
<
	gT
>::
›î©‹
 !(c⁄° 
Vec2
<
S
> &
v
) const

710  
x
 !
v
.x || 
y
 != v.y;

713 
	gãm∂©e
 <
˛ass
 
	gT
>

714 
boﬁ


715 
	gVec2
<
	gT
>::
equÆWôhAbsEº‹
 (c⁄° 
Vec2
<
T
> &
v
, T 
e
) const

717 
	gi
 = 0; i < 2; i++)

718 i‡(!
	gIm©h
::
equÆWôhAbsEº‹
 ((*
this
)[
i
], 
v
[i], 
e
))

719  
	gÁl£
;

721  
	gåue
;

724 
	gãm∂©e
 <
˛ass
 
	gT
>

725 
boﬁ


726 
	gVec2
<
	gT
>::
equÆWôhRñEº‹
 (c⁄° 
Vec2
<
T
> &
v
, T 
e
) const

728 
	gi
 = 0; i < 2; i++)

729 i‡(!
	gIm©h
::
equÆWôhRñEº‹
 ((*
this
)[
i
], 
v
[i], 
e
))

730  
	gÁl£
;

732  
	gåue
;

735 
	gãm∂©e
 <
˛ass
 
	gT
>

736 
ölöe
 
T


737 
	gVec2
<
	gT
>::
	$dŸ
 (c⁄° 
Vec2
 &
v
) const

739  
x
 * 
v
.x + 
y
 * v.y;

740 
	}
}

742 
	gãm∂©e
 <
˛ass
 
	gT
>

743 
ölöe
 
T


744 
	gVec2
<
	gT
>::
›î©‹
 ^ (c⁄° 
Vec2
 &
v
) const

746  
dŸ
 (
v
);

749 
	gãm∂©e
 <
˛ass
 
	gT
>

750 
ölöe
 
T


751 
	gVec2
<
	gT
>::
	$¸oss
 (c⁄° 
Vec2
 &
v
) const

753  
x
 * 
v
.
y
 - y * v.x;

755 
	}
}

757 
	gãm∂©e
 <
˛ass
 
	gT
>

758 
ölöe
 
T


759 
	gVec2
<
	gT
>::
›î©‹
 % (c⁄° 
Vec2
 &
v
) const

761  
x
 * 
v
.
y
 - y * v.x;

764 
	gãm∂©e
 <
˛ass
 
	gT
>

765 
ölöe
 c⁄° 
	gVec2
<
	gT
> &

766 
	gVec2
<
	gT
>::
›î©‹
 +(c⁄° 
Vec2
 &
v
)

768 
x
 +
v
.x;

769 
	gy
 +
v
.
y
;

770  *
	gthis
;

773 
	gãm∂©e
 <
˛ass
 
	gT
>

774 
ölöe
 
	gVec2
<
	gT
>

775 
	gVec2
<
	gT
>::
›î©‹
 + (c⁄° 
Vec2
 &
v
) const

777  
Vec2
 (
x
 + 
v
.x, 
y
 + v.y);

780 
	gãm∂©e
 <
˛ass
 
	gT
>

781 
ölöe
 c⁄° 
	gVec2
<
	gT
> &

782 
	gVec2
<
	gT
>::
›î©‹
 -(c⁄° 
Vec2
 &
v
)

784 
x
 -
v
.x;

785 
	gy
 -
v
.
y
;

786  *
	gthis
;

789 
	gãm∂©e
 <
˛ass
 
	gT
>

790 
ölöe
 
	gVec2
<
	gT
>

791 
	gVec2
<
	gT
>::
›î©‹
 - (c⁄° 
Vec2
 &
v
) const

793  
Vec2
 (
x
 - 
v
.x, 
y
 - v.y);

796 
	gãm∂©e
 <
˛ass
 
	gT
>

797 
ölöe
 
	gVec2
<
	gT
>

798 
	gVec2
<
	gT
>::
›î©‹
 - () const

800  
Vec2
 (-
x
, -
y
);

803 
	gãm∂©e
 <
˛ass
 
	gT
>

804 
ölöe
 c⁄° 
	gVec2
<
	gT
> &

805 
	gVec2
<
	gT
>::
	$√g©e
 ()

807 
x
 = -x;

808 
y
 = -y;

809  *
this
;

810 
	}
}

812 
	gãm∂©e
 <
˛ass
 
	gT
>

813 
ölöe
 c⁄° 
	gVec2
<
	gT
> &

814 
	gVec2
<
	gT
>::
›î©‹
 *(c⁄° 
Vec2
 &
v
)

816 
x
 *
v
.x;

817 
	gy
 *
v
.
y
;

818  *
	gthis
;

821 
	gãm∂©e
 <
˛ass
 
	gT
>

822 
ölöe
 c⁄° 
	gVec2
<
	gT
> &

823 
	gVec2
<
	gT
>::
›î©‹
 *(
T
 
a
)

825 
x
 *
a
;

826 
	gy
 *
a
;

827  *
	gthis
;

830 
	gãm∂©e
 <
˛ass
 
	gT
>

831 
ölöe
 
	gVec2
<
	gT
>

832 
	gVec2
<
	gT
>::
›î©‹
 * (c⁄° 
Vec2
 &
v
) const

834  
Vec2
 (
x
 * 
v
.x, 
y
 * v.y);

837 
	gãm∂©e
 <
˛ass
 
	gT
>

838 
ölöe
 
	gVec2
<
	gT
>

839 
	gVec2
<
	gT
>::
›î©‹
 * (
T
 
a
) const

841  
Vec2
 (
x
 * 
a
, 
y
 *á);

844 
	gãm∂©e
 <
˛ass
 
	gT
>

845 
ölöe
 c⁄° 
	gVec2
<
	gT
> &

846 
	gVec2
<
	gT
>::
›î©‹
 /(c⁄° 
Vec2
 &
v
)

848 
x
 /
v
.x;

849 
	gy
 /
v
.
y
;

850  *
	gthis
;

853 
	gãm∂©e
 <
˛ass
 
	gT
>

854 
ölöe
 c⁄° 
	gVec2
<
	gT
> &

855 
	gVec2
<
	gT
>::
›î©‹
 /(
T
 
a
)

857 
x
 /
a
;

858 
	gy
 /
a
;

859  *
	gthis
;

862 
	gãm∂©e
 <
˛ass
 
	gT
>

863 
ölöe
 
	gVec2
<
	gT
>

864 
	gVec2
<
	gT
>::
›î©‹
 / (c⁄° 
Vec2
 &
v
) const

866  
Vec2
 (
x
 / 
v
.x, 
y
 / v.y);

869 
	gãm∂©e
 <
˛ass
 
	gT
>

870 
ölöe
 
	gVec2
<
	gT
>

871 
	gVec2
<
	gT
>::
›î©‹
 / (
T
 
a
) const

873  
Vec2
 (
x
 / 
a
, 
y
 /á);

876 
	gãm∂©e
 <
˛ass
 
	gT
>

877 
ölöe
 
T


878 
	gVec2
<
	gT
>::
	$Àngth
 () const

880  
M©h
<
T
>::
	`sqπ
 (
	`dŸ
 (*
this
));

881 
	}
}

883 
	gãm∂©e
 <
˛ass
 
	gT
>

884 
ölöe
 
T


885 
	gVec2
<
	gT
>::
	$Àngth2
 () const

887  
	`dŸ
 (*
this
);

888 
	}
}

890 
	gãm∂©e
 <
˛ass
 
	gT
>

891 c⁄° 
	gVec2
<
	gT
> &

892 
	gVec2
<
	gT
>::
	$n‹mÆize
 ()

894 
T
 
l
 = 
	`Àngth
();

896 i‡(
l
 != 0)

898 
x
 /
l
;

899 
y
 /
l
;

902  *
this
;

903 
	}
}

905 
	gãm∂©e
 <
˛ass
 
	gT
>

906 c⁄° 
	gVec2
<
	gT
> &

907 
	gVec2
<
	gT
>::
	$n‹mÆizeExc
 (Ë
	`throw
 (
Iex
::
M©hExc
)

909 
T
 
l
 = 
	`Àngth
();

911 i‡(
l
 == 0)

912 
throw
 
	`NuŒVecExc
 ("CannotÇormalizeÇull vector.");

914 
x
 /
l
;

915 
y
 /
l
;

916  *
this
;

917 
	}
}

919 
	gãm∂©e
 <
˛ass
 
	gT
>

920 
ölöe


921 c⁄° 
	gVec2
<
	gT
> &

922 
	gVec2
<
	gT
>::
	$n‹mÆizeN⁄NuŒ
 ()

924 
T
 
l
 = 
	`Àngth
();

925 
x
 /
l
;

926 
y
 /
l
;

927  *
this
;

928 
	}
}

930 
	gãm∂©e
 <
˛ass
 
	gT
>

931 
	gVec2
<
	gT
>

932 
	gVec2
<
	gT
>::
	$n‹mÆized
 () const

934 
T
 
l
 = 
	`Àngth
();

936 i‡(
l
 == 0)

937  
	`Vec2
 (
	`T
 (0));

939  
	`Vec2
 (
x
 / 
l
, 
y
 /Ü);

940 
	}
}

942 
	gãm∂©e
 <
˛ass
 
	gT
>

943 
	gVec2
<
	gT
>

944 
	gVec2
<
	gT
>::
	$n‹mÆizedExc
 (Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
)

946 
T
 
l
 = 
	`Àngth
();

948 i‡(
l
 == 0)

949 
throw
 
	`NuŒVecExc
 ("CannotÇormalizeÇull vector.");

951  
	`Vec2
 (
x
 / 
l
, 
y
 /Ü);

952 
	}
}

954 
	gãm∂©e
 <
˛ass
 
	gT
>

955 
ölöe


956 
	gVec2
<
	gT
>

957 
	gVec2
<
	gT
>::
	$n‹mÆizedN⁄NuŒ
 () const

959 
T
 
l
 = 
	`Àngth
();

960  
	`Vec2
 (
x
 / 
l
, 
y
 /Ü);

961 
	}
}

968 
	gãm∂©e
 <
˛ass
 
	gT
>

969 
ölöe
 
	gT
 &

970 
	gVec3
<
	gT
>::
›î©‹
 [] (
i
)

972  (&
x
)[
i
];

975 
	gãm∂©e
 <
˛ass
 
	gT
>

976 
ölöe
 c⁄° 
	gT
 &

977 
	gVec3
<
	gT
>::
›î©‹
 [] (
i
) const

979  (&
x
)[
i
];

982 
	gãm∂©e
 <
˛ass
 
	gT
>

983 
ölöe


984 
	gVec3
<
	gT
>::
	$Vec3
 ()

987 
	}
}

989 
ãm∂©e
 <
˛ass
 
T
>

990 
ölöe


991 
Vec3
<
T
>::
	$Vec3
 (
T
 
a
)

993 
x
 = 
y
 = 
z
 = 
a
;

994 
	}
}

996 
	gãm∂©e
 <
˛ass
 
	gT
>

997 
ölöe


998 
	gVec3
<
	gT
>::
	$Vec3
 (
T
 
a
, T 
b
, T 
c
)

1000 
x
 = 
a
;

1001 
y
 = 
b
;

1002 
z
 = 
c
;

1003 
	}
}

1005 
	gãm∂©e
 <
˛ass
 
	gT
>

1006 
ölöe


1007 
	gVec3
<
	gT
>::
	$Vec3
 (c⁄° 
Vec3
 &
v
)

1009 
x
 = 
v
.x;

1010 
y
 = 
v
.y;

1011 
z
 = 
v
.z;

1012 
	}
}

1014 
	gãm∂©e
 <
˛ass
 
	gT
>

1015 
	gãm∂©e
 <
˛ass
 
	gS
>

1016 
ölöe


1017 
	gVec3
<
	gT
>::
Vec3
 (c⁄° Vec3<
S
> &
v
)

1019 
x
 = 
T
 (
v
.x);

1020 
	gy
 = 
T
 (
v
.
y
);

1021 
	gz
 = 
T
 (
v
.
z
);

1024 
	gãm∂©e
 <
˛ass
 
	gT
>

1025 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1026 
	gVec3
<
	gT
>::
›î©‹
 = (c⁄° 
Vec3
 &
v
)

1028 
x
 = 
v
.x;

1029 
	gy
 = 
v
.
y
;

1030 
	gz
 = 
v
.
z
;

1031  *
	gthis
;

1034 
	gãm∂©e
 <
˛ass
 
	gT
>

1035 
	gãm∂©e
 <
˛ass
 
	gS
>

1036 
ölöe
 

1037 
	gVec3
<
	gT
>::
	$£tVÆue
 (
S
 
a
, S 
b
, S 
c
)

1039 
x
 = 
	`T
 (
a
);

1040 
y
 = 
	`T
 (
b
);

1041 
z
 = 
	`T
 (
c
);

1042 
	}
}

1044 
	gãm∂©e
 <
˛ass
 
	gT
>

1045 
	gãm∂©e
 <
˛ass
 
	gS
>

1046 
ölöe
 

1047 
	gVec3
<
	gT
>::
£tVÆue
 (c⁄° 
Vec3
<
S
> &
v
)

1049 
x
 = 
T
 (
v
.x);

1050 
	gy
 = 
T
 (
v
.
y
);

1051 
	gz
 = 
T
 (
v
.
z
);

1054 
	gãm∂©e
 <
˛ass
 
	gT
>

1055 
	gãm∂©e
 <
˛ass
 
	gS
>

1056 
ölöe
 

1057 
	gVec3
<
	gT
>::
	$gëVÆue
 (
S
 &
a
, S &
b
, S &
c
) const

1059 
a
 = 
	`S
 (
x
);

1060 
b
 = 
	`S
 (
y
);

1061 
c
 = 
	`S
 (
z
);

1062 
	}
}

1064 
	gãm∂©e
 <
˛ass
 
	gT
>

1065 
	gãm∂©e
 <
˛ass
 
	gS
>

1066 
ölöe
 

1067 
	gVec3
<
	gT
>::
gëVÆue
 (
Vec3
<
S
> &
v
) const

1069 
v
.
x
 = 
S
 (x);

1070 
	gv
.
	gy
 = 
S
 (
y
);

1071 
	gv
.
	gz
 = 
S
 (
z
);

1074 
	gãm∂©e
 <
˛ass
 
	gT
>

1075 
ölöe
 
T
 *

1076 
	gVec3
<
	gT
>::
	$gëVÆue
()

1078  (
T
 *Ë&
x
;

1079 
	}
}

1081 
	gãm∂©e
 <
˛ass
 
	gT
>

1082 
ölöe
 c⁄° 
T
 *

1083 
	gVec3
<
	gT
>::
	$gëVÆue
() const

1085  (c⁄° 
T
 *Ë&
x
;

1086 
	}
}

1088 
	gãm∂©e
 <
˛ass
 
	gT
>

1089 
	gãm∂©e
 <
˛ass
 
	gS
>

1090 
ölöe
 
boﬁ


1091 
	gVec3
<
	gT
>::
›î©‹
 =(c⁄° 
Vec3
<
S
> &
v
) const

1093  
x
 =
v
.x && 
y
 =v.y && 
z
 == v.z;

1096 
	gãm∂©e
 <
˛ass
 
	gT
>

1097 
	gãm∂©e
 <
˛ass
 
	gS
>

1098 
ölöe
 
boﬁ


1099 
	gVec3
<
	gT
>::
›î©‹
 !(c⁄° 
Vec3
<
S
> &
v
) const

1101  
x
 !
v
.x || 
y
 !v.y || 
z
 != v.z;

1104 
	gãm∂©e
 <
˛ass
 
	gT
>

1105 
boﬁ


1106 
	gVec3
<
	gT
>::
equÆWôhAbsEº‹
 (c⁄° 
Vec3
<
T
> &
v
, T 
e
) const

1108 
	gi
 = 0; i < 3; i++)

1109 i‡(!
	gIm©h
::
equÆWôhAbsEº‹
 ((*
this
)[
i
], 
v
[i], 
e
))

1110  
	gÁl£
;

1112  
	gåue
;

1115 
	gãm∂©e
 <
˛ass
 
	gT
>

1116 
boﬁ


1117 
	gVec3
<
	gT
>::
equÆWôhRñEº‹
 (c⁄° 
Vec3
<
T
> &
v
, T 
e
) const

1119 
	gi
 = 0; i < 3; i++)

1120 i‡(!
	gIm©h
::
equÆWôhRñEº‹
 ((*
this
)[
i
], 
v
[i], 
e
))

1121  
	gÁl£
;

1123  
	gåue
;

1126 
	gãm∂©e
 <
˛ass
 
	gT
>

1127 
ölöe
 
T


1128 
	gVec3
<
	gT
>::
	$dŸ
 (c⁄° 
Vec3
 &
v
) const

1130  
x
 * 
v
.x + 
y
 * v.y + 
z
 * v.z;

1131 
	}
}

1133 
	gãm∂©e
 <
˛ass
 
	gT
>

1134 
ölöe
 
T


1135 
	gVec3
<
	gT
>::
›î©‹
 ^ (c⁄° 
Vec3
 &
v
) const

1137  
dŸ
 (
v
);

1140 
	gãm∂©e
 <
˛ass
 
	gT
>

1141 
ölöe
 
	gVec3
<
	gT
>

1142 
	gVec3
<
	gT
>::
	$¸oss
 (c⁄° 
Vec3
 &
v
) const

1144  
	`Vec3
 (
y
 * 
v
.
z
 - z * v.y,

1145 
z
 * 
v
.
x
 - x * v.z,

1146 
x
 * 
v
.
y
 - y * v.x);

1147 
	}
}

1149 
	gãm∂©e
 <
˛ass
 
	gT
>

1150 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1151 
	gVec3
<
	gT
>::
›î©‹
 %(c⁄° 
Vec3
 &
v
)

1153 
T
 
a
 = 
y
 * 
v
.
z
 - z * v.y;

1154 
T
 
	gb
 = 
z
 * 
v
.
x
 - x * v.z;

1155 
T
 
	gc
 = 
x
 * 
v
.
y
 - y * v.x;

1156 
	gx
 = 
a
;

1157 
	gy
 = 
b
;

1158 
	gz
 = 
c
;

1159  *
	gthis
;

1162 
	gãm∂©e
 <
˛ass
 
	gT
>

1163 
ölöe
 
	gVec3
<
	gT
>

1164 
	gVec3
<
	gT
>::
›î©‹
 % (c⁄° 
Vec3
 &
v
) const

1166  
Vec3
 (
y
 * 
v
.
z
 - z * v.y,

1167 
z
 * 
v
.
x
 - x * v.z,

1168 
x
 * 
v
.
y
 - y * v.x);

1171 
	gãm∂©e
 <
˛ass
 
	gT
>

1172 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1173 
	gVec3
<
	gT
>::
›î©‹
 +(c⁄° 
Vec3
 &
v
)

1175 
x
 +
v
.x;

1176 
	gy
 +
v
.
y
;

1177 
	gz
 +
v
.
z
;

1178  *
	gthis
;

1181 
	gãm∂©e
 <
˛ass
 
	gT
>

1182 
ölöe
 
	gVec3
<
	gT
>

1183 
	gVec3
<
	gT
>::
›î©‹
 + (c⁄° 
Vec3
 &
v
) const

1185  
Vec3
 (
x
 + 
v
.x, 
y
 + v.y, 
z
 + v.z);

1188 
	gãm∂©e
 <
˛ass
 
	gT
>

1189 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1190 
	gVec3
<
	gT
>::
›î©‹
 -(c⁄° 
Vec3
 &
v
)

1192 
x
 -
v
.x;

1193 
	gy
 -
v
.
y
;

1194 
	gz
 -
v
.
z
;

1195  *
	gthis
;

1198 
	gãm∂©e
 <
˛ass
 
	gT
>

1199 
ölöe
 
	gVec3
<
	gT
>

1200 
	gVec3
<
	gT
>::
›î©‹
 - (c⁄° 
Vec3
 &
v
) const

1202  
Vec3
 (
x
 - 
v
.x, 
y
 - v.y, 
z
 - v.z);

1205 
	gãm∂©e
 <
˛ass
 
	gT
>

1206 
ölöe
 
	gVec3
<
	gT
>

1207 
	gVec3
<
	gT
>::
›î©‹
 - () const

1209  
Vec3
 (-
x
, -
y
, -
z
);

1212 
	gãm∂©e
 <
˛ass
 
	gT
>

1213 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1214 
	gVec3
<
	gT
>::
	$√g©e
 ()

1216 
x
 = -x;

1217 
y
 = -y;

1218 
z
 = -z;

1219  *
this
;

1220 
	}
}

1222 
	gãm∂©e
 <
˛ass
 
	gT
>

1223 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1224 
	gVec3
<
	gT
>::
›î©‹
 *(c⁄° 
Vec3
 &
v
)

1226 
x
 *
v
.x;

1227 
	gy
 *
v
.
y
;

1228 
	gz
 *
v
.
z
;

1229  *
	gthis
;

1232 
	gãm∂©e
 <
˛ass
 
	gT
>

1233 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1234 
	gVec3
<
	gT
>::
›î©‹
 *(
T
 
a
)

1236 
x
 *
a
;

1237 
	gy
 *
a
;

1238 
	gz
 *
a
;

1239  *
	gthis
;

1242 
	gãm∂©e
 <
˛ass
 
	gT
>

1243 
ölöe
 
	gVec3
<
	gT
>

1244 
	gVec3
<
	gT
>::
›î©‹
 * (c⁄° 
Vec3
 &
v
) const

1246  
Vec3
 (
x
 * 
v
.x, 
y
 * v.y, 
z
 * v.z);

1249 
	gãm∂©e
 <
˛ass
 
	gT
>

1250 
ölöe
 
	gVec3
<
	gT
>

1251 
	gVec3
<
	gT
>::
›î©‹
 * (
T
 
a
) const

1253  
Vec3
 (
x
 * 
a
, 
y
 *á, 
z
 *á);

1256 
	gãm∂©e
 <
˛ass
 
	gT
>

1257 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1258 
	gVec3
<
	gT
>::
›î©‹
 /(c⁄° 
Vec3
 &
v
)

1260 
x
 /
v
.x;

1261 
	gy
 /
v
.
y
;

1262 
	gz
 /
v
.
z
;

1263  *
	gthis
;

1266 
	gãm∂©e
 <
˛ass
 
	gT
>

1267 
ölöe
 c⁄° 
	gVec3
<
	gT
> &

1268 
	gVec3
<
	gT
>::
›î©‹
 /(
T
 
a
)

1270 
x
 /
a
;

1271 
	gy
 /
a
;

1272 
	gz
 /
a
;

1273  *
	gthis
;

1276 
	gãm∂©e
 <
˛ass
 
	gT
>

1277 
ölöe
 
	gVec3
<
	gT
>

1278 
	gVec3
<
	gT
>::
›î©‹
 / (c⁄° 
Vec3
 &
v
) const

1280  
Vec3
 (
x
 / 
v
.x, 
y
 / v.y, 
z
 / v.z);

1283 
	gãm∂©e
 <
˛ass
 
	gT
>

1284 
ölöe
 
	gVec3
<
	gT
>

1285 
	gVec3
<
	gT
>::
›î©‹
 / (
T
 
a
) const

1287  
Vec3
 (
x
 / 
a
, 
y
 /á, 
z
 /á);

1291 
	gãm∂©e
 <
˛ass
 
	gT
>

1292 
ölöe
 
T


1293 
	gVec3
<
	gT
>::
	$Àngth
 () const

1295  
M©h
<
T
>::
	`sqπ
 (
	`dŸ
 (*
this
));

1296 
	}
}

1298 
	gãm∂©e
 <
˛ass
 
	gT
>

1299 
ölöe
 
T


1300 
	gVec3
<
	gT
>::
	$Àngth2
 () const

1302  
	`dŸ
 (*
this
);

1303 
	}
}

1305 
	gãm∂©e
 <
˛ass
 
	gT
>

1306 c⁄° 
	gVec3
<
	gT
> &

1307 
	gVec3
<
	gT
>::
	$n‹mÆize
 ()

1309 
T
 
l
 = 
	`Àngth
();

1311 i‡(
l
 != 0)

1313 
x
 /
l
;

1314 
y
 /
l
;

1315 
z
 /
l
;

1318  *
this
;

1319 
	}
}

1321 
	gãm∂©e
 <
˛ass
 
	gT
>

1322 c⁄° 
	gVec3
<
	gT
> &

1323 
	gVec3
<
	gT
>::
	$n‹mÆizeExc
 (Ë
	`throw
 (
Iex
::
M©hExc
)

1325 
T
 
l
 = 
	`Àngth
();

1327 i‡(
l
 == 0)

1328 
throw
 
	`NuŒVecExc
 ("CannotÇormalizeÇull vector.");

1330 
x
 /
l
;

1331 
y
 /
l
;

1332 
z
 /
l
;

1333  *
this
;

1334 
	}
}

1336 
	gãm∂©e
 <
˛ass
 
	gT
>

1337 
ölöe


1338 c⁄° 
	gVec3
<
	gT
> &

1339 
	gVec3
<
	gT
>::
	$n‹mÆizeN⁄NuŒ
 ()

1341 
T
 
l
 = 
	`Àngth
();

1342 
x
 /
l
;

1343 
y
 /
l
;

1344 
z
 /
l
;

1345  *
this
;

1346 
	}
}

1348 
	gãm∂©e
 <
˛ass
 
	gT
>

1349 
	gVec3
<
	gT
>

1350 
	gVec3
<
	gT
>::
	$n‹mÆized
 () const

1352 
T
 
l
 = 
	`Àngth
();

1354 i‡(
l
 == 0)

1355  
	`Vec3
 (
	`T
 (0));

1357  
	`Vec3
 (
x
 / 
l
, 
y
 /Ü, 
z
 /Ü);

1358 
	}
}

1360 
	gãm∂©e
 <
˛ass
 
	gT
>

1361 
	gVec3
<
	gT
>

1362 
	gVec3
<
	gT
>::
	$n‹mÆizedExc
 (Ëc⁄° 
	`throw
 (
Iex
::
M©hExc
)

1364 
T
 
l
 = 
	`Àngth
();

1366 i‡(
l
 == 0)

1367 
throw
 
	`NuŒVecExc
 ("CannotÇormalizeÇull vector.");

1369  
	`Vec3
 (
x
 / 
l
, 
y
 /Ü, 
z
 /Ü);

1370 
	}
}

1372 
	gãm∂©e
 <
˛ass
 
	gT
>

1373 
ölöe


1374 
	gVec3
<
	gT
>

1375 
	gVec3
<
	gT
>::
	$n‹mÆizedN⁄NuŒ
 () const

1377 
T
 
l
 = 
	`Àngth
();

1378  
	`Vec3
 (
x
 / 
l
, 
y
 /Ü, 
z
 /Ü);

1379 
	}
}

1386 
	gãm∂©e
 <
˛ass
 
	gT
>

1387 
	g°d
::
o°ªam
 &

1388 
›î©‹
 << (
°d
::
o°ªam
 &
s
, c⁄° 
	gVec2
<
	gT
> &
	gv
)

1390  
	gs
 << '(' << 
	gv
.
	gx
 << ' ' << v.
	gy
 << ')';

1393 
	gãm∂©e
 <
˛ass
 
	gT
>

1394 
	g°d
::
o°ªam
 &

1395 
›î©‹
 << (
°d
::
o°ªam
 &
s
, c⁄° 
	gVec3
<
	gT
> &
	gv
)

1397  
	gs
 << '(' << 
	gv
.
	gx
 << ' ' << v.
	gy
 << ' ' << v.
	gz
 << ')';

1405 
	gãm∂©e
 <
˛ass
 
	gT
>

1406 
ölöe
 
	gVec2
<
	gT
>

1407 
	g›î©‹
 * (
T
 
	ga
, c⁄° 
	gVec2
<
	gT
> &
	gv
)

1409  
	gVec2
<
	gT
> (
a
 * 
	gv
.
	gx
,á * v.
	gy
);

1412 
	gãm∂©e
 <
˛ass
 
	gT
>

1413 
ölöe
 
	gVec3
<
	gT
>

1414 
	g›î©‹
 * (
T
 
	ga
, c⁄° 
	gVec3
<
	gT
> &
	gv
)

1416  
	gVec3
<
	gT
> (
a
 * 
	gv
.
	gx
,á * v.
	gy
,á * v.
	gz
);

1420 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


1421 #¥agm®
w¨nög
(:4290)

	@shared/openexr-mac/include/OpenEXR/ImathVecAlgo.h

37 #i‚de‡
INCLUDED_IMATHVECALGO_H


38 
	#INCLUDED_IMATHVECALGO_H


	)

50 
	~"Im©hVec.h
"

51 
	~"Im©hLimôs.h
"

53 
«me•a˚
 
	gIm©h
 {

60 
	gãm∂©e
 <
˛ass
 
	gVec
> 
Vec
 
¥oje˘
 (c⁄° Ve¯&
s
, c⁄° Ve¯&
t
);

68 
	gãm∂©e
 <
˛ass
 
	gVec
> 
Vec
 
‹thog⁄Æ
 (c⁄° Ve¯&
s
, c⁄° Ve¯&
t
);

76 
	gãm∂©e
 <
˛ass
 
	gVec
> 
Vec
 
ªÊe˘
 (c⁄° Ve¯&
s
, c⁄° Ve¯&
t
);

84 
	gãm∂©e
 <
˛ass
 
	gVec
> 
Vec
 
˛o£°Vîãx
 (c⁄° Ve¯&
v0
,

85 c⁄° 
Vec
 &
v1
,

86 c⁄° 
Vec
 &
v2
,

87 c⁄° 
Vec
 &
p
);

93 
	gãm∂©e
 <
˛ass
 
	gVec
>

94 
Vec


95 
¥oje˘
 (c⁄° 
Vec
 &
s
, c⁄° Ve¯&
t
)

97 
Vec
 
	gsN‹mÆized
 = 
s
.
n‹mÆized
();

98  
	gsN‹mÆized
 * (sN‹mÆized ^ 
	gt
);

101 
	gãm∂©e
 <
˛ass
 
	gVec
>

102 
Vec


103 
‹thog⁄Æ
 (c⁄° 
Vec
 &
s
, c⁄° Ve¯&
t
)

105  
	gt
 - 
¥oje˘
 (
s
, 
t
);

108 
	gãm∂©e
 <
˛ass
 
	gVec
>

109 
Vec


110 
ªÊe˘
 (c⁄° 
Vec
 &
s
, c⁄° Ve¯&
t
)

112  
	gs
 - 
ty≥«me
 
	gVec
::
Ba£Ty≥
(2Ë* (
s
 - 
¥oje˘
(
t
, s));

115 
	gãm∂©e
 <
˛ass
 
	gVec
>

116 
Vec


117 
˛o£°Vîãx
(c⁄° 
Vec
 &
v0
,

118 c⁄° 
Vec
 &
v1
,

119 c⁄° 
Vec
 &
v2
,

120 c⁄° 
Vec
 &
p
)

122 
Vec
 
	g√¨e°
 = 
v0
;

123 
ty≥«me
 
	gVec
::
Ba£Ty≥
 
√¨dŸ
 = (
v0
 - 
p
).
Àngth2
();

124 
ty≥«me
 
	gVec
::
Ba£Ty≥
 
tmp
 = (
v1
 - 
p
).
Àngth2
();

126 i‡(
	gtmp
 < 
	g√¨dŸ
)

128 
	g√¨dŸ
 = 
tmp
;

129 
	g√¨e°
 = 
v1
;

132 
	gtmp
 = (
v2
 - 
p
).
Àngth2
();

134 i‡(
	gtmp
 < 
	g√¨dŸ
)

136 
	g√¨dŸ
 = 
tmp
;

137 
	g√¨e°
 = 
v2
;

140  
	g√¨e°
;

	@shared/openexr-mac/include/OpenEXR/ImfArray.h

37 #i‚de‡
INCLUDED_IMF_ARRAY_H


38 
	#INCLUDED_IMF_ARRAY_H


	)

72 
«me•a˚
 
	gImf
 {

75 
	gãm∂©e
 <
˛ass
 
	gT
>

76 ˛as†
	cAºay


78 
	gpublic
:

84 
Aºay
 (Ë{
_d©a
 = 0;}

85 
Aºay
 (
size
Ë{
	g_d©a
 = 
√w
 
T
[size];}

86 ~
Aºay
 (Ë{
	gdñëe
 [] 
	g_d©a
;}

93 
›î©‹
 
	gT
 * (Ë{ 
	g_d©a
;}

94 
›î©‹
 c⁄° 
	gT
 * (Ëc⁄° { 
	g_d©a
;}

109 
ªsizeEø£
 (
size
);

110 
ªsizeEø£Unß„
 (
size
);

113 
	g¥iv©e
:

115 
Aºay
 (const Array &);

116 
	gAºay
 & 
	g›î©‹
 = (c⁄° 
Aºay
 &);

118 
T
 * 
	g_d©a
;

122 
	gãm∂©e
 <
˛ass
 
	gT
>

123 ˛as†
	cAºay2D


125 
	gpublic
:

131 
Aºay2D
 ();

132 
Aºay2D
 (
sizeX
, 
sizeY
);

133 ~
Aºay2D
 ();

140 
T
 * 
	g›î©‹
 [] (
	gx
);

141 c⁄° 
T
 * 
	g›î©‹
 [] (
	gx
) const;

156 
ªsizeEø£
 (
sizeX
, 
sizeY
);

157 
ªsizeEø£Unß„
 (
sizeX
, 
sizeY
);

160 
	g¥iv©e
:

162 
Aºay2D
 (const Array2D &);

163 
	gAºay2D
 & 
	g›î©‹
 = (c⁄° 
Aºay2D
 &);

165 
	g_sizeY
;

166 
T
 * 
	g_d©a
;

174 
	gãm∂©e
 <
˛ass
 
	gT
>

175 
ölöe
 

176 
	gAºay
<
	gT
>::
	$ªsizeEø£
 (
size
)

178 
T
 *
tmp
 = 
√w
 T[
size
];

179 
dñëe
 [] 
_d©a
;

180 
_d©a
 = 
tmp
;

181 
	}
}

184 
	gãm∂©e
 <
˛ass
 
	gT
>

185 
ölöe
 

186 
	gAºay
<
	gT
>::
	$ªsizeEø£Unß„
 (
size
)

188 
dñëe
 [] 
_d©a
;

189 
_d©a
 = 0;

190 
_d©a
 = 
√w
 
T
[
size
];

191 
	}
}

194 
	gãm∂©e
 <
˛ass
 
	gT
>

195 
ölöe


196 
	gAºay2D
<
	gT
>::
	$Aºay2D
 ():

197 
	`_sizeY
 (0), 
	$_d©a
 (0)

200 
	}
}

203 
	gãm∂©e
 <
˛ass
 
	gT
>

204 
ölöe


205 
	gAºay2D
<
	gT
>::
	$Aºay2D
 (
sizeX
, 
sizeY
):

206 
	`_sizeY
 (
sizeY
), 
	$_d©a
 (
√w
 
T
[
sizeX
 * 
sizeY
])

209 
	}
}

212 
	gãm∂©e
 <
˛ass
 
	gT
>

213 
ölöe


214 
	gAºay2D
<
	gT
>::~
	$Aºay2D
 ()

216 
dñëe
 [] 
_d©a
;

217 
	}
}

220 
	gãm∂©e
 <
˛ass
 
	gT
>

221 
ölöe
 
T
 *

222 
	gAºay2D
<
	gT
>::
›î©‹
 [] (
x
)

224  
_d©a
 + 
x
 * 
_sizeY
;

228 
	gãm∂©e
 <
˛ass
 
	gT
>

229 
ölöe
 c⁄° 
T
 *

230 
	gAºay2D
<
	gT
>::
›î©‹
 [] (
x
) const

232  
_d©a
 + 
x
 * 
_sizeY
;

236 
	gãm∂©e
 <
˛ass
 
	gT
>

237 
ölöe
 

238 
	gAºay2D
<
	gT
>::
	$ªsizeEø£
 (
sizeX
, 
sizeY
)

240 
T
 *
tmp
 = 
√w
 T[
sizeX
 * 
sizeY
];

241 
dñëe
 [] 
_d©a
;

242 
_sizeY
 = 
sizeY
;

243 
_d©a
 = 
tmp
;

244 
	}
}

247 
	gãm∂©e
 <
˛ass
 
	gT
>

248 
ölöe
 

249 
	gAºay2D
<
	gT
>::
	$ªsizeEø£Unß„
 (
sizeX
, 
sizeY
)

251 
dñëe
 [] 
_d©a
;

252 
_d©a
 = 0;

253 
_sizeY
 = 0;

254 
_d©a
 = 
√w
 
T
[
sizeX
 * 
sizeY
];

255 
_sizeY
 = 
sizeY
;

256 
	}
}

	@shared/openexr-mac/include/OpenEXR/ImfAttribute.h

37 #i‚de‡
INCLUDED_IMF_ATTRIBUTE_H


38 
	#INCLUDED_IMF_ATTRIBUTE_H


	)

46 
	~"IexBa£Exc.h
"

47 
	~<ImfIO.h
>

48 
	~<ImfXdr.h
>

51 
«me•a˚
 
	gImf
 {

54 ˛as†
	cAâribuã


56 
	gpublic
:

62 
Aâribuã
 ();

63 
	gvútuÆ
 ~
Aâribuã
 ();

70 
vútuÆ
 c⁄° * 
ty≥Name
 () const = 0;

77 
vútuÆ
 
Aâribuã
 * 
c›y
 () const = 0;

84 
vútuÆ
 
wrôeVÆueTo
 (
OSåóm
 &
os
,

85 
vîsi⁄
) const = 0;

87 
vútuÆ
 
ªadVÆueFrom
 (
ISåóm
 &
is
,

88 
size
,

89 
vîsi⁄
) = 0;

91 
vútuÆ
 
c›yVÆueFrom
 (c⁄° 
Aâribuã
 &
Ÿhî
) = 0;

98 
Aâribuã
 * 
√wAâribuã
 (c⁄° 
ty≥Name
[]);

105 
boﬁ
 
knownTy≥
 (c⁄° 
ty≥Name
[]);

108 
	g¥Ÿe˘ed
:

115 
ªgi°îAâribuãTy≥
 (c⁄° 
ty≥Name
[],

116 
Aâribuã
 *(*
√wAâribuã
)());

124 
unRegi°îAâribuãTy≥
 (c⁄° 
ty≥Name
[]);

132 
	gãm∂©e
 <
˛ass
 
	gT
>

133 ˛as†
	cTy≥dAâribuã
: 
public
 
Aâribuã


135 
public
:

141 
Ty≥dAâribuã
 ();

142 
Ty≥dAâribuã
 (c⁄° 
T
 &
vÆue
);

143 
Ty≥dAâribuã
 (c⁄° Ty≥dAâribuã<
T
> &
Ÿhî
);

144 
	gvútuÆ
 ~
Ty≥dAâribuã
 ();

151 
	gT
 & 
vÆue
 ();

152 c⁄° 
	gT
 & 
vÆue
 () const;

159 
vútuÆ
 c⁄° * 
ty≥Name
 () const;

167 c⁄° * 
°©icTy≥Name
 ();

174 
Aâribuã
 * 
makeNewAâribuã
 ();

181 
vútuÆ
 
Aâribuã
 * 
c›y
 () const;

189 
vútuÆ
 
wrôeVÆueTo
 (
OSåóm
 &
os
,

190 
vîsi⁄
) const;

192 
vútuÆ
 
ªadVÆueFrom
 (
ISåóm
 &
is
,

193 
size
,

194 
vîsi⁄
);

196 
vútuÆ
 
c›yVÆueFrom
 (c⁄° 
Aâribuã
 &
Ÿhî
);

203 
Ty≥dAâribuã
 * 
ˇ°
 (
Aâribuã
 *
©åibuã
);

204 c⁄° 
Ty≥dAâribuã
 * 
ˇ°
 (c⁄° 
Aâribuã
 *
©åibuã
);

205 
	gTy≥dAâribuã
 & 
ˇ°
 (
Aâribuã
 &
©åibuã
);

206 c⁄° 
	gTy≥dAâribuã
 & 
ˇ°
 (c⁄° 
Aâribuã
 &
©åibuã
);

221 
ªgi°îAâribuãTy≥
 ();

228 
unRegi°îAâribuãTy≥
 ();

231 
	g¥iv©e
:

233 
T
 
_vÆue
;

241 
	gãm∂©e
 <
˛ass
 
	gT
>

242 
	gTy≥dAâribuã
<
	gT
>::
	$Ty≥dAâribuã
 (): 
	`_vÆue
 (
	$T
())

245 
	}
}

248 
ãm∂©e
 <
˛ass
 
T
>

249 
Ty≥dAâribuã
<
T
>::
	$Ty≥dAâribuã
 (c⁄° 
T
 &
vÆue
): 
	$_vÆue
 (
vÆue
)

252 
	}
}

255 
ãm∂©e
 <
˛ass
 
T
>

256 
Ty≥dAâribuã
<
T
>::Ty≥dAâribuã (c⁄° Ty≥dAâribuã<T> &
Ÿhî
):

257 
	$_vÆue
 ()

259 
	`c›yVÆueFrom
 (
Ÿhî
);

260 
	}
}

263 
	gãm∂©e
 <
˛ass
 
	gT
>

264 
	gTy≥dAâribuã
<
	gT
>::~
	$Ty≥dAâribuã
 ()

267 
	}
}

270 
ãm∂©e
 <
˛ass
 
T
>

271 
ölöe
 
T
 &

272 
Ty≥dAâribuã
<
T
>::
	$vÆue
 ()

274  
_vÆue
;

275 
	}
}

278 
	gãm∂©e
 <
˛ass
 
	gT
>

279 
ölöe
 c⁄° 
	gT
 &

280 
	gTy≥dAâribuã
<
	gT
>::
	$vÆue
 () const

282  
_vÆue
;

283 
	}
}

286 
	gãm∂©e
 <
˛ass
 
	gT
>

288 
	gTy≥dAâribuã
<
	gT
>::
	$ty≥Name
 () const

290  
	`°©icTy≥Name
();

291 
	}
}

294 
	gãm∂©e
 <
˛ass
 
	gT
>

295 
Aâribuã
 *

296 
	gTy≥dAâribuã
<
	gT
>::
	$makeNewAâribuã
 ()

298  
√w
 
Ty≥dAâribuã
<
T
>();

299 
	}
}

302 
	gãm∂©e
 <
˛ass
 
	gT
>

303 
Aâribuã
 *

304 
	gTy≥dAâribuã
<
	gT
>::
	$c›y
 () const

306 
Aâribuã
 * 
©åibuã
 = 
√w
 
Ty≥dAâribuã
<
T
>();

307 
©åibuã
->
	`c›yVÆueFrom
 (*
this
);

308  
©åibuã
;

309 
	}
}

312 
	gãm∂©e
 <
˛ass
 
	gT
>

314 
	gTy≥dAâribuã
<
	gT
>::
	$wrôeVÆueTo
 (
OSåóm
 &
os
, 
vîsi⁄
) const

316 
Xdr
::
wrôe
 <
SåómIO
> (
os
, 
_vÆue
);

317 
	}
}

320 
	gãm∂©e
 <
˛ass
 
	gT
>

322 
	gTy≥dAâribuã
<
	gT
>::
	$ªadVÆueFrom
 (
ISåóm
 &
is
, 
size
, 
vîsi⁄
)

324 
Xdr
::
ªad
 <
SåómIO
> (
is
, 
_vÆue
);

325 
	}
}

328 
	gãm∂©e
 <
˛ass
 
	gT
>

330 
	gTy≥dAâribuã
<
	gT
>::
	$c›yVÆueFrom
 (c⁄° 
Aâribuã
 &
Ÿhî
)

332 
_vÆue
 = 
	`ˇ°
(
Ÿhî
)._value;

333 
	}
}

336 
	gãm∂©e
 <
˛ass
 
	gT
>

337 
	gTy≥dAâribuã
<
	gT
> *

338 
	gTy≥dAâribuã
<
	gT
>::
	$ˇ°
 (
Aâribuã
 *
©åibuã
)

340 
Ty≥dAâribuã
<
T
> *
t
 =

341 
dy«mic_ˇ°
 <
Ty≥dAâribuã
<
T
> *> (
©åibuã
);

343 i‡(
t
 == 0)

344 
throw
 
Iex
::
	`Ty≥Exc
 ("UnexpectedáttributeÅype.");

346  
t
;

347 
	}
}

350 
	gãm∂©e
 <
˛ass
 
	gT
>

351 c⁄° 
	gTy≥dAâribuã
<
	gT
> *

352 
	gTy≥dAâribuã
<
	gT
>::
	$ˇ°
 (c⁄° 
Aâribuã
 *
©åibuã
)

354 c⁄° 
Ty≥dAâribuã
<
T
> *
t
 =

355 
dy«mic_ˇ°
 <c⁄° 
Ty≥dAâribuã
<
T
> *> (
©åibuã
);

357 i‡(
t
 == 0)

358 
throw
 
Iex
::
	`Ty≥Exc
 ("UnexpectedáttributeÅype.");

360  
t
;

361 
	}
}

364 
	gãm∂©e
 <
˛ass
 
	gT
>

365 
ölöe
 
	gTy≥dAâribuã
<
	gT
> &

366 
	gTy≥dAâribuã
<
	gT
>::
	$ˇ°
 (
Aâribuã
 &
©åibuã
)

368  *
	`ˇ°
 (&
©åibuã
);

369 
	}
}

372 
	gãm∂©e
 <
˛ass
 
	gT
>

373 
ölöe
 c⁄° 
	gTy≥dAâribuã
<
	gT
> &

374 
	gTy≥dAâribuã
<
	gT
>::
	$ˇ°
 (c⁄° 
Aâribuã
 &
©åibuã
)

376  *
	`ˇ°
 (&
©åibuã
);

377 
	}
}

380 
	gãm∂©e
 <
˛ass
 
	gT
>

381 
ölöe
 

382 
	gTy≥dAâribuã
<
	gT
>::
	$ªgi°îAâribuãTy≥
 ()

384 
Aâribuã
::
	`ªgi°îAâribuãTy≥
 (
	`°©icTy≥Name
(), 
makeNewAâribuã
);

385 
	}
}

388 
	gãm∂©e
 <
˛ass
 
	gT
>

389 
ölöe
 

390 
	gTy≥dAâribuã
<
	gT
>::
	$unRegi°îAâribuãTy≥
 ()

392 
Aâribuã
::
	`unRegi°îAâribuãTy≥
 (
	`°©icTy≥Name
());

393 
	}
}

398 #i‡
deföed
(
OPENEXR_DLL
Ë&& deföed(
_MSC_VER
)

402 #¥agm®
w¨nög
 (
dißbÀ
 : 4275 4661)

404 #i‡
deföed
 (
ILMIMF_EXPORTS
)

405 
	#IMF_EXPIMP_TEMPLATE


	)

407 
	#IMF_EXPIMP_TEMPLATE
 

	)

410 
IMF_EXPIMP_TEMPLATE
 
ãm∂©e
 
˛ass
 
Imf
::
Ty≥dAâribuã
<>;

411 
IMF_EXPIMP_TEMPLATE
 
ãm∂©e
 
˛ass
 
	gImf
::
Ty≥dAâribuã
<>;

413 #¥agm®
w¨nög
( : 4251)

414 #unde‡
EXTERN_TEMPLATE


418 #ifde‡
__MWERKS__


419 
	~<ImfAâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfBoxAttribute.h

37 #i‚de‡
INCLUDED_IMF_BOX_ATTRIBUTE_H


38 
	#INCLUDED_IMF_BOX_ATTRIBUTE_H


	)

47 
	~<ImfAâribuã.h
>

48 
	~"Im©hBox.h
"

51 
«me•a˚
 
	gImf
 {

54 
	gTy≥dAâribuã
<
	tIm©h
::
	tBox2i
> 
	tBox2iAâribuã
;

55 
	gãm∂©e
 <> c⁄° *
	gBox2iAâribuã
::
°©icTy≥Name
 ();

56 
	gãm∂©e
 <> 
	gBox2iAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

57 
	gãm∂©e
 <> 
	gBox2iAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

60 
	gTy≥dAâribuã
<
	tIm©h
::
	tBox2f
> 
	tBox2fAâribuã
;

61 
	gãm∂©e
 <> c⁄° *
	gBox2fAâribuã
::
°©icTy≥Name
 ();

62 
	gãm∂©e
 <> 
	gBox2fAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

63 
	gãm∂©e
 <> 
	gBox2fAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

69 #ifde‡
__MWERKS__


70 
	~<ImfBoxAâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h

35 #i‚de‡
INCLUDED_IMF_C_RGBA_FILE_H


36 
	#INCLUDED_IMF_C_RGBA_FILE_H


	)

39 
	~<°dlib.h
>

41 #ifde‡
__˝lu•lus


49 
	tImfHÆf
;

51 
ImfFlﬂtToHÆf
 (
f
,

52 
ImfHÆf
 *
h
);

54 
ImfFlﬂtToHÆfAºay
 (
n
,

55 c⁄° 
f
[ ],

56 
ImfHÆf
 
h
[ ]);

58 
ImfHÆfToFlﬂt
 (
ImfHÆf
 
h
);

60 
ImfHÆfToFlﬂtAºay
 (
n
,

61 c⁄° 
ImfHÆf
 
h
[ ],

62 
f
[ ]);

68 
	sImfRgba


70 
ImfHÆf
 
r
;

71 
ImfHÆf
 
g
;

72 
ImfHÆf
 
b
;

73 
ImfHÆf
 
a
;

76 
ImfRgba
 
	tImfRgba
;

82 
	#IMF_MAGIC
 20000630

	)

88 
	#IMF_VERSION_NUMBER
 2

	)

94 
	#IMF_INCREASING_Y
 0

	)

95 
	#IMF_DECREASING_Y
 1

	)

96 
	#IMF_RAMDOM_Y
 2

	)

103 
	#IMF_NO_COMPRESSION
 0

	)

104 
	#IMF_RLE_COMPRESSION
 1

	)

105 
	#IMF_ZIPS_COMPRESSION
 2

	)

106 
	#IMF_ZIP_COMPRESSION
 3

	)

107 
	#IMF_PIZ_COMPRESSION
 4

	)

108 
	#IMF_PXR24_COMPRESSION
 5

	)

115 
	#IMF_WRITE_R
 0x01

	)

116 
	#IMF_WRITE_G
 0x02

	)

117 
	#IMF_WRITE_B
 0x04

	)

118 
	#IMF_WRITE_A
 0x08

	)

119 
	#IMF_WRITE_Y
 0x10

	)

120 
	#IMF_WRITE_C
 0x20

	)

121 
	#IMF_WRITE_RGB
 0x07

	)

122 
	#IMF_WRITE_RGBA
 0x0f

	)

123 
	#IMF_WRITE_YC
 0x30

	)

124 
	#IMF_WRITE_YA
 0x18

	)

125 
	#IMF_WRITE_YCA
 0x38

	)

132 
	#IMF_ONE_LEVEL
 0

	)

133 
	#IMF_MIPMAP_LEVELS
 1

	)

134 
	#IMF_RIPMAP_LEVELS
 2

	)

141 
	#IMF_ROUND_DOWN
 0

	)

142 
	#IMF_ROUND_UP
 1

	)

149 
ImfHódî
;

150 
ImfHódî
 
	tImfHódî
;

152 
ImfHódî
 * 
ImfNewHódî
 ();

154 
ImfDñëeHódî
 (
ImfHódî
 *
hdr
);

156 
ImfHódî
 * 
ImfC›yHódî
 (c⁄° ImfHódî *
hdr
);

158 
ImfHódîSëDi•œyWödow
 (
ImfHódî
 *
hdr
,

159 
xMö
, 
yMö
,

160 
xMax
, 
yMax
);

162 
ImfHódîDi•œyWödow
 (c⁄° 
ImfHódî
 *
hdr
,

163 *
xMö
, *
yMö
,

164 *
xMax
, *
yMax
);

166 
ImfHódîSëD©aWödow
 (
ImfHódî
 *
hdr
,

167 
xMö
, 
yMö
,

168 
xMax
, 
yMax
);

170 
ImfHódîD©aWödow
 (c⁄° 
ImfHódî
 *
hdr
,

171 *
xMö
, *
yMö
,

172 *
xMax
, *
yMax
);

174 
ImfHódîSëPixñA•e˘R©io
 (
ImfHódî
 *
hdr
,

175 
pixñA•e˘R©io
);

177 
ImfHódîPixñA•e˘R©io
 (c⁄° 
ImfHódî
 *
hdr
);

179 
ImfHódîSëS¸ìnWödowCíãr
 (
ImfHódî
 *
hdr
,

180 
x
, 
y
);

182 
ImfHódîS¸ìnWödowCíãr
 (c⁄° 
ImfHódî
 *
hdr
,

183 *
x
, *
y
);

185 
ImfHódîSëS¸ìnWödowWidth
 (
ImfHódî
 *
hdr
,

186 
width
);

188 
ImfHódîS¸ìnWödowWidth
 (c⁄° 
ImfHódî
 *
hdr
);

190 
ImfHódîSëLöeOrdî
 (
ImfHódî
 *
hdr
,

191 
löeOrdî
);

193 
ImfHódîLöeOrdî
 (c⁄° 
ImfHódî
 *
hdr
);

195 
ImfHódîSëCom¥essi⁄
 (
ImfHódî
 *
hdr
,

196 
com¥essi⁄
);

198 
ImfHódîCom¥essi⁄
 (c⁄° 
ImfHódî
 *
hdr
);

200 
ImfHódîSëI¡Aâribuã
 (
ImfHódî
 *
hdr
,

201 c⁄° 
«me
[],

202 
vÆue
);

204 
ImfHódîI¡Aâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

205 c⁄° 
«me
[],

206 *
vÆue
);

208 
ImfHódîSëFlﬂtAâribuã
 (
ImfHódî
 *
hdr
,

209 c⁄° 
«me
[],

210 
vÆue
);

212 
ImfHódîSëDoubÀAâribuã
 (
ImfHódî
 *
hdr
,

213 c⁄° 
«me
[],

214 
vÆue
);

216 
ImfHódîFlﬂtAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

217 c⁄° 
«me
[],

218 *
vÆue
);

220 
ImfHódîDoubÀAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

221 c⁄° 
«me
[],

222 *
vÆue
);

224 
ImfHódîSëSåögAâribuã
 (
ImfHódî
 *
hdr
,

225 c⁄° 
«me
[],

226 c⁄° 
vÆue
[]);

228 
ImfHódîSåögAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

229 c⁄° 
«me
[],

230 c⁄° **
vÆue
);

232 
ImfHódîSëBox2iAâribuã
 (
ImfHódî
 *
hdr
,

233 c⁄° 
«me
[],

234 
xMö
, 
yMö
,

235 
xMax
, 
yMax
);

237 
ImfHódîBox2iAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

238 c⁄° 
«me
[],

239 *
xMö
, *
yMö
,

240 *
xMax
, *
yMax
);

242 
ImfHódîSëBox2fAâribuã
 (
ImfHódî
 *
hdr
,

243 c⁄° 
«me
[],

244 
xMö
, 
yMö
,

245 
xMax
, 
yMax
);

247 
ImfHódîBox2fAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

248 c⁄° 
«me
[],

249 *
xMö
, *
yMö
,

250 *
xMax
, *
yMax
);

252 
ImfHódîSëV2iAâribuã
 (
ImfHódî
 *
hdr
,

253 c⁄° 
«me
[],

254 
x
, 
y
);

256 
ImfHódîV2iAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

257 c⁄° 
«me
[],

258 *
x
, *
y
);

260 
ImfHódîSëV2fAâribuã
 (
ImfHódî
 *
hdr
,

261 c⁄° 
«me
[],

262 
x
, 
y
);

264 
ImfHódîV2fAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

265 c⁄° 
«me
[],

266 *
x
, *
y
);

268 
ImfHódîSëV3iAâribuã
 (
ImfHódî
 *
hdr
,

269 c⁄° 
«me
[],

270 
x
, 
y
, 
z
);

272 
ImfHódîV3iAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

273 c⁄° 
«me
[],

274 *
x
, *
y
, *
z
);

276 
ImfHódîSëV3fAâribuã
 (
ImfHódî
 *
hdr
,

277 c⁄° 
«me
[],

278 
x
, 
y
, 
z
);

280 
ImfHódîV3fAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

281 c⁄° 
«me
[],

282 *
x
, *
y
, *
z
);

284 
ImfHódîSëM33fAâribuã
 (
ImfHódî
 *
hdr
,

285 c⁄° 
«me
[],

286 c⁄° 
m
[3][3]);

288 
ImfHódîM33fAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

289 c⁄° 
«me
[],

290 
m
[3][3]);

292 
ImfHódîSëM44fAâribuã
 (
ImfHódî
 *
hdr
,

293 c⁄° 
«me
[],

294 c⁄° 
m
[4][4]);

296 
ImfHódîM44fAâribuã
 (c⁄° 
ImfHódî
 *
hdr
,

297 c⁄° 
«me
[],

298 
m
[4][4]);

304 
ImfOuçutFûe
;

305 
ImfOuçutFûe
 
	tImfOuçutFûe
;

307 
ImfOuçutFûe
 * 
ImfO≥nOuçutFûe
 (c⁄° 
«me
[],

308 c⁄° 
ImfHódî
 *
hdr
,

309 
ch™√ls
);

311 
ImfClo£OuçutFûe
 (
ImfOuçutFûe
 *
out
);

313 
ImfOuçutSëFømeBuf„r
 (
ImfOuçutFûe
 *
out
,

314 c⁄° 
ImfRgba
 *
ba£
,

315 
size_t
 
xSåide
,

316 
size_t
 
ySåide
);

318 
ImfOuçutWrôePixñs
 (
ImfOuçutFûe
 *
out
,

319 
numSˇnLöes
);

321 
ImfOuçutCuºítSˇnLöe
 (c⁄° 
ImfOuçutFûe
 *
out
);

323 c⁄° 
ImfHódî
 * 
ImfOuçutHódî
 (c⁄° 
ImfOuçutFûe
 *
out
);

325 
ImfOuçutCh™√ls
 (c⁄° 
ImfOuçutFûe
 *
out
);

332 
ImfTûedOuçutFûe
;

333 
ImfTûedOuçutFûe
 
	tImfTûedOuçutFûe
;

335 
ImfTûedOuçutFûe
 * 
ImfO≥nTûedOuçutFûe
 (c⁄° 
«me
[],

336 c⁄° 
ImfHódî
 *
hdr
,

337 
ch™√ls
,

338 
xSize
, 
ySize
,

339 
mode
, 
rmode
);

341 
ImfClo£TûedOuçutFûe
 (
ImfTûedOuçutFûe
 *
out
);

343 
ImfTûedOuçutSëFømeBuf„r
 (
ImfTûedOuçutFûe
 *
out
,

344 c⁄° 
ImfRgba
 *
ba£
,

345 
size_t
 
xSåide
,

346 
size_t
 
ySåide
);

348 
ImfTûedOuçutWrôeTûe
 (
ImfTûedOuçutFûe
 *
out
,

349 
dx
, 
dy
,

350 
lx
, 
ly
);

352 
ImfTûedOuçutWrôeTûes
 (
ImfTûedOuçutFûe
 *
out
,

353 
dxMö
, 
dxMax
,

354 
dyMö
, 
dyMax
,

355 
lx
, 
ly
);

357 c⁄° 
ImfHódî
 * 
ImfTûedOuçutHódî
 (c⁄° 
ImfTûedOuçutFûe
 *
out
);

359 
ImfTûedOuçutCh™√ls
 (c⁄° 
ImfTûedOuçutFûe
 *
out
);

361 
ImfTûedOuçutTûeXSize
 (c⁄° 
ImfTûedOuçutFûe
 *
out
);

363 
ImfTûedOuçutTûeYSize
 (c⁄° 
ImfTûedOuçutFûe
 *
out
);

365 
ImfTûedOuçutLevñMode
 (c⁄° 
ImfTûedOuçutFûe
 *
out
);

366 
ImfTûedOuçutLevñRoundögMode


367 (c⁄° 
ImfTûedOuçutFûe
 *
out
);

374 
ImfI≈utFûe
;

375 
ImfI≈utFûe
 
	tImfI≈utFûe
;

377 
ImfI≈utFûe
 * 
ImfO≥nI≈utFûe
 (c⁄° 
«me
[]);

379 
ImfClo£I≈utFûe
 (
ImfI≈utFûe
 *
ö
);

381 
ImfI≈utSëFømeBuf„r
 (
ImfI≈utFûe
 *
ö
,

382 
ImfRgba
 *
ba£
,

383 
size_t
 
xSåide
,

384 
size_t
 
ySåide
);

386 
ImfI≈utRódPixñs
 (
ImfI≈utFûe
 *
ö
,

387 
sˇnLöe1
,

388 
sˇnLöe2
);

390 c⁄° 
ImfHódî
 * 
ImfI≈utHódî
 (c⁄° 
ImfI≈utFûe
 *
ö
);

392 
ImfI≈utCh™√ls
 (c⁄° 
ImfI≈utFûe
 *
ö
);

394 c⁄° * 
ImfI≈utFûeName
 (c⁄° 
ImfI≈utFûe
 *
ö
);

401 
ImfTûedI≈utFûe
;

402 
ImfTûedI≈utFûe
 
	tImfTûedI≈utFûe
;

404 
ImfTûedI≈utFûe
 * 
ImfO≥nTûedI≈utFûe
 (c⁄° 
«me
[]);

406 
ImfClo£TûedI≈utFûe
 (
ImfTûedI≈utFûe
 *
ö
);

408 
ImfTûedI≈utSëFømeBuf„r
 (
ImfTûedI≈utFûe
 *
ö
,

409 
ImfRgba
 *
ba£
,

410 
size_t
 
xSåide
,

411 
size_t
 
ySåide
);

413 
ImfTûedI≈utRódTûe
 (
ImfTûedI≈utFûe
 *
ö
,

414 
dx
, 
dy
,

415 
lx
, 
ly
);

417 
ImfTûedI≈utRódTûes
 (
ImfTûedI≈utFûe
 *
ö
,

418 
dxMö
, 
dxMax
,

419 
dyMö
, 
dyMax
,

420 
lx
, 
ly
);

422 c⁄° 
ImfHódî
 * 
ImfTûedI≈utHódî
 (c⁄° 
ImfTûedI≈utFûe
 *
ö
);

424 
ImfTûedI≈utCh™√ls
 (c⁄° 
ImfTûedI≈utFûe
 *
ö
);

426 c⁄° * 
ImfTûedI≈utFûeName
 (c⁄° 
ImfTûedI≈utFûe
 *
ö
);

428 
ImfTûedI≈utTûeXSize
 (c⁄° 
ImfTûedI≈utFûe
 *
ö
);

430 
ImfTûedI≈utTûeYSize
 (c⁄° 
ImfTûedI≈utFûe
 *
ö
);

432 
ImfTûedI≈utLevñMode
 (c⁄° 
ImfTûedI≈utFûe
 *
ö
);

434 
ImfTûedI≈utLevñRoundögMode


435 (c⁄° 
ImfTûedI≈utFûe
 *
ö
);

441 
ImfLut
;

442 
ImfLut
 
	tImfLut
;

444 
ImfLut
 * 
ImfNewRound12logLut
 (
ch™√ls
);

446 
ImfLut
 * 
ImfNewRoundNBôLut
 (
n
, 
ch™√ls
);

448 
ImfDñëeLut
 (
ImfLut
 *
lut
);

450 
ImfAµlyLut
 (
ImfLut
 *
lut
,

451 
ImfRgba
 *
d©a
,

452 
nD©a
,

453 
°ride
);

458 c⁄° * 
ImfEº‹Mesßge
 ();

461 #ifde‡
__˝lu•lus


	@shared/openexr-mac/include/OpenEXR/ImfChannelList.h

37 #i‚de‡
INCLUDED_IMF_CHANNEL_LIST_H


38 
	#INCLUDED_IMF_CHANNEL_LIST_H


	)

47 
	~<ImfName.h
>

48 
	~<ImfPixñTy≥.h
>

49 
	~<m≠
>

50 
	~<£t
>

51 
	~<°rög
>

54 
«me•a˚
 
	gImf
 {

57 
	sCh™√l


63 
PixñTy≥
 
	gty≥
;

74 
	gxSam∂ög
;

75 
	gySam∂ög
;

82 
Ch™√l
 (
PixñTy≥
 
ty≥
 = 
HALF
,

83 
xSam∂ög
 = 1,

84 
ySam∂ög
 = 1);

91 
boﬁ
 
	g›î©‹
 =(c⁄° 
Ch™√l
 &
Ÿhî
) const;

95 ˛as†
	cCh™√lLi°


97 
	gpublic
:

103 
ö£π
 (c⁄° 
«me
[],

104 c⁄° 
Ch™√l
 &
ch™√l
);

118 
	gCh™√l
 & 
	g›î©‹
 [] (c⁄° 
	g«me
[]);

119 c⁄° 
	gCh™√l
 & 
	g›î©‹
 [] (c⁄° 
	g«me
[]) const;

121 
Ch™√l
 * 
födCh™√l
 (c⁄° 
«me
[]);

122 c⁄° 
Ch™√l
 * 
födCh™√l
 (c⁄° 
«me
[]) const;

129 
	g°d
::
	tm≠
 <
	tName
, 
	tCh™√l
> 
	tCh™√lM≠
;

131 
˛ass
 
	gIãøt‹
;

132 
˛ass
 
	gC⁄°Iãøt‹
;

134 
Iãøt‹
 
begö
 ();

135 
C⁄°Iãøt‹
 
begö
 () const;

136 
Iãøt‹
 
íd
 ();

137 
C⁄°Iãøt‹
 
íd
 () const;

138 
Iãøt‹
 
föd
 (c⁄° 
«me
[]);

139 
C⁄°Iãøt‹
 
föd
 (c⁄° 
«me
[]) const;

182 
œyîs
 (
°d
::
£t
 <°d::
°rög
> &
œyîNames
) const;

184 
ch™√lsInLayî
 (c⁄° 
°d
::
°rög
 &
œyîName
,

185 
Iãøt‹
 &
fú°
,

186 
Iãøt‹
 &
œ°
);

188 
ch™√lsInLayî
 (c⁄° 
°d
::
°rög
 &
œyîName
,

189 
C⁄°Iãøt‹
 &
fú°
,

190 
C⁄°Iãøt‹
 &
œ°
) const;

205 
ch™√lsWôhPªfix
 (c⁄° 
¥efix
[],

206 
Iãøt‹
 &
fú°
,

207 
Iãøt‹
 &
œ°
);

209 
ch™√lsWôhPªfix
 (c⁄° 
¥efix
[],

210 
C⁄°Iãøt‹
 &
fú°
,

211 
C⁄°Iãøt‹
 &
œ°
) const;

217 
boﬁ
 
	g›î©‹
 =(c⁄° 
Ch™√lLi°
 &
Ÿhî
) const;

219 
	g¥iv©e
:

221 
Ch™√lM≠
 
_m≠
;

229 ˛as†
	cCh™√lLi°
::
Iãøt‹


231 
public
:

233 
Iãøt‹
 ();

234 
Iãøt‹
 (c⁄° 
Ch™√lLi°
::
Ch™√lM≠
::
ôî©‹
 &
i
);

236 
	gIãøt‹
 & 
	g›î©‹
 ++ ();

237 
Iãøt‹
 
	g›î©‹
 ++ ();

239 c⁄° * 
«me
 () const;

240 
	gCh™√l
 & 
ch™√l
 () const;

242 
	g¥iv©e
:

244 
‰õnd
 
˛ass
 
Ch™√lLi°
::
C⁄°Iãøt‹
;

246 
	gCh™√lLi°
::
Ch™√lM≠
::
ôî©‹
 
_i
;

250 ˛as†
	cCh™√lLi°
::
C⁄°Iãøt‹


252 
public
:

254 
C⁄°Iãøt‹
 ();

255 
C⁄°Iãøt‹
 (c⁄° 
Ch™√lLi°
::
Ch™√lM≠
::
c⁄°_ôî©‹
 &
i
);

256 
C⁄°Iãøt‹
 (c⁄° 
Ch™√lLi°
::
Iãøt‹
 &
Ÿhî
);

258 
	gC⁄°Iãøt‹
 & 
	g›î©‹
 ++ ();

259 
C⁄°Iãøt‹
 
	g›î©‹
 ++ ();

261 c⁄° * 
«me
 () const;

262 c⁄° 
	gCh™√l
 & 
ch™√l
 () const;

264 
	g¥iv©e
:

266 
‰õnd
 
boﬁ
 
›î©‹
 =(c⁄° 
C⁄°Iãøt‹
 &, c⁄° 
	gC⁄°Iãøt‹
 &);

267 
‰õnd
 
boﬁ
 
	g›î©‹
 !(c⁄° 
C⁄°Iãøt‹
 &, c⁄° 
	gC⁄°Iãøt‹
 &);

269 
	gCh™√lLi°
::
Ch™√lM≠
::
c⁄°_ôî©‹
 
_i
;

277 
ölöe


278 
	gCh™√lLi°
::
Iãøt‹
::
	$Iãøt‹
 (): 
	$_i
()

281 
	}
}

284 
ölöe


285 
Ch™√lLi°
::
Iãøt‹
::Iãøt‹ (c⁄° Ch™√lLi°::
Ch™√lM≠
::
ôî©‹
 &
i
):

286 
	$_i
 (
i
)

289 
	}
}

292 
ölöe
 
Ch™√lLi°
::
Iãøt‹
 &

293 
Ch™√lLi°
::
Iãøt‹
::
›î©‹
 ++ ()

295 ++
_i
;

296  *
	gthis
;

300 
ölöe
 
	gCh™√lLi°
::
Iãøt‹


301 
Ch™√lLi°
::
Iãøt‹
::
›î©‹
 ++ ()

303 
Iãøt‹
 
tmp
 = *
this
;

304 ++
	g_i
;

305  
	gtmp
;

309 
ölöe
 const *

310 
	gCh™√lLi°
::
Iãøt‹
::
	$«me
 () const

312  *
_i
->
fú°
;

313 
	}
}

316 
ölöe
 
	gCh™√l
 &

317 
	gCh™√lLi°
::
Iãøt‹
::
	$ch™√l
 () const

319  
_i
->
£c⁄d
;

320 
	}
}

323 
ölöe


324 
	gCh™√lLi°
::
C⁄°Iãøt‹
::
	$C⁄°Iãøt‹
 (): 
	$_i
()

327 
	}
}

329 
ölöe


330 
Ch™√lLi°
::
C⁄°Iãøt‹
::ConstIterator

331 (c⁄° 
Ch™√lLi°
::
Ch™√lM≠
::
c⁄°_ôî©‹
 &
i
): 
	$_i
 (
i
)

334 
	}
}

337 
ölöe


338 
Ch™√lLi°
::
C⁄°Iãøt‹
::C⁄°Iãøt‹ (c⁄° Ch™√lLi°::
Iãøt‹
 &
Ÿhî
):

339 
	$_i
 (
Ÿhî
.
_i
)

342 
	}
}

344 
ölöe
 
Ch™√lLi°
::
C⁄°Iãøt‹
 &

345 
Ch™√lLi°
::
C⁄°Iãøt‹
::
›î©‹
 ++ ()

347 ++
_i
;

348  *
	gthis
;

352 
ölöe
 
	gCh™√lLi°
::
C⁄°Iãøt‹


353 
Ch™√lLi°
::
C⁄°Iãøt‹
::
›î©‹
 ++ ()

355 
C⁄°Iãøt‹
 
tmp
 = *
this
;

356 ++
	g_i
;

357  
	gtmp
;

361 
ölöe
 const *

362 
	gCh™√lLi°
::
C⁄°Iãøt‹
::
	$«me
 () const

364  *
_i
->
fú°
;

365 
	}
}

367 
ölöe
 c⁄° 
	gCh™√l
 &

368 
	gCh™√lLi°
::
C⁄°Iãøt‹
::
	$ch™√l
 () const

370  
_i
->
£c⁄d
;

371 
	}
}

374 
ölöe
 
boﬁ


375 
	g›î©‹
 =(c⁄° 
Ch™√lLi°
::
C⁄°Iãøt‹
 &
x
,

376 c⁄° 
	gCh™√lLi°
::
C⁄°Iãøt‹
 &
y
)

378  
x
.
_i
 =
y
._i;

382 
ölöe
 
boﬁ


383 
	g›î©‹
 !(c⁄° 
Ch™√lLi°
::
C⁄°Iãøt‹
 &
x
,

384 c⁄° 
	gCh™√lLi°
::
C⁄°Iãøt‹
 &
y
)

386  !(
x
 =
y
);

	@shared/openexr-mac/include/OpenEXR/ImfChannelListAttribute.h

37 #i‚de‡
INCLUDED_IMF_CHANNEL_LIST_ATTRIBUTE_H


38 
	#INCLUDED_IMF_CHANNEL_LIST_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

47 
	~<ImfCh™√lLi°.h
>

50 
«me•a˚
 
	gImf
 {

53 
	gTy≥dAâribuã
<
	tCh™√lLi°
> 
	tCh™√lLi°Aâribuã
;

54 
	gãm∂©e
 <> c⁄° *
	gCh™√lLi°Aâribuã
::
°©icTy≥Name
 ();

55 
	gãm∂©e
 <> 
	gCh™√lLi°Aâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

56 
	gãm∂©e
 <> 
	gCh™√lLi°Aâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

62 #ifde‡
__MWERKS__


63 
	~<ImfCh™√lLi°Aâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfChromaticities.h

36 #i‚de‡
INCLUDED_IMF_CHROMATICITIES_H


37 
	#INCLUDED_IMF_CHROMATICITIES_H


	)

46 
	~"Im©hVec.h
"

47 
	~"Im©hM©rix.h
"

49 
«me•a˚
 
	gImf
 {

52 
	sChrom©icôõs


54 
	gIm©h
::
V2f
 
ªd
;

55 
	gIm©h
::
V2f
 
gªí
;

56 
	gIm©h
::
V2f
 
blue
;

57 
	gIm©h
::
V2f
 
whôe
;

59 
Chrom©icôõs
 (c⁄° 
Im©h
::
V2f
 &
ªd
 = Imath::V2f (0.6400f, 0.3300f),

60 c⁄° 
Im©h
::
V2f
 &
gªí
 = Imath::V2f (0.3000f, 0.6000f),

61 c⁄° 
Im©h
::
V2f
 &
blue
 = Imath::V2f (0.1500f, 0.0600f),

62 c⁄° 
Im©h
::
V2f
 &
whôe
 = Imath::V2f (0.3127f, 0.3290f));

121 
	gIm©h
::
M44f
 
RGBtoXYZ
 (c⁄° 
Chrom©icôõs
 
chroma
, 
Y
);

122 
	gIm©h
::
M44f
 
XYZtoRGB
 (c⁄° 
Chrom©icôõs
 
chroma
, 
Y
);

	@shared/openexr-mac/include/OpenEXR/ImfChromaticitiesAttribute.h

36 #i‚de‡
INCLUDED_IMF_CHROMATICITIES_ATTRIBUTE_H


37 
	#INCLUDED_IMF_CHROMATICITIES_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

47 
	~<ImfChrom©icôõs.h
>

50 
«me•a˚
 
	gImf
 {

53 
	gTy≥dAâribuã
<
	tChrom©icôõs
> 
	tChrom©icôõsAâribuã
;

55 
	gãm∂©e
 <>

56 c⁄° *
	gChrom©icôõsAâribuã
::
°©icTy≥Name
 ();

58 
	gãm∂©e
 <>

59 
	gChrom©icôõsAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

61 
	gãm∂©e
 <>

62 
	gChrom©icôõsAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

68 #ifde‡
__MWERKS__


69 
	~<ImfChrom©icôõsAâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfCompression.h

37 #i‚de‡
INCLUDED_IMF_COMPRESSION_H


38 
	#INCLUDED_IMF_COMPRESSION_H


	)

46 
«me•a˚
 
	gImf
 {

49 
	eCom¥essi⁄


51 
	gNO_COMPRESSION
 = 0,

52 
	gRLE_COMPRESSION
 = 1,

53 
	gZIPS_COMPRESSION
 = 2,

54 
	gZIP_COMPRESSION
 = 3,

55 
	gPIZ_COMPRESSION
 = 4,

56 
	gPXR24_COMPRESSION
 = 5,

58 
	gNUM_COMPRESSION_METHODS


	@shared/openexr-mac/include/OpenEXR/ImfCompressionAttribute.h

37 #i‚de‡
INCLUDED_IMF_COMPRESSION_ATTRIBUTE_H


38 
	#INCLUDED_IMF_COMPRESSION_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

47 
	~<ImfCom¥essi⁄.h
>

50 
«me•a˚
 
	gImf
 {

53 
	gTy≥dAâribuã
<
	tCom¥essi⁄
> 
	tCom¥essi⁄Aâribuã
;

54 
	gãm∂©e
 <> c⁄° *
	gCom¥essi⁄Aâribuã
::
°©icTy≥Name
 ();

55 
	gãm∂©e
 <> 
	gCom¥essi⁄Aâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

56 
	gãm∂©e
 <> 
	gCom¥essi⁄Aâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

62 #ifde‡
__MWERKS__


63 
	~<ImfCom¥essi⁄Aâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfConvert.h

36 #i‚de‡
INCLUDED_IMF_CONVERT_H


37 
	#INCLUDED_IMF_CONVERT_H


	)

49 
	~"hÆf.h
"

52 
«me•a˚
 
	gImf
 {

73 
hÆfToUöt
 (
hÆf
 
h
);

74 
ÊﬂtToUöt
 (
f
);

98 
hÆf
 
uötToHÆf
 (
ui
);

99 
hÆf
 
ÊﬂtToHÆf
 (
f
);

	@shared/openexr-mac/include/OpenEXR/ImfDoubleAttribute.h

37 #i‚de‡
INCLUDED_IMF_DOUBLE_ATTRIBUTE_H


38 
	#INCLUDED_IMF_DOUBLE_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

49 
«me•a˚
 
	gImf
 {

52 
	gTy≥dAâribuã
<> 
	tDoubÀAâribuã
;

53 
	gãm∂©e
 <> c⁄° *
	gDoubÀAâribuã
::
°©icTy≥Name
 ();

59 #ifde‡
__MWERKS__


60 
	~<ImfDoubÀAâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfEnvmap.h

36 #i‚de‡
INCLUDED_IMF_ENVMAP_H


37 
	#INCLUDED_IMF_ENVMAP_H


	)

75 
	~"Im©hBox.h
"

77 
«me•a˚
 
	gImf
 {

83 
	eEnvm≠


85 
	gENVMAP_LATLONG
 = 0,

86 
	gENVMAP_CUBE
 = 1,

88 
	gNUM_ENVMAPTYPES


111 
«me•a˚
 
	gL©L⁄gM≠


119 
	gIm©h
::
V2f
 
œtL⁄g
 (c⁄° 
Im©h
::
V3f
 &
dúe˘i⁄
);

128 
	gIm©h
::
V2f
 
œtL⁄g
 (c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

129 c⁄° 
Im©h
::
V2f
 &
pixñPosôi⁄
);

137 
	gIm©h
::
V2f
 
pixñPosôi⁄
 (c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

138 c⁄° 
Im©h
::
V2f
 &
œtL⁄g
);

147 
	gIm©h
::
V2f
 
pixñPosôi⁄
 (c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

148 c⁄° 
Im©h
::
V3f
 &
dúe˘i⁄
);

156 
	gIm©h
::
V3f
 
dúe˘i⁄
 (c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

157 c⁄° 
Im©h
::
V2f
 &
pixñPosôi⁄
);

247 
	eCubeM≠Fa˚


249 
	gCUBEFACE_POS_X
,

250 
	gCUBEFACE_NEG_X
,

251 
	gCUBEFACE_POS_Y
,

252 
	gCUBEFACE_NEG_Y
,

253 
	gCUBEFACE_POS_Z
,

254 
	gCUBEFACE_NEG_Z
,

257 
«me•a˚
 
	gCubeM≠


263 
sizeOfFa˚
 (c⁄° 
Im©h
::
Box2i
 &
d©aWödow
);

271 
	gIm©h
::
Box2i
 
d©aWödowF‹Fa˚
 (
CubeM≠Fa˚
 
Á˚
,

272 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
);

282 
	gIm©h
::
V2f
 
pixñPosôi⁄
 (
CubeM≠Fa˚
 
Á˚
,

283 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

284 
Im©h
::
V2f
 
posôi⁄InFa˚
);

303 
Á˚AndPixñPosôi⁄
 (c⁄° 
Im©h
::
V3f
 &
dúe˘i⁄
,

304 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

305 
CubeM≠Fa˚
 &
Á˚
,

306 
Im©h
::
V2f
 &
posôi⁄InFa˚
);

314 
	gIm©h
::
V3f
 
dúe˘i⁄
 (
CubeM≠Fa˚
 
Á˚
,

315 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

316 c⁄° 
Im©h
::
V2f
 &
posôi⁄InFa˚
);

	@shared/openexr-mac/include/OpenEXR/ImfEnvmapAttribute.h

35 #i‚de‡
INCLUDED_IMF_ENVMAP_ATTRIBUTE_H


36 
	#INCLUDED_IMF_ENVMAP_ATTRIBUTE_H


	)

45 
	~<ImfAâribuã.h
>

46 
	~<ImfEnvm≠.h
>

49 
«me•a˚
 
	gImf
 {

52 
	gTy≥dAâribuã
<
	tEnvm≠
> 
	tEnvm≠Aâribuã
;

53 
	gãm∂©e
 <> c⁄° *
	gEnvm≠Aâribuã
::
°©icTy≥Name
 ();

54 
	gãm∂©e
 <> 
	gEnvm≠Aâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

55 
	gãm∂©e
 <> 
	gEnvm≠Aâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

61 #ifde‡
__MWERKS__


62 
	~<ImfEnvm≠Aâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfFloatAttribute.h

37 #i‚de‡
INCLUDED_IMF_FLOAT_ATTRIBUTE_H


38 
	#INCLUDED_IMF_FLOAT_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

49 
«me•a˚
 
	gImf
 {

52 
	gTy≥dAâribuã
<> 
	tFlﬂtAâribuã
;

53 
	gãm∂©e
 <> c⁄° *
	gFlﬂtAâribuã
::
°©icTy≥Name
 ();

59 #ifde‡
__MWERKS__


60 
	~<ImfFlﬂtAâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h

37 #i‚de‡
INCLUDED_IMF_FRAME_BUFFER_H


38 
	#INCLUDED_IMF_FRAME_BUFFER_H


	)

47 
	~<ImfName.h
>

48 
	~<ImfPixñTy≥.h
>

49 
	~<m≠
>

52 
«me•a˚
 
	gImf
 {

64 
	sSli˚


70 
PixñTy≥
 
	gty≥
;

92 * 
	gba£
;

93 
size_t
 
	gxSåide
;

94 
size_t
 
	gySåide
;

105 
	gxSam∂ög
;

106 
	gySam∂ög
;

114 
	gfûlVÆue
;

129 
boﬁ
 
	gxTûeCo‹ds
;

130 
boﬁ
 
	gyTûeCo‹ds
;

137 
Sli˚
 (
PixñTy≥
 
ty≥
 = 
HALF
,

138 * 
ba£
 = 0,

139 
size_t
 
xSåide
 = 0,

140 
size_t
 
ySåide
 = 0,

141 
xSam∂ög
 = 1,

142 
ySam∂ög
 = 1,

143 
fûlVÆue
 = 0.0,

144 
boﬁ
 
xTûeCo‹ds
 = 
Ál£
,

145 
boﬁ
 
yTûeCo‹ds
 = 
Ál£
);

149 ˛as†
	cFømeBuf„r


151 
	gpublic
:

157 
ö£π
 (c⁄° 
«me
[],

158 c⁄° 
Sli˚
 &
¶i˚
);

172 
	gSli˚
 & 
	g›î©‹
 [] (c⁄° 
	g«me
[]);

173 c⁄° 
	gSli˚
 & 
	g›î©‹
 [] (c⁄° 
	g«me
[]) const;

175 
Sli˚
 * 
födSli˚
 (c⁄° 
«me
[]);

176 c⁄° 
Sli˚
 * 
födSli˚
 (c⁄° 
«me
[]) const;

183 
	g°d
::
	tm≠
 <
	tName
, 
	tSli˚
> 
	tSli˚M≠
;

185 
˛ass
 
	gIãøt‹
;

186 
˛ass
 
	gC⁄°Iãøt‹
;

188 
Iãøt‹
 
begö
 ();

189 
C⁄°Iãøt‹
 
begö
 () const;

190 
Iãøt‹
 
íd
 ();

191 
C⁄°Iãøt‹
 
íd
 () const;

192 
Iãøt‹
 
föd
 (c⁄° 
«me
[]);

193 
C⁄°Iãøt‹
 
föd
 (c⁄° 
«me
[]) const;

195 
	g¥iv©e
:

197 
Sli˚M≠
 
_m≠
;

205 ˛as†
	cFømeBuf„r
::
Iãøt‹


207 
public
:

209 
Iãøt‹
 ();

210 
Iãøt‹
 (c⁄° 
FømeBuf„r
::
Sli˚M≠
::
ôî©‹
 &
i
);

212 
	gIãøt‹
 & 
	g›î©‹
 ++ ();

213 
Iãøt‹
 
	g›î©‹
 ++ ();

215 c⁄° * 
«me
 () const;

216 
	gSli˚
 & 
¶i˚
 () const;

218 
	g¥iv©e
:

220 
‰õnd
 
˛ass
 
FømeBuf„r
::
C⁄°Iãøt‹
;

222 
	gFømeBuf„r
::
Sli˚M≠
::
ôî©‹
 
_i
;

226 ˛as†
	cFømeBuf„r
::
C⁄°Iãøt‹


228 
public
:

230 
C⁄°Iãøt‹
 ();

231 
C⁄°Iãøt‹
 (c⁄° 
FømeBuf„r
::
Sli˚M≠
::
c⁄°_ôî©‹
 &
i
);

232 
C⁄°Iãøt‹
 (c⁄° 
FømeBuf„r
::
Iãøt‹
 &
Ÿhî
);

234 
	gC⁄°Iãøt‹
 & 
	g›î©‹
 ++ ();

235 
C⁄°Iãøt‹
 
	g›î©‹
 ++ ();

237 c⁄° * 
«me
 () const;

238 c⁄° 
	gSli˚
 & 
¶i˚
 () const;

240 
	g¥iv©e
:

242 
‰õnd
 
boﬁ
 
›î©‹
 =(c⁄° 
C⁄°Iãøt‹
 &, c⁄° 
	gC⁄°Iãøt‹
 &);

243 
‰õnd
 
boﬁ
 
	g›î©‹
 !(c⁄° 
C⁄°Iãøt‹
 &, c⁄° 
	gC⁄°Iãøt‹
 &);

245 
	gFømeBuf„r
::
Sli˚M≠
::
c⁄°_ôî©‹
 
_i
;

253 
ölöe


254 
	gFømeBuf„r
::
Iãøt‹
::
	$Iãøt‹
 (): 
	$_i
()

257 
	}
}

260 
ölöe


261 
FømeBuf„r
::
Iãøt‹
::Iãøt‹ (c⁄° FømeBuf„r::
Sli˚M≠
::
ôî©‹
 &
i
):

262 
	$_i
 (
i
)

265 
	}
}

268 
ölöe
 
FømeBuf„r
::
Iãøt‹
 &

269 
FømeBuf„r
::
Iãøt‹
::
›î©‹
 ++ ()

271 ++
_i
;

272  *
	gthis
;

276 
ölöe
 
	gFømeBuf„r
::
Iãøt‹


277 
FømeBuf„r
::
Iãøt‹
::
›î©‹
 ++ ()

279 
Iãøt‹
 
tmp
 = *
this
;

280 ++
	g_i
;

281  
	gtmp
;

285 
ölöe
 const *

286 
	gFømeBuf„r
::
Iãøt‹
::
	$«me
 () const

288  *
_i
->
fú°
;

289 
	}
}

292 
ölöe
 
	gSli˚
 &

293 
	gFømeBuf„r
::
Iãøt‹
::
	$¶i˚
 () const

295  
_i
->
£c⁄d
;

296 
	}
}

299 
ölöe


300 
	gFømeBuf„r
::
C⁄°Iãøt‹
::
	$C⁄°Iãøt‹
 (): 
	$_i
()

303 
	}
}

305 
ölöe


306 
FømeBuf„r
::
C⁄°Iãøt‹
::ConstIterator

307 (c⁄° 
FømeBuf„r
::
Sli˚M≠
::
c⁄°_ôî©‹
 &
i
): 
	$_i
 (
i
)

310 
	}
}

313 
ölöe


314 
FømeBuf„r
::
C⁄°Iãøt‹
::C⁄°Iãøt‹ (c⁄° FømeBuf„r::
Iãøt‹
 &
Ÿhî
):

315 
	$_i
 (
Ÿhî
.
_i
)

318 
	}
}

320 
ölöe
 
FømeBuf„r
::
C⁄°Iãøt‹
 &

321 
FømeBuf„r
::
C⁄°Iãøt‹
::
›î©‹
 ++ ()

323 ++
_i
;

324  *
	gthis
;

328 
ölöe
 
	gFømeBuf„r
::
C⁄°Iãøt‹


329 
FømeBuf„r
::
C⁄°Iãøt‹
::
›î©‹
 ++ ()

331 
C⁄°Iãøt‹
 
tmp
 = *
this
;

332 ++
	g_i
;

333  
	gtmp
;

337 
ölöe
 const *

338 
	gFømeBuf„r
::
C⁄°Iãøt‹
::
	$«me
 () const

340  *
_i
->
fú°
;

341 
	}
}

343 
ölöe
 c⁄° 
	gSli˚
 &

344 
	gFømeBuf„r
::
C⁄°Iãøt‹
::
	$¶i˚
 () const

346  
_i
->
£c⁄d
;

347 
	}
}

350 
ölöe
 
boﬁ


351 
	g›î©‹
 =(c⁄° 
FømeBuf„r
::
C⁄°Iãøt‹
 &
x
,

352 c⁄° 
	gFømeBuf„r
::
C⁄°Iãøt‹
 &
y
)

354  
x
.
_i
 =
y
._i;

358 
ölöe
 
boﬁ


359 
	g›î©‹
 !(c⁄° 
FømeBuf„r
::
C⁄°Iãøt‹
 &
x
,

360 c⁄° 
	gFømeBuf„r
::
C⁄°Iãøt‹
 &
y
)

362  !(
x
 =
y
);

	@shared/openexr-mac/include/OpenEXR/ImfHeader.h

37 #i‚de‡
INCLUDED_IMF_HEADER_H


38 
	#INCLUDED_IMF_HEADER_H


	)

46 
	~<ImfLöeOrdî.h
>

47 
	~<ImfCom¥essi⁄.h
>

48 
	~<ImfName.h
>

49 
	~<ImfTûeDes¸ùti⁄.h
>

50 
	~<ImfI¡64.h
>

51 
	~"Im©hVec.h
"

52 
	~"Im©hBox.h
"

53 
	~"IexBa£Exc.h
"

54 
	~<m≠
>

55 
	~<iosfwd
>

57 
«me•a˚
 
	gImf
 {

60 
˛ass
 
	gAâribuã
;

61 
˛ass
 
	gCh™√lLi°
;

62 
˛ass
 
	gISåóm
;

63 
˛ass
 
	gOSåóm
;

64 
˛ass
 
	gPªvõwImage
;

67 ˛as†
	cHódî


69 
	gpublic
:

76 
Hódî
 (
width
 = 64,

77 
height
 = 64,

78 
pixñA•e˘R©io
 = 1,

79 c⁄° 
Im©h
::
V2f
 &
s¸ìnWödowCíãr
 = Imath::V2f (0, 0),

80 
s¸ìnWödowWidth
 = 1,

81 
LöeOrdî
 
löeOrdî
 = 
INCREASING_Y
,

82 
Com¥essi⁄
 = 
ZIP_COMPRESSION
);

90 
Hódî
 (
width
,

91 
height
,

92 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

93 
pixñA•e˘R©io
 = 1,

94 c⁄° 
Im©h
::
V2f
 &
s¸ìnWödowCíãr
 = Imath::V2f (0, 0),

95 
s¸ìnWödowWidth
 = 1,

96 
LöeOrdî
 
löeOrdî
 = 
INCREASING_Y
,

97 
Com¥essi⁄
 = 
ZIP_COMPRESSION
);

105 
Hódî
 (c⁄° 
Im©h
::
Box2i
 &
di•œyWödow
,

106 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
,

107 
pixñA•e˘R©io
 = 1,

108 c⁄° 
Im©h
::
V2f
 &
s¸ìnWödowCíãr
 = Imath::V2f (0, 0),

109 
s¸ìnWödowWidth
 = 1,

110 
LöeOrdî
 
löeOrdî
 = 
INCREASING_Y
,

111 
Com¥essi⁄
 = 
ZIP_COMPRESSION
);

118 
Hódî
 (c⁄° Hódî &
Ÿhî
);

125 ~
Hódî
 ();

132 
	gHódî
 & 
	g›î©‹
 = (c⁄° 
Hódî
 &
Ÿhî
);

153 
ö£π
 (c⁄° 
«me
[],

154 c⁄° 
Aâribuã
 &
©åibuã
);

176 
	gAâribuã
 & 
	g›î©‹
 [] (c⁄° 
	g«me
[]);

177 c⁄° 
	gAâribuã
 & 
	g›î©‹
 [] (c⁄° 
	g«me
[]) const;

179 
	gãm∂©e
 <
˛ass
 
	gT
> T& 
ty≥dAâribuã
 (c⁄° 
«me
[]);

180 
	gãm∂©e
 <
˛ass
 
	gT
> c⁄° T& 
ty≥dAâribuã
 (c⁄° 
«me
[]) const;

182 
	gãm∂©e
 <
˛ass
 
	gT
> 
T
* 
födTy≥dAâribuã
 (c⁄° 
«me
[]);

183 
	gãm∂©e
 <
˛ass
 
	gT
> c⁄° 
T
* 
födTy≥dAâribuã
 (c⁄° 
«me
[]) const;

190 
	g°d
::
	tm≠
 <
	tName
, 
	tAâribuã
 *> 
	tAâribuãM≠
;

192 
˛ass
 
	gIãøt‹
;

193 
˛ass
 
	gC⁄°Iãøt‹
;

195 
Iãøt‹
 
begö
 ();

196 
C⁄°Iãøt‹
 
begö
 () const;

197 
Iãøt‹
 
íd
 ();

198 
C⁄°Iãøt‹
 
íd
 () const;

199 
Iãøt‹
 
föd
 (c⁄° 
«me
[]);

200 
C⁄°Iãøt‹
 
föd
 (c⁄° 
«me
[]) const;

207 
	gIm©h
::
Box2i
 & 
di•œyWödow
 ();

208 c⁄° 
	gIm©h
::
Box2i
 & 
di•œyWödow
 () const;

210 
	gIm©h
::
Box2i
 & 
d©aWödow
 ();

211 c⁄° 
	gIm©h
::
Box2i
 & 
d©aWödow
 () const;

213 & 
pixñA•e˘R©io
 ();

214 c⁄° & 
pixñA•e˘R©io
 () const;

216 
	gIm©h
::
V2f
 & 
s¸ìnWödowCíãr
 ();

217 c⁄° 
	gIm©h
::
V2f
 & 
s¸ìnWödowCíãr
 () const;

219 & 
s¸ìnWödowWidth
 ();

220 c⁄° & 
s¸ìnWödowWidth
 () const;

222 
	gCh™√lLi°
 & 
ch™√ls
 ();

223 c⁄° 
	gCh™√lLi°
 & 
ch™√ls
 () const;

225 
	gLöeOrdî
 & 
löeOrdî
 ();

226 c⁄° 
	gLöeOrdî
 & 
löeOrdî
 () const;

228 
	gCom¥essi⁄
 & 
com¥essi⁄
 ();

229 c⁄° 
	gCom¥essi⁄
 & 
com¥essi⁄
 () const;

253 
£tTûeDes¸ùti⁄
 (c⁄° 
TûeDes¸ùti⁄
 & 
td
);

255 
	gTûeDes¸ùti⁄
 & 
tûeDes¸ùti⁄
 ();

256 c⁄° 
	gTûeDes¸ùti⁄
 & 
tûeDes¸ùti⁄
 () const;

258 
boﬁ
 
hasTûeDes¸ùti⁄
() const;

282 
£tPªvõwImage
 (c⁄° 
PªvõwImage
 &
p
);

284 
	gPªvõwImage
 & 
¥evõwImage
 ();

285 c⁄° 
	gPªvõwImage
 & 
¥evõwImage
 () const;

287 
boﬁ
 
hasPªvõwImage
 () const;

299 
ßnôyCheck
 (
boﬁ
 
isTûed
 = 
Ál£
) const;

313 
I¡64
 
wrôeTo
 (
OSåóm
 &
os
,

314 
boﬁ
 
isTûed
 = 
Ál£
) const;

316 
ªadFrom
 (
ISåóm
 &
is
, &
vîsi⁄
);

318 
	g¥iv©e
:

320 
AâribuãM≠
 
_m≠
;

328 ˛as†
	cHódî
::
Iãøt‹


330 
public
:

332 
Iãøt‹
 ();

333 
Iãøt‹
 (c⁄° 
Hódî
::
AâribuãM≠
::
ôî©‹
 &
i
);

335 
	gIãøt‹
 & 
	g›î©‹
 ++ ();

336 
Iãøt‹
 
	g›î©‹
 ++ ();

338 c⁄° * 
«me
 () const;

339 
	gAâribuã
 & 
©åibuã
 () const;

341 
	g¥iv©e
:

343 
‰õnd
 
˛ass
 
Hódî
::
C⁄°Iãøt‹
;

345 
	gHódî
::
AâribuãM≠
::
ôî©‹
 
_i
;

349 ˛as†
	cHódî
::
C⁄°Iãøt‹


351 
public
:

353 
C⁄°Iãøt‹
 ();

354 
C⁄°Iãøt‹
 (c⁄° 
Hódî
::
AâribuãM≠
::
c⁄°_ôî©‹
 &
i
);

355 
C⁄°Iãøt‹
 (c⁄° 
Hódî
::
Iãøt‹
 &
Ÿhî
);

357 
	gC⁄°Iãøt‹
 & 
	g›î©‹
 ++ ();

358 
C⁄°Iãøt‹
 
	g›î©‹
 ++ ();

360 c⁄° * 
«me
 () const;

361 c⁄° 
	gAâribuã
 & 
©åibuã
 () const;

363 
	g¥iv©e
:

365 
‰õnd
 
boﬁ
 
›î©‹
 =(c⁄° 
C⁄°Iãøt‹
 &, c⁄° 
	gC⁄°Iãøt‹
 &);

366 
‰õnd
 
boﬁ
 
	g›î©‹
 !(c⁄° 
C⁄°Iãøt‹
 &, c⁄° 
	gC⁄°Iãøt‹
 &);

368 
	gHódî
::
AâribuãM≠
::
c⁄°_ôî©‹
 
_i
;

386 
°©icInôülize
 ();

394 
ölöe


395 
	gHódî
::
Iãøt‹
::
	$Iãøt‹
 (): 
	$_i
()

398 
	}
}

401 
ölöe


402 
Hódî
::
Iãøt‹
::Iãøt‹ (c⁄° Hódî::
AâribuãM≠
::
ôî©‹
 &
i
): 
	$_i
 (
i
)

405 
	}
}

408 
ölöe
 
Hódî
::
Iãøt‹
 &

409 
Hódî
::
Iãøt‹
::
›î©‹
 ++ ()

411 ++
_i
;

412  *
	gthis
;

416 
ölöe
 
	gHódî
::
Iãøt‹


417 
Hódî
::
Iãøt‹
::
›î©‹
 ++ ()

419 
Iãøt‹
 
tmp
 = *
this
;

420 ++
	g_i
;

421  
	gtmp
;

425 
ölöe
 const *

426 
	gHódî
::
Iãøt‹
::
	$«me
 () const

428  *
_i
->
fú°
;

429 
	}
}

432 
ölöe
 
	gAâribuã
 &

433 
	gHódî
::
Iãøt‹
::
	$©åibuã
 () const

435  *
_i
->
£c⁄d
;

436 
	}
}

439 
ölöe


440 
	gHódî
::
C⁄°Iãøt‹
::
	$C⁄°Iãøt‹
 (): 
	$_i
()

443 
	}
}

445 
ölöe


446 
Hódî
::
C⁄°Iãøt‹
::ConstIterator

447 (c⁄° 
Hódî
::
AâribuãM≠
::
c⁄°_ôî©‹
 &
i
): 
	$_i
 (
i
)

450 
	}
}

453 
ölöe


454 
Hódî
::
C⁄°Iãøt‹
::C⁄°Iãøt‹ (c⁄° Hódî::
Iãøt‹
 &
Ÿhî
):

455 
	$_i
 (
Ÿhî
.
_i
)

458 
	}
}

460 
ölöe
 
Hódî
::
C⁄°Iãøt‹
 &

461 
Hódî
::
C⁄°Iãøt‹
::
›î©‹
 ++ ()

463 ++
_i
;

464  *
	gthis
;

468 
ölöe
 
	gHódî
::
C⁄°Iãøt‹


469 
Hódî
::
C⁄°Iãøt‹
::
›î©‹
 ++ ()

471 
C⁄°Iãøt‹
 
tmp
 = *
this
;

472 ++
	g_i
;

473  
	gtmp
;

477 
ölöe
 const *

478 
	gHódî
::
C⁄°Iãøt‹
::
	$«me
 () const

480  *
_i
->
fú°
;

481 
	}
}

484 
ölöe
 c⁄° 
	gAâribuã
 &

485 
	gHódî
::
C⁄°Iãøt‹
::
	$©åibuã
 () const

487  *
_i
->
£c⁄d
;

488 
	}
}

491 
ölöe
 
boﬁ


492 
	g›î©‹
 =(c⁄° 
Hódî
::
C⁄°Iãøt‹
 &
x
, c⁄° 
	gHódî
::C⁄°Iãøt‹ &
y
)

494  
x
.
_i
 =
y
._i;

498 
ölöe
 
boﬁ


499 
	g›î©‹
 !(c⁄° 
Hódî
::
C⁄°Iãøt‹
 &
x
, c⁄° 
	gHódî
::C⁄°Iãøt‹ &
y
)

501  !(
x
 =
y
);

509 
	gãm∂©e
 <
˛ass
 
	gT
>

510 
	gT
 &

511 
	gHódî
::
	$ty≥dAâribuã
 (c⁄° 
«me
[])

513 
Aâribuã
 *
©å
 = &(*
this
)[
«me
];

514 
T
 *
èâr
 = 
dy«mic_ˇ°
 <T*> (
©å
);

516 i‡(
èâr
 == 0)

517 
throw
 
Iex
::
	`Ty≥Exc
 ("UnexpectedáttributeÅype.");

519  *
èâr
;

520 
	}
}

523 
	gãm∂©e
 <
˛ass
 
	gT
>

524 c⁄° 
	gT
 &

525 
	gHódî
::
	$ty≥dAâribuã
 (c⁄° 
«me
[]) const

527 c⁄° 
Aâribuã
 *
©å
 = &(*
this
)[
«me
];

528 c⁄° 
T
 *
èâr
 = 
dy«mic_ˇ°
 <c⁄° T*> (
©å
);

530 i‡(
èâr
 == 0)

531 
throw
 
Iex
::
	`Ty≥Exc
 ("UnexpectedáttributeÅype.");

533  *
èâr
;

534 
	}
}

537 
	gãm∂©e
 <
˛ass
 
	gT
>

538 
T
 *

539 
	gHódî
::
	$födTy≥dAâribuã
 (c⁄° 
«me
[])

541 
AâribuãM≠
::
ôî©‹
 
i
 = 
_m≠
.
	`föd
 (
«me
);

542  (
i
 =
_m≠
.
	`íd
())? 0: 
dy«mic_ˇ°
 <
T
*> (i->
£c⁄d
);

543 
	}
}

546 
	gãm∂©e
 <
˛ass
 
	gT
>

547 c⁄° 
T
 *

548 
	gHódî
::
	$födTy≥dAâribuã
 (c⁄° 
«me
[]) const

550 
AâribuãM≠
::
c⁄°_ôî©‹
 
i
 = 
_m≠
.
	`föd
 (
«me
);

551  (
i
 =
_m≠
.
	`íd
())? 0: 
dy«mic_ˇ°
 <c⁄° 
T
*> (i->
£c⁄d
);

552 
	}
}

	@shared/openexr-mac/include/OpenEXR/ImfHuf.h

37 #i‚de‡
INCLUDED_IMF_HUF_H


38 
	#INCLUDED_IMF_HUF_H


	)

61 
«me•a˚
 
	gImf
 {

65 
hufCom¥ess
 (c⁄° 
øw
[ ],

66 
nRaw
,

67 
com¥es£d
[ ]);

71 
hufUncom¥ess
 (c⁄° 
com¥es£d
[ ],

72 
nCom¥es£d
,

73 
øw
[ ],

74 
nRaw
);

	@shared/openexr-mac/include/OpenEXR/ImfIO.h

36 #i‚de‡
INCLUDED_IMF_IO_H


37 
	#INCLUDED_IMF_IO_H


	)

45 
	~<ImfI¡64.h
>

46 
	~<°rög
>

48 
«me•a˚
 
	gImf
 {

54 ˛as†
	cISåóm


56 
	gpublic
:

62 
vútuÆ
 ~
ISåóm
 ();

74 
vútuÆ
 
boﬁ
 
isMem‹yM≠≥d
 () const;

87 
vútuÆ
 
boﬁ
 
ªad
 (
c
[ ], 
n
) = 0;

101 
vútuÆ
 * 
ªadMem‹yM≠≥d
 (
n
);

110 
vútuÆ
 
I¡64
 
ãŒg
 () = 0;

118 
vútuÆ
 
£ekg
 (
I¡64
 
pos
) = 0;

125 
vútuÆ
 
˛ór
 ();

132 c⁄° * 
fûeName
 () const;

134 
	g¥Ÿe˘ed
:

136 
ISåóm
 (c⁄° 
fûeName
[]);

138 
	g¥iv©e
:

140 
ISåóm
 (const IStream &);

141 
	gISåóm
 & 
	g›î©‹
 = (c⁄° 
ISåóm
 &);

143 
	g°d
::
°rög
 
_fûeName
;

151 ˛as†
	cOSåóm


153 
	gpublic
:

159 
vútuÆ
 ~
OSåóm
 ();

170 
vútuÆ
 
wrôe
 (c⁄° 
c
[ ], 
n
) = 0;

180 
vútuÆ
 
I¡64
 
ãŒp
 () = 0;

188 
vútuÆ
 
£ekp
 (
I¡64
 
pos
) = 0;

195 c⁄° * 
fûeName
 () const;

197 
	g¥Ÿe˘ed
:

199 
OSåóm
 (c⁄° 
fûeName
[]);

201 
	g¥iv©e
:

203 
OSåóm
 (const OStream &);

204 
	gOSåóm
 & 
	g›î©‹
 = (c⁄° 
OSåóm
 &);

206 
	g°d
::
°rög
 
_fûeName
;

214 
	sSåómIO


217 
wrôeCh¨s
 (
OSåóm
 &
os
, c⁄° 
c
[ ], 
n
)

219 
	gos
.
wrôe
 (
c
, 
n
);

222 
boﬁ


223 
ªadCh¨s
 (
ISåóm
 &
is
, 
c
[ ], 
n
)

225  
	gis
.
ªad
 (
c
, 
n
);

230 
	sCh¨PåIO


233 
wrôeCh¨s
 (*&
›
, c⁄° 
c
[ ], 
n
)

235 
	gn
--)

236 *
	g›
++ = *
c
++;

239 
boﬁ


240 
ªadCh¨s
 (c⁄° *&
ù
, 
c
[ ], 
n
)

242 
	gn
--)

243 *
	gc
++ = *
ù
++;

245  
	gåue
;

	@shared/openexr-mac/include/OpenEXR/ImfInputFile.h

36 #i‚de‡
INCLUDED_IMF_INPUT_FILE_H


37 
	#INCLUDED_IMF_INPUT_FILE_H


	)

46 
	~<ImfHódî.h
>

47 
	~<ImfFømeBuf„r.h
>

48 
	~<ImfTûedOuçutFûe.h
>

49 
	~<°rög
>

50 
	~<f°ªam
>

51 
	~<ImfThªadög.h
>

53 
«me•a˚
 
	gImf
 {

55 
˛ass
 
	gTûedI≈utFûe
;

56 
˛ass
 
	gSˇnLöeI≈utFûe
;

59 ˛as†
	cI≈utFûe


61 
	gpublic
:

71 
I≈utFûe
 (c⁄° 
fûeName
[], 
numThªads
 = 
globÆThªadCou¡
());

83 
I≈utFûe
 (
ISåóm
 &
is
, 
numThªads
 = 
globÆThªadCou¡
());

90 
	gvútuÆ
 ~
I≈utFûe
 ();

97 c⁄° * 
fûeName
 () const;

104 c⁄° 
	gHódî
 & 
hódî
 () const;

111 
vîsi⁄
 () const;

125 
£tFømeBuf„r
 (c⁄° 
FømeBuf„r
 &
‰ameBuf„r
);

132 c⁄° 
	gFømeBuf„r
 & 
‰ameBuf„r
 () const;

144 
boﬁ
 
isCom∂ëe
 () const;

166 
ªadPixñs
 (
sˇnLöe1
, 
sˇnLöe2
);

167 
ªadPixñs
 (
sˇnLöe
);

176 
øwPixñD©a
 (
fú°SˇnLöe
,

177 c⁄° *&
pixñD©a
,

178 &
pixñD©aSize
);

186 
øwTûeD©a
 (&
dx
, &
dy
,

187 &
lx
, &
ly
,

188 c⁄° *&
pixñD©a
,

189 &
pixñD©aSize
);

191 
	gD©a
;

193 
	g¥iv©e
:

195 
I≈utFûe
 (const InputFile &);

196 
	gI≈utFûe
 & 
	g›î©‹
 = (c⁄° 
I≈utFûe
 &);

198 
öôülize
 ();

199 
TûedI≈utFûe
 * 
tFûe
 ();

201 
‰õnd
 
	gTûedOuçutFûe
::
c›yPixñs
 (
I≈utFûe
 &);

203 
D©a
 * 
	g_d©a
;

	@shared/openexr-mac/include/OpenEXR/ImfInt64.h

36 #i‚de‡
INCLUDED_IMF_INT64_H


37 
	#INCLUDED_IMF_INT64_H


	)

45 
	~<limôs.h
>

47 
«me•a˚
 
	gImf
 {

50 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& 
_MSC_VER
 >= 1300

51 
	t__öt64
 
	tI¡64
;

52 #ñi‡
ULONG_MAX
 == 18446744073709551615LU

53 
	tI¡64
;

55 
	tI¡64
;

	@shared/openexr-mac/include/OpenEXR/ImfIntAttribute.h

37 #i‚de‡
INCLUDED_IMF_INT_ATTRIBUTE_H


38 
	#INCLUDED_IMF_INT_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

49 
«me•a˚
 
	gImf
 {

52 
	gTy≥dAâribuã
<> 
	tI¡Aâribuã
;

53 
	gãm∂©e
 <> c⁄° *
	gI¡Aâribuã
::
°©icTy≥Name
 ();

59 #ifde‡
__MWERKS__


60 
	~<ImfI¡Aâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfKeyCode.h

36 #i‚de‡
INCLUDED_IMF_KEY_CODE_H


37 
	#INCLUDED_IMF_KEY_CODE_H


	)

99 
«me•a˚
 
	gImf
 {

102 ˛as†
	cKeyCode


104 
	gpublic
:

110 
KeyCode
 (
fûmMfcCode
 = 0,

111 
fûmTy≥
 = 0,

112 
¥efix
 = 0,

113 
cou¡
 = 0,

114 
≥rfOff£t
 = 0,

115 
≥rfsPîFøme
 = 4,

116 
≥rfsPîCou¡
 = 64);

118 
KeyCode
 (c⁄° KeyCodê&
Ÿhî
);

119 
	gKeyCode
 & 
	g›î©‹
 = (c⁄° 
KeyCode
 &
Ÿhî
);

126 
fûmMfcCode
 () const;

127 
£tFûmMfcCode
 (
fûmMfcCode
);

129 
fûmTy≥
 () const;

130 
£tFûmTy≥
 (
fûmTy≥
);

132 
¥efix
 () const;

133 
£tPªfix
 (
¥efix
);

135 
cou¡
 () const;

136 
£tCou¡
 (
cou¡
);

138 
≥rfOff£t
 () const;

139 
£tPîfOff£t
 (
≥rfOff£t
);

141 
≥rfsPîFøme
 () const;

142 
£tPîfsPîFøme
 (
≥rfsPîFøme
);

144 
≥rfsPîCou¡
 () const;

145 
£tPîfsPîCou¡
 (
≥rfsPîCou¡
);

147 
	g¥iv©e
:

149 
_fûmMfcCode
;

150 
	g_fûmTy≥
;

151 
	g_¥efix
;

152 
	g_cou¡
;

153 
	g_≥rfOff£t
;

154 
	g_≥rfsPîFøme
;

155 
	g_≥rfsPîCou¡
;

	@shared/openexr-mac/include/OpenEXR/ImfKeyCodeAttribute.h

36 #i‚de‡
INCLUDED_IMF_KEY_CODE_ATTRIBUTE_H


37 
	#INCLUDED_IMF_KEY_CODE_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

47 
	~<ImfKeyCode.h
>

50 
«me•a˚
 
	gImf
 {

53 
	gTy≥dAâribuã
<
	tKeyCode
> 
	tKeyCodeAâribuã
;

55 
	gãm∂©e
 <>

56 c⁄° *
	gKeyCodeAâribuã
::
°©icTy≥Name
 ();

58 
	gãm∂©e
 <>

59 
	gKeyCodeAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

61 
	gãm∂©e
 <>

62 
	gKeyCodeAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

68 #ifde‡
__MWERKS__


69 
	~<ImfKeyCodeAâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfLineOrder.h

37 #i‚de‡
INCLUDED_IMF_LINE_ORDER_H


38 
	#INCLUDED_IMF_LINE_ORDER_H


	)

46 
«me•a˚
 
	gImf
 {

49 
	eLöeOrdî


51 
	gINCREASING_Y
 = 0,

53 
	gDECREASING_Y
 = 1,

55 
	gRANDOM_Y
 = 2,

58 
	gNUM_LINEORDERS


	@shared/openexr-mac/include/OpenEXR/ImfLineOrderAttribute.h

37 #i‚de‡
INCLUDED_IMF_LINE_ORDER_ATTRIBUTE_H


38 
	#INCLUDED_IMF_LINE_ORDER_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

47 
	~<ImfLöeOrdî.h
>

50 
«me•a˚
 
	gImf
 {

53 
	gTy≥dAâribuã
<
	tLöeOrdî
> 
	tLöeOrdîAâribuã
;

54 
	gãm∂©e
 <> c⁄° *
	gLöeOrdîAâribuã
::
°©icTy≥Name
 ();

55 
	gãm∂©e
 <> 
	gLöeOrdîAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

56 
	gãm∂©e
 <> 
	gLöeOrdîAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

62 #ifde‡
__MWERKS__


63 
	~<ImfLöeOrdîAâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfLut.h

37 #i‚de‡
INCLUDED_IMF_LUT_H


38 
	#INCLUDED_IMF_LUT_H


	)

48 
	~<ImfRgbaFûe.h
>

49 
	~<ImfFømeBuf„r.h
>

50 
	~"Im©hBox.h
"

51 
	~"hÆfFun˘i⁄.h
"

53 
«me•a˚
 
	gImf
 {

59 ˛as†
	cHÆfLut


61 
	gpublic
:

67 
ãm∂©e
 <
˛ass
 
Fun˘i⁄
>

68 
HÆfLut
 (
Fun˘i⁄
 
f
);

75 
≠∂y
 (
hÆf
 *
d©a
,

76 
nD©a
,

77 
°ride
 = 1) const;

84 
≠∂y
 (c⁄° 
Sli˚
 &
d©a
,

85 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
) const;

87 
	g¥iv©e
:

89 
hÆfFun˘i⁄
 <
hÆf
> 
_lut
;

97 ˛as†
	cRgbaLut


99 
	gpublic
:

105 
ãm∂©e
 <
˛ass
 
Fun˘i⁄
>

106 
RgbaLut
 (
Fun˘i⁄
 
f
, 
RgbaCh™√ls
 
chn
 = 
WRITE_RGB
);

113 
≠∂y
 (
Rgba
 *
d©a
,

114 
nD©a
,

115 
°ride
 = 1) const;

122 
≠∂y
 (
Rgba
 *
ba£
,

123 
xSåide
,

124 
ySåide
,

125 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
) const;

127 
	g¥iv©e
:

129 
hÆfFun˘i⁄
 <
hÆf
> 
_lut
;

130 
RgbaCh™√ls
 
	g_chn
;

142 
hÆf
 
round12log
 (hÆ‡
x
);

151 
	sroundNBô


153 
roundNBô
 (
n
):Ç(n) {}

154 
hÆf
 
›î©‹
 (Ë(hÆ‡
x
Ë{ x.
round
(
n
);}

155 
	gn
;

164 
	gãm∂©e
 <
˛ass
 
	gFun˘i⁄
>

165 
	gHÆfLut
::
	$HÆfLut
 (
Fun˘i⁄
 
f
):

166 
	`_lut
(
f
, -
HALF_MAX
, HALF_MAX, 
	`hÆf
 (0),

167 
hÆf
::
	`posInf
(), hÆf::
	`√gInf
(), hÆf::
	$qN™
())

170 
	}
}

173 
ãm∂©e
 <
˛ass
 
Fun˘i⁄
>

174 
RgbaLut
::
	$RgbaLut
 (
Fun˘i⁄
 
f
, 
RgbaCh™√ls
 
chn
):

175 
	`_lut
(
f
, -
HALF_MAX
, HALF_MAX, 
	`hÆf
 (0),

176 
hÆf
::
	`posInf
(), hÆf::
	`√gInf
(), hÆf::
	`qN™
()),

177 
	$_chn
(
chn
)

180 
	}
}

	@shared/openexr-mac/include/OpenEXR/ImfMatrixAttribute.h

37 #i‚de‡
INCLUDED_IMF_MATRIX_ATTRIBUTE_H


38 
	#INCLUDED_IMF_MATRIX_ATTRIBUTE_H


	)

47 
	~<ImfAâribuã.h
>

48 
	~"Im©hM©rix.h
"

51 
«me•a˚
 
	gImf
 {

54 
	gTy≥dAâribuã
<
	tIm©h
::
	tM33f
> 
	tM33fAâribuã
;

55 
	gãm∂©e
 <> c⁄° *
	gM33fAâribuã
::
°©icTy≥Name
 ();

56 
	gãm∂©e
 <> 
	gM33fAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

57 
	gãm∂©e
 <> 
	gM33fAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

60 
	gTy≥dAâribuã
<
	tIm©h
::
	tM44f
> 
	tM44fAâribuã
;

61 
	gãm∂©e
 <> c⁄° *
	gM44fAâribuã
::
°©icTy≥Name
 ();

62 
	gãm∂©e
 <> 
	gM44fAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

63 
	gãm∂©e
 <> 
	gM44fAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

69 #ifde‡
__MWERKS__


70 
	~<ImfM©rixAâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfName.h

37 #i‚de‡
INCLUDED_IMF_NAME_H


38 
	#INCLUDED_IMF_NAME_H


	)

47 
	~<°rög.h
>

49 
«me•a˚
 
	gImf
 {

52 ˛as†
	cName


54 
	gpublic
:

60 
Name
 ();

61 
Name
 (c⁄° 
ãxt
[]);

68 
	gName
 & 
	g›î©‹
 = (c⁄° 
ãxt
[]);

75 c⁄° * 
ãxt
 (Ëc⁄° { 
	g_ãxt
;}

76 c⁄° * 
	g›î©‹
 * (Ëc⁄° { 
	g_ãxt
;}

82 c⁄° 
	gSIZE
 = 32;

83 c⁄° 
	gMAX_LENGTH
 = 
SIZE
 - 1;

85 
	g¥iv©e
:

87 
_ãxt
[
SIZE
];

91 
boﬁ
 
	g›î©‹
 =(c⁄° 
Name
 &
x
, c⁄° 
	gName
 &
	gy
);

92 
boﬁ
 
	g›î©‹
 !(c⁄° 
Name
 &
x
, c⁄° 
	gName
 &
	gy
);

93 
boﬁ
 
	g›î©‹
 < (c⁄° 
	gName
 &
	gx
, c⁄° Namê&
	gy
);

100 
ölöe
 
	gName
 &

101 
	gName
::
›î©‹
 = (c⁄° 
ãxt
[])

103 
°∫˝y
 (
_ãxt
, 
ãxt
, 
MAX_LENGTH
);

104  *
	gthis
;

108 
ölöe


109 
	gName
::
	$Name
 ()

111 
_ãxt
[0] = 0;

112 
	}
}

115 
ölöe


116 
	gName
::
	$Name
 (c⁄° 
ãxt
[])

118 *
this
 = 
ãxt
;

119 
_ãxt
 [
MAX_LENGTH
] = 0;

120 
	}
}

123 
ölöe
 
boﬁ


124 
	g›î©‹
 =(c⁄° 
Name
 &
x
, c⁄° 
	gName
 &
	gy
)

126  
°rcmp
 (*
x
, *
y
) == 0;

130 
ölöe
 
boﬁ


131 
	g›î©‹
 !(c⁄° 
Name
 &
x
, c⁄° 
	gName
 &
	gy
)

133  !(
	gx
 =
y
);

137 
ölöe
 
boﬁ


138 
	g›î©‹
 < (c⁄° 
	gName
 &
	gx
, c⁄° Namê&
	gy
)

140  
°rcmp
 (*
x
, *
y
) < 0;

	@shared/openexr-mac/include/OpenEXR/ImfOpaqueAttribute.h

37 #i‚de‡
INCLUDED_IMF_OPAQUE_ATTRIBUTE_H


38 
	#INCLUDED_IMF_OPAQUE_ATTRIBUTE_H


	)

52 
	~<ImfAâribuã.h
>

53 
	~<ImfAºay.h
>

55 
«me•a˚
 
	gImf
 {

58 ˛as†
	cO∑queAâribuã
: 
public
 
Aâribuã


60 
public
:

66 
O∑queAâribuã
 (c⁄° 
ty≥Name
[]);

67 
O∑queAâribuã
 (c⁄° O∑queAâribuã &
Ÿhî
);

68 
	gvútuÆ
 ~
O∑queAâribuã
 ();

75 
vútuÆ
 c⁄° * 
ty≥Name
 () const;

82 
vútuÆ
 
Aâribuã
 * 
c›y
 () const;

89 
vútuÆ
 
wrôeVÆueTo
 (
OSåóm
 &
os
,

90 
vîsi⁄
) const;

92 
vútuÆ
 
ªadVÆueFrom
 (
ISåóm
 &
is
,

93 
size
,

94 
vîsi⁄
);

96 
vútuÆ
 
c›yVÆueFrom
 (c⁄° 
Aâribuã
 &
Ÿhî
);

99 
	g¥iv©e
:

101 
Aºay
<> 
_ty≥Name
;

102 
	g_d©aSize
;

103 
	gAºay
<> 
	g_d©a
;

110 #ifde‡
__MWERKS__


111 
	~<ImfO∑queAâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfOutputFile.h

37 #i‚de‡
INCLUDED_IMF_OUTPUT_FILE_H


38 
	#INCLUDED_IMF_OUTPUT_FILE_H


	)

46 
	~<ImfHódî.h
>

47 
	~<ImfFømeBuf„r.h
>

48 
	~<ImfThªadög.h
>

50 
«me•a˚
 
	gImf
 {

52 
˛ass
 
	gI≈utFûe
;

53 
	gPªvõwRgba
;

56 ˛as†
	cOuçutFûe


58 
	gpublic
:

71 
OuçutFûe
 (c⁄° 
fûeName
[], c⁄° 
Hódî
 &
hódî
,

72 
numThªads
 = 
globÆThªadCou¡
());

87 
OuçutFûe
 (
OSåóm
 &
os
, c⁄° 
Hódî
 &
hódî
,

88 
numThªads
 = 
globÆThªadCou¡
());

99 
	gvútuÆ
 ~
OuçutFûe
 ();

106 c⁄° * 
fûeName
 () const;

113 c⁄° 
	gHódî
 & 
hódî
 () const;

127 
£tFømeBuf„r
 (c⁄° 
FømeBuf„r
 &
‰ameBuf„r
);

134 c⁄° 
	gFømeBuf„r
 & 
‰ameBuf„r
 () const;

150 
wrôePixñs
 (
numSˇnLöes
 = 1);

174 
cuºítSˇnLöe
 () const;

185 
c›yPixñs
 (
I≈utFûe
 &
ö
);

206 
upd©ePªvõwImage
 (c⁄° 
PªvõwRgba
 
√wPixñs
[]);

223 
bªakSˇnLöe
 (
y
, 
off£t
, 
Àngth
, 
c
);

226 
	gD©a
;

228 
	g¥iv©e
:

230 
OuçutFûe
 (const OutputFile &);

231 
	gOuçutFûe
 & 
	g›î©‹
 = (c⁄° 
OuçutFûe
 &);

233 
öôülize
 (c⁄° 
Hódî
 &
hódî
);

235 
D©a
 * 
	g_d©a
;

	@shared/openexr-mac/include/OpenEXR/ImfPixelType.h

37 #i‚de‡
INCLUDED_IMF_PIXEL_TYPE_H


38 
	#INCLUDED_IMF_PIXEL_TYPE_H


	)

46 
«me•a˚
 
	gImf
 {

49 
	ePixñTy≥


51 
	gUINT
 = 0,

52 
	gHALF
 = 1,

53 
	gFLOAT
 = 2,

55 
	gNUM_PIXELTYPES


	@shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h

36 #i‚de‡
INCLUDED_IMF_PREVIEW_IMAGE_H


37 
	#INCLUDED_IMF_PREVIEW_IMAGE_H


	)

48 
«me•a˚
 
	gImf
 {

51 
	sPªvõwRgba


53 
	gr
;

54 
	gg
;

55 
	gb
;

58 
	ga
;

61 
PªvõwRgba
 (
r
 = 0,

62 
g
 = 0,

63 
b
 = 0,

64 
a
 = 255)

65 : 
r
‘), 
g
(g), 
b
(b), 
a
(a) {}

69 ˛as†
	cPªvõwImage


71 
	gpublic
:

86 
PªvõwImage
 (
width
 = 0,

87 
height
 = 0,

88 c⁄° 
PªvõwRgba
 
pixñs
[] = 0);

94 
PªvõwImage
 (c⁄° PªvõwImagê&
Ÿhî
);

95 ~
PªvõwImage
 ();

97 
	gPªvõwImage
 & 
	g›î©‹
 = (c⁄° 
PªvõwImage
 &
Ÿhî
);

104 
width
 (Ëc⁄° { 
	g_width
;}

105 
height
 (Ëc⁄° { 
	g_height
;}

107 
PªvõwRgba
 * 
pixñs
 (Ë{ 
	g_pixñs
;}

108 c⁄° 
PªvõwRgba
 * 
pixñs
 (Ëc⁄° { 
	g_pixñs
;}

115 
	gPªvõwRgba
 & 
pixñ
 (
x
, 
y
)

116 { 
	g_pixñs
[
y
 * 
_width
 + 
x
];}

118 c⁄° 
	gPªvõwRgba
 & 
pixñ
 (
x
, 
y
) const

119 { 
	g_pixñs
[
y
 * 
_width
 + 
x
];}

121 
	g¥iv©e
:

123 
_width
;

124 
	g_height
;

125 
PªvõwRgba
 * 
	g_pixñs
;

	@shared/openexr-mac/include/OpenEXR/ImfPreviewImageAttribute.h

36 #i‚de‡
INCLUDED_IMF_PREVIEW_IMAGE_ATTRIBUTE_H


37 
	#INCLUDED_IMF_PREVIEW_IMAGE_ATTRIBUTE_H


	)

45 
	~<ImfAâribuã.h
>

46 
	~<ImfPªvõwImage.h
>

49 
«me•a˚
 
	gImf
 {

52 
	gTy≥dAâribuã
<
	tPªvõwImage
> 
	tPªvõwImageAâribuã
;

54 
	gãm∂©e
 <>

55 c⁄° *
	gPªvõwImageAâribuã
::
°©icTy≥Name
 ();

57 
	gãm∂©e
 <>

58 
	gPªvõwImageAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

60 
	gãm∂©e
 <>

61 
	gPªvõwImageAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

67 #ifde‡
__MWERKS__


68 
	~<ImfPªvõwImageAâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfRgba.h

36 #i‚de‡
INCLUDED_IMF_RGBA_H


37 
	#INCLUDED_IMF_RGBA_H


	)

45 
	~"hÆf.h
"

47 
«me•a˚
 
	gImf
 {

54 
	sRgba


56 
hÆf
 
	gr
;

57 
hÆf
 
	gg
;

58 
hÆf
 
	gb
;

59 
hÆf
 
	ga
;

61 
Rgba
 () {}

62 
Rgba
 (
hÆf
 
r
, hÆ‡
g
, hÆ‡
b
, hÆ‡
a
 = 1.f):Ñ (r), g (g), b (b),á (a) {}

64 
	gRgba
 & 
	g›î©‹
 = (c⁄° 
Rgba
 &
Ÿhî
)

66 
r
 = 
Ÿhî
.r;

67 
	gg
 = 
Ÿhî
.
g
;

68 
	gb
 = 
Ÿhî
.
b
;

69 
	ga
 = 
Ÿhî
.
a
;

71  *
	gthis
;

80 
	eRgbaCh™√ls


82 
	gWRITE_R
 = 0x01,

83 
	gWRITE_G
 = 0x02,

84 
	gWRITE_B
 = 0x04,

85 
	gWRITE_A
 = 0x08,

87 
	gWRITE_Y
 = 0x10,

90 
	gWRITE_C
 = 0x20,

93 
	gWRITE_RGB
 = 0x07,

94 
	gWRITE_RGBA
 = 0x0f,

96 
	gWRITE_YC
 = 0x30,

97 
	gWRITE_YA
 = 0x18,

98 
	gWRITE_YCA
 = 0x38

	@shared/openexr-mac/include/OpenEXR/ImfRgbaFile.h

37 #i‚de‡
INCLUDED_IMF_RGBA_FILE_H


38 
	#INCLUDED_IMF_RGBA_FILE_H


	)

50 
	~<ImfHódî.h
>

51 
	~<ImfFømeBuf„r.h
>

52 
	~<ImfRgba.h
>

53 
	~"Im©hVec.h
"

54 
	~"Im©hBox.h
"

55 
	~"hÆf.h
"

56 
	~<ImfThªadög.h
>

58 
«me•a˚
 
	gImf
 {

61 
˛ass
 
	gOuçutFûe
;

62 
˛ass
 
	gI≈utFûe
;

63 
	gPªvõwRgba
;

69 ˛as†
	cRgbaOuçutFûe


71 
	gpublic
:

77 
RgbaOuçutFûe
 (c⁄° 
«me
[],

78 c⁄° 
Hódî
 &
hódî
,

79 
RgbaCh™√ls
 
rgbaCh™√ls
 = 
WRITE_RGBA
,

80 
numThªads
 = 
globÆThªadCou¡
());

89 
RgbaOuçutFûe
 (
OSåóm
 &
os
,

90 c⁄° 
Hódî
 &
hódî
,

91 
RgbaCh™√ls
 
rgbaCh™√ls
 = 
WRITE_RGBA
,

92 
numThªads
 = 
globÆThªadCou¡
());

100 
RgbaOuçutFûe
 (c⁄° 
«me
[],

101 c⁄° 
Im©h
::
Box2i
 &
di•œyWödow
,

102 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
 = Imath::Box2i(),

103 
RgbaCh™√ls
 
rgbaCh™√ls
 = 
WRITE_RGBA
,

104 
pixñA•e˘R©io
 = 1,

105 c⁄° 
Im©h
::
V2f
 
s¸ìnWödowCíãr
 = Imath::V2f (0, 0),

106 
s¸ìnWödowWidth
 = 1,

107 
LöeOrdî
 
löeOrdî
 = 
INCREASING_Y
,

108 
Com¥essi⁄
 
com¥essi⁄
 = 
PIZ_COMPRESSION
,

109 
numThªads
 = 
globÆThªadCou¡
());

118 
RgbaOuçutFûe
 (c⁄° 
«me
[],

119 
width
,

120 
height
,

121 
RgbaCh™√ls
 
rgbaCh™√ls
 = 
WRITE_RGBA
,

122 
pixñA•e˘R©io
 = 1,

123 c⁄° 
Im©h
::
V2f
 
s¸ìnWödowCíãr
 = Imath::V2f (0, 0),

124 
s¸ìnWödowWidth
 = 1,

125 
LöeOrdî
 
löeOrdî
 = 
INCREASING_Y
,

126 
Com¥essi⁄
 
com¥essi⁄
 = 
PIZ_COMPRESSION
,

127 
numThªads
 = 
globÆThªadCou¡
());

134 
	gvútuÆ
 ~
RgbaOuçutFûe
 ();

145 
£tFømeBuf„r
 (c⁄° 
Rgba
 *
ba£
,

146 
size_t
 
xSåide
,

147 
size_t
 
ySåide
);

154 
wrôePixñs
 (
numSˇnLöes
 = 1);

155 
cuºítSˇnLöe
 () const;

162 c⁄° 
	gHódî
 & 
hódî
 () const;

163 c⁄° 
	gFømeBuf„r
 & 
‰ameBuf„r
 () const;

164 c⁄° 
	gIm©h
::
Box2i
 & 
di•œyWödow
 () const;

165 c⁄° 
	gIm©h
::
Box2i
 & 
d©aWödow
 () const;

166 
pixñA•e˘R©io
 () const;

167 c⁄° 
	gIm©h
::
V2f
 
s¸ìnWödowCíãr
 () const;

168 
s¸ìnWödowWidth
 () const;

169 
LöeOrdî
 
löeOrdî
 () const;

170 
Com¥essi⁄
 
com¥essi⁄
 () const;

171 
RgbaCh™√ls
 
ch™√ls
 () const;

178 
upd©ePªvõwImage
 (c⁄° 
PªvõwRgba
[]);

195 
£tYCRoundög
 (
roundY
,

196 
roundC
);

209 
bªakSˇnLöe
 (
y
,

210 
off£t
,

211 
Àngth
,

212 
c
);

213 
	g¥iv©e
:

215 
RgbaOuçutFûe
 (const RgbaOutputFile &);

216 
	gRgbaOuçutFûe
 & 
	g›î©‹
 = (c⁄° 
RgbaOuçutFûe
 &);

218 
˛ass
 
	gToYˇ
;

220 
OuçutFûe
 * 
	g_ouçutFûe
;

221 
ToYˇ
 * 
	g_toYˇ
;

229 ˛as†
	cRgbaI≈utFûe


231 
	gpublic
:

238 
RgbaI≈utFûe
 (c⁄° 
«me
[], 
numThªads
 = 
globÆThªadCou¡
());

248 
RgbaI≈utFûe
 (
ISåóm
 &
is
, 
numThªads
 = 
globÆThªadCou¡
());

255 
	gvútuÆ
 ~
RgbaI≈utFûe
 ();

265 
£tFømeBuf„r
 (
Rgba
 *
ba£
,

266 
size_t
 
xSåide
,

267 
size_t
 
ySåide
);

274 
ªadPixñs
 (
sˇnLöe1
, 
sˇnLöe2
);

275 
ªadPixñs
 (
sˇnLöe
);

282 c⁄° 
	gHódî
 & 
hódî
 () const;

283 c⁄° 
	gFømeBuf„r
 & 
‰ameBuf„r
 () const;

284 c⁄° 
	gIm©h
::
Box2i
 & 
di•œyWödow
 () const;

285 c⁄° 
	gIm©h
::
Box2i
 & 
d©aWödow
 () const;

286 
pixñA•e˘R©io
 () const;

287 c⁄° 
	gIm©h
::
V2f
 
s¸ìnWödowCíãr
 () const;

288 
s¸ìnWödowWidth
 () const;

289 
LöeOrdî
 
löeOrdî
 () const;

290 
Com¥essi⁄
 
com¥essi⁄
 () const;

291 
RgbaCh™√ls
 
ch™√ls
 () const;

292 c⁄° * 
fûeName
 () const;

293 
boﬁ
 
isCom∂ëe
 () const;

299 
vîsi⁄
 () const;

301 
	g¥iv©e
:

303 
RgbaI≈utFûe
 (const RgbaInputFile &);

304 
	gRgbaI≈utFûe
 & 
	g›î©‹
 = (c⁄° 
RgbaI≈utFûe
 &);

306 
˛ass
 
	gFromYˇ
;

308 
I≈utFûe
 * 
	g_öputFûe
;

309 
FromYˇ
 * 
	g_‰omYˇ
;

	@shared/openexr-mac/include/OpenEXR/ImfRgbaYca.h

1 #i‚de‡
INCLUDED_IMF_RGBA_YCA_H


2 
	#INCLUDED_IMF_RGBA_YCA_H


	)

117 
	~<ImfRgba.h
>

118 
	~<ImfChrom©icôõs.h
>

120 
«me•a˚
 
	gImf
 {

121 
«me•a˚
 
	gRgbaYˇ
 {

128 c⁄° 
	gN
 = 27;

129 c⁄° 
	gN2
 = 
N
 / 2;

137 
	gIm©h
::
V3f
 
compuãYw
 (c⁄° 
Chrom©icôõs
 &
¸
);

151 
RGBAtoYCA
 (c⁄° 
Im©h
::
V3f
 &
yw
,

152 
n
,

153 
boﬁ
 
aIsVÆid
,

154 c⁄° 
Rgba
 
rgbaIn
[ ],

155 
Rgba
 
yˇOut
[ ]);

167 
decim©eChromaH‹iz
 (
n
,

168 c⁄° 
Rgba
 
yˇIn
[ ],

169 
Rgba
 
yˇOut
[ ]);

177 
decim©eChromaVît
 (
n
,

178 c⁄° 
Rgba
 * c⁄° 
yˇIn
[
N
],

179 
Rgba
 
yˇOut
[ ]);

188 
roundYCA
 (
n
,

189 
roundY
,

190 
roundC
,

191 c⁄° 
Rgba
 
yˇIn
[ ],

192 
Rgba
 
yˇOut
[ ]);

199 
ªc⁄°ru˘ChromaH‹iz
 (
n
,

200 c⁄° 
Rgba
 
yˇIn
[ ],

201 
Rgba
 
yˇOut
[ ]);

208 
ªc⁄°ru˘ChromaVît
 (
n
,

209 c⁄° 
Rgba
 * c⁄° 
yˇIn
[
N
],

210 
Rgba
 
yˇOut
[ ]);

218 
YCAtoRGBA
 (c⁄° 
Im©h
::
V3f
 &
yw
,

219 
n
,

220 c⁄° 
Rgba
 
yˇIn
[ ],

221 
Rgba
 
rgbaOut
[ ]);

240 
fixS©uøti⁄
 (c⁄° 
Im©h
::
V3f
 &
yw
,

241 
n
,

242 c⁄° 
Rgba
 * c⁄° 
rgbaIn
[3],

243 
Rgba
 
rgbaOut
[ ]);

	@shared/openexr-mac/include/OpenEXR/ImfStandardAttributes.h

36 #i‚de‡
INCLUDED_IMF_STANDARD_ATTRIBUTES_H


37 
	#INCLUDED_IMF_STANDARD_ATTRIBUTES_H


	)

57 
	~<ImfHódî.h
>

58 
	~<ImfFlﬂtAâribuã.h
>

59 
	~<ImfSåögAâribuã.h
>

60 
	~<ImfChrom©icôõsAâribuã.h
>

61 
	~<ImfEnvm≠Aâribuã.h
>

62 
	~<ImfKeyCodeAâribuã.h
>

63 
	~<ImfTimeCodeAâribuã.h
>

66 
	#IMF_STD_ATTRIBUTE_DEF
(
«me
,
suffix
,
ty≥
) \

68 
add
##
	`suffix
 (
Hódî
 &
hódî
, c⁄° 
ty≥
 &
v
); \

69 
boﬁ
 
has
##
	`suffix
 (c⁄° 
Hódî
 &
hódî
); \

70 c⁄° 
Ty≥dAâribuã
<
ty≥
> & 
«me
##
	`Aâribuã
 (c⁄° 
Hódî
 &
hódî
); \

71 
Ty≥dAâribuã
<
ty≥
> & 
«me
##
	`Aâribuã
 (
Hódî
 &
hódî
); \

72 c⁄° 
ty≥
 & 
	`«me
 (c⁄° 
Hódî
 &
hódî
); \

73 
ty≥
 & 
	`«me
 (
Hódî
 &
hódî
);

	)

76 
«me•a˚
 
	gImf
 {

83 
IMF_STD_ATTRIBUTE_DEF
 (
chrom©icôõs
, 
Chrom©icôõs
, Chromaticities)

97 
IMF_STD_ATTRIBUTE_DEF
 (
whôeLumö™˚
, 
WhôeLumö™˚
, )

105 
IMF_STD_ATTRIBUTE_DEF
 (
xDísôy
, 
XDísôy
, )

112 
IMF_STD_ATTRIBUTE_DEF
 (
ow√r
, 
Ow√r
, 
°d
::
°rög
)

120 
IMF_STD_ATTRIBUTE_DEF
 (
commíts
, 
Commíts
, 
°d
::
°rög
)

136 
IMF_STD_ATTRIBUTE_DEF
 (
ˇpD©e
, 
C≠D©e
, 
°d
::
°rög
)

146 
IMF_STD_ATTRIBUTE_DEF
 (
utcOff£t
, utcOffset, )

157 
IMF_STD_ATTRIBUTE_DEF
 (
l⁄gôude
, 
L⁄gôude
, )

158 
IMF_STD_ATTRIBUTE_DEF
 (
œtôude
, 
L©ôude
, )

159 
IMF_STD_ATTRIBUTE_DEF
 (
Ætôude
, 
A…ôude
, )

166 
IMF_STD_ATTRIBUTE_DEF
 (
focus
, 
Focus
, )

173 
IMF_STD_ATTRIBUTE_DEF
 (
expTime
, 
ExpTime
, )

181 
IMF_STD_ATTRIBUTE_DEF
 (
≠îtuª
, 
A≥πuª
, )

189 
IMF_STD_ATTRIBUTE_DEF
 (
isoS≥ed
, 
IsoS≥ed
, )

199 
IMF_STD_ATTRIBUTE_DEF
 (
ívm≠
, 
Envm≠
, Envmap)

208 
IMF_STD_ATTRIBUTE_DEF
 (
keyCode
, 
KeyCode
, KeyCode)

215 
IMF_STD_ATTRIBUTE_DEF
 (
timeCode
, 
TimeCode
, TimeCode)

246 
IMF_STD_ATTRIBUTE_DEF
 (
wøpmodes
, 
Wøpmodes
, 
°d
::
°rög
)

	@shared/openexr-mac/include/OpenEXR/ImfStringAttribute.h

37 #i‚de‡
INCLUDED_IMF_STRING_ATTRIBUTE_H


38 
	#INCLUDED_IMF_STRING_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

47 
	~<°rög
>

50 
«me•a˚
 
	gImf
 {

53 
	gTy≥dAâribuã
<
	t°d
::
	t°rög
> 
	tSåögAâribuã
;

54 
	gãm∂©e
 <> c⁄° *
	gSåögAâribuã
::
°©icTy≥Name
 ();

55 
	gãm∂©e
 <> 
	gSåögAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

56 
	gãm∂©e
 <> 
	gSåögAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

62 #ifde‡
__MWERKS__


63 
	~<ImfSåögAâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfTestFile.h

36 #i‚de‡
INCLUDED_IMF_TEST_FILE_H


37 
	#INCLUDED_IMF_TEST_FILE_H


	)

48 
«me•a˚
 
	gImf
 {

50 
˛ass
 
	gISåóm
;

53 
boﬁ
 
isO≥nExrFûe
 (c⁄° 
fûeName
[], boﬁ &
isTûed
);

54 
boﬁ
 
isO≥nExrFûe
 (c⁄° 
fûeName
[]);

55 
boﬁ
 
isTûedO≥nExrFûe
 (c⁄° 
fûeName
[]);

56 
boﬁ
 
isO≥nExrFûe
 (
ISåóm
 &
is
, boﬁ &
isTûed
);

57 
boﬁ
 
isO≥nExrFûe
 (
ISåóm
 &
is
);

58 
boﬁ
 
isTûedO≥nExrFûe
 (
ISåóm
 &
is
);

	@shared/openexr-mac/include/OpenEXR/ImfThreading.h

35 #i‚de‡
INCLUDED_IMF_THREADING_H


36 
	#INCLUDED_IMF_THREADING_H


	)

72 
«me•a˚
 
	gImf
 {

80 
globÆThªadCou¡
 ();

87 
£tGlobÆThªadCou¡
 (
cou¡
);

	@shared/openexr-mac/include/OpenEXR/ImfTileDescription.h

36 #i‚de‡
INCLUDED_IMF_TILE_DESCRIPTION_H


37 
	#INCLUDED_IMF_TILE_DESCRIPTION_H


	)

45 
«me•a˚
 
	gImf
 {

48 
	eLevñMode


50 
	gONE_LEVEL
 = 0,

51 
	gMIPMAP_LEVELS
 = 1,

52 
	gRIPMAP_LEVELS
 = 2,

54 
	gNUM_LEVELMODES


58 
	eLevñRoundögMode


60 
	gROUND_DOWN
 = 0,

61 
	gROUND_UP
 = 1,

63 
	gNUM_ROUNDINGMODES


67 ˛as†
	cTûeDes¸ùti⁄


69 
	gpublic
:

71 
xSize
;

72 
	gySize
;

73 
LevñMode
 
	gmode
;

74 
LevñRoundögMode
 
	groundögMode
;

76 
TûeDes¸ùti⁄
 (
xs
 = 32,

77 
ys
 = 32,

78 
LevñMode
 
m
 = 
ONE_LEVEL
,

79 
LevñRoundögMode
 
r
 = 
ROUND_DOWN
)

81 
xSize
 (
xs
),

82 
ySize
 (
ys
),

83 
mode
 (
m
),

84 
roundögMode
 (
r
)

89 
boﬁ


90 
	g›î©‹
 =(c⁄° 
TûeDes¸ùti⁄
 &
Ÿhî
) const

92  
xSize
 =
Ÿhî
.xSize &&

93 
ySize
 =
Ÿhî
.ySize &&

94 
mode
 =
Ÿhî
.mode &&

95 
roundögMode
 =
Ÿhî
.roundingMode;

	@shared/openexr-mac/include/OpenEXR/ImfTileDescriptionAttribute.h

36 #i‚de‡
INCLUDED_IMF_TILE_DESCRIPTION_ATTRIBUTE_H


37 
	#INCLUDED_IMF_TILE_DESCRIPTION_ATTRIBUTE_H


	)

45 
	~<ImfAâribuã.h
>

46 
	~<ImfTûeDes¸ùti⁄.h
>

48 
«me•a˚
 
	gImf
 {

51 
	gTy≥dAâribuã
<
	tTûeDes¸ùti⁄
> 
	tTûeDes¸ùti⁄Aâribuã
;

53 
	gãm∂©e
 <>

55 
	gTûeDes¸ùti⁄Aâribuã
::
°©icTy≥Name
 ();

57 
	gãm∂©e
 <>

59 
	gTûeDes¸ùti⁄Aâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

61 
	gãm∂©e
 <>

63 
	gTûeDes¸ùti⁄Aâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

69 #ifde‡
__MWERKS__


70 
	~<ImfTûeDes¸ùti⁄Aâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfTiledInputFile.h

36 #i‚de‡
INCLUDED_IMF_TILED_INPUT_FILE_H


37 
	#INCLUDED_IMF_TILED_INPUT_FILE_H


	)

45 
	~<ImfHódî.h
>

46 
	~<ImfFømeBuf„r.h
>

47 
	~"Im©hBox.h
"

48 
	~<ImfTûeDes¸ùti⁄.h
>

49 
	~<ImfThªadög.h
>

51 
«me•a˚
 
	gImf
 {

54 ˛as†
	cTûedI≈utFûe


56 
	gpublic
:

68 
TûedI≈utFûe
 (c⁄° 
fûeName
[],

69 
numThªads
 = 
globÆThªadCou¡
 ());

80 
TûedI≈utFûe
 (
ISåóm
 &
is
, 
numThªads
 = 
globÆThªadCou¡
 ());

87 
	gvútuÆ
 ~
TûedI≈utFûe
 ();

94 c⁄° * 
fûeName
 () const;

101 c⁄° 
	gHódî
 & 
hódî
 () const;

108 
vîsi⁄
 () const;

122 
£tFømeBuf„r
 (c⁄° 
FømeBuf„r
 &
‰ameBuf„r
);

129 c⁄° 
	gFømeBuf„r
 & 
‰ameBuf„r
 () const;

142 
boﬁ
 
isCom∂ëe
 () const;

155 
tûeXSize
 () const;

156 
tûeYSize
 () const;

157 
LevñMode
 
ÀvñMode
 () const;

158 
LevñRoundögMode
 
ÀvñRoundögMode
 () const;

204 
numLevñs
 () const;

205 
numXLevñs
 () const;

206 
numYLevñs
 () const;

207 
boﬁ
 
isVÆidLevñ
 (
lx
, 
ly
) const;

228 
ÀvñWidth
 (
lx
) const;

229 
ÀvñHeight
 (
ly
) const;

252 
numXTûes
 (
lx
 = 0) const;

253 
numYTûes
 (
ly
 = 0) const;

275 
	gIm©h
::
Box2i
 
d©aWödowF‹Levñ
 (
l
 = 0) const;

276 
	gIm©h
::
Box2i
 
d©aWödowF‹Levñ
 (
lx
, 
ly
) const;

300 
	gIm©h
::
Box2i
 
d©aWödowF‹Tûe
 (
dx
, 
dy
, 
l
 = 0) const;

302 
	gIm©h
::
Box2i
 
d©aWödowF‹Tûe
 (
dx
, 
dy
,

303 
lx
, 
ly
) const;

334 
ªadTûe
 (
dx
, 
dy
, 
l
 = 0);

335 
ªadTûe
 (
dx
, 
dy
, 
lx
, 
ly
);

337 
ªadTûes
 (
dx1
, 
dx2
, 
dy1
, 
dy2
,

338 
lx
, 
ly
);

340 
ªadTûes
 (
dx1
, 
dx2
, 
dy1
, 
dy2
,

341 
l
 = 0);

350 
øwTûeD©a
 (&
dx
, &
dy
,

351 &
lx
, &
ly
,

352 c⁄° *&
pixñD©a
,

353 &
pixñD©aSize
);

355 
	gD©a
;

357 
	g¥iv©e
:

359 
‰õnd
 
˛ass
 
I≈utFûe
;

361 
TûedI≈utFûe
 (const TiledInputFile &);

362 
	gTûedI≈utFûe
 & 
	g›î©‹
 = (c⁄° 
TûedI≈utFûe
 &);

364 
TûedI≈utFûe
 (c⁄° 
Hódî
 &
hódî
, 
ISåóm
 *
is
, 
vîsi⁄
,

365 
numThªads
);

367 
öôülize
 ();

369 
boﬁ
 
isVÆidTûe
 (
dx
, 
dy
,

370 
lx
, 
ly
) const;

372 
size_t
 
byãsPîLöeF‹Tûe
 (
dx
, 
dy
,

373 
lx
, 
ly
) const;

375 
D©a
 * 
	g_d©a
;

	@shared/openexr-mac/include/OpenEXR/ImfTiledOutputFile.h

36 #i‚de‡
INCLUDED_IMF_TILED_OUTPUT_FILE_H


37 
	#INCLUDED_IMF_TILED_OUTPUT_FILE_H


	)

45 
	~<ImfHódî.h
>

46 
	~<ImfFømeBuf„r.h
>

47 
	~"Im©hBox.h
"

48 
	~<ImfTûeDes¸ùti⁄.h
>

49 
	~<ImfThªadög.h
>

51 
«me•a˚
 
	gImf
 {

53 
˛ass
 
	gTûedI≈utFûe
;

54 
˛ass
 
	gI≈utFûe
;

55 
	gPªvõwRgba
;

58 ˛as†
	cTûedOuçutFûe


60 
	gpublic
:

84 
TûedOuçutFûe
 (c⁄° 
fûeName
[],

85 c⁄° 
Hódî
 &
hódî
,

86 
numThªads
 = 
globÆThªadCou¡
 ());

96 
TûedOuçutFûe
 (
OSåóm
 &
os
,

97 c⁄° 
Hódî
 &
hódî
,

98 
numThªads
 = 
globÆThªadCou¡
 ());

108 
	gvútuÆ
 ~
TûedOuçutFûe
 ();

115 c⁄° * 
fûeName
 () const;

122 c⁄° 
	gHódî
 & 
hódî
 () const;

136 
£tFømeBuf„r
 (c⁄° 
FømeBuf„r
 &
‰ameBuf„r
);

143 c⁄° 
	gFømeBuf„r
 & 
‰ameBuf„r
 () const;

156 
tûeXSize
 () const;

157 
tûeYSize
 () const;

158 
LevñMode
 
ÀvñMode
 () const;

159 
LevñRoundögMode
 
ÀvñRoundögMode
 () const;

205 
numLevñs
 () const;

206 
numXLevñs
 () const;

207 
numYLevñs
 () const;

208 
boﬁ
 
isVÆidLevñ
 (
lx
, 
ly
) const;

229 
ÀvñWidth
 (
lx
) const;

230 
ÀvñHeight
 (
ly
) const;

253 
numXTûes
 (
lx
 = 0) const;

254 
numYTûes
 (
ly
 = 0) const;

277 
	gIm©h
::
Box2i
 
d©aWödowF‹Levñ
 (
l
 = 0) const;

278 
	gIm©h
::
Box2i
 
d©aWödowF‹Levñ
 (
lx
, 
ly
) const;

302 
	gIm©h
::
Box2i
 
d©aWödowF‹Tûe
 (
dx
, 
dy
,

303 
l
 = 0) const;

305 
	gIm©h
::
Box2i
 
d©aWödowF‹Tûe
 (
dx
, 
dy
,

306 
lx
, 
ly
) const;

380 
wrôeTûe
 (
dx
, 
dy
, 
l
 = 0);

381 
wrôeTûe
 (
dx
, 
dy
, 
lx
, 
ly
);

383 
wrôeTûes
 (
dx1
, 
dx2
, 
dy1
, 
dy2
,

384 
lx
, 
ly
);

386 
wrôeTûes
 (
dx1
, 
dx2
, 
dy1
, 
dy2
,

387 
l
 = 0);

398 
c›yPixñs
 (
TûedI≈utFûe
 &
ö
);

411 
c›yPixñs
 (
I≈utFûe
 &
ö
);

432 
upd©ePªvõwImage
 (c⁄° 
PªvõwRgba
 
√wPixñs
[]);

449 
bªakTûe
 (
dx
, 
dy
,

450 
lx
, 
ly
,

451 
off£t
,

452 
Àngth
,

453 
c
);

454 
	gD©a
;

456 
	g¥iv©e
:

458 
TûedOuçutFûe
 (const TiledOutputFile &);

459 
	gTûedOuçutFûe
 & 
	g›î©‹
 = (c⁄° 
TûedOuçutFûe
 &);

461 
öôülize
 (c⁄° 
Hódî
 &
hódî
);

463 
boﬁ
 
isVÆidTûe
 (
dx
, 
dy
,

464 
lx
, 
ly
) const;

466 
size_t
 
byãsPîLöeF‹Tûe
 (
dx
, 
dy
,

467 
lx
, 
ly
) const;

469 
D©a
 * 
	g_d©a
;

	@shared/openexr-mac/include/OpenEXR/ImfTiledRgbaFile.h

36 #i‚de‡
INCLUDED_IMF_TILED_RGBA_FILE_H


37 
	#INCLUDED_IMF_TILED_RGBA_FILE_H


	)

48 
	~<ImfHódî.h
>

49 
	~<ImfFømeBuf„r.h
>

50 
	~"Im©hVec.h
"

51 
	~"Im©hBox.h
"

52 
	~"hÆf.h
"

53 
	~<ImfTûeDes¸ùti⁄.h
>

54 
	~<ImfRgba.h
>

55 
	~<ImfThªadög.h
>

57 
«me•a˚
 
	gImf
 {

59 
˛ass
 
	gTûedOuçutFûe
;

60 
˛ass
 
	gTûedI≈utFûe
;

61 
	gPªvõwRgba
;

68 ˛as†
	cTûedRgbaOuçutFûe


70 
	gpublic
:

80 
TûedRgbaOuçutFûe
 (c⁄° 
«me
[],

81 c⁄° 
Hódî
 &
hódî
,

82 
RgbaCh™√ls
 
rgbaCh™√ls
,

83 
tûeXSize
,

84 
tûeYSize
,

85 
LevñMode
 
mode
,

86 
LevñRoundögMode
 
rmode
 = 
ROUND_DOWN
,

87 
numThªads
 = 
globÆThªadCou¡
 ());

99 
TûedRgbaOuçutFûe
 (
OSåóm
 &
os
,

100 c⁄° 
Hódî
 &
hódî
,

101 
RgbaCh™√ls
 
rgbaCh™√ls
,

102 
tûeXSize
,

103 
tûeYSize
,

104 
LevñMode
 
mode
,

105 
LevñRoundögMode
 
rmode
 = 
ROUND_DOWN
,

106 
numThªads
 = 
globÆThªadCou¡
 ());

115 
TûedRgbaOuçutFûe
 (c⁄° 
«me
[],

116 
tûeXSize
,

117 
tûeYSize
,

118 
LevñMode
 
mode
,

119 
LevñRoundögMode
 
rmode
,

120 c⁄° 
Im©h
::
Box2i
 &
di•œyWödow
,

121 c⁄° 
Im©h
::
Box2i
 &
d©aWödow
 = Imath::Box2i(),

122 
RgbaCh™√ls
 
rgbaCh™√ls
 = 
WRITE_RGBA
,

123 
pixñA•e˘R©io
 = 1,

124 c⁄° 
Im©h
::
V2f
 
s¸ìnWödowCíãr
 =

125 
Im©h
::
V2f
 (0, 0),

126 
s¸ìnWödowWidth
 = 1,

127 
LöeOrdî
 
löeOrdî
 = 
INCREASING_Y
,

128 
Com¥essi⁄
 
com¥essi⁄
 = 
ZIP_COMPRESSION
,

129 
numThªads
 = 
globÆThªadCou¡
 ());

138 
TûedRgbaOuçutFûe
 (c⁄° 
«me
[],

139 
width
,

140 
height
,

141 
tûeXSize
,

142 
tûeYSize
,

143 
LevñMode
 
mode
,

144 
LevñRoundögMode
 
rmode
 = 
ROUND_DOWN
,

145 
RgbaCh™√ls
 
rgbaCh™√ls
 = 
WRITE_RGBA
,

146 
pixñA•e˘R©io
 = 1,

147 c⁄° 
Im©h
::
V2f
 
s¸ìnWödowCíãr
 =

148 
Im©h
::
V2f
 (0, 0),

149 
s¸ìnWödowWidth
 = 1,

150 
LöeOrdî
 
löeOrdî
 = 
INCREASING_Y
,

151 
Com¥essi⁄
 
com¥essi⁄
 = 
ZIP_COMPRESSION
,

152 
numThªads
 = 
globÆThªadCou¡
 ());

155 
	gvútuÆ
 ~
TûedRgbaOuçutFûe
 ();

166 
£tFømeBuf„r
 (c⁄° 
Rgba
 *
ba£
,

167 
size_t
 
xSåide
,

168 
size_t
 
ySåide
);

174 c⁄° 
	gHódî
 & 
hódî
 () const;

175 c⁄° 
	gFømeBuf„r
 & 
‰ameBuf„r
 () const;

176 c⁄° 
	gIm©h
::
Box2i
 & 
di•œyWödow
 () const;

177 c⁄° 
	gIm©h
::
Box2i
 & 
d©aWödow
 () const;

178 
pixñA•e˘R©io
 () const;

179 c⁄° 
	gIm©h
::
V2f
 
s¸ìnWödowCíãr
 () const;

180 
s¸ìnWödowWidth
 () const;

181 
LöeOrdî
 
löeOrdî
 () const;

182 
Com¥essi⁄
 
com¥essi⁄
 () const;

183 
RgbaCh™√ls
 
ch™√ls
 () const;

190 
tûeXSize
 () const;

191 
tûeYSize
 () const;

192 
LevñMode
 
ÀvñMode
 () const;

193 
LevñRoundögMode
 
ÀvñRoundögMode
 () const;

195 
numLevñs
 () const;

196 
numXLevñs
 () const;

197 
numYLevñs
 () const;

198 
boﬁ
 
isVÆidLevñ
 (
lx
, 
ly
) const;

200 
ÀvñWidth
 (
lx
) const;

201 
ÀvñHeight
 (
ly
) const;

203 
numXTûes
 (
lx
 = 0) const;

204 
numYTûes
 (
ly
 = 0) const;

206 
	gIm©h
::
Box2i
 
d©aWödowF‹Levñ
 (
l
 = 0) const;

207 
	gIm©h
::
Box2i
 
d©aWödowF‹Levñ
 (
lx
, 
ly
) const;

209 
	gIm©h
::
Box2i
 
d©aWödowF‹Tûe
 (
dx
, 
dy
,

210 
l
 = 0) const;

212 
	gIm©h
::
Box2i
 
d©aWödowF‹Tûe
 (
dx
, 
dy
,

213 
lx
, 
ly
) const;

243 
wrôeTûe
 (
dx
, 
dy
, 
l
 = 0);

244 
wrôeTûe
 (
dx
, 
dy
, 
lx
, 
ly
);

246 
wrôeTûes
 (
dxMö
, 
dxMax
, 
dyMö
, 
dyMax
,

247 
lx
, 
ly
);

249 
wrôeTûes
 (
dxMö
, 
dxMax
, 
dyMö
, 
dyMax
,

250 
l
 = 0);

257 
upd©ePªvõwImage
 (c⁄° 
PªvõwRgba
[]);

271 
bªakTûe
 (
dx
, 
dy
,

272 
lx
, 
ly
,

273 
off£t
,

274 
Àngth
,

275 
c
);

276 
	g¥iv©e
:

282 
TûedRgbaOuçutFûe
 (const TiledRgbaOutputFile &);

283 
	gTûedRgbaOuçutFûe
 & 
	g›î©‹
 = (c⁄° 
TûedRgbaOuçutFûe
 &);

285 
˛ass
 
	gToYa
;

287 
TûedOuçutFûe
 * 
	g_ouçutFûe
;

288 
ToYa
 * 
	g_toYa
;

297 ˛as†
	cTûedRgbaI≈utFûe


299 
	gpublic
:

308 
TûedRgbaI≈utFûe
 (c⁄° 
«me
[],

309 
numThªads
 = 
globÆThªadCou¡
 ());

321 
TûedRgbaI≈utFûe
 (
ISåóm
 &
is
, 
numThªads
 = 
globÆThªadCou¡
 ());

328 
	gvútuÆ
 ~
TûedRgbaI≈utFûe
 ();

339 
£tFømeBuf„r
 (
Rgba
 *
ba£
,

340 
size_t
 
xSåide
,

341 
size_t
 
ySåide
);

347 c⁄° 
	gHódî
 & 
hódî
 () const;

348 c⁄° 
	gFømeBuf„r
 & 
‰ameBuf„r
 () const;

349 c⁄° 
	gIm©h
::
Box2i
 & 
di•œyWödow
 () const;

350 c⁄° 
	gIm©h
::
Box2i
 & 
d©aWödow
 () const;

351 
pixñA•e˘R©io
 () const;

352 c⁄° 
	gIm©h
::
V2f
 
s¸ìnWödowCíãr
 () const;

353 
s¸ìnWödowWidth
 () const;

354 
LöeOrdî
 
löeOrdî
 () const;

355 
Com¥essi⁄
 
com¥essi⁄
 () const;

356 
RgbaCh™√ls
 
ch™√ls
 () const;

357 c⁄° * 
fûeName
 () const;

358 
boﬁ
 
isCom∂ëe
 () const;

364 
vîsi⁄
 () const;

371 
tûeXSize
 () const;

372 
tûeYSize
 () const;

373 
LevñMode
 
ÀvñMode
 () const;

374 
LevñRoundögMode
 
ÀvñRoundögMode
 () const;

376 
numLevñs
 () const;

377 
numXLevñs
 () const;

378 
numYLevñs
 () const;

379 
boﬁ
 
isVÆidLevñ
 (
lx
, 
ly
) const;

381 
ÀvñWidth
 (
lx
) const;

382 
ÀvñHeight
 (
ly
) const;

384 
numXTûes
 (
lx
 = 0) const;

385 
numYTûes
 (
ly
 = 0) const;

387 
	gIm©h
::
Box2i
 
d©aWödowF‹Levñ
 (
l
 = 0) const;

388 
	gIm©h
::
Box2i
 
d©aWödowF‹Levñ
 (
lx
, 
ly
) const;

390 
	gIm©h
::
Box2i
 
d©aWödowF‹Tûe
 (
dx
, 
dy
,

391 
l
 = 0) const;

393 
	gIm©h
::
Box2i
 
d©aWödowF‹Tûe
 (
dx
, 
dy
,

394 
lx
, 
ly
) const;

426 
ªadTûe
 (
dx
, 
dy
, 
l
 = 0);

427 
ªadTûe
 (
dx
, 
dy
, 
lx
, 
ly
);

429 
ªadTûes
 (
dxMö
, 
dxMax
,

430 
dyMö
, 
dyMax
, 
lx
, 
ly
);

432 
ªadTûes
 (
dxMö
, 
dxMax
,

433 
dyMö
, 
dyMax
, 
l
 = 0);

435 
	g¥iv©e
:

441 
TûedRgbaI≈utFûe
 (const TiledRgbaInputFile &);

442 
	gTûedRgbaI≈utFûe
 & 
	g›î©‹
 = (c⁄° 
TûedRgbaI≈utFûe
 &);

444 
˛ass
 
	gFromYa
;

446 
TûedI≈utFûe
 * 
	g_öputFûe
;

447 
FromYa
 * 
	g_‰omYa
;

	@shared/openexr-mac/include/OpenEXR/ImfTimeCode.h

36 #i‚de‡
INCLUDED_IMF_TIME_CODE_H


37 
	#INCLUDED_IMF_TIME_CODE_H


	)

113 
«me•a˚
 
	gImf
 {

116 ˛as†
	cTimeCode


118 
	gpublic
:

124 
	ePackög


126 
TV60_PACKING
,

127 
	gTV50_PACKING
,

128 
	gFILM24_PACKING


136 
TimeCode
 ();

138 
TimeCode
 (
hours
,

139 
möuãs
,

140 
£c⁄ds
,

141 
‰ame
,

142 
boﬁ
 
dr›Føme
 = 
Ál£
,

143 
boﬁ
 
cﬁ‹Føme
 = 
Ál£
,

144 
boﬁ
 
fõldPha£
 = 
Ál£
,

145 
boﬁ
 
bgf0
 = 
Ál£
,

146 
boﬁ
 
bgf1
 = 
Ál£
,

147 
boﬁ
 
bgf2
 = 
Ál£
,

148 
bö¨yGroup1
 = 0,

149 
bö¨yGroup2
 = 0,

150 
bö¨yGroup3
 = 0,

151 
bö¨yGroup4
 = 0,

152 
bö¨yGroup5
 = 0,

153 
bö¨yGroup6
 = 0,

154 
bö¨yGroup7
 = 0,

155 
bö¨yGroup8
 = 0);

157 
TimeCode
 (
timeAndFœgs
,

158 
u£rD©a
 = 0,

159 
Packög
 
∑ckög
 = 
TV60_PACKING
);

161 
TimeCode
 (c⁄° TimeCodê&
Ÿhî
);

163 
	gTimeCode
 & 
	g›î©‹
 = (c⁄° 
TimeCode
 &
Ÿhî
);

170 
hours
 () const;

171 
£tHours
 (
vÆue
);

173 
möuãs
 () const;

174 
£tMöuãs
 (
vÆue
);

176 
£c⁄ds
 () const;

177 
£tSec⁄ds
 (
vÆue
);

179 
‰ame
 () const;

180 
£tFøme
 (
vÆue
);

182 
boﬁ
 
dr›Føme
 () const;

183 
£tDr›Føme
 (
boﬁ
 
vÆue
);

185 
boﬁ
 
cﬁ‹Føme
 () const;

186 
£tCﬁ‹Føme
 (
boﬁ
 
vÆue
);

188 
boﬁ
 
fõldPha£
 () const;

189 
£tFõldPha£
 (
boﬁ
 
vÆue
);

191 
boﬁ
 
bgf0
 () const;

192 
£tBgf0
 (
boﬁ
 
vÆue
);

194 
boﬁ
 
bgf1
 () const;

195 
£tBgf1
 (
boﬁ
 
vÆue
);

197 
boﬁ
 
bgf2
 () const;

198 
£tBgf2
 (
boﬁ
 
vÆue
);

200 
bö¨yGroup
 (
group
) const;

201 
£tBö¨yGroup
 (
group
, 
vÆue
);

208 
timeAndFœgs
 (
Packög
 
∑ckög
 = 
TV60_PACKING
) const;

210 
£tTimeAndFœgs
 (
vÆue
,

211 
Packög
 
∑ckög
 = 
TV60_PACKING
);

213 
u£rD©a
 () const;

215 
£tU£rD©a
 (
vÆue
);

217 
	g¥iv©e
:

219 
_time
;

220 
	g_u£r
;

	@shared/openexr-mac/include/OpenEXR/ImfTimeCodeAttribute.h

36 #i‚de‡
INCLUDED_IMF_TIME_CODE_ATTRIBUTE_H


37 
	#INCLUDED_IMF_TIME_CODE_ATTRIBUTE_H


	)

46 
	~<ImfAâribuã.h
>

47 
	~<ImfTimeCode.h
>

50 
«me•a˚
 
	gImf
 {

53 
	gTy≥dAâribuã
<
	tTimeCode
> 
	tTimeCodeAâribuã
;

55 
	gãm∂©e
 <>

56 c⁄° *
	gTimeCodeAâribuã
::
°©icTy≥Name
 ();

58 
	gãm∂©e
 <>

59 
	gTimeCodeAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

61 
	gãm∂©e
 <>

62 
	gTimeCodeAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

68 #ifde‡
__MWERKS__


69 
	~<ImfTimeCodeAâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfVecAttribute.h

37 #i‚de‡
INCLUDED_IMF_VEC_ATTRIBUTE_H


38 
	#INCLUDED_IMF_VEC_ATTRIBUTE_H


	)

49 
	~<ImfAâribuã.h
>

50 
	~"Im©hVec.h
"

53 
«me•a˚
 
	gImf
 {

56 
	gTy≥dAâribuã
<
	tIm©h
::
	tV2i
> 
	tV2iAâribuã
;

57 
	gãm∂©e
 <> c⁄° *
	gV2iAâribuã
::
°©icTy≥Name
 ();

58 
	gãm∂©e
 <> 
	gV2iAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

59 
	gãm∂©e
 <> 
	gV2iAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

62 
	gTy≥dAâribuã
<
	tIm©h
::
	tV2f
> 
	tV2fAâribuã
;

63 
	gãm∂©e
 <> c⁄° *
	gV2fAâribuã
::
°©icTy≥Name
 ();

64 
	gãm∂©e
 <> 
	gV2fAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

65 
	gãm∂©e
 <> 
	gV2fAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

68 
	gTy≥dAâribuã
<
	tIm©h
::
	tV3i
> 
	tV3iAâribuã
;

69 
	gãm∂©e
 <> c⁄° *
	gV3iAâribuã
::
°©icTy≥Name
 ();

70 
	gãm∂©e
 <> 
	gV3iAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

71 
	gãm∂©e
 <> 
	gV3iAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

74 
	gTy≥dAâribuã
<
	tIm©h
::
	tV3f
> 
	tV3fAâribuã
;

75 
	gãm∂©e
 <> c⁄° *
	gV3fAâribuã
::
°©icTy≥Name
 ();

76 
	gãm∂©e
 <> 
	gV3fAâribuã
::
wrôeVÆueTo
 (
OSåóm
 &, ) const;

77 
	gãm∂©e
 <> 
	gV3fAâribuã
::
ªadVÆueFrom
 (
ISåóm
 &, , );

83 #ifde‡
__MWERKS__


84 
	~<ImfVecAâribuã.˝p
>

	@shared/openexr-mac/include/OpenEXR/ImfVersion.h

36 #i‚de‡
INCLUDED_IMF_VERSION_H


37 
	#INCLUDED_IMF_VERSION_H


	)

46 
«me•a˚
 
	gImf
 {

55 c⁄° 
	gMAGIC
 = 20000630;

69 c⁄° 
	gVERSION_NUMBER_FIELD
 = 0x000000ff;

70 c⁄° 
	gVERSION_FLAGS_FIELD
 = 0xffffff00;

77 c⁄° 
	gEXR_VERSION
 = 2;

85 c⁄° 
	gTILED_FLAG
 = 0x00000200;

92 c⁄° 
	gALL_FLAGS
 = 
TILED_FLAG
;

99 
ölöe
 
boﬁ
 
isTûed
 (
vîsi⁄
Ë{ !!(
	gvîsi⁄
 & 
	gTILED_FLAG
);}

100 
ölöe
 
makeTûed
 (
vîsi⁄
Ë{ 
	gvîsi⁄
 | 
	gTILED_FLAG
;}

101 
ölöe
 
makeNŸTûed
 (
vîsi⁄
Ë{ 
	gvîsi⁄
 & ~
	gTILED_FLAG
;}

102 
ölöe
 
gëVîsi⁄
 (
vîsi⁄
Ë{ 
	gvîsi⁄
 & 
	gVERSION_NUMBER_FIELD
;}

103 
ölöe
 
gëFœgs
 (
vîsi⁄
Ë{ 
	gvîsi⁄
 & 
	gVERSION_FLAGS_FIELD
;}

104 
ölöe
 
boﬁ
 
suµ‹tsFœgs
 (
Êags
Ë{ !(
	gÊags
 & ~
	gALL_FLAGS
);}

112 
boﬁ
 
isImfMagic
 (c⁄° 
byãs
[4]);

	@shared/openexr-mac/include/OpenEXR/ImfWav.h

37 #i‚de‡
INCLUDED_IMF_WAV_H


38 
	#INCLUDED_IMF_WAV_H


	)

46 
«me•a˚
 
	gImf
 {

50 
	gwav2Encode


51 (*
	gö
,

52 
	gnx
,

53 
	gox
,

54 
	gny
,

55 
	goy
,

56 
	gmx
);

59 
	gwav2Decode


60 (*
	gö
,

61 
	gnx
,

62 
	gox
,

63 
	gny
,

64 
	goy
,

65 
	gmx
);

	@shared/openexr-mac/include/OpenEXR/ImfXdr.h

36 #i‚de‡
INCLUDED_IMF_XDR_H


37 
	#INCLUDED_IMF_XDR_H


	)

105 
	~<ImfI¡64.h
>

106 
	~"IexM©hExc.h
"

107 
	~"hÆf.h
"

108 
	~<limôs.h
>

110 
«me•a˚
 
	gImf
 {

111 
«me•a˚
 
	gXdr
 {

118 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

120 
wrôe
 (
T
 &
out
, 
boﬁ
 
v
);

122 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

124 
wrôe
 (
T
 &
out
, 
v
);

126 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

128 
wrôe
 (
T
 &
out
, sig√d 
v
);

130 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

132 
wrôe
 (
T
 &
out
, 
v
);

134 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

136 
wrôe
 (
T
 &
out
, sig√d 
v
);

138 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

140 
wrôe
 (
T
 &
out
, 
v
);

142 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

144 
wrôe
 (
T
 &
out
, sig√d 
v
);

146 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

148 
wrôe
 (
T
 &
out
, 
v
);

150 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

152 
wrôe
 (
T
 &
out
, sig√d 
v
);

154 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

156 
wrôe
 (
T
 &
out
, 
v
);

158 #i‡
ULONG_MAX
 != 18446744073709551615LU

160 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

162 
wrôe
 (
T
 &
out
, 
I¡64
 
v
);

166 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

168 
wrôe
 (
T
 &
out
, 
v
);

170 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

172 
wrôe
 (
T
 &
out
, 
v
);

174 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

176 
wrôe
 (
T
 &
out
, 
hÆf
 
v
);

178 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

180 
wrôe
 (
T
 &
out
, c⁄° 
v
[ ], 
n
);

182 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

184 
wrôe
 (
T
 &
out
, c⁄° 
v
[]);

191 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

193 
∑d
 (
T
 &
out
, 
n
);

201 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

203 
ªad
 (
T
 &
ö
, 
boﬁ
 &
v
);

205 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

207 
ªad
 (
T
 &
ö
, &
v
);

209 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

211 
ªad
 (
T
 &
ö
, sig√d &
v
);

213 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

215 
ªad
 (
T
 &
ö
, &
v
);

217 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

219 
ªad
 (
T
 &
ö
, sig√d &
v
);

221 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

223 
ªad
 (
T
 &
ö
, &
v
);

225 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

227 
ªad
 (
T
 &
ö
, sig√d &
v
);

229 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

231 
ªad
 (
T
 &
ö
, &
v
);

233 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

235 
ªad
 (
T
 &
ö
, sig√d &
v
);

237 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

239 
ªad
 (
T
 &
ö
, &
v
);

241 #i‡
ULONG_MAX
 != 18446744073709551615LU

243 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

245 
ªad
 (
T
 &
ö
, 
I¡64
 &
v
);

249 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

251 
ªad
 (
T
 &
ö
, &
v
);

253 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

255 
ªad
 (
T
 &
ö
, &
v
);

257 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

259 
ªad
 (
T
 &
ö
, 
hÆf
 &
v
);

261 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

263 
ªad
 (
T
 &
ö
, 
v
[ ], 
n
);

265 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

267 
ªad
 (
T
 &
ö
, 
n
, 
v
[ ]);

274 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

276 
skù
 (
T
 &
ö
, 
n
);

285 
	gãm∂©e
 <
˛ass
 
	gS
>

287 
size
 ();

294 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

295 
ölöe
 

296 
wrôeSig√dCh¨s
 (
T
 &
out
, c⁄° sig√d 
c
[], 
n
)

298 
	gS
::
wrôeCh¨s
 (
out
, (c⁄° *Ë
c
, 
n
);

302 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

303 
ölöe
 

304 
wrôeUnsig√dCh¨s
 (
T
 &
out
, c⁄° 
c
[], 
n
)

306 
	gS
::
wrôeCh¨s
 (
out
, (c⁄° *Ë
c
, 
n
);

310 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

311 
ölöe
 

312 
ªadSig√dCh¨s
 (
T
 &
ö
, sig√d 
c
[], 
n
)

314 
	gS
::
ªadCh¨s
 (
ö
, (*Ë
c
, 
n
);

318 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

319 
ölöe
 

320 
ªadUnsig√dCh¨s
 (
T
 &
ö
, 
c
[], 
n
)

322 
	gS
::
ªadCh¨s
 (
ö
, (*Ë
c
, 
n
);

326 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

327 
ölöe
 

328 
wrôe
 (
T
 &
out
, 
boﬁ
 
v
)

330 
	gc
 = !!
v
;

331 
	gS
::
wrôeCh¨s
 (
out
, &
c
, 1);

335 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

336 
ölöe
 

337 
wrôe
 (
T
 &
out
, 
v
)

339 
	gS
::
wrôeCh¨s
 (
out
, &
v
, 1);

343 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

344 
ölöe
 

345 
wrôe
 (
T
 &
out
, sig√d 
v
)

347 
	gwrôeSig√dCh¨s
<
	gS
> (
	gout
, &
	gv
, 1);

351 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

352 
ölöe
 

353 
wrôe
 (
T
 &
out
, 
v
)

355 
	gwrôeUnsig√dCh¨s
<
	gS
> (
	gout
, &
	gv
, 1);

359 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

361 
wrôe
 (
T
 &
out
, sig√d 
v
)

363 sig√d 
	gb
[2];

365 
	gb
[0] = (sig√d Ë(
v
);

366 
	gb
[1] = (sig√d Ë(
v
 >> 8);

368 
	gwrôeSig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 2);

372 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

374 
wrôe
 (
T
 &
out
, 
v
)

376 
	gb
[2];

378 
	gb
[0] = (Ë(
v
);

379 
	gb
[1] = (Ë(
v
 >> 8);

381 
	gwrôeUnsig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 2);

385 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

387 
wrôe
 (
T
 &
out
, sig√d 
v
)

389 sig√d 
	gb
[4];

391 
	gb
[0] = (sig√d Ë(
v
);

392 
	gb
[1] = (sig√d Ë(
v
 >> 8);

393 
	gb
[2] = (sig√d Ë(
v
 >> 16);

394 
	gb
[3] = (sig√d Ë(
v
 >> 24);

396 
	gwrôeSig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 4);

400 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

402 
wrôe
 (
T
 &
out
, 
v
)

404 
	gb
[4];

406 
	gb
[0] = (Ë(
v
);

407 
	gb
[1] = (Ë(
v
 >> 8);

408 
	gb
[2] = (Ë(
v
 >> 16);

409 
	gb
[3] = (Ë(
v
 >> 24);

411 
	gwrôeUnsig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 4);

415 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

417 
wrôe
 (
T
 &
out
, sig√d 
v
)

419 sig√d 
	gb
[8];

421 
	gb
[0] = (sig√d Ë(
v
);

422 
	gb
[1] = (sig√d Ë(
v
 >> 8);

423 
	gb
[2] = (sig√d Ë(
v
 >> 16);

424 
	gb
[3] = (sig√d Ë(
v
 >> 24);

426 #i‡
LONG_MAX
 == 2147483647

428 i‡(
	gv
 >= 0)

430 
b
[4] = 0;

431 
	gb
[5] = 0;

432 
	gb
[6] = 0;

433 
	gb
[7] = 0;

437 
	gb
[4] = ~0;

438 
	gb
[5] = ~0;

439 
	gb
[6] = ~0;

440 
	gb
[7] = ~0;

443 #ñi‡
LONG_MAX
 == 9223372036854775807L

445 
	gb
[4] = (sig√d Ë(
v
 >> 32);

446 
	gb
[5] = (sig√d Ë(
v
 >> 40);

447 
	gb
[6] = (sig√d Ë(
v
 >> 48);

448 
	gb
[7] = (sig√d Ë(
v
 >> 56);

452 #îr‹ 
wrôe
<
T
> (T &
out
, sig√d 
v
Ë
nŸ
 
im∂emíãd


456 
	gwrôeSig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 8);

460 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

462 
wrôe
 (
T
 &
out
, 
v
)

464 
	gb
[8];

466 
	gb
[0] = (Ë(
v
);

467 
	gb
[1] = (Ë(
v
 >> 8);

468 
	gb
[2] = (Ë(
v
 >> 16);

469 
	gb
[3] = (Ë(
v
 >> 24);

471 #i‡
ULONG_MAX
 == 4294967295U

473 
	gb
[4] = 0;

474 
	gb
[5] = 0;

475 
	gb
[6] = 0;

476 
	gb
[7] = 0;

478 #ñi‡
ULONG_MAX
 == 18446744073709551615LU

480 
	gb
[4] = (Ë(
v
 >> 32);

481 
	gb
[5] = (Ë(
v
 >> 40);

482 
	gb
[6] = (Ë(
v
 >> 48);

483 
	gb
[7] = (Ë(
v
 >> 56);

487 #îr‹ 
wrôe
<
T
> (T &
out
, 
v
Ë
nŸ
 
im∂emíãd


491 
	gwrôeUnsig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 8);

495 #i‡
ULONG_MAX
 != 18446744073709551615LU

497 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

499 
wrôe
 (
T
 &
out
, 
I¡64
 
v
)

501 
	gb
[8];

503 
	gb
[0] = (Ë(
v
);

504 
	gb
[1] = (Ë(
v
 >> 8);

505 
	gb
[2] = (Ë(
v
 >> 16);

506 
	gb
[3] = (Ë(
v
 >> 24);

507 
	gb
[4] = (Ë(
v
 >> 32);

508 
	gb
[5] = (Ë(
v
 >> 40);

509 
	gb
[6] = (Ë(
v
 >> 48);

510 
	gb
[7] = (Ë(
v
 >> 56);

512 
	gwrôeUnsig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 8);

518 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

520 
wrôe
 (
T
 &
out
, 
v
)

522 uni⁄ {
	gi
; 
	gf
;} 
	gu
;

523 
	gu
.
	gf
 = 
v
;

525 
	gb
[4];

527 
	gb
[0] = (Ë(
u
.
i
);

528 
	gb
[1] = (Ë(
u
.
i
 >> 8);

529 
	gb
[2] = (Ë(
u
.
i
 >> 16);

530 
	gb
[3] = (Ë(
u
.
i
 >> 24);

532 
	gwrôeUnsig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 4);

536 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

538 
wrôe
 (
T
 &
out
, 
v
)

540 uni⁄ {
I¡64
 
	gi
; 
	gd
;} 
	gu
;

541 
	gu
.
	gd
 = 
v
;

543 
	gb
[8];

545 
	gb
[0] = (Ë(
u
.
i
);

546 
	gb
[1] = (Ë(
u
.
i
 >> 8);

547 
	gb
[2] = (Ë(
u
.
i
 >> 16);

548 
	gb
[3] = (Ë(
u
.
i
 >> 24);

549 
	gb
[4] = (Ë(
u
.
i
 >> 32);

550 
	gb
[5] = (Ë(
u
.
i
 >> 40);

551 
	gb
[6] = (Ë(
u
.
i
 >> 48);

552 
	gb
[7] = (Ë(
u
.
i
 >> 56);

554 
	gwrôeUnsig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 8);

558 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

559 
ölöe
 

560 
wrôe
 (
T
 &
out
, 
hÆf
 
v
)

562 
	gb
[2];

564 
	gb
[0] = (Ë(
v
.
bôs
());

565 
	gb
[1] = (Ë(
v
.
bôs
() >> 8);

567 
	gwrôeUnsig√dCh¨s
<
	gS
> (
	gout
, 
	gb
, 2);

571 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

572 
ölöe
 

573 
wrôe
 (
T
 &
out
, c⁄° 
v
[], 
n
)

575 
	gS
::
wrôeCh¨s
 (
out
, 
v
, 
n
);

579 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

581 
wrôe
 (
T
 &
out
, c⁄° 
v
[])

583 *
	gv
)

585 
	gS
::
wrôeCh¨s
 (
out
, 
v
, 1);

586 ++
	gv
;

589 
	gS
::
wrôeCh¨s
 (
out
, 
v
, 1);

593 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

595 
∑d
 (
T
 &
out
, 
n
)

597 
	gi
 = 0; i < 
	gn
; i++)

599 c⁄° 
	gc
 = 0;

600 
	gS
::
wrôeCh¨s
 (
out
, &
c
, 1);

605 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

606 
ölöe
 

607 
ªad
 (
T
 &
ö
, 
boﬁ
 &
v
)

609 
	gc
;

611 
	gS
::
ªadCh¨s
 (
ö
, &
c
, 1);

612 
	gv
 = !!
c
;

616 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

617 
ölöe
 

618 
ªad
 (
T
 &
ö
, &
v
)

620 
	gS
::
ªadCh¨s
 (
ö
, &
v
, 1);

624 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

625 
ölöe
 

626 
ªad
 (
T
 &
ö
, sig√d &
v
)

628 
	gªadSig√dCh¨s
<
	gS
> (
	gö
, &
	gv
, 1);

632 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

633 
ölöe
 

634 
ªad
 (
T
 &
ö
, &
v
)

636 
	gªadUnsig√dCh¨s
<
	gS
> (
	gö
, &
	gv
, 1);

640 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

642 
ªad
 (
T
 &
ö
, sig√d &
v
)

644 sig√d 
	gb
[2];

646 
	gªadSig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 2);

648 
	gv
 = (
b
[0] & 0x00ff) |

649 (
b
[1] << 8);

653 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

655 
ªad
 (
T
 &
ö
, &
v
)

657 
	gb
[2];

659 
	gªadUnsig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 2);

661 
	gv
 = (
b
[0] & 0x00ff) |

662 (
b
[1] << 8);

666 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

668 
ªad
 (
T
 &
ö
, sig√d &
v
)

670 sig√d 
	gb
[4];

672 
	gªadSig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 4);

674 
	gv
 = (
b
[0] & 0x000000ff) |

675 ((
b
[1] << 8) & 0x0000ff00) |

676 ((
b
[2] << 16) & 0x00ff0000) |

677 (
b
[3] << 24);

681 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

683 
ªad
 (
T
 &
ö
, &
v
)

685 
	gb
[4];

687 
	gªadUnsig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 4);

689 
	gv
 = (
b
[0] & 0x000000ff) |

690 ((
b
[1] << 8) & 0x0000ff00) |

691 ((
b
[2] << 16) & 0x00ff0000) |

692 (
b
[3] << 24);

696 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

698 
ªad
 (
T
 &
ö
, sig√d &
v
)

700 sig√d 
	gb
[8];

702 
	gªadSig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 8);

704 #i‡
LONG_MAX
 == 2147483647

706 
	gv
 = (
b
[0] & 0x000000ff) |

707 ((
b
[1] << 8) & 0x0000ff00) |

708 ((
b
[2] << 16) & 0x00ff0000) |

709 (
b
[3] << 24);

711 i‡(–
	gb
[4] || b[5] || b[6] || b[7]) &&

712 (~
	gb
[4] || ~b[5] || ~b[6] || ~b[7]))

714 
throw
 
	gIex
::
OvîÊowExc
 ("Long int overflow -ÑeadáÜarge "

718 #ñi‡
LONG_MAX
 == 9223372036854775807L

720 
	gv
 = ((Ë
b
[0] & 0x00000000000000ff) |

721 (((Ë
b
[1] << 8) & 0x000000000000ff00) |

722 (((Ë
b
[2] << 16) & 0x0000000000ff0000) |

723 (((Ë
b
[3] << 24) & 0x00000000ff000000) |

724 (((Ë
b
[4] << 32) & 0x000000ff00000000) |

725 (((Ë
b
[5] << 40) & 0x0000ff0000000000) |

726 (((Ë
b
[6] << 48) & 0x00ff000000000000) |

727 ((Ë
b
[7] << 56);

731 #îr‹ 
ªad
<
T
> (T &
ö
, sig√d &
v
Ë
nŸ
 
im∂emíãd


737 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

739 
ªad
 (
T
 &
ö
, &
v
)

741 
	gb
[8];

743 
	gªadUnsig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 8);

745 #i‡
ULONG_MAX
 == 4294967295U

747 
	gv
 = (
b
[0] & 0x000000ff) |

748 ((
b
[1] << 8) & 0x0000ff00) |

749 ((
b
[2] << 16) & 0x00ff0000) |

750 (
b
[3] << 24);

752 i‡(
	gb
[4] || b[5] || b[6] || b[7])

754 
throw
 
	gIex
::
OvîÊowExc
 ("Long int overflow -ÑeadáÜarge "

758 #ñi‡
ULONG_MAX
 == 18446744073709551615LU

760 
	gv
 = ((Ë
b
[0] & 0x00000000000000ff) |

761 (((Ë
b
[1] << 8) & 0x000000000000ff00) |

762 (((Ë
b
[2] << 16) & 0x0000000000ff0000) |

763 (((Ë
b
[3] << 24) & 0x00000000ff000000) |

764 (((Ë
b
[4] << 32) & 0x000000ff00000000) |

765 (((Ë
b
[5] << 40) & 0x0000ff0000000000) |

766 (((Ë
b
[6] << 48) & 0x00ff000000000000) |

767 ((Ë
b
[7] << 56);

771 #îr‹ 
ªad
<
T
> (T &
ö
, &
v
Ë
nŸ
 
im∂emíãd


777 #i‡
ULONG_MAX
 != 18446744073709551615LU

779 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

781 
ªad
 (
T
 &
ö
, 
I¡64
 &
v
)

783 
	gb
[8];

785 
	gªadUnsig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 8);

787 
	gv
 = ((
I¡64
Ë
b
[0] & 0x00000000000000ffLL) |

788 (((
I¡64
Ë
b
[1] << 8) & 0x000000000000ff00LL) |

789 (((
I¡64
Ë
b
[2] << 16) & 0x0000000000ff0000LL) |

790 (((
I¡64
Ë
b
[3] << 24) & 0x00000000ff000000LL) |

791 (((
I¡64
Ë
b
[4] << 32) & 0x000000ff00000000LL) |

792 (((
I¡64
Ë
b
[5] << 40) & 0x0000ff0000000000LL) |

793 (((
I¡64
Ë
b
[6] << 48) & 0x00ff000000000000LL) |

794 ((
I¡64
Ë
b
[7] << 56);

800 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

802 
ªad
 (
T
 &
ö
, &
v
)

804 
	gb
[4];

806 
	gªadUnsig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 4);

808 uni⁄ {
	gi
; 
	gf
;} 
	gu
;

810 
	gu
.
	gi
 = (
b
[0] & 0x000000ff) |

811 ((
b
[1] << 8) & 0x0000ff00) |

812 ((
b
[2] << 16) & 0x00ff0000) |

813 (
b
[3] << 24);

815 
	gv
 = 
u
.
f
;

819 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

821 
ªad
 (
T
 &
ö
, &
v
)

823 
	gb
[8];

825 
	gªadUnsig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 8);

827 uni⁄ {
I¡64
 
	gi
; 
	gd
;} 
	gu
;

829 
	gu
.
	gi
 = ((
I¡64
Ë
b
[0] & 0x00000000000000ffULL) |

830 (((
I¡64
Ë
b
[1] << 8) & 0x000000000000ff00ULL) |

831 (((
I¡64
Ë
b
[2] << 16) & 0x0000000000ff0000ULL) |

832 (((
I¡64
Ë
b
[3] << 24) & 0x00000000ff000000ULL) |

833 (((
I¡64
Ë
b
[4] << 32) & 0x000000ff00000000ULL) |

834 (((
I¡64
Ë
b
[5] << 40) & 0x0000ff0000000000ULL) |

835 (((
I¡64
Ë
b
[6] << 48) & 0x00ff000000000000ULL) |

836 ((
I¡64
Ë
b
[7] << 56);

838 
	gv
 = 
u
.
d
;

842 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

843 
ölöe
 

844 
ªad
 (
T
 &
ö
, 
hÆf
 &
v
)

846 
	gb
[2];

848 
	gªadUnsig√dCh¨s
<
	gS
> (
	gö
, 
	gb
, 2);

850 
	gv
.
£tBôs
 ((
b
[0] & 0x00ff) | (b[1] << 8));

854 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

855 
ölöe
 

856 
ªad
 (
T
 &
ö
, 
v
[], 
n
)

858 
	gS
::
ªadCh¨s
 (
ö
, 
v
, 
n
);

862 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

864 
ªad
 (
T
 &
ö
, 
n
, 
v
[])

866 
	gn
 >= 0)

868 
S
::
ªadCh¨s
 (
ö
, 
v
, 1);

870 i‡(*
	gv
 == 0)

873 --
	gn
;

874 ++
	gv
;

879 
	gãm∂©e
 <
˛ass
 
	gS
, cœs†
	gT
>

881 
skù
 (
T
 &
ö
, 
n
)

883 
	gc
[1024];

885 
	gn
 >(Ë (
c
))

887 i‡(!
S
::
ªadCh¨s
 (
ö
, 
c
,  (c)))

890 
	gn
 - (
c
);

893 i‡(
	gn
 >= 1)

894 
S
::
ªadCh¨s
 (
ö
, 
c
, 
n
);

898 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <
	gboﬁ
> () { 1;}

899 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <> () { 1;}

900 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <signed > () { 1;}

901 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <> () { 1;}

902 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <signed > () { 2;}

903 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <> () { 2;}

904 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <signed > () { 4;}

905 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <> () { 4;}

906 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <signed > () { 8;}

907 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <> () { 8;}

908 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <> () { 4;}

909 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <> () { 8;}

910 
	gãm∂©e
 <> 
ölöe
 
	gsize
 <
	ghÆf
> () { 2;}

	@shared/openexr-mac/include/OpenEXR/OpenEXRConfig.h

7 
	#HAVE_PTHREAD
 1

	)

22 
	#HAVE_DARWIN
 1

	)

47 
	#HAVE_COMPLETE_IOMANIP
 1

	)

	@shared/openexr-mac/include/OpenEXR/half.h

85 #i‚de‡
_HALF_H_


86 
	#_HALF_H_


	)

88 
	~<io°ªam
>

90 ˛as†
	chÆf


92 
	mpublic
:

98 
hÆf
 ();

99 
hÆf
 (
f
);

106 
›î©‹
 () const;

113 
hÆf
 
›î©‹
 - () const;

120 
hÆf
 & 
›î©‹
 = (hÆ‡
h
);

121 
hÆf
 & 
›î©‹
 = (
f
);

123 
hÆf
 & 
›î©‹
 +(hÆ‡
h
);

124 
hÆf
 & 
›î©‹
 +(
f
);

126 
hÆf
 & 
›î©‹
 -(hÆ‡
h
);

127 
hÆf
 & 
›î©‹
 -(
f
);

129 
hÆf
 & 
›î©‹
 *(hÆ‡
h
);

130 
hÆf
 & 
›î©‹
 *(
f
);

132 
hÆf
 & 
›î©‹
 /(hÆ‡
h
);

133 
hÆf
 & 
›î©‹
 /(
f
);

142 
hÆf
 
	$round
 (
n
) const;

166 
boﬁ
 
	$isFöôe
 () const;

167 
boﬁ
 
	$isN‹mÆized
 () const;

168 
boﬁ
 
	$isDí‹mÆized
 () const;

169 
boﬁ
 
	$isZîo
 () const;

170 
boﬁ
 
	$isN™
 () const;

171 
boﬁ
 
	$isInföôy
 () const;

172 
boﬁ
 
	$isNeg©ive
 () const;

189 
hÆf
 
	`posInf
 ();

190 
hÆf
 
	`√gInf
 ();

191 
hÆf
 
	`qN™
 ();

192 
hÆf
 
	`sN™
 ();

199 
	$bôs
 () const;

200 
	`£tBôs
 (
bôs
);

203 
public
:

205 
	uuif


207 
i
;

208 
f
;

211 
¥iv©e
:

213 
	`c⁄vît
 (
i
);

214 
	`ovîÊow
 ();

216 
_h
;

222 #i‚de‡
OPENEXR_DLL


223 c⁄° 
uif
 
_toFlﬂt
[1 << 16];

224 c⁄° 
_eLut
[1 << 9];

226 
	}
};

228 #i‡
deföed
(
OPENEXR_DLL
)

232 #i‡
deföed
(
HALF_EXPORTS
)

233 
	$__de˛•ec
(
dŒexp‹t
Ë
hÆf
::
uif
 
_toFlﬂt
[1 << 16];

234 
	$__de˛•ec
(
dŒexp‹t
Ë
_eLut
[1 << 9];

236 
	$__de˛•ec
(
dŒimp‹t
Ë
hÆf
::
uif
 
_toFlﬂt
[1 << 16];

237 
	$__de˛•ec
(
dŒimp‹t
Ë
_eLut
[1 << 9];

246 
°d
::
o°ªam
 & 
›î©‹
 << (°d::o°ªam &
os
, 
hÆf
 
h
);

247 
°d
::
i°ªam
 & 
›î©‹
 >> (°d::i°ªam &
is
, 
hÆf
 &
h
);

254 
	`¥ötBôs
 (
°d
::
o°ªam
 &
os
, 
hÆf
 
h
);

255 
	`¥ötBôs
 (
°d
::
o°ªam
 &
os
, 
f
);

256 
	`¥ötBôs
 (
c
[19], 
hÆf
 
h
);

257 
	`¥ötBôs
 (
c
[35], 
f
);

268 #i‡(
deföed
 
_WIN32
 || deföed 
_WIN64
Ë&& deföed 
_MSC_VER


270 
	#HALF_MIN
 5.96046448e-08f

271 

	)

272 
	#HALF_NRM_MIN
 6.10351562e-05f

273 

	)

274 
	#HALF_MAX
 65504.0f

275 

	)

276 
	#HALF_EPSILON
 0.00097656f

278 #ñ£

	)

280 
	#HALF_MIN
 5.96046448e-08

281 

	)

282 
	#HALF_NRM_MIN
 6.10351562e-05

283 

	)

284 
	#HALF_MAX
 65504.0

285 

	)

286 
	#HALF_EPSILON
 0.00097656

289 

	)

291 
	#HALF_MANT_DIG
 11

293 

	)

294 
	#HALF_DIG
 2

296 

	)

297 
	#HALF_RADIX
 2

298 

	)

299 
	#HALF_MIN_EXP
 -13

303 

	)

304 
	#HALF_MAX_EXP
 16

308 

	)

309 
	#HALF_MIN_10_EXP
 -4

312 

	)

313 
	#HALF_MAX_10_EXP
 4

316 

	)

434 
ölöe


435 
hÆf
::
	$hÆf
 ()

438 
	}
}

445 
ölöe


446 
hÆf
::
	$hÆf
 (
f
)

448 i‡(
f
 == 0)

455 
_h
 = 0;

475 
uif
 
x
;

477 
x
.
f
 = f;

479 
e
 = (
x
.
i
 >> 23) & 0x000001ff;

481 
e
 = 
_eLut
[e];

483 i‡(
e
)

490 
_h
 = 
e
 + (((
x
.
i
 & 0x007fffff) + 0x00001000) >> 13);

498 
_h
 = 
	`c⁄vît
 (
x
.
i
);

501 
	}
}

508 
ölöe


509 
	ghÆf
::
›î©‹
 () const

511  
_toFlﬂt
[
_h
].
f
;

512 
	}
}

519 
ölöe
 
hÆf


520 
	ghÆf
::
	$round
 (
n
) const

526 i‡(
n
 >= 10)

527  *
this
;

534 
s
 = 
_h
 & 0x8000;

535 
e
 = 
_h
 & 0x7fff;

544 
e
 >>9 - 
n
;

545 
e
 +=É & 1;

546 
e
 <<9 - 
n
;

552 i‡(
e
 >= 0x7c00)

558 
e
 = 
_h
;

559 
e
 >>10 - 
n
;

560 
e
 <<10 - 
n
;

567 
hÆf
 
h
;

568 
h
.
_h
 = 
s
 | 
e
;

570  
h
;

571 
	}
}

578 
ölöe
 
hÆf


579 
	ghÆf
::
›î©‹
 - () const

581 
hÆf
 
h
;

582 
	gh
.
	g_h
 = 
_h
 ^ 0x8000;

583  
	gh
;

587 
ölöe
 
	ghÆf
 &

588 
	ghÆf
::
›î©‹
 = (
hÆf
 
h
)

590 
_h
 = 
h
._h;

591  *
	gthis
;

595 
ölöe
 
	ghÆf
 &

596 
	ghÆf
::
›î©‹
 = (
f
)

598 *
this
 = 
hÆf
 (
f
);

599  *
	gthis
;

603 
ölöe
 
	ghÆf
 &

604 
	ghÆf
::
›î©‹
 +(
hÆf
 
h
)

606 *
this
 = 
hÆf
 ((*thisË+ (
h
));

607  *
	gthis
;

611 
ölöe
 
	ghÆf
 &

612 
	ghÆf
::
›î©‹
 +(
f
)

614 *
this
 = 
hÆf
 ((*thisË+ 
f
);

615  *
	gthis
;

619 
ölöe
 
	ghÆf
 &

620 
	ghÆf
::
›î©‹
 -(
hÆf
 
h
)

622 *
this
 = 
hÆf
 ((*thisË- (
h
));

623  *
	gthis
;

627 
ölöe
 
	ghÆf
 &

628 
	ghÆf
::
›î©‹
 -(
f
)

630 *
this
 = 
hÆf
 ((*thisË- 
f
);

631  *
	gthis
;

635 
ölöe
 
	ghÆf
 &

636 
	ghÆf
::
›î©‹
 *(
hÆf
 
h
)

638 *
this
 = 
hÆf
 ((*thisË* (
h
));

639  *
	gthis
;

643 
ölöe
 
	ghÆf
 &

644 
	ghÆf
::
›î©‹
 *(
f
)

646 *
this
 = 
hÆf
 ((*thisË* 
f
);

647  *
	gthis
;

651 
ölöe
 
	ghÆf
 &

652 
	ghÆf
::
›î©‹
 /(
hÆf
 
h
)

654 *
this
 = 
hÆf
 ((*thisË/ (
h
));

655  *
	gthis
;

659 
ölöe
 
	ghÆf
 &

660 
	ghÆf
::
›î©‹
 /(
f
)

662 *
this
 = 
hÆf
 ((*thisË/ 
f
);

663  *
	gthis
;

667 
ölöe
 
boﬁ


668 
	ghÆf
::
	$isFöôe
 () const

670 
e
 = (
_h
 >> 10) & 0x001f;

671  
e
 < 31;

672 
	}
}

675 
ölöe
 
boﬁ


676 
	ghÆf
::
	$isN‹mÆized
 () const

678 
e
 = (
_h
 >> 10) & 0x001f;

679  
e
 > 0 &&É < 31;

680 
	}
}

683 
ölöe
 
boﬁ


684 
	ghÆf
::
	$isDí‹mÆized
 () const

686 
e
 = (
_h
 >> 10) & 0x001f;

687 
m
 = 
_h
 & 0x3ff;

688  
e
 =0 && 
m
 != 0;

689 
	}
}

692 
ölöe
 
boﬁ


693 
	ghÆf
::
	$isZîo
 () const

695  (
_h
 & 0x7fff) == 0;

696 
	}
}

699 
ölöe
 
boﬁ


700 
	ghÆf
::
	$isN™
 () const

702 
e
 = (
_h
 >> 10) & 0x001f;

703 
m
 = 
_h
 & 0x3ff;

704  
e
 =31 && 
m
 != 0;

705 
	}
}

708 
ölöe
 
boﬁ


709 
	ghÆf
::
	$isInföôy
 () const

711 
e
 = (
_h
 >> 10) & 0x001f;

712 
m
 = 
_h
 & 0x3ff;

713  
e
 =31 && 
m
 == 0;

714 
	}
}

717 
ölöe
 
boﬁ


718 
	ghÆf
::
	$isNeg©ive
 () const

720  (
_h
 & 0x8000) != 0;

721 
	}
}

724 
ölöe
 
hÆf


725 
	ghÆf
::
	$posInf
 ()

727 
hÆf
 
h
;

728 
h
.
_h
 = 0x7c00;

729  
h
;

730 
	}
}

733 
ölöe
 
hÆf


734 
	ghÆf
::
	$√gInf
 ()

736 
hÆf
 
h
;

737 
h
.
_h
 = 0xfc00;

738  
h
;

739 
	}
}

742 
ölöe
 
hÆf


743 
	ghÆf
::
	$qN™
 ()

745 
hÆf
 
h
;

746 
h
.
_h
 = 0x7fff;

747  
h
;

748 
	}
}

751 
ölöe
 
hÆf


752 
	ghÆf
::
	$sN™
 ()

754 
hÆf
 
h
;

755 
h
.
_h
 = 0x7dff;

756  
h
;

757 
	}
}

760 
ölöe
 

761 
	ghÆf
::
	$bôs
 () const

763  
_h
;

764 
	}
}

767 
ölöe
 

768 
	ghÆf
::
	$£tBôs
 (
bôs
)

770 
_h
 = 
bôs
;

771 
	}
}

773 #unde‡
HALF_EXPORT_CONST


	@shared/openexr-mac/include/OpenEXR/halfFunction.h

83 #i‚de‡
_HALF_FUNCTION_H_


84 
	#_HALF_FUNCTION_H_


	)

86 
	~<Êﬂt.h
>

87 
	~"hÆf.h
"

90 
	gãm∂©e
 <
˛ass
 
	gT
>

91 ˛as†
	chÆfFun˘i⁄


93 
	mpublic
:

99 
ãm∂©e
 <
˛ass
 
Fun˘i⁄
>

100 
hÆfFun˘i⁄
 (
Fun˘i⁄
 
f
,

101 
hÆf
 
domaöMö
 = -
HALF_MAX
,

102 
hÆf
 
domaöMax
 = 
HALF_MAX
,

103 
T
 
deÁu…VÆue
 = 0,

104 
T
 
posInfVÆue
 = 0,

105 
T
 
√gInfVÆue
 = 0,

106 
T
 
«nVÆue
 = 0);

112 
T
 
	$›î©‹
 (Ë(
hÆf
 
x
) const;

114 
¥iv©e
:

116 
T
 
_lut
[1 << 16];

124 
ãm∂©e
 <
˛ass
 
T
>

125 
ãm∂©e
 <
˛ass
 
Fun˘i⁄
>

126 
hÆfFun˘i⁄
<
T
>::
	$hÆfFun˘i⁄
 (
Fun˘i⁄
 
f
,

127 
hÆf
 
domaöMö
,

128 
hÆf
 
domaöMax
,

129 
T
 
deÁu…VÆue
,

130 
T
 
posInfVÆue
,

131 
T
 
√gInfVÆue
,

132 
T
 
«nVÆue
)

134 
i
 = 0; i < (1 << 16); i++)

136 
hÆf
 
x
;

137 
x
.
	`£tBôs
 (
i
);

139 i‡(
x
.
	`isN™
())

140 
_lut
[
i
] = 
«nVÆue
;

141 i‡(
x
.
	`isInföôy
())

142 
_lut
[
i
] = 
x
.
	`isNeg©ive
()? 
√gInfVÆue
: 
posInfVÆue
;

143 i‡(
x
 < 
domaöMö
 || x > 
domaöMax
)

144 
_lut
[
i
] = 
deÁu…VÆue
;

146 
_lut
[
i
] = 
	`f
 (
x
);

148 
	}
}

151 
	gãm∂©e
 <
˛ass
 
	gT
>

152 
ölöe
 
T


153 
	ghÆfFun˘i⁄
<
	gT
>::
	$›î©‹
 (Ë(
hÆf
 
x
) const

155  
_lut
[
x
.
	`bôs
()];

156 
	}
}

	@shared/openexr-mac/include/OpenEXR/halfLimits.h

41 #i‚de‡
INCLUDED_HALF_LIMITS_H


42 
	#INCLUDED_HALF_LIMITS_H


	)

51 
	~<limôs
>

52 
	~"hÆf.h
"

54 
«me•a˚
 
	g°d
 {

56 
	gãm∂©e
 <>

57 
˛ass
 
	gnumîic_limôs
 <
	ghÆf
>

59 
	gpublic
:

61 c⁄° 
boﬁ
 
is_•ecülized
 = 
åue
;

63 
hÆf
 
mö
 (Ë
throw
 (Ë{ 
	gHALF_NRM_MIN
;}

64 
hÆf
 
max
 (Ë
throw
 (Ë{ 
	gHALF_MAX
;}

66 c⁄° 
	gdigôs
 = 
HALF_MANT_DIG
;

67 c⁄° 
	gdigôs10
 = 
HALF_DIG
;

68 c⁄° 
boﬁ
 
	gis_sig√d
 = 
åue
;

69 c⁄° 
boﬁ
 
	gis_öãgî
 = 
Ál£
;

70 c⁄° 
boﬁ
 
	gis_exa˘
 = 
Ál£
;

71 c⁄° 
	gødix
 = 
HALF_RADIX
;

72 
hÆf
 
ïsû⁄
 (Ë
throw
 (Ë{ 
	gHALF_EPSILON
;}

73 
hÆf
 
round_îr‹
 (Ë
throw
 (Ë{ 
	gHALF_EPSILON
 / 2;}

75 c⁄° 
	gmö_exp⁄ít
 = 
HALF_MIN_EXP
;

76 c⁄° 
	gmö_exp⁄ít10
 = 
HALF_MIN_10_EXP
;

77 c⁄° 
	gmax_exp⁄ít
 = 
HALF_MAX_EXP
;

78 c⁄° 
	gmax_exp⁄ít10
 = 
HALF_MAX_10_EXP
;

80 c⁄° 
boﬁ
 
	ghas_öföôy
 = 
åue
;

81 c⁄° 
boﬁ
 
	ghas_quõt_NaN
 = 
åue
;

82 c⁄° 
boﬁ
 
	ghas_sig«lög_NaN
 = 
åue
;

83 c⁄° 
Êﬂt_dí‹m_°yÀ
 
	ghas_dí‹m
 = 
dí‹m_¥e£¡
;

84 c⁄° 
boﬁ
 
	ghas_dí‹m_loss
 = 
Ál£
;

85 
hÆf
 
öföôy
 (Ë
throw
 (Ë{ 
	ghÆf
::
posInf
();}

86 
hÆf
 
quõt_NaN
 (Ë
throw
 (Ë{ 
	ghÆf
::
qN™
();}

87 
hÆf
 
sig«lög_NaN
 (Ë
throw
 (Ë{ 
	ghÆf
::
sN™
();}

88 
hÆf
 
dí‹m_mö
 (Ë
throw
 (Ë{ 
	gHALF_MIN
;}

90 c⁄° 
boﬁ
 
	gis_õc559
 = 
Ál£
;

91 c⁄° 
boﬁ
 
	gis_bounded
 = 
Ál£
;

92 c⁄° 
boﬁ
 
	gis_modulo
 = 
Ál£
;

94 c⁄° 
boﬁ
 
	gå≠s
 = 
åue
;

95 c⁄° 
boﬁ
 
	gtöy√ss_bef‹e
 = 
Ál£
;

96 c⁄° 
Êﬂt_round_°yÀ
 
	ground_°yÀ
 = 
round_to_√¨e°
;

	@shared/stopwatch.h

10 #i‚de‡
STOPWATCH_HEADER


11 
	#STOPWATCH_HEADER


	)

13 #ifde‡
WIN32


14 
	~<wödows.h
>

16 
	~<sys/time.h
>

25 ˛as†
	cCSt›W©ch


27 
	mpublic
:

28 
	$CSt›W©ch
()

30 #ifde‡
WIN32


31 
	`QuîyPîf‹m™˚Fªquícy
(&
m_Cou¡îFªquícy
);

32 
	`QuîyPîf‹m™˚Cou¡î
(&
m_La°Cou¡
);

34 
	`gëtimeofday
(&
m_La°Cou¡
, 0);

39 
ölöe
 
	$Re£t
()

41 #ifde‡
WIN32


42 
	`QuîyPîf‹m™˚Cou¡î
(&
m_La°Cou¡
);

44 
	`gëtimeofday
(&
m_La°Cou¡
, 0);

46 
	}
}

49 
	$GëEœp£dSec⁄ds
()

52 #ifde‡
WIN32


53 
LARGE_INTEGER
 
lCuºít
;

54 
	`QuîyPîf‹m™˚Cou¡î
(&
lCuºít
);

56  ((
lCuºít
.
QuadP¨t
 - 
m_La°Cou¡
.QuadPart) /

57 (
m_Cou¡îFªquícy
.
QuadP¨t
));

59 
timevÆ
 
lcuºít
;

60 
	`gëtimeofday
(&
lcuºít
, 0);

61 
fSec⁄ds
 = ()(
lcuºít
.
tv_£c
 - 
m_La°Cou¡
.tv_sec);

62 
fFø˘i⁄
 = ()(
lcuºít
.
tv_u£c
 - 
m_La°Cou¡
.tv_usec) * 0.000001f;

63  
fSec⁄ds
 + 
fFø˘i⁄
;

65 
	}
}

67 
	g¥Ÿe˘ed
:

68 #ifde‡
WIN32


69 
LARGE_INTEGER
 
m_Cou¡îFªquícy
;

70 
LARGE_INTEGER
 
	gm_La°Cou¡
;

72 
timevÆ
 
	gm_La°Cou¡
;

	@shared/wglext.h

1 #i‚de‡
__wgÀxt_h_


2 
	#__wgÀxt_h_


	)

4 #ifde‡
__˝lu•lus


37 #i‡
deföed
(
_WIN32
Ë&& !deföed(
APIENTRY
Ë&& !deföed(
__CYGWIN__
Ë&& !deföed(
__SCITECH_SNAP__
)

38 
	#WIN32_LEAN_AND_MEAN
 1

	)

39 
	~<wödows.h
>

42 #i‚de‡
APIENTRY


43 
	#APIENTRY


	)

45 #i‚de‡
APIENTRYP


46 
	#APIENTRYP
 
APIENTRY
 *

	)

48 #i‚de‡
GLAPI


49 
	#GLAPI
 

	)

57 
	#WGL_WGLEXT_VERSION
 4

	)

59 #i‚de‡
WGL_ARB_buf„r_ªgi⁄


60 
	#WGL_FRONT_COLOR_BUFFER_BIT_ARB
 0x00000001

	)

61 
	#WGL_BACK_COLOR_BUFFER_BIT_ARB
 0x00000002

	)

62 
	#WGL_DEPTH_BUFFER_BIT_ARB
 0x00000004

	)

63 
	#WGL_STENCIL_BUFFER_BIT_ARB
 0x00000008

	)

66 #i‚de‡
WGL_ARB_mu…ißm∂e


67 
	#WGL_SAMPLE_BUFFERS_ARB
 0x2041

	)

68 
	#WGL_SAMPLES_ARB
 0x2042

	)

71 #i‚de‡
WGL_ARB_exãnsi⁄s_°rög


74 #i‚de‡
WGL_ARB_pixñ_f‹m©


75 
	#WGL_NUMBER_PIXEL_FORMATS_ARB
 0x2000

	)

76 
	#WGL_DRAW_TO_WINDOW_ARB
 0x2001

	)

77 
	#WGL_DRAW_TO_BITMAP_ARB
 0x2002

	)

78 
	#WGL_ACCELERATION_ARB
 0x2003

	)

79 
	#WGL_NEED_PALETTE_ARB
 0x2004

	)

80 
	#WGL_NEED_SYSTEM_PALETTE_ARB
 0x2005

	)

81 
	#WGL_SWAP_LAYER_BUFFERS_ARB
 0x2006

	)

82 
	#WGL_SWAP_METHOD_ARB
 0x2007

	)

83 
	#WGL_NUMBER_OVERLAYS_ARB
 0x2008

	)

84 
	#WGL_NUMBER_UNDERLAYS_ARB
 0x2009

	)

85 
	#WGL_TRANSPARENT_ARB
 0x200A

	)

86 
	#WGL_TRANSPARENT_RED_VALUE_ARB
 0x2037

	)

87 
	#WGL_TRANSPARENT_GREEN_VALUE_ARB
 0x2038

	)

88 
	#WGL_TRANSPARENT_BLUE_VALUE_ARB
 0x2039

	)

89 
	#WGL_TRANSPARENT_ALPHA_VALUE_ARB
 0x203A

	)

90 
	#WGL_TRANSPARENT_INDEX_VALUE_ARB
 0x203B

	)

91 
	#WGL_SHARE_DEPTH_ARB
 0x200C

	)

92 
	#WGL_SHARE_STENCIL_ARB
 0x200D

	)

93 
	#WGL_SHARE_ACCUM_ARB
 0x200E

	)

94 
	#WGL_SUPPORT_GDI_ARB
 0x200F

	)

95 
	#WGL_SUPPORT_OPENGL_ARB
 0x2010

	)

96 
	#WGL_DOUBLE_BUFFER_ARB
 0x2011

	)

97 
	#WGL_STEREO_ARB
 0x2012

	)

98 
	#WGL_PIXEL_TYPE_ARB
 0x2013

	)

99 
	#WGL_COLOR_BITS_ARB
 0x2014

	)

100 
	#WGL_RED_BITS_ARB
 0x2015

	)

101 
	#WGL_RED_SHIFT_ARB
 0x2016

	)

102 
	#WGL_GREEN_BITS_ARB
 0x2017

	)

103 
	#WGL_GREEN_SHIFT_ARB
 0x2018

	)

104 
	#WGL_BLUE_BITS_ARB
 0x2019

	)

105 
	#WGL_BLUE_SHIFT_ARB
 0x201A

	)

106 
	#WGL_ALPHA_BITS_ARB
 0x201B

	)

107 
	#WGL_ALPHA_SHIFT_ARB
 0x201C

	)

108 
	#WGL_ACCUM_BITS_ARB
 0x201D

	)

109 
	#WGL_ACCUM_RED_BITS_ARB
 0x201E

	)

110 
	#WGL_ACCUM_GREEN_BITS_ARB
 0x201F

	)

111 
	#WGL_ACCUM_BLUE_BITS_ARB
 0x2020

	)

112 
	#WGL_ACCUM_ALPHA_BITS_ARB
 0x2021

	)

113 
	#WGL_DEPTH_BITS_ARB
 0x2022

	)

114 
	#WGL_STENCIL_BITS_ARB
 0x2023

	)

115 
	#WGL_AUX_BUFFERS_ARB
 0x2024

	)

116 
	#WGL_NO_ACCELERATION_ARB
 0x2025

	)

117 
	#WGL_GENERIC_ACCELERATION_ARB
 0x2026

	)

118 
	#WGL_FULL_ACCELERATION_ARB
 0x2027

	)

119 
	#WGL_SWAP_EXCHANGE_ARB
 0x2028

	)

120 
	#WGL_SWAP_COPY_ARB
 0x2029

	)

121 
	#WGL_SWAP_UNDEFINED_ARB
 0x202A

	)

122 
	#WGL_TYPE_RGBA_ARB
 0x202B

	)

123 
	#WGL_TYPE_COLORINDEX_ARB
 0x202C

	)

126 #i‚de‡
WGL_ARB_make_cuºít_ªad


127 
	#ERROR_INVALID_PIXEL_TYPE_ARB
 0x2043

	)

128 
	#ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB
 0x2054

	)

131 #i‚de‡
WGL_ARB_pbuf„r


132 
	#WGL_DRAW_TO_PBUFFER_ARB
 0x202D

	)

133 
	#WGL_MAX_PBUFFER_PIXELS_ARB
 0x202E

	)

134 
	#WGL_MAX_PBUFFER_WIDTH_ARB
 0x202F

	)

135 
	#WGL_MAX_PBUFFER_HEIGHT_ARB
 0x2030

	)

136 
	#WGL_PBUFFER_LARGEST_ARB
 0x2033

	)

137 
	#WGL_PBUFFER_WIDTH_ARB
 0x2034

	)

138 
	#WGL_PBUFFER_HEIGHT_ARB
 0x2035

	)

139 
	#WGL_PBUFFER_LOST_ARB
 0x2036

	)

142 #i‚de‡
WGL_ARB_ªndî_ãxtuª


143 
	#WGL_BIND_TO_TEXTURE_RGB_ARB
 0x2070

	)

144 
	#WGL_BIND_TO_TEXTURE_RGBA_ARB
 0x2071

	)

145 
	#WGL_TEXTURE_FORMAT_ARB
 0x2072

	)

146 
	#WGL_TEXTURE_TARGET_ARB
 0x2073

	)

147 
	#WGL_MIPMAP_TEXTURE_ARB
 0x2074

	)

148 
	#WGL_TEXTURE_RGB_ARB
 0x2075

	)

149 
	#WGL_TEXTURE_RGBA_ARB
 0x2076

	)

150 
	#WGL_NO_TEXTURE_ARB
 0x2077

	)

151 
	#WGL_TEXTURE_CUBE_MAP_ARB
 0x2078

	)

152 
	#WGL_TEXTURE_1D_ARB
 0x2079

	)

153 
	#WGL_TEXTURE_2D_ARB
 0x207A

	)

154 
	#WGL_MIPMAP_LEVEL_ARB
 0x207B

	)

155 
	#WGL_CUBE_MAP_FACE_ARB
 0x207C

	)

156 
	#WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
 0x207D

	)

157 
	#WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
 0x207E

	)

158 
	#WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
 0x207F

	)

159 
	#WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
 0x2080

	)

160 
	#WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
 0x2081

	)

161 
	#WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
 0x2082

	)

162 
	#WGL_FRONT_LEFT_ARB
 0x2083

	)

163 
	#WGL_FRONT_RIGHT_ARB
 0x2084

	)

164 
	#WGL_BACK_LEFT_ARB
 0x2085

	)

165 
	#WGL_BACK_RIGHT_ARB
 0x2086

	)

166 
	#WGL_AUX0_ARB
 0x2087

	)

167 
	#WGL_AUX1_ARB
 0x2088

	)

168 
	#WGL_AUX2_ARB
 0x2089

	)

169 
	#WGL_AUX3_ARB
 0x208A

	)

170 
	#WGL_AUX4_ARB
 0x208B

	)

171 
	#WGL_AUX5_ARB
 0x208C

	)

172 
	#WGL_AUX6_ARB
 0x208D

	)

173 
	#WGL_AUX7_ARB
 0x208E

	)

174 
	#WGL_AUX8_ARB
 0x208F

	)

175 
	#WGL_AUX9_ARB
 0x2090

	)

178 #i‚de‡
WGL_EXT_make_cuºít_ªad


179 
	#ERROR_INVALID_PIXEL_TYPE_EXT
 0x2043

	)

182 #i‚de‡
WGL_EXT_pixñ_f‹m©


183 
	#WGL_NUMBER_PIXEL_FORMATS_EXT
 0x2000

	)

184 
	#WGL_DRAW_TO_WINDOW_EXT
 0x2001

	)

185 
	#WGL_DRAW_TO_BITMAP_EXT
 0x2002

	)

186 
	#WGL_ACCELERATION_EXT
 0x2003

	)

187 
	#WGL_NEED_PALETTE_EXT
 0x2004

	)

188 
	#WGL_NEED_SYSTEM_PALETTE_EXT
 0x2005

	)

189 
	#WGL_SWAP_LAYER_BUFFERS_EXT
 0x2006

	)

190 
	#WGL_SWAP_METHOD_EXT
 0x2007

	)

191 
	#WGL_NUMBER_OVERLAYS_EXT
 0x2008

	)

192 
	#WGL_NUMBER_UNDERLAYS_EXT
 0x2009

	)

193 
	#WGL_TRANSPARENT_EXT
 0x200A

	)

194 
	#WGL_TRANSPARENT_VALUE_EXT
 0x200B

	)

195 
	#WGL_SHARE_DEPTH_EXT
 0x200C

	)

196 
	#WGL_SHARE_STENCIL_EXT
 0x200D

	)

197 
	#WGL_SHARE_ACCUM_EXT
 0x200E

	)

198 
	#WGL_SUPPORT_GDI_EXT
 0x200F

	)

199 
	#WGL_SUPPORT_OPENGL_EXT
 0x2010

	)

200 
	#WGL_DOUBLE_BUFFER_EXT
 0x2011

	)

201 
	#WGL_STEREO_EXT
 0x2012

	)

202 
	#WGL_PIXEL_TYPE_EXT
 0x2013

	)

203 
	#WGL_COLOR_BITS_EXT
 0x2014

	)

204 
	#WGL_RED_BITS_EXT
 0x2015

	)

205 
	#WGL_RED_SHIFT_EXT
 0x2016

	)

206 
	#WGL_GREEN_BITS_EXT
 0x2017

	)

207 
	#WGL_GREEN_SHIFT_EXT
 0x2018

	)

208 
	#WGL_BLUE_BITS_EXT
 0x2019

	)

209 
	#WGL_BLUE_SHIFT_EXT
 0x201A

	)

210 
	#WGL_ALPHA_BITS_EXT
 0x201B

	)

211 
	#WGL_ALPHA_SHIFT_EXT
 0x201C

	)

212 
	#WGL_ACCUM_BITS_EXT
 0x201D

	)

213 
	#WGL_ACCUM_RED_BITS_EXT
 0x201E

	)

214 
	#WGL_ACCUM_GREEN_BITS_EXT
 0x201F

	)

215 
	#WGL_ACCUM_BLUE_BITS_EXT
 0x2020

	)

216 
	#WGL_ACCUM_ALPHA_BITS_EXT
 0x2021

	)

217 
	#WGL_DEPTH_BITS_EXT
 0x2022

	)

218 
	#WGL_STENCIL_BITS_EXT
 0x2023

	)

219 
	#WGL_AUX_BUFFERS_EXT
 0x2024

	)

220 
	#WGL_NO_ACCELERATION_EXT
 0x2025

	)

221 
	#WGL_GENERIC_ACCELERATION_EXT
 0x2026

	)

222 
	#WGL_FULL_ACCELERATION_EXT
 0x2027

	)

223 
	#WGL_SWAP_EXCHANGE_EXT
 0x2028

	)

224 
	#WGL_SWAP_COPY_EXT
 0x2029

	)

225 
	#WGL_SWAP_UNDEFINED_EXT
 0x202A

	)

226 
	#WGL_TYPE_RGBA_EXT
 0x202B

	)

227 
	#WGL_TYPE_COLORINDEX_EXT
 0x202C

	)

230 #i‚de‡
WGL_EXT_pbuf„r


231 
	#WGL_DRAW_TO_PBUFFER_EXT
 0x202D

	)

232 
	#WGL_MAX_PBUFFER_PIXELS_EXT
 0x202E

	)

233 
	#WGL_MAX_PBUFFER_WIDTH_EXT
 0x202F

	)

234 
	#WGL_MAX_PBUFFER_HEIGHT_EXT
 0x2030

	)

235 
	#WGL_OPTIMAL_PBUFFER_WIDTH_EXT
 0x2031

	)

236 
	#WGL_OPTIMAL_PBUFFER_HEIGHT_EXT
 0x2032

	)

237 
	#WGL_PBUFFER_LARGEST_EXT
 0x2033

	)

238 
	#WGL_PBUFFER_WIDTH_EXT
 0x2034

	)

239 
	#WGL_PBUFFER_HEIGHT_EXT
 0x2035

	)

242 #i‚de‡
WGL_EXT_dïth_Êﬂt


243 
	#WGL_DEPTH_FLOAT_EXT
 0x2040

	)

246 #i‚de‡
WGL_3DFX_mu…ißm∂e


247 
	#WGL_SAMPLE_BUFFERS_3DFX
 0x2060

	)

248 
	#WGL_SAMPLES_3DFX
 0x2061

	)

251 #i‚de‡
WGL_EXT_mu…ißm∂e


252 
	#WGL_SAMPLE_BUFFERS_EXT
 0x2041

	)

253 
	#WGL_SAMPLES_EXT
 0x2042

	)

256 #i‚de‡
WGL_I3D_digôÆ_video_c⁄åﬁ


257 
	#WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D
 0x2050

	)

258 
	#WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D
 0x2051

	)

259 
	#WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D
 0x2052

	)

260 
	#WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D
 0x2053

	)

263 #i‚de‡
WGL_I3D_gamma


264 
	#WGL_GAMMA_TABLE_SIZE_I3D
 0x204E

	)

265 
	#WGL_GAMMA_EXCLUDE_DESKTOP_I3D
 0x204F

	)

268 #i‚de‡
WGL_I3D_gílock


269 
	#WGL_GENLOCK_SOURCE_MULTIVIEW_I3D
 0x2044

	)

270 
	#WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D
 0x2045

	)

271 
	#WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D
 0x2046

	)

272 
	#WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D
 0x2047

	)

273 
	#WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D
 0x2048

	)

274 
	#WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D
 0x2049

	)

275 
	#WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D
 0x204A

	)

276 
	#WGL_GENLOCK_SOURCE_EDGE_RISING_I3D
 0x204B

	)

277 
	#WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D
 0x204C

	)

280 #i‚de‡
WGL_I3D_image_buf„r


281 
	#WGL_IMAGE_BUFFER_MIN_ACCESS_I3D
 0x00000001

	)

282 
	#WGL_IMAGE_BUFFER_LOCK_I3D
 0x00000002

	)

285 #i‚de‡
WGL_I3D_sw≠_‰ame_lock


288 #i‚de‡
WGL_NV_ªndî_dïth_ãxtuª


289 
	#WGL_BIND_TO_TEXTURE_DEPTH_NV
 0x20A3

	)

290 
	#WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV
 0x20A4

	)

291 
	#WGL_DEPTH_TEXTURE_FORMAT_NV
 0x20A5

	)

292 
	#WGL_TEXTURE_DEPTH_COMPONENT_NV
 0x20A6

	)

293 
	#WGL_DEPTH_COMPONENT_NV
 0x20A7

	)

296 #i‚de‡
WGL_NV_ªndî_ãxtuª_ª˘™gÀ


297 
	#WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV
 0x20A0

	)

298 
	#WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV
 0x20A1

	)

299 
	#WGL_TEXTURE_RECTANGLE_NV
 0x20A2

	)

302 #i‚de‡
WGL_NV_Êﬂt_buf„r


303 
	#WGL_FLOAT_COMPONENTS_NV
 0x20B0

	)

304 
	#WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV
 0x20B1

	)

305 
	#WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV
 0x20B2

	)

306 
	#WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV
 0x20B3

	)

307 
	#WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV
 0x20B4

	)

308 
	#WGL_TEXTURE_FLOAT_R_NV
 0x20B5

	)

309 
	#WGL_TEXTURE_FLOAT_RG_NV
 0x20B6

	)

310 
	#WGL_TEXTURE_FLOAT_RGB_NV
 0x20B7

	)

311 
	#WGL_TEXTURE_FLOAT_RGBA_NV
 0x20B8

	)

317 #i‚de‡
WGL_ARB_pbuf„r


318 
DECLARE_HANDLE
(
HPBUFFERARB
);

320 #i‚de‡
WGL_EXT_pbuf„r


321 
DECLARE_HANDLE
(
HPBUFFEREXT
);

324 #i‚de‡
WGL_ARB_buf„r_ªgi⁄


325 
	#WGL_ARB_buf„r_ªgi⁄
 1

	)

326 #ifde‡
WGL_WGLEXT_PROTOTYPES


327 
HANDLE
 
WINAPI
 
wglCª©eBuf„rRegi⁄ARB
 (
HDC
, , 
UINT
);

328 
VOID
 
WINAPI
 
wglDñëeBuf„rRegi⁄ARB
 (
HANDLE
);

329 
BOOL
 
WINAPI
 
wglSaveBuf„rRegi⁄ARB
 (
HANDLE
, , , , );

330 
BOOL
 
WINAPI
 
wglRe°‹eBuf„rRegi⁄ARB
 (
HANDLE
, , , , , , );

332 
HANDLE
 (
	tWINAPI
 * 
	tPFNWGLCREATEBUFFERREGIONARBPROC
Ë(
	tHDC
 
	thDC
, 
	tiLayîPœ√
, 
	tUINT
 
	tuTy≥
);

333 
VOID
 (
	tWINAPI
 * 
	tPFNWGLDELETEBUFFERREGIONARBPROC
Ë(
	tHANDLE
 
	thRegi⁄
);

334 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLSAVEBUFFERREGIONARBPROC
Ë(
	tHANDLE
 
	thRegi⁄
, 
	tx
, 
	ty
, 
	twidth
, 
	theight
);

335 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLRESTOREBUFFERREGIONARBPROC
Ë(
	tHANDLE
 
	thRegi⁄
, 
	tx
, 
	ty
, 
	twidth
, 
	theight
, 
	txSrc
, 
	tySrc
);

338 #i‚de‡
WGL_ARB_mu…ißm∂e


339 
	#WGL_ARB_mu…ißm∂e
 1

	)

342 #i‚de‡
WGL_ARB_exãnsi⁄s_°rög


343 
	#WGL_ARB_exãnsi⁄s_°rög
 1

	)

344 #ifde‡
WGL_WGLEXT_PROTOTYPES


345 c⁄° * 
WINAPI
 
wglGëExãnsi⁄sSåögARB
 (
HDC
);

347 c⁄° * (
	tWINAPI
 * 
	tPFNWGLGETEXTENSIONSSTRINGARBPROC
Ë(
	tHDC
 
	thdc
);

350 #i‚de‡
WGL_ARB_pixñ_f‹m©


351 
	#WGL_ARB_pixñ_f‹m©
 1

	)

352 #ifde‡
WGL_WGLEXT_PROTOTYPES


353 
BOOL
 
WINAPI
 
wglGëPixñF‹m©AâribivARB
 (
HDC
, , , 
UINT
, const *, *);

354 
BOOL
 
WINAPI
 
wglGëPixñF‹m©AâribfvARB
 (
HDC
, , , 
UINT
, c⁄° *, 
FLOAT
 *);

355 
BOOL
 
WINAPI
 
wglChoo£PixñF‹m©ARB
 (
HDC
, c⁄° *, c⁄° 
FLOAT
 *, 
UINT
, *, UINT *);

357 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGETPIXELFORMATATTRIBIVARBPROC
Ë(
	tHDC
 
	thdc
, 
	tiPixñF‹m©
, 
	tiLayîPœ√
, 
	tUINT
 
	tnAâribuãs
, c⁄° *
	tpiAâribuãs
, *
	tpiVÆues
);

358 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGETPIXELFORMATATTRIBFVARBPROC
Ë(
	tHDC
 
	thdc
, 
	tiPixñF‹m©
, 
	tiLayîPœ√
, 
	tUINT
 
	tnAâribuãs
, c⁄° *
	tpiAâribuãs
, 
	tFLOAT
 *
	tpfVÆues
);

359 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLCHOOSEPIXELFORMATARBPROC
Ë(
	tHDC
 
	thdc
, c⁄° *
	tpiAâribILi°
, c⁄° 
	tFLOAT
 *
	tpfAâribFLi°
, 
	tUINT
 
	tnMaxF‹m©s
, *
	tpiF‹m©s
, UINT *
	tnNumF‹m©s
);

362 #i‚de‡
WGL_ARB_make_cuºít_ªad


363 
	#WGL_ARB_make_cuºít_ªad
 1

	)

364 #ifde‡
WGL_WGLEXT_PROTOTYPES


365 
BOOL
 
WINAPI
 
wglMakeC⁄ãxtCuºítARB
 (
HDC
, HDC, 
HGLRC
);

366 
HDC
 
WINAPI
 
wglGëCuºítRódDCARB
 ();

368 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLMAKECONTEXTCURRENTARBPROC
Ë(
	tHDC
 
	thDøwDC
, HDC 
	thRódDC
, 
	tHGLRC
 
	thgÃc
);

369 
HDC
 (
	tWINAPI
 * 
	tPFNWGLGETCURRENTREADDCARBPROC
) ();

372 #i‚de‡
WGL_ARB_pbuf„r


373 
	#WGL_ARB_pbuf„r
 1

	)

374 #ifde‡
WGL_WGLEXT_PROTOTYPES


375 
HPBUFFERARB
 
WINAPI
 
wglCª©ePbuf„rARB
 (
HDC
, , , , const *);

376 
HDC
 
WINAPI
 
wglGëPbuf„rDCARB
 (
HPBUFFERARB
);

377 
WINAPI
 
wglRñó£Pbuf„rDCARB
 (
HPBUFFERARB
, 
HDC
);

378 
BOOL
 
WINAPI
 
wglDe°royPbuf„rARB
 (
HPBUFFERARB
);

379 
BOOL
 
WINAPI
 
wglQuîyPbuf„rARB
 (
HPBUFFERARB
, , *);

381 
HPBUFFERARB
 (
	tWINAPI
 * 
	tPFNWGLCREATEPBUFFERARBPROC
Ë(
	tHDC
 
	thDC
, 
	tiPixñF‹m©
, 
	tiWidth
, 
	tiHeight
, c⁄° *
	tpiAâribLi°
);

382 
HDC
 (
	tWINAPI
 * 
	tPFNWGLGETPBUFFERDCARBPROC
Ë(
	tHPBUFFERARB
 
	thPbuf„r
);

383 (
WINAPI
 * 
	tPFNWGLRELEASEPBUFFERDCARBPROC
Ë(
	tHPBUFFERARB
 
	thPbuf„r
, 
	tHDC
 
	thDC
);

384 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLDESTROYPBUFFERARBPROC
Ë(
	tHPBUFFERARB
 
	thPbuf„r
);

385 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLQUERYPBUFFERARBPROC
Ë(
	tHPBUFFERARB
 
	thPbuf„r
, 
	tiAâribuã
, *
	tpiVÆue
);

388 #i‚de‡
WGL_ARB_ªndî_ãxtuª


389 
	#WGL_ARB_ªndî_ãxtuª
 1

	)

390 #ifde‡
WGL_WGLEXT_PROTOTYPES


391 
BOOL
 
WINAPI
 
wglBödTexImageARB
 (
HPBUFFERARB
, );

392 
BOOL
 
WINAPI
 
wglRñó£TexImageARB
 (
HPBUFFERARB
, );

393 
BOOL
 
WINAPI
 
wglSëPbuf„rAâribARB
 (
HPBUFFERARB
, const *);

395 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLBINDTEXIMAGEARBPROC
Ë(
	tHPBUFFERARB
 
	thPbuf„r
, 
	tiBuf„r
);

396 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLRELEASETEXIMAGEARBPROC
Ë(
	tHPBUFFERARB
 
	thPbuf„r
, 
	tiBuf„r
);

397 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLSETPBUFFERATTRIBARBPROC
Ë(
	tHPBUFFERARB
 
	thPbuf„r
, c⁄° *
	tpiAâribLi°
);

400 #i‚de‡
WGL_EXT_di•œy_cﬁ‹_èbÀ


401 
	#WGL_EXT_di•œy_cﬁ‹_èbÀ
 1

	)

402 #ifde‡
WGL_WGLEXT_PROTOTYPES


403 
GLboﬁón
 
WINAPI
 
wglCª©eDi•œyCﬁ‹TabÀEXT
 (
GLush‹t
);

404 
GLboﬁón
 
WINAPI
 
wglLﬂdDi•œyCﬁ‹TabÀEXT
 (c⁄° 
GLush‹t
 *, 
GLuöt
);

405 
GLboﬁón
 
WINAPI
 
wglBödDi•œyCﬁ‹TabÀEXT
 (
GLush‹t
);

406 
VOID
 
WINAPI
 
wglDe°royDi•œyCﬁ‹TabÀEXT
 (
GLush‹t
);

408 
GLboﬁón
 (
	tWINAPI
 * 
	tPFNWGLCREATEDISPLAYCOLORTABLEEXTPROC
Ë(
	tGLush‹t
 
	tid
);

409 
GLboﬁón
 (
	tWINAPI
 * 
	tPFNWGLLOADDISPLAYCOLORTABLEEXTPROC
Ë(c⁄° 
	tGLush‹t
 *
	tèbÀ
, 
	tGLuöt
 
	tÀngth
);

410 
GLboﬁón
 (
	tWINAPI
 * 
	tPFNWGLBINDDISPLAYCOLORTABLEEXTPROC
Ë(
	tGLush‹t
 
	tid
);

411 
VOID
 (
	tWINAPI
 * 
	tPFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC
Ë(
	tGLush‹t
 
	tid
);

414 #i‚de‡
WGL_EXT_exãnsi⁄s_°rög


415 
	#WGL_EXT_exãnsi⁄s_°rög
 1

	)

416 #ifde‡
WGL_WGLEXT_PROTOTYPES


417 c⁄° * 
WINAPI
 
wglGëExãnsi⁄sSåögEXT
 ();

419 c⁄° * (
	tWINAPI
 * 
	tPFNWGLGETEXTENSIONSSTRINGEXTPROC
) ();

422 #i‚de‡
WGL_EXT_make_cuºít_ªad


423 
	#WGL_EXT_make_cuºít_ªad
 1

	)

424 #ifde‡
WGL_WGLEXT_PROTOTYPES


425 
BOOL
 
WINAPI
 
wglMakeC⁄ãxtCuºítEXT
 (
HDC
, HDC, 
HGLRC
);

426 
HDC
 
WINAPI
 
wglGëCuºítRódDCEXT
 ();

428 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLMAKECONTEXTCURRENTEXTPROC
Ë(
	tHDC
 
	thDøwDC
, HDC 
	thRódDC
, 
	tHGLRC
 
	thgÃc
);

429 
HDC
 (
	tWINAPI
 * 
	tPFNWGLGETCURRENTREADDCEXTPROC
) ();

432 #i‚de‡
WGL_EXT_pbuf„r


433 
	#WGL_EXT_pbuf„r
 1

	)

434 #ifde‡
WGL_WGLEXT_PROTOTYPES


435 
HPBUFFEREXT
 
WINAPI
 
wglCª©ePbuf„rEXT
 (
HDC
, , , , const *);

436 
HDC
 
WINAPI
 
wglGëPbuf„rDCEXT
 (
HPBUFFEREXT
);

437 
WINAPI
 
wglRñó£Pbuf„rDCEXT
 (
HPBUFFEREXT
, 
HDC
);

438 
BOOL
 
WINAPI
 
wglDe°royPbuf„rEXT
 (
HPBUFFEREXT
);

439 
BOOL
 
WINAPI
 
wglQuîyPbuf„rEXT
 (
HPBUFFEREXT
, , *);

441 
HPBUFFEREXT
 (
	tWINAPI
 * 
	tPFNWGLCREATEPBUFFEREXTPROC
Ë(
	tHDC
 
	thDC
, 
	tiPixñF‹m©
, 
	tiWidth
, 
	tiHeight
, c⁄° *
	tpiAâribLi°
);

442 
HDC
 (
	tWINAPI
 * 
	tPFNWGLGETPBUFFERDCEXTPROC
Ë(
	tHPBUFFEREXT
 
	thPbuf„r
);

443 (
WINAPI
 * 
	tPFNWGLRELEASEPBUFFERDCEXTPROC
Ë(
	tHPBUFFEREXT
 
	thPbuf„r
, 
	tHDC
 
	thDC
);

444 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLDESTROYPBUFFEREXTPROC
Ë(
	tHPBUFFEREXT
 
	thPbuf„r
);

445 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLQUERYPBUFFEREXTPROC
Ë(
	tHPBUFFEREXT
 
	thPbuf„r
, 
	tiAâribuã
, *
	tpiVÆue
);

448 #i‚de‡
WGL_EXT_pixñ_f‹m©


449 
	#WGL_EXT_pixñ_f‹m©
 1

	)

450 #ifde‡
WGL_WGLEXT_PROTOTYPES


451 
BOOL
 
WINAPI
 
wglGëPixñF‹m©AâribivEXT
 (
HDC
, , , 
UINT
, *, *);

452 
BOOL
 
WINAPI
 
wglGëPixñF‹m©AâribfvEXT
 (
HDC
, , , 
UINT
, *, 
FLOAT
 *);

453 
BOOL
 
WINAPI
 
wglChoo£PixñF‹m©EXT
 (
HDC
, c⁄° *, c⁄° 
FLOAT
 *, 
UINT
, *, UINT *);

455 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGETPIXELFORMATATTRIBIVEXTPROC
Ë(
	tHDC
 
	thdc
, 
	tiPixñF‹m©
, 
	tiLayîPœ√
, 
	tUINT
 
	tnAâribuãs
, *
	tpiAâribuãs
, *
	tpiVÆues
);

456 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGETPIXELFORMATATTRIBFVEXTPROC
Ë(
	tHDC
 
	thdc
, 
	tiPixñF‹m©
, 
	tiLayîPœ√
, 
	tUINT
 
	tnAâribuãs
, *
	tpiAâribuãs
, 
	tFLOAT
 *
	tpfVÆues
);

457 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLCHOOSEPIXELFORMATEXTPROC
Ë(
	tHDC
 
	thdc
, c⁄° *
	tpiAâribILi°
, c⁄° 
	tFLOAT
 *
	tpfAâribFLi°
, 
	tUINT
 
	tnMaxF‹m©s
, *
	tpiF‹m©s
, UINT *
	tnNumF‹m©s
);

460 #i‚de‡
WGL_EXT_sw≠_c⁄åﬁ


461 
	#WGL_EXT_sw≠_c⁄åﬁ
 1

	)

462 #ifde‡
WGL_WGLEXT_PROTOTYPES


463 
BOOL
 
WINAPI
 
wglSw≠I¡îvÆEXT
 ();

464 
WINAPI
 
wglGëSw≠I¡îvÆEXT
 ();

466 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLSWAPINTERVALEXTPROC
Ë(
	töãrvÆ
);

467 (
WINAPI
 * 
	tPFNWGLGETSWAPINTERVALEXTPROC
) ();

470 #i‚de‡
WGL_EXT_dïth_Êﬂt


471 
	#WGL_EXT_dïth_Êﬂt
 1

	)

474 #i‚de‡
WGL_NV_vîãx_¨øy_ønge


475 
	#WGL_NV_vîãx_¨øy_ønge
 1

	)

476 #ifde‡
WGL_WGLEXT_PROTOTYPES


477 * 
WINAPI
 
wglAŒoˇãMem‹yNV
 (
GLsizei
, 
GLÊﬂt
, GLfloat, GLfloat);

478 
WINAPI
 
wglFªeMem‹yNV
 (*);

480 * (
	tWINAPI
 * 
	tPFNWGLALLOCATEMEMORYNVPROC
Ë(
	tGLsizei
 
	tsize
, 
	tGLÊﬂt
 
	tªad‰eq
, GLÊﬂà
	twrôe‰eq
, GLÊﬂà
	t¥i‹ôy
);

481 (
WINAPI
 * 
	tPFNWGLFREEMEMORYNVPROC
Ë(*
	tpoöãr
);

484 #i‚de‡
WGL_3DFX_mu…ißm∂e


485 
	#WGL_3DFX_mu…ißm∂e
 1

	)

488 #i‚de‡
WGL_EXT_mu…ißm∂e


489 
	#WGL_EXT_mu…ißm∂e
 1

	)

492 #i‚de‡
WGL_OML_sync_c⁄åﬁ


493 
	#WGL_OML_sync_c⁄åﬁ
 1

	)

494 #ifde‡
WGL_WGLEXT_PROTOTYPES


495 
BOOL
 
WINAPI
 
wglGëSyncVÆuesOML
 (
HDC
, 
INT64
 *, INT64 *, INT64 *);

496 
BOOL
 
WINAPI
 
wglGëMscR©eOML
 (
HDC
, 
INT32
 *, INT32 *);

497 
INT64
 
WINAPI
 
wglSw≠Buf„rsMscOML
 (
HDC
, INT64, INT64, INT64);

498 
INT64
 
WINAPI
 
wglSw≠LayîBuf„rsMscOML
 (
HDC
, , INT64, INT64, INT64);

499 
BOOL
 
WINAPI
 
wglWaôF‹MscOML
 (
HDC
, 
INT64
, INT64, INT64, INT64 *, INT64 *, INT64 *);

500 
BOOL
 
WINAPI
 
wglWaôF‹SbcOML
 (
HDC
, 
INT64
, INT64 *, INT64 *, INT64 *);

502 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGETSYNCVALUESOMLPROC
Ë(
	tHDC
 
	thdc
, 
	tINT64
 *
	tu°
, INT64 *
	tmsc
, INT64 *
	tsbc
);

503 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGETMSCRATEOMLPROC
Ë(
	tHDC
 
	thdc
, 
	tINT32
 *
	tnumî©‹
, INT32 *
	tdíomö©‹
);

504 
INT64
 (
	tWINAPI
 * 
	tPFNWGLSWAPBUFFERSMSCOMLPROC
Ë(
	tHDC
 
	thdc
, 
	tINT64
 
	tèrgë_msc
, INT64 
	tdivis‹
, INT64 
	tªmaödî
);

505 
INT64
 (
	tWINAPI
 * 
	tPFNWGLSWAPLAYERBUFFERSMSCOMLPROC
Ë(
	tHDC
 
	thdc
, 
	tfuPœ√s
, 
	tINT64
 
	tèrgë_msc
, INT64 
	tdivis‹
, INT64 
	tªmaödî
);

506 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLWAITFORMSCOMLPROC
Ë(
	tHDC
 
	thdc
, 
	tINT64
 
	tèrgë_msc
, INT64 
	tdivis‹
, INT64 
	tªmaödî
, INT64 *
	tu°
, INT64 *
	tmsc
, INT64 *
	tsbc
);

507 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLWAITFORSBCOMLPROC
Ë(
	tHDC
 
	thdc
, 
	tINT64
 
	tèrgë_sbc
, INT64 *
	tu°
, INT64 *
	tmsc
, INT64 *
	tsbc
);

510 #i‚de‡
WGL_I3D_digôÆ_video_c⁄åﬁ


511 
	#WGL_I3D_digôÆ_video_c⁄åﬁ
 1

	)

512 #ifde‡
WGL_WGLEXT_PROTOTYPES


513 
BOOL
 
WINAPI
 
wglGëDigôÆVideoP¨amëîsI3D
 (
HDC
, , *);

514 
BOOL
 
WINAPI
 
wglSëDigôÆVideoP¨amëîsI3D
 (
HDC
, , const *);

516 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tiAâribuã
, *
	tpiVÆue
);

517 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tiAâribuã
, c⁄° *
	tpiVÆue
);

520 #i‚de‡
WGL_I3D_gamma


521 
	#WGL_I3D_gamma
 1

	)

522 #ifde‡
WGL_WGLEXT_PROTOTYPES


523 
BOOL
 
WINAPI
 
wglGëGammaTabÀP¨amëîsI3D
 (
HDC
, , *);

524 
BOOL
 
WINAPI
 
wglSëGammaTabÀP¨amëîsI3D
 (
HDC
, , const *);

525 
BOOL
 
WINAPI
 
wglGëGammaTabÀI3D
 (
HDC
, , 
USHORT
 *, USHORT *, USHORT *);

526 
BOOL
 
WINAPI
 
wglSëGammaTabÀI3D
 (
HDC
, , c⁄° 
USHORT
 *, const USHORT *, const USHORT *);

528 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGETGAMMATABLEPARAMETERSI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tiAâribuã
, *
	tpiVÆue
);

529 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLSETGAMMATABLEPARAMETERSI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tiAâribuã
, c⁄° *
	tpiVÆue
);

530 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGETGAMMATABLEI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tiE¡rõs
, 
	tUSHORT
 *
	tpuRed
, USHORT *
	tpuGªí
, USHORT *
	tpuBlue
);

531 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLSETGAMMATABLEI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tiE¡rõs
, c⁄° 
	tUSHORT
 *
	tpuRed
, c⁄° USHORT *
	tpuGªí
, c⁄° USHORT *
	tpuBlue
);

534 #i‚de‡
WGL_I3D_gílock


535 
	#WGL_I3D_gílock
 1

	)

536 #ifde‡
WGL_WGLEXT_PROTOTYPES


537 
BOOL
 
WINAPI
 
wglE«bÀGílockI3D
 (
HDC
);

538 
BOOL
 
WINAPI
 
wglDißbÀGílockI3D
 (
HDC
);

539 
BOOL
 
WINAPI
 
wglIsE«bÀdGílockI3D
 (
HDC
, BOOL *);

540 
BOOL
 
WINAPI
 
wglGílockSour˚I3D
 (
HDC
, 
UINT
);

541 
BOOL
 
WINAPI
 
wglGëGílockSour˚I3D
 (
HDC
, 
UINT
 *);

542 
BOOL
 
WINAPI
 
wglGílockSour˚EdgeI3D
 (
HDC
, 
UINT
);

543 
BOOL
 
WINAPI
 
wglGëGílockSour˚EdgeI3D
 (
HDC
, 
UINT
 *);

544 
BOOL
 
WINAPI
 
wglGílockSam∂eR©eI3D
 (
HDC
, 
UINT
);

545 
BOOL
 
WINAPI
 
wglGëGílockSam∂eR©eI3D
 (
HDC
, 
UINT
 *);

546 
BOOL
 
WINAPI
 
wglGílockSour˚DñayI3D
 (
HDC
, 
UINT
);

547 
BOOL
 
WINAPI
 
wglGëGílockSour˚DñayI3D
 (
HDC
, 
UINT
 *);

548 
BOOL
 
WINAPI
 
wglQuîyGílockMaxSour˚DñayI3D
 (
HDC
, 
UINT
 *, UINT *);

550 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLENABLEGENLOCKI3DPROC
Ë(
	tHDC
 
	thDC
);

551 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLDISABLEGENLOCKI3DPROC
Ë(
	tHDC
 
	thDC
);

552 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLISENABLEDGENLOCKI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tBOOL
 *
	tpFœg
);

553 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGENLOCKSOURCEI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 
	tuSour˚
);

554 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGETGENLOCKSOURCEI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 *
	tuSour˚
);

555 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGENLOCKSOURCEEDGEI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 
	tuEdge
);

556 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGETGENLOCKSOURCEEDGEI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 *
	tuEdge
);

557 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGENLOCKSAMPLERATEI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 
	tuR©e
);

558 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGETGENLOCKSAMPLERATEI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 *
	tuR©e
);

559 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGENLOCKSOURCEDELAYI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 
	tuDñay
);

560 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGETGENLOCKSOURCEDELAYI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 *
	tuDñay
);

561 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tUINT
 *
	tuMaxLöeDñay
, UINT *
	tuMaxPixñDñay
);

564 #i‚de‡
WGL_I3D_image_buf„r


565 
	#WGL_I3D_image_buf„r
 1

	)

566 #ifde‡
WGL_WGLEXT_PROTOTYPES


567 
LPVOID
 
WINAPI
 
wglCª©eImageBuf„rI3D
 (
HDC
, 
DWORD
, 
UINT
);

568 
BOOL
 
WINAPI
 
wglDe°royImageBuf„rI3D
 (
HDC
, 
LPVOID
);

569 
BOOL
 
WINAPI
 
wglAssocüãImageBuf„rEvítsI3D
 (
HDC
, c⁄° 
HANDLE
 *, c⁄° 
LPVOID
 *, c⁄° 
DWORD
 *, 
UINT
);

570 
BOOL
 
WINAPI
 
wglRñó£ImageBuf„rEvítsI3D
 (
HDC
, c⁄° 
LPVOID
 *, 
UINT
);

572 
LPVOID
 (
	tWINAPI
 * 
	tPFNWGLCREATEIMAGEBUFFERI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tDWORD
 
	tdwSize
, 
	tUINT
 
	tuFœgs
);

573 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLDESTROYIMAGEBUFFERI3DPROC
Ë(
	tHDC
 
	thDC
, 
	tLPVOID
 
	tpAddªss
);

574 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC
Ë(
	tHDC
 
	thDC
, c⁄° 
	tHANDLE
 *
	tpEvít
, c⁄° 
	tLPVOID
 *
	tpAddªss
, c⁄° 
	tDWORD
 *
	tpSize
, 
	tUINT
 
	tcou¡
);

575 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC
Ë(
	tHDC
 
	thDC
, c⁄° 
	tLPVOID
 *
	tpAddªss
, 
	tUINT
 
	tcou¡
);

578 #i‚de‡
WGL_I3D_sw≠_‰ame_lock


579 
	#WGL_I3D_sw≠_‰ame_lock
 1

	)

580 #ifde‡
WGL_WGLEXT_PROTOTYPES


581 
BOOL
 
WINAPI
 
wglE«bÀFømeLockI3D
 ();

582 
BOOL
 
WINAPI
 
wglDißbÀFømeLockI3D
 ();

583 
BOOL
 
WINAPI
 
wglIsE«bÀdFømeLockI3D
 (BOOL *);

584 
BOOL
 
WINAPI
 
wglQuîyFømeLockMa°îI3D
 (BOOL *);

586 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLENABLEFRAMELOCKI3DPROC
) ();

587 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLDISABLEFRAMELOCKI3DPROC
) ();

588 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLISENABLEDFRAMELOCKI3DPROC
Ë(
	tBOOL
 *
	tpFœg
);

589 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLQUERYFRAMELOCKMASTERI3DPROC
Ë(
	tBOOL
 *
	tpFœg
);

592 #i‚de‡
WGL_I3D_sw≠_‰ame_ußge


593 
	#WGL_I3D_sw≠_‰ame_ußge
 1

	)

594 #ifde‡
WGL_WGLEXT_PROTOTYPES


595 
BOOL
 
WINAPI
 
wglGëFømeUßgeI3D
 (*);

596 
BOOL
 
WINAPI
 
wglBegöFømeTøckögI3D
 ();

597 
BOOL
 
WINAPI
 
wglEndFømeTøckögI3D
 ();

598 
BOOL
 
WINAPI
 
wglQuîyFømeTøckögI3D
 (
DWORD
 *, DWORD *, *);

600 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLGETFRAMEUSAGEI3DPROC
Ë(*
	tpUßge
);

601 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLBEGINFRAMETRACKINGI3DPROC
) ();

602 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLENDFRAMETRACKINGI3DPROC
) ();

603 
BOOL
 (
	tWINAPI
 * 
	tPFNWGLQUERYFRAMETRACKINGI3DPROC
Ë(
	tDWORD
 *
	tpFømeCou¡
, DWORD *
	tpMis£dFømes
, *
	tpLa°Mis£dUßge
);

607 #ifde‡
__˝lu•lus


	@template.dir/drawPoints.cpp

8 
	~<GL/glut.h
>

10 
	~<°dlib.h
>

11 
	~<°dio.h
>

12 
	~<m©h.h
>

14 c⁄° 
	gGL_PI
 = 3.1415f;

17 
GLÊﬂt
 
	gxRŸ
 = 0.0f;

18 
GLÊﬂt
 
	gyRŸ
 = 0.0f;

22 
	$RídîS˚√
()

24 
GLÊﬂt
 
x
 = 0.0f;

25 
GLÊﬂt
 
y
 = 0.0f;

26 
GLÊﬂt
 
z
 = 0.0f;

27 
GLÊﬂt
 
™gÀ
 = 0.0f;

31 
	`glCÀ¨
(
GL_COLOR_BUFFER_BIT
);

34 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

40 
	`glBegö
(
GL_POINTS
);

41 
z
 = -50.0f;

42 
™gÀ
 = 0.0f;ángÀ <(2.0f*
GL_PI
)*3.0f;ángle += 0.1f) {

43 
x
 = 50.0‡* 
	`sö
(
™gÀ
);

44 
y
 = 50.0‡* 
	`cos
(
™gÀ
);

46 
	`glVîãx3f
(
x
, 
y
, 0.0f);

47 
z
 += 0.5f;

49 
	`glEnd
();

52 
	`glutSw≠Buf„rs
();

53 
	}
}

58 
	$SëupRC
()

61 
	`glCÀ¨Cﬁ‹
(0.0f, 0.0f, 0.0f, 1.0f);

64 
	`glCﬁ‹3f
(0.0f, 1.0f, 0.0f);

65 
	}
}

70 
	$Ch™geSize
(
w
, 
h
)

72 
GLÊﬂt
 
a•e˘R©io
;

75 if(
h
 == 0)

76 
h
 = 1;

79 
	`glVõwp‹t
(0, 0, 
w
, 
h
);

82 
	`glM©rixMode
(
GL_PROJECTION
);

83 
	`glLﬂdIdítôy
();

86 
a•e˘R©io
 = (
GLÊﬂt
)
w
 / (GLÊﬂt)
h
;

87 i‡(
w
 <
h
)

88 
	`glOπho
 (-100.0, 100.0, -100 / 
a•e˘R©io
, 100.0 /áspectRatio, 1.0, -1.0);

90 
	`glOπho
 (-100.0 * 
a•e˘R©io
, 100.0 *áspectRatio, -100.0, 100.0, 1.0, -1.0);

92 
	`glM©rixMode
(
GL_MODELVIEW
);

93 
	`glLﬂdIdítôy
();

94 
	}
}

96 
	$S≥cülKeys
(
key
, 
x
, 
y
)

99 
	`glutPo°Redi•œy
();

100 
	}
}

104 
	$maö
(
¨gc
, * 
¨gv
[])

106 
	`glutInô
(&
¨gc
, 
¨gv
);

107 
	`glutInôDi•œyMode
(
GLUT_DOUBLE
 | 
GLUT_RGB
 | 
GLUT_DEPTH
);

109 
	`glutCª©eWödow
("GLRect");

110 
	`glutDi•œyFunc
(
RídîS˚√
);

111 
	`glutResh≠eFunc
(
Ch™geSize
);

112 
	`glutS≥cülFunc
(
S≥cülKeys
);

113 
	`SëupRC
();

114 
	`glutMaöLo›
();

117 
	}
}

	@/usr/include/GL/gl.h

27 #i‚de‡
__gl_h_


28 
	#__gl_h_


	)

30 #i‡
deföed
(
USE_MGL_NAMESPACE
)

31 
	~"gl_m™gÀ.h
"

40 #i‡!
deföed
(
__SCITECH_SNAP__
)

42 #i‡
deföed
(
__BEOS__
)

43 
	~<°dlib.h
>

46 #i‡!
deföed
(
OPENSTEP
Ë&& (deföed(
NeXT
Ë|| deföed(
NeXT_PDO
))

47 
	#OPENSTEP


	)

50 #i‡
deföed
(
_WIN32
Ë&& !deföed(
__WIN32__
Ë&& !deföed(
__CYGWIN__
)

51 
	#__WIN32__


	)

54 #i‡!
deföed
(
OPENSTEP
Ë&& (deföed(
__WIN32__
Ë&& !deföed(
__CYGWIN__
))

55 #i‡(
deföed
(
_MSC_VER
Ë|| deföed(
__MINGW32__
)Ë&& deföed(
BUILD_GL32
)

56 
	#GLAPI
 
	`__de˛•ec
(
dŒexp‹t
)

	)

57 #ñi‡(
deföed
(
_MSC_VER
Ë|| deföed(
__MINGW32__
)Ë&& deföed(
_DLL
)

58 
	#GLAPI
 
	`__de˛•ec
(
dŒimp‹t
)

	)

60 
	#GLAPI
 

	)

62 #i‡
deföed
(
__MINGW32__
Ë&& deföed(
GL_NO_STDCALL
Ë|| deföed(
UNDER_CE
)

63 
	#GLAPIENTRY


	)

65 
	#GLAPIENTRY
 
__°dˇŒ


	)

67 #ñi‡
deföed
(
__CYGWIN__
Ë&& deföed(
USE_OPENGL32
)

68 
	#GLAPI
 

	)

69 
	#GLAPIENTRY
 
__°dˇŒ


	)

70 #ñi‡
deföed
(
__GNUC__
Ë&& (__GNUC__ * 100 + 
__GNUC_MINOR__
) >= 303

71 
	#GLAPI
 
	`__©åibuã__
((
	`visibûôy
("deÁu…")))

	)

72 
	#GLAPIENTRY


	)

75 #i‡(
deföed
(
__BEOS__
Ë&& deföed(
__POWERPC__
)Ë|| deföed(
__QUICKDRAW__
)

76 
	#PRAGMA_EXPORT_SUPPORTED
 1

	)

87 #i‡
deföed
(
_WIN32
Ë&& !deföed(
APIENTRY
Ë&& !deföed(
__CYGWIN__
)

88 
	#WIN32_LEAN_AND_MEAN
 1

	)

89 
	~<wödows.h
>

92 #i‡
deföed
(
_WIN32
Ë&& !deföed(
_WINGDI_
Ë&& !deföed(
_WIN32_WCE
) \

93 && !
deföed
(
_GNU_H_WINDOWS32_DEFINES
Ë&& !deföed(
OPENSTEP
) \

94 && !
deföed
(
__CYGWIN__
Ë|| 
	$deföed
(
__MINGW32__
)

95 
	~<GL/meß_wgl.h
>

98 #i‡
	`deföed
(
macötosh
Ë&& 
PRAGMA_IMPORT_SUPPORTED


99 #¥agm®
imp‹t
 
⁄


102 #i‚de‡
GLAPI


103 
	#GLAPI
 

	)

106 #i‚de‡
GLAPIENTRY


107 
	#GLAPIENTRY


	)

110 #i‚de‡
APIENTRY


111 
	#APIENTRY
 
GLAPIENTRY


	)

115 #i‚de‡
APIENTRYP


116 
	#APIENTRYP
 
APIENTRY
 *

	)

119 #i‚de‡
GLAPIENTRYP


120 
	#GLAPIENTRYP
 
GLAPIENTRY
 *

	)

123 #ifde‡
CENTERLINE_CLPP


124 sig√d

	)

127 #i‡
	`deföed
(
PRAGMA_EXPORT_SUPPORTED
)

128 #¥agm®
exp‹t
 
⁄


138 #ifde‡
__˝lu•lus


144 
	#GL_VERSION_1_1
 1

	)

145 
	#GL_VERSION_1_2
 1

	)

146 
	#GL_VERSION_1_3
 1

	)

147 
	#GL_ARB_imagög
 1

	)

153 
	tGLíum
;

154 
	tGLboﬁón
;

155 
	tGLbôfõld
;

156 
	tGLvoid
;

157 sig√d 
	tGLbyã
;

158 
	tGLsh‹t
;

159 
	tGLöt
;

160 
	tGLubyã
;

161 
	tGLush‹t
;

162 
	tGLuöt
;

163 
	tGLsizei
;

164 
	tGLÊﬂt
;

165 
	tGL˛ampf
;

166 
	tGLdoubÀ
;

167 
	tGL˛ampd
;

176 
	#GL_FALSE
 0x0

	)

177 
	#GL_TRUE
 0x1

	)

180 
	#GL_BYTE
 0x1400

	)

181 
	#GL_UNSIGNED_BYTE
 0x1401

	)

182 
	#GL_SHORT
 0x1402

	)

183 
	#GL_UNSIGNED_SHORT
 0x1403

	)

184 
	#GL_INT
 0x1404

	)

185 
	#GL_UNSIGNED_INT
 0x1405

	)

186 
	#GL_FLOAT
 0x1406

	)

187 
	#GL_2_BYTES
 0x1407

	)

188 
	#GL_3_BYTES
 0x1408

	)

189 
	#GL_4_BYTES
 0x1409

	)

190 
	#GL_DOUBLE
 0x140A

	)

193 
	#GL_POINTS
 0x0000

	)

194 
	#GL_LINES
 0x0001

	)

195 
	#GL_LINE_LOOP
 0x0002

	)

196 
	#GL_LINE_STRIP
 0x0003

	)

197 
	#GL_TRIANGLES
 0x0004

	)

198 
	#GL_TRIANGLE_STRIP
 0x0005

	)

199 
	#GL_TRIANGLE_FAN
 0x0006

	)

200 
	#GL_QUADS
 0x0007

	)

201 
	#GL_QUAD_STRIP
 0x0008

	)

202 
	#GL_POLYGON
 0x0009

	)

205 
	#GL_VERTEX_ARRAY
 0x8074

	)

206 
	#GL_NORMAL_ARRAY
 0x8075

	)

207 
	#GL_COLOR_ARRAY
 0x8076

	)

208 
	#GL_INDEX_ARRAY
 0x8077

	)

209 
	#GL_TEXTURE_COORD_ARRAY
 0x8078

	)

210 
	#GL_EDGE_FLAG_ARRAY
 0x8079

	)

211 
	#GL_VERTEX_ARRAY_SIZE
 0x807A

	)

212 
	#GL_VERTEX_ARRAY_TYPE
 0x807B

	)

213 
	#GL_VERTEX_ARRAY_STRIDE
 0x807C

	)

214 
	#GL_NORMAL_ARRAY_TYPE
 0x807E

	)

215 
	#GL_NORMAL_ARRAY_STRIDE
 0x807F

	)

216 
	#GL_COLOR_ARRAY_SIZE
 0x8081

	)

217 
	#GL_COLOR_ARRAY_TYPE
 0x8082

	)

218 
	#GL_COLOR_ARRAY_STRIDE
 0x8083

	)

219 
	#GL_INDEX_ARRAY_TYPE
 0x8085

	)

220 
	#GL_INDEX_ARRAY_STRIDE
 0x8086

	)

221 
	#GL_TEXTURE_COORD_ARRAY_SIZE
 0x8088

	)

222 
	#GL_TEXTURE_COORD_ARRAY_TYPE
 0x8089

	)

223 
	#GL_TEXTURE_COORD_ARRAY_STRIDE
 0x808A

	)

224 
	#GL_EDGE_FLAG_ARRAY_STRIDE
 0x808C

	)

225 
	#GL_VERTEX_ARRAY_POINTER
 0x808E

	)

226 
	#GL_NORMAL_ARRAY_POINTER
 0x808F

	)

227 
	#GL_COLOR_ARRAY_POINTER
 0x8090

	)

228 
	#GL_INDEX_ARRAY_POINTER
 0x8091

	)

229 
	#GL_TEXTURE_COORD_ARRAY_POINTER
 0x8092

	)

230 
	#GL_EDGE_FLAG_ARRAY_POINTER
 0x8093

	)

231 
	#GL_V2F
 0x2A20

	)

232 
	#GL_V3F
 0x2A21

	)

233 
	#GL_C4UB_V2F
 0x2A22

	)

234 
	#GL_C4UB_V3F
 0x2A23

	)

235 
	#GL_C3F_V3F
 0x2A24

	)

236 
	#GL_N3F_V3F
 0x2A25

	)

237 
	#GL_C4F_N3F_V3F
 0x2A26

	)

238 
	#GL_T2F_V3F
 0x2A27

	)

239 
	#GL_T4F_V4F
 0x2A28

	)

240 
	#GL_T2F_C4UB_V3F
 0x2A29

	)

241 
	#GL_T2F_C3F_V3F
 0x2A2A

	)

242 
	#GL_T2F_N3F_V3F
 0x2A2B

	)

243 
	#GL_T2F_C4F_N3F_V3F
 0x2A2C

	)

244 
	#GL_T4F_C4F_N3F_V4F
 0x2A2D

	)

247 
	#GL_MATRIX_MODE
 0x0BA0

	)

248 
	#GL_MODELVIEW
 0x1700

	)

249 
	#GL_PROJECTION
 0x1701

	)

250 
	#GL_TEXTURE
 0x1702

	)

253 
	#GL_POINT_SMOOTH
 0x0B10

	)

254 
	#GL_POINT_SIZE
 0x0B11

	)

255 
	#GL_POINT_SIZE_GRANULARITY
 0x0B13

	)

256 
	#GL_POINT_SIZE_RANGE
 0x0B12

	)

259 
	#GL_LINE_SMOOTH
 0x0B20

	)

260 
	#GL_LINE_STIPPLE
 0x0B24

	)

261 
	#GL_LINE_STIPPLE_PATTERN
 0x0B25

	)

262 
	#GL_LINE_STIPPLE_REPEAT
 0x0B26

	)

263 
	#GL_LINE_WIDTH
 0x0B21

	)

264 
	#GL_LINE_WIDTH_GRANULARITY
 0x0B23

	)

265 
	#GL_LINE_WIDTH_RANGE
 0x0B22

	)

268 
	#GL_POINT
 0x1B00

	)

269 
	#GL_LINE
 0x1B01

	)

270 
	#GL_FILL
 0x1B02

	)

271 
	#GL_CW
 0x0900

	)

272 
	#GL_CCW
 0x0901

	)

273 
	#GL_FRONT
 0x0404

	)

274 
	#GL_BACK
 0x0405

	)

275 
	#GL_POLYGON_MODE
 0x0B40

	)

276 
	#GL_POLYGON_SMOOTH
 0x0B41

	)

277 
	#GL_POLYGON_STIPPLE
 0x0B42

	)

278 
	#GL_EDGE_FLAG
 0x0B43

	)

279 
	#GL_CULL_FACE
 0x0B44

	)

280 
	#GL_CULL_FACE_MODE
 0x0B45

	)

281 
	#GL_FRONT_FACE
 0x0B46

	)

282 
	#GL_POLYGON_OFFSET_FACTOR
 0x8038

	)

283 
	#GL_POLYGON_OFFSET_UNITS
 0x2A00

	)

284 
	#GL_POLYGON_OFFSET_POINT
 0x2A01

	)

285 
	#GL_POLYGON_OFFSET_LINE
 0x2A02

	)

286 
	#GL_POLYGON_OFFSET_FILL
 0x8037

	)

289 
	#GL_COMPILE
 0x1300

	)

290 
	#GL_COMPILE_AND_EXECUTE
 0x1301

	)

291 
	#GL_LIST_BASE
 0x0B32

	)

292 
	#GL_LIST_INDEX
 0x0B33

	)

293 
	#GL_LIST_MODE
 0x0B30

	)

296 
	#GL_NEVER
 0x0200

	)

297 
	#GL_LESS
 0x0201

	)

298 
	#GL_EQUAL
 0x0202

	)

299 
	#GL_LEQUAL
 0x0203

	)

300 
	#GL_GREATER
 0x0204

	)

301 
	#GL_NOTEQUAL
 0x0205

	)

302 
	#GL_GEQUAL
 0x0206

	)

303 
	#GL_ALWAYS
 0x0207

	)

304 
	#GL_DEPTH_TEST
 0x0B71

	)

305 
	#GL_DEPTH_BITS
 0x0D56

	)

306 
	#GL_DEPTH_CLEAR_VALUE
 0x0B73

	)

307 
	#GL_DEPTH_FUNC
 0x0B74

	)

308 
	#GL_DEPTH_RANGE
 0x0B70

	)

309 
	#GL_DEPTH_WRITEMASK
 0x0B72

	)

310 
	#GL_DEPTH_COMPONENT
 0x1902

	)

313 
	#GL_LIGHTING
 0x0B50

	)

314 
	#GL_LIGHT0
 0x4000

	)

315 
	#GL_LIGHT1
 0x4001

	)

316 
	#GL_LIGHT2
 0x4002

	)

317 
	#GL_LIGHT3
 0x4003

	)

318 
	#GL_LIGHT4
 0x4004

	)

319 
	#GL_LIGHT5
 0x4005

	)

320 
	#GL_LIGHT6
 0x4006

	)

321 
	#GL_LIGHT7
 0x4007

	)

322 
	#GL_SPOT_EXPONENT
 0x1205

	)

323 
	#GL_SPOT_CUTOFF
 0x1206

	)

324 
	#GL_CONSTANT_ATTENUATION
 0x1207

	)

325 
	#GL_LINEAR_ATTENUATION
 0x1208

	)

326 
	#GL_QUADRATIC_ATTENUATION
 0x1209

	)

327 
	#GL_AMBIENT
 0x1200

	)

328 
	#GL_DIFFUSE
 0x1201

	)

329 
	#GL_SPECULAR
 0x1202

	)

330 
	#GL_SHININESS
 0x1601

	)

331 
	#GL_EMISSION
 0x1600

	)

332 
	#GL_POSITION
 0x1203

	)

333 
	#GL_SPOT_DIRECTION
 0x1204

	)

334 
	#GL_AMBIENT_AND_DIFFUSE
 0x1602

	)

335 
	#GL_COLOR_INDEXES
 0x1603

	)

336 
	#GL_LIGHT_MODEL_TWO_SIDE
 0x0B52

	)

337 
	#GL_LIGHT_MODEL_LOCAL_VIEWER
 0x0B51

	)

338 
	#GL_LIGHT_MODEL_AMBIENT
 0x0B53

	)

339 
	#GL_FRONT_AND_BACK
 0x0408

	)

340 
	#GL_SHADE_MODEL
 0x0B54

	)

341 
	#GL_FLAT
 0x1D00

	)

342 
	#GL_SMOOTH
 0x1D01

	)

343 
	#GL_COLOR_MATERIAL
 0x0B57

	)

344 
	#GL_COLOR_MATERIAL_FACE
 0x0B55

	)

345 
	#GL_COLOR_MATERIAL_PARAMETER
 0x0B56

	)

346 
	#GL_NORMALIZE
 0x0BA1

	)

349 
	#GL_CLIP_PLANE0
 0x3000

	)

350 
	#GL_CLIP_PLANE1
 0x3001

	)

351 
	#GL_CLIP_PLANE2
 0x3002

	)

352 
	#GL_CLIP_PLANE3
 0x3003

	)

353 
	#GL_CLIP_PLANE4
 0x3004

	)

354 
	#GL_CLIP_PLANE5
 0x3005

	)

357 
	#GL_ACCUM_RED_BITS
 0x0D58

	)

358 
	#GL_ACCUM_GREEN_BITS
 0x0D59

	)

359 
	#GL_ACCUM_BLUE_BITS
 0x0D5A

	)

360 
	#GL_ACCUM_ALPHA_BITS
 0x0D5B

	)

361 
	#GL_ACCUM_CLEAR_VALUE
 0x0B80

	)

362 
	#GL_ACCUM
 0x0100

	)

363 
	#GL_ADD
 0x0104

	)

364 
	#GL_LOAD
 0x0101

	)

365 
	#GL_MULT
 0x0103

	)

366 
	#GL_RETURN
 0x0102

	)

369 
	#GL_ALPHA_TEST
 0x0BC0

	)

370 
	#GL_ALPHA_TEST_REF
 0x0BC2

	)

371 
	#GL_ALPHA_TEST_FUNC
 0x0BC1

	)

374 
	#GL_BLEND
 0x0BE2

	)

375 
	#GL_BLEND_SRC
 0x0BE1

	)

376 
	#GL_BLEND_DST
 0x0BE0

	)

377 
	#GL_ZERO
 0x0

	)

378 
	#GL_ONE
 0x1

	)

379 
	#GL_SRC_COLOR
 0x0300

	)

380 
	#GL_ONE_MINUS_SRC_COLOR
 0x0301

	)

381 
	#GL_SRC_ALPHA
 0x0302

	)

382 
	#GL_ONE_MINUS_SRC_ALPHA
 0x0303

	)

383 
	#GL_DST_ALPHA
 0x0304

	)

384 
	#GL_ONE_MINUS_DST_ALPHA
 0x0305

	)

385 
	#GL_DST_COLOR
 0x0306

	)

386 
	#GL_ONE_MINUS_DST_COLOR
 0x0307

	)

387 
	#GL_SRC_ALPHA_SATURATE
 0x0308

	)

390 
	#GL_FEEDBACK
 0x1C01

	)

391 
	#GL_RENDER
 0x1C00

	)

392 
	#GL_SELECT
 0x1C02

	)

395 
	#GL_2D
 0x0600

	)

396 
	#GL_3D
 0x0601

	)

397 
	#GL_3D_COLOR
 0x0602

	)

398 
	#GL_3D_COLOR_TEXTURE
 0x0603

	)

399 
	#GL_4D_COLOR_TEXTURE
 0x0604

	)

400 
	#GL_POINT_TOKEN
 0x0701

	)

401 
	#GL_LINE_TOKEN
 0x0702

	)

402 
	#GL_LINE_RESET_TOKEN
 0x0707

	)

403 
	#GL_POLYGON_TOKEN
 0x0703

	)

404 
	#GL_BITMAP_TOKEN
 0x0704

	)

405 
	#GL_DRAW_PIXEL_TOKEN
 0x0705

	)

406 
	#GL_COPY_PIXEL_TOKEN
 0x0706

	)

407 
	#GL_PASS_THROUGH_TOKEN
 0x0700

	)

408 
	#GL_FEEDBACK_BUFFER_POINTER
 0x0DF0

	)

409 
	#GL_FEEDBACK_BUFFER_SIZE
 0x0DF1

	)

410 
	#GL_FEEDBACK_BUFFER_TYPE
 0x0DF2

	)

413 
	#GL_SELECTION_BUFFER_POINTER
 0x0DF3

	)

414 
	#GL_SELECTION_BUFFER_SIZE
 0x0DF4

	)

417 
	#GL_FOG
 0x0B60

	)

418 
	#GL_FOG_MODE
 0x0B65

	)

419 
	#GL_FOG_DENSITY
 0x0B62

	)

420 
	#GL_FOG_COLOR
 0x0B66

	)

421 
	#GL_FOG_INDEX
 0x0B61

	)

422 
	#GL_FOG_START
 0x0B63

	)

423 
	#GL_FOG_END
 0x0B64

	)

424 
	#GL_LINEAR
 0x2601

	)

425 
	#GL_EXP
 0x0800

	)

426 
	#GL_EXP2
 0x0801

	)

429 
	#GL_LOGIC_OP
 0x0BF1

	)

430 
	#GL_INDEX_LOGIC_OP
 0x0BF1

	)

431 
	#GL_COLOR_LOGIC_OP
 0x0BF2

	)

432 
	#GL_LOGIC_OP_MODE
 0x0BF0

	)

433 
	#GL_CLEAR
 0x1500

	)

434 
	#GL_SET
 0x150F

	)

435 
	#GL_COPY
 0x1503

	)

436 
	#GL_COPY_INVERTED
 0x150C

	)

437 
	#GL_NOOP
 0x1505

	)

438 
	#GL_INVERT
 0x150A

	)

439 
	#GL_AND
 0x1501

	)

440 
	#GL_NAND
 0x150E

	)

441 
	#GL_OR
 0x1507

	)

442 
	#GL_NOR
 0x1508

	)

443 
	#GL_XOR
 0x1506

	)

444 
	#GL_EQUIV
 0x1509

	)

445 
	#GL_AND_REVERSE
 0x1502

	)

446 
	#GL_AND_INVERTED
 0x1504

	)

447 
	#GL_OR_REVERSE
 0x150B

	)

448 
	#GL_OR_INVERTED
 0x150D

	)

451 
	#GL_STENCIL_BITS
 0x0D57

	)

452 
	#GL_STENCIL_TEST
 0x0B90

	)

453 
	#GL_STENCIL_CLEAR_VALUE
 0x0B91

	)

454 
	#GL_STENCIL_FUNC
 0x0B92

	)

455 
	#GL_STENCIL_VALUE_MASK
 0x0B93

	)

456 
	#GL_STENCIL_FAIL
 0x0B94

	)

457 
	#GL_STENCIL_PASS_DEPTH_FAIL
 0x0B95

	)

458 
	#GL_STENCIL_PASS_DEPTH_PASS
 0x0B96

	)

459 
	#GL_STENCIL_REF
 0x0B97

	)

460 
	#GL_STENCIL_WRITEMASK
 0x0B98

	)

461 
	#GL_STENCIL_INDEX
 0x1901

	)

462 
	#GL_KEEP
 0x1E00

	)

463 
	#GL_REPLACE
 0x1E01

	)

464 
	#GL_INCR
 0x1E02

	)

465 
	#GL_DECR
 0x1E03

	)

468 
	#GL_NONE
 0x0

	)

469 
	#GL_LEFT
 0x0406

	)

470 
	#GL_RIGHT
 0x0407

	)

474 
	#GL_FRONT_LEFT
 0x0400

	)

475 
	#GL_FRONT_RIGHT
 0x0401

	)

476 
	#GL_BACK_LEFT
 0x0402

	)

477 
	#GL_BACK_RIGHT
 0x0403

	)

478 
	#GL_AUX0
 0x0409

	)

479 
	#GL_AUX1
 0x040A

	)

480 
	#GL_AUX2
 0x040B

	)

481 
	#GL_AUX3
 0x040C

	)

482 
	#GL_COLOR_INDEX
 0x1900

	)

483 
	#GL_RED
 0x1903

	)

484 
	#GL_GREEN
 0x1904

	)

485 
	#GL_BLUE
 0x1905

	)

486 
	#GL_ALPHA
 0x1906

	)

487 
	#GL_LUMINANCE
 0x1909

	)

488 
	#GL_LUMINANCE_ALPHA
 0x190A

	)

489 
	#GL_ALPHA_BITS
 0x0D55

	)

490 
	#GL_RED_BITS
 0x0D52

	)

491 
	#GL_GREEN_BITS
 0x0D53

	)

492 
	#GL_BLUE_BITS
 0x0D54

	)

493 
	#GL_INDEX_BITS
 0x0D51

	)

494 
	#GL_SUBPIXEL_BITS
 0x0D50

	)

495 
	#GL_AUX_BUFFERS
 0x0C00

	)

496 
	#GL_READ_BUFFER
 0x0C02

	)

497 
	#GL_DRAW_BUFFER
 0x0C01

	)

498 
	#GL_DOUBLEBUFFER
 0x0C32

	)

499 
	#GL_STEREO
 0x0C33

	)

500 
	#GL_BITMAP
 0x1A00

	)

501 
	#GL_COLOR
 0x1800

	)

502 
	#GL_DEPTH
 0x1801

	)

503 
	#GL_STENCIL
 0x1802

	)

504 
	#GL_DITHER
 0x0BD0

	)

505 
	#GL_RGB
 0x1907

	)

506 
	#GL_RGBA
 0x1908

	)

509 
	#GL_MAX_LIST_NESTING
 0x0B31

	)

510 
	#GL_MAX_EVAL_ORDER
 0x0D30

	)

511 
	#GL_MAX_LIGHTS
 0x0D31

	)

512 
	#GL_MAX_CLIP_PLANES
 0x0D32

	)

513 
	#GL_MAX_TEXTURE_SIZE
 0x0D33

	)

514 
	#GL_MAX_PIXEL_MAP_TABLE
 0x0D34

	)

515 
	#GL_MAX_ATTRIB_STACK_DEPTH
 0x0D35

	)

516 
	#GL_MAX_MODELVIEW_STACK_DEPTH
 0x0D36

	)

517 
	#GL_MAX_NAME_STACK_DEPTH
 0x0D37

	)

518 
	#GL_MAX_PROJECTION_STACK_DEPTH
 0x0D38

	)

519 
	#GL_MAX_TEXTURE_STACK_DEPTH
 0x0D39

	)

520 
	#GL_MAX_VIEWPORT_DIMS
 0x0D3A

	)

521 
	#GL_MAX_CLIENT_ATTRIB_STACK_DEPTH
 0x0D3B

	)

524 
	#GL_ATTRIB_STACK_DEPTH
 0x0BB0

	)

525 
	#GL_CLIENT_ATTRIB_STACK_DEPTH
 0x0BB1

	)

526 
	#GL_COLOR_CLEAR_VALUE
 0x0C22

	)

527 
	#GL_COLOR_WRITEMASK
 0x0C23

	)

528 
	#GL_CURRENT_INDEX
 0x0B01

	)

529 
	#GL_CURRENT_COLOR
 0x0B00

	)

530 
	#GL_CURRENT_NORMAL
 0x0B02

	)

531 
	#GL_CURRENT_RASTER_COLOR
 0x0B04

	)

532 
	#GL_CURRENT_RASTER_DISTANCE
 0x0B09

	)

533 
	#GL_CURRENT_RASTER_INDEX
 0x0B05

	)

534 
	#GL_CURRENT_RASTER_POSITION
 0x0B07

	)

535 
	#GL_CURRENT_RASTER_TEXTURE_COORDS
 0x0B06

	)

536 
	#GL_CURRENT_RASTER_POSITION_VALID
 0x0B08

	)

537 
	#GL_CURRENT_TEXTURE_COORDS
 0x0B03

	)

538 
	#GL_INDEX_CLEAR_VALUE
 0x0C20

	)

539 
	#GL_INDEX_MODE
 0x0C30

	)

540 
	#GL_INDEX_WRITEMASK
 0x0C21

	)

541 
	#GL_MODELVIEW_MATRIX
 0x0BA6

	)

542 
	#GL_MODELVIEW_STACK_DEPTH
 0x0BA3

	)

543 
	#GL_NAME_STACK_DEPTH
 0x0D70

	)

544 
	#GL_PROJECTION_MATRIX
 0x0BA7

	)

545 
	#GL_PROJECTION_STACK_DEPTH
 0x0BA4

	)

546 
	#GL_RENDER_MODE
 0x0C40

	)

547 
	#GL_RGBA_MODE
 0x0C31

	)

548 
	#GL_TEXTURE_MATRIX
 0x0BA8

	)

549 
	#GL_TEXTURE_STACK_DEPTH
 0x0BA5

	)

550 
	#GL_VIEWPORT
 0x0BA2

	)

553 
	#GL_AUTO_NORMAL
 0x0D80

	)

554 
	#GL_MAP1_COLOR_4
 0x0D90

	)

555 
	#GL_MAP1_INDEX
 0x0D91

	)

556 
	#GL_MAP1_NORMAL
 0x0D92

	)

557 
	#GL_MAP1_TEXTURE_COORD_1
 0x0D93

	)

558 
	#GL_MAP1_TEXTURE_COORD_2
 0x0D94

	)

559 
	#GL_MAP1_TEXTURE_COORD_3
 0x0D95

	)

560 
	#GL_MAP1_TEXTURE_COORD_4
 0x0D96

	)

561 
	#GL_MAP1_VERTEX_3
 0x0D97

	)

562 
	#GL_MAP1_VERTEX_4
 0x0D98

	)

563 
	#GL_MAP2_COLOR_4
 0x0DB0

	)

564 
	#GL_MAP2_INDEX
 0x0DB1

	)

565 
	#GL_MAP2_NORMAL
 0x0DB2

	)

566 
	#GL_MAP2_TEXTURE_COORD_1
 0x0DB3

	)

567 
	#GL_MAP2_TEXTURE_COORD_2
 0x0DB4

	)

568 
	#GL_MAP2_TEXTURE_COORD_3
 0x0DB5

	)

569 
	#GL_MAP2_TEXTURE_COORD_4
 0x0DB6

	)

570 
	#GL_MAP2_VERTEX_3
 0x0DB7

	)

571 
	#GL_MAP2_VERTEX_4
 0x0DB8

	)

572 
	#GL_MAP1_GRID_DOMAIN
 0x0DD0

	)

573 
	#GL_MAP1_GRID_SEGMENTS
 0x0DD1

	)

574 
	#GL_MAP2_GRID_DOMAIN
 0x0DD2

	)

575 
	#GL_MAP2_GRID_SEGMENTS
 0x0DD3

	)

576 
	#GL_COEFF
 0x0A00

	)

577 
	#GL_ORDER
 0x0A01

	)

578 
	#GL_DOMAIN
 0x0A02

	)

581 
	#GL_PERSPECTIVE_CORRECTION_HINT
 0x0C50

	)

582 
	#GL_POINT_SMOOTH_HINT
 0x0C51

	)

583 
	#GL_LINE_SMOOTH_HINT
 0x0C52

	)

584 
	#GL_POLYGON_SMOOTH_HINT
 0x0C53

	)

585 
	#GL_FOG_HINT
 0x0C54

	)

586 
	#GL_DONT_CARE
 0x1100

	)

587 
	#GL_FASTEST
 0x1101

	)

588 
	#GL_NICEST
 0x1102

	)

591 
	#GL_SCISSOR_BOX
 0x0C10

	)

592 
	#GL_SCISSOR_TEST
 0x0C11

	)

595 
	#GL_MAP_COLOR
 0x0D10

	)

596 
	#GL_MAP_STENCIL
 0x0D11

	)

597 
	#GL_INDEX_SHIFT
 0x0D12

	)

598 
	#GL_INDEX_OFFSET
 0x0D13

	)

599 
	#GL_RED_SCALE
 0x0D14

	)

600 
	#GL_RED_BIAS
 0x0D15

	)

601 
	#GL_GREEN_SCALE
 0x0D18

	)

602 
	#GL_GREEN_BIAS
 0x0D19

	)

603 
	#GL_BLUE_SCALE
 0x0D1A

	)

604 
	#GL_BLUE_BIAS
 0x0D1B

	)

605 
	#GL_ALPHA_SCALE
 0x0D1C

	)

606 
	#GL_ALPHA_BIAS
 0x0D1D

	)

607 
	#GL_DEPTH_SCALE
 0x0D1E

	)

608 
	#GL_DEPTH_BIAS
 0x0D1F

	)

609 
	#GL_PIXEL_MAP_S_TO_S_SIZE
 0x0CB1

	)

610 
	#GL_PIXEL_MAP_I_TO_I_SIZE
 0x0CB0

	)

611 
	#GL_PIXEL_MAP_I_TO_R_SIZE
 0x0CB2

	)

612 
	#GL_PIXEL_MAP_I_TO_G_SIZE
 0x0CB3

	)

613 
	#GL_PIXEL_MAP_I_TO_B_SIZE
 0x0CB4

	)

614 
	#GL_PIXEL_MAP_I_TO_A_SIZE
 0x0CB5

	)

615 
	#GL_PIXEL_MAP_R_TO_R_SIZE
 0x0CB6

	)

616 
	#GL_PIXEL_MAP_G_TO_G_SIZE
 0x0CB7

	)

617 
	#GL_PIXEL_MAP_B_TO_B_SIZE
 0x0CB8

	)

618 
	#GL_PIXEL_MAP_A_TO_A_SIZE
 0x0CB9

	)

619 
	#GL_PIXEL_MAP_S_TO_S
 0x0C71

	)

620 
	#GL_PIXEL_MAP_I_TO_I
 0x0C70

	)

621 
	#GL_PIXEL_MAP_I_TO_R
 0x0C72

	)

622 
	#GL_PIXEL_MAP_I_TO_G
 0x0C73

	)

623 
	#GL_PIXEL_MAP_I_TO_B
 0x0C74

	)

624 
	#GL_PIXEL_MAP_I_TO_A
 0x0C75

	)

625 
	#GL_PIXEL_MAP_R_TO_R
 0x0C76

	)

626 
	#GL_PIXEL_MAP_G_TO_G
 0x0C77

	)

627 
	#GL_PIXEL_MAP_B_TO_B
 0x0C78

	)

628 
	#GL_PIXEL_MAP_A_TO_A
 0x0C79

	)

629 
	#GL_PACK_ALIGNMENT
 0x0D05

	)

630 
	#GL_PACK_LSB_FIRST
 0x0D01

	)

631 
	#GL_PACK_ROW_LENGTH
 0x0D02

	)

632 
	#GL_PACK_SKIP_PIXELS
 0x0D04

	)

633 
	#GL_PACK_SKIP_ROWS
 0x0D03

	)

634 
	#GL_PACK_SWAP_BYTES
 0x0D00

	)

635 
	#GL_UNPACK_ALIGNMENT
 0x0CF5

	)

636 
	#GL_UNPACK_LSB_FIRST
 0x0CF1

	)

637 
	#GL_UNPACK_ROW_LENGTH
 0x0CF2

	)

638 
	#GL_UNPACK_SKIP_PIXELS
 0x0CF4

	)

639 
	#GL_UNPACK_SKIP_ROWS
 0x0CF3

	)

640 
	#GL_UNPACK_SWAP_BYTES
 0x0CF0

	)

641 
	#GL_ZOOM_X
 0x0D16

	)

642 
	#GL_ZOOM_Y
 0x0D17

	)

645 
	#GL_TEXTURE_ENV
 0x2300

	)

646 
	#GL_TEXTURE_ENV_MODE
 0x2200

	)

647 
	#GL_TEXTURE_1D
 0x0DE0

	)

648 
	#GL_TEXTURE_2D
 0x0DE1

	)

649 
	#GL_TEXTURE_WRAP_S
 0x2802

	)

650 
	#GL_TEXTURE_WRAP_T
 0x2803

	)

651 
	#GL_TEXTURE_MAG_FILTER
 0x2800

	)

652 
	#GL_TEXTURE_MIN_FILTER
 0x2801

	)

653 
	#GL_TEXTURE_ENV_COLOR
 0x2201

	)

654 
	#GL_TEXTURE_GEN_S
 0x0C60

	)

655 
	#GL_TEXTURE_GEN_T
 0x0C61

	)

656 
	#GL_TEXTURE_GEN_MODE
 0x2500

	)

657 
	#GL_TEXTURE_BORDER_COLOR
 0x1004

	)

658 
	#GL_TEXTURE_WIDTH
 0x1000

	)

659 
	#GL_TEXTURE_HEIGHT
 0x1001

	)

660 
	#GL_TEXTURE_BORDER
 0x1005

	)

661 
	#GL_TEXTURE_COMPONENTS
 0x1003

	)

662 
	#GL_TEXTURE_RED_SIZE
 0x805C

	)

663 
	#GL_TEXTURE_GREEN_SIZE
 0x805D

	)

664 
	#GL_TEXTURE_BLUE_SIZE
 0x805E

	)

665 
	#GL_TEXTURE_ALPHA_SIZE
 0x805F

	)

666 
	#GL_TEXTURE_LUMINANCE_SIZE
 0x8060

	)

667 
	#GL_TEXTURE_INTENSITY_SIZE
 0x8061

	)

668 
	#GL_NEAREST_MIPMAP_NEAREST
 0x2700

	)

669 
	#GL_NEAREST_MIPMAP_LINEAR
 0x2702

	)

670 
	#GL_LINEAR_MIPMAP_NEAREST
 0x2701

	)

671 
	#GL_LINEAR_MIPMAP_LINEAR
 0x2703

	)

672 
	#GL_OBJECT_LINEAR
 0x2401

	)

673 
	#GL_OBJECT_PLANE
 0x2501

	)

674 
	#GL_EYE_LINEAR
 0x2400

	)

675 
	#GL_EYE_PLANE
 0x2502

	)

676 
	#GL_SPHERE_MAP
 0x2402

	)

677 
	#GL_DECAL
 0x2101

	)

678 
	#GL_MODULATE
 0x2100

	)

679 
	#GL_NEAREST
 0x2600

	)

680 
	#GL_REPEAT
 0x2901

	)

681 
	#GL_CLAMP
 0x2900

	)

682 
	#GL_S
 0x2000

	)

683 
	#GL_T
 0x2001

	)

684 
	#GL_R
 0x2002

	)

685 
	#GL_Q
 0x2003

	)

686 
	#GL_TEXTURE_GEN_R
 0x0C62

	)

687 
	#GL_TEXTURE_GEN_Q
 0x0C63

	)

690 
	#GL_VENDOR
 0x1F00

	)

691 
	#GL_RENDERER
 0x1F01

	)

692 
	#GL_VERSION
 0x1F02

	)

693 
	#GL_EXTENSIONS
 0x1F03

	)

696 
	#GL_NO_ERROR
 0x0

	)

697 
	#GL_INVALID_ENUM
 0x0500

	)

698 
	#GL_INVALID_VALUE
 0x0501

	)

699 
	#GL_INVALID_OPERATION
 0x0502

	)

700 
	#GL_STACK_OVERFLOW
 0x0503

	)

701 
	#GL_STACK_UNDERFLOW
 0x0504

	)

702 
	#GL_OUT_OF_MEMORY
 0x0505

	)

705 
	#GL_CURRENT_BIT
 0x00000001

	)

706 
	#GL_POINT_BIT
 0x00000002

	)

707 
	#GL_LINE_BIT
 0x00000004

	)

708 
	#GL_POLYGON_BIT
 0x00000008

	)

709 
	#GL_POLYGON_STIPPLE_BIT
 0x00000010

	)

710 
	#GL_PIXEL_MODE_BIT
 0x00000020

	)

711 
	#GL_LIGHTING_BIT
 0x00000040

	)

712 
	#GL_FOG_BIT
 0x00000080

	)

713 
	#GL_DEPTH_BUFFER_BIT
 0x00000100

	)

714 
	#GL_ACCUM_BUFFER_BIT
 0x00000200

	)

715 
	#GL_STENCIL_BUFFER_BIT
 0x00000400

	)

716 
	#GL_VIEWPORT_BIT
 0x00000800

	)

717 
	#GL_TRANSFORM_BIT
 0x00001000

	)

718 
	#GL_ENABLE_BIT
 0x00002000

	)

719 
	#GL_COLOR_BUFFER_BIT
 0x00004000

	)

720 
	#GL_HINT_BIT
 0x00008000

	)

721 
	#GL_EVAL_BIT
 0x00010000

	)

722 
	#GL_LIST_BIT
 0x00020000

	)

723 
	#GL_TEXTURE_BIT
 0x00040000

	)

724 
	#GL_SCISSOR_BIT
 0x00080000

	)

725 
	#GL_ALL_ATTRIB_BITS
 0x000FFFFF

	)

729 
	#GL_PROXY_TEXTURE_1D
 0x8063

	)

730 
	#GL_PROXY_TEXTURE_2D
 0x8064

	)

731 
	#GL_TEXTURE_PRIORITY
 0x8066

	)

732 
	#GL_TEXTURE_RESIDENT
 0x8067

	)

733 
	#GL_TEXTURE_BINDING_1D
 0x8068

	)

734 
	#GL_TEXTURE_BINDING_2D
 0x8069

	)

735 
	#GL_TEXTURE_INTERNAL_FORMAT
 0x1003

	)

736 
	#GL_ALPHA4
 0x803B

	)

737 
	#GL_ALPHA8
 0x803C

	)

738 
	#GL_ALPHA12
 0x803D

	)

739 
	#GL_ALPHA16
 0x803E

	)

740 
	#GL_LUMINANCE4
 0x803F

	)

741 
	#GL_LUMINANCE8
 0x8040

	)

742 
	#GL_LUMINANCE12
 0x8041

	)

743 
	#GL_LUMINANCE16
 0x8042

	)

744 
	#GL_LUMINANCE4_ALPHA4
 0x8043

	)

745 
	#GL_LUMINANCE6_ALPHA2
 0x8044

	)

746 
	#GL_LUMINANCE8_ALPHA8
 0x8045

	)

747 
	#GL_LUMINANCE12_ALPHA4
 0x8046

	)

748 
	#GL_LUMINANCE12_ALPHA12
 0x8047

	)

749 
	#GL_LUMINANCE16_ALPHA16
 0x8048

	)

750 
	#GL_INTENSITY
 0x8049

	)

751 
	#GL_INTENSITY4
 0x804A

	)

752 
	#GL_INTENSITY8
 0x804B

	)

753 
	#GL_INTENSITY12
 0x804C

	)

754 
	#GL_INTENSITY16
 0x804D

	)

755 
	#GL_R3_G3_B2
 0x2A10

	)

756 
	#GL_RGB4
 0x804F

	)

757 
	#GL_RGB5
 0x8050

	)

758 
	#GL_RGB8
 0x8051

	)

759 
	#GL_RGB10
 0x8052

	)

760 
	#GL_RGB12
 0x8053

	)

761 
	#GL_RGB16
 0x8054

	)

762 
	#GL_RGBA2
 0x8055

	)

763 
	#GL_RGBA4
 0x8056

	)

764 
	#GL_RGB5_A1
 0x8057

	)

765 
	#GL_RGBA8
 0x8058

	)

766 
	#GL_RGB10_A2
 0x8059

	)

767 
	#GL_RGBA12
 0x805A

	)

768 
	#GL_RGBA16
 0x805B

	)

769 
	#GL_CLIENT_PIXEL_STORE_BIT
 0x00000001

	)

770 
	#GL_CLIENT_VERTEX_ARRAY_BIT
 0x00000002

	)

771 
	#GL_ALL_CLIENT_ATTRIB_BITS
 0xFFFFFFFF

	)

772 
	#GL_CLIENT_ALL_ATTRIB_BITS
 0xFFFFFFFF

	)

780 
GLAPI
 
GLAPIENTRY
 
	`glCÀ¨Index
–
GLÊﬂt
 
c
 );

782 
GLAPI
 
GLAPIENTRY
 
	`glCÀ¨Cﬁ‹
–
GL˛ampf
 
ªd
, GL˛amp‡
gªí
, GL˛amp‡
blue
, GL˛amp‡
Æpha
 );

784 
GLAPI
 
GLAPIENTRY
 
	`glCÀ¨
–
GLbôfõld
 
mask
 );

786 
GLAPI
 
GLAPIENTRY
 
	`glIndexMask
–
GLuöt
 
mask
 );

788 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹Mask
–
GLboﬁón
 
ªd
, GLboﬁó¿
gªí
, GLboﬁó¿
blue
, GLboﬁó¿
Æpha
 );

790 
GLAPI
 
GLAPIENTRY
 
	`glAÕhaFunc
–
GLíum
 
func
, 
GL˛ampf
 
ªf
 );

792 
GLAPI
 
GLAPIENTRY
 
	`glBÀndFunc
–
GLíum
 
sÁ˘‹
, GLíum 
dÁ˘‹
 );

794 
GLAPI
 
GLAPIENTRY
 
	`glLogicOp
–
GLíum
 
›code
 );

796 
GLAPI
 
GLAPIENTRY
 
	`glCuŒFa˚
–
GLíum
 
mode
 );

798 
GLAPI
 
GLAPIENTRY
 
	`glFr⁄tFa˚
–
GLíum
 
mode
 );

800 
GLAPI
 
GLAPIENTRY
 
	`glPoötSize
–
GLÊﬂt
 
size
 );

802 
GLAPI
 
GLAPIENTRY
 
	`glLöeWidth
–
GLÊﬂt
 
width
 );

804 
GLAPI
 
GLAPIENTRY
 
	`glLöeStù∂e
–
GLöt
 
Á˘‹
, 
GLush‹t
 
∑âîn
 );

806 
GLAPI
 
GLAPIENTRY
 
	`glPﬁyg⁄Mode
–
GLíum
 
Á˚
, GLíum 
mode
 );

808 
GLAPI
 
GLAPIENTRY
 
	`glPﬁyg⁄Off£t
–
GLÊﬂt
 
Á˘‹
, GLÊﬂà
unôs
 );

810 
GLAPI
 
GLAPIENTRY
 
	`glPﬁyg⁄Stù∂e
–c⁄° 
GLubyã
 *
mask
 );

812 
GLAPI
 
GLAPIENTRY
 
	`glGëPﬁyg⁄Stù∂e
–
GLubyã
 *
mask
 );

814 
GLAPI
 
GLAPIENTRY
 
	`glEdgeFœg
–
GLboﬁón
 
Êag
 );

816 
GLAPI
 
GLAPIENTRY
 
	`glEdgeFœgv
–c⁄° 
GLboﬁón
 *
Êag
 );

818 
GLAPI
 
GLAPIENTRY
 
	`glSciss‹
–
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
, GLsizeò
height
);

820 
GLAPI
 
GLAPIENTRY
 
	`glClùPœ√
–
GLíum
 
∂™e
, c⁄° 
GLdoubÀ
 *
equ©i⁄
 );

822 
GLAPI
 
GLAPIENTRY
 
	`glGëClùPœ√
–
GLíum
 
∂™e
, 
GLdoubÀ
 *
equ©i⁄
 );

824 
GLAPI
 
GLAPIENTRY
 
	`glDøwBuf„r
–
GLíum
 
mode
 );

826 
GLAPI
 
GLAPIENTRY
 
	`glRódBuf„r
–
GLíum
 
mode
 );

828 
GLAPI
 
GLAPIENTRY
 
	`glE«bÀ
–
GLíum
 
ˇp
 );

830 
GLAPI
 
GLAPIENTRY
 
	`glDißbÀ
–
GLíum
 
ˇp
 );

832 
GLAPI
 
GLboﬁón
 
GLAPIENTRY
 
	`glIsE«bÀd
–
GLíum
 
ˇp
 );

835 
GLAPI
 
GLAPIENTRY
 
	`glE«bÀClõ¡Sèã
–
GLíum
 
ˇp
 );

837 
GLAPI
 
GLAPIENTRY
 
	`glDißbÀClõ¡Sèã
–
GLíum
 
ˇp
 );

840 
GLAPI
 
GLAPIENTRY
 
	`glGëBoﬁónv
–
GLíum
 
≤ame
, 
GLboﬁón
 *
∑øms
 );

842 
GLAPI
 
GLAPIENTRY
 
	`glGëDoubÀv
–
GLíum
 
≤ame
, 
GLdoubÀ
 *
∑øms
 );

844 
GLAPI
 
GLAPIENTRY
 
	`glGëFlﬂtv
–
GLíum
 
≤ame
, 
GLÊﬂt
 *
∑øms
 );

846 
GLAPI
 
GLAPIENTRY
 
	`glGëI¡egîv
–
GLíum
 
≤ame
, 
GLöt
 *
∑øms
 );

849 
GLAPI
 
GLAPIENTRY
 
	`glPushAârib
–
GLbôfõld
 
mask
 );

851 
GLAPI
 
GLAPIENTRY
 
	`glP›Aârib
( );

854 
GLAPI
 
GLAPIENTRY
 
	`glPushClõ¡Aârib
–
GLbôfõld
 
mask
 );

856 
GLAPI
 
GLAPIENTRY
 
	`glP›Clõ¡Aârib
( );

859 
GLAPI
 
GLöt
 
GLAPIENTRY
 
	`glRídîMode
–
GLíum
 
mode
 );

861 
GLAPI
 
GLíum
 
GLAPIENTRY
 
	`glGëEº‹
( );

863 
GLAPI
 c⁄° 
GLubyã
 * 
GLAPIENTRY
 
	`glGëSåög
–
GLíum
 
«me
 );

865 
GLAPI
 
GLAPIENTRY
 
	`glFöish
( );

867 
GLAPI
 
GLAPIENTRY
 
	`glFlush
( );

869 
GLAPI
 
GLAPIENTRY
 
	`glHöt
–
GLíum
 
èrgë
, GLíum 
mode
 );

876 
GLAPI
 
GLAPIENTRY
 
	`glCÀ¨Dïth
–
GL˛ampd
 
dïth
 );

878 
GLAPI
 
GLAPIENTRY
 
	`glDïthFunc
–
GLíum
 
func
 );

880 
GLAPI
 
GLAPIENTRY
 
	`glDïthMask
–
GLboﬁón
 
Êag
 );

882 
GLAPI
 
GLAPIENTRY
 
	`glDïthR™ge
–
GL˛ampd
 
√¨_vÆ
, GL˛ampd 
Ár_vÆ
 );

889 
GLAPI
 
GLAPIENTRY
 
	`glCÀ¨Accum
–
GLÊﬂt
 
ªd
, GLÊﬂà
gªí
, GLÊﬂà
blue
, GLÊﬂà
Æpha
 );

891 
GLAPI
 
GLAPIENTRY
 
	`glAccum
–
GLíum
 
›
, 
GLÊﬂt
 
vÆue
 );

898 
GLAPI
 
GLAPIENTRY
 
	`glM©rixMode
–
GLíum
 
mode
 );

900 
GLAPI
 
GLAPIENTRY
 
	`glOπho
–
GLdoubÀ
 
À·
, GLdoubÀ 
right
,

901 
GLdoubÀ
 
bŸtom
, GLdoubÀ 
t›
,

902 
GLdoubÀ
 
√¨_vÆ
, GLdoubÀ 
Ár_vÆ
 );

904 
GLAPI
 
GLAPIENTRY
 
	`glFru°um
–
GLdoubÀ
 
À·
, GLdoubÀ 
right
,

905 
GLdoubÀ
 
bŸtom
, GLdoubÀ 
t›
,

906 
GLdoubÀ
 
√¨_vÆ
, GLdoubÀ 
Ár_vÆ
 );

908 
GLAPI
 
GLAPIENTRY
 
	`glVõwp‹t
–
GLöt
 
x
, GLöà
y
,

909 
GLsizei
 
width
, GLsizeò
height
 );

911 
GLAPI
 
GLAPIENTRY
 
	`glPushM©rix
( );

913 
GLAPI
 
GLAPIENTRY
 
	`glP›M©rix
( );

915 
GLAPI
 
GLAPIENTRY
 
	`glLﬂdIdítôy
( );

917 
GLAPI
 
GLAPIENTRY
 
	`glLﬂdM©rixd
–c⁄° 
GLdoubÀ
 *
m
 );

918 
GLAPI
 
GLAPIENTRY
 
	`glLﬂdM©rixf
–c⁄° 
GLÊﬂt
 *
m
 );

920 
GLAPI
 
GLAPIENTRY
 
	`glMu…M©rixd
–c⁄° 
GLdoubÀ
 *
m
 );

921 
GLAPI
 
GLAPIENTRY
 
	`glMu…M©rixf
–c⁄° 
GLÊﬂt
 *
m
 );

923 
GLAPI
 
GLAPIENTRY
 
	`glRŸ©ed
–
GLdoubÀ
 
™gÀ
,

924 
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
 );

925 
GLAPI
 
GLAPIENTRY
 
	`glRŸ©ef
–
GLÊﬂt
 
™gÀ
,

926 
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
 );

928 
GLAPI
 
GLAPIENTRY
 
	`glSˇÀd
–
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
 );

929 
GLAPI
 
GLAPIENTRY
 
	`glSˇÀf
–
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
 );

931 
GLAPI
 
GLAPIENTRY
 
	`glTøn¶©ed
–
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
 );

932 
GLAPI
 
GLAPIENTRY
 
	`glTøn¶©ef
–
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
 );

939 
GLAPI
 
GLboﬁón
 
GLAPIENTRY
 
	`glIsLi°
–
GLuöt
 
li°
 );

941 
GLAPI
 
GLAPIENTRY
 
	`glDñëeLi°s
–
GLuöt
 
li°
, 
GLsizei
 
ønge
 );

943 
GLAPI
 
GLuöt
 
GLAPIENTRY
 
	`glGíLi°s
–
GLsizei
 
ønge
 );

945 
GLAPI
 
GLAPIENTRY
 
	`glNewLi°
–
GLuöt
 
li°
, 
GLíum
 
mode
 );

947 
GLAPI
 
GLAPIENTRY
 
	`glEndLi°
( );

949 
GLAPI
 
GLAPIENTRY
 
	`glCÆlLi°
–
GLuöt
 
li°
 );

951 
GLAPI
 
GLAPIENTRY
 
	`glCÆlLi°s
–
GLsizei
 
n
, 
GLíum
 
ty≥
,

952 c⁄° 
GLvoid
 *
li°s
 );

954 
GLAPI
 
GLAPIENTRY
 
	`glLi°Ba£
–
GLuöt
 
ba£
 );

961 
GLAPI
 
GLAPIENTRY
 
	`glBegö
–
GLíum
 
mode
 );

963 
GLAPI
 
GLAPIENTRY
 
	`glEnd
( );

966 
GLAPI
 
GLAPIENTRY
 
	`glVîãx2d
–
GLdoubÀ
 
x
, GLdoubÀ 
y
 );

967 
GLAPI
 
GLAPIENTRY
 
	`glVîãx2f
–
GLÊﬂt
 
x
, GLÊﬂà
y
 );

968 
GLAPI
 
GLAPIENTRY
 
	`glVîãx2i
–
GLöt
 
x
, GLöà
y
 );

969 
GLAPI
 
GLAPIENTRY
 
	`glVîãx2s
–
GLsh‹t
 
x
, GLsh‹à
y
 );

971 
GLAPI
 
GLAPIENTRY
 
	`glVîãx3d
–
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
 );

972 
GLAPI
 
GLAPIENTRY
 
	`glVîãx3f
–
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
 );

973 
GLAPI
 
GLAPIENTRY
 
	`glVîãx3i
–
GLöt
 
x
, GLöà
y
, GLöà
z
 );

974 
GLAPI
 
GLAPIENTRY
 
	`glVîãx3s
–
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
 );

976 
GLAPI
 
GLAPIENTRY
 
	`glVîãx4d
–
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
, GLdoubÀ 
w
 );

977 
GLAPI
 
GLAPIENTRY
 
	`glVîãx4f
–
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
, GLÊﬂà
w
 );

978 
GLAPI
 
GLAPIENTRY
 
	`glVîãx4i
–
GLöt
 
x
, GLöà
y
, GLöà
z
, GLöà
w
 );

979 
GLAPI
 
GLAPIENTRY
 
	`glVîãx4s
–
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
, GLsh‹à
w
 );

981 
GLAPI
 
GLAPIENTRY
 
	`glVîãx2dv
–c⁄° 
GLdoubÀ
 *
v
 );

982 
GLAPI
 
GLAPIENTRY
 
	`glVîãx2fv
–c⁄° 
GLÊﬂt
 *
v
 );

983 
GLAPI
 
GLAPIENTRY
 
	`glVîãx2iv
–c⁄° 
GLöt
 *
v
 );

984 
GLAPI
 
GLAPIENTRY
 
	`glVîãx2sv
–c⁄° 
GLsh‹t
 *
v
 );

986 
GLAPI
 
GLAPIENTRY
 
	`glVîãx3dv
–c⁄° 
GLdoubÀ
 *
v
 );

987 
GLAPI
 
GLAPIENTRY
 
	`glVîãx3fv
–c⁄° 
GLÊﬂt
 *
v
 );

988 
GLAPI
 
GLAPIENTRY
 
	`glVîãx3iv
–c⁄° 
GLöt
 *
v
 );

989 
GLAPI
 
GLAPIENTRY
 
	`glVîãx3sv
–c⁄° 
GLsh‹t
 *
v
 );

991 
GLAPI
 
GLAPIENTRY
 
	`glVîãx4dv
–c⁄° 
GLdoubÀ
 *
v
 );

992 
GLAPI
 
GLAPIENTRY
 
	`glVîãx4fv
–c⁄° 
GLÊﬂt
 *
v
 );

993 
GLAPI
 
GLAPIENTRY
 
	`glVîãx4iv
–c⁄° 
GLöt
 *
v
 );

994 
GLAPI
 
GLAPIENTRY
 
	`glVîãx4sv
–c⁄° 
GLsh‹t
 *
v
 );

997 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3b
–
GLbyã
 
nx
, GLbyã 
ny
, GLbyã 
nz
 );

998 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3d
–
GLdoubÀ
 
nx
, GLdoubÀ 
ny
, GLdoubÀ 
nz
 );

999 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3f
–
GLÊﬂt
 
nx
, GLÊﬂà
ny
, GLÊﬂà
nz
 );

1000 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3i
–
GLöt
 
nx
, GLöà
ny
, GLöà
nz
 );

1001 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3s
–
GLsh‹t
 
nx
, GLsh‹à
ny
, GLsh‹à
nz
 );

1003 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3bv
–c⁄° 
GLbyã
 *
v
 );

1004 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3dv
–c⁄° 
GLdoubÀ
 *
v
 );

1005 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3fv
–c⁄° 
GLÊﬂt
 *
v
 );

1006 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3iv
–c⁄° 
GLöt
 *
v
 );

1007 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆ3sv
–c⁄° 
GLsh‹t
 *
v
 );

1010 
GLAPI
 
GLAPIENTRY
 
	`glIndexd
–
GLdoubÀ
 
c
 );

1011 
GLAPI
 
GLAPIENTRY
 
	`glIndexf
–
GLÊﬂt
 
c
 );

1012 
GLAPI
 
GLAPIENTRY
 
	`glIndexi
–
GLöt
 
c
 );

1013 
GLAPI
 
GLAPIENTRY
 
	`glIndexs
–
GLsh‹t
 
c
 );

1014 
GLAPI
 
GLAPIENTRY
 
	`glIndexub
–
GLubyã
 
c
 );

1016 
GLAPI
 
GLAPIENTRY
 
	`glIndexdv
–c⁄° 
GLdoubÀ
 *
c
 );

1017 
GLAPI
 
GLAPIENTRY
 
	`glIndexfv
–c⁄° 
GLÊﬂt
 *
c
 );

1018 
GLAPI
 
GLAPIENTRY
 
	`glIndexiv
–c⁄° 
GLöt
 *
c
 );

1019 
GLAPI
 
GLAPIENTRY
 
	`glIndexsv
–c⁄° 
GLsh‹t
 *
c
 );

1020 
GLAPI
 
GLAPIENTRY
 
	`glIndexubv
–c⁄° 
GLubyã
 *
c
 );

1022 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3b
–
GLbyã
 
ªd
, GLbyã 
gªí
, GLbyã 
blue
 );

1023 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3d
–
GLdoubÀ
 
ªd
, GLdoubÀ 
gªí
, GLdoubÀ 
blue
 );

1024 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3f
–
GLÊﬂt
 
ªd
, GLÊﬂà
gªí
, GLÊﬂà
blue
 );

1025 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3i
–
GLöt
 
ªd
, GLöà
gªí
, GLöà
blue
 );

1026 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3s
–
GLsh‹t
 
ªd
, GLsh‹à
gªí
, GLsh‹à
blue
 );

1027 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3ub
–
GLubyã
 
ªd
, GLubyã 
gªí
, GLubyã 
blue
 );

1028 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3ui
–
GLuöt
 
ªd
, GLuöà
gªí
, GLuöà
blue
 );

1029 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3us
–
GLush‹t
 
ªd
, GLush‹à
gªí
, GLush‹à
blue
 );

1031 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4b
–
GLbyã
 
ªd
, GLbyã 
gªí
,

1032 
GLbyã
 
blue
, GLbyã 
Æpha
 );

1033 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4d
–
GLdoubÀ
 
ªd
, GLdoubÀ 
gªí
,

1034 
GLdoubÀ
 
blue
, GLdoubÀ 
Æpha
 );

1035 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4f
–
GLÊﬂt
 
ªd
, GLÊﬂà
gªí
,

1036 
GLÊﬂt
 
blue
, GLÊﬂà
Æpha
 );

1037 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4i
–
GLöt
 
ªd
, GLöà
gªí
,

1038 
GLöt
 
blue
, GLöà
Æpha
 );

1039 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4s
–
GLsh‹t
 
ªd
, GLsh‹à
gªí
,

1040 
GLsh‹t
 
blue
, GLsh‹à
Æpha
 );

1041 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4ub
–
GLubyã
 
ªd
, GLubyã 
gªí
,

1042 
GLubyã
 
blue
, GLubyã 
Æpha
 );

1043 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4ui
–
GLuöt
 
ªd
, GLuöà
gªí
,

1044 
GLuöt
 
blue
, GLuöà
Æpha
 );

1045 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4us
–
GLush‹t
 
ªd
, GLush‹à
gªí
,

1046 
GLush‹t
 
blue
, GLush‹à
Æpha
 );

1049 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3bv
–c⁄° 
GLbyã
 *
v
 );

1050 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3dv
–c⁄° 
GLdoubÀ
 *
v
 );

1051 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3fv
–c⁄° 
GLÊﬂt
 *
v
 );

1052 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3iv
–c⁄° 
GLöt
 *
v
 );

1053 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3sv
–c⁄° 
GLsh‹t
 *
v
 );

1054 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3ubv
–c⁄° 
GLubyã
 *
v
 );

1055 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3uiv
–c⁄° 
GLuöt
 *
v
 );

1056 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹3usv
–c⁄° 
GLush‹t
 *
v
 );

1058 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4bv
–c⁄° 
GLbyã
 *
v
 );

1059 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4dv
–c⁄° 
GLdoubÀ
 *
v
 );

1060 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4fv
–c⁄° 
GLÊﬂt
 *
v
 );

1061 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4iv
–c⁄° 
GLöt
 *
v
 );

1062 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4sv
–c⁄° 
GLsh‹t
 *
v
 );

1063 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4ubv
–c⁄° 
GLubyã
 *
v
 );

1064 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4uiv
–c⁄° 
GLuöt
 *
v
 );

1065 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹4usv
–c⁄° 
GLush‹t
 *
v
 );

1068 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d1d
–
GLdoubÀ
 
s
 );

1069 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d1f
–
GLÊﬂt
 
s
 );

1070 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d1i
–
GLöt
 
s
 );

1071 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d1s
–
GLsh‹t
 
s
 );

1073 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d2d
–
GLdoubÀ
 
s
, GLdoubÀ 
t
 );

1074 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d2f
–
GLÊﬂt
 
s
, GLÊﬂà
t
 );

1075 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d2i
–
GLöt
 
s
, GLöà
t
 );

1076 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d2s
–
GLsh‹t
 
s
, GLsh‹à
t
 );

1078 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d3d
–
GLdoubÀ
 
s
, GLdoubÀ 
t
, GLdoubÀ 
r
 );

1079 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d3f
–
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
 );

1080 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d3i
–
GLöt
 
s
, GLöà
t
, GLöà
r
 );

1081 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d3s
–
GLsh‹t
 
s
, GLsh‹à
t
, GLsh‹à
r
 );

1083 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d4d
–
GLdoubÀ
 
s
, GLdoubÀ 
t
, GLdoubÀ 
r
, GLdoubÀ 
q
 );

1084 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d4f
–
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
, GLÊﬂà
q
 );

1085 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d4i
–
GLöt
 
s
, GLöà
t
, GLöà
r
, GLöà
q
 );

1086 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d4s
–
GLsh‹t
 
s
, GLsh‹à
t
, GLsh‹à
r
, GLsh‹à
q
 );

1088 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d1dv
–c⁄° 
GLdoubÀ
 *
v
 );

1089 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d1fv
–c⁄° 
GLÊﬂt
 *
v
 );

1090 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d1iv
–c⁄° 
GLöt
 *
v
 );

1091 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d1sv
–c⁄° 
GLsh‹t
 *
v
 );

1093 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d2dv
–c⁄° 
GLdoubÀ
 *
v
 );

1094 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d2fv
–c⁄° 
GLÊﬂt
 *
v
 );

1095 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d2iv
–c⁄° 
GLöt
 *
v
 );

1096 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d2sv
–c⁄° 
GLsh‹t
 *
v
 );

1098 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d3dv
–c⁄° 
GLdoubÀ
 *
v
 );

1099 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d3fv
–c⁄° 
GLÊﬂt
 *
v
 );

1100 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d3iv
–c⁄° 
GLöt
 *
v
 );

1101 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d3sv
–c⁄° 
GLsh‹t
 *
v
 );

1103 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d4dv
–c⁄° 
GLdoubÀ
 *
v
 );

1104 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d4fv
–c⁄° 
GLÊﬂt
 *
v
 );

1105 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d4iv
–c⁄° 
GLöt
 *
v
 );

1106 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹d4sv
–c⁄° 
GLsh‹t
 *
v
 );

1109 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos2d
–
GLdoubÀ
 
x
, GLdoubÀ 
y
 );

1110 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos2f
–
GLÊﬂt
 
x
, GLÊﬂà
y
 );

1111 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos2i
–
GLöt
 
x
, GLöà
y
 );

1112 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos2s
–
GLsh‹t
 
x
, GLsh‹à
y
 );

1114 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos3d
–
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
 );

1115 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos3f
–
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
 );

1116 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos3i
–
GLöt
 
x
, GLöà
y
, GLöà
z
 );

1117 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos3s
–
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
 );

1119 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos4d
–
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
z
, GLdoubÀ 
w
 );

1120 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos4f
–
GLÊﬂt
 
x
, GLÊﬂà
y
, GLÊﬂà
z
, GLÊﬂà
w
 );

1121 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos4i
–
GLöt
 
x
, GLöà
y
, GLöà
z
, GLöà
w
 );

1122 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos4s
–
GLsh‹t
 
x
, GLsh‹à
y
, GLsh‹à
z
, GLsh‹à
w
 );

1124 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos2dv
–c⁄° 
GLdoubÀ
 *
v
 );

1125 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos2fv
–c⁄° 
GLÊﬂt
 *
v
 );

1126 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos2iv
–c⁄° 
GLöt
 *
v
 );

1127 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos2sv
–c⁄° 
GLsh‹t
 *
v
 );

1129 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos3dv
–c⁄° 
GLdoubÀ
 *
v
 );

1130 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos3fv
–c⁄° 
GLÊﬂt
 *
v
 );

1131 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos3iv
–c⁄° 
GLöt
 *
v
 );

1132 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos3sv
–c⁄° 
GLsh‹t
 *
v
 );

1134 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos4dv
–c⁄° 
GLdoubÀ
 *
v
 );

1135 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos4fv
–c⁄° 
GLÊﬂt
 *
v
 );

1136 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos4iv
–c⁄° 
GLöt
 *
v
 );

1137 
GLAPI
 
GLAPIENTRY
 
	`glRa°îPos4sv
–c⁄° 
GLsh‹t
 *
v
 );

1140 
GLAPI
 
GLAPIENTRY
 
	`glRe˘d
–
GLdoubÀ
 
x1
, GLdoubÀ 
y1
, GLdoubÀ 
x2
, GLdoubÀ 
y2
 );

1141 
GLAPI
 
GLAPIENTRY
 
	`glRe˘f
–
GLÊﬂt
 
x1
, GLÊﬂà
y1
, GLÊﬂà
x2
, GLÊﬂà
y2
 );

1142 
GLAPI
 
GLAPIENTRY
 
	`glRe˘i
–
GLöt
 
x1
, GLöà
y1
, GLöà
x2
, GLöà
y2
 );

1143 
GLAPI
 
GLAPIENTRY
 
	`glRe˘s
–
GLsh‹t
 
x1
, GLsh‹à
y1
, GLsh‹à
x2
, GLsh‹à
y2
 );

1146 
GLAPI
 
GLAPIENTRY
 
	`glRe˘dv
–c⁄° 
GLdoubÀ
 *
v1
, c⁄° GLdoubÀ *
v2
 );

1147 
GLAPI
 
GLAPIENTRY
 
	`glRe˘fv
–c⁄° 
GLÊﬂt
 *
v1
, c⁄° GLÊﬂà*
v2
 );

1148 
GLAPI
 
GLAPIENTRY
 
	`glRe˘iv
–c⁄° 
GLöt
 *
v1
, c⁄° GLöà*
v2
 );

1149 
GLAPI
 
GLAPIENTRY
 
	`glRe˘sv
–c⁄° 
GLsh‹t
 *
v1
, c⁄° GLsh‹à*
v2
 );

1156 
GLAPI
 
GLAPIENTRY
 
	`glVîãxPoöãr
–
GLöt
 
size
, 
GLíum
 
ty≥
,

1157 
GLsizei
 
°ride
, c⁄° 
GLvoid
 *
±r
 );

1159 
GLAPI
 
GLAPIENTRY
 
	`glN‹mÆPoöãr
–
GLíum
 
ty≥
, 
GLsizei
 
°ride
,

1160 c⁄° 
GLvoid
 *
±r
 );

1162 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹Poöãr
–
GLöt
 
size
, 
GLíum
 
ty≥
,

1163 
GLsizei
 
°ride
, c⁄° 
GLvoid
 *
±r
 );

1165 
GLAPI
 
GLAPIENTRY
 
	`glIndexPoöãr
–
GLíum
 
ty≥
, 
GLsizei
 
°ride
,

1166 c⁄° 
GLvoid
 *
±r
 );

1168 
GLAPI
 
GLAPIENTRY
 
	`glTexCo‹dPoöãr
–
GLöt
 
size
, 
GLíum
 
ty≥
,

1169 
GLsizei
 
°ride
, c⁄° 
GLvoid
 *
±r
 );

1171 
GLAPI
 
GLAPIENTRY
 
	`glEdgeFœgPoöãr
–
GLsizei
 
°ride
, c⁄° 
GLvoid
 *
±r
 );

1173 
GLAPI
 
GLAPIENTRY
 
	`glGëPoöãrv
–
GLíum
 
≤ame
, 
GLvoid
 **
∑øms
 );

1175 
GLAPI
 
GLAPIENTRY
 
	`glAºayEÀmít
–
GLöt
 
i
 );

1177 
GLAPI
 
GLAPIENTRY
 
	`glDøwAºays
–
GLíum
 
mode
, 
GLöt
 
fú°
, 
GLsizei
 
cou¡
 );

1179 
GLAPI
 
GLAPIENTRY
 
	`glDøwEÀmíts
–
GLíum
 
mode
, 
GLsizei
 
cou¡
,

1180 
GLíum
 
ty≥
, c⁄° 
GLvoid
 *
ödi˚s
 );

1182 
GLAPI
 
GLAPIENTRY
 
	`glI¡îÀavedAºays
–
GLíum
 
f‹m©
, 
GLsizei
 
°ride
,

1183 c⁄° 
GLvoid
 *
poöãr
 );

1189 
GLAPI
 
GLAPIENTRY
 
	`glShadeModñ
–
GLíum
 
mode
 );

1191 
GLAPI
 
GLAPIENTRY
 
	`glLightf
–
GLíum
 
light
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1192 
GLAPI
 
GLAPIENTRY
 
	`glLighti
–
GLíum
 
light
, GLíum 
≤ame
, 
GLöt
 
∑øm
 );

1193 
GLAPI
 
GLAPIENTRY
 
	`glLightfv
–
GLíum
 
light
, GLíum 
≤ame
,

1194 c⁄° 
GLÊﬂt
 *
∑øms
 );

1195 
GLAPI
 
GLAPIENTRY
 
	`glLightiv
–
GLíum
 
light
, GLíum 
≤ame
,

1196 c⁄° 
GLöt
 *
∑øms
 );

1198 
GLAPI
 
GLAPIENTRY
 
	`glGëLightfv
–
GLíum
 
light
, GLíum 
≤ame
,

1199 
GLÊﬂt
 *
∑øms
 );

1200 
GLAPI
 
GLAPIENTRY
 
	`glGëLightiv
–
GLíum
 
light
, GLíum 
≤ame
,

1201 
GLöt
 *
∑øms
 );

1203 
GLAPI
 
GLAPIENTRY
 
	`glLightModñf
–
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1204 
GLAPI
 
GLAPIENTRY
 
	`glLightModñi
–
GLíum
 
≤ame
, 
GLöt
 
∑øm
 );

1205 
GLAPI
 
GLAPIENTRY
 
	`glLightModñfv
–
GLíum
 
≤ame
, c⁄° 
GLÊﬂt
 *
∑øms
 );

1206 
GLAPI
 
GLAPIENTRY
 
	`glLightModñiv
–
GLíum
 
≤ame
, c⁄° 
GLöt
 *
∑øms
 );

1208 
GLAPI
 
GLAPIENTRY
 
	`glM©îülf
–
GLíum
 
Á˚
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1209 
GLAPI
 
GLAPIENTRY
 
	`glM©îüli
–
GLíum
 
Á˚
, GLíum 
≤ame
, 
GLöt
 
∑øm
 );

1210 
GLAPI
 
GLAPIENTRY
 
	`glM©îülfv
–
GLíum
 
Á˚
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 *
∑øms
 );

1211 
GLAPI
 
GLAPIENTRY
 
	`glM©îüliv
–
GLíum
 
Á˚
, GLíum 
≤ame
, c⁄° 
GLöt
 *
∑øms
 );

1213 
GLAPI
 
GLAPIENTRY
 
	`glGëM©îülfv
–
GLíum
 
Á˚
, GLíum 
≤ame
, 
GLÊﬂt
 *
∑øms
 );

1214 
GLAPI
 
GLAPIENTRY
 
	`glGëM©îüliv
–
GLíum
 
Á˚
, GLíum 
≤ame
, 
GLöt
 *
∑øms
 );

1216 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹M©îül
–
GLíum
 
Á˚
, GLíum 
mode
 );

1223 
GLAPI
 
GLAPIENTRY
 
	`glPixñZoom
–
GLÊﬂt
 
xÁ˘‹
, GLÊﬂà
yÁ˘‹
 );

1225 
GLAPI
 
GLAPIENTRY
 
	`glPixñSt‹ef
–
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1226 
GLAPI
 
GLAPIENTRY
 
	`glPixñSt‹ei
–
GLíum
 
≤ame
, 
GLöt
 
∑øm
 );

1228 
GLAPI
 
GLAPIENTRY
 
	`glPixñTøns„rf
–
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1229 
GLAPI
 
GLAPIENTRY
 
	`glPixñTøns„ri
–
GLíum
 
≤ame
, 
GLöt
 
∑øm
 );

1231 
GLAPI
 
GLAPIENTRY
 
	`glPixñM≠fv
–
GLíum
 
m≠
, 
GLsizei
 
m≠size
,

1232 c⁄° 
GLÊﬂt
 *
vÆues
 );

1233 
GLAPI
 
GLAPIENTRY
 
	`glPixñM≠uiv
–
GLíum
 
m≠
, 
GLsizei
 
m≠size
,

1234 c⁄° 
GLuöt
 *
vÆues
 );

1235 
GLAPI
 
GLAPIENTRY
 
	`glPixñM≠usv
–
GLíum
 
m≠
, 
GLsizei
 
m≠size
,

1236 c⁄° 
GLush‹t
 *
vÆues
 );

1238 
GLAPI
 
GLAPIENTRY
 
	`glGëPixñM≠fv
–
GLíum
 
m≠
, 
GLÊﬂt
 *
vÆues
 );

1239 
GLAPI
 
GLAPIENTRY
 
	`glGëPixñM≠uiv
–
GLíum
 
m≠
, 
GLuöt
 *
vÆues
 );

1240 
GLAPI
 
GLAPIENTRY
 
	`glGëPixñM≠usv
–
GLíum
 
m≠
, 
GLush‹t
 *
vÆues
 );

1242 
GLAPI
 
GLAPIENTRY
 
	`glBôm≠
–
GLsizei
 
width
, GLsizeò
height
,

1243 
GLÊﬂt
 
x‹ig
, GLÊﬂà
y‹ig
,

1244 
GLÊﬂt
 
xmove
, GLÊﬂà
ymove
,

1245 c⁄° 
GLubyã
 *
bôm≠
 );

1247 
GLAPI
 
GLAPIENTRY
 
	`glRódPixñs
–
GLöt
 
x
, GLöà
y
,

1248 
GLsizei
 
width
, GLsizeò
height
,

1249 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1250 
GLvoid
 *
pixñs
 );

1252 
GLAPI
 
GLAPIENTRY
 
	`glDøwPixñs
–
GLsizei
 
width
, GLsizeò
height
,

1253 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1254 c⁄° 
GLvoid
 *
pixñs
 );

1256 
GLAPI
 
GLAPIENTRY
 
	`glC›yPixñs
–
GLöt
 
x
, GLöà
y
,

1257 
GLsizei
 
width
, GLsizeò
height
,

1258 
GLíum
 
ty≥
 );

1264 
GLAPI
 
GLAPIENTRY
 
	`glSãncûFunc
–
GLíum
 
func
, 
GLöt
 
ªf
, 
GLuöt
 
mask
 );

1266 
GLAPI
 
GLAPIENTRY
 
	`glSãncûMask
–
GLuöt
 
mask
 );

1268 
GLAPI
 
GLAPIENTRY
 
	`glSãncûOp
–
GLíum
 
Áû
, GLíum 
zÁû
, GLíum 
z∑ss
 );

1270 
GLAPI
 
GLAPIENTRY
 
	`glCÀ¨Sãncû
–
GLöt
 
s
 );

1278 
GLAPI
 
GLAPIENTRY
 
	`glTexGíd
–
GLíum
 
co‹d
, GLíum 
≤ame
, 
GLdoubÀ
 
∑øm
 );

1279 
GLAPI
 
GLAPIENTRY
 
	`glTexGíf
–
GLíum
 
co‹d
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1280 
GLAPI
 
GLAPIENTRY
 
	`glTexGíi
–
GLíum
 
co‹d
, GLíum 
≤ame
, 
GLöt
 
∑øm
 );

1282 
GLAPI
 
GLAPIENTRY
 
	`glTexGídv
–
GLíum
 
co‹d
, GLíum 
≤ame
, c⁄° 
GLdoubÀ
 *
∑øms
 );

1283 
GLAPI
 
GLAPIENTRY
 
	`glTexGífv
–
GLíum
 
co‹d
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 *
∑øms
 );

1284 
GLAPI
 
GLAPIENTRY
 
	`glTexGíiv
–
GLíum
 
co‹d
, GLíum 
≤ame
, c⁄° 
GLöt
 *
∑øms
 );

1286 
GLAPI
 
GLAPIENTRY
 
	`glGëTexGídv
–
GLíum
 
co‹d
, GLíum 
≤ame
, 
GLdoubÀ
 *
∑øms
 );

1287 
GLAPI
 
GLAPIENTRY
 
	`glGëTexGífv
–
GLíum
 
co‹d
, GLíum 
≤ame
, 
GLÊﬂt
 *
∑øms
 );

1288 
GLAPI
 
GLAPIENTRY
 
	`glGëTexGíiv
–
GLíum
 
co‹d
, GLíum 
≤ame
, 
GLöt
 *
∑øms
 );

1291 
GLAPI
 
GLAPIENTRY
 
	`glTexEnvf
–
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1292 
GLAPI
 
GLAPIENTRY
 
	`glTexEnvi
–
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 
∑øm
 );

1294 
GLAPI
 
GLAPIENTRY
 
	`glTexEnvfv
–
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLÊﬂt
 *
∑øms
 );

1295 
GLAPI
 
GLAPIENTRY
 
	`glTexEnviv
–
GLíum
 
èrgë
, GLíum 
≤ame
, c⁄° 
GLöt
 *
∑øms
 );

1297 
GLAPI
 
GLAPIENTRY
 
	`glGëTexEnvfv
–
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 *
∑øms
 );

1298 
GLAPI
 
GLAPIENTRY
 
	`glGëTexEnviv
–
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 *
∑øms
 );

1301 
GLAPI
 
GLAPIENTRY
 
	`glTexP¨amëîf
–
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1302 
GLAPI
 
GLAPIENTRY
 
	`glTexP¨amëîi
–
GLíum
 
èrgë
, GLíum 
≤ame
, 
GLöt
 
∑øm
 );

1304 
GLAPI
 
GLAPIENTRY
 
	`glTexP¨amëîfv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1305 c⁄° 
GLÊﬂt
 *
∑øms
 );

1306 
GLAPI
 
GLAPIENTRY
 
	`glTexP¨amëîiv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1307 c⁄° 
GLöt
 *
∑øms
 );

1309 
GLAPI
 
GLAPIENTRY
 
	`glGëTexP¨amëîfv
–
GLíum
 
èrgë
,

1310 
GLíum
 
≤ame
, 
GLÊﬂt
 *
∑øms
);

1311 
GLAPI
 
GLAPIENTRY
 
	`glGëTexP¨amëîiv
–
GLíum
 
èrgë
,

1312 
GLíum
 
≤ame
, 
GLöt
 *
∑øms
 );

1314 
GLAPI
 
GLAPIENTRY
 
	`glGëTexLevñP¨amëîfv
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1315 
GLíum
 
≤ame
, 
GLÊﬂt
 *
∑øms
 );

1316 
GLAPI
 
GLAPIENTRY
 
	`glGëTexLevñP¨amëîiv
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1317 
GLíum
 
≤ame
, 
GLöt
 *
∑øms
 );

1320 
GLAPI
 
GLAPIENTRY
 
	`glTexImage1D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1321 
GLöt
 
öã∫ÆF‹m©
,

1322 
GLsizei
 
width
, 
GLöt
 
b‹dî
,

1323 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1324 c⁄° 
GLvoid
 *
pixñs
 );

1326 
GLAPI
 
GLAPIENTRY
 
	`glTexImage2D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1327 
GLöt
 
öã∫ÆF‹m©
,

1328 
GLsizei
 
width
, GLsizeò
height
,

1329 
GLöt
 
b‹dî
, 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1330 c⁄° 
GLvoid
 *
pixñs
 );

1332 
GLAPI
 
GLAPIENTRY
 
	`glGëTexImage
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1333 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1334 
GLvoid
 *
pixñs
 );

1339 
GLAPI
 
GLAPIENTRY
 
	`glGíTextuªs
–
GLsizei
 
n
, 
GLuöt
 *
ãxtuªs
 );

1341 
GLAPI
 
GLAPIENTRY
 
	`glDñëeTextuªs
–
GLsizei
 
n
, c⁄° 
GLuöt
 *
ãxtuªs
);

1343 
GLAPI
 
GLAPIENTRY
 
	`glBödTextuª
–
GLíum
 
èrgë
, 
GLuöt
 
ãxtuª
 );

1345 
GLAPI
 
GLAPIENTRY
 
	`glPri‹ôizeTextuªs
–
GLsizei
 
n
,

1346 c⁄° 
GLuöt
 *
ãxtuªs
,

1347 c⁄° 
GL˛ampf
 *
¥i‹ôõs
 );

1349 
GLAPI
 
GLboﬁón
 
GLAPIENTRY
 
	`glAªTextuªsResidít
–
GLsizei
 
n
,

1350 c⁄° 
GLuöt
 *
ãxtuªs
,

1351 
GLboﬁón
 *
ªsidí˚s
 );

1353 
GLAPI
 
GLboﬁón
 
GLAPIENTRY
 
	`glIsTextuª
–
GLuöt
 
ãxtuª
 );

1356 
GLAPI
 
GLAPIENTRY
 
	`glTexSubImage1D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1357 
GLöt
 
xoff£t
,

1358 
GLsizei
 
width
, 
GLíum
 
f‹m©
,

1359 
GLíum
 
ty≥
, c⁄° 
GLvoid
 *
pixñs
 );

1362 
GLAPI
 
GLAPIENTRY
 
	`glTexSubImage2D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1363 
GLöt
 
xoff£t
, GLöà
yoff£t
,

1364 
GLsizei
 
width
, GLsizeò
height
,

1365 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1366 c⁄° 
GLvoid
 *
pixñs
 );

1369 
GLAPI
 
GLAPIENTRY
 
	`glC›yTexImage1D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1370 
GLíum
 
öã∫Æf‹m©
,

1371 
GLöt
 
x
, GLöà
y
,

1372 
GLsizei
 
width
, 
GLöt
 
b‹dî
 );

1375 
GLAPI
 
GLAPIENTRY
 
	`glC›yTexImage2D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1376 
GLíum
 
öã∫Æf‹m©
,

1377 
GLöt
 
x
, GLöà
y
,

1378 
GLsizei
 
width
, GLsizeò
height
,

1379 
GLöt
 
b‹dî
 );

1382 
GLAPI
 
GLAPIENTRY
 
	`glC›yTexSubImage1D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1383 
GLöt
 
xoff£t
, GLöà
x
, GLöà
y
,

1384 
GLsizei
 
width
 );

1387 
GLAPI
 
GLAPIENTRY
 
	`glC›yTexSubImage2D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1388 
GLöt
 
xoff£t
, GLöà
yoff£t
,

1389 
GLöt
 
x
, GLöà
y
,

1390 
GLsizei
 
width
, GLsizeò
height
 );

1397 
GLAPI
 
GLAPIENTRY
 
	`glM≠1d
–
GLíum
 
èrgë
, 
GLdoubÀ
 
u1
, GLdoubÀ 
u2
,

1398 
GLöt
 
°ride
,

1399 
GLöt
 
‹dî
, c⁄° 
GLdoubÀ
 *
poöts
 );

1400 
GLAPI
 
GLAPIENTRY
 
	`glM≠1f
–
GLíum
 
èrgë
, 
GLÊﬂt
 
u1
, GLÊﬂà
u2
,

1401 
GLöt
 
°ride
,

1402 
GLöt
 
‹dî
, c⁄° 
GLÊﬂt
 *
poöts
 );

1404 
GLAPI
 
GLAPIENTRY
 
	`glM≠2d
–
GLíum
 
èrgë
,

1405 
GLdoubÀ
 
u1
, GLdoubÀ 
u2
, 
GLöt
 
u°ride
, GLöà
u‹dî
,

1406 
GLdoubÀ
 
v1
, GLdoubÀ 
v2
, 
GLöt
 
v°ride
, GLöà
v‹dî
,

1407 c⁄° 
GLdoubÀ
 *
poöts
 );

1408 
GLAPI
 
GLAPIENTRY
 
	`glM≠2f
–
GLíum
 
èrgë
,

1409 
GLÊﬂt
 
u1
, GLÊﬂà
u2
, 
GLöt
 
u°ride
, GLöà
u‹dî
,

1410 
GLÊﬂt
 
v1
, GLÊﬂà
v2
, 
GLöt
 
v°ride
, GLöà
v‹dî
,

1411 c⁄° 
GLÊﬂt
 *
poöts
 );

1413 
GLAPI
 
GLAPIENTRY
 
	`glGëM≠dv
–
GLíum
 
èrgë
, GLíum 
quîy
, 
GLdoubÀ
 *
v
 );

1414 
GLAPI
 
GLAPIENTRY
 
	`glGëM≠fv
–
GLíum
 
èrgë
, GLíum 
quîy
, 
GLÊﬂt
 *
v
 );

1415 
GLAPI
 
GLAPIENTRY
 
	`glGëM≠iv
–
GLíum
 
èrgë
, GLíum 
quîy
, 
GLöt
 *
v
 );

1417 
GLAPI
 
GLAPIENTRY
 
	`glEvÆCo‹d1d
–
GLdoubÀ
 
u
 );

1418 
GLAPI
 
GLAPIENTRY
 
	`glEvÆCo‹d1f
–
GLÊﬂt
 
u
 );

1420 
GLAPI
 
GLAPIENTRY
 
	`glEvÆCo‹d1dv
–c⁄° 
GLdoubÀ
 *
u
 );

1421 
GLAPI
 
GLAPIENTRY
 
	`glEvÆCo‹d1fv
–c⁄° 
GLÊﬂt
 *
u
 );

1423 
GLAPI
 
GLAPIENTRY
 
	`glEvÆCo‹d2d
–
GLdoubÀ
 
u
, GLdoubÀ 
v
 );

1424 
GLAPI
 
GLAPIENTRY
 
	`glEvÆCo‹d2f
–
GLÊﬂt
 
u
, GLÊﬂà
v
 );

1426 
GLAPI
 
GLAPIENTRY
 
	`glEvÆCo‹d2dv
–c⁄° 
GLdoubÀ
 *
u
 );

1427 
GLAPI
 
GLAPIENTRY
 
	`glEvÆCo‹d2fv
–c⁄° 
GLÊﬂt
 *
u
 );

1429 
GLAPI
 
GLAPIENTRY
 
	`glM≠Grid1d
–
GLöt
 
un
, 
GLdoubÀ
 
u1
, GLdoubÀ 
u2
 );

1430 
GLAPI
 
GLAPIENTRY
 
	`glM≠Grid1f
–
GLöt
 
un
, 
GLÊﬂt
 
u1
, GLÊﬂà
u2
 );

1432 
GLAPI
 
GLAPIENTRY
 
	`glM≠Grid2d
–
GLöt
 
un
, 
GLdoubÀ
 
u1
, GLdoubÀ 
u2
,

1433 
GLöt
 
vn
, 
GLdoubÀ
 
v1
, GLdoubÀ 
v2
 );

1434 
GLAPI
 
GLAPIENTRY
 
	`glM≠Grid2f
–
GLöt
 
un
, 
GLÊﬂt
 
u1
, GLÊﬂà
u2
,

1435 
GLöt
 
vn
, 
GLÊﬂt
 
v1
, GLÊﬂà
v2
 );

1437 
GLAPI
 
GLAPIENTRY
 
	`glEvÆPoöt1
–
GLöt
 
i
 );

1439 
GLAPI
 
GLAPIENTRY
 
	`glEvÆPoöt2
–
GLöt
 
i
, GLöà
j
 );

1441 
GLAPI
 
GLAPIENTRY
 
	`glEvÆMesh1
–
GLíum
 
mode
, 
GLöt
 
i1
, GLöà
i2
 );

1443 
GLAPI
 
GLAPIENTRY
 
	`glEvÆMesh2
–
GLíum
 
mode
, 
GLöt
 
i1
, GLöà
i2
, GLöà
j1
, GLöà
j2
 );

1450 
GLAPI
 
GLAPIENTRY
 
	`glFogf
–
GLíum
 
≤ame
, 
GLÊﬂt
 
∑øm
 );

1452 
GLAPI
 
GLAPIENTRY
 
	`glFogi
–
GLíum
 
≤ame
, 
GLöt
 
∑øm
 );

1454 
GLAPI
 
GLAPIENTRY
 
	`glFogfv
–
GLíum
 
≤ame
, c⁄° 
GLÊﬂt
 *
∑øms
 );

1456 
GLAPI
 
GLAPIENTRY
 
	`glFogiv
–
GLíum
 
≤ame
, c⁄° 
GLöt
 *
∑øms
 );

1463 
GLAPI
 
GLAPIENTRY
 
	`glFìdbackBuf„r
–
GLsizei
 
size
, 
GLíum
 
ty≥
, 
GLÊﬂt
 *
buf„r
 );

1465 
GLAPI
 
GLAPIENTRY
 
	`glPassThrough
–
GLÊﬂt
 
tokí
 );

1467 
GLAPI
 
GLAPIENTRY
 
	`glSñe˘Buf„r
–
GLsizei
 
size
, 
GLuöt
 *
buf„r
 );

1469 
GLAPI
 
GLAPIENTRY
 
	`glInôNames
( );

1471 
GLAPI
 
GLAPIENTRY
 
	`glLﬂdName
–
GLuöt
 
«me
 );

1473 
GLAPI
 
GLAPIENTRY
 
	`glPushName
–
GLuöt
 
«me
 );

1475 
GLAPI
 
GLAPIENTRY
 
	`glP›Name
( );

1483 
	#GL_RESCALE_NORMAL
 0x803A

	)

1484 
	#GL_CLAMP_TO_EDGE
 0x812F

	)

1485 
	#GL_MAX_ELEMENTS_VERTICES
 0x80E8

	)

1486 
	#GL_MAX_ELEMENTS_INDICES
 0x80E9

	)

1487 
	#GL_BGR
 0x80E0

	)

1488 
	#GL_BGRA
 0x80E1

	)

1489 
	#GL_UNSIGNED_BYTE_3_3_2
 0x8032

	)

1490 
	#GL_UNSIGNED_BYTE_2_3_3_REV
 0x8362

	)

1491 
	#GL_UNSIGNED_SHORT_5_6_5
 0x8363

	)

1492 
	#GL_UNSIGNED_SHORT_5_6_5_REV
 0x8364

	)

1493 
	#GL_UNSIGNED_SHORT_4_4_4_4
 0x8033

	)

1494 
	#GL_UNSIGNED_SHORT_4_4_4_4_REV
 0x8365

	)

1495 
	#GL_UNSIGNED_SHORT_5_5_5_1
 0x8034

	)

1496 
	#GL_UNSIGNED_SHORT_1_5_5_5_REV
 0x8366

	)

1497 
	#GL_UNSIGNED_INT_8_8_8_8
 0x8035

	)

1498 
	#GL_UNSIGNED_INT_8_8_8_8_REV
 0x8367

	)

1499 
	#GL_UNSIGNED_INT_10_10_10_2
 0x8036

	)

1500 
	#GL_UNSIGNED_INT_2_10_10_10_REV
 0x8368

	)

1501 
	#GL_LIGHT_MODEL_COLOR_CONTROL
 0x81F8

	)

1502 
	#GL_SINGLE_COLOR
 0x81F9

	)

1503 
	#GL_SEPARATE_SPECULAR_COLOR
 0x81FA

	)

1504 
	#GL_TEXTURE_MIN_LOD
 0x813A

	)

1505 
	#GL_TEXTURE_MAX_LOD
 0x813B

	)

1506 
	#GL_TEXTURE_BASE_LEVEL
 0x813C

	)

1507 
	#GL_TEXTURE_MAX_LEVEL
 0x813D

	)

1508 
	#GL_SMOOTH_POINT_SIZE_RANGE
 0x0B12

	)

1509 
	#GL_SMOOTH_POINT_SIZE_GRANULARITY
 0x0B13

	)

1510 
	#GL_SMOOTH_LINE_WIDTH_RANGE
 0x0B22

	)

1511 
	#GL_SMOOTH_LINE_WIDTH_GRANULARITY
 0x0B23

	)

1512 
	#GL_ALIASED_POINT_SIZE_RANGE
 0x846D

	)

1513 
	#GL_ALIASED_LINE_WIDTH_RANGE
 0x846E

	)

1514 
	#GL_PACK_SKIP_IMAGES
 0x806B

	)

1515 
	#GL_PACK_IMAGE_HEIGHT
 0x806C

	)

1516 
	#GL_UNPACK_SKIP_IMAGES
 0x806D

	)

1517 
	#GL_UNPACK_IMAGE_HEIGHT
 0x806E

	)

1518 
	#GL_TEXTURE_3D
 0x806F

	)

1519 
	#GL_PROXY_TEXTURE_3D
 0x8070

	)

1520 
	#GL_TEXTURE_DEPTH
 0x8071

	)

1521 
	#GL_TEXTURE_WRAP_R
 0x8072

	)

1522 
	#GL_MAX_3D_TEXTURE_SIZE
 0x8073

	)

1523 
	#GL_TEXTURE_BINDING_3D
 0x806A

	)

1525 
GLAPI
 
GLAPIENTRY
 
	`glDøwR™geEÀmíts
–
GLíum
 
mode
, 
GLuöt
 
°¨t
,

1526 
GLuöt
 
íd
, 
GLsizei
 
cou¡
, 
GLíum
 
ty≥
, c⁄° 
GLvoid
 *
ödi˚s
 );

1528 
GLAPI
 
GLAPIENTRY
 
	`glTexImage3D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1529 
GLöt
 
öã∫ÆF‹m©
,

1530 
GLsizei
 
width
, GLsizeò
height
,

1531 
GLsizei
 
dïth
, 
GLöt
 
b‹dî
,

1532 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1533 c⁄° 
GLvoid
 *
pixñs
 );

1535 
GLAPI
 
GLAPIENTRY
 
	`glTexSubImage3D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1536 
GLöt
 
xoff£t
, GLöà
yoff£t
,

1537 
GLöt
 
zoff£t
, 
GLsizei
 
width
,

1538 
GLsizei
 
height
, GLsizeò
dïth
,

1539 
GLíum
 
f‹m©
,

1540 
GLíum
 
ty≥
, c⁄° 
GLvoid
 *
pixñs
);

1542 
GLAPI
 
GLAPIENTRY
 
	`glC›yTexSubImage3D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
,

1543 
GLöt
 
xoff£t
, GLöà
yoff£t
,

1544 
GLöt
 
zoff£t
, GLöà
x
,

1545 
GLöt
 
y
, 
GLsizei
 
width
,

1546 
GLsizei
 
height
 );

1548 (
	tAPIENTRYP
 
	tPFNGLDRAWRANGEELEMENTSPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
);

1549 (
	tAPIENTRYP
 
	tPFNGLTEXIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

1550 (
	tAPIENTRYP
 
	tPFNGLTEXSUBIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

1551 (
	tAPIENTRYP
 
	tPFNGLCOPYTEXSUBIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

1558 
	#GL_CONSTANT_COLOR
 0x8001

	)

1559 
	#GL_ONE_MINUS_CONSTANT_COLOR
 0x8002

	)

1560 
	#GL_CONSTANT_ALPHA
 0x8003

	)

1561 
	#GL_ONE_MINUS_CONSTANT_ALPHA
 0x8004

	)

1562 
	#GL_COLOR_TABLE
 0x80D0

	)

1563 
	#GL_POST_CONVOLUTION_COLOR_TABLE
 0x80D1

	)

1564 
	#GL_POST_COLOR_MATRIX_COLOR_TABLE
 0x80D2

	)

1565 
	#GL_PROXY_COLOR_TABLE
 0x80D3

	)

1566 
	#GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
 0x80D4

	)

1567 
	#GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
 0x80D5

	)

1568 
	#GL_COLOR_TABLE_SCALE
 0x80D6

	)

1569 
	#GL_COLOR_TABLE_BIAS
 0x80D7

	)

1570 
	#GL_COLOR_TABLE_FORMAT
 0x80D8

	)

1571 
	#GL_COLOR_TABLE_WIDTH
 0x80D9

	)

1572 
	#GL_COLOR_TABLE_RED_SIZE
 0x80DA

	)

1573 
	#GL_COLOR_TABLE_GREEN_SIZE
 0x80DB

	)

1574 
	#GL_COLOR_TABLE_BLUE_SIZE
 0x80DC

	)

1575 
	#GL_COLOR_TABLE_ALPHA_SIZE
 0x80DD

	)

1576 
	#GL_COLOR_TABLE_LUMINANCE_SIZE
 0x80DE

	)

1577 
	#GL_COLOR_TABLE_INTENSITY_SIZE
 0x80DF

	)

1578 
	#GL_CONVOLUTION_1D
 0x8010

	)

1579 
	#GL_CONVOLUTION_2D
 0x8011

	)

1580 
	#GL_SEPARABLE_2D
 0x8012

	)

1581 
	#GL_CONVOLUTION_BORDER_MODE
 0x8013

	)

1582 
	#GL_CONVOLUTION_FILTER_SCALE
 0x8014

	)

1583 
	#GL_CONVOLUTION_FILTER_BIAS
 0x8015

	)

1584 
	#GL_REDUCE
 0x8016

	)

1585 
	#GL_CONVOLUTION_FORMAT
 0x8017

	)

1586 
	#GL_CONVOLUTION_WIDTH
 0x8018

	)

1587 
	#GL_CONVOLUTION_HEIGHT
 0x8019

	)

1588 
	#GL_MAX_CONVOLUTION_WIDTH
 0x801A

	)

1589 
	#GL_MAX_CONVOLUTION_HEIGHT
 0x801B

	)

1590 
	#GL_POST_CONVOLUTION_RED_SCALE
 0x801C

	)

1591 
	#GL_POST_CONVOLUTION_GREEN_SCALE
 0x801D

	)

1592 
	#GL_POST_CONVOLUTION_BLUE_SCALE
 0x801E

	)

1593 
	#GL_POST_CONVOLUTION_ALPHA_SCALE
 0x801F

	)

1594 
	#GL_POST_CONVOLUTION_RED_BIAS
 0x8020

	)

1595 
	#GL_POST_CONVOLUTION_GREEN_BIAS
 0x8021

	)

1596 
	#GL_POST_CONVOLUTION_BLUE_BIAS
 0x8022

	)

1597 
	#GL_POST_CONVOLUTION_ALPHA_BIAS
 0x8023

	)

1598 
	#GL_CONSTANT_BORDER
 0x8151

	)

1599 
	#GL_REPLICATE_BORDER
 0x8153

	)

1600 
	#GL_CONVOLUTION_BORDER_COLOR
 0x8154

	)

1601 
	#GL_COLOR_MATRIX
 0x80B1

	)

1602 
	#GL_COLOR_MATRIX_STACK_DEPTH
 0x80B2

	)

1603 
	#GL_MAX_COLOR_MATRIX_STACK_DEPTH
 0x80B3

	)

1604 
	#GL_POST_COLOR_MATRIX_RED_SCALE
 0x80B4

	)

1605 
	#GL_POST_COLOR_MATRIX_GREEN_SCALE
 0x80B5

	)

1606 
	#GL_POST_COLOR_MATRIX_BLUE_SCALE
 0x80B6

	)

1607 
	#GL_POST_COLOR_MATRIX_ALPHA_SCALE
 0x80B7

	)

1608 
	#GL_POST_COLOR_MATRIX_RED_BIAS
 0x80B8

	)

1609 
	#GL_POST_COLOR_MATRIX_GREEN_BIAS
 0x80B9

	)

1610 
	#GL_POST_COLOR_MATRIX_BLUE_BIAS
 0x80BA

	)

1611 
	#GL_POST_COLOR_MATRIX_ALPHA_BIAS
 0x80BB

	)

1612 
	#GL_HISTOGRAM
 0x8024

	)

1613 
	#GL_PROXY_HISTOGRAM
 0x8025

	)

1614 
	#GL_HISTOGRAM_WIDTH
 0x8026

	)

1615 
	#GL_HISTOGRAM_FORMAT
 0x8027

	)

1616 
	#GL_HISTOGRAM_RED_SIZE
 0x8028

	)

1617 
	#GL_HISTOGRAM_GREEN_SIZE
 0x8029

	)

1618 
	#GL_HISTOGRAM_BLUE_SIZE
 0x802A

	)

1619 
	#GL_HISTOGRAM_ALPHA_SIZE
 0x802B

	)

1620 
	#GL_HISTOGRAM_LUMINANCE_SIZE
 0x802C

	)

1621 
	#GL_HISTOGRAM_SINK
 0x802D

	)

1622 
	#GL_MINMAX
 0x802E

	)

1623 
	#GL_MINMAX_FORMAT
 0x802F

	)

1624 
	#GL_MINMAX_SINK
 0x8030

	)

1625 
	#GL_TABLE_TOO_LARGE
 0x8031

	)

1626 
	#GL_BLEND_EQUATION
 0x8009

	)

1627 
	#GL_MIN
 0x8007

	)

1628 
	#GL_MAX
 0x8008

	)

1629 
	#GL_FUNC_ADD
 0x8006

	)

1630 
	#GL_FUNC_SUBTRACT
 0x800A

	)

1631 
	#GL_FUNC_REVERSE_SUBTRACT
 0x800B

	)

1632 
	#GL_BLEND_COLOR
 0x8005

	)

1635 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹TabÀ
–
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
,

1636 
GLsizei
 
width
, 
GLíum
 
f‹m©
,

1637 
GLíum
 
ty≥
, c⁄° 
GLvoid
 *
èbÀ
 );

1639 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹SubTabÀ
–
GLíum
 
èrgë
,

1640 
GLsizei
 
°¨t
, GLsizeò
cou¡
,

1641 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1642 c⁄° 
GLvoid
 *
d©a
 );

1644 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹TabÀP¨amëîiv
(
GLíum
 
èrgë
, GLíum 
≤ame
,

1645 c⁄° 
GLöt
 *
∑øms
);

1647 
GLAPI
 
GLAPIENTRY
 
	`glCﬁ‹TabÀP¨amëîfv
(
GLíum
 
èrgë
, GLíum 
≤ame
,

1648 c⁄° 
GLÊﬂt
 *
∑øms
);

1650 
GLAPI
 
GLAPIENTRY
 
	`glC›yCﬁ‹SubTabÀ
–
GLíum
 
èrgë
, 
GLsizei
 
°¨t
,

1651 
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
 );

1653 
GLAPI
 
GLAPIENTRY
 
	`glC›yCﬁ‹TabÀ
–
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
,

1654 
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
 );

1656 
GLAPI
 
GLAPIENTRY
 
	`glGëCﬁ‹TabÀ
–
GLíum
 
èrgë
, GLíum 
f‹m©
,

1657 
GLíum
 
ty≥
, 
GLvoid
 *
èbÀ
 );

1659 
GLAPI
 
GLAPIENTRY
 
	`glGëCﬁ‹TabÀP¨amëîfv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1660 
GLÊﬂt
 *
∑øms
 );

1662 
GLAPI
 
GLAPIENTRY
 
	`glGëCﬁ‹TabÀP¨amëîiv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1663 
GLöt
 *
∑øms
 );

1665 
GLAPI
 
GLAPIENTRY
 
	`glBÀndEqu©i⁄
–
GLíum
 
mode
 );

1667 
GLAPI
 
GLAPIENTRY
 
	`glBÀndCﬁ‹
–
GL˛ampf
 
ªd
, GL˛amp‡
gªí
,

1668 
GL˛ampf
 
blue
, GL˛amp‡
Æpha
 );

1670 
GLAPI
 
GLAPIENTRY
 
	`glHi°ogøm
–
GLíum
 
èrgë
, 
GLsizei
 
width
,

1671 
GLíum
 
öã∫Æf‹m©
, 
GLboﬁón
 
sök
 );

1673 
GLAPI
 
GLAPIENTRY
 
	`glRe£tHi°ogøm
–
GLíum
 
èrgë
 );

1675 
GLAPI
 
GLAPIENTRY
 
	`glGëHi°ogøm
–
GLíum
 
èrgë
, 
GLboﬁón
 
ª£t
,

1676 
GLíum
 
f‹m©
, GLíum 
ty≥
,

1677 
GLvoid
 *
vÆues
 );

1679 
GLAPI
 
GLAPIENTRY
 
	`glGëHi°ogømP¨amëîfv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1680 
GLÊﬂt
 *
∑øms
 );

1682 
GLAPI
 
GLAPIENTRY
 
	`glGëHi°ogømP¨amëîiv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1683 
GLöt
 *
∑øms
 );

1685 
GLAPI
 
GLAPIENTRY
 
	`glMömax
–
GLíum
 
èrgë
, GLíum 
öã∫Æf‹m©
,

1686 
GLboﬁón
 
sök
 );

1688 
GLAPI
 
GLAPIENTRY
 
	`glRe£tMömax
–
GLíum
 
èrgë
 );

1690 
GLAPI
 
GLAPIENTRY
 
	`glGëMömax
–
GLíum
 
èrgë
, 
GLboﬁón
 
ª£t
,

1691 
GLíum
 
f‹m©
, GLíum 
ty≥s
,

1692 
GLvoid
 *
vÆues
 );

1694 
GLAPI
 
GLAPIENTRY
 
	`glGëMömaxP¨amëîfv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1695 
GLÊﬂt
 *
∑øms
 );

1697 
GLAPI
 
GLAPIENTRY
 
	`glGëMömaxP¨amëîiv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1698 
GLöt
 *
∑øms
 );

1700 
GLAPI
 
GLAPIENTRY
 
	`glC⁄vﬁuti⁄Fûãr1D
–
GLíum
 
èrgë
,

1701 
GLíum
 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLíum 
f‹m©
, GLíum 
ty≥
,

1702 c⁄° 
GLvoid
 *
image
 );

1704 
GLAPI
 
GLAPIENTRY
 
	`glC⁄vﬁuti⁄Fûãr2D
–
GLíum
 
èrgë
,

1705 
GLíum
 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
,

1706 
GLíum
 
ty≥
, c⁄° 
GLvoid
 *
image
 );

1708 
GLAPI
 
GLAPIENTRY
 
	`glC⁄vﬁuti⁄P¨amëîf
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1709 
GLÊﬂt
 
∑øms
 );

1711 
GLAPI
 
GLAPIENTRY
 
	`glC⁄vﬁuti⁄P¨amëîfv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1712 c⁄° 
GLÊﬂt
 *
∑øms
 );

1714 
GLAPI
 
GLAPIENTRY
 
	`glC⁄vﬁuti⁄P¨amëîi
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1715 
GLöt
 
∑øms
 );

1717 
GLAPI
 
GLAPIENTRY
 
	`glC⁄vﬁuti⁄P¨amëîiv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1718 c⁄° 
GLöt
 *
∑øms
 );

1720 
GLAPI
 
GLAPIENTRY
 
	`glC›yC⁄vﬁuti⁄Fûãr1D
–
GLíum
 
èrgë
,

1721 
GLíum
 
öã∫Æf‹m©
, 
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
 );

1723 
GLAPI
 
GLAPIENTRY
 
	`glC›yC⁄vﬁuti⁄Fûãr2D
–
GLíum
 
èrgë
,

1724 
GLíum
 
öã∫Æf‹m©
, 
GLöt
 
x
, GLöà
y
, 
GLsizei
 
width
,

1725 
GLsizei
 
height
);

1727 
GLAPI
 
GLAPIENTRY
 
	`glGëC⁄vﬁuti⁄Fûãr
–
GLíum
 
èrgë
, GLíum 
f‹m©
,

1728 
GLíum
 
ty≥
, 
GLvoid
 *
image
 );

1730 
GLAPI
 
GLAPIENTRY
 
	`glGëC⁄vﬁuti⁄P¨amëîfv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1731 
GLÊﬂt
 *
∑øms
 );

1733 
GLAPI
 
GLAPIENTRY
 
	`glGëC⁄vﬁuti⁄P¨amëîiv
–
GLíum
 
èrgë
, GLíum 
≤ame
,

1734 
GLöt
 *
∑øms
 );

1736 
GLAPI
 
GLAPIENTRY
 
	`glSï¨abÀFûãr2D
–
GLíum
 
èrgë
,

1737 
GLíum
 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
,

1738 
GLíum
 
ty≥
, c⁄° 
GLvoid
 *
row
, c⁄° GLvoid *
cﬁumn
 );

1740 
GLAPI
 
GLAPIENTRY
 
	`glGëSï¨abÀFûãr
–
GLíum
 
èrgë
, GLíum 
f‹m©
,

1741 
GLíum
 
ty≥
, 
GLvoid
 *
row
, GLvoid *
cﬁumn
, GLvoid *
•™
 );

1743 (
	tAPIENTRYP
 
	tPFNGLBLENDCOLORPROC
Ë(
	tGL˛ampf
 
	tªd
, GL˛amp‡
	tgªí
, GL˛amp‡
	tblue
, GL˛amp‡
	tÆpha
);

1744 (
	tAPIENTRYP
 
	tPFNGLBLENDEQUATIONPROC
Ë(
	tGLíum
 
	tmode
);

1753 
	#GL_TEXTURE0
 0x84C0

	)

1754 
	#GL_TEXTURE1
 0x84C1

	)

1755 
	#GL_TEXTURE2
 0x84C2

	)

1756 
	#GL_TEXTURE3
 0x84C3

	)

1757 
	#GL_TEXTURE4
 0x84C4

	)

1758 
	#GL_TEXTURE5
 0x84C5

	)

1759 
	#GL_TEXTURE6
 0x84C6

	)

1760 
	#GL_TEXTURE7
 0x84C7

	)

1761 
	#GL_TEXTURE8
 0x84C8

	)

1762 
	#GL_TEXTURE9
 0x84C9

	)

1763 
	#GL_TEXTURE10
 0x84CA

	)

1764 
	#GL_TEXTURE11
 0x84CB

	)

1765 
	#GL_TEXTURE12
 0x84CC

	)

1766 
	#GL_TEXTURE13
 0x84CD

	)

1767 
	#GL_TEXTURE14
 0x84CE

	)

1768 
	#GL_TEXTURE15
 0x84CF

	)

1769 
	#GL_TEXTURE16
 0x84D0

	)

1770 
	#GL_TEXTURE17
 0x84D1

	)

1771 
	#GL_TEXTURE18
 0x84D2

	)

1772 
	#GL_TEXTURE19
 0x84D3

	)

1773 
	#GL_TEXTURE20
 0x84D4

	)

1774 
	#GL_TEXTURE21
 0x84D5

	)

1775 
	#GL_TEXTURE22
 0x84D6

	)

1776 
	#GL_TEXTURE23
 0x84D7

	)

1777 
	#GL_TEXTURE24
 0x84D8

	)

1778 
	#GL_TEXTURE25
 0x84D9

	)

1779 
	#GL_TEXTURE26
 0x84DA

	)

1780 
	#GL_TEXTURE27
 0x84DB

	)

1781 
	#GL_TEXTURE28
 0x84DC

	)

1782 
	#GL_TEXTURE29
 0x84DD

	)

1783 
	#GL_TEXTURE30
 0x84DE

	)

1784 
	#GL_TEXTURE31
 0x84DF

	)

1785 
	#GL_ACTIVE_TEXTURE
 0x84E0

	)

1786 
	#GL_CLIENT_ACTIVE_TEXTURE
 0x84E1

	)

1787 
	#GL_MAX_TEXTURE_UNITS
 0x84E2

	)

1789 
	#GL_NORMAL_MAP
 0x8511

	)

1790 
	#GL_REFLECTION_MAP
 0x8512

	)

1791 
	#GL_TEXTURE_CUBE_MAP
 0x8513

	)

1792 
	#GL_TEXTURE_BINDING_CUBE_MAP
 0x8514

	)

1793 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_X
 0x8515

	)

1794 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_X
 0x8516

	)

1795 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Y
 0x8517

	)

1796 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
 0x8518

	)

1797 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Z
 0x8519

	)

1798 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
 0x851A

	)

1799 
	#GL_PROXY_TEXTURE_CUBE_MAP
 0x851B

	)

1800 
	#GL_MAX_CUBE_MAP_TEXTURE_SIZE
 0x851C

	)

1802 
	#GL_COMPRESSED_ALPHA
 0x84E9

	)

1803 
	#GL_COMPRESSED_LUMINANCE
 0x84EA

	)

1804 
	#GL_COMPRESSED_LUMINANCE_ALPHA
 0x84EB

	)

1805 
	#GL_COMPRESSED_INTENSITY
 0x84EC

	)

1806 
	#GL_COMPRESSED_RGB
 0x84ED

	)

1807 
	#GL_COMPRESSED_RGBA
 0x84EE

	)

1808 
	#GL_TEXTURE_COMPRESSION_HINT
 0x84EF

	)

1809 
	#GL_TEXTURE_COMPRESSED_IMAGE_SIZE
 0x86A0

	)

1810 
	#GL_TEXTURE_COMPRESSED
 0x86A1

	)

1811 
	#GL_NUM_COMPRESSED_TEXTURE_FORMATS
 0x86A2

	)

1812 
	#GL_COMPRESSED_TEXTURE_FORMATS
 0x86A3

	)

1814 
	#GL_MULTISAMPLE
 0x809D

	)

1815 
	#GL_SAMPLE_ALPHA_TO_COVERAGE
 0x809E

	)

1816 
	#GL_SAMPLE_ALPHA_TO_ONE
 0x809F

	)

1817 
	#GL_SAMPLE_COVERAGE
 0x80A0

	)

1818 
	#GL_SAMPLE_BUFFERS
 0x80A8

	)

1819 
	#GL_SAMPLES
 0x80A9

	)

1820 
	#GL_SAMPLE_COVERAGE_VALUE
 0x80AA

	)

1821 
	#GL_SAMPLE_COVERAGE_INVERT
 0x80AB

	)

1822 
	#GL_MULTISAMPLE_BIT
 0x20000000

	)

1824 
	#GL_TRANSPOSE_MODELVIEW_MATRIX
 0x84E3

	)

1825 
	#GL_TRANSPOSE_PROJECTION_MATRIX
 0x84E4

	)

1826 
	#GL_TRANSPOSE_TEXTURE_MATRIX
 0x84E5

	)

1827 
	#GL_TRANSPOSE_COLOR_MATRIX
 0x84E6

	)

1829 
	#GL_COMBINE
 0x8570

	)

1830 
	#GL_COMBINE_RGB
 0x8571

	)

1831 
	#GL_COMBINE_ALPHA
 0x8572

	)

1832 
	#GL_SOURCE0_RGB
 0x8580

	)

1833 
	#GL_SOURCE1_RGB
 0x8581

	)

1834 
	#GL_SOURCE2_RGB
 0x8582

	)

1835 
	#GL_SOURCE0_ALPHA
 0x8588

	)

1836 
	#GL_SOURCE1_ALPHA
 0x8589

	)

1837 
	#GL_SOURCE2_ALPHA
 0x858A

	)

1838 
	#GL_OPERAND0_RGB
 0x8590

	)

1839 
	#GL_OPERAND1_RGB
 0x8591

	)

1840 
	#GL_OPERAND2_RGB
 0x8592

	)

1841 
	#GL_OPERAND0_ALPHA
 0x8598

	)

1842 
	#GL_OPERAND1_ALPHA
 0x8599

	)

1843 
	#GL_OPERAND2_ALPHA
 0x859A

	)

1844 
	#GL_RGB_SCALE
 0x8573

	)

1845 
	#GL_ADD_SIGNED
 0x8574

	)

1846 
	#GL_INTERPOLATE
 0x8575

	)

1847 
	#GL_SUBTRACT
 0x84E7

	)

1848 
	#GL_CONSTANT
 0x8576

	)

1849 
	#GL_PRIMARY_COLOR
 0x8577

	)

1850 
	#GL_PREVIOUS
 0x8578

	)

1852 
	#GL_DOT3_RGB
 0x86AE

	)

1853 
	#GL_DOT3_RGBA
 0x86AF

	)

1855 
	#GL_CLAMP_TO_BORDER
 0x812D

	)

1857 
GLAPI
 
GLAPIENTRY
 
	`glA˘iveTextuª
–
GLíum
 
ãxtuª
 );

1859 
GLAPI
 
GLAPIENTRY
 
	`glClõ¡A˘iveTextuª
–
GLíum
 
ãxtuª
 );

1861 
GLAPI
 
GLAPIENTRY
 
	`glCom¥es£dTexImage1D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLöà
b‹dî
, GLsizeò
imageSize
, c⁄° 
GLvoid
 *
d©a
 );

1863 
GLAPI
 
GLAPIENTRY
 
	`glCom¥es£dTexImage2D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLöà
b‹dî
, GLsizeò
imageSize
, c⁄° 
GLvoid
 *
d©a
 );

1865 
GLAPI
 
GLAPIENTRY
 
	`glCom¥es£dTexImage3D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLíum 
öã∫Æf‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLöà
b‹dî
, GLsizeò
imageSize
, c⁄° 
GLvoid
 *
d©a
 );

1867 
GLAPI
 
GLAPIENTRY
 
	`glCom¥es£dTexSubImage1D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, 
GLsizei
 
width
, GLíum 
f‹m©
, GLsizeò
imageSize
, c⁄° 
GLvoid
 *
d©a
 );

1869 
GLAPI
 
GLAPIENTRY
 
	`glCom¥es£dTexSubImage2D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, GLöà
yoff£t
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
, GLsizeò
imageSize
, c⁄° 
GLvoid
 *
d©a
 );

1871 
GLAPI
 
GLAPIENTRY
 
	`glCom¥es£dTexSubImage3D
–
GLíum
 
èrgë
, 
GLöt
 
Àvñ
, GLöà
xoff£t
, GLöà
yoff£t
, GLöà
zoff£t
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLíum 
f‹m©
, GLsizeò
imageSize
, c⁄° 
GLvoid
 *
d©a
 );

1873 
GLAPI
 
GLAPIENTRY
 
	`glGëCom¥es£dTexImage
–
GLíum
 
èrgë
, 
GLöt
 
lod
, 
GLvoid
 *
img
 );

1875 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1d
–
GLíum
 
èrgë
, 
GLdoubÀ
 
s
 );

1877 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1dv
–
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 *
v
 );

1879 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1f
–
GLíum
 
èrgë
, 
GLÊﬂt
 
s
 );

1881 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1fv
–
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 *
v
 );

1883 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1i
–
GLíum
 
èrgë
, 
GLöt
 
s
 );

1885 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1iv
–
GLíum
 
èrgë
, c⁄° 
GLöt
 *
v
 );

1887 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1s
–
GLíum
 
èrgë
, 
GLsh‹t
 
s
 );

1889 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1sv
–
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 *
v
 );

1891 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2d
–
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
 );

1893 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2dv
–
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 *
v
 );

1895 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2f
–
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
 );

1897 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2fv
–
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 *
v
 );

1899 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2i
–
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
 );

1901 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2iv
–
GLíum
 
èrgë
, c⁄° 
GLöt
 *
v
 );

1903 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2s
–
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
 );

1905 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2sv
–
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 *
v
 );

1907 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3d
–
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
, GLdoubÀ 
r
 );

1909 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3dv
–
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 *
v
 );

1911 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3f
–
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
 );

1913 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3fv
–
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 *
v
 );

1915 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3i
–
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
, GLöà
r
 );

1917 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3iv
–
GLíum
 
èrgë
, c⁄° 
GLöt
 *
v
 );

1919 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3s
–
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
, GLsh‹à
r
 );

1921 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3sv
–
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 *
v
 );

1923 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4d
–
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
, GLdoubÀ 
r
, GLdoubÀ 
q
 );

1925 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4dv
–
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 *
v
 );

1927 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4f
–
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
, GLÊﬂà
q
 );

1929 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4fv
–
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 *
v
 );

1931 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4i
–
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
, GLöà
r
, GLöà
q
 );

1933 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4iv
–
GLíum
 
èrgë
, c⁄° 
GLöt
 *
v
 );

1935 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4s
–
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
, GLsh‹à
r
, GLsh‹à
q
 );

1937 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4sv
–
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 *
v
 );

1940 
GLAPI
 
GLAPIENTRY
 
	`glLﬂdTøn•o£M©rixd
–c⁄° 
GLdoubÀ
 
m
[16] );

1942 
GLAPI
 
GLAPIENTRY
 
	`glLﬂdTøn•o£M©rixf
–c⁄° 
GLÊﬂt
 
m
[16] );

1944 
GLAPI
 
GLAPIENTRY
 
	`glMu…Tøn•o£M©rixd
–c⁄° 
GLdoubÀ
 
m
[16] );

1946 
GLAPI
 
GLAPIENTRY
 
	`glMu…Tøn•o£M©rixf
–c⁄° 
GLÊﬂt
 
m
[16] );

1948 
GLAPI
 
GLAPIENTRY
 
	`glSam∂eCovîage
–
GL˛ampf
 
vÆue
, 
GLboﬁón
 
övît
 );

1951 (
	tAPIENTRYP
 
	tPFNGLACTIVETEXTUREPROC
Ë(
	tGLíum
 
	tãxtuª
);

1952 (
	tAPIENTRYP
 
	tPFNGLSAMPLECOVERAGEPROC
Ë(
	tGL˛ampf
 
	tvÆue
, 
	tGLboﬁón
 
	tövît
);

1953 (
	tAPIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

1954 (
	tAPIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE2DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

1955 (
	tAPIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE1DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

1956 (
	tAPIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

1957 (
	tAPIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

1958 (
	tAPIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

1959 (
	tAPIENTRYP
 
	tPFNGLGETCOMPRESSEDTEXIMAGEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, 
	tGLvoid
 *
	timg
);

1966 #i‚de‡
GL_ARB_mu…ôextuª


1967 
	#GL_ARB_mu…ôextuª
 1

	)

1969 
	#GL_TEXTURE0_ARB
 0x84C0

	)

1970 
	#GL_TEXTURE1_ARB
 0x84C1

	)

1971 
	#GL_TEXTURE2_ARB
 0x84C2

	)

1972 
	#GL_TEXTURE3_ARB
 0x84C3

	)

1973 
	#GL_TEXTURE4_ARB
 0x84C4

	)

1974 
	#GL_TEXTURE5_ARB
 0x84C5

	)

1975 
	#GL_TEXTURE6_ARB
 0x84C6

	)

1976 
	#GL_TEXTURE7_ARB
 0x84C7

	)

1977 
	#GL_TEXTURE8_ARB
 0x84C8

	)

1978 
	#GL_TEXTURE9_ARB
 0x84C9

	)

1979 
	#GL_TEXTURE10_ARB
 0x84CA

	)

1980 
	#GL_TEXTURE11_ARB
 0x84CB

	)

1981 
	#GL_TEXTURE12_ARB
 0x84CC

	)

1982 
	#GL_TEXTURE13_ARB
 0x84CD

	)

1983 
	#GL_TEXTURE14_ARB
 0x84CE

	)

1984 
	#GL_TEXTURE15_ARB
 0x84CF

	)

1985 
	#GL_TEXTURE16_ARB
 0x84D0

	)

1986 
	#GL_TEXTURE17_ARB
 0x84D1

	)

1987 
	#GL_TEXTURE18_ARB
 0x84D2

	)

1988 
	#GL_TEXTURE19_ARB
 0x84D3

	)

1989 
	#GL_TEXTURE20_ARB
 0x84D4

	)

1990 
	#GL_TEXTURE21_ARB
 0x84D5

	)

1991 
	#GL_TEXTURE22_ARB
 0x84D6

	)

1992 
	#GL_TEXTURE23_ARB
 0x84D7

	)

1993 
	#GL_TEXTURE24_ARB
 0x84D8

	)

1994 
	#GL_TEXTURE25_ARB
 0x84D9

	)

1995 
	#GL_TEXTURE26_ARB
 0x84DA

	)

1996 
	#GL_TEXTURE27_ARB
 0x84DB

	)

1997 
	#GL_TEXTURE28_ARB
 0x84DC

	)

1998 
	#GL_TEXTURE29_ARB
 0x84DD

	)

1999 
	#GL_TEXTURE30_ARB
 0x84DE

	)

2000 
	#GL_TEXTURE31_ARB
 0x84DF

	)

2001 
	#GL_ACTIVE_TEXTURE_ARB
 0x84E0

	)

2002 
	#GL_CLIENT_ACTIVE_TEXTURE_ARB
 0x84E1

	)

2003 
	#GL_MAX_TEXTURE_UNITS_ARB
 0x84E2

	)

2005 
GLAPI
 
GLAPIENTRY
 
	`glA˘iveTextuªARB
(
GLíum
 
ãxtuª
);

2006 
GLAPI
 
GLAPIENTRY
 
	`glClõ¡A˘iveTextuªARB
(
GLíum
 
ãxtuª
);

2007 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1dARB
(
GLíum
 
èrgë
, 
GLdoubÀ
 
s
);

2008 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1dvARB
(
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 *
v
);

2009 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1fARB
(
GLíum
 
èrgë
, 
GLÊﬂt
 
s
);

2010 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1fvARB
(
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 *
v
);

2011 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1iARB
(
GLíum
 
èrgë
, 
GLöt
 
s
);

2012 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1ivARB
(
GLíum
 
èrgë
, c⁄° 
GLöt
 *
v
);

2013 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1sARB
(
GLíum
 
èrgë
, 
GLsh‹t
 
s
);

2014 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d1svARB
(
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 *
v
);

2015 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2dARB
(
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
);

2016 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2dvARB
(
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 *
v
);

2017 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2fARB
(
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
);

2018 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2fvARB
(
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 *
v
);

2019 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2iARB
(
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
);

2020 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2ivARB
(
GLíum
 
èrgë
, c⁄° 
GLöt
 *
v
);

2021 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2sARB
(
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
);

2022 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d2svARB
(
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 *
v
);

2023 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3dARB
(
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
, GLdoubÀ 
r
);

2024 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3dvARB
(
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 *
v
);

2025 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3fARB
(
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
);

2026 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3fvARB
(
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 *
v
);

2027 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3iARB
(
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
, GLöà
r
);

2028 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3ivARB
(
GLíum
 
èrgë
, c⁄° 
GLöt
 *
v
);

2029 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3sARB
(
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
, GLsh‹à
r
);

2030 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d3svARB
(
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 *
v
);

2031 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4dARB
(
GLíum
 
èrgë
, 
GLdoubÀ
 
s
, GLdoubÀ 
t
, GLdoubÀ 
r
, GLdoubÀ 
q
);

2032 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4dvARB
(
GLíum
 
èrgë
, c⁄° 
GLdoubÀ
 *
v
);

2033 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4fARB
(
GLíum
 
èrgë
, 
GLÊﬂt
 
s
, GLÊﬂà
t
, GLÊﬂà
r
, GLÊﬂà
q
);

2034 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4fvARB
(
GLíum
 
èrgë
, c⁄° 
GLÊﬂt
 *
v
);

2035 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4iARB
(
GLíum
 
èrgë
, 
GLöt
 
s
, GLöà
t
, GLöà
r
, GLöà
q
);

2036 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4ivARB
(
GLíum
 
èrgë
, c⁄° 
GLöt
 *
v
);

2037 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4sARB
(
GLíum
 
èrgë
, 
GLsh‹t
 
s
, GLsh‹à
t
, GLsh‹à
r
, GLsh‹à
q
);

2038 
GLAPI
 
GLAPIENTRY
 
	`glMu…iTexCo‹d4svARB
(
GLíum
 
èrgë
, c⁄° 
GLsh‹t
 *
v
);

2040 (
	tAPIENTRYP
 
	tPFNGLACTIVETEXTUREARBPROC
Ë(
	tGLíum
 
	tãxtuª
);

2041 (
	tAPIENTRYP
 
	tPFNGLCLIENTACTIVETEXTUREARBPROC
Ë(
	tGLíum
 
	tãxtuª
);

2042 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD1DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
);

2043 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD1DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

2044 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD1FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
);

2045 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD1FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

2046 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD1IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
);

2047 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD1IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

2048 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD1SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
);

2049 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD1SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

2050 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD2DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
);

2051 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD2DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

2052 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD2FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
);

2053 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD2FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

2054 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD2IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
);

2055 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD2IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

2056 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD2SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
);

2057 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD2SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

2058 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD3DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
, GLdoubÀ 
	tr
);

2059 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD3DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

2060 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD3FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
);

2061 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD3FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

2062 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD3IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
, GLöà
	tr
);

2063 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD3IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

2064 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD3SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
, GLsh‹à
	tr
);

2065 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD3SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

2066 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD4DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
, GLdoubÀ 
	tr
, GLdoubÀ 
	tq
);

2067 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD4DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

2068 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD4FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tq
);

2069 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD4FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

2070 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD4IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
, GLöà
	tr
, GLöà
	tq
);

2071 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD4IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

2072 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD4SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
, GLsh‹à
	tr
, GLsh‹à
	tq
);

2073 (
	tAPIENTRYP
 
	tPFNGLMULTITEXCOORD4SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

2083 #i‡
	`deföed
(
GL_GLEXT_LEGACY
)

2089 
	~<GL/gÀxt.h
>

2095 #i‡
GL_ARB_shadî_obje˘s


2097 #i‚de‡
GL_MESA_shadî_debug


2098 
	#GL_MESA_shadî_debug
 1

	)

2100 
	#GL_DEBUG_OBJECT_MESA
 0x8759

	)

2101 
	#GL_DEBUG_PRINT_MESA
 0x875A

	)

2102 
	#GL_DEBUG_ASSERT_MESA
 0x875B

	)

2104 
GLAPI
 
GLh™dÀARB
 
GLAPIENTRY
 
	`glCª©eDebugObje˘MESA
 ();

2105 
GLAPI
 
GLAPIENTRY
 
	`glCÀ¨DebugLogMESA
 (
GLh™dÀARB
 
obj
, 
GLíum
 
logTy≥
, GLíum 
shadîTy≥
);

2106 
GLAPI
 
GLAPIENTRY
 
	`glGëDebugLogMESA
 (
GLh™dÀARB
 
obj
, 
GLíum
 
logTy≥
, GLíum 
shadîTy≥
, 
GLsizei
 
maxLígth
,

2107 
GLsizei
 *
Àngth
, 
GLch¨ARB
 *
debugLog
);

2108 
GLAPI
 
GLsizei
 
GLAPIENTRY
 
	`glGëDebugLogLígthMESA
 (
GLh™dÀARB
 
obj
, 
GLíum
 
logTy≥
, GLíum 
shadîTy≥
);

2119 #i‚de‡
GL_MESA_∑cked_dïth_°ícû


2120 
	#GL_MESA_∑cked_dïth_°ícû
 1

	)

2122 
	#GL_DEPTH_STENCIL_MESA
 0x8750

	)

2123 
	#GL_UNSIGNED_INT_24_8_MESA
 0x8751

	)

2124 
	#GL_UNSIGNED_INT_8_24_REV_MESA
 0x8752

	)

2125 
	#GL_UNSIGNED_SHORT_15_1_MESA
 0x8753

	)

2126 
	#GL_UNSIGNED_SHORT_1_15_REV_MESA
 0x8754

	)

2131 #i‚de‡
GL_MESA_¥ogøm_debug


2132 
	#GL_MESA_¥ogøm_debug
 1

	)

2134 
	#GL_FRAGMENT_PROGRAM_POSITION_MESA
 0x8bb0

	)

2135 
	#GL_FRAGMENT_PROGRAM_CALLBACK_MESA
 0x8bb1

	)

2136 
	#GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA
 0x8bb2

	)

2137 
	#GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA
 0x8bb3

	)

2138 
	#GL_VERTEX_PROGRAM_POSITION_MESA
 0x8bb4

	)

2139 
	#GL_VERTEX_PROGRAM_CALLBACK_MESA
 0x8bb5

	)

2140 
	#GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA
 0x8bb6

	)

2141 
	#GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA
 0x8bb7

	)

2143 (*
	tGL¥ogømˇŒbackMESA
)(
	tGLíum
 
	tèrgë
, 
	tGLvoid
 *
	td©a
);

2145 
GLAPI
 
GLAPIENTRY
 
	`glProgømCÆlbackMESA
(
GLíum
 
èrgë
, 
GL¥ogømˇŒbackMESA
 
ˇŒback
, 
GLvoid
 *
d©a
);

2147 
GLAPI
 
GLAPIENTRY
 
	`glGëProgømRegi°îfvMESA
(
GLíum
 
èrgë
, 
GLsizei
 
Àn
, c⁄° 
GLubyã
 *
«me
, 
GLÊﬂt
 *
v
);

2152 #i‚de‡
GL_MESA_ãxtuª_¨øy


2153 
	#GL_MESA_ãxtuª_¨øy
 1

	)

2157 #i‚de‡
GL_EXT_ãxtuª_¨øy


2159 #ifde‡
GL_GLEXT_PROTOTYPES


2160 
GLAPI
 
APIENTRY
 
	`glFømebuf„rTextuªLayîEXT
(
GLíum
 
èrgë
,

2161 
GLíum
 
©èchmít
, 
GLuöt
 
ãxtuª
, 
GLöt
 
Àvñ
, GLöà
œyî
);

2168 (
	tAPIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
Ë(
	tGLíum
 
	tèrgë
,

2169 
	tGLíum
 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tœyî
);

2172 
	#GL_TEXTURE_1D_ARRAY_EXT
 0x8C18

	)

2173 
	#GL_PROXY_TEXTURE_1D_ARRAY_EXT
 0x8C19

	)

2174 
	#GL_TEXTURE_2D_ARRAY_EXT
 0x8C1A

	)

2175 
	#GL_PROXY_TEXTURE_2D_ARRAY_EXT
 0x8C1B

	)

2176 
	#GL_TEXTURE_BINDING_1D_ARRAY_EXT
 0x8C1C

	)

2177 
	#GL_TEXTURE_BINDING_2D_ARRAY_EXT
 0x8C1D

	)

2178 
	#GL_MAX_ARRAY_TEXTURE_LAYERS_EXT
 0x88FF

	)

2179 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
 0x8CD4

	)

2185 #i‚de‡
GL_ATI_bÀnd_equ©i⁄_£∑øã


2186 
	#GL_ATI_bÀnd_equ©i⁄_£∑øã
 1

	)

2188 
	#GL_ALPHA_BLEND_EQUATION_ATI
 0x883D

	)

2190 
GLAPI
 
GLAPIENTRY
 
	`glBÀndEqu©i⁄Sï¨©eATI
–
GLíum
 
modeRGB
, GLíum 
modeA
 );

2191 (
	tAPIENTRYP
 
	tPFNGLBLENDEQUATIONSEPARATEATIPROC
Ë(
	tGLíum
 
	tmodeRGB
, GLíum 
	tmodeA
);

2208 #i‡
	`deföed
(
PRAGMA_EXPORT_SUPPORTED
)

2209 #¥agm®
exp‹t
 
off


2212 #i‡
	`deföed
(
macötosh
Ë&& 
PRAGMA_IMPORT_SUPPORTED


2213 #¥agm®
imp‹t
 
off


2220 #ifde‡
__˝lu•lus


2221 
	}
}

	@/usr/include/GL/glext.h

1 #i‚de‡
__gÀxt_h_


2 
	#__gÀxt_h_


	)

4 #ifde‡
__˝lu•lus


34 
	#GL_GLEXT_VERSION
 56

	)

38 #i‡
deföed
(
_WIN32
Ë&& !deföed(
APIENTRY
Ë&& !deföed(
__CYGWIN__
Ë&& !deföed(
__SCITECH_SNAP__
)

39 
	#WIN32_LEAN_AND_MEAN
 1

	)

40 
	~<wödows.h
>

43 #i‚de‡
APIENTRY


44 
	#APIENTRY


	)

46 #i‚de‡
APIENTRYP


47 
	#APIENTRYP
 
APIENTRY
 *

	)

49 #i‚de‡
GLAPI


50 
	#GLAPI
 

	)

55 #i‚de‡
GL_VERSION_1_2


56 
	#GL_UNSIGNED_BYTE_3_3_2
 0x8032

	)

57 
	#GL_UNSIGNED_SHORT_4_4_4_4
 0x8033

	)

58 
	#GL_UNSIGNED_SHORT_5_5_5_1
 0x8034

	)

59 
	#GL_UNSIGNED_INT_8_8_8_8
 0x8035

	)

60 
	#GL_UNSIGNED_INT_10_10_10_2
 0x8036

	)

61 
	#GL_TEXTURE_BINDING_3D
 0x806A

	)

62 
	#GL_PACK_SKIP_IMAGES
 0x806B

	)

63 
	#GL_PACK_IMAGE_HEIGHT
 0x806C

	)

64 
	#GL_UNPACK_SKIP_IMAGES
 0x806D

	)

65 
	#GL_UNPACK_IMAGE_HEIGHT
 0x806E

	)

66 
	#GL_TEXTURE_3D
 0x806F

	)

67 
	#GL_PROXY_TEXTURE_3D
 0x8070

	)

68 
	#GL_TEXTURE_DEPTH
 0x8071

	)

69 
	#GL_TEXTURE_WRAP_R
 0x8072

	)

70 
	#GL_MAX_3D_TEXTURE_SIZE
 0x8073

	)

71 
	#GL_UNSIGNED_BYTE_2_3_3_REV
 0x8362

	)

72 
	#GL_UNSIGNED_SHORT_5_6_5
 0x8363

	)

73 
	#GL_UNSIGNED_SHORT_5_6_5_REV
 0x8364

	)

74 
	#GL_UNSIGNED_SHORT_4_4_4_4_REV
 0x8365

	)

75 
	#GL_UNSIGNED_SHORT_1_5_5_5_REV
 0x8366

	)

76 
	#GL_UNSIGNED_INT_8_8_8_8_REV
 0x8367

	)

77 
	#GL_UNSIGNED_INT_2_10_10_10_REV
 0x8368

	)

78 
	#GL_BGR
 0x80E0

	)

79 
	#GL_BGRA
 0x80E1

	)

80 
	#GL_MAX_ELEMENTS_VERTICES
 0x80E8

	)

81 
	#GL_MAX_ELEMENTS_INDICES
 0x80E9

	)

82 
	#GL_CLAMP_TO_EDGE
 0x812F

	)

83 
	#GL_TEXTURE_MIN_LOD
 0x813A

	)

84 
	#GL_TEXTURE_MAX_LOD
 0x813B

	)

85 
	#GL_TEXTURE_BASE_LEVEL
 0x813C

	)

86 
	#GL_TEXTURE_MAX_LEVEL
 0x813D

	)

87 
	#GL_SMOOTH_POINT_SIZE_RANGE
 0x0B12

	)

88 
	#GL_SMOOTH_POINT_SIZE_GRANULARITY
 0x0B13

	)

89 
	#GL_SMOOTH_LINE_WIDTH_RANGE
 0x0B22

	)

90 
	#GL_SMOOTH_LINE_WIDTH_GRANULARITY
 0x0B23

	)

91 
	#GL_ALIASED_LINE_WIDTH_RANGE
 0x846E

	)

94 #i‚de‡
GL_VERSION_1_2_DEPRECATED


95 
	#GL_RESCALE_NORMAL
 0x803A

	)

96 
	#GL_LIGHT_MODEL_COLOR_CONTROL
 0x81F8

	)

97 
	#GL_SINGLE_COLOR
 0x81F9

	)

98 
	#GL_SEPARATE_SPECULAR_COLOR
 0x81FA

	)

99 
	#GL_ALIASED_POINT_SIZE_RANGE
 0x846D

	)

102 #i‚de‡
GL_ARB_imagög


103 
	#GL_CONSTANT_COLOR
 0x8001

	)

104 
	#GL_ONE_MINUS_CONSTANT_COLOR
 0x8002

	)

105 
	#GL_CONSTANT_ALPHA
 0x8003

	)

106 
	#GL_ONE_MINUS_CONSTANT_ALPHA
 0x8004

	)

107 
	#GL_BLEND_COLOR
 0x8005

	)

108 
	#GL_FUNC_ADD
 0x8006

	)

109 
	#GL_MIN
 0x8007

	)

110 
	#GL_MAX
 0x8008

	)

111 
	#GL_BLEND_EQUATION
 0x8009

	)

112 
	#GL_FUNC_SUBTRACT
 0x800A

	)

113 
	#GL_FUNC_REVERSE_SUBTRACT
 0x800B

	)

116 #i‚de‡
GL_ARB_imagög_DEPRECATED


117 
	#GL_CONVOLUTION_1D
 0x8010

	)

118 
	#GL_CONVOLUTION_2D
 0x8011

	)

119 
	#GL_SEPARABLE_2D
 0x8012

	)

120 
	#GL_CONVOLUTION_BORDER_MODE
 0x8013

	)

121 
	#GL_CONVOLUTION_FILTER_SCALE
 0x8014

	)

122 
	#GL_CONVOLUTION_FILTER_BIAS
 0x8015

	)

123 
	#GL_REDUCE
 0x8016

	)

124 
	#GL_CONVOLUTION_FORMAT
 0x8017

	)

125 
	#GL_CONVOLUTION_WIDTH
 0x8018

	)

126 
	#GL_CONVOLUTION_HEIGHT
 0x8019

	)

127 
	#GL_MAX_CONVOLUTION_WIDTH
 0x801A

	)

128 
	#GL_MAX_CONVOLUTION_HEIGHT
 0x801B

	)

129 
	#GL_POST_CONVOLUTION_RED_SCALE
 0x801C

	)

130 
	#GL_POST_CONVOLUTION_GREEN_SCALE
 0x801D

	)

131 
	#GL_POST_CONVOLUTION_BLUE_SCALE
 0x801E

	)

132 
	#GL_POST_CONVOLUTION_ALPHA_SCALE
 0x801F

	)

133 
	#GL_POST_CONVOLUTION_RED_BIAS
 0x8020

	)

134 
	#GL_POST_CONVOLUTION_GREEN_BIAS
 0x8021

	)

135 
	#GL_POST_CONVOLUTION_BLUE_BIAS
 0x8022

	)

136 
	#GL_POST_CONVOLUTION_ALPHA_BIAS
 0x8023

	)

137 
	#GL_HISTOGRAM
 0x8024

	)

138 
	#GL_PROXY_HISTOGRAM
 0x8025

	)

139 
	#GL_HISTOGRAM_WIDTH
 0x8026

	)

140 
	#GL_HISTOGRAM_FORMAT
 0x8027

	)

141 
	#GL_HISTOGRAM_RED_SIZE
 0x8028

	)

142 
	#GL_HISTOGRAM_GREEN_SIZE
 0x8029

	)

143 
	#GL_HISTOGRAM_BLUE_SIZE
 0x802A

	)

144 
	#GL_HISTOGRAM_ALPHA_SIZE
 0x802B

	)

145 
	#GL_HISTOGRAM_LUMINANCE_SIZE
 0x802C

	)

146 
	#GL_HISTOGRAM_SINK
 0x802D

	)

147 
	#GL_MINMAX
 0x802E

	)

148 
	#GL_MINMAX_FORMAT
 0x802F

	)

149 
	#GL_MINMAX_SINK
 0x8030

	)

150 
	#GL_TABLE_TOO_LARGE
 0x8031

	)

151 
	#GL_COLOR_MATRIX
 0x80B1

	)

152 
	#GL_COLOR_MATRIX_STACK_DEPTH
 0x80B2

	)

153 
	#GL_MAX_COLOR_MATRIX_STACK_DEPTH
 0x80B3

	)

154 
	#GL_POST_COLOR_MATRIX_RED_SCALE
 0x80B4

	)

155 
	#GL_POST_COLOR_MATRIX_GREEN_SCALE
 0x80B5

	)

156 
	#GL_POST_COLOR_MATRIX_BLUE_SCALE
 0x80B6

	)

157 
	#GL_POST_COLOR_MATRIX_ALPHA_SCALE
 0x80B7

	)

158 
	#GL_POST_COLOR_MATRIX_RED_BIAS
 0x80B8

	)

159 
	#GL_POST_COLOR_MATRIX_GREEN_BIAS
 0x80B9

	)

160 
	#GL_POST_COLOR_MATRIX_BLUE_BIAS
 0x80BA

	)

161 
	#GL_POST_COLOR_MATRIX_ALPHA_BIAS
 0x80BB

	)

162 
	#GL_COLOR_TABLE
 0x80D0

	)

163 
	#GL_POST_CONVOLUTION_COLOR_TABLE
 0x80D1

	)

164 
	#GL_POST_COLOR_MATRIX_COLOR_TABLE
 0x80D2

	)

165 
	#GL_PROXY_COLOR_TABLE
 0x80D3

	)

166 
	#GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
 0x80D4

	)

167 
	#GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
 0x80D5

	)

168 
	#GL_COLOR_TABLE_SCALE
 0x80D6

	)

169 
	#GL_COLOR_TABLE_BIAS
 0x80D7

	)

170 
	#GL_COLOR_TABLE_FORMAT
 0x80D8

	)

171 
	#GL_COLOR_TABLE_WIDTH
 0x80D9

	)

172 
	#GL_COLOR_TABLE_RED_SIZE
 0x80DA

	)

173 
	#GL_COLOR_TABLE_GREEN_SIZE
 0x80DB

	)

174 
	#GL_COLOR_TABLE_BLUE_SIZE
 0x80DC

	)

175 
	#GL_COLOR_TABLE_ALPHA_SIZE
 0x80DD

	)

176 
	#GL_COLOR_TABLE_LUMINANCE_SIZE
 0x80DE

	)

177 
	#GL_COLOR_TABLE_INTENSITY_SIZE
 0x80DF

	)

178 
	#GL_CONSTANT_BORDER
 0x8151

	)

179 
	#GL_REPLICATE_BORDER
 0x8153

	)

180 
	#GL_CONVOLUTION_BORDER_COLOR
 0x8154

	)

183 #i‚de‡
GL_VERSION_1_3


184 
	#GL_TEXTURE0
 0x84C0

	)

185 
	#GL_TEXTURE1
 0x84C1

	)

186 
	#GL_TEXTURE2
 0x84C2

	)

187 
	#GL_TEXTURE3
 0x84C3

	)

188 
	#GL_TEXTURE4
 0x84C4

	)

189 
	#GL_TEXTURE5
 0x84C5

	)

190 
	#GL_TEXTURE6
 0x84C6

	)

191 
	#GL_TEXTURE7
 0x84C7

	)

192 
	#GL_TEXTURE8
 0x84C8

	)

193 
	#GL_TEXTURE9
 0x84C9

	)

194 
	#GL_TEXTURE10
 0x84CA

	)

195 
	#GL_TEXTURE11
 0x84CB

	)

196 
	#GL_TEXTURE12
 0x84CC

	)

197 
	#GL_TEXTURE13
 0x84CD

	)

198 
	#GL_TEXTURE14
 0x84CE

	)

199 
	#GL_TEXTURE15
 0x84CF

	)

200 
	#GL_TEXTURE16
 0x84D0

	)

201 
	#GL_TEXTURE17
 0x84D1

	)

202 
	#GL_TEXTURE18
 0x84D2

	)

203 
	#GL_TEXTURE19
 0x84D3

	)

204 
	#GL_TEXTURE20
 0x84D4

	)

205 
	#GL_TEXTURE21
 0x84D5

	)

206 
	#GL_TEXTURE22
 0x84D6

	)

207 
	#GL_TEXTURE23
 0x84D7

	)

208 
	#GL_TEXTURE24
 0x84D8

	)

209 
	#GL_TEXTURE25
 0x84D9

	)

210 
	#GL_TEXTURE26
 0x84DA

	)

211 
	#GL_TEXTURE27
 0x84DB

	)

212 
	#GL_TEXTURE28
 0x84DC

	)

213 
	#GL_TEXTURE29
 0x84DD

	)

214 
	#GL_TEXTURE30
 0x84DE

	)

215 
	#GL_TEXTURE31
 0x84DF

	)

216 
	#GL_ACTIVE_TEXTURE
 0x84E0

	)

217 
	#GL_MULTISAMPLE
 0x809D

	)

218 
	#GL_SAMPLE_ALPHA_TO_COVERAGE
 0x809E

	)

219 
	#GL_SAMPLE_ALPHA_TO_ONE
 0x809F

	)

220 
	#GL_SAMPLE_COVERAGE
 0x80A0

	)

221 
	#GL_SAMPLE_BUFFERS
 0x80A8

	)

222 
	#GL_SAMPLES
 0x80A9

	)

223 
	#GL_SAMPLE_COVERAGE_VALUE
 0x80AA

	)

224 
	#GL_SAMPLE_COVERAGE_INVERT
 0x80AB

	)

225 
	#GL_TEXTURE_CUBE_MAP
 0x8513

	)

226 
	#GL_TEXTURE_BINDING_CUBE_MAP
 0x8514

	)

227 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_X
 0x8515

	)

228 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_X
 0x8516

	)

229 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Y
 0x8517

	)

230 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
 0x8518

	)

231 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Z
 0x8519

	)

232 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
 0x851A

	)

233 
	#GL_PROXY_TEXTURE_CUBE_MAP
 0x851B

	)

234 
	#GL_MAX_CUBE_MAP_TEXTURE_SIZE
 0x851C

	)

235 
	#GL_COMPRESSED_RGB
 0x84ED

	)

236 
	#GL_COMPRESSED_RGBA
 0x84EE

	)

237 
	#GL_TEXTURE_COMPRESSION_HINT
 0x84EF

	)

238 
	#GL_TEXTURE_COMPRESSED_IMAGE_SIZE
 0x86A0

	)

239 
	#GL_TEXTURE_COMPRESSED
 0x86A1

	)

240 
	#GL_NUM_COMPRESSED_TEXTURE_FORMATS
 0x86A2

	)

241 
	#GL_COMPRESSED_TEXTURE_FORMATS
 0x86A3

	)

242 
	#GL_CLAMP_TO_BORDER
 0x812D

	)

245 #i‚de‡
GL_VERSION_1_3_DEPRECATED


246 
	#GL_CLIENT_ACTIVE_TEXTURE
 0x84E1

	)

247 
	#GL_MAX_TEXTURE_UNITS
 0x84E2

	)

248 
	#GL_TRANSPOSE_MODELVIEW_MATRIX
 0x84E3

	)

249 
	#GL_TRANSPOSE_PROJECTION_MATRIX
 0x84E4

	)

250 
	#GL_TRANSPOSE_TEXTURE_MATRIX
 0x84E5

	)

251 
	#GL_TRANSPOSE_COLOR_MATRIX
 0x84E6

	)

252 
	#GL_MULTISAMPLE_BIT
 0x20000000

	)

253 
	#GL_NORMAL_MAP
 0x8511

	)

254 
	#GL_REFLECTION_MAP
 0x8512

	)

255 
	#GL_COMPRESSED_ALPHA
 0x84E9

	)

256 
	#GL_COMPRESSED_LUMINANCE
 0x84EA

	)

257 
	#GL_COMPRESSED_LUMINANCE_ALPHA
 0x84EB

	)

258 
	#GL_COMPRESSED_INTENSITY
 0x84EC

	)

259 
	#GL_COMBINE
 0x8570

	)

260 
	#GL_COMBINE_RGB
 0x8571

	)

261 
	#GL_COMBINE_ALPHA
 0x8572

	)

262 
	#GL_SOURCE0_RGB
 0x8580

	)

263 
	#GL_SOURCE1_RGB
 0x8581

	)

264 
	#GL_SOURCE2_RGB
 0x8582

	)

265 
	#GL_SOURCE0_ALPHA
 0x8588

	)

266 
	#GL_SOURCE1_ALPHA
 0x8589

	)

267 
	#GL_SOURCE2_ALPHA
 0x858A

	)

268 
	#GL_OPERAND0_RGB
 0x8590

	)

269 
	#GL_OPERAND1_RGB
 0x8591

	)

270 
	#GL_OPERAND2_RGB
 0x8592

	)

271 
	#GL_OPERAND0_ALPHA
 0x8598

	)

272 
	#GL_OPERAND1_ALPHA
 0x8599

	)

273 
	#GL_OPERAND2_ALPHA
 0x859A

	)

274 
	#GL_RGB_SCALE
 0x8573

	)

275 
	#GL_ADD_SIGNED
 0x8574

	)

276 
	#GL_INTERPOLATE
 0x8575

	)

277 
	#GL_SUBTRACT
 0x84E7

	)

278 
	#GL_CONSTANT
 0x8576

	)

279 
	#GL_PRIMARY_COLOR
 0x8577

	)

280 
	#GL_PREVIOUS
 0x8578

	)

281 
	#GL_DOT3_RGB
 0x86AE

	)

282 
	#GL_DOT3_RGBA
 0x86AF

	)

285 #i‚de‡
GL_VERSION_1_4


286 
	#GL_BLEND_DST_RGB
 0x80C8

	)

287 
	#GL_BLEND_SRC_RGB
 0x80C9

	)

288 
	#GL_BLEND_DST_ALPHA
 0x80CA

	)

289 
	#GL_BLEND_SRC_ALPHA
 0x80CB

	)

290 
	#GL_POINT_FADE_THRESHOLD_SIZE
 0x8128

	)

291 
	#GL_DEPTH_COMPONENT16
 0x81A5

	)

292 
	#GL_DEPTH_COMPONENT24
 0x81A6

	)

293 
	#GL_DEPTH_COMPONENT32
 0x81A7

	)

294 
	#GL_MIRRORED_REPEAT
 0x8370

	)

295 
	#GL_MAX_TEXTURE_LOD_BIAS
 0x84FD

	)

296 
	#GL_TEXTURE_LOD_BIAS
 0x8501

	)

297 
	#GL_INCR_WRAP
 0x8507

	)

298 
	#GL_DECR_WRAP
 0x8508

	)

299 
	#GL_TEXTURE_DEPTH_SIZE
 0x884A

	)

300 
	#GL_TEXTURE_COMPARE_MODE
 0x884C

	)

301 
	#GL_TEXTURE_COMPARE_FUNC
 0x884D

	)

304 #i‚de‡
GL_VERSION_1_4_DEPRECATED


305 
	#GL_POINT_SIZE_MIN
 0x8126

	)

306 
	#GL_POINT_SIZE_MAX
 0x8127

	)

307 
	#GL_POINT_DISTANCE_ATTENUATION
 0x8129

	)

308 
	#GL_GENERATE_MIPMAP
 0x8191

	)

309 
	#GL_GENERATE_MIPMAP_HINT
 0x8192

	)

310 
	#GL_FOG_COORDINATE_SOURCE
 0x8450

	)

311 
	#GL_FOG_COORDINATE
 0x8451

	)

312 
	#GL_FRAGMENT_DEPTH
 0x8452

	)

313 
	#GL_CURRENT_FOG_COORDINATE
 0x8453

	)

314 
	#GL_FOG_COORDINATE_ARRAY_TYPE
 0x8454

	)

315 
	#GL_FOG_COORDINATE_ARRAY_STRIDE
 0x8455

	)

316 
	#GL_FOG_COORDINATE_ARRAY_POINTER
 0x8456

	)

317 
	#GL_FOG_COORDINATE_ARRAY
 0x8457

	)

318 
	#GL_COLOR_SUM
 0x8458

	)

319 
	#GL_CURRENT_SECONDARY_COLOR
 0x8459

	)

320 
	#GL_SECONDARY_COLOR_ARRAY_SIZE
 0x845A

	)

321 
	#GL_SECONDARY_COLOR_ARRAY_TYPE
 0x845B

	)

322 
	#GL_SECONDARY_COLOR_ARRAY_STRIDE
 0x845C

	)

323 
	#GL_SECONDARY_COLOR_ARRAY_POINTER
 0x845D

	)

324 
	#GL_SECONDARY_COLOR_ARRAY
 0x845E

	)

325 
	#GL_TEXTURE_FILTER_CONTROL
 0x8500

	)

326 
	#GL_DEPTH_TEXTURE_MODE
 0x884B

	)

327 
	#GL_COMPARE_R_TO_TEXTURE
 0x884E

	)

330 #i‚de‡
GL_VERSION_1_5


331 
	#GL_BUFFER_SIZE
 0x8764

	)

332 
	#GL_BUFFER_USAGE
 0x8765

	)

333 
	#GL_QUERY_COUNTER_BITS
 0x8864

	)

334 
	#GL_CURRENT_QUERY
 0x8865

	)

335 
	#GL_QUERY_RESULT
 0x8866

	)

336 
	#GL_QUERY_RESULT_AVAILABLE
 0x8867

	)

337 
	#GL_ARRAY_BUFFER
 0x8892

	)

338 
	#GL_ELEMENT_ARRAY_BUFFER
 0x8893

	)

339 
	#GL_ARRAY_BUFFER_BINDING
 0x8894

	)

340 
	#GL_ELEMENT_ARRAY_BUFFER_BINDING
 0x8895

	)

341 
	#GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
 0x889F

	)

342 
	#GL_READ_ONLY
 0x88B8

	)

343 
	#GL_WRITE_ONLY
 0x88B9

	)

344 
	#GL_READ_WRITE
 0x88BA

	)

345 
	#GL_BUFFER_ACCESS
 0x88BB

	)

346 
	#GL_BUFFER_MAPPED
 0x88BC

	)

347 
	#GL_BUFFER_MAP_POINTER
 0x88BD

	)

348 
	#GL_STREAM_DRAW
 0x88E0

	)

349 
	#GL_STREAM_READ
 0x88E1

	)

350 
	#GL_STREAM_COPY
 0x88E2

	)

351 
	#GL_STATIC_DRAW
 0x88E4

	)

352 
	#GL_STATIC_READ
 0x88E5

	)

353 
	#GL_STATIC_COPY
 0x88E6

	)

354 
	#GL_DYNAMIC_DRAW
 0x88E8

	)

355 
	#GL_DYNAMIC_READ
 0x88E9

	)

356 
	#GL_DYNAMIC_COPY
 0x88EA

	)

357 
	#GL_SAMPLES_PASSED
 0x8914

	)

360 #i‚de‡
GL_VERSION_1_5_DEPRECATED


361 
	#GL_VERTEX_ARRAY_BUFFER_BINDING
 0x8896

	)

362 
	#GL_NORMAL_ARRAY_BUFFER_BINDING
 0x8897

	)

363 
	#GL_COLOR_ARRAY_BUFFER_BINDING
 0x8898

	)

364 
	#GL_INDEX_ARRAY_BUFFER_BINDING
 0x8899

	)

365 
	#GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
 0x889A

	)

366 
	#GL_EDGE_FLAG_ARRAY_BUFFER_BINDING
 0x889B

	)

367 
	#GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING
 0x889C

	)

368 
	#GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING
 0x889D

	)

369 
	#GL_WEIGHT_ARRAY_BUFFER_BINDING
 0x889E

	)

370 
	#GL_FOG_COORD_SRC
 0x8450

	)

371 
	#GL_FOG_COORD
 0x8451

	)

372 
	#GL_CURRENT_FOG_COORD
 0x8453

	)

373 
	#GL_FOG_COORD_ARRAY_TYPE
 0x8454

	)

374 
	#GL_FOG_COORD_ARRAY_STRIDE
 0x8455

	)

375 
	#GL_FOG_COORD_ARRAY_POINTER
 0x8456

	)

376 
	#GL_FOG_COORD_ARRAY
 0x8457

	)

377 
	#GL_FOG_COORD_ARRAY_BUFFER_BINDING
 0x889D

	)

378 
	#GL_SRC0_RGB
 0x8580

	)

379 
	#GL_SRC1_RGB
 0x8581

	)

380 
	#GL_SRC2_RGB
 0x8582

	)

381 
	#GL_SRC0_ALPHA
 0x8588

	)

382 
	#GL_SRC1_ALPHA
 0x8589

	)

383 
	#GL_SRC2_ALPHA
 0x858A

	)

386 #i‚de‡
GL_VERSION_2_0


387 
	#GL_BLEND_EQUATION_RGB
 0x8009

	)

388 
	#GL_VERTEX_ATTRIB_ARRAY_ENABLED
 0x8622

	)

389 
	#GL_VERTEX_ATTRIB_ARRAY_SIZE
 0x8623

	)

390 
	#GL_VERTEX_ATTRIB_ARRAY_STRIDE
 0x8624

	)

391 
	#GL_VERTEX_ATTRIB_ARRAY_TYPE
 0x8625

	)

392 
	#GL_CURRENT_VERTEX_ATTRIB
 0x8626

	)

393 
	#GL_VERTEX_PROGRAM_POINT_SIZE
 0x8642

	)

394 
	#GL_VERTEX_ATTRIB_ARRAY_POINTER
 0x8645

	)

395 
	#GL_STENCIL_BACK_FUNC
 0x8800

	)

396 
	#GL_STENCIL_BACK_FAIL
 0x8801

	)

397 
	#GL_STENCIL_BACK_PASS_DEPTH_FAIL
 0x8802

	)

398 
	#GL_STENCIL_BACK_PASS_DEPTH_PASS
 0x8803

	)

399 
	#GL_MAX_DRAW_BUFFERS
 0x8824

	)

400 
	#GL_DRAW_BUFFER0
 0x8825

	)

401 
	#GL_DRAW_BUFFER1
 0x8826

	)

402 
	#GL_DRAW_BUFFER2
 0x8827

	)

403 
	#GL_DRAW_BUFFER3
 0x8828

	)

404 
	#GL_DRAW_BUFFER4
 0x8829

	)

405 
	#GL_DRAW_BUFFER5
 0x882A

	)

406 
	#GL_DRAW_BUFFER6
 0x882B

	)

407 
	#GL_DRAW_BUFFER7
 0x882C

	)

408 
	#GL_DRAW_BUFFER8
 0x882D

	)

409 
	#GL_DRAW_BUFFER9
 0x882E

	)

410 
	#GL_DRAW_BUFFER10
 0x882F

	)

411 
	#GL_DRAW_BUFFER11
 0x8830

	)

412 
	#GL_DRAW_BUFFER12
 0x8831

	)

413 
	#GL_DRAW_BUFFER13
 0x8832

	)

414 
	#GL_DRAW_BUFFER14
 0x8833

	)

415 
	#GL_DRAW_BUFFER15
 0x8834

	)

416 
	#GL_BLEND_EQUATION_ALPHA
 0x883D

	)

417 
	#GL_MAX_VERTEX_ATTRIBS
 0x8869

	)

418 
	#GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
 0x886A

	)

419 
	#GL_MAX_TEXTURE_IMAGE_UNITS
 0x8872

	)

420 
	#GL_FRAGMENT_SHADER
 0x8B30

	)

421 
	#GL_VERTEX_SHADER
 0x8B31

	)

422 
	#GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
 0x8B49

	)

423 
	#GL_MAX_VERTEX_UNIFORM_COMPONENTS
 0x8B4A

	)

424 
	#GL_MAX_VARYING_FLOATS
 0x8B4B

	)

425 
	#GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
 0x8B4C

	)

426 
	#GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
 0x8B4D

	)

427 
	#GL_SHADER_TYPE
 0x8B4F

	)

428 
	#GL_FLOAT_VEC2
 0x8B50

	)

429 
	#GL_FLOAT_VEC3
 0x8B51

	)

430 
	#GL_FLOAT_VEC4
 0x8B52

	)

431 
	#GL_INT_VEC2
 0x8B53

	)

432 
	#GL_INT_VEC3
 0x8B54

	)

433 
	#GL_INT_VEC4
 0x8B55

	)

434 
	#GL_BOOL
 0x8B56

	)

435 
	#GL_BOOL_VEC2
 0x8B57

	)

436 
	#GL_BOOL_VEC3
 0x8B58

	)

437 
	#GL_BOOL_VEC4
 0x8B59

	)

438 
	#GL_FLOAT_MAT2
 0x8B5A

	)

439 
	#GL_FLOAT_MAT3
 0x8B5B

	)

440 
	#GL_FLOAT_MAT4
 0x8B5C

	)

441 
	#GL_SAMPLER_1D
 0x8B5D

	)

442 
	#GL_SAMPLER_2D
 0x8B5E

	)

443 
	#GL_SAMPLER_3D
 0x8B5F

	)

444 
	#GL_SAMPLER_CUBE
 0x8B60

	)

445 
	#GL_SAMPLER_1D_SHADOW
 0x8B61

	)

446 
	#GL_SAMPLER_2D_SHADOW
 0x8B62

	)

447 
	#GL_DELETE_STATUS
 0x8B80

	)

448 
	#GL_COMPILE_STATUS
 0x8B81

	)

449 
	#GL_LINK_STATUS
 0x8B82

	)

450 
	#GL_VALIDATE_STATUS
 0x8B83

	)

451 
	#GL_INFO_LOG_LENGTH
 0x8B84

	)

452 
	#GL_ATTACHED_SHADERS
 0x8B85

	)

453 
	#GL_ACTIVE_UNIFORMS
 0x8B86

	)

454 
	#GL_ACTIVE_UNIFORM_MAX_LENGTH
 0x8B87

	)

455 
	#GL_SHADER_SOURCE_LENGTH
 0x8B88

	)

456 
	#GL_ACTIVE_ATTRIBUTES
 0x8B89

	)

457 
	#GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
 0x8B8A

	)

458 
	#GL_FRAGMENT_SHADER_DERIVATIVE_HINT
 0x8B8B

	)

459 
	#GL_SHADING_LANGUAGE_VERSION
 0x8B8C

	)

460 
	#GL_CURRENT_PROGRAM
 0x8B8D

	)

461 
	#GL_POINT_SPRITE_COORD_ORIGIN
 0x8CA0

	)

462 
	#GL_LOWER_LEFT
 0x8CA1

	)

463 
	#GL_UPPER_LEFT
 0x8CA2

	)

464 
	#GL_STENCIL_BACK_REF
 0x8CA3

	)

465 
	#GL_STENCIL_BACK_VALUE_MASK
 0x8CA4

	)

466 
	#GL_STENCIL_BACK_WRITEMASK
 0x8CA5

	)

469 #i‚de‡
GL_VERSION_2_0_DEPRECATED


470 
	#GL_VERTEX_PROGRAM_TWO_SIDE
 0x8643

	)

471 
	#GL_POINT_SPRITE
 0x8861

	)

472 
	#GL_COORD_REPLACE
 0x8862

	)

473 
	#GL_MAX_TEXTURE_COORDS
 0x8871

	)

476 #i‚de‡
GL_VERSION_2_1


477 
	#GL_PIXEL_PACK_BUFFER
 0x88EB

	)

478 
	#GL_PIXEL_UNPACK_BUFFER
 0x88EC

	)

479 
	#GL_PIXEL_PACK_BUFFER_BINDING
 0x88ED

	)

480 
	#GL_PIXEL_UNPACK_BUFFER_BINDING
 0x88EF

	)

481 
	#GL_FLOAT_MAT2x3
 0x8B65

	)

482 
	#GL_FLOAT_MAT2x4
 0x8B66

	)

483 
	#GL_FLOAT_MAT3x2
 0x8B67

	)

484 
	#GL_FLOAT_MAT3x4
 0x8B68

	)

485 
	#GL_FLOAT_MAT4x2
 0x8B69

	)

486 
	#GL_FLOAT_MAT4x3
 0x8B6A

	)

487 
	#GL_SRGB
 0x8C40

	)

488 
	#GL_SRGB8
 0x8C41

	)

489 
	#GL_SRGB_ALPHA
 0x8C42

	)

490 
	#GL_SRGB8_ALPHA8
 0x8C43

	)

491 
	#GL_COMPRESSED_SRGB
 0x8C48

	)

492 
	#GL_COMPRESSED_SRGB_ALPHA
 0x8C49

	)

495 #i‚de‡
GL_VERSION_2_1_DEPRECATED


496 
	#GL_CURRENT_RASTER_SECONDARY_COLOR
 0x845F

	)

497 
	#GL_SLUMINANCE_ALPHA
 0x8C44

	)

498 
	#GL_SLUMINANCE8_ALPHA8
 0x8C45

	)

499 
	#GL_SLUMINANCE
 0x8C46

	)

500 
	#GL_SLUMINANCE8
 0x8C47

	)

501 
	#GL_COMPRESSED_SLUMINANCE
 0x8C4A

	)

502 
	#GL_COMPRESSED_SLUMINANCE_ALPHA
 0x8C4B

	)

505 #i‚de‡
GL_VERSION_3_0


506 
	#GL_COMPARE_REF_TO_TEXTURE
 0x884E

	)

507 
	#GL_CLIP_DISTANCE0
 0x3000

	)

508 
	#GL_CLIP_DISTANCE1
 0x3001

	)

509 
	#GL_CLIP_DISTANCE2
 0x3002

	)

510 
	#GL_CLIP_DISTANCE3
 0x3003

	)

511 
	#GL_CLIP_DISTANCE4
 0x3004

	)

512 
	#GL_CLIP_DISTANCE5
 0x3005

	)

513 
	#GL_CLIP_DISTANCE6
 0x3006

	)

514 
	#GL_CLIP_DISTANCE7
 0x3007

	)

515 
	#GL_MAX_CLIP_DISTANCES
 0x0D32

	)

516 
	#GL_MAJOR_VERSION
 0x821B

	)

517 
	#GL_MINOR_VERSION
 0x821C

	)

518 
	#GL_NUM_EXTENSIONS
 0x821D

	)

519 
	#GL_CONTEXT_FLAGS
 0x821E

	)

520 
	#GL_DEPTH_BUFFER
 0x8223

	)

521 
	#GL_STENCIL_BUFFER
 0x8224

	)

522 
	#GL_COMPRESSED_RED
 0x8225

	)

523 
	#GL_COMPRESSED_RG
 0x8226

	)

524 
	#GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT
 0x0001

	)

525 
	#GL_RGBA32F
 0x8814

	)

526 
	#GL_RGB32F
 0x8815

	)

527 
	#GL_RGBA16F
 0x881A

	)

528 
	#GL_RGB16F
 0x881B

	)

529 
	#GL_VERTEX_ATTRIB_ARRAY_INTEGER
 0x88FD

	)

530 
	#GL_MAX_ARRAY_TEXTURE_LAYERS
 0x88FF

	)

531 
	#GL_MIN_PROGRAM_TEXEL_OFFSET
 0x8904

	)

532 
	#GL_MAX_PROGRAM_TEXEL_OFFSET
 0x8905

	)

533 
	#GL_CLAMP_READ_COLOR
 0x891C

	)

534 
	#GL_FIXED_ONLY
 0x891D

	)

535 
	#GL_MAX_VARYING_COMPONENTS
 0x8B4B

	)

536 
	#GL_TEXTURE_1D_ARRAY
 0x8C18

	)

537 
	#GL_PROXY_TEXTURE_1D_ARRAY
 0x8C19

	)

538 
	#GL_TEXTURE_2D_ARRAY
 0x8C1A

	)

539 
	#GL_PROXY_TEXTURE_2D_ARRAY
 0x8C1B

	)

540 
	#GL_TEXTURE_BINDING_1D_ARRAY
 0x8C1C

	)

541 
	#GL_TEXTURE_BINDING_2D_ARRAY
 0x8C1D

	)

542 
	#GL_R11F_G11F_B10F
 0x8C3A

	)

543 
	#GL_UNSIGNED_INT_10F_11F_11F_REV
 0x8C3B

	)

544 
	#GL_RGB9_E5
 0x8C3D

	)

545 
	#GL_UNSIGNED_INT_5_9_9_9_REV
 0x8C3E

	)

546 
	#GL_TEXTURE_SHARED_SIZE
 0x8C3F

	)

547 
	#GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
 0x8C76

	)

548 
	#GL_TRANSFORM_FEEDBACK_BUFFER_MODE
 0x8C7F

	)

549 
	#GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
 0x8C80

	)

550 
	#GL_TRANSFORM_FEEDBACK_VARYINGS
 0x8C83

	)

551 
	#GL_TRANSFORM_FEEDBACK_BUFFER_START
 0x8C84

	)

552 
	#GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
 0x8C85

	)

553 
	#GL_PRIMITIVES_GENERATED
 0x8C87

	)

554 
	#GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
 0x8C88

	)

555 
	#GL_RASTERIZER_DISCARD
 0x8C89

	)

556 
	#GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
 0x8C8A

	)

557 
	#GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
 0x8C8B

	)

558 
	#GL_INTERLEAVED_ATTRIBS
 0x8C8C

	)

559 
	#GL_SEPARATE_ATTRIBS
 0x8C8D

	)

560 
	#GL_TRANSFORM_FEEDBACK_BUFFER
 0x8C8E

	)

561 
	#GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
 0x8C8F

	)

562 
	#GL_RGBA32UI
 0x8D70

	)

563 
	#GL_RGB32UI
 0x8D71

	)

564 
	#GL_RGBA16UI
 0x8D76

	)

565 
	#GL_RGB16UI
 0x8D77

	)

566 
	#GL_RGBA8UI
 0x8D7C

	)

567 
	#GL_RGB8UI
 0x8D7D

	)

568 
	#GL_RGBA32I
 0x8D82

	)

569 
	#GL_RGB32I
 0x8D83

	)

570 
	#GL_RGBA16I
 0x8D88

	)

571 
	#GL_RGB16I
 0x8D89

	)

572 
	#GL_RGBA8I
 0x8D8E

	)

573 
	#GL_RGB8I
 0x8D8F

	)

574 
	#GL_RED_INTEGER
 0x8D94

	)

575 
	#GL_GREEN_INTEGER
 0x8D95

	)

576 
	#GL_BLUE_INTEGER
 0x8D96

	)

577 
	#GL_RGB_INTEGER
 0x8D98

	)

578 
	#GL_RGBA_INTEGER
 0x8D99

	)

579 
	#GL_BGR_INTEGER
 0x8D9A

	)

580 
	#GL_BGRA_INTEGER
 0x8D9B

	)

581 
	#GL_SAMPLER_1D_ARRAY
 0x8DC0

	)

582 
	#GL_SAMPLER_2D_ARRAY
 0x8DC1

	)

583 
	#GL_SAMPLER_1D_ARRAY_SHADOW
 0x8DC3

	)

584 
	#GL_SAMPLER_2D_ARRAY_SHADOW
 0x8DC4

	)

585 
	#GL_SAMPLER_CUBE_SHADOW
 0x8DC5

	)

586 
	#GL_UNSIGNED_INT_VEC2
 0x8DC6

	)

587 
	#GL_UNSIGNED_INT_VEC3
 0x8DC7

	)

588 
	#GL_UNSIGNED_INT_VEC4
 0x8DC8

	)

589 
	#GL_INT_SAMPLER_1D
 0x8DC9

	)

590 
	#GL_INT_SAMPLER_2D
 0x8DCA

	)

591 
	#GL_INT_SAMPLER_3D
 0x8DCB

	)

592 
	#GL_INT_SAMPLER_CUBE
 0x8DCC

	)

593 
	#GL_INT_SAMPLER_1D_ARRAY
 0x8DCE

	)

594 
	#GL_INT_SAMPLER_2D_ARRAY
 0x8DCF

	)

595 
	#GL_UNSIGNED_INT_SAMPLER_1D
 0x8DD1

	)

596 
	#GL_UNSIGNED_INT_SAMPLER_2D
 0x8DD2

	)

597 
	#GL_UNSIGNED_INT_SAMPLER_3D
 0x8DD3

	)

598 
	#GL_UNSIGNED_INT_SAMPLER_CUBE
 0x8DD4

	)

599 
	#GL_UNSIGNED_INT_SAMPLER_1D_ARRAY
 0x8DD6

	)

600 
	#GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
 0x8DD7

	)

601 
	#GL_QUERY_WAIT
 0x8E13

	)

602 
	#GL_QUERY_NO_WAIT
 0x8E14

	)

603 
	#GL_QUERY_BY_REGION_WAIT
 0x8E15

	)

604 
	#GL_QUERY_BY_REGION_NO_WAIT
 0x8E16

	)

605 
	#GL_BUFFER_ACCESS_FLAGS
 0x911F

	)

606 
	#GL_BUFFER_MAP_LENGTH
 0x9120

	)

607 
	#GL_BUFFER_MAP_OFFSET
 0x9121

	)

734 #i‚de‡
GL_VERSION_3_0_DEPRECATED


735 
	#GL_CLAMP_VERTEX_COLOR
 0x891A

	)

736 
	#GL_CLAMP_FRAGMENT_COLOR
 0x891B

	)

737 
	#GL_ALPHA_INTEGER
 0x8D97

	)

743 #i‚de‡
GL_VERSION_3_1


744 
	#GL_SAMPLER_2D_RECT
 0x8B63

	)

745 
	#GL_SAMPLER_2D_RECT_SHADOW
 0x8B64

	)

746 
	#GL_SAMPLER_BUFFER
 0x8DC2

	)

747 
	#GL_INT_SAMPLER_2D_RECT
 0x8DCD

	)

748 
	#GL_INT_SAMPLER_BUFFER
 0x8DD0

	)

749 
	#GL_UNSIGNED_INT_SAMPLER_2D_RECT
 0x8DD5

	)

750 
	#GL_UNSIGNED_INT_SAMPLER_BUFFER
 0x8DD8

	)

751 
	#GL_TEXTURE_BUFFER
 0x8C2A

	)

752 
	#GL_MAX_TEXTURE_BUFFER_SIZE
 0x8C2B

	)

753 
	#GL_TEXTURE_BINDING_BUFFER
 0x8C2C

	)

754 
	#GL_TEXTURE_BUFFER_DATA_STORE_BINDING
 0x8C2D

	)

755 
	#GL_TEXTURE_BUFFER_FORMAT
 0x8C2E

	)

756 
	#GL_TEXTURE_RECTANGLE
 0x84F5

	)

757 
	#GL_TEXTURE_BINDING_RECTANGLE
 0x84F6

	)

758 
	#GL_PROXY_TEXTURE_RECTANGLE
 0x84F7

	)

759 
	#GL_MAX_RECTANGLE_TEXTURE_SIZE
 0x84F8

	)

760 
	#GL_RED_SNORM
 0x8F90

	)

761 
	#GL_RG_SNORM
 0x8F91

	)

762 
	#GL_RGB_SNORM
 0x8F92

	)

763 
	#GL_RGBA_SNORM
 0x8F93

	)

764 
	#GL_R8_SNORM
 0x8F94

	)

765 
	#GL_RG8_SNORM
 0x8F95

	)

766 
	#GL_RGB8_SNORM
 0x8F96

	)

767 
	#GL_RGBA8_SNORM
 0x8F97

	)

768 
	#GL_R16_SNORM
 0x8F98

	)

769 
	#GL_RG16_SNORM
 0x8F99

	)

770 
	#GL_RGB16_SNORM
 0x8F9A

	)

771 
	#GL_RGBA16_SNORM
 0x8F9B

	)

772 
	#GL_SIGNED_NORMALIZED
 0x8F9C

	)

773 
	#GL_PRIMITIVE_RESTART
 0x8F9D

	)

774 
	#GL_PRIMITIVE_RESTART_INDEX
 0x8F9E

	)

812 #i‚de‡
GL_VERSION_3_2


813 
	#GL_CONTEXT_CORE_PROFILE_BIT
 0x00000001

	)

814 
	#GL_CONTEXT_COMPATIBILITY_PROFILE_BIT
 0x00000002

	)

815 
	#GL_LINES_ADJACENCY
 0x000A

	)

816 
	#GL_LINE_STRIP_ADJACENCY
 0x000B

	)

817 
	#GL_TRIANGLES_ADJACENCY
 0x000C

	)

818 
	#GL_TRIANGLE_STRIP_ADJACENCY
 0x000D

	)

819 
	#GL_PROGRAM_POINT_SIZE
 0x8642

	)

820 
	#GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS
 0x8C29

	)

821 
	#GL_FRAMEBUFFER_ATTACHMENT_LAYERED
 0x8DA7

	)

822 
	#GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS
 0x8DA8

	)

823 
	#GL_GEOMETRY_SHADER
 0x8DD9

	)

824 
	#GL_GEOMETRY_VERTICES_OUT
 0x8916

	)

825 
	#GL_GEOMETRY_INPUT_TYPE
 0x8917

	)

826 
	#GL_GEOMETRY_OUTPUT_TYPE
 0x8918

	)

827 
	#GL_MAX_GEOMETRY_UNIFORM_COMPONENTS
 0x8DDF

	)

828 
	#GL_MAX_GEOMETRY_OUTPUT_VERTICES
 0x8DE0

	)

829 
	#GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS
 0x8DE1

	)

830 
	#GL_MAX_VERTEX_OUTPUT_COMPONENTS
 0x9122

	)

831 
	#GL_MAX_GEOMETRY_INPUT_COMPONENTS
 0x9123

	)

832 
	#GL_MAX_GEOMETRY_OUTPUT_COMPONENTS
 0x9124

	)

833 
	#GL_MAX_FRAGMENT_INPUT_COMPONENTS
 0x9125

	)

834 
	#GL_CONTEXT_PROFILE_MASK
 0x9126

	)

890 #i‚de‡
GL_ARB_mu…ôextuª


891 
	#GL_TEXTURE0_ARB
 0x84C0

	)

892 
	#GL_TEXTURE1_ARB
 0x84C1

	)

893 
	#GL_TEXTURE2_ARB
 0x84C2

	)

894 
	#GL_TEXTURE3_ARB
 0x84C3

	)

895 
	#GL_TEXTURE4_ARB
 0x84C4

	)

896 
	#GL_TEXTURE5_ARB
 0x84C5

	)

897 
	#GL_TEXTURE6_ARB
 0x84C6

	)

898 
	#GL_TEXTURE7_ARB
 0x84C7

	)

899 
	#GL_TEXTURE8_ARB
 0x84C8

	)

900 
	#GL_TEXTURE9_ARB
 0x84C9

	)

901 
	#GL_TEXTURE10_ARB
 0x84CA

	)

902 
	#GL_TEXTURE11_ARB
 0x84CB

	)

903 
	#GL_TEXTURE12_ARB
 0x84CC

	)

904 
	#GL_TEXTURE13_ARB
 0x84CD

	)

905 
	#GL_TEXTURE14_ARB
 0x84CE

	)

906 
	#GL_TEXTURE15_ARB
 0x84CF

	)

907 
	#GL_TEXTURE16_ARB
 0x84D0

	)

908 
	#GL_TEXTURE17_ARB
 0x84D1

	)

909 
	#GL_TEXTURE18_ARB
 0x84D2

	)

910 
	#GL_TEXTURE19_ARB
 0x84D3

	)

911 
	#GL_TEXTURE20_ARB
 0x84D4

	)

912 
	#GL_TEXTURE21_ARB
 0x84D5

	)

913 
	#GL_TEXTURE22_ARB
 0x84D6

	)

914 
	#GL_TEXTURE23_ARB
 0x84D7

	)

915 
	#GL_TEXTURE24_ARB
 0x84D8

	)

916 
	#GL_TEXTURE25_ARB
 0x84D9

	)

917 
	#GL_TEXTURE26_ARB
 0x84DA

	)

918 
	#GL_TEXTURE27_ARB
 0x84DB

	)

919 
	#GL_TEXTURE28_ARB
 0x84DC

	)

920 
	#GL_TEXTURE29_ARB
 0x84DD

	)

921 
	#GL_TEXTURE30_ARB
 0x84DE

	)

922 
	#GL_TEXTURE31_ARB
 0x84DF

	)

923 
	#GL_ACTIVE_TEXTURE_ARB
 0x84E0

	)

924 
	#GL_CLIENT_ACTIVE_TEXTURE_ARB
 0x84E1

	)

925 
	#GL_MAX_TEXTURE_UNITS_ARB
 0x84E2

	)

928 #i‚de‡
GL_ARB_å™•o£_m©rix


929 
	#GL_TRANSPOSE_MODELVIEW_MATRIX_ARB
 0x84E3

	)

930 
	#GL_TRANSPOSE_PROJECTION_MATRIX_ARB
 0x84E4

	)

931 
	#GL_TRANSPOSE_TEXTURE_MATRIX_ARB
 0x84E5

	)

932 
	#GL_TRANSPOSE_COLOR_MATRIX_ARB
 0x84E6

	)

935 #i‚de‡
GL_ARB_mu…ißm∂e


936 
	#GL_MULTISAMPLE_ARB
 0x809D

	)

937 
	#GL_SAMPLE_ALPHA_TO_COVERAGE_ARB
 0x809E

	)

938 
	#GL_SAMPLE_ALPHA_TO_ONE_ARB
 0x809F

	)

939 
	#GL_SAMPLE_COVERAGE_ARB
 0x80A0

	)

940 
	#GL_SAMPLE_BUFFERS_ARB
 0x80A8

	)

941 
	#GL_SAMPLES_ARB
 0x80A9

	)

942 
	#GL_SAMPLE_COVERAGE_VALUE_ARB
 0x80AA

	)

943 
	#GL_SAMPLE_COVERAGE_INVERT_ARB
 0x80AB

	)

944 
	#GL_MULTISAMPLE_BIT_ARB
 0x20000000

	)

947 #i‚de‡
GL_ARB_ãxtuª_ív_add


950 #i‚de‡
GL_ARB_ãxtuª_cube_m≠


951 
	#GL_NORMAL_MAP_ARB
 0x8511

	)

952 
	#GL_REFLECTION_MAP_ARB
 0x8512

	)

953 
	#GL_TEXTURE_CUBE_MAP_ARB
 0x8513

	)

954 
	#GL_TEXTURE_BINDING_CUBE_MAP_ARB
 0x8514

	)

955 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
 0x8515

	)

956 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
 0x8516

	)

957 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
 0x8517

	)

958 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
 0x8518

	)

959 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
 0x8519

	)

960 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
 0x851A

	)

961 
	#GL_PROXY_TEXTURE_CUBE_MAP_ARB
 0x851B

	)

962 
	#GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB
 0x851C

	)

965 #i‚de‡
GL_ARB_ãxtuª_com¥essi⁄


966 
	#GL_COMPRESSED_ALPHA_ARB
 0x84E9

	)

967 
	#GL_COMPRESSED_LUMINANCE_ARB
 0x84EA

	)

968 
	#GL_COMPRESSED_LUMINANCE_ALPHA_ARB
 0x84EB

	)

969 
	#GL_COMPRESSED_INTENSITY_ARB
 0x84EC

	)

970 
	#GL_COMPRESSED_RGB_ARB
 0x84ED

	)

971 
	#GL_COMPRESSED_RGBA_ARB
 0x84EE

	)

972 
	#GL_TEXTURE_COMPRESSION_HINT_ARB
 0x84EF

	)

973 
	#GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
 0x86A0

	)

974 
	#GL_TEXTURE_COMPRESSED_ARB
 0x86A1

	)

975 
	#GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
 0x86A2

	)

976 
	#GL_COMPRESSED_TEXTURE_FORMATS_ARB
 0x86A3

	)

979 #i‚de‡
GL_ARB_ãxtuª_b‹dî_˛amp


980 
	#GL_CLAMP_TO_BORDER_ARB
 0x812D

	)

983 #i‚de‡
GL_ARB_poöt_∑ømëîs


984 
	#GL_POINT_SIZE_MIN_ARB
 0x8126

	)

985 
	#GL_POINT_SIZE_MAX_ARB
 0x8127

	)

986 
	#GL_POINT_FADE_THRESHOLD_SIZE_ARB
 0x8128

	)

987 
	#GL_POINT_DISTANCE_ATTENUATION_ARB
 0x8129

	)

990 #i‚de‡
GL_ARB_vîãx_bÀnd


991 
	#GL_MAX_VERTEX_UNITS_ARB
 0x86A4

	)

992 
	#GL_ACTIVE_VERTEX_UNITS_ARB
 0x86A5

	)

993 
	#GL_WEIGHT_SUM_UNITY_ARB
 0x86A6

	)

994 
	#GL_VERTEX_BLEND_ARB
 0x86A7

	)

995 
	#GL_CURRENT_WEIGHT_ARB
 0x86A8

	)

996 
	#GL_WEIGHT_ARRAY_TYPE_ARB
 0x86A9

	)

997 
	#GL_WEIGHT_ARRAY_STRIDE_ARB
 0x86AA

	)

998 
	#GL_WEIGHT_ARRAY_SIZE_ARB
 0x86AB

	)

999 
	#GL_WEIGHT_ARRAY_POINTER_ARB
 0x86AC

	)

1000 
	#GL_WEIGHT_ARRAY_ARB
 0x86AD

	)

1001 
	#GL_MODELVIEW0_ARB
 0x1700

	)

1002 
	#GL_MODELVIEW1_ARB
 0x850A

	)

1003 
	#GL_MODELVIEW2_ARB
 0x8722

	)

1004 
	#GL_MODELVIEW3_ARB
 0x8723

	)

1005 
	#GL_MODELVIEW4_ARB
 0x8724

	)

1006 
	#GL_MODELVIEW5_ARB
 0x8725

	)

1007 
	#GL_MODELVIEW6_ARB
 0x8726

	)

1008 
	#GL_MODELVIEW7_ARB
 0x8727

	)

1009 
	#GL_MODELVIEW8_ARB
 0x8728

	)

1010 
	#GL_MODELVIEW9_ARB
 0x8729

	)

1011 
	#GL_MODELVIEW10_ARB
 0x872A

	)

1012 
	#GL_MODELVIEW11_ARB
 0x872B

	)

1013 
	#GL_MODELVIEW12_ARB
 0x872C

	)

1014 
	#GL_MODELVIEW13_ARB
 0x872D

	)

1015 
	#GL_MODELVIEW14_ARB
 0x872E

	)

1016 
	#GL_MODELVIEW15_ARB
 0x872F

	)

1017 
	#GL_MODELVIEW16_ARB
 0x8730

	)

1018 
	#GL_MODELVIEW17_ARB
 0x8731

	)

1019 
	#GL_MODELVIEW18_ARB
 0x8732

	)

1020 
	#GL_MODELVIEW19_ARB
 0x8733

	)

1021 
	#GL_MODELVIEW20_ARB
 0x8734

	)

1022 
	#GL_MODELVIEW21_ARB
 0x8735

	)

1023 
	#GL_MODELVIEW22_ARB
 0x8736

	)

1024 
	#GL_MODELVIEW23_ARB
 0x8737

	)

1025 
	#GL_MODELVIEW24_ARB
 0x8738

	)

1026 
	#GL_MODELVIEW25_ARB
 0x8739

	)

1027 
	#GL_MODELVIEW26_ARB
 0x873A

	)

1028 
	#GL_MODELVIEW27_ARB
 0x873B

	)

1029 
	#GL_MODELVIEW28_ARB
 0x873C

	)

1030 
	#GL_MODELVIEW29_ARB
 0x873D

	)

1031 
	#GL_MODELVIEW30_ARB
 0x873E

	)

1032 
	#GL_MODELVIEW31_ARB
 0x873F

	)

1035 #i‚de‡
GL_ARB_m©rix_∑Àâe


1036 
	#GL_MATRIX_PALETTE_ARB
 0x8840

	)

1037 
	#GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
 0x8841

	)

1038 
	#GL_MAX_PALETTE_MATRICES_ARB
 0x8842

	)

1039 
	#GL_CURRENT_PALETTE_MATRIX_ARB
 0x8843

	)

1040 
	#GL_MATRIX_INDEX_ARRAY_ARB
 0x8844

	)

1041 
	#GL_CURRENT_MATRIX_INDEX_ARB
 0x8845

	)

1042 
	#GL_MATRIX_INDEX_ARRAY_SIZE_ARB
 0x8846

	)

1043 
	#GL_MATRIX_INDEX_ARRAY_TYPE_ARB
 0x8847

	)

1044 
	#GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
 0x8848

	)

1045 
	#GL_MATRIX_INDEX_ARRAY_POINTER_ARB
 0x8849

	)

1048 #i‚de‡
GL_ARB_ãxtuª_ív_comböe


1049 
	#GL_COMBINE_ARB
 0x8570

	)

1050 
	#GL_COMBINE_RGB_ARB
 0x8571

	)

1051 
	#GL_COMBINE_ALPHA_ARB
 0x8572

	)

1052 
	#GL_SOURCE0_RGB_ARB
 0x8580

	)

1053 
	#GL_SOURCE1_RGB_ARB
 0x8581

	)

1054 
	#GL_SOURCE2_RGB_ARB
 0x8582

	)

1055 
	#GL_SOURCE0_ALPHA_ARB
 0x8588

	)

1056 
	#GL_SOURCE1_ALPHA_ARB
 0x8589

	)

1057 
	#GL_SOURCE2_ALPHA_ARB
 0x858A

	)

1058 
	#GL_OPERAND0_RGB_ARB
 0x8590

	)

1059 
	#GL_OPERAND1_RGB_ARB
 0x8591

	)

1060 
	#GL_OPERAND2_RGB_ARB
 0x8592

	)

1061 
	#GL_OPERAND0_ALPHA_ARB
 0x8598

	)

1062 
	#GL_OPERAND1_ALPHA_ARB
 0x8599

	)

1063 
	#GL_OPERAND2_ALPHA_ARB
 0x859A

	)

1064 
	#GL_RGB_SCALE_ARB
 0x8573

	)

1065 
	#GL_ADD_SIGNED_ARB
 0x8574

	)

1066 
	#GL_INTERPOLATE_ARB
 0x8575

	)

1067 
	#GL_SUBTRACT_ARB
 0x84E7

	)

1068 
	#GL_CONSTANT_ARB
 0x8576

	)

1069 
	#GL_PRIMARY_COLOR_ARB
 0x8577

	)

1070 
	#GL_PREVIOUS_ARB
 0x8578

	)

1073 #i‚de‡
GL_ARB_ãxtuª_ív_¸ossb¨


1076 #i‚de‡
GL_ARB_ãxtuª_ív_dŸ3


1077 
	#GL_DOT3_RGB_ARB
 0x86AE

	)

1078 
	#GL_DOT3_RGBA_ARB
 0x86AF

	)

1081 #i‚de‡
GL_ARB_ãxtuª_múr‹ed_ª≥©


1082 
	#GL_MIRRORED_REPEAT_ARB
 0x8370

	)

1085 #i‚de‡
GL_ARB_dïth_ãxtuª


1086 
	#GL_DEPTH_COMPONENT16_ARB
 0x81A5

	)

1087 
	#GL_DEPTH_COMPONENT24_ARB
 0x81A6

	)

1088 
	#GL_DEPTH_COMPONENT32_ARB
 0x81A7

	)

1089 
	#GL_TEXTURE_DEPTH_SIZE_ARB
 0x884A

	)

1090 
	#GL_DEPTH_TEXTURE_MODE_ARB
 0x884B

	)

1093 #i‚de‡
GL_ARB_shadow


1094 
	#GL_TEXTURE_COMPARE_MODE_ARB
 0x884C

	)

1095 
	#GL_TEXTURE_COMPARE_FUNC_ARB
 0x884D

	)

1096 
	#GL_COMPARE_R_TO_TEXTURE_ARB
 0x884E

	)

1099 #i‚de‡
GL_ARB_shadow_ambõ¡


1100 
	#GL_TEXTURE_COMPARE_FAIL_VALUE_ARB
 0x80BF

	)

1103 #i‚de‡
GL_ARB_wödow_pos


1106 #i‚de‡
GL_ARB_vîãx_¥ogøm


1107 
	#GL_COLOR_SUM_ARB
 0x8458

	)

1108 
	#GL_VERTEX_PROGRAM_ARB
 0x8620

	)

1109 
	#GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB
 0x8622

	)

1110 
	#GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB
 0x8623

	)

1111 
	#GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB
 0x8624

	)

1112 
	#GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB
 0x8625

	)

1113 
	#GL_CURRENT_VERTEX_ATTRIB_ARB
 0x8626

	)

1114 
	#GL_PROGRAM_LENGTH_ARB
 0x8627

	)

1115 
	#GL_PROGRAM_STRING_ARB
 0x8628

	)

1116 
	#GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB
 0x862E

	)

1117 
	#GL_MAX_PROGRAM_MATRICES_ARB
 0x862F

	)

1118 
	#GL_CURRENT_MATRIX_STACK_DEPTH_ARB
 0x8640

	)

1119 
	#GL_CURRENT_MATRIX_ARB
 0x8641

	)

1120 
	#GL_VERTEX_PROGRAM_POINT_SIZE_ARB
 0x8642

	)

1121 
	#GL_VERTEX_PROGRAM_TWO_SIDE_ARB
 0x8643

	)

1122 
	#GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB
 0x8645

	)

1123 
	#GL_PROGRAM_ERROR_POSITION_ARB
 0x864B

	)

1124 
	#GL_PROGRAM_BINDING_ARB
 0x8677

	)

1125 
	#GL_MAX_VERTEX_ATTRIBS_ARB
 0x8869

	)

1126 
	#GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB
 0x886A

	)

1127 
	#GL_PROGRAM_ERROR_STRING_ARB
 0x8874

	)

1128 
	#GL_PROGRAM_FORMAT_ASCII_ARB
 0x8875

	)

1129 
	#GL_PROGRAM_FORMAT_ARB
 0x8876

	)

1130 
	#GL_PROGRAM_INSTRUCTIONS_ARB
 0x88A0

	)

1131 
	#GL_MAX_PROGRAM_INSTRUCTIONS_ARB
 0x88A1

	)

1132 
	#GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB
 0x88A2

	)

1133 
	#GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB
 0x88A3

	)

1134 
	#GL_PROGRAM_TEMPORARIES_ARB
 0x88A4

	)

1135 
	#GL_MAX_PROGRAM_TEMPORARIES_ARB
 0x88A5

	)

1136 
	#GL_PROGRAM_NATIVE_TEMPORARIES_ARB
 0x88A6

	)

1137 
	#GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB
 0x88A7

	)

1138 
	#GL_PROGRAM_PARAMETERS_ARB
 0x88A8

	)

1139 
	#GL_MAX_PROGRAM_PARAMETERS_ARB
 0x88A9

	)

1140 
	#GL_PROGRAM_NATIVE_PARAMETERS_ARB
 0x88AA

	)

1141 
	#GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB
 0x88AB

	)

1142 
	#GL_PROGRAM_ATTRIBS_ARB
 0x88AC

	)

1143 
	#GL_MAX_PROGRAM_ATTRIBS_ARB
 0x88AD

	)

1144 
	#GL_PROGRAM_NATIVE_ATTRIBS_ARB
 0x88AE

	)

1145 
	#GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB
 0x88AF

	)

1146 
	#GL_PROGRAM_ADDRESS_REGISTERS_ARB
 0x88B0

	)

1147 
	#GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB
 0x88B1

	)

1148 
	#GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
 0x88B2

	)

1149 
	#GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
 0x88B3

	)

1150 
	#GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB
 0x88B4

	)

1151 
	#GL_MAX_PROGRAM_ENV_PARAMETERS_ARB
 0x88B5

	)

1152 
	#GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB
 0x88B6

	)

1153 
	#GL_TRANSPOSE_CURRENT_MATRIX_ARB
 0x88B7

	)

1154 
	#GL_MATRIX0_ARB
 0x88C0

	)

1155 
	#GL_MATRIX1_ARB
 0x88C1

	)

1156 
	#GL_MATRIX2_ARB
 0x88C2

	)

1157 
	#GL_MATRIX3_ARB
 0x88C3

	)

1158 
	#GL_MATRIX4_ARB
 0x88C4

	)

1159 
	#GL_MATRIX5_ARB
 0x88C5

	)

1160 
	#GL_MATRIX6_ARB
 0x88C6

	)

1161 
	#GL_MATRIX7_ARB
 0x88C7

	)

1162 
	#GL_MATRIX8_ARB
 0x88C8

	)

1163 
	#GL_MATRIX9_ARB
 0x88C9

	)

1164 
	#GL_MATRIX10_ARB
 0x88CA

	)

1165 
	#GL_MATRIX11_ARB
 0x88CB

	)

1166 
	#GL_MATRIX12_ARB
 0x88CC

	)

1167 
	#GL_MATRIX13_ARB
 0x88CD

	)

1168 
	#GL_MATRIX14_ARB
 0x88CE

	)

1169 
	#GL_MATRIX15_ARB
 0x88CF

	)

1170 
	#GL_MATRIX16_ARB
 0x88D0

	)

1171 
	#GL_MATRIX17_ARB
 0x88D1

	)

1172 
	#GL_MATRIX18_ARB
 0x88D2

	)

1173 
	#GL_MATRIX19_ARB
 0x88D3

	)

1174 
	#GL_MATRIX20_ARB
 0x88D4

	)

1175 
	#GL_MATRIX21_ARB
 0x88D5

	)

1176 
	#GL_MATRIX22_ARB
 0x88D6

	)

1177 
	#GL_MATRIX23_ARB
 0x88D7

	)

1178 
	#GL_MATRIX24_ARB
 0x88D8

	)

1179 
	#GL_MATRIX25_ARB
 0x88D9

	)

1180 
	#GL_MATRIX26_ARB
 0x88DA

	)

1181 
	#GL_MATRIX27_ARB
 0x88DB

	)

1182 
	#GL_MATRIX28_ARB
 0x88DC

	)

1183 
	#GL_MATRIX29_ARB
 0x88DD

	)

1184 
	#GL_MATRIX30_ARB
 0x88DE

	)

1185 
	#GL_MATRIX31_ARB
 0x88DF

	)

1188 #i‚de‡
GL_ARB_‰agmít_¥ogøm


1189 
	#GL_FRAGMENT_PROGRAM_ARB
 0x8804

	)

1190 
	#GL_PROGRAM_ALU_INSTRUCTIONS_ARB
 0x8805

	)

1191 
	#GL_PROGRAM_TEX_INSTRUCTIONS_ARB
 0x8806

	)

1192 
	#GL_PROGRAM_TEX_INDIRECTIONS_ARB
 0x8807

	)

1193 
	#GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
 0x8808

	)

1194 
	#GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
 0x8809

	)

1195 
	#GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
 0x880A

	)

1196 
	#GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB
 0x880B

	)

1197 
	#GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB
 0x880C

	)

1198 
	#GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB
 0x880D

	)

1199 
	#GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
 0x880E

	)

1200 
	#GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
 0x880F

	)

1201 
	#GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
 0x8810

	)

1202 
	#GL_MAX_TEXTURE_COORDS_ARB
 0x8871

	)

1203 
	#GL_MAX_TEXTURE_IMAGE_UNITS_ARB
 0x8872

	)

1206 #i‚de‡
GL_ARB_vîãx_buf„r_obje˘


1207 
	#GL_BUFFER_SIZE_ARB
 0x8764

	)

1208 
	#GL_BUFFER_USAGE_ARB
 0x8765

	)

1209 
	#GL_ARRAY_BUFFER_ARB
 0x8892

	)

1210 
	#GL_ELEMENT_ARRAY_BUFFER_ARB
 0x8893

	)

1211 
	#GL_ARRAY_BUFFER_BINDING_ARB
 0x8894

	)

1212 
	#GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB
 0x8895

	)

1213 
	#GL_VERTEX_ARRAY_BUFFER_BINDING_ARB
 0x8896

	)

1214 
	#GL_NORMAL_ARRAY_BUFFER_BINDING_ARB
 0x8897

	)

1215 
	#GL_COLOR_ARRAY_BUFFER_BINDING_ARB
 0x8898

	)

1216 
	#GL_INDEX_ARRAY_BUFFER_BINDING_ARB
 0x8899

	)

1217 
	#GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB
 0x889A

	)

1218 
	#GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB
 0x889B

	)

1219 
	#GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB
 0x889C

	)

1220 
	#GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB
 0x889D

	)

1221 
	#GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB
 0x889E

	)

1222 
	#GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB
 0x889F

	)

1223 
	#GL_READ_ONLY_ARB
 0x88B8

	)

1224 
	#GL_WRITE_ONLY_ARB
 0x88B9

	)

1225 
	#GL_READ_WRITE_ARB
 0x88BA

	)

1226 
	#GL_BUFFER_ACCESS_ARB
 0x88BB

	)

1227 
	#GL_BUFFER_MAPPED_ARB
 0x88BC

	)

1228 
	#GL_BUFFER_MAP_POINTER_ARB
 0x88BD

	)

1229 
	#GL_STREAM_DRAW_ARB
 0x88E0

	)

1230 
	#GL_STREAM_READ_ARB
 0x88E1

	)

1231 
	#GL_STREAM_COPY_ARB
 0x88E2

	)

1232 
	#GL_STATIC_DRAW_ARB
 0x88E4

	)

1233 
	#GL_STATIC_READ_ARB
 0x88E5

	)

1234 
	#GL_STATIC_COPY_ARB
 0x88E6

	)

1235 
	#GL_DYNAMIC_DRAW_ARB
 0x88E8

	)

1236 
	#GL_DYNAMIC_READ_ARB
 0x88E9

	)

1237 
	#GL_DYNAMIC_COPY_ARB
 0x88EA

	)

1240 #i‚de‡
GL_ARB_oc˛usi⁄_quîy


1241 
	#GL_QUERY_COUNTER_BITS_ARB
 0x8864

	)

1242 
	#GL_CURRENT_QUERY_ARB
 0x8865

	)

1243 
	#GL_QUERY_RESULT_ARB
 0x8866

	)

1244 
	#GL_QUERY_RESULT_AVAILABLE_ARB
 0x8867

	)

1245 
	#GL_SAMPLES_PASSED_ARB
 0x8914

	)

1248 #i‚de‡
GL_ARB_shadî_obje˘s


1249 
	#GL_PROGRAM_OBJECT_ARB
 0x8B40

	)

1250 
	#GL_SHADER_OBJECT_ARB
 0x8B48

	)

1251 
	#GL_OBJECT_TYPE_ARB
 0x8B4E

	)

1252 
	#GL_OBJECT_SUBTYPE_ARB
 0x8B4F

	)

1253 
	#GL_FLOAT_VEC2_ARB
 0x8B50

	)

1254 
	#GL_FLOAT_VEC3_ARB
 0x8B51

	)

1255 
	#GL_FLOAT_VEC4_ARB
 0x8B52

	)

1256 
	#GL_INT_VEC2_ARB
 0x8B53

	)

1257 
	#GL_INT_VEC3_ARB
 0x8B54

	)

1258 
	#GL_INT_VEC4_ARB
 0x8B55

	)

1259 
	#GL_BOOL_ARB
 0x8B56

	)

1260 
	#GL_BOOL_VEC2_ARB
 0x8B57

	)

1261 
	#GL_BOOL_VEC3_ARB
 0x8B58

	)

1262 
	#GL_BOOL_VEC4_ARB
 0x8B59

	)

1263 
	#GL_FLOAT_MAT2_ARB
 0x8B5A

	)

1264 
	#GL_FLOAT_MAT3_ARB
 0x8B5B

	)

1265 
	#GL_FLOAT_MAT4_ARB
 0x8B5C

	)

1266 
	#GL_SAMPLER_1D_ARB
 0x8B5D

	)

1267 
	#GL_SAMPLER_2D_ARB
 0x8B5E

	)

1268 
	#GL_SAMPLER_3D_ARB
 0x8B5F

	)

1269 
	#GL_SAMPLER_CUBE_ARB
 0x8B60

	)

1270 
	#GL_SAMPLER_1D_SHADOW_ARB
 0x8B61

	)

1271 
	#GL_SAMPLER_2D_SHADOW_ARB
 0x8B62

	)

1272 
	#GL_SAMPLER_2D_RECT_ARB
 0x8B63

	)

1273 
	#GL_SAMPLER_2D_RECT_SHADOW_ARB
 0x8B64

	)

1274 
	#GL_OBJECT_DELETE_STATUS_ARB
 0x8B80

	)

1275 
	#GL_OBJECT_COMPILE_STATUS_ARB
 0x8B81

	)

1276 
	#GL_OBJECT_LINK_STATUS_ARB
 0x8B82

	)

1277 
	#GL_OBJECT_VALIDATE_STATUS_ARB
 0x8B83

	)

1278 
	#GL_OBJECT_INFO_LOG_LENGTH_ARB
 0x8B84

	)

1279 
	#GL_OBJECT_ATTACHED_OBJECTS_ARB
 0x8B85

	)

1280 
	#GL_OBJECT_ACTIVE_UNIFORMS_ARB
 0x8B86

	)

1281 
	#GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB
 0x8B87

	)

1282 
	#GL_OBJECT_SHADER_SOURCE_LENGTH_ARB
 0x8B88

	)

1285 #i‚de‡
GL_ARB_vîãx_shadî


1286 
	#GL_VERTEX_SHADER_ARB
 0x8B31

	)

1287 
	#GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB
 0x8B4A

	)

1288 
	#GL_MAX_VARYING_FLOATS_ARB
 0x8B4B

	)

1289 
	#GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB
 0x8B4C

	)

1290 
	#GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB
 0x8B4D

	)

1291 
	#GL_OBJECT_ACTIVE_ATTRIBUTES_ARB
 0x8B89

	)

1292 
	#GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB
 0x8B8A

	)

1295 #i‚de‡
GL_ARB_‰agmít_shadî


1296 
	#GL_FRAGMENT_SHADER_ARB
 0x8B30

	)

1297 
	#GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB
 0x8B49

	)

1298 
	#GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB
 0x8B8B

	)

1301 #i‚de‡
GL_ARB_shadög_œnguage_100


1302 
	#GL_SHADING_LANGUAGE_VERSION_ARB
 0x8B8C

	)

1305 #i‚de‡
GL_ARB_ãxtuª_n⁄_powî_of_two


1308 #i‚de‡
GL_ARB_poöt_•rôe


1309 
	#GL_POINT_SPRITE_ARB
 0x8861

	)

1310 
	#GL_COORD_REPLACE_ARB
 0x8862

	)

1313 #i‚de‡
GL_ARB_‰agmít_¥ogøm_shadow


1316 #i‚de‡
GL_ARB_døw_buf„rs


1317 
	#GL_MAX_DRAW_BUFFERS_ARB
 0x8824

	)

1318 
	#GL_DRAW_BUFFER0_ARB
 0x8825

	)

1319 
	#GL_DRAW_BUFFER1_ARB
 0x8826

	)

1320 
	#GL_DRAW_BUFFER2_ARB
 0x8827

	)

1321 
	#GL_DRAW_BUFFER3_ARB
 0x8828

	)

1322 
	#GL_DRAW_BUFFER4_ARB
 0x8829

	)

1323 
	#GL_DRAW_BUFFER5_ARB
 0x882A

	)

1324 
	#GL_DRAW_BUFFER6_ARB
 0x882B

	)

1325 
	#GL_DRAW_BUFFER7_ARB
 0x882C

	)

1326 
	#GL_DRAW_BUFFER8_ARB
 0x882D

	)

1327 
	#GL_DRAW_BUFFER9_ARB
 0x882E

	)

1328 
	#GL_DRAW_BUFFER10_ARB
 0x882F

	)

1329 
	#GL_DRAW_BUFFER11_ARB
 0x8830

	)

1330 
	#GL_DRAW_BUFFER12_ARB
 0x8831

	)

1331 
	#GL_DRAW_BUFFER13_ARB
 0x8832

	)

1332 
	#GL_DRAW_BUFFER14_ARB
 0x8833

	)

1333 
	#GL_DRAW_BUFFER15_ARB
 0x8834

	)

1336 #i‚de‡
GL_ARB_ãxtuª_ª˘™gÀ


1337 
	#GL_TEXTURE_RECTANGLE_ARB
 0x84F5

	)

1338 
	#GL_TEXTURE_BINDING_RECTANGLE_ARB
 0x84F6

	)

1339 
	#GL_PROXY_TEXTURE_RECTANGLE_ARB
 0x84F7

	)

1340 
	#GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB
 0x84F8

	)

1343 #i‚de‡
GL_ARB_cﬁ‹_buf„r_Êﬂt


1344 
	#GL_RGBA_FLOAT_MODE_ARB
 0x8820

	)

1345 
	#GL_CLAMP_VERTEX_COLOR_ARB
 0x891A

	)

1346 
	#GL_CLAMP_FRAGMENT_COLOR_ARB
 0x891B

	)

1347 
	#GL_CLAMP_READ_COLOR_ARB
 0x891C

	)

1348 
	#GL_FIXED_ONLY_ARB
 0x891D

	)

1351 #i‚de‡
GL_ARB_hÆf_Êﬂt_pixñ


1352 
	#GL_HALF_FLOAT_ARB
 0x140B

	)

1355 #i‚de‡
GL_ARB_ãxtuª_Êﬂt


1356 
	#GL_TEXTURE_RED_TYPE_ARB
 0x8C10

	)

1357 
	#GL_TEXTURE_GREEN_TYPE_ARB
 0x8C11

	)

1358 
	#GL_TEXTURE_BLUE_TYPE_ARB
 0x8C12

	)

1359 
	#GL_TEXTURE_ALPHA_TYPE_ARB
 0x8C13

	)

1360 
	#GL_TEXTURE_LUMINANCE_TYPE_ARB
 0x8C14

	)

1361 
	#GL_TEXTURE_INTENSITY_TYPE_ARB
 0x8C15

	)

1362 
	#GL_TEXTURE_DEPTH_TYPE_ARB
 0x8C16

	)

1363 
	#GL_UNSIGNED_NORMALIZED_ARB
 0x8C17

	)

1364 
	#GL_RGBA32F_ARB
 0x8814

	)

1365 
	#GL_RGB32F_ARB
 0x8815

	)

1366 
	#GL_ALPHA32F_ARB
 0x8816

	)

1367 
	#GL_INTENSITY32F_ARB
 0x8817

	)

1368 
	#GL_LUMINANCE32F_ARB
 0x8818

	)

1369 
	#GL_LUMINANCE_ALPHA32F_ARB
 0x8819

	)

1370 
	#GL_RGBA16F_ARB
 0x881A

	)

1371 
	#GL_RGB16F_ARB
 0x881B

	)

1372 
	#GL_ALPHA16F_ARB
 0x881C

	)

1373 
	#GL_INTENSITY16F_ARB
 0x881D

	)

1374 
	#GL_LUMINANCE16F_ARB
 0x881E

	)

1375 
	#GL_LUMINANCE_ALPHA16F_ARB
 0x881F

	)

1378 #i‚de‡
GL_ARB_pixñ_buf„r_obje˘


1379 
	#GL_PIXEL_PACK_BUFFER_ARB
 0x88EB

	)

1380 
	#GL_PIXEL_UNPACK_BUFFER_ARB
 0x88EC

	)

1381 
	#GL_PIXEL_PACK_BUFFER_BINDING_ARB
 0x88ED

	)

1382 
	#GL_PIXEL_UNPACK_BUFFER_BINDING_ARB
 0x88EF

	)

1385 #i‚de‡
GL_ARB_dïth_buf„r_Êﬂt


1386 
	#GL_DEPTH_COMPONENT32F
 0x8CAC

	)

1387 
	#GL_DEPTH32F_STENCIL8
 0x8CAD

	)

1388 
	#GL_FLOAT_32_UNSIGNED_INT_24_8_REV
 0x8DAD

	)

1391 #i‚de‡
GL_ARB_døw_ö°™˚d


1394 #i‚de‡
GL_ARB_‰amebuf„r_obje˘


1395 
	#GL_INVALID_FRAMEBUFFER_OPERATION
 0x0506

	)

1396 
	#GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
 0x8210

	)

1397 
	#GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
 0x8211

	)

1398 
	#GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
 0x8212

	)

1399 
	#GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
 0x8213

	)

1400 
	#GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
 0x8214

	)

1401 
	#GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
 0x8215

	)

1402 
	#GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
 0x8216

	)

1403 
	#GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
 0x8217

	)

1404 
	#GL_FRAMEBUFFER_DEFAULT
 0x8218

	)

1405 
	#GL_FRAMEBUFFER_UNDEFINED
 0x8219

	)

1406 
	#GL_DEPTH_STENCIL_ATTACHMENT
 0x821A

	)

1407 
	#GL_MAX_RENDERBUFFER_SIZE
 0x84E8

	)

1408 
	#GL_DEPTH_STENCIL
 0x84F9

	)

1409 
	#GL_UNSIGNED_INT_24_8
 0x84FA

	)

1410 
	#GL_DEPTH24_STENCIL8
 0x88F0

	)

1411 
	#GL_TEXTURE_STENCIL_SIZE
 0x88F1

	)

1412 
	#GL_TEXTURE_RED_TYPE
 0x8C10

	)

1413 
	#GL_TEXTURE_GREEN_TYPE
 0x8C11

	)

1414 
	#GL_TEXTURE_BLUE_TYPE
 0x8C12

	)

1415 
	#GL_TEXTURE_ALPHA_TYPE
 0x8C13

	)

1416 
	#GL_TEXTURE_DEPTH_TYPE
 0x8C16

	)

1417 
	#GL_UNSIGNED_NORMALIZED
 0x8C17

	)

1418 
	#GL_FRAMEBUFFER_BINDING
 0x8CA6

	)

1419 
	#GL_DRAW_FRAMEBUFFER_BINDING
 
GL_FRAMEBUFFER_BINDING


	)

1420 
	#GL_RENDERBUFFER_BINDING
 0x8CA7

	)

1421 
	#GL_READ_FRAMEBUFFER
 0x8CA8

	)

1422 
	#GL_DRAW_FRAMEBUFFER
 0x8CA9

	)

1423 
	#GL_READ_FRAMEBUFFER_BINDING
 0x8CAA

	)

1424 
	#GL_RENDERBUFFER_SAMPLES
 0x8CAB

	)

1425 
	#GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
 0x8CD0

	)

1426 
	#GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
 0x8CD1

	)

1427 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
 0x8CD2

	)

1428 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
 0x8CD3

	)

1429 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
 0x8CD4

	)

1430 
	#GL_FRAMEBUFFER_COMPLETE
 0x8CD5

	)

1431 
	#GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
 0x8CD6

	)

1432 
	#GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
 0x8CD7

	)

1433 
	#GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
 0x8CDB

	)

1434 
	#GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
 0x8CDC

	)

1435 
	#GL_FRAMEBUFFER_UNSUPPORTED
 0x8CDD

	)

1436 
	#GL_MAX_COLOR_ATTACHMENTS
 0x8CDF

	)

1437 
	#GL_COLOR_ATTACHMENT0
 0x8CE0

	)

1438 
	#GL_COLOR_ATTACHMENT1
 0x8CE1

	)

1439 
	#GL_COLOR_ATTACHMENT2
 0x8CE2

	)

1440 
	#GL_COLOR_ATTACHMENT3
 0x8CE3

	)

1441 
	#GL_COLOR_ATTACHMENT4
 0x8CE4

	)

1442 
	#GL_COLOR_ATTACHMENT5
 0x8CE5

	)

1443 
	#GL_COLOR_ATTACHMENT6
 0x8CE6

	)

1444 
	#GL_COLOR_ATTACHMENT7
 0x8CE7

	)

1445 
	#GL_COLOR_ATTACHMENT8
 0x8CE8

	)

1446 
	#GL_COLOR_ATTACHMENT9
 0x8CE9

	)

1447 
	#GL_COLOR_ATTACHMENT10
 0x8CEA

	)

1448 
	#GL_COLOR_ATTACHMENT11
 0x8CEB

	)

1449 
	#GL_COLOR_ATTACHMENT12
 0x8CEC

	)

1450 
	#GL_COLOR_ATTACHMENT13
 0x8CED

	)

1451 
	#GL_COLOR_ATTACHMENT14
 0x8CEE

	)

1452 
	#GL_COLOR_ATTACHMENT15
 0x8CEF

	)

1453 
	#GL_DEPTH_ATTACHMENT
 0x8D00

	)

1454 
	#GL_STENCIL_ATTACHMENT
 0x8D20

	)

1455 
	#GL_FRAMEBUFFER
 0x8D40

	)

1456 
	#GL_RENDERBUFFER
 0x8D41

	)

1457 
	#GL_RENDERBUFFER_WIDTH
 0x8D42

	)

1458 
	#GL_RENDERBUFFER_HEIGHT
 0x8D43

	)

1459 
	#GL_RENDERBUFFER_INTERNAL_FORMAT
 0x8D44

	)

1460 
	#GL_STENCIL_INDEX1
 0x8D46

	)

1461 
	#GL_STENCIL_INDEX4
 0x8D47

	)

1462 
	#GL_STENCIL_INDEX8
 0x8D48

	)

1463 
	#GL_STENCIL_INDEX16
 0x8D49

	)

1464 
	#GL_RENDERBUFFER_RED_SIZE
 0x8D50

	)

1465 
	#GL_RENDERBUFFER_GREEN_SIZE
 0x8D51

	)

1466 
	#GL_RENDERBUFFER_BLUE_SIZE
 0x8D52

	)

1467 
	#GL_RENDERBUFFER_ALPHA_SIZE
 0x8D53

	)

1468 
	#GL_RENDERBUFFER_DEPTH_SIZE
 0x8D54

	)

1469 
	#GL_RENDERBUFFER_STENCIL_SIZE
 0x8D55

	)

1470 
	#GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
 0x8D56

	)

1471 
	#GL_MAX_SAMPLES
 0x8D57

	)

1474 #i‚de‡
GL_ARB_‰amebuf„r_obje˘_DEPRECATED


1475 
	#GL_INDEX
 0x8222

	)

1476 
	#GL_TEXTURE_LUMINANCE_TYPE
 0x8C14

	)

1477 
	#GL_TEXTURE_INTENSITY_TYPE
 0x8C15

	)

1480 #i‚de‡
GL_ARB_‰amebuf„r_sRGB


1481 
	#GL_FRAMEBUFFER_SRGB
 0x8DB9

	)

1484 #i‚de‡
GL_ARB_geomëry_shadî4


1485 
	#GL_LINES_ADJACENCY_ARB
 0x000A

	)

1486 
	#GL_LINE_STRIP_ADJACENCY_ARB
 0x000B

	)

1487 
	#GL_TRIANGLES_ADJACENCY_ARB
 0x000C

	)

1488 
	#GL_TRIANGLE_STRIP_ADJACENCY_ARB
 0x000D

	)

1489 
	#GL_PROGRAM_POINT_SIZE_ARB
 0x8642

	)

1490 
	#GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
 0x8C29

	)

1491 
	#GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
 0x8DA7

	)

1492 
	#GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
 0x8DA8

	)

1493 
	#GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
 0x8DA9

	)

1494 
	#GL_GEOMETRY_SHADER_ARB
 0x8DD9

	)

1495 
	#GL_GEOMETRY_VERTICES_OUT_ARB
 0x8DDA

	)

1496 
	#GL_GEOMETRY_INPUT_TYPE_ARB
 0x8DDB

	)

1497 
	#GL_GEOMETRY_OUTPUT_TYPE_ARB
 0x8DDC

	)

1498 
	#GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
 0x8DDD

	)

1499 
	#GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
 0x8DDE

	)

1500 
	#GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
 0x8DDF

	)

1501 
	#GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
 0x8DE0

	)

1502 
	#GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
 0x8DE1

	)

1507 #i‚de‡
GL_ARB_hÆf_Êﬂt_vîãx


1508 
	#GL_HALF_FLOAT
 0x140B

	)

1511 #i‚de‡
GL_ARB_ö°™˚d_¨øys


1512 
	#GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB
 0x88FE

	)

1515 #i‚de‡
GL_ARB_m≠_buf„r_ønge


1516 
	#GL_MAP_READ_BIT
 0x0001

	)

1517 
	#GL_MAP_WRITE_BIT
 0x0002

	)

1518 
	#GL_MAP_INVALIDATE_RANGE_BIT
 0x0004

	)

1519 
	#GL_MAP_INVALIDATE_BUFFER_BIT
 0x0008

	)

1520 
	#GL_MAP_FLUSH_EXPLICIT_BIT
 0x0010

	)

1521 
	#GL_MAP_UNSYNCHRONIZED_BIT
 0x0020

	)

1524 #i‚de‡
GL_ARB_ãxtuª_buf„r_obje˘


1525 
	#GL_TEXTURE_BUFFER_ARB
 0x8C2A

	)

1526 
	#GL_MAX_TEXTURE_BUFFER_SIZE_ARB
 0x8C2B

	)

1527 
	#GL_TEXTURE_BINDING_BUFFER_ARB
 0x8C2C

	)

1528 
	#GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB
 0x8C2D

	)

1529 
	#GL_TEXTURE_BUFFER_FORMAT_ARB
 0x8C2E

	)

1532 #i‚de‡
GL_ARB_ãxtuª_com¥essi⁄_rgtc


1533 
	#GL_COMPRESSED_RED_RGTC1
 0x8DBB

	)

1534 
	#GL_COMPRESSED_SIGNED_RED_RGTC1
 0x8DBC

	)

1535 
	#GL_COMPRESSED_RG_RGTC2
 0x8DBD

	)

1536 
	#GL_COMPRESSED_SIGNED_RG_RGTC2
 0x8DBE

	)

1539 #i‚de‡
GL_ARB_ãxtuª_rg


1540 
	#GL_RG
 0x8227

	)

1541 
	#GL_RG_INTEGER
 0x8228

	)

1542 
	#GL_R8
 0x8229

	)

1543 
	#GL_R16
 0x822A

	)

1544 
	#GL_RG8
 0x822B

	)

1545 
	#GL_RG16
 0x822C

	)

1546 
	#GL_R16F
 0x822D

	)

1547 
	#GL_R32F
 0x822E

	)

1548 
	#GL_RG16F
 0x822F

	)

1549 
	#GL_RG32F
 0x8230

	)

1550 
	#GL_R8I
 0x8231

	)

1551 
	#GL_R8UI
 0x8232

	)

1552 
	#GL_R16I
 0x8233

	)

1553 
	#GL_R16UI
 0x8234

	)

1554 
	#GL_R32I
 0x8235

	)

1555 
	#GL_R32UI
 0x8236

	)

1556 
	#GL_RG8I
 0x8237

	)

1557 
	#GL_RG8UI
 0x8238

	)

1558 
	#GL_RG16I
 0x8239

	)

1559 
	#GL_RG16UI
 0x823A

	)

1560 
	#GL_RG32I
 0x823B

	)

1561 
	#GL_RG32UI
 0x823C

	)

1564 #i‚de‡
GL_ARB_vîãx_¨øy_obje˘


1565 
	#GL_VERTEX_ARRAY_BINDING
 0x85B5

	)

1568 #i‚de‡
GL_ARB_unif‹m_buf„r_obje˘


1569 
	#GL_UNIFORM_BUFFER
 0x8A11

	)

1570 
	#GL_UNIFORM_BUFFER_BINDING
 0x8A28

	)

1571 
	#GL_UNIFORM_BUFFER_START
 0x8A29

	)

1572 
	#GL_UNIFORM_BUFFER_SIZE
 0x8A2A

	)

1573 
	#GL_MAX_VERTEX_UNIFORM_BLOCKS
 0x8A2B

	)

1574 
	#GL_MAX_GEOMETRY_UNIFORM_BLOCKS
 0x8A2C

	)

1575 
	#GL_MAX_FRAGMENT_UNIFORM_BLOCKS
 0x8A2D

	)

1576 
	#GL_MAX_COMBINED_UNIFORM_BLOCKS
 0x8A2E

	)

1577 
	#GL_MAX_UNIFORM_BUFFER_BINDINGS
 0x8A2F

	)

1578 
	#GL_MAX_UNIFORM_BLOCK_SIZE
 0x8A30

	)

1579 
	#GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
 0x8A31

	)

1580 
	#GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS
 0x8A32

	)

1581 
	#GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
 0x8A33

	)

1582 
	#GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
 0x8A34

	)

1583 
	#GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
 0x8A35

	)

1584 
	#GL_ACTIVE_UNIFORM_BLOCKS
 0x8A36

	)

1585 
	#GL_UNIFORM_TYPE
 0x8A37

	)

1586 
	#GL_UNIFORM_SIZE
 0x8A38

	)

1587 
	#GL_UNIFORM_NAME_LENGTH
 0x8A39

	)

1588 
	#GL_UNIFORM_BLOCK_INDEX
 0x8A3A

	)

1589 
	#GL_UNIFORM_OFFSET
 0x8A3B

	)

1590 
	#GL_UNIFORM_ARRAY_STRIDE
 0x8A3C

	)

1591 
	#GL_UNIFORM_MATRIX_STRIDE
 0x8A3D

	)

1592 
	#GL_UNIFORM_IS_ROW_MAJOR
 0x8A3E

	)

1593 
	#GL_UNIFORM_BLOCK_BINDING
 0x8A3F

	)

1594 
	#GL_UNIFORM_BLOCK_DATA_SIZE
 0x8A40

	)

1595 
	#GL_UNIFORM_BLOCK_NAME_LENGTH
 0x8A41

	)

1596 
	#GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
 0x8A42

	)

1597 
	#GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
 0x8A43

	)

1598 
	#GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
 0x8A44

	)

1599 
	#GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER
 0x8A45

	)

1600 
	#GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
 0x8A46

	)

1601 
	#GL_INVALID_INDEX
 0xFFFFFFFFu

	)

1604 #i‚de‡
GL_ARB_com∑tibûôy


1608 #i‚de‡
GL_ARB_c›y_buf„r


1609 
	#GL_COPY_READ_BUFFER
 0x8F36

	)

1610 
	#GL_COPY_WRITE_BUFFER
 0x8F37

	)

1613 #i‚de‡
GL_ARB_shadî_ãxtuª_lod


1616 #i‚de‡
GL_ARB_dïth_˛amp


1617 
	#GL_DEPTH_CLAMP
 0x864F

	)

1620 #i‚de‡
GL_ARB_døw_ñemíts_ba£_vîãx


1623 #i‚de‡
GL_ARB_‰agmít_co‹d_c⁄víti⁄s


1626 #i‚de‡
GL_ARB_¥ovokög_vîãx


1627 
	#GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION
 0x8E4C

	)

1628 
	#GL_FIRST_VERTEX_CONVENTION
 0x8E4D

	)

1629 
	#GL_LAST_VERTEX_CONVENTION
 0x8E4E

	)

1630 
	#GL_PROVOKING_VERTEX
 0x8E4F

	)

1633 #i‚de‡
GL_ARB_£amÀss_cube_m≠


1634 
	#GL_TEXTURE_CUBE_MAP_SEAMLESS
 0x884F

	)

1637 #i‚de‡
GL_ARB_sync


1638 
	#GL_MAX_SERVER_WAIT_TIMEOUT
 0x9111

	)

1639 
	#GL_OBJECT_TYPE
 0x9112

	)

1640 
	#GL_SYNC_CONDITION
 0x9113

	)

1641 
	#GL_SYNC_STATUS
 0x9114

	)

1642 
	#GL_SYNC_FLAGS
 0x9115

	)

1643 
	#GL_SYNC_FENCE
 0x9116

	)

1644 
	#GL_SYNC_GPU_COMMANDS_COMPLETE
 0x9117

	)

1645 
	#GL_UNSIGNALED
 0x9118

	)

1646 
	#GL_SIGNALED
 0x9119

	)

1647 
	#GL_ALREADY_SIGNALED
 0x911A

	)

1648 
	#GL_TIMEOUT_EXPIRED
 0x911B

	)

1649 
	#GL_CONDITION_SATISFIED
 0x911C

	)

1650 
	#GL_WAIT_FAILED
 0x911D

	)

1651 
	#GL_SYNC_FLUSH_COMMANDS_BIT
 0x00000001

	)

1652 
	#GL_TIMEOUT_IGNORED
 0xFFFFFFFFFFFFFFFFuŒ

	)

1655 #i‚de‡
GL_ARB_ãxtuª_mu…ißm∂e


1656 
	#GL_SAMPLE_POSITION
 0x8E50

	)

1657 
	#GL_SAMPLE_MASK
 0x8E51

	)

1658 
	#GL_SAMPLE_MASK_VALUE
 0x8E52

	)

1659 
	#GL_MAX_SAMPLE_MASK_WORDS
 0x8E59

	)

1660 
	#GL_TEXTURE_2D_MULTISAMPLE
 0x9100

	)

1661 
	#GL_PROXY_TEXTURE_2D_MULTISAMPLE
 0x9101

	)

1662 
	#GL_TEXTURE_2D_MULTISAMPLE_ARRAY
 0x9102

	)

1663 
	#GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY
 0x9103

	)

1664 
	#GL_TEXTURE_BINDING_2D_MULTISAMPLE
 0x9104

	)

1665 
	#GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY
 0x9105

	)

1666 
	#GL_TEXTURE_SAMPLES
 0x9106

	)

1667 
	#GL_TEXTURE_FIXED_SAMPLE_LOCATIONS
 0x9107

	)

1668 
	#GL_SAMPLER_2D_MULTISAMPLE
 0x9108

	)

1669 
	#GL_INT_SAMPLER_2D_MULTISAMPLE
 0x9109

	)

1670 
	#GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE
 0x910A

	)

1671 
	#GL_SAMPLER_2D_MULTISAMPLE_ARRAY
 0x910B

	)

1672 
	#GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
 0x910C

	)

1673 
	#GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
 0x910D

	)

1674 
	#GL_MAX_COLOR_TEXTURE_SAMPLES
 0x910E

	)

1675 
	#GL_MAX_DEPTH_TEXTURE_SAMPLES
 0x910F

	)

1676 
	#GL_MAX_INTEGER_SAMPLES
 0x9110

	)

1679 #i‚de‡
GL_ARB_vîãx_¨øy_bgø


1683 #i‚de‡
GL_ARB_døw_buf„rs_bÀnd


1686 #i‚de‡
GL_ARB_ßm∂e_shadög


1687 
	#GL_SAMPLE_SHADING
 0x8C36

	)

1688 
	#GL_MIN_SAMPLE_SHADING_VALUE
 0x8C37

	)

1691 #i‚de‡
GL_ARB_ãxtuª_cube_m≠_¨øy


1692 
	#GL_TEXTURE_CUBE_MAP_ARRAY
 0x9009

	)

1693 
	#GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
 0x900A

	)

1694 
	#GL_PROXY_TEXTURE_CUBE_MAP_ARRAY
 0x900B

	)

1695 
	#GL_SAMPLER_CUBE_MAP_ARRAY
 0x900C

	)

1696 
	#GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW
 0x900D

	)

1697 
	#GL_INT_SAMPLER_CUBE_MAP_ARRAY
 0x900E

	)

1698 
	#GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY
 0x900F

	)

1701 #i‚de‡
GL_ARB_ãxtuª_g©hî


1702 
	#GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
 0x8E5E

	)

1703 
	#GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
 0x8E5F

	)

1704 
	#GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS
 0x8F9F

	)

1707 #i‚de‡
GL_ARB_ãxtuª_quîy_lod


1710 #i‚de‡
GL_EXT_abgr


1711 
	#GL_ABGR_EXT
 0x8000

	)

1714 #i‚de‡
GL_EXT_bÀnd_cﬁ‹


1715 
	#GL_CONSTANT_COLOR_EXT
 0x8001

	)

1716 
	#GL_ONE_MINUS_CONSTANT_COLOR_EXT
 0x8002

	)

1717 
	#GL_CONSTANT_ALPHA_EXT
 0x8003

	)

1718 
	#GL_ONE_MINUS_CONSTANT_ALPHA_EXT
 0x8004

	)

1719 
	#GL_BLEND_COLOR_EXT
 0x8005

	)

1722 #i‚de‡
GL_EXT_pﬁyg⁄_off£t


1723 
	#GL_POLYGON_OFFSET_EXT
 0x8037

	)

1724 
	#GL_POLYGON_OFFSET_FACTOR_EXT
 0x8038

	)

1725 
	#GL_POLYGON_OFFSET_BIAS_EXT
 0x8039

	)

1728 #i‚de‡
GL_EXT_ãxtuª


1729 
	#GL_ALPHA4_EXT
 0x803B

	)

1730 
	#GL_ALPHA8_EXT
 0x803C

	)

1731 
	#GL_ALPHA12_EXT
 0x803D

	)

1732 
	#GL_ALPHA16_EXT
 0x803E

	)

1733 
	#GL_LUMINANCE4_EXT
 0x803F

	)

1734 
	#GL_LUMINANCE8_EXT
 0x8040

	)

1735 
	#GL_LUMINANCE12_EXT
 0x8041

	)

1736 
	#GL_LUMINANCE16_EXT
 0x8042

	)

1737 
	#GL_LUMINANCE4_ALPHA4_EXT
 0x8043

	)

1738 
	#GL_LUMINANCE6_ALPHA2_EXT
 0x8044

	)

1739 
	#GL_LUMINANCE8_ALPHA8_EXT
 0x8045

	)

1740 
	#GL_LUMINANCE12_ALPHA4_EXT
 0x8046

	)

1741 
	#GL_LUMINANCE12_ALPHA12_EXT
 0x8047

	)

1742 
	#GL_LUMINANCE16_ALPHA16_EXT
 0x8048

	)

1743 
	#GL_INTENSITY_EXT
 0x8049

	)

1744 
	#GL_INTENSITY4_EXT
 0x804A

	)

1745 
	#GL_INTENSITY8_EXT
 0x804B

	)

1746 
	#GL_INTENSITY12_EXT
 0x804C

	)

1747 
	#GL_INTENSITY16_EXT
 0x804D

	)

1748 
	#GL_RGB2_EXT
 0x804E

	)

1749 
	#GL_RGB4_EXT
 0x804F

	)

1750 
	#GL_RGB5_EXT
 0x8050

	)

1751 
	#GL_RGB8_EXT
 0x8051

	)

1752 
	#GL_RGB10_EXT
 0x8052

	)

1753 
	#GL_RGB12_EXT
 0x8053

	)

1754 
	#GL_RGB16_EXT
 0x8054

	)

1755 
	#GL_RGBA2_EXT
 0x8055

	)

1756 
	#GL_RGBA4_EXT
 0x8056

	)

1757 
	#GL_RGB5_A1_EXT
 0x8057

	)

1758 
	#GL_RGBA8_EXT
 0x8058

	)

1759 
	#GL_RGB10_A2_EXT
 0x8059

	)

1760 
	#GL_RGBA12_EXT
 0x805A

	)

1761 
	#GL_RGBA16_EXT
 0x805B

	)

1762 
	#GL_TEXTURE_RED_SIZE_EXT
 0x805C

	)

1763 
	#GL_TEXTURE_GREEN_SIZE_EXT
 0x805D

	)

1764 
	#GL_TEXTURE_BLUE_SIZE_EXT
 0x805E

	)

1765 
	#GL_TEXTURE_ALPHA_SIZE_EXT
 0x805F

	)

1766 
	#GL_TEXTURE_LUMINANCE_SIZE_EXT
 0x8060

	)

1767 
	#GL_TEXTURE_INTENSITY_SIZE_EXT
 0x8061

	)

1768 
	#GL_REPLACE_EXT
 0x8062

	)

1769 
	#GL_PROXY_TEXTURE_1D_EXT
 0x8063

	)

1770 
	#GL_PROXY_TEXTURE_2D_EXT
 0x8064

	)

1771 
	#GL_TEXTURE_TOO_LARGE_EXT
 0x8065

	)

1774 #i‚de‡
GL_EXT_ãxtuª3D


1775 
	#GL_PACK_SKIP_IMAGES_EXT
 0x806B

	)

1776 
	#GL_PACK_IMAGE_HEIGHT_EXT
 0x806C

	)

1777 
	#GL_UNPACK_SKIP_IMAGES_EXT
 0x806D

	)

1778 
	#GL_UNPACK_IMAGE_HEIGHT_EXT
 0x806E

	)

1779 
	#GL_TEXTURE_3D_EXT
 0x806F

	)

1780 
	#GL_PROXY_TEXTURE_3D_EXT
 0x8070

	)

1781 
	#GL_TEXTURE_DEPTH_EXT
 0x8071

	)

1782 
	#GL_TEXTURE_WRAP_R_EXT
 0x8072

	)

1783 
	#GL_MAX_3D_TEXTURE_SIZE_EXT
 0x8073

	)

1786 #i‚de‡
GL_SGIS_ãxtuª_fûãr4


1787 
	#GL_FILTER4_SGIS
 0x8146

	)

1788 
	#GL_TEXTURE_FILTER4_SIZE_SGIS
 0x8147

	)

1791 #i‚de‡
GL_EXT_subãxtuª


1794 #i‚de‡
GL_EXT_c›y_ãxtuª


1797 #i‚de‡
GL_EXT_hi°ogøm


1798 
	#GL_HISTOGRAM_EXT
 0x8024

	)

1799 
	#GL_PROXY_HISTOGRAM_EXT
 0x8025

	)

1800 
	#GL_HISTOGRAM_WIDTH_EXT
 0x8026

	)

1801 
	#GL_HISTOGRAM_FORMAT_EXT
 0x8027

	)

1802 
	#GL_HISTOGRAM_RED_SIZE_EXT
 0x8028

	)

1803 
	#GL_HISTOGRAM_GREEN_SIZE_EXT
 0x8029

	)

1804 
	#GL_HISTOGRAM_BLUE_SIZE_EXT
 0x802A

	)

1805 
	#GL_HISTOGRAM_ALPHA_SIZE_EXT
 0x802B

	)

1806 
	#GL_HISTOGRAM_LUMINANCE_SIZE_EXT
 0x802C

	)

1807 
	#GL_HISTOGRAM_SINK_EXT
 0x802D

	)

1808 
	#GL_MINMAX_EXT
 0x802E

	)

1809 
	#GL_MINMAX_FORMAT_EXT
 0x802F

	)

1810 
	#GL_MINMAX_SINK_EXT
 0x8030

	)

1811 
	#GL_TABLE_TOO_LARGE_EXT
 0x8031

	)

1814 #i‚de‡
GL_EXT_c⁄vﬁuti⁄


1815 
	#GL_CONVOLUTION_1D_EXT
 0x8010

	)

1816 
	#GL_CONVOLUTION_2D_EXT
 0x8011

	)

1817 
	#GL_SEPARABLE_2D_EXT
 0x8012

	)

1818 
	#GL_CONVOLUTION_BORDER_MODE_EXT
 0x8013

	)

1819 
	#GL_CONVOLUTION_FILTER_SCALE_EXT
 0x8014

	)

1820 
	#GL_CONVOLUTION_FILTER_BIAS_EXT
 0x8015

	)

1821 
	#GL_REDUCE_EXT
 0x8016

	)

1822 
	#GL_CONVOLUTION_FORMAT_EXT
 0x8017

	)

1823 
	#GL_CONVOLUTION_WIDTH_EXT
 0x8018

	)

1824 
	#GL_CONVOLUTION_HEIGHT_EXT
 0x8019

	)

1825 
	#GL_MAX_CONVOLUTION_WIDTH_EXT
 0x801A

	)

1826 
	#GL_MAX_CONVOLUTION_HEIGHT_EXT
 0x801B

	)

1827 
	#GL_POST_CONVOLUTION_RED_SCALE_EXT
 0x801C

	)

1828 
	#GL_POST_CONVOLUTION_GREEN_SCALE_EXT
 0x801D

	)

1829 
	#GL_POST_CONVOLUTION_BLUE_SCALE_EXT
 0x801E

	)

1830 
	#GL_POST_CONVOLUTION_ALPHA_SCALE_EXT
 0x801F

	)

1831 
	#GL_POST_CONVOLUTION_RED_BIAS_EXT
 0x8020

	)

1832 
	#GL_POST_CONVOLUTION_GREEN_BIAS_EXT
 0x8021

	)

1833 
	#GL_POST_CONVOLUTION_BLUE_BIAS_EXT
 0x8022

	)

1834 
	#GL_POST_CONVOLUTION_ALPHA_BIAS_EXT
 0x8023

	)

1837 #i‚de‡
GL_SGI_cﬁ‹_m©rix


1838 
	#GL_COLOR_MATRIX_SGI
 0x80B1

	)

1839 
	#GL_COLOR_MATRIX_STACK_DEPTH_SGI
 0x80B2

	)

1840 
	#GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI
 0x80B3

	)

1841 
	#GL_POST_COLOR_MATRIX_RED_SCALE_SGI
 0x80B4

	)

1842 
	#GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI
 0x80B5

	)

1843 
	#GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI
 0x80B6

	)

1844 
	#GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI
 0x80B7

	)

1845 
	#GL_POST_COLOR_MATRIX_RED_BIAS_SGI
 0x80B8

	)

1846 
	#GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI
 0x80B9

	)

1847 
	#GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI
 0x80BA

	)

1848 
	#GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI
 0x80BB

	)

1851 #i‚de‡
GL_SGI_cﬁ‹_èbÀ


1852 
	#GL_COLOR_TABLE_SGI
 0x80D0

	)

1853 
	#GL_POST_CONVOLUTION_COLOR_TABLE_SGI
 0x80D1

	)

1854 
	#GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI
 0x80D2

	)

1855 
	#GL_PROXY_COLOR_TABLE_SGI
 0x80D3

	)

1856 
	#GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI
 0x80D4

	)

1857 
	#GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI
 0x80D5

	)

1858 
	#GL_COLOR_TABLE_SCALE_SGI
 0x80D6

	)

1859 
	#GL_COLOR_TABLE_BIAS_SGI
 0x80D7

	)

1860 
	#GL_COLOR_TABLE_FORMAT_SGI
 0x80D8

	)

1861 
	#GL_COLOR_TABLE_WIDTH_SGI
 0x80D9

	)

1862 
	#GL_COLOR_TABLE_RED_SIZE_SGI
 0x80DA

	)

1863 
	#GL_COLOR_TABLE_GREEN_SIZE_SGI
 0x80DB

	)

1864 
	#GL_COLOR_TABLE_BLUE_SIZE_SGI
 0x80DC

	)

1865 
	#GL_COLOR_TABLE_ALPHA_SIZE_SGI
 0x80DD

	)

1866 
	#GL_COLOR_TABLE_LUMINANCE_SIZE_SGI
 0x80DE

	)

1867 
	#GL_COLOR_TABLE_INTENSITY_SIZE_SGI
 0x80DF

	)

1870 #i‚de‡
GL_SGIS_pixñ_ãxtuª


1871 
	#GL_PIXEL_TEXTURE_SGIS
 0x8353

	)

1872 
	#GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS
 0x8354

	)

1873 
	#GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS
 0x8355

	)

1874 
	#GL_PIXEL_GROUP_COLOR_SGIS
 0x8356

	)

1877 #i‚de‡
GL_SGIX_pixñ_ãxtuª


1878 
	#GL_PIXEL_TEX_GEN_SGIX
 0x8139

	)

1879 
	#GL_PIXEL_TEX_GEN_MODE_SGIX
 0x832B

	)

1882 #i‚de‡
GL_SGIS_ãxtuª4D


1883 
	#GL_PACK_SKIP_VOLUMES_SGIS
 0x8130

	)

1884 
	#GL_PACK_IMAGE_DEPTH_SGIS
 0x8131

	)

1885 
	#GL_UNPACK_SKIP_VOLUMES_SGIS
 0x8132

	)

1886 
	#GL_UNPACK_IMAGE_DEPTH_SGIS
 0x8133

	)

1887 
	#GL_TEXTURE_4D_SGIS
 0x8134

	)

1888 
	#GL_PROXY_TEXTURE_4D_SGIS
 0x8135

	)

1889 
	#GL_TEXTURE_4DSIZE_SGIS
 0x8136

	)

1890 
	#GL_TEXTURE_WRAP_Q_SGIS
 0x8137

	)

1891 
	#GL_MAX_4D_TEXTURE_SIZE_SGIS
 0x8138

	)

1892 
	#GL_TEXTURE_4D_BINDING_SGIS
 0x814F

	)

1895 #i‚de‡
GL_SGI_ãxtuª_cﬁ‹_èbÀ


1896 
	#GL_TEXTURE_COLOR_TABLE_SGI
 0x80BC

	)

1897 
	#GL_PROXY_TEXTURE_COLOR_TABLE_SGI
 0x80BD

	)

1900 #i‚de‡
GL_EXT_cmyka


1901 
	#GL_CMYK_EXT
 0x800C

	)

1902 
	#GL_CMYKA_EXT
 0x800D

	)

1903 
	#GL_PACK_CMYK_HINT_EXT
 0x800E

	)

1904 
	#GL_UNPACK_CMYK_HINT_EXT
 0x800F

	)

1907 #i‚de‡
GL_EXT_ãxtuª_obje˘


1908 
	#GL_TEXTURE_PRIORITY_EXT
 0x8066

	)

1909 
	#GL_TEXTURE_RESIDENT_EXT
 0x8067

	)

1910 
	#GL_TEXTURE_1D_BINDING_EXT
 0x8068

	)

1911 
	#GL_TEXTURE_2D_BINDING_EXT
 0x8069

	)

1912 
	#GL_TEXTURE_3D_BINDING_EXT
 0x806A

	)

1915 #i‚de‡
GL_SGIS_dëaû_ãxtuª


1916 
	#GL_DETAIL_TEXTURE_2D_SGIS
 0x8095

	)

1917 
	#GL_DETAIL_TEXTURE_2D_BINDING_SGIS
 0x8096

	)

1918 
	#GL_LINEAR_DETAIL_SGIS
 0x8097

	)

1919 
	#GL_LINEAR_DETAIL_ALPHA_SGIS
 0x8098

	)

1920 
	#GL_LINEAR_DETAIL_COLOR_SGIS
 0x8099

	)

1921 
	#GL_DETAIL_TEXTURE_LEVEL_SGIS
 0x809A

	)

1922 
	#GL_DETAIL_TEXTURE_MODE_SGIS
 0x809B

	)

1923 
	#GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS
 0x809C

	)

1926 #i‚de‡
GL_SGIS_sh¨≥n_ãxtuª


1927 
	#GL_LINEAR_SHARPEN_SGIS
 0x80AD

	)

1928 
	#GL_LINEAR_SHARPEN_ALPHA_SGIS
 0x80AE

	)

1929 
	#GL_LINEAR_SHARPEN_COLOR_SGIS
 0x80AF

	)

1930 
	#GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS
 0x80B0

	)

1933 #i‚de‡
GL_EXT_∑cked_pixñs


1934 
	#GL_UNSIGNED_BYTE_3_3_2_EXT
 0x8032

	)

1935 
	#GL_UNSIGNED_SHORT_4_4_4_4_EXT
 0x8033

	)

1936 
	#GL_UNSIGNED_SHORT_5_5_5_1_EXT
 0x8034

	)

1937 
	#GL_UNSIGNED_INT_8_8_8_8_EXT
 0x8035

	)

1938 
	#GL_UNSIGNED_INT_10_10_10_2_EXT
 0x8036

	)

1941 #i‚de‡
GL_SGIS_ãxtuª_lod


1942 
	#GL_TEXTURE_MIN_LOD_SGIS
 0x813A

	)

1943 
	#GL_TEXTURE_MAX_LOD_SGIS
 0x813B

	)

1944 
	#GL_TEXTURE_BASE_LEVEL_SGIS
 0x813C

	)

1945 
	#GL_TEXTURE_MAX_LEVEL_SGIS
 0x813D

	)

1948 #i‚de‡
GL_SGIS_mu…ißm∂e


1949 
	#GL_MULTISAMPLE_SGIS
 0x809D

	)

1950 
	#GL_SAMPLE_ALPHA_TO_MASK_SGIS
 0x809E

	)

1951 
	#GL_SAMPLE_ALPHA_TO_ONE_SGIS
 0x809F

	)

1952 
	#GL_SAMPLE_MASK_SGIS
 0x80A0

	)

1953 
	#GL_1PASS_SGIS
 0x80A1

	)

1954 
	#GL_2PASS_0_SGIS
 0x80A2

	)

1955 
	#GL_2PASS_1_SGIS
 0x80A3

	)

1956 
	#GL_4PASS_0_SGIS
 0x80A4

	)

1957 
	#GL_4PASS_1_SGIS
 0x80A5

	)

1958 
	#GL_4PASS_2_SGIS
 0x80A6

	)

1959 
	#GL_4PASS_3_SGIS
 0x80A7

	)

1960 
	#GL_SAMPLE_BUFFERS_SGIS
 0x80A8

	)

1961 
	#GL_SAMPLES_SGIS
 0x80A9

	)

1962 
	#GL_SAMPLE_MASK_VALUE_SGIS
 0x80AA

	)

1963 
	#GL_SAMPLE_MASK_INVERT_SGIS
 0x80AB

	)

1964 
	#GL_SAMPLE_PATTERN_SGIS
 0x80AC

	)

1967 #i‚de‡
GL_EXT_ªsˇÀ_n‹mÆ


1968 
	#GL_RESCALE_NORMAL_EXT
 0x803A

	)

1971 #i‚de‡
GL_EXT_vîãx_¨øy


1972 
	#GL_VERTEX_ARRAY_EXT
 0x8074

	)

1973 
	#GL_NORMAL_ARRAY_EXT
 0x8075

	)

1974 
	#GL_COLOR_ARRAY_EXT
 0x8076

	)

1975 
	#GL_INDEX_ARRAY_EXT
 0x8077

	)

1976 
	#GL_TEXTURE_COORD_ARRAY_EXT
 0x8078

	)

1977 
	#GL_EDGE_FLAG_ARRAY_EXT
 0x8079

	)

1978 
	#GL_VERTEX_ARRAY_SIZE_EXT
 0x807A

	)

1979 
	#GL_VERTEX_ARRAY_TYPE_EXT
 0x807B

	)

1980 
	#GL_VERTEX_ARRAY_STRIDE_EXT
 0x807C

	)

1981 
	#GL_VERTEX_ARRAY_COUNT_EXT
 0x807D

	)

1982 
	#GL_NORMAL_ARRAY_TYPE_EXT
 0x807E

	)

1983 
	#GL_NORMAL_ARRAY_STRIDE_EXT
 0x807F

	)

1984 
	#GL_NORMAL_ARRAY_COUNT_EXT
 0x8080

	)

1985 
	#GL_COLOR_ARRAY_SIZE_EXT
 0x8081

	)

1986 
	#GL_COLOR_ARRAY_TYPE_EXT
 0x8082

	)

1987 
	#GL_COLOR_ARRAY_STRIDE_EXT
 0x8083

	)

1988 
	#GL_COLOR_ARRAY_COUNT_EXT
 0x8084

	)

1989 
	#GL_INDEX_ARRAY_TYPE_EXT
 0x8085

	)

1990 
	#GL_INDEX_ARRAY_STRIDE_EXT
 0x8086

	)

1991 
	#GL_INDEX_ARRAY_COUNT_EXT
 0x8087

	)

1992 
	#GL_TEXTURE_COORD_ARRAY_SIZE_EXT
 0x8088

	)

1993 
	#GL_TEXTURE_COORD_ARRAY_TYPE_EXT
 0x8089

	)

1994 
	#GL_TEXTURE_COORD_ARRAY_STRIDE_EXT
 0x808A

	)

1995 
	#GL_TEXTURE_COORD_ARRAY_COUNT_EXT
 0x808B

	)

1996 
	#GL_EDGE_FLAG_ARRAY_STRIDE_EXT
 0x808C

	)

1997 
	#GL_EDGE_FLAG_ARRAY_COUNT_EXT
 0x808D

	)

1998 
	#GL_VERTEX_ARRAY_POINTER_EXT
 0x808E

	)

1999 
	#GL_NORMAL_ARRAY_POINTER_EXT
 0x808F

	)

2000 
	#GL_COLOR_ARRAY_POINTER_EXT
 0x8090

	)

2001 
	#GL_INDEX_ARRAY_POINTER_EXT
 0x8091

	)

2002 
	#GL_TEXTURE_COORD_ARRAY_POINTER_EXT
 0x8092

	)

2003 
	#GL_EDGE_FLAG_ARRAY_POINTER_EXT
 0x8093

	)

2006 #i‚de‡
GL_EXT_misc_©åibuã


2009 #i‚de‡
GL_SGIS_gíî©e_mùm≠


2010 
	#GL_GENERATE_MIPMAP_SGIS
 0x8191

	)

2011 
	#GL_GENERATE_MIPMAP_HINT_SGIS
 0x8192

	)

2014 #i‚de‡
GL_SGIX_˛ùm≠


2015 
	#GL_LINEAR_CLIPMAP_LINEAR_SGIX
 0x8170

	)

2016 
	#GL_TEXTURE_CLIPMAP_CENTER_SGIX
 0x8171

	)

2017 
	#GL_TEXTURE_CLIPMAP_FRAME_SGIX
 0x8172

	)

2018 
	#GL_TEXTURE_CLIPMAP_OFFSET_SGIX
 0x8173

	)

2019 
	#GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX
 0x8174

	)

2020 
	#GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX
 0x8175

	)

2021 
	#GL_TEXTURE_CLIPMAP_DEPTH_SGIX
 0x8176

	)

2022 
	#GL_MAX_CLIPMAP_DEPTH_SGIX
 0x8177

	)

2023 
	#GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX
 0x8178

	)

2024 
	#GL_NEAREST_CLIPMAP_NEAREST_SGIX
 0x844D

	)

2025 
	#GL_NEAREST_CLIPMAP_LINEAR_SGIX
 0x844E

	)

2026 
	#GL_LINEAR_CLIPMAP_NEAREST_SGIX
 0x844F

	)

2029 #i‚de‡
GL_SGIX_shadow


2030 
	#GL_TEXTURE_COMPARE_SGIX
 0x819A

	)

2031 
	#GL_TEXTURE_COMPARE_OPERATOR_SGIX
 0x819B

	)

2032 
	#GL_TEXTURE_LEQUAL_R_SGIX
 0x819C

	)

2033 
	#GL_TEXTURE_GEQUAL_R_SGIX
 0x819D

	)

2036 #i‚de‡
GL_SGIS_ãxtuª_edge_˛amp


2037 
	#GL_CLAMP_TO_EDGE_SGIS
 0x812F

	)

2040 #i‚de‡
GL_SGIS_ãxtuª_b‹dî_˛amp


2041 
	#GL_CLAMP_TO_BORDER_SGIS
 0x812D

	)

2044 #i‚de‡
GL_EXT_bÀnd_mömax


2045 
	#GL_FUNC_ADD_EXT
 0x8006

	)

2046 
	#GL_MIN_EXT
 0x8007

	)

2047 
	#GL_MAX_EXT
 0x8008

	)

2048 
	#GL_BLEND_EQUATION_EXT
 0x8009

	)

2051 #i‚de‡
GL_EXT_bÀnd_subåa˘


2052 
	#GL_FUNC_SUBTRACT_EXT
 0x800A

	)

2053 
	#GL_FUNC_REVERSE_SUBTRACT_EXT
 0x800B

	)

2056 #i‚de‡
GL_EXT_bÀnd_logic_›


2059 #i‚de‡
GL_SGIX_öãæa˚


2060 
	#GL_INTERLACE_SGIX
 0x8094

	)

2063 #i‚de‡
GL_SGIX_pixñ_tûes


2064 
	#GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX
 0x813E

	)

2065 
	#GL_PIXEL_TILE_CACHE_INCREMENT_SGIX
 0x813F

	)

2066 
	#GL_PIXEL_TILE_WIDTH_SGIX
 0x8140

	)

2067 
	#GL_PIXEL_TILE_HEIGHT_SGIX
 0x8141

	)

2068 
	#GL_PIXEL_TILE_GRID_WIDTH_SGIX
 0x8142

	)

2069 
	#GL_PIXEL_TILE_GRID_HEIGHT_SGIX
 0x8143

	)

2070 
	#GL_PIXEL_TILE_GRID_DEPTH_SGIX
 0x8144

	)

2071 
	#GL_PIXEL_TILE_CACHE_SIZE_SGIX
 0x8145

	)

2074 #i‚de‡
GL_SGIS_ãxtuª_£À˘


2075 
	#GL_DUAL_ALPHA4_SGIS
 0x8110

	)

2076 
	#GL_DUAL_ALPHA8_SGIS
 0x8111

	)

2077 
	#GL_DUAL_ALPHA12_SGIS
 0x8112

	)

2078 
	#GL_DUAL_ALPHA16_SGIS
 0x8113

	)

2079 
	#GL_DUAL_LUMINANCE4_SGIS
 0x8114

	)

2080 
	#GL_DUAL_LUMINANCE8_SGIS
 0x8115

	)

2081 
	#GL_DUAL_LUMINANCE12_SGIS
 0x8116

	)

2082 
	#GL_DUAL_LUMINANCE16_SGIS
 0x8117

	)

2083 
	#GL_DUAL_INTENSITY4_SGIS
 0x8118

	)

2084 
	#GL_DUAL_INTENSITY8_SGIS
 0x8119

	)

2085 
	#GL_DUAL_INTENSITY12_SGIS
 0x811A

	)

2086 
	#GL_DUAL_INTENSITY16_SGIS
 0x811B

	)

2087 
	#GL_DUAL_LUMINANCE_ALPHA4_SGIS
 0x811C

	)

2088 
	#GL_DUAL_LUMINANCE_ALPHA8_SGIS
 0x811D

	)

2089 
	#GL_QUAD_ALPHA4_SGIS
 0x811E

	)

2090 
	#GL_QUAD_ALPHA8_SGIS
 0x811F

	)

2091 
	#GL_QUAD_LUMINANCE4_SGIS
 0x8120

	)

2092 
	#GL_QUAD_LUMINANCE8_SGIS
 0x8121

	)

2093 
	#GL_QUAD_INTENSITY4_SGIS
 0x8122

	)

2094 
	#GL_QUAD_INTENSITY8_SGIS
 0x8123

	)

2095 
	#GL_DUAL_TEXTURE_SELECT_SGIS
 0x8124

	)

2096 
	#GL_QUAD_TEXTURE_SELECT_SGIS
 0x8125

	)

2099 #i‚de‡
GL_SGIX_•rôe


2100 
	#GL_SPRITE_SGIX
 0x8148

	)

2101 
	#GL_SPRITE_MODE_SGIX
 0x8149

	)

2102 
	#GL_SPRITE_AXIS_SGIX
 0x814A

	)

2103 
	#GL_SPRITE_TRANSLATION_SGIX
 0x814B

	)

2104 
	#GL_SPRITE_AXIAL_SGIX
 0x814C

	)

2105 
	#GL_SPRITE_OBJECT_ALIGNED_SGIX
 0x814D

	)

2106 
	#GL_SPRITE_EYE_ALIGNED_SGIX
 0x814E

	)

2109 #i‚de‡
GL_SGIX_ãxtuª_mu…i_buf„r


2110 
	#GL_TEXTURE_MULTI_BUFFER_HINT_SGIX
 0x812E

	)

2113 #i‚de‡
GL_EXT_poöt_∑ømëîs


2114 
	#GL_POINT_SIZE_MIN_EXT
 0x8126

	)

2115 
	#GL_POINT_SIZE_MAX_EXT
 0x8127

	)

2116 
	#GL_POINT_FADE_THRESHOLD_SIZE_EXT
 0x8128

	)

2117 
	#GL_DISTANCE_ATTENUATION_EXT
 0x8129

	)

2120 #i‚de‡
GL_SGIS_poöt_∑ømëîs


2121 
	#GL_POINT_SIZE_MIN_SGIS
 0x8126

	)

2122 
	#GL_POINT_SIZE_MAX_SGIS
 0x8127

	)

2123 
	#GL_POINT_FADE_THRESHOLD_SIZE_SGIS
 0x8128

	)

2124 
	#GL_DISTANCE_ATTENUATION_SGIS
 0x8129

	)

2127 #i‚de‡
GL_SGIX_ö°rumíts


2128 
	#GL_INSTRUMENT_BUFFER_POINTER_SGIX
 0x8180

	)

2129 
	#GL_INSTRUMENT_MEASUREMENTS_SGIX
 0x8181

	)

2132 #i‚de‡
GL_SGIX_ãxtuª_sˇÀ_büs


2133 
	#GL_POST_TEXTURE_FILTER_BIAS_SGIX
 0x8179

	)

2134 
	#GL_POST_TEXTURE_FILTER_SCALE_SGIX
 0x817A

	)

2135 
	#GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX
 0x817B

	)

2136 
	#GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX
 0x817C

	)

2139 #i‚de‡
GL_SGIX_‰amezoom


2140 
	#GL_FRAMEZOOM_SGIX
 0x818B

	)

2141 
	#GL_FRAMEZOOM_FACTOR_SGIX
 0x818C

	)

2142 
	#GL_MAX_FRAMEZOOM_FACTOR_SGIX
 0x818D

	)

2145 #i‚de‡
GL_SGIX_èg_ßm∂e_buf„r


2148 #i‚de‡
GL_FfdMaskSGIX


2149 
	#GL_TEXTURE_DEFORMATION_BIT_SGIX
 0x00000001

	)

2150 
	#GL_GEOMETRY_DEFORMATION_BIT_SGIX
 0x00000002

	)

2153 #i‚de‡
GL_SGIX_pﬁynomül_ffd


2154 
	#GL_GEOMETRY_DEFORMATION_SGIX
 0x8194

	)

2155 
	#GL_TEXTURE_DEFORMATION_SGIX
 0x8195

	)

2156 
	#GL_DEFORMATIONS_MASK_SGIX
 0x8196

	)

2157 
	#GL_MAX_DEFORMATION_ORDER_SGIX
 0x8197

	)

2160 #i‚de‡
GL_SGIX_ª„ªn˚_∂™e


2161 
	#GL_REFERENCE_PLANE_SGIX
 0x817D

	)

2162 
	#GL_REFERENCE_PLANE_EQUATION_SGIX
 0x817E

	)

2165 #i‚de‡
GL_SGIX_Êush_ø°î


2168 #i‚de‡
GL_SGIX_dïth_ãxtuª


2169 
	#GL_DEPTH_COMPONENT16_SGIX
 0x81A5

	)

2170 
	#GL_DEPTH_COMPONENT24_SGIX
 0x81A6

	)

2171 
	#GL_DEPTH_COMPONENT32_SGIX
 0x81A7

	)

2174 #i‚de‡
GL_SGIS_fog_fun˘i⁄


2175 
	#GL_FOG_FUNC_SGIS
 0x812A

	)

2176 
	#GL_FOG_FUNC_POINTS_SGIS
 0x812B

	)

2177 
	#GL_MAX_FOG_FUNC_POINTS_SGIS
 0x812C

	)

2180 #i‚de‡
GL_SGIX_fog_off£t


2181 
	#GL_FOG_OFFSET_SGIX
 0x8198

	)

2182 
	#GL_FOG_OFFSET_VALUE_SGIX
 0x8199

	)

2185 #i‚de‡
GL_HP_image_å™sf‹m


2186 
	#GL_IMAGE_SCALE_X_HP
 0x8155

	)

2187 
	#GL_IMAGE_SCALE_Y_HP
 0x8156

	)

2188 
	#GL_IMAGE_TRANSLATE_X_HP
 0x8157

	)

2189 
	#GL_IMAGE_TRANSLATE_Y_HP
 0x8158

	)

2190 
	#GL_IMAGE_ROTATE_ANGLE_HP
 0x8159

	)

2191 
	#GL_IMAGE_ROTATE_ORIGIN_X_HP
 0x815A

	)

2192 
	#GL_IMAGE_ROTATE_ORIGIN_Y_HP
 0x815B

	)

2193 
	#GL_IMAGE_MAG_FILTER_HP
 0x815C

	)

2194 
	#GL_IMAGE_MIN_FILTER_HP
 0x815D

	)

2195 
	#GL_IMAGE_CUBIC_WEIGHT_HP
 0x815E

	)

2196 
	#GL_CUBIC_HP
 0x815F

	)

2197 
	#GL_AVERAGE_HP
 0x8160

	)

2198 
	#GL_IMAGE_TRANSFORM_2D_HP
 0x8161

	)

2199 
	#GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
 0x8162

	)

2200 
	#GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
 0x8163

	)

2203 #i‚de‡
GL_HP_c⁄vﬁuti⁄_b‹dî_modes


2204 
	#GL_IGNORE_BORDER_HP
 0x8150

	)

2205 
	#GL_CONSTANT_BORDER_HP
 0x8151

	)

2206 
	#GL_REPLICATE_BORDER_HP
 0x8153

	)

2207 
	#GL_CONVOLUTION_BORDER_COLOR_HP
 0x8154

	)

2210 #i‚de‡
GL_INGR_∑Àâe_buf„r


2213 #i‚de‡
GL_SGIX_ãxtuª_add_ív


2214 
	#GL_TEXTURE_ENV_BIAS_SGIX
 0x80BE

	)

2217 #i‚de‡
GL_EXT_cﬁ‹_subèbÀ


2220 #i‚de‡
GL_PGI_vîãx_höts


2221 
	#GL_VERTEX_DATA_HINT_PGI
 0x1A22A

	)

2222 
	#GL_VERTEX_CONSISTENT_HINT_PGI
 0x1A22B

	)

2223 
	#GL_MATERIAL_SIDE_HINT_PGI
 0x1A22C

	)

2224 
	#GL_MAX_VERTEX_HINT_PGI
 0x1A22D

	)

2225 
	#GL_COLOR3_BIT_PGI
 0x00010000

	)

2226 
	#GL_COLOR4_BIT_PGI
 0x00020000

	)

2227 
	#GL_EDGEFLAG_BIT_PGI
 0x00040000

	)

2228 
	#GL_INDEX_BIT_PGI
 0x00080000

	)

2229 
	#GL_MAT_AMBIENT_BIT_PGI
 0x00100000

	)

2230 
	#GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI
 0x00200000

	)

2231 
	#GL_MAT_DIFFUSE_BIT_PGI
 0x00400000

	)

2232 
	#GL_MAT_EMISSION_BIT_PGI
 0x00800000

	)

2233 
	#GL_MAT_COLOR_INDEXES_BIT_PGI
 0x01000000

	)

2234 
	#GL_MAT_SHININESS_BIT_PGI
 0x02000000

	)

2235 
	#GL_MAT_SPECULAR_BIT_PGI
 0x04000000

	)

2236 
	#GL_NORMAL_BIT_PGI
 0x08000000

	)

2237 
	#GL_TEXCOORD1_BIT_PGI
 0x10000000

	)

2238 
	#GL_TEXCOORD2_BIT_PGI
 0x20000000

	)

2239 
	#GL_TEXCOORD3_BIT_PGI
 0x40000000

	)

2240 
	#GL_TEXCOORD4_BIT_PGI
 0x80000000

	)

2241 
	#GL_VERTEX23_BIT_PGI
 0x00000004

	)

2242 
	#GL_VERTEX4_BIT_PGI
 0x00000008

	)

2245 #i‚de‡
GL_PGI_misc_höts


2246 
	#GL_PREFER_DOUBLEBUFFER_HINT_PGI
 0x1A1F8

	)

2247 
	#GL_CONSERVE_MEMORY_HINT_PGI
 0x1A1FD

	)

2248 
	#GL_RECLAIM_MEMORY_HINT_PGI
 0x1A1FE

	)

2249 
	#GL_NATIVE_GRAPHICS_HANDLE_PGI
 0x1A202

	)

2250 
	#GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI
 0x1A203

	)

2251 
	#GL_NATIVE_GRAPHICS_END_HINT_PGI
 0x1A204

	)

2252 
	#GL_ALWAYS_FAST_HINT_PGI
 0x1A20C

	)

2253 
	#GL_ALWAYS_SOFT_HINT_PGI
 0x1A20D

	)

2254 
	#GL_ALLOW_DRAW_OBJ_HINT_PGI
 0x1A20E

	)

2255 
	#GL_ALLOW_DRAW_WIN_HINT_PGI
 0x1A20F

	)

2256 
	#GL_ALLOW_DRAW_FRG_HINT_PGI
 0x1A210

	)

2257 
	#GL_ALLOW_DRAW_MEM_HINT_PGI
 0x1A211

	)

2258 
	#GL_STRICT_DEPTHFUNC_HINT_PGI
 0x1A216

	)

2259 
	#GL_STRICT_LIGHTING_HINT_PGI
 0x1A217

	)

2260 
	#GL_STRICT_SCISSOR_HINT_PGI
 0x1A218

	)

2261 
	#GL_FULL_STIPPLE_HINT_PGI
 0x1A219

	)

2262 
	#GL_CLIP_NEAR_HINT_PGI
 0x1A220

	)

2263 
	#GL_CLIP_FAR_HINT_PGI
 0x1A221

	)

2264 
	#GL_WIDE_LINE_HINT_PGI
 0x1A222

	)

2265 
	#GL_BACK_NORMALS_HINT_PGI
 0x1A223

	)

2268 #i‚de‡
GL_EXT_∑Àâed_ãxtuª


2269 
	#GL_COLOR_INDEX1_EXT
 0x80E2

	)

2270 
	#GL_COLOR_INDEX2_EXT
 0x80E3

	)

2271 
	#GL_COLOR_INDEX4_EXT
 0x80E4

	)

2272 
	#GL_COLOR_INDEX8_EXT
 0x80E5

	)

2273 
	#GL_COLOR_INDEX12_EXT
 0x80E6

	)

2274 
	#GL_COLOR_INDEX16_EXT
 0x80E7

	)

2275 
	#GL_TEXTURE_INDEX_SIZE_EXT
 0x80ED

	)

2278 #i‚de‡
GL_EXT_˛ù_vﬁume_höt


2279 
	#GL_CLIP_VOLUME_CLIPPING_HINT_EXT
 0x80F0

	)

2282 #i‚de‡
GL_SGIX_li°_¥i‹ôy


2283 
	#GL_LIST_PRIORITY_SGIX
 0x8182

	)

2286 #i‚de‡
GL_SGIX_ú_ö°rumít1


2287 
	#GL_IR_INSTRUMENT1_SGIX
 0x817F

	)

2290 #i‚de‡
GL_SGIX_ˇŒigøphic_‰agmít


2291 
	#GL_CALLIGRAPHIC_FRAGMENT_SGIX
 0x8183

	)

2294 #i‚de‡
GL_SGIX_ãxtuª_lod_büs


2295 
	#GL_TEXTURE_LOD_BIAS_S_SGIX
 0x818E

	)

2296 
	#GL_TEXTURE_LOD_BIAS_T_SGIX
 0x818F

	)

2297 
	#GL_TEXTURE_LOD_BIAS_R_SGIX
 0x8190

	)

2300 #i‚de‡
GL_SGIX_shadow_ambõ¡


2301 
	#GL_SHADOW_AMBIENT_SGIX
 0x80BF

	)

2304 #i‚de‡
GL_EXT_ödex_ãxtuª


2307 #i‚de‡
GL_EXT_ödex_m©îül


2308 
	#GL_INDEX_MATERIAL_EXT
 0x81B8

	)

2309 
	#GL_INDEX_MATERIAL_PARAMETER_EXT
 0x81B9

	)

2310 
	#GL_INDEX_MATERIAL_FACE_EXT
 0x81BA

	)

2313 #i‚de‡
GL_EXT_ödex_func


2314 
	#GL_INDEX_TEST_EXT
 0x81B5

	)

2315 
	#GL_INDEX_TEST_FUNC_EXT
 0x81B6

	)

2316 
	#GL_INDEX_TEST_REF_EXT
 0x81B7

	)

2319 #i‚de‡
GL_EXT_ödex_¨øy_f‹m©s


2320 
	#GL_IUI_V2F_EXT
 0x81AD

	)

2321 
	#GL_IUI_V3F_EXT
 0x81AE

	)

2322 
	#GL_IUI_N3F_V2F_EXT
 0x81AF

	)

2323 
	#GL_IUI_N3F_V3F_EXT
 0x81B0

	)

2324 
	#GL_T2F_IUI_V2F_EXT
 0x81B1

	)

2325 
	#GL_T2F_IUI_V3F_EXT
 0x81B2

	)

2326 
	#GL_T2F_IUI_N3F_V2F_EXT
 0x81B3

	)

2327 
	#GL_T2F_IUI_N3F_V3F_EXT
 0x81B4

	)

2330 #i‚de‡
GL_EXT_compûed_vîãx_¨øy


2331 
	#GL_ARRAY_ELEMENT_LOCK_FIRST_EXT
 0x81A8

	)

2332 
	#GL_ARRAY_ELEMENT_LOCK_COUNT_EXT
 0x81A9

	)

2335 #i‚de‡
GL_EXT_cuŒ_vîãx


2336 
	#GL_CULL_VERTEX_EXT
 0x81AA

	)

2337 
	#GL_CULL_VERTEX_EYE_POSITION_EXT
 0x81AB

	)

2338 
	#GL_CULL_VERTEX_OBJECT_POSITION_EXT
 0x81AC

	)

2341 #i‚de‡
GL_SGIX_y¸cb


2342 
	#GL_YCRCB_422_SGIX
 0x81BB

	)

2343 
	#GL_YCRCB_444_SGIX
 0x81BC

	)

2346 #i‚de‡
GL_SGIX_‰agmít_lightög


2347 
	#GL_FRAGMENT_LIGHTING_SGIX
 0x8400

	)

2348 
	#GL_FRAGMENT_COLOR_MATERIAL_SGIX
 0x8401

	)

2349 
	#GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX
 0x8402

	)

2350 
	#GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX
 0x8403

	)

2351 
	#GL_MAX_FRAGMENT_LIGHTS_SGIX
 0x8404

	)

2352 
	#GL_MAX_ACTIVE_LIGHTS_SGIX
 0x8405

	)

2353 
	#GL_CURRENT_RASTER_NORMAL_SGIX
 0x8406

	)

2354 
	#GL_LIGHT_ENV_MODE_SGIX
 0x8407

	)

2355 
	#GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX
 0x8408

	)

2356 
	#GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX
 0x8409

	)

2357 
	#GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX
 0x840A

	)

2358 
	#GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX
 0x840B

	)

2359 
	#GL_FRAGMENT_LIGHT0_SGIX
 0x840C

	)

2360 
	#GL_FRAGMENT_LIGHT1_SGIX
 0x840D

	)

2361 
	#GL_FRAGMENT_LIGHT2_SGIX
 0x840E

	)

2362 
	#GL_FRAGMENT_LIGHT3_SGIX
 0x840F

	)

2363 
	#GL_FRAGMENT_LIGHT4_SGIX
 0x8410

	)

2364 
	#GL_FRAGMENT_LIGHT5_SGIX
 0x8411

	)

2365 
	#GL_FRAGMENT_LIGHT6_SGIX
 0x8412

	)

2366 
	#GL_FRAGMENT_LIGHT7_SGIX
 0x8413

	)

2369 #i‚de‡
GL_IBM_ø°îpos_˛ù


2370 
	#GL_RASTER_POSITION_UNCLIPPED_IBM
 0x19262

	)

2373 #i‚de‡
GL_HP_ãxtuª_lightög


2374 
	#GL_TEXTURE_LIGHTING_MODE_HP
 0x8167

	)

2375 
	#GL_TEXTURE_POST_SPECULAR_HP
 0x8168

	)

2376 
	#GL_TEXTURE_PRE_SPECULAR_HP
 0x8169

	)

2379 #i‚de‡
GL_EXT_døw_ønge_ñemíts


2380 
	#GL_MAX_ELEMENTS_VERTICES_EXT
 0x80E8

	)

2381 
	#GL_MAX_ELEMENTS_INDICES_EXT
 0x80E9

	)

2384 #i‚de‡
GL_WIN_ph⁄g_shadög


2385 
	#GL_PHONG_WIN
 0x80EA

	)

2386 
	#GL_PHONG_HINT_WIN
 0x80EB

	)

2389 #i‚de‡
GL_WIN_•ecuœr_fog


2390 
	#GL_FOG_SPECULAR_TEXTURE_WIN
 0x80EC

	)

2393 #i‚de‡
GL_EXT_light_ãxtuª


2394 
	#GL_FRAGMENT_MATERIAL_EXT
 0x8349

	)

2395 
	#GL_FRAGMENT_NORMAL_EXT
 0x834A

	)

2396 
	#GL_FRAGMENT_COLOR_EXT
 0x834C

	)

2397 
	#GL_ATTENUATION_EXT
 0x834D

	)

2398 
	#GL_SHADOW_ATTENUATION_EXT
 0x834E

	)

2399 
	#GL_TEXTURE_APPLICATION_MODE_EXT
 0x834F

	)

2400 
	#GL_TEXTURE_LIGHT_EXT
 0x8350

	)

2401 
	#GL_TEXTURE_MATERIAL_FACE_EXT
 0x8351

	)

2402 
	#GL_TEXTURE_MATERIAL_PARAMETER_EXT
 0x8352

	)

2406 #i‚de‡
GL_SGIX_bÀnd_Æpha_mömax


2407 
	#GL_ALPHA_MIN_SGIX
 0x8320

	)

2408 
	#GL_ALPHA_MAX_SGIX
 0x8321

	)

2411 #i‚de‡
GL_SGIX_im∑˘_pixñ_ãxtuª


2412 
	#GL_PIXEL_TEX_GEN_Q_CEILING_SGIX
 0x8184

	)

2413 
	#GL_PIXEL_TEX_GEN_Q_ROUND_SGIX
 0x8185

	)

2414 
	#GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX
 0x8186

	)

2415 
	#GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX
 0x8187

	)

2416 
	#GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX
 0x8188

	)

2417 
	#GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX
 0x8189

	)

2418 
	#GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX
 0x818A

	)

2421 #i‚de‡
GL_EXT_bgø


2422 
	#GL_BGR_EXT
 0x80E0

	)

2423 
	#GL_BGRA_EXT
 0x80E1

	)

2426 #i‚de‡
GL_SGIX_async


2427 
	#GL_ASYNC_MARKER_SGIX
 0x8329

	)

2430 #i‚de‡
GL_SGIX_async_pixñ


2431 
	#GL_ASYNC_TEX_IMAGE_SGIX
 0x835C

	)

2432 
	#GL_ASYNC_DRAW_PIXELS_SGIX
 0x835D

	)

2433 
	#GL_ASYNC_READ_PIXELS_SGIX
 0x835E

	)

2434 
	#GL_MAX_ASYNC_TEX_IMAGE_SGIX
 0x835F

	)

2435 
	#GL_MAX_ASYNC_DRAW_PIXELS_SGIX
 0x8360

	)

2436 
	#GL_MAX_ASYNC_READ_PIXELS_SGIX
 0x8361

	)

2439 #i‚de‡
GL_SGIX_async_hi°ogøm


2440 
	#GL_ASYNC_HISTOGRAM_SGIX
 0x832C

	)

2441 
	#GL_MAX_ASYNC_HISTOGRAM_SGIX
 0x832D

	)

2444 #i‚de‡
GL_INTEL_ãxtuª_sciss‹


2447 #i‚de‡
GL_INTEL_∑øŒñ_¨øys


2448 
	#GL_PARALLEL_ARRAYS_INTEL
 0x83F4

	)

2449 
	#GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL
 0x83F5

	)

2450 
	#GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL
 0x83F6

	)

2451 
	#GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL
 0x83F7

	)

2452 
	#GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL
 0x83F8

	)

2455 #i‚de‡
GL_HP_oc˛usi⁄_ã°


2456 
	#GL_OCCLUSION_TEST_HP
 0x8165

	)

2457 
	#GL_OCCLUSION_TEST_RESULT_HP
 0x8166

	)

2460 #i‚de‡
GL_EXT_pixñ_å™sf‹m


2461 
	#GL_PIXEL_TRANSFORM_2D_EXT
 0x8330

	)

2462 
	#GL_PIXEL_MAG_FILTER_EXT
 0x8331

	)

2463 
	#GL_PIXEL_MIN_FILTER_EXT
 0x8332

	)

2464 
	#GL_PIXEL_CUBIC_WEIGHT_EXT
 0x8333

	)

2465 
	#GL_CUBIC_EXT
 0x8334

	)

2466 
	#GL_AVERAGE_EXT
 0x8335

	)

2467 
	#GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
 0x8336

	)

2468 
	#GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
 0x8337

	)

2469 
	#GL_PIXEL_TRANSFORM_2D_MATRIX_EXT
 0x8338

	)

2472 #i‚de‡
GL_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ


2475 #i‚de‡
GL_EXT_sh¨ed_ãxtuª_∑Àâe


2476 
	#GL_SHARED_TEXTURE_PALETTE_EXT
 0x81FB

	)

2479 #i‚de‡
GL_EXT_£∑øã_•ecuœr_cﬁ‹


2480 
	#GL_LIGHT_MODEL_COLOR_CONTROL_EXT
 0x81F8

	)

2481 
	#GL_SINGLE_COLOR_EXT
 0x81F9

	)

2482 
	#GL_SEPARATE_SPECULAR_COLOR_EXT
 0x81FA

	)

2485 #i‚de‡
GL_EXT_£c⁄d¨y_cﬁ‹


2486 
	#GL_COLOR_SUM_EXT
 0x8458

	)

2487 
	#GL_CURRENT_SECONDARY_COLOR_EXT
 0x8459

	)

2488 
	#GL_SECONDARY_COLOR_ARRAY_SIZE_EXT
 0x845A

	)

2489 
	#GL_SECONDARY_COLOR_ARRAY_TYPE_EXT
 0x845B

	)

2490 
	#GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT
 0x845C

	)

2491 
	#GL_SECONDARY_COLOR_ARRAY_POINTER_EXT
 0x845D

	)

2492 
	#GL_SECONDARY_COLOR_ARRAY_EXT
 0x845E

	)

2495 #i‚de‡
GL_EXT_ãxtuª_≥πurb_n‹mÆ


2496 
	#GL_PERTURB_EXT
 0x85AE

	)

2497 
	#GL_TEXTURE_NORMAL_EXT
 0x85AF

	)

2500 #i‚de‡
GL_EXT_mu…i_døw_¨øys


2503 #i‚de‡
GL_EXT_fog_co‹d


2504 
	#GL_FOG_COORDINATE_SOURCE_EXT
 0x8450

	)

2505 
	#GL_FOG_COORDINATE_EXT
 0x8451

	)

2506 
	#GL_FRAGMENT_DEPTH_EXT
 0x8452

	)

2507 
	#GL_CURRENT_FOG_COORDINATE_EXT
 0x8453

	)

2508 
	#GL_FOG_COORDINATE_ARRAY_TYPE_EXT
 0x8454

	)

2509 
	#GL_FOG_COORDINATE_ARRAY_STRIDE_EXT
 0x8455

	)

2510 
	#GL_FOG_COORDINATE_ARRAY_POINTER_EXT
 0x8456

	)

2511 
	#GL_FOG_COORDINATE_ARRAY_EXT
 0x8457

	)

2514 #i‚de‡
GL_REND_s¸ìn_co‹dö©es


2515 
	#GL_SCREEN_COORDINATES_REND
 0x8490

	)

2516 
	#GL_INVERTED_SCREEN_W_REND
 0x8491

	)

2519 #i‚de‡
GL_EXT_co‹dö©e_‰ame


2520 
	#GL_TANGENT_ARRAY_EXT
 0x8439

	)

2521 
	#GL_BINORMAL_ARRAY_EXT
 0x843A

	)

2522 
	#GL_CURRENT_TANGENT_EXT
 0x843B

	)

2523 
	#GL_CURRENT_BINORMAL_EXT
 0x843C

	)

2524 
	#GL_TANGENT_ARRAY_TYPE_EXT
 0x843E

	)

2525 
	#GL_TANGENT_ARRAY_STRIDE_EXT
 0x843F

	)

2526 
	#GL_BINORMAL_ARRAY_TYPE_EXT
 0x8440

	)

2527 
	#GL_BINORMAL_ARRAY_STRIDE_EXT
 0x8441

	)

2528 
	#GL_TANGENT_ARRAY_POINTER_EXT
 0x8442

	)

2529 
	#GL_BINORMAL_ARRAY_POINTER_EXT
 0x8443

	)

2530 
	#GL_MAP1_TANGENT_EXT
 0x8444

	)

2531 
	#GL_MAP2_TANGENT_EXT
 0x8445

	)

2532 
	#GL_MAP1_BINORMAL_EXT
 0x8446

	)

2533 
	#GL_MAP2_BINORMAL_EXT
 0x8447

	)

2536 #i‚de‡
GL_EXT_ãxtuª_ív_comböe


2537 
	#GL_COMBINE_EXT
 0x8570

	)

2538 
	#GL_COMBINE_RGB_EXT
 0x8571

	)

2539 
	#GL_COMBINE_ALPHA_EXT
 0x8572

	)

2540 
	#GL_RGB_SCALE_EXT
 0x8573

	)

2541 
	#GL_ADD_SIGNED_EXT
 0x8574

	)

2542 
	#GL_INTERPOLATE_EXT
 0x8575

	)

2543 
	#GL_CONSTANT_EXT
 0x8576

	)

2544 
	#GL_PRIMARY_COLOR_EXT
 0x8577

	)

2545 
	#GL_PREVIOUS_EXT
 0x8578

	)

2546 
	#GL_SOURCE0_RGB_EXT
 0x8580

	)

2547 
	#GL_SOURCE1_RGB_EXT
 0x8581

	)

2548 
	#GL_SOURCE2_RGB_EXT
 0x8582

	)

2549 
	#GL_SOURCE0_ALPHA_EXT
 0x8588

	)

2550 
	#GL_SOURCE1_ALPHA_EXT
 0x8589

	)

2551 
	#GL_SOURCE2_ALPHA_EXT
 0x858A

	)

2552 
	#GL_OPERAND0_RGB_EXT
 0x8590

	)

2553 
	#GL_OPERAND1_RGB_EXT
 0x8591

	)

2554 
	#GL_OPERAND2_RGB_EXT
 0x8592

	)

2555 
	#GL_OPERAND0_ALPHA_EXT
 0x8598

	)

2556 
	#GL_OPERAND1_ALPHA_EXT
 0x8599

	)

2557 
	#GL_OPERAND2_ALPHA_EXT
 0x859A

	)

2560 #i‚de‡
GL_APPLE_•ecuœr_ve˘‹


2561 
	#GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE
 0x85B0

	)

2564 #i‚de‡
GL_APPLE_å™sf‹m_höt


2565 
	#GL_TRANSFORM_HINT_APPLE
 0x85B1

	)

2568 #i‚de‡
GL_SGIX_fog_sˇÀ


2569 
	#GL_FOG_SCALE_SGIX
 0x81FC

	)

2570 
	#GL_FOG_SCALE_VALUE_SGIX
 0x81FD

	)

2573 #i‚de‡
GL_SUNX_c⁄°™t_d©a


2574 
	#GL_UNPACK_CONSTANT_DATA_SUNX
 0x81D5

	)

2575 
	#GL_TEXTURE_CONSTANT_DATA_SUNX
 0x81D6

	)

2578 #i‚de‡
GL_SUN_globÆ_Æpha


2579 
	#GL_GLOBAL_ALPHA_SUN
 0x81D9

	)

2580 
	#GL_GLOBAL_ALPHA_FACTOR_SUN
 0x81DA

	)

2583 #i‚de‡
GL_SUN_åüngÀ_li°


2584 
	#GL_RESTART_SUN
 0x0001

	)

2585 
	#GL_REPLACE_MIDDLE_SUN
 0x0002

	)

2586 
	#GL_REPLACE_OLDEST_SUN
 0x0003

	)

2587 
	#GL_TRIANGLE_LIST_SUN
 0x81D7

	)

2588 
	#GL_REPLACEMENT_CODE_SUN
 0x81D8

	)

2589 
	#GL_REPLACEMENT_CODE_ARRAY_SUN
 0x85C0

	)

2590 
	#GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN
 0x85C1

	)

2591 
	#GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN
 0x85C2

	)

2592 
	#GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN
 0x85C3

	)

2593 
	#GL_R1UI_V3F_SUN
 0x85C4

	)

2594 
	#GL_R1UI_C4UB_V3F_SUN
 0x85C5

	)

2595 
	#GL_R1UI_C3F_V3F_SUN
 0x85C6

	)

2596 
	#GL_R1UI_N3F_V3F_SUN
 0x85C7

	)

2597 
	#GL_R1UI_C4F_N3F_V3F_SUN
 0x85C8

	)

2598 
	#GL_R1UI_T2F_V3F_SUN
 0x85C9

	)

2599 
	#GL_R1UI_T2F_N3F_V3F_SUN
 0x85CA

	)

2600 
	#GL_R1UI_T2F_C4F_N3F_V3F_SUN
 0x85CB

	)

2603 #i‚de‡
GL_SUN_vîãx


2606 #i‚de‡
GL_EXT_bÀnd_func_£∑øã


2607 
	#GL_BLEND_DST_RGB_EXT
 0x80C8

	)

2608 
	#GL_BLEND_SRC_RGB_EXT
 0x80C9

	)

2609 
	#GL_BLEND_DST_ALPHA_EXT
 0x80CA

	)

2610 
	#GL_BLEND_SRC_ALPHA_EXT
 0x80CB

	)

2613 #i‚de‡
GL_INGR_cﬁ‹_˛amp


2614 
	#GL_RED_MIN_CLAMP_INGR
 0x8560

	)

2615 
	#GL_GREEN_MIN_CLAMP_INGR
 0x8561

	)

2616 
	#GL_BLUE_MIN_CLAMP_INGR
 0x8562

	)

2617 
	#GL_ALPHA_MIN_CLAMP_INGR
 0x8563

	)

2618 
	#GL_RED_MAX_CLAMP_INGR
 0x8564

	)

2619 
	#GL_GREEN_MAX_CLAMP_INGR
 0x8565

	)

2620 
	#GL_BLUE_MAX_CLAMP_INGR
 0x8566

	)

2621 
	#GL_ALPHA_MAX_CLAMP_INGR
 0x8567

	)

2624 #i‚de‡
GL_INGR_öãæa˚_ªad


2625 
	#GL_INTERLACE_READ_INGR
 0x8568

	)

2628 #i‚de‡
GL_EXT_°ícû_wøp


2629 
	#GL_INCR_WRAP_EXT
 0x8507

	)

2630 
	#GL_DECR_WRAP_EXT
 0x8508

	)

2633 #i‚de‡
GL_EXT_422_pixñs


2634 
	#GL_422_EXT
 0x80CC

	)

2635 
	#GL_422_REV_EXT
 0x80CD

	)

2636 
	#GL_422_AVERAGE_EXT
 0x80CE

	)

2637 
	#GL_422_REV_AVERAGE_EXT
 0x80CF

	)

2640 #i‚de‡
GL_NV_ãxgí_ªÊe˘i⁄


2641 
	#GL_NORMAL_MAP_NV
 0x8511

	)

2642 
	#GL_REFLECTION_MAP_NV
 0x8512

	)

2645 #i‚de‡
GL_EXT_ãxtuª_cube_m≠


2646 
	#GL_NORMAL_MAP_EXT
 0x8511

	)

2647 
	#GL_REFLECTION_MAP_EXT
 0x8512

	)

2648 
	#GL_TEXTURE_CUBE_MAP_EXT
 0x8513

	)

2649 
	#GL_TEXTURE_BINDING_CUBE_MAP_EXT
 0x8514

	)

2650 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT
 0x8515

	)

2651 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT
 0x8516

	)

2652 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT
 0x8517

	)

2653 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT
 0x8518

	)

2654 
	#GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT
 0x8519

	)

2655 
	#GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT
 0x851A

	)

2656 
	#GL_PROXY_TEXTURE_CUBE_MAP_EXT
 0x851B

	)

2657 
	#GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT
 0x851C

	)

2660 #i‚de‡
GL_SUN_c⁄vﬁuti⁄_b‹dî_modes


2661 
	#GL_WRAP_BORDER_SUN
 0x81D4

	)

2664 #i‚de‡
GL_EXT_ãxtuª_ív_add


2667 #i‚de‡
GL_EXT_ãxtuª_lod_büs


2668 
	#GL_MAX_TEXTURE_LOD_BIAS_EXT
 0x84FD

	)

2669 
	#GL_TEXTURE_FILTER_CONTROL_EXT
 0x8500

	)

2670 
	#GL_TEXTURE_LOD_BIAS_EXT
 0x8501

	)

2673 #i‚de‡
GL_EXT_ãxtuª_fûãr_™isŸr›ic


2674 
	#GL_TEXTURE_MAX_ANISOTROPY_EXT
 0x84FE

	)

2675 
	#GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
 0x84FF

	)

2678 #i‚de‡
GL_EXT_vîãx_weightög


2679 
	#GL_MODELVIEW0_STACK_DEPTH_EXT
 
GL_MODELVIEW_STACK_DEPTH


	)

2680 
	#GL_MODELVIEW1_STACK_DEPTH_EXT
 0x8502

	)

2681 
	#GL_MODELVIEW0_MATRIX_EXT
 
GL_MODELVIEW_MATRIX


	)

2682 
	#GL_MODELVIEW1_MATRIX_EXT
 0x8506

	)

2683 
	#GL_VERTEX_WEIGHTING_EXT
 0x8509

	)

2684 
	#GL_MODELVIEW0_EXT
 
GL_MODELVIEW


	)

2685 
	#GL_MODELVIEW1_EXT
 0x850A

	)

2686 
	#GL_CURRENT_VERTEX_WEIGHT_EXT
 0x850B

	)

2687 
	#GL_VERTEX_WEIGHT_ARRAY_EXT
 0x850C

	)

2688 
	#GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT
 0x850D

	)

2689 
	#GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT
 0x850E

	)

2690 
	#GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT
 0x850F

	)

2691 
	#GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT
 0x8510

	)

2694 #i‚de‡
GL_NV_light_max_exp⁄ít


2695 
	#GL_MAX_SHININESS_NV
 0x8504

	)

2696 
	#GL_MAX_SPOT_EXPONENT_NV
 0x8505

	)

2699 #i‚de‡
GL_NV_vîãx_¨øy_ønge


2700 
	#GL_VERTEX_ARRAY_RANGE_NV
 0x851D

	)

2701 
	#GL_VERTEX_ARRAY_RANGE_LENGTH_NV
 0x851E

	)

2702 
	#GL_VERTEX_ARRAY_RANGE_VALID_NV
 0x851F

	)

2703 
	#GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV
 0x8520

	)

2704 
	#GL_VERTEX_ARRAY_RANGE_POINTER_NV
 0x8521

	)

2707 #i‚de‡
GL_NV_ªgi°î_comböîs


2708 
	#GL_REGISTER_COMBINERS_NV
 0x8522

	)

2709 
	#GL_VARIABLE_A_NV
 0x8523

	)

2710 
	#GL_VARIABLE_B_NV
 0x8524

	)

2711 
	#GL_VARIABLE_C_NV
 0x8525

	)

2712 
	#GL_VARIABLE_D_NV
 0x8526

	)

2713 
	#GL_VARIABLE_E_NV
 0x8527

	)

2714 
	#GL_VARIABLE_F_NV
 0x8528

	)

2715 
	#GL_VARIABLE_G_NV
 0x8529

	)

2716 
	#GL_CONSTANT_COLOR0_NV
 0x852A

	)

2717 
	#GL_CONSTANT_COLOR1_NV
 0x852B

	)

2718 
	#GL_PRIMARY_COLOR_NV
 0x852C

	)

2719 
	#GL_SECONDARY_COLOR_NV
 0x852D

	)

2720 
	#GL_SPARE0_NV
 0x852E

	)

2721 
	#GL_SPARE1_NV
 0x852F

	)

2722 
	#GL_DISCARD_NV
 0x8530

	)

2723 
	#GL_E_TIMES_F_NV
 0x8531

	)

2724 
	#GL_SPARE0_PLUS_SECONDARY_COLOR_NV
 0x8532

	)

2725 
	#GL_UNSIGNED_IDENTITY_NV
 0x8536

	)

2726 
	#GL_UNSIGNED_INVERT_NV
 0x8537

	)

2727 
	#GL_EXPAND_NORMAL_NV
 0x8538

	)

2728 
	#GL_EXPAND_NEGATE_NV
 0x8539

	)

2729 
	#GL_HALF_BIAS_NORMAL_NV
 0x853A

	)

2730 
	#GL_HALF_BIAS_NEGATE_NV
 0x853B

	)

2731 
	#GL_SIGNED_IDENTITY_NV
 0x853C

	)

2732 
	#GL_SIGNED_NEGATE_NV
 0x853D

	)

2733 
	#GL_SCALE_BY_TWO_NV
 0x853E

	)

2734 
	#GL_SCALE_BY_FOUR_NV
 0x853F

	)

2735 
	#GL_SCALE_BY_ONE_HALF_NV
 0x8540

	)

2736 
	#GL_BIAS_BY_NEGATIVE_ONE_HALF_NV
 0x8541

	)

2737 
	#GL_COMBINER_INPUT_NV
 0x8542

	)

2738 
	#GL_COMBINER_MAPPING_NV
 0x8543

	)

2739 
	#GL_COMBINER_COMPONENT_USAGE_NV
 0x8544

	)

2740 
	#GL_COMBINER_AB_DOT_PRODUCT_NV
 0x8545

	)

2741 
	#GL_COMBINER_CD_DOT_PRODUCT_NV
 0x8546

	)

2742 
	#GL_COMBINER_MUX_SUM_NV
 0x8547

	)

2743 
	#GL_COMBINER_SCALE_NV
 0x8548

	)

2744 
	#GL_COMBINER_BIAS_NV
 0x8549

	)

2745 
	#GL_COMBINER_AB_OUTPUT_NV
 0x854A

	)

2746 
	#GL_COMBINER_CD_OUTPUT_NV
 0x854B

	)

2747 
	#GL_COMBINER_SUM_OUTPUT_NV
 0x854C

	)

2748 
	#GL_MAX_GENERAL_COMBINERS_NV
 0x854D

	)

2749 
	#GL_NUM_GENERAL_COMBINERS_NV
 0x854E

	)

2750 
	#GL_COLOR_SUM_CLAMP_NV
 0x854F

	)

2751 
	#GL_COMBINER0_NV
 0x8550

	)

2752 
	#GL_COMBINER1_NV
 0x8551

	)

2753 
	#GL_COMBINER2_NV
 0x8552

	)

2754 
	#GL_COMBINER3_NV
 0x8553

	)

2755 
	#GL_COMBINER4_NV
 0x8554

	)

2756 
	#GL_COMBINER5_NV
 0x8555

	)

2757 
	#GL_COMBINER6_NV
 0x8556

	)

2758 
	#GL_COMBINER7_NV
 0x8557

	)

2766 #i‚de‡
GL_NV_fog_di°™˚


2767 
	#GL_FOG_DISTANCE_MODE_NV
 0x855A

	)

2768 
	#GL_EYE_RADIAL_NV
 0x855B

	)

2769 
	#GL_EYE_PLANE_ABSOLUTE_NV
 0x855C

	)

2773 #i‚de‡
GL_NV_ãxgí_emboss


2774 
	#GL_EMBOSS_LIGHT_NV
 0x855D

	)

2775 
	#GL_EMBOSS_CONSTANT_NV
 0x855E

	)

2776 
	#GL_EMBOSS_MAP_NV
 0x855F

	)

2779 #i‚de‡
GL_NV_bÀnd_squ¨e


2782 #i‚de‡
GL_NV_ãxtuª_ív_comböe4


2783 
	#GL_COMBINE4_NV
 0x8503

	)

2784 
	#GL_SOURCE3_RGB_NV
 0x8583

	)

2785 
	#GL_SOURCE3_ALPHA_NV
 0x858B

	)

2786 
	#GL_OPERAND3_RGB_NV
 0x8593

	)

2787 
	#GL_OPERAND3_ALPHA_NV
 0x859B

	)

2790 #i‚de‡
GL_MESA_ªsize_buf„rs


2793 #i‚de‡
GL_MESA_wödow_pos


2796 #i‚de‡
GL_EXT_ãxtuª_com¥essi⁄_s3tc


2797 
	#GL_COMPRESSED_RGB_S3TC_DXT1_EXT
 0x83F0

	)

2798 
	#GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
 0x83F1

	)

2799 
	#GL_COMPRESSED_RGBA_S3TC_DXT3_EXT
 0x83F2

	)

2800 
	#GL_COMPRESSED_RGBA_S3TC_DXT5_EXT
 0x83F3

	)

2803 #i‚de‡
GL_IBM_cuŒ_vîãx


2804 
	#GL_CULL_VERTEX_IBM
 103050

	)

2807 #i‚de‡
GL_IBM_mu…imode_døw_¨øys


2810 #i‚de‡
GL_IBM_vîãx_¨øy_li°s


2811 
	#GL_VERTEX_ARRAY_LIST_IBM
 103070

	)

2812 
	#GL_NORMAL_ARRAY_LIST_IBM
 103071

	)

2813 
	#GL_COLOR_ARRAY_LIST_IBM
 103072

	)

2814 
	#GL_INDEX_ARRAY_LIST_IBM
 103073

	)

2815 
	#GL_TEXTURE_COORD_ARRAY_LIST_IBM
 103074

	)

2816 
	#GL_EDGE_FLAG_ARRAY_LIST_IBM
 103075

	)

2817 
	#GL_FOG_COORDINATE_ARRAY_LIST_IBM
 103076

	)

2818 
	#GL_SECONDARY_COLOR_ARRAY_LIST_IBM
 103077

	)

2819 
	#GL_VERTEX_ARRAY_LIST_STRIDE_IBM
 103080

	)

2820 
	#GL_NORMAL_ARRAY_LIST_STRIDE_IBM
 103081

	)

2821 
	#GL_COLOR_ARRAY_LIST_STRIDE_IBM
 103082

	)

2822 
	#GL_INDEX_ARRAY_LIST_STRIDE_IBM
 103083

	)

2823 
	#GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
 103084

	)

2824 
	#GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
 103085

	)

2825 
	#GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
 103086

	)

2826 
	#GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
 103087

	)

2829 #i‚de‡
GL_SGIX_subßm∂e


2830 
	#GL_PACK_SUBSAMPLE_RATE_SGIX
 0x85A0

	)

2831 
	#GL_UNPACK_SUBSAMPLE_RATE_SGIX
 0x85A1

	)

2832 
	#GL_PIXEL_SUBSAMPLE_4444_SGIX
 0x85A2

	)

2833 
	#GL_PIXEL_SUBSAMPLE_2424_SGIX
 0x85A3

	)

2834 
	#GL_PIXEL_SUBSAMPLE_4242_SGIX
 0x85A4

	)

2837 #i‚de‡
GL_SGIX_y¸cb_subßm∂e


2840 #i‚de‡
GL_SGIX_y¸cba


2841 
	#GL_YCRCB_SGIX
 0x8318

	)

2842 
	#GL_YCRCBA_SGIX
 0x8319

	)

2845 #i‚de‡
GL_SGI_dïth_∑ss_ö°rumít


2846 
	#GL_DEPTH_PASS_INSTRUMENT_SGIX
 0x8310

	)

2847 
	#GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX
 0x8311

	)

2848 
	#GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX
 0x8312

	)

2851 #i‚de‡
GL_3DFX_ãxtuª_com¥essi⁄_FXT1


2852 
	#GL_COMPRESSED_RGB_FXT1_3DFX
 0x86B0

	)

2853 
	#GL_COMPRESSED_RGBA_FXT1_3DFX
 0x86B1

	)

2856 #i‚de‡
GL_3DFX_mu…ißm∂e


2857 
	#GL_MULTISAMPLE_3DFX
 0x86B2

	)

2858 
	#GL_SAMPLE_BUFFERS_3DFX
 0x86B3

	)

2859 
	#GL_SAMPLES_3DFX
 0x86B4

	)

2860 
	#GL_MULTISAMPLE_BIT_3DFX
 0x20000000

	)

2863 #i‚de‡
GL_3DFX_tbuf„r


2866 #i‚de‡
GL_EXT_mu…ißm∂e


2867 
	#GL_MULTISAMPLE_EXT
 0x809D

	)

2868 
	#GL_SAMPLE_ALPHA_TO_MASK_EXT
 0x809E

	)

2869 
	#GL_SAMPLE_ALPHA_TO_ONE_EXT
 0x809F

	)

2870 
	#GL_SAMPLE_MASK_EXT
 0x80A0

	)

2871 
	#GL_1PASS_EXT
 0x80A1

	)

2872 
	#GL_2PASS_0_EXT
 0x80A2

	)

2873 
	#GL_2PASS_1_EXT
 0x80A3

	)

2874 
	#GL_4PASS_0_EXT
 0x80A4

	)

2875 
	#GL_4PASS_1_EXT
 0x80A5

	)

2876 
	#GL_4PASS_2_EXT
 0x80A6

	)

2877 
	#GL_4PASS_3_EXT
 0x80A7

	)

2878 
	#GL_SAMPLE_BUFFERS_EXT
 0x80A8

	)

2879 
	#GL_SAMPLES_EXT
 0x80A9

	)

2880 
	#GL_SAMPLE_MASK_VALUE_EXT
 0x80AA

	)

2881 
	#GL_SAMPLE_MASK_INVERT_EXT
 0x80AB

	)

2882 
	#GL_SAMPLE_PATTERN_EXT
 0x80AC

	)

2883 
	#GL_MULTISAMPLE_BIT_EXT
 0x20000000

	)

2886 #i‚de‡
GL_SGIX_vîãx_¥e˛ù


2887 
	#GL_VERTEX_PRECLIP_SGIX
 0x83EE

	)

2888 
	#GL_VERTEX_PRECLIP_HINT_SGIX
 0x83EF

	)

2891 #i‚de‡
GL_SGIX_c⁄vﬁuti⁄_accuøcy


2892 
	#GL_CONVOLUTION_HINT_SGIX
 0x8316

	)

2895 #i‚de‡
GL_SGIX_ªßm∂e


2896 
	#GL_PACK_RESAMPLE_SGIX
 0x842C

	)

2897 
	#GL_UNPACK_RESAMPLE_SGIX
 0x842D

	)

2898 
	#GL_RESAMPLE_REPLICATE_SGIX
 0x842E

	)

2899 
	#GL_RESAMPLE_ZERO_FILL_SGIX
 0x842F

	)

2900 
	#GL_RESAMPLE_DECIMATE_SGIX
 0x8430

	)

2903 #i‚de‡
GL_SGIS_poöt_löe_ãxgí


2904 
	#GL_EYE_DISTANCE_TO_POINT_SGIS
 0x81F0

	)

2905 
	#GL_OBJECT_DISTANCE_TO_POINT_SGIS
 0x81F1

	)

2906 
	#GL_EYE_DISTANCE_TO_LINE_SGIS
 0x81F2

	)

2907 
	#GL_OBJECT_DISTANCE_TO_LINE_SGIS
 0x81F3

	)

2908 
	#GL_EYE_POINT_SGIS
 0x81F4

	)

2909 
	#GL_OBJECT_POINT_SGIS
 0x81F5

	)

2910 
	#GL_EYE_LINE_SGIS
 0x81F6

	)

2911 
	#GL_OBJECT_LINE_SGIS
 0x81F7

	)

2914 #i‚de‡
GL_SGIS_ãxtuª_cﬁ‹_mask


2915 
	#GL_TEXTURE_COLOR_WRITEMASK_SGIS
 0x81EF

	)

2918 #i‚de‡
GL_EXT_ãxtuª_ív_dŸ3


2919 
	#GL_DOT3_RGB_EXT
 0x8740

	)

2920 
	#GL_DOT3_RGBA_EXT
 0x8741

	)

2923 #i‚de‡
GL_ATI_ãxtuª_múr‹_⁄˚


2924 
	#GL_MIRROR_CLAMP_ATI
 0x8742

	)

2925 
	#GL_MIRROR_CLAMP_TO_EDGE_ATI
 0x8743

	)

2928 #i‚de‡
GL_NV_„n˚


2929 
	#GL_ALL_COMPLETED_NV
 0x84F2

	)

2930 
	#GL_FENCE_STATUS_NV
 0x84F3

	)

2931 
	#GL_FENCE_CONDITION_NV
 0x84F4

	)

2934 #i‚de‡
GL_IBM_ãxtuª_múr‹ed_ª≥©


2935 
	#GL_MIRRORED_REPEAT_IBM
 0x8370

	)

2938 #i‚de‡
GL_NV_evÆu©‹s


2939 
	#GL_EVAL_2D_NV
 0x86C0

	)

2940 
	#GL_EVAL_TRIANGULAR_2D_NV
 0x86C1

	)

2941 
	#GL_MAP_TESSELLATION_NV
 0x86C2

	)

2942 
	#GL_MAP_ATTRIB_U_ORDER_NV
 0x86C3

	)

2943 
	#GL_MAP_ATTRIB_V_ORDER_NV
 0x86C4

	)

2944 
	#GL_EVAL_FRACTIONAL_TESSELLATION_NV
 0x86C5

	)

2945 
	#GL_EVAL_VERTEX_ATTRIB0_NV
 0x86C6

	)

2946 
	#GL_EVAL_VERTEX_ATTRIB1_NV
 0x86C7

	)

2947 
	#GL_EVAL_VERTEX_ATTRIB2_NV
 0x86C8

	)

2948 
	#GL_EVAL_VERTEX_ATTRIB3_NV
 0x86C9

	)

2949 
	#GL_EVAL_VERTEX_ATTRIB4_NV
 0x86CA

	)

2950 
	#GL_EVAL_VERTEX_ATTRIB5_NV
 0x86CB

	)

2951 
	#GL_EVAL_VERTEX_ATTRIB6_NV
 0x86CC

	)

2952 
	#GL_EVAL_VERTEX_ATTRIB7_NV
 0x86CD

	)

2953 
	#GL_EVAL_VERTEX_ATTRIB8_NV
 0x86CE

	)

2954 
	#GL_EVAL_VERTEX_ATTRIB9_NV
 0x86CF

	)

2955 
	#GL_EVAL_VERTEX_ATTRIB10_NV
 0x86D0

	)

2956 
	#GL_EVAL_VERTEX_ATTRIB11_NV
 0x86D1

	)

2957 
	#GL_EVAL_VERTEX_ATTRIB12_NV
 0x86D2

	)

2958 
	#GL_EVAL_VERTEX_ATTRIB13_NV
 0x86D3

	)

2959 
	#GL_EVAL_VERTEX_ATTRIB14_NV
 0x86D4

	)

2960 
	#GL_EVAL_VERTEX_ATTRIB15_NV
 0x86D5

	)

2961 
	#GL_MAX_MAP_TESSELLATION_NV
 0x86D6

	)

2962 
	#GL_MAX_RATIONAL_EVAL_ORDER_NV
 0x86D7

	)

2965 #i‚de‡
GL_NV_∑cked_dïth_°ícû


2966 
	#GL_DEPTH_STENCIL_NV
 0x84F9

	)

2967 
	#GL_UNSIGNED_INT_24_8_NV
 0x84FA

	)

2970 #i‚de‡
GL_NV_ªgi°î_comböîs2


2971 
	#GL_PER_STAGE_CONSTANTS_NV
 0x8535

	)

2974 #i‚de‡
GL_NV_ãxtuª_com¥essi⁄_vtc


2977 #i‚de‡
GL_NV_ãxtuª_ª˘™gÀ


2978 
	#GL_TEXTURE_RECTANGLE_NV
 0x84F5

	)

2979 
	#GL_TEXTURE_BINDING_RECTANGLE_NV
 0x84F6

	)

2980 
	#GL_PROXY_TEXTURE_RECTANGLE_NV
 0x84F7

	)

2981 
	#GL_MAX_RECTANGLE_TEXTURE_SIZE_NV
 0x84F8

	)

2984 #i‚de‡
GL_NV_ãxtuª_shadî


2985 
	#GL_OFFSET_TEXTURE_RECTANGLE_NV
 0x864C

	)

2986 
	#GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV
 0x864D

	)

2987 
	#GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV
 0x864E

	)

2988 
	#GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV
 0x86D9

	)

2989 
	#GL_UNSIGNED_INT_S8_S8_8_8_NV
 0x86DA

	)

2990 
	#GL_UNSIGNED_INT_8_8_S8_S8_REV_NV
 0x86DB

	)

2991 
	#GL_DSDT_MAG_INTENSITY_NV
 0x86DC

	)

2992 
	#GL_SHADER_CONSISTENT_NV
 0x86DD

	)

2993 
	#GL_TEXTURE_SHADER_NV
 0x86DE

	)

2994 
	#GL_SHADER_OPERATION_NV
 0x86DF

	)

2995 
	#GL_CULL_MODES_NV
 0x86E0

	)

2996 
	#GL_OFFSET_TEXTURE_MATRIX_NV
 0x86E1

	)

2997 
	#GL_OFFSET_TEXTURE_SCALE_NV
 0x86E2

	)

2998 
	#GL_OFFSET_TEXTURE_BIAS_NV
 0x86E3

	)

2999 
	#GL_OFFSET_TEXTURE_2D_MATRIX_NV
 
GL_OFFSET_TEXTURE_MATRIX_NV


	)

3000 
	#GL_OFFSET_TEXTURE_2D_SCALE_NV
 
GL_OFFSET_TEXTURE_SCALE_NV


	)

3001 
	#GL_OFFSET_TEXTURE_2D_BIAS_NV
 
GL_OFFSET_TEXTURE_BIAS_NV


	)

3002 
	#GL_PREVIOUS_TEXTURE_INPUT_NV
 0x86E4

	)

3003 
	#GL_CONST_EYE_NV
 0x86E5

	)

3004 
	#GL_PASS_THROUGH_NV
 0x86E6

	)

3005 
	#GL_CULL_FRAGMENT_NV
 0x86E7

	)

3006 
	#GL_OFFSET_TEXTURE_2D_NV
 0x86E8

	)

3007 
	#GL_DEPENDENT_AR_TEXTURE_2D_NV
 0x86E9

	)

3008 
	#GL_DEPENDENT_GB_TEXTURE_2D_NV
 0x86EA

	)

3009 
	#GL_DOT_PRODUCT_NV
 0x86EC

	)

3010 
	#GL_DOT_PRODUCT_DEPTH_REPLACE_NV
 0x86ED

	)

3011 
	#GL_DOT_PRODUCT_TEXTURE_2D_NV
 0x86EE

	)

3012 
	#GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV
 0x86F0

	)

3013 
	#GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV
 0x86F1

	)

3014 
	#GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV
 0x86F2

	)

3015 
	#GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV
 0x86F3

	)

3016 
	#GL_HILO_NV
 0x86F4

	)

3017 
	#GL_DSDT_NV
 0x86F5

	)

3018 
	#GL_DSDT_MAG_NV
 0x86F6

	)

3019 
	#GL_DSDT_MAG_VIB_NV
 0x86F7

	)

3020 
	#GL_HILO16_NV
 0x86F8

	)

3021 
	#GL_SIGNED_HILO_NV
 0x86F9

	)

3022 
	#GL_SIGNED_HILO16_NV
 0x86FA

	)

3023 
	#GL_SIGNED_RGBA_NV
 0x86FB

	)

3024 
	#GL_SIGNED_RGBA8_NV
 0x86FC

	)

3025 
	#GL_SIGNED_RGB_NV
 0x86FE

	)

3026 
	#GL_SIGNED_RGB8_NV
 0x86FF

	)

3027 
	#GL_SIGNED_LUMINANCE_NV
 0x8701

	)

3028 
	#GL_SIGNED_LUMINANCE8_NV
 0x8702

	)

3029 
	#GL_SIGNED_LUMINANCE_ALPHA_NV
 0x8703

	)

3030 
	#GL_SIGNED_LUMINANCE8_ALPHA8_NV
 0x8704

	)

3031 
	#GL_SIGNED_ALPHA_NV
 0x8705

	)

3032 
	#GL_SIGNED_ALPHA8_NV
 0x8706

	)

3033 
	#GL_SIGNED_INTENSITY_NV
 0x8707

	)

3034 
	#GL_SIGNED_INTENSITY8_NV
 0x8708

	)

3035 
	#GL_DSDT8_NV
 0x8709

	)

3036 
	#GL_DSDT8_MAG8_NV
 0x870A

	)

3037 
	#GL_DSDT8_MAG8_INTENSITY8_NV
 0x870B

	)

3038 
	#GL_SIGNED_RGB_UNSIGNED_ALPHA_NV
 0x870C

	)

3039 
	#GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV
 0x870D

	)

3040 
	#GL_HI_SCALE_NV
 0x870E

	)

3041 
	#GL_LO_SCALE_NV
 0x870F

	)

3042 
	#GL_DS_SCALE_NV
 0x8710

	)

3043 
	#GL_DT_SCALE_NV
 0x8711

	)

3044 
	#GL_MAGNITUDE_SCALE_NV
 0x8712

	)

3045 
	#GL_VIBRANCE_SCALE_NV
 0x8713

	)

3046 
	#GL_HI_BIAS_NV
 0x8714

	)

3047 
	#GL_LO_BIAS_NV
 0x8715

	)

3048 
	#GL_DS_BIAS_NV
 0x8716

	)

3049 
	#GL_DT_BIAS_NV
 0x8717

	)

3050 
	#GL_MAGNITUDE_BIAS_NV
 0x8718

	)

3051 
	#GL_VIBRANCE_BIAS_NV
 0x8719

	)

3052 
	#GL_TEXTURE_BORDER_VALUES_NV
 0x871A

	)

3053 
	#GL_TEXTURE_HI_SIZE_NV
 0x871B

	)

3054 
	#GL_TEXTURE_LO_SIZE_NV
 0x871C

	)

3055 
	#GL_TEXTURE_DS_SIZE_NV
 0x871D

	)

3056 
	#GL_TEXTURE_DT_SIZE_NV
 0x871E

	)

3057 
	#GL_TEXTURE_MAG_SIZE_NV
 0x871F

	)

3060 #i‚de‡
GL_NV_ãxtuª_shadî2


3061 
	#GL_DOT_PRODUCT_TEXTURE_3D_NV
 0x86EF

	)

3064 #i‚de‡
GL_NV_vîãx_¨øy_ønge2


3065 
	#GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV
 0x8533

	)

3068 #i‚de‡
GL_NV_vîãx_¥ogøm


3069 
	#GL_VERTEX_PROGRAM_NV
 0x8620

	)

3070 
	#GL_VERTEX_STATE_PROGRAM_NV
 0x8621

	)

3071 
	#GL_ATTRIB_ARRAY_SIZE_NV
 0x8623

	)

3072 
	#GL_ATTRIB_ARRAY_STRIDE_NV
 0x8624

	)

3073 
	#GL_ATTRIB_ARRAY_TYPE_NV
 0x8625

	)

3074 
	#GL_CURRENT_ATTRIB_NV
 0x8626

	)

3075 
	#GL_PROGRAM_LENGTH_NV
 0x8627

	)

3076 
	#GL_PROGRAM_STRING_NV
 0x8628

	)

3077 
	#GL_MODELVIEW_PROJECTION_NV
 0x8629

	)

3078 
	#GL_IDENTITY_NV
 0x862A

	)

3079 
	#GL_INVERSE_NV
 0x862B

	)

3080 
	#GL_TRANSPOSE_NV
 0x862C

	)

3081 
	#GL_INVERSE_TRANSPOSE_NV
 0x862D

	)

3082 
	#GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV
 0x862E

	)

3083 
	#GL_MAX_TRACK_MATRICES_NV
 0x862F

	)

3084 
	#GL_MATRIX0_NV
 0x8630

	)

3085 
	#GL_MATRIX1_NV
 0x8631

	)

3086 
	#GL_MATRIX2_NV
 0x8632

	)

3087 
	#GL_MATRIX3_NV
 0x8633

	)

3088 
	#GL_MATRIX4_NV
 0x8634

	)

3089 
	#GL_MATRIX5_NV
 0x8635

	)

3090 
	#GL_MATRIX6_NV
 0x8636

	)

3091 
	#GL_MATRIX7_NV
 0x8637

	)

3092 
	#GL_CURRENT_MATRIX_STACK_DEPTH_NV
 0x8640

	)

3093 
	#GL_CURRENT_MATRIX_NV
 0x8641

	)

3094 
	#GL_VERTEX_PROGRAM_POINT_SIZE_NV
 0x8642

	)

3095 
	#GL_VERTEX_PROGRAM_TWO_SIDE_NV
 0x8643

	)

3096 
	#GL_PROGRAM_PARAMETER_NV
 0x8644

	)

3097 
	#GL_ATTRIB_ARRAY_POINTER_NV
 0x8645

	)

3098 
	#GL_PROGRAM_TARGET_NV
 0x8646

	)

3099 
	#GL_PROGRAM_RESIDENT_NV
 0x8647

	)

3100 
	#GL_TRACK_MATRIX_NV
 0x8648

	)

3101 
	#GL_TRACK_MATRIX_TRANSFORM_NV
 0x8649

	)

3102 
	#GL_VERTEX_PROGRAM_BINDING_NV
 0x864A

	)

3103 
	#GL_PROGRAM_ERROR_POSITION_NV
 0x864B

	)

3104 
	#GL_VERTEX_ATTRIB_ARRAY0_NV
 0x8650

	)

3105 
	#GL_VERTEX_ATTRIB_ARRAY1_NV
 0x8651

	)

3106 
	#GL_VERTEX_ATTRIB_ARRAY2_NV
 0x8652

	)

3107 
	#GL_VERTEX_ATTRIB_ARRAY3_NV
 0x8653

	)

3108 
	#GL_VERTEX_ATTRIB_ARRAY4_NV
 0x8654

	)

3109 
	#GL_VERTEX_ATTRIB_ARRAY5_NV
 0x8655

	)

3110 
	#GL_VERTEX_ATTRIB_ARRAY6_NV
 0x8656

	)

3111 
	#GL_VERTEX_ATTRIB_ARRAY7_NV
 0x8657

	)

3112 
	#GL_VERTEX_ATTRIB_ARRAY8_NV
 0x8658

	)

3113 
	#GL_VERTEX_ATTRIB_ARRAY9_NV
 0x8659

	)

3114 
	#GL_VERTEX_ATTRIB_ARRAY10_NV
 0x865A

	)

3115 
	#GL_VERTEX_ATTRIB_ARRAY11_NV
 0x865B

	)

3116 
	#GL_VERTEX_ATTRIB_ARRAY12_NV
 0x865C

	)

3117 
	#GL_VERTEX_ATTRIB_ARRAY13_NV
 0x865D

	)

3118 
	#GL_VERTEX_ATTRIB_ARRAY14_NV
 0x865E

	)

3119 
	#GL_VERTEX_ATTRIB_ARRAY15_NV
 0x865F

	)

3120 
	#GL_MAP1_VERTEX_ATTRIB0_4_NV
 0x8660

	)

3121 
	#GL_MAP1_VERTEX_ATTRIB1_4_NV
 0x8661

	)

3122 
	#GL_MAP1_VERTEX_ATTRIB2_4_NV
 0x8662

	)

3123 
	#GL_MAP1_VERTEX_ATTRIB3_4_NV
 0x8663

	)

3124 
	#GL_MAP1_VERTEX_ATTRIB4_4_NV
 0x8664

	)

3125 
	#GL_MAP1_VERTEX_ATTRIB5_4_NV
 0x8665

	)

3126 
	#GL_MAP1_VERTEX_ATTRIB6_4_NV
 0x8666

	)

3127 
	#GL_MAP1_VERTEX_ATTRIB7_4_NV
 0x8667

	)

3128 
	#GL_MAP1_VERTEX_ATTRIB8_4_NV
 0x8668

	)

3129 
	#GL_MAP1_VERTEX_ATTRIB9_4_NV
 0x8669

	)

3130 
	#GL_MAP1_VERTEX_ATTRIB10_4_NV
 0x866A

	)

3131 
	#GL_MAP1_VERTEX_ATTRIB11_4_NV
 0x866B

	)

3132 
	#GL_MAP1_VERTEX_ATTRIB12_4_NV
 0x866C

	)

3133 
	#GL_MAP1_VERTEX_ATTRIB13_4_NV
 0x866D

	)

3134 
	#GL_MAP1_VERTEX_ATTRIB14_4_NV
 0x866E

	)

3135 
	#GL_MAP1_VERTEX_ATTRIB15_4_NV
 0x866F

	)

3136 
	#GL_MAP2_VERTEX_ATTRIB0_4_NV
 0x8670

	)

3137 
	#GL_MAP2_VERTEX_ATTRIB1_4_NV
 0x8671

	)

3138 
	#GL_MAP2_VERTEX_ATTRIB2_4_NV
 0x8672

	)

3139 
	#GL_MAP2_VERTEX_ATTRIB3_4_NV
 0x8673

	)

3140 
	#GL_MAP2_VERTEX_ATTRIB4_4_NV
 0x8674

	)

3141 
	#GL_MAP2_VERTEX_ATTRIB5_4_NV
 0x8675

	)

3142 
	#GL_MAP2_VERTEX_ATTRIB6_4_NV
 0x8676

	)

3143 
	#GL_MAP2_VERTEX_ATTRIB7_4_NV
 0x8677

	)

3144 
	#GL_MAP2_VERTEX_ATTRIB8_4_NV
 0x8678

	)

3145 
	#GL_MAP2_VERTEX_ATTRIB9_4_NV
 0x8679

	)

3146 
	#GL_MAP2_VERTEX_ATTRIB10_4_NV
 0x867A

	)

3147 
	#GL_MAP2_VERTEX_ATTRIB11_4_NV
 0x867B

	)

3148 
	#GL_MAP2_VERTEX_ATTRIB12_4_NV
 0x867C

	)

3149 
	#GL_MAP2_VERTEX_ATTRIB13_4_NV
 0x867D

	)

3150 
	#GL_MAP2_VERTEX_ATTRIB14_4_NV
 0x867E

	)

3151 
	#GL_MAP2_VERTEX_ATTRIB15_4_NV
 0x867F

	)

3154 #i‚de‡
GL_SGIX_ãxtuª_co‹dö©e_˛amp


3155 
	#GL_TEXTURE_MAX_CLAMP_S_SGIX
 0x8369

	)

3156 
	#GL_TEXTURE_MAX_CLAMP_T_SGIX
 0x836A

	)

3157 
	#GL_TEXTURE_MAX_CLAMP_R_SGIX
 0x836B

	)

3160 #i‚de‡
GL_SGIX_sˇÀbüs_höt


3161 
	#GL_SCALEBIAS_HINT_SGIX
 0x8322

	)

3164 #i‚de‡
GL_OML_öãæa˚


3165 
	#GL_INTERLACE_OML
 0x8980

	)

3166 
	#GL_INTERLACE_READ_OML
 0x8981

	)

3169 #i‚de‡
GL_OML_subßm∂e


3170 
	#GL_FORMAT_SUBSAMPLE_24_24_OML
 0x8982

	)

3171 
	#GL_FORMAT_SUBSAMPLE_244_244_OML
 0x8983

	)

3174 #i‚de‡
GL_OML_ªßm∂e


3175 
	#GL_PACK_RESAMPLE_OML
 0x8984

	)

3176 
	#GL_UNPACK_RESAMPLE_OML
 0x8985

	)

3177 
	#GL_RESAMPLE_REPLICATE_OML
 0x8986

	)

3178 
	#GL_RESAMPLE_ZERO_FILL_OML
 0x8987

	)

3179 
	#GL_RESAMPLE_AVERAGE_OML
 0x8988

	)

3180 
	#GL_RESAMPLE_DECIMATE_OML
 0x8989

	)

3183 #i‚de‡
GL_NV_c›y_dïth_to_cﬁ‹


3184 
	#GL_DEPTH_STENCIL_TO_RGBA_NV
 0x886E

	)

3185 
	#GL_DEPTH_STENCIL_TO_BGRA_NV
 0x886F

	)

3188 #i‚de‡
GL_ATI_ívm≠_bumpm≠


3189 
	#GL_BUMP_ROT_MATRIX_ATI
 0x8775

	)

3190 
	#GL_BUMP_ROT_MATRIX_SIZE_ATI
 0x8776

	)

3191 
	#GL_BUMP_NUM_TEX_UNITS_ATI
 0x8777

	)

3192 
	#GL_BUMP_TEX_UNITS_ATI
 0x8778

	)

3193 
	#GL_DUDV_ATI
 0x8779

	)

3194 
	#GL_DU8DV8_ATI
 0x877A

	)

3195 
	#GL_BUMP_ENVMAP_ATI
 0x877B

	)

3196 
	#GL_BUMP_TARGET_ATI
 0x877C

	)

3199 #i‚de‡
GL_ATI_‰agmít_shadî


3200 
	#GL_FRAGMENT_SHADER_ATI
 0x8920

	)

3201 
	#GL_REG_0_ATI
 0x8921

	)

3202 
	#GL_REG_1_ATI
 0x8922

	)

3203 
	#GL_REG_2_ATI
 0x8923

	)

3204 
	#GL_REG_3_ATI
 0x8924

	)

3205 
	#GL_REG_4_ATI
 0x8925

	)

3206 
	#GL_REG_5_ATI
 0x8926

	)

3207 
	#GL_REG_6_ATI
 0x8927

	)

3208 
	#GL_REG_7_ATI
 0x8928

	)

3209 
	#GL_REG_8_ATI
 0x8929

	)

3210 
	#GL_REG_9_ATI
 0x892A

	)

3211 
	#GL_REG_10_ATI
 0x892B

	)

3212 
	#GL_REG_11_ATI
 0x892C

	)

3213 
	#GL_REG_12_ATI
 0x892D

	)

3214 
	#GL_REG_13_ATI
 0x892E

	)

3215 
	#GL_REG_14_ATI
 0x892F

	)

3216 
	#GL_REG_15_ATI
 0x8930

	)

3217 
	#GL_REG_16_ATI
 0x8931

	)

3218 
	#GL_REG_17_ATI
 0x8932

	)

3219 
	#GL_REG_18_ATI
 0x8933

	)

3220 
	#GL_REG_19_ATI
 0x8934

	)

3221 
	#GL_REG_20_ATI
 0x8935

	)

3222 
	#GL_REG_21_ATI
 0x8936

	)

3223 
	#GL_REG_22_ATI
 0x8937

	)

3224 
	#GL_REG_23_ATI
 0x8938

	)

3225 
	#GL_REG_24_ATI
 0x8939

	)

3226 
	#GL_REG_25_ATI
 0x893A

	)

3227 
	#GL_REG_26_ATI
 0x893B

	)

3228 
	#GL_REG_27_ATI
 0x893C

	)

3229 
	#GL_REG_28_ATI
 0x893D

	)

3230 
	#GL_REG_29_ATI
 0x893E

	)

3231 
	#GL_REG_30_ATI
 0x893F

	)

3232 
	#GL_REG_31_ATI
 0x8940

	)

3233 
	#GL_CON_0_ATI
 0x8941

	)

3234 
	#GL_CON_1_ATI
 0x8942

	)

3235 
	#GL_CON_2_ATI
 0x8943

	)

3236 
	#GL_CON_3_ATI
 0x8944

	)

3237 
	#GL_CON_4_ATI
 0x8945

	)

3238 
	#GL_CON_5_ATI
 0x8946

	)

3239 
	#GL_CON_6_ATI
 0x8947

	)

3240 
	#GL_CON_7_ATI
 0x8948

	)

3241 
	#GL_CON_8_ATI
 0x8949

	)

3242 
	#GL_CON_9_ATI
 0x894A

	)

3243 
	#GL_CON_10_ATI
 0x894B

	)

3244 
	#GL_CON_11_ATI
 0x894C

	)

3245 
	#GL_CON_12_ATI
 0x894D

	)

3246 
	#GL_CON_13_ATI
 0x894E

	)

3247 
	#GL_CON_14_ATI
 0x894F

	)

3248 
	#GL_CON_15_ATI
 0x8950

	)

3249 
	#GL_CON_16_ATI
 0x8951

	)

3250 
	#GL_CON_17_ATI
 0x8952

	)

3251 
	#GL_CON_18_ATI
 0x8953

	)

3252 
	#GL_CON_19_ATI
 0x8954

	)

3253 
	#GL_CON_20_ATI
 0x8955

	)

3254 
	#GL_CON_21_ATI
 0x8956

	)

3255 
	#GL_CON_22_ATI
 0x8957

	)

3256 
	#GL_CON_23_ATI
 0x8958

	)

3257 
	#GL_CON_24_ATI
 0x8959

	)

3258 
	#GL_CON_25_ATI
 0x895A

	)

3259 
	#GL_CON_26_ATI
 0x895B

	)

3260 
	#GL_CON_27_ATI
 0x895C

	)

3261 
	#GL_CON_28_ATI
 0x895D

	)

3262 
	#GL_CON_29_ATI
 0x895E

	)

3263 
	#GL_CON_30_ATI
 0x895F

	)

3264 
	#GL_CON_31_ATI
 0x8960

	)

3265 
	#GL_MOV_ATI
 0x8961

	)

3266 
	#GL_ADD_ATI
 0x8963

	)

3267 
	#GL_MUL_ATI
 0x8964

	)

3268 
	#GL_SUB_ATI
 0x8965

	)

3269 
	#GL_DOT3_ATI
 0x8966

	)

3270 
	#GL_DOT4_ATI
 0x8967

	)

3271 
	#GL_MAD_ATI
 0x8968

	)

3272 
	#GL_LERP_ATI
 0x8969

	)

3273 
	#GL_CND_ATI
 0x896A

	)

3274 
	#GL_CND0_ATI
 0x896B

	)

3275 
	#GL_DOT2_ADD_ATI
 0x896C

	)

3276 
	#GL_SECONDARY_INTERPOLATOR_ATI
 0x896D

	)

3277 
	#GL_NUM_FRAGMENT_REGISTERS_ATI
 0x896E

	)

3278 
	#GL_NUM_FRAGMENT_CONSTANTS_ATI
 0x896F

	)

3279 
	#GL_NUM_PASSES_ATI
 0x8970

	)

3280 
	#GL_NUM_INSTRUCTIONS_PER_PASS_ATI
 0x8971

	)

3281 
	#GL_NUM_INSTRUCTIONS_TOTAL_ATI
 0x8972

	)

3282 
	#GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI
 0x8973

	)

3283 
	#GL_NUM_LOOPBACK_COMPONENTS_ATI
 0x8974

	)

3284 
	#GL_COLOR_ALPHA_PAIRING_ATI
 0x8975

	)

3285 
	#GL_SWIZZLE_STR_ATI
 0x8976

	)

3286 
	#GL_SWIZZLE_STQ_ATI
 0x8977

	)

3287 
	#GL_SWIZZLE_STR_DR_ATI
 0x8978

	)

3288 
	#GL_SWIZZLE_STQ_DQ_ATI
 0x8979

	)

3289 
	#GL_SWIZZLE_STRQ_ATI
 0x897A

	)

3290 
	#GL_SWIZZLE_STRQ_DQ_ATI
 0x897B

	)

3291 
	#GL_RED_BIT_ATI
 0x00000001

	)

3292 
	#GL_GREEN_BIT_ATI
 0x00000002

	)

3293 
	#GL_BLUE_BIT_ATI
 0x00000004

	)

3294 
	#GL_2X_BIT_ATI
 0x00000001

	)

3295 
	#GL_4X_BIT_ATI
 0x00000002

	)

3296 
	#GL_8X_BIT_ATI
 0x00000004

	)

3297 
	#GL_HALF_BIT_ATI
 0x00000008

	)

3298 
	#GL_QUARTER_BIT_ATI
 0x00000010

	)

3299 
	#GL_EIGHTH_BIT_ATI
 0x00000020

	)

3300 
	#GL_SATURATE_BIT_ATI
 0x00000040

	)

3301 
	#GL_COMP_BIT_ATI
 0x00000002

	)

3302 
	#GL_NEGATE_BIT_ATI
 0x00000004

	)

3303 
	#GL_BIAS_BIT_ATI
 0x00000008

	)

3306 #i‚de‡
GL_ATI_≤_åüngÀs


3307 
	#GL_PN_TRIANGLES_ATI
 0x87F0

	)

3308 
	#GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI
 0x87F1

	)

3309 
	#GL_PN_TRIANGLES_POINT_MODE_ATI
 0x87F2

	)

3310 
	#GL_PN_TRIANGLES_NORMAL_MODE_ATI
 0x87F3

	)

3311 
	#GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI
 0x87F4

	)

3312 
	#GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI
 0x87F5

	)

3313 
	#GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI
 0x87F6

	)

3314 
	#GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI
 0x87F7

	)

3315 
	#GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI
 0x87F8

	)

3318 #i‚de‡
GL_ATI_vîãx_¨øy_obje˘


3319 
	#GL_STATIC_ATI
 0x8760

	)

3320 
	#GL_DYNAMIC_ATI
 0x8761

	)

3321 
	#GL_PRESERVE_ATI
 0x8762

	)

3322 
	#GL_DISCARD_ATI
 0x8763

	)

3323 
	#GL_OBJECT_BUFFER_SIZE_ATI
 0x8764

	)

3324 
	#GL_OBJECT_BUFFER_USAGE_ATI
 0x8765

	)

3325 
	#GL_ARRAY_OBJECT_BUFFER_ATI
 0x8766

	)

3326 
	#GL_ARRAY_OBJECT_OFFSET_ATI
 0x8767

	)

3329 #i‚de‡
GL_EXT_vîãx_shadî


3330 
	#GL_VERTEX_SHADER_EXT
 0x8780

	)

3331 
	#GL_VERTEX_SHADER_BINDING_EXT
 0x8781

	)

3332 
	#GL_OP_INDEX_EXT
 0x8782

	)

3333 
	#GL_OP_NEGATE_EXT
 0x8783

	)

3334 
	#GL_OP_DOT3_EXT
 0x8784

	)

3335 
	#GL_OP_DOT4_EXT
 0x8785

	)

3336 
	#GL_OP_MUL_EXT
 0x8786

	)

3337 
	#GL_OP_ADD_EXT
 0x8787

	)

3338 
	#GL_OP_MADD_EXT
 0x8788

	)

3339 
	#GL_OP_FRAC_EXT
 0x8789

	)

3340 
	#GL_OP_MAX_EXT
 0x878A

	)

3341 
	#GL_OP_MIN_EXT
 0x878B

	)

3342 
	#GL_OP_SET_GE_EXT
 0x878C

	)

3343 
	#GL_OP_SET_LT_EXT
 0x878D

	)

3344 
	#GL_OP_CLAMP_EXT
 0x878E

	)

3345 
	#GL_OP_FLOOR_EXT
 0x878F

	)

3346 
	#GL_OP_ROUND_EXT
 0x8790

	)

3347 
	#GL_OP_EXP_BASE_2_EXT
 0x8791

	)

3348 
	#GL_OP_LOG_BASE_2_EXT
 0x8792

	)

3349 
	#GL_OP_POWER_EXT
 0x8793

	)

3350 
	#GL_OP_RECIP_EXT
 0x8794

	)

3351 
	#GL_OP_RECIP_SQRT_EXT
 0x8795

	)

3352 
	#GL_OP_SUB_EXT
 0x8796

	)

3353 
	#GL_OP_CROSS_PRODUCT_EXT
 0x8797

	)

3354 
	#GL_OP_MULTIPLY_MATRIX_EXT
 0x8798

	)

3355 
	#GL_OP_MOV_EXT
 0x8799

	)

3356 
	#GL_OUTPUT_VERTEX_EXT
 0x879A

	)

3357 
	#GL_OUTPUT_COLOR0_EXT
 0x879B

	)

3358 
	#GL_OUTPUT_COLOR1_EXT
 0x879C

	)

3359 
	#GL_OUTPUT_TEXTURE_COORD0_EXT
 0x879D

	)

3360 
	#GL_OUTPUT_TEXTURE_COORD1_EXT
 0x879E

	)

3361 
	#GL_OUTPUT_TEXTURE_COORD2_EXT
 0x879F

	)

3362 
	#GL_OUTPUT_TEXTURE_COORD3_EXT
 0x87A0

	)

3363 
	#GL_OUTPUT_TEXTURE_COORD4_EXT
 0x87A1

	)

3364 
	#GL_OUTPUT_TEXTURE_COORD5_EXT
 0x87A2

	)

3365 
	#GL_OUTPUT_TEXTURE_COORD6_EXT
 0x87A3

	)

3366 
	#GL_OUTPUT_TEXTURE_COORD7_EXT
 0x87A4

	)

3367 
	#GL_OUTPUT_TEXTURE_COORD8_EXT
 0x87A5

	)

3368 
	#GL_OUTPUT_TEXTURE_COORD9_EXT
 0x87A6

	)

3369 
	#GL_OUTPUT_TEXTURE_COORD10_EXT
 0x87A7

	)

3370 
	#GL_OUTPUT_TEXTURE_COORD11_EXT
 0x87A8

	)

3371 
	#GL_OUTPUT_TEXTURE_COORD12_EXT
 0x87A9

	)

3372 
	#GL_OUTPUT_TEXTURE_COORD13_EXT
 0x87AA

	)

3373 
	#GL_OUTPUT_TEXTURE_COORD14_EXT
 0x87AB

	)

3374 
	#GL_OUTPUT_TEXTURE_COORD15_EXT
 0x87AC

	)

3375 
	#GL_OUTPUT_TEXTURE_COORD16_EXT
 0x87AD

	)

3376 
	#GL_OUTPUT_TEXTURE_COORD17_EXT
 0x87AE

	)

3377 
	#GL_OUTPUT_TEXTURE_COORD18_EXT
 0x87AF

	)

3378 
	#GL_OUTPUT_TEXTURE_COORD19_EXT
 0x87B0

	)

3379 
	#GL_OUTPUT_TEXTURE_COORD20_EXT
 0x87B1

	)

3380 
	#GL_OUTPUT_TEXTURE_COORD21_EXT
 0x87B2

	)

3381 
	#GL_OUTPUT_TEXTURE_COORD22_EXT
 0x87B3

	)

3382 
	#GL_OUTPUT_TEXTURE_COORD23_EXT
 0x87B4

	)

3383 
	#GL_OUTPUT_TEXTURE_COORD24_EXT
 0x87B5

	)

3384 
	#GL_OUTPUT_TEXTURE_COORD25_EXT
 0x87B6

	)

3385 
	#GL_OUTPUT_TEXTURE_COORD26_EXT
 0x87B7

	)

3386 
	#GL_OUTPUT_TEXTURE_COORD27_EXT
 0x87B8

	)

3387 
	#GL_OUTPUT_TEXTURE_COORD28_EXT
 0x87B9

	)

3388 
	#GL_OUTPUT_TEXTURE_COORD29_EXT
 0x87BA

	)

3389 
	#GL_OUTPUT_TEXTURE_COORD30_EXT
 0x87BB

	)

3390 
	#GL_OUTPUT_TEXTURE_COORD31_EXT
 0x87BC

	)

3391 
	#GL_OUTPUT_FOG_EXT
 0x87BD

	)

3392 
	#GL_SCALAR_EXT
 0x87BE

	)

3393 
	#GL_VECTOR_EXT
 0x87BF

	)

3394 
	#GL_MATRIX_EXT
 0x87C0

	)

3395 
	#GL_VARIANT_EXT
 0x87C1

	)

3396 
	#GL_INVARIANT_EXT
 0x87C2

	)

3397 
	#GL_LOCAL_CONSTANT_EXT
 0x87C3

	)

3398 
	#GL_LOCAL_EXT
 0x87C4

	)

3399 
	#GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT
 0x87C5

	)

3400 
	#GL_MAX_VERTEX_SHADER_VARIANTS_EXT
 0x87C6

	)

3401 
	#GL_MAX_VERTEX_SHADER_INVARIANTS_EXT
 0x87C7

	)

3402 
	#GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
 0x87C8

	)

3403 
	#GL_MAX_VERTEX_SHADER_LOCALS_EXT
 0x87C9

	)

3404 
	#GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT
 0x87CA

	)

3405 
	#GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT
 0x87CB

	)

3406 
	#GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
 0x87CC

	)

3407 
	#GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT
 0x87CD

	)

3408 
	#GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT
 0x87CE

	)

3409 
	#GL_VERTEX_SHADER_INSTRUCTIONS_EXT
 0x87CF

	)

3410 
	#GL_VERTEX_SHADER_VARIANTS_EXT
 0x87D0

	)

3411 
	#GL_VERTEX_SHADER_INVARIANTS_EXT
 0x87D1

	)

3412 
	#GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
 0x87D2

	)

3413 
	#GL_VERTEX_SHADER_LOCALS_EXT
 0x87D3

	)

3414 
	#GL_VERTEX_SHADER_OPTIMIZED_EXT
 0x87D4

	)

3415 
	#GL_X_EXT
 0x87D5

	)

3416 
	#GL_Y_EXT
 0x87D6

	)

3417 
	#GL_Z_EXT
 0x87D7

	)

3418 
	#GL_W_EXT
 0x87D8

	)

3419 
	#GL_NEGATIVE_X_EXT
 0x87D9

	)

3420 
	#GL_NEGATIVE_Y_EXT
 0x87DA

	)

3421 
	#GL_NEGATIVE_Z_EXT
 0x87DB

	)

3422 
	#GL_NEGATIVE_W_EXT
 0x87DC

	)

3423 
	#GL_ZERO_EXT
 0x87DD

	)

3424 
	#GL_ONE_EXT
 0x87DE

	)

3425 
	#GL_NEGATIVE_ONE_EXT
 0x87DF

	)

3426 
	#GL_NORMALIZED_RANGE_EXT
 0x87E0

	)

3427 
	#GL_FULL_RANGE_EXT
 0x87E1

	)

3428 
	#GL_CURRENT_VERTEX_EXT
 0x87E2

	)

3429 
	#GL_MVP_MATRIX_EXT
 0x87E3

	)

3430 
	#GL_VARIANT_VALUE_EXT
 0x87E4

	)

3431 
	#GL_VARIANT_DATATYPE_EXT
 0x87E5

	)

3432 
	#GL_VARIANT_ARRAY_STRIDE_EXT
 0x87E6

	)

3433 
	#GL_VARIANT_ARRAY_TYPE_EXT
 0x87E7

	)

3434 
	#GL_VARIANT_ARRAY_EXT
 0x87E8

	)

3435 
	#GL_VARIANT_ARRAY_POINTER_EXT
 0x87E9

	)

3436 
	#GL_INVARIANT_VALUE_EXT
 0x87EA

	)

3437 
	#GL_INVARIANT_DATATYPE_EXT
 0x87EB

	)

3438 
	#GL_LOCAL_CONSTANT_VALUE_EXT
 0x87EC

	)

3439 
	#GL_LOCAL_CONSTANT_DATATYPE_EXT
 0x87ED

	)

3442 #i‚de‡
GL_ATI_vîãx_°ªams


3443 
	#GL_MAX_VERTEX_STREAMS_ATI
 0x876B

	)

3444 
	#GL_VERTEX_STREAM0_ATI
 0x876C

	)

3445 
	#GL_VERTEX_STREAM1_ATI
 0x876D

	)

3446 
	#GL_VERTEX_STREAM2_ATI
 0x876E

	)

3447 
	#GL_VERTEX_STREAM3_ATI
 0x876F

	)

3448 
	#GL_VERTEX_STREAM4_ATI
 0x8770

	)

3449 
	#GL_VERTEX_STREAM5_ATI
 0x8771

	)

3450 
	#GL_VERTEX_STREAM6_ATI
 0x8772

	)

3451 
	#GL_VERTEX_STREAM7_ATI
 0x8773

	)

3452 
	#GL_VERTEX_SOURCE_ATI
 0x8774

	)

3455 #i‚de‡
GL_ATI_ñemít_¨øy


3456 
	#GL_ELEMENT_ARRAY_ATI
 0x8768

	)

3457 
	#GL_ELEMENT_ARRAY_TYPE_ATI
 0x8769

	)

3458 
	#GL_ELEMENT_ARRAY_POINTER_ATI
 0x876A

	)

3461 #i‚de‡
GL_SUN_mesh_¨øy


3462 
	#GL_QUAD_MESH_SUN
 0x8614

	)

3463 
	#GL_TRIANGLE_MESH_SUN
 0x8615

	)

3466 #i‚de‡
GL_SUN_¶i˚_accum


3467 
	#GL_SLICE_ACCUM_SUN
 0x85CC

	)

3470 #i‚de‡
GL_NV_mu…ißm∂e_fûãr_höt


3471 
	#GL_MULTISAMPLE_FILTER_HINT_NV
 0x8534

	)

3474 #i‚de‡
GL_NV_dïth_˛amp


3475 
	#GL_DEPTH_CLAMP_NV
 0x864F

	)

3478 #i‚de‡
GL_NV_oc˛usi⁄_quîy


3479 
	#GL_PIXEL_COUNTER_BITS_NV
 0x8864

	)

3480 
	#GL_CURRENT_OCCLUSION_QUERY_ID_NV
 0x8865

	)

3481 
	#GL_PIXEL_COUNT_NV
 0x8866

	)

3482 
	#GL_PIXEL_COUNT_AVAILABLE_NV
 0x8867

	)

3485 #i‚de‡
GL_NV_poöt_•rôe


3486 
	#GL_POINT_SPRITE_NV
 0x8861

	)

3487 
	#GL_COORD_REPLACE_NV
 0x8862

	)

3488 
	#GL_POINT_SPRITE_R_MODE_NV
 0x8863

	)

3491 #i‚de‡
GL_NV_ãxtuª_shadî3


3492 
	#GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV
 0x8850

	)

3493 
	#GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV
 0x8851

	)

3494 
	#GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV
 0x8852

	)

3495 
	#GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV
 0x8853

	)

3496 
	#GL_OFFSET_HILO_TEXTURE_2D_NV
 0x8854

	)

3497 
	#GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV
 0x8855

	)

3498 
	#GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV
 0x8856

	)

3499 
	#GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV
 0x8857

	)

3500 
	#GL_DEPENDENT_HILO_TEXTURE_2D_NV
 0x8858

	)

3501 
	#GL_DEPENDENT_RGB_TEXTURE_3D_NV
 0x8859

	)

3502 
	#GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV
 0x885A

	)

3503 
	#GL_DOT_PRODUCT_PASS_THROUGH_NV
 0x885B

	)

3504 
	#GL_DOT_PRODUCT_TEXTURE_1D_NV
 0x885C

	)

3505 
	#GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV
 0x885D

	)

3506 
	#GL_HILO8_NV
 0x885E

	)

3507 
	#GL_SIGNED_HILO8_NV
 0x885F

	)

3508 
	#GL_FORCE_BLUE_TO_ONE_NV
 0x8860

	)

3511 #i‚de‡
GL_NV_vîãx_¥ogøm1_1


3514 #i‚de‡
GL_EXT_shadow_funcs


3517 #i‚de‡
GL_EXT_°ícû_two_side


3518 
	#GL_STENCIL_TEST_TWO_SIDE_EXT
 0x8910

	)

3519 
	#GL_ACTIVE_STENCIL_FACE_EXT
 0x8911

	)

3522 #i‚de‡
GL_ATI_ãxt_‰agmít_shadî


3523 
	#GL_TEXT_FRAGMENT_SHADER_ATI
 0x8200

	)

3526 #i‚de‡
GL_APPLE_˛õ¡_°‹age


3527 
	#GL_UNPACK_CLIENT_STORAGE_APPLE
 0x85B2

	)

3530 #i‚de‡
GL_APPLE_ñemít_¨øy


3531 
	#GL_ELEMENT_ARRAY_APPLE
 0x8768

	)

3532 
	#GL_ELEMENT_ARRAY_TYPE_APPLE
 0x8769

	)

3533 
	#GL_ELEMENT_ARRAY_POINTER_APPLE
 0x876A

	)

3536 #i‚de‡
GL_APPLE_„n˚


3537 
	#GL_DRAW_PIXELS_APPLE
 0x8A0A

	)

3538 
	#GL_FENCE_APPLE
 0x8A0B

	)

3541 #i‚de‡
GL_APPLE_vîãx_¨øy_obje˘


3542 
	#GL_VERTEX_ARRAY_BINDING_APPLE
 0x85B5

	)

3545 #i‚de‡
GL_APPLE_vîãx_¨øy_ønge


3546 
	#GL_VERTEX_ARRAY_RANGE_APPLE
 0x851D

	)

3547 
	#GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE
 0x851E

	)

3548 
	#GL_VERTEX_ARRAY_STORAGE_HINT_APPLE
 0x851F

	)

3549 
	#GL_VERTEX_ARRAY_RANGE_POINTER_APPLE
 0x8521

	)

3550 
	#GL_STORAGE_CACHED_APPLE
 0x85BE

	)

3551 
	#GL_STORAGE_SHARED_APPLE
 0x85BF

	)

3554 #i‚de‡
GL_APPLE_ycb¸_422


3555 
	#GL_YCBCR_422_APPLE
 0x85B9

	)

3556 
	#GL_UNSIGNED_SHORT_8_8_APPLE
 0x85BA

	)

3557 
	#GL_UNSIGNED_SHORT_8_8_REV_APPLE
 0x85BB

	)

3560 #i‚de‡
GL_S3_s3tc


3561 
	#GL_RGB_S3TC
 0x83A0

	)

3562 
	#GL_RGB4_S3TC
 0x83A1

	)

3563 
	#GL_RGBA_S3TC
 0x83A2

	)

3564 
	#GL_RGBA4_S3TC
 0x83A3

	)

3567 #i‚de‡
GL_ATI_døw_buf„rs


3568 
	#GL_MAX_DRAW_BUFFERS_ATI
 0x8824

	)

3569 
	#GL_DRAW_BUFFER0_ATI
 0x8825

	)

3570 
	#GL_DRAW_BUFFER1_ATI
 0x8826

	)

3571 
	#GL_DRAW_BUFFER2_ATI
 0x8827

	)

3572 
	#GL_DRAW_BUFFER3_ATI
 0x8828

	)

3573 
	#GL_DRAW_BUFFER4_ATI
 0x8829

	)

3574 
	#GL_DRAW_BUFFER5_ATI
 0x882A

	)

3575 
	#GL_DRAW_BUFFER6_ATI
 0x882B

	)

3576 
	#GL_DRAW_BUFFER7_ATI
 0x882C

	)

3577 
	#GL_DRAW_BUFFER8_ATI
 0x882D

	)

3578 
	#GL_DRAW_BUFFER9_ATI
 0x882E

	)

3579 
	#GL_DRAW_BUFFER10_ATI
 0x882F

	)

3580 
	#GL_DRAW_BUFFER11_ATI
 0x8830

	)

3581 
	#GL_DRAW_BUFFER12_ATI
 0x8831

	)

3582 
	#GL_DRAW_BUFFER13_ATI
 0x8832

	)

3583 
	#GL_DRAW_BUFFER14_ATI
 0x8833

	)

3584 
	#GL_DRAW_BUFFER15_ATI
 0x8834

	)

3587 #i‚de‡
GL_ATI_pixñ_f‹m©_Êﬂt


3588 
	#GL_TYPE_RGBA_FLOAT_ATI
 0x8820

	)

3589 
	#GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI
 0x8835

	)

3592 #i‚de‡
GL_ATI_ãxtuª_ív_comböe3


3593 
	#GL_MODULATE_ADD_ATI
 0x8744

	)

3594 
	#GL_MODULATE_SIGNED_ADD_ATI
 0x8745

	)

3595 
	#GL_MODULATE_SUBTRACT_ATI
 0x8746

	)

3598 #i‚de‡
GL_ATI_ãxtuª_Êﬂt


3599 
	#GL_RGBA_FLOAT32_ATI
 0x8814

	)

3600 
	#GL_RGB_FLOAT32_ATI
 0x8815

	)

3601 
	#GL_ALPHA_FLOAT32_ATI
 0x8816

	)

3602 
	#GL_INTENSITY_FLOAT32_ATI
 0x8817

	)

3603 
	#GL_LUMINANCE_FLOAT32_ATI
 0x8818

	)

3604 
	#GL_LUMINANCE_ALPHA_FLOAT32_ATI
 0x8819

	)

3605 
	#GL_RGBA_FLOAT16_ATI
 0x881A

	)

3606 
	#GL_RGB_FLOAT16_ATI
 0x881B

	)

3607 
	#GL_ALPHA_FLOAT16_ATI
 0x881C

	)

3608 
	#GL_INTENSITY_FLOAT16_ATI
 0x881D

	)

3609 
	#GL_LUMINANCE_FLOAT16_ATI
 0x881E

	)

3610 
	#GL_LUMINANCE_ALPHA_FLOAT16_ATI
 0x881F

	)

3613 #i‚de‡
GL_NV_Êﬂt_buf„r


3614 
	#GL_FLOAT_R_NV
 0x8880

	)

3615 
	#GL_FLOAT_RG_NV
 0x8881

	)

3616 
	#GL_FLOAT_RGB_NV
 0x8882

	)

3617 
	#GL_FLOAT_RGBA_NV
 0x8883

	)

3618 
	#GL_FLOAT_R16_NV
 0x8884

	)

3619 
	#GL_FLOAT_R32_NV
 0x8885

	)

3620 
	#GL_FLOAT_RG16_NV
 0x8886

	)

3621 
	#GL_FLOAT_RG32_NV
 0x8887

	)

3622 
	#GL_FLOAT_RGB16_NV
 0x8888

	)

3623 
	#GL_FLOAT_RGB32_NV
 0x8889

	)

3624 
	#GL_FLOAT_RGBA16_NV
 0x888A

	)

3625 
	#GL_FLOAT_RGBA32_NV
 0x888B

	)

3626 
	#GL_TEXTURE_FLOAT_COMPONENTS_NV
 0x888C

	)

3627 
	#GL_FLOAT_CLEAR_COLOR_VALUE_NV
 0x888D

	)

3628 
	#GL_FLOAT_RGBA_MODE_NV
 0x888E

	)

3631 #i‚de‡
GL_NV_‰agmít_¥ogøm


3632 
	#GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV
 0x8868

	)

3633 
	#GL_FRAGMENT_PROGRAM_NV
 0x8870

	)

3634 
	#GL_MAX_TEXTURE_COORDS_NV
 0x8871

	)

3635 
	#GL_MAX_TEXTURE_IMAGE_UNITS_NV
 0x8872

	)

3636 
	#GL_FRAGMENT_PROGRAM_BINDING_NV
 0x8873

	)

3637 
	#GL_PROGRAM_ERROR_STRING_NV
 0x8874

	)

3640 #i‚de‡
GL_NV_hÆf_Êﬂt


3641 
	#GL_HALF_FLOAT_NV
 0x140B

	)

3644 #i‚de‡
GL_NV_pixñ_d©a_ønge


3645 
	#GL_WRITE_PIXEL_DATA_RANGE_NV
 0x8878

	)

3646 
	#GL_READ_PIXEL_DATA_RANGE_NV
 0x8879

	)

3647 
	#GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV
 0x887A

	)

3648 
	#GL_READ_PIXEL_DATA_RANGE_LENGTH_NV
 0x887B

	)

3649 
	#GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV
 0x887C

	)

3650 
	#GL_READ_PIXEL_DATA_RANGE_POINTER_NV
 0x887D

	)

3653 #i‚de‡
GL_NV_¥imôive_ª°¨t


3654 
	#GL_PRIMITIVE_RESTART_NV
 0x8558

	)

3655 
	#GL_PRIMITIVE_RESTART_INDEX_NV
 0x8559

	)

3658 #i‚de‡
GL_NV_ãxtuª_ex∑nd_n‹mÆ


3659 
	#GL_TEXTURE_UNSIGNED_REMAP_MODE_NV
 0x888F

	)

3662 #i‚de‡
GL_NV_vîãx_¥ogøm2


3665 #i‚de‡
GL_ATI_m≠_obje˘_buf„r


3668 #i‚de‡
GL_ATI_£∑øã_°ícû


3669 
	#GL_STENCIL_BACK_FUNC_ATI
 0x8800

	)

3670 
	#GL_STENCIL_BACK_FAIL_ATI
 0x8801

	)

3671 
	#GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI
 0x8802

	)

3672 
	#GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI
 0x8803

	)

3675 #i‚de‡
GL_ATI_vîãx_©åib_¨øy_obje˘


3678 #i‚de‡
GL_OES_ªad_f‹m©


3679 
	#GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
 0x8B9A

	)

3680 
	#GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
 0x8B9B

	)

3683 #i‚de‡
GL_EXT_dïth_bounds_ã°


3684 
	#GL_DEPTH_BOUNDS_TEST_EXT
 0x8890

	)

3685 
	#GL_DEPTH_BOUNDS_EXT
 0x8891

	)

3688 #i‚de‡
GL_EXT_ãxtuª_múr‹_˛amp


3689 
	#GL_MIRROR_CLAMP_EXT
 0x8742

	)

3690 
	#GL_MIRROR_CLAMP_TO_EDGE_EXT
 0x8743

	)

3691 
	#GL_MIRROR_CLAMP_TO_BORDER_EXT
 0x8912

	)

3694 #i‚de‡
GL_EXT_bÀnd_equ©i⁄_£∑øã


3695 
	#GL_BLEND_EQUATION_RGB_EXT
 0x8009

	)

3696 
	#GL_BLEND_EQUATION_ALPHA_EXT
 0x883D

	)

3699 #i‚de‡
GL_MESA_∑ck_övît


3700 
	#GL_PACK_INVERT_MESA
 0x8758

	)

3703 #i‚de‡
GL_MESA_ycb¸_ãxtuª


3704 
	#GL_UNSIGNED_SHORT_8_8_MESA
 0x85BA

	)

3705 
	#GL_UNSIGNED_SHORT_8_8_REV_MESA
 0x85BB

	)

3706 
	#GL_YCBCR_MESA
 0x8757

	)

3709 #i‚de‡
GL_EXT_pixñ_buf„r_obje˘


3710 
	#GL_PIXEL_PACK_BUFFER_EXT
 0x88EB

	)

3711 
	#GL_PIXEL_UNPACK_BUFFER_EXT
 0x88EC

	)

3712 
	#GL_PIXEL_PACK_BUFFER_BINDING_EXT
 0x88ED

	)

3713 
	#GL_PIXEL_UNPACK_BUFFER_BINDING_EXT
 0x88EF

	)

3716 #i‚de‡
GL_NV_‰agmít_¥ogøm_›ti⁄


3719 #i‚de‡
GL_NV_‰agmít_¥ogøm2


3720 
	#GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV
 0x88F4

	)

3721 
	#GL_MAX_PROGRAM_CALL_DEPTH_NV
 0x88F5

	)

3722 
	#GL_MAX_PROGRAM_IF_DEPTH_NV
 0x88F6

	)

3723 
	#GL_MAX_PROGRAM_LOOP_DEPTH_NV
 0x88F7

	)

3724 
	#GL_MAX_PROGRAM_LOOP_COUNT_NV
 0x88F8

	)

3727 #i‚de‡
GL_NV_vîãx_¥ogøm2_›ti⁄


3732 #i‚de‡
GL_NV_vîãx_¥ogøm3


3736 #i‚de‡
GL_EXT_‰amebuf„r_obje˘


3737 
	#GL_INVALID_FRAMEBUFFER_OPERATION_EXT
 0x0506

	)

3738 
	#GL_MAX_RENDERBUFFER_SIZE_EXT
 0x84E8

	)

3739 
	#GL_FRAMEBUFFER_BINDING_EXT
 0x8CA6

	)

3740 
	#GL_RENDERBUFFER_BINDING_EXT
 0x8CA7

	)

3741 
	#GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
 0x8CD0

	)

3742 
	#GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
 0x8CD1

	)

3743 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
 0x8CD2

	)

3744 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
 0x8CD3

	)

3745 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
 0x8CD4

	)

3746 
	#GL_FRAMEBUFFER_COMPLETE_EXT
 0x8CD5

	)

3747 
	#GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
 0x8CD6

	)

3748 
	#GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
 0x8CD7

	)

3749 
	#GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
 0x8CD9

	)

3750 
	#GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
 0x8CDA

	)

3751 
	#GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
 0x8CDB

	)

3752 
	#GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
 0x8CDC

	)

3753 
	#GL_FRAMEBUFFER_UNSUPPORTED_EXT
 0x8CDD

	)

3754 
	#GL_MAX_COLOR_ATTACHMENTS_EXT
 0x8CDF

	)

3755 
	#GL_COLOR_ATTACHMENT0_EXT
 0x8CE0

	)

3756 
	#GL_COLOR_ATTACHMENT1_EXT
 0x8CE1

	)

3757 
	#GL_COLOR_ATTACHMENT2_EXT
 0x8CE2

	)

3758 
	#GL_COLOR_ATTACHMENT3_EXT
 0x8CE3

	)

3759 
	#GL_COLOR_ATTACHMENT4_EXT
 0x8CE4

	)

3760 
	#GL_COLOR_ATTACHMENT5_EXT
 0x8CE5

	)

3761 
	#GL_COLOR_ATTACHMENT6_EXT
 0x8CE6

	)

3762 
	#GL_COLOR_ATTACHMENT7_EXT
 0x8CE7

	)

3763 
	#GL_COLOR_ATTACHMENT8_EXT
 0x8CE8

	)

3764 
	#GL_COLOR_ATTACHMENT9_EXT
 0x8CE9

	)

3765 
	#GL_COLOR_ATTACHMENT10_EXT
 0x8CEA

	)

3766 
	#GL_COLOR_ATTACHMENT11_EXT
 0x8CEB

	)

3767 
	#GL_COLOR_ATTACHMENT12_EXT
 0x8CEC

	)

3768 
	#GL_COLOR_ATTACHMENT13_EXT
 0x8CED

	)

3769 
	#GL_COLOR_ATTACHMENT14_EXT
 0x8CEE

	)

3770 
	#GL_COLOR_ATTACHMENT15_EXT
 0x8CEF

	)

3771 
	#GL_DEPTH_ATTACHMENT_EXT
 0x8D00

	)

3772 
	#GL_STENCIL_ATTACHMENT_EXT
 0x8D20

	)

3773 
	#GL_FRAMEBUFFER_EXT
 0x8D40

	)

3774 
	#GL_RENDERBUFFER_EXT
 0x8D41

	)

3775 
	#GL_RENDERBUFFER_WIDTH_EXT
 0x8D42

	)

3776 
	#GL_RENDERBUFFER_HEIGHT_EXT
 0x8D43

	)

3777 
	#GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
 0x8D44

	)

3778 
	#GL_STENCIL_INDEX1_EXT
 0x8D46

	)

3779 
	#GL_STENCIL_INDEX4_EXT
 0x8D47

	)

3780 
	#GL_STENCIL_INDEX8_EXT
 0x8D48

	)

3781 
	#GL_STENCIL_INDEX16_EXT
 0x8D49

	)

3782 
	#GL_RENDERBUFFER_RED_SIZE_EXT
 0x8D50

	)

3783 
	#GL_RENDERBUFFER_GREEN_SIZE_EXT
 0x8D51

	)

3784 
	#GL_RENDERBUFFER_BLUE_SIZE_EXT
 0x8D52

	)

3785 
	#GL_RENDERBUFFER_ALPHA_SIZE_EXT
 0x8D53

	)

3786 
	#GL_RENDERBUFFER_DEPTH_SIZE_EXT
 0x8D54

	)

3787 
	#GL_RENDERBUFFER_STENCIL_SIZE_EXT
 0x8D55

	)

3790 #i‚de‡
GL_GREMEDY_°rög_m¨kî


3793 #i‚de‡
GL_EXT_∑cked_dïth_°ícû


3794 
	#GL_DEPTH_STENCIL_EXT
 0x84F9

	)

3795 
	#GL_UNSIGNED_INT_24_8_EXT
 0x84FA

	)

3796 
	#GL_DEPTH24_STENCIL8_EXT
 0x88F0

	)

3797 
	#GL_TEXTURE_STENCIL_SIZE_EXT
 0x88F1

	)

3800 #i‚de‡
GL_EXT_°ícû_˛ór_èg


3801 
	#GL_STENCIL_TAG_BITS_EXT
 0x88F2

	)

3802 
	#GL_STENCIL_CLEAR_TAG_VALUE_EXT
 0x88F3

	)

3805 #i‚de‡
GL_EXT_ãxtuª_sRGB


3806 
	#GL_SRGB_EXT
 0x8C40

	)

3807 
	#GL_SRGB8_EXT
 0x8C41

	)

3808 
	#GL_SRGB_ALPHA_EXT
 0x8C42

	)

3809 
	#GL_SRGB8_ALPHA8_EXT
 0x8C43

	)

3810 
	#GL_SLUMINANCE_ALPHA_EXT
 0x8C44

	)

3811 
	#GL_SLUMINANCE8_ALPHA8_EXT
 0x8C45

	)

3812 
	#GL_SLUMINANCE_EXT
 0x8C46

	)

3813 
	#GL_SLUMINANCE8_EXT
 0x8C47

	)

3814 
	#GL_COMPRESSED_SRGB_EXT
 0x8C48

	)

3815 
	#GL_COMPRESSED_SRGB_ALPHA_EXT
 0x8C49

	)

3816 
	#GL_COMPRESSED_SLUMINANCE_EXT
 0x8C4A

	)

3817 
	#GL_COMPRESSED_SLUMINANCE_ALPHA_EXT
 0x8C4B

	)

3818 
	#GL_COMPRESSED_SRGB_S3TC_DXT1_EXT
 0x8C4C

	)

3819 
	#GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT
 0x8C4D

	)

3820 
	#GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT
 0x8C4E

	)

3821 
	#GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT
 0x8C4F

	)

3824 #i‚de‡
GL_EXT_‰amebuf„r_blô


3825 
	#GL_READ_FRAMEBUFFER_EXT
 0x8CA8

	)

3826 
	#GL_DRAW_FRAMEBUFFER_EXT
 0x8CA9

	)

3827 
	#GL_DRAW_FRAMEBUFFER_BINDING_EXT
 
GL_FRAMEBUFFER_BINDING_EXT


	)

3828 
	#GL_READ_FRAMEBUFFER_BINDING_EXT
 0x8CAA

	)

3831 #i‚de‡
GL_EXT_‰amebuf„r_mu…ißm∂e


3832 
	#GL_RENDERBUFFER_SAMPLES_EXT
 0x8CAB

	)

3833 
	#GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
 0x8D56

	)

3834 
	#GL_MAX_SAMPLES_EXT
 0x8D57

	)

3837 #i‚de‡
GL_MESAX_ãxtuª_°ack


3838 
	#GL_TEXTURE_1D_STACK_MESAX
 0x8759

	)

3839 
	#GL_TEXTURE_2D_STACK_MESAX
 0x875A

	)

3840 
	#GL_PROXY_TEXTURE_1D_STACK_MESAX
 0x875B

	)

3841 
	#GL_PROXY_TEXTURE_2D_STACK_MESAX
 0x875C

	)

3842 
	#GL_TEXTURE_1D_STACK_BINDING_MESAX
 0x875D

	)

3843 
	#GL_TEXTURE_2D_STACK_BINDING_MESAX
 0x875E

	)

3846 #i‚de‡
GL_EXT_timî_quîy


3847 
	#GL_TIME_ELAPSED_EXT
 0x88BF

	)

3850 #i‚de‡
GL_EXT_gpu_¥ogøm_∑ømëîs


3853 #i‚de‡
GL_APPLE_Êush_buf„r_ønge


3854 
	#GL_BUFFER_SERIALIZED_MODIFY_APPLE
 0x8A12

	)

3855 
	#GL_BUFFER_FLUSHING_UNMAP_APPLE
 0x8A13

	)

3858 #i‚de‡
GL_NV_gpu_¥ogøm4


3859 
	#GL_MIN_PROGRAM_TEXEL_OFFSET_NV
 0x8904

	)

3860 
	#GL_MAX_PROGRAM_TEXEL_OFFSET_NV
 0x8905

	)

3861 
	#GL_PROGRAM_ATTRIB_COMPONENTS_NV
 0x8906

	)

3862 
	#GL_PROGRAM_RESULT_COMPONENTS_NV
 0x8907

	)

3863 
	#GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV
 0x8908

	)

3864 
	#GL_MAX_PROGRAM_RESULT_COMPONENTS_NV
 0x8909

	)

3865 
	#GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV
 0x8DA5

	)

3866 
	#GL_MAX_PROGRAM_GENERIC_RESULTS_NV
 0x8DA6

	)

3869 #i‚de‡
GL_NV_geomëry_¥ogøm4


3870 
	#GL_LINES_ADJACENCY_EXT
 0x000A

	)

3871 
	#GL_LINE_STRIP_ADJACENCY_EXT
 0x000B

	)

3872 
	#GL_TRIANGLES_ADJACENCY_EXT
 0x000C

	)

3873 
	#GL_TRIANGLE_STRIP_ADJACENCY_EXT
 0x000D

	)

3874 
	#GL_GEOMETRY_PROGRAM_NV
 0x8C26

	)

3875 
	#GL_MAX_PROGRAM_OUTPUT_VERTICES_NV
 0x8C27

	)

3876 
	#GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV
 0x8C28

	)

3877 
	#GL_GEOMETRY_VERTICES_OUT_EXT
 0x8DDA

	)

3878 
	#GL_GEOMETRY_INPUT_TYPE_EXT
 0x8DDB

	)

3879 
	#GL_GEOMETRY_OUTPUT_TYPE_EXT
 0x8DDC

	)

3880 
	#GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
 0x8C29

	)

3881 
	#GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
 0x8DA7

	)

3882 
	#GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
 0x8DA8

	)

3883 
	#GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT
 0x8DA9

	)

3884 
	#GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
 0x8CD4

	)

3885 
	#GL_PROGRAM_POINT_SIZE_EXT
 0x8642

	)

3888 #i‚de‡
GL_EXT_geomëry_shadî4


3889 
	#GL_GEOMETRY_SHADER_EXT
 0x8DD9

	)

3894 
	#GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT
 0x8DDD

	)

3895 
	#GL_MAX_VERTEX_VARYING_COMPONENTS_EXT
 0x8DDE

	)

3896 
	#GL_MAX_VARYING_COMPONENTS_EXT
 0x8B4B

	)

3897 
	#GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT
 0x8DDF

	)

3898 
	#GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT
 0x8DE0

	)

3899 
	#GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT
 0x8DE1

	)

3911 #i‚de‡
GL_NV_vîãx_¥ogøm4


3912 
	#GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV
 0x88FD

	)

3915 #i‚de‡
GL_EXT_gpu_shadî4


3916 
	#GL_SAMPLER_1D_ARRAY_EXT
 0x8DC0

	)

3917 
	#GL_SAMPLER_2D_ARRAY_EXT
 0x8DC1

	)

3918 
	#GL_SAMPLER_BUFFER_EXT
 0x8DC2

	)

3919 
	#GL_SAMPLER_1D_ARRAY_SHADOW_EXT
 0x8DC3

	)

3920 
	#GL_SAMPLER_2D_ARRAY_SHADOW_EXT
 0x8DC4

	)

3921 
	#GL_SAMPLER_CUBE_SHADOW_EXT
 0x8DC5

	)

3922 
	#GL_UNSIGNED_INT_VEC2_EXT
 0x8DC6

	)

3923 
	#GL_UNSIGNED_INT_VEC3_EXT
 0x8DC7

	)

3924 
	#GL_UNSIGNED_INT_VEC4_EXT
 0x8DC8

	)

3925 
	#GL_INT_SAMPLER_1D_EXT
 0x8DC9

	)

3926 
	#GL_INT_SAMPLER_2D_EXT
 0x8DCA

	)

3927 
	#GL_INT_SAMPLER_3D_EXT
 0x8DCB

	)

3928 
	#GL_INT_SAMPLER_CUBE_EXT
 0x8DCC

	)

3929 
	#GL_INT_SAMPLER_2D_RECT_EXT
 0x8DCD

	)

3930 
	#GL_INT_SAMPLER_1D_ARRAY_EXT
 0x8DCE

	)

3931 
	#GL_INT_SAMPLER_2D_ARRAY_EXT
 0x8DCF

	)

3932 
	#GL_INT_SAMPLER_BUFFER_EXT
 0x8DD0

	)

3933 
	#GL_UNSIGNED_INT_SAMPLER_1D_EXT
 0x8DD1

	)

3934 
	#GL_UNSIGNED_INT_SAMPLER_2D_EXT
 0x8DD2

	)

3935 
	#GL_UNSIGNED_INT_SAMPLER_3D_EXT
 0x8DD3

	)

3936 
	#GL_UNSIGNED_INT_SAMPLER_CUBE_EXT
 0x8DD4

	)

3937 
	#GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT
 0x8DD5

	)

3938 
	#GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT
 0x8DD6

	)

3939 
	#GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT
 0x8DD7

	)

3940 
	#GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT
 0x8DD8

	)

3943 #i‚de‡
GL_EXT_døw_ö°™˚d


3946 #i‚de‡
GL_EXT_∑cked_Êﬂt


3947 
	#GL_R11F_G11F_B10F_EXT
 0x8C3A

	)

3948 
	#GL_UNSIGNED_INT_10F_11F_11F_REV_EXT
 0x8C3B

	)

3949 
	#GL_RGBA_SIGNED_COMPONENTS_EXT
 0x8C3C

	)

3952 #i‚de‡
GL_EXT_ãxtuª_¨øy


3953 
	#GL_TEXTURE_1D_ARRAY_EXT
 0x8C18

	)

3954 
	#GL_PROXY_TEXTURE_1D_ARRAY_EXT
 0x8C19

	)

3955 
	#GL_TEXTURE_2D_ARRAY_EXT
 0x8C1A

	)

3956 
	#GL_PROXY_TEXTURE_2D_ARRAY_EXT
 0x8C1B

	)

3957 
	#GL_TEXTURE_BINDING_1D_ARRAY_EXT
 0x8C1C

	)

3958 
	#GL_TEXTURE_BINDING_2D_ARRAY_EXT
 0x8C1D

	)

3959 
	#GL_MAX_ARRAY_TEXTURE_LAYERS_EXT
 0x88FF

	)

3960 
	#GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT
 0x884E

	)

3964 #i‚de‡
GL_EXT_ãxtuª_buf„r_obje˘


3965 
	#GL_TEXTURE_BUFFER_EXT
 0x8C2A

	)

3966 
	#GL_MAX_TEXTURE_BUFFER_SIZE_EXT
 0x8C2B

	)

3967 
	#GL_TEXTURE_BINDING_BUFFER_EXT
 0x8C2C

	)

3968 
	#GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT
 0x8C2D

	)

3969 
	#GL_TEXTURE_BUFFER_FORMAT_EXT
 0x8C2E

	)

3972 #i‚de‡
GL_EXT_ãxtuª_com¥essi⁄_œtc


3973 
	#GL_COMPRESSED_LUMINANCE_LATC1_EXT
 0x8C70

	)

3974 
	#GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT
 0x8C71

	)

3975 
	#GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT
 0x8C72

	)

3976 
	#GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT
 0x8C73

	)

3979 #i‚de‡
GL_EXT_ãxtuª_com¥essi⁄_rgtc


3980 
	#GL_COMPRESSED_RED_RGTC1_EXT
 0x8DBB

	)

3981 
	#GL_COMPRESSED_SIGNED_RED_RGTC1_EXT
 0x8DBC

	)

3982 
	#GL_COMPRESSED_RED_GREEN_RGTC2_EXT
 0x8DBD

	)

3983 
	#GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT
 0x8DBE

	)

3986 #i‚de‡
GL_EXT_ãxtuª_sh¨ed_exp⁄ít


3987 
	#GL_RGB9_E5_EXT
 0x8C3D

	)

3988 
	#GL_UNSIGNED_INT_5_9_9_9_REV_EXT
 0x8C3E

	)

3989 
	#GL_TEXTURE_SHARED_SIZE_EXT
 0x8C3F

	)

3992 #i‚de‡
GL_NV_dïth_buf„r_Êﬂt


3993 
	#GL_DEPTH_COMPONENT32F_NV
 0x8DAB

	)

3994 
	#GL_DEPTH32F_STENCIL8_NV
 0x8DAC

	)

3995 
	#GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV
 0x8DAD

	)

3996 
	#GL_DEPTH_BUFFER_FLOAT_MODE_NV
 0x8DAF

	)

3999 #i‚de‡
GL_NV_‰agmít_¥ogøm4


4002 #i‚de‡
GL_NV_‰amebuf„r_mu…ißm∂e_covîage


4003 
	#GL_RENDERBUFFER_COVERAGE_SAMPLES_NV
 0x8CAB

	)

4004 
	#GL_RENDERBUFFER_COLOR_SAMPLES_NV
 0x8E10

	)

4005 
	#GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV
 0x8E11

	)

4006 
	#GL_MULTISAMPLE_COVERAGE_MODES_NV
 0x8E12

	)

4009 #i‚de‡
GL_EXT_‰amebuf„r_sRGB


4010 
	#GL_FRAMEBUFFER_SRGB_EXT
 0x8DB9

	)

4011 
	#GL_FRAMEBUFFER_SRGB_CAPABLE_EXT
 0x8DBA

	)

4014 #i‚de‡
GL_NV_geomëry_shadî4


4017 #i‚de‡
GL_NV_∑ømëî_buf„r_obje˘


4018 
	#GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV
 0x8DA0

	)

4019 
	#GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV
 0x8DA1

	)

4020 
	#GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV
 0x8DA2

	)

4021 
	#GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV
 0x8DA3

	)

4022 
	#GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV
 0x8DA4

	)

4025 #i‚de‡
GL_EXT_døw_buf„rs2


4028 #i‚de‡
GL_NV_å™sf‹m_„edback


4029 
	#GL_BACK_PRIMARY_COLOR_NV
 0x8C77

	)

4030 
	#GL_BACK_SECONDARY_COLOR_NV
 0x8C78

	)

4031 
	#GL_TEXTURE_COORD_NV
 0x8C79

	)

4032 
	#GL_CLIP_DISTANCE_NV
 0x8C7A

	)

4033 
	#GL_VERTEX_ID_NV
 0x8C7B

	)

4034 
	#GL_PRIMITIVE_ID_NV
 0x8C7C

	)

4035 
	#GL_GENERIC_ATTRIB_NV
 0x8C7D

	)

4036 
	#GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
 0x8C7E

	)

4037 
	#GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
 0x8C7F

	)

4038 
	#GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
 0x8C80

	)

4039 
	#GL_ACTIVE_VARYINGS_NV
 0x8C81

	)

4040 
	#GL_ACTIVE_VARYING_MAX_LENGTH_NV
 0x8C82

	)

4041 
	#GL_TRANSFORM_FEEDBACK_VARYINGS_NV
 0x8C83

	)

4042 
	#GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
 0x8C84

	)

4043 
	#GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
 0x8C85

	)

4044 
	#GL_TRANSFORM_FEEDBACK_RECORD_NV
 0x8C86

	)

4045 
	#GL_PRIMITIVES_GENERATED_NV
 0x8C87

	)

4046 
	#GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
 0x8C88

	)

4047 
	#GL_RASTERIZER_DISCARD_NV
 0x8C89

	)

4048 
	#GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_ATTRIBS_NV
 0x8C8A

	)

4049 
	#GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
 0x8C8B

	)

4050 
	#GL_INTERLEAVED_ATTRIBS_NV
 0x8C8C

	)

4051 
	#GL_SEPARATE_ATTRIBS_NV
 0x8C8D

	)

4052 
	#GL_TRANSFORM_FEEDBACK_BUFFER_NV
 0x8C8E

	)

4053 
	#GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
 0x8C8F

	)

4056 #i‚de‡
GL_EXT_bödabÀ_unif‹m


4057 
	#GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
 0x8DE2

	)

4058 
	#GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
 0x8DE3

	)

4059 
	#GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
 0x8DE4

	)

4060 
	#GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
 0x8DED

	)

4061 
	#GL_UNIFORM_BUFFER_EXT
 0x8DEE

	)

4062 
	#GL_UNIFORM_BUFFER_BINDING_EXT
 0x8DEF

	)

4065 #i‚de‡
GL_EXT_ãxtuª_öãgî


4066 
	#GL_RGBA32UI_EXT
 0x8D70

	)

4067 
	#GL_RGB32UI_EXT
 0x8D71

	)

4068 
	#GL_ALPHA32UI_EXT
 0x8D72

	)

4069 
	#GL_INTENSITY32UI_EXT
 0x8D73

	)

4070 
	#GL_LUMINANCE32UI_EXT
 0x8D74

	)

4071 
	#GL_LUMINANCE_ALPHA32UI_EXT
 0x8D75

	)

4072 
	#GL_RGBA16UI_EXT
 0x8D76

	)

4073 
	#GL_RGB16UI_EXT
 0x8D77

	)

4074 
	#GL_ALPHA16UI_EXT
 0x8D78

	)

4075 
	#GL_INTENSITY16UI_EXT
 0x8D79

	)

4076 
	#GL_LUMINANCE16UI_EXT
 0x8D7A

	)

4077 
	#GL_LUMINANCE_ALPHA16UI_EXT
 0x8D7B

	)

4078 
	#GL_RGBA8UI_EXT
 0x8D7C

	)

4079 
	#GL_RGB8UI_EXT
 0x8D7D

	)

4080 
	#GL_ALPHA8UI_EXT
 0x8D7E

	)

4081 
	#GL_INTENSITY8UI_EXT
 0x8D7F

	)

4082 
	#GL_LUMINANCE8UI_EXT
 0x8D80

	)

4083 
	#GL_LUMINANCE_ALPHA8UI_EXT
 0x8D81

	)

4084 
	#GL_RGBA32I_EXT
 0x8D82

	)

4085 
	#GL_RGB32I_EXT
 0x8D83

	)

4086 
	#GL_ALPHA32I_EXT
 0x8D84

	)

4087 
	#GL_INTENSITY32I_EXT
 0x8D85

	)

4088 
	#GL_LUMINANCE32I_EXT
 0x8D86

	)

4089 
	#GL_LUMINANCE_ALPHA32I_EXT
 0x8D87

	)

4090 
	#GL_RGBA16I_EXT
 0x8D88

	)

4091 
	#GL_RGB16I_EXT
 0x8D89

	)

4092 
	#GL_ALPHA16I_EXT
 0x8D8A

	)

4093 
	#GL_INTENSITY16I_EXT
 0x8D8B

	)

4094 
	#GL_LUMINANCE16I_EXT
 0x8D8C

	)

4095 
	#GL_LUMINANCE_ALPHA16I_EXT
 0x8D8D

	)

4096 
	#GL_RGBA8I_EXT
 0x8D8E

	)

4097 
	#GL_RGB8I_EXT
 0x8D8F

	)

4098 
	#GL_ALPHA8I_EXT
 0x8D90

	)

4099 
	#GL_INTENSITY8I_EXT
 0x8D91

	)

4100 
	#GL_LUMINANCE8I_EXT
 0x8D92

	)

4101 
	#GL_LUMINANCE_ALPHA8I_EXT
 0x8D93

	)

4102 
	#GL_RED_INTEGER_EXT
 0x8D94

	)

4103 
	#GL_GREEN_INTEGER_EXT
 0x8D95

	)

4104 
	#GL_BLUE_INTEGER_EXT
 0x8D96

	)

4105 
	#GL_ALPHA_INTEGER_EXT
 0x8D97

	)

4106 
	#GL_RGB_INTEGER_EXT
 0x8D98

	)

4107 
	#GL_RGBA_INTEGER_EXT
 0x8D99

	)

4108 
	#GL_BGR_INTEGER_EXT
 0x8D9A

	)

4109 
	#GL_BGRA_INTEGER_EXT
 0x8D9B

	)

4110 
	#GL_LUMINANCE_INTEGER_EXT
 0x8D9C

	)

4111 
	#GL_LUMINANCE_ALPHA_INTEGER_EXT
 0x8D9D

	)

4112 
	#GL_RGBA_INTEGER_MODE_EXT
 0x8D9E

	)

4115 #i‚de‡
GL_GREMEDY_‰ame_ãrmö©‹


4118 #i‚de‡
GL_NV_c⁄dôi⁄Æ_ªndî


4119 
	#GL_QUERY_WAIT_NV
 0x8E13

	)

4120 
	#GL_QUERY_NO_WAIT_NV
 0x8E14

	)

4121 
	#GL_QUERY_BY_REGION_WAIT_NV
 0x8E15

	)

4122 
	#GL_QUERY_BY_REGION_NO_WAIT_NV
 0x8E16

	)

4125 #i‚de‡
GL_NV_¥e£¡_video


4126 
	#GL_FRAME_NV
 0x8E26

	)

4127 
	#GL_FIELDS_NV
 0x8E27

	)

4128 
	#GL_CURRENT_TIME_NV
 0x8E28

	)

4129 
	#GL_NUM_FILL_STREAMS_NV
 0x8E29

	)

4130 
	#GL_PRESENT_TIME_NV
 0x8E2A

	)

4131 
	#GL_PRESENT_DURATION_NV
 0x8E2B

	)

4134 #i‚de‡
GL_EXT_å™sf‹m_„edback


4135 
	#GL_TRANSFORM_FEEDBACK_BUFFER_EXT
 0x8C8E

	)

4136 
	#GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT
 0x8C84

	)

4137 
	#GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT
 0x8C85

	)

4138 
	#GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT
 0x8C8F

	)

4139 
	#GL_INTERLEAVED_ATTRIBS_EXT
 0x8C8C

	)

4140 
	#GL_SEPARATE_ATTRIBS_EXT
 0x8C8D

	)

4141 
	#GL_PRIMITIVES_GENERATED_EXT
 0x8C87

	)

4142 
	#GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT
 0x8C88

	)

4143 
	#GL_RASTERIZER_DISCARD_EXT
 0x8C89

	)

4144 
	#GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT
 0x8C8A

	)

4145 
	#GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT
 0x8C8B

	)

4146 
	#GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT
 0x8C80

	)

4147 
	#GL_TRANSFORM_FEEDBACK_VARYINGS_EXT
 0x8C83

	)

4148 
	#GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT
 0x8C7F

	)

4149 
	#GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT
 0x8C76

	)

4152 #i‚de‡
GL_EXT_dúe˘_°©e_ac˚ss


4153 
	#GL_PROGRAM_MATRIX_EXT
 0x8E2D

	)

4154 
	#GL_TRANSPOSE_PROGRAM_MATRIX_EXT
 0x8E2E

	)

4155 
	#GL_PROGRAM_MATRIX_STACK_DEPTH_EXT
 0x8E2F

	)

4158 #i‚de‡
GL_EXT_vîãx_¨øy_bgø


4162 #i‚de‡
GL_EXT_ãxtuª_swizzÀ


4163 
	#GL_TEXTURE_SWIZZLE_R_EXT
 0x8E42

	)

4164 
	#GL_TEXTURE_SWIZZLE_G_EXT
 0x8E43

	)

4165 
	#GL_TEXTURE_SWIZZLE_B_EXT
 0x8E44

	)

4166 
	#GL_TEXTURE_SWIZZLE_A_EXT
 0x8E45

	)

4167 
	#GL_TEXTURE_SWIZZLE_RGBA_EXT
 0x8E46

	)

4170 #i‚de‡
GL_NV_ex∂icô_mu…ißm∂e


4171 
	#GL_SAMPLE_POSITION_NV
 0x8E50

	)

4172 
	#GL_SAMPLE_MASK_NV
 0x8E51

	)

4173 
	#GL_SAMPLE_MASK_VALUE_NV
 0x8E52

	)

4174 
	#GL_TEXTURE_BINDING_RENDERBUFFER_NV
 0x8E53

	)

4175 
	#GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV
 0x8E54

	)

4176 
	#GL_TEXTURE_RENDERBUFFER_NV
 0x8E55

	)

4177 
	#GL_SAMPLER_RENDERBUFFER_NV
 0x8E56

	)

4178 
	#GL_INT_SAMPLER_RENDERBUFFER_NV
 0x8E57

	)

4179 
	#GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV
 0x8E58

	)

4180 
	#GL_MAX_SAMPLE_MASK_WORDS_NV
 0x8E59

	)

4183 #i‚de‡
GL_NV_å™sf‹m_„edback2


4184 
	#GL_TRANSFORM_FEEDBACK_NV
 0x8E22

	)

4185 
	#GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
 0x8E23

	)

4186 
	#GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
 0x8E24

	)

4187 
	#GL_TRANSFORM_FEEDBACK_BINDING_NV
 0x8E25

	)

4190 #i‚de‡
GL_ATI_memöfo


4191 
	#GL_VBO_FREE_MEMORY_ATI
 0x87FB

	)

4192 
	#GL_TEXTURE_FREE_MEMORY_ATI
 0x87FC

	)

4193 
	#GL_RENDERBUFFER_FREE_MEMORY_ATI
 0x87FD

	)

4196 #i‚de‡
GL_AMD_≥rf‹m™˚_m⁄ô‹


4197 
	#GL_COUNTER_TYPE_AMD
 0x8BC0

	)

4198 
	#GL_COUNTER_RANGE_AMD
 0x8BC1

	)

4199 
	#GL_UNSIGNED_INT64_AMD
 0x8BC2

	)

4200 
	#GL_PERCENTAGE_AMD
 0x8BC3

	)

4201 
	#GL_PERFMON_RESULT_AVAILABLE_AMD
 0x8BC4

	)

4202 
	#GL_PERFMON_RESULT_SIZE_AMD
 0x8BC5

	)

4203 
	#GL_PERFMON_RESULT_AMD
 0x8BC6

	)

4206 #i‚de‡
GL_AMD_ãxtuª_ãxtuª4


4209 #i‚de‡
GL_AMD_vîãx_shadî_ãs£œt‹


4210 
	#GL_SAMPLER_BUFFER_AMD
 0x9001

	)

4211 
	#GL_INT_SAMPLER_BUFFER_AMD
 0x9002

	)

4212 
	#GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD
 0x9003

	)

4213 
	#GL_TESSELLATION_MODE_AMD
 0x9004

	)

4214 
	#GL_TESSELLATION_FACTOR_AMD
 0x9005

	)

4215 
	#GL_DISCRETE_AMD
 0x9006

	)

4216 
	#GL_CONTINUOUS_AMD
 0x9007

	)

4219 #i‚de‡
GL_EXT_¥ovokög_vîãx


4220 
	#GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT
 0x8E4C

	)

4221 
	#GL_FIRST_VERTEX_CONVENTION_EXT
 0x8E4D

	)

4222 
	#GL_LAST_VERTEX_CONVENTION_EXT
 0x8E4E

	)

4223 
	#GL_PROVOKING_VERTEX_EXT
 0x8E4F

	)

4226 #i‚de‡
GL_EXT_ãxtuª_¢‹m


4227 
	#GL_ALPHA_SNORM
 0x9010

	)

4228 
	#GL_LUMINANCE_SNORM
 0x9011

	)

4229 
	#GL_LUMINANCE_ALPHA_SNORM
 0x9012

	)

4230 
	#GL_INTENSITY_SNORM
 0x9013

	)

4231 
	#GL_ALPHA8_SNORM
 0x9014

	)

4232 
	#GL_LUMINANCE8_SNORM
 0x9015

	)

4233 
	#GL_LUMINANCE8_ALPHA8_SNORM
 0x9016

	)

4234 
	#GL_INTENSITY8_SNORM
 0x9017

	)

4235 
	#GL_ALPHA16_SNORM
 0x9018

	)

4236 
	#GL_LUMINANCE16_SNORM
 0x9019

	)

4237 
	#GL_LUMINANCE16_ALPHA16_SNORM
 0x901A

	)

4238 
	#GL_INTENSITY16_SNORM
 0x901B

	)

4254 #i‚de‡
GL_AMD_døw_buf„rs_bÀnd


4257 #i‚de‡
GL_APPLE_ãxtuª_ønge


4258 
	#GL_TEXTURE_RANGE_LENGTH_APPLE
 0x85B7

	)

4259 
	#GL_TEXTURE_RANGE_POINTER_APPLE
 0x85B8

	)

4260 
	#GL_TEXTURE_STORAGE_HINT_APPLE
 0x85BC

	)

4261 
	#GL_STORAGE_PRIVATE_APPLE
 0x85BD

	)

4266 #i‚de‡
GL_APPLE_Êﬂt_pixñs


4267 
	#GL_HALF_APPLE
 0x140B

	)

4268 
	#GL_RGBA_FLOAT32_APPLE
 0x8814

	)

4269 
	#GL_RGB_FLOAT32_APPLE
 0x8815

	)

4270 
	#GL_ALPHA_FLOAT32_APPLE
 0x8816

	)

4271 
	#GL_INTENSITY_FLOAT32_APPLE
 0x8817

	)

4272 
	#GL_LUMINANCE_FLOAT32_APPLE
 0x8818

	)

4273 
	#GL_LUMINANCE_ALPHA_FLOAT32_APPLE
 0x8819

	)

4274 
	#GL_RGBA_FLOAT16_APPLE
 0x881A

	)

4275 
	#GL_RGB_FLOAT16_APPLE
 0x881B

	)

4276 
	#GL_ALPHA_FLOAT16_APPLE
 0x881C

	)

4277 
	#GL_INTENSITY_FLOAT16_APPLE
 0x881D

	)

4278 
	#GL_LUMINANCE_FLOAT16_APPLE
 0x881E

	)

4279 
	#GL_LUMINANCE_ALPHA_FLOAT16_APPLE
 0x881F

	)

4280 
	#GL_COLOR_FLOAT_APPLE
 0x8A0F

	)

4283 #i‚de‡
GL_APPLE_vîãx_¥ogøm_evÆu©‹s


4284 
	#GL_VERTEX_ATTRIB_MAP1_APPLE
 0x8A00

	)

4285 
	#GL_VERTEX_ATTRIB_MAP2_APPLE
 0x8A01

	)

4286 
	#GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE
 0x8A02

	)

4287 
	#GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE
 0x8A03

	)

4288 
	#GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE
 0x8A04

	)

4289 
	#GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE
 0x8A05

	)

4290 
	#GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE
 0x8A06

	)

4291 
	#GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE
 0x8A07

	)

4292 
	#GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE
 0x8A08

	)

4293 
	#GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE
 0x8A09

	)

4296 #i‚de‡
GL_APPLE_aux_dïth_°ícû


4297 
	#GL_AUX_DEPTH_STENCIL_APPLE
 0x8A14

	)

4300 #i‚de‡
GL_APPLE_obje˘_purgóbÀ


4301 
	#GL_BUFFER_OBJECT_APPLE
 0x85B3

	)

4302 
	#GL_RELEASED_APPLE
 0x8A19

	)

4303 
	#GL_VOLATILE_APPLE
 0x8A1A

	)

4304 
	#GL_RETAINED_APPLE
 0x8A1B

	)

4305 
	#GL_UNDEFINED_APPLE
 0x8A1C

	)

4306 
	#GL_PURGEABLE_APPLE
 0x8A1D

	)

4309 #i‚de‡
GL_APPLE_row_byãs


4310 
	#GL_PACK_ROW_BYTES_APPLE
 0x8A15

	)

4311 
	#GL_UNPACK_ROW_BYTES_APPLE
 0x8A16

	)

4314 #i‚de‡
GL_APPLE_rgb_422


4315 
	#GL_RGB_422_APPLE
 0x8A1F

	)

4320 #i‚de‡
GL_NV_video_ˇ±uª


4321 
	#GL_VIDEO_BUFFER_NV
 0x9020

	)

4322 
	#GL_VIDEO_BUFFER_BINDING_NV
 0x9021

	)

4323 
	#GL_FIELD_UPPER_NV
 0x9022

	)

4324 
	#GL_FIELD_LOWER_NV
 0x9023

	)

4325 
	#GL_NUM_VIDEO_CAPTURE_STREAMS_NV
 0x9024

	)

4326 
	#GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV
 0x9025

	)

4327 
	#GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV
 0x9026

	)

4328 
	#GL_LAST_VIDEO_CAPTURE_STATUS_NV
 0x9027

	)

4329 
	#GL_VIDEO_BUFFER_PITCH_NV
 0x9028

	)

4330 
	#GL_VIDEO_COLOR_CONVERSION_MATRIX_NV
 0x9029

	)

4331 
	#GL_VIDEO_COLOR_CONVERSION_MAX_NV
 0x902A

	)

4332 
	#GL_VIDEO_COLOR_CONVERSION_MIN_NV
 0x902B

	)

4333 
	#GL_VIDEO_COLOR_CONVERSION_OFFSET_NV
 0x902C

	)

4334 
	#GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV
 0x902D

	)

4335 
	#GL_PARTIAL_SUCCESS_NV
 0x902E

	)

4336 
	#GL_SUCCESS_NV
 0x902F

	)

4337 
	#GL_FAILURE_NV
 0x9030

	)

4338 
	#GL_YCBYCR8_422_NV
 0x9031

	)

4339 
	#GL_YCBAYCR8A_4224_NV
 0x9032

	)

4340 
	#GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV
 0x9033

	)

4341 
	#GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV
 0x9034

	)

4342 
	#GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV
 0x9035

	)

4343 
	#GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV
 0x9036

	)

4344 
	#GL_Z4Y12Z4CB12Z4CR12_444_NV
 0x9037

	)

4345 
	#GL_VIDEO_CAPTURE_FRAME_WIDTH_NV
 0x9038

	)

4346 
	#GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV
 0x9039

	)

4347 
	#GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV
 0x903A

	)

4348 
	#GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV
 0x903B

	)

4349 
	#GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV
 0x903C

	)

4352 #i‚de‡
GL_NV_c›y_image


4355 #i‚de‡
GL_EXT_£∑øã_shadî_obje˘s


4356 
	#GL_ACTIVE_PROGRAM_EXT
 0x8B8D

	)

4359 #i‚de‡
GL_NV_∑ømëî_buf„r_obje˘2


4362 #i‚de‡
GL_NV_shadî_buf„r_lﬂd


4363 
	#GL_BUFFER_GPU_ADDRESS_NV
 0x8F1D

	)

4364 
	#GL_GPU_ADDRESS_NV
 0x8F34

	)

4365 
	#GL_MAX_SHADER_BUFFER_ADDRESS_NV
 0x8F35

	)

4368 #i‚de‡
GL_NV_vîãx_buf„r_unifõd_mem‹y


4369 
	#GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
 0x8F1E

	)

4370 
	#GL_ELEMENT_ARRAY_UNIFIED_NV
 0x8F1F

	)

4371 
	#GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
 0x8F20

	)

4372 
	#GL_VERTEX_ARRAY_ADDRESS_NV
 0x8F21

	)

4373 
	#GL_NORMAL_ARRAY_ADDRESS_NV
 0x8F22

	)

4374 
	#GL_COLOR_ARRAY_ADDRESS_NV
 0x8F23

	)

4375 
	#GL_INDEX_ARRAY_ADDRESS_NV
 0x8F24

	)

4376 
	#GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
 0x8F25

	)

4377 
	#GL_EDGE_FLAG_ARRAY_ADDRESS_NV
 0x8F26

	)

4378 
	#GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
 0x8F27

	)

4379 
	#GL_FOG_COORD_ARRAY_ADDRESS_NV
 0x8F28

	)

4380 
	#GL_ELEMENT_ARRAY_ADDRESS_NV
 0x8F29

	)

4381 
	#GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
 0x8F2A

	)

4382 
	#GL_VERTEX_ARRAY_LENGTH_NV
 0x8F2B

	)

4383 
	#GL_NORMAL_ARRAY_LENGTH_NV
 0x8F2C

	)

4384 
	#GL_COLOR_ARRAY_LENGTH_NV
 0x8F2D

	)

4385 
	#GL_INDEX_ARRAY_LENGTH_NV
 0x8F2E

	)

4386 
	#GL_TEXTURE_COORD_ARRAY_LENGTH_NV
 0x8F2F

	)

4387 
	#GL_EDGE_FLAG_ARRAY_LENGTH_NV
 0x8F30

	)

4388 
	#GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
 0x8F31

	)

4389 
	#GL_FOG_COORD_ARRAY_LENGTH_NV
 0x8F32

	)

4390 
	#GL_ELEMENT_ARRAY_LENGTH_NV
 0x8F33

	)

4393 #i‚de‡
GL_NV_ãxtuª_b¨rõr


4399 
	~<°ddef.h
>

4400 #i‚de‡
GL_VERSION_2_0


4402 
	tGLch¨
;

4405 #i‚de‡
GL_VERSION_1_5


4407 
±rdiff_t
 
	tGLöçå
;

4408 
±rdiff_t
 
	tGLsizeùå
;

4411 #i‚de‡
GL_ARB_vîãx_buf„r_obje˘


4413 
±rdiff_t
 
	tGLöçåARB
;

4414 
±rdiff_t
 
	tGLsizeùåARB
;

4417 #i‚de‡
GL_ARB_shadî_obje˘s


4419 
	tGLch¨ARB
;

4420 
	tGLh™dÀARB
;

4424 #i‚de‡
GL_ARB_hÆf_Êﬂt_pixñ


4425 
	tGLhÆfARB
;

4428 #i‚de‡
GL_NV_hÆf_Êﬂt


4429 
	tGLhÆfNV
;

4432 #i‚de‡
GLEXT_64_TYPES_DEFINED


4434 
	#GLEXT_64_TYPES_DEFINED


	)

4437 #i‡
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

4438 
	~<öây≥s.h
>

4439 #ñi‡
deföed
(
__sun__
Ë|| deföed(
__digôÆ__
)

4440 
	~<öây≥s.h
>

4441 #i‡
deföed
(
__STDC__
)

4442 #i‡
deföed
(
__¨ch64__
Ë|| deföed(
_LP64
)

4443 
	töt64_t
;

4444 
	tuöt64_t
;

4446 
	töt64_t
;

4447 
	tuöt64_t
;

4450 #ñi‡
deföed
–
__VMS
 ) || deföed(
__sgi
)

4451 
	~<öây≥s.h
>

4452 #ñi‡
deföed
(
__SCO__
Ë|| deföed(
__USLC__
)

4453 
	~<°döt.h
>

4454 #ñi‡
deföed
(
__UNIXOS2__
Ë|| deföed(
__SOL64__
)

4455 
	töt32_t
;

4456 
	töt64_t
;

4457 
	tuöt64_t
;

4458 #ñi‡
deföed
(
_WIN32
Ë&& deföed(
__GNUC__
)

4459 
	~<°döt.h
>

4460 #ñi‡
deföed
(
_WIN32
)

4461 
__öt32
 
	töt32_t
;

4462 
__öt64
 
	töt64_t
;

4463 
	t__öt64
 
	tuöt64_t
;

4466 
	~<öây≥s.h
>

4470 #i‚de‡
GL_EXT_timî_quîy


4471 
öt64_t
 
	tGLöt64EXT
;

4472 
uöt64_t
 
	tGLuöt64EXT
;

4475 #i‚de‡
ARB_sync


4476 
öt64_t
 
	tGLöt64
;

4477 
uöt64_t
 
	tGLuöt64
;

4478 
__GLsync
 *
	tGLsync
;

4481 #i‚de‡
GL_VERSION_1_2


4482 
	#GL_VERSION_1_2
 1

	)

4483 #ifde‡
GL_GLEXT_PROTOTYPES


4484 
GLAPI
 
APIENTRY
 
glBÀndCﬁ‹
 (
GL˛ampf
, GLclampf, GLclampf, GLclampf);

4485 
GLAPI
 
APIENTRY
 
glBÀndEqu©i⁄
 (
GLíum
);

4486 
GLAPI
 
APIENTRY
 
glDøwR™geEÀmíts
 (
GLíum
, 
GLuöt
, GLuöt, 
GLsizei
, GLíum, c⁄° 
GLvoid
 *);

4487 
GLAPI
 
APIENTRY
 
glTexImage3D
 (
GLíum
, 
GLöt
, GLöt, 
GLsizei
, GLsizei, GLsizei, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

4488 
GLAPI
 
APIENTRY
 
glTexSubImage3D
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

4489 
GLAPI
 
APIENTRY
 
glC›yTexSubImage3D
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei);

4491 (
APIENTRYP
 
	tPFNGLBLENDCOLORPROC
Ë(
	tGL˛ampf
 
	tªd
, GL˛amp‡
	tgªí
, GL˛amp‡
	tblue
, GL˛amp‡
	tÆpha
);

4492 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONPROC
Ë(
	tGLíum
 
	tmode
);

4493 (
APIENTRYP
 
	tPFNGLDRAWRANGEELEMENTSPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
);

4494 (
APIENTRYP
 
	tPFNGLTEXIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

4495 (
APIENTRYP
 
	tPFNGLTEXSUBIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

4496 (
APIENTRYP
 
	tPFNGLCOPYTEXSUBIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

4499 #i‚de‡
GL_VERSION_1_2_DEPRECATED


4500 
	#GL_VERSION_1_2_DEPRECATED
 1

	)

4501 #ifde‡
GL_GLEXT_PROTOTYPES


4502 
GLAPI
 
APIENTRY
 
glCﬁ‹TabÀ
 (
GLíum
, GLíum, 
GLsizei
, GLíum, GLíum, c⁄° 
GLvoid
 *);

4503 
GLAPI
 
APIENTRY
 
glCﬁ‹TabÀP¨amëîfv
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

4504 
GLAPI
 
APIENTRY
 
glCﬁ‹TabÀP¨amëîiv
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

4505 
GLAPI
 
APIENTRY
 
glC›yCﬁ‹TabÀ
 (
GLíum
, GLíum, 
GLöt
, GLöt, 
GLsizei
);

4506 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀ
 (
GLíum
, GLíum, GLíum, 
GLvoid
 *);

4507 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀP¨amëîfv
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

4508 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀP¨amëîiv
 (
GLíum
, GLíum, 
GLöt
 *);

4509 
GLAPI
 
APIENTRY
 
glCﬁ‹SubTabÀ
 (
GLíum
, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

4510 
GLAPI
 
APIENTRY
 
glC›yCﬁ‹SubTabÀ
 (
GLíum
, 
GLsizei
, 
GLöt
, GLint, GLsizei);

4511 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄Fûãr1D
 (
GLíum
, GLíum, 
GLsizei
, GLíum, GLíum, c⁄° 
GLvoid
 *);

4512 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄Fûãr2D
 (
GLíum
, GLíum, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

4513 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄P¨amëîf
 (
GLíum
, GLíum, 
GLÊﬂt
);

4514 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄P¨amëîfv
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

4515 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄P¨amëîi
 (
GLíum
, GLíum, 
GLöt
);

4516 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄P¨amëîiv
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

4517 
GLAPI
 
APIENTRY
 
glC›yC⁄vﬁuti⁄Fûãr1D
 (
GLíum
, GLíum, 
GLöt
, GLöt, 
GLsizei
);

4518 
GLAPI
 
APIENTRY
 
glC›yC⁄vﬁuti⁄Fûãr2D
 (
GLíum
, GLíum, 
GLöt
, GLöt, 
GLsizei
, GLsizei);

4519 
GLAPI
 
APIENTRY
 
glGëC⁄vﬁuti⁄Fûãr
 (
GLíum
, GLíum, GLíum, 
GLvoid
 *);

4520 
GLAPI
 
APIENTRY
 
glGëC⁄vﬁuti⁄P¨amëîfv
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

4521 
GLAPI
 
APIENTRY
 
glGëC⁄vﬁuti⁄P¨amëîiv
 (
GLíum
, GLíum, 
GLöt
 *);

4522 
GLAPI
 
APIENTRY
 
glGëSï¨abÀFûãr
 (
GLíum
, GLíum, GLíum, 
GLvoid
 *, GLvoid *, GLvoid *);

4523 
GLAPI
 
APIENTRY
 
glSï¨abÀFûãr2D
 (
GLíum
, GLíum, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *, const GLvoid *);

4524 
GLAPI
 
APIENTRY
 
glGëHi°ogøm
 (
GLíum
, 
GLboﬁón
, GLíum, GLíum, 
GLvoid
 *);

4525 
GLAPI
 
APIENTRY
 
glGëHi°ogømP¨amëîfv
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

4526 
GLAPI
 
APIENTRY
 
glGëHi°ogømP¨amëîiv
 (
GLíum
, GLíum, 
GLöt
 *);

4527 
GLAPI
 
APIENTRY
 
glGëMömax
 (
GLíum
, 
GLboﬁón
, GLíum, GLíum, 
GLvoid
 *);

4528 
GLAPI
 
APIENTRY
 
glGëMömaxP¨amëîfv
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

4529 
GLAPI
 
APIENTRY
 
glGëMömaxP¨amëîiv
 (
GLíum
, GLíum, 
GLöt
 *);

4530 
GLAPI
 
APIENTRY
 
glHi°ogøm
 (
GLíum
, 
GLsizei
, GLíum, 
GLboﬁón
);

4531 
GLAPI
 
APIENTRY
 
glMömax
 (
GLíum
, GLíum, 
GLboﬁón
);

4532 
GLAPI
 
APIENTRY
 
glRe£tHi°ogøm
 (
GLíum
);

4533 
GLAPI
 
APIENTRY
 
glRe£tMömax
 (
GLíum
);

4535 (
APIENTRYP
 
	tPFNGLCOLORTABLEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tèbÀ
);

4536 (
APIENTRYP
 
	tPFNGLCOLORTABLEPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

4537 (
APIENTRYP
 
	tPFNGLCOLORTABLEPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

4538 (
APIENTRYP
 
	tPFNGLCOPYCOLORTABLEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

4539 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	tèbÀ
);

4540 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

4541 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4542 (
APIENTRYP
 
	tPFNGLCOLORSUBTABLEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	t°¨t
, GLsizeò
	tcou¡
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	td©a
);

4543 (
APIENTRYP
 
	tPFNGLCOPYCOLORSUBTABLEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	t°¨t
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLsizeò
	twidth
);

4544 (
APIENTRYP
 
	tPFNGLCONVOLUTIONFILTER1DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	timage
);

4545 (
APIENTRYP
 
	tPFNGLCONVOLUTIONFILTER2DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	timage
);

4546 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERFPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øms
);

4547 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

4548 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øms
);

4549 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

4550 (
APIENTRYP
 
	tPFNGLCOPYCONVOLUTIONFILTER1DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

4551 (
APIENTRYP
 
	tPFNGLCOPYCONVOLUTIONFILTER2DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

4552 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONFILTERPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	timage
);

4553 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

4554 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4555 (
APIENTRYP
 
	tPFNGLGETSEPARABLEFILTERPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	trow
, GLvoid *
	tcﬁumn
, GLvoid *
	t•™
);

4556 (
APIENTRYP
 
	tPFNGLSEPARABLEFILTER2DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	trow
, c⁄° GLvoid *
	tcﬁumn
);

4557 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLboﬁón
 
	tª£t
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	tvÆues
);

4558 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

4559 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4560 (
APIENTRYP
 
	tPFNGLGETMINMAXPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLboﬁón
 
	tª£t
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	tvÆues
);

4561 (
APIENTRYP
 
	tPFNGLGETMINMAXPARAMETERFVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

4562 (
APIENTRYP
 
	tPFNGLGETMINMAXPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4563 (
APIENTRYP
 
	tPFNGLHISTOGRAMPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	twidth
, GLíum 
	töã∫Æf‹m©
, 
	tGLboﬁón
 
	tsök
);

4564 (
APIENTRYP
 
	tPFNGLMINMAXPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLboﬁón
 
	tsök
);

4565 (
APIENTRYP
 
	tPFNGLRESETHISTOGRAMPROC
Ë(
	tGLíum
 
	tèrgë
);

4566 (
APIENTRYP
 
	tPFNGLRESETMINMAXPROC
Ë(
	tGLíum
 
	tèrgë
);

4569 #i‚de‡
GL_VERSION_1_3


4570 
	#GL_VERSION_1_3
 1

	)

4571 #ifde‡
GL_GLEXT_PROTOTYPES


4572 
GLAPI
 
APIENTRY
 
glA˘iveTextuª
 (
GLíum
);

4573 
GLAPI
 
APIENTRY
 
glSam∂eCovîage
 (
GL˛ampf
, 
GLboﬁón
);

4574 
GLAPI
 
APIENTRY
 
glCom¥es£dTexImage3D
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLsizei, GLöt, GLsizei, c⁄° 
GLvoid
 *);

4575 
GLAPI
 
APIENTRY
 
glCom¥es£dTexImage2D
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLöt, GLsizei, c⁄° 
GLvoid
 *);

4576 
GLAPI
 
APIENTRY
 
glCom¥es£dTexImage1D
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLöt, GLsizei, c⁄° 
GLvoid
 *);

4577 
GLAPI
 
APIENTRY
 
glCom¥es£dTexSubImage3D
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLíum, GLsizei, c⁄° 
GLvoid
 *);

4578 
GLAPI
 
APIENTRY
 
glCom¥es£dTexSubImage2D
 (
GLíum
, 
GLöt
, GLöt, GLöt, 
GLsizei
, GLsizei, GLíum, GLsizei, c⁄° 
GLvoid
 *);

4579 
GLAPI
 
APIENTRY
 
glCom¥es£dTexSubImage1D
 (
GLíum
, 
GLöt
, GLöt, 
GLsizei
, GLíum, GLsizei, c⁄° 
GLvoid
 *);

4580 
GLAPI
 
APIENTRY
 
glGëCom¥es£dTexImage
 (
GLíum
, 
GLöt
, 
GLvoid
 *);

4582 (
APIENTRYP
 
	tPFNGLACTIVETEXTUREPROC
Ë(
	tGLíum
 
	tãxtuª
);

4583 (
APIENTRYP
 
	tPFNGLSAMPLECOVERAGEPROC
Ë(
	tGL˛ampf
 
	tvÆue
, 
	tGLboﬁón
 
	tövît
);

4584 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

4585 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE2DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

4586 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE1DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

4587 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

4588 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

4589 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

4590 (
APIENTRYP
 
	tPFNGLGETCOMPRESSEDTEXIMAGEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, 
	tGLvoid
 *
	timg
);

4593 #i‚de‡
GL_VERSION_1_3_DEPRECATED


4594 
	#GL_VERSION_1_3_DEPRECATED
 1

	)

4595 #ifde‡
GL_GLEXT_PROTOTYPES


4596 
GLAPI
 
APIENTRY
 
glClõ¡A˘iveTextuª
 (
GLíum
);

4597 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1d
 (
GLíum
, 
GLdoubÀ
);

4598 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1dv
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

4599 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1f
 (
GLíum
, 
GLÊﬂt
);

4600 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1fv
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

4601 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1i
 (
GLíum
, 
GLöt
);

4602 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1iv
 (
GLíum
, c⁄° 
GLöt
 *);

4603 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1s
 (
GLíum
, 
GLsh‹t
);

4604 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1sv
 (
GLíum
, c⁄° 
GLsh‹t
 *);

4605 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2d
 (
GLíum
, 
GLdoubÀ
, GLdouble);

4606 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2dv
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

4607 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2f
 (
GLíum
, 
GLÊﬂt
, GLfloat);

4608 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2fv
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

4609 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2i
 (
GLíum
, 
GLöt
, GLint);

4610 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2iv
 (
GLíum
, c⁄° 
GLöt
 *);

4611 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2s
 (
GLíum
, 
GLsh‹t
, GLshort);

4612 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2sv
 (
GLíum
, c⁄° 
GLsh‹t
 *);

4613 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3d
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble);

4614 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3dv
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

4615 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3f
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat);

4616 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3fv
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

4617 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3i
 (
GLíum
, 
GLöt
, GLint, GLint);

4618 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3iv
 (
GLíum
, c⁄° 
GLöt
 *);

4619 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3s
 (
GLíum
, 
GLsh‹t
, GLshort, GLshort);

4620 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3sv
 (
GLíum
, c⁄° 
GLsh‹t
 *);

4621 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4d
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

4622 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4dv
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

4623 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4f
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

4624 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4fv
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

4625 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4i
 (
GLíum
, 
GLöt
, GLint, GLint, GLint);

4626 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4iv
 (
GLíum
, c⁄° 
GLöt
 *);

4627 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4s
 (
GLíum
, 
GLsh‹t
, GLshort, GLshort, GLshort);

4628 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4sv
 (
GLíum
, c⁄° 
GLsh‹t
 *);

4629 
GLAPI
 
APIENTRY
 
glLﬂdTøn•o£M©rixf
 (c⁄° 
GLÊﬂt
 *);

4630 
GLAPI
 
APIENTRY
 
glLﬂdTøn•o£M©rixd
 (c⁄° 
GLdoubÀ
 *);

4631 
GLAPI
 
APIENTRY
 
glMu…Tøn•o£M©rixf
 (c⁄° 
GLÊﬂt
 *);

4632 
GLAPI
 
APIENTRY
 
glMu…Tøn•o£M©rixd
 (c⁄° 
GLdoubÀ
 *);

4634 (
APIENTRYP
 
	tPFNGLCLIENTACTIVETEXTUREPROC
Ë(
	tGLíum
 
	tãxtuª
);

4635 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
);

4636 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1DVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

4637 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1FPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
);

4638 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1FVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

4639 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1IPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
);

4640 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1IVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

4641 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1SPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
);

4642 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1SVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

4643 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
);

4644 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2DVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

4645 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2FPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
);

4646 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2FVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

4647 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2IPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
);

4648 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2IVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

4649 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2SPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
);

4650 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2SVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

4651 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
, GLdoubÀ 
	tr
);

4652 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3DVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

4653 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3FPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
);

4654 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3FVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

4655 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3IPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
, GLöà
	tr
);

4656 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3IVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

4657 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3SPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
, GLsh‹à
	tr
);

4658 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3SVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

4659 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4DPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
, GLdoubÀ 
	tr
, GLdoubÀ 
	tq
);

4660 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4DVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

4661 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4FPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tq
);

4662 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4FVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

4663 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4IPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
, GLöà
	tr
, GLöà
	tq
);

4664 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4IVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

4665 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4SPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
, GLsh‹à
	tr
, GLsh‹à
	tq
);

4666 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4SVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

4667 (
APIENTRYP
 
	tPFNGLLOADTRANSPOSEMATRIXFPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tm
);

4668 (
APIENTRYP
 
	tPFNGLLOADTRANSPOSEMATRIXDPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tm
);

4669 (
APIENTRYP
 
	tPFNGLMULTTRANSPOSEMATRIXFPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tm
);

4670 (
APIENTRYP
 
	tPFNGLMULTTRANSPOSEMATRIXDPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tm
);

4673 #i‚de‡
GL_VERSION_1_4


4674 
	#GL_VERSION_1_4
 1

	)

4675 #ifde‡
GL_GLEXT_PROTOTYPES


4676 
GLAPI
 
APIENTRY
 
glBÀndFuncSï¨©e
 (
GLíum
, GLenum, GLenum, GLenum);

4677 
GLAPI
 
APIENTRY
 
glMu…iDøwAºays
 (
GLíum
, 
GLöt
 *, 
GLsizei
 *, GLsizei);

4678 
GLAPI
 
APIENTRY
 
glMu…iDøwEÀmíts
 (
GLíum
, c⁄° 
GLsizei
 *, GLíum, c⁄° 
GLvoid
* *, GLsizei);

4679 
GLAPI
 
APIENTRY
 
glPoötP¨amëîf
 (
GLíum
, 
GLÊﬂt
);

4680 
GLAPI
 
APIENTRY
 
glPoötP¨amëîfv
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

4681 
GLAPI
 
APIENTRY
 
glPoötP¨amëîi
 (
GLíum
, 
GLöt
);

4682 
GLAPI
 
APIENTRY
 
glPoötP¨amëîiv
 (
GLíum
, c⁄° 
GLöt
 *);

4684 (
APIENTRYP
 
	tPFNGLBLENDFUNCSEPARATEPROC
Ë(
	tGLíum
 
	tsÁ˘‹RGB
, GLíum 
	tdÁ˘‹RGB
, GLíum 
	tsÁ˘‹AÕha
, GLíum 
	tdÁ˘‹AÕha
);

4685 (
APIENTRYP
 
	tPFNGLMULTIDRAWARRAYSPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 *
	tfú°
, 
	tGLsizei
 *
	tcou¡
, GLsizeò
	t¥imcou¡
);

4686 (
APIENTRYP
 
	tPFNGLMULTIDRAWELEMENTSPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLsizei
 *
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
* *
	tödi˚s
, GLsizeò
	t¥imcou¡
);

4687 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

4688 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFVPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

4689 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

4690 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERIVPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

4693 #i‚de‡
GL_VERSION_1_4_DEPRECATED


4694 
	#GL_VERSION_1_4_DEPRECATED
 1

	)

4695 #ifde‡
GL_GLEXT_PROTOTYPES


4696 
GLAPI
 
APIENTRY
 
glFogCo‹df
 (
GLÊﬂt
);

4697 
GLAPI
 
APIENTRY
 
glFogCo‹dfv
 (c⁄° 
GLÊﬂt
 *);

4698 
GLAPI
 
APIENTRY
 
glFogCo‹dd
 (
GLdoubÀ
);

4699 
GLAPI
 
APIENTRY
 
glFogCo‹ddv
 (c⁄° 
GLdoubÀ
 *);

4700 
GLAPI
 
APIENTRY
 
glFogCo‹dPoöãr
 (
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

4701 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3b
 (
GLbyã
, GLbyte, GLbyte);

4702 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3bv
 (c⁄° 
GLbyã
 *);

4703 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3d
 (
GLdoubÀ
, GLdouble, GLdouble);

4704 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3dv
 (c⁄° 
GLdoubÀ
 *);

4705 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3f
 (
GLÊﬂt
, GLfloat, GLfloat);

4706 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3fv
 (c⁄° 
GLÊﬂt
 *);

4707 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3i
 (
GLöt
, GLint, GLint);

4708 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3iv
 (c⁄° 
GLöt
 *);

4709 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3s
 (
GLsh‹t
, GLshort, GLshort);

4710 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3sv
 (c⁄° 
GLsh‹t
 *);

4711 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3ub
 (
GLubyã
, GLubyte, GLubyte);

4712 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3ubv
 (c⁄° 
GLubyã
 *);

4713 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3ui
 (
GLuöt
, GLuint, GLuint);

4714 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3uiv
 (c⁄° 
GLuöt
 *);

4715 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3us
 (
GLush‹t
, GLushort, GLushort);

4716 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3usv
 (c⁄° 
GLush‹t
 *);

4717 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹Poöãr
 (
GLöt
, 
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

4718 
GLAPI
 
APIENTRY
 
glWödowPos2d
 (
GLdoubÀ
, GLdouble);

4719 
GLAPI
 
APIENTRY
 
glWödowPos2dv
 (c⁄° 
GLdoubÀ
 *);

4720 
GLAPI
 
APIENTRY
 
glWödowPos2f
 (
GLÊﬂt
, GLfloat);

4721 
GLAPI
 
APIENTRY
 
glWödowPos2fv
 (c⁄° 
GLÊﬂt
 *);

4722 
GLAPI
 
APIENTRY
 
glWödowPos2i
 (
GLöt
, GLint);

4723 
GLAPI
 
APIENTRY
 
glWödowPos2iv
 (c⁄° 
GLöt
 *);

4724 
GLAPI
 
APIENTRY
 
glWödowPos2s
 (
GLsh‹t
, GLshort);

4725 
GLAPI
 
APIENTRY
 
glWödowPos2sv
 (c⁄° 
GLsh‹t
 *);

4726 
GLAPI
 
APIENTRY
 
glWödowPos3d
 (
GLdoubÀ
, GLdouble, GLdouble);

4727 
GLAPI
 
APIENTRY
 
glWödowPos3dv
 (c⁄° 
GLdoubÀ
 *);

4728 
GLAPI
 
APIENTRY
 
glWödowPos3f
 (
GLÊﬂt
, GLfloat, GLfloat);

4729 
GLAPI
 
APIENTRY
 
glWödowPos3fv
 (c⁄° 
GLÊﬂt
 *);

4730 
GLAPI
 
APIENTRY
 
glWödowPos3i
 (
GLöt
, GLint, GLint);

4731 
GLAPI
 
APIENTRY
 
glWödowPos3iv
 (c⁄° 
GLöt
 *);

4732 
GLAPI
 
APIENTRY
 
glWödowPos3s
 (
GLsh‹t
, GLshort, GLshort);

4733 
GLAPI
 
APIENTRY
 
glWödowPos3sv
 (c⁄° 
GLsh‹t
 *);

4735 (
APIENTRYP
 
	tPFNGLFOGCOORDFPROC
Ë(
	tGLÊﬂt
 
	tco‹d
);

4736 (
APIENTRYP
 
	tPFNGLFOGCOORDFVPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tco‹d
);

4737 (
APIENTRYP
 
	tPFNGLFOGCOORDDPROC
Ë(
	tGLdoubÀ
 
	tco‹d
);

4738 (
APIENTRYP
 
	tPFNGLFOGCOORDDVPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tco‹d
);

4739 (
APIENTRYP
 
	tPFNGLFOGCOORDPOINTERPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

4740 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3BPROC
Ë(
	tGLbyã
 
	tªd
, GLbyã 
	tgªí
, GLbyã 
	tblue
);

4741 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3BVPROC
Ë(c⁄° 
	tGLbyã
 *
	tv
);

4742 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3DPROC
Ë(
	tGLdoubÀ
 
	tªd
, GLdoubÀ 
	tgªí
, GLdoubÀ 
	tblue
);

4743 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3DVPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

4744 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3FPROC
Ë(
	tGLÊﬂt
 
	tªd
, GLÊﬂà
	tgªí
, GLÊﬂà
	tblue
);

4745 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3FVPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

4746 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3IPROC
Ë(
	tGLöt
 
	tªd
, GLöà
	tgªí
, GLöà
	tblue
);

4747 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3IVPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

4748 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3SPROC
Ë(
	tGLsh‹t
 
	tªd
, GLsh‹à
	tgªí
, GLsh‹à
	tblue
);

4749 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3SVPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

4750 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UBPROC
Ë(
	tGLubyã
 
	tªd
, GLubyã 
	tgªí
, GLubyã 
	tblue
);

4751 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UBVPROC
Ë(c⁄° 
	tGLubyã
 *
	tv
);

4752 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UIPROC
Ë(
	tGLuöt
 
	tªd
, GLuöà
	tgªí
, GLuöà
	tblue
);

4753 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UIVPROC
Ë(c⁄° 
	tGLuöt
 *
	tv
);

4754 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3USPROC
Ë(
	tGLush‹t
 
	tªd
, GLush‹à
	tgªí
, GLush‹à
	tblue
);

4755 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3USVPROC
Ë(c⁄° 
	tGLush‹t
 *
	tv
);

4756 (
APIENTRYP
 
	tPFNGLSECONDARYCOLORPOINTERPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

4757 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

4758 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DVPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

4759 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

4760 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FVPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

4761 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
);

4762 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IVPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

4763 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

4764 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SVPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

4765 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

4766 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DVPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

4767 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

4768 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FVPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

4769 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

4770 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IVPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

4771 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

4772 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SVPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

4775 #i‚de‡
GL_VERSION_1_5


4776 
	#GL_VERSION_1_5
 1

	)

4777 #ifde‡
GL_GLEXT_PROTOTYPES


4778 
GLAPI
 
APIENTRY
 
glGíQuîõs
 (
GLsizei
, 
GLuöt
 *);

4779 
GLAPI
 
APIENTRY
 
glDñëeQuîõs
 (
GLsizei
, c⁄° 
GLuöt
 *);

4780 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsQuîy
 (
GLuöt
);

4781 
GLAPI
 
APIENTRY
 
glBegöQuîy
 (
GLíum
, 
GLuöt
);

4782 
GLAPI
 
APIENTRY
 
glEndQuîy
 (
GLíum
);

4783 
GLAPI
 
APIENTRY
 
glGëQuîyiv
 (
GLíum
, GLíum, 
GLöt
 *);

4784 
GLAPI
 
APIENTRY
 
glGëQuîyObje˘iv
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

4785 
GLAPI
 
APIENTRY
 
glGëQuîyObje˘uiv
 (
GLuöt
, 
GLíum
, GLuint *);

4786 
GLAPI
 
APIENTRY
 
glBödBuf„r
 (
GLíum
, 
GLuöt
);

4787 
GLAPI
 
APIENTRY
 
glDñëeBuf„rs
 (
GLsizei
, c⁄° 
GLuöt
 *);

4788 
GLAPI
 
APIENTRY
 
glGíBuf„rs
 (
GLsizei
, 
GLuöt
 *);

4789 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsBuf„r
 (
GLuöt
);

4790 
GLAPI
 
APIENTRY
 
glBuf„rD©a
 (
GLíum
, 
GLsizeùå
, c⁄° 
GLvoid
 *, GLenum);

4791 
GLAPI
 
APIENTRY
 
glBuf„rSubD©a
 (
GLíum
, 
GLöçå
, 
GLsizeùå
, c⁄° 
GLvoid
 *);

4792 
GLAPI
 
APIENTRY
 
glGëBuf„rSubD©a
 (
GLíum
, 
GLöçå
, 
GLsizeùå
, 
GLvoid
 *);

4793 
GLAPI
 
GLvoid
* 
APIENTRY
 
glM≠Buf„r
 (
GLíum
, GLenum);

4794 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glUnm≠Buf„r
 (
GLíum
);

4795 
GLAPI
 
APIENTRY
 
glGëBuf„rP¨amëîiv
 (
GLíum
, GLíum, 
GLöt
 *);

4796 
GLAPI
 
APIENTRY
 
glGëBuf„rPoöãrv
 (
GLíum
, GLíum, 
GLvoid
* *);

4798 (
APIENTRYP
 
	tPFNGLGENQUERIESPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tids
);

4799 (
APIENTRYP
 
	tPFNGLDELETEQUERIESPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tids
);

4800 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISQUERYPROC
Ë(
	tGLuöt
 
	tid
);

4801 (
APIENTRYP
 
	tPFNGLBEGINQUERYPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
);

4802 (
APIENTRYP
 
	tPFNGLENDQUERYPROC
Ë(
	tGLíum
 
	tèrgë
);

4803 (
APIENTRYP
 
	tPFNGLGETQUERYIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4804 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTIVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4805 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTUIVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, GLuöà*
	t∑øms
);

4806 (
APIENTRYP
 
	tPFNGLBINDBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tbuf„r
);

4807 (
APIENTRYP
 
	tPFNGLDELETEBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tbuf„rs
);

4808 (
APIENTRYP
 
	tPFNGLGENBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tbuf„rs
);

4809 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISBUFFERPROC
Ë(
	tGLuöt
 
	tbuf„r
);

4810 (
APIENTRYP
 
	tPFNGLBUFFERDATAPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizeùå
 
	tsize
, c⁄° 
	tGLvoid
 *
	td©a
, GLíum 
	tußge
);

4811 (
APIENTRYP
 
	tPFNGLBUFFERSUBDATAPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
, c⁄° 
	tGLvoid
 *
	td©a
);

4812 (
APIENTRYP
 
	tPFNGLGETBUFFERSUBDATAPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
, 
	tGLvoid
 *
	td©a
);

4813 
	gGLvoid
* (
	tAPIENTRYP
 
	tPFNGLMAPBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tac˚ss
);

4814 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLUNMAPBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
);

4815 (
APIENTRYP
 
	tPFNGLGETBUFFERPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4816 (
APIENTRYP
 
	tPFNGLGETBUFFERPOINTERVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLvoid
* *
	t∑øms
);

4819 #i‚de‡
GL_VERSION_2_0


4820 
	#GL_VERSION_2_0
 1

	)

4821 #ifde‡
GL_GLEXT_PROTOTYPES


4822 
GLAPI
 
APIENTRY
 
glBÀndEqu©i⁄Sï¨©e
 (
GLíum
, GLenum);

4823 
GLAPI
 
APIENTRY
 
glDøwBuf„rs
 (
GLsizei
, c⁄° 
GLíum
 *);

4824 
GLAPI
 
APIENTRY
 
glSãncûOpSï¨©e
 (
GLíum
, GLenum, GLenum, GLenum);

4825 
GLAPI
 
APIENTRY
 
glSãncûFuncSï¨©e
 (
GLíum
, GLíum, 
GLöt
, 
GLuöt
);

4826 
GLAPI
 
APIENTRY
 
glSãncûMaskSï¨©e
 (
GLíum
, 
GLuöt
);

4827 
GLAPI
 
APIENTRY
 
glAâachShadî
 (
GLuöt
, GLuint);

4828 
GLAPI
 
APIENTRY
 
glBödAâribLoˇti⁄
 (
GLuöt
, GLuöt, c⁄° 
GLch¨
 *);

4829 
GLAPI
 
APIENTRY
 
glCompûeShadî
 (
GLuöt
);

4830 
GLAPI
 
GLuöt
 
APIENTRY
 
glCª©eProgøm
 ();

4831 
GLAPI
 
GLuöt
 
APIENTRY
 
glCª©eShadî
 (
GLíum
);

4832 
GLAPI
 
APIENTRY
 
glDñëeProgøm
 (
GLuöt
);

4833 
GLAPI
 
APIENTRY
 
glDñëeShadî
 (
GLuöt
);

4834 
GLAPI
 
APIENTRY
 
glDëachShadî
 (
GLuöt
, GLuint);

4835 
GLAPI
 
APIENTRY
 
glDißbÀVîãxAâribAºay
 (
GLuöt
);

4836 
GLAPI
 
APIENTRY
 
glE«bÀVîãxAâribAºay
 (
GLuöt
);

4837 
GLAPI
 
APIENTRY
 
glGëA˘iveAârib
 (
GLuöt
, GLuöt, 
GLsizei
, GLsizeò*, 
GLöt
 *, 
GLíum
 *, 
GLch¨
 *);

4838 
GLAPI
 
APIENTRY
 
glGëA˘iveUnif‹m
 (
GLuöt
, GLuöt, 
GLsizei
, GLsizeò*, 
GLöt
 *, 
GLíum
 *, 
GLch¨
 *);

4839 
GLAPI
 
APIENTRY
 
glGëAâachedShadîs
 (
GLuöt
, 
GLsizei
, GLsizei *, GLuint *);

4840 
GLAPI
 
GLöt
 
APIENTRY
 
glGëAâribLoˇti⁄
 (
GLuöt
, c⁄° 
GLch¨
 *);

4841 
GLAPI
 
APIENTRY
 
glGëProgømiv
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

4842 
GLAPI
 
APIENTRY
 
glGëProgømInfoLog
 (
GLuöt
, 
GLsizei
, GLsizeò*, 
GLch¨
 *);

4843 
GLAPI
 
APIENTRY
 
glGëShadîiv
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

4844 
GLAPI
 
APIENTRY
 
glGëShadîInfoLog
 (
GLuöt
, 
GLsizei
, GLsizeò*, 
GLch¨
 *);

4845 
GLAPI
 
APIENTRY
 
glGëShadîSour˚
 (
GLuöt
, 
GLsizei
, GLsizeò*, 
GLch¨
 *);

4846 
GLAPI
 
GLöt
 
APIENTRY
 
glGëUnif‹mLoˇti⁄
 (
GLuöt
, c⁄° 
GLch¨
 *);

4847 
GLAPI
 
APIENTRY
 
glGëUnif‹mfv
 (
GLuöt
, 
GLöt
, 
GLÊﬂt
 *);

4848 
GLAPI
 
APIENTRY
 
glGëUnif‹miv
 (
GLuöt
, 
GLöt
, GLint *);

4849 
GLAPI
 
APIENTRY
 
glGëVîãxAâribdv
 (
GLuöt
, 
GLíum
, 
GLdoubÀ
 *);

4850 
GLAPI
 
APIENTRY
 
glGëVîãxAâribfv
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

4851 
GLAPI
 
APIENTRY
 
glGëVîãxAâribiv
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

4852 
GLAPI
 
APIENTRY
 
glGëVîãxAâribPoöãrv
 (
GLuöt
, 
GLíum
, 
GLvoid
* *);

4853 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsProgøm
 (
GLuöt
);

4854 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsShadî
 (
GLuöt
);

4855 
GLAPI
 
APIENTRY
 
glLökProgøm
 (
GLuöt
);

4856 
GLAPI
 
APIENTRY
 
glShadîSour˚
 (
GLuöt
, 
GLsizei
, c⁄° 
GLch¨
* *, c⁄° 
GLöt
 *);

4857 
GLAPI
 
APIENTRY
 
glU£Progøm
 (
GLuöt
);

4858 
GLAPI
 
APIENTRY
 
glUnif‹m1f
 (
GLöt
, 
GLÊﬂt
);

4859 
GLAPI
 
APIENTRY
 
glUnif‹m2f
 (
GLöt
, 
GLÊﬂt
, GLfloat);

4860 
GLAPI
 
APIENTRY
 
glUnif‹m3f
 (
GLöt
, 
GLÊﬂt
, GLfloat, GLfloat);

4861 
GLAPI
 
APIENTRY
 
glUnif‹m4f
 (
GLöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

4862 
GLAPI
 
APIENTRY
 
glUnif‹m1i
 (
GLöt
, GLint);

4863 
GLAPI
 
APIENTRY
 
glUnif‹m2i
 (
GLöt
, GLint, GLint);

4864 
GLAPI
 
APIENTRY
 
glUnif‹m3i
 (
GLöt
, GLint, GLint, GLint);

4865 
GLAPI
 
APIENTRY
 
glUnif‹m4i
 (
GLöt
, GLint, GLint, GLint, GLint);

4866 
GLAPI
 
APIENTRY
 
glUnif‹m1fv
 (
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

4867 
GLAPI
 
APIENTRY
 
glUnif‹m2fv
 (
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

4868 
GLAPI
 
APIENTRY
 
glUnif‹m3fv
 (
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

4869 
GLAPI
 
APIENTRY
 
glUnif‹m4fv
 (
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

4870 
GLAPI
 
APIENTRY
 
glUnif‹m1iv
 (
GLöt
, 
GLsizei
, const GLint *);

4871 
GLAPI
 
APIENTRY
 
glUnif‹m2iv
 (
GLöt
, 
GLsizei
, const GLint *);

4872 
GLAPI
 
APIENTRY
 
glUnif‹m3iv
 (
GLöt
, 
GLsizei
, const GLint *);

4873 
GLAPI
 
APIENTRY
 
glUnif‹m4iv
 (
GLöt
, 
GLsizei
, const GLint *);

4874 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix2fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

4875 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix3fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

4876 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix4fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

4877 
GLAPI
 
APIENTRY
 
glVÆid©eProgøm
 (
GLuöt
);

4878 
GLAPI
 
APIENTRY
 
glVîãxAârib1d
 (
GLuöt
, 
GLdoubÀ
);

4879 
GLAPI
 
APIENTRY
 
glVîãxAârib1dv
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

4880 
GLAPI
 
APIENTRY
 
glVîãxAârib1f
 (
GLuöt
, 
GLÊﬂt
);

4881 
GLAPI
 
APIENTRY
 
glVîãxAârib1fv
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

4882 
GLAPI
 
APIENTRY
 
glVîãxAârib1s
 (
GLuöt
, 
GLsh‹t
);

4883 
GLAPI
 
APIENTRY
 
glVîãxAârib1sv
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

4884 
GLAPI
 
APIENTRY
 
glVîãxAârib2d
 (
GLuöt
, 
GLdoubÀ
, GLdouble);

4885 
GLAPI
 
APIENTRY
 
glVîãxAârib2dv
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

4886 
GLAPI
 
APIENTRY
 
glVîãxAârib2f
 (
GLuöt
, 
GLÊﬂt
, GLfloat);

4887 
GLAPI
 
APIENTRY
 
glVîãxAârib2fv
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

4888 
GLAPI
 
APIENTRY
 
glVîãxAârib2s
 (
GLuöt
, 
GLsh‹t
, GLshort);

4889 
GLAPI
 
APIENTRY
 
glVîãxAârib2sv
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

4890 
GLAPI
 
APIENTRY
 
glVîãxAârib3d
 (
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble);

4891 
GLAPI
 
APIENTRY
 
glVîãxAârib3dv
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

4892 
GLAPI
 
APIENTRY
 
glVîãxAârib3f
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat);

4893 
GLAPI
 
APIENTRY
 
glVîãxAârib3fv
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

4894 
GLAPI
 
APIENTRY
 
glVîãxAârib3s
 (
GLuöt
, 
GLsh‹t
, GLshort, GLshort);

4895 
GLAPI
 
APIENTRY
 
glVîãxAârib3sv
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

4896 
GLAPI
 
APIENTRY
 
glVîãxAârib4Nbv
 (
GLuöt
, c⁄° 
GLbyã
 *);

4897 
GLAPI
 
APIENTRY
 
glVîãxAârib4Niv
 (
GLuöt
, c⁄° 
GLöt
 *);

4898 
GLAPI
 
APIENTRY
 
glVîãxAârib4Nsv
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

4899 
GLAPI
 
APIENTRY
 
glVîãxAârib4Nub
 (
GLuöt
, 
GLubyã
, GLubyte, GLubyte, GLubyte);

4900 
GLAPI
 
APIENTRY
 
glVîãxAârib4Nubv
 (
GLuöt
, c⁄° 
GLubyã
 *);

4901 
GLAPI
 
APIENTRY
 
glVîãxAârib4Nuiv
 (
GLuöt
, const GLuint *);

4902 
GLAPI
 
APIENTRY
 
glVîãxAârib4Nusv
 (
GLuöt
, c⁄° 
GLush‹t
 *);

4903 
GLAPI
 
APIENTRY
 
glVîãxAârib4bv
 (
GLuöt
, c⁄° 
GLbyã
 *);

4904 
GLAPI
 
APIENTRY
 
glVîãxAârib4d
 (
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

4905 
GLAPI
 
APIENTRY
 
glVîãxAârib4dv
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

4906 
GLAPI
 
APIENTRY
 
glVîãxAârib4f
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

4907 
GLAPI
 
APIENTRY
 
glVîãxAârib4fv
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

4908 
GLAPI
 
APIENTRY
 
glVîãxAârib4iv
 (
GLuöt
, c⁄° 
GLöt
 *);

4909 
GLAPI
 
APIENTRY
 
glVîãxAârib4s
 (
GLuöt
, 
GLsh‹t
, GLshort, GLshort, GLshort);

4910 
GLAPI
 
APIENTRY
 
glVîãxAârib4sv
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

4911 
GLAPI
 
APIENTRY
 
glVîãxAârib4ubv
 (
GLuöt
, c⁄° 
GLubyã
 *);

4912 
GLAPI
 
APIENTRY
 
glVîãxAârib4uiv
 (
GLuöt
, const GLuint *);

4913 
GLAPI
 
APIENTRY
 
glVîãxAârib4usv
 (
GLuöt
, c⁄° 
GLush‹t
 *);

4914 
GLAPI
 
APIENTRY
 
glVîãxAâribPoöãr
 (
GLuöt
, 
GLöt
, 
GLíum
, 
GLboﬁón
, 
GLsizei
, c⁄° 
GLvoid
 *);

4916 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONSEPARATEPROC
Ë(
	tGLíum
 
	tmodeRGB
, GLíum 
	tmodeAÕha
);

4917 (
APIENTRYP
 
	tPFNGLDRAWBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLíum
 *
	tbufs
);

4918 (
APIENTRYP
 
	tPFNGLSTENCILOPSEPARATEPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tsÁû
, GLíum 
	tdpÁû
, GLíum 
	tdµass
);

4919 (
APIENTRYP
 
	tPFNGLSTENCILFUNCSEPARATEPROC
Ë(
	tGLíum
 
	t‰⁄tfunc
, GLíum 
	tbackfunc
, 
	tGLöt
 
	tªf
, 
	tGLuöt
 
	tmask
);

4920 (
APIENTRYP
 
	tPFNGLSTENCILMASKSEPARATEPROC
Ë(
	tGLíum
 
	tÁ˚
, 
	tGLuöt
 
	tmask
);

4921 (
APIENTRYP
 
	tPFNGLATTACHSHADERPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tshadî
);

4922 (
APIENTRYP
 
	tPFNGLBINDATTRIBLOCATIONPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, c⁄° 
	tGLch¨
 *
	t«me
);

4923 (
APIENTRYP
 
	tPFNGLCOMPILESHADERPROC
Ë(
	tGLuöt
 
	tshadî
);

4924 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLCREATEPROGRAMPROC
) ();

4925 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLCREATESHADERPROC
Ë(
	tGLíum
 
	tty≥
);

4926 (
APIENTRYP
 
	tPFNGLDELETEPROGRAMPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

4927 (
APIENTRYP
 
	tPFNGLDELETESHADERPROC
Ë(
	tGLuöt
 
	tshadî
);

4928 (
APIENTRYP
 
	tPFNGLDETACHSHADERPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tshadî
);

4929 (
APIENTRYP
 
	tPFNGLDISABLEVERTEXATTRIBARRAYPROC
Ë(
	tGLuöt
 
	tödex
);

4930 (
APIENTRYP
 
	tPFNGLENABLEVERTEXATTRIBARRAYPROC
Ë(
	tGLuöt
 
	tödex
);

4931 (
APIENTRYP
 
	tPFNGLGETACTIVEATTRIBPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLöt
 *
	tsize
, 
	tGLíum
 *
	tty≥
, 
	tGLch¨
 *
	t«me
);

4932 (
APIENTRYP
 
	tPFNGLGETACTIVEUNIFORMPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLöt
 *
	tsize
, 
	tGLíum
 *
	tty≥
, 
	tGLch¨
 *
	t«me
);

4933 (
APIENTRYP
 
	tPFNGLGETATTACHEDSHADERSPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tmaxCou¡
, GLsizeò*
	tcou¡
, GLuöà*
	tobj
);

4934 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETATTRIBLOCATIONPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 *
	t«me
);

4935 (
APIENTRYP
 
	tPFNGLGETPROGRAMIVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4936 (
APIENTRYP
 
	tPFNGLGETPROGRAMINFOLOGPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLch¨
 *
	töfoLog
);

4937 (
APIENTRYP
 
	tPFNGLGETSHADERIVPROC
Ë(
	tGLuöt
 
	tshadî
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4938 (
APIENTRYP
 
	tPFNGLGETSHADERINFOLOGPROC
Ë(
	tGLuöt
 
	tshadî
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLch¨
 *
	töfoLog
);

4939 (
APIENTRYP
 
	tPFNGLGETSHADERSOURCEPROC
Ë(
	tGLuöt
 
	tshadî
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLch¨
 *
	tsour˚
);

4940 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETUNIFORMLOCATIONPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 *
	t«me
);

4941 (
APIENTRYP
 
	tPFNGLGETUNIFORMFVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 *
	t∑øms
);

4942 (
APIENTRYP
 
	tPFNGLGETUNIFORMIVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLöà*
	t∑øms
);

4943 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBDVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLdoubÀ
 *
	t∑øms
);

4944 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBFVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

4945 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

4946 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBPOINTERVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLvoid
* *
	tpoöãr
);

4947 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISPROGRAMPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

4948 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISSHADERPROC
Ë(
	tGLuöt
 
	tshadî
);

4949 (
APIENTRYP
 
	tPFNGLLINKPROGRAMPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

4950 (
APIENTRYP
 
	tPFNGLSHADERSOURCEPROC
Ë(
	tGLuöt
 
	tshadî
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLch¨
* *
	t°rög
, c⁄° 
	tGLöt
 *
	tÀngth
);

4951 (
APIENTRYP
 
	tPFNGLUSEPROGRAMPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

4952 (
APIENTRYP
 
	tPFNGLUNIFORM1FPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
);

4953 (
APIENTRYP
 
	tPFNGLUNIFORM2FPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
);

4954 (
APIENTRYP
 
	tPFNGLUNIFORM3FPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
);

4955 (
APIENTRYP
 
	tPFNGLUNIFORM4FPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
, GLÊﬂà
	tv3
);

4956 (
APIENTRYP
 
	tPFNGLUNIFORM1IPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
);

4957 (
APIENTRYP
 
	tPFNGLUNIFORM2IPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
);

4958 (
APIENTRYP
 
	tPFNGLUNIFORM3IPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
, GLöà
	tv2
);

4959 (
APIENTRYP
 
	tPFNGLUNIFORM4IPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
, GLöà
	tv2
, GLöà
	tv3
);

4960 (
APIENTRYP
 
	tPFNGLUNIFORM1FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

4961 (
APIENTRYP
 
	tPFNGLUNIFORM2FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

4962 (
APIENTRYP
 
	tPFNGLUNIFORM3FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

4963 (
APIENTRYP
 
	tPFNGLUNIFORM4FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

4964 (
APIENTRYP
 
	tPFNGLUNIFORM1IVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

4965 (
APIENTRYP
 
	tPFNGLUNIFORM2IVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

4966 (
APIENTRYP
 
	tPFNGLUNIFORM3IVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

4967 (
APIENTRYP
 
	tPFNGLUNIFORM4IVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

4968 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX2FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

4969 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX3FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

4970 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX4FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

4971 (
APIENTRYP
 
	tPFNGLVALIDATEPROGRAMPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

4972 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
);

4973 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

4974 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
);

4975 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

4976 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
);

4977 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

4978 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

4979 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

4980 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

4981 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

4982 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

4983 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

4984 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

4985 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

4986 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

4987 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

4988 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

4989 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

4990 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NBVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 *
	tv
);

4991 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

4992 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NSVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

4993 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLubyã
 
	tx
, GLubyã 
	ty
, GLubyã 
	tz
, GLubyã 
	tw
);

4994 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUBVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 *
	tv
);

4995 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

4996 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUSVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 *
	tv
);

4997 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4BVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 *
	tv
);

4998 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

4999 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5000 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

5001 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5002 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4IVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

5003 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
, GLsh‹à
	tw
);

5004 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

5005 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UBVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 *
	tv
);

5006 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

5007 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4USVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 *
	tv
);

5008 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBPOINTERPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLboﬁón
 
	tn‹mÆized
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

5011 #i‚de‡
GL_VERSION_2_1


5012 
	#GL_VERSION_2_1
 1

	)

5013 #ifde‡
GL_GLEXT_PROTOTYPES


5014 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix2x3fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5015 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix3x2fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5016 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix2x4fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5017 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix4x2fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5018 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix3x4fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5019 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix4x3fv
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5021 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX2X3FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5022 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX3X2FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5023 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX2X4FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5024 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX4X2FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5025 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX3X4FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5026 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX4X3FVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5029 #i‚de‡
GL_VERSION_3_0


5030 
	#GL_VERSION_3_0
 1

	)

5035 #ifde‡
GL_GLEXT_PROTOTYPES


5036 
GLAPI
 
APIENTRY
 
glCﬁ‹Maski
 (
GLuöt
, 
GLboﬁón
, GLboolean, GLboolean, GLboolean);

5037 
GLAPI
 
APIENTRY
 
glGëBoﬁóni_v
 (
GLíum
, 
GLuöt
, 
GLboﬁón
 *);

5038 
GLAPI
 
APIENTRY
 
glGëI¡egîi_v
 (
GLíum
, 
GLuöt
, 
GLöt
 *);

5039 
GLAPI
 
APIENTRY
 
glE«bÀi
 (
GLíum
, 
GLuöt
);

5040 
GLAPI
 
APIENTRY
 
glDißbÀi
 (
GLíum
, 
GLuöt
);

5041 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsE«bÀdi
 (
GLíum
, 
GLuöt
);

5042 
GLAPI
 
APIENTRY
 
glBegöTønsf‹mFìdback
 (
GLíum
);

5043 
GLAPI
 
APIENTRY
 
glEndTønsf‹mFìdback
 ();

5044 
GLAPI
 
APIENTRY
 
glBödBuf„rR™ge
 (
GLíum
, 
GLuöt
, GLuöt, 
GLöçå
, 
GLsizeùå
);

5045 
GLAPI
 
APIENTRY
 
glBödBuf„rBa£
 (
GLíum
, 
GLuöt
, GLuint);

5046 
GLAPI
 
APIENTRY
 
glTønsf‹mFìdbackV¨yögs
 (
GLuöt
, 
GLsizei
, c⁄° 
GLch¨
* *, 
GLíum
);

5047 
GLAPI
 
APIENTRY
 
glGëTønsf‹mFìdbackV¨yög
 (
GLuöt
, GLuöt, 
GLsizei
, GLsizeò*, GLsizeò*, 
GLíum
 *, 
GLch¨
 *);

5048 
GLAPI
 
APIENTRY
 
glCœmpCﬁ‹
 (
GLíum
, GLenum);

5049 
GLAPI
 
APIENTRY
 
glBegöC⁄dôi⁄ÆRídî
 (
GLuöt
, 
GLíum
);

5050 
GLAPI
 
APIENTRY
 
glEndC⁄dôi⁄ÆRídî
 ();

5051 
GLAPI
 
APIENTRY
 
glVîãxAâribIPoöãr
 (
GLuöt
, 
GLöt
, 
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

5052 
GLAPI
 
APIENTRY
 
glGëVîãxAâribIiv
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

5053 
GLAPI
 
APIENTRY
 
glGëVîãxAâribIuiv
 (
GLuöt
, 
GLíum
, GLuint *);

5054 
GLAPI
 
APIENTRY
 
glVîãxAâribI1i
 (
GLuöt
, 
GLöt
);

5055 
GLAPI
 
APIENTRY
 
glVîãxAâribI2i
 (
GLuöt
, 
GLöt
, GLint);

5056 
GLAPI
 
APIENTRY
 
glVîãxAâribI3i
 (
GLuöt
, 
GLöt
, GLint, GLint);

5057 
GLAPI
 
APIENTRY
 
glVîãxAâribI4i
 (
GLuöt
, 
GLöt
, GLint, GLint, GLint);

5058 
GLAPI
 
APIENTRY
 
glVîãxAâribI1ui
 (
GLuöt
, GLuint);

5059 
GLAPI
 
APIENTRY
 
glVîãxAâribI2ui
 (
GLuöt
, GLuint, GLuint);

5060 
GLAPI
 
APIENTRY
 
glVîãxAâribI3ui
 (
GLuöt
, GLuint, GLuint, GLuint);

5061 
GLAPI
 
APIENTRY
 
glVîãxAâribI4ui
 (
GLuöt
, GLuint, GLuint, GLuint, GLuint);

5062 
GLAPI
 
APIENTRY
 
glVîãxAâribI1iv
 (
GLuöt
, c⁄° 
GLöt
 *);

5063 
GLAPI
 
APIENTRY
 
glVîãxAâribI2iv
 (
GLuöt
, c⁄° 
GLöt
 *);

5064 
GLAPI
 
APIENTRY
 
glVîãxAâribI3iv
 (
GLuöt
, c⁄° 
GLöt
 *);

5065 
GLAPI
 
APIENTRY
 
glVîãxAâribI4iv
 (
GLuöt
, c⁄° 
GLöt
 *);

5066 
GLAPI
 
APIENTRY
 
glVîãxAâribI1uiv
 (
GLuöt
, const GLuint *);

5067 
GLAPI
 
APIENTRY
 
glVîãxAâribI2uiv
 (
GLuöt
, const GLuint *);

5068 
GLAPI
 
APIENTRY
 
glVîãxAâribI3uiv
 (
GLuöt
, const GLuint *);

5069 
GLAPI
 
APIENTRY
 
glVîãxAâribI4uiv
 (
GLuöt
, const GLuint *);

5070 
GLAPI
 
APIENTRY
 
glVîãxAâribI4bv
 (
GLuöt
, c⁄° 
GLbyã
 *);

5071 
GLAPI
 
APIENTRY
 
glVîãxAâribI4sv
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

5072 
GLAPI
 
APIENTRY
 
glVîãxAâribI4ubv
 (
GLuöt
, c⁄° 
GLubyã
 *);

5073 
GLAPI
 
APIENTRY
 
glVîãxAâribI4usv
 (
GLuöt
, c⁄° 
GLush‹t
 *);

5074 
GLAPI
 
APIENTRY
 
glGëUnif‹muiv
 (
GLuöt
, 
GLöt
, GLuint *);

5075 
GLAPI
 
APIENTRY
 
glBödFøgD©aLoˇti⁄
 (
GLuöt
, GLuöt, c⁄° 
GLch¨
 *);

5076 
GLAPI
 
GLöt
 
APIENTRY
 
glGëFøgD©aLoˇti⁄
 (
GLuöt
, c⁄° 
GLch¨
 *);

5077 
GLAPI
 
APIENTRY
 
glUnif‹m1ui
 (
GLöt
, 
GLuöt
);

5078 
GLAPI
 
APIENTRY
 
glUnif‹m2ui
 (
GLöt
, 
GLuöt
, GLuint);

5079 
GLAPI
 
APIENTRY
 
glUnif‹m3ui
 (
GLöt
, 
GLuöt
, GLuint, GLuint);

5080 
GLAPI
 
APIENTRY
 
glUnif‹m4ui
 (
GLöt
, 
GLuöt
, GLuint, GLuint, GLuint);

5081 
GLAPI
 
APIENTRY
 
glUnif‹m1uiv
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt
 *);

5082 
GLAPI
 
APIENTRY
 
glUnif‹m2uiv
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt
 *);

5083 
GLAPI
 
APIENTRY
 
glUnif‹m3uiv
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt
 *);

5084 
GLAPI
 
APIENTRY
 
glUnif‹m4uiv
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt
 *);

5085 
GLAPI
 
APIENTRY
 
glTexP¨amëîIiv
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

5086 
GLAPI
 
APIENTRY
 
glTexP¨amëîIuiv
 (
GLíum
, GLíum, c⁄° 
GLuöt
 *);

5087 
GLAPI
 
APIENTRY
 
glGëTexP¨amëîIiv
 (
GLíum
, GLíum, 
GLöt
 *);

5088 
GLAPI
 
APIENTRY
 
glGëTexP¨amëîIuiv
 (
GLíum
, GLíum, 
GLuöt
 *);

5089 
GLAPI
 
APIENTRY
 
glCÀ¨Buf„riv
 (
GLíum
, 
GLöt
, const GLint *);

5090 
GLAPI
 
APIENTRY
 
glCÀ¨Buf„ruiv
 (
GLíum
, 
GLöt
, c⁄° 
GLuöt
 *);

5091 
GLAPI
 
APIENTRY
 
glCÀ¨Buf„rfv
 (
GLíum
, 
GLöt
, c⁄° 
GLÊﬂt
 *);

5092 
GLAPI
 
APIENTRY
 
glCÀ¨Buf„rfi
 (
GLíum
, 
GLöt
, 
GLÊﬂt
, GLint);

5093 
GLAPI
 c⁄° 
GLubyã
 * 
APIENTRY
 
glGëSåögi
 (
GLíum
, 
GLuöt
);

5095 (
APIENTRYP
 
	tPFNGLCOLORMASKIPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLboﬁón
 
	tr
, GLboﬁó¿
	tg
, GLboﬁó¿
	tb
, GLboﬁó¿
	ta
);

5096 (
APIENTRYP
 
	tPFNGLGETBOOLEANI_VPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLboﬁón
 *
	td©a
);

5097 (
APIENTRYP
 
	tPFNGLGETINTEGERI_VPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 *
	td©a
);

5098 (
APIENTRYP
 
	tPFNGLENABLEIPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
);

5099 (
APIENTRYP
 
	tPFNGLDISABLEIPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
);

5100 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISENABLEDIPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
);

5101 (
APIENTRYP
 
	tPFNGLBEGINTRANSFORMFEEDBACKPROC
Ë(
	tGLíum
 
	t¥imôiveMode
);

5102 (
APIENTRYP
 
	tPFNGLENDTRANSFORMFEEDBACKPROC
) ();

5103 (
APIENTRYP
 
	tPFNGLBINDBUFFERRANGEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
);

5104 (
APIENTRYP
 
	tPFNGLBINDBUFFERBASEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
);

5105 (
APIENTRYP
 
	tPFNGLTRANSFORMFEEDBACKVARYINGSPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLch¨
* *
	tv¨yögs
, 
	tGLíum
 
	tbuf„rMode
);

5106 (
APIENTRYP
 
	tPFNGLGETTRANSFORMFEEDBACKVARYINGPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, GLsizeò*
	tsize
, 
	tGLíum
 *
	tty≥
, 
	tGLch¨
 *
	t«me
);

5107 (
APIENTRYP
 
	tPFNGLCLAMPCOLORPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t˛amp
);

5108 (
APIENTRYP
 
	tPFNGLBEGINCONDITIONALRENDERPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tmode
);

5109 (
APIENTRYP
 
	tPFNGLENDCONDITIONALRENDERPROC
) ();

5110 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBIPOINTERPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

5111 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIIVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5112 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIUIVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, GLuöà*
	t∑øms
);

5113 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1IPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
);

5114 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2IPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
);

5115 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3IPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

5116 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4IPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

5117 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1UIPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
);

5118 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2UIPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
);

5119 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3UIPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
);

5120 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4UIPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
, GLuöà
	tw
);

5121 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1IVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

5122 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2IVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

5123 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3IVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

5124 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4IVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

5125 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1UIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

5126 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2UIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

5127 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3UIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

5128 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4UIVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

5129 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4BVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 *
	tv
);

5130 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4SVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

5131 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4UBVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 *
	tv
);

5132 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4USVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 *
	tv
);

5133 (
APIENTRYP
 
	tPFNGLGETUNIFORMUIVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLuöà*
	t∑øms
);

5134 (
APIENTRYP
 
	tPFNGLBINDFRAGDATALOCATIONPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tcﬁ‹
, c⁄° 
	tGLch¨
 *
	t«me
);

5135 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETFRAGDATALOCATIONPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 *
	t«me
);

5136 (
APIENTRYP
 
	tPFNGLUNIFORM1UIPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
);

5137 (
APIENTRYP
 
	tPFNGLUNIFORM2UIPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
, GLuöà
	tv1
);

5138 (
APIENTRYP
 
	tPFNGLUNIFORM3UIPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
, GLuöà
	tv1
, GLuöà
	tv2
);

5139 (
APIENTRYP
 
	tPFNGLUNIFORM4UIPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
, GLuöà
	tv1
, GLuöà
	tv2
, GLuöà
	tv3
);

5140 (
APIENTRYP
 
	tPFNGLUNIFORM1UIVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 *
	tvÆue
);

5141 (
APIENTRYP
 
	tPFNGLUNIFORM2UIVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 *
	tvÆue
);

5142 (
APIENTRYP
 
	tPFNGLUNIFORM3UIVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 *
	tvÆue
);

5143 (
APIENTRYP
 
	tPFNGLUNIFORM4UIVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 *
	tvÆue
);

5144 (
APIENTRYP
 
	tPFNGLTEXPARAMETERIIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

5145 (
APIENTRYP
 
	tPFNGLTEXPARAMETERIUIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLuöt
 *
	t∑øms
);

5146 (
APIENTRYP
 
	tPFNGLGETTEXPARAMETERIIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5147 (
APIENTRYP
 
	tPFNGLGETTEXPARAMETERIUIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLuöt
 *
	t∑øms
);

5148 (
APIENTRYP
 
	tPFNGLCLEARBUFFERIVPROC
Ë(
	tGLíum
 
	tbuf„r
, 
	tGLöt
 
	tdøwbuf„r
, c⁄° GLöà*
	tvÆue
);

5149 (
APIENTRYP
 
	tPFNGLCLEARBUFFERUIVPROC
Ë(
	tGLíum
 
	tbuf„r
, 
	tGLöt
 
	tdøwbuf„r
, c⁄° 
	tGLuöt
 *
	tvÆue
);

5150 (
APIENTRYP
 
	tPFNGLCLEARBUFFERFVPROC
Ë(
	tGLíum
 
	tbuf„r
, 
	tGLöt
 
	tdøwbuf„r
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5151 (
APIENTRYP
 
	tPFNGLCLEARBUFFERFIPROC
Ë(
	tGLíum
 
	tbuf„r
, 
	tGLöt
 
	tdøwbuf„r
, 
	tGLÊﬂt
 
	tdïth
, GLöà
	t°ícû
);

5152 c⁄° 
	tGLubyã
 * (
	tAPIENTRYP
 
	tPFNGLGETSTRINGIPROC
Ë(
	tGLíum
 
	t«me
, 
	tGLuöt
 
	tödex
);

5155 #i‚de‡
GL_VERSION_3_1


5156 
	#GL_VERSION_3_1
 1

	)

5160 #ifde‡
GL_GLEXT_PROTOTYPES


5161 
GLAPI
 
APIENTRY
 
glDøwAºaysIn°™˚d
 (
GLíum
, 
GLöt
, 
GLsizei
, GLsizei);

5162 
GLAPI
 
APIENTRY
 
glDøwEÀmítsIn°™˚d
 (
GLíum
, 
GLsizei
, GLíum, c⁄° 
GLvoid
 *, GLsizei);

5163 
GLAPI
 
APIENTRY
 
glTexBuf„r
 (
GLíum
, GLíum, 
GLuöt
);

5164 
GLAPI
 
APIENTRY
 
glPrimôiveRe°¨tIndex
 (
GLuöt
);

5166 (
APIENTRYP
 
	tPFNGLDRAWARRAYSINSTANCEDPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
, GLsizeò
	t¥imcou¡
);

5167 (
APIENTRYP
 
	tPFNGLDRAWELEMENTSINSTANCEDPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
, GLsizeò
	t¥imcou¡
);

5168 (
APIENTRYP
 
	tPFNGLTEXBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLuöt
 
	tbuf„r
);

5169 (
APIENTRYP
 
	tPFNGLPRIMITIVERESTARTINDEXPROC
Ë(
	tGLuöt
 
	tödex
);

5172 #i‚de‡
GL_VERSION_3_2


5173 
	#GL_VERSION_3_2
 1

	)

5179 #ifde‡
GL_GLEXT_PROTOTYPES


5180 
GLAPI
 
APIENTRY
 
glGëI¡egî64i_v
 (
GLíum
, 
GLuöt
, 
GLöt64
 *);

5181 
GLAPI
 
APIENTRY
 
glGëBuf„rP¨amëîi64v
 (
GLíum
, GLíum, 
GLöt64
 *);

5182 
GLAPI
 
APIENTRY
 
glProgømP¨amëîi
 (
GLuöt
, 
GLíum
, 
GLöt
);

5183 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuª
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
);

5184 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuªFa˚
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
, GLenum);

5186 (
APIENTRYP
 
	tPFNGLGETINTEGER64I_VPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt64
 *
	td©a
);

5187 (
APIENTRYP
 
	tPFNGLGETBUFFERPARAMETERI64VPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt64
 *
	t∑øms
);

5188 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETERIPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	tvÆue
);

5189 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTUREPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

5190 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTUREFACEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLíum 
	tÁ˚
);

5193 #i‚de‡
GL_ARB_mu…ôextuª


5194 
	#GL_ARB_mu…ôextuª
 1

	)

5195 #ifde‡
GL_GLEXT_PROTOTYPES


5196 
GLAPI
 
APIENTRY
 
glA˘iveTextuªARB
 (
GLíum
);

5197 
GLAPI
 
APIENTRY
 
glClõ¡A˘iveTextuªARB
 (
GLíum
);

5198 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1dARB
 (
GLíum
, 
GLdoubÀ
);

5199 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1dvARB
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

5200 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1fARB
 (
GLíum
, 
GLÊﬂt
);

5201 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1fvARB
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

5202 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1iARB
 (
GLíum
, 
GLöt
);

5203 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1ivARB
 (
GLíum
, c⁄° 
GLöt
 *);

5204 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1sARB
 (
GLíum
, 
GLsh‹t
);

5205 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1svARB
 (
GLíum
, c⁄° 
GLsh‹t
 *);

5206 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2dARB
 (
GLíum
, 
GLdoubÀ
, GLdouble);

5207 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2dvARB
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

5208 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2fARB
 (
GLíum
, 
GLÊﬂt
, GLfloat);

5209 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2fvARB
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

5210 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2iARB
 (
GLíum
, 
GLöt
, GLint);

5211 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2ivARB
 (
GLíum
, c⁄° 
GLöt
 *);

5212 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2sARB
 (
GLíum
, 
GLsh‹t
, GLshort);

5213 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2svARB
 (
GLíum
, c⁄° 
GLsh‹t
 *);

5214 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3dARB
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble);

5215 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3dvARB
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

5216 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3fARB
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat);

5217 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3fvARB
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

5218 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3iARB
 (
GLíum
, 
GLöt
, GLint, GLint);

5219 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3ivARB
 (
GLíum
, c⁄° 
GLöt
 *);

5220 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3sARB
 (
GLíum
, 
GLsh‹t
, GLshort, GLshort);

5221 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3svARB
 (
GLíum
, c⁄° 
GLsh‹t
 *);

5222 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4dARB
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

5223 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4dvARB
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

5224 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4fARB
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

5225 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4fvARB
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

5226 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4iARB
 (
GLíum
, 
GLöt
, GLint, GLint, GLint);

5227 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4ivARB
 (
GLíum
, c⁄° 
GLöt
 *);

5228 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4sARB
 (
GLíum
, 
GLsh‹t
, GLshort, GLshort, GLshort);

5229 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4svARB
 (
GLíum
, c⁄° 
GLsh‹t
 *);

5231 (
APIENTRYP
 
	tPFNGLACTIVETEXTUREARBPROC
Ë(
	tGLíum
 
	tãxtuª
);

5232 (
APIENTRYP
 
	tPFNGLCLIENTACTIVETEXTUREARBPROC
Ë(
	tGLíum
 
	tãxtuª
);

5233 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
);

5234 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5235 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
);

5236 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5237 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
);

5238 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

5239 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
);

5240 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

5241 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
);

5242 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5243 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
);

5244 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5245 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
);

5246 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

5247 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
);

5248 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

5249 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
, GLdoubÀ 
	tr
);

5250 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5251 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
);

5252 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5253 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
, GLöà
	tr
);

5254 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

5255 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
, GLsh‹à
	tr
);

5256 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

5257 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	ts
, GLdoubÀ 
	tt
, GLdoubÀ 
	tr
, GLdoubÀ 
	tq
);

5258 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5259 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tq
);

5260 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5261 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4IARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	ts
, GLöà
	tt
, GLöà
	tr
, GLöà
	tq
);

5262 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4IVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLöt
 *
	tv
);

5263 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4SARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsh‹t
 
	ts
, GLsh‹à
	tt
, GLsh‹à
	tr
, GLsh‹à
	tq
);

5264 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4SVARBPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLsh‹t
 *
	tv
);

5267 #i‚de‡
GL_ARB_å™•o£_m©rix


5268 
	#GL_ARB_å™•o£_m©rix
 1

	)

5269 #ifde‡
GL_GLEXT_PROTOTYPES


5270 
GLAPI
 
APIENTRY
 
glLﬂdTøn•o£M©rixfARB
 (c⁄° 
GLÊﬂt
 *);

5271 
GLAPI
 
APIENTRY
 
glLﬂdTøn•o£M©rixdARB
 (c⁄° 
GLdoubÀ
 *);

5272 
GLAPI
 
APIENTRY
 
glMu…Tøn•o£M©rixfARB
 (c⁄° 
GLÊﬂt
 *);

5273 
GLAPI
 
APIENTRY
 
glMu…Tøn•o£M©rixdARB
 (c⁄° 
GLdoubÀ
 *);

5275 (
APIENTRYP
 
	tPFNGLLOADTRANSPOSEMATRIXFARBPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tm
);

5276 (
APIENTRYP
 
	tPFNGLLOADTRANSPOSEMATRIXDARBPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tm
);

5277 (
APIENTRYP
 
	tPFNGLMULTTRANSPOSEMATRIXFARBPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tm
);

5278 (
APIENTRYP
 
	tPFNGLMULTTRANSPOSEMATRIXDARBPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tm
);

5281 #i‚de‡
GL_ARB_mu…ißm∂e


5282 
	#GL_ARB_mu…ißm∂e
 1

	)

5283 #ifde‡
GL_GLEXT_PROTOTYPES


5284 
GLAPI
 
APIENTRY
 
glSam∂eCovîageARB
 (
GL˛ampf
, 
GLboﬁón
);

5286 (
APIENTRYP
 
	tPFNGLSAMPLECOVERAGEARBPROC
Ë(
	tGL˛ampf
 
	tvÆue
, 
	tGLboﬁón
 
	tövît
);

5289 #i‚de‡
GL_ARB_ãxtuª_ív_add


5290 
	#GL_ARB_ãxtuª_ív_add
 1

	)

5293 #i‚de‡
GL_ARB_ãxtuª_cube_m≠


5294 
	#GL_ARB_ãxtuª_cube_m≠
 1

	)

5297 #i‚de‡
GL_ARB_ãxtuª_com¥essi⁄


5298 
	#GL_ARB_ãxtuª_com¥essi⁄
 1

	)

5299 #ifde‡
GL_GLEXT_PROTOTYPES


5300 
GLAPI
 
APIENTRY
 
glCom¥es£dTexImage3DARB
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLsizei, GLöt, GLsizei, c⁄° 
GLvoid
 *);

5301 
GLAPI
 
APIENTRY
 
glCom¥es£dTexImage2DARB
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLöt, GLsizei, c⁄° 
GLvoid
 *);

5302 
GLAPI
 
APIENTRY
 
glCom¥es£dTexImage1DARB
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLöt, GLsizei, c⁄° 
GLvoid
 *);

5303 
GLAPI
 
APIENTRY
 
glCom¥es£dTexSubImage3DARB
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLíum, GLsizei, c⁄° 
GLvoid
 *);

5304 
GLAPI
 
APIENTRY
 
glCom¥es£dTexSubImage2DARB
 (
GLíum
, 
GLöt
, GLöt, GLöt, 
GLsizei
, GLsizei, GLíum, GLsizei, c⁄° 
GLvoid
 *);

5305 
GLAPI
 
APIENTRY
 
glCom¥es£dTexSubImage1DARB
 (
GLíum
, 
GLöt
, GLöt, 
GLsizei
, GLíum, GLsizei, c⁄° 
GLvoid
 *);

5306 
GLAPI
 
APIENTRY
 
glGëCom¥es£dTexImageARB
 (
GLíum
, 
GLöt
, 
GLvoid
 *);

5308 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE3DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

5309 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE2DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

5310 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXIMAGE1DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

5311 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

5312 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

5313 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	td©a
);

5314 (
APIENTRYP
 
	tPFNGLGETCOMPRESSEDTEXIMAGEARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, 
	tGLvoid
 *
	timg
);

5317 #i‚de‡
GL_ARB_ãxtuª_b‹dî_˛amp


5318 
	#GL_ARB_ãxtuª_b‹dî_˛amp
 1

	)

5321 #i‚de‡
GL_ARB_poöt_∑ømëîs


5322 
	#GL_ARB_poöt_∑ømëîs
 1

	)

5323 #ifde‡
GL_GLEXT_PROTOTYPES


5324 
GLAPI
 
APIENTRY
 
glPoötP¨amëîfARB
 (
GLíum
, 
GLÊﬂt
);

5325 
GLAPI
 
APIENTRY
 
glPoötP¨amëîfvARB
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

5327 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFARBPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

5328 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFVARBPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

5331 #i‚de‡
GL_ARB_vîãx_bÀnd


5332 
	#GL_ARB_vîãx_bÀnd
 1

	)

5333 #ifde‡
GL_GLEXT_PROTOTYPES


5334 
GLAPI
 
APIENTRY
 
glWeightbvARB
 (
GLöt
, c⁄° 
GLbyã
 *);

5335 
GLAPI
 
APIENTRY
 
glWeightsvARB
 (
GLöt
, c⁄° 
GLsh‹t
 *);

5336 
GLAPI
 
APIENTRY
 
glWeightivARB
 (
GLöt
, const GLint *);

5337 
GLAPI
 
APIENTRY
 
glWeightfvARB
 (
GLöt
, c⁄° 
GLÊﬂt
 *);

5338 
GLAPI
 
APIENTRY
 
glWeightdvARB
 (
GLöt
, c⁄° 
GLdoubÀ
 *);

5339 
GLAPI
 
APIENTRY
 
glWeightubvARB
 (
GLöt
, c⁄° 
GLubyã
 *);

5340 
GLAPI
 
APIENTRY
 
glWeightusvARB
 (
GLöt
, c⁄° 
GLush‹t
 *);

5341 
GLAPI
 
APIENTRY
 
glWeightuivARB
 (
GLöt
, c⁄° 
GLuöt
 *);

5342 
GLAPI
 
APIENTRY
 
glWeightPoöãrARB
 (
GLöt
, 
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

5343 
GLAPI
 
APIENTRY
 
glVîãxBÀndARB
 (
GLöt
);

5345 (
APIENTRYP
 
	tPFNGLWEIGHTBVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLbyã
 *
	tweights
);

5346 (
APIENTRYP
 
	tPFNGLWEIGHTSVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLsh‹t
 *
	tweights
);

5347 (
APIENTRYP
 
	tPFNGLWEIGHTIVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° GLöà*
	tweights
);

5348 (
APIENTRYP
 
	tPFNGLWEIGHTFVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLÊﬂt
 *
	tweights
);

5349 (
APIENTRYP
 
	tPFNGLWEIGHTDVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLdoubÀ
 *
	tweights
);

5350 (
APIENTRYP
 
	tPFNGLWEIGHTUBVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLubyã
 *
	tweights
);

5351 (
APIENTRYP
 
	tPFNGLWEIGHTUSVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLush‹t
 *
	tweights
);

5352 (
APIENTRYP
 
	tPFNGLWEIGHTUIVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLuöt
 *
	tweights
);

5353 (
APIENTRYP
 
	tPFNGLWEIGHTPOINTERARBPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

5354 (
APIENTRYP
 
	tPFNGLVERTEXBLENDARBPROC
Ë(
	tGLöt
 
	tcou¡
);

5357 #i‚de‡
GL_ARB_m©rix_∑Àâe


5358 
	#GL_ARB_m©rix_∑Àâe
 1

	)

5359 #ifde‡
GL_GLEXT_PROTOTYPES


5360 
GLAPI
 
APIENTRY
 
glCuºítPÆëãM©rixARB
 (
GLöt
);

5361 
GLAPI
 
APIENTRY
 
glM©rixIndexubvARB
 (
GLöt
, c⁄° 
GLubyã
 *);

5362 
GLAPI
 
APIENTRY
 
glM©rixIndexusvARB
 (
GLöt
, c⁄° 
GLush‹t
 *);

5363 
GLAPI
 
APIENTRY
 
glM©rixIndexuivARB
 (
GLöt
, c⁄° 
GLuöt
 *);

5364 
GLAPI
 
APIENTRY
 
glM©rixIndexPoöãrARB
 (
GLöt
, 
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

5366 (
APIENTRYP
 
	tPFNGLCURRENTPALETTEMATRIXARBPROC
Ë(
	tGLöt
 
	tödex
);

5367 (
APIENTRYP
 
	tPFNGLMATRIXINDEXUBVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLubyã
 *
	tödi˚s
);

5368 (
APIENTRYP
 
	tPFNGLMATRIXINDEXUSVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLush‹t
 *
	tödi˚s
);

5369 (
APIENTRYP
 
	tPFNGLMATRIXINDEXUIVARBPROC
Ë(
	tGLöt
 
	tsize
, c⁄° 
	tGLuöt
 *
	tödi˚s
);

5370 (
APIENTRYP
 
	tPFNGLMATRIXINDEXPOINTERARBPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

5373 #i‚de‡
GL_ARB_ãxtuª_ív_comböe


5374 
	#GL_ARB_ãxtuª_ív_comböe
 1

	)

5377 #i‚de‡
GL_ARB_ãxtuª_ív_¸ossb¨


5378 
	#GL_ARB_ãxtuª_ív_¸ossb¨
 1

	)

5381 #i‚de‡
GL_ARB_ãxtuª_ív_dŸ3


5382 
	#GL_ARB_ãxtuª_ív_dŸ3
 1

	)

5385 #i‚de‡
GL_ARB_ãxtuª_múr‹ed_ª≥©


5386 
	#GL_ARB_ãxtuª_múr‹ed_ª≥©
 1

	)

5389 #i‚de‡
GL_ARB_dïth_ãxtuª


5390 
	#GL_ARB_dïth_ãxtuª
 1

	)

5393 #i‚de‡
GL_ARB_shadow


5394 
	#GL_ARB_shadow
 1

	)

5397 #i‚de‡
GL_ARB_shadow_ambõ¡


5398 
	#GL_ARB_shadow_ambõ¡
 1

	)

5401 #i‚de‡
GL_ARB_wödow_pos


5402 
	#GL_ARB_wödow_pos
 1

	)

5403 #ifde‡
GL_GLEXT_PROTOTYPES


5404 
GLAPI
 
APIENTRY
 
glWödowPos2dARB
 (
GLdoubÀ
, GLdouble);

5405 
GLAPI
 
APIENTRY
 
glWödowPos2dvARB
 (c⁄° 
GLdoubÀ
 *);

5406 
GLAPI
 
APIENTRY
 
glWödowPos2fARB
 (
GLÊﬂt
, GLfloat);

5407 
GLAPI
 
APIENTRY
 
glWödowPos2fvARB
 (c⁄° 
GLÊﬂt
 *);

5408 
GLAPI
 
APIENTRY
 
glWödowPos2iARB
 (
GLöt
, GLint);

5409 
GLAPI
 
APIENTRY
 
glWödowPos2ivARB
 (c⁄° 
GLöt
 *);

5410 
GLAPI
 
APIENTRY
 
glWödowPos2sARB
 (
GLsh‹t
, GLshort);

5411 
GLAPI
 
APIENTRY
 
glWödowPos2svARB
 (c⁄° 
GLsh‹t
 *);

5412 
GLAPI
 
APIENTRY
 
glWödowPos3dARB
 (
GLdoubÀ
, GLdouble, GLdouble);

5413 
GLAPI
 
APIENTRY
 
glWödowPos3dvARB
 (c⁄° 
GLdoubÀ
 *);

5414 
GLAPI
 
APIENTRY
 
glWödowPos3fARB
 (
GLÊﬂt
, GLfloat, GLfloat);

5415 
GLAPI
 
APIENTRY
 
glWödowPos3fvARB
 (c⁄° 
GLÊﬂt
 *);

5416 
GLAPI
 
APIENTRY
 
glWödowPos3iARB
 (
GLöt
, GLint, GLint);

5417 
GLAPI
 
APIENTRY
 
glWödowPos3ivARB
 (c⁄° 
GLöt
 *);

5418 
GLAPI
 
APIENTRY
 
glWödowPos3sARB
 (
GLsh‹t
, GLshort, GLshort);

5419 
GLAPI
 
APIENTRY
 
glWödowPos3svARB
 (c⁄° 
GLsh‹t
 *);

5421 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DARBPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

5422 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DVARBPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

5423 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FARBPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

5424 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FVARBPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

5425 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IARBPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
);

5426 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IVARBPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

5427 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SARBPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

5428 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SVARBPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

5429 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DARBPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

5430 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DVARBPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

5431 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FARBPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5432 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FVARBPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

5433 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IARBPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

5434 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IVARBPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

5435 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SARBPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

5436 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SVARBPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

5439 #i‚de‡
GL_ARB_vîãx_¥ogøm


5440 
	#GL_ARB_vîãx_¥ogøm
 1

	)

5441 #ifde‡
GL_GLEXT_PROTOTYPES


5442 
GLAPI
 
APIENTRY
 
glVîãxAârib1dARB
 (
GLuöt
, 
GLdoubÀ
);

5443 
GLAPI
 
APIENTRY
 
glVîãxAârib1dvARB
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

5444 
GLAPI
 
APIENTRY
 
glVîãxAârib1fARB
 (
GLuöt
, 
GLÊﬂt
);

5445 
GLAPI
 
APIENTRY
 
glVîãxAârib1fvARB
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

5446 
GLAPI
 
APIENTRY
 
glVîãxAârib1sARB
 (
GLuöt
, 
GLsh‹t
);

5447 
GLAPI
 
APIENTRY
 
glVîãxAârib1svARB
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

5448 
GLAPI
 
APIENTRY
 
glVîãxAârib2dARB
 (
GLuöt
, 
GLdoubÀ
, GLdouble);

5449 
GLAPI
 
APIENTRY
 
glVîãxAârib2dvARB
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

5450 
GLAPI
 
APIENTRY
 
glVîãxAârib2fARB
 (
GLuöt
, 
GLÊﬂt
, GLfloat);

5451 
GLAPI
 
APIENTRY
 
glVîãxAârib2fvARB
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

5452 
GLAPI
 
APIENTRY
 
glVîãxAârib2sARB
 (
GLuöt
, 
GLsh‹t
, GLshort);

5453 
GLAPI
 
APIENTRY
 
glVîãxAârib2svARB
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

5454 
GLAPI
 
APIENTRY
 
glVîãxAârib3dARB
 (
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble);

5455 
GLAPI
 
APIENTRY
 
glVîãxAârib3dvARB
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

5456 
GLAPI
 
APIENTRY
 
glVîãxAârib3fARB
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat);

5457 
GLAPI
 
APIENTRY
 
glVîãxAârib3fvARB
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

5458 
GLAPI
 
APIENTRY
 
glVîãxAârib3sARB
 (
GLuöt
, 
GLsh‹t
, GLshort, GLshort);

5459 
GLAPI
 
APIENTRY
 
glVîãxAârib3svARB
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

5460 
GLAPI
 
APIENTRY
 
glVîãxAârib4NbvARB
 (
GLuöt
, c⁄° 
GLbyã
 *);

5461 
GLAPI
 
APIENTRY
 
glVîãxAârib4NivARB
 (
GLuöt
, c⁄° 
GLöt
 *);

5462 
GLAPI
 
APIENTRY
 
glVîãxAârib4NsvARB
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

5463 
GLAPI
 
APIENTRY
 
glVîãxAârib4NubARB
 (
GLuöt
, 
GLubyã
, GLubyte, GLubyte, GLubyte);

5464 
GLAPI
 
APIENTRY
 
glVîãxAârib4NubvARB
 (
GLuöt
, c⁄° 
GLubyã
 *);

5465 
GLAPI
 
APIENTRY
 
glVîãxAârib4NuivARB
 (
GLuöt
, const GLuint *);

5466 
GLAPI
 
APIENTRY
 
glVîãxAârib4NusvARB
 (
GLuöt
, c⁄° 
GLush‹t
 *);

5467 
GLAPI
 
APIENTRY
 
glVîãxAârib4bvARB
 (
GLuöt
, c⁄° 
GLbyã
 *);

5468 
GLAPI
 
APIENTRY
 
glVîãxAârib4dARB
 (
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

5469 
GLAPI
 
APIENTRY
 
glVîãxAârib4dvARB
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

5470 
GLAPI
 
APIENTRY
 
glVîãxAârib4fARB
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

5471 
GLAPI
 
APIENTRY
 
glVîãxAârib4fvARB
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

5472 
GLAPI
 
APIENTRY
 
glVîãxAârib4ivARB
 (
GLuöt
, c⁄° 
GLöt
 *);

5473 
GLAPI
 
APIENTRY
 
glVîãxAârib4sARB
 (
GLuöt
, 
GLsh‹t
, GLshort, GLshort, GLshort);

5474 
GLAPI
 
APIENTRY
 
glVîãxAârib4svARB
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

5475 
GLAPI
 
APIENTRY
 
glVîãxAârib4ubvARB
 (
GLuöt
, c⁄° 
GLubyã
 *);

5476 
GLAPI
 
APIENTRY
 
glVîãxAârib4uivARB
 (
GLuöt
, const GLuint *);

5477 
GLAPI
 
APIENTRY
 
glVîãxAârib4usvARB
 (
GLuöt
, c⁄° 
GLush‹t
 *);

5478 
GLAPI
 
APIENTRY
 
glVîãxAâribPoöãrARB
 (
GLuöt
, 
GLöt
, 
GLíum
, 
GLboﬁón
, 
GLsizei
, c⁄° 
GLvoid
 *);

5479 
GLAPI
 
APIENTRY
 
glE«bÀVîãxAâribAºayARB
 (
GLuöt
);

5480 
GLAPI
 
APIENTRY
 
glDißbÀVîãxAâribAºayARB
 (
GLuöt
);

5481 
GLAPI
 
APIENTRY
 
glProgømSåögARB
 (
GLíum
, GLíum, 
GLsizei
, c⁄° 
GLvoid
 *);

5482 
GLAPI
 
APIENTRY
 
glBödProgømARB
 (
GLíum
, 
GLuöt
);

5483 
GLAPI
 
APIENTRY
 
glDñëeProgømsARB
 (
GLsizei
, c⁄° 
GLuöt
 *);

5484 
GLAPI
 
APIENTRY
 
glGíProgømsARB
 (
GLsizei
, 
GLuöt
 *);

5485 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëî4dARB
 (
GLíum
, 
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

5486 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëî4dvARB
 (
GLíum
, 
GLuöt
, c⁄° 
GLdoubÀ
 *);

5487 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëî4fARB
 (
GLíum
, 
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

5488 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëî4fvARB
 (
GLíum
, 
GLuöt
, c⁄° 
GLÊﬂt
 *);

5489 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëî4dARB
 (
GLíum
, 
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

5490 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëî4dvARB
 (
GLíum
, 
GLuöt
, c⁄° 
GLdoubÀ
 *);

5491 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëî4fARB
 (
GLíum
, 
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

5492 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëî4fvARB
 (
GLíum
, 
GLuöt
, c⁄° 
GLÊﬂt
 *);

5493 
GLAPI
 
APIENTRY
 
glGëProgømEnvP¨amëîdvARB
 (
GLíum
, 
GLuöt
, 
GLdoubÀ
 *);

5494 
GLAPI
 
APIENTRY
 
glGëProgømEnvP¨amëîfvARB
 (
GLíum
, 
GLuöt
, 
GLÊﬂt
 *);

5495 
GLAPI
 
APIENTRY
 
glGëProgømLoˇlP¨amëîdvARB
 (
GLíum
, 
GLuöt
, 
GLdoubÀ
 *);

5496 
GLAPI
 
APIENTRY
 
glGëProgømLoˇlP¨amëîfvARB
 (
GLíum
, 
GLuöt
, 
GLÊﬂt
 *);

5497 
GLAPI
 
APIENTRY
 
glGëProgømivARB
 (
GLíum
, GLíum, 
GLöt
 *);

5498 
GLAPI
 
APIENTRY
 
glGëProgømSåögARB
 (
GLíum
, GLíum, 
GLvoid
 *);

5499 
GLAPI
 
APIENTRY
 
glGëVîãxAâribdvARB
 (
GLuöt
, 
GLíum
, 
GLdoubÀ
 *);

5500 
GLAPI
 
APIENTRY
 
glGëVîãxAâribfvARB
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

5501 
GLAPI
 
APIENTRY
 
glGëVîãxAâribivARB
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

5502 
GLAPI
 
APIENTRY
 
glGëVîãxAâribPoöãrvARB
 (
GLuöt
, 
GLíum
, 
GLvoid
* *);

5503 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsProgømARB
 (
GLuöt
);

5505 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
);

5506 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5507 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
);

5508 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5509 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
);

5510 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

5511 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

5512 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5513 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

5514 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5515 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

5516 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

5517 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

5518 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5519 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

5520 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5521 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

5522 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

5523 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NBVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 *
	tv
);

5524 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NIVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

5525 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NSVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

5526 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUBARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLubyã
 
	tx
, GLubyã 
	ty
, GLubyã 
	tz
, GLubyã 
	tw
);

5527 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUBVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 *
	tv
);

5528 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUIVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

5529 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4NUSVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 *
	tv
);

5530 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4BVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 *
	tv
);

5531 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

5532 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

5533 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

5534 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

5535 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4IVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

5536 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
, GLsh‹à
	tw
);

5537 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

5538 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UBVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 *
	tv
);

5539 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UIVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

5540 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4USVARBPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 *
	tv
);

5541 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBPOINTERARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLboﬁón
 
	tn‹mÆized
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

5542 (
APIENTRYP
 
	tPFNGLENABLEVERTEXATTRIBARRAYARBPROC
Ë(
	tGLuöt
 
	tödex
);

5543 (
APIENTRYP
 
	tPFNGLDISABLEVERTEXATTRIBARRAYARBPROC
Ë(
	tGLuöt
 
	tödex
);

5544 (
APIENTRYP
 
	tPFNGLPROGRAMSTRINGARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLvoid
 *
	t°rög
);

5545 (
APIENTRYP
 
	tPFNGLBINDPROGRAMARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	t¥ogøm
);

5546 (
APIENTRYP
 
	tPFNGLDELETEPROGRAMSARBPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t¥ogøms
);

5547 (
APIENTRYP
 
	tPFNGLGENPROGRAMSARBPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	t¥ogøms
);

5548 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETER4DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

5549 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETER4DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	t∑øms
);

5550 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETER4FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

5551 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETER4FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

5552 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETER4DARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

5553 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETER4DVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	t∑øms
);

5554 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETER4FARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

5555 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETER4FVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

5556 (
APIENTRYP
 
	tPFNGLGETPROGRAMENVPARAMETERDVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 *
	t∑øms
);

5557 (
APIENTRYP
 
	tPFNGLGETPROGRAMENVPARAMETERFVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 *
	t∑øms
);

5558 (
APIENTRYP
 
	tPFNGLGETPROGRAMLOCALPARAMETERDVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 *
	t∑øms
);

5559 (
APIENTRYP
 
	tPFNGLGETPROGRAMLOCALPARAMETERFVARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 *
	t∑øms
);

5560 (
APIENTRYP
 
	tPFNGLGETPROGRAMIVARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5561 (
APIENTRYP
 
	tPFNGLGETPROGRAMSTRINGARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLvoid
 *
	t°rög
);

5562 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBDVARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLdoubÀ
 *
	t∑øms
);

5563 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBFVARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

5564 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIVARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5565 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBPOINTERVARBPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLvoid
* *
	tpoöãr
);

5566 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISPROGRAMARBPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

5569 #i‚de‡
GL_ARB_‰agmít_¥ogøm


5570 
	#GL_ARB_‰agmít_¥ogøm
 1

	)

5574 #i‚de‡
GL_ARB_vîãx_buf„r_obje˘


5575 
	#GL_ARB_vîãx_buf„r_obje˘
 1

	)

5576 #ifde‡
GL_GLEXT_PROTOTYPES


5577 
GLAPI
 
APIENTRY
 
glBödBuf„rARB
 (
GLíum
, 
GLuöt
);

5578 
GLAPI
 
APIENTRY
 
glDñëeBuf„rsARB
 (
GLsizei
, c⁄° 
GLuöt
 *);

5579 
GLAPI
 
APIENTRY
 
glGíBuf„rsARB
 (
GLsizei
, 
GLuöt
 *);

5580 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsBuf„rARB
 (
GLuöt
);

5581 
GLAPI
 
APIENTRY
 
glBuf„rD©aARB
 (
GLíum
, 
GLsizeùåARB
, c⁄° 
GLvoid
 *, GLenum);

5582 
GLAPI
 
APIENTRY
 
glBuf„rSubD©aARB
 (
GLíum
, 
GLöçåARB
, 
GLsizeùåARB
, c⁄° 
GLvoid
 *);

5583 
GLAPI
 
APIENTRY
 
glGëBuf„rSubD©aARB
 (
GLíum
, 
GLöçåARB
, 
GLsizeùåARB
, 
GLvoid
 *);

5584 
GLAPI
 
GLvoid
* 
APIENTRY
 
glM≠Buf„rARB
 (
GLíum
, GLenum);

5585 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glUnm≠Buf„rARB
 (
GLíum
);

5586 
GLAPI
 
APIENTRY
 
glGëBuf„rP¨amëîivARB
 (
GLíum
, GLíum, 
GLöt
 *);

5587 
GLAPI
 
APIENTRY
 
glGëBuf„rPoöãrvARB
 (
GLíum
, GLíum, 
GLvoid
* *);

5589 (
APIENTRYP
 
	tPFNGLBINDBUFFERARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tbuf„r
);

5590 (
APIENTRYP
 
	tPFNGLDELETEBUFFERSARBPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tbuf„rs
);

5591 (
APIENTRYP
 
	tPFNGLGENBUFFERSARBPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tbuf„rs
);

5592 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISBUFFERARBPROC
Ë(
	tGLuöt
 
	tbuf„r
);

5593 (
APIENTRYP
 
	tPFNGLBUFFERDATAARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizeùåARB
 
	tsize
, c⁄° 
	tGLvoid
 *
	td©a
, GLíum 
	tußge
);

5594 (
APIENTRYP
 
	tPFNGLBUFFERSUBDATAARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçåARB
 
	toff£t
, 
	tGLsizeùåARB
 
	tsize
, c⁄° 
	tGLvoid
 *
	td©a
);

5595 (
APIENTRYP
 
	tPFNGLGETBUFFERSUBDATAARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçåARB
 
	toff£t
, 
	tGLsizeùåARB
 
	tsize
, 
	tGLvoid
 *
	td©a
);

5596 
	gGLvoid
* (
	tAPIENTRYP
 
	tPFNGLMAPBUFFERARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tac˚ss
);

5597 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLUNMAPBUFFERARBPROC
Ë(
	tGLíum
 
	tèrgë
);

5598 (
APIENTRYP
 
	tPFNGLGETBUFFERPARAMETERIVARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5599 (
APIENTRYP
 
	tPFNGLGETBUFFERPOINTERVARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLvoid
* *
	t∑øms
);

5602 #i‚de‡
GL_ARB_oc˛usi⁄_quîy


5603 
	#GL_ARB_oc˛usi⁄_quîy
 1

	)

5604 #ifde‡
GL_GLEXT_PROTOTYPES


5605 
GLAPI
 
APIENTRY
 
glGíQuîõsARB
 (
GLsizei
, 
GLuöt
 *);

5606 
GLAPI
 
APIENTRY
 
glDñëeQuîõsARB
 (
GLsizei
, c⁄° 
GLuöt
 *);

5607 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsQuîyARB
 (
GLuöt
);

5608 
GLAPI
 
APIENTRY
 
glBegöQuîyARB
 (
GLíum
, 
GLuöt
);

5609 
GLAPI
 
APIENTRY
 
glEndQuîyARB
 (
GLíum
);

5610 
GLAPI
 
APIENTRY
 
glGëQuîyivARB
 (
GLíum
, GLíum, 
GLöt
 *);

5611 
GLAPI
 
APIENTRY
 
glGëQuîyObje˘ivARB
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

5612 
GLAPI
 
APIENTRY
 
glGëQuîyObje˘uivARB
 (
GLuöt
, 
GLíum
, GLuint *);

5614 (
APIENTRYP
 
	tPFNGLGENQUERIESARBPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tids
);

5615 (
APIENTRYP
 
	tPFNGLDELETEQUERIESARBPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tids
);

5616 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISQUERYARBPROC
Ë(
	tGLuöt
 
	tid
);

5617 (
APIENTRYP
 
	tPFNGLBEGINQUERYARBPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
);

5618 (
APIENTRYP
 
	tPFNGLENDQUERYARBPROC
Ë(
	tGLíum
 
	tèrgë
);

5619 (
APIENTRYP
 
	tPFNGLGETQUERYIVARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5620 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTIVARBPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5621 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTUIVARBPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, GLuöà*
	t∑øms
);

5624 #i‚de‡
GL_ARB_shadî_obje˘s


5625 
	#GL_ARB_shadî_obje˘s
 1

	)

5626 #ifde‡
GL_GLEXT_PROTOTYPES


5627 
GLAPI
 
APIENTRY
 
glDñëeObje˘ARB
 (
GLh™dÀARB
);

5628 
GLAPI
 
GLh™dÀARB
 
APIENTRY
 
glGëH™dÀARB
 (
GLíum
);

5629 
GLAPI
 
APIENTRY
 
glDëachObje˘ARB
 (
GLh™dÀARB
, GLhandleARB);

5630 
GLAPI
 
GLh™dÀARB
 
APIENTRY
 
glCª©eShadîObje˘ARB
 (
GLíum
);

5631 
GLAPI
 
APIENTRY
 
glShadîSour˚ARB
 (
GLh™dÀARB
, 
GLsizei
, c⁄° 
GLch¨ARB
* *, c⁄° 
GLöt
 *);

5632 
GLAPI
 
APIENTRY
 
glCompûeShadîARB
 (
GLh™dÀARB
);

5633 
GLAPI
 
GLh™dÀARB
 
APIENTRY
 
glCª©eProgømObje˘ARB
 ();

5634 
GLAPI
 
APIENTRY
 
glAâachObje˘ARB
 (
GLh™dÀARB
, GLhandleARB);

5635 
GLAPI
 
APIENTRY
 
glLökProgømARB
 (
GLh™dÀARB
);

5636 
GLAPI
 
APIENTRY
 
glU£ProgømObje˘ARB
 (
GLh™dÀARB
);

5637 
GLAPI
 
APIENTRY
 
glVÆid©eProgømARB
 (
GLh™dÀARB
);

5638 
GLAPI
 
APIENTRY
 
glUnif‹m1fARB
 (
GLöt
, 
GLÊﬂt
);

5639 
GLAPI
 
APIENTRY
 
glUnif‹m2fARB
 (
GLöt
, 
GLÊﬂt
, GLfloat);

5640 
GLAPI
 
APIENTRY
 
glUnif‹m3fARB
 (
GLöt
, 
GLÊﬂt
, GLfloat, GLfloat);

5641 
GLAPI
 
APIENTRY
 
glUnif‹m4fARB
 (
GLöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

5642 
GLAPI
 
APIENTRY
 
glUnif‹m1iARB
 (
GLöt
, GLint);

5643 
GLAPI
 
APIENTRY
 
glUnif‹m2iARB
 (
GLöt
, GLint, GLint);

5644 
GLAPI
 
APIENTRY
 
glUnif‹m3iARB
 (
GLöt
, GLint, GLint, GLint);

5645 
GLAPI
 
APIENTRY
 
glUnif‹m4iARB
 (
GLöt
, GLint, GLint, GLint, GLint);

5646 
GLAPI
 
APIENTRY
 
glUnif‹m1fvARB
 (
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

5647 
GLAPI
 
APIENTRY
 
glUnif‹m2fvARB
 (
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

5648 
GLAPI
 
APIENTRY
 
glUnif‹m3fvARB
 (
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

5649 
GLAPI
 
APIENTRY
 
glUnif‹m4fvARB
 (
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

5650 
GLAPI
 
APIENTRY
 
glUnif‹m1ivARB
 (
GLöt
, 
GLsizei
, const GLint *);

5651 
GLAPI
 
APIENTRY
 
glUnif‹m2ivARB
 (
GLöt
, 
GLsizei
, const GLint *);

5652 
GLAPI
 
APIENTRY
 
glUnif‹m3ivARB
 (
GLöt
, 
GLsizei
, const GLint *);

5653 
GLAPI
 
APIENTRY
 
glUnif‹m4ivARB
 (
GLöt
, 
GLsizei
, const GLint *);

5654 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix2fvARB
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5655 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix3fvARB
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5656 
GLAPI
 
APIENTRY
 
glUnif‹mM©rix4fvARB
 (
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

5657 
GLAPI
 
APIENTRY
 
glGëObje˘P¨amëîfvARB
 (
GLh™dÀARB
, 
GLíum
, 
GLÊﬂt
 *);

5658 
GLAPI
 
APIENTRY
 
glGëObje˘P¨amëîivARB
 (
GLh™dÀARB
, 
GLíum
, 
GLöt
 *);

5659 
GLAPI
 
APIENTRY
 
glGëInfoLogARB
 (
GLh™dÀARB
, 
GLsizei
, GLsizeò*, 
GLch¨ARB
 *);

5660 
GLAPI
 
APIENTRY
 
glGëAâachedObje˘sARB
 (
GLh™dÀARB
, 
GLsizei
, GLsizei *, GLhandleARB *);

5661 
GLAPI
 
GLöt
 
APIENTRY
 
glGëUnif‹mLoˇti⁄ARB
 (
GLh™dÀARB
, c⁄° 
GLch¨ARB
 *);

5662 
GLAPI
 
APIENTRY
 
glGëA˘iveUnif‹mARB
 (
GLh™dÀARB
, 
GLuöt
, 
GLsizei
, GLsizeò*, 
GLöt
 *, 
GLíum
 *, 
GLch¨ARB
 *);

5663 
GLAPI
 
APIENTRY
 
glGëUnif‹mfvARB
 (
GLh™dÀARB
, 
GLöt
, 
GLÊﬂt
 *);

5664 
GLAPI
 
APIENTRY
 
glGëUnif‹mivARB
 (
GLh™dÀARB
, 
GLöt
, GLint *);

5665 
GLAPI
 
APIENTRY
 
glGëShadîSour˚ARB
 (
GLh™dÀARB
, 
GLsizei
, GLsizeò*, 
GLch¨ARB
 *);

5667 (
APIENTRYP
 
	tPFNGLDELETEOBJECTARBPROC
Ë(
	tGLh™dÀARB
 
	tobj
);

5668 
GLh™dÀARB
 (
	tAPIENTRYP
 
	tPFNGLGETHANDLEARBPROC
Ë(
	tGLíum
 
	t≤ame
);

5669 (
APIENTRYP
 
	tPFNGLDETACHOBJECTARBPROC
Ë(
	tGLh™dÀARB
 
	tc⁄èöîObj
, GLh™dÀARB 
	t©èchedObj
);

5670 
GLh™dÀARB
 (
	tAPIENTRYP
 
	tPFNGLCREATESHADEROBJECTARBPROC
Ë(
	tGLíum
 
	tshadîTy≥
);

5671 (
APIENTRYP
 
	tPFNGLSHADERSOURCEARBPROC
Ë(
	tGLh™dÀARB
 
	tshadîObj
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLch¨ARB
* *
	t°rög
, c⁄° 
	tGLöt
 *
	tÀngth
);

5672 (
APIENTRYP
 
	tPFNGLCOMPILESHADERARBPROC
Ë(
	tGLh™dÀARB
 
	tshadîObj
);

5673 
GLh™dÀARB
 (
	tAPIENTRYP
 
	tPFNGLCREATEPROGRAMOBJECTARBPROC
) ();

5674 (
APIENTRYP
 
	tPFNGLATTACHOBJECTARBPROC
Ë(
	tGLh™dÀARB
 
	tc⁄èöîObj
, GLh™dÀARB 
	tobj
);

5675 (
APIENTRYP
 
	tPFNGLLINKPROGRAMARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
);

5676 (
APIENTRYP
 
	tPFNGLUSEPROGRAMOBJECTARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
);

5677 (
APIENTRYP
 
	tPFNGLVALIDATEPROGRAMARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
);

5678 (
APIENTRYP
 
	tPFNGLUNIFORM1FARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
);

5679 (
APIENTRYP
 
	tPFNGLUNIFORM2FARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
);

5680 (
APIENTRYP
 
	tPFNGLUNIFORM3FARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
);

5681 (
APIENTRYP
 
	tPFNGLUNIFORM4FARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
, GLÊﬂà
	tv3
);

5682 (
APIENTRYP
 
	tPFNGLUNIFORM1IARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
);

5683 (
APIENTRYP
 
	tPFNGLUNIFORM2IARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
);

5684 (
APIENTRYP
 
	tPFNGLUNIFORM3IARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
, GLöà
	tv2
);

5685 (
APIENTRYP
 
	tPFNGLUNIFORM4IARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
, GLöà
	tv2
, GLöà
	tv3
);

5686 (
APIENTRYP
 
	tPFNGLUNIFORM1FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5687 (
APIENTRYP
 
	tPFNGLUNIFORM2FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5688 (
APIENTRYP
 
	tPFNGLUNIFORM3FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5689 (
APIENTRYP
 
	tPFNGLUNIFORM4FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5690 (
APIENTRYP
 
	tPFNGLUNIFORM1IVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

5691 (
APIENTRYP
 
	tPFNGLUNIFORM2IVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

5692 (
APIENTRYP
 
	tPFNGLUNIFORM3IVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

5693 (
APIENTRYP
 
	tPFNGLUNIFORM4IVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

5694 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX2FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5695 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX3FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5696 (
APIENTRYP
 
	tPFNGLUNIFORMMATRIX4FVARBPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

5697 (
APIENTRYP
 
	tPFNGLGETOBJECTPARAMETERFVARBPROC
Ë(
	tGLh™dÀARB
 
	tobj
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

5698 (
APIENTRYP
 
	tPFNGLGETOBJECTPARAMETERIVARBPROC
Ë(
	tGLh™dÀARB
 
	tobj
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5699 (
APIENTRYP
 
	tPFNGLGETINFOLOGARBPROC
Ë(
	tGLh™dÀARB
 
	tobj
, 
	tGLsizei
 
	tmaxLígth
, GLsizeò*
	tÀngth
, 
	tGLch¨ARB
 *
	töfoLog
);

5700 (
APIENTRYP
 
	tPFNGLGETATTACHEDOBJECTSARBPROC
Ë(
	tGLh™dÀARB
 
	tc⁄èöîObj
, 
	tGLsizei
 
	tmaxCou¡
, GLsizeò*
	tcou¡
, GLh™dÀARB *
	tobj
);

5701 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETUNIFORMLOCATIONARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, c⁄° 
	tGLch¨ARB
 *
	t«me
);

5702 (
APIENTRYP
 
	tPFNGLGETACTIVEUNIFORMARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tmaxLígth
, GLsizeò*
	tÀngth
, 
	tGLöt
 *
	tsize
, 
	tGLíum
 *
	tty≥
, 
	tGLch¨ARB
 *
	t«me
);

5703 (
APIENTRYP
 
	tPFNGLGETUNIFORMFVARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 *
	t∑øms
);

5704 (
APIENTRYP
 
	tPFNGLGETUNIFORMIVARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, 
	tGLöt
 
	tloˇti⁄
, GLöà*
	t∑øms
);

5705 (
APIENTRYP
 
	tPFNGLGETSHADERSOURCEARBPROC
Ë(
	tGLh™dÀARB
 
	tobj
, 
	tGLsizei
 
	tmaxLígth
, GLsizeò*
	tÀngth
, 
	tGLch¨ARB
 *
	tsour˚
);

5708 #i‚de‡
GL_ARB_vîãx_shadî


5709 
	#GL_ARB_vîãx_shadî
 1

	)

5710 #ifde‡
GL_GLEXT_PROTOTYPES


5711 
GLAPI
 
APIENTRY
 
glBödAâribLoˇti⁄ARB
 (
GLh™dÀARB
, 
GLuöt
, c⁄° 
GLch¨ARB
 *);

5712 
GLAPI
 
APIENTRY
 
glGëA˘iveAâribARB
 (
GLh™dÀARB
, 
GLuöt
, 
GLsizei
, GLsizeò*, 
GLöt
 *, 
GLíum
 *, 
GLch¨ARB
 *);

5713 
GLAPI
 
GLöt
 
APIENTRY
 
glGëAâribLoˇti⁄ARB
 (
GLh™dÀARB
, c⁄° 
GLch¨ARB
 *);

5715 (
APIENTRYP
 
	tPFNGLBINDATTRIBLOCATIONARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLch¨ARB
 *
	t«me
);

5716 (
APIENTRYP
 
	tPFNGLGETACTIVEATTRIBARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tmaxLígth
, GLsizeò*
	tÀngth
, 
	tGLöt
 *
	tsize
, 
	tGLíum
 *
	tty≥
, 
	tGLch¨ARB
 *
	t«me
);

5717 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETATTRIBLOCATIONARBPROC
Ë(
	tGLh™dÀARB
 
	t¥ogømObj
, c⁄° 
	tGLch¨ARB
 *
	t«me
);

5720 #i‚de‡
GL_ARB_‰agmít_shadî


5721 
	#GL_ARB_‰agmít_shadî
 1

	)

5724 #i‚de‡
GL_ARB_shadög_œnguage_100


5725 
	#GL_ARB_shadög_œnguage_100
 1

	)

5728 #i‚de‡
GL_ARB_ãxtuª_n⁄_powî_of_two


5729 
	#GL_ARB_ãxtuª_n⁄_powî_of_two
 1

	)

5732 #i‚de‡
GL_ARB_poöt_•rôe


5733 
	#GL_ARB_poöt_•rôe
 1

	)

5736 #i‚de‡
GL_ARB_‰agmít_¥ogøm_shadow


5737 
	#GL_ARB_‰agmít_¥ogøm_shadow
 1

	)

5740 #i‚de‡
GL_ARB_døw_buf„rs


5741 
	#GL_ARB_døw_buf„rs
 1

	)

5742 #ifde‡
GL_GLEXT_PROTOTYPES


5743 
GLAPI
 
APIENTRY
 
glDøwBuf„rsARB
 (
GLsizei
, c⁄° 
GLíum
 *);

5745 (
APIENTRYP
 
	tPFNGLDRAWBUFFERSARBPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLíum
 *
	tbufs
);

5748 #i‚de‡
GL_ARB_ãxtuª_ª˘™gÀ


5749 
	#GL_ARB_ãxtuª_ª˘™gÀ
 1

	)

5752 #i‚de‡
GL_ARB_cﬁ‹_buf„r_Êﬂt


5753 
	#GL_ARB_cﬁ‹_buf„r_Êﬂt
 1

	)

5754 #ifde‡
GL_GLEXT_PROTOTYPES


5755 
GLAPI
 
APIENTRY
 
glCœmpCﬁ‹ARB
 (
GLíum
, GLenum);

5757 (
APIENTRYP
 
	tPFNGLCLAMPCOLORARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t˛amp
);

5760 #i‚de‡
GL_ARB_hÆf_Êﬂt_pixñ


5761 
	#GL_ARB_hÆf_Êﬂt_pixñ
 1

	)

5764 #i‚de‡
GL_ARB_ãxtuª_Êﬂt


5765 
	#GL_ARB_ãxtuª_Êﬂt
 1

	)

5768 #i‚de‡
GL_ARB_pixñ_buf„r_obje˘


5769 
	#GL_ARB_pixñ_buf„r_obje˘
 1

	)

5772 #i‚de‡
GL_ARB_dïth_buf„r_Êﬂt


5773 
	#GL_ARB_dïth_buf„r_Êﬂt
 1

	)

5776 #i‚de‡
GL_ARB_døw_ö°™˚d


5777 
	#GL_ARB_døw_ö°™˚d
 1

	)

5778 #ifde‡
GL_GLEXT_PROTOTYPES


5779 
GLAPI
 
APIENTRY
 
glDøwAºaysIn°™˚dARB
 (
GLíum
, 
GLöt
, 
GLsizei
, GLsizei);

5780 
GLAPI
 
APIENTRY
 
glDøwEÀmítsIn°™˚dARB
 (
GLíum
, 
GLsizei
, GLíum, c⁄° 
GLvoid
 *, GLsizei);

5782 (
APIENTRYP
 
	tPFNGLDRAWARRAYSINSTANCEDARBPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
, GLsizeò
	t¥imcou¡
);

5783 (
APIENTRYP
 
	tPFNGLDRAWELEMENTSINSTANCEDARBPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
, GLsizeò
	t¥imcou¡
);

5786 #i‚de‡
GL_ARB_‰amebuf„r_obje˘


5787 
	#GL_ARB_‰amebuf„r_obje˘
 1

	)

5788 #ifde‡
GL_GLEXT_PROTOTYPES


5789 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsRídîbuf„r
 (
GLuöt
);

5790 
GLAPI
 
APIENTRY
 
glBödRídîbuf„r
 (
GLíum
, 
GLuöt
);

5791 
GLAPI
 
APIENTRY
 
glDñëeRídîbuf„rs
 (
GLsizei
, c⁄° 
GLuöt
 *);

5792 
GLAPI
 
APIENTRY
 
glGíRídîbuf„rs
 (
GLsizei
, 
GLuöt
 *);

5793 
GLAPI
 
APIENTRY
 
glRídîbuf„rSt‹age
 (
GLíum
, GLíum, 
GLsizei
, GLsizei);

5794 
GLAPI
 
APIENTRY
 
glGëRídîbuf„rP¨amëîiv
 (
GLíum
, GLíum, 
GLöt
 *);

5795 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsFømebuf„r
 (
GLuöt
);

5796 
GLAPI
 
APIENTRY
 
glBödFømebuf„r
 (
GLíum
, 
GLuöt
);

5797 
GLAPI
 
APIENTRY
 
glDñëeFømebuf„rs
 (
GLsizei
, c⁄° 
GLuöt
 *);

5798 
GLAPI
 
APIENTRY
 
glGíFømebuf„rs
 (
GLsizei
, 
GLuöt
 *);

5799 
GLAPI
 
GLíum
 
APIENTRY
 
glCheckFømebuf„rSètus
 (GLenum);

5800 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuª1D
 (
GLíum
, GLíum, GLíum, 
GLuöt
, 
GLöt
);

5801 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuª2D
 (
GLíum
, GLíum, GLíum, 
GLuöt
, 
GLöt
);

5802 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuª3D
 (
GLíum
, GLíum, GLíum, 
GLuöt
, 
GLöt
, GLint);

5803 
GLAPI
 
APIENTRY
 
glFømebuf„rRídîbuf„r
 (
GLíum
, GLíum, GLíum, 
GLuöt
);

5804 
GLAPI
 
APIENTRY
 
glGëFømebuf„rAâachmítP¨amëîiv
 (
GLíum
, GLíum, GLíum, 
GLöt
 *);

5805 
GLAPI
 
APIENTRY
 
glGíî©eMùm≠
 (
GLíum
);

5806 
GLAPI
 
APIENTRY
 
glBlôFømebuf„r
 (
GLöt
, GLöt, GLöt, GLöt, GLöt, GLöt, GLöt, GLöt, 
GLbôfõld
, 
GLíum
);

5807 
GLAPI
 
APIENTRY
 
glRídîbuf„rSt‹ageMu…ißm∂e
 (
GLíum
, 
GLsizei
, GLenum, GLsizei, GLsizei);

5808 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuªLayî
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
, GLint);

5810 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISRENDERBUFFERPROC
Ë(
	tGLuöt
 
	tªndîbuf„r
);

5811 (
APIENTRYP
 
	tPFNGLBINDRENDERBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tªndîbuf„r
);

5812 (
APIENTRYP
 
	tPFNGLDELETERENDERBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tªndîbuf„rs
);

5813 (
APIENTRYP
 
	tPFNGLGENRENDERBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tªndîbuf„rs
);

5814 (
APIENTRYP
 
	tPFNGLRENDERBUFFERSTORAGEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

5815 (
APIENTRYP
 
	tPFNGLGETRENDERBUFFERPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5816 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISFRAMEBUFFERPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
);

5817 (
APIENTRYP
 
	tPFNGLBINDFRAMEBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	t‰amebuf„r
);

5818 (
APIENTRYP
 
	tPFNGLDELETEFRAMEBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t‰amebuf„rs
);

5819 (
APIENTRYP
 
	tPFNGLGENFRAMEBUFFERSPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	t‰amebuf„rs
);

5820 
GLíum
 (
	tAPIENTRYP
 
	tPFNGLCHECKFRAMEBUFFERSTATUSPROC
Ë(
	tGLíum
 
	tèrgë
);

5821 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURE1DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tãxèrgë
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

5822 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURE2DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tãxèrgë
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

5823 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURE3DPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tãxèrgë
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tzoff£t
);

5824 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERRENDERBUFFERPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tªndîbuf„π¨gë
, 
	tGLuöt
 
	tªndîbuf„r
);

5825 (
APIENTRYP
 
	tPFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5826 (
APIENTRYP
 
	tPFNGLGENERATEMIPMAPPROC
Ë(
	tGLíum
 
	tèrgë
);

5827 (
APIENTRYP
 
	tPFNGLBLITFRAMEBUFFERPROC
Ë(
	tGLöt
 
	t§cX0
, GLöà
	t§cY0
, GLöà
	t§cX1
, GLöà
	t§cY1
, GLöà
	td°X0
, GLöà
	td°Y0
, GLöà
	td°X1
, GLöà
	td°Y1
, 
	tGLbôfõld
 
	tmask
, 
	tGLíum
 
	tfûãr
);

5828 (
APIENTRYP
 
	tPFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tßm∂es
, GLíum 
	töã∫Æf‹m©
, GLsizeò
	twidth
, GLsizeò
	theight
);

5829 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURELAYERPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tœyî
);

5832 #i‚de‡
GL_ARB_‰amebuf„r_sRGB


5833 
	#GL_ARB_‰amebuf„r_sRGB
 1

	)

5836 #i‚de‡
GL_ARB_geomëry_shadî4


5837 
	#GL_ARB_geomëry_shadî4
 1

	)

5838 #ifde‡
GL_GLEXT_PROTOTYPES


5839 
GLAPI
 
APIENTRY
 
glProgømP¨amëîiARB
 (
GLuöt
, 
GLíum
, 
GLöt
);

5840 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuªARB
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
);

5841 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuªLayîARB
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
, GLint);

5842 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuªFa˚ARB
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
, GLenum);

5844 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETERIARBPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	tvÆue
);

5845 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTUREARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

5846 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURELAYERARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tœyî
);

5847 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTUREFACEARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLíum 
	tÁ˚
);

5850 #i‚de‡
GL_ARB_hÆf_Êﬂt_vîãx


5851 
	#GL_ARB_hÆf_Êﬂt_vîãx
 1

	)

5854 #i‚de‡
GL_ARB_ö°™˚d_¨øys


5855 
	#GL_ARB_ö°™˚d_¨øys
 1

	)

5856 #ifde‡
GL_GLEXT_PROTOTYPES


5857 
GLAPI
 
APIENTRY
 
glVîãxAâribDivis‹ARB
 (
GLuöt
, GLuint);

5859 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBDIVISORARBPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tdivis‹
);

5862 #i‚de‡
GL_ARB_m≠_buf„r_ønge


5863 
	#GL_ARB_m≠_buf„r_ønge
 1

	)

5864 #ifde‡
GL_GLEXT_PROTOTYPES


5865 
GLAPI
 
GLvoid
* 
APIENTRY
 
glM≠Buf„rR™ge
 (
GLíum
, 
GLöçå
, 
GLsizeùå
, 
GLbôfõld
);

5866 
GLAPI
 
APIENTRY
 
glFlushM≠≥dBuf„rR™ge
 (
GLíum
, 
GLöçå
, 
GLsizeùå
);

5868 
	gGLvoid
* (
	tAPIENTRYP
 
	tPFNGLMAPBUFFERRANGEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tÀngth
, 
	tGLbôfõld
 
	tac˚ss
);

5869 (
APIENTRYP
 
	tPFNGLFLUSHMAPPEDBUFFERRANGEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tÀngth
);

5872 #i‚de‡
GL_ARB_ãxtuª_buf„r_obje˘


5873 
	#GL_ARB_ãxtuª_buf„r_obje˘
 1

	)

5874 #ifde‡
GL_GLEXT_PROTOTYPES


5875 
GLAPI
 
APIENTRY
 
glTexBuf„rARB
 (
GLíum
, GLíum, 
GLuöt
);

5877 (
APIENTRYP
 
	tPFNGLTEXBUFFERARBPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLuöt
 
	tbuf„r
);

5880 #i‚de‡
GL_ARB_ãxtuª_com¥essi⁄_rgtc


5881 
	#GL_ARB_ãxtuª_com¥essi⁄_rgtc
 1

	)

5884 #i‚de‡
GL_ARB_ãxtuª_rg


5885 
	#GL_ARB_ãxtuª_rg
 1

	)

5888 #i‚de‡
GL_ARB_vîãx_¨øy_obje˘


5889 
	#GL_ARB_vîãx_¨øy_obje˘
 1

	)

5890 #ifde‡
GL_GLEXT_PROTOTYPES


5891 
GLAPI
 
APIENTRY
 
glBödVîãxAºay
 (
GLuöt
);

5892 
GLAPI
 
APIENTRY
 
glDñëeVîãxAºays
 (
GLsizei
, c⁄° 
GLuöt
 *);

5893 
GLAPI
 
APIENTRY
 
glGíVîãxAºays
 (
GLsizei
, 
GLuöt
 *);

5894 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsVîãxAºay
 (
GLuöt
);

5896 (
APIENTRYP
 
	tPFNGLBINDVERTEXARRAYPROC
Ë(
	tGLuöt
 
	t¨øy
);

5897 (
APIENTRYP
 
	tPFNGLDELETEVERTEXARRAYSPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t¨øys
);

5898 (
APIENTRYP
 
	tPFNGLGENVERTEXARRAYSPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	t¨øys
);

5899 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISVERTEXARRAYPROC
Ë(
	tGLuöt
 
	t¨øy
);

5902 #i‚de‡
GL_ARB_unif‹m_buf„r_obje˘


5903 
	#GL_ARB_unif‹m_buf„r_obje˘
 1

	)

5904 #ifde‡
GL_GLEXT_PROTOTYPES


5905 
GLAPI
 
APIENTRY
 
glGëUnif‹mIndi˚s
 (
GLuöt
, 
GLsizei
, c⁄° 
GLch¨
* *, GLuint *);

5906 
GLAPI
 
APIENTRY
 
glGëA˘iveUnif‹msiv
 (
GLuöt
, 
GLsizei
, c⁄° GLuöà*, 
GLíum
, 
GLöt
 *);

5907 
GLAPI
 
APIENTRY
 
glGëA˘iveUnif‹mName
 (
GLuöt
, GLuöt, 
GLsizei
, GLsizeò*, 
GLch¨
 *);

5908 
GLAPI
 
GLuöt
 
APIENTRY
 
glGëUnif‹mBlockIndex
 (GLuöt, c⁄° 
GLch¨
 *);

5909 
GLAPI
 
APIENTRY
 
glGëA˘iveUnif‹mBlockiv
 (
GLuöt
, GLuöt, 
GLíum
, 
GLöt
 *);

5910 
GLAPI
 
APIENTRY
 
glGëA˘iveUnif‹mBlockName
 (
GLuöt
, GLuöt, 
GLsizei
, GLsizeò*, 
GLch¨
 *);

5911 
GLAPI
 
APIENTRY
 
glUnif‹mBlockBödög
 (
GLuöt
, GLuint, GLuint);

5913 (
APIENTRYP
 
	tPFNGLGETUNIFORMINDICESPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tunif‹mCou¡
, c⁄° 
	tGLch¨
* *
	tunif‹mNames
, GLuöà*
	tunif‹mIndi˚s
);

5914 (
APIENTRYP
 
	tPFNGLGETACTIVEUNIFORMSIVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tunif‹mCou¡
, c⁄° GLuöà*
	tunif‹mIndi˚s
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5915 (
APIENTRYP
 
	tPFNGLGETACTIVEUNIFORMNAMEPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tunif‹mIndex
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLch¨
 *
	tunif‹mName
);

5916 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLGETUNIFORMBLOCKINDEXPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 *
	tunif‹mBlockName
);

5917 (
APIENTRYP
 
	tPFNGLGETACTIVEUNIFORMBLOCKIVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tunif‹mBlockIndex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

5918 (
APIENTRYP
 
	tPFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tunif‹mBlockIndex
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLch¨
 *
	tunif‹mBlockName
);

5919 (
APIENTRYP
 
	tPFNGLUNIFORMBLOCKBINDINGPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tunif‹mBlockIndex
, GLuöà
	tunif‹mBlockBödög
);

5922 #i‚de‡
GL_ARB_com∑tibûôy


5923 
	#GL_ARB_com∑tibûôy
 1

	)

5926 #i‚de‡
GL_ARB_c›y_buf„r


5927 
	#GL_ARB_c›y_buf„r
 1

	)

5928 #ifde‡
GL_GLEXT_PROTOTYPES


5929 
GLAPI
 
APIENTRY
 
glC›yBuf„rSubD©a
 (
GLíum
, GLíum, 
GLöçå
, GLöçå, 
GLsizeùå
);

5931 (
APIENTRYP
 
	tPFNGLCOPYBUFFERSUBDATAPROC
Ë(
	tGLíum
 
	tªadT¨gë
, GLíum 
	twrôeT¨gë
, 
	tGLöçå
 
	tªadOff£t
, GLöçå 
	twrôeOff£t
, 
	tGLsizeùå
 
	tsize
);

5934 #i‚de‡
GL_ARB_shadî_ãxtuª_lod


5935 
	#GL_ARB_shadî_ãxtuª_lod
 1

	)

5938 #i‚de‡
GL_ARB_dïth_˛amp


5939 
	#GL_ARB_dïth_˛amp
 1

	)

5942 #i‚de‡
GL_ARB_døw_ñemíts_ba£_vîãx


5943 
	#GL_ARB_døw_ñemíts_ba£_vîãx
 1

	)

5944 #ifde‡
GL_GLEXT_PROTOTYPES


5945 
GLAPI
 
APIENTRY
 
glDøwEÀmítsBa£Vîãx
 (
GLíum
, 
GLsizei
, GLíum, c⁄° 
GLvoid
 *, 
GLöt
);

5946 
GLAPI
 
APIENTRY
 
glDøwR™geEÀmítsBa£Vîãx
 (
GLíum
, 
GLuöt
, GLuöt, 
GLsizei
, GLíum, c⁄° 
GLvoid
 *, 
GLöt
);

5947 
GLAPI
 
APIENTRY
 
glDøwEÀmítsIn°™˚dBa£Vîãx
 (
GLíum
, 
GLsizei
, GLíum, c⁄° 
GLvoid
 *, GLsizei, 
GLöt
);

5948 
GLAPI
 
APIENTRY
 
glMu…iDøwEÀmítsBa£Vîãx
 (
GLíum
, c⁄° 
GLsizei
 *, GLíum, c⁄° 
GLvoid
* *, GLsizei, c⁄° 
GLöt
 *);

5950 (
APIENTRYP
 
	tPFNGLDRAWELEMENTSBASEVERTEXPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
, 
	tGLöt
 
	tba£vîãx
);

5951 (
APIENTRYP
 
	tPFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
, 
	tGLöt
 
	tba£vîãx
);

5952 (
APIENTRYP
 
	tPFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
, GLsizeò
	t¥imcou¡
, 
	tGLöt
 
	tba£vîãx
);

5953 (
APIENTRYP
 
	tPFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLsizei
 *
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
* *
	tödi˚s
, GLsizeò
	t¥imcou¡
, c⁄° 
	tGLöt
 *
	tba£vîãx
);

5956 #i‚de‡
GL_ARB_‰agmít_co‹d_c⁄víti⁄s


5957 
	#GL_ARB_‰agmít_co‹d_c⁄víti⁄s
 1

	)

5960 #i‚de‡
GL_ARB_¥ovokög_vîãx


5961 
	#GL_ARB_¥ovokög_vîãx
 1

	)

5962 #ifde‡
GL_GLEXT_PROTOTYPES


5963 
GLAPI
 
APIENTRY
 
glProvokögVîãx
 (
GLíum
);

5965 (
APIENTRYP
 
	tPFNGLPROVOKINGVERTEXPROC
Ë(
	tGLíum
 
	tmode
);

5968 #i‚de‡
GL_ARB_£amÀss_cube_m≠


5969 
	#GL_ARB_£amÀss_cube_m≠
 1

	)

5972 #i‚de‡
GL_ARB_sync


5973 
	#GL_ARB_sync
 1

	)

5974 #ifde‡
GL_GLEXT_PROTOTYPES


5975 
GLAPI
 
GLsync
 
APIENTRY
 
glFí˚Sync
 (
GLíum
, 
GLbôfõld
);

5976 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsSync
 (
GLsync
);

5977 
GLAPI
 
APIENTRY
 
glDñëeSync
 (
GLsync
);

5978 
GLAPI
 
GLíum
 
APIENTRY
 
glClõ¡WaôSync
 (
GLsync
, 
GLbôfõld
, 
GLuöt64
);

5979 
GLAPI
 
APIENTRY
 
glWaôSync
 (
GLsync
, 
GLbôfõld
, 
GLuöt64
);

5980 
GLAPI
 
APIENTRY
 
glGëI¡egî64v
 (
GLíum
, 
GLöt64
 *);

5981 
GLAPI
 
APIENTRY
 
glGëSynciv
 (
GLsync
, 
GLíum
, 
GLsizei
, GLsizeò*, 
GLöt
 *);

5983 
GLsync
 (
	tAPIENTRYP
 
	tPFNGLFENCESYNCPROC
Ë(
	tGLíum
 
	tc⁄dôi⁄
, 
	tGLbôfõld
 
	tÊags
);

5984 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISSYNCPROC
Ë(
	tGLsync
 
	tsync
);

5985 (
APIENTRYP
 
	tPFNGLDELETESYNCPROC
Ë(
	tGLsync
 
	tsync
);

5986 
GLíum
 (
	tAPIENTRYP
 
	tPFNGLCLIENTWAITSYNCPROC
Ë(
	tGLsync
 
	tsync
, 
	tGLbôfõld
 
	tÊags
, 
	tGLuöt64
 
	ttimeout
);

5987 (
APIENTRYP
 
	tPFNGLWAITSYNCPROC
Ë(
	tGLsync
 
	tsync
, 
	tGLbôfõld
 
	tÊags
, 
	tGLuöt64
 
	ttimeout
);

5988 (
APIENTRYP
 
	tPFNGLGETINTEGER64VPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt64
 *
	t∑øms
);

5989 (
APIENTRYP
 
	tPFNGLGETSYNCIVPROC
Ë(
	tGLsync
 
	tsync
, 
	tGLíum
 
	t≤ame
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLöt
 *
	tvÆues
);

5992 #i‚de‡
GL_ARB_ãxtuª_mu…ißm∂e


5993 
	#GL_ARB_ãxtuª_mu…ißm∂e
 1

	)

5994 #ifde‡
GL_GLEXT_PROTOTYPES


5995 
GLAPI
 
APIENTRY
 
glTexImage2DMu…ißm∂e
 (
GLíum
, 
GLsizei
, 
GLöt
, GLsizei, GLsizei, 
GLboﬁón
);

5996 
GLAPI
 
APIENTRY
 
glTexImage3DMu…ißm∂e
 (
GLíum
, 
GLsizei
, 
GLöt
, GLsizei, GLsizei, GLsizei, 
GLboﬁón
);

5997 
GLAPI
 
APIENTRY
 
glGëMu…ißm∂efv
 (
GLíum
, 
GLuöt
, 
GLÊﬂt
 *);

5998 
GLAPI
 
APIENTRY
 
glSam∂eMaski
 (
GLuöt
, 
GLbôfõld
);

6000 (
APIENTRYP
 
	tPFNGLTEXIMAGE2DMULTISAMPLEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tßm∂es
, 
	tGLöt
 
	töã∫Æf‹m©
, GLsizeò
	twidth
, GLsizeò
	theight
, 
	tGLboﬁón
 
	tfixedßm∂ñoˇti⁄s
);

6001 (
APIENTRYP
 
	tPFNGLTEXIMAGE3DMULTISAMPLEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tßm∂es
, 
	tGLöt
 
	töã∫Æf‹m©
, GLsizeò
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, 
	tGLboﬁón
 
	tfixedßm∂ñoˇti⁄s
);

6002 (
APIENTRYP
 
	tPFNGLGETMULTISAMPLEFVPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 *
	tvÆ
);

6003 (
APIENTRYP
 
	tPFNGLSAMPLEMASKIPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLbôfõld
 
	tmask
);

6006 #i‚de‡
GL_ARB_vîãx_¨øy_bgø


6007 
	#GL_ARB_vîãx_¨øy_bgø
 1

	)

6010 #i‚de‡
GL_ARB_døw_buf„rs_bÀnd


6011 
	#GL_ARB_døw_buf„rs_bÀnd
 1

	)

6012 #ifde‡
GL_GLEXT_PROTOTYPES


6013 
GLAPI
 
APIENTRY
 
glBÀndEqu©i⁄i
 (
GLuöt
, 
GLíum
);

6014 
GLAPI
 
APIENTRY
 
glBÀndEqu©i⁄Sï¨©ei
 (
GLuöt
, 
GLíum
, GLenum);

6015 
GLAPI
 
APIENTRY
 
glBÀndFunci
 (
GLuöt
, 
GLíum
, GLenum);

6016 
GLAPI
 
APIENTRY
 
glBÀndFuncSï¨©ei
 (
GLuöt
, 
GLíum
, GLenum, GLenum, GLenum);

6018 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONIPROC
Ë(
	tGLuöt
 
	tbuf
, 
	tGLíum
 
	tmode
);

6019 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONSEPARATEIPROC
Ë(
	tGLuöt
 
	tbuf
, 
	tGLíum
 
	tmodeRGB
, GLíum 
	tmodeAÕha
);

6020 (
APIENTRYP
 
	tPFNGLBLENDFUNCIPROC
Ë(
	tGLuöt
 
	tbuf
, 
	tGLíum
 
	t§c
, GLíum 
	td°
);

6021 (
APIENTRYP
 
	tPFNGLBLENDFUNCSEPARATEIPROC
Ë(
	tGLuöt
 
	tbuf
, 
	tGLíum
 
	t§cRGB
, GLíum 
	td°RGB
, GLíum 
	t§cAÕha
, GLíum 
	td°AÕha
);

6024 #i‚de‡
GL_ARB_ßm∂e_shadög


6025 
	#GL_ARB_ßm∂e_shadög
 1

	)

6026 #ifde‡
GL_GLEXT_PROTOTYPES


6027 
GLAPI
 
APIENTRY
 
glMöSam∂eShadög
 (
GL˛ampf
);

6029 (
APIENTRYP
 
	tPFNGLMINSAMPLESHADINGPROC
Ë(
	tGL˛ampf
 
	tvÆue
);

6032 #i‚de‡
GL_ARB_ãxtuª_cube_m≠_¨øy


6033 
	#GL_ARB_ãxtuª_cube_m≠_¨øy
 1

	)

6036 #i‚de‡
GL_ARB_ãxtuª_g©hî


6037 
	#GL_ARB_ãxtuª_g©hî
 1

	)

6040 #i‚de‡
GL_ARB_ãxtuª_quîy_lod


6041 
	#GL_ARB_ãxtuª_quîy_lod
 1

	)

6044 #i‚de‡
GL_EXT_abgr


6045 
	#GL_EXT_abgr
 1

	)

6048 #i‚de‡
GL_EXT_bÀnd_cﬁ‹


6049 
	#GL_EXT_bÀnd_cﬁ‹
 1

	)

6050 #ifde‡
GL_GLEXT_PROTOTYPES


6051 
GLAPI
 
APIENTRY
 
glBÀndCﬁ‹EXT
 (
GL˛ampf
, GLclampf, GLclampf, GLclampf);

6053 (
APIENTRYP
 
	tPFNGLBLENDCOLOREXTPROC
Ë(
	tGL˛ampf
 
	tªd
, GL˛amp‡
	tgªí
, GL˛amp‡
	tblue
, GL˛amp‡
	tÆpha
);

6056 #i‚de‡
GL_EXT_pﬁyg⁄_off£t


6057 
	#GL_EXT_pﬁyg⁄_off£t
 1

	)

6058 #ifde‡
GL_GLEXT_PROTOTYPES


6059 
GLAPI
 
APIENTRY
 
glPﬁyg⁄Off£tEXT
 (
GLÊﬂt
, GLfloat);

6061 (
APIENTRYP
 
	tPFNGLPOLYGONOFFSETEXTPROC
Ë(
	tGLÊﬂt
 
	tÁ˘‹
, GLÊﬂà
	tbüs
);

6064 #i‚de‡
GL_EXT_ãxtuª


6065 
	#GL_EXT_ãxtuª
 1

	)

6068 #i‚de‡
GL_EXT_ãxtuª3D


6069 
	#GL_EXT_ãxtuª3D
 1

	)

6070 #ifde‡
GL_GLEXT_PROTOTYPES


6071 
GLAPI
 
APIENTRY
 
glTexImage3DEXT
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLsizei, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

6072 
GLAPI
 
APIENTRY
 
glTexSubImage3DEXT
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

6074 (
APIENTRYP
 
	tPFNGLTEXIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

6075 (
APIENTRYP
 
	tPFNGLTEXSUBIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

6078 #i‚de‡
GL_SGIS_ãxtuª_fûãr4


6079 
	#GL_SGIS_ãxtuª_fûãr4
 1

	)

6080 #ifde‡
GL_GLEXT_PROTOTYPES


6081 
GLAPI
 
APIENTRY
 
glGëTexFûãrFuncSGIS
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6082 
GLAPI
 
APIENTRY
 
glTexFûãrFuncSGIS
 (
GLíum
, GLíum, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

6084 (
APIENTRYP
 
	tPFNGLGETTEXFILTERFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tfûãr
, 
	tGLÊﬂt
 *
	tweights
);

6085 (
APIENTRYP
 
	tPFNGLTEXFILTERFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tfûãr
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLÊﬂt
 *
	tweights
);

6088 #i‚de‡
GL_EXT_subãxtuª


6089 
	#GL_EXT_subãxtuª
 1

	)

6090 #ifde‡
GL_GLEXT_PROTOTYPES


6091 
GLAPI
 
APIENTRY
 
glTexSubImage1DEXT
 (
GLíum
, 
GLöt
, GLöt, 
GLsizei
, GLíum, GLíum, c⁄° 
GLvoid
 *);

6092 
GLAPI
 
APIENTRY
 
glTexSubImage2DEXT
 (
GLíum
, 
GLöt
, GLöt, GLöt, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

6094 (
APIENTRYP
 
	tPFNGLTEXSUBIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

6095 (
APIENTRYP
 
	tPFNGLTEXSUBIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

6098 #i‚de‡
GL_EXT_c›y_ãxtuª


6099 
	#GL_EXT_c›y_ãxtuª
 1

	)

6100 #ifde‡
GL_GLEXT_PROTOTYPES


6101 
GLAPI
 
APIENTRY
 
glC›yTexImage1DEXT
 (
GLíum
, 
GLöt
, GLíum, GLöt, GLöt, 
GLsizei
, GLint);

6102 
GLAPI
 
APIENTRY
 
glC›yTexImage2DEXT
 (
GLíum
, 
GLöt
, GLíum, GLöt, GLöt, 
GLsizei
, GLsizei, GLint);

6103 
GLAPI
 
APIENTRY
 
glC›yTexSubImage1DEXT
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
);

6104 
GLAPI
 
APIENTRY
 
glC›yTexSubImage2DEXT
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei);

6105 
GLAPI
 
APIENTRY
 
glC›yTexSubImage3DEXT
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei);

6107 (
APIENTRYP
 
	tPFNGLCOPYTEXIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
);

6108 (
APIENTRYP
 
	tPFNGLCOPYTEXIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
);

6109 (
APIENTRYP
 
	tPFNGLCOPYTEXSUBIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

6110 (
APIENTRYP
 
	tPFNGLCOPYTEXSUBIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

6111 (
APIENTRYP
 
	tPFNGLCOPYTEXSUBIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

6114 #i‚de‡
GL_EXT_hi°ogøm


6115 
	#GL_EXT_hi°ogøm
 1

	)

6116 #ifde‡
GL_GLEXT_PROTOTYPES


6117 
GLAPI
 
APIENTRY
 
glGëHi°ogømEXT
 (
GLíum
, 
GLboﬁón
, GLíum, GLíum, 
GLvoid
 *);

6118 
GLAPI
 
APIENTRY
 
glGëHi°ogømP¨amëîfvEXT
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6119 
GLAPI
 
APIENTRY
 
glGëHi°ogømP¨amëîivEXT
 (
GLíum
, GLíum, 
GLöt
 *);

6120 
GLAPI
 
APIENTRY
 
glGëMömaxEXT
 (
GLíum
, 
GLboﬁón
, GLíum, GLíum, 
GLvoid
 *);

6121 
GLAPI
 
APIENTRY
 
glGëMömaxP¨amëîfvEXT
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6122 
GLAPI
 
APIENTRY
 
glGëMömaxP¨amëîivEXT
 (
GLíum
, GLíum, 
GLöt
 *);

6123 
GLAPI
 
APIENTRY
 
glHi°ogømEXT
 (
GLíum
, 
GLsizei
, GLíum, 
GLboﬁón
);

6124 
GLAPI
 
APIENTRY
 
glMömaxEXT
 (
GLíum
, GLíum, 
GLboﬁón
);

6125 
GLAPI
 
APIENTRY
 
glRe£tHi°ogømEXT
 (
GLíum
);

6126 
GLAPI
 
APIENTRY
 
glRe£tMömaxEXT
 (
GLíum
);

6128 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLboﬁón
 
	tª£t
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	tvÆues
);

6129 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6130 (
APIENTRYP
 
	tPFNGLGETHISTOGRAMPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6131 (
APIENTRYP
 
	tPFNGLGETMINMAXEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLboﬁón
 
	tª£t
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	tvÆues
);

6132 (
APIENTRYP
 
	tPFNGLGETMINMAXPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6133 (
APIENTRYP
 
	tPFNGLGETMINMAXPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6134 (
APIENTRYP
 
	tPFNGLHISTOGRAMEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	twidth
, GLíum 
	töã∫Æf‹m©
, 
	tGLboﬁón
 
	tsök
);

6135 (
APIENTRYP
 
	tPFNGLMINMAXEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLboﬁón
 
	tsök
);

6136 (
APIENTRYP
 
	tPFNGLRESETHISTOGRAMEXTPROC
Ë(
	tGLíum
 
	tèrgë
);

6137 (
APIENTRYP
 
	tPFNGLRESETMINMAXEXTPROC
Ë(
	tGLíum
 
	tèrgë
);

6140 #i‚de‡
GL_EXT_c⁄vﬁuti⁄


6141 
	#GL_EXT_c⁄vﬁuti⁄
 1

	)

6142 #ifde‡
GL_GLEXT_PROTOTYPES


6143 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄Fûãr1DEXT
 (
GLíum
, GLíum, 
GLsizei
, GLíum, GLíum, c⁄° 
GLvoid
 *);

6144 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄Fûãr2DEXT
 (
GLíum
, GLíum, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

6145 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄P¨amëîfEXT
 (
GLíum
, GLíum, 
GLÊﬂt
);

6146 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄P¨amëîfvEXT
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

6147 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄P¨amëîiEXT
 (
GLíum
, GLíum, 
GLöt
);

6148 
GLAPI
 
APIENTRY
 
glC⁄vﬁuti⁄P¨amëîivEXT
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

6149 
GLAPI
 
APIENTRY
 
glC›yC⁄vﬁuti⁄Fûãr1DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, 
GLsizei
);

6150 
GLAPI
 
APIENTRY
 
glC›yC⁄vﬁuti⁄Fûãr2DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, 
GLsizei
, GLsizei);

6151 
GLAPI
 
APIENTRY
 
glGëC⁄vﬁuti⁄FûãrEXT
 (
GLíum
, GLíum, GLíum, 
GLvoid
 *);

6152 
GLAPI
 
APIENTRY
 
glGëC⁄vﬁuti⁄P¨amëîfvEXT
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6153 
GLAPI
 
APIENTRY
 
glGëC⁄vﬁuti⁄P¨amëîivEXT
 (
GLíum
, GLíum, 
GLöt
 *);

6154 
GLAPI
 
APIENTRY
 
glGëSï¨abÀFûãrEXT
 (
GLíum
, GLíum, GLíum, 
GLvoid
 *, GLvoid *, GLvoid *);

6155 
GLAPI
 
APIENTRY
 
glSï¨abÀFûãr2DEXT
 (
GLíum
, GLíum, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *, const GLvoid *);

6157 (
APIENTRYP
 
	tPFNGLCONVOLUTIONFILTER1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	timage
);

6158 (
APIENTRYP
 
	tPFNGLCONVOLUTIONFILTER2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	timage
);

6159 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERFEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øms
);

6160 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6161 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERIEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øms
);

6162 (
APIENTRYP
 
	tPFNGLCONVOLUTIONPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6163 (
APIENTRYP
 
	tPFNGLCOPYCONVOLUTIONFILTER1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

6164 (
APIENTRYP
 
	tPFNGLCOPYCONVOLUTIONFILTER2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

6165 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONFILTEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	timage
);

6166 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6167 (
APIENTRYP
 
	tPFNGLGETCONVOLUTIONPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6168 (
APIENTRYP
 
	tPFNGLGETSEPARABLEFILTEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	trow
, GLvoid *
	tcﬁumn
, GLvoid *
	t•™
);

6169 (
APIENTRYP
 
	tPFNGLSEPARABLEFILTER2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	trow
, c⁄° GLvoid *
	tcﬁumn
);

6172 #i‚de‡
GL_SGI_cﬁ‹_m©rix


6173 
	#GL_SGI_cﬁ‹_m©rix
 1

	)

6176 #i‚de‡
GL_SGI_cﬁ‹_èbÀ


6177 
	#GL_SGI_cﬁ‹_èbÀ
 1

	)

6178 #ifde‡
GL_GLEXT_PROTOTYPES


6179 
GLAPI
 
APIENTRY
 
glCﬁ‹TabÀSGI
 (
GLíum
, GLíum, 
GLsizei
, GLíum, GLíum, c⁄° 
GLvoid
 *);

6180 
GLAPI
 
APIENTRY
 
glCﬁ‹TabÀP¨amëîfvSGI
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

6181 
GLAPI
 
APIENTRY
 
glCﬁ‹TabÀP¨amëîivSGI
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

6182 
GLAPI
 
APIENTRY
 
glC›yCﬁ‹TabÀSGI
 (
GLíum
, GLíum, 
GLöt
, GLöt, 
GLsizei
);

6183 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀSGI
 (
GLíum
, GLíum, GLíum, 
GLvoid
 *);

6184 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀP¨amëîfvSGI
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6185 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀP¨amëîivSGI
 (
GLíum
, GLíum, 
GLöt
 *);

6187 (
APIENTRYP
 
	tPFNGLCOLORTABLESGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tèbÀ
);

6188 (
APIENTRYP
 
	tPFNGLCOLORTABLEPARAMETERFVSGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6189 (
APIENTRYP
 
	tPFNGLCOLORTABLEPARAMETERIVSGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6190 (
APIENTRYP
 
	tPFNGLCOPYCOLORTABLESGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLöt
 
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

6191 (
APIENTRYP
 
	tPFNGLGETCOLORTABLESGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	tèbÀ
);

6192 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERFVSGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6193 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERIVSGIPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6196 #i‚de‡
GL_SGIX_pixñ_ãxtuª


6197 
	#GL_SGIX_pixñ_ãxtuª
 1

	)

6198 #ifde‡
GL_GLEXT_PROTOTYPES


6199 
GLAPI
 
APIENTRY
 
glPixñTexGíSGIX
 (
GLíum
);

6201 (
APIENTRYP
 
	tPFNGLPIXELTEXGENSGIXPROC
Ë(
	tGLíum
 
	tmode
);

6204 #i‚de‡
GL_SGIS_pixñ_ãxtuª


6205 
	#GL_SGIS_pixñ_ãxtuª
 1

	)

6206 #ifde‡
GL_GLEXT_PROTOTYPES


6207 
GLAPI
 
APIENTRY
 
glPixñTexGíP¨amëîiSGIS
 (
GLíum
, 
GLöt
);

6208 
GLAPI
 
APIENTRY
 
glPixñTexGíP¨amëîivSGIS
 (
GLíum
, c⁄° 
GLöt
 *);

6209 
GLAPI
 
APIENTRY
 
glPixñTexGíP¨amëîfSGIS
 (
GLíum
, 
GLÊﬂt
);

6210 
GLAPI
 
APIENTRY
 
glPixñTexGíP¨amëîfvSGIS
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

6211 
GLAPI
 
APIENTRY
 
glGëPixñTexGíP¨amëîivSGIS
 (
GLíum
, 
GLöt
 *);

6212 
GLAPI
 
APIENTRY
 
glGëPixñTexGíP¨amëîfvSGIS
 (
GLíum
, 
GLÊﬂt
 *);

6214 (
APIENTRYP
 
	tPFNGLPIXELTEXGENPARAMETERISGISPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6215 (
APIENTRYP
 
	tPFNGLPIXELTEXGENPARAMETERIVSGISPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6216 (
APIENTRYP
 
	tPFNGLPIXELTEXGENPARAMETERFSGISPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6217 (
APIENTRYP
 
	tPFNGLPIXELTEXGENPARAMETERFVSGISPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6218 (
APIENTRYP
 
	tPFNGLGETPIXELTEXGENPARAMETERIVSGISPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6219 (
APIENTRYP
 
	tPFNGLGETPIXELTEXGENPARAMETERFVSGISPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6222 #i‚de‡
GL_SGIS_ãxtuª4D


6223 
	#GL_SGIS_ãxtuª4D
 1

	)

6224 #ifde‡
GL_GLEXT_PROTOTYPES


6225 
GLAPI
 
APIENTRY
 
glTexImage4DSGIS
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLsizei, GLsizei, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

6226 
GLAPI
 
APIENTRY
 
glTexSubImage4DSGIS
 (
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

6228 (
APIENTRYP
 
	tPFNGLTEXIMAGE4DSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLsizeò
	tsize4d
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

6229 (
APIENTRYP
 
	tPFNGLTEXSUBIMAGE4DSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, GLöà
	twoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLsizeò
	tsize4d
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

6232 #i‚de‡
GL_SGI_ãxtuª_cﬁ‹_èbÀ


6233 
	#GL_SGI_ãxtuª_cﬁ‹_èbÀ
 1

	)

6236 #i‚de‡
GL_EXT_cmyka


6237 
	#GL_EXT_cmyka
 1

	)

6240 #i‚de‡
GL_EXT_ãxtuª_obje˘


6241 
	#GL_EXT_ãxtuª_obje˘
 1

	)

6242 #ifde‡
GL_GLEXT_PROTOTYPES


6243 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glAªTextuªsResidítEXT
 (
GLsizei
, c⁄° 
GLuöt
 *, GLboolean *);

6244 
GLAPI
 
APIENTRY
 
glBödTextuªEXT
 (
GLíum
, 
GLuöt
);

6245 
GLAPI
 
APIENTRY
 
glDñëeTextuªsEXT
 (
GLsizei
, c⁄° 
GLuöt
 *);

6246 
GLAPI
 
APIENTRY
 
glGíTextuªsEXT
 (
GLsizei
, 
GLuöt
 *);

6247 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsTextuªEXT
 (
GLuöt
);

6248 
GLAPI
 
APIENTRY
 
glPri‹ôizeTextuªsEXT
 (
GLsizei
, c⁄° 
GLuöt
 *, c⁄° 
GL˛ampf
 *);

6250 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLARETEXTURESRESIDENTEXTPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tãxtuªs
, 
	tGLboﬁón
 *
	tªsidí˚s
);

6251 (
APIENTRYP
 
	tPFNGLBINDTEXTUREEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tãxtuª
);

6252 (
APIENTRYP
 
	tPFNGLDELETETEXTURESEXTPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tãxtuªs
);

6253 (
APIENTRYP
 
	tPFNGLGENTEXTURESEXTPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tãxtuªs
);

6254 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISTEXTUREEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
);

6255 (
APIENTRYP
 
	tPFNGLPRIORITIZETEXTURESEXTPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tãxtuªs
, c⁄° 
	tGL˛ampf
 *
	t¥i‹ôõs
);

6258 #i‚de‡
GL_SGIS_dëaû_ãxtuª


6259 
	#GL_SGIS_dëaû_ãxtuª
 1

	)

6260 #ifde‡
GL_GLEXT_PROTOTYPES


6261 
GLAPI
 
APIENTRY
 
glDëaûTexFuncSGIS
 (
GLíum
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

6262 
GLAPI
 
APIENTRY
 
glGëDëaûTexFuncSGIS
 (
GLíum
, 
GLÊﬂt
 *);

6264 (
APIENTRYP
 
	tPFNGLDETAILTEXFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLÊﬂt
 *
	tpoöts
);

6265 (
APIENTRYP
 
	tPFNGLGETDETAILTEXFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 *
	tpoöts
);

6268 #i‚de‡
GL_SGIS_sh¨≥n_ãxtuª


6269 
	#GL_SGIS_sh¨≥n_ãxtuª
 1

	)

6270 #ifde‡
GL_GLEXT_PROTOTYPES


6271 
GLAPI
 
APIENTRY
 
glSh¨≥nTexFuncSGIS
 (
GLíum
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

6272 
GLAPI
 
APIENTRY
 
glGëSh¨≥nTexFuncSGIS
 (
GLíum
, 
GLÊﬂt
 *);

6274 (
APIENTRYP
 
	tPFNGLSHARPENTEXFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLÊﬂt
 *
	tpoöts
);

6275 (
APIENTRYP
 
	tPFNGLGETSHARPENTEXFUNCSGISPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 *
	tpoöts
);

6278 #i‚de‡
GL_EXT_∑cked_pixñs


6279 
	#GL_EXT_∑cked_pixñs
 1

	)

6282 #i‚de‡
GL_SGIS_ãxtuª_lod


6283 
	#GL_SGIS_ãxtuª_lod
 1

	)

6286 #i‚de‡
GL_SGIS_mu…ißm∂e


6287 
	#GL_SGIS_mu…ißm∂e
 1

	)

6288 #ifde‡
GL_GLEXT_PROTOTYPES


6289 
GLAPI
 
APIENTRY
 
glSam∂eMaskSGIS
 (
GL˛ampf
, 
GLboﬁón
);

6290 
GLAPI
 
APIENTRY
 
glSam∂eP©ã∫SGIS
 (
GLíum
);

6292 (
APIENTRYP
 
	tPFNGLSAMPLEMASKSGISPROC
Ë(
	tGL˛ampf
 
	tvÆue
, 
	tGLboﬁón
 
	tövît
);

6293 (
APIENTRYP
 
	tPFNGLSAMPLEPATTERNSGISPROC
Ë(
	tGLíum
 
	t∑âîn
);

6296 #i‚de‡
GL_EXT_ªsˇÀ_n‹mÆ


6297 
	#GL_EXT_ªsˇÀ_n‹mÆ
 1

	)

6300 #i‚de‡
GL_EXT_vîãx_¨øy


6301 
	#GL_EXT_vîãx_¨øy
 1

	)

6302 #ifde‡
GL_GLEXT_PROTOTYPES


6303 
GLAPI
 
APIENTRY
 
glAºayEÀmítEXT
 (
GLöt
);

6304 
GLAPI
 
APIENTRY
 
glCﬁ‹PoöãrEXT
 (
GLöt
, 
GLíum
, 
GLsizei
, GLsizei, c⁄° 
GLvoid
 *);

6305 
GLAPI
 
APIENTRY
 
glDøwAºaysEXT
 (
GLíum
, 
GLöt
, 
GLsizei
);

6306 
GLAPI
 
APIENTRY
 
glEdgeFœgPoöãrEXT
 (
GLsizei
, GLsizei, c⁄° 
GLboﬁón
 *);

6307 
GLAPI
 
APIENTRY
 
glGëPoöãrvEXT
 (
GLíum
, 
GLvoid
* *);

6308 
GLAPI
 
APIENTRY
 
glIndexPoöãrEXT
 (
GLíum
, 
GLsizei
, GLsizei, c⁄° 
GLvoid
 *);

6309 
GLAPI
 
APIENTRY
 
glN‹mÆPoöãrEXT
 (
GLíum
, 
GLsizei
, GLsizei, c⁄° 
GLvoid
 *);

6310 
GLAPI
 
APIENTRY
 
glTexCo‹dPoöãrEXT
 (
GLöt
, 
GLíum
, 
GLsizei
, GLsizei, c⁄° 
GLvoid
 *);

6311 
GLAPI
 
APIENTRY
 
glVîãxPoöãrEXT
 (
GLöt
, 
GLíum
, 
GLsizei
, GLsizei, c⁄° 
GLvoid
 *);

6313 (
APIENTRYP
 
	tPFNGLARRAYELEMENTEXTPROC
Ë(
	tGLöt
 
	ti
);

6314 (
APIENTRYP
 
	tPFNGLCOLORPOINTEREXTPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6315 (
APIENTRYP
 
	tPFNGLDRAWARRAYSEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
);

6316 (
APIENTRYP
 
	tPFNGLEDGEFLAGPOINTEREXTPROC
Ë(
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLboﬁón
 *
	tpoöãr
);

6317 (
APIENTRYP
 
	tPFNGLGETPOINTERVEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLvoid
* *
	t∑øms
);

6318 (
APIENTRYP
 
	tPFNGLINDEXPOINTEREXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6319 (
APIENTRYP
 
	tPFNGLNORMALPOINTEREXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6320 (
APIENTRYP
 
	tPFNGLTEXCOORDPOINTEREXTPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6321 (
APIENTRYP
 
	tPFNGLVERTEXPOINTEREXTPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLsizeò
	tcou¡
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6324 #i‚de‡
GL_EXT_misc_©åibuã


6325 
	#GL_EXT_misc_©åibuã
 1

	)

6328 #i‚de‡
GL_SGIS_gíî©e_mùm≠


6329 
	#GL_SGIS_gíî©e_mùm≠
 1

	)

6332 #i‚de‡
GL_SGIX_˛ùm≠


6333 
	#GL_SGIX_˛ùm≠
 1

	)

6336 #i‚de‡
GL_SGIX_shadow


6337 
	#GL_SGIX_shadow
 1

	)

6340 #i‚de‡
GL_SGIS_ãxtuª_edge_˛amp


6341 
	#GL_SGIS_ãxtuª_edge_˛amp
 1

	)

6344 #i‚de‡
GL_SGIS_ãxtuª_b‹dî_˛amp


6345 
	#GL_SGIS_ãxtuª_b‹dî_˛amp
 1

	)

6348 #i‚de‡
GL_EXT_bÀnd_mömax


6349 
	#GL_EXT_bÀnd_mömax
 1

	)

6350 #ifde‡
GL_GLEXT_PROTOTYPES


6351 
GLAPI
 
APIENTRY
 
glBÀndEqu©i⁄EXT
 (
GLíum
);

6353 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONEXTPROC
Ë(
	tGLíum
 
	tmode
);

6356 #i‚de‡
GL_EXT_bÀnd_subåa˘


6357 
	#GL_EXT_bÀnd_subåa˘
 1

	)

6360 #i‚de‡
GL_EXT_bÀnd_logic_›


6361 
	#GL_EXT_bÀnd_logic_›
 1

	)

6364 #i‚de‡
GL_SGIX_öãæa˚


6365 
	#GL_SGIX_öãæa˚
 1

	)

6368 #i‚de‡
GL_SGIX_pixñ_tûes


6369 
	#GL_SGIX_pixñ_tûes
 1

	)

6372 #i‚de‡
GL_SGIX_ãxtuª_£À˘


6373 
	#GL_SGIX_ãxtuª_£À˘
 1

	)

6376 #i‚de‡
GL_SGIX_•rôe


6377 
	#GL_SGIX_•rôe
 1

	)

6378 #ifde‡
GL_GLEXT_PROTOTYPES


6379 
GLAPI
 
APIENTRY
 
glS¥ôeP¨amëîfSGIX
 (
GLíum
, 
GLÊﬂt
);

6380 
GLAPI
 
APIENTRY
 
glS¥ôeP¨amëîfvSGIX
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

6381 
GLAPI
 
APIENTRY
 
glS¥ôeP¨amëîiSGIX
 (
GLíum
, 
GLöt
);

6382 
GLAPI
 
APIENTRY
 
glS¥ôeP¨amëîivSGIX
 (
GLíum
, c⁄° 
GLöt
 *);

6384 (
APIENTRYP
 
	tPFNGLSPRITEPARAMETERFSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6385 (
APIENTRYP
 
	tPFNGLSPRITEPARAMETERFVSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6386 (
APIENTRYP
 
	tPFNGLSPRITEPARAMETERISGIXPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6387 (
APIENTRYP
 
	tPFNGLSPRITEPARAMETERIVSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6390 #i‚de‡
GL_SGIX_ãxtuª_mu…i_buf„r


6391 
	#GL_SGIX_ãxtuª_mu…i_buf„r
 1

	)

6394 #i‚de‡
GL_EXT_poöt_∑ømëîs


6395 
	#GL_EXT_poöt_∑ømëîs
 1

	)

6396 #ifde‡
GL_GLEXT_PROTOTYPES


6397 
GLAPI
 
APIENTRY
 
glPoötP¨amëîfEXT
 (
GLíum
, 
GLÊﬂt
);

6398 
GLAPI
 
APIENTRY
 
glPoötP¨amëîfvEXT
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

6400 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6401 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6404 #i‚de‡
GL_SGIS_poöt_∑ømëîs


6405 
	#GL_SGIS_poöt_∑ømëîs
 1

	)

6406 #ifde‡
GL_GLEXT_PROTOTYPES


6407 
GLAPI
 
APIENTRY
 
glPoötP¨amëîfSGIS
 (
GLíum
, 
GLÊﬂt
);

6408 
GLAPI
 
APIENTRY
 
glPoötP¨amëîfvSGIS
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

6410 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFSGISPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6411 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERFVSGISPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6414 #i‚de‡
GL_SGIX_ö°rumíts


6415 
	#GL_SGIX_ö°rumíts
 1

	)

6416 #ifde‡
GL_GLEXT_PROTOTYPES


6417 
GLAPI
 
GLöt
 
APIENTRY
 
glGëIn°rumítsSGIX
 ();

6418 
GLAPI
 
APIENTRY
 
glIn°rumítsBuf„rSGIX
 (
GLsizei
, 
GLöt
 *);

6419 
GLAPI
 
GLöt
 
APIENTRY
 
glPﬁlIn°rumítsSGIX
 (GLint *);

6420 
GLAPI
 
APIENTRY
 
glRódIn°rumítsSGIX
 (
GLöt
);

6421 
GLAPI
 
APIENTRY
 
glSèπIn°rumítsSGIX
 ();

6422 
GLAPI
 
APIENTRY
 
glSt›In°rumítsSGIX
 (
GLöt
);

6424 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETINSTRUMENTSSGIXPROC
) ();

6425 (
APIENTRYP
 
	tPFNGLINSTRUMENTSBUFFERSGIXPROC
Ë(
	tGLsizei
 
	tsize
, 
	tGLöt
 *
	tbuf„r
);

6426 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLPOLLINSTRUMENTSSGIXPROC
Ë(
	tGLöt
 *
	tm¨kî_p
);

6427 (
APIENTRYP
 
	tPFNGLREADINSTRUMENTSSGIXPROC
Ë(
	tGLöt
 
	tm¨kî
);

6428 (
APIENTRYP
 
	tPFNGLSTARTINSTRUMENTSSGIXPROC
) ();

6429 (
APIENTRYP
 
	tPFNGLSTOPINSTRUMENTSSGIXPROC
Ë(
	tGLöt
 
	tm¨kî
);

6432 #i‚de‡
GL_SGIX_ãxtuª_sˇÀ_büs


6433 
	#GL_SGIX_ãxtuª_sˇÀ_büs
 1

	)

6436 #i‚de‡
GL_SGIX_‰amezoom


6437 
	#GL_SGIX_‰amezoom
 1

	)

6438 #ifde‡
GL_GLEXT_PROTOTYPES


6439 
GLAPI
 
APIENTRY
 
glFømeZoomSGIX
 (
GLöt
);

6441 (
APIENTRYP
 
	tPFNGLFRAMEZOOMSGIXPROC
Ë(
	tGLöt
 
	tÁ˘‹
);

6444 #i‚de‡
GL_SGIX_èg_ßm∂e_buf„r


6445 
	#GL_SGIX_èg_ßm∂e_buf„r
 1

	)

6446 #ifde‡
GL_GLEXT_PROTOTYPES


6447 
GLAPI
 
APIENTRY
 
glTagSam∂eBuf„rSGIX
 ();

6449 (
APIENTRYP
 
	tPFNGLTAGSAMPLEBUFFERSGIXPROC
) ();

6452 #i‚de‡
GL_SGIX_pﬁynomül_ffd


6453 
	#GL_SGIX_pﬁynomül_ffd
 1

	)

6454 #ifde‡
GL_GLEXT_PROTOTYPES


6455 
GLAPI
 
APIENTRY
 
glDef‹m©i⁄M≠3dSGIX
 (
GLíum
, 
GLdoubÀ
, GLdoubÀ, 
GLöt
, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, const GLdouble *);

6456 
GLAPI
 
APIENTRY
 
glDef‹m©i⁄M≠3fSGIX
 (
GLíum
, 
GLÊﬂt
, GLÊﬂt, 
GLöt
, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, const GLfloat *);

6457 
GLAPI
 
APIENTRY
 
glDef‹mSGIX
 (
GLbôfõld
);

6458 
GLAPI
 
APIENTRY
 
glLﬂdIdítôyDef‹m©i⁄M≠SGIX
 (
GLbôfõld
);

6460 (
APIENTRYP
 
	tPFNGLDEFORMATIONMAP3DSGIXPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLdoubÀ
 
	tu1
, GLdoubÀ 
	tu2
, 
	tGLöt
 
	tu°ride
, GLöà
	tu‹dî
, GLdoubÀ 
	tv1
, GLdoubÀ 
	tv2
, GLöà
	tv°ride
, GLöà
	tv‹dî
, GLdoubÀ 
	tw1
, GLdoubÀ 
	tw2
, GLöà
	tw°ride
, GLöà
	tw‹dî
, c⁄° GLdoubÀ *
	tpoöts
);

6461 (
APIENTRYP
 
	tPFNGLDEFORMATIONMAP3FSGIXPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLÊﬂt
 
	tu1
, GLÊﬂà
	tu2
, 
	tGLöt
 
	tu°ride
, GLöà
	tu‹dî
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
, GLöà
	tv°ride
, GLöà
	tv‹dî
, GLÊﬂà
	tw1
, GLÊﬂà
	tw2
, GLöà
	tw°ride
, GLöà
	tw‹dî
, c⁄° GLÊﬂà*
	tpoöts
);

6462 (
APIENTRYP
 
	tPFNGLDEFORMSGIXPROC
Ë(
	tGLbôfõld
 
	tmask
);

6463 (
APIENTRYP
 
	tPFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC
Ë(
	tGLbôfõld
 
	tmask
);

6466 #i‚de‡
GL_SGIX_ª„ªn˚_∂™e


6467 
	#GL_SGIX_ª„ªn˚_∂™e
 1

	)

6468 #ifde‡
GL_GLEXT_PROTOTYPES


6469 
GLAPI
 
APIENTRY
 
glRe„ªn˚Pœ√SGIX
 (c⁄° 
GLdoubÀ
 *);

6471 (
APIENTRYP
 
	tPFNGLREFERENCEPLANESGIXPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tequ©i⁄
);

6474 #i‚de‡
GL_SGIX_Êush_ø°î


6475 
	#GL_SGIX_Êush_ø°î
 1

	)

6476 #ifde‡
GL_GLEXT_PROTOTYPES


6477 
GLAPI
 
APIENTRY
 
glFlushRa°îSGIX
 ();

6479 (
APIENTRYP
 
	tPFNGLFLUSHRASTERSGIXPROC
) ();

6482 #i‚de‡
GL_SGIX_dïth_ãxtuª


6483 
	#GL_SGIX_dïth_ãxtuª
 1

	)

6486 #i‚de‡
GL_SGIS_fog_fun˘i⁄


6487 
	#GL_SGIS_fog_fun˘i⁄
 1

	)

6488 #ifde‡
GL_GLEXT_PROTOTYPES


6489 
GLAPI
 
APIENTRY
 
glFogFuncSGIS
 (
GLsizei
, c⁄° 
GLÊﬂt
 *);

6490 
GLAPI
 
APIENTRY
 
glGëFogFuncSGIS
 (
GLÊﬂt
 *);

6492 (
APIENTRYP
 
	tPFNGLFOGFUNCSGISPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLÊﬂt
 *
	tpoöts
);

6493 (
APIENTRYP
 
	tPFNGLGETFOGFUNCSGISPROC
Ë(
	tGLÊﬂt
 *
	tpoöts
);

6496 #i‚de‡
GL_SGIX_fog_off£t


6497 
	#GL_SGIX_fog_off£t
 1

	)

6500 #i‚de‡
GL_HP_image_å™sf‹m


6501 
	#GL_HP_image_å™sf‹m
 1

	)

6502 #ifde‡
GL_GLEXT_PROTOTYPES


6503 
GLAPI
 
APIENTRY
 
glImageTønsf‹mP¨amëîiHP
 (
GLíum
, GLíum, 
GLöt
);

6504 
GLAPI
 
APIENTRY
 
glImageTønsf‹mP¨amëîfHP
 (
GLíum
, GLíum, 
GLÊﬂt
);

6505 
GLAPI
 
APIENTRY
 
glImageTønsf‹mP¨amëîivHP
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

6506 
GLAPI
 
APIENTRY
 
glImageTønsf‹mP¨amëîfvHP
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

6507 
GLAPI
 
APIENTRY
 
glGëImageTønsf‹mP¨amëîivHP
 (
GLíum
, GLíum, 
GLöt
 *);

6508 
GLAPI
 
APIENTRY
 
glGëImageTønsf‹mP¨amëîfvHP
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6510 (
APIENTRYP
 
	tPFNGLIMAGETRANSFORMPARAMETERIHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6511 (
APIENTRYP
 
	tPFNGLIMAGETRANSFORMPARAMETERFHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6512 (
APIENTRYP
 
	tPFNGLIMAGETRANSFORMPARAMETERIVHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6513 (
APIENTRYP
 
	tPFNGLIMAGETRANSFORMPARAMETERFVHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6514 (
APIENTRYP
 
	tPFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6515 (
APIENTRYP
 
	tPFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6518 #i‚de‡
GL_HP_c⁄vﬁuti⁄_b‹dî_modes


6519 
	#GL_HP_c⁄vﬁuti⁄_b‹dî_modes
 1

	)

6522 #i‚de‡
GL_SGIX_ãxtuª_add_ív


6523 
	#GL_SGIX_ãxtuª_add_ív
 1

	)

6526 #i‚de‡
GL_EXT_cﬁ‹_subèbÀ


6527 
	#GL_EXT_cﬁ‹_subèbÀ
 1

	)

6528 #ifde‡
GL_GLEXT_PROTOTYPES


6529 
GLAPI
 
APIENTRY
 
glCﬁ‹SubTabÀEXT
 (
GLíum
, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

6530 
GLAPI
 
APIENTRY
 
glC›yCﬁ‹SubTabÀEXT
 (
GLíum
, 
GLsizei
, 
GLöt
, GLint, GLsizei);

6532 (
APIENTRYP
 
	tPFNGLCOLORSUBTABLEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	t°¨t
, GLsizeò
	tcou¡
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	td©a
);

6533 (
APIENTRYP
 
	tPFNGLCOPYCOLORSUBTABLEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	t°¨t
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLsizeò
	twidth
);

6536 #i‚de‡
GL_PGI_vîãx_höts


6537 
	#GL_PGI_vîãx_höts
 1

	)

6540 #i‚de‡
GL_PGI_misc_höts


6541 
	#GL_PGI_misc_höts
 1

	)

6542 #ifde‡
GL_GLEXT_PROTOTYPES


6543 
GLAPI
 
APIENTRY
 
glHötPGI
 (
GLíum
, 
GLöt
);

6545 (
APIENTRYP
 
	tPFNGLHINTPGIPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tmode
);

6548 #i‚de‡
GL_EXT_∑Àâed_ãxtuª


6549 
	#GL_EXT_∑Àâed_ãxtuª
 1

	)

6550 #ifde‡
GL_GLEXT_PROTOTYPES


6551 
GLAPI
 
APIENTRY
 
glCﬁ‹TabÀEXT
 (
GLíum
, GLíum, 
GLsizei
, GLíum, GLíum, c⁄° 
GLvoid
 *);

6552 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀEXT
 (
GLíum
, GLíum, GLíum, 
GLvoid
 *);

6553 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀP¨amëîivEXT
 (
GLíum
, GLíum, 
GLöt
 *);

6554 
GLAPI
 
APIENTRY
 
glGëCﬁ‹TabÀP¨amëîfvEXT
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6556 (
APIENTRYP
 
	tPFNGLCOLORTABLEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫ÆF‹m©
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tèbÀ
);

6557 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	td©a
);

6558 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6559 (
APIENTRYP
 
	tPFNGLGETCOLORTABLEPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6562 #i‚de‡
GL_EXT_˛ù_vﬁume_höt


6563 
	#GL_EXT_˛ù_vﬁume_höt
 1

	)

6566 #i‚de‡
GL_SGIX_li°_¥i‹ôy


6567 
	#GL_SGIX_li°_¥i‹ôy
 1

	)

6568 #ifde‡
GL_GLEXT_PROTOTYPES


6569 
GLAPI
 
APIENTRY
 
glGëLi°P¨amëîfvSGIX
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

6570 
GLAPI
 
APIENTRY
 
glGëLi°P¨amëîivSGIX
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

6571 
GLAPI
 
APIENTRY
 
glLi°P¨amëîfSGIX
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
);

6572 
GLAPI
 
APIENTRY
 
glLi°P¨amëîfvSGIX
 (
GLuöt
, 
GLíum
, c⁄° 
GLÊﬂt
 *);

6573 
GLAPI
 
APIENTRY
 
glLi°P¨amëîiSGIX
 (
GLuöt
, 
GLíum
, 
GLöt
);

6574 
GLAPI
 
APIENTRY
 
glLi°P¨amëîivSGIX
 (
GLuöt
, 
GLíum
, c⁄° 
GLöt
 *);

6576 (
APIENTRYP
 
	tPFNGLGETLISTPARAMETERFVSGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6577 (
APIENTRYP
 
	tPFNGLGETLISTPARAMETERIVSGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6578 (
APIENTRYP
 
	tPFNGLLISTPARAMETERFSGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6579 (
APIENTRYP
 
	tPFNGLLISTPARAMETERFVSGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6580 (
APIENTRYP
 
	tPFNGLLISTPARAMETERISGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6581 (
APIENTRYP
 
	tPFNGLLISTPARAMETERIVSGIXPROC
Ë(
	tGLuöt
 
	tli°
, 
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6584 #i‚de‡
GL_SGIX_ú_ö°rumít1


6585 
	#GL_SGIX_ú_ö°rumít1
 1

	)

6588 #i‚de‡
GL_SGIX_ˇŒigøphic_‰agmít


6589 
	#GL_SGIX_ˇŒigøphic_‰agmít
 1

	)

6592 #i‚de‡
GL_SGIX_ãxtuª_lod_büs


6593 
	#GL_SGIX_ãxtuª_lod_büs
 1

	)

6596 #i‚de‡
GL_SGIX_shadow_ambõ¡


6597 
	#GL_SGIX_shadow_ambõ¡
 1

	)

6600 #i‚de‡
GL_EXT_ödex_ãxtuª


6601 
	#GL_EXT_ödex_ãxtuª
 1

	)

6604 #i‚de‡
GL_EXT_ödex_m©îül


6605 
	#GL_EXT_ödex_m©îül
 1

	)

6606 #ifde‡
GL_GLEXT_PROTOTYPES


6607 
GLAPI
 
APIENTRY
 
glIndexM©îülEXT
 (
GLíum
, GLenum);

6609 (
APIENTRYP
 
	tPFNGLINDEXMATERIALEXTPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tmode
);

6612 #i‚de‡
GL_EXT_ödex_func


6613 
	#GL_EXT_ödex_func
 1

	)

6614 #ifde‡
GL_GLEXT_PROTOTYPES


6615 
GLAPI
 
APIENTRY
 
glIndexFuncEXT
 (
GLíum
, 
GL˛ampf
);

6617 (
APIENTRYP
 
	tPFNGLINDEXFUNCEXTPROC
Ë(
	tGLíum
 
	tfunc
, 
	tGL˛ampf
 
	tªf
);

6620 #i‚de‡
GL_EXT_ödex_¨øy_f‹m©s


6621 
	#GL_EXT_ödex_¨øy_f‹m©s
 1

	)

6624 #i‚de‡
GL_EXT_compûed_vîãx_¨øy


6625 
	#GL_EXT_compûed_vîãx_¨øy
 1

	)

6626 #ifde‡
GL_GLEXT_PROTOTYPES


6627 
GLAPI
 
APIENTRY
 
glLockAºaysEXT
 (
GLöt
, 
GLsizei
);

6628 
GLAPI
 
APIENTRY
 
glU∆ockAºaysEXT
 ();

6630 (
APIENTRYP
 
	tPFNGLLOCKARRAYSEXTPROC
Ë(
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
);

6631 (
APIENTRYP
 
	tPFNGLUNLOCKARRAYSEXTPROC
) ();

6634 #i‚de‡
GL_EXT_cuŒ_vîãx


6635 
	#GL_EXT_cuŒ_vîãx
 1

	)

6636 #ifde‡
GL_GLEXT_PROTOTYPES


6637 
GLAPI
 
APIENTRY
 
glCuŒP¨amëîdvEXT
 (
GLíum
, 
GLdoubÀ
 *);

6638 
GLAPI
 
APIENTRY
 
glCuŒP¨amëîfvEXT
 (
GLíum
, 
GLÊﬂt
 *);

6640 (
APIENTRYP
 
	tPFNGLCULLPARAMETERDVEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLdoubÀ
 *
	t∑øms
);

6641 (
APIENTRYP
 
	tPFNGLCULLPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6644 #i‚de‡
GL_SGIX_y¸cb


6645 
	#GL_SGIX_y¸cb
 1

	)

6648 #i‚de‡
GL_SGIX_‰agmít_lightög


6649 
	#GL_SGIX_‰agmít_lightög
 1

	)

6650 #ifde‡
GL_GLEXT_PROTOTYPES


6651 
GLAPI
 
APIENTRY
 
glFøgmítCﬁ‹M©îülSGIX
 (
GLíum
, GLenum);

6652 
GLAPI
 
APIENTRY
 
glFøgmítLightfSGIX
 (
GLíum
, GLíum, 
GLÊﬂt
);

6653 
GLAPI
 
APIENTRY
 
glFøgmítLightfvSGIX
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

6654 
GLAPI
 
APIENTRY
 
glFøgmítLightiSGIX
 (
GLíum
, GLíum, 
GLöt
);

6655 
GLAPI
 
APIENTRY
 
glFøgmítLightivSGIX
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

6656 
GLAPI
 
APIENTRY
 
glFøgmítLightModñfSGIX
 (
GLíum
, 
GLÊﬂt
);

6657 
GLAPI
 
APIENTRY
 
glFøgmítLightModñfvSGIX
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

6658 
GLAPI
 
APIENTRY
 
glFøgmítLightModñiSGIX
 (
GLíum
, 
GLöt
);

6659 
GLAPI
 
APIENTRY
 
glFøgmítLightModñivSGIX
 (
GLíum
, c⁄° 
GLöt
 *);

6660 
GLAPI
 
APIENTRY
 
glFøgmítM©îülfSGIX
 (
GLíum
, GLíum, 
GLÊﬂt
);

6661 
GLAPI
 
APIENTRY
 
glFøgmítM©îülfvSGIX
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

6662 
GLAPI
 
APIENTRY
 
glFøgmítM©îüliSGIX
 (
GLíum
, GLíum, 
GLöt
);

6663 
GLAPI
 
APIENTRY
 
glFøgmítM©îülivSGIX
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

6664 
GLAPI
 
APIENTRY
 
glGëFøgmítLightfvSGIX
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6665 
GLAPI
 
APIENTRY
 
glGëFøgmítLightivSGIX
 (
GLíum
, GLíum, 
GLöt
 *);

6666 
GLAPI
 
APIENTRY
 
glGëFøgmítM©îülfvSGIX
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

6667 
GLAPI
 
APIENTRY
 
glGëFøgmítM©îülivSGIX
 (
GLíum
, GLíum, 
GLöt
 *);

6668 
GLAPI
 
APIENTRY
 
glLightEnviSGIX
 (
GLíum
, 
GLöt
);

6670 (
APIENTRYP
 
	tPFNGLFRAGMENTCOLORMATERIALSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tmode
);

6671 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTFSGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6672 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTFVSGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6673 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTISGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6674 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTIVSGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6675 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTMODELFSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6676 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTMODELFVSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6677 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTMODELISGIXPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6678 (
APIENTRYP
 
	tPFNGLFRAGMENTLIGHTMODELIVSGIXPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6679 (
APIENTRYP
 
	tPFNGLFRAGMENTMATERIALFSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6680 (
APIENTRYP
 
	tPFNGLFRAGMENTMATERIALFVSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6681 (
APIENTRYP
 
	tPFNGLFRAGMENTMATERIALISGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6682 (
APIENTRYP
 
	tPFNGLFRAGMENTMATERIALIVSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6683 (
APIENTRYP
 
	tPFNGLGETFRAGMENTLIGHTFVSGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6684 (
APIENTRYP
 
	tPFNGLGETFRAGMENTLIGHTIVSGIXPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6685 (
APIENTRYP
 
	tPFNGLGETFRAGMENTMATERIALFVSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

6686 (
APIENTRYP
 
	tPFNGLGETFRAGMENTMATERIALIVSGIXPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

6687 (
APIENTRYP
 
	tPFNGLLIGHTENVISGIXPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6690 #i‚de‡
GL_IBM_ø°îpos_˛ù


6691 
	#GL_IBM_ø°îpos_˛ù
 1

	)

6694 #i‚de‡
GL_HP_ãxtuª_lightög


6695 
	#GL_HP_ãxtuª_lightög
 1

	)

6698 #i‚de‡
GL_EXT_døw_ønge_ñemíts


6699 
	#GL_EXT_døw_ønge_ñemíts
 1

	)

6700 #ifde‡
GL_GLEXT_PROTOTYPES


6701 
GLAPI
 
APIENTRY
 
glDøwR™geEÀmítsEXT
 (
GLíum
, 
GLuöt
, GLuöt, 
GLsizei
, GLíum, c⁄° 
GLvoid
 *);

6703 (
APIENTRYP
 
	tPFNGLDRAWRANGEELEMENTSEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
);

6706 #i‚de‡
GL_WIN_ph⁄g_shadög


6707 
	#GL_WIN_ph⁄g_shadög
 1

	)

6710 #i‚de‡
GL_WIN_•ecuœr_fog


6711 
	#GL_WIN_•ecuœr_fog
 1

	)

6714 #i‚de‡
GL_EXT_light_ãxtuª


6715 
	#GL_EXT_light_ãxtuª
 1

	)

6716 #ifde‡
GL_GLEXT_PROTOTYPES


6717 
GLAPI
 
APIENTRY
 
glAµlyTextuªEXT
 (
GLíum
);

6718 
GLAPI
 
APIENTRY
 
glTextuªLightEXT
 (
GLíum
);

6719 
GLAPI
 
APIENTRY
 
glTextuªM©îülEXT
 (
GLíum
, GLenum);

6721 (
APIENTRYP
 
	tPFNGLAPPLYTEXTUREEXTPROC
Ë(
	tGLíum
 
	tmode
);

6722 (
APIENTRYP
 
	tPFNGLTEXTURELIGHTEXTPROC
Ë(
	tGLíum
 
	t≤ame
);

6723 (
APIENTRYP
 
	tPFNGLTEXTUREMATERIALEXTPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tmode
);

6726 #i‚de‡
GL_SGIX_bÀnd_Æpha_mömax


6727 
	#GL_SGIX_bÀnd_Æpha_mömax
 1

	)

6730 #i‚de‡
GL_EXT_bgø


6731 
	#GL_EXT_bgø
 1

	)

6734 #i‚de‡
GL_SGIX_async


6735 
	#GL_SGIX_async
 1

	)

6736 #ifde‡
GL_GLEXT_PROTOTYPES


6737 
GLAPI
 
APIENTRY
 
glAsyncM¨kîSGIX
 (
GLuöt
);

6738 
GLAPI
 
GLöt
 
APIENTRY
 
glFöishAsyncSGIX
 (
GLuöt
 *);

6739 
GLAPI
 
GLöt
 
APIENTRY
 
glPﬁlAsyncSGIX
 (
GLuöt
 *);

6740 
GLAPI
 
GLuöt
 
APIENTRY
 
glGíAsyncM¨kîsSGIX
 (
GLsizei
);

6741 
GLAPI
 
APIENTRY
 
glDñëeAsyncM¨kîsSGIX
 (
GLuöt
, 
GLsizei
);

6742 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsAsyncM¨kîSGIX
 (
GLuöt
);

6744 (
APIENTRYP
 
	tPFNGLASYNCMARKERSGIXPROC
Ë(
	tGLuöt
 
	tm¨kî
);

6745 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLFINISHASYNCSGIXPROC
Ë(
	tGLuöt
 *
	tm¨kîp
);

6746 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLPOLLASYNCSGIXPROC
Ë(
	tGLuöt
 *
	tm¨kîp
);

6747 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLGENASYNCMARKERSSGIXPROC
Ë(
	tGLsizei
 
	tønge
);

6748 (
APIENTRYP
 
	tPFNGLDELETEASYNCMARKERSSGIXPROC
Ë(
	tGLuöt
 
	tm¨kî
, 
	tGLsizei
 
	tønge
);

6749 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISASYNCMARKERSGIXPROC
Ë(
	tGLuöt
 
	tm¨kî
);

6752 #i‚de‡
GL_SGIX_async_pixñ


6753 
	#GL_SGIX_async_pixñ
 1

	)

6756 #i‚de‡
GL_SGIX_async_hi°ogøm


6757 
	#GL_SGIX_async_hi°ogøm
 1

	)

6760 #i‚de‡
GL_INTEL_∑øŒñ_¨øys


6761 
	#GL_INTEL_∑øŒñ_¨øys
 1

	)

6762 #ifde‡
GL_GLEXT_PROTOTYPES


6763 
GLAPI
 
APIENTRY
 
glVîãxPoöãrvINTEL
 (
GLöt
, 
GLíum
, c⁄° 
GLvoid
* *);

6764 
GLAPI
 
APIENTRY
 
glN‹mÆPoöãrvINTEL
 (
GLíum
, c⁄° 
GLvoid
* *);

6765 
GLAPI
 
APIENTRY
 
glCﬁ‹PoöãrvINTEL
 (
GLöt
, 
GLíum
, c⁄° 
GLvoid
* *);

6766 
GLAPI
 
APIENTRY
 
glTexCo‹dPoöãrvINTEL
 (
GLöt
, 
GLíum
, c⁄° 
GLvoid
* *);

6768 (
APIENTRYP
 
	tPFNGLVERTEXPOINTERVINTELPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
* *
	tpoöãr
);

6769 (
APIENTRYP
 
	tPFNGLNORMALPOINTERVINTELPROC
Ë(
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
* *
	tpoöãr
);

6770 (
APIENTRYP
 
	tPFNGLCOLORPOINTERVINTELPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
* *
	tpoöãr
);

6771 (
APIENTRYP
 
	tPFNGLTEXCOORDPOINTERVINTELPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
* *
	tpoöãr
);

6774 #i‚de‡
GL_HP_oc˛usi⁄_ã°


6775 
	#GL_HP_oc˛usi⁄_ã°
 1

	)

6778 #i‚de‡
GL_EXT_pixñ_å™sf‹m


6779 
	#GL_EXT_pixñ_å™sf‹m
 1

	)

6780 #ifde‡
GL_GLEXT_PROTOTYPES


6781 
GLAPI
 
APIENTRY
 
glPixñTønsf‹mP¨amëîiEXT
 (
GLíum
, GLíum, 
GLöt
);

6782 
GLAPI
 
APIENTRY
 
glPixñTønsf‹mP¨amëîfEXT
 (
GLíum
, GLíum, 
GLÊﬂt
);

6783 
GLAPI
 
APIENTRY
 
glPixñTønsf‹mP¨amëîivEXT
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

6784 
GLAPI
 
APIENTRY
 
glPixñTønsf‹mP¨amëîfvEXT
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

6786 (
APIENTRYP
 
	tPFNGLPIXELTRANSFORMPARAMETERIEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

6787 (
APIENTRYP
 
	tPFNGLPIXELTRANSFORMPARAMETERFEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

6788 (
APIENTRYP
 
	tPFNGLPIXELTRANSFORMPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

6789 (
APIENTRYP
 
	tPFNGLPIXELTRANSFORMPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

6792 #i‚de‡
GL_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ


6793 
	#GL_EXT_pixñ_å™sf‹m_cﬁ‹_èbÀ
 1

	)

6796 #i‚de‡
GL_EXT_sh¨ed_ãxtuª_∑Àâe


6797 
	#GL_EXT_sh¨ed_ãxtuª_∑Àâe
 1

	)

6800 #i‚de‡
GL_EXT_£∑øã_•ecuœr_cﬁ‹


6801 
	#GL_EXT_£∑øã_•ecuœr_cﬁ‹
 1

	)

6804 #i‚de‡
GL_EXT_£c⁄d¨y_cﬁ‹


6805 
	#GL_EXT_£c⁄d¨y_cﬁ‹
 1

	)

6806 #ifde‡
GL_GLEXT_PROTOTYPES


6807 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3bEXT
 (
GLbyã
, GLbyte, GLbyte);

6808 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3bvEXT
 (c⁄° 
GLbyã
 *);

6809 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3dEXT
 (
GLdoubÀ
, GLdouble, GLdouble);

6810 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3dvEXT
 (c⁄° 
GLdoubÀ
 *);

6811 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3fEXT
 (
GLÊﬂt
, GLfloat, GLfloat);

6812 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3fvEXT
 (c⁄° 
GLÊﬂt
 *);

6813 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3iEXT
 (
GLöt
, GLint, GLint);

6814 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3ivEXT
 (c⁄° 
GLöt
 *);

6815 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3sEXT
 (
GLsh‹t
, GLshort, GLshort);

6816 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3svEXT
 (c⁄° 
GLsh‹t
 *);

6817 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3ubEXT
 (
GLubyã
, GLubyte, GLubyte);

6818 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3ubvEXT
 (c⁄° 
GLubyã
 *);

6819 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3uiEXT
 (
GLuöt
, GLuint, GLuint);

6820 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3uivEXT
 (c⁄° 
GLuöt
 *);

6821 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3usEXT
 (
GLush‹t
, GLushort, GLushort);

6822 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3usvEXT
 (c⁄° 
GLush‹t
 *);

6823 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹PoöãrEXT
 (
GLöt
, 
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

6825 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3BEXTPROC
Ë(
	tGLbyã
 
	tªd
, GLbyã 
	tgªí
, GLbyã 
	tblue
);

6826 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3BVEXTPROC
Ë(c⁄° 
	tGLbyã
 *
	tv
);

6827 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3DEXTPROC
Ë(
	tGLdoubÀ
 
	tªd
, GLdoubÀ 
	tgªí
, GLdoubÀ 
	tblue
);

6828 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3DVEXTPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

6829 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3FEXTPROC
Ë(
	tGLÊﬂt
 
	tªd
, GLÊﬂà
	tgªí
, GLÊﬂà
	tblue
);

6830 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3FVEXTPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

6831 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3IEXTPROC
Ë(
	tGLöt
 
	tªd
, GLöà
	tgªí
, GLöà
	tblue
);

6832 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3IVEXTPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

6833 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3SEXTPROC
Ë(
	tGLsh‹t
 
	tªd
, GLsh‹à
	tgªí
, GLsh‹à
	tblue
);

6834 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3SVEXTPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

6835 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UBEXTPROC
Ë(
	tGLubyã
 
	tªd
, GLubyã 
	tgªí
, GLubyã 
	tblue
);

6836 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UBVEXTPROC
Ë(c⁄° 
	tGLubyã
 *
	tv
);

6837 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UIEXTPROC
Ë(
	tGLuöt
 
	tªd
, GLuöà
	tgªí
, GLuöà
	tblue
);

6838 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3UIVEXTPROC
Ë(c⁄° 
	tGLuöt
 *
	tv
);

6839 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3USEXTPROC
Ë(
	tGLush‹t
 
	tªd
, GLush‹à
	tgªí
, GLush‹à
	tblue
);

6840 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3USVEXTPROC
Ë(c⁄° 
	tGLush‹t
 *
	tv
);

6841 (
APIENTRYP
 
	tPFNGLSECONDARYCOLORPOINTEREXTPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6844 #i‚de‡
GL_EXT_ãxtuª_≥πurb_n‹mÆ


6845 
	#GL_EXT_ãxtuª_≥πurb_n‹mÆ
 1

	)

6846 #ifde‡
GL_GLEXT_PROTOTYPES


6847 
GLAPI
 
APIENTRY
 
glTextuªN‹mÆEXT
 (
GLíum
);

6849 (
APIENTRYP
 
	tPFNGLTEXTURENORMALEXTPROC
Ë(
	tGLíum
 
	tmode
);

6852 #i‚de‡
GL_EXT_mu…i_døw_¨øys


6853 
	#GL_EXT_mu…i_døw_¨øys
 1

	)

6854 #ifde‡
GL_GLEXT_PROTOTYPES


6855 
GLAPI
 
APIENTRY
 
glMu…iDøwAºaysEXT
 (
GLíum
, 
GLöt
 *, 
GLsizei
 *, GLsizei);

6856 
GLAPI
 
APIENTRY
 
glMu…iDøwEÀmítsEXT
 (
GLíum
, c⁄° 
GLsizei
 *, GLíum, c⁄° 
GLvoid
* *, GLsizei);

6858 (
APIENTRYP
 
	tPFNGLMULTIDRAWARRAYSEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 *
	tfú°
, 
	tGLsizei
 *
	tcou¡
, GLsizeò
	t¥imcou¡
);

6859 (
APIENTRYP
 
	tPFNGLMULTIDRAWELEMENTSEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLsizei
 *
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
* *
	tödi˚s
, GLsizeò
	t¥imcou¡
);

6862 #i‚de‡
GL_EXT_fog_co‹d


6863 
	#GL_EXT_fog_co‹d
 1

	)

6864 #ifde‡
GL_GLEXT_PROTOTYPES


6865 
GLAPI
 
APIENTRY
 
glFogCo‹dfEXT
 (
GLÊﬂt
);

6866 
GLAPI
 
APIENTRY
 
glFogCo‹dfvEXT
 (c⁄° 
GLÊﬂt
 *);

6867 
GLAPI
 
APIENTRY
 
glFogCo‹ddEXT
 (
GLdoubÀ
);

6868 
GLAPI
 
APIENTRY
 
glFogCo‹ddvEXT
 (c⁄° 
GLdoubÀ
 *);

6869 
GLAPI
 
APIENTRY
 
glFogCo‹dPoöãrEXT
 (
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

6871 (
APIENTRYP
 
	tPFNGLFOGCOORDFEXTPROC
Ë(
	tGLÊﬂt
 
	tco‹d
);

6872 (
APIENTRYP
 
	tPFNGLFOGCOORDFVEXTPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tco‹d
);

6873 (
APIENTRYP
 
	tPFNGLFOGCOORDDEXTPROC
Ë(
	tGLdoubÀ
 
	tco‹d
);

6874 (
APIENTRYP
 
	tPFNGLFOGCOORDDVEXTPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tco‹d
);

6875 (
APIENTRYP
 
	tPFNGLFOGCOORDPOINTEREXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6878 #i‚de‡
GL_REND_s¸ìn_co‹dö©es


6879 
	#GL_REND_s¸ìn_co‹dö©es
 1

	)

6882 #i‚de‡
GL_EXT_co‹dö©e_‰ame


6883 
	#GL_EXT_co‹dö©e_‰ame
 1

	)

6884 #ifde‡
GL_GLEXT_PROTOTYPES


6885 
GLAPI
 
APIENTRY
 
glT™gít3bEXT
 (
GLbyã
, GLbyte, GLbyte);

6886 
GLAPI
 
APIENTRY
 
glT™gít3bvEXT
 (c⁄° 
GLbyã
 *);

6887 
GLAPI
 
APIENTRY
 
glT™gít3dEXT
 (
GLdoubÀ
, GLdouble, GLdouble);

6888 
GLAPI
 
APIENTRY
 
glT™gít3dvEXT
 (c⁄° 
GLdoubÀ
 *);

6889 
GLAPI
 
APIENTRY
 
glT™gít3fEXT
 (
GLÊﬂt
, GLfloat, GLfloat);

6890 
GLAPI
 
APIENTRY
 
glT™gít3fvEXT
 (c⁄° 
GLÊﬂt
 *);

6891 
GLAPI
 
APIENTRY
 
glT™gít3iEXT
 (
GLöt
, GLint, GLint);

6892 
GLAPI
 
APIENTRY
 
glT™gít3ivEXT
 (c⁄° 
GLöt
 *);

6893 
GLAPI
 
APIENTRY
 
glT™gít3sEXT
 (
GLsh‹t
, GLshort, GLshort);

6894 
GLAPI
 
APIENTRY
 
glT™gít3svEXT
 (c⁄° 
GLsh‹t
 *);

6895 
GLAPI
 
APIENTRY
 
glBö‹mÆ3bEXT
 (
GLbyã
, GLbyte, GLbyte);

6896 
GLAPI
 
APIENTRY
 
glBö‹mÆ3bvEXT
 (c⁄° 
GLbyã
 *);

6897 
GLAPI
 
APIENTRY
 
glBö‹mÆ3dEXT
 (
GLdoubÀ
, GLdouble, GLdouble);

6898 
GLAPI
 
APIENTRY
 
glBö‹mÆ3dvEXT
 (c⁄° 
GLdoubÀ
 *);

6899 
GLAPI
 
APIENTRY
 
glBö‹mÆ3fEXT
 (
GLÊﬂt
, GLfloat, GLfloat);

6900 
GLAPI
 
APIENTRY
 
glBö‹mÆ3fvEXT
 (c⁄° 
GLÊﬂt
 *);

6901 
GLAPI
 
APIENTRY
 
glBö‹mÆ3iEXT
 (
GLöt
, GLint, GLint);

6902 
GLAPI
 
APIENTRY
 
glBö‹mÆ3ivEXT
 (c⁄° 
GLöt
 *);

6903 
GLAPI
 
APIENTRY
 
glBö‹mÆ3sEXT
 (
GLsh‹t
, GLshort, GLshort);

6904 
GLAPI
 
APIENTRY
 
glBö‹mÆ3svEXT
 (c⁄° 
GLsh‹t
 *);

6905 
GLAPI
 
APIENTRY
 
glT™gítPoöãrEXT
 (
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

6906 
GLAPI
 
APIENTRY
 
glBö‹mÆPoöãrEXT
 (
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

6908 (
APIENTRYP
 
	tPFNGLTANGENT3BEXTPROC
Ë(
	tGLbyã
 
	ttx
, GLbyã 
	tty
, GLbyã 
	ttz
);

6909 (
APIENTRYP
 
	tPFNGLTANGENT3BVEXTPROC
Ë(c⁄° 
	tGLbyã
 *
	tv
);

6910 (
APIENTRYP
 
	tPFNGLTANGENT3DEXTPROC
Ë(
	tGLdoubÀ
 
	ttx
, GLdoubÀ 
	tty
, GLdoubÀ 
	ttz
);

6911 (
APIENTRYP
 
	tPFNGLTANGENT3DVEXTPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

6912 (
APIENTRYP
 
	tPFNGLTANGENT3FEXTPROC
Ë(
	tGLÊﬂt
 
	ttx
, GLÊﬂà
	tty
, GLÊﬂà
	ttz
);

6913 (
APIENTRYP
 
	tPFNGLTANGENT3FVEXTPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

6914 (
APIENTRYP
 
	tPFNGLTANGENT3IEXTPROC
Ë(
	tGLöt
 
	ttx
, GLöà
	tty
, GLöà
	ttz
);

6915 (
APIENTRYP
 
	tPFNGLTANGENT3IVEXTPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

6916 (
APIENTRYP
 
	tPFNGLTANGENT3SEXTPROC
Ë(
	tGLsh‹t
 
	ttx
, GLsh‹à
	tty
, GLsh‹à
	ttz
);

6917 (
APIENTRYP
 
	tPFNGLTANGENT3SVEXTPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

6918 (
APIENTRYP
 
	tPFNGLBINORMAL3BEXTPROC
Ë(
	tGLbyã
 
	tbx
, GLbyã 
	tby
, GLbyã 
	tbz
);

6919 (
APIENTRYP
 
	tPFNGLBINORMAL3BVEXTPROC
Ë(c⁄° 
	tGLbyã
 *
	tv
);

6920 (
APIENTRYP
 
	tPFNGLBINORMAL3DEXTPROC
Ë(
	tGLdoubÀ
 
	tbx
, GLdoubÀ 
	tby
, GLdoubÀ 
	tbz
);

6921 (
APIENTRYP
 
	tPFNGLBINORMAL3DVEXTPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

6922 (
APIENTRYP
 
	tPFNGLBINORMAL3FEXTPROC
Ë(
	tGLÊﬂt
 
	tbx
, GLÊﬂà
	tby
, GLÊﬂà
	tbz
);

6923 (
APIENTRYP
 
	tPFNGLBINORMAL3FVEXTPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

6924 (
APIENTRYP
 
	tPFNGLBINORMAL3IEXTPROC
Ë(
	tGLöt
 
	tbx
, GLöà
	tby
, GLöà
	tbz
);

6925 (
APIENTRYP
 
	tPFNGLBINORMAL3IVEXTPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

6926 (
APIENTRYP
 
	tPFNGLBINORMAL3SEXTPROC
Ë(
	tGLsh‹t
 
	tbx
, GLsh‹à
	tby
, GLsh‹à
	tbz
);

6927 (
APIENTRYP
 
	tPFNGLBINORMAL3SVEXTPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

6928 (
APIENTRYP
 
	tPFNGLTANGENTPOINTEREXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6929 (
APIENTRYP
 
	tPFNGLBINORMALPOINTEREXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

6932 #i‚de‡
GL_EXT_ãxtuª_ív_comböe


6933 
	#GL_EXT_ãxtuª_ív_comböe
 1

	)

6936 #i‚de‡
GL_APPLE_•ecuœr_ve˘‹


6937 
	#GL_APPLE_•ecuœr_ve˘‹
 1

	)

6940 #i‚de‡
GL_APPLE_å™sf‹m_höt


6941 
	#GL_APPLE_å™sf‹m_höt
 1

	)

6944 #i‚de‡
GL_SGIX_fog_sˇÀ


6945 
	#GL_SGIX_fog_sˇÀ
 1

	)

6948 #i‚de‡
GL_SUNX_c⁄°™t_d©a


6949 
	#GL_SUNX_c⁄°™t_d©a
 1

	)

6950 #ifde‡
GL_GLEXT_PROTOTYPES


6951 
GLAPI
 
APIENTRY
 
glFöishTextuªSUNX
 ();

6953 (
APIENTRYP
 
	tPFNGLFINISHTEXTURESUNXPROC
) ();

6956 #i‚de‡
GL_SUN_globÆ_Æpha


6957 
	#GL_SUN_globÆ_Æpha
 1

	)

6958 #ifde‡
GL_GLEXT_PROTOTYPES


6959 
GLAPI
 
APIENTRY
 
glGlobÆAÕhaFa˘‹bSUN
 (
GLbyã
);

6960 
GLAPI
 
APIENTRY
 
glGlobÆAÕhaFa˘‹sSUN
 (
GLsh‹t
);

6961 
GLAPI
 
APIENTRY
 
glGlobÆAÕhaFa˘‹iSUN
 (
GLöt
);

6962 
GLAPI
 
APIENTRY
 
glGlobÆAÕhaFa˘‹fSUN
 (
GLÊﬂt
);

6963 
GLAPI
 
APIENTRY
 
glGlobÆAÕhaFa˘‹dSUN
 (
GLdoubÀ
);

6964 
GLAPI
 
APIENTRY
 
glGlobÆAÕhaFa˘‹ubSUN
 (
GLubyã
);

6965 
GLAPI
 
APIENTRY
 
glGlobÆAÕhaFa˘‹usSUN
 (
GLush‹t
);

6966 
GLAPI
 
APIENTRY
 
glGlobÆAÕhaFa˘‹uiSUN
 (
GLuöt
);

6968 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORBSUNPROC
Ë(
	tGLbyã
 
	tÁ˘‹
);

6969 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORSSUNPROC
Ë(
	tGLsh‹t
 
	tÁ˘‹
);

6970 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORISUNPROC
Ë(
	tGLöt
 
	tÁ˘‹
);

6971 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORFSUNPROC
Ë(
	tGLÊﬂt
 
	tÁ˘‹
);

6972 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORDSUNPROC
Ë(
	tGLdoubÀ
 
	tÁ˘‹
);

6973 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORUBSUNPROC
Ë(
	tGLubyã
 
	tÁ˘‹
);

6974 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORUSSUNPROC
Ë(
	tGLush‹t
 
	tÁ˘‹
);

6975 (
APIENTRYP
 
	tPFNGLGLOBALALPHAFACTORUISUNPROC
Ë(
	tGLuöt
 
	tÁ˘‹
);

6978 #i‚de‡
GL_SUN_åüngÀ_li°


6979 
	#GL_SUN_åüngÀ_li°
 1

	)

6980 #ifde‡
GL_GLEXT_PROTOTYPES


6981 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiSUN
 (
GLuöt
);

6982 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeusSUN
 (
GLush‹t
);

6983 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeubSUN
 (
GLubyã
);

6984 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuivSUN
 (c⁄° 
GLuöt
 *);

6985 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeusvSUN
 (c⁄° 
GLush‹t
 *);

6986 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeubvSUN
 (c⁄° 
GLubyã
 *);

6987 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodePoöãrSUN
 (
GLíum
, 
GLsizei
, c⁄° 
GLvoid
* *);

6989 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUISUNPROC
Ë(
	tGLuöt
 
	tcode
);

6990 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUSSUNPROC
Ë(
	tGLush‹t
 
	tcode
);

6991 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUBSUNPROC
Ë(
	tGLubyã
 
	tcode
);

6992 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUIVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	tcode
);

6993 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUSVSUNPROC
Ë(c⁄° 
	tGLush‹t
 *
	tcode
);

6994 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUBVSUNPROC
Ë(c⁄° 
	tGLubyã
 *
	tcode
);

6995 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEPOINTERSUNPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
* *
	tpoöãr
);

6998 #i‚de‡
GL_SUN_vîãx


6999 
	#GL_SUN_vîãx
 1

	)

7000 #ifde‡
GL_GLEXT_PROTOTYPES


7001 
GLAPI
 
APIENTRY
 
glCﬁ‹4ubVîãx2fSUN
 (
GLubyã
, GLubyã, GLubyã, GLubyã, 
GLÊﬂt
, GLfloat);

7002 
GLAPI
 
APIENTRY
 
glCﬁ‹4ubVîãx2fvSUN
 (c⁄° 
GLubyã
 *, c⁄° 
GLÊﬂt
 *);

7003 
GLAPI
 
APIENTRY
 
glCﬁ‹4ubVîãx3fSUN
 (
GLubyã
, GLubyã, GLubyã, GLubyã, 
GLÊﬂt
, GLfloat, GLfloat);

7004 
GLAPI
 
APIENTRY
 
glCﬁ‹4ubVîãx3fvSUN
 (c⁄° 
GLubyã
 *, c⁄° 
GLÊﬂt
 *);

7005 
GLAPI
 
APIENTRY
 
glCﬁ‹3fVîãx3fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7006 
GLAPI
 
APIENTRY
 
glCﬁ‹3fVîãx3fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *);

7007 
GLAPI
 
APIENTRY
 
glN‹mÆ3fVîãx3fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7008 
GLAPI
 
APIENTRY
 
glN‹mÆ3fVîãx3fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *);

7009 
GLAPI
 
APIENTRY
 
glCﬁ‹4fN‹mÆ3fVîãx3fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7010 
GLAPI
 
APIENTRY
 
glCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *, const GLfloat *);

7011 
GLAPI
 
APIENTRY
 
glTexCo‹d2fVîãx3fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat);

7012 
GLAPI
 
APIENTRY
 
glTexCo‹d2fVîãx3fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *);

7013 
GLAPI
 
APIENTRY
 
glTexCo‹d4fVîãx4fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7014 
GLAPI
 
APIENTRY
 
glTexCo‹d4fVîãx4fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *);

7015 
GLAPI
 
APIENTRY
 
glTexCo‹d2fCﬁ‹4ubVîãx3fSUN
 (
GLÊﬂt
, GLÊﬂt, 
GLubyã
, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat);

7016 
GLAPI
 
APIENTRY
 
glTexCo‹d2fCﬁ‹4ubVîãx3fvSUN
 (c⁄° 
GLÊﬂt
 *, c⁄° 
GLubyã
 *, const GLfloat *);

7017 
GLAPI
 
APIENTRY
 
glTexCo‹d2fCﬁ‹3fVîãx3fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7018 
GLAPI
 
APIENTRY
 
glTexCo‹d2fCﬁ‹3fVîãx3fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *, const GLfloat *);

7019 
GLAPI
 
APIENTRY
 
glTexCo‹d2fN‹mÆ3fVîãx3fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7020 
GLAPI
 
APIENTRY
 
glTexCo‹d2fN‹mÆ3fVîãx3fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *, const GLfloat *);

7021 
GLAPI
 
APIENTRY
 
glTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7022 
GLAPI
 
APIENTRY
 
glTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *, const GLfloat *, const GLfloat *);

7023 
GLAPI
 
APIENTRY
 
glTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fSUN
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7024 
GLAPI
 
APIENTRY
 
glTexCo‹d4fCﬁ‹4fN‹mÆ3fVîãx4fvSUN
 (c⁄° 
GLÊﬂt
 *, const GLfloat *, const GLfloat *, const GLfloat *);

7025 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiVîãx3fSUN
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat);

7026 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiVîãx3fvSUN
 (c⁄° 
GLuöt
 *, c⁄° 
GLÊﬂt
 *);

7027 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiCﬁ‹4ubVîãx3fSUN
 (
GLuöt
, 
GLubyã
, GLubyã, GLubyã, GLubyã, 
GLÊﬂt
, GLfloat, GLfloat);

7028 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiCﬁ‹4ubVîãx3fvSUN
 (c⁄° 
GLuöt
 *, c⁄° 
GLubyã
 *, c⁄° 
GLÊﬂt
 *);

7029 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiCﬁ‹3fVîãx3fSUN
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7030 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiCﬁ‹3fVîãx3fvSUN
 (c⁄° 
GLuöt
 *, c⁄° 
GLÊﬂt
 *, const GLfloat *);

7031 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiN‹mÆ3fVîãx3fSUN
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7032 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiN‹mÆ3fVîãx3fvSUN
 (c⁄° 
GLuöt
 *, c⁄° 
GLÊﬂt
 *, const GLfloat *);

7033 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fSUN
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7034 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 (c⁄° 
GLuöt
 *, c⁄° 
GLÊﬂt
 *, const GLfloat *, const GLfloat *);

7035 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiTexCo‹d2fVîãx3fSUN
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat);

7036 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiTexCo‹d2fVîãx3fvSUN
 (c⁄° 
GLuöt
 *, c⁄° 
GLÊﬂt
 *, const GLfloat *);

7037 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fSUN
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7038 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiTexCo‹d2fN‹mÆ3fVîãx3fvSUN
 (c⁄° 
GLuöt
 *, c⁄° 
GLÊﬂt
 *, const GLfloat *, const GLfloat *);

7039 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fSUN
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);

7040 
GLAPI
 
APIENTRY
 
glRïœ˚mítCodeuiTexCo‹d2fCﬁ‹4fN‹mÆ3fVîãx3fvSUN
 (c⁄° 
GLuöt
 *, c⁄° 
GLÊﬂt
 *, const GLfloat *, const GLfloat *, const GLfloat *);

7042 (
APIENTRYP
 
	tPFNGLCOLOR4UBVERTEX2FSUNPROC
Ë(
	tGLubyã
 
	tr
, GLubyã 
	tg
, GLubyã 
	tb
, GLubyã 
	ta
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

7043 (
APIENTRYP
 
	tPFNGLCOLOR4UBVERTEX2FVSUNPROC
Ë(c⁄° 
	tGLubyã
 *
	tc
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7044 (
APIENTRYP
 
	tPFNGLCOLOR4UBVERTEX3FSUNPROC
Ë(
	tGLubyã
 
	tr
, GLubyã 
	tg
, GLubyã 
	tb
, GLubyã 
	ta
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7045 (
APIENTRYP
 
	tPFNGLCOLOR4UBVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLubyã
 *
	tc
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7046 (
APIENTRYP
 
	tPFNGLCOLOR3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7047 (
APIENTRYP
 
	tPFNGLCOLOR3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tc
, c⁄° GLÊﬂà*
	tv
);

7048 (
APIENTRYP
 
	tPFNGLNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7049 (
APIENTRYP
 
	tPFNGLNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tn
, c⁄° GLÊﬂà*
	tv
);

7050 (
APIENTRYP
 
	tPFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	ta
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7051 (
APIENTRYP
 
	tPFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tc
, c⁄° GLÊﬂà*
	tn
, c⁄° GLÊﬂà*
	tv
);

7052 (
APIENTRYP
 
	tPFNGLTEXCOORD2FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7053 (
APIENTRYP
 
	tPFNGLTEXCOORD2FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tv
);

7054 (
APIENTRYP
 
	tPFNGLTEXCOORD4FVERTEX4FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tp
, GLÊﬂà
	tq
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

7055 (
APIENTRYP
 
	tPFNGLTEXCOORD4FVERTEX4FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tv
);

7056 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, 
	tGLubyã
 
	tr
, GLubyã 
	tg
, GLubyã 
	tb
, GLubyã 
	ta
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7057 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° 
	tGLubyã
 *
	tc
, c⁄° GLÊﬂà*
	tv
);

7058 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7059 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tc
, c⁄° GLÊﬂà*
	tv
);

7060 (
APIENTRYP
 
	tPFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7061 (
APIENTRYP
 
	tPFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tn
, c⁄° GLÊﬂà*
	tv
);

7062 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	ta
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7063 (
APIENTRYP
 
	tPFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tc
, c⁄° GLÊﬂà*
	tn
, c⁄° GLÊﬂà*
	tv
);

7064 (
APIENTRYP
 
	tPFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC
Ë(
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tp
, GLÊﬂà
	tq
, GLÊﬂà
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	ta
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

7065 (
APIENTRYP
 
	tPFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tc
, c⁄° GLÊﬂà*
	tn
, c⁄° GLÊﬂà*
	tv
);

7066 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7067 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	trc
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7068 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLubyã
 
	tr
, GLubyã 
	tg
, GLubyã 
	tb
, GLubyã 
	ta
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7069 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	trc
, c⁄° 
	tGLubyã
 *
	tc
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7070 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7071 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	trc
, c⁄° 
	tGLÊﬂt
 *
	tc
, c⁄° GLÊﬂà*
	tv
);

7072 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7073 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	trc
, c⁄° 
	tGLÊﬂt
 *
	tn
, c⁄° GLÊﬂà*
	tv
);

7074 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	ta
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7075 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	trc
, c⁄° 
	tGLÊﬂt
 *
	tc
, c⁄° GLÊﬂà*
	tn
, c⁄° GLÊﬂà*
	tv
);

7076 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7077 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	trc
, c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tv
);

7078 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7079 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	trc
, c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tn
, c⁄° GLÊﬂà*
	tv
);

7080 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
Ë(
	tGLuöt
 
	trc
, 
	tGLÊﬂt
 
	ts
, GLÊﬂà
	tt
, GLÊﬂà
	tr
, GLÊﬂà
	tg
, GLÊﬂà
	tb
, GLÊﬂà
	ta
, GLÊﬂà
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7081 (
APIENTRYP
 
	tPFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
Ë(c⁄° 
	tGLuöt
 *
	trc
, c⁄° 
	tGLÊﬂt
 *
	ttc
, c⁄° GLÊﬂà*
	tc
, c⁄° GLÊﬂà*
	tn
, c⁄° GLÊﬂà*
	tv
);

7084 #i‚de‡
GL_EXT_bÀnd_func_£∑øã


7085 
	#GL_EXT_bÀnd_func_£∑øã
 1

	)

7086 #ifde‡
GL_GLEXT_PROTOTYPES


7087 
GLAPI
 
APIENTRY
 
glBÀndFuncSï¨©eEXT
 (
GLíum
, GLenum, GLenum, GLenum);

7089 (
APIENTRYP
 
	tPFNGLBLENDFUNCSEPARATEEXTPROC
Ë(
	tGLíum
 
	tsÁ˘‹RGB
, GLíum 
	tdÁ˘‹RGB
, GLíum 
	tsÁ˘‹AÕha
, GLíum 
	tdÁ˘‹AÕha
);

7092 #i‚de‡
GL_INGR_bÀnd_func_£∑øã


7093 
	#GL_INGR_bÀnd_func_£∑øã
 1

	)

7094 #ifde‡
GL_GLEXT_PROTOTYPES


7095 
GLAPI
 
APIENTRY
 
glBÀndFuncSï¨©eINGR
 (
GLíum
, GLenum, GLenum, GLenum);

7097 (
APIENTRYP
 
	tPFNGLBLENDFUNCSEPARATEINGRPROC
Ë(
	tGLíum
 
	tsÁ˘‹RGB
, GLíum 
	tdÁ˘‹RGB
, GLíum 
	tsÁ˘‹AÕha
, GLíum 
	tdÁ˘‹AÕha
);

7100 #i‚de‡
GL_INGR_cﬁ‹_˛amp


7101 
	#GL_INGR_cﬁ‹_˛amp
 1

	)

7104 #i‚de‡
GL_INGR_öãæa˚_ªad


7105 
	#GL_INGR_öãæa˚_ªad
 1

	)

7108 #i‚de‡
GL_EXT_°ícû_wøp


7109 
	#GL_EXT_°ícû_wøp
 1

	)

7112 #i‚de‡
GL_EXT_422_pixñs


7113 
	#GL_EXT_422_pixñs
 1

	)

7116 #i‚de‡
GL_NV_ãxgí_ªÊe˘i⁄


7117 
	#GL_NV_ãxgí_ªÊe˘i⁄
 1

	)

7120 #i‚de‡
GL_SUN_c⁄vﬁuti⁄_b‹dî_modes


7121 
	#GL_SUN_c⁄vﬁuti⁄_b‹dî_modes
 1

	)

7124 #i‚de‡
GL_EXT_ãxtuª_ív_add


7125 
	#GL_EXT_ãxtuª_ív_add
 1

	)

7128 #i‚de‡
GL_EXT_ãxtuª_lod_büs


7129 
	#GL_EXT_ãxtuª_lod_büs
 1

	)

7132 #i‚de‡
GL_EXT_ãxtuª_fûãr_™isŸr›ic


7133 
	#GL_EXT_ãxtuª_fûãr_™isŸr›ic
 1

	)

7136 #i‚de‡
GL_EXT_vîãx_weightög


7137 
	#GL_EXT_vîãx_weightög
 1

	)

7138 #ifde‡
GL_GLEXT_PROTOTYPES


7139 
GLAPI
 
APIENTRY
 
glVîãxWeightfEXT
 (
GLÊﬂt
);

7140 
GLAPI
 
APIENTRY
 
glVîãxWeightfvEXT
 (c⁄° 
GLÊﬂt
 *);

7141 
GLAPI
 
APIENTRY
 
glVîãxWeightPoöãrEXT
 (
GLsizei
, 
GLíum
, GLsizei, c⁄° 
GLvoid
 *);

7143 (
APIENTRYP
 
	tPFNGLVERTEXWEIGHTFEXTPROC
Ë(
	tGLÊﬂt
 
	tweight
);

7144 (
APIENTRYP
 
	tPFNGLVERTEXWEIGHTFVEXTPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tweight
);

7145 (
APIENTRYP
 
	tPFNGLVERTEXWEIGHTPOINTEREXTPROC
Ë(
	tGLsizei
 
	tsize
, 
	tGLíum
 
	tty≥
, GLsizeò
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

7148 #i‚de‡
GL_NV_light_max_exp⁄ít


7149 
	#GL_NV_light_max_exp⁄ít
 1

	)

7152 #i‚de‡
GL_NV_vîãx_¨øy_ønge


7153 
	#GL_NV_vîãx_¨øy_ønge
 1

	)

7154 #ifde‡
GL_GLEXT_PROTOTYPES


7155 
GLAPI
 
APIENTRY
 
glFlushVîãxAºayR™geNV
 ();

7156 
GLAPI
 
APIENTRY
 
glVîãxAºayR™geNV
 (
GLsizei
, c⁄° 
GLvoid
 *);

7158 (
APIENTRYP
 
	tPFNGLFLUSHVERTEXARRAYRANGENVPROC
) ();

7159 (
APIENTRYP
 
	tPFNGLVERTEXARRAYRANGENVPROC
Ë(
	tGLsizei
 
	tÀngth
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

7162 #i‚de‡
GL_NV_ªgi°î_comböîs


7163 
	#GL_NV_ªgi°î_comböîs
 1

	)

7164 #ifde‡
GL_GLEXT_PROTOTYPES


7165 
GLAPI
 
APIENTRY
 
glComböîP¨amëîfvNV
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

7166 
GLAPI
 
APIENTRY
 
glComböîP¨amëîfNV
 (
GLíum
, 
GLÊﬂt
);

7167 
GLAPI
 
APIENTRY
 
glComböîP¨amëîivNV
 (
GLíum
, c⁄° 
GLöt
 *);

7168 
GLAPI
 
APIENTRY
 
glComböîP¨amëîiNV
 (
GLíum
, 
GLöt
);

7169 
GLAPI
 
APIENTRY
 
glComböîI≈utNV
 (
GLíum
, GLenum, GLenum, GLenum, GLenum, GLenum);

7170 
GLAPI
 
APIENTRY
 
glComböîOuçutNV
 (
GLíum
, GLíum, GLíum, GLíum, GLíum, GLíum, GLíum, 
GLboﬁón
, GLboolean, GLboolean);

7171 
GLAPI
 
APIENTRY
 
glFöÆComböîI≈utNV
 (
GLíum
, GLenum, GLenum, GLenum);

7172 
GLAPI
 
APIENTRY
 
glGëComböîI≈utP¨amëîfvNV
 (
GLíum
, GLíum, GLíum, GLíum, 
GLÊﬂt
 *);

7173 
GLAPI
 
APIENTRY
 
glGëComböîI≈utP¨amëîivNV
 (
GLíum
, GLíum, GLíum, GLíum, 
GLöt
 *);

7174 
GLAPI
 
APIENTRY
 
glGëComböîOuçutP¨amëîfvNV
 (
GLíum
, GLíum, GLíum, 
GLÊﬂt
 *);

7175 
GLAPI
 
APIENTRY
 
glGëComböîOuçutP¨amëîivNV
 (
GLíum
, GLíum, GLíum, 
GLöt
 *);

7176 
GLAPI
 
APIENTRY
 
glGëFöÆComböîI≈utP¨amëîfvNV
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

7177 
GLAPI
 
APIENTRY
 
glGëFöÆComböîI≈utP¨amëîivNV
 (
GLíum
, GLíum, 
GLöt
 *);

7179 (
APIENTRYP
 
	tPFNGLCOMBINERPARAMETERFVNVPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

7180 (
APIENTRYP
 
	tPFNGLCOMBINERPARAMETERFNVPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

7181 (
APIENTRYP
 
	tPFNGLCOMBINERPARAMETERIVNVPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

7182 (
APIENTRYP
 
	tPFNGLCOMBINERPARAMETERINVPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

7183 (
APIENTRYP
 
	tPFNGLCOMBINERINPUTNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	tv¨übÀ
, GLíum 
	töput
, GLíum 
	tm≠pög
, GLíum 
	tcomp⁄ítUßge
);

7184 (
APIENTRYP
 
	tPFNGLCOMBINEROUTPUTNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	tabOuçut
, GLíum 
	tcdOuçut
, GLíum 
	tsumOuçut
, GLíum 
	tsˇÀ
, GLíum 
	tbüs
, 
	tGLboﬁón
 
	tabDŸProdu˘
, GLboﬁó¿
	tcdDŸProdu˘
, GLboﬁó¿
	tmuxSum
);

7185 (
APIENTRYP
 
	tPFNGLFINALCOMBINERINPUTNVPROC
Ë(
	tGLíum
 
	tv¨übÀ
, GLíum 
	töput
, GLíum 
	tm≠pög
, GLíum 
	tcomp⁄ítUßge
);

7186 (
APIENTRYP
 
	tPFNGLGETCOMBINERINPUTPARAMETERFVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	tv¨übÀ
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7187 (
APIENTRYP
 
	tPFNGLGETCOMBINERINPUTPARAMETERIVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	tv¨übÀ
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7188 (
APIENTRYP
 
	tPFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7189 (
APIENTRYP
 
	tPFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	tp‹ti⁄
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7190 (
APIENTRYP
 
	tPFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC
Ë(
	tGLíum
 
	tv¨übÀ
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7191 (
APIENTRYP
 
	tPFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC
Ë(
	tGLíum
 
	tv¨übÀ
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7194 #i‚de‡
GL_NV_fog_di°™˚


7195 
	#GL_NV_fog_di°™˚
 1

	)

7198 #i‚de‡
GL_NV_ãxgí_emboss


7199 
	#GL_NV_ãxgí_emboss
 1

	)

7202 #i‚de‡
GL_NV_bÀnd_squ¨e


7203 
	#GL_NV_bÀnd_squ¨e
 1

	)

7206 #i‚de‡
GL_NV_ãxtuª_ív_comböe4


7207 
	#GL_NV_ãxtuª_ív_comböe4
 1

	)

7210 #i‚de‡
GL_MESA_ªsize_buf„rs


7211 
	#GL_MESA_ªsize_buf„rs
 1

	)

7212 #ifde‡
GL_GLEXT_PROTOTYPES


7213 
GLAPI
 
APIENTRY
 
glResizeBuf„rsMESA
 ();

7215 (
APIENTRYP
 
	tPFNGLRESIZEBUFFERSMESAPROC
) ();

7218 #i‚de‡
GL_MESA_wödow_pos


7219 
	#GL_MESA_wödow_pos
 1

	)

7220 #ifde‡
GL_GLEXT_PROTOTYPES


7221 
GLAPI
 
APIENTRY
 
glWödowPos2dMESA
 (
GLdoubÀ
, GLdouble);

7222 
GLAPI
 
APIENTRY
 
glWödowPos2dvMESA
 (c⁄° 
GLdoubÀ
 *);

7223 
GLAPI
 
APIENTRY
 
glWödowPos2fMESA
 (
GLÊﬂt
, GLfloat);

7224 
GLAPI
 
APIENTRY
 
glWödowPos2fvMESA
 (c⁄° 
GLÊﬂt
 *);

7225 
GLAPI
 
APIENTRY
 
glWödowPos2iMESA
 (
GLöt
, GLint);

7226 
GLAPI
 
APIENTRY
 
glWödowPos2ivMESA
 (c⁄° 
GLöt
 *);

7227 
GLAPI
 
APIENTRY
 
glWödowPos2sMESA
 (
GLsh‹t
, GLshort);

7228 
GLAPI
 
APIENTRY
 
glWödowPos2svMESA
 (c⁄° 
GLsh‹t
 *);

7229 
GLAPI
 
APIENTRY
 
glWödowPos3dMESA
 (
GLdoubÀ
, GLdouble, GLdouble);

7230 
GLAPI
 
APIENTRY
 
glWödowPos3dvMESA
 (c⁄° 
GLdoubÀ
 *);

7231 
GLAPI
 
APIENTRY
 
glWödowPos3fMESA
 (
GLÊﬂt
, GLfloat, GLfloat);

7232 
GLAPI
 
APIENTRY
 
glWödowPos3fvMESA
 (c⁄° 
GLÊﬂt
 *);

7233 
GLAPI
 
APIENTRY
 
glWödowPos3iMESA
 (
GLöt
, GLint, GLint);

7234 
GLAPI
 
APIENTRY
 
glWödowPos3ivMESA
 (c⁄° 
GLöt
 *);

7235 
GLAPI
 
APIENTRY
 
glWödowPos3sMESA
 (
GLsh‹t
, GLshort, GLshort);

7236 
GLAPI
 
APIENTRY
 
glWödowPos3svMESA
 (c⁄° 
GLsh‹t
 *);

7237 
GLAPI
 
APIENTRY
 
glWödowPos4dMESA
 (
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

7238 
GLAPI
 
APIENTRY
 
glWödowPos4dvMESA
 (c⁄° 
GLdoubÀ
 *);

7239 
GLAPI
 
APIENTRY
 
glWödowPos4fMESA
 (
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

7240 
GLAPI
 
APIENTRY
 
glWödowPos4fvMESA
 (c⁄° 
GLÊﬂt
 *);

7241 
GLAPI
 
APIENTRY
 
glWödowPos4iMESA
 (
GLöt
, GLint, GLint, GLint);

7242 
GLAPI
 
APIENTRY
 
glWödowPos4ivMESA
 (c⁄° 
GLöt
 *);

7243 
GLAPI
 
APIENTRY
 
glWödowPos4sMESA
 (
GLsh‹t
, GLshort, GLshort, GLshort);

7244 
GLAPI
 
APIENTRY
 
glWödowPos4svMESA
 (c⁄° 
GLsh‹t
 *);

7246 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DMESAPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

7247 (
APIENTRYP
 
	tPFNGLWINDOWPOS2DVMESAPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

7248 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FMESAPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

7249 (
APIENTRYP
 
	tPFNGLWINDOWPOS2FVMESAPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

7250 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IMESAPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
);

7251 (
APIENTRYP
 
	tPFNGLWINDOWPOS2IVMESAPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

7252 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SMESAPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

7253 (
APIENTRYP
 
	tPFNGLWINDOWPOS2SVMESAPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

7254 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DMESAPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

7255 (
APIENTRYP
 
	tPFNGLWINDOWPOS3DVMESAPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

7256 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FMESAPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7257 (
APIENTRYP
 
	tPFNGLWINDOWPOS3FVMESAPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

7258 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IMESAPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

7259 (
APIENTRYP
 
	tPFNGLWINDOWPOS3IVMESAPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

7260 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SMESAPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

7261 (
APIENTRYP
 
	tPFNGLWINDOWPOS3SVMESAPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

7262 (
APIENTRYP
 
	tPFNGLWINDOWPOS4DMESAPROC
Ë(
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

7263 (
APIENTRYP
 
	tPFNGLWINDOWPOS4DVMESAPROC
Ë(c⁄° 
	tGLdoubÀ
 *
	tv
);

7264 (
APIENTRYP
 
	tPFNGLWINDOWPOS4FMESAPROC
Ë(
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

7265 (
APIENTRYP
 
	tPFNGLWINDOWPOS4FVMESAPROC
Ë(c⁄° 
	tGLÊﬂt
 *
	tv
);

7266 (
APIENTRYP
 
	tPFNGLWINDOWPOS4IMESAPROC
Ë(
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

7267 (
APIENTRYP
 
	tPFNGLWINDOWPOS4IVMESAPROC
Ë(c⁄° 
	tGLöt
 *
	tv
);

7268 (
APIENTRYP
 
	tPFNGLWINDOWPOS4SMESAPROC
Ë(
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
, GLsh‹à
	tw
);

7269 (
APIENTRYP
 
	tPFNGLWINDOWPOS4SVMESAPROC
Ë(c⁄° 
	tGLsh‹t
 *
	tv
);

7272 #i‚de‡
GL_IBM_cuŒ_vîãx


7273 
	#GL_IBM_cuŒ_vîãx
 1

	)

7276 #i‚de‡
GL_IBM_mu…imode_døw_¨øys


7277 
	#GL_IBM_mu…imode_døw_¨øys
 1

	)

7278 #ifde‡
GL_GLEXT_PROTOTYPES


7279 
GLAPI
 
APIENTRY
 
glMu…iModeDøwAºaysIBM
 (c⁄° 
GLíum
 *, c⁄° 
GLöt
 *, c⁄° 
GLsizei
 *, GLsizei, GLint);

7280 
GLAPI
 
APIENTRY
 
glMu…iModeDøwEÀmítsIBM
 (c⁄° 
GLíum
 *, c⁄° 
GLsizei
 *, GLíum, c⁄° 
GLvoid
* c⁄° *, GLsizei, 
GLöt
);

7282 (
APIENTRYP
 
	tPFNGLMULTIMODEDRAWARRAYSIBMPROC
Ë(c⁄° 
	tGLíum
 *
	tmode
, c⁄° 
	tGLöt
 *
	tfú°
, c⁄° 
	tGLsizei
 *
	tcou¡
, GLsizeò
	t¥imcou¡
, GLöà
	tmode°ride
);

7283 (
APIENTRYP
 
	tPFNGLMULTIMODEDRAWELEMENTSIBMPROC
Ë(c⁄° 
	tGLíum
 *
	tmode
, c⁄° 
	tGLsizei
 *
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
* c⁄° *
	tödi˚s
, GLsizeò
	t¥imcou¡
, 
	tGLöt
 
	tmode°ride
);

7286 #i‚de‡
GL_IBM_vîãx_¨øy_li°s


7287 
	#GL_IBM_vîãx_¨øy_li°s
 1

	)

7288 #ifde‡
GL_GLEXT_PROTOTYPES


7289 
GLAPI
 
APIENTRY
 
glCﬁ‹PoöãrLi°IBM
 (
GLöt
, 
GLíum
, GLöt, c⁄° 
GLvoid
* *, GLint);

7290 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹PoöãrLi°IBM
 (
GLöt
, 
GLíum
, GLöt, c⁄° 
GLvoid
* *, GLint);

7291 
GLAPI
 
APIENTRY
 
glEdgeFœgPoöãrLi°IBM
 (
GLöt
, c⁄° 
GLboﬁón
* *, GLint);

7292 
GLAPI
 
APIENTRY
 
glFogCo‹dPoöãrLi°IBM
 (
GLíum
, 
GLöt
, c⁄° 
GLvoid
* *, GLint);

7293 
GLAPI
 
APIENTRY
 
glIndexPoöãrLi°IBM
 (
GLíum
, 
GLöt
, c⁄° 
GLvoid
* *, GLint);

7294 
GLAPI
 
APIENTRY
 
glN‹mÆPoöãrLi°IBM
 (
GLíum
, 
GLöt
, c⁄° 
GLvoid
* *, GLint);

7295 
GLAPI
 
APIENTRY
 
glTexCo‹dPoöãrLi°IBM
 (
GLöt
, 
GLíum
, GLöt, c⁄° 
GLvoid
* *, GLint);

7296 
GLAPI
 
APIENTRY
 
glVîãxPoöãrLi°IBM
 (
GLöt
, 
GLíum
, GLöt, c⁄° 
GLvoid
* *, GLint);

7298 (
APIENTRYP
 
	tPFNGLCOLORPOINTERLISTIBMPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, GLöà
	t°ride
, c⁄° 
	tGLvoid
* *
	tpoöãr
, GLöà
	t±r°ride
);

7299 (
APIENTRYP
 
	tPFNGLSECONDARYCOLORPOINTERLISTIBMPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, GLöà
	t°ride
, c⁄° 
	tGLvoid
* *
	tpoöãr
, GLöà
	t±r°ride
);

7300 (
APIENTRYP
 
	tPFNGLEDGEFLAGPOINTERLISTIBMPROC
Ë(
	tGLöt
 
	t°ride
, c⁄° 
	tGLboﬁón
* *
	tpoöãr
, GLöà
	t±r°ride
);

7301 (
APIENTRYP
 
	tPFNGLFOGCOORDPOINTERLISTIBMPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLöt
 
	t°ride
, c⁄° 
	tGLvoid
* *
	tpoöãr
, GLöà
	t±r°ride
);

7302 (
APIENTRYP
 
	tPFNGLINDEXPOINTERLISTIBMPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLöt
 
	t°ride
, c⁄° 
	tGLvoid
* *
	tpoöãr
, GLöà
	t±r°ride
);

7303 (
APIENTRYP
 
	tPFNGLNORMALPOINTERLISTIBMPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLöt
 
	t°ride
, c⁄° 
	tGLvoid
* *
	tpoöãr
, GLöà
	t±r°ride
);

7304 (
APIENTRYP
 
	tPFNGLTEXCOORDPOINTERLISTIBMPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, GLöà
	t°ride
, c⁄° 
	tGLvoid
* *
	tpoöãr
, GLöà
	t±r°ride
);

7305 (
APIENTRYP
 
	tPFNGLVERTEXPOINTERLISTIBMPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, GLöà
	t°ride
, c⁄° 
	tGLvoid
* *
	tpoöãr
, GLöà
	t±r°ride
);

7308 #i‚de‡
GL_SGIX_subßm∂e


7309 
	#GL_SGIX_subßm∂e
 1

	)

7312 #i‚de‡
GL_SGIX_y¸cba


7313 
	#GL_SGIX_y¸cba
 1

	)

7316 #i‚de‡
GL_SGIX_y¸cb_subßm∂e


7317 
	#GL_SGIX_y¸cb_subßm∂e
 1

	)

7320 #i‚de‡
GL_SGIX_dïth_∑ss_ö°rumít


7321 
	#GL_SGIX_dïth_∑ss_ö°rumít
 1

	)

7324 #i‚de‡
GL_3DFX_ãxtuª_com¥essi⁄_FXT1


7325 
	#GL_3DFX_ãxtuª_com¥essi⁄_FXT1
 1

	)

7328 #i‚de‡
GL_3DFX_mu…ißm∂e


7329 
	#GL_3DFX_mu…ißm∂e
 1

	)

7332 #i‚de‡
GL_3DFX_tbuf„r


7333 
	#GL_3DFX_tbuf„r
 1

	)

7334 #ifde‡
GL_GLEXT_PROTOTYPES


7335 
GLAPI
 
APIENTRY
 
glTbuf„rMask3DFX
 (
GLuöt
);

7337 (
APIENTRYP
 
	tPFNGLTBUFFERMASK3DFXPROC
Ë(
	tGLuöt
 
	tmask
);

7340 #i‚de‡
GL_EXT_mu…ißm∂e


7341 
	#GL_EXT_mu…ißm∂e
 1

	)

7342 #ifde‡
GL_GLEXT_PROTOTYPES


7343 
GLAPI
 
APIENTRY
 
glSam∂eMaskEXT
 (
GL˛ampf
, 
GLboﬁón
);

7344 
GLAPI
 
APIENTRY
 
glSam∂eP©ã∫EXT
 (
GLíum
);

7346 (
APIENTRYP
 
	tPFNGLSAMPLEMASKEXTPROC
Ë(
	tGL˛ampf
 
	tvÆue
, 
	tGLboﬁón
 
	tövît
);

7347 (
APIENTRYP
 
	tPFNGLSAMPLEPATTERNEXTPROC
Ë(
	tGLíum
 
	t∑âîn
);

7350 #i‚de‡
GL_SGIX_vîãx_¥e˛ù


7351 
	#GL_SGIX_vîãx_¥e˛ù
 1

	)

7354 #i‚de‡
GL_SGIX_c⁄vﬁuti⁄_accuøcy


7355 
	#GL_SGIX_c⁄vﬁuti⁄_accuøcy
 1

	)

7358 #i‚de‡
GL_SGIX_ªßm∂e


7359 
	#GL_SGIX_ªßm∂e
 1

	)

7362 #i‚de‡
GL_SGIS_poöt_löe_ãxgí


7363 
	#GL_SGIS_poöt_löe_ãxgí
 1

	)

7366 #i‚de‡
GL_SGIS_ãxtuª_cﬁ‹_mask


7367 
	#GL_SGIS_ãxtuª_cﬁ‹_mask
 1

	)

7368 #ifde‡
GL_GLEXT_PROTOTYPES


7369 
GLAPI
 
APIENTRY
 
glTextuªCﬁ‹MaskSGIS
 (
GLboﬁón
, GLboolean, GLboolean, GLboolean);

7371 (
APIENTRYP
 
	tPFNGLTEXTURECOLORMASKSGISPROC
Ë(
	tGLboﬁón
 
	tªd
, GLboﬁó¿
	tgªí
, GLboﬁó¿
	tblue
, GLboﬁó¿
	tÆpha
);

7374 #i‚de‡
GL_SGIX_igloo_öãrÁ˚


7375 
	#GL_SGIX_igloo_öãrÁ˚
 1

	)

7376 #ifde‡
GL_GLEXT_PROTOTYPES


7377 
GLAPI
 
APIENTRY
 
glIglooI¡îÁ˚SGIX
 (
GLíum
, c⁄° 
GLvoid
 *);

7379 (
APIENTRYP
 
	tPFNGLIGLOOINTERFACESGIXPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLvoid
 *
	t∑øms
);

7382 #i‚de‡
GL_EXT_ãxtuª_ív_dŸ3


7383 
	#GL_EXT_ãxtuª_ív_dŸ3
 1

	)

7386 #i‚de‡
GL_ATI_ãxtuª_múr‹_⁄˚


7387 
	#GL_ATI_ãxtuª_múr‹_⁄˚
 1

	)

7390 #i‚de‡
GL_NV_„n˚


7391 
	#GL_NV_„n˚
 1

	)

7392 #ifde‡
GL_GLEXT_PROTOTYPES


7393 
GLAPI
 
APIENTRY
 
glDñëeFí˚sNV
 (
GLsizei
, c⁄° 
GLuöt
 *);

7394 
GLAPI
 
APIENTRY
 
glGíFí˚sNV
 (
GLsizei
, 
GLuöt
 *);

7395 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsFí˚NV
 (
GLuöt
);

7396 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glTe°Fí˚NV
 (
GLuöt
);

7397 
GLAPI
 
APIENTRY
 
glGëFí˚ivNV
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7398 
GLAPI
 
APIENTRY
 
glFöishFí˚NV
 (
GLuöt
);

7399 
GLAPI
 
APIENTRY
 
glSëFí˚NV
 (
GLuöt
, 
GLíum
);

7401 (
APIENTRYP
 
	tPFNGLDELETEFENCESNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t„n˚s
);

7402 (
APIENTRYP
 
	tPFNGLGENFENCESNVPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	t„n˚s
);

7403 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISFENCENVPROC
Ë(
	tGLuöt
 
	t„n˚
);

7404 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLTESTFENCENVPROC
Ë(
	tGLuöt
 
	t„n˚
);

7405 (
APIENTRYP
 
	tPFNGLGETFENCEIVNVPROC
Ë(
	tGLuöt
 
	t„n˚
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7406 (
APIENTRYP
 
	tPFNGLFINISHFENCENVPROC
Ë(
	tGLuöt
 
	t„n˚
);

7407 (
APIENTRYP
 
	tPFNGLSETFENCENVPROC
Ë(
	tGLuöt
 
	t„n˚
, 
	tGLíum
 
	tc⁄dôi⁄
);

7410 #i‚de‡
GL_NV_evÆu©‹s


7411 
	#GL_NV_evÆu©‹s
 1

	)

7412 #ifde‡
GL_GLEXT_PROTOTYPES


7413 
GLAPI
 
APIENTRY
 
glM≠C⁄åﬁPoötsNV
 (
GLíum
, 
GLuöt
, GLíum, 
GLsizei
, GLsizei, 
GLöt
, GLöt, 
GLboﬁón
, c⁄° 
GLvoid
 *);

7414 
GLAPI
 
APIENTRY
 
glM≠P¨amëîivNV
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

7415 
GLAPI
 
APIENTRY
 
glM≠P¨amëîfvNV
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

7416 
GLAPI
 
APIENTRY
 
glGëM≠C⁄åﬁPoötsNV
 (
GLíum
, 
GLuöt
, GLíum, 
GLsizei
, GLsizei, 
GLboﬁón
, 
GLvoid
 *);

7417 
GLAPI
 
APIENTRY
 
glGëM≠P¨amëîivNV
 (
GLíum
, GLíum, 
GLöt
 *);

7418 
GLAPI
 
APIENTRY
 
glGëM≠P¨amëîfvNV
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

7419 
GLAPI
 
APIENTRY
 
glGëM≠AâribP¨amëîivNV
 (
GLíum
, 
GLuöt
, GLíum, 
GLöt
 *);

7420 
GLAPI
 
APIENTRY
 
glGëM≠AâribP¨amëîfvNV
 (
GLíum
, 
GLuöt
, GLíum, 
GLÊﬂt
 *);

7421 
GLAPI
 
APIENTRY
 
glEvÆM≠sNV
 (
GLíum
, GLenum);

7423 (
APIENTRYP
 
	tPFNGLMAPCONTROLPOINTSNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	tty≥
, 
	tGLsizei
 
	tu°ride
, GLsizeò
	tv°ride
, 
	tGLöt
 
	tu‹dî
, GLöà
	tv‹dî
, 
	tGLboﬁón
 
	t∑cked
, c⁄° 
	tGLvoid
 *
	tpoöts
);

7424 (
APIENTRYP
 
	tPFNGLMAPPARAMETERIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

7425 (
APIENTRYP
 
	tPFNGLMAPPARAMETERFVNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

7426 (
APIENTRYP
 
	tPFNGLGETMAPCONTROLPOINTSNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	tty≥
, 
	tGLsizei
 
	tu°ride
, GLsizeò
	tv°ride
, 
	tGLboﬁón
 
	t∑cked
, 
	tGLvoid
 *
	tpoöts
);

7427 (
APIENTRYP
 
	tPFNGLGETMAPPARAMETERIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7428 (
APIENTRYP
 
	tPFNGLGETMAPPARAMETERFVNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7429 (
APIENTRYP
 
	tPFNGLGETMAPATTRIBPARAMETERIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7430 (
APIENTRYP
 
	tPFNGLGETMAPATTRIBPARAMETERFVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7431 (
APIENTRYP
 
	tPFNGLEVALMAPSNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tmode
);

7434 #i‚de‡
GL_NV_∑cked_dïth_°ícû


7435 
	#GL_NV_∑cked_dïth_°ícû
 1

	)

7438 #i‚de‡
GL_NV_ªgi°î_comböîs2


7439 
	#GL_NV_ªgi°î_comböîs2
 1

	)

7440 #ifde‡
GL_GLEXT_PROTOTYPES


7441 
GLAPI
 
APIENTRY
 
glComböîSègeP¨amëîfvNV
 (
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

7442 
GLAPI
 
APIENTRY
 
glGëComböîSègeP¨amëîfvNV
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

7444 (
APIENTRYP
 
	tPFNGLCOMBINERSTAGEPARAMETERFVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

7445 (
APIENTRYP
 
	tPFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC
Ë(
	tGLíum
 
	t°age
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7448 #i‚de‡
GL_NV_ãxtuª_com¥essi⁄_vtc


7449 
	#GL_NV_ãxtuª_com¥essi⁄_vtc
 1

	)

7452 #i‚de‡
GL_NV_ãxtuª_ª˘™gÀ


7453 
	#GL_NV_ãxtuª_ª˘™gÀ
 1

	)

7456 #i‚de‡
GL_NV_ãxtuª_shadî


7457 
	#GL_NV_ãxtuª_shadî
 1

	)

7460 #i‚de‡
GL_NV_ãxtuª_shadî2


7461 
	#GL_NV_ãxtuª_shadî2
 1

	)

7464 #i‚de‡
GL_NV_vîãx_¨øy_ønge2


7465 
	#GL_NV_vîãx_¨øy_ønge2
 1

	)

7468 #i‚de‡
GL_NV_vîãx_¥ogøm


7469 
	#GL_NV_vîãx_¥ogøm
 1

	)

7470 #ifde‡
GL_GLEXT_PROTOTYPES


7471 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glAªProgømsResidítNV
 (
GLsizei
, c⁄° 
GLuöt
 *, GLboolean *);

7472 
GLAPI
 
APIENTRY
 
glBödProgømNV
 (
GLíum
, 
GLuöt
);

7473 
GLAPI
 
APIENTRY
 
glDñëeProgømsNV
 (
GLsizei
, c⁄° 
GLuöt
 *);

7474 
GLAPI
 
APIENTRY
 
glExecuãProgømNV
 (
GLíum
, 
GLuöt
, c⁄° 
GLÊﬂt
 *);

7475 
GLAPI
 
APIENTRY
 
glGíProgømsNV
 (
GLsizei
, 
GLuöt
 *);

7476 
GLAPI
 
APIENTRY
 
glGëProgømP¨amëîdvNV
 (
GLíum
, 
GLuöt
, GLíum, 
GLdoubÀ
 *);

7477 
GLAPI
 
APIENTRY
 
glGëProgømP¨amëîfvNV
 (
GLíum
, 
GLuöt
, GLíum, 
GLÊﬂt
 *);

7478 
GLAPI
 
APIENTRY
 
glGëProgømivNV
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7479 
GLAPI
 
APIENTRY
 
glGëProgømSåögNV
 (
GLuöt
, 
GLíum
, 
GLubyã
 *);

7480 
GLAPI
 
APIENTRY
 
glGëTøckM©rixivNV
 (
GLíum
, 
GLuöt
, GLíum, 
GLöt
 *);

7481 
GLAPI
 
APIENTRY
 
glGëVîãxAâribdvNV
 (
GLuöt
, 
GLíum
, 
GLdoubÀ
 *);

7482 
GLAPI
 
APIENTRY
 
glGëVîãxAâribfvNV
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

7483 
GLAPI
 
APIENTRY
 
glGëVîãxAâribivNV
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7484 
GLAPI
 
APIENTRY
 
glGëVîãxAâribPoöãrvNV
 (
GLuöt
, 
GLíum
, 
GLvoid
* *);

7485 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsProgømNV
 (
GLuöt
);

7486 
GLAPI
 
APIENTRY
 
glLﬂdProgømNV
 (
GLíum
, 
GLuöt
, 
GLsizei
, c⁄° 
GLubyã
 *);

7487 
GLAPI
 
APIENTRY
 
glProgømP¨amëî4dNV
 (
GLíum
, 
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

7488 
GLAPI
 
APIENTRY
 
glProgømP¨amëî4dvNV
 (
GLíum
, 
GLuöt
, c⁄° 
GLdoubÀ
 *);

7489 
GLAPI
 
APIENTRY
 
glProgømP¨amëî4fNV
 (
GLíum
, 
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

7490 
GLAPI
 
APIENTRY
 
glProgømP¨amëî4fvNV
 (
GLíum
, 
GLuöt
, c⁄° 
GLÊﬂt
 *);

7491 
GLAPI
 
APIENTRY
 
glProgømP¨amëîs4dvNV
 (
GLíum
, 
GLuöt
, GLuöt, c⁄° 
GLdoubÀ
 *);

7492 
GLAPI
 
APIENTRY
 
glProgømP¨amëîs4fvNV
 (
GLíum
, 
GLuöt
, GLuöt, c⁄° 
GLÊﬂt
 *);

7493 
GLAPI
 
APIENTRY
 
glReque°ResidítProgømsNV
 (
GLsizei
, c⁄° 
GLuöt
 *);

7494 
GLAPI
 
APIENTRY
 
glTøckM©rixNV
 (
GLíum
, 
GLuöt
, GLenum, GLenum);

7495 
GLAPI
 
APIENTRY
 
glVîãxAâribPoöãrNV
 (
GLuöt
, 
GLöt
, 
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

7496 
GLAPI
 
APIENTRY
 
glVîãxAârib1dNV
 (
GLuöt
, 
GLdoubÀ
);

7497 
GLAPI
 
APIENTRY
 
glVîãxAârib1dvNV
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

7498 
GLAPI
 
APIENTRY
 
glVîãxAârib1fNV
 (
GLuöt
, 
GLÊﬂt
);

7499 
GLAPI
 
APIENTRY
 
glVîãxAârib1fvNV
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

7500 
GLAPI
 
APIENTRY
 
glVîãxAârib1sNV
 (
GLuöt
, 
GLsh‹t
);

7501 
GLAPI
 
APIENTRY
 
glVîãxAârib1svNV
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

7502 
GLAPI
 
APIENTRY
 
glVîãxAârib2dNV
 (
GLuöt
, 
GLdoubÀ
, GLdouble);

7503 
GLAPI
 
APIENTRY
 
glVîãxAârib2dvNV
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

7504 
GLAPI
 
APIENTRY
 
glVîãxAârib2fNV
 (
GLuöt
, 
GLÊﬂt
, GLfloat);

7505 
GLAPI
 
APIENTRY
 
glVîãxAârib2fvNV
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

7506 
GLAPI
 
APIENTRY
 
glVîãxAârib2sNV
 (
GLuöt
, 
GLsh‹t
, GLshort);

7507 
GLAPI
 
APIENTRY
 
glVîãxAârib2svNV
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

7508 
GLAPI
 
APIENTRY
 
glVîãxAârib3dNV
 (
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble);

7509 
GLAPI
 
APIENTRY
 
glVîãxAârib3dvNV
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

7510 
GLAPI
 
APIENTRY
 
glVîãxAârib3fNV
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat);

7511 
GLAPI
 
APIENTRY
 
glVîãxAârib3fvNV
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

7512 
GLAPI
 
APIENTRY
 
glVîãxAârib3sNV
 (
GLuöt
, 
GLsh‹t
, GLshort, GLshort);

7513 
GLAPI
 
APIENTRY
 
glVîãxAârib3svNV
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

7514 
GLAPI
 
APIENTRY
 
glVîãxAârib4dNV
 (
GLuöt
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

7515 
GLAPI
 
APIENTRY
 
glVîãxAârib4dvNV
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

7516 
GLAPI
 
APIENTRY
 
glVîãxAârib4fNV
 (
GLuöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

7517 
GLAPI
 
APIENTRY
 
glVîãxAârib4fvNV
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

7518 
GLAPI
 
APIENTRY
 
glVîãxAârib4sNV
 (
GLuöt
, 
GLsh‹t
, GLshort, GLshort, GLshort);

7519 
GLAPI
 
APIENTRY
 
glVîãxAârib4svNV
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

7520 
GLAPI
 
APIENTRY
 
glVîãxAârib4ubNV
 (
GLuöt
, 
GLubyã
, GLubyte, GLubyte, GLubyte);

7521 
GLAPI
 
APIENTRY
 
glVîãxAârib4ubvNV
 (
GLuöt
, c⁄° 
GLubyã
 *);

7522 
GLAPI
 
APIENTRY
 
glVîãxAâribs1dvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLdoubÀ
 *);

7523 
GLAPI
 
APIENTRY
 
glVîãxAâribs1fvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

7524 
GLAPI
 
APIENTRY
 
glVîãxAâribs1svNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLsh‹t
 *);

7525 
GLAPI
 
APIENTRY
 
glVîãxAâribs2dvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLdoubÀ
 *);

7526 
GLAPI
 
APIENTRY
 
glVîãxAâribs2fvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

7527 
GLAPI
 
APIENTRY
 
glVîãxAâribs2svNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLsh‹t
 *);

7528 
GLAPI
 
APIENTRY
 
glVîãxAâribs3dvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLdoubÀ
 *);

7529 
GLAPI
 
APIENTRY
 
glVîãxAâribs3fvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

7530 
GLAPI
 
APIENTRY
 
glVîãxAâribs3svNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLsh‹t
 *);

7531 
GLAPI
 
APIENTRY
 
glVîãxAâribs4dvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLdoubÀ
 *);

7532 
GLAPI
 
APIENTRY
 
glVîãxAâribs4fvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

7533 
GLAPI
 
APIENTRY
 
glVîãxAâribs4svNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLsh‹t
 *);

7534 
GLAPI
 
APIENTRY
 
glVîãxAâribs4ubvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLubyã
 *);

7536 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLAREPROGRAMSRESIDENTNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t¥ogøms
, 
	tGLboﬁón
 *
	tªsidí˚s
);

7537 (
APIENTRYP
 
	tPFNGLBINDPROGRAMNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
);

7538 (
APIENTRYP
 
	tPFNGLDELETEPROGRAMSNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t¥ogøms
);

7539 (
APIENTRYP
 
	tPFNGLEXECUTEPROGRAMNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

7540 (
APIENTRYP
 
	tPFNGLGENPROGRAMSNVPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	t¥ogøms
);

7541 (
APIENTRYP
 
	tPFNGLGETPROGRAMPARAMETERDVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	t≤ame
, 
	tGLdoubÀ
 *
	t∑øms
);

7542 (
APIENTRYP
 
	tPFNGLGETPROGRAMPARAMETERFVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7543 (
APIENTRYP
 
	tPFNGLGETPROGRAMIVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7544 (
APIENTRYP
 
	tPFNGLGETPROGRAMSTRINGNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLubyã
 *
	t¥ogøm
);

7545 (
APIENTRYP
 
	tPFNGLGETTRACKMATRIXIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	taddªss
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7546 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBDVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLdoubÀ
 *
	t∑øms
);

7547 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBFVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7548 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7549 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBPOINTERVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLvoid
* *
	tpoöãr
);

7550 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISPROGRAMNVPROC
Ë(
	tGLuöt
 
	tid
);

7551 (
APIENTRYP
 
	tPFNGLLOADPROGRAMNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 *
	t¥ogøm
);

7552 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETER4DNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

7553 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETER4DVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7554 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETER4FNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

7555 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETER4FVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7556 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETERS4DVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tcou¡
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7557 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETERS4FVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7558 (
APIENTRYP
 
	tPFNGLREQUESTRESIDENTPROGRAMSNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t¥ogøms
);

7559 (
APIENTRYP
 
	tPFNGLTRACKMATRIXNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	taddªss
, GLíum 
	tm©rix
, GLíum 
	tå™sf‹m
);

7560 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBPOINTERNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tfsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

7561 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
);

7562 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1DVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7563 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
);

7564 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1FVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7565 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
);

7566 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1SVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

7567 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

7568 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2DVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7569 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

7570 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2FVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7571 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

7572 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2SVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

7573 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

7574 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3DVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7575 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7576 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3FVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7577 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

7578 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3SVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

7579 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

7580 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4DVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7581 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

7582 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4FVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7583 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
, GLsh‹à
	tw
);

7584 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4SVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

7585 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UBNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLubyã
 
	tx
, GLubyã 
	ty
, GLubyã 
	tz
, GLubyã 
	tw
);

7586 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4UBVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 *
	tv
);

7587 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS1DVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7588 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS1FVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7589 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS1SVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLsh‹t
 *
	tv
);

7590 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS2DVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7591 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS2FVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7592 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS2SVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLsh‹t
 *
	tv
);

7593 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS3DVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7594 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS3FVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7595 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS3SVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLsh‹t
 *
	tv
);

7596 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS4DVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLdoubÀ
 *
	tv
);

7597 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS4FVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tv
);

7598 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS4SVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLsh‹t
 *
	tv
);

7599 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS4UBVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLubyã
 *
	tv
);

7602 #i‚de‡
GL_SGIX_ãxtuª_co‹dö©e_˛amp


7603 
	#GL_SGIX_ãxtuª_co‹dö©e_˛amp
 1

	)

7606 #i‚de‡
GL_SGIX_sˇÀbüs_höt


7607 
	#GL_SGIX_sˇÀbüs_höt
 1

	)

7610 #i‚de‡
GL_OML_öãæa˚


7611 
	#GL_OML_öãæa˚
 1

	)

7614 #i‚de‡
GL_OML_subßm∂e


7615 
	#GL_OML_subßm∂e
 1

	)

7618 #i‚de‡
GL_OML_ªßm∂e


7619 
	#GL_OML_ªßm∂e
 1

	)

7622 #i‚de‡
GL_NV_c›y_dïth_to_cﬁ‹


7623 
	#GL_NV_c›y_dïth_to_cﬁ‹
 1

	)

7626 #i‚de‡
GL_ATI_ívm≠_bumpm≠


7627 
	#GL_ATI_ívm≠_bumpm≠
 1

	)

7628 #ifde‡
GL_GLEXT_PROTOTYPES


7629 
GLAPI
 
APIENTRY
 
glTexBumpP¨amëîivATI
 (
GLíum
, c⁄° 
GLöt
 *);

7630 
GLAPI
 
APIENTRY
 
glTexBumpP¨amëîfvATI
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

7631 
GLAPI
 
APIENTRY
 
glGëTexBumpP¨amëîivATI
 (
GLíum
, 
GLöt
 *);

7632 
GLAPI
 
APIENTRY
 
glGëTexBumpP¨amëîfvATI
 (
GLíum
, 
GLÊﬂt
 *);

7634 (
APIENTRYP
 
	tPFNGLTEXBUMPPARAMETERIVATIPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øm
);

7635 (
APIENTRYP
 
	tPFNGLTEXBUMPPARAMETERFVATIPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øm
);

7636 (
APIENTRYP
 
	tPFNGLGETTEXBUMPPARAMETERIVATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øm
);

7637 (
APIENTRYP
 
	tPFNGLGETTEXBUMPPARAMETERFVATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øm
);

7640 #i‚de‡
GL_ATI_‰agmít_shadî


7641 
	#GL_ATI_‰agmít_shadî
 1

	)

7642 #ifde‡
GL_GLEXT_PROTOTYPES


7643 
GLAPI
 
GLuöt
 
APIENTRY
 
glGíFøgmítShadîsATI
 (GLuint);

7644 
GLAPI
 
APIENTRY
 
glBödFøgmítShadîATI
 (
GLuöt
);

7645 
GLAPI
 
APIENTRY
 
glDñëeFøgmítShadîATI
 (
GLuöt
);

7646 
GLAPI
 
APIENTRY
 
glBegöFøgmítShadîATI
 ();

7647 
GLAPI
 
APIENTRY
 
glEndFøgmítShadîATI
 ();

7648 
GLAPI
 
APIENTRY
 
glPassTexCo‹dATI
 (
GLuöt
, GLuöt, 
GLíum
);

7649 
GLAPI
 
APIENTRY
 
glSam∂eM≠ATI
 (
GLuöt
, GLuöt, 
GLíum
);

7650 
GLAPI
 
APIENTRY
 
glCﬁ‹FøgmítOp1ATI
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint, GLuint, GLuint);

7651 
GLAPI
 
APIENTRY
 
glCﬁ‹FøgmítOp2ATI
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);

7652 
GLAPI
 
APIENTRY
 
glCﬁ‹FøgmítOp3ATI
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);

7653 
GLAPI
 
APIENTRY
 
glAÕhaFøgmítOp1ATI
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint, GLuint);

7654 
GLAPI
 
APIENTRY
 
glAÕhaFøgmítOp2ATI
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);

7655 
GLAPI
 
APIENTRY
 
glAÕhaFøgmítOp3ATI
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);

7656 
GLAPI
 
APIENTRY
 
glSëFøgmítShadîC⁄°™tATI
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

7658 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLGENFRAGMENTSHADERSATIPROC
Ë(
	tGLuöt
 
	tønge
);

7659 (
APIENTRYP
 
	tPFNGLBINDFRAGMENTSHADERATIPROC
Ë(
	tGLuöt
 
	tid
);

7660 (
APIENTRYP
 
	tPFNGLDELETEFRAGMENTSHADERATIPROC
Ë(
	tGLuöt
 
	tid
);

7661 (
APIENTRYP
 
	tPFNGLBEGINFRAGMENTSHADERATIPROC
) ();

7662 (
APIENTRYP
 
	tPFNGLENDFRAGMENTSHADERATIPROC
) ();

7663 (
APIENTRYP
 
	tPFNGLPASSTEXCOORDATIPROC
Ë(
	tGLuöt
 
	td°
, GLuöà
	tco‹d
, 
	tGLíum
 
	tswizzÀ
);

7664 (
APIENTRYP
 
	tPFNGLSAMPLEMAPATIPROC
Ë(
	tGLuöt
 
	td°
, GLuöà
	töãΩ
, 
	tGLíum
 
	tswizzÀ
);

7665 (
APIENTRYP
 
	tPFNGLCOLORFRAGMENTOP1ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mask
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
);

7666 (
APIENTRYP
 
	tPFNGLCOLORFRAGMENTOP2ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mask
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
, GLuöà
	t¨g2
, GLuöà
	t¨g2Rï
, GLuöà
	t¨g2Mod
);

7667 (
APIENTRYP
 
	tPFNGLCOLORFRAGMENTOP3ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mask
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
, GLuöà
	t¨g2
, GLuöà
	t¨g2Rï
, GLuöà
	t¨g2Mod
, GLuöà
	t¨g3
, GLuöà
	t¨g3Rï
, GLuöà
	t¨g3Mod
);

7668 (
APIENTRYP
 
	tPFNGLALPHAFRAGMENTOP1ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
);

7669 (
APIENTRYP
 
	tPFNGLALPHAFRAGMENTOP2ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
, GLuöà
	t¨g2
, GLuöà
	t¨g2Rï
, GLuöà
	t¨g2Mod
);

7670 (
APIENTRYP
 
	tPFNGLALPHAFRAGMENTOP3ATIPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	td°
, GLuöà
	td°Mod
, GLuöà
	t¨g1
, GLuöà
	t¨g1Rï
, GLuöà
	t¨g1Mod
, GLuöà
	t¨g2
, GLuöà
	t¨g2Rï
, GLuöà
	t¨g2Mod
, GLuöà
	t¨g3
, GLuöà
	t¨g3Rï
, GLuöà
	t¨g3Mod
);

7671 (
APIENTRYP
 
	tPFNGLSETFRAGMENTSHADERCONSTANTATIPROC
Ë(
	tGLuöt
 
	td°
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

7674 #i‚de‡
GL_ATI_≤_åüngÀs


7675 
	#GL_ATI_≤_åüngÀs
 1

	)

7676 #ifde‡
GL_GLEXT_PROTOTYPES


7677 
GLAPI
 
APIENTRY
 
glPNTrüngÀsiATI
 (
GLíum
, 
GLöt
);

7678 
GLAPI
 
APIENTRY
 
glPNTrüngÀsfATI
 (
GLíum
, 
GLÊﬂt
);

7680 (
APIENTRYP
 
	tPFNGLPNTRIANGLESIATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

7681 (
APIENTRYP
 
	tPFNGLPNTRIANGLESFATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

7684 #i‚de‡
GL_ATI_vîãx_¨øy_obje˘


7685 
	#GL_ATI_vîãx_¨øy_obje˘
 1

	)

7686 #ifde‡
GL_GLEXT_PROTOTYPES


7687 
GLAPI
 
GLuöt
 
APIENTRY
 
glNewObje˘Buf„rATI
 (
GLsizei
, c⁄° 
GLvoid
 *, 
GLíum
);

7688 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsObje˘Buf„rATI
 (
GLuöt
);

7689 
GLAPI
 
APIENTRY
 
glUpd©eObje˘Buf„rATI
 (
GLuöt
, GLuöt, 
GLsizei
, c⁄° 
GLvoid
 *, 
GLíum
);

7690 
GLAPI
 
APIENTRY
 
glGëObje˘Buf„rfvATI
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

7691 
GLAPI
 
APIENTRY
 
glGëObje˘Buf„rivATI
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7692 
GLAPI
 
APIENTRY
 
glFªeObje˘Buf„rATI
 (
GLuöt
);

7693 
GLAPI
 
APIENTRY
 
glAºayObje˘ATI
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, 
GLuöt
, GLuint);

7694 
GLAPI
 
APIENTRY
 
glGëAºayObje˘fvATI
 (
GLíum
, GLíum, 
GLÊﬂt
 *);

7695 
GLAPI
 
APIENTRY
 
glGëAºayObje˘ivATI
 (
GLíum
, GLíum, 
GLöt
 *);

7696 
GLAPI
 
APIENTRY
 
glV¨ü¡AºayObje˘ATI
 (
GLuöt
, 
GLíum
, 
GLsizei
, GLuint, GLuint);

7697 
GLAPI
 
APIENTRY
 
glGëV¨ü¡AºayObje˘fvATI
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

7698 
GLAPI
 
APIENTRY
 
glGëV¨ü¡AºayObje˘ivATI
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7700 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLNEWOBJECTBUFFERATIPROC
Ë(
	tGLsizei
 
	tsize
, c⁄° 
	tGLvoid
 *
	tpoöãr
, 
	tGLíum
 
	tußge
);

7701 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISOBJECTBUFFERATIPROC
Ë(
	tGLuöt
 
	tbuf„r
);

7702 (
APIENTRYP
 
	tPFNGLUPDATEOBJECTBUFFERATIPROC
Ë(
	tGLuöt
 
	tbuf„r
, GLuöà
	toff£t
, 
	tGLsizei
 
	tsize
, c⁄° 
	tGLvoid
 *
	tpoöãr
, 
	tGLíum
 
	t¥e£rve
);

7703 (
APIENTRYP
 
	tPFNGLGETOBJECTBUFFERFVATIPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7704 (
APIENTRYP
 
	tPFNGLGETOBJECTBUFFERIVATIPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7705 (
APIENTRYP
 
	tPFNGLFREEOBJECTBUFFERATIPROC
Ë(
	tGLuöt
 
	tbuf„r
);

7706 (
APIENTRYP
 
	tPFNGLARRAYOBJECTATIPROC
Ë(
	tGLíum
 
	t¨øy
, 
	tGLöt
 
	tsize
, GLíum 
	tty≥
, 
	tGLsizei
 
	t°ride
, 
	tGLuöt
 
	tbuf„r
, GLuöà
	toff£t
);

7707 (
APIENTRYP
 
	tPFNGLGETARRAYOBJECTFVATIPROC
Ë(
	tGLíum
 
	t¨øy
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7708 (
APIENTRYP
 
	tPFNGLGETARRAYOBJECTIVATIPROC
Ë(
	tGLíum
 
	t¨øy
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7709 (
APIENTRYP
 
	tPFNGLVARIANTARRAYOBJECTATIPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, GLuöà
	tbuf„r
, GLuöà
	toff£t
);

7710 (
APIENTRYP
 
	tPFNGLGETVARIANTARRAYOBJECTFVATIPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

7711 (
APIENTRYP
 
	tPFNGLGETVARIANTARRAYOBJECTIVATIPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7714 #i‚de‡
GL_EXT_vîãx_shadî


7715 
	#GL_EXT_vîãx_shadî
 1

	)

7716 #ifde‡
GL_GLEXT_PROTOTYPES


7717 
GLAPI
 
APIENTRY
 
glBegöVîãxShadîEXT
 ();

7718 
GLAPI
 
APIENTRY
 
glEndVîãxShadîEXT
 ();

7719 
GLAPI
 
APIENTRY
 
glBödVîãxShadîEXT
 (
GLuöt
);

7720 
GLAPI
 
GLuöt
 
APIENTRY
 
glGíVîãxShadîsEXT
 (GLuint);

7721 
GLAPI
 
APIENTRY
 
glDñëeVîãxShadîEXT
 (
GLuöt
);

7722 
GLAPI
 
APIENTRY
 
glShadîOp1EXT
 (
GLíum
, 
GLuöt
, GLuint);

7723 
GLAPI
 
APIENTRY
 
glShadîOp2EXT
 (
GLíum
, 
GLuöt
, GLuint, GLuint);

7724 
GLAPI
 
APIENTRY
 
glShadîOp3EXT
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint);

7725 
GLAPI
 
APIENTRY
 
glSwizzÀEXT
 (
GLuöt
, GLuöt, 
GLíum
, GLenum, GLenum, GLenum);

7726 
GLAPI
 
APIENTRY
 
glWrôeMaskEXT
 (
GLuöt
, GLuöt, 
GLíum
, GLenum, GLenum, GLenum);

7727 
GLAPI
 
APIENTRY
 
glIn£πComp⁄ítEXT
 (
GLuöt
, GLuint, GLuint);

7728 
GLAPI
 
APIENTRY
 
glExåa˘Comp⁄ítEXT
 (
GLuöt
, GLuint, GLuint);

7729 
GLAPI
 
GLuöt
 
APIENTRY
 
glGíSymbﬁsEXT
 (
GLíum
, GLenum, GLenum, GLuint);

7730 
GLAPI
 
APIENTRY
 
glSëInv¨ü¡EXT
 (
GLuöt
, 
GLíum
, c⁄° 
GLvoid
 *);

7731 
GLAPI
 
APIENTRY
 
glSëLoˇlC⁄°™tEXT
 (
GLuöt
, 
GLíum
, c⁄° 
GLvoid
 *);

7732 
GLAPI
 
APIENTRY
 
glV¨ü¡bvEXT
 (
GLuöt
, c⁄° 
GLbyã
 *);

7733 
GLAPI
 
APIENTRY
 
glV¨ü¡svEXT
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

7734 
GLAPI
 
APIENTRY
 
glV¨ü¡ivEXT
 (
GLuöt
, c⁄° 
GLöt
 *);

7735 
GLAPI
 
APIENTRY
 
glV¨ü¡fvEXT
 (
GLuöt
, c⁄° 
GLÊﬂt
 *);

7736 
GLAPI
 
APIENTRY
 
glV¨ü¡dvEXT
 (
GLuöt
, c⁄° 
GLdoubÀ
 *);

7737 
GLAPI
 
APIENTRY
 
glV¨ü¡ubvEXT
 (
GLuöt
, c⁄° 
GLubyã
 *);

7738 
GLAPI
 
APIENTRY
 
glV¨ü¡usvEXT
 (
GLuöt
, c⁄° 
GLush‹t
 *);

7739 
GLAPI
 
APIENTRY
 
glV¨ü¡uivEXT
 (
GLuöt
, const GLuint *);

7740 
GLAPI
 
APIENTRY
 
glV¨ü¡PoöãrEXT
 (
GLuöt
, 
GLíum
, GLuöt, c⁄° 
GLvoid
 *);

7741 
GLAPI
 
APIENTRY
 
glE«bÀV¨ü¡Clõ¡SèãEXT
 (
GLuöt
);

7742 
GLAPI
 
APIENTRY
 
glDißbÀV¨ü¡Clõ¡SèãEXT
 (
GLuöt
);

7743 
GLAPI
 
GLuöt
 
APIENTRY
 
glBödLightP¨amëîEXT
 (
GLíum
, GLenum);

7744 
GLAPI
 
GLuöt
 
APIENTRY
 
glBödM©îülP¨amëîEXT
 (
GLíum
, GLenum);

7745 
GLAPI
 
GLuöt
 
APIENTRY
 
glBödTexGíP¨amëîEXT
 (
GLíum
, GLenum, GLenum);

7746 
GLAPI
 
GLuöt
 
APIENTRY
 
glBödTextuªUnôP¨amëîEXT
 (
GLíum
, GLenum);

7747 
GLAPI
 
GLuöt
 
APIENTRY
 
glBödP¨amëîEXT
 (
GLíum
);

7748 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsV¨ü¡E«bÀdEXT
 (
GLuöt
, 
GLíum
);

7749 
GLAPI
 
APIENTRY
 
glGëV¨ü¡BoﬁónvEXT
 (
GLuöt
, 
GLíum
, 
GLboﬁón
 *);

7750 
GLAPI
 
APIENTRY
 
glGëV¨ü¡I¡egîvEXT
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7751 
GLAPI
 
APIENTRY
 
glGëV¨ü¡FlﬂtvEXT
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

7752 
GLAPI
 
APIENTRY
 
glGëV¨ü¡PoöãrvEXT
 (
GLuöt
, 
GLíum
, 
GLvoid
* *);

7753 
GLAPI
 
APIENTRY
 
glGëInv¨ü¡BoﬁónvEXT
 (
GLuöt
, 
GLíum
, 
GLboﬁón
 *);

7754 
GLAPI
 
APIENTRY
 
glGëInv¨ü¡I¡egîvEXT
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7755 
GLAPI
 
APIENTRY
 
glGëInv¨ü¡FlﬂtvEXT
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

7756 
GLAPI
 
APIENTRY
 
glGëLoˇlC⁄°™tBoﬁónvEXT
 (
GLuöt
, 
GLíum
, 
GLboﬁón
 *);

7757 
GLAPI
 
APIENTRY
 
glGëLoˇlC⁄°™tI¡egîvEXT
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7758 
GLAPI
 
APIENTRY
 
glGëLoˇlC⁄°™tFlﬂtvEXT
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

7760 (
APIENTRYP
 
	tPFNGLBEGINVERTEXSHADEREXTPROC
) ();

7761 (
APIENTRYP
 
	tPFNGLENDVERTEXSHADEREXTPROC
) ();

7762 (
APIENTRYP
 
	tPFNGLBINDVERTEXSHADEREXTPROC
Ë(
	tGLuöt
 
	tid
);

7763 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLGENVERTEXSHADERSEXTPROC
Ë(
	tGLuöt
 
	tønge
);

7764 (
APIENTRYP
 
	tPFNGLDELETEVERTEXSHADEREXTPROC
Ë(
	tGLuöt
 
	tid
);

7765 (
APIENTRYP
 
	tPFNGLSHADEROP1EXTPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	tªs
, GLuöà
	t¨g1
);

7766 (
APIENTRYP
 
	tPFNGLSHADEROP2EXTPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	tªs
, GLuöà
	t¨g1
, GLuöà
	t¨g2
);

7767 (
APIENTRYP
 
	tPFNGLSHADEROP3EXTPROC
Ë(
	tGLíum
 
	t›
, 
	tGLuöt
 
	tªs
, GLuöà
	t¨g1
, GLuöà
	t¨g2
, GLuöà
	t¨g3
);

7768 (
APIENTRYP
 
	tPFNGLSWIZZLEEXTPROC
Ë(
	tGLuöt
 
	tªs
, GLuöà
	tö
, 
	tGLíum
 
	toutX
, GLíum 
	toutY
, GLíum 
	toutZ
, GLíum 
	toutW
);

7769 (
APIENTRYP
 
	tPFNGLWRITEMASKEXTPROC
Ë(
	tGLuöt
 
	tªs
, GLuöà
	tö
, 
	tGLíum
 
	toutX
, GLíum 
	toutY
, GLíum 
	toutZ
, GLíum 
	toutW
);

7770 (
APIENTRYP
 
	tPFNGLINSERTCOMPONENTEXTPROC
Ë(
	tGLuöt
 
	tªs
, GLuöà
	t§c
, GLuöà
	tnum
);

7771 (
APIENTRYP
 
	tPFNGLEXTRACTCOMPONENTEXTPROC
Ë(
	tGLuöt
 
	tªs
, GLuöà
	t§c
, GLuöà
	tnum
);

7772 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLGENSYMBOLSEXTPROC
Ë(
	tGLíum
 
	td©©y≥
, GLíum 
	t°‹agëy≥
, GLíum 
	tønge
, 
	tGLuöt
 
	tcomp⁄íts
);

7773 (
APIENTRYP
 
	tPFNGLSETINVARIANTEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
 *
	taddr
);

7774 (
APIENTRYP
 
	tPFNGLSETLOCALCONSTANTEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
 *
	taddr
);

7775 (
APIENTRYP
 
	tPFNGLVARIANTBVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLbyã
 *
	taddr
);

7776 (
APIENTRYP
 
	tPFNGLVARIANTSVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLsh‹t
 *
	taddr
);

7777 (
APIENTRYP
 
	tPFNGLVARIANTIVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLöt
 *
	taddr
);

7778 (
APIENTRYP
 
	tPFNGLVARIANTFVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLÊﬂt
 *
	taddr
);

7779 (
APIENTRYP
 
	tPFNGLVARIANTDVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLdoubÀ
 *
	taddr
);

7780 (
APIENTRYP
 
	tPFNGLVARIANTUBVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLubyã
 *
	taddr
);

7781 (
APIENTRYP
 
	tPFNGLVARIANTUSVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° 
	tGLush‹t
 *
	taddr
);

7782 (
APIENTRYP
 
	tPFNGLVARIANTUIVEXTPROC
Ë(
	tGLuöt
 
	tid
, c⁄° GLuöà*
	taddr
);

7783 (
APIENTRYP
 
	tPFNGLVARIANTPOINTEREXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tty≥
, GLuöà
	t°ride
, c⁄° 
	tGLvoid
 *
	taddr
);

7784 (
APIENTRYP
 
	tPFNGLENABLEVARIANTCLIENTSTATEEXTPROC
Ë(
	tGLuöt
 
	tid
);

7785 (
APIENTRYP
 
	tPFNGLDISABLEVARIANTCLIENTSTATEEXTPROC
Ë(
	tGLuöt
 
	tid
);

7786 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLBINDLIGHTPARAMETEREXTPROC
Ë(
	tGLíum
 
	tlight
, GLíum 
	tvÆue
);

7787 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLBINDMATERIALPARAMETEREXTPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tvÆue
);

7788 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLBINDTEXGENPARAMETEREXTPROC
Ë(
	tGLíum
 
	tunô
, GLíum 
	tco‹d
, GLíum 
	tvÆue
);

7789 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLBINDTEXTUREUNITPARAMETEREXTPROC
Ë(
	tGLíum
 
	tunô
, GLíum 
	tvÆue
);

7790 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLBINDPARAMETEREXTPROC
Ë(
	tGLíum
 
	tvÆue
);

7791 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISVARIANTENABLEDEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tˇp
);

7792 (
APIENTRYP
 
	tPFNGLGETVARIANTBOOLEANVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLboﬁón
 *
	td©a
);

7793 (
APIENTRYP
 
	tPFNGLGETVARIANTINTEGERVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLöt
 *
	td©a
);

7794 (
APIENTRYP
 
	tPFNGLGETVARIANTFLOATVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLÊﬂt
 *
	td©a
);

7795 (
APIENTRYP
 
	tPFNGLGETVARIANTPOINTERVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLvoid
* *
	td©a
);

7796 (
APIENTRYP
 
	tPFNGLGETINVARIANTBOOLEANVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLboﬁón
 *
	td©a
);

7797 (
APIENTRYP
 
	tPFNGLGETINVARIANTINTEGERVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLöt
 *
	td©a
);

7798 (
APIENTRYP
 
	tPFNGLGETINVARIANTFLOATVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLÊﬂt
 *
	td©a
);

7799 (
APIENTRYP
 
	tPFNGLGETLOCALCONSTANTBOOLEANVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLboﬁón
 *
	td©a
);

7800 (
APIENTRYP
 
	tPFNGLGETLOCALCONSTANTINTEGERVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLöt
 *
	td©a
);

7801 (
APIENTRYP
 
	tPFNGLGETLOCALCONSTANTFLOATVEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tvÆue
, 
	tGLÊﬂt
 *
	td©a
);

7804 #i‚de‡
GL_ATI_vîãx_°ªams


7805 
	#GL_ATI_vîãx_°ªams
 1

	)

7806 #ifde‡
GL_GLEXT_PROTOTYPES


7807 
GLAPI
 
APIENTRY
 
glVîãxSåóm1sATI
 (
GLíum
, 
GLsh‹t
);

7808 
GLAPI
 
APIENTRY
 
glVîãxSåóm1svATI
 (
GLíum
, c⁄° 
GLsh‹t
 *);

7809 
GLAPI
 
APIENTRY
 
glVîãxSåóm1iATI
 (
GLíum
, 
GLöt
);

7810 
GLAPI
 
APIENTRY
 
glVîãxSåóm1ivATI
 (
GLíum
, c⁄° 
GLöt
 *);

7811 
GLAPI
 
APIENTRY
 
glVîãxSåóm1fATI
 (
GLíum
, 
GLÊﬂt
);

7812 
GLAPI
 
APIENTRY
 
glVîãxSåóm1fvATI
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

7813 
GLAPI
 
APIENTRY
 
glVîãxSåóm1dATI
 (
GLíum
, 
GLdoubÀ
);

7814 
GLAPI
 
APIENTRY
 
glVîãxSåóm1dvATI
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

7815 
GLAPI
 
APIENTRY
 
glVîãxSåóm2sATI
 (
GLíum
, 
GLsh‹t
, GLshort);

7816 
GLAPI
 
APIENTRY
 
glVîãxSåóm2svATI
 (
GLíum
, c⁄° 
GLsh‹t
 *);

7817 
GLAPI
 
APIENTRY
 
glVîãxSåóm2iATI
 (
GLíum
, 
GLöt
, GLint);

7818 
GLAPI
 
APIENTRY
 
glVîãxSåóm2ivATI
 (
GLíum
, c⁄° 
GLöt
 *);

7819 
GLAPI
 
APIENTRY
 
glVîãxSåóm2fATI
 (
GLíum
, 
GLÊﬂt
, GLfloat);

7820 
GLAPI
 
APIENTRY
 
glVîãxSåóm2fvATI
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

7821 
GLAPI
 
APIENTRY
 
glVîãxSåóm2dATI
 (
GLíum
, 
GLdoubÀ
, GLdouble);

7822 
GLAPI
 
APIENTRY
 
glVîãxSåóm2dvATI
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

7823 
GLAPI
 
APIENTRY
 
glVîãxSåóm3sATI
 (
GLíum
, 
GLsh‹t
, GLshort, GLshort);

7824 
GLAPI
 
APIENTRY
 
glVîãxSåóm3svATI
 (
GLíum
, c⁄° 
GLsh‹t
 *);

7825 
GLAPI
 
APIENTRY
 
glVîãxSåóm3iATI
 (
GLíum
, 
GLöt
, GLint, GLint);

7826 
GLAPI
 
APIENTRY
 
glVîãxSåóm3ivATI
 (
GLíum
, c⁄° 
GLöt
 *);

7827 
GLAPI
 
APIENTRY
 
glVîãxSåóm3fATI
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat);

7828 
GLAPI
 
APIENTRY
 
glVîãxSåóm3fvATI
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

7829 
GLAPI
 
APIENTRY
 
glVîãxSåóm3dATI
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble);

7830 
GLAPI
 
APIENTRY
 
glVîãxSåóm3dvATI
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

7831 
GLAPI
 
APIENTRY
 
glVîãxSåóm4sATI
 (
GLíum
, 
GLsh‹t
, GLshort, GLshort, GLshort);

7832 
GLAPI
 
APIENTRY
 
glVîãxSåóm4svATI
 (
GLíum
, c⁄° 
GLsh‹t
 *);

7833 
GLAPI
 
APIENTRY
 
glVîãxSåóm4iATI
 (
GLíum
, 
GLöt
, GLint, GLint, GLint);

7834 
GLAPI
 
APIENTRY
 
glVîãxSåóm4ivATI
 (
GLíum
, c⁄° 
GLöt
 *);

7835 
GLAPI
 
APIENTRY
 
glVîãxSåóm4fATI
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

7836 
GLAPI
 
APIENTRY
 
glVîãxSåóm4fvATI
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

7837 
GLAPI
 
APIENTRY
 
glVîãxSåóm4dATI
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

7838 
GLAPI
 
APIENTRY
 
glVîãxSåóm4dvATI
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

7839 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3bATI
 (
GLíum
, 
GLbyã
, GLbyte, GLbyte);

7840 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3bvATI
 (
GLíum
, c⁄° 
GLbyã
 *);

7841 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3sATI
 (
GLíum
, 
GLsh‹t
, GLshort, GLshort);

7842 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3svATI
 (
GLíum
, c⁄° 
GLsh‹t
 *);

7843 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3iATI
 (
GLíum
, 
GLöt
, GLint, GLint);

7844 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3ivATI
 (
GLíum
, c⁄° 
GLöt
 *);

7845 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3fATI
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat);

7846 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3fvATI
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

7847 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3dATI
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble);

7848 
GLAPI
 
APIENTRY
 
glN‹mÆSåóm3dvATI
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

7849 
GLAPI
 
APIENTRY
 
glClõ¡A˘iveVîãxSåómATI
 (
GLíum
);

7850 
GLAPI
 
APIENTRY
 
glVîãxBÀndEnviATI
 (
GLíum
, 
GLöt
);

7851 
GLAPI
 
APIENTRY
 
glVîãxBÀndEnvfATI
 (
GLíum
, 
GLÊﬂt
);

7853 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1SATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLsh‹t
 
	tx
);

7854 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1SVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLsh‹t
 *
	tco‹ds
);

7855 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1IATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLöt
 
	tx
);

7856 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1IVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLöt
 *
	tco‹ds
);

7857 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1FATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLÊﬂt
 
	tx
);

7858 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1FVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLÊﬂt
 *
	tco‹ds
);

7859 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1DATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLdoubÀ
 
	tx
);

7860 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM1DVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLdoubÀ
 *
	tco‹ds
);

7861 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2SATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
);

7862 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2SVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLsh‹t
 *
	tco‹ds
);

7863 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2IATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLöt
 
	tx
, GLöà
	ty
);

7864 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2IVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLöt
 *
	tco‹ds
);

7865 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2FATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
);

7866 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2FVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLÊﬂt
 *
	tco‹ds
);

7867 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2DATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
);

7868 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM2DVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLdoubÀ
 *
	tco‹ds
);

7869 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3SATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
);

7870 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3SVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLsh‹t
 *
	tco‹ds
);

7871 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3IATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

7872 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3IVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLöt
 *
	tco‹ds
);

7873 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3FATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

7874 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3FVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLÊﬂt
 *
	tco‹ds
);

7875 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3DATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

7876 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM3DVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLdoubÀ
 *
	tco‹ds
);

7877 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4SATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLsh‹t
 
	tx
, GLsh‹à
	ty
, GLsh‹à
	tz
, GLsh‹à
	tw
);

7878 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4SVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLsh‹t
 *
	tco‹ds
);

7879 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4IATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

7880 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4IVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLöt
 *
	tco‹ds
);

7881 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4FATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

7882 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4FVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLÊﬂt
 *
	tco‹ds
);

7883 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4DATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

7884 (
APIENTRYP
 
	tPFNGLVERTEXSTREAM4DVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLdoubÀ
 *
	tco‹ds
);

7885 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3BATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLbyã
 
	tnx
, GLbyã 
	tny
, GLbyã 
	tnz
);

7886 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3BVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLbyã
 *
	tco‹ds
);

7887 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3SATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLsh‹t
 
	tnx
, GLsh‹à
	tny
, GLsh‹à
	tnz
);

7888 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3SVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLsh‹t
 *
	tco‹ds
);

7889 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3IATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLöt
 
	tnx
, GLöà
	tny
, GLöà
	tnz
);

7890 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3IVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLöt
 *
	tco‹ds
);

7891 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3FATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLÊﬂt
 
	tnx
, GLÊﬂà
	tny
, GLÊﬂà
	tnz
);

7892 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3FVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLÊﬂt
 *
	tco‹ds
);

7893 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3DATIPROC
Ë(
	tGLíum
 
	t°ªam
, 
	tGLdoubÀ
 
	tnx
, GLdoubÀ 
	tny
, GLdoubÀ 
	tnz
);

7894 (
APIENTRYP
 
	tPFNGLNORMALSTREAM3DVATIPROC
Ë(
	tGLíum
 
	t°ªam
, c⁄° 
	tGLdoubÀ
 *
	tco‹ds
);

7895 (
APIENTRYP
 
	tPFNGLCLIENTACTIVEVERTEXSTREAMATIPROC
Ë(
	tGLíum
 
	t°ªam
);

7896 (
APIENTRYP
 
	tPFNGLVERTEXBLENDENVIATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

7897 (
APIENTRYP
 
	tPFNGLVERTEXBLENDENVFATIPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

7900 #i‚de‡
GL_ATI_ñemít_¨øy


7901 
	#GL_ATI_ñemít_¨øy
 1

	)

7902 #ifde‡
GL_GLEXT_PROTOTYPES


7903 
GLAPI
 
APIENTRY
 
glEÀmítPoöãrATI
 (
GLíum
, c⁄° 
GLvoid
 *);

7904 
GLAPI
 
APIENTRY
 
glDøwEÀmítAºayATI
 (
GLíum
, 
GLsizei
);

7905 
GLAPI
 
APIENTRY
 
glDøwR™geEÀmítAºayATI
 (
GLíum
, 
GLuöt
, GLuöt, 
GLsizei
);

7907 (
APIENTRYP
 
	tPFNGLELEMENTPOINTERATIPROC
Ë(
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

7908 (
APIENTRYP
 
	tPFNGLDRAWELEMENTARRAYATIPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLsizei
 
	tcou¡
);

7909 (
APIENTRYP
 
	tPFNGLDRAWRANGEELEMENTARRAYATIPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, 
	tGLsizei
 
	tcou¡
);

7912 #i‚de‡
GL_SUN_mesh_¨øy


7913 
	#GL_SUN_mesh_¨øy
 1

	)

7914 #ifde‡
GL_GLEXT_PROTOTYPES


7915 
GLAPI
 
APIENTRY
 
glDøwMeshAºaysSUN
 (
GLíum
, 
GLöt
, 
GLsizei
, GLsizei);

7917 (
APIENTRYP
 
	tPFNGLDRAWMESHARRAYSSUNPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
, GLsizeò
	twidth
);

7920 #i‚de‡
GL_SUN_¶i˚_accum


7921 
	#GL_SUN_¶i˚_accum
 1

	)

7924 #i‚de‡
GL_NV_mu…ißm∂e_fûãr_höt


7925 
	#GL_NV_mu…ißm∂e_fûãr_höt
 1

	)

7928 #i‚de‡
GL_NV_dïth_˛amp


7929 
	#GL_NV_dïth_˛amp
 1

	)

7932 #i‚de‡
GL_NV_oc˛usi⁄_quîy


7933 
	#GL_NV_oc˛usi⁄_quîy
 1

	)

7934 #ifde‡
GL_GLEXT_PROTOTYPES


7935 
GLAPI
 
APIENTRY
 
glGíOc˛usi⁄QuîõsNV
 (
GLsizei
, 
GLuöt
 *);

7936 
GLAPI
 
APIENTRY
 
glDñëeOc˛usi⁄QuîõsNV
 (
GLsizei
, c⁄° 
GLuöt
 *);

7937 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsOc˛usi⁄QuîyNV
 (
GLuöt
);

7938 
GLAPI
 
APIENTRY
 
glBegöOc˛usi⁄QuîyNV
 (
GLuöt
);

7939 
GLAPI
 
APIENTRY
 
glEndOc˛usi⁄QuîyNV
 ();

7940 
GLAPI
 
APIENTRY
 
glGëOc˛usi⁄QuîyivNV
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

7941 
GLAPI
 
APIENTRY
 
glGëOc˛usi⁄QuîyuivNV
 (
GLuöt
, 
GLíum
, GLuint *);

7943 (
APIENTRYP
 
	tPFNGLGENOCCLUSIONQUERIESNVPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tids
);

7944 (
APIENTRYP
 
	tPFNGLDELETEOCCLUSIONQUERIESNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tids
);

7945 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISOCCLUSIONQUERYNVPROC
Ë(
	tGLuöt
 
	tid
);

7946 (
APIENTRYP
 
	tPFNGLBEGINOCCLUSIONQUERYNVPROC
Ë(
	tGLuöt
 
	tid
);

7947 (
APIENTRYP
 
	tPFNGLENDOCCLUSIONQUERYNVPROC
) ();

7948 (
APIENTRYP
 
	tPFNGLGETOCCLUSIONQUERYIVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

7949 (
APIENTRYP
 
	tPFNGLGETOCCLUSIONQUERYUIVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, GLuöà*
	t∑øms
);

7952 #i‚de‡
GL_NV_poöt_•rôe


7953 
	#GL_NV_poöt_•rôe
 1

	)

7954 #ifde‡
GL_GLEXT_PROTOTYPES


7955 
GLAPI
 
APIENTRY
 
glPoötP¨amëîiNV
 (
GLíum
, 
GLöt
);

7956 
GLAPI
 
APIENTRY
 
glPoötP¨amëîivNV
 (
GLíum
, c⁄° 
GLöt
 *);

7958 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERINVPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

7959 (
APIENTRYP
 
	tPFNGLPOINTPARAMETERIVNVPROC
Ë(
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

7962 #i‚de‡
GL_NV_ãxtuª_shadî3


7963 
	#GL_NV_ãxtuª_shadî3
 1

	)

7966 #i‚de‡
GL_NV_vîãx_¥ogøm1_1


7967 
	#GL_NV_vîãx_¥ogøm1_1
 1

	)

7970 #i‚de‡
GL_EXT_shadow_funcs


7971 
	#GL_EXT_shadow_funcs
 1

	)

7974 #i‚de‡
GL_EXT_°ícû_two_side


7975 
	#GL_EXT_°ícû_two_side
 1

	)

7976 #ifde‡
GL_GLEXT_PROTOTYPES


7977 
GLAPI
 
APIENTRY
 
glA˘iveSãncûFa˚EXT
 (
GLíum
);

7979 (
APIENTRYP
 
	tPFNGLACTIVESTENCILFACEEXTPROC
Ë(
	tGLíum
 
	tÁ˚
);

7982 #i‚de‡
GL_ATI_ãxt_‰agmít_shadî


7983 
	#GL_ATI_ãxt_‰agmít_shadî
 1

	)

7986 #i‚de‡
GL_APPLE_˛õ¡_°‹age


7987 
	#GL_APPLE_˛õ¡_°‹age
 1

	)

7990 #i‚de‡
GL_APPLE_ñemít_¨øy


7991 
	#GL_APPLE_ñemít_¨øy
 1

	)

7992 #ifde‡
GL_GLEXT_PROTOTYPES


7993 
GLAPI
 
APIENTRY
 
glEÀmítPoöãrAPPLE
 (
GLíum
, c⁄° 
GLvoid
 *);

7994 
GLAPI
 
APIENTRY
 
glDøwEÀmítAºayAPPLE
 (
GLíum
, 
GLöt
, 
GLsizei
);

7995 
GLAPI
 
APIENTRY
 
glDøwR™geEÀmítAºayAPPLE
 (
GLíum
, 
GLuöt
, GLuöt, 
GLöt
, 
GLsizei
);

7996 
GLAPI
 
APIENTRY
 
glMu…iDøwEÀmítAºayAPPLE
 (
GLíum
, c⁄° 
GLöt
 *, c⁄° 
GLsizei
 *, GLsizei);

7997 
GLAPI
 
APIENTRY
 
glMu…iDøwR™geEÀmítAºayAPPLE
 (
GLíum
, 
GLuöt
, GLuöt, c⁄° 
GLöt
 *, c⁄° 
GLsizei
 *, GLsizei);

7999 (
APIENTRYP
 
	tPFNGLELEMENTPOINTERAPPLEPROC
Ë(
	tGLíum
 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

8000 (
APIENTRYP
 
	tPFNGLDRAWELEMENTARRAYAPPLEPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
);

8001 (
APIENTRYP
 
	tPFNGLDRAWRANGEELEMENTARRAYAPPLEPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, 
	tGLöt
 
	tfú°
, 
	tGLsizei
 
	tcou¡
);

8002 (
APIENTRYP
 
	tPFNGLMULTIDRAWELEMENTARRAYAPPLEPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLöt
 *
	tfú°
, c⁄° 
	tGLsizei
 *
	tcou¡
, GLsizeò
	t¥imcou¡
);

8003 (
APIENTRYP
 
	tPFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	t°¨t
, GLuöà
	tíd
, c⁄° 
	tGLöt
 *
	tfú°
, c⁄° 
	tGLsizei
 *
	tcou¡
, GLsizeò
	t¥imcou¡
);

8006 #i‚de‡
GL_APPLE_„n˚


8007 
	#GL_APPLE_„n˚
 1

	)

8008 #ifde‡
GL_GLEXT_PROTOTYPES


8009 
GLAPI
 
APIENTRY
 
glGíFí˚sAPPLE
 (
GLsizei
, 
GLuöt
 *);

8010 
GLAPI
 
APIENTRY
 
glDñëeFí˚sAPPLE
 (
GLsizei
, c⁄° 
GLuöt
 *);

8011 
GLAPI
 
APIENTRY
 
glSëFí˚APPLE
 (
GLuöt
);

8012 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsFí˚APPLE
 (
GLuöt
);

8013 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glTe°Fí˚APPLE
 (
GLuöt
);

8014 
GLAPI
 
APIENTRY
 
glFöishFí˚APPLE
 (
GLuöt
);

8015 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glTe°Obje˘APPLE
 (
GLíum
, 
GLuöt
);

8016 
GLAPI
 
APIENTRY
 
glFöishObje˘APPLE
 (
GLíum
, 
GLöt
);

8018 (
APIENTRYP
 
	tPFNGLGENFENCESAPPLEPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	t„n˚s
);

8019 (
APIENTRYP
 
	tPFNGLDELETEFENCESAPPLEPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t„n˚s
);

8020 (
APIENTRYP
 
	tPFNGLSETFENCEAPPLEPROC
Ë(
	tGLuöt
 
	t„n˚
);

8021 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISFENCEAPPLEPROC
Ë(
	tGLuöt
 
	t„n˚
);

8022 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLTESTFENCEAPPLEPROC
Ë(
	tGLuöt
 
	t„n˚
);

8023 (
APIENTRYP
 
	tPFNGLFINISHFENCEAPPLEPROC
Ë(
	tGLuöt
 
	t„n˚
);

8024 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLTESTOBJECTAPPLEPROC
Ë(
	tGLíum
 
	tobje˘
, 
	tGLuöt
 
	t«me
);

8025 (
APIENTRYP
 
	tPFNGLFINISHOBJECTAPPLEPROC
Ë(
	tGLíum
 
	tobje˘
, 
	tGLöt
 
	t«me
);

8028 #i‚de‡
GL_APPLE_vîãx_¨øy_obje˘


8029 
	#GL_APPLE_vîãx_¨øy_obje˘
 1

	)

8030 #ifde‡
GL_GLEXT_PROTOTYPES


8031 
GLAPI
 
APIENTRY
 
glBödVîãxAºayAPPLE
 (
GLuöt
);

8032 
GLAPI
 
APIENTRY
 
glDñëeVîãxAºaysAPPLE
 (
GLsizei
, c⁄° 
GLuöt
 *);

8033 
GLAPI
 
APIENTRY
 
glGíVîãxAºaysAPPLE
 (
GLsizei
, 
GLuöt
 *);

8034 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsVîãxAºayAPPLE
 (
GLuöt
);

8036 (
APIENTRYP
 
	tPFNGLBINDVERTEXARRAYAPPLEPROC
Ë(
	tGLuöt
 
	t¨øy
);

8037 (
APIENTRYP
 
	tPFNGLDELETEVERTEXARRAYSAPPLEPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t¨øys
);

8038 (
APIENTRYP
 
	tPFNGLGENVERTEXARRAYSAPPLEPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	t¨øys
);

8039 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISVERTEXARRAYAPPLEPROC
Ë(
	tGLuöt
 
	t¨øy
);

8042 #i‚de‡
GL_APPLE_vîãx_¨øy_ønge


8043 
	#GL_APPLE_vîãx_¨øy_ønge
 1

	)

8044 #ifde‡
GL_GLEXT_PROTOTYPES


8045 
GLAPI
 
APIENTRY
 
glVîãxAºayR™geAPPLE
 (
GLsizei
, 
GLvoid
 *);

8046 
GLAPI
 
APIENTRY
 
glFlushVîãxAºayR™geAPPLE
 (
GLsizei
, 
GLvoid
 *);

8047 
GLAPI
 
APIENTRY
 
glVîãxAºayP¨amëîiAPPLE
 (
GLíum
, 
GLöt
);

8049 (
APIENTRYP
 
	tPFNGLVERTEXARRAYRANGEAPPLEPROC
Ë(
	tGLsizei
 
	tÀngth
, 
	tGLvoid
 *
	tpoöãr
);

8050 (
APIENTRYP
 
	tPFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC
Ë(
	tGLsizei
 
	tÀngth
, 
	tGLvoid
 *
	tpoöãr
);

8051 (
APIENTRYP
 
	tPFNGLVERTEXARRAYPARAMETERIAPPLEPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

8054 #i‚de‡
GL_APPLE_ycb¸_422


8055 
	#GL_APPLE_ycb¸_422
 1

	)

8058 #i‚de‡
GL_S3_s3tc


8059 
	#GL_S3_s3tc
 1

	)

8062 #i‚de‡
GL_ATI_døw_buf„rs


8063 
	#GL_ATI_døw_buf„rs
 1

	)

8064 #ifde‡
GL_GLEXT_PROTOTYPES


8065 
GLAPI
 
APIENTRY
 
glDøwBuf„rsATI
 (
GLsizei
, c⁄° 
GLíum
 *);

8067 (
APIENTRYP
 
	tPFNGLDRAWBUFFERSATIPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLíum
 *
	tbufs
);

8070 #i‚de‡
GL_ATI_pixñ_f‹m©_Êﬂt


8071 
	#GL_ATI_pixñ_f‹m©_Êﬂt
 1

	)

8077 #i‚de‡
GL_ATI_ãxtuª_ív_comböe3


8078 
	#GL_ATI_ãxtuª_ív_comböe3
 1

	)

8081 #i‚de‡
GL_ATI_ãxtuª_Êﬂt


8082 
	#GL_ATI_ãxtuª_Êﬂt
 1

	)

8085 #i‚de‡
GL_NV_Êﬂt_buf„r


8086 
	#GL_NV_Êﬂt_buf„r
 1

	)

8089 #i‚de‡
GL_NV_‰agmít_¥ogøm


8090 
	#GL_NV_‰agmít_¥ogøm
 1

	)

8092 #ifde‡
GL_GLEXT_PROTOTYPES


8093 
GLAPI
 
APIENTRY
 
glProgømNamedP¨amëî4fNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLubyã
 *, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

8094 
GLAPI
 
APIENTRY
 
glProgømNamedP¨amëî4dNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLubyã
 *, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

8095 
GLAPI
 
APIENTRY
 
glProgømNamedP¨amëî4fvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLubyã
 *, c⁄° 
GLÊﬂt
 *);

8096 
GLAPI
 
APIENTRY
 
glProgømNamedP¨amëî4dvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLubyã
 *, c⁄° 
GLdoubÀ
 *);

8097 
GLAPI
 
APIENTRY
 
glGëProgømNamedP¨amëîfvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLubyã
 *, 
GLÊﬂt
 *);

8098 
GLAPI
 
APIENTRY
 
glGëProgømNamedP¨amëîdvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLubyã
 *, 
GLdoubÀ
 *);

8100 (
APIENTRYP
 
	tPFNGLPROGRAMNAMEDPARAMETER4FNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 *
	t«me
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

8101 (
APIENTRYP
 
	tPFNGLPROGRAMNAMEDPARAMETER4DNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 *
	t«me
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

8102 (
APIENTRYP
 
	tPFNGLPROGRAMNAMEDPARAMETER4FVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 *
	t«me
, c⁄° 
	tGLÊﬂt
 *
	tv
);

8103 (
APIENTRYP
 
	tPFNGLPROGRAMNAMEDPARAMETER4DVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 *
	t«me
, c⁄° 
	tGLdoubÀ
 *
	tv
);

8104 (
APIENTRYP
 
	tPFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 *
	t«me
, 
	tGLÊﬂt
 *
	t∑øms
);

8105 (
APIENTRYP
 
	tPFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLubyã
 *
	t«me
, 
	tGLdoubÀ
 *
	t∑øms
);

8108 #i‚de‡
GL_NV_hÆf_Êﬂt


8109 
	#GL_NV_hÆf_Êﬂt
 1

	)

8110 #ifde‡
GL_GLEXT_PROTOTYPES


8111 
GLAPI
 
APIENTRY
 
glVîãx2hNV
 (
GLhÆfNV
, GLhalfNV);

8112 
GLAPI
 
APIENTRY
 
glVîãx2hvNV
 (c⁄° 
GLhÆfNV
 *);

8113 
GLAPI
 
APIENTRY
 
glVîãx3hNV
 (
GLhÆfNV
, GLhalfNV, GLhalfNV);

8114 
GLAPI
 
APIENTRY
 
glVîãx3hvNV
 (c⁄° 
GLhÆfNV
 *);

8115 
GLAPI
 
APIENTRY
 
glVîãx4hNV
 (
GLhÆfNV
, GLhalfNV, GLhalfNV, GLhalfNV);

8116 
GLAPI
 
APIENTRY
 
glVîãx4hvNV
 (c⁄° 
GLhÆfNV
 *);

8117 
GLAPI
 
APIENTRY
 
glN‹mÆ3hNV
 (
GLhÆfNV
, GLhalfNV, GLhalfNV);

8118 
GLAPI
 
APIENTRY
 
glN‹mÆ3hvNV
 (c⁄° 
GLhÆfNV
 *);

8119 
GLAPI
 
APIENTRY
 
glCﬁ‹3hNV
 (
GLhÆfNV
, GLhalfNV, GLhalfNV);

8120 
GLAPI
 
APIENTRY
 
glCﬁ‹3hvNV
 (c⁄° 
GLhÆfNV
 *);

8121 
GLAPI
 
APIENTRY
 
glCﬁ‹4hNV
 (
GLhÆfNV
, GLhalfNV, GLhalfNV, GLhalfNV);

8122 
GLAPI
 
APIENTRY
 
glCﬁ‹4hvNV
 (c⁄° 
GLhÆfNV
 *);

8123 
GLAPI
 
APIENTRY
 
glTexCo‹d1hNV
 (
GLhÆfNV
);

8124 
GLAPI
 
APIENTRY
 
glTexCo‹d1hvNV
 (c⁄° 
GLhÆfNV
 *);

8125 
GLAPI
 
APIENTRY
 
glTexCo‹d2hNV
 (
GLhÆfNV
, GLhalfNV);

8126 
GLAPI
 
APIENTRY
 
glTexCo‹d2hvNV
 (c⁄° 
GLhÆfNV
 *);

8127 
GLAPI
 
APIENTRY
 
glTexCo‹d3hNV
 (
GLhÆfNV
, GLhalfNV, GLhalfNV);

8128 
GLAPI
 
APIENTRY
 
glTexCo‹d3hvNV
 (c⁄° 
GLhÆfNV
 *);

8129 
GLAPI
 
APIENTRY
 
glTexCo‹d4hNV
 (
GLhÆfNV
, GLhalfNV, GLhalfNV, GLhalfNV);

8130 
GLAPI
 
APIENTRY
 
glTexCo‹d4hvNV
 (c⁄° 
GLhÆfNV
 *);

8131 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1hNV
 (
GLíum
, 
GLhÆfNV
);

8132 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d1hvNV
 (
GLíum
, c⁄° 
GLhÆfNV
 *);

8133 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2hNV
 (
GLíum
, 
GLhÆfNV
, GLhalfNV);

8134 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d2hvNV
 (
GLíum
, c⁄° 
GLhÆfNV
 *);

8135 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3hNV
 (
GLíum
, 
GLhÆfNV
, GLhalfNV, GLhalfNV);

8136 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d3hvNV
 (
GLíum
, c⁄° 
GLhÆfNV
 *);

8137 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4hNV
 (
GLíum
, 
GLhÆfNV
, GLhalfNV, GLhalfNV, GLhalfNV);

8138 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹d4hvNV
 (
GLíum
, c⁄° 
GLhÆfNV
 *);

8139 
GLAPI
 
APIENTRY
 
glFogCo‹dhNV
 (
GLhÆfNV
);

8140 
GLAPI
 
APIENTRY
 
glFogCo‹dhvNV
 (c⁄° 
GLhÆfNV
 *);

8141 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3hNV
 (
GLhÆfNV
, GLhalfNV, GLhalfNV);

8142 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹3hvNV
 (c⁄° 
GLhÆfNV
 *);

8143 
GLAPI
 
APIENTRY
 
glVîãxWeighthNV
 (
GLhÆfNV
);

8144 
GLAPI
 
APIENTRY
 
glVîãxWeighthvNV
 (c⁄° 
GLhÆfNV
 *);

8145 
GLAPI
 
APIENTRY
 
glVîãxAârib1hNV
 (
GLuöt
, 
GLhÆfNV
);

8146 
GLAPI
 
APIENTRY
 
glVîãxAârib1hvNV
 (
GLuöt
, c⁄° 
GLhÆfNV
 *);

8147 
GLAPI
 
APIENTRY
 
glVîãxAârib2hNV
 (
GLuöt
, 
GLhÆfNV
, GLhalfNV);

8148 
GLAPI
 
APIENTRY
 
glVîãxAârib2hvNV
 (
GLuöt
, c⁄° 
GLhÆfNV
 *);

8149 
GLAPI
 
APIENTRY
 
glVîãxAârib3hNV
 (
GLuöt
, 
GLhÆfNV
, GLhalfNV, GLhalfNV);

8150 
GLAPI
 
APIENTRY
 
glVîãxAârib3hvNV
 (
GLuöt
, c⁄° 
GLhÆfNV
 *);

8151 
GLAPI
 
APIENTRY
 
glVîãxAârib4hNV
 (
GLuöt
, 
GLhÆfNV
, GLhalfNV, GLhalfNV, GLhalfNV);

8152 
GLAPI
 
APIENTRY
 
glVîãxAârib4hvNV
 (
GLuöt
, c⁄° 
GLhÆfNV
 *);

8153 
GLAPI
 
APIENTRY
 
glVîãxAâribs1hvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLhÆfNV
 *);

8154 
GLAPI
 
APIENTRY
 
glVîãxAâribs2hvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLhÆfNV
 *);

8155 
GLAPI
 
APIENTRY
 
glVîãxAâribs3hvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLhÆfNV
 *);

8156 
GLAPI
 
APIENTRY
 
glVîãxAâribs4hvNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLhÆfNV
 *);

8158 (
APIENTRYP
 
	tPFNGLVERTEX2HNVPROC
Ë(
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
);

8159 (
APIENTRYP
 
	tPFNGLVERTEX2HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8160 (
APIENTRYP
 
	tPFNGLVERTEX3HNVPROC
Ë(
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
, GLhÆfNV 
	tz
);

8161 (
APIENTRYP
 
	tPFNGLVERTEX3HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8162 (
APIENTRYP
 
	tPFNGLVERTEX4HNVPROC
Ë(
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
, GLhÆfNV 
	tz
, GLhÆfNV 
	tw
);

8163 (
APIENTRYP
 
	tPFNGLVERTEX4HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8164 (
APIENTRYP
 
	tPFNGLNORMAL3HNVPROC
Ë(
	tGLhÆfNV
 
	tnx
, GLhÆfNV 
	tny
, GLhÆfNV 
	tnz
);

8165 (
APIENTRYP
 
	tPFNGLNORMAL3HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8166 (
APIENTRYP
 
	tPFNGLCOLOR3HNVPROC
Ë(
	tGLhÆfNV
 
	tªd
, GLhÆfNV 
	tgªí
, GLhÆfNV 
	tblue
);

8167 (
APIENTRYP
 
	tPFNGLCOLOR3HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8168 (
APIENTRYP
 
	tPFNGLCOLOR4HNVPROC
Ë(
	tGLhÆfNV
 
	tªd
, GLhÆfNV 
	tgªí
, GLhÆfNV 
	tblue
, GLhÆfNV 
	tÆpha
);

8169 (
APIENTRYP
 
	tPFNGLCOLOR4HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8170 (
APIENTRYP
 
	tPFNGLTEXCOORD1HNVPROC
Ë(
	tGLhÆfNV
 
	ts
);

8171 (
APIENTRYP
 
	tPFNGLTEXCOORD1HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8172 (
APIENTRYP
 
	tPFNGLTEXCOORD2HNVPROC
Ë(
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
);

8173 (
APIENTRYP
 
	tPFNGLTEXCOORD2HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8174 (
APIENTRYP
 
	tPFNGLTEXCOORD3HNVPROC
Ë(
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
, GLhÆfNV 
	tr
);

8175 (
APIENTRYP
 
	tPFNGLTEXCOORD3HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8176 (
APIENTRYP
 
	tPFNGLTEXCOORD4HNVPROC
Ë(
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
, GLhÆfNV 
	tr
, GLhÆfNV 
	tq
);

8177 (
APIENTRYP
 
	tPFNGLTEXCOORD4HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8178 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1HNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLhÆfNV
 
	ts
);

8179 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD1HVNVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8180 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2HNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
);

8181 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD2HVNVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8182 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3HNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
, GLhÆfNV 
	tr
);

8183 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD3HVNVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8184 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4HNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLhÆfNV
 
	ts
, GLhÆfNV 
	tt
, GLhÆfNV 
	tr
, GLhÆfNV 
	tq
);

8185 (
APIENTRYP
 
	tPFNGLMULTITEXCOORD4HVNVPROC
Ë(
	tGLíum
 
	tèrgë
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8186 (
APIENTRYP
 
	tPFNGLFOGCOORDHNVPROC
Ë(
	tGLhÆfNV
 
	tfog
);

8187 (
APIENTRYP
 
	tPFNGLFOGCOORDHVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tfog
);

8188 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3HNVPROC
Ë(
	tGLhÆfNV
 
	tªd
, GLhÆfNV 
	tgªí
, GLhÆfNV 
	tblue
);

8189 (
APIENTRYP
 
	tPFNGLSECONDARYCOLOR3HVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tv
);

8190 (
APIENTRYP
 
	tPFNGLVERTEXWEIGHTHNVPROC
Ë(
	tGLhÆfNV
 
	tweight
);

8191 (
APIENTRYP
 
	tPFNGLVERTEXWEIGHTHVNVPROC
Ë(c⁄° 
	tGLhÆfNV
 *
	tweight
);

8192 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1HNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLhÆfNV
 
	tx
);

8193 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB1HVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8194 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2HNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
);

8195 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB2HVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8196 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3HNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
, GLhÆfNV 
	tz
);

8197 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB3HVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8198 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4HNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLhÆfNV
 
	tx
, GLhÆfNV 
	ty
, GLhÆfNV 
	tz
, GLhÆfNV 
	tw
);

8199 (
APIENTRYP
 
	tPFNGLVERTEXATTRIB4HVNVPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8200 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS1HVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8201 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS2HVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8202 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS3HVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8203 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBS4HVNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLhÆfNV
 *
	tv
);

8206 #i‚de‡
GL_NV_pixñ_d©a_ønge


8207 
	#GL_NV_pixñ_d©a_ønge
 1

	)

8208 #ifde‡
GL_GLEXT_PROTOTYPES


8209 
GLAPI
 
APIENTRY
 
glPixñD©aR™geNV
 (
GLíum
, 
GLsizei
, 
GLvoid
 *);

8210 
GLAPI
 
APIENTRY
 
glFlushPixñD©aR™geNV
 (
GLíum
);

8212 (
APIENTRYP
 
	tPFNGLPIXELDATARANGENVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tÀngth
, 
	tGLvoid
 *
	tpoöãr
);

8213 (
APIENTRYP
 
	tPFNGLFLUSHPIXELDATARANGENVPROC
Ë(
	tGLíum
 
	tèrgë
);

8216 #i‚de‡
GL_NV_¥imôive_ª°¨t


8217 
	#GL_NV_¥imôive_ª°¨t
 1

	)

8218 #ifde‡
GL_GLEXT_PROTOTYPES


8219 
GLAPI
 
APIENTRY
 
glPrimôiveRe°¨tNV
 ();

8220 
GLAPI
 
APIENTRY
 
glPrimôiveRe°¨tIndexNV
 (
GLuöt
);

8222 (
APIENTRYP
 
	tPFNGLPRIMITIVERESTARTNVPROC
) ();

8223 (
APIENTRYP
 
	tPFNGLPRIMITIVERESTARTINDEXNVPROC
Ë(
	tGLuöt
 
	tödex
);

8226 #i‚de‡
GL_NV_ãxtuª_ex∑nd_n‹mÆ


8227 
	#GL_NV_ãxtuª_ex∑nd_n‹mÆ
 1

	)

8230 #i‚de‡
GL_NV_vîãx_¥ogøm2


8231 
	#GL_NV_vîãx_¥ogøm2
 1

	)

8234 #i‚de‡
GL_ATI_m≠_obje˘_buf„r


8235 
	#GL_ATI_m≠_obje˘_buf„r
 1

	)

8236 #ifde‡
GL_GLEXT_PROTOTYPES


8237 
GLAPI
 
GLvoid
* 
APIENTRY
 
glM≠Obje˘Buf„rATI
 (
GLuöt
);

8238 
GLAPI
 
APIENTRY
 
glUnm≠Obje˘Buf„rATI
 (
GLuöt
);

8240 
	gGLvoid
* (
	tAPIENTRYP
 
	tPFNGLMAPOBJECTBUFFERATIPROC
Ë(
	tGLuöt
 
	tbuf„r
);

8241 (
APIENTRYP
 
	tPFNGLUNMAPOBJECTBUFFERATIPROC
Ë(
	tGLuöt
 
	tbuf„r
);

8244 #i‚de‡
GL_ATI_£∑øã_°ícû


8245 
	#GL_ATI_£∑øã_°ícû
 1

	)

8246 #ifde‡
GL_GLEXT_PROTOTYPES


8247 
GLAPI
 
APIENTRY
 
glSãncûOpSï¨©eATI
 (
GLíum
, GLenum, GLenum, GLenum);

8248 
GLAPI
 
APIENTRY
 
glSãncûFuncSï¨©eATI
 (
GLíum
, GLíum, 
GLöt
, 
GLuöt
);

8250 (
APIENTRYP
 
	tPFNGLSTENCILOPSEPARATEATIPROC
Ë(
	tGLíum
 
	tÁ˚
, GLíum 
	tsÁû
, GLíum 
	tdpÁû
, GLíum 
	tdµass
);

8251 (
APIENTRYP
 
	tPFNGLSTENCILFUNCSEPARATEATIPROC
Ë(
	tGLíum
 
	t‰⁄tfunc
, GLíum 
	tbackfunc
, 
	tGLöt
 
	tªf
, 
	tGLuöt
 
	tmask
);

8254 #i‚de‡
GL_ATI_vîãx_©åib_¨øy_obje˘


8255 
	#GL_ATI_vîãx_©åib_¨øy_obje˘
 1

	)

8256 #ifde‡
GL_GLEXT_PROTOTYPES


8257 
GLAPI
 
APIENTRY
 
glVîãxAâribAºayObje˘ATI
 (
GLuöt
, 
GLöt
, 
GLíum
, 
GLboﬁón
, 
GLsizei
, GLuint, GLuint);

8258 
GLAPI
 
APIENTRY
 
glGëVîãxAâribAºayObje˘fvATI
 (
GLuöt
, 
GLíum
, 
GLÊﬂt
 *);

8259 
GLAPI
 
APIENTRY
 
glGëVîãxAâribAºayObje˘ivATI
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

8261 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBARRAYOBJECTATIPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLboﬁón
 
	tn‹mÆized
, 
	tGLsizei
 
	t°ride
, GLuöà
	tbuf„r
, GLuöà
	toff£t
);

8262 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

8263 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

8266 #i‚de‡
GL_OES_ªad_f‹m©


8267 
	#GL_OES_ªad_f‹m©
 1

	)

8270 #i‚de‡
GL_EXT_dïth_bounds_ã°


8271 
	#GL_EXT_dïth_bounds_ã°
 1

	)

8272 #ifde‡
GL_GLEXT_PROTOTYPES


8273 
GLAPI
 
APIENTRY
 
glDïthBoundsEXT
 (
GL˛ampd
, GLclampd);

8275 (
APIENTRYP
 
	tPFNGLDEPTHBOUNDSEXTPROC
Ë(
	tGL˛ampd
 
	tzmö
, GL˛ampd 
	tzmax
);

8278 #i‚de‡
GL_EXT_ãxtuª_múr‹_˛amp


8279 
	#GL_EXT_ãxtuª_múr‹_˛amp
 1

	)

8282 #i‚de‡
GL_EXT_bÀnd_equ©i⁄_£∑øã


8283 
	#GL_EXT_bÀnd_equ©i⁄_£∑øã
 1

	)

8284 #ifde‡
GL_GLEXT_PROTOTYPES


8285 
GLAPI
 
APIENTRY
 
glBÀndEqu©i⁄Sï¨©eEXT
 (
GLíum
, GLenum);

8287 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONSEPARATEEXTPROC
Ë(
	tGLíum
 
	tmodeRGB
, GLíum 
	tmodeAÕha
);

8290 #i‚de‡
GL_MESA_∑ck_övît


8291 
	#GL_MESA_∑ck_övît
 1

	)

8294 #i‚de‡
GL_MESA_ycb¸_ãxtuª


8295 
	#GL_MESA_ycb¸_ãxtuª
 1

	)

8298 #i‚de‡
GL_EXT_pixñ_buf„r_obje˘


8299 
	#GL_EXT_pixñ_buf„r_obje˘
 1

	)

8302 #i‚de‡
GL_NV_‰agmít_¥ogøm_›ti⁄


8303 
	#GL_NV_‰agmít_¥ogøm_›ti⁄
 1

	)

8306 #i‚de‡
GL_NV_‰agmít_¥ogøm2


8307 
	#GL_NV_‰agmít_¥ogøm2
 1

	)

8310 #i‚de‡
GL_NV_vîãx_¥ogøm2_›ti⁄


8311 
	#GL_NV_vîãx_¥ogøm2_›ti⁄
 1

	)

8314 #i‚de‡
GL_NV_vîãx_¥ogøm3


8315 
	#GL_NV_vîãx_¥ogøm3
 1

	)

8318 #i‚de‡
GL_EXT_‰amebuf„r_obje˘


8319 
	#GL_EXT_‰amebuf„r_obje˘
 1

	)

8320 #ifde‡
GL_GLEXT_PROTOTYPES


8321 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsRídîbuf„rEXT
 (
GLuöt
);

8322 
GLAPI
 
APIENTRY
 
glBödRídîbuf„rEXT
 (
GLíum
, 
GLuöt
);

8323 
GLAPI
 
APIENTRY
 
glDñëeRídîbuf„rsEXT
 (
GLsizei
, c⁄° 
GLuöt
 *);

8324 
GLAPI
 
APIENTRY
 
glGíRídîbuf„rsEXT
 (
GLsizei
, 
GLuöt
 *);

8325 
GLAPI
 
APIENTRY
 
glRídîbuf„rSt‹ageEXT
 (
GLíum
, GLíum, 
GLsizei
, GLsizei);

8326 
GLAPI
 
APIENTRY
 
glGëRídîbuf„rP¨amëîivEXT
 (
GLíum
, GLíum, 
GLöt
 *);

8327 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsFømebuf„rEXT
 (
GLuöt
);

8328 
GLAPI
 
APIENTRY
 
glBödFømebuf„rEXT
 (
GLíum
, 
GLuöt
);

8329 
GLAPI
 
APIENTRY
 
glDñëeFømebuf„rsEXT
 (
GLsizei
, c⁄° 
GLuöt
 *);

8330 
GLAPI
 
APIENTRY
 
glGíFømebuf„rsEXT
 (
GLsizei
, 
GLuöt
 *);

8331 
GLAPI
 
GLíum
 
APIENTRY
 
glCheckFømebuf„rSètusEXT
 (GLenum);

8332 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuª1DEXT
 (
GLíum
, GLíum, GLíum, 
GLuöt
, 
GLöt
);

8333 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuª2DEXT
 (
GLíum
, GLíum, GLíum, 
GLuöt
, 
GLöt
);

8334 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuª3DEXT
 (
GLíum
, GLíum, GLíum, 
GLuöt
, 
GLöt
, GLint);

8335 
GLAPI
 
APIENTRY
 
glFømebuf„rRídîbuf„rEXT
 (
GLíum
, GLíum, GLíum, 
GLuöt
);

8336 
GLAPI
 
APIENTRY
 
glGëFømebuf„rAâachmítP¨amëîivEXT
 (
GLíum
, GLíum, GLíum, 
GLöt
 *);

8337 
GLAPI
 
APIENTRY
 
glGíî©eMùm≠EXT
 (
GLíum
);

8339 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISRENDERBUFFEREXTPROC
Ë(
	tGLuöt
 
	tªndîbuf„r
);

8340 (
APIENTRYP
 
	tPFNGLBINDRENDERBUFFEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tªndîbuf„r
);

8341 (
APIENTRYP
 
	tPFNGLDELETERENDERBUFFERSEXTPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tªndîbuf„rs
);

8342 (
APIENTRYP
 
	tPFNGLGENRENDERBUFFERSEXTPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tªndîbuf„rs
);

8343 (
APIENTRYP
 
	tPFNGLRENDERBUFFERSTORAGEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

8344 (
APIENTRYP
 
	tPFNGLGETRENDERBUFFERPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

8345 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISFRAMEBUFFEREXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
);

8346 (
APIENTRYP
 
	tPFNGLBINDFRAMEBUFFEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	t‰amebuf„r
);

8347 (
APIENTRYP
 
	tPFNGLDELETEFRAMEBUFFERSEXTPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	t‰amebuf„rs
);

8348 (
APIENTRYP
 
	tPFNGLGENFRAMEBUFFERSEXTPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	t‰amebuf„rs
);

8349 
GLíum
 (
	tAPIENTRYP
 
	tPFNGLCHECKFRAMEBUFFERSTATUSEXTPROC
Ë(
	tGLíum
 
	tèrgë
);

8350 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURE1DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tãxèrgë
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

8351 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURE2DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tãxèrgë
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

8352 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURE3DEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tãxèrgë
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tzoff£t
);

8353 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERRENDERBUFFEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	tªndîbuf„π¨gë
, 
	tGLuöt
 
	tªndîbuf„r
);

8354 (
APIENTRYP
 
	tPFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

8355 (
APIENTRYP
 
	tPFNGLGENERATEMIPMAPEXTPROC
Ë(
	tGLíum
 
	tèrgë
);

8358 #i‚de‡
GL_GREMEDY_°rög_m¨kî


8359 
	#GL_GREMEDY_°rög_m¨kî
 1

	)

8360 #ifde‡
GL_GLEXT_PROTOTYPES


8361 
GLAPI
 
APIENTRY
 
glSåögM¨kîGREMEDY
 (
GLsizei
, c⁄° 
GLvoid
 *);

8363 (
APIENTRYP
 
	tPFNGLSTRINGMARKERGREMEDYPROC
Ë(
	tGLsizei
 
	tÀn
, c⁄° 
	tGLvoid
 *
	t°rög
);

8366 #i‚de‡
GL_EXT_∑cked_dïth_°ícû


8367 
	#GL_EXT_∑cked_dïth_°ícû
 1

	)

8370 #i‚de‡
GL_EXT_°ícû_˛ór_èg


8371 
	#GL_EXT_°ícû_˛ór_èg
 1

	)

8372 #ifde‡
GL_GLEXT_PROTOTYPES


8373 
GLAPI
 
APIENTRY
 
glSãncûCÀ¨TagEXT
 (
GLsizei
, 
GLuöt
);

8375 (
APIENTRYP
 
	tPFNGLSTENCILCLEARTAGEXTPROC
Ë(
	tGLsizei
 
	t°ícûTagBôs
, 
	tGLuöt
 
	t°ícûCÀ¨Tag
);

8378 #i‚de‡
GL_EXT_ãxtuª_sRGB


8379 
	#GL_EXT_ãxtuª_sRGB
 1

	)

8382 #i‚de‡
GL_EXT_‰amebuf„r_blô


8383 
	#GL_EXT_‰amebuf„r_blô
 1

	)

8384 #ifde‡
GL_GLEXT_PROTOTYPES


8385 
GLAPI
 
APIENTRY
 
glBlôFømebuf„rEXT
 (
GLöt
, GLöt, GLöt, GLöt, GLöt, GLöt, GLöt, GLöt, 
GLbôfõld
, 
GLíum
);

8387 (
APIENTRYP
 
	tPFNGLBLITFRAMEBUFFEREXTPROC
Ë(
	tGLöt
 
	t§cX0
, GLöà
	t§cY0
, GLöà
	t§cX1
, GLöà
	t§cY1
, GLöà
	td°X0
, GLöà
	td°Y0
, GLöà
	td°X1
, GLöà
	td°Y1
, 
	tGLbôfõld
 
	tmask
, 
	tGLíum
 
	tfûãr
);

8390 #i‚de‡
GL_EXT_‰amebuf„r_mu…ißm∂e


8391 
	#GL_EXT_‰amebuf„r_mu…ißm∂e
 1

	)

8392 #ifde‡
GL_GLEXT_PROTOTYPES


8393 
GLAPI
 
APIENTRY
 
glRídîbuf„rSt‹ageMu…ißm∂eEXT
 (
GLíum
, 
GLsizei
, GLenum, GLsizei, GLsizei);

8395 (
APIENTRYP
 
	tPFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tßm∂es
, GLíum 
	töã∫Æf‹m©
, GLsizeò
	twidth
, GLsizeò
	theight
);

8398 #i‚de‡
GL_MESAX_ãxtuª_°ack


8399 
	#GL_MESAX_ãxtuª_°ack
 1

	)

8402 #i‚de‡
GL_EXT_timî_quîy


8403 
	#GL_EXT_timî_quîy
 1

	)

8404 #ifde‡
GL_GLEXT_PROTOTYPES


8405 
GLAPI
 
APIENTRY
 
glGëQuîyObje˘i64vEXT
 (
GLuöt
, 
GLíum
, 
GLöt64EXT
 *);

8406 
GLAPI
 
APIENTRY
 
glGëQuîyObje˘ui64vEXT
 (
GLuöt
, 
GLíum
, 
GLuöt64EXT
 *);

8408 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTI64VEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLöt64EXT
 *
	t∑øms
);

8409 (
APIENTRYP
 
	tPFNGLGETQUERYOBJECTUI64VEXTPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	t≤ame
, 
	tGLuöt64EXT
 *
	t∑øms
);

8412 #i‚de‡
GL_EXT_gpu_¥ogøm_∑ømëîs


8413 
	#GL_EXT_gpu_¥ogøm_∑ømëîs
 1

	)

8414 #ifde‡
GL_GLEXT_PROTOTYPES


8415 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëîs4fvEXT
 (
GLíum
, 
GLuöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

8416 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëîs4fvEXT
 (
GLíum
, 
GLuöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

8418 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERS4FVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

8419 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

8422 #i‚de‡
GL_APPLE_Êush_buf„r_ønge


8423 
	#GL_APPLE_Êush_buf„r_ønge
 1

	)

8424 #ifde‡
GL_GLEXT_PROTOTYPES


8425 
GLAPI
 
APIENTRY
 
glBuf„rP¨amëîiAPPLE
 (
GLíum
, GLíum, 
GLöt
);

8426 
GLAPI
 
APIENTRY
 
glFlushM≠≥dBuf„rR™geAPPLE
 (
GLíum
, 
GLöçå
, 
GLsizeùå
);

8428 (
APIENTRYP
 
	tPFNGLBUFFERPARAMETERIAPPLEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

8429 (
APIENTRYP
 
	tPFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
);

8432 #i‚de‡
GL_NV_gpu_¥ogøm4


8433 
	#GL_NV_gpu_¥ogøm4
 1

	)

8434 #ifde‡
GL_GLEXT_PROTOTYPES


8435 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëîI4iNV
 (
GLíum
, 
GLuöt
, 
GLöt
, GLint, GLint, GLint);

8436 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëîI4ivNV
 (
GLíum
, 
GLuöt
, c⁄° 
GLöt
 *);

8437 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëîsI4ivNV
 (
GLíum
, 
GLuöt
, 
GLsizei
, c⁄° 
GLöt
 *);

8438 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëîI4uiNV
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint, GLuint);

8439 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëîI4uivNV
 (
GLíum
, 
GLuöt
, const GLuint *);

8440 
GLAPI
 
APIENTRY
 
glProgømLoˇlP¨amëîsI4uivNV
 (
GLíum
, 
GLuöt
, 
GLsizei
, const GLuint *);

8441 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëîI4iNV
 (
GLíum
, 
GLuöt
, 
GLöt
, GLint, GLint, GLint);

8442 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëîI4ivNV
 (
GLíum
, 
GLuöt
, c⁄° 
GLöt
 *);

8443 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëîsI4ivNV
 (
GLíum
, 
GLuöt
, 
GLsizei
, c⁄° 
GLöt
 *);

8444 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëîI4uiNV
 (
GLíum
, 
GLuöt
, GLuint, GLuint, GLuint, GLuint);

8445 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëîI4uivNV
 (
GLíum
, 
GLuöt
, const GLuint *);

8446 
GLAPI
 
APIENTRY
 
glProgømEnvP¨amëîsI4uivNV
 (
GLíum
, 
GLuöt
, 
GLsizei
, const GLuint *);

8447 
GLAPI
 
APIENTRY
 
glGëProgømLoˇlP¨amëîIivNV
 (
GLíum
, 
GLuöt
, 
GLöt
 *);

8448 
GLAPI
 
APIENTRY
 
glGëProgømLoˇlP¨amëîIuivNV
 (
GLíum
, 
GLuöt
, GLuint *);

8449 
GLAPI
 
APIENTRY
 
glGëProgømEnvP¨amëîIivNV
 (
GLíum
, 
GLuöt
, 
GLöt
 *);

8450 
GLAPI
 
APIENTRY
 
glGëProgømEnvP¨amëîIuivNV
 (
GLíum
, 
GLuöt
, GLuint *);

8452 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERI4INVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

8453 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERI4IVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	t∑øms
);

8454 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLöt
 *
	t∑øms
);

8455 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERI4UINVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
, GLuöà
	tw
);

8456 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	t∑øms
);

8457 (
APIENTRYP
 
	tPFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà*
	t∑øms
);

8458 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERI4INVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

8459 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERI4IVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	t∑øms
);

8460 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERSI4IVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLöt
 *
	t∑øms
);

8461 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERI4UINVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
, GLuöà
	tw
);

8462 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERI4UIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	t∑øms
);

8463 (
APIENTRYP
 
	tPFNGLPROGRAMENVPARAMETERSI4UIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà*
	t∑øms
);

8464 (
APIENTRYP
 
	tPFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 *
	t∑øms
);

8465 (
APIENTRYP
 
	tPFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà*
	t∑øms
);

8466 (
APIENTRYP
 
	tPFNGLGETPROGRAMENVPARAMETERIIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 *
	t∑øms
);

8467 (
APIENTRYP
 
	tPFNGLGETPROGRAMENVPARAMETERIUIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà*
	t∑øms
);

8470 #i‚de‡
GL_NV_geomëry_¥ogøm4


8471 
	#GL_NV_geomëry_¥ogøm4
 1

	)

8472 #ifde‡
GL_GLEXT_PROTOTYPES


8473 
GLAPI
 
APIENTRY
 
glProgømVîãxLimôNV
 (
GLíum
, 
GLöt
);

8474 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuªEXT
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
);

8475 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuªLayîEXT
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
, GLint);

8476 
GLAPI
 
APIENTRY
 
glFømebuf„rTextuªFa˚EXT
 (
GLíum
, GLíum, 
GLuöt
, 
GLöt
, GLenum);

8478 (
APIENTRYP
 
	tPFNGLPROGRAMVERTEXLIMITNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tlimô
);

8479 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTUREEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

8480 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tœyî
);

8481 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERTEXTUREFACEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t©èchmít
, 
	tGLuöt
 
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLíum 
	tÁ˚
);

8484 #i‚de‡
GL_EXT_geomëry_shadî4


8485 
	#GL_EXT_geomëry_shadî4
 1

	)

8486 #ifde‡
GL_GLEXT_PROTOTYPES


8487 
GLAPI
 
APIENTRY
 
glProgømP¨amëîiEXT
 (
GLuöt
, 
GLíum
, 
GLöt
);

8489 (
APIENTRYP
 
	tPFNGLPROGRAMPARAMETERIEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 
	tvÆue
);

8492 #i‚de‡
GL_NV_vîãx_¥ogøm4


8493 
	#GL_NV_vîãx_¥ogøm4
 1

	)

8494 #ifde‡
GL_GLEXT_PROTOTYPES


8495 
GLAPI
 
APIENTRY
 
glVîãxAâribI1iEXT
 (
GLuöt
, 
GLöt
);

8496 
GLAPI
 
APIENTRY
 
glVîãxAâribI2iEXT
 (
GLuöt
, 
GLöt
, GLint);

8497 
GLAPI
 
APIENTRY
 
glVîãxAâribI3iEXT
 (
GLuöt
, 
GLöt
, GLint, GLint);

8498 
GLAPI
 
APIENTRY
 
glVîãxAâribI4iEXT
 (
GLuöt
, 
GLöt
, GLint, GLint, GLint);

8499 
GLAPI
 
APIENTRY
 
glVîãxAâribI1uiEXT
 (
GLuöt
, GLuint);

8500 
GLAPI
 
APIENTRY
 
glVîãxAâribI2uiEXT
 (
GLuöt
, GLuint, GLuint);

8501 
GLAPI
 
APIENTRY
 
glVîãxAâribI3uiEXT
 (
GLuöt
, GLuint, GLuint, GLuint);

8502 
GLAPI
 
APIENTRY
 
glVîãxAâribI4uiEXT
 (
GLuöt
, GLuint, GLuint, GLuint, GLuint);

8503 
GLAPI
 
APIENTRY
 
glVîãxAâribI1ivEXT
 (
GLuöt
, c⁄° 
GLöt
 *);

8504 
GLAPI
 
APIENTRY
 
glVîãxAâribI2ivEXT
 (
GLuöt
, c⁄° 
GLöt
 *);

8505 
GLAPI
 
APIENTRY
 
glVîãxAâribI3ivEXT
 (
GLuöt
, c⁄° 
GLöt
 *);

8506 
GLAPI
 
APIENTRY
 
glVîãxAâribI4ivEXT
 (
GLuöt
, c⁄° 
GLöt
 *);

8507 
GLAPI
 
APIENTRY
 
glVîãxAâribI1uivEXT
 (
GLuöt
, const GLuint *);

8508 
GLAPI
 
APIENTRY
 
glVîãxAâribI2uivEXT
 (
GLuöt
, const GLuint *);

8509 
GLAPI
 
APIENTRY
 
glVîãxAâribI3uivEXT
 (
GLuöt
, const GLuint *);

8510 
GLAPI
 
APIENTRY
 
glVîãxAâribI4uivEXT
 (
GLuöt
, const GLuint *);

8511 
GLAPI
 
APIENTRY
 
glVîãxAâribI4bvEXT
 (
GLuöt
, c⁄° 
GLbyã
 *);

8512 
GLAPI
 
APIENTRY
 
glVîãxAâribI4svEXT
 (
GLuöt
, c⁄° 
GLsh‹t
 *);

8513 
GLAPI
 
APIENTRY
 
glVîãxAâribI4ubvEXT
 (
GLuöt
, c⁄° 
GLubyã
 *);

8514 
GLAPI
 
APIENTRY
 
glVîãxAâribI4usvEXT
 (
GLuöt
, c⁄° 
GLush‹t
 *);

8515 
GLAPI
 
APIENTRY
 
glVîãxAâribIPoöãrEXT
 (
GLuöt
, 
GLöt
, 
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

8516 
GLAPI
 
APIENTRY
 
glGëVîãxAâribIivEXT
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

8517 
GLAPI
 
APIENTRY
 
glGëVîãxAâribIuivEXT
 (
GLuöt
, 
GLíum
, GLuint *);

8519 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1IEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
);

8520 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2IEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
);

8521 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3IEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
);

8522 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4IEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

8523 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1UIEXTPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
);

8524 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2UIEXTPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
);

8525 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3UIEXTPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
);

8526 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4UIEXTPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
, GLuöà
	tw
);

8527 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1IVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

8528 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2IVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

8529 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3IVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

8530 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4IVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLöt
 *
	tv
);

8531 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI1UIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

8532 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI2UIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

8533 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI3UIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

8534 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4UIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° GLuöà*
	tv
);

8535 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4BVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLbyã
 *
	tv
);

8536 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4SVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLsh‹t
 *
	tv
);

8537 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4UBVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLubyã
 *
	tv
);

8538 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBI4USVEXTPROC
Ë(
	tGLuöt
 
	tödex
, c⁄° 
	tGLush‹t
 *
	tv
);

8539 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBIPOINTEREXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

8540 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

8541 (
APIENTRYP
 
	tPFNGLGETVERTEXATTRIBIUIVEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
, GLuöà*
	t∑øms
);

8544 #i‚de‡
GL_EXT_gpu_shadî4


8545 
	#GL_EXT_gpu_shadî4
 1

	)

8546 #ifde‡
GL_GLEXT_PROTOTYPES


8547 
GLAPI
 
APIENTRY
 
glGëUnif‹muivEXT
 (
GLuöt
, 
GLöt
, GLuint *);

8548 
GLAPI
 
APIENTRY
 
glBödFøgD©aLoˇti⁄EXT
 (
GLuöt
, GLuöt, c⁄° 
GLch¨
 *);

8549 
GLAPI
 
GLöt
 
APIENTRY
 
glGëFøgD©aLoˇti⁄EXT
 (
GLuöt
, c⁄° 
GLch¨
 *);

8550 
GLAPI
 
APIENTRY
 
glUnif‹m1uiEXT
 (
GLöt
, 
GLuöt
);

8551 
GLAPI
 
APIENTRY
 
glUnif‹m2uiEXT
 (
GLöt
, 
GLuöt
, GLuint);

8552 
GLAPI
 
APIENTRY
 
glUnif‹m3uiEXT
 (
GLöt
, 
GLuöt
, GLuint, GLuint);

8553 
GLAPI
 
APIENTRY
 
glUnif‹m4uiEXT
 (
GLöt
, 
GLuöt
, GLuint, GLuint, GLuint);

8554 
GLAPI
 
APIENTRY
 
glUnif‹m1uivEXT
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt
 *);

8555 
GLAPI
 
APIENTRY
 
glUnif‹m2uivEXT
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt
 *);

8556 
GLAPI
 
APIENTRY
 
glUnif‹m3uivEXT
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt
 *);

8557 
GLAPI
 
APIENTRY
 
glUnif‹m4uivEXT
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt
 *);

8559 (
APIENTRYP
 
	tPFNGLGETUNIFORMUIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLuöà*
	t∑øms
);

8560 (
APIENTRYP
 
	tPFNGLBINDFRAGDATALOCATIONEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tcﬁ‹
, c⁄° 
	tGLch¨
 *
	t«me
);

8561 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETFRAGDATALOCATIONEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 *
	t«me
);

8562 (
APIENTRYP
 
	tPFNGLUNIFORM1UIEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
);

8563 (
APIENTRYP
 
	tPFNGLUNIFORM2UIEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
, GLuöà
	tv1
);

8564 (
APIENTRYP
 
	tPFNGLUNIFORM3UIEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
, GLuöà
	tv1
, GLuöà
	tv2
);

8565 (
APIENTRYP
 
	tPFNGLUNIFORM4UIEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt
 
	tv0
, GLuöà
	tv1
, GLuöà
	tv2
, GLuöà
	tv3
);

8566 (
APIENTRYP
 
	tPFNGLUNIFORM1UIVEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 *
	tvÆue
);

8567 (
APIENTRYP
 
	tPFNGLUNIFORM2UIVEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 *
	tvÆue
);

8568 (
APIENTRYP
 
	tPFNGLUNIFORM3UIVEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 *
	tvÆue
);

8569 (
APIENTRYP
 
	tPFNGLUNIFORM4UIVEXTPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt
 *
	tvÆue
);

8572 #i‚de‡
GL_EXT_døw_ö°™˚d


8573 
	#GL_EXT_døw_ö°™˚d
 1

	)

8574 #ifde‡
GL_GLEXT_PROTOTYPES


8575 
GLAPI
 
APIENTRY
 
glDøwAºaysIn°™˚dEXT
 (
GLíum
, 
GLöt
, 
GLsizei
, GLsizei);

8576 
GLAPI
 
APIENTRY
 
glDøwEÀmítsIn°™˚dEXT
 (
GLíum
, 
GLsizei
, GLíum, c⁄° 
GLvoid
 *, GLsizei);

8578 (
APIENTRYP
 
	tPFNGLDRAWARRAYSINSTANCEDEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLöt
 
	t°¨t
, 
	tGLsizei
 
	tcou¡
, GLsizeò
	t¥imcou¡
);

8579 (
APIENTRYP
 
	tPFNGLDRAWELEMENTSINSTANCEDEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLsizei
 
	tcou¡
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tödi˚s
, GLsizeò
	t¥imcou¡
);

8582 #i‚de‡
GL_EXT_∑cked_Êﬂt


8583 
	#GL_EXT_∑cked_Êﬂt
 1

	)

8586 #i‚de‡
GL_EXT_ãxtuª_¨øy


8587 
	#GL_EXT_ãxtuª_¨øy
 1

	)

8590 #i‚de‡
GL_EXT_ãxtuª_buf„r_obje˘


8591 
	#GL_EXT_ãxtuª_buf„r_obje˘
 1

	)

8592 #ifde‡
GL_GLEXT_PROTOTYPES


8593 
GLAPI
 
APIENTRY
 
glTexBuf„rEXT
 (
GLíum
, GLíum, 
GLuöt
);

8595 (
APIENTRYP
 
	tPFNGLTEXBUFFEREXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLuöt
 
	tbuf„r
);

8598 #i‚de‡
GL_EXT_ãxtuª_com¥essi⁄_œtc


8599 
	#GL_EXT_ãxtuª_com¥essi⁄_œtc
 1

	)

8602 #i‚de‡
GL_EXT_ãxtuª_com¥essi⁄_rgtc


8603 
	#GL_EXT_ãxtuª_com¥essi⁄_rgtc
 1

	)

8606 #i‚de‡
GL_EXT_ãxtuª_sh¨ed_exp⁄ít


8607 
	#GL_EXT_ãxtuª_sh¨ed_exp⁄ít
 1

	)

8610 #i‚de‡
GL_NV_dïth_buf„r_Êﬂt


8611 
	#GL_NV_dïth_buf„r_Êﬂt
 1

	)

8612 #ifde‡
GL_GLEXT_PROTOTYPES


8613 
GLAPI
 
APIENTRY
 
glDïthR™gedNV
 (
GLdoubÀ
, GLdouble);

8614 
GLAPI
 
APIENTRY
 
glCÀ¨DïthdNV
 (
GLdoubÀ
);

8615 
GLAPI
 
APIENTRY
 
glDïthBoundsdNV
 (
GLdoubÀ
, GLdouble);

8617 (
APIENTRYP
 
	tPFNGLDEPTHRANGEDNVPROC
Ë(
	tGLdoubÀ
 
	tzNór
, GLdoubÀ 
	tzF¨
);

8618 (
APIENTRYP
 
	tPFNGLCLEARDEPTHDNVPROC
Ë(
	tGLdoubÀ
 
	tdïth
);

8619 (
APIENTRYP
 
	tPFNGLDEPTHBOUNDSDNVPROC
Ë(
	tGLdoubÀ
 
	tzmö
, GLdoubÀ 
	tzmax
);

8622 #i‚de‡
GL_NV_‰agmít_¥ogøm4


8623 
	#GL_NV_‰agmít_¥ogøm4
 1

	)

8626 #i‚de‡
GL_NV_‰amebuf„r_mu…ißm∂e_covîage


8627 
	#GL_NV_‰amebuf„r_mu…ißm∂e_covîage
 1

	)

8628 #ifde‡
GL_GLEXT_PROTOTYPES


8629 
GLAPI
 
APIENTRY
 
glRídîbuf„rSt‹ageMu…ißm∂eCovîageNV
 (
GLíum
, 
GLsizei
, GLsizei, GLenum, GLsizei, GLsizei);

8631 (
APIENTRYP
 
	tPFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tcovîageSam∂es
, GLsizeò
	tcﬁ‹Sam∂es
, GLíum 
	töã∫Æf‹m©
, GLsizeò
	twidth
, GLsizeò
	theight
);

8634 #i‚de‡
GL_EXT_‰amebuf„r_sRGB


8635 
	#GL_EXT_‰amebuf„r_sRGB
 1

	)

8638 #i‚de‡
GL_NV_geomëry_shadî4


8639 
	#GL_NV_geomëry_shadî4
 1

	)

8642 #i‚de‡
GL_NV_∑ømëî_buf„r_obje˘


8643 
	#GL_NV_∑ømëî_buf„r_obje˘
 1

	)

8644 #ifde‡
GL_GLEXT_PROTOTYPES


8645 
GLAPI
 
APIENTRY
 
glProgømBuf„rP¨amëîsfvNV
 (
GLíum
, 
GLuöt
, GLuöt, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

8646 
GLAPI
 
APIENTRY
 
glProgømBuf„rP¨amëîsIivNV
 (
GLíum
, 
GLuöt
, GLuöt, 
GLsizei
, c⁄° 
GLöt
 *);

8647 
GLAPI
 
APIENTRY
 
glProgømBuf„rP¨amëîsIuivNV
 (
GLíum
, 
GLuöt
, GLuöt, 
GLsizei
, const GLuint *);

8649 (
APIENTRYP
 
	tPFNGLPROGRAMBUFFERPARAMETERSFVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tbuf„r
, GLuöà
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

8650 (
APIENTRYP
 
	tPFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tbuf„r
, GLuöà
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLöt
 *
	t∑øms
);

8651 (
APIENTRYP
 
	tPFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tbuf„r
, GLuöà
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà*
	t∑øms
);

8654 #i‚de‡
GL_EXT_døw_buf„rs2


8655 
	#GL_EXT_døw_buf„rs2
 1

	)

8656 #ifde‡
GL_GLEXT_PROTOTYPES


8657 
GLAPI
 
APIENTRY
 
glCﬁ‹MaskIndexedEXT
 (
GLuöt
, 
GLboﬁón
, GLboolean, GLboolean, GLboolean);

8658 
GLAPI
 
APIENTRY
 
glGëBoﬁónIndexedvEXT
 (
GLíum
, 
GLuöt
, 
GLboﬁón
 *);

8659 
GLAPI
 
APIENTRY
 
glGëI¡egîIndexedvEXT
 (
GLíum
, 
GLuöt
, 
GLöt
 *);

8660 
GLAPI
 
APIENTRY
 
glE«bÀIndexedEXT
 (
GLíum
, 
GLuöt
);

8661 
GLAPI
 
APIENTRY
 
glDißbÀIndexedEXT
 (
GLíum
, 
GLuöt
);

8662 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsE«bÀdIndexedEXT
 (
GLíum
, 
GLuöt
);

8664 (
APIENTRYP
 
	tPFNGLCOLORMASKINDEXEDEXTPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLboﬁón
 
	tr
, GLboﬁó¿
	tg
, GLboﬁó¿
	tb
, GLboﬁó¿
	ta
);

8665 (
APIENTRYP
 
	tPFNGLGETBOOLEANINDEXEDVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLboﬁón
 *
	td©a
);

8666 (
APIENTRYP
 
	tPFNGLGETINTEGERINDEXEDVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLöt
 *
	td©a
);

8667 (
APIENTRYP
 
	tPFNGLENABLEINDEXEDEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
);

8668 (
APIENTRYP
 
	tPFNGLDISABLEINDEXEDEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
);

8669 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISENABLEDINDEXEDEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
);

8672 #i‚de‡
GL_NV_å™sf‹m_„edback


8673 
	#GL_NV_å™sf‹m_„edback
 1

	)

8674 #ifde‡
GL_GLEXT_PROTOTYPES


8675 
GLAPI
 
APIENTRY
 
glBegöTønsf‹mFìdbackNV
 (
GLíum
);

8676 
GLAPI
 
APIENTRY
 
glEndTønsf‹mFìdbackNV
 ();

8677 
GLAPI
 
APIENTRY
 
glTønsf‹mFìdbackAâribsNV
 (
GLuöt
, c⁄° 
GLöt
 *, 
GLíum
);

8678 
GLAPI
 
APIENTRY
 
glBödBuf„rR™geNV
 (
GLíum
, 
GLuöt
, GLuöt, 
GLöçå
, 
GLsizeùå
);

8679 
GLAPI
 
APIENTRY
 
glBödBuf„rOff£tNV
 (
GLíum
, 
GLuöt
, GLuöt, 
GLöçå
);

8680 
GLAPI
 
APIENTRY
 
glBödBuf„rBa£NV
 (
GLíum
, 
GLuöt
, GLuint);

8681 
GLAPI
 
APIENTRY
 
glTønsf‹mFìdbackV¨yögsNV
 (
GLuöt
, 
GLsizei
, c⁄° 
GLch¨
* *, 
GLíum
);

8682 
GLAPI
 
APIENTRY
 
glA˘iveV¨yögNV
 (
GLuöt
, c⁄° 
GLch¨
 *);

8683 
GLAPI
 
GLöt
 
APIENTRY
 
glGëV¨yögLoˇti⁄NV
 (
GLuöt
, c⁄° 
GLch¨
 *);

8684 
GLAPI
 
APIENTRY
 
glGëA˘iveV¨yögNV
 (
GLuöt
, GLuöt, 
GLsizei
, GLsizeò*, GLsizeò*, 
GLíum
 *, 
GLch¨
 *);

8685 
GLAPI
 
APIENTRY
 
glGëTønsf‹mFìdbackV¨yögNV
 (
GLuöt
, GLuöt, 
GLöt
 *);

8687 (
APIENTRYP
 
	tPFNGLBEGINTRANSFORMFEEDBACKNVPROC
Ë(
	tGLíum
 
	t¥imôiveMode
);

8688 (
APIENTRYP
 
	tPFNGLENDTRANSFORMFEEDBACKNVPROC
) ();

8689 (
APIENTRYP
 
	tPFNGLTRANSFORMFEEDBACKATTRIBSNVPROC
Ë(
	tGLuöt
 
	tcou¡
, c⁄° 
	tGLöt
 *
	t©åibs
, 
	tGLíum
 
	tbuf„rMode
);

8690 (
APIENTRYP
 
	tPFNGLBINDBUFFERRANGENVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
);

8691 (
APIENTRYP
 
	tPFNGLBINDBUFFEROFFSETNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
, 
	tGLöçå
 
	toff£t
);

8692 (
APIENTRYP
 
	tPFNGLBINDBUFFERBASENVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
);

8693 (
APIENTRYP
 
	tPFNGLTRANSFORMFEEDBACKVARYINGSNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLch¨
* *
	tv¨yögs
, 
	tGLíum
 
	tbuf„rMode
);

8694 (
APIENTRYP
 
	tPFNGLACTIVEVARYINGNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 *
	t«me
);

8695 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETVARYINGLOCATIONNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, c⁄° 
	tGLch¨
 *
	t«me
);

8696 (
APIENTRYP
 
	tPFNGLGETACTIVEVARYINGNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, GLsizeò*
	tsize
, 
	tGLíum
 *
	tty≥
, 
	tGLch¨
 *
	t«me
);

8697 (
APIENTRYP
 
	tPFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, 
	tGLöt
 *
	tloˇti⁄
);

8700 #i‚de‡
GL_EXT_bödabÀ_unif‹m


8701 
	#GL_EXT_bödabÀ_unif‹m
 1

	)

8702 #ifde‡
GL_GLEXT_PROTOTYPES


8703 
GLAPI
 
APIENTRY
 
glUnif‹mBuf„rEXT
 (
GLuöt
, 
GLöt
, GLuint);

8704 
GLAPI
 
GLöt
 
APIENTRY
 
glGëUnif‹mBuf„rSizeEXT
 (
GLuöt
, GLint);

8705 
GLAPI
 
GLöçå
 
APIENTRY
 
glGëUnif‹mOff£tEXT
 (
GLuöt
, 
GLöt
);

8707 (
APIENTRYP
 
	tPFNGLUNIFORMBUFFEREXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLuöà
	tbuf„r
);

8708 
GLöt
 (
	tAPIENTRYP
 
	tPFNGLGETUNIFORMBUFFERSIZEEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
);

8709 
GLöçå
 (
	tAPIENTRYP
 
	tPFNGLGETUNIFORMOFFSETEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
);

8712 #i‚de‡
GL_EXT_ãxtuª_öãgî


8713 
	#GL_EXT_ãxtuª_öãgî
 1

	)

8714 #ifde‡
GL_GLEXT_PROTOTYPES


8715 
GLAPI
 
APIENTRY
 
glTexP¨amëîIivEXT
 (
GLíum
, GLíum, c⁄° 
GLöt
 *);

8716 
GLAPI
 
APIENTRY
 
glTexP¨amëîIuivEXT
 (
GLíum
, GLíum, c⁄° 
GLuöt
 *);

8717 
GLAPI
 
APIENTRY
 
glGëTexP¨amëîIivEXT
 (
GLíum
, GLíum, 
GLöt
 *);

8718 
GLAPI
 
APIENTRY
 
glGëTexP¨amëîIuivEXT
 (
GLíum
, GLíum, 
GLuöt
 *);

8719 
GLAPI
 
APIENTRY
 
glCÀ¨Cﬁ‹IiEXT
 (
GLöt
, GLint, GLint, GLint);

8720 
GLAPI
 
APIENTRY
 
glCÀ¨Cﬁ‹IuiEXT
 (
GLuöt
, GLuint, GLuint, GLuint);

8722 (
APIENTRYP
 
	tPFNGLTEXPARAMETERIIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

8723 (
APIENTRYP
 
	tPFNGLTEXPARAMETERIUIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLuöt
 *
	t∑øms
);

8724 (
APIENTRYP
 
	tPFNGLGETTEXPARAMETERIIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

8725 (
APIENTRYP
 
	tPFNGLGETTEXPARAMETERIUIVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLuöt
 *
	t∑øms
);

8726 (
APIENTRYP
 
	tPFNGLCLEARCOLORIIEXTPROC
Ë(
	tGLöt
 
	tªd
, GLöà
	tgªí
, GLöà
	tblue
, GLöà
	tÆpha
);

8727 (
APIENTRYP
 
	tPFNGLCLEARCOLORIUIEXTPROC
Ë(
	tGLuöt
 
	tªd
, GLuöà
	tgªí
, GLuöà
	tblue
, GLuöà
	tÆpha
);

8730 #i‚de‡
GL_GREMEDY_‰ame_ãrmö©‹


8731 
	#GL_GREMEDY_‰ame_ãrmö©‹
 1

	)

8732 #ifde‡
GL_GLEXT_PROTOTYPES


8733 
GLAPI
 
APIENTRY
 
glFømeTîmö©‹GREMEDY
 ();

8735 (
APIENTRYP
 
	tPFNGLFRAMETERMINATORGREMEDYPROC
) ();

8738 #i‚de‡
GL_NV_c⁄dôi⁄Æ_ªndî


8739 
	#GL_NV_c⁄dôi⁄Æ_ªndî
 1

	)

8740 #ifde‡
GL_GLEXT_PROTOTYPES


8741 
GLAPI
 
APIENTRY
 
glBegöC⁄dôi⁄ÆRídîNV
 (
GLuöt
, 
GLíum
);

8742 
GLAPI
 
APIENTRY
 
glEndC⁄dôi⁄ÆRídîNV
 ();

8744 (
APIENTRYP
 
	tPFNGLBEGINCONDITIONALRENDERNVPROC
Ë(
	tGLuöt
 
	tid
, 
	tGLíum
 
	tmode
);

8745 (
APIENTRYP
 
	tPFNGLENDCONDITIONALRENDERNVPROC
) ();

8748 #i‚de‡
GL_NV_¥e£¡_video


8749 
	#GL_NV_¥e£¡_video
 1

	)

8750 #ifde‡
GL_GLEXT_PROTOTYPES


8751 
GLAPI
 
APIENTRY
 
glPª£¡FømeKeyedNV
 (
GLuöt
, 
GLuöt64EXT
, GLuöt, GLuöt, 
GLíum
, GLenum, GLuint, GLuint, GLenum, GLuint, GLuint);

8752 
GLAPI
 
APIENTRY
 
glPª£¡FømeDuÆFûlNV
 (
GLuöt
, 
GLuöt64EXT
, GLuöt, GLuöt, 
GLíum
, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint);

8753 
GLAPI
 
APIENTRY
 
glGëVideoivNV
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

8754 
GLAPI
 
APIENTRY
 
glGëVideouivNV
 (
GLuöt
, 
GLíum
, GLuint *);

8755 
GLAPI
 
APIENTRY
 
glGëVideoi64vNV
 (
GLuöt
, 
GLíum
, 
GLöt64EXT
 *);

8756 
GLAPI
 
APIENTRY
 
glGëVideoui64vNV
 (
GLuöt
, 
GLíum
, 
GLuöt64EXT
 *);

8758 (
APIENTRYP
 
	tPFNGLPRESENTFRAMEKEYEDNVPROC
Ë(
	tGLuöt
 
	tvideo_¶Ÿ
, 
	tGLuöt64EXT
 
	tmöPª£¡Time
, GLuöà
	tbegöPª£¡TimeId
, GLuöà
	t¥e£¡Duøti⁄Id
, 
	tGLíum
 
	tty≥
, GLíum 
	tèrgë0
, GLuöà
	tfûl0
, GLuöà
	tkey0
, GLíum 
	tèrgë1
, GLuöà
	tfûl1
, GLuöà
	tkey1
);

8759 (
APIENTRYP
 
	tPFNGLPRESENTFRAMEDUALFILLNVPROC
Ë(
	tGLuöt
 
	tvideo_¶Ÿ
, 
	tGLuöt64EXT
 
	tmöPª£¡Time
, GLuöà
	tbegöPª£¡TimeId
, GLuöà
	t¥e£¡Duøti⁄Id
, 
	tGLíum
 
	tty≥
, GLíum 
	tèrgë0
, GLuöà
	tfûl0
, GLíum 
	tèrgë1
, GLuöà
	tfûl1
, GLíum 
	tèrgë2
, GLuöà
	tfûl2
, GLíum 
	tèrgë3
, GLuöà
	tfûl3
);

8760 (
APIENTRYP
 
	tPFNGLGETVIDEOIVNVPROC
Ë(
	tGLuöt
 
	tvideo_¶Ÿ
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

8761 (
APIENTRYP
 
	tPFNGLGETVIDEOUIVNVPROC
Ë(
	tGLuöt
 
	tvideo_¶Ÿ
, 
	tGLíum
 
	t≤ame
, GLuöà*
	t∑øms
);

8762 (
APIENTRYP
 
	tPFNGLGETVIDEOI64VNVPROC
Ë(
	tGLuöt
 
	tvideo_¶Ÿ
, 
	tGLíum
 
	t≤ame
, 
	tGLöt64EXT
 *
	t∑øms
);

8763 (
APIENTRYP
 
	tPFNGLGETVIDEOUI64VNVPROC
Ë(
	tGLuöt
 
	tvideo_¶Ÿ
, 
	tGLíum
 
	t≤ame
, 
	tGLuöt64EXT
 *
	t∑øms
);

8766 #i‚de‡
GL_EXT_å™sf‹m_„edback


8767 
	#GL_EXT_å™sf‹m_„edback
 1

	)

8768 #ifde‡
GL_GLEXT_PROTOTYPES


8769 
GLAPI
 
APIENTRY
 
glBegöTønsf‹mFìdbackEXT
 (
GLíum
);

8770 
GLAPI
 
APIENTRY
 
glEndTønsf‹mFìdbackEXT
 ();

8771 
GLAPI
 
APIENTRY
 
glBödBuf„rR™geEXT
 (
GLíum
, 
GLuöt
, GLuöt, 
GLöçå
, 
GLsizeùå
);

8772 
GLAPI
 
APIENTRY
 
glBödBuf„rOff£tEXT
 (
GLíum
, 
GLuöt
, GLuöt, 
GLöçå
);

8773 
GLAPI
 
APIENTRY
 
glBödBuf„rBa£EXT
 (
GLíum
, 
GLuöt
, GLuint);

8774 
GLAPI
 
APIENTRY
 
glTønsf‹mFìdbackV¨yögsEXT
 (
GLuöt
, 
GLsizei
, c⁄° 
GLch¨
* *, 
GLíum
);

8775 
GLAPI
 
APIENTRY
 
glGëTønsf‹mFìdbackV¨yögEXT
 (
GLuöt
, GLuöt, 
GLsizei
, GLsizeò*, GLsizeò*, 
GLíum
 *, 
GLch¨
 *);

8777 (
APIENTRYP
 
	tPFNGLBEGINTRANSFORMFEEDBACKEXTPROC
Ë(
	tGLíum
 
	t¥imôiveMode
);

8778 (
APIENTRYP
 
	tPFNGLENDTRANSFORMFEEDBACKEXTPROC
) ();

8779 (
APIENTRYP
 
	tPFNGLBINDBUFFERRANGEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
);

8780 (
APIENTRYP
 
	tPFNGLBINDBUFFEROFFSETEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
, 
	tGLöçå
 
	toff£t
);

8781 (
APIENTRYP
 
	tPFNGLBINDBUFFERBASEEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, GLuöà
	tbuf„r
);

8782 (
APIENTRYP
 
	tPFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLch¨
* *
	tv¨yögs
, 
	tGLíum
 
	tbuf„rMode
);

8783 (
APIENTRYP
 
	tPFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, GLuöà
	tödex
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, GLsizeò*
	tsize
, 
	tGLíum
 *
	tty≥
, 
	tGLch¨
 *
	t«me
);

8786 #i‚de‡
GL_EXT_dúe˘_°©e_ac˚ss


8787 
	#GL_EXT_dúe˘_°©e_ac˚ss
 1

	)

8788 #ifde‡
GL_GLEXT_PROTOTYPES


8789 
GLAPI
 
APIENTRY
 
glClõ¡AâribDeÁu…EXT
 (
GLbôfõld
);

8790 
GLAPI
 
APIENTRY
 
glPushClõ¡AâribDeÁu…EXT
 (
GLbôfõld
);

8791 
GLAPI
 
APIENTRY
 
glM©rixLﬂdfEXT
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

8792 
GLAPI
 
APIENTRY
 
glM©rixLﬂddEXT
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

8793 
GLAPI
 
APIENTRY
 
glM©rixMu…fEXT
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

8794 
GLAPI
 
APIENTRY
 
glM©rixMu…dEXT
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

8795 
GLAPI
 
APIENTRY
 
glM©rixLﬂdIdítôyEXT
 (
GLíum
);

8796 
GLAPI
 
APIENTRY
 
glM©rixRŸ©efEXT
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

8797 
GLAPI
 
APIENTRY
 
glM©rixRŸ©edEXT
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

8798 
GLAPI
 
APIENTRY
 
glM©rixSˇÀfEXT
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat);

8799 
GLAPI
 
APIENTRY
 
glM©rixSˇÀdEXT
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble);

8800 
GLAPI
 
APIENTRY
 
glM©rixTøn¶©efEXT
 (
GLíum
, 
GLÊﬂt
, GLfloat, GLfloat);

8801 
GLAPI
 
APIENTRY
 
glM©rixTøn¶©edEXT
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble);

8802 
GLAPI
 
APIENTRY
 
glM©rixFru°umEXT
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);

8803 
GLAPI
 
APIENTRY
 
glM©rixOπhoEXT
 (
GLíum
, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);

8804 
GLAPI
 
APIENTRY
 
glM©rixP›EXT
 (
GLíum
);

8805 
GLAPI
 
APIENTRY
 
glM©rixPushEXT
 (
GLíum
);

8806 
GLAPI
 
APIENTRY
 
glM©rixLﬂdTøn•o£fEXT
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

8807 
GLAPI
 
APIENTRY
 
glM©rixLﬂdTøn•o£dEXT
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

8808 
GLAPI
 
APIENTRY
 
glM©rixMu…Tøn•o£fEXT
 (
GLíum
, c⁄° 
GLÊﬂt
 *);

8809 
GLAPI
 
APIENTRY
 
glM©rixMu…Tøn•o£dEXT
 (
GLíum
, c⁄° 
GLdoubÀ
 *);

8810 
GLAPI
 
APIENTRY
 
glTextuªP¨amëîfEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLÊﬂt
);

8811 
GLAPI
 
APIENTRY
 
glTextuªP¨amëîfvEXT
 (
GLuöt
, 
GLíum
, GLíum, c⁄° 
GLÊﬂt
 *);

8812 
GLAPI
 
APIENTRY
 
glTextuªP¨amëîiEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLöt
);

8813 
GLAPI
 
APIENTRY
 
glTextuªP¨amëîivEXT
 (
GLuöt
, 
GLíum
, GLíum, c⁄° 
GLöt
 *);

8814 
GLAPI
 
APIENTRY
 
glTextuªImage1DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

8815 
GLAPI
 
APIENTRY
 
glTextuªImage2DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

8816 
GLAPI
 
APIENTRY
 
glTextuªSubImage1DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, 
GLsizei
, GLíum, GLíum, c⁄° 
GLvoid
 *);

8817 
GLAPI
 
APIENTRY
 
glTextuªSubImage2DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

8818 
GLAPI
 
APIENTRY
 
glC›yTextuªImage1DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, GLöt, GLöt, 
GLsizei
, GLint);

8819 
GLAPI
 
APIENTRY
 
glC›yTextuªImage2DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, GLöt, GLöt, 
GLsizei
, GLsizei, GLint);

8820 
GLAPI
 
APIENTRY
 
glC›yTextuªSubImage1DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
);

8821 
GLAPI
 
APIENTRY
 
glC›yTextuªSubImage2DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei);

8822 
GLAPI
 
APIENTRY
 
glGëTextuªImageEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, GLíum, 
GLvoid
 *);

8823 
GLAPI
 
APIENTRY
 
glGëTextuªP¨amëîfvEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLÊﬂt
 *);

8824 
GLAPI
 
APIENTRY
 
glGëTextuªP¨amëîivEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLöt
 *);

8825 
GLAPI
 
APIENTRY
 
glGëTextuªLevñP¨amëîfvEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, 
GLÊﬂt
 *);

8826 
GLAPI
 
APIENTRY
 
glGëTextuªLevñP¨amëîivEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLenum, GLint *);

8827 
GLAPI
 
APIENTRY
 
glTextuªImage3DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLsizei, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

8828 
GLAPI
 
APIENTRY
 
glTextuªSubImage3DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

8829 
GLAPI
 
APIENTRY
 
glC›yTextuªSubImage3DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei);

8830 
GLAPI
 
APIENTRY
 
glMu…iTexP¨amëîfEXT
 (
GLíum
, GLíum, GLíum, 
GLÊﬂt
);

8831 
GLAPI
 
APIENTRY
 
glMu…iTexP¨amëîfvEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLÊﬂt
 *);

8832 
GLAPI
 
APIENTRY
 
glMu…iTexP¨amëîiEXT
 (
GLíum
, GLíum, GLíum, 
GLöt
);

8833 
GLAPI
 
APIENTRY
 
glMu…iTexP¨amëîivEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLöt
 *);

8834 
GLAPI
 
APIENTRY
 
glMu…iTexImage1DEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, 
GLsizei
, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

8835 
GLAPI
 
APIENTRY
 
glMu…iTexImage2DEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

8836 
GLAPI
 
APIENTRY
 
glMu…iTexSubImage1DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, 
GLsizei
, GLíum, GLíum, c⁄° 
GLvoid
 *);

8837 
GLAPI
 
APIENTRY
 
glMu…iTexSubImage2DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, GLöt, 
GLsizei
, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

8838 
GLAPI
 
APIENTRY
 
glC›yMu…iTexImage1DEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, GLöt, GLöt, 
GLsizei
, GLint);

8839 
GLAPI
 
APIENTRY
 
glC›yMu…iTexImage2DEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, GLöt, GLöt, 
GLsizei
, GLsizei, GLint);

8840 
GLAPI
 
APIENTRY
 
glC›yMu…iTexSubImage1DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
);

8841 
GLAPI
 
APIENTRY
 
glC›yMu…iTexSubImage2DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei);

8842 
GLAPI
 
APIENTRY
 
glGëMu…iTexImageEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, GLíum, 
GLvoid
 *);

8843 
GLAPI
 
APIENTRY
 
glGëMu…iTexP¨amëîfvEXT
 (
GLíum
, GLíum, GLíum, 
GLÊﬂt
 *);

8844 
GLAPI
 
APIENTRY
 
glGëMu…iTexP¨amëîivEXT
 (
GLíum
, GLíum, GLíum, 
GLöt
 *);

8845 
GLAPI
 
APIENTRY
 
glGëMu…iTexLevñP¨amëîfvEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, 
GLÊﬂt
 *);

8846 
GLAPI
 
APIENTRY
 
glGëMu…iTexLevñP¨amëîivEXT
 (
GLíum
, GLíum, 
GLöt
, GLenum, GLint *);

8847 
GLAPI
 
APIENTRY
 
glMu…iTexImage3DEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLsizei, GLöt, GLíum, GLíum, c⁄° 
GLvoid
 *);

8848 
GLAPI
 
APIENTRY
 
glMu…iTexSubImage3DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLíum, GLíum, c⁄° 
GLvoid
 *);

8849 
GLAPI
 
APIENTRY
 
glC›yMu…iTexSubImage3DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei);

8850 
GLAPI
 
APIENTRY
 
glBödMu…iTextuªEXT
 (
GLíum
, GLíum, 
GLuöt
);

8851 
GLAPI
 
APIENTRY
 
glE«bÀClõ¡SèãIndexedEXT
 (
GLíum
, 
GLuöt
);

8852 
GLAPI
 
APIENTRY
 
glDißbÀClõ¡SèãIndexedEXT
 (
GLíum
, 
GLuöt
);

8853 
GLAPI
 
APIENTRY
 
glMu…iTexCo‹dPoöãrEXT
 (
GLíum
, 
GLöt
, GLíum, 
GLsizei
, c⁄° 
GLvoid
 *);

8854 
GLAPI
 
APIENTRY
 
glMu…iTexEnvfEXT
 (
GLíum
, GLíum, GLíum, 
GLÊﬂt
);

8855 
GLAPI
 
APIENTRY
 
glMu…iTexEnvfvEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLÊﬂt
 *);

8856 
GLAPI
 
APIENTRY
 
glMu…iTexEnviEXT
 (
GLíum
, GLíum, GLíum, 
GLöt
);

8857 
GLAPI
 
APIENTRY
 
glMu…iTexEnvivEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLöt
 *);

8858 
GLAPI
 
APIENTRY
 
glMu…iTexGídEXT
 (
GLíum
, GLíum, GLíum, 
GLdoubÀ
);

8859 
GLAPI
 
APIENTRY
 
glMu…iTexGídvEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLdoubÀ
 *);

8860 
GLAPI
 
APIENTRY
 
glMu…iTexGífEXT
 (
GLíum
, GLíum, GLíum, 
GLÊﬂt
);

8861 
GLAPI
 
APIENTRY
 
glMu…iTexGífvEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLÊﬂt
 *);

8862 
GLAPI
 
APIENTRY
 
glMu…iTexGíiEXT
 (
GLíum
, GLíum, GLíum, 
GLöt
);

8863 
GLAPI
 
APIENTRY
 
glMu…iTexGíivEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLöt
 *);

8864 
GLAPI
 
APIENTRY
 
glGëMu…iTexEnvfvEXT
 (
GLíum
, GLíum, GLíum, 
GLÊﬂt
 *);

8865 
GLAPI
 
APIENTRY
 
glGëMu…iTexEnvivEXT
 (
GLíum
, GLíum, GLíum, 
GLöt
 *);

8866 
GLAPI
 
APIENTRY
 
glGëMu…iTexGídvEXT
 (
GLíum
, GLíum, GLíum, 
GLdoubÀ
 *);

8867 
GLAPI
 
APIENTRY
 
glGëMu…iTexGífvEXT
 (
GLíum
, GLíum, GLíum, 
GLÊﬂt
 *);

8868 
GLAPI
 
APIENTRY
 
glGëMu…iTexGíivEXT
 (
GLíum
, GLíum, GLíum, 
GLöt
 *);

8869 
GLAPI
 
APIENTRY
 
glGëFlﬂtIndexedvEXT
 (
GLíum
, 
GLuöt
, 
GLÊﬂt
 *);

8870 
GLAPI
 
APIENTRY
 
glGëDoubÀIndexedvEXT
 (
GLíum
, 
GLuöt
, 
GLdoubÀ
 *);

8871 
GLAPI
 
APIENTRY
 
glGëPoöãrIndexedvEXT
 (
GLíum
, 
GLuöt
, 
GLvoid
* *);

8872 
GLAPI
 
APIENTRY
 
glCom¥es£dTextuªImage3DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLsizei, GLöt, GLsizei, c⁄° 
GLvoid
 *);

8873 
GLAPI
 
APIENTRY
 
glCom¥es£dTextuªImage2DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLöt, GLsizei, c⁄° 
GLvoid
 *);

8874 
GLAPI
 
APIENTRY
 
glCom¥es£dTextuªImage1DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLíum, 
GLsizei
, GLöt, GLsizei, c⁄° 
GLvoid
 *);

8875 
GLAPI
 
APIENTRY
 
glCom¥es£dTextuªSubImage3DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLíum, GLsizei, c⁄° 
GLvoid
 *);

8876 
GLAPI
 
APIENTRY
 
glCom¥es£dTextuªSubImage2DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, 
GLsizei
, GLsizei, GLíum, GLsizei, c⁄° 
GLvoid
 *);

8877 
GLAPI
 
APIENTRY
 
glCom¥es£dTextuªSubImage1DEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, 
GLsizei
, GLíum, GLsizei, c⁄° 
GLvoid
 *);

8878 
GLAPI
 
APIENTRY
 
glGëCom¥es£dTextuªImageEXT
 (
GLuöt
, 
GLíum
, 
GLöt
, 
GLvoid
 *);

8879 
GLAPI
 
APIENTRY
 
glCom¥es£dMu…iTexImage3DEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLsizei, GLöt, GLsizei, c⁄° 
GLvoid
 *);

8880 
GLAPI
 
APIENTRY
 
glCom¥es£dMu…iTexImage2DEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, 
GLsizei
, GLsizei, GLöt, GLsizei, c⁄° 
GLvoid
 *);

8881 
GLAPI
 
APIENTRY
 
glCom¥es£dMu…iTexImage1DEXT
 (
GLíum
, GLíum, 
GLöt
, GLíum, 
GLsizei
, GLöt, GLsizei, c⁄° 
GLvoid
 *);

8882 
GLAPI
 
APIENTRY
 
glCom¥es£dMu…iTexSubImage3DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei, GLíum, GLsizei, c⁄° 
GLvoid
 *);

8883 
GLAPI
 
APIENTRY
 
glCom¥es£dMu…iTexSubImage2DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, GLöt, 
GLsizei
, GLsizei, GLíum, GLsizei, c⁄° 
GLvoid
 *);

8884 
GLAPI
 
APIENTRY
 
glCom¥es£dMu…iTexSubImage1DEXT
 (
GLíum
, GLíum, 
GLöt
, GLöt, 
GLsizei
, GLíum, GLsizei, c⁄° 
GLvoid
 *);

8885 
GLAPI
 
APIENTRY
 
glGëCom¥es£dMu…iTexImageEXT
 (
GLíum
, GLíum, 
GLöt
, 
GLvoid
 *);

8886 
GLAPI
 
APIENTRY
 
glNamedProgømSåögEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLsizei
, c⁄° 
GLvoid
 *);

8887 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëî4dEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLdoubÀ
, GLdouble, GLdouble, GLdouble);

8888 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëî4dvEXT
 (
GLuöt
, 
GLíum
, GLuöt, c⁄° 
GLdoubÀ
 *);

8889 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëî4fEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

8890 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëî4fvEXT
 (
GLuöt
, 
GLíum
, GLuöt, c⁄° 
GLÊﬂt
 *);

8891 
GLAPI
 
APIENTRY
 
glGëNamedProgømLoˇlP¨amëîdvEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLdoubÀ
 *);

8892 
GLAPI
 
APIENTRY
 
glGëNamedProgømLoˇlP¨amëîfvEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLÊﬂt
 *);

8893 
GLAPI
 
APIENTRY
 
glGëNamedProgømivEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLöt
 *);

8894 
GLAPI
 
APIENTRY
 
glGëNamedProgømSåögEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLvoid
 *);

8895 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëîs4fvEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

8896 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëîI4iEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLöt
, GLint, GLint, GLint);

8897 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëîI4ivEXT
 (
GLuöt
, 
GLíum
, GLuöt, c⁄° 
GLöt
 *);

8898 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëîsI4ivEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLsizei
, c⁄° 
GLöt
 *);

8899 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëîI4uiEXT
 (
GLuöt
, 
GLíum
, GLuint, GLuint, GLuint, GLuint, GLuint);

8900 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëîI4uivEXT
 (
GLuöt
, 
GLíum
, GLuint, const GLuint *);

8901 
GLAPI
 
APIENTRY
 
glNamedProgømLoˇlP¨amëîsI4uivEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLsizei
, const GLuint *);

8902 
GLAPI
 
APIENTRY
 
glGëNamedProgømLoˇlP¨amëîIivEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLöt
 *);

8903 
GLAPI
 
APIENTRY
 
glGëNamedProgømLoˇlP¨amëîIuivEXT
 (
GLuöt
, 
GLíum
, GLuint, GLuint *);

8904 
GLAPI
 
APIENTRY
 
glTextuªP¨amëîIivEXT
 (
GLuöt
, 
GLíum
, GLíum, c⁄° 
GLöt
 *);

8905 
GLAPI
 
APIENTRY
 
glTextuªP¨amëîIuivEXT
 (
GLuöt
, 
GLíum
, GLenum, const GLuint *);

8906 
GLAPI
 
APIENTRY
 
glGëTextuªP¨amëîIivEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLöt
 *);

8907 
GLAPI
 
APIENTRY
 
glGëTextuªP¨amëîIuivEXT
 (
GLuöt
, 
GLíum
, GLenum, GLuint *);

8908 
GLAPI
 
APIENTRY
 
glMu…iTexP¨amëîIivEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLöt
 *);

8909 
GLAPI
 
APIENTRY
 
glMu…iTexP¨amëîIuivEXT
 (
GLíum
, GLíum, GLíum, c⁄° 
GLuöt
 *);

8910 
GLAPI
 
APIENTRY
 
glGëMu…iTexP¨amëîIivEXT
 (
GLíum
, GLíum, GLíum, 
GLöt
 *);

8911 
GLAPI
 
APIENTRY
 
glGëMu…iTexP¨amëîIuivEXT
 (
GLíum
, GLíum, GLíum, 
GLuöt
 *);

8912 
GLAPI
 
APIENTRY
 
glProgømUnif‹m1fEXT
 (
GLuöt
, 
GLöt
, 
GLÊﬂt
);

8913 
GLAPI
 
APIENTRY
 
glProgømUnif‹m2fEXT
 (
GLuöt
, 
GLöt
, 
GLÊﬂt
, GLfloat);

8914 
GLAPI
 
APIENTRY
 
glProgømUnif‹m3fEXT
 (
GLuöt
, 
GLöt
, 
GLÊﬂt
, GLfloat, GLfloat);

8915 
GLAPI
 
APIENTRY
 
glProgømUnif‹m4fEXT
 (
GLuöt
, 
GLöt
, 
GLÊﬂt
, GLfloat, GLfloat, GLfloat);

8916 
GLAPI
 
APIENTRY
 
glProgømUnif‹m1iEXT
 (
GLuöt
, 
GLöt
, GLint);

8917 
GLAPI
 
APIENTRY
 
glProgømUnif‹m2iEXT
 (
GLuöt
, 
GLöt
, GLint, GLint);

8918 
GLAPI
 
APIENTRY
 
glProgømUnif‹m3iEXT
 (
GLuöt
, 
GLöt
, GLint, GLint, GLint);

8919 
GLAPI
 
APIENTRY
 
glProgømUnif‹m4iEXT
 (
GLuöt
, 
GLöt
, GLint, GLint, GLint, GLint);

8920 
GLAPI
 
APIENTRY
 
glProgømUnif‹m1fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

8921 
GLAPI
 
APIENTRY
 
glProgømUnif‹m2fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

8922 
GLAPI
 
APIENTRY
 
glProgømUnif‹m3fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

8923 
GLAPI
 
APIENTRY
 
glProgømUnif‹m4fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, c⁄° 
GLÊﬂt
 *);

8924 
GLAPI
 
APIENTRY
 
glProgømUnif‹m1ivEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, const GLint *);

8925 
GLAPI
 
APIENTRY
 
glProgømUnif‹m2ivEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, const GLint *);

8926 
GLAPI
 
APIENTRY
 
glProgømUnif‹m3ivEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, const GLint *);

8927 
GLAPI
 
APIENTRY
 
glProgømUnif‹m4ivEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, const GLint *);

8928 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix2fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8929 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix3fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8930 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix4fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8931 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix2x3fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8932 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix3x2fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8933 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix2x4fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8934 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix4x2fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8935 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix3x4fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8936 
GLAPI
 
APIENTRY
 
glProgømUnif‹mM©rix4x3fvEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, 
GLboﬁón
, c⁄° 
GLÊﬂt
 *);

8937 
GLAPI
 
APIENTRY
 
glProgømUnif‹m1uiEXT
 (
GLuöt
, 
GLöt
, GLuint);

8938 
GLAPI
 
APIENTRY
 
glProgømUnif‹m2uiEXT
 (
GLuöt
, 
GLöt
, GLuint, GLuint);

8939 
GLAPI
 
APIENTRY
 
glProgømUnif‹m3uiEXT
 (
GLuöt
, 
GLöt
, GLuint, GLuint, GLuint);

8940 
GLAPI
 
APIENTRY
 
glProgømUnif‹m4uiEXT
 (
GLuöt
, 
GLöt
, GLuint, GLuint, GLuint, GLuint);

8941 
GLAPI
 
APIENTRY
 
glProgømUnif‹m1uivEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, const GLuint *);

8942 
GLAPI
 
APIENTRY
 
glProgømUnif‹m2uivEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, const GLuint *);

8943 
GLAPI
 
APIENTRY
 
glProgømUnif‹m3uivEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, const GLuint *);

8944 
GLAPI
 
APIENTRY
 
glProgømUnif‹m4uivEXT
 (
GLuöt
, 
GLöt
, 
GLsizei
, const GLuint *);

8945 
GLAPI
 
APIENTRY
 
glNamedBuf„rD©aEXT
 (
GLuöt
, 
GLsizeùå
, c⁄° 
GLvoid
 *, 
GLíum
);

8946 
GLAPI
 
APIENTRY
 
glNamedBuf„rSubD©aEXT
 (
GLuöt
, 
GLöçå
, 
GLsizeùå
, c⁄° 
GLvoid
 *);

8947 
GLAPI
 
GLvoid
* 
APIENTRY
 
glM≠NamedBuf„rEXT
 (
GLuöt
, 
GLíum
);

8948 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glUnm≠NamedBuf„rEXT
 (
GLuöt
);

8949 
GLAPI
 
APIENTRY
 
glGëNamedBuf„rP¨amëîivEXT
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

8950 
GLAPI
 
APIENTRY
 
glGëNamedBuf„rPoöãrvEXT
 (
GLuöt
, 
GLíum
, 
GLvoid
* *);

8951 
GLAPI
 
APIENTRY
 
glGëNamedBuf„rSubD©aEXT
 (
GLuöt
, 
GLöçå
, 
GLsizeùå
, 
GLvoid
 *);

8952 
GLAPI
 
APIENTRY
 
glTextuªBuf„rEXT
 (
GLuöt
, 
GLíum
, GLenum, GLuint);

8953 
GLAPI
 
APIENTRY
 
glMu…iTexBuf„rEXT
 (
GLíum
, GLíum, GLíum, 
GLuöt
);

8954 
GLAPI
 
APIENTRY
 
glNamedRídîbuf„rSt‹ageEXT
 (
GLuöt
, 
GLíum
, 
GLsizei
, GLsizei);

8955 
GLAPI
 
APIENTRY
 
glGëNamedRídîbuf„rP¨amëîivEXT
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

8956 
GLAPI
 
GLíum
 
APIENTRY
 
glCheckNamedFømebuf„rSètusEXT
 (
GLuöt
, GLenum);

8957 
GLAPI
 
APIENTRY
 
glNamedFømebuf„rTextuª1DEXT
 (
GLuöt
, 
GLíum
, GLíum, GLuöt, 
GLöt
);

8958 
GLAPI
 
APIENTRY
 
glNamedFømebuf„rTextuª2DEXT
 (
GLuöt
, 
GLíum
, GLíum, GLuöt, 
GLöt
);

8959 
GLAPI
 
APIENTRY
 
glNamedFømebuf„rTextuª3DEXT
 (
GLuöt
, 
GLíum
, GLíum, GLuöt, 
GLöt
, GLint);

8960 
GLAPI
 
APIENTRY
 
glNamedFømebuf„rRídîbuf„rEXT
 (
GLuöt
, 
GLíum
, GLenum, GLuint);

8961 
GLAPI
 
APIENTRY
 
glGëNamedFømebuf„rAâachmítP¨amëîivEXT
 (
GLuöt
, 
GLíum
, GLíum, 
GLöt
 *);

8962 
GLAPI
 
APIENTRY
 
glGíî©eTextuªMùm≠EXT
 (
GLuöt
, 
GLíum
);

8963 
GLAPI
 
APIENTRY
 
glGíî©eMu…iTexMùm≠EXT
 (
GLíum
, GLenum);

8964 
GLAPI
 
APIENTRY
 
glFømebuf„rDøwBuf„rEXT
 (
GLuöt
, 
GLíum
);

8965 
GLAPI
 
APIENTRY
 
glFømebuf„rDøwBuf„rsEXT
 (
GLuöt
, 
GLsizei
, c⁄° 
GLíum
 *);

8966 
GLAPI
 
APIENTRY
 
glFømebuf„rRódBuf„rEXT
 (
GLuöt
, 
GLíum
);

8967 
GLAPI
 
APIENTRY
 
glGëFømebuf„rP¨amëîivEXT
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

8968 
GLAPI
 
APIENTRY
 
glNamedRídîbuf„rSt‹ageMu…ißm∂eEXT
 (
GLuöt
, 
GLsizei
, 
GLíum
, GLsizei, GLsizei);

8969 
GLAPI
 
APIENTRY
 
glNamedRídîbuf„rSt‹ageMu…ißm∂eCovîageEXT
 (
GLuöt
, 
GLsizei
, GLsizei, 
GLíum
, GLsizei, GLsizei);

8970 
GLAPI
 
APIENTRY
 
glNamedFømebuf„rTextuªEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLöt
);

8971 
GLAPI
 
APIENTRY
 
glNamedFømebuf„rTextuªLayîEXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLöt
, GLint);

8972 
GLAPI
 
APIENTRY
 
glNamedFømebuf„rTextuªFa˚EXT
 (
GLuöt
, 
GLíum
, GLuöt, 
GLöt
, GLenum);

8973 
GLAPI
 
APIENTRY
 
glTextuªRídîbuf„rEXT
 (
GLuöt
, 
GLíum
, GLuint);

8974 
GLAPI
 
APIENTRY
 
glMu…iTexRídîbuf„rEXT
 (
GLíum
, GLíum, 
GLuöt
);

8976 (
APIENTRYP
 
	tPFNGLCLIENTATTRIBDEFAULTEXTPROC
Ë(
	tGLbôfõld
 
	tmask
);

8977 (
APIENTRYP
 
	tPFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC
Ë(
	tGLbôfõld
 
	tmask
);

8978 (
APIENTRYP
 
	tPFNGLMATRIXLOADFEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLÊﬂt
 *
	tm
);

8979 (
APIENTRYP
 
	tPFNGLMATRIXLOADDEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLdoubÀ
 *
	tm
);

8980 (
APIENTRYP
 
	tPFNGLMATRIXMULTFEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLÊﬂt
 *
	tm
);

8981 (
APIENTRYP
 
	tPFNGLMATRIXMULTDEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLdoubÀ
 *
	tm
);

8982 (
APIENTRYP
 
	tPFNGLMATRIXLOADIDENTITYEXTPROC
Ë(
	tGLíum
 
	tmode
);

8983 (
APIENTRYP
 
	tPFNGLMATRIXROTATEFEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLÊﬂt
 
	t™gÀ
, GLÊﬂà
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

8984 (
APIENTRYP
 
	tPFNGLMATRIXROTATEDEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLdoubÀ
 
	t™gÀ
, GLdoubÀ 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

8985 (
APIENTRYP
 
	tPFNGLMATRIXSCALEFEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

8986 (
APIENTRYP
 
	tPFNGLMATRIXSCALEDEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

8987 (
APIENTRYP
 
	tPFNGLMATRIXTRANSLATEFEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
);

8988 (
APIENTRYP
 
	tPFNGLMATRIXTRANSLATEDEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
);

8989 (
APIENTRYP
 
	tPFNGLMATRIXFRUSTUMEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLdoubÀ
 
	tÀ·
, GLdoubÀ 
	tright
, GLdoubÀ 
	tbŸtom
, GLdoubÀ 
	tt›
, GLdoubÀ 
	tzNór
, GLdoubÀ 
	tzF¨
);

8990 (
APIENTRYP
 
	tPFNGLMATRIXORTHOEXTPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLdoubÀ
 
	tÀ·
, GLdoubÀ 
	tright
, GLdoubÀ 
	tbŸtom
, GLdoubÀ 
	tt›
, GLdoubÀ 
	tzNór
, GLdoubÀ 
	tzF¨
);

8991 (
APIENTRYP
 
	tPFNGLMATRIXPOPEXTPROC
Ë(
	tGLíum
 
	tmode
);

8992 (
APIENTRYP
 
	tPFNGLMATRIXPUSHEXTPROC
Ë(
	tGLíum
 
	tmode
);

8993 (
APIENTRYP
 
	tPFNGLMATRIXLOADTRANSPOSEFEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLÊﬂt
 *
	tm
);

8994 (
APIENTRYP
 
	tPFNGLMATRIXLOADTRANSPOSEDEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLdoubÀ
 *
	tm
);

8995 (
APIENTRYP
 
	tPFNGLMATRIXMULTTRANSPOSEFEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLÊﬂt
 *
	tm
);

8996 (
APIENTRYP
 
	tPFNGLMATRIXMULTTRANSPOSEDEXTPROC
Ë(
	tGLíum
 
	tmode
, c⁄° 
	tGLdoubÀ
 *
	tm
);

8997 (
APIENTRYP
 
	tPFNGLTEXTUREPARAMETERFEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

8998 (
APIENTRYP
 
	tPFNGLTEXTUREPARAMETERFVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

8999 (
APIENTRYP
 
	tPFNGLTEXTUREPARAMETERIEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

9000 (
APIENTRYP
 
	tPFNGLTEXTUREPARAMETERIVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

9001 (
APIENTRYP
 
	tPFNGLTEXTUREIMAGE1DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9002 (
APIENTRYP
 
	tPFNGLTEXTUREIMAGE2DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9003 (
APIENTRYP
 
	tPFNGLTEXTURESUBIMAGE1DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9004 (
APIENTRYP
 
	tPFNGLTEXTURESUBIMAGE2DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9005 (
APIENTRYP
 
	tPFNGLCOPYTEXTUREIMAGE1DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
);

9006 (
APIENTRYP
 
	tPFNGLCOPYTEXTUREIMAGE2DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
);

9007 (
APIENTRYP
 
	tPFNGLCOPYTEXTURESUBIMAGE1DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

9008 (
APIENTRYP
 
	tPFNGLCOPYTEXTURESUBIMAGE2DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

9009 (
APIENTRYP
 
	tPFNGLGETTEXTUREIMAGEEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	tpixñs
);

9010 (
APIENTRYP
 
	tPFNGLGETTEXTUREPARAMETERFVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

9011 (
APIENTRYP
 
	tPFNGLGETTEXTUREPARAMETERIVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9012 (
APIENTRYP
 
	tPFNGLGETTEXTURELEVELPARAMETERFVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

9013 (
APIENTRYP
 
	tPFNGLGETTEXTURELEVELPARAMETERIVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	t≤ame
, GLöà*
	t∑øms
);

9014 (
APIENTRYP
 
	tPFNGLTEXTUREIMAGE3DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9015 (
APIENTRYP
 
	tPFNGLTEXTURESUBIMAGE3DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9016 (
APIENTRYP
 
	tPFNGLCOPYTEXTURESUBIMAGE3DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

9017 (
APIENTRYP
 
	tPFNGLMULTITEXPARAMETERFEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

9018 (
APIENTRYP
 
	tPFNGLMULTITEXPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

9019 (
APIENTRYP
 
	tPFNGLMULTITEXPARAMETERIEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

9020 (
APIENTRYP
 
	tPFNGLMULTITEXPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

9021 (
APIENTRYP
 
	tPFNGLMULTITEXIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9022 (
APIENTRYP
 
	tPFNGLMULTITEXIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9023 (
APIENTRYP
 
	tPFNGLMULTITEXSUBIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9024 (
APIENTRYP
 
	tPFNGLMULTITEXSUBIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9025 (
APIENTRYP
 
	tPFNGLCOPYMULTITEXIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
);

9026 (
APIENTRYP
 
	tPFNGLCOPYMULTITEXIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
);

9027 (
APIENTRYP
 
	tPFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
);

9028 (
APIENTRYP
 
	tPFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

9029 (
APIENTRYP
 
	tPFNGLGETMULTITEXIMAGEEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, 
	tGLvoid
 *
	tpixñs
);

9030 (
APIENTRYP
 
	tPFNGLGETMULTITEXPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

9031 (
APIENTRYP
 
	tPFNGLGETMULTITEXPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9032 (
APIENTRYP
 
	tPFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

9033 (
APIENTRYP
 
	tPFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	t≤ame
, GLöà*
	t∑øms
);

9034 (
APIENTRYP
 
	tPFNGLMULTITEXIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9035 (
APIENTRYP
 
	tPFNGLMULTITEXSUBIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLíum 
	tty≥
, c⁄° 
	tGLvoid
 *
	tpixñs
);

9036 (
APIENTRYP
 
	tPFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, GLöà
	tx
, GLöà
	ty
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

9037 (
APIENTRYP
 
	tPFNGLBINDMULTITEXTUREEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLuöt
 
	tãxtuª
);

9038 (
APIENTRYP
 
	tPFNGLENABLECLIENTSTATEINDEXEDEXTPROC
Ë(
	tGLíum
 
	t¨øy
, 
	tGLuöt
 
	tödex
);

9039 (
APIENTRYP
 
	tPFNGLDISABLECLIENTSTATEINDEXEDEXTPROC
Ë(
	tGLíum
 
	t¨øy
, 
	tGLuöt
 
	tödex
);

9040 (
APIENTRYP
 
	tPFNGLMULTITEXCOORDPOINTEREXTPROC
Ë(
	tGLíum
 
	tãxunô
, 
	tGLöt
 
	tsize
, GLíum 
	tty≥
, 
	tGLsizei
 
	t°ride
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

9041 (
APIENTRYP
 
	tPFNGLMULTITEXENVFEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

9042 (
APIENTRYP
 
	tPFNGLMULTITEXENVFVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

9043 (
APIENTRYP
 
	tPFNGLMULTITEXENVIEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

9044 (
APIENTRYP
 
	tPFNGLMULTITEXENVIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

9045 (
APIENTRYP
 
	tPFNGLMULTITEXGENDEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, 
	tGLdoubÀ
 
	t∑øm
);

9046 (
APIENTRYP
 
	tPFNGLMULTITEXGENDVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, c⁄° 
	tGLdoubÀ
 *
	t∑øms
);

9047 (
APIENTRYP
 
	tPFNGLMULTITEXGENFEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 
	t∑øm
);

9048 (
APIENTRYP
 
	tPFNGLMULTITEXGENFVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

9049 (
APIENTRYP
 
	tPFNGLMULTITEXGENIEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, 
	tGLöt
 
	t∑øm
);

9050 (
APIENTRYP
 
	tPFNGLMULTITEXGENIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

9051 (
APIENTRYP
 
	tPFNGLGETMULTITEXENVFVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

9052 (
APIENTRYP
 
	tPFNGLGETMULTITEXENVIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9053 (
APIENTRYP
 
	tPFNGLGETMULTITEXGENDVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, 
	tGLdoubÀ
 *
	t∑øms
);

9054 (
APIENTRYP
 
	tPFNGLGETMULTITEXGENFVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

9055 (
APIENTRYP
 
	tPFNGLGETMULTITEXGENIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tco‹d
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9056 (
APIENTRYP
 
	tPFNGLGETFLOATINDEXEDVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 *
	td©a
);

9057 (
APIENTRYP
 
	tPFNGLGETDOUBLEINDEXEDVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLdoubÀ
 *
	td©a
);

9058 (
APIENTRYP
 
	tPFNGLGETPOINTERINDEXEDVEXTPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tödex
, 
	tGLvoid
* *
	td©a
);

9059 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9060 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9061 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9062 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9063 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9064 (
APIENTRYP
 
	tPFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9065 (
APIENTRYP
 
	tPFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, 
	tGLöt
 
	tlod
, 
	tGLvoid
 *
	timg
);

9066 (
APIENTRYP
 
	tPFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9067 (
APIENTRYP
 
	tPFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9068 (
APIENTRYP
 
	tPFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLíum 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLöà
	tb‹dî
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9069 (
APIENTRYP
 
	tPFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, GLöà
	tzoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9070 (
APIENTRYP
 
	tPFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, GLöà
	tyoff£t
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9071 (
APIENTRYP
 
	tPFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tÀvñ
, GLöà
	txoff£t
, 
	tGLsizei
 
	twidth
, GLíum 
	tf‹m©
, GLsizeò
	timageSize
, c⁄° 
	tGLvoid
 *
	tbôs
);

9072 (
APIENTRYP
 
	tPFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLöt
 
	tlod
, 
	tGLvoid
 *
	timg
);

9073 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMSTRINGEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLíum 
	tf‹m©
, 
	tGLsizei
 
	tÀn
, c⁄° 
	tGLvoid
 *
	t°rög
);

9074 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLdoubÀ
 
	tx
, GLdoubÀ 
	ty
, GLdoubÀ 
	tz
, GLdoubÀ 
	tw
);

9075 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, c⁄° 
	tGLdoubÀ
 *
	t∑øms
);

9076 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLÊﬂt
 
	tx
, GLÊﬂà
	ty
, GLÊﬂà
	tz
, GLÊﬂà
	tw
);

9077 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

9078 (
APIENTRYP
 
	tPFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLdoubÀ
 *
	t∑øms
);

9079 (
APIENTRYP
 
	tPFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLÊﬂt
 *
	t∑øms
);

9080 (
APIENTRYP
 
	tPFNGLGETNAMEDPROGRAMIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9081 (
APIENTRYP
 
	tPFNGLGETNAMEDPROGRAMSTRINGEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLvoid
 *
	t°rög
);

9082 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

9083 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLöt
 
	tx
, GLöà
	ty
, GLöà
	tz
, GLöà
	tw
);

9084 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, c⁄° 
	tGLöt
 *
	t∑øms
);

9085 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLöt
 *
	t∑øms
);

9086 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, GLuöà
	tx
, GLuöà
	ty
, GLuöà
	tz
, GLuöà
	tw
);

9087 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, c⁄° GLuöà*
	t∑øms
);

9088 (
APIENTRYP
 
	tPFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà*
	t∑øms
);

9089 (
APIENTRYP
 
	tPFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, 
	tGLöt
 *
	t∑øms
);

9090 (
APIENTRYP
 
	tPFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLíum
 
	tèrgë
, GLuöà
	tödex
, GLuöà*
	t∑øms
);

9091 (
APIENTRYP
 
	tPFNGLTEXTUREPARAMETERIIVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

9092 (
APIENTRYP
 
	tPFNGLTEXTUREPARAMETERIUIVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, c⁄° GLuöà*
	t∑øms
);

9093 (
APIENTRYP
 
	tPFNGLGETTEXTUREPARAMETERIIVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9094 (
APIENTRYP
 
	tPFNGLGETTEXTUREPARAMETERIUIVEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, GLuöà*
	t∑øms
);

9095 (
APIENTRYP
 
	tPFNGLMULTITEXPARAMETERIIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

9096 (
APIENTRYP
 
	tPFNGLMULTITEXPARAMETERIUIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, c⁄° 
	tGLuöt
 *
	t∑øms
);

9097 (
APIENTRYP
 
	tPFNGLGETMULTITEXPARAMETERIIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9098 (
APIENTRYP
 
	tPFNGLGETMULTITEXPARAMETERIUIVEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLuöt
 *
	t∑øms
);

9099 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM1FEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
);

9100 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM2FEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
);

9101 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM3FEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
);

9102 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM4FEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLÊﬂt
 
	tv0
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
, GLÊﬂà
	tv3
);

9103 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM1IEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
);

9104 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM2IEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
);

9105 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM3IEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
, GLöà
	tv2
);

9106 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM4IEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLöà
	tv0
, GLöà
	tv1
, GLöà
	tv2
, GLöà
	tv3
);

9107 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM1FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9108 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM2FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9109 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM3FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9110 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM4FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9111 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM1IVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

9112 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM2IVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

9113 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM3IVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

9114 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM4IVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLöà*
	tvÆue
);

9115 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9116 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9117 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9118 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9119 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9120 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9121 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9122 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9123 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, 
	tGLboﬁón
 
	tå™•o£
, c⁄° 
	tGLÊﬂt
 *
	tvÆue
);

9124 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM1UIEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLuöà
	tv0
);

9125 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM2UIEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLuöà
	tv0
, GLuöà
	tv1
);

9126 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM3UIEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLuöà
	tv0
, GLuöà
	tv1
, GLuöà
	tv2
);

9127 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM4UIEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, GLuöà
	tv0
, GLuöà
	tv1
, GLuöà
	tv2
, GLuöà
	tv3
);

9128 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM1UIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà*
	tvÆue
);

9129 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM2UIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà*
	tvÆue
);

9130 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM3UIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà*
	tvÆue
);

9131 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORM4UIVEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° GLuöà*
	tvÆue
);

9132 (
APIENTRYP
 
	tPFNGLNAMEDBUFFERDATAEXTPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLsizeùå
 
	tsize
, c⁄° 
	tGLvoid
 *
	td©a
, 
	tGLíum
 
	tußge
);

9133 (
APIENTRYP
 
	tPFNGLNAMEDBUFFERSUBDATAEXTPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
, c⁄° 
	tGLvoid
 *
	td©a
);

9134 
	gGLvoid
* (
	tAPIENTRYP
 
	tPFNGLMAPNAMEDBUFFEREXTPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLíum
 
	tac˚ss
);

9135 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLUNMAPNAMEDBUFFEREXTPROC
Ë(
	tGLuöt
 
	tbuf„r
);

9136 (
APIENTRYP
 
	tPFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9137 (
APIENTRYP
 
	tPFNGLGETNAMEDBUFFERPOINTERVEXTPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLíum
 
	t≤ame
, 
	tGLvoid
* *
	t∑øms
);

9138 (
APIENTRYP
 
	tPFNGLGETNAMEDBUFFERSUBDATAEXTPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLöçå
 
	toff£t
, 
	tGLsizeùå
 
	tsize
, 
	tGLvoid
 *
	td©a
);

9139 (
APIENTRYP
 
	tPFNGLTEXTUREBUFFEREXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, GLuöà
	tbuf„r
);

9140 (
APIENTRYP
 
	tPFNGLMULTITEXBUFFEREXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, GLíum 
	töã∫Æf‹m©
, 
	tGLuöt
 
	tbuf„r
);

9141 (
APIENTRYP
 
	tPFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC
Ë(
	tGLuöt
 
	tªndîbuf„r
, 
	tGLíum
 
	töã∫Æf‹m©
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
);

9142 (
APIENTRYP
 
	tPFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC
Ë(
	tGLuöt
 
	tªndîbuf„r
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9143 
GLíum
 (
	tAPIENTRYP
 
	tPFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	tèrgë
);

9144 (
APIENTRYP
 
	tPFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t©èchmít
, GLíum 
	tãxèrgë
, GLuöà
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

9145 (
APIENTRYP
 
	tPFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t©èchmít
, GLíum 
	tãxèrgë
, GLuöà
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

9146 (
APIENTRYP
 
	tPFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t©èchmít
, GLíum 
	tãxèrgë
, GLuöà
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tzoff£t
);

9147 (
APIENTRYP
 
	tPFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t©èchmít
, GLíum 
	tªndîbuf„π¨gë
, GLuöà
	tªndîbuf„r
);

9148 (
APIENTRYP
 
	tPFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t©èchmít
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9149 (
APIENTRYP
 
	tPFNGLGENERATETEXTUREMIPMAPEXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
);

9150 (
APIENTRYP
 
	tPFNGLGENERATEMULTITEXMIPMAPEXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
);

9151 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERDRAWBUFFEREXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	tmode
);

9152 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLsizei
 
	tn
, c⁄° 
	tGLíum
 *
	tbufs
);

9153 (
APIENTRYP
 
	tPFNGLFRAMEBUFFERREADBUFFEREXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	tmode
);

9154 (
APIENTRYP
 
	tPFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9155 (
APIENTRYP
 
	tPFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
Ë(
	tGLuöt
 
	tªndîbuf„r
, 
	tGLsizei
 
	tßm∂es
, 
	tGLíum
 
	töã∫Æf‹m©
, GLsizeò
	twidth
, GLsizeò
	theight
);

9156 (
APIENTRYP
 
	tPFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC
Ë(
	tGLuöt
 
	tªndîbuf„r
, 
	tGLsizei
 
	tcovîageSam∂es
, GLsizeò
	tcﬁ‹Sam∂es
, 
	tGLíum
 
	töã∫Æf‹m©
, GLsizeò
	twidth
, GLsizeò
	theight
);

9157 (
APIENTRYP
 
	tPFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t©èchmít
, GLuöà
	tãxtuª
, 
	tGLöt
 
	tÀvñ
);

9158 (
APIENTRYP
 
	tPFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t©èchmít
, GLuöà
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLöà
	tœyî
);

9159 (
APIENTRYP
 
	tPFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC
Ë(
	tGLuöt
 
	t‰amebuf„r
, 
	tGLíum
 
	t©èchmít
, GLuöà
	tãxtuª
, 
	tGLöt
 
	tÀvñ
, GLíum 
	tÁ˚
);

9160 (
APIENTRYP
 
	tPFNGLTEXTURERENDERBUFFEREXTPROC
Ë(
	tGLuöt
 
	tãxtuª
, 
	tGLíum
 
	tèrgë
, GLuöà
	tªndîbuf„r
);

9161 (
APIENTRYP
 
	tPFNGLMULTITEXRENDERBUFFEREXTPROC
Ë(
	tGLíum
 
	tãxunô
, GLíum 
	tèrgë
, 
	tGLuöt
 
	tªndîbuf„r
);

9164 #i‚de‡
GL_EXT_vîãx_¨øy_bgø


9165 
	#GL_EXT_vîãx_¨øy_bgø
 1

	)

9168 #i‚de‡
GL_EXT_ãxtuª_swizzÀ


9169 
	#GL_EXT_ãxtuª_swizzÀ
 1

	)

9172 #i‚de‡
GL_NV_ex∂icô_mu…ißm∂e


9173 
	#GL_NV_ex∂icô_mu…ißm∂e
 1

	)

9174 #ifde‡
GL_GLEXT_PROTOTYPES


9175 
GLAPI
 
APIENTRY
 
glGëMu…ißm∂efvNV
 (
GLíum
, 
GLuöt
, 
GLÊﬂt
 *);

9176 
GLAPI
 
APIENTRY
 
glSam∂eMaskIndexedNV
 (
GLuöt
, 
GLbôfõld
);

9177 
GLAPI
 
APIENTRY
 
glTexRídîbuf„rNV
 (
GLíum
, 
GLuöt
);

9179 (
APIENTRYP
 
	tPFNGLGETMULTISAMPLEFVNVPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLuöt
 
	tödex
, 
	tGLÊﬂt
 *
	tvÆ
);

9180 (
APIENTRYP
 
	tPFNGLSAMPLEMASKINDEXEDNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLbôfõld
 
	tmask
);

9181 (
APIENTRYP
 
	tPFNGLTEXRENDERBUFFERNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tªndîbuf„r
);

9184 #i‚de‡
GL_NV_å™sf‹m_„edback2


9185 
	#GL_NV_å™sf‹m_„edback2
 1

	)

9186 #ifde‡
GL_GLEXT_PROTOTYPES


9187 
GLAPI
 
APIENTRY
 
glBödTønsf‹mFìdbackNV
 (
GLíum
, 
GLuöt
);

9188 
GLAPI
 
APIENTRY
 
glDñëeTønsf‹mFìdbacksNV
 (
GLsizei
, c⁄° 
GLuöt
 *);

9189 
GLAPI
 
APIENTRY
 
glGíTønsf‹mFìdbacksNV
 (
GLsizei
, 
GLuöt
 *);

9190 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsTønsf‹mFìdbackNV
 (
GLuöt
);

9191 
GLAPI
 
APIENTRY
 
glPau£Tønsf‹mFìdbackNV
 ();

9192 
GLAPI
 
APIENTRY
 
glResumeTønsf‹mFìdbackNV
 ();

9193 
GLAPI
 
APIENTRY
 
glDøwTønsf‹mFìdbackNV
 (
GLíum
, 
GLuöt
);

9195 (
APIENTRYP
 
	tPFNGLBINDTRANSFORMFEEDBACKNVPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLuöt
 
	tid
);

9196 (
APIENTRYP
 
	tPFNGLDELETETRANSFORMFEEDBACKSNVPROC
Ë(
	tGLsizei
 
	tn
, c⁄° 
	tGLuöt
 *
	tids
);

9197 (
APIENTRYP
 
	tPFNGLGENTRANSFORMFEEDBACKSNVPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tids
);

9198 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISTRANSFORMFEEDBACKNVPROC
Ë(
	tGLuöt
 
	tid
);

9199 (
APIENTRYP
 
	tPFNGLPAUSETRANSFORMFEEDBACKNVPROC
) ();

9200 (
APIENTRYP
 
	tPFNGLRESUMETRANSFORMFEEDBACKNVPROC
) ();

9201 (
APIENTRYP
 
	tPFNGLDRAWTRANSFORMFEEDBACKNVPROC
Ë(
	tGLíum
 
	tmode
, 
	tGLuöt
 
	tid
);

9204 #i‚de‡
GL_ATI_memöfo


9205 
	#GL_ATI_memöfo
 1

	)

9208 #i‚de‡
GL_AMD_≥rf‹m™˚_m⁄ô‹


9209 
	#GL_AMD_≥rf‹m™˚_m⁄ô‹
 1

	)

9210 #ifde‡
GL_GLEXT_PROTOTYPES


9211 
GLAPI
 
APIENTRY
 
glGëPîfM⁄ô‹GroupsAMD
 (
GLöt
 *, 
GLsizei
, 
GLuöt
 *);

9212 
GLAPI
 
APIENTRY
 
glGëPîfM⁄ô‹Cou¡îsAMD
 (
GLuöt
, 
GLöt
 *, GLöà*, 
GLsizei
, GLuint *);

9213 
GLAPI
 
APIENTRY
 
glGëPîfM⁄ô‹GroupSåögAMD
 (
GLuöt
, 
GLsizei
, GLsizeò*, 
GLch¨
 *);

9214 
GLAPI
 
APIENTRY
 
glGëPîfM⁄ô‹Cou¡îSåögAMD
 (
GLuöt
, GLuöt, 
GLsizei
, GLsizeò*, 
GLch¨
 *);

9215 
GLAPI
 
APIENTRY
 
glGëPîfM⁄ô‹Cou¡îInfoAMD
 (
GLuöt
, GLuöt, 
GLíum
, *);

9216 
GLAPI
 
APIENTRY
 
glGíPîfM⁄ô‹sAMD
 (
GLsizei
, 
GLuöt
 *);

9217 
GLAPI
 
APIENTRY
 
glDñëePîfM⁄ô‹sAMD
 (
GLsizei
, 
GLuöt
 *);

9218 
GLAPI
 
APIENTRY
 
glSñe˘PîfM⁄ô‹Cou¡îsAMD
 (
GLuöt
, 
GLboﬁón
, GLuöt, 
GLöt
, GLuint *);

9219 
GLAPI
 
APIENTRY
 
glBegöPîfM⁄ô‹AMD
 (
GLuöt
);

9220 
GLAPI
 
APIENTRY
 
glEndPîfM⁄ô‹AMD
 (
GLuöt
);

9221 
GLAPI
 
APIENTRY
 
glGëPîfM⁄ô‹Cou¡îD©aAMD
 (
GLuöt
, 
GLíum
, 
GLsizei
, GLuöà*, 
GLöt
 *);

9223 (
APIENTRYP
 
	tPFNGLGETPERFMONITORGROUPSAMDPROC
Ë(
	tGLöt
 *
	tnumGroups
, 
	tGLsizei
 
	tgroupsSize
, 
	tGLuöt
 *
	tgroups
);

9224 (
APIENTRYP
 
	tPFNGLGETPERFMONITORCOUNTERSAMDPROC
Ë(
	tGLuöt
 
	tgroup
, 
	tGLöt
 *
	tnumCou¡îs
, GLöà*
	tmaxA˘iveCou¡îs
, 
	tGLsizei
 
	tcou¡îSize
, GLuöà*
	tcou¡îs
);

9225 (
APIENTRYP
 
	tPFNGLGETPERFMONITORGROUPSTRINGAMDPROC
Ë(
	tGLuöt
 
	tgroup
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLch¨
 *
	tgroupSåög
);

9226 (
APIENTRYP
 
	tPFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC
Ë(
	tGLuöt
 
	tgroup
, GLuöà
	tcou¡î
, 
	tGLsizei
 
	tbufSize
, GLsizeò*
	tÀngth
, 
	tGLch¨
 *
	tcou¡îSåög
);

9227 (
APIENTRYP
 
	tPFNGLGETPERFMONITORCOUNTERINFOAMDPROC
Ë(
	tGLuöt
 
	tgroup
, GLuöà
	tcou¡î
, 
	tGLíum
 
	t≤ame
, *
	td©a
);

9228 (
APIENTRYP
 
	tPFNGLGENPERFMONITORSAMDPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tm⁄ô‹s
);

9229 (
APIENTRYP
 
	tPFNGLDELETEPERFMONITORSAMDPROC
Ë(
	tGLsizei
 
	tn
, 
	tGLuöt
 *
	tm⁄ô‹s
);

9230 (
APIENTRYP
 
	tPFNGLSELECTPERFMONITORCOUNTERSAMDPROC
Ë(
	tGLuöt
 
	tm⁄ô‹
, 
	tGLboﬁón
 
	tíabÀ
, GLuöà
	tgroup
, 
	tGLöt
 
	tnumCou¡îs
, GLuöà*
	tcou¡îLi°
);

9231 (
APIENTRYP
 
	tPFNGLBEGINPERFMONITORAMDPROC
Ë(
	tGLuöt
 
	tm⁄ô‹
);

9232 (
APIENTRYP
 
	tPFNGLENDPERFMONITORAMDPROC
Ë(
	tGLuöt
 
	tm⁄ô‹
);

9233 (
APIENTRYP
 
	tPFNGLGETPERFMONITORCOUNTERDATAAMDPROC
Ë(
	tGLuöt
 
	tm⁄ô‹
, 
	tGLíum
 
	t≤ame
, 
	tGLsizei
 
	td©aSize
, GLuöà*
	td©a
, 
	tGLöt
 *
	tbyãsWrôãn
);

9236 #i‚de‡
GL_AMD_ãxtuª_ãxtuª4


9237 
	#GL_AMD_ãxtuª_ãxtuª4
 1

	)

9240 #i‚de‡
GL_AMD_vîãx_shadî_ãs£œt‹


9241 
	#GL_AMD_vîãx_shadî_ãs£œt‹
 1

	)

9242 #ifde‡
GL_GLEXT_PROTOTYPES


9243 
GLAPI
 
APIENTRY
 
glTes£Œ©i⁄Fa˘‹AMD
 (
GLÊﬂt
);

9244 
GLAPI
 
APIENTRY
 
glTes£Œ©i⁄ModeAMD
 (
GLíum
);

9246 (
APIENTRYP
 
	tPFNGLTESSELLATIONFACTORAMDPROC
Ë(
	tGLÊﬂt
 
	tÁ˘‹
);

9247 (
APIENTRYP
 
	tPFNGLTESSELLATIONMODEAMDPROC
Ë(
	tGLíum
 
	tmode
);

9250 #i‚de‡
GL_EXT_¥ovokög_vîãx


9251 
	#GL_EXT_¥ovokög_vîãx
 1

	)

9252 #ifde‡
GL_GLEXT_PROTOTYPES


9253 
GLAPI
 
APIENTRY
 
glProvokögVîãxEXT
 (
GLíum
);

9255 (
APIENTRYP
 
	tPFNGLPROVOKINGVERTEXEXTPROC
Ë(
	tGLíum
 
	tmode
);

9258 #i‚de‡
GL_EXT_ãxtuª_¢‹m


9259 
	#GL_EXT_ãxtuª_¢‹m
 1

	)

9262 #i‚de‡
GL_AMD_døw_buf„rs_bÀnd


9263 
	#GL_AMD_døw_buf„rs_bÀnd
 1

	)

9264 #ifde‡
GL_GLEXT_PROTOTYPES


9265 
GLAPI
 
APIENTRY
 
glBÀndFuncIndexedAMD
 (
GLuöt
, 
GLíum
, GLenum);

9266 
GLAPI
 
APIENTRY
 
glBÀndFuncSï¨©eIndexedAMD
 (
GLuöt
, 
GLíum
, GLenum, GLenum, GLenum);

9267 
GLAPI
 
APIENTRY
 
glBÀndEqu©i⁄IndexedAMD
 (
GLuöt
, 
GLíum
);

9268 
GLAPI
 
APIENTRY
 
glBÀndEqu©i⁄Sï¨©eIndexedAMD
 (
GLuöt
, 
GLíum
, GLenum);

9270 (
APIENTRYP
 
	tPFNGLBLENDFUNCINDEXEDAMDPROC
Ë(
	tGLuöt
 
	tbuf
, 
	tGLíum
 
	t§c
, GLíum 
	td°
);

9271 (
APIENTRYP
 
	tPFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC
Ë(
	tGLuöt
 
	tbuf
, 
	tGLíum
 
	t§cRGB
, GLíum 
	td°RGB
, GLíum 
	t§cAÕha
, GLíum 
	td°AÕha
);

9272 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONINDEXEDAMDPROC
Ë(
	tGLuöt
 
	tbuf
, 
	tGLíum
 
	tmode
);

9273 (
APIENTRYP
 
	tPFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC
Ë(
	tGLuöt
 
	tbuf
, 
	tGLíum
 
	tmodeRGB
, GLíum 
	tmodeAÕha
);

9276 #i‚de‡
GL_APPLE_ãxtuª_ønge


9277 
	#GL_APPLE_ãxtuª_ønge
 1

	)

9278 #ifde‡
GL_GLEXT_PROTOTYPES


9279 
GLAPI
 
APIENTRY
 
glTextuªR™geAPPLE
 (
GLíum
, 
GLsizei
, c⁄° 
GLvoid
 *);

9280 
GLAPI
 
APIENTRY
 
glGëTexP¨amëîPoöãrvAPPLE
 (
GLíum
, GLíum, 
GLvoid
* *);

9282 (
APIENTRYP
 
	tPFNGLTEXTURERANGEAPPLEPROC
Ë(
	tGLíum
 
	tèrgë
, 
	tGLsizei
 
	tÀngth
, c⁄° 
	tGLvoid
 *
	tpoöãr
);

9283 (
APIENTRYP
 
	tPFNGLGETTEXPARAMETERPOINTERVAPPLEPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLvoid
* *
	t∑øms
);

9286 #i‚de‡
GL_APPLE_Êﬂt_pixñs


9287 
	#GL_APPLE_Êﬂt_pixñs
 1

	)

9290 #i‚de‡
GL_APPLE_vîãx_¥ogøm_evÆu©‹s


9291 
	#GL_APPLE_vîãx_¥ogøm_evÆu©‹s
 1

	)

9292 #ifde‡
GL_GLEXT_PROTOTYPES


9293 
GLAPI
 
APIENTRY
 
glE«bÀVîãxAâribAPPLE
 (
GLuöt
, 
GLíum
);

9294 
GLAPI
 
APIENTRY
 
glDißbÀVîãxAâribAPPLE
 (
GLuöt
, 
GLíum
);

9295 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsVîãxAâribE«bÀdAPPLE
 (
GLuöt
, 
GLíum
);

9296 
GLAPI
 
APIENTRY
 
glM≠VîãxAârib1dAPPLE
 (
GLuöt
, GLuöt, 
GLdoubÀ
, GLdoubÀ, 
GLöt
, GLint, const GLdouble *);

9297 
GLAPI
 
APIENTRY
 
glM≠VîãxAârib1fAPPLE
 (
GLuöt
, GLuöt, 
GLÊﬂt
, GLÊﬂt, 
GLöt
, GLint, const GLfloat *);

9298 
GLAPI
 
APIENTRY
 
glM≠VîãxAârib2dAPPLE
 (
GLuöt
, GLuöt, 
GLdoubÀ
, GLdoubÀ, 
GLöt
, GLint, GLdouble, GLdouble, GLint, GLint, const GLdouble *);

9299 
GLAPI
 
APIENTRY
 
glM≠VîãxAârib2fAPPLE
 (
GLuöt
, GLuöt, 
GLÊﬂt
, GLÊﬂt, 
GLöt
, GLint, GLfloat, GLfloat, GLint, GLint, const GLfloat *);

9301 (
APIENTRYP
 
	tPFNGLENABLEVERTEXATTRIBAPPLEPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
);

9302 (
APIENTRYP
 
	tPFNGLDISABLEVERTEXATTRIBAPPLEPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
);

9303 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISVERTEXATTRIBENABLEDAPPLEPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLíum
 
	t≤ame
);

9304 (
APIENTRYP
 
	tPFNGLMAPVERTEXATTRIB1DAPPLEPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tsize
, 
	tGLdoubÀ
 
	tu1
, GLdoubÀ 
	tu2
, 
	tGLöt
 
	t°ride
, GLöà
	t‹dî
, c⁄° GLdoubÀ *
	tpoöts
);

9305 (
APIENTRYP
 
	tPFNGLMAPVERTEXATTRIB1FAPPLEPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tsize
, 
	tGLÊﬂt
 
	tu1
, GLÊﬂà
	tu2
, 
	tGLöt
 
	t°ride
, GLöà
	t‹dî
, c⁄° GLÊﬂà*
	tpoöts
);

9306 (
APIENTRYP
 
	tPFNGLMAPVERTEXATTRIB2DAPPLEPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tsize
, 
	tGLdoubÀ
 
	tu1
, GLdoubÀ 
	tu2
, 
	tGLöt
 
	tu°ride
, GLöà
	tu‹dî
, GLdoubÀ 
	tv1
, GLdoubÀ 
	tv2
, GLöà
	tv°ride
, GLöà
	tv‹dî
, c⁄° GLdoubÀ *
	tpoöts
);

9307 (
APIENTRYP
 
	tPFNGLMAPVERTEXATTRIB2FAPPLEPROC
Ë(
	tGLuöt
 
	tödex
, GLuöà
	tsize
, 
	tGLÊﬂt
 
	tu1
, GLÊﬂà
	tu2
, 
	tGLöt
 
	tu°ride
, GLöà
	tu‹dî
, GLÊﬂà
	tv1
, GLÊﬂà
	tv2
, GLöà
	tv°ride
, GLöà
	tv‹dî
, c⁄° GLÊﬂà*
	tpoöts
);

9310 #i‚de‡
GL_APPLE_aux_dïth_°ícû


9311 
	#GL_APPLE_aux_dïth_°ícû
 1

	)

9314 #i‚de‡
GL_APPLE_obje˘_purgóbÀ


9315 
	#GL_APPLE_obje˘_purgóbÀ
 1

	)

9316 #ifde‡
GL_GLEXT_PROTOTYPES


9317 
GLAPI
 
GLíum
 
APIENTRY
 
glObje˘PurgóbÀAPPLE
 (GLíum, 
GLuöt
, GLenum);

9318 
GLAPI
 
GLíum
 
APIENTRY
 
glObje˘U≈urgóbÀAPPLE
 (GLíum, 
GLuöt
, GLenum);

9319 
GLAPI
 
APIENTRY
 
glGëObje˘P¨amëîivAPPLE
 (
GLíum
, 
GLuöt
, GLíum, 
GLöt
 *);

9321 
GLíum
 (
	tAPIENTRYP
 
	tPFNGLOBJECTPURGEABLEAPPLEPROC
Ë(
	tGLíum
 
	tobje˘Ty≥
, 
	tGLuöt
 
	t«me
, GLíum 
	t›ti⁄
);

9322 
GLíum
 (
	tAPIENTRYP
 
	tPFNGLOBJECTUNPURGEABLEAPPLEPROC
Ë(
	tGLíum
 
	tobje˘Ty≥
, 
	tGLuöt
 
	t«me
, GLíum 
	t›ti⁄
);

9323 (
APIENTRYP
 
	tPFNGLGETOBJECTPARAMETERIVAPPLEPROC
Ë(
	tGLíum
 
	tobje˘Ty≥
, 
	tGLuöt
 
	t«me
, GLíum 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9326 #i‚de‡
GL_APPLE_row_byãs


9327 
	#GL_APPLE_row_byãs
 1

	)

9330 #i‚de‡
GL_APPLE_rgb_422


9331 
	#GL_APPLE_rgb_422
 1

	)

9334 #i‚de‡
GL_NV_video_ˇ±uª


9335 
	#GL_NV_video_ˇ±uª
 1

	)

9336 #ifde‡
GL_GLEXT_PROTOTYPES


9337 
GLAPI
 
APIENTRY
 
glBegöVideoC≠tuªNV
 (
GLuöt
);

9338 
GLAPI
 
APIENTRY
 
glBödVideoC≠tuªSåómBuf„rNV
 (
GLuöt
, GLuöt, 
GLíum
, 
GLöçåARB
);

9339 
GLAPI
 
APIENTRY
 
glBödVideoC≠tuªSåómTextuªNV
 (
GLuöt
, GLuöt, 
GLíum
, GLenum, GLuint);

9340 
GLAPI
 
APIENTRY
 
glEndVideoC≠tuªNV
 (
GLuöt
);

9341 
GLAPI
 
APIENTRY
 
glGëVideoC≠tuªivNV
 (
GLuöt
, 
GLíum
, 
GLöt
 *);

9342 
GLAPI
 
APIENTRY
 
glGëVideoC≠tuªSåómivNV
 (
GLuöt
, GLuöt, 
GLíum
, 
GLöt
 *);

9343 
GLAPI
 
APIENTRY
 
glGëVideoC≠tuªSåómfvNV
 (
GLuöt
, GLuöt, 
GLíum
, 
GLÊﬂt
 *);

9344 
GLAPI
 
APIENTRY
 
glGëVideoC≠tuªSåómdvNV
 (
GLuöt
, GLuöt, 
GLíum
, 
GLdoubÀ
 *);

9345 
GLAPI
 
GLíum
 
APIENTRY
 
glVideoC≠tuªNV
 (
GLuöt
, GLuöà*, 
GLuöt64EXT
 *);

9346 
GLAPI
 
APIENTRY
 
glVideoC≠tuªSåómP¨amëîivNV
 (
GLuöt
, GLuöt, 
GLíum
, c⁄° 
GLöt
 *);

9347 
GLAPI
 
APIENTRY
 
glVideoC≠tuªSåómP¨amëîfvNV
 (
GLuöt
, GLuöt, 
GLíum
, c⁄° 
GLÊﬂt
 *);

9348 
GLAPI
 
APIENTRY
 
glVideoC≠tuªSåómP¨amëîdvNV
 (
GLuöt
, GLuöt, 
GLíum
, c⁄° 
GLdoubÀ
 *);

9350 (
APIENTRYP
 
	tPFNGLBEGINVIDEOCAPTURENVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
);

9351 (
APIENTRYP
 
	tPFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà
	t°ªam
, 
	tGLíum
 
	t‰ame_ªgi⁄
, 
	tGLöçåARB
 
	toff£t
);

9352 (
APIENTRYP
 
	tPFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà
	t°ªam
, 
	tGLíum
 
	t‰ame_ªgi⁄
, GLíum 
	tèrgë
, GLuöà
	tãxtuª
);

9353 (
APIENTRYP
 
	tPFNGLENDVIDEOCAPTURENVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
);

9354 (
APIENTRYP
 
	tPFNGLGETVIDEOCAPTUREIVNVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9355 (
APIENTRYP
 
	tPFNGLGETVIDEOCAPTURESTREAMIVNVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà
	t°ªam
, 
	tGLíum
 
	t≤ame
, 
	tGLöt
 *
	t∑øms
);

9356 (
APIENTRYP
 
	tPFNGLGETVIDEOCAPTURESTREAMFVNVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà
	t°ªam
, 
	tGLíum
 
	t≤ame
, 
	tGLÊﬂt
 *
	t∑øms
);

9357 (
APIENTRYP
 
	tPFNGLGETVIDEOCAPTURESTREAMDVNVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà
	t°ªam
, 
	tGLíum
 
	t≤ame
, 
	tGLdoubÀ
 *
	t∑øms
);

9358 
GLíum
 (
	tAPIENTRYP
 
	tPFNGLVIDEOCAPTURENVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà*
	t£quí˚_num
, 
	tGLuöt64EXT
 *
	tˇ±uª_time
);

9359 (
APIENTRYP
 
	tPFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà
	t°ªam
, 
	tGLíum
 
	t≤ame
, c⁄° 
	tGLöt
 *
	t∑øms
);

9360 (
APIENTRYP
 
	tPFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà
	t°ªam
, 
	tGLíum
 
	t≤ame
, c⁄° 
	tGLÊﬂt
 *
	t∑øms
);

9361 (
APIENTRYP
 
	tPFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC
Ë(
	tGLuöt
 
	tvideo_ˇ±uª_¶Ÿ
, GLuöà
	t°ªam
, 
	tGLíum
 
	t≤ame
, c⁄° 
	tGLdoubÀ
 *
	t∑øms
);

9364 #i‚de‡
GL_NV_c›y_image


9365 
	#GL_NV_c›y_image
 1

	)

9366 #ifde‡
GL_GLEXT_PROTOTYPES


9367 
GLAPI
 
APIENTRY
 
glC›yImageSubD©aNV
 (
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, GLuöt, GLíum, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei);

9369 (
APIENTRYP
 
	tPFNGLCOPYIMAGESUBDATANVPROC
Ë(
	tGLuöt
 
	t§cName
, 
	tGLíum
 
	t§cT¨gë
, 
	tGLöt
 
	t§cLevñ
, GLöà
	t§cX
, GLöà
	t§cY
, GLöà
	t§cZ
, GLuöà
	td°Name
, GLíum 
	td°T¨gë
, GLöà
	td°Levñ
, GLöà
	td°X
, GLöà
	td°Y
, GLöà
	td°Z
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
);

9372 #i‚de‡
GL_EXT_£∑øã_shadî_obje˘s


9373 
	#GL_EXT_£∑øã_shadî_obje˘s
 1

	)

9374 #ifde‡
GL_GLEXT_PROTOTYPES


9375 
GLAPI
 
APIENTRY
 
glU£ShadîProgømEXT
 (
GLíum
, 
GLuöt
);

9376 
GLAPI
 
APIENTRY
 
glA˘iveProgømEXT
 (
GLuöt
);

9377 
GLAPI
 
GLuöt
 
APIENTRY
 
glCª©eShadîProgømEXT
 (
GLíum
, c⁄° 
GLch¨
 *);

9379 (
APIENTRYP
 
	tPFNGLUSESHADERPROGRAMEXTPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLuöt
 
	t¥ogøm
);

9380 (
APIENTRYP
 
	tPFNGLACTIVEPROGRAMEXTPROC
Ë(
	tGLuöt
 
	t¥ogøm
);

9381 
GLuöt
 (
	tAPIENTRYP
 
	tPFNGLCREATESHADERPROGRAMEXTPROC
Ë(
	tGLíum
 
	tty≥
, c⁄° 
	tGLch¨
 *
	t°rög
);

9384 #i‚de‡
GL_NV_∑ømëî_buf„r_obje˘2


9385 
	#GL_NV_∑ømëî_buf„r_obje˘2
 1

	)

9388 #i‚de‡
GL_NV_shadî_buf„r_lﬂd


9389 
	#GL_NV_shadî_buf„r_lﬂd
 1

	)

9390 #ifde‡
GL_GLEXT_PROTOTYPES


9391 
GLAPI
 
APIENTRY
 
glMakeBuf„rResidítNV
 (
GLíum
, GLenum);

9392 
GLAPI
 
APIENTRY
 
glMakeBuf„rN⁄ResidítNV
 (
GLíum
);

9393 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsBuf„rResidítNV
 (
GLíum
);

9394 
GLAPI
 
APIENTRY
 
glNamedMakeBuf„rResidítNV
 (
GLuöt
, 
GLíum
);

9395 
GLAPI
 
APIENTRY
 
glNamedMakeBuf„rN⁄ResidítNV
 (
GLuöt
);

9396 
GLAPI
 
GLboﬁón
 
APIENTRY
 
glIsNamedBuf„rResidítNV
 (
GLuöt
);

9397 
GLAPI
 
APIENTRY
 
glGëBuf„rP¨amëîui64vNV
 (
GLíum
, GLíum, 
GLuöt64EXT
 *);

9398 
GLAPI
 
APIENTRY
 
glGëNamedBuf„rP¨amëîui64vNV
 (
GLuöt
, 
GLíum
, 
GLuöt64EXT
 *);

9399 
GLAPI
 
APIENTRY
 
glGëI¡egîui64vNV
 (
GLíum
, 
GLuöt64EXT
 *);

9400 
GLAPI
 
APIENTRY
 
glUnif‹mui64NV
 (
GLöt
, 
GLuöt64EXT
);

9401 
GLAPI
 
APIENTRY
 
glUnif‹mui64vNV
 (
GLöt
, 
GLsizei
, c⁄° 
GLuöt64EXT
 *);

9402 
GLAPI
 
APIENTRY
 
glGëUnif‹mui64vNV
 (
GLuöt
, 
GLöt
, 
GLuöt64EXT
 *);

9403 
GLAPI
 
APIENTRY
 
glProgømUnif‹mui64NV
 (
GLuöt
, 
GLöt
, 
GLuöt64EXT
);

9404 
GLAPI
 
APIENTRY
 
glProgømUnif‹mui64vNV
 (
GLuöt
, 
GLöt
, 
GLsizei
, c⁄° 
GLuöt64EXT
 *);

9406 (
APIENTRYP
 
	tPFNGLMAKEBUFFERRESIDENTNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	tac˚ss
);

9407 (
APIENTRYP
 
	tPFNGLMAKEBUFFERNONRESIDENTNVPROC
Ë(
	tGLíum
 
	tèrgë
);

9408 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISBUFFERRESIDENTNVPROC
Ë(
	tGLíum
 
	tèrgë
);

9409 (
APIENTRYP
 
	tPFNGLNAMEDMAKEBUFFERRESIDENTNVPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLíum
 
	tac˚ss
);

9410 (
APIENTRYP
 
	tPFNGLNAMEDMAKEBUFFERNONRESIDENTNVPROC
Ë(
	tGLuöt
 
	tbuf„r
);

9411 
GLboﬁón
 (
	tAPIENTRYP
 
	tPFNGLISNAMEDBUFFERRESIDENTNVPROC
Ë(
	tGLuöt
 
	tbuf„r
);

9412 (
APIENTRYP
 
	tPFNGLGETBUFFERPARAMETERUI64VNVPROC
Ë(
	tGLíum
 
	tèrgë
, GLíum 
	t≤ame
, 
	tGLuöt64EXT
 *
	t∑øms
);

9413 (
APIENTRYP
 
	tPFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC
Ë(
	tGLuöt
 
	tbuf„r
, 
	tGLíum
 
	t≤ame
, 
	tGLuöt64EXT
 *
	t∑øms
);

9414 (
APIENTRYP
 
	tPFNGLGETINTEGERUI64VNVPROC
Ë(
	tGLíum
 
	tvÆue
, 
	tGLuöt64EXT
 *
	tªsu…
);

9415 (
APIENTRYP
 
	tPFNGLUNIFORMUI64NVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt64EXT
 
	tvÆue
);

9416 (
APIENTRYP
 
	tPFNGLUNIFORMUI64VNVPROC
Ë(
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt64EXT
 *
	tvÆue
);

9417 (
APIENTRYP
 
	tPFNGLGETUNIFORMUI64VNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt64EXT
 *
	t∑øms
);

9418 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMUI64NVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLuöt64EXT
 
	tvÆue
);

9419 (
APIENTRYP
 
	tPFNGLPROGRAMUNIFORMUI64VNVPROC
Ë(
	tGLuöt
 
	t¥ogøm
, 
	tGLöt
 
	tloˇti⁄
, 
	tGLsizei
 
	tcou¡
, c⁄° 
	tGLuöt64EXT
 *
	tvÆue
);

9422 #i‚de‡
GL_NV_vîãx_buf„r_unifõd_mem‹y


9423 
	#GL_NV_vîãx_buf„r_unifõd_mem‹y
 1

	)

9424 #ifde‡
GL_GLEXT_PROTOTYPES


9425 
GLAPI
 
APIENTRY
 
glBuf„rAddªssR™geNV
 (
GLíum
, 
GLuöt
, 
GLuöt64EXT
, 
GLsizeùå
);

9426 
GLAPI
 
APIENTRY
 
glVîãxF‹m©NV
 (
GLöt
, 
GLíum
, 
GLsizei
);

9427 
GLAPI
 
APIENTRY
 
glN‹mÆF‹m©NV
 (
GLíum
, 
GLsizei
);

9428 
GLAPI
 
APIENTRY
 
glCﬁ‹F‹m©NV
 (
GLöt
, 
GLíum
, 
GLsizei
);

9429 
GLAPI
 
APIENTRY
 
glIndexF‹m©NV
 (
GLíum
, 
GLsizei
);

9430 
GLAPI
 
APIENTRY
 
glTexCo‹dF‹m©NV
 (
GLöt
, 
GLíum
, 
GLsizei
);

9431 
GLAPI
 
APIENTRY
 
glEdgeFœgF‹m©NV
 (
GLsizei
);

9432 
GLAPI
 
APIENTRY
 
glSec⁄d¨yCﬁ‹F‹m©NV
 (
GLöt
, 
GLíum
, 
GLsizei
);

9433 
GLAPI
 
APIENTRY
 
glFogCo‹dF‹m©NV
 (
GLíum
, 
GLsizei
);

9434 
GLAPI
 
APIENTRY
 
glVîãxAâribF‹m©NV
 (
GLuöt
, 
GLöt
, 
GLíum
, 
GLboﬁón
, 
GLsizei
);

9435 
GLAPI
 
APIENTRY
 
glVîãxAâribIF‹m©NV
 (
GLuöt
, 
GLöt
, 
GLíum
, 
GLsizei
);

9436 
GLAPI
 
APIENTRY
 
glGëI¡egîui64i_vNV
 (
GLíum
, 
GLuöt
, 
GLuöt64EXT
 *);

9438 (
APIENTRYP
 
	tPFNGLBUFFERADDRESSRANGENVPROC
Ë(
	tGLíum
 
	t≤ame
, 
	tGLuöt
 
	tödex
, 
	tGLuöt64EXT
 
	taddªss
, 
	tGLsizeùå
 
	tÀngth
);

9439 (
APIENTRYP
 
	tPFNGLVERTEXFORMATNVPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
);

9440 (
APIENTRYP
 
	tPFNGLNORMALFORMATNVPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
);

9441 (
APIENTRYP
 
	tPFNGLCOLORFORMATNVPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
);

9442 (
APIENTRYP
 
	tPFNGLINDEXFORMATNVPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
);

9443 (
APIENTRYP
 
	tPFNGLTEXCOORDFORMATNVPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
);

9444 (
APIENTRYP
 
	tPFNGLEDGEFLAGFORMATNVPROC
Ë(
	tGLsizei
 
	t°ride
);

9445 (
APIENTRYP
 
	tPFNGLSECONDARYCOLORFORMATNVPROC
Ë(
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
);

9446 (
APIENTRYP
 
	tPFNGLFOGCOORDFORMATNVPROC
Ë(
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
);

9447 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBFORMATNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLboﬁón
 
	tn‹mÆized
, 
	tGLsizei
 
	t°ride
);

9448 (
APIENTRYP
 
	tPFNGLVERTEXATTRIBIFORMATNVPROC
Ë(
	tGLuöt
 
	tödex
, 
	tGLöt
 
	tsize
, 
	tGLíum
 
	tty≥
, 
	tGLsizei
 
	t°ride
);

9449 (
APIENTRYP
 
	tPFNGLGETINTEGERUI64I_VNVPROC
Ë(
	tGLíum
 
	tvÆue
, 
	tGLuöt
 
	tödex
, 
	tGLuöt64EXT
 *
	tªsu…
);

9452 #i‚de‡
GL_NV_ãxtuª_b¨rõr


9453 
	#GL_NV_ãxtuª_b¨rõr
 1

	)

9454 #ifde‡
GL_GLEXT_PROTOTYPES


9455 
GLAPI
 
APIENTRY
 
glTextuªB¨rõrNV
 ();

9457 (
APIENTRYP
 
	tPFNGLTEXTUREBARRIERNVPROC
) ();

9461 #ifde‡
__˝lu•lus


	@/usr/include/GL/glu.h

31 #i‚de‡
__glu_h__


32 
	#__glu_h__


	)

34 #i‡
deföed
(
USE_MGL_NAMESPACE
)

35 
	~"glu_m™gÀ.h
"

38 
	~<GL/gl.h
>

40 #i‚de‡
GLAPIENTRY


41 #i‡
deföed
(
_MSC_VER
Ë|| deföed(
__MINGW32__
)

42 
	#GLAPIENTRY
 
__°dˇŒ


	)

44 
	#GLAPIENTRY


	)

48 #i‚de‡
GLAPIENTRYP


49 
	#GLAPIENTRYP
 
GLAPIENTRY
 *

	)

52 #i‡(
deföed
(
_MSC_VER
Ë|| deföed(
__MINGW32__
)Ë&& deföed(
BUILD_GLU32
)

53 #unde‡
GLAPI


54 
	#GLAPI
 
	`__de˛•ec
(
dŒexp‹t
)

	)

55 #ñi‡(
deföed
(
_MSC_VER
Ë|| deföed(
__MINGW32__
)Ë&& deföed(
_DLL
)

57 #unde‡
GLAPI


58 
	#GLAPI
 
	`__de˛•ec
(
dŒimp‹t
)

	)

59 #ñi‡!
deföed
(
GLAPI
)

61 
	#GLAPI
 

	)

64 #ifde‡
__˝lu•lus


71 
	#GLU_EXT_obje˘_•a˚_ãss
 1

	)

72 
	#GLU_EXT_nurbs_ãs£Œ©‹
 1

	)

75 
	#GLU_FALSE
 0

	)

76 
	#GLU_TRUE
 1

	)

79 
	#GLU_VERSION_1_1
 1

	)

80 
	#GLU_VERSION_1_2
 1

	)

81 
	#GLU_VERSION_1_3
 1

	)

84 
	#GLU_VERSION
 100800

	)

85 
	#GLU_EXTENSIONS
 100801

	)

88 
	#GLU_INVALID_ENUM
 100900

	)

89 
	#GLU_INVALID_VALUE
 100901

	)

90 
	#GLU_OUT_OF_MEMORY
 100902

	)

91 
	#GLU_INCOMPATIBLE_GL_VERSION
 100903

	)

92 
	#GLU_INVALID_OPERATION
 100904

	)

96 
	#GLU_OUTLINE_POLYGON
 100240

	)

97 
	#GLU_OUTLINE_PATCH
 100241

	)

100 
	#GLU_NURBS_ERROR
 100103

	)

101 
	#GLU_ERROR
 100103

	)

102 
	#GLU_NURBS_BEGIN
 100164

	)

103 
	#GLU_NURBS_BEGIN_EXT
 100164

	)

104 
	#GLU_NURBS_VERTEX
 100165

	)

105 
	#GLU_NURBS_VERTEX_EXT
 100165

	)

106 
	#GLU_NURBS_NORMAL
 100166

	)

107 
	#GLU_NURBS_NORMAL_EXT
 100166

	)

108 
	#GLU_NURBS_COLOR
 100167

	)

109 
	#GLU_NURBS_COLOR_EXT
 100167

	)

110 
	#GLU_NURBS_TEXTURE_COORD
 100168

	)

111 
	#GLU_NURBS_TEX_COORD_EXT
 100168

	)

112 
	#GLU_NURBS_END
 100169

	)

113 
	#GLU_NURBS_END_EXT
 100169

	)

114 
	#GLU_NURBS_BEGIN_DATA
 100170

	)

115 
	#GLU_NURBS_BEGIN_DATA_EXT
 100170

	)

116 
	#GLU_NURBS_VERTEX_DATA
 100171

	)

117 
	#GLU_NURBS_VERTEX_DATA_EXT
 100171

	)

118 
	#GLU_NURBS_NORMAL_DATA
 100172

	)

119 
	#GLU_NURBS_NORMAL_DATA_EXT
 100172

	)

120 
	#GLU_NURBS_COLOR_DATA
 100173

	)

121 
	#GLU_NURBS_COLOR_DATA_EXT
 100173

	)

122 
	#GLU_NURBS_TEXTURE_COORD_DATA
 100174

	)

123 
	#GLU_NURBS_TEX_COORD_DATA_EXT
 100174

	)

124 
	#GLU_NURBS_END_DATA
 100175

	)

125 
	#GLU_NURBS_END_DATA_EXT
 100175

	)

128 
	#GLU_NURBS_ERROR1
 100251

	)

129 
	#GLU_NURBS_ERROR2
 100252

	)

130 
	#GLU_NURBS_ERROR3
 100253

	)

131 
	#GLU_NURBS_ERROR4
 100254

	)

132 
	#GLU_NURBS_ERROR5
 100255

	)

133 
	#GLU_NURBS_ERROR6
 100256

	)

134 
	#GLU_NURBS_ERROR7
 100257

	)

135 
	#GLU_NURBS_ERROR8
 100258

	)

136 
	#GLU_NURBS_ERROR9
 100259

	)

137 
	#GLU_NURBS_ERROR10
 100260

	)

138 
	#GLU_NURBS_ERROR11
 100261

	)

139 
	#GLU_NURBS_ERROR12
 100262

	)

140 
	#GLU_NURBS_ERROR13
 100263

	)

141 
	#GLU_NURBS_ERROR14
 100264

	)

142 
	#GLU_NURBS_ERROR15
 100265

	)

143 
	#GLU_NURBS_ERROR16
 100266

	)

144 
	#GLU_NURBS_ERROR17
 100267

	)

145 
	#GLU_NURBS_ERROR18
 100268

	)

146 
	#GLU_NURBS_ERROR19
 100269

	)

147 
	#GLU_NURBS_ERROR20
 100270

	)

148 
	#GLU_NURBS_ERROR21
 100271

	)

149 
	#GLU_NURBS_ERROR22
 100272

	)

150 
	#GLU_NURBS_ERROR23
 100273

	)

151 
	#GLU_NURBS_ERROR24
 100274

	)

152 
	#GLU_NURBS_ERROR25
 100275

	)

153 
	#GLU_NURBS_ERROR26
 100276

	)

154 
	#GLU_NURBS_ERROR27
 100277

	)

155 
	#GLU_NURBS_ERROR28
 100278

	)

156 
	#GLU_NURBS_ERROR29
 100279

	)

157 
	#GLU_NURBS_ERROR30
 100280

	)

158 
	#GLU_NURBS_ERROR31
 100281

	)

159 
	#GLU_NURBS_ERROR32
 100282

	)

160 
	#GLU_NURBS_ERROR33
 100283

	)

161 
	#GLU_NURBS_ERROR34
 100284

	)

162 
	#GLU_NURBS_ERROR35
 100285

	)

163 
	#GLU_NURBS_ERROR36
 100286

	)

164 
	#GLU_NURBS_ERROR37
 100287

	)

167 
	#GLU_AUTO_LOAD_MATRIX
 100200

	)

168 
	#GLU_CULLING
 100201

	)

169 
	#GLU_SAMPLING_TOLERANCE
 100203

	)

170 
	#GLU_DISPLAY_MODE
 100204

	)

171 
	#GLU_PARAMETRIC_TOLERANCE
 100202

	)

172 
	#GLU_SAMPLING_METHOD
 100205

	)

173 
	#GLU_U_STEP
 100206

	)

174 
	#GLU_V_STEP
 100207

	)

175 
	#GLU_NURBS_MODE
 100160

	)

176 
	#GLU_NURBS_MODE_EXT
 100160

	)

177 
	#GLU_NURBS_TESSELLATOR
 100161

	)

178 
	#GLU_NURBS_TESSELLATOR_EXT
 100161

	)

179 
	#GLU_NURBS_RENDERER
 100162

	)

180 
	#GLU_NURBS_RENDERER_EXT
 100162

	)

183 
	#GLU_OBJECT_PARAMETRIC_ERROR
 100208

	)

184 
	#GLU_OBJECT_PARAMETRIC_ERROR_EXT
 100208

	)

185 
	#GLU_OBJECT_PATH_LENGTH
 100209

	)

186 
	#GLU_OBJECT_PATH_LENGTH_EXT
 100209

	)

187 
	#GLU_PATH_LENGTH
 100215

	)

188 
	#GLU_PARAMETRIC_ERROR
 100216

	)

189 
	#GLU_DOMAIN_DISTANCE
 100217

	)

192 
	#GLU_MAP1_TRIM_2
 100210

	)

193 
	#GLU_MAP1_TRIM_3
 100211

	)

196 
	#GLU_POINT
 100010

	)

197 
	#GLU_LINE
 100011

	)

198 
	#GLU_FILL
 100012

	)

199 
	#GLU_SILHOUETTE
 100013

	)

205 
	#GLU_SMOOTH
 100000

	)

206 
	#GLU_FLAT
 100001

	)

207 
	#GLU_NONE
 100002

	)

210 
	#GLU_OUTSIDE
 100020

	)

211 
	#GLU_INSIDE
 100021

	)

214 
	#GLU_TESS_BEGIN
 100100

	)

215 
	#GLU_BEGIN
 100100

	)

216 
	#GLU_TESS_VERTEX
 100101

	)

217 
	#GLU_VERTEX
 100101

	)

218 
	#GLU_TESS_END
 100102

	)

219 
	#GLU_END
 100102

	)

220 
	#GLU_TESS_ERROR
 100103

	)

221 
	#GLU_TESS_EDGE_FLAG
 100104

	)

222 
	#GLU_EDGE_FLAG
 100104

	)

223 
	#GLU_TESS_COMBINE
 100105

	)

224 
	#GLU_TESS_BEGIN_DATA
 100106

	)

225 
	#GLU_TESS_VERTEX_DATA
 100107

	)

226 
	#GLU_TESS_END_DATA
 100108

	)

227 
	#GLU_TESS_ERROR_DATA
 100109

	)

228 
	#GLU_TESS_EDGE_FLAG_DATA
 100110

	)

229 
	#GLU_TESS_COMBINE_DATA
 100111

	)

232 
	#GLU_CW
 100120

	)

233 
	#GLU_CCW
 100121

	)

234 
	#GLU_INTERIOR
 100122

	)

235 
	#GLU_EXTERIOR
 100123

	)

236 
	#GLU_UNKNOWN
 100124

	)

239 
	#GLU_TESS_WINDING_RULE
 100140

	)

240 
	#GLU_TESS_BOUNDARY_ONLY
 100141

	)

241 
	#GLU_TESS_TOLERANCE
 100142

	)

244 
	#GLU_TESS_ERROR1
 100151

	)

245 
	#GLU_TESS_ERROR2
 100152

	)

246 
	#GLU_TESS_ERROR3
 100153

	)

247 
	#GLU_TESS_ERROR4
 100154

	)

248 
	#GLU_TESS_ERROR5
 100155

	)

249 
	#GLU_TESS_ERROR6
 100156

	)

250 
	#GLU_TESS_ERROR7
 100157

	)

251 
	#GLU_TESS_ERROR8
 100158

	)

252 
	#GLU_TESS_MISSING_BEGIN_POLYGON
 100151

	)

253 
	#GLU_TESS_MISSING_BEGIN_CONTOUR
 100152

	)

254 
	#GLU_TESS_MISSING_END_POLYGON
 100153

	)

255 
	#GLU_TESS_MISSING_END_CONTOUR
 100154

	)

256 
	#GLU_TESS_COORD_TOO_LARGE
 100155

	)

257 
	#GLU_TESS_NEED_COMBINE_CALLBACK
 100156

	)

260 
	#GLU_TESS_WINDING_ODD
 100130

	)

261 
	#GLU_TESS_WINDING_NONZERO
 100131

	)

262 
	#GLU_TESS_WINDING_POSITIVE
 100132

	)

263 
	#GLU_TESS_WINDING_NEGATIVE
 100133

	)

264 
	#GLU_TESS_WINDING_ABS_GEQ_TWO
 100134

	)

269 #ifde‡
__˝lu•lus


270 
˛ass
 
GLUnurbs
;

271 
˛ass
 
GLUquadric
;

272 
˛ass
 
GLUãs£œt‹
;

274 
GLUnurbs
 
	tGLUnurbs
;

275 
GLUquadric
 
	tGLUquadric
;

276 
GLUãs£œt‹
 
	tGLUãs£œt‹
;

279 
GLUnurbs
 
	tGLUnurbsObj
;

280 
GLUquadric
 
	tGLUquadricObj
;

281 
GLUãs£œt‹
 
	tGLUãs£œt‹Obj
;

282 
GLUãs£œt‹
 
	tGLUåünguœt‹Obj
;

284 
	#GLU_TESS_MAX_COORD
 1.0e150

	)

287 (
GLAPIENTRYP
 
	t_GLUfun˝å
)();

289 
GLAPI
 
GLAPIENTRY
 
gluBegöCurve
 (
GLUnurbs
* 
nurb
);

290 
GLAPI
 
GLAPIENTRY
 
gluBegöPﬁyg⁄
 (
GLUãs£œt‹
* 
ãss
);

291 
GLAPI
 
GLAPIENTRY
 
gluBegöSurÁ˚
 (
GLUnurbs
* 
nurb
);

292 
GLAPI
 
GLAPIENTRY
 
gluBegöTrim
 (
GLUnurbs
* 
nurb
);

293 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluBuûd1DMùm≠Levñs
 (
GLíum
 
èrgë
, GLöà
öã∫ÆF‹m©
, 
GLsizei
 
width
, GLíum 
f‹m©
, GLíum 
ty≥
, GLöà
Àvñ
, GLöà
ba£
, GLöà
max
, c⁄° *
d©a
);

294 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluBuûd1DMùm≠s
 (
GLíum
 
èrgë
, GLöà
öã∫ÆF‹m©
, 
GLsizei
 
width
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° *
d©a
);

295 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluBuûd2DMùm≠Levñs
 (
GLíum
 
èrgë
, GLöà
öã∫ÆF‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
, GLíum 
ty≥
, GLöà
Àvñ
, GLöà
ba£
, GLöà
max
, c⁄° *
d©a
);

296 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluBuûd2DMùm≠s
 (
GLíum
 
èrgë
, GLöà
öã∫ÆF‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° *
d©a
);

297 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluBuûd3DMùm≠Levñs
 (
GLíum
 
èrgë
, GLöà
öã∫ÆF‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLíum 
f‹m©
, GLíum 
ty≥
, GLöà
Àvñ
, GLöà
ba£
, GLöà
max
, c⁄° *
d©a
);

298 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluBuûd3DMùm≠s
 (
GLíum
 
èrgë
, GLöà
öã∫ÆF‹m©
, 
GLsizei
 
width
, GLsizeò
height
, GLsizeò
dïth
, GLíum 
f‹m©
, GLíum 
ty≥
, c⁄° *
d©a
);

299 
GLAPI
 
GLboﬁón
 
GLAPIENTRY
 
gluCheckExãnsi⁄
 (c⁄° 
GLubyã
 *
extName
, c⁄° GLubyã *
extSåög
);

300 
GLAPI
 
GLAPIENTRY
 
gluCylödî
 (
GLUquadric
* 
quad
, 
GLdoubÀ
 
ba£
, GLdoubÀ 
t›
, GLdoubÀ 
height
, 
GLöt
 
¶i˚s
, GLöà
°acks
);

301 
GLAPI
 
GLAPIENTRY
 
gluDñëeNurbsRídîî
 (
GLUnurbs
* 
nurb
);

302 
GLAPI
 
GLAPIENTRY
 
gluDñëeQuadric
 (
GLUquadric
* 
quad
);

303 
GLAPI
 
GLAPIENTRY
 
gluDñëeTess
 (
GLUãs£œt‹
* 
ãss
);

304 
GLAPI
 
GLAPIENTRY
 
gluDisk
 (
GLUquadric
* 
quad
, 
GLdoubÀ
 
ö√r
, GLdoubÀ 
ouãr
, 
GLöt
 
¶i˚s
, GLöà
lo›s
);

305 
GLAPI
 
GLAPIENTRY
 
gluEndCurve
 (
GLUnurbs
* 
nurb
);

306 
GLAPI
 
GLAPIENTRY
 
gluEndPﬁyg⁄
 (
GLUãs£œt‹
* 
ãss
);

307 
GLAPI
 
GLAPIENTRY
 
gluEndSurÁ˚
 (
GLUnurbs
* 
nurb
);

308 
GLAPI
 
GLAPIENTRY
 
gluEndTrim
 (
GLUnurbs
* 
nurb
);

309 
GLAPI
 c⁄° 
GLubyã
 * 
GLAPIENTRY
 
gluEº‹Såög
 (
GLíum
 
îr‹
);

310 
GLAPI
 
GLAPIENTRY
 
gluGëNurbsPr›îty
 (
GLUnurbs
* 
nurb
, 
GLíum
 
¥›îty
, 
GLÊﬂt
* 
d©a
);

311 
GLAPI
 c⁄° 
GLubyã
 * 
GLAPIENTRY
 
gluGëSåög
 (
GLíum
 
«me
);

312 
GLAPI
 
GLAPIENTRY
 
gluGëTessPr›îty
 (
GLUãs£œt‹
* 
ãss
, 
GLíum
 
which
, 
GLdoubÀ
* 
d©a
);

313 
GLAPI
 
GLAPIENTRY
 
gluLﬂdSam∂ögM©ri˚s
 (
GLUnurbs
* 
nurb
, c⁄° 
GLÊﬂt
 *
modñ
, c⁄° GLÊﬂà*
≥r•e˘ive
, c⁄° 
GLöt
 *
võw
);

314 
GLAPI
 
GLAPIENTRY
 
gluLookAt
 (
GLdoubÀ
 
eyeX
, GLdoubÀ 
eyeY
, GLdoubÀ 
eyeZ
, GLdoubÀ 
˚¡îX
, GLdoubÀ 
˚¡îY
, GLdoubÀ 
˚¡îZ
, GLdoubÀ 
upX
, GLdoubÀ 
upY
, GLdoubÀ 
upZ
);

315 
GLAPI
 
GLUnurbs
* 
GLAPIENTRY
 
gluNewNurbsRídîî
 ();

316 
GLAPI
 
GLUquadric
* 
GLAPIENTRY
 
gluNewQuadric
 ();

317 
GLAPI
 
GLUãs£œt‹
* 
GLAPIENTRY
 
gluNewTess
 ();

318 
GLAPI
 
GLAPIENTRY
 
gluNextC⁄tour
 (
GLUãs£œt‹
* 
ãss
, 
GLíum
 
ty≥
);

319 
GLAPI
 
GLAPIENTRY
 
gluNurbsCÆlback
 (
GLUnurbs
* 
nurb
, 
GLíum
 
which
, 
_GLUfun˝å
 
CÆlBackFunc
);

320 
GLAPI
 
GLAPIENTRY
 
gluNurbsCÆlbackD©a
 (
GLUnurbs
* 
nurb
, 
GLvoid
* 
u£rD©a
);

321 
GLAPI
 
GLAPIENTRY
 
gluNurbsCÆlbackD©aEXT
 (
GLUnurbs
* 
nurb
, 
GLvoid
* 
u£rD©a
);

322 
GLAPI
 
GLAPIENTRY
 
gluNurbsCurve
 (
GLUnurbs
* 
nurb
, 
GLöt
 
knŸCou¡
, 
GLÊﬂt
 *
knŸs
, GLöà
°ride
, GLÊﬂà*
c⁄åﬁ
, GLöà
‹dî
, 
GLíum
 
ty≥
);

323 
GLAPI
 
GLAPIENTRY
 
gluNurbsPr›îty
 (
GLUnurbs
* 
nurb
, 
GLíum
 
¥›îty
, 
GLÊﬂt
 
vÆue
);

324 
GLAPI
 
GLAPIENTRY
 
gluNurbsSurÁ˚
 (
GLUnurbs
* 
nurb
, 
GLöt
 
sKnŸCou¡
, 
GLÊﬂt
* 
sKnŸs
, GLöà
tKnŸCou¡
, GLÊﬂt* 
tKnŸs
, GLöà
sSåide
, GLöà
tSåide
, GLÊﬂt* 
c⁄åﬁ
, GLöà
sOrdî
, GLöà
tOrdî
, 
GLíum
 
ty≥
);

325 
GLAPI
 
GLAPIENTRY
 
gluOπho2D
 (
GLdoubÀ
 
À·
, GLdoubÀ 
right
, GLdoubÀ 
bŸtom
, GLdoubÀ 
t›
);

326 
GLAPI
 
GLAPIENTRY
 
gluP¨tülDisk
 (
GLUquadric
* 
quad
, 
GLdoubÀ
 
ö√r
, GLdoubÀ 
ouãr
, 
GLöt
 
¶i˚s
, GLöà
lo›s
, GLdoubÀ 
°¨t
, GLdoubÀ 
swìp
);

327 
GLAPI
 
GLAPIENTRY
 
gluPî•e˘ive
 (
GLdoubÀ
 
fovy
, GLdoubÀ 
a•e˘
, GLdoubÀ 
zNór
, GLdoubÀ 
zF¨
);

328 
GLAPI
 
GLAPIENTRY
 
gluPickM©rix
 (
GLdoubÀ
 
x
, GLdoubÀ 
y
, GLdoubÀ 
dñX
, GLdoubÀ 
dñY
, 
GLöt
 *
võwp‹t
);

329 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluProje˘
 (
GLdoubÀ
 
objX
, GLdoubÀ 
objY
, GLdoubÀ 
objZ
, c⁄° GLdoubÀ *
modñ
, c⁄° GLdoubÀ *
¥oj
, c⁄° GLöà*
võw
, GLdoubÀ* 
wöX
, GLdoubÀ* 
wöY
, GLdoubÀ* 
wöZ
);

330 
GLAPI
 
GLAPIENTRY
 
gluPwlCurve
 (
GLUnurbs
* 
nurb
, 
GLöt
 
cou¡
, 
GLÊﬂt
* 
d©a
, GLöà
°ride
, 
GLíum
 
ty≥
);

331 
GLAPI
 
GLAPIENTRY
 
gluQuadricCÆlback
 (
GLUquadric
* 
quad
, 
GLíum
 
which
, 
_GLUfun˝å
 
CÆlBackFunc
);

332 
GLAPI
 
GLAPIENTRY
 
gluQuadricDøwStyÀ
 (
GLUquadric
* 
quad
, 
GLíum
 
døw
);

333 
GLAPI
 
GLAPIENTRY
 
gluQuadricN‹mÆs
 (
GLUquadric
* 
quad
, 
GLíum
 
n‹mÆ
);

334 
GLAPI
 
GLAPIENTRY
 
gluQuadricOrõ¡©i⁄
 (
GLUquadric
* 
quad
, 
GLíum
 
‹õ¡©i⁄
);

335 
GLAPI
 
GLAPIENTRY
 
gluQuadricTextuª
 (
GLUquadric
* 
quad
, 
GLboﬁón
 
ãxtuª
);

336 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluSˇÀImage
 (
GLíum
 
f‹m©
, 
GLsizei
 
wIn
, GLsizeò
hIn
, GLíum 
ty≥In
, c⁄° *
d©aIn
, GLsizeò
wOut
, GLsizeò
hOut
, GLíum 
ty≥Out
, 
GLvoid
* 
d©aOut
);

337 
GLAPI
 
GLAPIENTRY
 
gluSphîe
 (
GLUquadric
* 
quad
, 
GLdoubÀ
 
ødius
, 
GLöt
 
¶i˚s
, GLöà
°acks
);

338 
GLAPI
 
GLAPIENTRY
 
gluTessBegöC⁄tour
 (
GLUãs£œt‹
* 
ãss
);

339 
GLAPI
 
GLAPIENTRY
 
gluTessBegöPﬁyg⁄
 (
GLUãs£œt‹
* 
ãss
, 
GLvoid
* 
d©a
);

340 
GLAPI
 
GLAPIENTRY
 
gluTessCÆlback
 (
GLUãs£œt‹
* 
ãss
, 
GLíum
 
which
, 
_GLUfun˝å
 
CÆlBackFunc
);

341 
GLAPI
 
GLAPIENTRY
 
gluTessEndC⁄tour
 (
GLUãs£œt‹
* 
ãss
);

342 
GLAPI
 
GLAPIENTRY
 
gluTessEndPﬁyg⁄
 (
GLUãs£œt‹
* 
ãss
);

343 
GLAPI
 
GLAPIENTRY
 
gluTessN‹mÆ
 (
GLUãs£œt‹
* 
ãss
, 
GLdoubÀ
 
vÆueX
, GLdoubÀ 
vÆueY
, GLdoubÀ 
vÆueZ
);

344 
GLAPI
 
GLAPIENTRY
 
gluTessPr›îty
 (
GLUãs£œt‹
* 
ãss
, 
GLíum
 
which
, 
GLdoubÀ
 
d©a
);

345 
GLAPI
 
GLAPIENTRY
 
gluTessVîãx
 (
GLUãs£œt‹
* 
ãss
, 
GLdoubÀ
 *
loˇti⁄
, 
GLvoid
* 
d©a
);

346 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluUnProje˘
 (
GLdoubÀ
 
wöX
, GLdoubÀ 
wöY
, GLdoubÀ 
wöZ
, c⁄° GLdoubÀ *
modñ
, c⁄° GLdoubÀ *
¥oj
, c⁄° GLöà*
võw
, GLdoubÀ* 
objX
, GLdoubÀ* 
objY
, GLdoubÀ* 
objZ
);

347 
GLAPI
 
GLöt
 
GLAPIENTRY
 
gluUnProje˘4
 (
GLdoubÀ
 
wöX
, GLdoubÀ 
wöY
, GLdoubÀ 
wöZ
, GLdoubÀ 
˛ùW
, c⁄° GLdoubÀ *
modñ
, c⁄° GLdoubÀ *
¥oj
, c⁄° GLöà*
võw
, GLdoubÀ 
√¨VÆ
, GLdoubÀ 
ÁrVÆ
, GLdoubÀ* 
objX
, GLdoubÀ* 
objY
, GLdoubÀ* 
objZ
, GLdoubÀ* 
objW
);

349 #ifde‡
__˝lu•lus


	@/usr/include/GL/glut.h

1 #i‚de‡ 
__GLUT_H__


2 
	#__GLUT_H__


	)

17 
	~"‰ìglut_°d.h
"

	@/usr/include/GL/glx.h

26 #i‚de‡
GLX_H


27 
	#GLX_H


	)

30 #ifde‡
__VMS


31 
	~<GL/vms_x_fix.h
>

32 #ifde‡
__˝lu•lus


35 #¥agm®
mesßge
 
dißbÀ
 
nosimpöt


38 
	~<X11/Xlib.h
>

39 
	~<X11/Xutû.h
>

40 #ifde‡
__VMS


41 #ifde‡
__˝lu•lus


42 #¥agm®
mesßge
 
íabÀ
 
nosimpöt


45 
	~<GL/gl.h
>

48 #i‡
deföed
(
USE_MGL_NAMESPACE
)

49 
	~"glx_m™gÀ.h
"

53 #ifde‡
__˝lu•lus


58 
	#GLX_VERSION_1_1
 1

	)

59 
	#GLX_VERSION_1_2
 1

	)

60 
	#GLX_VERSION_1_3
 1

	)

61 
	#GLX_VERSION_1_4
 1

	)

63 
	#GLX_EXTENSION_NAME
 "GLX"

	)

70 
	#GLX_USE_GL
 1

	)

71 
	#GLX_BUFFER_SIZE
 2

	)

72 
	#GLX_LEVEL
 3

	)

73 
	#GLX_RGBA
 4

	)

74 
	#GLX_DOUBLEBUFFER
 5

	)

75 
	#GLX_STEREO
 6

	)

76 
	#GLX_AUX_BUFFERS
 7

	)

77 
	#GLX_RED_SIZE
 8

	)

78 
	#GLX_GREEN_SIZE
 9

	)

79 
	#GLX_BLUE_SIZE
 10

	)

80 
	#GLX_ALPHA_SIZE
 11

	)

81 
	#GLX_DEPTH_SIZE
 12

	)

82 
	#GLX_STENCIL_SIZE
 13

	)

83 
	#GLX_ACCUM_RED_SIZE
 14

	)

84 
	#GLX_ACCUM_GREEN_SIZE
 15

	)

85 
	#GLX_ACCUM_BLUE_SIZE
 16

	)

86 
	#GLX_ACCUM_ALPHA_SIZE
 17

	)

92 
	#GLX_BAD_SCREEN
 1

	)

93 
	#GLX_BAD_ATTRIBUTE
 2

	)

94 
	#GLX_NO_EXTENSION
 3

	)

95 
	#GLX_BAD_VISUAL
 4

	)

96 
	#GLX_BAD_CONTEXT
 5

	)

97 
	#GLX_BAD_VALUE
 6

	)

98 
	#GLX_BAD_ENUM
 7

	)

104 
	#GLX_VENDOR
 1

	)

105 
	#GLX_VERSION
 2

	)

106 
	#GLX_EXTENSIONS
 3

	)

112 
	#GLX_CONFIG_CAVEAT
 0x20

	)

113 
	#GLX_DONT_CARE
 0xFFFFFFFF

	)

114 
	#GLX_X_VISUAL_TYPE
 0x22

	)

115 
	#GLX_TRANSPARENT_TYPE
 0x23

	)

116 
	#GLX_TRANSPARENT_INDEX_VALUE
 0x24

	)

117 
	#GLX_TRANSPARENT_RED_VALUE
 0x25

	)

118 
	#GLX_TRANSPARENT_GREEN_VALUE
 0x26

	)

119 
	#GLX_TRANSPARENT_BLUE_VALUE
 0x27

	)

120 
	#GLX_TRANSPARENT_ALPHA_VALUE
 0x28

	)

121 
	#GLX_WINDOW_BIT
 0x00000001

	)

122 
	#GLX_PIXMAP_BIT
 0x00000002

	)

123 
	#GLX_PBUFFER_BIT
 0x00000004

	)

124 
	#GLX_AUX_BUFFERS_BIT
 0x00000010

	)

125 
	#GLX_FRONT_LEFT_BUFFER_BIT
 0x00000001

	)

126 
	#GLX_FRONT_RIGHT_BUFFER_BIT
 0x00000002

	)

127 
	#GLX_BACK_LEFT_BUFFER_BIT
 0x00000004

	)

128 
	#GLX_BACK_RIGHT_BUFFER_BIT
 0x00000008

	)

129 
	#GLX_DEPTH_BUFFER_BIT
 0x00000020

	)

130 
	#GLX_STENCIL_BUFFER_BIT
 0x00000040

	)

131 
	#GLX_ACCUM_BUFFER_BIT
 0x00000080

	)

132 
	#GLX_NONE
 0x8000

	)

133 
	#GLX_SLOW_CONFIG
 0x8001

	)

134 
	#GLX_TRUE_COLOR
 0x8002

	)

135 
	#GLX_DIRECT_COLOR
 0x8003

	)

136 
	#GLX_PSEUDO_COLOR
 0x8004

	)

137 
	#GLX_STATIC_COLOR
 0x8005

	)

138 
	#GLX_GRAY_SCALE
 0x8006

	)

139 
	#GLX_STATIC_GRAY
 0x8007

	)

140 
	#GLX_TRANSPARENT_RGB
 0x8008

	)

141 
	#GLX_TRANSPARENT_INDEX
 0x8009

	)

142 
	#GLX_VISUAL_ID
 0x800B

	)

143 
	#GLX_SCREEN
 0x800C

	)

144 
	#GLX_NON_CONFORMANT_CONFIG
 0x800D

	)

145 
	#GLX_DRAWABLE_TYPE
 0x8010

	)

146 
	#GLX_RENDER_TYPE
 0x8011

	)

147 
	#GLX_X_RENDERABLE
 0x8012

	)

148 
	#GLX_FBCONFIG_ID
 0x8013

	)

149 
	#GLX_RGBA_TYPE
 0x8014

	)

150 
	#GLX_COLOR_INDEX_TYPE
 0x8015

	)

151 
	#GLX_MAX_PBUFFER_WIDTH
 0x8016

	)

152 
	#GLX_MAX_PBUFFER_HEIGHT
 0x8017

	)

153 
	#GLX_MAX_PBUFFER_PIXELS
 0x8018

	)

154 
	#GLX_PRESERVED_CONTENTS
 0x801B

	)

155 
	#GLX_LARGEST_PBUFFER
 0x801C

	)

156 
	#GLX_WIDTH
 0x801D

	)

157 
	#GLX_HEIGHT
 0x801E

	)

158 
	#GLX_EVENT_MASK
 0x801F

	)

159 
	#GLX_DAMAGED
 0x8020

	)

160 
	#GLX_SAVED
 0x8021

	)

161 
	#GLX_WINDOW
 0x8022

	)

162 
	#GLX_PBUFFER
 0x8023

	)

163 
	#GLX_PBUFFER_HEIGHT
 0x8040

	)

164 
	#GLX_PBUFFER_WIDTH
 0x8041

	)

165 
	#GLX_RGBA_BIT
 0x00000001

	)

166 
	#GLX_COLOR_INDEX_BIT
 0x00000002

	)

167 
	#GLX_PBUFFER_CLOBBER_MASK
 0x08000000

	)

173 
	#GLX_SAMPLE_BUFFERS
 0x186a0

	)

174 
	#GLX_SAMPLES
 0x186a1

	)

178 
__GLXc⁄ãxtRec
 *
	tGLXC⁄ãxt
;

179 
XID
 
	tGLXPixm≠
;

180 
XID
 
	tGLXDøwabÀ
;

182 
__GLXFBC⁄figRec
 *
	tGLXFBC⁄fig
;

183 
XID
 
	tGLXFBC⁄figID
;

184 
XID
 
	tGLXC⁄ãxtID
;

185 
XID
 
	tGLXWödow
;

186 
XID
 
	tGLXPbuf„r
;

190 
XVisuÆInfo
* 
glXChoo£VisuÆ
–
Di•œy
 *
dpy
, 
s¸ìn
,

191 *
©åibLi°
 );

193 
GLXC⁄ãxt
 
glXCª©eC⁄ãxt
–
Di•œy
 *
dpy
, 
XVisuÆInfo
 *
vis
,

194 
GLXC⁄ãxt
 
sh¨eLi°
, 
Boﬁ
 
dúe˘
 );

196 
glXDe°royC⁄ãxt
–
Di•œy
 *
dpy
, 
GLXC⁄ãxt
 
˘x
 );

198 
Boﬁ
 
glXMakeCuºít
–
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
,

199 
GLXC⁄ãxt
 
˘x
);

201 
glXC›yC⁄ãxt
–
Di•œy
 *
dpy
, 
GLXC⁄ãxt
 
§c
, GLXC⁄ãxà
d°
,

202 
mask
 );

204 
glXSw≠Buf„rs
–
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
 );

206 
GLXPixm≠
 
glXCª©eGLXPixm≠
–
Di•œy
 *
dpy
, 
XVisuÆInfo
 *
visuÆ
,

207 
Pixm≠
 
pixm≠
 );

209 
glXDe°royGLXPixm≠
–
Di•œy
 *
dpy
, 
GLXPixm≠
 
pixm≠
 );

211 
Boﬁ
 
glXQuîyExãnsi⁄
–
Di•œy
 *
dpy
, *
îr‹b
, *
evít
 );

213 
Boﬁ
 
glXQuîyVîsi⁄
–
Di•œy
 *
dpy
, *
maj
, *
mö
 );

215 
Boﬁ
 
glXIsDúe˘
–
Di•œy
 *
dpy
, 
GLXC⁄ãxt
 
˘x
 );

217 
glXGëC⁄fig
–
Di•œy
 *
dpy
, 
XVisuÆInfo
 *
visuÆ
,

218 
©åib
, *
vÆue
 );

220 
GLXC⁄ãxt
 
glXGëCuºítC⁄ãxt
( );

222 
GLXDøwabÀ
 
glXGëCuºítDøwabÀ
( );

224 
glXWaôGL
( );

226 
glXWaôX
( );

228 
glXU£XF⁄t
–
F⁄t
 
f⁄t
, 
fú°
, 
cou¡
, 
li°
 );

233 c⁄° *
glXQuîyExãnsi⁄sSåög
–
Di•œy
 *
dpy
, 
s¸ìn
 );

235 c⁄° *
glXQuîySîvîSåög
–
Di•œy
 *
dpy
, 
s¸ìn
, 
«me
 );

237 c⁄° *
glXGëClõ¡Såög
–
Di•œy
 *
dpy
, 
«me
 );

241 
Di•œy
 *
glXGëCuºítDi•œy
( );

245 
GLXFBC⁄fig
 *
glXChoo£FBC⁄fig
–
Di•œy
 *
dpy
, 
s¸ìn
,

246 c⁄° *
©åibLi°
, *
nôems
 );

248 
glXGëFBC⁄figAârib
–
Di•œy
 *
dpy
, 
GLXFBC⁄fig
 
c⁄fig
,

249 
©åibuã
, *
vÆue
 );

251 
GLXFBC⁄fig
 *
glXGëFBC⁄figs
–
Di•œy
 *
dpy
, 
s¸ìn
,

252 *
√Àmíts
 );

254 
XVisuÆInfo
 *
glXGëVisuÆFromFBC⁄fig
–
Di•œy
 *
dpy
,

255 
GLXFBC⁄fig
 
c⁄fig
 );

257 
GLXWödow
 
glXCª©eWödow
–
Di•œy
 *
dpy
, 
GLXFBC⁄fig
 
c⁄fig
,

258 
Wödow
 
wö
, c⁄° *
©åibLi°
 );

260 
glXDe°royWödow
–
Di•œy
 *
dpy
, 
GLXWödow
 
wödow
 );

262 
GLXPixm≠
 
glXCª©ePixm≠
–
Di•œy
 *
dpy
, 
GLXFBC⁄fig
 
c⁄fig
,

263 
Pixm≠
 
pixm≠
, c⁄° *
©åibLi°
 );

265 
glXDe°royPixm≠
–
Di•œy
 *
dpy
, 
GLXPixm≠
 
pixm≠
 );

267 
GLXPbuf„r
 
glXCª©ePbuf„r
–
Di•œy
 *
dpy
, 
GLXFBC⁄fig
 
c⁄fig
,

268 c⁄° *
©åibLi°
 );

270 
glXDe°royPbuf„r
–
Di•œy
 *
dpy
, 
GLXPbuf„r
 
pbuf
 );

272 
glXQuîyDøwabÀ
–
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døw
, 
©åibuã
,

273 *
vÆue
 );

275 
GLXC⁄ãxt
 
glXCª©eNewC⁄ãxt
–
Di•œy
 *
dpy
, 
GLXFBC⁄fig
 
c⁄fig
,

276 
ªndîTy≥
, 
GLXC⁄ãxt
 
sh¨eLi°
,

277 
Boﬁ
 
dúe˘
 );

279 
Boﬁ
 
glXMakeC⁄ãxtCuºít
–
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døw
,

280 
GLXDøwabÀ
 
ªad
, 
GLXC⁄ãxt
 
˘x
 );

282 
GLXDøwabÀ
 
glXGëCuºítRódDøwabÀ
( );

284 
glXQuîyC⁄ãxt
–
Di•œy
 *
dpy
, 
GLXC⁄ãxt
 
˘x
, 
©åibuã
,

285 *
vÆue
 );

287 
glXSñe˘Evít
–
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
,

288 
mask
 );

290 
glXGëSñe˘edEvít
–
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
,

291 *
mask
 );

294 
	gGLXFBC⁄fig
 * (* 
	tPFNGLXGETFBCONFIGSPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, *
	t√Àmíts
);

295 
	gGLXFBC⁄fig
 * (* 
	tPFNGLXCHOOSEFBCONFIGPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, c⁄° *
	t©åib_li°
, *
	t√Àmíts
);

296 (* 
	gPFNGLXGETFBCONFIGATTRIBPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	t©åibuã
, *
	tvÆue
);

297 
	gXVisuÆInfo
 * (* 
	tPFNGLXGETVISUALFROMFBCONFIGPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
);

298 
GLXWödow
 (* 
	tPFNGLXCREATEWINDOWPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tWödow
 
	twö
, c⁄° *
	t©åib_li°
);

299 (* 
	gPFNGLXDESTROYWINDOWPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXWödow
 
	twö
);

300 
GLXPixm≠
 (* 
	tPFNGLXCREATEPIXMAPPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tPixm≠
 
	tpixm≠
, c⁄° *
	t©åib_li°
);

301 (* 
	gPFNGLXDESTROYPIXMAPPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPixm≠
 
	tpixm≠
);

302 
GLXPbuf„r
 (* 
	tPFNGLXCREATEPBUFFERPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, c⁄° *
	t©åib_li°
);

303 (* 
	gPFNGLXDESTROYPBUFFERPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPbuf„r
 
	tpbuf
);

304 (* 
	gPFNGLXQUERYDRAWABLEPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, 
	t©åibuã
, *
	tvÆue
);

305 
GLXC⁄ãxt
 (* 
	tPFNGLXCREATENEWCONTEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tªndî_ty≥
, 
	tGLXC⁄ãxt
 
	tsh¨e_li°
, 
	tBoﬁ
 
	tdúe˘
);

306 
Boﬁ
 (* 
	tPFNGLXMAKECONTEXTCURRENTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, GLXDøwabÀ 
	tªad
, 
	tGLXC⁄ãxt
 
	t˘x
);

307 
GLXDøwabÀ
 (* 
	tPFNGLXGETCURRENTREADDRAWABLEPROC
) ();

308 
	gDi•œy
 * (* 
	tPFNGLXGETCURRENTDISPLAYPROC
) ();

309 (* 
	gPFNGLXQUERYCONTEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXC⁄ãxt
 
	t˘x
, 
	t©åibuã
, *
	tvÆue
);

310 (* 
	gPFNGLXSELECTEVENTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, 
	tevít_mask
);

311 (* 
	gPFNGLXGETSELECTEDEVENTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, *
	tevít_mask
);

317 #i‚de‡
GLX_ARB_gë_¥oc_addªss


318 
	#GLX_ARB_gë_¥oc_addªss
 1

	)

320 (*
	g__GLXextFuncPå
)();

321 
__GLXextFuncPå
 
glXGëProcAddªssARB
 (c⁄° 
GLubyã
 *);

328 (*
glXGëProcAddªss
(c⁄° 
GLubyã
 *
¥o˙ame
))( );

331 
__GLXextFuncPå
 (* 
	tPFNGLXGETPROCADDRESSPROC
Ë(c⁄° 
	tGLubyã
 *
	t¥ocName
);

334 #i‚de‡
GLX_GLXEXT_LEGACY


336 
	~<GL/glxext.h
>

349 #i‚de‡
GLX_NV_vîãx_¨øy_ønge


350 
	#GLX_NV_vîãx_¨øy_ønge


	)

352 *
glXAŒoˇãMem‹yNV
(
GLsizei
 
size
, 
GLÊﬂt
 
ªad‰eq
, GLÊﬂà
wrôe‰eq
, GLÊﬂà
¥i‹ôy
);

353 
glXFªeMem‹yNV
(
GLvoid
 *
poöãr
);

354 * ( * 
	tPFNGLXALLOCATEMEMORYNVPROC
Ë(
	tGLsizei
 
	tsize
, 
	tGLÊﬂt
 
	tªad‰eq
, GLÊﬂà
	twrôe‰eq
, GLÊﬂà
	t¥i‹ôy
);

355 –* 
	gPFNGLXFREEMEMORYNVPROC
Ë(
	tGLvoid
 *
	tpoöãr
);

363 #i‚de‡
GLX_MESA_Æloˇã_mem‹y


364 
	#GLX_MESA_Æloˇã_mem‹y
 1

	)

366 *
glXAŒoˇãMem‹yMESA
(
Di•œy
 *
dpy
, 
s¸n
, 
size_t
 
size
, 
ªad‰eq
, 
wrôe‰eq
, 
¥i‹ôy
);

367 
glXFªeMem‹yMESA
(
Di•œy
 *
dpy
, 
s¸n
, *
poöãr
);

368 
GLuöt
 
glXGëMem‹yOff£tMESA
(
Di•œy
 *
dpy
, 
s¸n
, c⁄° *
poöãr
);

369 * ( * 
	tPFNGLXALLOCATEMEMORYMESAPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸n
, 
	tsize_t
 
	tsize
, 
	tªad‰eq
, 
	twrôe‰eq
, 
	t¥i‹ôy
);

370 –* 
	gPFNGLXFREEMEMORYMESAPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸n
, *
	tpoöãr
);

371 
GLuöt
 (* 
	tPFNGLXGETMEMORYOFFSETMESAPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸n
, c⁄° *
	tpoöãr
);

380 #i‚de‡
GLX_ARB_ªndî_ãxtuª


381 
	#GLX_ARB_ªndî_ãxtuª
 1

	)

383 
Boﬁ
 
glXBödTexImageARB
(
Di•œy
 *
dpy
, 
GLXPbuf„r
 
pbuf„r
, 
buf„r
);

384 
Boﬁ
 
glXRñó£TexImageARB
(
Di•œy
 *
dpy
, 
GLXPbuf„r
 
pbuf„r
, 
buf„r
);

385 
Boﬁ
 
glXDøwabÀAâribARB
(
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døw
, c⁄° *
©åibLi°
);

393 #i‚de‡
GLX_NV_Êﬂt_buf„r


394 
	#GLX_NV_Êﬂt_buf„r
 1

	)

396 
	#GLX_FLOAT_COMPONENTS_NV
 0x20B0

	)

405 #i‚de‡
GLX_MESA_sw≠_‰ame_ußge


406 
	#GLX_MESA_sw≠_‰ame_ußge
 1

	)

408 
glXGëFømeUßgeMESA
(
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
, *
ußge
);

409 
glXBegöFømeTøckögMESA
(
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
);

410 
glXEndFømeTøckögMESA
(
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
);

411 
glXQuîyFømeTøckögMESA
(
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
, 
öt64_t
 *
sw≠Cou¡
, i¡64_à*
mis£dFømes
, *
œ°Mis£dUßge
);

413 (*
	gPFNGLXGETFRAMEUSAGEMESAPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, *
	tußge
);

414 (*
	gPFNGLXBEGINFRAMETRACKINGMESAPROC
)(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
);

415 (*
	gPFNGLXENDFRAMETRACKINGMESAPROC
)(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
);

416 (*
	gPFNGLXQUERYFRAMETRACKINGMESAPROC
)(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt64_t
 *
	tsw≠Cou¡
, i¡64_à*
	tmis£dFømes
, *
	tœ°Mis£dUßge
);

425 #i‚de‡
GLX_MESA_sw≠_c⁄åﬁ


426 
	#GLX_MESA_sw≠_c⁄åﬁ
 1

	)

428 
glXSw≠I¡îvÆMESA
(
öãrvÆ
);

429 
glXGëSw≠I¡îvÆMESA
();

431 (*
	gPFNGLXSWAPINTERVALMESAPROC
)(
	töãrvÆ
);

432 (*
	gPFNGLXGETSWAPINTERVALMESAPROC
)();

442 #i‚de‡
GLX_EXT_ãxtuª_‰om_pixm≠


443 
	#GLX_EXT_ãxtuª_‰om_pixm≠
 1

	)

445 
	#GLX_BIND_TO_TEXTURE_RGB_EXT
 0x20D0

	)

446 
	#GLX_BIND_TO_TEXTURE_RGBA_EXT
 0x20D1

	)

447 
	#GLX_BIND_TO_MIPMAP_TEXTURE_EXT
 0x20D2

	)

448 
	#GLX_BIND_TO_TEXTURE_TARGETS_EXT
 0x20D3

	)

449 
	#GLX_Y_INVERTED_EXT
 0x20D4

	)

451 
	#GLX_TEXTURE_FORMAT_EXT
 0x20D5

	)

452 
	#GLX_TEXTURE_TARGET_EXT
 0x20D6

	)

453 
	#GLX_MIPMAP_TEXTURE_EXT
 0x20D7

	)

455 
	#GLX_TEXTURE_FORMAT_NONE_EXT
 0x20D8

	)

456 
	#GLX_TEXTURE_FORMAT_RGB_EXT
 0x20D9

	)

457 
	#GLX_TEXTURE_FORMAT_RGBA_EXT
 0x20DA

	)

459 
	#GLX_TEXTURE_1D_BIT_EXT
 0x00000001

	)

460 
	#GLX_TEXTURE_2D_BIT_EXT
 0x00000002

	)

461 
	#GLX_TEXTURE_RECTANGLE_BIT_EXT
 0x00000004

	)

463 
	#GLX_TEXTURE_1D_EXT
 0x20DB

	)

464 
	#GLX_TEXTURE_2D_EXT
 0x20DC

	)

465 
	#GLX_TEXTURE_RECTANGLE_EXT
 0x20DD

	)

467 
	#GLX_FRONT_LEFT_EXT
 0x20DE

	)

468 
	#GLX_FRONT_RIGHT_EXT
 0x20DF

	)

469 
	#GLX_BACK_LEFT_EXT
 0x20E0

	)

470 
	#GLX_BACK_RIGHT_EXT
 0x20E1

	)

471 
	#GLX_FRONT_EXT
 
GLX_FRONT_LEFT_EXT


	)

472 
	#GLX_BACK_EXT
 
GLX_BACK_LEFT_EXT


	)

473 
	#GLX_AUX0_EXT
 0x20E2

	)

474 
	#GLX_AUX1_EXT
 0x20E3

	)

475 
	#GLX_AUX2_EXT
 0x20E4

	)

476 
	#GLX_AUX3_EXT
 0x20E5

	)

477 
	#GLX_AUX4_EXT
 0x20E6

	)

478 
	#GLX_AUX5_EXT
 0x20E7

	)

479 
	#GLX_AUX6_EXT
 0x20E8

	)

480 
	#GLX_AUX7_EXT
 0x20E9

	)

481 
	#GLX_AUX8_EXT
 0x20EA

	)

482 
	#GLX_AUX9_EXT
 0x20EB

	)

484 
glXBödTexImageEXT
(
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
, 
buf„r
, c⁄° *
©åib_li°
);

485 
glXRñó£TexImageEXT
(
Di•œy
 *
dpy
, 
GLXDøwabÀ
 
døwabÀ
, 
buf„r
);

497 
	gevít_ty≥
;

498 
	gdøw_ty≥
;

499 
	g£rül
;

500 
Boﬁ
 
	g£nd_evít
;

501 
Di•œy
 *
	gdi•œy
;

502 
GLXDøwabÀ
 
	gdøwabÀ
;

503 
	gbuf„r_mask
;

504 
	gaux_buf„r
;

505 
	gx
, 
	gy
;

506 
	gwidth
, 
	gheight
;

507 
	gcou¡
;

508 } 
	tGLXPbuf„rClobbîEvít
;

510 
	u__GLXEvít
 {

511 
GLXPbuf„rClobbîEvít
 
	gglxpbuf„r˛obbî
;

512 
	g∑d
[24];

513 } 
	tGLXEvít
;

515 #ifde‡
__˝lu•lus


	@/usr/include/GL/glxext.h

1 #i‚de‡
__glxext_h_


2 
	#__glxext_h_


	)

4 #ifde‡
__˝lu•lus


33 #i‡
deföed
(
_WIN32
Ë&& !deföed(
APIENTRY
Ë&& !deföed(
__CYGWIN__
Ë&& !deföed(
__SCITECH_SNAP__
)

34 
	#WIN32_LEAN_AND_MEAN
 1

	)

35 
	~<wödows.h
>

38 #i‚de‡
APIENTRY


39 
	#APIENTRY


	)

41 #i‚de‡
APIENTRYP


42 
	#APIENTRYP
 
APIENTRY
 *

	)

44 #i‚de‡
GLAPI


45 
	#GLAPI
 

	)

53 
	#GLX_GLXEXT_VERSION
 25

	)

55 #i‚de‡
GLX_VERSION_1_3


56 
	#GLX_WINDOW_BIT
 0x00000001

	)

57 
	#GLX_PIXMAP_BIT
 0x00000002

	)

58 
	#GLX_PBUFFER_BIT
 0x00000004

	)

59 
	#GLX_RGBA_BIT
 0x00000001

	)

60 
	#GLX_COLOR_INDEX_BIT
 0x00000002

	)

61 
	#GLX_PBUFFER_CLOBBER_MASK
 0x08000000

	)

62 
	#GLX_FRONT_LEFT_BUFFER_BIT
 0x00000001

	)

63 
	#GLX_FRONT_RIGHT_BUFFER_BIT
 0x00000002

	)

64 
	#GLX_BACK_LEFT_BUFFER_BIT
 0x00000004

	)

65 
	#GLX_BACK_RIGHT_BUFFER_BIT
 0x00000008

	)

66 
	#GLX_AUX_BUFFERS_BIT
 0x00000010

	)

67 
	#GLX_DEPTH_BUFFER_BIT
 0x00000020

	)

68 
	#GLX_STENCIL_BUFFER_BIT
 0x00000040

	)

69 
	#GLX_ACCUM_BUFFER_BIT
 0x00000080

	)

70 
	#GLX_CONFIG_CAVEAT
 0x20

	)

71 
	#GLX_X_VISUAL_TYPE
 0x22

	)

72 
	#GLX_TRANSPARENT_TYPE
 0x23

	)

73 
	#GLX_TRANSPARENT_INDEX_VALUE
 0x24

	)

74 
	#GLX_TRANSPARENT_RED_VALUE
 0x25

	)

75 
	#GLX_TRANSPARENT_GREEN_VALUE
 0x26

	)

76 
	#GLX_TRANSPARENT_BLUE_VALUE
 0x27

	)

77 
	#GLX_TRANSPARENT_ALPHA_VALUE
 0x28

	)

78 
	#GLX_DONT_CARE
 0xFFFFFFFF

	)

79 
	#GLX_NONE
 0x8000

	)

80 
	#GLX_SLOW_CONFIG
 0x8001

	)

81 
	#GLX_TRUE_COLOR
 0x8002

	)

82 
	#GLX_DIRECT_COLOR
 0x8003

	)

83 
	#GLX_PSEUDO_COLOR
 0x8004

	)

84 
	#GLX_STATIC_COLOR
 0x8005

	)

85 
	#GLX_GRAY_SCALE
 0x8006

	)

86 
	#GLX_STATIC_GRAY
 0x8007

	)

87 
	#GLX_TRANSPARENT_RGB
 0x8008

	)

88 
	#GLX_TRANSPARENT_INDEX
 0x8009

	)

89 
	#GLX_VISUAL_ID
 0x800B

	)

90 
	#GLX_SCREEN
 0x800C

	)

91 
	#GLX_NON_CONFORMANT_CONFIG
 0x800D

	)

92 
	#GLX_DRAWABLE_TYPE
 0x8010

	)

93 
	#GLX_RENDER_TYPE
 0x8011

	)

94 
	#GLX_X_RENDERABLE
 0x8012

	)

95 
	#GLX_FBCONFIG_ID
 0x8013

	)

96 
	#GLX_RGBA_TYPE
 0x8014

	)

97 
	#GLX_COLOR_INDEX_TYPE
 0x8015

	)

98 
	#GLX_MAX_PBUFFER_WIDTH
 0x8016

	)

99 
	#GLX_MAX_PBUFFER_HEIGHT
 0x8017

	)

100 
	#GLX_MAX_PBUFFER_PIXELS
 0x8018

	)

101 
	#GLX_PRESERVED_CONTENTS
 0x801B

	)

102 
	#GLX_LARGEST_PBUFFER
 0x801C

	)

103 
	#GLX_WIDTH
 0x801D

	)

104 
	#GLX_HEIGHT
 0x801E

	)

105 
	#GLX_EVENT_MASK
 0x801F

	)

106 
	#GLX_DAMAGED
 0x8020

	)

107 
	#GLX_SAVED
 0x8021

	)

108 
	#GLX_WINDOW
 0x8022

	)

109 
	#GLX_PBUFFER
 0x8023

	)

110 
	#GLX_PBUFFER_HEIGHT
 0x8040

	)

111 
	#GLX_PBUFFER_WIDTH
 0x8041

	)

114 #i‚de‡
GLX_VERSION_1_4


115 
	#GLX_SAMPLE_BUFFERS
 100000

	)

116 
	#GLX_SAMPLES
 100001

	)

119 #i‚de‡
GLX_ARB_gë_¥oc_addªss


122 #i‚de‡
GLX_ARB_mu…ißm∂e


123 
	#GLX_SAMPLE_BUFFERS_ARB
 100000

	)

124 
	#GLX_SAMPLES_ARB
 100001

	)

127 #i‚de‡
GLX_ARB_fbc⁄fig_Êﬂt


128 
	#GLX_RGBA_FLOAT_TYPE_ARB
 0x20B9

	)

129 
	#GLX_RGBA_FLOAT_BIT_ARB
 0x00000004

	)

132 #i‚de‡
GLX_ARB_¸óã_c⁄ãxt


133 
	#GLX_CONTEXT_DEBUG_BIT_ARB
 0x00000001

	)

134 
	#GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB
 0x00000002

	)

135 
	#GLX_CONTEXT_MAJOR_VERSION_ARB
 0x2091

	)

136 
	#GLX_CONTEXT_MINOR_VERSION_ARB
 0x2092

	)

137 
	#GLX_CONTEXT_FLAGS_ARB
 0x2094

	)

140 #i‚de‡
GLX_ARB_¸óã_c⁄ãxt_¥ofûe


141 
	#GLX_CONTEXT_CORE_PROFILE_BIT_ARB
 0x00000001

	)

142 
	#GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB
 0x00000002

	)

143 
	#GLX_CONTEXT_PROFILE_MASK_ARB
 0x9126

	)

146 #i‚de‡
GLX_SGIS_mu…ißm∂e


147 
	#GLX_SAMPLE_BUFFERS_SGIS
 100000

	)

148 
	#GLX_SAMPLES_SGIS
 100001

	)

151 #i‚de‡
GLX_EXT_visuÆ_öfo


152 
	#GLX_X_VISUAL_TYPE_EXT
 0x22

	)

153 
	#GLX_TRANSPARENT_TYPE_EXT
 0x23

	)

154 
	#GLX_TRANSPARENT_INDEX_VALUE_EXT
 0x24

	)

155 
	#GLX_TRANSPARENT_RED_VALUE_EXT
 0x25

	)

156 
	#GLX_TRANSPARENT_GREEN_VALUE_EXT
 0x26

	)

157 
	#GLX_TRANSPARENT_BLUE_VALUE_EXT
 0x27

	)

158 
	#GLX_TRANSPARENT_ALPHA_VALUE_EXT
 0x28

	)

159 
	#GLX_NONE_EXT
 0x8000

	)

160 
	#GLX_TRUE_COLOR_EXT
 0x8002

	)

161 
	#GLX_DIRECT_COLOR_EXT
 0x8003

	)

162 
	#GLX_PSEUDO_COLOR_EXT
 0x8004

	)

163 
	#GLX_STATIC_COLOR_EXT
 0x8005

	)

164 
	#GLX_GRAY_SCALE_EXT
 0x8006

	)

165 
	#GLX_STATIC_GRAY_EXT
 0x8007

	)

166 
	#GLX_TRANSPARENT_RGB_EXT
 0x8008

	)

167 
	#GLX_TRANSPARENT_INDEX_EXT
 0x8009

	)

170 #i‚de‡
GLX_SGI_sw≠_c⁄åﬁ


173 #i‚de‡
GLX_SGI_video_sync


176 #i‚de‡
GLX_SGI_make_cuºít_ªad


179 #i‚de‡
GLX_SGIX_video_sour˚


182 #i‚de‡
GLX_EXT_visuÆ_øtög


183 
	#GLX_VISUAL_CAVEAT_EXT
 0x20

	)

184 
	#GLX_SLOW_VISUAL_EXT
 0x8001

	)

185 
	#GLX_NON_CONFORMANT_VISUAL_EXT
 0x800D

	)

189 #i‚de‡
GLX_EXT_imp‹t_c⁄ãxt


190 
	#GLX_SHARE_CONTEXT_EXT
 0x800A

	)

191 
	#GLX_VISUAL_ID_EXT
 0x800B

	)

192 
	#GLX_SCREEN_EXT
 0x800C

	)

195 #i‚de‡
GLX_SGIX_fbc⁄fig


196 
	#GLX_WINDOW_BIT_SGIX
 0x00000001

	)

197 
	#GLX_PIXMAP_BIT_SGIX
 0x00000002

	)

198 
	#GLX_RGBA_BIT_SGIX
 0x00000001

	)

199 
	#GLX_COLOR_INDEX_BIT_SGIX
 0x00000002

	)

200 
	#GLX_DRAWABLE_TYPE_SGIX
 0x8010

	)

201 
	#GLX_RENDER_TYPE_SGIX
 0x8011

	)

202 
	#GLX_X_RENDERABLE_SGIX
 0x8012

	)

203 
	#GLX_FBCONFIG_ID_SGIX
 0x8013

	)

204 
	#GLX_RGBA_TYPE_SGIX
 0x8014

	)

205 
	#GLX_COLOR_INDEX_TYPE_SGIX
 0x8015

	)

209 #i‚de‡
GLX_SGIX_pbuf„r


210 
	#GLX_PBUFFER_BIT_SGIX
 0x00000004

	)

211 
	#GLX_BUFFER_CLOBBER_MASK_SGIX
 0x08000000

	)

212 
	#GLX_FRONT_LEFT_BUFFER_BIT_SGIX
 0x00000001

	)

213 
	#GLX_FRONT_RIGHT_BUFFER_BIT_SGIX
 0x00000002

	)

214 
	#GLX_BACK_LEFT_BUFFER_BIT_SGIX
 0x00000004

	)

215 
	#GLX_BACK_RIGHT_BUFFER_BIT_SGIX
 0x00000008

	)

216 
	#GLX_AUX_BUFFERS_BIT_SGIX
 0x00000010

	)

217 
	#GLX_DEPTH_BUFFER_BIT_SGIX
 0x00000020

	)

218 
	#GLX_STENCIL_BUFFER_BIT_SGIX
 0x00000040

	)

219 
	#GLX_ACCUM_BUFFER_BIT_SGIX
 0x00000080

	)

220 
	#GLX_SAMPLE_BUFFERS_BIT_SGIX
 0x00000100

	)

221 
	#GLX_MAX_PBUFFER_WIDTH_SGIX
 0x8016

	)

222 
	#GLX_MAX_PBUFFER_HEIGHT_SGIX
 0x8017

	)

223 
	#GLX_MAX_PBUFFER_PIXELS_SGIX
 0x8018

	)

224 
	#GLX_OPTIMAL_PBUFFER_WIDTH_SGIX
 0x8019

	)

225 
	#GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX
 0x801A

	)

226 
	#GLX_PRESERVED_CONTENTS_SGIX
 0x801B

	)

227 
	#GLX_LARGEST_PBUFFER_SGIX
 0x801C

	)

228 
	#GLX_WIDTH_SGIX
 0x801D

	)

229 
	#GLX_HEIGHT_SGIX
 0x801E

	)

230 
	#GLX_EVENT_MASK_SGIX
 0x801F

	)

231 
	#GLX_DAMAGED_SGIX
 0x8020

	)

232 
	#GLX_SAVED_SGIX
 0x8021

	)

233 
	#GLX_WINDOW_SGIX
 0x8022

	)

234 
	#GLX_PBUFFER_SGIX
 0x8023

	)

237 #i‚de‡
GLX_SGI_cushi⁄


240 #i‚de‡
GLX_SGIX_video_ªsize


241 
	#GLX_SYNC_FRAME_SGIX
 0x00000000

	)

242 
	#GLX_SYNC_SWAP_SGIX
 0x00000001

	)

245 #i‚de‡
GLX_SGIX_dmbuf„r


246 
	#GLX_DIGITAL_MEDIA_PBUFFER_SGIX
 0x8024

	)

249 #i‚de‡
GLX_SGIX_sw≠_group


252 #i‚de‡
GLX_SGIX_sw≠_b¨rõr


255 #i‚de‡
GLX_SGIS_bÀnded_ovîœy


256 
	#GLX_BLENDED_RGBA_SGIS
 0x8025

	)

259 #i‚de‡
GLX_SGIS_sh¨ed_mu…ißm∂e


260 
	#GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS
 0x8026

	)

261 
	#GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS
 0x8027

	)

264 #i‚de‡
GLX_SUN_gë_å™•¨ít_ödex


267 #i‚de‡
GLX_3DFX_mu…ißm∂e


268 
	#GLX_SAMPLE_BUFFERS_3DFX
 0x8050

	)

269 
	#GLX_SAMPLES_3DFX
 0x8051

	)

272 #i‚de‡
GLX_MESA_c›y_sub_buf„r


275 #i‚de‡
GLX_MESA_pixm≠_cﬁ‹m≠


278 #i‚de‡
GLX_MESA_ªÀa£_buf„rs


281 #i‚de‡
GLX_MESA_£t_3dfx_mode


282 
	#GLX_3DFX_WINDOW_MODE_MESA
 0x1

	)

283 
	#GLX_3DFX_FULLSCREEN_MODE_MESA
 0x2

	)

286 #i‚de‡
GLX_SGIX_visuÆ_£À˘_group


287 
	#GLX_VISUAL_SELECT_GROUP_SGIX
 0x8028

	)

290 #i‚de‡
GLX_OML_sw≠_mëhod


291 
	#GLX_SWAP_METHOD_OML
 0x8060

	)

292 
	#GLX_SWAP_EXCHANGE_OML
 0x8061

	)

293 
	#GLX_SWAP_COPY_OML
 0x8062

	)

294 
	#GLX_SWAP_UNDEFINED_OML
 0x8063

	)

297 #i‚de‡
GLX_OML_sync_c⁄åﬁ


300 #i‚de‡
GLX_NV_Êﬂt_buf„r


301 
	#GLX_FLOAT_COMPONENTS_NV
 0x20B0

	)

304 #i‚de‡
GLX_SGIX_hy≥Ωùe


305 
	#GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
 80

	)

306 
	#GLX_BAD_HYPERPIPE_CONFIG_SGIX
 91

	)

307 
	#GLX_BAD_HYPERPIPE_SGIX
 92

	)

308 
	#GLX_HYPERPIPE_DISPLAY_PIPE_SGIX
 0x00000001

	)

309 
	#GLX_HYPERPIPE_RENDER_PIPE_SGIX
 0x00000002

	)

310 
	#GLX_PIPE_RECT_SGIX
 0x00000001

	)

311 
	#GLX_PIPE_RECT_LIMITS_SGIX
 0x00000002

	)

312 
	#GLX_HYPERPIPE_STEREO_SGIX
 0x00000003

	)

313 
	#GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX
 0x00000004

	)

314 
	#GLX_HYPERPIPE_ID_SGIX
 0x8030

	)

317 #i‚de‡
GLX_MESA_agp_off£t


320 #i‚de‡
GLX_EXT_fbc⁄fig_∑cked_Êﬂt


321 
	#GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT
 0x20B1

	)

322 
	#GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT
 0x00000008

	)

325 #i‚de‡
GLX_EXT_‰amebuf„r_sRGB


326 
	#GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT
 0x20B2

	)

329 #i‚de‡
GLX_EXT_ãxtuª_‰om_pixm≠


330 
	#GLX_TEXTURE_1D_BIT_EXT
 0x00000001

	)

331 
	#GLX_TEXTURE_2D_BIT_EXT
 0x00000002

	)

332 
	#GLX_TEXTURE_RECTANGLE_BIT_EXT
 0x00000004

	)

333 
	#GLX_BIND_TO_TEXTURE_RGB_EXT
 0x20D0

	)

334 
	#GLX_BIND_TO_TEXTURE_RGBA_EXT
 0x20D1

	)

335 
	#GLX_BIND_TO_MIPMAP_TEXTURE_EXT
 0x20D2

	)

336 
	#GLX_BIND_TO_TEXTURE_TARGETS_EXT
 0x20D3

	)

337 
	#GLX_Y_INVERTED_EXT
 0x20D4

	)

338 
	#GLX_TEXTURE_FORMAT_EXT
 0x20D5

	)

339 
	#GLX_TEXTURE_TARGET_EXT
 0x20D6

	)

340 
	#GLX_MIPMAP_TEXTURE_EXT
 0x20D7

	)

341 
	#GLX_TEXTURE_FORMAT_NONE_EXT
 0x20D8

	)

342 
	#GLX_TEXTURE_FORMAT_RGB_EXT
 0x20D9

	)

343 
	#GLX_TEXTURE_FORMAT_RGBA_EXT
 0x20DA

	)

344 
	#GLX_TEXTURE_1D_EXT
 0x20DB

	)

345 
	#GLX_TEXTURE_2D_EXT
 0x20DC

	)

346 
	#GLX_TEXTURE_RECTANGLE_EXT
 0x20DD

	)

347 
	#GLX_FRONT_LEFT_EXT
 0x20DE

	)

348 
	#GLX_FRONT_RIGHT_EXT
 0x20DF

	)

349 
	#GLX_BACK_LEFT_EXT
 0x20E0

	)

350 
	#GLX_BACK_RIGHT_EXT
 0x20E1

	)

351 
	#GLX_FRONT_EXT
 
GLX_FRONT_LEFT_EXT


	)

352 
	#GLX_BACK_EXT
 
GLX_BACK_LEFT_EXT


	)

353 
	#GLX_AUX0_EXT
 0x20E2

	)

354 
	#GLX_AUX1_EXT
 0x20E3

	)

355 
	#GLX_AUX2_EXT
 0x20E4

	)

356 
	#GLX_AUX3_EXT
 0x20E5

	)

357 
	#GLX_AUX4_EXT
 0x20E6

	)

358 
	#GLX_AUX5_EXT
 0x20E7

	)

359 
	#GLX_AUX6_EXT
 0x20E8

	)

360 
	#GLX_AUX7_EXT
 0x20E9

	)

361 
	#GLX_AUX8_EXT
 0x20EA

	)

362 
	#GLX_AUX9_EXT
 0x20EB

	)

365 #i‚de‡
GLX_NV_¥e£¡_video


366 
	#GLX_NUM_VIDEO_SLOTS_NV
 0x20F0

	)

369 #i‚de‡
GLX_NV_video_out


370 
	#GLX_VIDEO_OUT_COLOR_NV
 0x20C3

	)

371 
	#GLX_VIDEO_OUT_ALPHA_NV
 0x20C4

	)

372 
	#GLX_VIDEO_OUT_DEPTH_NV
 0x20C5

	)

373 
	#GLX_VIDEO_OUT_COLOR_AND_ALPHA_NV
 0x20C6

	)

374 
	#GLX_VIDEO_OUT_COLOR_AND_DEPTH_NV
 0x20C7

	)

375 
	#GLX_VIDEO_OUT_FRAME_NV
 0x20C8

	)

376 
	#GLX_VIDEO_OUT_FIELD_1_NV
 0x20C9

	)

377 
	#GLX_VIDEO_OUT_FIELD_2_NV
 0x20CA

	)

378 
	#GLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV
 0x20CB

	)

379 
	#GLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV
 0x20CC

	)

382 #i‚de‡
GLX_NV_sw≠_group


385 #i‚de‡
GLX_NV_video_ˇ±uª


386 
	#GLX_DEVICE_ID_NV
 0x20CD

	)

387 
	#GLX_UNIQUE_ID_NV
 0x20CE

	)

388 
	#GLX_NUM_VIDEO_CAPTURE_SLOTS_NV
 0x20CF

	)

391 #i‚de‡
GLX_EXT_sw≠_c⁄åﬁ


392 
	#GLX_SWAP_INTERVAL_EXT
 0x20F1

	)

393 
	#GLX_MAX_SWAP_INTERVAL_EXT
 0x20F2

	)

396 #i‚de‡
GLX_NV_c›y_image


402 #i‚de‡
GLX_ARB_gë_¥oc_addªss


403 (*
__GLXextFuncPå
)();

406 #i‚de‡
GLX_SGIX_video_sour˚


407 
XID
 
	tGLXVideoSour˚SGIX
;

410 #i‚de‡
GLX_SGIX_fbc⁄fig


411 
XID
 
	tGLXFBC⁄figIDSGIX
;

412 
__GLXFBC⁄figRec
 *
	tGLXFBC⁄figSGIX
;

415 #i‚de‡
GLX_SGIX_pbuf„r


416 
XID
 
	tGLXPbuf„rSGIX
;

418 
ty≥
;

419 
£rül
;

420 
Boﬁ
 
£nd_evít
;

421 
Di•œy
 *
di•œy
;

422 
GLXDøwabÀ
 
døwabÀ
;

423 
evít_ty≥
;

424 
døw_ty≥
;

425 
mask
;

426 
x
, 
y
;

427 
width
, 
height
;

428 
cou¡
;

429 } 
	tGLXBuf„rClobbîEvítSGIX
;

432 #i‚de‡
GLX_NV_video_ouçut


433 
	tGLXVideoDevi˚NV
;

436 #i‚de‡
GLX_NV_video_ˇ±uª


437 
XID
 
	tGLXVideoC≠tuªDevi˚NV
;

440 #i‚de‡
GLEXT_64_TYPES_DEFINED


442 
	#GLEXT_64_TYPES_DEFINED


	)

445 #i‡
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

446 
	~<öây≥s.h
>

447 #ñi‡
deföed
(
__sun__
Ë|| deföed(
__digôÆ__
)

448 
	~<öây≥s.h
>

449 #i‡
deföed
(
__STDC__
)

450 #i‡
deföed
(
__¨ch64__
Ë|| deföed(
_LP64
)

451 
	töt64_t
;

452 
	tuöt64_t
;

454 
	töt64_t
;

455 
	tuöt64_t
;

458 #ñi‡
deföed
–
__VMS
 ) || deföed(
__sgi
)

459 
	~<öây≥s.h
>

460 #ñi‡
deföed
(
__SCO__
Ë|| deföed(
__USLC__
)

461 
	~<°döt.h
>

462 #ñi‡
deföed
(
__UNIXOS2__
Ë|| deföed(
__SOL64__
)

463 
	töt32_t
;

464 
	töt64_t
;

465 
	tuöt64_t
;

466 #ñi‡
deföed
(
_WIN32
Ë&& deföed(
__GNUC__
)

467 
	~<°döt.h
>

468 #ñi‡
deföed
(
_WIN32
)

469 
__öt32
 
	töt32_t
;

470 
__öt64
 
	töt64_t
;

471 
	t__öt64
 
	tuöt64_t
;

473 
	~<öây≥s.h
>

477 #i‚de‡
GLX_VERSION_1_3


478 
	#GLX_VERSION_1_3
 1

	)

479 #ifde‡
GLX_GLXEXT_PROTOTYPES


480 
GLXFBC⁄fig
 * 
glXGëFBC⁄figs
 (
Di•œy
 *, , *);

481 
GLXFBC⁄fig
 * 
glXChoo£FBC⁄fig
 (
Di•œy
 *, , const *, *);

482 
glXGëFBC⁄figAârib
 (
Di•œy
 *, 
GLXFBC⁄fig
, , *);

483 
XVisuÆInfo
 * 
glXGëVisuÆFromFBC⁄fig
 (
Di•œy
 *, 
GLXFBC⁄fig
);

484 
GLXWödow
 
glXCª©eWödow
 (
Di•œy
 *, 
GLXFBC⁄fig
, 
Wödow
, const *);

485 
glXDe°royWödow
 (
Di•œy
 *, 
GLXWödow
);

486 
GLXPixm≠
 
glXCª©ePixm≠
 (
Di•œy
 *, 
GLXFBC⁄fig
, 
Pixm≠
, const *);

487 
glXDe°royPixm≠
 (
Di•œy
 *, 
GLXPixm≠
);

488 
GLXPbuf„r
 
glXCª©ePbuf„r
 (
Di•œy
 *, 
GLXFBC⁄fig
, const *);

489 
glXDe°royPbuf„r
 (
Di•œy
 *, 
GLXPbuf„r
);

490 
glXQuîyDøwabÀ
 (
Di•œy
 *, 
GLXDøwabÀ
, , *);

491 
GLXC⁄ãxt
 
glXCª©eNewC⁄ãxt
 (
Di•œy
 *, 
GLXFBC⁄fig
, , GLXC⁄ãxt, 
Boﬁ
);

492 
Boﬁ
 
glXMakeC⁄ãxtCuºít
 (
Di•œy
 *, 
GLXDøwabÀ
, GLXDøwabÀ, 
GLXC⁄ãxt
);

493 
GLXDøwabÀ
 
glXGëCuºítRódDøwabÀ
 ();

494 
Di•œy
 * 
glXGëCuºítDi•œy
 ();

495 
glXQuîyC⁄ãxt
 (
Di•œy
 *, 
GLXC⁄ãxt
, , *);

496 
glXSñe˘Evít
 (
Di•œy
 *, 
GLXDøwabÀ
, );

497 
glXGëSñe˘edEvít
 (
Di•œy
 *, 
GLXDøwabÀ
, *);

499 
	gGLXFBC⁄fig
 * ( * 
	tPFNGLXGETFBCONFIGSPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, *
	t√Àmíts
);

500 
	gGLXFBC⁄fig
 * ( * 
	tPFNGLXCHOOSEFBCONFIGPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, c⁄° *
	t©åib_li°
, *
	t√Àmíts
);

501 –* 
	gPFNGLXGETFBCONFIGATTRIBPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	t©åibuã
, *
	tvÆue
);

502 
	gXVisuÆInfo
 * ( * 
	tPFNGLXGETVISUALFROMFBCONFIGPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
);

503 
GLXWödow
 ( * 
	tPFNGLXCREATEWINDOWPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tWödow
 
	twö
, c⁄° *
	t©åib_li°
);

504 –* 
	gPFNGLXDESTROYWINDOWPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXWödow
 
	twö
);

505 
GLXPixm≠
 ( * 
	tPFNGLXCREATEPIXMAPPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tPixm≠
 
	tpixm≠
, c⁄° *
	t©åib_li°
);

506 –* 
	gPFNGLXDESTROYPIXMAPPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPixm≠
 
	tpixm≠
);

507 
GLXPbuf„r
 ( * 
	tPFNGLXCREATEPBUFFERPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, c⁄° *
	t©åib_li°
);

508 –* 
	gPFNGLXDESTROYPBUFFERPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPbuf„r
 
	tpbuf
);

509 –* 
	gPFNGLXQUERYDRAWABLEPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, 
	t©åibuã
, *
	tvÆue
);

510 
GLXC⁄ãxt
 ( * 
	tPFNGLXCREATENEWCONTEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tªndî_ty≥
, 
	tGLXC⁄ãxt
 
	tsh¨e_li°
, 
	tBoﬁ
 
	tdúe˘
);

511 
Boﬁ
 ( * 
	tPFNGLXMAKECONTEXTCURRENTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, GLXDøwabÀ 
	tªad
, 
	tGLXC⁄ãxt
 
	t˘x
);

512 
GLXDøwabÀ
 ( * 
	tPFNGLXGETCURRENTREADDRAWABLEPROC
) ();

513 
	gDi•œy
 * ( * 
	tPFNGLXGETCURRENTDISPLAYPROC
) ();

514 –* 
	gPFNGLXQUERYCONTEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXC⁄ãxt
 
	t˘x
, 
	t©åibuã
, *
	tvÆue
);

515 –* 
	gPFNGLXSELECTEVENTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, 
	tevít_mask
);

516 –* 
	gPFNGLXGETSELECTEDEVENTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, *
	tevít_mask
);

519 #i‚de‡
GLX_VERSION_1_4


520 
	#GLX_VERSION_1_4
 1

	)

521 #ifde‡
GLX_GLXEXT_PROTOTYPES


522 
__GLXextFuncPå
 
glXGëProcAddªss
 (c⁄° 
GLubyã
 *);

524 
__GLXextFuncPå
 ( * 
	tPFNGLXGETPROCADDRESSPROC
Ë(c⁄° 
	tGLubyã
 *
	t¥ocName
);

527 #i‚de‡
GLX_ARB_gë_¥oc_addªss


528 
	#GLX_ARB_gë_¥oc_addªss
 1

	)

529 #ifde‡
GLX_GLXEXT_PROTOTYPES


530 
__GLXextFuncPå
 
glXGëProcAddªssARB
 (c⁄° 
GLubyã
 *);

532 
__GLXextFuncPå
 ( * 
	tPFNGLXGETPROCADDRESSARBPROC
Ë(c⁄° 
	tGLubyã
 *
	t¥ocName
);

535 #i‚de‡
GLX_ARB_mu…ißm∂e


536 
	#GLX_ARB_mu…ißm∂e
 1

	)

539 #i‚de‡
GLX_ARB_fbc⁄fig_Êﬂt


540 
	#GLX_ARB_fbc⁄fig_Êﬂt
 1

	)

543 #i‚de‡
GLX_ARB_¸óã_c⁄ãxt


544 
	#GLX_ARB_¸óã_c⁄ãxt
 1

	)

545 #ifde‡
GLX_GLXEXT_PROTOTYPES


546 
GLXC⁄ãxt
 
glXCª©eC⁄ãxtAâribsARB
 (
Di•œy
 *, 
GLXFBC⁄fig
, GLXC⁄ãxt, 
Boﬁ
, const *);

548 
GLXC⁄ãxt
 ( * 
	tPFNGLXCREATECONTEXTATTRIBSARBPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄fig
 
	tc⁄fig
, 
	tGLXC⁄ãxt
 
	tsh¨e_c⁄ãxt
, 
	tBoﬁ
 
	tdúe˘
, c⁄° *
	t©åib_li°
);

551 #i‚de‡
GLX_ARB_¸óã_c⁄ãxt_¥ofûe


552 
	#GLX_ARB_¸óã_c⁄ãxt_¥ofûe
 1

	)

555 #i‚de‡
GLX_SGIS_mu…ißm∂e


556 
	#GLX_SGIS_mu…ißm∂e
 1

	)

559 #i‚de‡
GLX_EXT_visuÆ_öfo


560 
	#GLX_EXT_visuÆ_öfo
 1

	)

563 #i‚de‡
GLX_SGI_sw≠_c⁄åﬁ


564 
	#GLX_SGI_sw≠_c⁄åﬁ
 1

	)

565 #ifde‡
GLX_GLXEXT_PROTOTYPES


566 
glXSw≠I¡îvÆSGI
 ();

568 –* 
	gPFNGLXSWAPINTERVALSGIPROC
Ë(
	töãrvÆ
);

571 #i‚de‡
GLX_SGI_video_sync


572 
	#GLX_SGI_video_sync
 1

	)

573 #ifde‡
GLX_GLXEXT_PROTOTYPES


574 
glXGëVideoSyncSGI
 (*);

575 
glXWaôVideoSyncSGI
 (, , *);

577 –* 
	gPFNGLXGETVIDEOSYNCSGIPROC
Ë(*
	tcou¡
);

578 –* 
	gPFNGLXWAITVIDEOSYNCSGIPROC
Ë(
	tdivis‹
, 
	tªmaödî
, *
	tcou¡
);

581 #i‚de‡
GLX_SGI_make_cuºít_ªad


582 
	#GLX_SGI_make_cuºít_ªad
 1

	)

583 #ifde‡
GLX_GLXEXT_PROTOTYPES


584 
Boﬁ
 
glXMakeCuºítRódSGI
 (
Di•œy
 *, 
GLXDøwabÀ
, GLXDøwabÀ, 
GLXC⁄ãxt
);

585 
GLXDøwabÀ
 
glXGëCuºítRódDøwabÀSGI
 ();

587 
Boﬁ
 ( * 
	tPFNGLXMAKECURRENTREADSGIPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøw
, GLXDøwabÀ 
	tªad
, 
	tGLXC⁄ãxt
 
	t˘x
);

588 
GLXDøwabÀ
 ( * 
	tPFNGLXGETCURRENTREADDRAWABLESGIPROC
) ();

591 #i‚de‡
GLX_SGIX_video_sour˚


592 
	#GLX_SGIX_video_sour˚
 1

	)

593 #ifde‡
_VL_H


594 #ifde‡
GLX_GLXEXT_PROTOTYPES


595 
GLXVideoSour˚SGIX
 
glXCª©eGLXVideoSour˚SGIX
 (
Di•œy
 *, , 
VLSîvî
, 
VLP©h
, , 
VLNode
);

596 
glXDe°royGLXVideoSour˚SGIX
 (
Di•œy
 *, 
GLXVideoSour˚SGIX
);

598 
GLXVideoSour˚SGIX
 ( * 
	tPFNGLXCREATEGLXVIDEOSOURCESGIXPROC
Ë(
	tDi•œy
 *
	tdi•œy
, 
	ts¸ìn
, 
	tVLSîvî
 
	t£rvî
, 
	tVLP©h
 
	t∑th
, 
	tnodeCœss
, 
	tVLNode
 
	tdøöNode
);

599 –* 
	gPFNGLXDESTROYGLXVIDEOSOURCESGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXVideoSour˚SGIX
 
	tglxvideosour˚
);

603 #i‚de‡
GLX_EXT_visuÆ_øtög


604 
	#GLX_EXT_visuÆ_øtög
 1

	)

607 #i‚de‡
GLX_EXT_imp‹t_c⁄ãxt


608 
	#GLX_EXT_imp‹t_c⁄ãxt
 1

	)

609 #ifde‡
GLX_GLXEXT_PROTOTYPES


610 
Di•œy
 * 
glXGëCuºítDi•œyEXT
 ();

611 
glXQuîyC⁄ãxtInfoEXT
 (
Di•œy
 *, 
GLXC⁄ãxt
, , *);

612 
GLXC⁄ãxtID
 
glXGëC⁄ãxtIDEXT
 (c⁄° 
GLXC⁄ãxt
);

613 
GLXC⁄ãxt
 
glXImp‹tC⁄ãxtEXT
 (
Di•œy
 *, 
GLXC⁄ãxtID
);

614 
glXFªeC⁄ãxtEXT
 (
Di•œy
 *, 
GLXC⁄ãxt
);

616 
	gDi•œy
 * ( * 
	tPFNGLXGETCURRENTDISPLAYEXTPROC
) ();

617 –* 
	gPFNGLXQUERYCONTEXTINFOEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXC⁄ãxt
 
	tc⁄ãxt
, 
	t©åibuã
, *
	tvÆue
);

618 
GLXC⁄ãxtID
 ( * 
	tPFNGLXGETCONTEXTIDEXTPROC
Ë(c⁄° 
	tGLXC⁄ãxt
 
	tc⁄ãxt
);

619 
GLXC⁄ãxt
 ( * 
	tPFNGLXIMPORTCONTEXTEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXC⁄ãxtID
 
	tc⁄ãxtID
);

620 –* 
	gPFNGLXFREECONTEXTEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXC⁄ãxt
 
	tc⁄ãxt
);

623 #i‚de‡
GLX_SGIX_fbc⁄fig


624 
	#GLX_SGIX_fbc⁄fig
 1

	)

625 #ifde‡
GLX_GLXEXT_PROTOTYPES


626 
glXGëFBC⁄figAâribSGIX
 (
Di•œy
 *, 
GLXFBC⁄figSGIX
, , *);

627 
GLXFBC⁄figSGIX
 * 
glXChoo£FBC⁄figSGIX
 (
Di•œy
 *, , *, *);

628 
GLXPixm≠
 
glXCª©eGLXPixm≠WôhC⁄figSGIX
 (
Di•œy
 *, 
GLXFBC⁄figSGIX
, 
Pixm≠
);

629 
GLXC⁄ãxt
 
glXCª©eC⁄ãxtWôhC⁄figSGIX
 (
Di•œy
 *, 
GLXFBC⁄figSGIX
, , GLXC⁄ãxt, 
Boﬁ
);

630 
XVisuÆInfo
 * 
glXGëVisuÆFromFBC⁄figSGIX
 (
Di•œy
 *, 
GLXFBC⁄figSGIX
);

631 
GLXFBC⁄figSGIX
 
glXGëFBC⁄figFromVisuÆSGIX
 (
Di•œy
 *, 
XVisuÆInfo
 *);

633 –* 
	gPFNGLXGETFBCONFIGATTRIBSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄figSGIX
 
	tc⁄fig
, 
	t©åibuã
, *
	tvÆue
);

634 
	gGLXFBC⁄figSGIX
 * ( * 
	tPFNGLXCHOOSEFBCONFIGSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, *
	t©åib_li°
, *
	t√Àmíts
);

635 
GLXPixm≠
 ( * 
	tPFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄figSGIX
 
	tc⁄fig
, 
	tPixm≠
 
	tpixm≠
);

636 
GLXC⁄ãxt
 ( * 
	tPFNGLXCREATECONTEXTWITHCONFIGSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄figSGIX
 
	tc⁄fig
, 
	tªndî_ty≥
, 
	tGLXC⁄ãxt
 
	tsh¨e_li°
, 
	tBoﬁ
 
	tdúe˘
);

637 
	gXVisuÆInfo
 * ( * 
	tPFNGLXGETVISUALFROMFBCONFIGSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄figSGIX
 
	tc⁄fig
);

638 
GLXFBC⁄figSGIX
 ( * 
	tPFNGLXGETFBCONFIGFROMVISUALSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tXVisuÆInfo
 *
	tvis
);

641 #i‚de‡
GLX_SGIX_pbuf„r


642 
	#GLX_SGIX_pbuf„r
 1

	)

643 #ifde‡
GLX_GLXEXT_PROTOTYPES


644 
GLXPbuf„rSGIX
 
glXCª©eGLXPbuf„rSGIX
 (
Di•œy
 *, 
GLXFBC⁄figSGIX
, , , *);

645 
glXDe°royGLXPbuf„rSGIX
 (
Di•œy
 *, 
GLXPbuf„rSGIX
);

646 
glXQuîyGLXPbuf„rSGIX
 (
Di•œy
 *, 
GLXPbuf„rSGIX
, , *);

647 
glXSñe˘EvítSGIX
 (
Di•œy
 *, 
GLXDøwabÀ
, );

648 
glXGëSñe˘edEvítSGIX
 (
Di•œy
 *, 
GLXDøwabÀ
, *);

650 
GLXPbuf„rSGIX
 ( * 
	tPFNGLXCREATEGLXPBUFFERSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXFBC⁄figSGIX
 
	tc⁄fig
, 
	twidth
, 
	theight
, *
	t©åib_li°
);

651 –* 
	gPFNGLXDESTROYGLXPBUFFERSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPbuf„rSGIX
 
	tpbuf
);

652 –* 
	gPFNGLXQUERYGLXPBUFFERSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPbuf„rSGIX
 
	tpbuf
, 
	t©åibuã
, *
	tvÆue
);

653 –* 
	gPFNGLXSELECTEVENTSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tmask
);

654 –* 
	gPFNGLXGETSELECTEDEVENTSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, *
	tmask
);

657 #i‚de‡
GLX_SGI_cushi⁄


658 
	#GLX_SGI_cushi⁄
 1

	)

659 #ifde‡
GLX_GLXEXT_PROTOTYPES


660 
glXCushi⁄SGI
 (
Di•œy
 *, 
Wödow
, );

662 –* 
	gPFNGLXCUSHIONSGIPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tWödow
 
	twödow
, 
	tcushi⁄
);

665 #i‚de‡
GLX_SGIX_video_ªsize


666 
	#GLX_SGIX_video_ªsize
 1

	)

667 #ifde‡
GLX_GLXEXT_PROTOTYPES


668 
glXBödCh™√lToWödowSGIX
 (
Di•œy
 *, , , 
Wödow
);

669 
glXCh™√lRe˘SGIX
 (
Di•œy
 *, , , , , , );

670 
glXQuîyCh™√lRe˘SGIX
 (
Di•œy
 *, , , *, *, *, *);

671 
glXQuîyCh™√lDñèsSGIX
 (
Di•œy
 *, , , *, *, *, *);

672 
glXCh™√lRe˘SyncSGIX
 (
Di•œy
 *, , , 
GLíum
);

674 –* 
	gPFNGLXBINDCHANNELTOWINDOWSGIXPROC
Ë(
	tDi•œy
 *
	tdi•œy
, 
	ts¸ìn
, 
	tch™√l
, 
	tWödow
 
	twödow
);

675 –* 
	gPFNGLXCHANNELRECTSGIXPROC
Ë(
	tDi•œy
 *
	tdi•œy
, 
	ts¸ìn
, 
	tch™√l
, 
	tx
, 
	ty
, 
	tw
, 
	th
);

676 –* 
	gPFNGLXQUERYCHANNELRECTSGIXPROC
Ë(
	tDi•œy
 *
	tdi•œy
, 
	ts¸ìn
, 
	tch™√l
, *
	tdx
, *
	tdy
, *
	tdw
, *
	tdh
);

677 –* 
	gPFNGLXQUERYCHANNELDELTASSGIXPROC
Ë(
	tDi•œy
 *
	tdi•œy
, 
	ts¸ìn
, 
	tch™√l
, *
	tx
, *
	ty
, *
	tw
, *
	th
);

678 –* 
	gPFNGLXCHANNELRECTSYNCSGIXPROC
Ë(
	tDi•œy
 *
	tdi•œy
, 
	ts¸ìn
, 
	tch™√l
, 
	tGLíum
 
	tsyn˘y≥
);

681 #i‚de‡
GLX_SGIX_dmbuf„r


682 
	#GLX_SGIX_dmbuf„r
 1

	)

683 #ifde‡
_DM_BUFFER_H_


684 #ifde‡
GLX_GLXEXT_PROTOTYPES


685 
Boﬁ
 
glXAssocüãDMPbuf„rSGIX
 (
Di•œy
 *, 
GLXPbuf„rSGIX
, 
DM∑øms
 *, 
DMbuf„r
);

687 
Boﬁ
 ( * 
	tPFNGLXASSOCIATEDMPBUFFERSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPbuf„rSGIX
 
	tpbuf„r
, 
	tDM∑øms
 *
	t∑øms
, 
	tDMbuf„r
 
	tdmbuf„r
);

691 #i‚de‡
GLX_SGIX_sw≠_group


692 
	#GLX_SGIX_sw≠_group
 1

	)

693 #ifde‡
GLX_GLXEXT_PROTOTYPES


694 
glXJoöSw≠GroupSGIX
 (
Di•œy
 *, 
GLXDøwabÀ
, GLXDrawable);

696 –* 
	gPFNGLXJOINSWAPGROUPSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, GLXDøwabÀ 
	tmembî
);

699 #i‚de‡
GLX_SGIX_sw≠_b¨rõr


700 
	#GLX_SGIX_sw≠_b¨rõr
 1

	)

701 #ifde‡
GLX_GLXEXT_PROTOTYPES


702 
glXBödSw≠B¨rõrSGIX
 (
Di•œy
 *, 
GLXDøwabÀ
, );

703 
Boﬁ
 
glXQuîyMaxSw≠B¨rõrsSGIX
 (
Di•œy
 *, , *);

705 –* 
	gPFNGLXBINDSWAPBARRIERSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tb¨rõr
);

706 
Boﬁ
 ( * 
	tPFNGLXQUERYMAXSWAPBARRIERSSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, *
	tmax
);

709 #i‚de‡
GLX_SUN_gë_å™•¨ít_ödex


710 
	#GLX_SUN_gë_å™•¨ít_ödex
 1

	)

711 #ifde‡
GLX_GLXEXT_PROTOTYPES


712 
Sètus
 
glXGëTøn•¨ítIndexSUN
 (
Di•œy
 *, 
Wödow
, Window, *);

714 
Sètus
 ( * 
	tPFNGLXGETTRANSPARENTINDEXSUNPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tWödow
 
	tovîœy
, Wödow 
	tundîœy
, *
	tpTøn•¨ítIndex
);

717 #i‚de‡
GLX_MESA_c›y_sub_buf„r


718 
	#GLX_MESA_c›y_sub_buf„r
 1

	)

719 #ifde‡
GLX_GLXEXT_PROTOTYPES


720 
glXC›ySubBuf„rMESA
 (
Di•œy
 *, 
GLXDøwabÀ
, , , , );

722 –* 
	gPFNGLXCOPYSUBBUFFERMESAPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tx
, 
	ty
, 
	twidth
, 
	theight
);

725 #i‚de‡
GLX_MESA_pixm≠_cﬁ‹m≠


726 
	#GLX_MESA_pixm≠_cﬁ‹m≠
 1

	)

727 #ifde‡
GLX_GLXEXT_PROTOTYPES


728 
GLXPixm≠
 
glXCª©eGLXPixm≠MESA
 (
Di•œy
 *, 
XVisuÆInfo
 *, 
Pixm≠
, 
Cﬁ‹m≠
);

730 
GLXPixm≠
 ( * 
	tPFNGLXCREATEGLXPIXMAPMESAPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tXVisuÆInfo
 *
	tvisuÆ
, 
	tPixm≠
 
	tpixm≠
, 
	tCﬁ‹m≠
 
	tcm≠
);

733 #i‚de‡
GLX_MESA_ªÀa£_buf„rs


734 
	#GLX_MESA_ªÀa£_buf„rs
 1

	)

735 #ifde‡
GLX_GLXEXT_PROTOTYPES


736 
Boﬁ
 
glXRñó£Buf„rsMESA
 (
Di•œy
 *, 
GLXDøwabÀ
);

738 
Boﬁ
 ( * 
	tPFNGLXRELEASEBUFFERSMESAPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
);

741 #i‚de‡
GLX_MESA_£t_3dfx_mode


742 
	#GLX_MESA_£t_3dfx_mode
 1

	)

743 #ifde‡
GLX_GLXEXT_PROTOTYPES


744 
Boﬁ
 
glXSë3DfxModeMESA
 ();

746 
Boﬁ
 ( * 
	tPFNGLXSET3DFXMODEMESAPROC
Ë(
	tmode
);

749 #i‚de‡
GLX_SGIX_visuÆ_£À˘_group


750 
	#GLX_SGIX_visuÆ_£À˘_group
 1

	)

753 #i‚de‡
GLX_OML_sw≠_mëhod


754 
	#GLX_OML_sw≠_mëhod
 1

	)

757 #i‚de‡
GLX_OML_sync_c⁄åﬁ


758 
	#GLX_OML_sync_c⁄åﬁ
 1

	)

759 #ifde‡
GLX_GLXEXT_PROTOTYPES


760 
Boﬁ
 
glXGëSyncVÆuesOML
 (
Di•œy
 *, 
GLXDøwabÀ
, 
öt64_t
 *, int64_t *, int64_t *);

761 
Boﬁ
 
glXGëMscR©eOML
 (
Di•œy
 *, 
GLXDøwabÀ
, 
öt32_t
 *, int32_t *);

762 
öt64_t
 
glXSw≠Buf„rsMscOML
 (
Di•œy
 *, 
GLXDøwabÀ
, int64_t, int64_t, int64_t);

763 
Boﬁ
 
glXWaôF‹MscOML
 (
Di•œy
 *, 
GLXDøwabÀ
, 
öt64_t
, int64_t, int64_t, int64_t *, int64_t *, int64_t *);

764 
Boﬁ
 
glXWaôF‹SbcOML
 (
Di•œy
 *, 
GLXDøwabÀ
, 
öt64_t
, int64_t *, int64_t *, int64_t *);

766 
Boﬁ
 ( * 
	tPFNGLXGETSYNCVALUESOMLPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt64_t
 *
	tu°
, i¡64_à*
	tmsc
, i¡64_à*
	tsbc
);

767 
Boﬁ
 ( * 
	tPFNGLXGETMSCRATEOMLPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt32_t
 *
	tnumî©‹
, i¡32_à*
	tdíomö©‹
);

768 
öt64_t
 ( * 
	tPFNGLXSWAPBUFFERSMSCOMLPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt64_t
 
	tèrgë_msc
, i¡64_à
	tdivis‹
, i¡64_à
	tªmaödî
);

769 
Boﬁ
 ( * 
	tPFNGLXWAITFORMSCOMLPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt64_t
 
	tèrgë_msc
, i¡64_à
	tdivis‹
, i¡64_à
	tªmaödî
, i¡64_à*
	tu°
, i¡64_à*
	tmsc
, i¡64_à*
	tsbc
);

770 
Boﬁ
 ( * 
	tPFNGLXWAITFORSBCOMLPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töt64_t
 
	tèrgë_sbc
, i¡64_à*
	tu°
, i¡64_à*
	tmsc
, i¡64_à*
	tsbc
);

773 #i‚de‡
GLX_NV_Êﬂt_buf„r


774 
	#GLX_NV_Êﬂt_buf„r
 1

	)

777 #i‚de‡
GLX_SGIX_hy≥Ωùe


778 
	#GLX_SGIX_hy≥Ωùe
 1

	)

781 
	gpùeName
[
GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
];

782 
	g√tw‹kId
;

783 } 
	tGLXHy≥ΩùeNëw‹kSGIX
;

786 
	gpùeName
[
GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
];

787 
	gch™√l
;

789 
	g∑πicù©i⁄Ty≥
;

790 
	gtimeSli˚
;

791 } 
	tGLXHy≥ΩùeC⁄figSGIX
;

794 
	gpùeName
[
GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
];

795 
	g§cXOrigö
, 
	g§cYOrigö
, 
	g§cWidth
, 
	g§cHeight
;

796 
	gde°XOrigö
, 
	gde°YOrigö
, 
	gde°Width
, 
	gde°Height
;

797 } 
	tGLXPùeRe˘
;

800 
	gpùeName
[
GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
];

801 
	gXOrigö
, 
	gYOrigö
, 
	gmaxHeight
, 
	gmaxWidth
;

802 } 
	tGLXPùeRe˘Limôs
;

804 #ifde‡
GLX_GLXEXT_PROTOTYPES


805 
GLXHy≥ΩùeNëw‹kSGIX
 * 
glXQuîyHy≥ΩùeNëw‹kSGIX
 (
Di•œy
 *, *);

806 
glXHy≥ΩùeC⁄figSGIX
 (
Di•œy
 *, , , 
GLXHy≥ΩùeC⁄figSGIX
 *, *);

807 
GLXHy≥ΩùeC⁄figSGIX
 * 
glXQuîyHy≥ΩùeC⁄figSGIX
 (
Di•œy
 *, , *);

808 
glXDe°royHy≥ΩùeC⁄figSGIX
 (
Di•œy
 *, );

809 
glXBödHy≥ΩùeSGIX
 (
Di•œy
 *, );

810 
glXQuîyHy≥ΩùeBe°AâribSGIX
 (
Di•œy
 *, , , , *, *);

811 
glXHy≥ΩùeAâribSGIX
 (
Di•œy
 *, , , , *);

812 
glXQuîyHy≥ΩùeAâribSGIX
 (
Di•œy
 *, , , , *);

814 
	gGLXHy≥ΩùeNëw‹kSGIX
 * ( * 
	tPFNGLXQUERYHYPERPIPENETWORKSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, *
	t≈ùes
);

815 –* 
	gPFNGLXHYPERPIPECONFIGSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	t√tw‹kId
, 
	t≈ùes
, 
	tGLXHy≥ΩùeC⁄figSGIX
 *
	tcfg
, *
	thpId
);

816 
	gGLXHy≥ΩùeC⁄figSGIX
 * ( * 
	tPFNGLXQUERYHYPERPIPECONFIGSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	thpId
, *
	t≈ùes
);

817 –* 
	gPFNGLXDESTROYHYPERPIPECONFIGSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	thpId
);

818 –* 
	gPFNGLXBINDHYPERPIPESGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	thpId
);

819 –* 
	gPFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ttimeSli˚
, 
	t©åib
, 
	tsize
, *
	t©åibLi°
, *
	tªtu∫AâribLi°
);

820 –* 
	gPFNGLXHYPERPIPEATTRIBSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ttimeSli˚
, 
	t©åib
, 
	tsize
, *
	t©åibLi°
);

821 –* 
	gPFNGLXQUERYHYPERPIPEATTRIBSGIXPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ttimeSli˚
, 
	t©åib
, 
	tsize
, *
	tªtu∫AâribLi°
);

824 #i‚de‡
GLX_MESA_agp_off£t


825 
	#GLX_MESA_agp_off£t
 1

	)

826 #ifde‡
GLX_GLXEXT_PROTOTYPES


827 
glXGëAGPOff£tMESA
 (const *);

829 –* 
	tPFNGLXGETAGPOFFSETMESAPROC
Ë(c⁄° *
	tpoöãr
);

832 #i‚de‡
GLX_EXT_fbc⁄fig_∑cked_Êﬂt


833 
	#GLX_EXT_fbc⁄fig_∑cked_Êﬂt
 1

	)

836 #i‚de‡
GLX_EXT_‰amebuf„r_sRGB


837 
	#GLX_EXT_‰amebuf„r_sRGB
 1

	)

840 #i‚de‡
GLX_EXT_ãxtuª_‰om_pixm≠


841 
	#GLX_EXT_ãxtuª_‰om_pixm≠
 1

	)

842 #ifde‡
GLX_GLXEXT_PROTOTYPES


843 
glXBödTexImageEXT
 (
Di•œy
 *, 
GLXDøwabÀ
, , const *);

844 
glXRñó£TexImageEXT
 (
Di•œy
 *, 
GLXDøwabÀ
, );

846 –* 
	gPFNGLXBINDTEXIMAGEEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tbuf„r
, c⁄° *
	t©åib_li°
);

847 –* 
	gPFNGLXRELEASETEXIMAGEEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tbuf„r
);

850 #i‚de‡
GLX_NV_¥e£¡_video


851 
	#GLX_NV_¥e£¡_video
 1

	)

852 #ifde‡
GLX_GLXEXT_PROTOTYPES


853 * 
glXEnumî©eVideoDevi˚sNV
 (
Di•œy
 *, , *);

854 
glXBödVideoDevi˚NV
 (
Di•œy
 *, , , const *);

856 * ( * 
	tPFNGLXENUMERATEVIDEODEVICESNVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, *
	t√Àmíts
);

857 –* 
	gPFNGLXBINDVIDEODEVICENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tvideo_¶Ÿ
, 
	tvideo_devi˚
, c⁄° *
	t©åib_li°
);

860 #i‚de‡
GLX_NV_video_ouçut


861 
	#GLX_NV_video_ouçut
 1

	)

862 #ifde‡
GLX_GLXEXT_PROTOTYPES


863 
glXGëVideoDevi˚NV
 (
Di•œy
 *, , , 
GLXVideoDevi˚NV
 *);

864 
glXRñó£VideoDevi˚NV
 (
Di•œy
 *, , 
GLXVideoDevi˚NV
);

865 
glXBödVideoImageNV
 (
Di•œy
 *, 
GLXVideoDevi˚NV
, 
GLXPbuf„r
, );

866 
glXRñó£VideoImageNV
 (
Di•œy
 *, 
GLXPbuf„r
);

867 
glXSídPbuf„rToVideoNV
 (
Di•œy
 *, 
GLXPbuf„r
, , *, 
GLboﬁón
);

868 
glXGëVideoInfoNV
 (
Di•œy
 *, , 
GLXVideoDevi˚NV
, *, *);

870 –* 
	gPFNGLXGETVIDEODEVICENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, 
	tnumVideoDevi˚s
, 
	tGLXVideoDevi˚NV
 *
	tpVideoDevi˚
);

871 –* 
	gPFNGLXRELEASEVIDEODEVICENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, 
	tGLXVideoDevi˚NV
 
	tVideoDevi˚
);

872 –* 
	gPFNGLXBINDVIDEOIMAGENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXVideoDevi˚NV
 
	tVideoDevi˚
, 
	tGLXPbuf„r
 
	tpbuf
, 
	tiVideoBuf„r
);

873 –* 
	gPFNGLXRELEASEVIDEOIMAGENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPbuf„r
 
	tpbuf
);

874 –* 
	gPFNGLXSENDPBUFFERTOVIDEONVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXPbuf„r
 
	tpbuf
, 
	tiBuf„rTy≥
, *
	tpulCou¡îPbuf„r
, 
	tGLboﬁón
 
	tbBlock
);

875 –* 
	gPFNGLXGETVIDEOINFONVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, 
	tGLXVideoDevi˚NV
 
	tVideoDevi˚
, *
	tpulCou¡îOuçutPbuf„r
, *
	tpulCou¡îOuçutVideo
);

878 #i‚de‡
GLX_NV_sw≠_group


879 
	#GLX_NV_sw≠_group
 1

	)

880 #ifde‡
GLX_GLXEXT_PROTOTYPES


881 
Boﬁ
 
glXJoöSw≠GroupNV
 (
Di•œy
 *, 
GLXDøwabÀ
, 
GLuöt
);

882 
Boﬁ
 
glXBödSw≠B¨rõrNV
 (
Di•œy
 *, 
GLuöt
, GLuint);

883 
Boﬁ
 
glXQuîySw≠GroupNV
 (
Di•œy
 *, 
GLXDøwabÀ
, 
GLuöt
 *, GLuint *);

884 
Boﬁ
 
glXQuîyMaxSw≠GroupsNV
 (
Di•œy
 *, , 
GLuöt
 *, GLuint *);

885 
Boﬁ
 
glXQuîyFømeCou¡NV
 (
Di•œy
 *, , 
GLuöt
 *);

886 
Boﬁ
 
glXRe£tFømeCou¡NV
 (
Di•œy
 *, );

888 
Boﬁ
 ( * 
	tPFNGLXJOINSWAPGROUPNVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tGLuöt
 
	tgroup
);

889 
Boﬁ
 ( * 
	tPFNGLXBINDSWAPBARRIERNVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLuöt
 
	tgroup
, GLuöà
	tb¨rõr
);

890 
Boﬁ
 ( * 
	tPFNGLXQUERYSWAPGROUPNVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	tGLuöt
 *
	tgroup
, GLuöà*
	tb¨rõr
);

891 
Boﬁ
 ( * 
	tPFNGLXQUERYMAXSWAPGROUPSNVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, 
	tGLuöt
 *
	tmaxGroups
, GLuöà*
	tmaxB¨rõrs
);

892 
Boﬁ
 ( * 
	tPFNGLXQUERYFRAMECOUNTNVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, 
	tGLuöt
 *
	tcou¡
);

893 
Boﬁ
 ( * 
	tPFNGLXRESETFRAMECOUNTNVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
);

896 #i‚de‡
GLX_NV_video_ˇ±uª


897 
	#GLX_NV_video_ˇ±uª
 1

	)

898 #ifde‡
GLX_GLXEXT_PROTOTYPES


899 
glXBödVideoC≠tuªDevi˚NV
 (
Di•œy
 *, , 
GLXVideoC≠tuªDevi˚NV
);

900 
GLXVideoC≠tuªDevi˚NV
 * 
glXEnumî©eVideoC≠tuªDevi˚sNV
 (
Di•œy
 *, , *);

901 
glXLockVideoC≠tuªDevi˚NV
 (
Di•œy
 *, 
GLXVideoC≠tuªDevi˚NV
);

902 
glXQuîyVideoC≠tuªDevi˚NV
 (
Di•œy
 *, 
GLXVideoC≠tuªDevi˚NV
, , *);

903 
glXRñó£VideoC≠tuªDevi˚NV
 (
Di•œy
 *, 
GLXVideoC≠tuªDevi˚NV
);

905 –* 
	gPFNGLXBINDVIDEOCAPTUREDEVICENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tvideo_ˇ±uª_¶Ÿ
, 
	tGLXVideoC≠tuªDevi˚NV
 
	tdevi˚
);

906 
	gGLXVideoC≠tuªDevi˚NV
 * ( * 
	tPFNGLXENUMERATEVIDEOCAPTUREDEVICESNVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	ts¸ìn
, *
	t√Àmíts
);

907 –* 
	gPFNGLXLOCKVIDEOCAPTUREDEVICENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXVideoC≠tuªDevi˚NV
 
	tdevi˚
);

908 –* 
	gPFNGLXQUERYVIDEOCAPTUREDEVICENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXVideoC≠tuªDevi˚NV
 
	tdevi˚
, 
	t©åibuã
, *
	tvÆue
);

909 –* 
	gPFNGLXRELEASEVIDEOCAPTUREDEVICENVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXVideoC≠tuªDevi˚NV
 
	tdevi˚
);

912 #i‚de‡
GLX_EXT_sw≠_c⁄åﬁ


913 
	#GLX_EXT_sw≠_c⁄åﬁ
 1

	)

914 #ifde‡
GLX_GLXEXT_PROTOTYPES


915 
glXSw≠I¡îvÆEXT
 (
Di•œy
 *, 
GLXDøwabÀ
, );

917 –* 
	gPFNGLXSWAPINTERVALEXTPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXDøwabÀ
 
	tdøwabÀ
, 
	töãrvÆ
);

920 #i‚de‡
GLX_NV_c›y_image


921 
	#GLX_NV_c›y_image
 1

	)

922 #ifde‡
GLX_GLXEXT_PROTOTYPES


923 
glXC›yImageSubD©aNV
 (
Di•œy
 *, 
GLXC⁄ãxt
, 
GLuöt
, 
GLíum
, 
GLöt
, GLöt, GLöt, GLöt, GLXC⁄ãxt, GLuöt, GLíum, GLöt, GLöt, GLöt, GLöt, 
GLsizei
, GLsizei, GLsizei);

925 –* 
	gPFNGLXCOPYIMAGESUBDATANVPROC
Ë(
	tDi•œy
 *
	tdpy
, 
	tGLXC⁄ãxt
 
	t§cCtx
, 
	tGLuöt
 
	t§cName
, 
	tGLíum
 
	t§cT¨gë
, 
	tGLöt
 
	t§cLevñ
, GLöà
	t§cX
, GLöà
	t§cY
, GLöà
	t§cZ
, GLXC⁄ãxà
	td°Ctx
, GLuöà
	td°Name
, GLíum 
	td°T¨gë
, GLöà
	td°Levñ
, GLöà
	td°X
, GLöà
	td°Y
, GLöà
	td°Z
, 
	tGLsizei
 
	twidth
, GLsizeò
	theight
, GLsizeò
	tdïth
);

929 #ifde‡
__˝lu•lus


	@/usr/include/X11/Xlib.h

36 #i‚de‡
_XLIB_H_


37 
	#_XLIB_H_


	)

39 
	#XlibS≥cifiˇti⁄Rñó£
 6

	)

41 
	~<sys/ty≥s.h
>

43 #i‡
deföed
(
__SCO__
Ë|| deföed(
__UNIXWARE__
)

44 
	~<°döt.h
>

47 
	~<X11/X.h
>

50 
	~<X11/Xfun˝rŸo.h
>

51 
	~<X11/Xosdefs.h
>

53 #i‚de‡
X_WCHAR


54 
	~<°ddef.h
>

56 #ifde‡
__UNIXOS2__


57 
	~<°dlib.h
>

60 
	twch¨_t
;

64 #i‡
deföed
(
ISC
Ë&& deföed(
USE_XMBTOWC
)

65 
	#w˘omb
(
a
,
b
Ë
	`_Xw˘omb
◊,b)

	)

66 
	#mbÀn
(
a
,
b
Ë
	`_XmbÀn
◊,b)

	)

67 #i‚de‡
USE_XWCHAR_STRING


68 
	#mbtowc
(
a
,
b
,
c
Ë
	`_Xmbtowc
◊,b,c)

	)

73 
_XmbÀn
(

74 #ifde‡
ISC


75 c⁄° *
°r
,

76 
size_t
 
Àn


78 *
°r
,

79 
Àn


85 
	#X_HAVE_UTF8_STRING
 1

	)

87 *
	tXPoöãr
;

89 
	#Boﬁ
 

	)

90 
	#Sètus
 

	)

91 
	#True
 1

	)

92 
	#FÆ£
 0

	)

94 
	#QueuedAÃódy
 0

	)

95 
	#QueuedA·îRódög
 1

	)

96 
	#QueuedA·îFlush
 2

	)

98 
	#C⁄√˘i⁄Numbî
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
fd
)

	)

99 
	#RoŸWödow
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
roŸ
)

	)

100 
	#DeÁu…S¸ìn
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
deÁu…_s¸ìn
)

	)

101 
	#DeÁu…RoŸWödow
(
dpy
Ë(
	`S¸ìnOfDi•œy
(dpy,
	`DeÁu…S¸ìn
(dpy))->
roŸ
)

	)

102 
	#DeÁu…VisuÆ
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
roŸ_visuÆ
)

	)

103 
	#DeÁu…GC
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
deÁu…_gc
)

	)

104 
	#BœckPixñ
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
bœck_pixñ
)

	)

105 
	#WhôePixñ
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
whôe_pixñ
)

	)

106 
	#AŒPœ√s
 (()~0L)

	)

107 
	#QLígth
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
qÀn
)

	)

108 
	#Di•œyWidth
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
width
)

	)

109 
	#Di•œyHeight
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
height
)

	)

110 
	#Di•œyWidthMM
(
dpy
, 
s¸
)(
	`S¸ìnOfDi•œy
(dpy,s¸)->
mwidth
)

	)

111 
	#Di•œyHeightMM
(
dpy
, 
s¸
)(
	`S¸ìnOfDi•œy
(dpy,s¸)->
mheight
)

	)

112 
	#Di•œyPœ√s
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
roŸ_dïth
)

	)

113 
	#Di•œyCñls
(
dpy
, 
s¸
Ë(
	`DeÁu…VisuÆ
(dpy,s¸)->
m≠_íåõs
)

	)

114 
	#S¸ìnCou¡
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
ns¸ìns
)

	)

115 
	#SîvîVíd‹
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
víd‹
)

	)

116 
	#PrŸocﬁVîsi⁄
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
¥Ÿo_maj‹_vîsi⁄
)

	)

117 
	#PrŸocﬁRevisi⁄
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
¥Ÿo_mö‹_vîsi⁄
)

	)

118 
	#Víd‹Rñó£
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
ªÀa£
)

	)

119 
	#Di•œySåög
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
di•œy_«me
)

	)

120 
	#DeÁu…Dïth
(
dpy
, 
s¸
Ë(
	`S¸ìnOfDi•œy
(dpy,s¸)->
roŸ_dïth
)

	)

121 
	#DeÁu…Cﬁ‹m≠
(
dpy
, 
s¸
)(
	`S¸ìnOfDi•œy
(dpy,s¸)->
cm≠
)

	)

122 
	#Bôm≠Unô
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
bôm≠_unô
)

	)

123 
	#Bôm≠BôOrdî
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
bôm≠_bô_‹dî
)

	)

124 
	#Bôm≠Pad
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
bôm≠_∑d
)

	)

125 
	#ImageByãOrdî
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
byã_‹dî
)

	)

126 #ifde‡
CRAY


127 
	#NextReque°
(
dpy
Ë
	`XNextReque°
(dpy)

	)

129 
	#NextReque°
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
ªque°
 + 1)

	)

131 
	#La°KnownReque°Pro˚s£d
(
dpy
Ë(((
_XPrivDi•œy
)dpy)->
œ°_ªque°_ªad
)

	)

134 
	#S¸ìnOfDi•œy
(
dpy
, 
s¸
)(&((
_XPrivDi•œy
)dpy)->
s¸ìns
[s¸])

	)

135 
	#DeÁu…S¸ìnOfDi•œy
(
dpy
Ë
	`S¸ìnOfDi•œy
(dpy,
	`DeÁu…S¸ìn
(dpy))

	)

136 
	#Di•œyOfS¸ìn
(
s
Ë((s)->
di•œy
)

	)

137 
	#RoŸWödowOfS¸ìn
(
s
Ë((s)->
roŸ
)

	)

138 
	#BœckPixñOfS¸ìn
(
s
Ë((s)->
bœck_pixñ
)

	)

139 
	#WhôePixñOfS¸ìn
(
s
Ë((s)->
whôe_pixñ
)

	)

140 
	#DeÁu…Cﬁ‹m≠OfS¸ìn
(
s
)((s)->
cm≠
)

	)

141 
	#DeÁu…DïthOfS¸ìn
(
s
Ë((s)->
roŸ_dïth
)

	)

142 
	#DeÁu…GCOfS¸ìn
(
s
Ë((s)->
deÁu…_gc
)

	)

143 
	#DeÁu…VisuÆOfS¸ìn
(
s
)((s)->
roŸ_visuÆ
)

	)

144 
	#WidthOfS¸ìn
(
s
Ë((s)->
width
)

	)

145 
	#HeightOfS¸ìn
(
s
Ë((s)->
height
)

	)

146 
	#WidthMMOfS¸ìn
(
s
Ë((s)->
mwidth
)

	)

147 
	#HeightMMOfS¸ìn
(
s
Ë((s)->
mheight
)

	)

148 
	#Pœ√sOfS¸ìn
(
s
Ë((s)->
roŸ_dïth
)

	)

149 
	#CñlsOfS¸ìn
(
s
Ë(
	`DeÁu…VisuÆOfS¸ìn
((s))->
m≠_íåõs
)

	)

150 
	#MöCm≠sOfS¸ìn
(
s
Ë((s)->
mö_m≠s
)

	)

151 
	#MaxCm≠sOfS¸ìn
(
s
Ë((s)->
max_m≠s
)

	)

152 
	#D€sSaveUndîs
(
s
Ë((s)->
ßve_undîs
)

	)

153 
	#D€sBackögSt‹e
(
s
Ë((s)->
backög_°‹e
)

	)

154 
	#EvítMaskOfS¸ìn
(
s
Ë((s)->
roŸ_öput_mask
)

	)

159 
	s_XExtD©a
 {

160 
	mnumbî
;

161 
_XExtD©a
 *
	m√xt
;

162 (*
	m‰ì_¥iv©e
)(

163 
_XExtD©a
 *
	mexãnsi⁄


165 
XPoöãr
 
	m¥iv©e_d©a
;

166 } 
	tXExtD©a
;

172 
	mexãnsi⁄
;

173 
	mmaj‹_›code
;

174 
	mfú°_evít
;

175 
	mfú°_îr‹
;

176 } 
	tXExtCodes
;

183 
	mdïth
;

184 
	mbôs_≥r_pixñ
;

185 
	msˇ∆öe_∑d
;

186 } 
	tXPixm≠F‹m©VÆues
;

193 
	mfun˘i⁄
;

194 
	m∂™e_mask
;

195 
	mf‹eground
;

196 
	mbackground
;

197 
	mlöe_width
;

198 
	mlöe_°yÀ
;

199 
	mˇp_°yÀ
;

201 
	mjoö_°yÀ
;

202 
	mfûl_°yÀ
;

204 
	mfûl_ruÀ
;

205 
	m¨c_mode
;

206 
Pixm≠
 
	mtûe
;

207 
Pixm≠
 
	m°ù∂e
;

208 
	mts_x_‹igö
;

209 
	mts_y_‹igö
;

210 
F⁄t
 
	mf⁄t
;

211 
	msubwödow_mode
;

212 
Boﬁ
 
	mgøphics_exposuªs
;

213 
	m˛ù_x_‹igö
;

214 
	m˛ù_y_‹igö
;

215 
Pixm≠
 
	m˛ù_mask
;

216 
	mdash_off£t
;

217 
	mdashes
;

218 } 
	tXGCVÆues
;

225 
	g_XGC


226 #ifde‡
	tXLIB_ILLEGAL_ACCESS


228 
XExtD©a
 *
	gext_d©a
;

229 
GC⁄ãxt
 
	ggid
;

233 *
	tGC
;

239 
XExtD©a
 *
	mext_d©a
;

240 
VisuÆID
 
	mvisuÆid
;

241 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

242 
	mc_˛ass
;

244 
	m˛ass
;

246 
	mªd_mask
, 
	mgªí_mask
, 
	mblue_mask
;

247 
	mbôs_≥r_rgb
;

248 
	mm≠_íåõs
;

249 } 
	tVisuÆ
;

255 
	mdïth
;

256 
	mnvisuÆs
;

257 
VisuÆ
 *
	mvisuÆs
;

258 } 
	tDïth
;

266 
	g_XDi•œy
;

269 
XExtD©a
 *
	mext_d©a
;

270 
_XDi•œy
 *
	mdi•œy
;

271 
Wödow
 
	mroŸ
;

272 
	mwidth
, 
	mheight
;

273 
	mmwidth
, 
	mmheight
;

274 
	mndïths
;

275 
Dïth
 *
	mdïths
;

276 
	mroŸ_dïth
;

277 
VisuÆ
 *
	mroŸ_visuÆ
;

278 
GC
 
	mdeÁu…_gc
;

279 
Cﬁ‹m≠
 
	mcm≠
;

280 
	mwhôe_pixñ
;

281 
	mbœck_pixñ
;

282 
	mmax_m≠s
, 
	mmö_m≠s
;

283 
	mbackög_°‹e
;

284 
Boﬁ
 
	mßve_undîs
;

285 
	mroŸ_öput_mask
;

286 } 
	tS¸ìn
;

292 
XExtD©a
 *
	mext_d©a
;

293 
	mdïth
;

294 
	mbôs_≥r_pixñ
;

295 
	msˇ∆öe_∑d
;

296 } 
	tS¸ìnF‹m©
;

302 
Pixm≠
 
	mbackground_pixm≠
;

303 
	mbackground_pixñ
;

304 
Pixm≠
 
	mb‹dî_pixm≠
;

305 
	mb‹dî_pixñ
;

306 
	mbô_gøvôy
;

307 
	mwö_gøvôy
;

308 
	mbackög_°‹e
;

309 
	mbackög_∂™es
;

310 
	mbackög_pixñ
;

311 
Boﬁ
 
	mßve_undî
;

312 
	mevít_mask
;

313 
	mdo_nŸ_¥›ag©e_mask
;

314 
Boﬁ
 
	movîride_ªdúe˘
;

315 
Cﬁ‹m≠
 
	mcﬁ‹m≠
;

316 
Curs‹
 
	mcurs‹
;

317 } 
	tXSëWödowAâribuãs
;

320 
	mx
, 
	my
;

321 
	mwidth
, 
	mheight
;

322 
	mb‹dî_width
;

323 
	mdïth
;

324 
VisuÆ
 *
	mvisuÆ
;

325 
Wödow
 
	mroŸ
;

326 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

327 
	mc_˛ass
;

329 
	m˛ass
;

331 
	mbô_gøvôy
;

332 
	mwö_gøvôy
;

333 
	mbackög_°‹e
;

334 
	mbackög_∂™es
;

335 
	mbackög_pixñ
;

336 
Boﬁ
 
	mßve_undî
;

337 
Cﬁ‹m≠
 
	mcﬁ‹m≠
;

338 
Boﬁ
 
	mm≠_ö°ÆÀd
;

339 
	mm≠_°©e
;

340 
	mÆl_evít_masks
;

341 
	myour_evít_mask
;

342 
	mdo_nŸ_¥›ag©e_mask
;

343 
Boﬁ
 
	movîride_ªdúe˘
;

344 
S¸ìn
 *
	ms¸ìn
;

345 } 
	tXWödowAâribuãs
;

353 
	mÁmûy
;

354 
	mÀngth
;

355 *
	maddªss
;

356 } 
	tXHo°Addªss
;

362 
	mty≥Àngth
;

363 
	mvÆuñígth
;

364 *
	mty≥
;

365 *
	mvÆue
;

366 } 
	tXSîvîI¡î¥ëedAddªss
;

371 
	s_XImage
 {

372 
	mwidth
, 
	mheight
;

373 
	mxoff£t
;

374 
	mf‹m©
;

375 *
	md©a
;

376 
	mbyã_‹dî
;

377 
	mbôm≠_unô
;

378 
	mbôm≠_bô_‹dî
;

379 
	mbôm≠_∑d
;

380 
	mdïth
;

381 
	mbyãs_≥r_löe
;

382 
	mbôs_≥r_pixñ
;

383 
	mªd_mask
;

384 
	mgªí_mask
;

385 
	mblue_mask
;

386 
XPoöãr
 
	mobd©a
;

387 
	sfuncs
 {

388 
	m_XImage
 *(*
	m¸óã_image
)(

389 
	m_XDi•œy
* ,

390 
	mVisuÆ
* ,

399 (*
	mde°roy_image
Ë(
	m_XImage
 *);

400 (*
	mgë_pixñ
Ë(
	m_XImage
 *, , );

401 (*
	mput_pixñ
Ë(
	m_XImage
 *, , , );

402 
	m_XImage
 *(*
	msub_image
)(_XImage *, , , , );

403 (*
	madd_pixñ
Ë(
	m_XImage
 *, );

404 } 
	mf
;

405 } 
	tXImage
;

411 
	mx
, 
	my
;

412 
	mwidth
, 
	mheight
;

413 
	mb‹dî_width
;

414 
Wödow
 
	msiblög
;

415 
	m°ack_mode
;

416 } 
	tXWödowCh™ges
;

422 
	mpixñ
;

423 
	mªd
, 
	mgªí
, 
	mblue
;

424 
	mÊags
;

425 
	m∑d
;

426 } 
	tXCﬁ‹
;

434 
	mx1
, 
	my1
, 
	mx2
, 
	my2
;

435 } 
	tXSegmít
;

438 
	mx
, 
	my
;

439 } 
	tXPoöt
;

442 
	mx
, 
	my
;

443 
	mwidth
, 
	mheight
;

444 } 
	tXRe˘™gÀ
;

447 
	mx
, 
	my
;

448 
	mwidth
, 
	mheight
;

449 
	m™gÀ1
, 
	m™gÀ2
;

450 } 
	tXArc
;

456 
	mkey_˛ick_≥r˚¡
;

457 
	mbñl_≥r˚¡
;

458 
	mbñl_pôch
;

459 
	mbñl_duøti⁄
;

460 
	mÀd
;

461 
	mÀd_mode
;

462 
	mkey
;

463 
	mauto_ª≥©_mode
;

464 } 
	tXKeybﬂrdC⁄åﬁ
;

469 
	mkey_˛ick_≥r˚¡
;

470 
	mbñl_≥r˚¡
;

471 
	mbñl_pôch
, 
	mbñl_duøti⁄
;

472 
	mÀd_mask
;

473 
	mglobÆ_auto_ª≥©
;

474 
	mauto_ª≥©s
[32];

475 } 
	tXKeybﬂrdSèã
;

480 
Time
 
	mtime
;

481 
	mx
, 
	my
;

482 } 
	tXTimeCo‹d
;

487 
	mmax_key≥rmod
;

488 
KeyCode
 *
	mmodifõrm≠
;

489 } 
	tXModifõrKeym≠
;

497 #i‚de‡
XLIB_ILLEGAL_ACCESS


498 
_XDi•œy
 
	tDi•œy
;

501 
	g_XPriv©e
;

502 
	g_XrmHashBuckëRec
;

505 #ifde‡
XLIB_ILLEGAL_ACCESS


506 
	t_XDi•œy


509 
XExtD©a
 *
	gext_d©a
;

510 
_XPriv©e
 *
	g¥iv©e1
;

511 
	gfd
;

512 
	g¥iv©e2
;

513 
	g¥Ÿo_maj‹_vîsi⁄
;

514 
	g¥Ÿo_mö‹_vîsi⁄
;

515 *
	gvíd‹
;

516 
XID
 
	g¥iv©e3
;

517 
XID
 
	g¥iv©e4
;

518 
XID
 
	g¥iv©e5
;

519 
	g¥iv©e6
;

520 
XID
 (*
ªsour˚_Æloc
)(

521 
	g_XDi•œy
*

523 
	gbyã_‹dî
;

524 
	gbôm≠_unô
;

525 
	gbôm≠_∑d
;

526 
	gbôm≠_bô_‹dî
;

527 
	gnf‹m©s
;

528 
S¸ìnF‹m©
 *
	gpixm≠_f‹m©
;

529 
	g¥iv©e8
;

530 
	gªÀa£
;

531 
_XPriv©e
 *
	g¥iv©e9
, *
	g¥iv©e10
;

532 
	gqÀn
;

533 
	gœ°_ªque°_ªad
;

534 
	gªque°
;

535 
XPoöãr
 
	g¥iv©e11
;

536 
XPoöãr
 
	g¥iv©e12
;

537 
XPoöãr
 
	g¥iv©e13
;

538 
XPoöãr
 
	g¥iv©e14
;

539 
	gmax_ªque°_size
;

540 
_XrmHashBuckëRec
 *
	gdb
;

541 (*
	g¥iv©e15
)(

542 
	g_XDi•œy
*

544 *
	gdi•œy_«me
;

545 
	gdeÁu…_s¸ìn
;

546 
	gns¸ìns
;

547 
S¸ìn
 *
	gs¸ìns
;

548 
	gmŸi⁄_buf„r
;

549 
	g¥iv©e16
;

550 
	gmö_keycode
;

551 
	gmax_keycode
;

552 
XPoöãr
 
	g¥iv©e17
;

553 
XPoöãr
 
	g¥iv©e18
;

554 
	g¥iv©e19
;

555 *
	gxdeÁu…s
;

558 #ifde‡
	tXLIB_ILLEGAL_ACCESS


559 
	tDi•œy
,

561 *
	t_XPrivDi•œy
;

563 #unde‡
_XEVENT_


564 #i‚de‡
_XEVENT_


569 
	mty≥
;

570 
	m£rül
;

571 
Boﬁ
 
	m£nd_evít
;

572 
Di•œy
 *
	mdi•œy
;

573 
Wödow
 
	mwödow
;

574 
Wödow
 
	mroŸ
;

575 
Wödow
 
	msubwödow
;

576 
Time
 
	mtime
;

577 
	mx
, 
	my
;

578 
	mx_roŸ
, 
	my_roŸ
;

579 
	m°©e
;

580 
	mkeycode
;

581 
Boﬁ
 
	mßme_s¸ìn
;

582 } 
	tXKeyEvít
;

583 
XKeyEvít
 
	tXKeyPªs£dEvít
;

584 
XKeyEvít
 
	tXKeyRñó£dEvít
;

587 
	mty≥
;

588 
	m£rül
;

589 
Boﬁ
 
	m£nd_evít
;

590 
Di•œy
 *
	mdi•œy
;

591 
Wödow
 
	mwödow
;

592 
Wödow
 
	mroŸ
;

593 
Wödow
 
	msubwödow
;

594 
Time
 
	mtime
;

595 
	mx
, 
	my
;

596 
	mx_roŸ
, 
	my_roŸ
;

597 
	m°©e
;

598 
	mbuâ⁄
;

599 
Boﬁ
 
	mßme_s¸ìn
;

600 } 
	tXBuâ⁄Evít
;

601 
XBuâ⁄Evít
 
	tXBuâ⁄Pªs£dEvít
;

602 
XBuâ⁄Evít
 
	tXBuâ⁄Rñó£dEvít
;

605 
	mty≥
;

606 
	m£rül
;

607 
Boﬁ
 
	m£nd_evít
;

608 
Di•œy
 *
	mdi•œy
;

609 
Wödow
 
	mwödow
;

610 
Wödow
 
	mroŸ
;

611 
Wödow
 
	msubwödow
;

612 
Time
 
	mtime
;

613 
	mx
, 
	my
;

614 
	mx_roŸ
, 
	my_roŸ
;

615 
	m°©e
;

616 
	mis_höt
;

617 
Boﬁ
 
	mßme_s¸ìn
;

618 } 
	tXMŸi⁄Evít
;

619 
XMŸi⁄Evít
 
	tXPoöãrMovedEvít
;

622 
	mty≥
;

623 
	m£rül
;

624 
Boﬁ
 
	m£nd_evít
;

625 
Di•œy
 *
	mdi•œy
;

626 
Wödow
 
	mwödow
;

627 
Wödow
 
	mroŸ
;

628 
Wödow
 
	msubwödow
;

629 
Time
 
	mtime
;

630 
	mx
, 
	my
;

631 
	mx_roŸ
, 
	my_roŸ
;

632 
	mmode
;

633 
	mdëaû
;

638 
Boﬁ
 
	mßme_s¸ìn
;

639 
Boﬁ
 
	mfocus
;

640 
	m°©e
;

641 } 
	tXCrossögEvít
;

642 
XCrossögEvít
 
	tXE¡îWödowEvít
;

643 
XCrossögEvít
 
	tXLóveWödowEvít
;

646 
	mty≥
;

647 
	m£rül
;

648 
Boﬁ
 
	m£nd_evít
;

649 
Di•œy
 *
	mdi•œy
;

650 
Wödow
 
	mwödow
;

651 
	mmode
;

653 
	mdëaû
;

659 } 
	tXFocusCh™geEvít
;

660 
XFocusCh™geEvít
 
	tXFocusInEvít
;

661 
XFocusCh™geEvít
 
	tXFocusOutEvít
;

665 
	mty≥
;

666 
	m£rül
;

667 
Boﬁ
 
	m£nd_evít
;

668 
Di•œy
 *
	mdi•œy
;

669 
Wödow
 
	mwödow
;

670 
	mkey_ve˘‹
[32];

671 } 
	tXKeym≠Evít
;

674 
	mty≥
;

675 
	m£rül
;

676 
Boﬁ
 
	m£nd_evít
;

677 
Di•œy
 *
	mdi•œy
;

678 
Wödow
 
	mwödow
;

679 
	mx
, 
	my
;

680 
	mwidth
, 
	mheight
;

681 
	mcou¡
;

682 } 
	tXExpo£Evít
;

685 
	mty≥
;

686 
	m£rül
;

687 
Boﬁ
 
	m£nd_evít
;

688 
Di•œy
 *
	mdi•œy
;

689 
DøwabÀ
 
	mdøwabÀ
;

690 
	mx
, 
	my
;

691 
	mwidth
, 
	mheight
;

692 
	mcou¡
;

693 
	mmaj‹_code
;

694 
	mmö‹_code
;

695 } 
	tXGøphicsExpo£Evít
;

698 
	mty≥
;

699 
	m£rül
;

700 
Boﬁ
 
	m£nd_evít
;

701 
Di•œy
 *
	mdi•œy
;

702 
DøwabÀ
 
	mdøwabÀ
;

703 
	mmaj‹_code
;

704 
	mmö‹_code
;

705 } 
	tXNoExpo£Evít
;

708 
	mty≥
;

709 
	m£rül
;

710 
Boﬁ
 
	m£nd_evít
;

711 
Di•œy
 *
	mdi•œy
;

712 
Wödow
 
	mwödow
;

713 
	m°©e
;

714 } 
	tXVisibûôyEvít
;

717 
	mty≥
;

718 
	m£rül
;

719 
Boﬁ
 
	m£nd_evít
;

720 
Di•œy
 *
	mdi•œy
;

721 
Wödow
 
	m∑ª¡
;

722 
Wödow
 
	mwödow
;

723 
	mx
, 
	my
;

724 
	mwidth
, 
	mheight
;

725 
	mb‹dî_width
;

726 
Boﬁ
 
	movîride_ªdúe˘
;

727 } 
	tXCª©eWödowEvít
;

730 
	mty≥
;

731 
	m£rül
;

732 
Boﬁ
 
	m£nd_evít
;

733 
Di•œy
 *
	mdi•œy
;

734 
Wödow
 
	mevít
;

735 
Wödow
 
	mwödow
;

736 } 
	tXDe°royWödowEvít
;

739 
	mty≥
;

740 
	m£rül
;

741 
Boﬁ
 
	m£nd_evít
;

742 
Di•œy
 *
	mdi•œy
;

743 
Wödow
 
	mevít
;

744 
Wödow
 
	mwödow
;

745 
Boﬁ
 
	m‰om_c⁄figuª
;

746 } 
	tXUnm≠Evít
;

749 
	mty≥
;

750 
	m£rül
;

751 
Boﬁ
 
	m£nd_evít
;

752 
Di•œy
 *
	mdi•œy
;

753 
Wödow
 
	mevít
;

754 
Wödow
 
	mwödow
;

755 
Boﬁ
 
	movîride_ªdúe˘
;

756 } 
	tXM≠Evít
;

759 
	mty≥
;

760 
	m£rül
;

761 
Boﬁ
 
	m£nd_evít
;

762 
Di•œy
 *
	mdi•œy
;

763 
Wödow
 
	m∑ª¡
;

764 
Wödow
 
	mwödow
;

765 } 
	tXM≠Reque°Evít
;

768 
	mty≥
;

769 
	m£rül
;

770 
Boﬁ
 
	m£nd_evít
;

771 
Di•œy
 *
	mdi•œy
;

772 
Wödow
 
	mevít
;

773 
Wödow
 
	mwödow
;

774 
Wödow
 
	m∑ª¡
;

775 
	mx
, 
	my
;

776 
Boﬁ
 
	movîride_ªdúe˘
;

777 } 
	tXRï¨ítEvít
;

780 
	mty≥
;

781 
	m£rül
;

782 
Boﬁ
 
	m£nd_evít
;

783 
Di•œy
 *
	mdi•œy
;

784 
Wödow
 
	mevít
;

785 
Wödow
 
	mwödow
;

786 
	mx
, 
	my
;

787 
	mwidth
, 
	mheight
;

788 
	mb‹dî_width
;

789 
Wödow
 
	mabove
;

790 
Boﬁ
 
	movîride_ªdúe˘
;

791 } 
	tXC⁄figuªEvít
;

794 
	mty≥
;

795 
	m£rül
;

796 
Boﬁ
 
	m£nd_evít
;

797 
Di•œy
 *
	mdi•œy
;

798 
Wödow
 
	mevít
;

799 
Wödow
 
	mwödow
;

800 
	mx
, 
	my
;

801 } 
	tXGøvôyEvít
;

804 
	mty≥
;

805 
	m£rül
;

806 
Boﬁ
 
	m£nd_evít
;

807 
Di•œy
 *
	mdi•œy
;

808 
Wödow
 
	mwödow
;

809 
	mwidth
, 
	mheight
;

810 } 
	tXResizeReque°Evít
;

813 
	mty≥
;

814 
	m£rül
;

815 
Boﬁ
 
	m£nd_evít
;

816 
Di•œy
 *
	mdi•œy
;

817 
Wödow
 
	m∑ª¡
;

818 
Wödow
 
	mwödow
;

819 
	mx
, 
	my
;

820 
	mwidth
, 
	mheight
;

821 
	mb‹dî_width
;

822 
Wödow
 
	mabove
;

823 
	mdëaû
;

824 
	mvÆue_mask
;

825 } 
	tXC⁄figuªReque°Evít
;

828 
	mty≥
;

829 
	m£rül
;

830 
Boﬁ
 
	m£nd_evít
;

831 
Di•œy
 *
	mdi•œy
;

832 
Wödow
 
	mevít
;

833 
Wödow
 
	mwödow
;

834 
	m∂a˚
;

835 } 
	tXCúcuœãEvít
;

838 
	mty≥
;

839 
	m£rül
;

840 
Boﬁ
 
	m£nd_evít
;

841 
Di•œy
 *
	mdi•œy
;

842 
Wödow
 
	m∑ª¡
;

843 
Wödow
 
	mwödow
;

844 
	m∂a˚
;

845 } 
	tXCúcuœãReque°Evít
;

848 
	mty≥
;

849 
	m£rül
;

850 
Boﬁ
 
	m£nd_evít
;

851 
Di•œy
 *
	mdi•œy
;

852 
Wödow
 
	mwödow
;

853 
Atom
 
	m©om
;

854 
Time
 
	mtime
;

855 
	m°©e
;

856 } 
	tXPr›îtyEvít
;

859 
	mty≥
;

860 
	m£rül
;

861 
Boﬁ
 
	m£nd_evít
;

862 
Di•œy
 *
	mdi•œy
;

863 
Wödow
 
	mwödow
;

864 
Atom
 
	m£À˘i⁄
;

865 
Time
 
	mtime
;

866 } 
	tXSñe˘i⁄CÀ¨Evít
;

869 
	mty≥
;

870 
	m£rül
;

871 
Boﬁ
 
	m£nd_evít
;

872 
Di•œy
 *
	mdi•œy
;

873 
Wödow
 
	mow√r
;

874 
Wödow
 
	mªque°‹
;

875 
Atom
 
	m£À˘i⁄
;

876 
Atom
 
	mèrgë
;

877 
Atom
 
	m¥›îty
;

878 
Time
 
	mtime
;

879 } 
	tXSñe˘i⁄Reque°Evít
;

882 
	mty≥
;

883 
	m£rül
;

884 
Boﬁ
 
	m£nd_evít
;

885 
Di•œy
 *
	mdi•œy
;

886 
Wödow
 
	mªque°‹
;

887 
Atom
 
	m£À˘i⁄
;

888 
Atom
 
	mèrgë
;

889 
Atom
 
	m¥›îty
;

890 
Time
 
	mtime
;

891 } 
	tXSñe˘i⁄Evít
;

894 
	mty≥
;

895 
	m£rül
;

896 
Boﬁ
 
	m£nd_evít
;

897 
Di•œy
 *
	mdi•œy
;

898 
Wödow
 
	mwödow
;

899 
Cﬁ‹m≠
 
	mcﬁ‹m≠
;

900 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

901 
Boﬁ
 
	mc_√w
;

903 
Boﬁ
 
	m√w
;

905 
	m°©e
;

906 } 
	tXCﬁ‹m≠Evít
;

909 
	mty≥
;

910 
	m£rül
;

911 
Boﬁ
 
	m£nd_evít
;

912 
Di•œy
 *
	mdi•œy
;

913 
Wödow
 
	mwödow
;

914 
Atom
 
	mmesßge_ty≥
;

915 
	mf‹m©
;

917 
	mb
[20];

918 
	ms
[10];

919 
	ml
[5];

920 } 
	md©a
;

921 } 
	tXClõ¡MesßgeEvít
;

924 
	mty≥
;

925 
	m£rül
;

926 
Boﬁ
 
	m£nd_evít
;

927 
Di•œy
 *
	mdi•œy
;

928 
Wödow
 
	mwödow
;

929 
	mªque°
;

931 
	mfú°_keycode
;

932 
	mcou¡
;

933 } 
	tXM≠pögEvít
;

936 
	mty≥
;

937 
Di•œy
 *
	mdi•œy
;

938 
XID
 
	mªsour˚id
;

939 
	m£rül
;

940 
	mîr‹_code
;

941 
	mªque°_code
;

942 
	mmö‹_code
;

943 } 
	tXEº‹Evít
;

946 
	mty≥
;

947 
	m£rül
;

948 
Boﬁ
 
	m£nd_evít
;

949 
Di•œy
 *
	mdi•œy
;

950 
Wödow
 
	mwödow
;

951 } 
	tXAnyEvít
;

961 
	mty≥
;

962 
	m£rül
;

963 
Boﬁ
 
	m£nd_evít
;

964 
Di•œy
 *
	mdi•œy
;

965 
	mexãnsi⁄
;

966 
	mevty≥
;

967 } 
	tXGíîicEvít
;

970 
	mty≥
;

971 
	m£rül
;

972 
Boﬁ
 
	m£nd_evít
;

973 
Di•œy
 *
	mdi•œy
;

974 
	mexãnsi⁄
;

975 
	mevty≥
;

976 
	mcookõ
;

977 *
	md©a
;

978 } 
	tXGíîicEvítCookõ
;

984 
	u_XEvít
 {

985 
	mty≥
;

986 
XAnyEvít
 
	mx™y
;

987 
XKeyEvít
 
	mxkey
;

988 
XBuâ⁄Evít
 
	mxbuâ⁄
;

989 
XMŸi⁄Evít
 
	mxmŸi⁄
;

990 
XCrossögEvít
 
	mx¸ossög
;

991 
XFocusCh™geEvít
 
	mxfocus
;

992 
XExpo£Evít
 
	mxexpo£
;

993 
XGøphicsExpo£Evít
 
	mxgøphic£xpo£
;

994 
XNoExpo£Evít
 
	mxn€xpo£
;

995 
XVisibûôyEvít
 
	mxvisibûôy
;

996 
XCª©eWödowEvít
 
	mx¸óãwödow
;

997 
XDe°royWödowEvít
 
	mxde°roywödow
;

998 
XUnm≠Evít
 
	mxunm≠
;

999 
XM≠Evít
 
	mxm≠
;

1000 
XM≠Reque°Evít
 
	mxm≠ªque°
;

1001 
XRï¨ítEvít
 
	mxª∑ª¡
;

1002 
XC⁄figuªEvít
 
	mxc⁄figuª
;

1003 
XGøvôyEvít
 
	mxgøvôy
;

1004 
XResizeReque°Evít
 
	mxªsizîeque°
;

1005 
XC⁄figuªReque°Evít
 
	mxc⁄figuªªque°
;

1006 
XCúcuœãEvít
 
	mxcúcuœã
;

1007 
XCúcuœãReque°Evít
 
	mxcúcuœãªque°
;

1008 
XPr›îtyEvít
 
	mx¥›îty
;

1009 
XSñe˘i⁄CÀ¨Evít
 
	mx£À˘i⁄˛ór
;

1010 
XSñe˘i⁄Reque°Evít
 
	mx£À˘i⁄ªque°
;

1011 
XSñe˘i⁄Evít
 
	mx£À˘i⁄
;

1012 
XCﬁ‹m≠Evít
 
	mxcﬁ‹m≠
;

1013 
XClõ¡MesßgeEvít
 
	mx˛õ¡
;

1014 
XM≠pögEvít
 
	mxm≠pög
;

1015 
XEº‹Evít
 
	mxîr‹
;

1016 
XKeym≠Evít
 
	mxkeym≠
;

1017 
XGíîicEvít
 
	mxgíîic
;

1018 
XGíîicEvítCookõ
 
	mxcookõ
;

1019 
	m∑d
[24];

1020 } 
	tXEvít
;

1023 
	#XAŒocID
(
dpy
Ë((*((
_XPrivDi•œy
)dpy)->
ªsour˚_Æloc
)((dpy)))

	)

1029 
	mlbórög
;

1030 
	mrbórög
;

1031 
	mwidth
;

1032 
	mas˚¡
;

1033 
	mdes˚¡
;

1034 
	m©åibuãs
;

1035 } 
	tXCh¨Såu˘
;

1042 
Atom
 
	m«me
;

1043 
	mˇrd32
;

1044 } 
	tXF⁄tPr›
;

1047 
XExtD©a
 *
	mext_d©a
;

1048 
F⁄t
 
	mfid
;

1049 
	mdúe˘i⁄
;

1050 
	mmö_ch¨_‹_byã2
;

1051 
	mmax_ch¨_‹_byã2
;

1052 
	mmö_byã1
;

1053 
	mmax_byã1
;

1054 
Boﬁ
 
	mÆl_ch¨s_exi°
;

1055 
	mdeÁu…_ch¨
;

1056 
	mn_¥›îtõs
;

1057 
XF⁄tPr›
 *
	m¥›îtõs
;

1058 
XCh¨Såu˘
 
	mmö_bounds
;

1059 
XCh¨Såu˘
 
	mmax_bounds
;

1060 
XCh¨Såu˘
 *
	m≥r_ch¨
;

1061 
	mas˚¡
;

1062 
	mdes˚¡
;

1063 } 
	tXF⁄tSåu˘
;

1069 *
	mch¨s
;

1070 
	mnch¨s
;

1071 
	mdñè
;

1072 
F⁄t
 
	mf⁄t
;

1073 } 
	tXTextIãm
;

1076 
	mbyã1
;

1077 
	mbyã2
;

1078 } 
	tXCh¨2b
;

1081 
XCh¨2b
 *
	mch¨s
;

1082 
	mnch¨s
;

1083 
	mdñè
;

1084 
F⁄t
 
	mf⁄t
;

1085 } 
	tXTextIãm16
;

1088 uni⁄ { 
Di•œy
 *
	mdi•œy
;

1089 
GC
 
	mgc
;

1090 
VisuÆ
 *
	mvisuÆ
;

1091 
S¸ìn
 *
	ms¸ìn
;

1092 
S¸ìnF‹m©
 *
	mpixm≠_f‹m©
;

1093 
XF⁄tSåu˘
 *
	mf⁄t
; } 
	tXED©aObje˘
;

1096 
XRe˘™gÀ
 
	mmax_ök_exã¡
;

1097 
XRe˘™gÀ
 
	mmax_logiˇl_exã¡
;

1098 } 
	tXF⁄tSëExã¡s
;

1104 
_XOM
 *
	tXOM
;

1105 
_XOC
 *
	tXOC
, *
	tXF⁄tSë
;

1108 *
	mch¨s
;

1109 
	mnch¨s
;

1110 
	mdñè
;

1111 
XF⁄tSë
 
	mf⁄t_£t
;

1112 } 
	tXmbTextIãm
;

1115 
wch¨_t
 *
	mch¨s
;

1116 
	mnch¨s
;

1117 
	mdñè
;

1118 
XF⁄tSë
 
	mf⁄t_£t
;

1119 } 
	tXwcTextIãm
;

1121 
	#XNRequúedCh¨Së
 "ªquúedCh¨Së"

	)

1122 
	#XNQuîyOrõ¡©i⁄
 "quîyOrõ¡©i⁄"

	)

1123 
	#XNBa£F⁄tName
 "ba£F⁄tName"

	)

1124 
	#XNOMAutom©ic
 "omAutom©ic"

	)

1125 
	#XNMissögCh¨Së
 "missögCh¨Së"

	)

1126 
	#XNDeÁu…Såög
 "deÁu…Såög"

	)

1127 
	#XNOrõ¡©i⁄
 "‹õ¡©i⁄"

	)

1128 
	#XNDúe˘i⁄ÆDïídítDøwög
 "dúe˘i⁄ÆDïídítDøwög"

	)

1129 
	#XNC⁄ãxtuÆDøwög
 "c⁄ãxtuÆDøwög"

	)

1130 
	#XNF⁄tInfo
 "f⁄tInfo"

	)

1133 
	mch¨£t_cou¡
;

1134 **
	mch¨£t_li°
;

1135 } 
	tXOMCh¨SëLi°
;

1138 
	mXOMOrõ¡©i⁄_LTR_TTB
,

1139 
	mXOMOrõ¡©i⁄_RTL_TTB
,

1140 
	mXOMOrõ¡©i⁄_TTB_LTR
,

1141 
	mXOMOrõ¡©i⁄_TTB_RTL
,

1142 
	mXOMOrõ¡©i⁄_C⁄ãxt


1143 } 
	tXOrõ¡©i⁄
;

1146 
	mnum_‹õ¡©i⁄
;

1147 
XOrõ¡©i⁄
 *
	m‹õ¡©i⁄
;

1148 } 
	tXOMOrõ¡©i⁄
;

1151 
	mnum_f⁄t
;

1152 
XF⁄tSåu˘
 **
	mf⁄t_°ru˘_li°
;

1153 **
	mf⁄t_«me_li°
;

1154 } 
	tXOMF⁄tInfo
;

1156 
_XIM
 *
	tXIM
;

1157 
_XIC
 *
	tXIC
;

1159 (*
	tXIMProc
)(

1160 
	tXIM
,

1161 
	tXPoöãr
,

1162 
	tXPoöãr


1165 
	$Boﬁ
 (*
	tXICProc
)(

1166 
	tXIC
,

1167 
	tXPoöãr
,

1168 
	tXPoöãr


1171 (*
	tXIDProc
)(

1172 
	tDi•œy
*,

1173 
	tXPoöãr
,

1174 
	tXPoöãr


1177 
	tXIMStyÀ
;

1180 
cou¡_°yÀs
;

1181 
XIMStyÀ
 *
suµ‹ãd_°yÀs
;

1182 } 
	tXIMStyÀs
;

1184 
	#XIMPªedôAªa
 0x0001L

	)

1185 
	#XIMPªedôCÆlbacks
 0x0002L

	)

1186 
	#XIMPªedôPosôi⁄
 0x0004L

	)

1187 
	#XIMPªedôNŸhög
 0x0008L

	)

1188 
	#XIMPªedôN⁄e
 0x0010L

	)

1189 
	#XIMSètusAªa
 0x0100L

	)

1190 
	#XIMSètusCÆlbacks
 0x0200L

	)

1191 
	#XIMSètusNŸhög
 0x0400L

	)

1192 
	#XIMSètusN⁄e
 0x0800L

	)

1194 
	#XNVaNe°edLi°
 "XNVaNe°edLi°"

	)

1195 
	#XNQuîyI≈utStyÀ
 "quîyI≈utStyÀ"

	)

1196 
	#XNClõ¡Wödow
 "˛õ¡Wödow"

	)

1197 
	#XNI≈utStyÀ
 "öputStyÀ"

	)

1198 
	#XNFocusWödow
 "focusWödow"

	)

1199 
	#XNResour˚Name
 "ªsour˚Name"

	)

1200 
	#XNResour˚Cœss
 "ªsour˚Cœss"

	)

1201 
	#XNGeomëryCÆlback
 "geomëryCÆlback"

	)

1202 
	#XNDe°royCÆlback
 "de°royCÆlback"

	)

1203 
	#XNFûãrEvíts
 "fûãrEvíts"

	)

1204 
	#XNPªedôSèπCÆlback
 "¥ìdôSèπCÆlback"

	)

1205 
	#XNPªedôD⁄eCÆlback
 "¥ìdôD⁄eCÆlback"

	)

1206 
	#XNPªedôDøwCÆlback
 "¥ìdôDøwCÆlback"

	)

1207 
	#XNPªedôC¨ëCÆlback
 "¥ìdôC¨ëCÆlback"

	)

1208 
	#XNPªedôSèãNŸifyCÆlback
 "¥ìdôSèãNŸifyCÆlback"

	)

1209 
	#XNPªedôAâribuãs
 "¥ìdôAâribuãs"

	)

1210 
	#XNSètusSèπCÆlback
 "°©usSèπCÆlback"

	)

1211 
	#XNSètusD⁄eCÆlback
 "°©usD⁄eCÆlback"

	)

1212 
	#XNSètusDøwCÆlback
 "°©usDøwCÆlback"

	)

1213 
	#XNSètusAâribuãs
 "°©usAâribuãs"

	)

1214 
	#XNAªa
 "¨ó"

	)

1215 
	#XNAªaNìded
 "¨óNìded"

	)

1216 
	#XNSpŸLoˇti⁄
 "•ŸLoˇti⁄"

	)

1217 
	#XNCﬁ‹m≠
 "cﬁ‹M≠"

	)

1218 
	#XNStdCﬁ‹m≠
 "°dCﬁ‹M≠"

	)

1219 
	#XNF‹eground
 "f‹eground"

	)

1220 
	#XNBackground
 "background"

	)

1221 
	#XNBackgroundPixm≠
 "backgroundPixm≠"

	)

1222 
	#XNF⁄tSë
 "f⁄tSë"

	)

1223 
	#XNLöeS∑˚
 "löeS∑˚"

	)

1224 
	#XNCurs‹
 "curs‹"

	)

1226 
	#XNQuîyIMVÆuesLi°
 "quîyIMVÆuesLi°"

	)

1227 
	#XNQuîyICVÆuesLi°
 "quîyICVÆuesLi°"

	)

1228 
	#XNVisibÀPosôi⁄
 "visibÀPosôi⁄"

	)

1229 
	#XNR6PªedôCÆlback
 "r6PªedôCÆlback"

	)

1230 
	#XNSåögC⁄vîsi⁄CÆlback
 "°rögC⁄vîsi⁄CÆlback"

	)

1231 
	#XNSåögC⁄vîsi⁄
 "°rögC⁄vîsi⁄"

	)

1232 
	#XNRe£tSèã
 "ª£tSèã"

	)

1233 
	#XNHŸKey
 "hŸKey"

	)

1234 
	#XNHŸKeySèã
 "hŸKeySèã"

	)

1235 
	#XNPªedôSèã
 "¥ìdôSèã"

	)

1236 
	#XNSï¨©‹ofNe°edLi°
 "£∑øt‹ofNe°edLi°"

	)

1238 
	#XBuf„rOvîÊow
 -1

	)

1239 
	#XLookupN⁄e
 1

	)

1240 
	#XLookupCh¨s
 2

	)

1241 
	#XLookupKeySym
 3

	)

1242 
	#XLookupBŸh
 4

	)

1244 *
	tXVaNe°edLi°
;

1247 
XPoöãr
 
˛õ¡_d©a
;

1248 
XIMProc
 
ˇŒback
;

1249 } 
	tXIMCÆlback
;

1252 
XPoöãr
 
˛õ¡_d©a
;

1253 
XICProc
 
ˇŒback
;

1254 } 
	tXICCÆlback
;

1256 
	tXIMFìdback
;

1258 
	#XIMRevî£
 1L

	)

1259 
	#XIMUndîlöe
 (1L<<1)

	)

1260 
	#XIMHighlight
 (1L<<2)

	)

1261 
	#XIMPrim¨y
 (1L<<5)

	)

1262 
	#XIMSec⁄d¨y
 (1L<<6)

	)

1263 
	#XIMTîtüry
 (1L<<7)

	)

1264 
	#XIMVisibÀToF‹w¨d
 (1L<<8)

	)

1265 
	#XIMVisibÀToBackw‹d
 (1L<<9)

	)

1266 
	#XIMVisibÀToCíãr
 (1L<<10)

	)

1268 
	s_XIMText
 {

1269 
Àngth
;

1270 
XIMFìdback
 *
„edback
;

1271 
Boﬁ
 
ícodög_is_wch¨
;

1273 *
mu…i_byã
;

1274 
wch¨_t
 *
wide_ch¨
;

1275 } 
°rög
;

1276 } 
	tXIMText
;

1278 
	tXIMPªedôSèã
;

1280 
	#XIMPªedôUnKnown
 0L

	)

1281 
	#XIMPªedôE«bÀ
 1L

	)

1282 
	#XIMPªedôDißbÀ
 (1L<<1)

	)

1284 
	s_XIMPªedôSèãNŸifyCÆlbackSåu˘
 {

1285 
XIMPªedôSèã
 
°©e
;

1286 } 
	tXIMPªedôSèãNŸifyCÆlbackSåu˘
;

1288 
	tXIMRe£tSèã
;

1290 
	#XIMInôülSèã
 1L

	)

1291 
	#XIMPª£rveSèã
 (1L<<1)

	)

1293 
	tXIMSåögC⁄vîsi⁄Fìdback
;

1295 
	#XIMSåögC⁄vîsi⁄Le·Edge
 (0x00000001)

	)

1296 
	#XIMSåögC⁄vîsi⁄RightEdge
 (0x00000002)

	)

1297 
	#XIMSåögC⁄vîsi⁄T›Edge
 (0x00000004)

	)

1298 
	#XIMSåögC⁄vîsi⁄BŸtomEdge
 (0x00000008)

	)

1299 
	#XIMSåögC⁄vîsi⁄C⁄˚Æed
 (0x00000010)

	)

1300 
	#XIMSåögC⁄vîsi⁄Wøµed
 (0x00000020)

	)

1302 
	s_XIMSåögC⁄vîsi⁄Text
 {

1303 
Àngth
;

1304 
XIMSåögC⁄vîsi⁄Fìdback
 *
„edback
;

1305 
Boﬁ
 
ícodög_is_wch¨
;

1307 *
mbs
;

1308 
wch¨_t
 *
wcs
;

1309 } 
°rög
;

1310 } 
	tXIMSåögC⁄vîsi⁄Text
;

1312 
	tXIMSåögC⁄vîsi⁄Posôi⁄
;

1314 
	tXIMSåögC⁄vîsi⁄Ty≥
;

1316 
	#XIMSåögC⁄vîsi⁄Buf„r
 (0x0001)

	)

1317 
	#XIMSåögC⁄vîsi⁄Löe
 (0x0002)

	)

1318 
	#XIMSåögC⁄vîsi⁄W‹d
 (0x0003)

	)

1319 
	#XIMSåögC⁄vîsi⁄Ch¨
 (0x0004)

	)

1321 
	tXIMSåögC⁄vîsi⁄O≥øti⁄
;

1323 
	#XIMSåögC⁄vîsi⁄Sub°ôuti⁄
 (0x0001)

	)

1324 
	#XIMSåögC⁄vîsi⁄RërõvÆ
 (0x0002)

	)

1327 
XIMF‹w¨dCh¨
, 
XIMBackw¨dCh¨
,

1328 
XIMF‹w¨dW‹d
, 
XIMBackw¨dW‹d
,

1329 
XIMC¨ëUp
, 
XIMC¨ëDown
,

1330 
XIMNextLöe
, 
XIMPªviousLöe
,

1331 
XIMLöeSèπ
, 
XIMLöeEnd
,

1332 
XIMAbsﬁuãPosôi⁄
,

1333 
XIMD⁄tCh™ge


1334 } 
	tXIMC¨ëDúe˘i⁄
;

1336 
	s_XIMSåögC⁄vîsi⁄CÆlbackSåu˘
 {

1337 
XIMSåögC⁄vîsi⁄Posôi⁄
 
posôi⁄
;

1338 
XIMC¨ëDúe˘i⁄
 
dúe˘i⁄
;

1339 
XIMSåögC⁄vîsi⁄O≥øti⁄
 
›î©i⁄
;

1340 
Á˘‹
;

1341 
XIMSåögC⁄vîsi⁄Text
 *
ãxt
;

1342 } 
	tXIMSåögC⁄vîsi⁄CÆlbackSåu˘
;

1344 
	s_XIMPªedôDøwCÆlbackSåu˘
 {

1345 
ˇªt
;

1346 
chg_fú°
;

1347 
chg_Àngth
;

1348 
XIMText
 *
ãxt
;

1349 } 
	tXIMPªedôDøwCÆlbackSåu˘
;

1352 
XIMIsInvisibÀ
,

1353 
XIMIsPrim¨y
,

1354 
XIMIsSec⁄d¨y


1355 } 
	tXIMC¨ëStyÀ
;

1357 
	s_XIMPªedôC¨ëCÆlbackSåu˘
 {

1358 
posôi⁄
;

1359 
XIMC¨ëDúe˘i⁄
 
dúe˘i⁄
;

1360 
XIMC¨ëStyÀ
 
°yÀ
;

1361 } 
	tXIMPªedôC¨ëCÆlbackSåu˘
;

1364 
XIMTextTy≥
,

1365 
XIMBôm≠Ty≥


1366 } 
	tXIMSètusD©aTy≥
;

1368 
	s_XIMSètusDøwCÆlbackSåu˘
 {

1369 
XIMSètusD©aTy≥
 
ty≥
;

1371 
XIMText
 *
ãxt
;

1372 
Pixm≠
 
bôm≠
;

1373 } 
d©a
;

1374 } 
	tXIMSètusDøwCÆlbackSåu˘
;

1376 
	s_XIMHŸKeyTriggî
 {

1377 
KeySym
 
keysym
;

1378 
modifõr
;

1379 
modifõr_mask
;

1380 } 
	tXIMHŸKeyTriggî
;

1382 
	s_XIMHŸKeyTriggîs
 {

1383 
num_hŸ_key
;

1384 
XIMHŸKeyTriggî
 *
key
;

1385 } 
	tXIMHŸKeyTriggîs
;

1387 
	tXIMHŸKeySèã
;

1389 
	#XIMHŸKeySèãON
 (0x0001L)

	)

1390 
	#XIMHŸKeySèãOFF
 (0x0002L)

	)

1393 
cou¡_vÆues
;

1394 **
suµ‹ãd_vÆues
;

1395 } 
	tXIMVÆuesLi°
;

1397 
_XFUNCPROTOBEGIN


1399 #i‡
	`deföed
(
WIN32
Ë&& !deföed(
_XLIBINT_
)

1400 
	#_Xdebug
 (*
_Xdebug_p
)

	)

1403 
_Xdebug
;

1405 
XF⁄tSåu˘
 *
	`XLﬂdQuîyF⁄t
(

1406 
Di•œy
* ,

1407 
_Xc⁄°
 *

1410 
XF⁄tSåu˘
 *
	`XQuîyF⁄t
(

1411 
Di•œy
* ,

1412 
XID


1416 
XTimeCo‹d
 *
	`XGëMŸi⁄Evíts
(

1417 
Di•œy
* ,

1418 
Wödow
 ,

1419 
Time
 ,

1420 
Time
 ,

1424 
XModifõrKeym≠
 *
	`XDñëeModifõrm≠E¡ry
(

1425 
XModifõrKeym≠
* ,

1426 #i‡
NìdWidePrŸŸy≥s


1429 
KeyCode
 ,

1434 
XModifõrKeym≠
 *
	`XGëModifõrM≠pög
(

1435 
Di•œy
*

1438 
XModifõrKeym≠
 *
	`XIn£πModifõrm≠E¡ry
(

1439 
XModifõrKeym≠
* ,

1440 #i‡
NìdWidePrŸŸy≥s


1443 
KeyCode
 ,

1448 
XModifõrKeym≠
 *
	`XNewModifõrm≠
(

1452 
XImage
 *
	`XCª©eImage
(

1453 
Di•œy
* ,

1454 
VisuÆ
* ,

1464 
Sètus
 
	`XInôImage
(

1465 
XImage
*

1467 
XImage
 *
	`XGëImage
(

1468 
Di•œy
* ,

1469 
DøwabÀ
 ,

1477 
XImage
 *
	`XGëSubImage
(

1478 
Di•œy
* ,

1479 
DøwabÀ
 ,

1486 
XImage
* ,

1494 
Di•œy
 *
	`XO≥nDi•œy
(

1495 
_Xc⁄°
 *

1498 
	`XrmInôülize
(

1502 *
	`XFëchByãs
(

1503 
Di•œy
* ,

1506 *
	`XFëchBuf„r
(

1507 
Di•œy
* ,

1511 *
	`XGëAtomName
(

1512 
Di•œy
* ,

1513 
Atom


1515 
Sètus
 
	`XGëAtomNames
(

1516 
Di•œy
* ,

1517 
Atom
* ,

1521 *
	`XGëDeÁu…
(

1522 
Di•œy
* ,

1523 
_Xc⁄°
 * ,

1524 
_Xc⁄°
 *

1526 *
	`XDi•œyName
(

1527 
_Xc⁄°
 *

1529 *
	`XKeysymToSåög
(

1530 
KeySym


1533 (*
	$XSynchr⁄ize
(

1534 
Di•œy
* ,

1535 
Boﬁ


1537 
Di•œy
*

1539 (*
	`XSëA·îFun˘i⁄
(

1540 
Di•œy
* ,

1542 
Di•œy
*

1545 
Di•œy
*

1547 
Atom
 
	`XI¡înAtom
(

1548 
Di•œy
* ,

1549 
_Xc⁄°
 * ,

1550 
Boﬁ


1552 
Sètus
 
	`XI¡înAtoms
(

1553 
Di•œy
* ,

1556 
Boﬁ
 ,

1557 
Atom
*

1559 
Cﬁ‹m≠
 
	`XC›yCﬁ‹m≠AndFªe
(

1560 
Di•œy
* ,

1561 
Cﬁ‹m≠


1563 
Cﬁ‹m≠
 
	`XCª©eCﬁ‹m≠
(

1564 
Di•œy
* ,

1565 
Wödow
 ,

1566 
VisuÆ
* ,

1569 
Curs‹
 
	`XCª©ePixm≠Curs‹
(

1570 
Di•œy
* ,

1571 
Pixm≠
 ,

1572 
Pixm≠
 ,

1573 
XCﬁ‹
* ,

1574 
XCﬁ‹
* ,

1578 
Curs‹
 
	`XCª©eGlyphCurs‹
(

1579 
Di•œy
* ,

1580 
F⁄t
 ,

1581 
F⁄t
 ,

1584 
XCﬁ‹
 
_Xc⁄°
 * ,

1585 
XCﬁ‹
 
_Xc⁄°
 *

1587 
Curs‹
 
	`XCª©eF⁄tCurs‹
(

1588 
Di•œy
* ,

1591 
F⁄t
 
	`XLﬂdF⁄t
(

1592 
Di•œy
* ,

1593 
_Xc⁄°
 *

1595 
GC
 
	`XCª©eGC
(

1596 
Di•œy
* ,

1597 
DøwabÀ
 ,

1599 
XGCVÆues
*

1601 
GC⁄ãxt
 
	`XGC⁄ãxtFromGC
(

1602 
GC


1604 
	`XFlushGC
(

1605 
Di•œy
* ,

1606 
GC


1608 
Pixm≠
 
	`XCª©ePixm≠
(

1609 
Di•œy
* ,

1610 
DøwabÀ
 ,

1615 
Pixm≠
 
	`XCª©eBôm≠FromD©a
(

1616 
Di•œy
* ,

1617 
DøwabÀ
 ,

1618 
_Xc⁄°
 * ,

1622 
Pixm≠
 
	`XCª©ePixm≠FromBôm≠D©a
(

1623 
Di•œy
* ,

1624 
DøwabÀ
 ,

1632 
Wödow
 
	`XCª©eSim∂eWödow
(

1633 
Di•œy
* ,

1634 
Wödow
 ,

1643 
Wödow
 
	`XGëSñe˘i⁄Ow√r
(

1644 
Di•œy
* ,

1645 
Atom


1647 
Wödow
 
	`XCª©eWödow
(

1648 
Di•œy
* ,

1649 
Wödow
 ,

1657 
VisuÆ
* ,

1659 
XSëWödowAâribuãs
*

1661 
Cﬁ‹m≠
 *
	`XLi°In°ÆÀdCﬁ‹m≠s
(

1662 
Di•œy
* ,

1663 
Wödow
 ,

1666 **
	`XLi°F⁄ts
(

1667 
Di•œy
* ,

1668 
_Xc⁄°
 * ,

1672 **
	`XLi°F⁄tsWôhInfo
(

1673 
Di•œy
* ,

1674 
_Xc⁄°
 * ,

1677 
XF⁄tSåu˘
**

1679 **
	`XGëF⁄tP©h
(

1680 
Di•œy
* ,

1683 **
	`XLi°Exãnsi⁄s
(

1684 
Di•œy
* ,

1687 
Atom
 *
	`XLi°Pr›îtõs
(

1688 
Di•œy
* ,

1689 
Wödow
 ,

1692 
XHo°Addªss
 *
	`XLi°Ho°s
(

1693 
Di•œy
* ,

1695 
Boﬁ
*

1697 
KeySym
 
	`XKeycodeToKeysym
(

1698 
Di•œy
* ,

1699 #i‡
NìdWidePrŸŸy≥s


1702 
KeyCode
 ,

1706 
KeySym
 
	`XLookupKeysym
(

1707 
XKeyEvít
* ,

1710 
KeySym
 *
	`XGëKeybﬂrdM≠pög
(

1711 
Di•œy
* ,

1712 #i‡
NìdWidePrŸŸy≥s


1715 
KeyCode
 ,

1720 
KeySym
 
	`XSåögToKeysym
(

1721 
_Xc⁄°
 *

1723 
	`XMaxReque°Size
(

1724 
Di•œy
*

1726 
	`XExãndedMaxReque°Size
(

1727 
Di•œy
*

1729 *
	`XResour˚M™agîSåög
(

1730 
Di•œy
*

1732 *
	`XS¸ìnResour˚Såög
(

1733 
S¸ìn
*

1735 
	`XDi•œyMŸi⁄Buf„rSize
(

1736 
Di•œy
*

1738 
VisuÆID
 
	`XVisuÆIDFromVisuÆ
(

1739 
VisuÆ
*

1744 
Sètus
 
	`XInôThªads
(

1748 
	`XLockDi•œy
(

1749 
Di•œy
*

1752 
	`XU∆ockDi•œy
(

1753 
Di•œy
*

1758 
XExtCodes
 *
	`XInôExãnsi⁄
(

1759 
Di•œy
* ,

1760 
_Xc⁄°
 *

1763 
XExtCodes
 *
	`XAddExãnsi⁄
(

1764 
Di•œy
*

1766 
XExtD©a
 *
	`XFödOnExãnsi⁄Li°
(

1767 
XExtD©a
** ,

1770 
XExtD©a
 **
	`XEHódOfExãnsi⁄Li°
(

1771 
XED©aObje˘


1775 
Wödow
 
	`XRoŸWödow
(

1776 
Di•œy
* ,

1779 
Wödow
 
	`XDeÁu…RoŸWödow
(

1780 
Di•œy
*

1782 
Wödow
 
	`XRoŸWödowOfS¸ìn
(

1783 
S¸ìn
*

1785 
VisuÆ
 *
	`XDeÁu…VisuÆ
(

1786 
Di•œy
* ,

1789 
VisuÆ
 *
	`XDeÁu…VisuÆOfS¸ìn
(

1790 
S¸ìn
*

1792 
GC
 
	`XDeÁu…GC
(

1793 
Di•œy
* ,

1796 
GC
 
	`XDeÁu…GCOfS¸ìn
(

1797 
S¸ìn
*

1799 
	`XBœckPixñ
(

1800 
Di•œy
* ,

1803 
	`XWhôePixñ
(

1804 
Di•œy
* ,

1807 
	`XAŒPœ√s
(

1810 
	`XBœckPixñOfS¸ìn
(

1811 
S¸ìn
*

1813 
	`XWhôePixñOfS¸ìn
(

1814 
S¸ìn
*

1816 
	`XNextReque°
(

1817 
Di•œy
*

1819 
	`XLa°KnownReque°Pro˚s£d
(

1820 
Di•œy
*

1822 *
	`XSîvîVíd‹
(

1823 
Di•œy
*

1825 *
	`XDi•œySåög
(

1826 
Di•œy
*

1828 
Cﬁ‹m≠
 
	`XDeÁu…Cﬁ‹m≠
(

1829 
Di•œy
* ,

1832 
Cﬁ‹m≠
 
	`XDeÁu…Cﬁ‹m≠OfS¸ìn
(

1833 
S¸ìn
*

1835 
Di•œy
 *
	`XDi•œyOfS¸ìn
(

1836 
S¸ìn
*

1838 
S¸ìn
 *
	`XS¸ìnOfDi•œy
(

1839 
Di•œy
* ,

1842 
S¸ìn
 *
	`XDeÁu…S¸ìnOfDi•œy
(

1843 
Di•œy
*

1845 
	`XEvítMaskOfS¸ìn
(

1846 
S¸ìn
*

1849 
	`XS¸ìnNumbîOfS¸ìn
(

1850 
S¸ìn
*

1853 (*
	tXEº‹H™dÀr
) (

1854 
	tDi•œy
* ,

1855 
	tXEº‹Evít
*

1858 
XEº‹H™dÀr
 
	`XSëEº‹H™dÀr
 (

1859 
XEº‹H™dÀr


1863 (*
	tXIOEº‹H™dÀr
) (

1864 
	tDi•œy
*

1867 
XIOEº‹H™dÀr
 
	`XSëIOEº‹H™dÀr
 (

1868 
XIOEº‹H™dÀr


1872 
XPixm≠F‹m©VÆues
 *
	`XLi°Pixm≠F‹m©s
(

1873 
Di•œy
* ,

1876 *
	`XLi°Dïths
(

1877 
Di•œy
* ,

1884 
Sètus
 
	`XRec⁄figuªWMWödow
(

1885 
Di•œy
* ,

1886 
Wödow
 ,

1889 
XWödowCh™ges
*

1892 
Sètus
 
	`XGëWMPrŸocﬁs
(

1893 
Di•œy
* ,

1894 
Wödow
 ,

1895 
Atom
** ,

1898 
Sètus
 
	`XSëWMPrŸocﬁs
(

1899 
Di•œy
* ,

1900 
Wödow
 ,

1901 
Atom
* ,

1904 
Sètus
 
	`XIc⁄ifyWödow
(

1905 
Di•œy
* ,

1906 
Wödow
 ,

1909 
Sètus
 
	`XWôhdøwWödow
(

1910 
Di•œy
* ,

1911 
Wödow
 ,

1914 
Sètus
 
	`XGëComm™d
(

1915 
Di•œy
* ,

1916 
Wödow
 ,

1920 
Sètus
 
	`XGëWMCﬁ‹m≠Wödows
(

1921 
Di•œy
* ,

1922 
Wödow
 ,

1923 
Wödow
** ,

1926 
Sètus
 
	`XSëWMCﬁ‹m≠Wödows
(

1927 
Di•œy
* ,

1928 
Wödow
 ,

1929 
Wödow
* ,

1932 
	`XFªeSåögLi°
(

1935 
	`XSëTønsõ¡F‹Höt
(

1936 
Di•œy
* ,

1937 
Wödow
 ,

1938 
Wödow


1943 
	`XA˘iv©eS¸ìnSavî
(

1944 
Di•œy
*

1947 
	`XAddHo°
(

1948 
Di•œy
* ,

1949 
XHo°Addªss
*

1952 
	`XAddHo°s
(

1953 
Di•œy
* ,

1954 
XHo°Addªss
* ,

1958 
	`XAddToExãnsi⁄Li°
(

1959 
_XExtD©a
** ,

1960 
XExtD©a
*

1963 
	`XAddToSaveSë
(

1964 
Di•œy
* ,

1965 
Wödow


1968 
Sètus
 
	`XAŒocCﬁ‹
(

1969 
Di•œy
* ,

1970 
Cﬁ‹m≠
 ,

1971 
XCﬁ‹
*

1974 
Sètus
 
	`XAŒocCﬁ‹Cñls
(

1975 
Di•œy
* ,

1976 
Cﬁ‹m≠
 ,

1977 
Boﬁ
 ,

1984 
Sètus
 
	`XAŒocCﬁ‹Pœ√s
(

1985 
Di•œy
* ,

1986 
Cﬁ‹m≠
 ,

1987 
Boﬁ
 ,

1998 
Sètus
 
	`XAŒocNamedCﬁ‹
(

1999 
Di•œy
* ,

2000 
Cﬁ‹m≠
 ,

2001 
_Xc⁄°
 * ,

2002 
XCﬁ‹
* ,

2003 
XCﬁ‹
*

2006 
	`XAŒowEvíts
(

2007 
Di•œy
* ,

2009 
Time


2012 
	`XAutoRïótOff
(

2013 
Di•œy
*

2016 
	`XAutoRïótOn
(

2017 
Di•œy
*

2020 
	`XBñl
(

2021 
Di•œy
* ,

2025 
	`XBôm≠BôOrdî
(

2026 
Di•œy
*

2029 
	`XBôm≠Pad
(

2030 
Di•œy
*

2033 
	`XBôm≠Unô
(

2034 
Di•œy
*

2037 
	`XCñlsOfS¸ìn
(

2038 
S¸ìn
*

2041 
	`XCh™geA˘ivePoöãrGøb
(

2042 
Di•œy
* ,

2044 
Curs‹
 ,

2045 
Time


2048 
	`XCh™geGC
(

2049 
Di•œy
* ,

2050 
GC
 ,

2052 
XGCVÆues
*

2055 
	`XCh™geKeybﬂrdC⁄åﬁ
(

2056 
Di•œy
* ,

2058 
XKeybﬂrdC⁄åﬁ
*

2061 
	`XCh™geKeybﬂrdM≠pög
(

2062 
Di•œy
* ,

2065 
KeySym
* ,

2069 
	`XCh™gePoöãrC⁄åﬁ
(

2070 
Di•œy
* ,

2071 
Boﬁ
 ,

2072 
Boﬁ
 ,

2078 
	`XCh™gePr›îty
(

2079 
Di•œy
* ,

2080 
Wödow
 ,

2081 
Atom
 ,

2082 
Atom
 ,

2085 
_Xc⁄°
 * ,

2089 
	`XCh™geSaveSë
(

2090 
Di•œy
* ,

2091 
Wödow
 ,

2095 
	`XCh™geWödowAâribuãs
(

2096 
Di•œy
* ,

2097 
Wödow
 ,

2099 
XSëWödowAâribuãs
*

2102 
Boﬁ
 
	`XCheckIfEvít
(

2103 
Di•œy
* ,

2104 
XEvít
* ,

2105 
	$Boﬁ
 (*) (

2106 
Di•œy
* ,

2107 
XEvít
* ,

2108 
XPoöãr


2110 
XPoöãr


2113 
Boﬁ
 
	`XCheckMaskEvít
(

2114 
Di•œy
* ,

2116 
XEvít
*

2119 
Boﬁ
 
	`XCheckTy≥dEvít
(

2120 
Di•œy
* ,

2122 
XEvít
*

2125 
Boﬁ
 
	`XCheckTy≥dWödowEvít
(

2126 
Di•œy
* ,

2127 
Wödow
 ,

2129 
XEvít
*

2132 
Boﬁ
 
	`XCheckWödowEvít
(

2133 
Di•œy
* ,

2134 
Wödow
 ,

2136 
XEvít
*

2139 
	`XCúcuœãSubwödows
(

2140 
Di•œy
* ,

2141 
Wödow
 ,

2145 
	`XCúcuœãSubwödowsDown
(

2146 
Di•œy
* ,

2147 
Wödow


2150 
	`XCúcuœãSubwödowsUp
(

2151 
Di•œy
* ,

2152 
Wödow


2155 
	`XCÀ¨Aªa
(

2156 
Di•œy
* ,

2157 
Wödow
 ,

2162 
Boﬁ


2165 
	`XCÀ¨Wödow
(

2166 
Di•œy
* ,

2167 
Wödow


2170 
	`XClo£Di•œy
(

2171 
Di•œy
*

2174 
	`XC⁄figuªWödow
(

2175 
Di•œy
* ,

2176 
Wödow
 ,

2178 
XWödowCh™ges
*

2181 
	`XC⁄√˘i⁄Numbî
(

2182 
Di•œy
*

2185 
	`XC⁄vîtSñe˘i⁄
(

2186 
Di•œy
* ,

2187 
Atom
 ,

2188 
Atom
 ,

2189 
Atom
 ,

2190 
Wödow
 ,

2191 
Time


2194 
	`XC›yAªa
(

2195 
Di•œy
* ,

2196 
DøwabÀ
 ,

2197 
DøwabÀ
 ,

2198 
GC
 ,

2207 
	`XC›yGC
(

2208 
Di•œy
* ,

2209 
GC
 ,

2211 
GC


2214 
	`XC›yPœ√
(

2215 
Di•œy
* ,

2216 
DøwabÀ
 ,

2217 
DøwabÀ
 ,

2218 
GC
 ,

2228 
	`XDeÁu…Dïth
(

2229 
Di•œy
* ,

2233 
	`XDeÁu…DïthOfS¸ìn
(

2234 
S¸ìn
*

2237 
	`XDeÁu…S¸ìn
(

2238 
Di•œy
*

2241 
	`XDeföeCurs‹
(

2242 
Di•œy
* ,

2243 
Wödow
 ,

2244 
Curs‹


2247 
	`XDñëePr›îty
(

2248 
Di•œy
* ,

2249 
Wödow
 ,

2250 
Atom


2253 
	`XDe°royWödow
(

2254 
Di•œy
* ,

2255 
Wödow


2258 
	`XDe°roySubwödows
(

2259 
Di•œy
* ,

2260 
Wödow


2263 
	`XD€sBackögSt‹e
(

2264 
S¸ìn
*

2267 
Boﬁ
 
	`XD€sSaveUndîs
(

2268 
S¸ìn
*

2271 
	`XDißbÀAc˚ssC⁄åﬁ
(

2272 
Di•œy
*

2276 
	`XDi•œyCñls
(

2277 
Di•œy
* ,

2281 
	`XDi•œyHeight
(

2282 
Di•œy
* ,

2286 
	`XDi•œyHeightMM
(

2287 
Di•œy
* ,

2291 
	`XDi•œyKeycodes
(

2292 
Di•œy
* ,

2297 
	`XDi•œyPœ√s
(

2298 
Di•œy
* ,

2302 
	`XDi•œyWidth
(

2303 
Di•œy
* ,

2307 
	`XDi•œyWidthMM
(

2308 
Di•œy
* ,

2312 
	`XDøwArc
(

2313 
Di•œy
* ,

2314 
DøwabÀ
 ,

2315 
GC
 ,

2324 
	`XDøwArcs
(

2325 
Di•œy
* ,

2326 
DøwabÀ
 ,

2327 
GC
 ,

2328 
XArc
* ,

2332 
	`XDøwImageSåög
(

2333 
Di•œy
* ,

2334 
DøwabÀ
 ,

2335 
GC
 ,

2338 
_Xc⁄°
 * ,

2342 
	`XDøwImageSåög16
(

2343 
Di•œy
* ,

2344 
DøwabÀ
 ,

2345 
GC
 ,

2348 
_Xc⁄°
 
XCh¨2b
* ,

2352 
	`XDøwLöe
(

2353 
Di•œy
* ,

2354 
DøwabÀ
 ,

2355 
GC
 ,

2362 
	`XDøwLöes
(

2363 
Di•œy
* ,

2364 
DøwabÀ
 ,

2365 
GC
 ,

2366 
XPoöt
* ,

2371 
	`XDøwPoöt
(

2372 
Di•œy
* ,

2373 
DøwabÀ
 ,

2374 
GC
 ,

2379 
	`XDøwPoöts
(

2380 
Di•œy
* ,

2381 
DøwabÀ
 ,

2382 
GC
 ,

2383 
XPoöt
* ,

2388 
	`XDøwRe˘™gÀ
(

2389 
Di•œy
* ,

2390 
DøwabÀ
 ,

2391 
GC
 ,

2398 
	`XDøwRe˘™gÀs
(

2399 
Di•œy
* ,

2400 
DøwabÀ
 ,

2401 
GC
 ,

2402 
XRe˘™gÀ
* ,

2406 
	`XDøwSegmíts
(

2407 
Di•œy
* ,

2408 
DøwabÀ
 ,

2409 
GC
 ,

2410 
XSegmít
* ,

2414 
	`XDøwSåög
(

2415 
Di•œy
* ,

2416 
DøwabÀ
 ,

2417 
GC
 ,

2420 
_Xc⁄°
 * ,

2424 
	`XDøwSåög16
(

2425 
Di•œy
* ,

2426 
DøwabÀ
 ,

2427 
GC
 ,

2430 
_Xc⁄°
 
XCh¨2b
* ,

2434 
	`XDøwText
(

2435 
Di•œy
* ,

2436 
DøwabÀ
 ,

2437 
GC
 ,

2440 
XTextIãm
* ,

2444 
	`XDøwText16
(

2445 
Di•œy
* ,

2446 
DøwabÀ
 ,

2447 
GC
 ,

2450 
XTextIãm16
* ,

2454 
	`XE«bÀAc˚ssC⁄åﬁ
(

2455 
Di•œy
*

2458 
	`XEvítsQueued
(

2459 
Di•œy
* ,

2463 
Sètus
 
	`XFëchName
(

2464 
Di•œy
* ,

2465 
Wödow
 ,

2469 
	`XFûlArc
(

2470 
Di•œy
* ,

2471 
DøwabÀ
 ,

2472 
GC
 ,

2481 
	`XFûlArcs
(

2482 
Di•œy
* ,

2483 
DøwabÀ
 ,

2484 
GC
 ,

2485 
XArc
* ,

2489 
	`XFûlPﬁyg⁄
(

2490 
Di•œy
* ,

2491 
DøwabÀ
 ,

2492 
GC
 ,

2493 
XPoöt
* ,

2499 
	`XFûlRe˘™gÀ
(

2500 
Di•œy
* ,

2501 
DøwabÀ
 ,

2502 
GC
 ,

2509 
	`XFûlRe˘™gÀs
(

2510 
Di•œy
* ,

2511 
DøwabÀ
 ,

2512 
GC
 ,

2513 
XRe˘™gÀ
* ,

2517 
	`XFlush
(

2518 
Di•œy
*

2521 
	`XF‹˚S¸ìnSavî
(

2522 
Di•œy
* ,

2526 
	`XFªe
(

2530 
	`XFªeCﬁ‹m≠
(

2531 
Di•œy
* ,

2532 
Cﬁ‹m≠


2535 
	`XFªeCﬁ‹s
(

2536 
Di•œy
* ,

2537 
Cﬁ‹m≠
 ,

2543 
	`XFªeCurs‹
(

2544 
Di•œy
* ,

2545 
Curs‹


2548 
	`XFªeExãnsi⁄Li°
(

2552 
	`XFªeF⁄t
(

2553 
Di•œy
* ,

2554 
XF⁄tSåu˘
*

2557 
	`XFªeF⁄tInfo
(

2559 
XF⁄tSåu˘
* ,

2563 
	`XFªeF⁄tNames
(

2567 
	`XFªeF⁄tP©h
(

2571 
	`XFªeGC
(

2572 
Di•œy
* ,

2573 
GC


2576 
	`XFªeModifõrm≠
(

2577 
XModifõrKeym≠
*

2580 
	`XFªePixm≠
(

2581 
Di•œy
* ,

2582 
Pixm≠


2585 
	`XGeomëry
(

2586 
Di•œy
* ,

2588 
_Xc⁄°
 * ,

2589 
_Xc⁄°
 * ,

2601 
	`XGëEº‹D©aba£Text
(

2602 
Di•œy
* ,

2603 
_Xc⁄°
 * ,

2604 
_Xc⁄°
 * ,

2605 
_Xc⁄°
 * ,

2610 
	`XGëEº‹Text
(

2611 
Di•œy
* ,

2617 
Boﬁ
 
	`XGëF⁄tPr›îty
(

2618 
XF⁄tSåu˘
* ,

2619 
Atom
 ,

2623 
Sètus
 
	`XGëGCVÆues
(

2624 
Di•œy
* ,

2625 
GC
 ,

2627 
XGCVÆues
*

2630 
Sètus
 
	`XGëGeomëry
(

2631 
Di•œy
* ,

2632 
DøwabÀ
 ,

2633 
Wödow
* ,

2642 
Sètus
 
	`XGëIc⁄Name
(

2643 
Di•œy
* ,

2644 
Wödow
 ,

2648 
	`XGëI≈utFocus
(

2649 
Di•œy
* ,

2650 
Wödow
* ,

2654 
	`XGëKeybﬂrdC⁄åﬁ
(

2655 
Di•œy
* ,

2656 
XKeybﬂrdSèã
*

2659 
	`XGëPoöãrC⁄åﬁ
(

2660 
Di•œy
* ,

2666 
	`XGëPoöãrM≠pög
(

2667 
Di•œy
* ,

2672 
	`XGëS¸ìnSavî
(

2673 
Di•œy
* ,

2680 
Sètus
 
	`XGëTønsõ¡F‹Höt
(

2681 
Di•œy
* ,

2682 
Wödow
 ,

2683 
Wödow
*

2686 
	`XGëWödowPr›îty
(

2687 
Di•œy
* ,

2688 
Wödow
 ,

2689 
Atom
 ,

2692 
Boﬁ
 ,

2693 
Atom
 ,

2694 
Atom
* ,

2701 
Sètus
 
	`XGëWödowAâribuãs
(

2702 
Di•œy
* ,

2703 
Wödow
 ,

2704 
XWödowAâribuãs
*

2707 
	`XGøbBuâ⁄
(

2708 
Di•œy
* ,

2711 
Wödow
 ,

2712 
Boﬁ
 ,

2716 
Wödow
 ,

2717 
Curs‹


2720 
	`XGøbKey
(

2721 
Di•œy
* ,

2724 
Wödow
 ,

2725 
Boﬁ
 ,

2730 
	`XGøbKeybﬂrd
(

2731 
Di•œy
* ,

2732 
Wödow
 ,

2733 
Boﬁ
 ,

2736 
Time


2739 
	`XGøbPoöãr
(

2740 
Di•œy
* ,

2741 
Wödow
 ,

2742 
Boﬁ
 ,

2746 
Wödow
 ,

2747 
Curs‹
 ,

2748 
Time


2751 
	`XGøbSîvî
(

2752 
Di•œy
*

2755 
	`XHeightMMOfS¸ìn
(

2756 
S¸ìn
*

2759 
	`XHeightOfS¸ìn
(

2760 
S¸ìn
*

2763 
	`XIfEvít
(

2764 
Di•œy
* ,

2765 
XEvít
* ,

2766 
	$Boﬁ
 (*) (

2767 
Di•œy
* ,

2768 
XEvít
* ,

2769 
XPoöãr


2771 
XPoöãr


2774 
	`XImageByãOrdî
(

2775 
Di•œy
*

2778 
	`XIn°ÆlCﬁ‹m≠
(

2779 
Di•œy
* ,

2780 
Cﬁ‹m≠


2783 
KeyCode
 
	`XKeysymToKeycode
(

2784 
Di•œy
* ,

2785 
KeySym


2788 
	`XKûlClõ¡
(

2789 
Di•œy
* ,

2790 
XID


2793 
Sètus
 
	`XLookupCﬁ‹
(

2794 
Di•œy
* ,

2795 
Cﬁ‹m≠
 ,

2796 
_Xc⁄°
 * ,

2797 
XCﬁ‹
* ,

2798 
XCﬁ‹
*

2801 
	`XLowîWödow
(

2802 
Di•œy
* ,

2803 
Wödow


2806 
	`XM≠Rai£d
(

2807 
Di•œy
* ,

2808 
Wödow


2811 
	`XM≠Subwödows
(

2812 
Di•œy
* ,

2813 
Wödow


2816 
	`XM≠Wödow
(

2817 
Di•œy
* ,

2818 
Wödow


2821 
	`XMaskEvít
(

2822 
Di•œy
* ,

2824 
XEvít
*

2827 
	`XMaxCm≠sOfS¸ìn
(

2828 
S¸ìn
*

2831 
	`XMöCm≠sOfS¸ìn
(

2832 
S¸ìn
*

2835 
	`XMoveResizeWödow
(

2836 
Di•œy
* ,

2837 
Wödow
 ,

2844 
	`XMoveWödow
(

2845 
Di•œy
* ,

2846 
Wödow
 ,

2851 
	`XNextEvít
(

2852 
Di•œy
* ,

2853 
XEvít
*

2856 
	`XNoOp
(

2857 
Di•œy
*

2860 
Sètus
 
	`XP¨£Cﬁ‹
(

2861 
Di•œy
* ,

2862 
Cﬁ‹m≠
 ,

2863 
_Xc⁄°
 * ,

2864 
XCﬁ‹
*

2867 
	`XP¨£Geomëry
(

2868 
_Xc⁄°
 * ,

2875 
	`XPìkEvít
(

2876 
Di•œy
* ,

2877 
XEvít
*

2880 
	`XPìkIfEvít
(

2881 
Di•œy
* ,

2882 
XEvít
* ,

2883 
	$Boﬁ
 (*) (

2884 
Di•œy
* ,

2885 
XEvít
* ,

2886 
XPoöãr


2888 
XPoöãr


2891 
	`XPídög
(

2892 
Di•œy
*

2895 
	`XPœ√sOfS¸ìn
(

2896 
S¸ìn
*

2899 
	`XPrŸocﬁRevisi⁄
(

2900 
Di•œy
*

2903 
	`XPrŸocﬁVîsi⁄
(

2904 
Di•œy
*

2908 
	`XPutBackEvít
(

2909 
Di•œy
* ,

2910 
XEvít
*

2913 
	`XPutImage
(

2914 
Di•œy
* ,

2915 
DøwabÀ
 ,

2916 
GC
 ,

2917 
XImage
* ,

2926 
	`XQLígth
(

2927 
Di•œy
*

2930 
Sètus
 
	`XQuîyBe°Curs‹
(

2931 
Di•œy
* ,

2932 
DøwabÀ
 ,

2939 
Sètus
 
	`XQuîyBe°Size
(

2940 
Di•œy
* ,

2942 
DøwabÀ
 ,

2949 
Sètus
 
	`XQuîyBe°Stù∂e
(

2950 
Di•œy
* ,

2951 
DøwabÀ
 ,

2958 
Sètus
 
	`XQuîyBe°Tûe
(

2959 
Di•œy
* ,

2960 
DøwabÀ
 ,

2967 
	`XQuîyCﬁ‹
(

2968 
Di•œy
* ,

2969 
Cﬁ‹m≠
 ,

2970 
XCﬁ‹
*

2973 
	`XQuîyCﬁ‹s
(

2974 
Di•œy
* ,

2975 
Cﬁ‹m≠
 ,

2976 
XCﬁ‹
* ,

2980 
Boﬁ
 
	`XQuîyExãnsi⁄
(

2981 
Di•œy
* ,

2982 
_Xc⁄°
 * ,

2988 
	`XQuîyKeym≠
(

2989 
Di•œy
* ,

2993 
Boﬁ
 
	`XQuîyPoöãr
(

2994 
Di•œy
* ,

2995 
Wödow
 ,

2996 
Wödow
* ,

2997 
Wödow
* ,

3005 
	`XQuîyTextExã¡s
(

3006 
Di•œy
* ,

3007 
XID
 ,

3008 
_Xc⁄°
 * ,

3013 
XCh¨Såu˘
*

3016 
	`XQuîyTextExã¡s16
(

3017 
Di•œy
* ,

3018 
XID
 ,

3019 
_Xc⁄°
 
XCh¨2b
* ,

3024 
XCh¨Såu˘
*

3027 
Sètus
 
	`XQuîyTªe
(

3028 
Di•œy
* ,

3029 
Wödow
 ,

3030 
Wödow
* ,

3031 
Wödow
* ,

3032 
Wödow
** ,

3036 
	`XRai£Wödow
(

3037 
Di•œy
* ,

3038 
Wödow


3041 
	`XRódBôm≠Fûe
(

3042 
Di•œy
* ,

3043 
DøwabÀ
 ,

3044 
_Xc⁄°
 * ,

3047 
Pixm≠
* ,

3052 
	`XRódBôm≠FûeD©a
(

3053 
_Xc⁄°
 * ,

3061 
	`XRebödKeysym
(

3062 
Di•œy
* ,

3063 
KeySym
 ,

3064 
KeySym
* ,

3066 
_Xc⁄°
 * ,

3070 
	`XRecﬁ‹Curs‹
(

3071 
Di•œy
* ,

3072 
Curs‹
 ,

3073 
XCﬁ‹
* ,

3074 
XCﬁ‹
*

3077 
	`XRe‰eshKeybﬂrdM≠pög
(

3078 
XM≠pögEvít
*

3081 
	`XRemoveFromSaveSë
(

3082 
Di•œy
* ,

3083 
Wödow


3086 
	`XRemoveHo°
(

3087 
Di•œy
* ,

3088 
XHo°Addªss
*

3091 
	`XRemoveHo°s
(

3092 
Di•œy
* ,

3093 
XHo°Addªss
* ,

3097 
	`XRï¨ítWödow
(

3098 
Di•œy
* ,

3099 
Wödow
 ,

3100 
Wödow
 ,

3105 
	`XRe£tS¸ìnSavî
(

3106 
Di•œy
*

3109 
	`XResizeWödow
(

3110 
Di•œy
* ,

3111 
Wödow
 ,

3116 
	`XRe°ackWödows
(

3117 
Di•œy
* ,

3118 
Wödow
* ,

3122 
	`XRŸ©eBuf„rs
(

3123 
Di•œy
* ,

3127 
	`XRŸ©eWödowPr›îtõs
(

3128 
Di•œy
* ,

3129 
Wödow
 ,

3130 
Atom
* ,

3135 
	`XS¸ìnCou¡
(

3136 
Di•œy
*

3139 
	`XSñe˘I≈ut
(

3140 
Di•œy
* ,

3141 
Wödow
 ,

3145 
Sètus
 
	`XSídEvít
(

3146 
Di•œy
* ,

3147 
Wödow
 ,

3148 
Boﬁ
 ,

3150 
XEvít
*

3153 
	`XSëAc˚ssC⁄åﬁ
(

3154 
Di•œy
* ,

3158 
	`XSëArcMode
(

3159 
Di•œy
* ,

3160 
GC
 ,

3164 
	`XSëBackground
(

3165 
Di•œy
* ,

3166 
GC
 ,

3170 
	`XSëClùMask
(

3171 
Di•œy
* ,

3172 
GC
 ,

3173 
Pixm≠


3176 
	`XSëClùOrigö
(

3177 
Di•œy
* ,

3178 
GC
 ,

3183 
	`XSëClùRe˘™gÀs
(

3184 
Di•œy
* ,

3185 
GC
 ,

3188 
XRe˘™gÀ
* ,

3193 
	`XSëClo£DownMode
(

3194 
Di•œy
* ,

3198 
	`XSëComm™d
(

3199 
Di•œy
* ,

3200 
Wödow
 ,

3205 
	`XSëDashes
(

3206 
Di•œy
* ,

3207 
GC
 ,

3209 
_Xc⁄°
 * ,

3213 
	`XSëFûlRuÀ
(

3214 
Di•œy
* ,

3215 
GC
 ,

3219 
	`XSëFûlStyÀ
(

3220 
Di•œy
* ,

3221 
GC
 ,

3225 
	`XSëF⁄t
(

3226 
Di•œy
* ,

3227 
GC
 ,

3228 
F⁄t


3231 
	`XSëF⁄tP©h
(

3232 
Di•œy
* ,

3237 
	`XSëF‹eground
(

3238 
Di•œy
* ,

3239 
GC
 ,

3243 
	`XSëFun˘i⁄
(

3244 
Di•œy
* ,

3245 
GC
 ,

3249 
	`XSëGøphicsExposuªs
(

3250 
Di•œy
* ,

3251 
GC
 ,

3252 
Boﬁ


3255 
	`XSëIc⁄Name
(

3256 
Di•œy
* ,

3257 
Wödow
 ,

3258 
_Xc⁄°
 *

3261 
	`XSëI≈utFocus
(

3262 
Di•œy
* ,

3263 
Wödow
 ,

3265 
Time


3268 
	`XSëLöeAâribuãs
(

3269 
Di•œy
* ,

3270 
GC
 ,

3277 
	`XSëModifõrM≠pög
(

3278 
Di•œy
* ,

3279 
XModifõrKeym≠
*

3282 
	`XSëPœ√Mask
(

3283 
Di•œy
* ,

3284 
GC
 ,

3288 
	`XSëPoöãrM≠pög
(

3289 
Di•œy
* ,

3290 
_Xc⁄°
 * ,

3294 
	`XSëS¸ìnSavî
(

3295 
Di•œy
* ,

3302 
	`XSëSñe˘i⁄Ow√r
(

3303 
Di•œy
* ,

3304 
Atom
 ,

3305 
Wödow
 ,

3306 
Time


3309 
	`XSëSèã
(

3310 
Di•œy
* ,

3311 
GC
 ,

3318 
	`XSëStù∂e
(

3319 
Di•œy
* ,

3320 
GC
 ,

3321 
Pixm≠


3324 
	`XSëSubwödowMode
(

3325 
Di•œy
* ,

3326 
GC
 ,

3330 
	`XSëTSOrigö
(

3331 
Di•œy
* ,

3332 
GC
 ,

3337 
	`XSëTûe
(

3338 
Di•œy
* ,

3339 
GC
 ,

3340 
Pixm≠


3343 
	`XSëWödowBackground
(

3344 
Di•œy
* ,

3345 
Wödow
 ,

3349 
	`XSëWödowBackgroundPixm≠
(

3350 
Di•œy
* ,

3351 
Wödow
 ,

3352 
Pixm≠


3355 
	`XSëWödowB‹dî
(

3356 
Di•œy
* ,

3357 
Wödow
 ,

3361 
	`XSëWödowB‹dîPixm≠
(

3362 
Di•œy
* ,

3363 
Wödow
 ,

3364 
Pixm≠


3367 
	`XSëWödowB‹dîWidth
(

3368 
Di•œy
* ,

3369 
Wödow
 ,

3373 
	`XSëWödowCﬁ‹m≠
(

3374 
Di•œy
* ,

3375 
Wödow
 ,

3376 
Cﬁ‹m≠


3379 
	`XSt‹eBuf„r
(

3380 
Di•œy
* ,

3381 
_Xc⁄°
 * ,

3386 
	`XSt‹eByãs
(

3387 
Di•œy
* ,

3388 
_Xc⁄°
 * ,

3392 
	`XSt‹eCﬁ‹
(

3393 
Di•œy
* ,

3394 
Cﬁ‹m≠
 ,

3395 
XCﬁ‹
*

3398 
	`XSt‹eCﬁ‹s
(

3399 
Di•œy
* ,

3400 
Cﬁ‹m≠
 ,

3401 
XCﬁ‹
* ,

3405 
	`XSt‹eName
(

3406 
Di•œy
* ,

3407 
Wödow
 ,

3408 
_Xc⁄°
 *

3411 
	`XSt‹eNamedCﬁ‹
(

3412 
Di•œy
* ,

3413 
Cﬁ‹m≠
 ,

3414 
_Xc⁄°
 * ,

3419 
	`XSync
(

3420 
Di•œy
* ,

3421 
Boﬁ


3424 
	`XTextExã¡s
(

3425 
XF⁄tSåu˘
* ,

3426 
_Xc⁄°
 * ,

3431 
XCh¨Såu˘
*

3434 
	`XTextExã¡s16
(

3435 
XF⁄tSåu˘
* ,

3436 
_Xc⁄°
 
XCh¨2b
* ,

3441 
XCh¨Såu˘
*

3444 
	`XTextWidth
(

3445 
XF⁄tSåu˘
* ,

3446 
_Xc⁄°
 * ,

3450 
	`XTextWidth16
(

3451 
XF⁄tSåu˘
* ,

3452 
_Xc⁄°
 
XCh¨2b
* ,

3456 
Boﬁ
 
	`XTøn¶©eCo‹dö©es
(

3457 
Di•œy
* ,

3458 
Wödow
 ,

3459 
Wödow
 ,

3464 
Wödow
*

3467 
	`XUndeföeCurs‹
(

3468 
Di•œy
* ,

3469 
Wödow


3472 
	`XUngøbBuâ⁄
(

3473 
Di•œy
* ,

3476 
Wödow


3479 
	`XUngøbKey
(

3480 
Di•œy
* ,

3483 
Wödow


3486 
	`XUngøbKeybﬂrd
(

3487 
Di•œy
* ,

3488 
Time


3491 
	`XUngøbPoöãr
(

3492 
Di•œy
* ,

3493 
Time


3496 
	`XUngøbSîvî
(

3497 
Di•œy
*

3500 
	`XUnö°ÆlCﬁ‹m≠
(

3501 
Di•œy
* ,

3502 
Cﬁ‹m≠


3505 
	`XU∆ﬂdF⁄t
(

3506 
Di•œy
* ,

3507 
F⁄t


3510 
	`XUnm≠Subwödows
(

3511 
Di•œy
* ,

3512 
Wödow


3515 
	`XUnm≠Wödow
(

3516 
Di•œy
* ,

3517 
Wödow


3520 
	`XVíd‹Rñó£
(

3521 
Di•œy
*

3524 
	`XW¨pPoöãr
(

3525 
Di•œy
* ,

3526 
Wödow
 ,

3527 
Wödow
 ,

3536 
	`XWidthMMOfS¸ìn
(

3537 
S¸ìn
*

3540 
	`XWidthOfS¸ìn
(

3541 
S¸ìn
*

3544 
	`XWödowEvít
(

3545 
Di•œy
* ,

3546 
Wödow
 ,

3548 
XEvít
*

3551 
	`XWrôeBôm≠Fûe
(

3552 
Di•œy
* ,

3553 
_Xc⁄°
 * ,

3554 
Pixm≠
 ,

3561 
Boﬁ
 
	`XSuµ‹tsLoˇÀ
 ();

3563 *
	`XSëLoˇÀModifõrs
(

3567 
XOM
 
	`XO≥nOM
(

3568 
Di•œy
* ,

3569 
_XrmHashBuckëRec
* ,

3570 
_Xc⁄°
 * ,

3571 
_Xc⁄°
 *

3574 
Sètus
 
	`XClo£OM
(

3575 
XOM


3578 *
	$XSëOMVÆues
(

3579 
XOM
 ,

3581 Ë
	`_X_SENTINEL
(0);

3583 *
	$XGëOMVÆues
(

3584 
XOM
 ,

3586 Ë
	`_X_SENTINEL
(0);

3588 
Di•œy
 *
	`XDi•œyOfOM
(

3589 
XOM


3592 *
	`XLoˇÀOfOM
(

3593 
XOM


3596 
XOC
 
	$XCª©eOC
(

3597 
XOM
 ,

3599 Ë
	`_X_SENTINEL
(0);

3601 
	`XDe°royOC
(

3602 
XOC


3605 
XOM
 
	`XOMOfOC
(

3606 
XOC


3609 *
	$XSëOCVÆues
(

3610 
XOC
 ,

3612 Ë
	`_X_SENTINEL
(0);

3614 *
	$XGëOCVÆues
(

3615 
XOC
 ,

3617 Ë
	`_X_SENTINEL
(0);

3619 
XF⁄tSë
 
	`XCª©eF⁄tSë
(

3620 
Di•œy
* ,

3621 
_Xc⁄°
 * ,

3627 
	`XFªeF⁄tSë
(

3628 
Di•œy
* ,

3629 
XF⁄tSë


3632 
	`XF⁄tsOfF⁄tSë
(

3633 
XF⁄tSë
 ,

3634 
XF⁄tSåu˘
*** ,

3638 *
	`XBa£F⁄tNameLi°OfF⁄tSë
(

3639 
XF⁄tSë


3642 *
	`XLoˇÀOfF⁄tSë
(

3643 
XF⁄tSë


3646 
Boﬁ
 
	`XC⁄ãxtDïídítDøwög
(

3647 
XF⁄tSë


3650 
Boﬁ
 
	`XDúe˘i⁄ÆDïídítDøwög
(

3651 
XF⁄tSë


3654 
Boﬁ
 
	`XC⁄ãxtuÆDøwög
(

3655 
XF⁄tSë


3658 
XF⁄tSëExã¡s
 *
	`XExã¡sOfF⁄tSë
(

3659 
XF⁄tSë


3662 
	`XmbTextEsˇ≥mít
(

3663 
XF⁄tSë
 ,

3664 
_Xc⁄°
 * ,

3668 
	`XwcTextEsˇ≥mít
(

3669 
XF⁄tSë
 ,

3670 
_Xc⁄°
 
wch¨_t
* ,

3674 
	`Xutf8TextEsˇ≥mít
(

3675 
XF⁄tSë
 ,

3676 
_Xc⁄°
 * ,

3680 
	`XmbTextExã¡s
(

3681 
XF⁄tSë
 ,

3682 
_Xc⁄°
 * ,

3684 
XRe˘™gÀ
* ,

3685 
XRe˘™gÀ
*

3688 
	`XwcTextExã¡s
(

3689 
XF⁄tSë
 ,

3690 
_Xc⁄°
 
wch¨_t
* ,

3692 
XRe˘™gÀ
* ,

3693 
XRe˘™gÀ
*

3696 
	`Xutf8TextExã¡s
(

3697 
XF⁄tSë
 ,

3698 
_Xc⁄°
 * ,

3700 
XRe˘™gÀ
* ,

3701 
XRe˘™gÀ
*

3704 
Sètus
 
	`XmbTextPîCh¨Exã¡s
(

3705 
XF⁄tSë
 ,

3706 
_Xc⁄°
 * ,

3708 
XRe˘™gÀ
* ,

3709 
XRe˘™gÀ
* ,

3712 
XRe˘™gÀ
* ,

3713 
XRe˘™gÀ
*

3716 
Sètus
 
	`XwcTextPîCh¨Exã¡s
(

3717 
XF⁄tSë
 ,

3718 
_Xc⁄°
 
wch¨_t
* ,

3720 
XRe˘™gÀ
* ,

3721 
XRe˘™gÀ
* ,

3724 
XRe˘™gÀ
* ,

3725 
XRe˘™gÀ
*

3728 
Sètus
 
	`Xutf8TextPîCh¨Exã¡s
(

3729 
XF⁄tSë
 ,

3730 
_Xc⁄°
 * ,

3732 
XRe˘™gÀ
* ,

3733 
XRe˘™gÀ
* ,

3736 
XRe˘™gÀ
* ,

3737 
XRe˘™gÀ
*

3740 
	`XmbDøwText
(

3741 
Di•œy
* ,

3742 
DøwabÀ
 ,

3743 
GC
 ,

3746 
XmbTextIãm
* ,

3750 
	`XwcDøwText
(

3751 
Di•œy
* ,

3752 
DøwabÀ
 ,

3753 
GC
 ,

3756 
XwcTextIãm
* ,

3760 
	`Xutf8DøwText
(

3761 
Di•œy
* ,

3762 
DøwabÀ
 ,

3763 
GC
 ,

3766 
XmbTextIãm
* ,

3770 
	`XmbDøwSåög
(

3771 
Di•œy
* ,

3772 
DøwabÀ
 ,

3773 
XF⁄tSë
 ,

3774 
GC
 ,

3777 
_Xc⁄°
 * ,

3781 
	`XwcDøwSåög
(

3782 
Di•œy
* ,

3783 
DøwabÀ
 ,

3784 
XF⁄tSë
 ,

3785 
GC
 ,

3788 
_Xc⁄°
 
wch¨_t
* ,

3792 
	`Xutf8DøwSåög
(

3793 
Di•œy
* ,

3794 
DøwabÀ
 ,

3795 
XF⁄tSë
 ,

3796 
GC
 ,

3799 
_Xc⁄°
 * ,

3803 
	`XmbDøwImageSåög
(

3804 
Di•œy
* ,

3805 
DøwabÀ
 ,

3806 
XF⁄tSë
 ,

3807 
GC
 ,

3810 
_Xc⁄°
 * ,

3814 
	`XwcDøwImageSåög
(

3815 
Di•œy
* ,

3816 
DøwabÀ
 ,

3817 
XF⁄tSë
 ,

3818 
GC
 ,

3821 
_Xc⁄°
 
wch¨_t
* ,

3825 
	`Xutf8DøwImageSåög
(

3826 
Di•œy
* ,

3827 
DøwabÀ
 ,

3828 
XF⁄tSë
 ,

3829 
GC
 ,

3832 
_Xc⁄°
 * ,

3836 
XIM
 
	`XO≥nIM
(

3837 
Di•œy
* ,

3838 
_XrmHashBuckëRec
* ,

3843 
Sètus
 
	`XClo£IM
(

3844 
XIM


3847 *
	$XGëIMVÆues
(

3848 
XIM
 , ...

3849 Ë
	`_X_SENTINEL
(0);

3851 *
	$XSëIMVÆues
(

3852 
XIM
 , ...

3853 Ë
	`_X_SENTINEL
(0);

3855 
Di•œy
 *
	`XDi•œyOfIM
(

3856 
XIM


3859 *
	`XLoˇÀOfIM
(

3860 
XIM


3863 
XIC
 
	$XCª©eIC
(

3864 
XIM
 , ...

3865 Ë
	`_X_SENTINEL
(0);

3867 
	`XDe°royIC
(

3868 
XIC


3871 
	`XSëICFocus
(

3872 
XIC


3875 
	`XUn£tICFocus
(

3876 
XIC


3879 
wch¨_t
 *
	`XwcRe£tIC
(

3880 
XIC


3883 *
	`XmbRe£tIC
(

3884 
XIC


3887 *
	`Xutf8Re£tIC
(

3888 
XIC


3891 *
	$XSëICVÆues
(

3892 
XIC
 , ...

3893 Ë
	`_X_SENTINEL
(0);

3895 *
	$XGëICVÆues
(

3896 
XIC
 , ...

3897 Ë
	`_X_SENTINEL
(0);

3899 
XIM
 
	`XIMOfIC
(

3900 
XIC


3903 
Boﬁ
 
	`XFûãrEvít
(

3904 
XEvít
* ,

3905 
Wödow


3908 
	`XmbLookupSåög
(

3909 
XIC
 ,

3910 
XKeyPªs£dEvít
* ,

3913 
KeySym
* ,

3914 
Sètus
*

3917 
	`XwcLookupSåög
(

3918 
XIC
 ,

3919 
XKeyPªs£dEvít
* ,

3920 
wch¨_t
* ,

3922 
KeySym
* ,

3923 
Sètus
*

3926 
	`Xutf8LookupSåög
(

3927 
XIC
 ,

3928 
XKeyPªs£dEvít
* ,

3931 
KeySym
* ,

3932 
Sètus
*

3935 
XVaNe°edLi°
 
	$XVaCª©eNe°edLi°
(

3937 Ë
	`_X_SENTINEL
(0);

3941 
Boﬁ
 
	`XRegi°îIMIn°™tüãCÆlback
(

3942 
Di•œy
* ,

3943 
_XrmHashBuckëRec
* ,

3946 
XIDProc
 ,

3947 
XPoöãr


3950 
Boﬁ
 
	`XUƒegi°îIMIn°™tüãCÆlback
(

3951 
Di•œy
* ,

3952 
_XrmHashBuckëRec
* ,

3955 
XIDProc
 ,

3956 
XPoöãr


3959 (*
	tXC⁄√˘i⁄W©chProc
)(

3960 
	tDi•œy
* ,

3961 
	tXPoöãr
 ,

3963 
	tBoﬁ
 ,

3964 
	tXPoöãr
*

3968 
Sètus
 
	`XI¡î«lC⁄√˘i⁄Numbîs
(

3969 
Di•œy
* ,

3974 
	`XPro˚ssI¡î«lC⁄√˘i⁄
(

3975 
Di•œy
* ,

3979 
Sètus
 
	`XAddC⁄√˘i⁄W©ch
(

3980 
Di•œy
* ,

3981 
XC⁄√˘i⁄W©chProc
 ,

3982 
XPoöãr


3985 
	`XRemoveC⁄√˘i⁄W©ch
(

3986 
Di•œy
* ,

3987 
XC⁄√˘i⁄W©chProc
 ,

3988 
XPoöãr


3991 
	`XSëAuth‹iz©i⁄
(

3998 
	`_Xmbtowc
(

3999 
wch¨_t
 * ,

4000 #ifde‡
ISC


4002 
size_t


4009 
	`_Xw˘omb
(

4011 
wch¨_t


4014 
Boﬁ
 
	`XGëEvítD©a
(

4015 
Di•œy
* ,

4016 
XGíîicEvítCookõ
*

4019 
	`XFªeEvítD©a
(

4020 
Di•œy
* ,

4021 
XGíîicEvítCookõ
*

4024 
_XFUNCPROTOEND


	@/usr/include/X11/Xutil.h

51 #i‚de‡
_XUTIL_H_


52 
	#_XUTIL_H_


	)

55 
	~<X11/Xlib.h
>

56 
	~<X11/keysym.h
>

62 
	#NoVÆue
 0x0000

	)

63 
	#XVÆue
 0x0001

	)

64 
	#YVÆue
 0x0002

	)

65 
	#WidthVÆue
 0x0004

	)

66 
	#HeightVÆue
 0x0008

	)

67 
	#AŒVÆues
 0x000F

	)

68 
	#XNeg©ive
 0x0010

	)

69 
	#YNeg©ive
 0x0020

	)

76 
	mÊags
;

77 
	mx
, 
	my
;

78 
	mwidth
, 
	mheight
;

79 
	mmö_width
, 
	mmö_height
;

80 
	mmax_width
, 
	mmax_height
;

81 
	mwidth_öc
, 
	mheight_öc
;

83 
	mx
;

84 
	my
;

85 } 
	mmö_a•e˘
, 
	mmax_a•e˘
;

86 
	mba£_width
, 
	mba£_height
;

87 
	mwö_gøvôy
;

88 } 
	tXSizeHöts
;

96 
	#USPosôi⁄
 (1L << 0Ë

	)

97 
	#USSize
 (1L << 1Ë

	)

99 
	#PPosôi⁄
 (1L << 2Ë

	)

100 
	#PSize
 (1L << 3Ë

	)

101 
	#PMöSize
 (1L << 4Ë

	)

102 
	#PMaxSize
 (1L << 5Ë

	)

103 
	#PResizeInc
 (1L << 6Ë

	)

104 
	#PA•e˘
 (1L << 7Ë

	)

105 
	#PBa£Size
 (1L << 8Ë

	)

106 
	#PWöGøvôy
 (1L << 9Ë

	)

109 
	#PAŒHöts
 (
PPosôi⁄
|
PSize
|
PMöSize
|
PMaxSize
|
PResizeInc
|
PA•e˘
)

	)

114 
	mÊags
;

115 
Boﬁ
 
	möput
;

117 
	möôül_°©e
;

118 
Pixm≠
 
	mic⁄_pixm≠
;

119 
Wödow
 
	mic⁄_wödow
;

120 
	mic⁄_x
, 
	mic⁄_y
;

121 
Pixm≠
 
	mic⁄_mask
;

122 
XID
 
	mwödow_group
;

124 } 
	tXWMHöts
;

128 
	#I≈utHöt
 (1L << 0)

	)

129 
	#SèãHöt
 (1L << 1)

	)

130 
	#Ic⁄Pixm≠Höt
 (1L << 2)

	)

131 
	#Ic⁄WödowHöt
 (1L << 3)

	)

132 
	#Ic⁄Posôi⁄Höt
 (1L << 4)

	)

133 
	#Ic⁄MaskHöt
 (1L << 5)

	)

134 
	#WödowGroupHöt
 (1L << 6)

	)

135 
	#AŒHöts
 (
I≈utHöt
|
SèãHöt
|
Ic⁄Pixm≠Höt
|
Ic⁄WödowHöt
| \

136 
Ic⁄Posôi⁄Höt
|
Ic⁄MaskHöt
|
WödowGroupHöt
)

	)

137 
	#XUrgícyHöt
 (1L << 8)

	)

140 
	#WôhdøwnSèã
 0

	)

141 
	#N‹mÆSèã
 1

	)

142 
	#Ic⁄icSèã
 3

	)

147 
	#D⁄tC¨eSèã
 0

	)

148 
	#ZoomSèã
 2

	)

149 
	#I«˘iveSèã
 4

	)

158 *
	mvÆue
;

159 
Atom
 
	mícodög
;

160 
	mf‹m©
;

161 
	mnôems
;

162 } 
	tXTextPr›îty
;

164 
	#XNoMem‹y
 -1

	)

165 
	#XLoˇÀNŸSuµ‹ãd
 -2

	)

166 
	#XC⁄vîãrNŸFound
 -3

	)

169 
	mXSåögStyÀ
,

170 
	mXCompoundTextStyÀ
,

171 
	mXTextStyÀ
,

172 
	mXStdICCTextStyÀ
,

174 
	mXUTF8SåögStyÀ


175 } 
	tXICCEncodögStyÀ
;

178 
	mmö_width
, 
	mmö_height
;

179 
	mmax_width
, 
	mmax_height
;

180 
	mwidth_öc
, 
	mheight_öc
;

181 } 
	tXIc⁄Size
;

184 *
	mªs_«me
;

185 *
	mªs_˛ass
;

186 } 
	tXCœssHöt
;

188 #ifde‡
XUTIL_DEFINE_FUNCTIONS


189 
XDe°royImage
(

190 
XImage
 *
ximage
);

191 
XGëPixñ
(

192 
XImage
 *
ximage
,

193 
x
, 
y
);

194 
XPutPixñ
(

195 
XImage
 *
ximage
,

196 
x
, 
y
,

197 
pixñ
);

198 
XImage
 *
XSubImage
(

199 
XImage
 *
ximage
,

200 
x
, 
y
,

201 
width
, 
height
);

202 
XAddPixñ
(

203 
XImage
 *
ximage
,

204 
vÆue
);

210 
	#XDe°royImage
(
ximage
) \

211 ((*((
ximage
)->
f
.
de°roy_image
))((ximage)))

	)

212 
	#XGëPixñ
(
ximage
, 
x
, 
y
) \

213 ((*((
ximage
)->
f
.
gë_pixñ
))((ximage), (
x
), (
y
)))

	)

214 
	#XPutPixñ
(
ximage
, 
x
, 
y
, 
pixñ
) \

215 ((*((
ximage
)->
f
.
put_pixñ
))((ximage), (
x
), (
y
), (
pixñ
)))

	)

216 
	#XSubImage
(
ximage
, 
x
, 
y
, 
width
, 
height
) \

217 ((*((
ximage
)->
f
.
sub_image
))((ximage), (
x
), (
y
), (
width
), (
height
)))

	)

218 
	#XAddPixñ
(
ximage
, 
vÆue
) \

219 ((*((
ximage
)->
f
.
add_pixñ
))((ximage), (
vÆue
)))

	)

225 
	s_XCompo£Sètus
 {

226 
XPoöãr
 
	mcompo£_±r
;

227 
	mch¨s_m©ched
;

228 } 
	tXCompo£Sètus
;

233 
	#IsKey∑dKey
(
keysym
) \

234 (((
KeySym
)(
keysym
Ë>
XK_KP_S∑˚
Ë&& ((KeySym)(keysymË<
XK_KP_EquÆ
))

	)

236 
	#IsPriv©eKey∑dKey
(
keysym
) \

237 (((
KeySym
)(
keysym
Ë>0x11000000Ë&& ((KeySym)(keysymË<0x1100FFFF))

	)

239 
	#IsCurs‹Key
(
keysym
) \

240 (((
KeySym
)(
keysym
Ë>
XK_Home
Ë&& ((KeySym)(keysymË< 
XK_Sñe˘
))

	)

242 
	#IsPFKey
(
keysym
) \

243 (((
KeySym
)(
keysym
Ë>
XK_KP_F1
Ë&& ((KeySym)(keysymË<
XK_KP_F4
))

	)

245 
	#IsFun˘i⁄Key
(
keysym
) \

246 (((
KeySym
)(
keysym
Ë>
XK_F1
Ë&& ((KeySym)(keysymË<
XK_F35
))

	)

248 
	#IsMiscFun˘i⁄Key
(
keysym
) \

249 (((
KeySym
)(
keysym
Ë>
XK_Sñe˘
Ë&& ((KeySym)(keysymË<
XK_Bªak
))

	)

251 #ifde‡
XK_XKB_KEYS


252 
	#IsModifõrKey
(
keysym
) \

253 ((((
KeySym
)(
keysym
Ë>
XK_Shi·_L
Ë&& ((KeySym)(keysymË<
XK_Hy≥r_R
)) \

254 || (((
KeySym
)(
keysym
Ë>
XK_ISO_Lock
) && \

255 ((
KeySym
)(
keysym
Ë<
XK_ISO_La°_Group_Lock
)) \

256 || ((
KeySym
)(
keysym
Ë=
XK_Mode_swôch
) \

257 || ((
KeySym
)(
keysym
Ë=
XK_Num_Lock
))

	)

259 
	#IsModifõrKey
(
keysym
) \

260 ((((
KeySym
)(
keysym
Ë>
XK_Shi·_L
Ë&& ((KeySym)(keysymË<
XK_Hy≥r_R
)) \

261 || ((
KeySym
)(
keysym
Ë=
XK_Mode_swôch
) \

262 || ((
KeySym
)(
keysym
Ë=
XK_Num_Lock
))

	)

267 
_XRegi⁄
 *
	tRegi⁄
;

271 
	#Re˘™gÀOut
 0

	)

272 
	#Re˘™gÀIn
 1

	)

273 
	#Re˘™gÀP¨t
 2

	)

282 
VisuÆ
 *
	mvisuÆ
;

283 
VisuÆID
 
	mvisuÆid
;

284 
	ms¸ìn
;

285 
	mdïth
;

286 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

287 
	mc_˛ass
;

289 
	m˛ass
;

291 
	mªd_mask
;

292 
	mgªí_mask
;

293 
	mblue_mask
;

294 
	mcﬁ‹m≠_size
;

295 
	mbôs_≥r_rgb
;

296 } 
	tXVisuÆInfo
;

298 
	#VisuÆNoMask
 0x0

	)

299 
	#VisuÆIDMask
 0x1

	)

300 
	#VisuÆS¸ìnMask
 0x2

	)

301 
	#VisuÆDïthMask
 0x4

	)

302 
	#VisuÆCœssMask
 0x8

	)

303 
	#VisuÆRedMaskMask
 0x10

	)

304 
	#VisuÆGªíMaskMask
 0x20

	)

305 
	#VisuÆBlueMaskMask
 0x40

	)

306 
	#VisuÆCﬁ‹m≠SizeMask
 0x80

	)

307 
	#VisuÆBôsPîRGBMask
 0x100

	)

308 
	#VisuÆAŒMask
 0x1FF

	)

315 
Cﬁ‹m≠
 
	mcﬁ‹m≠
;

316 
	mªd_max
;

317 
	mªd_mu…
;

318 
	mgªí_max
;

319 
	mgªí_mu…
;

320 
	mblue_max
;

321 
	mblue_mu…
;

322 
	mba£_pixñ
;

323 
VisuÆID
 
	mvisuÆid
;

324 
XID
 
	mkûlid
;

325 } 
	tXSènd¨dCﬁ‹m≠
;

327 
	#Rñó£ByFªeögCﬁ‹m≠
 ((
XID
Ë1LË

	)

333 
	#Bôm≠Suc˚ss
 0

	)

334 
	#Bôm≠O≥nFaûed
 1

	)

335 
	#Bôm≠FûeInvÆid
 2

	)

336 
	#Bôm≠NoMem‹y
 3

	)

347 
	#XCSUCCESS
 0

	)

348 
	#XCNOMEM
 1

	)

349 
	#XCNOENT
 2

	)

351 
	tXC⁄ãxt
;

353 
	#XUniqueC⁄ãxt
(Ë((
XC⁄ãxt
Ë
	`XrmUniqueQu¨k
())

	)

354 
	#XSåögToC⁄ãxt
(
°rög
Ë((
XC⁄ãxt
Ë
	`XrmSåögToQu¨k
(°rög))

	)

356 
_XFUNCPROTOBEGIN


360 
XCœssHöt
 *
XAŒocCœssHöt
 (

364 
XIc⁄Size
 *
XAŒocIc⁄Size
 (

368 
XSizeHöts
 *
XAŒocSizeHöts
 (

372 
XSènd¨dCﬁ‹m≠
 *
XAŒocSènd¨dCﬁ‹m≠
 (

376 
XWMHöts
 *
XAŒocWMHöts
 (

380 
XClùBox
(

381 
Regi⁄
 ,

382 
XRe˘™gÀ
*

385 
Regi⁄
 
XCª©eRegi⁄
(

389 c⁄° *
XDeÁu…Såög
 ();

391 
XDñëeC⁄ãxt
(

392 
Di•œy
* ,

393 
XID
 ,

394 
XC⁄ãxt


397 
XDe°royRegi⁄
(

398 
Regi⁄


401 
XEm±yRegi⁄
(

402 
Regi⁄


405 
XEquÆRegi⁄
(

406 
Regi⁄
 ,

407 
Regi⁄


410 
XFödC⁄ãxt
(

411 
Di•œy
* ,

412 
XID
 ,

413 
XC⁄ãxt
 ,

414 
XPoöãr
*

417 
Sètus
 
XGëCœssHöt
(

418 
Di•œy
* ,

419 
Wödow
 ,

420 
XCœssHöt
*

423 
Sètus
 
XGëIc⁄Sizes
(

424 
Di•œy
* ,

425 
Wödow
 ,

426 
XIc⁄Size
** ,

430 
Sètus
 
XGëN‹mÆHöts
(

431 
Di•œy
* ,

432 
Wödow
 ,

433 
XSizeHöts
*

436 
Sètus
 
XGëRGBCﬁ‹m≠s
(

437 
Di•œy
* ,

438 
Wödow
 ,

439 
XSènd¨dCﬁ‹m≠
** ,

441 
Atom


444 
Sètus
 
XGëSizeHöts
(

445 
Di•œy
* ,

446 
Wödow
 ,

447 
XSizeHöts
* ,

448 
Atom


451 
Sètus
 
XGëSènd¨dCﬁ‹m≠
(

452 
Di•œy
* ,

453 
Wödow
 ,

454 
XSènd¨dCﬁ‹m≠
* ,

455 
Atom


458 
Sètus
 
XGëTextPr›îty
(

459 
Di•œy
* ,

460 
Wödow
 ,

461 
XTextPr›îty
* ,

462 
Atom


465 
XVisuÆInfo
 *
XGëVisuÆInfo
(

466 
Di•œy
* ,

468 
XVisuÆInfo
* ,

472 
Sètus
 
XGëWMClõ¡Machöe
(

473 
Di•œy
* ,

474 
Wödow
 ,

475 
XTextPr›îty
*

478 
XWMHöts
 *
XGëWMHöts
(

479 
Di•œy
* ,

480 
Wödow


483 
Sètus
 
XGëWMIc⁄Name
(

484 
Di•œy
* ,

485 
Wödow
 ,

486 
XTextPr›îty
*

489 
Sètus
 
XGëWMName
(

490 
Di•œy
* ,

491 
Wödow
 ,

492 
XTextPr›îty
*

495 
Sètus
 
XGëWMN‹mÆHöts
(

496 
Di•œy
* ,

497 
Wödow
 ,

498 
XSizeHöts
* ,

502 
Sètus
 
XGëWMSizeHöts
(

503 
Di•œy
* ,

504 
Wödow
 ,

505 
XSizeHöts
* ,

507 
Atom


510 
Sètus
 
XGëZoomHöts
(

511 
Di•œy
* ,

512 
Wödow
 ,

513 
XSizeHöts
*

516 
XI¡î£˘Regi⁄
(

517 
Regi⁄
 ,

518 
Regi⁄
 ,

519 
Regi⁄


522 
XC⁄vîtCa£
(

523 
KeySym
 ,

524 
KeySym
* ,

525 
KeySym
*

528 
XLookupSåög
(

529 
XKeyEvít
* ,

532 
KeySym
* ,

533 
XCompo£Sètus
*

536 
Sètus
 
XM©chVisuÆInfo
(

537 
Di•œy
* ,

541 
XVisuÆInfo
*

544 
XOff£tRegi⁄
(

545 
Regi⁄
 ,

550 
Boﬁ
 
XPoötInRegi⁄
(

551 
Regi⁄
 ,

556 
Regi⁄
 
XPﬁyg⁄Regi⁄
(

557 
XPoöt
* ,

562 
XRe˘InRegi⁄
(

563 
Regi⁄
 ,

570 
XSaveC⁄ãxt
(

571 
Di•œy
* ,

572 
XID
 ,

573 
XC⁄ãxt
 ,

574 
_Xc⁄°
 *

577 
XSëCœssHöt
(

578 
Di•œy
* ,

579 
Wödow
 ,

580 
XCœssHöt
*

583 
XSëIc⁄Sizes
(

584 
Di•œy
* ,

585 
Wödow
 ,

586 
XIc⁄Size
* ,

590 
XSëN‹mÆHöts
(

591 
Di•œy
* ,

592 
Wödow
 ,

593 
XSizeHöts
*

596 
XSëRGBCﬁ‹m≠s
(

597 
Di•œy
* ,

598 
Wödow
 ,

599 
XSènd¨dCﬁ‹m≠
* ,

601 
Atom


604 
XSëSizeHöts
(

605 
Di•œy
* ,

606 
Wödow
 ,

607 
XSizeHöts
* ,

608 
Atom


611 
XSëSènd¨dPr›îtõs
(

612 
Di•œy
* ,

613 
Wödow
 ,

614 
_Xc⁄°
 * ,

615 
_Xc⁄°
 * ,

616 
Pixm≠
 ,

619 
XSizeHöts
*

622 
XSëTextPr›îty
(

623 
Di•œy
* ,

624 
Wödow
 ,

625 
XTextPr›îty
* ,

626 
Atom


629 
XSëWMClõ¡Machöe
(

630 
Di•œy
* ,

631 
Wödow
 ,

632 
XTextPr›îty
*

635 
XSëWMHöts
(

636 
Di•œy
* ,

637 
Wödow
 ,

638 
XWMHöts
*

641 
XSëWMIc⁄Name
(

642 
Di•œy
* ,

643 
Wödow
 ,

644 
XTextPr›îty
*

647 
XSëWMName
(

648 
Di•œy
* ,

649 
Wödow
 ,

650 
XTextPr›îty
*

653 
XSëWMN‹mÆHöts
(

654 
Di•œy
* ,

655 
Wödow
 ,

656 
XSizeHöts
*

659 
XSëWMPr›îtõs
(

660 
Di•œy
* ,

661 
Wödow
 ,

662 
XTextPr›îty
* ,

663 
XTextPr›îty
* ,

666 
XSizeHöts
* ,

667 
XWMHöts
* ,

668 
XCœssHöt
*

671 
XmbSëWMPr›îtõs
(

672 
Di•œy
* ,

673 
Wödow
 ,

674 
_Xc⁄°
 * ,

675 
_Xc⁄°
 * ,

678 
XSizeHöts
* ,

679 
XWMHöts
* ,

680 
XCœssHöt
*

683 
Xutf8SëWMPr›îtõs
(

684 
Di•œy
* ,

685 
Wödow
 ,

686 
_Xc⁄°
 * ,

687 
_Xc⁄°
 * ,

690 
XSizeHöts
* ,

691 
XWMHöts
* ,

692 
XCœssHöt
*

695 
XSëWMSizeHöts
(

696 
Di•œy
* ,

697 
Wödow
 ,

698 
XSizeHöts
* ,

699 
Atom


702 
XSëRegi⁄
(

703 
Di•œy
* ,

704 
GC
 ,

705 
Regi⁄


708 
XSëSènd¨dCﬁ‹m≠
(

709 
Di•œy
* ,

710 
Wödow
 ,

711 
XSènd¨dCﬁ‹m≠
* ,

712 
Atom


715 
XSëZoomHöts
(

716 
Di•œy
* ,

717 
Wödow
 ,

718 
XSizeHöts
*

721 
XShrökRegi⁄
(

722 
Regi⁄
 ,

727 
Sètus
 
XSåögLi°ToTextPr›îty
(

730 
XTextPr›îty
*

733 
XSubåa˘Regi⁄
(

734 
Regi⁄
 ,

735 
Regi⁄
 ,

736 
Regi⁄


739 
XmbTextLi°ToTextPr›îty
(

740 
Di•œy
* 
di•œy
,

741 ** 
li°
,

742 
cou¡
,

743 
XICCEncodögStyÀ
 
°yÀ
,

744 
XTextPr›îty
* 
ãxt_¥›_ªtu∫


747 
XwcTextLi°ToTextPr›îty
(

748 
Di•œy
* 
di•œy
,

749 
wch¨_t
** 
li°
,

750 
cou¡
,

751 
XICCEncodögStyÀ
 
°yÀ
,

752 
XTextPr›îty
* 
ãxt_¥›_ªtu∫


755 
Xutf8TextLi°ToTextPr›îty
(

756 
Di•œy
* 
di•œy
,

757 ** 
li°
,

758 
cou¡
,

759 
XICCEncodögStyÀ
 
°yÀ
,

760 
XTextPr›îty
* 
ãxt_¥›_ªtu∫


763 
XwcFªeSåögLi°
(

764 
wch¨_t
** 
li°


767 
Sètus
 
XTextPr›îtyToSåögLi°
(

768 
XTextPr›îty
* ,

773 
XmbTextPr›îtyToTextLi°
(

774 
Di•œy
* 
di•œy
,

775 c⁄° 
XTextPr›îty
* 
ãxt_¥›
,

776 *** 
li°_ªtu∫
,

777 * 
cou¡_ªtu∫


780 
XwcTextPr›îtyToTextLi°
(

781 
Di•œy
* 
di•œy
,

782 c⁄° 
XTextPr›îty
* 
ãxt_¥›
,

783 
wch¨_t
*** 
li°_ªtu∫
,

784 * 
cou¡_ªtu∫


787 
Xutf8TextPr›îtyToTextLi°
(

788 
Di•œy
* 
di•œy
,

789 c⁄° 
XTextPr›îty
* 
ãxt_¥›
,

790 *** 
li°_ªtu∫
,

791 * 
cou¡_ªtu∫


794 
XUni⁄Re˘WôhRegi⁄
(

795 
XRe˘™gÀ
* ,

796 
Regi⁄
 ,

797 
Regi⁄


800 
XUni⁄Regi⁄
(

801 
Regi⁄
 ,

802 
Regi⁄
 ,

803 
Regi⁄


806 
XWMGeomëry
(

807 
Di•œy
* ,

809 
_Xc⁄°
 * ,

810 
_Xc⁄°
 * ,

812 
XSizeHöts
* ,

820 
XX‹Regi⁄
(

821 
Regi⁄
 ,

822 
Regi⁄
 ,

823 
Regi⁄


826 
	g_XFUNCPROTOEND


	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!
deföed
 
__NO_LONG_DOUBLE_MATH
 \

102 || 
deföed
 
__LDBL_COMPAT
 \

103 || !
deföed
 
_LIBC
)

104 #ifde‡
__LDBL_COMPAT


106 #ifde‡
__USE_ISOC99


107 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

108 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

109 #ifde‡
__REDIRECT_NTH


110 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

111 
__∆dbl_√xâow¨df
)

112 
	`__©åibuã__
 ((
__c⁄°__
));

113 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

114 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

115 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

116 (
__x
, 
__y
),

117 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

122 #i‡
deföed
 
__LDBL_COMPAT
 || deföed 
__NO_LONG_DOUBLE_MATH


124 #unde‡
__MATHDECL_1


125 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

126 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

127 
¨gs
, 
Æüs
)

	)

128 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

129 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

134 #i‚de‡
_Ml⁄g_doubÀ_


135 
	#_Ml⁄g_doubÀ_
 

	)

137 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

138 #ifde‡
__STDC__


139 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

141 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

143 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

144 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

145 
	~<bôs/m©hˇŒs.h
>

146 #unde‡
_MdoubÀ_


147 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


148 #unde‡
_MdoubÀ_END_NAMESPACE


149 #unde‡
__MATH_PRECNAME


154 #unde‡
__MATHDECL_1


155 #unde‡
__MATHDECL


156 #unde‡
__MATHCALL


159 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


161 
signgam
;

166 #ifde‡
__USE_ISOC99


204 
FP_NAN
,

205 
	#FP_NAN
 
FP_NAN


	)

206 
FP_INFINITE
,

207 
	#FP_INFINITE
 
FP_INFINITE


	)

208 
FP_ZERO
,

209 
	#FP_ZERO
 
FP_ZERO


	)

210 
FP_SUBNORMAL
,

211 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

212 
FP_NORMAL


213 
	#FP_NORMAL
 
FP_NORMAL


	)

217 #ifde‡
__NO_LONG_DOUBLE_MATH


218 
	#Â˛assify
(
x
) \

219 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

221 
	#Â˛assify
(
x
) \

222 ( (
x
) ==  () \

223 ? 
	`__Â˛assifyf
 (
x
) \

224 :  (
x
) ==  () \

225 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

229 #ifde‡
__NO_LONG_DOUBLE_MATH


230 
	#signbô
(
x
) \

231 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

233 
	#signbô
(
x
) \

234 ( (
x
) ==  () \

235 ? 
	`__signbôf
 (
x
) \

236 :  (
x
) ==  () \

237 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

241 #ifde‡
__NO_LONG_DOUBLE_MATH


242 
	#isföôe
(
x
) \

243 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

245 
	#isföôe
(
x
) \

246 ( (
x
) ==  () \

247 ? 
	`__föôef
 (
x
) \

248 :  (
x
) ==  () \

249 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

253 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

257 #ifde‡
__NO_LONG_DOUBLE_MATH


258 
	#i¢™
(
x
) \

259 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

261 
	#i¢™
(
x
) \

262 ( (
x
) ==  () \

263 ? 
	`__i¢™f
 (
x
) \

264 :  (
x
) ==  () \

265 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

269 #ifde‡
__NO_LONG_DOUBLE_MATH


270 
	#isöf
(
x
) \

271 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

273 
	#isöf
(
x
) \

274 ( (
x
) ==  () \

275 ? 
	`__isöff
 (
x
) \

276 :  (
x
) ==  () \

277 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

281 
	#MATH_ERRNO
 1

	)

282 
	#MATH_ERREXCEPT
 2

	)

287 #i‚de‡
__FAST_MATH__


288 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

293 #ifdef 
__USE_MISC


297 
_IEEE_
 = -1,

298 
_SVID_
,

299 
_XOPEN_
,

300 
_POSIX_
,

301 
_ISOC_


302 } 
	t_LIB_VERSION_TYPE
;

307 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

311 #ifde‡
__USE_SVID


317 #ifde‡
__˝lu•lus


318 
__ex˚±i⁄


320 
ex˚±i⁄


323 
ty≥
;

324 *
«me
;

325 
¨g1
;

326 
¨g2
;

327 
ªtvÆ
;

328 
	}
};

330 #ifde‡
__˝lu•lus


331 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

333 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

336 
	#X_TLOSS
 1.41484755040568800000e+16

	)

339 
	#DOMAIN
 1

	)

340 
	#SING
 2

	)

341 
	#OVERFLOW
 3

	)

342 
	#UNDERFLOW
 4

	)

343 
	#TLOSS
 5

	)

344 
	#PLOSS
 6

	)

347 
	#HUGE
 3.40282347e+38F

	)

351 #ifde‡
__USE_XOPEN


353 
	#MAXFLOAT
 3.40282347e+38F

	)

360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


361 
	#M_E
 2.7182818284590452354

	)

362 
	#M_LOG2E
 1.4426950408889634074

	)

363 
	#M_LOG10E
 0.43429448190325182765

	)

364 
	#M_LN2
 0.69314718055994530942

	)

365 
	#M_LN10
 2.30258509299404568402

	)

366 
	#M_PI
 3.14159265358979323846

	)

367 
	#M_PI_2
 1.57079632679489661923

	)

368 
	#M_PI_4
 0.78539816339744830962

	)

369 
	#M_1_PI
 0.31830988618379067154

	)

370 
	#M_2_PI
 0.63661977236758134308

	)

371 
	#M_2_SQRTPI
 1.12837916709551257390

	)

372 
	#M_SQRT2
 1.41421356237309504880

	)

373 
	#M_SQRT1_2
 0.70710678118654752440

	)

379 #ifde‡
__USE_GNU


380 
	#M_El
 2.7182818284590452353602874713526625L

	)

381 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

382 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

383 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

384 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

385 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

386 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

387 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

388 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

389 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

390 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

391 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

392 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

399 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


400 
	#__NO_MATH_INLINES
 1

	)

403 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

410 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

411 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

412 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

413 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

414 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

415 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

419 #ifde‡
__USE_EXTERN_INLINES


420 
	~<bôs/m©hölöe.h
>

423 #ifde‡
__USE_ISOC99


427 #i‚de‡
isgª©î


428 
	#isgª©î
(
x
, 
y
) \

429 (
__exãnsi⁄__
 \

430 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

431 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

435 #i‚de‡
isgª©îequÆ


436 
	#isgª©îequÆ
(
x
, 
y
) \

437 (
__exãnsi⁄__
 \

438 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

439 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

443 #i‚de‡
i¶ess


444 
	#i¶ess
(
x
, 
y
) \

445 (
__exãnsi⁄__
 \

446 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

447 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

451 #i‚de‡
i¶es£quÆ


452 
	#i¶es£quÆ
(
x
, 
y
) \

453 (
__exãnsi⁄__
 \

454 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

455 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

459 #i‚de‡
i¶essgª©î


460 
	#i¶essgª©î
(
x
, 
y
) \

461 (
__exãnsi⁄__
 \

462 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

463 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

467 #i‚de‡
isun‹dîed


468 
	#isun‹dîed
(
u
, 
v
) \

469 (
__exãnsi⁄__
 \

470 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

471 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

476 
	g__END_DECLS


	@/usr/include/memory.h

23 #i‚def 
_MEMORY_H


24 
	#_MEMORY_H
 1

	)

26 
	~<„©uªs.h
>

29 #i‚def 
_STRING_H


30 
	~<°rög.h
>

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_XOPEN2K


70 
	mPTHREAD_MUTEX_STALLED
,

71 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

72 
	mPTHREAD_MUTEX_ROBUST
,

73 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


78 #ifde‡
__USE_UNIX98


82 
	mPTHREAD_PRIO_NONE
,

83 
	mPTHREAD_PRIO_INHERIT
,

84 
	mPTHREAD_PRIO_PROTECT


90 #i‡
__WORDSIZE
 == 64

91 
	#PTHREAD_MUTEX_INITIALIZER
 \

92 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

93 #ifde‡
__USE_GNU


94 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

102 
	#PTHREAD_MUTEX_INITIALIZER
 \

103 { { 0, 0, 0, 0, 0, { 0 } } }

	)

104 #ifde‡
__USE_GNU


105 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

109 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

110 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


119 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

120 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

121 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

122 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


126 
	#PTHREAD_RWLOCK_INITIALIZER
 \

127 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

128 #ifde‡
__USE_GNU


129 #i‡
__WORDSIZE
 == 64

130 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

132 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

134 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

136 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

137 0, 0, 0, 0 } }

	)

139 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

140 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

141 0 } }

	)

151 
	mPTHREAD_INHERIT_SCHED
,

152 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

153 
	mPTHREAD_EXPLICIT_SCHED


154 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

161 
	mPTHREAD_SCOPE_SYSTEM
,

162 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

163 
	mPTHREAD_SCOPE_PROCESS


164 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

171 
	mPTHREAD_PROCESS_PRIVATE
,

172 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

173 
	mPTHREAD_PROCESS_SHARED


174 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

180 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

184 
	s_±hªad_˛ónup_buf„r


186 (*
	m__routöe
) (*);

187 *
	m__¨g
;

188 
	m__ˇn˚…y≥
;

189 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

195 
	mPTHREAD_CANCEL_ENABLE
,

196 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

197 
	mPTHREAD_CANCEL_DISABLE


198 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

202 
	mPTHREAD_CANCEL_DEFERRED
,

203 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

204 
	mPTHREAD_CANCEL_ASYNCHRONOUS


205 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

207 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

211 
	#PTHREAD_ONCE_INIT
 0

	)

214 #ifde‡
__USE_XOPEN2K


218 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

222 
__BEGIN_DECLS


227 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

228 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

229 *(*
__°¨t_routöe
) (*),

230 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

236 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

244 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

246 #ifde‡
__USE_GNU


249 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

257 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

258 
__c⁄°
 
time•ec
 *
__ab°ime
);

265 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

269 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

272 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

280 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

283 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

288 *
__dëach°©e
)

289 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

292 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

293 
__dëach°©e
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

299 
size_t
 *
__gu¨dsize
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

303 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

304 
size_t
 
__gu¨dsize
)

305 
__THROW
 
	`__n⁄nuŒ
 ((1));

309 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


310 
__©å
,

311 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

315 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


317 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


321 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1));

329 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


330 
__©å
, *
__ª°ri˘
 
__öhîô
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

334 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

335 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1));

340 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

341 *
__ª°ri˘
 
__sc›e
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

345 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


350 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

357 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

358 *
__°ackaddr
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


363 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

370 
size_t
 
__°acksize
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1));

373 #ifde‡
__USE_XOPEN2K


375 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

376 **
__ª°ri˘
 
__°ackaddr
,

377 
size_t
 *
__ª°ri˘
 
__°acksize
)

378 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

383 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

384 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

387 #ifde‡
__USE_GNU


390 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

391 
size_t
 
__˝u£tsize
,

392 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

397 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

398 
size_t
 
__˝u£tsize
,

399 
˝u_£t_t
 *
__˝u£t
)

400 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

406 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

407 
__THROW
 
	`__n⁄nuŒ
 ((2));

415 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

416 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

417 
__THROW
 
	`__n⁄nuŒ
 ((3));

420 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

421 *
__ª°ri˘
 
__pﬁicy
,

422 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

423 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

426 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

427 
__THROW
;

430 #ifde‡
__USE_UNIX98


432 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

435 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

438 #ifde‡
__USE_GNU


443 
	$±hªad_yõld
 (Ë
__THROW
;

448 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

449 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

450 
__THROW
 
	`__n⁄nuŒ
 ((3));

453 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

454 
˝u_£t_t
 *
__˝u£t
)

455 
__THROW
 
	`__n⁄nuŒ
 ((3));

468 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

469 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

480 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

484 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

487 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

492 
	`±hªad_ã°ˇn˚l
 ();

501 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

502 
__mask_was_ßved
;

503 } 
__ˇn˚l_jmp_buf
[1];

504 *
__∑d
[4];

505 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

508 #i‚de‡
__˛ónup_f˘_©åibuã


509 
	#__˛ónup_f˘_©åibuã


	)

514 
	s__±hªad_˛ónup_‰ame


516 (*
__ˇn˚l_routöe
) (*);

517 *
__ˇn˚l_¨g
;

518 
__do_ô
;

519 
__ˇn˚l_ty≥
;

522 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


523 #ifde‡
__˝lu•lus


525 ˛as†
	c__±hªad_˛ónup_˛ass


527 (*
__ˇn˚l_routöe
) (*);

528 *
__ˇn˚l_¨g
;

529 
__do_ô
;

530 
__ˇn˚l_ty≥
;

532 
public
:

533 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

534 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

535 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

536 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

537 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

538 &
__ˇn˚l_ty≥
); 
	}
}

539 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

549 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

551 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

555 
	#±hªad_˛ónup_p›
(
execuã
) \

556 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

557 } 0)

	)

559 #ifde‡
__USE_GNU


563 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

565 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

566 
__˛‰ame
.
	`__de„r
 ()

	)

571 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

572 
__˛‰ame
.
	`__ª°‹e
 (); \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

581 
__exã∫_ölöe
 

582 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

584 i‡(
__‰ame
->
__do_ô
)

585 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

586 
	}
}

595 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

597 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

598 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

599 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

600 .
__do_ô
 = 1 };

	)

604 
	#±hªad_˛ónup_p›
(
execuã
) \

605 
__˛‰ame
.
__do_ô
 = (
execuã
); \

606 } 0)

	)

608 #ifde‡
__USE_GNU


612 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 }; \

618 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

619 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

624 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

625 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

626 
__˛‰ame
.
__do_ô
 = (
execuã
); \

627 } 0)

	)

638 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

640 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

641 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

642 *
__ˇn˚l_¨g
 = (
¨g
); \

643 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

644 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

645 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

647 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

648 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

652 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

653 dÿ{

	)

654 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

655 
__˛ónup_f˘_©åibuã
;

659 
	#±hªad_˛ónup_p›
(
execuã
) \

662 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 i‡(
execuã
) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 } 0)

	)

666 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

667 
__˛ónup_f˘_©åibuã
;

669 #ifde‡
__USE_GNU


673 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

675 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

676 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

677 *
__ˇn˚l_¨g
 = (
¨g
); \

678 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

679 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

680 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

682 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

683 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

687 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

688 dÿ{

	)

689 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

690 
__˛ónup_f˘_©åibuã
;

695 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

698 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

699 i‡(
execuã
) \

700 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

701 
	}
} 0)

	)

702 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

703 
__˛ónup_f˘_©åibuã
;

707 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

708 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

709 #i‚de‡
SHARED


710 
	`__©åibuã__
 ((
__wók__
))

716 
__jmp_buf_èg
;

717 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

723 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

724 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

732 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

733 
__THROW
 
	`__n⁄nuŒ
 ((1));

736 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

737 
__THROW
 
	`__n⁄nuŒ
 ((1));

739 #ifde‡
__USE_XOPEN2K


741 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

742 
__c⁄°
 
time•ec
 *
__ª°ri˘


743 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

747 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

748 
__THROW
 
	`__n⁄nuŒ
 ((1));

751 #ifde‡
__USE_UNIX98


753 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

754 
__ª°ri˘
 
__muãx
,

755 *
__ª°ri˘
 
__¥io˚ûög
)

756 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

760 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

761 
__¥io˚ûög
,

762 *
__ª°ri˘
 
__ﬁd_˚ûög
)

763 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

767 #ifde‡
__USE_XOPEN2K8


769 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1));

771 #ifde‡
__USE_GNU


772 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

773 
__THROW
 
	`__n⁄nuŒ
 ((1));

782 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

783 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

791 
__ª°ri˘
 
__©å
,

792 *
__ª°ri˘
 
__psh¨ed
)

793 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

797 
__psh¨ed
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

800 #ifde‡
__USE_UNIX98


802 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


803 
__©å
, *
__ª°ri˘
 
__köd
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

809 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1));

813 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

814 
__ª°ri˘
 
__©å
,

815 *
__ª°ri˘
 
__¥Ÿocﬁ
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__¥Ÿocﬁ
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__¥io˚ûög
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__¥io˚ûög
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

836 #ifde‡
__USE_XOPEN2K


838 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

839 *
__robu°√ss
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

841 #ifde‡
__USE_GNU


842 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

843 *
__robu°√ss
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

848 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

849 
__robu°√ss
)

850 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_GNU


852 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

853 
__robu°√ss
)

854 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


864 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

865 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


866 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

870 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

880 #ifde‡
__USE_XOPEN2K


882 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

883 
__c⁄°
 
time•ec
 *
__ª°ri˘


884 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

888 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 
__c⁄°
 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROW
 
	`__n⁄nuŒ
 ((1));

910 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

911 
__THROW
 
	`__n⁄nuŒ
 ((1));

914 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

915 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

919 
__ª°ri˘
 
__©å
,

920 *
__ª°ri˘
 
__psh¨ed
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

924 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

925 
__psh¨ed
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

930 
__ª°ri˘
 
__©å
,

931 *
__ª°ri˘
 
__¥ef
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

935 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

936 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

945 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


946 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

954 
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

966 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

967 
	`__n⁄nuŒ
 ((1, 2));

976 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

977 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

978 
__c⁄°
 
time•ec
 *
__ª°ri˘


979 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

984 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

989 
__THROW
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

993 
__ª°ri˘
 
__©å
,

994 *
__ª°ri˘
 
__psh¨ed
)

995 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

998 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

999 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1001 #ifde‡
__USE_XOPEN2K


1003 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1004 
__ª°ri˘
 
__©å
,

1005 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1009 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1010 
__˛ockid_t
 
__˛ock_id
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1015 #ifde‡
__USE_XOPEN2K


1020 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1024 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1045 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1046 
__©å
, 
__cou¡
)

1047 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1051 
__THROW
 
	`__n⁄nuŒ
 ((1));

1054 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1064 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1068 
__ª°ri˘
 
__©å
,

1069 *
__ª°ri˘
 
__psh¨ed
)

1070 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1073 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1074 
__psh¨ed
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1088 (*
__de°r_fun˘i⁄
) (*))

1089 
__THROW
 
	`__n⁄nuŒ
 ((1));

1092 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1095 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1098 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1099 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1102 #ifde‡
__USE_XOPEN2K


1104 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1105 
__˛ockid_t
 *
__˛ock_id
)

1106 
__THROW
 
	`__n⁄nuŒ
 ((2));

1121 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1122 (*
__∑ª¡
) (),

1123 (*
__chûd
Ë()Ë
__THROW
;

1126 #ifde‡
__USE_EXTERN_INLINES


1128 
__exã∫_ölöe
 

1129 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1131  
__thªad1
 =
__thªad2
;

1132 
	}
}

1135 
	g__END_DECLS


	@/usr/include/semaphore.h

19 #i‚de‡
_SEMAPHORE_H


20 
	#_SEMAPHORE_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sys/ty≥s.h
>

24 #ifde‡
__USE_XOPEN2K


25 
	#__√ed_time•ec


	)

26 
	~<time.h
>

30 
	~<bôs/£m≠h‹e.h
>

33 
__BEGIN_DECLS


37 
	$£m_öô
 (
£m_t
 *
__£m
, 
__psh¨ed
, 
__vÆue
)

38 
__THROW
;

40 
	$£m_de°roy
 (
£m_t
 *
__£m
Ë
__THROW
;

43 
£m_t
 *
	$£m_›í
 (
__c⁄°
 *
__«me
, 
__oÊag
, ...Ë
__THROW
;

46 
	$£m_˛o£
 (
£m_t
 *
__£m
Ë
__THROW
;

49 
	$£m_u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
;

55 
	`£m_waô
 (
£m_t
 *
__£m
);

57 #ifde‡
__USE_XOPEN2K


62 
	`£m_timedwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

63 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__ab°ime
);

67 
	$£m_åywaô
 (
£m_t
 *
__£m
Ë
__THROW
;

70 
	$£m_po°
 (
£m_t
 *
__£m
Ë
__THROW
;

73 
	$£m_gëvÆue
 (
£m_t
 *
__ª°ri˘
 
__£m
, *__ª°ri˘ 
__svÆ
)

74 
__THROW
;

77 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 #ifde‡
__USE_XOPEN2K8


296 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

297 
__THROW
 
__wur
;

302 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

306 
__BEGIN_NAMESPACE_STD


309 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

313 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

314 
__modes
, 
size_t
 
__n
Ë
__THROW
;

315 
__END_NAMESPACE_STD


317 #ifdef 
__USE_BSD


320 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

321 
size_t
 
__size
Ë
__THROW
;

324 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

328 
__BEGIN_NAMESPACE_STD


333 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

334 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

341 
	$•rötf
 (*
__ª°ri˘
 
__s
,

342 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

348 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

349 
_G_va_li°
 
__¨g
);

354 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

356 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

357 
_G_va_li°
 
__¨g
Ë
__THROW
;

358 
__END_NAMESPACE_STD


360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


361 
__BEGIN_NAMESPACE_C99


363 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

365 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

367 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

368 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

369 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

370 
__END_NAMESPACE_C99


373 #ifde‡
__USE_GNU


376 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

377 
_G_va_li°
 
__¨g
)

378 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

379 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

380 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

381 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

382 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

383 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

384 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

387 #ifde‡
__USE_XOPEN2K8


394 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

395 
_G_va_li°
 
__¨g
)

396 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

397 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

398 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

402 
__BEGIN_NAMESPACE_STD


407 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

413 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

415 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

416 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

418 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

419 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

420 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

421 #ifde‡
__REDIRECT


425 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

427 
__isoc99_fsˇnf
Ë
__wur
;

428 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

429 
__isoc99_sˇnf
Ë
__wur
;

430 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

432 
__isoc99_ssˇnf
Ë
__THROW
;

434 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

435 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

436 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

439 
	#fsˇnf
 
__isoc99_fsˇnf


	)

440 
	#sˇnf
 
__isoc99_sˇnf


	)

441 
	#ssˇnf
 
__isoc99_ssˇnf


	)

445 
__END_NAMESPACE_STD


447 #ifdef 
__USE_ISOC99


448 
__BEGIN_NAMESPACE_C99


453 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

454 
_G_va_li°
 
__¨g
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

461 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

462 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

465 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

466 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

467 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

469 #i‡!
deföed
 
__USE_GNU
 \

470 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

471 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

472 #ifde‡
__REDIRECT


476 
	`__REDIRECT
 (
vfsˇnf
,

477 (
FILE
 *
__ª°ri˘
 
__s
,

478 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

479 
__isoc99_vfsˇnf
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

482 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

483 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

484 
	`__REDIRECT
 (
vssˇnf
,

485 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

487 
__isoc99_vssˇnf
)

488 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

490 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

491 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

492 
_G_va_li°
 
__¨g
Ë
__wur
;

493 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

494 
_G_va_li°
 
__¨g
Ë
__wur
;

495 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

496 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

497 
_G_va_li°
 
__¨g
Ë
__THROW
;

498 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

499 
	#vsˇnf
 
__isoc99_vsˇnf


	)

500 
	#vssˇnf
 
__isoc99_vssˇnf


	)

504 
__END_NAMESPACE_C99


508 
__BEGIN_NAMESPACE_STD


513 
	`fgëc
 (
FILE
 *
__°ªam
);

514 
	`gëc
 (
FILE
 *
__°ªam
);

520 
	`gëch¨
 ();

521 
__END_NAMESPACE_STD


525 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

527 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


532 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

533 
	`gëch¨_u∆ocked
 ();

536 #ifde‡
__USE_MISC


543 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

547 
__BEGIN_NAMESPACE_STD


555 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

556 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

562 
	`putch¨
 (
__c
);

563 
__END_NAMESPACE_STD


567 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

569 #ifde‡
__USE_MISC


576 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

579 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


584 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

585 
	`putch¨_u∆ocked
 (
__c
);

589 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

590 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

592 
	`gëw
 (
FILE
 *
__°ªam
);

595 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

599 
__BEGIN_NAMESPACE_STD


604 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

605 
__wur
;

612 *
	$gës
 (*
__s
Ë
__wur
;

613 
__END_NAMESPACE_STD


615 #ifde‡
__USE_GNU


622 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

623 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

627 #ifdef 
__USE_XOPEN2K8


638 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

639 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

640 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

641 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

642 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

652 
size_t
 *
__ª°ri˘
 
__n
,

653 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

657 
__BEGIN_NAMESPACE_STD


662 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

668 
	`puts
 (
__c⁄°
 *
__s
);

675 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

682 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

683 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

688 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

689 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

690 
__END_NAMESPACE_STD


692 #ifde‡
__USE_GNU


699 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

700 
FILE
 *
__ª°ri˘
 
__°ªam
);

703 #ifde‡
__USE_MISC


710 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

717 
__BEGIN_NAMESPACE_STD


722 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

727 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

732 
	`ªwöd
 (
FILE
 *
__°ªam
);

733 
__END_NAMESPACE_STD


740 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


741 #i‚de‡
__USE_FILE_OFFSET64


746 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

751 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

753 #ifde‡
__REDIRECT


754 
	`__REDIRECT
 (
f£eko
,

755 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

756 
f£eko64
);

757 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

759 
	#f£eko
 
f£eko64


	)

760 
	#·ñlo
 
·ñlo64


	)

765 
__BEGIN_NAMESPACE_STD


766 #i‚de‡
__USE_FILE_OFFSET64


771 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

776 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

778 #ifde‡
__REDIRECT


779 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

780 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

781 
	`__REDIRECT
 (
f£ços
,

782 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

784 
	#fgëpos
 
fgëpos64


	)

785 
	#f£ços
 
f£ços64


	)

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_LARGEFILE64


791 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

792 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

793 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

794 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

797 
__BEGIN_NAMESPACE_STD


799 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

801 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

803 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

804 
__END_NAMESPACE_STD


806 #ifde‡
__USE_MISC


808 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

809 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

814 
__BEGIN_NAMESPACE_STD


819 
	`≥º‹
 (
__c⁄°
 *
__s
);

820 
__END_NAMESPACE_STD


826 
	~<bôs/sys_îæi°.h
>

829 #ifdef 
__USE_POSIX


831 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 #ifde‡
__USE_MISC


836 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

840 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

841 
deföed
 
__USE_MISC
)

846 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

852 
	`p˛o£
 (
FILE
 *
__°ªam
);

856 #ifdef 
__USE_POSIX


858 *
	$˘îmid
 (*
__s
Ë
__THROW
;

862 #ifde‡
__USE_XOPEN


864 *
	`cu£rid
 (*
__s
);

868 #ifdef 
__USE_GNU


869 
ob°ack
;

872 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

873 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

875 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

876 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

877 
_G_va_li°
 
__¨gs
)

878 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

882 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


886 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

890 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

893 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

896 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


900 
	#__√ed_gë›t


	)

901 
	~<gë›t.h
>

906 #ifde‡
__USE_EXTERN_INLINES


907 
	~<bôs/°dio.h
>

909 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


910 
	~<bôs/°dio2.h
>

912 #ifde‡
__LDBL_COMPAT


913 
	~<bôs/°dio-ldbl.h
>

916 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

519 #ifde‡
__USE_GNU


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #ifde‡
__USE_GNU


551 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

553 
__END_NAMESPACE_STD


555 #ifde‡
__USE_ISOC99


556 
__BEGIN_NAMESPACE_C99


559 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

560 
__END_NAMESPACE_C99


564 
__BEGIN_NAMESPACE_STD


566 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

567 
__END_NAMESPACE_STD


571 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


604 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

614 #i‚de‡
__USE_FILE_OFFSET64


615 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__REDIRECT


618 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

619 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 
	#mk°emp
 
mk°emp64


	)

624 #ifde‡
__USE_LARGEFILE64


625 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

629 #ifde‡
__USE_MISC


636 #i‚de‡
__USE_FILE_OFFSET64


637 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

639 #ifde‡
__REDIRECT


640 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

641 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 
	#mk°emps
 
mk°emps64


	)

646 #ifde‡
__USE_LARGEFILE64


647 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

648 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

652 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


658 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 #ifde‡
__USE_GNU


668 #i‚de‡
__USE_FILE_OFFSET64


669 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

671 #ifde‡
__REDIRECT


672 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

673 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 
	#mko°emp
 
mko°emp64


	)

678 #ifde‡
__USE_LARGEFILE64


679 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

688 #i‚de‡
__USE_FILE_OFFSET64


689 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

690 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #ifde‡
__REDIRECT


693 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

694 
__Êags
), 
mko°emps64
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 
	#mko°emps
 
mko°emps64


	)

700 #ifde‡
__USE_LARGEFILE64


701 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

702 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

707 
__BEGIN_NAMESPACE_STD


712 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

713 
__END_NAMESPACE_STD


716 #ifdef 
__USE_GNU


719 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

720 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


729 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

730 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

735 #i‚de‡
__COMPAR_FN_T


736 
	#__COMPAR_FN_T


	)

737 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

739 #ifdef 
__USE_GNU


740 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

743 #ifde‡
__USE_GNU


744 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

747 
__BEGIN_NAMESPACE_STD


750 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

751 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

752 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

756 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

757 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

758 #ifde‡
__USE_GNU


759 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

760 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

761 
	`__n⁄nuŒ
 ((1, 4));

766 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

767 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

768 
__END_NAMESPACE_STD


770 #ifde‡
__USE_ISOC99


771 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

772 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__BEGIN_NAMESPACE_STD


780 
div_t
 
	$div
 (
__numî
, 
__díom
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

782 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

783 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__END_NAMESPACE_STD


786 #ifde‡
__USE_ISOC99


787 
__BEGIN_NAMESPACE_C99


788 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

789 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
__END_NAMESPACE_C99


795 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


802 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

803 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

808 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

815 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

818 #ifde‡
__USE_MISC


820 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

821 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

822 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

824 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

826 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

832 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

833 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

834 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

835 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

836 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

837 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

839 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

840 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

841 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

842 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

843 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

844 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

845 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

846 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

851 
__BEGIN_NAMESPACE_STD


854 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

857 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

858 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

861 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

865 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

866 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

868 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

869 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

870 
__THROW
;

871 
__END_NAMESPACE_STD


874 #ifde‡
__USE_SVID


879 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 #ifde‡
__USE_XOPEN_EXTENDED


890 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

891 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

892 **
__ª°ri˘
 
__vÆuï
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

897 #ifde‡
__USE_XOPEN


899 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #ifde‡
__USE_XOPEN2K


907 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

910 #ifde‡
__USE_XOPEN


915 
	$gø¡±
 (
__fd
Ë
__THROW
;

919 
	$u∆ock±
 (
__fd
Ë
__THROW
;

924 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

927 #ifde‡
__USE_GNU


931 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

932 
__THROW
 
	`__n⁄nuŒ
 ((2));

935 
	`gë±
 ();

938 #ifde‡
__USE_BSD


942 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

943 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


949 
	~<bôs/°dlib.h
>

951 #ifde‡
__LDBL_COMPAT


952 
	~<bôs/°dlib-ldbl.h
>

956 #unde‡
__√ed_mÆloc_™d_ˇŒoc


958 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

37 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

41 
__BEGIN_NAMESPACE_STD


43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

44 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

45 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

49 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 
__END_NAMESPACE_STD


55 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


56 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
__c
, 
size_t
 
__n
)

58 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

62 
__BEGIN_NAMESPACE_STD


64 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

67 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

68 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

71 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


74 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__OPTIMIZE__


80 
__exã∫_Æways_ölöe
 *

81 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


83  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

86 
__exã∫_Æways_ölöe
 
__c⁄°
 *

87 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


89  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

92 
	}
}

94 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

95 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

97 
__END_NAMESPACE_STD


99 #ifde‡
__USE_GNU


102 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


103 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

105 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

108 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

113 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


114 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

116 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

119 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

120 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 
__BEGIN_NAMESPACE_STD


127 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

131 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

132 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

135 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

138 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

139 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

142 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

143 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

145 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

149 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

150 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

152 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

153 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((2));

155 
__END_NAMESPACE_STD


157 #ifde‡
__USE_XOPEN2K8


161 
	~<xloˇÀ.h
>

164 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

165 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

167 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

168 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

171 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


173 *
	$°rdup
 (
__c⁄°
 *
__s
)

174 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

180 #i‡
deföed
 
__USE_XOPEN2K8


181 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

182 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

185 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


187 
	#°rdu∑
(
s
) \

188 (
__exãnsi⁄__
 \

190 
__c⁄°
 *
__ﬁd
 = (
s
); \

191 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

192 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

193 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

194 
	}
}))

	)

197 
	#°∫du∑
(
s
, 
n
) \

198 (
__exãnsi⁄__
 \

200 
__c⁄°
 *
__ﬁd
 = (
s
); \

201 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

202 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

203 
__√w
[
__Àn
] = '\0'; \

204 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

205 }))

	)

208 
	g__BEGIN_NAMESPACE_STD


210 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


213 *
°rchr
 (*
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

215 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 #ifde‡
__OPTIMIZE__


219 
__exã∫_Æways_ölöe
 *

220 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


222  
__buûtö_°rchr
 (
__s
, 
__c
);

225 
__exã∫_Æways_ölöe
 
__c⁄°
 *

226 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


228  
__buûtö_°rchr
 (
__s
, 
__c
);

233 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

234 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


240 *
	`°ºchr
 (*
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

242 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 #ifde‡
__OPTIMIZE__


246 
__exã∫_Æways_ölöe
 *

247 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


249  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

252 
__exã∫_Æways_ölöe
 
__c⁄°
 *

253 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


255  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

258 
	}
}

260 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

261 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 
__END_NAMESPACE_STD


265 #ifde‡
__USE_GNU


268 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


269 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

271 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

275 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

279 
__BEGIN_NAMESPACE_STD


282 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

283 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

286 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


292 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

294 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 #ifde‡
__OPTIMIZE__


298 
__exã∫_Æways_ölöe
 *

299 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


301  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

304 
__exã∫_Æways_ölöe
 
__c⁄°
 *

305 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


307  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

310 
	}
}

312 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

313 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

316 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


319 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

321 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

322 
__c⁄°
 *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

325 #ifde‡
__OPTIMIZE__


326 
__exã∫_Æways_ölöe
 *

327 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


329  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

332 
__exã∫_Æways_ölöe
 
__c⁄°
 *

333 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


335  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

338 
	}
}

340 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

347 
__THROW
 
	`__n⁄nuŒ
 ((2));

348 
__END_NAMESPACE_STD


352 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

353 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

354 **
__ª°ri˘
 
__ßve_±r
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

356 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


357 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

358 **
__ª°ri˘
 
__ßve_±r
)

359 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

362 #ifde‡
__USE_GNU


364 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


365 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

367 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

368 
__c⁄°
 *
__√edÀ
)

369 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

371 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

372 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 #ifde‡
__USE_GNU


380 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

381 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

386 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

387 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

389 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

390 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

395 
__BEGIN_NAMESPACE_STD


397 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

399 
__END_NAMESPACE_STD


401 #ifdef 
__USE_XOPEN2K8


404 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

405 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

409 
__BEGIN_NAMESPACE_STD


411 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

412 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


421 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


424 #ifde‡
__REDIRECT_NTH


425 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

426 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

427 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

429 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

430 
__THROW
 
	`__n⁄nuŒ
 ((2));

431 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

436 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 #ifde‡
__USE_XOPEN2K8


443 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

449 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

451 #ifde‡
__USE_BSD


453 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

454 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

460 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

461 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

464 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


467 *
	`ödex
 (*
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

472 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


473 
__exã∫_Æways_ölöe
 *

474 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


476  
	`__buûtö_ödex
 (
__s
, 
__c
);

479 
__exã∫_Æways_ölöe
 
__c⁄°
 *

480 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


482  
	`__buûtö_ödex
 (
__s
, 
__c
);

485 
	}
}

487 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

488 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

492 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


495 *
	`rödex
 (*
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

500 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


501 
__exã∫_Æways_ölöe
 *

502 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


504  
	`__buûtö_rödex
 (
__s
, 
__c
);

507 
__exã∫_Æways_ölöe
 
__c⁄°
 *

508 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


510  
	`__buûtö_rödex
 (
__s
, 
__c
);

513 
	}
}

515 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

516 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

521 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifdef 
__USE_GNU


526 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifde‡
__GNUC__


528 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

529 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/X11/X.h

3 #i‚de‡
X_H


4 
	#X_H


	)

53 
	#X_PROTOCOL
 11

	)

54 
	#X_PROTOCOL_REVISION
 0

	)

63 #i‚de‡
_XSERVER64


64 #i‚de‡
_XTYPEDEF_XID


65 
	#_XTYPEDEF_XID


	)

66 
	tXID
;

68 #i‚de‡
_XTYPEDEF_MASK


69 
	#_XTYPEDEF_MASK


	)

70 
	tMask
;

72 #i‚de‡
_XTYPEDEF_ATOM


73 
	#_XTYPEDEF_ATOM


	)

74 
	tAtom
;

76 
	tVisuÆID
;

77 
	tTime
;

79 
	~<X11/Xmd.h
>

80 #i‚de‡
_XTYPEDEF_XID


81 
	#_XTYPEDEF_XID


	)

82 
CARD32
 
	tXID
;

84 #i‚de‡
_XTYPEDEF_MASK


85 
	#_XTYPEDEF_MASK


	)

86 
CARD32
 
	tMask
;

88 #i‚de‡
_XTYPEDEF_ATOM


89 
	#_XTYPEDEF_ATOM


	)

90 
CARD32
 
	tAtom
;

92 
CARD32
 
	tVisuÆID
;

93 
CARD32
 
	tTime
;

96 
XID
 
	tWödow
;

97 
XID
 
	tDøwabÀ
;

98 #i‚de‡
_XTYPEDEF_FONT


99 
	#_XTYPEDEF_FONT


	)

100 
XID
 
	tF⁄t
;

102 
XID
 
	tPixm≠
;

103 
XID
 
	tCurs‹
;

104 
XID
 
	tCﬁ‹m≠
;

105 
XID
 
	tGC⁄ãxt
;

106 
XID
 
	tKeySym
;

108 
	tKeyCode
;

114 #i‚de‡
N⁄e


115 
	#N⁄e
 0L

	)

118 
	#P¨ítRñ©ive
 1L

	)

121 
	#C›yFromP¨ít
 0L

	)

126 
	#PoöãrWödow
 0L

	)

127 
	#I≈utFocus
 1L

	)

129 
	#PoöãrRoŸ
 1L

	)

131 
	#AnyPr›îtyTy≥
 0L

	)

133 
	#AnyKey
 0L

	)

135 
	#AnyBuâ⁄
 0L

	)

137 
	#AŒTemp‹¨y
 0L

	)

139 
	#CuºítTime
 0L

	)

141 
	#NoSymbﬁ
 0L

	)

150 
	#NoEvítMask
 0L

	)

151 
	#KeyPªssMask
 (1L<<0)

	)

152 
	#KeyRñó£Mask
 (1L<<1)

	)

153 
	#Buâ⁄PªssMask
 (1L<<2)

	)

154 
	#Buâ⁄Rñó£Mask
 (1L<<3)

	)

155 
	#E¡îWödowMask
 (1L<<4)

	)

156 
	#LóveWödowMask
 (1L<<5)

	)

157 
	#PoöãrMŸi⁄Mask
 (1L<<6)

	)

158 
	#PoöãrMŸi⁄HötMask
 (1L<<7)

	)

159 
	#Buâ⁄1MŸi⁄Mask
 (1L<<8)

	)

160 
	#Buâ⁄2MŸi⁄Mask
 (1L<<9)

	)

161 
	#Buâ⁄3MŸi⁄Mask
 (1L<<10)

	)

162 
	#Buâ⁄4MŸi⁄Mask
 (1L<<11)

	)

163 
	#Buâ⁄5MŸi⁄Mask
 (1L<<12)

	)

164 
	#Buâ⁄MŸi⁄Mask
 (1L<<13)

	)

165 
	#Keym≠SèãMask
 (1L<<14)

	)

166 
	#ExposuªMask
 (1L<<15)

	)

167 
	#VisibûôyCh™geMask
 (1L<<16)

	)

168 
	#Såu˘uªNŸifyMask
 (1L<<17)

	)

169 
	#ResizeRedúe˘Mask
 (1L<<18)

	)

170 
	#Sub°ru˘uªNŸifyMask
 (1L<<19)

	)

171 
	#Sub°ru˘uªRedúe˘Mask
 (1L<<20)

	)

172 
	#FocusCh™geMask
 (1L<<21)

	)

173 
	#Pr›îtyCh™geMask
 (1L<<22)

	)

174 
	#Cﬁ‹m≠Ch™geMask
 (1L<<23)

	)

175 
	#Ow√rGøbBuâ⁄Mask
 (1L<<24)

	)

181 
	#KeyPªss
 2

	)

182 
	#KeyRñó£
 3

	)

183 
	#Buâ⁄Pªss
 4

	)

184 
	#Buâ⁄Rñó£
 5

	)

185 
	#MŸi⁄NŸify
 6

	)

186 
	#E¡îNŸify
 7

	)

187 
	#LóveNŸify
 8

	)

188 
	#FocusIn
 9

	)

189 
	#FocusOut
 10

	)

190 
	#Keym≠NŸify
 11

	)

191 
	#Expo£
 12

	)

192 
	#GøphicsExpo£
 13

	)

193 
	#NoExpo£
 14

	)

194 
	#VisibûôyNŸify
 15

	)

195 
	#Cª©eNŸify
 16

	)

196 
	#De°royNŸify
 17

	)

197 
	#Unm≠NŸify
 18

	)

198 
	#M≠NŸify
 19

	)

199 
	#M≠Reque°
 20

	)

200 
	#Rï¨ítNŸify
 21

	)

201 
	#C⁄figuªNŸify
 22

	)

202 
	#C⁄figuªReque°
 23

	)

203 
	#GøvôyNŸify
 24

	)

204 
	#ResizeReque°
 25

	)

205 
	#CúcuœãNŸify
 26

	)

206 
	#CúcuœãReque°
 27

	)

207 
	#Pr›îtyNŸify
 28

	)

208 
	#Sñe˘i⁄CÀ¨
 29

	)

209 
	#Sñe˘i⁄Reque°
 30

	)

210 
	#Sñe˘i⁄NŸify
 31

	)

211 
	#Cﬁ‹m≠NŸify
 32

	)

212 
	#Clõ¡Mesßge
 33

	)

213 
	#M≠pögNŸify
 34

	)

214 
	#GíîicEvít
 35

	)

215 
	#LASTEvít
 36

	)

221 
	#Shi·Mask
 (1<<0)

	)

222 
	#LockMask
 (1<<1)

	)

223 
	#C⁄åﬁMask
 (1<<2)

	)

224 
	#Mod1Mask
 (1<<3)

	)

225 
	#Mod2Mask
 (1<<4)

	)

226 
	#Mod3Mask
 (1<<5)

	)

227 
	#Mod4Mask
 (1<<6)

	)

228 
	#Mod5Mask
 (1<<7)

	)

233 
	#Shi·M≠Index
 0

	)

234 
	#LockM≠Index
 1

	)

235 
	#C⁄åﬁM≠Index
 2

	)

236 
	#Mod1M≠Index
 3

	)

237 
	#Mod2M≠Index
 4

	)

238 
	#Mod3M≠Index
 5

	)

239 
	#Mod4M≠Index
 6

	)

240 
	#Mod5M≠Index
 7

	)

246 
	#Buâ⁄1Mask
 (1<<8)

	)

247 
	#Buâ⁄2Mask
 (1<<9)

	)

248 
	#Buâ⁄3Mask
 (1<<10)

	)

249 
	#Buâ⁄4Mask
 (1<<11)

	)

250 
	#Buâ⁄5Mask
 (1<<12)

	)

252 
	#AnyModifõr
 (1<<15Ë

	)

259 
	#Buâ⁄1
 1

	)

260 
	#Buâ⁄2
 2

	)

261 
	#Buâ⁄3
 3

	)

262 
	#Buâ⁄4
 4

	)

263 
	#Buâ⁄5
 5

	)

267 
	#NŸifyN‹mÆ
 0

	)

268 
	#NŸifyGøb
 1

	)

269 
	#NŸifyUngøb
 2

	)

270 
	#NŸifyWhûeGøbbed
 3

	)

272 
	#NŸifyHöt
 1

	)

276 
	#NŸifyAn˚°‹
 0

	)

277 
	#NŸifyVútuÆ
 1

	)

278 
	#NŸifyIn„ri‹
 2

	)

279 
	#NŸifyN⁄löór
 3

	)

280 
	#NŸifyN⁄löórVútuÆ
 4

	)

281 
	#NŸifyPoöãr
 5

	)

282 
	#NŸifyPoöãrRoŸ
 6

	)

283 
	#NŸifyDëaûN⁄e
 7

	)

287 
	#VisibûôyUnobscuªd
 0

	)

288 
	#VisibûôyP¨tüŒyObscuªd
 1

	)

289 
	#VisibûôyFuŒyObscuªd
 2

	)

293 
	#Pœ˚OnT›
 0

	)

294 
	#Pœ˚OnBŸtom
 1

	)

298 
	#FamûyI¡î√t
 0

	)

299 
	#FamûyDEC√t
 1

	)

300 
	#FamûyChaos
 2

	)

301 
	#FamûyI¡î√t6
 6

	)

304 
	#FamûySîvîI¡î¥ëed
 5

	)

308 
	#Pr›îtyNewVÆue
 0

	)

309 
	#Pr›îtyDñëe
 1

	)

313 
	#Cﬁ‹m≠Unö°ÆÀd
 0

	)

314 
	#Cﬁ‹m≠In°ÆÀd
 1

	)

318 
	#GøbModeSync
 0

	)

319 
	#GøbModeAsync
 1

	)

323 
	#GøbSuc˚ss
 0

	)

324 
	#AÃódyGøbbed
 1

	)

325 
	#GøbInvÆidTime
 2

	)

326 
	#GøbNŸVõwabÀ
 3

	)

327 
	#GøbFrozí
 4

	)

331 
	#AsyncPoöãr
 0

	)

332 
	#SyncPoöãr
 1

	)

333 
	#RïœyPoöãr
 2

	)

334 
	#AsyncKeybﬂrd
 3

	)

335 
	#SyncKeybﬂrd
 4

	)

336 
	#RïœyKeybﬂrd
 5

	)

337 
	#AsyncBŸh
 6

	)

338 
	#SyncBŸh
 7

	)

342 
	#RevîtToN⁄e
 ()
N⁄e


	)

343 
	#RevîtToPoöãrRoŸ
 ()
PoöãrRoŸ


	)

344 
	#RevîtToP¨ít
 2

	)

350 
	#Suc˚ss
 0

	)

351 
	#BadReque°
 1

	)

352 
	#BadVÆue
 2

	)

353 
	#BadWödow
 3

	)

354 
	#BadPixm≠
 4

	)

355 
	#BadAtom
 5

	)

356 
	#BadCurs‹
 6

	)

357 
	#BadF⁄t
 7

	)

358 
	#BadM©ch
 8

	)

359 
	#BadDøwabÀ
 9

	)

360 
	#BadAc˚ss
 10

	)

369 
	#BadAŒoc
 11

	)

370 
	#BadCﬁ‹
 12

	)

371 
	#BadGC
 13

	)

372 
	#BadIDChoi˚
 14

	)

373 
	#BadName
 15

	)

374 
	#BadLígth
 16

	)

375 
	#BadIm∂emíèti⁄
 17

	)

377 
	#Fú°Exãnsi⁄Eº‹
 128

	)

378 
	#La°Exãnsi⁄Eº‹
 255

	)

387 
	#I≈utOuçut
 1

	)

388 
	#I≈utO∆y
 2

	)

392 
	#CWBackPixm≠
 (1L<<0)

	)

393 
	#CWBackPixñ
 (1L<<1)

	)

394 
	#CWB‹dîPixm≠
 (1L<<2)

	)

395 
	#CWB‹dîPixñ
 (1L<<3)

	)

396 
	#CWBôGøvôy
 (1L<<4)

	)

397 
	#CWWöGøvôy
 (1L<<5)

	)

398 
	#CWBackögSt‹e
 (1L<<6)

	)

399 
	#CWBackögPœ√s
 (1L<<7)

	)

400 
	#CWBackögPixñ
 (1L<<8)

	)

401 
	#CWOvîrideRedúe˘
 (1L<<9)

	)

402 
	#CWSaveUndî
 (1L<<10)

	)

403 
	#CWEvítMask
 (1L<<11)

	)

404 
	#CWD⁄tPr›ag©e
 (1L<<12)

	)

405 
	#CWCﬁ‹m≠
 (1L<<13)

	)

406 
	#CWCurs‹
 (1L<<14)

	)

410 
	#CWX
 (1<<0)

	)

411 
	#CWY
 (1<<1)

	)

412 
	#CWWidth
 (1<<2)

	)

413 
	#CWHeight
 (1<<3)

	)

414 
	#CWB‹dîWidth
 (1<<4)

	)

415 
	#CWSiblög
 (1<<5)

	)

416 
	#CWSèckMode
 (1<<6)

	)

421 
	#F‹gëGøvôy
 0

	)

422 
	#N‹thWe°Gøvôy
 1

	)

423 
	#N‹thGøvôy
 2

	)

424 
	#N‹thEa°Gøvôy
 3

	)

425 
	#We°Gøvôy
 4

	)

426 
	#CíãrGøvôy
 5

	)

427 
	#Ea°Gøvôy
 6

	)

428 
	#SouthWe°Gøvôy
 7

	)

429 
	#SouthGøvôy
 8

	)

430 
	#SouthEa°Gøvôy
 9

	)

431 
	#SèticGøvôy
 10

	)

435 
	#Unm≠Gøvôy
 0

	)

439 
	#NŸU£ful
 0

	)

440 
	#WhíM≠≥d
 1

	)

441 
	#Always
 2

	)

445 
	#IsUnm≠≥d
 0

	)

446 
	#IsUnvõwabÀ
 1

	)

447 
	#IsVõwabÀ
 2

	)

451 
	#SëModeIn£π
 0

	)

452 
	#SëModeDñëe
 1

	)

456 
	#De°royAŒ
 0

	)

457 
	#RëaöPîm™ít
 1

	)

458 
	#RëaöTemp‹¨y
 2

	)

462 
	#Above
 0

	)

463 
	#Bñow
 1

	)

464 
	#T›If
 2

	)

465 
	#BŸtomIf
 3

	)

466 
	#Oµosôe
 4

	)

470 
	#Rai£Lowe°
 0

	)

471 
	#LowîHighe°
 1

	)

475 
	#Pr›ModeRïœ˚
 0

	)

476 
	#Pr›ModePª≥nd
 1

	)

477 
	#Pr›ModeAµíd
 2

	)

485 
	#GX˛ór
 0x0

	)

486 
	#GX™d
 0x1

	)

487 
	#GX™dRevî£
 0x2

	)

488 
	#GXc›y
 0x3

	)

489 
	#GX™dInvîãd
 0x4

	)

490 
	#GXno›
 0x5

	)

491 
	#GXx‹
 0x6

	)

492 
	#GX‹
 0x7

	)

493 
	#GXn‹
 0x8

	)

494 
	#GXequiv
 0x9

	)

495 
	#GXövît
 0x®

	)

496 
	#GX‹Revî£
 0xb

	)

497 
	#GXc›yInvîãd
 0x¯

	)

498 
	#GX‹Invîãd
 0xd

	)

499 
	#GX«nd
 0xê

	)

500 
	#GX£t
 0x‡

	)

504 
	#LöeSﬁid
 0

	)

505 
	#LöeOnOffDash
 1

	)

506 
	#LöeDoubÀDash
 2

	)

510 
	#C≠NŸLa°
 0

	)

511 
	#C≠Buâ
 1

	)

512 
	#C≠Round
 2

	)

513 
	#C≠Proje˘ög
 3

	)

517 
	#JoöMôî
 0

	)

518 
	#JoöRound
 1

	)

519 
	#JoöBevñ
 2

	)

523 
	#FûlSﬁid
 0

	)

524 
	#FûlTûed
 1

	)

525 
	#FûlStù∂ed
 2

	)

526 
	#FûlO∑queStù∂ed
 3

	)

530 
	#EvíOddRuÀ
 0

	)

531 
	#WödögRuÀ
 1

	)

535 
	#ClùByChûdªn
 0

	)

536 
	#In˛udeIn„ri‹s
 1

	)

540 
	#Uns‹ãd
 0

	)

541 
	#YS‹ãd
 1

	)

542 
	#YXS‹ãd
 2

	)

543 
	#YXB™ded
 3

	)

547 
	#Co‹dModeOrigö
 0

	)

548 
	#Co‹dModePªvious
 1

	)

552 
	#Com∂ex
 0

	)

553 
	#N⁄c⁄vex
 1

	)

554 
	#C⁄vex
 2

	)

558 
	#ArcCh‹d
 0

	)

559 
	#ArcPõSli˚
 1

	)

564 
	#GCFun˘i⁄
 (1L<<0)

	)

565 
	#GCPœ√Mask
 (1L<<1)

	)

566 
	#GCF‹eground
 (1L<<2)

	)

567 
	#GCBackground
 (1L<<3)

	)

568 
	#GCLöeWidth
 (1L<<4)

	)

569 
	#GCLöeStyÀ
 (1L<<5)

	)

570 
	#GCC≠StyÀ
 (1L<<6)

	)

571 
	#GCJoöStyÀ
 (1L<<7)

	)

572 
	#GCFûlStyÀ
 (1L<<8)

	)

573 
	#GCFûlRuÀ
 (1L<<9)

	)

574 
	#GCTûe
 (1L<<10)

	)

575 
	#GCStù∂e
 (1L<<11)

	)

576 
	#GCTûeStùXOrigö
 (1L<<12)

	)

577 
	#GCTûeStùYOrigö
 (1L<<13)

	)

578 
	#GCF⁄t
 (1L<<14)

	)

579 
	#GCSubwödowMode
 (1L<<15)

	)

580 
	#GCGøphicsExposuªs
 (1L<<16)

	)

581 
	#GCClùXOrigö
 (1L<<17)

	)

582 
	#GCClùYOrigö
 (1L<<18)

	)

583 
	#GCClùMask
 (1L<<19)

	)

584 
	#GCDashOff£t
 (1L<<20)

	)

585 
	#GCDashLi°
 (1L<<21)

	)

586 
	#GCArcMode
 (1L<<22)

	)

588 
	#GCLa°Bô
 22

	)

595 
	#F⁄tLe·ToRight
 0

	)

596 
	#F⁄tRightToLe·
 1

	)

598 
	#F⁄tCh™ge
 255

	)

606 
	#XYBôm≠
 0

	)

607 
	#XYPixm≠
 1

	)

608 
	#ZPixm≠
 2

	)

616 
	#AŒocN⁄e
 0

	)

617 
	#AŒocAŒ
 1

	)

622 
	#DoRed
 (1<<0)

	)

623 
	#DoGªí
 (1<<1)

	)

624 
	#DoBlue
 (1<<2)

	)

632 
	#Curs‹Sh≠e
 0

	)

633 
	#TûeSh≠e
 1

	)

634 
	#Stù∂eSh≠e
 2

	)

640 
	#AutoRïótModeOff
 0

	)

641 
	#AutoRïótModeOn
 1

	)

642 
	#AutoRïótModeDeÁu…
 2

	)

644 
	#LedModeOff
 0

	)

645 
	#LedModeOn
 1

	)

649 
	#KBKeyClickPî˚¡
 (1L<<0)

	)

650 
	#KBBñlPî˚¡
 (1L<<1)

	)

651 
	#KBBñlPôch
 (1L<<2)

	)

652 
	#KBBñlDuøti⁄
 (1L<<3)

	)

653 
	#KBLed
 (1L<<4)

	)

654 
	#KBLedMode
 (1L<<5)

	)

655 
	#KBKey
 (1L<<6)

	)

656 
	#KBAutoRïótMode
 (1L<<7)

	)

658 
	#M≠pögSuc˚ss
 0

	)

659 
	#M≠pögBusy
 1

	)

660 
	#M≠pögFaûed
 2

	)

662 
	#M≠pögModifõr
 0

	)

663 
	#M≠pögKeybﬂrd
 1

	)

664 
	#M≠pögPoöãr
 2

	)

670 
	#D⁄tPª„rBœnkög
 0

	)

671 
	#Pª„rBœnkög
 1

	)

672 
	#DeÁu…Bœnkög
 2

	)

674 
	#DißbÀS¸ìnSavî
 0

	)

675 
	#DißbÀS¸ìnI¡îvÆ
 0

	)

677 
	#D⁄tAŒowExposuªs
 0

	)

678 
	#AŒowExposuªs
 1

	)

679 
	#DeÁu…Exposuªs
 2

	)

683 
	#S¸ìnSavîRe£t
 0

	)

684 
	#S¸ìnSavîA˘ive
 1

	)

692 
	#Ho°In£π
 0

	)

693 
	#Ho°Dñëe
 1

	)

697 
	#E«bÀAc˚ss
 1

	)

698 
	#DißbÀAc˚ss
 0

	)

704 
	#SèticGøy
 0

	)

705 
	#GøySˇÀ
 1

	)

706 
	#SèticCﬁ‹
 2

	)

707 
	#P£udoCﬁ‹
 3

	)

708 
	#TrueCﬁ‹
 4

	)

709 
	#Dúe˘Cﬁ‹
 5

	)

714 
	#LSBFú°
 0

	)

715 
	#MSBFú°
 1

	)

	@/usr/include/X11/Xfuncproto.h

30 #i‚de‡
_XFUNCPROTO_H_


31 
	#_XFUNCPROTO_H_


	)

33 #i‚de‡
NìdFun˘i⁄PrŸŸy≥s


34 
	#NìdFun˘i⁄PrŸŸy≥s
 1

	)

37 #i‚de‡
NìdV¨¨gsPrŸŸy≥s


38 
	#NìdV¨¨gsPrŸŸy≥s
 1

	)

41 #i‡
NìdFun˘i⁄PrŸŸy≥s


43 #i‚de‡
NìdNe°edPrŸŸy≥s


44 
	#NìdNe°edPrŸŸy≥s
 1

	)

47 #i‚de‡
_Xc⁄°


48 
	#_Xc⁄°
 c⁄°

	)

52 #i‚de‡
NARROWPROTO


53 
	#NARROWPROTO


	)

55 #i‚de‡
FUNCPROTO


56 
	#FUNCPROTO
 15

	)

59 #i‚de‡
NìdWidePrŸŸy≥s


60 #ifde‡
NARROWPROTO


61 
	#NìdWidePrŸŸy≥s
 0

	)

63 
	#NìdWidePrŸŸy≥s
 1

	)

69 #i‚de‡
_XFUNCPROTOBEGIN


70 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

71 
	#_XFUNCPROTOBEGIN
 "C" {

	)

72 
	#_XFUNCPROTOEND
 }

	)

74 
	#_XFUNCPROTOBEGIN


	)

75 
	#_XFUNCPROTOEND


	)

79 #i‡
deföed
(
__GNUC__
) && (__GNUC__ >= 4)

80 
	#_X_SENTINEL
(
x
Ë
	`__©åibuã__
 ((
	`__£¡öñ__
(x)))

	)

81 
	#_X_ATTRIBUTE_PRINTF
(
x
,
y
Ë
	`__©åibuã__
((
	`__f‹m©__
(
__¥ötf__
,x,y)))

	)

83 
	#_X_SENTINEL
(
x
)

	)

84 
	#_X_ATTRIBUTE_PRINTF
(
x
,
y
)

	)

87 #i‡
deföed
(
__GNUC__
) && (__GNUC__ >= 4)

88 
	#_X_EXPORT
 
	`__©åibuã__
((
	`visibûôy
("deÁu…")))

	)

89 
	#_X_HIDDEN
 
	`__©åibuã__
((
	`visibûôy
("hiddí")))

	)

90 
	#_X_INTERNAL
 
	`__©åibuã__
((
	`visibûôy
("öã∫Æ")))

	)

91 #ñi‡
deföed
(
__SUNPRO_C
) && (__SUNPRO_C >= 0x550)

92 
	#_X_EXPORT
 
__globÆ


	)

93 
	#_X_HIDDEN
 
__hiddí


	)

94 
	#_X_INTERNAL
 
__hiddí


	)

96 
	#_X_EXPORT


	)

97 
	#_X_HIDDEN


	)

98 
	#_X_INTERNAL


	)

101 #i‡
deföed
(
__GNUC__
Ë&& ((__GNUC__ * 100 + 
__GNUC_MINOR__
) >= 303)

102 
	#_X_LIKELY
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 1)

	)

103 
	#_X_UNLIKELY
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 0)

	)

104 
	#_X_INLINE
 
ölöe


	)

105 #ñi‡
deföed
(
__SUNPRO_C
) && (__SUNPRO_C >= 0x550)

106 
	#_X_LIKELY
(
x
Ë(x)

	)

107 
	#_X_UNLIKELY
(
x
Ë(x)

	)

108 
	#_X_INLINE
 
ölöe


	)

110 
	#_X_LIKELY
(
x
Ë(x)

	)

111 
	#_X_UNLIKELY
(
x
Ë(x)

	)

112 
	#_X_INLINE


	)

115 #i‡
deföed
(
__GNUC__
Ë&& ((__GNUC__ * 100 + 
__GNUC_MINOR__
) >= 301)

116 
	#_X_DEPRECATED
 
	`__©åibuã__
((
dïªˇãd
))

	)

118 
	#_X_DEPRECATED


	)

	@/usr/include/X11/Xosdefs.h

27 #i‚de‡
_XOSDEFS_H_


28 
	#_XOSDEFS_H_


	)

37 #ifde‡
_SCO_DS


38 #i‚de‡
__SCO__


39 
	#__SCO__


	)

43 #ifde‡
__i386__


44 #ifde‡
SYSV


45 #i‡!
deföed
(
__SCO__
) && \

46 !
deföed
(
__UNIXWARE__
Ë&& !
	$deföed
(
__sun
)

47 #i‡!
	`deföed
(
_POSIX_SOURCE
)

48 
	#X_NOT_POSIX


	)

54 #ifde‡
__sun


58 #i‡
	`deföed
(
__SVR4
Ë&& !deföed(
SVR4
)

59 
	#SVR4
 1

	)

61 #ifde‡
SVR4


63 
	#X_POSIX_C_SOURCE
 199300L

	)

67 #ifde‡
WIN32


68 #i‚de‡
_POSIX_


69 
	#X_NOT_POSIX


	)

74 #ifde‡
__APPLE__


75 
	#NULL_NOT_ZERO


	)

82 #i‡
	`deföed
(
_XOPEN_SOURCE
Ë|| deföed(
_POSIX_SOURCE
Ë|| deföed(
_POSIX_C_SOURCE
)

83 #i‚de‡
_DARWIN_C_SOURCE


84 
	#_DARWIN_C_SOURCE


	)

90 #ifde‡
__GNU__


91 #i‚de‡
PATH_MAX


92 
	#PATH_MAX
 4096

	)

94 #i‚de‡
MAXPATHLEN


95 
	#MAXPATHLEN
 4096

	)

99 #i‡
	`deföed
(
__SCO__
Ë|| deföed(
__UNIXWARE__
)

100 #i‚de‡
PATH_MAX


101 
	#PATH_MAX
 1024

	)

103 #i‚de‡
MAXPATHLEN


104 
	#MAXPATHLEN
 1024

	)

108 #i‡
	`deföed
(
__O≥nBSD__
Ë|| deföed(
__NëBSD__
Ë|| deföed(
__FªeBSD__
) \

109 || 
	`deföed
(
__APPLE__
Ë|| 
	$deföed
(
__Døg⁄Fly__
)

110 #i‚de‡
CSRG_BASED


111 
	#CSRG_BASED


	)

	@/usr/include/X11/keysym.h

49 
	#XK_MISCELLANY


	)

50 
	#XK_XKB_KEYS


	)

51 
	#XK_LATIN1


	)

52 
	#XK_LATIN2


	)

53 
	#XK_LATIN3


	)

54 
	#XK_LATIN4


	)

55 
	#XK_LATIN8


	)

56 
	#XK_LATIN9


	)

57 
	#XK_CAUCASUS


	)

58 
	#XK_GREEK


	)

59 
	#XK_KATAKANA


	)

60 
	#XK_ARABIC


	)

61 
	#XK_CYRILLIC


	)

62 
	#XK_HEBREW


	)

63 
	#XK_THAI


	)

64 
	#XK_KOREAN


	)

65 
	#XK_ARMENIAN


	)

66 
	#XK_GEORGIAN


	)

67 
	#XK_VIETNAMESE


	)

68 
	#XK_CURRENCY


	)

69 
	#XK_MATHEMATICAL


	)

70 
	#XK_BRAILLE


	)

72 
	~<X11/keysymdef.h
>

	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

342 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 
	~<bôs/w‹dsize.h
>

28 #i‡
__WORDSIZE
 =64 || (
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

31 
	tÊﬂt_t
;

32 
	tdoubÀ_t
;

38 
	tÊﬂt_t
;

40 
	tdoubÀ_t
;

45 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

46 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

	@/usr/include/bits/mathinline.h

21 #i‚de‡
_MATH_H


25 
	~<bôs/w‹dsize.h
>

27 #i‚de‡
__exã∫_ölöe


28 
	#__MATH_INLINE
 
__ölöe


	)

30 
	#__MATH_INLINE
 
__exã∫_ölöe


	)

34 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

37 
__MATH_INLINE
 

38 
__NTH
 (
	$__signbôf
 (
__x
))

40 #i‡
__WORDSIZE
 == 32

41 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

42  
__u
.
__i
 < 0;

44 
__m
;

45 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

46  
__m
 & 0x8;

48 
	}
}

49 
__MATH_INLINE
 

50 
__NTH
 (
	$__signbô
 (
__x
))

52 #i‡
__WORDSIZE
 == 32

53 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

54  
__u
.
__i
[1] < 0;

56 
__m
;

57 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

58  
__m
 & 0x80;

60 
	}
}

61 
__MATH_INLINE
 

62 
__NTH
 (
	$__signbôl
 (
__x
))

64 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

65  (
__u
.
__i
[2] & 0x8000) != 0;

66 
	}
}

	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/semaphore.h

20 #i‚de‡
_SEMAPHORE_H


24 
	~<bôs/w‹dsize.h
>

26 #i‡
__WORDSIZE
 == 64

27 
	#__SIZEOF_SEM_T
 32

	)

29 
	#__SIZEOF_SEM_T
 16

	)

34 
	#SEM_FAILED
 ((
£m_t
 *Ë0)

	)

39 
	m__size
[
__SIZEOF_SEM_T
];

40 
	m__Æign
;

41 } 
	t£m_t
;

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

81 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

83 
	`__w¨n_mem£t_zîo_Àn
 ();

84  
__de°
;

86  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

87 
	}
}

89 #ifde‡
__USE_BSD


90 
__exã∫_Æways_ölöe
 

91 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

92 
size_t
 
__Àn
))

94 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

95 
	}
}

97 
__exã∫_Æways_ölöe
 

98 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

100 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

101 
	}
}

104 
__exã∫_Æways_ölöe
 *

105 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

107  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

108 
	}
}

110 #ifde‡
__USE_GNU


111 
__exã∫_Æways_ölöe
 *

112 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

114  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

115 
	}
}

119 
__exã∫_Æways_ölöe
 *

120 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

121 
size_t
 
__Àn
))

123  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

124 
	}
}

127 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

128 
size_t
 
__de°Àn
Ë
__THROW
;

129 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

130 
__c⁄°
 *
__§c
,

131 
size_t
 
__n
), 
°≤˝y
);

133 
__exã∫_Æways_ölöe
 *

134 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

136 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

137 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

138  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

139  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
__exã∫_Æways_ölöe
 *

144 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

146  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

147 
	}
}

150 
__exã∫_Æways_ölöe
 *

151 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

152 
size_t
 
__Àn
))

154  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

155 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

95 #unde‡
__USE_ISOC99


96 #unde‡
__USE_ISOC95


97 #unde‡
__USE_POSIX


98 #unde‡
__USE_POSIX2


99 #unde‡
__USE_POSIX199309


100 #unde‡
__USE_POSIX199506


101 #unde‡
__USE_XOPEN


102 #unde‡
__USE_XOPEN_EXTENDED


103 #unde‡
__USE_UNIX98


104 #unde‡
__USE_XOPEN2K


105 #unde‡
__USE_XOPEN2K8


106 #unde‡
__USE_LARGEFILE


107 #unde‡
__USE_LARGEFILE64


108 #unde‡
__USE_FILE_OFFSET64


109 #unde‡
__USE_BSD


110 #unde‡
__USE_SVID


111 #unde‡
__USE_MISC


112 #unde‡
__USE_ATFILE


113 #unde‡
__USE_GNU


114 #unde‡
__USE_REENTRANT


115 #unde‡
__USE_FORTIFY_LEVEL


116 #unde‡
__FAVOR_BSD


117 #unde‡
__KERNEL_STRICT_NAMES


121 #i‚de‡
_LOOSE_KERNEL_NAMES


122 
	#__KERNEL_STRICT_NAMES


	)

126 
	#__USE_ANSI
 1

	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

144 #i‡
deföed
 
_BSD_SOURCE
 && \

145 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

146 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

147 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

148 
	#__FAVOR_BSD
 1

	)

152 #ifde‡
_GNU_SOURCE


153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_POSIX_SOURCE


156 
	#_POSIX_SOURCE
 1

	)

157 #unde‡
_POSIX_C_SOURCE


158 
	#_POSIX_C_SOURCE
 200809L

	)

159 #unde‡
_XOPEN_SOURCE


160 
	#_XOPEN_SOURCE
 700

	)

161 #unde‡
_XOPEN_SOURCE_EXTENDED


162 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

163 #unde‡
_LARGEFILE64_SOURCE


164 
	#_LARGEFILE64_SOURCE
 1

	)

165 #unde‡
_BSD_SOURCE


166 
	#_BSD_SOURCE
 1

	)

167 #unde‡
_SVID_SOURCE


168 
	#_SVID_SOURCE
 1

	)

169 #unde‡
_ATFILE_SOURCE


170 
	#_ATFILE_SOURCE
 1

	)

175 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

176 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

177 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

178 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

179 
	#_BSD_SOURCE
 1

	)

180 
	#_SVID_SOURCE
 1

	)

187 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

188 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

189 
	#__USE_ISOC99
 1

	)

193 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

194 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

195 
	#__USE_ISOC95
 1

	)

200 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

201 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

202 
	#_POSIX_SOURCE
 1

	)

203 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

204 
	#_POSIX_C_SOURCE
 2

	)

205 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

206 
	#_POSIX_C_SOURCE
 199506L

	)

207 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

208 
	#_POSIX_C_SOURCE
 200112L

	)

210 
	#_POSIX_C_SOURCE
 200809L

	)

212 
	#__USE_POSIX_IMPLICITLY
 1

	)

215 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


216 
	#__USE_POSIX
 1

	)

219 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX2
 1

	)

223 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

224 
	#__USE_POSIX199309
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

228 
	#__USE_POSIX199506
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

232 
	#__USE_XOPEN2K
 1

	)

233 #unde‡
__USE_ISOC99


234 
	#__USE_ISOC99
 1

	)

237 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

238 
	#__USE_XOPEN2K8
 1

	)

239 #unde‡
_ATFILE_SOURCE


240 
	#_ATFILE_SOURCE
 1

	)

243 #ifdef 
_XOPEN_SOURCE


244 
	#__USE_XOPEN
 1

	)

245 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

246 
	#__USE_XOPEN_EXTENDED
 1

	)

247 
	#__USE_UNIX98
 1

	)

248 #unde‡
_LARGEFILE_SOURCE


249 
	#_LARGEFILE_SOURCE
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

252 
	#__USE_XOPEN2K8
 1

	)

254 
	#__USE_XOPEN2K
 1

	)

255 #unde‡
__USE_ISOC99


256 
	#__USE_ISOC99
 1

	)

259 #ifde‡
_XOPEN_SOURCE_EXTENDED


260 
	#__USE_XOPEN_EXTENDED
 1

	)

265 #ifde‡
_LARGEFILE_SOURCE


266 
	#__USE_LARGEFILE
 1

	)

269 #ifde‡
_LARGEFILE64_SOURCE


270 
	#__USE_LARGEFILE64
 1

	)

273 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

274 
	#__USE_FILE_OFFSET64
 1

	)

277 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


278 
	#__USE_MISC
 1

	)

281 #ifdef 
_BSD_SOURCE


282 
	#__USE_BSD
 1

	)

285 #ifdef 
_SVID_SOURCE


286 
	#__USE_SVID
 1

	)

289 #ifdef 
_ATFILE_SOURCE


290 
	#__USE_ATFILE
 1

	)

293 #ifdef 
_GNU_SOURCE


294 
	#__USE_GNU
 1

	)

297 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


298 
	#__USE_REENTRANT
 1

	)

301 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

302 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

303 #i‡
_FORTIFY_SOURCE
 > 1

304 
	#__USE_FORTIFY_LEVEL
 2

	)

306 
	#__USE_FORTIFY_LEVEL
 1

	)

309 
	#__USE_FORTIFY_LEVEL
 0

	)

313 
	~<bôs/¥edefs.h
>

316 
	#__STDC_ISO_10646__
 200009L

	)

324 #unde‡
__GNU_LIBRARY__


325 
	#__GNU_LIBRARY__
 6

	)

329 
	#__GLIBC__
 2

	)

330 
	#__GLIBC_MINOR__
 11

	)

332 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

333 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

336 #i‡
deföed
 
__GNUC__
 \

337 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

338 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

339 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

340 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

344 #i‚de‡
__ASSEMBLER__


345 #i‚de‡
_SYS_CDEFS_H


346 
	~<sys/cdefs.h
>

351 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


352 
	#__USE_LARGEFILE
 1

	)

353 
	#__USE_LARGEFILE64
 1

	)

359 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

360 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

361 && 
deföed
 
	g__exã∫_ölöe


362 
	#__USE_EXTERN_INLINES
 1

	)

367 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

368 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

369 && 
deföed
 
	g__exã∫_ölöe


370 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

378 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #ifde‡
__USE_XOPEN


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/X11/Xmd.h

47 #i‚de‡
XMD_H


48 
	#XMD_H
 1

	)

56 #i‡
deföed
(
__sun
Ë&& deföed(
__SVR4
)

57 
	~<sys/iß_defs.h
>

60 #i‡
deföed
 (
_LP64
Ë|| deföed(
__LP64__
) || \

61 
deföed
(
__Æpha
Ë|| deföed(
__Æpha__
) || \

62 
deföed
(
__ü64__
Ë|| deföed(
ü64
) || \

63 
deföed
(
__•¨c64__
) || \

64 
deföed
(
__s390x__
) || \

65 
deföed
(
__amd64__
Ë|| deföed(
amd64
) || \

66 
	$deföed
(
__powîpc64__
)

67 
	#LONG64


	)

74 #ifde‡
WORD64


75 
	#MUSTCOPY


	)

93 
	#_SIZEOF
(
x
Ë
sz_
##
	)
x

94 
	#SIZEOF
(
x
Ë
	`_SIZEOF
(x)

	)

101 #ifde‡
WORD64


102 
	tINT64
;

103 
	tCARD64
;

104 
	#B32
 :32

	)

105 
	#B16
 :16

	)

106 #ifde‡
UNSIGNEDBITFIELDS


107 
	tINT32
;

108 
	tINT16
;

110 sig√d 
	tINT32
;

111 sig√d 
	tINT16
;

114 
	#B32


	)

115 
	#B16


	)

116 #ifde‡
LONG64


117 
	tINT64
;

118 
	tINT32
;

120 
	tINT32
;

122 
	tINT16
;

125 sig√d 
	tINT8
;

127 #ifde‡
LONG64


128 
	tCARD64
;

129 
	tCARD32
;

131 
	tCARD32
;

133 #i‡!
	`deföed
(
WORD64
Ë&& !deföed(
LONG64
)

134 
	tCARD64
;

136 
	tCARD16
;

137 
	tCARD8
;

139 
CARD32
 
	tBITS32
;

140 
CARD16
 
	tBITS16
;

142 
CARD8
 
	tBYTE
;

143 
CARD8
 
	tBOOL
;

148 #i‡
	`deföed
(
WORD64
Ë&& deföed(
UNSIGNEDBITFIELDS
)

149 
	#cvtINT8toI¡
(
vÆ
Ë(((vÆË& 0x00000080Ë? ((vÆË| 0xffffffffffffff00Ë: (vÆ))

	)

150 
	#cvtINT16toI¡
(
vÆ
Ë(((vÆË& 0x00008000Ë? ((vÆË| 0xffffffffffff0000Ë: (vÆ))

	)

151 
	#cvtINT32toI¡
(
vÆ
Ë(((vÆË& 0x80000000Ë? ((vÆË| 0xffffffff00000000Ë: (vÆ))

	)

152 
	#cvtINT8toSh‹t
(
vÆ
Ë
	`cvtINT8toI¡
(vÆ)

	)

153 
	#cvtINT16toSh‹t
(
vÆ
Ë
	`cvtINT16toI¡
(vÆ)

	)

154 
	#cvtINT32toSh‹t
(
vÆ
Ë
	`cvtINT32toI¡
(vÆ)

	)

155 
	#cvtINT8toL⁄g
(
vÆ
Ë
	`cvtINT8toI¡
(vÆ)

	)

156 
	#cvtINT16toL⁄g
(
vÆ
Ë
	`cvtINT16toI¡
(vÆ)

	)

157 
	#cvtINT32toL⁄g
(
vÆ
Ë
	`cvtINT32toI¡
(vÆ)

	)

159 
	#cvtINT8toI¡
(
vÆ
Ë(vÆ)

	)

160 
	#cvtINT16toI¡
(
vÆ
Ë(vÆ)

	)

161 
	#cvtINT32toI¡
(
vÆ
Ë(vÆ)

	)

162 
	#cvtINT8toSh‹t
(
vÆ
Ë(vÆ)

	)

163 
	#cvtINT16toSh‹t
(
vÆ
Ë(vÆ)

	)

164 
	#cvtINT32toSh‹t
(
vÆ
Ë(vÆ)

	)

165 
	#cvtINT8toL⁄g
(
vÆ
Ë(vÆ)

	)

166 
	#cvtINT16toL⁄g
(
vÆ
Ë(vÆ)

	)

167 
	#cvtINT32toL⁄g
(
vÆ
Ë(vÆ)

	)

172 #ifde‡
MUSTCOPY


176 
	#NEXTPTR
(
p
,
t
Ë(((*ËpË+ 
	`SIZEOF
—))

	)

182 
	#NEXTPTR
(
p
,
t
Ë((— *)’)Ë+ 1)

	)

	@/usr/include/X11/keysymdef.h

115 
	#XK_VoidSymbﬁ
 0xfffff‡

	)

117 #ifde‡
XK_MISCELLANY


124 
	#XK_BackS∑˚
 0xff08

	)

125 
	#XK_Tab
 0xff09

	)

126 
	#XK_Löe„ed
 0xff0®

	)

127 
	#XK_CÀ¨
 0xff0b

	)

128 
	#XK_Rëu∫
 0xff0d

	)

129 
	#XK_Pau£
 0xff13

	)

130 
	#XK_S¸ﬁl_Lock
 0xff14

	)

131 
	#XK_Sys_Req
 0xff15

	)

132 
	#XK_Esˇ≥
 0xff1b

	)

133 
	#XK_Dñëe
 0xfff‡

	)

139 
	#XK_Mu…i_key
 0xff20

	)

140 
	#XK_Codeöput
 0xff37

	)

141 
	#XK_SögÀC™did©e
 0xff3c

	)

142 
	#XK_Mu…ùÀC™did©e
 0xff3d

	)

143 
	#XK_PªviousC™did©e
 0xff3e

	)

147 
	#XK_K™ji
 0xff21

	)

148 
	#XK_Muhík™
 0xff22

	)

149 
	#XK_Hík™_Mode
 0xff23

	)

150 
	#XK_Hík™
 0xff23

	)

151 
	#XK_Romaji
 0xff24

	)

152 
	#XK_Húag™a
 0xff25

	)

153 
	#XK_K©ak™a
 0xff26

	)

154 
	#XK_Húag™a_K©ak™a
 0xff27

	)

155 
	#XK_Zíkaku
 0xff28

	)

156 
	#XK_H™kaku
 0xff29

	)

157 
	#XK_Zíkaku_H™kaku
 0xff2®

	)

158 
	#XK_Touroku
 0xff2b

	)

159 
	#XK_Massyo
 0xff2¯

	)

160 
	#XK_K™a_Lock
 0xff2d

	)

161 
	#XK_K™a_Shi·
 0xff2ê

	)

162 
	#XK_Eisu_Shi·
 0xff2‡

	)

163 
	#XK_Eisu_toggÀ
 0xff30

	)

164 
	#XK_K™ji_B™gou
 0xff37

	)

165 
	#XK_Zí_Koho
 0xff3d

	)

166 
	#XK_M´_Koho
 0xff3ê

	)

172 
	#XK_Home
 0xff50

	)

173 
	#XK_Le·
 0xff51

	)

174 
	#XK_Up
 0xff52

	)

175 
	#XK_Right
 0xff53

	)

176 
	#XK_Down
 0xff54

	)

177 
	#XK_Pri‹
 0xff55

	)

178 
	#XK_Page_Up
 0xff55

	)

179 
	#XK_Next
 0xff56

	)

180 
	#XK_Page_Down
 0xff56

	)

181 
	#XK_End
 0xff57

	)

182 
	#XK_Begö
 0xff58

	)

187 
	#XK_Sñe˘
 0xff60

	)

188 
	#XK_Pröt
 0xff61

	)

189 
	#XK_Execuã
 0xff62

	)

190 
	#XK_In£π
 0xff63

	)

191 
	#XK_Undo
 0xff65

	)

192 
	#XK_Redo
 0xff66

	)

193 
	#XK_Míu
 0xff67

	)

194 
	#XK_Föd
 0xff68

	)

195 
	#XK_C™˚l
 0xff69

	)

196 
	#XK_Hñp
 0xff6®

	)

197 
	#XK_Bªak
 0xff6b

	)

198 
	#XK_Mode_swôch
 0xff7ê

	)

199 
	#XK_s¸ùt_swôch
 0xff7ê

	)

200 
	#XK_Num_Lock
 0xff7f

	)

204 
	#XK_KP_S∑˚
 0xff80

	)

205 
	#XK_KP_Tab
 0xff89

	)

206 
	#XK_KP_E¡î
 0xff8d

	)

207 
	#XK_KP_F1
 0xff91

	)

208 
	#XK_KP_F2
 0xff92

	)

209 
	#XK_KP_F3
 0xff93

	)

210 
	#XK_KP_F4
 0xff94

	)

211 
	#XK_KP_Home
 0xff95

	)

212 
	#XK_KP_Le·
 0xff96

	)

213 
	#XK_KP_Up
 0xff97

	)

214 
	#XK_KP_Right
 0xff98

	)

215 
	#XK_KP_Down
 0xff99

	)

216 
	#XK_KP_Pri‹
 0xff9a

	)

217 
	#XK_KP_Page_Up
 0xff9a

	)

218 
	#XK_KP_Next
 0xff9b

	)

219 
	#XK_KP_Page_Down
 0xff9b

	)

220 
	#XK_KP_End
 0xff9c

	)

221 
	#XK_KP_Begö
 0xff9d

	)

222 
	#XK_KP_In£π
 0xff9e

	)

223 
	#XK_KP_Dñëe
 0xff9f

	)

224 
	#XK_KP_EquÆ
 0xffbd

	)

225 
	#XK_KP_Mu…ùly
 0xfÁa

	)

226 
	#XK_KP_Add
 0xfÁb

	)

227 
	#XK_KP_Sï¨©‹
 0xfÁ¯

	)

228 
	#XK_KP_Subåa˘
 0xfÁd

	)

229 
	#XK_KP_DecimÆ
 0xfÁe

	)

230 
	#XK_KP_Divide
 0xfÁf

	)

232 
	#XK_KP_0
 0xffb0

	)

233 
	#XK_KP_1
 0xffb1

	)

234 
	#XK_KP_2
 0xffb2

	)

235 
	#XK_KP_3
 0xffb3

	)

236 
	#XK_KP_4
 0xffb4

	)

237 
	#XK_KP_5
 0xffb5

	)

238 
	#XK_KP_6
 0xffb6

	)

239 
	#XK_KP_7
 0xffb7

	)

240 
	#XK_KP_8
 0xffb8

	)

241 
	#XK_KP_9
 0xffb9

	)

252 
	#XK_F1
 0xffbe

	)

253 
	#XK_F2
 0xffbf

	)

254 
	#XK_F3
 0xffc0

	)

255 
	#XK_F4
 0xffc1

	)

256 
	#XK_F5
 0xffc2

	)

257 
	#XK_F6
 0xffc3

	)

258 
	#XK_F7
 0xffc4

	)

259 
	#XK_F8
 0xffc5

	)

260 
	#XK_F9
 0xffc6

	)

261 
	#XK_F10
 0xffc7

	)

262 
	#XK_F11
 0xffc8

	)

263 
	#XK_L1
 0xffc8

	)

264 
	#XK_F12
 0xffc9

	)

265 
	#XK_L2
 0xffc9

	)

266 
	#XK_F13
 0xffˇ

	)

267 
	#XK_L3
 0xffˇ

	)

268 
	#XK_F14
 0xffcb

	)

269 
	#XK_L4
 0xffcb

	)

270 
	#XK_F15
 0xffcc

	)

271 
	#XK_L5
 0xffcc

	)

272 
	#XK_F16
 0xffcd

	)

273 
	#XK_L6
 0xffcd

	)

274 
	#XK_F17
 0xff˚

	)

275 
	#XK_L7
 0xff˚

	)

276 
	#XK_F18
 0xffcf

	)

277 
	#XK_L8
 0xffcf

	)

278 
	#XK_F19
 0xffd0

	)

279 
	#XK_L9
 0xffd0

	)

280 
	#XK_F20
 0xffd1

	)

281 
	#XK_L10
 0xffd1

	)

282 
	#XK_F21
 0xffd2

	)

283 
	#XK_R1
 0xffd2

	)

284 
	#XK_F22
 0xffd3

	)

285 
	#XK_R2
 0xffd3

	)

286 
	#XK_F23
 0xffd4

	)

287 
	#XK_R3
 0xffd4

	)

288 
	#XK_F24
 0xffd5

	)

289 
	#XK_R4
 0xffd5

	)

290 
	#XK_F25
 0xffd6

	)

291 
	#XK_R5
 0xffd6

	)

292 
	#XK_F26
 0xffd7

	)

293 
	#XK_R6
 0xffd7

	)

294 
	#XK_F27
 0xffd8

	)

295 
	#XK_R7
 0xffd8

	)

296 
	#XK_F28
 0xffd9

	)

297 
	#XK_R8
 0xffd9

	)

298 
	#XK_F29
 0xffda

	)

299 
	#XK_R9
 0xffda

	)

300 
	#XK_F30
 0xffdb

	)

301 
	#XK_R10
 0xffdb

	)

302 
	#XK_F31
 0xffdc

	)

303 
	#XK_R11
 0xffdc

	)

304 
	#XK_F32
 0xffdd

	)

305 
	#XK_R12
 0xffdd

	)

306 
	#XK_F33
 0xffde

	)

307 
	#XK_R13
 0xffde

	)

308 
	#XK_F34
 0xffdf

	)

309 
	#XK_R14
 0xffdf

	)

310 
	#XK_F35
 0xf„0

	)

311 
	#XK_R15
 0xf„0

	)

315 
	#XK_Shi·_L
 0xf„1

	)

316 
	#XK_Shi·_R
 0xf„2

	)

317 
	#XK_C⁄åﬁ_L
 0xf„3

	)

318 
	#XK_C⁄åﬁ_R
 0xf„4

	)

319 
	#XK_C≠s_Lock
 0xf„5

	)

320 
	#XK_Shi·_Lock
 0xf„6

	)

322 
	#XK_Mëa_L
 0xf„7

	)

323 
	#XK_Mëa_R
 0xf„8

	)

324 
	#XK_A…_L
 0xf„9

	)

325 
	#XK_A…_R
 0xf„®

	)

326 
	#XK_Su≥r_L
 0xf„b

	)

327 
	#XK_Su≥r_R
 0xf„¯

	)

328 
	#XK_Hy≥r_L
 0xf„d

	)

329 
	#XK_Hy≥r_R
 0xf„ê

	)

338 #ifde‡
XK_XKB_KEYS


339 
	#XK_ISO_Lock
 0x„01

	)

340 
	#XK_ISO_Levñ2_L©ch
 0x„02

	)

341 
	#XK_ISO_Levñ3_Shi·
 0x„03

	)

342 
	#XK_ISO_Levñ3_L©ch
 0x„04

	)

343 
	#XK_ISO_Levñ3_Lock
 0x„05

	)

344 
	#XK_ISO_Levñ5_Shi·
 0x„11

	)

345 
	#XK_ISO_Levñ5_L©ch
 0x„12

	)

346 
	#XK_ISO_Levñ5_Lock
 0x„13

	)

347 
	#XK_ISO_Group_Shi·
 0xff7ê

	)

348 
	#XK_ISO_Group_L©ch
 0x„06

	)

349 
	#XK_ISO_Group_Lock
 0x„07

	)

350 
	#XK_ISO_Next_Group
 0x„08

	)

351 
	#XK_ISO_Next_Group_Lock
 0x„09

	)

352 
	#XK_ISO_Pªv_Group
 0x„0a

	)

353 
	#XK_ISO_Pªv_Group_Lock
 0x„0b

	)

354 
	#XK_ISO_Fú°_Group
 0x„0c

	)

355 
	#XK_ISO_Fú°_Group_Lock
 0x„0d

	)

356 
	#XK_ISO_La°_Group
 0x„0e

	)

357 
	#XK_ISO_La°_Group_Lock
 0x„0f

	)

359 
	#XK_ISO_Le·_Tab
 0x„20

	)

360 
	#XK_ISO_Move_Löe_Up
 0x„21

	)

361 
	#XK_ISO_Move_Löe_Down
 0x„22

	)

362 
	#XK_ISO_P¨tül_Löe_Up
 0x„23

	)

363 
	#XK_ISO_P¨tül_Löe_Down
 0x„24

	)

364 
	#XK_ISO_P¨tül_S∑˚_Le·
 0x„25

	)

365 
	#XK_ISO_P¨tül_S∑˚_Right
 0x„26

	)

366 
	#XK_ISO_Së_M¨gö_Le·
 0x„27

	)

367 
	#XK_ISO_Së_M¨gö_Right
 0x„28

	)

368 
	#XK_ISO_Rñó£_M¨gö_Le·
 0x„29

	)

369 
	#XK_ISO_Rñó£_M¨gö_Right
 0x„2a

	)

370 
	#XK_ISO_Rñó£_BŸh_M¨gös
 0x„2b

	)

371 
	#XK_ISO_Fa°_Curs‹_Le·
 0x„2c

	)

372 
	#XK_ISO_Fa°_Curs‹_Right
 0x„2d

	)

373 
	#XK_ISO_Fa°_Curs‹_Up
 0x„2e

	)

374 
	#XK_ISO_Fa°_Curs‹_Down
 0x„2f

	)

375 
	#XK_ISO_C⁄töuous_Undîlöe
 0x„30

	)

376 
	#XK_ISO_Disc⁄töuous_Undîlöe
 0x„31

	)

377 
	#XK_ISO_Emphasize
 0x„32

	)

378 
	#XK_ISO_Cíãr_Obje˘
 0x„33

	)

379 
	#XK_ISO_E¡î
 0x„34

	)

381 
	#XK_dód_gøve
 0x„50

	)

382 
	#XK_dód_acuã
 0x„51

	)

383 
	#XK_dód_cúcumÊex
 0x„52

	)

384 
	#XK_dód_tûde
 0x„53

	)

385 
	#XK_dód_≥ri•omíi
 0x„53

	)

386 
	#XK_dód_ma¸⁄
 0x„54

	)

387 
	#XK_dód_bªve
 0x„55

	)

388 
	#XK_dód_abovedŸ
 0x„56

	)

389 
	#XK_dód_düîesis
 0x„57

	)

390 
	#XK_dód_abovîög
 0x„58

	)

391 
	#XK_dód_doubÀacuã
 0x„59

	)

392 
	#XK_dód_ˇr⁄
 0x„5a

	)

393 
	#XK_dód_˚dûœ
 0x„5b

	)

394 
	#XK_dód_og⁄ek
 0x„5c

	)

395 
	#XK_dód_iŸa
 0x„5d

	)

396 
	#XK_dód_voi˚d_sound
 0x„5e

	)

397 
	#XK_dód_£mivoi˚d_sound
 0x„5f

	)

398 
	#XK_dód_bñowdŸ
 0x„60

	)

399 
	#XK_dód_hook
 0x„61

	)

400 
	#XK_dód_h‹n
 0x„62

	)

401 
	#XK_dód_°roke
 0x„63

	)

402 
	#XK_dód_abovecomma
 0x„64

	)

403 
	#XK_dód_psûi
 0x„64

	)

404 
	#XK_dód_abovîevî£dcomma
 0x„65

	)

405 
	#XK_dód_dasü
 0x„65

	)

406 
	#XK_dód_doubÀgøve
 0x„66

	)

407 
	#XK_dód_bñowrög
 0x„67

	)

408 
	#XK_dód_bñowma¸⁄
 0x„68

	)

409 
	#XK_dód_bñowcúcumÊex
 0x„69

	)

410 
	#XK_dód_bñowtûde
 0x„6a

	)

411 
	#XK_dód_bñowbªve
 0x„6b

	)

412 
	#XK_dód_bñowdüîesis
 0x„6c

	)

413 
	#XK_dód_övîãdbªve
 0x„6d

	)

414 
	#XK_dód_bñowcomma
 0x„6e

	)

415 
	#XK_dód_cuºícy
 0x„6f

	)

418 
	#XK_dód_a
 0x„80

	)

419 
	#XK_dód_A
 0x„81

	)

420 
	#XK_dód_e
 0x„82

	)

421 
	#XK_dód_E
 0x„83

	)

422 
	#XK_dód_i
 0x„84

	)

423 
	#XK_dód_I
 0x„85

	)

424 
	#XK_dód_o
 0x„86

	)

425 
	#XK_dód_O
 0x„87

	)

426 
	#XK_dód_u
 0x„88

	)

427 
	#XK_dód_U
 0x„89

	)

428 
	#XK_dód_smÆl_schwa
 0x„8a

	)

429 
	#XK_dód_ˇpôÆ_schwa
 0x„8b

	)

431 
	#XK_Fú°_VútuÆ_S¸ìn
 0x„d0

	)

432 
	#XK_Pªv_VútuÆ_S¸ìn
 0x„d1

	)

433 
	#XK_Next_VútuÆ_S¸ìn
 0x„d2

	)

434 
	#XK_La°_VútuÆ_S¸ìn
 0x„d4

	)

435 
	#XK_Tîmö©e_Sîvî
 0x„d5

	)

437 
	#XK_Ac˚ssX_E«bÀ
 0x„70

	)

438 
	#XK_Ac˚ssX_Fìdback_E«bÀ
 0x„71

	)

439 
	#XK_RïótKeys_E«bÀ
 0x„72

	)

440 
	#XK_SlowKeys_E«bÀ
 0x„73

	)

441 
	#XK_Boun˚Keys_E«bÀ
 0x„74

	)

442 
	#XK_StickyKeys_E«bÀ
 0x„75

	)

443 
	#XK_Mou£Keys_E«bÀ
 0x„76

	)

444 
	#XK_Mou£Keys_Ac˚l_E«bÀ
 0x„77

	)

445 
	#XK_Ovîœy1_E«bÀ
 0x„78

	)

446 
	#XK_Ovîœy2_E«bÀ
 0x„79

	)

447 
	#XK_AudibÀBñl_E«bÀ
 0x„7a

	)

449 
	#XK_Poöãr_Le·
 0x„e0

	)

450 
	#XK_Poöãr_Right
 0x„e1

	)

451 
	#XK_Poöãr_Up
 0x„e2

	)

452 
	#XK_Poöãr_Down
 0x„e3

	)

453 
	#XK_Poöãr_UpLe·
 0x„e4

	)

454 
	#XK_Poöãr_UpRight
 0x„e5

	)

455 
	#XK_Poöãr_DownLe·
 0x„e6

	)

456 
	#XK_Poöãr_DownRight
 0x„e7

	)

457 
	#XK_Poöãr_Buâ⁄_DÊt
 0x„e8

	)

458 
	#XK_Poöãr_Buâ⁄1
 0x„e9

	)

459 
	#XK_Poöãr_Buâ⁄2
 0x„ó

	)

460 
	#XK_Poöãr_Buâ⁄3
 0x„eb

	)

461 
	#XK_Poöãr_Buâ⁄4
 0x„ec

	)

462 
	#XK_Poöãr_Buâ⁄5
 0x„ed

	)

463 
	#XK_Poöãr_DblClick_DÊt
 0x„ì

	)

464 
	#XK_Poöãr_DblClick1
 0x„ef

	)

465 
	#XK_Poöãr_DblClick2
 0x„f0

	)

466 
	#XK_Poöãr_DblClick3
 0x„f1

	)

467 
	#XK_Poöãr_DblClick4
 0x„f2

	)

468 
	#XK_Poöãr_DblClick5
 0x„f3

	)

469 
	#XK_Poöãr_Døg_DÊt
 0x„f4

	)

470 
	#XK_Poöãr_Døg1
 0x„f5

	)

471 
	#XK_Poöãr_Døg2
 0x„f6

	)

472 
	#XK_Poöãr_Døg3
 0x„f7

	)

473 
	#XK_Poöãr_Døg4
 0x„f8

	)

474 
	#XK_Poöãr_Døg5
 0x„fd

	)

476 
	#XK_Poöãr_E«bÀKeys
 0x„f9

	)

477 
	#XK_Poöãr_Ac˚Àøã
 0x„Á

	)

478 
	#XK_Poöãr_DÊtBäNext
 0x„fb

	)

479 
	#XK_Poöãr_DÊtBäPªv
 0x„fc

	)

488 #ifde‡
XK_3270


489 
	#XK_3270_Du∂iˇã
 0xfd01

	)

490 
	#XK_3270_FõldM¨k
 0xfd02

	)

491 
	#XK_3270_Right2
 0xfd03

	)

492 
	#XK_3270_Le·2
 0xfd04

	)

493 
	#XK_3270_BackTab
 0xfd05

	)

494 
	#XK_3270_Eø£EOF
 0xfd06

	)

495 
	#XK_3270_Eø£I≈ut
 0xfd07

	)

496 
	#XK_3270_Re£t
 0xfd08

	)

497 
	#XK_3270_Quô
 0xfd09

	)

498 
	#XK_3270_PA1
 0xfd0a

	)

499 
	#XK_3270_PA2
 0xfd0b

	)

500 
	#XK_3270_PA3
 0xfd0c

	)

501 
	#XK_3270_Te°
 0xfd0d

	)

502 
	#XK_3270_Aân
 0xfd0e

	)

503 
	#XK_3270_Curs‹Blök
 0xfd0f

	)

504 
	#XK_3270_A…Curs‹
 0xfd10

	)

505 
	#XK_3270_KeyClick
 0xfd11

	)

506 
	#XK_3270_Jump
 0xfd12

	)

507 
	#XK_3270_Idít
 0xfd13

	)

508 
	#XK_3270_RuÀ
 0xfd14

	)

509 
	#XK_3270_C›y
 0xfd15

	)

510 
	#XK_3270_Pœy
 0xfd16

	)

511 
	#XK_3270_Sëup
 0xfd17

	)

512 
	#XK_3270_Rec‹d
 0xfd18

	)

513 
	#XK_3270_Ch™geS¸ìn
 0xfd19

	)

514 
	#XK_3270_DñëeW‹d
 0xfd1a

	)

515 
	#XK_3270_ExSñe˘
 0xfd1b

	)

516 
	#XK_3270_Curs‹Sñe˘
 0xfd1c

	)

517 
	#XK_3270_PrötS¸ìn
 0xfd1d

	)

518 
	#XK_3270_E¡î
 0xfd1e

	)

526 #ifde‡
XK_LATIN1


527 
	#XK_•a˚
 0x0020

	)

528 
	#XK_ex˛am
 0x0021

	)

529 
	#XK_quŸedbl
 0x0022

	)

530 
	#XK_numbîsign
 0x0023

	)

531 
	#XK_dﬁœr
 0x0024

	)

532 
	#XK_≥r˚¡
 0x0025

	)

533 
	#XK_am≥rßnd
 0x0026

	)

534 
	#XK_≠o°r›he
 0x0027

	)

535 
	#XK_quŸîight
 0x0027

	)

536 
	#XK_∑ª∆e·
 0x0028

	)

537 
	#XK_∑ªƒight
 0x0029

	)

538 
	#XK_a°îisk
 0x002®

	)

539 
	#XK_∂us
 0x002b

	)

540 
	#XK_comma
 0x002¯

	)

541 
	#XK_möus
 0x002d

	)

542 
	#XK_≥riod
 0x002ê

	)

543 
	#XK_¶ash
 0x002‡

	)

544 
	#XK_0
 0x0030

	)

545 
	#XK_1
 0x0031

	)

546 
	#XK_2
 0x0032

	)

547 
	#XK_3
 0x0033

	)

548 
	#XK_4
 0x0034

	)

549 
	#XK_5
 0x0035

	)

550 
	#XK_6
 0x0036

	)

551 
	#XK_7
 0x0037

	)

552 
	#XK_8
 0x0038

	)

553 
	#XK_9
 0x0039

	)

554 
	#XK_cﬁ⁄
 0x003®

	)

555 
	#XK_£micﬁ⁄
 0x003b

	)

556 
	#XK_Àss
 0x003¯

	)

557 
	#XK_equÆ
 0x003d

	)

558 
	#XK_gª©î
 0x003ê

	)

559 
	#XK_que°i⁄
 0x003‡

	)

560 
	#XK_©
 0x0040

	)

561 
	#XK_A
 0x0041

	)

562 
	#XK_B
 0x0042

	)

563 
	#XK_C
 0x0043

	)

564 
	#XK_D
 0x0044

	)

565 
	#XK_E
 0x0045

	)

566 
	#XK_F
 0x0046

	)

567 
	#XK_G
 0x0047

	)

568 
	#XK_H
 0x0048

	)

569 
	#XK_I
 0x0049

	)

570 
	#XK_J
 0x004®

	)

571 
	#XK_K
 0x004b

	)

572 
	#XK_L
 0x004¯

	)

573 
	#XK_M
 0x004d

	)

574 
	#XK_N
 0x004ê

	)

575 
	#XK_O
 0x004‡

	)

576 
	#XK_P
 0x0050

	)

577 
	#XK_Q
 0x0051

	)

578 
	#XK_R
 0x0052

	)

579 
	#XK_S
 0x0053

	)

580 
	#XK_T
 0x0054

	)

581 
	#XK_U
 0x0055

	)

582 
	#XK_V
 0x0056

	)

583 
	#XK_W
 0x0057

	)

584 
	#XK_X
 0x0058

	)

585 
	#XK_Y
 0x0059

	)

586 
	#XK_Z
 0x005®

	)

587 
	#XK_bøckëÀ·
 0x005b

	)

588 
	#XK_back¶ash
 0x005¯

	)

589 
	#XK_bøckëright
 0x005d

	)

590 
	#XK_asciicúcum
 0x005ê

	)

591 
	#XK_undîsc‹e
 0x005‡

	)

592 
	#XK_gøve
 0x0060

	)

593 
	#XK_quŸñe·
 0x0060

	)

594 
	#XK_a
 0x0061

	)

595 
	#XK_b
 0x0062

	)

596 
	#XK_c
 0x0063

	)

597 
	#XK_d
 0x0064

	)

598 
	#XK_e
 0x0065

	)

599 
	#XK_f
 0x0066

	)

600 
	#XK_g
 0x0067

	)

601 
	#XK_h
 0x0068

	)

602 
	#XK_i
 0x0069

	)

603 
	#XK_j
 0x006®

	)

604 
	#XK_k
 0x006b

	)

605 
	#XK_l
 0x006¯

	)

606 
	#XK_m
 0x006d

	)

607 
	#XK_n
 0x006ê

	)

608 
	#XK_o
 0x006‡

	)

609 
	#XK_p
 0x0070

	)

610 
	#XK_q
 0x0071

	)

611 
	#XK_r
 0x0072

	)

612 
	#XK_s
 0x0073

	)

613 
	#XK_t
 0x0074

	)

614 
	#XK_u
 0x0075

	)

615 
	#XK_v
 0x0076

	)

616 
	#XK_w
 0x0077

	)

617 
	#XK_x
 0x0078

	)

618 
	#XK_y
 0x0079

	)

619 
	#XK_z
 0x007®

	)

620 
	#XK_bø˚À·
 0x007b

	)

621 
	#XK_b¨
 0x007¯

	)

622 
	#XK_bø˚right
 0x007d

	)

623 
	#XK_asciôûde
 0x007ê

	)

625 
	#XK_nobªak•a˚
 0x00a0

	)

626 
	#XK_ex˛amdown
 0x00a1

	)

627 
	#XK_˚¡
 0x00a2

	)

628 
	#XK_°îlög
 0x00a3

	)

629 
	#XK_cuºícy
 0x00a4

	)

630 
	#XK_yí
 0x00a5

	)

631 
	#XK_brokíb¨
 0x00a6

	)

632 
	#XK_£˘i⁄
 0x00a7

	)

633 
	#XK_düîesis
 0x00a8

	)

634 
	#XK_c›yright
 0x00a9

	)

635 
	#XK_‹d„mööe
 0x00Ø

	)

636 
	#XK_guûÀmŸÀ·
 0x00ab

	)

637 
	#XK_nŸsign
 0x00a¯

	)

638 
	#XK_hyphí
 0x00ad

	)

639 
	#XK_ªgi°îed
 0x00´

	)

640 
	#XK_ma¸⁄
 0x00a‡

	)

641 
	#XK_degªe
 0x00b0

	)

642 
	#XK_∂usmöus
 0x00b1

	)

643 
	#XK_twosu≥ri‹
 0x00b2

	)

644 
	#XK_thªesu≥ri‹
 0x00b3

	)

645 
	#XK_acuã
 0x00b4

	)

646 
	#XK_mu
 0x00b5

	)

647 
	#XK_∑øgøph
 0x00b6

	)

648 
	#XK_≥riod˚¡îed
 0x00b7

	)

649 
	#XK_˚dûœ
 0x00b8

	)

650 
	#XK_⁄esu≥ri‹
 0x00b9

	)

651 
	#XK_masculöe
 0x00b®

	)

652 
	#XK_guûÀmŸright
 0x00bb

	)

653 
	#XK_⁄equ¨ãr
 0x00b¯

	)

654 
	#XK_⁄ehÆf
 0x00bd

	)

655 
	#XK_thªequ¨ãrs
 0x00bê

	)

656 
	#XK_que°i⁄down
 0x00b‡

	)

657 
	#XK_Agøve
 0x00c0

	)

658 
	#XK_Aacuã
 0x00c1

	)

659 
	#XK_AcúcumÊex
 0x00c2

	)

660 
	#XK_Atûde
 0x00c3

	)

661 
	#XK_Adüîesis
 0x00c4

	)

662 
	#XK_Arög
 0x00c5

	)

663 
	#XK_AE
 0x00c6

	)

664 
	#XK_C˚dûœ
 0x00c7

	)

665 
	#XK_Egøve
 0x00c8

	)

666 
	#XK_Eacuã
 0x00c9

	)

667 
	#XK_EcúcumÊex
 0x00ˇ

	)

668 
	#XK_Edüîesis
 0x00cb

	)

669 
	#XK_Igøve
 0x00c¯

	)

670 
	#XK_Iacuã
 0x00cd

	)

671 
	#XK_IcúcumÊex
 0x00˚

	)

672 
	#XK_Idüîesis
 0x00c‡

	)

673 
	#XK_ETH
 0x00d0

	)

674 
	#XK_Eth
 0x00d0

	)

675 
	#XK_Ntûde
 0x00d1

	)

676 
	#XK_Ogøve
 0x00d2

	)

677 
	#XK_Oacuã
 0x00d3

	)

678 
	#XK_OcúcumÊex
 0x00d4

	)

679 
	#XK_Otûde
 0x00d5

	)

680 
	#XK_Odüîesis
 0x00d6

	)

681 
	#XK_mu…ùly
 0x00d7

	)

682 
	#XK_O¶ash
 0x00d8

	)

683 
	#XK_Ooblique
 0x00d8

	)

684 
	#XK_Ugøve
 0x00d9

	)

685 
	#XK_Uacuã
 0x00d®

	)

686 
	#XK_UcúcumÊex
 0x00db

	)

687 
	#XK_Udüîesis
 0x00d¯

	)

688 
	#XK_Yacuã
 0x00dd

	)

689 
	#XK_THORN
 0x00dê

	)

690 
	#XK_Th‹n
 0x00dê

	)

691 
	#XK_ssh¨p
 0x00d‡

	)

692 
	#XK_agøve
 0x00e0

	)

693 
	#XK_Øcuã
 0x00e1

	)

694 
	#XK_acúcumÊex
 0x00e2

	)

695 
	#XK_©ûde
 0x00e3

	)

696 
	#XK_adüîesis
 0x00e4

	)

697 
	#XK_¨ög
 0x00e5

	)

698 
	#XK_´
 0x00e6

	)

699 
	#XK_c˚dûœ
 0x00e7

	)

700 
	#XK_egøve
 0x00e8

	)

701 
	#XK_ócuã
 0x00e9

	)

702 
	#XK_ecúcumÊex
 0x00ó

	)

703 
	#XK_edüîesis
 0x00eb

	)

704 
	#XK_igøve
 0x00e¯

	)

705 
	#XK_ücuã
 0x00ed

	)

706 
	#XK_icúcumÊex
 0x00ì

	)

707 
	#XK_idüîesis
 0x00e‡

	)

708 
	#XK_ëh
 0x00f0

	)

709 
	#XK_¡ûde
 0x00f1

	)

710 
	#XK_ogøve
 0x00f2

	)

711 
	#XK_ﬂcuã
 0x00f3

	)

712 
	#XK_ocúcumÊex
 0x00f4

	)

713 
	#XK_Ÿûde
 0x00f5

	)

714 
	#XK_odüîesis
 0x00f6

	)

715 
	#XK_divisi⁄
 0x00f7

	)

716 
	#XK_o¶ash
 0x00f8

	)

717 
	#XK_ooblique
 0x00f8

	)

718 
	#XK_ugøve
 0x00f9

	)

719 
	#XK_uacuã
 0x00Á

	)

720 
	#XK_ucúcumÊex
 0x00fb

	)

721 
	#XK_udüîesis
 0x00f¯

	)

722 
	#XK_yacuã
 0x00fd

	)

723 
	#XK_th‹n
 0x00„

	)

724 
	#XK_ydüîesis
 0x00f‡

	)

732 #ifde‡
XK_LATIN2


733 
	#XK_Aog⁄ek
 0x01a1

	)

734 
	#XK_bªve
 0x01a2

	)

735 
	#XK_L°roke
 0x01a3

	)

736 
	#XK_Lˇr⁄
 0x01a5

	)

737 
	#XK_Sacuã
 0x01a6

	)

738 
	#XK_Sˇr⁄
 0x01a9

	)

739 
	#XK_S˚dûœ
 0x01Ø

	)

740 
	#XK_Tˇr⁄
 0x01ab

	)

741 
	#XK_Zacuã
 0x01a¯

	)

742 
	#XK_Zˇr⁄
 0x01´

	)

743 
	#XK_ZabovedŸ
 0x01a‡

	)

744 
	#XK_aog⁄ek
 0x01b1

	)

745 
	#XK_og⁄ek
 0x01b2

	)

746 
	#XK_l°roke
 0x01b3

	)

747 
	#XK_lˇr⁄
 0x01b5

	)

748 
	#XK_ßcuã
 0x01b6

	)

749 
	#XK_ˇr⁄
 0x01b7

	)

750 
	#XK_sˇr⁄
 0x01b9

	)

751 
	#XK_s˚dûœ
 0x01b®

	)

752 
	#XK_tˇr⁄
 0x01bb

	)

753 
	#XK_zacuã
 0x01b¯

	)

754 
	#XK_doubÀacuã
 0x01bd

	)

755 
	#XK_zˇr⁄
 0x01bê

	)

756 
	#XK_zabovedŸ
 0x01b‡

	)

757 
	#XK_Racuã
 0x01c0

	)

758 
	#XK_Abªve
 0x01c3

	)

759 
	#XK_Lacuã
 0x01c5

	)

760 
	#XK_Cacuã
 0x01c6

	)

761 
	#XK_Cˇr⁄
 0x01c8

	)

762 
	#XK_Eog⁄ek
 0x01ˇ

	)

763 
	#XK_Eˇr⁄
 0x01c¯

	)

764 
	#XK_Dˇr⁄
 0x01c‡

	)

765 
	#XK_D°roke
 0x01d0

	)

766 
	#XK_Nacuã
 0x01d1

	)

767 
	#XK_Nˇr⁄
 0x01d2

	)

768 
	#XK_OdoubÀacuã
 0x01d5

	)

769 
	#XK_Rˇr⁄
 0x01d8

	)

770 
	#XK_Urög
 0x01d9

	)

771 
	#XK_UdoubÀacuã
 0x01db

	)

772 
	#XK_T˚dûœ
 0x01dê

	)

773 
	#XK_øcuã
 0x01e0

	)

774 
	#XK_abªve
 0x01e3

	)

775 
	#XK_œcuã
 0x01e5

	)

776 
	#XK_ˇcuã
 0x01e6

	)

777 
	#XK_cˇr⁄
 0x01e8

	)

778 
	#XK_eog⁄ek
 0x01ó

	)

779 
	#XK_eˇr⁄
 0x01e¯

	)

780 
	#XK_dˇr⁄
 0x01e‡

	)

781 
	#XK_d°roke
 0x01f0

	)

782 
	#XK_«cuã
 0x01f1

	)

783 
	#XK_nˇr⁄
 0x01f2

	)

784 
	#XK_odoubÀacuã
 0x01f5

	)

785 
	#XK_udoubÀacuã
 0x01fb

	)

786 
	#XK_rˇr⁄
 0x01f8

	)

787 
	#XK_urög
 0x01f9

	)

788 
	#XK_t˚dûœ
 0x01„

	)

789 
	#XK_abovedŸ
 0x01f‡

	)

797 #ifde‡
XK_LATIN3


798 
	#XK_H°roke
 0x02a1

	)

799 
	#XK_HcúcumÊex
 0x02a6

	)

800 
	#XK_IabovedŸ
 0x02a9

	)

801 
	#XK_Gbªve
 0x02ab

	)

802 
	#XK_JcúcumÊex
 0x02a¯

	)

803 
	#XK_h°roke
 0x02b1

	)

804 
	#XK_hcúcumÊex
 0x02b6

	)

805 
	#XK_idŸÀss
 0x02b9

	)

806 
	#XK_gbªve
 0x02bb

	)

807 
	#XK_jcúcumÊex
 0x02b¯

	)

808 
	#XK_CabovedŸ
 0x02c5

	)

809 
	#XK_CcúcumÊex
 0x02c6

	)

810 
	#XK_GabovedŸ
 0x02d5

	)

811 
	#XK_GcúcumÊex
 0x02d8

	)

812 
	#XK_Ubªve
 0x02dd

	)

813 
	#XK_ScúcumÊex
 0x02dê

	)

814 
	#XK_ˇbovedŸ
 0x02e5

	)

815 
	#XK_ccúcumÊex
 0x02e6

	)

816 
	#XK_gabovedŸ
 0x02f5

	)

817 
	#XK_gcúcumÊex
 0x02f8

	)

818 
	#XK_ubªve
 0x02fd

	)

819 
	#XK_scúcumÊex
 0x02„

	)

828 #ifde‡
XK_LATIN4


829 
	#XK_kø
 0x03a2

	)

830 
	#XK_k≠∑
 0x03a2

	)

831 
	#XK_R˚dûœ
 0x03a3

	)

832 
	#XK_Itûde
 0x03a5

	)

833 
	#XK_L˚dûœ
 0x03a6

	)

834 
	#XK_Ema¸⁄
 0x03Ø

	)

835 
	#XK_G˚dûœ
 0x03ab

	)

836 
	#XK_T¶ash
 0x03a¯

	)

837 
	#XK_r˚dûœ
 0x03b3

	)

838 
	#XK_ôûde
 0x03b5

	)

839 
	#XK_l˚dûœ
 0x03b6

	)

840 
	#XK_ema¸⁄
 0x03b®

	)

841 
	#XK_g˚dûœ
 0x03bb

	)

842 
	#XK_t¶ash
 0x03b¯

	)

843 
	#XK_ENG
 0x03bd

	)

844 
	#XK_íg
 0x03b‡

	)

845 
	#XK_Ama¸⁄
 0x03c0

	)

846 
	#XK_Iog⁄ek
 0x03c7

	)

847 
	#XK_EabovedŸ
 0x03c¯

	)

848 
	#XK_Ima¸⁄
 0x03c‡

	)

849 
	#XK_N˚dûœ
 0x03d1

	)

850 
	#XK_Oma¸⁄
 0x03d2

	)

851 
	#XK_K˚dûœ
 0x03d3

	)

852 
	#XK_Uog⁄ek
 0x03d9

	)

853 
	#XK_Utûde
 0x03dd

	)

854 
	#XK_Uma¸⁄
 0x03dê

	)

855 
	#XK_ama¸⁄
 0x03e0

	)

856 
	#XK_iog⁄ek
 0x03e7

	)

857 
	#XK_óbovedŸ
 0x03e¯

	)

858 
	#XK_ima¸⁄
 0x03e‡

	)

859 
	#XK_n˚dûœ
 0x03f1

	)

860 
	#XK_oma¸⁄
 0x03f2

	)

861 
	#XK_k˚dûœ
 0x03f3

	)

862 
	#XK_uog⁄ek
 0x03f9

	)

863 
	#XK_utûde
 0x03fd

	)

864 
	#XK_uma¸⁄
 0x03„

	)

870 #ifde‡
XK_LATIN8


871 
	#XK_BabovedŸ
 0x1001e02

	)

872 
	#XK_babovedŸ
 0x1001e03

	)

873 
	#XK_DabovedŸ
 0x1001e0®

	)

874 
	#XK_Wgøve
 0x1001e80

	)

875 
	#XK_Wacuã
 0x1001e82

	)

876 
	#XK_dabovedŸ
 0x1001e0b

	)

877 
	#XK_Ygøve
 0x1001ef2

	)

878 
	#XK_FabovedŸ
 0x1001e1ê

	)

879 
	#XK_ÁbovedŸ
 0x1001e1‡

	)

880 
	#XK_MabovedŸ
 0x1001e40

	)

881 
	#XK_mabovedŸ
 0x1001e41

	)

882 
	#XK_PabovedŸ
 0x1001e56

	)

883 
	#XK_wgøve
 0x1001e81

	)

884 
	#XK_∑bovedŸ
 0x1001e57

	)

885 
	#XK_wacuã
 0x1001e83

	)

886 
	#XK_SabovedŸ
 0x1001e60

	)

887 
	#XK_ygøve
 0x1001ef3

	)

888 
	#XK_Wdüîesis
 0x1001e84

	)

889 
	#XK_wdüîesis
 0x1001e85

	)

890 
	#XK_ßbovedŸ
 0x1001e61

	)

891 
	#XK_WcúcumÊex
 0x1000174

	)

892 
	#XK_TabovedŸ
 0x1001e6®

	)

893 
	#XK_YcúcumÊex
 0x1000176

	)

894 
	#XK_wcúcumÊex
 0x1000175

	)

895 
	#XK_èbovedŸ
 0x1001e6b

	)

896 
	#XK_ycúcumÊex
 0x1000177

	)

904 #ifde‡
XK_LATIN9


905 
	#XK_OE
 0x13b¯

	)

906 
	#XK_€
 0x13bd

	)

907 
	#XK_Ydüîesis
 0x13bê

	)

915 #ifde‡
XK_KATAKANA


916 
	#XK_ovîlöe
 0x047ê

	)

917 
	#XK_k™a_fuŒ°›
 0x04a1

	)

918 
	#XK_k™a_›íögbøckë
 0x04a2

	)

919 
	#XK_k™a_˛osögbøckë
 0x04a3

	)

920 
	#XK_k™a_comma
 0x04a4

	)

921 
	#XK_k™a_c⁄jun˘ive
 0x04a5

	)

922 
	#XK_k™a_middÀdŸ
 0x04a5

	)

923 
	#XK_k™a_WO
 0x04a6

	)

924 
	#XK_k™a_a
 0x04a7

	)

925 
	#XK_k™a_i
 0x04a8

	)

926 
	#XK_k™a_u
 0x04a9

	)

927 
	#XK_k™a_e
 0x04Ø

	)

928 
	#XK_k™a_o
 0x04ab

	)

929 
	#XK_k™a_ya
 0x04a¯

	)

930 
	#XK_k™a_yu
 0x04ad

	)

931 
	#XK_k™a_yo
 0x04´

	)

932 
	#XK_k™a_tsu
 0x04a‡

	)

933 
	#XK_k™a_tu
 0x04a‡

	)

934 
	#XK_¥ﬁ⁄gedsound
 0x04b0

	)

935 
	#XK_k™a_A
 0x04b1

	)

936 
	#XK_k™a_I
 0x04b2

	)

937 
	#XK_k™a_U
 0x04b3

	)

938 
	#XK_k™a_E
 0x04b4

	)

939 
	#XK_k™a_O
 0x04b5

	)

940 
	#XK_k™a_KA
 0x04b6

	)

941 
	#XK_k™a_KI
 0x04b7

	)

942 
	#XK_k™a_KU
 0x04b8

	)

943 
	#XK_k™a_KE
 0x04b9

	)

944 
	#XK_k™a_KO
 0x04b®

	)

945 
	#XK_k™a_SA
 0x04bb

	)

946 
	#XK_k™a_SHI
 0x04b¯

	)

947 
	#XK_k™a_SU
 0x04bd

	)

948 
	#XK_k™a_SE
 0x04bê

	)

949 
	#XK_k™a_SO
 0x04b‡

	)

950 
	#XK_k™a_TA
 0x04c0

	)

951 
	#XK_k™a_CHI
 0x04c1

	)

952 
	#XK_k™a_TI
 0x04c1

	)

953 
	#XK_k™a_TSU
 0x04c2

	)

954 
	#XK_k™a_TU
 0x04c2

	)

955 
	#XK_k™a_TE
 0x04c3

	)

956 
	#XK_k™a_TO
 0x04c4

	)

957 
	#XK_k™a_NA
 0x04c5

	)

958 
	#XK_k™a_NI
 0x04c6

	)

959 
	#XK_k™a_NU
 0x04c7

	)

960 
	#XK_k™a_NE
 0x04c8

	)

961 
	#XK_k™a_NO
 0x04c9

	)

962 
	#XK_k™a_HA
 0x04ˇ

	)

963 
	#XK_k™a_HI
 0x04cb

	)

964 
	#XK_k™a_FU
 0x04c¯

	)

965 
	#XK_k™a_HU
 0x04c¯

	)

966 
	#XK_k™a_HE
 0x04cd

	)

967 
	#XK_k™a_HO
 0x04˚

	)

968 
	#XK_k™a_MA
 0x04c‡

	)

969 
	#XK_k™a_MI
 0x04d0

	)

970 
	#XK_k™a_MU
 0x04d1

	)

971 
	#XK_k™a_ME
 0x04d2

	)

972 
	#XK_k™a_MO
 0x04d3

	)

973 
	#XK_k™a_YA
 0x04d4

	)

974 
	#XK_k™a_YU
 0x04d5

	)

975 
	#XK_k™a_YO
 0x04d6

	)

976 
	#XK_k™a_RA
 0x04d7

	)

977 
	#XK_k™a_RI
 0x04d8

	)

978 
	#XK_k™a_RU
 0x04d9

	)

979 
	#XK_k™a_RE
 0x04d®

	)

980 
	#XK_k™a_RO
 0x04db

	)

981 
	#XK_k™a_WA
 0x04d¯

	)

982 
	#XK_k™a_N
 0x04dd

	)

983 
	#XK_voi˚dsound
 0x04dê

	)

984 
	#XK_£mivoi˚dsound
 0x04d‡

	)

985 
	#XK_k™a_swôch
 0xff7ê

	)

993 #ifde‡
XK_ARABIC


994 
	#XK_F¨si_0
 0x10006f0

	)

995 
	#XK_F¨si_1
 0x10006f1

	)

996 
	#XK_F¨si_2
 0x10006f2

	)

997 
	#XK_F¨si_3
 0x10006f3

	)

998 
	#XK_F¨si_4
 0x10006f4

	)

999 
	#XK_F¨si_5
 0x10006f5

	)

1000 
	#XK_F¨si_6
 0x10006f6

	)

1001 
	#XK_F¨si_7
 0x10006f7

	)

1002 
	#XK_F¨si_8
 0x10006f8

	)

1003 
	#XK_F¨si_9
 0x10006f9

	)

1004 
	#XK_Aøbic_≥r˚¡
 0x100066®

	)

1005 
	#XK_Aøbic_su≥rs¸ùt_Æef
 0x1000670

	)

1006 
	#XK_Aøbic_âeh
 0x1000679

	)

1007 
	#XK_Aøbic_≥h
 0x100067ê

	)

1008 
	#XK_Aøbic_tcheh
 0x1000686

	)

1009 
	#XK_Aøbic_ddÆ
 0x1000688

	)

1010 
	#XK_Aøbic_ºeh
 0x1000691

	)

1011 
	#XK_Aøbic_comma
 0x05a¯

	)

1012 
	#XK_Aøbic_fuŒ°›
 0x10006d4

	)

1013 
	#XK_Aøbic_0
 0x1000660

	)

1014 
	#XK_Aøbic_1
 0x1000661

	)

1015 
	#XK_Aøbic_2
 0x1000662

	)

1016 
	#XK_Aøbic_3
 0x1000663

	)

1017 
	#XK_Aøbic_4
 0x1000664

	)

1018 
	#XK_Aøbic_5
 0x1000665

	)

1019 
	#XK_Aøbic_6
 0x1000666

	)

1020 
	#XK_Aøbic_7
 0x1000667

	)

1021 
	#XK_Aøbic_8
 0x1000668

	)

1022 
	#XK_Aøbic_9
 0x1000669

	)

1023 
	#XK_Aøbic_£micﬁ⁄
 0x05bb

	)

1024 
	#XK_Aøbic_que°i⁄_m¨k
 0x05b‡

	)

1025 
	#XK_Aøbic_hamza
 0x05c1

	)

1026 
	#XK_Aøbic_madda⁄Æef
 0x05c2

	)

1027 
	#XK_Aøbic_hamza⁄Æef
 0x05c3

	)

1028 
	#XK_Aøbic_hamza⁄waw
 0x05c4

	)

1029 
	#XK_Aøbic_hamzaundîÆef
 0x05c5

	)

1030 
	#XK_Aøbic_hamza⁄yeh
 0x05c6

	)

1031 
	#XK_Aøbic_Æef
 0x05c7

	)

1032 
	#XK_Aøbic_beh
 0x05c8

	)

1033 
	#XK_Aøbic_ãhm¨buè
 0x05c9

	)

1034 
	#XK_Aøbic_ãh
 0x05ˇ

	)

1035 
	#XK_Aøbic_theh
 0x05cb

	)

1036 
	#XK_Aøbic_jìm
 0x05c¯

	)

1037 
	#XK_Aøbic_hah
 0x05cd

	)

1038 
	#XK_Aøbic_khah
 0x05˚

	)

1039 
	#XK_Aøbic_dÆ
 0x05c‡

	)

1040 
	#XK_Aøbic_thÆ
 0x05d0

	)

1041 
	#XK_Aøbic_ø
 0x05d1

	)

1042 
	#XK_Aøbic_zaö
 0x05d2

	)

1043 
	#XK_Aøbic_£í
 0x05d3

	)

1044 
	#XK_Aøbic_shìn
 0x05d4

	)

1045 
	#XK_Aøbic_ßd
 0x05d5

	)

1046 
	#XK_Aøbic_dad
 0x05d6

	)

1047 
	#XK_Aøbic_èh
 0x05d7

	)

1048 
	#XK_Aøbic_zah
 0x05d8

	)

1049 
	#XK_Aøbic_aö
 0x05d9

	)

1050 
	#XK_Aøbic_ghaö
 0x05d®

	)

1051 
	#XK_Aøbic_ètwìl
 0x05e0

	)

1052 
	#XK_Aøbic_„h
 0x05e1

	)

1053 
	#XK_Aøbic_qaf
 0x05e2

	)

1054 
	#XK_Aøbic_kaf
 0x05e3

	)

1055 
	#XK_Aøbic_œm
 0x05e4

	)

1056 
	#XK_Aøbic_mìm
 0x05e5

	)

1057 
	#XK_Aøbic_no⁄
 0x05e6

	)

1058 
	#XK_Aøbic_ha
 0x05e7

	)

1059 
	#XK_Aøbic_heh
 0x05e7

	)

1060 
	#XK_Aøbic_waw
 0x05e8

	)

1061 
	#XK_Aøbic_Æefmaksuø
 0x05e9

	)

1062 
	#XK_Aøbic_yeh
 0x05ó

	)

1063 
	#XK_Aøbic_Áth©™
 0x05eb

	)

1064 
	#XK_Aøbic_damm©™
 0x05e¯

	)

1065 
	#XK_Aøbic_ka§©™
 0x05ed

	)

1066 
	#XK_Aøbic_Átha
 0x05ì

	)

1067 
	#XK_Aøbic_damma
 0x05e‡

	)

1068 
	#XK_Aøbic_ka§a
 0x05f0

	)

1069 
	#XK_Aøbic_shadda
 0x05f1

	)

1070 
	#XK_Aøbic_sukun
 0x05f2

	)

1071 
	#XK_Aøbic_madda_above
 0x1000653

	)

1072 
	#XK_Aøbic_hamza_above
 0x1000654

	)

1073 
	#XK_Aøbic_hamza_bñow
 0x1000655

	)

1074 
	#XK_Aøbic_jeh
 0x1000698

	)

1075 
	#XK_Aøbic_veh
 0x10006a4

	)

1076 
	#XK_Aøbic_keheh
 0x10006a9

	)

1077 
	#XK_Aøbic_gaf
 0x10006a‡

	)

1078 
	#XK_Aøbic_no⁄_ghu¬a
 0x10006b®

	)

1079 
	#XK_Aøbic_heh_dﬂchashmì
 0x10006bê

	)

1080 
	#XK_F¨si_yeh
 0x10006c¯

	)

1081 
	#XK_Aøbic_Ársi_yeh
 0x10006c¯

	)

1082 
	#XK_Aøbic_yeh_b¨ì
 0x10006d2

	)

1083 
	#XK_Aøbic_heh_gﬂl
 0x10006c1

	)

1084 
	#XK_Aøbic_swôch
 0xff7ê

	)

1091 #ifde‡
XK_CYRILLIC


1092 
	#XK_Cyrûlic_GHE_b¨
 0x1000492

	)

1093 
	#XK_Cyrûlic_ghe_b¨
 0x1000493

	)

1094 
	#XK_Cyrûlic_ZHE_des˚ndî
 0x1000496

	)

1095 
	#XK_Cyrûlic_zhe_des˚ndî
 0x1000497

	)

1096 
	#XK_Cyrûlic_KA_des˚ndî
 0x100049®

	)

1097 
	#XK_Cyrûlic_ka_des˚ndî
 0x100049b

	)

1098 
	#XK_Cyrûlic_KA_vît°roke
 0x100049¯

	)

1099 
	#XK_Cyrûlic_ka_vît°roke
 0x100049d

	)

1100 
	#XK_Cyrûlic_EN_des˚ndî
 0x10004a2

	)

1101 
	#XK_Cyrûlic_í_des˚ndî
 0x10004a3

	)

1102 
	#XK_Cyrûlic_U_°øight
 0x10004´

	)

1103 
	#XK_Cyrûlic_u_°øight
 0x10004a‡

	)

1104 
	#XK_Cyrûlic_U_°øight_b¨
 0x10004b0

	)

1105 
	#XK_Cyrûlic_u_°øight_b¨
 0x10004b1

	)

1106 
	#XK_Cyrûlic_HA_des˚ndî
 0x10004b2

	)

1107 
	#XK_Cyrûlic_ha_des˚ndî
 0x10004b3

	)

1108 
	#XK_Cyrûlic_CHE_des˚ndî
 0x10004b6

	)

1109 
	#XK_Cyrûlic_che_des˚ndî
 0x10004b7

	)

1110 
	#XK_Cyrûlic_CHE_vît°roke
 0x10004b8

	)

1111 
	#XK_Cyrûlic_che_vît°roke
 0x10004b9

	)

1112 
	#XK_Cyrûlic_SHHA
 0x10004b®

	)

1113 
	#XK_Cyrûlic_shha
 0x10004bb

	)

1115 
	#XK_Cyrûlic_SCHWA
 0x10004d8

	)

1116 
	#XK_Cyrûlic_schwa
 0x10004d9

	)

1117 
	#XK_Cyrûlic_I_ma¸⁄
 0x10004e2

	)

1118 
	#XK_Cyrûlic_i_ma¸⁄
 0x10004e3

	)

1119 
	#XK_Cyrûlic_O_b¨
 0x10004e8

	)

1120 
	#XK_Cyrûlic_o_b¨
 0x10004e9

	)

1121 
	#XK_Cyrûlic_U_ma¸⁄
 0x10004ì

	)

1122 
	#XK_Cyrûlic_u_ma¸⁄
 0x10004e‡

	)

1124 
	#XK_Sîbün_dje
 0x06a1

	)

1125 
	#XK_Ma˚d⁄ü_gje
 0x06a2

	)

1126 
	#XK_Cyrûlic_io
 0x06a3

	)

1127 
	#XK_Ukøöün_õ
 0x06a4

	)

1128 
	#XK_Ukønün_je
 0x06a4

	)

1129 
	#XK_Ma˚d⁄ü_d£
 0x06a5

	)

1130 
	#XK_Ukøöün_i
 0x06a6

	)

1131 
	#XK_Ukønün_i
 0x06a6

	)

1132 
	#XK_Ukøöün_yi
 0x06a7

	)

1133 
	#XK_Ukønün_yi
 0x06a7

	)

1134 
	#XK_Cyrûlic_je
 0x06a8

	)

1135 
	#XK_Sîbün_je
 0x06a8

	)

1136 
	#XK_Cyrûlic_lje
 0x06a9

	)

1137 
	#XK_Sîbün_lje
 0x06a9

	)

1138 
	#XK_Cyrûlic_nje
 0x06Ø

	)

1139 
	#XK_Sîbün_nje
 0x06Ø

	)

1140 
	#XK_Sîbün_tshe
 0x06ab

	)

1141 
	#XK_Ma˚d⁄ü_kje
 0x06a¯

	)

1142 
	#XK_Ukøöün_ghe_wôh_u±u∫
 0x06ad

	)

1143 
	#XK_Byñ‹ussün_sh‹tu
 0x06´

	)

1144 
	#XK_Cyrûlic_dzhe
 0x06a‡

	)

1145 
	#XK_Sîbün_dze
 0x06a‡

	)

1146 
	#XK_numîosign
 0x06b0

	)

1147 
	#XK_Sîbün_DJE
 0x06b1

	)

1148 
	#XK_Ma˚d⁄ü_GJE
 0x06b2

	)

1149 
	#XK_Cyrûlic_IO
 0x06b3

	)

1150 
	#XK_Ukøöün_IE
 0x06b4

	)

1151 
	#XK_Ukønün_JE
 0x06b4

	)

1152 
	#XK_Ma˚d⁄ü_DSE
 0x06b5

	)

1153 
	#XK_Ukøöün_I
 0x06b6

	)

1154 
	#XK_Ukønün_I
 0x06b6

	)

1155 
	#XK_Ukøöün_YI
 0x06b7

	)

1156 
	#XK_Ukønün_YI
 0x06b7

	)

1157 
	#XK_Cyrûlic_JE
 0x06b8

	)

1158 
	#XK_Sîbün_JE
 0x06b8

	)

1159 
	#XK_Cyrûlic_LJE
 0x06b9

	)

1160 
	#XK_Sîbün_LJE
 0x06b9

	)

1161 
	#XK_Cyrûlic_NJE
 0x06b®

	)

1162 
	#XK_Sîbün_NJE
 0x06b®

	)

1163 
	#XK_Sîbün_TSHE
 0x06bb

	)

1164 
	#XK_Ma˚d⁄ü_KJE
 0x06b¯

	)

1165 
	#XK_Ukøöün_GHE_WITH_UPTURN
 0x06bd

	)

1166 
	#XK_Byñ‹ussün_SHORTU
 0x06bê

	)

1167 
	#XK_Cyrûlic_DZHE
 0x06b‡

	)

1168 
	#XK_Sîbün_DZE
 0x06b‡

	)

1169 
	#XK_Cyrûlic_yu
 0x06c0

	)

1170 
	#XK_Cyrûlic_a
 0x06c1

	)

1171 
	#XK_Cyrûlic_be
 0x06c2

	)

1172 
	#XK_Cyrûlic_t£
 0x06c3

	)

1173 
	#XK_Cyrûlic_de
 0x06c4

	)

1174 
	#XK_Cyrûlic_õ
 0x06c5

	)

1175 
	#XK_Cyrûlic_ef
 0x06c6

	)

1176 
	#XK_Cyrûlic_ghe
 0x06c7

	)

1177 
	#XK_Cyrûlic_ha
 0x06c8

	)

1178 
	#XK_Cyrûlic_i
 0x06c9

	)

1179 
	#XK_Cyrûlic_sh‹ti
 0x06ˇ

	)

1180 
	#XK_Cyrûlic_ka
 0x06cb

	)

1181 
	#XK_Cyrûlic_ñ
 0x06c¯

	)

1182 
	#XK_Cyrûlic_em
 0x06cd

	)

1183 
	#XK_Cyrûlic_í
 0x06˚

	)

1184 
	#XK_Cyrûlic_o
 0x06c‡

	)

1185 
	#XK_Cyrûlic_≥
 0x06d0

	)

1186 
	#XK_Cyrûlic_ya
 0x06d1

	)

1187 
	#XK_Cyrûlic_î
 0x06d2

	)

1188 
	#XK_Cyrûlic_es
 0x06d3

	)

1189 
	#XK_Cyrûlic_ã
 0x06d4

	)

1190 
	#XK_Cyrûlic_u
 0x06d5

	)

1191 
	#XK_Cyrûlic_zhe
 0x06d6

	)

1192 
	#XK_Cyrûlic_ve
 0x06d7

	)

1193 
	#XK_Cyrûlic_so·sign
 0x06d8

	)

1194 
	#XK_Cyrûlic_yîu
 0x06d9

	)

1195 
	#XK_Cyrûlic_ze
 0x06d®

	)

1196 
	#XK_Cyrûlic_sha
 0x06db

	)

1197 
	#XK_Cyrûlic_e
 0x06d¯

	)

1198 
	#XK_Cyrûlic_shcha
 0x06dd

	)

1199 
	#XK_Cyrûlic_che
 0x06dê

	)

1200 
	#XK_Cyrûlic_h¨dsign
 0x06d‡

	)

1201 
	#XK_Cyrûlic_YU
 0x06e0

	)

1202 
	#XK_Cyrûlic_A
 0x06e1

	)

1203 
	#XK_Cyrûlic_BE
 0x06e2

	)

1204 
	#XK_Cyrûlic_TSE
 0x06e3

	)

1205 
	#XK_Cyrûlic_DE
 0x06e4

	)

1206 
	#XK_Cyrûlic_IE
 0x06e5

	)

1207 
	#XK_Cyrûlic_EF
 0x06e6

	)

1208 
	#XK_Cyrûlic_GHE
 0x06e7

	)

1209 
	#XK_Cyrûlic_HA
 0x06e8

	)

1210 
	#XK_Cyrûlic_I
 0x06e9

	)

1211 
	#XK_Cyrûlic_SHORTI
 0x06ó

	)

1212 
	#XK_Cyrûlic_KA
 0x06eb

	)

1213 
	#XK_Cyrûlic_EL
 0x06e¯

	)

1214 
	#XK_Cyrûlic_EM
 0x06ed

	)

1215 
	#XK_Cyrûlic_EN
 0x06ì

	)

1216 
	#XK_Cyrûlic_O
 0x06e‡

	)

1217 
	#XK_Cyrûlic_PE
 0x06f0

	)

1218 
	#XK_Cyrûlic_YA
 0x06f1

	)

1219 
	#XK_Cyrûlic_ER
 0x06f2

	)

1220 
	#XK_Cyrûlic_ES
 0x06f3

	)

1221 
	#XK_Cyrûlic_TE
 0x06f4

	)

1222 
	#XK_Cyrûlic_U
 0x06f5

	)

1223 
	#XK_Cyrûlic_ZHE
 0x06f6

	)

1224 
	#XK_Cyrûlic_VE
 0x06f7

	)

1225 
	#XK_Cyrûlic_SOFTSIGN
 0x06f8

	)

1226 
	#XK_Cyrûlic_YERU
 0x06f9

	)

1227 
	#XK_Cyrûlic_ZE
 0x06Á

	)

1228 
	#XK_Cyrûlic_SHA
 0x06fb

	)

1229 
	#XK_Cyrûlic_E
 0x06f¯

	)

1230 
	#XK_Cyrûlic_SHCHA
 0x06fd

	)

1231 
	#XK_Cyrûlic_CHE
 0x06„

	)

1232 
	#XK_Cyrûlic_HARDSIGN
 0x06f‡

	)

1241 #ifde‡
XK_GREEK


1242 
	#XK_Gªek_ALPHAac˚¡
 0x07a1

	)

1243 
	#XK_Gªek_EPSILONac˚¡
 0x07a2

	)

1244 
	#XK_Gªek_ETAac˚¡
 0x07a3

	)

1245 
	#XK_Gªek_IOTAac˚¡
 0x07a4

	)

1246 
	#XK_Gªek_IOTAdõªsis
 0x07a5

	)

1247 
	#XK_Gªek_IOTAdüîesis
 0x07a5

	)

1248 
	#XK_Gªek_OMICRONac˚¡
 0x07a7

	)

1249 
	#XK_Gªek_UPSILONac˚¡
 0x07a8

	)

1250 
	#XK_Gªek_UPSILONdõªsis
 0x07a9

	)

1251 
	#XK_Gªek_OMEGAac˚¡
 0x07ab

	)

1252 
	#XK_Gªek_ac˚¡dõªsis
 0x07´

	)

1253 
	#XK_Gªek_h‹izb¨
 0x07a‡

	)

1254 
	#XK_Gªek_ÆphØc˚¡
 0x07b1

	)

1255 
	#XK_Gªek_ïsû⁄ac˚¡
 0x07b2

	)

1256 
	#XK_Gªek_ëØc˚¡
 0x07b3

	)

1257 
	#XK_Gªek_iŸØc˚¡
 0x07b4

	)

1258 
	#XK_Gªek_iŸadõªsis
 0x07b5

	)

1259 
	#XK_Gªek_iŸØc˚¡dõªsis
 0x07b6

	)

1260 
	#XK_Gªek_omi¸⁄ac˚¡
 0x07b7

	)

1261 
	#XK_Gªek_upsû⁄ac˚¡
 0x07b8

	)

1262 
	#XK_Gªek_upsû⁄dõªsis
 0x07b9

	)

1263 
	#XK_Gªek_upsû⁄ac˚¡dõªsis
 0x07b®

	)

1264 
	#XK_Gªek_omegØc˚¡
 0x07bb

	)

1265 
	#XK_Gªek_ALPHA
 0x07c1

	)

1266 
	#XK_Gªek_BETA
 0x07c2

	)

1267 
	#XK_Gªek_GAMMA
 0x07c3

	)

1268 
	#XK_Gªek_DELTA
 0x07c4

	)

1269 
	#XK_Gªek_EPSILON
 0x07c5

	)

1270 
	#XK_Gªek_ZETA
 0x07c6

	)

1271 
	#XK_Gªek_ETA
 0x07c7

	)

1272 
	#XK_Gªek_THETA
 0x07c8

	)

1273 
	#XK_Gªek_IOTA
 0x07c9

	)

1274 
	#XK_Gªek_KAPPA
 0x07ˇ

	)

1275 
	#XK_Gªek_LAMDA
 0x07cb

	)

1276 
	#XK_Gªek_LAMBDA
 0x07cb

	)

1277 
	#XK_Gªek_MU
 0x07c¯

	)

1278 
	#XK_Gªek_NU
 0x07cd

	)

1279 
	#XK_Gªek_XI
 0x07˚

	)

1280 
	#XK_Gªek_OMICRON
 0x07c‡

	)

1281 
	#XK_Gªek_PI
 0x07d0

	)

1282 
	#XK_Gªek_RHO
 0x07d1

	)

1283 
	#XK_Gªek_SIGMA
 0x07d2

	)

1284 
	#XK_Gªek_TAU
 0x07d4

	)

1285 
	#XK_Gªek_UPSILON
 0x07d5

	)

1286 
	#XK_Gªek_PHI
 0x07d6

	)

1287 
	#XK_Gªek_CHI
 0x07d7

	)

1288 
	#XK_Gªek_PSI
 0x07d8

	)

1289 
	#XK_Gªek_OMEGA
 0x07d9

	)

1290 
	#XK_Gªek_Æpha
 0x07e1

	)

1291 
	#XK_Gªek_bëa
 0x07e2

	)

1292 
	#XK_Gªek_gamma
 0x07e3

	)

1293 
	#XK_Gªek_dñè
 0x07e4

	)

1294 
	#XK_Gªek_ïsû⁄
 0x07e5

	)

1295 
	#XK_Gªek_zëa
 0x07e6

	)

1296 
	#XK_Gªek_ëa
 0x07e7

	)

1297 
	#XK_Gªek_thëa
 0x07e8

	)

1298 
	#XK_Gªek_iŸa
 0x07e9

	)

1299 
	#XK_Gªek_k≠∑
 0x07ó

	)

1300 
	#XK_Gªek_œmda
 0x07eb

	)

1301 
	#XK_Gªek_œmbda
 0x07eb

	)

1302 
	#XK_Gªek_mu
 0x07e¯

	)

1303 
	#XK_Gªek_nu
 0x07ed

	)

1304 
	#XK_Gªek_xi
 0x07ì

	)

1305 
	#XK_Gªek_omi¸⁄
 0x07e‡

	)

1306 
	#XK_Gªek_pi
 0x07f0

	)

1307 
	#XK_Gªek_rho
 0x07f1

	)

1308 
	#XK_Gªek_sigma
 0x07f2

	)

1309 
	#XK_Gªek_föÆsmÆlsigma
 0x07f3

	)

1310 
	#XK_Gªek_èu
 0x07f4

	)

1311 
	#XK_Gªek_upsû⁄
 0x07f5

	)

1312 
	#XK_Gªek_phi
 0x07f6

	)

1313 
	#XK_Gªek_chi
 0x07f7

	)

1314 
	#XK_Gªek_psi
 0x07f8

	)

1315 
	#XK_Gªek_omega
 0x07f9

	)

1316 
	#XK_Gªek_swôch
 0xff7ê

	)

1325 #ifde‡
XK_TECHNICAL


1326 
	#XK_À·ødiˇl
 0x08a1

	)

1327 
	#XK_t›À·ødiˇl
 0x08a2

	)

1328 
	#XK_h‹izc⁄√˘‹
 0x08a3

	)

1329 
	#XK_t›öãgøl
 0x08a4

	)

1330 
	#XK_bŸöãgøl
 0x08a5

	)

1331 
	#XK_vîtc⁄√˘‹
 0x08a6

	)

1332 
	#XK_t›À·sqbøckë
 0x08a7

	)

1333 
	#XK_bŸÀ·sqbøckë
 0x08a8

	)

1334 
	#XK_t›rightsqbøckë
 0x08a9

	)

1335 
	#XK_bŸrightsqbøckë
 0x08Ø

	)

1336 
	#XK_t›À·∑ªns
 0x08ab

	)

1337 
	#XK_bŸÀ·∑ªns
 0x08a¯

	)

1338 
	#XK_t›righç¨ís
 0x08ad

	)

1339 
	#XK_bŸrighç¨ís
 0x08´

	)

1340 
	#XK_À·middÀcuæybø˚
 0x08a‡

	)

1341 
	#XK_rightmiddÀcuæybø˚
 0x08b0

	)

1342 
	#XK_t›À·summ©i⁄
 0x08b1

	)

1343 
	#XK_bŸÀ·summ©i⁄
 0x08b2

	)

1344 
	#XK_t›vîtsumm©i⁄c⁄√˘‹
 0x08b3

	)

1345 
	#XK_bŸvîtsumm©i⁄c⁄√˘‹
 0x08b4

	)

1346 
	#XK_t›rightsumm©i⁄
 0x08b5

	)

1347 
	#XK_bŸrightsumm©i⁄
 0x08b6

	)

1348 
	#XK_rightmiddÀsumm©i⁄
 0x08b7

	)

1349 
	#XK_Às°h™equÆ
 0x08b¯

	)

1350 
	#XK_nŸequÆ
 0x08bd

	)

1351 
	#XK_gª©îth™equÆ
 0x08bê

	)

1352 
	#XK_öãgøl
 0x08b‡

	)

1353 
	#XK_thîef‹e
 0x08c0

	)

1354 
	#XK_v¨üti⁄
 0x08c1

	)

1355 
	#XK_öföôy
 0x08c2

	)

1356 
	#XK_«bœ
 0x08c5

	)

1357 
	#XK_≠¥oxim©e
 0x08c8

	)

1358 
	#XK_simû¨equÆ
 0x08c9

	)

1359 
	#XK_if⁄lyif
 0x08cd

	)

1360 
	#XK_im∂õs
 0x08˚

	)

1361 
	#XK_idítiˇl
 0x08c‡

	)

1362 
	#XK_ødiˇl
 0x08d6

	)

1363 
	#XK_ö˛udedö
 0x08d®

	)

1364 
	#XK_ö˛udes
 0x08db

	)

1365 
	#XK_öãr£˘i⁄
 0x08d¯

	)

1366 
	#XK_uni⁄
 0x08dd

	)

1367 
	#XK_logiˇœnd
 0x08dê

	)

1368 
	#XK_logiˇl‹
 0x08d‡

	)

1369 
	#XK_∑πüldîiv©ive
 0x08e‡

	)

1370 
	#XK_fun˘i⁄
 0x08f6

	)

1371 
	#XK_À·¨row
 0x08fb

	)

1372 
	#XK_u∑ºow
 0x08f¯

	)

1373 
	#XK_righèºow
 0x08fd

	)

1374 
	#XK_dow«ºow
 0x08„

	)

1383 #ifde‡
XK_SPECIAL


1384 
	#XK_bœnk
 0x09df

	)

1385 
	#XK_sﬁiddüm⁄d
 0x09e0

	)

1386 
	#XK_checkîbﬂrd
 0x09e1

	)

1387 
	#XK_ht
 0x09e2

	)

1388 
	#XK_ff
 0x09e3

	)

1389 
	#XK_¸
 0x09e4

	)

1390 
	#XK_lf
 0x09e5

	)

1391 
	#XK_∆
 0x09e8

	)

1392 
	#XK_vt
 0x09e9

	)

1393 
	#XK_lowrightc‹√r
 0x09ó

	)

1394 
	#XK_u¥ightc‹√r
 0x09eb

	)

1395 
	#XK_u∂e·c‹√r
 0x09e¯

	)

1396 
	#XK_lowÀ·c‹√r
 0x09ed

	)

1397 
	#XK_¸ossöglöes
 0x09ì

	)

1398 
	#XK_h‹izlöesˇn1
 0x09e‡

	)

1399 
	#XK_h‹izlöesˇn3
 0x09f0

	)

1400 
	#XK_h‹izlöesˇn5
 0x09f1

	)

1401 
	#XK_h‹izlöesˇn7
 0x09f2

	)

1402 
	#XK_h‹izlöesˇn9
 0x09f3

	)

1403 
	#XK_À·t
 0x09f4

	)

1404 
	#XK_righâ
 0x09f5

	)

1405 
	#XK_bŸt
 0x09f6

	)

1406 
	#XK_t›t
 0x09f7

	)

1407 
	#XK_vîtb¨
 0x09f8

	)

1417 #ifde‡
XK_PUBLISHING


1418 
	#XK_em•a˚
 0x0Ø1

	)

1419 
	#XK_í•a˚
 0x0Ø2

	)

1420 
	#XK_em3•a˚
 0x0Ø3

	)

1421 
	#XK_em4•a˚
 0x0Ø4

	)

1422 
	#XK_digô•a˚
 0x0Ø5

	)

1423 
	#XK_pun˘•a˚
 0x0Ø6

	)

1424 
	#XK_thö•a˚
 0x0Ø7

	)

1425 
	#XK_haú•a˚
 0x0Ø8

	)

1426 
	#XK_emdash
 0x0Ø9

	)

1427 
	#XK_ídash
 0x0Ø®

	)

1428 
	#XK_signifbœnk
 0x0Ø¯

	)

1429 
	#XK_ñlùsis
 0x0Øê

	)

1430 
	#XK_doubba£löedŸ
 0x0Ø‡

	)

1431 
	#XK_⁄ëhúd
 0x0ab0

	)

1432 
	#XK_twŸhúds
 0x0ab1

	)

1433 
	#XK_⁄efi·h
 0x0ab2

	)

1434 
	#XK_twofi·hs
 0x0ab3

	)

1435 
	#XK_thªefi·hs
 0x0ab4

	)

1436 
	#XK_fourfi·hs
 0x0ab5

	)

1437 
	#XK_⁄esixth
 0x0ab6

	)

1438 
	#XK_fivesixths
 0x0ab7

	)

1439 
	#XK_ˇªof
 0x0ab8

	)

1440 
	#XK_figdash
 0x0abb

	)

1441 
	#XK_À·™gÀbøckë
 0x0ab¯

	)

1442 
	#XK_decimÆpoöt
 0x0abd

	)

1443 
	#XK_righèngÀbøckë
 0x0abê

	)

1444 
	#XK_m¨kî
 0x0abf

	)

1445 
	#XK_⁄ìighth
 0x0ac3

	)

1446 
	#XK_thªìighths
 0x0ac4

	)

1447 
	#XK_fivìighths
 0x0ac5

	)

1448 
	#XK_£víeighths
 0x0ac6

	)

1449 
	#XK_åadem¨k
 0x0ac9

	)

1450 
	#XK_sig«tuªm¨k
 0x0aˇ

	)

1451 
	#XK_åadem¨köcú˛e
 0x0acb

	)

1452 
	#XK_À·›íåüngÀ
 0x0ac¯

	)

1453 
	#XK_right›íåüngÀ
 0x0acd

	)

1454 
	#XK_em›ícú˛e
 0x0a˚

	)

1455 
	#XK_em›íª˘™gÀ
 0x0ac‡

	)

1456 
	#XK_À·sögÀquŸem¨k
 0x0ad0

	)

1457 
	#XK_rightsögÀquŸem¨k
 0x0ad1

	)

1458 
	#XK_À·doubÀquŸem¨k
 0x0ad2

	)

1459 
	#XK_rightdoubÀquŸem¨k
 0x0ad3

	)

1460 
	#XK_¥es¸ùti⁄
 0x0ad4

	)

1461 
	#XK_möuãs
 0x0ad6

	)

1462 
	#XK_£c⁄ds
 0x0ad7

	)

1463 
	#XK_œtö¸oss
 0x0ad9

	)

1464 
	#XK_hexagøm
 0x0ada

	)

1465 
	#XK_fûÀdª˘buŒë
 0x0adb

	)

1466 
	#XK_fûÀdÀ·åibuŒë
 0x0ad¯

	)

1467 
	#XK_fûÀdrighâribuŒë
 0x0add

	)

1468 
	#XK_emfûÀdcú˛e
 0x0adê

	)

1469 
	#XK_emfûÀdª˘
 0x0ad‡

	)

1470 
	#XK_í›ícúcbuŒë
 0x0´0

	)

1471 
	#XK_í›ísqu¨ebuŒë
 0x0´1

	)

1472 
	#XK_›íª˘buŒë
 0x0´2

	)

1473 
	#XK_›íåibuŒëup
 0x0´3

	)

1474 
	#XK_›íåibuŒëdown
 0x0´4

	)

1475 
	#XK_›í°¨
 0x0´5

	)

1476 
	#XK_ífûÀdcúcbuŒë
 0x0´6

	)

1477 
	#XK_ífûÀdsqbuŒë
 0x0´7

	)

1478 
	#XK_fûÀdåibuŒëup
 0x0´8

	)

1479 
	#XK_fûÀdåibuŒëdown
 0x0´9

	)

1480 
	#XK_À·poöãr
 0x0´®

	)

1481 
	#XK_righçoöãr
 0x0´b

	)

1482 
	#XK_˛ub
 0x0´¯

	)

1483 
	#XK_düm⁄d
 0x0´d

	)

1484 
	#XK_hóπ
 0x0´ê

	)

1485 
	#XK_mÆã£¸oss
 0x0af0

	)

1486 
	#XK_daggî
 0x0af1

	)

1487 
	#XK_doubÀdaggî
 0x0af2

	)

1488 
	#XK_checkm¨k
 0x0af3

	)

1489 
	#XK_bÆlŸ¸oss
 0x0af4

	)

1490 
	#XK_musiˇlsh¨p
 0x0af5

	)

1491 
	#XK_musiˇlÊ©
 0x0af6

	)

1492 
	#XK_mÆesymbﬁ
 0x0af7

	)

1493 
	#XK_„mÆesymbﬁ
 0x0af8

	)

1494 
	#XK_ãÀph⁄e
 0x0af9

	)

1495 
	#XK_ãÀph⁄îec‹dî
 0x0aÁ

	)

1496 
	#XK_ph⁄ogøphc›yright
 0x0afb

	)

1497 
	#XK_ˇªt
 0x0af¯

	)

1498 
	#XK_sögÀlowquŸem¨k
 0x0afd

	)

1499 
	#XK_doubÀlowquŸem¨k
 0x0a„

	)

1500 
	#XK_curs‹
 0x0aff

	)

1508 #ifde‡
XK_APL


1509 
	#XK_À·ˇªt
 0x0ba3

	)

1510 
	#XK_rightˇªt
 0x0ba6

	)

1511 
	#XK_downˇªt
 0x0ba8

	)

1512 
	#XK_upˇªt
 0x0ba9

	)

1513 
	#XK_ovîb¨
 0x0bc0

	)

1514 
	#XK_dow¡ack
 0x0bc2

	)

1515 
	#XK_upsh€
 0x0bc3

	)

1516 
	#XK_down°ûe
 0x0bc4

	)

1517 
	#XK_undîb¨
 0x0bc6

	)

1518 
	#XK_jŸ
 0x0bˇ

	)

1519 
	#XK_quad
 0x0bc¯

	)

1520 
	#XK_u±ack
 0x0b˚

	)

1521 
	#XK_cú˛e
 0x0bc‡

	)

1522 
	#XK_up°ûe
 0x0bd3

	)

1523 
	#XK_downsh€
 0x0bd6

	)

1524 
	#XK_rightsh€
 0x0bd8

	)

1525 
	#XK_À·sh€
 0x0bd®

	)

1526 
	#XK_À·èck
 0x0bd¯

	)

1527 
	#XK_righâack
 0x0bf¯

	)

1535 #ifde‡
XK_HEBREW


1536 
	#XK_hebªw_doubÀlowlöe
 0x0cd‡

	)

1537 
	#XK_hebªw_Æïh
 0x0˚0

	)

1538 
	#XK_hebªw_bë
 0x0˚1

	)

1539 
	#XK_hebªw_bëh
 0x0˚1

	)

1540 
	#XK_hebªw_gimñ
 0x0˚2

	)

1541 
	#XK_hebªw_gimmñ
 0x0˚2

	)

1542 
	#XK_hebªw_dÆë
 0x0˚3

	)

1543 
	#XK_hebªw_dÆëh
 0x0˚3

	)

1544 
	#XK_hebªw_he
 0x0˚4

	)

1545 
	#XK_hebªw_waw
 0x0˚5

	)

1546 
	#XK_hebªw_zaö
 0x0˚6

	)

1547 
	#XK_hebªw_zayö
 0x0˚6

	)

1548 
	#XK_hebªw_chë
 0x0˚7

	)

1549 
	#XK_hebªw_hë
 0x0˚7

	)

1550 
	#XK_hebªw_ãt
 0x0˚8

	)

1551 
	#XK_hebªw_ãth
 0x0˚8

	)

1552 
	#XK_hebªw_yod
 0x0˚9

	)

1553 
	#XK_hebªw_föÆk≠h
 0x0˚®

	)

1554 
	#XK_hebªw_k≠h
 0x0˚b

	)

1555 
	#XK_hebªw_œmed
 0x0˚¯

	)

1556 
	#XK_hebªw_föÆmem
 0x0˚d

	)

1557 
	#XK_hebªw_mem
 0x0˚ê

	)

1558 
	#XK_hebªw_föÆnun
 0x0˚‡

	)

1559 
	#XK_hebªw_nun
 0x0cf0

	)

1560 
	#XK_hebªw_ßmech
 0x0cf1

	)

1561 
	#XK_hebªw_ßmekh
 0x0cf1

	)

1562 
	#XK_hebªw_ayö
 0x0cf2

	)

1563 
	#XK_hebªw_föÆ≥
 0x0cf3

	)

1564 
	#XK_hebªw_≥
 0x0cf4

	)

1565 
	#XK_hebªw_föÆzade
 0x0cf5

	)

1566 
	#XK_hebªw_föÆzadi
 0x0cf5

	)

1567 
	#XK_hebªw_zade
 0x0cf6

	)

1568 
	#XK_hebªw_zadi
 0x0cf6

	)

1569 
	#XK_hebªw_q›h
 0x0cf7

	)

1570 
	#XK_hebªw_kuf
 0x0cf7

	)

1571 
	#XK_hebªw_ªsh
 0x0cf8

	)

1572 
	#XK_hebªw_shö
 0x0cf9

	)

1573 
	#XK_hebªw_èw
 0x0cÁ

	)

1574 
	#XK_hebªw_èf
 0x0cÁ

	)

1575 
	#XK_Hebªw_swôch
 0xff7ê

	)

1583 #ifde‡
XK_THAI


1584 
	#XK_Thai_kokai
 0x0da1

	)

1585 
	#XK_Thai_khokhai
 0x0da2

	)

1586 
	#XK_Thai_khokhu©
 0x0da3

	)

1587 
	#XK_Thai_khokhwai
 0x0da4

	)

1588 
	#XK_Thai_khokh⁄
 0x0da5

	)

1589 
	#XK_Thai_kh‹akh™g
 0x0da6

	)

1590 
	#XK_Thai_ng⁄gu
 0x0da7

	)

1591 
	#XK_Thai_choch™
 0x0da8

	)

1592 
	#XK_Thai_chochög
 0x0da9

	)

1593 
	#XK_Thai_choch™g
 0x0dØ

	)

1594 
	#XK_Thai_soso
 0x0dab

	)

1595 
	#XK_Thai_choch€
 0x0da¯

	)

1596 
	#XK_Thai_yoyög
 0x0dad

	)

1597 
	#XK_Thai_dochada
 0x0d´

	)

1598 
	#XK_Thai_t›©ak
 0x0da‡

	)

1599 
	#XK_Thai_thŸh™
 0x0db0

	)

1600 
	#XK_Thai_th⁄™gm⁄tho
 0x0db1

	)

1601 
	#XK_Thai_th›huthao
 0x0db2

	)

1602 
	#XK_Thai_n⁄í
 0x0db3

	)

1603 
	#XK_Thai_dodek
 0x0db4

	)

1604 
	#XK_Thai_tŸao
 0x0db5

	)

1605 
	#XK_Thai_thŸhung
 0x0db6

	)

1606 
	#XK_Thai_thŸhah™
 0x0db7

	)

1607 
	#XK_Thai_thŸh⁄g
 0x0db8

	)

1608 
	#XK_Thai_n⁄u
 0x0db9

	)

1609 
	#XK_Thai_bobaimai
 0x0db®

	)

1610 
	#XK_Thai_p›œ
 0x0dbb

	)

1611 
	#XK_Thai_ph›hung
 0x0db¯

	)

1612 
	#XK_Thai_foÁ
 0x0dbd

	)

1613 
	#XK_Thai_ph›h™
 0x0dbê

	)

1614 
	#XK_Thai_foÁn
 0x0db‡

	)

1615 
	#XK_Thai_phoßmphao
 0x0dc0

	)

1616 
	#XK_Thai_moma
 0x0dc1

	)

1617 
	#XK_Thai_yoyak
 0x0dc2

	)

1618 
	#XK_Thai_r‹ua
 0x0dc3

	)

1619 
	#XK_Thai_ru
 0x0dc4

	)

1620 
	#XK_Thai_lﬁög
 0x0dc5

	)

1621 
	#XK_Thai_lu
 0x0dc6

	)

1622 
	#XK_Thai_wow´n
 0x0dc7

	)

1623 
	#XK_Thai_soßœ
 0x0dc8

	)

1624 
	#XK_Thai_s‹usi
 0x0dc9

	)

1625 
	#XK_Thai_sosua
 0x0dˇ

	)

1626 
	#XK_Thai_hohù
 0x0dcb

	)

1627 
	#XK_Thai_lochuœ
 0x0dc¯

	)

1628 
	#XK_Thai_ﬂng
 0x0dcd

	)

1629 
	#XK_Thai_h⁄okhuk
 0x0d˚

	)

1630 
	#XK_Thai_∑iy™noi
 0x0dc‡

	)

1631 
	#XK_Thai_ßøa
 0x0dd0

	)

1632 
	#XK_Thai_maih™ak©
 0x0dd1

	)

1633 
	#XK_Thai_ßøØ
 0x0dd2

	)

1634 
	#XK_Thai_ßøam
 0x0dd3

	)

1635 
	#XK_Thai_ßøi
 0x0dd4

	)

1636 
	#XK_Thai_ßøii
 0x0dd5

	)

1637 
	#XK_Thai_ßøue
 0x0dd6

	)

1638 
	#XK_Thai_ßøuì
 0x0dd7

	)

1639 
	#XK_Thai_ßøu
 0x0dd8

	)

1640 
	#XK_Thai_ßøuu
 0x0dd9

	)

1641 
	#XK_Thai_phöthu
 0x0dd®

	)

1642 
	#XK_Thai_maih™ak©_maôho
 0x0dde

	)

1643 
	#XK_Thai_baht
 0x0dd‡

	)

1644 
	#XK_Thai_ßøe
 0x0de0

	)

1645 
	#XK_Thai_ßø´
 0x0de1

	)

1646 
	#XK_Thai_ßøo
 0x0de2

	)

1647 
	#XK_Thai_ßøaimaimu™
 0x0de3

	)

1648 
	#XK_Thai_ßøaimaimÆai
 0x0de4

	)

1649 
	#XK_Thai_œkkh™gyao
 0x0de5

	)

1650 
	#XK_Thai_maiyamok
 0x0de6

	)

1651 
	#XK_Thai_maôaikhu
 0x0de7

	)

1652 
	#XK_Thai_maõk
 0x0de8

	)

1653 
	#XK_Thai_maôho
 0x0de9

	)

1654 
	#XK_Thai_maôri
 0x0dó

	)

1655 
	#XK_Thai_maich©èwa
 0x0deb

	)

1656 
	#XK_Thai_th™thakh©
 0x0de¯

	)

1657 
	#XK_Thai_nikhahô
 0x0ded

	)

1658 
	#XK_Thai_Àksun
 0x0df0

	)

1659 
	#XK_Thai_Àknung
 0x0df1

	)

1660 
	#XK_Thai_Àks⁄g
 0x0df2

	)

1661 
	#XK_Thai_Àkßm
 0x0df3

	)

1662 
	#XK_Thai_Àksi
 0x0df4

	)

1663 
	#XK_Thai_Àkha
 0x0df5

	)

1664 
	#XK_Thai_Àkhok
 0x0df6

	)

1665 
	#XK_Thai_Àkchë
 0x0df7

	)

1666 
	#XK_Thai_Àk∑ë
 0x0df8

	)

1667 
	#XK_Thai_Àkkao
 0x0df9

	)

1675 #ifde‡
XK_KOREAN


1677 
	#XK_H™gul
 0xff31

	)

1678 
	#XK_H™gul_Sèπ
 0xff32

	)

1679 
	#XK_H™gul_End
 0xff33

	)

1680 
	#XK_H™gul_H™ja
 0xff34

	)

1681 
	#XK_H™gul_Jamo
 0xff35

	)

1682 
	#XK_H™gul_Romaja
 0xff36

	)

1683 
	#XK_H™gul_Codeöput
 0xff37

	)

1684 
	#XK_H™gul_Je⁄ja
 0xff38

	)

1685 
	#XK_H™gul_B™ja
 0xff39

	)

1686 
	#XK_H™gul_PªH™ja
 0xff3®

	)

1687 
	#XK_H™gul_Po°H™ja
 0xff3b

	)

1688 
	#XK_H™gul_SögÀC™did©e
 0xff3¯

	)

1689 
	#XK_H™gul_Mu…ùÀC™did©e
 0xff3d

	)

1690 
	#XK_H™gul_PªviousC™did©e
 0xff3ê

	)

1691 
	#XK_H™gul_S≥cül
 0xff3‡

	)

1692 
	#XK_H™gul_swôch
 0xff7ê

	)

1695 
	#XK_H™gul_Kiyeog
 0x0ó1

	)

1696 
	#XK_H™gul_SßngKiyeog
 0x0ó2

	)

1697 
	#XK_H™gul_KiyeogSios
 0x0ó3

	)

1698 
	#XK_H™gul_Nõun
 0x0ó4

	)

1699 
	#XK_H™gul_NõunJõuj
 0x0ó5

	)

1700 
	#XK_H™gul_NõunHõuh
 0x0ó6

	)

1701 
	#XK_H™gul_Dikeud
 0x0ó7

	)

1702 
	#XK_H™gul_SßngDikeud
 0x0ó8

	)

1703 
	#XK_H™gul_Rõul
 0x0ó9

	)

1704 
	#XK_H™gul_RõulKiyeog
 0x0óa

	)

1705 
	#XK_H™gul_RõulMõum
 0x0ób

	)

1706 
	#XK_H™gul_RõulPõub
 0x0óc

	)

1707 
	#XK_H™gul_RõulSios
 0x0ód

	)

1708 
	#XK_H™gul_RõulTõut
 0x0óe

	)

1709 
	#XK_H™gul_RõulPhõuf
 0x0óf

	)

1710 
	#XK_H™gul_RõulHõuh
 0x0eb0

	)

1711 
	#XK_H™gul_Mõum
 0x0eb1

	)

1712 
	#XK_H™gul_Põub
 0x0eb2

	)

1713 
	#XK_H™gul_SßngPõub
 0x0eb3

	)

1714 
	#XK_H™gul_PõubSios
 0x0eb4

	)

1715 
	#XK_H™gul_Sios
 0x0eb5

	)

1716 
	#XK_H™gul_SßngSios
 0x0eb6

	)

1717 
	#XK_H™gul_Ieung
 0x0eb7

	)

1718 
	#XK_H™gul_Jõuj
 0x0eb8

	)

1719 
	#XK_H™gul_SßngJõuj
 0x0eb9

	)

1720 
	#XK_H™gul_Cõuc
 0x0eba

	)

1721 
	#XK_H™gul_Khõuq
 0x0ebb

	)

1722 
	#XK_H™gul_Tõut
 0x0ebc

	)

1723 
	#XK_H™gul_Phõuf
 0x0ebd

	)

1724 
	#XK_H™gul_Hõuh
 0x0ebe

	)

1727 
	#XK_H™gul_A
 0x0ebf

	)

1728 
	#XK_H™gul_AE
 0x0ec0

	)

1729 
	#XK_H™gul_YA
 0x0ec1

	)

1730 
	#XK_H™gul_YAE
 0x0ec2

	)

1731 
	#XK_H™gul_EO
 0x0ec3

	)

1732 
	#XK_H™gul_E
 0x0ec4

	)

1733 
	#XK_H™gul_YEO
 0x0ec5

	)

1734 
	#XK_H™gul_YE
 0x0ec6

	)

1735 
	#XK_H™gul_O
 0x0ec7

	)

1736 
	#XK_H™gul_WA
 0x0ec8

	)

1737 
	#XK_H™gul_WAE
 0x0ec9

	)

1738 
	#XK_H™gul_OE
 0x0eˇ

	)

1739 
	#XK_H™gul_YO
 0x0ecb

	)

1740 
	#XK_H™gul_U
 0x0ecc

	)

1741 
	#XK_H™gul_WEO
 0x0ecd

	)

1742 
	#XK_H™gul_WE
 0x0e˚

	)

1743 
	#XK_H™gul_WI
 0x0ecf

	)

1744 
	#XK_H™gul_YU
 0x0ed0

	)

1745 
	#XK_H™gul_EU
 0x0ed1

	)

1746 
	#XK_H™gul_YI
 0x0ed2

	)

1747 
	#XK_H™gul_I
 0x0ed3

	)

1750 
	#XK_H™gul_J_Kiyeog
 0x0ed4

	)

1751 
	#XK_H™gul_J_SßngKiyeog
 0x0ed5

	)

1752 
	#XK_H™gul_J_KiyeogSios
 0x0ed6

	)

1753 
	#XK_H™gul_J_Nõun
 0x0ed7

	)

1754 
	#XK_H™gul_J_NõunJõuj
 0x0ed8

	)

1755 
	#XK_H™gul_J_NõunHõuh
 0x0ed9

	)

1756 
	#XK_H™gul_J_Dikeud
 0x0eda

	)

1757 
	#XK_H™gul_J_Rõul
 0x0edb

	)

1758 
	#XK_H™gul_J_RõulKiyeog
 0x0edc

	)

1759 
	#XK_H™gul_J_RõulMõum
 0x0edd

	)

1760 
	#XK_H™gul_J_RõulPõub
 0x0ede

	)

1761 
	#XK_H™gul_J_RõulSios
 0x0edf

	)

1762 
	#XK_H™gul_J_RõulTõut
 0x0ì0

	)

1763 
	#XK_H™gul_J_RõulPhõuf
 0x0ì1

	)

1764 
	#XK_H™gul_J_RõulHõuh
 0x0ì2

	)

1765 
	#XK_H™gul_J_Mõum
 0x0ì3

	)

1766 
	#XK_H™gul_J_Põub
 0x0ì4

	)

1767 
	#XK_H™gul_J_PõubSios
 0x0ì5

	)

1768 
	#XK_H™gul_J_Sios
 0x0ì6

	)

1769 
	#XK_H™gul_J_SßngSios
 0x0ì7

	)

1770 
	#XK_H™gul_J_Ieung
 0x0ì8

	)

1771 
	#XK_H™gul_J_Jõuj
 0x0ì9

	)

1772 
	#XK_H™gul_J_Cõuc
 0x0ìa

	)

1773 
	#XK_H™gul_J_Khõuq
 0x0ìb

	)

1774 
	#XK_H™gul_J_Tõut
 0x0ìc

	)

1775 
	#XK_H™gul_J_Phõuf
 0x0ìd

	)

1776 
	#XK_H™gul_J_Hõuh
 0x0ìe

	)

1779 
	#XK_H™gul_RõulYe‹öHõuh
 0x0ìf

	)

1780 
	#XK_H™gul_Sunkye⁄geumMõum
 0x0ef0

	)

1781 
	#XK_H™gul_Sunkye⁄geumPõub
 0x0ef1

	)

1782 
	#XK_H™gul_P™Sios
 0x0ef2

	)

1783 
	#XK_H™gul_KkogjiDÆröIeung
 0x0ef3

	)

1784 
	#XK_H™gul_Sunkye⁄geumPhõuf
 0x0ef4

	)

1785 
	#XK_H™gul_Ye‹öHõuh
 0x0ef5

	)

1788 
	#XK_H™gul_AøeA
 0x0ef6

	)

1789 
	#XK_H™gul_AøeAE
 0x0ef7

	)

1792 
	#XK_H™gul_J_P™Sios
 0x0ef8

	)

1793 
	#XK_H™gul_J_KkogjiDÆröIeung
 0x0ef9

	)

1794 
	#XK_H™gul_J_Ye‹öHõuh
 0x0eÁ

	)

1797 
	#XK_K‹ón_W⁄
 0x0ef‡

	)

1805 #ifde‡
XK_ARMENIAN


1806 
	#XK_Armíün_lig©uª_ew
 0x1000587

	)

1807 
	#XK_Armíün_fuŒ_°›
 0x1000589

	)

1808 
	#XK_Armíün_vîjakë
 0x1000589

	)

1809 
	#XK_Armíün_£∑øti⁄_m¨k
 0x100055d

	)

1810 
	#XK_Armíün_but
 0x100055d

	)

1811 
	#XK_Armíün_hyphí
 0x100058®

	)

1812 
	#XK_Armíün_yíèm«
 0x100058®

	)

1813 
	#XK_Armíün_ex˛am
 0x100055¯

	)

1814 
	#XK_Armíün_am™ak
 0x100055¯

	)

1815 
	#XK_Armíün_ac˚¡
 0x100055b

	)

1816 
	#XK_Armíün_shesht
 0x100055b

	)

1817 
	#XK_Armíün_que°i⁄
 0x100055ê

	)

1818 
	#XK_Armíün_∑ruyk
 0x100055ê

	)

1819 
	#XK_Armíün_AYB
 0x1000531

	)

1820 
	#XK_Armíün_ayb
 0x1000561

	)

1821 
	#XK_Armíün_BEN
 0x1000532

	)

1822 
	#XK_Armíün_bí
 0x1000562

	)

1823 
	#XK_Armíün_GIM
 0x1000533

	)

1824 
	#XK_Armíün_gim
 0x1000563

	)

1825 
	#XK_Armíün_DA
 0x1000534

	)

1826 
	#XK_Armíün_da
 0x1000564

	)

1827 
	#XK_Armíün_YECH
 0x1000535

	)

1828 
	#XK_Armíün_yech
 0x1000565

	)

1829 
	#XK_Armíün_ZA
 0x1000536

	)

1830 
	#XK_Armíün_za
 0x1000566

	)

1831 
	#XK_Armíün_E
 0x1000537

	)

1832 
	#XK_Armíün_e
 0x1000567

	)

1833 
	#XK_Armíün_AT
 0x1000538

	)

1834 
	#XK_Armíün_©
 0x1000568

	)

1835 
	#XK_Armíün_TO
 0x1000539

	)

1836 
	#XK_Armíün_to
 0x1000569

	)

1837 
	#XK_Armíün_ZHE
 0x100053®

	)

1838 
	#XK_Armíün_zhe
 0x100056®

	)

1839 
	#XK_Armíün_INI
 0x100053b

	)

1840 
	#XK_Armíün_öi
 0x100056b

	)

1841 
	#XK_Armíün_LYUN
 0x100053¯

	)

1842 
	#XK_Armíün_lyun
 0x100056¯

	)

1843 
	#XK_Armíün_KHE
 0x100053d

	)

1844 
	#XK_Armíün_khe
 0x100056d

	)

1845 
	#XK_Armíün_TSA
 0x100053ê

	)

1846 
	#XK_Armíün_tß
 0x100056ê

	)

1847 
	#XK_Armíün_KEN
 0x100053‡

	)

1848 
	#XK_Armíün_kí
 0x100056‡

	)

1849 
	#XK_Armíün_HO
 0x1000540

	)

1850 
	#XK_Armíün_ho
 0x1000570

	)

1851 
	#XK_Armíün_DZA
 0x1000541

	)

1852 
	#XK_Armíün_dza
 0x1000571

	)

1853 
	#XK_Armíün_GHAT
 0x1000542

	)

1854 
	#XK_Armíün_gh©
 0x1000572

	)

1855 
	#XK_Armíün_TCHE
 0x1000543

	)

1856 
	#XK_Armíün_tche
 0x1000573

	)

1857 
	#XK_Armíün_MEN
 0x1000544

	)

1858 
	#XK_Armíün_mí
 0x1000574

	)

1859 
	#XK_Armíün_HI
 0x1000545

	)

1860 
	#XK_Armíün_hi
 0x1000575

	)

1861 
	#XK_Armíün_NU
 0x1000546

	)

1862 
	#XK_Armíün_nu
 0x1000576

	)

1863 
	#XK_Armíün_SHA
 0x1000547

	)

1864 
	#XK_Armíün_sha
 0x1000577

	)

1865 
	#XK_Armíün_VO
 0x1000548

	)

1866 
	#XK_Armíün_vo
 0x1000578

	)

1867 
	#XK_Armíün_CHA
 0x1000549

	)

1868 
	#XK_Armíün_cha
 0x1000579

	)

1869 
	#XK_Armíün_PE
 0x100054®

	)

1870 
	#XK_Armíün_≥
 0x100057®

	)

1871 
	#XK_Armíün_JE
 0x100054b

	)

1872 
	#XK_Armíün_je
 0x100057b

	)

1873 
	#XK_Armíün_RA
 0x100054¯

	)

1874 
	#XK_Armíün_ø
 0x100057¯

	)

1875 
	#XK_Armíün_SE
 0x100054d

	)

1876 
	#XK_Armíün_£
 0x100057d

	)

1877 
	#XK_Armíün_VEV
 0x100054ê

	)

1878 
	#XK_Armíün_vev
 0x100057ê

	)

1879 
	#XK_Armíün_TYUN
 0x100054‡

	)

1880 
	#XK_Armíün_tyun
 0x100057‡

	)

1881 
	#XK_Armíün_RE
 0x1000550

	)

1882 
	#XK_Armíün_ª
 0x1000580

	)

1883 
	#XK_Armíün_TSO
 0x1000551

	)

1884 
	#XK_Armíün_tso
 0x1000581

	)

1885 
	#XK_Armíün_VYUN
 0x1000552

	)

1886 
	#XK_Armíün_vyun
 0x1000582

	)

1887 
	#XK_Armíün_PYUR
 0x1000553

	)

1888 
	#XK_Armíün_pyur
 0x1000583

	)

1889 
	#XK_Armíün_KE
 0x1000554

	)

1890 
	#XK_Armíün_ke
 0x1000584

	)

1891 
	#XK_Armíün_O
 0x1000555

	)

1892 
	#XK_Armíün_o
 0x1000585

	)

1893 
	#XK_Armíün_FE
 0x1000556

	)

1894 
	#XK_Armíün_„
 0x1000586

	)

1895 
	#XK_Armíün_≠o°r›he
 0x100055®

	)

1902 #ifde‡
XK_GEORGIAN


1903 
	#XK_Ge‹gün_™
 0x10010d0

	)

1904 
	#XK_Ge‹gün_b™
 0x10010d1

	)

1905 
	#XK_Ge‹gün_g™
 0x10010d2

	)

1906 
	#XK_Ge‹gün_d⁄
 0x10010d3

	)

1907 
	#XK_Ge‹gün_í
 0x10010d4

	)

1908 
	#XK_Ge‹gün_vö
 0x10010d5

	)

1909 
	#XK_Ge‹gün_zí
 0x10010d6

	)

1910 
	#XK_Ge‹gün_èn
 0x10010d7

	)

1911 
	#XK_Ge‹gün_ö
 0x10010d8

	)

1912 
	#XK_Ge‹gün_k™
 0x10010d9

	)

1913 
	#XK_Ge‹gün_œs
 0x10010d®

	)

1914 
	#XK_Ge‹gün_m™
 0x10010db

	)

1915 
	#XK_Ge‹gün_«r
 0x10010d¯

	)

1916 
	#XK_Ge‹gün_⁄
 0x10010dd

	)

1917 
	#XK_Ge‹gün_∑r
 0x10010dê

	)

1918 
	#XK_Ge‹gün_zh¨
 0x10010d‡

	)

1919 
	#XK_Ge‹gün_øe
 0x10010e0

	)

1920 
	#XK_Ge‹gün_ßn
 0x10010e1

	)

1921 
	#XK_Ge‹gün_èr
 0x10010e2

	)

1922 
	#XK_Ge‹gün_un
 0x10010e3

	)

1923 
	#XK_Ge‹gün_ph¨
 0x10010e4

	)

1924 
	#XK_Ge‹gün_kh¨
 0x10010e5

	)

1925 
	#XK_Ge‹gün_gh™
 0x10010e6

	)

1926 
	#XK_Ge‹gün_q¨
 0x10010e7

	)

1927 
	#XK_Ge‹gün_shö
 0x10010e8

	)

1928 
	#XK_Ge‹gün_chö
 0x10010e9

	)

1929 
	#XK_Ge‹gün_ˇn
 0x10010ó

	)

1930 
	#XK_Ge‹gün_jû
 0x10010eb

	)

1931 
	#XK_Ge‹gün_cû
 0x10010e¯

	)

1932 
	#XK_Ge‹gün_ch¨
 0x10010ed

	)

1933 
	#XK_Ge‹gün_x™
 0x10010ì

	)

1934 
	#XK_Ge‹gün_jh™
 0x10010e‡

	)

1935 
	#XK_Ge‹gün_h´
 0x10010f0

	)

1936 
	#XK_Ge‹gün_he
 0x10010f1

	)

1937 
	#XK_Ge‹gün_hõ
 0x10010f2

	)

1938 
	#XK_Ge‹gün_we
 0x10010f3

	)

1939 
	#XK_Ge‹gün_h¨
 0x10010f4

	)

1940 
	#XK_Ge‹gün_h€
 0x10010f5

	)

1941 
	#XK_Ge‹gün_fi
 0x10010f6

	)

1948 #ifde‡
XK_CAUCASUS


1950 
	#XK_XabovedŸ
 0x1001e8®

	)

1951 
	#XK_Ibªve
 0x100012¯

	)

1952 
	#XK_Z°roke
 0x10001b5

	)

1953 
	#XK_Gˇr⁄
 0x10001e6

	)

1954 
	#XK_Oˇr⁄
 0x10001d1

	)

1955 
	#XK_Ob¨ªd
 0x100019‡

	)

1956 
	#XK_xabovedŸ
 0x1001e8b

	)

1957 
	#XK_ibªve
 0x100012d

	)

1958 
	#XK_z°roke
 0x10001b6

	)

1959 
	#XK_gˇr⁄
 0x10001e7

	)

1960 
	#XK_oˇr⁄
 0x10001d2

	)

1961 
	#XK_ob¨ªd
 0x1000275

	)

1962 
	#XK_SCHWA
 0x100018‡

	)

1963 
	#XK_schwa
 0x1000259

	)

1966 
	#XK_LbñowdŸ
 0x1001e36

	)

1967 
	#XK_lbñowdŸ
 0x1001e37

	)

1974 #ifde‡
XK_VIETNAMESE


1975 
	#XK_AbñowdŸ
 0x1001ó0

	)

1976 
	#XK_abñowdŸ
 0x1001ó1

	)

1977 
	#XK_Ahook
 0x1001ó2

	)

1978 
	#XK_ahook
 0x1001ó3

	)

1979 
	#XK_AcúcumÊexacuã
 0x1001ó4

	)

1980 
	#XK_acúcumÊexacuã
 0x1001ó5

	)

1981 
	#XK_AcúcumÊexgøve
 0x1001ó6

	)

1982 
	#XK_acúcumÊexgøve
 0x1001ó7

	)

1983 
	#XK_AcúcumÊexhook
 0x1001ó8

	)

1984 
	#XK_acúcumÊexhook
 0x1001ó9

	)

1985 
	#XK_AcúcumÊextûde
 0x1001ó®

	)

1986 
	#XK_acúcumÊextûde
 0x1001ób

	)

1987 
	#XK_AcúcumÊexbñowdŸ
 0x1001ó¯

	)

1988 
	#XK_acúcumÊexbñowdŸ
 0x1001ód

	)

1989 
	#XK_Abªvócuã
 0x1001óê

	)

1990 
	#XK_abªvócuã
 0x1001ó‡

	)

1991 
	#XK_Abªvegøve
 0x1001eb0

	)

1992 
	#XK_abªvegøve
 0x1001eb1

	)

1993 
	#XK_Abªvehook
 0x1001eb2

	)

1994 
	#XK_abªvehook
 0x1001eb3

	)

1995 
	#XK_Abªvëûde
 0x1001eb4

	)

1996 
	#XK_abªvëûde
 0x1001eb5

	)

1997 
	#XK_AbªvebñowdŸ
 0x1001eb6

	)

1998 
	#XK_abªvebñowdŸ
 0x1001eb7

	)

1999 
	#XK_EbñowdŸ
 0x1001eb8

	)

2000 
	#XK_ebñowdŸ
 0x1001eb9

	)

2001 
	#XK_Ehook
 0x1001eb®

	)

2002 
	#XK_ehook
 0x1001ebb

	)

2003 
	#XK_Etûde
 0x1001eb¯

	)

2004 
	#XK_ëûde
 0x1001ebd

	)

2005 
	#XK_EcúcumÊexacuã
 0x1001ebê

	)

2006 
	#XK_ecúcumÊexacuã
 0x1001eb‡

	)

2007 
	#XK_EcúcumÊexgøve
 0x1001ec0

	)

2008 
	#XK_ecúcumÊexgøve
 0x1001ec1

	)

2009 
	#XK_EcúcumÊexhook
 0x1001ec2

	)

2010 
	#XK_ecúcumÊexhook
 0x1001ec3

	)

2011 
	#XK_EcúcumÊextûde
 0x1001ec4

	)

2012 
	#XK_ecúcumÊextûde
 0x1001ec5

	)

2013 
	#XK_EcúcumÊexbñowdŸ
 0x1001ec6

	)

2014 
	#XK_ecúcumÊexbñowdŸ
 0x1001ec7

	)

2015 
	#XK_Ihook
 0x1001ec8

	)

2016 
	#XK_ihook
 0x1001ec9

	)

2017 
	#XK_IbñowdŸ
 0x1001eˇ

	)

2018 
	#XK_ibñowdŸ
 0x1001ecb

	)

2019 
	#XK_ObñowdŸ
 0x1001ec¯

	)

2020 
	#XK_obñowdŸ
 0x1001ecd

	)

2021 
	#XK_Ohook
 0x1001e˚

	)

2022 
	#XK_ohook
 0x1001ec‡

	)

2023 
	#XK_OcúcumÊexacuã
 0x1001ed0

	)

2024 
	#XK_ocúcumÊexacuã
 0x1001ed1

	)

2025 
	#XK_OcúcumÊexgøve
 0x1001ed2

	)

2026 
	#XK_ocúcumÊexgøve
 0x1001ed3

	)

2027 
	#XK_OcúcumÊexhook
 0x1001ed4

	)

2028 
	#XK_ocúcumÊexhook
 0x1001ed5

	)

2029 
	#XK_OcúcumÊextûde
 0x1001ed6

	)

2030 
	#XK_ocúcumÊextûde
 0x1001ed7

	)

2031 
	#XK_OcúcumÊexbñowdŸ
 0x1001ed8

	)

2032 
	#XK_ocúcumÊexbñowdŸ
 0x1001ed9

	)

2033 
	#XK_Oh‹«cuã
 0x1001ed®

	)

2034 
	#XK_oh‹«cuã
 0x1001edb

	)

2035 
	#XK_Oh‹ngøve
 0x1001ed¯

	)

2036 
	#XK_oh‹ngøve
 0x1001edd

	)

2037 
	#XK_Oh‹nhook
 0x1001edê

	)

2038 
	#XK_oh‹nhook
 0x1001ed‡

	)

2039 
	#XK_Oh‹¡ûde
 0x1001ì0

	)

2040 
	#XK_oh‹¡ûde
 0x1001ì1

	)

2041 
	#XK_Oh‹nbñowdŸ
 0x1001ì2

	)

2042 
	#XK_oh‹nbñowdŸ
 0x1001ì3

	)

2043 
	#XK_UbñowdŸ
 0x1001ì4

	)

2044 
	#XK_ubñowdŸ
 0x1001ì5

	)

2045 
	#XK_Uhook
 0x1001ì6

	)

2046 
	#XK_uhook
 0x1001ì7

	)

2047 
	#XK_Uh‹«cuã
 0x1001ì8

	)

2048 
	#XK_uh‹«cuã
 0x1001ì9

	)

2049 
	#XK_Uh‹ngøve
 0x1001ì®

	)

2050 
	#XK_uh‹ngøve
 0x1001ìb

	)

2051 
	#XK_Uh‹nhook
 0x1001ì¯

	)

2052 
	#XK_uh‹nhook
 0x1001ìd

	)

2053 
	#XK_Uh‹¡ûde
 0x1001ìê

	)

2054 
	#XK_uh‹¡ûde
 0x1001ì‡

	)

2055 
	#XK_Uh‹nbñowdŸ
 0x1001ef0

	)

2056 
	#XK_uh‹nbñowdŸ
 0x1001ef1

	)

2057 
	#XK_YbñowdŸ
 0x1001ef4

	)

2058 
	#XK_ybñowdŸ
 0x1001ef5

	)

2059 
	#XK_Yhook
 0x1001ef6

	)

2060 
	#XK_yhook
 0x1001ef7

	)

2061 
	#XK_Ytûde
 0x1001ef8

	)

2062 
	#XK_ytûde
 0x1001ef9

	)

2063 
	#XK_Oh‹n
 0x10001a0

	)

2064 
	#XK_oh‹n
 0x10001a1

	)

2065 
	#XK_Uh‹n
 0x10001a‡

	)

2066 
	#XK_uh‹n
 0x10001b0

	)

2070 #ifde‡
XK_CURRENCY


2071 
	#XK_EcuSign
 0x10020a0

	)

2072 
	#XK_Cﬁ⁄Sign
 0x10020a1

	)

2073 
	#XK_CruzeúoSign
 0x10020a2

	)

2074 
	#XK_FFøncSign
 0x10020a3

	)

2075 
	#XK_LúaSign
 0x10020a4

	)

2076 
	#XK_MûlSign
 0x10020a5

	)

2077 
	#XK_NaúaSign
 0x10020a6

	)

2078 
	#XK_Pe£èSign
 0x10020a7

	)

2079 
	#XK_Ru≥eSign
 0x10020a8

	)

2080 
	#XK_W⁄Sign
 0x10020a9

	)

2081 
	#XK_NewSheqñSign
 0x10020Ø

	)

2082 
	#XK_D⁄gSign
 0x10020ab

	)

2083 
	#XK_EuroSign
 0x20a¯

	)

2086 #ifde‡
XK_MATHEMATICAL


2088 
	#XK_zîosu≥ri‹
 0x1002070

	)

2089 
	#XK_foursu≥ri‹
 0x1002074

	)

2090 
	#XK_fivesu≥ri‹
 0x1002075

	)

2091 
	#XK_sixsu≥ri‹
 0x1002076

	)

2092 
	#XK_£vísu≥ri‹
 0x1002077

	)

2093 
	#XK_eightsu≥ri‹
 0x1002078

	)

2094 
	#XK_nöesu≥ri‹
 0x1002079

	)

2095 
	#XK_zîosubs¸ùt
 0x1002080

	)

2096 
	#XK_⁄esubs¸ùt
 0x1002081

	)

2097 
	#XK_twosubs¸ùt
 0x1002082

	)

2098 
	#XK_thªesubs¸ùt
 0x1002083

	)

2099 
	#XK_foursubs¸ùt
 0x1002084

	)

2100 
	#XK_fivesubs¸ùt
 0x1002085

	)

2101 
	#XK_sixsubs¸ùt
 0x1002086

	)

2102 
	#XK_£vísubs¸ùt
 0x1002087

	)

2103 
	#XK_eightsubs¸ùt
 0x1002088

	)

2104 
	#XK_nöesubs¸ùt
 0x1002089

	)

2105 
	#XK_∑πdif„ª¡ül
 0x1002202

	)

2106 
	#XK_em±y£t
 0x1002205

	)

2107 
	#XK_ñemítof
 0x1002208

	)

2108 
	#XK_nŸñemítof
 0x1002209

	)

2109 
	#XK_c⁄èößs
 0x100220B

	)

2110 
	#XK_squ¨îoŸ
 0x100221A

	)

2111 
	#XK_cubîoŸ
 0x100221B

	)

2112 
	#XK_fouπhroŸ
 0x100221C

	)

2113 
	#XK_döãgøl
 0x100222C

	)

2114 
	#XK_töãgøl
 0x100222D

	)

2115 
	#XK_beˇu£
 0x1002235

	)

2116 
	#XK_≠¥oxeq
 0x1002248

	)

2117 
	#XK_nŸ≠¥oxeq
 0x1002247

	)

2118 
	#XK_nŸidítiˇl
 0x1002262

	)

2119 
	#XK_°ri˘eq
 0x1002263

	)

2122 #ifde‡
XK_BRAILLE


2123 
	#XK_bøûÀ_dŸ_1
 0xfff1

	)

2124 
	#XK_bøûÀ_dŸ_2
 0xfff2

	)

2125 
	#XK_bøûÀ_dŸ_3
 0xfff3

	)

2126 
	#XK_bøûÀ_dŸ_4
 0xfff4

	)

2127 
	#XK_bøûÀ_dŸ_5
 0xfff5

	)

2128 
	#XK_bøûÀ_dŸ_6
 0xfff6

	)

2129 
	#XK_bøûÀ_dŸ_7
 0xfff7

	)

2130 
	#XK_bøûÀ_dŸ_8
 0xfff8

	)

2131 
	#XK_bøûÀ_dŸ_9
 0xfff9

	)

2132 
	#XK_bøûÀ_dŸ_10
 0xffÁ

	)

2133 
	#XK_bøûÀ_bœnk
 0x1002800

	)

2134 
	#XK_bøûÀ_dŸs_1
 0x1002801

	)

2135 
	#XK_bøûÀ_dŸs_2
 0x1002802

	)

2136 
	#XK_bøûÀ_dŸs_12
 0x1002803

	)

2137 
	#XK_bøûÀ_dŸs_3
 0x1002804

	)

2138 
	#XK_bøûÀ_dŸs_13
 0x1002805

	)

2139 
	#XK_bøûÀ_dŸs_23
 0x1002806

	)

2140 
	#XK_bøûÀ_dŸs_123
 0x1002807

	)

2141 
	#XK_bøûÀ_dŸs_4
 0x1002808

	)

2142 
	#XK_bøûÀ_dŸs_14
 0x1002809

	)

2143 
	#XK_bøûÀ_dŸs_24
 0x100280®

	)

2144 
	#XK_bøûÀ_dŸs_124
 0x100280b

	)

2145 
	#XK_bøûÀ_dŸs_34
 0x100280¯

	)

2146 
	#XK_bøûÀ_dŸs_134
 0x100280d

	)

2147 
	#XK_bøûÀ_dŸs_234
 0x100280ê

	)

2148 
	#XK_bøûÀ_dŸs_1234
 0x100280‡

	)

2149 
	#XK_bøûÀ_dŸs_5
 0x1002810

	)

2150 
	#XK_bøûÀ_dŸs_15
 0x1002811

	)

2151 
	#XK_bøûÀ_dŸs_25
 0x1002812

	)

2152 
	#XK_bøûÀ_dŸs_125
 0x1002813

	)

2153 
	#XK_bøûÀ_dŸs_35
 0x1002814

	)

2154 
	#XK_bøûÀ_dŸs_135
 0x1002815

	)

2155 
	#XK_bøûÀ_dŸs_235
 0x1002816

	)

2156 
	#XK_bøûÀ_dŸs_1235
 0x1002817

	)

2157 
	#XK_bøûÀ_dŸs_45
 0x1002818

	)

2158 
	#XK_bøûÀ_dŸs_145
 0x1002819

	)

2159 
	#XK_bøûÀ_dŸs_245
 0x100281®

	)

2160 
	#XK_bøûÀ_dŸs_1245
 0x100281b

	)

2161 
	#XK_bøûÀ_dŸs_345
 0x100281¯

	)

2162 
	#XK_bøûÀ_dŸs_1345
 0x100281d

	)

2163 
	#XK_bøûÀ_dŸs_2345
 0x100281ê

	)

2164 
	#XK_bøûÀ_dŸs_12345
 0x100281‡

	)

2165 
	#XK_bøûÀ_dŸs_6
 0x1002820

	)

2166 
	#XK_bøûÀ_dŸs_16
 0x1002821

	)

2167 
	#XK_bøûÀ_dŸs_26
 0x1002822

	)

2168 
	#XK_bøûÀ_dŸs_126
 0x1002823

	)

2169 
	#XK_bøûÀ_dŸs_36
 0x1002824

	)

2170 
	#XK_bøûÀ_dŸs_136
 0x1002825

	)

2171 
	#XK_bøûÀ_dŸs_236
 0x1002826

	)

2172 
	#XK_bøûÀ_dŸs_1236
 0x1002827

	)

2173 
	#XK_bøûÀ_dŸs_46
 0x1002828

	)

2174 
	#XK_bøûÀ_dŸs_146
 0x1002829

	)

2175 
	#XK_bøûÀ_dŸs_246
 0x100282®

	)

2176 
	#XK_bøûÀ_dŸs_1246
 0x100282b

	)

2177 
	#XK_bøûÀ_dŸs_346
 0x100282¯

	)

2178 
	#XK_bøûÀ_dŸs_1346
 0x100282d

	)

2179 
	#XK_bøûÀ_dŸs_2346
 0x100282ê

	)

2180 
	#XK_bøûÀ_dŸs_12346
 0x100282‡

	)

2181 
	#XK_bøûÀ_dŸs_56
 0x1002830

	)

2182 
	#XK_bøûÀ_dŸs_156
 0x1002831

	)

2183 
	#XK_bøûÀ_dŸs_256
 0x1002832

	)

2184 
	#XK_bøûÀ_dŸs_1256
 0x1002833

	)

2185 
	#XK_bøûÀ_dŸs_356
 0x1002834

	)

2186 
	#XK_bøûÀ_dŸs_1356
 0x1002835

	)

2187 
	#XK_bøûÀ_dŸs_2356
 0x1002836

	)

2188 
	#XK_bøûÀ_dŸs_12356
 0x1002837

	)

2189 
	#XK_bøûÀ_dŸs_456
 0x1002838

	)

2190 
	#XK_bøûÀ_dŸs_1456
 0x1002839

	)

2191 
	#XK_bøûÀ_dŸs_2456
 0x100283®

	)

2192 
	#XK_bøûÀ_dŸs_12456
 0x100283b

	)

2193 
	#XK_bøûÀ_dŸs_3456
 0x100283¯

	)

2194 
	#XK_bøûÀ_dŸs_13456
 0x100283d

	)

2195 
	#XK_bøûÀ_dŸs_23456
 0x100283ê

	)

2196 
	#XK_bøûÀ_dŸs_123456
 0x100283‡

	)

2197 
	#XK_bøûÀ_dŸs_7
 0x1002840

	)

2198 
	#XK_bøûÀ_dŸs_17
 0x1002841

	)

2199 
	#XK_bøûÀ_dŸs_27
 0x1002842

	)

2200 
	#XK_bøûÀ_dŸs_127
 0x1002843

	)

2201 
	#XK_bøûÀ_dŸs_37
 0x1002844

	)

2202 
	#XK_bøûÀ_dŸs_137
 0x1002845

	)

2203 
	#XK_bøûÀ_dŸs_237
 0x1002846

	)

2204 
	#XK_bøûÀ_dŸs_1237
 0x1002847

	)

2205 
	#XK_bøûÀ_dŸs_47
 0x1002848

	)

2206 
	#XK_bøûÀ_dŸs_147
 0x1002849

	)

2207 
	#XK_bøûÀ_dŸs_247
 0x100284®

	)

2208 
	#XK_bøûÀ_dŸs_1247
 0x100284b

	)

2209 
	#XK_bøûÀ_dŸs_347
 0x100284¯

	)

2210 
	#XK_bøûÀ_dŸs_1347
 0x100284d

	)

2211 
	#XK_bøûÀ_dŸs_2347
 0x100284ê

	)

2212 
	#XK_bøûÀ_dŸs_12347
 0x100284‡

	)

2213 
	#XK_bøûÀ_dŸs_57
 0x1002850

	)

2214 
	#XK_bøûÀ_dŸs_157
 0x1002851

	)

2215 
	#XK_bøûÀ_dŸs_257
 0x1002852

	)

2216 
	#XK_bøûÀ_dŸs_1257
 0x1002853

	)

2217 
	#XK_bøûÀ_dŸs_357
 0x1002854

	)

2218 
	#XK_bøûÀ_dŸs_1357
 0x1002855

	)

2219 
	#XK_bøûÀ_dŸs_2357
 0x1002856

	)

2220 
	#XK_bøûÀ_dŸs_12357
 0x1002857

	)

2221 
	#XK_bøûÀ_dŸs_457
 0x1002858

	)

2222 
	#XK_bøûÀ_dŸs_1457
 0x1002859

	)

2223 
	#XK_bøûÀ_dŸs_2457
 0x100285®

	)

2224 
	#XK_bøûÀ_dŸs_12457
 0x100285b

	)

2225 
	#XK_bøûÀ_dŸs_3457
 0x100285¯

	)

2226 
	#XK_bøûÀ_dŸs_13457
 0x100285d

	)

2227 
	#XK_bøûÀ_dŸs_23457
 0x100285ê

	)

2228 
	#XK_bøûÀ_dŸs_123457
 0x100285‡

	)

2229 
	#XK_bøûÀ_dŸs_67
 0x1002860

	)

2230 
	#XK_bøûÀ_dŸs_167
 0x1002861

	)

2231 
	#XK_bøûÀ_dŸs_267
 0x1002862

	)

2232 
	#XK_bøûÀ_dŸs_1267
 0x1002863

	)

2233 
	#XK_bøûÀ_dŸs_367
 0x1002864

	)

2234 
	#XK_bøûÀ_dŸs_1367
 0x1002865

	)

2235 
	#XK_bøûÀ_dŸs_2367
 0x1002866

	)

2236 
	#XK_bøûÀ_dŸs_12367
 0x1002867

	)

2237 
	#XK_bøûÀ_dŸs_467
 0x1002868

	)

2238 
	#XK_bøûÀ_dŸs_1467
 0x1002869

	)

2239 
	#XK_bøûÀ_dŸs_2467
 0x100286®

	)

2240 
	#XK_bøûÀ_dŸs_12467
 0x100286b

	)

2241 
	#XK_bøûÀ_dŸs_3467
 0x100286¯

	)

2242 
	#XK_bøûÀ_dŸs_13467
 0x100286d

	)

2243 
	#XK_bøûÀ_dŸs_23467
 0x100286ê

	)

2244 
	#XK_bøûÀ_dŸs_123467
 0x100286‡

	)

2245 
	#XK_bøûÀ_dŸs_567
 0x1002870

	)

2246 
	#XK_bøûÀ_dŸs_1567
 0x1002871

	)

2247 
	#XK_bøûÀ_dŸs_2567
 0x1002872

	)

2248 
	#XK_bøûÀ_dŸs_12567
 0x1002873

	)

2249 
	#XK_bøûÀ_dŸs_3567
 0x1002874

	)

2250 
	#XK_bøûÀ_dŸs_13567
 0x1002875

	)

2251 
	#XK_bøûÀ_dŸs_23567
 0x1002876

	)

2252 
	#XK_bøûÀ_dŸs_123567
 0x1002877

	)

2253 
	#XK_bøûÀ_dŸs_4567
 0x1002878

	)

2254 
	#XK_bøûÀ_dŸs_14567
 0x1002879

	)

2255 
	#XK_bøûÀ_dŸs_24567
 0x100287®

	)

2256 
	#XK_bøûÀ_dŸs_124567
 0x100287b

	)

2257 
	#XK_bøûÀ_dŸs_34567
 0x100287¯

	)

2258 
	#XK_bøûÀ_dŸs_134567
 0x100287d

	)

2259 
	#XK_bøûÀ_dŸs_234567
 0x100287ê

	)

2260 
	#XK_bøûÀ_dŸs_1234567
 0x100287‡

	)

2261 
	#XK_bøûÀ_dŸs_8
 0x1002880

	)

2262 
	#XK_bøûÀ_dŸs_18
 0x1002881

	)

2263 
	#XK_bøûÀ_dŸs_28
 0x1002882

	)

2264 
	#XK_bøûÀ_dŸs_128
 0x1002883

	)

2265 
	#XK_bøûÀ_dŸs_38
 0x1002884

	)

2266 
	#XK_bøûÀ_dŸs_138
 0x1002885

	)

2267 
	#XK_bøûÀ_dŸs_238
 0x1002886

	)

2268 
	#XK_bøûÀ_dŸs_1238
 0x1002887

	)

2269 
	#XK_bøûÀ_dŸs_48
 0x1002888

	)

2270 
	#XK_bøûÀ_dŸs_148
 0x1002889

	)

2271 
	#XK_bøûÀ_dŸs_248
 0x100288®

	)

2272 
	#XK_bøûÀ_dŸs_1248
 0x100288b

	)

2273 
	#XK_bøûÀ_dŸs_348
 0x100288¯

	)

2274 
	#XK_bøûÀ_dŸs_1348
 0x100288d

	)

2275 
	#XK_bøûÀ_dŸs_2348
 0x100288ê

	)

2276 
	#XK_bøûÀ_dŸs_12348
 0x100288‡

	)

2277 
	#XK_bøûÀ_dŸs_58
 0x1002890

	)

2278 
	#XK_bøûÀ_dŸs_158
 0x1002891

	)

2279 
	#XK_bøûÀ_dŸs_258
 0x1002892

	)

2280 
	#XK_bøûÀ_dŸs_1258
 0x1002893

	)

2281 
	#XK_bøûÀ_dŸs_358
 0x1002894

	)

2282 
	#XK_bøûÀ_dŸs_1358
 0x1002895

	)

2283 
	#XK_bøûÀ_dŸs_2358
 0x1002896

	)

2284 
	#XK_bøûÀ_dŸs_12358
 0x1002897

	)

2285 
	#XK_bøûÀ_dŸs_458
 0x1002898

	)

2286 
	#XK_bøûÀ_dŸs_1458
 0x1002899

	)

2287 
	#XK_bøûÀ_dŸs_2458
 0x100289®

	)

2288 
	#XK_bøûÀ_dŸs_12458
 0x100289b

	)

2289 
	#XK_bøûÀ_dŸs_3458
 0x100289¯

	)

2290 
	#XK_bøûÀ_dŸs_13458
 0x100289d

	)

2291 
	#XK_bøûÀ_dŸs_23458
 0x100289ê

	)

2292 
	#XK_bøûÀ_dŸs_123458
 0x100289‡

	)

2293 
	#XK_bøûÀ_dŸs_68
 0x10028a0

	)

2294 
	#XK_bøûÀ_dŸs_168
 0x10028a1

	)

2295 
	#XK_bøûÀ_dŸs_268
 0x10028a2

	)

2296 
	#XK_bøûÀ_dŸs_1268
 0x10028a3

	)

2297 
	#XK_bøûÀ_dŸs_368
 0x10028a4

	)

2298 
	#XK_bøûÀ_dŸs_1368
 0x10028a5

	)

2299 
	#XK_bøûÀ_dŸs_2368
 0x10028a6

	)

2300 
	#XK_bøûÀ_dŸs_12368
 0x10028a7

	)

2301 
	#XK_bøûÀ_dŸs_468
 0x10028a8

	)

2302 
	#XK_bøûÀ_dŸs_1468
 0x10028a9

	)

2303 
	#XK_bøûÀ_dŸs_2468
 0x10028Ø

	)

2304 
	#XK_bøûÀ_dŸs_12468
 0x10028ab

	)

2305 
	#XK_bøûÀ_dŸs_3468
 0x10028a¯

	)

2306 
	#XK_bøûÀ_dŸs_13468
 0x10028ad

	)

2307 
	#XK_bøûÀ_dŸs_23468
 0x10028´

	)

2308 
	#XK_bøûÀ_dŸs_123468
 0x10028a‡

	)

2309 
	#XK_bøûÀ_dŸs_568
 0x10028b0

	)

2310 
	#XK_bøûÀ_dŸs_1568
 0x10028b1

	)

2311 
	#XK_bøûÀ_dŸs_2568
 0x10028b2

	)

2312 
	#XK_bøûÀ_dŸs_12568
 0x10028b3

	)

2313 
	#XK_bøûÀ_dŸs_3568
 0x10028b4

	)

2314 
	#XK_bøûÀ_dŸs_13568
 0x10028b5

	)

2315 
	#XK_bøûÀ_dŸs_23568
 0x10028b6

	)

2316 
	#XK_bøûÀ_dŸs_123568
 0x10028b7

	)

2317 
	#XK_bøûÀ_dŸs_4568
 0x10028b8

	)

2318 
	#XK_bøûÀ_dŸs_14568
 0x10028b9

	)

2319 
	#XK_bøûÀ_dŸs_24568
 0x10028b®

	)

2320 
	#XK_bøûÀ_dŸs_124568
 0x10028bb

	)

2321 
	#XK_bøûÀ_dŸs_34568
 0x10028b¯

	)

2322 
	#XK_bøûÀ_dŸs_134568
 0x10028bd

	)

2323 
	#XK_bøûÀ_dŸs_234568
 0x10028bê

	)

2324 
	#XK_bøûÀ_dŸs_1234568
 0x10028b‡

	)

2325 
	#XK_bøûÀ_dŸs_78
 0x10028c0

	)

2326 
	#XK_bøûÀ_dŸs_178
 0x10028c1

	)

2327 
	#XK_bøûÀ_dŸs_278
 0x10028c2

	)

2328 
	#XK_bøûÀ_dŸs_1278
 0x10028c3

	)

2329 
	#XK_bøûÀ_dŸs_378
 0x10028c4

	)

2330 
	#XK_bøûÀ_dŸs_1378
 0x10028c5

	)

2331 
	#XK_bøûÀ_dŸs_2378
 0x10028c6

	)

2332 
	#XK_bøûÀ_dŸs_12378
 0x10028c7

	)

2333 
	#XK_bøûÀ_dŸs_478
 0x10028c8

	)

2334 
	#XK_bøûÀ_dŸs_1478
 0x10028c9

	)

2335 
	#XK_bøûÀ_dŸs_2478
 0x10028ˇ

	)

2336 
	#XK_bøûÀ_dŸs_12478
 0x10028cb

	)

2337 
	#XK_bøûÀ_dŸs_3478
 0x10028c¯

	)

2338 
	#XK_bøûÀ_dŸs_13478
 0x10028cd

	)

2339 
	#XK_bøûÀ_dŸs_23478
 0x10028˚

	)

2340 
	#XK_bøûÀ_dŸs_123478
 0x10028c‡

	)

2341 
	#XK_bøûÀ_dŸs_578
 0x10028d0

	)

2342 
	#XK_bøûÀ_dŸs_1578
 0x10028d1

	)

2343 
	#XK_bøûÀ_dŸs_2578
 0x10028d2

	)

2344 
	#XK_bøûÀ_dŸs_12578
 0x10028d3

	)

2345 
	#XK_bøûÀ_dŸs_3578
 0x10028d4

	)

2346 
	#XK_bøûÀ_dŸs_13578
 0x10028d5

	)

2347 
	#XK_bøûÀ_dŸs_23578
 0x10028d6

	)

2348 
	#XK_bøûÀ_dŸs_123578
 0x10028d7

	)

2349 
	#XK_bøûÀ_dŸs_4578
 0x10028d8

	)

2350 
	#XK_bøûÀ_dŸs_14578
 0x10028d9

	)

2351 
	#XK_bøûÀ_dŸs_24578
 0x10028d®

	)

2352 
	#XK_bøûÀ_dŸs_124578
 0x10028db

	)

2353 
	#XK_bøûÀ_dŸs_34578
 0x10028d¯

	)

2354 
	#XK_bøûÀ_dŸs_134578
 0x10028dd

	)

2355 
	#XK_bøûÀ_dŸs_234578
 0x10028dê

	)

2356 
	#XK_bøûÀ_dŸs_1234578
 0x10028d‡

	)

2357 
	#XK_bøûÀ_dŸs_678
 0x10028e0

	)

2358 
	#XK_bøûÀ_dŸs_1678
 0x10028e1

	)

2359 
	#XK_bøûÀ_dŸs_2678
 0x10028e2

	)

2360 
	#XK_bøûÀ_dŸs_12678
 0x10028e3

	)

2361 
	#XK_bøûÀ_dŸs_3678
 0x10028e4

	)

2362 
	#XK_bøûÀ_dŸs_13678
 0x10028e5

	)

2363 
	#XK_bøûÀ_dŸs_23678
 0x10028e6

	)

2364 
	#XK_bøûÀ_dŸs_123678
 0x10028e7

	)

2365 
	#XK_bøûÀ_dŸs_4678
 0x10028e8

	)

2366 
	#XK_bøûÀ_dŸs_14678
 0x10028e9

	)

2367 
	#XK_bøûÀ_dŸs_24678
 0x10028ó

	)

2368 
	#XK_bøûÀ_dŸs_124678
 0x10028eb

	)

2369 
	#XK_bøûÀ_dŸs_34678
 0x10028e¯

	)

2370 
	#XK_bøûÀ_dŸs_134678
 0x10028ed

	)

2371 
	#XK_bøûÀ_dŸs_234678
 0x10028ì

	)

2372 
	#XK_bøûÀ_dŸs_1234678
 0x10028e‡

	)

2373 
	#XK_bøûÀ_dŸs_5678
 0x10028f0

	)

2374 
	#XK_bøûÀ_dŸs_15678
 0x10028f1

	)

2375 
	#XK_bøûÀ_dŸs_25678
 0x10028f2

	)

2376 
	#XK_bøûÀ_dŸs_125678
 0x10028f3

	)

2377 
	#XK_bøûÀ_dŸs_35678
 0x10028f4

	)

2378 
	#XK_bøûÀ_dŸs_135678
 0x10028f5

	)

2379 
	#XK_bøûÀ_dŸs_235678
 0x10028f6

	)

2380 
	#XK_bøûÀ_dŸs_1235678
 0x10028f7

	)

2381 
	#XK_bøûÀ_dŸs_45678
 0x10028f8

	)

2382 
	#XK_bøûÀ_dŸs_145678
 0x10028f9

	)

2383 
	#XK_bøûÀ_dŸs_245678
 0x10028Á

	)

2384 
	#XK_bøûÀ_dŸs_1245678
 0x10028fb

	)

2385 
	#XK_bøûÀ_dŸs_345678
 0x10028f¯

	)

2386 
	#XK_bøûÀ_dŸs_1345678
 0x10028fd

	)

2387 
	#XK_bøûÀ_dŸs_2345678
 0x10028„

	)

2388 
	#XK_bøûÀ_dŸs_12345678
 0x10028f‡

	)

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_NEWUTS
 0x04000000

	)

63 
	#CLONE_NEWIPC
 0x08000000

	)

64 
	#CLONE_NEWUSER
 0x10000000

	)

65 
	#CLONE_NEWPID
 0x20000000

	)

66 
	#CLONE_NEWNET
 0x40000000

	)

67 
	#CLONE_IO
 0x80000000

	)

71 
	ssched_∑øm


73 
	m__sched_¥i‹ôy
;

76 
	g__BEGIN_DECLS


78 #ifde‡
__USE_MISC


80 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

81 
__Êags
, *
__¨g
, ...Ë
__THROW
;

84 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

87 
	$sched_gë˝u
 (Ë
__THROW
;

90 
__END_DECLS


94 #i‡!
deföed
 
__deföed_sched∑øm
 \

95 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

96 
	#__deföed_sched∑øm
 1

	)

98 
	s__sched_∑øm


100 
__sched_¥i‹ôy
;

102 #unde‡
__√ed_sched∑øm


106 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


107 
	#__˝u_£t_t_deföed


	)

109 
	#__CPU_SETSIZE
 1024

	)

110 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

113 
	t__˝u_mask
;

116 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

117 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

122 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

123 } 
	t˝u_£t_t
;

126 #i‡
	`__GNUC_PREREQ
 (2, 91)

127 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

128 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

132 
size_t
 
__i
; \

133 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

134 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

135 
__i
 = 0; __ò< 
__imax
; ++__i) \

136 
__bôs
[
__i
] = 0; \

137 
	}
} 0)

	)

139 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

140 (
__exãnsi⁄__
 \

141 ({ 
size_t
 
__˝u
 = (
˝u
); \

142 
__˝u
 < 8 * (
£tsize
) \

143 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

144 |
	`__CPUMASK
 (
__˝u
)) \

145 : 0; }))

	)

146 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 &~
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

159 : 0; }))

	)

161 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

162 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

164 #i‡
__GNUC_PREREQ
 (2, 91)

165 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

166 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
__exãnsi⁄__
 \

170 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

171 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

172 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

173 
size_t
 
__i
; \

174 
__i
 = 0; __ò< 
__imax
; ++__i) \

175 i‡(
__bôs
[
__i
] != __bits[__i]) \

177 
__i
 =
__imax
; }))

	)

180 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

181 (
__exãnsi⁄__
 \

182 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

183 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

184 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

185 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

186 
size_t
 
__i
; \

187 
__i
 = 0; __ò< 
__imax
; ++__i) \

188 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

189 
__de°
; }))

	)

191 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

192 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

193 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

194 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

196 
__BEGIN_DECLS


198 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

199 
__THROW
;

200 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

201 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

203 
__END_DECLS


	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

55 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

56 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

61 #i‚de‡
_WINT_T


66 
	#_WINT_T


	)

67 
	twöt_t
;

71 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

72 && 
deföed
 
__WINT_TYPE__


73 
__BEGIN_NAMESPACE_STD


74 
__WINT_TYPE__
 
	twöt_t
;

75 
	g__END_NAMESPACE_STD


80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

561 #ifdef 
__USE_XOPEN2K8


564 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

20 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

21 
	#__OPTION_EGLIBC_ENVZ
 1

	)

22 
	#__OPTION_EGLIBC_FCVT
 1

	)

23 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

24 
	#__OPTION_EGLIBC_FSTAB
 1

	)

25 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

26 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

27 
	#__OPTION_EGLIBC_INET
 1

	)

28 
	#__OPTION_EGLIBC_LIBM
 1

	)

29 
	#__OPTION_EGLIBC_LOCALES
 1

	)

30 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

31 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

32 
	#__OPTION_EGLIBC_NIS
 1

	)

33 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

34 
	#__OPTION_EGLIBC_RCMD
 1

	)

35 
	#__OPTION_EGLIBC_SPAWN
 1

	)

36 
	#__OPTION_EGLIBC_STREAMS
 1

	)

37 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

38 
	#__OPTION_EGLIBC_UTMP
 1

	)

39 
	#__OPTION_EGLIBC_UTMPX
 1

	)

40 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

41 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

42 
	#__OPTION_POSIX_REGEXP
 1

	)

43 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

44 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<°ddef.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@
1
.
1
/usr/include
359
14996
c3.drawLine/drawLines.cpp
c3.drawObject/drawObject.cpp
c3.drawPoints/drawPoints.cpp
c3.drawPolygonBitmap/draw.cpp
c3.drawStart/draw.cpp
c3.drawTriangles/triangles.cpp
c3.scissor/draw.cpp
c3.template/draw.cpp
c4.translate/draw.cpp
chapt02/bounce/bounce.cpp
chapt02/glrect/glrect.cpp
chapt02/simple/simple.cpp
chapt03/lines/lines.cpp
chapt03/linesw/linesw.cpp
chapt03/lstipple/lstipple.cpp
chapt03/lstrips/lstrips.cpp
chapt03/points/points.cpp
chapt03/pointsz/pointsz.cpp
chapt03/pstipple/pstipple.cpp
chapt03/scissor/scissor.cpp
chapt03/single/single.cpp
chapt03/star/star.cpp
chapt03/stencil/stencil.cpp
chapt03/triangle/triangle.cpp
chapt04/Atom/Atom.cpp
chapt04/Atom2/atom2.cpp
chapt04/Ortho/ortho.cpp
chapt04/Perspect/perspect.cpp
chapt04/Solar/solar.cpp
chapt04/SphereWorld/sphereworld.cpp
chapt04/Transform/transform.cpp
chapt04/Transformgl/transformgl.cpp
helloGL/helloGL.cpp
include/GL/freeglut.h
include/GL/freeglut_ext.h
include/GL/freeglut_std.h
include/GL/gl.h
include/GL/gl_mangle.h
include/GL/glext.h
include/GL/glu.h
include/GL/glu_mangle.h
include/GL/glut.h
include/GL/glx.h
include/GL/glx_mangle.h
include/GL/glxext.h
include/GL/internal/dri_interface.h
shared/GLee.c
shared/GLee.h
shared/TriangleMesh.cpp
shared/TriangleMesh.h
shared/VBOMesh.cpp
shared/VBOMesh.h
shared/freeglut.h
shared/freeglut_ext.h
shared/freeglut_std.h
shared/glFrame.h
shared/glfrustum.h
shared/gltools.cpp
shared/gltools.h
shared/glut.h
shared/math3d.cpp
shared/math3d.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/Iex.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexBaseExc.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexErrnoExc.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexMacros.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexMathExc.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IexThrowErrnoExc.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThread.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadMutex.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadPool.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/IlmThreadSemaphore.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBox.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathBoxAlgo.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColor.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathColorAlgo.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathEuler.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathExc.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrame.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFrustum.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathFun.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGL.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathGLU.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathHalfLimits.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathInterval.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLimits.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLine.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathLineAlgo.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMath.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrix.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathMatrixAlgo.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlane.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathPlatform.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathQuat.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRandom.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathRoots.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathShear.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathSphere.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVec.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImathVecAlgo.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfArray.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfBoxAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCRgbaFile.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelList.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChannelListAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChromaticities.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfChromaticitiesAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompression.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfCompressionAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfConvert.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfDoubleAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmap.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfEnvmapAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFloatAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfFrameBuffer.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHeader.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfHuf.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIO.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfInputFile.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfInt64.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfIntAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCode.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfKeyCodeAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLineOrder.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLineOrderAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfLut.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfMatrixAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfName.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfOpaqueAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfOutputFile.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPixelType.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImage.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfPreviewImageAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgba.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaFile.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfRgbaYca.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStandardAttributes.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStdIO.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfStringAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTestFile.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfThreading.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescription.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTileDescriptionAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledInputFile.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledOutputFile.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTiledRgbaFile.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCode.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfTimeCodeAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVecAttribute.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfVersion.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfWav.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/ImfXdr.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/OpenEXRConfig.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/half.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfFunction.h
shared/openexr-1.4.0-vsnet2003/include/OpenEXR/halfLimits.h
shared/openexr-mac/include/OpenEXR/Iex.h
shared/openexr-mac/include/OpenEXR/IexBaseExc.h
shared/openexr-mac/include/OpenEXR/IexErrnoExc.h
shared/openexr-mac/include/OpenEXR/IexMacros.h
shared/openexr-mac/include/OpenEXR/IexMathExc.h
shared/openexr-mac/include/OpenEXR/IexThrowErrnoExc.h
shared/openexr-mac/include/OpenEXR/IlmThread.h
shared/openexr-mac/include/OpenEXR/IlmThreadMutex.h
shared/openexr-mac/include/OpenEXR/IlmThreadPool.h
shared/openexr-mac/include/OpenEXR/IlmThreadSemaphore.h
shared/openexr-mac/include/OpenEXR/ImathBox.h
shared/openexr-mac/include/OpenEXR/ImathBoxAlgo.h
shared/openexr-mac/include/OpenEXR/ImathColor.h
shared/openexr-mac/include/OpenEXR/ImathColorAlgo.h
shared/openexr-mac/include/OpenEXR/ImathEuler.h
shared/openexr-mac/include/OpenEXR/ImathExc.h
shared/openexr-mac/include/OpenEXR/ImathFrame.h
shared/openexr-mac/include/OpenEXR/ImathFrustum.h
shared/openexr-mac/include/OpenEXR/ImathFun.h
shared/openexr-mac/include/OpenEXR/ImathGL.h
shared/openexr-mac/include/OpenEXR/ImathGLU.h
shared/openexr-mac/include/OpenEXR/ImathHalfLimits.h
shared/openexr-mac/include/OpenEXR/ImathInterval.h
shared/openexr-mac/include/OpenEXR/ImathLimits.h
shared/openexr-mac/include/OpenEXR/ImathLine.h
shared/openexr-mac/include/OpenEXR/ImathLineAlgo.h
shared/openexr-mac/include/OpenEXR/ImathMath.h
shared/openexr-mac/include/OpenEXR/ImathMatrix.h
shared/openexr-mac/include/OpenEXR/ImathMatrixAlgo.h
shared/openexr-mac/include/OpenEXR/ImathPlane.h
shared/openexr-mac/include/OpenEXR/ImathPlatform.h
shared/openexr-mac/include/OpenEXR/ImathQuat.h
shared/openexr-mac/include/OpenEXR/ImathRandom.h
shared/openexr-mac/include/OpenEXR/ImathRoots.h
shared/openexr-mac/include/OpenEXR/ImathShear.h
shared/openexr-mac/include/OpenEXR/ImathSphere.h
shared/openexr-mac/include/OpenEXR/ImathVec.h
shared/openexr-mac/include/OpenEXR/ImathVecAlgo.h
shared/openexr-mac/include/OpenEXR/ImfArray.h
shared/openexr-mac/include/OpenEXR/ImfAttribute.h
shared/openexr-mac/include/OpenEXR/ImfBoxAttribute.h
shared/openexr-mac/include/OpenEXR/ImfCRgbaFile.h
shared/openexr-mac/include/OpenEXR/ImfChannelList.h
shared/openexr-mac/include/OpenEXR/ImfChannelListAttribute.h
shared/openexr-mac/include/OpenEXR/ImfChromaticities.h
shared/openexr-mac/include/OpenEXR/ImfChromaticitiesAttribute.h
shared/openexr-mac/include/OpenEXR/ImfCompression.h
shared/openexr-mac/include/OpenEXR/ImfCompressionAttribute.h
shared/openexr-mac/include/OpenEXR/ImfConvert.h
shared/openexr-mac/include/OpenEXR/ImfDoubleAttribute.h
shared/openexr-mac/include/OpenEXR/ImfEnvmap.h
shared/openexr-mac/include/OpenEXR/ImfEnvmapAttribute.h
shared/openexr-mac/include/OpenEXR/ImfFloatAttribute.h
shared/openexr-mac/include/OpenEXR/ImfFrameBuffer.h
shared/openexr-mac/include/OpenEXR/ImfHeader.h
shared/openexr-mac/include/OpenEXR/ImfHuf.h
shared/openexr-mac/include/OpenEXR/ImfIO.h
shared/openexr-mac/include/OpenEXR/ImfInputFile.h
shared/openexr-mac/include/OpenEXR/ImfInt64.h
shared/openexr-mac/include/OpenEXR/ImfIntAttribute.h
shared/openexr-mac/include/OpenEXR/ImfKeyCode.h
shared/openexr-mac/include/OpenEXR/ImfKeyCodeAttribute.h
shared/openexr-mac/include/OpenEXR/ImfLineOrder.h
shared/openexr-mac/include/OpenEXR/ImfLineOrderAttribute.h
shared/openexr-mac/include/OpenEXR/ImfLut.h
shared/openexr-mac/include/OpenEXR/ImfMatrixAttribute.h
shared/openexr-mac/include/OpenEXR/ImfName.h
shared/openexr-mac/include/OpenEXR/ImfOpaqueAttribute.h
shared/openexr-mac/include/OpenEXR/ImfOutputFile.h
shared/openexr-mac/include/OpenEXR/ImfPixelType.h
shared/openexr-mac/include/OpenEXR/ImfPreviewImage.h
shared/openexr-mac/include/OpenEXR/ImfPreviewImageAttribute.h
shared/openexr-mac/include/OpenEXR/ImfRgba.h
shared/openexr-mac/include/OpenEXR/ImfRgbaFile.h
shared/openexr-mac/include/OpenEXR/ImfRgbaYca.h
shared/openexr-mac/include/OpenEXR/ImfStandardAttributes.h
shared/openexr-mac/include/OpenEXR/ImfStringAttribute.h
shared/openexr-mac/include/OpenEXR/ImfTestFile.h
shared/openexr-mac/include/OpenEXR/ImfThreading.h
shared/openexr-mac/include/OpenEXR/ImfTileDescription.h
shared/openexr-mac/include/OpenEXR/ImfTileDescriptionAttribute.h
shared/openexr-mac/include/OpenEXR/ImfTiledInputFile.h
shared/openexr-mac/include/OpenEXR/ImfTiledOutputFile.h
shared/openexr-mac/include/OpenEXR/ImfTiledRgbaFile.h
shared/openexr-mac/include/OpenEXR/ImfTimeCode.h
shared/openexr-mac/include/OpenEXR/ImfTimeCodeAttribute.h
shared/openexr-mac/include/OpenEXR/ImfVecAttribute.h
shared/openexr-mac/include/OpenEXR/ImfVersion.h
shared/openexr-mac/include/OpenEXR/ImfWav.h
shared/openexr-mac/include/OpenEXR/ImfXdr.h
shared/openexr-mac/include/OpenEXR/OpenEXRConfig.h
shared/openexr-mac/include/OpenEXR/half.h
shared/openexr-mac/include/OpenEXR/halfFunction.h
shared/openexr-mac/include/OpenEXR/halfLimits.h
shared/stopwatch.h
shared/wglext.h
template.dir/drawPoints.cpp
/usr/include/GL/gl.h
/usr/include/GL/glext.h
/usr/include/GL/glu.h
/usr/include/GL/glut.h
/usr/include/GL/glx.h
/usr/include/GL/glxext.h
/usr/include/X11/Xlib.h
/usr/include/X11/Xutil.h
/usr/include/assert.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/math.h
/usr/include/memory.h
/usr/include/pthread.h
/usr/include/semaphore.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/time.h
/usr/include/X11/X.h
/usr/include/X11/Xfuncproto.h
/usr/include/X11/Xosdefs.h
/usr/include/X11/keysym.h
/usr/include/alloca.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/semaphore.h
/usr/include/bits/setjmp.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/sys/select.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/X11/Xmd.h
/usr/include/X11/keysymdef.h
/usr/include/_G_config.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/predefs.h
/usr/include/bits/sched.h
/usr/include/bits/select.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/ctype.h
/usr/include/gnu/stubs.h
/usr/include/sys/cdefs.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ucontext.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/linux/limits.h
/usr/include/wchar.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/errno.h
/usr/include/gnu/option-groups.h
/usr/include/wctype.h
/usr/include/bits/errno.h
/usr/include/linux/errno.h
/usr/include/asm/errno.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/errno-base.h
