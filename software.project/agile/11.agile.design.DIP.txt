依赖倒置原则 DIP

    高层模块不应该依赖于底层模块，两者都应该依赖于抽象
        高层模块独立于底层模块，则高层模块可以非常容易的被重用


    抽象不依赖于细节，细节依赖于抽象
        接口的关系应该和其使用者更近，而不是其实现者
        接口的拥有者是高层模块，而不是底层模块

        设计实现的顺序是：
            从使用者的角度考虑设计接口，然后再去实现接口

        思维的方式
            从使用者角度，满足使用者的需求

    依赖于抽象的原则
        程序中所有的依赖关系都应该终止于抽象类或接口

        任何类都不应该从具体类派生

        任何变量都不应该持有一个具体类的指针或引用

        任何子类方法都不应该覆写它的任何基类中已经实现了的方法

        每个程序中都会有违反这种原则的代码
            使原则运用的尽可能的多

            对于稳定的类，几乎不变的类，可以暂不考虑上述原则




        

    
    

