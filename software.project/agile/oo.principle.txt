面向对象设计的原则

    单一职责
        对于一个类，应该仅仅有一个引起它变化的原因

        一个需求变化引起的变化，越集中越好。
        最要能集中在一个类中

        需求和类最好是一对一的集中
            多个需求对应一个类
            多个类对应一个需求

    开放--封闭
        软件实体（类，模块，函数）是可以扩展的，但是不可修改

        如果一个程序中的代码必须修改，则将需要修改的地方集中到一个类或包中
            而不是分散到多个地方。对于发布也是非常有好处的。

    Liskov原则
        子类型必须能够替换它的基类型

    依赖倒置
        抽象不应该依赖细节。细节应该依赖抽象
        
    接口隔离
        不应该让用户依赖他们不用的方法

    共同封闭
        一个变化如果对一个包产生影响，则对该包中所有类产生影响
        对于其他包不造成任何影响

    无环依赖
        包的依赖关系中不允许存在环

    稳定依赖
        朝着稳定的方向进行依赖
