
gitk filename
    check the version tree
================================================================================
参考：
http://gitref.org/
http://www.kernel.org/pub/software/scm/git/docs/user-manual.html
这里还有个g官方参考，也不错：
http://www.kernel.org/pub/software/scm/git/docs/everyday.html

发件人: Zhu hai [mailto:hai.zhu@pekall.com] 
发送时间: Thursday, September 08, 2011 10:11 AM
收件人: Chen Jinxiang; 'zhidong.hou'; Wang liang
主题: Git 服务器一些简单操作

Hi,all，
关于dsds git服务器，建议将master分支做为开发的 主干，每个人使用它作为base，创建调试branch， 在调试完成已经阶段后，将正式代码提
交到本地 master分支，然后再push到 服务器。
release的时候基于某个稳定的master版本，创建branch或 者tag即可。
个人的调试开发用分支可以保存到服务器，也可以只保存在本地。

流程如下：
# checkout current source code
git clone git@192.168.10.107:/var/imc2231/

# create branch "debug"
git branch debug

# switch to "debug" branch
git checkout debug

# show current working branch
git branch

# show current status
git status

# modify files
vim ...

# commit changes to local repository
git commit -a 

# merge to master 
git checkout master
git merge debug
# resolve conflicts 
vim ...
git commit -a 

# before push to server, fetch the lastest code from server
git fetch
git merge origin/master
# resolve conflicts if any
...
git commit -a

# push to server
git push 

git remote add dsdemo git@192.168.10.107:/var/imc2231/
demo

# 假设已经clone过完整代码，当前branch为master
# 创建调试分支
git branch zdebug

# 添加别名
git remote add dsdemo git@192.168.10.107:/var/dsds/

# 切换至debug
git checkout zdebug

# ...编辑，测试等
# 完成后将debug分支merge到master中， 但先要检查master是否最新

# 获取服务器最新代码，但不会更新当前branch中代码
git fetch dsdemo

# Merge 服务器中的master到当前branch ：注意，是当前branch
git merge dsdemo/master

# 然后merge debug中的代码到master
git checkout master
git merge zdebug

# 检查代码改变，去掉不需要的代码并解决冲突
git status
git diff
...
# git mergetool 可以使用指定的tool解决冲突，比如meld等 工具均可

# 确认所有代码没有问题，提交到本地分支
git commit -a 

# Push 本地分支中的master branch到服务器，如果服务器已经有master， 则将进行合并(merge)，否则服务器将创建新
的branch master
# 通过指定branch可以将个人的测试代码保存在服务器作为备 份。
git push dsdemo master

# 在push的时候，比如push master到服务器，但服务器中的master已经被其他人更 新了，那么push操作将失败。
# 此时，需要执行fetch后merge,commit， 然后再push。

# 更新debug分支
git checkout zdebug
git merge master
# 解决冲突并提交到本地分支，以此作为后续开发的基本版本，或者基于master创 建新的branch也可。

zhu hai

