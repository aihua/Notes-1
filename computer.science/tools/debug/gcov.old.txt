Hi YT,

 

Below are the steps to generate “gcov” code coverage report for user space applications.

 

1.            Add the below compilation flags in Android.mk corresponding to the Source file,

                LOCAL_CFLAGS  += -fprofile-arcs -ftest-coverage

                LOCAL_LDFLAGS += -lgcov -lgcc

               

2.            Compile Android to generate <sourcefile>.gcno files along with .o files.

                2.1 Verify the <sourcefile>.gcno

                                #find $XMM2231_ROOT_DIR/build -name "*gcno"

                2.2 Flash the board with the images.

               

3.            After flashing the images on the board, set the GCOV environmental variables on the target board

                #export GCOV_PREFIX=”/data/local/gcda”

                #export GCOV_PREFIX_STRIP=1

               

                Usage: For example, if the object file /user/build/hello_world.o was built with -fprofile-arcs, the final executable will try to

                create the data file /user/build/hello_world.gcda when running on the target system. This will fail if the corresponding directory

                does not exist and it is unable to create it. This can be overcome by, for example, setting the environment as `GCOV_PREFIX=/data/local/gcda'

                and `GCOV_PREFIX_STRIP=1'. Such a setting will name the data file /data/local/gcda/build/hello_world.gcda.

 

4.            Run the application - /system/bin/hello_world

 

5.            gcda files will be generated under “/data/local/gcda” folder or along with build directory path, based on GCOV_PREIX and GCOV_PREFIX_STRIP values as explained in step 3.

 

6.            With adb pull, transfer these generated *gcda files to the folder in the build server where corresponding *gcno files got generated during compilation.

 

7.            To generate *.gcov files, run, for ex, if you want code coverage for hello_world.c, which is under $$XMM2231_ROOT_DIR/android/external/tslib/tests

                #cd $$XMM2231_ROOT_DIR/android

                Usage: arm-eabi-gcov -abcfo <obj dir> <c source file path>

                #prebuilt/linux-x86/toolchain/arm-eabi-4.4.0/bin/arm-eabi-gcov -abcfo ../build/android/target/product/xmm2231gl1_0/obj/EXECUTABLES/hello_world_calib_intermediates/tests external/tslib/tests/hello_world.c

 

8.            Generated *.gcov is the code coverage report.

 

Pls let me know if any, issues.

 

Regards,

Mohamed Mohisin

 

