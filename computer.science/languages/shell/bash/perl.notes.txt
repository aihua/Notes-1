perl notes:

产生随机数:
    srand(time());  //time()返回以纪元秒形式表示的当前日期和时间
    for($i=900000; $i«900100; $i+=int(1+rand(10))) //rand(10) 从0到10之间的随机(有理)数
    {
    ...
    }

执行外部命令:
    ``操作符    (结果是用换行分割的字符创)
    system函数 (结果是一整个字符创)

    #@files = system("ls ./sub_data"); #不可用
    @files = `ls ./sub_data`;   #可用

    对于shell内部命令（即在文件系统中无执行文件的命令）这样直接执行会出错，
    错误是无法找到该文件或目录。可以在命令前加sh –c来实现。
    而对cd、umask等SESSION型命令，应该用PERL的内部函数chdir、umask等来实现功能更可靠。

foreach:
    my @array = (1 .. 9);
    my $num;

    foreach $num(@array) {
        $num **= 2;
    }

错误:
$i = 50;
#diplay string "50_yuan"
print "$i_yuan"; //wrong
print "$i"."_yuan" //right

================================
怪异的错误，整个循环只能修改替换一个$f

#!/usr/bin/perl -w

my @files = `ls *.mp3`;
#my $files = `ls *.mp3`;

foreach $f (@files) {
#foreach $f (@files) {

    $f =~ s/(^0|-)//;
 
}


perl

man perl perlre perldoc

www.perl.com/cpan
www.cpan.org
activestate.com

q qq qw qx
分隔符
[] {} / () #

string compare
eq ne gt lt

@argv. «argv»

() [] {}

here doc
print ««end
...
end

print ««'fin'
...
fin

${val}connect

${$val}
eval "\$$val='tame';"

*town=*city

pointer
$p-»   ${$p}

$p-»[0]   ${$p}[0]
$p-»{0}  ${$p}{0}

在函数中的局部变量,声明时最好加上local,或my修饰.my作用域仅仅限于本函数内.local还包括本函数调用的函数

check list:
add "my" before local variable