第三章 计划

当你能度量你所说的，并且能够用数字去表达它时，就表示你了解了它；
若你不能度量它，不能用数字表达它，那么说明你的知识就是匮乏的，不能令人满意的。

                                    凯尔文勋爵(英国物理学家)
需求-->素材-->素材点-->任务

3.1 初始探索
    客户会不断编写新素材
    对素材的估计是相对的，不是绝对的。
        如知道8个素材点需要的时间是4个的2倍即可

    研究、分解和速度
        分解过大的素材
        合并过小的素材

        分解、合并素材的目的原因是使其大小合适于被准确地估算

        相对的素材估算需要乘以一个velocity才可以转化为绝对素材

        随着项目的进行，可以评价已经完成的素材所需要的时间，对下一次迭代的估计进行调整。
            这样对于速度的度量会越来越准。

        开始完成一两个素材来了解团队的速度就够了。
            这个过程称为探究(spike)

    前期对于程序架构的设计，需要找专家讨论
    找到原型系统
    对原型系统进行改进

3.2 发布计划
    使客户对每个素材的成本有所了解, 让他们知道每个素材的商业价值和优先级。
    让客户和业务人员选择实现素材的顺序

3.3 迭代计划
    客户和开发人员决定迭代的规模，一般一个迭代在两周内完成
    客户选择这个周期内的需要实现的素材

    需要根据开发的速度决定实现素材的多少

    迭代开始后，客户就不能够再改变迭代周期内需要实现的素材
    客户可以修改本次迭代范围外的任何素材

    即使没有完成所有素材，迭代也要在指定日期结束。
        然后计算所有迭代(包括刚刚完成的)的速度
        这个速度被用于计划下一次迭代

        如果团队的专业技能提高了，开发速度就应该加快
        如果有人离开了团队，开发速度就应该减慢

3.4 任务计划
    素材需要分解成任务
    一个任务是一个开发人员在4~16小时内实现的一些功能

    开发人员需要在用户的帮助下对素材进行分析
        尽可能完全的列举出所有的任务


    可以在白板上列举出这些任务，由开发人员签订他们需要实现的任务
    签订的任务不必按照每个人的专业来确定

    迭代的中点
        中点时应该召开一次会议。检查进度。
        如果有任务没有按时完成，需要重新分配任务。
        
        如果重新分配也无法完成，则需要通知客户
            客户可以去掉一个低优先级的任务

        需要保证素材的完整完成，而不是多的任务完成

3.5 迭代
    迭代结束后，会给客户演示当前可以运行的程序。
    需要客户给出反馈和评价。

    客户会以新的素材的方式给出评价。

3.6 结论
    通过一次次的迭代，项目进入一种可预测的、舒适的开发节奏。

    客户，业务人员，开发经理都可以看到真实的产品。而不仅仅是设计文档。
        并且能够为这个软件提供自己的反馈
    
    开发人员看到的是自己估算的开发进度

    管理人员从每次迭代中获取数据，他们使用数据来控制和管理项目


