使用工厂方法创建对象
将测试用例中的Dollar和Franc都使用基类代替

在一个地方使用强制转换快速实现代码，一旦测试通过，就把代码移动到应该位置
为了消除显示的类判定(instance of)，引入了多态。

将汇率转换的机制抽取出来，形成一个Bank类
比喻的效果

将加法机制抽取出来，形成一个Sum类 
将Money, Sum都一般化为Expression
在测试用例中，从叶子到根实施一般化

最后，回顾设计。词语和概念是否相同，是否存在难以去除的重复设计?
