Java

有哪几种方法，可以获取类或对象的Class?
1. Object.getClass()
    Class<?> c = warn.getClass();
2. .class 
3. Class.forName()
    Class c = Class.forName("com.duke.MyLocaleServiceProvider");
    Class cDoubleArray = Class.forName("[D");
    Class cStringArray = Class.forName("[[Ljava.lang.String;");

使用反射，能否访问一个类的私有成员或方法？ 如何访问？
可以，调用Field或Method的setAccessible()方法

程序员小强写了一个排序算法，方法声明如下。请问你将怎么测试这个算法？
public static void sort(double[] array);
考虑多种输入情况，输入为null, 空数组， 一个数值，多个相同数值，等等

OS
请问什么是大端字节序(big endian)，小段字节序(little endian)? 网络字节序是大端字节序还是小端字节序？
请写出一个Java程序判断当前系统是否是小端字节序？

小端字节序和大端字节序，也就是字节在内存中的顺序
小端字节序，低字节存于内存低地址；高字节存于内存高地址。
大端字节序，高字节存于内存低地址；低字节存于内存高地址。
网络字节序是大端字节序

static boolean isLittleEndian() {
    if ((byte) 0x1234 == 0x34) {
        return true;
    }
    return false;
}

请描述进程的三个基本状态
1）就绪状态（Ready）：
进程已获得除处理器外的所需资源，等待分配处理器资源；只要分配了处理器进程就可执行。
2）运行状态(Running)：
进程占用处理器资源；处于此状态的进程的数目小于等于处理器的数目。
3）阻塞状态(Blocked)：
由于进程等待某种条件（如I/O操作或进程同步），在条件满足之前无法继续执行。
该事件发生前即使把处理机分配给该进程，也无法运行。

Shell 
请写出一个linux脚本命令，该命令可输出系统中的firefox进程的状态信息
ps aux |grep -v grep|grep firefox

UML
请描述一下工作中用到过的设计模式？
    有没有使用过一些简单的模式，如单例模式，工厂模式，观察者模式等等

Data structure

请使用java语言写一个二分查找算法
主要考察递归使用

public class BinarySearch {
    /**
     * Search a number in an sorted array
     * @param target the number to search
     * @param array the sorted array
     */
    public static int search(double target, double[] array) {
        if (array == null) {
            throw new IllegalArgumentException("input is null");
        }

        return searchInternal(target, array, 0, array.length - 1);
    }

    /**
     * Search a number in an sorted array
     * @param target the number to search
     * @param array the sorted array
     * @param begin begin position of the array to search
     * @param end end position of the array to search
     * @return position of the number or -1 if not found
     */
    private static int searchInternal(double target, double array[], int begin, int end) {
        if (array == null)
            return -1;
        if (begin > end || begin < 0 || end > array.length - 1)
            return -1; // not found

        int middle = (begin + end) / 2;
        if (target == array[middle]) {
            return middle;  // found
        } else if (target < array[middle]) {
            // search low partition
            return searchInternal(target, array, begin, middle - 1);
        } else {
            // search high partition
            return searchInternal(target, array, middle + 1, end);
        }
    }
}

请使用java语言写一个插入排序算法
public static void sort(double[] array) {
    if (array == null) {
        throw new IllegalArgumentException("input is null");
    }

    for (int i = 0; i < array.length; i++) {
        for (int j = 0; j < i; j++) {
            if(array[i] > array[j]) continue;

            double tmp = array[i];
            for (int k = i; k > j; k--) {
                array[k] = array[k-1];
            }
            array[j] = tmp;
            break;
        }
    }
}
