http://zh.wikipedia.org/wiki/MP3

concept:
    MP3
        MPEG-1/2 Layer 3
        数字音频编码和有损压缩格式

    比特率
        32、40、48、56、64、80、96、112、128、160、192、224、256和320 kbit/s
        128kbit/s 的音质已经和CD类似了

        CBR
            在MP3编码的早期，整个文件使用一个固定的比特率，称为固定码率(CBR)。

        VBR
            可变码率（VBR）
            MP3文件的中的音频切分成有自己不同比特率的帧，这样在文件编码的时候就可以动态地改变比特率。
            使得在声音变化大的部分使用较大的比特率而在声音变化小的部分使用较小的比特率


    采样频率
        32、44.1和48kHz
        44.1kHz是最为经常使用的速度（与CD的采样速率相同）

 


    MPEG-1标准
        解码算法和文件格式却进行了细致的定义
        没有MP3编码器的一个精确规范

        MPEG-4中的AAC（Advanced audio coding）将是MP3格式的下一代

Theory:
    它舍弃脉冲编码调制（PCM）音频数据中，对人类听觉不重要的数据（高频声音， 类似于JPEG是一个有损图像压缩），
        从而达到了压缩成小得多的文件大小(1:10, 1:12)

    人耳感受声音的频率范围是 20Hz ~ 20kHz

    MP3格式使用了混合的转换机制将时域信号转换成频域信号：

        32波段多相积分滤波器（PQF）
        36或者12 tap 改良离散余弦滤波器（MDCT）；每个子波段大小可以在0...1和2...31之间独立选择
        混叠衰减后处理

        MP3是利用人耳对高频声音信号不敏感的特性，将时域波形信号转换成频域信号，并划分成多个频段
        对不同的频段使用不同的压缩率，对高频加大压缩比（甚至忽略信号）对低频信号使用小压缩比，保证信号不失真。
     
     编码器：
         1. 编码器通过混合滤波器组将原始声音变换到频率域 ,
         2. 利用心理声学模型 ,估算刚好能被察觉到的噪声水平 ,
         3. 再经过量化 ,转换成 Huffman 编码 ,形成 MP3 位流 。

     解码器
        1. 编码后的谱线成分中 ,经过反量化
        2. 逆变换 ,提取出声音信号

    压缩音频数据:
        1. 将原始声音数据分成固定的分块 
        2. 作顺向 MDCT 变换 
            (修正的离散余弦变换 MDCT ,Modified Discrete Cosine Transform)
            MDCT 本身并不进行数据压缩 , 只是将一组时域数据转换成频域数据 ,
            以得知时域变化情况 ,顺向 MDCT 将每块的值转换为 512 个 MDCT 系数

        3. 量化使数据得到压缩
        4. 在对量化后的变换样值进行比特分配时要考虑使整个量化块最小, 这就成为有损压缩了 。

        MP3 采用了感知音频编码 ( Perceptual Audio Coding) 这一失
        真算法 。人耳感受声音的频率范围是 20Hz220kHz ,MP3 截掉了
        大量的冗余信号和无关的信号 , 编码器通过混合滤波器组将原
        始声音变换到频率域 ,利用心理声学模型 ,估算刚好能被察觉到
        的噪声水平 ,再经过量化 ,转换成 Huffman 编码 ,形成 MP3 位流 。
    
    解压时 
        经反向MDCT将512个系数还原成原始声音数据 
        前后的原始声音数据是不一致的 ,因为在压缩过程中 ,去掉了冗余和不相关数据 。 



android/frameworks/base/media/tests/contents/media_api/music


MP3_48KHz_128kbps_s_1_17_ABR.mp3
MP3_48KHz_128kbps_s_1_17_CBR.mp3
MP3_48KHz_128kbps_s_1_17_ID3V1_ID3V2.mp3
MP3_48KHz_128kbps_s_1_17_ID3V1.mp3
MP3_48KHz_128kbps_s_1_17_ID3V2.mp3
MP3_48KHz_128kbps_s_1_17.mp3
MP3_48KHz_128kbps_s_1_17_VBR.mp3
SHORTMP3.mp3


基本单位
    帧 frame {
        帧头:       
            4字节

        辅助信息:   
            32字节
            // 9、17或者32字节，随着MPEG版本和立体声或者单通道的不同而不同

        声音数据：
            184字节

            每帧播放时间： 0.026秒
            包括384、576、或者1152个采样点（随MPEG的版本和层不同而不同）的帧


        头和辅助信息能够帮助解码器正确地解码相关的霍夫曼编码数据
    }


    帧分类：
        ID3v1标签帧
            ID3v1在文件结尾，以字符串“TAG”为标记，其长度是固定的128个字节，包含了演唱者、歌名、专辑、年份等信息。

        数据帧

        ID3v2标签帧
            ID3v2在文件头，以字符串“ID3”为标志，包含了演唱者，作曲，专辑等信息，长度不固定，扩展了ID3V1的信息量。

    ID3和其他标签
        “标签”是MP3（或其他格式）中保存的包含如标题、艺术家、唱片、音轨号或者其他关于MP3文件信息等添加到文件的数据。
        最为流行的标准标签格式目前是ID3 ID3v1和ID3v2标签，最近的是APEv2标签。


MP3 帧长取决于位率和频率 ,计算公式为 :
    帧长 = [144 * bitrate/frequency + padding]

    例如 : 位率为 64kbps ,频率为 4411kHz ,padding 为 1 时 , 帧长为 210 字节 。
    帧头后面是可变长度的附加信息 , 对于标准的MP3 文件来说 ,其长度是 32 字节 , 紧接其后的是压缩的声音数据 ,当解码器读到此时处就进行解码了 。
