frameworks/base/core/java/android/webkit
    HTML5VideoViewProxy.java

        HTML5VideoView.java <|-- HTML5VideoFullScreen.java  

        HTML5VideoInline.java <|-- HTML5VideoFullScreen.java 




WebViewCore.cpp
#if ENABLE(VIDEO)
void WebViewCore::enterFullscreenForVideoLayer(int layerId, const WTF::String& url)
{
    JNIEnv* env = JSC::Bindings::getJNIEnv();
    AutoJObject javaObject = m_javaGlue->object(env);
    if (!javaObject.get())
        return;
    jstring jUrlStr = wtfStringToJstring(env, url);
    env->CallVoidMethod(javaObject.get(), m_javaGlue->m_enterFullscreenForVideoLayer, layerId, jUrlStr);
    checkException(env);
}
#endif
    | JNI
    V
WebViewCore.java
    protected void enterFullscreenForVideoLayer(int layerId, String url) {
        Message message = Message.obtain(mWebView.mPrivateHandler,
                WebView.ENTER_FULLSCREEN_VIDEO, layerId, 0);
        message.obj = url;
        message.sendToTarget();
    }
        |
        V
WebView.java
    case ENTER_FULLSCREEN_VIDEO:
        int layerId = msg.arg1;
        String url = (String) msg.obj;
        mHTML5VideoViewProxy.enterFullScreenVideo(layerId, url);


