set ic
set aw
set ai
set expandtab tabstop=4
set shiftwidth=4
set ci
set hls
set incsearch
set showcmd
set nocompatible
set cscopequickfix=s-,c-,d-,i-,t-,e-

let Tlist_File_Fold_Auto_Close=1
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1
"let Tlist_Use_Right_Window=1

"let g:winManagerWindowLayout='FileExplorer|TagList'
"map <F3> :WMToggle<cr>
map <F4> :TlistToggle<CR>

map <F6> :bd<CR>
map <F7> :bp<CR>
map <F8> :bn<CR>

" select something and ctrl+c
set mouse=a
vmap <C-C> "+y

syntax on
colorscheme desert 
"colorscheme elflord
"colorscheme torte
set guifont=Andale\ Mono\ 13

" meta characters:
"\_s : match write character including \r and \n
"\{-} : like *, but in no-greedy mode


"show cscope find list
":cw 

"filetype plugin indent on
"set completeopt=longest,menu

"let g:SuperTabRetainCompletionType=2
"let g:SuperTabDefaultCompletionType="<C-X><C-O>"

"remove windows \r\n  
":%s/ctrl-v ctrl-m/\r/g !注意这里\r替换后值为0x0a
":%s/ctrl-v ctrl-m//g
    ":%s/ctrl-v ctrl-m/\n/g !注意，不能这样， \n替换后值为0x00
" 00D CR (Carriage Return)
" 00A LF (Line Feed)
" da rn

" 回车换行windows是"\r\n",unix只有"\n"
    " 如果用\n换行的文本用记事本打开时会没有换行,
    " 而用\r\n结尾的文件再linux的vi中显示时会将\r显示成^M
        " vim 现在会自动检测eof, 如果是\r\n，则认为文档是dos格式，不会显示^M
        " vim -b 则会完全显示

":cs find s keyword 等于ctrl-\s
":cs find t keyword 等于ctrl-\t; 全局搜索鼠标下的文字, 查jni比较有效

""""""""""""" My cscope/vim key mappings
"
" The following maps all invoke one of the following cscope search types:
"
"   's'   symbol: find all references to the token under cursor
"   'g'   global: find global definition(s) of the token under cursor
"   'c'   calls:  find all calls to the function name under cursor
"   't'   text:   find all instances of the text under cursor
"   'e'   egrep:  egrep search for the word under cursor
"   'f'   file:   open the filename under cursor
"   'i'   includes: find files that include the filename under cursor
"   'd'   called: find functions that function under cursor calls

"gvim tab
"gt = :tabn  go to next tab
"gT = :tabp  go to previous tab
":tabnew    create a new tab

":h tabnext

"log
"#define LOG_TAG ""
"#define LOG_NDEBUG 0
"#include <cutils/log.h>
"%s/^{/{\r    android_printLog(ANDROID_LOG_ERROR, LOG_TAG, "%s, %d\\n", __FUNCTION__, __LINE__);\r/

"java function log
"/ [a-zA-z]\+ *([^=<>!&()]*) *{
":%s/\( [a-zA-z]\+\)\( *([^=<>!&()]*) *{\)/\1\2\r    Log.v(LOGTAG, "enter\1()");/

"java function log
":%s/\( [a-zA-z]\+\)\( *([a-zA-z.,<> ]*\_s*[a-zA-z.,<> ]*)\_s*{\)/\1\2\rif(ENABLE_LOG) Log.v(LOGTAG, "enter\1()");/
":g/LOGTAG.*enter \(if\|catch\|synchronized\|Runnable\)()/d
":%s/\(\<new \+[a-zA-z]\+ *([^=<>!&()]*) *{\)\_s*Log.v(.*);/\1/
":wq!

" exceptions
"public ParcelFileDescriptor openFile(Uri uri, String mode) throws FileNotFoundException {

"private final static String LOGTAG = "";
"private final static boolean ENABLE_LOG = true;
"for i in `find . -name '*.java'`;do vim $i < /home/jiangrui/bin/java.log.vim;done


"批处理
"vim ./JILEventRecurrenceTypes.cpp.bk < gg
"gg
":%s/if/gg/g
":wq
"
"for i in `ls *.cpp`
"do
"echo $i
"vim $i < ./gg
"done

"private final static String LOGTAG = "DrmProvider";
